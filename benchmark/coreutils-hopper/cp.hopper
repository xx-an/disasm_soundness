
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/cp
        UUID: 1C6DA6BD-3698-2F25-F4A5-273C1B8C6761
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x18ae0[ (101088 bytes)
        ; File offset : [0; 101088[ (101088 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0xd0 ; '.'
0000000000000019         db  0x36 ; '6'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0xc8 ; '.'
0000000000000029         db  0x54 ; 'T'
000000000000002a         db  0x08 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0xe0 ; '.'
00000000000000d1         db  0x8a ; '.'
00000000000000d2         db  0x01 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0xe0 ; '.'
00000000000000d9         db  0x8a ; '.'
00000000000000da         db  0x01 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x30 ; '0'
00000000000000f1         db  0x95 ; '.'
00000000000000f2         db  0x01 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x30 ; '0'
00000000000000f9         db  0x95 ; '.'
00000000000000fa         db  0x21 ; '!'
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x30 ; '0'                                         ; DATA XREF=copy_internal+412, copy_internal+2693, samedir_template+25, strmode+116, quotearg_free+87, renameatu+297, renameatu+376, renameatu+466, same_nameat.part.0+51, same_nameat.part.0+108, utimecmpat+1202
0000000000000101         db  0x95 ; '.'
0000000000000102         db  0x21 ; '!'
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x70 ; 'p'
0000000000000109         db  0x0b ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'                                         ; DATA XREF=main+462
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0xe8 ; '.'                                         ; DATA XREF=fdutimens+13, fdutimens+816
0000000000000111         db  0x11 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x58 ; 'X'                                         ; DATA XREF=main+36, main+1568, utimecmpat+16, utimecmpat+344
0000000000000129         db  0x9a ; '.'
000000000000012a         db  0x01 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x58 ; 'X'                                         ; DATA XREF=force_symlinkat+16, force_symlinkat+194
0000000000000131         db  0x9a ; '.'
0000000000000132         db  0x21 ; '!'
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x58 ; 'X'                                         ; DATA XREF=same_nameat.part.0+17, same_nameat.part.0+198
0000000000000139         db  0x9a ; '.'
000000000000013a         db  0x21 ; '!'
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'                                         ; DATA XREF=renameatu+65
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'                                         ; DATA XREF=gen_tempname_len+43
0000000000000148         db  0xf0 ; '.'                                         ; DATA XREF=force_linkat+24, force_linkat+217, renameatu+28, renameatu+116
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'                                         ; DATA XREF=make_dir_parents_private+22
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'                                         ; DATA XREF=copy_internal+16504, try_file+2
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x60 ; '`'
0000000000000199         db  0x5c ; '\'
000000000000019a         db  0x01 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x60 ; '`'
00000000000001a1         db  0x5c ; '\'
00000000000001a2         db  0x01 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x60 ; '`'
00000000000001a9         db  0x5c ; '\'
00000000000001aa         db  0x01 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x6c ; 'l'
00000000000001b1         db  0x07 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'                                         ; DATA XREF=copy_internal+11791, copy_internal+16240
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x6c ; 'l'
00000000000001b9         db  0x07 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'                                         ; DATA XREF=make_dir_parents_private+857, make_dir_parents_private+862, make_dir_parents_private+888, make_dir_parents_private+893, make_dir_parents_private+900, set_owner+295, copy_internal+7345, copy_internal+7350, copy_internal+7367, try_dir
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'                                         ; DATA XREF=make_dir_parents_private+738, copy_internal+11796, copy_internal+11830
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=copy_internal+12037, extent_scan_read+69, strmode+304
0000000000000201         db  0xe5 ; '.'                                         ; DATA XREF=copy_internal+11874
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x30 ; '0'
0000000000000209         db  0x95 ; '.'
000000000000020a         db  0x01 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x30 ; '0'
0000000000000211         db  0x95 ; '.'
0000000000000212         db  0x21 ; '!'
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x30 ; '0'
0000000000000219         db  0x95 ; '.'
000000000000021a         db  0x21 ; '!'
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xd0 ; '.'
0000000000000221         db  0x0a ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xd0 ; '.'
0000000000000229         db  0x0a ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x1c ; '.'
0000000000000285         db  0x6d ; 'm'
0000000000000286         db  0xa6 ; '.'
0000000000000287         db  0xbd ; '.'
0000000000000288         db  0x36 ; '6'
0000000000000289         db  0x98 ; '.'
000000000000028a         db  0x2f ; '/'
000000000000028b         db  0x25 ; '%'
000000000000028c         db  0xf4 ; '.'
000000000000028d         db  0xa5 ; '.'
000000000000028e         db  0x27 ; '''
000000000000028f         db  0x3c ; '<'
0000000000000290         db  0x1b ; '.'
0000000000000291         db  0x8c ; '.'
0000000000000292         db  0x67 ; 'g'
0000000000000293         db  0x61 ; 'a'
0000000000000294         db  0x67 ; 'g'
0000000000000295         db  0x35 ; '5'
0000000000000296         db  0xa6 ; '.'
0000000000000297         db  0x9a ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x74 ; 't'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x74 ; 't'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x75 ; 'u'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x7b ; '{'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x32 ; '2'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0xb3 ; '.'
00000000000002dd         db  0xa2 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0xe98[ (3000 bytes)
        ; File offset : [736; 3736[ (3000 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x6f ; 'o'
00000000000002f9         db  0x02 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x1c ; '.'
0000000000000311         db  0x04 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x9f ; '.'
0000000000000329         db  0x01 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0xe5 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0xaf ; '.'
0000000000000359         db  0x01 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0xbd ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x4d ; 'M'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'                                         ; DATA XREF=copy_internal+19
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xab ; '.'
00000000000003a1         db  0x04 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x20 ; ' '
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xf1 ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x12 ; '.'
00000000000003d1         db  0x00 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x22 ; '"'
00000000000003e9         db  0x03 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x98 ; '.'                                         ; DATA XREF=write_zeros+142, strmode+235, rpl_fcntl+288
0000000000000401         db  0x00 ; '.'                                         ; DATA XREF=areadlink_with_size+4, areadlink_with_size+46, rpl_fcntl+272
0000000000000402         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+280
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'                                         ; DATA XREF=opendir_safer+55, rpl_fcntl+81, rpl_fcntl+123, rpl_fcntl+264
0000000000000407         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+256
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+336
000000000000040a         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+350
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0xcd ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x80 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x59 ; 'Y'
0000000000000449         db  0x03 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x9c ; '.'
0000000000000461         db  0x02 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x95 ; '.'
0000000000000479         db  0x03 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x14 ; '.'
0000000000000491         db  0x03 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0xdd ; '.'
00000000000004a9         db  0x02 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0xf7 ; '.'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x89 ; '.'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0xb8 ; '.'
00000000000004f1         db  0x03 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0xfd ; '.'
0000000000000509         db  0x01 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x13 ; '.'
0000000000000521         db  0x02 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x3e ; '>'
0000000000000539         db  0x02 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0xb4 ; '.'
0000000000000551         db  0x03 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0xf4 ; '.'
0000000000000569         db  0x03 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0xa9 ; '.'
0000000000000581         db  0x01 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x76 ; 'v'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x35 ; '5'
00000000000005b1         db  0x01 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x82 ; '.'
00000000000005c9         db  0x01 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0xb4 ; '.'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x9b ; '.'
00000000000005f9         db  0x03 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0xa3 ; '.'
0000000000000611         db  0x00 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x95 ; '.'
0000000000000629         db  0x02 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0xa5 ; '.'
0000000000000641         db  0x02 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x3f ; '?'
0000000000000659         db  0x00 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x2d ; '-'
0000000000000671         db  0x03 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0xc3 ; '.'
0000000000000689         db  0x03 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x02 ; '.'
00000000000006a1         db  0x04 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x66 ; 'f'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x55 ; 'U'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x06 ; '.'
00000000000006e9         db  0x02 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0xe3 ; '.'
0000000000000701         db  0x02 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x1d ; '.'
0000000000000719         db  0x01 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x98 ; '.'
0000000000000731         db  0x01 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x0c ; '.'
0000000000000749         db  0x03 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x8f ; '.'
0000000000000761         db  0x02 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x5f ; '_'
0000000000000779         db  0x03 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x14 ; '.'
0000000000000791         db  0x02 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0xdb ; '.'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0xfe ; '.'
00000000000007c1         db  0x00 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x89 ; '.'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x53 ; 'S'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'                                         ; DATA XREF=isaac_refill+74, isaac_refill+108, isaac_refill+141, isaac_refill+175, isaac_refill+207, isaac_refill+234, isaac_refill+275, isaac_refill+311, isaac_refill+378, isaac_refill+412, isaac_refill+445
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'                                         ; DATA XREF=randread_new+296, randread_new+495, randread_new+648, randread_new+735, randread_new+786, randread+200, randread+223
0000000000000800         db  0x00 ; '.'                                         ; DATA XREF=strmode+166, randread_new+250, randread_new+260, randread_new+431, randread_new+517, randread+165, randread+245, randread+258, randread+312, randread+323, randread+336
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0xc0 ; '.'
0000000000000809         db  0x01 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0xdc ; '.'
0000000000000821         db  0x03 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x12 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0xc5 ; '.'
0000000000000839         db  0x01 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x2b ; '+'
0000000000000851         db  0x01 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x12 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x0d ; '.'
0000000000000869         db  0x04 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x12 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0xca ; '.'
0000000000000881         db  0x02 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x12 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x69 ; 'i'
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x12 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x00 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0xd1 ; '.'
00000000000008b1         db  0x02 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x12 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x00 ; '.'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0xd5 ; '.'
00000000000008c9         db  0x03 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x12 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x00 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0xee ; '.'
00000000000008e1         db  0x03 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x12 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x00 ; '.'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0xfc ; '.'
00000000000008f9         db  0x01 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x12 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0x00 ; '.'
0000000000000901         db  0x00 ; '.'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x00 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x6e ; 'n'
0000000000000911         db  0x00 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x12 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0x00 ; '.'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x85 ; '.'
0000000000000929         db  0x03 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x12 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0x00 ; '.'
0000000000000931         db  0x00 ; '.'
0000000000000932         db  0x00 ; '.'
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x00 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0xce ; '.'
0000000000000941         db  0x03 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x12 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x00 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x00 ; '.'
0000000000000949         db  0x00 ; '.'
000000000000094a         db  0x00 ; '.'
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x00 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0xc7 ; '.'
0000000000000959         db  0x04 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x20 ; ' '
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x00 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0x00 ; '.'
0000000000000961         db  0x00 ; '.'
0000000000000962         db  0x00 ; '.'
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x00 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0x36 ; '6'
0000000000000971         db  0x02 ; '.'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x12 ; '.'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x00 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0x00 ; '.'
0000000000000979         db  0x00 ; '.'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x00 ; '.'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x00 ; '.'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x00 ; '.'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0x0c ; '.'
0000000000000989         db  0x02 ; '.'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x12 ; '.'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x00 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x00 ; '.'
0000000000000991         db  0x00 ; '.'
0000000000000992         db  0x00 ; '.'
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x00 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x00 ; '.'
0000000000000999         db  0x00 ; '.'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0xb1 ; '.'
00000000000009a1         db  0x02 ; '.'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x12 ; '.'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x00 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x00 ; '.'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x00 ; '.'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x00 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0xc3 ; '.'
00000000000009b9         db  0x02 ; '.'
00000000000009ba         db  0x00 ; '.'
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x12 ; '.'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x00 ; '.'
00000000000009bf         db  0x00 ; '.'
00000000000009c0         db  0x00 ; '.'
00000000000009c1         db  0x00 ; '.'
00000000000009c2         db  0x00 ; '.'
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x00 ; '.'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x00 ; '.'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x00 ; '.'
00000000000009c9         db  0x00 ; '.'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x00 ; '.'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x00 ; '.'
00000000000009cf         db  0x00 ; '.'
00000000000009d0         db  0x4e ; 'N'
00000000000009d1         db  0x02 ; '.'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x12 ; '.'
00000000000009d5         db  0x00 ; '.'
00000000000009d6         db  0x00 ; '.'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0x00 ; '.'
00000000000009d9         db  0x00 ; '.'
00000000000009da         db  0x00 ; '.'
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x00 ; '.'
00000000000009dd         db  0x00 ; '.'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x00 ; '.'
00000000000009e0         db  0x00 ; '.'
00000000000009e1         db  0x00 ; '.'
00000000000009e2         db  0x00 ; '.'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x00 ; '.'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x00 ; '.'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0xac ; '.'
00000000000009e9         db  0x03 ; '.'
00000000000009ea         db  0x00 ; '.'
00000000000009eb         db  0x00 ; '.'
00000000000009ec         db  0x12 ; '.'
00000000000009ed         db  0x00 ; '.'
00000000000009ee         db  0x00 ; '.'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0x00 ; '.'
00000000000009f1         db  0x00 ; '.'
00000000000009f2         db  0x00 ; '.'
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x00 ; '.'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x00 ; '.'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0x00 ; '.'
00000000000009f9         db  0x00 ; '.'
00000000000009fa         db  0x00 ; '.'
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x00 ; '.'
00000000000009fd         db  0x00 ; '.'
00000000000009fe         db  0x00 ; '.'
00000000000009ff         db  0x00 ; '.'
0000000000000a00         db  0x2d ; '-'
0000000000000a01         db  0x00 ; '.'
0000000000000a02         db  0x00 ; '.'
0000000000000a03         db  0x00 ; '.'
0000000000000a04         db  0x12 ; '.'
0000000000000a05         db  0x00 ; '.'
0000000000000a06         db  0x00 ; '.'
0000000000000a07         db  0x00 ; '.'
0000000000000a08         db  0x00 ; '.'
0000000000000a09         db  0x00 ; '.'
0000000000000a0a         db  0x00 ; '.'
0000000000000a0b         db  0x00 ; '.'
0000000000000a0c         db  0x00 ; '.'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x00 ; '.'
0000000000000a0f         db  0x00 ; '.'
0000000000000a10         db  0x00 ; '.'
0000000000000a11         db  0x00 ; '.'
0000000000000a12         db  0x00 ; '.'
0000000000000a13         db  0x00 ; '.'
0000000000000a14         db  0x00 ; '.'
0000000000000a15         db  0x00 ; '.'
0000000000000a16         db  0x00 ; '.'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x2f ; '/'
0000000000000a19         db  0x02 ; '.'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x00 ; '.'
0000000000000a1c         db  0x12 ; '.'
0000000000000a1d         db  0x00 ; '.'
0000000000000a1e         db  0x00 ; '.'
0000000000000a1f         db  0x00 ; '.'
0000000000000a20         db  0x00 ; '.'
0000000000000a21         db  0x00 ; '.'
0000000000000a22         db  0x00 ; '.'
0000000000000a23         db  0x00 ; '.'
0000000000000a24         db  0x00 ; '.'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x00 ; '.'
0000000000000a27         db  0x00 ; '.'
0000000000000a28         db  0x00 ; '.'
0000000000000a29         db  0x00 ; '.'
0000000000000a2a         db  0x00 ; '.'
0000000000000a2b         db  0x00 ; '.'
0000000000000a2c         db  0x00 ; '.'
0000000000000a2d         db  0x00 ; '.'
0000000000000a2e         db  0x00 ; '.'
0000000000000a2f         db  0x00 ; '.'
0000000000000a30         db  0x0b ; '.'
0000000000000a31         db  0x00 ; '.'
0000000000000a32         db  0x00 ; '.'
0000000000000a33         db  0x00 ; '.'
0000000000000a34         db  0x12 ; '.'
0000000000000a35         db  0x00 ; '.'
0000000000000a36         db  0x00 ; '.'
0000000000000a37         db  0x00 ; '.'
0000000000000a38         db  0x00 ; '.'
0000000000000a39         db  0x00 ; '.'
0000000000000a3a         db  0x00 ; '.'
0000000000000a3b         db  0x00 ; '.'
0000000000000a3c         db  0x00 ; '.'
0000000000000a3d         db  0x00 ; '.'
0000000000000a3e         db  0x00 ; '.'
0000000000000a3f         db  0x00 ; '.'
0000000000000a40         db  0x00 ; '.'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x00 ; '.'
0000000000000a43         db  0x00 ; '.'
0000000000000a44         db  0x00 ; '.'
0000000000000a45         db  0x00 ; '.'
0000000000000a46         db  0x00 ; '.'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0x55 ; 'U'
0000000000000a49         db  0x02 ; '.'
0000000000000a4a         db  0x00 ; '.'
0000000000000a4b         db  0x00 ; '.'
0000000000000a4c         db  0x12 ; '.'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x00 ; '.'
0000000000000a4f         db  0x00 ; '.'
0000000000000a50         db  0x00 ; '.'
0000000000000a51         db  0x00 ; '.'
0000000000000a52         db  0x00 ; '.'
0000000000000a53         db  0x00 ; '.'
0000000000000a54         db  0x00 ; '.'
0000000000000a55         db  0x00 ; '.'
0000000000000a56         db  0x00 ; '.'
0000000000000a57         db  0x00 ; '.'
0000000000000a58         db  0x00 ; '.'
0000000000000a59         db  0x00 ; '.'
0000000000000a5a         db  0x00 ; '.'
0000000000000a5b         db  0x00 ; '.'
0000000000000a5c         db  0x00 ; '.'
0000000000000a5d         db  0x00 ; '.'
0000000000000a5e         db  0x00 ; '.'
0000000000000a5f         db  0x00 ; '.'
0000000000000a60         db  0xba ; '.'
0000000000000a61         db  0x02 ; '.'
0000000000000a62         db  0x00 ; '.'
0000000000000a63         db  0x00 ; '.'
0000000000000a64         db  0x12 ; '.'
0000000000000a65         db  0x00 ; '.'
0000000000000a66         db  0x00 ; '.'
0000000000000a67         db  0x00 ; '.'
0000000000000a68         db  0x00 ; '.'
0000000000000a69         db  0x00 ; '.'
0000000000000a6a         db  0x00 ; '.'
0000000000000a6b         db  0x00 ; '.'
0000000000000a6c         db  0x00 ; '.'
0000000000000a6d         db  0x00 ; '.'
0000000000000a6e         db  0x00 ; '.'
0000000000000a6f         db  0x00 ; '.'
0000000000000a70         db  0x00 ; '.'
0000000000000a71         db  0x00 ; '.'
0000000000000a72         db  0x00 ; '.'
0000000000000a73         db  0x00 ; '.'
0000000000000a74         db  0x00 ; '.'
0000000000000a75         db  0x00 ; '.'
0000000000000a76         db  0x00 ; '.'
0000000000000a77         db  0x00 ; '.'
0000000000000a78         db  0x4c ; 'L'
0000000000000a79         db  0x01 ; '.'
0000000000000a7a         db  0x00 ; '.'
0000000000000a7b         db  0x00 ; '.'
0000000000000a7c         db  0x12 ; '.'
0000000000000a7d         db  0x00 ; '.'
0000000000000a7e         db  0x00 ; '.'
0000000000000a7f         db  0x00 ; '.'
0000000000000a80         db  0x00 ; '.'
0000000000000a81         db  0x00 ; '.'
0000000000000a82         db  0x00 ; '.'
0000000000000a83         db  0x00 ; '.'
0000000000000a84         db  0x00 ; '.'
0000000000000a85         db  0x00 ; '.'
0000000000000a86         db  0x00 ; '.'
0000000000000a87         db  0x00 ; '.'
0000000000000a88         db  0x00 ; '.'
0000000000000a89         db  0x00 ; '.'
0000000000000a8a         db  0x00 ; '.'
0000000000000a8b         db  0x00 ; '.'
0000000000000a8c         db  0x00 ; '.'
0000000000000a8d         db  0x00 ; '.'
0000000000000a8e         db  0x00 ; '.'
0000000000000a8f         db  0x00 ; '.'
0000000000000a90         db  0x7d ; '}'
0000000000000a91         db  0x02 ; '.'
0000000000000a92         db  0x00 ; '.'
0000000000000a93         db  0x00 ; '.'
0000000000000a94         db  0x12 ; '.'
0000000000000a95         db  0x00 ; '.'
0000000000000a96         db  0x00 ; '.'
0000000000000a97         db  0x00 ; '.'
0000000000000a98         db  0x00 ; '.'
0000000000000a99         db  0x00 ; '.'
0000000000000a9a         db  0x00 ; '.'
0000000000000a9b         db  0x00 ; '.'
0000000000000a9c         db  0x00 ; '.'
0000000000000a9d         db  0x00 ; '.'
0000000000000a9e         db  0x00 ; '.'
0000000000000a9f         db  0x00 ; '.'
0000000000000aa0         db  0x00 ; '.'
0000000000000aa1         db  0x00 ; '.'
0000000000000aa2         db  0x00 ; '.'
0000000000000aa3         db  0x00 ; '.'
0000000000000aa4         db  0x00 ; '.'
0000000000000aa5         db  0x00 ; '.'
0000000000000aa6         db  0x00 ; '.'
0000000000000aa7         db  0x00 ; '.'
0000000000000aa8         db  0xd3 ; '.'
0000000000000aa9         db  0x00 ; '.'
0000000000000aaa         db  0x00 ; '.'
0000000000000aab         db  0x00 ; '.'
0000000000000aac         db  0x12 ; '.'
0000000000000aad         db  0x00 ; '.'
0000000000000aae         db  0x00 ; '.'
0000000000000aaf         db  0x00 ; '.'
0000000000000ab0         db  0x00 ; '.'
0000000000000ab1         db  0x00 ; '.'
0000000000000ab2         db  0x00 ; '.'
0000000000000ab3         db  0x00 ; '.'
0000000000000ab4         db  0x00 ; '.'
0000000000000ab5         db  0x00 ; '.'
0000000000000ab6         db  0x00 ; '.'
0000000000000ab7         db  0x00 ; '.'
0000000000000ab8         db  0x00 ; '.'
0000000000000ab9         db  0x00 ; '.'
0000000000000aba         db  0x00 ; '.'
0000000000000abb         db  0x00 ; '.'
0000000000000abc         db  0x00 ; '.'
0000000000000abd         db  0x00 ; '.'
0000000000000abe         db  0x00 ; '.'
0000000000000abf         db  0x00 ; '.'
0000000000000ac0         db  0x52 ; 'R'
0000000000000ac1         db  0x03 ; '.'
0000000000000ac2         db  0x00 ; '.'
0000000000000ac3         db  0x00 ; '.'
0000000000000ac4         db  0x12 ; '.'
0000000000000ac5         db  0x00 ; '.'
0000000000000ac6         db  0x00 ; '.'
0000000000000ac7         db  0x00 ; '.'
0000000000000ac8         db  0x00 ; '.'
0000000000000ac9         db  0x00 ; '.'
0000000000000aca         db  0x00 ; '.'
0000000000000acb         db  0x00 ; '.'
0000000000000acc         db  0x00 ; '.'
0000000000000acd         db  0x00 ; '.'
0000000000000ace         db  0x00 ; '.'
0000000000000acf         db  0x00 ; '.'
0000000000000ad0         db  0x00 ; '.'
0000000000000ad1         db  0x00 ; '.'
0000000000000ad2         db  0x00 ; '.'
0000000000000ad3         db  0x00 ; '.'
0000000000000ad4         db  0x00 ; '.'
0000000000000ad5         db  0x00 ; '.'
0000000000000ad6         db  0x00 ; '.'
0000000000000ad7         db  0x00 ; '.'
0000000000000ad8         db  0x28 ; '('
0000000000000ad9         db  0x02 ; '.'
0000000000000ada         db  0x00 ; '.'
0000000000000adb         db  0x00 ; '.'
0000000000000adc         db  0x12 ; '.'
0000000000000add         db  0x00 ; '.'
0000000000000ade         db  0x00 ; '.'
0000000000000adf         db  0x00 ; '.'
0000000000000ae0         db  0x00 ; '.'
0000000000000ae1         db  0x00 ; '.'
0000000000000ae2         db  0x00 ; '.'
0000000000000ae3         db  0x00 ; '.'
0000000000000ae4         db  0x00 ; '.'
0000000000000ae5         db  0x00 ; '.'
0000000000000ae6         db  0x00 ; '.'
0000000000000ae7         db  0x00 ; '.'
0000000000000ae8         db  0x00 ; '.'
0000000000000ae9         db  0x00 ; '.'
0000000000000aea         db  0x00 ; '.'
0000000000000aeb         db  0x00 ; '.'
0000000000000aec         db  0x00 ; '.'
0000000000000aed         db  0x00 ; '.'
0000000000000aee         db  0x00 ; '.'
0000000000000aef         db  0x00 ; '.'
0000000000000af0         db  0x35 ; '5'
0000000000000af1         db  0x00 ; '.'
0000000000000af2         db  0x00 ; '.'
0000000000000af3         db  0x00 ; '.'
0000000000000af4         db  0x12 ; '.'
0000000000000af5         db  0x00 ; '.'
0000000000000af6         db  0x00 ; '.'
0000000000000af7         db  0x00 ; '.'
0000000000000af8         db  0x00 ; '.'
0000000000000af9         db  0x00 ; '.'
0000000000000afa         db  0x00 ; '.'
0000000000000afb         db  0x00 ; '.'
0000000000000afc         db  0x00 ; '.'
0000000000000afd         db  0x00 ; '.'
0000000000000afe         db  0x00 ; '.'
0000000000000aff         db  0x00 ; '.'
0000000000000b00         db  0x00 ; '.'
0000000000000b01         db  0x00 ; '.'
0000000000000b02         db  0x00 ; '.'
0000000000000b03         db  0x00 ; '.'
0000000000000b04         db  0x00 ; '.'
0000000000000b05         db  0x00 ; '.'
0000000000000b06         db  0x00 ; '.'
0000000000000b07         db  0x00 ; '.'
0000000000000b08         db  0x20 ; ' '
0000000000000b09         db  0x00 ; '.'
0000000000000b0a         db  0x00 ; '.'
0000000000000b0b         db  0x00 ; '.'
0000000000000b0c         db  0x12 ; '.'
0000000000000b0d         db  0x00 ; '.'
0000000000000b0e         db  0x00 ; '.'
0000000000000b0f         db  0x00 ; '.'
0000000000000b10         db  0x00 ; '.'
0000000000000b11         db  0x00 ; '.'
0000000000000b12         db  0x00 ; '.'
0000000000000b13         db  0x00 ; '.'
0000000000000b14         db  0x00 ; '.'
0000000000000b15         db  0x00 ; '.'
0000000000000b16         db  0x00 ; '.'
0000000000000b17         db  0x00 ; '.'
0000000000000b18         db  0x00 ; '.'
0000000000000b19         db  0x00 ; '.'
0000000000000b1a         db  0x00 ; '.'
0000000000000b1b         db  0x00 ; '.'
0000000000000b1c         db  0x00 ; '.'
0000000000000b1d         db  0x00 ; '.'
0000000000000b1e         db  0x00 ; '.'
0000000000000b1f         db  0x00 ; '.'
0000000000000b20         db  0x19 ; '.'
0000000000000b21         db  0x00 ; '.'
0000000000000b22         db  0x00 ; '.'
0000000000000b23         db  0x00 ; '.'
0000000000000b24         db  0x12 ; '.'
0000000000000b25         db  0x00 ; '.'
0000000000000b26         db  0x00 ; '.'
0000000000000b27         db  0x00 ; '.'
0000000000000b28         db  0x00 ; '.'
0000000000000b29         db  0x00 ; '.'
0000000000000b2a         db  0x00 ; '.'
0000000000000b2b         db  0x00 ; '.'
0000000000000b2c         db  0x00 ; '.'
0000000000000b2d         db  0x00 ; '.'
0000000000000b2e         db  0x00 ; '.'
0000000000000b2f         db  0x00 ; '.'
0000000000000b30         db  0x00 ; '.'
0000000000000b31         db  0x00 ; '.'
0000000000000b32         db  0x00 ; '.'
0000000000000b33         db  0x00 ; '.'
0000000000000b34         db  0x00 ; '.'
0000000000000b35         db  0x00 ; '.'
0000000000000b36         db  0x00 ; '.'
0000000000000b37         db  0x00 ; '.'
0000000000000b38         db  0x8d ; '.'
0000000000000b39         db  0x03 ; '.'
0000000000000b3a         db  0x00 ; '.'
0000000000000b3b         db  0x00 ; '.'
0000000000000b3c         db  0x12 ; '.'
0000000000000b3d         db  0x00 ; '.'
0000000000000b3e         db  0x00 ; '.'
0000000000000b3f         db  0x00 ; '.'
0000000000000b40         db  0x00 ; '.'
0000000000000b41         db  0x00 ; '.'
0000000000000b42         db  0x00 ; '.'
0000000000000b43         db  0x00 ; '.'
0000000000000b44         db  0x00 ; '.'
0000000000000b45         db  0x00 ; '.'
0000000000000b46         db  0x00 ; '.'
0000000000000b47         db  0x00 ; '.'
0000000000000b48         db  0x00 ; '.'
0000000000000b49         db  0x00 ; '.'
0000000000000b4a         db  0x00 ; '.'
0000000000000b4b         db  0x00 ; '.'
0000000000000b4c         db  0x00 ; '.'
0000000000000b4d         db  0x00 ; '.'
0000000000000b4e         db  0x00 ; '.'
0000000000000b4f         db  0x00 ; '.'
0000000000000b50         db  0x1a ; '.'
0000000000000b51         db  0x00 ; '.'
0000000000000b52         db  0x00 ; '.'
0000000000000b53         db  0x00 ; '.'
0000000000000b54         db  0x12 ; '.'
0000000000000b55         db  0x00 ; '.'
0000000000000b56         db  0x00 ; '.'
0000000000000b57         db  0x00 ; '.'
0000000000000b58         db  0x00 ; '.'
0000000000000b59         db  0x00 ; '.'
0000000000000b5a         db  0x00 ; '.'
0000000000000b5b         db  0x00 ; '.'
0000000000000b5c         db  0x00 ; '.'
0000000000000b5d         db  0x00 ; '.'
0000000000000b5e         db  0x00 ; '.'
0000000000000b5f         db  0x00 ; '.'
0000000000000b60         db  0x00 ; '.'
0000000000000b61         db  0x00 ; '.'
0000000000000b62         db  0x00 ; '.'
0000000000000b63         db  0x00 ; '.'
0000000000000b64         db  0x00 ; '.'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x00 ; '.'
0000000000000b67         db  0x00 ; '.'
0000000000000b68         db  0xd8 ; '.'
0000000000000b69         db  0x01 ; '.'
0000000000000b6a         db  0x00 ; '.'
0000000000000b6b         db  0x00 ; '.'
0000000000000b6c         db  0x12 ; '.'
0000000000000b6d         db  0x00 ; '.'
0000000000000b6e         db  0x00 ; '.'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0x00 ; '.'
0000000000000b71         db  0x00 ; '.'
0000000000000b72         db  0x00 ; '.'
0000000000000b73         db  0x00 ; '.'
0000000000000b74         db  0x00 ; '.'
0000000000000b75         db  0x00 ; '.'
0000000000000b76         db  0x00 ; '.'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x00 ; '.'
0000000000000b79         db  0x00 ; '.'
0000000000000b7a         db  0x00 ; '.'
0000000000000b7b         db  0x00 ; '.'
0000000000000b7c         db  0x00 ; '.'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x00 ; '.'
0000000000000b7f         db  0x00 ; '.'
0000000000000b80         db  0x92 ; '.'
0000000000000b81         db  0x00 ; '.'
0000000000000b82         db  0x00 ; '.'
0000000000000b83         db  0x00 ; '.'
0000000000000b84         db  0x12 ; '.'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x00 ; '.'                                         ; DATA XREF=copy+347
0000000000000b87         db  0x00 ; '.'                                         ; DATA XREF=copy+316
0000000000000b88         db  0x00 ; '.'                                         ; DATA XREF=copy+285
0000000000000b89         db  0x00 ; '.'                                         ; DATA XREF=copy+254
0000000000000b8a         db  0x00 ; '.'                                         ; DATA XREF=copy+187
0000000000000b8b         db  0x00 ; '.'
0000000000000b8c         db  0x00 ; '.'
0000000000000b8d         db  0x00 ; '.'                                         ; DATA XREF=copy+218
0000000000000b8e         db  0x00 ; '.'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x00 ; '.'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x00 ; '.'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x00 ; '.'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x00 ; '.'
0000000000000b97         db  0x00 ; '.'
0000000000000b98         db  0xf7 ; '.'
0000000000000b99         db  0x02 ; '.'
0000000000000b9a         db  0x00 ; '.'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x12 ; '.'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x00 ; '.'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x00 ; '.'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x00 ; '.'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x00 ; '.'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x00 ; '.'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x00 ; '.'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x00 ; '.'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x00 ; '.'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x00 ; '.'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x54 ; 'T'
0000000000000bb1         db  0x03 ; '.'
0000000000000bb2         db  0x00 ; '.'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x12 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x00 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x00 ; '.'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x00 ; '.'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x00 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x00 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x00 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x00 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x00 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x00 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0xfb ; '.'
0000000000000bc9         db  0x03 ; '.'
0000000000000bca         db  0x00 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x12 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x00 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x00 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x00 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x00 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x00 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x00 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x00 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x00 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x00 ; '.'
0000000000000bdf         db  0x00 ; '.'
0000000000000be0         db  0xee ; '.'
0000000000000be1         db  0x01 ; '.'
0000000000000be2         db  0x00 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x12 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x00 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x00 ; '.'
0000000000000be9         db  0x00 ; '.'
0000000000000bea         db  0x00 ; '.'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x00 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x00 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x00 ; '.'
0000000000000bf1         db  0x00 ; '.'
0000000000000bf2         db  0x00 ; '.'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x00 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x00 ; '.'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x47 ; 'G'
0000000000000bf9         db  0x00 ; '.'
0000000000000bfa         db  0x00 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x12 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x00 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x00 ; '.'
0000000000000c01         db  0x00 ; '.'
0000000000000c02         db  0x00 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x00 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x00 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x00 ; '.'
0000000000000c09         db  0x00 ; '.'
0000000000000c0a         db  0x00 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x00 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x00 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0xf0 ; '.'
0000000000000c11         db  0x02 ; '.'
0000000000000c12         db  0x00 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x12 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x00 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x00 ; '.'
0000000000000c19         db  0x00 ; '.'
0000000000000c1a         db  0x00 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x00 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x00 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x00 ; '.'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x00 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x00 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x00 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x3c ; '<'
0000000000000c29         db  0x02 ; '.'
0000000000000c2a         db  0x00 ; '.'
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x12 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x00 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x00 ; '.'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x00 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x00 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x00 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x00 ; '.'
0000000000000c39         db  0x00 ; '.'
0000000000000c3a         db  0x00 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x00 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x79 ; 'y'
0000000000000c41         db  0x01 ; '.'
0000000000000c42         db  0x00 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x12 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x00 ; '.'
0000000000000c49         db  0x00 ; '.'
0000000000000c4a         db  0x00 ; '.'
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x00 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x00 ; '.'
0000000000000c51         db  0x00 ; '.'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x00 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x1a ; '.'
0000000000000c59         db  0x02 ; '.'
0000000000000c5a         db  0x00 ; '.'
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x12 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x00 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x00 ; '.'
0000000000000c61         db  0x00 ; '.'
0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x00 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x00 ; '.'
0000000000000c69         db  0x00 ; '.'
0000000000000c6a         db  0x00 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x3c ; '<'
0000000000000c71         db  0x04 ; '.'
0000000000000c72         db  0x00 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x12 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x00 ; '.'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x00 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x00 ; '.'
0000000000000c81         db  0x00 ; '.'
0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x00 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x70 ; 'p'
0000000000000c89         db  0x01 ; '.'
0000000000000c8a         db  0x00 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x12 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x00 ; '.'
0000000000000c91         db  0x00 ; '.'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x00 ; '.'
0000000000000c99         db  0x00 ; '.'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0xcc ; '.'
0000000000000ca1         db  0x01 ; '.'
0000000000000ca2         db  0x00 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x12 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x00 ; '.'
0000000000000ca9         db  0x00 ; '.'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x00 ; '.'
0000000000000cb1         db  0x00 ; '.'
0000000000000cb2         db  0x00 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x61 ; 'a'
0000000000000cb9         db  0x01 ; '.'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x12 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x00 ; '.'
0000000000000cc1         db  0x00 ; '.'
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x00 ; '.'
0000000000000cc9         db  0x00 ; '.'
0000000000000cca         db  0x00 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0xf2 ; '.'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x00 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x12 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x00 ; '.'
0000000000000cd9         db  0x00 ; '.'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x00 ; '.'
0000000000000ce1         db  0x00 ; '.'
0000000000000ce2         db  0x00 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0xdc ; '.'
0000000000000ce9         db  0x02 ; '.'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x12 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x00 ; '.'
0000000000000cf1         db  0x00 ; '.'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x00 ; '.'
0000000000000cf9         db  0x00 ; '.'
0000000000000cfa         db  0x00 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0xe0 ; '.'
0000000000000d01         db  0x01 ; '.'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x12 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x00 ; '.'
0000000000000d09         db  0x00 ; '.'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x00 ; '.'
0000000000000d11         db  0x00 ; '.'
0000000000000d12         db  0x00 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0xd6 ; '.'
0000000000000d19         db  0x04 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x20 ; ' '
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x00 ; '.'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x00 ; '.'
0000000000000d29         db  0x00 ; '.'
0000000000000d2a         db  0x00 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x46 ; 'F'
0000000000000d31         db  0x02 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x12 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x00 ; '.'
0000000000000d39         db  0x00 ; '.'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x00 ; '.'
0000000000000d41         db  0x00 ; '.'
0000000000000d42         db  0x00 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x25 ; '%'
0000000000000d49         db  0x02 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x12 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x00 ; '.'
0000000000000d51         db  0x00 ; '.'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x00 ; '.'
0000000000000d59         db  0x00 ; '.'
0000000000000d5a         db  0x00 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0xc4 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x12 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x00 ; '.'
0000000000000d69         db  0x00 ; '.'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x00 ; '.'
0000000000000d71         db  0x00 ; '.'
0000000000000d72         db  0x00 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x76 ; 'v'
0000000000000d79         db  0x03 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x22 ; '"'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x00 ; '.'
0000000000000d81         db  0x00 ; '.'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x00 ; '.'
0000000000000d89         db  0x00 ; '.'
0000000000000d8a         db  0x00 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0xa2 ; '.'
0000000000000d91         db  0x03 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x12 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x00 ; '.'
0000000000000d99         db  0x00 ; '.'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x00 ; '.'
0000000000000da1         db  0x00 ; '.'
0000000000000da2         db  0x00 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x61 ; 'a'
0000000000000da9         db  0x02 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x12 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x00 ; '.'
0000000000000db1         db  0x00 ; '.'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x00 ; '.'
0000000000000db9         db  0x00 ; '.'
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0xf5 ; '.'
0000000000000dc1         db  0x01 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x11 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x19 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0xa8 ; '.'
0000000000000dc9         db  0xa0 ; '.'
0000000000000dca         db  0x21 ; '!'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x08 ; '.'
0000000000000dd1         db  0x00 ; '.'
0000000000000dd2         db  0x00 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x21 ; '!'
0000000000000dd9         db  0x04 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x11 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x19 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0xa0 ; '.'
0000000000000de1         db  0xa0 ; '.'
0000000000000de2         db  0x21 ; '!'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x08 ; '.'
0000000000000de9         db  0x00 ; '.'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0xeb ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x11 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x19 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0xb0 ; '.'
0000000000000df9         db  0xa0 ; '.'
0000000000000dfa         db  0x21 ; '!'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x08 ; '.'
0000000000000e01         db  0x00 ; '.'
0000000000000e02         db  0x00 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x05 ; '.'
0000000000000e09         db  0x01 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x21 ; '!'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x19 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0xc8 ; '.'
0000000000000e11         db  0xa0 ; '.'
0000000000000e12         db  0x21 ; '!'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x08 ; '.'
0000000000000e19         db  0x00 ; '.'
0000000000000e1a         db  0x00 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x2c ; ','
0000000000000e21         db  0x04 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x11 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x19 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0xc8 ; '.'
0000000000000e29         db  0xa0 ; '.'
0000000000000e2a         db  0x21 ; '!'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x08 ; '.'
0000000000000e31         db  0x00 ; '.'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x34 ; '4'
0000000000000e39         db  0x03 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x21 ; '!'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x19 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0xa0 ; '.'
0000000000000e41         db  0xa0 ; '.'
0000000000000e42         db  0x21 ; '!'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x08 ; '.'
0000000000000e49         db  0x00 ; '.'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x88 ; '.'
0000000000000e51         db  0x02 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x11 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x19 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0xe0 ; '.'
0000000000000e59         db  0xa0 ; '.'
0000000000000e5a         db  0x21 ; '!'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x08 ; '.'
0000000000000e61         db  0x00 ; '.'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x5f ; '_'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x11 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x19 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0xb8 ; '.'
0000000000000e71         db  0xa0 ; '.'
0000000000000e72         db  0x21 ; '!'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x04 ; '.'
0000000000000e79         db  0x00 ; '.'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x76 ; 'v'
0000000000000e81         db  0x02 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x11 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x19 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0xc0 ; '.'
0000000000000e89         db  0xa0 ; '.'
0000000000000e8a         db  0x21 ; '!'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x08 ; '.'
0000000000000e91         db  0x00 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0xe98; 0x1388[ (1264 bytes)
        ; File offset : [3736; 5000[ (1264 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000e98         db  0x00 ; '.'
0000000000000e99         db  0x6c ; 'l'
0000000000000e9a         db  0x69 ; 'i'
0000000000000e9b         db  0x62 ; 'b'
0000000000000e9c         db  0x63 ; 'c'
0000000000000e9d         db  0x2e ; '.'
0000000000000e9e         db  0x73 ; 's'
0000000000000e9f         db  0x6f ; 'o'
0000000000000ea0         db  0x2e ; '.'
0000000000000ea1         db  0x36 ; '6'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x66 ; 'f'
0000000000000ea4         db  0x66 ; 'f'
0000000000000ea5         db  0x6c ; 'l'
0000000000000ea6         db  0x75 ; 'u'
0000000000000ea7         db  0x73 ; 's'
0000000000000ea8         db  0x68 ; 'h'
0000000000000ea9         db  0x00 ; '.'
0000000000000eaa         db  0x73 ; 's'
0000000000000eab         db  0x74 ; 't'
0000000000000eac         db  0x72 ; 'r'
0000000000000ead         db  0x63 ; 'c'
0000000000000eae         db  0x70 ; 'p'
0000000000000eaf         db  0x79 ; 'y'
0000000000000eb0         db  0x00 ; '.'
0000000000000eb1         db  0x66 ; 'f'
0000000000000eb2         db  0x63 ; 'c'
0000000000000eb3         db  0x68 ; 'h'
0000000000000eb4         db  0x6d ; 'm'
0000000000000eb5         db  0x6f ; 'o'
0000000000000eb6         db  0x64 ; 'd'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x5f ; '_'
0000000000000eb9         db  0x5f ; '_'
0000000000000eba         db  0x70 ; 'p'
0000000000000ebb         db  0x72 ; 'r'
0000000000000ebc         db  0x69 ; 'i'
0000000000000ebd         db  0x6e ; 'n'
0000000000000ebe         db  0x74 ; 't'
0000000000000ebf         db  0x66 ; 'f'
0000000000000ec0         db  0x5f ; '_'
0000000000000ec1         db  0x63 ; 'c'
0000000000000ec2         db  0x68 ; 'h'
0000000000000ec3         db  0x6b ; 'k'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x72 ; 'r'
0000000000000ec6         db  0x65 ; 'e'
0000000000000ec7         db  0x61 ; 'a'
0000000000000ec8         db  0x64 ; 'd'
0000000000000ec9         db  0x64 ; 'd'
0000000000000eca         db  0x69 ; 'i'
0000000000000ecb         db  0x72 ; 'r'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x73 ; 's'
0000000000000ece         db  0x65 ; 'e'
0000000000000ecf         db  0x74 ; 't'
0000000000000ed0         db  0x6c ; 'l'
0000000000000ed1         db  0x6f ; 'o'
0000000000000ed2         db  0x63 ; 'c'
0000000000000ed3         db  0x61 ; 'a'
0000000000000ed4         db  0x6c ; 'l'
0000000000000ed5         db  0x65 ; 'e'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x6d ; 'm'
0000000000000ed8         db  0x62 ; 'b'
0000000000000ed9         db  0x72 ; 'r'
0000000000000eda         db  0x74 ; 't'
0000000000000edb         db  0x6f ; 'o'
0000000000000edc         db  0x77 ; 'w'
0000000000000edd         db  0x63 ; 'c'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x66 ; 'f'
0000000000000ee0         db  0x6f ; 'o'
0000000000000ee1         db  0x70 ; 'p'
0000000000000ee2         db  0x65 ; 'e'
0000000000000ee3         db  0x6e ; 'n'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x73 ; 's'
0000000000000ee6         db  0x74 ; 't'
0000000000000ee7         db  0x72 ; 'r'
0000000000000ee8         db  0x6e ; 'n'
0000000000000ee9         db  0x63 ; 'c'
0000000000000eea         db  0x6d ; 'm'
0000000000000eeb         db  0x70 ; 'p'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x66 ; 'f'
0000000000000eee         db  0x74 ; 't'
0000000000000eef         db  0x72 ; 'r'
0000000000000ef0         db  0x75 ; 'u'
0000000000000ef1         db  0x6e ; 'n'
0000000000000ef2         db  0x63 ; 'c'
0000000000000ef3         db  0x61 ; 'a'
0000000000000ef4         db  0x74 ; 't'
0000000000000ef5         db  0x65 ; 'e'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x6f ; 'o'
0000000000000ef8         db  0x70 ; 'p'
0000000000000ef9         db  0x74 ; 't'
0000000000000efa         db  0x69 ; 'i'
0000000000000efb         db  0x6e ; 'n'
0000000000000efc         db  0x64 ; 'd'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x73 ; 's'
0000000000000eff         db  0x74 ; 't'
                     aRrchr:
0000000000000f00         db         "rrchr", 0
0000000000000f06         db  0x72 ; 'r'
0000000000000f07         db  0x70 ; 'p'
0000000000000f08         db  0x6d ; 'm'
0000000000000f09         db  0x61 ; 'a'
0000000000000f0a         db  0x74 ; 't'
0000000000000f0b         db  0x63 ; 'c'
0000000000000f0c         db  0x68 ; 'h'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x64 ; 'd'
0000000000000f0f         db  0x63 ; 'c'
0000000000000f10         db  0x67 ; 'g'
0000000000000f11         db  0x65 ; 'e'
0000000000000f12         db  0x74 ; 't'
0000000000000f13         db  0x74 ; 't'
0000000000000f14         db  0x65 ; 'e'
0000000000000f15         db  0x78 ; 'x'
0000000000000f16         db  0x74 ; 't'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x75 ; 'u'
0000000000000f19         db  0x6e ; 'n'
0000000000000f1a         db  0x6c ; 'l'
0000000000000f1b         db  0x69 ; 'i'
0000000000000f1c         db  0x6e ; 'n'
0000000000000f1d         db  0x6b ; 'k'
0000000000000f1e         db  0x61 ; 'a'
0000000000000f1f         db  0x74 ; 't'
0000000000000f20         db  0x00 ; '.'
0000000000000f21         db  0x63 ; 'c'
0000000000000f22         db  0x6c ; 'l'
0000000000000f23         db  0x6f ; 'o'
0000000000000f24         db  0x73 ; 's'
0000000000000f25         db  0x65 ; 'e'
0000000000000f26         db  0x64 ; 'd'
0000000000000f27         db  0x69 ; 'i'
0000000000000f28         db  0x72 ; 'r'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x65 ; 'e'
0000000000000f2b         db  0x72 ; 'r'
0000000000000f2c         db  0x72 ; 'r'
0000000000000f2d         db  0x6f ; 'o'
0000000000000f2e         db  0x72 ; 'r'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x5f ; '_'
0000000000000f31         db  0x5f ; '_'
0000000000000f32         db  0x72 ; 'r'
0000000000000f33         db  0x65 ; 'e'
0000000000000f34         db  0x61 ; 'a'
0000000000000f35         db  0x64 ; 'd'
0000000000000f36         db  0x5f ; '_'
0000000000000f37         db  0x63 ; 'c'
0000000000000f38         db  0x68 ; 'h'
0000000000000f39         db  0x6b ; 'k'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x5f ; '_'
0000000000000f3c         db  0x5f ; '_'
0000000000000f3d         db  0x73 ; 's'
0000000000000f3e         db  0x74 ; 't'
0000000000000f3f         db  0x61 ; 'a'
0000000000000f40         db  0x63 ; 'c'
0000000000000f41         db  0x6b ; 'k'
0000000000000f42         db  0x5f ; '_'
0000000000000f43         db  0x63 ; 'c'
0000000000000f44         db  0x68 ; 'h'
0000000000000f45         db  0x6b ; 'k'
0000000000000f46         db  0x5f ; '_'
0000000000000f47         db  0x66 ; 'f'
0000000000000f48         db  0x61 ; 'a'
0000000000000f49         db  0x69 ; 'i'
0000000000000f4a         db  0x6c ; 'l'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x5f ; '_'
0000000000000f4d         db  0x5f ; '_'
0000000000000f4e         db  0x6c ; 'l'
0000000000000f4f         db  0x78 ; 'x'
0000000000000f50         db  0x73 ; 's'
0000000000000f51         db  0x74 ; 't'
0000000000000f52         db  0x61 ; 'a'
0000000000000f53         db  0x74 ; 't'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x75 ; 'u'
0000000000000f56         db  0x6e ; 'n'
0000000000000f57         db  0x6c ; 'l'
0000000000000f58         db  0x69 ; 'i'
0000000000000f59         db  0x6e ; 'n'
0000000000000f5a         db  0x6b ; 'k'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x69 ; 'i'
0000000000000f5d         db  0x73 ; 's'
0000000000000f5e         db  0x77 ; 'w'
0000000000000f5f         db  0x70 ; 'p'
0000000000000f60         db  0x72 ; 'r'
0000000000000f61         db  0x69 ; 'i'
0000000000000f62         db  0x6e ; 'n'
0000000000000f63         db  0x74 ; 't'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x6d ; 'm'
0000000000000f66         db  0x6b ; 'k'
0000000000000f67         db  0x64 ; 'd'
0000000000000f68         db  0x69 ; 'i'
0000000000000f69         db  0x72 ; 'r'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x72 ; 'r'
0000000000000f6c         db  0x65 ; 'e'
0000000000000f6d         db  0x61 ; 'a'
0000000000000f6e         db  0x6c ; 'l'
0000000000000f6f         db  0x6c ; 'l'
0000000000000f70         db  0x6f ; 'o'
0000000000000f71         db  0x63 ; 'c'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x72 ; 'r'
0000000000000f74         db  0x65 ; 'e'
0000000000000f75         db  0x77 ; 'w'
0000000000000f76         db  0x69 ; 'i'
0000000000000f77         db  0x6e ; 'n'
0000000000000f78         db  0x64 ; 'd'
0000000000000f79         db  0x64 ; 'd'
0000000000000f7a         db  0x69 ; 'i'
0000000000000f7b         db  0x72 ; 'r'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x61 ; 'a'
0000000000000f7e         db  0x62 ; 'b'
0000000000000f7f         db  0x6f ; 'o'
0000000000000f80         db  0x72 ; 'r'
0000000000000f81         db  0x74 ; 't'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x73 ; 's'
0000000000000f84         db  0x74 ; 't'
0000000000000f85         db  0x64 ; 'd'
0000000000000f86         db  0x69 ; 'i'
0000000000000f87         db  0x6e ; 'n'
0000000000000f88         db  0x00 ; '.'
0000000000000f89         db  0x5f ; '_'
0000000000000f8a         db  0x65 ; 'e'
0000000000000f8b         db  0x78 ; 'x'
0000000000000f8c         db  0x69 ; 'i'
0000000000000f8d         db  0x74 ; 't'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x67 ; 'g'
0000000000000f90         db  0x65 ; 'e'
0000000000000f91         db  0x74 ; 't'
0000000000000f92         db  0x70 ; 'p'
0000000000000f93         db  0x69 ; 'i'
0000000000000f94         db  0x64 ; 'd'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x73 ; 's'
0000000000000f97         db  0x74 ; 't'
0000000000000f98         db  0x72 ; 'r'
0000000000000f99         db  0x73 ; 's'
0000000000000f9a         db  0x70 ; 'p'
0000000000000f9b         db  0x6e ; 'n'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x70 ; 'p'
0000000000000f9e         db  0x72 ; 'r'
0000000000000f9f         db  0x6f ; 'o'
0000000000000fa0         db  0x67 ; 'g'
0000000000000fa1         db  0x72 ; 'r'
0000000000000fa2         db  0x61 ; 'a'
0000000000000fa3         db  0x6d ; 'm'
0000000000000fa4         db  0x5f ; '_'
0000000000000fa5         db  0x69 ; 'i'
0000000000000fa6         db  0x6e ; 'n'
0000000000000fa7         db  0x76 ; 'v'
0000000000000fa8         db  0x6f ; 'o'
0000000000000fa9         db  0x63 ; 'c'
0000000000000faa         db  0x61 ; 'a'
0000000000000fab         db  0x74 ; 't'
0000000000000fac         db  0x69 ; 'i'
0000000000000fad         db  0x6f ; 'o'
0000000000000fae         db  0x6e ; 'n'
0000000000000faf         db  0x5f ; '_'
0000000000000fb0         db  0x6e ; 'n'
0000000000000fb1         db  0x61 ; 'a'
0000000000000fb2         db  0x6d ; 'm'
0000000000000fb3         db  0x65 ; 'e'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x5f ; '_'
0000000000000fb6         db  0x5f ; '_'
0000000000000fb7         db  0x61 ; 'a'
0000000000000fb8         db  0x73 ; 's'
0000000000000fb9         db  0x73 ; 's'
0000000000000fba         db  0x65 ; 'e'
0000000000000fbb         db  0x72 ; 'r'
0000000000000fbc         db  0x74 ; 't'
0000000000000fbd         db  0x5f ; '_'
0000000000000fbe         db  0x66 ; 'f'
0000000000000fbf         db  0x61 ; 'a'
0000000000000fc0         db  0x69 ; 'i'
0000000000000fc1         db  0x6c ; 'l'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x66 ; 'f'
0000000000000fc4         db  0x61 ; 'a'
0000000000000fc5         db  0x6c ; 'l'
0000000000000fc6         db  0x6c ; 'l'
0000000000000fc7         db  0x6f ; 'o'
0000000000000fc8         db  0x63 ; 'c'
0000000000000fc9         db  0x61 ; 'a'
0000000000000fca         db  0x74 ; 't'
0000000000000fcb         db  0x65 ; 'e'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x5f ; '_'
0000000000000fce         db  0x5f ; '_'
0000000000000fcf         db  0x63 ; 'c'
0000000000000fd0         db  0x74 ; 't'
0000000000000fd1         db  0x79 ; 'y'
0000000000000fd2         db  0x70 ; 'p'
0000000000000fd3         db  0x65 ; 'e'
0000000000000fd4         db  0x5f ; '_'
0000000000000fd5         db  0x67 ; 'g'
0000000000000fd6         db  0x65 ; 'e'
0000000000000fd7         db  0x74 ; 't'
0000000000000fd8         db  0x5f ; '_'
0000000000000fd9         db  0x6d ; 'm'
0000000000000fda         db  0x62 ; 'b'
0000000000000fdb         db  0x5f ; '_'
0000000000000fdc         db  0x63 ; 'c'
0000000000000fdd         db  0x75 ; 'u'
0000000000000fde         db  0x72 ; 'r'
0000000000000fdf         db  0x5f ; '_'
0000000000000fe0         db  0x6d ; 'm'
0000000000000fe1         db  0x61 ; 'a'
0000000000000fe2         db  0x78 ; 'x'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x6c ; 'l'
0000000000000fe5         db  0x63 ; 'c'
0000000000000fe6         db  0x68 ; 'h'
0000000000000fe7         db  0x6f ; 'o'
0000000000000fe8         db  0x77 ; 'w'
0000000000000fe9         db  0x6e ; 'n'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x70 ; 'p'
0000000000000fec         db  0x6f ; 'o'
0000000000000fed         db  0x73 ; 's'
0000000000000fee         db  0x69 ; 'i'
0000000000000fef         db  0x78 ; 'x'
0000000000000ff0         db  0x5f ; '_'
0000000000000ff1         db  0x66 ; 'f'
0000000000000ff2         db  0x61 ; 'a'
0000000000000ff3         db  0x64 ; 'd'
0000000000000ff4         db  0x76 ; 'v'
0000000000000ff5         db  0x69 ; 'i'
0000000000000ff6         db  0x73 ; 's'
0000000000000ff7         db  0x65 ; 'e'
0000000000000ff8         db  0x00 ; '.'
0000000000000ff9         db  0x67 ; 'g'
0000000000000ffa         db  0x65 ; 'e'
0000000000000ffb         db  0x74 ; 't'
0000000000000ffc         db  0x70 ; 'p'
0000000000000ffd         db  0x70 ; 'p'
0000000000000ffe         db  0x69 ; 'i'
0000000000000fff         db  0x64 ; 'd'                                         ; DATA XREF=make_dir_parents_private+728, make_dir_parents_private+1073, make_dir_parents_private+1139, overwrite_ok.isra.12+92, set_owner+68, copy_internal+1207, copy_internal+1224
0000000000001000         db  0x00 ; '.'                                         ; DATA XREF=copy_internal+6314, strmode+73, randread_new+97, randread_new+104
0000000000001001         db  0x63 ; 'c'
0000000000001002         db  0x61 ; 'a'
0000000000001003         db  0x6c ; 'l'
0000000000001004         db  0x6c ; 'l'
0000000000001005         db  0x6f ; 'o'
0000000000001006         db  0x63 ; 'c'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x72 ; 'r'
0000000000001009         db  0x65 ; 'e'
000000000000100a         db  0x6e ; 'n'
000000000000100b         db  0x61 ; 'a'
000000000000100c         db  0x6d ; 'm'
000000000000100d         db  0x65 ; 'e'
000000000000100e         db  0x61 ; 'a'
000000000000100f         db  0x74 ; 't'
0000000000001010         db  0x00 ; '.'
0000000000001011         db  0x66 ; 'f'
0000000000001012         db  0x75 ; 'u'
0000000000001013         db  0x74 ; 't'
0000000000001014         db  0x69 ; 'i'
0000000000001015         db  0x6d ; 'm'
0000000000001016         db  0x65 ; 'e'
0000000000001017         db  0x6e ; 'n'
0000000000001018         db  0x73 ; 's'                                         ; DATA XREF=extent_scan_read+26, extent_scan_read+375, randread_new+270
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x73 ; 's'
000000000000101b         db  0x74 ; 't'
000000000000101c         db  0x72 ; 'r'
000000000000101d         db  0x6c ; 'l'
000000000000101e         db  0x65 ; 'e'
000000000000101f         db  0x6e ; 'n'
0000000000001020         db  0x00 ; '.'
0000000000001021         db  0x66 ; 'f'
0000000000001022         db  0x72 ; 'r'
0000000000001023         db  0x65 ; 'e'
0000000000001024         db  0x61 ; 'a'
0000000000001025         db  0x64 ; 'd'
0000000000001026         db  0x5f ; '_'
0000000000001027         db  0x75 ; 'u'
0000000000001028         db  0x6e ; 'n'
0000000000001029         db  0x6c ; 'l'
000000000000102a         db  0x6f ; 'o'
000000000000102b         db  0x63 ; 'c'
000000000000102c         db  0x6b ; 'k'
000000000000102d         db  0x65 ; 'e'
000000000000102e         db  0x64 ; 'd'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x6d ; 'm'
0000000000001031         db  0x65 ; 'e'
0000000000001032         db  0x6d ; 'm'
0000000000001033         db  0x73 ; 's'
0000000000001034         db  0x65 ; 'e'
0000000000001035         db  0x74 ; 't'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x75 ; 'u'
                     aTimensat:
0000000000001038         db         "timensat", 0                               ; DATA XREF=randread_new+74, randread_new+176, randread_new+328, randread_free+12
0000000000001041         db  0x72 ; 'r'
0000000000001042         db  0x6d ; 'm'
0000000000001043         db  0x64 ; 'd'
0000000000001044         db  0x69 ; 'i'
0000000000001045         db  0x72 ; 'r'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x5f ; '_'
0000000000001048         db  0x5f ; '_'
0000000000001049         db  0x65 ; 'e'
000000000000104a         db  0x72 ; 'r'
000000000000104b         db  0x72 ; 'r'
000000000000104c         db  0x6e ; 'n'
000000000000104d         db  0x6f ; 'o'
000000000000104e         db  0x5f ; '_'
000000000000104f         db  0x6c ; 'l'
0000000000001050         db  0x6f ; 'o'
0000000000001051         db  0x63 ; 'c'
0000000000001052         db  0x61 ; 'a'
0000000000001053         db  0x74 ; 't'
0000000000001054         db  0x69 ; 'i'
0000000000001055         db  0x6f ; 'o'
0000000000001056         db  0x6e ; 'n'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x72 ; 'r'
0000000000001059         db  0x65 ; 'e'
000000000000105a         db  0x61 ; 'a'
000000000000105b         db  0x64 ; 'd'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x6d ; 'm'
000000000000105e         db  0x65 ; 'e'
000000000000105f         db  0x6d ; 'm'
0000000000001060         db  0x63 ; 'c'
0000000000001061         db  0x6d ; 'm'
0000000000001062         db  0x70 ; 'p'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x67 ; 'g'
0000000000001065         db  0x65 ; 'e'
0000000000001066         db  0x74 ; 't'
0000000000001067         db  0x70 ; 'p'
0000000000001068         db  0x61 ; 'a'
0000000000001069         db  0x67 ; 'g'
000000000000106a         db  0x65 ; 'e'
000000000000106b         db  0x73 ; 's'
000000000000106c         db  0x69 ; 'i'
000000000000106d         db  0x7a ; 'z'
000000000000106e         db  0x65 ; 'e'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x6d ; 'm'
0000000000001071         db  0x65 ; 'e'
0000000000001072         db  0x6d ; 'm'
0000000000001073         db  0x70 ; 'p'
0000000000001074         db  0x63 ; 'c'
0000000000001075         db  0x70 ; 'p'
0000000000001076         db  0x79 ; 'y'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x5f ; '_'
0000000000001079         db  0x5f ; '_'
000000000000107a         db  0x66 ; 'f'
000000000000107b         db  0x70 ; 'p'
000000000000107c         db  0x72 ; 'r'
000000000000107d         db  0x69 ; 'i'
000000000000107e         db  0x6e ; 'n'
000000000000107f         db  0x74 ; 't'
0000000000001080         db  0x66 ; 'f'
0000000000001081         db  0x5f ; '_'
0000000000001082         db  0x63 ; 'c'
0000000000001083         db  0x68 ; 'h'
0000000000001084         db  0x6b ; 'k'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x66 ; 'f'
0000000000001087         db  0x63 ; 'c'
0000000000001088         db  0x68 ; 'h'
0000000000001089         db  0x6f ; 'o'
000000000000108a         db  0x77 ; 'w'
000000000000108b         db  0x6e ; 'n'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x73 ; 's'
000000000000108e         db  0x74 ; 't'
000000000000108f         db  0x64 ; 'd'
0000000000001090         db  0x6f ; 'o'
0000000000001091         db  0x75 ; 'u'
0000000000001092         db  0x74 ; 't'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x66 ; 'f'
0000000000001095         db  0x70 ; 'p'
0000000000001096         db  0x61 ; 'a'
0000000000001097         db  0x74 ; 't'
0000000000001098         db  0x68 ; 'h'
0000000000001099         db  0x63 ; 'c'
000000000000109a         db  0x6f ; 'o'
000000000000109b         db  0x6e ; 'n'
000000000000109c         db  0x66 ; 'f'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x6c ; 'l'
000000000000109f         db  0x73 ; 's'
00000000000010a0         db  0x65 ; 'e'
00000000000010a1         db  0x65 ; 'e'
00000000000010a2         db  0x6b ; 'k'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x6d ; 'm'
00000000000010a5         db  0x65 ; 'e'
00000000000010a6         db  0x6d ; 'm'
00000000000010a7         db  0x63 ; 'c'
00000000000010a8         db  0x70 ; 'p'
00000000000010a9         db  0x79 ; 'y'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x66 ; 'f'
00000000000010ac         db  0x63 ; 'c'
00000000000010ad         db  0x6c ; 'l'
00000000000010ae         db  0x6f ; 'o'
00000000000010af         db  0x73 ; 's'
00000000000010b0         db  0x65 ; 'e'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x65 ; 'e'
00000000000010b3         db  0x75 ; 'u'
00000000000010b4         db  0x69 ; 'i'
00000000000010b5         db  0x64 ; 'd'
00000000000010b6         db  0x61 ; 'a'
00000000000010b7         db  0x63 ; 'c'
00000000000010b8         db  0x63 ; 'c'
00000000000010b9         db  0x65 ; 'e'
00000000000010ba         db  0x73 ; 's'
00000000000010bb         db  0x73 ; 's'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x73 ; 's'
00000000000010be         db  0x79 ; 'y'
00000000000010bf         db  0x6d ; 'm'
00000000000010c0         db  0x6c ; 'l'
00000000000010c1         db  0x69 ; 'i'
00000000000010c2         db  0x6e ; 'n'
00000000000010c3         db  0x6b ; 'k'
00000000000010c4         db  0x61 ; 'a'
00000000000010c5         db  0x74 ; 't'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x6d ; 'm'
00000000000010c8         db  0x61 ; 'a'
00000000000010c9         db  0x6c ; 'l'
00000000000010ca         db  0x6c ; 'l'
00000000000010cb         db  0x6f ; 'o'
00000000000010cc         db  0x63 ; 'c'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x75 ; 'u'
00000000000010cf         db  0x6d ; 'm'
00000000000010d0         db  0x61 ; 'a'
00000000000010d1         db  0x73 ; 's'
00000000000010d2         db  0x6b ; 'k'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x66 ; 'f'
00000000000010d5         db  0x64 ; 'd'
00000000000010d6         db  0x6f ; 'o'
00000000000010d7         db  0x70 ; 'p'
00000000000010d8         db  0x65 ; 'e'
00000000000010d9         db  0x6e ; 'n'
00000000000010da         db  0x64 ; 'd'
00000000000010db         db  0x69 ; 'i'
00000000000010dc         db  0x72 ; 'r'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x6d ; 'm'
00000000000010df         db  0x62 ; 'b'
00000000000010e0         db  0x73 ; 's'
00000000000010e1         db  0x69 ; 'i'
00000000000010e2         db  0x6e ; 'n'
00000000000010e3         db  0x69 ; 'i'
00000000000010e4         db  0x74 ; 't'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x67 ; 'g'
00000000000010e7         db  0x65 ; 'e'
00000000000010e8         db  0x74 ; 't'
00000000000010e9         db  0x67 ; 'g'
00000000000010ea         db  0x69 ; 'i'
00000000000010eb         db  0x64 ; 'd'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x6e ; 'n'
00000000000010ee         db  0x6c ; 'l'
00000000000010ef         db  0x5f ; '_'
00000000000010f0         db  0x6c ; 'l'
00000000000010f1         db  0x61 ; 'a'
00000000000010f2         db  0x6e ; 'n'
00000000000010f3         db  0x67 ; 'g'
00000000000010f4         db  0x69 ; 'i'
00000000000010f5         db  0x6e ; 'n'
00000000000010f6         db  0x66 ; 'f'
00000000000010f7         db  0x6f ; 'o'
00000000000010f8         db  0x00 ; '.'
00000000000010f9         db  0x5f ; '_'
00000000000010fa         db  0x5f ; '_'
00000000000010fb         db  0x63 ; 'c'
00000000000010fc         db  0x74 ; 't'
00000000000010fd         db  0x79 ; 'y'
00000000000010fe         db  0x70 ; 'p'
00000000000010ff         db  0x65 ; 'e'
                     aBloc:
0000000000001100         db         "_b_loc", 0
0000000000001107         db  0x67 ; 'g'
0000000000001108         db  0x65 ; 'e'
0000000000001109         db  0x74 ; 't'
000000000000110a         db  0x65 ; 'e'
000000000000110b         db  0x6e ; 'n'
000000000000110c         db  0x76 ; 'v'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x6f ; 'o'
000000000000110f         db  0x70 ; 'p'
0000000000001110         db  0x74 ; 't'
0000000000001111         db  0x61 ; 'a'
0000000000001112         db  0x72 ; 'r'
0000000000001113         db  0x67 ; 'g'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x5f ; '_'
0000000000001116         db  0x5f ; '_'
0000000000001117         db  0x66 ; 'f'
0000000000001118         db  0x72 ; 'r'
0000000000001119         db  0x65 ; 'e'
000000000000111a         db  0x61 ; 'a'
000000000000111b         db  0x64 ; 'd'
000000000000111c         db  0x69 ; 'i'
000000000000111d         db  0x6e ; 'n'
000000000000111e         db  0x67 ; 'g'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x73 ; 's'
0000000000001121         db  0x74 ; 't'
0000000000001122         db  0x64 ; 'd'
0000000000001123         db  0x65 ; 'e'
0000000000001124         db  0x72 ; 'r'
0000000000001125         db  0x72 ; 'r'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x69 ; 'i'
0000000000001128         db  0x6f ; 'o'
0000000000001129         db  0x63 ; 'c'
000000000000112a         db  0x74 ; 't'
000000000000112b         db  0x6c ; 'l'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x67 ; 'g'
000000000000112e         db  0x65 ; 'e'
000000000000112f         db  0x74 ; 't'
0000000000001130         db  0x75 ; 'u'
0000000000001131         db  0x69 ; 'i'
0000000000001132         db  0x64 ; 'd'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x72 ; 'r'
0000000000001135         db  0x65 ; 'e'
0000000000001136         db  0x61 ; 'a'
0000000000001137         db  0x64 ; 'd'
0000000000001138         db  0x6c ; 'l'
0000000000001139         db  0x69 ; 'i'
000000000000113a         db  0x6e ; 'n'
000000000000113b         db  0x6b ; 'k'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x67 ; 'g'
000000000000113e         db  0x65 ; 'e'
000000000000113f         db  0x74 ; 't'
0000000000001140         db  0x6f ; 'o'
0000000000001141         db  0x70 ; 'p'
0000000000001142         db  0x74 ; 't'
0000000000001143         db  0x5f ; '_'
0000000000001144         db  0x6c ; 'l'
0000000000001145         db  0x6f ; 'o'
0000000000001146         db  0x6e ; 'n'
0000000000001147         db  0x67 ; 'g'
0000000000001148         db  0x00 ; '.'
0000000000001149         db  0x5f ; '_'
000000000000114a         db  0x5f ; '_'
000000000000114b         db  0x78 ; 'x'
000000000000114c         db  0x6d ; 'm'
000000000000114d         db  0x6b ; 'k'
000000000000114e         db  0x6e ; 'n'
000000000000114f         db  0x6f ; 'o'
0000000000001150         db  0x64 ; 'd'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x5f ; '_'
0000000000001153         db  0x5f ; '_'
0000000000001154         db  0x66 ; 'f'
0000000000001155         db  0x78 ; 'x'
0000000000001156         db  0x73 ; 's'
0000000000001157         db  0x74 ; 't'
0000000000001158         db  0x61 ; 'a'
0000000000001159         db  0x74 ; 't'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x66 ; 'f'
000000000000115c         db  0x69 ; 'i'
000000000000115d         db  0x6c ; 'l'
000000000000115e         db  0x65 ; 'e'
000000000000115f         db  0x6e ; 'n'
0000000000001160         db  0x6f ; 'o'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x75 ; 'u'
0000000000001163         db  0x74 ; 't'
0000000000001164         db  0x69 ; 'i'
0000000000001165         db  0x6d ; 'm'
0000000000001166         db  0x65 ; 'e'
0000000000001167         db  0x73 ; 's'
0000000000001168         db  0x00 ; '.'
0000000000001169         db  0x5f ; '_'
000000000000116a         db  0x5f ; '_'
000000000000116b         db  0x67 ; 'g'
000000000000116c         db  0x65 ; 'e'
000000000000116d         db  0x74 ; 't'
000000000000116e         db  0x64 ; 'd'
000000000000116f         db  0x65 ; 'e'
0000000000001170         db  0x6c ; 'l'
0000000000001171         db  0x69 ; 'i'
0000000000001172         db  0x6d ; 'm'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x66 ; 'f'
0000000000001175         db  0x77 ; 'w'
0000000000001176         db  0x72 ; 'r'
0000000000001177         db  0x69 ; 'i'
0000000000001178         db  0x74 ; 't'
0000000000001179         db  0x65 ; 'e'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x67 ; 'g'
000000000000117c         db  0x65 ; 'e'
000000000000117d         db  0x74 ; 't'
000000000000117e         db  0x74 ; 't'
000000000000117f         db  0x69 ; 'i'
0000000000001180         db  0x6d ; 'm'
0000000000001181         db  0x65 ; 'e'
0000000000001182         db  0x6f ; 'o'
0000000000001183         db  0x66 ; 'f'
0000000000001184         db  0x64 ; 'd'
0000000000001185         db  0x61 ; 'a'
0000000000001186         db  0x79 ; 'y'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x72 ; 'r'
0000000000001189         db  0x65 ; 'e'
000000000000118a         db  0x6e ; 'n'
000000000000118b         db  0x61 ; 'a'
000000000000118c         db  0x6d ; 'm'
000000000000118d         db  0x65 ; 'e'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x5f ; '_'
0000000000001190         db  0x5f ; '_'
0000000000001191         db  0x65 ; 'e'
0000000000001192         db  0x78 ; 'x'
0000000000001193         db  0x70 ; 'p'
0000000000001194         db  0x6c ; 'l'
0000000000001195         db  0x69 ; 'i'
0000000000001196         db  0x63 ; 'c'
0000000000001197         db  0x69 ; 'i'
0000000000001198         db  0x74 ; 't'
0000000000001199         db  0x5f ; '_'
000000000000119a         db  0x62 ; 'b'
000000000000119b         db  0x7a ; 'z'
000000000000119c         db  0x65 ; 'e'
000000000000119d         db  0x72 ; 'r'
000000000000119e         db  0x6f ; 'o'
000000000000119f         db  0x5f ; '_'
00000000000011a0         db  0x63 ; 'c'
00000000000011a1         db  0x68 ; 'h'
00000000000011a2         db  0x6b ; 'k'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x67 ; 'g'
00000000000011a5         db  0x65 ; 'e'
00000000000011a6         db  0x74 ; 't'
00000000000011a7         db  0x65 ; 'e'
00000000000011a8         db  0x75 ; 'u'
00000000000011a9         db  0x69 ; 'i'
00000000000011aa         db  0x64 ; 'd'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x63 ; 'c'
00000000000011ad         db  0x6c ; 'l'
00000000000011ae         db  0x6f ; 'o'
00000000000011af         db  0x63 ; 'c'
00000000000011b0         db  0x6b ; 'k'
00000000000011b1         db  0x5f ; '_'
00000000000011b2         db  0x67 ; 'g'
00000000000011b3         db  0x65 ; 'e'
00000000000011b4         db  0x74 ; 't'
00000000000011b5         db  0x74 ; 't'
00000000000011b6         db  0x69 ; 'i'
00000000000011b7         db  0x6d ; 'm'
00000000000011b8         db  0x65 ; 'e'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x5f ; '_'
00000000000011bb         db  0x5f ; '_'
00000000000011bc         db  0x66 ; 'f'
00000000000011bd         db  0x70 ; 'p'
00000000000011be         db  0x65 ; 'e'
00000000000011bf         db  0x6e ; 'n'
00000000000011c0         db  0x64 ; 'd'
00000000000011c1         db  0x69 ; 'i'
00000000000011c2         db  0x6e ; 'n'
00000000000011c3         db  0x67 ; 'g'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x73 ; 's'
00000000000011c6         db  0x74 ; 't'
00000000000011c7         db  0x72 ; 'r'
00000000000011c8         db  0x63 ; 'c'
00000000000011c9         db  0x68 ; 'h'
00000000000011ca         db  0x72 ; 'r'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x70 ; 'p'
00000000000011cd         db  0x72 ; 'r'
00000000000011ce         db  0x6f ; 'o'
00000000000011cf         db  0x67 ; 'g'
00000000000011d0         db  0x72 ; 'r'
00000000000011d1         db  0x61 ; 'a'
00000000000011d2         db  0x6d ; 'm'
00000000000011d3         db  0x5f ; '_'
00000000000011d4         db  0x69 ; 'i'
00000000000011d5         db  0x6e ; 'n'
00000000000011d6         db  0x76 ; 'v'
00000000000011d7         db  0x6f ; 'o'
00000000000011d8         db  0x63 ; 'c'
00000000000011d9         db  0x61 ; 'a'
00000000000011da         db  0x74 ; 't'
00000000000011db         db  0x69 ; 'i'
00000000000011dc         db  0x6f ; 'o'
00000000000011dd         db  0x6e ; 'n'
00000000000011de         db  0x5f ; '_'
00000000000011df         db  0x73 ; 's'
00000000000011e0         db  0x68 ; 'h'
00000000000011e1         db  0x6f ; 'o'
00000000000011e2         db  0x72 ; 'r'
00000000000011e3         db  0x74 ; 't'
00000000000011e4         db  0x5f ; '_'
00000000000011e5         db  0x6e ; 'n'
00000000000011e6         db  0x61 ; 'a'
00000000000011e7         db  0x6d ; 'm'
00000000000011e8         db  0x65 ; 'e'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x66 ; 'f'
00000000000011eb         db  0x64 ; 'd'
00000000000011ec         db  0x6f ; 'o'
00000000000011ed         db  0x70 ; 'p'
00000000000011ee         db  0x65 ; 'e'
00000000000011ef         db  0x6e ; 'n'
00000000000011f0         db  0x00 ; '.'
00000000000011f1         db  0x71 ; 'q'
00000000000011f2         db  0x73 ; 's'
00000000000011f3         db  0x6f ; 'o'
00000000000011f4         db  0x72 ; 'r'
00000000000011f5         db  0x74 ; 't'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x63 ; 'c'
00000000000011f8         db  0x61 ; 'a'
00000000000011f9         db  0x6e ; 'n'
00000000000011fa         db  0x6f ; 'o'
00000000000011fb         db  0x6e ; 'n'
00000000000011fc         db  0x69 ; 'i'
00000000000011fd         db  0x63 ; 'c'
00000000000011fe         db  0x61 ; 'a'
00000000000011ff         db  0x6c ; 'l'
                     aIzefilename:
0000000000001200         db         "ize_file_name", 0
000000000000120e         db  0x5f ; '_'
000000000000120f         db  0x5f ; '_'
0000000000001210         db  0x63 ; 'c'
0000000000001211         db  0x78 ; 'x'
0000000000001212         db  0x61 ; 'a'
0000000000001213         db  0x5f ; '_'
0000000000001214         db  0x66 ; 'f'
0000000000001215         db  0x69 ; 'i'
0000000000001216         db  0x6e ; 'n'
0000000000001217         db  0x61 ; 'a'
0000000000001218         db  0x6c ; 'l'
0000000000001219         db  0x69 ; 'i'
000000000000121a         db  0x7a ; 'z'
000000000000121b         db  0x65 ; 'e'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x73 ; 's'
000000000000121e         db  0x79 ; 'y'
000000000000121f         db  0x73 ; 's'
0000000000001220         db  0x63 ; 'c'
0000000000001221         db  0x61 ; 'a'
0000000000001222         db  0x6c ; 'l'
0000000000001223         db  0x6c ; 'l'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x73 ; 's'
0000000000001226         db  0x65 ; 'e'
0000000000001227         db  0x74 ; 't'
0000000000001228         db  0x76 ; 'v'
0000000000001229         db  0x62 ; 'b'
000000000000122a         db  0x75 ; 'u'
000000000000122b         db  0x66 ; 'f'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x66 ; 'f'
000000000000122e         db  0x63 ; 'c'
000000000000122f         db  0x6e ; 'n'
0000000000001230         db  0x74 ; 't'
0000000000001231         db  0x6c ; 'l'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x6f ; 'o'
0000000000001234         db  0x70 ; 'p'
0000000000001235         db  0x65 ; 'e'
0000000000001236         db  0x6e ; 'n'
0000000000001237         db  0x61 ; 'a'
0000000000001238         db  0x74 ; 't'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x66 ; 'f'
000000000000123b         db  0x75 ; 'u'
000000000000123c         db  0x74 ; 't'
000000000000123d         db  0x69 ; 'i'
000000000000123e         db  0x6d ; 'm'
000000000000123f         db  0x65 ; 'e'
0000000000001240         db  0x73 ; 's'
0000000000001241         db  0x61 ; 'a'
0000000000001242         db  0x74 ; 't'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x5f ; '_'
0000000000001245         db  0x5f ; '_'
0000000000001246         db  0x78 ; 'x'
0000000000001247         db  0x73 ; 's'
0000000000001248         db  0x74 ; 't'
0000000000001249         db  0x61 ; 'a'
000000000000124a         db  0x74 ; 't'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x62 ; 'b'
000000000000124d         db  0x69 ; 'i'
000000000000124e         db  0x6e ; 'n'
000000000000124f         db  0x64 ; 'd'
0000000000001250         db  0x74 ; 't'
0000000000001251         db  0x65 ; 'e'
0000000000001252         db  0x78 ; 'x'
0000000000001253         db  0x74 ; 't'
0000000000001254         db  0x64 ; 'd'
0000000000001255         db  0x6f ; 'o'
0000000000001256         db  0x6d ; 'm'
0000000000001257         db  0x61 ; 'a'
0000000000001258         db  0x69 ; 'i'
0000000000001259         db  0x6e ; 'n'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x5f ; '_'
000000000000125c         db  0x5f ; '_'
000000000000125d         db  0x66 ; 'f'
000000000000125e         db  0x78 ; 'x'
000000000000125f         db  0x73 ; 's'
0000000000001260         db  0x74 ; 't'
0000000000001261         db  0x61 ; 'a'
0000000000001262         db  0x74 ; 't'
0000000000001263         db  0x61 ; 'a'
0000000000001264         db  0x74 ; 't'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x6d ; 'm'
0000000000001267         db  0x6b ; 'k'
0000000000001268         db  0x66 ; 'f'
0000000000001269         db  0x69 ; 'i'
000000000000126a         db  0x66 ; 'f'
000000000000126b         db  0x6f ; 'o'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x73 ; 's'
000000000000126e         db  0x74 ; 't'
000000000000126f         db  0x72 ; 'r'
0000000000001270         db  0x63 ; 'c'
0000000000001271         db  0x6d ; 'm'
0000000000001272         db  0x70 ; 'p'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x5f ; '_'
0000000000001275         db  0x5f ; '_'
0000000000001276         db  0x6c ; 'l'
0000000000001277         db  0x69 ; 'i'
0000000000001278         db  0x62 ; 'b'
0000000000001279         db  0x63 ; 'c'
000000000000127a         db  0x5f ; '_'
000000000000127b         db  0x73 ; 's'
000000000000127c         db  0x74 ; 't'
000000000000127d         db  0x61 ; 'a'
000000000000127e         db  0x72 ; 'r'
000000000000127f         db  0x74 ; 't'
0000000000001280         db  0x5f ; '_'
0000000000001281         db  0x6d ; 'm'
0000000000001282         db  0x61 ; 'a'
0000000000001283         db  0x69 ; 'i'
0000000000001284         db  0x6e ; 'n'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x64 ; 'd'
0000000000001287         db  0x69 ; 'i'
0000000000001288         db  0x72 ; 'r'
0000000000001289         db  0x66 ; 'f'
000000000000128a         db  0x64 ; 'd'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x73 ; 's'
000000000000128d         db  0x74 ; 't'
000000000000128e         db  0x70 ; 'p'
000000000000128f         db  0x63 ; 'c'
0000000000001290         db  0x70 ; 'p'
0000000000001291         db  0x79 ; 'y'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x66 ; 'f'
0000000000001294         db  0x73 ; 's'
0000000000001295         db  0x65 ; 'e'
0000000000001296         db  0x65 ; 'e'
0000000000001297         db  0x6b ; 'k'
0000000000001298         db  0x6f ; 'o'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x5f ; '_'
000000000000129b         db  0x5f ; '_'
000000000000129c         db  0x6f ; 'o'
000000000000129d         db  0x76 ; 'v'
000000000000129e         db  0x65 ; 'e'
000000000000129f         db  0x72 ; 'r'
00000000000012a0         db  0x66 ; 'f'
00000000000012a1         db  0x6c ; 'l'
00000000000012a2         db  0x6f ; 'o'
00000000000012a3         db  0x77 ; 'w'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x66 ; 'f'
00000000000012a6         db  0x70 ; 'p'
00000000000012a7         db  0x75 ; 'u'
00000000000012a8         db  0x74 ; 't'
00000000000012a9         db  0x73 ; 's'
00000000000012aa         db  0x5f ; '_'
00000000000012ab         db  0x75 ; 'u'
00000000000012ac         db  0x6e ; 'n'
00000000000012ad         db  0x6c ; 'l'
00000000000012ae         db  0x6f ; 'o'
00000000000012af         db  0x63 ; 'c'
00000000000012b0         db  0x6b ; 'k'
00000000000012b1         db  0x65 ; 'e'
00000000000012b2         db  0x64 ; 'd'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x66 ; 'f'
00000000000012b5         db  0x72 ; 'r'
00000000000012b6         db  0x65 ; 'e'
00000000000012b7         db  0x65 ; 'e'
00000000000012b8         db  0x00 ; '.'
00000000000012b9         db  0x5f ; '_'
00000000000012ba         db  0x5f ; '_'
00000000000012bb         db  0x70 ; 'p'
00000000000012bc         db  0x72 ; 'r'
00000000000012bd         db  0x6f ; 'o'
00000000000012be         db  0x67 ; 'g'
00000000000012bf         db  0x6e ; 'n'
00000000000012c0         db  0x61 ; 'a'
00000000000012c1         db  0x6d ; 'm'
00000000000012c2         db  0x65 ; 'e'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x5f ; '_'
00000000000012c5         db  0x5f ; '_'
00000000000012c6         db  0x70 ; 'p'
00000000000012c7         db  0x72 ; 'r'
00000000000012c8         db  0x6f ; 'o'
00000000000012c9         db  0x67 ; 'g'
00000000000012ca         db  0x6e ; 'n'
00000000000012cb         db  0x61 ; 'a'
00000000000012cc         db  0x6d ; 'm'
00000000000012cd         db  0x65 ; 'e'
00000000000012ce         db  0x5f ; '_'
00000000000012cf         db  0x66 ; 'f'
00000000000012d0         db  0x75 ; 'u'
00000000000012d1         db  0x6c ; 'l'
00000000000012d2         db  0x6c ; 'l'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x5f ; '_'
00000000000012d5         db  0x5f ; '_'
00000000000012d6         db  0x63 ; 'c'
00000000000012d7         db  0x78 ; 'x'
00000000000012d8         db  0x61 ; 'a'
00000000000012d9         db  0x5f ; '_'
00000000000012da         db  0x61 ; 'a'
00000000000012db         db  0x74 ; 't'
00000000000012dc         db  0x65 ; 'e'
00000000000012dd         db  0x78 ; 'x'
00000000000012de         db  0x69 ; 'i'
00000000000012df         db  0x74 ; 't'
00000000000012e0         db  0x00 ; '.'
00000000000012e1         db  0x47 ; 'G'
00000000000012e2         db  0x4c ; 'L'
00000000000012e3         db  0x49 ; 'I'
00000000000012e4         db  0x42 ; 'B'
00000000000012e5         db  0x43 ; 'C'
00000000000012e6         db  0x5f ; '_'
00000000000012e7         db  0x32 ; '2'
00000000000012e8         db  0x2e ; '.'
00000000000012e9         db  0x33 ; '3'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x47 ; 'G'
00000000000012ec         db  0x4c ; 'L'
00000000000012ed         db  0x49 ; 'I'
00000000000012ee         db  0x42 ; 'B'
00000000000012ef         db  0x43 ; 'C'
00000000000012f0         db  0x5f ; '_'
00000000000012f1         db  0x32 ; '2'
00000000000012f2         db  0x2e ; '.'
00000000000012f3         db  0x32 ; '2'
00000000000012f4         db  0x35 ; '5'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x47 ; 'G'
                     aLibc234:
00000000000012f7         db         "LIBC_2.3.4", 0
0000000000001302         db  0x47 ; 'G'
0000000000001303         db  0x4c ; 'L'
0000000000001304         db  0x49 ; 'I'
0000000000001305         db  0x42 ; 'B'
0000000000001306         db  0x43 ; 'C'
0000000000001307         db  0x5f ; '_'
0000000000001308         db  0x32 ; '2'
0000000000001309         db  0x2e ; '.'
000000000000130a         db  0x31 ; '1'
000000000000130b         db  0x34 ; '4'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x47 ; 'G'
000000000000130e         db  0x4c ; 'L'
000000000000130f         db  0x49 ; 'I'
0000000000001310         db  0x42 ; 'B'
0000000000001311         db  0x43 ; 'C'
0000000000001312         db  0x5f ; '_'
0000000000001313         db  0x32 ; '2'
0000000000001314         db  0x2e ; '.'
0000000000001315         db  0x31 ; '1'
0000000000001316         db  0x30 ; '0'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x47 ; 'G'
0000000000001319         db  0x4c ; 'L'
000000000000131a         db  0x49 ; 'I'
000000000000131b         db  0x42 ; 'B'
000000000000131c         db  0x43 ; 'C'
000000000000131d         db  0x5f ; '_'
000000000000131e         db  0x32 ; '2'
000000000000131f         db  0x2e ; '.'
0000000000001320         db  0x31 ; '1'
0000000000001321         db  0x37 ; '7'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x47 ; 'G'
0000000000001324         db  0x4c ; 'L'
0000000000001325         db  0x49 ; 'I'
0000000000001326         db  0x42 ; 'B'
0000000000001327         db  0x43 ; 'C'
0000000000001328         db  0x5f ; '_'
0000000000001329         db  0x32 ; '2'
000000000000132a         db  0x2e ; '.'
000000000000132b         db  0x34 ; '4'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x47 ; 'G'
000000000000132e         db  0x4c ; 'L'
000000000000132f         db  0x49 ; 'I'
0000000000001330         db  0x42 ; 'B'
0000000000001331         db  0x43 ; 'C'
0000000000001332         db  0x5f ; '_'
0000000000001333         db  0x32 ; '2'
0000000000001334         db  0x2e ; '.'
0000000000001335         db  0x36 ; '6'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x47 ; 'G'
0000000000001338         db  0x4c ; 'L'
0000000000001339         db  0x49 ; 'I'
000000000000133a         db  0x42 ; 'B'
000000000000133b         db  0x43 ; 'C'
000000000000133c         db  0x5f ; '_'
000000000000133d         db  0x32 ; '2'
000000000000133e         db  0x2e ; '.'
000000000000133f         db  0x32 ; '2'
0000000000001340         db  0x2e ; '.'
0000000000001341         db  0x35 ; '5'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x5f ; '_'
0000000000001344         db  0x49 ; 'I'
0000000000001345         db  0x54 ; 'T'
0000000000001346         db  0x4d ; 'M'
0000000000001347         db  0x5f ; '_'
0000000000001348         db  0x64 ; 'd'
0000000000001349         db  0x65 ; 'e'
000000000000134a         db  0x72 ; 'r'
000000000000134b         db  0x65 ; 'e'
000000000000134c         db  0x67 ; 'g'
000000000000134d         db  0x69 ; 'i'
000000000000134e         db  0x73 ; 's'
000000000000134f         db  0x74 ; 't'
0000000000001350         db  0x65 ; 'e'
0000000000001351         db  0x72 ; 'r'
0000000000001352         db  0x54 ; 'T'
0000000000001353         db  0x4d ; 'M'
0000000000001354         db  0x43 ; 'C'
0000000000001355         db  0x6c ; 'l'
0000000000001356         db  0x6f ; 'o'
0000000000001357         db  0x6e ; 'n'
0000000000001358         db  0x65 ; 'e'
0000000000001359         db  0x54 ; 'T'
000000000000135a         db  0x61 ; 'a'
000000000000135b         db  0x62 ; 'b'
000000000000135c         db  0x6c ; 'l'
000000000000135d         db  0x65 ; 'e'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x5f ; '_'
0000000000001360         db  0x5f ; '_'
0000000000001361         db  0x67 ; 'g'
0000000000001362         db  0x6d ; 'm'
0000000000001363         db  0x6f ; 'o'
0000000000001364         db  0x6e ; 'n'
0000000000001365         db  0x5f ; '_'
0000000000001366         db  0x73 ; 's'
0000000000001367         db  0x74 ; 't'
0000000000001368         db  0x61 ; 'a'
0000000000001369         db  0x72 ; 'r'
000000000000136a         db  0x74 ; 't'
000000000000136b         db  0x5f ; '_'
000000000000136c         db  0x5f ; '_'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x5f ; '_'
000000000000136f         db  0x49 ; 'I'
0000000000001370         db  0x54 ; 'T'
0000000000001371         db  0x4d ; 'M'
0000000000001372         db  0x5f ; '_'
0000000000001373         db  0x72 ; 'r'
0000000000001374         db  0x65 ; 'e'
0000000000001375         db  0x67 ; 'g'
0000000000001376         db  0x69 ; 'i'
0000000000001377         db  0x73 ; 's'
0000000000001378         db  0x74 ; 't'
0000000000001379         db  0x65 ; 'e'
000000000000137a         db  0x72 ; 'r'
000000000000137b         db  0x54 ; 'T'
000000000000137c         db  0x4d ; 'M'
000000000000137d         db  0x43 ; 'C'
000000000000137e         db  0x6c ; 'l'
000000000000137f         db  0x6f ; 'o'
0000000000001380         db  0x6e ; 'n'
0000000000001381         db  0x65 ; 'e'
0000000000001382         db  0x54 ; 'T'
0000000000001383         db  0x61 ; 'a'
0000000000001384         db  0x62 ; 'b'
0000000000001385         db  0x6c ; 'l'
0000000000001386         db  0x65 ; 'e'
0000000000001387         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0x1388; 0x1482[ (250 bytes)
        ; File offset : [5000; 5250[ (250 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000001388         db  0x00 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x02 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x02 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x03 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x02 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x02 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x02 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x02 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x02 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x02 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x02 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x04 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x02 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x04 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x02 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x02 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x02 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x05 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x02 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x02 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x02 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x02 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x02 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x02 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x02 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x02 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x02 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x02 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x02 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x02 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x02 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x02 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x04 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x04 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x02 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x02 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x02 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x02 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x04 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x02 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x02 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x02 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x02 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x02 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x02 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x02 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x02 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x02 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x02 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x02 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x02 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x02 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x02 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x02 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x02 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x02 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x02 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x06 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x02 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x02 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x02 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x02 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x02 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x02 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x02 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x02 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x02 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x02 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x02 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x07 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x02 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x02 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x02 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x02 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x02 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x02 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x02 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x02 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x02 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x02 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x02 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x02 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x02 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x04 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x02 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x08 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x02 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x02 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x02 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x02 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x02 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x09 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x02 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x02 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x02 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x02 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x02 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x04 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x03 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x02 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x02 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x04 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x02 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x02 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x02 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x02 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x08 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x02 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x04 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x02 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x02 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x04 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x0a ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x02 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x02 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x02 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x02 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x02 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x02 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x02 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x02 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x02 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x00 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0x1488; 0x1528[ (160 bytes)
        ; File offset : [5256; 5416[ (160 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000001488         db  0x01 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x09 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x01 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x10 ; '.'
0000000000001491         db  0x00 ; '.'
0000000000001492         db  0x00 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x13 ; '.'
0000000000001499         db  0x69 ; 'i'
000000000000149a         db  0x69 ; 'i'
000000000000149b         db  0x0d ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x0a ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x49 ; 'I'
00000000000014a1         db  0x04 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x10 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x85 ; '.'
00000000000014a9         db  0x91 ; '.'
00000000000014aa         db  0x96 ; '.'
00000000000014ab         db  0x06 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x09 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x53 ; 'S'
00000000000014b1         db  0x04 ; '.'
00000000000014b2         db  0x00 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x10 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x74 ; 't'
00000000000014b9         db  0x19 ; '.'
00000000000014ba         db  0x69 ; 'i'
00000000000014bb         db  0x09 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x08 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x5e ; '^'
00000000000014c1         db  0x04 ; '.'
00000000000014c2         db  0x00 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x10 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x94 ; '.'
00000000000014c9         db  0x91 ; '.'
00000000000014ca         db  0x96 ; '.'
00000000000014cb         db  0x06 ; '.'
00000000000014cc         db  0x00 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x07 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x6a ; 'j'
00000000000014d1         db  0x04 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x10 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x90 ; '.'
00000000000014d9         db  0x91 ; '.'
00000000000014da         db  0x96 ; '.'
00000000000014db         db  0x06 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x06 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x75 ; 'u'
00000000000014e1         db  0x04 ; '.'
00000000000014e2         db  0x00 ; '.'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x10 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x97 ; '.'
00000000000014e9         db  0x91 ; '.'
00000000000014ea         db  0x96 ; '.'
00000000000014eb         db  0x06 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x05 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x80 ; '.'
00000000000014f1         db  0x04 ; '.'
00000000000014f2         db  0x00 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x10 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x14 ; '.'
00000000000014f9         db  0x69 ; 'i'
00000000000014fa         db  0x69 ; 'i'
00000000000014fb         db  0x0d ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x04 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x8b ; '.'
0000000000001501         db  0x04 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x10 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x16 ; '.'
0000000000001509         db  0x69 ; 'i'
000000000000150a         db  0x69 ; 'i'
000000000000150b         db  0x0d ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x03 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x95 ; '.'
0000000000001511         db  0x04 ; '.'
0000000000001512         db  0x00 ; '.'
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x10 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x75 ; 'u'
0000000000001519         db  0x1a ; '.'
000000000000151a         db  0x69 ; 'i'
000000000000151b         db  0x09 ; '.'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x02 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x9f ; '.'
0000000000001521         db  0x04 ; '.'
0000000000001522         db  0x00 ; '.'
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0x1528; 0x1cd8[ (1968 bytes)
        ; File offset : [5416; 7384[ (1968 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001528         db  0x30 ; '0'
0000000000001529         db  0x95 ; '.'
000000000000152a         db  0x21 ; '!'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x00 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x08 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x00 ; '.'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0xd0 ; '.'
0000000000001539         db  0x37 ; '7'
000000000000153a         db  0x00 ; '.'
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x38 ; '8'
0000000000001541         db  0x95 ; '.'
0000000000001542         db  0x21 ; '!'
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x00 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x08 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x00 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x90 ; '.'
0000000000001551         db  0x37 ; '7'
0000000000001552         db  0x00 ; '.'
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x40 ; '@'
0000000000001559         db  0x95 ; '.'
000000000000155a         db  0x21 ; '!'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x08 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x00 ; '.'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0xc9 ; '.'
0000000000001569         db  0x2a ; '*'
000000000000156a         db  0x01 ; '.'
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x00 ; '.'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x48 ; 'H'
0000000000001571         db  0x95 ; '.'
0000000000001572         db  0x21 ; '!'
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x00 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x08 ; '.'
0000000000001579         db  0x00 ; '.'
000000000000157a         db  0x00 ; '.'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x00 ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0xce ; '.'
0000000000001581         db  0x2a ; '*'
0000000000001582         db  0x01 ; '.'
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x00 ; '.'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x50 ; 'P'
0000000000001589         db  0x95 ; '.'
000000000000158a         db  0x21 ; '!'
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x00 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x08 ; '.'
0000000000001591         db  0x00 ; '.'
0000000000001592         db  0x00 ; '.'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x00 ; '.'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0xd9 ; '.'
0000000000001599         db  0x2a ; '*'
000000000000159a         db  0x01 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x00 ; '.'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0x58 ; 'X'
00000000000015a1         db  0x95 ; '.'
00000000000015a2         db  0x21 ; '!'
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x00 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x08 ; '.'
00000000000015a9         db  0x00 ; '.'
00000000000015aa         db  0x00 ; '.'
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x00 ; '.'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0xe3 ; '.'
00000000000015b1         db  0x2a ; '*'
00000000000015b2         db  0x01 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x00 ; '.'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0x60 ; '`'
00000000000015b9         db  0x95 ; '.'
00000000000015ba         db  0x21 ; '!'
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x00 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x08 ; '.'
00000000000015c1         db  0x00 ; '.'
00000000000015c2         db  0x00 ; '.'
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x00 ; '.'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0xe9 ; '.'
00000000000015c9         db  0x2a ; '*'
00000000000015ca         db  0x01 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x00 ; '.'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0x68 ; 'h'
00000000000015d1         db  0x95 ; '.'
00000000000015d2         db  0x21 ; '!'
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x00 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x08 ; '.'
00000000000015d9         db  0x00 ; '.'
00000000000015da         db  0x00 ; '.'
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x00 ; '.'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0xf1 ; '.'
00000000000015e1         db  0x2a ; '*'
00000000000015e2         db  0x01 ; '.'
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x00 ; '.'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0x70 ; 'p'
00000000000015e9         db  0x95 ; '.'
00000000000015ea         db  0x21 ; '!'
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x00 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x08 ; '.'
00000000000015f1         db  0x00 ; '.'
00000000000015f2         db  0x00 ; '.'
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x00 ; '.'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0xf7 ; '.'
00000000000015f9         db  0x2a ; '*'
00000000000015fa         db  0x01 ; '.'
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x00 ; '.'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0x80 ; '.'
0000000000001601         db  0x95 ; '.'
0000000000001602         db  0x21 ; '!'
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x00 ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x08 ; '.'
0000000000001609         db  0x00 ; '.'
000000000000160a         db  0x00 ; '.'
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x00 ; '.'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0xfb ; '.'
0000000000001611         db  0x2a ; '*'
0000000000001612         db  0x01 ; '.'
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x00 ; '.'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0xa0 ; '.'
0000000000001619         db  0x95 ; '.'
000000000000161a         db  0x21 ; '!'
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x00 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x08 ; '.'
0000000000001621         db  0x00 ; '.'
0000000000001622         db  0x00 ; '.'
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x00 ; '.'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x03 ; '.'
0000000000001629         db  0x2b ; '+'
000000000000162a         db  0x01 ; '.'
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x00 ; '.'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0xc0 ; '.'
0000000000001631         db  0x95 ; '.'
0000000000001632         db  0x21 ; '!'
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x00 ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x08 ; '.'
0000000000001639         db  0x00 ; '.'
000000000000163a         db  0x00 ; '.'
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x00 ; '.'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x13 ; '.'
0000000000001641         db  0x2b ; '+'
0000000000001642         db  0x01 ; '.'
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x00 ; '.'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0xe0 ; '.'
0000000000001649         db  0x95 ; '.'
000000000000164a         db  0x21 ; '!'
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x00 ; '.'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0x08 ; '.'
0000000000001651         db  0x00 ; '.'
0000000000001652         db  0x00 ; '.'
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x00 ; '.'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0x1a ; '.'
0000000000001659         db  0x2b ; '+'
000000000000165a         db  0x01 ; '.'
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x00 ; '.'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0x00 ; '.'
0000000000001661         db  0x96 ; '.'
0000000000001662         db  0x21 ; '!'
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x00 ; '.'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0x08 ; '.'
0000000000001669         db  0x00 ; '.'
000000000000166a         db  0x00 ; '.'
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x00 ; '.'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0x48 ; 'H'
0000000000001671         db  0x2b ; '+'
0000000000001672         db  0x01 ; '.'
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x00 ; '.'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x20 ; ' '
0000000000001679         db  0x96 ; '.'
000000000000167a         db  0x21 ; '!'
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x00 ; '.'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0x08 ; '.'
0000000000001681         db  0x00 ; '.'
0000000000001682         db  0x00 ; '.'
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x00 ; '.'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0x28 ; '('
0000000000001689         db  0x2b ; '+'
000000000000168a         db  0x01 ; '.'
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x00 ; '.'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x40 ; '@'
0000000000001691         db  0x96 ; '.'
0000000000001692         db  0x21 ; '!'
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x00 ; '.'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0x08 ; '.'
0000000000001699         db  0x00 ; '.'
000000000000169a         db  0x00 ; '.'
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x00 ; '.'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0x2e ; '.'
00000000000016a1         db  0x2b ; '+'
00000000000016a2         db  0x01 ; '.'
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x00 ; '.'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x60 ; '`'
00000000000016a9         db  0x96 ; '.'
00000000000016aa         db  0x21 ; '!'
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x00 ; '.'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0x08 ; '.'
00000000000016b1         db  0x00 ; '.'
00000000000016b2         db  0x00 ; '.'
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x00 ; '.'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0xc9 ; '.'
00000000000016b9         db  0x2b ; '+'
00000000000016ba         db  0x01 ; '.'
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x00 ; '.'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x80 ; '.'
00000000000016c1         db  0x96 ; '.'
00000000000016c2         db  0x21 ; '!'
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x00 ; '.'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0x08 ; '.'
00000000000016c9         db  0x00 ; '.'
00000000000016ca         db  0x00 ; '.'
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x00 ; '.'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'
00000000000016d0         db  0x3a ; ':'
00000000000016d1         db  0x2b ; '+'
00000000000016d2         db  0x01 ; '.'
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x00 ; '.'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0xa0 ; '.'
00000000000016d9         db  0x96 ; '.'
00000000000016da         db  0x21 ; '!'
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x00 ; '.'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'
00000000000016e0         db  0x08 ; '.'
00000000000016e1         db  0x00 ; '.'
00000000000016e2         db  0x00 ; '.'
00000000000016e3         db  0x00 ; '.'
00000000000016e4         db  0x00 ; '.'
00000000000016e5         db  0x00 ; '.'
00000000000016e6         db  0x00 ; '.'
00000000000016e7         db  0x00 ; '.'
00000000000016e8         db  0x45 ; 'E'
00000000000016e9         db  0x2b ; '+'
00000000000016ea         db  0x01 ; '.'
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x00 ; '.'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'
00000000000016f0         db  0xc0 ; '.'
00000000000016f1         db  0x96 ; '.'
00000000000016f2         db  0x21 ; '!'
00000000000016f3         db  0x00 ; '.'
00000000000016f4         db  0x00 ; '.'
00000000000016f5         db  0x00 ; '.'
00000000000016f6         db  0x00 ; '.'
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0x08 ; '.'
00000000000016f9         db  0x00 ; '.'
00000000000016fa         db  0x00 ; '.'
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x00 ; '.'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'
0000000000001700         db  0xf1 ; '.'
0000000000001701         db  0x28 ; '('
0000000000001702         db  0x01 ; '.'
0000000000001703         db  0x00 ; '.'
0000000000001704         db  0x00 ; '.'
0000000000001705         db  0x00 ; '.'
0000000000001706         db  0x00 ; '.'
0000000000001707         db  0x00 ; '.'
0000000000001708         db  0xe0 ; '.'
0000000000001709         db  0x96 ; '.'
000000000000170a         db  0x21 ; '!'
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x00 ; '.'
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'
0000000000001710         db  0x08 ; '.'
0000000000001711         db  0x00 ; '.'
0000000000001712         db  0x00 ; '.'
0000000000001713         db  0x00 ; '.'
0000000000001714         db  0x00 ; '.'
0000000000001715         db  0x00 ; '.'
0000000000001716         db  0x00 ; '.'
0000000000001717         db  0x00 ; '.'
0000000000001718         db  0x54 ; 'T'
0000000000001719         db  0x2b ; '+'
000000000000171a         db  0x01 ; '.'
000000000000171b         db  0x00 ; '.'
000000000000171c         db  0x00 ; '.'
000000000000171d         db  0x00 ; '.'
000000000000171e         db  0x00 ; '.'
000000000000171f         db  0x00 ; '.'
0000000000001720         db  0x00 ; '.'
0000000000001721         db  0x97 ; '.'
0000000000001722         db  0x21 ; '!'
0000000000001723         db  0x00 ; '.'
0000000000001724         db  0x00 ; '.'
0000000000001725         db  0x00 ; '.'
0000000000001726         db  0x00 ; '.'
0000000000001727         db  0x00 ; '.'
0000000000001728         db  0x08 ; '.'
0000000000001729         db  0x00 ; '.'
000000000000172a         db  0x00 ; '.'
000000000000172b         db  0x00 ; '.'
000000000000172c         db  0x00 ; '.'
000000000000172d         db  0x00 ; '.'
000000000000172e         db  0x00 ; '.'
000000000000172f         db  0x00 ; '.'
0000000000001730         db  0x68 ; 'h'
0000000000001731         db  0x2b ; '+'
0000000000001732         db  0x01 ; '.'
0000000000001733         db  0x00 ; '.'
0000000000001734         db  0x00 ; '.'
0000000000001735         db  0x00 ; '.'
0000000000001736         db  0x00 ; '.'
0000000000001737         db  0x00 ; '.'
0000000000001738         db  0x20 ; ' '
0000000000001739         db  0x97 ; '.'
000000000000173a         db  0x21 ; '!'
000000000000173b         db  0x00 ; '.'
000000000000173c         db  0x00 ; '.'
000000000000173d         db  0x00 ; '.'
000000000000173e         db  0x00 ; '.'
000000000000173f         db  0x00 ; '.'
0000000000001740         db  0x08 ; '.'
0000000000001741         db  0x00 ; '.'
0000000000001742         db  0x00 ; '.'
0000000000001743         db  0x00 ; '.'
0000000000001744         db  0x00 ; '.'
0000000000001745         db  0x00 ; '.'
0000000000001746         db  0x00 ; '.'
0000000000001747         db  0x00 ; '.'
0000000000001748         db  0x78 ; 'x'
0000000000001749         db  0x2b ; '+'
000000000000174a         db  0x01 ; '.'
000000000000174b         db  0x00 ; '.'
000000000000174c         db  0x00 ; '.'
000000000000174d         db  0x00 ; '.'
000000000000174e         db  0x00 ; '.'
000000000000174f         db  0x00 ; '.'
0000000000001750         db  0x40 ; '@'
0000000000001751         db  0x97 ; '.'
0000000000001752         db  0x21 ; '!'
0000000000001753         db  0x00 ; '.'
0000000000001754         db  0x00 ; '.'
0000000000001755         db  0x00 ; '.'
0000000000001756         db  0x00 ; '.'
0000000000001757         db  0x00 ; '.'
0000000000001758         db  0x08 ; '.'
0000000000001759         db  0x00 ; '.'
000000000000175a         db  0x00 ; '.'
000000000000175b         db  0x00 ; '.'
000000000000175c         db  0x00 ; '.'
000000000000175d         db  0x00 ; '.'
000000000000175e         db  0x00 ; '.'
000000000000175f         db  0x00 ; '.'
0000000000001760         db  0x80 ; '.'
0000000000001761         db  0x2b ; '+'
0000000000001762         db  0x01 ; '.'
0000000000001763         db  0x00 ; '.'
0000000000001764         db  0x00 ; '.'
0000000000001765         db  0x00 ; '.'
0000000000001766         db  0x00 ; '.'
0000000000001767         db  0x00 ; '.'
0000000000001768         db  0x60 ; '`'
0000000000001769         db  0x97 ; '.'
000000000000176a         db  0x21 ; '!'
000000000000176b         db  0x00 ; '.'
000000000000176c         db  0x00 ; '.'
000000000000176d         db  0x00 ; '.'
000000000000176e         db  0x00 ; '.'
000000000000176f         db  0x00 ; '.'
0000000000001770         db  0x08 ; '.'
0000000000001771         db  0x00 ; '.'
0000000000001772         db  0x00 ; '.'
0000000000001773         db  0x00 ; '.'
0000000000001774         db  0x00 ; '.'
0000000000001775         db  0x00 ; '.'
0000000000001776         db  0x00 ; '.'
0000000000001777         db  0x00 ; '.'
0000000000001778         db  0xe6 ; '.'
0000000000001779         db  0x28 ; '('
000000000000177a         db  0x01 ; '.'
000000000000177b         db  0x00 ; '.'
000000000000177c         db  0x00 ; '.'
000000000000177d         db  0x00 ; '.'
000000000000177e         db  0x00 ; '.'
000000000000177f         db  0x00 ; '.'
0000000000001780         db  0x80 ; '.'
0000000000001781         db  0x97 ; '.'
0000000000001782         db  0x21 ; '!'
0000000000001783         db  0x00 ; '.'
0000000000001784         db  0x00 ; '.'
0000000000001785         db  0x00 ; '.'
0000000000001786         db  0x00 ; '.'
0000000000001787         db  0x00 ; '.'
0000000000001788         db  0x08 ; '.'
0000000000001789         db  0x00 ; '.'
000000000000178a         db  0x00 ; '.'
000000000000178b         db  0x00 ; '.'
000000000000178c         db  0x00 ; '.'
000000000000178d         db  0x00 ; '.'
000000000000178e         db  0x00 ; '.'
000000000000178f         db  0x00 ; '.'
0000000000001790         db  0x85 ; '.'
0000000000001791         db  0x2b ; '+'
0000000000001792         db  0x01 ; '.'
0000000000001793         db  0x00 ; '.'
0000000000001794         db  0x00 ; '.'
0000000000001795         db  0x00 ; '.'
0000000000001796         db  0x00 ; '.'
0000000000001797         db  0x00 ; '.'
0000000000001798         db  0xa0 ; '.'
0000000000001799         db  0x97 ; '.'
000000000000179a         db  0x21 ; '!'
000000000000179b         db  0x00 ; '.'
000000000000179c         db  0x00 ; '.'
000000000000179d         db  0x00 ; '.'
000000000000179e         db  0x00 ; '.'
000000000000179f         db  0x00 ; '.'
00000000000017a0         db  0x08 ; '.'
00000000000017a1         db  0x00 ; '.'
00000000000017a2         db  0x00 ; '.'
00000000000017a3         db  0x00 ; '.'
00000000000017a4         db  0x00 ; '.'
00000000000017a5         db  0x00 ; '.'
00000000000017a6         db  0x00 ; '.'
00000000000017a7         db  0x00 ; '.'
00000000000017a8         db  0x8f ; '.'
00000000000017a9         db  0x2b ; '+'
00000000000017aa         db  0x01 ; '.'
00000000000017ab         db  0x00 ; '.'
00000000000017ac         db  0x00 ; '.'
00000000000017ad         db  0x00 ; '.'
00000000000017ae         db  0x00 ; '.'
00000000000017af         db  0x00 ; '.'
00000000000017b0         db  0xc0 ; '.'
00000000000017b1         db  0x97 ; '.'
00000000000017b2         db  0x21 ; '!'
00000000000017b3         db  0x00 ; '.'
00000000000017b4         db  0x00 ; '.'
00000000000017b5         db  0x00 ; '.'
00000000000017b6         db  0x00 ; '.'
00000000000017b7         db  0x00 ; '.'
00000000000017b8         db  0x08 ; '.'
00000000000017b9         db  0x00 ; '.'
00000000000017ba         db  0x00 ; '.'
00000000000017bb         db  0x00 ; '.'
00000000000017bc         db  0x00 ; '.'
00000000000017bd         db  0x00 ; '.'
00000000000017be         db  0x00 ; '.'
00000000000017bf         db  0x00 ; '.'
00000000000017c0         db  0x65 ; 'e'
00000000000017c1         db  0x2a ; '*'
00000000000017c2         db  0x01 ; '.'
00000000000017c3         db  0x00 ; '.'
00000000000017c4         db  0x00 ; '.'
00000000000017c5         db  0x00 ; '.'
00000000000017c6         db  0x00 ; '.'
00000000000017c7         db  0x00 ; '.'
00000000000017c8         db  0xe0 ; '.'
00000000000017c9         db  0x97 ; '.'
00000000000017ca         db  0x21 ; '!'
00000000000017cb         db  0x00 ; '.'
00000000000017cc         db  0x00 ; '.'
00000000000017cd         db  0x00 ; '.'
00000000000017ce         db  0x00 ; '.'
00000000000017cf         db  0x00 ; '.'
00000000000017d0         db  0x08 ; '.'
00000000000017d1         db  0x00 ; '.'
00000000000017d2         db  0x00 ; '.'
00000000000017d3         db  0x00 ; '.'
00000000000017d4         db  0x00 ; '.'
00000000000017d5         db  0x00 ; '.'
00000000000017d6         db  0x00 ; '.'
00000000000017d7         db  0x00 ; '.'
00000000000017d8         db  0x6e ; 'n'
00000000000017d9         db  0x2a ; '*'
00000000000017da         db  0x01 ; '.'
00000000000017db         db  0x00 ; '.'
00000000000017dc         db  0x00 ; '.'
00000000000017dd         db  0x00 ; '.'
00000000000017de         db  0x00 ; '.'
00000000000017df         db  0x00 ; '.'
00000000000017e0         db  0x00 ; '.'
00000000000017e1         db  0x98 ; '.'
00000000000017e2         db  0x21 ; '!'
00000000000017e3         db  0x00 ; '.'
00000000000017e4         db  0x00 ; '.'
00000000000017e5         db  0x00 ; '.'
00000000000017e6         db  0x00 ; '.'
00000000000017e7         db  0x00 ; '.'
00000000000017e8         db  0x08 ; '.'
00000000000017e9         db  0x00 ; '.'
00000000000017ea         db  0x00 ; '.'
00000000000017eb         db  0x00 ; '.'
00000000000017ec         db  0x00 ; '.'
00000000000017ed         db  0x00 ; '.'
00000000000017ee         db  0x00 ; '.'
00000000000017ef         db  0x00 ; '.'
00000000000017f0         db  0xa2 ; '.'
00000000000017f1         db  0x2b ; '+'
00000000000017f2         db  0x01 ; '.'
00000000000017f3         db  0x00 ; '.'
00000000000017f4         db  0x00 ; '.'
00000000000017f5         db  0x00 ; '.'
00000000000017f6         db  0x00 ; '.'
00000000000017f7         db  0x00 ; '.'
00000000000017f8         db  0x20 ; ' '
00000000000017f9         db  0x98 ; '.'
00000000000017fa         db  0x21 ; '!'
00000000000017fb         db  0x00 ; '.'
00000000000017fc         db  0x00 ; '.'
00000000000017fd         db  0x00 ; '.'
00000000000017fe         db  0x00 ; '.'
00000000000017ff         db  0x00 ; '.'
0000000000001800         db  0x08 ; '.'
0000000000001801         db  0x00 ; '.'
0000000000001802         db  0x00 ; '.'
0000000000001803         db  0x00 ; '.'
0000000000001804         db  0x00 ; '.'
0000000000001805         db  0x00 ; '.'
0000000000001806         db  0x00 ; '.'
0000000000001807         db  0x00 ; '.'
0000000000001808         db  0xb9 ; '.'
0000000000001809         db  0x2b ; '+'
000000000000180a         db  0x01 ; '.'
000000000000180b         db  0x00 ; '.'
000000000000180c         db  0x00 ; '.'
000000000000180d         db  0x00 ; '.'
000000000000180e         db  0x00 ; '.'
000000000000180f         db  0x00 ; '.'
0000000000001810         db  0x40 ; '@'
0000000000001811         db  0x98 ; '.'
0000000000001812         db  0x21 ; '!'
0000000000001813         db  0x00 ; '.'
0000000000001814         db  0x00 ; '.'
0000000000001815         db  0x00 ; '.'
0000000000001816         db  0x00 ; '.'
0000000000001817         db  0x00 ; '.'
0000000000001818         db  0x08 ; '.'
0000000000001819         db  0x00 ; '.'
000000000000181a         db  0x00 ; '.'
000000000000181b         db  0x00 ; '.'
000000000000181c         db  0x00 ; '.'
000000000000181d         db  0x00 ; '.'
000000000000181e         db  0x00 ; '.'
000000000000181f         db  0x00 ; '.'
0000000000001820         db  0xc0 ; '.'
0000000000001821         db  0x2b ; '+'
0000000000001822         db  0x01 ; '.'
0000000000001823         db  0x00 ; '.'
0000000000001824         db  0x00 ; '.'
0000000000001825         db  0x00 ; '.'
0000000000001826         db  0x00 ; '.'
0000000000001827         db  0x00 ; '.'
0000000000001828         db  0x60 ; '`'
0000000000001829         db  0x98 ; '.'
000000000000182a         db  0x21 ; '!'
000000000000182b         db  0x00 ; '.'
000000000000182c         db  0x00 ; '.'
000000000000182d         db  0x00 ; '.'
000000000000182e         db  0x00 ; '.'
000000000000182f         db  0x00 ; '.'
0000000000001830         db  0x08 ; '.'
0000000000001831         db  0x00 ; '.'
0000000000001832         db  0x00 ; '.'
0000000000001833         db  0x00 ; '.'
0000000000001834         db  0x00 ; '.'
0000000000001835         db  0x00 ; '.'
0000000000001836         db  0x00 ; '.'
0000000000001837         db  0x00 ; '.'
0000000000001838         db  0x57 ; 'W'
0000000000001839         db  0x2b ; '+'
000000000000183a         db  0x01 ; '.'
000000000000183b         db  0x00 ; '.'
000000000000183c         db  0x00 ; '.'
000000000000183d         db  0x00 ; '.'
000000000000183e         db  0x00 ; '.'
000000000000183f         db  0x00 ; '.'
0000000000001840         db  0x80 ; '.'
0000000000001841         db  0x98 ; '.'
0000000000001842         db  0x21 ; '!'
0000000000001843         db  0x00 ; '.'
0000000000001844         db  0x00 ; '.'
0000000000001845         db  0x00 ; '.'
0000000000001846         db  0x00 ; '.'
0000000000001847         db  0x00 ; '.'
0000000000001848         db  0x08 ; '.'
0000000000001849         db  0x00 ; '.'
000000000000184a         db  0x00 ; '.'
000000000000184b         db  0x00 ; '.'
000000000000184c         db  0x00 ; '.'
000000000000184d         db  0x00 ; '.'
000000000000184e         db  0x00 ; '.'
000000000000184f         db  0x00 ; '.'
0000000000001850         db  0xce ; '.'
0000000000001851         db  0x2b ; '+'
0000000000001852         db  0x01 ; '.'
0000000000001853         db  0x00 ; '.'
0000000000001854         db  0x00 ; '.'
0000000000001855         db  0x00 ; '.'
0000000000001856         db  0x00 ; '.'
0000000000001857         db  0x00 ; '.'
0000000000001858         db  0xa0 ; '.'
0000000000001859         db  0x98 ; '.'
000000000000185a         db  0x21 ; '!'
000000000000185b         db  0x00 ; '.'
000000000000185c         db  0x00 ; '.'
000000000000185d         db  0x00 ; '.'
000000000000185e         db  0x00 ; '.'
000000000000185f         db  0x00 ; '.'
0000000000001860         db  0x08 ; '.'
0000000000001861         db  0x00 ; '.'
0000000000001862         db  0x00 ; '.'
0000000000001863         db  0x00 ; '.'
0000000000001864         db  0x00 ; '.'
0000000000001865         db  0x00 ; '.'
0000000000001866         db  0x00 ; '.'
0000000000001867         db  0x00 ; '.'
0000000000001868         db  0xd5 ; '.'
0000000000001869         db  0x2b ; '+'
000000000000186a         db  0x01 ; '.'
000000000000186b         db  0x00 ; '.'
000000000000186c         db  0x00 ; '.'
000000000000186d         db  0x00 ; '.'
000000000000186e         db  0x00 ; '.'
000000000000186f         db  0x00 ; '.'
0000000000001870         db  0xc0 ; '.'
0000000000001871         db  0x98 ; '.'
0000000000001872         db  0x21 ; '!'
0000000000001873         db  0x00 ; '.'
0000000000001874         db  0x00 ; '.'
0000000000001875         db  0x00 ; '.'
0000000000001876         db  0x00 ; '.'
0000000000001877         db  0x00 ; '.'
0000000000001878         db  0x08 ; '.'
0000000000001879         db  0x00 ; '.'
000000000000187a         db  0x00 ; '.'
000000000000187b         db  0x00 ; '.'
000000000000187c         db  0x00 ; '.'
000000000000187d         db  0x00 ; '.'
000000000000187e         db  0x00 ; '.'
000000000000187f         db  0x00 ; '.'
0000000000001880         db  0xe9 ; '.'
0000000000001881         db  0x2a ; '*'
0000000000001882         db  0x01 ; '.'
0000000000001883         db  0x00 ; '.'
0000000000001884         db  0x00 ; '.'
0000000000001885         db  0x00 ; '.'
0000000000001886         db  0x00 ; '.'
0000000000001887         db  0x00 ; '.'
0000000000001888         db  0xe0 ; '.'
0000000000001889         db  0x98 ; '.'
000000000000188a         db  0x21 ; '!'
000000000000188b         db  0x00 ; '.'
000000000000188c         db  0x00 ; '.'
000000000000188d         db  0x00 ; '.'
000000000000188e         db  0x00 ; '.'
000000000000188f         db  0x00 ; '.'
0000000000001890         db  0x08 ; '.'
0000000000001891         db  0x00 ; '.'
0000000000001892         db  0x00 ; '.'
0000000000001893         db  0x00 ; '.'
0000000000001894         db  0x00 ; '.'
0000000000001895         db  0x00 ; '.'
0000000000001896         db  0x00 ; '.'
0000000000001897         db  0x00 ; '.'
0000000000001898         db  0xdd ; '.'
0000000000001899         db  0x2b ; '+'
000000000000189a         db  0x01 ; '.'
000000000000189b         db  0x00 ; '.'
000000000000189c         db  0x00 ; '.'
000000000000189d         db  0x00 ; '.'
000000000000189e         db  0x00 ; '.'
000000000000189f         db  0x00 ; '.'
00000000000018a0         db  0x00 ; '.'
00000000000018a1         db  0x99 ; '.'
00000000000018a2         db  0x21 ; '!'
00000000000018a3         db  0x00 ; '.'
00000000000018a4         db  0x00 ; '.'
00000000000018a5         db  0x00 ; '.'
00000000000018a6         db  0x00 ; '.'
00000000000018a7         db  0x00 ; '.'
00000000000018a8         db  0x08 ; '.'
00000000000018a9         db  0x00 ; '.'
00000000000018aa         db  0x00 ; '.'
00000000000018ab         db  0x00 ; '.'
00000000000018ac         db  0x00 ; '.'
00000000000018ad         db  0x00 ; '.'
00000000000018ae         db  0x00 ; '.'
00000000000018af         db  0x00 ; '.'
00000000000018b0         db  0xe2 ; '.'
00000000000018b1         db  0x2b ; '+'
00000000000018b2         db  0x01 ; '.'
00000000000018b3         db  0x00 ; '.'
00000000000018b4         db  0x00 ; '.'
00000000000018b5         db  0x00 ; '.'
00000000000018b6         db  0x00 ; '.'
00000000000018b7         db  0x00 ; '.'
00000000000018b8         db  0x40 ; '@'
00000000000018b9         db  0x99 ; '.'
00000000000018ba         db  0x21 ; '!'
00000000000018bb         db  0x00 ; '.'
00000000000018bc         db  0x00 ; '.'
00000000000018bd         db  0x00 ; '.'
00000000000018be         db  0x00 ; '.'
00000000000018bf         db  0x00 ; '.'
00000000000018c0         db  0x08 ; '.'
00000000000018c1         db  0x00 ; '.'
00000000000018c2         db  0x00 ; '.'
00000000000018c3         db  0x00 ; '.'
00000000000018c4         db  0x00 ; '.'
00000000000018c5         db  0x00 ; '.'
00000000000018c6         db  0x00 ; '.'
00000000000018c7         db  0x00 ; '.'
00000000000018c8         db  0xea ; '.'
00000000000018c9         db  0x2b ; '+'
00000000000018ca         db  0x01 ; '.'
00000000000018cb         db  0x00 ; '.'
00000000000018cc         db  0x00 ; '.'
00000000000018cd         db  0x00 ; '.'
00000000000018ce         db  0x00 ; '.'
00000000000018cf         db  0x00 ; '.'
00000000000018d0         db  0x48 ; 'H'
00000000000018d1         db  0x99 ; '.'
00000000000018d2         db  0x21 ; '!'
00000000000018d3         db  0x00 ; '.'
00000000000018d4         db  0x00 ; '.'
00000000000018d5         db  0x00 ; '.'
00000000000018d6         db  0x00 ; '.'
00000000000018d7         db  0x00 ; '.'
00000000000018d8         db  0x08 ; '.'
00000000000018d9         db  0x00 ; '.'
00000000000018da         db  0x00 ; '.'
00000000000018db         db  0x00 ; '.'
00000000000018dc         db  0x00 ; '.'
00000000000018dd         db  0x00 ; '.'
00000000000018de         db  0x00 ; '.'
00000000000018df         db  0x00 ; '.'
00000000000018e0         db  0x6e ; 'n'
00000000000018e1         db  0x53 ; 'S'
00000000000018e2         db  0x01 ; '.'
00000000000018e3         db  0x00 ; '.'
00000000000018e4         db  0x00 ; '.'
00000000000018e5         db  0x00 ; '.'
00000000000018e6         db  0x00 ; '.'
00000000000018e7         db  0x00 ; '.'
00000000000018e8         db  0x50 ; 'P'
00000000000018e9         db  0x99 ; '.'
00000000000018ea         db  0x21 ; '!'
00000000000018eb         db  0x00 ; '.'
00000000000018ec         db  0x00 ; '.'
00000000000018ed         db  0x00 ; '.'
00000000000018ee         db  0x00 ; '.'
00000000000018ef         db  0x00 ; '.'
00000000000018f0         db  0x08 ; '.'
00000000000018f1         db  0x00 ; '.'
00000000000018f2         db  0x00 ; '.'
00000000000018f3         db  0x00 ; '.'
00000000000018f4         db  0x00 ; '.'
00000000000018f5         db  0x00 ; '.'
00000000000018f6         db  0x00 ; '.'
00000000000018f7         db  0x00 ; '.'
00000000000018f8         db  0xef ; '.'
00000000000018f9         db  0x2b ; '+'
00000000000018fa         db  0x01 ; '.'
00000000000018fb         db  0x00 ; '.'
00000000000018fc         db  0x00 ; '.'
00000000000018fd         db  0x00 ; '.'
00000000000018fe         db  0x00 ; '.'
00000000000018ff         db  0x00 ; '.'
0000000000001900         db  0x60 ; '`'
0000000000001901         db  0x99 ; '.'
0000000000001902         db  0x21 ; '!'
0000000000001903         db  0x00 ; '.'
0000000000001904         db  0x00 ; '.'
0000000000001905         db  0x00 ; '.'
0000000000001906         db  0x00 ; '.'
0000000000001907         db  0x00 ; '.'
0000000000001908         db  0x08 ; '.'
0000000000001909         db  0x00 ; '.'
000000000000190a         db  0x00 ; '.'
000000000000190b         db  0x00 ; '.'
000000000000190c         db  0x00 ; '.'
000000000000190d         db  0x00 ; '.'
000000000000190e         db  0x00 ; '.'
000000000000190f         db  0x00 ; '.'
0000000000001910         db  0xef ; '.'
0000000000001911         db  0x2b ; '+'
0000000000001912         db  0x01 ; '.'
0000000000001913         db  0x00 ; '.'
0000000000001914         db  0x00 ; '.'
0000000000001915         db  0x00 ; '.'
0000000000001916         db  0x00 ; '.'
0000000000001917         db  0x00 ; '.'
0000000000001918         db  0x68 ; 'h'
0000000000001919         db  0x99 ; '.'
000000000000191a         db  0x21 ; '!'
000000000000191b         db  0x00 ; '.'
000000000000191c         db  0x00 ; '.'
000000000000191d         db  0x00 ; '.'
000000000000191e         db  0x00 ; '.'
000000000000191f         db  0x00 ; '.'
0000000000001920         db  0x08 ; '.'
0000000000001921         db  0x00 ; '.'
0000000000001922         db  0x00 ; '.'
0000000000001923         db  0x00 ; '.'
0000000000001924         db  0x00 ; '.'
0000000000001925         db  0x00 ; '.'
0000000000001926         db  0x00 ; '.'
0000000000001927         db  0x00 ; '.'
0000000000001928         db  0xea ; '.'
0000000000001929         db  0x2b ; '+'
000000000000192a         db  0x01 ; '.'
000000000000192b         db  0x00 ; '.'
000000000000192c         db  0x00 ; '.'
000000000000192d         db  0x00 ; '.'
000000000000192e         db  0x00 ; '.'
000000000000192f         db  0x00 ; '.'
0000000000001930         db  0x70 ; 'p'
0000000000001931         db  0x99 ; '.'
0000000000001932         db  0x21 ; '!'
0000000000001933         db  0x00 ; '.'
0000000000001934         db  0x00 ; '.'
0000000000001935         db  0x00 ; '.'
0000000000001936         db  0x00 ; '.'
0000000000001937         db  0x00 ; '.'
0000000000001938         db  0x08 ; '.'
0000000000001939         db  0x00 ; '.'
000000000000193a         db  0x00 ; '.'
000000000000193b         db  0x00 ; '.'
000000000000193c         db  0x00 ; '.'
000000000000193d         db  0x00 ; '.'
000000000000193e         db  0x00 ; '.'
000000000000193f         db  0x00 ; '.'
0000000000001940         db  0x6e ; 'n'
0000000000001941         db  0x53 ; 'S'
0000000000001942         db  0x01 ; '.'
0000000000001943         db  0x00 ; '.'
0000000000001944         db  0x00 ; '.'
0000000000001945         db  0x00 ; '.'
0000000000001946         db  0x00 ; '.'
0000000000001947         db  0x00 ; '.'
0000000000001948         db  0x80 ; '.'
0000000000001949         db  0x99 ; '.'
000000000000194a         db  0x21 ; '!'
000000000000194b         db  0x00 ; '.'
000000000000194c         db  0x00 ; '.'
000000000000194d         db  0x00 ; '.'
000000000000194e         db  0x00 ; '.'
000000000000194f         db  0x00 ; '.'
0000000000001950         db  0x08 ; '.'
0000000000001951         db  0x00 ; '.'
0000000000001952         db  0x00 ; '.'
0000000000001953         db  0x00 ; '.'
0000000000001954         db  0x00 ; '.'
0000000000001955         db  0x00 ; '.'
0000000000001956         db  0x00 ; '.'
0000000000001957         db  0x00 ; '.'
0000000000001958         db  0xb8 ; '.'
0000000000001959         db  0x51 ; 'Q'
000000000000195a         db  0x01 ; '.'
000000000000195b         db  0x00 ; '.'
000000000000195c         db  0x00 ; '.'
000000000000195d         db  0x00 ; '.'
000000000000195e         db  0x00 ; '.'
000000000000195f         db  0x00 ; '.'
0000000000001960         db  0x88 ; '.'
0000000000001961         db  0x99 ; '.'
0000000000001962         db  0x21 ; '!'
0000000000001963         db  0x00 ; '.'
0000000000001964         db  0x00 ; '.'
0000000000001965         db  0x00 ; '.'
0000000000001966         db  0x00 ; '.'
0000000000001967         db  0x00 ; '.'
0000000000001968         db  0x08 ; '.'
0000000000001969         db  0x00 ; '.'
000000000000196a         db  0x00 ; '.'
000000000000196b         db  0x00 ; '.'
000000000000196c         db  0x00 ; '.'
000000000000196d         db  0x00 ; '.'
000000000000196e         db  0x00 ; '.'
000000000000196f         db  0x00 ; '.'
0000000000001970         db  0xbd ; '.'
0000000000001971         db  0x51 ; 'Q'
0000000000001972         db  0x01 ; '.'
0000000000001973         db  0x00 ; '.'
0000000000001974         db  0x00 ; '.'
0000000000001975         db  0x00 ; '.'
0000000000001976         db  0x00 ; '.'
0000000000001977         db  0x00 ; '.'
0000000000001978         db  0x90 ; '.'
0000000000001979         db  0x99 ; '.'
000000000000197a         db  0x21 ; '!'
000000000000197b         db  0x00 ; '.'
000000000000197c         db  0x00 ; '.'
000000000000197d         db  0x00 ; '.'
000000000000197e         db  0x00 ; '.'
000000000000197f         db  0x00 ; '.'
0000000000001980         db  0x08 ; '.'
0000000000001981         db  0x00 ; '.'
0000000000001982         db  0x00 ; '.'
0000000000001983         db  0x00 ; '.'
0000000000001984         db  0x00 ; '.'
0000000000001985         db  0x00 ; '.'
0000000000001986         db  0x00 ; '.'
0000000000001987         db  0x00 ; '.'
0000000000001988         db  0xc1 ; '.'
0000000000001989         db  0x51 ; 'Q'
000000000000198a         db  0x01 ; '.'
000000000000198b         db  0x00 ; '.'
000000000000198c         db  0x00 ; '.'
000000000000198d         db  0x00 ; '.'
000000000000198e         db  0x00 ; '.'
000000000000198f         db  0x00 ; '.'
0000000000001990         db  0x98 ; '.'
0000000000001991         db  0x99 ; '.'
0000000000001992         db  0x21 ; '!'
0000000000001993         db  0x00 ; '.'
0000000000001994         db  0x00 ; '.'
0000000000001995         db  0x00 ; '.'
0000000000001996         db  0x00 ; '.'
0000000000001997         db  0x00 ; '.'
0000000000001998         db  0x08 ; '.'
0000000000001999         db  0x00 ; '.'
000000000000199a         db  0x00 ; '.'
000000000000199b         db  0x00 ; '.'
000000000000199c         db  0x00 ; '.'
000000000000199d         db  0x00 ; '.'
000000000000199e         db  0x00 ; '.'
000000000000199f         db  0x00 ; '.'
00000000000019a0         db  0xef ; '.'
00000000000019a1         db  0x2b ; '+'
00000000000019a2         db  0x01 ; '.'
00000000000019a3         db  0x00 ; '.'
00000000000019a4         db  0x00 ; '.'
00000000000019a5         db  0x00 ; '.'
00000000000019a6         db  0x00 ; '.'
00000000000019a7         db  0x00 ; '.'
00000000000019a8         db  0xa0 ; '.'
00000000000019a9         db  0x99 ; '.'
00000000000019aa         db  0x21 ; '!'
00000000000019ab         db  0x00 ; '.'
00000000000019ac         db  0x00 ; '.'
00000000000019ad         db  0x00 ; '.'
00000000000019ae         db  0x00 ; '.'
00000000000019af         db  0x00 ; '.'
00000000000019b0         db  0x08 ; '.'
00000000000019b1         db  0x00 ; '.'
00000000000019b2         db  0x00 ; '.'
00000000000019b3         db  0x00 ; '.'
00000000000019b4         db  0x00 ; '.'
00000000000019b5         db  0x00 ; '.'
00000000000019b6         db  0x00 ; '.'
00000000000019b7         db  0x00 ; '.'
00000000000019b8         db  0xc8 ; '.'
00000000000019b9         db  0x51 ; 'Q'
00000000000019ba         db  0x01 ; '.'
00000000000019bb         db  0x00 ; '.'
00000000000019bc         db  0x00 ; '.'
00000000000019bd         db  0x00 ; '.'
00000000000019be         db  0x00 ; '.'
00000000000019bf         db  0x00 ; '.'
00000000000019c0         db  0xa8 ; '.'
00000000000019c1         db  0x99 ; '.'
00000000000019c2         db  0x21 ; '!'
00000000000019c3         db  0x00 ; '.'
00000000000019c4         db  0x00 ; '.'
00000000000019c5         db  0x00 ; '.'
00000000000019c6         db  0x00 ; '.'
00000000000019c7         db  0x00 ; '.'
00000000000019c8         db  0x08 ; '.'
00000000000019c9         db  0x00 ; '.'
00000000000019ca         db  0x00 ; '.'
00000000000019cb         db  0x00 ; '.'
00000000000019cc         db  0x00 ; '.'
00000000000019cd         db  0x00 ; '.'
00000000000019ce         db  0x00 ; '.'
00000000000019cf         db  0x00 ; '.'
00000000000019d0         db  0xd1 ; '.'
00000000000019d1         db  0x51 ; 'Q'
00000000000019d2         db  0x01 ; '.'
00000000000019d3         db  0x00 ; '.'
00000000000019d4         db  0x00 ; '.'
00000000000019d5         db  0x00 ; '.'
00000000000019d6         db  0x00 ; '.'
00000000000019d7         db  0x00 ; '.'
00000000000019d8         db  0xb0 ; '.'
00000000000019d9         db  0x99 ; '.'
00000000000019da         db  0x21 ; '!'
00000000000019db         db  0x00 ; '.'
00000000000019dc         db  0x00 ; '.'
00000000000019dd         db  0x00 ; '.'
00000000000019de         db  0x00 ; '.'
00000000000019df         db  0x00 ; '.'
00000000000019e0         db  0x08 ; '.'
00000000000019e1         db  0x00 ; '.'
00000000000019e2         db  0x00 ; '.'
00000000000019e3         db  0x00 ; '.'
00000000000019e4         db  0x00 ; '.'
00000000000019e5         db  0x00 ; '.'
00000000000019e6         db  0x00 ; '.'
00000000000019e7         db  0x00 ; '.'
00000000000019e8         db  0xd5 ; '.'
00000000000019e9         db  0x51 ; 'Q'
00000000000019ea         db  0x01 ; '.'
00000000000019eb         db  0x00 ; '.'
00000000000019ec         db  0x00 ; '.'
00000000000019ed         db  0x00 ; '.'
00000000000019ee         db  0x00 ; '.'
00000000000019ef         db  0x00 ; '.'
00000000000019f0         db  0xb8 ; '.'
00000000000019f1         db  0x99 ; '.'
00000000000019f2         db  0x21 ; '!'
00000000000019f3         db  0x00 ; '.'
00000000000019f4         db  0x00 ; '.'
00000000000019f5         db  0x00 ; '.'
00000000000019f6         db  0x00 ; '.'
00000000000019f7         db  0x00 ; '.'
00000000000019f8         db  0x08 ; '.'
00000000000019f9         db  0x00 ; '.'
00000000000019fa         db  0x00 ; '.'
00000000000019fb         db  0x00 ; '.'
00000000000019fc         db  0x00 ; '.'
00000000000019fd         db  0x00 ; '.'
00000000000019fe         db  0x00 ; '.'
00000000000019ff         db  0x00 ; '.'
0000000000001a00         db  0xef ; '.'
0000000000001a01         db  0x2a ; '*'
0000000000001a02         db  0x01 ; '.'
0000000000001a03         db  0x00 ; '.'
0000000000001a04         db  0x00 ; '.'
0000000000001a05         db  0x00 ; '.'
0000000000001a06         db  0x00 ; '.'
0000000000001a07         db  0x00 ; '.'
0000000000001a08         db  0xe0 ; '.'
0000000000001a09         db  0x99 ; '.'
0000000000001a0a         db  0x21 ; '!'
0000000000001a0b         db  0x00 ; '.'
0000000000001a0c         db  0x00 ; '.'
0000000000001a0d         db  0x00 ; '.'
0000000000001a0e         db  0x00 ; '.'
0000000000001a0f         db  0x00 ; '.'
0000000000001a10         db  0x08 ; '.'
0000000000001a11         db  0x00 ; '.'
0000000000001a12         db  0x00 ; '.'
0000000000001a13         db  0x00 ; '.'
0000000000001a14         db  0x00 ; '.'
0000000000001a15         db  0x00 ; '.'
0000000000001a16         db  0x00 ; '.'
0000000000001a17         db  0x00 ; '.'
0000000000001a18         db  0x39 ; '9'
0000000000001a19         db  0x53 ; 'S'
0000000000001a1a         db  0x01 ; '.'
0000000000001a1b         db  0x00 ; '.'
0000000000001a1c         db  0x00 ; '.'
0000000000001a1d         db  0x00 ; '.'
0000000000001a1e         db  0x00 ; '.'
0000000000001a1f         db  0x00 ; '.'
0000000000001a20         db  0xe8 ; '.'
0000000000001a21         db  0x99 ; '.'
0000000000001a22         db  0x21 ; '!'
0000000000001a23         db  0x00 ; '.'
0000000000001a24         db  0x00 ; '.'
0000000000001a25         db  0x00 ; '.'
0000000000001a26         db  0x00 ; '.'
0000000000001a27         db  0x00 ; '.'
0000000000001a28         db  0x08 ; '.'
0000000000001a29         db  0x00 ; '.'
0000000000001a2a         db  0x00 ; '.'
0000000000001a2b         db  0x00 ; '.'
0000000000001a2c         db  0x00 ; '.'
0000000000001a2d         db  0x00 ; '.'
0000000000001a2e         db  0x00 ; '.'
0000000000001a2f         db  0x00 ; '.'
0000000000001a30         db  0x41 ; 'A'
0000000000001a31         db  0x53 ; 'S'
0000000000001a32         db  0x01 ; '.'
0000000000001a33         db  0x00 ; '.'
0000000000001a34         db  0x00 ; '.'
0000000000001a35         db  0x00 ; '.'
0000000000001a36         db  0x00 ; '.'
0000000000001a37         db  0x00 ; '.'
0000000000001a38         db  0xf0 ; '.'
0000000000001a39         db  0x99 ; '.'
0000000000001a3a         db  0x21 ; '!'
0000000000001a3b         db  0x00 ; '.'
0000000000001a3c         db  0x00 ; '.'
0000000000001a3d         db  0x00 ; '.'
0000000000001a3e         db  0x00 ; '.'
0000000000001a3f         db  0x00 ; '.'
0000000000001a40         db  0x08 ; '.'
0000000000001a41         db  0x00 ; '.'
0000000000001a42         db  0x00 ; '.'
0000000000001a43         db  0x00 ; '.'
0000000000001a44         db  0x00 ; '.'
0000000000001a45         db  0x00 ; '.'
0000000000001a46         db  0x00 ; '.'
0000000000001a47         db  0x00 ; '.'
0000000000001a48         db  0x47 ; 'G'
0000000000001a49         db  0x53 ; 'S'
0000000000001a4a         db  0x01 ; '.'
0000000000001a4b         db  0x00 ; '.'
0000000000001a4c         db  0x00 ; '.'
0000000000001a4d         db  0x00 ; '.'
0000000000001a4e         db  0x00 ; '.'
0000000000001a4f         db  0x00 ; '.'
0000000000001a50         db  0xf8 ; '.'
0000000000001a51         db  0x99 ; '.'
0000000000001a52         db  0x21 ; '!'
0000000000001a53         db  0x00 ; '.'
0000000000001a54         db  0x00 ; '.'
0000000000001a55         db  0x00 ; '.'
0000000000001a56         db  0x00 ; '.'
0000000000001a57         db  0x00 ; '.'
0000000000001a58         db  0x08 ; '.'
0000000000001a59         db  0x00 ; '.'
0000000000001a5a         db  0x00 ; '.'
0000000000001a5b         db  0x00 ; '.'
0000000000001a5c         db  0x00 ; '.'
0000000000001a5d         db  0x00 ; '.'
0000000000001a5e         db  0x00 ; '.'
0000000000001a5f         db  0x00 ; '.'
0000000000001a60         db  0x54 ; 'T'
0000000000001a61         db  0x53 ; 'S'
0000000000001a62         db  0x01 ; '.'
0000000000001a63         db  0x00 ; '.'
0000000000001a64         db  0x00 ; '.'
0000000000001a65         db  0x00 ; '.'
0000000000001a66         db  0x00 ; '.'
0000000000001a67         db  0x00 ; '.'
0000000000001a68         db  0x00 ; '.'
0000000000001a69         db  0x9a ; '.'
0000000000001a6a         db  0x21 ; '!'
0000000000001a6b         db  0x00 ; '.'
0000000000001a6c         db  0x00 ; '.'
0000000000001a6d         db  0x00 ; '.'
0000000000001a6e         db  0x00 ; '.'
0000000000001a6f         db  0x00 ; '.'
0000000000001a70         db  0x08 ; '.'
0000000000001a71         db  0x00 ; '.'
0000000000001a72         db  0x00 ; '.'
0000000000001a73         db  0x00 ; '.'
0000000000001a74         db  0x00 ; '.'
0000000000001a75         db  0x00 ; '.'
0000000000001a76         db  0x00 ; '.'
0000000000001a77         db  0x00 ; '.'
0000000000001a78         db  0x61 ; 'a'
0000000000001a79         db  0x53 ; 'S'
0000000000001a7a         db  0x01 ; '.'
0000000000001a7b         db  0x00 ; '.'
0000000000001a7c         db  0x00 ; '.'
0000000000001a7d         db  0x00 ; '.'
0000000000001a7e         db  0x00 ; '.'
0000000000001a7f         db  0x00 ; '.'
0000000000001a80         db  0x08 ; '.'
0000000000001a81         db  0x9a ; '.'
0000000000001a82         db  0x21 ; '!'
0000000000001a83         db  0x00 ; '.'
0000000000001a84         db  0x00 ; '.'
0000000000001a85         db  0x00 ; '.'
0000000000001a86         db  0x00 ; '.'
0000000000001a87         db  0x00 ; '.'
0000000000001a88         db  0x08 ; '.'
0000000000001a89         db  0x00 ; '.'
0000000000001a8a         db  0x00 ; '.'
0000000000001a8b         db  0x00 ; '.'
0000000000001a8c         db  0x00 ; '.'
0000000000001a8d         db  0x00 ; '.'
0000000000001a8e         db  0x00 ; '.'
0000000000001a8f         db  0x00 ; '.'
0000000000001a90         db  0x62 ; 'b'
0000000000001a91         db  0x50 ; 'P'
0000000000001a92         db  0x01 ; '.'
0000000000001a93         db  0x00 ; '.'
0000000000001a94         db  0x00 ; '.'
0000000000001a95         db  0x00 ; '.'
0000000000001a96         db  0x00 ; '.'
0000000000001a97         db  0x00 ; '.'
0000000000001a98         db  0x10 ; '.'
0000000000001a99         db  0x9a ; '.'
0000000000001a9a         db  0x21 ; '!'
0000000000001a9b         db  0x00 ; '.'
0000000000001a9c         db  0x00 ; '.'
0000000000001a9d         db  0x00 ; '.'
0000000000001a9e         db  0x00 ; '.'
0000000000001a9f         db  0x00 ; '.'
0000000000001aa0         db  0x08 ; '.'
0000000000001aa1         db  0x00 ; '.'
0000000000001aa2         db  0x00 ; '.'
0000000000001aa3         db  0x00 ; '.'
0000000000001aa4         db  0x00 ; '.'
0000000000001aa5         db  0x00 ; '.'
0000000000001aa6         db  0x00 ; '.'
0000000000001aa7         db  0x00 ; '.'
0000000000001aa8         db  0x75 ; 'u'
0000000000001aa9         db  0x53 ; 'S'
0000000000001aaa         db  0x01 ; '.'
0000000000001aab         db  0x00 ; '.'
0000000000001aac         db  0x00 ; '.'
0000000000001aad         db  0x00 ; '.'
0000000000001aae         db  0x00 ; '.'
0000000000001aaf         db  0x00 ; '.'
0000000000001ab0         db  0x18 ; '.'
0000000000001ab1         db  0x9a ; '.'
0000000000001ab2         db  0x21 ; '!'
0000000000001ab3         db  0x00 ; '.'
0000000000001ab4         db  0x00 ; '.'
0000000000001ab5         db  0x00 ; '.'
0000000000001ab6         db  0x00 ; '.'
0000000000001ab7         db  0x00 ; '.'
0000000000001ab8         db  0x08 ; '.'
0000000000001ab9         db  0x00 ; '.'
0000000000001aba         db  0x00 ; '.'
0000000000001abb         db  0x00 ; '.'
0000000000001abc         db  0x00 ; '.'
0000000000001abd         db  0x00 ; '.'
0000000000001abe         db  0x00 ; '.'
0000000000001abf         db  0x00 ; '.'
0000000000001ac0         db  0x5a ; 'Z'
0000000000001ac1         db  0x53 ; 'S'
0000000000001ac2         db  0x01 ; '.'
0000000000001ac3         db  0x00 ; '.'
0000000000001ac4         db  0x00 ; '.'
0000000000001ac5         db  0x00 ; '.'
0000000000001ac6         db  0x00 ; '.'
0000000000001ac7         db  0x00 ; '.'
0000000000001ac8         db  0x20 ; ' '
0000000000001ac9         db  0x9a ; '.'
0000000000001aca         db  0x21 ; '!'
0000000000001acb         db  0x00 ; '.'
0000000000001acc         db  0x00 ; '.'
0000000000001acd         db  0x00 ; '.'
0000000000001ace         db  0x00 ; '.'
0000000000001acf         db  0x00 ; '.'
0000000000001ad0         db  0x08 ; '.'
0000000000001ad1         db  0x00 ; '.'
0000000000001ad2         db  0x00 ; '.'
0000000000001ad3         db  0x00 ; '.'
0000000000001ad4         db  0x00 ; '.'
0000000000001ad5         db  0x00 ; '.'
0000000000001ad6         db  0x00 ; '.'
0000000000001ad7         db  0x00 ; '.'
0000000000001ad8         db  0x4c ; 'L'
0000000000001ad9         db  0x2a ; '*'
0000000000001ada         db  0x01 ; '.'
0000000000001adb         db  0x00 ; '.'
0000000000001adc         db  0x00 ; '.'
0000000000001add         db  0x00 ; '.'
0000000000001ade         db  0x00 ; '.'
0000000000001adf         db  0x00 ; '.'
0000000000001ae0         db  0x28 ; '('
0000000000001ae1         db  0x9a ; '.'
0000000000001ae2         db  0x21 ; '!'
0000000000001ae3         db  0x00 ; '.'
0000000000001ae4         db  0x00 ; '.'
0000000000001ae5         db  0x00 ; '.'
0000000000001ae6         db  0x00 ; '.'
0000000000001ae7         db  0x00 ; '.'
0000000000001ae8         db  0x08 ; '.'
0000000000001ae9         db  0x00 ; '.'
0000000000001aea         db  0x00 ; '.'
0000000000001aeb         db  0x00 ; '.'
0000000000001aec         db  0x00 ; '.'
0000000000001aed         db  0x00 ; '.'
0000000000001aee         db  0x00 ; '.'
0000000000001aef         db  0x00 ; '.'
0000000000001af0         db  0x7d ; '}'
0000000000001af1         db  0x53 ; 'S'
0000000000001af2         db  0x01 ; '.'
0000000000001af3         db  0x00 ; '.'
0000000000001af4         db  0x00 ; '.'
0000000000001af5         db  0x00 ; '.'
0000000000001af6         db  0x00 ; '.'
0000000000001af7         db  0x00 ; '.'
0000000000001af8         db  0x48 ; 'H'
0000000000001af9         db  0x9a ; '.'
0000000000001afa         db  0x21 ; '!'
0000000000001afb         db  0x00 ; '.'
0000000000001afc         db  0x00 ; '.'
0000000000001afd         db  0x00 ; '.'
0000000000001afe         db  0x00 ; '.'
0000000000001aff         db  0x00 ; '.'
0000000000001b00         db  0x08 ; '.'
0000000000001b01         db  0x00 ; '.'
0000000000001b02         db  0x00 ; '.'
0000000000001b03         db  0x00 ; '.'
0000000000001b04         db  0x00 ; '.'
0000000000001b05         db  0x00 ; '.'
0000000000001b06         db  0x00 ; '.'
0000000000001b07         db  0x00 ; '.'
0000000000001b08         db  0x80 ; '.'
0000000000001b09         db  0xf2 ; '.'
0000000000001b0a         db  0x00 ; '.'
0000000000001b0b         db  0x00 ; '.'
0000000000001b0c         db  0x00 ; '.'
0000000000001b0d         db  0x00 ; '.'
0000000000001b0e         db  0x00 ; '.'
0000000000001b0f         db  0x00 ; '.'
0000000000001b10         db  0x50 ; 'P'
0000000000001b11         db  0x9a ; '.'
0000000000001b12         db  0x21 ; '!'
0000000000001b13         db  0x00 ; '.'
0000000000001b14         db  0x00 ; '.'
0000000000001b15         db  0x00 ; '.'
0000000000001b16         db  0x00 ; '.'
0000000000001b17         db  0x00 ; '.'
0000000000001b18         db  0x08 ; '.'
0000000000001b19         db  0x00 ; '.'
0000000000001b1a         db  0x00 ; '.'
0000000000001b1b         db  0x00 ; '.'
0000000000001b1c         db  0x00 ; '.'
0000000000001b1d         db  0x00 ; '.'
0000000000001b1e         db  0x00 ; '.'
0000000000001b1f         db  0x00 ; '.'
0000000000001b20         db  0x60 ; '`'
0000000000001b21         db  0xf2 ; '.'
0000000000001b22         db  0x00 ; '.'
0000000000001b23         db  0x00 ; '.'
0000000000001b24         db  0x00 ; '.'
0000000000001b25         db  0x00 ; '.'
0000000000001b26         db  0x00 ; '.'
0000000000001b27         db  0x00 ; '.'
0000000000001b28         db  0x08 ; '.'
0000000000001b29         db  0xa0 ; '.'
0000000000001b2a         db  0x21 ; '!'
0000000000001b2b         db  0x00 ; '.'
0000000000001b2c         db  0x00 ; '.'
0000000000001b2d         db  0x00 ; '.'
0000000000001b2e         db  0x00 ; '.'
0000000000001b2f         db  0x00 ; '.'
0000000000001b30         db  0x08 ; '.'
0000000000001b31         db  0x00 ; '.'
0000000000001b32         db  0x00 ; '.'
0000000000001b33         db  0x00 ; '.'
0000000000001b34         db  0x00 ; '.'
0000000000001b35         db  0x00 ; '.'
0000000000001b36         db  0x00 ; '.'
0000000000001b37         db  0x00 ; '.'
0000000000001b38         db  0x08 ; '.'
0000000000001b39         db  0xa0 ; '.'
0000000000001b3a         db  0x21 ; '!'
0000000000001b3b         db  0x00 ; '.'
0000000000001b3c         db  0x00 ; '.'
0000000000001b3d         db  0x00 ; '.'
0000000000001b3e         db  0x00 ; '.'
0000000000001b3f         db  0x00 ; '.'
0000000000001b40         db  0x20 ; ' '
0000000000001b41         db  0xa0 ; '.'
0000000000001b42         db  0x21 ; '!'
0000000000001b43         db  0x00 ; '.'
0000000000001b44         db  0x00 ; '.'
0000000000001b45         db  0x00 ; '.'
0000000000001b46         db  0x00 ; '.'
0000000000001b47         db  0x00 ; '.'
0000000000001b48         db  0x08 ; '.'
0000000000001b49         db  0x00 ; '.'
0000000000001b4a         db  0x00 ; '.'
0000000000001b4b         db  0x00 ; '.'
0000000000001b4c         db  0x00 ; '.'
0000000000001b4d         db  0x00 ; '.'
0000000000001b4e         db  0x00 ; '.'
0000000000001b4f         db  0x00 ; '.'
0000000000001b50         db  0x31 ; '1'
0000000000001b51         db  0x51 ; 'Q'
0000000000001b52         db  0x01 ; '.'
0000000000001b53         db  0x00 ; '.'
0000000000001b54         db  0x00 ; '.'
0000000000001b55         db  0x00 ; '.'
0000000000001b56         db  0x00 ; '.'
0000000000001b57         db  0x00 ; '.'
0000000000001b58         db  0x28 ; '('
0000000000001b59         db  0xa0 ; '.'
0000000000001b5a         db  0x21 ; '!'
0000000000001b5b         db  0x00 ; '.'
0000000000001b5c         db  0x00 ; '.'
0000000000001b5d         db  0x00 ; '.'
0000000000001b5e         db  0x00 ; '.'
0000000000001b5f         db  0x00 ; '.'
0000000000001b60         db  0x08 ; '.'
0000000000001b61         db  0x00 ; '.'
0000000000001b62         db  0x00 ; '.'
0000000000001b63         db  0x00 ; '.'
0000000000001b64         db  0x00 ; '.'
0000000000001b65         db  0x00 ; '.'
0000000000001b66         db  0x00 ; '.'
0000000000001b67         db  0x00 ; '.'
0000000000001b68         db  0x70 ; 'p'
0000000000001b69         db  0xa7 ; '.'
0000000000001b6a         db  0x00 ; '.'
0000000000001b6b         db  0x00 ; '.'
0000000000001b6c         db  0x00 ; '.'
0000000000001b6d         db  0x00 ; '.'
0000000000001b6e         db  0x00 ; '.'
0000000000001b6f         db  0x00 ; '.'
0000000000001b70         db  0x80 ; '.'
0000000000001b71         db  0xa0 ; '.'
0000000000001b72         db  0x21 ; '!'
0000000000001b73         db  0x00 ; '.'
0000000000001b74         db  0x00 ; '.'
0000000000001b75         db  0x00 ; '.'
0000000000001b76         db  0x00 ; '.'
0000000000001b77         db  0x00 ; '.'
0000000000001b78         db  0x08 ; '.'
0000000000001b79         db  0x00 ; '.'
0000000000001b7a         db  0x00 ; '.'
0000000000001b7b         db  0x00 ; '.'
0000000000001b7c         db  0x00 ; '.'
0000000000001b7d         db  0x00 ; '.'
0000000000001b7e         db  0x00 ; '.'
0000000000001b7f         db  0x00 ; '.'
0000000000001b80         db  0x90 ; '.'
0000000000001b81         db  0xa0 ; '.'
0000000000001b82         db  0x21 ; '!'
0000000000001b83         db  0x00 ; '.'
0000000000001b84         db  0x00 ; '.'
0000000000001b85         db  0x00 ; '.'
0000000000001b86         db  0x00 ; '.'
0000000000001b87         db  0x00 ; '.'
0000000000001b88         db  0x98 ; '.'
0000000000001b89         db  0xa0 ; '.'
0000000000001b8a         db  0x21 ; '!'
0000000000001b8b         db  0x00 ; '.'
0000000000001b8c         db  0x00 ; '.'
0000000000001b8d         db  0x00 ; '.'
0000000000001b8e         db  0x00 ; '.'
0000000000001b8f         db  0x00 ; '.'
0000000000001b90         db  0x08 ; '.'
0000000000001b91         db  0x00 ; '.'
0000000000001b92         db  0x00 ; '.'
0000000000001b93         db  0x00 ; '.'
0000000000001b94         db  0x00 ; '.'
0000000000001b95         db  0x00 ; '.'
0000000000001b96         db  0x00 ; '.'
0000000000001b97         db  0x00 ; '.'
0000000000001b98         db  0xc0 ; '.'
0000000000001b99         db  0xa5 ; '.'
0000000000001b9a         db  0x21 ; '!'
0000000000001b9b         db  0x00 ; '.'
0000000000001b9c         db  0x00 ; '.'
0000000000001b9d         db  0x00 ; '.'
0000000000001b9e         db  0x00 ; '.'
0000000000001b9f         db  0x00 ; '.'
0000000000001ba0         db  0xc8 ; '.'
0000000000001ba1         db  0x9f ; '.'
0000000000001ba2         db  0x21 ; '!'
0000000000001ba3         db  0x00 ; '.'
0000000000001ba4         db  0x00 ; '.'
0000000000001ba5         db  0x00 ; '.'
0000000000001ba6         db  0x00 ; '.'
0000000000001ba7         db  0x00 ; '.'
0000000000001ba8         db  0x06 ; '.'
0000000000001ba9         db  0x00 ; '.'
0000000000001baa         db  0x00 ; '.'
0000000000001bab         db  0x00 ; '.'
0000000000001bac         db  0x02 ; '.'
0000000000001bad         db  0x00 ; '.'
0000000000001bae         db  0x00 ; '.'
0000000000001baf         db  0x00 ; '.'
0000000000001bb0         db  0x00 ; '.'
0000000000001bb1         db  0x00 ; '.'
0000000000001bb2         db  0x00 ; '.'
0000000000001bb3         db  0x00 ; '.'
0000000000001bb4         db  0x00 ; '.'
0000000000001bb5         db  0x00 ; '.'
0000000000001bb6         db  0x00 ; '.'
0000000000001bb7         db  0x00 ; '.'
0000000000001bb8         db  0xd0 ; '.'
0000000000001bb9         db  0x9f ; '.'
0000000000001bba         db  0x21 ; '!'
0000000000001bbb         db  0x00 ; '.'
0000000000001bbc         db  0x00 ; '.'
0000000000001bbd         db  0x00 ; '.'
0000000000001bbe         db  0x00 ; '.'
0000000000001bbf         db  0x00 ; '.'
0000000000001bc0         db  0x06 ; '.'
0000000000001bc1         db  0x00 ; '.'
0000000000001bc2         db  0x00 ; '.'
0000000000001bc3         db  0x00 ; '.'
0000000000001bc4         db  0x08 ; '.'
0000000000001bc5         db  0x00 ; '.'
0000000000001bc6         db  0x00 ; '.'
0000000000001bc7         db  0x00 ; '.'
0000000000001bc8         db  0x00 ; '.'
0000000000001bc9         db  0x00 ; '.'
0000000000001bca         db  0x00 ; '.'
0000000000001bcb         db  0x00 ; '.'
0000000000001bcc         db  0x00 ; '.'
0000000000001bcd         db  0x00 ; '.'
0000000000001bce         db  0x00 ; '.'
0000000000001bcf         db  0x00 ; '.'
0000000000001bd0         db  0xd8 ; '.'
0000000000001bd1         db  0x9f ; '.'
0000000000001bd2         db  0x21 ; '!'
0000000000001bd3         db  0x00 ; '.'
0000000000001bd4         db  0x00 ; '.'
0000000000001bd5         db  0x00 ; '.'
0000000000001bd6         db  0x00 ; '.'
0000000000001bd7         db  0x00 ; '.'
0000000000001bd8         db  0x06 ; '.'
0000000000001bd9         db  0x00 ; '.'
0000000000001bda         db  0x00 ; '.'
0000000000001bdb         db  0x00 ; '.'
0000000000001bdc         db  0x38 ; '8'
0000000000001bdd         db  0x00 ; '.'
0000000000001bde         db  0x00 ; '.'
0000000000001bdf         db  0x00 ; '.'
0000000000001be0         db  0x00 ; '.'
0000000000001be1         db  0x00 ; '.'
0000000000001be2         db  0x00 ; '.'
0000000000001be3         db  0x00 ; '.'
0000000000001be4         db  0x00 ; '.'
0000000000001be5         db  0x00 ; '.'
0000000000001be6         db  0x00 ; '.'
0000000000001be7         db  0x00 ; '.'
0000000000001be8         db  0xe0 ; '.'
0000000000001be9         db  0x9f ; '.'
0000000000001bea         db  0x21 ; '!'
0000000000001beb         db  0x00 ; '.'
0000000000001bec         db  0x00 ; '.'
0000000000001bed         db  0x00 ; '.'
0000000000001bee         db  0x00 ; '.'
0000000000001bef         db  0x00 ; '.'
0000000000001bf0         db  0x06 ; '.'
0000000000001bf1         db  0x00 ; '.'
0000000000001bf2         db  0x00 ; '.'
0000000000001bf3         db  0x00 ; '.'
0000000000001bf4         db  0x45 ; 'E'
0000000000001bf5         db  0x00 ; '.'
0000000000001bf6         db  0x00 ; '.'
0000000000001bf7         db  0x00 ; '.'
0000000000001bf8         db  0x00 ; '.'
0000000000001bf9         db  0x00 ; '.'
0000000000001bfa         db  0x00 ; '.'
0000000000001bfb         db  0x00 ; '.'
0000000000001bfc         db  0x00 ; '.'
0000000000001bfd         db  0x00 ; '.'
0000000000001bfe         db  0x00 ; '.'
0000000000001bff         db  0x00 ; '.'
0000000000001c00         db  0xe8 ; '.'
0000000000001c01         db  0x9f ; '.'
0000000000001c02         db  0x21 ; '!'
0000000000001c03         db  0x00 ; '.'
0000000000001c04         db  0x00 ; '.'
0000000000001c05         db  0x00 ; '.'
0000000000001c06         db  0x00 ; '.'
0000000000001c07         db  0x00 ; '.'
0000000000001c08         db  0x06 ; '.'
0000000000001c09         db  0x00 ; '.'
0000000000001c0a         db  0x00 ; '.'
0000000000001c0b         db  0x00 ; '.'
0000000000001c0c         db  0x6d ; 'm'
0000000000001c0d         db  0x00 ; '.'
0000000000001c0e         db  0x00 ; '.'
0000000000001c0f         db  0x00 ; '.'
0000000000001c10         db  0x00 ; '.'
0000000000001c11         db  0x00 ; '.'
0000000000001c12         db  0x00 ; '.'
0000000000001c13         db  0x00 ; '.'
0000000000001c14         db  0x00 ; '.'
0000000000001c15         db  0x00 ; '.'
0000000000001c16         db  0x00 ; '.'
0000000000001c17         db  0x00 ; '.'
0000000000001c18         db  0xf0 ; '.'
0000000000001c19         db  0x9f ; '.'
0000000000001c1a         db  0x21 ; '!'
0000000000001c1b         db  0x00 ; '.'
0000000000001c1c         db  0x00 ; '.'
0000000000001c1d         db  0x00 ; '.'
0000000000001c1e         db  0x00 ; '.'
0000000000001c1f         db  0x00 ; '.'
0000000000001c20         db  0x06 ; '.'
0000000000001c21         db  0x00 ; '.'
0000000000001c22         db  0x00 ; '.'
0000000000001c23         db  0x00 ; '.'
0000000000001c24         db  0x71 ; 'q'
0000000000001c25         db  0x00 ; '.'
0000000000001c26         db  0x00 ; '.'
0000000000001c27         db  0x00 ; '.'
0000000000001c28         db  0x00 ; '.'
0000000000001c29         db  0x00 ; '.'
0000000000001c2a         db  0x00 ; '.'
0000000000001c2b         db  0x00 ; '.'
0000000000001c2c         db  0x00 ; '.'
0000000000001c2d         db  0x00 ; '.'
0000000000001c2e         db  0x00 ; '.'
0000000000001c2f         db  0x00 ; '.'
0000000000001c30         db  0xa0 ; '.'
0000000000001c31         db  0xa0 ; '.'
0000000000001c32         db  0x21 ; '!'
0000000000001c33         db  0x00 ; '.'
0000000000001c34         db  0x00 ; '.'
0000000000001c35         db  0x00 ; '.'
0000000000001c36         db  0x00 ; '.'
0000000000001c37         db  0x00 ; '.'
0000000000001c38         db  0x05 ; '.'
0000000000001c39         db  0x00 ; '.'
0000000000001c3a         db  0x00 ; '.'
0000000000001c3b         db  0x00 ; '.'
0000000000001c3c         db  0x75 ; 'u'
0000000000001c3d         db  0x00 ; '.'
0000000000001c3e         db  0x00 ; '.'
0000000000001c3f         db  0x00 ; '.'
0000000000001c40         db  0x00 ; '.'
0000000000001c41         db  0x00 ; '.'
0000000000001c42         db  0x00 ; '.'
0000000000001c43         db  0x00 ; '.'
0000000000001c44         db  0x00 ; '.'
0000000000001c45         db  0x00 ; '.'
0000000000001c46         db  0x00 ; '.'
0000000000001c47         db  0x00 ; '.'
0000000000001c48         db  0xa8 ; '.'
0000000000001c49         db  0xa0 ; '.'
0000000000001c4a         db  0x21 ; '!'
0000000000001c4b         db  0x00 ; '.'
0000000000001c4c         db  0x00 ; '.'
0000000000001c4d         db  0x00 ; '.'
0000000000001c4e         db  0x00 ; '.'
0000000000001c4f         db  0x00 ; '.'
0000000000001c50         db  0x05 ; '.'
0000000000001c51         db  0x00 ; '.'
0000000000001c52         db  0x00 ; '.'
0000000000001c53         db  0x00 ; '.'
0000000000001c54         db  0x74 ; 't'
0000000000001c55         db  0x00 ; '.'
0000000000001c56         db  0x00 ; '.'
0000000000001c57         db  0x00 ; '.'
0000000000001c58         db  0x00 ; '.'
0000000000001c59         db  0x00 ; '.'
0000000000001c5a         db  0x00 ; '.'
0000000000001c5b         db  0x00 ; '.'
0000000000001c5c         db  0x00 ; '.'
0000000000001c5d         db  0x00 ; '.'
0000000000001c5e         db  0x00 ; '.'
0000000000001c5f         db  0x00 ; '.'
0000000000001c60         db  0xb0 ; '.'
0000000000001c61         db  0xa0 ; '.'
0000000000001c62         db  0x21 ; '!'
0000000000001c63         db  0x00 ; '.'
0000000000001c64         db  0x00 ; '.'
0000000000001c65         db  0x00 ; '.'
0000000000001c66         db  0x00 ; '.'
0000000000001c67         db  0x00 ; '.'
0000000000001c68         db  0x05 ; '.'
0000000000001c69         db  0x00 ; '.'
0000000000001c6a         db  0x00 ; '.'
0000000000001c6b         db  0x00 ; '.'
0000000000001c6c         db  0x76 ; 'v'
0000000000001c6d         db  0x00 ; '.'
0000000000001c6e         db  0x00 ; '.'
0000000000001c6f         db  0x00 ; '.'
0000000000001c70         db  0x00 ; '.'
0000000000001c71         db  0x00 ; '.'
0000000000001c72         db  0x00 ; '.'
0000000000001c73         db  0x00 ; '.'
0000000000001c74         db  0x00 ; '.'
0000000000001c75         db  0x00 ; '.'
0000000000001c76         db  0x00 ; '.'
0000000000001c77         db  0x00 ; '.'
0000000000001c78         db  0xb8 ; '.'
0000000000001c79         db  0xa0 ; '.'
0000000000001c7a         db  0x21 ; '!'
0000000000001c7b         db  0x00 ; '.'
0000000000001c7c         db  0x00 ; '.'
0000000000001c7d         db  0x00 ; '.'
0000000000001c7e         db  0x00 ; '.'
0000000000001c7f         db  0x00 ; '.'
0000000000001c80         db  0x05 ; '.'
0000000000001c81         db  0x00 ; '.'
0000000000001c82         db  0x00 ; '.'
0000000000001c83         db  0x00 ; '.'
0000000000001c84         db  0x7b ; '{'
0000000000001c85         db  0x00 ; '.'
0000000000001c86         db  0x00 ; '.'
0000000000001c87         db  0x00 ; '.'
0000000000001c88         db  0x00 ; '.'
0000000000001c89         db  0x00 ; '.'
0000000000001c8a         db  0x00 ; '.'
0000000000001c8b         db  0x00 ; '.'
0000000000001c8c         db  0x00 ; '.'
0000000000001c8d         db  0x00 ; '.'
0000000000001c8e         db  0x00 ; '.'
0000000000001c8f         db  0x00 ; '.'
0000000000001c90         db  0xc0 ; '.'
0000000000001c91         db  0xa0 ; '.'
0000000000001c92         db  0x21 ; '!'
0000000000001c93         db  0x00 ; '.'
0000000000001c94         db  0x00 ; '.'
0000000000001c95         db  0x00 ; '.'
0000000000001c96         db  0x00 ; '.'
0000000000001c97         db  0x00 ; '.'
0000000000001c98         db  0x05 ; '.'
0000000000001c99         db  0x00 ; '.'
0000000000001c9a         db  0x00 ; '.'
0000000000001c9b         db  0x00 ; '.'
0000000000001c9c         db  0x7c ; '|'
0000000000001c9d         db  0x00 ; '.'
0000000000001c9e         db  0x00 ; '.'
0000000000001c9f         db  0x00 ; '.'
0000000000001ca0         db  0x00 ; '.'
0000000000001ca1         db  0x00 ; '.'
0000000000001ca2         db  0x00 ; '.'
0000000000001ca3         db  0x00 ; '.'
0000000000001ca4         db  0x00 ; '.'
0000000000001ca5         db  0x00 ; '.'
0000000000001ca6         db  0x00 ; '.'
0000000000001ca7         db  0x00 ; '.'
0000000000001ca8         db  0xc8 ; '.'
0000000000001ca9         db  0xa0 ; '.'
0000000000001caa         db  0x21 ; '!'
0000000000001cab         db  0x00 ; '.'
0000000000001cac         db  0x00 ; '.'
0000000000001cad         db  0x00 ; '.'
0000000000001cae         db  0x00 ; '.'
0000000000001caf         db  0x00 ; '.'
0000000000001cb0         db  0x05 ; '.'
0000000000001cb1         db  0x00 ; '.'
0000000000001cb2         db  0x00 ; '.'
0000000000001cb3         db  0x00 ; '.'
0000000000001cb4         db  0x78 ; 'x'
0000000000001cb5         db  0x00 ; '.'
0000000000001cb6         db  0x00 ; '.'
0000000000001cb7         db  0x00 ; '.'
0000000000001cb8         db  0x00 ; '.'
0000000000001cb9         db  0x00 ; '.'
0000000000001cba         db  0x00 ; '.'
0000000000001cbb         db  0x00 ; '.'
0000000000001cbc         db  0x00 ; '.'
0000000000001cbd         db  0x00 ; '.'
0000000000001cbe         db  0x00 ; '.'
0000000000001cbf         db  0x00 ; '.'
0000000000001cc0         db  0xe0 ; '.'
0000000000001cc1         db  0xa0 ; '.'
0000000000001cc2         db  0x21 ; '!'
0000000000001cc3         db  0x00 ; '.'
0000000000001cc4         db  0x00 ; '.'
0000000000001cc5         db  0x00 ; '.'
0000000000001cc6         db  0x00 ; '.'
0000000000001cc7         db  0x00 ; '.'
0000000000001cc8         db  0x05 ; '.'
0000000000001cc9         db  0x00 ; '.'
0000000000001cca         db  0x00 ; '.'
0000000000001ccb         db  0x00 ; '.'
0000000000001ccc         db  0x7a ; 'z'
0000000000001ccd         db  0x00 ; '.'
0000000000001cce         db  0x00 ; '.'
0000000000001ccf         db  0x00 ; '.'
0000000000001cd0         db  0x00 ; '.'
0000000000001cd1         db  0x00 ; '.'
0000000000001cd2         db  0x00 ; '.'
0000000000001cd3         db  0x00 ; '.'
0000000000001cd4         db  0x00 ; '.'
0000000000001cd5         db  0x00 ; '.'
0000000000001cd6         db  0x00 ; '.'
0000000000001cd7         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x1cd8; 0x2710[ (2616 bytes)
        ; File offset : [7384; 10000[ (2616 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001cd8         db  0x60 ; '`'
0000000000001cd9         db  0x9c ; '.'
0000000000001cda         db  0x21 ; '!'
0000000000001cdb         db  0x00 ; '.'
0000000000001cdc         db  0x00 ; '.'
0000000000001cdd         db  0x00 ; '.'
0000000000001cde         db  0x00 ; '.'
0000000000001cdf         db  0x00 ; '.'
0000000000001ce0         db  0x07 ; '.'
0000000000001ce1         db  0x00 ; '.'
0000000000001ce2         db  0x00 ; '.'
0000000000001ce3         db  0x00 ; '.'
0000000000001ce4         db  0x01 ; '.'
0000000000001ce5         db  0x00 ; '.'
0000000000001ce6         db  0x00 ; '.'
0000000000001ce7         db  0x00 ; '.'
0000000000001ce8         db  0x00 ; '.'
0000000000001ce9         db  0x00 ; '.'
0000000000001cea         db  0x00 ; '.'
0000000000001ceb         db  0x00 ; '.'
0000000000001cec         db  0x00 ; '.'
0000000000001ced         db  0x00 ; '.'
0000000000001cee         db  0x00 ; '.'
0000000000001cef         db  0x00 ; '.'
0000000000001cf0         db  0x68 ; 'h'
0000000000001cf1         db  0x9c ; '.'
0000000000001cf2         db  0x21 ; '!'
0000000000001cf3         db  0x00 ; '.'
0000000000001cf4         db  0x00 ; '.'
0000000000001cf5         db  0x00 ; '.'
0000000000001cf6         db  0x00 ; '.'
0000000000001cf7         db  0x00 ; '.'
0000000000001cf8         db  0x07 ; '.'
0000000000001cf9         db  0x00 ; '.'
0000000000001cfa         db  0x00 ; '.'
0000000000001cfb         db  0x00 ; '.'
0000000000001cfc         db  0x03 ; '.'
0000000000001cfd         db  0x00 ; '.'
0000000000001cfe         db  0x00 ; '.'
0000000000001cff         db  0x00 ; '.'
0000000000001d00         db  0x00 ; '.'
0000000000001d01         db  0x00 ; '.'
0000000000001d02         db  0x00 ; '.'
0000000000001d03         db  0x00 ; '.'
0000000000001d04         db  0x00 ; '.'
0000000000001d05         db  0x00 ; '.'
0000000000001d06         db  0x00 ; '.'
0000000000001d07         db  0x00 ; '.'
0000000000001d08         db  0x70 ; 'p'
0000000000001d09         db  0x9c ; '.'
0000000000001d0a         db  0x21 ; '!'
0000000000001d0b         db  0x00 ; '.'
0000000000001d0c         db  0x00 ; '.'
0000000000001d0d         db  0x00 ; '.'
0000000000001d0e         db  0x00 ; '.'
0000000000001d0f         db  0x00 ; '.'
0000000000001d10         db  0x07 ; '.'
0000000000001d11         db  0x00 ; '.'
0000000000001d12         db  0x00 ; '.'
0000000000001d13         db  0x00 ; '.'
0000000000001d14         db  0x04 ; '.'
0000000000001d15         db  0x00 ; '.'
0000000000001d16         db  0x00 ; '.'
0000000000001d17         db  0x00 ; '.'
0000000000001d18         db  0x00 ; '.'
0000000000001d19         db  0x00 ; '.'
0000000000001d1a         db  0x00 ; '.'
0000000000001d1b         db  0x00 ; '.'
0000000000001d1c         db  0x00 ; '.'
0000000000001d1d         db  0x00 ; '.'
0000000000001d1e         db  0x00 ; '.'
0000000000001d1f         db  0x00 ; '.'
0000000000001d20         db  0x78 ; 'x'
0000000000001d21         db  0x9c ; '.'
0000000000001d22         db  0x21 ; '!'
0000000000001d23         db  0x00 ; '.'
0000000000001d24         db  0x00 ; '.'
0000000000001d25         db  0x00 ; '.'
0000000000001d26         db  0x00 ; '.'
0000000000001d27         db  0x00 ; '.'
0000000000001d28         db  0x07 ; '.'
0000000000001d29         db  0x00 ; '.'
0000000000001d2a         db  0x00 ; '.'
0000000000001d2b         db  0x00 ; '.'
0000000000001d2c         db  0x05 ; '.'
0000000000001d2d         db  0x00 ; '.'
0000000000001d2e         db  0x00 ; '.'
0000000000001d2f         db  0x00 ; '.'
0000000000001d30         db  0x00 ; '.'
0000000000001d31         db  0x00 ; '.'
0000000000001d32         db  0x00 ; '.'
0000000000001d33         db  0x00 ; '.'
0000000000001d34         db  0x00 ; '.'
0000000000001d35         db  0x00 ; '.'
0000000000001d36         db  0x00 ; '.'
0000000000001d37         db  0x00 ; '.'
0000000000001d38         db  0x80 ; '.'
0000000000001d39         db  0x9c ; '.'
0000000000001d3a         db  0x21 ; '!'
0000000000001d3b         db  0x00 ; '.'
0000000000001d3c         db  0x00 ; '.'
0000000000001d3d         db  0x00 ; '.'
0000000000001d3e         db  0x00 ; '.'
0000000000001d3f         db  0x00 ; '.'
0000000000001d40         db  0x07 ; '.'
0000000000001d41         db  0x00 ; '.'
0000000000001d42         db  0x00 ; '.'
0000000000001d43         db  0x00 ; '.'
0000000000001d44         db  0x06 ; '.'
0000000000001d45         db  0x00 ; '.'
0000000000001d46         db  0x00 ; '.'
0000000000001d47         db  0x00 ; '.'
0000000000001d48         db  0x00 ; '.'
0000000000001d49         db  0x00 ; '.'
0000000000001d4a         db  0x00 ; '.'
0000000000001d4b         db  0x00 ; '.'
0000000000001d4c         db  0x00 ; '.'
0000000000001d4d         db  0x00 ; '.'
0000000000001d4e         db  0x00 ; '.'
0000000000001d4f         db  0x00 ; '.'
0000000000001d50         db  0x88 ; '.'
0000000000001d51         db  0x9c ; '.'
0000000000001d52         db  0x21 ; '!'
0000000000001d53         db  0x00 ; '.'
0000000000001d54         db  0x00 ; '.'
0000000000001d55         db  0x00 ; '.'
0000000000001d56         db  0x00 ; '.'
0000000000001d57         db  0x00 ; '.'
0000000000001d58         db  0x07 ; '.'
0000000000001d59         db  0x00 ; '.'
0000000000001d5a         db  0x00 ; '.'
0000000000001d5b         db  0x00 ; '.'
0000000000001d5c         db  0x07 ; '.'
0000000000001d5d         db  0x00 ; '.'
0000000000001d5e         db  0x00 ; '.'
0000000000001d5f         db  0x00 ; '.'
0000000000001d60         db  0x00 ; '.'
0000000000001d61         db  0x00 ; '.'
0000000000001d62         db  0x00 ; '.'
0000000000001d63         db  0x00 ; '.'
0000000000001d64         db  0x00 ; '.'
0000000000001d65         db  0x00 ; '.'
0000000000001d66         db  0x00 ; '.'
0000000000001d67         db  0x00 ; '.'
0000000000001d68         db  0x90 ; '.'
0000000000001d69         db  0x9c ; '.'
0000000000001d6a         db  0x21 ; '!'
0000000000001d6b         db  0x00 ; '.'
0000000000001d6c         db  0x00 ; '.'
0000000000001d6d         db  0x00 ; '.'
0000000000001d6e         db  0x00 ; '.'
0000000000001d6f         db  0x00 ; '.'
0000000000001d70         db  0x07 ; '.'
0000000000001d71         db  0x00 ; '.'
0000000000001d72         db  0x00 ; '.'
0000000000001d73         db  0x00 ; '.'
0000000000001d74         db  0x09 ; '.'
0000000000001d75         db  0x00 ; '.'
0000000000001d76         db  0x00 ; '.'
0000000000001d77         db  0x00 ; '.'
0000000000001d78         db  0x00 ; '.'
0000000000001d79         db  0x00 ; '.'
0000000000001d7a         db  0x00 ; '.'
0000000000001d7b         db  0x00 ; '.'
0000000000001d7c         db  0x00 ; '.'
0000000000001d7d         db  0x00 ; '.'
0000000000001d7e         db  0x00 ; '.'
0000000000001d7f         db  0x00 ; '.'
0000000000001d80         db  0x98 ; '.'
0000000000001d81         db  0x9c ; '.'
0000000000001d82         db  0x21 ; '!'
0000000000001d83         db  0x00 ; '.'
0000000000001d84         db  0x00 ; '.'
0000000000001d85         db  0x00 ; '.'
0000000000001d86         db  0x00 ; '.'
0000000000001d87         db  0x00 ; '.'
0000000000001d88         db  0x07 ; '.'
0000000000001d89         db  0x00 ; '.'
0000000000001d8a         db  0x00 ; '.'
0000000000001d8b         db  0x00 ; '.'
0000000000001d8c         db  0x0a ; '.'
0000000000001d8d         db  0x00 ; '.'
0000000000001d8e         db  0x00 ; '.'
0000000000001d8f         db  0x00 ; '.'
0000000000001d90         db  0x00 ; '.'
0000000000001d91         db  0x00 ; '.'
0000000000001d92         db  0x00 ; '.'
0000000000001d93         db  0x00 ; '.'
0000000000001d94         db  0x00 ; '.'
0000000000001d95         db  0x00 ; '.'
0000000000001d96         db  0x00 ; '.'
0000000000001d97         db  0x00 ; '.'
0000000000001d98         db  0xa0 ; '.'
0000000000001d99         db  0x9c ; '.'
0000000000001d9a         db  0x21 ; '!'
0000000000001d9b         db  0x00 ; '.'
0000000000001d9c         db  0x00 ; '.'
0000000000001d9d         db  0x00 ; '.'
0000000000001d9e         db  0x00 ; '.'
0000000000001d9f         db  0x00 ; '.'
0000000000001da0         db  0x07 ; '.'
0000000000001da1         db  0x00 ; '.'
0000000000001da2         db  0x00 ; '.'
0000000000001da3         db  0x00 ; '.'
0000000000001da4         db  0x0b ; '.'
0000000000001da5         db  0x00 ; '.'
0000000000001da6         db  0x00 ; '.'
0000000000001da7         db  0x00 ; '.'
0000000000001da8         db  0x00 ; '.'
0000000000001da9         db  0x00 ; '.'
0000000000001daa         db  0x00 ; '.'
0000000000001dab         db  0x00 ; '.'
0000000000001dac         db  0x00 ; '.'
0000000000001dad         db  0x00 ; '.'
0000000000001dae         db  0x00 ; '.'
0000000000001daf         db  0x00 ; '.'
0000000000001db0         db  0xa8 ; '.'
0000000000001db1         db  0x9c ; '.'
0000000000001db2         db  0x21 ; '!'
0000000000001db3         db  0x00 ; '.'
0000000000001db4         db  0x00 ; '.'
0000000000001db5         db  0x00 ; '.'
0000000000001db6         db  0x00 ; '.'
0000000000001db7         db  0x00 ; '.'
0000000000001db8         db  0x07 ; '.'
0000000000001db9         db  0x00 ; '.'
0000000000001dba         db  0x00 ; '.'
0000000000001dbb         db  0x00 ; '.'
0000000000001dbc         db  0x0c ; '.'
0000000000001dbd         db  0x00 ; '.'
0000000000001dbe         db  0x00 ; '.'
0000000000001dbf         db  0x00 ; '.'
0000000000001dc0         db  0x00 ; '.'
0000000000001dc1         db  0x00 ; '.'
0000000000001dc2         db  0x00 ; '.'
0000000000001dc3         db  0x00 ; '.'
0000000000001dc4         db  0x00 ; '.'
0000000000001dc5         db  0x00 ; '.'
0000000000001dc6         db  0x00 ; '.'
0000000000001dc7         db  0x00 ; '.'
0000000000001dc8         db  0xb0 ; '.'
0000000000001dc9         db  0x9c ; '.'
0000000000001dca         db  0x21 ; '!'
0000000000001dcb         db  0x00 ; '.'
0000000000001dcc         db  0x00 ; '.'
0000000000001dcd         db  0x00 ; '.'
0000000000001dce         db  0x00 ; '.'
0000000000001dcf         db  0x00 ; '.'
0000000000001dd0         db  0x07 ; '.'
0000000000001dd1         db  0x00 ; '.'
0000000000001dd2         db  0x00 ; '.'
0000000000001dd3         db  0x00 ; '.'
0000000000001dd4         db  0x0d ; '.'
0000000000001dd5         db  0x00 ; '.'
0000000000001dd6         db  0x00 ; '.'
0000000000001dd7         db  0x00 ; '.'
0000000000001dd8         db  0x00 ; '.'
0000000000001dd9         db  0x00 ; '.'
0000000000001dda         db  0x00 ; '.'
0000000000001ddb         db  0x00 ; '.'
0000000000001ddc         db  0x00 ; '.'
0000000000001ddd         db  0x00 ; '.'
0000000000001dde         db  0x00 ; '.'
0000000000001ddf         db  0x00 ; '.'
0000000000001de0         db  0xb8 ; '.'
0000000000001de1         db  0x9c ; '.'
0000000000001de2         db  0x21 ; '!'
0000000000001de3         db  0x00 ; '.'
0000000000001de4         db  0x00 ; '.'
0000000000001de5         db  0x00 ; '.'
0000000000001de6         db  0x00 ; '.'
0000000000001de7         db  0x00 ; '.'
0000000000001de8         db  0x07 ; '.'
0000000000001de9         db  0x00 ; '.'
0000000000001dea         db  0x00 ; '.'
0000000000001deb         db  0x00 ; '.'
0000000000001dec         db  0x0e ; '.'
0000000000001ded         db  0x00 ; '.'
0000000000001dee         db  0x00 ; '.'
0000000000001def         db  0x00 ; '.'
0000000000001df0         db  0x00 ; '.'
0000000000001df1         db  0x00 ; '.'
0000000000001df2         db  0x00 ; '.'
0000000000001df3         db  0x00 ; '.'
0000000000001df4         db  0x00 ; '.'
0000000000001df5         db  0x00 ; '.'
0000000000001df6         db  0x00 ; '.'
0000000000001df7         db  0x00 ; '.'
0000000000001df8         db  0xc0 ; '.'
0000000000001df9         db  0x9c ; '.'
0000000000001dfa         db  0x21 ; '!'
0000000000001dfb         db  0x00 ; '.'
0000000000001dfc         db  0x00 ; '.'
0000000000001dfd         db  0x00 ; '.'
0000000000001dfe         db  0x00 ; '.'
0000000000001dff         db  0x00 ; '.'
0000000000001e00         db  0x07 ; '.'
0000000000001e01         db  0x00 ; '.'
0000000000001e02         db  0x00 ; '.'
0000000000001e03         db  0x00 ; '.'
0000000000001e04         db  0x0f ; '.'
0000000000001e05         db  0x00 ; '.'
0000000000001e06         db  0x00 ; '.'
0000000000001e07         db  0x00 ; '.'
0000000000001e08         db  0x00 ; '.'
0000000000001e09         db  0x00 ; '.'
0000000000001e0a         db  0x00 ; '.'
0000000000001e0b         db  0x00 ; '.'
0000000000001e0c         db  0x00 ; '.'
0000000000001e0d         db  0x00 ; '.'
0000000000001e0e         db  0x00 ; '.'
0000000000001e0f         db  0x00 ; '.'
0000000000001e10         db  0xc8 ; '.'
0000000000001e11         db  0x9c ; '.'
0000000000001e12         db  0x21 ; '!'
0000000000001e13         db  0x00 ; '.'
0000000000001e14         db  0x00 ; '.'
0000000000001e15         db  0x00 ; '.'
0000000000001e16         db  0x00 ; '.'
0000000000001e17         db  0x00 ; '.'
0000000000001e18         db  0x07 ; '.'
0000000000001e19         db  0x00 ; '.'
0000000000001e1a         db  0x00 ; '.'
0000000000001e1b         db  0x00 ; '.'
0000000000001e1c         db  0x10 ; '.'
0000000000001e1d         db  0x00 ; '.'
0000000000001e1e         db  0x00 ; '.'
0000000000001e1f         db  0x00 ; '.'
0000000000001e20         db  0x00 ; '.'
0000000000001e21         db  0x00 ; '.'
0000000000001e22         db  0x00 ; '.'
0000000000001e23         db  0x00 ; '.'
0000000000001e24         db  0x00 ; '.'
0000000000001e25         db  0x00 ; '.'
0000000000001e26         db  0x00 ; '.'
0000000000001e27         db  0x00 ; '.'
0000000000001e28         db  0xd0 ; '.'
0000000000001e29         db  0x9c ; '.'
0000000000001e2a         db  0x21 ; '!'
0000000000001e2b         db  0x00 ; '.'
0000000000001e2c         db  0x00 ; '.'
0000000000001e2d         db  0x00 ; '.'
0000000000001e2e         db  0x00 ; '.'
0000000000001e2f         db  0x00 ; '.'
0000000000001e30         db  0x07 ; '.'
0000000000001e31         db  0x00 ; '.'
0000000000001e32         db  0x00 ; '.'
0000000000001e33         db  0x00 ; '.'
0000000000001e34         db  0x11 ; '.'
0000000000001e35         db  0x00 ; '.'
0000000000001e36         db  0x00 ; '.'
0000000000001e37         db  0x00 ; '.'
0000000000001e38         db  0x00 ; '.'
0000000000001e39         db  0x00 ; '.'
0000000000001e3a         db  0x00 ; '.'
0000000000001e3b         db  0x00 ; '.'
0000000000001e3c         db  0x00 ; '.'
0000000000001e3d         db  0x00 ; '.'
0000000000001e3e         db  0x00 ; '.'
0000000000001e3f         db  0x00 ; '.'
0000000000001e40         db  0xd8 ; '.'
0000000000001e41         db  0x9c ; '.'
0000000000001e42         db  0x21 ; '!'
0000000000001e43         db  0x00 ; '.'
0000000000001e44         db  0x00 ; '.'
0000000000001e45         db  0x00 ; '.'
0000000000001e46         db  0x00 ; '.'
0000000000001e47         db  0x00 ; '.'
0000000000001e48         db  0x07 ; '.'
0000000000001e49         db  0x00 ; '.'
0000000000001e4a         db  0x00 ; '.'
0000000000001e4b         db  0x00 ; '.'
0000000000001e4c         db  0x12 ; '.'
0000000000001e4d         db  0x00 ; '.'
0000000000001e4e         db  0x00 ; '.'
0000000000001e4f         db  0x00 ; '.'
0000000000001e50         db  0x00 ; '.'
0000000000001e51         db  0x00 ; '.'
0000000000001e52         db  0x00 ; '.'
0000000000001e53         db  0x00 ; '.'
0000000000001e54         db  0x00 ; '.'
0000000000001e55         db  0x00 ; '.'
0000000000001e56         db  0x00 ; '.'
0000000000001e57         db  0x00 ; '.'
0000000000001e58         db  0xe0 ; '.'
0000000000001e59         db  0x9c ; '.'
0000000000001e5a         db  0x21 ; '!'
0000000000001e5b         db  0x00 ; '.'
0000000000001e5c         db  0x00 ; '.'
0000000000001e5d         db  0x00 ; '.'
0000000000001e5e         db  0x00 ; '.'
0000000000001e5f         db  0x00 ; '.'
0000000000001e60         db  0x07 ; '.'
0000000000001e61         db  0x00 ; '.'
0000000000001e62         db  0x00 ; '.'
0000000000001e63         db  0x00 ; '.'
0000000000001e64         db  0x13 ; '.'
0000000000001e65         db  0x00 ; '.'
0000000000001e66         db  0x00 ; '.'
0000000000001e67         db  0x00 ; '.'
0000000000001e68         db  0x00 ; '.'
0000000000001e69         db  0x00 ; '.'
0000000000001e6a         db  0x00 ; '.'
0000000000001e6b         db  0x00 ; '.'
0000000000001e6c         db  0x00 ; '.'
0000000000001e6d         db  0x00 ; '.'
0000000000001e6e         db  0x00 ; '.'
0000000000001e6f         db  0x00 ; '.'
0000000000001e70         db  0xe8 ; '.'
0000000000001e71         db  0x9c ; '.'
0000000000001e72         db  0x21 ; '!'
0000000000001e73         db  0x00 ; '.'
0000000000001e74         db  0x00 ; '.'
0000000000001e75         db  0x00 ; '.'
0000000000001e76         db  0x00 ; '.'
0000000000001e77         db  0x00 ; '.'
0000000000001e78         db  0x07 ; '.'
0000000000001e79         db  0x00 ; '.'
0000000000001e7a         db  0x00 ; '.'
0000000000001e7b         db  0x00 ; '.'
0000000000001e7c         db  0x14 ; '.'
0000000000001e7d         db  0x00 ; '.'
0000000000001e7e         db  0x00 ; '.'
0000000000001e7f         db  0x00 ; '.'
0000000000001e80         db  0x00 ; '.'
0000000000001e81         db  0x00 ; '.'
0000000000001e82         db  0x00 ; '.'
0000000000001e83         db  0x00 ; '.'
0000000000001e84         db  0x00 ; '.'
0000000000001e85         db  0x00 ; '.'
0000000000001e86         db  0x00 ; '.'
0000000000001e87         db  0x00 ; '.'
0000000000001e88         db  0xf0 ; '.'
0000000000001e89         db  0x9c ; '.'
0000000000001e8a         db  0x21 ; '!'
0000000000001e8b         db  0x00 ; '.'
0000000000001e8c         db  0x00 ; '.'
0000000000001e8d         db  0x00 ; '.'
0000000000001e8e         db  0x00 ; '.'
0000000000001e8f         db  0x00 ; '.'
0000000000001e90         db  0x07 ; '.'
0000000000001e91         db  0x00 ; '.'
0000000000001e92         db  0x00 ; '.'
0000000000001e93         db  0x00 ; '.'
0000000000001e94         db  0x15 ; '.'
0000000000001e95         db  0x00 ; '.'
0000000000001e96         db  0x00 ; '.'
0000000000001e97         db  0x00 ; '.'
0000000000001e98         db  0x00 ; '.'
0000000000001e99         db  0x00 ; '.'
0000000000001e9a         db  0x00 ; '.'
0000000000001e9b         db  0x00 ; '.'
0000000000001e9c         db  0x00 ; '.'
0000000000001e9d         db  0x00 ; '.'
0000000000001e9e         db  0x00 ; '.'
0000000000001e9f         db  0x00 ; '.'
0000000000001ea0         db  0xf8 ; '.'
0000000000001ea1         db  0x9c ; '.'
0000000000001ea2         db  0x21 ; '!'
0000000000001ea3         db  0x00 ; '.'
0000000000001ea4         db  0x00 ; '.'
0000000000001ea5         db  0x00 ; '.'
0000000000001ea6         db  0x00 ; '.'
0000000000001ea7         db  0x00 ; '.'
0000000000001ea8         db  0x07 ; '.'
0000000000001ea9         db  0x00 ; '.'
0000000000001eaa         db  0x00 ; '.'
0000000000001eab         db  0x00 ; '.'
0000000000001eac         db  0x16 ; '.'
0000000000001ead         db  0x00 ; '.'
0000000000001eae         db  0x00 ; '.'
0000000000001eaf         db  0x00 ; '.'
0000000000001eb0         db  0x00 ; '.'
0000000000001eb1         db  0x00 ; '.'
0000000000001eb2         db  0x00 ; '.'
0000000000001eb3         db  0x00 ; '.'
0000000000001eb4         db  0x00 ; '.'
0000000000001eb5         db  0x00 ; '.'
0000000000001eb6         db  0x00 ; '.'
0000000000001eb7         db  0x00 ; '.'
0000000000001eb8         db  0x00 ; '.'
0000000000001eb9         db  0x9d ; '.'
0000000000001eba         db  0x21 ; '!'
0000000000001ebb         db  0x00 ; '.'
0000000000001ebc         db  0x00 ; '.'
0000000000001ebd         db  0x00 ; '.'
0000000000001ebe         db  0x00 ; '.'
0000000000001ebf         db  0x00 ; '.'
0000000000001ec0         db  0x07 ; '.'
0000000000001ec1         db  0x00 ; '.'
0000000000001ec2         db  0x00 ; '.'
0000000000001ec3         db  0x00 ; '.'
0000000000001ec4         db  0x17 ; '.'
0000000000001ec5         db  0x00 ; '.'
0000000000001ec6         db  0x00 ; '.'
0000000000001ec7         db  0x00 ; '.'
0000000000001ec8         db  0x00 ; '.'
0000000000001ec9         db  0x00 ; '.'
0000000000001eca         db  0x00 ; '.'
0000000000001ecb         db  0x00 ; '.'
0000000000001ecc         db  0x00 ; '.'
0000000000001ecd         db  0x00 ; '.'
0000000000001ece         db  0x00 ; '.'
0000000000001ecf         db  0x00 ; '.'
0000000000001ed0         db  0x08 ; '.'
0000000000001ed1         db  0x9d ; '.'
0000000000001ed2         db  0x21 ; '!'
0000000000001ed3         db  0x00 ; '.'
0000000000001ed4         db  0x00 ; '.'
0000000000001ed5         db  0x00 ; '.'
0000000000001ed6         db  0x00 ; '.'
0000000000001ed7         db  0x00 ; '.'
0000000000001ed8         db  0x07 ; '.'
0000000000001ed9         db  0x00 ; '.'
0000000000001eda         db  0x00 ; '.'
0000000000001edb         db  0x00 ; '.'
0000000000001edc         db  0x18 ; '.'
0000000000001edd         db  0x00 ; '.'
0000000000001ede         db  0x00 ; '.'
0000000000001edf         db  0x00 ; '.'
0000000000001ee0         db  0x00 ; '.'
0000000000001ee1         db  0x00 ; '.'
0000000000001ee2         db  0x00 ; '.'
0000000000001ee3         db  0x00 ; '.'
0000000000001ee4         db  0x00 ; '.'
0000000000001ee5         db  0x00 ; '.'
0000000000001ee6         db  0x00 ; '.'
0000000000001ee7         db  0x00 ; '.'
0000000000001ee8         db  0x10 ; '.'
0000000000001ee9         db  0x9d ; '.'
0000000000001eea         db  0x21 ; '!'
0000000000001eeb         db  0x00 ; '.'
0000000000001eec         db  0x00 ; '.'
0000000000001eed         db  0x00 ; '.'
0000000000001eee         db  0x00 ; '.'
0000000000001eef         db  0x00 ; '.'
0000000000001ef0         db  0x07 ; '.'
0000000000001ef1         db  0x00 ; '.'
0000000000001ef2         db  0x00 ; '.'
0000000000001ef3         db  0x00 ; '.'
0000000000001ef4         db  0x19 ; '.'
0000000000001ef5         db  0x00 ; '.'
0000000000001ef6         db  0x00 ; '.'
0000000000001ef7         db  0x00 ; '.'
0000000000001ef8         db  0x00 ; '.'
0000000000001ef9         db  0x00 ; '.'
0000000000001efa         db  0x00 ; '.'
0000000000001efb         db  0x00 ; '.'
0000000000001efc         db  0x00 ; '.'
0000000000001efd         db  0x00 ; '.'
0000000000001efe         db  0x00 ; '.'
0000000000001eff         db  0x00 ; '.'
0000000000001f00         db  0x18 ; '.'
0000000000001f01         db  0x9d ; '.'
0000000000001f02         db  0x21 ; '!'
0000000000001f03         db  0x00 ; '.'
0000000000001f04         db  0x00 ; '.'
0000000000001f05         db  0x00 ; '.'
0000000000001f06         db  0x00 ; '.'
0000000000001f07         db  0x00 ; '.'
0000000000001f08         db  0x07 ; '.'
0000000000001f09         db  0x00 ; '.'
0000000000001f0a         db  0x00 ; '.'
0000000000001f0b         db  0x00 ; '.'
0000000000001f0c         db  0x1a ; '.'
0000000000001f0d         db  0x00 ; '.'
0000000000001f0e         db  0x00 ; '.'
0000000000001f0f         db  0x00 ; '.'
0000000000001f10         db  0x00 ; '.'
0000000000001f11         db  0x00 ; '.'
0000000000001f12         db  0x00 ; '.'
0000000000001f13         db  0x00 ; '.'
0000000000001f14         db  0x00 ; '.'
0000000000001f15         db  0x00 ; '.'
0000000000001f16         db  0x00 ; '.'
0000000000001f17         db  0x00 ; '.'
0000000000001f18         db  0x20 ; ' '
0000000000001f19         db  0x9d ; '.'
0000000000001f1a         db  0x21 ; '!'
0000000000001f1b         db  0x00 ; '.'
0000000000001f1c         db  0x00 ; '.'
0000000000001f1d         db  0x00 ; '.'
0000000000001f1e         db  0x00 ; '.'
0000000000001f1f         db  0x00 ; '.'
0000000000001f20         db  0x07 ; '.'
0000000000001f21         db  0x00 ; '.'
0000000000001f22         db  0x00 ; '.'
0000000000001f23         db  0x00 ; '.'
0000000000001f24         db  0x1b ; '.'
0000000000001f25         db  0x00 ; '.'
0000000000001f26         db  0x00 ; '.'
0000000000001f27         db  0x00 ; '.'
0000000000001f28         db  0x00 ; '.'
0000000000001f29         db  0x00 ; '.'
0000000000001f2a         db  0x00 ; '.'
0000000000001f2b         db  0x00 ; '.'
0000000000001f2c         db  0x00 ; '.'
0000000000001f2d         db  0x00 ; '.'
0000000000001f2e         db  0x00 ; '.'
0000000000001f2f         db  0x00 ; '.'
0000000000001f30         db  0x28 ; '('
0000000000001f31         db  0x9d ; '.'
0000000000001f32         db  0x21 ; '!'
0000000000001f33         db  0x00 ; '.'
0000000000001f34         db  0x00 ; '.'
0000000000001f35         db  0x00 ; '.'
0000000000001f36         db  0x00 ; '.'
0000000000001f37         db  0x00 ; '.'
0000000000001f38         db  0x07 ; '.'
0000000000001f39         db  0x00 ; '.'
0000000000001f3a         db  0x00 ; '.'
0000000000001f3b         db  0x00 ; '.'
0000000000001f3c         db  0x1c ; '.'
0000000000001f3d         db  0x00 ; '.'
0000000000001f3e         db  0x00 ; '.'
0000000000001f3f         db  0x00 ; '.'
0000000000001f40         db  0x00 ; '.'
0000000000001f41         db  0x00 ; '.'
0000000000001f42         db  0x00 ; '.'
0000000000001f43         db  0x00 ; '.'
0000000000001f44         db  0x00 ; '.'
0000000000001f45         db  0x00 ; '.'
0000000000001f46         db  0x00 ; '.'
0000000000001f47         db  0x00 ; '.'
0000000000001f48         db  0x30 ; '0'
0000000000001f49         db  0x9d ; '.'
0000000000001f4a         db  0x21 ; '!'
0000000000001f4b         db  0x00 ; '.'
0000000000001f4c         db  0x00 ; '.'
0000000000001f4d         db  0x00 ; '.'
0000000000001f4e         db  0x00 ; '.'
0000000000001f4f         db  0x00 ; '.'
0000000000001f50         db  0x07 ; '.'
0000000000001f51         db  0x00 ; '.'
0000000000001f52         db  0x00 ; '.'
0000000000001f53         db  0x00 ; '.'
0000000000001f54         db  0x1d ; '.'
0000000000001f55         db  0x00 ; '.'
0000000000001f56         db  0x00 ; '.'
0000000000001f57         db  0x00 ; '.'
0000000000001f58         db  0x00 ; '.'
0000000000001f59         db  0x00 ; '.'
0000000000001f5a         db  0x00 ; '.'
0000000000001f5b         db  0x00 ; '.'
0000000000001f5c         db  0x00 ; '.'
0000000000001f5d         db  0x00 ; '.'
0000000000001f5e         db  0x00 ; '.'
0000000000001f5f         db  0x00 ; '.'
0000000000001f60         db  0x38 ; '8'
0000000000001f61         db  0x9d ; '.'
0000000000001f62         db  0x21 ; '!'
0000000000001f63         db  0x00 ; '.'
0000000000001f64         db  0x00 ; '.'
0000000000001f65         db  0x00 ; '.'
0000000000001f66         db  0x00 ; '.'
0000000000001f67         db  0x00 ; '.'
0000000000001f68         db  0x07 ; '.'
0000000000001f69         db  0x00 ; '.'
0000000000001f6a         db  0x00 ; '.'
0000000000001f6b         db  0x00 ; '.'
0000000000001f6c         db  0x1e ; '.'
0000000000001f6d         db  0x00 ; '.'
0000000000001f6e         db  0x00 ; '.'
0000000000001f6f         db  0x00 ; '.'
0000000000001f70         db  0x00 ; '.'
0000000000001f71         db  0x00 ; '.'
0000000000001f72         db  0x00 ; '.'
0000000000001f73         db  0x00 ; '.'
0000000000001f74         db  0x00 ; '.'
0000000000001f75         db  0x00 ; '.'
0000000000001f76         db  0x00 ; '.'
0000000000001f77         db  0x00 ; '.'
0000000000001f78         db  0x40 ; '@'
0000000000001f79         db  0x9d ; '.'
0000000000001f7a         db  0x21 ; '!'
0000000000001f7b         db  0x00 ; '.'
0000000000001f7c         db  0x00 ; '.'
0000000000001f7d         db  0x00 ; '.'
0000000000001f7e         db  0x00 ; '.'
0000000000001f7f         db  0x00 ; '.'
0000000000001f80         db  0x07 ; '.'
0000000000001f81         db  0x00 ; '.'
0000000000001f82         db  0x00 ; '.'
0000000000001f83         db  0x00 ; '.'
0000000000001f84         db  0x1f ; '.'
0000000000001f85         db  0x00 ; '.'
0000000000001f86         db  0x00 ; '.'
0000000000001f87         db  0x00 ; '.'
0000000000001f88         db  0x00 ; '.'
0000000000001f89         db  0x00 ; '.'
0000000000001f8a         db  0x00 ; '.'
0000000000001f8b         db  0x00 ; '.'
0000000000001f8c         db  0x00 ; '.'
0000000000001f8d         db  0x00 ; '.'
0000000000001f8e         db  0x00 ; '.'
0000000000001f8f         db  0x00 ; '.'
0000000000001f90         db  0x48 ; 'H'
0000000000001f91         db  0x9d ; '.'
0000000000001f92         db  0x21 ; '!'
0000000000001f93         db  0x00 ; '.'
0000000000001f94         db  0x00 ; '.'
0000000000001f95         db  0x00 ; '.'
0000000000001f96         db  0x00 ; '.'
0000000000001f97         db  0x00 ; '.'
0000000000001f98         db  0x07 ; '.'
0000000000001f99         db  0x00 ; '.'
0000000000001f9a         db  0x00 ; '.'
0000000000001f9b         db  0x00 ; '.'
0000000000001f9c         db  0x20 ; ' '
0000000000001f9d         db  0x00 ; '.'
0000000000001f9e         db  0x00 ; '.'
0000000000001f9f         db  0x00 ; '.'
0000000000001fa0         db  0x00 ; '.'
0000000000001fa1         db  0x00 ; '.'
0000000000001fa2         db  0x00 ; '.'
0000000000001fa3         db  0x00 ; '.'
0000000000001fa4         db  0x00 ; '.'
0000000000001fa5         db  0x00 ; '.'
0000000000001fa6         db  0x00 ; '.'
0000000000001fa7         db  0x00 ; '.'
0000000000001fa8         db  0x50 ; 'P'
0000000000001fa9         db  0x9d ; '.'
0000000000001faa         db  0x21 ; '!'
0000000000001fab         db  0x00 ; '.'
0000000000001fac         db  0x00 ; '.'
0000000000001fad         db  0x00 ; '.'
0000000000001fae         db  0x00 ; '.'
0000000000001faf         db  0x00 ; '.'
0000000000001fb0         db  0x07 ; '.'
0000000000001fb1         db  0x00 ; '.'
0000000000001fb2         db  0x00 ; '.'
0000000000001fb3         db  0x00 ; '.'
0000000000001fb4         db  0x21 ; '!'
0000000000001fb5         db  0x00 ; '.'
0000000000001fb6         db  0x00 ; '.'
0000000000001fb7         db  0x00 ; '.'
0000000000001fb8         db  0x00 ; '.'
0000000000001fb9         db  0x00 ; '.'
0000000000001fba         db  0x00 ; '.'
0000000000001fbb         db  0x00 ; '.'
0000000000001fbc         db  0x00 ; '.'
0000000000001fbd         db  0x00 ; '.'
0000000000001fbe         db  0x00 ; '.'
0000000000001fbf         db  0x00 ; '.'
0000000000001fc0         db  0x58 ; 'X'
0000000000001fc1         db  0x9d ; '.'
0000000000001fc2         db  0x21 ; '!'
0000000000001fc3         db  0x00 ; '.'
0000000000001fc4         db  0x00 ; '.'
0000000000001fc5         db  0x00 ; '.'
0000000000001fc6         db  0x00 ; '.'
0000000000001fc7         db  0x00 ; '.'
0000000000001fc8         db  0x07 ; '.'
0000000000001fc9         db  0x00 ; '.'
0000000000001fca         db  0x00 ; '.'
0000000000001fcb         db  0x00 ; '.'
0000000000001fcc         db  0x22 ; '"'
0000000000001fcd         db  0x00 ; '.'
0000000000001fce         db  0x00 ; '.'
0000000000001fcf         db  0x00 ; '.'
0000000000001fd0         db  0x00 ; '.'
0000000000001fd1         db  0x00 ; '.'
0000000000001fd2         db  0x00 ; '.'
0000000000001fd3         db  0x00 ; '.'
0000000000001fd4         db  0x00 ; '.'
0000000000001fd5         db  0x00 ; '.'
0000000000001fd6         db  0x00 ; '.'
0000000000001fd7         db  0x00 ; '.'
0000000000001fd8         db  0x60 ; '`'
0000000000001fd9         db  0x9d ; '.'
0000000000001fda         db  0x21 ; '!'
0000000000001fdb         db  0x00 ; '.'
0000000000001fdc         db  0x00 ; '.'
0000000000001fdd         db  0x00 ; '.'
0000000000001fde         db  0x00 ; '.'
0000000000001fdf         db  0x00 ; '.'
0000000000001fe0         db  0x07 ; '.'
0000000000001fe1         db  0x00 ; '.'
0000000000001fe2         db  0x00 ; '.'
0000000000001fe3         db  0x00 ; '.'
0000000000001fe4         db  0x23 ; '#'
0000000000001fe5         db  0x00 ; '.'
0000000000001fe6         db  0x00 ; '.'
0000000000001fe7         db  0x00 ; '.'
0000000000001fe8         db  0x00 ; '.'
0000000000001fe9         db  0x00 ; '.'
0000000000001fea         db  0x00 ; '.'
0000000000001feb         db  0x00 ; '.'
0000000000001fec         db  0x00 ; '.'
0000000000001fed         db  0x00 ; '.'
0000000000001fee         db  0x00 ; '.'
0000000000001fef         db  0x00 ; '.'
0000000000001ff0         db  0x68 ; 'h'
0000000000001ff1         db  0x9d ; '.'
0000000000001ff2         db  0x21 ; '!'
0000000000001ff3         db  0x00 ; '.'
0000000000001ff4         db  0x00 ; '.'
0000000000001ff5         db  0x00 ; '.'
0000000000001ff6         db  0x00 ; '.'
0000000000001ff7         db  0x00 ; '.'
0000000000001ff8         db  0x07 ; '.'
0000000000001ff9         db  0x00 ; '.'
0000000000001ffa         db  0x00 ; '.'
0000000000001ffb         db  0x00 ; '.'
0000000000001ffc         db  0x24 ; '$'
0000000000001ffd         db  0x00 ; '.'
0000000000001ffe         db  0x00 ; '.'
0000000000001fff         db  0x00 ; '.'
0000000000002000         db  0x00 ; '.'                                         ; DATA XREF=copy_internal+6333, buffer_lcm+11, strmode+47
0000000000002001         db  0x00 ; '.'
0000000000002002         db  0x00 ; '.'
0000000000002003         db  0x00 ; '.'
0000000000002004         db  0x00 ; '.'
0000000000002005         db  0x00 ; '.'
0000000000002006         db  0x00 ; '.'
0000000000002007         db  0x00 ; '.'
0000000000002008         db  0x70 ; 'p'
0000000000002009         db  0x9d ; '.'
000000000000200a         db  0x21 ; '!'
000000000000200b         db  0x00 ; '.'
000000000000200c         db  0x00 ; '.'
000000000000200d         db  0x00 ; '.'
000000000000200e         db  0x00 ; '.'
000000000000200f         db  0x00 ; '.'
0000000000002010         db  0x07 ; '.'
0000000000002011         db  0x00 ; '.'
0000000000002012         db  0x00 ; '.'
0000000000002013         db  0x00 ; '.'
0000000000002014         db  0x25 ; '%'
0000000000002015         db  0x00 ; '.'
0000000000002016         db  0x00 ; '.'
0000000000002017         db  0x00 ; '.'
0000000000002018         db  0x00 ; '.'
0000000000002019         db  0x00 ; '.'
000000000000201a         db  0x00 ; '.'
000000000000201b         db  0x00 ; '.'
000000000000201c         db  0x00 ; '.'
000000000000201d         db  0x00 ; '.'
000000000000201e         db  0x00 ; '.'
000000000000201f         db  0x00 ; '.'
0000000000002020         db  0x78 ; 'x'
0000000000002021         db  0x9d ; '.'
0000000000002022         db  0x21 ; '!'
0000000000002023         db  0x00 ; '.'
0000000000002024         db  0x00 ; '.'
0000000000002025         db  0x00 ; '.'
0000000000002026         db  0x00 ; '.'
0000000000002027         db  0x00 ; '.'
0000000000002028         db  0x07 ; '.'
0000000000002029         db  0x00 ; '.'
000000000000202a         db  0x00 ; '.'
000000000000202b         db  0x00 ; '.'
000000000000202c         db  0x26 ; '&'
000000000000202d         db  0x00 ; '.'
000000000000202e         db  0x00 ; '.'
000000000000202f         db  0x00 ; '.'
0000000000002030         db  0x00 ; '.'
0000000000002031         db  0x00 ; '.'
0000000000002032         db  0x00 ; '.'
0000000000002033         db  0x00 ; '.'
0000000000002034         db  0x00 ; '.'
0000000000002035         db  0x00 ; '.'
0000000000002036         db  0x00 ; '.'
0000000000002037         db  0x00 ; '.'
0000000000002038         db  0x80 ; '.'
0000000000002039         db  0x9d ; '.'
000000000000203a         db  0x21 ; '!'
000000000000203b         db  0x00 ; '.'
000000000000203c         db  0x00 ; '.'
000000000000203d         db  0x00 ; '.'
000000000000203e         db  0x00 ; '.'
000000000000203f         db  0x00 ; '.'
0000000000002040         db  0x07 ; '.'
0000000000002041         db  0x00 ; '.'
0000000000002042         db  0x00 ; '.'
0000000000002043         db  0x00 ; '.'
0000000000002044         db  0x27 ; '''
0000000000002045         db  0x00 ; '.'
0000000000002046         db  0x00 ; '.'
0000000000002047         db  0x00 ; '.'
0000000000002048         db  0x00 ; '.'
0000000000002049         db  0x00 ; '.'
000000000000204a         db  0x00 ; '.'
000000000000204b         db  0x00 ; '.'
000000000000204c         db  0x00 ; '.'
000000000000204d         db  0x00 ; '.'
000000000000204e         db  0x00 ; '.'
000000000000204f         db  0x00 ; '.'
0000000000002050         db  0x88 ; '.'
0000000000002051         db  0x9d ; '.'
0000000000002052         db  0x21 ; '!'
0000000000002053         db  0x00 ; '.'
0000000000002054         db  0x00 ; '.'
0000000000002055         db  0x00 ; '.'
0000000000002056         db  0x00 ; '.'
0000000000002057         db  0x00 ; '.'
0000000000002058         db  0x07 ; '.'
0000000000002059         db  0x00 ; '.'
000000000000205a         db  0x00 ; '.'
000000000000205b         db  0x00 ; '.'
000000000000205c         db  0x28 ; '('
000000000000205d         db  0x00 ; '.'
000000000000205e         db  0x00 ; '.'
000000000000205f         db  0x00 ; '.'
0000000000002060         db  0x00 ; '.'
0000000000002061         db  0x00 ; '.'
0000000000002062         db  0x00 ; '.'
0000000000002063         db  0x00 ; '.'
0000000000002064         db  0x00 ; '.'
0000000000002065         db  0x00 ; '.'
0000000000002066         db  0x00 ; '.'
0000000000002067         db  0x00 ; '.'
0000000000002068         db  0x90 ; '.'
0000000000002069         db  0x9d ; '.'
000000000000206a         db  0x21 ; '!'
000000000000206b         db  0x00 ; '.'
000000000000206c         db  0x00 ; '.'
000000000000206d         db  0x00 ; '.'
000000000000206e         db  0x00 ; '.'
000000000000206f         db  0x00 ; '.'
0000000000002070         db  0x07 ; '.'
0000000000002071         db  0x00 ; '.'
0000000000002072         db  0x00 ; '.'
0000000000002073         db  0x00 ; '.'
0000000000002074         db  0x29 ; ')'
0000000000002075         db  0x00 ; '.'
0000000000002076         db  0x00 ; '.'
0000000000002077         db  0x00 ; '.'
0000000000002078         db  0x00 ; '.'
0000000000002079         db  0x00 ; '.'
000000000000207a         db  0x00 ; '.'
000000000000207b         db  0x00 ; '.'
000000000000207c         db  0x00 ; '.'
000000000000207d         db  0x00 ; '.'
000000000000207e         db  0x00 ; '.'
000000000000207f         db  0x00 ; '.'
0000000000002080         db  0x98 ; '.'
0000000000002081         db  0x9d ; '.'
0000000000002082         db  0x21 ; '!'
0000000000002083         db  0x00 ; '.'
0000000000002084         db  0x00 ; '.'
0000000000002085         db  0x00 ; '.'
0000000000002086         db  0x00 ; '.'
0000000000002087         db  0x00 ; '.'
0000000000002088         db  0x07 ; '.'
0000000000002089         db  0x00 ; '.'
000000000000208a         db  0x00 ; '.'
000000000000208b         db  0x00 ; '.'
000000000000208c         db  0x2a ; '*'
000000000000208d         db  0x00 ; '.'
000000000000208e         db  0x00 ; '.'
000000000000208f         db  0x00 ; '.'
0000000000002090         db  0x00 ; '.'
0000000000002091         db  0x00 ; '.'
0000000000002092         db  0x00 ; '.'
0000000000002093         db  0x00 ; '.'
0000000000002094         db  0x00 ; '.'
0000000000002095         db  0x00 ; '.'
0000000000002096         db  0x00 ; '.'
0000000000002097         db  0x00 ; '.'
0000000000002098         db  0xa0 ; '.'
0000000000002099         db  0x9d ; '.'
000000000000209a         db  0x21 ; '!'
000000000000209b         db  0x00 ; '.'
000000000000209c         db  0x00 ; '.'
000000000000209d         db  0x00 ; '.'
000000000000209e         db  0x00 ; '.'
000000000000209f         db  0x00 ; '.'
00000000000020a0         db  0x07 ; '.'
00000000000020a1         db  0x00 ; '.'
00000000000020a2         db  0x00 ; '.'
00000000000020a3         db  0x00 ; '.'
00000000000020a4         db  0x2b ; '+'
00000000000020a5         db  0x00 ; '.'
00000000000020a6         db  0x00 ; '.'
00000000000020a7         db  0x00 ; '.'
00000000000020a8         db  0x00 ; '.'
00000000000020a9         db  0x00 ; '.'
00000000000020aa         db  0x00 ; '.'
00000000000020ab         db  0x00 ; '.'
00000000000020ac         db  0x00 ; '.'
00000000000020ad         db  0x00 ; '.'
00000000000020ae         db  0x00 ; '.'
00000000000020af         db  0x00 ; '.'
00000000000020b0         db  0xa8 ; '.'
00000000000020b1         db  0x9d ; '.'
00000000000020b2         db  0x21 ; '!'
00000000000020b3         db  0x00 ; '.'
00000000000020b4         db  0x00 ; '.'
00000000000020b5         db  0x00 ; '.'
00000000000020b6         db  0x00 ; '.'
00000000000020b7         db  0x00 ; '.'
00000000000020b8         db  0x07 ; '.'
00000000000020b9         db  0x00 ; '.'
00000000000020ba         db  0x00 ; '.'
00000000000020bb         db  0x00 ; '.'
00000000000020bc         db  0x2c ; ','
00000000000020bd         db  0x00 ; '.'
00000000000020be         db  0x00 ; '.'
00000000000020bf         db  0x00 ; '.'
00000000000020c0         db  0x00 ; '.'
00000000000020c1         db  0x00 ; '.'
00000000000020c2         db  0x00 ; '.'
00000000000020c3         db  0x00 ; '.'
00000000000020c4         db  0x00 ; '.'
00000000000020c5         db  0x00 ; '.'
00000000000020c6         db  0x00 ; '.'
00000000000020c7         db  0x00 ; '.'
00000000000020c8         db  0xb0 ; '.'
00000000000020c9         db  0x9d ; '.'
00000000000020ca         db  0x21 ; '!'
00000000000020cb         db  0x00 ; '.'
00000000000020cc         db  0x00 ; '.'
00000000000020cd         db  0x00 ; '.'
00000000000020ce         db  0x00 ; '.'
00000000000020cf         db  0x00 ; '.'
00000000000020d0         db  0x07 ; '.'
00000000000020d1         db  0x00 ; '.'
00000000000020d2         db  0x00 ; '.'
00000000000020d3         db  0x00 ; '.'
00000000000020d4         db  0x2d ; '-'
00000000000020d5         db  0x00 ; '.'
00000000000020d6         db  0x00 ; '.'
00000000000020d7         db  0x00 ; '.'
00000000000020d8         db  0x00 ; '.'
00000000000020d9         db  0x00 ; '.'
00000000000020da         db  0x00 ; '.'
00000000000020db         db  0x00 ; '.'
00000000000020dc         db  0x00 ; '.'
00000000000020dd         db  0x00 ; '.'
00000000000020de         db  0x00 ; '.'
00000000000020df         db  0x00 ; '.'
00000000000020e0         db  0xb8 ; '.'
00000000000020e1         db  0x9d ; '.'
00000000000020e2         db  0x21 ; '!'
00000000000020e3         db  0x00 ; '.'
00000000000020e4         db  0x00 ; '.'
00000000000020e5         db  0x00 ; '.'
00000000000020e6         db  0x00 ; '.'
00000000000020e7         db  0x00 ; '.'
00000000000020e8         db  0x07 ; '.'
00000000000020e9         db  0x00 ; '.'
00000000000020ea         db  0x00 ; '.'
00000000000020eb         db  0x00 ; '.'
00000000000020ec         db  0x2e ; '.'
00000000000020ed         db  0x00 ; '.'
00000000000020ee         db  0x00 ; '.'
00000000000020ef         db  0x00 ; '.'
00000000000020f0         db  0x00 ; '.'
00000000000020f1         db  0x00 ; '.'
00000000000020f2         db  0x00 ; '.'
00000000000020f3         db  0x00 ; '.'
00000000000020f4         db  0x00 ; '.'
00000000000020f5         db  0x00 ; '.'
00000000000020f6         db  0x00 ; '.'
00000000000020f7         db  0x00 ; '.'
00000000000020f8         db  0xc0 ; '.'
00000000000020f9         db  0x9d ; '.'
00000000000020fa         db  0x21 ; '!'
00000000000020fb         db  0x00 ; '.'
00000000000020fc         db  0x00 ; '.'
00000000000020fd         db  0x00 ; '.'
00000000000020fe         db  0x00 ; '.'
00000000000020ff         db  0x00 ; '.'
0000000000002100         db  0x07 ; '.'
0000000000002101         db  0x00 ; '.'
0000000000002102         db  0x00 ; '.'
0000000000002103         db  0x00 ; '.'
0000000000002104         db  0x2f ; '/'
0000000000002105         db  0x00 ; '.'
0000000000002106         db  0x00 ; '.'
0000000000002107         db  0x00 ; '.'
0000000000002108         db  0x00 ; '.'
0000000000002109         db  0x00 ; '.'
000000000000210a         db  0x00 ; '.'
000000000000210b         db  0x00 ; '.'
000000000000210c         db  0x00 ; '.'
000000000000210d         db  0x00 ; '.'
000000000000210e         db  0x00 ; '.'
000000000000210f         db  0x00 ; '.'
0000000000002110         db  0xc8 ; '.'
0000000000002111         db  0x9d ; '.'
0000000000002112         db  0x21 ; '!'
0000000000002113         db  0x00 ; '.'
0000000000002114         db  0x00 ; '.'
0000000000002115         db  0x00 ; '.'
0000000000002116         db  0x00 ; '.'
0000000000002117         db  0x00 ; '.'
0000000000002118         db  0x07 ; '.'
0000000000002119         db  0x00 ; '.'
000000000000211a         db  0x00 ; '.'
000000000000211b         db  0x00 ; '.'
000000000000211c         db  0x30 ; '0'
000000000000211d         db  0x00 ; '.'
000000000000211e         db  0x00 ; '.'
000000000000211f         db  0x00 ; '.'
0000000000002120         db  0x00 ; '.'
0000000000002121         db  0x00 ; '.'
0000000000002122         db  0x00 ; '.'
0000000000002123         db  0x00 ; '.'
0000000000002124         db  0x00 ; '.'
0000000000002125         db  0x00 ; '.'
0000000000002126         db  0x00 ; '.'
0000000000002127         db  0x00 ; '.'
0000000000002128         db  0xd0 ; '.'
0000000000002129         db  0x9d ; '.'
000000000000212a         db  0x21 ; '!'
000000000000212b         db  0x00 ; '.'
000000000000212c         db  0x00 ; '.'
000000000000212d         db  0x00 ; '.'
000000000000212e         db  0x00 ; '.'
000000000000212f         db  0x00 ; '.'
0000000000002130         db  0x07 ; '.'
0000000000002131         db  0x00 ; '.'
0000000000002132         db  0x00 ; '.'
0000000000002133         db  0x00 ; '.'
0000000000002134         db  0x31 ; '1'
0000000000002135         db  0x00 ; '.'
0000000000002136         db  0x00 ; '.'
0000000000002137         db  0x00 ; '.'
0000000000002138         db  0x00 ; '.'
0000000000002139         db  0x00 ; '.'
000000000000213a         db  0x00 ; '.'
000000000000213b         db  0x00 ; '.'
000000000000213c         db  0x00 ; '.'
000000000000213d         db  0x00 ; '.'
000000000000213e         db  0x00 ; '.'
000000000000213f         db  0x00 ; '.'
0000000000002140         db  0xd8 ; '.'
0000000000002141         db  0x9d ; '.'
0000000000002142         db  0x21 ; '!'
0000000000002143         db  0x00 ; '.'
0000000000002144         db  0x00 ; '.'
0000000000002145         db  0x00 ; '.'
0000000000002146         db  0x00 ; '.'
0000000000002147         db  0x00 ; '.'
0000000000002148         db  0x07 ; '.'
0000000000002149         db  0x00 ; '.'
000000000000214a         db  0x00 ; '.'
000000000000214b         db  0x00 ; '.'
000000000000214c         db  0x32 ; '2'
000000000000214d         db  0x00 ; '.'
000000000000214e         db  0x00 ; '.'
000000000000214f         db  0x00 ; '.'
0000000000002150         db  0x00 ; '.'
0000000000002151         db  0x00 ; '.'
0000000000002152         db  0x00 ; '.'
0000000000002153         db  0x00 ; '.'
0000000000002154         db  0x00 ; '.'
0000000000002155         db  0x00 ; '.'
0000000000002156         db  0x00 ; '.'
0000000000002157         db  0x00 ; '.'
0000000000002158         db  0xe0 ; '.'
0000000000002159         db  0x9d ; '.'
000000000000215a         db  0x21 ; '!'
000000000000215b         db  0x00 ; '.'
000000000000215c         db  0x00 ; '.'
000000000000215d         db  0x00 ; '.'
000000000000215e         db  0x00 ; '.'
000000000000215f         db  0x00 ; '.'
0000000000002160         db  0x07 ; '.'
0000000000002161         db  0x00 ; '.'
0000000000002162         db  0x00 ; '.'
0000000000002163         db  0x00 ; '.'
0000000000002164         db  0x33 ; '3'
0000000000002165         db  0x00 ; '.'
0000000000002166         db  0x00 ; '.'
0000000000002167         db  0x00 ; '.'
0000000000002168         db  0x00 ; '.'
0000000000002169         db  0x00 ; '.'
000000000000216a         db  0x00 ; '.'
000000000000216b         db  0x00 ; '.'
000000000000216c         db  0x00 ; '.'
000000000000216d         db  0x00 ; '.'
000000000000216e         db  0x00 ; '.'
000000000000216f         db  0x00 ; '.'
0000000000002170         db  0xe8 ; '.'
0000000000002171         db  0x9d ; '.'
0000000000002172         db  0x21 ; '!'
0000000000002173         db  0x00 ; '.'
0000000000002174         db  0x00 ; '.'
0000000000002175         db  0x00 ; '.'
0000000000002176         db  0x00 ; '.'
0000000000002177         db  0x00 ; '.'
0000000000002178         db  0x07 ; '.'
0000000000002179         db  0x00 ; '.'
000000000000217a         db  0x00 ; '.'
000000000000217b         db  0x00 ; '.'
000000000000217c         db  0x34 ; '4'
000000000000217d         db  0x00 ; '.'
000000000000217e         db  0x00 ; '.'
000000000000217f         db  0x00 ; '.'
0000000000002180         db  0x00 ; '.'
0000000000002181         db  0x00 ; '.'
0000000000002182         db  0x00 ; '.'
0000000000002183         db  0x00 ; '.'
0000000000002184         db  0x00 ; '.'
0000000000002185         db  0x00 ; '.'
0000000000002186         db  0x00 ; '.'
0000000000002187         db  0x00 ; '.'
0000000000002188         db  0xf0 ; '.'
0000000000002189         db  0x9d ; '.'
000000000000218a         db  0x21 ; '!'
000000000000218b         db  0x00 ; '.'
000000000000218c         db  0x00 ; '.'
000000000000218d         db  0x00 ; '.'
000000000000218e         db  0x00 ; '.'
000000000000218f         db  0x00 ; '.'
0000000000002190         db  0x07 ; '.'
0000000000002191         db  0x00 ; '.'
0000000000002192         db  0x00 ; '.'
0000000000002193         db  0x00 ; '.'
0000000000002194         db  0x35 ; '5'
0000000000002195         db  0x00 ; '.'
0000000000002196         db  0x00 ; '.'
0000000000002197         db  0x00 ; '.'
0000000000002198         db  0x00 ; '.'
0000000000002199         db  0x00 ; '.'
000000000000219a         db  0x00 ; '.'
000000000000219b         db  0x00 ; '.'
000000000000219c         db  0x00 ; '.'
000000000000219d         db  0x00 ; '.'
000000000000219e         db  0x00 ; '.'
000000000000219f         db  0x00 ; '.'
00000000000021a0         db  0xf8 ; '.'
00000000000021a1         db  0x9d ; '.'
00000000000021a2         db  0x21 ; '!'
00000000000021a3         db  0x00 ; '.'
00000000000021a4         db  0x00 ; '.'
00000000000021a5         db  0x00 ; '.'
00000000000021a6         db  0x00 ; '.'
00000000000021a7         db  0x00 ; '.'
00000000000021a8         db  0x07 ; '.'
00000000000021a9         db  0x00 ; '.'
00000000000021aa         db  0x00 ; '.'
00000000000021ab         db  0x00 ; '.'
00000000000021ac         db  0x36 ; '6'
00000000000021ad         db  0x00 ; '.'
00000000000021ae         db  0x00 ; '.'
00000000000021af         db  0x00 ; '.'
00000000000021b0         db  0x00 ; '.'
00000000000021b1         db  0x00 ; '.'
00000000000021b2         db  0x00 ; '.'
00000000000021b3         db  0x00 ; '.'
00000000000021b4         db  0x00 ; '.'
00000000000021b5         db  0x00 ; '.'
00000000000021b6         db  0x00 ; '.'
00000000000021b7         db  0x00 ; '.'
00000000000021b8         db  0x00 ; '.'
00000000000021b9         db  0x9e ; '.'
00000000000021ba         db  0x21 ; '!'
00000000000021bb         db  0x00 ; '.'
00000000000021bc         db  0x00 ; '.'
00000000000021bd         db  0x00 ; '.'
00000000000021be         db  0x00 ; '.'
00000000000021bf         db  0x00 ; '.'
00000000000021c0         db  0x07 ; '.'
00000000000021c1         db  0x00 ; '.'
00000000000021c2         db  0x00 ; '.'
00000000000021c3         db  0x00 ; '.'
00000000000021c4         db  0x37 ; '7'
00000000000021c5         db  0x00 ; '.'
00000000000021c6         db  0x00 ; '.'
00000000000021c7         db  0x00 ; '.'
00000000000021c8         db  0x00 ; '.'
00000000000021c9         db  0x00 ; '.'
00000000000021ca         db  0x00 ; '.'
00000000000021cb         db  0x00 ; '.'
00000000000021cc         db  0x00 ; '.'
00000000000021cd         db  0x00 ; '.'
00000000000021ce         db  0x00 ; '.'
00000000000021cf         db  0x00 ; '.'
00000000000021d0         db  0x08 ; '.'
00000000000021d1         db  0x9e ; '.'
00000000000021d2         db  0x21 ; '!'
00000000000021d3         db  0x00 ; '.'
00000000000021d4         db  0x00 ; '.'
00000000000021d5         db  0x00 ; '.'
00000000000021d6         db  0x00 ; '.'
00000000000021d7         db  0x00 ; '.'
00000000000021d8         db  0x07 ; '.'
00000000000021d9         db  0x00 ; '.'
00000000000021da         db  0x00 ; '.'
00000000000021db         db  0x00 ; '.'
00000000000021dc         db  0x39 ; '9'
00000000000021dd         db  0x00 ; '.'
00000000000021de         db  0x00 ; '.'
00000000000021df         db  0x00 ; '.'
00000000000021e0         db  0x00 ; '.'
00000000000021e1         db  0x00 ; '.'
00000000000021e2         db  0x00 ; '.'
00000000000021e3         db  0x00 ; '.'
00000000000021e4         db  0x00 ; '.'
00000000000021e5         db  0x00 ; '.'
00000000000021e6         db  0x00 ; '.'
00000000000021e7         db  0x00 ; '.'
00000000000021e8         db  0x10 ; '.'
00000000000021e9         db  0x9e ; '.'
00000000000021ea         db  0x21 ; '!'
00000000000021eb         db  0x00 ; '.'
00000000000021ec         db  0x00 ; '.'
00000000000021ed         db  0x00 ; '.'
00000000000021ee         db  0x00 ; '.'
00000000000021ef         db  0x00 ; '.'
00000000000021f0         db  0x07 ; '.'
00000000000021f1         db  0x00 ; '.'
00000000000021f2         db  0x00 ; '.'
00000000000021f3         db  0x00 ; '.'
00000000000021f4         db  0x3a ; ':'
00000000000021f5         db  0x00 ; '.'
00000000000021f6         db  0x00 ; '.'
00000000000021f7         db  0x00 ; '.'
00000000000021f8         db  0x00 ; '.'
00000000000021f9         db  0x00 ; '.'
00000000000021fa         db  0x00 ; '.'
00000000000021fb         db  0x00 ; '.'
00000000000021fc         db  0x00 ; '.'
00000000000021fd         db  0x00 ; '.'
00000000000021fe         db  0x00 ; '.'
00000000000021ff         db  0x00 ; '.'
0000000000002200         db  0x18 ; '.'
0000000000002201         db  0x9e ; '.'
0000000000002202         db  0x21 ; '!'
0000000000002203         db  0x00 ; '.'
0000000000002204         db  0x00 ; '.'
0000000000002205         db  0x00 ; '.'
0000000000002206         db  0x00 ; '.'
0000000000002207         db  0x00 ; '.'
0000000000002208         db  0x07 ; '.'
0000000000002209         db  0x00 ; '.'
000000000000220a         db  0x00 ; '.'
000000000000220b         db  0x00 ; '.'
000000000000220c         db  0x3b ; ';'
000000000000220d         db  0x00 ; '.'
000000000000220e         db  0x00 ; '.'
000000000000220f         db  0x00 ; '.'
0000000000002210         db  0x00 ; '.'
0000000000002211         db  0x00 ; '.'
0000000000002212         db  0x00 ; '.'
0000000000002213         db  0x00 ; '.'
0000000000002214         db  0x00 ; '.'
0000000000002215         db  0x00 ; '.'
0000000000002216         db  0x00 ; '.'
0000000000002217         db  0x00 ; '.'
0000000000002218         db  0x20 ; ' '
0000000000002219         db  0x9e ; '.'
000000000000221a         db  0x21 ; '!'
000000000000221b         db  0x00 ; '.'
000000000000221c         db  0x00 ; '.'
000000000000221d         db  0x00 ; '.'
000000000000221e         db  0x00 ; '.'
000000000000221f         db  0x00 ; '.'
0000000000002220         db  0x07 ; '.'
0000000000002221         db  0x00 ; '.'
0000000000002222         db  0x00 ; '.'
0000000000002223         db  0x00 ; '.'
0000000000002224         db  0x3c ; '<'
0000000000002225         db  0x00 ; '.'
0000000000002226         db  0x00 ; '.'
0000000000002227         db  0x00 ; '.'
0000000000002228         db  0x00 ; '.'
0000000000002229         db  0x00 ; '.'
000000000000222a         db  0x00 ; '.'
000000000000222b         db  0x00 ; '.'
000000000000222c         db  0x00 ; '.'
000000000000222d         db  0x00 ; '.'
000000000000222e         db  0x00 ; '.'
000000000000222f         db  0x00 ; '.'
0000000000002230         db  0x28 ; '('
0000000000002231         db  0x9e ; '.'
0000000000002232         db  0x21 ; '!'
0000000000002233         db  0x00 ; '.'
0000000000002234         db  0x00 ; '.'
0000000000002235         db  0x00 ; '.'
0000000000002236         db  0x00 ; '.'
0000000000002237         db  0x00 ; '.'
0000000000002238         db  0x07 ; '.'
0000000000002239         db  0x00 ; '.'
000000000000223a         db  0x00 ; '.'
000000000000223b         db  0x00 ; '.'
000000000000223c         db  0x3d ; '='
000000000000223d         db  0x00 ; '.'
000000000000223e         db  0x00 ; '.'
000000000000223f         db  0x00 ; '.'
0000000000002240         db  0x00 ; '.'
0000000000002241         db  0x00 ; '.'
0000000000002242         db  0x00 ; '.'
0000000000002243         db  0x00 ; '.'
0000000000002244         db  0x00 ; '.'
0000000000002245         db  0x00 ; '.'
0000000000002246         db  0x00 ; '.'
0000000000002247         db  0x00 ; '.'
0000000000002248         db  0x30 ; '0'
0000000000002249         db  0x9e ; '.'
000000000000224a         db  0x21 ; '!'
000000000000224b         db  0x00 ; '.'
000000000000224c         db  0x00 ; '.'
000000000000224d         db  0x00 ; '.'
000000000000224e         db  0x00 ; '.'
000000000000224f         db  0x00 ; '.'
0000000000002250         db  0x07 ; '.'
0000000000002251         db  0x00 ; '.'
0000000000002252         db  0x00 ; '.'
0000000000002253         db  0x00 ; '.'
0000000000002254         db  0x3e ; '>'
0000000000002255         db  0x00 ; '.'
0000000000002256         db  0x00 ; '.'
0000000000002257         db  0x00 ; '.'
0000000000002258         db  0x00 ; '.'
0000000000002259         db  0x00 ; '.'
000000000000225a         db  0x00 ; '.'
000000000000225b         db  0x00 ; '.'
000000000000225c         db  0x00 ; '.'
000000000000225d         db  0x00 ; '.'
000000000000225e         db  0x00 ; '.'
000000000000225f         db  0x00 ; '.'
0000000000002260         db  0x38 ; '8'
0000000000002261         db  0x9e ; '.'
0000000000002262         db  0x21 ; '!'
0000000000002263         db  0x00 ; '.'
0000000000002264         db  0x00 ; '.'
0000000000002265         db  0x00 ; '.'
0000000000002266         db  0x00 ; '.'
0000000000002267         db  0x00 ; '.'
0000000000002268         db  0x07 ; '.'
0000000000002269         db  0x00 ; '.'
000000000000226a         db  0x00 ; '.'
000000000000226b         db  0x00 ; '.'
000000000000226c         db  0x3f ; '?'
000000000000226d         db  0x00 ; '.'
000000000000226e         db  0x00 ; '.'
000000000000226f         db  0x00 ; '.'
0000000000002270         db  0x00 ; '.'
0000000000002271         db  0x00 ; '.'
0000000000002272         db  0x00 ; '.'
0000000000002273         db  0x00 ; '.'
0000000000002274         db  0x00 ; '.'
0000000000002275         db  0x00 ; '.'
0000000000002276         db  0x00 ; '.'
0000000000002277         db  0x00 ; '.'
0000000000002278         db  0x40 ; '@'
0000000000002279         db  0x9e ; '.'
000000000000227a         db  0x21 ; '!'
000000000000227b         db  0x00 ; '.'
000000000000227c         db  0x00 ; '.'
000000000000227d         db  0x00 ; '.'
000000000000227e         db  0x00 ; '.'
000000000000227f         db  0x00 ; '.'
0000000000002280         db  0x07 ; '.'
0000000000002281         db  0x00 ; '.'
0000000000002282         db  0x00 ; '.'
0000000000002283         db  0x00 ; '.'
0000000000002284         db  0x40 ; '@'
0000000000002285         db  0x00 ; '.'
0000000000002286         db  0x00 ; '.'
0000000000002287         db  0x00 ; '.'
0000000000002288         db  0x00 ; '.'
0000000000002289         db  0x00 ; '.'
000000000000228a         db  0x00 ; '.'
000000000000228b         db  0x00 ; '.'
000000000000228c         db  0x00 ; '.'
000000000000228d         db  0x00 ; '.'
000000000000228e         db  0x00 ; '.'
000000000000228f         db  0x00 ; '.'
0000000000002290         db  0x48 ; 'H'
0000000000002291         db  0x9e ; '.'
0000000000002292         db  0x21 ; '!'
0000000000002293         db  0x00 ; '.'
0000000000002294         db  0x00 ; '.'
0000000000002295         db  0x00 ; '.'
0000000000002296         db  0x00 ; '.'
0000000000002297         db  0x00 ; '.'
0000000000002298         db  0x07 ; '.'
0000000000002299         db  0x00 ; '.'
000000000000229a         db  0x00 ; '.'
000000000000229b         db  0x00 ; '.'
000000000000229c         db  0x41 ; 'A'
000000000000229d         db  0x00 ; '.'
000000000000229e         db  0x00 ; '.'
000000000000229f         db  0x00 ; '.'
00000000000022a0         db  0x00 ; '.'
00000000000022a1         db  0x00 ; '.'
00000000000022a2         db  0x00 ; '.'
00000000000022a3         db  0x00 ; '.'
00000000000022a4         db  0x00 ; '.'
00000000000022a5         db  0x00 ; '.'
00000000000022a6         db  0x00 ; '.'
00000000000022a7         db  0x00 ; '.'
00000000000022a8         db  0x50 ; 'P'
00000000000022a9         db  0x9e ; '.'
00000000000022aa         db  0x21 ; '!'
00000000000022ab         db  0x00 ; '.'
00000000000022ac         db  0x00 ; '.'
00000000000022ad         db  0x00 ; '.'
00000000000022ae         db  0x00 ; '.'
00000000000022af         db  0x00 ; '.'
00000000000022b0         db  0x07 ; '.'
00000000000022b1         db  0x00 ; '.'
00000000000022b2         db  0x00 ; '.'
00000000000022b3         db  0x00 ; '.'
00000000000022b4         db  0x42 ; 'B'
00000000000022b5         db  0x00 ; '.'
00000000000022b6         db  0x00 ; '.'
00000000000022b7         db  0x00 ; '.'
00000000000022b8         db  0x00 ; '.'
00000000000022b9         db  0x00 ; '.'
00000000000022ba         db  0x00 ; '.'
00000000000022bb         db  0x00 ; '.'
00000000000022bc         db  0x00 ; '.'
00000000000022bd         db  0x00 ; '.'
00000000000022be         db  0x00 ; '.'
00000000000022bf         db  0x00 ; '.'
00000000000022c0         db  0x58 ; 'X'
00000000000022c1         db  0x9e ; '.'
00000000000022c2         db  0x21 ; '!'
00000000000022c3         db  0x00 ; '.'
00000000000022c4         db  0x00 ; '.'
00000000000022c5         db  0x00 ; '.'
00000000000022c6         db  0x00 ; '.'
00000000000022c7         db  0x00 ; '.'
00000000000022c8         db  0x07 ; '.'
00000000000022c9         db  0x00 ; '.'
00000000000022ca         db  0x00 ; '.'
00000000000022cb         db  0x00 ; '.'
00000000000022cc         db  0x43 ; 'C'
00000000000022cd         db  0x00 ; '.'
00000000000022ce         db  0x00 ; '.'
00000000000022cf         db  0x00 ; '.'
00000000000022d0         db  0x00 ; '.'
00000000000022d1         db  0x00 ; '.'
00000000000022d2         db  0x00 ; '.'
00000000000022d3         db  0x00 ; '.'
00000000000022d4         db  0x00 ; '.'
00000000000022d5         db  0x00 ; '.'
00000000000022d6         db  0x00 ; '.'
00000000000022d7         db  0x00 ; '.'
00000000000022d8         db  0x60 ; '`'
00000000000022d9         db  0x9e ; '.'
00000000000022da         db  0x21 ; '!'
00000000000022db         db  0x00 ; '.'
00000000000022dc         db  0x00 ; '.'
00000000000022dd         db  0x00 ; '.'
00000000000022de         db  0x00 ; '.'
00000000000022df         db  0x00 ; '.'
00000000000022e0         db  0x07 ; '.'
00000000000022e1         db  0x00 ; '.'
00000000000022e2         db  0x00 ; '.'
00000000000022e3         db  0x00 ; '.'
00000000000022e4         db  0x44 ; 'D'
00000000000022e5         db  0x00 ; '.'
00000000000022e6         db  0x00 ; '.'
00000000000022e7         db  0x00 ; '.'
00000000000022e8         db  0x00 ; '.'
00000000000022e9         db  0x00 ; '.'
00000000000022ea         db  0x00 ; '.'
00000000000022eb         db  0x00 ; '.'
00000000000022ec         db  0x00 ; '.'
00000000000022ed         db  0x00 ; '.'
00000000000022ee         db  0x00 ; '.'
00000000000022ef         db  0x00 ; '.'
00000000000022f0         db  0x68 ; 'h'
00000000000022f1         db  0x9e ; '.'
00000000000022f2         db  0x21 ; '!'
00000000000022f3         db  0x00 ; '.'
00000000000022f4         db  0x00 ; '.'
00000000000022f5         db  0x00 ; '.'
00000000000022f6         db  0x00 ; '.'
00000000000022f7         db  0x00 ; '.'
00000000000022f8         db  0x07 ; '.'
00000000000022f9         db  0x00 ; '.'
00000000000022fa         db  0x00 ; '.'
00000000000022fb         db  0x00 ; '.'
00000000000022fc         db  0x46 ; 'F'
00000000000022fd         db  0x00 ; '.'
00000000000022fe         db  0x00 ; '.'
00000000000022ff         db  0x00 ; '.'
0000000000002300         db  0x00 ; '.'
0000000000002301         db  0x00 ; '.'
0000000000002302         db  0x00 ; '.'
0000000000002303         db  0x00 ; '.'
0000000000002304         db  0x00 ; '.'
0000000000002305         db  0x00 ; '.'
0000000000002306         db  0x00 ; '.'
0000000000002307         db  0x00 ; '.'
0000000000002308         db  0x70 ; 'p'
0000000000002309         db  0x9e ; '.'
000000000000230a         db  0x21 ; '!'
000000000000230b         db  0x00 ; '.'
000000000000230c         db  0x00 ; '.'
000000000000230d         db  0x00 ; '.'
000000000000230e         db  0x00 ; '.'
000000000000230f         db  0x00 ; '.'
0000000000002310         db  0x07 ; '.'
0000000000002311         db  0x00 ; '.'
0000000000002312         db  0x00 ; '.'
0000000000002313         db  0x00 ; '.'
0000000000002314         db  0x47 ; 'G'
0000000000002315         db  0x00 ; '.'
0000000000002316         db  0x00 ; '.'
0000000000002317         db  0x00 ; '.'
0000000000002318         db  0x00 ; '.'
0000000000002319         db  0x00 ; '.'
000000000000231a         db  0x00 ; '.'
000000000000231b         db  0x00 ; '.'
000000000000231c         db  0x00 ; '.'
000000000000231d         db  0x00 ; '.'
000000000000231e         db  0x00 ; '.'
000000000000231f         db  0x00 ; '.'
0000000000002320         db  0x78 ; 'x'
0000000000002321         db  0x9e ; '.'
0000000000002322         db  0x21 ; '!'
0000000000002323         db  0x00 ; '.'
0000000000002324         db  0x00 ; '.'
0000000000002325         db  0x00 ; '.'
0000000000002326         db  0x00 ; '.'
0000000000002327         db  0x00 ; '.'
0000000000002328         db  0x07 ; '.'
0000000000002329         db  0x00 ; '.'
000000000000232a         db  0x00 ; '.'
000000000000232b         db  0x00 ; '.'
000000000000232c         db  0x48 ; 'H'
000000000000232d         db  0x00 ; '.'
000000000000232e         db  0x00 ; '.'
000000000000232f         db  0x00 ; '.'
0000000000002330         db  0x00 ; '.'
0000000000002331         db  0x00 ; '.'
0000000000002332         db  0x00 ; '.'
0000000000002333         db  0x00 ; '.'
0000000000002334         db  0x00 ; '.'
0000000000002335         db  0x00 ; '.'
0000000000002336         db  0x00 ; '.'
0000000000002337         db  0x00 ; '.'
0000000000002338         db  0x80 ; '.'
0000000000002339         db  0x9e ; '.'
000000000000233a         db  0x21 ; '!'
000000000000233b         db  0x00 ; '.'
000000000000233c         db  0x00 ; '.'
000000000000233d         db  0x00 ; '.'
000000000000233e         db  0x00 ; '.'
000000000000233f         db  0x00 ; '.'
0000000000002340         db  0x07 ; '.'
0000000000002341         db  0x00 ; '.'
0000000000002342         db  0x00 ; '.'
0000000000002343         db  0x00 ; '.'
0000000000002344         db  0x49 ; 'I'
0000000000002345         db  0x00 ; '.'
0000000000002346         db  0x00 ; '.'
0000000000002347         db  0x00 ; '.'
0000000000002348         db  0x00 ; '.'
0000000000002349         db  0x00 ; '.'
000000000000234a         db  0x00 ; '.'
000000000000234b         db  0x00 ; '.'
000000000000234c         db  0x00 ; '.'
000000000000234d         db  0x00 ; '.'
000000000000234e         db  0x00 ; '.'
000000000000234f         db  0x00 ; '.'
0000000000002350         db  0x88 ; '.'
0000000000002351         db  0x9e ; '.'
0000000000002352         db  0x21 ; '!'
0000000000002353         db  0x00 ; '.'
0000000000002354         db  0x00 ; '.'
0000000000002355         db  0x00 ; '.'
0000000000002356         db  0x00 ; '.'
0000000000002357         db  0x00 ; '.'
0000000000002358         db  0x07 ; '.'
0000000000002359         db  0x00 ; '.'
000000000000235a         db  0x00 ; '.'
000000000000235b         db  0x00 ; '.'
000000000000235c         db  0x4a ; 'J'
000000000000235d         db  0x00 ; '.'
000000000000235e         db  0x00 ; '.'
000000000000235f         db  0x00 ; '.'
0000000000002360         db  0x00 ; '.'
0000000000002361         db  0x00 ; '.'
0000000000002362         db  0x00 ; '.'
0000000000002363         db  0x00 ; '.'
0000000000002364         db  0x00 ; '.'
0000000000002365         db  0x00 ; '.'
0000000000002366         db  0x00 ; '.'
0000000000002367         db  0x00 ; '.'
0000000000002368         db  0x90 ; '.'
0000000000002369         db  0x9e ; '.'
000000000000236a         db  0x21 ; '!'
000000000000236b         db  0x00 ; '.'
000000000000236c         db  0x00 ; '.'
000000000000236d         db  0x00 ; '.'
000000000000236e         db  0x00 ; '.'
000000000000236f         db  0x00 ; '.'
0000000000002370         db  0x07 ; '.'
0000000000002371         db  0x00 ; '.'
0000000000002372         db  0x00 ; '.'
0000000000002373         db  0x00 ; '.'
0000000000002374         db  0x4b ; 'K'
0000000000002375         db  0x00 ; '.'
0000000000002376         db  0x00 ; '.'
0000000000002377         db  0x00 ; '.'
0000000000002378         db  0x00 ; '.'
0000000000002379         db  0x00 ; '.'
000000000000237a         db  0x00 ; '.'
000000000000237b         db  0x00 ; '.'
000000000000237c         db  0x00 ; '.'
000000000000237d         db  0x00 ; '.'
000000000000237e         db  0x00 ; '.'
000000000000237f         db  0x00 ; '.'
0000000000002380         db  0x98 ; '.'
0000000000002381         db  0x9e ; '.'
0000000000002382         db  0x21 ; '!'
0000000000002383         db  0x00 ; '.'
0000000000002384         db  0x00 ; '.'
0000000000002385         db  0x00 ; '.'
0000000000002386         db  0x00 ; '.'
0000000000002387         db  0x00 ; '.'
0000000000002388         db  0x07 ; '.'
0000000000002389         db  0x00 ; '.'
000000000000238a         db  0x00 ; '.'
000000000000238b         db  0x00 ; '.'
000000000000238c         db  0x4c ; 'L'
000000000000238d         db  0x00 ; '.'
000000000000238e         db  0x00 ; '.'
000000000000238f         db  0x00 ; '.'
0000000000002390         db  0x00 ; '.'
0000000000002391         db  0x00 ; '.'
0000000000002392         db  0x00 ; '.'
0000000000002393         db  0x00 ; '.'
0000000000002394         db  0x00 ; '.'
0000000000002395         db  0x00 ; '.'
0000000000002396         db  0x00 ; '.'
0000000000002397         db  0x00 ; '.'
0000000000002398         db  0xa0 ; '.'
0000000000002399         db  0x9e ; '.'
000000000000239a         db  0x21 ; '!'
000000000000239b         db  0x00 ; '.'
000000000000239c         db  0x00 ; '.'
000000000000239d         db  0x00 ; '.'
000000000000239e         db  0x00 ; '.'
000000000000239f         db  0x00 ; '.'
00000000000023a0         db  0x07 ; '.'
00000000000023a1         db  0x00 ; '.'
00000000000023a2         db  0x00 ; '.'
00000000000023a3         db  0x00 ; '.'
00000000000023a4         db  0x4d ; 'M'
00000000000023a5         db  0x00 ; '.'
00000000000023a6         db  0x00 ; '.'
00000000000023a7         db  0x00 ; '.'
00000000000023a8         db  0x00 ; '.'
00000000000023a9         db  0x00 ; '.'
00000000000023aa         db  0x00 ; '.'
00000000000023ab         db  0x00 ; '.'
00000000000023ac         db  0x00 ; '.'
00000000000023ad         db  0x00 ; '.'
00000000000023ae         db  0x00 ; '.'
00000000000023af         db  0x00 ; '.'
00000000000023b0         db  0xa8 ; '.'
00000000000023b1         db  0x9e ; '.'
00000000000023b2         db  0x21 ; '!'
00000000000023b3         db  0x00 ; '.'
00000000000023b4         db  0x00 ; '.'
00000000000023b5         db  0x00 ; '.'
00000000000023b6         db  0x00 ; '.'
00000000000023b7         db  0x00 ; '.'
00000000000023b8         db  0x07 ; '.'
00000000000023b9         db  0x00 ; '.'
00000000000023ba         db  0x00 ; '.'
00000000000023bb         db  0x00 ; '.'
00000000000023bc         db  0x4e ; 'N'
00000000000023bd         db  0x00 ; '.'
00000000000023be         db  0x00 ; '.'
00000000000023bf         db  0x00 ; '.'
00000000000023c0         db  0x00 ; '.'
00000000000023c1         db  0x00 ; '.'
00000000000023c2         db  0x00 ; '.'
00000000000023c3         db  0x00 ; '.'
00000000000023c4         db  0x00 ; '.'
00000000000023c5         db  0x00 ; '.'
00000000000023c6         db  0x00 ; '.'
00000000000023c7         db  0x00 ; '.'
00000000000023c8         db  0xb0 ; '.'
00000000000023c9         db  0x9e ; '.'
00000000000023ca         db  0x21 ; '!'
00000000000023cb         db  0x00 ; '.'
00000000000023cc         db  0x00 ; '.'
00000000000023cd         db  0x00 ; '.'
00000000000023ce         db  0x00 ; '.'
00000000000023cf         db  0x00 ; '.'
00000000000023d0         db  0x07 ; '.'
00000000000023d1         db  0x00 ; '.'
00000000000023d2         db  0x00 ; '.'
00000000000023d3         db  0x00 ; '.'
00000000000023d4         db  0x4f ; 'O'
00000000000023d5         db  0x00 ; '.'
00000000000023d6         db  0x00 ; '.'
00000000000023d7         db  0x00 ; '.'
00000000000023d8         db  0x00 ; '.'
00000000000023d9         db  0x00 ; '.'
00000000000023da         db  0x00 ; '.'
00000000000023db         db  0x00 ; '.'
00000000000023dc         db  0x00 ; '.'
00000000000023dd         db  0x00 ; '.'
00000000000023de         db  0x00 ; '.'
00000000000023df         db  0x00 ; '.'
00000000000023e0         db  0xb8 ; '.'
00000000000023e1         db  0x9e ; '.'
00000000000023e2         db  0x21 ; '!'
00000000000023e3         db  0x00 ; '.'
00000000000023e4         db  0x00 ; '.'
00000000000023e5         db  0x00 ; '.'
00000000000023e6         db  0x00 ; '.'
00000000000023e7         db  0x00 ; '.'
00000000000023e8         db  0x07 ; '.'
00000000000023e9         db  0x00 ; '.'
00000000000023ea         db  0x00 ; '.'
00000000000023eb         db  0x00 ; '.'
00000000000023ec         db  0x50 ; 'P'
00000000000023ed         db  0x00 ; '.'
00000000000023ee         db  0x00 ; '.'
00000000000023ef         db  0x00 ; '.'
00000000000023f0         db  0x00 ; '.'
00000000000023f1         db  0x00 ; '.'
00000000000023f2         db  0x00 ; '.'
00000000000023f3         db  0x00 ; '.'
00000000000023f4         db  0x00 ; '.'
00000000000023f5         db  0x00 ; '.'
00000000000023f6         db  0x00 ; '.'
00000000000023f7         db  0x00 ; '.'
00000000000023f8         db  0xc0 ; '.'
00000000000023f9         db  0x9e ; '.'
00000000000023fa         db  0x21 ; '!'
00000000000023fb         db  0x00 ; '.'
00000000000023fc         db  0x00 ; '.'
00000000000023fd         db  0x00 ; '.'
00000000000023fe         db  0x00 ; '.'
00000000000023ff         db  0x00 ; '.'
0000000000002400         db  0x07 ; '.'
0000000000002401         db  0x00 ; '.'
0000000000002402         db  0x00 ; '.'
0000000000002403         db  0x00 ; '.'
0000000000002404         db  0x51 ; 'Q'
0000000000002405         db  0x00 ; '.'
0000000000002406         db  0x00 ; '.'
0000000000002407         db  0x00 ; '.'
0000000000002408         db  0x00 ; '.'
0000000000002409         db  0x00 ; '.'
000000000000240a         db  0x00 ; '.'
000000000000240b         db  0x00 ; '.'
000000000000240c         db  0x00 ; '.'
000000000000240d         db  0x00 ; '.'
000000000000240e         db  0x00 ; '.'
000000000000240f         db  0x00 ; '.'
0000000000002410         db  0xc8 ; '.'
0000000000002411         db  0x9e ; '.'
0000000000002412         db  0x21 ; '!'
0000000000002413         db  0x00 ; '.'
0000000000002414         db  0x00 ; '.'
0000000000002415         db  0x00 ; '.'
0000000000002416         db  0x00 ; '.'
0000000000002417         db  0x00 ; '.'
0000000000002418         db  0x07 ; '.'
0000000000002419         db  0x00 ; '.'
000000000000241a         db  0x00 ; '.'
000000000000241b         db  0x00 ; '.'
000000000000241c         db  0x52 ; 'R'
000000000000241d         db  0x00 ; '.'
000000000000241e         db  0x00 ; '.'
000000000000241f         db  0x00 ; '.'
0000000000002420         db  0x00 ; '.'
0000000000002421         db  0x00 ; '.'
0000000000002422         db  0x00 ; '.'
0000000000002423         db  0x00 ; '.'
0000000000002424         db  0x00 ; '.'
0000000000002425         db  0x00 ; '.'
0000000000002426         db  0x00 ; '.'
0000000000002427         db  0x00 ; '.'
0000000000002428         db  0xd0 ; '.'
0000000000002429         db  0x9e ; '.'
000000000000242a         db  0x21 ; '!'
000000000000242b         db  0x00 ; '.'
000000000000242c         db  0x00 ; '.'
000000000000242d         db  0x00 ; '.'
000000000000242e         db  0x00 ; '.'
000000000000242f         db  0x00 ; '.'
0000000000002430         db  0x07 ; '.'
0000000000002431         db  0x00 ; '.'
0000000000002432         db  0x00 ; '.'
0000000000002433         db  0x00 ; '.'
0000000000002434         db  0x53 ; 'S'
0000000000002435         db  0x00 ; '.'
0000000000002436         db  0x00 ; '.'
0000000000002437         db  0x00 ; '.'
0000000000002438         db  0x00 ; '.'
0000000000002439         db  0x00 ; '.'
000000000000243a         db  0x00 ; '.'
000000000000243b         db  0x00 ; '.'
000000000000243c         db  0x00 ; '.'
000000000000243d         db  0x00 ; '.'
000000000000243e         db  0x00 ; '.'
000000000000243f         db  0x00 ; '.'
0000000000002440         db  0xd8 ; '.'
0000000000002441         db  0x9e ; '.'
0000000000002442         db  0x21 ; '!'
0000000000002443         db  0x00 ; '.'
0000000000002444         db  0x00 ; '.'
0000000000002445         db  0x00 ; '.'
0000000000002446         db  0x00 ; '.'
0000000000002447         db  0x00 ; '.'
0000000000002448         db  0x07 ; '.'
0000000000002449         db  0x00 ; '.'
000000000000244a         db  0x00 ; '.'
000000000000244b         db  0x00 ; '.'
000000000000244c         db  0x54 ; 'T'
000000000000244d         db  0x00 ; '.'
000000000000244e         db  0x00 ; '.'
000000000000244f         db  0x00 ; '.'
0000000000002450         db  0x00 ; '.'
0000000000002451         db  0x00 ; '.'
0000000000002452         db  0x00 ; '.'
0000000000002453         db  0x00 ; '.'
0000000000002454         db  0x00 ; '.'
0000000000002455         db  0x00 ; '.'
0000000000002456         db  0x00 ; '.'
0000000000002457         db  0x00 ; '.'
0000000000002458         db  0xe0 ; '.'
0000000000002459         db  0x9e ; '.'
000000000000245a         db  0x21 ; '!'
000000000000245b         db  0x00 ; '.'
000000000000245c         db  0x00 ; '.'
000000000000245d         db  0x00 ; '.'
000000000000245e         db  0x00 ; '.'
000000000000245f         db  0x00 ; '.'
0000000000002460         db  0x07 ; '.'
0000000000002461         db  0x00 ; '.'
0000000000002462         db  0x00 ; '.'
0000000000002463         db  0x00 ; '.'
0000000000002464         db  0x55 ; 'U'
0000000000002465         db  0x00 ; '.'
0000000000002466         db  0x00 ; '.'
0000000000002467         db  0x00 ; '.'
0000000000002468         db  0x00 ; '.'
0000000000002469         db  0x00 ; '.'
000000000000246a         db  0x00 ; '.'
000000000000246b         db  0x00 ; '.'
000000000000246c         db  0x00 ; '.'
000000000000246d         db  0x00 ; '.'
000000000000246e         db  0x00 ; '.'
000000000000246f         db  0x00 ; '.'
0000000000002470         db  0xe8 ; '.'
0000000000002471         db  0x9e ; '.'
0000000000002472         db  0x21 ; '!'
0000000000002473         db  0x00 ; '.'
0000000000002474         db  0x00 ; '.'
0000000000002475         db  0x00 ; '.'
0000000000002476         db  0x00 ; '.'
0000000000002477         db  0x00 ; '.'
0000000000002478         db  0x07 ; '.'
0000000000002479         db  0x00 ; '.'
000000000000247a         db  0x00 ; '.'
000000000000247b         db  0x00 ; '.'
000000000000247c         db  0x56 ; 'V'
000000000000247d         db  0x00 ; '.'
000000000000247e         db  0x00 ; '.'
000000000000247f         db  0x00 ; '.'
0000000000002480         db  0x00 ; '.'
0000000000002481         db  0x00 ; '.'
0000000000002482         db  0x00 ; '.'
0000000000002483         db  0x00 ; '.'
0000000000002484         db  0x00 ; '.'
0000000000002485         db  0x00 ; '.'
0000000000002486         db  0x00 ; '.'
0000000000002487         db  0x00 ; '.'
0000000000002488         db  0xf0 ; '.'
0000000000002489         db  0x9e ; '.'
000000000000248a         db  0x21 ; '!'
000000000000248b         db  0x00 ; '.'
000000000000248c         db  0x00 ; '.'
000000000000248d         db  0x00 ; '.'
000000000000248e         db  0x00 ; '.'
000000000000248f         db  0x00 ; '.'
0000000000002490         db  0x07 ; '.'
0000000000002491         db  0x00 ; '.'
0000000000002492         db  0x00 ; '.'
0000000000002493         db  0x00 ; '.'
0000000000002494         db  0x57 ; 'W'
0000000000002495         db  0x00 ; '.'
0000000000002496         db  0x00 ; '.'
0000000000002497         db  0x00 ; '.'
0000000000002498         db  0x00 ; '.'
0000000000002499         db  0x00 ; '.'
000000000000249a         db  0x00 ; '.'
000000000000249b         db  0x00 ; '.'
000000000000249c         db  0x00 ; '.'
000000000000249d         db  0x00 ; '.'
000000000000249e         db  0x00 ; '.'
000000000000249f         db  0x00 ; '.'
00000000000024a0         db  0xf8 ; '.'
00000000000024a1         db  0x9e ; '.'
00000000000024a2         db  0x21 ; '!'
00000000000024a3         db  0x00 ; '.'
00000000000024a4         db  0x00 ; '.'
00000000000024a5         db  0x00 ; '.'
00000000000024a6         db  0x00 ; '.'
00000000000024a7         db  0x00 ; '.'
00000000000024a8         db  0x07 ; '.'
00000000000024a9         db  0x00 ; '.'
00000000000024aa         db  0x00 ; '.'
00000000000024ab         db  0x00 ; '.'
00000000000024ac         db  0x58 ; 'X'
00000000000024ad         db  0x00 ; '.'
00000000000024ae         db  0x00 ; '.'
00000000000024af         db  0x00 ; '.'
00000000000024b0         db  0x00 ; '.'
00000000000024b1         db  0x00 ; '.'
00000000000024b2         db  0x00 ; '.'
00000000000024b3         db  0x00 ; '.'
00000000000024b4         db  0x00 ; '.'
00000000000024b5         db  0x00 ; '.'
00000000000024b6         db  0x00 ; '.'
00000000000024b7         db  0x00 ; '.'
00000000000024b8         db  0x00 ; '.'
00000000000024b9         db  0x9f ; '.'
00000000000024ba         db  0x21 ; '!'
00000000000024bb         db  0x00 ; '.'
00000000000024bc         db  0x00 ; '.'
00000000000024bd         db  0x00 ; '.'
00000000000024be         db  0x00 ; '.'
00000000000024bf         db  0x00 ; '.'
00000000000024c0         db  0x07 ; '.'
00000000000024c1         db  0x00 ; '.'
00000000000024c2         db  0x00 ; '.'
00000000000024c3         db  0x00 ; '.'
00000000000024c4         db  0x59 ; 'Y'
00000000000024c5         db  0x00 ; '.'
00000000000024c6         db  0x00 ; '.'
00000000000024c7         db  0x00 ; '.'
00000000000024c8         db  0x00 ; '.'
00000000000024c9         db  0x00 ; '.'
00000000000024ca         db  0x00 ; '.'
00000000000024cb         db  0x00 ; '.'
00000000000024cc         db  0x00 ; '.'
00000000000024cd         db  0x00 ; '.'
00000000000024ce         db  0x00 ; '.'
00000000000024cf         db  0x00 ; '.'
00000000000024d0         db  0x08 ; '.'
00000000000024d1         db  0x9f ; '.'
00000000000024d2         db  0x21 ; '!'
00000000000024d3         db  0x00 ; '.'
00000000000024d4         db  0x00 ; '.'
00000000000024d5         db  0x00 ; '.'
00000000000024d6         db  0x00 ; '.'
00000000000024d7         db  0x00 ; '.'
00000000000024d8         db  0x07 ; '.'
00000000000024d9         db  0x00 ; '.'
00000000000024da         db  0x00 ; '.'
00000000000024db         db  0x00 ; '.'
00000000000024dc         db  0x5a ; 'Z'
00000000000024dd         db  0x00 ; '.'
00000000000024de         db  0x00 ; '.'
00000000000024df         db  0x00 ; '.'
00000000000024e0         db  0x00 ; '.'
00000000000024e1         db  0x00 ; '.'
00000000000024e2         db  0x00 ; '.'
00000000000024e3         db  0x00 ; '.'
00000000000024e4         db  0x00 ; '.'
00000000000024e5         db  0x00 ; '.'
00000000000024e6         db  0x00 ; '.'
00000000000024e7         db  0x00 ; '.'
00000000000024e8         db  0x10 ; '.'
00000000000024e9         db  0x9f ; '.'
00000000000024ea         db  0x21 ; '!'
00000000000024eb         db  0x00 ; '.'
00000000000024ec         db  0x00 ; '.'
00000000000024ed         db  0x00 ; '.'
00000000000024ee         db  0x00 ; '.'
00000000000024ef         db  0x00 ; '.'
00000000000024f0         db  0x07 ; '.'
00000000000024f1         db  0x00 ; '.'
00000000000024f2         db  0x00 ; '.'
00000000000024f3         db  0x00 ; '.'
00000000000024f4         db  0x5b ; '['
00000000000024f5         db  0x00 ; '.'
00000000000024f6         db  0x00 ; '.'
00000000000024f7         db  0x00 ; '.'
00000000000024f8         db  0x00 ; '.'
00000000000024f9         db  0x00 ; '.'
00000000000024fa         db  0x00 ; '.'
00000000000024fb         db  0x00 ; '.'
00000000000024fc         db  0x00 ; '.'
00000000000024fd         db  0x00 ; '.'
00000000000024fe         db  0x00 ; '.'
00000000000024ff         db  0x00 ; '.'
0000000000002500         db  0x18 ; '.'
0000000000002501         db  0x9f ; '.'
0000000000002502         db  0x21 ; '!'
0000000000002503         db  0x00 ; '.'
0000000000002504         db  0x00 ; '.'
0000000000002505         db  0x00 ; '.'
0000000000002506         db  0x00 ; '.'
0000000000002507         db  0x00 ; '.'
0000000000002508         db  0x07 ; '.'
0000000000002509         db  0x00 ; '.'
000000000000250a         db  0x00 ; '.'
000000000000250b         db  0x00 ; '.'
000000000000250c         db  0x5c ; '\'
000000000000250d         db  0x00 ; '.'
000000000000250e         db  0x00 ; '.'
000000000000250f         db  0x00 ; '.'
0000000000002510         db  0x00 ; '.'
0000000000002511         db  0x00 ; '.'
0000000000002512         db  0x00 ; '.'
0000000000002513         db  0x00 ; '.'
0000000000002514         db  0x00 ; '.'
0000000000002515         db  0x00 ; '.'
0000000000002516         db  0x00 ; '.'
0000000000002517         db  0x00 ; '.'
0000000000002518         db  0x20 ; ' '
0000000000002519         db  0x9f ; '.'
000000000000251a         db  0x21 ; '!'
000000000000251b         db  0x00 ; '.'
000000000000251c         db  0x00 ; '.'
000000000000251d         db  0x00 ; '.'
000000000000251e         db  0x00 ; '.'
000000000000251f         db  0x00 ; '.'
0000000000002520         db  0x07 ; '.'
0000000000002521         db  0x00 ; '.'
0000000000002522         db  0x00 ; '.'
0000000000002523         db  0x00 ; '.'
0000000000002524         db  0x5d ; ']'
0000000000002525         db  0x00 ; '.'
0000000000002526         db  0x00 ; '.'
0000000000002527         db  0x00 ; '.'
0000000000002528         db  0x00 ; '.'
0000000000002529         db  0x00 ; '.'
000000000000252a         db  0x00 ; '.'
000000000000252b         db  0x00 ; '.'
000000000000252c         db  0x00 ; '.'
000000000000252d         db  0x00 ; '.'
000000000000252e         db  0x00 ; '.'
000000000000252f         db  0x00 ; '.'
0000000000002530         db  0x28 ; '('
0000000000002531         db  0x9f ; '.'
0000000000002532         db  0x21 ; '!'
0000000000002533         db  0x00 ; '.'
0000000000002534         db  0x00 ; '.'
0000000000002535         db  0x00 ; '.'
0000000000002536         db  0x00 ; '.'
0000000000002537         db  0x00 ; '.'
0000000000002538         db  0x07 ; '.'
0000000000002539         db  0x00 ; '.'
000000000000253a         db  0x00 ; '.'
000000000000253b         db  0x00 ; '.'
000000000000253c         db  0x5e ; '^'
000000000000253d         db  0x00 ; '.'
000000000000253e         db  0x00 ; '.'
000000000000253f         db  0x00 ; '.'
0000000000002540         db  0x00 ; '.'
0000000000002541         db  0x00 ; '.'
0000000000002542         db  0x00 ; '.'
0000000000002543         db  0x00 ; '.'
0000000000002544         db  0x00 ; '.'
0000000000002545         db  0x00 ; '.'
0000000000002546         db  0x00 ; '.'
0000000000002547         db  0x00 ; '.'
0000000000002548         db  0x30 ; '0'
0000000000002549         db  0x9f ; '.'
000000000000254a         db  0x21 ; '!'
000000000000254b         db  0x00 ; '.'
000000000000254c         db  0x00 ; '.'
000000000000254d         db  0x00 ; '.'
000000000000254e         db  0x00 ; '.'
000000000000254f         db  0x00 ; '.'
0000000000002550         db  0x07 ; '.'
0000000000002551         db  0x00 ; '.'
0000000000002552         db  0x00 ; '.'
0000000000002553         db  0x00 ; '.'
0000000000002554         db  0x5f ; '_'
0000000000002555         db  0x00 ; '.'
0000000000002556         db  0x00 ; '.'
0000000000002557         db  0x00 ; '.'
0000000000002558         db  0x00 ; '.'
0000000000002559         db  0x00 ; '.'
000000000000255a         db  0x00 ; '.'
000000000000255b         db  0x00 ; '.'
000000000000255c         db  0x00 ; '.'
000000000000255d         db  0x00 ; '.'
000000000000255e         db  0x00 ; '.'
000000000000255f         db  0x00 ; '.'
0000000000002560         db  0x38 ; '8'
0000000000002561         db  0x9f ; '.'
0000000000002562         db  0x21 ; '!'
0000000000002563         db  0x00 ; '.'
0000000000002564         db  0x00 ; '.'
0000000000002565         db  0x00 ; '.'
0000000000002566         db  0x00 ; '.'
0000000000002567         db  0x00 ; '.'
0000000000002568         db  0x07 ; '.'
0000000000002569         db  0x00 ; '.'
000000000000256a         db  0x00 ; '.'
000000000000256b         db  0x00 ; '.'
000000000000256c         db  0x60 ; '`'
000000000000256d         db  0x00 ; '.'
000000000000256e         db  0x00 ; '.'
000000000000256f         db  0x00 ; '.'
0000000000002570         db  0x00 ; '.'
0000000000002571         db  0x00 ; '.'
0000000000002572         db  0x00 ; '.'
0000000000002573         db  0x00 ; '.'
0000000000002574         db  0x00 ; '.'
0000000000002575         db  0x00 ; '.'
0000000000002576         db  0x00 ; '.'
0000000000002577         db  0x00 ; '.'
0000000000002578         db  0x40 ; '@'
0000000000002579         db  0x9f ; '.'
000000000000257a         db  0x21 ; '!'
000000000000257b         db  0x00 ; '.'
000000000000257c         db  0x00 ; '.'
000000000000257d         db  0x00 ; '.'
000000000000257e         db  0x00 ; '.'
000000000000257f         db  0x00 ; '.'
0000000000002580         db  0x07 ; '.'
0000000000002581         db  0x00 ; '.'
0000000000002582         db  0x00 ; '.'
0000000000002583         db  0x00 ; '.'
0000000000002584         db  0x61 ; 'a'
0000000000002585         db  0x00 ; '.'
0000000000002586         db  0x00 ; '.'
0000000000002587         db  0x00 ; '.'
0000000000002588         db  0x00 ; '.'
0000000000002589         db  0x00 ; '.'
000000000000258a         db  0x00 ; '.'
000000000000258b         db  0x00 ; '.'
000000000000258c         db  0x00 ; '.'
000000000000258d         db  0x00 ; '.'
000000000000258e         db  0x00 ; '.'
000000000000258f         db  0x00 ; '.'
0000000000002590         db  0x48 ; 'H'
0000000000002591         db  0x9f ; '.'
0000000000002592         db  0x21 ; '!'
0000000000002593         db  0x00 ; '.'
0000000000002594         db  0x00 ; '.'
0000000000002595         db  0x00 ; '.'
0000000000002596         db  0x00 ; '.'
0000000000002597         db  0x00 ; '.'
0000000000002598         db  0x07 ; '.'
0000000000002599         db  0x00 ; '.'
000000000000259a         db  0x00 ; '.'
000000000000259b         db  0x00 ; '.'
000000000000259c         db  0x62 ; 'b'
000000000000259d         db  0x00 ; '.'
000000000000259e         db  0x00 ; '.'
000000000000259f         db  0x00 ; '.'
00000000000025a0         db  0x00 ; '.'
00000000000025a1         db  0x00 ; '.'
00000000000025a2         db  0x00 ; '.'
00000000000025a3         db  0x00 ; '.'
00000000000025a4         db  0x00 ; '.'
00000000000025a5         db  0x00 ; '.'
00000000000025a6         db  0x00 ; '.'
00000000000025a7         db  0x00 ; '.'
00000000000025a8         db  0x50 ; 'P'
00000000000025a9         db  0x9f ; '.'
00000000000025aa         db  0x21 ; '!'
00000000000025ab         db  0x00 ; '.'
00000000000025ac         db  0x00 ; '.'
00000000000025ad         db  0x00 ; '.'
00000000000025ae         db  0x00 ; '.'
00000000000025af         db  0x00 ; '.'
00000000000025b0         db  0x07 ; '.'
00000000000025b1         db  0x00 ; '.'
00000000000025b2         db  0x00 ; '.'
00000000000025b3         db  0x00 ; '.'
00000000000025b4         db  0x63 ; 'c'
00000000000025b5         db  0x00 ; '.'
00000000000025b6         db  0x00 ; '.'
00000000000025b7         db  0x00 ; '.'
00000000000025b8         db  0x00 ; '.'
00000000000025b9         db  0x00 ; '.'
00000000000025ba         db  0x00 ; '.'
00000000000025bb         db  0x00 ; '.'
00000000000025bc         db  0x00 ; '.'
00000000000025bd         db  0x00 ; '.'
00000000000025be         db  0x00 ; '.'
00000000000025bf         db  0x00 ; '.'
00000000000025c0         db  0x58 ; 'X'
00000000000025c1         db  0x9f ; '.'
00000000000025c2         db  0x21 ; '!'
00000000000025c3         db  0x00 ; '.'
00000000000025c4         db  0x00 ; '.'
00000000000025c5         db  0x00 ; '.'
00000000000025c6         db  0x00 ; '.'
00000000000025c7         db  0x00 ; '.'
00000000000025c8         db  0x07 ; '.'
00000000000025c9         db  0x00 ; '.'
00000000000025ca         db  0x00 ; '.'
00000000000025cb         db  0x00 ; '.'
00000000000025cc         db  0x64 ; 'd'
00000000000025cd         db  0x00 ; '.'
00000000000025ce         db  0x00 ; '.'
00000000000025cf         db  0x00 ; '.'
00000000000025d0         db  0x00 ; '.'
00000000000025d1         db  0x00 ; '.'
00000000000025d2         db  0x00 ; '.'
00000000000025d3         db  0x00 ; '.'
00000000000025d4         db  0x00 ; '.'
00000000000025d5         db  0x00 ; '.'
00000000000025d6         db  0x00 ; '.'
00000000000025d7         db  0x00 ; '.'
00000000000025d8         db  0x60 ; '`'
00000000000025d9         db  0x9f ; '.'
00000000000025da         db  0x21 ; '!'
00000000000025db         db  0x00 ; '.'
00000000000025dc         db  0x00 ; '.'
00000000000025dd         db  0x00 ; '.'
00000000000025de         db  0x00 ; '.'
00000000000025df         db  0x00 ; '.'
00000000000025e0         db  0x07 ; '.'
00000000000025e1         db  0x00 ; '.'
00000000000025e2         db  0x00 ; '.'
00000000000025e3         db  0x00 ; '.'
00000000000025e4         db  0x65 ; 'e'
00000000000025e5         db  0x00 ; '.'
00000000000025e6         db  0x00 ; '.'
00000000000025e7         db  0x00 ; '.'
00000000000025e8         db  0x00 ; '.'
00000000000025e9         db  0x00 ; '.'
00000000000025ea         db  0x00 ; '.'
00000000000025eb         db  0x00 ; '.'
00000000000025ec         db  0x00 ; '.'
00000000000025ed         db  0x00 ; '.'
00000000000025ee         db  0x00 ; '.'
00000000000025ef         db  0x00 ; '.'
00000000000025f0         db  0x68 ; 'h'
00000000000025f1         db  0x9f ; '.'
00000000000025f2         db  0x21 ; '!'
00000000000025f3         db  0x00 ; '.'
00000000000025f4         db  0x00 ; '.'
00000000000025f5         db  0x00 ; '.'
00000000000025f6         db  0x00 ; '.'
00000000000025f7         db  0x00 ; '.'
00000000000025f8         db  0x07 ; '.'
00000000000025f9         db  0x00 ; '.'
00000000000025fa         db  0x00 ; '.'
00000000000025fb         db  0x00 ; '.'
00000000000025fc         db  0x66 ; 'f'
00000000000025fd         db  0x00 ; '.'
00000000000025fe         db  0x00 ; '.'
00000000000025ff         db  0x00 ; '.'
0000000000002600         db  0x00 ; '.'
0000000000002601         db  0x00 ; '.'
0000000000002602         db  0x00 ; '.'
0000000000002603         db  0x00 ; '.'
0000000000002604         db  0x00 ; '.'
0000000000002605         db  0x00 ; '.'
0000000000002606         db  0x00 ; '.'
0000000000002607         db  0x00 ; '.'
0000000000002608         db  0x70 ; 'p'
0000000000002609         db  0x9f ; '.'
000000000000260a         db  0x21 ; '!'
000000000000260b         db  0x00 ; '.'
000000000000260c         db  0x00 ; '.'
000000000000260d         db  0x00 ; '.'
000000000000260e         db  0x00 ; '.'
000000000000260f         db  0x00 ; '.'
0000000000002610         db  0x07 ; '.'
0000000000002611         db  0x00 ; '.'
0000000000002612         db  0x00 ; '.'
0000000000002613         db  0x00 ; '.'
0000000000002614         db  0x67 ; 'g'
0000000000002615         db  0x00 ; '.'
0000000000002616         db  0x00 ; '.'
0000000000002617         db  0x00 ; '.'
0000000000002618         db  0x00 ; '.'
0000000000002619         db  0x00 ; '.'
000000000000261a         db  0x00 ; '.'
000000000000261b         db  0x00 ; '.'
000000000000261c         db  0x00 ; '.'
000000000000261d         db  0x00 ; '.'
000000000000261e         db  0x00 ; '.'
000000000000261f         db  0x00 ; '.'
0000000000002620         db  0x78 ; 'x'
0000000000002621         db  0x9f ; '.'
0000000000002622         db  0x21 ; '!'
0000000000002623         db  0x00 ; '.'
0000000000002624         db  0x00 ; '.'
0000000000002625         db  0x00 ; '.'
0000000000002626         db  0x00 ; '.'
0000000000002627         db  0x00 ; '.'
0000000000002628         db  0x07 ; '.'
0000000000002629         db  0x00 ; '.'
000000000000262a         db  0x00 ; '.'
000000000000262b         db  0x00 ; '.'
000000000000262c         db  0x68 ; 'h'
000000000000262d         db  0x00 ; '.'
000000000000262e         db  0x00 ; '.'
000000000000262f         db  0x00 ; '.'
0000000000002630         db  0x00 ; '.'
0000000000002631         db  0x00 ; '.'
0000000000002632         db  0x00 ; '.'
0000000000002633         db  0x00 ; '.'
0000000000002634         db  0x00 ; '.'
0000000000002635         db  0x00 ; '.'
0000000000002636         db  0x00 ; '.'
0000000000002637         db  0x00 ; '.'
0000000000002638         db  0x80 ; '.'
0000000000002639         db  0x9f ; '.'
000000000000263a         db  0x21 ; '!'
000000000000263b         db  0x00 ; '.'
000000000000263c         db  0x00 ; '.'
000000000000263d         db  0x00 ; '.'
000000000000263e         db  0x00 ; '.'
000000000000263f         db  0x00 ; '.'
0000000000002640         db  0x07 ; '.'
0000000000002641         db  0x00 ; '.'
0000000000002642         db  0x00 ; '.'
0000000000002643         db  0x00 ; '.'
0000000000002644         db  0x69 ; 'i'
0000000000002645         db  0x00 ; '.'
0000000000002646         db  0x00 ; '.'
0000000000002647         db  0x00 ; '.'
0000000000002648         db  0x00 ; '.'
0000000000002649         db  0x00 ; '.'
000000000000264a         db  0x00 ; '.'
000000000000264b         db  0x00 ; '.'
000000000000264c         db  0x00 ; '.'
000000000000264d         db  0x00 ; '.'
000000000000264e         db  0x00 ; '.'
000000000000264f         db  0x00 ; '.'
0000000000002650         db  0x88 ; '.'
0000000000002651         db  0x9f ; '.'
0000000000002652         db  0x21 ; '!'
0000000000002653         db  0x00 ; '.'
0000000000002654         db  0x00 ; '.'
0000000000002655         db  0x00 ; '.'
0000000000002656         db  0x00 ; '.'
0000000000002657         db  0x00 ; '.'
0000000000002658         db  0x07 ; '.'
0000000000002659         db  0x00 ; '.'
000000000000265a         db  0x00 ; '.'
000000000000265b         db  0x00 ; '.'
000000000000265c         db  0x6a ; 'j'
000000000000265d         db  0x00 ; '.'
000000000000265e         db  0x00 ; '.'
000000000000265f         db  0x00 ; '.'
0000000000002660         db  0x00 ; '.'
0000000000002661         db  0x00 ; '.'
0000000000002662         db  0x00 ; '.'
0000000000002663         db  0x00 ; '.'
0000000000002664         db  0x00 ; '.'
0000000000002665         db  0x00 ; '.'
0000000000002666         db  0x00 ; '.'
0000000000002667         db  0x00 ; '.'
0000000000002668         db  0x90 ; '.'
0000000000002669         db  0x9f ; '.'
000000000000266a         db  0x21 ; '!'
000000000000266b         db  0x00 ; '.'
000000000000266c         db  0x00 ; '.'
000000000000266d         db  0x00 ; '.'
000000000000266e         db  0x00 ; '.'
000000000000266f         db  0x00 ; '.'
0000000000002670         db  0x07 ; '.'
0000000000002671         db  0x00 ; '.'
0000000000002672         db  0x00 ; '.'
0000000000002673         db  0x00 ; '.'
0000000000002674         db  0x6b ; 'k'
0000000000002675         db  0x00 ; '.'
0000000000002676         db  0x00 ; '.'
0000000000002677         db  0x00 ; '.'
0000000000002678         db  0x00 ; '.'
0000000000002679         db  0x00 ; '.'
000000000000267a         db  0x00 ; '.'
000000000000267b         db  0x00 ; '.'
000000000000267c         db  0x00 ; '.'
000000000000267d         db  0x00 ; '.'
000000000000267e         db  0x00 ; '.'
000000000000267f         db  0x00 ; '.'
0000000000002680         db  0x98 ; '.'
0000000000002681         db  0x9f ; '.'
0000000000002682         db  0x21 ; '!'
0000000000002683         db  0x00 ; '.'
0000000000002684         db  0x00 ; '.'
0000000000002685         db  0x00 ; '.'
0000000000002686         db  0x00 ; '.'
0000000000002687         db  0x00 ; '.'
0000000000002688         db  0x07 ; '.'
0000000000002689         db  0x00 ; '.'
000000000000268a         db  0x00 ; '.'
000000000000268b         db  0x00 ; '.'
000000000000268c         db  0x6c ; 'l'
000000000000268d         db  0x00 ; '.'
000000000000268e         db  0x00 ; '.'
000000000000268f         db  0x00 ; '.'
0000000000002690         db  0x00 ; '.'
0000000000002691         db  0x00 ; '.'
0000000000002692         db  0x00 ; '.'
0000000000002693         db  0x00 ; '.'
0000000000002694         db  0x00 ; '.'
0000000000002695         db  0x00 ; '.'
0000000000002696         db  0x00 ; '.'
0000000000002697         db  0x00 ; '.'
0000000000002698         db  0xa0 ; '.'
0000000000002699         db  0x9f ; '.'
000000000000269a         db  0x21 ; '!'
000000000000269b         db  0x00 ; '.'
000000000000269c         db  0x00 ; '.'
000000000000269d         db  0x00 ; '.'
000000000000269e         db  0x00 ; '.'
000000000000269f         db  0x00 ; '.'
00000000000026a0         db  0x07 ; '.'
00000000000026a1         db  0x00 ; '.'
00000000000026a2         db  0x00 ; '.'
00000000000026a3         db  0x00 ; '.'
00000000000026a4         db  0x6e ; 'n'
00000000000026a5         db  0x00 ; '.'
00000000000026a6         db  0x00 ; '.'
00000000000026a7         db  0x00 ; '.'
00000000000026a8         db  0x00 ; '.'
00000000000026a9         db  0x00 ; '.'
00000000000026aa         db  0x00 ; '.'
00000000000026ab         db  0x00 ; '.'
00000000000026ac         db  0x00 ; '.'
00000000000026ad         db  0x00 ; '.'
00000000000026ae         db  0x00 ; '.'
00000000000026af         db  0x00 ; '.'
00000000000026b0         db  0xa8 ; '.'
00000000000026b1         db  0x9f ; '.'
00000000000026b2         db  0x21 ; '!'
00000000000026b3         db  0x00 ; '.'
00000000000026b4         db  0x00 ; '.'
00000000000026b5         db  0x00 ; '.'
00000000000026b6         db  0x00 ; '.'
00000000000026b7         db  0x00 ; '.'
00000000000026b8         db  0x07 ; '.'
00000000000026b9         db  0x00 ; '.'
00000000000026ba         db  0x00 ; '.'
00000000000026bb         db  0x00 ; '.'
00000000000026bc         db  0x6f ; 'o'
00000000000026bd         db  0x00 ; '.'
00000000000026be         db  0x00 ; '.'
00000000000026bf         db  0x00 ; '.'
00000000000026c0         db  0x00 ; '.'
00000000000026c1         db  0x00 ; '.'
00000000000026c2         db  0x00 ; '.'
00000000000026c3         db  0x00 ; '.'
00000000000026c4         db  0x00 ; '.'
00000000000026c5         db  0x00 ; '.'
00000000000026c6         db  0x00 ; '.'
00000000000026c7         db  0x00 ; '.'
00000000000026c8         db  0xb0 ; '.'
00000000000026c9         db  0x9f ; '.'
00000000000026ca         db  0x21 ; '!'
00000000000026cb         db  0x00 ; '.'
00000000000026cc         db  0x00 ; '.'
00000000000026cd         db  0x00 ; '.'
00000000000026ce         db  0x00 ; '.'
00000000000026cf         db  0x00 ; '.'
00000000000026d0         db  0x07 ; '.'
00000000000026d1         db  0x00 ; '.'
00000000000026d2         db  0x00 ; '.'
00000000000026d3         db  0x00 ; '.'
00000000000026d4         db  0x70 ; 'p'
00000000000026d5         db  0x00 ; '.'
00000000000026d6         db  0x00 ; '.'
00000000000026d7         db  0x00 ; '.'
00000000000026d8         db  0x00 ; '.'
00000000000026d9         db  0x00 ; '.'
00000000000026da         db  0x00 ; '.'
00000000000026db         db  0x00 ; '.'
00000000000026dc         db  0x00 ; '.'
00000000000026dd         db  0x00 ; '.'
00000000000026de         db  0x00 ; '.'
00000000000026df         db  0x00 ; '.'
00000000000026e0         db  0xb8 ; '.'
00000000000026e1         db  0x9f ; '.'
00000000000026e2         db  0x21 ; '!'
00000000000026e3         db  0x00 ; '.'
00000000000026e4         db  0x00 ; '.'
00000000000026e5         db  0x00 ; '.'
00000000000026e6         db  0x00 ; '.'
00000000000026e7         db  0x00 ; '.'
00000000000026e8         db  0x07 ; '.'
00000000000026e9         db  0x00 ; '.'
00000000000026ea         db  0x00 ; '.'
00000000000026eb         db  0x00 ; '.'
00000000000026ec         db  0x72 ; 'r'
00000000000026ed         db  0x00 ; '.'
00000000000026ee         db  0x00 ; '.'
00000000000026ef         db  0x00 ; '.'
00000000000026f0         db  0x00 ; '.'
00000000000026f1         db  0x00 ; '.'
00000000000026f2         db  0x00 ; '.'
00000000000026f3         db  0x00 ; '.'
00000000000026f4         db  0x00 ; '.'
00000000000026f5         db  0x00 ; '.'
00000000000026f6         db  0x00 ; '.'
00000000000026f7         db  0x00 ; '.'
00000000000026f8         db  0xc0 ; '.'
00000000000026f9         db  0x9f ; '.'
00000000000026fa         db  0x21 ; '!'
00000000000026fb         db  0x00 ; '.'
00000000000026fc         db  0x00 ; '.'
00000000000026fd         db  0x00 ; '.'
00000000000026fe         db  0x00 ; '.'
00000000000026ff         db  0x00 ; '.'
0000000000002700         db  0x07 ; '.'
0000000000002701         db  0x00 ; '.'
0000000000002702         db  0x00 ; '.'
0000000000002703         db  0x00 ; '.'
0000000000002704         db  0x73 ; 's'
0000000000002705         db  0x00 ; '.'
0000000000002706         db  0x00 ; '.'
0000000000002707         db  0x00 ; '.'
0000000000002708         db  0x00 ; '.'
0000000000002709         db  0x00 ; '.'
000000000000270a         db  0x00 ; '.'
000000000000270b         db  0x00 ; '.'
000000000000270c         db  0x00 ; '.'
000000000000270d         db  0x00 ; '.'
000000000000270e         db  0x00 ; '.'
000000000000270f         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x2710; 0x2727[ (23 bytes)
        ; File offset : [10000; 10023[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000002710         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
0000000000002714         mov        rax, qword [qword_219fe0]                   ; qword_219fe0
000000000000271b         test       rax, rax
000000000000271e         je         loc_2722

0000000000002720         call       rax

                     loc_2722:
0000000000002722         add        rsp, 0x8                                    ; CODE XREF=_init+14
0000000000002726         ret
                        ; endp
0000000000002727         db  0x00 ; '.'
0000000000002728         db  0x00 ; '.'
0000000000002729         db  0x00 ; '.'
000000000000272a         db  0x00 ; '.'
000000000000272b         db  0x00 ; '.'
000000000000272c         db  0x00 ; '.'
000000000000272d         db  0x00 ; '.'
000000000000272e         db  0x00 ; '.'
000000000000272f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x2730; 0x2e10[ (1760 bytes)
        ; File offset : [10032; 11792[ (1760 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_2730:
0000000000002730         push       qword [qword_219c50]                        ; Begin of unwind block (FDE at 0x1641c), qword_219c50, CODE XREF=sub_2746+5
0000000000002736         jmp        qword [qword_219c50+8]                      ; 0x219c58
                        ; endp
000000000000273c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getenv:        // getenv
0000000000002740         jmp        qword [getenv@GOT]                          ; getenv, getenv@GOT, CODE XREF=main+327, set_simple_backup_suffix+55, xget_version+21
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2746:
0000000000002746         push       0x0
000000000000274b         jmp        loc_2730


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_utimensat:        // utimensat
0000000000002750         jmp        qword [utimensat@GOT]                       ; utimensat, utimensat@GOT, CODE XREF=utimecmpat+1273, utimecmpat+1871, lutimensat+5, fdutimens+957, lutimens+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2756:
0000000000002756         push       0x1
000000000000275b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000002760         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=sub_38e0+61, safe_hasher+29, hash_get_first+60, hash_rehash+569, hash_insert_if_absent+477, set_program_name+154, sub_d940+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2766:
0000000000002766         push       0x2
000000000000276b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000002770         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=restore_default_fscreatecon_or_die+1, main+2003, main+2111, target_directory_operand+69, make_dir_parents_private+480, make_dir_parents_private+1370, re_protect+289, re_protect+497, punch_hole+32, create_hole+122, sparse_copy+191
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2776:
0000000000002776         push       0x3
000000000000277b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_unlink:        // unlink
0000000000002780         jmp        qword [unlink@GOT]                          ; unlink, unlink@GOT, CODE XREF=copy_internal+2497, copy_internal+9194, copy_internal+13127
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2786:
0000000000002786         push       0x4
000000000000278b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000002790         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+1148, usage+1341, argmatch+162
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2796:
0000000000002796         push       0x5
000000000000279b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000027a0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdin+174, close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_27a6:
00000000000027a6         push       0x6
00000000000027ab         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcpy:        // strcpy
00000000000027b0         jmp        qword [strcpy@GOT]                          ; strcpy, strcpy@GOT, CODE XREF=copy_internal+10413
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_27b6:
00000000000027b6         push       0x7
00000000000027bb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
00000000000027c0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_27c6:
00000000000027c6         push       0x8
00000000000027cb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___read_chk:        // __read_chk
00000000000027d0         jmp        qword [__read_chk@GOT]                      ; __read_chk, __read_chk@GOT, CODE XREF=randread_new+280
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_27d6:
00000000000027d6         push       0x9
00000000000027db         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mkdir:        // mkdir
00000000000027e0         jmp        qword [mkdir@GOT]                           ; mkdir, mkdir@GOT, CODE XREF=make_dir_parents_private+751, copy_internal+5302, try_dir+5
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_27e6:
00000000000027e6         push       0xa
00000000000027eb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_unlinkat:        // unlinkat
00000000000027f0         jmp        qword [unlinkat@GOT]                        ; unlinkat, unlinkat@GOT, CODE XREF=force_linkat+322, force_symlinkat+305
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_27f6:
00000000000027f6         push       0xb
00000000000027fb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qsort:        // qsort
0000000000002800         jmp        qword [qsort@GOT]                           ; qsort, qsort@GOT, CODE XREF=streamsavedir+399
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2806:
0000000000002806         push       0xc
000000000000280b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_readlink:        // readlink
0000000000002810         jmp        qword [readlink@GOT]                        ; readlink, readlink@GOT, CODE XREF=areadlink_with_size+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2816:
0000000000002816         push       0xd
000000000000281b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fcntl:        // fcntl
0000000000002820         jmp        qword [fcntl@GOT]                           ; fcntl, fcntl@GOT, CODE XREF=rpl_fcntl+128, rpl_fcntl+212, rpl_fcntl+320, rpl_fcntl+407, rpl_fcntl+423, rpl_fcntl+460, rpl_fcntl+483, rpl_fcntl+559, rpl_fcntl+606
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2826:
0000000000002826         push       0xe
000000000000282b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_clock_gettime:        // clock_gettime
0000000000002830         jmp        qword [clock_gettime@GOT]                   ; clock_gettime, clock_gettime@GOT, CODE XREF=gettime+5, current_timespec+25
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2836:
0000000000002836         push       0xf
000000000000283b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_write:        // write
0000000000002840         jmp        qword [write@GOT]                           ; write, write@GOT, CODE XREF=safe_write+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2846:
0000000000002846         push       0x10
000000000000284b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpid:        // getpid
0000000000002850         jmp        qword [getpid@GOT]                          ; getpid, getpid@GOT, CODE XREF=randread_new+407, randread_new+706
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2856:
0000000000002856         push       0x11
000000000000285b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fread_unlocked:        // fread_unlocked
0000000000002860         jmp        qword [fread_unlocked@GOT]                  ; fread_unlocked, fread_unlocked@GOT, CODE XREF=randread+97
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2866:
0000000000002866         push       0x12
000000000000286b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000002870         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+118
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2876:
0000000000002876         push       0x13
000000000000287b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_pathconf:        // pathconf
0000000000002880         jmp        qword [pathconf@GOT]                        ; pathconf, pathconf@GOT, CODE XREF=backupfile_internal+1455
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2886:
0000000000002886         push       0x14
000000000000288b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000002890         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2896:
0000000000002896         push       0x15
000000000000289b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_opendir:        // opendir
00000000000028a0         jmp        qword [opendir@GOT]                         ; opendir, opendir@GOT, CODE XREF=opendir_safer+8
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_28a6:
00000000000028a6         push       0x16
00000000000028ab         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
00000000000028b0         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+106
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_28b6:
00000000000028b6         push       0x17
00000000000028bb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_stpcpy:        // stpcpy
00000000000028c0         jmp        qword [stpcpy@GOT]                          ; stpcpy, stpcpy@GOT, CODE XREF=streamsavedir+440
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_28c6:
00000000000028c6         push       0x18
00000000000028cb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_rmdir:        // rmdir
00000000000028d0         jmp        qword [rmdir@GOT]                           ; rmdir, rmdir@GOT, CODE XREF=copy_internal+6688
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_28d6:
00000000000028d6         push       0x19
00000000000028db         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
00000000000028e0         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=restore_default_fscreatecon_or_die+29, main+1210, main+1291, main+1386, main+1728, main+1854, main+1897, main+1940, main+1981, main+2044, main+2103
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_28e6:
00000000000028e6         push       0x1a
00000000000028eb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
00000000000028f0         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_28f6:
00000000000028f6         push       0x1b
00000000000028fb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000002900         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=make_dir_parents_private+65, re_protect+44, do_copy+432, do_copy+666, copy_internal+3437, copy_internal+3471, copy_internal+3489, copy_internal+3591, copy_internal+7776, argmatch+33, argmatch+174
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2906:
0000000000002906         push       0x1c
000000000000290b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___lxstat:        // __lxstat
0000000000002910         jmp        qword [__lxstat@GOT]                        ; __lxstat, __lxstat@GOT, CODE XREF=make_dir_parents_private+816, copy_internal+1496, copy_internal+2256, copy_internal+5169, copy_internal+7261, copy_internal+7315, copy_internal+9327, copy_internal+14186, copy_internal+14319, try_nocreate+38, lutimens+338
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2916:
0000000000002916         push       0x1d
000000000000291b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_openat:        // openat
0000000000002920         jmp        qword [openat@GOT]                          ; openat, openat@GOT, CODE XREF=openat_safer+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2926:
0000000000002926         push       0x1e
000000000000292b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000002930         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+1962, make_dir_parents_private+1467, re_protect+597, do_copy+1239, overwrite_ok.isra.12+326, copy_internal+13604, copy+228, forget_created+101, src_to_dest_lookup+84, extent_scan_read+776, force_linkat+348
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2936:
0000000000002936         push       0x1f
000000000000293b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getuid:        // getuid
0000000000002940         jmp        qword [getuid@GOT]                          ; getuid, getuid@GOT, CODE XREF=randread_new+452
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2946:
0000000000002946         push       0x20
000000000000294b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000002950         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+443
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2956:
0000000000002956         push       0x21
000000000000295b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000002960         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2966:
0000000000002966         push       0x22
000000000000296b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000002970         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=decode_preserve_arg+91, make_dir_parents_private+261
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2976:
0000000000002976         push       0x23
000000000000297b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstatat:        // __fxstatat
0000000000002980         jmp        qword [__fxstatat@GOT]                      ; __fxstatat, __fxstatat@GOT, CODE XREF=copy_internal+483, renameatu+316, renameatu+398, renameatu+488, same_nameat.part.0+71, same_nameat.part.0+127, utimecmpat+1347
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2986:
0000000000002986         push       0x24
000000000000298b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000002990         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=emit_verbose+177, argmatch_valid+283
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2996:
0000000000002996         push       0x25
000000000000299b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
00000000000029a0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29a6:
00000000000029a6         push       0x26
00000000000029ab         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_ftruncate:        // ftruncate
00000000000029b0         jmp        qword [ftruncate@GOT]                       ; ftruncate, ftruncate@GOT, CODE XREF=copy_internal+15213, copy_internal+15426
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29b6:
00000000000029b6         push       0x27
00000000000029bb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000029c0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=create_hole+29, copy_internal+12843, j_j_fseeko+49, rpl_fclose+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29c6:
00000000000029c6         push       0x28
00000000000029cb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_gettimeofday:        // gettimeofday
00000000000029d0         jmp        qword [gettimeofday@GOT]                    ; gettimeofday, gettimeofday@GOT, CODE XREF=randread_new+392, randread_new+632
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29d6:
00000000000029d6         push       0x29
00000000000029db         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
00000000000029e0         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=copy+192, copy+223, copy+259, copy+290, copy+321, copy+352, extent_scan_read+516, extent_scan_read+756, gen_tempname_len+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29e6:
00000000000029e6         push       0x2a
00000000000029eb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
00000000000029f0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29f6:
00000000000029f6         push       0x2b
00000000000029fb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_geteuid:        // geteuid
0000000000002a00         jmp        qword [geteuid@GOT]                         ; geteuid, geteuid@GOT, CODE XREF=cp_options_default+27, copy_internal+16478, can_write_any_file+28
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a06:
0000000000002a06         push       0x2c
0000000000002a0b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_ioctl:        // ioctl
0000000000002a10         jmp        qword [ioctl@GOT]                           ; ioctl, ioctl@GOT, CODE XREF=copy_internal+15703, extent_scan_read+121
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a16:
0000000000002a16         push       0x2d
0000000000002a1b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_canonicalize_file_name:        // canonicalize_file_name
0000000000002a20         jmp        qword [canonicalize_file_name@GOT]          ; canonicalize_file_name, canonicalize_file_name@GOT, CODE XREF=copy_internal+5911
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a26:
0000000000002a26         push       0x2e
0000000000002a2b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000002a30         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=copy_internal+8549, copy_internal+12962, opendirat+85, fd_safer+38, opendir_safer+143, randread_new+291, rpl_fcntl+510, fopen_safer+106
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a36:
0000000000002a36         push       0x2f
0000000000002a3b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_rewinddir:        // rewinddir
0000000000002a40         jmp        qword [rewinddir@GOT]                       ; rewinddir, rewinddir@GOT, CODE XREF=backupfile_internal+257
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a46:
0000000000002a46         push       0x30
0000000000002a4b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strspn:        // strspn
0000000000002a50         jmp        qword [strspn@GOT]                          ; strspn, strspn@GOT, CODE XREF=try_tempname_len+104
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a56:
0000000000002a56         push       0x31
0000000000002a5b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_closedir:        // closedir
0000000000002a60         jmp        qword [closedir@GOT]                        ; closedir, closedir@GOT, CODE XREF=backupfile_internal+887, backupfile_internal+1498, savedir+35, opendir_safer+95
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a66:
0000000000002a66         push       0x32
0000000000002a6b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
0000000000002a70         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a76:
0000000000002a76         push       0x33
0000000000002a7b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_read:        // read
0000000000002a80         jmp        qword [read@GOT]                            ; read, read@GOT, CODE XREF=sparse_copy+176
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a86:
0000000000002a86         push       0x34
0000000000002a8b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000002a90         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=sparse_copy+418, copy_internal+10290, argmatch+111, argmatch_valid+150, argmatch_to_argument+56, backupfile_internal+355, backupfile_internal+489, quotearg_buffer_restyled+410, same_nameat+105
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a96:
0000000000002a96         push       0x35
0000000000002a9b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fallocate:        // fallocate
0000000000002aa0         jmp        qword [fallocate@GOT]                       ; fallocate, fallocate@GOT, CODE XREF=punch_hole+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2aa6:
0000000000002aa6         push       0x36
0000000000002aab         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000002ab0         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+163, usage+200, usage+237, usage+274, usage+311, usage+348, usage+385, usage+422, usage+459, usage+496, usage+533
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ab6:
0000000000002ab6         push       0x37
0000000000002abb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_utimes:        // utimes
0000000000002ac0         jmp        qword [utimes@GOT]                          ; utimes, utimes@GOT, CODE XREF=fdutimens+848
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ac6:
0000000000002ac6         push       0x38
0000000000002acb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000002ad0         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=write_zeros+116, hash_initialize+177, hash_rehash+198, xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ad6:
0000000000002ad6         push       0x39
0000000000002adb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___getdelim:        // __getdelim
0000000000002ae0         jmp        qword [__getdelim@GOT]                      ; __getdelim, __getdelim@GOT, CODE XREF=yesno+63
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ae6:
0000000000002ae6         push       0x3a
0000000000002aeb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000002af0         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=do_copy+187, copy_internal+10318, copy_internal+14580, triple_compare_ino_str+36, direntry_cmp_name+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2af6:
0000000000002af6         push       0x3b
0000000000002afb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dirfd:        // dirfd
0000000000002b00         jmp        qword [dirfd@GOT]                           ; dirfd, dirfd@GOT, CODE XREF=opendir_safer+24
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b06:
0000000000002b06         push       0x3c
0000000000002b0b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fpathconf:        // fpathconf
0000000000002b10         jmp        qword [fpathconf@GOT]                       ; fpathconf, fpathconf@GOT, CODE XREF=backupfile_internal+1123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b16:
0000000000002b16         push       0x3d
0000000000002b1b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_rpmatch:        // rpmatch
0000000000002b20         jmp        qword [rpmatch@GOT]                         ; rpmatch, rpmatch@GOT, CODE XREF=yesno+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b26:
0000000000002b26         push       0x3e
0000000000002b2b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_syscall:        // syscall
0000000000002b30         jmp        qword [syscall@GOT]                         ; syscall, syscall@GOT, CODE XREF=renameatu+70
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b36:
0000000000002b36         push       0x3f
0000000000002b3b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mkfifo:        // mkfifo
0000000000002b40         jmp        qword [mkfifo@GOT]                          ; mkfifo, mkfifo@GOT, CODE XREF=copy_internal+10701
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b46:
0000000000002b46         push       0x40
0000000000002b4b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_umask:        // umask
0000000000002b50         jmp        qword [umask@GOT]                           ; umask, umask@GOT, CODE XREF=cached_umask+18, cached_umask+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b56:
0000000000002b56         push       0x41
0000000000002b5b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000002b60         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=make_dir_parents_private+97, make_dir_parents_private+145, re_protect+76, do_copy+464, do_copy+698, copy_internal+3629, backupfile_internal+214, backupfile_internal+673, backupfile_internal+981, backupfile_internal+1020, mdir_name+53
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b66:
0000000000002b66         push       0x42
0000000000002b6b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xmknod:        // __xmknod
0000000000002b70         jmp        qword [__xmknod@GOT]                        ; __xmknod, __xmknod@GOT, CODE XREF=copy_internal+9695, copy_internal+10664
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b76:
0000000000002b76         push       0x43
0000000000002b7b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000002b80         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, j_j_fseeko+36, rpl_fclose+7, rpl_fclose+75, fopen_safer+23
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b86:
0000000000002b86         push       0x44
0000000000002b8b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getgid:        // getgid
0000000000002b90         jmp        qword [getgid@GOT]                          ; getgid, getgid@GOT, CODE XREF=randread_new+508
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b96:
0000000000002b96         push       0x45
0000000000002b9b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xstat:        // __xstat
0000000000002ba0         jmp        qword [__xstat@GOT]                         ; __xstat, __xstat@GOT, CODE XREF=main+1132, target_directory_operand+31, make_dir_parents_private+194, make_dir_parents_private+296, make_dir_parents_private+467, copy_internal+215, copy_internal+8679, copy_internal+8707, copy_internal+10433, copy_internal+13642, copy_internal+13709
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ba6:
0000000000002ba6         push       0x46
0000000000002bab         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_readdir:        // readdir
0000000000002bb0         jmp        qword [readdir@GOT]                         ; readdir, readdir@GOT, CODE XREF=backupfile_internal+307, backupfile_internal+730, streamsavedir+110
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2bb6:
0000000000002bb6         push       0x47
0000000000002bbb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000002bc0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=samedir_template+34, areadlink_with_size+67, areadlink_with_size+126, backupfile_internal+154, mdir_name+31, mfile_name_concat+151, transfer_entries+293, hash_initialize+62, hash_insert_if_absent+517, utimecmpat+409, xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2bc6:
0000000000002bc6         push       0x48
0000000000002bcb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000002bd0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2bd6:
0000000000002bd6         push       0x49
0000000000002bdb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000002be0         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2be6:
0000000000002be6         push       0x4a
0000000000002beb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstat:        // __fxstat
0000000000002bf0         jmp        qword [__fxstat@GOT]                        ; __fxstat, __fxstat@GOT, CODE XREF=copy_internal+8417, copy_internal+11970, fdutimens+387, fdutimens+570, fdutimens+660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2bf6:
0000000000002bf6         push       0x4b
0000000000002bfb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lchown:        // lchown
0000000000002c00         jmp        qword [lchown@GOT]                          ; lchown, lchown@GOT, CODE XREF=re_protect+329, re_protect+372, set_owner+179, set_owner+275, copy_internal+14237
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c06:
0000000000002c06         push       0x4c
0000000000002c0b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000002c10         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fflush+9, rpl_fclose+19
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c16:
0000000000002c16         push       0x4d
0000000000002c1b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000002c20         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=backupfile_internal+609, xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c26:
0000000000002c26         push       0x4e
0000000000002c2b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopen:        // fdopen
0000000000002c30         jmp        qword [fdopen@GOT]                          ; fdopen, fdopen@GOT, CODE XREF=fopen_safer+80
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c36:
0000000000002c36         push       0x4f
0000000000002c3b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_linkat:        // linkat
0000000000002c40         jmp        qword [linkat@GOT]                          ; linkat, linkat@GOT, CODE XREF=try_link+19, force_linkat+247
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c46:
0000000000002c46         push       0x50
0000000000002c4b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000002c50         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+87, usage+1123, usage+1316, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c56:
0000000000002c56         push       0x51
0000000000002c5b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000002c60         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=make_dir_parents_private+796, usage+126, usage+1111, usage+1204, usage+1265, usage+1304, usage+1407, emit_verbose+66, emit_verbose+124, create_hard_link+144, copy_internal+4139
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c66:
0000000000002c66         push       0x52
0000000000002c6b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fchmod:        // fchmod
0000000000002c70         jmp        qword [fchmod@GOT]                          ; fchmod, fchmod@GOT, CODE XREF=fchmod_or_lchmod+9, chmod_or_fchmod+11
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c76:
0000000000002c76         push       0x53
0000000000002c7b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setvbuf:        // setvbuf
0000000000002c80         jmp        qword [setvbuf@GOT]                         ; setvbuf, setvbuf@GOT, CODE XREF=randread_new+130
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c86:
0000000000002c86         push       0x54
0000000000002c8b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_chmod:        // chmod
0000000000002c90         jmp        qword [chmod@GOT]                           ; chmod, chmod@GOT, CODE XREF=fchmod_or_lchmod+17, make_dir_parents_private+909, re_protect+446, copy_internal+1949, copy_internal+7373, j_j_chmod
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c96:
0000000000002c96         push       0x55
0000000000002c9b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mempcpy:        // mempcpy
0000000000002ca0         jmp        qword [mempcpy@GOT]                         ; mempcpy, mempcpy@GOT, CODE XREF=copy_internal+10402, samedir_template+58, mfile_name_concat+173, mfile_name_concat+206
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ca6:
0000000000002ca6         push       0x56
0000000000002cab         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000002cb0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=restore_default_fscreatecon_or_die+46, main+1230, main+1305, main+1745, main+1871, main+1911, main+1957, main+1998, main+2064, main+2131, target_directory_operand+191
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2cb6:
0000000000002cb6         push       0x57
0000000000002cbb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___explicit_bzero_chk:        // __explicit_bzero_chk
0000000000002cc0         jmp        qword [__explicit_bzero_chk@GOT]            ; __explicit_bzero_chk, __explicit_bzero_chk@GOT, CODE XREF=randint_free+16, randint_all_free+50, randread_free+24
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2cc6:
0000000000002cc6         push       0x58
0000000000002ccb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
0000000000002cd0         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=open_safer+35, try_file+17, randread_new+234
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2cd6:
0000000000002cd6         push       0x59
0000000000002cdb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000002ce0         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ce6:
0000000000002ce6         push       0x5a
0000000000002ceb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fchown:        // fchown
0000000000002cf0         jmp        qword [fchown@GOT]                          ; fchown, fchown@GOT, CODE XREF=set_owner+98, set_owner+498
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2cf6:
0000000000002cf6         push       0x5b
0000000000002cfb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
0000000000002d00         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=fopen_safer+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d06:
0000000000002d06         push       0x5c
0000000000002d0b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_rename:        // rename
0000000000002d10         jmp        qword [rename@GOT]                          ; rename, rename@GOT, CODE XREF=copy_internal+2413, copy_internal+4034
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d16:
0000000000002d16         push       0x5d
0000000000002d1b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopendir:        // fdopendir
0000000000002d20         jmp        qword [fdopendir@GOT]                       ; fdopendir, fdopendir@GOT, CODE XREF=opendirat+34, opendir_safer+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d26:
0000000000002d26         push       0x5e
0000000000002d2b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_futimens:        // futimens
0000000000002d30         jmp        qword [futimens@GOT]                        ; futimens, futimens@GOT, CODE XREF=fdutimens+141
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d36:
0000000000002d36         push       0x5f
0000000000002d3b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_euidaccess:        // euidaccess
0000000000002d40         jmp        qword [euidaccess@GOT]                      ; euidaccess, euidaccess@GOT, CODE XREF=writable_destination+56
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d46:
0000000000002d46         push       0x60
0000000000002d4b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000002d50         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d56:
0000000000002d56         push       0x61
0000000000002d5b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_renameat:        // renameat
0000000000002d60         jmp        qword [renameat@GOT]                        ; renameat, renameat@GOT, CODE XREF=force_linkat+290, force_symlinkat+266, renameatu+240
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d66:
0000000000002d66         push       0x62
0000000000002d6b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpagesize:        // getpagesize
0000000000002d70         jmp        qword [getpagesize@GOT]                     ; getpagesize, getpagesize@GOT, CODE XREF=copy_internal+12012
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d76:
0000000000002d76         push       0x63
0000000000002d7b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getppid:        // getppid
0000000000002d80         jmp        qword [getppid@GOT]                         ; getppid, getppid@GOT, CODE XREF=randread_new+419, randread_new+759
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d86:
0000000000002d86         push       0x64
0000000000002d8b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000002d90         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+854, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d96:
0000000000002d96         push       0x65
0000000000002d9b         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000002da0         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2da6:
0000000000002da6         push       0x66
0000000000002dab         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000002db0         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, overwrite_ok.isra.12+184, overwrite_ok.isra.12+265, argmatch_valid+122, argmatch_valid+198, hash_print_statistics+118, hash_print_statistics+143, hash_print_statistics+211, hash_print_statistics+246, version_etc_arn+55, version_etc_arn+105
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2db6:
0000000000002db6         push       0x67
0000000000002dbb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000002dc0         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_d940+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2dc6:
0000000000002dc6         push       0x68
0000000000002dcb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_symlinkat:        // symlinkat
0000000000002dd0         jmp        qword [symlinkat@GOT]                       ; symlinkat, symlinkat@GOT, CODE XREF=try_symlink+12, force_symlinkat+220
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2dd6:
0000000000002dd6         push       0x69
0000000000002ddb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000002de0         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_d940+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2de6:
0000000000002de6         push       0x6a
0000000000002deb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_futimesat:        // futimesat
0000000000002df0         jmp        qword [futimesat@GOT]                       ; futimesat, futimesat@GOT, CODE XREF=fdutimens+313, fdutimens+528, fdutimens+784
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2df6:
0000000000002df6         push       0x6b
0000000000002dfb         jmp        0x2730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000002e00         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_d6e0+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e06:
0000000000002e06         push       0x6c
0000000000002e0b         jmp        0x2730
                        ; endp


        ; Section .plt.got
        ; Range: [0x2e10; 0x2e20[ (16 bytes)
        ; File offset : [11792; 11808[ (16 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e10:
0000000000002e10         jmp        qword [qword_219fc8]                        ; qword, End of unwind block (FDE at 0x1641c), Begin of unwind block (FDE at 0x16444), qword_219fc8, CODE XREF=sub_3890+43, do_copy+594, do_copy+870, copy_internal+3644, copy_internal+3839, copy_internal+5989, copy_internal+7927, copy_internal+7935, copy_internal+7982, copy_internal+8584, copy_internal+8743
                        ; endp
0000000000002e16         align      8


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_219ff0:        // qword_219ff0
0000000000002e18         jmp        qword [qword_219ff0]                        ; qword, qword_219ff0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000002e1e         align      32


        ; Section .text
        ; Range: [0x2e20; 0x128be[ (64158 bytes)
        ; File offset : [11808; 75966[ (64158 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fchmod_or_lchmod:
0000000000002e20         test       edi, edi                                    ; End of unwind block (FDE at 0x16444), Begin of unwind block (FDE at 0x1667c), CODE XREF=copy_internal+13994, copy_internal+16509, copy_internal+16549
0000000000002e22         mov        rax, rsi
0000000000002e25         mov        esi, edx
0000000000002e27         js         loc_2e2e

0000000000002e29         jmp        j_fchmod                                    ; fchmod
                        ; endp

                     loc_2e2e:
0000000000002e2e         mov        rdi, rax                                    ; argument "__file" for method j_chmod, CODE XREF=fchmod_or_lchmod+7
0000000000002e31         jmp        j_chmod                                     ; chmod
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_48: int64_t, -72
        ;    var_C8: int32_t, -200
        ;    var_E0: int8_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int32_t, -248
        ;    var_100: int8_t, -256
        ;    var_101: int8_t, -257
        ;    var_102: int8_t, -258
        ;    var_103: int8_t, -259
        ;    var_104: int8_t, -260
        ;    var_105: int8_t, -261
        ;    var_106: int8_t, -262
        ;    var_107: int8_t, -263
        ;    var_108: int8_t, -264
        ;    var_109: int8_t, -265
        ;    var_10A: int8_t, -266
        ;    var_10B: int8_t, -267
        ;    var_10C: int8_t, -268
        ;    var_10D: int8_t, -269
        ;    var_10E: int8_t, -270
        ;    var_10F: int8_t, -271
        ;    var_110: int8_t, -272
        ;    var_111: int8_t, -273
        ;    var_112: int8_t, -274
        ;    var_113: int8_t, -275
        ;    var_114: int8_t, -276
        ;    var_117: int8_t, -279
        ;    var_118: int8_t, -280
        ;    var_119: int8_t, -281
        ;    var_11A: int8_t, -282
        ;    var_11B: int8_t, -283
        ;    var_11C: int8_t, -284
        ;    var_120: int32_t, -288
        ;    var_124: int32_t, -292
        ;    var_128: int32_t, -296
        ;    var_12C: int32_t, -300
        ;    var_130: int32_t, -304
        ;    var_138: int64_t, -312
        ;    var_140: int64_t, -320
        ;    var_141: int8_t, -321
        ;    var_142: int8_t, -322
        ;    var_143: int8_t, -323
        ;    var_150: int64_t, -336
        ;    var_158: int64_t, -344
        ;    var_160: int64_t, -352


                     restore_default_fscreatecon_or_die:
0000000000002e36         push       rbx                                         ; End of unwind block (FDE at 0x1667c), Begin of unwind block (FDE at 0x16690), CODE XREF=copy_internal+4368
0000000000002e37         call       j___errno_location                          ; __errno_location
0000000000002e3c         lea        rsi, qword [aFailedToRestor]                ; argument "msgid" for method j_dcgettext, "failed to restore the default file creation context"
0000000000002e43         mov        rbx, rax
0000000000002e46         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002e4b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002e4d         mov        dword [rax], 0x5f
0000000000002e53         call       j_dcgettext                                 ; dcgettext
0000000000002e58         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000002e5a         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002e5d         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002e62         xor        eax, eax
0000000000002e64         call       j_error                                     ; error
0000000000002e69         nop        dword [rax]                                 ; End of unwind block (FDE at 0x16690)
                     main:
0000000000002e70         push       r15                                         ; Begin of unwind block (FDE at 0x165a0), DATA XREF=_start+29
0000000000002e72         push       r14
0000000000002e74         mov        r14d, 0x1
0000000000002e7a         push       r13
0000000000002e7c         push       r12
0000000000002e7e         mov        r12d, edi
0000000000002e81         push       rbp
0000000000002e82         push       rbx
0000000000002e83         mov        rbp, rsi
0000000000002e86         lea        r13, qword [long_opts]                      ; long_opts
0000000000002e8d         lea        rbx, qword [switch_table_12c1c]             ; switch_table_12c1c
0000000000002e94         sub        rsp, 0x128
0000000000002e9b         mov        rdi, qword [rsi]
0000000000002e9e         mov        rax, qword [fs:0x28]
0000000000002ea7         mov        qword [rsp+0x160+var_48], rax
0000000000002eaf         xor        eax, eax
0000000000002eb1         lea        r15, qword [rsp+0x160+var_130]
0000000000002eb6         call       set_program_name                            ; set_program_name
0000000000002ebb         lea        rsi, qword [aSSUnbackupn+20]                ; argument "__locale" for method j_setlocale, 0x15046
0000000000002ec2         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000002ec7         call       j_setlocale                                 ; setlocale
0000000000002ecc         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000002ed3         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000002eda         call       j_bindtextdomain                            ; bindtextdomain
0000000000002edf         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000002ee6         call       j_textdomain                                ; textdomain
0000000000002eeb         lea        rdi, qword [close_stdin]                    ; argument "__func" for method atexit, close_stdin
0000000000002ef2         call       atexit                                      ; atexit
0000000000002ef7         mov        rdi, r15
0000000000002efa         mov        byte [selinux_enabled], 0x0                 ; selinux_enabled
0000000000002f01         call       cp_options_default                          ; cp_options_default
0000000000002f06         lea        rdi, qword [aPosixlycorrect]                ; argument "__name" for method j_getenv, "POSIXLY_CORRECT"
0000000000002f0d         mov        byte [rsp+0x160+var_11C], 0x1
0000000000002f12         mov        dword [rsp+0x160+var_12C], 0x1
0000000000002f1a         mov        byte [rsp+0x160+var_11B], 0x0
0000000000002f1f         mov        byte [rsp+0x160+var_11A], 0x0
0000000000002f24         mov        byte [rsp+0x160+var_119], 0x0
0000000000002f29         mov        dword [rsp+0x160+var_128], 0x4
0000000000002f31         mov        byte [rsp+0x160+var_118], 0x0
0000000000002f36         mov        byte [rsp+0x160+var_117], 0x0
0000000000002f3b         mov        byte [rsp+0x160+var_114], 0x0
0000000000002f40         mov        dword [rsp+0x160+var_F8], 0x0
0000000000002f48         mov        byte [rsp+0x160+var_113], 0x0
0000000000002f4d         mov        byte [rsp+0x160+var_10E], 0x0
0000000000002f52         mov        byte [rsp+0x160+var_112], 0x0
0000000000002f57         mov        byte [rsp+0x160+var_111], 0x0
0000000000002f5c         mov        byte [rsp+0x160+var_110], 0x0
0000000000002f61         mov        byte [rsp+0x160+var_10B], 0x0
0000000000002f66         mov        byte [rsp+0x160+var_10A], 0x0
0000000000002f6b         mov        byte [rsp+0x160+var_10F], 0x0
0000000000002f70         mov        byte [rsp+0x160+var_109], 0x0
0000000000002f75         mov        byte [rsp+0x160+var_107], 0x0
0000000000002f7a         mov        byte [rsp+0x160+var_108], 0x0
0000000000002f7f         mov        byte [rsp+0x160+var_10D], 0x1
0000000000002f84         mov        byte [rsp+0x160+var_10C], 0x0
0000000000002f89         mov        byte [rsp+0x160+var_106], 0x0
0000000000002f8e         mov        dword [rsp+0x160+var_124], 0x2
0000000000002f96         mov        byte [rsp+0x160+var_104], 0x0
0000000000002f9b         mov        byte [rsp+0x160+var_105], 0x0
0000000000002fa0         mov        dword [rsp+0x160+var_120], 0x0
0000000000002fa8         mov        byte [rsp+0x160+var_101], 0x0
0000000000002fad         mov        byte [rsp+0x160+var_103], 0x0
0000000000002fb2         mov        byte [rsp+0x160+var_102], 0x0
0000000000002fb7         call       j_getenv                                    ; getenv
0000000000002fbc         test       rax, rax
0000000000002fbf         lea        rax, qword [rsp+0x160+var_E0]
0000000000002fc7         mov        qword [rsp+0x160+var_F0], 0x0
0000000000002fd0         setne      byte [rsp+0x160+var_100]
0000000000002fd5         mov        qword [rsp+0x160+var_E8], 0x0
0000000000002fde         mov        qword [rsp+0x160+var_140], 0x0
0000000000002fe7         mov        byte [rsp+0x160+var_142], 0x0
0000000000002fec         mov        qword [rsp+0x160+var_160], 0x0
0000000000002ff4         mov        byte [rsp+0x160+var_141], 0x0
0000000000002ff9         mov        qword [rsp+0x160+var_158], 0x0
0000000000003002         mov        qword [rsp+0x160+var_150], 0x0
000000000000300b         mov        byte [rsp+0x160+var_143], 0x0
0000000000003010         mov        qword [rsp+0x160+var_138], rax
0000000000003015         nop        dword [rax]

                     loc_3018:
0000000000003018         lea        rdx, qword [aAbdfhillnprstu]                ; argument "__shortopts" for method j_getopt_long, "abdfHilLnprst:uvxPRS:TZ", CODE XREF=main+518, main+528, main+535, main+545, main+552, main+570, main+601, main+668, main+707, main+717, main+739
000000000000301f         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000003022         mov        rcx, r13                                    ; argument "__longopts" for method j_getopt_long
0000000000003025         mov        rsi, rbp                                    ; argument "___argv" for method j_getopt_long
0000000000003028         mov        edi, r12d                                   ; argument "___argc" for method j_getopt_long
000000000000302b         call       j_getopt_long                               ; getopt_long
0000000000003030         cmp        eax, 0xffffffff
0000000000003033         je         loc_33a0

0000000000003039         add        eax, 0x83
000000000000303e         cmp        eax, 0x10b
0000000000003043         ja         loc_35ec

0000000000003049         movsxd     rax, dword [rbx+rax*4]
000000000000304d         add        rax, rbx
0000000000003050         jmp        rax                                         ; switch statement using table at 0x12c1c, with 268 cases, 0x3052,0x3062,0x3078,0x3082,0x3089,0x3093,0x309d,0x30af,0x30ce,0x3111,0x3138,0x3142,0x3158,0x3162,0x316f,0x317c,0x3189,0x31cb,0x31d5,0x31e1,0x3222,0x326c,0x3278,0x328e,0x3298,0x32a2,0x32ac,0x32b6,0x32c0,0x3343,0x35c4,0x35ec

                     loc_3052:
0000000000003052         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; case 263, optarg@@GLIBC_2.2.5, CODE XREF=main+480
0000000000003059         test       rdi, rdi
000000000000305c         jne        loc_334d

                     loc_3062:
0000000000003062         mov        byte [rsp+0x160+var_113], r14b              ; case 243, CODE XREF=main+480
0000000000003067         mov        byte [rsp+0x160+var_112], r14b
000000000000306c         mov        byte [rsp+0x160+var_111], r14b
0000000000003071         mov        byte [rsp+0x160+var_10C], r14b
0000000000003076         jmp        loc_3018

                     loc_3078:
0000000000003078         mov        dword [rsp+0x160+var_128], 0x2              ; case 241, CODE XREF=main+480
0000000000003080         jmp        loc_3018

                     loc_3082:
0000000000003082         mov        byte [rsp+0x160+var_119], r14b              ; case 239, CODE XREF=main+480
0000000000003087         jmp        loc_3018

                     loc_3089:
0000000000003089         mov        dword [rsp+0x160+var_128], 0x3              ; case 236, CODE XREF=main+480
0000000000003091         jmp        loc_3018

                     loc_3093:
0000000000003093         mov        byte [rsp+0x160+var_11A], r14b              ; case 233, CODE XREF=main+480
0000000000003098         jmp        loc_3018

                     loc_309d:
000000000000309d         mov        byte [rsp+0x160+var_10E], r14b              ; case 231, CODE XREF=main+480
00000000000030a2         mov        dword [rsp+0x160+var_12C], 0x2
00000000000030aa         jmp        loc_3018

                     loc_30af:
00000000000030af         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; case 229, optarg@@GLIBC_2.2.5, CODE XREF=main+480
00000000000030b6         mov        byte [rsp+0x160+var_143], 0x1
00000000000030bb         test       rax, rax
00000000000030be         cmove      rax, qword [rsp+0x160+var_158]
00000000000030c4         mov        qword [rsp+0x160+var_158], rax
00000000000030c9         jmp        loc_3018

                     loc_30ce:
00000000000030ce         cmp        byte [selinux_enabled], 0x0                 ; case 228, selinux_enabled, CODE XREF=main+480
00000000000030d5         mov        dword [rsp+0x160+var_12C], 0x2
00000000000030dd         mov        byte [rsp+0x160+var_10E], r14b
00000000000030e2         mov        byte [rsp+0x160+var_113], r14b
00000000000030e7         mov        byte [rsp+0x160+var_112], r14b
00000000000030ec         mov        byte [rsp+0x160+var_111], r14b
00000000000030f1         mov        byte [rsp+0x160+var_10C], r14b
00000000000030f6         je         loc_30fd

00000000000030f8         mov        byte [rsp+0x160+var_10B], r14b

                     loc_30fd:
00000000000030fd         mov        byte [rsp+0x160+var_109], r14b              ; CODE XREF=main+646
0000000000003102         mov        byte [rsp+0x160+var_107], r14b
0000000000003107         mov        byte [rsp+0x160+var_106], r14b
000000000000310c         jmp        loc_3018

                     loc_3111:
0000000000003111         cmp        byte [selinux_enabled], 0x0                 ; case 221, selinux_enabled, CODE XREF=main+480
0000000000003118         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
000000000000311f         je         loc_3364

0000000000003125         test       rax, rax
0000000000003128         je         loc_3571

000000000000312e         mov        qword [rsp+0x160+var_140], rax
0000000000003133         jmp        loc_3018

                     loc_3138:
0000000000003138         mov        byte [rsp+0x160+var_142], 0x1               ; case 215, CODE XREF=main+480
000000000000313d         jmp        loc_3018

                     loc_3142:
0000000000003142         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; case 214, optarg@@GLIBC_2.2.5, CODE XREF=main+480
0000000000003149         mov        byte [rsp+0x160+var_143], 0x1
000000000000314e         mov        qword [rsp+0x160+var_150], rax
0000000000003153         jmp        loc_3018

                     loc_3158:
0000000000003158         mov        byte [rsp+0x160+var_106], r14b              ; case 245, CODE XREF=main+480
000000000000315d         jmp        loc_3018

                     loc_3162:
0000000000003162         mov        dword [rsp+0x160+var_12C], 0x2              ; case 211, CODE XREF=main+480
000000000000316a         jmp        loc_3018

                     loc_316f:
000000000000316f         mov        dword [rsp+0x160+var_12C], 0x4              ; case 207, CODE XREF=main+480
0000000000003177         jmp        loc_3018

                     loc_317c:
000000000000317c         mov        dword [rsp+0x160+var_12C], 0x3              ; case 203, CODE XREF=main+480
0000000000003184         jmp        loc_3018

                     loc_3189:
0000000000003189         lea        rax, qword [aJimMeyering]                   ; case 0, "Jim Meyering", CODE XREF=main+480
0000000000003190         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003197         mov        rcx, qword [Version]                        ; Version
000000000000319e         push       0x0
00000000000031a0         lea        r9, qword [aDavidMackenzie]                 ; "David MacKenzie"
00000000000031a7         lea        r8, qword [aTorbjornGranlu]                 ; "Torbjorn Granlund"
00000000000031ae         push       rax
00000000000031af         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x129be
00000000000031b6         lea        rsi, qword [aSettingPermiss+27]             ; 0x12945
00000000000031bd         xor        eax, eax
00000000000031bf         call       version_etc                                 ; version_etc
00000000000031c4         xor        edi, edi                                    ; argument "__status" for method j_exit
00000000000031c6         call       j_exit                                      ; exit
                        ; endp

                     loc_31cb:
00000000000031cb         mov        byte [rsp+0x160+var_11B], r14b              ; case 267, CODE XREF=main+480
00000000000031d0         jmp        loc_3018

                     loc_31d5:
00000000000031d5         mov        byte [remove_trailing_slashes], r14b        ; case 266, remove_trailing_slashes, CODE XREF=main+480
00000000000031dc         jmp        loc_3018

                     loc_31e1:
00000000000031e1         mov        r9, qword [argmatch_die]                    ; case 265, argmatch_die, CODE XREF=main+480
00000000000031e8         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
00000000000031ef         lea        rdx, qword [sparse_type_string]             ; sparse_type_string
00000000000031f6         lea        rcx, qword [sparse_type]                    ; sparse_type
00000000000031fd         lea        rdi, qword [aSparse]                        ; "--sparse"
0000000000003204         mov        r8d, 0x4
000000000000320a         call       __xargmatch_internal                        ; __xargmatch_internal
000000000000320f         lea        rdx, qword [sparse_type]                    ; sparse_type
0000000000003216         mov        eax, dword [rdx+rax*4]
0000000000003219         mov        dword [rsp+0x160+var_124], eax
000000000000321d         jmp        loc_3018

                     loc_3222:
0000000000003222         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; case 264, optarg@@GLIBC_2.2.5, CODE XREF=main+480
0000000000003229         test       rsi, rsi
000000000000322c         je         loc_3393

0000000000003232         mov        r9, qword [argmatch_die]                    ; argmatch_die
0000000000003239         lea        rdx, qword [reflink_type_string]            ; reflink_type_string
0000000000003240         lea        rcx, qword [reflink_type]                   ; reflink_type
0000000000003247         lea        rdi, qword [aReflink]                       ; "--reflink"
000000000000324e         mov        r8d, 0x4
0000000000003254         call       __xargmatch_internal                        ; __xargmatch_internal
0000000000003259         lea        rdx, qword [reflink_type]                   ; reflink_type
0000000000003260         mov        eax, dword [rdx+rax*4]
0000000000003263         mov        dword [rsp+0x160+var_F8], eax
0000000000003267         jmp        loc_3018

                     loc_326c:
000000000000326c         mov        byte [parents_option], r14b                 ; case 262, parents_option, CODE XREF=main+480
0000000000003273         jmp        loc_3018

                     loc_3278:
0000000000003278         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; case 261, optarg@@GLIBC_2.2.5, CODE XREF=main+480
000000000000327f         xor        edx, edx
0000000000003281         mov        rsi, r15
0000000000003284         call       decode_preserve_arg                         ; decode_preserve_arg
0000000000003289         jmp        loc_3018

                     loc_328e:
000000000000328e         mov        byte [rsp+0x160+var_141], 0x1               ; case 260, CODE XREF=main+480
0000000000003293         jmp        loc_3018

                     loc_3298:
0000000000003298         mov        byte [rsp+0x160+var_10D], 0x0               ; case 259, CODE XREF=main+480
000000000000329d         jmp        loc_3018

                     loc_32a2:
00000000000032a2         mov        byte [rsp+0x160+var_114], r14b              ; case 251, CODE XREF=main+480
00000000000032a7         jmp        loc_3018

                     loc_32ac:
00000000000032ac         mov        byte [rsp+0x160+var_102], r14b              ; case 249, CODE XREF=main+480
00000000000032b1         jmp        loc_3018

                     loc_32b6:
00000000000032b6         mov        byte [rsp+0x160+var_103], r14b              ; case 248, CODE XREF=main+480
00000000000032bb         jmp        loc_3018

                     loc_32c0:
00000000000032c0         cmp        qword [rsp+0x160+var_160], 0x0              ; case 247, CODE XREF=main+480
00000000000032c5         jne        loc_35f6

00000000000032cb         mov        rdx, qword [rsp+0x160+var_138]              ; argument "__stat_buf" for method j___xstat
00000000000032d0         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; argument "__filename" for method j___xstat, optarg@@GLIBC_2.2.5
00000000000032d7         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
00000000000032dc         call       j___xstat                                   ; __xstat
00000000000032e1         test       eax, eax
00000000000032e3         jne        loc_3685

00000000000032e9         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
00000000000032f0         mov        qword [rsp+0x160+var_160], rax
00000000000032f4         mov        eax, dword [rsp+0x160+var_C8]
00000000000032fb         and        eax, 0xf000
0000000000003300         cmp        eax, 0x4000
0000000000003305         je         loc_3018

000000000000330b         mov        rsi, qword [rsp+0x160+var_160]
000000000000330f         mov        edi, 0x4
0000000000003314         call       quotearg_style                              ; quotearg_style
0000000000003319         lea        rsi, qword [aTargetSIsNotAD]                ; argument "msgid" for method j_dcgettext, "target %s is not a directory"
0000000000003320         mov        rbx, rax
0000000000003323         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003328         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000332a         call       j_dcgettext                                 ; dcgettext
000000000000332f         mov        rcx, rbx
0000000000003332         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003335         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003337         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000333c         xor        eax, eax
000000000000333e         call       j_error                                     ; error

                     loc_3343:
0000000000003343         mov        byte [rsp+0x160+var_104], r14b              ; case 246, CODE XREF=main+480
0000000000003348         jmp        loc_3018

                     loc_334d:
000000000000334d         mov        edx, 0x1                                    ; CODE XREF=main+492
0000000000003352         mov        rsi, r15
0000000000003355         call       decode_preserve_arg                         ; decode_preserve_arg
000000000000335a         mov        byte [rsp+0x160+var_10C], r14b
000000000000335f         jmp        loc_3018

                     loc_3364:
0000000000003364         test       rax, rax                                    ; CODE XREF=main+687
0000000000003367         je         loc_3018

000000000000336d         lea        rsi, qword [aWarningIgnorin]                ; argument "msgid" for method j_dcgettext, "warning: ignoring --context; it requires an SELinux-enabled kernel"
0000000000003374         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003376         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000337b         call       j_dcgettext                                 ; dcgettext
0000000000003380         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003382         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003385         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003387         xor        eax, eax
0000000000003389         call       j_error                                     ; error
000000000000338e         jmp        loc_3018

                     loc_3393:
0000000000003393         mov        dword [rsp+0x160+var_F8], 0x2               ; CODE XREF=main+956
000000000000339b         jmp        loc_3018

                     loc_33a0:
00000000000033a0         cmp        byte [rsp+0x160+var_119], 0x0               ; CODE XREF=main+451
00000000000033a5         jne        loc_34a2

                     loc_33ab:
00000000000033ab         cmp        dword [rsp+0x160+var_128], 0x2              ; CODE XREF=main+1591
00000000000033b0         je         loc_34be

00000000000033b6         cmp        byte [rsp+0x160+var_143], 0x0
00000000000033bb         je         loc_34ce

00000000000033c1         cmp        dword [rsp+0x160+var_F8], 0x2
00000000000033c6         je         loc_357b

                     loc_33cc:
00000000000033cc         lea        rsi, qword [aBackupType]                    ; argument "msgid" for method j_dcgettext, "backup type", CODE XREF=main+1808
00000000000033d3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000033d5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000033da         call       j_dcgettext                                 ; dcgettext
00000000000033df         mov        rsi, qword [rsp+0x160+var_158]
00000000000033e4         mov        rdi, rax
00000000000033e7         call       xget_version                                ; xget_version

                     loc_33ec:
00000000000033ec         mov        rdi, qword [rsp+0x160+var_150]              ; CODE XREF=main+1637, main+1648
00000000000033f1         mov        dword [rsp+0x160+var_130], eax
00000000000033f5         call       set_simple_backup_suffix                    ; set_simple_backup_suffix
00000000000033fa         cmp        dword [rsp+0x160+var_12C], 0x1
00000000000033ff         je         loc_34f7

                     loc_3405:
0000000000003405         cmp        byte [rsp+0x160+var_106], 0x0               ; CODE XREF=main+1788
000000000000340a         jne        loc_350d

                     loc_3410:
0000000000003410         cmp        byte [rsp+0x160+var_10F], 0x0               ; CODE XREF=main+1702
0000000000003415         movzx      eax, byte [rsp+0x160+var_10A]
000000000000341a         jne        loc_3428

000000000000341c         cmp        qword [rsp+0x160+var_140], 0x0
0000000000003422         je         loc_3546

                     loc_3428:
0000000000003428         test       al, al                                      ; CODE XREF=main+1450
000000000000342a         jne        loc_351b

0000000000003430         mov        byte [rsp+0x160+var_10B], 0x0

                     loc_3435:
0000000000003435         cmp        qword [rsp+0x160+var_140], 0x0              ; CODE XREF=main+1772
000000000000343b         jne        loc_3643

                     loc_3441:
0000000000003441         cmp        byte [rsp+0x160+var_108], 0x0               ; CODE XREF=main+1759, main+1821, main+1834
0000000000003446         jne        loc_361f

000000000000344c         call       hash_init                                   ; hash_init
0000000000003451         movsxd     rdx, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000003458         movzx      ecx, byte [rsp+0x160+var_142]
000000000000345d         mov        edi, r12d
0000000000003460         mov        r8, r15
0000000000003463         sub        edi, edx
0000000000003465         lea        rsi, qword [rbp+rdx*8]
000000000000346a         mov        rdx, qword [rsp+0x160+var_160]
000000000000346e         call       do_copy                                     ; do_copy
0000000000003473         xor        eax, 0x1
0000000000003476         mov        rcx, qword [rsp+0x160+var_48]
000000000000347e         xor        rcx, qword [fs:0x28]
0000000000003487         movzx      eax, al
000000000000348a         jne        loc_361a

0000000000003490         add        rsp, 0x128
0000000000003497         pop        rbx
0000000000003498         pop        rbp
0000000000003499         pop        r12
000000000000349b         pop        r13
000000000000349d         pop        r14
000000000000349f         pop        r15
00000000000034a1         ret
                        ; endp

                     loc_34a2:
00000000000034a2         cmp        byte [rsp+0x160+var_104], 0x0               ; CODE XREF=main+1333
00000000000034a7         je         loc_33ab

00000000000034ad         mov        edx, 0x5
00000000000034b2         lea        rsi, qword [aCannotMakeBoth]                ; "cannot make both hard and symbolic links"
00000000000034b9         jmp        loc_35d7

                     loc_34be:
00000000000034be         cmp        byte [rsp+0x160+var_143], 0x0               ; CODE XREF=main+1344
00000000000034c3         mov        byte [rsp+0x160+var_103], 0x0
00000000000034c8         jne        loc_35cb

                     loc_34ce:
00000000000034ce         xor        eax, eax                                    ; CODE XREF=main+1355
00000000000034d0         cmp        dword [rsp+0x160+var_F8], 0x2
00000000000034d5         jne        loc_33ec

00000000000034db         cmp        dword [rsp+0x160+var_124], 0x2
00000000000034e0         je         loc_33ec

                     loc_34e6:
00000000000034e6         mov        edx, 0x5                                    ; CODE XREF=main+1814
00000000000034eb         lea        rsi, qword [aReflinkCanBeUs]                ; "--reflink can be used only with --sparse=auto"
00000000000034f2         jmp        loc_35d7

                     loc_34f7:
00000000000034f7         cmp        byte [rsp+0x160+var_106], 0x0               ; CODE XREF=main+1423
00000000000034fc         je         loc_3564

00000000000034fe         cmp        byte [rsp+0x160+var_119], 0x0
0000000000003503         jne        loc_3564

0000000000003505         mov        dword [rsp+0x160+var_12C], 0x2

                     loc_350d:
000000000000350d         movzx      eax, byte [rsp+0x160+var_141]               ; CODE XREF=main+1434
0000000000003512         mov        byte [rsp+0x160+var_11C], al
0000000000003516         jmp        loc_3410

                     loc_351b:
000000000000351b         cmp        byte [rsp+0x160+var_10B], 0x0               ; CODE XREF=main+1466
0000000000003520         je         loc_3555

0000000000003522         lea        rsi, qword [aCannotSetTarge]                ; argument "msgid" for method j_dcgettext, "cannot set target context and preserve it"
0000000000003529         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000352e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003530         call       j_dcgettext                                 ; dcgettext
0000000000003535         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003537         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000353a         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000353f         xor        eax, eax
0000000000003541         call       j_error                                     ; error

                     loc_3546:
0000000000003546         cmp        byte [rsp+0x160+var_10B], 0x0               ; CODE XREF=main+1458
000000000000354b         je         loc_358b

000000000000354d         test       al, al
000000000000354f         je         loc_3441

                     loc_3555:
0000000000003555         cmp        byte [selinux_enabled], 0x0                 ; selinux_enabled, CODE XREF=main+1712
000000000000355c         jne        loc_3435

0000000000003562         jmp        loc_35a0

                     loc_3564:
0000000000003564         mov        dword [rsp+0x160+var_12C], 0x4              ; CODE XREF=main+1676, main+1683
000000000000356c         jmp        loc_3405

                     loc_3571:
0000000000003571         mov        byte [rsp+0x160+var_10F], r14b              ; CODE XREF=main+696
0000000000003576         jmp        loc_3018

                     loc_357b:
000000000000357b         cmp        dword [rsp+0x160+var_124], 0x2              ; CODE XREF=main+1366
0000000000003580         je         loc_33cc

0000000000003586         jmp        loc_34e6

                     loc_358b:
000000000000358b         test       al, al                                      ; CODE XREF=main+1755
000000000000358d         je         loc_3441

0000000000003593         cmp        byte [selinux_enabled], 0x0                 ; selinux_enabled
000000000000359a         jne        loc_3441

                     loc_35a0:
00000000000035a0         lea        rsi, qword [aCannotPreserve_14680]          ; argument "msgid" for method j_dcgettext, "cannot preserve security context without an SELinux-enabled kernel", CODE XREF=main+1778
00000000000035a7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000035ac         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000035ae         call       j_dcgettext                                 ; dcgettext
00000000000035b3         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000035b5         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000035b8         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000035bd         xor        eax, eax
00000000000035bf         call       j_error                                     ; error

                     loc_35c4:
00000000000035c4         xor        edi, edi                                    ; case 1, argument #1 for method usage, CODE XREF=main+480
00000000000035c6         call       usage                                       ; usage

                     loc_35cb:
00000000000035cb         lea        rsi, qword [aOptionsBackupA]                ; "options --backup and --no-clobber are mutually exclusive", CODE XREF=main+1624
00000000000035d2         mov        edx, 0x5

                     loc_35d7:
00000000000035d7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+1609, main+1666
00000000000035d9         call       j_dcgettext                                 ; dcgettext
00000000000035de         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000035e0         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000035e3         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000035e5         xor        eax, eax
00000000000035e7         call       j_error                                     ; error

                     loc_35ec:
00000000000035ec         mov        edi, 0x1                                    ; case 258, argument #1 for method usage, CODE XREF=main+467, main+480
00000000000035f1         call       usage                                       ; usage

                     loc_35f6:
00000000000035f6         lea        rsi, qword [aMultipleTarget]                ; argument "msgid" for method j_dcgettext, "multiple target directories specified", CODE XREF=main+1109
00000000000035fd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003602         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003604         call       j_dcgettext                                 ; dcgettext
0000000000003609         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000360b         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000360e         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003613         xor        eax, eax
0000000000003615         call       j_error                                     ; error

                     loc_361a:
000000000000361a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+1562
                        ; endp

                     loc_361f:
000000000000361f         lea        rsi, qword [aCannotPreserve]                ; argument "msgid" for method j_dcgettext, "cannot preserve extended attributes, cp is built without xattr support", CODE XREF=main+1494
0000000000003626         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000362b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000362d         call       j_dcgettext                                 ; dcgettext
0000000000003632         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003634         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003637         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000363c         xor        eax, eax
000000000000363e         call       j_error                                     ; error

                     loc_3643:
0000000000003643         call       j___errno_location                          ; __errno_location, CODE XREF=main+1483
0000000000003648         mov        rdi, qword [rsp+0x160+var_140]
000000000000364d         mov        dword [rax], 0x5f
0000000000003653         mov        rbx, rax
0000000000003656         call       quote                                       ; quote
000000000000365b         lea        rsi, qword [aFailedToSetDef]                ; argument "msgid" for method j_dcgettext, "failed to set default file creation context to %s"
0000000000003662         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003667         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003669         mov        rbp, rax
000000000000366c         call       j_dcgettext                                 ; dcgettext
0000000000003671         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000003673         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003676         mov        rcx, rbp
0000000000003679         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000367e         xor        eax, eax
0000000000003680         call       j_error                                     ; error

                     loc_3685:
0000000000003685         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+1139
000000000000368c         mov        edi, 0x4
0000000000003691         call       quotearg_style                              ; quotearg_style
0000000000003696         lea        rsi, qword [aFailedToAccess]                ; argument "msgid" for method j_dcgettext, "failed to access %s"
000000000000369d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000036a2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000036a4         mov        rbp, rax
00000000000036a7         call       j_dcgettext                                 ; dcgettext
00000000000036ac         mov        rbx, rax
00000000000036af         call       j___errno_location                          ; __errno_location
00000000000036b4         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000036b6         mov        rcx, rbp
00000000000036b9         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000036bc         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000036c1         xor        eax, eax
00000000000036c3         call       j_error                                     ; error
00000000000036c8         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x165a0)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
00000000000036d0         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x163ec)
00000000000036d2         mov        r9, rdx
00000000000036d5         pop        rsi
00000000000036d6         mov        rdx, rsp
00000000000036d9         and        rsp, 0xfffffffffffffff0
00000000000036dd         push       rax
00000000000036de         push       rsp
00000000000036df         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
00000000000036e6         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
00000000000036ed         lea        rdi, qword [main]                           ; main
00000000000036f4         call       qword [qword_219fd0+8]                      ; 0x219fd8
00000000000036fa         hlt
                        ; endp
00000000000036fb         align      256                                         ; End of unwind block (FDE at 0x163ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000003700         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000003707         push       rbp
0000000000003708         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000370f         cmp        rax, rdi
0000000000003712         mov        rbp, rsp
0000000000003715         je         loc_3730

0000000000003717         mov        rax, qword [qword_219fd0]                   ; qword_219fd0
000000000000371e         test       rax, rax
0000000000003721         je         loc_3730

0000000000003723         pop        rbp
0000000000003724         jmp        rax
                        ; endp
0000000000003726         align      16

                     loc_3730:
0000000000003730         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000003731         ret
                        ; endp
0000000000003732         align      64

                     register_tm_clones:
0000000000003740         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000003747         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000374e         push       rbp
000000000000374f         sub        rsi, rdi
0000000000003752         mov        rbp, rsp
0000000000003755         sar        rsi, 0x3
0000000000003759         mov        rax, rsi
000000000000375c         shr        rax, 0x3f
0000000000003760         add        rsi, rax
0000000000003763         sar        rsi, 0x1
0000000000003766         je         loc_3780

0000000000003768         mov        rax, qword [qword_219fe8]                   ; qword_219fe8
000000000000376f         test       rax, rax
0000000000003772         je         loc_3780

0000000000003774         pop        rbp
0000000000003775         jmp        rax
                        ; endp
0000000000003777         align      128

                     loc_3780:
0000000000003780         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000003781         ret
                        ; endp
0000000000003782         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000003790         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000003797         jne        loc_37c8

0000000000003799         cmp        qword [qword_219ff0], 0x0                   ; qword_219ff0
00000000000037a1         push       rbp
00000000000037a2         mov        rbp, rsp
00000000000037a5         je         loc_37b3

00000000000037a7         mov        rdi, qword [__dso_handle]                   ; __dso_handle
00000000000037ae         call       j_qword_219ff0                              ; qword_219ff0

                     loc_37b3:
00000000000037b3         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
00000000000037b8         mov        byte [completed.7697], 0x1                  ; completed.7697
00000000000037bf         pop        rbp
00000000000037c0         ret
                        ; endp
00000000000037c1         align      8

                     loc_37c8:
00000000000037c8         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
00000000000037ca         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
00000000000037d0         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
00000000000037d1         mov        rbp, rsp
00000000000037d4         pop        rbp
00000000000037d5         jmp        register_tm_clones                          ; register_tm_clones
00000000000037da         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     decode_preserve_arg:
00000000000037e0         push       r15                                         ; Begin of unwind block (FDE at 0x1645c), CODE XREF=main+1044, main+1253
00000000000037e2         push       r14
00000000000037e4         lea        r14, qword [aPreserve]                      ; "--preserve"
00000000000037eb         push       r13
00000000000037ed         push       r12
00000000000037ef         mov        r12d, edx
00000000000037f2         push       rbp
00000000000037f3         push       rbx
00000000000037f4         mov        rbp, rsi
00000000000037f7         mov        ebx, edx
00000000000037f9         lea        r13, qword [preserve_vals.7370]             ; preserve_vals.7370
0000000000003800         sub        rsp, 0x18
0000000000003804         call       xstrdup                                     ; xstrdup
0000000000003809         mov        r15, rax
000000000000380c         mov        qword [rsp+0x48+var_40], rax
0000000000003811         lea        rax, qword [aNopreserve]                    ; "--no-preserve"
0000000000003818         test       r12b, r12b
000000000000381b         lea        r12, qword [aNever+17]                      ; 0x12c00
0000000000003822         cmovne     rax, r14
0000000000003826         mov        qword [rsp+0x48+var_48], rax
000000000000382a         nop        word [rax+rax]
0000000000003830         mov        esi, 0x2c                                   ; argument "__c" for method j_strchr
0000000000003835         mov        rdi, r15                                    ; argument "__s" for method j_strchr
0000000000003838         xor        r14d, r14d
000000000000383b         call       j_strchr                                    ; strchr
0000000000003840         test       rax, rax
0000000000003843         je         loc_384c

0000000000003845         lea        r14, qword [rax+1]
0000000000003849         mov        byte [rax], 0x0

                     loc_384c:
000000000000384c         mov        r9, qword [argmatch_die]                    ; argmatch_die, CODE XREF=decode_preserve_arg+99
0000000000003853         mov        rdi, qword [rsp+0x48+var_48]
0000000000003857         lea        rcx, qword [preserve_vals.7370]             ; preserve_vals.7370
000000000000385e         lea        rdx, qword [preserve_args.7371]             ; preserve_args.7371
0000000000003865         mov        r8d, 0x4
000000000000386b         mov        rsi, r15
000000000000386e         call       __xargmatch_internal                        ; __xargmatch_internal
0000000000003873         cmp        dword [r13+rax*4], 0x6
0000000000003879         ja         loc_391d

000000000000387f         mov        eax, dword [r13+rax*4]
0000000000003884         movsxd     rax, dword [r12+rax*4]
0000000000003888         add        rax, r12
000000000000388b         jmp        rax
                        ; endp
000000000000388d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3890:
0000000000003890         mov        byte [rbp+0x27], bl
0000000000003893         mov        byte [rbp+0x28], bl
0000000000003896         nop        word [cs:rax+rax]
00000000000038a0         test       r14, r14                                    ; CODE XREF=sub_38d0+11, sub_38e0+19, sub_38e0+59
00000000000038a3         mov        r15, r14
00000000000038a6         jne        decode_preserve_arg+80

00000000000038a8         mov        rdi, qword [rsp+arg_0]
00000000000038ad         add        rsp, 0x18
00000000000038b1         pop        rbx
00000000000038b2         pop        rbp
00000000000038b3         pop        r12
00000000000038b5         pop        r13
00000000000038b7         pop        r14
00000000000038b9         pop        r15
00000000000038bb         jmp        sub_2e10                                    ; sub_2e10
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_38c0:
00000000000038c0         mov        byte [rbp+0x26], bl
00000000000038c3         mov        byte [rbp+0x25], bl
00000000000038c6         jmp        sub_3890+16
                        ; endp
00000000000038c8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_38d0:
00000000000038d0         mov        byte [rbp+0x22], bl
00000000000038d3         jmp        sub_3890+16
                        ; endp
00000000000038d5         nop        dword [rax]
00000000000038d8         mov        byte [rbp+0x1d], bl
00000000000038db         jmp        sub_3890+16
00000000000038dd         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_38e0:
00000000000038e0         mov        byte [rbp+0x1f], bl
00000000000038e3         jmp        sub_3890+16
                        ; endp
00000000000038e5         nop        dword [rax]
00000000000038e8         mov        eax, ebx
00000000000038ea         mov        byte [rbp+0x1e], bl
00000000000038ed         xor        eax, 0x1
00000000000038f0         mov        byte [rbp+0x20], al
00000000000038f3         jmp        sub_3890+16
00000000000038f5         nop        dword [rax]
00000000000038f8         mov        eax, ebx
00000000000038fa         mov        byte [rbp+0x1e], bl
00000000000038fd         mov        byte [rbp+0x1f], bl
0000000000003900         xor        eax, 0x1
0000000000003903         cmp        byte [selinux_enabled], 0x0                 ; selinux_enabled
000000000000390a         mov        byte [rbp+0x1d], bl
000000000000390d         mov        byte [rbp+0x22], bl
0000000000003910         mov        byte [rbp+0x20], al
0000000000003913         je         sub_38e0+56
0000000000003915         mov        byte [rbp+0x25], bl
0000000000003918         mov        byte [rbp+0x27], bl                         ; CODE XREF=sub_38e0+51
000000000000391b         jmp        sub_3890+16

                     loc_391d:
000000000000391d         call       j_abort                                     ; abort, CODE XREF=decode_preserve_arg+153
                        ; endp
0000000000003922         align      16                                          ; End of unwind block (FDE at 0x1645c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_1B1: int8_t, -433


                     target_directory_operand:
0000000000003930         push       r14                                         ; Begin of unwind block (FDE at 0x164a8), CODE XREF=do_copy+141, do_copy+997
0000000000003932         push       r13
0000000000003934         mov        r14, rdx
0000000000003937         push       r12
0000000000003939         push       rbp
000000000000393a         mov        rdx, rsi                                    ; argument "__stat_buf" for method j___xstat
000000000000393d         push       rbx
000000000000393e         mov        rbp, rdi
0000000000003941         mov        rbx, rsi
0000000000003944         mov        rsi, rdi                                    ; argument "__filename" for method j___xstat
0000000000003947         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
000000000000394c         mov        r13d, ecx
000000000000394f         call       j___xstat                                   ; __xstat
0000000000003954         test       eax, eax
0000000000003956         jne        loc_3975

0000000000003958         mov        edx, dword [rbx+0x18]
000000000000395b         and        edx, 0xf000
0000000000003961         cmp        edx, 0x4000
0000000000003967         je         loc_39ad

                     loc_3969:
0000000000003969         and        eax, 0x1                                    ; CODE XREF=target_directory_operand+101

                     loc_396c:
000000000000396c         pop        rbx                                         ; CODE XREF=target_directory_operand+123, target_directory_operand+130, target_directory_operand+138
000000000000396d         pop        rbp
000000000000396e         pop        r12
0000000000003970         pop        r13
0000000000003972         pop        r14
0000000000003974         ret
                        ; endp

                     loc_3975:
0000000000003975         call       j___errno_location                          ; __errno_location, CODE XREF=target_directory_operand+38
000000000000397a         mov        r12d, dword [rax]
000000000000397d         test       r12d, r12d
0000000000003980         jne        loc_3997

0000000000003982         mov        eax, dword [rbx+0x18]
0000000000003985         and        eax, 0xf000
000000000000398a         cmp        eax, 0x4000
000000000000398f         sete       al
0000000000003992         movzx      eax, al
0000000000003995         jmp        loc_3969

                     loc_3997:
0000000000003997         cmp        r12d, 0x2                                   ; CODE XREF=target_directory_operand+80
000000000000399b         je         loc_39b4

000000000000399d         test       r13b, r13b
00000000000039a0         je         loc_39bc

00000000000039a2         mov        dword [rbx+0x18], 0x0
00000000000039a9         xor        eax, eax
00000000000039ab         jmp        loc_396c

                     loc_39ad:
00000000000039ad         mov        eax, 0x1                                    ; CODE XREF=target_directory_operand+55
00000000000039b2         jmp        loc_396c

                     loc_39b4:
00000000000039b4         mov        byte [r14], 0x1                             ; CODE XREF=target_directory_operand+107
00000000000039b8         xor        eax, eax
00000000000039ba         jmp        loc_396c

                     loc_39bc:
00000000000039bc         mov        rsi, rbp                                    ; CODE XREF=target_directory_operand+112
00000000000039bf         mov        edi, 0x4
00000000000039c4         call       quotearg_style                              ; quotearg_style
00000000000039c9         lea        rsi, qword [aFailedToAccess]                ; argument "msgid" for method j_dcgettext, "failed to access %s"
00000000000039d0         mov        rbx, rax
00000000000039d3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000039d8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000039da         call       j_dcgettext                                 ; dcgettext
00000000000039df         mov        rcx, rbx
00000000000039e2         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000039e5         mov        esi, r12d                                   ; argument "__errnum" for method j_error
00000000000039e8         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000039ed         xor        eax, eax
00000000000039ef         call       j_error                                     ; error
00000000000039f4         nop                                                    ; End of unwind block (FDE at 0x164a8)
00000000000039f6         nop        word [cs:rax+rax]
                     make_dir_parents_private:
0000000000003a00         push       rbp                                         ; Begin of unwind block (FDE at 0x164e4), CODE XREF=do_copy+556
0000000000003a01         mov        rbp, rsp
0000000000003a04         push       r15
0000000000003a06         push       r14
0000000000003a08         push       r13
0000000000003a0a         push       r12
0000000000003a0c         mov        r13, r9
0000000000003a0f         push       rbx
0000000000003a10         mov        r15, rsi
0000000000003a13         mov        rbx, rdi
0000000000003a16         sub        rsp, 0x168
0000000000003a1d         mov        qword [rbp-0x180], rcx
0000000000003a24         mov        qword [rbp-0x178], r8
0000000000003a2b         mov        qword [rbp-0x190], rdx
0000000000003a32         mov        rdx, qword [fs:0x28]
0000000000003a3b         mov        qword [rbp-0x38], rdx
0000000000003a3f         xor        edx, edx
0000000000003a41         call       j_strlen                                    ; strlen
0000000000003a46         lea        rdx, qword [rax+1]                          ; argument "__n" for method j_memcpy
0000000000003a4a         add        rax, 0x1f
0000000000003a4e         mov        rsi, rbx                                    ; argument "__src" for method j_memcpy
0000000000003a51         and        rax, 0xfffffffffffffff0
0000000000003a55         sub        rsp, rax
0000000000003a58         lea        rdi, qword [rsp+0x1c0+var_1B1]
0000000000003a5d         and        rdi, 0xfffffffffffffff0                     ; argument "__dest" for method j_memcpy
0000000000003a61         call       j_memcpy                                    ; memcpy
0000000000003a66         mov        rdi, rax
0000000000003a69         mov        r12, rax
0000000000003a6c         call       dir_len                                     ; dir_len
0000000000003a71         mov        r14, rax
0000000000003a74         add        rax, 0x1f
0000000000003a78         mov        rsi, r12                                    ; argument "__src" for method j_memcpy
0000000000003a7b         and        rax, 0xfffffffffffffff0
0000000000003a7f         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000003a82         sub        rsp, rax
0000000000003a85         lea        rbx, qword [rsp+0x1c0+var_1B1]
0000000000003a8a         and        rbx, 0xfffffffffffffff0
0000000000003a8e         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
0000000000003a91         call       j_memcpy                                    ; memcpy
0000000000003a96         mov        rax, qword [rbp-0x180]
0000000000003a9d         mov        byte [rbx+r14], 0x0
0000000000003aa2         mov        rsi, rbx                                    ; argument "__filename" for method j___xstat
0000000000003aa5         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000003aaa         mov        qword [rax], 0x0
0000000000003ab1         lea        rax, qword [rbp-0x160]
0000000000003ab8         mov        rdx, rax                                    ; argument "__stat_buf" for method j___xstat
0000000000003abb         mov        qword [rbp-0x170], rax
0000000000003ac2         call       j___xstat                                   ; __xstat
0000000000003ac7         test       eax, eax
0000000000003ac9         je         loc_3e80

0000000000003acf         lea        rdi, qword [r12+r15]
0000000000003ad3         cmp        byte [rdi], 0x2f
0000000000003ad6         mov        qword [rbp-0x168], rdi
0000000000003add         jne        loc_3f28

0000000000003ae3         nop        dword [rax+rax]

                     loc_3ae8:
0000000000003ae8         add        rdi, 0x1                                    ; CODE XREF=make_dir_parents_private+239
0000000000003aec         cmp        byte [rdi], 0x2f
0000000000003aef         je         loc_3ae8

                     loc_3af1:
0000000000003af1         lea        rax, qword [rbp-0xd0]                       ; CODE XREF=make_dir_parents_private+1327
0000000000003af8         mov        qword [rbp-0x188], rax
0000000000003aff         nop

                     loc_3b00:
0000000000003b00         mov        esi, 0x2f                                   ; argument "__c" for method j_strchr, CODE XREF=make_dir_parents_private+415, make_dir_parents_private+433
0000000000003b05         call       j_strchr                                    ; strchr
0000000000003b0a         test       rax, rax
0000000000003b0d         mov        rbx, rax
0000000000003b10         je         loc_3e9c

0000000000003b16         mov        rdx, qword [rbp-0x170]                      ; argument "__stat_buf" for method j___xstat
0000000000003b1d         mov        byte [rbx], 0x0
0000000000003b20         mov        rsi, r12                                    ; argument "__filename" for method j___xstat
0000000000003b23         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000003b28         call       j___xstat                                   ; __xstat
0000000000003b2d         test       eax, eax
0000000000003b2f         mov        r14d, eax
0000000000003b32         jne        loc_3bc0

0000000000003b38         test       dword [r13+0x1c], 0xffffff00
0000000000003b40         jne        loc_3bc0

                     loc_3b42:
0000000000003b42         mov        rdi, qword [rbp-0x168]                      ; CODE XREF=make_dir_parents_private+652
0000000000003b49         xor        ecx, ecx
0000000000003b4b         xor        edx, edx
0000000000003b4d         mov        r8, r13
0000000000003b50         mov        rsi, r12
0000000000003b53         call       set_process_security_ctx                    ; set_process_security_ctx
0000000000003b58         test       al, al
0000000000003b5a         je         loc_3e65

0000000000003b60         mov        eax, dword [rbp-0x148]
0000000000003b66         and        eax, 0xf000
0000000000003b6b         cmp        eax, 0x4000
0000000000003b70         jne        loc_3f77

0000000000003b76         mov        rax, qword [rbp-0x178]
0000000000003b7d         mov        byte [rax], 0x0

                     loc_3b80:
0000000000003b80         movabs     rax, 0xff000000ff00                         ; CODE XREF=make_dir_parents_private+938
0000000000003b8a         test       qword [r13+0x20], rax
0000000000003b8e         jne        loc_3e40

                     loc_3b94:
0000000000003b94         cmp        byte [rbx+1], 0x2f                          ; CODE XREF=make_dir_parents_private+932, make_dir_parents_private+1108, make_dir_parents_private+1119
0000000000003b98         lea        rdi, qword [rbx+1]
0000000000003b9c         mov        byte [rbx], 0x2f
0000000000003b9f         jne        loc_3b00

0000000000003ba5         nop        dword [rax]

                     loc_3ba8:
0000000000003ba8         add        rdi, 0x1                                    ; CODE XREF=make_dir_parents_private+431
0000000000003bac         cmp        byte [rdi], 0x2f
0000000000003baf         je         loc_3ba8

0000000000003bb1         jmp        loc_3b00
0000000000003bb6         align      64

                     loc_3bc0:
0000000000003bc0         mov        rdx, qword [rbp-0x188]                      ; argument "__stat_buf" for method j___xstat, CODE XREF=make_dir_parents_private+306, make_dir_parents_private+320
0000000000003bc7         mov        rsi, qword [rbp-0x168]                      ; argument "__filename" for method j___xstat
0000000000003bce         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000003bd3         call       j___xstat                                   ; __xstat
0000000000003bd8         test       eax, eax
0000000000003bda         je         loc_3db0

0000000000003be0         call       j___errno_location                          ; __errno_location
0000000000003be5         mov        r8d, dword [rax]
0000000000003be8         test       r8d, r8d
0000000000003beb         jne        loc_3dcc

                     loc_3bf1:
0000000000003bf1         mov        edi, 0xa8                                   ; CODE XREF=make_dir_parents_private+960
0000000000003bf6         call       xmalloc                                     ; xmalloc
0000000000003bfb         movdqa     xmm0, xmmword [rbp-0xd0]
0000000000003c03         mov        r15, rax
0000000000003c06         mov        rcx, qword [rbp-0x180]
0000000000003c0d         movups     xmmword [rax], xmm0
0000000000003c10         movdqa     xmm0, xmmword [rbp-0xc0]
0000000000003c18         movups     xmmword [rax+0x10], xmm0
0000000000003c1c         movdqa     xmm0, xmmword [rbp-0xb0]
0000000000003c24         movups     xmmword [rax+0x20], xmm0
0000000000003c28         movdqa     xmm0, xmmword [rbp-0xa0]
0000000000003c30         movups     xmmword [rax+0x30], xmm0
0000000000003c34         movdqa     xmm0, xmmword [rbp-0x90]
0000000000003c3c         movups     xmmword [rax+0x40], xmm0
0000000000003c40         movdqa     xmm0, xmmword [rbp-0x80]
0000000000003c45         movups     xmmword [rax+0x50], xmm0
0000000000003c49         movdqa     xmm0, xmmword [rbp-0x70]
0000000000003c4e         movups     xmmword [rax+0x60], xmm0
0000000000003c52         movdqa     xmm0, xmmword [rbp-0x60]
0000000000003c57         movups     xmmword [rax+0x70], xmm0
0000000000003c5b         movdqa     xmm0, xmmword [rbp-0x50]
0000000000003c60         movups     xmmword [rax+0x80], xmm0
0000000000003c67         mov        rax, rbx
0000000000003c6a         mov        byte [r15+0x90], 0x0
0000000000003c72         sub        rax, r12
0000000000003c75         test       r14d, r14d
0000000000003c78         mov        qword [r15+0x98], rax
0000000000003c7f         mov        rax, qword [rcx]
0000000000003c82         mov        qword [rcx], r15
0000000000003c85         mov        qword [r15+0xa0], rax
0000000000003c8c         je         loc_3b42

0000000000003c92         mov        edx, dword [r15+0x18]
0000000000003c96         mov        rdi, qword [rbp-0x168]
0000000000003c9d         mov        r8, r13
0000000000003ca0         mov        ecx, 0x1
0000000000003ca5         mov        rsi, r12
0000000000003ca8         call       set_process_security_ctx                    ; set_process_security_ctx
0000000000003cad         test       al, al
0000000000003caf         je         loc_3e65

0000000000003cb5         mov        rax, qword [rbp-0x178]
0000000000003cbc         mov        esi, dword [r15+0x18]
0000000000003cc0         mov        byte [rax], 0x1
0000000000003cc3         cmp        byte [r13+0x1d], 0x0
0000000000003cc8         je         loc_3e20

0000000000003cce         mov        r14d, esi
0000000000003cd1         and        r14d, 0x3f
0000000000003cd5         mov        eax, r14d
0000000000003cd8         xor        eax, 0xfff

                     loc_3cdd:
0000000000003cdd         cmp        byte [r13+0x20], 0x0                        ; CODE XREF=make_dir_parents_private+1078, make_dir_parents_private+1144
0000000000003ce2         mov        edx, 0x1ff
0000000000003ce7         mov        rdi, r12                                    ; argument "__path" for method j_mkdir
0000000000003cea         cmovne     esi, edx
0000000000003ced         and        esi, eax                                    ; argument "__mode" for method j_mkdir
0000000000003cef         call       j_mkdir                                     ; mkdir
0000000000003cf4         test       eax, eax
0000000000003cf6         jne        loc_3f34

0000000000003cfc         mov        rax, qword [rbp-0x190]
0000000000003d03         test       rax, rax
0000000000003d06         je         loc_3d21

0000000000003d08         mov        rdx, qword [rbp-0x168]
0000000000003d0f         mov        rsi, rax
0000000000003d12         mov        rcx, r12
0000000000003d15         mov        edi, 0x1
0000000000003d1a         xor        eax, eax
0000000000003d1c         call       j___printf_chk                              ; __printf_chk

                     loc_3d21:
0000000000003d21         mov        rdx, qword [rbp-0x170]                      ; argument "__stat_buf" for method j___lxstat, CODE XREF=make_dir_parents_private+774
0000000000003d28         mov        rsi, r12                                    ; argument "__filename" for method j___lxstat
0000000000003d2b         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000003d30         call       j___lxstat                                  ; __lxstat
0000000000003d35         test       eax, eax
0000000000003d37         jne        loc_3f7f

0000000000003d3d         cmp        byte [r13+0x1e], 0x0
0000000000003d42         mov        esi, dword [rbp-0x148]
0000000000003d48         jne        loc_3d76

0000000000003d4a         mov        eax, esi
0000000000003d4c         not        eax
0000000000003d4e         test       eax, r14d
0000000000003d51         jne        loc_3f00

                     loc_3d57:
0000000000003d57         mov        eax, esi                                    ; CODE XREF=make_dir_parents_private+1311
0000000000003d59         and        eax, 0x1c0
0000000000003d5e         cmp        eax, 0x1c0
0000000000003d63         je         loc_3d9a

0000000000003d65         mov        eax, esi

                     loc_3d67:
0000000000003d67         or         r14d, eax                                   ; CODE XREF=make_dir_parents_private+1305
0000000000003d6a         mov        byte [r15+0x90], 0x1
0000000000003d72         mov        dword [r15+0x18], r14d

                     loc_3d76:
0000000000003d76         mov        eax, esi                                    ; CODE XREF=make_dir_parents_private+840
0000000000003d78         and        eax, 0x1c0
0000000000003d7d         cmp        eax, 0x1c0
0000000000003d82         je         loc_3d9a

0000000000003d84         or         esi, 0x1c0                                  ; argument "__mode" for method j_chmod
0000000000003d8a         mov        rdi, r12                                    ; argument "__file" for method j_chmod
0000000000003d8d         call       j_chmod                                     ; chmod
0000000000003d92         test       eax, eax
0000000000003d94         jne        loc_3f9d

                     loc_3d9a:
0000000000003d9a         mov        rax, qword [rbp-0x178]                      ; CODE XREF=make_dir_parents_private+867, make_dir_parents_private+898
0000000000003da1         cmp        byte [rax], 0x0
0000000000003da4         jne        loc_3b94

0000000000003daa         jmp        loc_3b80
0000000000003daf         align      16

                     loc_3db0:
0000000000003db0         mov        eax, dword [rbp-0xb8]                       ; CODE XREF=make_dir_parents_private+474
0000000000003db6         and        eax, 0xf000
0000000000003dbb         cmp        eax, 0x4000
0000000000003dc0         je         loc_3bf1

0000000000003dc6         mov        r8d, 0x14

                     loc_3dcc:
0000000000003dcc         mov        rsi, qword [rbp-0x168]                      ; CODE XREF=make_dir_parents_private+491
0000000000003dd3         mov        edi, 0x4
0000000000003dd8         mov        dword [rbp-0x170], r8d
0000000000003ddf         call       quotearg_style                              ; quotearg_style
0000000000003de4         lea        rsi, qword [aFailedToGetAtt]                ; argument "msgid" for method j_dcgettext, "failed to get attributes of %s"
0000000000003deb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003df0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003df2         mov        rbx, rax
0000000000003df5         call       j_dcgettext                                 ; dcgettext
0000000000003dfa         mov        r8d, dword [rbp-0x170]
0000000000003e01         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003e04         mov        rcx, rbx
0000000000003e07         xor        eax, eax
0000000000003e09         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003e0b         mov        esi, r8d                                    ; argument "__errnum" for method j_error
0000000000003e0e         call       j_error                                     ; error
0000000000003e13         xor        eax, eax
0000000000003e15         jmp        loc_3ea1
0000000000003e1a         align      32

                     loc_3e20:
0000000000003e20         cmp        byte [r13+0x1e], 0x0                        ; CODE XREF=make_dir_parents_private+712
0000000000003e25         je         loc_3e70

0000000000003e27         mov        r14d, esi
0000000000003e2a         and        r14d, 0x12
0000000000003e2e         mov        eax, r14d
0000000000003e31         xor        eax, 0xfff
0000000000003e36         jmp        loc_3cdd
0000000000003e3b         align      64

                     loc_3e40:
0000000000003e40         movzx      esi, byte [r13+0x25]                        ; CODE XREF=make_dir_parents_private+398
0000000000003e45         xor        edx, edx
0000000000003e47         mov        rcx, r13
0000000000003e4a         mov        rdi, r12
0000000000003e4d         call       set_file_security_ctx                       ; set_file_security_ctx
0000000000003e52         test       al, al
0000000000003e54         jne        loc_3b94

0000000000003e5a         cmp        byte [r13+0x26], 0x0
0000000000003e5f         je         loc_3b94

                     loc_3e65:
0000000000003e65         xor        eax, eax                                    ; CODE XREF=make_dir_parents_private+346, make_dir_parents_private+687
0000000000003e67         jmp        loc_3ea1
0000000000003e69         align      16

                     loc_3e70:
0000000000003e70         xor        r14d, r14d                                  ; CODE XREF=make_dir_parents_private+1061
0000000000003e73         mov        eax, 0xfff
0000000000003e78         jmp        loc_3cdd
0000000000003e7d         align      128

                     loc_3e80:
0000000000003e80         mov        eax, dword [rbp-0x148]                      ; CODE XREF=make_dir_parents_private+201
0000000000003e86         and        eax, 0xf000
0000000000003e8b         cmp        eax, 0x4000
0000000000003e90         jne        loc_3ec3

0000000000003e92         mov        rax, qword [rbp-0x178]
0000000000003e99         mov        byte [rax], 0x0

                     loc_3e9c:
0000000000003e9c         mov        eax, 0x1                                    ; CODE XREF=make_dir_parents_private+272

                     loc_3ea1:
0000000000003ea1         mov        rcx, qword [rbp-0x38]                       ; CODE XREF=make_dir_parents_private+1045, make_dir_parents_private+1127, make_dir_parents_private+1273, make_dir_parents_private+1394
0000000000003ea5         xor        rcx, qword [fs:0x28]
0000000000003eae         jne        loc_3fbb

0000000000003eb4         lea        rsp, qword [rbp-0x28]
0000000000003eb8         pop        rbx
0000000000003eb9         pop        r12
0000000000003ebb         pop        r13
0000000000003ebd         pop        r14
0000000000003ebf         pop        r15
0000000000003ec1         pop        rbp
0000000000003ec2         ret
                        ; endp

                     loc_3ec3:
0000000000003ec3         mov        rsi, rbx                                    ; CODE XREF=make_dir_parents_private+1168

                     loc_3ec6:
0000000000003ec6         mov        edi, 0x4                                    ; CODE XREF=make_dir_parents_private+1402
0000000000003ecb         call       quotearg_style                              ; quotearg_style
0000000000003ed0         lea        rsi, qword [aSExistsButIsNo]                ; argument "msgid" for method j_dcgettext, "%s exists but is not a directory"
0000000000003ed7         mov        rbx, rax
0000000000003eda         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003edf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003ee1         call       j_dcgettext                                 ; dcgettext
0000000000003ee6         mov        rcx, rbx
0000000000003ee9         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003eec         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003eee         xor        eax, eax
0000000000003ef0         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003ef2         call       j_error                                     ; error
0000000000003ef7         xor        eax, eax
0000000000003ef9         jmp        loc_3ea1
0000000000003efb         align      256

                     loc_3f00:
0000000000003f00         call       cached_umask                                ; cached_umask, CODE XREF=make_dir_parents_private+849
0000000000003f05         mov        esi, dword [rbp-0x148]
0000000000003f0b         not        eax
0000000000003f0d         and        r14d, eax
0000000000003f10         mov        edx, esi
0000000000003f12         mov        eax, esi
0000000000003f14         not        edx
0000000000003f16         test       edx, r14d
0000000000003f19         jne        loc_3d67

0000000000003f1f         jmp        loc_3d57
0000000000003f24         align      8

                     loc_3f28:
0000000000003f28         mov        rdi, qword [rbp-0x168]                      ; CODE XREF=make_dir_parents_private+221
0000000000003f2f         jmp        loc_3af1

                     loc_3f34:
0000000000003f34         mov        rsi, r12                                    ; CODE XREF=make_dir_parents_private+758
0000000000003f37         mov        edi, 0x4
0000000000003f3c         call       quotearg_style                              ; quotearg_style
0000000000003f41         lea        rsi, qword [aCannotMakeDire]                ; "cannot make directory %s"
0000000000003f48         mov        r12, rax
0000000000003f4b         mov        edx, 0x5

                     loc_3f50:
0000000000003f50         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=make_dir_parents_private+1435, make_dir_parents_private+1465
0000000000003f52         call       j_dcgettext                                 ; dcgettext
0000000000003f57         mov        rbx, rax
0000000000003f5a         call       j___errno_location                          ; __errno_location
0000000000003f5f         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003f61         mov        rcx, r12
0000000000003f64         xor        eax, eax
0000000000003f66         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000003f69         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003f6b         call       j_error                                     ; error
0000000000003f70         xor        eax, eax
0000000000003f72         jmp        loc_3ea1

                     loc_3f77:
0000000000003f77         mov        rsi, r12                                    ; CODE XREF=make_dir_parents_private+368
0000000000003f7a         jmp        loc_3ec6

                     loc_3f7f:
0000000000003f7f         mov        rsi, r12                                    ; CODE XREF=make_dir_parents_private+823
0000000000003f82         mov        edi, 0x4
0000000000003f87         call       quotearg_style                              ; quotearg_style
0000000000003f8c         mov        edx, 0x5
0000000000003f91         mov        r12, rax
0000000000003f94         lea        rsi, qword [aFailedToGetAtt]                ; "failed to get attributes of %s"
0000000000003f9b         jmp        loc_3f50

                     loc_3f9d:
0000000000003f9d         mov        rsi, r12                                    ; CODE XREF=make_dir_parents_private+916
0000000000003fa0         mov        edi, 0x4
0000000000003fa5         call       quotearg_style                              ; quotearg_style
0000000000003faa         mov        edx, 0x5
0000000000003faf         mov        r12, rax
0000000000003fb2         lea        rsi, qword [aSettingPermiss]                ; "setting permissions for %s"
0000000000003fb9         jmp        loc_3f50

                     loc_3fbb:
0000000000003fbb         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=make_dir_parents_private+1198
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_28: int8_t, -40
        ;    var_38: int64_t, -56
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_61: int8_t, -97
        ;    var_68: int64_t, -104


                     re_protect:
0000000000003fc0         push       rbp                                         ; End of unwind block (FDE at 0x164e4), Begin of unwind block (FDE at 0x16514), CODE XREF=do_copy+829
0000000000003fc1         mov        rbp, rsp
0000000000003fc4         push       r15
0000000000003fc6         push       r14
0000000000003fc8         push       r13
0000000000003fca         push       r12
0000000000003fcc         mov        r14, rsi
0000000000003fcf         push       rbx
0000000000003fd0         mov        r12, rdi
0000000000003fd3         mov        rbx, rdx
0000000000003fd6         mov        r13, rcx
0000000000003fd9         sub        rsp, 0x48
0000000000003fdd         mov        rax, qword [fs:0x28]
0000000000003fe6         mov        qword [rbp+var_38], rax
0000000000003fea         xor        eax, eax
0000000000003fec         call       j_strlen                                    ; strlen
0000000000003ff1         lea        rdx, qword [rax+1]                          ; argument "__n" for method j_memcpy
0000000000003ff5         add        rax, 0x1f
0000000000003ff9         mov        rsi, r12                                    ; argument "__src" for method j_memcpy
0000000000003ffc         and        rax, 0xfffffffffffffff0
0000000000004000         sub        rsp, rax                                    ; DATA XREF=main+1168, target_directory_operand+49, target_directory_operand+90, make_dir_parents_private+363, make_dir_parents_private+955, make_dir_parents_private+1163, copy_internal+253, copy_internal+296, copy_internal+422, copy_internal+564, copy_internal+1146
0000000000004003         lea        rdi, qword [rsp+0x70+var_61]
0000000000004008         and        rdi, 0xfffffffffffffff0                     ; argument "__dest" for method j_memcpy
000000000000400c         call       j_memcpy                                    ; memcpy
0000000000004011         mov        r12, rax
0000000000004014         add        rax, r14
0000000000004017         test       rbx, rbx
000000000000401a         mov        qword [rbp+var_68], rax
000000000000401e         je         loc_41d0

0000000000004024         lea        r15, qword [rbp+var_60]
0000000000004028         jmp        loc_4072
000000000000402a         align      16

                     loc_4030:
0000000000004030         cmp        byte [r13+0x1d], 0x0                        ; CODE XREF=re_protect+195, re_protect+242
0000000000004035         jne        loc_4100

                     loc_403b:
000000000000403b         movzx      r14d, byte [r13+0x1e]                       ; CODE XREF=re_protect+336
0000000000004040         test       r14b, r14b
0000000000004043         jne        loc_4150

                     loc_4049:
0000000000004049         cmp        byte [rbx+0x90], 0x0                        ; CODE XREF=re_protect+385
0000000000004050         jne        loc_4178

                     loc_4056:
0000000000004056         mov        rax, qword [rbx+0x98]                       ; CODE XREF=re_protect+425, re_protect+453
000000000000405d         mov        byte [r12+rax], 0x2f
0000000000004062         mov        rbx, qword [rbx+0xa0]
0000000000004069         test       rbx, rbx
000000000000406c         je         loc_41d0

                     loc_4072:
0000000000004072         cmp        byte [r13+0x1f], 0x0                        ; CODE XREF=re_protect+104
0000000000004077         mov        rax, qword [rbx+0x98]
000000000000407e         mov        byte [r12+rax], 0x0
0000000000004083         je         loc_4030

0000000000004085         mov        rax, qword [rbx+0x50]
0000000000004089         mov        rdx, qword [rbx+0x48]
000000000000408d         mov        rsi, r15
0000000000004090         mov        rdi, r12
0000000000004093         mov        qword [rbp+var_60], rdx
0000000000004097         mov        qword [rbp+var_58], rax
000000000000409b         mov        rdx, qword [rbx+0x58]
000000000000409f         mov        rax, qword [rbx+0x60]
00000000000040a3         mov        qword [rbp+var_50], rdx
00000000000040a7         mov        qword [rbp+var_48], rax
00000000000040ab         call       utimens                                     ; utimens
00000000000040b0         test       eax, eax
00000000000040b2         je         loc_4030

00000000000040b8         mov        rsi, r12
00000000000040bb         mov        edi, 0x4
00000000000040c0         xor        r14d, r14d
00000000000040c3         call       quotearg_style                              ; quotearg_style
00000000000040c8         lea        rsi, qword [aFailedToPreser]                ; argument "msgid" for method j_dcgettext, "failed to preserve times for %s"
00000000000040cf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000040d4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000040d6         mov        r12, rax
00000000000040d9         call       j_dcgettext                                 ; dcgettext
00000000000040de         mov        rbx, rax
00000000000040e1         call       j___errno_location                          ; __errno_location
00000000000040e6         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000040e8         mov        rcx, r12
00000000000040eb         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000040ee         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000040f0         xor        eax, eax
00000000000040f2         call       j_error                                     ; error
00000000000040f7         jmp        loc_41d6
00000000000040fc         align      256

                     loc_4100:
0000000000004100         mov        edx, dword [rbx+0x20]                       ; argument "__group" for method j_lchown, CODE XREF=re_protect+117
0000000000004103         mov        esi, dword [rbx+0x1c]                       ; argument "__owner" for method j_lchown
0000000000004106         mov        rdi, r12                                    ; argument "__file" for method j_lchown
0000000000004109         call       j_lchown                                    ; lchown
000000000000410e         test       eax, eax
0000000000004110         je         loc_403b

0000000000004116         mov        rdi, r13
0000000000004119         call       chown_failure_ok                            ; chown_failure_ok
000000000000411e         test       al, al
0000000000004120         mov        r14d, eax
0000000000004123         je         loc_41f7

0000000000004129         mov        edx, dword [rbx+0x20]                       ; argument "__group" for method j_lchown
000000000000412c         mov        esi, 0xffffffff                             ; argument "__owner" for method j_lchown
0000000000004131         mov        rdi, r12                                    ; argument "__file" for method j_lchown
0000000000004134         call       j_lchown                                    ; lchown
0000000000004139         movzx      r14d, byte [r13+0x1e]
000000000000413e         test       r14b, r14b
0000000000004141         je         loc_4049

0000000000004147         nop        word [rax+rax]

                     loc_4150:
0000000000004150         mov        r8d, dword [rbx+0x18]                       ; CODE XREF=re_protect+131
0000000000004154         mov        rdi, qword [rbp+var_68]
0000000000004158         mov        ecx, 0xffffffff
000000000000415d         mov        rdx, r12
0000000000004160         mov        esi, ecx
0000000000004162         call       copy_acl                                    ; copy_acl
0000000000004167         test       eax, eax
0000000000004169         je         loc_4056

000000000000416f         xor        r14d, r14d
0000000000004172         jmp        loc_41d6
0000000000004174         align      8

                     loc_4178:
0000000000004178         mov        esi, dword [rbx+0x18]                       ; argument "__mode" for method j_chmod, CODE XREF=re_protect+144
000000000000417b         mov        rdi, r12                                    ; argument "__file" for method j_chmod
000000000000417e         call       j_chmod                                     ; chmod
0000000000004183         test       eax, eax
0000000000004185         je         loc_4056

000000000000418b         mov        rsi, r12
000000000000418e         mov        edi, 0x4
0000000000004193         call       quotearg_style                              ; quotearg_style
0000000000004198         lea        rsi, qword [aFailedToPreser_13120]          ; "failed to preserve permissions for %s"
000000000000419f         mov        r12, rax
00000000000041a2         mov        edx, 0x5

                     loc_41a7:
00000000000041a7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=re_protect+595
00000000000041a9         call       j_dcgettext                                 ; dcgettext
00000000000041ae         mov        rbx, rax
00000000000041b1         call       j___errno_location                          ; __errno_location
00000000000041b6         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000041b8         mov        rcx, r12
00000000000041bb         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000041be         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000041c0         xor        eax, eax
00000000000041c2         call       j_error                                     ; error
00000000000041c7         jmp        loc_41d6
00000000000041c9         align      16

                     loc_41d0:
00000000000041d0         mov        r14d, 0x1                                   ; CODE XREF=re_protect+94, re_protect+172

                     loc_41d6:
00000000000041d6         mov        rcx, qword [rbp+var_38]                     ; CODE XREF=re_protect+311, re_protect+434, re_protect+519
00000000000041da         xor        rcx, qword [fs:0x28]
00000000000041e3         mov        eax, r14d
00000000000041e6         jne        loc_4215

00000000000041e8         lea        rsp, qword [rbp+var_28]
00000000000041ec         pop        rbx
00000000000041ed         pop        r12
00000000000041ef         pop        r13
00000000000041f1         pop        r14
00000000000041f3         pop        r15
00000000000041f5         pop        rbp
00000000000041f6         ret
                        ; endp

                     loc_41f7:
00000000000041f7         mov        rsi, r12                                    ; CODE XREF=re_protect+355
00000000000041fa         mov        edi, 0x4
00000000000041ff         call       quotearg_style                              ; quotearg_style
0000000000004204         mov        edx, 0x5
0000000000004209         mov        r12, rax
000000000000420c         lea        rsi, qword [aFailedToPreser_130f8]          ; "failed to preserve ownership for %s"
0000000000004213         jmp        loc_41a7

                     loc_4215:
0000000000004215         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=re_protect+550
                        ; endp
000000000000421a         align      32                                          ; End of unwind block (FDE at 0x16514)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000004220         push       r13                                         ; Begin of unwind block (FDE at 0x16544), CODE XREF=main+1878, main+1921, do_copy+1162, __argmatch_die+5
0000000000004222         push       r12
0000000000004224         mov        edx, 0x5
0000000000004229         push       rbp
000000000000422a         push       rbx
000000000000422b         mov        ebp, edi
000000000000422d         sub        rsp, 0x88
0000000000004234         mov        rbx, qword [program_name]                   ; program_name
000000000000423b         mov        rax, qword [fs:0x28]
0000000000004244         mov        qword [rsp+0xa8+var_30], rax
0000000000004249         xor        eax, eax
000000000000424b         test       edi, edi
000000000000424d         je         loc_427d

000000000000424f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000004256         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004258         call       j_dcgettext                                 ; dcgettext
000000000000425d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000004264         mov        rdx, rax
0000000000004267         mov        rcx, rbx
000000000000426a         mov        esi, 0x1
000000000000426f         xor        eax, eax
0000000000004271         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_4276:
0000000000004276         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+1270
0000000000004278         call       j_exit                                      ; exit
                        ; endp

                     loc_427d:
000000000000427d         lea        rsi, qword [aUsageSOptionTS]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [-T] SOURCE DEST\\n  or:  %s [OPTION]... SOURCE... DIRECTORY\\n  or:  %s [OPTION]... -t DIRECTORY SOURCE...\\n", CODE XREF=usage+45
0000000000004284         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004286         call       j_dcgettext                                 ; dcgettext
000000000000428b         mov        r8, rbx
000000000000428e         mov        rcx, rbx
0000000000004291         mov        rdx, rbx
0000000000004294         mov        rsi, rax
0000000000004297         mov        edi, 0x1
000000000000429c         xor        eax, eax
000000000000429e         call       j___printf_chk                              ; __printf_chk
00000000000042a3         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000042aa         lea        rsi, qword [aCopySourceToDe]                ; argument "msgid" for method j_dcgettext, "Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.\\n"
00000000000042b1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000042b6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000042b8         call       j_dcgettext                                 ; dcgettext
00000000000042bd         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000042c0         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000042c3         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000042c8         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000042cf         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
00000000000042d6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000042db         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000042dd         call       j_dcgettext                                 ; dcgettext
00000000000042e2         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000042e5         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000042e8         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000042ed         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000042f4         lea        rsi, qword [aAArchiveSameAs]                ; argument "msgid" for method j_dcgettext, "  -a, --archive                same as -dR --preserve=all\\n      --attributes-only        don't copy the file data, just the attributes\\n      --backup[=CONTROL]       make a backup of each existing destination file\\n  -b                           like --back…"
00000000000042fb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004300         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004302         call       j_dcgettext                                 ; dcgettext
0000000000004307         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000430a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000430d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004312         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004319         lea        rsi, qword [aFForceIfAnExis]                ; argument "msgid" for method j_dcgettext, "  -f, --force                  if an existing destination file cannot be\\n                                 opened, remove it and try again (this option\\n                                 is ignored when the -n option is also used)\\n  -i, --interactive         …"
0000000000004320         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004325         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004327         call       j_dcgettext                                 ; dcgettext
000000000000432c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000432f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004332         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004337         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000433e         lea        rsi, qword [aLLinkHardLinkF]                ; argument "msgid" for method j_dcgettext, "  -l, --link                   hard link files instead of copying\\n  -L, --dereference            always follow symbolic links in SOURCE\\n"
0000000000004345         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000434a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000434c         call       j_dcgettext                                 ; dcgettext
0000000000004351         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004354         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004357         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000435c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004363         lea        rsi, qword [aNNoclobberDoNo]                ; argument "msgid" for method j_dcgettext, "  -n, --no-clobber             do not overwrite an existing file (overrides\\n                                 a previous -i option)\\n  -P, --no-dereference         never follow symbolic links in SOURCE\\n"
000000000000436a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000436f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004371         call       j_dcgettext                                 ; dcgettext
0000000000004376         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004379         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000437c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004381         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004388         lea        rsi, qword [aPSameAsPreserv]                ; argument "msgid" for method j_dcgettext, "  -p                           same as --preserve=mode,ownership,timestamps\\n      --preserve[=ATTR_LIST]   preserve the specified attributes (default:\\n                                 mode,ownership,timestamps), if possible\\n                                …"
000000000000438f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004394         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004396         call       j_dcgettext                                 ; dcgettext
000000000000439b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000439e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000043a1         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000043a6         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000043ad         lea        rsi, qword [aNopreserveattr]                ; argument "msgid" for method j_dcgettext, "      --no-preserve=ATTR_LIST  don't preserve the specified attributes\\n      --parents                use full source file name under DIRECTORY\\n"
00000000000043b4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000043b9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000043bb         call       j_dcgettext                                 ; dcgettext
00000000000043c0         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000043c3         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000043c6         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000043cb         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000043d2         lea        rsi, qword [aRRRecursiveCop]                ; argument "msgid" for method j_dcgettext, "  -R, -r, --recursive          copy directories recursively\\n      --reflink[=WHEN]         control clone/CoW copies. See below\\n      --remove-destination     remove each existing destination file before\\n                                 attempting to open i…"
00000000000043d9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000043de         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000043e0         call       j_dcgettext                                 ; dcgettext
00000000000043e5         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000043e8         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000043eb         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000043f0         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000043f7         lea        rsi, qword [aSparsewhenCont]                ; argument "msgid" for method j_dcgettext, "      --sparse=WHEN            control creation of sparse files. See below\\n      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\\n                                 argument\\n"
00000000000043fe         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004403         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004405         call       j_dcgettext                                 ; dcgettext
000000000000440a         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000440d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004410         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004415         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000441c         lea        rsi, qword [aSSymboliclinkM]                ; argument "msgid" for method j_dcgettext, "  -s, --symbolic-link          make symbolic links instead of copying\\n  -S, --suffix=SUFFIX          override the usual backup suffix\\n  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\\n  -T, --no-target-directory    treat DEST as …"
0000000000004423         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004428         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000442a         call       j_dcgettext                                 ; dcgettext
000000000000442f         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004432         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004435         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000443a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004441         lea        rsi, qword [aUUpdateCopyOnl]                ; argument "msgid" for method j_dcgettext, "  -u, --update                 copy only when the SOURCE file is newer\\n                                 than the destination file or when the\\n                                 destination file is missing\\n  -v, --verbose                explain what is being …"
0000000000004448         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000444d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000444f         call       j_dcgettext                                 ; dcgettext
0000000000004454         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004457         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000445a         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000445f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004466         lea        rsi, qword [aZSetSelinuxSec]                ; argument "msgid" for method j_dcgettext, "  -Z                           set SELinux security context of destination\\n                                 file to default type\\n      --context[=CTX]          like -Z, or if CTX is specified then set the\\n                                 SELinux or SMACK s…"
000000000000446d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004472         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004474         call       j_dcgettext                                 ; dcgettext
0000000000004479         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000447c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000447f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004484         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000448b         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000004492         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004497         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004499         call       j_dcgettext                                 ; dcgettext
000000000000449e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000044a1         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000044a4         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000044a9         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000044b0         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
00000000000044b7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000044bc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000044be         call       j_dcgettext                                 ; dcgettext
00000000000044c3         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000044c6         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000044c9         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000044ce         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000044d5         lea        rsi, qword [aNbyDefaultSpar]                ; argument "msgid" for method j_dcgettext, "\\nBy default, sparse SOURCE files are detected by a crude heuristic and the\\ncorresponding DEST file is made sparse as well.  That is the behavior\\nselected by --sparse=auto.  Specify --sparse=always to create a sparse DEST\\nfile whenever the SOURCE file conta…"
00000000000044dc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000044e1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000044e3         call       j_dcgettext                                 ; dcgettext
00000000000044e8         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000044eb         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000044ee         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000044f3         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000044fa         lea        rsi, qword [aNwhenReflinkal]                ; argument "msgid" for method j_dcgettext, "\\nWhen --reflink[=always] is specified, perform a lightweight copy, where the\\ndata blocks are copied only when modified.  If this is not possible the copy\\nfails, or if --reflink=auto is specified, fall back to a standard copy.\\nUse --reflink=never to ensure …"
0000000000004501         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004506         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004508         call       j_dcgettext                                 ; dcgettext
000000000000450d         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004510         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004513         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004518         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000451f         lea        rsi, qword [aNtheBackupSuff]                ; argument "msgid" for method j_dcgettext, "\\nThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\\nThe version control method may be selected via the --backup option or through\\nthe VERSION_CONTROL environment variable.  Here are the values:\\n\\n"
0000000000004526         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000452b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000452d         call       j_dcgettext                                 ; dcgettext
0000000000004532         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004535         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004538         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000453d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004544         lea        rsi, qword [aNoneOffNeverMa]                ; argument "msgid" for method j_dcgettext, "  none, off       never make backups (even if --backup is given)\\n  numbered, t     make numbered backups\\n  existing, nil   numbered if numbered backups exist, simple otherwise\\n  simple, never   always make simple backups\\n"
000000000000454b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004550         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004552         call       j_dcgettext                                 ; dcgettext
0000000000004557         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000455a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000455d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004562         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004569         lea        rsi, qword [aNasASpecialCas]                ; argument "msgid" for method j_dcgettext, "\\nAs a special case, cp makes a backup of SOURCE when the force and backup\\noptions are given and SOURCE and DEST are the same name for an existing,\\nregular file.\\n"
0000000000004570         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004575         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004577         call       j_dcgettext                                 ; dcgettext
000000000000457c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000457f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004582         lea        rbx, qword [aSettingPermiss+27]             ; 0x12945
0000000000004589         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000458e         lea        rax, qword [aSettingPermiss+30]             ; 0x12948
0000000000004595         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
000000000000459c         mov        qword [rsp+0xa8+var_48], 0x0
00000000000045a5         mov        qword [rsp+0xa8+var_40], 0x0
00000000000045ae         mov        rdx, rsp
00000000000045b1         mov        qword [rsp+0xa8+var_A8], rax
00000000000045b5         lea        rax, qword [aTestInvocation]                ; "test invocation"
00000000000045bc         mov        qword [rsp+0xa8+var_78], rcx
00000000000045c1         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
00000000000045c8         mov        qword [rsp+0xa8+var_A0], rax
00000000000045cd         lea        rax, qword [aCoreutils]                     ; "coreutils"
00000000000045d4         mov        qword [rsp+0xa8+var_68], rcx
00000000000045d9         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
00000000000045e0         mov        qword [rsp+0xa8+var_98], rax
00000000000045e5         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
00000000000045ec         mov        qword [rsp+0xa8+var_58], rcx
00000000000045f1         mov        qword [rsp+0xa8+var_90], rax
00000000000045f6         lea        rax, qword [aSha224sum]                     ; "sha224sum"
00000000000045fd         mov        qword [rsp+0xa8+var_88], rax
0000000000004602         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000004609         mov        qword [rsp+0xa8+var_80], rax
000000000000460e         mov        qword [rsp+0xa8+var_70], rax
0000000000004613         mov        qword [rsp+0xa8+var_60], rax
0000000000004618         mov        qword [rsp+0xa8+var_50], rax
000000000000461d         nop        dword [rax]

                     loc_4620:
0000000000004620         add        rdx, 0x10                                   ; CODE XREF=usage+1053
0000000000004624         mov        rdi, qword [rdx]
0000000000004627         test       rdi, rdi
000000000000462a         je         loc_463f

000000000000462c         mov        ecx, 0x3
0000000000004631         mov        rsi, rbx
0000000000004634         rep  cmpsb byte [rsi], byte [rdi]
0000000000004636         seta       al
0000000000004639         sbb        al, 0x0
000000000000463b         test       al, al
000000000000463d         jne        loc_4620

                     loc_463f:
000000000000463f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+1034
0000000000004643         xor        edi, edi
0000000000004645         mov        edx, 0x5
000000000000464a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000004651         test       r12, r12
0000000000004654         je         loc_471b

000000000000465a         call       j_dcgettext                                 ; dcgettext
000000000000465f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004666         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x129be
000000000000466d         mov        rsi, rax
0000000000004670         mov        edi, 0x1
0000000000004675         xor        eax, eax
0000000000004677         call       j___printf_chk                              ; __printf_chk
000000000000467c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000467e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000004683         call       j_setlocale                                 ; setlocale
0000000000004688         test       rax, rax
000000000000468b         je         loc_46a9

000000000000468d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x129cc
0000000000004694         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000004699         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000469c         call       j_strncmp                                   ; strncmp
00000000000046a1         test       eax, eax
00000000000046a3         jne        loc_47b0

                     loc_46a9:
00000000000046a9         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+1131, usage+1461
00000000000046b0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000046b2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000046b7         call       j_dcgettext                                 ; dcgettext
00000000000046bc         lea        rcx, qword [aSettingPermiss+27]             ; 0x12945
00000000000046c3         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000046ca         mov        rsi, rax
00000000000046cd         mov        edi, 0x1
00000000000046d2         xor        eax, eax
00000000000046d4         call       j___printf_chk                              ; __printf_chk
00000000000046d9         cmp        r12, rbx
00000000000046dc         lea        rcx, qword [aMulticallInvoc+10]             ; 0x12964
00000000000046e3         lea        rbx, qword [aSSUnbackupn+20]                ; 0x15046
00000000000046ea         cmove      rbx, rcx

                     loc_46ee:
00000000000046ee         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1412
00000000000046f5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000046f7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000046fc         call       j_dcgettext                                 ; dcgettext
0000000000004701         mov        rcx, rbx
0000000000004704         mov        rsi, rax
0000000000004707         mov        rdx, r12
000000000000470a         mov        edi, 0x1
000000000000470f         xor        eax, eax
0000000000004711         call       j___printf_chk                              ; __printf_chk
0000000000004716         jmp        loc_4276

                     loc_471b:
000000000000471b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+1076
0000000000004720         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004727         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x129be
000000000000472e         mov        rsi, rax
0000000000004731         mov        edi, 0x1
0000000000004736         xor        eax, eax
0000000000004738         call       j___printf_chk                              ; __printf_chk
000000000000473d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000473f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000004744         call       j_setlocale                                 ; setlocale
0000000000004749         test       rax, rax
000000000000474c         je         loc_4766

000000000000474e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x129cc
0000000000004755         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
000000000000475a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000475d         call       j_strncmp                                   ; strncmp
0000000000004762         test       eax, eax
0000000000004764         jne        loc_47a9

                     loc_4766:
0000000000004766         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+1324
000000000000476d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004772         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004774         lea        r12, qword [aSettingPermiss+27]             ; 0x12945
000000000000477b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x12964
0000000000004782         call       j_dcgettext                                 ; dcgettext
0000000000004787         lea        rcx, qword [aSettingPermiss+27]             ; 0x12945
000000000000478e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004795         mov        rsi, rax
0000000000004798         mov        edi, 0x1
000000000000479d         xor        eax, eax
000000000000479f         call       j___printf_chk                              ; __printf_chk
00000000000047a4         jmp        loc_46ee

                     loc_47a9:
00000000000047a9         lea        r12, qword [aSettingPermiss+27]             ; 0x12945, CODE XREF=usage+1348

                     loc_47b0:
00000000000047b0         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+1155
00000000000047b7         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
00000000000047be         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000047c0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000047c5         call       j_dcgettext                                 ; dcgettext
00000000000047ca         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
00000000000047cd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000047d0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000047d5         jmp        loc_46a9
00000000000047da         align      32                                          ; End of unwind block (FDE at 0x16544)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_28: int8_t, -40
        ;    var_38: int64_t, -56
        ;    var_B8: int32_t, -184
        ;    var_D0: int8_t, -208
        ;    var_D8: int64_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E1: int8_t, -225
        ;    var_E2: int8_t, -226
        ;    var_F8: int64_t, -248
        ;    var_100: int64_t, -256
        ;    var_101: int8_t, -257
        ;    var_108: int64_t, -264
        ;    var_110: int64_t, -272


                     do_copy:
00000000000047e0         push       rbp                                         ; Begin of unwind block (FDE at 0x16570), CODE XREF=main+1534
00000000000047e1         mov        rbp, rsp
00000000000047e4         push       r15
00000000000047e6         push       r14
00000000000047e8         push       r13
00000000000047ea         push       r12
00000000000047ec         movsxd     r12, edi
00000000000047ef         push       rbx
00000000000047f0         mov        rbx, rsi
00000000000047f3         sub        rsp, 0xe8
00000000000047fa         mov        qword [rbp+var_F8], rdx
0000000000004801         mov        byte [rbp+var_E2], 0x0
0000000000004808         mov        rax, qword [fs:0x28]
0000000000004811         mov        qword [rbp+var_38], rax
0000000000004815         xor        eax, eax
0000000000004817         test       dword [r8+0x14], 0xffff00
000000000000481f         setne      al
0000000000004822         test       rdx, rdx
0000000000004825         sete       dl
0000000000004828         movzx      edx, dl
000000000000482b         cmp        edx, r12d
000000000000482e         jge        loc_4c93

0000000000004834         test       cl, cl
0000000000004836         mov        r14, r8
0000000000004839         je         loc_4936

000000000000483f         cmp        qword [rbp+var_F8], 0x0
0000000000004847         jne        loc_4c6f

000000000000484d         cmp        r12d, 0x2
0000000000004851         jg         loc_4c30

0000000000004857         mov        rdi, qword [rbx+r12*8-8]
000000000000485c         lea        rdx, qword [rbp+var_E2]
0000000000004863         lea        rsi, qword [rbp+var_D0]
000000000000486a         movzx      ecx, al
000000000000486d         call       target_directory_operand                    ; target_directory_operand

                     loc_4872:
0000000000004872         cmp        byte [parents_option], 0x0                  ; parents_option, CODE XREF=do_copy+962, do_copy+1010, do_copy+1099
0000000000004879         mov        r12, qword [rbx]
000000000000487c         mov        rbx, qword [rbx+8]
0000000000004880         jne        loc_4cbc

0000000000004886         cmp        byte [r14+0x16], 0x0
000000000000488b         je         loc_48f4

000000000000488d         mov        r13d, dword [r14]
0000000000004890         test       r13d, r13d
0000000000004893         je         loc_48f4

0000000000004895         mov        rsi, rbx                                    ; argument "__s2" for method j_strcmp
0000000000004898         mov        rdi, r12                                    ; argument "__s1" for method j_strcmp
000000000000489b         call       j_strcmp                                    ; strcmp
00000000000048a0         test       eax, eax
00000000000048a2         jne        loc_48f4

00000000000048a4         cmp        byte [rbp+var_E2], 0x0
00000000000048ab         jne        loc_48f4

00000000000048ad         mov        eax, dword [rbp+var_B8]
00000000000048b3         and        eax, 0xf000
00000000000048b8         cmp        eax, 0x8000
00000000000048bd         jne        loc_48f4

00000000000048bf         mov        rsi, rbx
00000000000048c2         mov        edi, 0xffffff9c
00000000000048c7         mov        edx, r13d
00000000000048ca         call       find_backup_file_name                       ; find_backup_file_name
00000000000048cf         mov        rsi, r14
00000000000048d2         lea        r14, qword [x_tmp.7353]                     ; x_tmp.7353
00000000000048d9         lea        rdi, qword [x_tmp.7353]                     ; x_tmp.7353
00000000000048e0         mov        ecx, 0x14
00000000000048e5         mov        rbx, rax
00000000000048e8         rep movsd  dword [rdi], dword [rsi]
00000000000048ea         mov        dword [x_tmp.7353], 0x0                     ; x_tmp.7353

                     loc_48f4:
00000000000048f4         lea        r8, qword [rbp+var_D8]                      ; CODE XREF=do_copy+171, do_copy+179, do_copy+194, do_copy+203, do_copy+221
00000000000048fb         xor        r9d, r9d
00000000000048fe         mov        rcx, r14
0000000000004901         xor        edx, edx
0000000000004903         mov        rsi, rbx
0000000000004906         mov        rdi, r12
0000000000004909         call       copy                                        ; copy
000000000000490e         mov        r15d, eax

                     loc_4911:
0000000000004911         mov        rcx, qword [rbp+var_38]                     ; CODE XREF=do_copy+606
0000000000004915         xor        rcx, qword [fs:0x28]
000000000000491e         mov        eax, r15d
0000000000004921         jne        loc_4cb7

0000000000004927         lea        rsp, qword [rbp+var_28]
000000000000492b         pop        rbx
000000000000492c         pop        r12
000000000000492e         pop        r13
0000000000004930         pop        r14
0000000000004932         pop        r15
0000000000004934         pop        rbp
0000000000004935         ret
                        ; endp

                     loc_4936:
0000000000004936         cmp        qword [rbp+var_F8], 0x0                     ; CODE XREF=do_copy+89
000000000000493e         je         loc_4b9e

                     loc_4944:
0000000000004944         cmp        r12d, 0x1                                   ; CODE XREF=do_copy+1093
0000000000004948         jne        loc_4b89

                     loc_494e:
000000000000494e         lea        eax, dword [r12-1]                          ; CODE XREF=do_copy+953
0000000000004953         mov        r15d, 0x1
0000000000004959         lea        rax, qword [rbx+rax*8+8]
000000000000495e         mov        qword [rbp+var_100], rax
0000000000004965         lea        rax, qword [rbp+var_E1]
000000000000496c         mov        qword [rbp+var_110], rax
0000000000004973         lea        rax, qword [rbp+var_D8]
000000000000497a         mov        qword [rbp+var_108], rax
0000000000004981         jmp        loc_4a44
0000000000004986         align      16

                     loc_4990:
0000000000004990         call       j_strlen                                    ; strlen, CODE XREF=do_copy+649
0000000000004995         lea        rdx, qword [rax+1]                          ; argument "__n" for method j_memcpy
0000000000004999         add        rax, 0x1f
000000000000499d         mov        rsi, r13                                    ; argument "__src" for method j_memcpy
00000000000049a0         and        rax, 0xfffffffffffffff0
00000000000049a4         sub        rsp, rax
00000000000049a7         lea        rdi, qword [rsp+0x110+var_101]
00000000000049ac         and        rdi, 0xfffffffffffffff0                     ; argument "__dest" for method j_memcpy
00000000000049b0         call       j_memcpy                                    ; memcpy
00000000000049b5         mov        rdi, rax
00000000000049b8         mov        r12, rax
00000000000049bb         call       strip_trailing_slashes                      ; strip_trailing_slashes
00000000000049c0         mov        rdx, qword [rbp+var_108]
00000000000049c7         mov        rdi, qword [rbp+var_F8]
00000000000049ce         mov        rsi, r12
00000000000049d1         call       file_name_concat                            ; file_name_concat
00000000000049d6         cmp        byte [r14+0x2e], 0x0
00000000000049db         mov        rsi, qword [rbp+var_D8]
00000000000049e2         mov        r12, rax
00000000000049e5         lea        rax, qword [aSSn]                           ; "%s -> %s\\n"
00000000000049ec         mov        edx, 0x0
00000000000049f1         lea        rcx, qword [rbp+var_E0]
00000000000049f8         lea        r8, qword [rbp+var_E2]
00000000000049ff         mov        r9, r14
0000000000004a02         mov        rdi, r12
0000000000004a05         cmovne     rdx, rax
0000000000004a09         sub        rsi, r12
0000000000004a0c         call       make_dir_parents_private                    ; make_dir_parents_private
0000000000004a11         test       al, al
0000000000004a13         jne        loc_4ad7

0000000000004a19         movzx      eax, byte [parents_option]                  ; parents_option
0000000000004a20         xor        r15d, r15d

                     loc_4a23:
0000000000004a23         test       al, al                                      ; CODE XREF=do_copy+844
0000000000004a25         jne        loc_4b4b

                     loc_4a2b:
0000000000004a2b         mov        rdi, r12                                    ; CODE XREF=do_copy+800, do_copy+887
0000000000004a2e         add        rbx, 0x8
0000000000004a32         call       sub_2e10                                    ; sub_2e10
0000000000004a37         cmp        qword [rbp+var_100], rbx
0000000000004a3e         je         loc_4911

                     loc_4a44:
0000000000004a44         cmp        byte [remove_trailing_slashes], 0x0         ; remove_trailing_slashes, CODE XREF=do_copy+417
0000000000004a4b         mov        qword [rbp+var_D8], 0x0
0000000000004a56         mov        r13, qword [rbx]
0000000000004a59         jne        loc_4b60

                     loc_4a5f:
0000000000004a5f         cmp        byte [parents_option], 0x0                  ; parents_option, CODE XREF=do_copy+904
0000000000004a66         mov        rdi, r13
0000000000004a69         jne        loc_4990

0000000000004a6f         call       last_component                              ; last_component
0000000000004a74         mov        rdi, rax                                    ; argument "__s" for method j_strlen
0000000000004a77         mov        r12, rax
0000000000004a7a         call       j_strlen                                    ; strlen
0000000000004a7f         lea        rdx, qword [rax+1]                          ; argument "__n" for method j_memcpy
0000000000004a83         add        rax, 0x1f
0000000000004a87         mov        rsi, r12                                    ; argument "__src" for method j_memcpy
0000000000004a8a         and        rax, 0xfffffffffffffff0
0000000000004a8e         sub        rsp, rax
0000000000004a91         lea        rdi, qword [rsp+0x110+var_101]
0000000000004a96         and        rdi, 0xfffffffffffffff0                     ; argument "__dest" for method j_memcpy
0000000000004a9a         call       j_memcpy                                    ; memcpy
0000000000004a9f         mov        rdi, rax
0000000000004aa2         mov        r12, rax
0000000000004aa5         call       strip_trailing_slashes                      ; strip_trailing_slashes
0000000000004aaa         lea        rdi, qword [aTargetSIsNotAD+29]             ; 0x12a38
0000000000004ab1         mov        ecx, 0x3
0000000000004ab6         mov        rsi, r12
0000000000004ab9         rep  cmpsb byte [rsi], byte [rdi]
0000000000004abb         seta       al
0000000000004abe         sbb        al, 0x0
0000000000004ac0         test       al, al
0000000000004ac2         jne        loc_4b70

0000000000004ac8         mov        rdi, qword [rbp+var_F8]
0000000000004acf         call       xstrdup                                     ; xstrdup
0000000000004ad4         mov        r12, rax

                     loc_4ad7:
0000000000004ad7         movzx      edx, byte [rbp+var_E2]                      ; CODE XREF=do_copy+563, do_copy+932
0000000000004ade         mov        r8, qword [rbp+var_110]
0000000000004ae5         xor        r9d, r9d
0000000000004ae8         mov        rcx, r14
0000000000004aeb         mov        rsi, r12
0000000000004aee         mov        rdi, r13
0000000000004af1         call       copy                                        ; copy
0000000000004af6         and        r15d, eax
0000000000004af9         cmp        byte [parents_option], 0x0                  ; parents_option
0000000000004b00         je         loc_4a2b

0000000000004b06         mov        rsi, qword [rbp+var_D8]
0000000000004b0d         mov        rdx, qword [rbp+var_E0]
0000000000004b14         mov        rcx, r14
0000000000004b17         mov        rdi, r12
0000000000004b1a         sub        rsi, r12
0000000000004b1d         call       re_protect                                  ; re_protect
0000000000004b22         and        r15d, eax
0000000000004b25         movzx      eax, byte [parents_option]                  ; parents_option
0000000000004b2c         jmp        loc_4a23
0000000000004b31         align      8

                     loc_4b38:
0000000000004b38         mov        rax, qword [rdi+0xa0]                       ; CODE XREF=do_copy+885
0000000000004b3f         mov        qword [rbp+var_E0], rax
0000000000004b46         call       sub_2e10                                    ; sub_2e10

                     loc_4b4b:
0000000000004b4b         mov        rdi, qword [rbp+var_E0]                     ; CODE XREF=do_copy+581
0000000000004b52         test       rdi, rdi
0000000000004b55         jne        loc_4b38

0000000000004b57         jmp        loc_4a2b
0000000000004b5c         align      32

                     loc_4b60:
0000000000004b60         mov        rdi, r13                                    ; CODE XREF=do_copy+633
0000000000004b63         call       strip_trailing_slashes                      ; strip_trailing_slashes
0000000000004b68         jmp        loc_4a5f
0000000000004b6d         align      16

                     loc_4b70:
0000000000004b70         mov        rdi, qword [rbp+var_F8]                     ; CODE XREF=do_copy+738
0000000000004b77         mov        rsi, r12
0000000000004b7a         xor        edx, edx
0000000000004b7c         call       file_name_concat                            ; file_name_concat
0000000000004b81         mov        r12, rax
0000000000004b84         jmp        loc_4ad7

                     loc_4b89:
0000000000004b89         mov        rdi, r14                                    ; CODE XREF=do_copy+360
0000000000004b8c         call       dest_info_init                              ; dest_info_init
0000000000004b91         mov        rdi, r14
0000000000004b94         call       src_info_init                               ; src_info_init
0000000000004b99         jmp        loc_494e

                     loc_4b9e:
0000000000004b9e         cmp        r12d, 0x1                                   ; CODE XREF=do_copy+350
0000000000004ba2         je         loc_4872

0000000000004ba8         movsxd     rdx, r12d
0000000000004bab         movzx      ecx, al
0000000000004bae         lea        r13, qword [rsi+rdx*8-8]
0000000000004bb3         lea        rdx, qword [rbp+var_E2]
0000000000004bba         lea        rsi, qword [rbp+var_D0]
0000000000004bc1         mov        rdi, qword [r13]
0000000000004bc5         call       target_directory_operand                    ; target_directory_operand
0000000000004bca         test       al, al
0000000000004bcc         jne        loc_4c10

0000000000004bce         cmp        r12d, 0x2
0000000000004bd2         je         loc_4872

0000000000004bd8         mov        rsi, qword [r13]
0000000000004bdc         mov        edi, 0x4
0000000000004be1         call       quotearg_style                              ; quotearg_style
0000000000004be6         lea        rsi, qword [aTargetSIsNotAD]                ; argument "msgid" for method j_dcgettext, "target %s is not a directory"
0000000000004bed         mov        rbx, rax
0000000000004bf0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004bf5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004bf7         call       j_dcgettext                                 ; dcgettext
0000000000004bfc         mov        rcx, rbx
0000000000004bff         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004c02         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004c04         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000004c09         xor        eax, eax
0000000000004c0b         call       j_error                                     ; error

                     loc_4c10:
0000000000004c10         sub        r12d, 0x1                                   ; CODE XREF=do_copy+1004
0000000000004c14         movsxd     rax, r12d
0000000000004c17         mov        rax, qword [rbx+rax*8]
0000000000004c1b         test       rax, rax
0000000000004c1e         mov        qword [rbp+var_F8], rax
0000000000004c25         jne        loc_4944

0000000000004c2b         jmp        loc_4872

                     loc_4c30:
0000000000004c30         mov        rsi, qword [rsi+0x10]                       ; CODE XREF=do_copy+113
0000000000004c34         mov        edi, 0x4
0000000000004c39         call       quotearg_style                              ; quotearg_style
0000000000004c3e         lea        rsi, qword [aExtraOperandS]                 ; "extra operand %s"
0000000000004c45         mov        rbx, rax
0000000000004c48         mov        edx, 0x5

                     loc_4c4d:
0000000000004c4d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=do_copy+1237
0000000000004c4f         call       j_dcgettext                                 ; dcgettext
0000000000004c54         mov        rcx, rbx
0000000000004c57         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004c5a         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004c5c         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000004c5e         xor        eax, eax
0000000000004c60         call       j_error                                     ; error

                     loc_4c65:
0000000000004c65         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=do_copy+1277
0000000000004c6a         call       usage                                       ; usage

                     loc_4c6f:
0000000000004c6f         lea        rsi, qword [aCannotCombineT]                ; argument "msgid" for method j_dcgettext, "cannot combine --target-directory (-t) and --no-target-directory (-T)", CODE XREF=do_copy+103
0000000000004c76         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c7b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c7d         call       j_dcgettext                                 ; dcgettext
0000000000004c82         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004c84         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004c87         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000004c8c         xor        eax, eax
0000000000004c8e         call       j_error                                     ; error

                     loc_4c93:
0000000000004c93         sub        r12d, 0x1                                   ; CODE XREF=do_copy+78
0000000000004c97         jne        loc_4cdf

0000000000004c99         mov        rsi, qword [rsi]
0000000000004c9c         mov        edi, 0x4
0000000000004ca1         call       quotearg_style                              ; quotearg_style
0000000000004ca6         mov        edx, 0x5
0000000000004cab         mov        rbx, rax
0000000000004cae         lea        rsi, qword [aMissingDestina]                ; "missing destination file operand after %s"
0000000000004cb5         jmp        loc_4c4d

                     loc_4cb7:
0000000000004cb7         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=do_copy+321
                        ; endp

                     loc_4cbc:
0000000000004cbc         lea        rsi, qword [aWithParentsThe]                ; "with --parents, the destination must be a directory", CODE XREF=do_copy+160
0000000000004cc3         mov        edx, 0x5

                     loc_4cc8:
0000000000004cc8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=do_copy+1291
0000000000004cca         call       j_dcgettext                                 ; dcgettext
0000000000004ccf         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004cd1         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004cd4         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000004cd6         xor        eax, eax
0000000000004cd8         call       j_error                                     ; error
0000000000004cdd         jmp        loc_4c65

                     loc_4cdf:
0000000000004cdf         mov        edx, 0x5                                    ; CODE XREF=do_copy+1207
0000000000004ce4         lea        rsi, qword [aMissingFileOpe]                ; "missing file operand"
0000000000004ceb         jmp        loc_4cc8
0000000000004ced         align      16                                          ; End of unwind block (FDE at 0x16570)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     writable_destination:
0000000000004cf0         and        esi, 0xf000                                 ; Begin of unwind block (FDE at 0x165fc), CODE XREF=overwrite_ok.isra.12+42, copy_internal+4667
0000000000004cf6         cmp        esi, 0xa000
0000000000004cfc         je         loc_4d18

0000000000004cfe         push       rbx
0000000000004cff         mov        rbx, rdi
0000000000004d02         call       can_write_any_file                          ; can_write_any_file
0000000000004d07         test       al, al
0000000000004d09         je         loc_4d20

0000000000004d0b         mov        eax, 0x1
0000000000004d10         pop        rbx
0000000000004d11         ret
                        ; endp
0000000000004d12         align      8

                     loc_4d18:
0000000000004d18         mov        eax, 0x1                                    ; CODE XREF=writable_destination+12
0000000000004d1d         ret
                        ; endp
0000000000004d1e         align      32

                     loc_4d20:
0000000000004d20         mov        rdi, rbx                                    ; argument "__name" for method j_euidaccess, CODE XREF=writable_destination+25
0000000000004d23         mov        esi, 0x2                                    ; argument "__type" for method j_euidaccess
0000000000004d28         call       j_euidaccess                                ; euidaccess
0000000000004d2d         test       eax, eax
0000000000004d2f         sete       al
0000000000004d32         pop        rbx
0000000000004d33         ret
                        ; endp
0000000000004d34         align      64                                          ; End of unwind block (FDE at 0x165fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     write_zeros:
0000000000004d40         cmp        qword [zeros.7570], 0x0                     ; Begin of unwind block (FDE at 0x16620), zeros.7570, CODE XREF=copy_internal+14769, copy_internal+15547
0000000000004d48         push       r12
0000000000004d4a         mov        r12d, edi
0000000000004d4d         push       rbp
0000000000004d4e         push       rbx
0000000000004d4f         mov        rbx, rsi
0000000000004d52         je         loc_4da8

                     loc_4d54:
0000000000004d54         test       rbx, rbx                                    ; CODE XREF=write_zeros+133, write_zeros+160
0000000000004d57         jne        loc_4d65

0000000000004d59         jmp        loc_4d98
0000000000004d5b         align      32

                     loc_4d60:
0000000000004d60         sub        rbx, rax                                    ; CODE XREF=write_zeros+76
0000000000004d63         je         loc_4d98

                     loc_4d65:
0000000000004d65         cmp        qword [mask.7898+8], rbx                    ; 0x21a018, CODE XREF=write_zeros+23
0000000000004d6c         mov        rbp, rbx
0000000000004d6f         mov        rsi, qword [zeros.7570]                     ; zeros.7570
0000000000004d76         cmovbe     rbp, qword [mask.7898+8]                    ; 0x21a018
0000000000004d7e         mov        edi, r12d
0000000000004d81         mov        rdx, rbp
0000000000004d84         call       full_write                                  ; full_write
0000000000004d89         cmp        rax, rbp
0000000000004d8c         je         loc_4d60

0000000000004d8e         pop        rbx
0000000000004d8f         xor        eax, eax
0000000000004d91         pop        rbp
0000000000004d92         pop        r12
0000000000004d94         ret
                        ; endp
0000000000004d95         align      8

                     loc_4d98:
0000000000004d98         pop        rbx                                         ; CODE XREF=write_zeros+25, write_zeros+35
0000000000004d99         mov        eax, 0x1
0000000000004d9e         pop        rbp
0000000000004d9f         pop        r12
0000000000004da1         ret
                        ; endp
0000000000004da2         align      8

                     loc_4da8:
0000000000004da8         mov        rdi, qword [mask.7898+8]                    ; argument "__nmemb" for method j_calloc, 0x21a018, CODE XREF=write_zeros+18
0000000000004daf         mov        esi, 0x1                                    ; argument "__size" for method j_calloc
0000000000004db4         call       j_calloc                                    ; calloc
0000000000004db9         test       rax, rax
0000000000004dbc         je         loc_4dc7

0000000000004dbe         mov        qword [zeros.7570], rax                     ; zeros.7570
0000000000004dc5         jmp        loc_4d54

                     loc_4dc7:
0000000000004dc7         lea        rax, qword [fallback.7572]                  ; fallback.7572, CODE XREF=write_zeros+124
0000000000004dce         mov        qword [mask.7898+8], 0x400                  ; 0x21a018
0000000000004dd9         mov        qword [zeros.7570], rax                     ; zeros.7570
0000000000004de0         jmp        loc_4d54
0000000000004de5         align      16                                          ; End of unwind block (FDE at 0x16620)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     punch_hole:
0000000000004df0         push       rbx                                         ; Begin of unwind block (FDE at 0x1665c), CODE XREF=create_hole+75, copy_internal+15484
0000000000004df1         mov        rcx, rdx
0000000000004df4         mov        rdx, rsi
0000000000004df7         mov        esi, 0x3
0000000000004dfc         call       j_fallocate                                 ; fallocate
0000000000004e01         test       eax, eax
0000000000004e03         mov        ebx, eax
0000000000004e05         js         loc_4e10

                     loc_4e07:
0000000000004e07         mov        eax, ebx                                    ; CODE XREF=punch_hole+47
0000000000004e09         pop        rbx
0000000000004e0a         ret
                        ; endp
0000000000004e0b         align      16

                     loc_4e10:
0000000000004e10         call       j___errno_location                          ; __errno_location, CODE XREF=punch_hole+21
0000000000004e15         mov        eax, dword [rax]
0000000000004e17         cmp        eax, 0x26
0000000000004e1a         je         loc_4e21

0000000000004e1c         cmp        eax, 0x5f
0000000000004e1f         jne        loc_4e07

                     loc_4e21:
0000000000004e21         xor        ebx, ebx                                    ; CODE XREF=punch_hole+42
0000000000004e23         mov        eax, ebx
0000000000004e25         pop        rbx
0000000000004e26         ret
                        ; endp
0000000000004e27         align      16                                          ; End of unwind block (FDE at 0x1665c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_verbose:
0000000000004e30         push       r12                                         ; Begin of unwind block (FDE at 0x166a8), CODE XREF=copy_internal+2619, copy_internal+5063, copy_internal+9063, copy_internal+11197
0000000000004e32         push       rbp
0000000000004e33         mov        r12, rdi
0000000000004e36         push       rbx
0000000000004e37         mov        edi, 0x1
0000000000004e3c         mov        rbx, rdx
0000000000004e3f         mov        rdx, rsi
0000000000004e42         mov        esi, 0x4
0000000000004e47         call       quotearg_n_style                            ; quotearg_n_style
0000000000004e4c         xor        edi, edi
0000000000004e4e         mov        rdx, r12
0000000000004e51         mov        esi, 0x4
0000000000004e56         mov        rbp, rax
0000000000004e59         call       quotearg_n_style                            ; quotearg_n_style
0000000000004e5e         lea        rsi, qword [aSS]                            ; "%s -> %s"
0000000000004e65         mov        rdx, rax
0000000000004e68         mov        rcx, rbp
0000000000004e6b         xor        eax, eax
0000000000004e6d         mov        edi, 0x1
0000000000004e72         call       j___printf_chk                              ; __printf_chk
0000000000004e77         test       rbx, rbx
0000000000004e7a         je         loc_4eb1

0000000000004e7c         mov        rsi, rbx
0000000000004e7f         mov        edi, 0x4
0000000000004e84         call       quotearg_style                              ; quotearg_style
0000000000004e89         lea        rsi, qword [aBackupS]                       ; argument "msgid" for method j_dcgettext, " (backup: %s)"
0000000000004e90         mov        rbx, rax
0000000000004e93         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004e98         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004e9a         call       j_dcgettext                                 ; dcgettext
0000000000004e9f         mov        rdx, rbx
0000000000004ea2         mov        rsi, rax
0000000000004ea5         mov        edi, 0x1
0000000000004eaa         xor        eax, eax
0000000000004eac         call       j___printf_chk                              ; __printf_chk

                     loc_4eb1:
0000000000004eb1         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=emit_verbose+74
0000000000004eb8         mov        rax, qword [rdi+0x28]
0000000000004ebc         cmp        rax, qword [rdi+0x30]
0000000000004ec0         jae        loc_4ed8

0000000000004ec2         lea        rdx, qword [rax+1]
0000000000004ec6         mov        qword [rdi+0x28], rdx
0000000000004eca         mov        byte [rax], 0xa
0000000000004ecd         pop        rbx
0000000000004ece         pop        rbp
0000000000004ecf         pop        r12
0000000000004ed1         ret
                        ; endp
0000000000004ed2         align      8

                     loc_4ed8:
0000000000004ed8         pop        rbx                                         ; CODE XREF=emit_verbose+144
0000000000004ed9         pop        rbp
0000000000004eda         pop        r12
0000000000004edc         mov        esi, 0xa                                    ; argument #2 for method j___overflow
0000000000004ee1         jmp        j___overflow                                ; __overflow
                        ; endp
0000000000004ee6         align      16                                          ; End of unwind block (FDE at 0x166a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     create_hard_link:
0000000000004ef0         push       r13                                         ; Begin of unwind block (FDE at 0x166e0), CODE XREF=copy_internal+756, copy_internal+1391, copy_internal+5479
0000000000004ef2         push       r12
0000000000004ef4         movzx      r9d, dl
0000000000004ef8         push       rbp
0000000000004ef9         push       rbx
0000000000004efa         mov        edx, 0xffffff9c
0000000000004eff         mov        r13, rdi
0000000000004f02         mov        r12, rsi
0000000000004f05         mov        ebp, ecx
0000000000004f07         sub        rsp, 0x10
0000000000004f0b         test       r8b, r8b
0000000000004f0e         mov        rcx, rsi
0000000000004f11         setne      r8b
0000000000004f15         push       0xffffffffffffffff
0000000000004f17         mov        rsi, rdi
0000000000004f1a         movzx      r8d, r8b
0000000000004f1e         mov        edi, edx
0000000000004f20         shl        r8d, 0xa
0000000000004f24         call       force_linkat                                ; force_linkat
0000000000004f29         test       eax, eax
0000000000004f2b         mov        ebx, eax
0000000000004f2d         pop        rdx
0000000000004f2e         pop        rcx
0000000000004f2f         jg         loc_4f98

0000000000004f31         shr        ebx, 0x1f
0000000000004f34         and        bl, bpl
0000000000004f37         jne        loc_4f50

0000000000004f39         add        rsp, 0x8
0000000000004f3d         mov        ebx, 0x1
0000000000004f42         mov        eax, ebx
0000000000004f44         pop        rbx
0000000000004f45         pop        rbp
0000000000004f46         pop        r12
0000000000004f48         pop        r13
0000000000004f4a         ret
                        ; endp
0000000000004f4b         align      16

                     loc_4f50:
0000000000004f50         mov        rsi, r12                                    ; CODE XREF=create_hard_link+71
0000000000004f53         mov        edi, 0x4
0000000000004f58         call       quotearg_style                              ; quotearg_style
0000000000004f5d         lea        rsi, qword [aRemovedSn]                     ; argument "msgid" for method j_dcgettext, "removed %s\\n"
0000000000004f64         mov        rbp, rax
0000000000004f67         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004f6c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f6e         call       j_dcgettext                                 ; dcgettext
0000000000004f73         mov        rdx, rbp
0000000000004f76         mov        rsi, rax
0000000000004f79         mov        edi, 0x1
0000000000004f7e         xor        eax, eax
0000000000004f80         call       j___printf_chk                              ; __printf_chk
0000000000004f85         add        rsp, 0x8
0000000000004f89         mov        eax, ebx
0000000000004f8b         pop        rbx
0000000000004f8c         pop        rbp
0000000000004f8d         pop        r12
0000000000004f8f         pop        r13
0000000000004f91         ret
                        ; endp
0000000000004f92         align      8

                     loc_4f98:
0000000000004f98         mov        rdx, r13                                    ; CODE XREF=create_hard_link+63
0000000000004f9b         mov        esi, 0x4
0000000000004fa0         mov        edi, 0x1
0000000000004fa5         call       quotearg_n_style                            ; quotearg_n_style
0000000000004faa         mov        rdx, r12
0000000000004fad         mov        esi, 0x4
0000000000004fb2         xor        edi, edi
0000000000004fb4         mov        r13, rax
0000000000004fb7         call       quotearg_n_style                            ; quotearg_n_style
0000000000004fbc         lea        rsi, qword [aCannotCreateHa]                ; argument "msgid" for method j_dcgettext, "cannot create hard link %s to %s"
0000000000004fc3         mov        rbp, rax
0000000000004fc6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004fcb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004fcd         call       j_dcgettext                                 ; dcgettext
0000000000004fd2         mov        r8, r13
0000000000004fd5         mov        rcx, rbp
0000000000004fd8         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004fdb         mov        esi, ebx                                    ; argument "__errnum" for method j_error
0000000000004fdd         xor        eax, eax
0000000000004fdf         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000004fe1         call       j_error                                     ; error
0000000000004fe6         xor        ebx, ebx
0000000000004fe8         add        rsp, 0x8
0000000000004fec         mov        eax, ebx
0000000000004fee         pop        rbx
0000000000004fef         pop        rbp
0000000000004ff0         pop        r12
0000000000004ff2         pop        r13
0000000000004ff4         ret
                        ; endp
0000000000004ff5         align      4096                                        ; End of unwind block (FDE at 0x166e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_32: int8_t, -50
        ;    var_3C: int8_t, -60


                     overwrite_ok.isra.12:
0000000000005000         push       r14                                         ; Begin of unwind block (FDE at 0x16748), CODE XREF=copy_internal+3180, copy_internal+4727
0000000000005002         push       r13
0000000000005004         mov        r13, rdi
0000000000005007         push       r12
0000000000005009         push       rbp
000000000000500a         mov        rbp, rdx
000000000000500d         push       rbx
000000000000500e         mov        rbx, rsi
0000000000005011         mov        rdi, rbx
0000000000005014         sub        rsp, 0x20
0000000000005018         mov        esi, dword [rdx]
000000000000501a         mov        rax, qword [fs:0x28]
0000000000005023         mov        qword [rsp+0x48+var_30], rax
0000000000005028         xor        eax, eax
000000000000502a         call       writable_destination                        ; writable_destination
000000000000502f         test       al, al
0000000000005031         jne        loc_50c8

0000000000005037         mov        edi, dword [rbp]                            ; argument "mode" for method strmode
000000000000503a         lea        r12, qword [rsp+0x48+var_3C]
000000000000503f         mov        rsi, r12                                    ; argument "str" for method strmode
0000000000005042         call       strmode                                     ; strmode
0000000000005047         mov        ebp, dword [rbp]
000000000000504a         mov        rsi, rbx
000000000000504d         mov        edi, 0x4
0000000000005052         mov        byte [rsp+0x48+var_32], 0x0
0000000000005057         call       quotearg_style                              ; quotearg_style
000000000000505c         and        ebp, 0xfff
0000000000005062         cmp        byte [r13+0x18], 0x0
0000000000005067         mov        r14, rax
000000000000506a         mov        rbx, qword [program_name]                   ; program_name
0000000000005071         mov        edx, 0x5
0000000000005076         jne        loc_5086

0000000000005078         test       dword [r13+0x14], 0xffff00
0000000000005080         je         loc_5130

                     loc_5086:
0000000000005086         lea        rsi, qword [aSReplaceSOverr]                ; argument "msgid" for method j_dcgettext, "%s: replace %s, overriding mode %04lo (%s)? ", CODE XREF=overwrite_ok.isra.12+118
000000000000508d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000508f         call       j_dcgettext                                 ; dcgettext
0000000000005094         mov        rdx, rax

                     loc_5097:
0000000000005097         sub        rsp, 0x8                                    ; CODE XREF=overwrite_ok.isra.12+321
000000000000509b         add        r12, 0x1
000000000000509f         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000050a6         push       r12
00000000000050a8         mov        r9, rbp
00000000000050ab         mov        r8, r14
00000000000050ae         mov        rcx, rbx
00000000000050b1         mov        esi, 0x1
00000000000050b6         xor        eax, eax
00000000000050b8         call       j___fprintf_chk                             ; __fprintf_chk
00000000000050bd         pop        rax
00000000000050be         pop        rdx
00000000000050bf         jmp        loc_510e
00000000000050c1         align      8

                     loc_50c8:
00000000000050c8         mov        rsi, rbx                                    ; CODE XREF=overwrite_ok.isra.12+49
00000000000050cb         mov        edi, 0x4
00000000000050d0         call       quotearg_style                              ; quotearg_style
00000000000050d5         lea        rsi, qword [aSOverwriteS]                   ; argument "msgid" for method j_dcgettext, "%s: overwrite %s? "
00000000000050dc         mov        rbx, qword [program_name]                   ; program_name
00000000000050e3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000050e8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000050ea         mov        rbp, rax
00000000000050ed         call       j_dcgettext                                 ; dcgettext
00000000000050f2         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000050f9         mov        rdx, rax
00000000000050fc         mov        r8, rbp
00000000000050ff         mov        rcx, rbx
0000000000005102         mov        esi, 0x1
0000000000005107         xor        eax, eax
0000000000005109         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_510e:
000000000000510e         call       yesno                                       ; yesno, CODE XREF=overwrite_ok.isra.12+191
0000000000005113         mov        rcx, qword [rsp+0x48+var_30]
0000000000005118         xor        rcx, qword [fs:0x28]
0000000000005121         jne        loc_5146

0000000000005123         add        rsp, 0x20
0000000000005127         pop        rbx
0000000000005128         pop        rbp
0000000000005129         pop        r12
000000000000512b         pop        r13
000000000000512d         pop        r14
000000000000512f         ret
                        ; endp

                     loc_5130:
0000000000005130         lea        rsi, qword [aSUnwritableSMo]                ; argument "msgid" for method j_dcgettext, "%s: unwritable %s (mode %04lo, %s); try anyway? ", CODE XREF=overwrite_ok.isra.12+128
0000000000005137         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005139         call       j_dcgettext                                 ; dcgettext
000000000000513e         mov        rdx, rax
0000000000005141         jmp        loc_5097

                     loc_5146:
0000000000005146         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=overwrite_ok.isra.12+289
                        ; endp
000000000000514b         align      16                                          ; End of unwind block (FDE at 0x16748)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     create_hole:
0000000000005150         push       r13                                         ; Begin of unwind block (FDE at 0x16798), CODE XREF=sparse_copy+631, sparse_copy+696, copy_internal+12901
0000000000005152         push       r12
0000000000005154         mov        r13, rsi
0000000000005157         push       rbp
0000000000005158         push       rbx
0000000000005159         mov        r12d, edx
000000000000515c         mov        rsi, rcx                                    ; argument "__offset" for method j_lseek
000000000000515f         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000005164         mov        ebp, edi
0000000000005166         sub        rsp, 0x8
000000000000516a         mov        rbx, rcx
000000000000516d         call       j_lseek                                     ; lseek
0000000000005172         test       rax, rax
0000000000005175         js         loc_51f0

0000000000005177         test       r12b, r12b
000000000000517a         jne        loc_5190

                     loc_517c:
000000000000517c         add        rsp, 0x8                                    ; CODE XREF=create_hole+82
0000000000005180         mov        eax, 0x1
0000000000005185         pop        rbx
0000000000005186         pop        rbp
0000000000005187         pop        r12
0000000000005189         pop        r13
000000000000518b         ret
                        ; endp
000000000000518c         align      16

                     loc_5190:
0000000000005190         sub        rax, rbx                                    ; CODE XREF=create_hole+42
0000000000005193         mov        rdx, rbx
0000000000005196         mov        edi, ebp
0000000000005198         mov        rsi, rax
000000000000519b         call       punch_hole                                  ; punch_hole
00000000000051a0         test       eax, eax
00000000000051a2         jns        loc_517c

00000000000051a4         mov        rsi, r13
00000000000051a7         mov        edi, 0x4
00000000000051ac         call       quotearg_style                              ; quotearg_style
00000000000051b1         lea        rsi, qword [aErrorDeallocat]                ; "error deallocating %s"
00000000000051b8         mov        rbp, rax
00000000000051bb         mov        edx, 0x5

                     loc_51c0:
00000000000051c0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=create_hole+188
00000000000051c2         call       j_dcgettext                                 ; dcgettext
00000000000051c7         mov        rbx, rax
00000000000051ca         call       j___errno_location                          ; __errno_location
00000000000051cf         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000051d1         mov        rcx, rbp
00000000000051d4         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000051d7         xor        eax, eax
00000000000051d9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000051db         call       j_error                                     ; error
00000000000051e0         add        rsp, 0x8
00000000000051e4         xor        eax, eax
00000000000051e6         pop        rbx
00000000000051e7         pop        rbp
00000000000051e8         pop        r12
00000000000051ea         pop        r13
00000000000051ec         ret
                        ; endp
00000000000051ed         align      16

                     loc_51f0:
00000000000051f0         mov        rsi, r13                                    ; CODE XREF=create_hole+37
00000000000051f3         mov        edi, 0x4
00000000000051f8         call       quotearg_style                              ; quotearg_style
00000000000051fd         mov        edx, 0x5
0000000000005202         mov        rbp, rax
0000000000005205         lea        rsi, qword [aCannotLseekS]                  ; "cannot lseek %s"
000000000000520c         jmp        loc_51c0
000000000000520e         align      16                                          ; End of unwind block (FDE at 0x16798)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_89: int8_t, -137
        ;    var_8A: int8_t, -138
        ;    var_8B: int8_t, -139
        ;    var_90: int32_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160


                     sparse_copy:
0000000000005210         push       r15                                         ; Begin of unwind block (FDE at 0x167e8), CODE XREF=copy_internal+12650, copy_internal+15170
0000000000005212         push       r14
0000000000005214         push       r13
0000000000005216         push       r12
0000000000005218         push       rbp
0000000000005219         push       rbx
000000000000521a         sub        rsp, 0x78
000000000000521e         mov        rax, qword [rsp+0xa8+arg_0]
0000000000005226         mov        rbx, qword [rsp+0xa8+arg_18]
000000000000522e         mov        r10, qword [rsp+0xa8+arg_20]
0000000000005236         mov        byte [rsp+0xa8+var_89], r9b
000000000000523b         mov        qword [rsp+0xa8+var_50], rax
0000000000005240         mov        rax, qword [rsp+0xa8+arg_8]
0000000000005248         mov        byte [r10], 0x0
000000000000524c         mov        qword [rsp+0xa8+var_68], rbx
0000000000005251         mov        qword [rsp+0xa8+var_48], r10
0000000000005256         mov        qword [rbx], 0x0
000000000000525d         mov        qword [rsp+0xa8+var_98], rax
0000000000005262         mov        rax, qword [rsp+0xa8+arg_10]
000000000000526a         test       rax, rax
000000000000526d         mov        qword [rsp+0xa8+var_80], rax
0000000000005272         je         loc_5613

0000000000005278         test       r8, r8
000000000000527b         mov        qword [rsp+0xa8+var_58], r8
0000000000005280         mov        dword [rsp+0xa8+var_3C], r9d
0000000000005285         cmove      r8, rcx
0000000000005289         mov        qword [rsp+0xa8+var_70], rcx
000000000000528e         mov        qword [rsp+0xa8+var_88], rdx
0000000000005293         mov        dword [rsp+0xa8+var_90], esi
0000000000005297         mov        dword [rsp+0xa8+var_40], edi
000000000000529b         xor        r13d, r13d
000000000000529e         mov        qword [rsp+0xa8+var_60], r8
00000000000052a3         xor        r15d, r15d

                     loc_52a6:
00000000000052a6         mov        rax, qword [rsp+0xa8+var_70]                ; CODE XREF=sparse_copy+199, sparse_copy+585
00000000000052ab         mov        rdx, qword [rsp+0xa8+var_80]
00000000000052b0         mov        rsi, qword [rsp+0xa8+var_88]                ; argument "__buf" for method j_read
00000000000052b5         mov        edi, dword [rsp+0xa8+var_40]                ; argument "__fd" for method j_read
00000000000052b9         cmp        rax, rdx
00000000000052bc         cmovbe     rdx, rax                                    ; argument "__nbytes" for method j_read
00000000000052c0         call       j_read                                      ; read
00000000000052c5         test       rax, rax
00000000000052c8         mov        qword [rsp+0xa8+var_78], rax
00000000000052cd         jns        loc_5330

00000000000052cf         call       j___errno_location                          ; __errno_location
00000000000052d4         cmp        dword [rax], 0x4
00000000000052d7         je         loc_52a6

00000000000052d9         mov        rsi, qword [rsp+0xa8+var_50]
00000000000052de         mov        edi, 0x4
00000000000052e3         mov        rbx, rax
00000000000052e6         xor        r15d, r15d
00000000000052e9         call       quotearg_style                              ; quotearg_style
00000000000052ee         lea        rsi, qword [aErrorReadingS]                 ; argument "msgid" for method j_dcgettext, "error reading %s"
00000000000052f5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000052fa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000052fc         mov        rbp, rax
00000000000052ff         call       j_dcgettext                                 ; dcgettext
0000000000005304         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000005306         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000005309         mov        rcx, rbp
000000000000530c         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000530e         xor        eax, eax
0000000000005310         call       j_error                                     ; error

                     loc_5315:
0000000000005315         add        rsp, 0x78                                   ; CODE XREF=sparse_copy+718, sparse_copy+937, sparse_copy+1022, sparse_copy+1033
0000000000005319         mov        eax, r15d
000000000000531c         pop        rbx
000000000000531d         pop        rbp
000000000000531e         pop        r12
0000000000005320         pop        r13
0000000000005322         pop        r14
0000000000005324         pop        r15
0000000000005326         ret
                        ; endp
0000000000005327         align      16

                     loc_5330:
0000000000005330         je         loc_545f                                    ; CODE XREF=sparse_copy+189

0000000000005336         mov        rax, qword [rsp+0xa8+var_68]
000000000000533b         mov        rbp, qword [rsp+0xa8+var_78]
0000000000005340         mov        ecx, r15d
0000000000005343         mov        r14, qword [rsp+0xa8+var_88]
0000000000005348         mov        r10, qword [rsp+0xa8+var_60]
000000000000534d         add        qword [rax], rbp
0000000000005350         cmp        qword [rsp+0xa8+var_58], 0x0
0000000000005356         mov        r11, r14
0000000000005359         mov        r15, r10
000000000000535c         setne      byte [rsp+0xa8+var_8B]
0000000000005361         nop        dword [rax]

                     loc_5368:
0000000000005368         cmp        rbp, r15                                    ; CODE XREF=sparse_copy+774
000000000000536b         mov        rbx, r15
000000000000536e         cmovbe     rbx, rbp
0000000000005372         test       rbx, rbx
0000000000005375         setne      r12b
0000000000005379         and        r12b, byte [rsp+0xa8+var_8B]
000000000000537e         je         loc_5490

0000000000005384         mov        rsi, r14
0000000000005387         mov        rdx, rbx

                     loc_538a:
000000000000538a         cmp        byte [rsi], 0x0                             ; CODE XREF=sparse_copy+404
000000000000538d         jne        loc_55c0

0000000000005393         add        rsi, 0x1
0000000000005397         sub        rdx, 0x1
000000000000539b         je         loc_5528

00000000000053a1         test       dl, 0xf
00000000000053a4         jne        loc_538a

00000000000053a6         mov        rdi, r14                                    ; argument "__s1" for method j_memcmp
00000000000053a9         mov        qword [rsp+0xa8+var_A0], r11
00000000000053ae         mov        byte [rsp+0xa8+var_8A], cl
00000000000053b2         call       j_memcmp                                    ; memcmp
00000000000053b7         movzx      ecx, byte [rsp+0xa8+var_8A]
00000000000053bc         test       eax, eax
00000000000053be         mov        r11, qword [rsp+0xa8+var_A0]
00000000000053c3         sete       r12b
00000000000053c7         mov        edx, r12d
00000000000053ca         xor        edx, ecx
00000000000053cc         test       eax, eax
00000000000053ce         setne      al

                     loc_53d1:
00000000000053d1         test       r13, r13                                    ; CODE XREF=sparse_copy+952
00000000000053d4         setne      r9b
00000000000053d8         and        r9d, edx
00000000000053db         cmp        rbp, r15
00000000000053de         ja         loc_5538

00000000000053e4         test       al, al
00000000000053e6         je         loc_5538

00000000000053ec         test       r9b, r9b
00000000000053ef         je         loc_549a

00000000000053f5         mov        r15d, 0x1

                     loc_53fb:
00000000000053fb         test       cl, cl                                      ; CODE XREF=sparse_copy+816
00000000000053fd         mov        byte [rsp+0xa8+var_8A], cl
0000000000005401         jne        loc_54b2

                     loc_5407:
0000000000005407         mov        edi, dword [rsp+0xa8+var_90]                ; CODE XREF=sparse_copy+668
000000000000540b         mov        rdx, r13
000000000000540e         mov        rsi, r11
0000000000005411         mov        byte [rsp+0xa8+var_A0], r9b
0000000000005416         call       full_write                                  ; full_write
000000000000541b         cmp        r13, rax
000000000000541e         movzx      r9d, byte [rsp+0xa8+var_A0]
0000000000005424         movzx      ecx, byte [rsp+0xa8+var_8A]
0000000000005429         jne        loc_55cd

                     loc_542f:
000000000000542f         test       r15d, r15d                                  ; CODE XREF=sparse_copy+709
0000000000005432         mov        r13, rbx
0000000000005435         je         loc_5548

000000000000543b         test       rbx, rbx
000000000000543e         jne        loc_5560

                     loc_5444:
0000000000005444         mov        rdi, qword [rsp+0xa8+var_78]                ; CODE XREF=sparse_copy+783
0000000000005449         sub        qword [rsp+0xa8+var_80], rdi
000000000000544e         mov        r15d, r12d
0000000000005451         mov        rax, qword [rsp+0xa8+var_48]
0000000000005456         mov        byte [rax], r12b
0000000000005459         jne        loc_52a6

                     loc_545f:
000000000000545f         test       r15b, r15b                                  ; CODE XREF=loc_5330
0000000000005462         je         loc_5613

0000000000005468         movzx      edx, byte [rsp+0xa8+var_3C]
000000000000546d         mov        rsi, qword [rsp+0xa8+var_98]
0000000000005472         mov        rcx, r13
0000000000005475         mov        edi, dword [rsp+0xa8+var_90]
0000000000005479         add        rsp, 0x78
000000000000547d         pop        rbx
000000000000547e         pop        rbp
000000000000547f         pop        r12
0000000000005481         pop        r13
0000000000005483         pop        r14
0000000000005485         pop        r15
0000000000005487         jmp        create_hole                                 ; create_hole
                        ; endp
000000000000548c         align      16

                     loc_5490:
0000000000005490         cmp        cl, 0x1                                     ; CODE XREF=sparse_copy+366
0000000000005493         je         loc_54e8

0000000000005495         cmp        rbp, r15
0000000000005498         ja         loc_54e8

                     loc_549a:
000000000000549a         add        r13, rbx                                    ; CODE XREF=sparse_copy+479, sparse_copy+736
000000000000549d         xor        r9d, r9d
00000000000054a0         test       cl, cl
00000000000054a2         mov        r15d, 0x1
00000000000054a8         mov        byte [rsp+0xa8+var_8A], cl
00000000000054ac         je         loc_5407

                     loc_54b2:
00000000000054b2         movzx      edx, byte [rsp+0xa8+var_89]                 ; CODE XREF=sparse_copy+497
00000000000054b7         mov        rsi, qword [rsp+0xa8+var_98]
00000000000054bc         mov        rcx, r13
00000000000054bf         mov        edi, dword [rsp+0xa8+var_90]
00000000000054c3         mov        byte [rsp+0xa8+var_8A], r9b
00000000000054c8         call       create_hole                                 ; create_hole
00000000000054cd         test       al, al
00000000000054cf         movzx      r9d, byte [rsp+0xa8+var_8A]
00000000000054d5         jne        loc_542f

00000000000054db         mov        r15d, eax
00000000000054de         jmp        loc_5315
00000000000054e3         align      8

                     loc_54e8:
00000000000054e8         test       rbx, rbx                                    ; CODE XREF=sparse_copy+643, sparse_copy+648
00000000000054eb         jne        loc_54f8

00000000000054ed         mov        r12d, ecx
00000000000054f0         jmp        loc_549a

                     loc_54f2:
00000000000054f2         mov        ecx, r12d                                   ; CODE XREF=sparse_copy+811
00000000000054f5         nop        dword [rax]

                     loc_54f8:
00000000000054f8         movabs     rax, 0x7fffffffffffffff                     ; CODE XREF=sparse_copy+731
0000000000005502         sub        rax, rbx
0000000000005505         cmp        rax, r13
0000000000005508         jb         loc_5580

000000000000550a         add        r13, rbx
000000000000550d         add        r14, rbx
0000000000005510         mov        r15, rbx

                     loc_5513:
0000000000005513         sub        rbp, r15                                    ; CODE XREF=sparse_copy+836, sparse_copy+860, sparse_copy+871
0000000000005516         jne        loc_5368

000000000000551c         mov        r12d, ecx
000000000000551f         jmp        loc_5444
0000000000005524         align      8

                     loc_5528:
0000000000005528         mov        r9d, ecx                                    ; CODE XREF=sparse_copy+395
000000000000552b         xor        r9d, 0x1
000000000000552f         test       r13, r13
0000000000005532         setne      al
0000000000005535         and        r9d, eax

                     loc_5538:
0000000000005538         test       r9b, r9b                                    ; CODE XREF=sparse_copy+462, sparse_copy+470
000000000000553b         je         loc_54f2

000000000000553d         xor        r15d, r15d
0000000000005540         jmp        loc_53fb
0000000000005545         align      8

                     loc_5548:
0000000000005548         mov        r11, r14                                    ; CODE XREF=sparse_copy+549
000000000000554b         mov        ecx, r12d
000000000000554e         add        r14, rbx
0000000000005551         mov        r15, rbx
0000000000005554         jmp        loc_5513
0000000000005556         align      32

                     loc_5560:
0000000000005560         xor        r15d, r15d                                  ; CODE XREF=sparse_copy+558
0000000000005563         test       r9b, r9b
0000000000005566         mov        ecx, r12d
0000000000005569         mov        r11, r14
000000000000556c         jne        loc_5513

000000000000556e         add        r14, rbx
0000000000005571         mov        r15, rbx
0000000000005574         xor        r13d, r13d
0000000000005577         jmp        loc_5513
0000000000005579         align      128

                     loc_5580:
0000000000005580         mov        rsi, qword [rsp+0xa8+var_50]                ; CODE XREF=sparse_copy+760
0000000000005585         mov        edi, 0x4
000000000000558a         xor        r15d, r15d
000000000000558d         call       quotearg_style                              ; quotearg_style
0000000000005592         lea        rsi, qword [aOverflowReadin]                ; argument "msgid" for method j_dcgettext, "overflow reading %s"
0000000000005599         mov        rbx, rax
000000000000559c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000055a1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000055a3         call       j_dcgettext                                 ; dcgettext
00000000000055a8         mov        rcx, rbx
00000000000055ab         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000055ae         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000055b0         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000055b2         xor        eax, eax
00000000000055b4         call       j_error                                     ; error
00000000000055b9         jmp        loc_5315
00000000000055be         align      64

                     loc_55c0:
00000000000055c0         mov        eax, r12d                                   ; CODE XREF=sparse_copy+381
00000000000055c3         mov        edx, ecx
00000000000055c5         xor        r12d, r12d
00000000000055c8         jmp        loc_53d1

                     loc_55cd:
00000000000055cd         mov        rsi, qword [rsp+0xa8+var_98]                ; CODE XREF=sparse_copy+537
00000000000055d2         mov        edi, 0x4
00000000000055d7         mov        r15d, ecx
00000000000055da         call       quotearg_style                              ; quotearg_style
00000000000055df         lea        rsi, qword [aErrorWritingS]                 ; argument "msgid" for method j_dcgettext, "error writing %s"
00000000000055e6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000055e8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000055ed         mov        rbp, rax
00000000000055f0         call       j_dcgettext                                 ; dcgettext
00000000000055f5         mov        rbx, rax
00000000000055f8         call       j___errno_location                          ; __errno_location
00000000000055fd         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000055ff         mov        rcx, rbp
0000000000005602         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000005605         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000005607         xor        eax, eax
0000000000005609         call       j_error                                     ; error
000000000000560e         jmp        loc_5315

                     loc_5613:
0000000000005613         mov        r15d, 0x1                                   ; CODE XREF=sparse_copy+98, sparse_copy+594
0000000000005619         jmp        loc_5315
000000000000561e         align      32                                          ; End of unwind block (FDE at 0x167e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_process_security_ctx:
0000000000005620         push       r13                                         ; Begin of unwind block (FDE at 0x16850), CODE XREF=make_dir_parents_private+339, make_dir_parents_private+680, copy_internal+1297, copy_internal+2837, copy_internal+4941, copy_internal+13253
0000000000005622         push       r12
0000000000005624         push       rbp
0000000000005625         push       rbx
0000000000005626         mov        rbp, r8
0000000000005629         sub        rsp, 0x8
000000000000562d         cmp        byte [r8+0x25], 0x0
0000000000005632         je         loc_56a0

0000000000005634         mov        r13, rdi
0000000000005637         call       j___errno_location                          ; __errno_location
000000000000563c         cmp        byte [rbp+0x23], 0x0
0000000000005640         mov        r12, rax
0000000000005643         jne        loc_56c0

                     loc_5645:
0000000000005645         mov        rsi, r13                                    ; CODE XREF=set_process_security_ctx+166
0000000000005648         mov        edi, 0x4
000000000000564d         mov        dword [r12], 0x5f
0000000000005655         call       quotearg_style                              ; quotearg_style
000000000000565a         lea        rsi, qword [aFailedToGetSec]                ; argument "msgid" for method j_dcgettext, "failed to get security context of %s"
0000000000005661         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005666         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005668         mov        rbx, rax
000000000000566b         call       j_dcgettext                                 ; dcgettext
0000000000005670         mov        esi, dword [r12]                            ; argument "__errnum" for method j_error
0000000000005674         mov        rcx, rbx
0000000000005677         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000567a         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000567c         xor        eax, eax
000000000000567e         call       j_error                                     ; error
0000000000005683         movzx      ebx, byte [rbp+0x26]

                     loc_5687:
0000000000005687         add        rsp, 0x8                                    ; CODE XREF=set_process_security_ctx+178
000000000000568b         xor        ebx, 0x1
000000000000568e         mov        eax, ebx
0000000000005690         pop        rbx
0000000000005691         pop        rbp
0000000000005692         pop        r12
0000000000005694         pop        r13
0000000000005696         ret
                        ; endp
0000000000005697         align      32

                     loc_56a0:
00000000000056a0         mov        ebx, ecx                                    ; CODE XREF=set_process_security_ctx+18
00000000000056a2         and        bl, byte [r8+0x21]
00000000000056a6         jne        loc_56d8

00000000000056a8         add        rsp, 0x8
00000000000056ac         mov        ebx, 0x1
00000000000056b1         mov        eax, ebx
00000000000056b3         pop        rbx
00000000000056b4         pop        rbp
00000000000056b5         pop        r12
00000000000056b7         pop        r13
00000000000056b9         ret
                        ; endp
00000000000056ba         align      64

                     loc_56c0:
00000000000056c0         movzx      ebx, byte [rbp+0x26]                        ; CODE XREF=set_process_security_ctx+35
00000000000056c4         test       bl, bl
00000000000056c6         jne        loc_5645

00000000000056cc         mov        dword [rax], 0x5f
00000000000056d2         jmp        loc_5687
00000000000056d4         align      8

                     loc_56d8:
00000000000056d8         call       j___errno_location                          ; __errno_location, CODE XREF=set_process_security_ctx+134
00000000000056dd         mov        dword [rax], 0x5f
00000000000056e3         add        rsp, 0x8
00000000000056e7         mov        eax, ebx
00000000000056e9         pop        rbx
00000000000056ea         pop        rbp
00000000000056eb         pop        r12
00000000000056ed         pop        r13
00000000000056ef         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_file_security_ctx:
00000000000056f0         push       r12                                         ; End of unwind block (FDE at 0x16850), Begin of unwind block (FDE at 0x168ac), CODE XREF=make_dir_parents_private+1101, copy_internal+4993, copy_internal+8958, copy_internal+10960, copy_internal+14718
00000000000056f2         push       rbp
00000000000056f3         mov        rbp, rcx
00000000000056f6         push       rbx
00000000000056f7         mov        r12, rdi
00000000000056fa         call       j___errno_location                          ; __errno_location
00000000000056ff         cmp        byte [rbp+0x23], 0x0
0000000000005703         mov        rbx, rax
0000000000005706         je         loc_570e

0000000000005708         cmp        byte [rbp+0x26], 0x0
000000000000570c         je         loc_5758

                     loc_570e:
000000000000570e         mov        rdx, r12                                    ; CODE XREF=set_file_security_ctx+22
0000000000005711         mov        dword [rbx], 0x5f
0000000000005717         mov        esi, 0x4
000000000000571c         xor        edi, edi
000000000000571e         call       quotearg_n_style                            ; quotearg_n_style
0000000000005723         lea        rsi, qword [aFailedToSetThe]                ; argument "msgid" for method j_dcgettext, "failed to set the security context of %s"
000000000000572a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000572f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005731         mov        rbp, rax
0000000000005734         call       j_dcgettext                                 ; dcgettext
0000000000005739         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000573b         mov        rcx, rbp
000000000000573e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000005741         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000005743         xor        eax, eax
0000000000005745         call       j_error                                     ; error
000000000000574a         pop        rbx
000000000000574b         xor        eax, eax
000000000000574d         pop        rbp
000000000000574e         pop        r12
0000000000005750         ret
                        ; endp
0000000000005751         align      8

                     loc_5758:
0000000000005758         mov        dword [rax], 0x5f                           ; CODE XREF=set_file_security_ctx+28
000000000000575e         xor        eax, eax
0000000000005760         pop        rbx
0000000000005761         pop        rbp
0000000000005762         pop        r12
0000000000005764         ret
                        ; endp
0000000000005765         align      16                                          ; End of unwind block (FDE at 0x168ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dest_info_init:
0000000000005770         lea        r8, qword [triple_free]                     ; Begin of unwind block (FDE at 0x168e4), triple_free, CODE XREF=do_copy+940
0000000000005777         lea        rcx, qword [triple_compare]                 ; triple_compare
000000000000577e         xor        esi, esi
0000000000005780         lea        rdx, qword [triple_hash]                    ; triple_hash
0000000000005787         push       rbx
0000000000005788         mov        rbx, rdi
000000000000578b         mov        edi, 0x3d
0000000000005790         call       hash_initialize                             ; hash_initialize
0000000000005795         mov        qword [rbx+0x40], rax
0000000000005799         pop        rbx
000000000000579a         ret
                        ; endp
000000000000579b         align      32                                          ; End of unwind block (FDE at 0x168e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     src_info_init:
00000000000057a0         lea        r8, qword [triple_free]                     ; Begin of unwind block (FDE at 0x16900), triple_free, CODE XREF=do_copy+948
00000000000057a7         lea        rcx, qword [triple_compare]                 ; triple_compare
00000000000057ae         xor        esi, esi
00000000000057b0         lea        rdx, qword [triple_hash_no_name]            ; triple_hash_no_name
00000000000057b7         push       rbx
00000000000057b8         mov        rbx, rdi
00000000000057bb         mov        edi, 0x3d
00000000000057c0         call       hash_initialize                             ; hash_initialize
00000000000057c5         mov        qword [rbx+0x48], rax
00000000000057c9         pop        rbx
00000000000057ca         ret
                        ; endp
00000000000057cb         align      16                                          ; End of unwind block (FDE at 0x16900)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cp_options_default:
00000000000057d0         pxor       xmm0, xmm0                                  ; Begin of unwind block (FDE at 0x1691c), CODE XREF=main+145
00000000000057d4         push       rbx
00000000000057d5         mov        rbx, rdi
00000000000057d8         movups     xmmword [rdi], xmm0
00000000000057db         movups     xmmword [rdi+0x10], xmm0
00000000000057df         movups     xmmword [rdi+0x20], xmm0
00000000000057e3         movups     xmmword [rdi+0x30], xmm0
00000000000057e7         movups     xmmword [rdi+0x40], xmm0
00000000000057eb         call       j_geteuid                                   ; geteuid
00000000000057f0         test       eax, eax
00000000000057f2         mov        dword [rbx+0x34], 0xffffffff
00000000000057f9         sete       al
00000000000057fc         mov        byte [rbx+0x1b], al
00000000000057ff         mov        byte [rbx+0x1a], al
0000000000005802         pop        rbx
0000000000005803         ret
                        ; endp
0000000000005804         align      16                                          ; End of unwind block (FDE at 0x1691c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     chown_failure_ok:
0000000000005810         push       rbx                                         ; Begin of unwind block (FDE at 0x16938), CODE XREF=re_protect+345, set_owner+141, copy_internal+14261
0000000000005811         mov        rbx, rdi
0000000000005814         call       j___errno_location                          ; __errno_location
0000000000005819         mov        edx, dword [rax]
000000000000581b         cmp        edx, 0x1
000000000000581e         sete       al
0000000000005821         cmp        edx, 0x16
0000000000005824         sete       dl
0000000000005827         or         al, dl
0000000000005829         je         loc_5832

000000000000582b         movzx      eax, byte [rbx+0x1a]
000000000000582f         xor        eax, 0x1

                     loc_5832:
0000000000005832         pop        rbx                                         ; CODE XREF=chown_failure_ok+25
0000000000005833         ret
                        ; endp
0000000000005834         align      64                                          ; End of unwind block (FDE at 0x16938)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_owner:
0000000000005840         push       r15                                         ; Begin of unwind block (FDE at 0x16954), CODE XREF=copy_internal+1827, copy_internal+13832
0000000000005842         push       r14
0000000000005844         push       r13
0000000000005846         push       r12
0000000000005848         mov        r13, rsi
000000000000584b         push       rbp
000000000000584c         push       rbx
000000000000584d         mov        rbp, rdi
0000000000005850         mov        ebx, edx
0000000000005852         sub        rsp, 0x8
0000000000005856         test       r8b, r8b
0000000000005859         mov        r14d, dword [rcx+0x1c]
000000000000585d         mov        r12d, dword [rcx+0x20]
0000000000005861         jne        loc_5895

0000000000005863         movabs     rax, 0xff0000000000ff
000000000000586d         test       qword [rdi+0x18], rax
0000000000005871         je         loc_5910

0000000000005877         mov        esi, dword [r9+0x18]
000000000000587b         mov        edx, dword [rcx+0x18]

                     loc_587e:
000000000000587e         mov        eax, edx                                    ; CODE XREF=set_owner+225
0000000000005880         mov        ecx, esi
0000000000005882         not        eax
0000000000005884         and        ecx, 0xfff
000000000000588a         or         ah, 0xe
000000000000588d         test       eax, ecx
000000000000588f         jne        loc_5960

                     loc_5895:
0000000000005895         cmp        ebx, 0xffffffff                             ; CODE XREF=set_owner+33, set_owner+212, set_owner+308
0000000000005898         mov        edx, r12d
000000000000589b         mov        esi, r14d
000000000000589e         je         loc_58f0

00000000000058a0         mov        edi, ebx                                    ; argument "__fd" for method j_fchown
00000000000058a2         call       j_fchown                                    ; fchown
00000000000058a7         test       eax, eax
00000000000058a9         je         loc_58fc

00000000000058ab         call       j___errno_location                          ; __errno_location
00000000000058b0         mov        r14d, dword [rax]
00000000000058b3         mov        r15, rax
00000000000058b6         cmp        r14d, 0x1
00000000000058ba         je         loc_5a28

00000000000058c0         cmp        r14d, 0x16
00000000000058c4         je         loc_5a28

                     loc_58ca:
00000000000058ca         mov        rdi, rbp                                    ; CODE XREF=set_owner+258, set_owner+283, set_owner+506
00000000000058cd         call       chown_failure_ok                            ; chown_failure_ok
00000000000058d2         mov        edx, eax
00000000000058d4         xor        eax, eax
00000000000058d6         test       dl, dl
00000000000058d8         je         loc_59d0

00000000000058de         add        rsp, 0x8
00000000000058e2         pop        rbx
00000000000058e3         pop        rbp
00000000000058e4         pop        r12
00000000000058e6         pop        r13
00000000000058e8         pop        r14
00000000000058ea         pop        r15
00000000000058ec         ret
                        ; endp
00000000000058ed         align      16

                     loc_58f0:
00000000000058f0         mov        rdi, r13                                    ; argument "__file" for method j_lchown, CODE XREF=set_owner+94
00000000000058f3         call       j_lchown                                    ; lchown
00000000000058f8         test       eax, eax
00000000000058fa         jne        loc_5930

                     loc_58fc:
00000000000058fc         add        rsp, 0x8                                    ; CODE XREF=set_owner+105
0000000000005900         mov        eax, 0x1
0000000000005905         pop        rbx
0000000000005906         pop        rbp
0000000000005907         pop        r12
0000000000005909         pop        r13
000000000000590b         pop        r14
000000000000590d         pop        r15
000000000000590f         ret
                        ; endp

                     loc_5910:
0000000000005910         cmp        byte [rdi+0x2b], 0x0                        ; CODE XREF=set_owner+49
0000000000005914         je         loc_5895

000000000000591a         mov        esi, dword [r9+0x18]
000000000000591e         mov        edx, dword [rdi+0x10]
0000000000005921         jmp        loc_587e
0000000000005926         align      16

                     loc_5930:
0000000000005930         call       j___errno_location                          ; __errno_location, CODE XREF=set_owner+186
0000000000005935         mov        ebx, dword [rax]
0000000000005937         mov        r14, rax
000000000000593a         cmp        ebx, 0x1
000000000000593d         je         loc_5948

000000000000593f         cmp        ebx, 0x16
0000000000005942         jne        loc_58ca

                     loc_5948:
0000000000005948         mov        edx, r12d                                   ; argument "__group" for method j_lchown, CODE XREF=set_owner+253
000000000000594b         mov        esi, 0xffffffff                             ; argument "__owner" for method j_lchown
0000000000005950         mov        rdi, r13                                    ; argument "__file" for method j_lchown
0000000000005953         call       j_lchown                                    ; lchown
0000000000005958         mov        dword [r14], ebx
000000000000595b         jmp        loc_58ca

                     loc_5960:
0000000000005960         and        edx, esi                                    ; CODE XREF=set_owner+79
0000000000005962         mov        rdi, r13
0000000000005965         mov        esi, ebx
0000000000005967         and        edx, 0x1c0
000000000000596d         call       qset_acl                                    ; qset_acl
0000000000005972         test       eax, eax
0000000000005974         je         loc_5895

000000000000597a         call       j___errno_location                          ; __errno_location
000000000000597f         mov        rbx, rax
0000000000005982         mov        eax, dword [rax]
0000000000005984         cmp        eax, 0x1
0000000000005987         je         loc_5a40

000000000000598d         cmp        eax, 0x16
0000000000005990         je         loc_5a40

                     loc_5996:
0000000000005996         mov        rsi, r13                                    ; CODE XREF=set_owner+516
0000000000005999         mov        edi, 0x4
000000000000599e         call       quotearg_style                              ; quotearg_style
00000000000059a3         lea        rsi, qword [aClearingPermis]                ; argument "msgid" for method j_dcgettext, "clearing permissions for %s"
00000000000059aa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000059ac         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000059b1         mov        r12, rax
00000000000059b4         call       j_dcgettext                                 ; dcgettext
00000000000059b9         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000059bb         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000059be         mov        rcx, r12
00000000000059c1         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000059c3         xor        eax, eax
00000000000059c5         call       j_error                                     ; error
00000000000059ca         jmp        loc_5a0c
00000000000059cc         align      16

                     loc_59d0:
00000000000059d0         mov        rsi, r13                                    ; CODE XREF=set_owner+152
00000000000059d3         mov        edi, 0x4
00000000000059d8         call       quotearg_style                              ; quotearg_style
00000000000059dd         lea        rsi, qword [aFailedToPreser_130f8]          ; argument "msgid" for method j_dcgettext, "failed to preserve ownership for %s"
00000000000059e4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000059e9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000059eb         mov        r12, rax
00000000000059ee         call       j_dcgettext                                 ; dcgettext
00000000000059f3         mov        rbx, rax
00000000000059f6         call       j___errno_location                          ; __errno_location
00000000000059fb         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000059fd         mov        rcx, r12
0000000000005a00         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000005a03         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000005a05         xor        eax, eax
0000000000005a07         call       j_error                                     ; error

                     loc_5a0c:
0000000000005a0c         movzx      eax, byte [rbp+0x24]                        ; CODE XREF=set_owner+394, set_owner+522
0000000000005a10         add        rsp, 0x8
0000000000005a14         pop        rbx
0000000000005a15         pop        rbp
0000000000005a16         pop        r12
0000000000005a18         neg        eax
0000000000005a1a         pop        r13
0000000000005a1c         pop        r14
0000000000005a1e         pop        r15
0000000000005a20         ret
                        ; endp
0000000000005a21         align      8

                     loc_5a28:
0000000000005a28         mov        edx, r12d                                   ; argument "__group" for method j_fchown, CODE XREF=set_owner+122, set_owner+132
0000000000005a2b         mov        esi, 0xffffffff                             ; argument "__owner" for method j_fchown
0000000000005a30         mov        edi, ebx                                    ; argument "__fd" for method j_fchown
0000000000005a32         call       j_fchown                                    ; fchown
0000000000005a37         mov        dword [r15], r14d
0000000000005a3a         jmp        loc_58ca
0000000000005a3f         align      64

                     loc_5a40:
0000000000005a40         cmp        byte [rbp+0x1b], 0x0                        ; CODE XREF=set_owner+327, set_owner+336
0000000000005a44         jne        loc_5996

0000000000005a4a         jmp        loc_5a0c
0000000000005a4c         align      16                                          ; End of unwind block (FDE at 0x16954)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cached_umask:
0000000000005a50         push       rbx                                         ; Begin of unwind block (FDE at 0x169d4), CODE XREF=make_dir_parents_private+1280, copy_internal+11713, copy_internal+11814, copy_internal+13948, copy_internal+16215
0000000000005a51         mov        ebx, dword [mask.7898]                      ; mask.7898
0000000000005a57         cmp        ebx, 0xffffffff
0000000000005a5a         je         loc_5a60

0000000000005a5c         mov        eax, ebx
0000000000005a5e         pop        rbx
0000000000005a5f         ret
                        ; endp

                     loc_5a60:
0000000000005a60         xor        edi, edi                                    ; argument "__mask" for method j_umask, CODE XREF=cached_umask+10
0000000000005a62         call       j_umask                                     ; umask
0000000000005a67         mov        ebx, eax
0000000000005a69         mov        edi, eax                                    ; argument "__mask" for method j_umask
0000000000005a6b         mov        dword [mask.7898], eax                      ; mask.7898
0000000000005a71         call       j_umask                                     ; umask
0000000000005a76         mov        eax, ebx
0000000000005a78         pop        rbx
0000000000005a79         ret
                        ; endp
0000000000005a7a         align      128                                         ; End of unwind block (FDE at 0x169d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_18: int, 40
        ;    arg_10: int, 32
        ;    arg_8: int, 24
        ;    arg_0: int, 16
        ;    var_28: int8_t, -40
        ;    var_38: int64_t, -56
        ;    var_50: -80
        ;    var_60: -96
        ;    var_70: -112
        ;    var_80: -128
        ;    var_90: -144
        ;    var_98: int64_t, -152
        ;    var_A0: -160
        ;    var_B0: int32_t, -176
        ;    var_B4: int32_t, -180
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_E0: -224
        ;    var_F0: -240
        ;    var_100: -256
        ;    var_110: -272
        ;    var_120: int64_t, -288
        ;    var_128: int64_t, -296
        ;    var_130: int64_t, -304
        ;    var_140: -320
        ;    var_148: int32_t, -328
        ;    var_150: -336
        ;    var_158: int64_t, -344
        ;    var_160: int64_t, -352
        ;    var_1C0: int64_t, -448
        ;    var_1D0: int32_t, -464
        ;    var_1D4: int32_t, -468
        ;    var_1D8: int32_t, -472
        ;    var_1E0: int64_t, -480
        ;    var_1E8: int64_t, -488
        ;    var_1F0: int64_t, -496
        ;    var_220: int64_t, -544
        ;    var_228: int64_t, -552
        ;    var_230: int64_t, -560
        ;    var_238: int64_t, -568
        ;    var_250: int64_t, -592
        ;    var_258: int64_t, -600
        ;    var_260: int32_t, -608
        ;    var_264: int32_t, -612
        ;    var_268: int32_t, -616
        ;    var_270: int64_t, -624
        ;    var_278: int64_t, -632
        ;    var_280: int64_t, -640
        ;    var_288: int64_t, -648
        ;    var_290: int64_t, -656
        ;    var_298: int64_t, -664
        ;    var_2A0: int64_t, -672
        ;    var_2B0: -688
        ;    var_2C0: -704
        ;    var_2C8: int64_t, -712
        ;    var_2CF: int8_t, -719
        ;    var_2D0: int8_t, -720
        ;    var_2D8: int64_t, -728
        ;    var_2E0: -736
        ;    var_2EC: int32_t, -748
        ;    var_2F0: int64_t, -752
        ;    var_2F8: int64_t, -760
        ;    var_2F9: int8_t, -761
        ;    var_308: int64_t, -776
        ;    var_310: int64_t, -784
        ;    var_314: int32_t, -788
        ;    var_315: int8_t, -789
        ;    var_320: int64_t, -800
        ;    var_328: int64_t, -808
        ;    var_330: int64_t, -816
        ;    var_338: int64_t, -824
        ;    var_340: int64_t, -832
        ;    var_348: int64_t, -840
        ;    var_350: int64_t, -848
        ;    var_358: int64_t, -856
        ;    var_35C: int32_t, -860
        ;    var_360: int32_t, -864
        ;    var_368: int64_t, -872
        ;    var_370: int64_t, -880
        ;    var_378: int64_t, -888
        ;    var_380: int64_t, -896
        ;    var_388: int64_t, -904
        ;    var_38C: int32_t, -908
        ;    var_390: int32_t, -912
        ;    var_398: int64_t, -920
        ;    var_3A0: int64_t, -928
        ;    var_3A4: int32_t, -932
        ;    var_3A5: int8_t, -933
        ;    var_3B0: int64_t, -944
        ;    var_3B1: int8_t, -945
        ;    var_3B8: int64_t, -952
        ;    var_3C0: int64_t, -960
        ;    var_3E1: int8_t, -993


                     copy_internal:
0000000000005a80         push       rbp                                         ; Begin of unwind block (FDE at 0x169f4), CODE XREF=copy_internal+7901, copy+128
0000000000005a81         mov        rbp, rsp
0000000000005a84         push       r15
0000000000005a86         push       r14
0000000000005a88         push       r13
0000000000005a8a         push       r12
0000000000005a8c         mov        r14d, edx
0000000000005a8f         push       rbx
0000000000005a90         mov        rbx, r9
0000000000005a93         sub        rsp, 0x398
0000000000005a9a         mov        rax, qword [rbp+arg_8]
0000000000005a9e         mov        r13d, dword [rbp+arg_0]
0000000000005aa2         mov        qword [rbp+var_348], rcx
0000000000005aa9         mov        rcx, qword [rbp+arg_18]
0000000000005aad         mov        qword [rbp+var_310], rdi
0000000000005ab4         mov        qword [rbp+var_308], rsi
0000000000005abb         mov        qword [rbp+var_338], rax
0000000000005ac2         mov        rax, qword [rbp+arg_10]
0000000000005ac6         mov        qword [rbp+var_320], rcx
0000000000005acd         mov        qword [rbp+var_330], r8
0000000000005ad4         mov        rcx, qword [fs:0x28]
0000000000005add         mov        qword [rbp+var_38], rcx
0000000000005ae1         xor        ecx, ecx
0000000000005ae3         mov        byte [rax], 0x0
0000000000005ae6         movzx      r12d, byte [r9+0x18]
0000000000005aeb         mov        qword [rbp+var_340], rax
0000000000005af2         mov        byte [rbp+var_315], r13b
0000000000005af9         mov        r15d, dword [r9+0x34]
0000000000005afd         test       r12b, r12b
0000000000005b00         je         loc_5b21

0000000000005b02         test       r15d, r15d
0000000000005b05         js         loc_5da0

                     loc_5b0b:
0000000000005b0b         mov        rax, qword [rbp+var_320]                    ; CODE XREF=copy_internal+3768
0000000000005b12         test       r15d, r15d
0000000000005b15         sete       r14b
0000000000005b19         test       rax, rax
0000000000005b1c         je         loc_5b21

0000000000005b1e         mov        byte [rax], r14b

                     loc_5b21:
0000000000005b21         test       r15d, r15d                                  ; CODE XREF=copy_internal+128, copy_internal+156
0000000000005b24         je         loc_5dd8

0000000000005b2a         cmp        r15d, 0x11
0000000000005b2e         mov        r12, qword [rbp+var_310]
0000000000005b35         je         loc_6338

                     loc_5b3b:
0000000000005b3b         cmp        dword [rbx+4], 0x2                          ; CODE XREF=copy_internal+872, copy_internal+2242
0000000000005b3f         lea        r10, qword [rbp+var_280]
0000000000005b46         mov        rsi, r12
0000000000005b49         mov        edi, 0x1
0000000000005b4e         mov        rdx, r10
0000000000005b51         je         loc_6350

0000000000005b57         call       j___xstat                                   ; __xstat
0000000000005b5c         test       eax, eax
0000000000005b5e         mov        rsi, r12
0000000000005b61         setne      al
0000000000005b64         test       al, al
0000000000005b66         jne        loc_6365

                     loc_5b6c:
0000000000005b6c         mov        eax, dword [rbp+var_268]                    ; CODE XREF=copy_internal+2271
0000000000005b72         mov        dword [rbp+var_314], eax
0000000000005b78         and        eax, 0xf000
0000000000005b7d         cmp        eax, 0x4000
0000000000005b82         je         loc_6648

                     loc_5b88:
0000000000005b88         test       r13b, r13b                                  ; CODE XREF=copy_internal+883, copy_internal+2236, copy_internal+3024
0000000000005b8b         je         loc_5bca

0000000000005b8d         mov        rdi, qword [rbx+0x48]
0000000000005b91         test       rdi, rdi
0000000000005b94         je         loc_5bca

0000000000005b96         mov        eax, dword [rbp+var_314]
0000000000005b9c         lea        r10, qword [rbp+var_280]
0000000000005ba3         and        eax, 0xf000
0000000000005ba8         cmp        eax, 0x4000
0000000000005bad         je         loc_5bbb

0000000000005baf         mov        r11d, dword [rbx]
0000000000005bb2         test       r11d, r11d
0000000000005bb5         je         loc_64c8

                     loc_5bbb:
0000000000005bbb         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+301, copy_internal+2676
0000000000005bc2         mov        rdx, r10
0000000000005bc5         call       record_file                                 ; record_file

                     loc_5bca:
0000000000005bca         mov        eax, dword [rbx+4]                          ; CODE XREF=copy_internal+267, copy_internal+276
0000000000005bcd         mov        dword [rbp+var_328], 0x1
0000000000005bd7         cmp        eax, 0x4
0000000000005bda         je         loc_5bee

0000000000005bdc         cmp        eax, 0x3
0000000000005bdf         sete       al
0000000000005be2         movzx      eax, al
0000000000005be5         and        eax, r13d
0000000000005be8         mov        dword [rbp+var_328], eax

                     loc_5bee:
0000000000005bee         test       r14b, r14b                                  ; CODE XREF=copy_internal+346
0000000000005bf1         jne        loc_5e00

0000000000005bf7         cmp        r15d, 0x11
0000000000005bfb         je         loc_6560

                     loc_5c01:
0000000000005c01         mov        eax, dword [rbp+var_314]                    ; CODE XREF=copy_internal+2788
0000000000005c07         and        eax, 0xf000
0000000000005c0c         cmp        eax, 0x8000
0000000000005c11         je         loc_6500

0000000000005c17         cmp        eax, 0xa000
0000000000005c1c         mov        r8d, 0x100
0000000000005c22         sete       r9b
0000000000005c26         cmp        eax, 0x4000
0000000000005c2b         sete       al
0000000000005c2e         or         r9d, eax
0000000000005c31         movzx      eax, byte [rbx+0x14]
0000000000005c35         xor        eax, 0x1
0000000000005c38         or         r9b, al
0000000000005c3b         je         loc_6500

                     loc_5c41:
0000000000005c41         lea        r12, qword [rbp+var_1F0]                    ; CODE XREF=copy_internal+2702, copy_internal+2716, copy_internal+2730, copy_internal+2748, copy_internal+2773
0000000000005c48         mov        rdx, qword [rbp+var_308]                    ; argument "__filename" for method j___fxstatat
0000000000005c4f         mov        esi, 0xffffff9c                             ; argument "__fildes" for method j___fxstatat
0000000000005c54         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000005c59         mov        byte [rbp+var_350], r9b
0000000000005c60         mov        rcx, r12                                    ; argument "__stat_buf" for method j___fxstatat
0000000000005c63         call       j___fxstatat                                ; __fxstatat
0000000000005c68         test       eax, eax
0000000000005c6a         movzx      r9d, byte [rbp+var_350]
0000000000005c72         jne        loc_62f0

0000000000005c78         xor        r8d, r8d

                     loc_5c7b:
0000000000005c7b         cmp        dword [rbx+8], 0x2                          ; CODE XREF=copy_internal+2201
0000000000005c7f         je         loc_5c9f

0000000000005c81         mov        rax, qword [rbp+var_1E8]
0000000000005c88         cmp        qword [rbp+var_278], rax
0000000000005c8f         je         loc_6e58

                     loc_5c95:
0000000000005c95         cmp        dword [rbx+4], 0x2                          ; CODE XREF=copy_internal+5094
0000000000005c99         je         loc_7010

                     loc_5c9f:
0000000000005c9f         cmp        byte [rbx+0x2d], 0x0                        ; CODE XREF=copy_internal+511, copy_internal+2800, copy_internal+5201, copy_internal+5759, copy_internal+5805, copy_internal+5818, copy_internal+6027, copy_internal+6871, copy_internal+7167, copy_internal+7187, copy_internal+7222
0000000000005ca3         je         loc_66a0

0000000000005ca9         mov        eax, dword [rbp+var_314]
0000000000005caf         and        eax, 0xf000
0000000000005cb4         cmp        eax, 0x4000
0000000000005cb9         je         loc_70e0

0000000000005cbf         xor        ecx, ecx
0000000000005cc1         cmp        byte [rbx+0x1f], 0x0
0000000000005cc5         je         loc_5ce5

0000000000005cc7         cmp        byte [rbx+0x18], 0x0
0000000000005ccb         mov        ecx, 0x1
0000000000005cd0         je         loc_5ce5

0000000000005cd2         xor        ecx, ecx
0000000000005cd4         mov        rax, qword [rbp+var_280]
0000000000005cdb         cmp        qword [rbp+var_1F0], rax
0000000000005ce2         setne      cl

                     loc_5ce5:
0000000000005ce5         lea        r10, qword [rbp+var_280]                    ; CODE XREF=copy_internal+581, copy_internal+592
0000000000005cec         mov        rdi, qword [rbp+var_308]
0000000000005cf3         lea        rsi, qword [rbp+var_1F0]
0000000000005cfa         mov        byte [rbp+var_358], r9b
0000000000005d01         mov        byte [rbp+var_350], r8b
0000000000005d08         mov        rdx, r10
0000000000005d0b         call       utimecmp                                    ; utimecmp
0000000000005d10         test       eax, eax
0000000000005d12         movzx      r8d, byte [rbp+var_350]
0000000000005d1a         movzx      r9d, byte [rbp+var_358]
0000000000005d22         js         loc_6c70

0000000000005d28         mov        rax, qword [rbp+var_320]
0000000000005d2f         test       rax, rax
0000000000005d32         je         loc_5d37

0000000000005d34         mov        byte [rax], 0x1

                     loc_5d37:
0000000000005d37         mov        rdx, qword [rbp+var_280]                    ; CODE XREF=copy_internal+690
0000000000005d3e         mov        rsi, qword [rbp+var_278]
0000000000005d45         mov        rdi, qword [rbp+var_308]
0000000000005d4c         call       remember_copied                             ; remember_copied
0000000000005d51         test       rax, rax
0000000000005d54         je         loc_62c0

0000000000005d5a         movzx      ecx, byte [rbx+0x2e]
0000000000005d5e         mov        r8d, dword [rbp+var_328]
0000000000005d65         mov        edx, 0x1
0000000000005d6a         mov        rsi, qword [rbp+var_308]
0000000000005d71         mov        rdi, rax
0000000000005d74         call       create_hard_link                            ; create_hard_link
0000000000005d79         test       al, al
0000000000005d7b         jne        loc_62c0

0000000000005d81         cmp        byte [rbx+0x25], 0x0
0000000000005d85         jne        loc_6b90

0000000000005d8b         nop        dword [rax+rax]

                     loc_5d90:
0000000000005d90         xor        r12d, r12d                                  ; CODE XREF=copy_internal+1314, copy_internal+1742, copy_internal+1835, copy_internal+2030, copy_internal+2844, copy_internal+4018, copy_internal+4051, copy_internal+4144, copy_internal+4562, copy_internal+4948, copy_internal+5718
0000000000005d93         jmp        loc_62c6
0000000000005d98         align      32

                     loc_5da0:
0000000000005da0         mov        edx, 0xffffff9c                             ; CODE XREF=copy_internal+133
0000000000005da5         mov        rcx, rsi
0000000000005da8         mov        r8d, 0x1
0000000000005dae         mov        rsi, rdi
0000000000005db1         mov        edi, edx
0000000000005db3         call       renameatu                                   ; renameatu
0000000000005db8         test       eax, eax
0000000000005dba         jne        loc_6930

0000000000005dc0         mov        rax, qword [rbp+var_320]
0000000000005dc7         mov        r14d, r12d
0000000000005dca         test       rax, rax
0000000000005dcd         je         loc_5dd8

0000000000005dcf         mov        byte [rax], 0x1
0000000000005dd2         nop        word [rax+rax]

                     loc_5dd8:
0000000000005dd8         cmp        byte [rbx+0x31], 0x0                        ; CODE XREF=copy_internal+164, copy_internal+845
0000000000005ddc         jne        loc_5df0

0000000000005dde         mov        r12, qword [rbp+var_308]
0000000000005de5         xor        r15d, r15d
0000000000005de8         jmp        loc_5b3b
0000000000005ded         align      16

                     loc_5df0:
0000000000005df0         xor        r15d, r15d                                  ; CODE XREF=copy_internal+860
0000000000005df3         jmp        loc_5b88
0000000000005df8         align      512

                     loc_5e00:
0000000000005e00         xor        r9d, r9d                                    ; CODE XREF=copy_internal+369
0000000000005e03         mov        qword [rbp+var_350], 0x0

                     loc_5e0e:
0000000000005e0e         test       r13b, r13b                                  ; CODE XREF=copy_internal+2221, copy_internal+3657, copy_internal+6203, copy_internal+11176, copy_internal+11685
0000000000005e11         je         loc_5ed0

0000000000005e17         cmp        qword [rbx+0x40], 0x0
0000000000005e1c         je         loc_5ed0

                     loc_5e22:
0000000000005e22         movzx      r12d, byte [rbx+0x18]                       ; CODE XREF=copy_internal+11585
0000000000005e27         test       r12b, r12b
0000000000005e2a         jne        loc_5ed0

0000000000005e30         mov        edx, dword [rbx]
0000000000005e32         test       edx, edx
0000000000005e34         jne        loc_6ab8

0000000000005e3a         test       r9b, r9b
0000000000005e3d         lea        rdx, qword [rbp+var_1F0]
0000000000005e44         je         loc_76c0

                     loc_5e4a:
0000000000005e4a         mov        eax, dword [rdx+0x18]                       ; CODE XREF=copy_internal+7284
0000000000005e4d         and        eax, 0xf000
0000000000005e52         cmp        eax, 0xa000
0000000000005e57         jne        loc_5ed0

0000000000005e59         mov        rdi, qword [rbx+0x40]
0000000000005e5d         mov        rsi, qword [rbp+var_308]
0000000000005e64         call       seen_file                                   ; seen_file
0000000000005e69         test       al, al
0000000000005e6b         je         loc_5ed0

0000000000005e6d         mov        rdx, qword [rbp+var_308]
0000000000005e74         mov        esi, 0x4
0000000000005e79         mov        edi, 0x1
0000000000005e7e         call       quotearg_n_style                            ; quotearg_n_style
0000000000005e83         mov        rdx, qword [rbp+var_310]
0000000000005e8a         xor        edi, edi
0000000000005e8c         mov        esi, 0x4
0000000000005e91         mov        r13, rax
0000000000005e94         call       quotearg_n_style                            ; quotearg_n_style
0000000000005e99         lea        rsi, qword [aWillNotCopySTh]                ; argument "msgid" for method j_dcgettext, "will not copy %s through just-created symlink %s"
0000000000005ea0         mov        rbx, rax
0000000000005ea3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005ea5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005eaa         call       j_dcgettext                                 ; dcgettext
0000000000005eaf         mov        r8, r13
0000000000005eb2         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000005eb5         mov        rcx, rbx
0000000000005eb8         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005eba         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000005ebc         xor        eax, eax
0000000000005ebe         call       j_error                                     ; error
0000000000005ec3         jmp        loc_62c6
0000000000005ec8         align      16

                     loc_5ed0:
0000000000005ed0         cmp        byte [rbx+0x2e], 0x0                        ; CODE XREF=copy_internal+913, copy_internal+924, copy_internal+938, copy_internal+983, copy_internal+1003, copy_internal+7268
0000000000005ed4         je         loc_5ee0

0000000000005ed6         cmp        byte [rbx+0x18], 0x0
0000000000005eda         je         loc_6490

                     loc_5ee0:
0000000000005ee0         test       r15d, r15d                                  ; CODE XREF=copy_internal+1108, copy_internal+2592, copy_internal+2624
0000000000005ee3         je         loc_6280

                     loc_5ee9:
0000000000005ee9         cmp        byte [rbx+0x2a], 0x0                        ; CODE XREF=copy_internal+4171, copy_internal+10145, copy_internal+11591
0000000000005eed         je         loc_5f05

0000000000005eef         mov        eax, dword [rbp+var_314]
0000000000005ef5         and        eax, 0xf000
0000000000005efa         cmp        eax, 0x4000
0000000000005eff         je         loc_6ad0

                     loc_5f05:
0000000000005f05         movzx      eax, byte [rbx+0x18]                        ; CODE XREF=copy_internal+1133
0000000000005f09         test       al, al
0000000000005f0b         jne        loc_63b0

0000000000005f11         cmp        byte [rbx+0x22], 0x0
0000000000005f15         jne        loc_7af0

                     loc_5f1b:
0000000000005f1b         movzx      eax, r14b                                   ; CODE XREF=copy_internal+2052, copy_internal+4165
0000000000005f1f         mov        qword [rbp+var_358], 0x0
0000000000005f2a         mov        dword [rbp+var_320], eax

                     loc_5f30:
0000000000005f30         mov        r12d, dword [rbp+var_314]                   ; CODE XREF=copy_internal+2561, copy_internal+4445, copy_internal+9078
0000000000005f37         and        r12d, 0xfff
0000000000005f3e         cmp        byte [rbx+0x2b], 0x0
0000000000005f42         je         loc_5f4f

0000000000005f44         mov        r12d, dword [rbx+0x10]
0000000000005f48         and        r12d, 0xfff

                     loc_5f4f:
0000000000005f4f         cmp        byte [rbx+0x1d], 0x0                        ; CODE XREF=copy_internal+1218
0000000000005f53         jne        loc_6578

0000000000005f59         mov        r15d, dword [rbp+var_314]
0000000000005f60         and        r15d, 0xf000
0000000000005f67         cmp        r15d, 0x4000
0000000000005f6e         je         loc_6db0

0000000000005f74         mov        ecx, dword [rbp+var_320]
0000000000005f7a         mov        edx, dword [rbp+var_314]
0000000000005f80         mov        r8, rbx
0000000000005f83         mov        rsi, qword [rbp+var_308]
0000000000005f8a         mov        rdi, qword [rbp+var_310]
0000000000005f91         call       set_process_security_ctx                    ; set_process_security_ctx
0000000000005f96         test       al, al
0000000000005f98         mov        dword [rbp+var_35C], 0x0
0000000000005fa2         je         loc_5d90

                     loc_5fa8:
0000000000005fa8         movzx      eax, byte [rbx+0x2c]                        ; CODE XREF=copy_internal+2883
0000000000005fac         test       al, al
0000000000005fae         mov        byte [rbp+var_320], al
0000000000005fb4         jne        loc_6940

0000000000005fba         cmp        byte [rbx+0x17], 0x0
0000000000005fbe         je         loc_7308

0000000000005fc4         cmp        byte [rbx+0x16], 0x0
0000000000005fc8         mov        edx, 0x1
0000000000005fcd         jne        loc_5fd8

0000000000005fcf         xor        edx, edx
0000000000005fd1         cmp        dword [rbx+8], 0x3
0000000000005fd5         sete       dl

                     loc_5fd8:
0000000000005fd8         mov        r8d, dword [rbp+var_328]                    ; CODE XREF=copy_internal+1357
0000000000005fdf         mov        rsi, qword [rbp+var_308]
0000000000005fe6         xor        ecx, ecx
0000000000005fe8         mov        rdi, qword [rbp+var_310]
0000000000005fef         call       create_hard_link                            ; create_hard_link
0000000000005ff4         test       al, al
0000000000005ff6         je         loc_6a10

0000000000005ffc         xor        r8d, r8d

                     loc_5fff:
0000000000005fff         cmp        r15d, 0x4000                                ; CODE XREF=copy_internal+3886, copy_internal+8607, copy_internal+9717, copy_internal+10679, copy_internal+10716, copy_internal+13599, copy_internal+14252, copy_internal+14288, copy_internal+16386
0000000000006006         setne      r15b
000000000000600a         test       r14b, r14b
000000000000600d         jne        loc_6022

000000000000600f         movzx      eax, byte [rbx+0x14]
0000000000006013         xor        eax, 0x1
0000000000006016         and        al, r15b
0000000000006019         mov        r12d, eax
000000000000601c         jne        loc_7d50

                     loc_6022:
0000000000006022         test       r13b, r13b                                  ; CODE XREF=copy_internal+1421, copy_internal+8929, copy_internal+8976, copy_internal+8999
0000000000006025         mov        r12d, 0x1
000000000000602b         je         loc_6082

000000000000602d         mov        byte [rbp+var_330], 0x0

                     loc_6034:
0000000000006034         cmp        qword [rbx+0x40], 0x0                       ; CODE XREF=copy_internal+9526
0000000000006039         je         loc_606d

000000000000603b         lea        r12, qword [rbp+var_D0]
0000000000006042         mov        rsi, qword [rbp+var_308]                    ; argument "__filename" for method j___lxstat
0000000000006049         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
000000000000604e         mov        byte [rbp+var_328], r8b
0000000000006055         mov        rdx, r12                                    ; argument "__stat_buf" for method j___lxstat
0000000000006058         call       j___lxstat                                  ; __lxstat
000000000000605d         test       eax, eax
000000000000605f         movzx      r8d, byte [rbp+var_328]
0000000000006067         je         loc_80b2

                     loc_606d:
000000000000606d         movzx      eax, byte [rbp+var_330]                     ; CODE XREF=copy_internal+1465, copy_internal+9805
0000000000006074         movzx      r12d, byte [rbp+var_315]
000000000000607c         mov        byte [rbp+var_315], al

                     loc_6082:
0000000000006082         cmp        byte [rbx+0x17], 0x0                        ; CODE XREF=copy_internal+1451
0000000000006086         je         loc_6091

0000000000006088         test       r15b, r15b
000000000000608b         jne        loc_62c6

                     loc_6091:
0000000000006091         test       r8b, r8b                                    ; CODE XREF=copy_internal+1542
0000000000006094         jne        loc_62c6

                     loc_609a:
000000000000609a         cmp        byte [rbx+0x1f], 0x0                        ; CODE XREF=copy_internal+8032
000000000000609e         je         loc_6158

00000000000060a4         mov        rax, qword [rbp+var_238]
00000000000060ab         cmp        byte [rbp+var_320], 0x0
00000000000060b2         lea        rsi, qword [rbp+var_D0]
00000000000060b9         mov        rdi, qword [rbp+var_308]
00000000000060c0         mov        qword [rbp+var_D0], rax
00000000000060c7         mov        rax, qword [rbp+var_230]
00000000000060ce         mov        qword [rbp+var_C8], rax
00000000000060d5         mov        rax, qword [rbp+var_228]
00000000000060dc         mov        qword [rbp+var_C0], rax
00000000000060e3         mov        rax, qword [rbp+var_220]
00000000000060ea         mov        qword [rbp+var_B8], rax
00000000000060f1         je         loc_80a0

00000000000060f7         call       lutimens                                    ; lutimens
00000000000060fc         test       eax, eax
00000000000060fe         je         loc_6158

0000000000006100         call       j___errno_location                          ; __errno_location
0000000000006105         cmp        dword [rax], 0x26
0000000000006108         je         loc_6158

                     loc_610a:
000000000000610a         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+9773
0000000000006111         mov        edi, 0x4
0000000000006116         call       quotearg_style                              ; quotearg_style
000000000000611b         lea        rsi, qword [aPreservingTime]                ; argument "msgid" for method j_dcgettext, "preserving times for %s"
0000000000006122         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006124         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006129         mov        r13, rax
000000000000612c         call       j_dcgettext                                 ; dcgettext
0000000000006131         mov        r15, rax
0000000000006134         call       j___errno_location                          ; __errno_location
0000000000006139         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000613b         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000613d         xor        eax, eax
000000000000613f         mov        rcx, r13
0000000000006142         mov        rdx, r15                                    ; argument "__format" for method j_error
0000000000006145         call       j_error                                     ; error
000000000000614a         cmp        byte [rbx+0x24], 0x0
000000000000614e         jne        loc_5d90

0000000000006154         nop        dword [rax]

                     loc_6158:
0000000000006158         cmp        byte [rbp+var_320], 0x0                     ; CODE XREF=copy_internal+1566, copy_internal+1662, copy_internal+1672
000000000000615f         jne        loc_62c6

                     loc_6165:
0000000000006165         cmp        byte [rbx+0x1d], 0x0                        ; CODE XREF=copy_internal+9767
0000000000006169         je         loc_61c7

000000000000616b         test       r14b, r14b
000000000000616e         jne        loc_6182

0000000000006170         mov        eax, dword [rbp+var_1D4]
0000000000006176         cmp        dword [rbp+var_264], eax
000000000000617c         je         loc_882a

                     loc_6182:
0000000000006182         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+1774, copy_internal+11702
0000000000006189         lea        rcx, qword [rbp+var_280]
0000000000006190         lea        r9, qword [rbp+var_1F0]
0000000000006197         movzx      r8d, r14b
000000000000619b         mov        edx, 0xffffffff
00000000000061a0         mov        rdi, rbx
00000000000061a3         call       set_owner                                   ; set_owner
00000000000061a8         cmp        eax, 0xffffffff
00000000000061ab         je         loc_5d90

00000000000061b1         mov        ecx, dword [rbp+var_314]
00000000000061b7         mov        edx, ecx
00000000000061b9         and        dh, 0xf1
00000000000061bc         test       eax, eax
00000000000061be         cmovne     edx, ecx
00000000000061c1         mov        dword [rbp+var_314], edx

                     loc_61c7:
00000000000061c7         movabs     rax, 0xff0000000000ff                       ; CODE XREF=copy_internal+1769, copy_internal+11708
00000000000061d1         test       qword [rbx+0x18], rax
00000000000061d5         jne        loc_8270

00000000000061db         cmp        byte [rbx+0x2b], 0x0
00000000000061df         jne        loc_85d5

00000000000061e5         test       byte [rbx+0x20], r14b
00000000000061e9         jne        loc_8889

00000000000061ef         mov        eax, dword [rbp+var_35C]
00000000000061f5         test       eax, eax
00000000000061f7         jne        loc_8841

                     loc_61fd:
00000000000061fd         cmp        byte [rbp+var_315], 0x0                     ; CODE XREF=copy_internal+11726
0000000000006204         je         loc_62c6

                     loc_620a:
000000000000620a         mov        esi, dword [rbp+var_38C]                    ; CODE XREF=copy_internal+11739, copy_internal+11774
0000000000006210         or         esi, dword [rbp+var_35C]                    ; argument "__mode" for method j_chmod
0000000000006216         mov        rdi, qword [rbp+var_308]                    ; argument "__file" for method j_chmod
000000000000621d         call       j_chmod                                     ; chmod
0000000000006222         test       eax, eax
0000000000006224         je         loc_62c6

000000000000622a         mov        rsi, qword [rbp+var_308]
0000000000006231         mov        edi, 0x4
0000000000006236         call       quotearg_style                              ; quotearg_style
000000000000623b         lea        rsi, qword [aPreservingPerm]                ; argument "msgid" for method j_dcgettext, "preserving permissions for %s"
0000000000006242         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006247         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006249         mov        r14, rax
000000000000624c         call       j_dcgettext                                 ; dcgettext
0000000000006251         mov        r13, rax
0000000000006254         call       j___errno_location                          ; __errno_location
0000000000006259         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000625b         mov        rcx, r14
000000000000625e         mov        rdx, r13                                    ; argument "__format" for method j_error
0000000000006261         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006263         xor        eax, eax
0000000000006265         call       j_error                                     ; error

                     loc_626a:
000000000000626a         cmp        byte [rbx+0x24], 0x0                        ; CODE XREF=copy_internal+10259
000000000000626e         jne        loc_5d90

0000000000006274         jmp        loc_62c6
0000000000006276         align      128

                     loc_6280:
0000000000006280         cmp        byte [rbx+0x18], 0x0                        ; CODE XREF=copy_internal+1123
0000000000006284         je         loc_5f1b

                     loc_628a:
000000000000628a         cmp        byte [rbx+0x2e], 0x0                        ; CODE XREF=copy_internal+2420, copy_internal+2437
000000000000628e         jne        loc_6e10

                     loc_6294:
0000000000006294         cmp        byte [rbx+0x21], 0x0                        ; CODE XREF=copy_internal+5068
0000000000006298         jne        loc_6df0

                     loc_629e:
000000000000629e         mov        rax, qword [rbp+var_320]                    ; CODE XREF=copy_internal+4998
00000000000062a5         test       rax, rax
00000000000062a8         je         loc_62ad

00000000000062aa         mov        byte [rax], 0x1

                     loc_62ad:
00000000000062ad         test       r13b, r13b                                  ; CODE XREF=copy_internal+2088
00000000000062b0         je         loc_62c0

00000000000062b2         cmp        byte [rbx+0x31], 0x0
00000000000062b6         je         loc_6d28

00000000000062bc         nop        dword [rax]

                     loc_62c0:
00000000000062c0         mov        r12d, 0x1                                   ; CODE XREF=copy_internal+724, copy_internal+763, copy_internal+2096, copy_internal+3138, copy_internal+3203, copy_internal+3219, copy_internal+4748, copy_internal+4764, copy_internal+5492, copy_internal+9996

                     loc_62c6:
00000000000062c6         mov        rsi, qword [rbp+var_38]                     ; CODE XREF=copy_internal+787, copy_internal+1091, copy_internal+1547, copy_internal+1556, copy_internal+1759, copy_internal+1924, copy_internal+1956, copy_internal+2036, copy_internal+2337, copy_internal+3096, copy_internal+3748
00000000000062ca         xor        rsi, qword [fs:0x28]
00000000000062d3         mov        eax, r12d
00000000000062d6         jne        loc_8fa4

00000000000062dc         lea        rsp, qword [rbp+var_28]
00000000000062e0         pop        rbx
00000000000062e1         pop        r12
00000000000062e3         pop        r13
00000000000062e5         pop        r14
00000000000062e7         pop        r15
00000000000062e9         pop        rbp
00000000000062ea         ret
                        ; endp
00000000000062eb         align      16

                     loc_62f0:
00000000000062f0         call       j___errno_location                          ; __errno_location, CODE XREF=copy_internal+498
00000000000062f5         mov        r9, rax
00000000000062f8         mov        eax, dword [rax]
00000000000062fa         cmp        eax, 0x28
00000000000062fd         je         loc_68d0

0000000000006303         cmp        eax, 0x2
0000000000006306         mov        r8d, 0x1
000000000000630c         jne        loc_68da

                     loc_6312:
0000000000006312         xor        r9d, r9d                                    ; CODE XREF=copy_internal+4579
0000000000006315         cmp        r15d, 0x11
0000000000006319         je         loc_5c7b

000000000000631f         mov        r14d, r8d
0000000000006322         mov        qword [rbp+var_350], 0x0
000000000000632d         jmp        loc_5e0e
0000000000006332         align      8

                     loc_6338:
0000000000006338         cmp        dword [rbx+8], 0x2                          ; CODE XREF=copy_internal+181
000000000000633c         je         loc_5b88

0000000000006342         jmp        loc_5b3b
0000000000006347         align      16

                     loc_6350:
0000000000006350         call       j___lxstat                                  ; __lxstat, CODE XREF=copy_internal+209
0000000000006355         test       eax, eax
0000000000006357         mov        rsi, r12
000000000000635a         setne      al
000000000000635d         test       al, al
000000000000635f         je         loc_5b6c

                     loc_6365:
0000000000006365         mov        edi, 0x4                                    ; CODE XREF=copy_internal+230, copy_internal+14206
000000000000636a         call       quotearg_style                              ; quotearg_style
000000000000636f         lea        rsi, qword [aCannotStatS]                   ; "cannot stat %s"
0000000000006376         mov        r12, rax
0000000000006379         mov        edx, 0x5

                     loc_637e:
000000000000637e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=copy_internal+6272
0000000000006380         call       j_dcgettext                                 ; dcgettext
0000000000006385         mov        rbx, rax
0000000000006388         call       j___errno_location                          ; __errno_location
000000000000638d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000638f         mov        rcx, r12
0000000000006392         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000006395         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006397         xor        eax, eax
0000000000006399         xor        r12d, r12d
000000000000639c         call       j_error                                     ; error
00000000000063a1         jmp        loc_62c6
00000000000063a6         align      16

                     loc_63b0:
00000000000063b0         cmp        qword [rbp+var_270], 0x1                    ; CODE XREF=copy_internal+1163
00000000000063b8         je         loc_73e8

00000000000063be         cmp        byte [rbx+0x22], 0x0
00000000000063c2         mov        qword [rbp+var_358], 0x0
00000000000063cd         je         loc_63d9

00000000000063cf         cmp        byte [rbx+0x17], 0x0
00000000000063d3         je         loc_6b98

                     loc_63d9:
00000000000063d9         cmp        r15d, 0x11                                  ; CODE XREF=copy_internal+2381, copy_internal+4429
00000000000063dd         jne        loc_640b

00000000000063df         mov        rsi, qword [rbp+var_308]                    ; argument "__new" for method j_rename
00000000000063e6         mov        rdi, qword [rbp+var_310]                    ; argument "__old" for method j_rename
00000000000063ed         call       j_rename                                    ; rename
00000000000063f2         test       eax, eax
00000000000063f4         je         loc_628a

00000000000063fa         call       j___errno_location                          ; __errno_location
00000000000063ff         mov        r15d, dword [rax]
0000000000006402         test       r15d, r15d
0000000000006405         je         loc_628a

                     loc_640b:
000000000000640b         cmp        r15d, 0x16                                  ; CODE XREF=copy_internal+2397
000000000000640f         je         loc_7430

0000000000006415         cmp        r15d, 0x12
0000000000006419         jne        loc_6be8

000000000000641f         mov        r12d, dword [rbp+var_314]
0000000000006426         mov        rdi, qword [rbp+var_308]
000000000000642d         and        r12d, 0xf000
0000000000006434         cmp        r12d, 0x4000
000000000000643b         je         loc_74a0

0000000000006441         call       j_unlink                                    ; unlink
0000000000006446         test       eax, eax
0000000000006448         je         loc_645b

000000000000644a         call       j___errno_location                          ; __errno_location
000000000000644f         cmp        dword [rax], 0x2
0000000000006452         mov        r14, rax
0000000000006455         jne        loc_74be

                     loc_645b:
000000000000645b         cmp        r12d, 0x4000                                ; CODE XREF=copy_internal+2504
0000000000006462         setne      dl
0000000000006465         and        dl, byte [rbx+0x2e]
0000000000006468         mov        r14d, edx
000000000000646b         jne        loc_7db0

                     loc_6471:
0000000000006471         mov        dword [rbp+var_320], 0x1                    ; CODE XREF=copy_internal+6695, copy_internal+6712
000000000000647b         mov        r14d, 0x1
0000000000006481         jmp        loc_5f30
0000000000006486         align      16

                     loc_6490:
0000000000006490         mov        eax, dword [rbp+var_314]                    ; CODE XREF=copy_internal+1114, copy_internal+4156
0000000000006496         and        eax, 0xf000
000000000000649b         cmp        eax, 0x4000
00000000000064a0         je         loc_5ee0

00000000000064a6         mov        rdx, qword [rbp+var_350]
00000000000064ad         mov        rsi, qword [rbp+var_308]
00000000000064b4         mov        rdi, qword [rbp+var_310]
00000000000064bb         call       emit_verbose                                ; emit_verbose
00000000000064c0         jmp        loc_5ee0
00000000000064c5         align      8

                     loc_64c8:
00000000000064c8         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+309
00000000000064cf         mov        rdx, r10
00000000000064d2         mov        qword [rbp+var_328], r10
00000000000064d9         call       seen_file                                   ; seen_file
00000000000064de         test       al, al
00000000000064e0         mov        r12d, eax
00000000000064e3         jne        loc_73a8

00000000000064e9         mov        rdi, qword [rbx+0x48]
00000000000064ed         mov        r10, qword [rbp+var_328]
00000000000064f4         jmp        loc_5bbb
00000000000064f9         align      256

                     loc_6500:
0000000000006500         movzx      r9d, byte [rbx+0x18]                        ; CODE XREF=copy_internal+401, copy_internal+443
0000000000006505         mov        r8d, 0x100
000000000000650b         test       r9b, r9b
000000000000650e         jne        loc_5c41

0000000000006514         movzx      r9d, byte [rbx+0x2c]
0000000000006519         test       r9b, r9b
000000000000651c         jne        loc_5c41

0000000000006522         movzx      r9d, byte [rbx+0x17]
0000000000006527         test       r9b, r9b
000000000000652a         jne        loc_5c41

0000000000006530         mov        r10d, dword [rbx]
0000000000006533         mov        r9d, 0x1
0000000000006539         test       r10d, r10d
000000000000653c         jne        loc_5c41

0000000000006542         movzx      r9d, byte [rbx+0x15]
0000000000006547         xor        r8d, r8d
000000000000654a         test       r9b, r9b
000000000000654d         setne      r8b
0000000000006551         shl        r8d, 0x8
0000000000006555         jmp        loc_5c41
000000000000655a         align      32

                     loc_6560:
0000000000006560         cmp        dword [rbx+8], 0x2                          ; CODE XREF=copy_internal+379
0000000000006564         jne        loc_5c01

000000000000656a         xor        r8d, r8d
000000000000656d         xor        r9d, r9d
0000000000006570         jmp        loc_5c9f
0000000000006575         align      8

                     loc_6578:
0000000000006578         mov        ecx, dword [rbp+var_320]                    ; CODE XREF=copy_internal+1235
000000000000657e         mov        edx, dword [rbp+var_314]
0000000000006584         mov        r8, rbx
0000000000006587         mov        rsi, qword [rbp+var_308]
000000000000658e         mov        rdi, qword [rbp+var_310]
0000000000006595         call       set_process_security_ctx                    ; set_process_security_ctx
000000000000659a         test       al, al
000000000000659c         je         loc_5d90

00000000000065a2         mov        r15d, dword [rbp+var_314]
00000000000065a9         mov        eax, r12d
00000000000065ac         and        eax, 0x3f
00000000000065af         mov        dword [rbp+var_35C], eax
00000000000065b5         and        r15d, 0xf000
00000000000065bc         cmp        r15d, 0x4000
00000000000065c3         jne        loc_5fa8

                     loc_65c9:
00000000000065c9         mov        rax, qword [rbp+var_330]                    ; CODE XREF=copy_internal+4966
00000000000065d0         mov        rdx, qword [rbp+var_278]
00000000000065d7         mov        rcx, qword [rbp+var_280]
00000000000065de         test       rax, rax
00000000000065e1         jne        loc_65fc

00000000000065e3         jmp        loc_6ee0
00000000000065e8         align      16

                     loc_65f0:
00000000000065f0         mov        rax, qword [rax]                            ; CODE XREF=copy_internal+2944, copy_internal+2950
00000000000065f3         test       rax, rax
00000000000065f6         je         loc_6ee0

                     loc_65fc:
00000000000065fc         cmp        qword [rax+8], rdx                          ; CODE XREF=copy_internal+2913
0000000000006600         jne        loc_65f0

0000000000006602         cmp        qword [rax+0x10], rcx
0000000000006606         jne        loc_65f0

0000000000006608         mov        rsi, qword [rbp+var_310]
000000000000660f         mov        edi, 0x4
0000000000006614         call       quotearg_style                              ; quotearg_style
0000000000006619         lea        rsi, qword [aCannotCopyCycl]                ; "cannot copy cyclic symbolic link %s"
0000000000006620         mov        r12, rax
0000000000006623         mov        edx, 0x5

                     loc_6628:
0000000000006628         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=copy_internal+6402, copy_internal+8782
000000000000662a         call       j_dcgettext                                 ; dcgettext
000000000000662f         mov        rcx, r12
0000000000006632         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000006635         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000006637         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006639         xor        eax, eax
000000000000663b         call       j_error                                     ; error
0000000000006640         jmp        loc_6a10
0000000000006645         align      8

                     loc_6648:
0000000000006648         movzx      r12d, byte [rbx+0x2a]                       ; CODE XREF=copy_internal+258
000000000000664d         test       r12b, r12b
0000000000006650         jne        loc_5b88

0000000000006656         mov        rsi, qword [rbp+var_310]
000000000000665d         mov        edi, 0x4
0000000000006662         call       quotearg_style                              ; quotearg_style
0000000000006667         cmp        byte [rbx+0x19], 0x0
000000000000666b         mov        r13, rax
000000000000666e         mov        edx, 0x5
0000000000006673         jne        loc_7410

0000000000006679         lea        rsi, qword [aRNotSpecifiedO]                ; argument "msgid" for method j_dcgettext, "-r not specified; omitting directory %s"
0000000000006680         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006682         call       j_dcgettext                                 ; dcgettext
0000000000006687         mov        rdx, rax

                     loc_668a:
000000000000668a         mov        rcx, r13                                    ; CODE XREF=copy_internal+6561
000000000000668d         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000668f         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006691         xor        eax, eax
0000000000006693         call       j_error                                     ; error
0000000000006698         jmp        loc_62c6
000000000000669d         align      32

                     loc_66a0:
00000000000066a0         cmp        byte [rbx+0x18], 0x0                        ; CODE XREF=copy_internal+547
00000000000066a4         jne        loc_6c80

00000000000066aa         mov        eax, dword [rbp+var_314]
00000000000066b0         and        eax, 0xf000
00000000000066b5         cmp        eax, 0x4000
00000000000066ba         je         loc_6710

                     loc_66bc:
00000000000066bc         mov        eax, dword [rbx+8]                          ; CODE XREF=copy_internal+4596
00000000000066bf         cmp        eax, 0x2
00000000000066c2         je         loc_62c0

00000000000066c8         cmp        eax, 0x3
00000000000066cb         jne        loc_6710

00000000000066cd         mov        rsi, qword [rbp+var_308]
00000000000066d4         lea        rdx, qword [rbp+var_1D8]
00000000000066db         mov        rdi, rbx
00000000000066de         mov        byte [rbp+var_358], r9b
00000000000066e5         mov        byte [rbp+var_350], r8b
00000000000066ec         call       overwrite_ok.isra.12                        ; overwrite_ok.isra.12
00000000000066f1         test       al, al
00000000000066f3         movzx      r8d, byte [rbp+var_350]
00000000000066fb         movzx      r9d, byte [rbp+var_358]
0000000000006703         je         loc_62c0

0000000000006709         nop        dword [rax]

                     loc_6710:
0000000000006710         test       r14b, r14b                                  ; CODE XREF=copy_internal+3130, copy_internal+3147, copy_internal+4624, copy_internal+4634, copy_internal+4690, copy_internal+5732, copy_internal+9888
0000000000006713         jne        loc_62c0

0000000000006719         mov        eax, dword [rbp+var_1D8]
000000000000671f         mov        r12d, dword [rbp+var_314]
0000000000006726         mov        edx, eax
0000000000006728         and        r12d, 0xf000
000000000000672f         and        edx, 0xf000
0000000000006735         cmp        edx, 0x4000
000000000000673b         je         loc_6d50

0000000000006741         cmp        r12d, 0x4000
0000000000006748         je         loc_79e8

000000000000674e         test       r13b, r13b
0000000000006751         mov        r15d, dword [rbx]
0000000000006754         je         loc_7273

                     loc_675a:
000000000000675a         cmp        r15d, 0x3                                   ; CODE XREF=copy_internal+8065
000000000000675e         jne        loc_7210

0000000000006764         cmp        byte [rbx+0x18], 0x0
0000000000006768         jne        loc_7a07

                     loc_676e:
000000000000676e         mov        rdi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+6146
0000000000006775         mov        byte [rbp+var_358], r9b
000000000000677c         mov        byte [rbp+var_350], r8b
0000000000006783         call       last_component                              ; last_component
0000000000006788         cmp        byte [rax], 0x2e
000000000000678b         mov        r14, rax
000000000000678e         movzx      r8d, byte [rbp+var_350]
0000000000006796         movzx      r9d, byte [rbp+var_358]
000000000000679e         jne        loc_67c7

00000000000067a0         xor        eax, eax

                     loc_67a2:
00000000000067a2         xor        edx, edx                                    ; CODE XREF=copy_internal+8154
00000000000067a4         cmp        byte [r14+1], 0x2e
00000000000067a9         sete       dl
00000000000067ac         movzx      edx, byte [r14+rdx+1]
00000000000067b2         test       dl, dl
00000000000067b4         je         loc_7288

00000000000067ba         cmp        dl, 0x2f
00000000000067bd         je         loc_7288

00000000000067c3         test       al, al
00000000000067c5         jne        loc_67dd

                     loc_67c7:
00000000000067c7         mov        eax, dword [rbp+var_1D8]                    ; CODE XREF=copy_internal+3358
00000000000067cd         and        eax, 0xf000
00000000000067d2         cmp        eax, 0x4000
00000000000067d7         je         loc_72a7

                     loc_67dd:
00000000000067dd         cmp        r15d, 0x3                                   ; CODE XREF=copy_internal+3397, copy_internal+8143
00000000000067e1         je         loc_6849

00000000000067e3         mov        rdi, r14                                    ; argument "__s" for method j_strlen
00000000000067e6         mov        byte [rbp+var_35C], r9b
00000000000067ed         call       j_strlen                                    ; strlen
00000000000067f2         mov        rdi, qword [rbp+var_308]
00000000000067f9         mov        qword [rbp+var_350], rax
0000000000006800         call       last_component                              ; last_component
0000000000006805         mov        rdi, rax                                    ; argument "__s" for method j_strlen
0000000000006808         mov        qword [rbp+var_358], rax
000000000000680f         call       j_strlen                                    ; strlen
0000000000006814         mov        r15, qword [simple_backup_suffix]           ; simple_backup_suffix
000000000000681b         mov        r12, rax
000000000000681e         mov        rdi, r15                                    ; argument "__s" for method j_strlen
0000000000006821         call       j_strlen                                    ; strlen
0000000000006826         mov        r8, rax
0000000000006829         lea        rax, qword [r12+rax]
000000000000682d         cmp        qword [rbp+var_350], rax
0000000000006834         mov        rsi, qword [rbp+var_358]
000000000000683b         movzx      r9d, byte [rbp+var_35C]
0000000000006843         je         loc_829e

                     loc_6849:
0000000000006849         mov        edx, dword [rbx]                            ; CODE XREF=copy_internal+3425, copy_internal+10305, copy_internal+10340, copy_internal+10460, copy_internal+10480, copy_internal+10500
000000000000684b         mov        rsi, qword [rbp+var_308]
0000000000006852         mov        edi, 0xffffff9c
0000000000006857         mov        byte [rbp+var_350], r9b
000000000000685e         call       backup_file_rename                          ; backup_file_rename
0000000000006863         test       rax, rax
0000000000006866         mov        r12, rax
0000000000006869         movzx      r9d, byte [rbp+var_350]
0000000000006871         je         loc_8191

0000000000006877         mov        rdi, rax                                    ; argument "__s" for method j_strlen
000000000000687a         mov        byte [rbp+var_358], r9b
0000000000006881         mov        r14d, 0x1
0000000000006887         call       j_strlen                                    ; strlen
000000000000688c         lea        rdx, qword [rax+1]                          ; argument "__n" for method j_memcpy
0000000000006890         add        rax, 0x1f
0000000000006894         mov        rsi, r12                                    ; argument "__src" for method j_memcpy
0000000000006897         and        rax, 0xfffffffffffffff0
000000000000689b         mov        r15d, 0x11
00000000000068a1         sub        rsp, rax
00000000000068a4         lea        rdi, qword [rsp+0x3c0+var_3B1]
00000000000068a9         and        rdi, 0xfffffffffffffff0                     ; argument "__dest" for method j_memcpy
00000000000068ad         call       j_memcpy                                    ; memcpy
00000000000068b2         mov        rdi, r12
00000000000068b5         mov        qword [rbp+var_350], rax
00000000000068bc         call       sub_2e10                                    ; sub_2e10
00000000000068c1         movzx      r9d, byte [rbp+var_358]
00000000000068c9         jmp        loc_5e0e
00000000000068ce         align      16

                     loc_68d0:
00000000000068d0         cmp        byte [rbx+0x16], 0x0                        ; CODE XREF=copy_internal+2173
00000000000068d4         jne        loc_6c60

                     loc_68da:
00000000000068da         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+2188
00000000000068e1         mov        edi, 0x4
00000000000068e6         mov        qword [rbp+var_310], r9
00000000000068ed         xor        r12d, r12d
00000000000068f0         call       quotearg_style                              ; quotearg_style
00000000000068f5         lea        rsi, qword [aCannotStatS]                   ; argument "msgid" for method j_dcgettext, "cannot stat %s"
00000000000068fc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006901         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006903         mov        rbx, rax
0000000000006906         call       j_dcgettext                                 ; dcgettext
000000000000690b         mov        r9, qword [rbp+var_310]
0000000000006912         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000006915         mov        rcx, rbx
0000000000006918         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000691a         xor        eax, eax
000000000000691c         mov        esi, dword [r9]                             ; argument "__errnum" for method j_error
000000000000691f         call       j_error                                     ; error
0000000000006924         jmp        loc_62c6
0000000000006929         align      16

                     loc_6930:
0000000000006930         call       j___errno_location                          ; __errno_location, CODE XREF=copy_internal+826
0000000000006935         mov        r15d, dword [rax]
0000000000006938         jmp        loc_5b0b
000000000000693d         align      64

                     loc_6940:
0000000000006940         mov        rax, qword [rbp+var_310]                    ; CODE XREF=copy_internal+1332
0000000000006947         cmp        byte [rax], 0x2f
000000000000694a         je         loc_6984

000000000000694c         mov        rdi, qword [rbp+var_308]
0000000000006953         call       dir_name                                    ; dir_name
0000000000006958         lea        r8, qword [aTargetSIsNotAD+30]              ; 0x12a39
000000000000695f         mov        rdi, rax
0000000000006962         mov        ecx, 0x2
0000000000006967         mov        r12, rax
000000000000696a         mov        rsi, r8
000000000000696d         rep  cmpsb byte [rsi], byte [rdi]
000000000000696f         seta       al
0000000000006972         sbb        al, 0x0
0000000000006974         test       al, al
0000000000006976         jne        loc_7c58

                     loc_697c:
000000000000697c         mov        rdi, r12                                    ; CODE XREF=copy_internal+8686, copy_internal+8714, copy_internal+13115
000000000000697f         call       sub_2e10                                    ; sub_2e10

                     loc_6984:
0000000000006984         movzx      ecx, byte [rbx+0x16]                        ; CODE XREF=copy_internal+3786
0000000000006988         mov        rdx, qword [rbp+var_308]
000000000000698f         mov        r8d, 0xffffffff
0000000000006995         mov        rdi, qword [rbp+var_310]
000000000000699c         mov        esi, 0xffffff9c
00000000000069a1         call       force_symlinkat                             ; force_symlinkat
00000000000069a6         xor        r8d, r8d
00000000000069a9         test       eax, eax
00000000000069ab         mov        r12d, eax
00000000000069ae         jle        loc_5fff

00000000000069b4         mov        rdx, qword [rbp+var_310]
00000000000069bb         mov        esi, 0x4
00000000000069c0         mov        edi, 0x1
00000000000069c5         call       quotearg_n_style                            ; quotearg_n_style
00000000000069ca         mov        rdx, qword [rbp+var_308]
00000000000069d1         mov        esi, 0x4
00000000000069d6         xor        edi, edi
00000000000069d8         mov        r13, rax
00000000000069db         call       quotearg_n_style                            ; quotearg_n_style
00000000000069e0         lea        rsi, qword [aCannotCreateSy_14b50]          ; argument "msgid" for method j_dcgettext, "cannot create symbolic link %s to %s"
00000000000069e7         mov        r14, rax
00000000000069ea         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000069ef         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000069f1         call       j_dcgettext                                 ; dcgettext
00000000000069f6         mov        r8, r13
00000000000069f9         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000069fc         mov        rcx, r14
00000000000069ff         mov        esi, r12d                                   ; argument "__errnum" for method j_error
0000000000006a02         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006a04         xor        eax, eax
0000000000006a06         call       j_error                                     ; error
0000000000006a0b         nop        dword [rax+rax]

                     loc_6a10:
0000000000006a10         cmp        byte [rbx+0x25], 0x0                        ; CODE XREF=copy_internal+1398, copy_internal+3008, copy_internal+5375, copy_internal+8613, copy_internal+8990, copy_internal+10977, copy_internal+11283, copy_internal+11518, copy_internal+16380
0000000000006a14         jne        loc_6b90

0000000000006a1a         cmp        qword [rbp+var_358], 0x0
0000000000006a22         je         loc_72c0

                     loc_6a28:
0000000000006a28         mov        rax, qword [rbp+var_350]                    ; CODE XREF=copy_internal+4362, copy_internal+6227
0000000000006a2f         test       rax, rax
0000000000006a32         je         loc_5d90

0000000000006a38         mov        rsi, qword [rbp+var_308]                    ; argument "__new" for method j_rename
0000000000006a3f         mov        rdi, rax                                    ; argument "__old" for method j_rename
0000000000006a42         call       j_rename                                    ; rename
0000000000006a47         test       eax, eax
0000000000006a49         jne        loc_72e0

0000000000006a4f         cmp        byte [rbx+0x2e], 0x0
0000000000006a53         je         loc_5d90

0000000000006a59         mov        rdx, qword [rbp+var_308]
0000000000006a60         mov        esi, 0x4
0000000000006a65         mov        edi, 0x1
0000000000006a6a         call       quotearg_n_style                            ; quotearg_n_style
0000000000006a6f         mov        rdx, qword [rbp+var_350]
0000000000006a76         xor        edi, edi
0000000000006a78         mov        esi, 0x4
0000000000006a7d         mov        r12, rax
0000000000006a80         call       quotearg_n_style                            ; quotearg_n_style
0000000000006a85         lea        rsi, qword [aSSUnbackupn]                   ; argument "msgid" for method j_dcgettext, "%s -> %s (unbackup)\\n"
0000000000006a8c         mov        rbx, rax
0000000000006a8f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006a91         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006a96         call       j_dcgettext                                 ; dcgettext
0000000000006a9b         mov        rcx, r12
0000000000006a9e         mov        rsi, rax
0000000000006aa1         mov        rdx, rbx
0000000000006aa4         mov        edi, 0x1
0000000000006aa9         xor        eax, eax
0000000000006aab         call       j___printf_chk                              ; __printf_chk
0000000000006ab0         jmp        loc_5d90
0000000000006ab5         align      8

                     loc_6ab8:
0000000000006ab8         cmp        byte [rbx+0x2e], 0x0                        ; CODE XREF=copy_internal+948
0000000000006abc         jne        loc_6490

0000000000006ac2         test       r15d, r15d
0000000000006ac5         je         loc_5f1b

0000000000006acb         jmp        loc_5ee9

                     loc_6ad0:
0000000000006ad0         test       r13b, r13b                                  ; CODE XREF=copy_internal+1151
0000000000006ad3         mov        rdx, qword [rbp+var_280]
0000000000006ada         mov        rdi, qword [rbp+var_278]
0000000000006ae1         je         loc_7390

0000000000006ae7         mov        rsi, rdi
0000000000006aea         mov        rdi, qword [rbp+var_308]
0000000000006af1         call       remember_copied                             ; remember_copied
0000000000006af6         mov        qword [rbp+var_358], rax

                     loc_6afd:
0000000000006afd         cmp        qword [rbp+var_358], 0x0                    ; CODE XREF=copy_internal+6431
0000000000006b05         je         loc_7000

                     loc_6b0b:
0000000000006b0b         mov        rsi, qword [rbp+var_358]                    ; CODE XREF=copy_internal+5443
0000000000006b12         mov        rdi, qword [rbp+var_310]
0000000000006b19         call       same_name                                   ; same_name
0000000000006b1e         test       al, al
0000000000006b20         je         loc_7a60

0000000000006b26         mov        rdx, qword [top_level_dst_name]             ; top_level_dst_name
0000000000006b2d         mov        esi, 0x4
0000000000006b32         mov        edi, 0x1
0000000000006b37         call       quotearg_n_style                            ; quotearg_n_style
0000000000006b3c         mov        rdx, qword [top_level_src_name]             ; top_level_src_name
0000000000006b43         mov        esi, 0x4
0000000000006b48         xor        edi, edi
0000000000006b4a         mov        r13, rax
0000000000006b4d         call       quotearg_n_style                            ; quotearg_n_style
0000000000006b52         lea        rsi, qword [aCannotCopyADir]                ; argument "msgid" for method j_dcgettext, "cannot copy a directory, %s, into itself, %s"
0000000000006b59         mov        r12, rax
0000000000006b5c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006b61         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006b63         call       j_dcgettext                                 ; dcgettext
0000000000006b68         mov        r8, r13
0000000000006b6b         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000006b6e         mov        rcx, r12
0000000000006b71         xor        eax, eax
0000000000006b73         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000006b75         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006b77         call       j_error                                     ; error
0000000000006b7c         mov        rax, qword [rbp+var_340]
0000000000006b83         mov        byte [rax], 0x1

                     loc_6b86:
0000000000006b86         cmp        byte [rbx+0x25], 0x0                        ; CODE XREF=copy_internal+5486, copy_internal+8299
0000000000006b8a         je         loc_6a28

                     loc_6b90:
0000000000006b90         call       restore_default_fscreatecon_or_die          ; restore_default_fscreatecon_or_die, CODE XREF=copy_internal+773, copy_internal+3988, copy_internal+13560
0000000000006b95         nop        dword [rax]

                     loc_6b98:
0000000000006b98         cmp        qword [rbp+var_270], 0x1                    ; CODE XREF=copy_internal+2387, copy_internal+8308
0000000000006ba0         ja         loc_6f88

0000000000006ba6         test       r13b, r13b
0000000000006ba9         mov        edx, dword [rbx+4]
0000000000006bac         je         loc_6bb7

0000000000006bae         cmp        edx, 0x3
0000000000006bb1         je         loc_6f88

                     loc_6bb7:
0000000000006bb7         cmp        edx, 0x4                                    ; CODE XREF=copy_internal+4396
0000000000006bba         mov        qword [rbp+var_358], 0x0
0000000000006bc5         je         loc_6f88

                     loc_6bcb:
0000000000006bcb         test       al, al                                      ; CODE XREF=copy_internal+5508
0000000000006bcd         jne        loc_63d9

                     loc_6bd3:
0000000000006bd3         movzx      eax, r14b                                   ; CODE XREF=copy_internal+8325
0000000000006bd7         mov        dword [rbp+var_320], eax
0000000000006bdd         jmp        loc_5f30
0000000000006be2         align      8

                     loc_6be8:
0000000000006be8         mov        rdx, qword [rbp+var_308]                    ; CODE XREF=copy_internal+2457
0000000000006bef         mov        esi, 0x4
0000000000006bf4         mov        edi, 0x1
0000000000006bf9         call       quotearg_n_style                            ; quotearg_n_style
0000000000006bfe         mov        rdx, qword [rbp+var_310]
0000000000006c05         mov        esi, 0x4
0000000000006c0a         xor        edi, edi
0000000000006c0c         mov        r12, rax
0000000000006c0f         call       quotearg_n_style                            ; quotearg_n_style
0000000000006c14         lea        rsi, qword [aCannotMoveSToS]                ; argument "msgid" for method j_dcgettext, "cannot move %s to %s"
0000000000006c1b         mov        rbx, rax
0000000000006c1e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006c23         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006c25         call       j_dcgettext                                 ; dcgettext
0000000000006c2a         mov        r8, r12
0000000000006c2d         mov        rcx, rbx
0000000000006c30         mov        rdx, rax
0000000000006c33         mov        esi, r15d

                     loc_6c36:
0000000000006c36         xor        edi, edi                                    ; argument "__status" for method j_error, CODE XREF=copy_internal+6796
0000000000006c38         xor        eax, eax
0000000000006c3a         call       j_error                                     ; error
0000000000006c3f         mov        rsi, qword [rbp+var_280]
0000000000006c46         mov        rdi, qword [rbp+var_278]
0000000000006c4d         call       forget_created                              ; forget_created
0000000000006c52         jmp        loc_5d90
0000000000006c57         align      32

                     loc_6c60:
0000000000006c60         xor        r8d, r8d                                    ; CODE XREF=copy_internal+3668
0000000000006c63         jmp        loc_6312
0000000000006c68         align      16

                     loc_6c70:
0000000000006c70         cmp        byte [rbx+0x18], 0x0                        ; CODE XREF=copy_internal+674
0000000000006c74         je         loc_66bc

0000000000006c7a         nop        word [rax+rax]

                     loc_6c80:
0000000000006c80         mov        eax, dword [rbx+8]                          ; CODE XREF=copy_internal+3108, copy_internal+5738
0000000000006c83         cmp        eax, 0x2
0000000000006c86         je         loc_6d04

0000000000006c88         cmp        eax, 0x3
0000000000006c8b         je         loc_6cd8

0000000000006c8d         cmp        eax, 0x4
0000000000006c90         jne        loc_6710

0000000000006c96         cmp        byte [rbx+0x2f], 0x0
0000000000006c9a         je         loc_6710

0000000000006ca0         mov        esi, dword [rbp+var_1D8]
0000000000006ca6         mov        rdi, qword [rbp+var_308]
0000000000006cad         mov        byte [rbp+var_358], r9b
0000000000006cb4         mov        byte [rbp+var_350], r8b
0000000000006cbb         call       writable_destination                        ; writable_destination
0000000000006cc0         test       al, al
0000000000006cc2         movzx      r8d, byte [rbp+var_350]
0000000000006cca         movzx      r9d, byte [rbp+var_358]
0000000000006cd2         jne        loc_6710

                     loc_6cd8:
0000000000006cd8         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+4619
0000000000006cdf         lea        rdx, qword [rbp+var_1D8]
0000000000006ce6         mov        rdi, rbx
0000000000006ce9         mov        byte [rbp+var_358], r9b
0000000000006cf0         mov        byte [rbp+var_350], r8b
0000000000006cf7         call       overwrite_ok.isra.12                        ; overwrite_ok.isra.12
0000000000006cfc         test       al, al
0000000000006cfe         jne        loc_8110

                     loc_6d04:
0000000000006d04         cmp        qword [rbp+var_320], 0x0                    ; CODE XREF=copy_internal+4614, copy_internal+9990
0000000000006d0c         je         loc_62c0

0000000000006d12         mov        rax, qword [rbp+var_320]
0000000000006d19         mov        byte [rax], 0x1
0000000000006d1c         jmp        loc_62c0
0000000000006d21         align      8

                     loc_6d28:
0000000000006d28         mov        rdi, qword [rbx+0x40]                       ; CODE XREF=copy_internal+2102
0000000000006d2c         mov        rsi, qword [rbp+var_308]
0000000000006d33         lea        rdx, qword [rbp+var_280]
0000000000006d3a         mov        r12d, r13d
0000000000006d3d         call       record_file                                 ; record_file
0000000000006d42         jmp        loc_62c6
0000000000006d47         align      16

                     loc_6d50:
0000000000006d50         cmp        r12d, 0x4000                                ; CODE XREF=copy_internal+3259
0000000000006d57         je         loc_7270

                     loc_6d5d:
0000000000006d5d         cmp        byte [rbx+0x18], 0x0                        ; CODE XREF=copy_internal+6122
0000000000006d61         je         loc_6d6f

0000000000006d63         mov        r15d, dword [rbx]
0000000000006d66         test       r15d, r15d
0000000000006d69         jne        loc_7a07

                     loc_6d6f:
0000000000006d6f         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+4833
0000000000006d76         mov        edi, 0x4
0000000000006d7b         xor        r12d, r12d
0000000000006d7e         call       quotearg_style                              ; quotearg_style
0000000000006d83         lea        rsi, qword [aCannotOverwrit]                ; argument "msgid" for method j_dcgettext, "cannot overwrite directory %s with non-directory"
0000000000006d8a         mov        rbx, rax
0000000000006d8d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006d92         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006d94         call       j_dcgettext                                 ; dcgettext
0000000000006d99         mov        rcx, rbx
0000000000006d9c         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000006d9f         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000006da1         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006da3         xor        eax, eax
0000000000006da5         call       j_error                                     ; error
0000000000006daa         jmp        loc_62c6
0000000000006daf         align      16

                     loc_6db0:
0000000000006db0         mov        ecx, dword [rbp+var_320]                    ; CODE XREF=copy_internal+1262
0000000000006db6         mov        edx, dword [rbp+var_314]
0000000000006dbc         mov        r8, rbx
0000000000006dbf         mov        rsi, qword [rbp+var_308]
0000000000006dc6         mov        rdi, qword [rbp+var_310]
0000000000006dcd         call       set_process_security_ctx                    ; set_process_security_ctx
0000000000006dd2         test       al, al
0000000000006dd4         je         loc_5d90

0000000000006dda         mov        eax, r12d
0000000000006ddd         and        eax, 0x12
0000000000006de0         mov        dword [rbp+var_35C], eax
0000000000006de6         jmp        loc_65c9
0000000000006deb         align      16

                     loc_6df0:
0000000000006df0         mov        rdi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+2072
0000000000006df7         mov        rcx, rbx
0000000000006dfa         mov        edx, 0x1
0000000000006dff         xor        esi, esi
0000000000006e01         call       set_file_security_ctx                       ; set_file_security_ctx
0000000000006e06         jmp        loc_629e
0000000000006e0b         align      16

                     loc_6e10:
0000000000006e10         lea        rsi, qword [aRenamed]                       ; argument "msgid" for method j_dcgettext, "renamed ", CODE XREF=copy_internal+2062
0000000000006e17         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006e1c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006e1e         call       j_dcgettext                                 ; dcgettext
0000000000006e23         mov        edi, 0x1
0000000000006e28         mov        rsi, rax
0000000000006e2b         xor        eax, eax
0000000000006e2d         call       j___printf_chk                              ; __printf_chk
0000000000006e32         mov        rdx, qword [rbp+var_350]
0000000000006e39         mov        rsi, qword [rbp+var_308]
0000000000006e40         mov        rdi, qword [rbp+var_310]
0000000000006e47         call       emit_verbose                                ; emit_verbose
0000000000006e4c         jmp        loc_6294
0000000000006e51         align      8

                     loc_6e58:
0000000000006e58         mov        rax, qword [rbp+var_1F0]                    ; CODE XREF=copy_internal+527
0000000000006e5f         cmp        qword [rbp+var_280], rax
0000000000006e66         jne        loc_5c95

0000000000006e6c         movzx      eax, byte [rbx+0x17]
0000000000006e70         test       al, al
0000000000006e72         jne        loc_7208

0000000000006e78         cmp        dword [rbx+4], 0x2
0000000000006e7c         mov        ecx, 0x1
0000000000006e81         mov        r15d, 0x1
0000000000006e87         je         loc_7015

0000000000006e8d         lea        r12, qword [rbp+var_160]
0000000000006e94         mov        rsi, qword [rbp+var_308]                    ; argument "__filename" for method j___lxstat
0000000000006e9b         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000006ea0         mov        byte [rbp+var_358], r9b
0000000000006ea7         mov        byte [rbp+var_350], r8b
0000000000006eae         mov        rdx, r12                                    ; argument "__stat_buf" for method j___lxstat
0000000000006eb1         call       j___lxstat                                  ; __lxstat
0000000000006eb6         test       eax, eax
0000000000006eb8         movzx      r8d, byte [rbp+var_350]
0000000000006ec0         movzx      r9d, byte [rbp+var_358]
0000000000006ec8         je         loc_7ed2

                     loc_6ece:
0000000000006ece         xor        r14d, r14d                                  ; CODE XREF=copy_internal+5576, copy_internal+5586, copy_internal+5605, copy_internal+5626, copy_internal+8877, copy_internal+8886, copy_internal+9350, copy_internal+9452
0000000000006ed1         jmp        loc_5c9f
0000000000006ed6         align      32

                     loc_6ee0:
0000000000006ee0         sub        rsp, 0x30                                   ; CODE XREF=copy_internal+2915, copy_internal+2934
0000000000006ee4         mov        rsi, qword [rbp+var_330]
0000000000006eeb         lea        rax, qword [rsp+0x3f0+var_3E1]
0000000000006ef0         and        rax, 0xfffffffffffffff0
0000000000006ef4         test       r14b, r14b
0000000000006ef7         mov        qword [rbp+var_328], rax
0000000000006efe         mov        qword [rax], rsi
0000000000006f01         mov        qword [rax+8], rdx
0000000000006f05         mov        qword [rax+0x10], rcx
0000000000006f09         jne        loc_6f21

0000000000006f0b         mov        eax, dword [rbp+var_1D8]
0000000000006f11         and        eax, 0xf000
0000000000006f16         cmp        eax, 0x4000
0000000000006f1b         je         loc_7f78

                     loc_6f21:
0000000000006f21         mov        esi, dword [rbp+var_35C]                    ; CODE XREF=copy_internal+5257
0000000000006f27         mov        r15, qword [rbp+var_308]
0000000000006f2e         not        esi
0000000000006f30         mov        rdi, r15                                    ; argument "__path" for method j_mkdir
0000000000006f33         and        esi, r12d                                   ; argument "__mode" for method j_mkdir
0000000000006f36         call       j_mkdir                                     ; mkdir
0000000000006f3b         test       eax, eax
0000000000006f3d         je         loc_7700

0000000000006f43         mov        rsi, r15
0000000000006f46         mov        edi, 0x4
0000000000006f4b         call       quotearg_style                              ; quotearg_style
0000000000006f50         lea        rsi, qword [aCannotCreateDi]                ; "cannot create directory %s"
0000000000006f57         mov        r13, rax
0000000000006f5a         mov        edx, 0x5

                     loc_6f5f:
0000000000006f5f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=copy_internal+9755, copy_internal+9925, copy_internal+10219, copy_internal+10754, copy_internal+11555, copy_internal+13539
0000000000006f61         call       j_dcgettext                                 ; dcgettext
0000000000006f66         mov        r12, rax
0000000000006f69         call       j___errno_location                          ; __errno_location
0000000000006f6e         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000006f70         mov        rcx, r13
0000000000006f73         mov        rdx, r12                                    ; argument "__format" for method j_error
0000000000006f76         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006f78         xor        eax, eax
0000000000006f7a         call       j_error                                     ; error
0000000000006f7f         jmp        loc_6a10
0000000000006f84         align      8

                     loc_6f88:
0000000000006f88         mov        rdx, qword [rbp+var_280]                    ; CODE XREF=copy_internal+4384, copy_internal+4401, copy_internal+4421
0000000000006f8f         mov        rsi, qword [rbp+var_278]
0000000000006f96         mov        rdi, qword [rbp+var_308]
0000000000006f9d         call       remember_copied                             ; remember_copied
0000000000006fa2         mov        qword [rbp+var_358], rax

                     loc_6fa9:
0000000000006fa9         cmp        qword [rbp+var_358], 0x0                    ; CODE XREF=copy_internal+6530
0000000000006fb1         je         loc_7000

0000000000006fb3         mov        eax, dword [rbp+var_314]
0000000000006fb9         and        eax, 0xf000
0000000000006fbe         cmp        eax, 0x4000
0000000000006fc3         je         loc_6b0b

0000000000006fc9         movzx      ecx, byte [rbx+0x2e]
0000000000006fcd         mov        r8d, dword [rbp+var_328]
0000000000006fd4         mov        edx, 0x1
0000000000006fd9         mov        rsi, qword [rbp+var_308]
0000000000006fe0         mov        rdi, qword [rbp+var_358]
0000000000006fe7         call       create_hard_link                            ; create_hard_link
0000000000006fec         test       al, al
0000000000006fee         je         loc_6b86

0000000000006ff4         jmp        loc_62c0
0000000000006ff9         align      4096

                     loc_7000:
0000000000007000         movzx      eax, byte [rbx+0x18]                        ; CODE XREF=copy_internal+4229, copy_internal+5425, copy_internal+8193, copy_internal+8207, DATA XREF=copy_internal+11801
0000000000007004         jmp        loc_6bcb
0000000000007009         align      16

                     loc_7010:
0000000000007010         xor        ecx, ecx                                    ; CODE XREF=copy_internal+537
0000000000007012         xor        r15d, r15d

                     loc_7015:
0000000000007015         mov        eax, dword [rbp+var_268]                    ; CODE XREF=copy_internal+5127
000000000000701b         lea        rdx, qword [rbp+var_280]
0000000000007022         and        eax, 0xf000
0000000000007027         cmp        eax, 0xa000
000000000000702c         je         loc_7cd3

                     loc_7032:
0000000000007032         mov        esi, dword [rbx]                            ; CODE XREF=copy_internal+8810, copy_internal+9414, copy_internal+9436, copy_internal+9446
0000000000007034         test       esi, esi
0000000000007036         je         loc_7518

000000000000703c         test       cl, cl
000000000000703e         jne        loc_80d2

0000000000007044         cmp        byte [rbx+0x18], 0x0
0000000000007048         jne        loc_6ece

000000000000704e         cmp        dword [rbx+4], 0x2
0000000000007052         je         loc_6ece

0000000000007058         mov        eax, dword [rdx+0x18]
000000000000705b         and        eax, 0xf000
0000000000007060         cmp        eax, 0xa000
0000000000007065         jne        loc_6ece

000000000000706b         mov        eax, dword [r12+0x18]
0000000000007070         and        eax, 0xf000
0000000000007075         cmp        eax, 0xa000
000000000000707a         je         loc_6ece

                     loc_7080:
0000000000007080         mov        rdx, qword [rbp+var_308]                    ; CODE XREF=copy_internal+6015, copy_internal+6881, copy_internal+7197, copy_internal+8851
0000000000007087         mov        esi, 0x4
000000000000708c         mov        edi, 0x1
0000000000007091         call       quotearg_n_style                            ; quotearg_n_style
0000000000007096         mov        rdx, qword [rbp+var_310]
000000000000709d         mov        esi, 0x4
00000000000070a2         xor        edi, edi
00000000000070a4         mov        r12, rax
00000000000070a7         call       quotearg_n_style                            ; quotearg_n_style
00000000000070ac         lea        rsi, qword [aSAndSAreTheSam]                ; "%s and %s are the same file"
00000000000070b3         mov        rbx, rax
00000000000070b6         mov        edx, 0x5

                     loc_70bb:
00000000000070bb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=copy_internal+9142, copy_internal+9639, copy_internal+11088
00000000000070bd         call       j_dcgettext                                 ; dcgettext
00000000000070c2         mov        r8, r12
00000000000070c5         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000070c8         mov        rcx, rbx
00000000000070cb         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000070cd         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000070cf         xor        eax, eax
00000000000070d1         call       j_error                                     ; error
00000000000070d6         jmp        loc_5d90
00000000000070db         align      32

                     loc_70e0:
00000000000070e0         cmp        byte [rbx+0x18], 0x0                        ; CODE XREF=copy_internal+569
00000000000070e4         je         loc_6710

00000000000070ea         jmp        loc_6c80
00000000000070ef         align      16

                     loc_70f0:
00000000000070f0         mov        eax, dword [r12+0x18]                       ; CODE XREF=copy_internal+6815, copy_internal+6825
00000000000070f5         and        eax, 0xf000
00000000000070fa         cmp        eax, 0xa000
00000000000070ff         je         loc_5c9f

0000000000007105         test       cl, cl
0000000000007107         je         loc_7115

0000000000007109         cmp        qword [r12+0x10], 0x1
000000000000710f         ja         loc_84cb

                     loc_7115:
0000000000007115         mov        eax, dword [rdx+0x18]                       ; CODE XREF=copy_internal+5767
0000000000007118         and        eax, 0xf000
000000000000711d         cmp        eax, 0xa000
0000000000007122         je         loc_7150

                     loc_7124:
0000000000007124         mov        rax, qword [r12+8]                          ; CODE XREF=copy_internal+10938
0000000000007129         cmp        qword [rdx+8], rax
000000000000712d         jne        loc_5c9f

0000000000007133         mov        rax, qword [r12]
0000000000007137         cmp        qword [rdx], rax
000000000000713a         jne        loc_5c9f

0000000000007140         movzx      eax, byte [rbx+0x17]
0000000000007144         test       al, al
0000000000007146         jne        loc_7208

                     loc_714c:
000000000000714c         movzx      esi, byte [rbx+0x18]                        ; CODE XREF=copy_internal+10911, copy_internal+10932

                     loc_7150:
0000000000007150         test       sil, sil                                    ; CODE XREF=copy_internal+5794
0000000000007153         je         loc_7542

0000000000007159         mov        eax, dword [rbp+var_268]
000000000000715f         and        eax, 0xf000
0000000000007164         cmp        eax, 0xa000
0000000000007169         jne        loc_7542

000000000000716f         cmp        qword [r12+0x10], 0x1
0000000000007175         jbe        loc_7542

000000000000717b         mov        rdi, qword [rbp+var_310]                    ; argument "__name" for method j_canonicalize_file_name
0000000000007182         mov        byte [rbp+var_35C], r9b
0000000000007189         mov        byte [rbp+var_358], r8b
0000000000007190         mov        qword [rbp+var_350], rdx
0000000000007197         call       j_canonicalize_file_name                    ; canonicalize_file_name
000000000000719c         test       rax, rax
000000000000719f         mov        r15, rax
00000000000071a2         mov        rdx, qword [rbp+var_350]
00000000000071a9         movzx      r8d, byte [rbp+var_358]
00000000000071b1         movzx      r9d, byte [rbp+var_35C]
00000000000071b9         je         loc_7542

00000000000071bf         mov        rsi, qword [rbp+var_308]
00000000000071c6         mov        rdi, rax
00000000000071c9         mov        byte [rbp+var_358], r9b
00000000000071d0         mov        byte [rbp+var_350], r8b
00000000000071d7         call       same_name                                   ; same_name
00000000000071dc         mov        rdi, r15
00000000000071df         xor        eax, 0x1
00000000000071e2         mov        r12d, eax
00000000000071e5         call       sub_2e10                                    ; sub_2e10
00000000000071ea         movzx      r8d, byte [rbp+var_350]
00000000000071f2         movzx      r9d, byte [rbp+var_358]
00000000000071fa         xor        eax, eax

                     loc_71fc:
00000000000071fc         test       r12b, r12b                                  ; CODE XREF=copy_internal+8906, copy_internal+9867, copy_internal+13072
00000000000071ff         je         loc_7080

0000000000007205         nop        dword [rax]

                     loc_7208:
0000000000007208         mov        r14d, eax                                   ; CODE XREF=copy_internal+5106, copy_internal+5830
000000000000720b         jmp        loc_5c9f

                     loc_7210:
0000000000007210         mov        rdi, qword [rbx+0x40]                       ; CODE XREF=copy_internal+3294
0000000000007214         mov        rsi, qword [rbp+var_308]
000000000000721b         lea        rdx, qword [rbp+var_1F0]
0000000000007222         mov        byte [rbp+var_358], r9b
0000000000007229         mov        byte [rbp+var_350], r8b
0000000000007230         call       seen_file                                   ; seen_file
0000000000007235         test       al, al
0000000000007237         movzx      r8d, byte [rbp+var_350]
000000000000723f         movzx      r9d, byte [rbp+var_358]
0000000000007247         jne        loc_8595

000000000000724d         cmp        r12d, 0x4000
0000000000007254         je         loc_7270

0000000000007256         mov        eax, dword [rbp+var_1D8]
000000000000725c         mov        edx, eax
000000000000725e         and        edx, 0xf000
0000000000007264         cmp        edx, 0x4000
000000000000726a         je         loc_6d5d

                     loc_7270:
0000000000007270         mov        r15d, dword [rbx]                           ; CODE XREF=copy_internal+4823, copy_internal+6100

                     loc_7273:
0000000000007273         movzx      eax, byte [rbx+0x18]                        ; CODE XREF=copy_internal+3284
0000000000007277         test       al, al
0000000000007279         jne        loc_7c30

000000000000727f         test       r15d, r15d
0000000000007282         jne        loc_676e

                     loc_7288:
0000000000007288         mov        edx, dword [rbp+var_1D8]                    ; CODE XREF=copy_internal+3380, copy_internal+3389
000000000000728e         and        edx, 0xf000
0000000000007294         cmp        edx, 0x4000
000000000000729a         sete       r12b
000000000000729e         or         r12b, al
00000000000072a1         je         loc_7e3b

                     loc_72a7:
00000000000072a7         mov        r14d, r8d                                   ; CODE XREF=copy_internal+3415, copy_internal+8649, copy_internal+10154, copy_internal+10182
00000000000072aa         mov        r15d, 0x11
00000000000072b0         mov        qword [rbp+var_350], 0x0
00000000000072bb         jmp        loc_5e0e

                     loc_72c0:
00000000000072c0         mov        rsi, qword [rbp+var_280]                    ; CODE XREF=copy_internal+4002
00000000000072c7         mov        rdi, qword [rbp+var_278]
00000000000072ce         call       forget_created                              ; forget_created
00000000000072d3         jmp        loc_6a28
00000000000072d8         align      32

                     loc_72e0:
00000000000072e0         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+4041
00000000000072e7         mov        edi, 0x4
00000000000072ec         call       quotearg_style                              ; quotearg_style
00000000000072f1         mov        edx, 0x5
00000000000072f6         mov        r12, rax
00000000000072f9         lea        rsi, qword [aCannotUnbackup]                ; "cannot un-backup %s"
0000000000007300         jmp        loc_637e
0000000000007305         align      8

                     loc_7308:
0000000000007308         cmp        r15d, 0x8000                                ; CODE XREF=copy_internal+1342
000000000000730f         je         loc_7b10

0000000000007315         cmp        r15d, 0xa000
000000000000731c         setne      r8b
0000000000007320         and        r8b, byte [rbx+0x14]
0000000000007324         jne        loc_7b10

000000000000732a         cmp        r15d, 0x1000
0000000000007331         je         loc_83f2

0000000000007337         mov        eax, r15d
000000000000733a         and        ah, 0xbf
000000000000733d         cmp        eax, 0x2000
0000000000007342         je         loc_802c

0000000000007348         cmp        r15d, 0xc000
000000000000734f         je         loc_802c

0000000000007355         cmp        r15d, 0xa000
000000000000735c         je         loc_86e0

0000000000007362         mov        rsi, qword [rbp+var_310]
0000000000007369         mov        edi, 0x4
000000000000736e         call       quotearg_style                              ; quotearg_style
0000000000007373         mov        edx, 0x5
0000000000007378         mov        r12, rax
000000000000737b         lea        rsi, qword [aSHasUnknownFil]                ; "%s has unknown file type"
0000000000007382         jmp        loc_6628
0000000000007387         align      16

                     loc_7390:
0000000000007390         mov        rsi, rdx                                    ; CODE XREF=copy_internal+4193
0000000000007393         call       src_to_dest_lookup                          ; src_to_dest_lookup
0000000000007398         mov        qword [rbp+var_358], rax
000000000000739f         jmp        loc_6afd
00000000000073a4         align      8

                     loc_73a8:
00000000000073a8         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+2659
00000000000073af         mov        edi, 0x4
00000000000073b4         call       quotearg_style                              ; quotearg_style
00000000000073b9         lea        rsi, qword [aWarningSourceF]                ; argument "msgid" for method j_dcgettext, "warning: source file %s specified more than once"
00000000000073c0         mov        rbx, rax
00000000000073c3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000073c5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000073ca         call       j_dcgettext                                 ; dcgettext
00000000000073cf         mov        rcx, rbx
00000000000073d2         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000073d5         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000073d7         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000073d9         xor        eax, eax
00000000000073db         call       j_error                                     ; error
00000000000073e0         jmp        loc_62c6
00000000000073e5         align      8

                     loc_73e8:
00000000000073e8         mov        rsi, qword [rbp+var_280]                    ; CODE XREF=copy_internal+2360
00000000000073ef         mov        rdi, qword [rbp+var_278]
00000000000073f6         call       src_to_dest_lookup                          ; src_to_dest_lookup
00000000000073fb         mov        qword [rbp+var_358], rax
0000000000007402         jmp        loc_6fa9
0000000000007407         align      16

                     loc_7410:
0000000000007410         lea        rsi, qword [aOmittingDirect]                ; argument "msgid" for method j_dcgettext, "omitting directory %s", CODE XREF=copy_internal+3059
0000000000007417         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007419         call       j_dcgettext                                 ; dcgettext
000000000000741e         mov        rdx, rax
0000000000007421         jmp        loc_668a
0000000000007426         align      16

                     loc_7430:
0000000000007430         mov        rdx, qword [top_level_dst_name]             ; top_level_dst_name, CODE XREF=copy_internal+2447
0000000000007437         mov        esi, 0x4
000000000000743c         mov        edi, 0x1
0000000000007441         call       quotearg_n_style                            ; quotearg_n_style
0000000000007446         mov        rdx, qword [top_level_src_name]             ; top_level_src_name
000000000000744d         mov        esi, 0x4
0000000000007452         xor        edi, edi
0000000000007454         mov        r12, rax
0000000000007457         call       quotearg_n_style                            ; quotearg_n_style
000000000000745c         lea        rsi, qword [aCannotMoveSToA]                ; argument "msgid" for method j_dcgettext, "cannot move %s to a subdirectory of itself, %s"
0000000000007463         mov        rbx, rax
0000000000007466         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000746b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000746d         call       j_dcgettext                                 ; dcgettext
0000000000007472         mov        r8, r12
0000000000007475         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000007478         mov        rcx, rbx
000000000000747b         xor        eax, eax
000000000000747d         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000747f         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000007481         call       j_error                                     ; error
0000000000007486         mov        rax, qword [rbp+var_340]
000000000000748d         mov        r12d, 0x1
0000000000007493         mov        byte [rax], 0x1
0000000000007496         jmp        loc_62c6
000000000000749b         align      32

                     loc_74a0:
00000000000074a0         call       j_rmdir                                     ; rmdir, CODE XREF=copy_internal+2491
00000000000074a5         test       eax, eax
00000000000074a7         je         loc_6471

00000000000074ad         call       j___errno_location                          ; __errno_location
00000000000074b2         cmp        dword [rax], 0x2
00000000000074b5         mov        r14, rax
00000000000074b8         je         loc_6471

                     loc_74be:
00000000000074be         mov        rdx, qword [rbp+var_308]                    ; CODE XREF=copy_internal+2517
00000000000074c5         mov        esi, 0x4
00000000000074ca         mov        edi, 0x1
00000000000074cf         call       quotearg_n_style                            ; quotearg_n_style
00000000000074d4         mov        rdx, qword [rbp+var_310]
00000000000074db         mov        esi, 0x4
00000000000074e0         xor        edi, edi
00000000000074e2         mov        r12, rax
00000000000074e5         call       quotearg_n_style                            ; quotearg_n_style
00000000000074ea         lea        rsi, qword [aInterdeviceMov]                ; argument "msgid" for method j_dcgettext, "inter-device move failed: %s to %s; unable to remove target"
00000000000074f1         mov        rbx, rax
00000000000074f4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000074f9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000074fb         call       j_dcgettext                                 ; dcgettext
0000000000007500         mov        r8, r12
0000000000007503         mov        rcx, rbx
0000000000007506         mov        rdx, rax
0000000000007509         mov        esi, dword [r14]
000000000000750c         jmp        loc_6c36
0000000000007511         align      8

                     loc_7518:
0000000000007518         movzx      esi, byte [rbx+0x18]                        ; CODE XREF=copy_internal+5558
000000000000751c         test       sil, sil
000000000000751f         jne        loc_70f0

0000000000007525         cmp        byte [rbx+0x15], 0x0
0000000000007529         jne        loc_70f0

000000000000752f         mov        eax, dword [rdx+0x18]
0000000000007532         and        eax, 0xf000
0000000000007537         cmp        eax, 0xa000
000000000000753c         jne        loc_8525

                     loc_7542:
0000000000007542         cmp        byte [rbx+0x2c], 0x0                        ; CODE XREF=copy_internal+5843, copy_internal+5865, copy_internal+5877, copy_internal+5945
0000000000007546         je         loc_755d

0000000000007548         mov        eax, dword [r12+0x18]
000000000000754d         and        eax, 0xf000
0000000000007552         cmp        eax, 0xa000
0000000000007557         je         loc_5c9f

                     loc_755d:
000000000000755d         cmp        dword [rbx+4], 0x2                          ; CODE XREF=copy_internal+6854
0000000000007561         jne        loc_7080

0000000000007567         mov        eax, dword [rdx+0x18]
000000000000756a         and        eax, 0xf000
000000000000756f         cmp        eax, 0xa000
0000000000007574         je         loc_8fec

000000000000757a         movdqa     xmm0, xmmword [rdx]
000000000000757e         movaps     xmmword [rbp+var_D0], xmm0
0000000000007585         movdqa     xmm0, xmmword [rdx+0x10]
000000000000758a         movaps     xmmword [rbp+var_C0], xmm0
0000000000007591         movdqa     xmm0, xmmword [rdx+0x20]
0000000000007596         movaps     xmmword [rbp+var_B0], xmm0
000000000000759d         movdqa     xmm0, xmmword [rdx+0x30]
00000000000075a2         movaps     xmmword [rbp+var_A0], xmm0
00000000000075a9         movdqa     xmm0, xmmword [rdx+0x40]
00000000000075ae         movaps     xmmword [rbp+var_90], xmm0
00000000000075b5         movdqa     xmm0, xmmword [rdx+0x50]
00000000000075ba         movaps     xmmword [rbp+var_80], xmm0
00000000000075be         movdqa     xmm0, xmmword [rdx+0x60]
00000000000075c3         movaps     xmmword [rbp+var_70], xmm0
00000000000075c7         movdqa     xmm0, xmmword [rdx+0x70]
00000000000075cc         movaps     xmmword [rbp+var_60], xmm0
00000000000075d0         movdqa     xmm0, xmmword [rdx+0x80]
00000000000075d8         movaps     xmmword [rbp+var_50], xmm0

                     loc_75dc:
00000000000075dc         mov        eax, dword [r12+0x18]                       ; CODE XREF=copy_internal+13732
00000000000075e1         and        eax, 0xf000
00000000000075e6         cmp        eax, 0xa000
00000000000075eb         je         loc_8fa9

00000000000075f1         movdqa     xmm0, xmmword [r12]
00000000000075f7         movaps     xmmword [rbp+var_160], xmm0
00000000000075fe         movdqa     xmm0, xmmword [r12+0x10]
0000000000007605         movaps     xmmword [rbp+var_150], xmm0
000000000000760c         movdqa     xmm0, xmmword [r12+0x20]
0000000000007613         movaps     xmmword [rbp+var_140], xmm0
000000000000761a         movdqa     xmm0, xmmword [r12+0x30]
0000000000007621         movaps     xmmword [rbp+var_130], xmm0
0000000000007628         movdqa     xmm0, xmmword [r12+0x40]
000000000000762f         movaps     xmmword [rbp+var_120], xmm0
0000000000007636         movdqa     xmm0, xmmword [r12+0x50]
000000000000763d         movaps     xmmword [rbp+var_110], xmm0
0000000000007644         movdqa     xmm0, xmmword [r12+0x60]
000000000000764b         movaps     xmmword [rbp+var_100], xmm0
0000000000007652         movdqa     xmm0, xmmword [r12+0x70]
0000000000007659         movaps     xmmword [rbp+var_F0], xmm0
0000000000007660         movdqa     xmm0, xmmword [r12+0x80]
000000000000766a         movaps     xmmword [rbp+var_E0], xmm0

                     loc_7671:
0000000000007671         mov        rax, qword [rbp+var_158]                    ; CODE XREF=copy_internal+13665
0000000000007678         cmp        qword [rbp+var_C8], rax
000000000000767f         jne        loc_5c9f

0000000000007685         mov        rax, qword [rbp+var_160]
000000000000768c         cmp        qword [rbp+var_D0], rax
0000000000007693         jne        loc_5c9f

0000000000007699         cmp        byte [rbx+0x17], 0x0
000000000000769d         je         loc_7080

00000000000076a3         mov        eax, dword [r12+0x18]
00000000000076a8         and        eax, 0xf000
00000000000076ad         cmp        eax, 0xa000
00000000000076b2         setne      r14b
00000000000076b6         jmp        loc_5c9f
00000000000076bb         align      64

                     loc_76c0:
00000000000076c0         lea        rcx, qword [rbp+var_D0]                     ; CODE XREF=copy_internal+964
00000000000076c7         mov        rsi, qword [rbp+var_308]                    ; argument "__filename" for method j___lxstat
00000000000076ce         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
00000000000076d3         mov        rdx, rcx                                    ; argument "__stat_buf" for method j___lxstat
00000000000076d6         mov        qword [rbp+var_358], rcx
00000000000076dd         call       j___lxstat                                  ; __lxstat
00000000000076e2         test       eax, eax
00000000000076e4         jne        loc_5ed0

00000000000076ea         mov        rcx, qword [rbp+var_358]
00000000000076f1         mov        rdx, rcx
00000000000076f4         jmp        loc_5e4a
00000000000076f9         align      256

                     loc_7700:
0000000000007700         mov        rsi, qword [rbp+var_308]                    ; argument "__filename" for method j___lxstat, CODE XREF=copy_internal+5309
0000000000007707         lea        rdx, qword [rbp+var_1F0]                    ; argument "__stat_buf" for method j___lxstat
000000000000770e         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000007713         call       j___lxstat                                  ; __lxstat
0000000000007718         test       eax, eax
000000000000771a         jne        loc_8125

0000000000007720         mov        r12d, dword [rbp+var_1D8]
0000000000007727         mov        byte [rbp+var_330], 0x0
000000000000772e         mov        eax, r12d
0000000000007731         and        eax, 0x1c0
0000000000007736         cmp        eax, 0x1c0
000000000000773b         je         loc_7768

000000000000773d         mov        rdi, qword [rbp+var_308]                    ; argument "__file" for method j_chmod
0000000000007744         mov        esi, r12d
0000000000007747         or         esi, 0x1c0                                  ; argument "__mode" for method j_chmod
000000000000774d         call       j_chmod                                     ; chmod
0000000000007752         test       eax, eax
0000000000007754         mov        dword [rbp+var_38C], r12d
000000000000775b         mov        byte [rbp+var_330], 0x1
0000000000007762         jne        loc_8783

                     loc_7768:
0000000000007768         mov        rax, qword [rbp+var_338]                    ; CODE XREF=copy_internal+7355
000000000000776f         cmp        byte [rax], 0x0
0000000000007772         je         loc_856c

                     loc_7778:
0000000000007778         cmp        byte [rbx+0x2e], 0x0                        ; CODE XREF=copy_internal+11024
000000000000777c         je         loc_77c8

000000000000777e         cmp        byte [rbx+0x18], 0x0
0000000000007782         je         loc_862d

0000000000007788         mov        rsi, qword [rbp+var_308]
000000000000778f         mov        edi, 0x4
0000000000007794         call       quotearg_style                              ; quotearg_style
0000000000007799         lea        rsi, qword [aCreatedDirecto]                ; argument "msgid" for method j_dcgettext, "created directory %s\\n"
00000000000077a0         mov        r12, rax
00000000000077a3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000077a8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000077aa         call       j_dcgettext                                 ; dcgettext
00000000000077af         mov        rdx, r12
00000000000077b2         mov        rsi, rax
00000000000077b5         mov        edi, 0x1
00000000000077ba         xor        eax, eax
00000000000077bc         call       j___printf_chk                              ; __printf_chk
00000000000077c1         nop        dword [rax]

                     loc_77c8:
00000000000077c8         mov        rax, qword [rbp+var_348]                    ; CODE XREF=copy_internal+7420, copy_internal+9501, copy_internal+11202
00000000000077cf         test       rax, rax
00000000000077d2         setne      r12b
00000000000077d6         and        r12b, byte [rbx+0x1c]
00000000000077da         jne        loc_7fbb

                     loc_77e0:
00000000000077e0         movdqu     xmm0, xmmword [rbx]                         ; CODE XREF=copy_internal+9547
00000000000077e4         mov        esi, 0x2
00000000000077e9         mov        rdi, qword [rbp+var_310]
00000000000077f0         movaps     xmmword [rbp+var_2F0], xmm0
00000000000077f7         movdqu     xmm0, xmmword [rbx+0x10]
00000000000077fc         movaps     xmmword [rbp+var_2E0], xmm0
0000000000007803         movdqu     xmm0, xmmword [rbx+0x20]
0000000000007808         movaps     xmmword [rbp+var_2D0], xmm0
000000000000780f         movdqu     xmm0, xmmword [rbx+0x30]
0000000000007814         movaps     xmmword [rbp+var_2C0], xmm0
000000000000781b         movdqu     xmm0, xmmword [rbx+0x40]
0000000000007820         movaps     xmmword [rbp+var_2B0], xmm0
0000000000007827         call       savedir                                     ; savedir
000000000000782c         test       rax, rax
000000000000782f         mov        qword [rbp+var_368], rax
0000000000007836         je         loc_8698

000000000000783c         cmp        dword [rbx+4], 0x3
0000000000007840         jne        loc_784c

0000000000007842         mov        dword [rbp+var_2EC], 0x2

                     loc_784c:
000000000000784c         mov        rax, qword [rbp+var_368]                    ; CODE XREF=copy_internal+7616
0000000000007853         cmp        byte [rax], 0x0
0000000000007856         je         loc_8d95

000000000000785c         lea        rax, qword [rbp+var_2F0]
0000000000007863         lea        r10, qword [rbp+var_280]
000000000000786a         mov        dword [rbp+var_380], r13d
0000000000007871         mov        r15, qword [rbp+var_368]
0000000000007878         mov        r13, qword [rbp+var_340]
000000000000787f         mov        r12d, 0x1
0000000000007885         mov        qword [rbp+var_348], rax
000000000000788c         lea        rax, qword [rbp+var_2F9]
0000000000007893         mov        byte [rbp+var_315], 0x0
000000000000789a         mov        byte [rbp+var_370], r14b
00000000000078a1         mov        qword [rbp+var_378], rbx
00000000000078a8         mov        qword [rbp+var_350], rax
00000000000078af         lea        rax, qword [rbp+var_2F8]
00000000000078b6         mov        qword [rbp+var_340], r10
00000000000078bd         mov        qword [rbp+var_358], rax
00000000000078c4         jmp        loc_78f4
00000000000078c6         align      16

                     loc_78d0:
00000000000078d0         movzx      eax, byte [rbp+var_2F8]                     ; CODE XREF=copy_internal+7947
00000000000078d7         mov        rdi, r15                                    ; argument "__s" for method j_strlen
00000000000078da         or         byte [rbp+var_315], al
00000000000078e0         call       j_strlen                                    ; strlen
00000000000078e5         lea        r15, qword [r15+rax+1]
00000000000078ea         cmp        byte [r15], 0x0
00000000000078ee         je         loc_7991

                     loc_78f4:
00000000000078f4         mov        rdi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+7748
00000000000078fb         xor        edx, edx
00000000000078fd         mov        rsi, r15
0000000000007900         call       file_name_concat                            ; file_name_concat
0000000000007905         mov        rdi, qword [rbp+var_308]
000000000000790c         xor        edx, edx
000000000000790e         mov        rsi, r15
0000000000007911         mov        rbx, rax
0000000000007914         call       file_name_concat                            ; file_name_concat
0000000000007919         mov        r14, rax
000000000000791c         mov        rax, qword [rbp+var_338]
0000000000007923         mov        r9, qword [rbp+var_348]
000000000000792a         mov        r8, qword [rbp+var_328]
0000000000007931         mov        rcx, qword [rbp+var_340]
0000000000007938         mov        rsi, r14
000000000000793b         mov        edx, dword [rbp+var_320]
0000000000007941         mov        rdi, rbx
0000000000007944         movzx      eax, byte [rax]
0000000000007947         push       0x0
0000000000007949         push       qword [rbp+var_350]
000000000000794f         push       qword [rbp+var_358]
0000000000007955         push       0x0
0000000000007957         mov        byte [rbp+var_2F8], al
000000000000795d         call       copy_internal                               ; copy_internal
0000000000007962         and        r12d, eax
0000000000007965         movzx      eax, byte [rbp+var_2F9]
000000000000796c         add        rsp, 0x20
0000000000007970         or         byte [r13], al
0000000000007974         mov        rdi, r14
0000000000007977         call       sub_2e10                                    ; sub_2e10
000000000000797c         mov        rdi, rbx
000000000000797f         call       sub_2e10                                    ; sub_2e10
0000000000007984         cmp        byte [rbp+var_2F9], 0x0
000000000000798b         je         loc_78d0

                     loc_7991:
0000000000007991         movzx      r14d, byte [rbp+var_370]                    ; CODE XREF=copy_internal+7790
0000000000007999         mov        rbx, qword [rbp+var_378]
00000000000079a0         mov        r13d, dword [rbp+var_380]

                     loc_79a7:
00000000000079a7         mov        rdi, qword [rbp+var_368]                    ; CODE XREF=copy_internal+13090
00000000000079ae         call       sub_2e10                                    ; sub_2e10
00000000000079b3         movzx      ecx, byte [rbp+var_315]
00000000000079ba         mov        rax, qword [rbp+var_338]
00000000000079c1         mov        byte [rax], cl

                     loc_79c3:
00000000000079c3         test       r13b, r13b                                  ; CODE XREF=copy_internal+9541, copy_internal+11355
00000000000079c6         jne        loc_7fa2

00000000000079cc         movzx      eax, byte [rbp+var_330]
00000000000079d3         mov        byte [rbp+var_320], 0x0
00000000000079da         mov        byte [rbp+var_315], al
00000000000079e0         jmp        loc_609a
00000000000079e5         align      8

                     loc_79e8:
00000000000079e8         cmp        byte [rbx+0x18], 0x0                        ; CODE XREF=copy_internal+3272
00000000000079ec         je         loc_7dfb

00000000000079f2         mov        r15d, dword [rbx]
00000000000079f5         test       r15d, r15d
00000000000079f8         je         loc_7dfb

00000000000079fe         test       r13b, r13b
0000000000007a01         jne        loc_675a

                     loc_7a07:
0000000000007a07         mov        edx, dword [rbp+var_268]                    ; CODE XREF=copy_internal+3304, copy_internal+4841
0000000000007a0d         and        edx, 0xf000
0000000000007a13         cmp        edx, 0x4000
0000000000007a19         je         loc_7fd6

                     loc_7a1f:
0000000000007a1f         mov        rdi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+8655, copy_internal+9577
0000000000007a26         mov        byte [rbp+var_358], r9b
0000000000007a2d         mov        byte [rbp+var_350], r8b
0000000000007a34         call       last_component                              ; last_component
0000000000007a39         cmp        byte [rax], 0x2e
0000000000007a3c         mov        r14, rax
0000000000007a3f         movzx      r8d, byte [rbp+var_350]
0000000000007a47         movzx      r9d, byte [rbp+var_358]
0000000000007a4f         jne        loc_67dd

0000000000007a55         mov        eax, 0x1
0000000000007a5a         jmp        loc_67a2
0000000000007a5f         align      32

                     loc_7a60:
0000000000007a60         mov        rsi, qword [rbp+var_358]                    ; CODE XREF=copy_internal+4256
0000000000007a67         mov        rdi, qword [rbp+var_308]
0000000000007a6e         call       same_name                                   ; same_name
0000000000007a73         test       al, al
0000000000007a75         jne        loc_814a

0000000000007a7b         mov        eax, dword [rbx+4]
0000000000007a7e         cmp        eax, 0x4
0000000000007a81         je         loc_7000

0000000000007a87         cmp        eax, 0x3
0000000000007a8a         jne        loc_7a95

0000000000007a8c         test       r13b, r13b
0000000000007a8f         jne        loc_7000

                     loc_7a95:
0000000000007a95         mov        rdx, qword [rbp+var_358]                    ; CODE XREF=copy_internal+8202
0000000000007a9c         mov        esi, 0x4
0000000000007aa1         mov        edi, 0x1
0000000000007aa6         call       quotearg_n_style                            ; quotearg_n_style
0000000000007aab         mov        rdx, qword [rbp+var_308]
0000000000007ab2         xor        edi, edi
0000000000007ab4         mov        esi, 0x4
0000000000007ab9         mov        r13, rax
0000000000007abc         call       quotearg_n_style                            ; quotearg_n_style
0000000000007ac1         lea        rsi, qword [aWillNotCreateH]                ; argument "msgid" for method j_dcgettext, "will not create hard link %s to directory %s"
0000000000007ac8         mov        r12, rax
0000000000007acb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007acd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007ad2         call       j_dcgettext                                 ; dcgettext
0000000000007ad7         mov        r8, r13
0000000000007ada         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000007add         mov        rcx, r12
0000000000007ae0         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000007ae2         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000007ae4         xor        eax, eax
0000000000007ae6         call       j_error                                     ; error
0000000000007aeb         jmp        loc_6b86

                     loc_7af0:
0000000000007af0         cmp        byte [rbx+0x17], 0x0                        ; CODE XREF=copy_internal+1173
0000000000007af4         je         loc_6b98

0000000000007afa         mov        qword [rbp+var_358], 0x0
0000000000007b05         jmp        loc_6bd3
0000000000007b0a         align      16

                     loc_7b10:
0000000000007b10         mov        eax, dword [rbp+var_268]                    ; CODE XREF=copy_internal+6287, copy_internal+6308
0000000000007b16         xor        esi, esi
0000000000007b18         cmp        dword [rbx+4], 0x2
0000000000007b1c         mov        rdi, qword [rbp+var_310]
0000000000007b23         mov        dword [rbp+var_340], eax
0000000000007b29         movzx      eax, byte [rbx+0x23]
0000000000007b2d         sete       sil
0000000000007b31         shl        esi, 0x11
0000000000007b34         mov        byte [rbp+var_338], al
0000000000007b3a         xor        eax, eax
0000000000007b3c         call       open_safer                                  ; open_safer
0000000000007b41         test       eax, eax
0000000000007b43         mov        dword [rbp+var_320], eax
0000000000007b49         js         loc_824b

0000000000007b4f         mov        esi, dword [rbp+var_320]                    ; argument "__fildes" for method j___fxstat
0000000000007b55         lea        rdx, qword [rbp+var_160]                    ; argument "__stat_buf" for method j___fxstat
0000000000007b5c         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000007b61         call       j___fxstat                                  ; __fxstat
0000000000007b66         test       eax, eax
0000000000007b68         jne        loc_8487

0000000000007b6e         mov        rax, qword [rbp+var_158]
0000000000007b75         cmp        qword [rbp+var_278], rax
0000000000007b7c         jne        loc_7b92

0000000000007b7e         mov        rax, qword [rbp+var_160]
0000000000007b85         cmp        qword [rbp+var_280], rax
0000000000007b8c         je         loc_88b6

                     loc_7b92:
0000000000007b92         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+8444
0000000000007b99         mov        edi, 0x4
0000000000007b9e         call       quotearg_style                              ; quotearg_style
0000000000007ba3         lea        rsi, qword [aSkippingFileSA]                ; argument "msgid" for method j_dcgettext, "skipping file %s, as it was replaced while being copied"
0000000000007baa         mov        r12, rax
0000000000007bad         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007bb2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007bb4         call       j_dcgettext                                 ; dcgettext
0000000000007bb9         mov        rcx, r12
0000000000007bbc         mov        rdx, rax
0000000000007bbf         xor        esi, esi

                     loc_7bc1:
0000000000007bc1         xor        edi, edi                                    ; argument "__status" for method j_error, CODE XREF=copy_internal+10822, copy_internal+16319
0000000000007bc3         xor        eax, eax
0000000000007bc5         call       j_error                                     ; error
0000000000007bca         xor        r8d, r8d
0000000000007bcd         mov        qword [rbp+var_330], 0x0

                     loc_7bd8:
0000000000007bd8         mov        edi, dword [rbp+var_320]                    ; argument "__fd" for method j_close, CODE XREF=copy_internal+12977, copy_internal+13058, copy_internal+13274, copy_internal+13502, copy_internal+16473
0000000000007bde         mov        byte [rbp+var_328], r8b
0000000000007be5         call       j_close                                     ; close
0000000000007bea         test       eax, eax
0000000000007bec         movzx      r8d, byte [rbp+var_328]
0000000000007bf4         js         loc_8647

0000000000007bfa         mov        rdi, qword [rbp+var_330]
0000000000007c01         mov        byte [rbp+var_328], r8b
0000000000007c08         call       sub_2e10                                    ; sub_2e10
0000000000007c0d         movzx      r8d, byte [rbp+var_328]
0000000000007c15         mov        byte [rbp+var_320], 0x0
0000000000007c1c         test       r8b, r8b
0000000000007c1f         jne        loc_5fff

0000000000007c25         jmp        loc_6a10
0000000000007c2a         align      16

                     loc_7c30:
0000000000007c30         mov        eax, dword [rbp+var_268]                    ; CODE XREF=copy_internal+6137
0000000000007c36         and        eax, 0xf000
0000000000007c3b         cmp        eax, 0x4000
0000000000007c40         je         loc_7fd0

                     loc_7c46:
0000000000007c46         test       r15d, r15d                                  ; CODE XREF=copy_internal+9568
0000000000007c49         je         loc_72a7

0000000000007c4f         jmp        loc_7a1f
0000000000007c54         align      8

                     loc_7c58:
0000000000007c58         lea        rdx, qword [rbp+var_160]                    ; argument "__stat_buf" for method j___xstat, CODE XREF=copy_internal+3830
0000000000007c5f         mov        rsi, r8                                     ; argument "__filename" for method j___xstat
0000000000007c62         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000007c67         call       j___xstat                                   ; __xstat
0000000000007c6c         test       eax, eax
0000000000007c6e         jne        loc_697c

0000000000007c74         lea        rdx, qword [rbp+var_D0]                     ; argument "__stat_buf" for method j___xstat
0000000000007c7b         mov        rsi, r12                                    ; argument "__filename" for method j___xstat
0000000000007c7e         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000007c83         call       j___xstat                                   ; __xstat
0000000000007c88         test       eax, eax
0000000000007c8a         jne        loc_697c

0000000000007c90         mov        rax, qword [rbp+var_C8]
0000000000007c97         cmp        qword [rbp+var_158], rax
0000000000007c9e         je         loc_8da7

                     loc_7ca4:
0000000000007ca4         mov        rdi, r12                                    ; CODE XREF=copy_internal+13109
0000000000007ca7         call       sub_2e10                                    ; sub_2e10
0000000000007cac         mov        rdx, qword [rbp+var_308]
0000000000007cb3         mov        esi, 0x3
0000000000007cb8         xor        edi, edi
0000000000007cba         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000007cbf         mov        edx, 0x5
0000000000007cc4         mov        r12, rax
0000000000007cc7         lea        rsi, qword [aSCanMakeRelati]                ; "%s: can make relative symbolic links only in current directory"
0000000000007cce         jmp        loc_6628

                     loc_7cd3:
0000000000007cd3         mov        eax, dword [rbp+var_1D8]                    ; CODE XREF=copy_internal+5548
0000000000007cd9         lea        rdx, qword [rbp+var_280]
0000000000007ce0         and        eax, 0xf000
0000000000007ce5         cmp        eax, 0xa000
0000000000007cea         jne        loc_7032

0000000000007cf0         mov        rsi, qword [rbp+var_308]
0000000000007cf7         mov        rdi, qword [rbp+var_310]
0000000000007cfe         mov        byte [rbp+var_358], r9b
0000000000007d05         mov        byte [rbp+var_350], r8b
0000000000007d0c         call       same_name                                   ; same_name
0000000000007d11         test       al, al
0000000000007d13         jne        loc_7080

0000000000007d19         mov        edi, dword [rbx]
0000000000007d1b         movzx      r8d, byte [rbp+var_350]
0000000000007d23         movzx      r9d, byte [rbp+var_358]
0000000000007d2b         test       edi, edi
0000000000007d2d         jne        loc_6ece

0000000000007d33         test       r15d, r15d
0000000000007d36         je         loc_6ece

0000000000007d3c         movzx      r12d, byte [rbx+0x18]
0000000000007d41         mov        eax, 0x1
0000000000007d46         xor        r12d, 0x1
0000000000007d4a         jmp        loc_71fc
0000000000007d4f         align      16

                     loc_7d50:
0000000000007d50         mov        r15d, eax                                   ; CODE XREF=copy_internal+1436
0000000000007d53         movabs     rax, 0xff000000ff00
0000000000007d5d         test       qword [rbx+0x20], rax
0000000000007d61         je         loc_6022

0000000000007d67         movzx      esi, byte [rbx+0x25]
0000000000007d6b         mov        rdi, qword [rbp+var_308]
0000000000007d72         xor        edx, edx
0000000000007d74         mov        rcx, rbx
0000000000007d77         mov        byte [rbp+var_328], r8b
0000000000007d7e         call       set_file_security_ctx                       ; set_file_security_ctx
0000000000007d83         test       al, al
0000000000007d85         mov        r15d, eax
0000000000007d88         movzx      r8d, byte [rbp+var_328]
0000000000007d90         jne        loc_6022

0000000000007d96         movzx      r14d, byte [rbx+0x26]
0000000000007d9b         test       r14b, r14b
0000000000007d9e         jne        loc_6a10

0000000000007da4         mov        r15d, r12d
0000000000007da7         jmp        loc_6022
0000000000007dac         align      16

                     loc_7db0:
0000000000007db0         lea        rsi, qword [aCopied]                        ; argument "msgid" for method j_dcgettext, "copied ", CODE XREF=copy_internal+2539
0000000000007db7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007dbc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007dbe         call       j_dcgettext                                 ; dcgettext
0000000000007dc3         mov        edi, 0x1
0000000000007dc8         mov        rsi, rax
0000000000007dcb         xor        eax, eax
0000000000007dcd         call       j___printf_chk                              ; __printf_chk
0000000000007dd2         mov        rdx, qword [rbp+var_350]
0000000000007dd9         mov        rsi, qword [rbp+var_308]
0000000000007de0         mov        rdi, qword [rbp+var_310]
0000000000007de7         call       emit_verbose                                ; emit_verbose
0000000000007dec         mov        dword [rbp+var_320], 0x1
0000000000007df6         jmp        loc_5f30

                     loc_7dfb:
0000000000007dfb         mov        rdx, qword [rbp+var_310]                    ; CODE XREF=copy_internal+8044, copy_internal+8056
0000000000007e02         mov        esi, 0x4
0000000000007e07         mov        edi, 0x1
0000000000007e0c         call       quotearg_n_style                            ; quotearg_n_style
0000000000007e11         mov        rdx, qword [rbp+var_308]
0000000000007e18         mov        esi, 0x4
0000000000007e1d         xor        edi, edi
0000000000007e1f         mov        r12, rax
0000000000007e22         call       quotearg_n_style                            ; quotearg_n_style
0000000000007e27         mov        edx, 0x5
0000000000007e2c         mov        rbx, rax
0000000000007e2f         lea        rsi, qword [aCannotOverwrit_148c8]          ; "cannot overwrite non-directory %s with directory %s"
0000000000007e36         jmp        loc_70bb

                     loc_7e3b:
0000000000007e3b         cmp        byte [rbx+0x15], 0x0                        ; CODE XREF=copy_internal+6177
0000000000007e3f         jne        loc_7e59

0000000000007e41         cmp        byte [rbx+0x22], 0x0
0000000000007e45         je         loc_8226

0000000000007e4b         cmp        qword [rbp+var_1E0], 0x1
0000000000007e53         jbe        loc_8226

                     loc_7e59:
0000000000007e59         mov        r14, qword [rbp+var_308]                    ; CODE XREF=copy_internal+9151, copy_internal+10176
0000000000007e60         mov        byte [rbp+var_350], r9b
0000000000007e67         mov        rdi, r14                                    ; argument "__name" for method j_unlink
0000000000007e6a         call       j_unlink                                    ; unlink
0000000000007e6f         test       eax, eax
0000000000007e71         movzx      r9d, byte [rbp+var_350]
0000000000007e79         je         loc_81f3

0000000000007e7f         call       j___errno_location                          ; __errno_location
0000000000007e84         cmp        dword [rax], 0x2
0000000000007e87         mov        r15, rax
0000000000007e8a         movzx      r9d, byte [rbp+var_350]
0000000000007e92         je         loc_81f3

0000000000007e98         mov        rsi, r14
0000000000007e9b         mov        edi, 0x4
0000000000007ea0         call       quotearg_style                              ; quotearg_style
0000000000007ea5         lea        rsi, qword [aCannotRemoveS]                 ; argument "msgid" for method j_dcgettext, "cannot remove %s"
0000000000007eac         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007eae         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007eb3         mov        rbx, rax
0000000000007eb6         call       j_dcgettext                                 ; dcgettext
0000000000007ebb         mov        esi, dword [r15]                            ; argument "__errnum" for method j_error
0000000000007ebe         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000007ec1         mov        rcx, rbx
0000000000007ec4         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000007ec6         xor        eax, eax
0000000000007ec8         call       j_error                                     ; error
0000000000007ecd         jmp        loc_62c6

                     loc_7ed2:
0000000000007ed2         lea        rax, qword [rbp+var_D0]                     ; CODE XREF=copy_internal+5192
0000000000007ed9         mov        rsi, qword [rbp+var_310]                    ; argument "__filename" for method j___lxstat
0000000000007ee0         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000007ee5         mov        rdx, rax                                    ; argument "__stat_buf" for method j___lxstat
0000000000007ee8         mov        qword [rbp+var_368], rax
0000000000007eef         call       j___lxstat                                  ; __lxstat
0000000000007ef4         test       eax, eax
0000000000007ef6         movzx      r8d, byte [rbp+var_350]
0000000000007efe         movzx      r9d, byte [rbp+var_358]
0000000000007f06         jne        loc_6ece

0000000000007f0c         xor        ecx, ecx
0000000000007f0e         mov        rax, qword [rbp+var_158]
0000000000007f15         cmp        qword [rbp+var_C8], rax
0000000000007f1c         jne        loc_7f2f

0000000000007f1e         mov        rax, qword [rbp+var_160]
0000000000007f25         cmp        qword [rbp+var_D0], rax
0000000000007f2c         sete       cl

                     loc_7f2f:
0000000000007f2f         mov        eax, dword [rbp+var_B8]                     ; CODE XREF=copy_internal+9372
0000000000007f35         mov        rdx, qword [rbp+var_368]
0000000000007f3c         and        eax, 0xf000
0000000000007f41         cmp        eax, 0xa000
0000000000007f46         jne        loc_7032

0000000000007f4c         mov        eax, dword [rbp+var_148]
0000000000007f52         and        eax, 0xf000
0000000000007f57         cmp        eax, 0xa000
0000000000007f5c         jne        loc_7032

0000000000007f62         cmp        byte [rbx+0x15], 0x0
0000000000007f66         je         loc_7032

0000000000007f6c         jmp        loc_6ece
0000000000007f71         align      8

                     loc_7f78:
0000000000007f78         movabs     rax, 0xff000000ff00                         ; CODE XREF=copy_internal+5275
0000000000007f82         test       qword [rbx+0x20], rax
0000000000007f86         jne        loc_8540

                     loc_7f8c:
0000000000007f8c         mov        byte [rbp+var_330], 0x0                     ; CODE XREF=copy_internal+10967, copy_internal+10983
0000000000007f93         mov        dword [rbp+var_35C], 0x0
0000000000007f9d         jmp        loc_77c8

                     loc_7fa2:
0000000000007fa2         mov        byte [rbp+var_315], r12b                    ; CODE XREF=copy_internal+8006
0000000000007fa9         xor        r15d, r15d
0000000000007fac         xor        r8d, r8d
0000000000007faf         mov        byte [rbp+var_320], 0x0
0000000000007fb6         jmp        loc_6034

                     loc_7fbb:
0000000000007fbb         mov        rcx, qword [rbp+var_280]                    ; CODE XREF=copy_internal+7514
0000000000007fc2         cmp        qword [rax], rcx
0000000000007fc5         jne        loc_79c3

0000000000007fcb         jmp        loc_77e0

                     loc_7fd0:
0000000000007fd0         mov        eax, dword [rbp+var_1D8]                    ; CODE XREF=copy_internal+8640

                     loc_7fd6:
0000000000007fd6         and        eax, 0xf000                                 ; CODE XREF=copy_internal+8089
0000000000007fdb         cmp        eax, 0x4000
0000000000007fe0         je         loc_7c46

0000000000007fe6         test       r15d, r15d
0000000000007fe9         jne        loc_7a1f

0000000000007fef         mov        rdx, qword [rbp+var_308]
0000000000007ff6         mov        esi, 0x3
0000000000007ffb         xor        edi, edi
0000000000007ffd         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000008002         mov        rdx, qword [rbp+var_310]
0000000000008009         mov        esi, 0x3
000000000000800e         xor        edi, edi
0000000000008010         mov        r12, rax
0000000000008013         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000008018         mov        edx, 0x5
000000000000801d         mov        rbx, rax
0000000000008020         lea        rsi, qword [aCannotMoveDire]                ; "cannot move directory onto non-directory: %s -> %s"
0000000000008027         jmp        loc_70bb

                     loc_802c:
000000000000802c         mov        edx, dword [rbp+var_35C]                    ; CODE XREF=copy_internal+6338, copy_internal+6351
0000000000008032         mov        rax, qword [rbp+var_258]
0000000000008039         lea        rcx, qword [rbp+var_2F0]                    ; argument "__dev" for method j___xmknod
0000000000008040         mov        rsi, qword [rbp+var_308]                    ; argument "__path" for method j___xmknod
0000000000008047         xor        edi, edi                                    ; argument "__ver" for method j___xmknod
0000000000008049         mov        byte [rbp+var_328], r8b
0000000000008050         not        edx
0000000000008052         and        edx, dword [rbp+var_314]                    ; argument "__mode" for method j___xmknod
0000000000008058         mov        qword [rbp+var_2F0], rax
000000000000805f         call       j___xmknod                                  ; __xmknod
0000000000008064         test       eax, eax
0000000000008066         mov        byte [rbp+var_320], 0x0
000000000000806d         movzx      r8d, byte [rbp+var_328]
0000000000008075         je         loc_5fff

000000000000807b         mov        rsi, qword [rbp+var_308]
0000000000008082         mov        edi, 0x4
0000000000008087         call       quotearg_style                              ; quotearg_style
000000000000808c         mov        edx, 0x5
0000000000008091         mov        r13, rax
0000000000008094         lea        rsi, qword [aCannotCreateSp]                ; "cannot create special file %s"
000000000000809b         jmp        loc_6f5f

                     loc_80a0:
00000000000080a0         call       utimens                                     ; utimens, CODE XREF=copy_internal+1649
00000000000080a5         test       eax, eax
00000000000080a7         je         loc_6165

00000000000080ad         jmp        loc_610a

                     loc_80b2:
00000000000080b2         mov        rdi, qword [rbx+0x40]                       ; CODE XREF=copy_internal+1511
00000000000080b6         mov        rsi, qword [rbp+var_308]
00000000000080bd         mov        rdx, r12
00000000000080c0         call       record_file                                 ; record_file
00000000000080c5         movzx      r8d, byte [rbp+var_328]
00000000000080cd         jmp        loc_606d

                     loc_80d2:
00000000000080d2         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+5566
00000000000080d9         mov        rdi, qword [rbp+var_310]
00000000000080e0         mov        byte [rbp+var_358], r9b
00000000000080e7         mov        byte [rbp+var_350], r8b
00000000000080ee         call       same_name                                   ; same_name
00000000000080f3         xor        eax, 0x1
00000000000080f6         movzx      r8d, byte [rbp+var_350]
00000000000080fe         movzx      r9d, byte [rbp+var_358]
0000000000008106         mov        r12d, eax
0000000000008109         xor        eax, eax
000000000000810b         jmp        loc_71fc

                     loc_8110:
0000000000008110         movzx      r8d, byte [rbp+var_350]                     ; CODE XREF=copy_internal+4734
0000000000008118         movzx      r9d, byte [rbp+var_358]
0000000000008120         jmp        loc_6710

                     loc_8125:
0000000000008125         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+7322
000000000000812c         mov        edi, 0x4
0000000000008131         call       quotearg_style                              ; quotearg_style
0000000000008136         mov        edx, 0x5
000000000000813b         mov        r13, rax
000000000000813e         lea        rsi, qword [aCannotStatS]                   ; "cannot stat %s"
0000000000008145         jmp        loc_6f5f

                     loc_814a:
000000000000814a         mov        rsi, qword [top_level_src_name]             ; top_level_src_name, CODE XREF=copy_internal+8181
0000000000008151         mov        edi, 0x4
0000000000008156         call       quotearg_style                              ; quotearg_style
000000000000815b         lea        rsi, qword [aWarningSourceD]                ; argument "msgid" for method j_dcgettext, "warning: source directory %s specified more than once"
0000000000008162         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008164         mov        r12, rax
0000000000008167         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000816c         call       j_dcgettext                                 ; dcgettext
0000000000008171         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000008173         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000008176         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000008178         xor        eax, eax
000000000000817a         mov        rcx, r12
000000000000817d         call       j_error                                     ; error
0000000000008182         cmp        byte [rbx+0x18], 0x0
0000000000008186         jne        loc_6d04

000000000000818c         jmp        loc_62c0

                     loc_8191:
0000000000008191         mov        byte [rbp+var_350], r9b                     ; CODE XREF=copy_internal+3569
0000000000008198         call       j___errno_location                          ; __errno_location
000000000000819d         cmp        dword [rax], 0x2
00000000000081a0         mov        r12, rax
00000000000081a3         movzx      r9d, byte [rbp+var_350]
00000000000081ab         je         loc_8611

00000000000081b1         mov        rsi, qword [rbp+var_308]
00000000000081b8         mov        edi, 0x4
00000000000081bd         call       quotearg_style                              ; quotearg_style
00000000000081c2         lea        rsi, qword [aCannotBackupS]                 ; argument "msgid" for method j_dcgettext, "cannot backup %s"
00000000000081c9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000081ce         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000081d0         mov        rbx, rax
00000000000081d3         call       j_dcgettext                                 ; dcgettext
00000000000081d8         mov        esi, dword [r12]                            ; argument "__errnum" for method j_error
00000000000081dc         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000081df         mov        rcx, rbx
00000000000081e2         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000081e4         xor        eax, eax
00000000000081e6         xor        r12d, r12d
00000000000081e9         call       j_error                                     ; error
00000000000081ee         jmp        loc_62c6

                     loc_81f3:
00000000000081f3         movzx      r14d, byte [rbx+0x2e]                       ; CODE XREF=copy_internal+9209, copy_internal+9234
00000000000081f8         test       r14b, r14b
00000000000081fb         jne        loc_87cc

0000000000008201         test       r13b, r13b
0000000000008204         jne        loc_87a8

000000000000820a         mov        qword [rbp+var_350], 0x0
0000000000008215         mov        r14d, 0x1
000000000000821b         mov        r15d, 0x11
0000000000008221         jmp        loc_5ee9

                     loc_8226:
0000000000008226         cmp        dword [rbx+4], 0x2                          ; CODE XREF=copy_internal+9157, copy_internal+9171
000000000000822a         jne        loc_72a7

0000000000008230         mov        eax, dword [rbp+var_268]
0000000000008236         and        eax, 0xf000
000000000000823b         cmp        eax, 0x8000
0000000000008240         jne        loc_7e59

0000000000008246         jmp        loc_72a7

                     loc_824b:
000000000000824b         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+8393
0000000000008252         mov        edi, 0x4
0000000000008257         call       quotearg_style                              ; quotearg_style
000000000000825c         mov        edx, 0x5
0000000000008261         mov        r13, rax
0000000000008264         lea        rsi, qword [aCannotOpenSFor]                ; "cannot open %s for reading"
000000000000826b         jmp        loc_6f5f

                     loc_8270:
0000000000008270         mov        r8d, dword [rbp+var_314]                    ; CODE XREF=copy_internal+1877
0000000000008277         mov        rdx, qword [rbp+var_308]
000000000000827e         mov        ecx, 0xffffffff
0000000000008283         mov        rdi, qword [rbp+var_310]
000000000000828a         mov        esi, ecx
000000000000828c         call       copy_acl                                    ; copy_acl
0000000000008291         test       eax, eax
0000000000008293         jne        loc_626a

0000000000008299         jmp        loc_62c6

                     loc_829e:
000000000000829e         mov        rdx, r12                                    ; argument "__n" for method j_memcmp, CODE XREF=copy_internal+3523
00000000000082a1         mov        rdi, r14                                    ; argument "__s1" for method j_memcmp
00000000000082a4         mov        byte [rbp+var_350], r9b
00000000000082ab         mov        qword [rbp+var_358], r8
00000000000082b2         call       j_memcmp                                    ; memcmp
00000000000082b7         test       eax, eax
00000000000082b9         movzx      r9d, byte [rbp+var_350]
00000000000082c1         jne        loc_6849

00000000000082c7         lea        rdi, qword [r14+r12]                        ; argument "__s1" for method j_strcmp
00000000000082cb         mov        rsi, r15                                    ; argument "__s2" for method j_strcmp
00000000000082ce         call       j_strcmp                                    ; strcmp
00000000000082d3         test       eax, eax
00000000000082d5         movzx      r9d, byte [rbp+var_350]
00000000000082dd         mov        r8, qword [rbp+var_358]
00000000000082e4         jne        loc_6849

00000000000082ea         mov        rdi, qword [rbp+var_308]
00000000000082f1         or         rcx, 0xffffffffffffffff
00000000000082f5         repne scasb al, byte [rdi]
00000000000082f7         mov        rax, rcx
00000000000082fa         not        rax
00000000000082fd         lea        r14, qword [rax-1]
0000000000008301         lea        rdi, qword [r14+r8+1]
0000000000008306         call       xmalloc                                     ; xmalloc
000000000000830b         mov        r15, qword [simple_backup_suffix]           ; simple_backup_suffix
0000000000008312         mov        rsi, qword [rbp+var_308]                    ; argument "__src" for method j_mempcpy
0000000000008319         mov        rdx, r14                                    ; argument "__n" for method j_mempcpy
000000000000831c         mov        rdi, rax                                    ; argument "__dest" for method j_mempcpy
000000000000831f         mov        r12, rax
0000000000008322         call       j_mempcpy                                   ; mempcpy
0000000000008327         mov        rsi, r15                                    ; argument "__src" for method j_strcpy
000000000000832a         mov        rdi, rax                                    ; argument "__dest" for method j_strcpy
000000000000832d         call       j_strcpy                                    ; strcpy
0000000000008332         lea        rdx, qword [rbp+var_D0]                     ; argument "__stat_buf" for method j___xstat
0000000000008339         mov        rsi, r12                                    ; argument "__filename" for method j___xstat
000000000000833c         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000008341         call       j___xstat                                   ; __xstat
0000000000008346         mov        rdi, r12
0000000000008349         mov        r15d, eax
000000000000834c         call       sub_2e10                                    ; sub_2e10
0000000000008351         test       r15d, r15d
0000000000008354         movzx      r9d, byte [rbp+var_350]
000000000000835c         jne        loc_6849

0000000000008362         mov        rax, qword [rbp+var_C8]
0000000000008369         cmp        qword [rbp+var_278], rax
0000000000008370         jne        loc_6849

0000000000008376         mov        rax, qword [rbp+var_D0]
000000000000837d         cmp        qword [rbp+var_280], rax
0000000000008384         jne        loc_6849

000000000000838a         cmp        byte [rbx+0x18], 0x0
000000000000838e         je         loc_85f6

0000000000008394         lea        rsi, qword [aBackingUpSMigh]                ; argument "msgid" for method j_dcgettext, "backing up %s might destroy source;  %s not moved"
000000000000839b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000083a0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000083a2         call       j_dcgettext                                 ; dcgettext
00000000000083a7         mov        rbx, rax

                     loc_83aa:
00000000000083aa         mov        rdx, qword [rbp+var_310]                    ; CODE XREF=copy_internal+11148
00000000000083b1         mov        esi, 0x4
00000000000083b6         mov        edi, 0x1
00000000000083bb         call       quotearg_n_style                            ; quotearg_n_style
00000000000083c0         mov        rdx, qword [rbp+var_308]
00000000000083c7         mov        r12, rax
00000000000083ca         mov        esi, 0x4
00000000000083cf         xor        edi, edi
00000000000083d1         call       quotearg_n_style                            ; quotearg_n_style
00000000000083d6         mov        r8, r12
00000000000083d9         mov        rcx, rax
00000000000083dc         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000083df         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000083e1         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000083e3         xor        eax, eax
00000000000083e5         call       j_error                                     ; error
00000000000083ea         xor        r12d, r12d
00000000000083ed         jmp        loc_62c6

                     loc_83f2:
00000000000083f2         mov        r12d, dword [rbp+var_35C]                   ; CODE XREF=copy_internal+6321
00000000000083f9         mov        rsi, qword [rbp+var_308]                    ; argument "__path" for method j___xmknod
0000000000008400         lea        rcx, qword [rbp+var_2F8]                    ; argument "__dev" for method j___xmknod
0000000000008407         xor        edi, edi                                    ; argument "__ver" for method j___xmknod
0000000000008409         mov        byte [rbp+var_320], r8b
0000000000008410         mov        qword [rbp+var_2F8], 0x0
000000000000841b         not        r12d
000000000000841e         and        r12d, dword [rbp+var_314]
0000000000008425         mov        edx, r12d                                   ; argument "__mode" for method j___xmknod
0000000000008428         call       j___xmknod                                  ; __xmknod
000000000000842d         test       eax, eax
000000000000842f         movzx      r8d, byte [rbp+var_320]
0000000000008437         je         loc_5fff

000000000000843d         mov        rdi, qword [rbp+var_308]                    ; argument "__path" for method j_mkfifo
0000000000008444         mov        esi, r12d
0000000000008447         and        esi, 0xffffefff                             ; argument "__mode" for method j_mkfifo
000000000000844d         call       j_mkfifo                                    ; mkfifo
0000000000008452         test       eax, eax
0000000000008454         movzx      r8d, byte [rbp+var_320]
000000000000845c         je         loc_5fff

0000000000008462         mov        rsi, qword [rbp+var_308]
0000000000008469         mov        edi, 0x4
000000000000846e         call       quotearg_style                              ; quotearg_style
0000000000008473         mov        edx, 0x5
0000000000008478         mov        r13, rax
000000000000847b         lea        rsi, qword [aCannotCreateFi]                ; "cannot create fifo %s"
0000000000008482         jmp        loc_6f5f

                     loc_8487:
0000000000008487         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+8424
000000000000848e         mov        edi, 0x4
0000000000008493         call       quotearg_style                              ; quotearg_style
0000000000008498         lea        rsi, qword [aCannotFstatS]                  ; argument "msgid" for method j_dcgettext, "cannot fstat %s"
000000000000849f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000084a4         mov        r12, rax
00000000000084a7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000084a9         call       j_dcgettext                                 ; dcgettext
00000000000084ae         mov        qword [rbp+var_328], rax
00000000000084b5         call       j___errno_location                          ; __errno_location
00000000000084ba         mov        rcx, r12
00000000000084bd         mov        rdx, qword [rbp+var_328]
00000000000084c4         mov        esi, dword [rax]
00000000000084c6         jmp        loc_7bc1

                     loc_84cb:
00000000000084cb         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+5775
00000000000084d2         mov        rdi, qword [rbp+var_310]
00000000000084d9         mov        byte [rbp+var_35C], r9b
00000000000084e0         mov        byte [rbp+var_358], r8b
00000000000084e7         mov        qword [rbp+var_350], rdx
00000000000084ee         call       same_name                                   ; same_name
00000000000084f3         test       al, al
00000000000084f5         mov        rdx, qword [rbp+var_350]
00000000000084fc         movzx      r8d, byte [rbp+var_358]
0000000000008504         movzx      r9d, byte [rbp+var_35C]
000000000000850c         je         loc_8d87

0000000000008512         mov        eax, dword [rdx+0x18]
0000000000008515         and        eax, 0xf000
000000000000851a         cmp        eax, 0xa000
000000000000851f         je         loc_714c

                     loc_8525:
0000000000008525         mov        eax, dword [r12+0x18]                       ; CODE XREF=copy_internal+6844
000000000000852a         and        eax, 0xf000
000000000000852f         cmp        eax, 0xa000
0000000000008534         je         loc_714c

000000000000853a         jmp        loc_7124
000000000000853f         align      64

                     loc_8540:
0000000000008540         movzx      esi, byte [rbx+0x25]                        ; CODE XREF=copy_internal+9478
0000000000008544         mov        rdi, qword [rbp+var_308]
000000000000854b         xor        edx, edx
000000000000854d         mov        rcx, rbx
0000000000008550         call       set_file_security_ctx                       ; set_file_security_ctx
0000000000008555         test       al, al
0000000000008557         jne        loc_7f8c

000000000000855d         cmp        byte [rbx+0x26], 0x0
0000000000008561         jne        loc_6a10

0000000000008567         jmp        loc_7f8c

                     loc_856c:
000000000000856c         mov        rdx, qword [rbp+var_1F0]                    ; CODE XREF=copy_internal+7410
0000000000008573         mov        rsi, qword [rbp+var_1E8]
000000000000857a         mov        rdi, qword [rbp+var_308]
0000000000008581         call       remember_copied                             ; remember_copied
0000000000008586         mov        rax, qword [rbp+var_338]
000000000000858d         mov        byte [rax], 0x1
0000000000008590         jmp        loc_7778

                     loc_8595:
0000000000008595         mov        rdx, qword [rbp+var_310]                    ; CODE XREF=copy_internal+6087
000000000000859c         mov        esi, 0x4
00000000000085a1         mov        edi, 0x1
00000000000085a6         call       quotearg_n_style                            ; quotearg_n_style
00000000000085ab         mov        rdx, qword [rbp+var_308]
00000000000085b2         mov        esi, 0x4
00000000000085b7         xor        edi, edi
00000000000085b9         mov        r12, rax
00000000000085bc         call       quotearg_n_style                            ; quotearg_n_style
00000000000085c1         mov        edx, 0x5
00000000000085c6         mov        rbx, rax
00000000000085c9         lea        rsi, qword [aWillNotOverwri]                ; "will not overwrite just-created %s with %s"
00000000000085d0         jmp        loc_70bb

                     loc_85d5:
00000000000085d5         mov        edx, dword [rbx+0x10]                       ; CODE XREF=copy_internal+1887

                     loc_85d8:
00000000000085d8         mov        rdi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+11825
00000000000085df         mov        esi, 0xffffffff
00000000000085e4         call       set_acl                                     ; set_acl
00000000000085e9         test       eax, eax
00000000000085eb         jne        loc_5d90

00000000000085f1         jmp        loc_62c6

                     loc_85f6:
00000000000085f6         lea        rsi, qword [aBackingUpSMigh_149d8]          ; argument "msgid" for method j_dcgettext, "backing up %s might destroy source;  %s not copied", CODE XREF=copy_internal+10510
00000000000085fd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008602         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008604         call       j_dcgettext                                 ; dcgettext
0000000000008609         mov        rbx, rax
000000000000860c         jmp        loc_83aa

                     loc_8611:
0000000000008611         mov        qword [rbp+var_350], 0x0                    ; CODE XREF=copy_internal+10027
000000000000861c         mov        r14d, 0x1
0000000000008622         mov        r15d, 0x11
0000000000008628         jmp        loc_5e0e

                     loc_862d:
000000000000862d         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+7426
0000000000008634         mov        rdi, qword [rbp+var_310]
000000000000863b         xor        edx, edx
000000000000863d         call       emit_verbose                                ; emit_verbose
0000000000008642         jmp        loc_77c8

                     loc_8647:
0000000000008647         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+8564
000000000000864e         mov        edi, 0x4
0000000000008653         call       quotearg_style                              ; quotearg_style
0000000000008658         lea        rsi, qword [aFailedToCloseS]                ; argument "msgid" for method j_dcgettext, "failed to close %s"
000000000000865f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008661         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008666         mov        r12, rax
0000000000008669         call       j_dcgettext                                 ; dcgettext
000000000000866e         mov        r13, rax
0000000000008671         call       j___errno_location                          ; __errno_location
0000000000008676         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000008678         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000867a         mov        rcx, r12
000000000000867d         mov        rdx, r13                                    ; argument "__format" for method j_error
0000000000008680         xor        eax, eax
0000000000008682         call       j_error                                     ; error
0000000000008687         mov        rdi, qword [rbp+var_330]
000000000000868e         call       sub_2e10                                    ; sub_2e10
0000000000008693         jmp        loc_6a10

                     loc_8698:
0000000000008698         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+7606
000000000000869f         mov        edi, 0x4
00000000000086a4         call       quotearg_style                              ; quotearg_style
00000000000086a9         lea        rsi, qword [aCannotAccessS]                 ; argument "msgid" for method j_dcgettext, "cannot access %s"
00000000000086b0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000086b5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000086b7         mov        r12, rax
00000000000086ba         call       j_dcgettext                                 ; dcgettext
00000000000086bf         mov        r15, rax
00000000000086c2         call       j___errno_location                          ; __errno_location
00000000000086c7         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000086c9         mov        rcx, r12
00000000000086cc         mov        rdx, r15                                    ; argument "__format" for method j_error
00000000000086cf         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000086d1         xor        eax, eax
00000000000086d3         xor        r12d, r12d
00000000000086d6         call       j_error                                     ; error
00000000000086db         jmp        loc_79c3

                     loc_86e0:
00000000000086e0         mov        rsi, qword [rbp+var_250]                    ; CODE XREF=copy_internal+6364
00000000000086e7         mov        rdi, qword [rbp+var_310]
00000000000086ee         call       areadlink_with_size                         ; areadlink_with_size
00000000000086f3         test       rax, rax
00000000000086f6         mov        r12, rax
00000000000086f9         je         loc_8f43

00000000000086ff         movzx      ecx, byte [rbx+0x16]
0000000000008703         mov        rdx, qword [rbp+var_308]
000000000000870a         mov        r8d, 0xffffffff
0000000000008710         mov        esi, 0xffffff9c
0000000000008715         mov        rdi, rax
0000000000008718         call       force_symlinkat                             ; force_symlinkat
000000000000871d         test       eax, eax
000000000000871f         mov        dword [rbp+var_320], eax
0000000000008725         jle        loc_8f68

000000000000872b         cmp        byte [rbx+0x2d], 0x1
000000000000872f         jne        loc_873a

0000000000008731         test       r14b, r14b
0000000000008734         je         loc_9319

                     loc_873a:
000000000000873a         mov        rdi, r12                                    ; CODE XREF=copy_internal+11439, copy_internal+14505, copy_internal+14540, copy_internal+14561, copy_internal+16647
000000000000873d         call       sub_2e10                                    ; sub_2e10
0000000000008742         mov        rsi, qword [rbp+var_308]
0000000000008749         mov        edi, 0x4
000000000000874e         call       quotearg_style                              ; quotearg_style
0000000000008753         lea        rsi, qword [aCannotCreateSy]                ; argument "msgid" for method j_dcgettext, "cannot create symbolic link %s"
000000000000875a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000875c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008761         mov        r12, rax
0000000000008764         call       j_dcgettext                                 ; dcgettext
0000000000008769         mov        esi, dword [rbp+var_320]                    ; argument "__errnum" for method j_error
000000000000876f         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000008772         mov        rcx, r12
0000000000008775         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000008777         xor        eax, eax
0000000000008779         call       j_error                                     ; error
000000000000877e         jmp        loc_6a10

                     loc_8783:
0000000000008783         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+7394
000000000000878a         mov        edi, 0x4
000000000000878f         call       quotearg_style                              ; quotearg_style
0000000000008794         mov        edx, 0x5
0000000000008799         mov        r13, rax
000000000000879c         lea        rsi, qword [aSettingPermiss]                ; "setting permissions for %s"
00000000000087a3         jmp        loc_6f5f

                     loc_87a8:
00000000000087a8         cmp        qword [rbx+0x40], 0x0                       ; CODE XREF=copy_internal+10116
00000000000087ad         mov        r14d, r13d
00000000000087b0         mov        qword [rbp+var_350], 0x0
00000000000087bb         mov        r15d, 0x11
00000000000087c1         jne        loc_5e22

00000000000087c7         jmp        loc_5ee9

                     loc_87cc:
00000000000087cc         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+10107
00000000000087d3         mov        edi, 0x4
00000000000087d8         mov        byte [rbp+var_358], r9b
00000000000087df         mov        r15d, 0x11
00000000000087e5         call       quotearg_style                              ; quotearg_style
00000000000087ea         lea        rsi, qword [aRemovedSn]                     ; argument "msgid" for method j_dcgettext, "removed %s\\n"
00000000000087f1         mov        r12, rax
00000000000087f4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000087f9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000087fb         call       j_dcgettext                                 ; dcgettext
0000000000008800         mov        rdx, r12
0000000000008803         mov        rsi, rax
0000000000008806         mov        edi, 0x1
000000000000880b         xor        eax, eax
000000000000880d         call       j___printf_chk                              ; __printf_chk
0000000000008812         mov        qword [rbp+var_350], 0x0
000000000000881d         movzx      r9d, byte [rbp+var_358]
0000000000008825         jmp        loc_5e0e

                     loc_882a:
000000000000882a         mov        eax, dword [rbp+var_1D0]                    ; CODE XREF=copy_internal+1788
0000000000008830         cmp        dword [rbp+var_260], eax
0000000000008836         jne        loc_6182

000000000000883c         jmp        loc_61c7

                     loc_8841:
0000000000008841         call       cached_umask                                ; cached_umask, CODE XREF=copy_internal+1911
0000000000008846         not        eax
0000000000008848         and        dword [rbp+var_35C], eax
000000000000884e         je         loc_61fd

0000000000008854         cmp        byte [rbp+var_315], 0x1
000000000000885b         je         loc_620a

0000000000008861         test       r14b, r14b
0000000000008864         jne        loc_91d7

                     loc_886a:
000000000000886a         mov        eax, dword [rbp+var_1D8]                    ; CODE XREF=copy_internal+14193
0000000000008870         mov        dword [rbp+var_38C], eax
0000000000008876         not        eax
0000000000008878         test       dword [rbp+var_35C], eax
000000000000887e         jne        loc_620a

0000000000008884         jmp        loc_62c6

                     loc_8889:
0000000000008889         mov        eax, dword [rbp+var_314]                    ; CODE XREF=copy_internal+1897
000000000000888f         mov        edx, 0x1b6
0000000000008894         mov        ebx, 0x1ff
0000000000008899         and        eax, 0x7000
000000000000889e         cmp        eax, 0x4000
00000000000088a3         cmovne     ebx, edx
00000000000088a6         call       cached_umask                                ; cached_umask
00000000000088ab         not        eax
00000000000088ad         mov        edx, eax
00000000000088af         and        edx, ebx
00000000000088b1         jmp        loc_85d8

                     loc_88b6:
00000000000088b6         and        r12d, 0x1ff                                 ; CODE XREF=copy_internal+8460
00000000000088bd         test       r14b, r14b
00000000000088c0         mov        dword [rbp+var_3A4], r12d
00000000000088c7         jne        loc_8e60

00000000000088cd         cmp        byte [rbx+0x23], 0x1
00000000000088d1         mov        rdi, qword [rbp+var_308]
00000000000088d8         sbb        esi, esi
00000000000088da         xor        eax, eax
00000000000088dc         and        esi, 0xfffffe00
00000000000088e2         add        esi, 0x201
00000000000088e8         call       open_safer                                  ; open_safer
00000000000088ed         mov        dword [rbp+var_328], eax
00000000000088f3         call       j___errno_location                          ; __errno_location
00000000000088f8         mov        r12, rax
00000000000088fb         movabs     rax, 0xff000000ff00
0000000000008905         test       qword [rbx+0x20], rax
0000000000008909         jne        loc_9195

000000000000890f         cmp        dword [rbp+var_328], 0x0
0000000000008916         js         loc_91a2

                     loc_891c:
000000000000891c         mov        dword [rbp+var_378], 0x0                    ; CODE XREF=copy_internal+14728, copy_internal+14755

                     loc_8926:
0000000000008926         lea        rax, qword [rbp+var_D0]                     ; CODE XREF=copy_internal+14691
000000000000892d         mov        esi, dword [rbp+var_328]                    ; argument "__fildes" for method j___fxstat
0000000000008933         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000008938         mov        rdx, rax                                    ; argument "__stat_buf" for method j___fxstat
000000000000893b         mov        qword [rbp+var_368], rax
0000000000008942         call       j___fxstat                                  ; __fxstat
0000000000008947         test       eax, eax
0000000000008949         mov        dword [rbp+var_348], eax
000000000000894f         jne        loc_94f6

0000000000008955         cmp        byte [rbp+var_338], 0x0
000000000000895c         je         loc_902f

0000000000008962         cmp        dword [rbx+0x38], 0x0
0000000000008966         jne        loc_97c4

                     loc_896c:
000000000000896c         call       j_getpagesize                               ; getpagesize, CODE XREF=copy_internal+15720
0000000000008971         mov        rcx, qword [rbp+var_98]
0000000000008978         movsxd     r12, eax
000000000000897b         movabs     rax, 0x1ffffffffffe0000
0000000000008985         mov        r8d, 0x200
000000000000898b         mov        edi, dword [rbp+var_320]
0000000000008991         mov        qword [rbp+var_330], r8
0000000000008998         lea        rdx, qword [rcx-0x20000]
000000000000899f         cmp        rdx, rax
00000000000089a2         mov        eax, 0x20000
00000000000089a7         lea        rdx, qword [rcx-1]
00000000000089ab         cmovbe     rax, rcx
00000000000089af         mov        qword [rbp+var_370], rax
00000000000089b6         movabs     rax, 0x1fffffffffffffff
00000000000089c0         cmp        rdx, rax
00000000000089c3         cmova      rcx, r8
00000000000089c7         xor        edx, edx
00000000000089c9         xor        esi, esi
00000000000089cb         mov        qword [rbp+var_398], rcx
00000000000089d2         mov        ecx, 0x2
00000000000089d7         call       fdadvise                                    ; fdadvise
00000000000089dc         mov        r9d, dword [rbp+var_148]
00000000000089e3         mov        r8, qword [rbp+var_330]
00000000000089ea         and        r9d, 0xf000
00000000000089f1         cmp        r9d, 0x8000
00000000000089f8         je         loc_98da

                     loc_89fe:
00000000000089fe         mov        eax, dword [rbp+var_B8]                     ; CODE XREF=copy_internal+15993
0000000000008a04         and        eax, 0xf000
0000000000008a09         cmp        eax, 0x8000
0000000000008a0e         je         loc_986f

                     loc_8a14:
0000000000008a14         mov        rdi, qword [rbp+var_128]                    ; CODE XREF=copy_internal+15870, copy_internal+15883
0000000000008a1b         movabs     rax, 0x7fffffffffffffff
0000000000008a25         mov        rsi, qword [rbp+var_370]
0000000000008a2c         sub        rax, r12
0000000000008a2f         mov        dword [rbp+var_380], r9d
0000000000008a36         mov        r8, rax
0000000000008a39         movabs     rax, 0x1ffffffffffe0000
0000000000008a43         lea        rdx, qword [rdi-0x20000]
0000000000008a4a         mov        qword [rbp+var_330], r8
0000000000008a51         cmp        rdx, rax
0000000000008a54         mov        eax, 0x20000
0000000000008a59         mov        rdx, r8
0000000000008a5c         cmova      rdi, rax
0000000000008a60         call       buffer_lcm                                  ; buffer_lcm
0000000000008a65         mov        r9d, dword [rbp+var_380]
0000000000008a6c         mov        rcx, rax
0000000000008a6f         mov        r8, qword [rbp+var_330]
0000000000008a76         cmp        r9d, 0x8000
0000000000008a7d         je         loc_974d

                     loc_8a83:
0000000000008a83         mov        rax, qword [rbp+var_370]                    ; CODE XREF=copy_internal+15579, copy_internal+15596
0000000000008a8a         xor        edx, edx
0000000000008a8c         lea        rsi, qword [rcx+rax-1]
0000000000008a91         mov        rax, rsi
0000000000008a94         div        rcx
0000000000008a97         sub        rsi, rdx
0000000000008a9a         mov        qword [rbp+var_370], rsi
0000000000008aa1         je         loc_9551

0000000000008aa7         cmp        rsi, r8
0000000000008aaa         ja         loc_9551

                     loc_8ab0:
0000000000008ab0         mov        rax, qword [rbp+var_370]                    ; CODE XREF=copy_internal+15064
0000000000008ab7         lea        rdi, qword [r12+rax]
0000000000008abb         call       xmalloc                                     ; xmalloc
0000000000008ac0         lea        rcx, qword [rax+r12-1]
0000000000008ac5         xor        edx, edx
0000000000008ac7         mov        qword [rbp+var_330], rax
0000000000008ace         mov        rax, rcx
0000000000008ad1         div        r12
0000000000008ad4         sub        rcx, rdx
0000000000008ad7         cmp        dword [rbp+var_348], 0x0
0000000000008ade         mov        qword [rbp+var_3B0], rcx
0000000000008ae5         je         loc_955d

0000000000008aeb         mov        byte [rbp+var_3A5], 0x0
0000000000008af2         mov        dword [rbp+var_390], 0x1

                     loc_8afc:
0000000000008afc         mov        rax, qword [rbp+var_130]                    ; CODE XREF=copy_internal+15957
0000000000008b03         mov        edi, dword [rbp+var_320]
0000000000008b09         xor        r12d, r12d
0000000000008b0c         mov        qword [rbp+var_380], rax
0000000000008b13         lea        rax, qword [rbp+var_2F0]
0000000000008b1a         mov        rsi, rax
0000000000008b1d         mov        qword [rbp+var_348], rax
0000000000008b24         call       extent_scan_init                            ; extent_scan_init
0000000000008b29         lea        rax, qword [rbp+var_2F9]
0000000000008b30         xor        ecx, ecx
0000000000008b32         mov        qword [rbp+var_388], rbx
0000000000008b39         mov        qword [rbp+var_3A0], 0x0
0000000000008b44         mov        rbx, rcx
0000000000008b47         mov        dword [rbp+var_360], r13d
0000000000008b4e         mov        qword [rbp+var_3B8], rax
0000000000008b55         lea        rax, qword [rbp+var_2F8]
0000000000008b5c         mov        qword [rbp+var_3C0], rax

                     loc_8b63:
0000000000008b63         mov        rdi, qword [rbp+var_348]                    ; CODE XREF=copy_internal+15351
0000000000008b6a         call       extent_scan_read                            ; extent_scan_read
0000000000008b6f         test       al, al
0000000000008b71         je         loc_9771

0000000000008b77         cmp        qword [rbp+var_2D8], 0x0
0000000000008b7f         je         loc_964e

0000000000008b85         mov        rdx, rbx
0000000000008b88         mov        rcx, r12
0000000000008b8b         xor        r13d, r13d
0000000000008b8e         xor        eax, eax
0000000000008b90         jmp        loc_8c4d
0000000000008b95         align      8

                     loc_8b98:
0000000000008b98         cmp        dword [rbp+var_390], 0x3                    ; CODE XREF=copy_internal+12819, copy_internal+12914
0000000000008b9f         mov        r8d, 0x0
0000000000008ba5         cmove      r8, qword [rbp+var_398]

                     loc_8bad:
0000000000008bad         sub        rsp, 0x8                                    ; CODE XREF=copy_internal+14785
0000000000008bb1         mov        rcx, qword [rbp+var_370]
0000000000008bb8         mov        rdx, qword [rbp+var_3B0]
0000000000008bbf         mov        esi, dword [rbp+var_328]
0000000000008bc5         mov        edi, dword [rbp+var_320]
0000000000008bcb         mov        r9d, 0x1
0000000000008bd1         push       qword [rbp+var_3B8]
0000000000008bd7         push       qword [rbp+var_3C0]
0000000000008bdd         push       rbx
0000000000008bde         push       qword [rbp+var_308]
0000000000008be4         push       qword [rbp+var_310]
0000000000008bea         call       sparse_copy                                 ; sparse_copy
0000000000008bef         add        rsp, 0x30
0000000000008bf3         test       al, al
0000000000008bf5         je         loc_8cf8

0000000000008bfb         mov        rax, qword [rbp+var_2F8]
0000000000008c02         lea        rcx, qword [r12+rax]
0000000000008c06         test       rax, rax
0000000000008c09         mov        qword [rbp+var_3A0], rcx
0000000000008c10         je         loc_8c1f

0000000000008c12         movzx      eax, byte [rbp+var_2F9]
0000000000008c19         mov        byte [rbp+var_338], al

                     loc_8c1f:
0000000000008c1f         mov        rcx, qword [rbp+var_3A0]                    ; CODE XREF=copy_internal+12688
0000000000008c26         cmp        qword [rbp+var_380], rcx
0000000000008c2d         je         loc_9647

0000000000008c33         lea        eax, dword [r13+1]
0000000000008c37         cmp        rax, qword [rbp+var_2D8]
0000000000008c3e         mov        rcx, r12
0000000000008c41         mov        rdx, rbx
0000000000008c44         mov        r13, rax
0000000000008c47         jae        loc_964e

                     loc_8c4d:
0000000000008c4d         lea        rsi, qword [rax+rax*2]                      ; CODE XREF=copy_internal+12560
0000000000008c51         mov        rax, qword [rbp+var_2C8]
0000000000008c58         lea        rax, qword [rax+rsi*8]
0000000000008c5c         mov        rsi, qword [rbp+var_380]
0000000000008c63         mov        r12, qword [rax]
0000000000008c66         mov        rbx, qword [rax+8]
0000000000008c6a         lea        rax, qword [r12+rbx]
0000000000008c6e         cmp        rsi, rax
0000000000008c71         jge        loc_8c80

0000000000008c73         cmp        r12, rsi
0000000000008c76         cmovg      r12, rsi
0000000000008c7a         sub        rsi, r12
0000000000008c7d         mov        rbx, rsi

                     loc_8c80:
0000000000008c80         mov        rax, r12                                    ; CODE XREF=copy_internal+12785
0000000000008c83         mov        byte [rbp+var_338], 0x0
0000000000008c8a         sub        rax, rcx
0000000000008c8d         mov        rcx, rax
0000000000008c90         sub        rcx, rdx
0000000000008c93         je         loc_8b98

0000000000008c99         mov        edi, dword [rbp+var_320]                    ; argument "__fd" for method j_lseek
0000000000008c9f         xor        edx, edx                                    ; argument "__whence" for method j_lseek
0000000000008ca1         mov        rsi, r12                                    ; argument "__offset" for method j_lseek
0000000000008ca4         mov        qword [rbp+var_3A0], rcx
0000000000008cab         call       j_lseek                                     ; lseek
0000000000008cb0         test       rax, rax
0000000000008cb3         mov        rcx, qword [rbp+var_3A0]
0000000000008cba         js         loc_9b2f

0000000000008cc0         mov        eax, dword [rbp+var_390]
0000000000008cc6         cmp        eax, 0x3
0000000000008cc9         sete       dl
0000000000008ccc         sub        eax, 0x1
0000000000008ccf         je         loc_9428

0000000000008cd5         mov        rsi, qword [rbp+var_308]
0000000000008cdc         mov        edi, dword [rbp+var_328]
0000000000008ce2         movzx      edx, dl
0000000000008ce5         call       create_hole                                 ; create_hole
0000000000008cea         test       al, al
0000000000008cec         mov        byte [rbp+var_338], al
0000000000008cf2         jne        loc_8b98

                     loc_8cf8:
0000000000008cf8         mov        rbx, qword [rbp+var_388]                    ; CODE XREF=copy_internal+12661
0000000000008cff         mov        r13d, dword [rbp+var_360]

                     loc_8d06:
0000000000008d06         mov        rdi, qword [rbp+var_2C8]                    ; CODE XREF=copy_internal+16171
0000000000008d0d         call       sub_2e10                                    ; sub_2e10

                     loc_8d12:
0000000000008d12         xor        r8d, r8d                                    ; CODE XREF=copy_internal+13840, copy_internal+14961, copy_internal+15181, copy_internal+15298

                     loc_8d15:
0000000000008d15         mov        edi, dword [rbp+var_328]                    ; argument "__fd" for method j_close, CODE XREF=copy_internal+13935, copy_internal+13969, copy_internal+14009, copy_internal+14096, copy_internal+14667, copy_internal+14749, copy_internal+15052, copy_internal+15850, copy_internal+16257, copy_internal+16637
0000000000008d1b         mov        byte [rbp+var_338], r8b
0000000000008d22         call       j_close                                     ; close
0000000000008d27         test       eax, eax
0000000000008d29         movzx      r8d, byte [rbp+var_338]
0000000000008d31         jns        loc_7bd8

0000000000008d37         mov        rsi, qword [rbp+var_308]
0000000000008d3e         mov        edi, 0x4
0000000000008d43         call       quotearg_style                              ; quotearg_style
0000000000008d48         lea        rsi, qword [aFailedToCloseS]                ; argument "msgid" for method j_dcgettext, "failed to close %s"
0000000000008d4f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008d54         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008d56         mov        r12, rax
0000000000008d59         call       j_dcgettext                                 ; dcgettext
0000000000008d5e         mov        qword [rbp+var_328], rax
0000000000008d65         call       j___errno_location                          ; __errno_location
0000000000008d6a         mov        rdx, qword [rbp+var_328]                    ; argument "__format" for method j_error
0000000000008d71         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000008d73         mov        rcx, r12
0000000000008d76         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000008d78         xor        eax, eax
0000000000008d7a         call       j_error                                     ; error
0000000000008d7f         xor        r8d, r8d
0000000000008d82         jmp        loc_7bd8

                     loc_8d87:
0000000000008d87         movzx      r12d, byte [rbx+0x18]                       ; CODE XREF=copy_internal+10892
0000000000008d8c         xor        r12d, 0x1
0000000000008d90         jmp        loc_71fc

                     loc_8d95:
0000000000008d95         mov        byte [rbp+var_315], 0x0                     ; CODE XREF=copy_internal+7638
0000000000008d9c         mov        r12d, 0x1
0000000000008da2         jmp        loc_79a7

                     loc_8da7:
0000000000008da7         mov        rax, qword [rbp+var_D0]                     ; CODE XREF=copy_internal+8734
0000000000008dae         cmp        qword [rbp+var_160], rax
0000000000008db5         jne        loc_7ca4

0000000000008dbb         jmp        loc_697c

                     loc_8dc0:
0000000000008dc0         mov        rdi, qword [rbp+var_308]                    ; argument "__name" for method j_unlink, CODE XREF=copy_internal+14122
0000000000008dc7         call       j_unlink                                    ; unlink
0000000000008dcc         test       eax, eax
0000000000008dce         jne        loc_9a06

0000000000008dd4         cmp        byte [rbx+0x2e], 0x0
0000000000008dd8         je         loc_8e13

0000000000008dda         mov        rsi, qword [rbp+var_308]
0000000000008de1         mov        edi, 0x4
0000000000008de6         call       quotearg_style                              ; quotearg_style
0000000000008deb         lea        rsi, qword [aRemovedSn]                     ; argument "msgid" for method j_dcgettext, "removed %s\\n"
0000000000008df2         mov        r12, rax
0000000000008df5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008dfa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008dfc         call       j_dcgettext                                 ; dcgettext
0000000000008e01         mov        rdx, r12
0000000000008e04         mov        rsi, rax
0000000000008e07         mov        edi, 0x1
0000000000008e0c         xor        eax, eax
0000000000008e0e         call       j___printf_chk                              ; __printf_chk

                     loc_8e13:
0000000000008e13         movzx      r14d, byte [rbx+0x21]                       ; CODE XREF=copy_internal+13144
0000000000008e18         mov        eax, dword [rbp+var_35C]
0000000000008e1e         mov        dword [rbp+var_378], eax
0000000000008e24         test       r14b, r14b
0000000000008e27         je         loc_8e6c

0000000000008e29         mov        edx, dword [rbp+var_3A4]
0000000000008e2f         mov        rsi, qword [rbp+var_308]
0000000000008e36         mov        r8, rbx
0000000000008e39         mov        rdi, qword [rbp+var_310]
0000000000008e40         mov        ecx, 0x1
0000000000008e45         call       set_process_security_ctx                    ; set_process_security_ctx
0000000000008e4a         test       al, al
0000000000008e4c         mov        r8d, eax
0000000000008e4f         mov        qword [rbp+var_330], 0x0
0000000000008e5a         je         loc_7bd8

                     loc_8e60:
0000000000008e60         mov        eax, dword [rbp+var_35C]                    ; CODE XREF=copy_internal+11847
0000000000008e66         mov        dword [rbp+var_378], eax

                     loc_8e6c:
0000000000008e6c         mov        eax, dword [rbp+var_378]                    ; CODE XREF=copy_internal+13223, copy_internal+14162
0000000000008e72         mov        rdi, qword [rbp+var_308]
0000000000008e79         mov        esi, 0xc1
0000000000008e7e         not        eax
0000000000008e80         and        eax, dword [rbp+var_3A4]
0000000000008e86         mov        edx, eax
0000000000008e88         mov        dword [rbp+var_330], eax
0000000000008e8e         xor        eax, eax
0000000000008e90         call       open_safer                                  ; open_safer
0000000000008e95         mov        r14d, eax
0000000000008e98         mov        dword [rbp+var_328], eax
0000000000008e9e         call       j___errno_location                          ; __errno_location
0000000000008ea3         mov        r8d, dword [rax]
0000000000008ea6         mov        r12, rax
0000000000008ea9         mov        eax, r14d
0000000000008eac         shr        eax, 0x1f
0000000000008eaf         cmp        r8d, 0x11
0000000000008eb3         sete       dl
0000000000008eb6         and        dl, al
0000000000008eb8         mov        r14d, edx
0000000000008ebb         je         loc_92c2

0000000000008ec1         cmp        byte [rbx+0x18], 0x0
0000000000008ec5         mov        r8d, 0x11
0000000000008ecb         je         loc_9255

                     loc_8ed1:
0000000000008ed1         mov        r9d, 0x1                                    ; CODE XREF=copy_internal+14697

                     loc_8ed7:
0000000000008ed7         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+14136, copy_internal+14146, copy_internal+14448, copy_internal+14484
0000000000008ede         mov        edi, 0x4
0000000000008ee3         mov        byte [rbp+var_330], r9b
0000000000008eea         mov        dword [rbp+var_328], r8d
0000000000008ef1         call       quotearg_style                              ; quotearg_style
0000000000008ef6         lea        rsi, qword [aCannotCreateRe]                ; argument "msgid" for method j_dcgettext, "cannot create regular file %s"
0000000000008efd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008f02         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008f04         mov        r12, rax
0000000000008f07         call       j_dcgettext                                 ; dcgettext
0000000000008f0c         mov        r8d, dword [rbp+var_328]
0000000000008f13         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000008f16         mov        rcx, r12
0000000000008f19         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000008f1b         xor        eax, eax
0000000000008f1d         mov        esi, r8d                                    ; argument "__errnum" for method j_error
0000000000008f20         call       j_error                                     ; error
0000000000008f25         movzx      r9d, byte [rbp+var_330]
0000000000008f2d         xor        r8d, r8d
0000000000008f30         mov        qword [rbp+var_330], 0x0
0000000000008f3b         mov        r14d, r9d
0000000000008f3e         jmp        loc_7bd8

                     loc_8f43:
0000000000008f43         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+11385
0000000000008f4a         mov        edi, 0x4
0000000000008f4f         call       quotearg_style                              ; quotearg_style
0000000000008f54         mov        edx, 0x5
0000000000008f59         mov        r13, rax
0000000000008f5c         lea        rsi, qword [aCannotReadSymb]                ; "cannot read symbolic link %s"
0000000000008f63         jmp        loc_6f5f

                     loc_8f68:
0000000000008f68         mov        rdi, r12                                    ; CODE XREF=copy_internal+11429
0000000000008f6b         call       sub_2e10                                    ; sub_2e10

                     loc_8f70:
0000000000008f70         movzx      r8d, byte [rbx+0x25]                        ; CODE XREF=copy_internal+14616
0000000000008f75         test       r8b, r8b
0000000000008f78         jne        loc_6b90

0000000000008f7e         movzx      eax, byte [rbx+0x1d]
0000000000008f82         test       al, al
0000000000008f84         mov        byte [rbp+var_320], al
0000000000008f8a         jne        loc_9203

0000000000008f90         movzx      r8d, byte [rbp+var_320]
0000000000008f98         mov        byte [rbp+var_320], 0x1
0000000000008f9f         jmp        loc_5fff

                     loc_8fa4:
0000000000008fa4         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=copy_internal+2134
                        ; endp

                     loc_8fa9:
0000000000008fa9         mov        rsi, qword [rbp+var_308]                    ; argument "__filename" for method j___xstat, CODE XREF=copy_internal+7019
0000000000008fb0         lea        rdx, qword [rbp+var_160]                    ; argument "__stat_buf" for method j___xstat
0000000000008fb7         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000008fbc         mov        byte [rbp+var_358], r9b
0000000000008fc3         mov        byte [rbp+var_350], r8b
0000000000008fca         call       j___xstat                                   ; __xstat
0000000000008fcf         test       eax, eax
0000000000008fd1         movzx      r8d, byte [rbp+var_350]
0000000000008fd9         movzx      r9d, byte [rbp+var_358]
0000000000008fe1         je         loc_7671

0000000000008fe7         jmp        loc_5c9f

                     loc_8fec:
0000000000008fec         mov        rsi, qword [rbp+var_310]                    ; argument "__filename" for method j___xstat, CODE XREF=copy_internal+6900
0000000000008ff3         lea        rdx, qword [rbp+var_D0]                     ; argument "__stat_buf" for method j___xstat
0000000000008ffa         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000008fff         mov        byte [rbp+var_358], r9b
0000000000009006         mov        byte [rbp+var_350], r8b
000000000000900d         call       j___xstat                                   ; __xstat
0000000000009012         test       eax, eax
0000000000009014         movzx      r8d, byte [rbp+var_350]
000000000000901c         movzx      r9d, byte [rbp+var_358]
0000000000009024         je         loc_75dc

000000000000902a         jmp        loc_5c9f

                     loc_902f:
000000000000902f         mov        qword [rbp+var_330], 0x0                    ; CODE XREF=copy_internal+11996, copy_internal+15710

                     loc_903a:
000000000000903a         cmp        byte [rbx+0x1f], 0x0                        ; CODE XREF=copy_internal+15194, copy_internal+15220, copy_internal+15398, copy_internal+15446, copy_internal+15455, copy_internal+15491, copy_internal+15554
000000000000903e         jne        loc_9446

                     loc_9044:
0000000000009044         cmp        byte [rbx+0x1d], 0x0                        ; CODE XREF=copy_internal+14873, copy_internal+14955
0000000000009048         je         loc_90a4

000000000000904a         mov        eax, dword [rbp+var_B4]
0000000000009050         cmp        dword [rbp+var_264], eax
0000000000009056         jne        loc_9066

0000000000009058         mov        eax, dword [rbp+var_B0]
000000000000905e         cmp        dword [rbp+var_260], eax
0000000000009064         je         loc_90a4

                     loc_9066:
0000000000009066         mov        r9, qword [rbp+var_368]                     ; CODE XREF=copy_internal+13782
000000000000906d         mov        edx, dword [rbp+var_328]
0000000000009073         lea        rcx, qword [rbp+var_280]
000000000000907a         mov        rsi, qword [rbp+var_308]
0000000000009081         movzx      r8d, r14b
0000000000009085         mov        rdi, rbx
0000000000009088         call       set_owner                                   ; set_owner
000000000000908d         cmp        eax, 0xffffffff
0000000000009090         je         loc_8d12

0000000000009096         test       eax, eax
0000000000009098         jne        loc_90a4

000000000000909a         and        dword [rbp+var_340], 0xfffff1ff

                     loc_90a4:
00000000000090a4         cmp        byte [rbx+0x27], 0x0                        ; CODE XREF=copy_internal+13768, copy_internal+13796, copy_internal+13848
00000000000090a8         je         loc_90b7

00000000000090aa         test       byte [rbp+var_B8], 0x80
00000000000090b1         je         loc_9ade

                     loc_90b7:
00000000000090b7         movabs     rax, 0xff0000000000ff                       ; CODE XREF=copy_internal+13864, copy_internal+16485, copy_internal+16516, copy_internal+16554
00000000000090c1         test       qword [rbx+0x18], rax
00000000000090c5         jne        loc_939d

00000000000090cb         cmp        byte [rbx+0x2b], 0x0
00000000000090cf         jne        loc_9b62

00000000000090d5         mov        r12d, r14d
00000000000090d8         and        r12b, byte [rbx+0x20]
00000000000090dc         jne        loc_99d7

00000000000090e2         cmp        dword [rbp+var_378], 0x0
00000000000090e9         mov        r8d, 0x1
00000000000090ef         je         loc_8d15

00000000000090f5         mov        byte [rbp+var_338], r8b
00000000000090fc         call       cached_umask                                ; cached_umask
0000000000009101         not        eax
0000000000009103         test       dword [rbp+var_378], eax
0000000000009109         movzx      r8d, byte [rbp+var_338]
0000000000009111         je         loc_8d15

0000000000009117         mov        edx, dword [rbp+var_3A4]
000000000000911d         mov        rsi, qword [rbp+var_308]
0000000000009124         mov        edi, dword [rbp+var_328]
000000000000912a         call       fchmod_or_lchmod                            ; fchmod_or_lchmod
000000000000912f         test       eax, eax
0000000000009131         movzx      r8d, byte [rbp+var_338]
0000000000009139         je         loc_8d15

000000000000913f         mov        rsi, qword [rbp+var_308]
0000000000009146         mov        edi, 0x4
000000000000914b         call       quotearg_style                              ; quotearg_style
0000000000009150         lea        rsi, qword [aPreservingPerm]                ; argument "msgid" for method j_dcgettext, "preserving permissions for %s"
0000000000009157         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000915c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000915e         mov        r12, rax
0000000000009161         call       j_dcgettext                                 ; dcgettext
0000000000009166         mov        qword [rbp+var_338], rax
000000000000916d         call       j___errno_location                          ; __errno_location
0000000000009172         mov        rdx, qword [rbp+var_338]                    ; argument "__format" for method j_error
0000000000009179         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000917b         mov        rcx, r12
000000000000917e         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000009180         xor        eax, eax
0000000000009182         call       j_error                                     ; error

                     loc_9187:
0000000000009187         movzx      r8d, byte [rbx+0x24]                        ; CODE XREF=copy_internal+14673
000000000000918c         xor        r8d, 0x1
0000000000009190         jmp        loc_8d15

                     loc_9195:
0000000000009195         cmp        dword [rbp+var_328], 0x0                    ; CODE XREF=copy_internal+11913
000000000000919c         jns        loc_93ee

                     loc_91a2:
00000000000091a2         movzx      r9d, byte [rbx+0x16]                        ; CODE XREF=copy_internal+11926
00000000000091a7         test       r9b, r9b
00000000000091aa         jne        loc_8dc0

00000000000091b0         mov        r8d, dword [r12]
00000000000091b4         cmp        r8d, 0x2
00000000000091b8         jne        loc_8ed7

00000000000091be         cmp        byte [rbx+0x18], 0x0
00000000000091c2         jne        loc_8ed7

00000000000091c8         mov        dword [rbp+var_378], 0x0
00000000000091d2         jmp        loc_8e6c

                     loc_91d7:
00000000000091d7         mov        rsi, qword [rbp+var_308]                    ; argument "__filename" for method j___lxstat, CODE XREF=copy_internal+11748
00000000000091de         lea        rdx, qword [rbp+var_1F0]                    ; argument "__stat_buf" for method j___lxstat
00000000000091e5         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
00000000000091ea         call       j___lxstat                                  ; __lxstat
00000000000091ef         test       eax, eax
00000000000091f1         je         loc_886a

00000000000091f7         mov        rsi, qword [rbp+var_308]
00000000000091fe         jmp        loc_6365

                     loc_9203:
0000000000009203         mov        edx, dword [rbp+var_260]                    ; argument "__group" for method j_lchown, CODE XREF=copy_internal+13578
0000000000009209         mov        esi, dword [rbp+var_264]                    ; argument "__owner" for method j_lchown
000000000000920f         mov        rdi, qword [rbp+var_308]                    ; argument "__file" for method j_lchown
0000000000009216         mov        byte [rbp+var_328], r8b
000000000000921d         call       j_lchown                                    ; lchown
0000000000009222         test       eax, eax
0000000000009224         movzx      r8d, byte [rbp+var_328]
000000000000922c         je         loc_5fff

0000000000009232         mov        rdi, rbx
0000000000009235         call       chown_failure_ok                            ; chown_failure_ok
000000000000923a         test       al, al
000000000000923c         movzx      r8d, byte [rbp+var_328]
0000000000009244         je         loc_9a44

000000000000924a         mov        byte [rbp+var_320], al
0000000000009250         jmp        loc_5fff

                     loc_9255:
0000000000009255         mov        rsi, qword [rbp+var_308]                    ; argument "__filename" for method j___lxstat, CODE XREF=copy_internal+13387
000000000000925c         lea        rdx, qword [rbp+var_D0]                     ; argument "__stat_buf" for method j___lxstat
0000000000009263         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000009268         mov        dword [rbp+var_348], r8d
000000000000926f         call       j___lxstat                                  ; __lxstat
0000000000009274         test       eax, eax
0000000000009276         mov        r8d, dword [rbp+var_348]
000000000000927d         jne        loc_92c2

000000000000927f         mov        eax, dword [rbp+var_B8]
0000000000009285         and        eax, 0xf000
000000000000928a         cmp        eax, 0xa000
000000000000928f         jne        loc_92c2

0000000000009291         movzx      r8d, byte [rbx+0x30]
0000000000009296         test       r8b, r8b
0000000000009299         je         loc_9a87

000000000000929f         mov        edx, dword [rbp+var_330]
00000000000092a5         mov        rdi, qword [rbp+var_308]
00000000000092ac         mov        esi, 0x41
00000000000092b1         xor        eax, eax
00000000000092b3         call       open_safer                                  ; open_safer
00000000000092b8         mov        r8d, dword [r12]
00000000000092bc         mov        dword [rbp+var_328], eax

                     loc_92c2:
00000000000092c2         mov        eax, dword [rbp+var_328]                    ; CODE XREF=copy_internal+13371, copy_internal+14333, copy_internal+14351
00000000000092c8         shr        eax, 0x1f
00000000000092cb         cmp        r8d, 0x15
00000000000092cf         sete       dl
00000000000092d2         and        dl, al
00000000000092d4         mov        r9d, edx
00000000000092d7         je         loc_93d6

00000000000092dd         mov        rsi, qword [rbp+var_308]
00000000000092e4         mov        r8d, 0x15
00000000000092ea         cmp        byte [rsi], 0x0
00000000000092ed         mov        rdi, rsi
00000000000092f0         je         loc_8ed7

00000000000092f6         xor        eax, eax
00000000000092f8         or         rcx, 0xffffffffffffffff
00000000000092fc         xor        r8d, r8d
00000000000092ff         repne scasb al, byte [rdi]
0000000000009301         mov        rax, rcx
0000000000009304         not        rax
0000000000009307         cmp        byte [rsi+rax-2], 0x2f
000000000000930c         setne      r8b
0000000000009310         add        r8d, 0x14
0000000000009314         jmp        loc_8ed7

                     loc_9319:
0000000000009319         mov        eax, dword [rbp+var_1D8]                    ; CODE XREF=copy_internal+11444
000000000000931f         and        eax, 0xf000
0000000000009324         cmp        eax, 0xa000
0000000000009329         jne        loc_873a

000000000000932f         or         rcx, 0xffffffffffffffff
0000000000009333         mov        eax, r14d
0000000000009336         mov        rdi, r12
0000000000009339         repne scasb al, byte [rdi]
000000000000933b         mov        rsi, qword [rbp+var_1C0]
0000000000009342         not        rcx
0000000000009345         lea        rax, qword [rcx-1]
0000000000009349         cmp        rsi, rax
000000000000934c         jne        loc_873a

0000000000009352         mov        rdi, qword [rbp+var_308]
0000000000009359         call       areadlink_with_size                         ; areadlink_with_size
000000000000935e         test       rax, rax
0000000000009361         je         loc_873a

0000000000009367         mov        rdi, rax                                    ; argument "__s1" for method j_strcmp
000000000000936a         mov        rsi, r12                                    ; argument "__s2" for method j_strcmp
000000000000936d         mov        qword [rbp+var_328], rax
0000000000009374         call       j_strcmp                                    ; strcmp
0000000000009379         mov        rdx, qword [rbp+var_328]
0000000000009380         test       eax, eax
0000000000009382         mov        rdi, rdx
0000000000009385         jne        loc_9b82

000000000000938b         call       sub_2e10                                    ; sub_2e10
0000000000009390         mov        rdi, r12
0000000000009393         call       sub_2e10                                    ; sub_2e10
0000000000009398         jmp        loc_8f70

                     loc_939d:
000000000000939d         mov        r8d, dword [rbp+var_340]                    ; CODE XREF=copy_internal+13893
00000000000093a4         mov        ecx, dword [rbp+var_328]
00000000000093aa         mov        rdx, qword [rbp+var_308]
00000000000093b1         mov        esi, dword [rbp+var_320]
00000000000093b7         mov        rdi, qword [rbp+var_310]
00000000000093be         call       copy_acl                                    ; copy_acl
00000000000093c3         test       eax, eax
00000000000093c5         mov        r8d, 0x1
00000000000093cb         je         loc_8d15

00000000000093d1         jmp        loc_9187

                     loc_93d6:
00000000000093d6         cmp        dword [rbp+var_328], 0x0                    ; CODE XREF=copy_internal+14423
00000000000093dd         mov        r14d, 0x1
00000000000093e3         jns        loc_8926

00000000000093e9         jmp        loc_8ed1

                     loc_93ee:
00000000000093ee         movzx      esi, byte [rbx+0x25]                        ; CODE XREF=copy_internal+14108
00000000000093f2         mov        rdi, qword [rbp+var_308]
00000000000093f9         xor        edx, edx
00000000000093fb         mov        rcx, rbx
00000000000093fe         call       set_file_security_ctx                       ; set_file_security_ctx
0000000000009403         test       al, al
0000000000009405         mov        r8d, eax
0000000000009408         jne        loc_891c

000000000000940e         cmp        byte [rbx+0x26], 0x0
0000000000009412         mov        qword [rbp+var_330], 0x0
000000000000941d         jne        loc_8d15

0000000000009423         jmp        loc_891c

                     loc_9428:
0000000000009428         mov        edi, dword [rbp+var_328]                    ; CODE XREF=copy_internal+12879
000000000000942e         mov        rsi, rcx
0000000000009431         call       write_zeros                                 ; write_zeros
0000000000009436         test       al, al
0000000000009438         je         loc_9953

000000000000943e         xor        r8d, r8d
0000000000009441         jmp        loc_8bad

                     loc_9446:
0000000000009446         mov        rax, qword [rbp+var_238]                    ; CODE XREF=copy_internal+13758
000000000000944d         mov        rsi, qword [rbp+var_308]
0000000000009454         lea        rdx, qword [rbp+var_2A0]
000000000000945b         mov        edi, dword [rbp+var_328]
0000000000009461         mov        qword [rbp+var_2A0], rax
0000000000009468         mov        rax, qword [rbp+var_230]
000000000000946f         mov        qword [rbp+var_298], rax
0000000000009476         mov        rax, qword [rbp+var_228]
000000000000947d         mov        qword [rbp+var_290], rax
0000000000009484         mov        rax, qword [rbp+var_220]
000000000000948b         mov        qword [rbp+var_288], rax
0000000000009492         call       fdutimens                                   ; fdutimens
0000000000009497         test       eax, eax
0000000000009499         je         loc_9044

000000000000949f         mov        rsi, qword [rbp+var_308]
00000000000094a6         mov        edi, 0x4
00000000000094ab         call       quotearg_style                              ; quotearg_style
00000000000094b0         lea        rsi, qword [aPreservingTime]                ; argument "msgid" for method j_dcgettext, "preserving times for %s"
00000000000094b7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000094b9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000094be         mov        r12, rax
00000000000094c1         call       j_dcgettext                                 ; dcgettext
00000000000094c6         mov        qword [rbp+var_338], rax
00000000000094cd         call       j___errno_location                          ; __errno_location
00000000000094d2         mov        rdx, qword [rbp+var_338]                    ; argument "__format" for method j_error
00000000000094d9         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000094db         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000094dd         xor        eax, eax
00000000000094df         mov        rcx, r12
00000000000094e2         call       j_error                                     ; error
00000000000094e7         cmp        byte [rbx+0x24], 0x0
00000000000094eb         je         loc_9044

00000000000094f1         jmp        loc_8d12

                     loc_94f6:
00000000000094f6         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+11983
00000000000094fd         mov        edi, 0x4
0000000000009502         call       quotearg_style                              ; quotearg_style
0000000000009507         lea        rsi, qword [aCannotFstatS]                  ; argument "msgid" for method j_dcgettext, "cannot fstat %s"
000000000000950e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000009513         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009515         mov        r12, rax
0000000000009518         call       j_dcgettext                                 ; dcgettext
000000000000951d         mov        qword [rbp+var_330], rax
0000000000009524         call       j___errno_location                          ; __errno_location
0000000000009529         mov        rdx, qword [rbp+var_330]                    ; argument "__format" for method j_error
0000000000009530         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000009532         mov        rcx, r12
0000000000009535         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000009537         xor        eax, eax
0000000000009539         call       j_error                                     ; error
000000000000953e         xor        r8d, r8d
0000000000009541         mov        qword [rbp+var_330], 0x0
000000000000954c         jmp        loc_8d15

                     loc_9551:
0000000000009551         mov        qword [rbp+var_370], rcx                    ; CODE XREF=copy_internal+12321, copy_internal+12330
0000000000009558         jmp        loc_8ab0

                     loc_955d:
000000000000955d         xor        r9d, r9d                                    ; CODE XREF=copy_internal+12389
0000000000009560         cmp        dword [rbx+0xc], 0x3
0000000000009564         lea        rax, qword [rbp+var_2F0]
000000000000956b         mov        qword [rbp+var_398], 0x0
0000000000009576         mov        qword [rbp+var_348], rax
000000000000957d         sete       r9b

                     loc_9581:
0000000000009581         lea        rax, qword [rbp+var_2F8]                    ; CODE XREF=copy_internal+15679, copy_internal+16078
0000000000009588         sub        rsp, 0x8
000000000000958c         mov        r8, qword [rbp+var_398]
0000000000009593         mov        rcx, qword [rbp+var_370]
000000000000959a         mov        rdx, qword [rbp+var_3B0]
00000000000095a1         mov        esi, dword [rbp+var_328]
00000000000095a7         mov        edi, dword [rbp+var_320]
00000000000095ad         push       rax
00000000000095ae         push       qword [rbp+var_348]
00000000000095b4         push       0xffffffffffffffff
00000000000095b6         push       qword [rbp+var_308]
00000000000095bc         push       qword [rbp+var_310]
00000000000095c2         call       sparse_copy                                 ; sparse_copy
00000000000095c7         add        rsp, 0x30
00000000000095cb         test       al, al
00000000000095cd         je         loc_8d12

00000000000095d3         cmp        byte [rbp+var_2F8], 0x0
00000000000095da         je         loc_903a

00000000000095e0         mov        rsi, qword [rbp+var_2F0]                    ; argument "__length" for method j_ftruncate
00000000000095e7         mov        edi, dword [rbp+var_328]                    ; argument "__fd" for method j_ftruncate
00000000000095ed         call       j_ftruncate                                 ; ftruncate
00000000000095f2         test       eax, eax
00000000000095f4         jns        loc_903a

                     loc_95fa:
00000000000095fa         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+15433, copy_internal+15560
0000000000009601         mov        edi, 0x4
0000000000009606         call       quotearg_style                              ; quotearg_style
000000000000960b         lea        rsi, qword [aFailedToExtend]                ; "failed to extend %s"
0000000000009612         mov        r12, rax
0000000000009615         mov        edx, 0x5

                     loc_961a:
000000000000961a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=copy_internal+15529, copy_internal+16210
000000000000961c         call       j_dcgettext                                 ; dcgettext
0000000000009621         mov        qword [rbp+var_338], rax
0000000000009628         call       j___errno_location                          ; __errno_location
000000000000962d         mov        rdx, qword [rbp+var_338]                    ; argument "__format" for method j_error
0000000000009634         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000009636         mov        rcx, r12
0000000000009639         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000963b         xor        eax, eax
000000000000963d         call       j_error                                     ; error
0000000000009642         jmp        loc_8d12

                     loc_9647:
0000000000009647         mov        byte [rbp+var_2CF], 0x1                     ; CODE XREF=copy_internal+12717

                     loc_964e:
000000000000964e         mov        rdi, qword [rbp+var_2C8]                    ; CODE XREF=copy_internal+12543, copy_internal+12743
0000000000009655         call       sub_2e10                                    ; sub_2e10
000000000000965a         cmp        byte [rbp+var_2CF], 0x0
0000000000009661         mov        qword [rbp+var_2C8], 0x0
000000000000966c         mov        qword [rbp+var_2D8], 0x0
0000000000009677         je         loc_8b63

000000000000967d         mov        rbx, qword [rbp+var_388]
0000000000009684         mov        r13d, dword [rbp+var_360]

                     loc_968b:
000000000000968b         mov        rcx, qword [rbp+var_3A0]                    ; CODE XREF=copy_internal+15622
0000000000009692         cmp        qword [rbp+var_380], rcx
0000000000009699         setg       r12b
000000000000969d         jg         loc_96ac

000000000000969f         cmp        byte [rbp+var_338], 0x0
00000000000096a6         je         loc_903a

                     loc_96ac:
00000000000096ac         cmp        dword [rbp+var_390], 0x1                    ; CODE XREF=copy_internal+15389
00000000000096b3         mov        rsi, qword [rbp+var_380]
00000000000096ba         je         loc_972e

00000000000096bc         mov        edi, dword [rbp+var_328]                    ; argument "__fd" for method j_ftruncate
00000000000096c2         call       j_ftruncate                                 ; ftruncate
00000000000096c7         test       eax, eax
00000000000096c9         jne        loc_95fa

00000000000096cf         cmp        dword [rbp+var_390], 0x3
00000000000096d6         jne        loc_903a

00000000000096dc         test       r12b, r12b
00000000000096df         je         loc_903a

00000000000096e5         mov        rdx, qword [rbp+var_380]
00000000000096ec         mov        rsi, qword [rbp+var_3A0]
00000000000096f3         mov        edi, dword [rbp+var_328]
00000000000096f9         sub        rdx, rsi
00000000000096fc         call       punch_hole                                  ; punch_hole
0000000000009701         test       eax, eax
0000000000009703         jns        loc_903a

0000000000009709         mov        rsi, qword [rbp+var_308]
0000000000009710         mov        edi, 0x4
0000000000009715         call       quotearg_style                              ; quotearg_style
000000000000971a         mov        edx, 0x5
000000000000971f         mov        r12, rax
0000000000009722         lea        rsi, qword [aErrorDeallocat]                ; "error deallocating %s"
0000000000009729         jmp        loc_961a

                     loc_972e:
000000000000972e         sub        rsi, qword [rbp+var_3A0]                    ; CODE XREF=copy_internal+15418
0000000000009735         mov        edi, dword [rbp+var_328]
000000000000973b         call       write_zeros                                 ; write_zeros
0000000000009740         test       al, al
0000000000009742         jne        loc_903a

0000000000009748         jmp        loc_95fa

                     loc_974d:
000000000000974d         mov        rax, qword [rbp+var_130]                    ; CODE XREF=copy_internal+12285
0000000000009754         cmp        qword [rbp+var_370], rax
000000000000975b         jbe        loc_8a83

0000000000009761         add        rax, 0x1
0000000000009765         mov        qword [rbp+var_370], rax
000000000000976c         jmp        loc_8a83

                     loc_9771:
0000000000009771         cmp        byte [rbp+var_2CF], 0x0                     ; CODE XREF=copy_internal+12529
0000000000009778         mov        rbx, qword [rbp+var_388]
000000000000977f         mov        r13d, dword [rbp+var_360]
0000000000009786         jne        loc_968b

000000000000978c         cmp        byte [rbp+var_2D0], 0x0
0000000000009793         je         loc_99b0

0000000000009799         xor        r9d, r9d
000000000000979c         cmp        dword [rbx+0xc], 0x3
00000000000097a0         mov        eax, 0x0
00000000000097a5         sete       r9b
00000000000097a9         cmp        byte [rbp+var_3A5], 0x0
00000000000097b0         cmovne     rax, qword [rbp+var_398]
00000000000097b8         mov        qword [rbp+var_398], rax
00000000000097bf         jmp        loc_9581

                     loc_97c4:
00000000000097c4         mov        edx, dword [rbp+var_320]                    ; CODE XREF=copy_internal+12006
00000000000097ca         mov        edi, dword [rbp+var_328]                    ; argument "__fd" for method j_ioctl
00000000000097d0         xor        eax, eax
00000000000097d2         mov        esi, 0x40049409                             ; argument "__request" for method j_ioctl
00000000000097d7         call       j_ioctl                                     ; ioctl
00000000000097dc         test       eax, eax
00000000000097de         je         loc_902f

00000000000097e4         cmp        dword [rbx+0x38], 0x2
00000000000097e8         jne        loc_896c

00000000000097ee         mov        rdx, qword [rbp+var_310]
00000000000097f5         mov        esi, 0x4
00000000000097fa         mov        edi, 0x1
00000000000097ff         call       quotearg_n_style                            ; quotearg_n_style
0000000000009804         mov        rdx, qword [rbp+var_308]
000000000000980b         mov        esi, 0x4
0000000000009810         xor        edi, edi
0000000000009812         mov        r12, rax
0000000000009815         call       quotearg_n_style                            ; quotearg_n_style
000000000000981a         lea        rsi, qword [aFailedToCloneS]                ; argument "msgid" for method j_dcgettext, "failed to clone %s from %s"
0000000000009821         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000009826         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009828         mov        qword [rbp+var_338], rax
000000000000982f         call       j_dcgettext                                 ; dcgettext
0000000000009834         mov        qword [rbp+var_330], rax
000000000000983b         call       j___errno_location                          ; __errno_location
0000000000009840         mov        rcx, qword [rbp+var_338]
0000000000009847         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000009849         mov        r8, r12
000000000000984c         mov        rdx, qword [rbp+var_330]                    ; argument "__format" for method j_error
0000000000009853         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000009855         xor        eax, eax
0000000000009857         call       j_error                                     ; error
000000000000985c         xor        r8d, r8d
000000000000985f         mov        qword [rbp+var_330], 0x0
000000000000986a         jmp        loc_8d15

                     loc_986f:
000000000000986f         mov        eax, dword [rbx+0xc]                        ; CODE XREF=copy_internal+12174
0000000000009872         cmp        eax, 0x3
0000000000009875         je         loc_98fe

000000000000987b         cmp        eax, 0x2
000000000000987e         jne        loc_8a14

0000000000009884         test       byte [rbp+var_348], 0x1
000000000000988b         je         loc_8a14

0000000000009891         mov        rax, qword [rbp+var_370]
0000000000009898         lea        rdi, qword [r12+rax]
000000000000989c         call       xmalloc                                     ; xmalloc
00000000000098a1         lea        rcx, qword [rax+r12-1]
00000000000098a6         mov        qword [rbp+var_330], rax
00000000000098ad         xor        edx, edx
00000000000098af         mov        rax, rcx
00000000000098b2         div        r12
00000000000098b5         sub        rcx, rdx
00000000000098b8         mov        qword [rbp+var_3B0], rcx

                     loc_98bf:
00000000000098bf         mov        eax, dword [rbx+0xc]                        ; CODE XREF=copy_internal+16051
00000000000098c2         mov        dword [rbp+var_390], eax
00000000000098c8         movzx      eax, byte [rbp+var_338]
00000000000098cf         mov        byte [rbp+var_3A5], al
00000000000098d5         jmp        loc_8afc

                     loc_98da:
00000000000098da         mov        rax, qword [rbp+var_130]                    ; CODE XREF=copy_internal+12152
00000000000098e1         cqo
00000000000098e3         idiv       r8
00000000000098e6         cmp        qword [rbp+var_120], rax
00000000000098ed         setl       al
00000000000098f0         movzx      eax, al
00000000000098f3         mov        dword [rbp+var_348], eax
00000000000098f9         jmp        loc_89fe

                     loc_98fe:
00000000000098fe         mov        rax, qword [rbp+var_370]                    ; CODE XREF=copy_internal+15861
0000000000009905         lea        rdi, qword [r12+rax]
0000000000009909         call       xmalloc                                     ; xmalloc
000000000000990e         lea        rcx, qword [rax+r12-1]
0000000000009913         xor        edx, edx
0000000000009915         mov        qword [rbp+var_330], rax
000000000000991c         mov        rax, rcx
000000000000991f         div        r12
0000000000009922         sub        rcx, rdx
0000000000009925         cmp        dword [rbp+var_348], 0x0
000000000000992c         mov        qword [rbp+var_3B0], rcx
0000000000009933         jne        loc_98bf

0000000000009935         xor        r9d, r9d
0000000000009938         cmp        dword [rbx+0xc], 0x3
000000000000993c         lea        rax, qword [rbp+var_2F0]
0000000000009943         mov        qword [rbp+var_348], rax
000000000000994a         sete       r9b
000000000000994e         jmp        loc_9581

                     loc_9953:
0000000000009953         mov        rdx, qword [rbp+var_308]                    ; CODE XREF=copy_internal+14776
000000000000995a         mov        esi, 0x3
000000000000995f         xor        edi, edi
0000000000009961         mov        rbx, qword [rbp+var_388]
0000000000009968         mov        r13d, dword [rbp+var_360]
000000000000996f         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000009974         lea        rsi, qword [aSWriteFailed]                  ; "%s: write failed"
000000000000997b         mov        r12, rax
000000000000997e         mov        edx, 0x5

                     loc_9983:
0000000000009983         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=copy_internal+16605
0000000000009985         call       j_dcgettext                                 ; dcgettext
000000000000998a         mov        qword [rbp+var_338], rax
0000000000009991         call       j___errno_location                          ; __errno_location
0000000000009996         mov        rdx, qword [rbp+var_338]                    ; argument "__format" for method j_error
000000000000999d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000999f         mov        rcx, r12
00000000000099a2         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000099a4         xor        eax, eax
00000000000099a6         call       j_error                                     ; error
00000000000099ab         jmp        loc_8d06

                     loc_99b0:
00000000000099b0         mov        rdx, qword [rbp+var_310]                    ; CODE XREF=copy_internal+15635
00000000000099b7         mov        esi, 0x3
00000000000099bc         xor        edi, edi
00000000000099be         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000099c3         mov        edx, 0x5
00000000000099c8         mov        r12, rax
00000000000099cb         lea        rsi, qword [aSFailedToGetEx]                ; "%s: failed to get extents info"
00000000000099d2         jmp        loc_961a

                     loc_99d7:
00000000000099d7         call       cached_umask                                ; cached_umask, CODE XREF=copy_internal+13916
00000000000099dc         mov        esi, dword [rbp+var_328]
00000000000099e2         not        eax
00000000000099e4         mov        rdi, qword [rbp+var_308]
00000000000099eb         mov        edx, eax
00000000000099ed         mov        r14d, r12d
00000000000099f0         and        edx, 0x1b6
00000000000099f6         call       set_acl                                     ; set_acl
00000000000099fb         test       eax, eax
00000000000099fd         sete       r8b
0000000000009a01         jmp        loc_8d15

                     loc_9a06:
0000000000009a06         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+13134
0000000000009a0d         mov        edi, 0x4
0000000000009a12         call       quotearg_style                              ; quotearg_style
0000000000009a17         lea        rsi, qword [aCannotRemoveS]                 ; argument "msgid" for method j_dcgettext, "cannot remove %s"
0000000000009a1e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000009a23         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009a25         mov        qword [rbp+var_328], rax
0000000000009a2c         call       j_dcgettext                                 ; dcgettext
0000000000009a31         mov        rcx, qword [rbp+var_328]
0000000000009a38         mov        rdx, rax
0000000000009a3b         mov        esi, dword [r12]
0000000000009a3f         jmp        loc_7bc1

                     loc_9a44:
0000000000009a44         lea        rsi, qword [aFailedToPreser_130f8]          ; argument "msgid" for method j_dcgettext, "failed to preserve ownership for %s", CODE XREF=copy_internal+14276
0000000000009a4b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009a4d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000009a52         call       j_dcgettext                                 ; dcgettext
0000000000009a57         mov        r12, rax
0000000000009a5a         call       j___errno_location                          ; __errno_location
0000000000009a5f         mov        rcx, qword [rbp+var_308]
0000000000009a66         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000009a68         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000009a6a         xor        eax, eax
0000000000009a6c         mov        rdx, r12                                    ; argument "__format" for method j_error
0000000000009a6f         call       j_error                                     ; error
0000000000009a74         movzx      r8d, byte [rbx+0x24]
0000000000009a79         test       r8b, r8b
0000000000009a7c         jne        loc_6a10

0000000000009a82         jmp        loc_5fff

                     loc_9a87:
0000000000009a87         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+14361
0000000000009a8e         mov        edi, 0x4
0000000000009a93         mov        byte [rbp+var_328], r8b
0000000000009a9a         call       quotearg_style                              ; quotearg_style
0000000000009a9f         lea        rsi, qword [aNotWritingThro]                ; argument "msgid" for method j_dcgettext, "not writing through dangling symlink %s"
0000000000009aa6         mov        r12, rax
0000000000009aa9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000009aae         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009ab0         call       j_dcgettext                                 ; dcgettext
0000000000009ab5         mov        rcx, r12
0000000000009ab8         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000009abb         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000009abd         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000009abf         xor        eax, eax
0000000000009ac1         call       j_error                                     ; error
0000000000009ac6         mov        qword [rbp+var_330], 0x0
0000000000009ad1         movzx      r8d, byte [rbp+var_328]
0000000000009ad9         jmp        loc_7bd8

                     loc_9ade:
0000000000009ade         call       j_geteuid                                   ; geteuid, CODE XREF=copy_internal+13873
0000000000009ae3         test       eax, eax
0000000000009ae5         je         loc_90b7

0000000000009aeb         mov        rsi, qword [rbp+var_308]
0000000000009af2         mov        edi, dword [rbp+var_328]
0000000000009af8         mov        edx, 0x180
0000000000009afd         call       fchmod_or_lchmod                            ; fchmod_or_lchmod
0000000000009b02         test       eax, eax
0000000000009b04         jne        loc_90b7

0000000000009b0a         mov        edx, dword [rbp+var_378]
0000000000009b10         mov        rsi, qword [rbp+var_308]
0000000000009b17         mov        edi, dword [rbp+var_328]
0000000000009b1d         not        edx
0000000000009b1f         and        edx, dword [rbp+var_3A4]
0000000000009b25         call       fchmod_or_lchmod                            ; fchmod_or_lchmod
0000000000009b2a         jmp        loc_90b7

                     loc_9b2f:
0000000000009b2f         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+12858
0000000000009b36         mov        edi, 0x4
0000000000009b3b         mov        rbx, qword [rbp+var_388]
0000000000009b42         mov        r13d, dword [rbp+var_360]
0000000000009b49         call       quotearg_style                              ; quotearg_style
0000000000009b4e         mov        edx, 0x5
0000000000009b53         mov        r12, rax
0000000000009b56         lea        rsi, qword [aCannotLseekS]                  ; "cannot lseek %s"
0000000000009b5d         jmp        loc_9983

                     loc_9b62:
0000000000009b62         mov        edx, dword [rbx+0x10]                       ; CODE XREF=copy_internal+13903
0000000000009b65         mov        esi, dword [rbp+var_328]
0000000000009b6b         mov        rdi, qword [rbp+var_308]
0000000000009b72         call       set_acl                                     ; set_acl
0000000000009b77         test       eax, eax
0000000000009b79         sete       r8b
0000000000009b7d         jmp        loc_8d15

                     loc_9b82:
0000000000009b82         call       sub_2e10                                    ; sub_2e10, CODE XREF=copy_internal+14597
0000000000009b87         jmp        loc_873a
0000000000009b8c         align      16                                          ; End of unwind block (FDE at 0x169f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_11: int8_t, -17


                     copy:
0000000000009b90         sub        rsp, 0x18                                   ; Begin of unwind block (FDE at 0x16a24), CODE XREF=do_copy+297, do_copy+785
0000000000009b94         mov        rax, qword [fs:0x28]
0000000000009b9d         mov        qword [rsp+0x18+var_10], rax
0000000000009ba2         xor        eax, eax
0000000000009ba4         test       rcx, rcx
0000000000009ba7         je         loc_9cd6

0000000000009bad         cmp        dword [rcx], 0x3
0000000000009bb0         ja         loc_9cb7

0000000000009bb6         mov        eax, dword [rcx+0xc]
0000000000009bb9         lea        r10d, dword [rax-1]
0000000000009bbd         cmp        r10d, 0x2
0000000000009bc1         ja         loc_9c98

0000000000009bc7         mov        r10d, dword [rcx+0x38]
0000000000009bcb         cmp        r10d, 0x2
0000000000009bcf         ja         loc_9c79

0000000000009bd5         cmp        byte [rcx+0x17], 0x0
0000000000009bd9         jne        loc_9c30

                     loc_9bdb:
0000000000009bdb         cmp        eax, 0x2                                    ; CODE XREF=copy+164
0000000000009bde         je         loc_9be6

0000000000009be0         cmp        r10d, 0x2
0000000000009be4         je         loc_9c55

                     loc_9be6:
0000000000009be6         mov        byte [rsp+0x18+var_11], 0x0                 ; CODE XREF=copy+78
0000000000009beb         push       r9
0000000000009bed         movzx      edx, dl
0000000000009bf0         push       r8
0000000000009bf2         mov        r9, rcx
0000000000009bf5         xor        r8d, r8d
0000000000009bf8         xor        ecx, ecx
0000000000009bfa         mov        qword [top_level_dst_name], rsi             ; top_level_dst_name
0000000000009c01         mov        qword [top_level_src_name], rdi             ; top_level_src_name
0000000000009c08         lea        rax, qword [rsp+0x28+var_11]
0000000000009c0d         push       rax
0000000000009c0e         push       0x1
0000000000009c10         call       copy_internal                               ; copy_internal
0000000000009c15         add        rsp, 0x20
0000000000009c19         mov        rsi, qword [rsp+0x18+var_10]
0000000000009c1e         xor        rsi, qword [fs:0x28]
0000000000009c27         jne        loc_9c74

0000000000009c29         add        rsp, 0x18
0000000000009c2d         ret
                        ; endp
0000000000009c2e         align      16

                     loc_9c30:
0000000000009c30         cmp        byte [rcx+0x2c], 0x0                        ; CODE XREF=copy+73
0000000000009c34         je         loc_9bdb

0000000000009c36         lea        rcx, qword [__PRETTY_FUNCTION__.7875]       ; argument "__function" for method j___assert_fail, "valid_options"
0000000000009c3d         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/copy.c"
0000000000009c44         lea        rdi, qword [aCohardlinkCosy]                ; argument "__assertion" for method j___assert_fail, "!(co->hard_link && co->symbolic_link)"
0000000000009c4b         mov        edx, 0xb8a                                  ; argument "__line" for method j___assert_fail
0000000000009c50         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_9c55:
0000000000009c55         lea        rcx, qword [__PRETTY_FUNCTION__.7875]       ; argument "__function" for method j___assert_fail, "valid_options", CODE XREF=copy+84
0000000000009c5c         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/copy.c"
0000000000009c63         lea        rdi, qword [aCoreflinkmodeR]                ; argument "__assertion" for method j___assert_fail, "! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)"
0000000000009c6a         mov        edx, 0xb8d                                  ; argument "__line" for method j___assert_fail
0000000000009c6f         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_9c74:
0000000000009c74         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=copy+151
                        ; endp

                     loc_9c79:
0000000000009c79         lea        rcx, qword [__PRETTY_FUNCTION__.7875]       ; argument "__function" for method j___assert_fail, "valid_options", CODE XREF=copy+63
0000000000009c80         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/copy.c"
0000000000009c87         lea        rdi, qword [aValidreflinkmo]                ; argument "__assertion" for method j___assert_fail, "VALID_REFLINK_MODE (co->reflink_mode)"
0000000000009c8e         mov        edx, 0xb89                                  ; argument "__line" for method j___assert_fail
0000000000009c93         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_9c98:
0000000000009c98         lea        rcx, qword [__PRETTY_FUNCTION__.7875]       ; argument "__function" for method j___assert_fail, "valid_options", CODE XREF=copy+49
0000000000009c9f         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/copy.c"
0000000000009ca6         lea        rdi, qword [aValidsparsemod]                ; argument "__assertion" for method j___assert_fail, "VALID_SPARSE_MODE (co->sparse_mode)"
0000000000009cad         mov        edx, 0xb88                                  ; argument "__line" for method j___assert_fail
0000000000009cb2         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_9cb7:
0000000000009cb7         lea        rcx, qword [__PRETTY_FUNCTION__.7875]       ; argument "__function" for method j___assert_fail, "valid_options", CODE XREF=copy+32
0000000000009cbe         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/copy.c"
0000000000009cc5         lea        rdi, qword [aValidbackuptyp]                ; argument "__assertion" for method j___assert_fail, "VALID_BACKUP_TYPE (co->backup_type)"
0000000000009ccc         mov        edx, 0xb87                                  ; argument "__line" for method j___assert_fail
0000000000009cd1         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_9cd6:
0000000000009cd6         lea        rcx, qword [__PRETTY_FUNCTION__.7875]       ; argument "__function" for method j___assert_fail, "valid_options", CODE XREF=copy+23
0000000000009cdd         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/copy.c"
0000000000009ce4         lea        rdi, qword [aCoNull]                        ; argument "__assertion" for method j___assert_fail, "co != NULL"
0000000000009ceb         mov        edx, 0xb86                                  ; argument "__line" for method j___assert_fail
0000000000009cf0         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000009cf5         align      256                                         ; End of unwind block (FDE at 0x16a24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     src_to_dest_hash:
0000000000009d00         mov        rax, qword [rdi]                            ; Begin of unwind block (FDE at 0x16a54), DATA XREF=hash_init+14
0000000000009d03         xor        edx, edx
0000000000009d05         div        rsi
0000000000009d08         mov        rax, rdx
0000000000009d0b         ret
                        ; endp
0000000000009d0c         align      16                                          ; End of unwind block (FDE at 0x16a54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     src_to_dest_compare:
0000000000009d10         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x16a68), DATA XREF=hash_init+7
0000000000009d12         mov        rdx, qword [rsi]
0000000000009d15         cmp        qword [rdi], rdx
0000000000009d18         je         loc_9d20

0000000000009d1a         ret
                        ; endp
0000000000009d1c         align      32

                     loc_9d20:
0000000000009d20         mov        rax, qword [rsi+8]                          ; CODE XREF=src_to_dest_compare+8
0000000000009d24         cmp        qword [rdi+8], rax
0000000000009d28         sete       al
0000000000009d2b         ret
                        ; endp
0000000000009d2c         align      16                                          ; End of unwind block (FDE at 0x16a68)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     src_to_dest_free:
0000000000009d30         push       rbx                                         ; Begin of unwind block (FDE at 0x16a7c), DATA XREF=hash_init
0000000000009d31         mov        rbx, rdi
0000000000009d34         mov        rdi, qword [rdi+0x10]
0000000000009d38         call       sub_2e10                                    ; sub_2e10
0000000000009d3d         mov        rdi, rbx
0000000000009d40         pop        rbx
0000000000009d41         jmp        sub_2e10                                    ; sub_2e10
                        ; endp
0000000000009d46         align      16                                          ; End of unwind block (FDE at 0x16a7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     forget_created:
0000000000009d50         push       rbx                                         ; Begin of unwind block (FDE at 0x16a98), CODE XREF=copy_internal+4557, copy_internal+6222
0000000000009d51         sub        rsp, 0x20
0000000000009d55         mov        qword [rsp+0x28+var_28], rdi
0000000000009d59         mov        rdi, qword [src_to_dest]                    ; src_to_dest
0000000000009d60         mov        qword [rsp+0x28+var_20], rsi
0000000000009d65         mov        rsi, rsp
0000000000009d68         mov        qword [rsp+0x28+var_18], 0x0
0000000000009d71         mov        rax, qword [fs:0x28]
0000000000009d7a         mov        qword [rsp+0x28+var_10], rax
0000000000009d7f         xor        eax, eax
0000000000009d81         call       hash_delete                                 ; hash_delete
0000000000009d86         test       rax, rax
0000000000009d89         je         loc_9d9f

0000000000009d8b         mov        rdi, qword [rax+0x10]
0000000000009d8f         mov        rbx, rax
0000000000009d92         call       sub_2e10                                    ; sub_2e10
0000000000009d97         mov        rdi, rbx
0000000000009d9a         call       sub_2e10                                    ; sub_2e10

                     loc_9d9f:
0000000000009d9f         mov        rax, qword [rsp+0x28+var_10]                ; CODE XREF=forget_created+57
0000000000009da4         xor        rax, qword [fs:0x28]
0000000000009dad         jne        loc_9db5

0000000000009daf         add        rsp, 0x20
0000000000009db3         pop        rbx
0000000000009db4         ret
                        ; endp

                     loc_9db5:
0000000000009db5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=forget_created+93
                        ; endp
0000000000009dba         align      64                                          ; End of unwind block (FDE at 0x16a98)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     src_to_dest_lookup:
0000000000009dc0         sub        rsp, 0x28                                   ; Begin of unwind block (FDE at 0x16abc), CODE XREF=copy_internal+6419, copy_internal+6518
0000000000009dc4         mov        qword [rsp+0x28+var_28], rdi
0000000000009dc8         mov        rdi, qword [src_to_dest]                    ; src_to_dest
0000000000009dcf         mov        qword [rsp+0x28+var_20], rsi
0000000000009dd4         mov        rsi, rsp
0000000000009dd7         mov        rax, qword [fs:0x28]
0000000000009de0         mov        qword [rsp+0x28+var_10], rax
0000000000009de5         xor        eax, eax
0000000000009de7         call       hash_lookup                                 ; hash_lookup
0000000000009dec         test       rax, rax
0000000000009def         je         loc_9e10

0000000000009df1         mov        rax, qword [rax+0x10]

                     loc_9df5:
0000000000009df5         mov        rdx, qword [rsp+0x28+var_10]                ; CODE XREF=src_to_dest_lookup+82
0000000000009dfa         xor        rdx, qword [fs:0x28]
0000000000009e03         jne        loc_9e14

0000000000009e05         add        rsp, 0x28
0000000000009e09         ret
                        ; endp
0000000000009e0a         align      16

                     loc_9e10:
0000000000009e10         xor        eax, eax                                    ; CODE XREF=src_to_dest_lookup+47
0000000000009e12         jmp        loc_9df5

                     loc_9e14:
0000000000009e14         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=src_to_dest_lookup+67
                        ; endp
0000000000009e19         align      32                                          ; End of unwind block (FDE at 0x16abc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     remember_copied:
0000000000009e20         push       r13                                         ; Begin of unwind block (FDE at 0x16ad8), CODE XREF=copy_internal+716, copy_internal+4209, copy_internal+5405, copy_internal+11009
0000000000009e22         push       r12
0000000000009e24         mov        r13, rdi
0000000000009e27         push       rbp
0000000000009e28         push       rbx
0000000000009e29         mov        edi, 0x18                                   ; argument #1 for method xmalloc
0000000000009e2e         mov        r12, rsi
0000000000009e31         mov        rbp, rdx
0000000000009e34         sub        rsp, 0x8
0000000000009e38         call       xmalloc                                     ; xmalloc
0000000000009e3d         mov        rdi, r13
0000000000009e40         mov        rbx, rax
0000000000009e43         call       xstrdup                                     ; xstrdup
0000000000009e48         mov        rdi, qword [src_to_dest]                    ; argument #1 for method hash_insert, src_to_dest
0000000000009e4f         mov        rsi, rbx                                    ; argument #2 for method hash_insert
0000000000009e52         mov        qword [rbx+0x10], rax
0000000000009e56         mov        qword [rbx], r12
0000000000009e59         mov        qword [rbx+8], rbp
0000000000009e5d         call       hash_insert                                 ; hash_insert
0000000000009e62         test       rax, rax
0000000000009e65         je         loc_9e94

0000000000009e67         cmp        rbx, rax
0000000000009e6a         mov        rbp, rax
0000000000009e6d         je         loc_9e90

0000000000009e6f         mov        rdi, qword [rbx+0x10]
0000000000009e73         call       sub_2e10                                    ; sub_2e10
0000000000009e78         mov        rdi, rbx
0000000000009e7b         call       sub_2e10                                    ; sub_2e10
0000000000009e80         mov        rax, qword [rbp+0x10]

                     loc_9e84:
0000000000009e84         add        rsp, 0x8                                    ; CODE XREF=remember_copied+114
0000000000009e88         pop        rbx
0000000000009e89         pop        rbp
0000000000009e8a         pop        r12
0000000000009e8c         pop        r13
0000000000009e8e         ret
                        ; endp
0000000000009e8f         align      16

                     loc_9e90:
0000000000009e90         xor        eax, eax                                    ; CODE XREF=remember_copied+77
0000000000009e92         jmp        loc_9e84

                     loc_9e94:
0000000000009e94         call       xalloc_die                                  ; xalloc_die, CODE XREF=remember_copied+69
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_9e99:
0000000000009e99         nop        dword [rax]                                 ; End of unwind block (FDE at 0x16ad8)
                     hash_init:
0000000000009ea0         lea        r8, qword [src_to_dest_free]                ; Begin of unwind block (FDE at 0x16b14), argument #5 for method hash_initialize, src_to_dest_free, CODE XREF=main+1500
0000000000009ea7         lea        rcx, qword [src_to_dest_compare]            ; argument #4 for method hash_initialize, src_to_dest_compare
0000000000009eae         lea        rdx, qword [src_to_dest_hash]               ; argument #3 for method hash_initialize, src_to_dest_hash
0000000000009eb5         sub        rsp, 0x8
0000000000009eb9         xor        esi, esi                                    ; argument #2 for method hash_initialize
0000000000009ebb         mov        edi, 0x67                                   ; argument #1 for method hash_initialize
0000000000009ec0         call       hash_initialize                             ; hash_initialize
0000000000009ec5         test       rax, rax
0000000000009ec8         mov        qword [src_to_dest], rax                    ; src_to_dest
0000000000009ecf         je         loc_9ed6

0000000000009ed1         add        rsp, 0x8
0000000000009ed5         ret
                        ; endp

                     loc_9ed6:
0000000000009ed6         call       xalloc_die                                  ; xalloc_die, CODE XREF=hash_init+47
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_9edb:
0000000000009edb         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x16b14)
                     forget_all:
0000000000009ee0         mov        rdi, qword [src_to_dest]                    ; Begin of unwind block (FDE at 0x16b30), src_to_dest
0000000000009ee7         jmp        hash_free                                   ; hash_free
                        ; endp
0000000000009eec         align      16                                          ; End of unwind block (FDE at 0x16b30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     extent_scan_init:
0000000000009ef0         mov        dword [rsi], edi                            ; Begin of unwind block (FDE at 0x16b44), CODE XREF=copy_internal+12452
0000000000009ef2         mov        qword [rsi+0x18], 0x0
0000000000009efa         mov        qword [rsi+0x28], 0x0
0000000000009f02         mov        qword [rsi+8], 0x0
0000000000009f0a         mov        byte [rsi+0x20], 0x0
0000000000009f0e         mov        byte [rsi+0x21], 0x0
0000000000009f12         mov        dword [rsi+0x10], 0x1
0000000000009f19         ret
                        ; endp
0000000000009f1a         align      32                                          ; End of unwind block (FDE at 0x16b44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_1018: int64_t, -4120
        ;    var_1028: int64_t, -4136
        ;    var_1030: int32_t, -4144
        ;    var_1034: int32_t, -4148
        ;    var_1038: int32_t, -4152
        ;    var_1040: int64_t, -4160
        ;    var_1048: int64_t, -4168


                     extent_scan_read:
0000000000009f20         push       r15                                         ; Begin of unwind block (FDE at 0x16b58), CODE XREF=copy_internal+12522
0000000000009f22         push       r14
0000000000009f24         xor        r15d, r15d
0000000000009f27         push       r13
0000000000009f29         push       r12
0000000000009f2b         mov        r14, rdi
0000000000009f2e         push       rbp
0000000000009f2f         push       rbx
0000000000009f30         movabs     r13, 0x7fffffffffffffff
0000000000009f3a         sub        rsp, 0x1018
0000000000009f41         mov        rbx, qword [rdi+0x28]
0000000000009f45         mov        rdx, qword [rdi+8]
0000000000009f49         mov        rbp, rsp
0000000000009f4c         mov        rax, qword [fs:0x28]
0000000000009f55         mov        qword [rsp+0x1048+var_40], rax
0000000000009f5d         xor        eax, eax
0000000000009f5f         lea        r12, qword [rbp+0x20]

                     loc_9f63:
0000000000009f63         xor        eax, eax                                    ; CODE XREF=extent_scan_read+698
0000000000009f65         mov        ecx, 0x200
0000000000009f6a         mov        rdi, rbp
0000000000009f6d         rep stosq  qword [rdi], rax
0000000000009f70         mov        eax, dword [r14+0x10]
0000000000009f74         mov        edi, dword [r14]                            ; argument "__fd" for method j_ioctl
0000000000009f77         mov        esi, 0xc020660b                             ; argument "__request" for method j_ioctl
0000000000009f7c         mov        qword [rsp+0x1048+var_1048], rdx
0000000000009f80         not        rdx
0000000000009f83         mov        dword [rsp+0x1048+var_1030], 0x48
0000000000009f8b         mov        qword [rsp+0x1048+var_1040], rdx
0000000000009f90         mov        rdx, rbp
0000000000009f93         mov        dword [rsp+0x1048+var_1038], eax
0000000000009f97         xor        eax, eax
0000000000009f99         call       j_ioctl                                     ; ioctl
0000000000009f9e         test       eax, eax
0000000000009fa0         js         loc_a070

0000000000009fa6         mov        eax, dword [rsp+0x1048+var_1034]
0000000000009faa         test       eax, eax
0000000000009fac         je         loc_a1e8

0000000000009fb2         mov        rcx, qword [r14+0x18]
0000000000009fb6         mov        rdx, rax
0000000000009fb9         not        rdx
0000000000009fbc         cmp        rcx, rdx
0000000000009fbf         ja         loc_a1fa

0000000000009fc5         mov        rdi, qword [r14+0x28]
0000000000009fc9         mov        edx, 0x18
0000000000009fce         add        rcx, rax
0000000000009fd1         mov        rax, rdx
0000000000009fd4         xor        esi, esi
0000000000009fd6         mov        qword [r14+0x18], rcx
0000000000009fda         sub        rbx, rdi
0000000000009fdd         mul        rcx
0000000000009fe0         jo         loc_a219

                     loc_9fe6:
0000000000009fe6         test       rax, rax                                    ; CODE XREF=extent_scan_read+766
0000000000009fe9         js         loc_a223

0000000000009fef         test       rsi, rsi
0000000000009ff2         jne        loc_a223

0000000000009ff8         lea        rsi, qword [rcx+rcx*2]
0000000000009ffc         shl        rsi, 0x3
000000000000a000         call       xrealloc                                    ; xrealloc, DATA XREF=writable_destination+6, copy_internal+407, copy_internal+978, copy_internal+5543, copy_internal+5600, copy_internal+5621, copy_internal+5754, copy_internal+5789, copy_internal+5860, copy_internal+6293, copy_internal+6357
000000000000a005         mov        r8d, dword [rsp+0x1048+var_1034]
000000000000a00a         add        rbx, rax
000000000000a00d         mov        qword [r14+0x28], rax
000000000000a011         test       r8d, r8d
000000000000a014         je         loc_a150

000000000000a01a         mov        rax, qword [rsp+0x1048+var_1018]
000000000000a01f         mov        rdx, qword [rsp+0x1048+var_1028]
000000000000a024         mov        rcx, r13
000000000000a027         sub        rcx, rax
000000000000a02a         cmp        rdx, rcx
000000000000a02d         ja         loc_a10a

000000000000a033         xor        ecx, ecx
000000000000a035         mov        rsi, r12

                     loc_a038:
000000000000a038         test       r15d, r15d                                  ; CODE XREF=extent_scan_read+484
000000000000a03b         je         loc_a0b0

000000000000a03d         mov        r9d, dword [rsi+0x28]
000000000000a041         mov        r10, qword [rbx+8]
000000000000a045         mov        rdi, qword [rbx]
000000000000a048         mov        r11d, r9d
000000000000a04b         add        rdi, r10
000000000000a04e         and        r11d, 0xfffffffe
000000000000a052         cmp        dword [rbx+0x10], r11d
000000000000a056         je         loc_a130

                     loc_a05c:
000000000000a05c         cmp        rdi, rdx                                    ; CODE XREF=extent_scan_read+531
000000000000a05f         jbe        loc_a0bd

                     loc_a061:
000000000000a061         mov        r10, rdi                                    ; CODE XREF=extent_scan_read+407
000000000000a064         sub        r10, rdx
000000000000a067         cmp        r10, rax
000000000000a06a         jae        loc_a188

                     loc_a070:
000000000000a070         xor        eax, eax                                    ; CODE XREF=extent_scan_read+128
000000000000a072         cmp        qword [r14+8], 0x0
000000000000a077         jne        loc_a080

000000000000a079         mov        byte [r14+0x20], 0x1
000000000000a07e         xor        eax, eax

                     loc_a080:
000000000000a080         mov        rbx, qword [rsp+0x1048+var_40]              ; CODE XREF=extent_scan_read+343, extent_scan_read+657, extent_scan_read+725
000000000000a088         xor        rbx, qword [fs:0x28]
000000000000a091         jne        loc_a228

000000000000a097         add        rsp, 0x1018
000000000000a09e         pop        rbx
000000000000a09f         pop        rbp
000000000000a0a0         pop        r12
000000000000a0a2         pop        r13
000000000000a0a4         pop        r14
000000000000a0a6         pop        r15
000000000000a0a8         ret
                        ; endp
000000000000a0a9         align      16

                     loc_a0b0:
000000000000a0b0         mov        rdi, qword [r14+8]                          ; CODE XREF=extent_scan_read+283
000000000000a0b4         cmp        rdi, rdx
000000000000a0b7         ja         loc_a061

000000000000a0b9         mov        r9d, dword [rsi+0x28]

                     loc_a0bd:
000000000000a0bd         mov        esi, r15d                                   ; CODE XREF=extent_scan_read+319
000000000000a0c0         add        r15d, 0x1
000000000000a0c4         lea        rdi, qword [rsi+rsi*2]
000000000000a0c8         mov        rsi, qword [r14+0x28]
000000000000a0cc         lea        rbx, qword [rsi+rdi*8]
000000000000a0d0         mov        qword [rbx], rdx
000000000000a0d3         mov        qword [rbx+8], rax
000000000000a0d7         mov        dword [rbx+0x10], r9d

                     loc_a0db:
000000000000a0db         add        ecx, 0x1                                    ; CODE XREF=extent_scan_read+629
000000000000a0de         cmp        ecx, r8d
000000000000a0e1         jae        loc_a150

                     loc_a0e3:
000000000000a0e3         mov        edx, ecx                                    ; CODE XREF=extent_scan_read+554
000000000000a0e5         mov        rdi, r13
000000000000a0e8         lea        rax, qword [rdx*8]
000000000000a0f0         sub        rax, rdx
000000000000a0f3         lea        rsi, qword [r12+rax*8]
000000000000a0f7         mov        rax, qword [rsi+0x10]
000000000000a0fb         mov        rdx, qword [rsi]
000000000000a0fe         sub        rdi, rax
000000000000a101         cmp        rdx, rdi
000000000000a104         jbe        loc_a038

                     loc_a10a:
000000000000a10a         lea        rcx, qword [__PRETTY_FUNCTION__.6956]       ; argument "__function" for method j___assert_fail, "extent_scan_read", CODE XREF=extent_scan_read+269
000000000000a111         lea        rsi, qword [aCoreutils831sr_15080]          ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/extent-scan.c"
000000000000a118         lea        rdi, qword [aFmextentsifelo]                ; argument "__assertion" for method j___assert_fail, "fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length"
000000000000a11f         mov        edx, 0x8d                                   ; argument "__line" for method j___assert_fail
000000000000a124         call       j___assert_fail                             ; __assert_fail
                        ; endp
000000000000a129         align      16

                     loc_a130:
000000000000a130         cmp        rdi, rdx                                    ; CODE XREF=extent_scan_read+310
000000000000a133         jne        loc_a05c

000000000000a139         add        ecx, 0x1
000000000000a13c         add        rax, r10
000000000000a13f         mov        dword [rbx+0x10], r9d
000000000000a143         cmp        ecx, r8d
000000000000a146         mov        qword [rbx+8], rax
000000000000a14a         jb         loc_a0e3

000000000000a14c         nop        dword [rax]

                     loc_a150:
000000000000a150         test       byte [rbx+0x10], 0x1                        ; CODE XREF=extent_scan_read+244, extent_scan_read+449
000000000000a154         jne        loc_a1a0

000000000000a156         cmp        r15d, 0x48
000000000000a15a         movzx      eax, byte [r14+0x21]
000000000000a15f         jbe        loc_a1c0

000000000000a161         test       al, al
000000000000a163         jne        loc_a1a5

000000000000a165         lea        eax, dword [r15-1]
000000000000a169         mov        rdx, qword [r14+0x28]
000000000000a16d         lea        rcx, qword [rax+rax*2]
000000000000a171         mov        qword [r14+0x18], rax
000000000000a175         mov        rax, qword [rdx+rcx*8-0x18]
000000000000a17a         add        rax, qword [rdx+rcx*8-0x10]
000000000000a17f         mov        qword [r14+8], rax
000000000000a183         jmp        loc_a1ac
000000000000a185         align      8

                     loc_a188:
000000000000a188         sub        rax, r10                                    ; CODE XREF=extent_scan_read+330
000000000000a18b         mov        qword [rsi], rdi
000000000000a18e         sub        ecx, 0x1
000000000000a191         mov        qword [rsi+0x10], rax
000000000000a195         jmp        loc_a0db
000000000000a19a         align      32

                     loc_a1a0:
000000000000a1a0         mov        byte [r14+0x21], 0x1                        ; CODE XREF=extent_scan_read+564

                     loc_a1a5:
000000000000a1a5         mov        eax, r15d                                   ; CODE XREF=extent_scan_read+579
000000000000a1a8         mov        qword [r14+0x18], rax

                     loc_a1ac:
000000000000a1ac         mov        eax, 0x1                                    ; CODE XREF=extent_scan_read+611, extent_scan_read+681, extent_scan_read+704
000000000000a1b1         jmp        loc_a080
000000000000a1b6         align      64

                     loc_a1c0:
000000000000a1c0         mov        ecx, r15d                                   ; CODE XREF=extent_scan_read+575
000000000000a1c3         test       al, al
000000000000a1c5         mov        qword [r14+0x18], rcx
000000000000a1c9         jne        loc_a1ac

000000000000a1cb         mov        rdx, qword [rbx+8]
000000000000a1cf         add        rdx, qword [rbx]
000000000000a1d2         cmp        r15d, 0x47
000000000000a1d6         mov        qword [r14+8], rdx
000000000000a1da         jbe        loc_9f63

000000000000a1e0         jmp        loc_a1ac
000000000000a1e2         align      8

                     loc_a1e8:
000000000000a1e8         cmp        qword [r14+8], 0x0                          ; CODE XREF=extent_scan_read+140
000000000000a1ed         mov        byte [r14+0x21], 0x1
000000000000a1f2         setne      al
000000000000a1f5         jmp        loc_a080

                     loc_a1fa:
000000000000a1fa         lea        rcx, qword [__PRETTY_FUNCTION__.6956]       ; argument "__function" for method j___assert_fail, "extent_scan_read", CODE XREF=extent_scan_read+159
000000000000a201         lea        rsi, qword [aCoreutils831sr_15080]          ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/extent-scan.c"
000000000000a208         lea        rdi, qword [aScaneicountSiz]                ; argument "__assertion" for method j___assert_fail, "scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents"
000000000000a20f         mov        edx, 0x7e                                   ; argument "__line" for method j___assert_fail
000000000000a214         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_a219:
000000000000a219         mov        esi, 0x1                                    ; CODE XREF=extent_scan_read+192
000000000000a21e         jmp        loc_9fe6

                     loc_a223:
000000000000a223         call       xalloc_die                                  ; xalloc_die, CODE XREF=extent_scan_read+201, extent_scan_read+210
                        ; endp

                     loc_a228:
000000000000a228         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=extent_scan_read+369
                        ; endp
000000000000a22d         align      16                                          ; End of unwind block (FDE at 0x16b58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_link:
000000000000a230         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x16bac), DATA XREF=force_linkat+113
000000000000a233         mov        rcx, rdi                                    ; argument "__to" for method j_linkat
000000000000a236         mov        edx, dword [rsi+0x10]                       ; argument "__tofd" for method j_linkat
000000000000a239         mov        r8d, dword [rax+0x14]                       ; argument "__flags" for method j_linkat
000000000000a23d         mov        rsi, qword [rsi+8]                          ; argument "__from" for method j_linkat
000000000000a241         mov        edi, dword [rax]                            ; argument "__fromfd" for method j_linkat
000000000000a243         jmp        j_linkat                                    ; linkat
                        ; endp
000000000000a248         align      16                                          ; End of unwind block (FDE at 0x16bac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     samedir_template:
000000000000a250         push       r12                                         ; Begin of unwind block (FDE at 0x16bc0), CODE XREF=force_linkat+91, force_symlinkat+73
000000000000a252         push       rbp
000000000000a253         mov        rbp, rdi
000000000000a256         push       rbx
000000000000a257         mov        r12, rsi
000000000000a25a         call       last_component                              ; last_component
000000000000a25f         sub        rax, rbp
000000000000a262         lea        rdi, qword [rax+9]
000000000000a266         mov        rbx, rax
000000000000a269         cmp        rdi, 0x100
000000000000a270         jbe        loc_a281

000000000000a272         call       j_malloc                                    ; malloc
000000000000a277         mov        r12, rax
000000000000a27a         xor        eax, eax
000000000000a27c         test       r12, r12
000000000000a27f         je         loc_a2a3

                     loc_a281:
000000000000a281         mov        rdx, rbx                                    ; argument "__n" for method j_mempcpy, CODE XREF=samedir_template+32
000000000000a284         mov        rsi, rbp                                    ; argument "__src" for method j_mempcpy
000000000000a287         mov        rdi, r12                                    ; argument "__dest" for method j_mempcpy
000000000000a28a         call       j_mempcpy                                   ; mempcpy
000000000000a28f         movabs     rcx, 0x5858585858587543
000000000000a299         mov        byte [rax+8], 0x0
000000000000a29d         mov        qword [rax], rcx
000000000000a2a0         mov        rax, r12

                     loc_a2a3:
000000000000a2a3         pop        rbx                                         ; CODE XREF=samedir_template+47
000000000000a2a4         pop        rbp
000000000000a2a5         pop        r12
000000000000a2a7         ret
                        ; endp
000000000000a2a8         align      16                                          ; End of unwind block (FDE at 0x16bc0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_symlink:
000000000000a2b0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x16bec), DATA XREF=force_symlinkat+95
000000000000a2b3         mov        rdx, rdi                                    ; argument "__to" for method j_symlinkat
000000000000a2b6         mov        esi, dword [rsi+8]                          ; argument "__tofd" for method j_symlinkat
000000000000a2b9         mov        rdi, qword [rax]                            ; argument "__from" for method j_symlinkat
000000000000a2bc         jmp        j_symlinkat                                 ; symlinkat
                        ; endp
000000000000a2c1         align      16                                          ; End of unwind block (FDE at 0x16bec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_148: int8_t, -328
        ;    var_154: int32_t, -340
        ;    var_158: int32_t, -344
        ;    var_160: int64_t, -352
        ;    var_168: int32_t, -360
        ;    var_16C: int32_t, -364
        ;    var_178: int64_t, -376


                     force_linkat:
000000000000a2d0         push       r15                                         ; Begin of unwind block (FDE at 0x16c00), CODE XREF=create_hard_link+52
000000000000a2d2         push       r14
000000000000a2d4         mov        r14d, edi
000000000000a2d7         push       r13
000000000000a2d9         push       r12
000000000000a2db         mov        r13, rsi
000000000000a2de         push       rbp
000000000000a2df         push       rbx
000000000000a2e0         mov        rbx, rcx
000000000000a2e3         mov        ebp, edx
000000000000a2e5         mov        r12d, r8d
000000000000a2e8         sub        rsp, 0x148
000000000000a2ef         mov        ecx, dword [rsp+0x178+arg_0]
000000000000a2f6         mov        rax, qword [fs:0x28]
000000000000a2ff         mov        qword [rsp+0x178+var_40], rax
000000000000a307         xor        eax, eax
000000000000a309         test       ecx, ecx
000000000000a30b         js         loc_a3c0

                     loc_a311:
000000000000a311         cmp        r9b, 0x1                                    ; CODE XREF=force_linkat+269
000000000000a315         jne        loc_a390

000000000000a317         cmp        ecx, 0x11
000000000000a31a         jne        loc_a390

000000000000a31c         lea        rax, qword [rsp+0x178+var_148]
000000000000a321         mov        rdi, rbx
000000000000a324         mov        rsi, rax
000000000000a327         mov        qword [rsp+0x178+var_178], rax
000000000000a32b         call       samedir_template                            ; samedir_template
000000000000a330         test       rax, rax
000000000000a333         mov        r15, rax
000000000000a336         je         loc_a420

000000000000a33c         lea        rdx, qword [rsp+0x178+var_168]
000000000000a341         lea        rcx, qword [try_link]                       ; try_link
000000000000a348         xor        esi, esi
000000000000a34a         mov        r8d, 0x6
000000000000a350         mov        rdi, rax
000000000000a353         mov        dword [rsp+0x178+var_168], r14d
000000000000a358         mov        qword [rsp+0x178+var_160], r13
000000000000a35d         mov        dword [rsp+0x178+var_158], ebp
000000000000a361         mov        dword [rsp+0x178+var_154], r12d
000000000000a366         call       try_tempname_len                            ; try_tempname_len
000000000000a36b         test       eax, eax
000000000000a36d         je         loc_a3e8

000000000000a36f         call       j___errno_location                          ; __errno_location
000000000000a374         mov        ecx, dword [rax]

                     loc_a376:
000000000000a376         cmp        r15, qword [rsp+0x178+var_178]              ; CODE XREF=force_linkat+331
000000000000a37a         je         loc_a390

000000000000a37c         mov        rdi, r15
000000000000a37f         mov        dword [rsp+0x178+var_178], ecx
000000000000a382         call       sub_2e10                                    ; sub_2e10
000000000000a387         mov        ecx, dword [rsp+0x178+var_178]
000000000000a38a         nop        word [rax+rax]

                     loc_a390:
000000000000a390         mov        rbx, qword [rsp+0x178+var_40]               ; CODE XREF=force_linkat+69, force_linkat+74, force_linkat+170, force_linkat+256, force_linkat+343
000000000000a398         xor        rbx, qword [fs:0x28]
000000000000a3a1         mov        eax, ecx
000000000000a3a3         jne        loc_a42c

000000000000a3a9         add        rsp, 0x148
000000000000a3b0         pop        rbx
000000000000a3b1         pop        rbp
000000000000a3b2         pop        r12
000000000000a3b4         pop        r13
000000000000a3b6         pop        r14
000000000000a3b8         pop        r15
000000000000a3ba         ret
                        ; endp
000000000000a3bb         align      64

                     loc_a3c0:
000000000000a3c0         mov        rcx, rbx                                    ; argument "__to" for method j_linkat, CODE XREF=force_linkat+59
000000000000a3c3         mov        dword [rsp+0x178+var_178], r9d
000000000000a3c7         call       j_linkat                                    ; linkat
000000000000a3cc         test       eax, eax
000000000000a3ce         mov        ecx, eax
000000000000a3d0         je         loc_a390

000000000000a3d2         call       j___errno_location                          ; __errno_location
000000000000a3d7         mov        r9d, dword [rsp+0x178+var_178]
000000000000a3db         mov        ecx, dword [rax]
000000000000a3dd         jmp        loc_a311
000000000000a3e2         align      8

                     loc_a3e8:
000000000000a3e8         mov        rcx, rbx                                    ; argument "__new" for method j_renameat, CODE XREF=force_linkat+157
000000000000a3eb         mov        edx, ebp                                    ; argument "__newfd" for method j_renameat
000000000000a3ed         mov        rsi, r15                                    ; argument "__old" for method j_renameat
000000000000a3f0         mov        edi, ebp                                    ; argument "__oldfd" for method j_renameat
000000000000a3f2         call       j_renameat                                  ; renameat
000000000000a3f7         test       eax, eax
000000000000a3f9         mov        ecx, 0xffffffff
000000000000a3fe         je         loc_a407

000000000000a400         call       j___errno_location                          ; __errno_location
000000000000a405         mov        ecx, dword [rax]

                     loc_a407:
000000000000a407         xor        edx, edx                                    ; argument "__flag" for method j_unlinkat, CODE XREF=force_linkat+302
000000000000a409         mov        rsi, r15                                    ; argument "__name" for method j_unlinkat
000000000000a40c         mov        edi, ebp                                    ; argument "__fd" for method j_unlinkat
000000000000a40e         mov        dword [rsp+0x178+var_16C], ecx
000000000000a412         call       j_unlinkat                                  ; unlinkat
000000000000a417         mov        ecx, dword [rsp+0x178+var_16C]
000000000000a41b         jmp        loc_a376

                     loc_a420:
000000000000a420         call       j___errno_location                          ; __errno_location, CODE XREF=force_linkat+102
000000000000a425         mov        ecx, dword [rax]
000000000000a427         jmp        loc_a390

                     loc_a42c:
000000000000a42c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=force_linkat+211
                        ; endp
000000000000a431         align      64                                          ; End of unwind block (FDE at 0x16c00)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_138: int8_t, -312
        ;    var_140: int32_t, -320
        ;    var_148: int64_t, -328
        ;    var_14C: int32_t, -332


                     force_symlinkat:
000000000000a440         push       r14                                         ; Begin of unwind block (FDE at 0x16c4c), CODE XREF=copy_internal+3873, copy_internal+11416
000000000000a442         push       r13
000000000000a444         push       r12
000000000000a446         push       rbp
000000000000a447         mov        r12, rdi
000000000000a44a         push       rbx
000000000000a44b         mov        ebp, esi
000000000000a44d         mov        rbx, rdx
000000000000a450         sub        rsp, 0x130
000000000000a457         mov        rax, qword [fs:0x28]
000000000000a460         mov        qword [rsp+0x158+var_30], rax
000000000000a468         xor        eax, eax
000000000000a46a         test       r8d, r8d
000000000000a46d         js         loc_a518

                     loc_a473:
000000000000a473         cmp        cl, 0x1                                     ; CODE XREF=force_symlinkat+244
000000000000a476         jne        loc_a4e8

000000000000a478         cmp        r8d, 0x11
000000000000a47c         jne        loc_a4e8

000000000000a47e         lea        r14, qword [rsp+0x158+var_138]
000000000000a483         mov        rdi, rbx
000000000000a486         mov        rsi, r14
000000000000a489         call       samedir_template                            ; samedir_template
000000000000a48e         test       rax, rax
000000000000a491         mov        r13, rax
000000000000a494         je         loc_a580

000000000000a49a         lea        rdx, qword [rsp+0x158+var_148]
000000000000a49f         lea        rcx, qword [try_symlink]                    ; try_symlink
000000000000a4a6         xor        esi, esi
000000000000a4a8         mov        r8d, 0x6
000000000000a4ae         mov        rdi, rax
000000000000a4b1         mov        qword [rsp+0x158+var_148], r12
000000000000a4b6         mov        dword [rsp+0x158+var_140], ebp
000000000000a4ba         call       try_tempname_len                            ; try_tempname_len
000000000000a4bf         test       eax, eax
000000000000a4c1         je         loc_a540

000000000000a4c3         call       j___errno_location                          ; __errno_location
000000000000a4c8         mov        r8d, dword [rax]

                     loc_a4cb:
000000000000a4cb         cmp        r13, r14                                    ; CODE XREF=force_symlinkat+279, force_symlinkat+315
000000000000a4ce         je         loc_a4e8

000000000000a4d0         mov        rdi, r13
000000000000a4d3         mov        dword [rsp+0x158+var_14C], r8d
000000000000a4d8         call       sub_2e10                                    ; sub_2e10
000000000000a4dd         mov        r8d, dword [rsp+0x158+var_14C]
000000000000a4e2         nop        word [rax+rax]

                     loc_a4e8:
000000000000a4e8         mov        rbx, qword [rsp+0x158+var_30]               ; CODE XREF=force_symlinkat+54, force_symlinkat+60, force_symlinkat+142, force_symlinkat+230, force_symlinkat+328
000000000000a4f0         xor        rbx, qword [fs:0x28]
000000000000a4f9         mov        eax, r8d
000000000000a4fc         jne        loc_a58d

000000000000a502         add        rsp, 0x130
000000000000a509         pop        rbx
000000000000a50a         pop        rbp
000000000000a50b         pop        r12
000000000000a50d         pop        r13
000000000000a50f         pop        r14
000000000000a511         ret
                        ; endp
000000000000a512         align      8

                     loc_a518:
000000000000a518         mov        dword [rsp+0x158+var_14C], ecx              ; CODE XREF=force_symlinkat+45
000000000000a51c         call       j_symlinkat                                 ; symlinkat
000000000000a521         test       eax, eax
000000000000a523         mov        r8d, eax
000000000000a526         je         loc_a4e8

000000000000a528         call       j___errno_location                          ; __errno_location
000000000000a52d         mov        ecx, dword [rsp+0x158+var_14C]
000000000000a531         mov        r8d, dword [rax]
000000000000a534         jmp        loc_a473
000000000000a539         align      64

                     loc_a540:
000000000000a540         mov        rcx, rbx                                    ; argument "__new" for method j_renameat, CODE XREF=force_symlinkat+129
000000000000a543         mov        edx, ebp                                    ; argument "__newfd" for method j_renameat
000000000000a545         mov        rsi, r13                                    ; argument "__old" for method j_renameat
000000000000a548         mov        edi, ebp                                    ; argument "__oldfd" for method j_renameat
000000000000a54a         call       j_renameat                                  ; renameat
000000000000a54f         test       eax, eax
000000000000a551         mov        r8d, 0xffffffff
000000000000a557         je         loc_a4cb

000000000000a55d         call       j___errno_location                          ; __errno_location
000000000000a562         mov        r8d, dword [rax]
000000000000a565         xor        edx, edx                                    ; argument "__flag" for method j_unlinkat
000000000000a567         mov        rsi, r13                                    ; argument "__name" for method j_unlinkat
000000000000a56a         mov        edi, ebp                                    ; argument "__fd" for method j_unlinkat
000000000000a56c         mov        dword [rsp+0x158+var_14C], r8d
000000000000a571         call       j_unlinkat                                  ; unlinkat
000000000000a576         mov        r8d, dword [rsp+0x158+var_14C]
000000000000a57b         jmp        loc_a4cb

                     loc_a580:
000000000000a580         call       j___errno_location                          ; __errno_location, CODE XREF=force_symlinkat+84
000000000000a585         mov        r8d, dword [rax]
000000000000a588         jmp        loc_a4e8

                     loc_a58d:
000000000000a58d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=force_symlinkat+188
                        ; endp
000000000000a592         align      32                                          ; End of unwind block (FDE at 0x16c4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     copy_acl:
000000000000a5a0         push       r12                                         ; Begin of unwind block (FDE at 0x16c94), CODE XREF=re_protect+418, copy_internal+10252, copy_internal+14654
000000000000a5a2         push       rbp
000000000000a5a3         mov        r12, rdi
000000000000a5a6         push       rbx
000000000000a5a7         mov        rbp, rdx
000000000000a5aa         call       qcopy_acl                                   ; qcopy_acl
000000000000a5af         cmp        eax, 0xfffffffe
000000000000a5b2         mov        ebx, eax
000000000000a5b4         je         loc_a600

000000000000a5b6         cmp        eax, 0xffffffff
000000000000a5b9         jne        loc_a5f2

000000000000a5bb         mov        rdi, rbp
000000000000a5be         call       quote                                       ; quote
000000000000a5c3         lea        rsi, qword [aPreservingPerm]                ; argument "msgid" for method j_dcgettext, "preserving permissions for %s"
000000000000a5ca         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000a5cf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a5d1         mov        r12, rax
000000000000a5d4         call       j_dcgettext                                 ; dcgettext
000000000000a5d9         mov        rbp, rax
000000000000a5dc         call       j___errno_location                          ; __errno_location
000000000000a5e1         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000a5e3         mov        rcx, r12
000000000000a5e6         mov        rdx, rbp                                    ; argument "__format" for method j_error
000000000000a5e9         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000a5eb         xor        eax, eax
000000000000a5ed         call       j_error                                     ; error

                     loc_a5f2:
000000000000a5f2         mov        eax, ebx                                    ; CODE XREF=copy_acl+25
000000000000a5f4         pop        rbx
000000000000a5f5         pop        rbp
000000000000a5f6         pop        r12
000000000000a5f8         ret
                        ; endp
000000000000a5f9         align      512

                     loc_a600:
000000000000a600         mov        rdi, r12                                    ; CODE XREF=copy_acl+20
000000000000a603         call       quote                                       ; quote
000000000000a608         mov        rbp, rax
000000000000a60b         call       j___errno_location                          ; __errno_location
000000000000a610         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000a612         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x1518d
000000000000a619         mov        rcx, rbp
000000000000a61c         xor        eax, eax
000000000000a61e         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000a620         call       j_error                                     ; error
000000000000a625         mov        eax, ebx
000000000000a627         pop        rbx
000000000000a628         pop        rbp
000000000000a629         pop        r12
000000000000a62b         ret
                        ; endp
000000000000a62c         align      16                                          ; End of unwind block (FDE at 0x16c94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_acl:
000000000000a630         push       r12                                         ; Begin of unwind block (FDE at 0x16ccc), CODE XREF=copy_internal+11108, copy_internal+16246, copy_internal+16626
000000000000a632         push       rbp
000000000000a633         mov        rbp, rdi
000000000000a636         push       rbx
000000000000a637         call       qset_acl                                    ; qset_acl
000000000000a63c         test       eax, eax
000000000000a63e         mov        ebx, eax
000000000000a640         je         loc_a679

000000000000a642         mov        rdi, rbp
000000000000a645         call       quote                                       ; quote
000000000000a64a         lea        rsi, qword [aSettingPermiss]                ; argument "msgid" for method j_dcgettext, "setting permissions for %s"
000000000000a651         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000a656         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a658         mov        r12, rax
000000000000a65b         call       j_dcgettext                                 ; dcgettext
000000000000a660         mov        rbp, rax
000000000000a663         call       j___errno_location                          ; __errno_location
000000000000a668         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000a66a         mov        rcx, r12
000000000000a66d         mov        rdx, rbp                                    ; argument "__format" for method j_error
000000000000a670         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000a672         xor        eax, eax
000000000000a674         call       j_error                                     ; error

                     loc_a679:
000000000000a679         mov        eax, ebx                                    ; CODE XREF=set_acl+16
000000000000a67b         pop        rbx
000000000000a67c         pop        rbp
000000000000a67d         pop        r12
000000000000a67f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     areadlink_with_size:
000000000000a680         push       r15                                         ; End of unwind block (FDE at 0x16ccc), Begin of unwind block (FDE at 0x16cfc), CODE XREF=copy_internal+11374, copy_internal+14553
000000000000a682         push       r14
000000000000a684         mov        eax, 0x401
000000000000a689         push       r13
000000000000a68b         push       r12
000000000000a68d         mov        r13, rdi
000000000000a690         push       rbp
000000000000a691         push       rbx
000000000000a692         lea        rbx, qword [rsi+1]
000000000000a696         movabs     r14, 0x3fffffffffffffff
000000000000a6a0         movabs     r15, 0x7ffffffffffffffe
000000000000a6aa         sub        rsp, 0x8
000000000000a6ae         cmp        rsi, 0x401
000000000000a6b5         cmovae     rbx, rax
000000000000a6b9         nop        dword [rax]

                     loc_a6c0:
000000000000a6c0         mov        rdi, rbx                                    ; argument "__size" for method j_malloc, CODE XREF=areadlink_with_size+175
000000000000a6c3         call       j_malloc                                    ; malloc
000000000000a6c8         test       rax, rax
000000000000a6cb         mov        rbp, rax
000000000000a6ce         je         loc_a70b

                     loc_a6d0:
000000000000a6d0         mov        rdx, rbx                                    ; argument "__len" for method j_readlink, CODE XREF=areadlink_with_size+137
000000000000a6d3         mov        rsi, rax                                    ; argument "__buf" for method j_readlink
000000000000a6d6         mov        rdi, r13                                    ; argument "__path" for method j_readlink
000000000000a6d9         call       j_readlink                                  ; readlink
000000000000a6de         test       rax, rax
000000000000a6e1         mov        r12, rax
000000000000a6e4         js         loc_a738

                     loc_a6e6:
000000000000a6e6         cmp        rbx, r12                                    ; CODE XREF=areadlink_with_size+192
000000000000a6e9         ja         loc_a750

000000000000a6eb         mov        rdi, rbp
000000000000a6ee         call       sub_2e10                                    ; sub_2e10
000000000000a6f3         cmp        rbx, r14
000000000000a6f6         ja         loc_a720

000000000000a6f8         add        rbx, rbx
000000000000a6fb         mov        rdi, rbx                                    ; argument "__size" for method j_malloc
000000000000a6fe         call       j_malloc                                    ; malloc
000000000000a703         test       rax, rax
000000000000a706         mov        rbp, rax
000000000000a709         jne        loc_a6d0

                     loc_a70b:
000000000000a70b         add        rsp, 0x8                                    ; CODE XREF=areadlink_with_size+78, areadlink_with_size+204, areadlink_with_size+214, areadlink_with_size+237
000000000000a70f         mov        rax, rbp
000000000000a712         pop        rbx
000000000000a713         pop        rbp
000000000000a714         pop        r12
000000000000a716         pop        r13
000000000000a718         pop        r14
000000000000a71a         pop        r15
000000000000a71c         ret
                        ; endp
000000000000a71d         align      32

                     loc_a720:
000000000000a720         cmp        rbx, r15                                    ; CODE XREF=areadlink_with_size+118
000000000000a723         ja         loc_a760

000000000000a725         movabs     rbx, 0x7fffffffffffffff
000000000000a72f         jmp        loc_a6c0
000000000000a731         align      8

                     loc_a738:
000000000000a738         call       j___errno_location                          ; __errno_location, CODE XREF=areadlink_with_size+100
000000000000a73d         cmp        dword [rax], 0x22
000000000000a740         je         loc_a6e6

000000000000a742         mov        rdi, rbp
000000000000a745         xor        ebp, ebp
000000000000a747         call       sub_2e10                                    ; sub_2e10
000000000000a74c         jmp        loc_a70b
000000000000a74e         align      16

                     loc_a750:
000000000000a750         mov        byte [rbp+r12], 0x0                         ; CODE XREF=areadlink_with_size+105
000000000000a756         jmp        loc_a70b
000000000000a758         align      32

                     loc_a760:
000000000000a760         call       j___errno_location                          ; __errno_location, CODE XREF=areadlink_with_size+163
000000000000a765         xor        ebp, ebp
000000000000a767         mov        dword [rax], 0xc
000000000000a76d         jmp        loc_a70b
000000000000a76f         align      16                                          ; End of unwind block (FDE at 0x16cfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __argmatch_die:
000000000000a770         mov        edi, 0x1                                    ; Begin of unwind block (FDE at 0x16d4c), argument #1 for method usage, DATA XREF=argmatch_die
000000000000a775         jmp        usage                                       ; usage
                        ; endp
000000000000a77a         align      128                                         ; End of unwind block (FDE at 0x16d4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_41: int8_t, -65
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     argmatch:
000000000000a780         push       r15                                         ; Begin of unwind block (FDE at 0x16d60), CODE XREF=__xargmatch_internal+44
000000000000a782         push       r14
000000000000a784         mov        r15, rsi
000000000000a787         push       r13
000000000000a789         push       r12
000000000000a78b         mov        r13, rcx
000000000000a78e         push       rbp
000000000000a78f         push       rbx
000000000000a790         mov        rbp, rdx
000000000000a793         sub        rsp, 0x28
000000000000a797         mov        qword [rsp+0x58+var_50], rdi
000000000000a79c         mov        qword [rsp+0x58+var_40], rdx
000000000000a7a1         call       j_strlen                                    ; strlen
000000000000a7a6         mov        r14, qword [r15]
000000000000a7a9         mov        qword [rsp+0x58+var_58], 0xffffffffffffffff
000000000000a7b1         test       r14, r14
000000000000a7b4         je         loc_a86d

000000000000a7ba         mov        r12, rax
000000000000a7bd         mov        byte [rsp+0x58+var_41], 0x0
000000000000a7c2         xor        ebx, ebx
000000000000a7c4         jmp        loc_a817
000000000000a7c6         align      16

                     loc_a7d0:
000000000000a7d0         mov        rax, qword [rsp+0x58+var_40]                ; CODE XREF=argmatch+189
000000000000a7d5         test       rax, rax
000000000000a7d8         je         loc_a880

000000000000a7de         mov        rdi, qword [rsp+0x58+var_58]
000000000000a7e2         mov        rdx, r13                                    ; argument "__n" for method j_memcmp
000000000000a7e5         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
000000000000a7e8         imul       rdi, r13
000000000000a7ec         add        rdi, rax                                    ; argument "__s1" for method j_memcmp
000000000000a7ef         call       j_memcmp                                    ; memcmp
000000000000a7f4         test       eax, eax
000000000000a7f6         movzx      eax, byte [rsp+0x58+var_41]
000000000000a7fb         mov        ecx, 0x1
000000000000a800         cmovne     eax, ecx
000000000000a803         mov        byte [rsp+0x58+var_41], al

                     loc_a807:
000000000000a807         add        rbx, 0x1                                    ; CODE XREF=argmatch+169, argmatch+261
000000000000a80b         add        rbp, r13
000000000000a80e         mov        r14, qword [r15+rbx*8]
000000000000a812         test       r14, r14
000000000000a815         je         loc_a858

                     loc_a817:
000000000000a817         mov        rsi, qword [rsp+0x58+var_50]                ; argument "__s2" for method j_strncmp, CODE XREF=argmatch+68, argmatch+209
000000000000a81c         mov        rdx, r12                                    ; argument "__n" for method j_strncmp
000000000000a81f         mov        rdi, r14                                    ; argument "__s1" for method j_strncmp
000000000000a822         call       j_strncmp                                   ; strncmp
000000000000a827         test       eax, eax
000000000000a829         jne        loc_a807

000000000000a82b         mov        rdi, r14                                    ; argument "__s" for method j_strlen
000000000000a82e         call       j_strlen                                    ; strlen
000000000000a833         cmp        rax, r12
000000000000a836         je         loc_a890

000000000000a838         cmp        qword [rsp+0x58+var_58], 0xffffffffffffffff
000000000000a83d         jne        loc_a7d0

000000000000a83f         mov        qword [rsp+0x58+var_58], rbx
000000000000a843         add        rbx, 0x1
000000000000a847         add        rbp, r13
000000000000a84a         mov        r14, qword [r15+rbx*8]
000000000000a84e         test       r14, r14
000000000000a851         jne        loc_a817

000000000000a853         nop        dword [rax+rax]

                     loc_a858:
000000000000a858         cmp        byte [rsp+0x58+var_41], 0x0                 ; CODE XREF=argmatch+149
000000000000a85d         mov        rax, 0xfffffffffffffffe
000000000000a864         cmove      rax, qword [rsp+0x58+var_58]
000000000000a869         mov        qword [rsp+0x58+var_58], rax

                     loc_a86d:
000000000000a86d         mov        rax, qword [rsp+0x58+var_58]                ; CODE XREF=argmatch+52, argmatch+276
000000000000a871         add        rsp, 0x28
000000000000a875         pop        rbx
000000000000a876         pop        rbp
000000000000a877         pop        r12
000000000000a879         pop        r13
000000000000a87b         pop        r14
000000000000a87d         pop        r15
000000000000a87f         ret
                        ; endp

                     loc_a880:
000000000000a880         mov        byte [rsp+0x58+var_41], 0x1                 ; CODE XREF=argmatch+88
000000000000a885         jmp        loc_a807
000000000000a887         align      16

                     loc_a890:
000000000000a890         mov        qword [rsp+0x58+var_58], rbx                ; CODE XREF=argmatch+182
000000000000a894         jmp        loc_a86d
000000000000a896         align      32                                          ; End of unwind block (FDE at 0x16d60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_invalid:
000000000000a8a0         cmp        rdx, 0xffffffffffffffff                     ; Begin of unwind block (FDE at 0x16dac), CODE XREF=__xargmatch_internal+78
000000000000a8a4         push       r12
000000000000a8a6         mov        edx, 0x5
000000000000a8ab         push       rbp
000000000000a8ac         mov        r12, rsi
000000000000a8af         push       rbx
000000000000a8b0         mov        rbp, rdi
000000000000a8b3         je         loc_a900

000000000000a8b5         lea        rsi, qword [aAmbiguousArgum]                ; argument "msgid" for method j_dcgettext, "ambiguous argument %s for %s"
000000000000a8bc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a8be         call       j_dcgettext                                 ; dcgettext
000000000000a8c3         mov        rbx, rax

                     loc_a8c6:
000000000000a8c6         mov        rsi, rbp                                    ; CODE XREF=argmatch_invalid+113
000000000000a8c9         mov        edi, 0x1
000000000000a8ce         call       quote_n                                     ; quote_n
000000000000a8d3         mov        rdx, r12
000000000000a8d6         mov        rbp, rax
000000000000a8d9         mov        esi, 0x8
000000000000a8de         xor        edi, edi
000000000000a8e0         call       quotearg_n_style                            ; quotearg_n_style
000000000000a8e5         mov        r8, rbp
000000000000a8e8         mov        rdx, rbx                                    ; argument "__format" for method j_error
000000000000a8eb         mov        rcx, rax
000000000000a8ee         pop        rbx
000000000000a8ef         pop        rbp
000000000000a8f0         pop        r12
000000000000a8f2         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000a8f4         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000a8f6         xor        eax, eax
000000000000a8f8         jmp        j_error                                     ; error
                        ; endp
000000000000a8fd         align      256

                     loc_a900:
000000000000a900         lea        rsi, qword [aInvalidArgumen]                ; argument "msgid" for method j_dcgettext, "invalid argument %s for %s", CODE XREF=argmatch_invalid+19
000000000000a907         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a909         call       j_dcgettext                                 ; dcgettext
000000000000a90e         mov        rbx, rax
000000000000a911         jmp        loc_a8c6
000000000000a913         align      32                                          ; End of unwind block (FDE at 0x16dac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_valid:
000000000000a920         push       r15                                         ; Begin of unwind block (FDE at 0x16dd8), CODE XREF=__xargmatch_internal+92
000000000000a922         push       r14
000000000000a924         mov        r14, rdi
000000000000a927         push       r13
000000000000a929         push       r12
000000000000a92b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a92d         push       rbp
000000000000a92e         push       rbx
000000000000a92f         mov        rbp, rsi
000000000000a932         lea        rsi, qword [aValidArguments]                ; argument "msgid" for method j_dcgettext, "Valid arguments are:"
000000000000a939         mov        r12, rdx
000000000000a93c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000a941         sub        rsp, 0x8
000000000000a945         mov        rbx, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
000000000000a94c         call       j_dcgettext                                 ; dcgettext
000000000000a951         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000a954         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000a957         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000a95c         mov        r15, qword [r14]
000000000000a95f         test       r15, r15
000000000000a962         je         loc_a9f8

000000000000a968         xor        r13d, r13d
000000000000a96b         xor        ebx, ebx
000000000000a96d         jmp        loc_a9a8
000000000000a96f         align      16

                     loc_a970:
000000000000a970         mov        rdi, r15                                    ; CODE XREF=argmatch_valid+139, argmatch_valid+157
000000000000a973         add        rbx, 0x1
000000000000a977         mov        r13, rbp
000000000000a97a         call       quote                                       ; quote
000000000000a97f         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
000000000000a986         lea        rdx, qword [aNS]                            ; "\\n  - %s"
000000000000a98d         mov        rcx, rax
000000000000a990         mov        esi, 0x1
000000000000a995         xor        eax, eax
000000000000a997         add        rbp, r12
000000000000a99a         call       j___fprintf_chk                             ; __fprintf_chk
000000000000a99f         mov        r15, qword [r14+rbx*8]
000000000000a9a3         test       r15, r15
000000000000a9a6         je         loc_a9f8

                     loc_a9a8:
000000000000a9a8         test       rbx, rbx                                    ; CODE XREF=argmatch_valid+77, argmatch_valid+210
000000000000a9ab         je         loc_a970

000000000000a9ad         mov        rdx, r12                                    ; argument "__n" for method j_memcmp
000000000000a9b0         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
000000000000a9b3         mov        rdi, r13                                    ; argument "__s1" for method j_memcmp
000000000000a9b6         call       j_memcmp                                    ; memcmp
000000000000a9bb         test       eax, eax
000000000000a9bd         jne        loc_a970

000000000000a9bf         mov        rdi, r15
000000000000a9c2         add        rbx, 0x1
000000000000a9c6         add        rbp, r12
000000000000a9c9         call       quote                                       ; quote
000000000000a9ce         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
000000000000a9d5         lea        rdx, qword [aNS+8]                          ; 0x1518b
000000000000a9dc         mov        rcx, rax
000000000000a9df         mov        esi, 0x1
000000000000a9e4         xor        eax, eax
000000000000a9e6         call       j___fprintf_chk                             ; __fprintf_chk
000000000000a9eb         mov        r15, qword [r14+rbx*8]
000000000000a9ef         test       r15, r15
000000000000a9f2         jne        loc_a9a8

000000000000a9f4         nop        dword [rax]

                     loc_a9f8:
000000000000a9f8         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=argmatch_valid+66, argmatch_valid+134
000000000000a9ff         mov        rax, qword [rdi+0x28]
000000000000aa03         cmp        rax, qword [rdi+0x30]
000000000000aa07         jae        loc_aa28

000000000000aa09         lea        rdx, qword [rax+1]
000000000000aa0d         mov        qword [rdi+0x28], rdx
000000000000aa11         mov        byte [rax], 0xa
000000000000aa14         add        rsp, 0x8
000000000000aa18         pop        rbx
000000000000aa19         pop        rbp
000000000000aa1a         pop        r12
000000000000aa1c         pop        r13
000000000000aa1e         pop        r14
000000000000aa20         pop        r15
000000000000aa22         ret
                        ; endp
000000000000aa23         align      8

                     loc_aa28:
000000000000aa28         add        rsp, 0x8                                    ; CODE XREF=argmatch_valid+231
000000000000aa2c         mov        esi, 0xa                                    ; argument #2 for method j___overflow
000000000000aa31         pop        rbx
000000000000aa32         pop        rbp
000000000000aa33         pop        r12
000000000000aa35         pop        r13
000000000000aa37         pop        r14
000000000000aa39         pop        r15
000000000000aa3b         jmp        j___overflow                                ; __overflow
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __xargmatch_internal:
000000000000aa40         push       r15                                         ; End of unwind block (FDE at 0x16dd8), Begin of unwind block (FDE at 0x16e38), CODE XREF=main+922, main+996, decode_preserve_arg+142, get_version.part.0+31
000000000000aa42         push       r14
000000000000aa44         mov        r14, rdi
000000000000aa47         push       r13
000000000000aa49         push       r12
000000000000aa4b         mov        r12, rsi
000000000000aa4e         push       rbp
000000000000aa4f         push       rbx
000000000000aa50         mov        rbp, rcx
000000000000aa53         mov        rbx, rdx
000000000000aa56         mov        rcx, r8
000000000000aa59         mov        rdx, rbp
000000000000aa5c         sub        rsp, 0x8
000000000000aa60         mov        rsi, rbx
000000000000aa63         mov        rdi, r12
000000000000aa66         mov        r15, r8
000000000000aa69         mov        r13, r9
000000000000aa6c         call       argmatch                                    ; argmatch
000000000000aa71         test       rax, rax
000000000000aa74         js         loc_aa85

                     loc_aa76:
000000000000aa76         add        rsp, 0x8                                    ; CODE XREF=__xargmatch_internal+107
000000000000aa7a         pop        rbx
000000000000aa7b         pop        rbp
000000000000aa7c         pop        r12
000000000000aa7e         pop        r13
000000000000aa80         pop        r14
000000000000aa82         pop        r15
000000000000aa84         ret
                        ; endp

                     loc_aa85:
000000000000aa85         mov        rdx, rax                                    ; CODE XREF=__xargmatch_internal+52
000000000000aa88         mov        rsi, r12
000000000000aa8b         mov        rdi, r14
000000000000aa8e         call       argmatch_invalid                            ; argmatch_invalid
000000000000aa93         mov        rdx, r15
000000000000aa96         mov        rsi, rbp
000000000000aa99         mov        rdi, rbx
000000000000aa9c         call       argmatch_valid                              ; argmatch_valid
000000000000aaa1         call       r13
000000000000aaa4         mov        rax, 0xffffffffffffffff
000000000000aaab         jmp        loc_aa76
000000000000aaad         align      16                                          ; End of unwind block (FDE at 0x16e38)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_to_argument:
000000000000aab0         push       r14                                         ; Begin of unwind block (FDE at 0x16e84)
000000000000aab2         push       r13
000000000000aab4         push       r12
000000000000aab6         push       rbp
000000000000aab7         push       rbx
000000000000aab8         mov        r14, qword [rsi]
000000000000aabb         test       r14, r14
000000000000aabe         je         loc_aaf1

000000000000aac0         mov        r12, rcx
000000000000aac3         mov        r13, rdi
000000000000aac6         mov        rbp, rdx
000000000000aac9         lea        rbx, qword [rsi+8]
000000000000aacd         jmp        loc_aadf
000000000000aacf         align      16

                     loc_aad0:
000000000000aad0         mov        r14, qword [rbx]                            ; CODE XREF=argmatch_to_argument+63
000000000000aad3         add        rbp, r12
000000000000aad6         add        rbx, 0x8
000000000000aada         test       r14, r14
000000000000aadd         je         loc_aaf1

                     loc_aadf:
000000000000aadf         mov        rdx, r12                                    ; argument "__n" for method j_memcmp, CODE XREF=argmatch_to_argument+29
000000000000aae2         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
000000000000aae5         mov        rdi, r13                                    ; argument "__s1" for method j_memcmp
000000000000aae8         call       j_memcmp                                    ; memcmp
000000000000aaed         test       eax, eax
000000000000aaef         jne        loc_aad0

                     loc_aaf1:
000000000000aaf1         pop        rbx                                         ; CODE XREF=argmatch_to_argument+14, argmatch_to_argument+45
000000000000aaf2         mov        rax, r14
000000000000aaf5         pop        rbp
000000000000aaf6         pop        r12
000000000000aaf8         pop        r13
000000000000aafa         pop        r14
000000000000aafc         ret
                        ; endp
000000000000aafd         align      256                                         ; End of unwind block (FDE at 0x16e84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_simple_backup_suffix:
000000000000ab00         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x16ec4), CODE XREF=main+1413, backupfile_internal+1508
000000000000ab03         push       rbx
000000000000ab04         mov        rbx, rdi
000000000000ab07         je         loc_ab30

                     loc_ab09:
000000000000ab09         cmp        byte [rbx], 0x0                             ; CODE XREF=set_simple_backup_suffix+68
000000000000ab0c         jne        loc_ab20

                     loc_ab0e:
000000000000ab0e         lea        rbx, qword [aNS+13]                         ; 0x15190, CODE XREF=set_simple_backup_suffix+43, set_simple_backup_suffix+66

                     loc_ab15:
000000000000ab15         mov        qword [simple_backup_suffix], rbx           ; simple_backup_suffix, CODE XREF=set_simple_backup_suffix+45
000000000000ab1c         pop        rbx
000000000000ab1d         ret
                        ; endp
000000000000ab1e         align      32

                     loc_ab20:
000000000000ab20         mov        rdi, rbx                                    ; CODE XREF=set_simple_backup_suffix+12
000000000000ab23         call       last_component                              ; last_component
000000000000ab28         cmp        rax, rbx
000000000000ab2b         jne        loc_ab0e

000000000000ab2d         jmp        loc_ab15
000000000000ab2f         align      16

                     loc_ab30:
000000000000ab30         lea        rdi, qword [aSimplebackupsu]                ; argument "__name" for method j_getenv, "SIMPLE_BACKUP_SUFFIX", CODE XREF=set_simple_backup_suffix+7
000000000000ab37         call       j_getenv                                    ; getenv
000000000000ab3c         test       rax, rax
000000000000ab3f         mov        rbx, rax
000000000000ab42         je         loc_ab0e

000000000000ab44         jmp        loc_ab09
000000000000ab46         align      16                                          ; End of unwind block (FDE at 0x16ec4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_44: int32_t, -68
        ;    var_50: int64_t, -80
        ;    var_54: int32_t, -84
        ;    var_55: int8_t, -85
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_94: int32_t, -148
        ;    var_98: int32_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176


                     backupfile_internal:
000000000000ab50         push       r15                                         ; Begin of unwind block (FDE at 0x16ee0), CODE XREF=backup_file_rename+5, find_backup_file_name+6
000000000000ab52         push       r14
000000000000ab54         push       r13
000000000000ab56         push       r12
000000000000ab58         push       rbp
000000000000ab59         push       rbx
000000000000ab5a         mov        rbx, rsi
000000000000ab5d         sub        rsp, 0x88
000000000000ab64         mov        dword [rsp+0xb8+var_54], edi
000000000000ab68         mov        rdi, rsi
000000000000ab6b         mov        qword [rsp+0xb8+var_A8], rsi
000000000000ab70         mov        dword [rsp+0xb8+var_98], edx
000000000000ab74         mov        byte [rsp+0xb8+var_55], cl
000000000000ab78         mov        rax, qword [fs:0x28]
000000000000ab81         mov        qword [rsp+0xb8+var_40], rax
000000000000ab86         xor        eax, eax
000000000000ab88         call       last_component                              ; last_component
000000000000ab8d         mov        rdi, rax                                    ; argument "__s" for method j_strlen
000000000000ab90         mov        r14, rax
000000000000ab93         call       j_strlen                                    ; strlen
000000000000ab98         mov        rdi, qword [simple_backup_suffix]           ; simple_backup_suffix
000000000000ab9f         sub        r14, rbx
000000000000aba2         add        rax, r14
000000000000aba5         mov        qword [rsp+0xb8+var_A0], rax
000000000000abaa         test       rdi, rdi
000000000000abad         je         loc_b134

                     loc_abb3:
000000000000abb3         call       j_strlen                                    ; strlen, CODE XREF=backupfile_internal+1520
000000000000abb8         mov        rsi, qword [rsp+0xb8+var_A0]
000000000000abbd         add        rax, 0x1
000000000000abc1         cmp        rax, 0x9
000000000000abc5         mov        qword [rsp+0xb8+var_68], rax
000000000000abca         lea        rdx, qword [rsi+1]
000000000000abce         mov        rsi, rax
000000000000abd1         mov        eax, 0x9
000000000000abd6         cmovae     rax, rsi
000000000000abda         add        rax, rdx
000000000000abdd         mov        qword [rsp+0xb8+var_80], rdx
000000000000abe2         mov        rdi, rax                                    ; argument "__size" for method j_malloc
000000000000abe5         mov        qword [rsp+0xb8+var_78], rax
000000000000abea         call       j_malloc                                    ; malloc
000000000000abef         test       rax, rax
000000000000abf2         mov        r15, rax
000000000000abf5         je         loc_aee0

000000000000abfb         lea        rax, qword [rsp+0xb8+var_44]
000000000000ac00         mov        dword [rsp+0xb8+var_44], 0xffffffff
000000000000ac08         mov        qword [rsp+0xb8+var_70], 0x0
000000000000ac11         xor        r13d, r13d
000000000000ac14         mov        qword [rsp+0xb8+var_50], rax

                     loc_ac19:
000000000000ac19         mov        rdx, qword [rsp+0xb8+var_80]                ; argument "__n" for method j_memcpy, CODE XREF=backupfile_internal+870
000000000000ac1e         mov        rsi, qword [rsp+0xb8+var_A8]                ; argument "__src" for method j_memcpy
000000000000ac23         mov        rdi, r15                                    ; argument "__dest" for method j_memcpy
000000000000ac26         call       j_memcpy                                    ; memcpy
000000000000ac2b         cmp        dword [rsp+0xb8+var_98], 0x1
000000000000ac30         je         loc_af10

000000000000ac36         lea        rbp, qword [r15+r14]
000000000000ac3a         mov        rdi, rbp
000000000000ac3d         call       base_len                                    ; base_len
000000000000ac42         test       r13, r13
000000000000ac45         mov        r12, rax
000000000000ac48         je         loc_aff0

000000000000ac4e         mov        rdi, r13                                    ; argument "__dirp" for method j_rewinddir
000000000000ac51         call       j_rewinddir                                 ; rewinddir

                     loc_ac56:
000000000000ac56         mov        rax, qword [rsp+0xb8+var_78]                ; CODE XREF=backupfile_internal+1249
000000000000ac5b         mov        qword [rsp+0xb8+var_90], 0x1
000000000000ac64         mov        dword [rsp+0xb8+var_94], 0x2
000000000000ac6c         mov        qword [rsp+0xb8+var_88], rax
000000000000ac71         lea        rax, qword [r12+4]
000000000000ac76         mov        qword [rsp+0xb8+var_B0], rax
000000000000ac7b         nop        dword [rax+rax]

                     loc_ac80:
000000000000ac80         mov        rdi, r13                                    ; argument "__dirp" for method j_readdir, CODE XREF=backupfile_internal+338, backupfile_internal+362, backupfile_internal+376, backupfile_internal+438, backupfile_internal+449, backupfile_internal+470, backupfile_internal+502
000000000000ac83         call       j_readdir                                   ; readdir
000000000000ac88         test       rax, rax
000000000000ac8b         je         loc_ae40

                     loc_ac91:
000000000000ac91         lea        rbx, qword [rax+0x13]                       ; CODE XREF=backupfile_internal+738
000000000000ac95         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000ac98         call       j_strlen                                    ; strlen
000000000000ac9d         cmp        rax, qword [rsp+0xb8+var_B0]
000000000000aca2         jb         loc_ac80

000000000000aca4         lea        rbp, qword [r12+2]
000000000000aca9         lea        rdi, qword [r15+r14]                        ; argument "__s1" for method j_memcmp
000000000000acad         mov        rsi, rbx                                    ; argument "__s2" for method j_memcmp
000000000000acb0         mov        rdx, rbp                                    ; argument "__n" for method j_memcmp
000000000000acb3         call       j_memcmp                                    ; memcmp
000000000000acb8         test       eax, eax
000000000000acba         jne        loc_ac80

000000000000acbc         add        rbx, rbp
000000000000acbf         movzx      eax, byte [rbx]
000000000000acc2         lea        edx, dword [rax-0x31]
000000000000acc5         cmp        dl, 0x8
000000000000acc8         ja         loc_ac80

000000000000acca         cmp        al, 0x39
000000000000accc         movsx      eax, byte [rbx+1]
000000000000acd0         mov        ebp, 0x1
000000000000acd5         sete       r8b
000000000000acd9         mov        ecx, eax
000000000000acdb         sub        eax, 0x30
000000000000acde         cmp        eax, 0x9
000000000000ace1         ja         loc_ad03

000000000000ace3         nop        dword [rax+rax]

                     loc_ace8:
000000000000ace8         cmp        cl, 0x39                                    ; CODE XREF=backupfile_internal+433
000000000000aceb         sete       al
000000000000acee         add        rbp, 0x1
000000000000acf2         and        r8d, eax
000000000000acf5         movsx      eax, byte [rbx+rbp]
000000000000acf9         mov        ecx, eax
000000000000acfb         sub        eax, 0x30
000000000000acfe         cmp        eax, 0x9
000000000000ad01         jbe        loc_ace8

                     loc_ad03:
000000000000ad03         cmp        cl, 0x7e                                    ; CODE XREF=backupfile_internal+401
000000000000ad06         jne        loc_ac80

000000000000ad0c         cmp        byte [rbx+rbp+1], 0x0
000000000000ad11         jne        loc_ac80

000000000000ad17         mov        rdx, qword [rsp+0xb8+var_90]
000000000000ad1c         cmp        rdx, rbp
000000000000ad1f         jb         loc_ad4c

000000000000ad21         mov        byte [rsp+0xb8+var_60], r8b
000000000000ad26         jne        loc_ac80

000000000000ad2c         mov        rax, qword [rsp+0xb8+var_A0]
000000000000ad31         mov        rsi, rbx                                    ; argument "__s2" for method j_memcmp
000000000000ad34         lea        rdi, qword [r15+rax+2]                      ; argument "__s1" for method j_memcmp
000000000000ad39         call       j_memcmp                                    ; memcmp
000000000000ad3e         test       eax, eax
000000000000ad40         movzx      r8d, byte [rsp+0xb8+var_60]
000000000000ad46         jg         loc_ac80

                     loc_ad4c:
000000000000ad4c         movzx      esi, r8b                                    ; CODE XREF=backupfile_internal+463
000000000000ad50         movzx      r9d, r8b
000000000000ad54         mov        dword [rsp+0xb8+var_94], esi
000000000000ad58         mov        rsi, qword [rsp+0xb8+var_A0]
000000000000ad5d         lea        rax, qword [r9+rbp]
000000000000ad61         mov        qword [rsp+0xb8+var_90], rax
000000000000ad66         lea        rcx, qword [rsi+rax+4]
000000000000ad6b         cmp        rcx, qword [rsp+0xb8+var_88]
000000000000ad70         jbe        loc_b0a8

000000000000ad76         mov        edx, 0x2
000000000000ad7b         xor        esi, esi
000000000000ad7d         mov        rax, rdx
000000000000ad80         mul        rcx
000000000000ad83         jo         loc_b153

                     loc_ad89:
000000000000ad89         test       rax, rax                                    ; CODE XREF=backupfile_internal+1544
000000000000ad8c         js         loc_b040

000000000000ad92         test       rsi, rsi
000000000000ad95         jne        loc_b040

000000000000ad9b         lea        rax, qword [rcx+rcx]
000000000000ad9f         mov        qword [rsp+0xb8+var_88], rax

                     loc_ada4:
000000000000ada4         mov        rsi, qword [rsp+0xb8+var_88]                ; argument "__size" for method j_realloc, CODE XREF=backupfile_internal+1269
000000000000ada9         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
000000000000adac         mov        qword [rsp+0xb8+var_60], r9
000000000000adb1         call       j_realloc                                   ; realloc
000000000000adb6         test       rax, rax
000000000000adb9         mov        r8, rax
000000000000adbc         mov        r9, qword [rsp+0xb8+var_60]
000000000000adc1         je         loc_b050

                     loc_adc7:
000000000000adc7         mov        rax, qword [rsp+0xb8+var_A0]                ; CODE XREF=backupfile_internal+1371
000000000000adcc         lea        rdx, qword [rbp+2]                          ; argument "__n" for method j_memcpy
000000000000add0         mov        qword [rsp+0xb8+var_60], r8
000000000000add5         mov        rsi, rbx                                    ; argument "__src" for method j_memcpy
000000000000add8         add        rax, r8
000000000000addb         mov        r8d, 0x7e2e
000000000000ade1         lea        rcx, qword [rax+r9+2]
000000000000ade6         mov        word [rax], r8w
000000000000adea         mov        byte [rax+2], 0x30
000000000000adee         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
000000000000adf1         call       j_memcpy                                    ; memcpy
000000000000adf6         add        rbp, rax
000000000000adf9         mov        r8, qword [rsp+0xb8+var_60]
000000000000adfe         movzx      edx, byte [rbp-1]
000000000000ae02         lea        rax, qword [rbp-1]
000000000000ae06         cmp        dl, 0x39
000000000000ae09         jne        loc_ae1f

000000000000ae0b         nop        dword [rax+rax]

                     loc_ae10:
000000000000ae10         mov        byte [rax], 0x30                            ; CODE XREF=backupfile_internal+717
000000000000ae13         sub        rax, 0x1
000000000000ae17         movzx      edx, byte [rax]
000000000000ae1a         cmp        dl, 0x39
000000000000ae1d         je         loc_ae10

                     loc_ae1f:
000000000000ae1f         add        edx, 0x1                                    ; CODE XREF=backupfile_internal+697
000000000000ae22         mov        rdi, r13                                    ; argument "__dirp" for method j_readdir
000000000000ae25         mov        r15, r8
000000000000ae28         mov        byte [rax], dl
000000000000ae2a         call       j_readdir                                   ; readdir
000000000000ae2f         test       rax, rax
000000000000ae32         jne        loc_ac91

000000000000ae38         nop        dword [rax+rax]

                     loc_ae40:
000000000000ae40         mov        eax, dword [rsp+0xb8+var_94]                ; CODE XREF=backupfile_internal+315, backupfile_internal+1421
000000000000ae44         cmp        eax, 0x2
000000000000ae47         je         loc_af30

000000000000ae4d         cmp        eax, 0x3
000000000000ae50         je         loc_b050

000000000000ae56         cmp        eax, 0x1
000000000000ae59         je         loc_af60

                     loc_ae5f:
000000000000ae5f         cmp        byte [rsp+0xb8+var_55], 0x0                 ; CODE XREF=backupfile_internal+986, backupfile_internal+1066, backupfile_internal+1175, backupfile_internal+1317, backupfile_internal+1359
000000000000ae64         je         loc_b11e

000000000000ae6a         mov        edx, dword [rsp+0xb8+var_44]
000000000000ae6e         lea        rcx, qword [r15+r14]
000000000000ae72         test       edx, edx
000000000000ae74         jns        loc_ae89

000000000000ae76         mov        dword [rsp+0xb8+var_44], 0xffffff9c
000000000000ae7e         mov        rcx, r15
000000000000ae81         mov        edx, 0xffffff9c
000000000000ae86         xor        r14d, r14d

                     loc_ae89:
000000000000ae89         xor        r8d, r8d                                    ; CODE XREF=backupfile_internal+804
000000000000ae8c         cmp        dword [rsp+0xb8+var_98], 0x1
000000000000ae91         mov        rsi, qword [rsp+0xb8+var_A8]
000000000000ae96         mov        edi, 0xffffff9c
000000000000ae9b         setne      r8b
000000000000ae9f         call       renameatu                                   ; renameatu
000000000000aea4         test       eax, eax
000000000000aea6         je         loc_b11e

000000000000aeac         call       j___errno_location                          ; __errno_location
000000000000aeb1         mov        ebp, dword [rax]
000000000000aeb3         cmp        ebp, 0x11
000000000000aeb6         je         loc_ac19

000000000000aebc         test       r13, r13
000000000000aebf         mov        rbx, rax
000000000000aec2         je         loc_aecc

000000000000aec4         mov        rdi, r13                                    ; argument "__dirp" for method j_closedir
000000000000aec7         call       j_closedir                                  ; closedir

                     loc_aecc:
000000000000aecc         mov        rdi, r15                                    ; CODE XREF=backupfile_internal+882
000000000000aecf         xor        r15d, r15d
000000000000aed2         call       sub_2e10                                    ; sub_2e10
000000000000aed7         mov        dword [rbx], ebp
000000000000aed9         nop        dword [rax]

                     loc_aee0:
000000000000aee0         mov        rsi, qword [rsp+0xb8+var_40]                ; CODE XREF=backupfile_internal+165, backupfile_internal+1302, backupfile_internal+1489, backupfile_internal+1503
000000000000aee5         xor        rsi, qword [fs:0x28]
000000000000aeee         mov        rax, r15
000000000000aef1         jne        loc_b15d

000000000000aef7         add        rsp, 0x88
000000000000aefe         pop        rbx
000000000000aeff         pop        rbp
000000000000af00         pop        r12
000000000000af02         pop        r13
000000000000af04         pop        r14
000000000000af06         pop        r15
000000000000af08         ret
                        ; endp
000000000000af09         align      16

                     loc_af10:
000000000000af10         mov        rax, qword [rsp+0xb8+var_A0]                ; CODE XREF=backupfile_internal+224
000000000000af15         mov        rdx, qword [rsp+0xb8+var_68]                ; argument "__n" for method j_memcpy
000000000000af1a         mov        rsi, qword [simple_backup_suffix]           ; argument "__src" for method j_memcpy, simple_backup_suffix
000000000000af21         lea        rdi, qword [r15+rax]                        ; argument "__dest" for method j_memcpy
000000000000af25         call       j_memcpy                                    ; memcpy
000000000000af2a         jmp        loc_ae5f
000000000000af2f         align      16

                     loc_af30:
000000000000af30         cmp        dword [rsp+0xb8+var_98], 0x2                ; CODE XREF=backupfile_internal+759
000000000000af35         jne        loc_af60

000000000000af37         mov        rax, qword [rsp+0xb8+var_A0]
000000000000af3c         mov        rdx, qword [rsp+0xb8+var_68]                ; argument "__n" for method j_memcpy
000000000000af41         mov        rsi, qword [simple_backup_suffix]           ; argument "__src" for method j_memcpy, simple_backup_suffix
000000000000af48         lea        rdi, qword [r15+rax]                        ; argument "__dest" for method j_memcpy
000000000000af4c         call       j_memcpy                                    ; memcpy
000000000000af51         mov        dword [rsp+0xb8+var_98], 0x1
000000000000af59         nop        dword [rax]

                     loc_af60:
000000000000af60         mov        rdi, r15                                    ; CODE XREF=backupfile_internal+777, backupfile_internal+997
000000000000af63         call       last_component                              ; last_component
000000000000af68         mov        rdi, rax
000000000000af6b         mov        rbx, rax
000000000000af6e         call       base_len                                    ; base_len
000000000000af73         cmp        rax, 0xe
000000000000af77         mov        rbp, rax
000000000000af7a         jbe        loc_ae5f

000000000000af80         cmp        qword [rsp+0xb8+var_70], 0x0
000000000000af86         jne        loc_b070

000000000000af8c         mov        edi, dword [rsp+0xb8+var_44]
000000000000af90         mov        dword [rsp+0xb8+var_B0], edi
000000000000af94         call       j___errno_location                          ; __errno_location
000000000000af99         mov        edi, dword [rsp+0xb8+var_B0]
000000000000af9d         mov        r12, rax
000000000000afa0         test       edi, edi
000000000000afa2         js         loc_b0e2

000000000000afa8         mov        dword [rax], 0x0
000000000000afae         mov        esi, 0x3                                    ; argument "__name" for method j_fpathconf
000000000000afb3         call       j_fpathconf                                 ; fpathconf
000000000000afb8         mov        ecx, dword [r12]
000000000000afbc         xor        edx, edx
000000000000afbe         test       ecx, ecx
000000000000afc0         sete       dl
000000000000afc3         sub        rax, rdx

                     loc_afc6:
000000000000afc6         test       rax, rax                                    ; CODE XREF=backupfile_internal+1481
000000000000afc9         mov        qword [rsp+0xb8+var_70], rax
000000000000afce         jns        loc_b070

000000000000afd4         cmp        rax, 0xffffffffffffffff
000000000000afd8         jne        loc_b145

000000000000afde         mov        qword [rsp+0xb8+var_70], 0xffffffffffffffff
000000000000afe7         jmp        loc_ae5f
000000000000afec         align      16

                     loc_aff0:
000000000000aff0         mov        rcx, qword [rsp+0xb8+var_50]                ; CODE XREF=backupfile_internal+248
000000000000aff5         mov        edi, dword [rsp+0xb8+var_54]
000000000000aff9         mov        r9d, 0x2e
000000000000afff         xor        edx, edx
000000000000b001         movzx      ebx, word [rbp]
000000000000b005         mov        rsi, r15
000000000000b008         mov        word [rbp], r9w
000000000000b00d         call       opendirat                                   ; opendirat
000000000000b012         test       rax, rax
000000000000b015         mov        r13, rax
000000000000b018         lea        rdx, qword [rbp+r12]
000000000000b01d         je         loc_b0b0

000000000000b023         mov        word [rbp], bx
000000000000b027         mov        dword [rdx], 0x7e317e2e
000000000000b02d         mov        byte [rdx+4], 0x0
000000000000b031         jmp        loc_ac56
000000000000b036         align      64

                     loc_b040:
000000000000b040         mov        qword [rsp+0xb8+var_88], rcx                ; CODE XREF=backupfile_internal+572, backupfile_internal+581
000000000000b045         jmp        loc_ada4
000000000000b04a         align      16

                     loc_b050:
000000000000b050         mov        rdi, r15                                    ; CODE XREF=backupfile_internal+625, backupfile_internal+768
000000000000b053         xor        r15d, r15d
000000000000b056         call       sub_2e10                                    ; sub_2e10
000000000000b05b         call       j___errno_location                          ; __errno_location
000000000000b060         mov        dword [rax], 0xc
000000000000b066         jmp        loc_aee0
000000000000b06b         align      16

                     loc_b070:
000000000000b070         cmp        rbp, qword [rsp+0xb8+var_70]                ; CODE XREF=backupfile_internal+1078, backupfile_internal+1150
000000000000b075         jbe        loc_ae5f

                     loc_b07b:
000000000000b07b         mov        rax, qword [rsp+0xb8+var_A0]                ; CODE XREF=backupfile_internal+1534
000000000000b080         mov        rsi, qword [rsp+0xb8+var_70]
000000000000b085         add        rax, r15
000000000000b088         lea        rdx, qword [rsi-1]
000000000000b08c         sub        rax, rbx
000000000000b08f         cmp        rax, rsi
000000000000b092         cmovae     rax, rdx
000000000000b096         mov        byte [rbx+rax], 0x7e
000000000000b09a         mov        byte [rbx+rax+1], 0x0
000000000000b09f         jmp        loc_ae5f
000000000000b0a4         align      8

                     loc_b0a8:
000000000000b0a8         mov        r8, r15                                     ; CODE XREF=backupfile_internal+544
000000000000b0ab         jmp        loc_adc7

                     loc_b0b0:
000000000000b0b0         mov        qword [rsp+0xb8+var_B0], rdx                ; CODE XREF=backupfile_internal+1229
000000000000b0b5         call       j___errno_location                          ; __errno_location
000000000000b0ba         cmp        dword [rax], 0xc
000000000000b0bd         mov        rdx, qword [rsp+0xb8+var_B0]
000000000000b0c2         mov        word [rbp], bx
000000000000b0c6         mov        dword [rdx], 0x7e317e2e
000000000000b0cc         mov        byte [rdx+4], 0x0
000000000000b0d0         sete       al
000000000000b0d3         movzx      eax, al
000000000000b0d6         add        eax, 0x2
000000000000b0d9         mov        dword [rsp+0xb8+var_94], eax
000000000000b0dd         jmp        loc_ae40

                     loc_b0e2:
000000000000b0e2         movzx      edx, word [rbx]                             ; CODE XREF=backupfile_internal+1106
000000000000b0e5         mov        esi, 0x2e
000000000000b0ea         mov        rdi, r15                                    ; argument "__path" for method j_pathconf
000000000000b0ed         mov        word [rbx], si
000000000000b0f0         mov        dword [rax], 0x0
000000000000b0f6         mov        esi, 0x3                                    ; argument "__name" for method j_pathconf
000000000000b0fb         mov        dword [rsp+0xb8+var_B0], edx
000000000000b0ff         call       j_pathconf                                  ; pathconf
000000000000b104         mov        edi, dword [r12]
000000000000b108         mov        edx, dword [rsp+0xb8+var_B0]
000000000000b10c         xor        ecx, ecx
000000000000b10e         test       edi, edi
000000000000b110         mov        word [rbx], dx
000000000000b113         sete       cl
000000000000b116         sub        rax, rcx
000000000000b119         jmp        loc_afc6

                     loc_b11e:
000000000000b11e         test       r13, r13                                    ; CODE XREF=backupfile_internal+788, backupfile_internal+854
000000000000b121         je         loc_aee0

000000000000b127         mov        rdi, r13                                    ; argument "__dirp" for method j_closedir
000000000000b12a         call       j_closedir                                  ; closedir
000000000000b12f         jmp        loc_aee0

                     loc_b134:
000000000000b134         call       set_simple_backup_suffix                    ; set_simple_backup_suffix, CODE XREF=backupfile_internal+93
000000000000b139         mov        rdi, qword [simple_backup_suffix]           ; simple_backup_suffix
000000000000b140         jmp        loc_abb3

                     loc_b145:
000000000000b145         mov        qword [rsp+0xb8+var_70], 0xe                ; CODE XREF=backupfile_internal+1160
000000000000b14e         jmp        loc_b07b

                     loc_b153:
000000000000b153         mov        esi, 0x1                                    ; CODE XREF=backupfile_internal+563
000000000000b158         jmp        loc_ad89

                     loc_b15d:
000000000000b15d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=backupfile_internal+929
                        ; endp
000000000000b162         align      16                                          ; End of unwind block (FDE at 0x16ee0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     backup_file_rename:
000000000000b170         mov        ecx, 0x1                                    ; Begin of unwind block (FDE at 0x16f34), CODE XREF=copy_internal+3550
000000000000b175         jmp        backupfile_internal                         ; backupfile_internal
                        ; endp
000000000000b17a         align      128                                         ; End of unwind block (FDE at 0x16f34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_version.part.0:
000000000000b180         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x16f4c), CODE XREF=get_version+10, j_get_version.part.0
000000000000b184         mov        r9, qword [argmatch_die]                    ; argmatch_die
000000000000b18b         lea        rdx, qword [backup_args]                    ; backup_args
000000000000b192         lea        rcx, qword [backup_types]                   ; backup_types
000000000000b199         mov        r8d, 0x4
000000000000b19f         call       __xargmatch_internal                        ; __xargmatch_internal
000000000000b1a4         lea        rdx, qword [backup_types]                   ; backup_types
000000000000b1ab         mov        eax, dword [rdx+rax*4]
000000000000b1ae         add        rsp, 0x8
000000000000b1b2         ret
                        ; endp
000000000000b1b3         align      64                                          ; End of unwind block (FDE at 0x16f4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     find_backup_file_name:
000000000000b1c0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x16f64), CODE XREF=do_copy+234
000000000000b1c4         xor        ecx, ecx                                    ; argument #4 for method backupfile_internal
000000000000b1c6         call       backupfile_internal                         ; backupfile_internal
000000000000b1cb         test       rax, rax
000000000000b1ce         je         loc_b1d5

000000000000b1d0         add        rsp, 0x8
000000000000b1d4         ret
                        ; endp

                     loc_b1d5:
000000000000b1d5         call       xalloc_die                                  ; xalloc_die, CODE XREF=find_backup_file_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_b1da:
000000000000b1da         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x16f64)
                     get_version:
000000000000b1e0         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x16f80)
000000000000b1e3         je         loc_b1f0

000000000000b1e5         cmp        byte [rsi], 0x0
000000000000b1e8         je         loc_b1f0

000000000000b1ea         jmp        get_version.part.0                          ; get_version.part.0
                        ; endp
000000000000b1ec         align      16

                     loc_b1f0:
000000000000b1f0         mov        eax, 0x2                                    ; CODE XREF=get_version+3, get_version+8
000000000000b1f5         ret
                        ; endp
000000000000b1f6         align      512                                         ; End of unwind block (FDE at 0x16f80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xget_version:
000000000000b200         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x16f94), CODE XREF=main+1399
000000000000b203         je         loc_b20a

000000000000b205         cmp        byte [rsi], 0x0
000000000000b208         jne        j_get_version.part.0                        ; get_version.part.0

                     loc_b20a:
000000000000b20a         lea        rdi, qword [aVersioncontrol]                ; argument "__name" for method j_getenv, "VERSION_CONTROL", CODE XREF=xget_version+3
000000000000b211         sub        rsp, 0x8
000000000000b215         call       j_getenv                                    ; getenv
000000000000b21a         test       rax, rax
000000000000b21d         je         loc_b240

000000000000b21f         cmp        byte [rax], 0x0
000000000000b222         je         loc_b240

000000000000b224         lea        rdi, qword [aSimplebackupsu+21]             ; 0x151a7
000000000000b22b         mov        rsi, rax
000000000000b22e         add        rsp, 0x8

                     j_get_version.part.0:        // get_version.part.0
000000000000b232         jmp        get_version.part.0                          ; get_version.part.0, CODE XREF=xget_version+8
                        ; endp
000000000000b237         align      64

                     loc_b240:
000000000000b240         mov        eax, 0x2                                    ; CODE XREF=xget_version+29, xget_version+34
000000000000b245         add        rsp, 0x8
000000000000b249         ret
                        ; endp
000000000000b24a         align      16                                          ; End of unwind block (FDE at 0x16f94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     buffer_lcm:
000000000000b250         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x16fb4), CODE XREF=copy_internal+12256
000000000000b253         mov        rcx, rdx
000000000000b256         jne        loc_b278

000000000000b258         test       rsi, rsi
000000000000b25b         mov        edi, 0x2000
000000000000b260         cmovne     rdi, rsi

                     loc_b264:
000000000000b264         cmp        rdi, rcx                                    ; CODE XREF=buffer_lcm+43, buffer_lcm+82, buffer_lcm+95
000000000000b267         cmovbe     rcx, rdi
000000000000b26b         mov        r8, rcx

                     loc_b26e:
000000000000b26e         mov        rax, r8                                     ; CODE XREF=buffer_lcm+97
000000000000b271         ret
                        ; endp
000000000000b272         align      8

                     loc_b278:
000000000000b278         test       rsi, rsi                                    ; CODE XREF=buffer_lcm+6
000000000000b27b         je         loc_b264

000000000000b27d         mov        r8, rsi
000000000000b280         mov        rax, rdi

                     loc_b283:
000000000000b283         xor        edx, edx                                    ; CODE XREF=buffer_lcm+110
000000000000b285         div        r8
000000000000b288         test       rdx, rdx
000000000000b28b         jne        loc_b2b8

000000000000b28d         xor        edx, edx
000000000000b28f         mov        rax, rdi
000000000000b292         div        r8
000000000000b295         mov        r8, rsi
000000000000b298         imul       r8, rax
000000000000b29c         mov        r9, rax
000000000000b29f         cmp        r8, rcx
000000000000b2a2         ja         loc_b264

000000000000b2a4         xor        edx, edx
000000000000b2a6         mov        rax, r8
000000000000b2a9         div        rsi
000000000000b2ac         cmp        rax, r9
000000000000b2af         jne        loc_b264

000000000000b2b1         jmp        loc_b26e
000000000000b2b3         align      8

                     loc_b2b8:
000000000000b2b8         mov        rax, r8                                     ; CODE XREF=buffer_lcm+59
000000000000b2bb         mov        r8, rdx
000000000000b2be         jmp        loc_b283


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdin_set_file_name:
000000000000b2c0         mov        qword [file_name], rdi                      ; End of unwind block (FDE at 0x16fb4), Begin of unwind block (FDE at 0x16fcc), file_name
000000000000b2c7         ret
                        ; endp
000000000000b2c8         align      16                                          ; End of unwind block (FDE at 0x16fcc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdin:
000000000000b2d0         push       r12                                         ; Begin of unwind block (FDE at 0x16fe0), DATA XREF=main+123
000000000000b2d2         push       rbp
000000000000b2d3         push       rbx
000000000000b2d4         mov        rbx, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
000000000000b2db         mov        rdi, rbx
000000000000b2de         call       freadahead                                  ; freadahead
000000000000b2e3         test       rax, rax
000000000000b2e6         jne        loc_b388

000000000000b2ec         mov        rdi, rbx
000000000000b2ef         call       close_stream                                ; close_stream
000000000000b2f4         test       eax, eax
000000000000b2f6         jne        loc_b328

000000000000b2f8         pop        rbx
000000000000b2f9         pop        rbp
000000000000b2fa         pop        r12
000000000000b2fc         jmp        close_stdout                                ; close_stdout
                        ; endp
000000000000b301         align      8

                     loc_b308:
000000000000b308         call       rpl_fflush                                  ; rpl_fflush, CODE XREF=close_stdin+208
000000000000b30d         test       eax, eax
000000000000b30f         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
000000000000b316         je         loc_b3a6

000000000000b31c         call       close_stream                                ; close_stream
000000000000b321         nop        dword [rax]

                     loc_b328:
000000000000b328         lea        rsi, qword [aErrorClosingFi]                ; argument "msgid" for method j_dcgettext, "error closing file", CODE XREF=close_stdin+38, close_stdin+221
000000000000b32f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000b331         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000b336         call       j_dcgettext                                 ; dcgettext
000000000000b33b         mov        rbx, qword [file_name]                      ; file_name
000000000000b342         mov        r12, rax
000000000000b345         call       j___errno_location                          ; __errno_location
000000000000b34a         mov        rbp, rax
000000000000b34d         test       rbx, rbx
000000000000b350         je         loc_b3c0

000000000000b352         mov        rdi, rbx
000000000000b355         call       quotearg_colon                              ; quotearg_colon
000000000000b35a         mov        esi, dword [rbp]                            ; argument "__errnum" for method j_error
000000000000b35d         lea        rdx, qword [aSS_15213]                      ; argument "__format" for method j_error, "%s: %s"
000000000000b364         mov        rcx, rax
000000000000b367         mov        r8, r12
000000000000b36a         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000b36c         xor        eax, eax
000000000000b36e         call       j_error                                     ; error

                     loc_b373:
000000000000b373         call       close_stdout                                ; close_stdout, CODE XREF=close_stdin+261
000000000000b378         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure
000000000000b37e         call       j__exit                                     ; _exit
                        ; endp
000000000000b383         align      8

                     loc_b388:
000000000000b388         xor        esi, esi                                    ; CODE XREF=close_stdin+22
000000000000b38a         mov        rdi, rbx
000000000000b38d         mov        edx, 0x1
000000000000b392         call       rpl_fseeko                                  ; rpl_fseeko
000000000000b397         test       eax, eax
000000000000b399         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
000000000000b3a0         je         loc_b308

                     loc_b3a6:
000000000000b3a6         call       close_stream                                ; close_stream, CODE XREF=close_stdin+70
000000000000b3ab         test       eax, eax
000000000000b3ad         jne        loc_b328

000000000000b3b3         pop        rbx
000000000000b3b4         pop        rbp
000000000000b3b5         pop        r12
000000000000b3b7         jmp        close_stdout                                ; close_stdout
                        ; endp
000000000000b3bc         align      64

                     loc_b3c0:
000000000000b3c0         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdin+128
000000000000b3c2         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x1518d
000000000000b3c9         mov        rcx, r12
000000000000b3cc         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000b3ce         xor        eax, eax
000000000000b3d0         call       j_error                                     ; error
000000000000b3d5         jmp        loc_b373
000000000000b3d7         align      32                                          ; End of unwind block (FDE at 0x16fe0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
000000000000b3e0         mov        qword [file_name_21a598], rdi               ; Begin of unwind block (FDE at 0x1701c), file_name_21a598
000000000000b3e7         ret
                        ; endp
000000000000b3e8         align      16                                          ; End of unwind block (FDE at 0x1701c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
000000000000b3f0         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x17030), ignore_EPIPE
000000000000b3f7         ret
                        ; endp
000000000000b3f8         align      1024                                        ; End of unwind block (FDE at 0x17030)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
000000000000b400         push       rbp                                         ; Begin of unwind block (FDE at 0x17044), CODE XREF=close_stdin+44, close_stdin+163, close_stdin+231
000000000000b401         push       rbx
000000000000b402         sub        rsp, 0x8
000000000000b406         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000b40d         call       close_stream                                ; close_stream
000000000000b412         test       eax, eax
000000000000b414         je         loc_b42c

000000000000b416         call       j___errno_location                          ; __errno_location
000000000000b41b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
000000000000b422         mov        rbx, rax
000000000000b425         je         loc_b443

000000000000b427         cmp        dword [rax], 0x20
000000000000b42a         jne        loc_b443

                     loc_b42c:
000000000000b42c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
000000000000b433         call       close_stream                                ; close_stream
000000000000b438         test       eax, eax
000000000000b43a         jne        loc_b482

000000000000b43c         add        rsp, 0x8
000000000000b440         pop        rbx
000000000000b441         pop        rbp
000000000000b442         ret
                        ; endp

                     loc_b443:
000000000000b443         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000b44a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000b44c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000b451         call       j_dcgettext                                 ; dcgettext
000000000000b456         mov        rdi, qword [file_name_21a598]               ; file_name_21a598
000000000000b45d         mov        rbp, rax
000000000000b460         test       rdi, rdi
000000000000b463         je         loc_b48d

000000000000b465         call       quotearg_colon                              ; quotearg_colon
000000000000b46a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000b46c         lea        rdx, qword [aSS_15213]                      ; argument "__format" for method j_error, "%s: %s"
000000000000b473         mov        rcx, rax
000000000000b476         mov        r8, rbp
000000000000b479         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000b47b         xor        eax, eax
000000000000b47d         call       j_error                                     ; error

                     loc_b482:
000000000000b482         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
000000000000b488         call       j__exit                                     ; _exit
                        ; endp

                     loc_b48d:
000000000000b48d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000b48f         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x1518d
000000000000b496         mov        rcx, rax
000000000000b499         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000b49b         xor        eax, eax
000000000000b49d         call       j_error                                     ; error
000000000000b4a2         jmp        loc_b482
000000000000b4a4         align      16                                          ; End of unwind block (FDE at 0x17044)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dir_name:
000000000000b4b0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x17074), CODE XREF=copy_internal+3795, same_nameat.part.0+43, same_nameat.part.0+95
000000000000b4b4         call       mdir_name                                   ; mdir_name
000000000000b4b9         test       rax, rax
000000000000b4bc         je         loc_b4c3

000000000000b4be         add        rsp, 0x8
000000000000b4c2         ret
                        ; endp

                     loc_b4c3:
000000000000b4c3         call       xalloc_die                                  ; xalloc_die, CODE XREF=dir_name+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_b4c8:
000000000000b4c8         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x17074)
                     dir_len:
000000000000b4d0         push       rbp                                         ; Begin of unwind block (FDE at 0x17094), CODE XREF=make_dir_parents_private+108, mdir_name+9
000000000000b4d1         push       rbx
000000000000b4d2         xor        ebp, ebp
000000000000b4d4         mov        rbx, rdi
000000000000b4d7         sub        rsp, 0x8
000000000000b4db         cmp        byte [rdi], 0x2f                            ; argument #1 for method last_component
000000000000b4de         sete       bpl
000000000000b4e2         call       last_component                              ; last_component
000000000000b4e7         mov        rcx, rax
000000000000b4ea         sub        rcx, rbx
000000000000b4ed         cmp        rcx, rbp
000000000000b4f0         jbe        loc_b520

000000000000b4f2         cmp        byte [rax-1], 0x2f
000000000000b4f6         lea        rdx, qword [rcx-1]
000000000000b4fa         je         loc_b50e

000000000000b4fc         jmp        loc_b520
000000000000b4fe         align      256

                     loc_b500:
000000000000b500         cmp        byte [rbx+rdx-1], 0x2f                      ; CODE XREF=dir_len+65
000000000000b505         lea        rax, qword [rdx-1]
000000000000b509         jne        loc_b513

000000000000b50b         mov        rdx, rax

                     loc_b50e:
000000000000b50e         cmp        rbp, rdx                                    ; CODE XREF=dir_len+42
000000000000b511         jne        loc_b500

                     loc_b513:
000000000000b513         add        rsp, 0x8                                    ; CODE XREF=dir_len+57
000000000000b517         mov        rax, rdx
000000000000b51a         pop        rbx
000000000000b51b         pop        rbp
000000000000b51c         ret
                        ; endp
000000000000b51d         align      32

                     loc_b520:
000000000000b520         add        rsp, 0x8                                    ; CODE XREF=dir_len+32, dir_len+44
000000000000b524         mov        rdx, rcx
000000000000b527         mov        rax, rdx
000000000000b52a         pop        rbx
000000000000b52b         pop        rbp
000000000000b52c         ret
                        ; endp
000000000000b52d         align      16                                          ; End of unwind block (FDE at 0x17094)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mdir_name:
000000000000b530         push       rbp                                         ; Begin of unwind block (FDE at 0x170c8), CODE XREF=dir_name+4
000000000000b531         push       rbx
000000000000b532         mov        rbp, rdi
000000000000b535         sub        rsp, 0x8
000000000000b539         call       dir_len                                     ; dir_len
000000000000b53e         test       rax, rax
000000000000b541         mov        rbx, rax
000000000000b544         sete       al
000000000000b547         movzx      eax, al
000000000000b54a         lea        rdi, qword [rbx+rax+1]                      ; argument "__size" for method j_malloc
000000000000b54f         call       j_malloc                                    ; malloc
000000000000b554         test       rax, rax
000000000000b557         mov        rcx, rax
000000000000b55a         je         loc_b576

000000000000b55c         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000b55f         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000000b562         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
000000000000b565         call       j_memcpy                                    ; memcpy
000000000000b56a         test       rbx, rbx
000000000000b56d         mov        rcx, rax
000000000000b570         je         loc_b580

                     loc_b572:
000000000000b572         mov        byte [rcx+rbx], 0x0                         ; CODE XREF=mdir_name+88

                     loc_b576:
000000000000b576         add        rsp, 0x8                                    ; CODE XREF=mdir_name+42
000000000000b57a         mov        rax, rcx
000000000000b57d         pop        rbx
000000000000b57e         pop        rbp
000000000000b57f         ret
                        ; endp

                     loc_b580:
000000000000b580         mov        byte [rax], 0x2e                            ; CODE XREF=mdir_name+64
000000000000b583         mov        ebx, 0x1
000000000000b588         jmp        loc_b572
000000000000b58a         align      16                                          ; End of unwind block (FDE at 0x170c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     last_component:
000000000000b590         movzx      edx, byte [rdi]                             ; Begin of unwind block (FDE at 0x170f4), CODE XREF=do_copy+655, copy_internal+3331, copy_internal+3456, copy_internal+8116, samedir_template+10, set_simple_backup_suffix+35, backupfile_internal+56, backupfile_internal+1043, dir_len+18, strip_trailing_slashes+9, mfile_name_concat+23
000000000000b593         mov        rax, rdi
000000000000b596         cmp        dl, 0x2f
000000000000b599         jne        loc_b5ac

000000000000b59b         nop        dword [rax+rax]

                     loc_b5a0:
000000000000b5a0         add        rax, 0x1                                    ; CODE XREF=last_component+26
000000000000b5a4         movzx      edx, byte [rax]
000000000000b5a7         cmp        dl, 0x2f
000000000000b5aa         je         loc_b5a0

                     loc_b5ac:
000000000000b5ac         test       dl, dl                                      ; CODE XREF=last_component+9
000000000000b5ae         je         loc_b5ea

000000000000b5b0         mov        rcx, rax
000000000000b5b3         xor        esi, esi
000000000000b5b5         jmp        loc_b5d5
000000000000b5b7         align      64

                     loc_b5c0:
000000000000b5c0         test       sil, sil                                    ; CODE XREF=last_component+72
000000000000b5c3         je         loc_b5ca

000000000000b5c5         mov        rax, rcx
000000000000b5c8         xor        esi, esi

                     loc_b5ca:
000000000000b5ca         add        rcx, 0x1                                    ; CODE XREF=last_component+51
000000000000b5ce         movzx      edx, byte [rcx]
000000000000b5d1         test       dl, dl
000000000000b5d3         je         loc_b5ea

                     loc_b5d5:
000000000000b5d5         cmp        dl, 0x2f                                    ; CODE XREF=last_component+37, last_component+88
000000000000b5d8         jne        loc_b5c0

000000000000b5da         add        rcx, 0x1
000000000000b5de         movzx      edx, byte [rcx]
000000000000b5e1         mov        esi, 0x1
000000000000b5e6         test       dl, dl
000000000000b5e8         jne        loc_b5d5

                     loc_b5ea:
000000000000b5ea         ret                                                    ; CODE XREF=last_component+30, last_component+67
                        ; endp
000000000000b5ec         align      16                                          ; End of unwind block (FDE at 0x170f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base_len:
000000000000b5f0         push       rbx                                         ; Begin of unwind block (FDE at 0x17108), CODE XREF=backupfile_internal+237, backupfile_internal+1054, strip_trailing_slashes+27, mfile_name_concat+34, same_nameat+52, same_nameat+63
000000000000b5f1         mov        rbx, rdi
000000000000b5f4         call       j_strlen                                    ; strlen
000000000000b5f9         cmp        rax, 0x1
000000000000b5fd         jbe        loc_b60a

000000000000b5ff         cmp        byte [rbx+rax-1], 0x2f
000000000000b604         lea        rdx, qword [rax-1]
000000000000b608         je         loc_b618

                     loc_b60a:
000000000000b60a         pop        rbx                                         ; CODE XREF=base_len+13
000000000000b60b         ret
                        ; endp
000000000000b60c         align      16

                     loc_b610:
000000000000b610         mov        rdx, rax                                    ; CODE XREF=base_len+55
000000000000b613         nop        dword [rax+rax]

                     loc_b618:
000000000000b618         cmp        rdx, 0x1                                    ; CODE XREF=base_len+24
000000000000b61c         je         loc_b630

000000000000b61e         cmp        byte [rbx+rdx-1], 0x2f
000000000000b623         lea        rax, qword [rdx-1]
000000000000b627         je         loc_b610

000000000000b629         mov        rax, rdx
000000000000b62c         pop        rbx
000000000000b62d         ret
                        ; endp
000000000000b62e         align      16

                     loc_b630:
000000000000b630         mov        eax, 0x1                                    ; CODE XREF=base_len+44
000000000000b635         pop        rbx
000000000000b636         ret
                        ; endp
000000000000b637         align      64                                          ; End of unwind block (FDE at 0x17108)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strip_trailing_slashes:
000000000000b640         push       rbp                                         ; Begin of unwind block (FDE at 0x17134), CODE XREF=do_copy+475, do_copy+709, do_copy+899
000000000000b641         push       rbx
000000000000b642         mov        rbp, rdi
000000000000b645         sub        rsp, 0x8
000000000000b649         call       last_component                              ; last_component
000000000000b64e         cmp        byte [rax], 0x0
000000000000b651         mov        rbx, rax
000000000000b654         cmove      rbx, rbp
000000000000b658         mov        rdi, rbx
000000000000b65b         call       base_len                                    ; base_len
000000000000b660         add        rbx, rax
000000000000b663         cmp        byte [rbx], 0x0
000000000000b666         mov        byte [rbx], 0x0
000000000000b669         setne      al
000000000000b66c         add        rsp, 0x8
000000000000b670         pop        rbx
000000000000b671         pop        rbp
000000000000b672         ret
                        ; endp
000000000000b673         align      128                                         ; End of unwind block (FDE at 0x17134)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
000000000000b680         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x1715c), CODE XREF=copy_internal+12119
                        ; endp
000000000000b685         align      16                                          ; End of unwind block (FDE at 0x1715c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
000000000000b690         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x17170)
000000000000b693         je         loc_b6b0

000000000000b695         push       rbx
000000000000b696         mov        ebx, esi
000000000000b698         call       j_fileno                                    ; fileno
000000000000b69d         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
000000000000b69f         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
000000000000b6a1         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
000000000000b6a3         pop        rbx
000000000000b6a4         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
000000000000b6a6         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
000000000000b6ab         align      16

                     loc_b6b0:
000000000000b6b0         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
000000000000b6b2         align      64                                          ; End of unwind block (FDE at 0x17170)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_28: int64_t, -40
        ;    var_38: int8_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int32_t, -88


                     open_safer:
000000000000b6c0         sub        rsp, 0x58                                   ; Begin of unwind block (FDE at 0x1718c), CODE XREF=copy_internal+8380, copy_internal+11880, copy_internal+13328, copy_internal+14387
000000000000b6c4         mov        qword [rsp+0x58+var_28], rdx
000000000000b6c9         xor        edx, edx
000000000000b6cb         mov        rax, qword [fs:0x28]
000000000000b6d4         mov        qword [rsp+0x58+var_40], rax
000000000000b6d9         xor        eax, eax
000000000000b6db         test       sil, 0x40
000000000000b6df         jne        loc_b708

                     loc_b6e1:
000000000000b6e1         xor        eax, eax                                    ; CODE XREF=open_safer+103
000000000000b6e3         call       j_open                                      ; open
000000000000b6e8         mov        edi, eax
000000000000b6ea         call       fd_safer                                    ; fd_safer
000000000000b6ef         mov        rcx, qword [rsp+0x58+var_40]
000000000000b6f4         xor        rcx, qword [fs:0x28]
000000000000b6fd         jne        loc_b729

000000000000b6ff         add        rsp, 0x58
000000000000b703         ret
                        ; endp
000000000000b704         align      8

                     loc_b708:
000000000000b708         lea        rax, qword [rsp+0x58+arg_0]                 ; CODE XREF=open_safer+31
000000000000b70d         mov        dword [rsp+0x58+var_58], 0x10
000000000000b714         mov        edx, dword [rsp+0x58+var_28]
000000000000b718         mov        qword [rsp+0x58+var_50], rax
000000000000b71d         lea        rax, qword [rsp+0x58+var_38]
000000000000b722         mov        qword [rsp+0x58+var_48], rax
000000000000b727         jmp        loc_b6e1

                     loc_b729:
000000000000b729         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=open_safer+61
                        ; endp
000000000000b72e         align      16                                          ; End of unwind block (FDE at 0x1718c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     record_file:
000000000000b730         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x171ac), CODE XREF=copy_internal+325, copy_internal+4797, copy_internal+9792
000000000000b733         je         loc_b7b0

000000000000b735         push       r13
000000000000b737         push       r12
000000000000b739         mov        r13, rdi
000000000000b73c         push       rbp
000000000000b73d         push       rbx
000000000000b73e         mov        r12, rsi
000000000000b741         mov        edi, 0x18                                   ; argument #1 for method xmalloc
000000000000b746         mov        rbp, rdx
000000000000b749         sub        rsp, 0x8
000000000000b74d         call       xmalloc                                     ; xmalloc
000000000000b752         mov        rdi, r12
000000000000b755         mov        rbx, rax
000000000000b758         call       xstrdup                                     ; xstrdup
000000000000b75d         mov        qword [rbx], rax
000000000000b760         mov        rax, qword [rbp+8]
000000000000b764         mov        rsi, rbx                                    ; argument #2 for method hash_insert
000000000000b767         mov        rdi, r13                                    ; argument #1 for method hash_insert
000000000000b76a         mov        qword [rbx+8], rax
000000000000b76e         mov        rax, qword [rbp]
000000000000b772         mov        qword [rbx+0x10], rax
000000000000b776         call       hash_insert                                 ; hash_insert
000000000000b77b         test       rax, rax
000000000000b77e         je         loc_b7b2

000000000000b780         cmp        rbx, rax
000000000000b783         je         loc_b7a0

000000000000b785         add        rsp, 0x8
000000000000b789         mov        rdi, rbx
000000000000b78c         pop        rbx
000000000000b78d         pop        rbp
000000000000b78e         pop        r12
000000000000b790         pop        r13
000000000000b792         jmp        triple_free                                 ; triple_free
                        ; endp
000000000000b797         align      32

                     loc_b7a0:
000000000000b7a0         add        rsp, 0x8                                    ; CODE XREF=record_file+83
000000000000b7a4         pop        rbx
000000000000b7a5         pop        rbp
000000000000b7a6         pop        r12
000000000000b7a8         pop        r13
000000000000b7aa         ret
                        ; endp
000000000000b7ab         align      16

                     loc_b7b0:
000000000000b7b0         ret                                                    ; CODE XREF=record_file+3
                        ; endp

                     loc_b7b2:
000000000000b7b2         call       xalloc_die                                  ; xalloc_die, CODE XREF=record_file+78
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     sub_b7b7:
000000000000b7b7         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x171ac)
                     seen_file:
000000000000b7c0         sub        rsp, 0x28                                   ; Begin of unwind block (FDE at 0x1720c), CODE XREF=copy_internal+996, copy_internal+2649, copy_internal+6064
000000000000b7c4         mov        rax, qword [fs:0x28]
000000000000b7cd         mov        qword [rsp+0x28+var_10], rax
000000000000b7d2         xor        eax, eax
000000000000b7d4         test       rdi, rdi
000000000000b7d7         je         loc_b7fc

000000000000b7d9         mov        rax, qword [rdx+8]
000000000000b7dd         mov        qword [rsp+0x28+var_28], rsi
000000000000b7e1         mov        rsi, rsp                                    ; argument #2 for method hash_lookup
000000000000b7e4         mov        qword [rsp+0x28+var_20], rax
000000000000b7e9         mov        rax, qword [rdx]
000000000000b7ec         mov        qword [rsp+0x28+var_18], rax
000000000000b7f1         call       hash_lookup                                 ; hash_lookup
000000000000b7f6         test       rax, rax
000000000000b7f9         setne      al

                     loc_b7fc:
000000000000b7fc         mov        rcx, qword [rsp+0x28+var_10]                ; CODE XREF=seen_file+23
000000000000b801         xor        rcx, qword [fs:0x28]
000000000000b80a         jne        loc_b811

000000000000b80c         add        rsp, 0x28
000000000000b810         ret
                        ; endp

                     loc_b811:
000000000000b811         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=seen_file+74
                        ; endp
000000000000b816         align      32                                          ; End of unwind block (FDE at 0x1720c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strmode:
000000000000b820         mov        edx, edi                                    ; Begin of unwind block (FDE at 0x1722c), CODE XREF=overwrite_ok.isra.12+66, filemodestring+3
000000000000b822         mov        eax, 0x2d
000000000000b827         and        edx, 0xf000
000000000000b82d         cmp        edx, 0x8000
000000000000b833         je         loc_b890

000000000000b835         cmp        edx, 0x4000
000000000000b83b         mov        eax, 0x64
000000000000b840         je         loc_b890

000000000000b842         cmp        edx, 0x6000
000000000000b848         mov        eax, 0x62
000000000000b84d         je         loc_b890

000000000000b84f         cmp        edx, 0x2000
000000000000b855         mov        eax, 0x63
000000000000b85a         je         loc_b890

000000000000b85c         cmp        edx, 0xa000
000000000000b862         mov        eax, 0x6c
000000000000b867         je         loc_b890

000000000000b869         cmp        edx, 0x1000
000000000000b86f         mov        eax, 0x70
000000000000b874         je         loc_b890

000000000000b876         cmp        edx, 0xc000
000000000000b87c         mov        eax, 0x73
000000000000b881         mov        edx, 0x3f
000000000000b886         cmovne     eax, edx
000000000000b889         nop        dword [rax]

                     loc_b890:
000000000000b890         mov        byte [rsi], al                              ; CODE XREF=strmode+19, strmode+32, strmode+45, strmode+58, strmode+71, strmode+84
000000000000b892         mov        eax, edi
000000000000b894         and        eax, 0x100
000000000000b899         cmp        eax, 0x1
000000000000b89c         sbb        eax, eax
000000000000b89e         and        eax, 0xffffffbb
000000000000b8a1         add        eax, 0x72
000000000000b8a4         mov        byte [rsi+1], al
000000000000b8a7         mov        eax, edi
000000000000b8a9         and        eax, 0x80
000000000000b8ae         cmp        eax, 0x1
000000000000b8b1         sbb        eax, eax
000000000000b8b3         and        eax, 0xffffffb6
000000000000b8b6         add        eax, 0x77
000000000000b8b9         mov        byte [rsi+2], al
000000000000b8bc         mov        eax, edi
000000000000b8be         and        eax, 0x40
000000000000b8c1         cmp        eax, 0x1
000000000000b8c4         sbb        eax, eax
000000000000b8c6         test       edi, 0x800
000000000000b8cc         je         loc_b970

000000000000b8d2         and        eax, 0xffffffe0
000000000000b8d5         add        eax, 0x73

                     loc_b8d8:
000000000000b8d8         mov        byte [rsi+3], al                            ; CODE XREF=strmode+342
000000000000b8db         mov        eax, edi
000000000000b8dd         and        eax, 0x20
000000000000b8e0         cmp        eax, 0x1
000000000000b8e3         sbb        eax, eax
000000000000b8e5         and        eax, 0xffffffbb
000000000000b8e8         add        eax, 0x72
000000000000b8eb         mov        byte [rsi+4], al
000000000000b8ee         mov        eax, edi
000000000000b8f0         and        eax, 0x10
000000000000b8f3         cmp        eax, 0x1
000000000000b8f6         sbb        eax, eax
000000000000b8f8         and        eax, 0xffffffb6
000000000000b8fb         add        eax, 0x77
000000000000b8fe         mov        byte [rsi+5], al
000000000000b901         mov        eax, edi
000000000000b903         and        eax, 0x8
000000000000b906         cmp        eax, 0x1
000000000000b909         sbb        eax, eax
000000000000b90b         test       edi, 0x400
000000000000b911         je         loc_b998

000000000000b917         and        eax, 0xffffffe0
000000000000b91a         add        eax, 0x73

                     loc_b91d:
000000000000b91d         mov        byte [rsi+6], al                            ; CODE XREF=strmode+382
000000000000b920         mov        eax, edi
000000000000b922         and        eax, 0x4
000000000000b925         cmp        eax, 0x1
000000000000b928         sbb        eax, eax
000000000000b92a         and        eax, 0xffffffbb
000000000000b92d         add        eax, 0x72
000000000000b930         mov        byte [rsi+7], al
000000000000b933         mov        eax, edi
000000000000b935         and        eax, 0x2
000000000000b938         cmp        eax, 0x1
000000000000b93b         sbb        eax, eax
000000000000b93d         and        eax, 0xffffffb6
000000000000b940         add        eax, 0x77
000000000000b943         mov        byte [rsi+8], al
000000000000b946         mov        eax, edi
000000000000b948         and        eax, 0x1
000000000000b94b         cmp        eax, 0x1
000000000000b94e         sbb        eax, eax
000000000000b950         and        edi, 0x200
000000000000b956         je         loc_b980

000000000000b958         and        eax, 0xffffffe0
000000000000b95b         add        eax, 0x74
000000000000b95e         mov        byte [rsi+9], al
000000000000b961         mov        eax, 0x20
000000000000b966         mov        word [rsi+0xa], ax
000000000000b96a         ret
                        ; endp
000000000000b96b         align      16

                     loc_b970:
000000000000b970         and        eax, 0xffffffb5                             ; CODE XREF=strmode+172
000000000000b973         add        eax, 0x78
000000000000b976         jmp        loc_b8d8
000000000000b97b         align      128

                     loc_b980:
000000000000b980         and        eax, 0xffffffb5                             ; CODE XREF=strmode+310
000000000000b983         add        eax, 0x78
000000000000b986         mov        byte [rsi+9], al
000000000000b989         mov        eax, 0x20
000000000000b98e         mov        word [rsi+0xa], ax
000000000000b992         ret
                        ; endp
000000000000b993         align      8

                     loc_b998:
000000000000b998         and        eax, 0xffffffb5                             ; CODE XREF=strmode+241
000000000000b99b         add        eax, 0x78
000000000000b99e         jmp        loc_b91d
000000000000b9a3         align      16                                          ; End of unwind block (FDE at 0x1722c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     filemodestring:
000000000000b9b0         mov        edi, dword [rdi+0x18]                       ; Begin of unwind block (FDE at 0x17240), argument "mode" for method strmode
000000000000b9b3         jmp        strmode                                     ; strmode
                        ; endp
000000000000b9b8         align      64                                          ; End of unwind block (FDE at 0x17240)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_41: int8_t, -65
        ;    var_50: int64_t, -80


                     file_name_concat:
000000000000b9c0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x17254), CODE XREF=do_copy+497, do_copy+924, copy_internal+7808, copy_internal+7828
000000000000b9c4         call       mfile_name_concat                           ; mfile_name_concat
000000000000b9c9         test       rax, rax
000000000000b9cc         je         loc_b9d3

000000000000b9ce         add        rsp, 0x8
000000000000b9d2         ret
                        ; endp

                     loc_b9d3:
000000000000b9d3         call       xalloc_die                                  ; xalloc_die, CODE XREF=file_name_concat+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_39: int8_t, -57
        ;    var_48: int64_t, -72


                     sub_b9d8:
000000000000b9d8         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x17254)
                     mfile_name_concat:
000000000000b9e0         push       r15                                         ; Begin of unwind block (FDE at 0x17274), CODE XREF=file_name_concat+4
000000000000b9e2         push       r14
000000000000b9e4         mov        r15, rdx
000000000000b9e7         push       r13
000000000000b9e9         push       r12
000000000000b9eb         mov        r12, rdi
000000000000b9ee         push       rbp
000000000000b9ef         push       rbx
000000000000b9f0         mov        rbp, rsi
000000000000b9f3         sub        rsp, 0x18
000000000000b9f7         call       last_component                              ; last_component
000000000000b9fc         mov        rbx, rax
000000000000b9ff         mov        rdi, rax                                    ; argument #1 for method base_len
000000000000ba02         call       base_len                                    ; base_len
000000000000ba07         sub        rbx, r12
000000000000ba0a         mov        r13, rax
000000000000ba0d         mov        rdi, rbp                                    ; argument "__s" for method j_strlen
000000000000ba10         add        rbx, rax
000000000000ba13         call       j_strlen                                    ; strlen
000000000000ba18         test       r13, r13
000000000000ba1b         mov        r14, rax
000000000000ba1e         je         loc_ba50

000000000000ba20         cmp        byte [r12+rbx-1], 0x2f
000000000000ba26         je         loc_bad0

000000000000ba2c         xor        eax, eax
000000000000ba2e         cmp        byte [rbp], 0x2f
000000000000ba32         mov        edx, 0x0
000000000000ba37         setne      al
000000000000ba3a         mov        qword [rsp+0x48+var_48], rax
000000000000ba3e         mov        eax, 0x2f
000000000000ba43         cmove      eax, edx
000000000000ba46         mov        byte [rsp+0x48+var_39], al
000000000000ba4a         jmp        loc_ba6e
000000000000ba4c         align      16

                     loc_ba50:
000000000000ba50         xor        eax, eax                                    ; CODE XREF=mfile_name_concat+62
000000000000ba52         cmp        byte [rbp], 0x2f
000000000000ba56         mov        edx, 0x0
000000000000ba5b         sete       al
000000000000ba5e         mov        qword [rsp+0x48+var_48], rax
000000000000ba62         mov        eax, 0x2e
000000000000ba67         cmovne     eax, edx
000000000000ba6a         mov        byte [rsp+0x48+var_39], al

                     loc_ba6e:
000000000000ba6e         lea        rdi, qword [rbx+r14+1]                      ; CODE XREF=mfile_name_concat+106, mfile_name_concat+253
000000000000ba73         add        rdi, qword [rsp+0x48+var_48]                ; argument "__size" for method j_malloc
000000000000ba77         call       j_malloc                                    ; malloc
000000000000ba7c         test       rax, rax
000000000000ba7f         mov        r13, rax
000000000000ba82         je         loc_bab6

000000000000ba84         mov        rdi, rax                                    ; argument "__dest" for method j_mempcpy
000000000000ba87         mov        rdx, rbx                                    ; argument "__n" for method j_mempcpy
000000000000ba8a         mov        rsi, r12                                    ; argument "__src" for method j_mempcpy
000000000000ba8d         call       j_mempcpy                                   ; mempcpy
000000000000ba92         movzx      ecx, byte [rsp+0x48+var_39]
000000000000ba97         mov        rdi, qword [rsp+0x48+var_48]
000000000000ba9b         add        rdi, rax
000000000000ba9e         test       r15, r15
000000000000baa1         mov        byte [rax], cl
000000000000baa3         je         loc_baa8

000000000000baa5         mov        qword [r15], rdi

                     loc_baa8:
000000000000baa8         mov        rdx, r14                                    ; argument "__n" for method j_mempcpy, CODE XREF=mfile_name_concat+195
000000000000baab         mov        rsi, rbp                                    ; argument "__src" for method j_mempcpy
000000000000baae         call       j_mempcpy                                   ; mempcpy
000000000000bab3         mov        byte [rax], 0x0

                     loc_bab6:
000000000000bab6         add        rsp, 0x18                                   ; CODE XREF=mfile_name_concat+162
000000000000baba         mov        rax, r13
000000000000babd         pop        rbx
000000000000babe         pop        rbp
000000000000babf         pop        r12
000000000000bac1         pop        r13
000000000000bac3         pop        r14
000000000000bac5         pop        r15
000000000000bac7         ret
                        ; endp
000000000000bac8         align      16

                     loc_bad0:
000000000000bad0         mov        qword [rsp+0x48+var_48], 0x0                ; CODE XREF=mfile_name_concat+70
000000000000bad8         mov        byte [rsp+0x48+var_39], 0x0
000000000000badd         jmp        loc_ba6e
000000000000badf         align      32                                          ; End of unwind block (FDE at 0x17274)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     full_write:
000000000000bae0         push       r13                                         ; Begin of unwind block (FDE at 0x172c4), CODE XREF=write_zeros+68, sparse_copy+518
000000000000bae2         push       r12
000000000000bae4         push       rbp
000000000000bae5         push       rbx
000000000000bae6         sub        rsp, 0x8
000000000000baea         test       rdx, rdx
000000000000baed         je         loc_bb51

000000000000baef         mov        r13d, edi
000000000000baf2         mov        rbp, rsi
000000000000baf5         mov        rbx, rdx
000000000000baf8         xor        r12d, r12d
000000000000bafb         jmp        loc_bb10
000000000000bafd         align      256

                     loc_bb00:
000000000000bb00         test       rax, rax                                    ; CODE XREF=full_write+66
000000000000bb03         je         loc_bb38

000000000000bb05         add        r12, rax
000000000000bb08         add        rbp, rax
000000000000bb0b         sub        rbx, rax
000000000000bb0e         je         loc_bb24

                     loc_bb10:
000000000000bb10         mov        rdx, rbx                                    ; CODE XREF=full_write+27
000000000000bb13         mov        rsi, rbp
000000000000bb16         mov        edi, r13d
000000000000bb19         call       safe_write                                  ; safe_write
000000000000bb1e         cmp        rax, 0xffffffffffffffff
000000000000bb22         jne        loc_bb00

                     loc_bb24:
000000000000bb24         add        rsp, 0x8                                    ; CODE XREF=full_write+46, full_write+116
000000000000bb28         mov        rax, r12
000000000000bb2b         pop        rbx
000000000000bb2c         pop        rbp
000000000000bb2d         pop        r12
000000000000bb2f         pop        r13
000000000000bb31         ret
                        ; endp
000000000000bb32         align      8

                     loc_bb38:
000000000000bb38         call       j___errno_location                          ; __errno_location, CODE XREF=full_write+35
000000000000bb3d         mov        dword [rax], 0x1c
000000000000bb43         add        rsp, 0x8
000000000000bb47         mov        rax, r12
000000000000bb4a         pop        rbx
000000000000bb4b         pop        rbp
000000000000bb4c         pop        r12
000000000000bb4e         pop        r13
000000000000bb50         ret
                        ; endp

                     loc_bb51:
000000000000bb51         xor        r12d, r12d                                  ; CODE XREF=full_write+13
000000000000bb54         jmp        loc_bb24
000000000000bb56         align      32                                          ; End of unwind block (FDE at 0x172c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     next_prime:
000000000000bb60         cmp        rdi, 0xa                                    ; Begin of unwind block (FDE at 0x17314), CODE XREF=hash_initialize+123, hash_rehash+123
000000000000bb64         mov        eax, 0xa
000000000000bb69         movabs     r9, 0xaaaaaaaaaaaaaaab
000000000000bb73         cmovb      rdi, rax
000000000000bb77         or         rdi, 0x1
000000000000bb7b         cmp        rdi, 0xffffffffffffffff
000000000000bb7f         je         loc_bbef

000000000000bb81         nop        dword [rax]

                     loc_bb88:
000000000000bb88         mov        rax, rdi                                    ; CODE XREF=next_prime+141
000000000000bb8b         mov        rcx, rdi
000000000000bb8e         mul        r9
000000000000bb91         mov        rax, rdx
000000000000bb94         shr        rax, 0x1
000000000000bb97         lea        rax, qword [rax+rax*2]
000000000000bb9b         sub        rcx, rax
000000000000bb9e         cmp        rdi, 0x9
000000000000bba2         mov        rax, rcx
000000000000bba5         jbe        loc_bbe0

000000000000bba7         test       rcx, rcx
000000000000bbaa         je         loc_bbe5

000000000000bbac         mov        r8d, 0x10
000000000000bbb2         mov        esi, 0x9
000000000000bbb7         mov        ecx, 0x3
000000000000bbbc         jmp        loc_bbc9
000000000000bbbe         align      64

                     loc_bbc0:
000000000000bbc0         add        r8, 0x8                                     ; CODE XREF=next_prime+126
000000000000bbc4         test       rdx, rdx
000000000000bbc7         je         loc_bbe5

                     loc_bbc9:
000000000000bbc9         add        rcx, 0x2                                    ; CODE XREF=next_prime+92
000000000000bbcd         xor        edx, edx
000000000000bbcf         mov        rax, rdi
000000000000bbd2         div        rcx
000000000000bbd5         add        rsi, r8
000000000000bbd8         cmp        rsi, rdi
000000000000bbdb         mov        rax, rdx
000000000000bbde         jb         loc_bbc0

                     loc_bbe0:
000000000000bbe0         test       rax, rax                                    ; CODE XREF=next_prime+69
000000000000bbe3         jne        loc_bbef

                     loc_bbe5:
000000000000bbe5         add        rdi, 0x2                                    ; CODE XREF=next_prime+74, next_prime+103
000000000000bbe9         cmp        rdi, 0xffffffffffffffff
000000000000bbed         jne        loc_bb88

                     loc_bbef:
000000000000bbef         mov        rax, rdi                                    ; CODE XREF=next_prime+31, next_prime+131
000000000000bbf2         ret
                        ; endp
000000000000bbf3         align      1024                                        ; End of unwind block (FDE at 0x17314)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_hasher:
000000000000bc00         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x17328), DATA XREF=hash_initialize+4
000000000000bc03         xor        edx, edx
000000000000bc05         ror        rax, 0x3
000000000000bc09         div        rsi
000000000000bc0c         mov        rax, rdx
000000000000bc0f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_comparator:
000000000000bc10         cmp        rdi, rsi                                    ; End of unwind block (FDE at 0x17328), Begin of unwind block (FDE at 0x1733c), DATA XREF=hash_initialize+48
000000000000bc13         sete       al
000000000000bc16         ret
                        ; endp
000000000000bc17         align      32                                          ; End of unwind block (FDE at 0x1733c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_hasher:
000000000000bc20         push       rbx                                         ; Begin of unwind block (FDE at 0x17350), CODE XREF=hash_find_entry+20, transfer_entries+101, transfer_entries+175, hash_lookup+10, hash_get_next+12
000000000000bc21         mov        rbx, rdi
000000000000bc24         mov        rdi, rsi
000000000000bc27         mov        rsi, qword [rbx+0x10]
000000000000bc2b         call       qword [rbx+0x30]
000000000000bc2e         cmp        qword [rbx+0x10], rax
000000000000bc32         jbe        loc_bc3d

000000000000bc34         shl        rax, 0x4
000000000000bc38         add        rax, qword [rbx]
000000000000bc3b         pop        rbx
000000000000bc3c         ret
                        ; endp

                     loc_bc3d:
000000000000bc3d         call       j_abort                                     ; abort, CODE XREF=safe_hasher+18
                        ; endp
000000000000bc42         align      16                                          ; End of unwind block (FDE at 0x17350)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_find_entry:
000000000000bc50         push       r14                                         ; Begin of unwind block (FDE at 0x1736c), CODE XREF=hash_insert_if_absent+52, hash_insert_if_absent+463, hash_delete+35
000000000000bc52         push       r13
000000000000bc54         mov        r14, rdx
000000000000bc57         push       r12
000000000000bc59         push       rbp
000000000000bc5a         mov        r12, rdi
000000000000bc5d         push       rbx
000000000000bc5e         mov        rbp, rsi
000000000000bc61         mov        r13d, ecx
000000000000bc64         call       safe_hasher                                 ; safe_hasher
000000000000bc69         mov        qword [r14], rax
000000000000bc6c         mov        rsi, qword [rax]
000000000000bc6f         test       rsi, rsi
000000000000bc72         je         loc_bd60

000000000000bc78         cmp        rsi, rbp
000000000000bc7b         mov        rbx, rax
000000000000bc7e         je         loc_bd13

000000000000bc84         mov        rdi, rbp
000000000000bc87         call       qword [r12+0x38]
000000000000bc8c         test       al, al
000000000000bc8e         jne        loc_bd10

000000000000bc94         mov        rax, qword [rbx+8]
000000000000bc98         test       rax, rax
000000000000bc9b         je         loc_bd60

000000000000bca1         mov        rsi, qword [rax]
000000000000bca4         cmp        rbp, rsi
000000000000bca7         jne        loc_bcc9

000000000000bca9         jmp        loc_bcdc
000000000000bcab         align      16

                     loc_bcb0:
000000000000bcb0         mov        rbx, qword [rbx+8]                          ; CODE XREF=hash_find_entry+131
000000000000bcb4         mov        rax, qword [rbx+8]
000000000000bcb8         test       rax, rax
000000000000bcbb         je         loc_bd60

000000000000bcc1         mov        rsi, qword [rax]
000000000000bcc4         cmp        rsi, rbp
000000000000bcc7         je         loc_bcdc

                     loc_bcc9:
000000000000bcc9         mov        rdi, rbp                                    ; CODE XREF=hash_find_entry+87
000000000000bccc         call       qword [r12+0x38]
000000000000bcd1         test       al, al
000000000000bcd3         je         loc_bcb0

000000000000bcd5         mov        rax, qword [rbx+8]
000000000000bcd9         mov        rsi, qword [rax]

                     loc_bcdc:
000000000000bcdc         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+89, hash_find_entry+119
000000000000bcdf         je         loc_bcfe

000000000000bce1         mov        rdx, qword [rax+8]
000000000000bce5         mov        qword [rbx+8], rdx
000000000000bce9         mov        qword [rax], 0x0
000000000000bcf0         mov        rdx, qword [r12+0x48]
000000000000bcf5         mov        qword [rax+8], rdx
000000000000bcf9         mov        qword [r12+0x48], rax

                     loc_bcfe:
000000000000bcfe         pop        rbx                                         ; CODE XREF=hash_find_entry+143, hash_find_entry+198, hash_find_entry+263
000000000000bcff         mov        rax, rsi
000000000000bd02         pop        rbp
000000000000bd03         pop        r12
000000000000bd05         pop        r13
000000000000bd07         pop        r14
000000000000bd09         ret
                        ; endp
000000000000bd0a         align      16

                     loc_bd10:
000000000000bd10         mov        rsi, qword [rbx]                            ; CODE XREF=hash_find_entry+62

                     loc_bd13:
000000000000bd13         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+46
000000000000bd16         je         loc_bcfe

000000000000bd18         mov        rax, qword [rbx+8]
000000000000bd1c         test       rax, rax
000000000000bd1f         je         loc_bd50

000000000000bd21         movdqu     xmm0, xmmword [rax]
000000000000bd25         movups     xmmword [rbx], xmm0
000000000000bd28         mov        qword [rax], 0x0
000000000000bd2f         mov        rdx, qword [r12+0x48]
000000000000bd34         mov        qword [rax+8], rdx
000000000000bd38         mov        qword [r12+0x48], rax
000000000000bd3d         mov        rax, rsi
000000000000bd40         pop        rbx
000000000000bd41         pop        rbp
000000000000bd42         pop        r12
000000000000bd44         pop        r13
000000000000bd46         pop        r14
000000000000bd48         ret
                        ; endp
000000000000bd49         align      16

                     loc_bd50:
000000000000bd50         mov        qword [rbx], 0x0                            ; CODE XREF=hash_find_entry+207
000000000000bd57         jmp        loc_bcfe
000000000000bd59         align      32

                     loc_bd60:
000000000000bd60         xor        esi, esi                                    ; CODE XREF=hash_find_entry+34, hash_find_entry+75, hash_find_entry+107
000000000000bd62         pop        rbx
000000000000bd63         mov        rax, rsi
000000000000bd66         pop        rbp
000000000000bd67         pop        r12
000000000000bd69         pop        r13
000000000000bd6b         pop        r14
000000000000bd6d         ret
                        ; endp
000000000000bd6e         align      16                                          ; End of unwind block (FDE at 0x1736c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     check_tuning.isra.0:
000000000000bd70         mov        rdx, qword [rdi]                            ; Begin of unwind block (FDE at 0x173cc), CODE XREF=hash_initialize+96, hash_initialize+283, hash_insert_if_absent+324, hash_delete+165
000000000000bd73         lea        rcx, qword [default_tuning]                 ; default_tuning
000000000000bd7a         mov        eax, 0x1
000000000000bd7f         cmp        rdx, rcx
000000000000bd82         je         loc_bde5

000000000000bd84         movss      xmm0, dword [rdx+8]
000000000000bd89         ucomiss    xmm0, dword [float_152b4]                   ; float_152b4
000000000000bd90         jbe        loc_bde0

000000000000bd92         movss      xmm1, dword [float_152b8]                   ; float_152b8
000000000000bd9a         ucomiss    xmm1, xmm0
000000000000bd9d         jbe        loc_bde0

000000000000bd9f         movss      xmm1, dword [rdx+0xc]
000000000000bda4         ucomiss    xmm1, dword [float_152bc]                   ; float_152bc
000000000000bdab         jbe        loc_bde0

000000000000bdad         movss      xmm1, dword [rdx]
000000000000bdb1         ucomiss    xmm1, dword [float_152c0]                   ; float_152c0
000000000000bdb8         jb         loc_bde0

000000000000bdba         addss      xmm1, dword [float_152b4]                   ; float_152b4
000000000000bdc2         movss      xmm2, dword [rdx+4]
000000000000bdc7         ucomiss    xmm2, xmm1
000000000000bdca         jbe        loc_bde0

000000000000bdcc         movss      xmm3, dword [float_152c4]                   ; float_152c4
000000000000bdd4         ucomiss    xmm3, xmm2
000000000000bdd7         jb         loc_bde0

000000000000bdd9         ucomiss    xmm0, xmm1
000000000000bddc         ja         loc_bde5

000000000000bdde         nop

                     loc_bde0:
000000000000bde0         mov        qword [rdi], rcx                            ; CODE XREF=check_tuning.isra.0+32, check_tuning.isra.0+45, check_tuning.isra.0+59, check_tuning.isra.0+72, check_tuning.isra.0+90, check_tuning.isra.0+103
000000000000bde3         xor        eax, eax

                     loc_bde5:
000000000000bde5         ret                                                    ; CODE XREF=check_tuning.isra.0+18, check_tuning.isra.0+108
                        ; endp
000000000000bde7         align      16                                          ; End of unwind block (FDE at 0x173cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     transfer_entries:
000000000000bdf0         push       r15                                         ; Begin of unwind block (FDE at 0x173e0), CODE XREF=hash_rehash+303, hash_rehash+338, hash_rehash+359
000000000000bdf2         push       r14
000000000000bdf4         push       r13
000000000000bdf6         push       r12
000000000000bdf8         push       rbp
000000000000bdf9         push       rbx
000000000000bdfa         sub        rsp, 0x8
000000000000bdfe         mov        r12, qword [rsi]
000000000000be01         cmp        r12, qword [rsi+8]
000000000000be05         jae        loc_bee8

000000000000be0b         mov        rbp, rdi
000000000000be0e         mov        r13, rsi
000000000000be11         mov        r14d, edx
000000000000be14         nop        dword [rax]

                     loc_be18:
000000000000be18         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+242
000000000000be1c         test       r15, r15
000000000000be1f         je         loc_beda

000000000000be25         mov        rbx, qword [r12+8]
000000000000be2a         test       rbx, rbx
000000000000be2d         jne        loc_be4c

000000000000be2f         jmp        loc_be8b
000000000000be31         align      8

                     loc_be38:
000000000000be38         mov        rcx, qword [rax+8]                          ; CODE XREF=transfer_entries+114
000000000000be3c         test       rdx, rdx
000000000000be3f         mov        qword [rbx+8], rcx
000000000000be43         mov        qword [rax+8], rbx
000000000000be47         mov        rbx, rdx
000000000000be4a         je         loc_be87

                     loc_be4c:
000000000000be4c         mov        r15, qword [rbx]                            ; CODE XREF=transfer_entries+61, transfer_entries+149
000000000000be4f         mov        rdi, rbp
000000000000be52         mov        rsi, r15
000000000000be55         call       safe_hasher                                 ; safe_hasher
000000000000be5a         cmp        qword [rax], 0x0
000000000000be5e         mov        rdx, qword [rbx+8]
000000000000be62         jne        loc_be38

000000000000be64         mov        qword [rax], r15
000000000000be67         add        qword [rbp+0x18], 0x1
000000000000be6c         test       rdx, rdx
000000000000be6f         mov        qword [rbx], 0x0
000000000000be76         mov        rax, qword [rbp+0x48]
000000000000be7a         mov        qword [rbx+8], rax
000000000000be7e         mov        qword [rbp+0x48], rbx
000000000000be82         mov        rbx, rdx
000000000000be85         jne        loc_be4c

                     loc_be87:
000000000000be87         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+90

                     loc_be8b:
000000000000be8b         test       r14b, r14b                                  ; CODE XREF=transfer_entries+63
000000000000be8e         mov        qword [r12+8], 0x0
000000000000be97         jne        loc_beda

000000000000be99         mov        rsi, r15
000000000000be9c         mov        rdi, rbp
000000000000be9f         call       safe_hasher                                 ; safe_hasher
000000000000bea4         cmp        qword [rax], 0x0
000000000000bea8         mov        rbx, rax
000000000000beab         je         loc_bf00

000000000000bead         mov        rax, qword [rbp+0x48]
000000000000beb1         test       rax, rax
000000000000beb4         je         loc_bf10

000000000000beb6         mov        rdx, qword [rax+8]
000000000000beba         mov        qword [rbp+0x48], rdx

                     loc_bebe:
000000000000bebe         mov        rdx, qword [rbx+8]                          ; CODE XREF=transfer_entries+301
000000000000bec2         mov        qword [rax], r15
000000000000bec5         mov        qword [rax+8], rdx
000000000000bec9         mov        qword [rbx+8], rax

                     loc_becd:
000000000000becd         mov        qword [r12], 0x0                            ; CODE XREF=transfer_entries+280
000000000000bed5         sub        qword [r13+0x18], 0x1

                     loc_beda:
000000000000beda         add        r12, 0x10                                   ; CODE XREF=transfer_entries+47, transfer_entries+167
000000000000bede         cmp        qword [r13+8], r12
000000000000bee2         ja         loc_be18

                     loc_bee8:
000000000000bee8         add        rsp, 0x8                                    ; CODE XREF=transfer_entries+21
000000000000beec         mov        eax, 0x1
000000000000bef1         pop        rbx
000000000000bef2         pop        rbp
000000000000bef3         pop        r12
000000000000bef5         pop        r13
000000000000bef7         pop        r14
000000000000bef9         pop        r15
000000000000befb         ret
                        ; endp
000000000000befc         align      256

                     loc_bf00:
000000000000bf00         mov        qword [rax], r15                            ; CODE XREF=transfer_entries+187
000000000000bf03         add        qword [rbp+0x18], 0x1
000000000000bf08         jmp        loc_becd
000000000000bf0a         align      16

                     loc_bf10:
000000000000bf10         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=transfer_entries+196
000000000000bf15         call       j_malloc                                    ; malloc
000000000000bf1a         test       rax, rax
000000000000bf1d         jne        loc_bebe

000000000000bf1f         add        rsp, 0x8
000000000000bf23         xor        eax, eax
000000000000bf25         pop        rbx
000000000000bf26         pop        rbp
000000000000bf27         pop        r12
000000000000bf29         pop        r13
000000000000bf2b         pop        r14
000000000000bf2d         pop        r15
000000000000bf2f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets:
000000000000bf30         mov        rax, qword [rdi+0x10]                       ; End of unwind block (FDE at 0x173e0), Begin of unwind block (FDE at 0x17440)
000000000000bf34         ret
                        ; endp
000000000000bf35         align      64                                          ; End of unwind block (FDE at 0x17440)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets_used:
000000000000bf40         mov        rax, qword [rdi+0x18]                       ; Begin of unwind block (FDE at 0x17454)
000000000000bf44         ret
                        ; endp
000000000000bf45         align      16                                          ; End of unwind block (FDE at 0x17454)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_entries:
000000000000bf50         mov        rax, qword [rdi+0x20]                       ; Begin of unwind block (FDE at 0x17468)
000000000000bf54         ret
                        ; endp
000000000000bf55         align      32                                          ; End of unwind block (FDE at 0x17468)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_max_bucket_length:
000000000000bf60         mov        rsi, qword [rdi]                            ; Begin of unwind block (FDE at 0x1747c)
000000000000bf63         mov        rdi, qword [rdi+8]
000000000000bf67         xor        eax, eax
000000000000bf69         cmp        rsi, rdi
000000000000bf6c         jae        loc_bfa7

000000000000bf6e         nop

                     loc_bf70:
000000000000bf70         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_get_max_bucket_length+67
000000000000bf74         je         loc_bf9c

000000000000bf76         mov        rdx, qword [rsi+8]
000000000000bf7a         mov        ecx, 0x1
000000000000bf7f         test       rdx, rdx
000000000000bf82         je         loc_bf95

000000000000bf84         nop        dword [rax]

                     loc_bf88:
000000000000bf88         mov        rdx, qword [rdx+8]                          ; CODE XREF=hash_get_max_bucket_length+51
000000000000bf8c         add        rcx, 0x1
000000000000bf90         test       rdx, rdx
000000000000bf93         jne        loc_bf88

                     loc_bf95:
000000000000bf95         cmp        rax, rcx                                    ; CODE XREF=hash_get_max_bucket_length+34
000000000000bf98         cmovb      rax, rcx

                     loc_bf9c:
000000000000bf9c         add        rsi, 0x10                                   ; CODE XREF=hash_get_max_bucket_length+20
000000000000bfa0         cmp        rsi, rdi
000000000000bfa3         jb         loc_bf70

000000000000bfa5         ret
                        ; endp

                     loc_bfa7:
000000000000bfa7         ret                                                    ; CODE XREF=hash_get_max_bucket_length+12
                        ; endp
000000000000bfa9         align      16                                          ; End of unwind block (FDE at 0x1747c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_table_ok:
000000000000bfb0         mov        rcx, qword [rdi]                            ; Begin of unwind block (FDE at 0x17490)
000000000000bfb3         mov        r8, qword [rdi+8]
000000000000bfb7         xor        edx, edx
000000000000bfb9         xor        esi, esi
000000000000bfbb         cmp        rcx, r8
000000000000bfbe         jae        loc_bff6

                     loc_bfc0:
000000000000bfc0         cmp        qword [rcx], 0x0                            ; CODE XREF=hash_table_ok+68
000000000000bfc4         je         loc_bfed

000000000000bfc6         mov        rax, qword [rcx+8]
000000000000bfca         add        rsi, 0x1
000000000000bfce         add        rdx, 0x1
000000000000bfd2         test       rax, rax
000000000000bfd5         je         loc_bfed

000000000000bfd7         nop        word [rax+rax]

                     loc_bfe0:
000000000000bfe0         mov        rax, qword [rax+8]                          ; CODE XREF=hash_table_ok+59
000000000000bfe4         add        rdx, 0x1
000000000000bfe8         test       rax, rax
000000000000bfeb         jne        loc_bfe0

                     loc_bfed:
000000000000bfed         add        rcx, 0x10                                   ; CODE XREF=hash_table_ok+20, hash_table_ok+37
000000000000bff1         cmp        rcx, r8
000000000000bff4         jb         loc_bfc0

                     loc_bff6:
000000000000bff6         xor        eax, eax                                    ; CODE XREF=hash_table_ok+14
000000000000bff8         cmp        qword [rdi+0x18], rsi
000000000000bffc         je         loc_c000

000000000000bffe         ret
                        ; endp

                     loc_c000:
000000000000c000         cmp        qword [rdi+0x20], rdx                       ; CODE XREF=hash_table_ok+76, DATA XREF=copy_internal+6344, strmode+86
000000000000c004         sete       al
000000000000c007         ret
                        ; endp
000000000000c008         align      16                                          ; End of unwind block (FDE at 0x17490)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_print_statistics:
000000000000c010         push       r13                                         ; Begin of unwind block (FDE at 0x174a4)
000000000000c012         push       r12
000000000000c014         mov        r12, rsi
000000000000c017         push       rbp
000000000000c018         push       rbx
000000000000c019         xor        ebx, ebx
000000000000c01b         sub        rsp, 0x8
000000000000c01f         mov        rsi, qword [rdi]
000000000000c022         mov        rcx, qword [rdi+0x20]
000000000000c026         mov        rbp, qword [rdi+0x10]
000000000000c02a         mov        r13, qword [rdi+0x18]
000000000000c02e         mov        rdi, qword [rdi+8]
000000000000c032         cmp        rsi, rdi
000000000000c035         jae        loc_c075

000000000000c037         nop        word [rax+rax]

                     loc_c040:
000000000000c040         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_print_statistics+99
000000000000c044         je         loc_c06c

000000000000c046         mov        rax, qword [rsi+8]
000000000000c04a         mov        edx, 0x1
000000000000c04f         test       rax, rax
000000000000c052         je         loc_c065

000000000000c054         nop        dword [rax]

                     loc_c058:
000000000000c058         mov        rax, qword [rax+8]                          ; CODE XREF=hash_print_statistics+83
000000000000c05c         add        rdx, 0x1
000000000000c060         test       rax, rax
000000000000c063         jne        loc_c058

                     loc_c065:
000000000000c065         cmp        rbx, rdx                                    ; CODE XREF=hash_print_statistics+66
000000000000c068         cmovb      rbx, rdx

                     loc_c06c:
000000000000c06c         add        rsi, 0x10                                   ; CODE XREF=hash_print_statistics+52
000000000000c070         cmp        rsi, rdi
000000000000c073         jb         loc_c040

                     loc_c075:
000000000000c075         lea        rdx, qword [aEntriesLun]                    ; "# entries:         %lu\\n", CODE XREF=hash_print_statistics+37
000000000000c07c         mov        esi, 0x1
000000000000c081         mov        rdi, r12
000000000000c084         xor        eax, eax
000000000000c086         call       j___fprintf_chk                             ; __fprintf_chk
000000000000c08b         lea        rdx, qword [aBucketsLun]                    ; "# buckets:         %lu\\n"
000000000000c092         xor        eax, eax
000000000000c094         mov        rcx, rbp
000000000000c097         mov        esi, 0x1
000000000000c09c         mov        rdi, r12
000000000000c09f         call       j___fprintf_chk                             ; __fprintf_chk
000000000000c0a4         test       r13, r13
000000000000c0a7         js         loc_c110

000000000000c0a9         pxor       xmm0, xmm0
000000000000c0ad         test       rbp, rbp
000000000000c0b0         cvtsi2sd   xmm0, r13
000000000000c0b5         mulsd      xmm0, qword [float_152d0+8]                 ; 0x152d8
000000000000c0bd         js         loc_c139

                     loc_c0bf:
000000000000c0bf         pxor       xmm1, xmm1                                  ; CODE XREF=hash_print_statistics+295
000000000000c0c3         cvtsi2sd   xmm1, rbp

                     loc_c0c8:
000000000000c0c8         divsd      xmm0, xmm1                                  ; CODE XREF=hash_print_statistics+322
000000000000c0cc         lea        rdx, qword [aBucketsUsedLu2]                ; "# buckets used:    %lu (%.2f%%)\\n"
000000000000c0d3         mov        rcx, r13
000000000000c0d6         mov        rdi, r12
000000000000c0d9         mov        esi, 0x1
000000000000c0de         mov        eax, 0x1
000000000000c0e3         call       j___fprintf_chk                             ; __fprintf_chk
000000000000c0e8         add        rsp, 0x8
000000000000c0ec         mov        rcx, rbx
000000000000c0ef         mov        rdi, r12
000000000000c0f2         pop        rbx
000000000000c0f3         pop        rbp
000000000000c0f4         pop        r12
000000000000c0f6         pop        r13
000000000000c0f8         lea        rdx, qword [aMaxBucketLengt]                ; "max bucket length: %lu\\n"
000000000000c0ff         mov        esi, 0x1
000000000000c104         xor        eax, eax
000000000000c106         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
000000000000c10b         align      16

                     loc_c110:
000000000000c110         mov        rax, r13                                    ; CODE XREF=hash_print_statistics+151
000000000000c113         mov        rdx, r13
000000000000c116         pxor       xmm0, xmm0
000000000000c11a         shr        rax, 0x1
000000000000c11d         and        edx, 0x1
000000000000c120         or         rax, rdx
000000000000c123         test       rbp, rbp
000000000000c126         cvtsi2sd   xmm0, rax
000000000000c12b         addsd      xmm0, xmm0
000000000000c12f         mulsd      xmm0, qword [float_152d0+8]                 ; 0x152d8
000000000000c137         jns        loc_c0bf

                     loc_c139:
000000000000c139         mov        rax, rbp                                    ; CODE XREF=hash_print_statistics+173
000000000000c13c         pxor       xmm1, xmm1
000000000000c140         shr        rax, 0x1
000000000000c143         and        ebp, 0x1
000000000000c146         or         rax, rbp
000000000000c149         cvtsi2sd   xmm1, rax
000000000000c14e         addsd      xmm1, xmm1
000000000000c152         jmp        loc_c0c8
000000000000c157         align      32                                          ; End of unwind block (FDE at 0x174a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_lookup:
000000000000c160         push       r12                                         ; Begin of unwind block (FDE at 0x174e0), CODE XREF=src_to_dest_lookup+39, seen_file+49, utimecmpat+528
000000000000c162         push       rbp
000000000000c163         mov        r12, rdi
000000000000c166         push       rbx
000000000000c167         mov        rbp, rsi
000000000000c16a         call       safe_hasher                                 ; safe_hasher
000000000000c16f         mov        rsi, qword [rax]
000000000000c172         test       rsi, rsi
000000000000c175         je         loc_c19d

000000000000c177         mov        rbx, rax
000000000000c17a         jmp        loc_c183
000000000000c17c         align      128

                     loc_c180:
000000000000c180         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+59

                     loc_c183:
000000000000c183         cmp        rsi, rbp                                    ; CODE XREF=hash_lookup+26
000000000000c186         je         loc_c19f

000000000000c188         mov        rdi, rbp
000000000000c18b         call       qword [r12+0x38]
000000000000c190         test       al, al
000000000000c192         jne        loc_c1b0

000000000000c194         mov        rbx, qword [rbx+8]
000000000000c198         test       rbx, rbx
000000000000c19b         jne        loc_c180

                     loc_c19d:
000000000000c19d         xor        esi, esi                                    ; CODE XREF=hash_lookup+21

                     loc_c19f:
000000000000c19f         pop        rbx                                         ; CODE XREF=hash_lookup+38
000000000000c1a0         mov        rax, rsi
000000000000c1a3         pop        rbp
000000000000c1a4         pop        r12
000000000000c1a6         ret
                        ; endp
000000000000c1a7         align      16

                     loc_c1b0:
000000000000c1b0         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+50
000000000000c1b3         pop        rbx
000000000000c1b4         pop        rbp
000000000000c1b5         mov        rax, rsi
000000000000c1b8         pop        r12
000000000000c1ba         ret
                        ; endp
000000000000c1bb         align      64                                          ; End of unwind block (FDE at 0x174e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_first:
000000000000c1c0         cmp        qword [rdi+0x20], 0x0                       ; Begin of unwind block (FDE at 0x17518)
000000000000c1c5         je         loc_c1f3

000000000000c1c7         mov        rdx, qword [rdi]
000000000000c1ca         mov        rcx, qword [rdi+8]
000000000000c1ce         cmp        rdx, rcx
000000000000c1d1         jae        loc_c1f8

000000000000c1d3         mov        rax, qword [rdx]
000000000000c1d6         test       rax, rax
000000000000c1d9         jne        loc_c1f6

000000000000c1db         nop        dword [rax+rax]

                     loc_c1e0:
000000000000c1e0         add        rdx, 0x10                                   ; CODE XREF=hash_get_first+47
000000000000c1e4         cmp        rdx, rcx
000000000000c1e7         jae        loc_c1f8

000000000000c1e9         mov        rax, qword [rdx]
000000000000c1ec         test       rax, rax
000000000000c1ef         je         loc_c1e0

000000000000c1f1         ret
                        ; endp

                     loc_c1f3:
000000000000c1f3         xor        eax, eax                                    ; CODE XREF=hash_get_first+5
000000000000c1f5         ret
                        ; endp

                     loc_c1f6:
000000000000c1f6         ret                                                    ; CODE XREF=hash_get_first+25
                        ; endp

                     loc_c1f8:
000000000000c1f8         sub        rsp, 0x8                                    ; CODE XREF=hash_get_first+17, hash_get_first+39
000000000000c1fc         call       j_abort                                     ; abort
                        ; endp
000000000000c201         align      16                                          ; End of unwind block (FDE at 0x17518)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_next:
000000000000c210         push       rbp                                         ; Begin of unwind block (FDE at 0x1752c)
000000000000c211         push       rbx
000000000000c212         mov        rbp, rdi
000000000000c215         mov        rbx, rsi
000000000000c218         sub        rsp, 0x8
000000000000c21c         call       safe_hasher                                 ; safe_hasher
000000000000c221         mov        rdx, rax
000000000000c224         mov        rcx, rax
000000000000c227         mov        rax, qword [rdx]
000000000000c22a         mov        rdx, qword [rdx+8]
000000000000c22e         cmp        rax, rbx
000000000000c231         je         loc_c249

000000000000c233         nop        dword [rax+rax]

                     loc_c238:
000000000000c238         test       rdx, rdx                                    ; CODE XREF=hash_get_next+55
000000000000c23b         je         loc_c24e

000000000000c23d         mov        rax, qword [rdx]
000000000000c240         mov        rdx, qword [rdx+8]
000000000000c244         cmp        rax, rbx
000000000000c247         jne        loc_c238

                     loc_c249:
000000000000c249         test       rdx, rdx                                    ; CODE XREF=hash_get_next+33
000000000000c24c         jne        loc_c278

                     loc_c24e:
000000000000c24e         mov        rdx, qword [rbp+8]                          ; CODE XREF=hash_get_next+43
000000000000c252         jmp        loc_c260
000000000000c254         align      8

                     loc_c258:
000000000000c258         mov        rax, qword [rcx]                            ; CODE XREF=hash_get_next+87
000000000000c25b         test       rax, rax
000000000000c25e         jne        loc_c26b

                     loc_c260:
000000000000c260         add        rcx, 0x10                                   ; CODE XREF=hash_get_next+66
000000000000c264         cmp        rdx, rcx
000000000000c267         ja         loc_c258

000000000000c269         xor        eax, eax

                     loc_c26b:
000000000000c26b         add        rsp, 0x8                                    ; CODE XREF=hash_get_next+78
000000000000c26f         pop        rbx
000000000000c270         pop        rbp
000000000000c271         ret
                        ; endp
000000000000c272         align      8

                     loc_c278:
000000000000c278         mov        rax, qword [rdx]                            ; CODE XREF=hash_get_next+60
000000000000c27b         add        rsp, 0x8
000000000000c27f         pop        rbx
000000000000c280         pop        rbp
000000000000c281         ret
                        ; endp
000000000000c282         align      16                                          ; End of unwind block (FDE at 0x1752c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_entries:
000000000000c290         mov        r9, qword [rdi]                             ; Begin of unwind block (FDE at 0x17560)
000000000000c293         cmp        qword [rdi+8], r9
000000000000c297         jbe        loc_c2f2

000000000000c299         xor        r8d, r8d

                     loc_c29c:
000000000000c29c         mov        rcx, qword [r9]                             ; CODE XREF=hash_get_entries+85
000000000000c29f         test       rcx, rcx
000000000000c2a2         je         loc_c2dd

000000000000c2a4         cmp        rdx, r8
000000000000c2a7         jbe        loc_c2e7

000000000000c2a9         mov        qword [rsi+r8*8], rcx
000000000000c2ad         mov        rcx, qword [r9+8]
000000000000c2b1         lea        rax, qword [r8+1]
000000000000c2b5         test       rcx, rcx
000000000000c2b8         je         loc_c2da

000000000000c2ba         nop        word [rax+rax]

                     loc_c2c0:
000000000000c2c0         cmp        rdx, rax                                    ; CODE XREF=hash_get_entries+72
000000000000c2c3         je         loc_c2f0

000000000000c2c5         mov        r8, qword [rcx]
000000000000c2c8         add        rax, 0x1
000000000000c2cc         mov        qword [rsi+rax*8-8], r8
000000000000c2d1         mov        rcx, qword [rcx+8]
000000000000c2d5         test       rcx, rcx
000000000000c2d8         jne        loc_c2c0

                     loc_c2da:
000000000000c2da         mov        r8, rax                                     ; CODE XREF=hash_get_entries+40

                     loc_c2dd:
000000000000c2dd         add        r9, 0x10                                    ; CODE XREF=hash_get_entries+18
000000000000c2e1         cmp        qword [rdi+8], r9
000000000000c2e5         ja         loc_c29c

                     loc_c2e7:
000000000000c2e7         mov        rax, r8                                     ; CODE XREF=hash_get_entries+23
000000000000c2ea         ret
                        ; endp
000000000000c2eb         align      16

                     loc_c2f0:
000000000000c2f0         ret                                                    ; CODE XREF=hash_get_entries+51
                        ; endp

                     loc_c2f2:
000000000000c2f2         xor        eax, eax                                    ; CODE XREF=hash_get_entries+7
000000000000c2f4         ret
                        ; endp
000000000000c2f5         align      256                                         ; End of unwind block (FDE at 0x17560)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_do_for_each:
000000000000c300         push       r15                                         ; Begin of unwind block (FDE at 0x17574)
000000000000c302         push       r14
000000000000c304         push       r13
000000000000c306         push       r12
000000000000c308         push       rbp
000000000000c309         push       rbx
000000000000c30a         sub        rsp, 0x8
000000000000c30e         mov        r14, qword [rdi]
000000000000c311         cmp        qword [rdi+8], r14
000000000000c315         jbe        loc_c366

000000000000c317         mov        r13, rdx
000000000000c31a         mov        r12, rsi
000000000000c31d         mov        r15, rdi
000000000000c320         xor        ebp, ebp

                     loc_c322:
000000000000c322         mov        rdi, qword [r14]                            ; CODE XREF=hash_do_for_each+82
000000000000c325         test       rdi, rdi
000000000000c328         je         loc_c34a

000000000000c32a         mov        rbx, r14
000000000000c32d         jmp        loc_c333
000000000000c32f         align      16

                     loc_c330:
000000000000c330         mov        rdi, qword [rbx]                            ; CODE XREF=hash_do_for_each+72

                     loc_c333:
000000000000c333         mov        rsi, r13                                    ; CODE XREF=hash_do_for_each+45
000000000000c336         call       r12
000000000000c339         test       al, al
000000000000c33b         je         loc_c354

000000000000c33d         mov        rbx, qword [rbx+8]
000000000000c341         add        rbp, 0x1
000000000000c345         test       rbx, rbx
000000000000c348         jne        loc_c330

                     loc_c34a:
000000000000c34a         add        r14, 0x10                                   ; CODE XREF=hash_do_for_each+40
000000000000c34e         cmp        qword [r15+8], r14
000000000000c352         ja         loc_c322

                     loc_c354:
000000000000c354         add        rsp, 0x8                                    ; CODE XREF=hash_do_for_each+59, hash_do_for_each+104
000000000000c358         mov        rax, rbp
000000000000c35b         pop        rbx
000000000000c35c         pop        rbp
000000000000c35d         pop        r12
000000000000c35f         pop        r13
000000000000c361         pop        r14
000000000000c363         pop        r15
000000000000c365         ret
                        ; endp

                     loc_c366:
000000000000c366         xor        ebp, ebp                                    ; CODE XREF=hash_do_for_each+21
000000000000c368         jmp        loc_c354
000000000000c36a         align      16                                          ; End of unwind block (FDE at 0x17574)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_string:
000000000000c370         movzx      ecx, byte [rdi]                             ; Begin of unwind block (FDE at 0x175c0)
000000000000c373         xor        edx, edx
000000000000c375         test       cl, cl
000000000000c377         je         loc_c39d

000000000000c379         nop        dword [rax]

                     loc_c380:
000000000000c380         mov        rax, rdx                                    ; CODE XREF=hash_string+43
000000000000c383         add        rdi, 0x1
000000000000c387         shl        rax, 0x5
000000000000c38b         sub        rax, rdx
000000000000c38e         xor        edx, edx
000000000000c390         add        rax, rcx
000000000000c393         movzx      ecx, byte [rdi]
000000000000c396         div        rsi
000000000000c399         test       cl, cl
000000000000c39b         jne        loc_c380

                     loc_c39d:
000000000000c39d         mov        rax, rdx                                    ; CODE XREF=hash_string+7
000000000000c3a0         ret
                        ; endp
000000000000c3a1         align      16                                          ; End of unwind block (FDE at 0x175c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_reset_tuning:
000000000000c3b0         movabs     rax, 0x3f80000000000000                     ; Begin of unwind block (FDE at 0x175d4)
000000000000c3ba         mov        byte [rdi+0x10], 0x0
000000000000c3be         mov        qword [rdi], rax
000000000000c3c1         movabs     rax, 0x3fb4fdf43f4ccccd
000000000000c3cb         mov        qword [rdi+8], rax
000000000000c3cf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_initialize:
000000000000c3d0         push       r15                                         ; End of unwind block (FDE at 0x175d4), Begin of unwind block (FDE at 0x175e8), CODE XREF=dest_info_init+32, src_info_init+32, hash_init+32, utimecmpat+1627
000000000000c3d2         push       r14
000000000000c3d4         lea        rax, qword [raw_hasher]                     ; raw_hasher
000000000000c3db         push       r13
000000000000c3dd         push       r12
000000000000c3df         mov        r12, rdx
000000000000c3e2         push       rbp
000000000000c3e3         push       rbx
000000000000c3e4         mov        r13, rcx
000000000000c3e7         mov        rbp, rdi
000000000000c3ea         mov        edi, 0x50                                   ; argument "__size" for method j_malloc
000000000000c3ef         mov        r15, rsi
000000000000c3f2         sub        rsp, 0x8
000000000000c3f6         test       rdx, rdx
000000000000c3f9         mov        r14, r8
000000000000c3fc         cmove      r12, rax
000000000000c400         lea        rax, qword [raw_comparator]                 ; raw_comparator
000000000000c407         test       rcx, rcx
000000000000c40a         cmove      r13, rax
000000000000c40e         call       j_malloc                                    ; malloc
000000000000c413         test       rax, rax
000000000000c416         mov        rbx, rax
000000000000c419         je         loc_c4ca

000000000000c41f         test       r15, r15
000000000000c422         lea        rdi, qword [rax+0x28]
000000000000c426         je         loc_c4e0

000000000000c42c         mov        qword [rax+0x28], r15
000000000000c430         call       check_tuning.isra.0                         ; check_tuning.isra.0
000000000000c435         test       al, al
000000000000c437         je         loc_c4c0

000000000000c43d         cmp        byte [r15+0x10], 0x0
000000000000c442         je         loc_c540

                     loc_c448:
000000000000c448         mov        rdi, rbp                                    ; CODE XREF=hash_initialize+362, hash_initialize+421
000000000000c44b         call       next_prime                                  ; next_prime
000000000000c450         mov        edx, 0x8
000000000000c455         mov        rbp, rax
000000000000c458         xor        ecx, ecx
000000000000c45a         mov        rax, rdx
000000000000c45d         mul        rbp
000000000000c460         jo         loc_c57a

                     loc_c466:
000000000000c466         test       rax, rax                                    ; CODE XREF=hash_initialize+431
000000000000c469         js         loc_c4c0

000000000000c46b         test       rcx, rcx
000000000000c46e         jne        loc_c4c0

000000000000c470         test       rbp, rbp
000000000000c473         mov        qword [rbx+0x10], rbp
000000000000c477         je         loc_c4c0

000000000000c479         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
000000000000c47e         mov        rdi, rbp                                    ; argument "__nmemb" for method j_calloc
000000000000c481         call       j_calloc                                    ; calloc
000000000000c486         test       rax, rax
000000000000c489         mov        qword [rbx], rax
000000000000c48c         je         loc_c4c0

000000000000c48e         shl        rbp, 0x4
000000000000c492         mov        qword [rbx+0x18], 0x0
000000000000c49a         mov        qword [rbx+0x20], 0x0
000000000000c4a2         add        rbp, rax
000000000000c4a5         mov        qword [rbx+0x30], r12
000000000000c4a9         mov        qword [rbx+0x38], r13
000000000000c4ad         mov        qword [rbx+8], rbp
000000000000c4b1         mov        qword [rbx+0x40], r14
000000000000c4b5         mov        qword [rbx+0x48], 0x0
000000000000c4bd         jmp        loc_c4ca
000000000000c4bf         align      64

                     loc_c4c0:
000000000000c4c0         mov        rdi, rbx                                    ; CODE XREF=hash_initialize+103, hash_initialize+153, hash_initialize+158, hash_initialize+167, hash_initialize+188, hash_initialize+298, hash_initialize+325
000000000000c4c3         xor        ebx, ebx
000000000000c4c5         call       sub_2e10                                    ; sub_2e10

                     loc_c4ca:
000000000000c4ca         add        rsp, 0x8                                    ; CODE XREF=hash_initialize+73, hash_initialize+237
000000000000c4ce         mov        rax, rbx
000000000000c4d1         pop        rbx
000000000000c4d2         pop        rbp
000000000000c4d3         pop        r12
000000000000c4d5         pop        r13
000000000000c4d7         pop        r14
000000000000c4d9         pop        r15
000000000000c4db         ret
                        ; endp
000000000000c4dc         align      32

                     loc_c4e0:
000000000000c4e0         lea        rax, qword [default_tuning]                 ; default_tuning, CODE XREF=hash_initialize+86
000000000000c4e7         mov        qword [rbx+0x28], rax
000000000000c4eb         call       check_tuning.isra.0                         ; check_tuning.isra.0
000000000000c4f0         test       al, al
000000000000c4f2         movss      xmm1, dword [float_152c8]                   ; float_152c8
000000000000c4fa         je         loc_c4c0

000000000000c4fc         test       rbp, rbp
000000000000c4ff         js         loc_c54b

                     loc_c501:
000000000000c501         pxor       xmm0, xmm0                                  ; CODE XREF=hash_initialize+377
000000000000c505         cvtsi2ss   xmm0, rbp

                     loc_c50a:
000000000000c50a         divss      xmm0, xmm1                                  ; CODE XREF=hash_initialize+404
000000000000c50e         ucomiss    xmm0, dword [float_152cc]                   ; float_152cc
000000000000c515         jae        loc_c4c0

000000000000c517         ucomiss    xmm0, dword [float_152d0]                   ; float_152d0
000000000000c51e         jb         loc_c570

000000000000c520         subss      xmm0, dword [float_152d0]                   ; float_152d0
000000000000c528         movabs     rax, 0x8000000000000000
000000000000c532         cvttss2si  rbp, xmm0
000000000000c537         xor        rbp, rax
000000000000c53a         jmp        loc_c448
000000000000c53f         align      64

                     loc_c540:
000000000000c540         test       rbp, rbp                                    ; CODE XREF=hash_initialize+114
000000000000c543         movss      xmm1, dword [r15+8]
000000000000c549         jns        loc_c501

                     loc_c54b:
000000000000c54b         mov        rax, rbp                                    ; CODE XREF=hash_initialize+303
000000000000c54e         pxor       xmm0, xmm0
000000000000c552         shr        rax, 0x1
000000000000c555         and        ebp, 0x1
000000000000c558         or         rax, rbp
000000000000c55b         cvtsi2ss   xmm0, rax
000000000000c560         addss      xmm0, xmm0
000000000000c564         jmp        loc_c50a
000000000000c566         align      16

                     loc_c570:
000000000000c570         cvttss2si  rbp, xmm0                                   ; CODE XREF=hash_initialize+334
000000000000c575         jmp        loc_c448

                     loc_c57a:
000000000000c57a         mov        ecx, 0x1                                    ; CODE XREF=hash_initialize+144
000000000000c57f         jmp        loc_c466
000000000000c584         align      16                                          ; End of unwind block (FDE at 0x175e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_clear:
000000000000c590         push       r12                                         ; Begin of unwind block (FDE at 0x17634)
000000000000c592         push       rbp
000000000000c593         mov        rbp, rdi
000000000000c596         push       rbx
000000000000c597         mov        r12, qword [rdi]
000000000000c59a         cmp        r12, qword [rdi+8]
000000000000c59e         jae        loc_c60b

                     loc_c5a0:
000000000000c5a0         cmp        qword [r12], 0x0                            ; CODE XREF=hash_clear+121
000000000000c5a5         je         loc_c601

000000000000c5a7         mov        rbx, qword [r12+8]
000000000000c5ac         mov        rax, qword [rbp+0x40]
000000000000c5b0         test       rbx, rbx
000000000000c5b3         je         loc_c5e5

000000000000c5b5         nop        dword [rax]

                     loc_c5b8:
000000000000c5b8         test       rax, rax                                    ; CODE XREF=hash_clear+83
000000000000c5bb         je         loc_c5c6

000000000000c5bd         mov        rdi, qword [rbx]
000000000000c5c0         call       rax
000000000000c5c2         mov        rax, qword [rbp+0x40]

                     loc_c5c6:
000000000000c5c6         mov        rdx, qword [rbx+8]                          ; CODE XREF=hash_clear+43
000000000000c5ca         mov        rcx, qword [rbp+0x48]
000000000000c5ce         mov        qword [rbx], 0x0
000000000000c5d5         test       rdx, rdx
000000000000c5d8         mov        qword [rbx+8], rcx
000000000000c5dc         mov        qword [rbp+0x48], rbx
000000000000c5e0         mov        rbx, rdx
000000000000c5e3         jne        loc_c5b8

                     loc_c5e5:
000000000000c5e5         test       rax, rax                                    ; CODE XREF=hash_clear+35
000000000000c5e8         je         loc_c5f0

000000000000c5ea         mov        rdi, qword [r12]
000000000000c5ee         call       rax

                     loc_c5f0:
000000000000c5f0         mov        qword [r12], 0x0                            ; CODE XREF=hash_clear+88
000000000000c5f8         mov        qword [r12+8], 0x0

                     loc_c601:
000000000000c601         add        r12, 0x10                                   ; CODE XREF=hash_clear+21
000000000000c605         cmp        qword [rbp+8], r12
000000000000c609         ja         loc_c5a0

                     loc_c60b:
000000000000c60b         mov        qword [rbp+0x18], 0x0                       ; CODE XREF=hash_clear+14
000000000000c613         mov        qword [rbp+0x20], 0x0
000000000000c61b         pop        rbx
000000000000c61c         pop        rbp
000000000000c61d         pop        r12
000000000000c61f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_free:
000000000000c620         push       r12                                         ; End of unwind block (FDE at 0x17634), Begin of unwind block (FDE at 0x17660), CODE XREF=forget_all+7
000000000000c622         push       rbp
000000000000c623         mov        r12, rdi
000000000000c626         push       rbx
000000000000c627         cmp        qword [rdi+0x40], 0x0
000000000000c62c         mov        rbp, qword [rdi]
000000000000c62f         mov        rax, qword [rdi+8]
000000000000c633         je         loc_c683

000000000000c635         cmp        qword [rdi+0x20], 0x0
000000000000c63a         je         loc_c683

000000000000c63c         cmp        rbp, rax
000000000000c63f         jae        loc_c6bc

000000000000c641         nop        dword [rax]

                     loc_c648:
000000000000c648         mov        rdi, qword [rbp]                            ; CODE XREF=hash_free+93
000000000000c64c         test       rdi, rdi
000000000000c64f         je         loc_c676

000000000000c651         mov        rbx, rbp
000000000000c654         jmp        loc_c663
000000000000c656         align      32

                     loc_c660:
000000000000c660         mov        rdi, qword [rbx]                            ; CODE XREF=hash_free+79

                     loc_c663:
000000000000c663         call       qword [r12+0x40]                            ; CODE XREF=hash_free+52
000000000000c668         mov        rbx, qword [rbx+8]
000000000000c66c         test       rbx, rbx
000000000000c66f         jne        loc_c660

000000000000c671         mov        rax, qword [r12+8]

                     loc_c676:
000000000000c676         add        rbp, 0x10                                   ; CODE XREF=hash_free+47
000000000000c67a         cmp        rax, rbp
000000000000c67d         ja         loc_c648

000000000000c67f         mov        rbp, qword [r12]

                     loc_c683:
000000000000c683         cmp        rbp, rax                                    ; CODE XREF=hash_free+19, hash_free+26
000000000000c686         jae        loc_c6bc

000000000000c688         nop        dword [rax+rax]

                     loc_c690:
000000000000c690         mov        rdi, qword [rbp+8]                          ; CODE XREF=hash_free+154
000000000000c694         test       rdi, rdi
000000000000c697         je         loc_c6b1

000000000000c699         nop        dword [rax]

                     loc_c6a0:
000000000000c6a0         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+143
000000000000c6a4         call       sub_2e10                                    ; sub_2e10
000000000000c6a9         test       rbx, rbx
000000000000c6ac         mov        rdi, rbx
000000000000c6af         jne        loc_c6a0

                     loc_c6b1:
000000000000c6b1         add        rbp, 0x10                                   ; CODE XREF=hash_free+119
000000000000c6b5         cmp        qword [r12+8], rbp
000000000000c6ba         ja         loc_c690

                     loc_c6bc:
000000000000c6bc         mov        rdi, qword [r12+0x48]                       ; CODE XREF=hash_free+31, hash_free+102
000000000000c6c1         test       rdi, rdi
000000000000c6c4         je         loc_c6e1

000000000000c6c6         nop        word [cs:rax+rax]

                     loc_c6d0:
000000000000c6d0         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+191
000000000000c6d4         call       sub_2e10                                    ; sub_2e10
000000000000c6d9         test       rbx, rbx
000000000000c6dc         mov        rdi, rbx
000000000000c6df         jne        loc_c6d0

                     loc_c6e1:
000000000000c6e1         mov        rdi, qword [r12]                            ; CODE XREF=hash_free+164
000000000000c6e5         call       sub_2e10                                    ; sub_2e10
000000000000c6ea         pop        rbx
000000000000c6eb         mov        rdi, r12
000000000000c6ee         pop        rbp
000000000000c6ef         pop        r12
000000000000c6f1         jmp        sub_2e10                                    ; sub_2e10
                        ; endp
000000000000c6f6         align      256                                         ; End of unwind block (FDE at 0x17660)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120


                     hash_rehash:
000000000000c700         push       r12                                         ; Begin of unwind block (FDE at 0x1768c), CODE XREF=hash_insert_if_absent+443, hash_delete+271
000000000000c702         push       rbp
000000000000c703         mov        rbp, rdi
000000000000c706         push       rbx
000000000000c707         sub        rsp, 0x60
000000000000c70b         mov        r12, qword [rdi+0x28]
000000000000c70f         mov        rax, qword [fs:0x28]
000000000000c718         mov        qword [rsp+0x78+var_20], rax
000000000000c71d         xor        eax, eax
000000000000c71f         cmp        byte [r12+0x10], 0x0
000000000000c725         jne        loc_c778

000000000000c727         test       rsi, rsi
000000000000c72a         js         loc_c8a8

000000000000c730         pxor       xmm0, xmm0
000000000000c734         cvtsi2ss   xmm0, rsi

                     loc_c739:
000000000000c739         divss      xmm0, dword [r12+8]                         ; CODE XREF=hash_rehash+449
000000000000c740         ucomiss    xmm0, dword [float_152cc]                   ; float_152cc
000000000000c747         jae        loc_c880

000000000000c74d         ucomiss    xmm0, dword [float_152d0]                   ; float_152d0
000000000000c754         jb         loc_c8d0

000000000000c75a         subss      xmm0, dword [float_152d0]                   ; float_152d0
000000000000c762         movabs     rax, 0x8000000000000000
000000000000c76c         cvttss2si  rsi, xmm0
000000000000c771         xor        rsi, rax
000000000000c774         nop        dword [rax]

                     loc_c778:
000000000000c778         mov        rdi, rsi                                    ; CODE XREF=hash_rehash+37, hash_rehash+469
000000000000c77b         call       next_prime                                  ; next_prime
000000000000c780         mov        edx, 0x8
000000000000c785         mov        rbx, rax
000000000000c788         xor        ecx, ecx
000000000000c78a         mov        rax, rdx
000000000000c78d         mul        rbx
000000000000c790         jo         loc_c92f

                     loc_c796:
000000000000c796         test       rax, rax                                    ; CODE XREF=hash_rehash+564
000000000000c799         mov        eax, 0x1
000000000000c79e         cmovs      rcx, rax
000000000000c7a2         test       rbx, rbx
000000000000c7a5         je         loc_c880

000000000000c7ab         and        ecx, 0x1
000000000000c7ae         jne        loc_c880

000000000000c7b4         cmp        qword [rbp+0x10], rbx
000000000000c7b8         je         loc_c8e0

000000000000c7be         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
000000000000c7c3         mov        rdi, rbx                                    ; argument "__nmemb" for method j_calloc
000000000000c7c6         call       j_calloc                                    ; calloc
000000000000c7cb         test       rax, rax
000000000000c7ce         mov        qword [rsp+0x78+var_78], rax
000000000000c7d2         je         loc_c880

000000000000c7d8         mov        qword [rsp+0x78+var_68], rbx
000000000000c7dd         shl        rbx, 0x4
000000000000c7e1         mov        qword [rsp+0x78+var_50], r12
000000000000c7e6         add        rbx, rax
000000000000c7e9         mov        rax, qword [rbp+0x30]
000000000000c7ed         mov        r12, rsp
000000000000c7f0         xor        edx, edx
000000000000c7f2         mov        rsi, rbp
000000000000c7f5         mov        rdi, r12
000000000000c7f8         mov        qword [rsp+0x78+var_70], rbx
000000000000c7fd         mov        qword [rsp+0x78+var_60], 0x0
000000000000c806         mov        qword [rsp+0x78+var_48], rax
000000000000c80b         mov        rax, qword [rbp+0x38]
000000000000c80f         mov        qword [rsp+0x78+var_58], 0x0
000000000000c818         mov        qword [rsp+0x78+var_40], rax
000000000000c81d         mov        rax, qword [rbp+0x40]
000000000000c821         mov        qword [rsp+0x78+var_38], rax
000000000000c826         mov        rax, qword [rbp+0x48]
000000000000c82a         mov        qword [rsp+0x78+var_30], rax
000000000000c82f         call       transfer_entries                            ; transfer_entries
000000000000c834         test       al, al
000000000000c836         mov        ebx, eax
000000000000c838         jne        loc_c8f0

000000000000c83e         mov        rax, qword [rsp+0x78+var_30]
000000000000c843         mov        edx, 0x1
000000000000c848         mov        rsi, r12
000000000000c84b         mov        rdi, rbp
000000000000c84e         mov        qword [rbp+0x48], rax
000000000000c852         call       transfer_entries                            ; transfer_entries
000000000000c857         test       al, al
000000000000c859         je         loc_c939

000000000000c85f         xor        edx, edx
000000000000c861         mov        rsi, r12
000000000000c864         mov        rdi, rbp
000000000000c867         call       transfer_entries                            ; transfer_entries
000000000000c86c         test       al, al
000000000000c86e         je         loc_c939

000000000000c874         mov        rdi, qword [rsp+0x78+var_78]
000000000000c878         call       sub_2e10                                    ; sub_2e10
000000000000c87d         jmp        loc_c882
000000000000c87f         align      128

                     loc_c880:
000000000000c880         xor        ebx, ebx                                    ; CODE XREF=hash_rehash+71, hash_rehash+165, hash_rehash+174, hash_rehash+210

                     loc_c882:
000000000000c882         mov        rcx, qword [rsp+0x78+var_20]                ; CODE XREF=hash_rehash+381, hash_rehash+485, hash_rehash+549
000000000000c887         xor        rcx, qword [fs:0x28]
000000000000c890         mov        eax, ebx
000000000000c892         jne        loc_c92a

000000000000c898         add        rsp, 0x60
000000000000c89c         pop        rbx
000000000000c89d         pop        rbp
000000000000c89e         pop        r12
000000000000c8a0         ret
                        ; endp
000000000000c8a1         align      8

                     loc_c8a8:
000000000000c8a8         mov        rax, rsi                                    ; CODE XREF=hash_rehash+42
000000000000c8ab         pxor       xmm0, xmm0
000000000000c8af         shr        rax, 0x1
000000000000c8b2         and        esi, 0x1
000000000000c8b5         or         rax, rsi
000000000000c8b8         cvtsi2ss   xmm0, rax
000000000000c8bd         addss      xmm0, xmm0
000000000000c8c1         jmp        loc_c739
000000000000c8c6         align      16

                     loc_c8d0:
000000000000c8d0         cvttss2si  rsi, xmm0                                   ; CODE XREF=hash_rehash+84
000000000000c8d5         jmp        loc_c778
000000000000c8da         align      32

                     loc_c8e0:
000000000000c8e0         mov        ebx, 0x1                                    ; CODE XREF=hash_rehash+184
000000000000c8e5         jmp        loc_c882
000000000000c8e7         align      16

                     loc_c8f0:
000000000000c8f0         mov        rdi, qword [rbp]                            ; CODE XREF=hash_rehash+312
000000000000c8f4         call       sub_2e10                                    ; sub_2e10
000000000000c8f9         mov        rax, qword [rsp+0x78+var_78]
000000000000c8fd         mov        qword [rbp], rax
000000000000c901         mov        rax, qword [rsp+0x78+var_70]
000000000000c906         mov        qword [rbp+8], rax
000000000000c90a         mov        rax, qword [rsp+0x78+var_68]
000000000000c90f         mov        qword [rbp+0x10], rax
000000000000c913         mov        rax, qword [rsp+0x78+var_60]
000000000000c918         mov        qword [rbp+0x18], rax
000000000000c91c         mov        rax, qword [rsp+0x78+var_30]
000000000000c921         mov        qword [rbp+0x48], rax
000000000000c925         jmp        loc_c882

                     loc_c92a:
000000000000c92a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_rehash+402
                        ; endp

                     loc_c92f:
000000000000c92f         mov        ecx, 0x1                                    ; CODE XREF=hash_rehash+144
000000000000c934         jmp        loc_c796

                     loc_c939:
000000000000c939         call       j_abort                                     ; abort, CODE XREF=hash_rehash+345, hash_rehash+366
                        ; endp
000000000000c93e         align      64                                          ; End of unwind block (FDE at 0x1768c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     hash_insert_if_absent:
000000000000c940         push       r13                                         ; Begin of unwind block (FDE at 0x176c4), CODE XREF=hash_insert+27
000000000000c942         push       r12
000000000000c944         push       rbp
000000000000c945         push       rbx
000000000000c946         sub        rsp, 0x18
000000000000c94a         mov        rax, qword [fs:0x28]
000000000000c953         mov        qword [rsp+0x38+var_30], rax
000000000000c958         xor        eax, eax
000000000000c95a         test       rsi, rsi
000000000000c95d         je         loc_cb1d

000000000000c963         mov        r12, rsp
000000000000c966         xor        ecx, ecx
000000000000c968         mov        r13, rdx
000000000000c96b         mov        rdx, r12
000000000000c96e         mov        rbx, rdi
000000000000c971         mov        rbp, rsi
000000000000c974         call       hash_find_entry                             ; hash_find_entry
000000000000c979         test       rax, rax
000000000000c97c         mov        rdx, rax
000000000000c97f         je         loc_c9b0

000000000000c981         xor        eax, eax
000000000000c983         test       r13, r13
000000000000c986         je         loc_c98c

000000000000c988         mov        qword [r13], rdx

                     loc_c98c:
000000000000c98c         mov        rcx, qword [rsp+0x38+var_30]                ; CODE XREF=hash_insert_if_absent+70, hash_insert_if_absent+233, hash_insert_if_absent+507, hash_insert_if_absent+536
000000000000c991         xor        rcx, qword [fs:0x28]
000000000000c99a         jne        loc_cbbf

000000000000c9a0         add        rsp, 0x18
000000000000c9a4         pop        rbx
000000000000c9a5         pop        rbp
000000000000c9a6         pop        r12
000000000000c9a8         pop        r13
000000000000c9aa         ret
                        ; endp
000000000000c9ab         align      16

                     loc_c9b0:
000000000000c9b0         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+63
000000000000c9b4         test       rax, rax
000000000000c9b7         js         loc_ca30

000000000000c9b9         pxor       xmm1, xmm1
000000000000c9bd         mov        rdx, qword [rbx+0x28]
000000000000c9c1         cvtsi2ss   xmm1, rax
000000000000c9c6         mov        rax, qword [rbx+0x10]
000000000000c9ca         test       rax, rax
000000000000c9cd         js         loc_ca5a

                     loc_c9d3:
000000000000c9d3         pxor       xmm0, xmm0                                  ; CODE XREF=hash_insert_if_absent+276
000000000000c9d7         cvtsi2ss   xmm0, rax

                     loc_c9dc:
000000000000c9dc         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_insert_if_absent+307
000000000000c9e1         ucomiss    xmm1, xmm0
000000000000c9e4         ja         loc_ca80

                     loc_c9ea:
000000000000c9ea         mov        r12, qword [rsp+0x38+var_38]                ; CODE XREF=hash_insert_if_absent+392, hash_insert_if_absent+471
000000000000c9ee         cmp        qword [r12], 0x0
000000000000c9f3         je         loc_cb28

000000000000c9f9         mov        rax, qword [rbx+0x48]
000000000000c9fd         test       rax, rax
000000000000ca00         je         loc_cb40

000000000000ca06         mov        rdx, qword [rax+8]
000000000000ca0a         mov        qword [rbx+0x48], rdx

                     loc_ca0e:
000000000000ca0e         mov        rdx, qword [r12+8]                          ; CODE XREF=hash_insert_if_absent+525
000000000000ca13         mov        qword [rax], rbp
000000000000ca16         mov        qword [rax+8], rdx
000000000000ca1a         mov        qword [r12+8], rax
000000000000ca1f         mov        eax, 0x1
000000000000ca24         add        qword [rbx+0x20], 0x1
000000000000ca29         jmp        loc_c98c
000000000000ca2e         align      16

                     loc_ca30:
000000000000ca30         mov        rdx, rax                                    ; CODE XREF=hash_insert_if_absent+119
000000000000ca33         pxor       xmm1, xmm1
000000000000ca37         and        eax, 0x1
000000000000ca3a         shr        rdx, 0x1
000000000000ca3d         or         rdx, rax
000000000000ca40         mov        rax, qword [rbx+0x10]
000000000000ca44         cvtsi2ss   xmm1, rdx
000000000000ca49         mov        rdx, qword [rbx+0x28]
000000000000ca4d         test       rax, rax
000000000000ca50         addss      xmm1, xmm1
000000000000ca54         jns        loc_c9d3

                     loc_ca5a:
000000000000ca5a         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+141
000000000000ca5d         pxor       xmm0, xmm0
000000000000ca61         shr        rcx, 0x1
000000000000ca64         and        eax, 0x1
000000000000ca67         or         rcx, rax
000000000000ca6a         cvtsi2ss   xmm0, rcx
000000000000ca6f         addss      xmm0, xmm0
000000000000ca73         jmp        loc_c9dc
000000000000ca78         align      128

                     loc_ca80:
000000000000ca80         lea        rdi, qword [rbx+0x28]                       ; CODE XREF=hash_insert_if_absent+164
000000000000ca84         call       check_tuning.isra.0                         ; check_tuning.isra.0
000000000000ca89         mov        rax, qword [rbx+0x10]
000000000000ca8d         mov        rdx, qword [rbx+0x28]
000000000000ca91         test       rax, rax
000000000000ca94         movss      xmm2, dword [rdx+8]
000000000000ca99         js         loc_cb60

000000000000ca9f         pxor       xmm0, xmm0
000000000000caa3         cvtsi2ss   xmm0, rax

                     loc_caa8:
000000000000caa8         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+569
000000000000caac         test       rax, rax
000000000000caaf         js         loc_cb80

000000000000cab5         pxor       xmm1, xmm1
000000000000cab9         cvtsi2ss   xmm1, rax

                     loc_cabe:
000000000000cabe         movaps     xmm3, xmm2                                  ; CODE XREF=hash_insert_if_absent+601
000000000000cac1         mulss      xmm3, xmm0
000000000000cac5         ucomiss    xmm1, xmm3
000000000000cac8         jbe        loc_c9ea

000000000000cace         cmp        byte [rdx+0x10], 0x0
000000000000cad2         mulss      xmm0, dword [rdx+0xc]
000000000000cad7         jne        loc_cadd

000000000000cad9         mulss      xmm0, xmm2

                     loc_cadd:
000000000000cadd         ucomiss    xmm0, dword [float_152cc]                   ; float_152cc, CODE XREF=hash_insert_if_absent+407
000000000000cae4         jae        loc_cb53

000000000000cae6         ucomiss    xmm0, dword [float_152d0]                   ; float_152d0
000000000000caed         jae        loc_cba0

000000000000caf3         cvttss2si  rsi, xmm0

                     loc_caf8:
000000000000caf8         mov        rdi, rbx                                    ; CODE XREF=hash_insert_if_absent+634
000000000000cafb         call       hash_rehash                                 ; hash_rehash
000000000000cb00         test       al, al
000000000000cb02         je         loc_cb53

000000000000cb04         xor        ecx, ecx
000000000000cb06         mov        rdx, r12
000000000000cb09         mov        rsi, rbp
000000000000cb0c         mov        rdi, rbx
000000000000cb0f         call       hash_find_entry                             ; hash_find_entry
000000000000cb14         test       rax, rax
000000000000cb17         je         loc_c9ea

                     loc_cb1d:
000000000000cb1d         call       j_abort                                     ; abort, CODE XREF=hash_insert_if_absent+29
                        ; endp
000000000000cb22         align      8

                     loc_cb28:
000000000000cb28         mov        qword [r12], rbp                            ; CODE XREF=hash_insert_if_absent+179
000000000000cb2c         mov        eax, 0x1
000000000000cb31         add        qword [rbx+0x20], 0x1
000000000000cb36         add        qword [rbx+0x18], 0x1
000000000000cb3b         jmp        loc_c98c

                     loc_cb40:
000000000000cb40         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=hash_insert_if_absent+192
000000000000cb45         call       j_malloc                                    ; malloc
000000000000cb4a         test       rax, rax
000000000000cb4d         jne        loc_ca0e

                     loc_cb53:
000000000000cb53         mov        eax, 0xffffffff                             ; CODE XREF=hash_insert_if_absent+420, hash_insert_if_absent+450
000000000000cb58         jmp        loc_c98c
000000000000cb5d         align      32

                     loc_cb60:
000000000000cb60         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+345
000000000000cb63         pxor       xmm0, xmm0
000000000000cb67         shr        rcx, 0x1
000000000000cb6a         and        eax, 0x1
000000000000cb6d         or         rcx, rax
000000000000cb70         cvtsi2ss   xmm0, rcx
000000000000cb75         addss      xmm0, xmm0
000000000000cb79         jmp        loc_caa8
000000000000cb7e         align      128

                     loc_cb80:
000000000000cb80         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+367
000000000000cb83         pxor       xmm1, xmm1
000000000000cb87         shr        rcx, 0x1
000000000000cb8a         and        eax, 0x1
000000000000cb8d         or         rcx, rax
000000000000cb90         cvtsi2ss   xmm1, rcx
000000000000cb95         addss      xmm1, xmm1
000000000000cb99         jmp        loc_cabe
000000000000cb9e         align      32

                     loc_cba0:
000000000000cba0         subss      xmm0, dword [float_152d0]                   ; float_152d0, CODE XREF=hash_insert_if_absent+429
000000000000cba8         movabs     rax, 0x8000000000000000
000000000000cbb2         cvttss2si  rsi, xmm0
000000000000cbb7         xor        rsi, rax
000000000000cbba         jmp        loc_caf8

                     loc_cbbf:
000000000000cbbf         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert_if_absent+90
                        ; endp
000000000000cbc4         align      16                                          ; End of unwind block (FDE at 0x176c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24


                     hash_insert:
000000000000cbd0         push       rbx                                         ; Begin of unwind block (FDE at 0x17700), CODE XREF=remember_copied+61, record_file+70, utimecmpat+194
000000000000cbd1         mov        rbx, rsi
000000000000cbd4         sub        rsp, 0x10
000000000000cbd8         mov        rdx, rsp
000000000000cbdb         mov        rax, qword [fs:0x28]
000000000000cbe4         mov        qword [rsp+0x18+var_10], rax
000000000000cbe9         xor        eax, eax
000000000000cbeb         call       hash_insert_if_absent                       ; hash_insert_if_absent
000000000000cbf0         cmp        eax, 0xffffffff
000000000000cbf3         je         loc_cc20

000000000000cbf5         test       eax, eax
000000000000cbf7         jne        loc_cbfd

000000000000cbf9         mov        rbx, qword [rsp+0x18+var_18]

                     loc_cbfd:
000000000000cbfd         mov        rcx, qword [rsp+0x18+var_10]                ; CODE XREF=hash_insert+39, hash_insert+82
000000000000cc02         xor        rcx, qword [fs:0x28]
000000000000cc0b         mov        rax, rbx
000000000000cc0e         jne        loc_cc24

000000000000cc10         add        rsp, 0x10
000000000000cc14         pop        rbx
000000000000cc15         ret
                        ; endp
000000000000cc16         align      32

                     loc_cc20:
000000000000cc20         xor        ebx, ebx                                    ; CODE XREF=hash_insert+35
000000000000cc22         jmp        loc_cbfd

                     loc_cc24:
000000000000cc24         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert+62
                        ; endp
000000000000cc29         align      16                                          ; End of unwind block (FDE at 0x17700)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     hash_delete:
000000000000cc30         push       r12                                         ; Begin of unwind block (FDE at 0x17724), CODE XREF=forget_created+49
000000000000cc32         push       rbp
000000000000cc33         mov        ecx, 0x1
000000000000cc38         push       rbx
000000000000cc39         mov        rbx, rdi
000000000000cc3c         sub        rsp, 0x10
000000000000cc40         mov        rdx, rsp
000000000000cc43         mov        rax, qword [fs:0x28]
000000000000cc4c         mov        qword [rsp+0x28+var_20], rax
000000000000cc51         xor        eax, eax
000000000000cc53         call       hash_find_entry                             ; hash_find_entry
000000000000cc58         test       rax, rax
000000000000cc5b         mov        rbp, rax
000000000000cc5e         je         loc_cc6f

000000000000cc60         mov        rax, qword [rsp+0x28+var_28]
000000000000cc64         sub        qword [rbx+0x20], 0x1
000000000000cc69         cmp        qword [rax], 0x0
000000000000cc6d         je         loc_cc90

                     loc_cc6f:
000000000000cc6f         mov        rcx, qword [rsp+0x28+var_20]                ; CODE XREF=hash_delete+46, hash_delete+159, hash_delete+229, hash_delete+278, hash_delete+321
000000000000cc74         xor        rcx, qword [fs:0x28]
000000000000cc7d         mov        rax, rbp
000000000000cc80         jne        loc_ce2e

000000000000cc86         add        rsp, 0x10
000000000000cc8a         pop        rbx
000000000000cc8b         pop        rbp
000000000000cc8c         pop        r12
000000000000cc8e         ret
                        ; endp
000000000000cc8f         align      16

                     loc_cc90:
000000000000cc90         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+61
000000000000cc94         sub        rax, 0x1
000000000000cc98         test       rax, rax
000000000000cc9b         mov        qword [rbx+0x18], rax
000000000000cc9f         js         loc_cda0

000000000000cca5         pxor       xmm0, xmm0
000000000000cca9         cvtsi2ss   xmm0, rax

                     loc_ccae:
000000000000ccae         mov        rax, qword [rbx+0x10]                       ; CODE XREF=hash_delete+393
000000000000ccb2         mov        rdx, qword [rbx+0x28]
000000000000ccb6         test       rax, rax
000000000000ccb9         js         loc_cd80

000000000000ccbf         pxor       xmm1, xmm1
000000000000ccc3         cvtsi2ss   xmm1, rax

                     loc_ccc8:
000000000000ccc8         mulss      xmm1, dword [rdx]                           ; CODE XREF=hash_delete+361
000000000000cccc         ucomiss    xmm1, xmm0
000000000000cccf         jbe        loc_cc6f

000000000000ccd1         lea        rdi, qword [rbx+0x28]
000000000000ccd5         call       check_tuning.isra.0                         ; check_tuning.isra.0
000000000000ccda         mov        rax, qword [rbx+0x10]
000000000000ccde         mov        rdx, qword [rbx+0x28]
000000000000cce2         test       rax, rax
000000000000cce5         js         loc_ce10

000000000000cceb         pxor       xmm0, xmm0
000000000000ccef         cvtsi2ss   xmm0, rax

                     loc_ccf4:
000000000000ccf4         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+505
000000000000ccf8         test       rax, rax
000000000000ccfb         js         loc_cdf0

000000000000cd01         pxor       xmm1, xmm1
000000000000cd05         cvtsi2ss   xmm1, rax

                     loc_cd0a:
000000000000cd0a         movss      xmm2, dword [rdx]                           ; CODE XREF=hash_delete+473
000000000000cd0e         mulss      xmm2, xmm0
000000000000cd12         ucomiss    xmm2, xmm1
000000000000cd15         jbe        loc_cc6f

000000000000cd1b         cmp        byte [rdx+0x10], 0x0
000000000000cd1f         mulss      xmm0, dword [rdx+4]
000000000000cd24         je         loc_cde0

                     loc_cd2a:
000000000000cd2a         ucomiss    xmm0, dword [float_152d0]                   ; float_152d0, CODE XREF=hash_delete+437
000000000000cd31         jae        loc_cdc0

000000000000cd37         cvttss2si  rsi, xmm0

                     loc_cd3c:
000000000000cd3c         mov        rdi, rbx                                    ; CODE XREF=hash_delete+426
000000000000cd3f         call       hash_rehash                                 ; hash_rehash
000000000000cd44         test       al, al
000000000000cd46         jne        loc_cc6f

000000000000cd4c         mov        rdi, qword [rbx+0x48]
000000000000cd50         test       rdi, rdi
000000000000cd53         je         loc_cd69

000000000000cd55         nop        dword [rax]

                     loc_cd58:
000000000000cd58         mov        r12, qword [rdi+8]                          ; CODE XREF=hash_delete+311
000000000000cd5c         call       sub_2e10                                    ; sub_2e10
000000000000cd61         test       r12, r12
000000000000cd64         mov        rdi, r12
000000000000cd67         jne        loc_cd58

                     loc_cd69:
000000000000cd69         mov        qword [rbx+0x48], 0x0                       ; CODE XREF=hash_delete+291
000000000000cd71         jmp        loc_cc6f
000000000000cd76         align      128

                     loc_cd80:
000000000000cd80         mov        rcx, rax                                    ; CODE XREF=hash_delete+137
000000000000cd83         pxor       xmm1, xmm1
000000000000cd87         shr        rcx, 0x1
000000000000cd8a         and        eax, 0x1
000000000000cd8d         or         rcx, rax
000000000000cd90         cvtsi2ss   xmm1, rcx
000000000000cd95         addss      xmm1, xmm1
000000000000cd99         jmp        loc_ccc8
000000000000cd9e         align      32

                     loc_cda0:
000000000000cda0         mov        rdx, rax                                    ; CODE XREF=hash_delete+111
000000000000cda3         pxor       xmm0, xmm0
000000000000cda7         shr        rdx, 0x1
000000000000cdaa         and        eax, 0x1
000000000000cdad         or         rdx, rax
000000000000cdb0         cvtsi2ss   xmm0, rdx
000000000000cdb5         addss      xmm0, xmm0
000000000000cdb9         jmp        loc_ccae
000000000000cdbe         align      64

                     loc_cdc0:
000000000000cdc0         subss      xmm0, dword [float_152d0]                   ; float_152d0, CODE XREF=hash_delete+257
000000000000cdc8         movabs     rax, 0x8000000000000000
000000000000cdd2         cvttss2si  rsi, xmm0
000000000000cdd7         xor        rsi, rax
000000000000cdda         jmp        loc_cd3c
000000000000cddf         align      32

                     loc_cde0:
000000000000cde0         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_delete+244
000000000000cde5         jmp        loc_cd2a
000000000000cdea         align      16

                     loc_cdf0:
000000000000cdf0         mov        rcx, rax                                    ; CODE XREF=hash_delete+203
000000000000cdf3         pxor       xmm1, xmm1
000000000000cdf7         shr        rcx, 0x1
000000000000cdfa         and        eax, 0x1
000000000000cdfd         or         rcx, rax
000000000000ce00         cvtsi2ss   xmm1, rcx
000000000000ce05         addss      xmm1, xmm1
000000000000ce09         jmp        loc_cd0a
000000000000ce0e         align      16

                     loc_ce10:
000000000000ce10         mov        rcx, rax                                    ; CODE XREF=hash_delete+181
000000000000ce13         pxor       xmm0, xmm0
000000000000ce17         shr        rcx, 0x1
000000000000ce1a         and        eax, 0x1
000000000000ce1d         or         rcx, rax
000000000000ce20         cvtsi2ss   xmm0, rcx
000000000000ce25         addss      xmm0, xmm0
000000000000ce29         jmp        loc_ccf4

                     loc_ce2e:
000000000000ce2e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_delete+80
                        ; endp
000000000000ce33         align      64                                          ; End of unwind block (FDE at 0x17724)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_hash:
000000000000ce40         push       rbp                                         ; Begin of unwind block (FDE at 0x1775c), DATA XREF=dest_info_init+16
000000000000ce41         push       rbx
000000000000ce42         mov        rbp, rdi
000000000000ce45         mov        rbx, rsi
000000000000ce48         sub        rsp, 0x8
000000000000ce4c         mov        rdi, qword [rdi]
000000000000ce4f         call       hash_pjw                                    ; hash_pjw
000000000000ce54         xor        rax, qword [rbp+8]
000000000000ce58         xor        edx, edx
000000000000ce5a         add        rsp, 0x8
000000000000ce5e         div        rbx
000000000000ce61         pop        rbx
000000000000ce62         pop        rbp
000000000000ce63         mov        rax, rdx
000000000000ce66         ret
                        ; endp
000000000000ce67         align      16                                          ; End of unwind block (FDE at 0x1775c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_hash_no_name:
000000000000ce70         mov        rax, qword [rdi+8]                          ; Begin of unwind block (FDE at 0x17784), DATA XREF=src_info_init+16
000000000000ce74         xor        edx, edx
000000000000ce76         div        rsi
000000000000ce79         mov        rax, rdx
000000000000ce7c         ret
                        ; endp
000000000000ce7d         align      128                                         ; End of unwind block (FDE at 0x17784)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_compare:
000000000000ce80         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x17798), DATA XREF=dest_info_init+7, src_info_init+7
000000000000ce82         mov        rdx, qword [rsi+8]
000000000000ce86         cmp        qword [rdi+8], rdx
000000000000ce8a         je         loc_ce90

                     loc_ce8c:
000000000000ce8c         ret                                                    ; CODE XREF=triple_compare+24
                        ; endp
000000000000ce8e         align      16

                     loc_ce90:
000000000000ce90         mov        rcx, qword [rsi+0x10]                       ; CODE XREF=triple_compare+10
000000000000ce94         cmp        qword [rdi+0x10], rcx
000000000000ce98         jne        loc_ce8c

000000000000ce9a         sub        rsp, 0x8
000000000000ce9e         mov        rsi, qword [rsi]
000000000000cea1         mov        rdi, qword [rdi]
000000000000cea4         call       same_name                                   ; same_name
000000000000cea9         add        rsp, 0x8
000000000000cead         ret
                        ; endp
000000000000ceae         align      16                                          ; End of unwind block (FDE at 0x17798)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_compare_ino_str:
000000000000ceb0         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x177b0)
000000000000ceb2         mov        rdx, qword [rsi+8]
000000000000ceb6         cmp        qword [rdi+8], rdx
000000000000ceba         je         loc_cec0

                     loc_cebc:
000000000000cebc         ret                                                    ; CODE XREF=triple_compare_ino_str+24
                        ; endp
000000000000cebe         align      64

                     loc_cec0:
000000000000cec0         mov        rcx, qword [rsi+0x10]                       ; CODE XREF=triple_compare_ino_str+10
000000000000cec4         cmp        qword [rdi+0x10], rcx
000000000000cec8         jne        loc_cebc

000000000000ceca         sub        rsp, 0x8
000000000000cece         mov        rsi, qword [rsi]                            ; argument "__s2" for method j_strcmp
000000000000ced1         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
000000000000ced4         call       j_strcmp                                    ; strcmp
000000000000ced9         test       eax, eax
000000000000cedb         sete       al
000000000000cede         add        rsp, 0x8
000000000000cee2         ret
                        ; endp
000000000000cee3         align      16                                          ; End of unwind block (FDE at 0x177b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_free:
000000000000cef0         push       rbx                                         ; Begin of unwind block (FDE at 0x177c8), CODE XREF=record_file+98, DATA XREF=dest_info_init, src_info_init
000000000000cef1         mov        rbx, rdi
000000000000cef4         mov        rdi, qword [rdi]
000000000000cef7         call       sub_2e10                                    ; sub_2e10
000000000000cefc         mov        rdi, rbx
000000000000ceff         pop        rbx
000000000000cf00         jmp        sub_2e10                                    ; sub_2e10
                        ; endp
000000000000cf05         align      16                                          ; End of unwind block (FDE at 0x177c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     opendirat:
000000000000cf10         push       r13                                         ; Begin of unwind block (FDE at 0x177e4), CODE XREF=backupfile_internal+1213
000000000000cf12         push       r12
000000000000cf14         or         edx, 0x90900
000000000000cf1a         push       rbp
000000000000cf1b         push       rbx
000000000000cf1c         xor        eax, eax
000000000000cf1e         mov        r12, rcx
000000000000cf21         sub        rsp, 0x8
000000000000cf25         call       openat_safer                                ; openat_safer
000000000000cf2a         test       eax, eax
000000000000cf2c         js         loc_cf80

000000000000cf2e         mov        edi, eax                                    ; argument "__fd" for method j_fdopendir
000000000000cf30         mov        ebx, eax
000000000000cf32         call       j_fdopendir                                 ; fdopendir
000000000000cf37         test       rax, rax
000000000000cf3a         mov        rbp, rax
000000000000cf3d         je         loc_cf58

000000000000cf3f         mov        dword [r12], ebx
000000000000cf43         add        rsp, 0x8
000000000000cf47         mov        rax, rbp
000000000000cf4a         pop        rbx
000000000000cf4b         pop        rbp
000000000000cf4c         pop        r12
000000000000cf4e         pop        r13
000000000000cf50         ret
                        ; endp
000000000000cf51         align      8

                     loc_cf58:
000000000000cf58         call       j___errno_location                          ; __errno_location, CODE XREF=opendirat+45
000000000000cf5d         mov        r13d, dword [rax]
000000000000cf60         mov        r12, rax
000000000000cf63         mov        edi, ebx                                    ; argument "__fd" for method j_close
000000000000cf65         call       j_close                                     ; close
000000000000cf6a         mov        rax, rbp
000000000000cf6d         mov        dword [r12], r13d
000000000000cf71         add        rsp, 0x8
000000000000cf75         pop        rbx
000000000000cf76         pop        rbp
000000000000cf77         pop        r12
000000000000cf79         pop        r13
000000000000cf7b         ret
                        ; endp
000000000000cf7c         align      128

                     loc_cf80:
000000000000cf80         add        rsp, 0x8                                    ; CODE XREF=opendirat+28
000000000000cf84         xor        ebp, ebp
000000000000cf86         pop        rbx
000000000000cf87         mov        rax, rbp
000000000000cf8a         pop        rbp
000000000000cf8b         pop        r12
000000000000cf8d         pop        r13
000000000000cf8f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
000000000000cf90         test       rdi, rdi                                    ; End of unwind block (FDE at 0x177e4), Begin of unwind block (FDE at 0x17844), CODE XREF=main+70
000000000000cf93         push       rbx
000000000000cf94         je         loc_d00d

000000000000cf96         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000cf9b         mov        rbx, rdi
000000000000cf9e         call       j_strrchr                                   ; strrchr
000000000000cfa3         test       rax, rax
000000000000cfa6         je         loc_cffd

000000000000cfa8         lea        r8, qword [rax+1]
000000000000cfac         mov        rdx, r8
000000000000cfaf         sub        rdx, rbx
000000000000cfb2         cmp        rdx, 0x6
000000000000cfb6         jle        loc_cffd

000000000000cfb8         lea        rsi, qword [rax-6]
000000000000cfbc         lea        rdi, qword [aLibs]                          ; "/.libs/"
000000000000cfc3         mov        ecx, 0x7
000000000000cfc8         rep  cmpsb byte [rsi], byte [rdi]
000000000000cfca         seta       dl
000000000000cfcd         sbb        dl, 0x0
000000000000cfd0         test       dl, dl
000000000000cfd2         jne        loc_cffd

000000000000cfd4         lea        rdi, qword [aLibs+8]                        ; 0x15320
000000000000cfdb         mov        ecx, 0x3
000000000000cfe0         mov        rsi, r8
000000000000cfe3         mov        rbx, r8
000000000000cfe6         rep  cmpsb byte [rsi], byte [rdi]
000000000000cfe8         seta       dl
000000000000cfeb         sbb        dl, 0x0
000000000000cfee         test       dl, dl
000000000000cff0         jne        loc_cffd

000000000000cff2         lea        rbx, qword [rax+4]
000000000000cff6         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_cffd:
000000000000cffd         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
000000000000d004         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000d00b         pop        rbx
000000000000d00c         ret
                        ; endp

                     loc_d00d:
000000000000d00d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
000000000000d014         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
000000000000d01b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
000000000000d020         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
000000000000d025         call       j_fwrite                                    ; fwrite
000000000000d02a         call       j_abort                                     ; abort
                        ; endp
000000000000d02f         align      16                                          ; End of unwind block (FDE at 0x17844)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_24: int8_t, -36


                     qcopy_acl:
000000000000d030         push       r12                                         ; Begin of unwind block (FDE at 0x17864), CODE XREF=copy_acl+10
000000000000d032         push       rbp
000000000000d033         mov        r12d, ecx
000000000000d036         push       rbx
000000000000d037         mov        rbp, rdx
000000000000d03a         mov        edx, r8d
000000000000d03d         sub        rsp, 0x10
000000000000d041         lea        rbx, qword [rsp+0x28+var_24]
000000000000d046         mov        rax, qword [fs:0x28]
000000000000d04f         mov        qword [rsp+0x28+var_20], rax
000000000000d054         xor        eax, eax
000000000000d056         mov        rcx, rbx
000000000000d059         call       get_permissions                             ; get_permissions
000000000000d05e         test       eax, eax
000000000000d060         jne        loc_d098

000000000000d062         mov        rsi, rbp
000000000000d065         mov        rdi, rbx
000000000000d068         mov        edx, r12d
000000000000d06b         call       set_permissions                             ; set_permissions
000000000000d070         mov        rdi, rbx
000000000000d073         mov        ebp, eax
000000000000d075         call       free_permission_context                     ; free_permission_context

                     loc_d07a:
000000000000d07a         mov        rcx, qword [rsp+0x28+var_20]                ; CODE XREF=qcopy_acl+109
000000000000d07f         xor        rcx, qword [fs:0x28]
000000000000d088         mov        eax, ebp
000000000000d08a         jne        loc_d09f

000000000000d08c         add        rsp, 0x10
000000000000d090         pop        rbx
000000000000d091         pop        rbp
000000000000d092         pop        r12
000000000000d094         ret
                        ; endp
000000000000d095         align      8

                     loc_d098:
000000000000d098         mov        ebp, 0xfffffffe                             ; CODE XREF=qcopy_acl+48
000000000000d09d         jmp        loc_d07a

                     loc_d09f:
000000000000d09f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=qcopy_acl+90
                        ; endp
000000000000d0a4         align      16                                          ; End of unwind block (FDE at 0x17864)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_24: int32_t, -36


                     qset_acl:
000000000000d0b0         push       rbp                                         ; Begin of unwind block (FDE at 0x1789c), CODE XREF=set_owner+301, set_acl+7
000000000000d0b1         push       rbx
000000000000d0b2         sub        rsp, 0x18
000000000000d0b6         lea        rbx, qword [rsp+0x28+var_24]
000000000000d0bb         mov        dword [rsp+0x28+var_24], edx
000000000000d0bf         mov        edx, esi
000000000000d0c1         mov        rsi, rdi
000000000000d0c4         mov        rdi, rbx
000000000000d0c7         mov        rax, qword [fs:0x28]
000000000000d0d0         mov        qword [rsp+0x28+var_20], rax
000000000000d0d5         xor        eax, eax
000000000000d0d7         call       set_permissions                             ; set_permissions
000000000000d0dc         mov        rdi, rbx
000000000000d0df         mov        ebp, eax
000000000000d0e1         call       free_permission_context                     ; free_permission_context
000000000000d0e6         mov        rcx, qword [rsp+0x28+var_20]
000000000000d0eb         xor        rcx, qword [fs:0x28]
000000000000d0f4         jne        loc_d0ff

000000000000d0f6         add        rsp, 0x18
000000000000d0fa         mov        eax, ebp
000000000000d0fc         pop        rbx
000000000000d0fd         pop        rbp
000000000000d0fe         ret
                        ; endp

                     loc_d0ff:
000000000000d0ff         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=qset_acl+68
                        ; endp
000000000000d104         align      16                                          ; End of unwind block (FDE at 0x1789c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
000000000000d110         push       rbp                                         ; Begin of unwind block (FDE at 0x178cc), CODE XREF=sub_d940+2597, sub_d940+2619
000000000000d111         push       rbx
000000000000d112         mov        rbp, rdi
000000000000d115         mov        ebx, esi
000000000000d117         sub        rsp, 0x8
000000000000d11b         call       locale_charset                              ; locale_charset
000000000000d120         movzx      edx, byte [rax]
000000000000d123         and        edx, 0xffffffdf
000000000000d126         cmp        dl, 0x55
000000000000d129         je         loc_d1a0

000000000000d12b         cmp        dl, 0x47
000000000000d12e         je         loc_d150

                     loc_d130:
000000000000d130         lea        rax, qword [aLibs+27]                       ; 0x15333, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
000000000000d137         lea        rdx, qword [aLibs+29]                       ; 0x15335
000000000000d13e         cmp        ebx, 0x9
000000000000d141         cmovne     rax, rdx
000000000000d145         add        rsp, 0x8
000000000000d149         pop        rbx
000000000000d14a         pop        rbp
000000000000d14b         ret
                        ; endp
000000000000d14c         align      16

                     loc_d150:
000000000000d150         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
000000000000d154         and        edx, 0xffffffdf
000000000000d157         cmp        dl, 0x42
000000000000d15a         jne        loc_d130

000000000000d15c         cmp        byte [rax+2], 0x31
000000000000d160         jne        loc_d130

000000000000d162         cmp        byte [rax+3], 0x38
000000000000d166         jne        loc_d130

000000000000d168         cmp        byte [rax+4], 0x30
000000000000d16c         jne        loc_d130

000000000000d16e         cmp        byte [rax+5], 0x33
000000000000d172         jne        loc_d130

000000000000d174         cmp        byte [rax+6], 0x30
000000000000d178         jne        loc_d130

000000000000d17a         cmp        byte [rax+7], 0x0
000000000000d17e         jne        loc_d130

000000000000d180         cmp        byte [rbp], 0x60
000000000000d184         lea        rax, qword [aLibs+20]                       ; 0x1532c
000000000000d18b         lea        rdx, qword [aLibs+24]                       ; 0x15330
000000000000d192         cmovne     rax, rdx
000000000000d196         add        rsp, 0x8
000000000000d19a         pop        rbx
000000000000d19b         pop        rbp
000000000000d19c         ret
                        ; endp
000000000000d19d         align      32

                     loc_d1a0:
000000000000d1a0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
000000000000d1a4         and        edx, 0xffffffdf
000000000000d1a7         cmp        dl, 0x54
000000000000d1aa         jne        loc_d130

000000000000d1ac         movzx      edx, byte [rax+2]
000000000000d1b0         and        edx, 0xffffffdf
000000000000d1b3         cmp        dl, 0x46
000000000000d1b6         jne        loc_d130

000000000000d1bc         cmp        byte [rax+3], 0x2d
000000000000d1c0         jne        loc_d130

000000000000d1c6         cmp        byte [rax+4], 0x38
000000000000d1ca         jne        loc_d130

000000000000d1d0         cmp        byte [rax+5], 0x0
000000000000d1d4         jne        loc_d130

000000000000d1da         cmp        byte [rbp], 0x60
000000000000d1de         lea        rax, qword [aLibs+12]                       ; 0x15324
000000000000d1e5         lea        rdx, qword [aLibs+16]                       ; 0x15328
000000000000d1ec         cmovne     rax, rdx
000000000000d1f0         add        rsp, 0x8
000000000000d1f4         pop        rbx
000000000000d1f5         pop        rbp
000000000000d1f6         ret
                        ; endp
000000000000d1f7         align      512                                         ; End of unwind block (FDE at 0x178cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
000000000000d200         push       r15                                         ; Begin of unwind block (FDE at 0x17910), CODE XREF=sub_d940+1165, sub_d940+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
000000000000d202         push       r14
000000000000d204         mov        r15d, r8d
000000000000d207         push       r13
000000000000d209         push       r12
000000000000d20b         mov        r14, rdi
000000000000d20e         push       rbp
000000000000d20f         push       rbx
000000000000d210         mov        ebx, r9d
000000000000d213         mov        r13, rsi
000000000000d216         mov        rbp, rcx
000000000000d219         and        ebx, 0x2
000000000000d21c         sub        rsp, 0xb8
000000000000d223         mov        rax, qword [rsp+0xe8+arg_0]
000000000000d22b         mov        qword [rsp+0xe8+var_D8], rdx
000000000000d230         mov        dword [rsp+0xe8+var_E0], r8d
000000000000d235         mov        dword [rsp+0xe8+var_70], r9d
000000000000d23a         mov        qword [rsp+0xe8+var_C8], rax
000000000000d23f         mov        rax, qword [rsp+0xe8+arg_8]
000000000000d247         mov        qword [rsp+0xe8+var_80], rax
000000000000d24c         mov        rax, qword [rsp+0xe8+arg_10]
000000000000d254         mov        qword [rsp+0xe8+var_88], rax
000000000000d259         mov        rax, qword [fs:0x28]
000000000000d262         mov        qword [rsp+0xe8+var_40], rax
000000000000d26a         xor        eax, eax
000000000000d26c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
000000000000d271         cmp        r15d, 0xa
000000000000d275         mov        qword [rsp+0xe8+var_90], rax
000000000000d27a         ja         loc_e42f

000000000000d280         lea        rcx, qword [switch_table_153a0]             ; switch_table_153a0
000000000000d287         mov        edx, r15d
000000000000d28a         movsxd     rax, dword [rcx+rdx*4]
000000000000d28e         add        rax, rcx
000000000000d291         jmp        rax                                         ; switch statement using table at 0x153a0, with 11 cases, 0xd293,0xde64,0xdec0,0xdf15,0xdf5a,0xdf94,0xe03a,0xe074,0xe268

                     loc_d293:
000000000000d293         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_d940+1318
000000000000d298         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000d29d         xor        r12d, r12d
000000000000d2a0         mov        qword [rsp+0xe8+var_98], 0x0
000000000000d2a9         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000d2ae         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_d2b3:
000000000000d2b3         lea        rax, qword [aLibs+29]                       ; 0x15335, CODE XREF=sub_d940+1876
000000000000d2ba         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000d2c3         xor        r15d, r15d
000000000000d2c6         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000d2ce         mov        qword [rsp+0xe8+var_A0], rax

                     loc_d2d3:
000000000000d2d3         xor        r11d, r11d                                  ; CODE XREF=sub_d940+180, sub_d940+1400, sub_d940+1488, sub_d940+1557, sub_d940+1615, sub_d940+1781, sub_d940+1839, sub_d940+2408, sub_d940+2485
000000000000d2d6         mov        rax, rbp
000000000000d2d9         mov        r8d, r12d
000000000000d2dc         mov        rbp, r11
000000000000d2df         mov        r11, rax
000000000000d2e2         nop        word [rax+rax]

                     loc_d2e8:
000000000000d2e8         cmp        r11, rbp                                    ; CODE XREF=sub_d3f0+194
000000000000d2eb         setne      r12b
000000000000d2ef         cmp        r11, 0xffffffffffffffff
000000000000d2f3         jne        loc_d302

000000000000d2f5         mov        rax, qword [rsp+0xe8+var_D8]
000000000000d2fa         cmp        byte [rax+rbp], 0x0
000000000000d2fe         setne      r12b

                     loc_d302:
000000000000d302         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
000000000000d305         je         loc_d960

000000000000d30b         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000d310         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000d315         lea        r9, qword [rdi+rbp]
000000000000d319         setne      al
000000000000d31c         and        al, byte [rsp+0xe8+var_DB]
000000000000d320         mov        r10d, eax
000000000000d323         je         loc_d3d0

000000000000d329         mov        rax, qword [rsp+0xe8+var_D0]
000000000000d32e         test       rax, rax
000000000000d331         je         loc_d760

000000000000d337         cmp        r11, 0xffffffffffffffff
000000000000d33b         lea        rbx, qword [rbp+rax]
000000000000d340         jne        loc_d370

000000000000d342         cmp        rax, 0x1
000000000000d346         jbe        loc_d370

000000000000d348         mov        byte [rsp+0xe8+var_B0], r8b
000000000000d34d         mov        byte [rsp+0xe8+var_B8], r10b
000000000000d352         mov        qword [rsp+0xe8+var_C0], r9
000000000000d357         call       j_strlen                                    ; strlen
000000000000d35c         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000d362         movzx      r10d, byte [rsp+0xe8+var_B8]
000000000000d368         mov        r11, rax
000000000000d36b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_d370:
000000000000d370         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
000000000000d373         mov        byte [rsp+0xe8+var_C0], r10b
000000000000d378         ja         loc_d930

000000000000d37e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
000000000000d383         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
000000000000d388         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000000d38b         mov        qword [rsp+0xe8+var_A8], r11
000000000000d390         mov        byte [rsp+0xe8+var_B0], r8b
000000000000d395         mov        qword [rsp+0xe8+var_B8], r9
000000000000d39a         call       j_memcmp                                    ; memcmp
000000000000d39f         test       eax, eax
000000000000d3a1         mov        r9, qword [rsp+0xe8+var_B8]
000000000000d3a6         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000d3ac         mov        r11, qword [rsp+0xe8+var_A8]
000000000000d3b1         jne        loc_d930

000000000000d3b7         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000d3bc         movzx      r10d, byte [rsp+0xe8+var_C0]
000000000000d3c2         jne        loc_e345

000000000000d3c8         nop        dword [rax+rax]

                     loc_d3d0:
000000000000d3d0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_d920+19
000000000000d3d4         cmp        bl, 0x7e
000000000000d3d7         ja         loc_d6f8

000000000000d3dd         lea        rcx, qword [switch_table_153a0+44]          ; 0x153cc
000000000000d3e4         movzx      edx, bl
000000000000d3e7         movsxd     rax, dword [rcx+rdx*4]
000000000000d3eb         add        rax, rcx
000000000000d3ee         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_d3f0:
000000000000d3f0         xor        r10d, r10d
000000000000d3f3         cmp        r11, 0x1
000000000000d3f7         setne      al
000000000000d3fa         cmp        r11, 0xffffffffffffffff
000000000000d3fe         jne        loc_d40c

000000000000d400         mov        rax, qword [rsp+arg_8]
000000000000d405         cmp        byte [rax+1], 0x0
000000000000d409         setne      al

                     loc_d40c:
000000000000d40c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_d3f0+14
000000000000d411         sete       dl
000000000000d414         test       al, al
000000000000d416         je         loc_d668

                     loc_d41c:
000000000000d41c         xor        r12d, r12d                                  ; CODE XREF=sub_d660+11
000000000000d41f         xor        eax, eax
000000000000d421         nop        dword [rax]
                        ; endp

                     loc_d428:
000000000000d428         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_d610+50, sub_d6e0+119
000000000000d42d         jne        loc_d542

000000000000d433         test       dl, dl
000000000000d435         jne        loc_d542

                     loc_d43b:
000000000000d43b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_d4f0+87
000000000000d440         test       rsi, rsi
000000000000d443         je         loc_d459

000000000000d445         mov        edx, ebx
000000000000d447         shr        dl, 0x5
000000000000d44a         movzx      edx, dl
000000000000d44d         mov        edx, dword [rsi+rdx*4]
000000000000d450         bt         edx, ebx
000000000000d453         jb         loc_d5a3

                     loc_d459:
000000000000d459         test       r10b, r10b                                  ; CODE XREF=sub_d3f0+83, sub_d4f0+93
000000000000d45c         jne        loc_d5a3

000000000000d462         xor        eax, 0x1
000000000000d465         add        rbp, 0x1
000000000000d469         and        eax, r8d

                     loc_d46c:
000000000000d46c         test       al, al                                      ; CODE XREF=sub_d940+936
000000000000d46e         je         loc_d490

000000000000d470         cmp        r13, r15
000000000000d473         jbe        loc_d47a

000000000000d475         mov        byte [r14+r15], 0x27

                     loc_d47a:
000000000000d47a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_d3f0+131
000000000000d47e         cmp        r13, rax
000000000000d481         jbe        loc_d489

000000000000d483         mov        byte [r14+r15+1], 0x27

                     loc_d489:
000000000000d489         add        r15, 0x2                                    ; CODE XREF=sub_d3f0+145
000000000000d48d         xor        r8d, r8d

                     loc_d490:
000000000000d490         cmp        r15, r13                                    ; CODE XREF=sub_d3f0+126, sub_d4f0+275, sub_d940+869
000000000000d493         jae        loc_d499

000000000000d495         mov        byte [r14+r15], bl

                     loc_d499:
000000000000d499         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_d3f0+163
000000000000d49e         add        r15, 0x1
000000000000d4a2         mov        eax, 0x0
000000000000d4a7         test       r12b, r12b
000000000000d4aa         cmove      edi, eax
000000000000d4ad         mov        byte [rsp+0xe8+var_DA], dil
000000000000d4b2         jmp        loc_d2e8
000000000000d4b7         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_d4c0:
000000000000d4c0         xor        r10d, r10d
000000000000d4c3         mov        eax, dword [rsp+arg_0]
000000000000d4c7         cmp        eax, 0x2
000000000000d4ca         je         loc_da88

000000000000d4d0         cmp        eax, 0x5
000000000000d4d3         je         loc_da48

000000000000d4d9         cmp        eax, 0x2
000000000000d4dc         mov        ebx, 0x3f
000000000000d4e1         sete       dl
000000000000d4e4         xor        r12d, r12d
000000000000d4e7         xor        eax, eax
000000000000d4e9         jmp        sub_d3f0+56
                        ; endp
000000000000d4ee         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_d4f0:
000000000000d4f0         xor        r10d, r10d
000000000000d4f3         cmp        dword [rsp+arg_0], 0x2
000000000000d4f8         je         loc_da00

000000000000d4fe         mov        byte [rsp+arg_74], r12b
000000000000d503         xor        edx, edx
000000000000d505         xor        eax, eax
000000000000d507         mov        ebx, 0x27
000000000000d50c         jmp        sub_d3f0+56
                        ; endp
000000000000d511         nop        dword [rax]
000000000000d518         mov        edx, 0x9
000000000000d51d         mov        ebx, 0x74

                     loc_d522:
000000000000d522         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_d6b0+10, sub_d7a0+37, sub_d8e0+53
000000000000d527         sete       al
000000000000d52a         and        al, byte [rsp+arg_7]
000000000000d52e         jne        sub_d660+30

000000000000d534         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_d4f0+114
000000000000d539         jne        loc_d5a0

                     loc_d53b:
000000000000d53b         mov        ebx, edx                                    ; CODE XREF=sub_d610+18
000000000000d53d         xor        r12d, r12d
000000000000d540         xor        eax, eax
                        ; endp

                     loc_d542:
000000000000d542         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_d3f0+61, sub_d3f0+69
000000000000d547         jne        loc_d43b

000000000000d54d         jmp        loc_d459
000000000000d552         nop        word [rax+rax]
000000000000d558         mov        edx, 0x8
000000000000d55d         mov        ebx, 0x62
000000000000d562         jmp        sub_d4f0+68
000000000000d564         nop        dword [rax]
000000000000d568         cmp        dword [rsp+8], 0x2
000000000000d56d         je         sub_d940                                    ; sub_d940
000000000000d573         cmp        byte [rsp+0xd], 0x0
000000000000d578         je         sub_d780+16

                     loc_d57e:
000000000000d57e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_d780+8
000000000000d583         je         loc_d790

000000000000d589         cmp        qword [rsp+arg_10], 0x0
000000000000d58f         jne        loc_d94b

000000000000d595         mov        ebx, 0x5c
000000000000d59a         nop        word [rax+rax]
                        ; endp

                     loc_d5a0:
000000000000d5a0         xor        r12d, r12d                                  ; CODE XREF=sub_d4f0+73, sub_d8e0+29
                        ; endp

                     loc_d5a3:
000000000000d5a3         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_d3f0+99, sub_d3f0+108
000000000000d5a8         sete       dl
000000000000d5ab         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000d5b0         mov        eax, edx
000000000000d5b2         jne        loc_de08

000000000000d5b8         mov        eax, r8d
000000000000d5bb         xor        eax, 0x1
000000000000d5be         and        al, dl
000000000000d5c0         je         loc_d5f1

000000000000d5c2         cmp        r13, r15
000000000000d5c5         jbe        loc_d5cc

000000000000d5c7         mov        byte [r14+r15], 0x27

                     loc_d5cc:
000000000000d5cc         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_d4f0+213
000000000000d5d0         cmp        r13, rdx
000000000000d5d3         jbe        loc_d5db

000000000000d5d5         mov        byte [r14+r15+1], 0x24

                     loc_d5db:
000000000000d5db         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_d4f0+227
000000000000d5df         cmp        r13, rdx
000000000000d5e2         jbe        loc_d5ea

000000000000d5e4         mov        byte [r14+r15+2], 0x27

                     loc_d5ea:
000000000000d5ea         add        r15, 0x3                                    ; CODE XREF=sub_d4f0+242
000000000000d5ee         mov        r8d, eax

                     loc_d5f1:
000000000000d5f1         cmp        r13, r15                                    ; CODE XREF=sub_d4f0+208
000000000000d5f4         jbe        loc_d5fb

000000000000d5f6         mov        byte [r14+r15], 0x5c

                     loc_d5fb:
000000000000d5fb         add        r15, 0x1                                    ; CODE XREF=sub_d4f0+260
000000000000d5ff         add        rbp, 0x1
000000000000d603         jmp        loc_d490
000000000000d608         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_d610:
000000000000d610         cmp        byte [rsp+arg_5], 0x0
000000000000d615         jne        loc_d7e3

000000000000d61b         xor        edx, edx
000000000000d61d         test       byte [rsp+arg_70], 0x1
000000000000d622         je         loc_d53b

000000000000d628         add        rbp, 0x1
000000000000d62c         jmp        quotearg_buffer_restyled+232
                        ; endp
000000000000d631         nop        dword [rax]
000000000000d638         cmp        dword [rsp+8], 0x2
000000000000d63d         sete       dl
000000000000d640         xor        eax, eax
000000000000d642         jmp        sub_d3f0+56
000000000000d647         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_d650:
000000000000d650         mov        edx, 0x7
000000000000d655         mov        ebx, 0x61
000000000000d65a         jmp        sub_d4f0+68
                        ; endp
000000000000d65f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_d660:
000000000000d660         cmp        dword [rsp+8], 0x2
000000000000d665         sete       dl
                        ; endp

                     loc_d668:
000000000000d668         test       rbp, rbp                                    ; CODE XREF=sub_d3f0+38, sub_d880+35
000000000000d66b         jne        loc_d41c

000000000000d671         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_d8b0+43
000000000000d676         and        al, dl
000000000000d678         je         sub_d3f0+56

000000000000d67e         mov        rbp, r11
000000000000d681         mov        dword [rsp+arg_0], 0x2
000000000000d689         jmp        sub_d940+1097
                        ; endp
000000000000d68e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_d690:
000000000000d690         cmp        dword [rsp+arg_0], 0x2
000000000000d695         sete       dl
000000000000d698         xor        r12d, r12d
000000000000d69b         jmp        sub_d660+17
                        ; endp
000000000000d69d         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_d6a0:
000000000000d6a0         cmp        dword [rsp+arg_0], 0x2
000000000000d6a5         mov        ebx, 0x20
000000000000d6aa         sete       dl
000000000000d6ad         jmp        sub_d660+17
                        ; endp
000000000000d6af         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_d6b0:
000000000000d6b0         mov        edx, 0xd
000000000000d6b5         mov        ebx, 0x72
000000000000d6ba         jmp        loc_d522
000000000000d6bf         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_d6c0:
000000000000d6c0         mov        edx, 0xc
000000000000d6c5         mov        ebx, 0x66
000000000000d6ca         jmp        sub_d4f0+68
                        ; endp
000000000000d6cf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_d6d0:
000000000000d6d0         mov        edx, 0xb
000000000000d6d5         mov        ebx, 0x76
000000000000d6da         jmp        sub_d4f0+68
                        ; endp
000000000000d6df         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_d6e0:
000000000000d6e0         mov        edx, 0xa
000000000000d6e5         mov        ebx, 0x6e
000000000000d6ea         jmp        sub_d4f0+50
                        ; endp
000000000000d6ef         align      16

                     loc_d6f0:
000000000000d6f0         xor        r10d, r10d                                  ; CODE XREF=sub_d6e0+135
000000000000d6f3         nop        dword [rax+rax]

                     loc_d6f8:
000000000000d6f8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000d6fe         jne        loc_daa8

000000000000d704         mov        qword [rsp+0xe8+var_B0], r11
000000000000d709         mov        byte [rsp+0xe8+var_B8], r8b
000000000000d70e         mov        byte [rsp+0xe8+var_C0], r10b
000000000000d713         call       j___ctype_b_loc                             ; __ctype_b_loc
000000000000d718         mov        rcx, qword [rax]
000000000000d71b         movzx      edx, bl
000000000000d71e         movzx      r10d, byte [rsp+0xe8+var_C0]
000000000000d724         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000d72a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000d72f         mov        edi, 0x1
000000000000d734         movzx      eax, word [rcx+rdx*2]
000000000000d738         and        ax, 0x4000
000000000000d73c         setne      r12b
000000000000d740         sete       al
000000000000d743         and        al, byte [rsp+0xe8+var_DB]

                     loc_d747:
000000000000d747         test       al, al                                      ; CODE XREF=sub_d940+2221
000000000000d749         jne        loc_e0e1

000000000000d74f         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000d754         sete       dl
000000000000d757         jmp        loc_d428
000000000000d75c         align      32

                     loc_d760:
000000000000d760         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
000000000000d764         cmp        bl, 0x7e
000000000000d767         ja         loc_d6f0

000000000000d769         lea        rcx, qword [switch_table_153a0+552]         ; 0x155c8
000000000000d770         movzx      edx, bl
000000000000d773         movsxd     rax, dword [rcx+rdx*4]
000000000000d777         add        rax, rcx
000000000000d77a         jmp        rax
                        ; endp
000000000000d77c         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_d780:
000000000000d780         xor        r10d, r10d
000000000000d783         cmp        byte [rsp+arg_5], 0x0
000000000000d788         jne        loc_d57e

000000000000d78e         nop

                     loc_d790:
000000000000d790         mov        edx, 0x5c                                   ; CODE XREF=sub_d4f0+136, sub_d4f0+147
000000000000d795         mov        ebx, 0x5c
000000000000d79a         jmp        sub_d4f0+68
                        ; endp
000000000000d79f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_d7a0:
000000000000d7a0         mov        edx, 0xc
000000000000d7a5         xor        r10d, r10d
000000000000d7a8         mov        ebx, 0x66
000000000000d7ad         jmp        sub_d4f0+68
                        ; endp
000000000000d7b2         nop        word [rax+rax]
000000000000d7b8         mov        edx, 0xa
000000000000d7bd         xor        r10d, r10d
000000000000d7c0         mov        ebx, 0x6e
000000000000d7c5         jmp        sub_d4f0+50
000000000000d7ca         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_d7d0:
000000000000d7d0         mov        ebx, 0x61
000000000000d7d5         jmp        sub_d4f0+176
                        ; endp
000000000000d7da         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_d7e0:
000000000000d7e0         xor        r10d, r10d
                        ; endp

                     loc_d7e3:
000000000000d7e3         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_d610+5
000000000000d7e8         sete       dl
000000000000d7eb         cmp        byte [rsp+arg_7], 0x0
000000000000d7f0         jne        loc_e38a

000000000000d7f6         mov        eax, r8d
000000000000d7f9         mov        rcx, r15
000000000000d7fc         xor        eax, 0x1
000000000000d7ff         and        al, dl
000000000000d801         je         loc_d830

000000000000d803         cmp        r13, r15
000000000000d806         jbe        loc_d80d

000000000000d808         mov        byte [r14+r15], 0x27

                     loc_d80d:
000000000000d80d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_d7e0+38
000000000000d811         cmp        r13, rcx
000000000000d814         jbe        loc_d81c

000000000000d816         mov        byte [r14+r15+1], 0x24

                     loc_d81c:
000000000000d81c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_d7e0+52
000000000000d820         cmp        r13, rcx
000000000000d823         ja         loc_de59

                     loc_d829:
000000000000d829         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_d940+1311
000000000000d82d         mov        r8d, eax

                     loc_d830:
000000000000d830         cmp        r13, rcx                                    ; CODE XREF=sub_d7e0+33
000000000000d833         jbe        loc_d83a

000000000000d835         mov        byte [r14+rcx], 0x5c

                     loc_d83a:
000000000000d83a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_d7e0+83
000000000000d83f         lea        r15, qword [rcx+1]
000000000000d843         je         loc_de49

000000000000d849         lea        rax, qword [rbp+1]
000000000000d84d         cmp        rax, r11
000000000000d850         jae        loc_d86b

000000000000d852         mov        rax, qword [rsp+arg_8]
000000000000d857         movzx      eax, byte [rax+rbp+1]
000000000000d85c         mov        byte [rsp+arg_20], al
000000000000d860         sub        eax, 0x30
000000000000d863         cmp        al, 0x9
000000000000d865         jbe        loc_e099

                     loc_d86b:
000000000000d86b         mov        eax, r12d                                   ; CODE XREF=sub_d7e0+112
000000000000d86e         mov        ebx, 0x30
000000000000d873         xor        r12d, r12d
000000000000d876         jmp        sub_d3f0+56
                        ; endp
000000000000d87b         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_d880:
000000000000d880         cmp        dword [rsp+arg_0], 0x2
000000000000d885         mov        r12d, r10d
000000000000d888         sete       dl
000000000000d88b         xor        r10d, r10d
000000000000d88e         xor        eax, eax
000000000000d890         jmp        sub_d3f0+56
                        ; endp
000000000000d895         nop        dword [rax]
000000000000d898         cmp        dword [rsp+8], 0x2
000000000000d89d         sete       dl
000000000000d8a0         xor        r10d, r10d
000000000000d8a3         jmp        sub_d660+8
000000000000d8a8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_d8b0:
000000000000d8b0         cmp        dword [rsp+8], 0x2
000000000000d8b5         sete       dl
000000000000d8b8         xor        r10d, r10d
000000000000d8bb         xor        r12d, r12d
000000000000d8be         jmp        sub_d660+17
                        ; endp
000000000000d8c3         nop        dword [rax+rax]
000000000000d8c8         cmp        dword [rsp+8], 0x2
000000000000d8cd         mov        r12d, r10d
000000000000d8d0         mov        ebx, 0x20
000000000000d8d5         sete       dl
000000000000d8d8         xor        r10d, r10d
000000000000d8db         jmp        sub_d660+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_d8e0:
000000000000d8e0         mov        edx, 0xd
000000000000d8e5         xor        r10d, r10d
000000000000d8e8         mov        ebx, 0x72
000000000000d8ed         jmp        sub_d4f0+50
                        ; endp
000000000000d8f2         nop        word [rax+rax]
000000000000d8f8         mov        ebx, 0x76
000000000000d8fd         jmp        sub_d4f0+176
000000000000d902         nop        word [rax+rax]
000000000000d908         mov        edx, 0x9
000000000000d90d         xor        r10d, r10d
000000000000d910         mov        ebx, 0x74
000000000000d915         jmp        sub_d4f0+50
000000000000d91a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_d920:
000000000000d920         mov        ebx, 0x62
000000000000d925         jmp        sub_d4f0+176
                        ; endp
000000000000d92a         nop        word [rax+rax]

                     loc_d930:
000000000000d930         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
000000000000d933         jmp        loc_d3d0
000000000000d938         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_d940:
000000000000d940         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_d4f0+125
000000000000d945         jne        sub_d940+2416
                        ; endp

                     loc_d94b:
000000000000d94b         add        rbp, 0x1                                    ; CODE XREF=sub_d4f0+159
000000000000d94f         mov        eax, r8d
000000000000d952         xor        r12d, r12d
000000000000d955         mov        ebx, 0x5c
000000000000d95a         jmp        sub_d3f0+124
                        ; endp
000000000000d95f         align      32

                     loc_d960:
000000000000d960         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
000000000000d965         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000d96a         mov        r12d, r8d
000000000000d96d         mov        rbp, r11
000000000000d970         sete       dl
000000000000d973         mov        eax, ebx
000000000000d975         test       r15, r15
000000000000d978         sete       cl
000000000000d97b         and        eax, edx
000000000000d97d         and        al, cl
000000000000d97f         jne        loc_e3e6

000000000000d985         mov        eax, ebx
000000000000d987         xor        eax, 0x1
000000000000d98a         and        dl, al
000000000000d98c         je         loc_e2fc

000000000000d992         cmp        byte [rsp+0xe8+var_6C], 0x0
000000000000d997         je         loc_e2fa

000000000000d99d         cmp        byte [rsp+0xe8+var_DA], 0x0
000000000000d9a2         jne        loc_e39d

000000000000d9a8         test       r13, r13
000000000000d9ab         sete       al
000000000000d9ae         cmp        qword [rsp+0xe8+var_98], 0x0
000000000000d9b4         setne      dl
000000000000d9b7         and        al, dl
000000000000d9b9         je         loc_e3dc

000000000000d9bf         mov        r13, qword [rsp+0xe8+var_98]

                     loc_d9c4:
000000000000d9c4         lea        rbx, qword [aLibs+29]                       ; 0x15335, CODE XREF=sub_d940+2781
000000000000d9cb         mov        byte [r14], 0x27
000000000000d9cf         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000d9d7         mov        r15d, 0x1
000000000000d9dd         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000d9e6         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000d9eb         mov        qword [rsp+0xe8+var_A0], rbx
000000000000d9f0         mov        byte [rsp+0xe8+var_6C], al
000000000000d9f4         jmp        loc_d2d3
000000000000d9f9         align      512

                     loc_da00:
000000000000da00         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_d4f0+8
000000000000da05         jne        sub_d940+2416

000000000000da0b         test       r13, r13
000000000000da0e         je         loc_de10

000000000000da14         xor        edx, edx
000000000000da16         cmp        qword [rsp+arg_48], 0x0
000000000000da1c         jne        loc_de10

                     loc_da22:
000000000000da22         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_d940+1284, sub_d940+2794
000000000000da27         add        r15, 0x3
000000000000da2b         xor        eax, eax
000000000000da2d         mov        byte [rsp+arg_74], r12b
000000000000da32         xor        r8d, r8d
000000000000da35         mov        r13, rdx
000000000000da38         mov        ebx, 0x27
000000000000da3d         jmp        sub_d3f0+105
                        ; endp
000000000000da42         align      8

                     loc_da48:
000000000000da48         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_d4c0+19
000000000000da4d         je         loc_da70

000000000000da4f         lea        rcx, qword [rbp+2]
000000000000da53         cmp        rcx, r11
000000000000da56         jae        loc_da70

000000000000da58         mov        rax, qword [rsp+arg_8]
000000000000da5d         cmp        byte [rax+rbp+1], 0x3f
000000000000da62         je         loc_e1f2

000000000000da68         nop        dword [rax+rax]

                     loc_da70:
000000000000da70         xor        edx, edx                                    ; CODE XREF=sub_d940+269, sub_d940+278, sub_d940+2233, sub_d940+2253
000000000000da72         xor        r12d, r12d
000000000000da75         xor        eax, eax
000000000000da77         mov        ebx, 0x3f
000000000000da7c         jmp        sub_d3f0+56
                        ; endp
000000000000da81         align      8

                     loc_da88:
000000000000da88         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_d4c0+10
000000000000da8d         jne        loc_e2b0

000000000000da93         xor        r12d, r12d
000000000000da96         xor        eax, eax
000000000000da98         mov        ebx, 0x3f
000000000000da9d         jmp        sub_d3f0+105
                        ; endp
000000000000daa2         align      8

                     loc_daa8:
000000000000daa8         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_d6e0+30
000000000000dab0         cmp        r11, 0xffffffffffffffff
000000000000dab4         mov        qword [rsp+0xe8+var_48], 0x0
000000000000dac0         mov        qword [rsp+0xe8+var_C0], rax
000000000000dac5         jne        loc_daf4

000000000000dac7         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000dacc         mov        byte [rsp+0xe8+var_A8], r8b
000000000000dad1         mov        byte [rsp+0xe8+var_B0], r10b
000000000000dad6         mov        qword [rsp+0xe8+var_B8], r9
000000000000dadb         call       j_strlen                                    ; strlen
000000000000dae0         movzx      r8d, byte [rsp+0xe8+var_A8]
000000000000dae6         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000daec         mov        r11, rax
000000000000daef         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_daf4:
000000000000daf4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_d940+389
000000000000dafc         xor        ecx, ecx
000000000000dafe         mov        byte [rsp+0xe8+var_6A], bl
000000000000db02         mov        byte [rsp+0xe8+var_6B], r8b
000000000000db07         mov        rbx, rcx
000000000000db0a         mov        qword [rsp+0xe8+var_60], r9
000000000000db12         mov        qword [rsp+0xe8+var_B0], rax
000000000000db17         mov        byte [rsp+0xe8+var_69], r10b
000000000000db1c         mov        qword [rsp+0xe8+var_68], r15
000000000000db24         mov        qword [rsp+0xe8+var_A8], r14
000000000000db29         mov        qword [rsp+0xe8+var_78], r13
000000000000db2e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_db33:
000000000000db33         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_d940+623
000000000000db38         lea        r14, qword [rbp+rbx]
000000000000db3d         mov        rdx, qword [rsp+0xe8+var_B8]
000000000000db42         mov        rcx, qword [rsp+0xe8+var_C0]
000000000000db47         mov        rdi, qword [rsp+0xe8+var_B0]
000000000000db4c         lea        r13, qword [rax+r14]
000000000000db50         sub        rdx, r14
000000000000db53         mov        rsi, r13
000000000000db56         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000db5b         test       rax, rax
000000000000db5e         mov        r15, rax
000000000000db61         je         loc_dbb1

000000000000db63         cmp        rax, 0xffffffffffffffff
000000000000db67         je         loc_e185

000000000000db6d         cmp        rax, 0xfffffffffffffffe
000000000000db71         je         loc_e111

000000000000db77         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000db7c         sete       al
000000000000db7f         and        al, byte [rsp+0xe8+var_D9]
000000000000db83         jne        loc_dd20

                     loc_db89:
000000000000db89         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_d940+996, sub_d940+1031
000000000000db90         call       j_iswprint                                  ; iswprint
000000000000db95         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000db9a         test       eax, eax
000000000000db9c         mov        eax, 0x0
000000000000dba1         cmove      r12d, eax
000000000000dba5         add        rbx, r15
000000000000dba8         call       j_mbsinit                                   ; mbsinit
000000000000dbad         test       eax, eax
000000000000dbaf         je         loc_db33

                     loc_dbb1:
000000000000dbb1         mov        edx, r12d                                   ; CODE XREF=sub_d940+545
000000000000dbb4         mov        rdi, rbx
000000000000dbb7         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000dbbd         xor        edx, 0x1
000000000000dbc0         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000dbc5         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000dbcb         and        dl, byte [rsp+0xe8+var_DB]
000000000000dbcf         mov        r15, qword [rsp+0xe8+var_68]
000000000000dbd7         mov        r14, qword [rsp+0xe8+var_A8]
000000000000dbdc         mov        r13, qword [rsp+0xe8+var_78]
000000000000dbe1         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_dbe6:
000000000000dbe6         cmp        rdi, 0x1                                    ; CODE XREF=sub_d940+2112, sub_d940+2168
000000000000dbea         jbe        loc_e1eb

                     loc_dbf0:
000000000000dbf0         mov        rcx, rdi                                    ; CODE XREF=sub_d940+1961
000000000000dbf3         xor        esi, esi
000000000000dbf5         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000dbfb         add        rcx, rbp
000000000000dbfe         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000dc03         jmp        loc_dcbe
000000000000dc08         align      16

                     loc_dc10:
000000000000dc10         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_d940+896
000000000000dc15         sete       al
000000000000dc18         test       r9b, r9b
000000000000dc1b         jne        loc_e0d0

000000000000dc21         mov        esi, r8d
000000000000dc24         xor        esi, 0x1
000000000000dc27         and        al, sil
000000000000dc2a         je         loc_dc5b

000000000000dc2c         cmp        r13, r15
000000000000dc2f         jbe        loc_dc36

000000000000dc31         mov        byte [r14+r15], 0x27

                     loc_dc36:
000000000000dc36         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_d940+751
000000000000dc3a         cmp        r13, rsi
000000000000dc3d         jbe        loc_dc45

000000000000dc3f         mov        byte [r14+r15+1], 0x24

                     loc_dc45:
000000000000dc45         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_d940+765
000000000000dc49         cmp        r13, rsi
000000000000dc4c         jbe        loc_dc54

000000000000dc4e         mov        byte [r14+r15+2], 0x27

                     loc_dc54:
000000000000dc54         add        r15, 0x3                                    ; CODE XREF=sub_d940+780
000000000000dc58         mov        r8d, eax

                     loc_dc5b:
000000000000dc5b         cmp        r13, r15                                    ; CODE XREF=sub_d940+746
000000000000dc5e         jbe        loc_dc65

000000000000dc60         mov        byte [r14+r15], 0x5c

                     loc_dc65:
000000000000dc65         lea        rax, qword [r15+1]                          ; CODE XREF=sub_d940+798
000000000000dc69         cmp        r13, rax
000000000000dc6c         jbe        loc_dc7b

000000000000dc6e         mov        eax, ebx
000000000000dc70         shr        al, 0x6
000000000000dc73         add        eax, 0x30
000000000000dc76         mov        byte [r14+r15+1], al

                     loc_dc7b:
000000000000dc7b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_d940+812
000000000000dc7f         cmp        r13, rax
000000000000dc82         jbe        loc_dc94

000000000000dc84         mov        eax, ebx
000000000000dc86         shr        al, 0x3
000000000000dc89         and        eax, 0x7
000000000000dc8c         add        eax, 0x30
000000000000dc8f         mov        byte [r14+r15+2], al

                     loc_dc94:
000000000000dc94         and        ebx, 0x7                                    ; CODE XREF=sub_d940+834
000000000000dc97         add        rbp, 0x1
000000000000dc9b         add        r15, 0x3
000000000000dc9f         add        ebx, 0x30
000000000000dca2         cmp        rbp, rcx
000000000000dca5         jae        loc_d490

000000000000dcab         mov        esi, edx

                     loc_dcad:
000000000000dcad         cmp        r13, r15                                    ; CODE XREF=sub_d940+985, sub_d940+1969
000000000000dcb0         jbe        loc_dcb6

000000000000dcb2         mov        byte [r14+r15], bl

                     loc_dcb6:
000000000000dcb6         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_d940+880
000000000000dcba         add        r15, 0x1

                     loc_dcbe:
000000000000dcbe         test       dl, dl                                      ; CODE XREF=sub_d940+707
000000000000dcc0         jne        loc_dc10

000000000000dcc6         mov        eax, esi
000000000000dcc8         xor        eax, 0x1
000000000000dccb         and        eax, r8d
000000000000dcce         test       r10b, r10b
000000000000dcd1         je         loc_dce1

000000000000dcd3         cmp        r13, r15
000000000000dcd6         jbe        loc_dcdd

000000000000dcd8         mov        byte [r14+r15], 0x5c

                     loc_dcdd:
000000000000dcdd         add        r15, 0x1                                    ; CODE XREF=sub_d940+918

                     loc_dce1:
000000000000dce1         add        rbp, 0x1                                    ; CODE XREF=sub_d940+913
000000000000dce5         cmp        rbp, rcx
000000000000dce8         jae        loc_d46c

000000000000dcee         test       al, al
000000000000dcf0         je         loc_e0ee

000000000000dcf6         cmp        r13, r15
000000000000dcf9         jbe        loc_dd00

000000000000dcfb         mov        byte [r14+r15], 0x27

                     loc_dd00:
000000000000dd00         lea        rax, qword [r15+1]                          ; CODE XREF=sub_d940+953
000000000000dd04         cmp        r13, rax
000000000000dd07         jbe        loc_dd0f

000000000000dd09         mov        byte [r14+r15+1], 0x27

                     loc_dd0f:
000000000000dd0f         add        r15, 0x2                                    ; CODE XREF=sub_d940+967
000000000000dd13         xor        r10d, r10d
000000000000dd16         xor        r8d, r8d
000000000000dd19         jmp        loc_dcad
000000000000dd1b         align      32

                     loc_dd20:
000000000000dd20         cmp        r15, 0x1                                    ; CODE XREF=sub_d940+579
000000000000dd24         je         loc_db89

000000000000dd2a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000dd2f         lea        rcx, qword [rdi+r15]
000000000000dd33         lea        rdx, qword [rdi+r14+1]
000000000000dd38         lea        r8, qword [rcx+r14]
000000000000dd3c         jmp        loc_dd4d
000000000000dd3e         align      64

                     loc_dd40:
000000000000dd40         add        rdx, 0x1                                    ; CODE XREF=sub_d940+1046, sub_d940+1072
000000000000dd44         cmp        r8, rdx
000000000000dd47         je         loc_db89

                     loc_dd4d:
000000000000dd4d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_d940+1020
000000000000dd50         sub        ecx, 0x5b
000000000000dd53         cmp        cl, 0x21
000000000000dd56         ja         loc_dd40

000000000000dd58         mov        esi, 0x1
000000000000dd5d         shl        rsi, cl
000000000000dd60         mov        rcx, rsi
000000000000dd63         movabs     rsi, 0x20000002b
000000000000dd6d         test       rcx, rsi
000000000000dd70         je         loc_dd40

000000000000dd72         mov        r14, qword [rsp+0xe8+var_A8]
000000000000dd77         mov        r13, qword [rsp+0xe8+var_78]
000000000000dd7c         mov        rbp, qword [rsp+0xe8+var_B8]
000000000000dd81         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_dd89:
000000000000dd89         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_d940+1227, sub_d940+1948, sub_d940+2585, sub_d940+2734
000000000000dd8e         je         loc_dda0

000000000000dd90         test       al, al
000000000000dd92         mov        eax, 0x4
000000000000dd97         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000dd9c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_dda0:
000000000000dda0         sub        rsp, 0x8                                    ; CODE XREF=sub_d940+1102
000000000000dda4         mov        rcx, rbp
000000000000dda7         mov        rsi, r13
000000000000ddaa         push       qword [rsp+0xf0+var_88]
000000000000ddae         push       qword [rsp+0xf8+var_80]
000000000000ddb2         mov        rdi, r14
000000000000ddb5         push       0x0
000000000000ddb7         mov        r9d, dword [rsp+0x108+var_70]
000000000000ddbf         mov        r8d, dword [rsp+0x108+var_E0]
000000000000ddc4         mov        rdx, qword [rsp+0x108+var_D8]
000000000000ddc9         and        r9d, 0xfffffffd
000000000000ddcd         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000ddd2         add        rsp, 0x20
000000000000ddd6         mov        r15, rax

                     loc_ddd9:
000000000000ddd9         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_d940+2549, sub_d940+2560, sub_d940+2711
000000000000dde1         xor        rbx, qword [fs:0x28]
000000000000ddea         mov        rax, r15
000000000000dded         jne        loc_e3f3

000000000000ddf3         add        rsp, 0xb8
000000000000ddfa         pop        rbx
000000000000ddfb         pop        rbp
000000000000ddfc         pop        r12
000000000000ddfe         pop        r13
000000000000de00         pop        r14
000000000000de02         pop        r15
000000000000de04         ret
                        ; endp
000000000000de05         align      8

                     loc_de08:
000000000000de08         mov        rbp, r11                                    ; CODE XREF=sub_d4f0+194
000000000000de0b         jmp        loc_dd89

                     loc_de10:
000000000000de10         cmp        r13, r15                                    ; CODE XREF=sub_d940+206, sub_d940+220
000000000000de13         jbe        loc_de1a

000000000000de15         mov        byte [r14+r15], 0x27

                     loc_de1a:
000000000000de1a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_d940+1235
000000000000de1e         cmp        r13, rax
000000000000de21         jbe        loc_de29

000000000000de23         mov        byte [r14+r15+1], 0x5c

                     loc_de29:
000000000000de29         lea        rax, qword [r15+2]                          ; CODE XREF=sub_d940+1249
000000000000de2d         cmp        r13, rax
000000000000de30         jbe        loc_e422

000000000000de36         mov        rdx, r13
000000000000de39         mov        byte [r14+r15+2], 0x27
000000000000de3f         mov        r13, qword [rsp+arg_48]
000000000000de44         jmp        loc_da22

                     loc_de49:
000000000000de49         mov        eax, r12d                                   ; CODE XREF=sub_d7e0+99
000000000000de4c         mov        ebx, 0x30
000000000000de51         xor        r12d, r12d
000000000000de54         jmp        sub_d3f0+105
                        ; endp

                     loc_de59:
000000000000de59         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_d7e0+67
000000000000de5f         jmp        loc_d829

                     loc_de64:
000000000000de64         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
000000000000de66         jne        loc_d293

000000000000de6c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_de71:
000000000000de71         test       r13, r13                                    ; CODE XREF=sub_d940+2749
000000000000de74         jne        loc_e40a

000000000000de7a         lea        rax, qword [aLibs+29]                       ; 0x15335
000000000000de81         mov        qword [rsp+0xe8+var_98], 0x0
000000000000de8a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000de8f         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000de94         xor        r12d, r12d
000000000000de97         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000de9c         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000dea5         mov        qword [rsp+0xe8+var_A0], rax
000000000000deaa         mov        r15d, 0x1
000000000000deb0         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000deb8         jmp        loc_d2d3
000000000000debd         align      64

                     loc_dec0:
000000000000dec0         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
000000000000dec2         jne        loc_e2bd

000000000000dec8         test       r13, r13
000000000000decb         je         loc_e0f6

000000000000ded1         mov        byte [r14], 0x22
000000000000ded5         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000deda         xor        r12d, r12d
000000000000dedd         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000dee2         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_deeb:
000000000000deeb         lea        rax, qword [aLibs+27]                       ; 0x15333, CODE XREF=sub_d940+1996
000000000000def2         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000def7         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000defc         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000df05         mov        r15d, 0x1
000000000000df0b         mov        qword [rsp+0xe8+var_A0], rax
000000000000df10         jmp        loc_d2d3

                     loc_df15:
000000000000df15         lea        rax, qword [aLibs+27]                       ; case 6, 0x15333, CODE XREF=quotearg_buffer_restyled+145
000000000000df1c         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000df21         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000df26         xor        r12d, r12d
000000000000df29         mov        qword [rsp+0xe8+var_98], 0x0
000000000000df32         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000df37         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000df3c         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000df45         xor        r15d, r15d
000000000000df48         mov        qword [rsp+0xe8+var_A0], rax
000000000000df4d         mov        dword [rsp+0xe8+var_E0], 0x5
000000000000df55         jmp        loc_d2d3

                     loc_df5a:
000000000000df5a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000df5f         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000df64         xor        r12d, r12d
000000000000df67         mov        qword [rsp+0xe8+var_98], 0x0
000000000000df70         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000df75         xor        r15d, r15d
000000000000df78         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000df7d         mov        qword [rsp+0xe8+var_D0], 0x0
000000000000df86         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000df8f         jmp        loc_d2d3

                     loc_df94:
000000000000df94         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
000000000000df99         je         loc_dff1

000000000000df9b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x15337
000000000000dfa2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000dfa4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000dfa9         call       j_dcgettext                                 ; dcgettext
000000000000dfae         mov        rcx, rax
000000000000dfb1         mov        qword [rsp+0xe8+var_80], rax
000000000000dfb6         lea        rax, qword [aLibs+31]                       ; 0x15337
000000000000dfbd         cmp        rcx, rax
000000000000dfc0         je         loc_e35e

                     loc_dfc6:
000000000000dfc6         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x15335, CODE XREF=sub_d940+2607
000000000000dfcd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000dfcf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000dfd4         call       j_dcgettext                                 ; dcgettext
000000000000dfd9         mov        rcx, rax
000000000000dfdc         mov        qword [rsp+0xe8+var_88], rax
000000000000dfe1         lea        rax, qword [aLibs+29]                       ; 0x15335
000000000000dfe8         cmp        rcx, rax
000000000000dfeb         je         loc_e374

                     loc_dff1:
000000000000dff1         xor        r15d, r15d                                  ; CODE XREF=sub_d940+1625, sub_d940+2629
000000000000dff4         test       ebx, ebx
000000000000dff6         je         loc_e1bd

                     loc_dffc:
000000000000dffc         test       ebx, ebx                                    ; CODE XREF=sub_d940+2183, sub_d940+2214
000000000000dffe         mov        rbx, qword [rsp+0xe8+var_88]
000000000000e003         setne      byte [rsp+0xe8+var_D9]
000000000000e008         xor        r12d, r12d
000000000000e00b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000e00e         call       j_strlen                                    ; strlen
000000000000e013         mov        qword [rsp+0xe8+var_A0], rbx
000000000000e018         mov        qword [rsp+0xe8+var_D0], rax
000000000000e01d         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000e022         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000e027         mov        qword [rsp+0xe8+var_98], 0x0
000000000000e030         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000e035         jmp        loc_d2d3

                     loc_e03a:
000000000000e03a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
000000000000e03f         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000e044         xor        r12d, r12d
000000000000e047         mov        qword [rsp+0xe8+var_98], 0x0
000000000000e050         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000e055         xor        r15d, r15d
000000000000e058         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000e05d         mov        qword [rsp+0xe8+var_D0], 0x0
000000000000e066         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000e06f         jmp        loc_d2d3

                     loc_e074:
000000000000e074         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
000000000000e079         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000e07e         xor        r12d, r12d
000000000000e081         mov        qword [rsp+0xe8+var_98], 0x0
000000000000e08a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000e08f         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000e094         jmp        loc_d2b3

                     loc_e099:
000000000000e099         cmp        r13, r15                                    ; CODE XREF=sub_d7e0+133
000000000000e09c         jbe        loc_e0a3

000000000000e09e         mov        byte [r14+r15], 0x30

                     loc_e0a3:
000000000000e0a3         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_d940+1884
000000000000e0a7         cmp        r13, rax
000000000000e0aa         jbe        loc_e0b2

000000000000e0ac         mov        byte [r14+rcx+2], 0x30

                     loc_e0b2:
000000000000e0b2         mov        eax, r12d                                   ; CODE XREF=sub_d940+1898
000000000000e0b5         lea        r15, qword [rcx+3]
000000000000e0b9         xor        r12d, r12d
000000000000e0bc         mov        ebx, 0x30
000000000000e0c1         jmp        sub_d3f0+56
                        ; endp
000000000000e0c6         align      16

                     loc_e0d0:
000000000000e0d0         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_d940+731
000000000000e0d5         mov        rbp, r11
000000000000e0d8         mov        byte [rsp+0xe8+var_DB], bl
000000000000e0dc         jmp        loc_dd89

                     loc_e0e1:
000000000000e0e1         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_d6e0+105
000000000000e0e6         xor        r12d, r12d
000000000000e0e9         jmp        loc_dbf0

                     loc_e0ee:
000000000000e0ee         xor        r10d, r10d                                  ; CODE XREF=sub_d940+944
000000000000e0f1         jmp        loc_dcad

                     loc_e0f6:
000000000000e0f6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_d940+1419
000000000000e0ff         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000e104         xor        r12d, r12d
000000000000e107         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000e10c         jmp        loc_deeb

                     loc_e111:
000000000000e111         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_d940+561
000000000000e116         mov        rsi, r14
000000000000e119         mov        rcx, r13
000000000000e11c         mov        rax, rbx
000000000000e11f         mov        rdi, rbx
000000000000e122         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000e128         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000e12d         mov        r9, qword [rsp+0xe8+var_60]
000000000000e135         cmp        rsi, r11
000000000000e138         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000e13e         mov        r15, qword [rsp+0xe8+var_68]
000000000000e146         mov        r14, qword [rsp+0xe8+var_A8]
000000000000e14b         mov        r13, qword [rsp+0xe8+var_78]
000000000000e150         jae        loc_e178

000000000000e152         cmp        byte [rcx], 0x0
000000000000e155         jne        loc_e167

000000000000e157         jmp        loc_e178
000000000000e159         align      32

                     loc_e160:
000000000000e160         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_d940+2099
000000000000e165         je         loc_e175

                     loc_e167:
000000000000e167         add        rax, 0x1                                    ; CODE XREF=sub_d940+2069
000000000000e16b         lea        rdx, qword [rbp+rax]
000000000000e170         cmp        r11, rdx
000000000000e173         ja         loc_e160

                     loc_e175:
000000000000e175         mov        rdi, rax                                    ; CODE XREF=sub_d940+2085

                     loc_e178:
000000000000e178         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_d940+2064, sub_d940+2071
000000000000e17d         xor        r12d, r12d
000000000000e180         jmp        loc_dbe6

                     loc_e185:
000000000000e185         mov        rdi, rbx                                    ; CODE XREF=sub_d940+551
000000000000e188         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000e18e         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000e193         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000e199         mov        r15, qword [rsp+0xe8+var_68]
000000000000e1a1         xor        r12d, r12d
000000000000e1a4         mov        r14, qword [rsp+0xe8+var_A8]
000000000000e1a9         mov        r13, qword [rsp+0xe8+var_78]
000000000000e1ae         mov        r11, qword [rsp+0xe8+var_B8]
000000000000e1b3         movzx      edx, byte [rsp+0xe8+var_DB]
000000000000e1b8         jmp        loc_dbe6

                     loc_e1bd:
000000000000e1bd         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_d940+1718
000000000000e1c2         movzx      eax, byte [rdx]
000000000000e1c5         test       al, al
000000000000e1c7         je         loc_dffc

000000000000e1cd         nop        dword [rax]

                     loc_e1d0:
000000000000e1d0         cmp        r13, r15                                    ; CODE XREF=sub_d940+2212
000000000000e1d3         jbe        loc_e1d9

000000000000e1d5         mov        byte [r14+r15], al

                     loc_e1d9:
000000000000e1d9         add        r15, 0x1                                    ; CODE XREF=sub_d940+2195
000000000000e1dd         movzx      eax, byte [rdx+r15]
000000000000e1e2         test       al, al
000000000000e1e4         jne        loc_e1d0

000000000000e1e6         jmp        loc_dffc

                     loc_e1eb:
000000000000e1eb         mov        eax, edx                                    ; CODE XREF=sub_d940+682
000000000000e1ed         jmp        loc_d747

                     loc_e1f2:
000000000000e1f2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_d940+290
000000000000e1f6         cmp        bl, 0x3e
000000000000e1f9         ja         loc_da70

000000000000e1ff         movabs     rax, 0x7000a38200000000
000000000000e209         bt         rax, rbx
000000000000e20d         jae        loc_da70

000000000000e213         cmp        byte [rsp+arg_7], 0x0
000000000000e218         jne        loc_e402

000000000000e21e         cmp        r13, r15
000000000000e221         jbe        loc_e228

000000000000e223         mov        byte [r14+r15], 0x3f

                     loc_e228:
000000000000e228         lea        rax, qword [r15+1]                          ; CODE XREF=sub_d940+2273
000000000000e22c         cmp        r13, rax
000000000000e22f         jbe        loc_e237

000000000000e231         mov        byte [r14+r15+1], 0x22

                     loc_e237:
000000000000e237         lea        rax, qword [r15+2]                          ; CODE XREF=sub_d940+2287
000000000000e23b         cmp        r13, rax
000000000000e23e         jbe        loc_e246

000000000000e240         mov        byte [r14+r15+2], 0x22

                     loc_e246:
000000000000e246         lea        rax, qword [r15+3]                          ; CODE XREF=sub_d940+2302
000000000000e24a         cmp        r13, rax
000000000000e24d         jbe        loc_e255

000000000000e24f         mov        byte [r14+r15+3], 0x3f

                     loc_e255:
000000000000e255         add        r15, 0x4                                    ; CODE XREF=sub_d940+2317
000000000000e259         xor        edx, edx
000000000000e25b         xor        r12d, r12d
000000000000e25e         xor        eax, eax
000000000000e260         mov        rbp, rcx
000000000000e263         jmp        sub_d3f0+56
                        ; endp

                     loc_e268:
000000000000e268         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
000000000000e26a         je         loc_e3f8

000000000000e270         lea        rax, qword [aLibs+29]                       ; 0x15335
000000000000e277         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000e27c         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000e281         xor        r12d, r12d
000000000000e284         mov        qword [rsp+0xe8+var_98], 0x0
000000000000e28d         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000e292         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000e297         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000e2a0         xor        r15d, r15d
000000000000e2a3         mov        qword [rsp+0xe8+var_A0], rax
000000000000e2a8         jmp        loc_d2d3
000000000000e2ad         align      16

                     loc_e2b0:
000000000000e2b0         mov        rbp, r11                                    ; CODE XREF=sub_d940+333
000000000000e2b3         movzx      eax, byte [rsp+arg_7]
000000000000e2b8         jmp        sub_d940+1097
                        ; endp

                     loc_e2bd:
000000000000e2bd         lea        rax, qword [aLibs+27]                       ; 0x15333, CODE XREF=sub_d940+1410
000000000000e2c4         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000e2c9         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000e2ce         xor        r12d, r12d
000000000000e2d1         mov        qword [rsp+0xe8+var_98], 0x0
000000000000e2da         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000e2df         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000e2e4         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000e2ed         xor        r15d, r15d
000000000000e2f0         mov        qword [rsp+0xe8+var_A0], rax
000000000000e2f5         jmp        loc_d2d3

                     loc_e2fa:
000000000000e2fa         mov        eax, edx                                    ; CODE XREF=sub_d940+87

                     loc_e2fc:
000000000000e2fc         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_d940+76, sub_d940+2721
000000000000e301         test       rbx, rbx
000000000000e304         je         loc_e332

000000000000e306         test       al, al
000000000000e308         je         loc_e332

000000000000e30a         movzx      ecx, byte [rbx]
000000000000e30d         mov        rax, rbx
000000000000e310         test       cl, cl
000000000000e312         je         loc_e332

000000000000e314         mov        rdx, r15
000000000000e317         sub        rax, r15

                     loc_e31a:
000000000000e31a         cmp        r13, rdx                                    ; CODE XREF=sub_d940+2541
000000000000e31d         jbe        loc_e323

000000000000e31f         mov        byte [r14+rdx], cl

                     loc_e323:
000000000000e323         add        rdx, 0x1                                    ; CODE XREF=sub_d940+2525
000000000000e327         movzx      ecx, byte [rax+rdx]
000000000000e32b         test       cl, cl
000000000000e32d         jne        loc_e31a

000000000000e32f         mov        r15, rdx

                     loc_e332:
000000000000e332         cmp        r13, r15                                    ; CODE XREF=sub_d940+2500, sub_d940+2504, sub_d940+2514
000000000000e335         jbe        loc_ddd9

000000000000e33b         mov        byte [r14+r15], 0x0
000000000000e340         jmp        loc_ddd9

                     loc_e345:
000000000000e345         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
000000000000e34a         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000e34f         mov        rbp, r11
000000000000e352         sete       al
000000000000e355         mov        byte [rsp+0xe8+var_DB], bl
000000000000e359         jmp        loc_dd89

                     loc_e35e:
000000000000e35e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_d940+1664
000000000000e362         mov        rdi, rcx
000000000000e365         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000e36a         mov        qword [rsp+0xe8+var_80], rax
000000000000e36f         jmp        loc_dfc6

                     loc_e374:
000000000000e374         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_d940+1707
000000000000e378         mov        rdi, rcx
000000000000e37b         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000e380         mov        qword [rsp+0xe8+var_88], rax
000000000000e385         jmp        loc_dff1

                     loc_e38a:
000000000000e38a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_d7e0+16
000000000000e38f         mov        rbp, r11
000000000000e392         mov        eax, edx
000000000000e394         mov        byte [rsp+arg_5], bl
000000000000e398         jmp        sub_d940+1097
                        ; endp

                     loc_e39d:
000000000000e39d         sub        rsp, 0x8                                    ; CODE XREF=sub_d940+98
000000000000e3a1         mov        r8d, 0x5
000000000000e3a7         mov        rcx, r11
000000000000e3aa         push       qword [rsp+0xf0+var_88]
000000000000e3ae         push       qword [rsp+0xf8+var_80]
000000000000e3b2         mov        rdi, r14
000000000000e3b5         push       qword [rsp+0x100+var_C8]
000000000000e3b9         mov        r9d, dword [rsp+0x108+var_70]
000000000000e3c1         mov        rdx, qword [rsp+0x108+var_D8]
000000000000e3c6         mov        rsi, qword [rsp+0x108+var_98]
000000000000e3cb         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000e3d0         add        rsp, 0x20
000000000000e3d4         mov        r15, rax
000000000000e3d7         jmp        loc_ddd9

                     loc_e3dc:
000000000000e3dc         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_d940+121
000000000000e3e1         jmp        loc_e2fc

                     loc_e3e6:
000000000000e3e6         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_d940+63
000000000000e3ee         jmp        loc_dd89

                     loc_e3f3:
000000000000e3f3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_d940+1197
                        ; endp

                     loc_e3f8:
000000000000e3f8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_d940+2346
000000000000e3fd         jmp        loc_de71

                     loc_e402:
000000000000e402         mov        rbp, r11                                    ; CODE XREF=sub_d940+2264
000000000000e405         jmp        sub_d940+1120
                        ; endp

                     loc_e40a:
000000000000e40a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_d940+1332
000000000000e40f         xor        eax, eax
000000000000e411         xor        r12d, r12d
000000000000e414         mov        qword [rsp+0xe8+var_98], 0x0
000000000000e41d         jmp        loc_d9c4

                     loc_e422:
000000000000e422         mov        rdx, r13                                    ; CODE XREF=sub_d940+1264
000000000000e425         mov        r13, qword [rsp+arg_48]
000000000000e42a         jmp        loc_da22

                     loc_e42f:
000000000000e42f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
000000000000e434         align      64                                          ; End of unwind block (FDE at 0x17910)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
000000000000e440         push       r15                                         ; Begin of unwind block (FDE at 0x17988), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
000000000000e442         push       r14
000000000000e444         movsxd     r15, edi
000000000000e447         push       r13
000000000000e449         push       r12
000000000000e44b         mov        r14, rdx
000000000000e44e         push       rbp
000000000000e44f         push       rbx
000000000000e450         mov        rbp, rcx
000000000000e453         sub        rsp, 0x28
000000000000e457         mov        qword [rsp+0x58+var_50], rsi
000000000000e45c         call       j___errno_location                          ; __errno_location
000000000000e461         mov        r13, rax
000000000000e464         mov        eax, dword [rax]
000000000000e466         test       r15d, r15d
000000000000e469         mov        rbx, qword [slotvec]                        ; slotvec
000000000000e470         mov        dword [rsp+0x58+var_40], eax
000000000000e474         js         loc_e5e1

000000000000e47a         cmp        dword [nslots], r15d                        ; nslots
000000000000e481         jg         loc_e4e5

000000000000e483         cmp        r15d, 0x7fffffff
000000000000e48a         je         loc_e5e6

000000000000e490         lea        r12d, dword [r15+1]
000000000000e494         lea        rax, qword [slotvec0]                       ; slotvec0
000000000000e49b         movsxd     rsi, r12d
000000000000e49e         shl        rsi, 0x4
000000000000e4a2         cmp        rbx, rax
000000000000e4a5         je         loc_e5c0

000000000000e4ab         mov        rdi, rbx
000000000000e4ae         call       xrealloc                                    ; xrealloc
000000000000e4b3         mov        rbx, rax
000000000000e4b6         mov        qword [slotvec], rax                        ; slotvec

                     loc_e4bd:
000000000000e4bd         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
000000000000e4c4         mov        edx, r12d
000000000000e4c7         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000000e4c9         sub        edx, edi
000000000000e4cb         shl        rdi, 0x4
000000000000e4cf         movsxd     rdx, edx
000000000000e4d2         add        rdi, rbx                                    ; argument "__s" for method j_memset
000000000000e4d5         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
000000000000e4d9         call       j_memset                                    ; memset
000000000000e4de         mov        dword [nslots], r12d                        ; nslots

                     loc_e4e5:
000000000000e4e5         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
000000000000e4e8         shl        r15, 0x4
000000000000e4ec         sub        rsp, 0x8
000000000000e4f0         add        rbx, r15
000000000000e4f3         lea        r15, qword [rbp+8]
000000000000e4f7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000e4fb         mov        r11, qword [rbx]
000000000000e4fe         mov        r12, qword [rbx+8]
000000000000e502         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
000000000000e505         or         eax, 0x1
000000000000e508         mov        dword [rsp+0x60+var_3C], eax
000000000000e50c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000e50f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
000000000000e512         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000e515         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
000000000000e517         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
000000000000e51a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000e51f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
000000000000e522         mov        qword [rsp+0x78+var_48], r11
000000000000e527         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000e52c         add        rsp, 0x20
000000000000e530         mov        r11, qword [rsp+0x58+var_48]
000000000000e535         cmp        r11, rax
000000000000e538         ja         loc_e5a1

000000000000e53a         lea        rsi, qword [rax+1]
000000000000e53e         lea        rax, qword [slot0]                          ; slot0
000000000000e545         cmp        r12, rax
000000000000e548         mov        qword [rbx], rsi
000000000000e54b         je         loc_e55f

000000000000e54d         mov        rdi, r12
000000000000e550         mov        qword [rsp+0x58+var_48], rsi
000000000000e555         call       sub_2e10                                    ; sub_2e10
000000000000e55a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_e55f:
000000000000e55f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
000000000000e562         mov        qword [rsp+0x58+var_48], rsi
000000000000e567         call       xmalloc                                     ; xmalloc
000000000000e56c         sub        rsp, 0x8
000000000000e570         mov        qword [rbx+8], rax
000000000000e574         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000e578         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000e57b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000e57e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
000000000000e581         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
000000000000e583         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
000000000000e588         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
000000000000e58b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000e590         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
000000000000e595         mov        r12, rax
000000000000e598         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000e59d         add        rsp, 0x20

                     loc_e5a1:
000000000000e5a1         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
000000000000e5a5         mov        dword [r13], eax
000000000000e5a9         add        rsp, 0x28
000000000000e5ad         mov        rax, r12
000000000000e5b0         pop        rbx
000000000000e5b1         pop        rbp
000000000000e5b2         pop        r12
000000000000e5b4         pop        r13
000000000000e5b6         pop        r14
000000000000e5b8         pop        r15
000000000000e5ba         ret
                        ; endp
000000000000e5bb         align      64

                     loc_e5c0:
000000000000e5c0         xor        edi, edi                                    ; CODE XREF=quotearg_n_options+101
000000000000e5c2         call       xrealloc                                    ; xrealloc
000000000000e5c7         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000e5cf         mov        rbx, rax
000000000000e5d2         mov        qword [slotvec], rax                        ; slotvec
000000000000e5d9         movups     xmmword [rax], xmm0
000000000000e5dc         jmp        loc_e4bd

                     loc_e5e1:
000000000000e5e1         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_e5e6:
000000000000e5e6         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_e5eb:
000000000000e5eb         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x17988)
                     clone_quoting_options:
000000000000e5f0         push       r12                                         ; Begin of unwind block (FDE at 0x179f4)
000000000000e5f2         push       rbp
000000000000e5f3         push       rbx
000000000000e5f4         mov        rbx, rdi
000000000000e5f7         call       j___errno_location                          ; __errno_location
000000000000e5fc         mov        r12d, dword [rax]
000000000000e5ff         mov        rbp, rax
000000000000e602         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000e609         test       rbx, rbx
000000000000e60c         mov        esi, 0x38
000000000000e611         cmove      rbx, rax
000000000000e615         mov        rdi, rbx
000000000000e618         call       xmemdup                                     ; xmemdup
000000000000e61d         mov        dword [rbp], r12d
000000000000e621         pop        rbx
000000000000e622         pop        rbp
000000000000e623         pop        r12
000000000000e625         ret
                        ; endp
000000000000e626         align      16                                          ; End of unwind block (FDE at 0x179f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
000000000000e630         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x17a20), default_quoting_options
000000000000e637         test       rdi, rdi
000000000000e63a         cmove      rdi, rax
000000000000e63e         mov        eax, dword [rdi]
000000000000e640         ret
                        ; endp
000000000000e641         align      16                                          ; End of unwind block (FDE at 0x17a20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
000000000000e650         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x17a34), default_quoting_options
000000000000e657         test       rdi, rdi
000000000000e65a         cmove      rdi, rax
000000000000e65e         mov        dword [rdi], esi
000000000000e660         ret
                        ; endp
000000000000e661         align      16                                          ; End of unwind block (FDE at 0x17a34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
000000000000e670         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x17a48), default_quoting_options
000000000000e677         test       rdi, rdi
000000000000e67a         mov        ecx, esi
000000000000e67c         cmove      rdi, rax
000000000000e680         mov        eax, esi
000000000000e682         and        ecx, 0x1f
000000000000e685         shr        al, 0x5
000000000000e688         movzx      eax, al
000000000000e68b         lea        rdi, qword [rdi+rax*4+8]
000000000000e690         mov        esi, dword [rdi]
000000000000e692         mov        eax, esi
000000000000e694         shr        eax, cl
000000000000e696         xor        edx, eax
000000000000e698         and        eax, 0x1
000000000000e69b         and        edx, 0x1
000000000000e69e         shl        edx, cl
000000000000e6a0         xor        edx, esi
000000000000e6a2         mov        dword [rdi], edx
000000000000e6a4         ret
                        ; endp
000000000000e6a5         align      16                                          ; End of unwind block (FDE at 0x17a48)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
000000000000e6b0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x17a5c), default_quoting_options
000000000000e6b7         test       rdi, rdi
000000000000e6ba         cmove      rdi, rax
000000000000e6be         mov        eax, dword [rdi+4]
000000000000e6c1         mov        dword [rdi+4], esi
000000000000e6c4         ret
                        ; endp
000000000000e6c5         align      16                                          ; End of unwind block (FDE at 0x17a5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
000000000000e6d0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x17a70), default_quoting_options
000000000000e6d7         test       rdi, rdi
000000000000e6da         cmove      rdi, rax
000000000000e6de         test       rsi, rsi
000000000000e6e1         mov        dword [rdi], 0xa
000000000000e6e7         je         loc_e6f7

000000000000e6e9         test       rdx, rdx
000000000000e6ec         je         loc_e6f7

000000000000e6ee         mov        qword [rdi+0x28], rsi
000000000000e6f2         mov        qword [rdi+0x30], rdx
000000000000e6f6         ret
                        ; endp

                     loc_e6f7:
000000000000e6f7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000e6fb         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
000000000000e700         push       r15                                         ; End of unwind block (FDE at 0x17a70), Begin of unwind block (FDE at 0x17a84)
000000000000e702         push       r14
000000000000e704         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000e70b         push       r13
000000000000e70d         push       r12
000000000000e70f         mov        r13, rdi
000000000000e712         push       rbp
000000000000e713         push       rbx
000000000000e714         mov        rbx, r8
000000000000e717         mov        r14, rsi
000000000000e71a         mov        r15, rdx
000000000000e71d         sub        rsp, 0x18
000000000000e721         test       r8, r8
000000000000e724         cmove      rbx, rax
000000000000e728         mov        qword [rsp+0x48+var_40], rcx
000000000000e72d         call       j___errno_location                          ; __errno_location
000000000000e732         mov        r12d, dword [rax]
000000000000e735         mov        rbp, rax
000000000000e738         lea        rax, qword [rbx+8]
000000000000e73c         sub        rsp, 0x8
000000000000e740         mov        r9d, dword [rbx+4]
000000000000e744         push       qword [rbx+0x30]
000000000000e747         mov        r8d, dword [rbx]
000000000000e74a         push       qword [rbx+0x28]
000000000000e74d         mov        rdx, r15
000000000000e750         push       rax
000000000000e751         mov        rcx, qword [rsp+0x68+var_40]
000000000000e756         mov        rsi, r14
000000000000e759         mov        rdi, r13
000000000000e75c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000e761         mov        dword [rbp], r12d
000000000000e765         add        rsp, 0x38
000000000000e769         pop        rbx
000000000000e76a         pop        rbp
000000000000e76b         pop        r12
000000000000e76d         pop        r13
000000000000e76f         pop        r14
000000000000e771         pop        r15
000000000000e773         ret
                        ; endp
000000000000e774         align      128                                         ; End of unwind block (FDE at 0x17a84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
000000000000e780         push       r15                                         ; Begin of unwind block (FDE at 0x17ad8), CODE XREF=quotearg_alloc+5
000000000000e782         push       r14
000000000000e784         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000e78b         push       r13
000000000000e78d         push       r12
000000000000e78f         mov        r12, rdx
000000000000e792         push       rbp
000000000000e793         push       rbx
000000000000e794         mov        rbx, rcx
000000000000e797         mov        r14, rdi
000000000000e79a         mov        r15, rsi
000000000000e79d         sub        rsp, 0x38
000000000000e7a1         test       rcx, rcx
000000000000e7a4         cmove      rbx, rax
000000000000e7a8         xor        ebp, ebp
000000000000e7aa         call       j___errno_location                          ; __errno_location
000000000000e7af         test       r12, r12
000000000000e7b2         mov        r13, rax
000000000000e7b5         mov        eax, dword [rax]
000000000000e7b7         sete       bpl
000000000000e7bb         or         ebp, dword [rbx+4]
000000000000e7be         lea        r10, qword [rbx+8]
000000000000e7c2         sub        rsp, 0x8
000000000000e7c6         mov        r8d, dword [rbx]
000000000000e7c9         mov        rcx, r15
000000000000e7cc         mov        dword [rsp+0x70+var_5C], eax
000000000000e7d0         push       qword [rbx+0x30]
000000000000e7d3         mov        rdx, r14
000000000000e7d6         push       qword [rbx+0x28]
000000000000e7d9         push       r10
000000000000e7db         xor        esi, esi
000000000000e7dd         mov        r9d, ebp
000000000000e7e0         xor        edi, edi
000000000000e7e2         mov        qword [rsp+0x88+var_48], r10
000000000000e7e7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000e7ec         lea        rsi, qword [rax+1]
000000000000e7f0         mov        qword [rsp+0x88+var_40], rax
000000000000e7f5         add        rsp, 0x20
000000000000e7f9         mov        rdi, rsi
000000000000e7fc         mov        qword [rsp+0x68+var_50], rsi
000000000000e801         call       xmalloc                                     ; xmalloc
000000000000e806         mov        qword [rsp+0x68+var_58], rax
000000000000e80b         sub        rsp, 0x8
000000000000e80f         push       qword [rbx+0x30]
000000000000e812         push       qword [rbx+0x28]
000000000000e815         mov        r10, qword [rsp+0x80+var_48]
000000000000e81a         mov        r9d, ebp
000000000000e81d         mov        r8d, dword [rbx]
000000000000e820         mov        rcx, r15
000000000000e823         mov        rdx, r14
000000000000e826         mov        rdi, rax
000000000000e829         push       r10
000000000000e82b         mov        rsi, qword [rsp+0x88+var_50]
000000000000e830         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000e835         mov        eax, dword [rsp+0x88+var_5C]
000000000000e839         add        rsp, 0x20
000000000000e83d         test       r12, r12
000000000000e840         mov        dword [r13], eax
000000000000e844         je         loc_e84f

000000000000e846         mov        r11, qword [rsp+0x68+var_40]
000000000000e84b         mov        qword [r12], r11

                     loc_e84f:
000000000000e84f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
000000000000e854         add        rsp, 0x38
000000000000e858         pop        rbx
000000000000e859         pop        rbp
000000000000e85a         pop        r12
000000000000e85c         pop        r13
000000000000e85e         pop        r14
000000000000e860         pop        r15
000000000000e862         ret
                        ; endp
000000000000e863         align      16                                          ; End of unwind block (FDE at 0x17ad8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
000000000000e870         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x17b44)
000000000000e873         xor        edx, edx
000000000000e875         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000e87a         align      128                                         ; End of unwind block (FDE at 0x17b44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
000000000000e880         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x17b58), nslots
000000000000e886         push       r12
000000000000e888         mov        r12, qword [slotvec]                        ; slotvec
000000000000e88f         push       rbp
000000000000e890         push       rbx
000000000000e891         cmp        eax, 0x1
000000000000e894         jle        loc_e8c1

000000000000e896         sub        eax, 0x2
000000000000e899         lea        rbx, qword [r12+0x18]
000000000000e89e         shl        rax, 0x4
000000000000e8a2         lea        rbp, qword [r12+rax+0x28]
000000000000e8a7         nop        word [rax+rax]

                     loc_e8b0:
000000000000e8b0         mov        rdi, qword [rbx]                            ; CODE XREF=quotearg_free+63
000000000000e8b3         add        rbx, 0x10
000000000000e8b7         call       sub_2e10                                    ; sub_2e10
000000000000e8bc         cmp        rbx, rbp
000000000000e8bf         jne        loc_e8b0

                     loc_e8c1:
000000000000e8c1         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
000000000000e8c6         lea        rbx, qword [slot0]                          ; slot0
000000000000e8cd         cmp        rdi, rbx
000000000000e8d0         je         loc_e8e9

000000000000e8d2         call       sub_2e10                                    ; sub_2e10
000000000000e8d7         mov        qword [slotvec0], 0x100                     ; slotvec0
000000000000e8e2         mov        qword [slotvec0+8], rbx                     ; 0x21a098

                     loc_e8e9:
000000000000e8e9         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
000000000000e8f0         cmp        r12, rbx
000000000000e8f3         je         loc_e904

000000000000e8f5         mov        rdi, r12
000000000000e8f8         call       sub_2e10                                    ; sub_2e10
000000000000e8fd         mov        qword [slotvec], rbx                        ; slotvec

                     loc_e904:
000000000000e904         pop        rbx                                         ; CODE XREF=quotearg_free+115
000000000000e905         mov        dword [nslots], 0x1                         ; nslots
000000000000e90f         pop        rbp
000000000000e910         pop        r12
000000000000e912         ret
                        ; endp
000000000000e913         align      32                                          ; End of unwind block (FDE at 0x17b58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
000000000000e920         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x17b84), default_quoting_options
000000000000e927         mov        rdx, 0xffffffffffffffff
000000000000e92e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000e933         align      64                                          ; End of unwind block (FDE at 0x17b84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
000000000000e940         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x17b98), default_quoting_options
000000000000e947         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000e94c         align      16                                          ; End of unwind block (FDE at 0x17b98)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
000000000000e950         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x17bac), default_quoting_options
000000000000e957         mov        rsi, rdi
000000000000e95a         mov        rdx, 0xffffffffffffffff
000000000000e961         xor        edi, edi
000000000000e963         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000e968         align      16                                          ; End of unwind block (FDE at 0x17bac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
000000000000e970         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x17bc0), default_quoting_options
000000000000e977         mov        rdx, rsi
000000000000e97a         mov        rsi, rdi
000000000000e97d         xor        edi, edi
000000000000e97f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000e984         align      16                                          ; End of unwind block (FDE at 0x17bc0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
000000000000e990         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x17bd4), CODE XREF=emit_verbose+23, emit_verbose+41, create_hard_link+181, create_hard_link+199, set_file_security_ctx+46, copy_internal+1022, copy_internal+1044, copy_internal+3909, copy_internal+3931, copy_internal+4074, copy_internal+4096
000000000000e994         mov        rax, rdx
000000000000e997         mov        rdx, qword [fs:0x28]
000000000000e9a0         mov        qword [rsp+0x48+var_10], rdx
000000000000e9a5         xor        edx, edx
000000000000e9a7         cmp        esi, 0xa
000000000000e9aa         je         loc_ea14

000000000000e9ac         mov        dword [rsp+0x48+var_48], esi
000000000000e9af         mov        rcx, rsp
000000000000e9b2         mov        rdx, 0xffffffffffffffff
000000000000e9b9         mov        rsi, rax
000000000000e9bc         mov        qword [rsp+0x48+var_44], 0x0
000000000000e9c5         mov        qword [rsp+0x48+var_3C], 0x0
000000000000e9ce         mov        qword [rsp+0x48+var_34], 0x0
000000000000e9d7         mov        qword [rsp+0x48+var_2C], 0x0
000000000000e9e0         mov        qword [rsp+0x48+var_24], 0x0
000000000000e9e9         mov        qword [rsp+0x48+var_1C], 0x0
000000000000e9f2         mov        dword [rsp+0x48+var_14], 0x0
000000000000e9fa         call       quotearg_n_options                          ; quotearg_n_options
000000000000e9ff         mov        rcx, qword [rsp+0x48+var_10]
000000000000ea04         xor        rcx, qword [fs:0x28]
000000000000ea0d         jne        loc_ea19

000000000000ea0f         add        rsp, 0x48
000000000000ea13         ret
                        ; endp

                     loc_ea14:
000000000000ea14         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_ea19:
000000000000ea19         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000ea1e         align      32                                          ; End of unwind block (FDE at 0x17bd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
000000000000ea20         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x17bf0), CODE XREF=quotearg_style_mem+10
000000000000ea24         mov        rax, rdx
000000000000ea27         mov        rdx, rcx
000000000000ea2a         mov        rcx, qword [fs:0x28]
000000000000ea33         mov        qword [rsp+0x48+var_10], rcx
000000000000ea38         xor        ecx, ecx
000000000000ea3a         cmp        esi, 0xa
000000000000ea3d         je         loc_eaa0

000000000000ea3f         mov        dword [rsp+0x48+var_48], esi
000000000000ea42         mov        rcx, rsp
000000000000ea45         mov        rsi, rax
000000000000ea48         mov        qword [rsp+0x48+var_44], 0x0
000000000000ea51         mov        qword [rsp+0x48+var_3C], 0x0
000000000000ea5a         mov        qword [rsp+0x48+var_34], 0x0
000000000000ea63         mov        qword [rsp+0x48+var_2C], 0x0
000000000000ea6c         mov        qword [rsp+0x48+var_24], 0x0
000000000000ea75         mov        qword [rsp+0x48+var_1C], 0x0
000000000000ea7e         mov        dword [rsp+0x48+var_14], 0x0
000000000000ea86         call       quotearg_n_options                          ; quotearg_n_options
000000000000ea8b         mov        rdx, qword [rsp+0x48+var_10]
000000000000ea90         xor        rdx, qword [fs:0x28]
000000000000ea99         jne        loc_eaa5

000000000000ea9b         add        rsp, 0x48
000000000000ea9f         ret
                        ; endp

                     loc_eaa0:
000000000000eaa0         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_eaa5:
000000000000eaa5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000eaaa         align      16                                          ; End of unwind block (FDE at 0x17bf0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
000000000000eab0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x17c0c), CODE XREF=main+1188, main+2081, target_directory_operand+148, make_dir_parents_private+991, make_dir_parents_private+1227, make_dir_parents_private+1340, make_dir_parents_private+1415, make_dir_parents_private+1445, re_protect+259, re_protect+467, re_protect+575
000000000000eab3         mov        esi, edi
000000000000eab5         xor        edi, edi
000000000000eab7         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000eabc         align      64                                          ; End of unwind block (FDE at 0x17c0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
000000000000eac0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x17c20)
000000000000eac3         mov        rdx, rsi
000000000000eac6         mov        esi, edi
000000000000eac8         xor        edi, edi
000000000000eaca         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000eacf         align      16                                          ; End of unwind block (FDE at 0x17c20)

                     quotearg_char_mem:
000000000000ead0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x17c34), CODE XREF=quotearg_char+11
000000000000ead4         mov        ecx, edx
000000000000ead6         mov        rax, qword [fs:0x28]
000000000000eadf         mov        qword [rsp+0x48+var_10], rax
000000000000eae4         xor        eax, eax
000000000000eae6         mov        rax, qword [qword_21a6f0]                   ; qword_21a6f0
000000000000eaed         mov        r8, rsp
000000000000eaf0         and        ecx, 0x1f
000000000000eaf3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000eafb         mov        qword [rsp+0x48+var_18], rax
000000000000eb00         mov        eax, edx
000000000000eb02         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000eb06         shr        al, 0x5
000000000000eb09         movzx      eax, al
000000000000eb0c         lea        r9, qword [r8+rax*4+8]
000000000000eb11         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x21a6d0
000000000000eb19         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000eb1e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x21a6e0
000000000000eb26         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000eb2b         mov        edx, dword [r9]
000000000000eb2e         mov        eax, edx
000000000000eb30         shr        eax, cl
000000000000eb32         not        eax
000000000000eb34         and        eax, 0x1
000000000000eb37         shl        eax, cl
000000000000eb39         mov        rcx, r8
000000000000eb3c         xor        eax, edx
000000000000eb3e         mov        rdx, rsi
000000000000eb41         mov        rsi, rdi
000000000000eb44         mov        dword [r9], eax
000000000000eb47         xor        edi, edi
000000000000eb49         call       quotearg_n_options                          ; quotearg_n_options
000000000000eb4e         mov        rsi, qword [rsp+0x48+var_10]
000000000000eb53         xor        rsi, qword [fs:0x28]
000000000000eb5c         jne        loc_eb63

000000000000eb5e         add        rsp, 0x48
000000000000eb62         ret
                        ; endp

                     loc_eb63:
000000000000eb63         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
000000000000eb68         align      16                                          ; End of unwind block (FDE at 0x17c34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
000000000000eb70         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x17c50)
000000000000eb74         mov        rsi, 0xffffffffffffffff
000000000000eb7b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
000000000000eb80         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x17c50), Begin of unwind block (FDE at 0x17c64), CODE XREF=close_stdin+133, close_stdout+101
000000000000eb85         mov        rsi, 0xffffffffffffffff
000000000000eb8c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000eb91         align      32                                          ; End of unwind block (FDE at 0x17c64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
000000000000eba0         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x17c78)
000000000000eba5         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000ebaa         align      16                                          ; End of unwind block (FDE at 0x17c78)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
000000000000ebb0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x17c8c), CODE XREF=copy_internal+8762, copy_internal+9597, copy_internal+9619, copy_internal+16111, copy_internal+16190
000000000000ebb4         mov        rax, rdx
000000000000ebb7         mov        rdx, qword [fs:0x28]
000000000000ebc0         mov        qword [rsp+0x48+var_10], rdx
000000000000ebc5         xor        edx, edx
000000000000ebc7         cmp        esi, 0xa
000000000000ebca         je         loc_ec34

000000000000ebcc         mov        dword [rsp+0x48+var_48], esi
000000000000ebcf         mov        rcx, rsp
000000000000ebd2         mov        rdx, 0xffffffffffffffff
000000000000ebd9         mov        rsi, rax
000000000000ebdc         mov        qword [rsp+0x48+var_44], 0x0
000000000000ebe5         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000ebee         mov        qword [rsp+0x48+var_34], 0x0
000000000000ebf7         mov        qword [rsp+0x48+var_2C], 0x0
000000000000ec00         mov        qword [rsp+0x48+var_24], 0x0
000000000000ec09         mov        qword [rsp+0x48+var_1C], 0x0
000000000000ec12         mov        dword [rsp+0x48+var_14], 0x0
000000000000ec1a         call       quotearg_n_options                          ; quotearg_n_options
000000000000ec1f         mov        rcx, qword [rsp+0x48+var_10]
000000000000ec24         xor        rcx, qword [fs:0x28]
000000000000ec2d         jne        loc_ec39

000000000000ec2f         add        rsp, 0x48
000000000000ec33         ret
                        ; endp

                     loc_ec34:
000000000000ec34         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_ec39:
000000000000ec39         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000ec3e         align      64                                          ; End of unwind block (FDE at 0x17c8c)

                     quotearg_n_custom_mem:
000000000000ec40         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x17ca8), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
000000000000ec44         mov        r9, rcx
000000000000ec47         mov        rcx, qword [qword_21a6f0]                   ; qword_21a6f0
000000000000ec4e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000ec56         mov        rax, qword [fs:0x28]
000000000000ec5f         mov        qword [rsp+0x48+var_10], rax
000000000000ec64         xor        eax, eax
000000000000ec66         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000ec6a         test       rsi, rsi
000000000000ec6d         mov        qword [rsp+0x48+var_18], rcx
000000000000ec72         mov        dword [rsp+0x48+var_48], 0xa
000000000000ec79         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x21a6d0
000000000000ec81         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000ec86         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x21a6e0
000000000000ec8e         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000ec93         je         loc_ecc7

000000000000ec95         test       rdx, rdx
000000000000ec98         je         loc_ecc7

000000000000ec9a         mov        qword [rsp+0x48+var_20], rsi
000000000000ec9f         mov        qword [rsp+0x48+var_18], rdx
000000000000eca4         mov        rcx, rsp
000000000000eca7         mov        rdx, r8
000000000000ecaa         mov        rsi, r9
000000000000ecad         call       quotearg_n_options                          ; quotearg_n_options
000000000000ecb2         mov        rdi, qword [rsp+0x48+var_10]
000000000000ecb7         xor        rdi, qword [fs:0x28]
000000000000ecc0         jne        loc_eccc

000000000000ecc2         add        rsp, 0x48
000000000000ecc6         ret
                        ; endp

                     loc_ecc7:
000000000000ecc7         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_eccc:
000000000000eccc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
000000000000ecd1         align      32                                          ; End of unwind block (FDE at 0x17ca8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
000000000000ece0         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x17cc4)
000000000000ece7         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
000000000000ecec         align      16                                          ; End of unwind block (FDE at 0x17cc4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
000000000000ecf0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x17cd8)
000000000000ecf3         mov        r8, 0xffffffffffffffff
000000000000ecfa         mov        rdx, rsi
000000000000ecfd         mov        rsi, rdi
000000000000ed00         xor        edi, edi
000000000000ed02         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
000000000000ed07         align      16                                          ; End of unwind block (FDE at 0x17cd8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
000000000000ed10         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x17cec)
000000000000ed13         mov        rcx, rdx
000000000000ed16         mov        rdx, rsi
000000000000ed19         mov        rsi, rdi
000000000000ed1c         xor        edi, edi
000000000000ed1e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
000000000000ed23         align      16                                          ; End of unwind block (FDE at 0x17cec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
000000000000ed30         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x17d00), quote_quoting_options
000000000000ed37         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000ed3c         align      64                                          ; End of unwind block (FDE at 0x17d00)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
000000000000ed40         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x17d14), quote_quoting_options
000000000000ed47         mov        rdx, rsi
000000000000ed4a         mov        rsi, rdi
000000000000ed4d         xor        edi, edi
000000000000ed4f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000ed54         align      32                                          ; End of unwind block (FDE at 0x17d14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
000000000000ed60         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x17d28), quote_quoting_options, CODE XREF=argmatch_invalid+46
000000000000ed67         mov        rdx, 0xffffffffffffffff
000000000000ed6e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000ed73         align      128                                         ; End of unwind block (FDE at 0x17d28)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
000000000000ed80         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x17d3c), quote_quoting_options, CODE XREF=main+2022, copy_acl+30, copy_acl+99, set_acl+21, argmatch_valid+90, argmatch_valid+169, randread_error+11
000000000000ed87         mov        rsi, rdi
000000000000ed8a         mov        rdx, 0xffffffffffffffff
000000000000ed91         xor        edi, edi
000000000000ed93         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000ed98         align      32                                          ; End of unwind block (FDE at 0x17d3c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_C0: int32_t, -192
        ;    var_D8: int8_t, -216
        ;    var_150: int32_t, -336
        ;    var_168: int8_t, -360
        ;    var_170: int64_t, -368
        ;    var_174: int32_t, -372


                     renameatu:
000000000000eda0         push       r15                                         ; Begin of unwind block (FDE at 0x17d54), CODE XREF=copy_internal+819, backupfile_internal+847
000000000000eda2         push       r14
000000000000eda4         mov        r9d, r8d
000000000000eda7         push       r13
000000000000eda9         push       r12
000000000000edab         mov        r14d, edx
000000000000edae         push       rbp
000000000000edaf         push       rbx
000000000000edb0         mov        r12, rsi
000000000000edb3         mov        r13, rcx
000000000000edb6         mov        ebp, r8d
000000000000edb9         mov        r8, rcx
000000000000edbc         sub        rsp, 0x148
000000000000edc3         mov        ecx, edx
000000000000edc5         mov        rdx, rsi
000000000000edc8         mov        rax, qword [fs:0x28]
000000000000edd1         mov        qword [rsp+0x178+var_40], rax
000000000000edd9         xor        eax, eax
000000000000eddb         mov        esi, edi
000000000000eddd         mov        dword [rsp+0x178+var_174], edi
000000000000ede1         mov        edi, 0x13c                                  ; argument "__sysno" for method j_syscall
000000000000ede6         call       j_syscall                                   ; syscall
000000000000edeb         mov        rbx, rax
000000000000edee         mov        r15d, eax
000000000000edf1         call       j___errno_location                          ; __errno_location
000000000000edf6         test       ebx, ebx
000000000000edf8         js         loc_ee30

                     loc_edfa:
000000000000edfa         mov        rdx, qword [rsp+0x178+var_40]               ; CODE XREF=renameatu+166, renameatu+248, renameatu+274, renameatu+363, renameatu+431, renameatu+453, renameatu+608
000000000000ee02         xor        rdx, qword [fs:0x28]
000000000000ee0b         mov        eax, r15d
000000000000ee0e         jne        loc_f005

000000000000ee14         add        rsp, 0x148
000000000000ee1b         pop        rbx
000000000000ee1c         pop        rbp
000000000000ee1d         pop        r12
000000000000ee1f         pop        r13
000000000000ee21         pop        r14
000000000000ee23         pop        r15
000000000000ee25         ret
                        ; endp
000000000000ee26         align      16

                     loc_ee30:
000000000000ee30         mov        r9, rax                                     ; CODE XREF=renameatu+88
000000000000ee33         mov        eax, dword [rax]
000000000000ee35         lea        ecx, dword [rax-0x16]
000000000000ee38         and        ecx, 0xffffffef
000000000000ee3b         setne      bl
000000000000ee3e         cmp        eax, 0x5f
000000000000ee41         setne      al
000000000000ee44         and        bl, al
000000000000ee46         jne        loc_edfa

000000000000ee48         test       ebp, ebp
000000000000ee4a         jne        loc_eea0

                     loc_ee4c:
000000000000ee4c         mov        rdi, r12                                    ; argument "__s" for method j_strlen, CODE XREF=renameatu+541
000000000000ee4f         mov        qword [rsp+0x178+var_170], r9
000000000000ee54         call       j_strlen                                    ; strlen
000000000000ee59         mov        rdi, r13                                    ; argument "__s" for method j_strlen
000000000000ee5c         mov        rbp, rax
000000000000ee5f         call       j_strlen                                    ; strlen
000000000000ee64         test       rbp, rbp
000000000000ee67         je         loc_ee83

000000000000ee69         test       rax, rax
000000000000ee6c         mov        r9, qword [rsp+0x178+var_170]
000000000000ee71         je         loc_ee83

000000000000ee73         cmp        byte [r12+rbp-1], 0x2f
000000000000ee79         je         loc_eec0

000000000000ee7b         cmp        byte [r13+rax-1], 0x2f
000000000000ee81         je         loc_eec0

                     loc_ee83:
000000000000ee83         mov        edi, dword [rsp+0x178+var_174]              ; argument "__oldfd" for method j_renameat, CODE XREF=renameatu+199, renameatu+209, renameatu+348, renameatu+524, renameatu+591
000000000000ee87         mov        rcx, r13                                    ; argument "__new" for method j_renameat
000000000000ee8a         mov        edx, r14d                                   ; argument "__newfd" for method j_renameat
000000000000ee8d         mov        rsi, r12                                    ; argument "__old" for method j_renameat
000000000000ee90         call       j_renameat                                  ; renameat
000000000000ee95         mov        r15d, eax
000000000000ee98         jmp        loc_edfa
000000000000ee9d         align      32

                     loc_eea0:
000000000000eea0         and        ebp, 0xfffffffe                             ; CODE XREF=renameatu+170
000000000000eea3         je         loc_ef10

000000000000eea5         mov        dword [r9], 0x5f
000000000000eeac         mov        r15d, 0xffffffff
000000000000eeb2         jmp        loc_edfa
000000000000eeb7         align      64

                     loc_eec0:
000000000000eec0         mov        esi, dword [rsp+0x178+var_174]              ; argument "__fildes" for method j___fxstatat, CODE XREF=renameatu+217, renameatu+225
000000000000eec4         lea        rcx, qword [rsp+0x178+var_168]              ; argument "__stat_buf" for method j___fxstatat
000000000000eec9         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
000000000000eecf         mov        rdx, r12                                    ; argument "__filename" for method j___fxstatat
000000000000eed2         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
000000000000eed7         mov        qword [rsp+0x178+var_170], r9
000000000000eedc         call       j___fxstatat                                ; __fxstatat
000000000000eee1         test       eax, eax
000000000000eee3         jne        loc_ef49

000000000000eee5         test       bl, bl
000000000000eee7         mov        r9, qword [rsp+0x178+var_170]
000000000000eeec         je         loc_ef6a

000000000000eeee         mov        eax, dword [rsp+0x178+var_150]
000000000000eef2         and        eax, 0xf000
000000000000eef7         cmp        eax, 0x4000
000000000000eefc         je         loc_ee83

000000000000eefe         mov        dword [r9], 0x2
000000000000ef05         mov        r15d, 0xffffffff
000000000000ef0b         jmp        loc_edfa

                     loc_ef10:
000000000000ef10         lea        rcx, qword [rsp+0x178+var_D8]               ; argument "__stat_buf" for method j___fxstatat, CODE XREF=renameatu+259
000000000000ef18         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
000000000000ef1e         mov        rdx, r13                                    ; argument "__filename" for method j___fxstatat
000000000000ef21         mov        esi, r14d                                   ; argument "__fildes" for method j___fxstatat
000000000000ef24         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
000000000000ef29         mov        qword [rsp+0x178+var_170], r9
000000000000ef2e         call       j___fxstatat                                ; __fxstatat
000000000000ef33         test       eax, eax
000000000000ef35         mov        r9, qword [rsp+0x178+var_170]
000000000000ef3a         je         loc_ef58

000000000000ef3c         mov        eax, dword [r9]
000000000000ef3f         cmp        eax, 0x4b
000000000000ef42         je         loc_ef58

000000000000ef44         cmp        eax, 0x2
000000000000ef47         je         loc_efb8

                     loc_ef49:
000000000000ef49         mov        r15d, 0xffffffff                            ; CODE XREF=renameatu+323, renameatu+506, renameatu+522, renameatu+572
000000000000ef4f         jmp        loc_edfa
000000000000ef54         align      8

                     loc_ef58:
000000000000ef58         mov        dword [r9], 0x11                            ; CODE XREF=renameatu+410, renameatu+418
000000000000ef5f         mov        r15d, 0xffffffff
000000000000ef65         jmp        loc_edfa

                     loc_ef6a:
000000000000ef6a         lea        rcx, qword [rsp+0x178+var_D8]               ; argument "__stat_buf" for method j___fxstatat, CODE XREF=renameatu+332
000000000000ef72         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
000000000000ef78         mov        rdx, r13                                    ; argument "__filename" for method j___fxstatat
000000000000ef7b         mov        esi, r14d                                   ; argument "__fildes" for method j___fxstatat
000000000000ef7e         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
000000000000ef83         mov        qword [rsp+0x178+var_170], r9
000000000000ef88         call       j___fxstatat                                ; __fxstatat
000000000000ef8d         test       eax, eax
000000000000ef8f         mov        r9, qword [rsp+0x178+var_170]
000000000000ef94         je         loc_efc2

000000000000ef96         cmp        dword [r9], 0x2
000000000000ef9a         jne        loc_ef49

000000000000ef9c         mov        eax, dword [rsp+0x178+var_150]
000000000000efa0         and        eax, 0xf000
000000000000efa5         cmp        eax, 0x4000
000000000000efaa         jne        loc_ef49

000000000000efac         jmp        loc_ee83
000000000000efb1         align      8

                     loc_efb8:
000000000000efb8         mov        ebx, 0x1                                    ; CODE XREF=renameatu+423
000000000000efbd         jmp        loc_ee4c

                     loc_efc2:
000000000000efc2         mov        eax, dword [rsp+0x178+var_C0]               ; CODE XREF=renameatu+500
000000000000efc9         and        eax, 0xf000
000000000000efce         cmp        eax, 0x4000
000000000000efd3         je         loc_efe1

000000000000efd5         mov        dword [r9], 0x14
000000000000efdc         jmp        loc_ef49

                     loc_efe1:
000000000000efe1         mov        eax, dword [rsp+0x178+var_150]              ; CODE XREF=renameatu+563
000000000000efe5         and        eax, 0xf000
000000000000efea         cmp        eax, 0x4000
000000000000efef         je         loc_ee83

000000000000eff5         mov        dword [r9], 0x15
000000000000effc         or         r15d, 0xffffffff
000000000000f000         jmp        loc_edfa                                    ; DATA XREF=main+1163, target_directory_operand+43, target_directory_operand+85, make_dir_parents_private+358, make_dir_parents_private+950, make_dir_parents_private+1158, do_copy+211, writable_destination, copy_internal+248, copy_internal+291, copy_internal+391

                     loc_f005:
000000000000f005         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=renameatu+110
                        ; endp
000000000000f00a         align      16                                          ; End of unwind block (FDE at 0x17d54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_write:
000000000000f010         push       r13                                         ; Begin of unwind block (FDE at 0x17da4), CODE XREF=full_write+57
000000000000f012         push       r12
000000000000f014         mov        r13d, edi
000000000000f017         push       rbp
000000000000f018         push       rbx
000000000000f019         mov        r12, rsi
000000000000f01c         mov        rbx, rdx
000000000000f01f         sub        rsp, 0x8
000000000000f023         nop        dword [rax+rax]

                     loc_f028:
000000000000f028         mov        rdx, rbx                                    ; argument "__n" for method j_write, CODE XREF=safe_write+56, safe_write+77
000000000000f02b         mov        rsi, r12                                    ; argument "__buf" for method j_write
000000000000f02e         mov        edi, r13d                                   ; argument "__fd" for method j_write
000000000000f031         call       j_write                                     ; write
000000000000f036         test       rax, rax
000000000000f039         mov        rbp, rax
000000000000f03c         jns        loc_f060

000000000000f03e         call       j___errno_location                          ; __errno_location
000000000000f043         mov        eax, dword [rax]
000000000000f045         cmp        eax, 0x4
000000000000f048         je         loc_f028

000000000000f04a         cmp        eax, 0x16
000000000000f04d         jne        loc_f060

000000000000f04f         cmp        rbx, 0x7ff00000
000000000000f056         jbe        loc_f060

000000000000f058         mov        ebx, 0x7ff00000
000000000000f05d         jmp        loc_f028
000000000000f05f         align      32

                     loc_f060:
000000000000f060         add        rsp, 0x8                                    ; CODE XREF=safe_write+44, safe_write+61, safe_write+70
000000000000f064         mov        rax, rbp
000000000000f067         pop        rbx
000000000000f068         pop        rbp
000000000000f069         pop        r12
000000000000f06b         pop        r13
000000000000f06d         ret
                        ; endp
000000000000f06e         align      16                                          ; End of unwind block (FDE at 0x17da4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_150: int64_t, -336
        ;    var_158: int64_t, -344


                     same_nameat.part.0:
000000000000f070         push       r13                                         ; Begin of unwind block (FDE at 0x17ddc), CODE XREF=same_nameat+141
000000000000f072         push       r12
000000000000f074         mov        r13d, edi
000000000000f077         push       rbp
000000000000f078         push       rbx
000000000000f079         mov        rdi, rsi
000000000000f07c         mov        ebp, edx
000000000000f07e         mov        r12, rcx
000000000000f081         sub        rsp, 0x138
000000000000f088         mov        rax, qword [fs:0x28]
000000000000f091         mov        qword [rsp+0x158+var_30], rax
000000000000f099         xor        eax, eax
000000000000f09b         call       dir_name                                    ; dir_name
000000000000f0a0         mov        rcx, rsp                                    ; argument "__stat_buf" for method j___fxstatat
000000000000f0a3         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
000000000000f0a9         mov        rdx, rax                                    ; argument "__filename" for method j___fxstatat
000000000000f0ac         mov        esi, r13d                                   ; argument "__fildes" for method j___fxstatat
000000000000f0af         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
000000000000f0b4         mov        rbx, rax
000000000000f0b7         call       j___fxstatat                                ; __fxstatat
000000000000f0bc         test       eax, eax
000000000000f0be         jne        loc_f170

                     loc_f0c4:
000000000000f0c4         mov        rdi, rbx                                    ; CODE XREF=same_nameat.part.0+285
000000000000f0c7         call       sub_2e10                                    ; sub_2e10
000000000000f0cc         mov        rdi, r12
000000000000f0cf         call       dir_name                                    ; dir_name
000000000000f0d4         lea        rcx, qword [rsp+0x158+var_C8]               ; argument "__stat_buf" for method j___fxstatat
000000000000f0dc         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
000000000000f0e2         mov        rdx, rax                                    ; argument "__filename" for method j___fxstatat
000000000000f0e5         mov        esi, ebp                                    ; argument "__fildes" for method j___fxstatat
000000000000f0e7         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
000000000000f0ec         mov        rbx, rax
000000000000f0ef         call       j___fxstatat                                ; __fxstatat
000000000000f0f4         test       eax, eax
000000000000f0f6         jne        loc_f148

                     loc_f0f8:
000000000000f0f8         xor        ebp, ebp                                    ; CODE XREF=same_nameat.part.0+245
000000000000f0fa         mov        rax, qword [rsp+0x158+var_C0]
000000000000f102         cmp        qword [rsp+0x158+var_150], rax
000000000000f107         jne        loc_f119

000000000000f109         mov        rax, qword [rsp+0x158+var_C8]
000000000000f111         cmp        qword [rsp+0x158+var_158], rax
000000000000f115         sete       bpl

                     loc_f119:
000000000000f119         mov        rdi, rbx                                    ; CODE XREF=same_nameat.part.0+151
000000000000f11c         call       sub_2e10                                    ; sub_2e10
000000000000f121         mov        rdx, qword [rsp+0x158+var_30]
000000000000f129         xor        rdx, qword [fs:0x28]
000000000000f132         mov        eax, ebp
000000000000f134         jne        loc_f192

000000000000f136         add        rsp, 0x138
000000000000f13d         pop        rbx
000000000000f13e         pop        rbp
000000000000f13f         pop        r12
000000000000f141         pop        r13
000000000000f143         ret
                        ; endp
000000000000f144         align      8

                     loc_f148:
000000000000f148         call       j___errno_location                          ; __errno_location, CODE XREF=same_nameat.part.0+134
000000000000f14d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000f14f         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x1518d
000000000000f156         mov        rcx, rbx
000000000000f159         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000f15e         xor        eax, eax
000000000000f160         call       j_error                                     ; error
000000000000f165         jmp        loc_f0f8
000000000000f167         align      16

                     loc_f170:
000000000000f170         call       j___errno_location                          ; __errno_location, CODE XREF=same_nameat.part.0+78
000000000000f175         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000f177         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x1518d
000000000000f17e         mov        rcx, rbx
000000000000f181         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000f186         xor        eax, eax
000000000000f188         call       j_error                                     ; error
000000000000f18d         jmp        loc_f0c4

                     loc_f192:
000000000000f192         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=same_nameat.part.0+196
                        ; endp
000000000000f197         align      32                                          ; End of unwind block (FDE at 0x17ddc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60


                     same_nameat:
000000000000f1a0         push       r15                                         ; Begin of unwind block (FDE at 0x17e18), CODE XREF=same_name+13
000000000000f1a2         push       r14
000000000000f1a4         mov        r15d, edx
000000000000f1a7         push       r13
000000000000f1a9         push       r12
000000000000f1ab         push       rbp
000000000000f1ac         push       rbx
000000000000f1ad         mov        rbp, rcx
000000000000f1b0         mov        rbx, rsi
000000000000f1b3         sub        rsp, 0x18
000000000000f1b7         mov        dword [rsp+0x48+var_3C], edi
000000000000f1bb         mov        rdi, rsi
000000000000f1be         call       last_component                              ; last_component
000000000000f1c3         mov        rdi, rbp
000000000000f1c6         mov        r12, rax
000000000000f1c9         call       last_component                              ; last_component
000000000000f1ce         mov        rdi, r12
000000000000f1d1         mov        r13, rax
000000000000f1d4         call       base_len                                    ; base_len
000000000000f1d9         mov        rdi, r13
000000000000f1dc         mov        r14, rax
000000000000f1df         call       base_len                                    ; base_len
000000000000f1e4         cmp        r14, rax
000000000000f1e7         je         loc_f200

                     loc_f1e9:
000000000000f1e9         add        rsp, 0x18                                   ; CODE XREF=same_nameat+112
000000000000f1ed         xor        eax, eax
000000000000f1ef         pop        rbx
000000000000f1f0         pop        rbp
000000000000f1f1         pop        r12
000000000000f1f3         pop        r13
000000000000f1f5         pop        r14
000000000000f1f7         pop        r15
000000000000f1f9         ret
                        ; endp
000000000000f1fa         align      512

                     loc_f200:
000000000000f200         mov        rdx, r14                                    ; argument "__n" for method j_memcmp, CODE XREF=same_nameat+71
000000000000f203         mov        rsi, r13                                    ; argument "__s2" for method j_memcmp
000000000000f206         mov        rdi, r12                                    ; argument "__s1" for method j_memcmp
000000000000f209         call       j_memcmp                                    ; memcmp
000000000000f20e         test       eax, eax
000000000000f210         jne        loc_f1e9

000000000000f212         mov        edi, dword [rsp+0x48+var_3C]
000000000000f216         add        rsp, 0x18
000000000000f21a         mov        rcx, rbp
000000000000f21d         mov        edx, r15d
000000000000f220         mov        rsi, rbx
000000000000f223         pop        rbx
000000000000f224         pop        rbp
000000000000f225         pop        r12
000000000000f227         pop        r13
000000000000f229         pop        r14
000000000000f22b         pop        r15
000000000000f22d         jmp        same_nameat.part.0                          ; same_nameat.part.0
                        ; endp
000000000000f232         align      64                                          ; End of unwind block (FDE at 0x17e18)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     same_name:
000000000000f240         mov        edx, 0xffffff9c                             ; Begin of unwind block (FDE at 0x17e78), CODE XREF=copy_internal+4249, copy_internal+5975, copy_internal+8174, copy_internal+8844, copy_internal+9838, copy_internal+10862, triple_compare+36
000000000000f245         mov        rcx, rsi
000000000000f248         mov        rsi, rdi
000000000000f24b         mov        edi, edx
000000000000f24d         jmp        same_nameat                                 ; same_nameat
                        ; endp
000000000000f252         align      32                                          ; End of unwind block (FDE at 0x17e78)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     direntry_cmp_inode:
000000000000f260         mov        rax, qword [rsi+8]                          ; Begin of unwind block (FDE at 0x17e8c)
000000000000f264         cmp        qword [rdi+8], rax
000000000000f268         jb         loc_f278

000000000000f26a         seta       al
000000000000f26d         movzx      eax, al
000000000000f270         ret
                        ; endp
000000000000f271         align      8

                     loc_f278:
000000000000f278         mov        eax, 0xffffffff                             ; CODE XREF=direntry_cmp_inode+8
000000000000f27d         ret
                        ; endp
000000000000f27e         align      128                                         ; End of unwind block (FDE at 0x17e8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     direntry_cmp_name:
000000000000f280         mov        rsi, qword [rsi]                            ; Begin of unwind block (FDE at 0x17ea0), argument "__s2" for method j_strcmp
000000000000f283         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
000000000000f286         jmp        j_strcmp                                    ; strcmp
                        ; endp
000000000000f28b         align      16                                          ; End of unwind block (FDE at 0x17ea0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112


                     streamsavedir:
000000000000f290         push       r15                                         ; Begin of unwind block (FDE at 0x17eb4), CODE XREF=savedir+24
000000000000f292         lea        rax, qword [comparison_function_table]      ; comparison_function_table
000000000000f299         push       r14
000000000000f29b         push       r13
000000000000f29d         push       r12
000000000000f29f         mov        esi, esi
000000000000f2a1         push       rbp
000000000000f2a2         push       rbx
000000000000f2a3         sub        rsp, 0x48
000000000000f2a7         mov        rax, qword [rax+rsi*8]
000000000000f2ab         test       rdi, rdi
000000000000f2ae         mov        qword [rsp+0x78+var_70], rax
000000000000f2b3         je         loc_f5bd

000000000000f2b9         mov        rbx, rdi
000000000000f2bc         xor        r14d, r14d
000000000000f2bf         xor        r12d, r12d
000000000000f2c2         call       j___errno_location                          ; __errno_location
000000000000f2c7         xor        r13d, r13d
000000000000f2ca         mov        rbp, rax
000000000000f2cd         mov        qword [rsp+0x78+var_50], 0x0
000000000000f2d6         mov        qword [rsp+0x78+var_68], 0x0
000000000000f2df         mov        qword [rsp+0x78+var_58], 0x0
000000000000f2e8         jmp        loc_f2f4
000000000000f2ea         align      16

                     loc_f2f0:
000000000000f2f0         test       al, al                                      ; CODE XREF=streamsavedir+137, streamsavedir+276
000000000000f2f2         jne        loc_f329

                     loc_f2f4:
000000000000f2f4         mov        dword [rbp], 0x0                            ; CODE XREF=streamsavedir+88, streamsavedir+151, streamsavedir+262, streamsavedir+636
000000000000f2fb         mov        rdi, rbx                                    ; argument "__dirp" for method j_readdir
000000000000f2fe         call       j_readdir                                   ; readdir
000000000000f303         test       rax, rax
000000000000f306         mov        rcx, rax
000000000000f309         je         loc_f3b0

000000000000f30f         lea        r15, qword [rax+0x13]
000000000000f313         movzx      eax, byte [rax+0x13]
000000000000f317         cmp        al, 0x2e
000000000000f319         jne        loc_f2f0

000000000000f31b         cmp        byte [rcx+0x14], 0x2e
000000000000f31f         je         loc_f3a0

000000000000f321         movzx      eax, byte [rcx+0x14]
000000000000f325         test       al, al
000000000000f327         je         loc_f2f4

                     loc_f329:
000000000000f329         mov        rdi, r15                                    ; argument "__s" for method j_strlen, CODE XREF=streamsavedir+98
000000000000f32c         mov        qword [rsp+0x78+var_48], rcx
000000000000f331         call       j_strlen                                    ; strlen
000000000000f336         add        rax, 0x1
000000000000f33a         cmp        qword [rsp+0x78+var_70], 0x0
000000000000f340         mov        qword [rsp+0x78+var_60], rax
000000000000f345         je         loc_f488

000000000000f34b         cmp        r12, qword [rsp+0x78+var_50]
000000000000f350         lea        rax, qword [r12+1]
000000000000f355         mov        rcx, qword [rsp+0x78+var_48]
000000000000f35a         mov        qword [rsp+0x78+var_40], rax
000000000000f35f         je         loc_f511

                     loc_f365:
000000000000f365         shl        r12, 0x4                                    ; CODE XREF=streamsavedir+718
000000000000f369         mov        rdi, r15
000000000000f36c         add        r12, qword [rsp+0x78+var_68]
000000000000f371         mov        qword [rsp+0x78+var_48], rcx
000000000000f376         call       xstrdup                                     ; xstrdup
000000000000f37b         mov        rcx, qword [rsp+0x78+var_48]
000000000000f380         add        r14, qword [rsp+0x78+var_60]
000000000000f385         mov        qword [r12], rax
000000000000f389         mov        rax, qword [rcx]
000000000000f38c         mov        qword [r12+8], rax
000000000000f391         mov        r12, qword [rsp+0x78+var_40]
000000000000f396         jmp        loc_f2f4
000000000000f39b         align      32

                     loc_f3a0:
000000000000f3a0         movzx      eax, byte [rcx+0x15]                        ; CODE XREF=streamsavedir+143
000000000000f3a4         jmp        loc_f2f0
000000000000f3a9         align      16

                     loc_f3b0:
000000000000f3b0         mov        ebx, dword [rbp]                            ; CODE XREF=streamsavedir+121
000000000000f3b3         test       ebx, ebx
000000000000f3b5         jne        loc_f5a0

000000000000f3bb         cmp        qword [rsp+0x78+var_70], 0x0
000000000000f3c1         je         loc_f470

000000000000f3c7         test       r12, r12
000000000000f3ca         lea        rbx, qword [r14+1]
000000000000f3ce         jne        loc_f400

000000000000f3d0         mov        rdi, rbx                                    ; argument #1 for method xmalloc
000000000000f3d3         call       xmalloc                                     ; xmalloc
000000000000f3d8         mov        r13, rax
000000000000f3db         mov        rbx, rax

                     loc_f3de:
000000000000f3de         mov        rdi, qword [rsp+0x78+var_68]                ; CODE XREF=streamsavedir+470
000000000000f3e3         call       sub_2e10                                    ; sub_2e10

                     loc_f3e8:
000000000000f3e8         mov        byte [rbx], 0x0                             ; CODE XREF=streamsavedir+496, streamsavedir+746

                     loc_f3eb:
000000000000f3eb         add        rsp, 0x48                                   ; CODE XREF=sub_f59e+26, sub_f59e+34
000000000000f3ef         mov        rax, r13
000000000000f3f2         pop        rbx
000000000000f3f3         pop        rbp
000000000000f3f4         pop        r12
000000000000f3f6         pop        r13
000000000000f3f8         pop        r14
000000000000f3fa         pop        r15
000000000000f3fc         ret
                        ; endp
000000000000f3fd         align      1024

                     loc_f400:
000000000000f400         mov        r15, qword [rsp+0x78+var_68]                ; CODE XREF=streamsavedir+318
000000000000f405         mov        rcx, qword [rsp+0x78+var_70]                ; argument "__compar" for method j_qsort
000000000000f40a         mov        rsi, r12                                    ; argument "__nmemb" for method j_qsort
000000000000f40d         mov        edx, 0x10                                   ; argument "__size" for method j_qsort
000000000000f412         shl        r12, 0x4
000000000000f416         mov        rdi, r15                                    ; argument "__base" for method j_qsort
000000000000f419         mov        rbp, r15
000000000000f41c         add        r12, r15
000000000000f41f         call       j_qsort                                     ; qsort
000000000000f424         mov        rdi, rbx                                    ; argument #1 for method xmalloc
000000000000f427         xor        ebx, ebx
000000000000f429         call       xmalloc                                     ; xmalloc
000000000000f42e         mov        r13, rax
000000000000f431         nop        dword [rax]

                     loc_f438:
000000000000f438         mov        rsi, qword [rbp]                            ; argument "__src" for method j_stpcpy, CODE XREF=streamsavedir+465
000000000000f43c         lea        r14, qword [r13+rbx]
000000000000f441         add        rbp, 0x10
000000000000f445         mov        rdi, r14                                    ; argument "__dest" for method j_stpcpy
000000000000f448         call       j_stpcpy                                    ; stpcpy
000000000000f44d         mov        rdi, qword [rbp-0x10]
000000000000f451         sub        rax, r14
000000000000f454         lea        rbx, qword [rbx+rax+1]
000000000000f459         call       sub_2e10                                    ; sub_2e10
000000000000f45e         cmp        r12, rbp
000000000000f461         jne        loc_f438

000000000000f463         add        rbx, r13
000000000000f466         jmp        loc_f3de
000000000000f46b         align      16

                     loc_f470:
000000000000f470         cmp        qword [rsp+0x78+var_58], r14                ; CODE XREF=streamsavedir+305
000000000000f475         je         loc_f563

000000000000f47b         lea        rbx, qword [r13+r14]
000000000000f480         jmp        loc_f3e8
000000000000f485         align      8

                     loc_f488:
000000000000f488         mov        rsi, qword [rsp+0x78+var_60]                ; CODE XREF=streamsavedir+181
000000000000f48d         mov        rax, qword [rsp+0x78+var_58]
000000000000f492         mov        rdx, rsi
000000000000f495         sub        rax, r14
000000000000f498         add        rdx, r14
000000000000f49b         mov        qword [rsp+0x78+var_48], rdx
000000000000f4a0         setb       dl
000000000000f4a3         cmp        rax, rsi
000000000000f4a6         movzx      edx, dl
000000000000f4a9         ja         loc_f4f5

000000000000f4ab         test       rdx, rdx
000000000000f4ae         jne        loc_f599

000000000000f4b4         test       r13, r13
000000000000f4b7         mov        rdx, qword [rsp+0x78+var_48]
000000000000f4bc         je         loc_f57f

000000000000f4c2         movabs     rax, 0x5555555555555553
000000000000f4cc         cmp        rdx, rax
000000000000f4cf         ja         loc_f599

000000000000f4d5         mov        rax, rdx
000000000000f4d8         shr        rax, 0x1
000000000000f4db         lea        rax, qword [rdx+rax+1]
000000000000f4e0         mov        qword [rsp+0x78+var_58], rax

                     loc_f4e5:
000000000000f4e5         mov        rsi, qword [rsp+0x78+var_58]                ; CODE XREF=streamsavedir+771
000000000000f4ea         mov        rdi, r13
000000000000f4ed         call       xrealloc                                    ; xrealloc
000000000000f4f2         mov        r13, rax

                     loc_f4f5:
000000000000f4f5         mov        rdx, qword [rsp+0x78+var_60]                ; argument "__n" for method j_memcpy, CODE XREF=streamsavedir+537
000000000000f4fa         lea        rdi, qword [r13+r14]                        ; argument "__dest" for method j_memcpy
000000000000f4ff         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
000000000000f502         call       j_memcpy                                    ; memcpy
000000000000f507         mov        r14, qword [rsp+0x78+var_48]
000000000000f50c         jmp        loc_f2f4

                     loc_f511:
000000000000f511         cmp        qword [rsp+0x78+var_68], 0x0                ; CODE XREF=streamsavedir+207
000000000000f517         je         loc_f5c5

000000000000f51d         movabs     rax, 0x555555555555554
000000000000f527         cmp        r12, rax
000000000000f52a         ja         loc_f599

000000000000f52c         mov        rax, r12
000000000000f52f         shr        rax, 0x1
000000000000f532         add        rax, qword [rsp+0x78+var_40]
000000000000f537         mov        qword [rsp+0x78+var_50], rax

                     loc_f53c:
000000000000f53c         mov        rsi, qword [rsp+0x78+var_50]                ; CODE XREF=sub_f59e+94
000000000000f541         mov        rdi, qword [rsp+0x78+var_68]
000000000000f546         mov        qword [rsp+0x78+var_48], rcx
000000000000f54b         shl        rsi, 0x4
000000000000f54f         call       xrealloc                                    ; xrealloc
000000000000f554         mov        rcx, qword [rsp+0x78+var_48]
000000000000f559         mov        qword [rsp+0x78+var_68], rax
000000000000f55e         jmp        loc_f365

                     loc_f563:
000000000000f563         mov        rbx, qword [rsp+0x78+var_58]                ; CODE XREF=streamsavedir+485
000000000000f568         mov        rdi, r13
000000000000f56b         lea        rsi, qword [rbx+1]
000000000000f56f         call       xrealloc                                    ; xrealloc
000000000000f574         mov        r13, rax
000000000000f577         add        rbx, rax
000000000000f57a         jmp        loc_f3e8

                     loc_f57f:
000000000000f57f         test       rdx, rdx                                    ; CODE XREF=streamsavedir+556
000000000000f582         mov        eax, 0x80
000000000000f587         cmovne     rax, rdx
000000000000f58b         test       rax, rax
000000000000f58e         mov        qword [rsp+0x78+var_58], rax
000000000000f593         jns        loc_f4e5

                     loc_f599:
000000000000f599         call       xalloc_die                                  ; xalloc_die, CODE XREF=streamsavedir+542, streamsavedir+575, streamsavedir+666, sub_f59e+77, sub_f59e+82
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_f59e:
000000000000f59e         nop
                        ; endp

                     loc_f5a0:
000000000000f5a0         mov        rdi, qword [rsp+0x78+var_68]                ; CODE XREF=streamsavedir+293
000000000000f5a5         call       sub_2e10                                    ; sub_2e10
000000000000f5aa         mov        rdi, r13
000000000000f5ad         xor        r13d, r13d
000000000000f5b0         call       sub_2e10                                    ; sub_2e10
000000000000f5b5         mov        dword [rbp], ebx
000000000000f5b8         jmp        loc_f3eb

                     loc_f5bd:
000000000000f5bd         xor        r13d, r13d                                  ; CODE XREF=streamsavedir+35
000000000000f5c0         jmp        loc_f3eb

                     loc_f5c5:
000000000000f5c5         test       r12, r12                                    ; CODE XREF=streamsavedir+647
000000000000f5c8         mov        eax, 0x8
000000000000f5cd         mov        edx, 0x10
000000000000f5d2         cmovne     rax, r12
000000000000f5d6         xor        esi, esi
000000000000f5d8         mov        rdi, rax
000000000000f5db         mov        qword [rsp+0x78+var_50], rax
000000000000f5e0         mov        rax, rdx
000000000000f5e3         mul        rdi
000000000000f5e6         jo         loc_f601

                     loc_f5e8:
000000000000f5e8         test       rax, rax                                    ; CODE XREF=sub_f59e+104
000000000000f5eb         js         loc_f599

000000000000f5ed         test       rsi, rsi
000000000000f5f0         jne        loc_f599

000000000000f5f2         lea        rax, qword [r12+1]
000000000000f5f7         mov        qword [rsp+0x78+var_40], rax
000000000000f5fc         jmp        loc_f53c

                     loc_f601:
000000000000f601         mov        esi, 0x1                                    ; CODE XREF=sub_f59e+72
000000000000f606         jmp        loc_f5e8
000000000000f608         align      16                                          ; End of unwind block (FDE at 0x17eb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     savedir:
000000000000f610         push       r12                                         ; Begin of unwind block (FDE at 0x17f04), CODE XREF=copy_internal+7591
000000000000f612         push       rbp
000000000000f613         mov        ebp, esi
000000000000f615         push       rbx
000000000000f616         call       opendir_safer                               ; opendir_safer
000000000000f61b         test       rax, rax
000000000000f61e         je         loc_f648

000000000000f620         mov        esi, ebp
000000000000f622         mov        rbx, rax
000000000000f625         mov        rdi, rax
000000000000f628         call       streamsavedir                               ; streamsavedir
000000000000f62d         mov        rdi, rbx                                    ; argument "__dirp" for method j_closedir
000000000000f630         mov        rbp, rax
000000000000f633         call       j_closedir                                  ; closedir
000000000000f638         test       eax, eax
000000000000f63a         jne        loc_f650

                     loc_f63c:
000000000000f63c         mov        rax, rbp                                    ; CODE XREF=savedir+58, savedir+88
000000000000f63f         pop        rbx
000000000000f640         pop        rbp
000000000000f641         pop        r12
000000000000f643         ret
                        ; endp
000000000000f644         align      8

                     loc_f648:
000000000000f648         xor        ebp, ebp                                    ; CODE XREF=savedir+14
000000000000f64a         jmp        loc_f63c
000000000000f64c         align      16

                     loc_f650:
000000000000f650         call       j___errno_location                          ; __errno_location, CODE XREF=savedir+42
000000000000f655         mov        r12d, dword [rax]
000000000000f658         mov        rbx, rax
000000000000f65b         mov        rdi, rbp
000000000000f65e         call       sub_2e10                                    ; sub_2e10
000000000000f663         xor        ebp, ebp
000000000000f665         mov        dword [rbx], r12d
000000000000f668         jmp        loc_f63c
000000000000f66a         align      16                                          ; End of unwind block (FDE at 0x17f04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     try_nocreate:
000000000000f670         push       rbx                                         ; Begin of unwind block (FDE at 0x17f34), DATA XREF=gen_tempname_len+61
000000000000f671         mov        rsi, rdi                                    ; argument "__filename" for method j___lxstat
000000000000f674         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
000000000000f679         sub        rsp, 0xa0
000000000000f680         mov        rdx, rsp                                    ; argument "__stat_buf" for method j___lxstat
000000000000f683         mov        rax, qword [fs:0x28]
000000000000f68c         mov        qword [rsp+0xa8+var_10], rax
000000000000f694         xor        eax, eax
000000000000f696         call       j___lxstat                                  ; __lxstat
000000000000f69b         mov        ebx, eax
000000000000f69d         call       j___errno_location                          ; __errno_location
000000000000f6a2         test       ebx, ebx
000000000000f6a4         je         loc_f6c0

000000000000f6a6         mov        edx, dword [rax]
000000000000f6a8         cmp        edx, 0x4b
000000000000f6ab         je         loc_f6c0

000000000000f6ad         xor        eax, eax
000000000000f6af         cmp        edx, 0x2
000000000000f6b2         setne      al
000000000000f6b5         neg        eax
000000000000f6b7         jmp        loc_f6cb
000000000000f6b9         align      64

                     loc_f6c0:
000000000000f6c0         mov        dword [rax], 0x11                           ; CODE XREF=try_nocreate+52, try_nocreate+59
000000000000f6c6         mov        eax, 0xffffffff

                     loc_f6cb:
000000000000f6cb         mov        rcx, qword [rsp+0xa8+var_10]                ; CODE XREF=try_nocreate+71
000000000000f6d3         xor        rcx, qword [fs:0x28]
000000000000f6dc         jne        loc_f6e7

000000000000f6de         add        rsp, 0xa0
000000000000f6e5         pop        rbx
000000000000f6e6         ret
                        ; endp

                     loc_f6e7:
000000000000f6e7         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=try_nocreate+108
                        ; endp
000000000000f6ec         align      16                                          ; End of unwind block (FDE at 0x17f34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_dir:
000000000000f6f0         mov        esi, 0x1c0                                  ; Begin of unwind block (FDE at 0x17f58), argument "__mode" for method j_mkdir, DATA XREF=gen_tempname_len+117
000000000000f6f5         jmp        j_mkdir                                     ; mkdir
                        ; endp
000000000000f6fa         align      256                                         ; End of unwind block (FDE at 0x17f58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_file:
000000000000f700         mov        esi, dword [rsi]                            ; Begin of unwind block (FDE at 0x17f6c), DATA XREF=gen_tempname_len+85
000000000000f702         mov        edx, 0x180
000000000000f707         xor        eax, eax
000000000000f709         and        sil, 0x3c
000000000000f70d         or         sil, 0xc2                                   ; argument "__oflag" for method j_open
000000000000f711         jmp        j_open                                      ; open
                        ; endp
000000000000f716         align      32                                          ; End of unwind block (FDE at 0x17f6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104


                     try_tempname_len:
000000000000f720         push       r15                                         ; Begin of unwind block (FDE at 0x17f80), CODE XREF=force_linkat+150, force_symlinkat+122, gen_tempname_len+68, gen_tempname_len+92, gen_tempname_len+124, try_tempname+6
000000000000f722         push       r14
000000000000f724         mov        r15, rdi
000000000000f727         push       r13
000000000000f729         push       r12
000000000000f72b         mov        r14, r8
000000000000f72e         push       rbp
000000000000f72f         push       rbx
000000000000f730         mov        ebp, esi
000000000000f732         sub        rsp, 0x38
000000000000f736         mov        qword [rsp+0x68+var_50], rdx
000000000000f73b         mov        qword [rsp+0x68+var_68], rdi
000000000000f73f         mov        qword [rsp+0x68+var_48], rcx
000000000000f744         call       j___errno_location                          ; __errno_location
000000000000f749         mov        qword [rsp+0x68+var_60], rax
000000000000f74e         mov        eax, dword [rax]
000000000000f750         mov        rdi, r15                                    ; argument "__s" for method j_strlen
000000000000f753         mov        dword [rsp+0x68+var_3C], eax
000000000000f757         call       j_strlen                                    ; strlen
000000000000f75c         movsxd     rsi, ebp
000000000000f75f         lea        rdx, qword [rsi+r14]
000000000000f763         cmp        rdx, rax
000000000000f766         ja         loc_f87b

000000000000f76c         sub        rax, r14
000000000000f76f         mov        rbx, rax
000000000000f772         sub        rbx, rsi
000000000000f775         lea        rsi, qword [aSimplebackupsu+19]             ; argument "__accept" for method j_strspn, 0x151a5
000000000000f77c         lea        rax, qword [r15+rbx]
000000000000f780         mov        rdi, rax                                    ; argument "__s" for method j_strspn
000000000000f783         mov        qword [rsp+0x68+var_58], rax
000000000000f788         call       j_strspn                                    ; strspn
000000000000f78d         cmp        r14, rax
000000000000f790         ja         loc_f87b

000000000000f796         xor        edi, edi
000000000000f798         mov        rsi, r14
000000000000f79b         call       randint_all_new                             ; randint_all_new
000000000000f7a0         test       rax, rax
000000000000f7a3         mov        rbp, rax
000000000000f7a6         je         loc_f88d

000000000000f7ac         mov        rax, qword [rsp+0x68+var_68]
000000000000f7b0         lea        r12, qword [letters]                        ; "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
000000000000f7b7         mov        r13d, 0x3a2f8
000000000000f7bd         add        rax, r14
000000000000f7c0         add        rbx, rax
000000000000f7c3         nop        dword [rax+rax]

                     loc_f7c8:
000000000000f7c8         test       r14, r14                                    ; CODE XREF=try_tempname_len+253
000000000000f7cb         mov        r15, qword [rsp+0x68+var_58]
000000000000f7d0         je         loc_f7f7

000000000000f7d2         nop        word [rax+rax]

                     loc_f7d8:
000000000000f7d8         mov        esi, 0x3d                                   ; CODE XREF=try_tempname_len+213
000000000000f7dd         mov        rdi, rbp
000000000000f7e0         add        r15, 0x1
000000000000f7e4         call       randint_genmax                              ; randint_genmax
000000000000f7e9         movzx      eax, byte [r12+rax]
000000000000f7ee         mov        byte [r15-1], al
000000000000f7f2         cmp        r15, rbx
000000000000f7f5         jne        loc_f7d8

                     loc_f7f7:
000000000000f7f7         mov        rsi, qword [rsp+0x68+var_50]                ; CODE XREF=try_tempname_len+176
000000000000f7fc         mov        rdi, qword [rsp+0x68+var_68]
000000000000f800         mov        rax, qword [rsp+0x68+var_48]
000000000000f805         call       rax
000000000000f807         test       eax, eax
000000000000f809         mov        edx, eax
000000000000f80b         jns        loc_f839

000000000000f80d         mov        rax, qword [rsp+0x68+var_60]
000000000000f812         mov        ecx, dword [rax]
000000000000f814         cmp        ecx, 0x11
000000000000f817         jne        loc_f874

000000000000f819         sub        r13d, 0x1
000000000000f81d         jne        loc_f7c8

000000000000f81f         mov        rdi, rbp
000000000000f822         call       randint_all_free                            ; randint_all_free
000000000000f827         mov        rax, qword [rsp+0x68+var_60]
000000000000f82c         mov        edx, 0xffffffff
000000000000f831         mov        dword [rax], 0x11
000000000000f837         jmp        loc_f863

                     loc_f839:
000000000000f839         mov        rcx, qword [rsp+0x68+var_60]                ; CODE XREF=try_tempname_len+235
000000000000f83e         mov        eax, dword [rsp+0x68+var_3C]
000000000000f842         mov        dword [rcx], eax
000000000000f844         mov        ecx, eax

                     loc_f846:
000000000000f846         mov        rdi, rbp                                    ; CODE XREF=try_tempname_len+345
000000000000f849         mov        dword [rsp+0x68+var_58], edx
000000000000f84d         mov        dword [rsp+0x68+var_68], ecx
000000000000f850         call       randint_all_free                            ; randint_all_free
000000000000f855         mov        rax, qword [rsp+0x68+var_60]
000000000000f85a         mov        ecx, dword [rsp+0x68+var_68]
000000000000f85d         mov        edx, dword [rsp+0x68+var_58]
000000000000f861         mov        dword [rax], ecx

                     loc_f863:
000000000000f863         add        rsp, 0x38                                   ; CODE XREF=try_tempname_len+279, try_tempname_len+363, try_tempname_len+370
000000000000f867         mov        eax, edx
000000000000f869         pop        rbx
000000000000f86a         pop        rbp
000000000000f86b         pop        r12
000000000000f86d         pop        r13
000000000000f86f         pop        r14
000000000000f871         pop        r15
000000000000f873         ret
                        ; endp

                     loc_f874:
000000000000f874         mov        edx, 0xffffffff                             ; CODE XREF=try_tempname_len+247
000000000000f879         jmp        loc_f846

                     loc_f87b:
000000000000f87b         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=try_tempname_len+70, try_tempname_len+112
000000000000f880         mov        edx, 0xffffffff
000000000000f885         mov        dword [rax], 0x16
000000000000f88b         jmp        loc_f863

                     loc_f88d:
000000000000f88d         mov        edx, 0xffffffff                             ; CODE XREF=try_tempname_len+134
000000000000f892         jmp        loc_f863
000000000000f894         align      32                                          ; End of unwind block (FDE at 0x17f80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_C: int32_t, -12


                     gen_tempname_len:
000000000000f8a0         sub        rsp, 0x18                                   ; Begin of unwind block (FDE at 0x17fcc), CODE XREF=gen_tempname+6
000000000000f8a4         cmp        ecx, 0x1
000000000000f8a7         mov        dword [rsp+0x18+var_C], edx
000000000000f8ab         je         loc_f910

000000000000f8ad         cmp        ecx, 0x2
000000000000f8b0         je         loc_f8d8

000000000000f8b2         test       ecx, ecx
000000000000f8b4         je         loc_f8f0

000000000000f8b6         lea        rcx, qword [__PRETTY_FUNCTION__.5642]       ; argument "__function" for method j___assert_fail, "gen_tempname_len"
000000000000f8bd         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/tempname.c"
000000000000f8c4         lea        rdi, qword [aInvalidKindInG]                ; argument "__assertion" for method j___assert_fail, "! \\\"invalid KIND in __gen_tempname\\\""
000000000000f8cb         mov        edx, 0x147                                  ; argument "__line" for method j___assert_fail
000000000000f8d0         call       j___assert_fail                             ; __assert_fail
                        ; endp
000000000000f8d5         align      8

                     loc_f8d8:
000000000000f8d8         lea        rdx, qword [rsp+0x18+var_C]                 ; CODE XREF=gen_tempname_len+16
000000000000f8dd         lea        rcx, qword [try_nocreate]                   ; try_nocreate
000000000000f8e4         call       try_tempname_len                            ; try_tempname_len
000000000000f8e9         add        rsp, 0x18
000000000000f8ed         ret
                        ; endp
000000000000f8ee         align      16

                     loc_f8f0:
000000000000f8f0         lea        rdx, qword [rsp+0x18+var_C]                 ; CODE XREF=gen_tempname_len+20
000000000000f8f5         lea        rcx, qword [try_file]                       ; try_file
000000000000f8fc         call       try_tempname_len                            ; try_tempname_len
000000000000f901         add        rsp, 0x18
000000000000f905         ret
                        ; endp
000000000000f906         align      16

                     loc_f910:
000000000000f910         lea        rdx, qword [rsp+0x18+var_C]                 ; CODE XREF=gen_tempname_len+11
000000000000f915         lea        rcx, qword [try_dir]                        ; try_dir
000000000000f91c         call       try_tempname_len                            ; try_tempname_len
000000000000f921         add        rsp, 0x18
000000000000f925         ret
                        ; endp
000000000000f926         align      16                                          ; End of unwind block (FDE at 0x17fcc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gen_tempname:
000000000000f930         mov        r8d, 0x6                                    ; Begin of unwind block (FDE at 0x17ff0)
000000000000f936         jmp        gen_tempname_len                            ; gen_tempname_len
                        ; endp
000000000000f93b         align      64                                          ; End of unwind block (FDE at 0x17ff0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_tempname:
000000000000f940         mov        r8d, 0x6                                    ; Begin of unwind block (FDE at 0x18004)
000000000000f946         jmp        try_tempname_len                            ; try_tempname_len
                        ; endp
000000000000f94b         align      16                                          ; End of unwind block (FDE at 0x18004)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fd_safer:
000000000000f950         push       r13                                         ; Begin of unwind block (FDE at 0x1801c), CODE XREF=open_safer+42, openat_safer+41
000000000000f952         push       r12
000000000000f954         push       rbp
000000000000f955         push       rbx
000000000000f956         mov        ebx, edi
000000000000f958         sub        rsp, 0x8
000000000000f95c         cmp        edi, 0x2
000000000000f95f         ja         loc_f982

000000000000f961         call       dup_safer                                   ; dup_safer
000000000000f966         mov        r12d, eax
000000000000f969         call       j___errno_location                          ; __errno_location
000000000000f96e         mov        r13d, dword [rax]
000000000000f971         mov        rbp, rax
000000000000f974         mov        edi, ebx                                    ; argument "__fd" for method j_close
000000000000f976         call       j_close                                     ; close
000000000000f97b         mov        ebx, r12d
000000000000f97e         mov        dword [rbp], r13d

                     loc_f982:
000000000000f982         add        rsp, 0x8                                    ; CODE XREF=fd_safer+15
000000000000f986         mov        eax, ebx
000000000000f988         pop        rbx
000000000000f989         pop        rbp
000000000000f98a         pop        r12
000000000000f98c         pop        r13
000000000000f98e         ret
                        ; endp
000000000000f98f         align      16                                          ; End of unwind block (FDE at 0x1801c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dev_info_hash:
000000000000f990         mov        rax, qword [rdi]                            ; Begin of unwind block (FDE at 0x18054), DATA XREF=utimecmpat+1591
000000000000f993         xor        edx, edx
000000000000f995         div        rsi
000000000000f998         mov        rax, rdx
000000000000f99b         ret
                        ; endp
000000000000f99c         align      32                                          ; End of unwind block (FDE at 0x18054)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dev_info_compare:
000000000000f9a0         mov        rax, qword [rsi]                            ; Begin of unwind block (FDE at 0x18068), DATA XREF=utimecmpat+1598
000000000000f9a3         cmp        qword [rdi], rax
000000000000f9a6         sete       al
000000000000f9a9         ret
                        ; endp
000000000000f9aa         align      16                                          ; End of unwind block (FDE at 0x18068)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int64_t, -248
        ;    var_FC: int8_t, -252
        ;    var_100: int32_t, -256
        ;    var_108: int64_t, -264
        ;    var_110: int64_t, -272
        ;    var_118: int64_t, -280
        ;    var_11C: int32_t, -284
        ;    var_120: int32_t, -288
        ;    var_128: int64_t, -296
        ;    var_130: int64_t, -304
        ;    var_138: int64_t, -312
        ;    var_140: int64_t, -320
        ;    var_148: int64_t, -328
        ;    var_150: int64_t, -336


                     utimecmpat:
000000000000f9b0         push       r15                                         ; Begin of unwind block (FDE at 0x1807c), CODE XREF=utimecmp+17
000000000000f9b2         push       r14
000000000000f9b4         push       r13
000000000000f9b6         push       r12
000000000000f9b8         push       rbp
000000000000f9b9         push       rbx
000000000000f9ba         mov        ebx, r8d
000000000000f9bd         and        ebx, 0x1
000000000000f9c0         sub        rsp, 0x128
000000000000f9c7         mov        r13, qword [rcx+0x60]
000000000000f9cb         mov        r14, qword [rdx+0x58]
000000000000f9cf         mov        rax, qword [fs:0x28]
000000000000f9d8         mov        qword [rsp+0x158+var_40], rax
000000000000f9e0         xor        eax, eax
000000000000f9e2         test       ebx, ebx
000000000000f9e4         mov        r12, qword [rcx+0x58]
000000000000f9e8         mov        r15, qword [rdx+0x60]
000000000000f9ec         mov        r9d, r13d
000000000000f9ef         je         loc_fad8

000000000000f9f5         cmp        r14, r12
000000000000f9f8         mov        r10d, edi
000000000000f9fb         sete       byte [rsp+0x158+var_120]
000000000000fa00         movzx      edi, byte [rsp+0x158+var_120]
000000000000fa05         cmp        r15d, r13d
000000000000fa08         sete       al
000000000000fa0b         and        al, dil
000000000000fa0e         mov        byte [rsp+0x158+var_150], al
000000000000fa12         jne        loc_fb20

000000000000fa18         lea        rax, qword [r12-1]
000000000000fa1d         cmp        rax, r14
000000000000fa20         jg         loc_fb28

000000000000fa26         lea        rax, qword [r14-1]
000000000000fa2a         cmp        rax, r12
000000000000fa2d         jg         loc_faef

000000000000fa33         mov        rbp, rdx
000000000000fa36         mov        rdx, qword [ht.5307]                        ; ht.5307
000000000000fa3d         mov        r11, rsi
000000000000fa40         test       rdx, rdx
000000000000fa43         je         loc_ffe0

                     loc_fa49:
000000000000fa49         mov        rsi, qword [new_dst_res.5308]               ; new_dst_res.5308, CODE XREF=utimecmpat+1660
000000000000fa50         test       rsi, rsi
000000000000fa53         je         loc_fb30

                     loc_fa59:
000000000000fa59         mov        rax, qword [rbp]                            ; CODE XREF=utimecmpat+460
000000000000fa5d         mov        rdi, rdx
000000000000fa60         mov        qword [rsp+0x158+var_130], r11
000000000000fa65         mov        dword [rsp+0x158+var_138], r10d
000000000000fa6a         mov        dword [rsp+0x158+var_140], r9d
000000000000fa6f         mov        qword [rsi], rax
000000000000fa72         call       hash_insert                                 ; hash_insert
000000000000fa77         test       rax, rax
000000000000fa7a         mov        qword [rsp+0x158+var_148], rax
000000000000fa7f         mov        r9d, dword [rsp+0x158+var_140]
000000000000fa84         mov        r10d, dword [rsp+0x158+var_138]
000000000000fa89         mov        r11, qword [rsp+0x158+var_130]
000000000000fa8e         je         loc_fb88

000000000000fa94         cmp        qword [new_dst_res.5308], rax               ; new_dst_res.5308
000000000000fa9b         je         loc_10040

                     loc_faa1:
000000000000faa1         mov        rax, qword [rsp+0x158+var_148]              ; CODE XREF=utimecmpat+561, utimecmpat+1691
000000000000faa6         cmp        byte [rax+0xc], 0x0
000000000000faaa         mov        esi, dword [rax+8]
000000000000faad         mov        dword [rsp+0x158+var_140], esi
000000000000fab1         je         loc_fc0a

000000000000fab7         xor        eax, eax
000000000000fab9         cmp        esi, 0x77359400
000000000000fabf         sete       al
000000000000fac2         not        eax
000000000000fac4         cdqe
000000000000fac6         and        r12, rax
000000000000fac9         mov        eax, r9d
000000000000facc         mov        r9d, r13d
000000000000facf         cdq
000000000000fad0         idiv       esi
000000000000fad2         sub        r9d, edx
000000000000fad5         nop        dword [rax]

                     loc_fad8:
000000000000fad8         cmp        r12, r14                                    ; CODE XREF=utimecmpat+63, utimecmpat+1572
000000000000fadb         jg         loc_fb28

000000000000fadd         mov        ebx, 0x1
000000000000fae2         jl         loc_faef

000000000000fae4         cmp        r9d, r15d
000000000000fae7         jg         loc_fb28

000000000000fae9         setl       bl
000000000000faec         movzx      ebx, bl

                     loc_faef:
000000000000faef         mov        rsi, qword [rsp+0x158+var_40]               ; CODE XREF=utimecmpat+125, utimecmpat+306, utimecmpat+370, utimecmpat+381, utimecmpat+1126, utimecmpat+1142, utimecmpat+1302
000000000000faf7         xor        rsi, qword [fs:0x28]
000000000000fb00         mov        eax, ebx
000000000000fb02         jne        loc_100d8

000000000000fb08         add        rsp, 0x128
000000000000fb0f         pop        rbx
000000000000fb10         pop        rbp
000000000000fb11         pop        r12
000000000000fb13         pop        r13
000000000000fb15         pop        r14
000000000000fb17         pop        r15
000000000000fb19         ret
                        ; endp
000000000000fb1a         align      32

                     loc_fb20:
000000000000fb20         xor        ebx, ebx                                    ; CODE XREF=utimecmpat+98
000000000000fb22         jmp        loc_faef
000000000000fb24         align      8

                     loc_fb28:
000000000000fb28         mov        ebx, 0xffffffff                             ; CODE XREF=utimecmpat+112, utimecmpat+299, utimecmpat+311, utimecmpat+1151, utimecmpat+1175
000000000000fb2d         jmp        loc_faef
000000000000fb2f         align      16

                     loc_fb30:
000000000000fb30         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=utimecmpat+163
000000000000fb35         mov        qword [rsp+0x158+var_130], r11
000000000000fb3a         mov        dword [rsp+0x158+var_138], r10d
000000000000fb3f         mov        dword [rsp+0x158+var_140], r9d
000000000000fb44         mov        qword [rsp+0x158+var_148], rdx
000000000000fb49         call       j_malloc                                    ; malloc
000000000000fb4e         test       rax, rax
000000000000fb51         mov        rsi, rax
000000000000fb54         mov        qword [new_dst_res.5308], rax               ; new_dst_res.5308
000000000000fb5b         mov        rdx, qword [rsp+0x158+var_148]
000000000000fb60         mov        r9d, dword [rsp+0x158+var_140]
000000000000fb65         mov        r10d, dword [rsp+0x158+var_138]
000000000000fb6a         mov        r11, qword [rsp+0x158+var_130]
000000000000fb6f         je         loc_fb98

000000000000fb71         mov        dword [rax+8], 0x77359400
000000000000fb78         mov        byte [rax+0xc], 0x0
000000000000fb7c         jmp        loc_fa59
000000000000fb81         align      8

                     loc_fb88:
000000000000fb88         mov        rdx, qword [ht.5307]                        ; ht.5307, CODE XREF=utimecmpat+222
000000000000fb8f         test       rdx, rdx
000000000000fb92         je         loc_10032

                     loc_fb98:
000000000000fb98         lea        rcx, qword [rsp+0x158+var_108]              ; CODE XREF=utimecmpat+447
000000000000fb9d         mov        rax, qword [rbp]
000000000000fba1         mov        rdi, rdx
000000000000fba4         mov        qword [rsp+0x158+var_128], r11
000000000000fba9         mov        dword [rsp+0x158+var_130], r10d
000000000000fbae         mov        rsi, rcx
000000000000fbb1         mov        dword [rsp+0x158+var_138], r9d
000000000000fbb6         mov        qword [rsp+0x158+var_140], rcx
000000000000fbbb         mov        qword [rsp+0x158+var_108], rax
000000000000fbc0         call       hash_lookup                                 ; hash_lookup
000000000000fbc5         test       rax, rax
000000000000fbc8         mov        qword [rsp+0x158+var_148], rax
000000000000fbcd         mov        rcx, qword [rsp+0x158+var_140]
000000000000fbd2         mov        r9d, dword [rsp+0x158+var_138]
000000000000fbd7         mov        r10d, dword [rsp+0x158+var_130]
000000000000fbdc         mov        r11, qword [rsp+0x158+var_128]
000000000000fbe1         jne        loc_faa1

000000000000fbe7         nop        word [rax+rax]

                     loc_fbf0:
000000000000fbf0         mov        dword [rsp+0x158+var_100], 0x77359400       ; CODE XREF=utimecmpat+1671
000000000000fbf8         mov        byte [rsp+0x158+var_FC], 0x0
000000000000fbfd         mov        dword [rsp+0x158+var_140], 0x77359400
000000000000fc05         mov        qword [rsp+0x158+var_148], rcx

                     loc_fc0a:
000000000000fc0a         mov        rcx, qword [rbp+0x50]                       ; CODE XREF=utimecmpat+257
000000000000fc0e         mov        eax, 0x66666667
000000000000fc13         mov        rsi, qword [rbp+0x70]
000000000000fc17         imul       ecx
000000000000fc19         mov        eax, ecx
000000000000fc1b         mov        qword [rsp+0x158+var_130], rcx
000000000000fc20         sar        eax, 0x1f
000000000000fc23         sar        edx, 0x2
000000000000fc26         sub        edx, eax
000000000000fc28         lea        eax, dword [rdx+rdx*4]
000000000000fc2b         mov        dword [rsp+0x158+var_138], edx
000000000000fc2f         add        eax, eax
000000000000fc31         sub        ecx, eax
000000000000fc33         mov        eax, 0x66666667
000000000000fc38         imul       esi
000000000000fc3a         mov        eax, esi
000000000000fc3c         sar        eax, 0x1f
000000000000fc3f         sar        edx, 0x2
000000000000fc42         mov        edi, edx
000000000000fc44         sub        edi, eax
000000000000fc46         lea        eax, dword [rdi+rdi*4]
000000000000fc49         add        eax, eax
000000000000fc4b         sub        esi, eax
000000000000fc4d         mov        eax, 0x66666667
000000000000fc52         imul       r15d
000000000000fc55         mov        eax, r15d
000000000000fc58         or         ecx, esi
000000000000fc5a         sar        eax, 0x1f
000000000000fc5d         mov        esi, r15d
000000000000fc60         sar        edx, 0x2
000000000000fc63         mov        r8d, edx
000000000000fc66         sub        r8d, eax
000000000000fc69         lea        eax, dword [r8+r8*4]
000000000000fc6d         add        eax, eax
000000000000fc6f         sub        esi, eax
000000000000fc71         or         ecx, esi
000000000000fc73         jne        loc_ffc8

000000000000fc79         cmp        dword [rsp+0x158+var_140], 0xa
000000000000fc7e         mov        rax, qword [rbp+0x48]
000000000000fc82         mov        ecx, edi
000000000000fc84         mov        edx, dword [rsp+0x158+var_138]
000000000000fc88         mov        esi, r8d
000000000000fc8b         mov        qword [rsp+0x158+var_110], rax
000000000000fc90         mov        dword [rsp+0x158+var_128], edx
000000000000fc94         jle        loc_100a8

000000000000fc9a         mov        eax, 0x66666667
000000000000fc9f         imul       edi
000000000000fca1         mov        eax, edi
000000000000fca3         sar        eax, 0x1f
000000000000fca6         sar        edx, 0x2
000000000000fca9         sub        edx, eax
000000000000fcab         lea        eax, dword [rdx+rdx*4]
000000000000fcae         add        eax, eax
000000000000fcb0         sub        edi, eax
000000000000fcb2         mov        eax, 0x66666667
000000000000fcb7         imul       dword [rsp+0x158+var_138]
000000000000fcbb         mov        eax, dword [rsp+0x158+var_138]
000000000000fcbf         sar        eax, 0x1f
000000000000fcc2         sar        edx, 0x2
000000000000fcc5         sub        edx, eax
000000000000fcc7         lea        eax, dword [rdx+rdx*4]
000000000000fcca         mov        edx, dword [rsp+0x158+var_138]
000000000000fcce         mov        dword [rsp+0x158+var_138], 0xa
000000000000fcd6         add        eax, eax
000000000000fcd8         sub        edx, eax
000000000000fcda         mov        eax, 0x66666667
000000000000fcdf         or         edi, edx
000000000000fce1         imul       r8d
000000000000fce4         mov        eax, r8d
000000000000fce7         mov        dword [rsp+0x158+var_11C], edi
000000000000fceb         sar        eax, 0x1f
000000000000fcee         mov        edi, 0x66666667
000000000000fcf3         sar        edx, 0x2
000000000000fcf6         sub        edx, eax
000000000000fcf8         lea        eax, dword [rdx+rdx*4]
000000000000fcfb         mov        edx, 0x8
000000000000fd00         add        eax, eax
000000000000fd02         sub        r8d, eax
000000000000fd05         mov        eax, dword [rsp+0x158+var_11C]
000000000000fd09         or         eax, r8d
000000000000fd0c         jne        loc_100c4

000000000000fd12         mov        dword [rsp+0x158+var_11C], r9d
000000000000fd17         mov        qword [rsp+0x158+var_118], r14
000000000000fd1c         mov        r9d, 0xa
000000000000fd22         mov        r8d, dword [rsp+0x158+var_128]
000000000000fd27         mov        qword [rsp+0x158+var_138], r12
000000000000fd2c         mov        r14d, edx
000000000000fd2f         mov        qword [rsp+0x158+var_128], rbp

                     loc_fd34:
000000000000fd34         mov        eax, r8d                                    ; CODE XREF=utimecmpat+1054
000000000000fd37         sar        r8d, 0x1f
000000000000fd3b         lea        ebp, dword [r9+r9*4]
000000000000fd3f         imul       edi
000000000000fd41         mov        eax, ecx
000000000000fd43         sar        ecx, 0x1f
000000000000fd46         add        ebp, ebp
000000000000fd48         mov        r9d, ebp
000000000000fd4b         sar        edx, 0x2
000000000000fd4e         sub        edx, r8d
000000000000fd51         mov        r8d, edx
000000000000fd54         imul       edi
000000000000fd56         mov        eax, esi
000000000000fd58         sar        esi, 0x1f
000000000000fd5b         sar        edx, 0x2
000000000000fd5e         sub        edx, ecx
000000000000fd60         mov        ecx, edx
000000000000fd62         imul       edi
000000000000fd64         sar        edx, 0x2
000000000000fd67         sub        edx, esi
000000000000fd69         cmp        ebp, dword [rsp+0x158+var_140]
000000000000fd6d         mov        esi, edx
000000000000fd6f         jge        loc_10050

000000000000fd75         mov        eax, r8d
000000000000fd78         mov        r12d, r8d
000000000000fd7b         imul       edi
000000000000fd7d         mov        eax, r8d
000000000000fd80         sar        eax, 0x1f
000000000000fd83         sar        edx, 0x2
000000000000fd86         sub        edx, eax
000000000000fd88         lea        eax, dword [rdx+rdx*4]
000000000000fd8b         add        eax, eax
000000000000fd8d         sub        r12d, eax
000000000000fd90         mov        eax, ecx
000000000000fd92         imul       edi
000000000000fd94         mov        eax, ecx
000000000000fd96         sar        eax, 0x1f
000000000000fd99         sar        edx, 0x2
000000000000fd9c         sub        edx, eax
000000000000fd9e         lea        eax, dword [rdx+rdx*4]
000000000000fda1         mov        edx, ecx
000000000000fda3         add        eax, eax
000000000000fda5         sub        edx, eax
000000000000fda7         mov        eax, esi
000000000000fda9         or         r12d, edx
000000000000fdac         imul       edi
000000000000fdae         mov        eax, esi
000000000000fdb0         sar        eax, 0x1f
000000000000fdb3         sar        edx, 0x2
000000000000fdb6         sub        edx, eax
000000000000fdb8         lea        eax, dword [rdx+rdx*4]
000000000000fdbb         mov        edx, esi
000000000000fdbd         add        eax, eax
000000000000fdbf         sub        edx, eax
000000000000fdc1         or         r12d, edx
000000000000fdc4         jne        loc_10050

000000000000fdca         sub        r14d, 0x1
000000000000fdce         jne        loc_fd34

000000000000fdd4         mov        r14, qword [rsp+0x158+var_118]
000000000000fdd9         mov        rbp, qword [rsp+0x158+var_128]
000000000000fdde         mov        rax, qword [rsp+0x158+var_110]
000000000000fde3         mov        r12, qword [rsp+0x158+var_138]
000000000000fde8         mov        r9d, dword [rsp+0x158+var_11C]
000000000000fded         or         rax, r14
000000000000fdf0         or         rax, qword [rbp+0x68]
000000000000fdf4         test       al, 0x1
000000000000fdf6         mov        rax, qword [rsp+0x158+var_148]
000000000000fdfb         je         loc_10088

000000000000fe01         mov        dword [rax+8], 0x3b9aca00
000000000000fe08         mov        dword [rsp+0x158+var_138], 0x3b9aca00
000000000000fe10         mov        rax, r12

                     loc_fe13:
000000000000fe13         cmp        r14, r12                                    ; CODE XREF=utimecmpat+1747, utimecmpat+1779, utimecmpat+1807, utimecmpat+1827
000000000000fe16         jg         loc_faef

000000000000fe1c         cmp        r15d, r13d
000000000000fe1f         jl         loc_fe2c

000000000000fe21         cmp        byte [rsp+0x158+var_120], 0x0
000000000000fe26         jne        loc_faef

                     loc_fe2c:
000000000000fe2c         cmp        r14, rax                                    ; CODE XREF=utimecmpat+1135
000000000000fe2f         jl         loc_fb28

000000000000fe35         jne        loc_fe4d

000000000000fe37         mov        eax, r9d
000000000000fe3a         cdq
000000000000fe3b         idiv       dword [rsp+0x158+var_138]
000000000000fe3f         mov        eax, r13d
000000000000fe42         sub        eax, edx
000000000000fe44         cmp        eax, r15d
000000000000fe47         jg         loc_fb28

                     loc_fe4d:
000000000000fe4d         mov        rax, qword [rsp+0x158+var_110]              ; CODE XREF=utimecmpat+1157
000000000000fe52         mov        edx, 0x38e38e39
000000000000fe57         lea        rbp, qword [rsp+0x158+var_F8]
000000000000fe5c         mov        rsi, r11                                    ; argument "__path" for method j_utimensat
000000000000fe5f         mov        edi, r10d                                   ; argument "__fd" for method j_utimensat
000000000000fe62         mov        ecx, 0x100                                  ; argument "__flags" for method j_utimensat
000000000000fe67         mov        dword [rsp+0x158+var_140], r9d
000000000000fe6c         mov        dword [rsp+0x158+var_120], r10d
000000000000fe71         mov        qword [rsp+0x158+var_F8], rax
000000000000fe76         movsxd     rax, dword [rsp+0x158+var_130]
000000000000fe7b         mov        qword [rsp+0x158+var_F0], rax
000000000000fe80         movzx      eax, byte [rsp+0x158+var_150]
000000000000fe85         mov        qword [rsp+0x158+var_150], r11
000000000000fe8a         or         rax, r14
000000000000fe8d         mov        qword [rsp+0x158+var_E8], rax
000000000000fe92         mov        eax, dword [rsp+0x158+var_138]
000000000000fe96         mul        edx
000000000000fe98         mov        eax, edx
000000000000fe9a         mov        rdx, rbp                                    ; argument "__times" for method j_utimensat
000000000000fe9d         shr        eax, 0x1
000000000000fe9f         add        eax, r15d
000000000000fea2         cdqe
000000000000fea4         mov        qword [rsp+0x158+var_E0], rax
000000000000fea9         call       j_utimensat                                 ; utimensat
000000000000feae         test       eax, eax
000000000000feb0         mov        r10d, dword [rsp+0x158+var_120]
000000000000feb5         mov        r11, qword [rsp+0x158+var_150]
000000000000feba         mov        r9d, dword [rsp+0x158+var_140]
000000000000febf         je         loc_fecb

                     loc_fec1:
000000000000fec1         mov        ebx, 0xfffffffe                             ; CODE XREF=utimecmpat+1889
000000000000fec6         jmp        loc_faef

                     loc_fecb:
000000000000fecb         lea        rcx, qword [rsp+0x158+var_D8]               ; argument "__stat_buf" for method j___fxstatat, CODE XREF=utimecmpat+1295
000000000000fed3         mov        rdx, r11                                    ; argument "__filename" for method j___fxstatat
000000000000fed6         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
000000000000fedc         mov        esi, r10d                                   ; argument "__fildes" for method j___fxstatat
000000000000fedf         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
000000000000fee4         mov        dword [rsp+0x158+var_140], r9d
000000000000fee9         mov        qword [rsp+0x158+var_150], r11
000000000000feee         mov        dword [rsp+0x158+var_120], r10d
000000000000fef3         call       j___fxstatat                                ; __fxstatat
000000000000fef8         mov        rcx, qword [rsp+0x158+var_78]
000000000000ff00         mov        r8d, eax
000000000000ff03         mov        rax, qword [rsp+0x158+var_80]
000000000000ff0b         movsxd     rdx, r15d
000000000000ff0e         mov        r10d, dword [rsp+0x158+var_120]
000000000000ff13         mov        r11, qword [rsp+0x158+var_150]
000000000000ff18         mov        r9d, dword [rsp+0x158+var_140]
000000000000ff1d         xor        rcx, rdx
000000000000ff20         xor        rax, r14
000000000000ff23         or         rax, rcx
000000000000ff26         movsxd     rcx, r8d
000000000000ff29         or         rax, rcx
000000000000ff2c         jne        loc_100dd

                     loc_ff32:
000000000000ff32         mov        ecx, dword [rsp+0x158+var_80]               ; CODE XREF=utimecmpat+1895
000000000000ff39         mov        esi, 0xa
000000000000ff3e         and        ecx, 0x1
000000000000ff41         imul       ecx, ecx, 0x3b9aca00
000000000000ff47         add        ecx, dword [rsp+0x158+var_78]
000000000000ff4e         mov        eax, ecx
000000000000ff50         cdq
000000000000ff51         idiv       esi
000000000000ff53         test       edx, edx
000000000000ff55         jne        loc_10125

000000000000ff5b         cmp        dword [rsp+0x158+var_138], 0xa
000000000000ff60         je         loc_ff9d

000000000000ff62         mov        r8d, 0x9
000000000000ff68         mov        esi, 0xa
000000000000ff6d         mov        edi, 0xa
000000000000ff72         jmp        loc_ff7d

                     loc_ff74:
000000000000ff74         imul       esi, esi, 0xa                               ; CODE XREF=utimecmpat+1507
000000000000ff77         cmp        esi, dword [rsp+0x158+var_138]
000000000000ff7b         je         loc_ff9d

                     loc_ff7d:
000000000000ff7d         mov        eax, ecx                                    ; CODE XREF=utimecmpat+1474
000000000000ff7f         cdq
000000000000ff80         idiv       edi
000000000000ff82         cdq
000000000000ff83         mov        ecx, eax
000000000000ff85         idiv       edi
000000000000ff87         test       edx, edx
000000000000ff89         jne        loc_1011c

000000000000ff8f         sub        r8d, 0x1
000000000000ff93         jne        loc_ff74

000000000000ff95         mov        dword [rsp+0x158+var_138], 0x77359400

                     loc_ff9d:
000000000000ff9d         mov        esi, dword [rsp+0x158+var_138]              ; CODE XREF=utimecmpat+1456, utimecmpat+1483, utimecmpat+1904, utimecmpat+1913
000000000000ffa1         xor        eax, eax
000000000000ffa3         cmp        esi, 0x77359400
000000000000ffa9         mov        ebx, esi
000000000000ffab         sete       al
000000000000ffae         not        eax
000000000000ffb0         cdqe
000000000000ffb2         and        r12, rax
000000000000ffb5         mov        eax, r9d
000000000000ffb8         mov        r9d, r13d
000000000000ffbb         cdq
000000000000ffbc         idiv       esi
000000000000ffbe         sub        r9d, edx
000000000000ffc1         nop        dword [rax]

                     loc_ffc8:
000000000000ffc8         mov        rax, qword [rsp+0x158+var_148]              ; CODE XREF=utimecmpat+707
000000000000ffcd         mov        dword [rax+8], ebx
000000000000ffd0         mov        byte [rax+0xc], 0x1
000000000000ffd4         jmp        loc_fad8
000000000000ffd9         align      32

                     loc_ffe0:
000000000000ffe0         mov        r8, qword [qword_219fc8]                    ; qword_219fc8, CODE XREF=utimecmpat+147
000000000000ffe7         lea        rdx, qword [dev_info_hash]                  ; dev_info_hash
000000000000ffee         lea        rcx, qword [dev_info_compare]               ; dev_info_compare
000000000000fff5         mov        qword [rsp+0x158+var_138], rsi
000000000000fffa         mov        edi, 0x10
000000000000ffff         xor        esi, esi
0000000000010001         mov        dword [rsp+0x158+var_140], r10d
0000000000010006         mov        dword [rsp+0x158+var_148], r13d
000000000001000b         call       hash_initialize                             ; hash_initialize
0000000000010010         test       rax, rax
0000000000010013         mov        rdx, rax
0000000000010016         mov        qword [ht.5307], rax                        ; ht.5307
000000000001001d         mov        r9d, dword [rsp+0x158+var_148]
0000000000010022         mov        r10d, dword [rsp+0x158+var_140]
0000000000010027         mov        r11, qword [rsp+0x158+var_138]
000000000001002c         jne        loc_fa49

                     loc_10032:
0000000000010032         lea        rcx, qword [rsp+0x158+var_108]              ; CODE XREF=utimecmpat+482
0000000000010037         jmp        loc_fbf0
000000000001003c         align      64

                     loc_10040:
0000000000010040         mov        qword [new_dst_res.5308], 0x0               ; new_dst_res.5308, CODE XREF=utimecmpat+235
000000000001004b         jmp        loc_faa1

                     loc_10050:
0000000000010050         cmp        ebp, 0x77359400                             ; CODE XREF=utimecmpat+959, utimecmpat+1044
0000000000010056         mov        r12, qword [rsp+0x158+var_138]
000000000001005b         mov        rsi, qword [rsp+0x158+var_148]
0000000000010060         sete       byte [rsp+0x158+var_150]
0000000000010065         movzx      eax, byte [rsp+0x158+var_150]
000000000001006a         mov        dword [rsp+0x158+var_138], r9d
000000000001006f         mov        r14, qword [rsp+0x158+var_118]
0000000000010074         mov        r9d, dword [rsp+0x158+var_11C]
0000000000010079         mov        dword [rsi+8], ebp
000000000001007c         not        eax
000000000001007e         cdqe
0000000000010080         and        rax, r12
0000000000010083         jmp        loc_fe13

                     loc_10088:
0000000000010088         mov        dword [rax+8], 0x77359400                   ; CODE XREF=utimecmpat+1099
000000000001008f         mov        rax, r12
0000000000010092         mov        byte [rsp+0x158+var_150], 0x1
0000000000010097         and        rax, 0xfffffffffffffffe
000000000001009b         mov        dword [rsp+0x158+var_138], 0x77359400
00000000000100a3         jmp        loc_fe13

                     loc_100a8:
00000000000100a8         mov        rax, qword [rsp+0x158+var_148]              ; CODE XREF=utimecmpat+740
00000000000100ad         mov        dword [rsp+0x158+var_138], 0xa
00000000000100b5         mov        dword [rax+8], 0xa
00000000000100bc         mov        rax, r12
00000000000100bf         jmp        loc_fe13

                     loc_100c4:
00000000000100c4         mov        rax, qword [rsp+0x158+var_148]              ; CODE XREF=utimecmpat+860
00000000000100c9         mov        dword [rax+8], 0xa
00000000000100d0         mov        rax, r12
00000000000100d3         jmp        loc_fe13

                     loc_100d8:
00000000000100d8         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=utimecmpat+338
                        ; endp

                     loc_100dd:
00000000000100dd         mov        qword [rsp+0x158+var_E0], rdx               ; CODE XREF=utimecmpat+1404
00000000000100e2         mov        ecx, 0x100                                  ; argument "__flags" for method j_utimensat
00000000000100e7         mov        rdx, rbp                                    ; argument "__times" for method j_utimensat
00000000000100ea         mov        rsi, r11                                    ; argument "__path" for method j_utimensat
00000000000100ed         mov        edi, r10d                                   ; argument "__fd" for method j_utimensat
00000000000100f0         mov        dword [rsp+0x158+var_150], r8d
00000000000100f5         mov        dword [rsp+0x158+var_120], r9d
00000000000100fa         mov        qword [rsp+0x158+var_E8], r14
00000000000100ff         call       j_utimensat                                 ; utimensat
0000000000010104         mov        r8d, dword [rsp+0x158+var_150]
0000000000010109         mov        r9d, dword [rsp+0x158+var_120]
000000000001010e         test       r8d, r8d
0000000000010111         jne        loc_fec1

0000000000010117         jmp        loc_ff32

                     loc_1011c:
000000000001011c         mov        dword [rsp+0x158+var_138], esi              ; CODE XREF=utimecmpat+1497
0000000000010120         jmp        loc_ff9d

                     loc_10125:
0000000000010125         mov        dword [rsp+0x158+var_138], ebx              ; CODE XREF=utimecmpat+1445
0000000000010129         jmp        loc_ff9d
000000000001012e         align      16                                          ; End of unwind block (FDE at 0x1807c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     utimecmp:
0000000000010130         mov        r8d, ecx                                    ; Begin of unwind block (FDE at 0x180cc), CODE XREF=copy_internal+651
0000000000010133         mov        rcx, rdx
0000000000010136         mov        rdx, rsi
0000000000010139         mov        rsi, rdi
000000000001013c         mov        edi, 0xffffff9c
0000000000010141         jmp        utimecmpat                                  ; utimecmpat
                        ; endp
0000000000010146         align      16                                          ; End of unwind block (FDE at 0x180cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_19: int8_t, -25


                     update_timespec:
0000000000010150         push       rbp                                         ; Begin of unwind block (FDE at 0x180e4), CODE XREF=fdutimens+612, lutimens+197
0000000000010151         push       rbx
0000000000010152         mov        rbp, rdi
0000000000010155         sub        rsp, 0x18
0000000000010159         mov        rbx, qword [rsi]
000000000001015c         mov        rax, qword [rbx+8]
0000000000010160         mov        rdx, qword [rbx+0x18]
0000000000010164         cmp        rax, 0x3ffffffe
000000000001016a         je         loc_101d0

000000000001016c         cmp        rax, 0x3fffffff
0000000000010172         je         loc_10190

0000000000010174         cmp        rdx, 0x3ffffffe
000000000001017b         je         loc_101ae

                     loc_1017d:
000000000001017d         xor        eax, eax                                    ; CODE XREF=update_timespec+92
000000000001017f         cmp        rdx, 0x3fffffff
0000000000010186         je         loc_101f8

                     loc_10188:
0000000000010188         add        rsp, 0x18                                   ; CODE XREF=update_timespec+140, update_timespec+166, update_timespec+209
000000000001018c         pop        rbx
000000000001018d         pop        rbp
000000000001018e         ret
                        ; endp
000000000001018f         align      16

                     loc_10190:
0000000000010190         cmp        rdx, 0x3fffffff                             ; CODE XREF=update_timespec+34
0000000000010197         je         loc_10218

0000000000010199         mov        rdi, rbx
000000000001019c         call       gettime                                     ; gettime
00000000000101a1         mov        rdx, qword [rbx+0x18]
00000000000101a5         cmp        rdx, 0x3ffffffe
00000000000101ac         jne        loc_1017d

                     loc_101ae:
00000000000101ae         mov        rax, qword [rbp+0x60]                       ; CODE XREF=update_timespec+43
00000000000101b2         mov        rdx, qword [rbp+0x58]
00000000000101b6         mov        qword [rbx+0x18], rax
00000000000101ba         mov        qword [rbx+0x10], rdx
00000000000101be         add        rsp, 0x18
00000000000101c2         xor        eax, eax
00000000000101c4         pop        rbx
00000000000101c5         pop        rbp
00000000000101c6         ret
                        ; endp
00000000000101c7         align      16

                     loc_101d0:
00000000000101d0         cmp        rdx, 0x3ffffffe                             ; CODE XREF=update_timespec+26
00000000000101d7         mov        eax, 0x1
00000000000101dc         je         loc_10188

00000000000101de         mov        rax, qword [rdi+0x50]
00000000000101e2         mov        rcx, qword [rdi+0x48]
00000000000101e6         mov        qword [rbx+8], rax
00000000000101ea         xor        eax, eax
00000000000101ec         cmp        rdx, 0x3fffffff
00000000000101f3         mov        qword [rbx], rcx
00000000000101f6         jne        loc_10188

                     loc_101f8:
00000000000101f8         lea        rdi, qword [rbx+0x10]                       ; CODE XREF=update_timespec+54
00000000000101fc         mov        byte [rsp+0x28+var_19], al
0000000000010200         call       gettime                                     ; gettime
0000000000010205         movzx      eax, byte [rsp+0x28+var_19]
000000000001020a         add        rsp, 0x18
000000000001020e         pop        rbx
000000000001020f         pop        rbp
0000000000010210         ret
                        ; endp
0000000000010211         align      8

                     loc_10218:
0000000000010218         mov        qword [rsi], 0x0                            ; CODE XREF=update_timespec+71
000000000001021f         xor        eax, eax
0000000000010221         jmp        loc_10188
0000000000010226         align      16                                          ; End of unwind block (FDE at 0x180e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     validate_timespec:
0000000000010230         mov        r9, qword [rdi+8]                           ; Begin of unwind block (FDE at 0x18128), CODE XREF=fdutimens+77, lutimens+71
0000000000010234         lea        rcx, qword [r9-0x3ffffffe]
000000000001023b         cmp        rcx, 0x1
000000000001023f         jbe        loc_1024a

0000000000010241         cmp        r9, 0x3b9ac9ff
0000000000010248         ja         loc_102c0

                     loc_1024a:
000000000001024a         mov        rdx, qword [rdi+0x18]                       ; CODE XREF=validate_timespec+15
000000000001024e         lea        r8, qword [rdx-0x3ffffffe]
0000000000010255         cmp        r8, 0x1
0000000000010259         jbe        loc_10264

000000000001025b         cmp        rdx, 0x3b9ac9ff
0000000000010262         ja         loc_102c0

                     loc_10264:
0000000000010264         xor        esi, esi                                    ; CODE XREF=validate_timespec+41
0000000000010266         xor        r10d, r10d
0000000000010269         cmp        rcx, 0x1
000000000001026d         ja         loc_10289

000000000001026f         xor        esi, esi
0000000000010271         cmp        r9, 0x3ffffffe
0000000000010278         mov        qword [rdi], 0x0
000000000001027f         sete       sil
0000000000010283         mov        r10d, 0x1

                     loc_10289:
0000000000010289         cmp        r8, 0x1                                     ; CODE XREF=validate_timespec+61
000000000001028d         ja         loc_102ab

000000000001028f         xor        eax, eax
0000000000010291         cmp        rdx, 0x3ffffffe
0000000000010298         mov        qword [rdi+0x10], 0x0
00000000000102a0         sete       al
00000000000102a3         mov        r10d, 0x1
00000000000102a9         add        esi, eax

                     loc_102ab:
00000000000102ab         xor        eax, eax                                    ; CODE XREF=validate_timespec+93
00000000000102ad         cmp        esi, 0x1
00000000000102b0         sete       al
00000000000102b3         add        eax, r10d
00000000000102b6         ret
                        ; endp
00000000000102b7         align      64

                     loc_102c0:
00000000000102c0         sub        rsp, 0x8                                    ; CODE XREF=validate_timespec+24, validate_timespec+50
00000000000102c4         call       j___errno_location                          ; __errno_location
00000000000102c9         mov        dword [rax], 0x16
00000000000102cf         mov        eax, 0xffffffff
00000000000102d4         add        rsp, 0x8
00000000000102d8         ret
                        ; endp
00000000000102d9         align      32                                          ; End of unwind block (FDE at 0x18128)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     lutimensat:
00000000000102e0         mov        ecx, 0x100                                  ; Begin of unwind block (FDE at 0x18140), argument "__flags" for method j_utimensat
00000000000102e5         jmp        j_utimensat                                 ; utimensat
                        ; endp
00000000000102ea         align      16                                          ; End of unwind block (FDE at 0x18140)

                     fdutimens:
00000000000102f0         push       r14                                         ; Begin of unwind block (FDE at 0x18154), CODE XREF=copy_internal+14866, utimens+11, lutimens+241
00000000000102f2         push       r13
00000000000102f4         push       r12
00000000000102f6         push       rbp
00000000000102f7         mov        r12, rsi
00000000000102fa         push       rbx
00000000000102fb         mov        ebx, edi
00000000000102fd         sub        rsp, 0x110
0000000000010304         mov        rax, qword [fs:0x28]
000000000001030d         mov        qword [rsp+0x138+var_30], rax
0000000000010315         xor        eax, eax
0000000000010317         test       rdx, rdx
000000000001031a         je         loc_105e0

0000000000010320         movdqu     xmm0, xmmword [rdx]
0000000000010324         lea        rdi, qword [rsp+0x138+var_128]
0000000000010329         movaps     xmmword [rsp+0x138+var_128], xmm0
000000000001032e         mov        qword [rsp+0x138+var_130], rdi
0000000000010333         movdqu     xmm0, xmmword [rdx+0x10]
0000000000010338         movaps     xmmword [rsp+0x138+var_118], xmm0
000000000001033d         call       validate_timespec                           ; validate_timespec
0000000000010342         test       eax, eax
0000000000010344         mov        r13d, eax
0000000000010347         js         loc_10703

                     loc_1034d:
000000000001034d         test       ebx, ebx                                    ; CODE XREF=fdutimens+764
000000000001034f         jns        loc_1035a

0000000000010351         test       r12, r12
0000000000010354         je         loc_106f8

                     loc_1035a:
000000000001035a         mov        eax, dword [utimensat_works_really]         ; utimensat_works_really, CODE XREF=fdutimens+95
0000000000010360         test       eax, eax
0000000000010362         js         loc_10398

0000000000010364         cmp        r13d, 0x2
0000000000010368         je         loc_10570

000000000001036e         mov        rsi, qword [rsp+0x138+var_130]

                     loc_10373:
0000000000010373         test       ebx, ebx                                    ; CODE XREF=fdutimens+711, fdutimens+741, fdutimens+1021
0000000000010375         js         loc_106a0

000000000001037b         mov        edi, ebx                                    ; argument "__fd" for method j_futimens
000000000001037d         call       j_futimens                                  ; futimens
0000000000010382         cmp        eax, 0x0
0000000000010385         mov        ebp, eax
0000000000010387         jle        loc_106bd

                     loc_1038d:
000000000001038d         call       j___errno_location                          ; __errno_location, CODE XREF=fdutimens+967
0000000000010392         mov        dword [rax], 0x26

                     loc_10398:
0000000000010398         test       r13d, r13d                                  ; CODE XREF=fdutimens+114, fdutimens+1113
000000000001039b         mov        dword [utimensat_works_really], 0xffffffff  ; utimensat_works_really
00000000000103a5         mov        dword [lutimensat_works_really], 0xffffffff ; lutimensat_works_really
00000000000103af         jne        loc_10510

                     loc_103b5:
00000000000103b5         mov        rsi, qword [rsp+0x138+var_130]              ; CODE XREF=fdutimens+619
00000000000103ba         test       rsi, rsi
00000000000103bd         je         loc_10650

00000000000103c3         mov        rax, qword [rsi]
00000000000103c6         mov        rdi, qword [rsi+8]
00000000000103ca         movabs     rcx, 0x20c49ba5e353f7cf
00000000000103d4         lea        r13, qword [rsp+0x138+var_108]
00000000000103d9         mov        qword [rsp+0x138+var_108], rax
00000000000103de         mov        rax, rdi
00000000000103e1         sar        rdi, 0x3f
00000000000103e5         imul       rcx
00000000000103e8         mov        rax, qword [rsi+0x10]
00000000000103ec         mov        rsi, qword [rsi+0x18]
00000000000103f0         mov        qword [rsp+0x138+var_F8], rax
00000000000103f5         mov        rax, rsi
00000000000103f8         sar        rsi, 0x3f
00000000000103fc         sar        rdx, 0x7
0000000000010400         sub        rdx, rdi
0000000000010403         mov        qword [rsp+0x138+var_100], rdx
0000000000010408         imul       rcx
000000000001040b         mov        rcx, rdx
000000000001040e         sar        rcx, 0x7
0000000000010412         sub        rcx, rsi
0000000000010415         mov        qword [rsp+0x138+var_F0], rcx

                     loc_1041a:
000000000001041a         test       ebx, ebx                                    ; CODE XREF=fdutimens+867
000000000001041c         mov        rdx, r13
000000000001041f         js         loc_105f8

0000000000010425         xor        esi, esi                                    ; argument "__file" for method j_futimesat
0000000000010427         mov        edi, ebx                                    ; argument "__fd" for method j_futimesat
0000000000010429         call       j_futimesat                                 ; futimesat
000000000001042e         test       eax, eax
0000000000010430         mov        ebp, eax
0000000000010432         jne        loc_10630

0000000000010438         test       r13, r13
000000000001043b         je         loc_10607

0000000000010441         cmp        qword [r13+8], 0x7a11f
0000000000010449         setg       r12b
000000000001044d         cmp        qword [r13+0x18], 0x7a11f
0000000000010455         setg       r14b
0000000000010459         test       r12b, r12b
000000000001045c         jne        loc_10467

000000000001045e         test       r14b, r14b
0000000000010461         je         loc_10607

                     loc_10467:
0000000000010467         lea        rdx, qword [rsp+0x138+var_C8]               ; argument "__stat_buf" for method j___fxstat, CODE XREF=fdutimens+364
000000000001046c         mov        esi, ebx                                    ; argument "__fildes" for method j___fxstat
000000000001046e         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000010473         call       j___fxstat                                  ; __fxstat
0000000000010478         test       eax, eax
000000000001047a         jne        loc_10607

0000000000010480         mov        rdx, qword [rsp+0x138+var_70]
0000000000010488         sub        rdx, qword [r13+0x10]
000000000001048c         mov        rax, qword [rsp+0x138+var_80]
0000000000010494         sub        rax, qword [r13]
0000000000010498         movdqa     xmm0, xmmword [r13]
000000000001049e         cmp        rdx, 0x1
00000000000104a2         sete       dl
00000000000104a5         movaps     xmmword [rsp+0x138+var_E8], xmm0
00000000000104aa         and        r14d, edx
00000000000104ad         cmp        rax, 0x1
00000000000104b1         movdqa     xmm0, xmmword [r13+0x10]
00000000000104b7         movaps     xmmword [rsp+0x138+var_D8], xmm0
00000000000104bc         jne        loc_10710

00000000000104c2         test       r12b, r12b
00000000000104c5         je         loc_10710

00000000000104cb         cmp        qword [rsp+0x138+var_78], 0x0
00000000000104d4         jne        loc_10710

00000000000104da         test       r14b, r14b
00000000000104dd         mov        qword [rsp+0x138+var_E0], 0x0
00000000000104e6         je         loc_104f7

00000000000104e8         cmp        qword [rsp+0x138+var_68], 0x0
00000000000104f1         je         loc_10728

                     loc_104f7:
00000000000104f7         lea        rdx, qword [rsp+0x138+var_E8]               ; argument "__tvp" for method j_futimesat, CODE XREF=fdutimens+502, fdutimens+1089
00000000000104fc         xor        esi, esi                                    ; argument "__file" for method j_futimesat
00000000000104fe         mov        edi, ebx                                    ; argument "__fd" for method j_futimesat
0000000000010500         call       j_futimesat                                 ; futimesat

                     loc_10505:
0000000000010505         xor        ebp, ebp                                    ; CODE XREF=fdutimens+1059, fdutimens+1074
0000000000010507         jmp        loc_10607
000000000001050c         align      16

                     loc_10510:
0000000000010510         cmp        r13d, 0x3                                   ; CODE XREF=fdutimens+191
0000000000010514         je         loc_1053c

0000000000010516         test       ebx, ebx
0000000000010518         lea        rdx, qword [rsp+0x138+var_C8]
000000000001051d         js         loc_10660

0000000000010523         mov        esi, ebx                                    ; argument "__fildes" for method j___fxstat
0000000000010525         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
000000000001052a         call       j___fxstat                                  ; __fxstat
000000000001052f         test       eax, eax
0000000000010531         setne      al

                     loc_10534:
0000000000010534         test       al, al                                      ; CODE XREF=fdutimens+898
0000000000010536         jne        loc_10703

                     loc_1053c:
000000000001053c         cmp        qword [rsp+0x138+var_130], 0x0              ; CODE XREF=fdutimens+548
0000000000010542         je         loc_10650

0000000000010548         lea        rsi, qword [rsp+0x138+var_130]
000000000001054d         lea        rdi, qword [rsp+0x138+var_C8]
0000000000010552         xor        ebp, ebp
0000000000010554         call       update_timespec                             ; update_timespec
0000000000010559         test       al, al
000000000001055b         je         loc_103b5

0000000000010561         jmp        loc_10607
0000000000010566         align      16

                     loc_10570:
0000000000010570         test       ebx, ebx                                    ; CODE XREF=fdutimens+120
0000000000010572         lea        rdx, qword [rsp+0x138+var_C8]
0000000000010577         js         loc_10680

000000000001057d         mov        esi, ebx                                    ; argument "__fildes" for method j___fxstat
000000000001057f         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000010584         call       j___fxstat                                  ; __fxstat
0000000000010589         test       eax, eax
000000000001058b         setne      al

                     loc_1058e:
000000000001058e         test       al, al                                      ; CODE XREF=fdutimens+930
0000000000010590         jne        loc_10703

0000000000010596         mov        rsi, qword [rsp+0x138+var_130]
000000000001059b         cmp        qword [rsi+8], 0x3ffffffe
00000000000105a3         je         loc_106d0

00000000000105a9         cmp        qword [rsi+0x18], 0x3ffffffe
00000000000105b1         mov        r13d, 0x3
00000000000105b7         jne        loc_10373

00000000000105bd         mov        rax, qword [rsp+0x138+var_68]
00000000000105c5         mov        rdx, qword [rsp+0x138+var_70]
00000000000105cd         mov        qword [rsi+0x18], rax
00000000000105d1         mov        qword [rsi+0x10], rdx
00000000000105d5         jmp        loc_10373
00000000000105da         align      32

                     loc_105e0:
00000000000105e0         mov        qword [rsp+0x138+var_130], 0x0              ; CODE XREF=fdutimens+42
00000000000105e9         xor        r13d, r13d
00000000000105ec         jmp        loc_1034d
00000000000105f1         align      8

                     loc_105f8:
00000000000105f8         mov        rsi, r12                                    ; argument "__file" for method j_futimesat, CODE XREF=fdutimens+303
00000000000105fb         mov        edi, 0xffffff9c                             ; argument "__fd" for method j_futimesat
0000000000010600         call       j_futimesat                                 ; futimesat
0000000000010605         mov        ebp, eax

                     loc_10607:
0000000000010607         mov        rcx, qword [rsp+0x138+var_30]               ; CODE XREF=fdutimens+331, fdutimens+369, fdutimens+394, fdutimens+535, fdutimens+625, fdutimens+840, fdutimens+855, fdutimens+985, fdutimens+1048
000000000001060f         xor        rcx, qword [fs:0x28]
0000000000010618         mov        eax, ebp
000000000001061a         jne        loc_10736

0000000000010620         add        rsp, 0x110
0000000000010627         pop        rbx
0000000000010628         pop        rbp
0000000000010629         pop        r12
000000000001062b         pop        r13
000000000001062d         pop        r14
000000000001062f         ret
                        ; endp

                     loc_10630:
0000000000010630         test       r12, r12                                    ; CODE XREF=fdutimens+322
0000000000010633         mov        ebp, 0xffffffff
0000000000010638         je         loc_10607

000000000001063a         mov        rsi, r13                                    ; argument "__tvp" for method j_utimes
000000000001063d         mov        rdi, r12                                    ; argument "__file" for method j_utimes
0000000000010640         call       j_utimes                                    ; utimes
0000000000010645         mov        ebp, eax
0000000000010647         jmp        loc_10607
0000000000010649         align      16

                     loc_10650:
0000000000010650         xor        r13d, r13d                                  ; CODE XREF=fdutimens+205, fdutimens+594
0000000000010653         jmp        loc_1041a
0000000000010658         align      32

                     loc_10660:
0000000000010660         mov        rsi, r12                                    ; argument "__filename" for method j___xstat, CODE XREF=fdutimens+557
0000000000010663         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000010668         call       j___xstat                                   ; __xstat
000000000001066d         test       eax, eax
000000000001066f         setne      al
0000000000010672         jmp        loc_10534
0000000000010677         align      128

                     loc_10680:
0000000000010680         mov        rsi, r12                                    ; argument "__filename" for method j___xstat, CODE XREF=fdutimens+647
0000000000010683         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000010688         call       j___xstat                                   ; __xstat
000000000001068d         test       eax, eax
000000000001068f         setne      al
0000000000010692         jmp        loc_1058e
0000000000010697         align      32

                     loc_106a0:
00000000000106a0         xor        ecx, ecx                                    ; argument "__flags" for method j_utimensat, CODE XREF=fdutimens+133
00000000000106a2         mov        rdx, rsi                                    ; argument "__times" for method j_utimensat
00000000000106a5         mov        edi, 0xffffff9c                             ; argument "__fd" for method j_utimensat
00000000000106aa         mov        rsi, r12                                    ; argument "__path" for method j_utimensat
00000000000106ad         call       j_utimensat                                 ; utimensat
00000000000106b2         cmp        eax, 0x0
00000000000106b5         mov        ebp, eax
00000000000106b7         jg         loc_1038d

                     loc_106bd:
00000000000106bd         jne        loc_1073b                                   ; CODE XREF=fdutimens+151

                     loc_106bf:
00000000000106bf         mov        dword [utimensat_works_really], 0x1         ; utimensat_works_really, CODE XREF=fdutimens+1107
00000000000106c9         jmp        loc_10607
00000000000106ce         align      16

                     loc_106d0:
00000000000106d0         mov        rax, qword [rsp+0x138+var_78]               ; CODE XREF=fdutimens+691
00000000000106d8         mov        rdx, qword [rsp+0x138+var_80]
00000000000106e0         mov        r13d, 0x3
00000000000106e6         mov        qword [rsi], rdx
00000000000106e9         mov        qword [rsi+8], rax
00000000000106ed         jmp        loc_10373
00000000000106f2         align      8

                     loc_106f8:
00000000000106f8         call       j___errno_location                          ; __errno_location, CODE XREF=fdutimens+100
00000000000106fd         mov        dword [rax], 0x9

                     loc_10703:
0000000000010703         mov        ebp, 0xffffffff                             ; CODE XREF=fdutimens+87, fdutimens+582, fdutimens+672
0000000000010708         jmp        loc_10607
000000000001070d         align      16

                     loc_10710:
0000000000010710         test       r14b, r14b                                  ; CODE XREF=fdutimens+460, fdutimens+469, fdutimens+484
0000000000010713         je         loc_10505

0000000000010719         cmp        qword [rsp+0x138+var_68], 0x0
0000000000010722         jne        loc_10505

                     loc_10728:
0000000000010728         mov        qword [rsp+0x138+var_D0], 0x0               ; CODE XREF=fdutimens+513
0000000000010731         jmp        loc_104f7

                     loc_10736:
0000000000010736         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=fdutimens+810
                        ; endp

                     loc_1073b:
000000000001073b         call       j___errno_location                          ; __errno_location, CODE XREF=loc_106bd
0000000000010740         cmp        dword [rax], 0x26
0000000000010743         jne        loc_106bf

0000000000010749         jmp        loc_10398
000000000001074e         align      16                                          ; End of unwind block (FDE at 0x18154)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_C8: int8_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int8_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int64_t, -248
        ;    var_100: int64_t, -256
        ;    var_108: int64_t, -264
        ;    var_118: -280
        ;    var_128: int8_t, -296
        ;    var_130: int64_t, -304


                     utimens:
0000000000010750         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x1819c), CODE XREF=re_protect+235, copy_internal+9760
0000000000010753         mov        rsi, rdi
0000000000010756         mov        edi, 0xffffffff
000000000001075b         jmp        fdutimens                                   ; fdutimens


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_A0: int32_t, -160
        ;    var_B8: int8_t, -184
        ;    var_C8: -200
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224


                     lutimens:
0000000000010760         push       r12                                         ; End of unwind block (FDE at 0x1819c), Begin of unwind block (FDE at 0x181b0), CODE XREF=copy_internal+1655
0000000000010762         push       rbp
0000000000010763         mov        r12, rdi
0000000000010766         push       rbx
0000000000010767         sub        rsp, 0xd0
000000000001076e         mov        rax, qword [fs:0x28]
0000000000010777         mov        qword [rsp+0xe8+var_20], rax
000000000001077f         xor        eax, eax
0000000000010781         test       rsi, rsi
0000000000010784         je         loc_10880

000000000001078a         movdqu     xmm0, xmmword [rsi]
000000000001078e         lea        rdi, qword [rsp+0xe8+var_D8]
0000000000010793         movaps     xmmword [rsp+0xe8+var_D8], xmm0
0000000000010798         mov        qword [rsp+0xe8+var_E0], rdi
000000000001079d         movdqu     xmm0, xmmword [rsi+0x10]
00000000000107a2         movaps     xmmword [rsp+0xe8+var_C8], xmm0
00000000000107a7         call       validate_timespec                           ; validate_timespec
00000000000107ac         test       eax, eax
00000000000107ae         mov        ebx, eax
00000000000107b0         js         loc_108c0

00000000000107b6         mov        eax, dword [lutimensat_works_really]        ; lutimensat_works_really
00000000000107bc         test       eax, eax
00000000000107be         js         loc_107f6

00000000000107c0         cmp        ebx, 0x2
00000000000107c3         je         loc_108f0

00000000000107c9         mov        rdx, qword [rsp+0xe8+var_E0]

                     loc_107ce:
00000000000107ce         mov        ecx, 0x100                                  ; argument "__flags" for method j_utimensat, CODE XREF=lutimens+309, lutimens+450, lutimens+480, lutimens+561
00000000000107d3         mov        rsi, r12                                    ; argument "__path" for method j_utimensat
00000000000107d6         mov        edi, 0xffffff9c                             ; argument "__fd" for method j_utimensat
00000000000107db         call       j_utimensat                                 ; utimensat
00000000000107e0         cmp        eax, 0x0
00000000000107e3         mov        ebp, eax
00000000000107e5         jle        loc_108d0

00000000000107eb         call       j___errno_location                          ; __errno_location
00000000000107f0         mov        dword [rax], 0x26

                     loc_107f6:
00000000000107f6         test       ebx, ebx                                    ; CODE XREF=lutimens+94, lutimens+601
00000000000107f8         mov        dword [lutimensat_works_really], 0xffffffff ; lutimensat_works_really
0000000000010802         je         loc_108a5

0000000000010808         cmp        ebx, 0x3
000000000001080b         jne        loc_10948

0000000000010811         cmp        qword [rsp+0xe8+var_E0], 0x0
0000000000010817         je         loc_10830

                     loc_10819:
0000000000010819         lea        rsi, qword [rsp+0xe8+var_E0]                ; CODE XREF=lutimens+520
000000000001081e         lea        rdi, qword [rsp+0xe8+var_B8]
0000000000010823         xor        ebp, ebp
0000000000010825         call       update_timespec                             ; update_timespec
000000000001082a         test       al, al
000000000001082c         jne        loc_10858

000000000001082e         nop

                     loc_10830:
0000000000010830         mov        eax, dword [rsp+0xe8+var_A0]                ; CODE XREF=lutimens+183, lutimens+345, lutimens+526
0000000000010834         and        eax, 0xf000
0000000000010839         cmp        eax, 0xa000
000000000001083e         je         loc_10996

0000000000010844         mov        rdx, qword [rsp+0xe8+var_E0]
0000000000010849         mov        rsi, r12
000000000001084c         mov        edi, 0xffffffff
0000000000010851         call       fdutimens                                   ; fdutimens
0000000000010856         mov        ebp, eax

                     loc_10858:
0000000000010858         mov        rcx, qword [rsp+0xe8+var_20]                ; CODE XREF=lutimens+204, lutimens+357, lutimens+394
0000000000010860         xor        rcx, qword [fs:0x28]
0000000000010869         mov        eax, ebp
000000000001086b         jne        loc_109a6

0000000000010871         add        rsp, 0xd0
0000000000010878         pop        rbx
0000000000010879         pop        rbp
000000000001087a         pop        r12
000000000001087c         ret
                        ; endp
000000000001087d         align      128

                     loc_10880:
0000000000010880         mov        ecx, dword [lutimensat_works_really]        ; lutimensat_works_really, CODE XREF=lutimens+36
0000000000010886         xor        edx, edx
0000000000010888         xor        ebx, ebx
000000000001088a         mov        qword [rsp+0xe8+var_E0], 0x0
0000000000010893         test       ecx, ecx
0000000000010895         jns        loc_107ce

000000000001089b         mov        dword [lutimensat_works_really], 0xffffffff ; lutimensat_works_really

                     loc_108a5:
00000000000108a5         lea        rdx, qword [rsp+0xe8+var_B8]                ; argument "__stat_buf" for method j___lxstat, CODE XREF=lutimens+162
00000000000108aa         mov        rsi, r12                                    ; argument "__filename" for method j___lxstat
00000000000108ad         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
00000000000108b2         call       j___lxstat                                  ; __lxstat
00000000000108b7         test       eax, eax
00000000000108b9         je         loc_10830

00000000000108bf         nop

                     loc_108c0:
00000000000108c0         mov        ebp, 0xffffffff                             ; CODE XREF=lutimens+80, lutimens+420, lutimens+508, lutimens+577
00000000000108c5         jmp        loc_10858
00000000000108c7         align      16

                     loc_108d0:
00000000000108d0         jne        loc_109ab                                   ; CODE XREF=lutimens+133

                     loc_108d6:
00000000000108d6         mov        dword [utimensat_works_really], 0x1         ; utimensat_works_really, CODE XREF=lutimens+595
00000000000108e0         mov        dword [lutimensat_works_really], 0x1        ; lutimensat_works_really
00000000000108ea         jmp        loc_10858
00000000000108ef         align      16

                     loc_108f0:
00000000000108f0         lea        rdx, qword [rsp+0xe8+var_B8]                ; argument "__stat_buf" for method j___lxstat, CODE XREF=lutimens+99
00000000000108f5         mov        rsi, r12                                    ; argument "__filename" for method j___lxstat
00000000000108f8         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
00000000000108fd         call       j___lxstat                                  ; __lxstat
0000000000010902         test       eax, eax
0000000000010904         jne        loc_108c0

0000000000010906         mov        rdx, qword [rsp+0xe8+var_E0]
000000000001090b         cmp        qword [rdx+8], 0x3ffffffe
0000000000010913         je         loc_10978

0000000000010915         cmp        qword [rdx+0x18], 0x3ffffffe
000000000001091d         mov        ebx, 0x3
0000000000010922         jne        loc_107ce

0000000000010928         mov        rax, qword [rsp+0xe8+var_58]
0000000000010930         mov        rcx, qword [rsp+0xe8+var_60]
0000000000010938         mov        qword [rdx+0x18], rax
000000000001093c         mov        qword [rdx+0x10], rcx
0000000000010940         jmp        loc_107ce
0000000000010945         align      8

                     loc_10948:
0000000000010948         lea        rdx, qword [rsp+0xe8+var_B8]                ; argument "__stat_buf" for method j___lxstat, CODE XREF=lutimens+171
000000000001094d         mov        rsi, r12                                    ; argument "__filename" for method j___lxstat
0000000000010950         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000010955         call       j___lxstat                                  ; __lxstat
000000000001095a         test       eax, eax
000000000001095c         jne        loc_108c0

0000000000010962         cmp        qword [rsp+0xe8+var_E0], 0x0
0000000000010968         jne        loc_10819

000000000001096e         jmp        loc_10830
0000000000010973         align      8

                     loc_10978:
0000000000010978         mov        rax, qword [rsp+0xe8+var_68]                ; CODE XREF=lutimens+435
0000000000010980         mov        rcx, qword [rsp+0xe8+var_70]
0000000000010985         mov        ebx, 0x3
000000000001098a         mov        qword [rdx], rcx
000000000001098d         mov        qword [rdx+8], rax
0000000000010991         jmp        loc_107ce

                     loc_10996:
0000000000010996         call       j___errno_location                          ; __errno_location, CODE XREF=lutimens+222
000000000001099b         mov        dword [rax], 0x26
00000000000109a1         jmp        loc_108c0

                     loc_109a6:
00000000000109a6         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=lutimens+267
                        ; endp

                     loc_109ab:
00000000000109ab         call       j___errno_location                          ; __errno_location, CODE XREF=loc_108d0
00000000000109b0         cmp        dword [rax], 0x26
00000000000109b3         jne        loc_108d6

00000000000109b9         jmp        loc_107f6
00000000000109be         align      64                                          ; End of unwind block (FDE at 0x181b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
00000000000109c0         push       r15                                         ; Begin of unwind block (FDE at 0x181ec), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
00000000000109c2         push       r14
00000000000109c4         push       r13
00000000000109c6         push       r12
00000000000109c8         mov        r12, r9
00000000000109cb         push       rbp
00000000000109cc         push       rbx
00000000000109cd         mov        rbp, rdi
00000000000109d0         mov        rbx, r8
00000000000109d3         sub        rsp, 0x28
00000000000109d7         test       rsi, rsi
00000000000109da         je         loc_10af8

00000000000109e0         mov        r8, rdx
00000000000109e3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
00000000000109ea         mov        r9, rcx
00000000000109ed         xor        eax, eax
00000000000109ef         mov        rcx, rsi
00000000000109f2         mov        esi, 0x1
00000000000109f7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_109fc:
00000000000109fc         lea        rsi, qword [aSSn_158cb+7]                   ; argument "msgid" for method j_dcgettext, 0x158d2, CODE XREF=version_etc_arn+337
0000000000010a03         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000010a05         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000010a0a         call       j_dcgettext                                 ; dcgettext
0000000000010a0f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000010a16         mov        rcx, rax
0000000000010a19         mov        r8d, 0x7e3
0000000000010a1f         mov        esi, 0x1
0000000000010a24         mov        rdi, rbp
0000000000010a27         xor        eax, eax
0000000000010a29         call       j___fprintf_chk                             ; __fprintf_chk
0000000000010a2e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000010a35         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000010a37         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000010a3c         call       j_dcgettext                                 ; dcgettext
0000000000010a41         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000010a44         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000010a47         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000010a4c         cmp        r12, 0x9
0000000000010a50         ja         loc_10d90

0000000000010a56         lea        rdx, qword [switch_table_15bb8]             ; switch_table_15bb8
0000000000010a5d         movsxd     rax, dword [rdx+r12*4]
0000000000010a61         add        rax, rdx
0000000000010a64         jmp        rax                                         ; switch statement using table at 0x15bb8, with 10 cases, 0x10a70,0x10ae6,0x10b20,0x10b78,0x10bb8,0x10c00,0x10c50,0x10ca8,0x10cd8,0x10d40
0000000000010a66         align      16

                     loc_10a70:
0000000000010a70         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000010a74         mov        rax, qword [rbx+0x10]
0000000000010a78         lea        rsi, qword [aWrittenBySSSns_15ac8]          ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000010a7f         mov        r8, qword [rbx+8]
0000000000010a83         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000010a88         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000010a8a         mov        r13, qword [rbx+0x30]
0000000000010a8e         mov        r12, qword [rbx+0x28]
0000000000010a92         mov        qword [rsp+0x58+var_48], r9
0000000000010a97         mov        r15, qword [rbx+0x20]
0000000000010a9b         mov        r14, qword [rbx+0x18]
0000000000010a9f         mov        qword [rsp+0x58+var_58], rax
0000000000010aa3         mov        qword [rsp+0x58+var_50], r8
0000000000010aa8         mov        rbx, qword [rbx]
0000000000010aab         call       j_dcgettext                                 ; dcgettext
0000000000010ab0         sub        rsp, 0x8

                     loc_10ab4:
0000000000010ab4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000010ab9         mov        rdx, rax
0000000000010abc         mov        rcx, rbx
0000000000010abf         mov        esi, 0x1
0000000000010ac4         mov        rdi, rbp
0000000000010ac7         xor        eax, eax
0000000000010ac9         push       r9
0000000000010acb         push       r13
0000000000010acd         push       r12
0000000000010acf         push       r15
0000000000010ad1         push       r14
0000000000010ad3         mov        r9, qword [rsp+0x88+var_58]
0000000000010ad8         mov        r8, qword [rsp+0x88+var_50]
0000000000010add         call       j___fprintf_chk                             ; __fprintf_chk
0000000000010ae2         add        rsp, 0x30

                     loc_10ae6:
0000000000010ae6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
0000000000010aea         pop        rbx
0000000000010aeb         pop        rbp
0000000000010aec         pop        r12
0000000000010aee         pop        r13
0000000000010af0         pop        r14
0000000000010af2         pop        r15
0000000000010af4         ret
                        ; endp
0000000000010af5         align      8

                     loc_10af8:
0000000000010af8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
0000000000010afb         mov        rcx, rdx
0000000000010afe         lea        rdx, qword [aSSn_158cb]                     ; "%s %s\\n"
0000000000010b05         mov        esi, 0x1
0000000000010b0a         xor        eax, eax
0000000000010b0c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000010b11         jmp        loc_109fc
0000000000010b16         align      32

                     loc_10b20:
0000000000010b20         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000010b24         mov        r9, qword [rbx+0x38]
0000000000010b28         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
0000000000010b2f         mov        rax, qword [rbx+0x10]
0000000000010b33         mov        r8, qword [rbx+8]
0000000000010b37         mov        edx, 0x5
0000000000010b3c         mov        r13, qword [rbx+0x30]
0000000000010b40         mov        r12, qword [rbx+0x28]
0000000000010b44         mov        r15, qword [rbx+0x20]
0000000000010b48         mov        r14, qword [rbx+0x18]
0000000000010b4c         mov        rbx, qword [rbx]
0000000000010b4f         mov        qword [rsp+0x58+var_40], r10
0000000000010b54         mov        qword [rsp+0x58+var_48], r9
0000000000010b59         mov        qword [rsp+0x58+var_58], rax
0000000000010b5d         mov        qword [rsp+0x58+var_50], r8

                     loc_10b62:
0000000000010b62         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000010b64         call       j_dcgettext                                 ; dcgettext
0000000000010b69         mov        r10, qword [rsp+0x58+var_40]
0000000000010b6e         push       r10
0000000000010b70         jmp        loc_10ab4
0000000000010b75         align      8

                     loc_10b78:
0000000000010b78         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
0000000000010b7b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000010b82         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000010b87         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000010b89         call       j_dcgettext                                 ; dcgettext
0000000000010b8e         add        rsp, 0x28
0000000000010b92         mov        rcx, rbx
0000000000010b95         mov        rdi, rbp
0000000000010b98         pop        rbx
0000000000010b99         pop        rbp
0000000000010b9a         pop        r12
0000000000010b9c         pop        r13
0000000000010b9e         pop        r14
0000000000010ba0         pop        r15
0000000000010ba2         mov        rdx, rax
0000000000010ba5         mov        esi, 0x1
0000000000010baa         xor        eax, eax
0000000000010bac         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000010bb1         align      8

                     loc_10bb8:
0000000000010bb8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
0000000000010bbc         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000010bc3         mov        rbx, qword [rbx]
0000000000010bc6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000010bcb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000010bcd         call       j_dcgettext                                 ; dcgettext
0000000000010bd2         add        rsp, 0x28
0000000000010bd6         mov        r8, r12
0000000000010bd9         mov        rcx, rbx
0000000000010bdc         mov        rdi, rbp
0000000000010bdf         mov        rdx, rax
0000000000010be2         mov        esi, 0x1
0000000000010be7         pop        rbx
0000000000010be8         pop        rbp
0000000000010be9         pop        r12
0000000000010beb         pop        r13
0000000000010bed         pop        r14
0000000000010bef         pop        r15
0000000000010bf1         xor        eax, eax
0000000000010bf3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000010bf8         align      1024

                     loc_10c00:
0000000000010c00         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000010c04         mov        r12, qword [rbx+8]
0000000000010c08         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
0000000000010c0f         mov        rbx, qword [rbx]
0000000000010c12         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000010c17         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000010c19         call       j_dcgettext                                 ; dcgettext
0000000000010c1e         add        rsp, 0x28
0000000000010c22         mov        r9, r13
0000000000010c25         mov        r8, r12
0000000000010c28         mov        rcx, rbx
0000000000010c2b         mov        rdi, rbp
0000000000010c2e         mov        rdx, rax
0000000000010c31         pop        rbx
0000000000010c32         pop        rbp
0000000000010c33         pop        r12
0000000000010c35         pop        r13
0000000000010c37         pop        r14
0000000000010c39         pop        r15
0000000000010c3b         mov        esi, 0x1
0000000000010c40         xor        eax, eax
0000000000010c42         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000010c47         align      16

                     loc_10c50:
0000000000010c50         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000010c57         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000010c5c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000010c5e         mov        r14, qword [rbx+0x18]
0000000000010c62         mov        r13, qword [rbx+0x10]
0000000000010c66         mov        r12, qword [rbx+8]
0000000000010c6a         mov        rbx, qword [rbx]
0000000000010c6d         call       j_dcgettext                                 ; dcgettext
0000000000010c72         sub        rsp, 0x8

                     loc_10c76:
0000000000010c76         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000010c78         mov        rdx, rax
0000000000010c7b         mov        r9, r13
0000000000010c7e         mov        r8, r12
0000000000010c81         mov        rcx, rbx
0000000000010c84         mov        rdi, rbp
0000000000010c87         mov        esi, 0x1
0000000000010c8c         xor        eax, eax
0000000000010c8e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000010c93         pop        rax
0000000000010c94         pop        rdx
0000000000010c95         add        rsp, 0x28
0000000000010c99         pop        rbx
0000000000010c9a         pop        rbp
0000000000010c9b         pop        r12
0000000000010c9d         pop        r13
0000000000010c9f         pop        r14
0000000000010ca1         pop        r15
0000000000010ca3         ret
                        ; endp
0000000000010ca4         align      8

                     loc_10ca8:
0000000000010ca8         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
0000000000010cac         lea        rsi, qword [aWrittenBySSSns_15a48]          ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000010cb3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000010cb8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000010cba         mov        r14, qword [rbx+0x18]
0000000000010cbe         mov        r13, qword [rbx+0x10]
0000000000010cc2         mov        r12, qword [rbx+8]
0000000000010cc6         mov        rbx, qword [rbx]
0000000000010cc9         call       j_dcgettext                                 ; dcgettext
0000000000010cce         push       r15
0000000000010cd0         jmp        loc_10c76
0000000000010cd2         align      8

                     loc_10cd8:
0000000000010cd8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
0000000000010cdc         mov        r12, qword [rbx+0x28]
0000000000010ce0         lea        rsi, qword [aWrittenBySSSns_15a70]          ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000010ce7         mov        r15, qword [rbx+0x20]
0000000000010ceb         mov        r14, qword [rbx+0x18]
0000000000010cef         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000010cf4         mov        r13, qword [rbx+0x10]
0000000000010cf8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000010cfa         mov        rbx, qword [rbx]
0000000000010cfd         mov        qword [rsp+0x58+var_58], r8
0000000000010d01         call       j_dcgettext                                 ; dcgettext
0000000000010d06         sub        rsp, 0x8
0000000000010d0a         mov        r9, r13
0000000000010d0d         push       r12
0000000000010d0f         push       r15
0000000000010d11         push       r14

                     loc_10d13:
0000000000010d13         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000010d18         mov        rcx, rbx
0000000000010d1b         mov        rdx, rax
0000000000010d1e         mov        rdi, rbp
0000000000010d21         mov        esi, 0x1
0000000000010d26         xor        eax, eax
0000000000010d28         call       j___fprintf_chk                             ; __fprintf_chk
0000000000010d2d         add        rsp, 0x20
0000000000010d31         add        rsp, 0x28
0000000000010d35         pop        rbx
0000000000010d36         pop        rbp
0000000000010d37         pop        r12
0000000000010d39         pop        r13
0000000000010d3b         pop        r14
0000000000010d3d         pop        r15
0000000000010d3f         ret
                        ; endp

                     loc_10d40:
0000000000010d40         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000010d44         mov        r13, qword [rbx+0x30]
0000000000010d48         lea        rsi, qword [aWrittenBySSSns_15a98]          ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000010d4f         mov        r12, qword [rbx+0x28]
0000000000010d53         mov        r15, qword [rbx+0x20]
0000000000010d57         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000010d5c         mov        r14, qword [rbx+0x18]
0000000000010d60         mov        r8, qword [rbx+8]
0000000000010d64         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000010d66         mov        qword [rsp+0x58+var_50], r9
0000000000010d6b         mov        rbx, qword [rbx]
0000000000010d6e         mov        qword [rsp+0x58+var_58], r8
0000000000010d72         call       j_dcgettext                                 ; dcgettext
0000000000010d77         push       r13
0000000000010d79         push       r12
0000000000010d7b         push       r15
0000000000010d7d         push       r14
0000000000010d7f         mov        r9, qword [rsp+0x78+var_50]
0000000000010d84         jmp        loc_10d13
0000000000010d86         align      16

                     loc_10d90:
0000000000010d90         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000010d94         mov        r9, qword [rbx+0x38]
0000000000010d98         mov        edx, 0x5
0000000000010d9d         mov        rax, qword [rbx+0x10]
0000000000010da1         mov        r8, qword [rbx+8]
0000000000010da5         lea        rsi, qword [aWrittenBySSSns_15b30]          ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000010dac         mov        r13, qword [rbx+0x30]
0000000000010db0         mov        r12, qword [rbx+0x28]
0000000000010db4         mov        r15, qword [rbx+0x20]
0000000000010db8         mov        r14, qword [rbx+0x18]
0000000000010dbc         mov        qword [rsp+0x58+var_40], r10
0000000000010dc1         mov        qword [rsp+0x58+var_48], r9
0000000000010dc6         mov        qword [rsp+0x58+var_58], rax
0000000000010dca         mov        qword [rsp+0x58+var_50], r8
0000000000010dcf         mov        rbx, qword [rbx]
0000000000010dd2         jmp        loc_10b62
0000000000010dd7         align      32                                          ; End of unwind block (FDE at 0x181ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000010de0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x18300)
0000000000010de3         cmp        qword [r8], 0x0
0000000000010de7         je         j_version_etc_arn                           ; version_etc_arn

0000000000010de9         nop        dword [rax]

                     loc_10df0:
0000000000010df0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000010df4         cmp        qword [r8+r9*8], 0x0
0000000000010df9         jne        loc_10df0

                     j_version_etc_arn:        // version_etc_arn
0000000000010dfb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000010e00         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x18300), Begin of unwind block (FDE at 0x18314)
0000000000010e04         mov        r10, r8
0000000000010e07         xor        r9d, r9d
0000000000010e0a         mov        rax, qword [fs:0x28]
0000000000010e13         mov        qword [rsp+0x68+var_10], rax
0000000000010e18         xor        eax, eax
0000000000010e1a         mov        r8, rsp
0000000000010e1d         nop        dword [rax]

                     loc_10e20:
0000000000010e20         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000010e23         cmp        eax, 0x2f
0000000000010e26         ja         loc_10e6a

0000000000010e28         mov        r11d, eax
0000000000010e2b         add        r11, qword [r10+0x10]
0000000000010e2f         add        eax, 0x8
0000000000010e32         mov        dword [r10], eax

                     loc_10e35:
0000000000010e35         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000010e38         test       rax, rax
0000000000010e3b         mov        qword [r8+r9*8], rax
0000000000010e3f         je         loc_10e4b

0000000000010e41         add        r9, 0x1
0000000000010e45         cmp        r9, 0xa
0000000000010e49         jne        loc_10e20

                     loc_10e4b:
0000000000010e4b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000010e50         mov        rax, qword [rsp+0x68+var_10]
0000000000010e55         xor        rax, qword [fs:0x28]
0000000000010e5e         jne        loc_10e65

0000000000010e60         add        rsp, 0x68
0000000000010e64         ret
                        ; endp

                     loc_10e65:
0000000000010e65         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_10e6a:
0000000000010e6a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000010e6e         lea        rax, qword [r11+8]
0000000000010e72         mov        qword [r10+8], rax
0000000000010e76         jmp        loc_10e35
0000000000010e78         align      128                                         ; End of unwind block (FDE at 0x18314)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000010e80         push       rbp                                         ; Begin of unwind block (FDE at 0x18330), CODE XREF=main+847
0000000000010e81         push       rbx
0000000000010e82         mov        r10d, 0x20
0000000000010e88         xor        r11d, r11d
0000000000010e8b         sub        rsp, 0xb8
0000000000010e92         mov        rax, qword [fs:0x28]
0000000000010e9b         mov        qword [rsp+0xc8+var_50], rax
0000000000010ea0         xor        eax, eax
0000000000010ea2         lea        rax, qword [rsp+0xc8+arg_0]
0000000000010eaa         mov        qword [rsp+0xc8+var_28], r8
0000000000010eb2         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000010eba         lea        r8, qword [rsp+0xc8+var_A8]
0000000000010ebf         mov        qword [rsp+0xc8+var_20], r9
0000000000010ec7         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000010ecf         mov        qword [rsp+0xc8+var_B8], rax
0000000000010ed4         lea        rax, qword [rsp+0xc8+var_48]
0000000000010edc         xor        r9d, r9d
0000000000010edf         mov        qword [rsp+0xc8+var_B0], rax
0000000000010ee4         mov        rbp, rax
0000000000010ee7         nop        word [rax+rax]

                     loc_10ef0:
0000000000010ef0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000010ef4         ja         loc_10f4c

0000000000010ef6         mov        eax, r10d
0000000000010ef9         mov        r11d, 0x1
0000000000010eff         add        r10d, 0x8
0000000000010f03         add        rax, rbp

                     loc_10f06:
0000000000010f06         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000010f09         test       rax, rax
0000000000010f0c         mov        qword [r8+r9*8], rax
0000000000010f10         je         loc_10f1c

0000000000010f12         add        r9, 0x1
0000000000010f16         cmp        r9, 0xa
0000000000010f1a         jne        loc_10ef0

                     loc_10f1c:
0000000000010f1c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000010f1f         jne        loc_10f45

                     loc_10f21:
0000000000010f21         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000010f26         mov        rax, qword [rsp+0xc8+var_50]
0000000000010f2b         xor        rax, qword [fs:0x28]
0000000000010f34         jne        loc_10f40

0000000000010f36         add        rsp, 0xb8
0000000000010f3d         pop        rbx
0000000000010f3e         pop        rbp
0000000000010f3f         ret
                        ; endp

                     loc_10f40:
0000000000010f40         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_10f45:
0000000000010f45         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000010f4a         jmp        loc_10f21

                     loc_10f4c:
0000000000010f4c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000010f4f         add        rbx, 0x8
0000000000010f53         jmp        loc_10f06
0000000000010f55         align      32                                          ; End of unwind block (FDE at 0x18330)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000010f60         push       rbx                                         ; Begin of unwind block (FDE at 0x1835c)
0000000000010f61         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000010f68         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000010f6d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000010f6f         call       j_dcgettext                                 ; dcgettext
0000000000010f74         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000010f7b         mov        rsi, rax
0000000000010f7e         mov        edi, 0x1
0000000000010f83         xor        eax, eax
0000000000010f85         call       j___printf_chk                              ; __printf_chk
0000000000010f8a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000010f91         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000010f96         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000010f98         call       j_dcgettext                                 ; dcgettext
0000000000010f9d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000010fa4         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x129be
0000000000010fab         mov        rsi, rax
0000000000010fae         mov        edi, 0x1
0000000000010fb3         xor        eax, eax
0000000000010fb5         call       j___printf_chk                              ; __printf_chk
0000000000010fba         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000010fc1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000010fc8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000010fca         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000010fcf         call       j_dcgettext                                 ; dcgettext
0000000000010fd4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000010fd7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000010fda         pop        rbx
0000000000010fdb         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     can_write_any_file:
0000000000010fe0         cmp        byte [initialized.3064], 0x0                ; End of unwind block (FDE at 0x1835c), Begin of unwind block (FDE at 0x1837c), initialized.3064, CODE XREF=writable_destination+18
0000000000010fe7         je         loc_10ff8

0000000000010fe9         movzx      eax, byte [can_write.3065]                  ; can_write.3065
0000000000010ff0         ret
                        ; endp
0000000000010ff1         align      8

                     loc_10ff8:
0000000000010ff8         sub        rsp, 0x8                                    ; CODE XREF=can_write_any_file+7
0000000000010ffc         call       j_geteuid                                   ; geteuid
0000000000011001         test       eax, eax
0000000000011003         mov        byte [initialized.3064], 0x1                ; initialized.3064
000000000001100a         sete       al
000000000001100d         mov        byte [can_write.3065], al                   ; can_write.3065
0000000000011013         add        rsp, 0x8
0000000000011017         ret
                        ; endp
0000000000011018         align      32                                          ; End of unwind block (FDE at 0x1837c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000011020         push       rbx                                         ; Begin of unwind block (FDE at 0x18394), CODE XREF=make_dir_parents_private+502, copy_internal+10374, copy_internal+12347, copy_internal+15900, copy_internal+16009, remember_copied+24, record_file+29, quotearg_n_options+295, quotearg_alloc_mem+129, streamsavedir+323, streamsavedir+409
0000000000011021         mov        rbx, rdi
0000000000011024         call       j_malloc                                    ; malloc
0000000000011029         test       rax, rax
000000000001102c         jne        loc_11033

000000000001102e         test       rbx, rbx
0000000000011031         jne        loc_11035

                     loc_11033:
0000000000011033         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000011034         ret
                        ; endp

                     loc_11035:
0000000000011035         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1103a:
000000000001103a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x18394)
                     xnmalloc:
0000000000011040         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x183b0)
0000000000011043         mul        rsi
0000000000011046         mov        rdi, rax
0000000000011049         seto       al
000000000001104c         test       rdi, rdi
000000000001104f         js         loc_1105b

0000000000011051         movzx      eax, al
0000000000011054         test       rax, rax
0000000000011057         jne        loc_1105b

0000000000011059         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_1105b:
000000000001105b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000001105f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_11064:
0000000000011064         nop                                                    ; End of unwind block (FDE at 0x183b0)
0000000000011066         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000011070         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x183c4)
                        ; endp
0000000000011072         align      128                                         ; End of unwind block (FDE at 0x183c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000011080         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x183d8), CODE XREF=extent_scan_read+224, quotearg_n_options+110, quotearg_n_options+386, streamsavedir+605, streamsavedir+703, streamsavedir+735, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000011083         push       rbx
0000000000011084         mov        rbx, rsi
0000000000011087         jne        loc_1108e

0000000000011089         test       rdi, rdi
000000000001108c         jne        loc_110a8

                     loc_1108e:
000000000001108e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000011091         call       j_realloc                                   ; realloc
0000000000011096         test       rax, rax
0000000000011099         jne        loc_110a0

000000000001109b         test       rbx, rbx
000000000001109e         jne        loc_110b1

                     loc_110a0:
00000000000110a0         pop        rbx                                         ; CODE XREF=xrealloc+25
00000000000110a1         ret
                        ; endp
00000000000110a2         align      8

                     loc_110a8:
00000000000110a8         call       sub_2e10                                    ; sub_2e10, CODE XREF=xrealloc+12
00000000000110ad         xor        eax, eax
00000000000110af         pop        rbx
00000000000110b0         ret
                        ; endp

                     loc_110b1:
00000000000110b1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_110b6:
00000000000110b6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x183d8)
                     xnrealloc:
00000000000110c0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x183fc)
00000000000110c3         mul        rdx
00000000000110c6         mov        rsi, rax
00000000000110c9         seto       al
00000000000110cc         test       rsi, rsi
00000000000110cf         js         loc_110db

00000000000110d1         movzx      eax, al
00000000000110d4         test       rax, rax
00000000000110d7         jne        loc_110db

00000000000110d9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_110db:
00000000000110db         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
00000000000110df         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_110e4:
00000000000110e4         nop                                                    ; End of unwind block (FDE at 0x183fc)
00000000000110e6         nop        word [cs:rax+rax]
                     x2nrealloc:
00000000000110f0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x18410)
00000000000110f3         mov        r9, rdx
00000000000110f6         mov        rcx, qword [rsi]
00000000000110f9         je         loc_11130

00000000000110fb         xor        edx, edx
00000000000110fd         movabs     rax, 0x5555555555555554
0000000000011107         div        r9
000000000001110a         cmp        rax, rcx
000000000001110d         jbe        loc_1114b

000000000001110f         mov        rax, rcx
0000000000011112         shr        rax, 0x1
0000000000011115         lea        rcx, qword [rax+rcx+1]

                     loc_1111a:
000000000001111a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
000000000001111d         imul       rcx, r9
0000000000011121         mov        rsi, rcx
0000000000011124         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000011129         align      16

                     loc_11130:
0000000000011130         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000011133         je         loc_11158

                     loc_11135:
0000000000011135         mov        rax, rcx                                    ; CODE XREF=sub_11154+28
0000000000011138         mul        r9
000000000001113b         seto       dl
000000000001113e         test       rax, rax
0000000000011141         movzx      edx, dl
0000000000011144         js         loc_1114b

0000000000011146         test       rdx, rdx
0000000000011149         je         loc_1111a

                     loc_1114b:
000000000001114b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000001114f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_11154:
0000000000011154         nop        dword [rax]
                        ; endp

                     loc_11158:
0000000000011158         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000001115a         mov        eax, 0x80
000000000001115f         xor        r8d, r8d
0000000000011162         div        r9
0000000000011165         test       rax, rax
0000000000011168         sete       r8b
000000000001116c         lea        rcx, qword [r8+rax]
0000000000011170         jmp        loc_11135
0000000000011172         align      128                                         ; End of unwind block (FDE at 0x18410)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000011180         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x18428)
0000000000011183         mov        rax, qword [rsi]
0000000000011186         je         loc_111b0

0000000000011188         movabs     rdx, 0x5555555555555553
0000000000011192         cmp        rax, rdx
0000000000011195         ja         loc_111c1

0000000000011197         mov        rdx, rax
000000000001119a         shr        rdx, 0x1
000000000001119d         lea        rax, qword [rdx+rax+1]

                     loc_111a2:
00000000000111a2         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
00000000000111a5         mov        rsi, rax
00000000000111a8         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000111ad         align      16

                     loc_111b0:
00000000000111b0         test       rax, rax                                    ; CODE XREF=x2realloc+6
00000000000111b3         mov        edx, 0x80
00000000000111b8         cmove      rax, rdx
00000000000111bc         test       rax, rax
00000000000111bf         jns        loc_111a2

                     loc_111c1:
00000000000111c1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
00000000000111c5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_111ca:
00000000000111ca         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x18428)
                     xzalloc:
00000000000111d0         push       rbx                                         ; Begin of unwind block (FDE at 0x18440)
00000000000111d1         mov        rbx, rdi
00000000000111d4         call       xmalloc                                     ; xmalloc
00000000000111d9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
00000000000111dc         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000111de         mov        rdi, rax                                    ; argument "__s" for method j_memset
00000000000111e1         pop        rbx
00000000000111e2         jmp        j_memset                                    ; memset
                        ; endp
00000000000111e7         align      16                                          ; End of unwind block (FDE at 0x18440)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
00000000000111f0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x1845c)
00000000000111f3         sub        rsp, 0x8
00000000000111f7         mul        rsi
00000000000111fa         seto       dl
00000000000111fd         test       rax, rax
0000000000011200         js         loc_11219

0000000000011202         movzx      edx, dl
0000000000011205         test       rdx, rdx
0000000000011208         jne        loc_11219

000000000001120a         call       j_calloc                                    ; calloc
000000000001120f         test       rax, rax
0000000000011212         je         loc_11219

0000000000011214         add        rsp, 0x8
0000000000011218         ret
                        ; endp

                     loc_11219:
0000000000011219         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1121e:
000000000001121e         nop                                                    ; End of unwind block (FDE at 0x1845c)
                        ; endp

                     xmemdup:
0000000000011220         push       rbp                                         ; Begin of unwind block (FDE at 0x18478), CODE XREF=clone_quoting_options+40, xstrdup+17
0000000000011221         push       rbx
0000000000011222         mov        rbp, rdi
0000000000011225         mov        rdi, rsi
0000000000011228         mov        rbx, rsi
000000000001122b         sub        rsp, 0x8
000000000001122f         call       xmalloc                                     ; xmalloc
0000000000011234         add        rsp, 0x8
0000000000011238         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000001123b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000001123e         pop        rbx
000000000001123f         pop        rbp
0000000000011240         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000011243         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000011248         align      16                                          ; End of unwind block (FDE at 0x18478)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000011250         push       rbx                                         ; Begin of unwind block (FDE at 0x184a0), CODE XREF=decode_preserve_arg+36, do_copy+751, remember_copied+35, record_file+40, streamsavedir+230
0000000000011251         mov        rbx, rdi
0000000000011254         call       j_strlen                                    ; strlen
0000000000011259         mov        rdi, rbx
000000000001125c         lea        rsi, qword [rax+1]
0000000000011260         pop        rbx
0000000000011261         jmp        xmemdup                                     ; xmemdup
0000000000011263         align      16                                          ; End of unwind block (FDE at 0x184a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000011270         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x184bc), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=remember_copied+116, hash_init+54, extent_scan_read+771, find_backup_file_name+21, dir_name+19, record_file+130, file_name_concat+19, quotearg_n_options+422, streamsavedir+777, xmalloc+21, xnmalloc+31
0000000000011277         sub        rsp, 0x8
000000000001127b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000011280         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000011282         call       j_dcgettext                                 ; dcgettext
0000000000011287         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000001128d         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x1518d
0000000000011294         mov        rcx, rax
0000000000011297         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000011299         xor        eax, eax
000000000001129b         call       j_error                                     ; error
00000000000112a0         call       j_abort                                     ; abort
                        ; endp
00000000000112a5         align      16                                          ; End of unwind block (FDE at 0x184bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32


                     yesno:
00000000000112b0         push       rbx                                         ; Begin of unwind block (FDE at 0x184d4), CODE XREF=overwrite_ok.isra.12+270
00000000000112b1         mov        edx, 0xa                                    ; argument "__delimiter" for method j___getdelim
00000000000112b6         xor        ebx, ebx
00000000000112b8         sub        rsp, 0x20
00000000000112bc         mov        rcx, qword [stdin@@GLIBC_2.2.5]             ; argument "__stream" for method j___getdelim, stdin@@GLIBC_2.2.5
00000000000112c3         lea        rsi, qword [rsp+0x28+var_18]                ; argument "__n" for method j___getdelim
00000000000112c8         lea        rdi, qword [rsp+0x28+var_20]                ; argument "__lineptr" for method j___getdelim
00000000000112cd         mov        qword [rsp+0x28+var_20], 0x0
00000000000112d6         mov        rax, qword [fs:0x28]
00000000000112df         mov        qword [rsp+0x28+var_10], rax
00000000000112e4         xor        eax, eax
00000000000112e6         mov        qword [rsp+0x28+var_18], 0x0
00000000000112ef         call       j___getdelim                                ; __getdelim
00000000000112f4         test       rax, rax
00000000000112f7         jle        loc_11312

00000000000112f9         mov        rdi, qword [rsp+0x28+var_20]
00000000000112fe         lea        rax, qword [rdi+rax-1]
0000000000011303         cmp        byte [rax], 0xa
0000000000011306         je         loc_11338

                     loc_11308:
0000000000011308         call       j_rpmatch                                   ; rpmatch, CODE XREF=yesno+144
000000000001130d         test       eax, eax
000000000001130f         setg       bl

                     loc_11312:
0000000000011312         mov        rdi, qword [rsp+0x28+var_20]                ; CODE XREF=yesno+71
0000000000011317         call       sub_2e10                                    ; sub_2e10
000000000001131c         mov        rdx, qword [rsp+0x28+var_10]
0000000000011321         xor        rdx, qword [fs:0x28]
000000000001132a         mov        eax, ebx
000000000001132c         jne        loc_11342

000000000001132e         add        rsp, 0x20
0000000000011332         pop        rbx
0000000000011333         ret
                        ; endp
0000000000011334         align      8

                     loc_11338:
0000000000011338         mov        byte [rax], 0x0                             ; CODE XREF=yesno+86
000000000001133b         mov        rdi, qword [rsp+0x28+var_20]
0000000000011340         jmp        loc_11308

                     loc_11342:
0000000000011342         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=yesno+124
                        ; endp
0000000000011347         align      16                                          ; End of unwind block (FDE at 0x184d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000011350         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x184fc), CODE XREF=close_stdin+56, rpl_fclose+31
0000000000011353         push       rbx
0000000000011354         mov        rbx, rdi
0000000000011357         je         loc_1136a

0000000000011359         call       j___freading                                ; __freading
000000000001135e         test       eax, eax
0000000000011360         je         loc_1136a

0000000000011362         test       dword [rbx], 0x100
0000000000011368         jne        loc_11378

                     loc_1136a:
000000000001136a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000001136d         pop        rbx
000000000001136e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000011373         align      8

                     loc_11378:
0000000000011378         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000001137b         mov        edx, 0x1
0000000000011380         xor        esi, esi
0000000000011382         call       rpl_fseeko                                  ; rpl_fseeko
0000000000011387         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000001138a         pop        rbx
000000000001138b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     freadahead:
0000000000011390         xor        eax, eax                                    ; End of unwind block (FDE at 0x184fc), Begin of unwind block (FDE at 0x1851c), CODE XREF=close_stdin+14
0000000000011392         mov        rcx, qword [rdi+0x20]
0000000000011396         cmp        qword [rdi+0x28], rcx
000000000001139a         ja         loc_113b7

000000000001139c         mov        rax, qword [rdi+0x10]
00000000000113a0         sub        rax, qword [rdi+8]
00000000000113a4         test       dword [rdi], 0x100
00000000000113aa         je         loc_113b7

00000000000113ac         mov        rdx, qword [rdi+0x58]
00000000000113b0         sub        rdx, qword [rdi+0x48]
00000000000113b4         add        rax, rdx

                     loc_113b7:
00000000000113b7         ret                                                    ; CODE XREF=freadahead+10, freadahead+26
                        ; endp
00000000000113b9         align      64                                          ; End of unwind block (FDE at 0x1851c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
00000000000113c0         mov        rax, qword [rdi+8]                          ; Begin of unwind block (FDE at 0x18534), CODE XREF=close_stdin+194, rpl_fflush+50
00000000000113c4         cmp        qword [rdi+0x10], rax
00000000000113c8         je         loc_113d0

                     j_j_fseeko:        // fseeko
00000000000113ca         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
00000000000113cf         align      16

                     loc_113d0:
00000000000113d0         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
00000000000113d4         cmp        qword [rdi+0x28], rax
00000000000113d8         jne        j_j_fseeko                                  ; fseeko

00000000000113da         cmp        qword [rdi+0x48], 0x0
00000000000113df         jne        j_j_fseeko                                  ; fseeko

00000000000113e1         push       r12
00000000000113e3         push       rbp
00000000000113e4         mov        r12d, edx
00000000000113e7         push       rbx
00000000000113e8         mov        rbp, rsi
00000000000113eb         mov        rbx, rdi
00000000000113ee         call       j_fileno                                    ; fileno
00000000000113f3         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
00000000000113f6         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
00000000000113f9         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000113fb         call       j_lseek                                     ; lseek
0000000000011400         cmp        rax, 0xffffffffffffffff
0000000000011404         je         loc_11412

0000000000011406         and        dword [rbx], 0xffffffef
0000000000011409         mov        qword [rbx+0x90], rax
0000000000011410         xor        eax, eax

                     loc_11412:
0000000000011412         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000011413         pop        rbp
0000000000011414         pop        r12
0000000000011416         ret
                        ; endp
0000000000011417         align      32                                          ; End of unwind block (FDE at 0x18534)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000011420         push       r13                                         ; Begin of unwind block (FDE at 0x18564), CODE XREF=sub_d940+534
0000000000011422         push       r12
0000000000011424         mov        r13, rsi
0000000000011427         push       rbp
0000000000011428         push       rbx
0000000000011429         mov        rbx, rdi
000000000001142c         mov        r12, rdx
000000000001142f         sub        rsp, 0x18
0000000000011433         mov        rax, qword [fs:0x28]
000000000001143c         mov        qword [rsp+0x38+var_30], rax
0000000000011441         xor        eax, eax
0000000000011443         lea        rax, qword [rsp+0x38+var_34]
0000000000011448         test       rdi, rdi
000000000001144b         cmove      rbx, rax
000000000001144f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000011452         call       j_mbrtowc                                   ; mbrtowc
0000000000011457         cmp        rax, 0xfffffffffffffffd
000000000001145b         mov        rbp, rax
000000000001145e         jbe        loc_11480

0000000000011460         test       r12, r12
0000000000011463         je         loc_11480

0000000000011465         xor        edi, edi
0000000000011467         call       hard_locale                                 ; hard_locale
000000000001146c         test       al, al
000000000001146e         jne        loc_11480

0000000000011470         movzx      eax, byte [r13]
0000000000011475         mov        ebp, 0x1
000000000001147a         mov        dword [rbx], eax
000000000001147c         nop        dword [rax]

                     loc_11480:
0000000000011480         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000011485         xor        rdx, qword [fs:0x28]
000000000001148e         mov        rax, rbp
0000000000011491         jne        loc_1149e

0000000000011493         add        rsp, 0x18
0000000000011497         pop        rbx
0000000000011498         pop        rbp
0000000000011499         pop        r12
000000000001149b         pop        r13
000000000001149d         ret
                        ; endp

                     loc_1149e:
000000000001149e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
00000000000114a3         align      16                                          ; End of unwind block (FDE at 0x18564)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     free_permission_context:
00000000000114b0         ret                                                    ; Begin of unwind block (FDE at 0x185a4), CODE XREF=qcopy_acl+69, qset_acl+49
                        ; endp
00000000000114b2         align      64                                          ; End of unwind block (FDE at 0x185a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_permissions:
00000000000114c0         mov        dword [rcx], edx                            ; Begin of unwind block (FDE at 0x185bc), CODE XREF=qcopy_acl+41
00000000000114c2         xor        eax, eax
00000000000114c4         ret
                        ; endp
00000000000114c5         align      16                                          ; End of unwind block (FDE at 0x185bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     chmod_or_fchmod:
00000000000114d0         mov        eax, esi                                    ; Begin of unwind block (FDE at 0x185d4), CODE XREF=set_permissions+14
00000000000114d2         mov        esi, edx
00000000000114d4         cmp        eax, 0xffffffff
00000000000114d7         je         j_j_chmod                                   ; chmod

00000000000114d9         mov        edi, eax                                    ; argument "__fd" for method j_fchmod
00000000000114db         jmp        j_fchmod                                    ; fchmod
                        ; endp

                     j_j_chmod:        // chmod
00000000000114e0         jmp        j_chmod                                     ; chmod, CODE XREF=chmod_or_fchmod+7
                        ; endp
00000000000114e5         align      16                                          ; End of unwind block (FDE at 0x185d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_permissions:
00000000000114f0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x185e8), CODE XREF=qcopy_acl+59, qset_acl+39
00000000000114f4         mov        rax, rsi
00000000000114f7         mov        esi, edx
00000000000114f9         mov        edx, dword [rdi]
00000000000114fb         mov        rdi, rax
00000000000114fe         call       chmod_or_fchmod                             ; chmod_or_fchmod
0000000000011503         test       eax, eax
0000000000011505         setne      al
0000000000011508         add        rsp, 0x8
000000000001150c         movzx      eax, al
000000000001150f         neg        eax
0000000000011511         ret
                        ; endp
0000000000011512         align      32                                          ; End of unwind block (FDE at 0x185e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000011520         push       r12                                         ; Begin of unwind block (FDE at 0x18604), CODE XREF=close_stdin+31, close_stdin+76, close_stdin+214, close_stdout+13, close_stdout+51
0000000000011522         push       rbp
0000000000011523         mov        rbp, rdi
0000000000011526         push       rbx
0000000000011527         call       j___fpending                                ; __fpending
000000000001152c         mov        ebx, dword [rbp]
000000000001152f         mov        rdi, rbp
0000000000011532         mov        r12, rax
0000000000011535         call       rpl_fclose                                  ; rpl_fclose
000000000001153a         and        ebx, 0x20
000000000001153d         test       ebx, ebx
000000000001153f         jne        loc_11558

0000000000011541         test       eax, eax
0000000000011543         je         loc_1154f

0000000000011545         test       r12, r12
0000000000011548         mov        eax, 0xffffffff
000000000001154d         je         loc_11588

                     loc_1154f:
000000000001154f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000011550         pop        rbp
0000000000011551         pop        r12
0000000000011553         ret
                        ; endp
0000000000011554         align      8

                     loc_11558:
0000000000011558         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000001155a         jne        loc_11578

000000000001155c         call       j___errno_location                          ; __errno_location
0000000000011561         mov        dword [rax], 0x0
0000000000011567         mov        eax, 0xffffffff
000000000001156c         pop        rbx
000000000001156d         pop        rbp
000000000001156e         pop        r12
0000000000011570         ret
                        ; endp
0000000000011571         align      8

                     loc_11578:
0000000000011578         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000011579         mov        eax, 0xffffffff
000000000001157e         pop        rbp
000000000001157f         pop        r12
0000000000011581         ret
                        ; endp
0000000000011582         align      8

                     loc_11588:
0000000000011588         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000001158d         cmp        dword [rax], 0x9
0000000000011590         pop        rbx
0000000000011591         pop        rbp
0000000000011592         pop        r12
0000000000011594         setne      al
0000000000011597         movzx      eax, al
000000000001159a         neg        eax
000000000001159c         ret
                        ; endp
000000000001159d         align      32                                          ; End of unwind block (FDE at 0x18604)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     opendir_safer:
00000000000115a0         push       r14                                         ; Begin of unwind block (FDE at 0x18654), CODE XREF=savedir+6
00000000000115a2         push       r13
00000000000115a4         push       r12
00000000000115a6         push       rbp
00000000000115a7         push       rbx
00000000000115a8         call       j_opendir                                   ; opendir
00000000000115ad         test       rax, rax
00000000000115b0         mov        rbx, rax
00000000000115b3         je         loc_115c2

00000000000115b5         mov        rdi, rax                                    ; argument "__dirp" for method j_dirfd
00000000000115b8         call       j_dirfd                                     ; dirfd
00000000000115bd         cmp        eax, 0x2
00000000000115c0         jbe        loc_115d0

                     loc_115c2:
00000000000115c2         mov        rax, rbx                                    ; CODE XREF=opendir_safer+19
00000000000115c5         pop        rbx
00000000000115c6         pop        rbp
00000000000115c7         pop        r12
00000000000115c9         pop        r13
00000000000115cb         pop        r14
00000000000115cd         ret
                        ; endp
00000000000115ce         align      16

                     loc_115d0:
00000000000115d0         mov        edi, eax                                    ; CODE XREF=opendir_safer+32
00000000000115d2         mov        edx, 0x3
00000000000115d7         mov        esi, 0x406
00000000000115dc         xor        eax, eax
00000000000115de         call       rpl_fcntl                                   ; rpl_fcntl
00000000000115e3         mov        r12d, eax
00000000000115e6         call       j___errno_location                          ; __errno_location
00000000000115eb         test       r12d, r12d
00000000000115ee         mov        rbp, rax
00000000000115f1         jns        loc_11618

00000000000115f3         mov        r14d, dword [rax]
00000000000115f6         xor        r13d, r13d

                     loc_115f9:
00000000000115f9         mov        rdi, rbx                                    ; argument "__dirp" for method j_closedir, CODE XREF=opendir_safer+138, opendir_safer+148
00000000000115fc         mov        rbx, r13
00000000000115ff         call       j_closedir                                  ; closedir
0000000000011604         mov        dword [rbp], r14d
0000000000011608         mov        rax, rbx
000000000001160b         pop        rbx
000000000001160c         pop        rbp
000000000001160d         pop        r12
000000000001160f         pop        r13
0000000000011611         pop        r14
0000000000011613         ret
                        ; endp
0000000000011614         align      8

                     loc_11618:
0000000000011618         mov        edi, r12d                                   ; argument "__fd" for method j_fdopendir, CODE XREF=opendir_safer+81
000000000001161b         call       j_fdopendir                                 ; fdopendir
0000000000011620         test       rax, rax
0000000000011623         mov        r13, rax
0000000000011626         mov        r14d, dword [rbp]
000000000001162a         jne        loc_115f9

000000000001162c         mov        edi, r12d                                   ; argument "__fd" for method j_close
000000000001162f         call       j_close                                     ; close
0000000000011634         jmp        loc_115f9
0000000000011636         align      64                                          ; End of unwind block (FDE at 0x18654)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettime:
0000000000011640         mov        rsi, rdi                                    ; Begin of unwind block (FDE at 0x186a4), argument "__tp" for method j_clock_gettime, CODE XREF=update_timespec+76, update_timespec+176
0000000000011643         xor        edi, edi                                    ; argument "__clock_id" for method j_clock_gettime
0000000000011645         jmp        j_clock_gettime                             ; clock_gettime
                        ; endp
000000000001164a         align      16                                          ; End of unwind block (FDE at 0x186a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     current_timespec:
0000000000011650         sub        rsp, 0x28                                   ; Begin of unwind block (FDE at 0x186b8)
0000000000011654         xor        edi, edi                                    ; argument "__clock_id" for method j_clock_gettime
0000000000011656         mov        rsi, rsp                                    ; argument "__tp" for method j_clock_gettime
0000000000011659         mov        rax, qword [fs:0x28]
0000000000011662         mov        qword [rsp+0x28+var_10], rax
0000000000011667         xor        eax, eax
0000000000011669         call       j_clock_gettime                             ; clock_gettime
000000000001166e         mov        rcx, qword [rsp+0x28+var_10]
0000000000011673         xor        rcx, qword [fs:0x28]
000000000001167c         mov        rax, qword [rsp+0x28+var_28]
0000000000011680         mov        rdx, qword [rsp+0x28+var_20]
0000000000011685         jne        loc_1168c

0000000000011687         add        rsp, 0x28
000000000001168b         ret
                        ; endp

                     loc_1168c:
000000000001168c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=current_timespec+53
                        ; endp
0000000000011691         align      32                                          ; End of unwind block (FDE at 0x186b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
00000000000116a0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x186d4), CODE XREF=rpl_mbrtowc+71
00000000000116a4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000116a6         call       j_setlocale                                 ; setlocale
00000000000116ab         mov        rdx, rax
00000000000116ae         mov        eax, 0x1
00000000000116b3         test       rdx, rdx
00000000000116b6         je         loc_116d5

00000000000116b8         lea        rdi, qword [aMemoryExhauste+17]             ; 0x15c20
00000000000116bf         mov        ecx, 0x2
00000000000116c4         mov        rsi, rdx
00000000000116c7         rep  cmpsb byte [rsi], byte [rdi]
00000000000116c9         seta       cl
00000000000116cc         sbb        cl, 0x0
00000000000116cf         xor        eax, eax
00000000000116d1         test       cl, cl
00000000000116d3         jne        loc_116e0

                     loc_116d5:
00000000000116d5         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
00000000000116d9         ret
                        ; endp
00000000000116da         align      32

                     loc_116e0:
00000000000116e0         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
00000000000116e7         mov        ecx, 0x6
00000000000116ec         mov        rsi, rdx
00000000000116ef         rep  cmpsb byte [rsi], byte [rdi]
00000000000116f1         seta       al
00000000000116f4         sbb        al, 0x0
00000000000116f6         test       al, al
00000000000116f8         setne      al
00000000000116fb         add        rsp, 0x8
00000000000116ff         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_pjw:
0000000000011700         movsx      rcx, byte [rdi]                             ; End of unwind block (FDE at 0x186d4), Begin of unwind block (FDE at 0x186f4), CODE XREF=triple_hash+15
0000000000011704         test       cl, cl
0000000000011706         je         loc_11730

0000000000011708         xor        eax, eax
000000000001170a         nop        word [rax+rax]

                     loc_11710:
0000000000011710         rol        rax, 0x9                                    ; CODE XREF=hash_pjw+33
0000000000011714         add        rdi, 0x1
0000000000011718         add        rax, rcx
000000000001171b         movsx      rcx, byte [rdi]
000000000001171f         test       cl, cl
0000000000011721         jne        loc_11710

0000000000011723         xor        edx, edx
0000000000011725         div        rsi
0000000000011728         mov        rax, rdx
000000000001172b         ret
                        ; endp
000000000001172c         align      16

                     loc_11730:
0000000000011730         xor        edx, edx                                    ; CODE XREF=hash_pjw+6
0000000000011732         mov        rax, rdx
0000000000011735         ret
                        ; endp
0000000000011736         align      64                                          ; End of unwind block (FDE at 0x186f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000011740         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x1870c), CODE XREF=gettext_quote.part.1+11
0000000000011744         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000011749         call       j_nl_langinfo                               ; nl_langinfo
000000000001174e         test       rax, rax
0000000000011751         je         loc_11770

0000000000011753         cmp        byte [rax], 0x0
0000000000011756         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000001175d         cmove      rax, rdx
0000000000011761         add        rsp, 0x8
0000000000011765         ret
                        ; endp
0000000000011766         align      16

                     loc_11770:
0000000000011770         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000011777         add        rsp, 0x8
000000000001177b         ret
                        ; endp
000000000001177c         align      128                                         ; End of unwind block (FDE at 0x1870c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_38: int8_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int32_t, -88


                     openat_safer:
0000000000011780         sub        rsp, 0x58                                   ; Begin of unwind block (FDE at 0x1872c), CODE XREF=opendirat+21
0000000000011784         mov        qword [rsp+0x58+var_20], rcx
0000000000011789         xor        ecx, ecx
000000000001178b         mov        rax, qword [fs:0x28]
0000000000011794         mov        qword [rsp+0x58+var_40], rax
0000000000011799         xor        eax, eax
000000000001179b         test       dl, 0x40
000000000001179e         jne        loc_117c8

                     loc_117a0:
00000000000117a0         xor        eax, eax                                    ; CODE XREF=openat_safer+103
00000000000117a2         call       j_openat                                    ; openat
00000000000117a7         mov        edi, eax
00000000000117a9         call       fd_safer                                    ; fd_safer
00000000000117ae         mov        rsi, qword [rsp+0x58+var_40]
00000000000117b3         xor        rsi, qword [fs:0x28]
00000000000117bc         jne        loc_117e9

00000000000117be         add        rsp, 0x58
00000000000117c2         ret
                        ; endp
00000000000117c3         align      8

                     loc_117c8:
00000000000117c8         lea        rax, qword [rsp+0x58+arg_0]                 ; CODE XREF=openat_safer+30
00000000000117cd         mov        dword [rsp+0x58+var_58], 0x18
00000000000117d4         mov        ecx, dword [rsp+0x58+var_20]
00000000000117d8         mov        qword [rsp+0x58+var_50], rax
00000000000117dd         lea        rax, qword [rsp+0x58+var_38]
00000000000117e2         mov        qword [rsp+0x58+var_48], rax
00000000000117e7         jmp        loc_117a0

                     loc_117e9:
00000000000117e9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=openat_safer+60
                        ; endp
00000000000117ee         align      16                                          ; End of unwind block (FDE at 0x1872c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_new:
00000000000117f0         push       rbx                                         ; Begin of unwind block (FDE at 0x1874c)
00000000000117f1         mov        rbx, rdi
00000000000117f4         mov        edi, 0x18
00000000000117f9         call       xmalloc                                     ; xmalloc
00000000000117fe         mov        qword [rax], rbx
0000000000011801         mov        qword [rax+0x10], 0x0
0000000000011809         mov        qword [rax+8], 0x0
0000000000011811         pop        rbx
0000000000011812         ret
                        ; endp
0000000000011813         align      32                                          ; End of unwind block (FDE at 0x1874c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_all_new:
0000000000011820         push       rbx                                         ; Begin of unwind block (FDE at 0x18768), CODE XREF=try_tempname_len+123
0000000000011821         call       randread_new                                ; randread_new
0000000000011826         test       rax, rax
0000000000011829         je         loc_11850

000000000001182b         mov        rbx, rax
000000000001182e         mov        edi, 0x18
0000000000011833         call       xmalloc                                     ; xmalloc
0000000000011838         mov        qword [rax], rbx
000000000001183b         mov        qword [rax+0x10], 0x0
0000000000011843         mov        qword [rax+8], 0x0
000000000001184b         pop        rbx
000000000001184c         ret
                        ; endp
000000000001184d         align      16

                     loc_11850:
0000000000011850         xor        eax, eax                                    ; CODE XREF=randint_all_new+9
0000000000011852         pop        rbx
0000000000011853         ret
                        ; endp
0000000000011854         align      32                                          ; End of unwind block (FDE at 0x18768)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_get_source:
0000000000011860         mov        rax, qword [rdi]                            ; Begin of unwind block (FDE at 0x18788)
0000000000011863         ret
                        ; endp
0000000000011864         align      16                                          ; End of unwind block (FDE at 0x18788)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     randint_genmax:
0000000000011870         push       r15                                         ; Begin of unwind block (FDE at 0x1879c), CODE XREF=try_tempname_len+196
0000000000011872         push       r14
0000000000011874         lea        r15, qword [rsi+1]
0000000000011878         push       r13
000000000001187a         push       r12
000000000001187c         mov        r13, rdi
000000000001187f         push       rbp
0000000000011880         push       rbx
0000000000011881         mov        r14, rsi
0000000000011884         sub        rsp, 0x28
0000000000011888         mov        rbp, qword [rdi+8]
000000000001188c         mov        rbx, qword [rdi+0x10]
0000000000011890         mov        rax, qword [fs:0x28]
0000000000011899         mov        qword [rsp+0x58+var_40], rax
000000000001189e         xor        eax, eax
00000000000118a0         mov        rax, qword [rdi]
00000000000118a3         lea        r12, qword [rsp+0x58+var_48]
00000000000118a8         mov        qword [rsp+0x58+var_50], rax
00000000000118ad         jmp        loc_118e5
00000000000118af         align      16

                     loc_118b0:
00000000000118b0         cmp        rbx, r14                                    ; CODE XREF=randint_genmax+120
00000000000118b3         je         loc_1193f

                     loc_118b9:
00000000000118b9         mov        rax, rbx                                    ; CODE XREF=randint_genmax+201
00000000000118bc         xor        edx, edx
00000000000118be         sub        rax, r14
00000000000118c1         div        r15
00000000000118c4         sub        rbx, rdx
00000000000118c7         mov        rdi, rdx
00000000000118ca         mov        rsi, rax
00000000000118cd         xor        edx, edx
00000000000118cf         mov        rax, rbp
00000000000118d2         div        r15
00000000000118d5         cmp        rbp, rbx
00000000000118d8         jbe        loc_11978

00000000000118de         lea        rbx, qword [rdi-1]
00000000000118e2         mov        rbp, rdx

                     loc_118e5:
00000000000118e5         cmp        rbx, r14                                    ; CODE XREF=randint_genmax+61
00000000000118e8         jae        loc_118b0

00000000000118ea         mov        rax, rbx
00000000000118ed         xor        edx, edx
00000000000118ef         nop

                     loc_118f0:
00000000000118f0         shl        rax, 0x8                                    ; CODE XREF=randint_genmax+145
00000000000118f4         add        rdx, 0x1
00000000000118f8         add        rax, 0xff
00000000000118fe         cmp        r14, rax
0000000000011901         ja         loc_118f0

0000000000011903         mov        rdi, qword [rsp+0x58+var_50]
0000000000011908         mov        rsi, r12
000000000001190b         call       randread                                    ; randread
0000000000011910         mov        rax, r12
0000000000011913         nop        dword [rax+rax]

                     loc_11918:
0000000000011918         movzx      edx, byte [rax]                             ; CODE XREF=randint_genmax+196
000000000001191b         shl        rbx, 0x8
000000000001191f         shl        rbp, 0x8
0000000000011923         add        rbx, 0xff
000000000001192a         add        rax, 0x1
000000000001192e         add        rbp, rdx
0000000000011931         cmp        r14, rbx
0000000000011934         ja         loc_11918

0000000000011936         cmp        rbx, r14
0000000000011939         jne        loc_118b9

                     loc_1193f:
000000000001193f         mov        qword [r13+0x10], 0x0                       ; CODE XREF=randint_genmax+67
0000000000011947         mov        qword [r13+8], 0x0

                     loc_1194f:
000000000001194f         mov        rcx, qword [rsp+0x58+var_40]                ; CODE XREF=randint_genmax+275
0000000000011954         xor        rcx, qword [fs:0x28]
000000000001195d         mov        rax, rbp
0000000000011960         jne        loc_11985

0000000000011962         add        rsp, 0x28
0000000000011966         pop        rbx
0000000000011967         pop        rbp
0000000000011968         pop        r12
000000000001196a         pop        r13
000000000001196c         pop        r14
000000000001196e         pop        r15
0000000000011970         ret
                        ; endp
0000000000011971         align      8

                     loc_11978:
0000000000011978         mov        qword [r13+8], rax                          ; CODE XREF=randint_genmax+104
000000000001197c         mov        qword [r13+0x10], rsi
0000000000011980         mov        rbp, rdx
0000000000011983         jmp        loc_1194f

                     loc_11985:
0000000000011985         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=randint_genmax+240
                        ; endp
000000000001198a         align      16                                          ; End of unwind block (FDE at 0x1879c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_free:
0000000000011990         push       rbx                                         ; Begin of unwind block (FDE at 0x187e8)
0000000000011991         mov        rdx, 0xffffffffffffffff
0000000000011998         mov        rbx, rdi
000000000001199b         mov        esi, 0x18
00000000000119a0         call       j___explicit_bzero_chk                      ; __explicit_bzero_chk
00000000000119a5         mov        rdi, rbx
00000000000119a8         pop        rbx
00000000000119a9         jmp        sub_2e10                                    ; sub_2e10
                        ; endp
00000000000119ae         align      16                                          ; End of unwind block (FDE at 0x187e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_all_free:
00000000000119b0         push       r13                                         ; Begin of unwind block (FDE at 0x18804), CODE XREF=try_tempname_len+258, try_tempname_len+304
00000000000119b2         push       r12
00000000000119b4         push       rbp
00000000000119b5         push       rbx
00000000000119b6         mov        rbx, rdi
00000000000119b9         sub        rsp, 0x8
00000000000119bd         mov        rdi, qword [rdi]
00000000000119c0         call       randread_free                               ; randread_free
00000000000119c5         mov        r12d, eax
00000000000119c8         call       j___errno_location                          ; __errno_location
00000000000119cd         mov        r13d, dword [rax]
00000000000119d0         mov        rdi, rbx
00000000000119d3         mov        rdx, 0xffffffffffffffff
00000000000119da         mov        esi, 0x18
00000000000119df         mov        rbp, rax
00000000000119e2         call       j___explicit_bzero_chk                      ; __explicit_bzero_chk
00000000000119e7         mov        rdi, rbx
00000000000119ea         call       sub_2e10                                    ; sub_2e10
00000000000119ef         mov        dword [rbp], r13d
00000000000119f3         add        rsp, 0x8
00000000000119f7         mov        eax, r12d
00000000000119fa         pop        rbx
00000000000119fb         pop        rbp
00000000000119fc         pop        r12
00000000000119fe         pop        r13
0000000000011a00         ret
                        ; endp
0000000000011a01         align      16                                          ; End of unwind block (FDE at 0x18804)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_error:
0000000000011a10         push       rbp                                         ; Begin of unwind block (FDE at 0x1883c), DATA XREF=randread_new+90, randread_new+196, randread_new+348
0000000000011a11         push       rbx
0000000000011a12         sub        rsp, 0x8
0000000000011a16         test       rdi, rdi
0000000000011a19         je         loc_11a58

0000000000011a1b         call       quote                                       ; quote
0000000000011a20         mov        rbp, rax
0000000000011a23         call       j___errno_location                          ; __errno_location
0000000000011a28         cmp        dword [rax], 0x0
0000000000011a2b         mov        rbx, rax
0000000000011a2e         mov        edx, 0x5
0000000000011a33         je         loc_11a5d

0000000000011a35         lea        rsi, qword [aSReadError]                    ; argument "msgid" for method j_dcgettext, "%s: read error"
0000000000011a3c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000011a3e         call       j_dcgettext                                 ; dcgettext

                     loc_11a43:
0000000000011a43         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure, CODE XREF=randread_error+91
0000000000011a49         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000011a4b         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000011a4e         mov        rcx, rbp
0000000000011a51         xor        eax, eax
0000000000011a53         call       j_error                                     ; error

                     loc_11a58:
0000000000011a58         call       j_abort                                     ; abort, CODE XREF=randread_error+9
                        ; endp

                     loc_11a5d:
0000000000011a5d         lea        rsi, qword [aSEndOfFile]                    ; argument "msgid" for method j_dcgettext, "%s: end of file", CODE XREF=randread_error+35
0000000000011a64         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000011a66         call       j_dcgettext                                 ; dcgettext
0000000000011a6b         jmp        loc_11a43
0000000000011a6d         align      16                                          ; End of unwind block (FDE at 0x1883c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_58: int32_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104


                     randread_new:
0000000000011a70         push       r15                                         ; Begin of unwind block (FDE at 0x1885c), CODE XREF=randint_all_new+1
0000000000011a72         push       r14
0000000000011a74         push       r13
0000000000011a76         push       r12
0000000000011a78         push       rbp
0000000000011a79         push       rbx
0000000000011a7a         sub        rsp, 0x38
0000000000011a7e         mov        rax, qword [fs:0x28]
0000000000011a87         mov        qword [rsp+0x68+var_40], rax
0000000000011a8c         xor        eax, eax
0000000000011a8e         test       rsi, rsi
0000000000011a91         je         loc_11bb8

0000000000011a97         test       rdi, rdi
0000000000011a9a         mov        r12, rdi
0000000000011a9d         mov        rbp, rsi
0000000000011aa0         je         loc_11b20

0000000000011aa2         lea        rsi, qword [aDevurandom+13]                 ; 0x15c5a
0000000000011aa9         call       fopen_safer                                 ; fopen_safer
0000000000011aae         test       rax, rax
0000000000011ab1         mov        r13, rax
0000000000011ab4         je         loc_11cb8

0000000000011aba         mov        edi, aTimensat                              ; "timensat"
0000000000011abf         call       xmalloc                                     ; xmalloc
0000000000011ac4         mov        rbx, rax
0000000000011ac7         mov        qword [rax], r13
0000000000011aca         lea        rax, qword [randread_error]                 ; randread_error
0000000000011ad1         cmp        rbp, 0x1000
0000000000011ad8         mov        ecx, 0x1000
0000000000011add         lea        rsi, qword [rbx+0x18]                       ; argument "__buf" for method j_setvbuf
0000000000011ae1         cmovbe     rcx, rbp                                    ; argument "__n" for method j_setvbuf
0000000000011ae5         mov        qword [rbx+8], rax
0000000000011ae9         mov        qword [rbx+0x10], r12
0000000000011aed         xor        edx, edx                                    ; argument "__modes" for method j_setvbuf
0000000000011aef         mov        rdi, r13                                    ; argument "__stream" for method j_setvbuf
0000000000011af2         call       j_setvbuf                                   ; setvbuf

                     loc_11af7:
0000000000011af7         mov        rdx, qword [rsp+0x68+var_40]                ; CODE XREF=randread_new+317, randread_new+367, randread_new+586
0000000000011afc         xor        rdx, qword [fs:0x28]
0000000000011b05         mov        rax, rbx
0000000000011b08         jne        loc_11cbf

0000000000011b0e         add        rsp, 0x38
0000000000011b12         pop        rbx
0000000000011b13         pop        rbp
0000000000011b14         pop        r12
0000000000011b16         pop        r13
0000000000011b18         pop        r14
0000000000011b1a         pop        r15
0000000000011b1c         ret
                        ; endp
0000000000011b1d         align      32

                     loc_11b20:
0000000000011b20         mov        edi, aTimensat                              ; "timensat", CODE XREF=randread_new+48
0000000000011b25         call       xmalloc                                     ; xmalloc
0000000000011b2a         mov        rbx, rax
0000000000011b2d         mov        qword [rax], 0x0
0000000000011b34         lea        rax, qword [randread_error]                 ; randread_error
0000000000011b3b         lea        rdi, qword [aDevurandom]                    ; argument "__file" for method j_open, "/dev/urandom"
0000000000011b42         xor        esi, esi                                    ; argument "__oflag" for method j_open
0000000000011b44         mov        qword [rbx+0x10], 0x0
0000000000011b4c         mov        qword [rbx+8], rax
0000000000011b50         mov        qword [rbx+0x18], 0x0
0000000000011b58         xor        eax, eax
0000000000011b5a         call       j_open                                      ; open
0000000000011b5f         test       eax, eax
0000000000011b61         lea        r13, qword [rbx+0x20]
0000000000011b65         mov        r15d, eax
0000000000011b68         js         loc_11be8

0000000000011b6a         cmp        rbp, 0x800
0000000000011b71         mov        rdx, rbp
0000000000011b74         mov        r14d, 0x800
0000000000011b7a         cmova      rdx, r14
0000000000011b7e         mov        ecx, 0x1018
0000000000011b83         mov        rsi, r13
0000000000011b86         mov        edi, eax
0000000000011b88         call       j___read_chk                                ; __read_chk
0000000000011b8d         mov        edi, r15d                                   ; argument "__fd" for method j_close
0000000000011b90         mov        rbp, rax
0000000000011b93         call       j_close                                     ; close
0000000000011b98         cmp        rbp, 0x7ff
0000000000011b9f         jle        loc_11cc4

                     loc_11ba5:
0000000000011ba5         mov        rdi, r13                                    ; CODE XREF=randread_new+502, randread_new+547, randread_new+573, randread_new+663, randread_new+742, randread_new+798
0000000000011ba8         call       isaac_seed                                  ; isaac_seed
0000000000011bad         jmp        loc_11af7
0000000000011bb2         align      8

                     loc_11bb8:
0000000000011bb8         mov        edi, aTimensat                              ; "timensat", CODE XREF=randread_new+33
0000000000011bbd         call       xmalloc                                     ; xmalloc
0000000000011bc2         mov        rbx, rax
0000000000011bc5         mov        qword [rax], 0x0
0000000000011bcc         lea        rax, qword [randread_error]                 ; randread_error
0000000000011bd3         mov        qword [rbx+0x10], 0x0
0000000000011bdb         mov        qword [rbx+8], rax
0000000000011bdf         jmp        loc_11af7
0000000000011be4         align      8

                     loc_11be8:
0000000000011be8         lea        r12, qword [rsp+0x68+var_58]                ; CODE XREF=randread_new+248
0000000000011bed         xor        esi, esi                                    ; argument "__tz" for method j_gettimeofday
0000000000011bef         mov        r14d, 0x18
0000000000011bf5         mov        rdi, r12                                    ; argument "__tv" for method j_gettimeofday
0000000000011bf8         call       j_gettimeofday                              ; gettimeofday
0000000000011bfd         movdqa     xmm0, xmmword [rsp+0x68+var_58]
0000000000011c03         movups     xmmword [rbx+0x20], xmm0
0000000000011c07         call       j_getpid                                    ; getpid
0000000000011c0c         mov        dword [rbx+0x30], eax
0000000000011c0f         mov        dword [rsp+0x68+var_58], eax
0000000000011c13         call       j_getppid                                   ; getppid
0000000000011c18         mov        dword [rsp+0x68+var_58], eax
0000000000011c1c         mov        dword [rbx+0x34], eax

                     loc_11c1f:
0000000000011c1f         mov        ebp, 0x800                                  ; CODE XREF=randread_new+804
0000000000011c24         mov        eax, 0x4
0000000000011c29         sub        rbp, r14
0000000000011c2c         cmp        rbp, 0x4
0000000000011c30         cmova      rbp, rax
0000000000011c34         call       j_getuid                                    ; getuid
0000000000011c39         test       ebp, ebp
0000000000011c3b         mov        dword [rsp+0x68+var_58], eax
0000000000011c3f         lea        rcx, qword [r13+r14]
0000000000011c44         mov        esi, ebp
0000000000011c46         je         loc_11c5c

0000000000011c48         xor        eax, eax

                     loc_11c4a:
0000000000011c4a         mov        edx, eax                                    ; CODE XREF=randread_new+490
0000000000011c4c         add        eax, 0x1
0000000000011c4f         movzx      edi, byte [r12+rdx]
0000000000011c54         cmp        eax, esi
0000000000011c56         mov        byte [rcx+rdx], dil
0000000000011c5a         jb         loc_11c4a

                     loc_11c5c:
0000000000011c5c         add        rbp, r14                                    ; CODE XREF=randread_new+470
0000000000011c5f         cmp        rbp, 0x7ff
0000000000011c66         ja         loc_11ba5

0000000000011c6c         call       j_getgid                                    ; getgid
0000000000011c71         mov        dword [rsp+0x68+var_58], eax
0000000000011c75         mov        eax, 0x800
0000000000011c7a         mov        edx, 0x4
0000000000011c7f         sub        rax, rbp
0000000000011c82         lea        rcx, qword [r13+rbp]
0000000000011c87         cmp        rax, 0x4
0000000000011c8b         cmova      rax, rdx
0000000000011c8f         test       eax, eax
0000000000011c91         mov        esi, eax
0000000000011c93         je         loc_11ba5

0000000000011c99         xor        eax, eax

                     loc_11c9b:
0000000000011c9b         mov        edx, eax                                    ; CODE XREF=randread_new+571
0000000000011c9d         add        eax, 0x1
0000000000011ca0         movzx      edi, byte [r12+rdx]
0000000000011ca5         cmp        eax, esi
0000000000011ca7         mov        byte [rcx+rdx], dil
0000000000011cab         jb         loc_11c9b

0000000000011cad         jmp        loc_11ba5
0000000000011cb2         align      8

                     loc_11cb8:
0000000000011cb8         xor        ebx, ebx                                    ; CODE XREF=randread_new+68
0000000000011cba         jmp        loc_11af7

                     loc_11cbf:
0000000000011cbf         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=randread_new+152
                        ; endp

                     loc_11cc4:
0000000000011cc4         test       rbp, rbp                                    ; CODE XREF=randread_new+303
0000000000011cc7         mov        r15, r14
0000000000011cca         mov        eax, 0x10
0000000000011ccf         cmovs      rbp, r12
0000000000011cd3         lea        r12, qword [rsp+0x68+var_58]
0000000000011cd8         sub        r15, rbp
0000000000011cdb         cmp        r15, 0x10
0000000000011cdf         mov        rdi, r12                                    ; argument "__tv" for method j_gettimeofday
0000000000011ce2         cmova      r15, rax
0000000000011ce6         xor        esi, esi                                    ; argument "__tz" for method j_gettimeofday
0000000000011ce8         call       j_gettimeofday                              ; gettimeofday
0000000000011ced         lea        rax, qword [r13+rbp]
0000000000011cf2         add        rbp, r15
0000000000011cf5         mov        ecx, r15d
0000000000011cf8         cmp        rbp, 0x7ff
0000000000011cff         mov        rsi, r12
0000000000011d02         mov        rdi, rax
0000000000011d05         rep movsb  byte [rdi], byte [rsi]
0000000000011d07         ja         loc_11ba5

0000000000011d0d         mov        r15, r14
0000000000011d10         mov        r8d, 0x4
0000000000011d16         sub        r15, rbp
0000000000011d19         mov        qword [rsp+0x68+var_60], r8
0000000000011d1e         cmp        r15, 0x4
0000000000011d22         cmova      r15, r8
0000000000011d26         lea        rdx, qword [rbp+r15]
0000000000011d2b         add        rbp, r13
0000000000011d2e         mov        qword [rsp+0x68+var_68], rdx
0000000000011d32         call       j_getpid                                    ; getpid
0000000000011d37         mov        rdx, qword [rsp+0x68+var_68]
0000000000011d3b         mov        dword [rsp+0x68+var_58], eax
0000000000011d3f         mov        ecx, r15d
0000000000011d42         mov        rdi, rbp
0000000000011d45         mov        rsi, r12
0000000000011d48         mov        r8, qword [rsp+0x68+var_60]
0000000000011d4d         rep movsb  byte [rdi], byte [rsi]
0000000000011d4f         cmp        rdx, 0x7ff
0000000000011d56         jg         loc_11ba5

0000000000011d5c         sub        r14, rdx
0000000000011d5f         cmp        r14, 0x4
0000000000011d63         cmova      r14, r8
0000000000011d67         call       j_getppid                                   ; getppid
0000000000011d6c         mov        rdx, qword [rsp+0x68+var_68]
0000000000011d70         mov        dword [rsp+0x68+var_58], eax
0000000000011d74         mov        ecx, r14d
0000000000011d77         mov        rsi, r12
0000000000011d7a         lea        rax, qword [r13+rdx]
0000000000011d7f         add        r14, rdx
0000000000011d82         cmp        r14, 0x7ff
0000000000011d89         mov        rdi, rax
0000000000011d8c         rep movsb  byte [rdi], byte [rsi]
0000000000011d8e         ja         loc_11ba5

0000000000011d94         jmp        loc_11c1f
0000000000011d99         align      32                                          ; End of unwind block (FDE at 0x1885c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_set_handler:
0000000000011da0         mov        qword [rdi+8], rsi                          ; Begin of unwind block (FDE at 0x188a8)
0000000000011da4         ret
                        ; endp
0000000000011da5         align      16                                          ; End of unwind block (FDE at 0x188a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_set_handler_arg:
0000000000011db0         mov        qword [rdi+0x10], rsi                       ; Begin of unwind block (FDE at 0x188bc)
0000000000011db4         ret
                        ; endp
0000000000011db5         align      64                                          ; End of unwind block (FDE at 0x188bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     randread:
0000000000011dc0         push       r15                                         ; Begin of unwind block (FDE at 0x188d0), CODE XREF=randint_genmax+155
0000000000011dc2         push       r14
0000000000011dc4         push       r13
0000000000011dc6         push       r12
0000000000011dc8         mov        r12, rdi
0000000000011dcb         push       rbp
0000000000011dcc         push       rbx
0000000000011dcd         mov        rbp, rdx
0000000000011dd0         mov        rbx, rsi
0000000000011dd3         sub        rsp, 0x18
0000000000011dd7         mov        rcx, qword [rdi]
0000000000011dda         test       rcx, rcx
0000000000011ddd         mov        qword [rsp+0x48+var_40], rcx
0000000000011de2         je         loc_11e48

0000000000011de4         call       j___errno_location                          ; __errno_location
0000000000011de9         mov        rcx, qword [rsp+0x48+var_40]
0000000000011dee         mov        r13, rax
0000000000011df1         jmp        loc_11e16
0000000000011df3         align      8

                     loc_11df8:
0000000000011df8         mov        rax, qword [r12]                            ; CODE XREF=randread+112
0000000000011dfc         mov        rdi, qword [r12+0x10]
0000000000011e01         mov        eax, dword [rax]
0000000000011e03         and        eax, 0x20
0000000000011e06         cmovne     eax, edx
0000000000011e09         mov        dword [r13], eax
0000000000011e0d         call       qword [r12+8]
0000000000011e12         mov        rcx, qword [r12]

                     loc_11e16:
0000000000011e16         mov        rdx, rbp                                    ; argument "__n" for method j_fread_unlocked, CODE XREF=randread+49
0000000000011e19         mov        rdi, rbx                                    ; argument "__ptr" for method j_fread_unlocked
0000000000011e1c         mov        esi, 0x1                                    ; argument "__size" for method j_fread_unlocked
0000000000011e21         call       j_fread_unlocked                            ; fread_unlocked
0000000000011e26         add        rbx, rax
0000000000011e29         sub        rbp, rax
0000000000011e2c         mov        edx, dword [r13]
0000000000011e30         jne        loc_11df8

                     loc_11e32:
0000000000011e32         add        rsp, 0x18                                   ; CODE XREF=randread+366
0000000000011e36         pop        rbx
0000000000011e37         pop        rbp
0000000000011e38         pop        r12
0000000000011e3a         pop        r13
0000000000011e3c         pop        r14
0000000000011e3e         pop        r15
0000000000011e40         ret
                        ; endp
0000000000011e41         align      8

                     loc_11e48:
0000000000011e48         mov        r14, qword [rdi+0x18]                       ; CODE XREF=randread+34
0000000000011e4c         lea        rax, qword [rdi+0x838]
0000000000011e53         lea        r13, qword [rdi+0x20]
0000000000011e57         mov        qword [rsp+0x48+var_40], rax
0000000000011e5c         cmp        rdx, r14
0000000000011e5f         jbe        loc_11f42

                     loc_11e65:
0000000000011e65         mov        esi, 0x800                                  ; CODE XREF=randread+330
0000000000011e6a         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
0000000000011e6d         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000011e70         sub        rsi, r14
0000000000011e73         add        rsi, qword [rsp+0x48+var_40]                ; argument "__src" for method j_memcpy
0000000000011e78         add        rbx, r14
0000000000011e7b         sub        rbp, r14
0000000000011e7e         call       j_memcpy                                    ; memcpy
0000000000011e83         test       bl, 0x7
0000000000011e86         jne        loc_11ef0

0000000000011e88         cmp        rbp, 0x7ff
0000000000011e8f         jbe        loc_11f33

0000000000011e95         lea        r15, qword [rbp-0x800]
0000000000011e9c         mov        r14, r15
0000000000011e9f         and        r14d, 0x7ff
0000000000011ea6         jmp        loc_11ebc
0000000000011ea8         align      16

                     loc_11eb0:
0000000000011eb0         cmp        r15, r14                                    ; CODE XREF=randread+276
0000000000011eb3         je         loc_11ef0

0000000000011eb5         sub        r15, 0x800

                     loc_11ebc:
0000000000011ebc         mov        rsi, rbx                                    ; CODE XREF=randread+230
0000000000011ebf         mov        rdi, r13
0000000000011ec2         add        rbx, 0x800
0000000000011ec9         call       isaac_refill                                ; isaac_refill
0000000000011ece         test       r15, r15
0000000000011ed1         mov        rbp, r15
0000000000011ed4         jne        loc_11eb0

0000000000011ed6         mov        qword [r12+0x18], 0x0
0000000000011edf         add        rsp, 0x18
0000000000011ee3         pop        rbx
0000000000011ee4         pop        rbp
0000000000011ee5         pop        r12
0000000000011ee7         pop        r13
0000000000011ee9         pop        r14
0000000000011eeb         pop        r15
0000000000011eed         ret
                        ; endp
0000000000011eee         align      16

                     loc_11ef0:
0000000000011ef0         mov        rsi, qword [rsp+0x48+var_40]                ; CODE XREF=randread+198, randread+243
0000000000011ef5         mov        rdi, r13
0000000000011ef8         mov        r14d, 0x800
0000000000011efe         call       isaac_refill                                ; isaac_refill
0000000000011f03         cmp        rbp, 0x800
0000000000011f0a         ja         loc_11e65

                     loc_11f10:
0000000000011f10         mov        r14d, 0x800                                 ; CODE XREF=randread+384

                     loc_11f16:
0000000000011f16         mov        rsi, qword [rsp+0x48+var_40]                ; argument "__src" for method j_memcpy, CODE XREF=randread+404
0000000000011f1b         mov        rdx, rbp                                    ; argument "__n" for method j_memcpy
0000000000011f1e         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
0000000000011f21         sub        r14, rbp
0000000000011f24         call       j_memcpy                                    ; memcpy
0000000000011f29         mov        qword [r12+0x18], r14
0000000000011f2e         jmp        loc_11e32

                     loc_11f33:
0000000000011f33         mov        rsi, qword [rsp+0x48+var_40]                ; CODE XREF=randread+207
0000000000011f38         mov        rdi, r13
0000000000011f3b         call       isaac_refill                                ; isaac_refill
0000000000011f40         jmp        loc_11f10

                     loc_11f42:
0000000000011f42         mov        r15, rax                                    ; CODE XREF=randread+159
0000000000011f45         sub        r15, r14
0000000000011f48         lea        rax, qword [r15+0x800]
0000000000011f4f         mov        qword [rsp+0x48+var_40], rax
0000000000011f54         jmp        loc_11f16
0000000000011f56         align      32                                          ; End of unwind block (FDE at 0x188d0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_free:
0000000000011f60         push       rbp                                         ; Begin of unwind block (FDE at 0x18934), CODE XREF=randint_all_free+16
0000000000011f61         push       rbx
0000000000011f62         mov        rdx, 0xffffffffffffffff
0000000000011f69         mov        rbx, rdi
0000000000011f6c         mov        esi, aTimensat                              ; "timensat"
0000000000011f71         sub        rsp, 0x8
0000000000011f75         mov        rbp, qword [rdi]
0000000000011f78         call       j___explicit_bzero_chk                      ; __explicit_bzero_chk
0000000000011f7d         mov        rdi, rbx
0000000000011f80         call       sub_2e10                                    ; sub_2e10
0000000000011f85         test       rbp, rbp
0000000000011f88         je         loc_11fa0

0000000000011f8a         add        rsp, 0x8
0000000000011f8e         mov        rdi, rbp
0000000000011f91         pop        rbx
0000000000011f92         pop        rbp
0000000000011f93         jmp        rpl_fclose                                  ; rpl_fclose
0000000000011f98         align      32

                     loc_11fa0:
0000000000011fa0         add        rsp, 0x8                                    ; CODE XREF=randread_free+40
0000000000011fa4         xor        eax, eax
0000000000011fa6         pop        rbx
0000000000011fa7         pop        rbp
0000000000011fa8         ret
                        ; endp
0000000000011fa9         align      16                                          ; End of unwind block (FDE at 0x18934)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isaac_refill:
0000000000011fb0         mov        rax, qword [rdi+0x810]                      ; Begin of unwind block (FDE at 0x1896c), CODE XREF=randread+265, randread+318, randread+379
0000000000011fb7         mov        rdx, qword [rdi+0x800]
0000000000011fbe         lea        r9, qword [rdi+0x400]
0000000000011fc5         lea        rcx, qword [rax+1]
0000000000011fc9         mov        rax, rdi
0000000000011fcc         mov        qword [rdi+0x810], rcx
0000000000011fd3         add        rcx, qword [rdi+0x808]
0000000000011fda         nop        word [rax+rax]

                     loc_11fe0:
0000000000011fe0         mov        r8, rdx                                     ; CODE XREF=isaac_refill+329
0000000000011fe3         shl        r8, 0x15
0000000000011fe7         xor        rdx, r8
0000000000011fea         mov        r8, qword [rax]
0000000000011fed         not        rdx
0000000000011ff0         add        rdx, qword [rax+0x400]
0000000000011ff7         mov        r10, r8
0000000000011ffa         and        r10d, 0x7f8
0000000000012001         mov        r11, qword [rdi+r10]
0000000000012005         mov        r10, rdx
0000000000012008         shr        r10, 0x5
000000000001200c         add        r11, rdx
000000000001200f         xor        rdx, r10
0000000000012012         add        rcx, r11
0000000000012015         mov        qword [rax], rcx
0000000000012018         shr        rcx, 0x8
000000000001201c         and        ecx, 0x7f8
0000000000012022         mov        r11, qword [rdi+rcx]
0000000000012026         add        r11, r8
0000000000012029         mov        qword [rsi], r11
000000000001202c         add        rdx, qword [rax+0x408]
0000000000012033         mov        rcx, qword [rax+8]
0000000000012037         mov        r10, rdx
000000000001203a         mov        rdx, rcx
000000000001203d         and        edx, 0x7f8
0000000000012043         mov        r8, qword [rdi+rdx]
0000000000012047         mov        rdx, r10
000000000001204a         shl        rdx, 0xc
000000000001204e         xor        rdx, r10
0000000000012051         add        r8, r10
0000000000012054         add        r8, r11
0000000000012057         mov        qword [rax+8], r8
000000000001205b         shr        r8, 0x8
000000000001205f         and        r8d, 0x7f8
0000000000012066         add        rcx, qword [rdi+r8]
000000000001206a         mov        qword [rsi+8], rcx
000000000001206e         mov        r8, qword [rax+0x10]
0000000000012072         mov        r11, rcx
0000000000012075         add        rdx, qword [rax+0x410]
000000000001207c         mov        rcx, r8
000000000001207f         and        ecx, 0x7f8
0000000000012085         mov        r10, qword [rdi+rcx]
0000000000012089         add        r10, rdx
000000000001208c         mov        rcx, r10
000000000001208f         add        rcx, r11
0000000000012092         mov        qword [rax+0x10], rcx
0000000000012096         shr        rcx, 0x8
000000000001209a         and        ecx, 0x7f8
00000000000120a0         mov        r10, qword [rdi+rcx]
00000000000120a4         mov        rcx, rdx
00000000000120a7         shr        rcx, 0x21
00000000000120ab         xor        rdx, rcx
00000000000120ae         add        r10, r8
00000000000120b1         mov        qword [rsi+0x10], r10
00000000000120b5         mov        rcx, qword [rax+0x18]
00000000000120b9         add        rdx, qword [rax+0x418]
00000000000120c0         mov        r8, rcx
00000000000120c3         and        r8d, 0x7f8
00000000000120ca         mov        r11, qword [rdi+r8]
00000000000120ce         add        r11, rdx
00000000000120d1         mov        r8, r11
00000000000120d4         add        r8, r10
00000000000120d7         add        rax, 0x20
00000000000120db         add        rsi, 0x20
00000000000120df         mov        qword [rax-8], r8
00000000000120e3         shr        r8, 0x8
00000000000120e7         and        r8d, 0x7f8
00000000000120ee         add        rcx, qword [rdi+r8]
00000000000120f2         mov        qword [rsi-8], rcx
00000000000120f6         cmp        rax, r9
00000000000120f9         jb         loc_11fe0

00000000000120ff         lea        r9, qword [rdi+0x800]
0000000000012106         nop        word [cs:rax+rax]

                     loc_12110:
0000000000012110         mov        r8, rdx                                     ; CODE XREF=isaac_refill+633
0000000000012113         shl        r8, 0x15
0000000000012117         xor        rdx, r8
000000000001211a         mov        r8, qword [rax]
000000000001211d         not        rdx
0000000000012120         add        rdx, qword [rax-0x400]
0000000000012127         mov        r10, r8
000000000001212a         and        r10d, 0x7f8
0000000000012131         mov        r11, qword [rdi+r10]
0000000000012135         mov        r10, rdx
0000000000012138         shr        r10, 0x5
000000000001213c         add        r11, rdx
000000000001213f         xor        rdx, r10
0000000000012142         add        rcx, r11
0000000000012145         mov        qword [rax], rcx
0000000000012148         shr        rcx, 0x8
000000000001214c         and        ecx, 0x7f8
0000000000012152         mov        r11, qword [rdi+rcx]
0000000000012156         add        r11, r8
0000000000012159         mov        qword [rsi], r11
000000000001215c         add        rdx, qword [rax-0x3f8]
0000000000012163         mov        rcx, qword [rax+8]
0000000000012167         mov        r10, rdx
000000000001216a         mov        rdx, rcx
000000000001216d         and        edx, 0x7f8
0000000000012173         mov        r8, qword [rdi+rdx]
0000000000012177         mov        rdx, r10
000000000001217a         shl        rdx, 0xc
000000000001217e         xor        rdx, r10
0000000000012181         add        r8, r10
0000000000012184         add        r8, r11
0000000000012187         mov        qword [rax+8], r8
000000000001218b         shr        r8, 0x8
000000000001218f         and        r8d, 0x7f8
0000000000012196         add        rcx, qword [rdi+r8]
000000000001219a         mov        qword [rsi+8], rcx
000000000001219e         mov        r8, qword [rax+0x10]
00000000000121a2         mov        r11, rcx
00000000000121a5         add        rdx, qword [rax-0x3f0]
00000000000121ac         mov        rcx, r8
00000000000121af         and        ecx, 0x7f8
00000000000121b5         mov        r10, qword [rdi+rcx]
00000000000121b9         add        r10, rdx
00000000000121bc         mov        rcx, r10
00000000000121bf         add        rcx, r11
00000000000121c2         mov        qword [rax+0x10], rcx
00000000000121c6         shr        rcx, 0x8
00000000000121ca         and        ecx, 0x7f8
00000000000121d0         mov        r10, qword [rdi+rcx]
00000000000121d4         mov        rcx, rdx
00000000000121d7         shr        rcx, 0x21
00000000000121db         xor        rdx, rcx
00000000000121de         add        r10, r8
00000000000121e1         mov        qword [rsi+0x10], r10
00000000000121e5         mov        rcx, qword [rax+0x18]
00000000000121e9         add        rdx, qword [rax-0x3e8]
00000000000121f0         mov        r8, rcx
00000000000121f3         and        r8d, 0x7f8
00000000000121fa         mov        r11, qword [rdi+r8]
00000000000121fe         add        r11, rdx
0000000000012201         mov        r8, r11
0000000000012204         add        r8, r10
0000000000012207         add        rax, 0x20
000000000001220b         add        rsi, 0x20
000000000001220f         mov        qword [rax-8], r8
0000000000012213         shr        r8, 0x8
0000000000012217         and        r8d, 0x7f8
000000000001221e         add        rcx, qword [rdi+r8]
0000000000012222         mov        qword [rsi-8], rcx
0000000000012226         cmp        rax, r9
0000000000012229         jb         loc_12110

000000000001222f         mov        qword [rdi+0x800], rdx
0000000000012236         mov        qword [rdi+0x808], rcx
000000000001223d         ret
                        ; endp
000000000001223e         align      64                                          ; End of unwind block (FDE at 0x1896c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isaac_seed:
0000000000012240         push       r13                                         ; Begin of unwind block (FDE at 0x18980), CODE XREF=randread_new+312
0000000000012242         push       r12
0000000000012244         lea        r12, qword [rdi+0x800]
000000000001224b         push       rbp
000000000001224c         mov        rdx, rdi
000000000001224f         push       rbx
0000000000012250         mov        rax, rdi
0000000000012253         movabs     rcx, 0x98f5704f6c44c0ab
000000000001225d         movabs     r10, 0xae985bf2cbfc89ed
0000000000012267         movabs     rbp, 0x48fe4a0fa5a09315
0000000000012271         movabs     rsi, 0x82f053db8355e0ce
000000000001227b         movabs     r8, 0xb29b2e824a595524
0000000000012285         movabs     rbx, 0x8c0ea5053d4712a0
000000000001228f         movabs     r11, 0xb9f8b322c73ac862
0000000000012299         movabs     r9, 0x647c4677a2884b7c
00000000000122a3         nop        dword [rax+rax]

                     loc_122a8:
00000000000122a8         add        rsi, qword [rax+0x20]                       ; CODE XREF=isaac_seed+314
00000000000122ac         add        rcx, qword [rax+0x38]
00000000000122b0         mov        r13, qword [rax]
00000000000122b3         add        rbp, qword [rax+0x28]
00000000000122b7         add        r10, qword [rax+0x30]
00000000000122bb         sub        r13, rsi
00000000000122be         add        r9, r13
00000000000122c1         mov        r13, rcx
00000000000122c4         shr        r13, 0x9
00000000000122c8         add        rcx, r9
00000000000122cb         xor        rbp, r13
00000000000122ce         mov        r13, qword [rax+8]
00000000000122d2         sub        r13, rbp
00000000000122d5         add        r11, r13
00000000000122d8         mov        r13, r9
00000000000122db         shl        r13, 0x9
00000000000122df         add        r9, r11
00000000000122e2         xor        r10, r13
00000000000122e5         mov        r13, qword [rax+0x10]
00000000000122e9         sub        r13, r10
00000000000122ec         add        rbx, r13
00000000000122ef         mov        r13, r11
00000000000122f2         shr        r13, 0x17
00000000000122f6         add        r11, rbx
00000000000122f9         xor        rcx, r13
00000000000122fc         mov        r13, qword [rax+0x18]
0000000000012300         sub        r13, rcx
0000000000012303         add        r8, r13
0000000000012306         mov        r13, rbx
0000000000012309         shl        r13, 0xf
000000000001230d         add        rbx, r8
0000000000012310         xor        r9, r13
0000000000012313         mov        r13, r8
0000000000012316         sub        rsi, r9
0000000000012319         shr        r13, 0xe
000000000001231d         mov        qword [rax], r9
0000000000012320         xor        r11, r13
0000000000012323         mov        r13, rsi
0000000000012326         add        r8, rsi
0000000000012329         sub        rbp, r11
000000000001232c         shl        r13, 0x14
0000000000012330         mov        qword [rax+8], r11
0000000000012334         xor        rbx, r13
0000000000012337         lea        r13, qword [rsi+rbp]
000000000001233b         mov        rsi, rbp
000000000001233e         sub        r10, rbx
0000000000012341         shr        rsi, 0x11
0000000000012345         mov        qword [rax+0x10], rbx
0000000000012349         xor        r8, rsi
000000000001234c         mov        rsi, r10
000000000001234f         add        rbp, r10
0000000000012352         sub        rcx, r8
0000000000012355         shl        rsi, 0xe
0000000000012359         mov        qword [rax+0x18], r8
000000000001235d         xor        rsi, r13
0000000000012360         add        r10, rcx
0000000000012363         mov        qword [rax+0x28], rbp
0000000000012367         mov        qword [rax+0x20], rsi
000000000001236b         mov        qword [rax+0x30], r10
000000000001236f         add        rax, 0x40
0000000000012373         mov        qword [rax-8], rcx
0000000000012377         cmp        r12, rax
000000000001237a         jne        loc_122a8

                     loc_12380:
0000000000012380         add        rsi, qword [rdx+0x20]                       ; CODE XREF=isaac_seed+530
0000000000012384         add        rcx, qword [rdx+0x38]
0000000000012388         mov        r12, qword [rdx]
000000000001238b         add        rbp, qword [rdx+0x28]
000000000001238f         add        r10, qword [rdx+0x30]
0000000000012393         sub        r12, rsi
0000000000012396         add        r9, r12
0000000000012399         mov        r12, rcx
000000000001239c         shr        r12, 0x9
00000000000123a0         add        rcx, r9
00000000000123a3         xor        rbp, r12
00000000000123a6         mov        r12, qword [rdx+8]
00000000000123aa         sub        r12, rbp
00000000000123ad         add        r11, r12
00000000000123b0         mov        r12, r9
00000000000123b3         shl        r12, 0x9
00000000000123b7         add        r9, r11
00000000000123ba         xor        r10, r12
00000000000123bd         mov        r12, qword [rdx+0x10]
00000000000123c1         sub        r12, r10
00000000000123c4         add        rbx, r12
00000000000123c7         mov        r12, r11
00000000000123ca         shr        r12, 0x17
00000000000123ce         add        r11, rbx
00000000000123d1         xor        rcx, r12
00000000000123d4         mov        r12, qword [rdx+0x18]
00000000000123d8         sub        r12, rcx
00000000000123db         add        r8, r12
00000000000123de         mov        r12, rbx
00000000000123e1         shl        r12, 0xf
00000000000123e5         add        rbx, r8
00000000000123e8         xor        r9, r12
00000000000123eb         mov        r12, r8
00000000000123ee         sub        rsi, r9
00000000000123f1         shr        r12, 0xe
00000000000123f5         mov        qword [rdx], r9
00000000000123f8         xor        r11, r12
00000000000123fb         mov        r12, rsi
00000000000123fe         add        r8, rsi
0000000000012401         sub        rbp, r11
0000000000012404         shl        r12, 0x14
0000000000012408         mov        qword [rdx+8], r11
000000000001240c         xor        rbx, r12
000000000001240f         lea        r12, qword [rsi+rbp]
0000000000012413         mov        rsi, rbp
0000000000012416         sub        r10, rbx
0000000000012419         shr        rsi, 0x11
000000000001241d         mov        qword [rdx+0x10], rbx
0000000000012421         xor        r8, rsi
0000000000012424         mov        rsi, r10
0000000000012427         add        rbp, r10
000000000001242a         sub        rcx, r8
000000000001242d         shl        rsi, 0xe
0000000000012431         mov        qword [rdx+0x18], r8
0000000000012435         xor        rsi, r12
0000000000012438         add        r10, rcx
000000000001243b         mov        qword [rdx+0x28], rbp
000000000001243f         mov        qword [rdx+0x20], rsi
0000000000012443         mov        qword [rdx+0x30], r10
0000000000012447         add        rdx, 0x40
000000000001244b         mov        qword [rdx-8], rcx
000000000001244f         cmp        rax, rdx
0000000000012452         jne        loc_12380

0000000000012458         pop        rbx
0000000000012459         mov        qword [rdi+0x810], 0x0
0000000000012464         mov        qword [rdi+0x808], 0x0
000000000001246f         pop        rbp
0000000000012470         mov        qword [rdi+0x800], 0x0
000000000001247b         pop        r12
000000000001247d         pop        r13
000000000001247f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dup_safer:
0000000000012480         mov        edx, 0x3                                    ; End of unwind block (FDE at 0x18980), Begin of unwind block (FDE at 0x189b4), CODE XREF=fd_safer+17, fopen_safer+50
0000000000012485         xor        esi, esi
0000000000012487         xor        eax, eax
0000000000012489         jmp        rpl_fcntl                                   ; rpl_fcntl
                        ; endp
000000000001248e         align      16                                          ; End of unwind block (FDE at 0x189b4)

                     rpl_fclose:
0000000000012490         push       r12                                         ; Begin of unwind block (FDE at 0x189cc), CODE XREF=close_stream+21, randread_free+51, fopen_safer+65, fopen_safer+134
0000000000012492         push       rbp
0000000000012493         push       rbx
0000000000012494         mov        rbx, rdi
0000000000012497         call       j_fileno                                    ; fileno
000000000001249c         test       eax, eax
000000000001249e         mov        rdi, rbx
00000000000124a1         js         loc_124f7

00000000000124a3         call       j___freading                                ; __freading
00000000000124a8         test       eax, eax
00000000000124aa         jne        loc_124d8

                     loc_124ac:
00000000000124ac         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
00000000000124af         call       rpl_fflush                                  ; rpl_fflush
00000000000124b4         test       eax, eax
00000000000124b6         je         loc_124f4

00000000000124b8         call       j___errno_location                          ; __errno_location
00000000000124bd         mov        r12d, dword [rax]
00000000000124c0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
00000000000124c3         mov        rbp, rax
00000000000124c6         call       j_fclose                                    ; fclose
00000000000124cb         test       r12d, r12d
00000000000124ce         jne        loc_12500

                     loc_124d0:
00000000000124d0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
00000000000124d1         pop        rbp
00000000000124d2         pop        r12
00000000000124d4         ret
                        ; endp
00000000000124d5         align      8

                     loc_124d8:
00000000000124d8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
00000000000124db         call       j_fileno                                    ; fileno
00000000000124e0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
00000000000124e2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
00000000000124e7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000124e9         call       j_lseek                                     ; lseek
00000000000124ee         cmp        rax, 0xffffffffffffffff
00000000000124f2         jne        loc_124ac

                     loc_124f4:
00000000000124f4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_124f7:
00000000000124f7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
00000000000124f8         pop        rbp
00000000000124f9         pop        r12
00000000000124fb         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_12500:
0000000000012500         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000012504         mov        eax, 0xffffffff
0000000000012509         jmp        loc_124d0
000000000001250b         align      16                                          ; End of unwind block (FDE at 0x189cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int32_t, -104


                     rpl_fcntl:
0000000000012510         push       r12                                         ; Begin of unwind block (FDE at 0x18a04), CODE XREF=opendir_safer+62, dup_safer+9
0000000000012512         push       rbp
0000000000012513         mov        ebp, edi
0000000000012515         push       rbx
0000000000012516         sub        rsp, 0x50
000000000001251a         mov        rax, qword [fs:0x28]
0000000000012523         mov        qword [rsp+0x68+var_50], rax
0000000000012528         xor        eax, eax
000000000001252a         lea        rax, qword [rsp+0x68+arg_0]
000000000001252f         test       esi, esi
0000000000012531         mov        qword [rsp+0x68+var_38], rdx
0000000000012536         mov        qword [rsp+0x68+var_30], rcx
000000000001253b         mov        qword [rsp+0x68+var_28], r8
0000000000012540         mov        qword [rsp+0x68+var_60], rax
0000000000012545         lea        rax, qword [rsp+0x68+var_48]
000000000001254a         mov        qword [rsp+0x68+var_20], r9
000000000001254f         mov        dword [rsp+0x68+var_68], 0x10
0000000000012556         mov        qword [rsp+0x68+var_58], rax
000000000001255b         je         loc_12762

0000000000012561         cmp        esi, 0x406
0000000000012567         jne        loc_125b0

0000000000012569         mov        rax, qword [rsp+0x68+var_58]
000000000001256e         cmp        dword [have_dupfd_cloexec.3326], 0x0        ; have_dupfd_cloexec.3326
0000000000012575         mov        dword [rsp+0x68+var_68], 0x18
000000000001257c         mov        r12d, dword [rax+0x10]
0000000000012580         mov        edx, r12d
0000000000012583         js         loc_126b3

0000000000012589         xor        eax, eax
000000000001258b         mov        esi, 0x406                                  ; argument "__cmd" for method j_fcntl
0000000000012590         call       j_fcntl                                     ; fcntl
0000000000012595         test       eax, eax
0000000000012597         mov        ebx, eax
0000000000012599         js         loc_12728

                     loc_1259f:
000000000001259f         mov        dword [have_dupfd_cloexec.3326], 0x1        ; have_dupfd_cloexec.3326, CODE XREF=rpl_fcntl+544
00000000000125a9         jmp        loc_125f0
00000000000125ab         align      16

                     loc_125b0:
00000000000125b0         cmp        esi, 0xb                                    ; CODE XREF=rpl_fcntl+87
00000000000125b3         je         loc_125e0

00000000000125b5         jg         loc_12610

00000000000125b7         cmp        esi, 0x4
00000000000125ba         je         loc_12690

00000000000125c0         jg         loc_12680

00000000000125c6         cmp        esi, 0x2
00000000000125c9         je         loc_12690

00000000000125cf         jg         loc_125e0

00000000000125d1         cmp        esi, 0x1
00000000000125d4         jne        loc_12638

00000000000125d6         nop        word [cs:rax+rax]

                     loc_125e0:
00000000000125e0         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl, CODE XREF=rpl_fcntl+163, rpl_fcntl+191, rpl_fcntl+278, rpl_fcntl+344, rpl_fcntl+358, rpl_fcntl+371
00000000000125e2         xor        eax, eax
00000000000125e4         call       j_fcntl                                     ; fcntl
00000000000125e9         mov        ebx, eax
00000000000125eb         nop        dword [rax+rax]

                     loc_125f0:
00000000000125f0         mov        rcx, qword [rsp+0x68+var_50]                ; CODE XREF=rpl_fcntl+153, rpl_fcntl+327, rpl_fcntl+414, rpl_fcntl+432, rpl_fcntl+445, rpl_fcntl+491, rpl_fcntl+524, rpl_fcntl+568, rpl_fcntl+613
00000000000125f5         xor        rcx, qword [fs:0x28]
00000000000125fe         mov        eax, ebx
0000000000012600         jne        loc_1275d

0000000000012606         add        rsp, 0x50
000000000001260a         pop        rbx
000000000001260b         pop        rbp
000000000001260c         pop        r12
000000000001260e         ret
                        ; endp
000000000001260f         align      16

                     loc_12610:
0000000000012610         cmp        esi, 0x407                                  ; CODE XREF=rpl_fcntl+165
0000000000012616         jg         loc_12660

0000000000012618         cmp        esi, 0x406
000000000001261e         jge        loc_12690

0000000000012620         cmp        esi, 0x401
0000000000012626         je         loc_125e0

0000000000012628         cmp        esi, 0x402
000000000001262e         je         loc_12690

0000000000012630         cmp        esi, 0x400
0000000000012636         je         loc_12690

                     loc_12638:
0000000000012638         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+196, rpl_fcntl+356, rpl_fcntl+382
000000000001263b         cmp        eax, 0x2f
000000000001263e         ja         loc_1277a

0000000000012644         add        rax, qword [rsp+0x68+var_58]

                     loc_12649:
0000000000012649         mov        rdx, qword [rax]                            ; CODE XREF=rpl_fcntl+623
000000000001264c         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000001264e         xor        eax, eax
0000000000012650         call       j_fcntl                                     ; fcntl
0000000000012655         mov        ebx, eax
0000000000012657         jmp        loc_125f0
0000000000012659         align      32

                     loc_12660:
0000000000012660         cmp        esi, 0x409                                  ; CODE XREF=rpl_fcntl+262
0000000000012666         je         loc_12690

0000000000012668         jl         loc_125e0

000000000001266e         cmp        esi, 0x40a
0000000000012674         jne        loc_12638

0000000000012676         jmp        loc_125e0
000000000001267b         align      128

                     loc_12680:
0000000000012680         cmp        esi, 0x9                                    ; CODE XREF=rpl_fcntl+176
0000000000012683         je         loc_125e0

0000000000012689         jg         loc_12690

000000000001268b         cmp        esi, 0x8
000000000001268e         jne        loc_12638

                     loc_12690:
0000000000012690         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+170, rpl_fcntl+185, rpl_fcntl+270, rpl_fcntl+286, rpl_fcntl+294, rpl_fcntl+342, rpl_fcntl+377
0000000000012693         cmp        eax, 0x2f
0000000000012696         ja         loc_12784

000000000001269c         add        rax, qword [rsp+0x68+var_58]

                     loc_126a1:
00000000000126a1         mov        edx, dword [rax]                            ; CODE XREF=rpl_fcntl+633
00000000000126a3         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
00000000000126a5         xor        eax, eax
00000000000126a7         call       j_fcntl                                     ; fcntl
00000000000126ac         mov        ebx, eax
00000000000126ae         jmp        loc_125f0

                     loc_126b3:
00000000000126b3         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl, CODE XREF=rpl_fcntl+115
00000000000126b5         xor        eax, eax
00000000000126b7         call       j_fcntl                                     ; fcntl
00000000000126bc         test       eax, eax
00000000000126be         mov        ebx, eax
00000000000126c0         js         loc_125f0

00000000000126c6         cmp        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
00000000000126cd         jne        loc_125f0

                     loc_126d3:
00000000000126d3         xor        eax, eax                                    ; CODE XREF=rpl_fcntl+584
00000000000126d5         mov        esi, 0x1                                    ; argument "__cmd" for method j_fcntl
00000000000126da         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
00000000000126dc         call       j_fcntl                                     ; fcntl
00000000000126e1         test       eax, eax
00000000000126e3         js         loc_12701

00000000000126e5         or         eax, 0x1
00000000000126e8         mov        esi, 0x2                                    ; argument "__cmd" for method j_fcntl
00000000000126ed         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
00000000000126ef         mov        edx, eax
00000000000126f1         xor        eax, eax
00000000000126f3         call       j_fcntl                                     ; fcntl
00000000000126f8         cmp        eax, 0xffffffff
00000000000126fb         jne        loc_125f0

                     loc_12701:
0000000000012701         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+467
0000000000012706         mov        r12d, dword [rax]
0000000000012709         mov        rbp, rax
000000000001270c         mov        edi, ebx                                    ; argument "__fd" for method j_close
000000000001270e         call       j_close                                     ; close
0000000000012713         mov        ebx, 0xffffffff
0000000000012718         mov        dword [rbp], r12d
000000000001271c         jmp        loc_125f0
0000000000012721         align      8

                     loc_12728:
0000000000012728         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+137
000000000001272d         cmp        dword [rax], 0x16
0000000000012730         jne        loc_1259f

0000000000012736         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000012738         xor        eax, eax
000000000001273a         mov        edx, r12d
000000000001273d         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000001273f         call       j_fcntl                                     ; fcntl
0000000000012744         test       eax, eax
0000000000012746         mov        ebx, eax
0000000000012748         js         loc_125f0

000000000001274e         mov        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
0000000000012758         jmp        loc_126d3

                     loc_1275d:
000000000001275d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_fcntl+240
                        ; endp

                     loc_12762:
0000000000012762         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=rpl_fcntl+75
0000000000012767         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000012769         mov        edx, dword [rax+0x10]
000000000001276c         xor        eax, eax
000000000001276e         call       j_fcntl                                     ; fcntl
0000000000012773         mov        ebx, eax
0000000000012775         jmp        loc_125f0

                     loc_1277a:
000000000001277a         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+302
000000000001277f         jmp        loc_12649

                     loc_12784:
0000000000012784         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+390
0000000000012789         jmp        loc_126a1
000000000001278e         align      16                                          ; End of unwind block (FDE at 0x18a04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fopen_safer:
0000000000012790         push       r12                                         ; Begin of unwind block (FDE at 0x18a3c), CODE XREF=randread_new+57
0000000000012792         push       rbp
0000000000012793         mov        rbp, rsi
0000000000012796         push       rbx
0000000000012797         call       j_fopen                                     ; fopen
000000000001279c         test       rax, rax
000000000001279f         mov        rbx, rax
00000000000127a2         je         loc_127b1

00000000000127a4         mov        rdi, rax                                    ; argument "__stream" for method j_fileno
00000000000127a7         call       j_fileno                                    ; fileno
00000000000127ac         cmp        eax, 0x2
00000000000127af         jbe        loc_127c0

                     loc_127b1:
00000000000127b1         mov        rax, rbx                                    ; CODE XREF=fopen_safer+18, fopen_safer+91, fopen_safer+115, fopen_safer+145
00000000000127b4         pop        rbx
00000000000127b5         pop        rbp
00000000000127b6         pop        r12
00000000000127b8         ret
                        ; endp
00000000000127b9         align      64

                     loc_127c0:
00000000000127c0         mov        edi, eax                                    ; CODE XREF=fopen_safer+31
00000000000127c2         call       dup_safer                                   ; dup_safer
00000000000127c7         test       eax, eax
00000000000127c9         mov        r12d, eax
00000000000127cc         js         loc_12808

00000000000127ce         mov        rdi, rbx
00000000000127d1         call       rpl_fclose                                  ; rpl_fclose
00000000000127d6         test       eax, eax
00000000000127d8         jne        loc_127ed

00000000000127da         mov        rsi, rbp                                    ; argument "__modes" for method j_fdopen
00000000000127dd         mov        edi, r12d                                   ; argument "__fd" for method j_fdopen
00000000000127e0         call       j_fdopen                                    ; fdopen
00000000000127e5         test       rax, rax
00000000000127e8         mov        rbx, rax
00000000000127eb         jne        loc_127b1

                     loc_127ed:
00000000000127ed         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+72
00000000000127f2         mov        ebp, dword [rax]
00000000000127f4         mov        rbx, rax
00000000000127f7         mov        edi, r12d                                   ; argument "__fd" for method j_close
00000000000127fa         call       j_close                                     ; close
00000000000127ff         mov        dword [rbx], ebp
0000000000012801         xor        ebx, ebx
0000000000012803         jmp        loc_127b1
0000000000012805         align      8

                     loc_12808:
0000000000012808         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+60
000000000001280d         mov        r12d, dword [rax]
0000000000012810         mov        rbp, rax
0000000000012813         mov        rdi, rbx
0000000000012816         call       rpl_fclose                                  ; rpl_fclose
000000000001281b         xor        ebx, ebx
000000000001281d         mov        dword [rbp], r12d
0000000000012821         jmp        loc_127b1
0000000000012823         align      16                                          ; End of unwind block (FDE at 0x18a3c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000012830         push       r15                                         ; Begin of unwind block (FDE at 0x18a6c), DATA XREF=_start+22
0000000000012832         push       r14
0000000000012834         mov        r15, rdx
0000000000012837         push       r13
0000000000012839         push       r12
000000000001283b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000012842         push       rbp
0000000000012843         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000001284a         push       rbx
000000000001284b         mov        r13d, edi
000000000001284e         mov        r14, rsi
0000000000012851         sub        rbp, r12
0000000000012854         sub        rsp, 0x8
0000000000012858         sar        rbp, 0x3
000000000001285c         call       _init                                       ; _init
0000000000012861         test       rbp, rbp
0000000000012864         je         loc_12886

0000000000012866         xor        ebx, ebx
0000000000012868         nop        dword [rax+rax]

                     loc_12870:
0000000000012870         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000012873         mov        rsi, r14
0000000000012876         mov        edi, r13d
0000000000012879         call       qword [r12+rbx*8]
000000000001287d         add        rbx, 0x1
0000000000012881         cmp        rbp, rbx
0000000000012884         jne        loc_12870

                     loc_12886:
0000000000012886         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
000000000001288a         pop        rbx
000000000001288b         pop        rbp
000000000001288c         pop        r12
000000000001288e         pop        r13
0000000000012890         pop        r14
0000000000012892         pop        r15
0000000000012894         ret
                        ; endp
0000000000012895         align      32                                          ; End of unwind block (FDE at 0x18a6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
00000000000128a0         ret                                                    ; Begin of unwind block (FDE at 0x18ab4), DATA XREF=_start+15
                        ; endp
00000000000128a2         align      16                                          ; End of unwind block (FDE at 0x18ab4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
00000000000128b0         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x18acc), __dso_handle, CODE XREF=main+130
00000000000128b7         xor        esi, esi
00000000000128b9         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
00000000000128be         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x18acc)
00000000000128bf         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x128c0; 0x128c9[ (9 bytes)
        ; File offset : [75968; 75977[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
00000000000128c0         sub        rsp, 0x8
00000000000128c4         add        rsp, 0x8
00000000000128c8         ret
                        ; endp
00000000000128c9         db  0x00 ; '.'
00000000000128ca         db  0x00 ; '.'
00000000000128cb         db  0x00 ; '.'
00000000000128cc         db  0x00 ; '.'
00000000000128cd         db  0x00 ; '.'
00000000000128ce         db  0x00 ; '.'
00000000000128cf         db  0x00 ; '.'
00000000000128d0         db  0x00 ; '.'
00000000000128d1         db  0x00 ; '.'
00000000000128d2         db  0x00 ; '.'
00000000000128d3         db  0x00 ; '.'
00000000000128d4         db  0x00 ; '.'
00000000000128d5         db  0x00 ; '.'
00000000000128d6         db  0x00 ; '.'
00000000000128d7         db  0x00 ; '.'
00000000000128d8         db  0x00 ; '.'
00000000000128d9         db  0x00 ; '.'
00000000000128da         db  0x00 ; '.'
00000000000128db         db  0x00 ; '.'
00000000000128dc         db  0x00 ; '.'
00000000000128dd         db  0x00 ; '.'
00000000000128de         db  0x00 ; '.'
00000000000128df         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x128e0; 0x15c5d[ (13181 bytes)
        ; File offset : [76000; 89181[ (13181 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
00000000000128e0         db  0x01 ; '.'
00000000000128e1         db  0x00 ; '.'
00000000000128e2         db  0x02 ; '.'
00000000000128e3         db  0x00 ; '.'
                     aPreserve:
00000000000128e4         db         "--preserve", 0                             ; DATA XREF=decode_preserve_arg+4
                     aNopreserve:
00000000000128ef         db         "--no-preserve", 0                          ; DATA XREF=decode_preserve_arg+49
                     aFailedToAccess:
00000000000128fd         db         "failed to access %s", 0                    ; DATA XREF=main+2086, target_directory_operand+153
                     aCannotMakeDire:
0000000000012911         db         "cannot make directory %s", 0               ; DATA XREF=make_dir_parents_private+1345
                     aSettingPermiss:
000000000001292a         db         "setting permissions for %s", 0             ; DATA XREF=make_dir_parents_private+1458, copy_internal+11548, set_acl+26
0000000000012945         db  0x63 ; 'c'                                         ; DATA XREF=main+838, usage+866, usage+1180, usage+1364, usage+1383, usage+1417
0000000000012946         db  0x70 ; 'p'
0000000000012947         db  0x00 ; '.'
0000000000012948         db  0x5b ; '['                                         ; DATA XREF=usage+878
0000000000012949         db  0x00 ; '.'
                     aTestInvocation:
000000000001294a         db         "test invocation", 0                        ; DATA XREF=usage+917
                     aMulticallInvoc:
000000000001295a         db         "Multi-call invocation", 0                  ; DATA XREF=usage+965
                     aSha224sum:
0000000000012970         db         "sha224sum", 0                              ; DATA XREF=usage+982
                     aSha2Utilities:
000000000001297a         db         "sha2 utilities", 0                         ; DATA XREF=usage+994
                     aSha256sum:
0000000000012989         db         "sha256sum", 0                              ; DATA XREF=usage+885
                     aSha384sum:
0000000000012993         db         "sha384sum", 0                              ; DATA XREF=usage+929
                     aSha512sum:
000000000001299d         db         "sha512sum", 0                              ; DATA XREF=usage+953
                     aNsOnlineHelpSn:
00000000000129a7         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+1066
00000000000129be         db  0x47 ; 'G'                                         ; DATA XREF=main+831, usage+1094, usage+1287, emit_bug_reporting_address+68
00000000000129bf         db  0x4e ; 'N'
00000000000129c0         db  0x55 ; 'U'
00000000000129c1         db  0x20 ; ' '
                     aCoreutils:
00000000000129c2         db         "coreutils", 0                              ; DATA XREF=main+99, main+111, usage+941
00000000000129cc         db  0x65 ; 'e'                                         ; DATA XREF=usage+1133, usage+1326
00000000000129cd         db  0x6e ; 'n'
00000000000129ce         db  0x5f ; '_'
00000000000129cf         db  0x00 ; '.'
                     aFullDocumentat:
00000000000129d0         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+1161, usage+1350
                     aSSn:
00000000000129eb         db         "%s -> %s\n", 0                             ; DATA XREF=do_copy+517
                     aMissingFileOpe:
00000000000129f5         db         "missing file operand", 0                   ; DATA XREF=do_copy+1284
                     aExtraOperandS:
0000000000012a0a         db         "extra operand %s", 0                       ; DATA XREF=do_copy+1118
                     aTargetSIsNotAD:
0000000000012a1b         db         "target %s is not a directory", 0           ; DATA XREF=main+1193, do_copy+1030
0000000000012a38         db  0x2e ; '.'                                         ; DATA XREF=do_copy+714
0000000000012a39         db  0x2e ; '.'                                         ; DATA XREF=copy_internal+3800
0000000000012a3a         db  0x00 ; '.'
                     aUsrlocalsharel:
0000000000012a3b         db         "/usr/local/share/locale", 0                ; DATA XREF=main+92
                     aPosixlycorrect:
0000000000012a53         db         "POSIXLY_CORRECT", 0                        ; DATA XREF=main+150
                     aSparse:
0000000000012a63         db         "--sparse", 0                               ; DATA XREF=main+909
                     aReflink:
0000000000012a6c         db         "--reflink", 0                              ; DATA XREF=main+983
                     aDavidMackenzie:
0000000000012a76         db         "David MacKenzie", 0                        ; DATA XREF=main+816
                     aTorbjornGranlu:
0000000000012a86         db         "Torbjorn Granlund", 0                      ; DATA XREF=main+823
                     aJimMeyering:
0000000000012a98         db         "Jim Meyering", 0                           ; DATA XREF=main+793
                     aAbdfhillnprstu:
0000000000012aa5         db         "abdfHilLnprst:uvxPRS:TZ", 0                ; DATA XREF=main+424
                     aBackupType:
0000000000012abd         db         "backup type", 0                            ; DATA XREF=main+1372
                     aMode:
0000000000012ac9         db         "mode", 0
                     aTimestamps:
0000000000012ace         db         "timestamps", 0
                     aOwnership:
0000000000012ad9         db         "ownership", 0
                     aLinks:
0000000000012ae3         db         "links", 0
                     aContext:
0000000000012ae9         db         "context", 0
                     aXattr:
0000000000012af1         db         "xattr", 0
0000000000012af7         db  0x61 ; 'a'
0000000000012af8         db  0x6c ; 'l'
0000000000012af9         db  0x6c ; 'l'
0000000000012afa         db  0x00 ; '.'
                     aArchive:
0000000000012afb         db         "archive", 0
                     aAttributesonly:
0000000000012b03         db         "attributes-only", 0
                     aBackup:
0000000000012b13         db         "backup", 0
                     aCopycontents:
0000000000012b1a         db         "copy-contents", 0
                     aForce:
0000000000012b28         db         "force", 0
                     aInteractive:
0000000000012b2e         db         "interactive", 0
                     aNoclobber:
0000000000012b3a         db         "no-clobber", 0
0000000000012b45         db  0x6e ; 'n'
0000000000012b46         db  0x6f ; 'o'
0000000000012b47         db  0x2d ; '-'
                     aDereference:
0000000000012b48         db         "dereference", 0
0000000000012b54         db  0x6e ; 'n'
0000000000012b55         db  0x6f ; 'o'
0000000000012b56         db  0x2d ; '-'
                     aTargetdirector:
0000000000012b57         db         "target-directory", 0
                     aOnefilesystem:
0000000000012b68         db         "one-file-system", 0
                     aParents:
0000000000012b78         db         "parents", 0
                     aPath:
0000000000012b80         db         "path", 0
                     aRecursive:
0000000000012b85         db         "recursive", 0
                     aRemovedestinat:
0000000000012b8f         db         "remove-destination", 0
                     aStriptrailings:
0000000000012ba2         db         "strip-trailing-slashes", 0
                     aSuffix:
0000000000012bb9         db         "suffix", 0
0000000000012bc0         db  0x73 ; 's'
0000000000012bc1         db  0x79 ; 'y'
0000000000012bc2         db  0x6d ; 'm'
0000000000012bc3         db  0x62 ; 'b'
0000000000012bc4         db  0x6f ; 'o'
0000000000012bc5         db  0x6c ; 'l'
0000000000012bc6         db  0x69 ; 'i'
0000000000012bc7         db  0x63 ; 'c'
0000000000012bc8         db  0x2d ; '-'
                     aLink:
0000000000012bc9         db         "link", 0
                     aUpdate:
0000000000012bce         db         "update", 0
                     aVerbose:
0000000000012bd5         db         "verbose", 0
                     aHelp:
0000000000012bdd         db         "help", 0
                     aVersion:
0000000000012be2         db         "version", 0
                     aAuto:
0000000000012bea         db         "auto", 0
                     aNever:
0000000000012bef         db         "never", 0
0000000000012bf5         db  0x00 ; '.'
0000000000012bf6         db  0x00 ; '.'
0000000000012bf7         db  0x00 ; '.'
0000000000012bf8         db  0x00 ; '.'
0000000000012bf9         db  0x00 ; '.'
0000000000012bfa         db  0x00 ; '.'
0000000000012bfb         db  0x00 ; '.'
0000000000012bfc         db  0x00 ; '.'
0000000000012bfd         db  0x00 ; '.'
0000000000012bfe         db  0x00 ; '.'
0000000000012bff         db  0x00 ; '.'
0000000000012c00         db  0xe8 ; '.'                                         ; DATA XREF=decode_preserve_arg+59
0000000000012c01         db  0x0c ; '.'
0000000000012c02         db  0xff ; '.'
0000000000012c03         db  0xff ; '.'
0000000000012c04         db  0xe0 ; '.'
0000000000012c05         db  0x0c ; '.'
0000000000012c06         db  0xff ; '.'
0000000000012c07         db  0xff ; '.'
0000000000012c08         db  0xd8 ; '.'
0000000000012c09         db  0x0c ; '.'
0000000000012c0a         db  0xff ; '.'
0000000000012c0b         db  0xff ; '.'
0000000000012c0c         db  0xd0 ; '.'
0000000000012c0d         db  0x0c ; '.'
0000000000012c0e         db  0xff ; '.'
0000000000012c0f         db  0xff ; '.'
0000000000012c10         db  0xc0 ; '.'
0000000000012c11         db  0x0c ; '.'
0000000000012c12         db  0xff ; '.'
0000000000012c13         db  0xff ; '.'
0000000000012c14         db  0x90 ; '.'
0000000000012c15         db  0x0c ; '.'
0000000000012c16         db  0xff ; '.'
0000000000012c17         db  0xff ; '.'
0000000000012c18         db  0xf8 ; '.'
0000000000012c19         db  0x0c ; '.'
0000000000012c1a         db  0xff ; '.'
0000000000012c1b         db  0xff ; '.'
                     switch_table_12c1c:        // switch_table
0000000000012c1c         dd         restore_default_fscreatecon_or_die.loc_3189-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_35c4-switch_table_12c1c, 201 dup (restore_default_fscreatecon_or_die.loc_35ec-switch_table_12c1c), restore_default_fscreatecon_or_die.loc_317c-switch_table_12c1c ; switch table used at 0x3050 containing 268 entries, DATA XREF=main+29
0000000000012f4c         dd         3 dup (restore_default_fscreatecon_or_die.loc_35ec-switch_table_12c1c), restore_default_fscreatecon_or_die.loc_316f-switch_table_12c1c, 3 dup (restore_default_fscreatecon_or_die.loc_35ec-switch_table_12c1c), restore_default_fscreatecon_or_die.loc_3162-switch_table_12c1c
0000000000012f6c         dd         restore_default_fscreatecon_or_die.loc_35ec-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_3158-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_3142-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_3138-switch_table_12c1c
0000000000012f7c         dd         5 dup (restore_default_fscreatecon_or_die.loc_35ec-switch_table_12c1c), restore_default_fscreatecon_or_die.loc_3111-switch_table_12c1c, 6 dup (restore_default_fscreatecon_or_die.loc_35ec-switch_table_12c1c), restore_default_fscreatecon_or_die.loc_30ce-switch_table_12c1c
0000000000012fb0         dd         restore_default_fscreatecon_or_die.loc_30af-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_35ec-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_309d-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_35ec-switch_table_12c1c
0000000000012fc0         dd         restore_default_fscreatecon_or_die.loc_3093-switch_table_12c1c, 2 dup (restore_default_fscreatecon_or_die.loc_35ec-switch_table_12c1c), restore_default_fscreatecon_or_die.loc_3089-switch_table_12c1c, 2 dup (restore_default_fscreatecon_or_die.loc_35ec-switch_table_12c1c)
0000000000012fd8         dd         restore_default_fscreatecon_or_die.loc_3082-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_35ec-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_3078-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_35ec-switch_table_12c1c
0000000000012fe8         dd         restore_default_fscreatecon_or_die.loc_3062-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_35ec-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_3158-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_3343-switch_table_12c1c
0000000000012ff8         dd         restore_default_fscreatecon_or_die.loc_32c0-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_32b6-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_32ac-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_35ec-switch_table_12c1c
0000000000013008         dd         restore_default_fscreatecon_or_die.loc_32a2-switch_table_12c1c, 7 dup (restore_default_fscreatecon_or_die.loc_35ec-switch_table_12c1c), restore_default_fscreatecon_or_die.loc_3298-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_328e-switch_table_12c1c
0000000000013030         dd         restore_default_fscreatecon_or_die.loc_3278-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_326c-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_3052-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_3222-switch_table_12c1c
0000000000013040         dd         restore_default_fscreatecon_or_die.loc_31e1-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_31d5-switch_table_12c1c, restore_default_fscreatecon_or_die.loc_31cb-switch_table_12c1c
000000000001304c         db  0x00 ; '.'
000000000001304d         db  0x00 ; '.'
000000000001304e         db  0x00 ; '.'
000000000001304f         db  0x00 ; '.'
                     preserve_vals.7370:
0000000000013050         db  0x00 ; '.'                                         ; DATA XREF=decode_preserve_arg+25, decode_preserve_arg+119
0000000000013051         db  0x00 ; '.'
0000000000013052         db  0x00 ; '.'
0000000000013053         db  0x00 ; '.'
0000000000013054         db  0x01 ; '.'
0000000000013055         db  0x00 ; '.'
0000000000013056         db  0x00 ; '.'
0000000000013057         db  0x00 ; '.'
0000000000013058         db  0x02 ; '.'
0000000000013059         db  0x00 ; '.'
000000000001305a         db  0x00 ; '.'
000000000001305b         db  0x00 ; '.'
000000000001305c         db  0x03 ; '.'
000000000001305d         db  0x00 ; '.'
000000000001305e         db  0x00 ; '.'
000000000001305f         db  0x00 ; '.'
0000000000013060         db  0x04 ; '.'
0000000000013061         db  0x00 ; '.'
0000000000013062         db  0x00 ; '.'
0000000000013063         db  0x00 ; '.'
0000000000013064         db  0x05 ; '.'
0000000000013065         db  0x00 ; '.'
0000000000013066         db  0x00 ; '.'
0000000000013067         db  0x00 ; '.'
0000000000013068         db  0x06 ; '.'
0000000000013069         db  0x00 ; '.'
000000000001306a         db  0x00 ; '.'
000000000001306b         db  0x00 ; '.'
000000000001306c         db  0x00 ; '.'
000000000001306d         db  0x00 ; '.'
000000000001306e         db  0x00 ; '.'
000000000001306f         db  0x00 ; '.'
                     reflink_type:
0000000000013070         db  0x01 ; '.'                                         ; DATA XREF=main+976, main+1001
0000000000013071         db  0x00 ; '.'
0000000000013072         db  0x00 ; '.'
0000000000013073         db  0x00 ; '.'
0000000000013074         db  0x02 ; '.'
0000000000013075         db  0x00 ; '.'
0000000000013076         db  0x00 ; '.'
0000000000013077         db  0x00 ; '.'
0000000000013078         db  0x00 ; '.'
0000000000013079         db  0x00 ; '.'
000000000001307a         db  0x00 ; '.'
000000000001307b         db  0x00 ; '.'
000000000001307c         db  0x00 ; '.'
000000000001307d         db  0x00 ; '.'
000000000001307e         db  0x00 ; '.'
000000000001307f         db  0x00 ; '.'
                     sparse_type:
0000000000013080         db  0x01 ; '.'                                         ; DATA XREF=main+902, main+927
0000000000013081         db  0x00 ; '.'
0000000000013082         db  0x00 ; '.'
0000000000013083         db  0x00 ; '.'
0000000000013084         db  0x02 ; '.'
0000000000013085         db  0x00 ; '.'
0000000000013086         db  0x00 ; '.'
0000000000013087         db  0x00 ; '.'
0000000000013088         db  0x03 ; '.'
0000000000013089         db  0x00 ; '.'
000000000001308a         db  0x00 ; '.'
000000000001308b         db  0x00 ; '.'
000000000001308c         db  0x00 ; '.'
000000000001308d         db  0x00 ; '.'
000000000001308e         db  0x00 ; '.'
000000000001308f         db  0x00 ; '.'
                     aFailedToGetAtt:
0000000000013090         db         "failed to get attributes of %s", 0         ; DATA XREF=make_dir_parents_private+996, make_dir_parents_private+1428
00000000000130af         align      16
                     aSExistsButIsNo:
00000000000130b0         db         "%s exists but is not a directory", 0       ; DATA XREF=make_dir_parents_private+1232
00000000000130d1         align      8
                     aFailedToPreser:
00000000000130d8         db         "failed to preserve times for %s", 0        ; DATA XREF=re_protect+264
                     aFailedToPreser_130f8:        // aFailedToPreser
00000000000130f8         db         "failed to preserve ownership for %s", 0    ; DATA XREF=re_protect+588, set_owner+413, copy_internal+16324
000000000001311c         align      32
                     aFailedToPreser_13120:        // aFailedToPreser
0000000000013120         db         "failed to preserve permissions for %s", 0  ; DATA XREF=re_protect+472
0000000000013146         align      8
                     aTrySHelpForMor:
0000000000013148         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
000000000001316f         align      16
                     aUsageSOptionTS:
0000000000013170         db         "Usage: %s [OPTION]... [-T] SOURCE DEST\n  or:  %s [OPTION]... SOURCE... DIRECTORY\n  or:  %s [OPTION]... -t DIRECTORY SOURCE...\n", 0 ; DATA XREF=usage+93
00000000000131ef         align      16
                     aCopySourceToDe:
00000000000131f0         db         "Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.\n", 0 ; DATA XREF=usage+138
000000000001322a         align      16
                     aNmandatoryArgu:
0000000000013230         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+175
000000000001327b         align      128
                     aAArchiveSameAs:
0000000000013280         db         "  -a, --archive                same as -dR --preserve=all\n      --attributes-only        don't copy the file data, just the attributes\n      --backup[=CONTROL]       make a backup of each existing destination file\n  -b                           like --back" ; DATA XREF=usage+212
0000000000013380         db         "up but does not accept an argument\n      --copy-contents          copy contents of special files when recursive\n  -d                           same as --no-dereference --preserve=links\n", 0
000000000001343a         align      64
                     aFForceIfAnExis:
0000000000013440         db         "  -f, --force                  if an existing destination file cannot be\n                                 opened, remove it and try again (this option\n                                 is ignored when the -n option is also used)\n  -i, --interactive         " ; DATA XREF=usage+249
0000000000013540         db         "   prompt before overwrite (overrides a previous -n\n                                  option)\n  -H                           follow command-line symbolic links in SOURCE\n", 0
00000000000135eb         align      16
                     aLLinkHardLinkF:
00000000000135f0         db         "  -l, --link                   hard link files instead of copying\n  -L, --dereference            always follow symbolic links in SOURCE\n", 0 ; DATA XREF=usage+286
0000000000013679         align      128
                     aNNoclobberDoNo:
0000000000013680         db         "  -n, --no-clobber             do not overwrite an existing file (overrides\n                                 a previous -i option)\n  -P, --no-dereference         never follow symbolic links in SOURCE\n", 0 ; DATA XREF=usage+323
0000000000013749         align      16
                     aPSameAsPreserv:
0000000000013750         db         "  -p                           same as --preserve=mode,ownership,timestamps\n      --preserve[=ATTR_LIST]   preserve the specified attributes (default:\n                                 mode,ownership,timestamps), if possible\n                                " ; DATA XREF=usage+360
0000000000013850         db         " additional attributes: context, links, xattr,\n                                 all\n", 0
00000000000138a5         align      8
                     aNopreserveattr:
00000000000138a8         db         "      --no-preserve=ATTR_LIST  don't preserve the specified attributes\n      --parents                use full source file name under DIRECTORY\n", 0 ; DATA XREF=usage+397
0000000000013939         align      64
                     aRRRecursiveCop:
0000000000013940         db         "  -R, -r, --recursive          copy directories recursively\n      --reflink[=WHEN]         control clone/CoW copies. See below\n      --remove-destination     remove each existing destination file before\n                                 attempting to open i" ; DATA XREF=usage+434
0000000000013a40         db         "t (contrast with --force)\n", 0
0000000000013a5b         align      32
                     aSparsewhenCont:
0000000000013a60         db         "      --sparse=WHEN            control creation of sparse files. See below\n      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\n                                 argument\n", 0 ; DATA XREF=usage+471
0000000000013b23         align      8
                     aSSymboliclinkM:
0000000000013b28         db         "  -s, --symbolic-link          make symbolic links instead of copying\n  -S, --suffix=SUFFIX          override the usual backup suffix\n  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\n  -T, --no-target-directory    treat DEST as " ; DATA XREF=usage+508
0000000000013c28         db         "a normal file\n", 0
0000000000013c37         align      8
                     aUUpdateCopyOnl:
0000000000013c38         db         "  -u, --update                 copy only when the SOURCE file is newer\n                                 than the destination file or when the\n                                 destination file is missing\n  -v, --verbose                explain what is being " ; DATA XREF=usage+545
0000000000013d38         db         "done\n  -x, --one-file-system        stay on this file system\n", 0
0000000000013d76         align      8
                     aZSetSelinuxSec:
0000000000013d78         db         "  -Z                           set SELinux security context of destination\n                                 file to default type\n      --context[=CTX]          like -Z, or if CTX is specified then set the\n                                 SELinux or SMACK s" ; DATA XREF=usage+582
0000000000013e78         db         "ecurity context to CTX\n", 0
                     aHelpDisplayThi:
0000000000013e90         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+619
0000000000013ebd         align      64
                     aVersionOutputV:
0000000000013ec0         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+656
0000000000013ef6         align      8
                     aNbyDefaultSpar:
0000000000013ef8         db         "\nBy default, sparse SOURCE files are detected by a crude heuristic and the\ncorresponding DEST file is made sparse as well.  That is the behavior\nselected by --sparse=auto.  Specify --sparse=always to create a sparse DEST\nfile whenever the SOURCE file conta" ; DATA XREF=usage+693
0000000000013ff8         db         "ins a long enough sequence of zero bytes.\nUse --sparse=never to inhibit creation of sparse files.\n", 0
000000000001405b         align      32
                     aNwhenReflinkal:
0000000000014060         db         "\nWhen --reflink[=always] is specified, perform a lightweight copy, where the\ndata blocks are copied only when modified.  If this is not possible the copy\nfails, or if --reflink=auto is specified, fall back to a standard copy.\nUse --reflink=never to ensure " ; DATA XREF=usage+730
0000000000014160         db         "a standard copy is performed.\n", 0
000000000001417f         align      128
                     aNtheBackupSuff:
0000000000014180         db         "\nThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\nThe version control method may be selected via the --backup option or through\nthe VERSION_CONTROL environment variable.  Here are the values:\n\n", 0 ; DATA XREF=usage+767
000000000001425d         align      32
                     aNoneOffNeverMa:
0000000000014260         db         "  none, off       never make backups (even if --backup is given)\n  numbered, t     make numbered backups\n  existing, nil   numbered if numbered backups exist, simple otherwise\n  simple, never   always make simple backups\n", 0 ; DATA XREF=usage+804
000000000001433e         align      64
                     aNasASpecialCas:
0000000000014340         db         "\nAs a special case, cp makes a backup of SOURCE when the force and backup\noptions are given and SOURCE and DEST are the same name for an existing,\nregular file.\n", 0 ; DATA XREF=usage+841
00000000000143e2         align      8
                     aHttpswwwgnuorg:
00000000000143e8         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+1087, usage+1187, usage+1280, usage+1390, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000014410         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1431
0000000000014457         align      8
                     aOrAvailableLoc:
0000000000014458         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+1230
000000000001448b         align      16
                     aMissingDestina:
0000000000014490         db         "missing destination file operand after %s", 0 ; DATA XREF=do_copy+1230
00000000000144ba         align      64
                     aCannotCombineT:
00000000000144c0         db         "cannot combine --target-directory (-t) and --no-target-directory (-T)", 0 ; DATA XREF=do_copy+1167
0000000000014506         align      8
                     aWithParentsThe:
0000000000014508         db         "with --parents, the destination must be a directory", 0 ; DATA XREF=do_copy+1244
000000000001453c         align      64
                     aMultipleTarget:
0000000000014540         db         "multiple target directories specified", 0  ; DATA XREF=main+1926
0000000000014566         align      8
                     aWarningIgnorin:
0000000000014568         db         "warning: ignoring --context; it requires an SELinux-enabled kernel", 0 ; DATA XREF=main+1277
00000000000145ab         align      16
                     aCannotMakeBoth:
00000000000145b0         db         "cannot make both hard and symbolic links", 0 ; DATA XREF=main+1602
00000000000145d9         align      32
                     aOptionsBackupA:
00000000000145e0         db         "options --backup and --no-clobber are mutually exclusive", 0 ; DATA XREF=main+1883
0000000000014619         align      32
                     aReflinkCanBeUs:
0000000000014620         db         "--reflink can be used only with --sparse=auto", 0 ; DATA XREF=main+1659
000000000001464e         align      16
                     aCannotSetTarge:
0000000000014650         db         "cannot set target context and preserve it", 0 ; DATA XREF=main+1714
000000000001467a         align      128
                     aCannotPreserve_14680:        // aCannotPreserve
0000000000014680         db         "cannot preserve security context without an SELinux-enabled kernel", 0 ; DATA XREF=main+1840
00000000000146c3         align      8
                     aFailedToSetDef:
00000000000146c8         db         "failed to set default file creation context to %s", 0 ; DATA XREF=main+2027
00000000000146fa         align      256
                     aCannotPreserve:
0000000000014700         db         "cannot preserve extended attributes, cp is built without xattr support", 0 ; DATA XREF=main+1967
0000000000014747         align      8
                     aFailedToRestor:
0000000000014748         db         "failed to restore the default file creation context", 0 ; DATA XREF=restore_default_fscreatecon_or_die+6
000000000001477c         align      128
                     aCannotCreateHa:
0000000000014780         db         "cannot create hard link %s to %s", 0       ; DATA XREF=create_hard_link+204
00000000000147a1         align      8
                     aSReplaceSOverr:
00000000000147a8         db         "%s: replace %s, overriding mode %04lo (%s)? ", 0 ; DATA XREF=overwrite_ok.isra.12+134
00000000000147d5         align      8
                     aSUnwritableSMo:
00000000000147d8         db         "%s: unwritable %s (mode %04lo, %s); try anyway? ", 0 ; DATA XREF=overwrite_ok.isra.12+304
0000000000014809         align      16
                     aFailedToGetSec:
0000000000014810         db         "failed to get security context of %s", 0   ; DATA XREF=set_process_security_ctx+58
0000000000014835         align      8
                     aFailedToSetThe:
0000000000014838         db         "failed to set the security context of %s", 0 ; DATA XREF=set_file_security_ctx+51
0000000000014861         align      8
                     aRNotSpecifiedO:
0000000000014868         db         "-r not specified; omitting directory %s", 0 ; DATA XREF=copy_internal+3065
                     aWarningSourceF:
0000000000014890         db         "warning: source file %s specified more than once", 0 ; DATA XREF=copy_internal+6457
00000000000148c1         align      8
                     aCannotOverwrit_148c8:        // aCannotOverwrit
00000000000148c8         db         "cannot overwrite non-directory %s with directory %s", 0 ; DATA XREF=copy_internal+9135
00000000000148fc         align      256
                     aWillNotOverwri:
0000000000014900         db         "will not overwrite just-created %s with %s", 0 ; DATA XREF=copy_internal+11081
000000000001492b         align      16
                     aCannotOverwrit:
0000000000014930         db         "cannot overwrite directory %s with non-directory", 0 ; DATA XREF=copy_internal+4867
0000000000014961         align      8
                     aCannotMoveDire:
0000000000014968         db         "cannot move directory onto non-directory: %s -> %s", 0 ; DATA XREF=copy_internal+9632
000000000001499b         align      32
                     aBackingUpSMigh:
00000000000149a0         db         "backing up %s might destroy source;  %s not moved", 0 ; DATA XREF=copy_internal+10516
00000000000149d2         align      8
                     aBackingUpSMigh_149d8:        // aBackingUpSMigh
00000000000149d8         db         "backing up %s might destroy source;  %s not copied", 0 ; DATA XREF=copy_internal+11126
0000000000014a0b         align      16
                     aWillNotCopySTh:
0000000000014a10         db         "will not copy %s through just-created symlink %s", 0 ; DATA XREF=copy_internal+1049
0000000000014a41         align      8
                     aCannotCopyADir:
0000000000014a48         db         "cannot copy a directory, %s, into itself, %s", 0 ; DATA XREF=copy_internal+4306
0000000000014a75         align      8
                     aWarningSourceD:
0000000000014a78         db         "warning: source directory %s specified more than once", 0 ; DATA XREF=copy_internal+9947
0000000000014aae         align      16
                     aWillNotCreateH:
0000000000014ab0         db         "will not create hard link %s to directory %s", 0 ; DATA XREF=copy_internal+8257
0000000000014add         align      32
                     aCannotMoveSToA:
0000000000014ae0         db         "cannot move %s to a subdirectory of itself, %s", 0 ; DATA XREF=copy_internal+6620
0000000000014b0f         align      16
                     aInterdeviceMov:
0000000000014b10         db         "inter-device move failed: %s to %s; unable to remove target", 0 ; DATA XREF=copy_internal+6762
0000000000014b4c         align      16
                     aCannotCreateSy_14b50:        // aCannotCreateSy
0000000000014b50         db         "cannot create symbolic link %s to %s", 0   ; DATA XREF=copy_internal+3936
0000000000014b75         align      8
                     aSkippingFileSA:
0000000000014b78         db         "skipping file %s, as it was replaced while being copied", 0 ; DATA XREF=copy_internal+8483
                     aNotWritingThro:
0000000000014bb0         db         "not writing through dangling symlink %s", 0 ; DATA XREF=copy_internal+16415
                     aSFailedToGetEx:
0000000000014bd8         db         "%s: failed to get extents info", 0         ; DATA XREF=copy_internal+16203
0000000000014bf7         align      8
                     aCannotCopyCycl:
0000000000014bf8         db         "cannot copy cyclic symbolic link %s", 0    ; DATA XREF=copy_internal+2969
0000000000014c1c         align      32
                     aSCanMakeRelati:
0000000000014c20         db         "%s: can make relative symbolic links only in current directory", 0 ; DATA XREF=copy_internal+8775
0000000000014c5f         align      32
                     aCannotCreateSy:
0000000000014c60         db         "cannot create symbolic link %s", 0         ; DATA XREF=copy_internal+11475
0000000000014c7f         align      128
                     aValidbackuptyp:
0000000000014c80         db         "VALID_BACKUP_TYPE (co->backup_type)", 0    ; DATA XREF=copy+309
0000000000014ca4         align      8
                     aValidsparsemod:
0000000000014ca8         db         "VALID_SPARSE_MODE (co->sparse_mode)", 0    ; DATA XREF=copy+278
0000000000014ccc         align      16
                     aValidreflinkmo:
0000000000014cd0         db         "VALID_REFLINK_MODE (co->reflink_mode)", 0  ; DATA XREF=copy+247
0000000000014cf6         align      8
                     aCohardlinkCosy:
0000000000014cf8         db         "!(co->hard_link && co->symbolic_link)", 0  ; DATA XREF=copy+180
0000000000014d1e         align      32
                     aCoreflinkmodeR:
0000000000014d20         db         "! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)", 0 ; DATA XREF=copy+211
                     aSS:
0000000000014d69         db         "%s -> %s", 0                               ; DATA XREF=emit_verbose+46
                     aBackupS:
0000000000014d72         db         " (backup: %s)", 0                          ; DATA XREF=emit_verbose+89
                     aRemovedSn:
0000000000014d80         db         "removed %s\n", 0                           ; DATA XREF=create_hard_link+109, copy_internal+11626, copy_internal+13163
                     aSOverwriteS:
0000000000014d8c         db         "%s: overwrite %s? ", 0                     ; DATA XREF=overwrite_ok.isra.12+213
                     aCannotLseekS:
0000000000014d9f         db         "cannot lseek %s", 0                        ; DATA XREF=create_hole+181, copy_internal+16598
                     aErrorDeallocat:
0000000000014daf         db         "error deallocating %s", 0                  ; DATA XREF=create_hole+97, copy_internal+15522
                     aErrorReadingS:
0000000000014dc5         db         "error reading %s", 0                       ; DATA XREF=sparse_copy+222
                     aErrorWritingS:
0000000000014dd6         db         "error writing %s", 0                       ; DATA XREF=sparse_copy+975
                     aOverflowReadin:
0000000000014de7         db         "overflow reading %s", 0                    ; DATA XREF=sparse_copy+898
                     aClearingPermis:
0000000000014dfb         db         "clearing permissions for %s", 0            ; DATA XREF=set_owner+355
                     aCannotStatS:
0000000000014e17         db         "cannot stat %s", 0                         ; DATA XREF=copy_internal+2287, copy_internal+3701, copy_internal+9918
                     aOmittingDirect:
0000000000014e26         db         "omitting directory %s", 0                  ; DATA XREF=copy_internal+6544
                     aSAndSAreTheSam:
0000000000014e3c         db         "%s and %s are the same file", 0            ; DATA XREF=copy_internal+5676
                     aCannotBackupS:
0000000000014e58         db         "cannot backup %s", 0                       ; DATA XREF=copy_internal+10050
                     aCannotRemoveS:
0000000000014e69         db         "cannot remove %s", 0                       ; DATA XREF=copy_internal+9253, copy_internal+16279
                     aRenamed:
0000000000014e7a         db         "renamed ", 0                               ; DATA XREF=copy_internal+5008
                     aCannotMoveSToS:
0000000000014e83         db         "cannot move %s to %s", 0                   ; DATA XREF=copy_internal+4500
                     aCopied:
0000000000014e98         db         "copied ", 0                                ; DATA XREF=copy_internal+9008
                     aCannotCreateDi:
0000000000014ea0         db         "cannot create directory %s", 0             ; DATA XREF=copy_internal+5328
                     aCreatedDirecto:
0000000000014ebb         db         "created directory %s\n", 0                 ; DATA XREF=copy_internal+7449
                     aCannotAccessS:
0000000000014ed1         db         "cannot access %s", 0                       ; DATA XREF=copy_internal+11305
                     aCannotOpenSFor:
0000000000014ee2         db         "cannot open %s for reading", 0             ; DATA XREF=copy_internal+10212
                     aCannotFstatS:
0000000000014efd         db         "cannot fstat %s", 0                        ; DATA XREF=copy_internal+10776, copy_internal+14983
                     aCannotCreateRe:
0000000000014f0d         db         "cannot create regular file %s", 0          ; DATA XREF=copy_internal+13430
                     aFailedToCloneS:
0000000000014f2b         db         "failed to clone %s from %s", 0             ; DATA XREF=copy_internal+15770
                     aSWriteFailed:
0000000000014f46         db         "%s: write failed", 0                       ; DATA XREF=copy_internal+16116
                     aFailedToExtend:
0000000000014f57         db         "failed to extend %s", 0                    ; DATA XREF=copy_internal+15243
                     aPreservingTime:
0000000000014f6b         db         "preserving times for %s", 0                ; DATA XREF=copy_internal+1691, copy_internal+14896
                     aPreservingPerm:
0000000000014f83         db         "preserving permissions for %s", 0          ; DATA XREF=copy_internal+1979, copy_internal+14032, copy_acl+35
                     aFailedToCloseS:
0000000000014fa1         db         "failed to close %s", 0                     ; DATA XREF=copy_internal+11224, copy_internal+13000
                     aCannotCreateFi:
0000000000014fb4         db         "cannot create fifo %s", 0                  ; DATA XREF=copy_internal+10747
                     aCannotCreateSp:
0000000000014fca         db         "cannot create special file %s", 0          ; DATA XREF=copy_internal+9748
                     aCannotReadSymb:
0000000000014fe8         db         "cannot read symbolic link %s", 0           ; DATA XREF=copy_internal+13532
                     aSHasUnknownFil:
0000000000015005         db         "%s has unknown file type", 0               ; DATA XREF=copy_internal+6395
                     aCannotUnbackup:
000000000001501e         db         "cannot un-backup %s", 0                    ; DATA XREF=copy_internal+6265
                     aSSUnbackupn:
0000000000015032         db         "%s -> %s (unbackup)\n", 0                  ; DATA XREF=copy_internal+4101
                     aCoreutils831sr:
0000000000015047         db         "../coreutils-8.31/src/copy.c", 0           ; DATA XREF=copy+173, copy+204, copy+240, copy+271, copy+302, copy+333
                     aCoNull:
0000000000015064         db         "co != NULL", 0                             ; DATA XREF=copy+340
000000000001506f         align      16
                     __PRETTY_FUNCTION__.7875:
0000000000015070         db         "valid_options", 0                          ; DATA XREF=copy+166, copy+197, copy+233, copy+264, copy+295, copy+326
000000000001507e         align      128
                     aCoreutils831sr_15080:        // aCoreutils831sr
0000000000015080         db         "../coreutils-8.31/src/extent-scan.c", 0    ; DATA XREF=extent_scan_read+497, extent_scan_read+737
00000000000150a4         align      8
                     aScaneicountSiz:
00000000000150a8         db         "scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents", 0 ; DATA XREF=extent_scan_read+744
00000000000150df         align      32
                     aFmextentsifelo:
00000000000150e0         db         "fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length", 0 ; DATA XREF=extent_scan_read+504
                     __PRETTY_FUNCTION__.6956:
0000000000015120         db         "extent_scan_read", 0                       ; DATA XREF=extent_scan_read+490, extent_scan_read+730
                     a831:
0000000000015131         db         "8.31", 0                                   ; DATA XREF=Version
                     aInvalidArgumen:
0000000000015136         db         "invalid argument %s for %s", 0             ; DATA XREF=argmatch_invalid+96
                     aAmbiguousArgum:
0000000000015151         db         "ambiguous argument %s for %s", 0           ; DATA XREF=argmatch_invalid+21
                     aValidArguments:
000000000001516e         db         "Valid arguments are:", 0                   ; DATA XREF=argmatch_valid+18
                     aNS:
0000000000015183         db         "\n  - %s", 0                               ; DATA XREF=argmatch_valid+102
000000000001518b         db  0x2c ; ','                                         ; DATA XREF=argmatch_valid+181
000000000001518c         db  0x20 ; ' '
000000000001518d         db  0x25 ; '%'                                         ; DATA XREF=copy_acl+114, close_stdin+242, close_stdout+143, same_nameat.part.0+223, same_nameat.part.0+263, xalloc_die+29
000000000001518e         db  0x73 ; 's'
000000000001518f         db  0x00 ; '.'
0000000000015190         db  0x7e ; '~'                                         ; DATA XREF=set_simple_backup_suffix+14
0000000000015191         db  0x00 ; '.'
                     aSimplebackupsu:
0000000000015192         db         "SIMPLE_BACKUP_SUFFIX", 0                   ; DATA XREF=set_simple_backup_suffix+48
00000000000151a7         db  0x24 ; '$'                                         ; DATA XREF=xget_version+36
                     aVersioncontrol:
00000000000151a8         db         "VERSION_CONTROL", 0                        ; DATA XREF=xget_version+10
                     aNone:
00000000000151b8         db         "none", 0
00000000000151bd         db  0x6f ; 'o'
00000000000151be         db  0x66 ; 'f'
00000000000151bf         db  0x66 ; 'f'
00000000000151c0         db  0x00 ; '.'
                     aSimple:
00000000000151c1         db         "simple", 0
                     aExisting:
00000000000151c8         db         "existing", 0
00000000000151d1         db  0x6e ; 'n'
00000000000151d2         db  0x69 ; 'i'
00000000000151d3         db  0x6c ; 'l'
00000000000151d4         db  0x00 ; '.'
                     aNumbered:
00000000000151d5         db         "numbered", 0
00000000000151de         db  0x00 ; '.'
00000000000151df         db  0x00 ; '.'
                     backup_types:
00000000000151e0         db  0x00 ; '.'                                         ; DATA XREF=get_version.part.0+18, get_version.part.0+36
00000000000151e1         db  0x00 ; '.'
00000000000151e2         db  0x00 ; '.'
00000000000151e3         db  0x00 ; '.'
00000000000151e4         db  0x00 ; '.'
00000000000151e5         db  0x00 ; '.'
00000000000151e6         db  0x00 ; '.'
00000000000151e7         db  0x00 ; '.'
00000000000151e8         db  0x01 ; '.'
00000000000151e9         db  0x00 ; '.'
00000000000151ea         db  0x00 ; '.'
00000000000151eb         db  0x00 ; '.'
00000000000151ec         db  0x01 ; '.'
00000000000151ed         db  0x00 ; '.'
00000000000151ee         db  0x00 ; '.'
00000000000151ef         db  0x00 ; '.'
00000000000151f0         db  0x02 ; '.'
00000000000151f1         db  0x00 ; '.'
00000000000151f2         db  0x00 ; '.'
00000000000151f3         db  0x00 ; '.'
00000000000151f4         db  0x02 ; '.'
00000000000151f5         db  0x00 ; '.'
00000000000151f6         db  0x00 ; '.'
00000000000151f7         db  0x00 ; '.'
00000000000151f8         db  0x03 ; '.'
00000000000151f9         db  0x00 ; '.'
00000000000151fa         db  0x00 ; '.'
00000000000151fb         db  0x00 ; '.'
00000000000151fc         db  0x03 ; '.'
00000000000151fd         db  0x00 ; '.'
00000000000151fe         db  0x00 ; '.'
00000000000151ff         db  0x00 ; '.'
                     aErrorClosingFi:
0000000000015200         db         "error closing file", 0                     ; DATA XREF=close_stdin+88
                     aSS_15213:        // aSS
0000000000015213         db         "%s: %s", 0                                 ; DATA XREF=close_stdin+141, close_stdout+108
                     aWriteError:
000000000001521a         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aEntriesLun:
0000000000015226         db         "# entries:         %lu\n", 0               ; DATA XREF=hash_print_statistics+101
                     aBucketsLun:
000000000001523e         db         "# buckets:         %lu\n", 0               ; DATA XREF=hash_print_statistics+123
                     aMaxBucketLengt:
0000000000015256         db         "max bucket length: %lu\n", 0               ; DATA XREF=hash_print_statistics+232
000000000001526e         align      16
                     aBucketsUsedLu2:
0000000000015270         db         "# buckets used:    %lu (%.2f%%)\n", 0      ; DATA XREF=hash_print_statistics+188
0000000000015291         db  0x00 ; '.'
0000000000015292         db  0x00 ; '.'
0000000000015293         db  0x00 ; '.'
0000000000015294         db  0x00 ; '.'
0000000000015295         db  0x00 ; '.'
0000000000015296         db  0x00 ; '.'
0000000000015297         db  0x00 ; '.'
0000000000015298         db  0x00 ; '.'
0000000000015299         db  0x00 ; '.'
000000000001529a         db  0x00 ; '.'
000000000001529b         db  0x00 ; '.'
000000000001529c         db  0x00 ; '.'
000000000001529d         db  0x00 ; '.'
000000000001529e         db  0x00 ; '.'
000000000001529f         db  0x00 ; '.'
                     default_tuning:
00000000000152a0         db  0x00 ; '.'                                         ; DATA XREF=check_tuning.isra.0+3, hash_initialize+272
00000000000152a1         db  0x00 ; '.'
00000000000152a2         db  0x00 ; '.'
00000000000152a3         db  0x00 ; '.'
00000000000152a4         db  0x00 ; '.'
00000000000152a5         db  0x00 ; '.'
00000000000152a6         db  0x80 ; '.'
00000000000152a7         db  0x3f ; '?'
00000000000152a8         db  0xcd ; '.'
00000000000152a9         db  0xcc ; '.'
00000000000152aa         db  0x4c ; 'L'
00000000000152ab         db  0x3f ; '?'
00000000000152ac         db  0xf4 ; '.'
00000000000152ad         db  0xfd ; '.'
00000000000152ae         db  0xb4 ; '.'
00000000000152af         db  0x3f ; '?'
00000000000152b0         db  0x00 ; '.'
00000000000152b1         db  0x00 ; '.'
00000000000152b2         db  0x00 ; '.'
00000000000152b3         db  0x00 ; '.'
                     float_152b4:        // float
00000000000152b4         dd         0.1f                                        ; DATA XREF=check_tuning.isra.0+25, check_tuning.isra.0+74
                     float_152b8:        // float
00000000000152b8         dd         0.9f                                        ; DATA XREF=check_tuning.isra.0+34
                     float_152bc:        // float
00000000000152bc         dd         1.1f                                        ; DATA XREF=check_tuning.isra.0+52
                     float_152c0:        // float
00000000000152c0         dd         0.0f                                        ; DATA XREF=check_tuning.isra.0+65
                     float_152c4:        // float
00000000000152c4         dd         1.0f                                        ; DATA XREF=check_tuning.isra.0+92
                     float_152c8:        // float
00000000000152c8         dd         0.8f                                        ; DATA XREF=hash_initialize+290
                     float_152cc:        // float
00000000000152cc         dd         1.84467e+19f                                ; DATA XREF=hash_initialize+318, hash_rehash+64, hash_insert_if_absent+413
                     float_152d0:        // float
00000000000152d0         dd         9.22337e+18f                                ; DATA XREF=hash_initialize+327, hash_initialize+336, hash_rehash+77, hash_rehash+90, hash_insert_if_absent+422, hash_insert_if_absent+608, hash_delete+250, hash_delete+400
00000000000152d4         align      2
00000000000152de         db  0x59 ; 'Y'
00000000000152df         db  0x40 ; '@'
                     aANullArgv0WasP:
00000000000152e0         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000015318         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000015320         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000015321         db  0x74 ; 't'
0000000000015322         db  0x2d ; '-'
0000000000015323         db  0x00 ; '.'
0000000000015324         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000015325         db  0x80 ; '.'
0000000000015326         db  0x98 ; '.'
0000000000015327         db  0x00 ; '.'
0000000000015328         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000015329         db  0x80 ; '.'
000000000001532a         db  0x99 ; '.'
000000000001532b         db  0x00 ; '.'
000000000001532c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
000000000001532d         db  0x07 ; '.'
000000000001532e         db  0x65 ; 'e'
000000000001532f         db  0x00 ; '.'
0000000000015330         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000015331         db  0xaf ; '.'
0000000000015332         db  0x00 ; '.'
0000000000015333         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_d940+1451, sub_d940+1493, sub_d940+2429
0000000000015334         db  0x00 ; '.'
0000000000015335         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_d940+132, sub_d940+1338, sub_d940+1670, sub_d940+1697, sub_d940+2352
0000000000015336         db  0x00 ; '.'
0000000000015337         db  0x60 ; '`'                                         ; DATA XREF=sub_d940+1627, sub_d940+1654
0000000000015338         db  0x00 ; '.'
                     aLiteral:
0000000000015339         db         "literal", 0
                     aShell:
0000000000015341         db         "shell", 0
                     aShellalways:
0000000000015347         db         "shell-always", 0
0000000000015354         db  0x73 ; 's'
0000000000015355         db  0x68 ; 'h'
0000000000015356         db  0x65 ; 'e'
0000000000015357         db  0x6c ; 'l'
0000000000015358         db  0x6c ; 'l'
0000000000015359         db  0x2d ; '-'
                     aEscape:
000000000001535a         db         "escape", 0
0000000000015361         db  0x73 ; 's'
0000000000015362         db  0x68 ; 'h'
0000000000015363         db  0x65 ; 'e'
0000000000015364         db  0x6c ; 'l'
0000000000015365         db  0x6c ; 'l'
0000000000015366         db  0x2d ; '-'
0000000000015367         db  0x65 ; 'e'
0000000000015368         db  0x73 ; 's'
0000000000015369         db  0x63 ; 'c'
000000000001536a         db  0x61 ; 'a'
000000000001536b         db  0x70 ; 'p'
000000000001536c         db  0x65 ; 'e'
000000000001536d         db  0x2d ; '-'
                     aAlways:
000000000001536e         db         "always", 0
                     aCmaybe:
0000000000015375         db         "c-maybe", 0
                     aClocale:
000000000001537d         db         "clocale", 0
0000000000015385         align      32
                     switch_table_153a0:        // switch_table
00000000000153a0         dd         quotearg_buffer_restyled.loc_e03a-switch_table_153a0, quotearg_buffer_restyled.loc_d293-switch_table_153a0, quotearg_buffer_restyled.loc_e268-switch_table_153a0, quotearg_buffer_restyled.loc_e074-switch_table_153a0 ; switch table used at 0xd291 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
00000000000153b0         dd         quotearg_buffer_restyled.loc_de64-switch_table_153a0, quotearg_buffer_restyled.loc_dec0-switch_table_153a0, quotearg_buffer_restyled.loc_df15-switch_table_153a0, quotearg_buffer_restyled.loc_df5a-switch_table_153a0
00000000000153c0         dd         3 dup (quotearg_buffer_restyled.loc_df94-switch_table_153a0)
00000000000153cc         db  0x44 ; 'D'                                         ; DATA XREF=quotearg_buffer_restyled+477
00000000000153cd         db  0x82 ; '.'
00000000000153ce         db  0xff ; '.'
00000000000153cf         db  0xff ; '.'
00000000000153d0         db  0x2c ; ','
00000000000153d1         db  0x83 ; '.'
00000000000153d2         db  0xff ; '.'
00000000000153d3         db  0xff ; '.'
00000000000153d4         db  0x2c ; ','
00000000000153d5         db  0x83 ; '.'
00000000000153d6         db  0xff ; '.'
00000000000153d7         db  0xff ; '.'
00000000000153d8         db  0x2c ; ','
00000000000153d9         db  0x83 ; '.'
00000000000153da         db  0xff ; '.'
00000000000153db         db  0xff ; '.'
00000000000153dc         db  0x2c ; ','
00000000000153dd         db  0x83 ; '.'
00000000000153de         db  0xff ; '.'
00000000000153df         db  0xff ; '.'
00000000000153e0         db  0x2c ; ','
00000000000153e1         db  0x83 ; '.'
00000000000153e2         db  0xff ; '.'
00000000000153e3         db  0xff ; '.'
00000000000153e4         db  0x2c ; ','
00000000000153e5         db  0x83 ; '.'
00000000000153e6         db  0xff ; '.'
00000000000153e7         db  0xff ; '.'
00000000000153e8         db  0x84 ; '.'
00000000000153e9         db  0x82 ; '.'
00000000000153ea         db  0xff ; '.'
00000000000153eb         db  0xff ; '.'
00000000000153ec         db  0x8c ; '.'
00000000000153ed         db  0x81 ; '.'
00000000000153ee         db  0xff ; '.'
00000000000153ef         db  0xff ; '.'
00000000000153f0         db  0x4c ; 'L'
00000000000153f1         db  0x81 ; '.'
00000000000153f2         db  0xff ; '.'
00000000000153f3         db  0xff ; '.'
00000000000153f4         db  0x14 ; '.'
00000000000153f5         db  0x83 ; '.'
00000000000153f6         db  0xff ; '.'
00000000000153f7         db  0xff ; '.'
00000000000153f8         db  0x04 ; '.'
00000000000153f9         db  0x83 ; '.'
00000000000153fa         db  0xff ; '.'
00000000000153fb         db  0xff ; '.'
00000000000153fc         db  0xf4 ; '.'
00000000000153fd         db  0x82 ; '.'
00000000000153fe         db  0xff ; '.'
00000000000153ff         db  0xff ; '.'
0000000000015400         db  0xe4 ; '.'
0000000000015401         db  0x82 ; '.'
0000000000015402         db  0xff ; '.'
0000000000015403         db  0xff ; '.'
0000000000015404         db  0x2c ; ','
0000000000015405         db  0x83 ; '.'
0000000000015406         db  0xff ; '.'
0000000000015407         db  0xff ; '.'
0000000000015408         db  0x2c ; ','
0000000000015409         db  0x83 ; '.'
000000000001540a         db  0xff ; '.'
000000000001540b         db  0xff ; '.'
000000000001540c         db  0x2c ; ','
000000000001540d         db  0x83 ; '.'
000000000001540e         db  0xff ; '.'
000000000001540f         db  0xff ; '.'
0000000000015410         db  0x2c ; ','
0000000000015411         db  0x83 ; '.'
0000000000015412         db  0xff ; '.'
0000000000015413         db  0xff ; '.'
0000000000015414         db  0x2c ; ','
0000000000015415         db  0x83 ; '.'
0000000000015416         db  0xff ; '.'
0000000000015417         db  0xff ; '.'
0000000000015418         db  0x2c ; ','
0000000000015419         db  0x83 ; '.'
000000000001541a         db  0xff ; '.'
000000000001541b         db  0xff ; '.'
000000000001541c         db  0x2c ; ','
000000000001541d         db  0x83 ; '.'
000000000001541e         db  0xff ; '.'
000000000001541f         db  0xff ; '.'
0000000000015420         db  0x2c ; ','
0000000000015421         db  0x83 ; '.'
0000000000015422         db  0xff ; '.'
0000000000015423         db  0xff ; '.'
0000000000015424         db  0x2c ; ','
0000000000015425         db  0x83 ; '.'
0000000000015426         db  0xff ; '.'
0000000000015427         db  0xff ; '.'
0000000000015428         db  0x2c ; ','
0000000000015429         db  0x83 ; '.'
000000000001542a         db  0xff ; '.'
000000000001542b         db  0xff ; '.'
000000000001542c         db  0x2c ; ','
000000000001542d         db  0x83 ; '.'
000000000001542e         db  0xff ; '.'
000000000001542f         db  0xff ; '.'
0000000000015430         db  0x2c ; ','
0000000000015431         db  0x83 ; '.'
0000000000015432         db  0xff ; '.'
0000000000015433         db  0xff ; '.'
0000000000015434         db  0x2c ; ','
0000000000015435         db  0x83 ; '.'
0000000000015436         db  0xff ; '.'
0000000000015437         db  0xff ; '.'
0000000000015438         db  0x2c ; ','
0000000000015439         db  0x83 ; '.'
000000000001543a         db  0xff ; '.'
000000000001543b         db  0xff ; '.'
000000000001543c         db  0x2c ; ','
000000000001543d         db  0x83 ; '.'
000000000001543e         db  0xff ; '.'
000000000001543f         db  0xff ; '.'
0000000000015440         db  0x2c ; ','
0000000000015441         db  0x83 ; '.'
0000000000015442         db  0xff ; '.'
0000000000015443         db  0xff ; '.'
0000000000015444         db  0x2c ; ','
0000000000015445         db  0x83 ; '.'
0000000000015446         db  0xff ; '.'
0000000000015447         db  0xff ; '.'
0000000000015448         db  0x2c ; ','
0000000000015449         db  0x83 ; '.'
000000000001544a         db  0xff ; '.'
000000000001544b         db  0xff ; '.'
000000000001544c         db  0xd4 ; '.'
000000000001544d         db  0x82 ; '.'
000000000001544e         db  0xff ; '.'
000000000001544f         db  0xff ; '.'
0000000000015450         db  0xc4 ; '.'
0000000000015451         db  0x82 ; '.'
0000000000015452         db  0xff ; '.'
0000000000015453         db  0xff ; '.'
0000000000015454         db  0xc4 ; '.'
0000000000015455         db  0x82 ; '.'
0000000000015456         db  0xff ; '.'
0000000000015457         db  0xff ; '.'
0000000000015458         db  0x94 ; '.'
0000000000015459         db  0x82 ; '.'
000000000001545a         db  0xff ; '.'
000000000001545b         db  0xff ; '.'
000000000001545c         db  0xc4 ; '.'
000000000001545d         db  0x82 ; '.'
000000000001545e         db  0xff ; '.'
000000000001545f         db  0xff ; '.'
0000000000015460         db  0x6c ; 'l'
0000000000015461         db  0x82 ; '.'
0000000000015462         db  0xff ; '.'
0000000000015463         db  0xff ; '.'
0000000000015464         db  0xc4 ; '.'
0000000000015465         db  0x82 ; '.'
0000000000015466         db  0xff ; '.'
0000000000015467         db  0xff ; '.'
0000000000015468         db  0x27 ; '''
0000000000015469         db  0x81 ; '.'
000000000001546a         db  0xff ; '.'
000000000001546b         db  0xff ; '.'
000000000001546c         db  0xc4 ; '.'
000000000001546d         db  0x82 ; '.'
000000000001546e         db  0xff ; '.'
000000000001546f         db  0xff ; '.'
0000000000015470         db  0xc4 ; '.'
0000000000015471         db  0x82 ; '.'
0000000000015472         db  0xff ; '.'
0000000000015473         db  0xff ; '.'
0000000000015474         db  0xc4 ; '.'
0000000000015475         db  0x82 ; '.'
0000000000015476         db  0xff ; '.'
0000000000015477         db  0xff ; '.'
0000000000015478         db  0x6c ; 'l'
0000000000015479         db  0x82 ; '.'
000000000001547a         db  0xff ; '.'
000000000001547b         db  0xff ; '.'
000000000001547c         db  0x6c ; 'l'
000000000001547d         db  0x82 ; '.'
000000000001547e         db  0xff ; '.'
000000000001547f         db  0xff ; '.'
0000000000015480         db  0x6c ; 'l'
0000000000015481         db  0x82 ; '.'
0000000000015482         db  0xff ; '.'
0000000000015483         db  0xff ; '.'
0000000000015484         db  0x6c ; 'l'
0000000000015485         db  0x82 ; '.'
0000000000015486         db  0xff ; '.'
0000000000015487         db  0xff ; '.'
0000000000015488         db  0x6c ; 'l'
0000000000015489         db  0x82 ; '.'
000000000001548a         db  0xff ; '.'
000000000001548b         db  0xff ; '.'
000000000001548c         db  0x6c ; 'l'
000000000001548d         db  0x82 ; '.'
000000000001548e         db  0xff ; '.'
000000000001548f         db  0xff ; '.'
0000000000015490         db  0x6c ; 'l'
0000000000015491         db  0x82 ; '.'
0000000000015492         db  0xff ; '.'
0000000000015493         db  0xff ; '.'
0000000000015494         db  0x6c ; 'l'
0000000000015495         db  0x82 ; '.'
0000000000015496         db  0xff ; '.'
0000000000015497         db  0xff ; '.'
0000000000015498         db  0x6c ; 'l'
0000000000015499         db  0x82 ; '.'
000000000001549a         db  0xff ; '.'
000000000001549b         db  0xff ; '.'
000000000001549c         db  0x6c ; 'l'
000000000001549d         db  0x82 ; '.'
000000000001549e         db  0xff ; '.'
000000000001549f         db  0xff ; '.'
00000000000154a0         db  0x6c ; 'l'
00000000000154a1         db  0x82 ; '.'
00000000000154a2         db  0xff ; '.'
00000000000154a3         db  0xff ; '.'
00000000000154a4         db  0x6c ; 'l'
00000000000154a5         db  0x82 ; '.'
00000000000154a6         db  0xff ; '.'
00000000000154a7         db  0xff ; '.'
00000000000154a8         db  0x6c ; 'l'
00000000000154a9         db  0x82 ; '.'
00000000000154aa         db  0xff ; '.'
00000000000154ab         db  0xff ; '.'
00000000000154ac         db  0x6c ; 'l'
00000000000154ad         db  0x82 ; '.'
00000000000154ae         db  0xff ; '.'
00000000000154af         db  0xff ; '.'
00000000000154b0         db  0x6c ; 'l'
00000000000154b1         db  0x82 ; '.'
00000000000154b2         db  0xff ; '.'
00000000000154b3         db  0xff ; '.'
00000000000154b4         db  0x6c ; 'l'
00000000000154b5         db  0x82 ; '.'
00000000000154b6         db  0xff ; '.'
00000000000154b7         db  0xff ; '.'
00000000000154b8         db  0xc4 ; '.'
00000000000154b9         db  0x82 ; '.'
00000000000154ba         db  0xff ; '.'
00000000000154bb         db  0xff ; '.'
00000000000154bc         db  0xc4 ; '.'
00000000000154bd         db  0x82 ; '.'
00000000000154be         db  0xff ; '.'
00000000000154bf         db  0xff ; '.'
00000000000154c0         db  0xc4 ; '.'
00000000000154c1         db  0x82 ; '.'
00000000000154c2         db  0xff ; '.'
00000000000154c3         db  0xff ; '.'
00000000000154c4         db  0xc4 ; '.'
00000000000154c5         db  0x82 ; '.'
00000000000154c6         db  0xff ; '.'
00000000000154c7         db  0xff ; '.'
00000000000154c8         db  0xf7 ; '.'
00000000000154c9         db  0x80 ; '.'
00000000000154ca         db  0xff ; '.'
00000000000154cb         db  0xff ; '.'
00000000000154cc         db  0x2c ; ','
00000000000154cd         db  0x83 ; '.'
00000000000154ce         db  0xff ; '.'
00000000000154cf         db  0xff ; '.'
00000000000154d0         db  0x6c ; 'l'
00000000000154d1         db  0x82 ; '.'
00000000000154d2         db  0xff ; '.'
00000000000154d3         db  0xff ; '.'
00000000000154d4         db  0x6c ; 'l'
00000000000154d5         db  0x82 ; '.'
00000000000154d6         db  0xff ; '.'
00000000000154d7         db  0xff ; '.'
00000000000154d8         db  0x6c ; 'l'
00000000000154d9         db  0x82 ; '.'
00000000000154da         db  0xff ; '.'
00000000000154db         db  0xff ; '.'
00000000000154dc         db  0x6c ; 'l'
00000000000154dd         db  0x82 ; '.'
00000000000154de         db  0xff ; '.'
00000000000154df         db  0xff ; '.'
00000000000154e0         db  0x6c ; 'l'
00000000000154e1         db  0x82 ; '.'
00000000000154e2         db  0xff ; '.'
00000000000154e3         db  0xff ; '.'
00000000000154e4         db  0x6c ; 'l'
00000000000154e5         db  0x82 ; '.'
00000000000154e6         db  0xff ; '.'
00000000000154e7         db  0xff ; '.'
00000000000154e8         db  0x6c ; 'l'
00000000000154e9         db  0x82 ; '.'
00000000000154ea         db  0xff ; '.'
00000000000154eb         db  0xff ; '.'
00000000000154ec         db  0x6c ; 'l'
00000000000154ed         db  0x82 ; '.'
00000000000154ee         db  0xff ; '.'
00000000000154ef         db  0xff ; '.'
00000000000154f0         db  0x6c ; 'l'
00000000000154f1         db  0x82 ; '.'
00000000000154f2         db  0xff ; '.'
00000000000154f3         db  0xff ; '.'
00000000000154f4         db  0x6c ; 'l'
00000000000154f5         db  0x82 ; '.'
00000000000154f6         db  0xff ; '.'
00000000000154f7         db  0xff ; '.'
00000000000154f8         db  0x6c ; 'l'
00000000000154f9         db  0x82 ; '.'
00000000000154fa         db  0xff ; '.'
00000000000154fb         db  0xff ; '.'
00000000000154fc         db  0x6c ; 'l'
00000000000154fd         db  0x82 ; '.'
00000000000154fe         db  0xff ; '.'
00000000000154ff         db  0xff ; '.'
0000000000015500         db  0x6c ; 'l'
0000000000015501         db  0x82 ; '.'
0000000000015502         db  0xff ; '.'
0000000000015503         db  0xff ; '.'
0000000000015504         db  0x6c ; 'l'
0000000000015505         db  0x82 ; '.'
0000000000015506         db  0xff ; '.'
0000000000015507         db  0xff ; '.'
0000000000015508         db  0x6c ; 'l'
0000000000015509         db  0x82 ; '.'
000000000001550a         db  0xff ; '.'
000000000001550b         db  0xff ; '.'
000000000001550c         db  0x6c ; 'l'
000000000001550d         db  0x82 ; '.'
000000000001550e         db  0xff ; '.'
000000000001550f         db  0xff ; '.'
0000000000015510         db  0x6c ; 'l'
0000000000015511         db  0x82 ; '.'
0000000000015512         db  0xff ; '.'
0000000000015513         db  0xff ; '.'
0000000000015514         db  0x6c ; 'l'
0000000000015515         db  0x82 ; '.'
0000000000015516         db  0xff ; '.'
0000000000015517         db  0xff ; '.'
0000000000015518         db  0x6c ; 'l'
0000000000015519         db  0x82 ; '.'
000000000001551a         db  0xff ; '.'
000000000001551b         db  0xff ; '.'
000000000001551c         db  0x6c ; 'l'
000000000001551d         db  0x82 ; '.'
000000000001551e         db  0xff ; '.'
000000000001551f         db  0xff ; '.'
0000000000015520         db  0x6c ; 'l'
0000000000015521         db  0x82 ; '.'
0000000000015522         db  0xff ; '.'
0000000000015523         db  0xff ; '.'
0000000000015524         db  0x6c ; 'l'
0000000000015525         db  0x82 ; '.'
0000000000015526         db  0xff ; '.'
0000000000015527         db  0xff ; '.'
0000000000015528         db  0x6c ; 'l'
0000000000015529         db  0x82 ; '.'
000000000001552a         db  0xff ; '.'
000000000001552b         db  0xff ; '.'
000000000001552c         db  0x6c ; 'l'
000000000001552d         db  0x82 ; '.'
000000000001552e         db  0xff ; '.'
000000000001552f         db  0xff ; '.'
0000000000015530         db  0x6c ; 'l'
0000000000015531         db  0x82 ; '.'
0000000000015532         db  0xff ; '.'
0000000000015533         db  0xff ; '.'
0000000000015534         db  0x6c ; 'l'
0000000000015535         db  0x82 ; '.'
0000000000015536         db  0xff ; '.'
0000000000015537         db  0xff ; '.'
0000000000015538         db  0xc4 ; '.'
0000000000015539         db  0x82 ; '.'
000000000001553a         db  0xff ; '.'
000000000001553b         db  0xff ; '.'
000000000001553c         db  0x9c ; '.'
000000000001553d         db  0x81 ; '.'
000000000001553e         db  0xff ; '.'
000000000001553f         db  0xff ; '.'
0000000000015540         db  0x6c ; 'l'
0000000000015541         db  0x82 ; '.'
0000000000015542         db  0xff ; '.'
0000000000015543         db  0xff ; '.'
0000000000015544         db  0xc4 ; '.'
0000000000015545         db  0x82 ; '.'
0000000000015546         db  0xff ; '.'
0000000000015547         db  0xff ; '.'
0000000000015548         db  0x6c ; 'l'
0000000000015549         db  0x82 ; '.'
000000000001554a         db  0xff ; '.'
000000000001554b         db  0xff ; '.'
000000000001554c         db  0xc4 ; '.'
000000000001554d         db  0x82 ; '.'
000000000001554e         db  0xff ; '.'
000000000001554f         db  0xff ; '.'
0000000000015550         db  0x6c ; 'l'
0000000000015551         db  0x82 ; '.'
0000000000015552         db  0xff ; '.'
0000000000015553         db  0xff ; '.'
0000000000015554         db  0x6c ; 'l'
0000000000015555         db  0x82 ; '.'
0000000000015556         db  0xff ; '.'
0000000000015557         db  0xff ; '.'
0000000000015558         db  0x6c ; 'l'
0000000000015559         db  0x82 ; '.'
000000000001555a         db  0xff ; '.'
000000000001555b         db  0xff ; '.'
000000000001555c         db  0x6c ; 'l'
000000000001555d         db  0x82 ; '.'
000000000001555e         db  0xff ; '.'
000000000001555f         db  0xff ; '.'
0000000000015560         db  0x6c ; 'l'
0000000000015561         db  0x82 ; '.'
0000000000015562         db  0xff ; '.'
0000000000015563         db  0xff ; '.'
0000000000015564         db  0x6c ; 'l'
0000000000015565         db  0x82 ; '.'
0000000000015566         db  0xff ; '.'
0000000000015567         db  0xff ; '.'
0000000000015568         db  0x6c ; 'l'
0000000000015569         db  0x82 ; '.'
000000000001556a         db  0xff ; '.'
000000000001556b         db  0xff ; '.'
000000000001556c         db  0x6c ; 'l'
000000000001556d         db  0x82 ; '.'
000000000001556e         db  0xff ; '.'
000000000001556f         db  0xff ; '.'
0000000000015570         db  0x6c ; 'l'
0000000000015571         db  0x82 ; '.'
0000000000015572         db  0xff ; '.'
0000000000015573         db  0xff ; '.'
0000000000015574         db  0x6c ; 'l'
0000000000015575         db  0x82 ; '.'
0000000000015576         db  0xff ; '.'
0000000000015577         db  0xff ; '.'
0000000000015578         db  0x6c ; 'l'
0000000000015579         db  0x82 ; '.'
000000000001557a         db  0xff ; '.'
000000000001557b         db  0xff ; '.'
000000000001557c         db  0x6c ; 'l'
000000000001557d         db  0x82 ; '.'
000000000001557e         db  0xff ; '.'
000000000001557f         db  0xff ; '.'
0000000000015580         db  0x6c ; 'l'
0000000000015581         db  0x82 ; '.'
0000000000015582         db  0xff ; '.'
0000000000015583         db  0xff ; '.'
0000000000015584         db  0x6c ; 'l'
0000000000015585         db  0x82 ; '.'
0000000000015586         db  0xff ; '.'
0000000000015587         db  0xff ; '.'
0000000000015588         db  0x6c ; 'l'
0000000000015589         db  0x82 ; '.'
000000000001558a         db  0xff ; '.'
000000000001558b         db  0xff ; '.'
000000000001558c         db  0x6c ; 'l'
000000000001558d         db  0x82 ; '.'
000000000001558e         db  0xff ; '.'
000000000001558f         db  0xff ; '.'
0000000000015590         db  0x6c ; 'l'
0000000000015591         db  0x82 ; '.'
0000000000015592         db  0xff ; '.'
0000000000015593         db  0xff ; '.'
0000000000015594         db  0x6c ; 'l'
0000000000015595         db  0x82 ; '.'
0000000000015596         db  0xff ; '.'
0000000000015597         db  0xff ; '.'
0000000000015598         db  0x6c ; 'l'
0000000000015599         db  0x82 ; '.'
000000000001559a         db  0xff ; '.'
000000000001559b         db  0xff ; '.'
000000000001559c         db  0x6c ; 'l'
000000000001559d         db  0x82 ; '.'
000000000001559e         db  0xff ; '.'
000000000001559f         db  0xff ; '.'
00000000000155a0         db  0x6c ; 'l'
00000000000155a1         db  0x82 ; '.'
00000000000155a2         db  0xff ; '.'
00000000000155a3         db  0xff ; '.'
00000000000155a4         db  0x6c ; 'l'
00000000000155a5         db  0x82 ; '.'
00000000000155a6         db  0xff ; '.'
00000000000155a7         db  0xff ; '.'
00000000000155a8         db  0x6c ; 'l'
00000000000155a9         db  0x82 ; '.'
00000000000155aa         db  0xff ; '.'
00000000000155ab         db  0xff ; '.'
00000000000155ac         db  0x6c ; 'l'
00000000000155ad         db  0x82 ; '.'
00000000000155ae         db  0xff ; '.'
00000000000155af         db  0xff ; '.'
00000000000155b0         db  0x6c ; 'l'
00000000000155b1         db  0x82 ; '.'
00000000000155b2         db  0xff ; '.'
00000000000155b3         db  0xff ; '.'
00000000000155b4         db  0x6c ; 'l'
00000000000155b5         db  0x82 ; '.'
00000000000155b6         db  0xff ; '.'
00000000000155b7         db  0xff ; '.'
00000000000155b8         db  0x27 ; '''
00000000000155b9         db  0x80 ; '.'
00000000000155ba         db  0xff ; '.'
00000000000155bb         db  0xff ; '.'
00000000000155bc         db  0xc4 ; '.'
00000000000155bd         db  0x82 ; '.'
00000000000155be         db  0xff ; '.'
00000000000155bf         db  0xff ; '.'
00000000000155c0         db  0x27 ; '''
00000000000155c1         db  0x80 ; '.'
00000000000155c2         db  0xff ; '.'
00000000000155c3         db  0xff ; '.'
00000000000155c4         db  0x94 ; '.'
00000000000155c5         db  0x82 ; '.'
00000000000155c6         db  0xff ; '.'
00000000000155c7         db  0xff ; '.'
00000000000155c8         db  0x18 ; '.'                                         ; DATA XREF=sub_d6e0+137
00000000000155c9         db  0x82 ; '.'
00000000000155ca         db  0xff ; '.'
00000000000155cb         db  0xff ; '.'
00000000000155cc         db  0x28 ; '('
00000000000155cd         db  0x81 ; '.'
00000000000155ce         db  0xff ; '.'
00000000000155cf         db  0xff ; '.'
00000000000155d0         db  0x28 ; '('
00000000000155d1         db  0x81 ; '.'
00000000000155d2         db  0xff ; '.'
00000000000155d3         db  0xff ; '.'
00000000000155d4         db  0x28 ; '('
00000000000155d5         db  0x81 ; '.'
00000000000155d6         db  0xff ; '.'
00000000000155d7         db  0xff ; '.'
00000000000155d8         db  0x28 ; '('
00000000000155d9         db  0x81 ; '.'
00000000000155da         db  0xff ; '.'
00000000000155db         db  0xff ; '.'
00000000000155dc         db  0x28 ; '('
00000000000155dd         db  0x81 ; '.'
00000000000155de         db  0xff ; '.'
00000000000155df         db  0xff ; '.'
00000000000155e0         db  0x28 ; '('
00000000000155e1         db  0x81 ; '.'
00000000000155e2         db  0xff ; '.'
00000000000155e3         db  0xff ; '.'
00000000000155e4         db  0x08 ; '.'
00000000000155e5         db  0x82 ; '.'
00000000000155e6         db  0xff ; '.'
00000000000155e7         db  0xff ; '.'
00000000000155e8         db  0x58 ; 'X'
00000000000155e9         db  0x83 ; '.'
00000000000155ea         db  0xff ; '.'
00000000000155eb         db  0xff ; '.'
00000000000155ec         db  0x40 ; '@'
00000000000155ed         db  0x83 ; '.'
00000000000155ee         db  0xff ; '.'
00000000000155ef         db  0xff ; '.'
00000000000155f0         db  0xf0 ; '.'
00000000000155f1         db  0x81 ; '.'
00000000000155f2         db  0xff ; '.'
00000000000155f3         db  0xff ; '.'
00000000000155f4         db  0x30 ; '0'
00000000000155f5         db  0x83 ; '.'
00000000000155f6         db  0xff ; '.'
00000000000155f7         db  0xff ; '.'
00000000000155f8         db  0xd8 ; '.'
00000000000155f9         db  0x81 ; '.'
00000000000155fa         db  0xff ; '.'
00000000000155fb         db  0xff ; '.'
00000000000155fc         db  0x18 ; '.'
00000000000155fd         db  0x83 ; '.'
00000000000155fe         db  0xff ; '.'
00000000000155ff         db  0xff ; '.'
0000000000015600         db  0x28 ; '('
0000000000015601         db  0x81 ; '.'
0000000000015602         db  0xff ; '.'
0000000000015603         db  0xff ; '.'
0000000000015604         db  0x28 ; '('
0000000000015605         db  0x81 ; '.'
0000000000015606         db  0xff ; '.'
0000000000015607         db  0xff ; '.'
0000000000015608         db  0x28 ; '('
0000000000015609         db  0x81 ; '.'
000000000001560a         db  0xff ; '.'
000000000001560b         db  0xff ; '.'
000000000001560c         db  0x28 ; '('
000000000001560d         db  0x81 ; '.'
000000000001560e         db  0xff ; '.'
000000000001560f         db  0xff ; '.'
0000000000015610         db  0x28 ; '('
0000000000015611         db  0x81 ; '.'
0000000000015612         db  0xff ; '.'
0000000000015613         db  0xff ; '.'
0000000000015614         db  0x28 ; '('
0000000000015615         db  0x81 ; '.'
0000000000015616         db  0xff ; '.'
0000000000015617         db  0xff ; '.'
0000000000015618         db  0x28 ; '('
0000000000015619         db  0x81 ; '.'
000000000001561a         db  0xff ; '.'
000000000001561b         db  0xff ; '.'
000000000001561c         db  0x28 ; '('
000000000001561d         db  0x81 ; '.'
000000000001561e         db  0xff ; '.'
000000000001561f         db  0xff ; '.'
0000000000015620         db  0x28 ; '('
0000000000015621         db  0x81 ; '.'
0000000000015622         db  0xff ; '.'
0000000000015623         db  0xff ; '.'
0000000000015624         db  0x28 ; '('
0000000000015625         db  0x81 ; '.'
0000000000015626         db  0xff ; '.'
0000000000015627         db  0xff ; '.'
0000000000015628         db  0x28 ; '('
0000000000015629         db  0x81 ; '.'
000000000001562a         db  0xff ; '.'
000000000001562b         db  0xff ; '.'
000000000001562c         db  0x28 ; '('
000000000001562d         db  0x81 ; '.'
000000000001562e         db  0xff ; '.'
000000000001562f         db  0xff ; '.'
0000000000015630         db  0x28 ; '('
0000000000015631         db  0x81 ; '.'
0000000000015632         db  0xff ; '.'
0000000000015633         db  0xff ; '.'
0000000000015634         db  0x28 ; '('
0000000000015635         db  0x81 ; '.'
0000000000015636         db  0xff ; '.'
0000000000015637         db  0xff ; '.'
0000000000015638         db  0x28 ; '('
0000000000015639         db  0x81 ; '.'
000000000001563a         db  0xff ; '.'
000000000001563b         db  0xff ; '.'
000000000001563c         db  0x28 ; '('
000000000001563d         db  0x81 ; '.'
000000000001563e         db  0xff ; '.'
000000000001563f         db  0xff ; '.'
0000000000015640         db  0x28 ; '('
0000000000015641         db  0x81 ; '.'
0000000000015642         db  0xff ; '.'
0000000000015643         db  0xff ; '.'
0000000000015644         db  0x28 ; '('
0000000000015645         db  0x81 ; '.'
0000000000015646         db  0xff ; '.'
0000000000015647         db  0xff ; '.'
0000000000015648         db  0x00 ; '.'
0000000000015649         db  0x83 ; '.'
000000000001564a         db  0xff ; '.'
000000000001564b         db  0xff ; '.'
000000000001564c         db  0xe8 ; '.'
000000000001564d         db  0x82 ; '.'
000000000001564e         db  0xff ; '.'
000000000001564f         db  0xff ; '.'
0000000000015650         db  0xe8 ; '.'
0000000000015651         db  0x82 ; '.'
0000000000015652         db  0xff ; '.'
0000000000015653         db  0xff ; '.'
0000000000015654         db  0xd0 ; '.'
0000000000015655         db  0x82 ; '.'
0000000000015656         db  0xff ; '.'
0000000000015657         db  0xff ; '.'
0000000000015658         db  0xe8 ; '.'
0000000000015659         db  0x82 ; '.'
000000000001565a         db  0xff ; '.'
000000000001565b         db  0xff ; '.'
000000000001565c         db  0xb8 ; '.'
000000000001565d         db  0x82 ; '.'
000000000001565e         db  0xff ; '.'
000000000001565f         db  0xff ; '.'
0000000000015660         db  0xe8 ; '.'
0000000000015661         db  0x82 ; '.'
0000000000015662         db  0xff ; '.'
0000000000015663         db  0xff ; '.'
0000000000015664         db  0x28 ; '('
0000000000015665         db  0x7f ; '.'
0000000000015666         db  0xff ; '.'
0000000000015667         db  0xff ; '.'
0000000000015668         db  0xe8 ; '.'
0000000000015669         db  0x82 ; '.'
000000000001566a         db  0xff ; '.'
000000000001566b         db  0xff ; '.'
000000000001566c         db  0xe8 ; '.'
000000000001566d         db  0x82 ; '.'
000000000001566e         db  0xff ; '.'
000000000001566f         db  0xff ; '.'
0000000000015670         db  0xe8 ; '.'
0000000000015671         db  0x82 ; '.'
0000000000015672         db  0xff ; '.'
0000000000015673         db  0xff ; '.'
0000000000015674         db  0xb8 ; '.'
0000000000015675         db  0x82 ; '.'
0000000000015676         db  0xff ; '.'
0000000000015677         db  0xff ; '.'
0000000000015678         db  0xb8 ; '.'
0000000000015679         db  0x82 ; '.'
000000000001567a         db  0xff ; '.'
000000000001567b         db  0xff ; '.'
000000000001567c         db  0xb8 ; '.'
000000000001567d         db  0x82 ; '.'
000000000001567e         db  0xff ; '.'
000000000001567f         db  0xff ; '.'
0000000000015680         db  0xb8 ; '.'
0000000000015681         db  0x82 ; '.'
0000000000015682         db  0xff ; '.'
0000000000015683         db  0xff ; '.'
0000000000015684         db  0xb8 ; '.'
0000000000015685         db  0x82 ; '.'
0000000000015686         db  0xff ; '.'
0000000000015687         db  0xff ; '.'
0000000000015688         db  0xb8 ; '.'
0000000000015689         db  0x82 ; '.'
000000000001568a         db  0xff ; '.'
000000000001568b         db  0xff ; '.'
000000000001568c         db  0xb8 ; '.'
000000000001568d         db  0x82 ; '.'
000000000001568e         db  0xff ; '.'
000000000001568f         db  0xff ; '.'
0000000000015690         db  0xb8 ; '.'
0000000000015691         db  0x82 ; '.'
0000000000015692         db  0xff ; '.'
0000000000015693         db  0xff ; '.'
0000000000015694         db  0xb8 ; '.'
0000000000015695         db  0x82 ; '.'
0000000000015696         db  0xff ; '.'
0000000000015697         db  0xff ; '.'
0000000000015698         db  0xb8 ; '.'
0000000000015699         db  0x82 ; '.'
000000000001569a         db  0xff ; '.'
000000000001569b         db  0xff ; '.'
000000000001569c         db  0xb8 ; '.'
000000000001569d         db  0x82 ; '.'
000000000001569e         db  0xff ; '.'
000000000001569f         db  0xff ; '.'
00000000000156a0         db  0xb8 ; '.'
00000000000156a1         db  0x82 ; '.'
00000000000156a2         db  0xff ; '.'
00000000000156a3         db  0xff ; '.'
00000000000156a4         db  0xb8 ; '.'
00000000000156a5         db  0x82 ; '.'
00000000000156a6         db  0xff ; '.'
00000000000156a7         db  0xff ; '.'
00000000000156a8         db  0xb8 ; '.'
00000000000156a9         db  0x82 ; '.'
00000000000156aa         db  0xff ; '.'
00000000000156ab         db  0xff ; '.'
00000000000156ac         db  0xb8 ; '.'
00000000000156ad         db  0x82 ; '.'
00000000000156ae         db  0xff ; '.'
00000000000156af         db  0xff ; '.'
00000000000156b0         db  0xb8 ; '.'
00000000000156b1         db  0x82 ; '.'
00000000000156b2         db  0xff ; '.'
00000000000156b3         db  0xff ; '.'
00000000000156b4         db  0xe8 ; '.'
00000000000156b5         db  0x82 ; '.'
00000000000156b6         db  0xff ; '.'
00000000000156b7         db  0xff ; '.'
00000000000156b8         db  0xe8 ; '.'
00000000000156b9         db  0x82 ; '.'
00000000000156ba         db  0xff ; '.'
00000000000156bb         db  0xff ; '.'
00000000000156bc         db  0xe8 ; '.'
00000000000156bd         db  0x82 ; '.'
00000000000156be         db  0xff ; '.'
00000000000156bf         db  0xff ; '.'
00000000000156c0         db  0xe8 ; '.'
00000000000156c1         db  0x82 ; '.'
00000000000156c2         db  0xff ; '.'
00000000000156c3         db  0xff ; '.'
00000000000156c4         db  0xf8 ; '.'
00000000000156c5         db  0x7e ; '~'
00000000000156c6         db  0xff ; '.'
00000000000156c7         db  0xff ; '.'
00000000000156c8         db  0x28 ; '('
00000000000156c9         db  0x81 ; '.'
00000000000156ca         db  0xff ; '.'
00000000000156cb         db  0xff ; '.'
00000000000156cc         db  0xb8 ; '.'
00000000000156cd         db  0x82 ; '.'
00000000000156ce         db  0xff ; '.'
00000000000156cf         db  0xff ; '.'
00000000000156d0         db  0xb8 ; '.'
00000000000156d1         db  0x82 ; '.'
00000000000156d2         db  0xff ; '.'
00000000000156d3         db  0xff ; '.'
00000000000156d4         db  0xb8 ; '.'
00000000000156d5         db  0x82 ; '.'
00000000000156d6         db  0xff ; '.'
00000000000156d7         db  0xff ; '.'
00000000000156d8         db  0xb8 ; '.'
00000000000156d9         db  0x82 ; '.'
00000000000156da         db  0xff ; '.'
00000000000156db         db  0xff ; '.'
00000000000156dc         db  0xb8 ; '.'
00000000000156dd         db  0x82 ; '.'
00000000000156de         db  0xff ; '.'
00000000000156df         db  0xff ; '.'
00000000000156e0         db  0xb8 ; '.'
00000000000156e1         db  0x82 ; '.'
00000000000156e2         db  0xff ; '.'
00000000000156e3         db  0xff ; '.'
00000000000156e4         db  0xb8 ; '.'
00000000000156e5         db  0x82 ; '.'
00000000000156e6         db  0xff ; '.'
00000000000156e7         db  0xff ; '.'
00000000000156e8         db  0xb8 ; '.'
00000000000156e9         db  0x82 ; '.'
00000000000156ea         db  0xff ; '.'
00000000000156eb         db  0xff ; '.'
00000000000156ec         db  0xb8 ; '.'
00000000000156ed         db  0x82 ; '.'
00000000000156ee         db  0xff ; '.'
00000000000156ef         db  0xff ; '.'
00000000000156f0         db  0xb8 ; '.'
00000000000156f1         db  0x82 ; '.'
00000000000156f2         db  0xff ; '.'
00000000000156f3         db  0xff ; '.'
00000000000156f4         db  0xb8 ; '.'
00000000000156f5         db  0x82 ; '.'
00000000000156f6         db  0xff ; '.'
00000000000156f7         db  0xff ; '.'
00000000000156f8         db  0xb8 ; '.'
00000000000156f9         db  0x82 ; '.'
00000000000156fa         db  0xff ; '.'
00000000000156fb         db  0xff ; '.'
00000000000156fc         db  0xb8 ; '.'
00000000000156fd         db  0x82 ; '.'
00000000000156fe         db  0xff ; '.'
00000000000156ff         db  0xff ; '.'
0000000000015700         db  0xb8 ; '.'
0000000000015701         db  0x82 ; '.'
0000000000015702         db  0xff ; '.'
0000000000015703         db  0xff ; '.'
0000000000015704         db  0xb8 ; '.'
0000000000015705         db  0x82 ; '.'
0000000000015706         db  0xff ; '.'
0000000000015707         db  0xff ; '.'
0000000000015708         db  0xb8 ; '.'
0000000000015709         db  0x82 ; '.'
000000000001570a         db  0xff ; '.'
000000000001570b         db  0xff ; '.'
000000000001570c         db  0xb8 ; '.'
000000000001570d         db  0x82 ; '.'
000000000001570e         db  0xff ; '.'
000000000001570f         db  0xff ; '.'
0000000000015710         db  0xb8 ; '.'
0000000000015711         db  0x82 ; '.'
0000000000015712         db  0xff ; '.'
0000000000015713         db  0xff ; '.'
0000000000015714         db  0xb8 ; '.'
0000000000015715         db  0x82 ; '.'
0000000000015716         db  0xff ; '.'
0000000000015717         db  0xff ; '.'
0000000000015718         db  0xb8 ; '.'
0000000000015719         db  0x82 ; '.'
000000000001571a         db  0xff ; '.'
000000000001571b         db  0xff ; '.'
000000000001571c         db  0xb8 ; '.'
000000000001571d         db  0x82 ; '.'
000000000001571e         db  0xff ; '.'
000000000001571f         db  0xff ; '.'
0000000000015720         db  0xb8 ; '.'
0000000000015721         db  0x82 ; '.'
0000000000015722         db  0xff ; '.'
0000000000015723         db  0xff ; '.'
0000000000015724         db  0xb8 ; '.'
0000000000015725         db  0x82 ; '.'
0000000000015726         db  0xff ; '.'
0000000000015727         db  0xff ; '.'
0000000000015728         db  0xb8 ; '.'
0000000000015729         db  0x82 ; '.'
000000000001572a         db  0xff ; '.'
000000000001572b         db  0xff ; '.'
000000000001572c         db  0xb8 ; '.'
000000000001572d         db  0x82 ; '.'
000000000001572e         db  0xff ; '.'
000000000001572f         db  0xff ; '.'
0000000000015730         db  0xb8 ; '.'
0000000000015731         db  0x82 ; '.'
0000000000015732         db  0xff ; '.'
0000000000015733         db  0xff ; '.'
0000000000015734         db  0xe8 ; '.'
0000000000015735         db  0x82 ; '.'
0000000000015736         db  0xff ; '.'
0000000000015737         db  0xff ; '.'
0000000000015738         db  0xb8 ; '.'
0000000000015739         db  0x81 ; '.'
000000000001573a         db  0xff ; '.'
000000000001573b         db  0xff ; '.'
000000000001573c         db  0xb8 ; '.'
000000000001573d         db  0x82 ; '.'
000000000001573e         db  0xff ; '.'
000000000001573f         db  0xff ; '.'
0000000000015740         db  0xe8 ; '.'
0000000000015741         db  0x82 ; '.'
0000000000015742         db  0xff ; '.'
0000000000015743         db  0xff ; '.'
0000000000015744         db  0xb8 ; '.'
0000000000015745         db  0x82 ; '.'
0000000000015746         db  0xff ; '.'
0000000000015747         db  0xff ; '.'
0000000000015748         db  0xe8 ; '.'
0000000000015749         db  0x82 ; '.'
000000000001574a         db  0xff ; '.'
000000000001574b         db  0xff ; '.'
000000000001574c         db  0xb8 ; '.'
000000000001574d         db  0x82 ; '.'
000000000001574e         db  0xff ; '.'
000000000001574f         db  0xff ; '.'
0000000000015750         db  0xb8 ; '.'
0000000000015751         db  0x82 ; '.'
0000000000015752         db  0xff ; '.'
0000000000015753         db  0xff ; '.'
0000000000015754         db  0xb8 ; '.'
0000000000015755         db  0x82 ; '.'
0000000000015756         db  0xff ; '.'
0000000000015757         db  0xff ; '.'
0000000000015758         db  0xb8 ; '.'
0000000000015759         db  0x82 ; '.'
000000000001575a         db  0xff ; '.'
000000000001575b         db  0xff ; '.'
000000000001575c         db  0xb8 ; '.'
000000000001575d         db  0x82 ; '.'
000000000001575e         db  0xff ; '.'
000000000001575f         db  0xff ; '.'
0000000000015760         db  0xb8 ; '.'
0000000000015761         db  0x82 ; '.'
0000000000015762         db  0xff ; '.'
0000000000015763         db  0xff ; '.'
0000000000015764         db  0xb8 ; '.'
0000000000015765         db  0x82 ; '.'
0000000000015766         db  0xff ; '.'
0000000000015767         db  0xff ; '.'
0000000000015768         db  0xb8 ; '.'
0000000000015769         db  0x82 ; '.'
000000000001576a         db  0xff ; '.'
000000000001576b         db  0xff ; '.'
000000000001576c         db  0xb8 ; '.'
000000000001576d         db  0x82 ; '.'
000000000001576e         db  0xff ; '.'
000000000001576f         db  0xff ; '.'
0000000000015770         db  0xb8 ; '.'
0000000000015771         db  0x82 ; '.'
0000000000015772         db  0xff ; '.'
0000000000015773         db  0xff ; '.'
0000000000015774         db  0xb8 ; '.'
0000000000015775         db  0x82 ; '.'
0000000000015776         db  0xff ; '.'
0000000000015777         db  0xff ; '.'
0000000000015778         db  0xb8 ; '.'
0000000000015779         db  0x82 ; '.'
000000000001577a         db  0xff ; '.'
000000000001577b         db  0xff ; '.'
000000000001577c         db  0xb8 ; '.'
000000000001577d         db  0x82 ; '.'
000000000001577e         db  0xff ; '.'
000000000001577f         db  0xff ; '.'
0000000000015780         db  0xb8 ; '.'
0000000000015781         db  0x82 ; '.'
0000000000015782         db  0xff ; '.'
0000000000015783         db  0xff ; '.'
0000000000015784         db  0xb8 ; '.'
0000000000015785         db  0x82 ; '.'
0000000000015786         db  0xff ; '.'
0000000000015787         db  0xff ; '.'
0000000000015788         db  0xb8 ; '.'
0000000000015789         db  0x82 ; '.'
000000000001578a         db  0xff ; '.'
000000000001578b         db  0xff ; '.'
000000000001578c         db  0xb8 ; '.'
000000000001578d         db  0x82 ; '.'
000000000001578e         db  0xff ; '.'
000000000001578f         db  0xff ; '.'
0000000000015790         db  0xb8 ; '.'
0000000000015791         db  0x82 ; '.'
0000000000015792         db  0xff ; '.'
0000000000015793         db  0xff ; '.'
0000000000015794         db  0xb8 ; '.'
0000000000015795         db  0x82 ; '.'
0000000000015796         db  0xff ; '.'
0000000000015797         db  0xff ; '.'
0000000000015798         db  0xb8 ; '.'
0000000000015799         db  0x82 ; '.'
000000000001579a         db  0xff ; '.'
000000000001579b         db  0xff ; '.'
000000000001579c         db  0xb8 ; '.'
000000000001579d         db  0x82 ; '.'
000000000001579e         db  0xff ; '.'
000000000001579f         db  0xff ; '.'
00000000000157a0         db  0xb8 ; '.'
00000000000157a1         db  0x82 ; '.'
00000000000157a2         db  0xff ; '.'
00000000000157a3         db  0xff ; '.'
00000000000157a4         db  0xb8 ; '.'
00000000000157a5         db  0x82 ; '.'
00000000000157a6         db  0xff ; '.'
00000000000157a7         db  0xff ; '.'
00000000000157a8         db  0xb8 ; '.'
00000000000157a9         db  0x82 ; '.'
00000000000157aa         db  0xff ; '.'
00000000000157ab         db  0xff ; '.'
00000000000157ac         db  0xb8 ; '.'
00000000000157ad         db  0x82 ; '.'
00000000000157ae         db  0xff ; '.'
00000000000157af         db  0xff ; '.'
00000000000157b0         db  0xb8 ; '.'
00000000000157b1         db  0x82 ; '.'
00000000000157b2         db  0xff ; '.'
00000000000157b3         db  0xff ; '.'
00000000000157b4         db  0x28 ; '('
00000000000157b5         db  0x7e ; '~'
00000000000157b6         db  0xff ; '.'
00000000000157b7         db  0xff ; '.'
00000000000157b8         db  0xe8 ; '.'
00000000000157b9         db  0x82 ; '.'
00000000000157ba         db  0xff ; '.'
00000000000157bb         db  0xff ; '.'
00000000000157bc         db  0x28 ; '('
00000000000157bd         db  0x7e ; '~'
00000000000157be         db  0xff ; '.'
00000000000157bf         db  0xff ; '.'
00000000000157c0         db  0xd0 ; '.'
00000000000157c1         db  0x82 ; '.'
00000000000157c2         db  0xff ; '.'
00000000000157c3         db  0xff ; '.'
00000000000157c4         db  0x00 ; '.'
00000000000157c5         db  0x00 ; '.'
00000000000157c6         db  0x00 ; '.'
00000000000157c7         db  0x00 ; '.'
00000000000157c8         db  0x00 ; '.'
00000000000157c9         db  0x00 ; '.'
00000000000157ca         db  0x00 ; '.'
00000000000157cb         db  0x00 ; '.'
00000000000157cc         db  0x00 ; '.'
00000000000157cd         db  0x00 ; '.'
00000000000157ce         db  0x00 ; '.'
00000000000157cf         db  0x00 ; '.'
00000000000157d0         db  0x00 ; '.'
00000000000157d1         db  0x00 ; '.'
00000000000157d2         db  0x00 ; '.'
00000000000157d3         db  0x00 ; '.'
00000000000157d4         db  0x00 ; '.'
00000000000157d5         db  0x00 ; '.'
00000000000157d6         db  0x00 ; '.'
00000000000157d7         db  0x00 ; '.'
00000000000157d8         db  0x00 ; '.'
00000000000157d9         db  0x00 ; '.'
00000000000157da         db  0x00 ; '.'
00000000000157db         db  0x00 ; '.'
00000000000157dc         db  0x00 ; '.'
00000000000157dd         db  0x00 ; '.'
00000000000157de         db  0x00 ; '.'
00000000000157df         db  0x00 ; '.'
                     quoting_style_vals:
00000000000157e0         db  0x00 ; '.'
00000000000157e1         db  0x00 ; '.'
00000000000157e2         db  0x00 ; '.'
00000000000157e3         db  0x00 ; '.'
00000000000157e4         db  0x01 ; '.'
00000000000157e5         db  0x00 ; '.'
00000000000157e6         db  0x00 ; '.'
00000000000157e7         db  0x00 ; '.'
00000000000157e8         db  0x02 ; '.'
00000000000157e9         db  0x00 ; '.'
00000000000157ea         db  0x00 ; '.'
00000000000157eb         db  0x00 ; '.'
00000000000157ec         db  0x03 ; '.'
00000000000157ed         db  0x00 ; '.'
00000000000157ee         db  0x00 ; '.'
00000000000157ef         db  0x00 ; '.'
00000000000157f0         db  0x04 ; '.'
00000000000157f1         db  0x00 ; '.'
00000000000157f2         db  0x00 ; '.'
00000000000157f3         db  0x00 ; '.'
00000000000157f4         db  0x05 ; '.'
00000000000157f5         db  0x00 ; '.'
00000000000157f6         db  0x00 ; '.'
00000000000157f7         db  0x00 ; '.'
00000000000157f8         db  0x06 ; '.'
00000000000157f9         db  0x00 ; '.'
00000000000157fa         db  0x00 ; '.'
00000000000157fb         db  0x00 ; '.'
00000000000157fc         db  0x07 ; '.'
00000000000157fd         db  0x00 ; '.'
00000000000157fe         db  0x00 ; '.'
00000000000157ff         db  0x00 ; '.'
0000000000015800         db  0x08 ; '.'
0000000000015801         db  0x00 ; '.'
0000000000015802         db  0x00 ; '.'
0000000000015803         db  0x00 ; '.'
0000000000015804         db  0x09 ; '.'
0000000000015805         db  0x00 ; '.'
0000000000015806         db  0x00 ; '.'
0000000000015807         db  0x00 ; '.'
                     aCoreutils831li:
0000000000015808         db         "../coreutils-8.31/lib/tempname.c", 0       ; DATA XREF=gen_tempname_len+29
0000000000015829         align      16
                     aInvalidKindInG:
0000000000015830         db         "! \"invalid KIND in __gen_tempname\"", 0   ; DATA XREF=gen_tempname_len+36
0000000000015853         align      32
                     __PRETTY_FUNCTION__.5642:
0000000000015860         db         "gen_tempname_len", 0                       ; DATA XREF=gen_tempname_len+22
0000000000015871         align      128
                     letters:
0000000000015880         db         "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789", 0 ; DATA XREF=try_tempname_len+144
                     aSSSn:
00000000000158bf         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn_158cb:        // aSSn
00000000000158cb         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
00000000000158d2         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
00000000000158d3         db  0x43 ; 'C'
00000000000158d4         db  0x29 ; ')'
00000000000158d5         db  0x00 ; '.'
                     aWrittenBySn:
00000000000158d6         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
00000000000158e6         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
00000000000158fd         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000015919         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
000000000001592e         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
0000000000015944         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
                     aNlicenseGplv3G:
0000000000015958         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000015a24         align      8
                     aWrittenBySSSna:
0000000000015a28         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_15a48:        // aWrittenBySSSns
0000000000015a48         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
0000000000015a6c         align      16
                     aWrittenBySSSns_15a70:        // aWrittenBySSSns
0000000000015a70         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_15a98:        // aWrittenBySSSns
0000000000015a98         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000015ac4         align      8
                     aWrittenBySSSns_15ac8:        // aWrittenBySSSns
0000000000015ac8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000015af8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
0000000000015b2c         align      16
                     aWrittenBySSSns_15b30:        // aWrittenBySSSns
0000000000015b30         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
0000000000015b6c         align      16
                     aGeneralHelpUsi:
0000000000015b70         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000015bb1         align      8
                     switch_table_15bb8:        // switch_table
0000000000015bb8         dd         version_etc_arn.loc_10ae6-switch_table_15bb8, version_etc_arn.loc_10b78-switch_table_15bb8, version_etc_arn.loc_10bb8-switch_table_15bb8, version_etc_arn.loc_10c00-switch_table_15bb8 ; switch table used at 0x10a64 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000015bc8         dd         version_etc_arn.loc_10c50-switch_table_15bb8, version_etc_arn.loc_10ca8-switch_table_15bb8, version_etc_arn.loc_10cd8-switch_table_15bb8, version_etc_arn.loc_10d40-switch_table_15bb8
0000000000015bd8         dd         version_etc_arn.loc_10a70-switch_table_15bb8, version_etc_arn.loc_10b20-switch_table_15bb8
                     version_etc_copyright:
0000000000015be0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
0000000000015c0f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
0000000000015c20         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000015c21         db  0x00 ; '.'
                     aPosix:
0000000000015c22         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000015c28         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
                     aSEndOfFile:
0000000000015c2e         db         "%s: end of file", 0                        ; DATA XREF=randread_error+77
                     aSReadError:
0000000000015c3e         db         "%s: read error", 0                         ; DATA XREF=randread_error+37
                     aDevurandom:
0000000000015c4d         db         "/dev/urandom", 0                           ; DATA XREF=randread_new+203
0000000000015c5a         db  0x72 ; 'r'                                         ; DATA XREF=randread_new+50
0000000000015c5b         db  0x62 ; 'b'
0000000000015c5c         db  0x00 ; '.'
0000000000015c5d         db  0x00 ; '.'
0000000000015c5e         db  0x00 ; '.'
0000000000015c5f         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x15c60; 0x163cc[ (1900 bytes)
        ; File offset : [89184; 91084[ (1900 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000015c60         db  0x01 ; '.'
0000000000015c61         db  0x1b ; '.'
0000000000015c62         db  0x03 ; '.'
0000000000015c63         db  0x3b ; ';'
0000000000015c64         db  0x6c ; 'l'
0000000000015c65         db  0x07 ; '.'
0000000000015c66         db  0x00 ; '.'
0000000000015c67         db  0x00 ; '.'
0000000000015c68         db  0xec ; '.'
0000000000015c69         db  0x00 ; '.'
0000000000015c6a         db  0x00 ; '.'
0000000000015c6b         db  0x00 ; '.'
0000000000015c6c         db  0xd0 ; '.'
0000000000015c6d         db  0xca ; '.'
0000000000015c6e         db  0xfe ; '.'
0000000000015c6f         db  0xff ; '.'
0000000000015c70         db  0xb8 ; '.'
0000000000015c71         db  0x07 ; '.'
0000000000015c72         db  0x00 ; '.'
0000000000015c73         db  0x00 ; '.'
0000000000015c74         db  0xb0 ; '.'
0000000000015c75         db  0xd1 ; '.'
0000000000015c76         db  0xfe ; '.'
0000000000015c77         db  0xff ; '.'
0000000000015c78         db  0xe0 ; '.'
0000000000015c79         db  0x07 ; '.'
0000000000015c7a         db  0x00 ; '.'
0000000000015c7b         db  0x00 ; '.'
0000000000015c7c         db  0xc0 ; '.'
0000000000015c7d         db  0xd1 ; '.'
0000000000015c7e         db  0xfe ; '.'
0000000000015c7f         db  0xff ; '.'
0000000000015c80         db  0x18 ; '.'
0000000000015c81         db  0x0a ; '.'
0000000000015c82         db  0x00 ; '.'
0000000000015c83         db  0x00 ; '.'
0000000000015c84         db  0xd6 ; '.'
0000000000015c85         db  0xd1 ; '.'
0000000000015c86         db  0xfe ; '.'
0000000000015c87         db  0xff ; '.'
0000000000015c88         db  0x2c ; ','
0000000000015c89         db  0x0a ; '.'
0000000000015c8a         db  0x00 ; '.'
0000000000015c8b         db  0x00 ; '.'
0000000000015c8c         db  0x10 ; '.'
0000000000015c8d         db  0xd2 ; '.'
0000000000015c8e         db  0xfe ; '.'
0000000000015c8f         db  0xff ; '.'
0000000000015c90         db  0x3c ; '<'
0000000000015c91         db  0x09 ; '.'
0000000000015c92         db  0x00 ; '.'
0000000000015c93         db  0x00 ; '.'
0000000000015c94         db  0x70 ; 'p'
0000000000015c95         db  0xda ; '.'
0000000000015c96         db  0xfe ; '.'
0000000000015c97         db  0xff ; '.'
0000000000015c98         db  0x88 ; '.'
0000000000015c99         db  0x07 ; '.'
0000000000015c9a         db  0x00 ; '.'
0000000000015c9b         db  0x00 ; '.'
0000000000015c9c         db  0x80 ; '.'
0000000000015c9d         db  0xdb ; '.'
0000000000015c9e         db  0xfe ; '.'
0000000000015c9f         db  0xff ; '.'
0000000000015ca0         db  0xf8 ; '.'
0000000000015ca1         db  0x07 ; '.'
0000000000015ca2         db  0x00 ; '.'
0000000000015ca3         db  0x00 ; '.'
0000000000015ca4         db  0xd0 ; '.'
0000000000015ca5         db  0xdc ; '.'
0000000000015ca6         db  0xfe ; '.'
0000000000015ca7         db  0xff ; '.'
0000000000015ca8         db  0x44 ; 'D'
0000000000015ca9         db  0x08 ; '.'
0000000000015caa         db  0x00 ; '.'
0000000000015cab         db  0x00 ; '.'
0000000000015cac         db  0xa0 ; '.'
0000000000015cad         db  0xdd ; '.'
0000000000015cae         db  0xfe ; '.'
0000000000015caf         db  0xff ; '.'
0000000000015cb0         db  0x80 ; '.'
0000000000015cb1         db  0x08 ; '.'
0000000000015cb2         db  0x00 ; '.'
0000000000015cb3         db  0x00 ; '.'
0000000000015cb4         db  0x60 ; '`'
0000000000015cb5         db  0xe3 ; '.'
0000000000015cb6         db  0xfe ; '.'
0000000000015cb7         db  0xff ; '.'
0000000000015cb8         db  0xb0 ; '.'
0000000000015cb9         db  0x08 ; '.'
0000000000015cba         db  0x00 ; '.'
0000000000015cbb         db  0x00 ; '.'
0000000000015cbc         db  0xc0 ; '.'
0000000000015cbd         db  0xe5 ; '.'
0000000000015cbe         db  0xfe ; '.'
0000000000015cbf         db  0xff ; '.'
0000000000015cc0         db  0xe0 ; '.'
0000000000015cc1         db  0x08 ; '.'
0000000000015cc2         db  0x00 ; '.'
0000000000015cc3         db  0x00 ; '.'
0000000000015cc4         db  0x80 ; '.'
0000000000015cc5         db  0xeb ; '.'
0000000000015cc6         db  0xfe ; '.'
0000000000015cc7         db  0xff ; '.'
0000000000015cc8         db  0x0c ; '.'
0000000000015cc9         db  0x09 ; '.'
0000000000015cca         db  0x00 ; '.'
0000000000015ccb         db  0x00 ; '.'
0000000000015ccc         db  0x90 ; '.'
0000000000015ccd         db  0xf0 ; '.'
0000000000015cce         db  0xfe ; '.'
0000000000015ccf         db  0xff ; '.'
0000000000015cd0         db  0x98 ; '.'
0000000000015cd1         db  0x09 ; '.'
0000000000015cd2         db  0x00 ; '.'
0000000000015cd3         db  0x00 ; '.'
0000000000015cd4         db  0xe0 ; '.'
0000000000015cd5         db  0xf0 ; '.'
0000000000015cd6         db  0xfe ; '.'
0000000000015cd7         db  0xff ; '.'
0000000000015cd8         db  0xbc ; '.'
0000000000015cd9         db  0x09 ; '.'
0000000000015cda         db  0x00 ; '.'
0000000000015cdb         db  0x00 ; '.'
0000000000015cdc         db  0x90 ; '.'
0000000000015cdd         db  0xf1 ; '.'
0000000000015cde         db  0xfe ; '.'
0000000000015cdf         db  0xff ; '.'
0000000000015ce0         db  0xf8 ; '.'
0000000000015ce1         db  0x09 ; '.'
0000000000015ce2         db  0x00 ; '.'
0000000000015ce3         db  0x00 ; '.'
0000000000015ce4         db  0xd0 ; '.'
0000000000015ce5         db  0xf1 ; '.'
0000000000015ce6         db  0xfe ; '.'
0000000000015ce7         db  0xff ; '.'
0000000000015ce8         db  0x44 ; 'D'
0000000000015ce9         db  0x0a ; '.'
0000000000015cea         db  0x00 ; '.'
0000000000015ceb         db  0x00 ; '.'
0000000000015cec         db  0x90 ; '.'
0000000000015ced         db  0xf2 ; '.'
0000000000015cee         db  0xfe ; '.'
0000000000015cef         db  0xff ; '.'
0000000000015cf0         db  0x7c ; '|'
0000000000015cf1         db  0x0a ; '.'
0000000000015cf2         db  0x00 ; '.'
0000000000015cf3         db  0x00 ; '.'
0000000000015cf4         db  0xa0 ; '.'
0000000000015cf5         db  0xf3 ; '.'
0000000000015cf6         db  0xfe ; '.'
0000000000015cf7         db  0xff ; '.'
0000000000015cf8         db  0xe4 ; '.'
0000000000015cf9         db  0x0a ; '.'
0000000000015cfa         db  0x00 ; '.'
0000000000015cfb         db  0x00 ; '.'
0000000000015cfc         db  0xf0 ; '.'
0000000000015cfd         db  0xf4 ; '.'
0000000000015cfe         db  0xfe ; '.'
0000000000015cff         db  0xff ; '.'
0000000000015d00         db  0x34 ; '4'
0000000000015d01         db  0x0b ; '.'
0000000000015d02         db  0x00 ; '.'
0000000000015d03         db  0x00 ; '.'
0000000000015d04         db  0xb0 ; '.'
0000000000015d05         db  0xf5 ; '.'
0000000000015d06         db  0xfe ; '.'
0000000000015d07         db  0xff ; '.'
0000000000015d08         db  0x84 ; '.'
0000000000015d09         db  0x0b ; '.'
0000000000015d0a         db  0x00 ; '.'
0000000000015d0b         db  0x00 ; '.'
0000000000015d0c         db  0xc0 ; '.'
0000000000015d0d         db  0xf9 ; '.'
0000000000015d0e         db  0xfe ; '.'
0000000000015d0f         db  0xff ; '.'
0000000000015d10         db  0xec ; '.'
0000000000015d11         db  0x0b ; '.'
0000000000015d12         db  0x00 ; '.'
0000000000015d13         db  0x00 ; '.'
0000000000015d14         db  0x90 ; '.'
0000000000015d15         db  0xfa ; '.'
0000000000015d16         db  0xfe ; '.'
0000000000015d17         db  0xff ; '.'
0000000000015d18         db  0x48 ; 'H'
0000000000015d19         db  0x0c ; '.'
0000000000015d1a         db  0x00 ; '.'
0000000000015d1b         db  0x00 ; '.'
0000000000015d1c         db  0x10 ; '.'
0000000000015d1d         db  0xfb ; '.'
0000000000015d1e         db  0xfe ; '.'
0000000000015d1f         db  0xff ; '.'
0000000000015d20         db  0x80 ; '.'
0000000000015d21         db  0x0c ; '.'
0000000000015d22         db  0x00 ; '.'
0000000000015d23         db  0x00 ; '.'
0000000000015d24         db  0x40 ; '@'
0000000000015d25         db  0xfb ; '.'
0000000000015d26         db  0xfe ; '.'
0000000000015d27         db  0xff ; '.'
0000000000015d28         db  0x9c ; '.'
0000000000015d29         db  0x0c ; '.'
0000000000015d2a         db  0x00 ; '.'
0000000000015d2b         db  0x00 ; '.'
0000000000015d2c         db  0x70 ; 'p'
0000000000015d2d         db  0xfb ; '.'
0000000000015d2e         db  0xfe ; '.'
0000000000015d2f         db  0xff ; '.'
0000000000015d30         db  0xb8 ; '.'
0000000000015d31         db  0x0c ; '.'
0000000000015d32         db  0x00 ; '.'
0000000000015d33         db  0x00 ; '.'
0000000000015d34         db  0xb0 ; '.'
0000000000015d35         db  0xfb ; '.'
0000000000015d36         db  0xfe ; '.'
0000000000015d37         db  0xff ; '.'
0000000000015d38         db  0xd4 ; '.'
0000000000015d39         db  0x0c ; '.'
0000000000015d3a         db  0x00 ; '.'
0000000000015d3b         db  0x00 ; '.'
0000000000015d3c         db  0xe0 ; '.'
0000000000015d3d         db  0xfb ; '.'
0000000000015d3e         db  0xfe ; '.'
0000000000015d3f         db  0xff ; '.'
0000000000015d40         db  0xf0 ; '.'
0000000000015d41         db  0x0c ; '.'
0000000000015d42         db  0x00 ; '.'
0000000000015d43         db  0x00 ; '.'
0000000000015d44         db  0xf0 ; '.'
0000000000015d45         db  0xfd ; '.'
0000000000015d46         db  0xfe ; '.'
0000000000015d47         db  0xff ; '.'
0000000000015d48         db  0x70 ; 'p'
0000000000015d49         db  0x0d ; '.'
0000000000015d4a         db  0x00 ; '.'
0000000000015d4b         db  0x00 ; '.'
0000000000015d4c         db  0x20 ; ' '
0000000000015d4d         db  0xfe ; '.'
0000000000015d4e         db  0xfe ; '.'
0000000000015d4f         db  0xff ; '.'
0000000000015d50         db  0x90 ; '.'
0000000000015d51         db  0x0d ; '.'
0000000000015d52         db  0x00 ; '.'
0000000000015d53         db  0x00 ; '.'
0000000000015d54         db  0x30 ; '0'
0000000000015d55         db  0x3f ; '?'
0000000000015d56         db  0xff ; '.'
0000000000015d57         db  0xff ; '.'
0000000000015d58         db  0xc0 ; '.'
0000000000015d59         db  0x0d ; '.'
0000000000015d5a         db  0x00 ; '.'
0000000000015d5b         db  0x00 ; '.'
0000000000015d5c         db  0xa0 ; '.'
0000000000015d5d         db  0x40 ; '@'
0000000000015d5e         db  0xff ; '.'
0000000000015d5f         db  0xff ; '.'
0000000000015d60         db  0xf0 ; '.'
0000000000015d61         db  0x0d ; '.'
0000000000015d62         db  0x00 ; '.'
0000000000015d63         db  0x00 ; '.'
0000000000015d64         db  0xb0 ; '.'
0000000000015d65         db  0x40 ; '@'
0000000000015d66         db  0xff ; '.'
0000000000015d67         db  0xff ; '.'
0000000000015d68         db  0x04 ; '.'
0000000000015d69         db  0x0e ; '.'
0000000000015d6a         db  0x00 ; '.'
0000000000015d6b         db  0x00 ; '.'
0000000000015d6c         db  0xd0 ; '.'
0000000000015d6d         db  0x40 ; '@'
0000000000015d6e         db  0xff ; '.'
0000000000015d6f         db  0xff ; '.'
0000000000015d70         db  0x18 ; '.'
0000000000015d71         db  0x0e ; '.'
0000000000015d72         db  0x00 ; '.'
0000000000015d73         db  0x00 ; '.'
0000000000015d74         db  0xf0 ; '.'
0000000000015d75         db  0x40 ; '@'
0000000000015d76         db  0xff ; '.'
0000000000015d77         db  0xff ; '.'
0000000000015d78         db  0x34 ; '4'
0000000000015d79         db  0x0e ; '.'
0000000000015d7a         db  0x00 ; '.'
0000000000015d7b         db  0x00 ; '.'
0000000000015d7c         db  0x60 ; '`'
0000000000015d7d         db  0x41 ; 'A'
0000000000015d7e         db  0xff ; '.'
0000000000015d7f         db  0xff ; '.'
0000000000015d80         db  0x58 ; 'X'
0000000000015d81         db  0x0e ; '.'
0000000000015d82         db  0x00 ; '.'
0000000000015d83         db  0x00 ; '.'
0000000000015d84         db  0xc0 ; '.'
0000000000015d85         db  0x41 ; 'A'
0000000000015d86         db  0xff ; '.'
0000000000015d87         db  0xff ; '.'
0000000000015d88         db  0x74 ; 't'
0000000000015d89         db  0x0e ; '.'
0000000000015d8a         db  0x00 ; '.'
0000000000015d8b         db  0x00 ; '.'
0000000000015d8c         db  0x40 ; '@'
0000000000015d8d         db  0x42 ; 'B'
0000000000015d8e         db  0xff ; '.'
0000000000015d8f         db  0xff ; '.'
0000000000015d90         db  0xb0 ; '.'
0000000000015d91         db  0x0e ; '.'
0000000000015d92         db  0x00 ; '.'
0000000000015d93         db  0x00 ; '.'
0000000000015d94         db  0x80 ; '.'
0000000000015d95         db  0x42 ; 'B'
0000000000015d96         db  0xff ; '.'
0000000000015d97         db  0xff ; '.'
0000000000015d98         db  0xcc ; '.'
0000000000015d99         db  0x0e ; '.'
0000000000015d9a         db  0x00 ; '.'
0000000000015d9b         db  0x00 ; '.'
0000000000015d9c         db  0x90 ; '.'
0000000000015d9d         db  0x42 ; 'B'
0000000000015d9e         db  0xff ; '.'
0000000000015d9f         db  0xff ; '.'
0000000000015da0         db  0xe0 ; '.'
0000000000015da1         db  0x0e ; '.'
0000000000015da2         db  0x00 ; '.'
0000000000015da3         db  0x00 ; '.'
0000000000015da4         db  0xc0 ; '.'
0000000000015da5         db  0x42 ; 'B'
0000000000015da6         db  0xff ; '.'
0000000000015da7         db  0xff ; '.'
0000000000015da8         db  0xf4 ; '.'
0000000000015da9         db  0x0e ; '.'
0000000000015daa         db  0x00 ; '.'
0000000000015dab         db  0x00 ; '.'
0000000000015dac         db  0xd0 ; '.'
0000000000015dad         db  0x45 ; 'E'
0000000000015dae         db  0xff ; '.'
0000000000015daf         db  0xff ; '.'
0000000000015db0         db  0x48 ; 'H'
0000000000015db1         db  0x0f ; '.'
0000000000015db2         db  0x00 ; '.'
0000000000015db3         db  0x00 ; '.'
0000000000015db4         db  0xf0 ; '.'
0000000000015db5         db  0x45 ; 'E'
0000000000015db6         db  0xff ; '.'
0000000000015db7         db  0xff ; '.'
0000000000015db8         db  0x5c ; '\'
0000000000015db9         db  0x0f ; '.'
0000000000015dba         db  0x00 ; '.'
0000000000015dbb         db  0x00 ; '.'
0000000000015dbc         db  0x50 ; 'P'
0000000000015dbd         db  0x46 ; 'F'
0000000000015dbe         db  0xff ; '.'
0000000000015dbf         db  0xff ; '.'
0000000000015dc0         db  0x88 ; '.'
0000000000015dc1         db  0x0f ; '.'
0000000000015dc2         db  0x00 ; '.'
0000000000015dc3         db  0x00 ; '.'
0000000000015dc4         db  0x70 ; 'p'
0000000000015dc5         db  0x46 ; 'F'
0000000000015dc6         db  0xff ; '.'
0000000000015dc7         db  0xff ; '.'
0000000000015dc8         db  0x9c ; '.'
0000000000015dc9         db  0x0f ; '.'
0000000000015dca         db  0x00 ; '.'
0000000000015dcb         db  0x00 ; '.'
0000000000015dcc         db  0xe0 ; '.'
0000000000015dcd         db  0x47 ; 'G'
0000000000015dce         db  0xff ; '.'
0000000000015dcf         db  0xff ; '.'
0000000000015dd0         db  0xe8 ; '.'
0000000000015dd1         db  0x0f ; '.'
0000000000015dd2         db  0x00 ; '.'
0000000000015dd3         db  0x00 ; '.'
0000000000015dd4         db  0x40 ; '@'
0000000000015dd5         db  0x49 ; 'I'
0000000000015dd6         db  0xff ; '.'
0000000000015dd7         db  0xff ; '.'
0000000000015dd8         db  0x30 ; '0'
0000000000015dd9         db  0x10 ; '.'
0000000000015dda         db  0x00 ; '.'
0000000000015ddb         db  0x00 ; '.'
0000000000015ddc         db  0xd0 ; '.'
0000000000015ddd         db  0x49 ; 'I'
0000000000015dde         db  0xff ; '.'
0000000000015ddf         db  0xff ; '.'
0000000000015de0         db  0x68 ; 'h'
0000000000015de1         db  0x10 ; '.'
0000000000015de2         db  0x00 ; '.'
0000000000015de3         db  0x00 ; '.'
0000000000015de4         db  0x20 ; ' '
0000000000015de5         db  0x4a ; 'J'
0000000000015de6         db  0xff ; '.'
0000000000015de7         db  0xff ; '.'
0000000000015de8         db  0x98 ; '.'
0000000000015de9         db  0x10 ; '.'
0000000000015dea         db  0x00 ; '.'
0000000000015deb         db  0x00 ; '.'
0000000000015dec         db  0x10 ; '.'
0000000000015ded         db  0x4b ; 'K'
0000000000015dee         db  0xff ; '.'
0000000000015def         db  0xff ; '.'
0000000000015df0         db  0xe8 ; '.'
0000000000015df1         db  0x10 ; '.'
0000000000015df2         db  0x00 ; '.'
0000000000015df3         db  0x00 ; '.'
0000000000015df4         db  0x20 ; ' '
0000000000015df5         db  0x4b ; 'K'
0000000000015df6         db  0xff ; '.'
0000000000015df7         db  0xff ; '.'
0000000000015df8         db  0xfc ; '.'
0000000000015df9         db  0x10 ; '.'
0000000000015dfa         db  0x00 ; '.'
0000000000015dfb         db  0x00 ; '.'
0000000000015dfc         db  0x40 ; '@'
0000000000015dfd         db  0x4c ; 'L'
0000000000015dfe         db  0xff ; '.'
0000000000015dff         db  0xff ; '.'
0000000000015e00         db  0x48 ; 'H'
0000000000015e01         db  0x11 ; '.'
0000000000015e02         db  0x00 ; '.'
0000000000015e03         db  0x00 ; '.'
0000000000015e04         db  0xc0 ; '.'
0000000000015e05         db  0x4c ; 'L'
0000000000015e06         db  0xff ; '.'
0000000000015e07         db  0xff ; '.'
0000000000015e08         db  0x74 ; 't'
0000000000015e09         db  0x11 ; '.'
0000000000015e0a         db  0x00 ; '.'
0000000000015e0b         db  0x00 ; '.'
0000000000015e0c         db  0xe0 ; '.'
0000000000015e0d         db  0x4d ; 'M'
0000000000015e0e         db  0xff ; '.'
0000000000015e0f         db  0xff ; '.'
0000000000015e10         db  0xd4 ; '.'
0000000000015e11         db  0x11 ; '.'
0000000000015e12         db  0x00 ; '.'
0000000000015e13         db  0x00 ; '.'
0000000000015e14         db  0x50 ; 'P'
0000000000015e15         db  0x4e ; 'N'
0000000000015e16         db  0xff ; '.'
0000000000015e17         db  0xff ; '.'
0000000000015e18         db  0x20 ; ' '
0000000000015e19         db  0x12 ; '.'
0000000000015e1a         db  0x00 ; '.'
0000000000015e1b         db  0x00 ; '.'
0000000000015e1c         db  0xa0 ; '.'
0000000000015e1d         db  0x4e ; 'N'
0000000000015e1e         db  0xff ; '.'
0000000000015e1f         db  0xff ; '.'
0000000000015e20         db  0x60 ; '`'
0000000000015e21         db  0x12 ; '.'
0000000000015e22         db  0x00 ; '.'
0000000000015e23         db  0x00 ; '.'
0000000000015e24         db  0xf0 ; '.'
0000000000015e25         db  0x4e ; 'N'
0000000000015e26         db  0xff ; '.'
0000000000015e27         db  0xff ; '.'
0000000000015e28         db  0x7c ; '|'
0000000000015e29         db  0x12 ; '.'
0000000000015e2a         db  0x00 ; '.'
0000000000015e2b         db  0x00 ; '.'
0000000000015e2c         db  0x10 ; '.'
0000000000015e2d         db  0x55 ; 'U'
0000000000015e2e         db  0xff ; '.'
0000000000015e2f         db  0xff ; '.'
0000000000015e30         db  0xd0 ; '.'
0000000000015e31         db  0x12 ; '.'
0000000000015e32         db  0x00 ; '.'
0000000000015e33         db  0x00 ; '.'
0000000000015e34         db  0x20 ; ' '
0000000000015e35         db  0x55 ; 'U'
0000000000015e36         db  0xff ; '.'
0000000000015e37         db  0xff ; '.'
0000000000015e38         db  0xe8 ; '.'
0000000000015e39         db  0x12 ; '.'
0000000000015e3a         db  0x00 ; '.'
0000000000015e3b         db  0x00 ; '.'
0000000000015e3c         db  0x60 ; '`'
0000000000015e3d         db  0x55 ; 'U'
0000000000015e3e         db  0xff ; '.'
0000000000015e3f         db  0xff ; '.'
0000000000015e40         db  0x00 ; '.'
0000000000015e41         db  0x13 ; '.'
0000000000015e42         db  0x00 ; '.'
0000000000015e43         db  0x00 ; '.'
0000000000015e44         db  0x80 ; '.'
0000000000015e45         db  0x55 ; 'U'
0000000000015e46         db  0xff ; '.'
0000000000015e47         db  0xff ; '.'
0000000000015e48         db  0x1c ; '.'
0000000000015e49         db  0x13 ; '.'
0000000000015e4a         db  0x00 ; '.'
0000000000015e4b         db  0x00 ; '.'
0000000000015e4c         db  0xa0 ; '.'
0000000000015e4d         db  0x55 ; 'U'
0000000000015e4e         db  0xff ; '.'
0000000000015e4f         db  0xff ; '.'
0000000000015e50         db  0x30 ; '0'
0000000000015e51         db  0x13 ; '.'
0000000000015e52         db  0x00 ; '.'
0000000000015e53         db  0x00 ; '.'
0000000000015e54         db  0xf0 ; '.'
0000000000015e55         db  0x55 ; 'U'
0000000000015e56         db  0xff ; '.'
0000000000015e57         db  0xff ; '.'
0000000000015e58         db  0x50 ; 'P'
0000000000015e59         db  0x13 ; '.'
0000000000015e5a         db  0x00 ; '.'
0000000000015e5b         db  0x00 ; '.'
0000000000015e5c         db  0x60 ; '`'
0000000000015e5d         db  0x56 ; 'V'
0000000000015e5e         db  0xff ; '.'
0000000000015e5f         db  0xff ; '.'
0000000000015e60         db  0x68 ; 'h'
0000000000015e61         db  0x13 ; '.'
0000000000015e62         db  0x00 ; '.'
0000000000015e63         db  0x00 ; '.'
0000000000015e64         db  0x70 ; 'p'
0000000000015e65         db  0x56 ; 'V'
0000000000015e66         db  0xff ; '.'
0000000000015e67         db  0xff ; '.'
0000000000015e68         db  0x7c ; '|'
0000000000015e69         db  0x13 ; '.'
0000000000015e6a         db  0x00 ; '.'
0000000000015e6b         db  0x00 ; '.'
0000000000015e6c         db  0x80 ; '.'
0000000000015e6d         db  0x57 ; 'W'
0000000000015e6e         db  0xff ; '.'
0000000000015e6f         db  0xff ; '.'
0000000000015e70         db  0xb8 ; '.'
0000000000015e71         db  0x13 ; '.'
0000000000015e72         db  0x00 ; '.'
0000000000015e73         db  0x00 ; '.'
0000000000015e74         db  0x90 ; '.'
0000000000015e75         db  0x57 ; 'W'
0000000000015e76         db  0xff ; '.'
0000000000015e77         db  0xff ; '.'
0000000000015e78         db  0xcc ; '.'
0000000000015e79         db  0x13 ; '.'
0000000000015e7a         db  0x00 ; '.'
0000000000015e7b         db  0x00 ; '.'
0000000000015e7c         db  0xa0 ; '.'
0000000000015e7d         db  0x57 ; 'W'
0000000000015e7e         db  0xff ; '.'
0000000000015e7f         db  0xff ; '.'
0000000000015e80         db  0xe0 ; '.'
0000000000015e81         db  0x13 ; '.'
0000000000015e82         db  0x00 ; '.'
0000000000015e83         db  0x00 ; '.'
0000000000015e84         db  0x50 ; 'P'
0000000000015e85         db  0x58 ; 'X'
0000000000015e86         db  0xff ; '.'
0000000000015e87         db  0xff ; '.'
0000000000015e88         db  0x10 ; '.'
0000000000015e89         db  0x14 ; '.'
0000000000015e8a         db  0x00 ; '.'
0000000000015e8b         db  0x00 ; '.'
0000000000015e8c         db  0x70 ; 'p'
0000000000015e8d         db  0x58 ; 'X'
0000000000015e8e         db  0xff ; '.'
0000000000015e8f         db  0xff ; '.'
0000000000015e90         db  0x30 ; '0'
0000000000015e91         db  0x14 ; '.'
0000000000015e92         db  0x00 ; '.'
0000000000015e93         db  0x00 ; '.'
0000000000015e94         db  0xd0 ; '.'
0000000000015e95         db  0x58 ; 'X'
0000000000015e96         db  0xff ; '.'
0000000000015e97         db  0xff ; '.'
0000000000015e98         db  0x64 ; 'd'
0000000000015e99         db  0x14 ; '.'
0000000000015e9a         db  0x00 ; '.'
0000000000015e9b         db  0x00 ; '.'
0000000000015e9c         db  0x30 ; '0'
0000000000015e9d         db  0x59 ; 'Y'
0000000000015e9e         db  0xff ; '.'
0000000000015e9f         db  0xff ; '.'
0000000000015ea0         db  0x90 ; '.'
0000000000015ea1         db  0x14 ; '.'
0000000000015ea2         db  0x00 ; '.'
0000000000015ea3         db  0x00 ; '.'
0000000000015ea4         db  0x90 ; '.'
0000000000015ea5         db  0x59 ; 'Y'
0000000000015ea6         db  0xff ; '.'
0000000000015ea7         db  0xff ; '.'
0000000000015ea8         db  0xa4 ; '.'
0000000000015ea9         db  0x14 ; '.'
0000000000015eaa         db  0x00 ; '.'
0000000000015eab         db  0x00 ; '.'
0000000000015eac         db  0xe0 ; '.'
0000000000015ead         db  0x59 ; 'Y'
0000000000015eae         db  0xff ; '.'
0000000000015eaf         db  0xff ; '.'
0000000000015eb0         db  0xd0 ; '.'
0000000000015eb1         db  0x14 ; '.'
0000000000015eb2         db  0x00 ; '.'
0000000000015eb3         db  0x00 ; '.'
0000000000015eb4         db  0x20 ; ' '
0000000000015eb5         db  0x5a ; 'Z'
0000000000015eb6         db  0xff ; '.'
0000000000015eb7         db  0xff ; '.'
0000000000015eb8         db  0xf8 ; '.'
0000000000015eb9         db  0x14 ; '.'
0000000000015eba         db  0x00 ; '.'
0000000000015ebb         db  0x00 ; '.'
0000000000015ebc         db  0x30 ; '0'
0000000000015ebd         db  0x5a ; 'Z'
0000000000015ebe         db  0xff ; '.'
0000000000015ebf         db  0xff ; '.'
0000000000015ec0         db  0x0c ; '.'
0000000000015ec1         db  0x15 ; '.'
0000000000015ec2         db  0x00 ; '.'
0000000000015ec3         db  0x00 ; '.'
0000000000015ec4         db  0x60 ; '`'
0000000000015ec5         db  0x5a ; 'Z'
0000000000015ec6         db  0xff ; '.'
0000000000015ec7         db  0xff ; '.'
0000000000015ec8         db  0x28 ; '('
0000000000015ec9         db  0x15 ; '.'
0000000000015eca         db  0x00 ; '.'
0000000000015ecb         db  0x00 ; '.'
0000000000015ecc         db  0xd0 ; '.'
0000000000015ecd         db  0x5a ; 'Z'
0000000000015ece         db  0xff ; '.'
0000000000015ecf         db  0xff ; '.'
0000000000015ed0         db  0x48 ; 'H'
0000000000015ed1         db  0x15 ; '.'
0000000000015ed2         db  0x00 ; '.'
0000000000015ed3         db  0x00 ; '.'
0000000000015ed4         db  0x60 ; '`'
0000000000015ed5         db  0x5b ; '['
0000000000015ed6         db  0xff ; '.'
0000000000015ed7         db  0xff ; '.'
0000000000015ed8         db  0xa8 ; '.'
0000000000015ed9         db  0x15 ; '.'
0000000000015eda         db  0x00 ; '.'
0000000000015edb         db  0x00 ; '.'
0000000000015edc         db  0xc0 ; '.'
0000000000015edd         db  0x5b ; '['
0000000000015ede         db  0xff ; '.'
0000000000015edf         db  0xff ; '.'
0000000000015ee0         db  0xc8 ; '.'
0000000000015ee1         db  0x15 ; '.'
0000000000015ee2         db  0x00 ; '.'
0000000000015ee3         db  0x00 ; '.'
0000000000015ee4         db  0x50 ; 'P'
0000000000015ee5         db  0x5d ; ']'
0000000000015ee6         db  0xff ; '.'
0000000000015ee7         db  0xff ; '.'
0000000000015ee8         db  0xdc ; '.'
0000000000015ee9         db  0x15 ; '.'
0000000000015eea         db  0x00 ; '.'
0000000000015eeb         db  0x00 ; '.'
0000000000015eec         db  0x60 ; '`'
0000000000015eed         db  0x5d ; ']'
0000000000015eee         db  0xff ; '.'
0000000000015eef         db  0xff ; '.'
0000000000015ef0         db  0xf0 ; '.'
0000000000015ef1         db  0x15 ; '.'
0000000000015ef2         db  0x00 ; '.'
0000000000015ef3         db  0x00 ; '.'
0000000000015ef4         db  0x80 ; '.'
0000000000015ef5         db  0x5d ; ']'
0000000000015ef6         db  0xff ; '.'
0000000000015ef7         db  0xff ; '.'
0000000000015ef8         db  0x10 ; '.'
0000000000015ef9         db  0x16 ; '.'
0000000000015efa         db  0x00 ; '.'
0000000000015efb         db  0x00 ; '.'
0000000000015efc         db  0x80 ; '.'
0000000000015efd         db  0x5e ; '^'
0000000000015efe         db  0xff ; '.'
0000000000015eff         db  0xff ; '.'
0000000000015f00         db  0x60 ; '`'
0000000000015f01         db  0x16 ; '.'
0000000000015f02         db  0x00 ; '.'
0000000000015f03         db  0x00 ; '.'
0000000000015f04         db  0x00 ; '.'
0000000000015f05         db  0x5f ; '_'
0000000000015f06         db  0xff ; '.'
0000000000015f07         db  0xff ; '.'
0000000000015f08         db  0xb0 ; '.'
0000000000015f09         db  0x16 ; '.'
0000000000015f0a         db  0x00 ; '.'
0000000000015f0b         db  0x00 ; '.'
0000000000015f0c         db  0xa0 ; '.'
0000000000015f0d         db  0x5f ; '_'
0000000000015f0e         db  0xff ; '.'
0000000000015f0f         db  0xff ; '.'
0000000000015f10         db  0xc4 ; '.'
0000000000015f11         db  0x16 ; '.'
0000000000015f12         db  0x00 ; '.'
0000000000015f13         db  0x00 ; '.'
0000000000015f14         db  0xb0 ; '.'
0000000000015f15         db  0x5f ; '_'
0000000000015f16         db  0xff ; '.'
0000000000015f17         db  0xff ; '.'
0000000000015f18         db  0xd8 ; '.'
0000000000015f19         db  0x16 ; '.'
0000000000015f1a         db  0x00 ; '.'
0000000000015f1b         db  0x00 ; '.'
0000000000015f1c         db  0xc0 ; '.'
0000000000015f1d         db  0x5f ; '_'
0000000000015f1e         db  0xff ; '.'
0000000000015f1f         db  0xff ; '.'
0000000000015f20         db  0xec ; '.'
0000000000015f21         db  0x16 ; '.'
0000000000015f22         db  0x00 ; '.'
0000000000015f23         db  0x00 ; '.'
0000000000015f24         db  0xf0 ; '.'
0000000000015f25         db  0x5f ; '_'
0000000000015f26         db  0xff ; '.'
0000000000015f27         db  0xff ; '.'
0000000000015f28         db  0x08 ; '.'
0000000000015f29         db  0x17 ; '.'
0000000000015f2a         db  0x00 ; '.'
0000000000015f2b         db  0x00 ; '.'
0000000000015f2c         db  0x10 ; '.'
0000000000015f2d         db  0x61 ; 'a'
0000000000015f2e         db  0xff ; '.'
0000000000015f2f         db  0xff ; '.'
0000000000015f30         db  0x68 ; 'h'
0000000000015f31         db  0x17 ; '.'
0000000000015f32         db  0x00 ; '.'
0000000000015f33         db  0x00 ; '.'
0000000000015f34         db  0x90 ; '.'
0000000000015f35         db  0x61 ; 'a'
0000000000015f36         db  0xff ; '.'
0000000000015f37         db  0xff ; '.'
0000000000015f38         db  0x7c ; '|'
0000000000015f39         db  0x17 ; '.'
0000000000015f3a         db  0x00 ; '.'
0000000000015f3b         db  0x00 ; '.'
0000000000015f3c         db  0xd0 ; '.'
0000000000015f3d         db  0x62 ; 'b'
0000000000015f3e         db  0xff ; '.'
0000000000015f3f         db  0xff ; '.'
0000000000015f40         db  0xdc ; '.'
0000000000015f41         db  0x17 ; '.'
0000000000015f42         db  0x00 ; '.'
0000000000015f43         db  0x00 ; '.'
0000000000015f44         db  0xe0 ; '.'
0000000000015f45         db  0x62 ; 'b'
0000000000015f46         db  0xff ; '.'
0000000000015f47         db  0xff ; '.'
0000000000015f48         db  0xf0 ; '.'
0000000000015f49         db  0x17 ; '.'
0000000000015f4a         db  0x00 ; '.'
0000000000015f4b         db  0x00 ; '.'
0000000000015f4c         db  0xf0 ; '.'
0000000000015f4d         db  0x62 ; 'b'
0000000000015f4e         db  0xff ; '.'
0000000000015f4f         db  0xff ; '.'
0000000000015f50         db  0x04 ; '.'
0000000000015f51         db  0x18 ; '.'
0000000000015f52         db  0x00 ; '.'
0000000000015f53         db  0x00 ; '.'
0000000000015f54         db  0x00 ; '.'
0000000000015f55         db  0x63 ; 'c'
0000000000015f56         db  0xff ; '.'
0000000000015f57         db  0xff ; '.'
0000000000015f58         db  0x18 ; '.'
0000000000015f59         db  0x18 ; '.'
0000000000015f5a         db  0x00 ; '.'
0000000000015f5b         db  0x00 ; '.'
0000000000015f5c         db  0x50 ; 'P'
0000000000015f5d         db  0x63 ; 'c'
0000000000015f5e         db  0xff ; '.'
0000000000015f5f         db  0xff ; '.'
0000000000015f60         db  0x2c ; ','
0000000000015f61         db  0x18 ; '.'
0000000000015f62         db  0x00 ; '.'
0000000000015f63         db  0x00 ; '.'
0000000000015f64         db  0xb0 ; '.'
0000000000015f65         db  0x63 ; 'c'
0000000000015f66         db  0xff ; '.'
0000000000015f67         db  0xff ; '.'
0000000000015f68         db  0x40 ; '@'
0000000000015f69         db  0x18 ; '.'
0000000000015f6a         db  0x00 ; '.'
0000000000015f6b         db  0x00 ; '.'
0000000000015f6c         db  0x00 ; '.'
0000000000015f6d         db  0x65 ; 'e'
0000000000015f6e         db  0xff ; '.'
0000000000015f6f         db  0xff ; '.'
0000000000015f70         db  0x7c ; '|'
0000000000015f71         db  0x18 ; '.'
0000000000015f72         db  0x00 ; '.'
0000000000015f73         db  0x00 ; '.'
0000000000015f74         db  0x60 ; '`'
0000000000015f75         db  0x65 ; 'e'
0000000000015f76         db  0xff ; '.'
0000000000015f77         db  0xff ; '.'
0000000000015f78         db  0xb4 ; '.'
0000000000015f79         db  0x18 ; '.'
0000000000015f7a         db  0x00 ; '.'
0000000000015f7b         db  0x00 ; '.'
0000000000015f7c         db  0xb0 ; '.'
0000000000015f7d         db  0x65 ; 'e'
0000000000015f7e         db  0xff ; '.'
0000000000015f7f         db  0xff ; '.'
0000000000015f80         db  0xc8 ; '.'
0000000000015f81         db  0x18 ; '.'
0000000000015f82         db  0x00 ; '.'
0000000000015f83         db  0x00 ; '.'
0000000000015f84         db  0x30 ; '0'
0000000000015f85         db  0x66 ; 'f'
0000000000015f86         db  0xff ; '.'
0000000000015f87         db  0xff ; '.'
0000000000015f88         db  0xfc ; '.'
0000000000015f89         db  0x18 ; '.'
0000000000015f8a         db  0x00 ; '.'
0000000000015f8b         db  0x00 ; '.'
0000000000015f8c         db  0xa0 ; '.'
0000000000015f8d         db  0x66 ; 'f'
0000000000015f8e         db  0xff ; '.'
0000000000015f8f         db  0xff ; '.'
0000000000015f90         db  0x10 ; '.'
0000000000015f91         db  0x19 ; '.'
0000000000015f92         db  0x00 ; '.'
0000000000015f93         db  0x00 ; '.'
0000000000015f94         db  0x10 ; '.'
0000000000015f95         db  0x67 ; 'g'
0000000000015f96         db  0xff ; '.'
0000000000015f97         db  0xff ; '.'
0000000000015f98         db  0x5c ; '\'
0000000000015f99         db  0x19 ; '.'
0000000000015f9a         db  0x00 ; '.'
0000000000015f9b         db  0x00 ; '.'
0000000000015f9c         db  0x50 ; 'P'
0000000000015f9d         db  0x67 ; 'g'
0000000000015f9e         db  0xff ; '.'
0000000000015f9f         db  0xff ; '.'
0000000000015fa0         db  0x70 ; 'p'
0000000000015fa1         db  0x19 ; '.'
0000000000015fa2         db  0x00 ; '.'
0000000000015fa3         db  0x00 ; '.'
0000000000015fa4         db  0x70 ; 'p'
0000000000015fa5         db  0x67 ; 'g'
0000000000015fa6         db  0xff ; '.'
0000000000015fa7         db  0xff ; '.'
0000000000015fa8         db  0x84 ; '.'
0000000000015fa9         db  0x19 ; '.'
0000000000015faa         db  0x00 ; '.'
0000000000015fab         db  0x00 ; '.'
0000000000015fac         db  0x30 ; '0'
0000000000015fad         db  0x69 ; 'i'
0000000000015fae         db  0xff ; '.'
0000000000015faf         db  0xff ; '.'
0000000000015fb0         db  0xd0 ; '.'
0000000000015fb1         db  0x19 ; '.'
0000000000015fb2         db  0x00 ; '.'
0000000000015fb3         db  0x00 ; '.'
0000000000015fb4         db  0xc0 ; '.'
0000000000015fb5         db  0x69 ; 'i'
0000000000015fb6         db  0xff ; '.'
0000000000015fb7         db  0xff ; '.'
0000000000015fb8         db  0xfc ; '.'
0000000000015fb9         db  0x19 ; '.'
0000000000015fba         db  0x00 ; '.'
0000000000015fbb         db  0x00 ; '.'
0000000000015fbc         db  0xa0 ; '.'
0000000000015fbd         db  0x6a ; 'j'
0000000000015fbe         db  0xff ; '.'
0000000000015fbf         db  0xff ; '.'
0000000000015fc0         db  0x28 ; '('
0000000000015fc1         db  0x1a ; '.'
0000000000015fc2         db  0x00 ; '.'
0000000000015fc3         db  0x00 ; '.'
0000000000015fc4         db  0xe0 ; '.'
0000000000015fc5         db  0x6c ; 'l'
0000000000015fc6         db  0xff ; '.'
0000000000015fc7         db  0xff ; '.'
0000000000015fc8         db  0x60 ; '`'
0000000000015fc9         db  0x1a ; '.'
0000000000015fca         db  0x00 ; '.'
0000000000015fcb         db  0x00 ; '.'
0000000000015fcc         db  0x70 ; 'p'
0000000000015fcd         db  0x6f ; 'o'
0000000000015fce         db  0xff ; '.'
0000000000015fcf         db  0xff ; '.'
0000000000015fd0         db  0x9c ; '.'
0000000000015fd1         db  0x1a ; '.'
0000000000015fd2         db  0x00 ; '.'
0000000000015fd3         db  0x00 ; '.'
0000000000015fd4         db  0xd0 ; '.'
0000000000015fd5         db  0x6f ; 'o'
0000000000015fd6         db  0xff ; '.'
0000000000015fd7         db  0xff ; '.'
0000000000015fd8         db  0xc0 ; '.'
0000000000015fd9         db  0x1a ; '.'
0000000000015fda         db  0x00 ; '.'
0000000000015fdb         db  0x00 ; '.'
0000000000015fdc         db  0xe0 ; '.'
0000000000015fdd         db  0x71 ; 'q'
0000000000015fde         db  0xff ; '.'
0000000000015fdf         db  0xff ; '.'
0000000000015fe0         db  0xf8 ; '.'
0000000000015fe1         db  0x1a ; '.'
0000000000015fe2         db  0x00 ; '.'
0000000000015fe3         db  0x00 ; '.'
0000000000015fe4         db  0x10 ; '.'
0000000000015fe5         db  0x72 ; 'r'
0000000000015fe6         db  0xff ; '.'
0000000000015fe7         db  0xff ; '.'
0000000000015fe8         db  0x20 ; ' '
0000000000015fe9         db  0x1b ; '.'
0000000000015fea         db  0x00 ; '.'
0000000000015feb         db  0x00 ; '.'
0000000000015fec         db  0x20 ; ' '
0000000000015fed         db  0x72 ; 'r'
0000000000015fee         db  0xff ; '.'
0000000000015fef         db  0xff ; '.'
0000000000015ff0         db  0x34 ; '4'
0000000000015ff1         db  0x1b ; '.'
0000000000015ff2         db  0x00 ; '.'
0000000000015ff3         db  0x00 ; '.'
0000000000015ff4         db  0x50 ; 'P'
0000000000015ff5         db  0x72 ; 'r'
0000000000015ff6         db  0xff ; '.'
0000000000015ff7         db  0xff ; '.'
0000000000015ff8         db  0x4c ; 'L'
0000000000015ff9         db  0x1b ; '.'
0000000000015ffa         db  0x00 ; '.'
0000000000015ffb         db  0x00 ; '.'
0000000000015ffc         db  0x90 ; '.'
0000000000015ffd         db  0x72 ; 'r'
0000000000015ffe         db  0xff ; '.'
0000000000015fff         db  0xff ; '.'
0000000000016000         db  0x64 ; 'd'
0000000000016001         db  0x1b ; '.'
0000000000016002         db  0x00 ; '.'
0000000000016003         db  0x00 ; '.'
0000000000016004         db  0xb0 ; '.'
0000000000016005         db  0x72 ; 'r'
0000000000016006         db  0xff ; '.'
0000000000016007         db  0xff ; '.'
0000000000016008         db  0x80 ; '.'
0000000000016009         db  0x1b ; '.'
000000000001600a         db  0x00 ; '.'
000000000001600b         db  0x00 ; '.'
000000000001600c         db  0x30 ; '0'
000000000001600d         db  0x73 ; 's'
000000000001600e         db  0xff ; '.'
000000000001600f         db  0xff ; '.'
0000000000016010         db  0xe0 ; '.'
0000000000016011         db  0x1b ; '.'
0000000000016012         db  0x00 ; '.'
0000000000016013         db  0x00 ; '.'
0000000000016014         db  0xd0 ; '.'
0000000000016015         db  0x73 ; 's'
0000000000016016         db  0xff ; '.'
0000000000016017         db  0xff ; '.'
0000000000016018         db  0x00 ; '.'
0000000000016019         db  0x1c ; '.'
000000000001601a         db  0x00 ; '.'
000000000001601b         db  0x00 ; '.'
000000000001601c         db  0x50 ; 'P'
000000000001601d         db  0x74 ; 't'
000000000001601e         db  0xff ; '.'
000000000001601f         db  0xff ; '.'
0000000000016020         db  0x38 ; '8'
0000000000016021         db  0x1c ; '.'
0000000000016022         db  0x00 ; '.'
0000000000016023         db  0x00 ; '.'
0000000000016024         db  0xb0 ; '.'
0000000000016025         db  0x74 ; 't'
0000000000016026         db  0xff ; '.'
0000000000016027         db  0xff ; '.'
0000000000016028         db  0x68 ; 'h'
0000000000016029         db  0x1c ; '.'
000000000001602a         db  0x00 ; '.'
000000000001602b         db  0x00 ; '.'
000000000001602c         db  0xa0 ; '.'
000000000001602d         db  0x75 ; 'u'
000000000001602e         db  0xff ; '.'
000000000001602f         db  0xff ; '.'
0000000000016030         db  0xac ; '.'
0000000000016031         db  0x1c ; '.'
0000000000016032         db  0x00 ; '.'
0000000000016033         db  0x00 ; '.'
0000000000016034         db  0xe0 ; '.'
0000000000016035         db  0x87 ; '.'
0000000000016036         db  0xff ; '.'
0000000000016037         db  0xff ; '.'
0000000000016038         db  0x24 ; '$'
0000000000016039         db  0x1d ; '.'
000000000001603a         db  0x00 ; '.'
000000000001603b         db  0x00 ; '.'
000000000001603c         db  0x90 ; '.'
000000000001603d         db  0x89 ; '.'
000000000001603e         db  0xff ; '.'
000000000001603f         db  0xff ; '.'
0000000000016040         db  0x90 ; '.'
0000000000016041         db  0x1d ; '.'
0000000000016042         db  0x00 ; '.'
0000000000016043         db  0x00 ; '.'
0000000000016044         db  0xd0 ; '.'
0000000000016045         db  0x89 ; '.'
0000000000016046         db  0xff ; '.'
0000000000016047         db  0xff ; '.'
0000000000016048         db  0xbc ; '.'
0000000000016049         db  0x1d ; '.'
000000000001604a         db  0x00 ; '.'
000000000001604b         db  0x00 ; '.'
000000000001604c         db  0xf0 ; '.'
000000000001604d         db  0x89 ; '.'
000000000001604e         db  0xff ; '.'
000000000001604f         db  0xff ; '.'
0000000000016050         db  0xd0 ; '.'
0000000000016051         db  0x1d ; '.'
0000000000016052         db  0x00 ; '.'
0000000000016053         db  0x00 ; '.'
0000000000016054         db  0x10 ; '.'
0000000000016055         db  0x8a ; '.'
0000000000016056         db  0xff ; '.'
0000000000016057         db  0xff ; '.'
0000000000016058         db  0xe4 ; '.'
0000000000016059         db  0x1d ; '.'
000000000001605a         db  0x00 ; '.'
000000000001605b         db  0x00 ; '.'
000000000001605c         db  0x50 ; 'P'
000000000001605d         db  0x8a ; '.'
000000000001605e         db  0xff ; '.'
000000000001605f         db  0xff ; '.'
0000000000016060         db  0xf8 ; '.'
0000000000016061         db  0x1d ; '.'
0000000000016062         db  0x00 ; '.'
0000000000016063         db  0x00 ; '.'
0000000000016064         db  0x70 ; 'p'
0000000000016065         db  0x8a ; '.'
0000000000016066         db  0xff ; '.'
0000000000016067         db  0xff ; '.'
0000000000016068         db  0x0c ; '.'
0000000000016069         db  0x1e ; '.'
000000000001606a         db  0x00 ; '.'
000000000001606b         db  0x00 ; '.'
000000000001606c         db  0xa0 ; '.'
000000000001606d         db  0x8a ; '.'
000000000001606e         db  0xff ; '.'
000000000001606f         db  0xff ; '.'
0000000000016070         db  0x20 ; ' '
0000000000016071         db  0x1e ; '.'
0000000000016072         db  0x00 ; '.'
0000000000016073         db  0x00 ; '.'
0000000000016074         db  0x20 ; ' '
0000000000016075         db  0x8b ; '.'
0000000000016076         db  0xff ; '.'
0000000000016077         db  0xff ; '.'
0000000000016078         db  0x74 ; 't'
0000000000016079         db  0x1e ; '.'
000000000001607a         db  0x00 ; '.'
000000000001607b         db  0x00 ; '.'
000000000001607c         db  0x10 ; '.'
000000000001607d         db  0x8c ; '.'
000000000001607e         db  0xff ; '.'
000000000001607f         db  0xff ; '.'
0000000000016080         db  0xe0 ; '.'
0000000000016081         db  0x1e ; '.'
0000000000016082         db  0x00 ; '.'
0000000000016083         db  0x00 ; '.'
0000000000016084         db  0x20 ; ' '
0000000000016085         db  0x8c ; '.'
0000000000016086         db  0xff ; '.'
0000000000016087         db  0xff ; '.'
0000000000016088         db  0xf4 ; '.'
0000000000016089         db  0x1e ; '.'
000000000001608a         db  0x00 ; '.'
000000000001608b         db  0x00 ; '.'
000000000001608c         db  0xc0 ; '.'
000000000001608d         db  0x8c ; '.'
000000000001608e         db  0xff ; '.'
000000000001608f         db  0xff ; '.'
0000000000016090         db  0x20 ; ' '
0000000000016091         db  0x1f ; '.'
0000000000016092         db  0x00 ; '.'
0000000000016093         db  0x00 ; '.'
0000000000016094         db  0xe0 ; '.'
0000000000016095         db  0x8c ; '.'
0000000000016096         db  0xff ; '.'
0000000000016097         db  0xff ; '.'
0000000000016098         db  0x34 ; '4'
0000000000016099         db  0x1f ; '.'
000000000001609a         db  0x00 ; '.'
000000000001609b         db  0x00 ; '.'
000000000001609c         db  0xf0 ; '.'
000000000001609d         db  0x8c ; '.'
000000000001609e         db  0xff ; '.'
000000000001609f         db  0xff ; '.'
00000000000160a0         db  0x48 ; 'H'
00000000000160a1         db  0x1f ; '.'
00000000000160a2         db  0x00 ; '.'
00000000000160a3         db  0x00 ; '.'
00000000000160a4         db  0x10 ; '.'
00000000000160a5         db  0x8d ; '.'
00000000000160a6         db  0xff ; '.'
00000000000160a7         db  0xff ; '.'
00000000000160a8         db  0x5c ; '\'
00000000000160a9         db  0x1f ; '.'
00000000000160aa         db  0x00 ; '.'
00000000000160ab         db  0x00 ; '.'
00000000000160ac         db  0x30 ; '0'
00000000000160ad         db  0x8d ; '.'
00000000000160ae         db  0xff ; '.'
00000000000160af         db  0xff ; '.'
00000000000160b0         db  0x70 ; 'p'
00000000000160b1         db  0x1f ; '.'
00000000000160b2         db  0x00 ; '.'
00000000000160b3         db  0x00 ; '.'
00000000000160b4         db  0xc0 ; '.'
00000000000160b5         db  0x8d ; '.'
00000000000160b6         db  0xff ; '.'
00000000000160b7         db  0xff ; '.'
00000000000160b8         db  0x8c ; '.'
00000000000160b9         db  0x1f ; '.'
00000000000160ba         db  0x00 ; '.'
00000000000160bb         db  0x00 ; '.'
00000000000160bc         db  0x50 ; 'P'
00000000000160bd         db  0x8e ; '.'
00000000000160be         db  0xff ; '.'
00000000000160bf         db  0xff ; '.'
00000000000160c0         db  0xa8 ; '.'
00000000000160c1         db  0x1f ; '.'
00000000000160c2         db  0x00 ; '.'
00000000000160c3         db  0x00 ; '.'
00000000000160c4         db  0x60 ; '`'
00000000000160c5         db  0x8e ; '.'
00000000000160c6         db  0xff ; '.'
00000000000160c7         db  0xff ; '.'
00000000000160c8         db  0xbc ; '.'
00000000000160c9         db  0x1f ; '.'
00000000000160ca         db  0x00 ; '.'
00000000000160cb         db  0x00 ; '.'
00000000000160cc         db  0x70 ; 'p'
00000000000160cd         db  0x8e ; '.'
00000000000160ce         db  0xff ; '.'
00000000000160cf         db  0xff ; '.'
00000000000160d0         db  0xd0 ; '.'
00000000000160d1         db  0x1f ; '.'
00000000000160d2         db  0x00 ; '.'
00000000000160d3         db  0x00 ; '.'
00000000000160d4         db  0x10 ; '.'
00000000000160d5         db  0x8f ; '.'
00000000000160d6         db  0xff ; '.'
00000000000160d7         db  0xff ; '.'
00000000000160d8         db  0xec ; '.'
00000000000160d9         db  0x1f ; '.'
00000000000160da         db  0x00 ; '.'
00000000000160db         db  0x00 ; '.'
00000000000160dc         db  0x20 ; ' '
00000000000160dd         db  0x8f ; '.'
00000000000160de         db  0xff ; '.'
00000000000160df         db  0xff ; '.'
00000000000160e0         db  0x00 ; '.'
00000000000160e1         db  0x20 ; ' '
00000000000160e2         db  0x00 ; '.'
00000000000160e3         db  0x00 ; '.'
00000000000160e4         db  0x40 ; '@'
00000000000160e5         db  0x8f ; '.'
00000000000160e6         db  0xff ; '.'
00000000000160e7         db  0xff ; '.'
00000000000160e8         db  0x14 ; '.'
00000000000160e9         db  0x20 ; ' '
00000000000160ea         db  0x00 ; '.'
00000000000160eb         db  0x00 ; '.'
00000000000160ec         db  0x50 ; 'P'
00000000000160ed         db  0x8f ; '.'
00000000000160ee         db  0xff ; '.'
00000000000160ef         db  0xff ; '.'
00000000000160f0         db  0x28 ; '('
00000000000160f1         db  0x20 ; ' '
00000000000160f2         db  0x00 ; '.'
00000000000160f3         db  0x00 ; '.'
00000000000160f4         db  0xe0 ; '.'
00000000000160f5         db  0x8f ; '.'
00000000000160f6         db  0xff ; '.'
00000000000160f7         db  0xff ; '.'
00000000000160f8         db  0x44 ; 'D'
00000000000160f9         db  0x20 ; ' '
00000000000160fa         db  0x00 ; '.'
00000000000160fb         db  0x00 ; '.'
00000000000160fc         db  0x80 ; '.'
00000000000160fd         db  0x90 ; '.'
00000000000160fe         db  0xff ; '.'
00000000000160ff         db  0xff ; '.'
0000000000016100         db  0x60 ; '`'
0000000000016101         db  0x20 ; ' '
0000000000016102         db  0x00 ; '.'
0000000000016103         db  0x00 ; '.'
0000000000016104         db  0x90 ; '.'
0000000000016105         db  0x90 ; '.'
0000000000016106         db  0xff ; '.'
0000000000016107         db  0xff ; '.'
0000000000016108         db  0x74 ; 't'
0000000000016109         db  0x20 ; ' '
000000000001610a         db  0x00 ; '.'
000000000001610b         db  0x00 ; '.'
000000000001610c         db  0xb0 ; '.'
000000000001610d         db  0x90 ; '.'
000000000001610e         db  0xff ; '.'
000000000001610f         db  0xff ; '.'
0000000000016110         db  0x88 ; '.'
0000000000016111         db  0x20 ; ' '
0000000000016112         db  0x00 ; '.'
0000000000016113         db  0x00 ; '.'
0000000000016114         db  0xd0 ; '.'
0000000000016115         db  0x90 ; '.'
0000000000016116         db  0xff ; '.'
0000000000016117         db  0xff ; '.'
0000000000016118         db  0x9c ; '.'
0000000000016119         db  0x20 ; ' '
000000000001611a         db  0x00 ; '.'
000000000001611b         db  0x00 ; '.'
000000000001611c         db  0xe0 ; '.'
000000000001611d         db  0x90 ; '.'
000000000001611e         db  0xff ; '.'
000000000001611f         db  0xff ; '.'
0000000000016120         db  0xb0 ; '.'
0000000000016121         db  0x20 ; ' '
0000000000016122         db  0x00 ; '.'
0000000000016123         db  0x00 ; '.'
0000000000016124         db  0x00 ; '.'
0000000000016125         db  0x91 ; '.'
0000000000016126         db  0xff ; '.'
0000000000016127         db  0xff ; '.'
0000000000016128         db  0xc4 ; '.'
0000000000016129         db  0x20 ; ' '
000000000001612a         db  0x00 ; '.'
000000000001612b         db  0x00 ; '.'
000000000001612c         db  0x20 ; ' '
000000000001612d         db  0x91 ; '.'
000000000001612e         db  0xff ; '.'
000000000001612f         db  0xff ; '.'
0000000000016130         db  0xd8 ; '.'
0000000000016131         db  0x20 ; ' '
0000000000016132         db  0x00 ; '.'
0000000000016133         db  0x00 ; '.'
0000000000016134         db  0x40 ; '@'
0000000000016135         db  0x91 ; '.'
0000000000016136         db  0xff ; '.'
0000000000016137         db  0xff ; '.'
0000000000016138         db  0xf0 ; '.'
0000000000016139         db  0x20 ; ' '
000000000001613a         db  0x00 ; '.'
000000000001613b         db  0x00 ; '.'
000000000001613c         db  0xb0 ; '.'
000000000001613d         db  0x93 ; '.'
000000000001613e         db  0xff ; '.'
000000000001613f         db  0xff ; '.'
0000000000016140         db  0x40 ; '@'
0000000000016141         db  0x21 ; '!'
0000000000016142         db  0x00 ; '.'
0000000000016143         db  0x00 ; '.'
0000000000016144         db  0x10 ; '.'
0000000000016145         db  0x94 ; '.'
0000000000016146         db  0xff ; '.'
0000000000016147         db  0xff ; '.'
0000000000016148         db  0x78 ; 'x'
0000000000016149         db  0x21 ; '!'
000000000001614a         db  0x00 ; '.'
000000000001614b         db  0x00 ; '.'
000000000001614c         db  0x40 ; '@'
000000000001614d         db  0x95 ; '.'
000000000001614e         db  0xff ; '.'
000000000001614f         db  0xff ; '.'
0000000000016150         db  0xb4 ; '.'
0000000000016151         db  0x21 ; '!'
0000000000016152         db  0x00 ; '.'
0000000000016153         db  0x00 ; '.'
0000000000016154         db  0xe0 ; '.'
0000000000016155         db  0x95 ; '.'
0000000000016156         db  0xff ; '.'
0000000000016157         db  0xff ; '.'
0000000000016158         db  0x14 ; '.'
0000000000016159         db  0x22 ; '"'
000000000001615a         db  0x00 ; '.'
000000000001615b         db  0x00 ; '.'
000000000001615c         db  0x00 ; '.'
000000000001615d         db  0x96 ; '.'
000000000001615e         db  0xff ; '.'
000000000001615f         db  0xff ; '.'
0000000000016160         db  0x28 ; '('
0000000000016161         db  0x22 ; '"'
0000000000016162         db  0x00 ; '.'
0000000000016163         db  0x00 ; '.'
0000000000016164         db  0x20 ; ' '
0000000000016165         db  0x96 ; '.'
0000000000016166         db  0xff ; '.'
0000000000016167         db  0xff ; '.'
0000000000016168         db  0x3c ; '<'
0000000000016169         db  0x22 ; '"'
000000000001616a         db  0x00 ; '.'
000000000001616b         db  0x00 ; '.'
000000000001616c         db  0x30 ; '0'
000000000001616d         db  0x96 ; '.'
000000000001616e         db  0xff ; '.'
000000000001616f         db  0xff ; '.'
0000000000016170         db  0x50 ; 'P'
0000000000016171         db  0x22 ; '"'
0000000000016172         db  0x00 ; '.'
0000000000016173         db  0x00 ; '.'
0000000000016174         db  0xb0 ; '.'
0000000000016175         db  0x99 ; '.'
0000000000016176         db  0xff ; '.'
0000000000016177         db  0xff ; '.'
0000000000016178         db  0xa0 ; '.'
0000000000016179         db  0x22 ; '"'
000000000001617a         db  0x00 ; '.'
000000000001617b         db  0x00 ; '.'
000000000001617c         db  0x10 ; '.'
000000000001617d         db  0x9a ; '.'
000000000001617e         db  0xff ; '.'
000000000001617f         db  0xff ; '.'
0000000000016180         db  0xd0 ; '.'
0000000000016181         db  0x22 ; '"'
0000000000016182         db  0x00 ; '.'
0000000000016183         db  0x00 ; '.'
0000000000016184         db  0x90 ; '.'
0000000000016185         db  0x9a ; '.'
0000000000016186         db  0xff ; '.'
0000000000016187         db  0xff ; '.'
0000000000016188         db  0xf4 ; '.'
0000000000016189         db  0x22 ; '"'
000000000001618a         db  0x00 ; '.'
000000000001618b         db  0x00 ; '.'
000000000001618c         db  0xa0 ; '.'
000000000001618d         db  0x9a ; '.'
000000000001618e         db  0xff ; '.'
000000000001618f         db  0xff ; '.'
0000000000016190         db  0x08 ; '.'
0000000000016191         db  0x23 ; '#'
0000000000016192         db  0x00 ; '.'
0000000000016193         db  0x00 ; '.'
0000000000016194         db  0xc0 ; '.'
0000000000016195         db  0x9a ; '.'
0000000000016196         db  0xff ; '.'
0000000000016197         db  0xff ; '.'
0000000000016198         db  0x1c ; '.'
0000000000016199         db  0x23 ; '#'
000000000001619a         db  0x00 ; '.'
000000000001619b         db  0x00 ; '.'
000000000001619c         db  0x40 ; '@'
000000000001619d         db  0x9c ; '.'
000000000001619e         db  0xff ; '.'
000000000001619f         db  0xff ; '.'
00000000000161a0         db  0x68 ; 'h'
00000000000161a1         db  0x23 ; '#'
00000000000161a2         db  0x00 ; '.'
00000000000161a3         db  0x00 ; '.'
00000000000161a4         db  0xd0 ; '.'
00000000000161a5         db  0x9c ; '.'
00000000000161a6         db  0xff ; '.'
00000000000161a7         db  0xff ; '.'
00000000000161a8         db  0x8c ; '.'
00000000000161a9         db  0x23 ; '#'
00000000000161aa         db  0x00 ; '.'
00000000000161ab         db  0x00 ; '.'
00000000000161ac         db  0xe0 ; '.'
00000000000161ad         db  0x9c ; '.'
00000000000161ae         db  0xff ; '.'
00000000000161af         db  0xff ; '.'
00000000000161b0         db  0xa0 ; '.'
00000000000161b1         db  0x23 ; '#'
00000000000161b2         db  0x00 ; '.'
00000000000161b3         db  0x00 ; '.'
00000000000161b4         db  0xf0 ; '.'
00000000000161b5         db  0x9c ; '.'
00000000000161b6         db  0xff ; '.'
00000000000161b7         db  0xff ; '.'
00000000000161b8         db  0xb8 ; '.'
00000000000161b9         db  0x23 ; '#'
00000000000161ba         db  0x00 ; '.'
00000000000161bb         db  0x00 ; '.'
00000000000161bc         db  0x30 ; '0'
00000000000161bd         db  0x9d ; '.'
00000000000161be         db  0xff ; '.'
00000000000161bf         db  0xff ; '.'
00000000000161c0         db  0xf0 ; '.'
00000000000161c1         db  0x23 ; '#'
00000000000161c2         db  0x00 ; '.'
00000000000161c3         db  0x00 ; '.'
00000000000161c4         db  0x40 ; '@'
00000000000161c5         db  0x9d ; '.'
00000000000161c6         db  0xff ; '.'
00000000000161c7         db  0xff ; '.'
00000000000161c8         db  0x04 ; '.'
00000000000161c9         db  0x24 ; '$'
00000000000161ca         db  0x00 ; '.'
00000000000161cb         db  0x00 ; '.'
00000000000161cc         db  0x50 ; 'P'
00000000000161cd         db  0x9d ; '.'
00000000000161ce         db  0xff ; '.'
00000000000161cf         db  0xff ; '.'
00000000000161d0         db  0x18 ; '.'
00000000000161d1         db  0x24 ; '$'
00000000000161d2         db  0x00 ; '.'
00000000000161d3         db  0x00 ; '.'
00000000000161d4         db  0xd0 ; '.'
00000000000161d5         db  0xa4 ; '.'
00000000000161d6         db  0xff ; '.'
00000000000161d7         db  0xff ; '.'
00000000000161d8         db  0x68 ; 'h'
00000000000161d9         db  0x24 ; '$'
00000000000161da         db  0x00 ; '.'
00000000000161db         db  0x00 ; '.'
00000000000161dc         db  0xf0 ; '.'
00000000000161dd         db  0xa4 ; '.'
00000000000161de         db  0xff ; '.'
00000000000161df         db  0xff ; '.'
00000000000161e0         db  0x80 ; '.'
00000000000161e1         db  0x24 ; '$'
00000000000161e2         db  0x00 ; '.'
00000000000161e3         db  0x00 ; '.'
00000000000161e4         db  0xd0 ; '.'
00000000000161e5         db  0xa5 ; '.'
00000000000161e6         db  0xff ; '.'
00000000000161e7         db  0xff ; '.'
00000000000161e8         db  0xc4 ; '.'
00000000000161e9         db  0x24 ; '$'
00000000000161ea         db  0x00 ; '.'
00000000000161eb         db  0x00 ; '.'
00000000000161ec         db  0x80 ; '.'
00000000000161ed         db  0xa6 ; '.'
00000000000161ee         db  0xff ; '.'
00000000000161ef         db  0xff ; '.'
00000000000161f0         db  0xdc ; '.'
00000000000161f1         db  0x24 ; '$'
00000000000161f2         db  0x00 ; '.'
00000000000161f3         db  0x00 ; '.'
00000000000161f4         db  0x90 ; '.'
00000000000161f5         db  0xa6 ; '.'
00000000000161f6         db  0xff ; '.'
00000000000161f7         db  0xff ; '.'
00000000000161f8         db  0xf0 ; '.'
00000000000161f9         db  0x24 ; '$'
00000000000161fa         db  0x00 ; '.'
00000000000161fb         db  0x00 ; '.'
00000000000161fc         db  0xf0 ; '.'
00000000000161fd         db  0xaa ; '.'
00000000000161fe         db  0xff ; '.'
00000000000161ff         db  0xff ; '.'
0000000000016200         db  0x38 ; '8'
0000000000016201         db  0x25 ; '%'
0000000000016202         db  0x00 ; '.'
0000000000016203         db  0x00 ; '.'
0000000000016204         db  0x00 ; '.'
0000000000016205         db  0xab ; '.'
0000000000016206         db  0xff ; '.'
0000000000016207         db  0xff ; '.'
0000000000016208         db  0x4c ; 'L'
0000000000016209         db  0x25 ; '%'
000000000001620a         db  0x00 ; '.'
000000000001620b         db  0x00 ; '.'
000000000001620c         db  0x60 ; '`'
000000000001620d         db  0xad ; '.'
000000000001620e         db  0xff ; '.'
000000000001620f         db  0xff ; '.'
0000000000016210         db  0x88 ; '.'
0000000000016211         db  0x25 ; '%'
0000000000016212         db  0x00 ; '.'
0000000000016213         db  0x00 ; '.'
0000000000016214         db  0x80 ; '.'
0000000000016215         db  0xb1 ; '.'
0000000000016216         db  0xff ; '.'
0000000000016217         db  0xff ; '.'
0000000000016218         db  0x9c ; '.'
0000000000016219         db  0x26 ; '&'
000000000001621a         db  0x00 ; '.'
000000000001621b         db  0x00 ; '.'
000000000001621c         db  0xa0 ; '.'
000000000001621d         db  0xb1 ; '.'
000000000001621e         db  0xff ; '.'
000000000001621f         db  0xff ; '.'
0000000000016220         db  0xb0 ; '.'
0000000000016221         db  0x26 ; '&'
0000000000016222         db  0x00 ; '.'
0000000000016223         db  0x00 ; '.'
0000000000016224         db  0x20 ; ' '
0000000000016225         db  0xb2 ; '.'
0000000000016226         db  0xff ; '.'
0000000000016227         db  0xff ; '.'
0000000000016228         db  0xcc ; '.'
0000000000016229         db  0x26 ; '&'
000000000001622a         db  0x00 ; '.'
000000000001622b         db  0x00 ; '.'
000000000001622c         db  0x00 ; '.'
000000000001622d         db  0xb3 ; '.'
000000000001622e         db  0xff ; '.'
000000000001622f         db  0xff ; '.'
0000000000016230         db  0xf8 ; '.'
0000000000016231         db  0x26 ; '&'
0000000000016232         db  0x00 ; '.'
0000000000016233         db  0x00 ; '.'
0000000000016234         db  0x80 ; '.'
0000000000016235         db  0xb3 ; '.'
0000000000016236         db  0xff ; '.'
0000000000016237         db  0xff ; '.'
0000000000016238         db  0x18 ; '.'
0000000000016239         db  0x27 ; '''
000000000001623a         db  0x00 ; '.'
000000000001623b         db  0x00 ; '.'
000000000001623c         db  0xc0 ; '.'
000000000001623d         db  0xb3 ; '.'
000000000001623e         db  0xff ; '.'
000000000001623f         db  0xff ; '.'
0000000000016240         db  0x30 ; '0'
0000000000016241         db  0x27 ; '''
0000000000016242         db  0x00 ; '.'
0000000000016243         db  0x00 ; '.'
0000000000016244         db  0xe0 ; '.'
0000000000016245         db  0xb3 ; '.'
0000000000016246         db  0xff ; '.'
0000000000016247         db  0xff ; '.'
0000000000016248         db  0x4c ; 'L'
0000000000016249         db  0x27 ; '''
000000000001624a         db  0x00 ; '.'
000000000001624b         db  0x00 ; '.'
000000000001624c         db  0x10 ; '.'
000000000001624d         db  0xb4 ; '.'
000000000001624e         db  0xff ; '.'
000000000001624f         db  0xff ; '.'
0000000000016250         db  0x60 ; '`'
0000000000016251         db  0x27 ; '''
0000000000016252         db  0x00 ; '.'
0000000000016253         db  0x00 ; '.'
0000000000016254         db  0x20 ; ' '
0000000000016255         db  0xb4 ; '.'
0000000000016256         db  0xff ; '.'
0000000000016257         db  0xff ; '.'
0000000000016258         db  0x74 ; 't'
0000000000016259         db  0x27 ; '''
000000000001625a         db  0x00 ; '.'
000000000001625b         db  0x00 ; '.'
000000000001625c         db  0x60 ; '`'
000000000001625d         db  0xb4 ; '.'
000000000001625e         db  0xff ; '.'
000000000001625f         db  0xff ; '.'
0000000000016260         db  0x98 ; '.'
0000000000016261         db  0x27 ; '''
0000000000016262         db  0x00 ; '.'
0000000000016263         db  0x00 ; '.'
0000000000016264         db  0x90 ; '.'
0000000000016265         db  0xb4 ; '.'
0000000000016266         db  0xff ; '.'
0000000000016267         db  0xff ; '.'
0000000000016268         db  0xac ; '.'
0000000000016269         db  0x27 ; '''
000000000001626a         db  0x00 ; '.'
000000000001626b         db  0x00 ; '.'
000000000001626c         db  0x20 ; ' '
000000000001626d         db  0xb5 ; '.'
000000000001626e         db  0xff ; '.'
000000000001626f         db  0xff ; '.'
0000000000016270         db  0xc4 ; '.'
0000000000016271         db  0x27 ; '''
0000000000016272         db  0x00 ; '.'
0000000000016273         db  0x00 ; '.'
0000000000016274         db  0x70 ; 'p'
0000000000016275         db  0xb5 ; '.'
0000000000016276         db  0xff ; '.'
0000000000016277         db  0xff ; '.'
0000000000016278         db  0xdc ; '.'
0000000000016279         db  0x27 ; '''
000000000001627a         db  0x00 ; '.'
000000000001627b         db  0x00 ; '.'
000000000001627c         db  0x90 ; '.'
000000000001627d         db  0xb5 ; '.'
000000000001627e         db  0xff ; '.'
000000000001627f         db  0xff ; '.'
0000000000016280         db  0xf8 ; '.'
0000000000016281         db  0x27 ; '''
0000000000016282         db  0x00 ; '.'
0000000000016283         db  0x00 ; '.'
0000000000016284         db  0xc0 ; '.'
0000000000016285         db  0xb5 ; '.'
0000000000016286         db  0xff ; '.'
0000000000016287         db  0xff ; '.'
0000000000016288         db  0x14 ; '.'
0000000000016289         db  0x28 ; '('
000000000001628a         db  0x00 ; '.'
000000000001628b         db  0x00 ; '.'
000000000001628c         db  0xf0 ; '.'
000000000001628d         db  0xb5 ; '.'
000000000001628e         db  0xff ; '.'
000000000001628f         db  0xff ; '.'
0000000000016290         db  0x3c ; '<'
0000000000016291         db  0x28 ; '('
0000000000016292         db  0x00 ; '.'
0000000000016293         db  0x00 ; '.'
0000000000016294         db  0x10 ; '.'
0000000000016295         db  0xb6 ; '.'
0000000000016296         db  0xff ; '.'
0000000000016297         db  0xff ; '.'
0000000000016298         db  0x58 ; 'X'
0000000000016299         db  0x28 ; '('
000000000001629a         db  0x00 ; '.'
000000000001629b         db  0x00 ; '.'
000000000001629c         db  0x50 ; 'P'
000000000001629d         db  0xb6 ; '.'
000000000001629e         db  0xff ; '.'
000000000001629f         db  0xff ; '.'
00000000000162a0         db  0x70 ; 'p'
00000000000162a1         db  0x28 ; '('
00000000000162a2         db  0x00 ; '.'
00000000000162a3         db  0x00 ; '.'
00000000000162a4         db  0xf0 ; '.'
00000000000162a5         db  0xb6 ; '.'
00000000000162a6         db  0xff ; '.'
00000000000162a7         db  0xff ; '.'
00000000000162a8         db  0x98 ; '.'
00000000000162a9         db  0x28 ; '('
00000000000162aa         db  0x00 ; '.'
00000000000162ab         db  0x00 ; '.'
00000000000162ac         db  0x30 ; '0'
00000000000162ad         db  0xb7 ; '.'
00000000000162ae         db  0xff ; '.'
00000000000162af         db  0xff ; '.'
00000000000162b0         db  0xb8 ; '.'
00000000000162b1         db  0x28 ; '('
00000000000162b2         db  0x00 ; '.'
00000000000162b3         db  0x00 ; '.'
00000000000162b4         db  0x60 ; '`'
00000000000162b5         db  0xb7 ; '.'
00000000000162b6         db  0xff ; '.'
00000000000162b7         db  0xff ; '.'
00000000000162b8         db  0xd0 ; '.'
00000000000162b9         db  0x28 ; '('
00000000000162ba         db  0x00 ; '.'
00000000000162bb         db  0x00 ; '.'
00000000000162bc         db  0xc0 ; '.'
00000000000162bd         db  0xb7 ; '.'
00000000000162be         db  0xff ; '.'
00000000000162bf         db  0xff ; '.'
00000000000162c0         db  0x00 ; '.'
00000000000162c1         db  0x29 ; ')'
00000000000162c2         db  0x00 ; '.'
00000000000162c3         db  0x00 ; '.'
00000000000162c4         db  0x50 ; 'P'
00000000000162c5         db  0xb8 ; '.'
00000000000162c6         db  0xff ; '.'
00000000000162c7         db  0xff ; '.'
00000000000162c8         db  0x40 ; '@'
00000000000162c9         db  0x29 ; ')'
00000000000162ca         db  0x00 ; '.'
00000000000162cb         db  0x00 ; '.'
00000000000162cc         db  0x60 ; '`'
00000000000162cd         db  0xb8 ; '.'
00000000000162ce         db  0xff ; '.'
00000000000162cf         db  0xff ; '.'
00000000000162d0         db  0x58 ; 'X'
00000000000162d1         db  0x29 ; ')'
00000000000162d2         db  0x00 ; '.'
00000000000162d3         db  0x00 ; '.'
00000000000162d4         db  0x70 ; 'p'
00000000000162d5         db  0xb8 ; '.'
00000000000162d6         db  0xff ; '.'
00000000000162d7         db  0xff ; '.'
00000000000162d8         db  0x70 ; 'p'
00000000000162d9         db  0x29 ; ')'
00000000000162da         db  0x00 ; '.'
00000000000162db         db  0x00 ; '.'
00000000000162dc         db  0x90 ; '.'
00000000000162dd         db  0xb8 ; '.'
00000000000162de         db  0xff ; '.'
00000000000162df         db  0xff ; '.'
00000000000162e0         db  0x84 ; '.'
00000000000162e1         db  0x29 ; ')'
00000000000162e2         db  0x00 ; '.'
00000000000162e3         db  0x00 ; '.'
00000000000162e4         db  0xc0 ; '.'
00000000000162e5         db  0xb8 ; '.'
00000000000162e6         db  0xff ; '.'
00000000000162e7         db  0xff ; '.'
00000000000162e8         db  0xa0 ; '.'
00000000000162e9         db  0x29 ; ')'
00000000000162ea         db  0x00 ; '.'
00000000000162eb         db  0x00 ; '.'
00000000000162ec         db  0x40 ; '@'
00000000000162ed         db  0xb9 ; '.'
00000000000162ee         db  0xff ; '.'
00000000000162ef         db  0xff ; '.'
00000000000162f0         db  0xf0 ; '.'
00000000000162f1         db  0x29 ; ')'
00000000000162f2         db  0x00 ; '.'
00000000000162f3         db  0x00 ; '.'
00000000000162f4         db  0xe0 ; '.'
00000000000162f5         db  0xb9 ; '.'
00000000000162f6         db  0xff ; '.'
00000000000162f7         db  0xff ; '.'
00000000000162f8         db  0x40 ; '@'
00000000000162f9         db  0x2a ; '*'
00000000000162fa         db  0x00 ; '.'
00000000000162fb         db  0x00 ; '.'
00000000000162fc         db  0xf0 ; '.'
00000000000162fd         db  0xb9 ; '.'
00000000000162fe         db  0xff ; '.'
00000000000162ff         db  0xff ; '.'
0000000000016300         db  0x54 ; 'T'
0000000000016301         db  0x2a ; '*'
0000000000016302         db  0x00 ; '.'
0000000000016303         db  0x00 ; '.'
0000000000016304         db  0x40 ; '@'
0000000000016305         db  0xba ; '.'
0000000000016306         db  0xff ; '.'
0000000000016307         db  0xff ; '.'
0000000000016308         db  0x70 ; 'p'
0000000000016309         db  0x2a ; '*'
000000000001630a         db  0x00 ; '.'
000000000001630b         db  0x00 ; '.'
000000000001630c         db  0xa0 ; '.'
000000000001630d         db  0xba ; '.'
000000000001630e         db  0xff ; '.'
000000000001630f         db  0xff ; '.'
0000000000016310         db  0x90 ; '.'
0000000000016311         db  0x2a ; '*'
0000000000016312         db  0x00 ; '.'
0000000000016313         db  0x00 ; '.'
0000000000016314         db  0xe0 ; '.'
0000000000016315         db  0xba ; '.'
0000000000016316         db  0xff ; '.'
0000000000016317         db  0xff ; '.'
0000000000016318         db  0xa8 ; '.'
0000000000016319         db  0x2a ; '*'
000000000001631a         db  0x00 ; '.'
000000000001631b         db  0x00 ; '.'
000000000001631c         db  0x20 ; ' '
000000000001631d         db  0xbb ; '.'
000000000001631e         db  0xff ; '.'
000000000001631f         db  0xff ; '.'
0000000000016320         db  0xc8 ; '.'
0000000000016321         db  0x2a ; '*'
0000000000016322         db  0x00 ; '.'
0000000000016323         db  0x00 ; '.'
0000000000016324         db  0x90 ; '.'
0000000000016325         db  0xbb ; '.'
0000000000016326         db  0xff ; '.'
0000000000016327         db  0xff ; '.'
0000000000016328         db  0xe8 ; '.'
0000000000016329         db  0x2a ; '*'
000000000001632a         db  0x00 ; '.'
000000000001632b         db  0x00 ; '.'
000000000001632c         db  0xc0 ; '.'
000000000001632d         db  0xbb ; '.'
000000000001632e         db  0xff ; '.'
000000000001632f         db  0xff ; '.'
0000000000016330         db  0x04 ; '.'
0000000000016331         db  0x2b ; '+'
0000000000016332         db  0x00 ; '.'
0000000000016333         db  0x00 ; '.'
0000000000016334         db  0x00 ; '.'
0000000000016335         db  0xbc ; '.'
0000000000016336         db  0xff ; '.'
0000000000016337         db  0xff ; '.'
0000000000016338         db  0x24 ; '$'
0000000000016339         db  0x2b ; '+'
000000000001633a         db  0x00 ; '.'
000000000001633b         db  0x00 ; '.'
000000000001633c         db  0x10 ; '.'
000000000001633d         db  0xbc ; '.'
000000000001633e         db  0xff ; '.'
000000000001633f         db  0xff ; '.'
0000000000016340         db  0x38 ; '8'
0000000000016341         db  0x2b ; '+'
0000000000016342         db  0x00 ; '.'
0000000000016343         db  0x00 ; '.'
0000000000016344         db  0x30 ; '0'
0000000000016345         db  0xbd ; '.'
0000000000016346         db  0xff ; '.'
0000000000016347         db  0xff ; '.'
0000000000016348         db  0x84 ; '.'
0000000000016349         db  0x2b ; '+'
000000000001634a         db  0x00 ; '.'
000000000001634b         db  0x00 ; '.'
000000000001634c         db  0x50 ; 'P'
000000000001634d         db  0xbd ; '.'
000000000001634e         db  0xff ; '.'
000000000001634f         db  0xff ; '.'
0000000000016350         db  0xa0 ; '.'
0000000000016351         db  0x2b ; '+'
0000000000016352         db  0x00 ; '.'
0000000000016353         db  0x00 ; '.'
0000000000016354         db  0xb0 ; '.'
0000000000016355         db  0xbd ; '.'
0000000000016356         db  0xff ; '.'
0000000000016357         db  0xff ; '.'
0000000000016358         db  0xd8 ; '.'
0000000000016359         db  0x2b ; '+'
000000000001635a         db  0x00 ; '.'
000000000001635b         db  0x00 ; '.'
000000000001635c         db  0x10 ; '.'
000000000001635d         db  0xbe ; '.'
000000000001635e         db  0xff ; '.'
000000000001635f         db  0xff ; '.'
0000000000016360         db  0xf8 ; '.'
0000000000016361         db  0x2b ; '+'
0000000000016362         db  0x00 ; '.'
0000000000016363         db  0x00 ; '.'
0000000000016364         db  0x40 ; '@'
0000000000016365         db  0xc1 ; '.'
0000000000016366         db  0xff ; '.'
0000000000016367         db  0xff ; '.'
0000000000016368         db  0x44 ; 'D'
0000000000016369         db  0x2c ; ','
000000000001636a         db  0x00 ; '.'
000000000001636b         db  0x00 ; '.'
000000000001636c         db  0x50 ; 'P'
000000000001636d         db  0xc1 ; '.'
000000000001636e         db  0xff ; '.'
000000000001636f         db  0xff ; '.'
0000000000016370         db  0x58 ; 'X'
0000000000016371         db  0x2c ; ','
0000000000016372         db  0x00 ; '.'
0000000000016373         db  0x00 ; '.'
0000000000016374         db  0x60 ; '`'
0000000000016375         db  0xc1 ; '.'
0000000000016376         db  0xff ; '.'
0000000000016377         db  0xff ; '.'
0000000000016378         db  0x6c ; 'l'
0000000000016379         db  0x2c ; ','
000000000001637a         db  0x00 ; '.'
000000000001637b         db  0x00 ; '.'
000000000001637c         db  0x00 ; '.'
000000000001637d         db  0xc3 ; '.'
000000000001637e         db  0xff ; '.'
000000000001637f         db  0xff ; '.'
0000000000016380         db  0xd0 ; '.'
0000000000016381         db  0x2c ; ','
0000000000016382         db  0x00 ; '.'
0000000000016383         db  0x00 ; '.'
0000000000016384         db  0x50 ; 'P'
0000000000016385         db  0xc3 ; '.'
0000000000016386         db  0xff ; '.'
0000000000016387         db  0xff ; '.'
0000000000016388         db  0x08 ; '.'
0000000000016389         db  0x2d ; '-'
000000000001638a         db  0x00 ; '.'
000000000001638b         db  0x00 ; '.'
000000000001638c         db  0xe0 ; '.'
000000000001638d         db  0xc5 ; '.'
000000000001638e         db  0xff ; '.'
000000000001638f         db  0xff ; '.'
0000000000016390         db  0x1c ; '.'
0000000000016391         db  0x2d ; '-'
0000000000016392         db  0x00 ; '.'
0000000000016393         db  0x00 ; '.'
0000000000016394         db  0x20 ; ' '
0000000000016395         db  0xc8 ; '.'
0000000000016396         db  0xff ; '.'
0000000000016397         db  0xff ; '.'
0000000000016398         db  0x50 ; 'P'
0000000000016399         db  0x2d ; '-'
000000000001639a         db  0x00 ; '.'
000000000001639b         db  0x00 ; '.'
000000000001639c         db  0x30 ; '0'
000000000001639d         db  0xc8 ; '.'
000000000001639e         db  0xff ; '.'
000000000001639f         db  0xff ; '.'
00000000000163a0         db  0x68 ; 'h'
00000000000163a1         db  0x2d ; '-'
00000000000163a2         db  0x00 ; '.'
00000000000163a3         db  0x00 ; '.'
00000000000163a4         db  0xb0 ; '.'
00000000000163a5         db  0xc8 ; '.'
00000000000163a6         db  0xff ; '.'
00000000000163a7         db  0xff ; '.'
00000000000163a8         db  0xa0 ; '.'
00000000000163a9         db  0x2d ; '-'
00000000000163aa         db  0x00 ; '.'
00000000000163ab         db  0x00 ; '.'
00000000000163ac         db  0x30 ; '0'
00000000000163ad         db  0xcb ; '.'
00000000000163ae         db  0xff ; '.'
00000000000163af         db  0xff ; '.'
00000000000163b0         db  0xd8 ; '.'
00000000000163b1         db  0x2d ; '-'
00000000000163b2         db  0x00 ; '.'
00000000000163b3         db  0x00 ; '.'
00000000000163b4         db  0xd0 ; '.'
00000000000163b5         db  0xcb ; '.'
00000000000163b6         db  0xff ; '.'
00000000000163b7         db  0xff ; '.'
00000000000163b8         db  0x08 ; '.'
00000000000163b9         db  0x2e ; '.'
00000000000163ba         db  0x00 ; '.'
00000000000163bb         db  0x00 ; '.'
00000000000163bc         db  0x40 ; '@'
00000000000163bd         db  0xcc ; '.'
00000000000163be         db  0xff ; '.'
00000000000163bf         db  0xff ; '.'
00000000000163c0         db  0x50 ; 'P'
00000000000163c1         db  0x2e ; '.'
00000000000163c2         db  0x00 ; '.'
00000000000163c3         db  0x00 ; '.'
00000000000163c4         db  0x50 ; 'P'
00000000000163c5         db  0xcc ; '.'
00000000000163c6         db  0xff ; '.'
00000000000163c7         db  0xff ; '.'
00000000000163c8         db  0x68 ; 'h'
00000000000163c9         db  0x2e ; '.'
00000000000163ca         db  0x00 ; '.'
00000000000163cb         db  0x00 ; '.'
00000000000163cc         db  0x00 ; '.'
00000000000163cd         db  0x00 ; '.'
00000000000163ce         db  0x00 ; '.'
00000000000163cf         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x163d0; 0x18ae0[ (10000 bytes)
        ; File offset : [91088; 101088[ (10000 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

00000000000163d0         dd         0x00000014                                  ; Length of the record
00000000000163d4         dd         0x00000000                                  ; CIE ID
00000000000163d8         db         0x01                                        ; Version
00000000000163d9         db         "zR", 0                                     ; Augmentation String
00000000000163dc         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
00000000000163dd         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
00000000000163de         db         0x10                                        ; Return address register
00000000000163df         db         0x01                                        ; Augmentation data length
00000000000163e0         db         0x1b                                        ; FDE encoding
00000000000163e1         db  0x0c ; '.'
00000000000163e2         db  0x07 ; '.'
00000000000163e3         db  0x08 ; '.'
00000000000163e4         db  0x90 ; '.'
00000000000163e5         db  0x01 ; '.'
00000000000163e6         db  0x07 ; '.'
00000000000163e7         db  0x10 ; '.'
00000000000163e8         dd         0x00000014                                  ; Length of the record
00000000000163ec         dd         0x0000001c                                  ; FDE: parent CIE at 0x163d0 (FDE encoding = 0x1B)
00000000000163f0         db         0xe0, 0xd2, 0xfe, 0xff                      ; begin 0x36d0
00000000000163f4         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x36fb)
00000000000163f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000163f9         align      1024
0000000000016400         dd         0x00000014                                  ; Length of the record
0000000000016404         dd         0x00000000                                  ; CIE ID
0000000000016408         db         0x01                                        ; Version
0000000000016409         db         "zR", 0                                     ; Augmentation String
000000000001640c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000001640d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000001640e         db         0x10                                        ; Return address register
000000000001640f         db         0x01                                        ; Augmentation data length
0000000000016410         db         0x1b                                        ; FDE encoding
0000000000016411         db  0x0c ; '.'
0000000000016412         db  0x07 ; '.'
0000000000016413         db  0x08 ; '.'
0000000000016414         db  0x90 ; '.'
0000000000016415         db  0x01 ; '.'
0000000000016416         db  0x00 ; '.'
0000000000016417         db  0x00 ; '.'
0000000000016418         dd         0x00000024                                  ; Length of the record
000000000001641c         dd         0x0000001c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016420         db         0x10, 0xc3, 0xfe, 0xff                      ; begin 0x2730
0000000000016424         db         0xe0, 0x06, 2 dup (0x00)                    ; length 0x6e0 (end at 0x2e10)
0000000000016428         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016429         db  0x0e ; '.'
000000000001642a         db  0x10 ; '.'
000000000001642b         db  0x46 ; 'F'
000000000001642c         db  0x0e ; '.'
000000000001642d         db  0x18 ; '.'
000000000001642e         db  0x4a ; 'J'
000000000001642f         db  0x0f ; '.'
0000000000016430         db  0x0b ; '.'
0000000000016431         db  0x77 ; 'w'
0000000000016432         db  0x08 ; '.'
0000000000016433         db  0x80 ; '.'
0000000000016434         db  0x00 ; '.'
0000000000016435         db  0x3f ; '?'
0000000000016436         db  0x1a ; '.'
0000000000016437         db  0x3b ; ';'
0000000000016438         db  0x2a ; '*'
0000000000016439         db  0x33 ; '3'
000000000001643a         db  0x24 ; '$'
000000000001643b         db  0x22 ; '"'
000000000001643c         db  0x00 ; '.'
000000000001643d         db  0x00 ; '.'
000000000001643e         db  0x00 ; '.'
000000000001643f         db  0x00 ; '.'
0000000000016440         dd         0x00000014                                  ; Length of the record
0000000000016444         dd         0x00000044                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016448         db         0xc8, 0xc9, 0xfe, 0xff                      ; begin 0x2e10
000000000001644c         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x2e20)
0000000000016450         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016451         align      8
0000000000016458         dd         0x00000048                                  ; Length of the record
000000000001645c         dd         0x0000005c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016460         db         0x80, 0xd3, 0xfe, 0xff                      ; begin 0x37e0
0000000000016464         db         0x42, 0x01, 2 dup (0x00)                    ; length 0x142 (end at 0x3922)
0000000000016468         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016469         db  0x42 ; 'B'
000000000001646a         db  0x0e ; '.'
000000000001646b         db  0x10 ; '.'
000000000001646c         db  0x8f ; '.'
000000000001646d         db  0x02 ; '.'
000000000001646e         db  0x42 ; 'B'
000000000001646f         db  0x0e ; '.'
0000000000016470         db  0x18 ; '.'
0000000000016471         db  0x8e ; '.'
0000000000016472         db  0x03 ; '.'
0000000000016473         db  0x49 ; 'I'
0000000000016474         db  0x0e ; '.'
0000000000016475         db  0x20 ; ' '
0000000000016476         db  0x8d ; '.'
0000000000016477         db  0x04 ; '.'
0000000000016478         db  0x42 ; 'B'
0000000000016479         db  0x0e ; '.'
000000000001647a         db  0x28 ; '('
000000000001647b         db  0x8c ; '.'
000000000001647c         db  0x05 ; '.'
000000000001647d         db  0x44 ; 'D'
000000000001647e         db  0x0e ; '.'
000000000001647f         db  0x30 ; '0'
0000000000016480         db  0x86 ; '.'
0000000000016481         db  0x06 ; '.'
0000000000016482         db  0x41 ; 'A'
0000000000016483         db  0x0e ; '.'
0000000000016484         db  0x38 ; '8'
0000000000016485         db  0x83 ; '.'
0000000000016486         db  0x07 ; '.'
0000000000016487         db  0x50 ; 'P'
0000000000016488         db  0x0e ; '.'
0000000000016489         db  0x50 ; 'P'
000000000001648a         db  0x02 ; '.'
000000000001648b         db  0xad ; '.'
000000000001648c         db  0x0a ; '.'
000000000001648d         db  0x0e ; '.'
000000000001648e         db  0x38 ; '8'
000000000001648f         db  0x41 ; 'A'
0000000000016490         db  0x0e ; '.'
0000000000016491         db  0x30 ; '0'
0000000000016492         db  0x41 ; 'A'
0000000000016493         db  0x0e ; '.'
0000000000016494         db  0x28 ; '('
0000000000016495         db  0x42 ; 'B'
0000000000016496         db  0x0e ; '.'
0000000000016497         db  0x20 ; ' '
0000000000016498         db  0x42 ; 'B'
0000000000016499         db  0x0e ; '.'
000000000001649a         db  0x18 ; '.'
000000000001649b         db  0x42 ; 'B'
000000000001649c         db  0x0e ; '.'
000000000001649d         db  0x10 ; '.'
000000000001649e         db  0x42 ; 'B'
000000000001649f         db  0x0e ; '.'
00000000000164a0         db  0x08 ; '.'
00000000000164a1         db  0x45 ; 'E'
00000000000164a2         db  0x0b ; '.'
00000000000164a3         db  0x00 ; '.'
00000000000164a4         dd         0x00000038                                  ; Length of the record
00000000000164a8         dd         0x000000a8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000164ac         db         0x84, 0xd4, 0xfe, 0xff                      ; begin 0x3930
00000000000164b0         db         0xc4, 3 dup (0x00)                          ; length 0xc4 (end at 0x39f4)
00000000000164b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000164b5         db  0x42 ; 'B'
00000000000164b6         db  0x0e ; '.'
00000000000164b7         db  0x10 ; '.'
00000000000164b8         db  0x8e ; '.'
00000000000164b9         db  0x02 ; '.'
00000000000164ba         db  0x42 ; 'B'
00000000000164bb         db  0x0e ; '.'
00000000000164bc         db  0x18 ; '.'
00000000000164bd         db  0x8d ; '.'
00000000000164be         db  0x03 ; '.'
00000000000164bf         db  0x45 ; 'E'
00000000000164c0         db  0x0e ; '.'
00000000000164c1         db  0x20 ; ' '
00000000000164c2         db  0x8c ; '.'
00000000000164c3         db  0x04 ; '.'
00000000000164c4         db  0x41 ; 'A'
00000000000164c5         db  0x0e ; '.'
00000000000164c6         db  0x28 ; '('
00000000000164c7         db  0x86 ; '.'
00000000000164c8         db  0x05 ; '.'
00000000000164c9         db  0x44 ; 'D'
00000000000164ca         db  0x0e ; '.'
00000000000164cb         db  0x30 ; '0'
00000000000164cc         db  0x83 ; '.'
00000000000164cd         db  0x06 ; '.'
00000000000164ce         db  0x6f ; 'o'
00000000000164cf         db  0x0a ; '.'
00000000000164d0         db  0x0e ; '.'
00000000000164d1         db  0x28 ; '('
00000000000164d2         db  0x41 ; 'A'
00000000000164d3         db  0x0e ; '.'
00000000000164d4         db  0x20 ; ' '
00000000000164d5         db  0x42 ; 'B'
00000000000164d6         db  0x0e ; '.'
00000000000164d7         db  0x18 ; '.'
00000000000164d8         db  0x42 ; 'B'
00000000000164d9         db  0x0e ; '.'
00000000000164da         db  0x10 ; '.'
00000000000164db         db  0x42 ; 'B'
00000000000164dc         db  0x0e ; '.'
00000000000164dd         db  0x08 ; '.'
00000000000164de         db  0x41 ; 'A'
00000000000164df         db  0x0b ; '.'
00000000000164e0         dd         0x0000002c                                  ; Length of the record
00000000000164e4         dd         0x000000e4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000164e8         db         0x18, 0xd5, 0xfe, 0xff                      ; begin 0x3a00
00000000000164ec         db         0xc0, 0x05, 2 dup (0x00)                    ; length 0x5c0 (end at 0x3fc0)
00000000000164f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000164f1         db  0x41 ; 'A'
00000000000164f2         db  0x0e ; '.'
00000000000164f3         db  0x10 ; '.'
00000000000164f4         db  0x86 ; '.'
00000000000164f5         db  0x02 ; '.'
00000000000164f6         db  0x43 ; 'C'
00000000000164f7         db  0x0d ; '.'
00000000000164f8         db  0x06 ; '.'
00000000000164f9         db  0x48 ; 'H'
00000000000164fa         db  0x8f ; '.'
00000000000164fb         db  0x03 ; '.'
00000000000164fc         db  0x8e ; '.'
00000000000164fd         db  0x04 ; '.'
00000000000164fe         db  0x8d ; '.'
00000000000164ff         db  0x05 ; '.'
0000000000016500         db  0x8c ; '.'
0000000000016501         db  0x06 ; '.'
0000000000016502         db  0x47 ; 'G'
0000000000016503         db  0x83 ; '.'
0000000000016504         db  0x07 ; '.'
0000000000016505         db  0x03 ; '.'
0000000000016506         db  0xaf ; '.'
0000000000016507         db  0x04 ; '.'
0000000000016508         db  0x0a ; '.'
0000000000016509         db  0x0c ; '.'
000000000001650a         db  0x07 ; '.'
000000000001650b         db  0x08 ; '.'
000000000001650c         db  0x41 ; 'A'
000000000001650d         db  0x0b ; '.'
000000000001650e         db  0x00 ; '.'
000000000001650f         db  0x00 ; '.'
0000000000016510         dd         0x0000002c                                  ; Length of the record
0000000000016514         dd         0x00000114                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016518         db         0xa8, 0xda, 0xfe, 0xff                      ; begin 0x3fc0
000000000001651c         db         0x5a, 0x02, 2 dup (0x00)                    ; length 0x25a (end at 0x421a)
0000000000016520         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016521         db  0x41 ; 'A'
0000000000016522         db  0x0e ; '.'
0000000000016523         db  0x10 ; '.'
0000000000016524         db  0x86 ; '.'
0000000000016525         db  0x02 ; '.'
0000000000016526         db  0x43 ; 'C'
0000000000016527         db  0x0d ; '.'
0000000000016528         db  0x06 ; '.'
0000000000016529         db  0x48 ; 'H'
000000000001652a         db  0x8f ; '.'
000000000001652b         db  0x03 ; '.'
000000000001652c         db  0x8e ; '.'
000000000001652d         db  0x04 ; '.'
000000000001652e         db  0x8d ; '.'
000000000001652f         db  0x05 ; '.'
0000000000016530         db  0x8c ; '.'
0000000000016531         db  0x06 ; '.'
0000000000016532         db  0x47 ; 'G'
0000000000016533         db  0x83 ; '.'
0000000000016534         db  0x07 ; '.'
0000000000016535         db  0x03 ; '.'
0000000000016536         db  0x23 ; '#'
0000000000016537         db  0x02 ; '.'
0000000000016538         db  0x0a ; '.'
0000000000016539         db  0x0c ; '.'
000000000001653a         db  0x07 ; '.'
000000000001653b         db  0x08 ; '.'
000000000001653c         db  0x41 ; 'A'
000000000001653d         db  0x0b ; '.'
000000000001653e         db  0x00 ; '.'
000000000001653f         db  0x00 ; '.'
0000000000016540         dd         0x00000028                                  ; Length of the record
0000000000016544         dd         0x00000144                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016548         db         0xd8, 0xdc, 0xfe, 0xff                      ; begin 0x4220
000000000001654c         db         0xba, 0x05, 2 dup (0x00)                    ; length 0x5ba (end at 0x47da)
0000000000016550         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016551         db  0x42 ; 'B'
0000000000016552         db  0x0e ; '.'
0000000000016553         db  0x10 ; '.'
0000000000016554         db  0x8d ; '.'
0000000000016555         db  0x02 ; '.'
0000000000016556         db  0x42 ; 'B'
0000000000016557         db  0x0e ; '.'
0000000000016558         db  0x18 ; '.'
0000000000016559         db  0x8c ; '.'
000000000001655a         db  0x03 ; '.'
000000000001655b         db  0x46 ; 'F'
000000000001655c         db  0x0e ; '.'
000000000001655d         db  0x20 ; ' '
000000000001655e         db  0x86 ; '.'
000000000001655f         db  0x04 ; '.'
0000000000016560         db  0x41 ; 'A'
0000000000016561         db  0x0e ; '.'
0000000000016562         db  0x28 ; '('
0000000000016563         db  0x83 ; '.'
0000000000016564         db  0x05 ; '.'
0000000000016565         db  0x49 ; 'I'
0000000000016566         db  0x0e ; '.'
0000000000016567         db  0xb0 ; '.'
0000000000016568         db  0x01 ; '.'
0000000000016569         db  0x00 ; '.'
000000000001656a         db  0x00 ; '.'
000000000001656b         db  0x00 ; '.'
000000000001656c         dd         0x0000002c                                  ; Length of the record
0000000000016570         dd         0x00000170                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016574         db         0x6c, 0xe2, 0xfe, 0xff                      ; begin 0x47e0
0000000000016578         db         0x0d, 0x05, 2 dup (0x00)                    ; length 0x50d (end at 0x4ced)
000000000001657c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001657d         db  0x41 ; 'A'
000000000001657e         db  0x0e ; '.'
000000000001657f         db  0x10 ; '.'
0000000000016580         db  0x86 ; '.'
0000000000016581         db  0x02 ; '.'
0000000000016582         db  0x43 ; 'C'
0000000000016583         db  0x0d ; '.'
0000000000016584         db  0x06 ; '.'
0000000000016585         db  0x48 ; 'H'
0000000000016586         db  0x8f ; '.'
0000000000016587         db  0x03 ; '.'
0000000000016588         db  0x8e ; '.'
0000000000016589         db  0x04 ; '.'
000000000001658a         db  0x8d ; '.'
000000000001658b         db  0x05 ; '.'
000000000001658c         db  0x8c ; '.'
000000000001658d         db  0x06 ; '.'
000000000001658e         db  0x44 ; 'D'
000000000001658f         db  0x83 ; '.'
0000000000016590         db  0x07 ; '.'
0000000000016591         db  0x03 ; '.'
0000000000016592         db  0x45 ; 'E'
0000000000016593         db  0x01 ; '.'
0000000000016594         db  0x0a ; '.'
0000000000016595         db  0x0c ; '.'
0000000000016596         db  0x07 ; '.'
0000000000016597         db  0x08 ; '.'
0000000000016598         db  0x41 ; 'A'
0000000000016599         db  0x0b ; '.'
000000000001659a         db  0x00 ; '.'
000000000001659b         db  0x00 ; '.'
000000000001659c         dd         0x00000058                                  ; Length of the record
00000000000165a0         dd         0x000001a0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000165a4         db         0xcc, 0xc8, 0xfe, 0xff                      ; begin 0x2e70
00000000000165a8         db         0x58, 0x08, 2 dup (0x00)                    ; length 0x858 (end at 0x36c8)
00000000000165ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000165ad         db  0x42 ; 'B'
00000000000165ae         db  0x0e ; '.'
00000000000165af         db  0x10 ; '.'
00000000000165b0         db  0x8f ; '.'
00000000000165b1         db  0x02 ; '.'
00000000000165b2         db  0x42 ; 'B'
00000000000165b3         db  0x0e ; '.'
00000000000165b4         db  0x18 ; '.'
00000000000165b5         db  0x8e ; '.'
00000000000165b6         db  0x03 ; '.'
00000000000165b7         db  0x48 ; 'H'
00000000000165b8         db  0x0e ; '.'
00000000000165b9         db  0x20 ; ' '
00000000000165ba         db  0x8d ; '.'
00000000000165bb         db  0x04 ; '.'
00000000000165bc         db  0x42 ; 'B'
00000000000165bd         db  0x0e ; '.'
00000000000165be         db  0x28 ; '('
00000000000165bf         db  0x8c ; '.'
00000000000165c0         db  0x05 ; '.'
00000000000165c1         db  0x44 ; 'D'
00000000000165c2         db  0x0e ; '.'
00000000000165c3         db  0x30 ; '0'
00000000000165c4         db  0x86 ; '.'
00000000000165c5         db  0x06 ; '.'
00000000000165c6         db  0x41 ; 'A'
00000000000165c7         db  0x0e ; '.'
00000000000165c8         db  0x38 ; '8'
00000000000165c9         db  0x83 ; '.'
00000000000165ca         db  0x07 ; '.'
00000000000165cb         db  0x58 ; 'X'
00000000000165cc         db  0x0e ; '.'
00000000000165cd         db  0xe0 ; '.'
00000000000165ce         db  0x02 ; '.'
00000000000165cf         db  0x03 ; '.'
00000000000165d0         db  0x05 ; '.'
00000000000165d1         db  0x03 ; '.'
00000000000165d2         db  0x0a ; '.'
00000000000165d3         db  0x0e ; '.'
00000000000165d4         db  0xe8 ; '.'
00000000000165d5         db  0x02 ; '.'
00000000000165d6         db  0x4f ; 'O'
00000000000165d7         db  0x0e ; '.'
00000000000165d8         db  0xf0 ; '.'
00000000000165d9         db  0x02 ; '.'
00000000000165da         db  0x5c ; '\'
00000000000165db         db  0x0b ; '.'
00000000000165dc         db  0x03 ; '.'
00000000000165dd         db  0xcc ; '.'
00000000000165de         db  0x02 ; '.'
00000000000165df         db  0x0a ; '.'
00000000000165e0         db  0x0e ; '.'
00000000000165e1         db  0x38 ; '8'
00000000000165e2         db  0x41 ; 'A'
00000000000165e3         db  0x0e ; '.'
00000000000165e4         db  0x30 ; '0'
00000000000165e5         db  0x41 ; 'A'
00000000000165e6         db  0x0e ; '.'
00000000000165e7         db  0x28 ; '('
00000000000165e8         db  0x42 ; 'B'
00000000000165e9         db  0x0e ; '.'
00000000000165ea         db  0x20 ; ' '
00000000000165eb         db  0x42 ; 'B'
00000000000165ec         db  0x0e ; '.'
00000000000165ed         db  0x18 ; '.'
00000000000165ee         db  0x42 ; 'B'
00000000000165ef         db  0x0e ; '.'
00000000000165f0         db  0x10 ; '.'
00000000000165f1         db  0x42 ; 'B'
00000000000165f2         db  0x0e ; '.'
00000000000165f3         db  0x08 ; '.'
00000000000165f4         db  0x41 ; 'A'
00000000000165f5         db  0x0b ; '.'
00000000000165f6         db  0x00 ; '.'
00000000000165f7         db  0x00 ; '.'
00000000000165f8         dd         0x00000020                                  ; Length of the record
00000000000165fc         dd         0x000001fc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016600         db         0xf0, 0xe6, 0xfe, 0xff                      ; begin 0x4cf0
0000000000016604         db         0x44, 3 dup (0x00)                          ; length 0x44 (end at 0x4d34)
0000000000016608         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016609         db  0x4f ; 'O'
000000000001660a         db  0x0e ; '.'
000000000001660b         db  0x10 ; '.'
000000000001660c         db  0x83 ; '.'
000000000001660d         db  0x02 ; '.'
000000000001660e         db  0x52 ; 'R'
000000000001660f         db  0x0e ; '.'
0000000000016610         db  0x08 ; '.'
0000000000016611         db  0x47 ; 'G'
0000000000016612         db  0xc3 ; '.'
0000000000016613         db  0x48 ; 'H'
0000000000016614         db  0x0e ; '.'
0000000000016615         db  0x10 ; '.'
0000000000016616         db  0x83 ; '.'
0000000000016617         db  0x02 ; '.'
0000000000016618         db  0x53 ; 'S'
0000000000016619         db  0x0e ; '.'
000000000001661a         db  0x08 ; '.'
000000000001661b         db  0x00 ; '.'
000000000001661c         dd         0x00000038                                  ; Length of the record
0000000000016620         dd         0x00000220                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016624         db         0x1c, 0xe7, 0xfe, 0xff                      ; begin 0x4d40
0000000000016628         db         0xa5, 3 dup (0x00)                          ; length 0xa5 (end at 0x4de5)
000000000001662c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001662d         db  0x4a ; 'J'
000000000001662e         db  0x0e ; '.'
000000000001662f         db  0x10 ; '.'
0000000000016630         db  0x8c ; '.'
0000000000016631         db  0x02 ; '.'
0000000000016632         db  0x44 ; 'D'
0000000000016633         db  0x0e ; '.'
0000000000016634         db  0x18 ; '.'
0000000000016635         db  0x86 ; '.'
0000000000016636         db  0x03 ; '.'
0000000000016637         db  0x41 ; 'A'
0000000000016638         db  0x0e ; '.'
0000000000016639         db  0x20 ; ' '
000000000001663a         db  0x83 ; '.'
000000000001663b         db  0x04 ; '.'
000000000001663c         db  0x02 ; '.'
000000000001663d         db  0x40 ; '@'
000000000001663e         db  0x0a ; '.'
000000000001663f         db  0x0e ; '.'
0000000000016640         db  0x18 ; '.'
0000000000016641         db  0x43 ; 'C'
0000000000016642         db  0x0e ; '.'
0000000000016643         db  0x10 ; '.'
0000000000016644         db  0x42 ; 'B'
0000000000016645         db  0x0e ; '.'
0000000000016646         db  0x08 ; '.'
0000000000016647         db  0x44 ; 'D'
0000000000016648         db  0x0b ; '.'
0000000000016649         db  0x41 ; 'A'
000000000001664a         db  0x0a ; '.'
000000000001664b         db  0x0e ; '.'
000000000001664c         db  0x18 ; '.'
000000000001664d         db  0x46 ; 'F'
000000000001664e         db  0x0e ; '.'
000000000001664f         db  0x10 ; '.'
0000000000016650         db  0x42 ; 'B'
0000000000016651         db  0x0e ; '.'
0000000000016652         db  0x08 ; '.'
0000000000016653         db  0x47 ; 'G'
0000000000016654         db  0x0b ; '.'
0000000000016655         db  0x00 ; '.'
0000000000016656         db  0x00 ; '.'
0000000000016657         db  0x00 ; '.'
0000000000016658         dd         0x0000001c                                  ; Length of the record
000000000001665c         dd         0x0000025c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016660         db         0x90, 0xe7, 0xfe, 0xff                      ; begin 0x4df0
0000000000016664         db         0x37, 3 dup (0x00)                          ; length 0x37 (end at 0x4e27)
0000000000016668         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016669         db  0x41 ; 'A'
000000000001666a         db  0x0e ; '.'
000000000001666b         db  0x10 ; '.'
000000000001666c         db  0x83 ; '.'
000000000001666d         db  0x02 ; '.'
000000000001666e         db  0x59 ; 'Y'
000000000001666f         db  0x0a ; '.'
0000000000016670         db  0x0e ; '.'
0000000000016671         db  0x08 ; '.'
0000000000016672         db  0x46 ; 'F'
0000000000016673         db  0x0b ; '.'
0000000000016674         db  0x56 ; 'V'
0000000000016675         db  0x0e ; '.'
0000000000016676         db  0x08 ; '.'
0000000000016677         db  0x00 ; '.'
0000000000016678         dd         0x00000010                                  ; Length of the record
000000000001667c         dd         0x0000027c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016680         db         0xa0, 0xc7, 0xfe, 0xff                      ; begin 0x2e20
0000000000016684         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0x2e36)
0000000000016688         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016689         align      4
000000000001668c         dd         0x00000014                                  ; Length of the record
0000000000016690         dd         0x00000290                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016694         db         0xa2, 0xc7, 0xfe, 0xff                      ; begin 0x2e36
0000000000016698         db         0x33, 3 dup (0x00)                          ; length 0x33 (end at 0x2e69)
000000000001669c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001669d         db  0x41 ; 'A'
000000000001669e         db  0x0e ; '.'
000000000001669f         db  0x10 ; '.'
00000000000166a0         db  0x83 ; '.'
00000000000166a1         db  0x02 ; '.'
00000000000166a2         db  0x00 ; '.'
00000000000166a3         db  0x00 ; '.'
00000000000166a4         dd         0x00000034                                  ; Length of the record
00000000000166a8         dd         0x000002a8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000166ac         db         0x84, 0xe7, 0xfe, 0xff                      ; begin 0x4e30
00000000000166b0         db         0xb6, 3 dup (0x00)                          ; length 0xb6 (end at 0x4ee6)
00000000000166b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000166b5         db  0x42 ; 'B'
00000000000166b6         db  0x0e ; '.'
00000000000166b7         db  0x10 ; '.'
00000000000166b8         db  0x8c ; '.'
00000000000166b9         db  0x02 ; '.'
00000000000166ba         db  0x41 ; 'A'
00000000000166bb         db  0x0e ; '.'
00000000000166bc         db  0x18 ; '.'
00000000000166bd         db  0x86 ; '.'
00000000000166be         db  0x03 ; '.'
00000000000166bf         db  0x44 ; 'D'
00000000000166c0         db  0x0e ; '.'
00000000000166c1         db  0x20 ; ' '
00000000000166c2         db  0x83 ; '.'
00000000000166c3         db  0x04 ; '.'
00000000000166c4         db  0x02 ; '.'
00000000000166c5         db  0x97 ; '.'
00000000000166c6         db  0x0a ; '.'
00000000000166c7         db  0x0e ; '.'
00000000000166c8         db  0x18 ; '.'
00000000000166c9         db  0x41 ; 'A'
00000000000166ca         db  0x0e ; '.'
00000000000166cb         db  0x10 ; '.'
00000000000166cc         db  0x42 ; 'B'
00000000000166cd         db  0x0e ; '.'
00000000000166ce         db  0x08 ; '.'
00000000000166cf         db  0x47 ; 'G'
00000000000166d0         db  0x0b ; '.'
00000000000166d1         db  0x41 ; 'A'
00000000000166d2         db  0x0e ; '.'
00000000000166d3         db  0x18 ; '.'
00000000000166d4         db  0x41 ; 'A'
00000000000166d5         db  0x0e ; '.'
00000000000166d6         db  0x10 ; '.'
00000000000166d7         db  0x42 ; 'B'
00000000000166d8         db  0x0e ; '.'
00000000000166d9         db  0x08 ; '.'
00000000000166da         db  0x00 ; '.'
00000000000166db         db  0x00 ; '.'
00000000000166dc         dd         0x00000064                                  ; Length of the record
00000000000166e0         dd         0x000002e0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000166e4         db         0x0c, 0xe8, 0xfe, 0xff                      ; begin 0x4ef0
00000000000166e8         db         0x05, 0x01, 2 dup (0x00)                    ; length 0x105 (end at 0x4ff5)
00000000000166ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000166ed         db  0x42 ; 'B'
00000000000166ee         db  0x0e ; '.'
00000000000166ef         db  0x10 ; '.'
00000000000166f0         db  0x8d ; '.'
00000000000166f1         db  0x02 ; '.'
00000000000166f2         db  0x42 ; 'B'
00000000000166f3         db  0x0e ; '.'
00000000000166f4         db  0x18 ; '.'
00000000000166f5         db  0x8c ; '.'
00000000000166f6         db  0x03 ; '.'
00000000000166f7         db  0x45 ; 'E'
00000000000166f8         db  0x0e ; '.'
00000000000166f9         db  0x20 ; ' '
00000000000166fa         db  0x86 ; '.'
00000000000166fb         db  0x04 ; '.'
00000000000166fc         db  0x41 ; 'A'
00000000000166fd         db  0x0e ; '.'
00000000000166fe         db  0x28 ; '('
00000000000166ff         db  0x83 ; '.'
0000000000016700         db  0x05 ; '.'
0000000000016701         db  0x51 ; 'Q'
0000000000016702         db  0x0e ; '.'
0000000000016703         db  0x38 ; '8'
0000000000016704         db  0x4c ; 'L'
0000000000016705         db  0x0e ; '.'
0000000000016706         db  0x40 ; '@'
0000000000016707         db  0x57 ; 'W'
0000000000016708         db  0x0e ; '.'
0000000000016709         db  0x38 ; '8'
000000000001670a         db  0x41 ; 'A'
000000000001670b         db  0x0e ; '.'
000000000001670c         db  0x30 ; '0'
000000000001670d         db  0x4e ; 'N'
000000000001670e         db  0x0a ; '.'
000000000001670f         db  0x0e ; '.'
0000000000016710         db  0x28 ; '('
0000000000016711         db  0x48 ; 'H'
0000000000016712         db  0x0e ; '.'
0000000000016713         db  0x20 ; ' '
0000000000016714         db  0x41 ; 'A'
0000000000016715         db  0x0e ; '.'
0000000000016716         db  0x18 ; '.'
0000000000016717         db  0x42 ; 'B'
0000000000016718         db  0x0e ; '.'
0000000000016719         db  0x10 ; '.'
000000000001671a         db  0x42 ; 'B'
000000000001671b         db  0x0e ; '.'
000000000001671c         db  0x08 ; '.'
000000000001671d         db  0x46 ; 'F'
000000000001671e         db  0x0b ; '.'
000000000001671f         db  0x79 ; 'y'
0000000000016720         db  0x0a ; '.'
0000000000016721         db  0x0e ; '.'
0000000000016722         db  0x28 ; '('
0000000000016723         db  0x43 ; 'C'
0000000000016724         db  0x0e ; '.'
0000000000016725         db  0x20 ; ' '
0000000000016726         db  0x41 ; 'A'
0000000000016727         db  0x0e ; '.'
0000000000016728         db  0x18 ; '.'
0000000000016729         db  0x42 ; 'B'
000000000001672a         db  0x0e ; '.'
000000000001672b         db  0x10 ; '.'
000000000001672c         db  0x42 ; 'B'
000000000001672d         db  0x0e ; '.'
000000000001672e         db  0x08 ; '.'
000000000001672f         db  0x47 ; 'G'
0000000000016730         db  0x0b ; '.'
0000000000016731         db  0x02 ; '.'
0000000000016732         db  0x54 ; 'T'
0000000000016733         db  0x0e ; '.'
0000000000016734         db  0x28 ; '('
0000000000016735         db  0x43 ; 'C'
0000000000016736         db  0x0e ; '.'
0000000000016737         db  0x20 ; ' '
0000000000016738         db  0x41 ; 'A'
0000000000016739         db  0x0e ; '.'
000000000001673a         db  0x18 ; '.'
000000000001673b         db  0x42 ; 'B'
000000000001673c         db  0x0e ; '.'
000000000001673d         db  0x10 ; '.'
000000000001673e         db  0x42 ; 'B'
000000000001673f         db  0x0e ; '.'
0000000000016740         db  0x08 ; '.'
0000000000016741         db  0x00 ; '.'
0000000000016742         db  0x00 ; '.'
0000000000016743         db  0x00 ; '.'
0000000000016744         dd         0x0000004c                                  ; Length of the record
0000000000016748         dd         0x00000348                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
000000000001674c         db         0xb4, 0xe8, 0xfe, 0xff                      ; begin 0x5000
0000000000016750         db         0x4b, 0x01, 2 dup (0x00)                    ; length 0x14b (end at 0x514b)
0000000000016754         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016755         db  0x42 ; 'B'
0000000000016756         db  0x0e ; '.'
0000000000016757         db  0x10 ; '.'
0000000000016758         db  0x8e ; '.'
0000000000016759         db  0x02 ; '.'
000000000001675a         db  0x42 ; 'B'
000000000001675b         db  0x0e ; '.'
000000000001675c         db  0x18 ; '.'
000000000001675d         db  0x8d ; '.'
000000000001675e         db  0x03 ; '.'
000000000001675f         db  0x45 ; 'E'
0000000000016760         db  0x0e ; '.'
0000000000016761         db  0x20 ; ' '
0000000000016762         db  0x8c ; '.'
0000000000016763         db  0x04 ; '.'
0000000000016764         db  0x41 ; 'A'
0000000000016765         db  0x0e ; '.'
0000000000016766         db  0x28 ; '('
0000000000016767         db  0x86 ; '.'
0000000000016768         db  0x05 ; '.'
0000000000016769         db  0x44 ; 'D'
000000000001676a         db  0x0e ; '.'
000000000001676b         db  0x30 ; '0'
000000000001676c         db  0x83 ; '.'
000000000001676d         db  0x06 ; '.'
000000000001676e         db  0x4a ; 'J'
000000000001676f         db  0x0e ; '.'
0000000000016770         db  0x50 ; 'P'
0000000000016771         db  0x02 ; '.'
0000000000016772         db  0x83 ; '.'
0000000000016773         db  0x0e ; '.'
0000000000016774         db  0x58 ; 'X'
0000000000016775         db  0x4d ; 'M'
0000000000016776         db  0x0e ; '.'
0000000000016777         db  0x60 ; '`'
0000000000016778         db  0x56 ; 'V'
0000000000016779         db  0x0e ; '.'
000000000001677a         db  0x58 ; 'X'
000000000001677b         db  0x41 ; 'A'
000000000001677c         db  0x0e ; '.'
000000000001677d         db  0x50 ; 'P'
000000000001677e         db  0x02 ; '.'
000000000001677f         db  0x68 ; 'h'
0000000000016780         db  0x0a ; '.'
0000000000016781         db  0x0e ; '.'
0000000000016782         db  0x30 ; '0'
0000000000016783         db  0x41 ; 'A'
0000000000016784         db  0x0e ; '.'
0000000000016785         db  0x28 ; '('
0000000000016786         db  0x41 ; 'A'
0000000000016787         db  0x0e ; '.'
0000000000016788         db  0x20 ; ' '
0000000000016789         db  0x42 ; 'B'
000000000001678a         db  0x0e ; '.'
000000000001678b         db  0x18 ; '.'
000000000001678c         db  0x42 ; 'B'
000000000001678d         db  0x0e ; '.'
000000000001678e         db  0x10 ; '.'
000000000001678f         db  0x42 ; 'B'
0000000000016790         db  0x0e ; '.'
0000000000016791         db  0x08 ; '.'
0000000000016792         db  0x41 ; 'A'
0000000000016793         db  0x0b ; '.'
0000000000016794         dd         0x0000004c                                  ; Length of the record
0000000000016798         dd         0x00000398                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
000000000001679c         db         0xb4, 0xe9, 0xfe, 0xff                      ; begin 0x5150
00000000000167a0         db         0xbe, 3 dup (0x00)                          ; length 0xbe (end at 0x520e)
00000000000167a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000167a5         db  0x42 ; 'B'
00000000000167a6         db  0x0e ; '.'
00000000000167a7         db  0x10 ; '.'
00000000000167a8         db  0x8d ; '.'
00000000000167a9         db  0x02 ; '.'
00000000000167aa         db  0x42 ; 'B'
00000000000167ab         db  0x0e ; '.'
00000000000167ac         db  0x18 ; '.'
00000000000167ad         db  0x8c ; '.'
00000000000167ae         db  0x03 ; '.'
00000000000167af         db  0x44 ; 'D'
00000000000167b0         db  0x0e ; '.'
00000000000167b1         db  0x20 ; ' '
00000000000167b2         db  0x86 ; '.'
00000000000167b3         db  0x04 ; '.'
00000000000167b4         db  0x41 ; 'A'
00000000000167b5         db  0x0e ; '.'
00000000000167b6         db  0x28 ; '('
00000000000167b7         db  0x83 ; '.'
00000000000167b8         db  0x05 ; '.'
00000000000167b9         db  0x51 ; 'Q'
00000000000167ba         db  0x0e ; '.'
00000000000167bb         db  0x30 ; '0'
00000000000167bc         db  0x56 ; 'V'
00000000000167bd         db  0x0a ; '.'
00000000000167be         db  0x0e ; '.'
00000000000167bf         db  0x28 ; '('
00000000000167c0         db  0x46 ; 'F'
00000000000167c1         db  0x0e ; '.'
00000000000167c2         db  0x20 ; ' '
00000000000167c3         db  0x41 ; 'A'
00000000000167c4         db  0x0e ; '.'
00000000000167c5         db  0x18 ; '.'
00000000000167c6         db  0x42 ; 'B'
00000000000167c7         db  0x0e ; '.'
00000000000167c8         db  0x10 ; '.'
00000000000167c9         db  0x42 ; 'B'
00000000000167ca         db  0x0e ; '.'
00000000000167cb         db  0x08 ; '.'
00000000000167cc         db  0x45 ; 'E'
00000000000167cd         db  0x0b ; '.'
00000000000167ce         db  0x02 ; '.'
00000000000167cf         db  0x54 ; 'T'
00000000000167d0         db  0x0a ; '.'
00000000000167d1         db  0x0e ; '.'
00000000000167d2         db  0x28 ; '('
00000000000167d3         db  0x43 ; 'C'
00000000000167d4         db  0x0e ; '.'
00000000000167d5         db  0x20 ; ' '
00000000000167d6         db  0x41 ; 'A'
00000000000167d7         db  0x0e ; '.'
00000000000167d8         db  0x18 ; '.'
00000000000167d9         db  0x42 ; 'B'
00000000000167da         db  0x0e ; '.'
00000000000167db         db  0x10 ; '.'
00000000000167dc         db  0x42 ; 'B'
00000000000167dd         db  0x0e ; '.'
00000000000167de         db  0x08 ; '.'
00000000000167df         db  0x44 ; 'D'
00000000000167e0         db  0x0b ; '.'
00000000000167e1         db  0x00 ; '.'
00000000000167e2         db  0x00 ; '.'
00000000000167e3         db  0x00 ; '.'
00000000000167e4         dd         0x00000064                                  ; Length of the record
00000000000167e8         dd         0x000003e8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000167ec         db         0x24, 0xea, 0xfe, 0xff                      ; begin 0x5210
00000000000167f0         db         0x0e, 0x04, 2 dup (0x00)                    ; length 0x40e (end at 0x561e)
00000000000167f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000167f5         db  0x42 ; 'B'
00000000000167f6         db  0x0e ; '.'
00000000000167f7         db  0x10 ; '.'
00000000000167f8         db  0x8f ; '.'
00000000000167f9         db  0x02 ; '.'
00000000000167fa         db  0x42 ; 'B'
00000000000167fb         db  0x0e ; '.'
00000000000167fc         db  0x18 ; '.'
00000000000167fd         db  0x8e ; '.'
00000000000167fe         db  0x03 ; '.'
00000000000167ff         db  0x42 ; 'B'
0000000000016800         db  0x0e ; '.'
0000000000016801         db  0x20 ; ' '
0000000000016802         db  0x8d ; '.'
0000000000016803         db  0x04 ; '.'
0000000000016804         db  0x42 ; 'B'
0000000000016805         db  0x0e ; '.'
0000000000016806         db  0x28 ; '('
0000000000016807         db  0x8c ; '.'
0000000000016808         db  0x05 ; '.'
0000000000016809         db  0x41 ; 'A'
000000000001680a         db  0x0e ; '.'
000000000001680b         db  0x30 ; '0'
000000000001680c         db  0x86 ; '.'
000000000001680d         db  0x06 ; '.'
000000000001680e         db  0x41 ; 'A'
000000000001680f         db  0x0e ; '.'
0000000000016810         db  0x38 ; '8'
0000000000016811         db  0x83 ; '.'
0000000000016812         db  0x07 ; '.'
0000000000016813         db  0x44 ; 'D'
0000000000016814         db  0x0e ; '.'
0000000000016815         db  0xb0 ; '.'
0000000000016816         db  0x01 ; '.'
0000000000016817         db  0x02 ; '.'
0000000000016818         db  0xfb ; '.'
0000000000016819         db  0x0a ; '.'
000000000001681a         db  0x0e ; '.'
000000000001681b         db  0x38 ; '8'
000000000001681c         db  0x44 ; 'D'
000000000001681d         db  0x0e ; '.'
000000000001681e         db  0x30 ; '0'
000000000001681f         db  0x41 ; 'A'
0000000000016820         db  0x0e ; '.'
0000000000016821         db  0x28 ; '('
0000000000016822         db  0x42 ; 'B'
0000000000016823         db  0x0e ; '.'
0000000000016824         db  0x20 ; ' '
0000000000016825         db  0x42 ; 'B'
0000000000016826         db  0x0e ; '.'
0000000000016827         db  0x18 ; '.'
0000000000016828         db  0x42 ; 'B'
0000000000016829         db  0x0e ; '.'
000000000001682a         db  0x10 ; '.'
000000000001682b         db  0x42 ; 'B'
000000000001682c         db  0x0e ; '.'
000000000001682d         db  0x08 ; '.'
000000000001682e         db  0x4a ; 'J'
000000000001682f         db  0x0b ; '.'
0000000000016830         db  0x03 ; '.'
0000000000016831         db  0x4d ; 'M'
0000000000016832         db  0x01 ; '.'
0000000000016833         db  0x0a ; '.'
0000000000016834         db  0x0e ; '.'
0000000000016835         db  0x38 ; '8'
0000000000016836         db  0x41 ; 'A'
0000000000016837         db  0x0e ; '.'
0000000000016838         db  0x30 ; '0'
0000000000016839         db  0x41 ; 'A'
000000000001683a         db  0x0e ; '.'
000000000001683b         db  0x28 ; '('
000000000001683c         db  0x42 ; 'B'
000000000001683d         db  0x0e ; '.'
000000000001683e         db  0x20 ; ' '
000000000001683f         db  0x42 ; 'B'
0000000000016840         db  0x0e ; '.'
0000000000016841         db  0x18 ; '.'
0000000000016842         db  0x42 ; 'B'
0000000000016843         db  0x0e ; '.'
0000000000016844         db  0x10 ; '.'
0000000000016845         db  0x42 ; 'B'
0000000000016846         db  0x0e ; '.'
0000000000016847         db  0x08 ; '.'
0000000000016848         db  0x49 ; 'I'
0000000000016849         db  0x0b ; '.'
000000000001684a         db  0x00 ; '.'
000000000001684b         db  0x00 ; '.'
000000000001684c         dd         0x00000058                                  ; Length of the record
0000000000016850         dd         0x00000450                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016854         db         0xcc, 0xed, 0xfe, 0xff                      ; begin 0x5620
0000000000016858         db         0xd0, 3 dup (0x00)                          ; length 0xd0 (end at 0x56f0)
000000000001685c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001685d         db  0x42 ; 'B'
000000000001685e         db  0x0e ; '.'
000000000001685f         db  0x10 ; '.'
0000000000016860         db  0x8d ; '.'
0000000000016861         db  0x02 ; '.'
0000000000016862         db  0x42 ; 'B'
0000000000016863         db  0x0e ; '.'
0000000000016864         db  0x18 ; '.'
0000000000016865         db  0x8c ; '.'
0000000000016866         db  0x03 ; '.'
0000000000016867         db  0x41 ; 'A'
0000000000016868         db  0x0e ; '.'
0000000000016869         db  0x20 ; ' '
000000000001686a         db  0x86 ; '.'
000000000001686b         db  0x04 ; '.'
000000000001686c         db  0x41 ; 'A'
000000000001686d         db  0x0e ; '.'
000000000001686e         db  0x28 ; '('
000000000001686f         db  0x83 ; '.'
0000000000016870         db  0x05 ; '.'
0000000000016871         db  0x47 ; 'G'
0000000000016872         db  0x0e ; '.'
0000000000016873         db  0x30 ; '0'
0000000000016874         db  0x02 ; '.'
0000000000016875         db  0x5e ; '^'
0000000000016876         db  0x0a ; '.'
0000000000016877         db  0x0e ; '.'
0000000000016878         db  0x28 ; '('
0000000000016879         db  0x46 ; 'F'
000000000001687a         db  0x0e ; '.'
000000000001687b         db  0x20 ; ' '
000000000001687c         db  0x41 ; 'A'
000000000001687d         db  0x0e ; '.'
000000000001687e         db  0x18 ; '.'
000000000001687f         db  0x42 ; 'B'
0000000000016880         db  0x0e ; '.'
0000000000016881         db  0x10 ; '.'
0000000000016882         db  0x42 ; 'B'
0000000000016883         db  0x0e ; '.'
0000000000016884         db  0x08 ; '.'
0000000000016885         db  0x4a ; 'J'
0000000000016886         db  0x0b ; '.'
0000000000016887         db  0x4c ; 'L'
0000000000016888         db  0x0a ; '.'
0000000000016889         db  0x0e ; '.'
000000000001688a         db  0x28 ; '('
000000000001688b         db  0x48 ; 'H'
000000000001688c         db  0x0e ; '.'
000000000001688d         db  0x20 ; ' '
000000000001688e         db  0x41 ; 'A'
000000000001688f         db  0x0e ; '.'
0000000000016890         db  0x18 ; '.'
0000000000016891         db  0x42 ; 'B'
0000000000016892         db  0x0e ; '.'
0000000000016893         db  0x10 ; '.'
0000000000016894         db  0x42 ; 'B'
0000000000016895         db  0x0e ; '.'
0000000000016896         db  0x08 ; '.'
0000000000016897         db  0x47 ; 'G'
0000000000016898         db  0x0b ; '.'
0000000000016899         db  0x67 ; 'g'
000000000001689a         db  0x0e ; '.'
000000000001689b         db  0x28 ; '('
000000000001689c         db  0x43 ; 'C'
000000000001689d         db  0x0e ; '.'
000000000001689e         db  0x20 ; ' '
000000000001689f         db  0x41 ; 'A'
00000000000168a0         db  0x0e ; '.'
00000000000168a1         db  0x18 ; '.'
00000000000168a2         db  0x42 ; 'B'
00000000000168a3         db  0x0e ; '.'
00000000000168a4         db  0x10 ; '.'
00000000000168a5         db  0x42 ; 'B'
00000000000168a6         db  0x0e ; '.'
00000000000168a7         db  0x08 ; '.'
00000000000168a8         dd         0x00000034                                  ; Length of the record
00000000000168ac         dd         0x000004ac                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000168b0         db         0x40, 0xee, 0xfe, 0xff                      ; begin 0x56f0
00000000000168b4         db         0x75, 3 dup (0x00)                          ; length 0x75 (end at 0x5765)
00000000000168b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000168b9         db  0x42 ; 'B'
00000000000168ba         db  0x0e ; '.'
00000000000168bb         db  0x10 ; '.'
00000000000168bc         db  0x8c ; '.'
00000000000168bd         db  0x02 ; '.'
00000000000168be         db  0x41 ; 'A'
00000000000168bf         db  0x0e ; '.'
00000000000168c0         db  0x18 ; '.'
00000000000168c1         db  0x86 ; '.'
00000000000168c2         db  0x03 ; '.'
00000000000168c3         db  0x44 ; 'D'
00000000000168c4         db  0x0e ; '.'
00000000000168c5         db  0x20 ; ' '
00000000000168c6         db  0x83 ; '.'
00000000000168c7         db  0x04 ; '.'
00000000000168c8         db  0x02 ; '.'
00000000000168c9         db  0x54 ; 'T'
00000000000168ca         db  0x0a ; '.'
00000000000168cb         db  0x0e ; '.'
00000000000168cc         db  0x18 ; '.'
00000000000168cd         db  0x43 ; 'C'
00000000000168ce         db  0x0e ; '.'
00000000000168cf         db  0x10 ; '.'
00000000000168d0         db  0x42 ; 'B'
00000000000168d1         db  0x0e ; '.'
00000000000168d2         db  0x08 ; '.'
00000000000168d3         db  0x48 ; 'H'
00000000000168d4         db  0x0b ; '.'
00000000000168d5         db  0x49 ; 'I'
00000000000168d6         db  0x0e ; '.'
00000000000168d7         db  0x18 ; '.'
00000000000168d8         db  0x41 ; 'A'
00000000000168d9         db  0x0e ; '.'
00000000000168da         db  0x10 ; '.'
00000000000168db         db  0x42 ; 'B'
00000000000168dc         db  0x0e ; '.'
00000000000168dd         db  0x08 ; '.'
00000000000168de         db  0x00 ; '.'
00000000000168df         db  0x00 ; '.'
00000000000168e0         dd         0x00000018                                  ; Length of the record
00000000000168e4         dd         0x000004e4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000168e8         db         0x88, 0xee, 0xfe, 0xff                      ; begin 0x5770
00000000000168ec         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x579b)
00000000000168f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000168f1         db  0x58 ; 'X'
00000000000168f2         db  0x0e ; '.'
00000000000168f3         db  0x10 ; '.'
00000000000168f4         db  0x83 ; '.'
00000000000168f5         db  0x02 ; '.'
00000000000168f6         db  0x52 ; 'R'
00000000000168f7         db  0x0e ; '.'
00000000000168f8         db  0x08 ; '.'
00000000000168f9         db  0x00 ; '.'
00000000000168fa         db  0x00 ; '.'
00000000000168fb         db  0x00 ; '.'
00000000000168fc         dd         0x00000018                                  ; Length of the record
0000000000016900         dd         0x00000500                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016904         db         0x9c, 0xee, 0xfe, 0xff                      ; begin 0x57a0
0000000000016908         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x57cb)
000000000001690c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001690d         db  0x58 ; 'X'
000000000001690e         db  0x0e ; '.'
000000000001690f         db  0x10 ; '.'
0000000000016910         db  0x83 ; '.'
0000000000016911         db  0x02 ; '.'
0000000000016912         db  0x52 ; 'R'
0000000000016913         db  0x0e ; '.'
0000000000016914         db  0x08 ; '.'
0000000000016915         db  0x00 ; '.'
0000000000016916         db  0x00 ; '.'
0000000000016917         db  0x00 ; '.'
0000000000016918         dd         0x00000018                                  ; Length of the record
000000000001691c         dd         0x0000051c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016920         db         0xb0, 0xee, 0xfe, 0xff                      ; begin 0x57d0
0000000000016924         db         0x34, 3 dup (0x00)                          ; length 0x34 (end at 0x5804)
0000000000016928         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016929         db  0x45 ; 'E'
000000000001692a         db  0x0e ; '.'
000000000001692b         db  0x10 ; '.'
000000000001692c         db  0x83 ; '.'
000000000001692d         db  0x02 ; '.'
000000000001692e         db  0x6e ; 'n'
000000000001692f         db  0x0e ; '.'
0000000000016930         db  0x08 ; '.'
0000000000016931         db  0x00 ; '.'
0000000000016932         db  0x00 ; '.'
0000000000016933         db  0x00 ; '.'
0000000000016934         dd         0x00000018                                  ; Length of the record
0000000000016938         dd         0x00000538                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
000000000001693c         db         0xd4, 0xee, 0xfe, 0xff                      ; begin 0x5810
0000000000016940         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5834)
0000000000016944         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016945         db  0x41 ; 'A'
0000000000016946         db  0x0e ; '.'
0000000000016947         db  0x10 ; '.'
0000000000016948         db  0x83 ; '.'
0000000000016949         db  0x02 ; '.'
000000000001694a         db  0x62 ; 'b'
000000000001694b         db  0x0e ; '.'
000000000001694c         db  0x08 ; '.'
000000000001694d         db  0x00 ; '.'
000000000001694e         db  0x00 ; '.'
000000000001694f         db  0x00 ; '.'
0000000000016950         dd         0x0000007c                                  ; Length of the record
0000000000016954         dd         0x00000554                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016958         db         0xe8, 0xee, 0xfe, 0xff                      ; begin 0x5840
000000000001695c         db         0x0c, 0x02, 2 dup (0x00)                    ; length 0x20c (end at 0x5a4c)
0000000000016960         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016961         db  0x42 ; 'B'
0000000000016962         db  0x0e ; '.'
0000000000016963         db  0x10 ; '.'
0000000000016964         db  0x8f ; '.'
0000000000016965         db  0x02 ; '.'
0000000000016966         db  0x42 ; 'B'
0000000000016967         db  0x0e ; '.'
0000000000016968         db  0x18 ; '.'
0000000000016969         db  0x8e ; '.'
000000000001696a         db  0x03 ; '.'
000000000001696b         db  0x42 ; 'B'
000000000001696c         db  0x0e ; '.'
000000000001696d         db  0x20 ; ' '
000000000001696e         db  0x8d ; '.'
000000000001696f         db  0x04 ; '.'
0000000000016970         db  0x42 ; 'B'
0000000000016971         db  0x0e ; '.'
0000000000016972         db  0x28 ; '('
0000000000016973         db  0x8c ; '.'
0000000000016974         db  0x05 ; '.'
0000000000016975         db  0x44 ; 'D'
0000000000016976         db  0x0e ; '.'
0000000000016977         db  0x30 ; '0'
0000000000016978         db  0x86 ; '.'
0000000000016979         db  0x06 ; '.'
000000000001697a         db  0x41 ; 'A'
000000000001697b         db  0x0e ; '.'
000000000001697c         db  0x38 ; '8'
000000000001697d         db  0x83 ; '.'
000000000001697e         db  0x07 ; '.'
000000000001697f         db  0x49 ; 'I'
0000000000016980         db  0x0e ; '.'
0000000000016981         db  0x40 ; '@'
0000000000016982         db  0x02 ; '.'
0000000000016983         db  0x8c ; '.'
0000000000016984         db  0x0a ; '.'
0000000000016985         db  0x0e ; '.'
0000000000016986         db  0x38 ; '8'
0000000000016987         db  0x41 ; 'A'
0000000000016988         db  0x0e ; '.'
0000000000016989         db  0x30 ; '0'
000000000001698a         db  0x41 ; 'A'
000000000001698b         db  0x0e ; '.'
000000000001698c         db  0x28 ; '('
000000000001698d         db  0x42 ; 'B'
000000000001698e         db  0x0e ; '.'
000000000001698f         db  0x20 ; ' '
0000000000016990         db  0x42 ; 'B'
0000000000016991         db  0x0e ; '.'
0000000000016992         db  0x18 ; '.'
0000000000016993         db  0x42 ; 'B'
0000000000016994         db  0x0e ; '.'
0000000000016995         db  0x10 ; '.'
0000000000016996         db  0x42 ; 'B'
0000000000016997         db  0x0e ; '.'
0000000000016998         db  0x08 ; '.'
0000000000016999         db  0x44 ; 'D'
000000000001699a         db  0x0b ; '.'
000000000001699b         db  0x50 ; 'P'
000000000001699c         db  0x0a ; '.'
000000000001699d         db  0x0e ; '.'
000000000001699e         db  0x38 ; '8'
000000000001699f         db  0x46 ; 'F'
00000000000169a0         db  0x0e ; '.'
00000000000169a1         db  0x30 ; '0'
00000000000169a2         db  0x41 ; 'A'
00000000000169a3         db  0x0e ; '.'
00000000000169a4         db  0x28 ; '('
00000000000169a5         db  0x42 ; 'B'
00000000000169a6         db  0x0e ; '.'
00000000000169a7         db  0x20 ; ' '
00000000000169a8         db  0x42 ; 'B'
00000000000169a9         db  0x0e ; '.'
00000000000169aa         db  0x18 ; '.'
00000000000169ab         db  0x42 ; 'B'
00000000000169ac         db  0x0e ; '.'
00000000000169ad         db  0x10 ; '.'
00000000000169ae         db  0x42 ; 'B'
00000000000169af         db  0x0e ; '.'
00000000000169b0         db  0x08 ; '.'
00000000000169b1         db  0x41 ; 'A'
00000000000169b2         db  0x0b ; '.'
00000000000169b3         db  0x03 ; '.'
00000000000169b4         db  0x04 ; '.'
00000000000169b5         db  0x01 ; '.'
00000000000169b6         db  0x0a ; '.'
00000000000169b7         db  0x0e ; '.'
00000000000169b8         db  0x38 ; '8'
00000000000169b9         db  0x41 ; 'A'
00000000000169ba         db  0x0e ; '.'
00000000000169bb         db  0x30 ; '0'
00000000000169bc         db  0x41 ; 'A'
00000000000169bd         db  0x0e ; '.'
00000000000169be         db  0x28 ; '('
00000000000169bf         db  0x42 ; 'B'
00000000000169c0         db  0x0e ; '.'
00000000000169c1         db  0x20 ; ' '
00000000000169c2         db  0x44 ; 'D'
00000000000169c3         db  0x0e ; '.'
00000000000169c4         db  0x18 ; '.'
00000000000169c5         db  0x42 ; 'B'
00000000000169c6         db  0x0e ; '.'
00000000000169c7         db  0x10 ; '.'
00000000000169c8         db  0x42 ; 'B'
00000000000169c9         db  0x0e ; '.'
00000000000169ca         db  0x08 ; '.'
00000000000169cb         db  0x48 ; 'H'
00000000000169cc         db  0x0b ; '.'
00000000000169cd         db  0x00 ; '.'
00000000000169ce         db  0x00 ; '.'
00000000000169cf         db  0x00 ; '.'
00000000000169d0         dd         0x0000001c                                  ; Length of the record
00000000000169d4         dd         0x000005d4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000169d8         db         0x78, 0xf0, 0xfe, 0xff                      ; begin 0x5a50
00000000000169dc         db         0x2a, 3 dup (0x00)                          ; length 0x2a (end at 0x5a7a)
00000000000169e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000169e1         db  0x41 ; 'A'
00000000000169e2         db  0x0e ; '.'
00000000000169e3         db  0x10 ; '.'
00000000000169e4         db  0x83 ; '.'
00000000000169e5         db  0x02 ; '.'
00000000000169e6         db  0x4e ; 'N'
00000000000169e7         db  0x0a ; '.'
00000000000169e8         db  0x0e ; '.'
00000000000169e9         db  0x08 ; '.'
00000000000169ea         db  0x41 ; 'A'
00000000000169eb         db  0x0b ; '.'
00000000000169ec         db  0x59 ; 'Y'
00000000000169ed         db  0x0e ; '.'
00000000000169ee         db  0x08 ; '.'
00000000000169ef         db  0x00 ; '.'
00000000000169f0         dd         0x0000002c                                  ; Length of the record
00000000000169f4         dd         0x000005f4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000169f8         db         0x88, 0xf0, 0xfe, 0xff                      ; begin 0x5a80
00000000000169fc         db         0x0c, 0x41, 2 dup (0x00)                    ; length 0x410c (end at 0x9b8c)
0000000000016a00         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016a01         db  0x41 ; 'A'
0000000000016a02         db  0x0e ; '.'
0000000000016a03         db  0x10 ; '.'
0000000000016a04         db  0x86 ; '.'
0000000000016a05         db  0x02 ; '.'
0000000000016a06         db  0x43 ; 'C'
0000000000016a07         db  0x0d ; '.'
0000000000016a08         db  0x06 ; '.'
0000000000016a09         db  0x48 ; 'H'
0000000000016a0a         db  0x8f ; '.'
0000000000016a0b         db  0x03 ; '.'
0000000000016a0c         db  0x8e ; '.'
0000000000016a0d         db  0x04 ; '.'
0000000000016a0e         db  0x8d ; '.'
0000000000016a0f         db  0x05 ; '.'
0000000000016a10         db  0x8c ; '.'
0000000000016a11         db  0x06 ; '.'
0000000000016a12         db  0x44 ; 'D'
0000000000016a13         db  0x83 ; '.'
0000000000016a14         db  0x07 ; '.'
0000000000016a15         db  0x03 ; '.'
0000000000016a16         db  0x5a ; 'Z'
0000000000016a17         db  0x08 ; '.'
0000000000016a18         db  0x0a ; '.'
0000000000016a19         db  0x0c ; '.'
0000000000016a1a         db  0x07 ; '.'
0000000000016a1b         db  0x08 ; '.'
0000000000016a1c         db  0x46 ; 'F'
0000000000016a1d         db  0x0b ; '.'
0000000000016a1e         db  0x00 ; '.'
0000000000016a1f         db  0x00 ; '.'
0000000000016a20         dd         0x0000002c                                  ; Length of the record
0000000000016a24         dd         0x00000624                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016a28         db         0x68, 0x31, 2 dup (0xff)                    ; begin 0x9b90
0000000000016a2c         db         0x65, 0x01, 2 dup (0x00)                    ; length 0x165 (end at 0x9cf5)
0000000000016a30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016a31         db  0x44 ; 'D'
0000000000016a32         db  0x0e ; '.'
0000000000016a33         db  0x20 ; ' '
0000000000016a34         db  0x02 ; '.'
0000000000016a35         db  0x59 ; 'Y'
0000000000016a36         db  0x0e ; '.'
0000000000016a37         db  0x28 ; '('
0000000000016a38         db  0x45 ; 'E'
0000000000016a39         db  0x0e ; '.'
0000000000016a3a         db  0x30 ; '0'
0000000000016a3b         db  0x5c ; '\'
0000000000016a3c         db  0x0e ; '.'
0000000000016a3d         db  0x38 ; '8'
0000000000016a3e         db  0x42 ; 'B'
0000000000016a3f         db  0x0e ; '.'
0000000000016a40         db  0x40 ; '@'
0000000000016a41         db  0x49 ; 'I'
0000000000016a42         db  0x0e ; '.'
0000000000016a43         db  0x20 ; ' '
0000000000016a44         db  0x54 ; 'T'
0000000000016a45         db  0x0a ; '.'
0000000000016a46         db  0x0e ; '.'
0000000000016a47         db  0x08 ; '.'
0000000000016a48         db  0x43 ; 'C'
0000000000016a49         db  0x0b ; '.'
0000000000016a4a         db  0x00 ; '.'
0000000000016a4b         db  0x00 ; '.'
0000000000016a4c         db  0x00 ; '.'
0000000000016a4d         db  0x00 ; '.'
0000000000016a4e         db  0x00 ; '.'
0000000000016a4f         db  0x00 ; '.'
0000000000016a50         dd         0x00000010                                  ; Length of the record
0000000000016a54         dd         0x00000654                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016a58         db         0xa8, 0x32, 2 dup (0xff)                    ; begin 0x9d00
0000000000016a5c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x9d0c)
0000000000016a60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016a61         align      4
0000000000016a64         dd         0x00000010                                  ; Length of the record
0000000000016a68         dd         0x00000668                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016a6c         db         0xa4, 0x32, 2 dup (0xff)                    ; begin 0x9d10
0000000000016a70         db         0x1c, 3 dup (0x00)                          ; length 0x1c (end at 0x9d2c)
0000000000016a74         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016a75         align      8
0000000000016a78         dd         0x00000018                                  ; Length of the record
0000000000016a7c         dd         0x0000067c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016a80         db         0xb0, 0x32, 2 dup (0xff)                    ; begin 0x9d30
0000000000016a84         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0x9d46)
0000000000016a88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016a89         db  0x41 ; 'A'
0000000000016a8a         db  0x0e ; '.'
0000000000016a8b         db  0x10 ; '.'
0000000000016a8c         db  0x83 ; '.'
0000000000016a8d         db  0x02 ; '.'
0000000000016a8e         db  0x50 ; 'P'
0000000000016a8f         db  0x0e ; '.'
0000000000016a90         db  0x08 ; '.'
0000000000016a91         db  0x00 ; '.'
0000000000016a92         db  0x00 ; '.'
0000000000016a93         db  0x00 ; '.'
0000000000016a94         dd         0x00000020                                  ; Length of the record
0000000000016a98         dd         0x00000698                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016a9c         db         0xb4, 0x32, 2 dup (0xff)                    ; begin 0x9d50
0000000000016aa0         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0x9dba)
0000000000016aa4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016aa5         db  0x41 ; 'A'
0000000000016aa6         db  0x0e ; '.'
0000000000016aa7         db  0x10 ; '.'
0000000000016aa8         db  0x83 ; '.'
0000000000016aa9         db  0x02 ; '.'
0000000000016aaa         db  0x44 ; 'D'
0000000000016aab         db  0x0e ; '.'
0000000000016aac         db  0x30 ; '0'
0000000000016aad         db  0x02 ; '.'
0000000000016aae         db  0x5e ; '^'
0000000000016aaf         db  0x0a ; '.'
0000000000016ab0         db  0x0e ; '.'
0000000000016ab1         db  0x10 ; '.'
0000000000016ab2         db  0x41 ; 'A'
0000000000016ab3         db  0x0e ; '.'
0000000000016ab4         db  0x08 ; '.'
0000000000016ab5         db  0x41 ; 'A'
0000000000016ab6         db  0x0b ; '.'
0000000000016ab7         db  0x00 ; '.'
0000000000016ab8         dd         0x00000018                                  ; Length of the record
0000000000016abc         dd         0x000006bc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016ac0         db         0x00, 0x33, 2 dup (0xff)                    ; begin 0x9dc0
0000000000016ac4         db         0x59, 3 dup (0x00)                          ; length 0x59 (end at 0x9e19)
0000000000016ac8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016ac9         db  0x44 ; 'D'
0000000000016aca         db  0x0e ; '.'
0000000000016acb         db  0x30 ; '0'
0000000000016acc         db  0x02 ; '.'
0000000000016acd         db  0x45 ; 'E'
0000000000016ace         db  0x0a ; '.'
0000000000016acf         db  0x0e ; '.'
0000000000016ad0         db  0x08 ; '.'
0000000000016ad1         db  0x47 ; 'G'
0000000000016ad2         db  0x0b ; '.'
0000000000016ad3         db  0x00 ; '.'
0000000000016ad4         dd         0x00000038                                  ; Length of the record
0000000000016ad8         dd         0x000006d8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016adc         db         0x44, 0x33, 2 dup (0xff)                    ; begin 0x9e20
0000000000016ae0         db         0x79, 3 dup (0x00)                          ; length 0x79 (end at 0x9e99)
0000000000016ae4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016ae5         db  0x42 ; 'B'
0000000000016ae6         db  0x0e ; '.'
0000000000016ae7         db  0x10 ; '.'
0000000000016ae8         db  0x8d ; '.'
0000000000016ae9         db  0x02 ; '.'
0000000000016aea         db  0x42 ; 'B'
0000000000016aeb         db  0x0e ; '.'
0000000000016aec         db  0x18 ; '.'
0000000000016aed         db  0x8c ; '.'
0000000000016aee         db  0x03 ; '.'
0000000000016aef         db  0x44 ; 'D'
0000000000016af0         db  0x0e ; '.'
0000000000016af1         db  0x20 ; ' '
0000000000016af2         db  0x86 ; '.'
0000000000016af3         db  0x04 ; '.'
0000000000016af4         db  0x41 ; 'A'
0000000000016af5         db  0x0e ; '.'
0000000000016af6         db  0x28 ; '('
0000000000016af7         db  0x83 ; '.'
0000000000016af8         db  0x05 ; '.'
0000000000016af9         db  0x4f ; 'O'
0000000000016afa         db  0x0e ; '.'
0000000000016afb         db  0x30 ; '0'
0000000000016afc         db  0x02 ; '.'
0000000000016afd         db  0x50 ; 'P'
0000000000016afe         db  0x0a ; '.'
0000000000016aff         db  0x0e ; '.'
0000000000016b00         db  0x28 ; '('
0000000000016b01         db  0x41 ; 'A'
0000000000016b02         db  0x0e ; '.'
0000000000016b03         db  0x20 ; ' '
0000000000016b04         db  0x41 ; 'A'
0000000000016b05         db  0x0e ; '.'
0000000000016b06         db  0x18 ; '.'
0000000000016b07         db  0x42 ; 'B'
0000000000016b08         db  0x0e ; '.'
0000000000016b09         db  0x10 ; '.'
0000000000016b0a         db  0x42 ; 'B'
0000000000016b0b         db  0x0e ; '.'
0000000000016b0c         db  0x08 ; '.'
0000000000016b0d         db  0x42 ; 'B'
0000000000016b0e         db  0x0b ; '.'
0000000000016b0f         db  0x00 ; '.'
0000000000016b10         dd         0x00000018                                  ; Length of the record
0000000000016b14         dd         0x00000714                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016b18         db         0x88, 0x33, 2 dup (0xff)                    ; begin 0x9ea0
0000000000016b1c         db         0x3b, 3 dup (0x00)                          ; length 0x3b (end at 0x9edb)
0000000000016b20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016b21         db  0x59 ; 'Y'
0000000000016b22         db  0x0e ; '.'
0000000000016b23         db  0x10 ; '.'
0000000000016b24         db  0x5c ; '\'
0000000000016b25         db  0x0a ; '.'
0000000000016b26         db  0x0e ; '.'
0000000000016b27         db  0x08 ; '.'
0000000000016b28         db  0x41 ; 'A'
0000000000016b29         db  0x0b ; '.'
0000000000016b2a         db  0x00 ; '.'
0000000000016b2b         db  0x00 ; '.'
0000000000016b2c         dd         0x00000010                                  ; Length of the record
0000000000016b30         dd         0x00000730                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016b34         db         0xac, 0x33, 2 dup (0xff)                    ; begin 0x9ee0
0000000000016b38         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x9eec)
0000000000016b3c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016b3d         align      64
0000000000016b40         dd         0x00000010                                  ; Length of the record
0000000000016b44         dd         0x00000744                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016b48         db         0xa8, 0x33, 2 dup (0xff)                    ; begin 0x9ef0
0000000000016b4c         db         0x2a, 3 dup (0x00)                          ; length 0x2a (end at 0x9f1a)
0000000000016b50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016b51         align      4
0000000000016b54         dd         0x00000050                                  ; Length of the record
0000000000016b58         dd         0x00000758                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016b5c         db         0xc4, 0x33, 2 dup (0xff)                    ; begin 0x9f20
0000000000016b60         db         0x0d, 0x03, 2 dup (0x00)                    ; length 0x30d (end at 0xa22d)
0000000000016b64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016b65         db  0x42 ; 'B'
0000000000016b66         db  0x0e ; '.'
0000000000016b67         db  0x10 ; '.'
0000000000016b68         db  0x8f ; '.'
0000000000016b69         db  0x02 ; '.'
0000000000016b6a         db  0x42 ; 'B'
0000000000016b6b         db  0x0e ; '.'
0000000000016b6c         db  0x18 ; '.'
0000000000016b6d         db  0x8e ; '.'
0000000000016b6e         db  0x03 ; '.'
0000000000016b6f         db  0x45 ; 'E'
0000000000016b70         db  0x0e ; '.'
0000000000016b71         db  0x20 ; ' '
0000000000016b72         db  0x8d ; '.'
0000000000016b73         db  0x04 ; '.'
0000000000016b74         db  0x42 ; 'B'
0000000000016b75         db  0x0e ; '.'
0000000000016b76         db  0x28 ; '('
0000000000016b77         db  0x8c ; '.'
0000000000016b78         db  0x05 ; '.'
0000000000016b79         db  0x44 ; 'D'
0000000000016b7a         db  0x0e ; '.'
0000000000016b7b         db  0x30 ; '0'
0000000000016b7c         db  0x86 ; '.'
0000000000016b7d         db  0x06 ; '.'
0000000000016b7e         db  0x41 ; 'A'
0000000000016b7f         db  0x0e ; '.'
0000000000016b80         db  0x38 ; '8'
0000000000016b81         db  0x83 ; '.'
0000000000016b82         db  0x07 ; '.'
0000000000016b83         db  0x51 ; 'Q'
0000000000016b84         db  0x0e ; '.'
0000000000016b85         db  0xd0 ; '.'
0000000000016b86         db  0x20 ; ' '
0000000000016b87         db  0x03 ; '.'
0000000000016b88         db  0x5d ; ']'
0000000000016b89         db  0x01 ; '.'
0000000000016b8a         db  0x0a ; '.'
0000000000016b8b         db  0x0e ; '.'
0000000000016b8c         db  0x38 ; '8'
0000000000016b8d         db  0x41 ; 'A'
0000000000016b8e         db  0x0e ; '.'
0000000000016b8f         db  0x30 ; '0'
0000000000016b90         db  0x41 ; 'A'
0000000000016b91         db  0x0e ; '.'
0000000000016b92         db  0x28 ; '('
0000000000016b93         db  0x42 ; 'B'
0000000000016b94         db  0x0e ; '.'
0000000000016b95         db  0x20 ; ' '
0000000000016b96         db  0x42 ; 'B'
0000000000016b97         db  0x0e ; '.'
0000000000016b98         db  0x18 ; '.'
0000000000016b99         db  0x42 ; 'B'
0000000000016b9a         db  0x0e ; '.'
0000000000016b9b         db  0x10 ; '.'
0000000000016b9c         db  0x42 ; 'B'
0000000000016b9d         db  0x0e ; '.'
0000000000016b9e         db  0x08 ; '.'
0000000000016b9f         db  0x48 ; 'H'
0000000000016ba0         db  0x0b ; '.'
0000000000016ba1         db  0x00 ; '.'
0000000000016ba2         db  0x00 ; '.'
0000000000016ba3         db  0x00 ; '.'
0000000000016ba4         db  0x00 ; '.'
0000000000016ba5         db  0x00 ; '.'
0000000000016ba6         db  0x00 ; '.'
0000000000016ba7         db  0x00 ; '.'
0000000000016ba8         dd         0x00000010                                  ; Length of the record
0000000000016bac         dd         0x000007ac                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016bb0         db         0x80, 0x36, 2 dup (0xff)                    ; begin 0xa230
0000000000016bb4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0xa248)
0000000000016bb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016bb9         align      4
0000000000016bbc         dd         0x00000028                                  ; Length of the record
0000000000016bc0         dd         0x000007c0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016bc4         db         0x8c, 0x36, 2 dup (0xff)                    ; begin 0xa250
0000000000016bc8         db         0x58, 3 dup (0x00)                          ; length 0x58 (end at 0xa2a8)
0000000000016bcc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016bcd         db  0x42 ; 'B'
0000000000016bce         db  0x0e ; '.'
0000000000016bcf         db  0x10 ; '.'
0000000000016bd0         db  0x8c ; '.'
0000000000016bd1         db  0x02 ; '.'
0000000000016bd2         db  0x41 ; 'A'
0000000000016bd3         db  0x0e ; '.'
0000000000016bd4         db  0x18 ; '.'
0000000000016bd5         db  0x86 ; '.'
0000000000016bd6         db  0x03 ; '.'
0000000000016bd7         db  0x44 ; 'D'
0000000000016bd8         db  0x0e ; '.'
0000000000016bd9         db  0x20 ; ' '
0000000000016bda         db  0x83 ; '.'
0000000000016bdb         db  0x04 ; '.'
0000000000016bdc         db  0x02 ; '.'
0000000000016bdd         db  0x4d ; 'M'
0000000000016bde         db  0x0e ; '.'
0000000000016bdf         db  0x18 ; '.'
0000000000016be0         db  0x41 ; 'A'
0000000000016be1         db  0x0e ; '.'
0000000000016be2         db  0x10 ; '.'
0000000000016be3         db  0x42 ; 'B'
0000000000016be4         db  0x0e ; '.'
0000000000016be5         db  0x08 ; '.'
0000000000016be6         db  0x00 ; '.'
0000000000016be7         db  0x00 ; '.'
0000000000016be8         dd         0x00000010                                  ; Length of the record
0000000000016bec         dd         0x000007ec                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016bf0         db         0xc0, 0x36, 2 dup (0xff)                    ; begin 0xa2b0
0000000000016bf4         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0xa2c1)
0000000000016bf8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016bf9         align      4
0000000000016bfc         dd         0x00000048                                  ; Length of the record
0000000000016c00         dd         0x00000800                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016c04         db         0xcc, 0x36, 2 dup (0xff)                    ; begin 0xa2d0
0000000000016c08         db         0x61, 0x01, 2 dup (0x00)                    ; length 0x161 (end at 0xa431)
0000000000016c0c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016c0d         db  0x42 ; 'B'
0000000000016c0e         db  0x0e ; '.'
0000000000016c0f         db  0x10 ; '.'
0000000000016c10         db  0x8f ; '.'
0000000000016c11         db  0x02 ; '.'
0000000000016c12         db  0x42 ; 'B'
0000000000016c13         db  0x0e ; '.'
0000000000016c14         db  0x18 ; '.'
0000000000016c15         db  0x8e ; '.'
0000000000016c16         db  0x03 ; '.'
0000000000016c17         db  0x45 ; 'E'
0000000000016c18         db  0x0e ; '.'
0000000000016c19         db  0x20 ; ' '
0000000000016c1a         db  0x8d ; '.'
0000000000016c1b         db  0x04 ; '.'
0000000000016c1c         db  0x42 ; 'B'
0000000000016c1d         db  0x0e ; '.'
0000000000016c1e         db  0x28 ; '('
0000000000016c1f         db  0x8c ; '.'
0000000000016c20         db  0x05 ; '.'
0000000000016c21         db  0x44 ; 'D'
0000000000016c22         db  0x0e ; '.'
0000000000016c23         db  0x30 ; '0'
0000000000016c24         db  0x86 ; '.'
0000000000016c25         db  0x06 ; '.'
0000000000016c26         db  0x41 ; 'A'
0000000000016c27         db  0x0e ; '.'
0000000000016c28         db  0x38 ; '8'
0000000000016c29         db  0x83 ; '.'
0000000000016c2a         db  0x07 ; '.'
0000000000016c2b         db  0x4f ; 'O'
0000000000016c2c         db  0x0e ; '.'
0000000000016c2d         db  0x80 ; '.'
0000000000016c2e         db  0x03 ; '.'
0000000000016c2f         db  0x02 ; '.'
0000000000016c30         db  0xc1 ; '.'
0000000000016c31         db  0x0a ; '.'
0000000000016c32         db  0x0e ; '.'
0000000000016c33         db  0x38 ; '8'
0000000000016c34         db  0x41 ; 'A'
0000000000016c35         db  0x0e ; '.'
0000000000016c36         db  0x30 ; '0'
0000000000016c37         db  0x41 ; 'A'
0000000000016c38         db  0x0e ; '.'
0000000000016c39         db  0x28 ; '('
0000000000016c3a         db  0x42 ; 'B'
0000000000016c3b         db  0x0e ; '.'
0000000000016c3c         db  0x20 ; ' '
0000000000016c3d         db  0x42 ; 'B'
0000000000016c3e         db  0x0e ; '.'
0000000000016c3f         db  0x18 ; '.'
0000000000016c40         db  0x42 ; 'B'
0000000000016c41         db  0x0e ; '.'
0000000000016c42         db  0x10 ; '.'
0000000000016c43         db  0x42 ; 'B'
0000000000016c44         db  0x0e ; '.'
0000000000016c45         db  0x08 ; '.'
0000000000016c46         db  0x46 ; 'F'
0000000000016c47         db  0x0b ; '.'
0000000000016c48         dd         0x00000044                                  ; Length of the record
0000000000016c4c         dd         0x0000084c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016c50         db         0xf0, 0x37, 2 dup (0xff)                    ; begin 0xa440
0000000000016c54         db         0x52, 0x01, 2 dup (0x00)                    ; length 0x152 (end at 0xa592)
0000000000016c58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016c59         db  0x42 ; 'B'
0000000000016c5a         db  0x0e ; '.'
0000000000016c5b         db  0x10 ; '.'
0000000000016c5c         db  0x8e ; '.'
0000000000016c5d         db  0x02 ; '.'
0000000000016c5e         db  0x42 ; 'B'
0000000000016c5f         db  0x0e ; '.'
0000000000016c60         db  0x18 ; '.'
0000000000016c61         db  0x8d ; '.'
0000000000016c62         db  0x03 ; '.'
0000000000016c63         db  0x42 ; 'B'
0000000000016c64         db  0x0e ; '.'
0000000000016c65         db  0x20 ; ' '
0000000000016c66         db  0x8c ; '.'
0000000000016c67         db  0x04 ; '.'
0000000000016c68         db  0x41 ; 'A'
0000000000016c69         db  0x0e ; '.'
0000000000016c6a         db  0x28 ; '('
0000000000016c6b         db  0x86 ; '.'
0000000000016c6c         db  0x05 ; '.'
0000000000016c6d         db  0x44 ; 'D'
0000000000016c6e         db  0x0e ; '.'
0000000000016c6f         db  0x30 ; '0'
0000000000016c70         db  0x83 ; '.'
0000000000016c71         db  0x06 ; '.'
0000000000016c72         db  0x4c ; 'L'
0000000000016c73         db  0x0e ; '.'
0000000000016c74         db  0xe0 ; '.'
0000000000016c75         db  0x02 ; '.'
0000000000016c76         db  0x02 ; '.'
0000000000016c77         db  0xb2 ; '.'
0000000000016c78         db  0x0a ; '.'
0000000000016c79         db  0x0e ; '.'
0000000000016c7a         db  0x30 ; '0'
0000000000016c7b         db  0x41 ; 'A'
0000000000016c7c         db  0x0e ; '.'
0000000000016c7d         db  0x28 ; '('
0000000000016c7e         db  0x41 ; 'A'
0000000000016c7f         db  0x0e ; '.'
0000000000016c80         db  0x20 ; ' '
0000000000016c81         db  0x42 ; 'B'
0000000000016c82         db  0x0e ; '.'
0000000000016c83         db  0x18 ; '.'
0000000000016c84         db  0x42 ; 'B'
0000000000016c85         db  0x0e ; '.'
0000000000016c86         db  0x10 ; '.'
0000000000016c87         db  0x42 ; 'B'
0000000000016c88         db  0x0e ; '.'
0000000000016c89         db  0x08 ; '.'
0000000000016c8a         db  0x47 ; 'G'
0000000000016c8b         db  0x0b ; '.'
0000000000016c8c         db  0x00 ; '.'
0000000000016c8d         db  0x00 ; '.'
0000000000016c8e         db  0x00 ; '.'
0000000000016c8f         db  0x00 ; '.'
0000000000016c90         dd         0x00000034                                  ; Length of the record
0000000000016c94         dd         0x00000894                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016c98         db         0x08, 0x39, 2 dup (0xff)                    ; begin 0xa5a0
0000000000016c9c         db         0x8c, 3 dup (0x00)                          ; length 0x8c (end at 0xa62c)
0000000000016ca0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016ca1         db  0x42 ; 'B'
0000000000016ca2         db  0x0e ; '.'
0000000000016ca3         db  0x10 ; '.'
0000000000016ca4         db  0x8c ; '.'
0000000000016ca5         db  0x02 ; '.'
0000000000016ca6         db  0x41 ; 'A'
0000000000016ca7         db  0x0e ; '.'
0000000000016ca8         db  0x18 ; '.'
0000000000016ca9         db  0x86 ; '.'
0000000000016caa         db  0x03 ; '.'
0000000000016cab         db  0x44 ; 'D'
0000000000016cac         db  0x0e ; '.'
0000000000016cad         db  0x20 ; ' '
0000000000016cae         db  0x83 ; '.'
0000000000016caf         db  0x04 ; '.'
0000000000016cb0         db  0x02 ; '.'
0000000000016cb1         db  0x4e ; 'N'
0000000000016cb2         db  0x0a ; '.'
0000000000016cb3         db  0x0e ; '.'
0000000000016cb4         db  0x18 ; '.'
0000000000016cb5         db  0x41 ; 'A'
0000000000016cb6         db  0x0e ; '.'
0000000000016cb7         db  0x10 ; '.'
0000000000016cb8         db  0x42 ; 'B'
0000000000016cb9         db  0x0e ; '.'
0000000000016cba         db  0x08 ; '.'
0000000000016cbb         db  0x48 ; 'H'
0000000000016cbc         db  0x0b ; '.'
0000000000016cbd         db  0x68 ; 'h'
0000000000016cbe         db  0x0e ; '.'
0000000000016cbf         db  0x18 ; '.'
0000000000016cc0         db  0x41 ; 'A'
0000000000016cc1         db  0x0e ; '.'
0000000000016cc2         db  0x10 ; '.'
0000000000016cc3         db  0x42 ; 'B'
0000000000016cc4         db  0x0e ; '.'
0000000000016cc5         db  0x08 ; '.'
0000000000016cc6         db  0x00 ; '.'
0000000000016cc7         db  0x00 ; '.'
0000000000016cc8         dd         0x0000002c                                  ; Length of the record
0000000000016ccc         dd         0x000008cc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016cd0         db         0x60, 0x39, 2 dup (0xff)                    ; begin 0xa630
0000000000016cd4         db         0x50, 3 dup (0x00)                          ; length 0x50 (end at 0xa680)
0000000000016cd8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016cd9         db  0x42 ; 'B'
0000000000016cda         db  0x0e ; '.'
0000000000016cdb         db  0x10 ; '.'
0000000000016cdc         db  0x8c ; '.'
0000000000016cdd         db  0x02 ; '.'
0000000000016cde         db  0x41 ; 'A'
0000000000016cdf         db  0x0e ; '.'
0000000000016ce0         db  0x18 ; '.'
0000000000016ce1         db  0x86 ; '.'
0000000000016ce2         db  0x03 ; '.'
0000000000016ce3         db  0x44 ; 'D'
0000000000016ce4         db  0x0e ; '.'
0000000000016ce5         db  0x20 ; ' '
0000000000016ce6         db  0x83 ; '.'
0000000000016ce7         db  0x04 ; '.'
0000000000016ce8         db  0x02 ; '.'
0000000000016ce9         db  0x45 ; 'E'
0000000000016cea         db  0x0e ; '.'
0000000000016ceb         db  0x18 ; '.'
0000000000016cec         db  0x41 ; 'A'
0000000000016ced         db  0x0e ; '.'
0000000000016cee         db  0x10 ; '.'
0000000000016cef         db  0x42 ; 'B'
0000000000016cf0         db  0x0e ; '.'
0000000000016cf1         db  0x08 ; '.'
0000000000016cf2         db  0x00 ; '.'
0000000000016cf3         db  0x00 ; '.'
0000000000016cf4         db  0x00 ; '.'
0000000000016cf5         db  0x00 ; '.'
0000000000016cf6         db  0x00 ; '.'
0000000000016cf7         db  0x00 ; '.'
0000000000016cf8         dd         0x0000004c                                  ; Length of the record
0000000000016cfc         dd         0x000008fc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016d00         db         0x80, 0x39, 2 dup (0xff)                    ; begin 0xa680
0000000000016d04         db         0xef, 3 dup (0x00)                          ; length 0xef (end at 0xa76f)
0000000000016d08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016d09         db  0x42 ; 'B'
0000000000016d0a         db  0x0e ; '.'
0000000000016d0b         db  0x10 ; '.'
0000000000016d0c         db  0x8f ; '.'
0000000000016d0d         db  0x02 ; '.'
0000000000016d0e         db  0x42 ; 'B'
0000000000016d0f         db  0x0e ; '.'
0000000000016d10         db  0x18 ; '.'
0000000000016d11         db  0x8e ; '.'
0000000000016d12         db  0x03 ; '.'
0000000000016d13         db  0x47 ; 'G'
0000000000016d14         db  0x0e ; '.'
0000000000016d15         db  0x20 ; ' '
0000000000016d16         db  0x8d ; '.'
0000000000016d17         db  0x04 ; '.'
0000000000016d18         db  0x42 ; 'B'
0000000000016d19         db  0x0e ; '.'
0000000000016d1a         db  0x28 ; '('
0000000000016d1b         db  0x8c ; '.'
0000000000016d1c         db  0x05 ; '.'
0000000000016d1d         db  0x44 ; 'D'
0000000000016d1e         db  0x0e ; '.'
0000000000016d1f         db  0x30 ; '0'
0000000000016d20         db  0x86 ; '.'
0000000000016d21         db  0x06 ; '.'
0000000000016d22         db  0x41 ; 'A'
0000000000016d23         db  0x0e ; '.'
0000000000016d24         db  0x38 ; '8'
0000000000016d25         db  0x83 ; '.'
0000000000016d26         db  0x07 ; '.'
0000000000016d27         db  0x5c ; '\'
0000000000016d28         db  0x0e ; '.'
0000000000016d29         db  0x40 ; '@'
0000000000016d2a         db  0x02 ; '.'
0000000000016d2b         db  0x61 ; 'a'
0000000000016d2c         db  0x0a ; '.'
0000000000016d2d         db  0x0e ; '.'
0000000000016d2e         db  0x38 ; '8'
0000000000016d2f         db  0x44 ; 'D'
0000000000016d30         db  0x0e ; '.'
0000000000016d31         db  0x30 ; '0'
0000000000016d32         db  0x41 ; 'A'
0000000000016d33         db  0x0e ; '.'
0000000000016d34         db  0x28 ; '('
0000000000016d35         db  0x42 ; 'B'
0000000000016d36         db  0x0e ; '.'
0000000000016d37         db  0x20 ; ' '
0000000000016d38         db  0x42 ; 'B'
0000000000016d39         db  0x0e ; '.'
0000000000016d3a         db  0x18 ; '.'
0000000000016d3b         db  0x42 ; 'B'
0000000000016d3c         db  0x0e ; '.'
0000000000016d3d         db  0x10 ; '.'
0000000000016d3e         db  0x42 ; 'B'
0000000000016d3f         db  0x0e ; '.'
0000000000016d40         db  0x08 ; '.'
0000000000016d41         db  0x44 ; 'D'
0000000000016d42         db  0x0b ; '.'
0000000000016d43         db  0x00 ; '.'
0000000000016d44         db  0x00 ; '.'
0000000000016d45         db  0x00 ; '.'
0000000000016d46         db  0x00 ; '.'
0000000000016d47         db  0x00 ; '.'
0000000000016d48         dd         0x00000010                                  ; Length of the record
0000000000016d4c         dd         0x0000094c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016d50         db         0x20, 0x3a, 2 dup (0xff)                    ; begin 0xa770
0000000000016d54         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0xa77a)
0000000000016d58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016d59         align      4
0000000000016d5c         dd         0x00000048                                  ; Length of the record
0000000000016d60         dd         0x00000960                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016d64         db         0x1c, 0x3a, 2 dup (0xff)                    ; begin 0xa780
0000000000016d68         db         0x16, 0x01, 2 dup (0x00)                    ; length 0x116 (end at 0xa896)
0000000000016d6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016d6d         db  0x42 ; 'B'
0000000000016d6e         db  0x0e ; '.'
0000000000016d6f         db  0x10 ; '.'
0000000000016d70         db  0x8f ; '.'
0000000000016d71         db  0x02 ; '.'
0000000000016d72         db  0x42 ; 'B'
0000000000016d73         db  0x0e ; '.'
0000000000016d74         db  0x18 ; '.'
0000000000016d75         db  0x8e ; '.'
0000000000016d76         db  0x03 ; '.'
0000000000016d77         db  0x45 ; 'E'
0000000000016d78         db  0x0e ; '.'
0000000000016d79         db  0x20 ; ' '
0000000000016d7a         db  0x8d ; '.'
0000000000016d7b         db  0x04 ; '.'
0000000000016d7c         db  0x42 ; 'B'
0000000000016d7d         db  0x0e ; '.'
0000000000016d7e         db  0x28 ; '('
0000000000016d7f         db  0x8c ; '.'
0000000000016d80         db  0x05 ; '.'
0000000000016d81         db  0x44 ; 'D'
0000000000016d82         db  0x0e ; '.'
0000000000016d83         db  0x30 ; '0'
0000000000016d84         db  0x86 ; '.'
0000000000016d85         db  0x06 ; '.'
0000000000016d86         db  0x41 ; 'A'
0000000000016d87         db  0x0e ; '.'
0000000000016d88         db  0x38 ; '8'
0000000000016d89         db  0x83 ; '.'
0000000000016d8a         db  0x07 ; '.'
0000000000016d8b         db  0x47 ; 'G'
0000000000016d8c         db  0x0e ; '.'
0000000000016d8d         db  0x60 ; '`'
0000000000016d8e         db  0x02 ; '.'
0000000000016d8f         db  0xde ; '.'
0000000000016d90         db  0x0a ; '.'
0000000000016d91         db  0x0e ; '.'
0000000000016d92         db  0x38 ; '8'
0000000000016d93         db  0x41 ; 'A'
0000000000016d94         db  0x0e ; '.'
0000000000016d95         db  0x30 ; '0'
0000000000016d96         db  0x41 ; 'A'
0000000000016d97         db  0x0e ; '.'
0000000000016d98         db  0x28 ; '('
0000000000016d99         db  0x42 ; 'B'
0000000000016d9a         db  0x0e ; '.'
0000000000016d9b         db  0x20 ; ' '
0000000000016d9c         db  0x42 ; 'B'
0000000000016d9d         db  0x0e ; '.'
0000000000016d9e         db  0x18 ; '.'
0000000000016d9f         db  0x42 ; 'B'
0000000000016da0         db  0x0e ; '.'
0000000000016da1         db  0x10 ; '.'
0000000000016da2         db  0x42 ; 'B'
0000000000016da3         db  0x0e ; '.'
0000000000016da4         db  0x08 ; '.'
0000000000016da5         db  0x41 ; 'A'
0000000000016da6         db  0x0b ; '.'
0000000000016da7         db  0x00 ; '.'
0000000000016da8         dd         0x00000028                                  ; Length of the record
0000000000016dac         dd         0x000009ac                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016db0         db         0xf0, 0x3a, 2 dup (0xff)                    ; begin 0xa8a0
0000000000016db4         db         0x73, 3 dup (0x00)                          ; length 0x73 (end at 0xa913)
0000000000016db8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016db9         db  0x46 ; 'F'
0000000000016dba         db  0x0e ; '.'
0000000000016dbb         db  0x10 ; '.'
0000000000016dbc         db  0x8c ; '.'
0000000000016dbd         db  0x02 ; '.'
0000000000016dbe         db  0x46 ; 'F'
0000000000016dbf         db  0x0e ; '.'
0000000000016dc0         db  0x18 ; '.'
0000000000016dc1         db  0x86 ; '.'
0000000000016dc2         db  0x03 ; '.'
0000000000016dc3         db  0x44 ; 'D'
0000000000016dc4         db  0x0e ; '.'
0000000000016dc5         db  0x20 ; ' '
0000000000016dc6         db  0x83 ; '.'
0000000000016dc7         db  0x04 ; '.'
0000000000016dc8         db  0x7f ; '.'
0000000000016dc9         db  0x0a ; '.'
0000000000016dca         db  0x0e ; '.'
0000000000016dcb         db  0x18 ; '.'
0000000000016dcc         db  0x41 ; 'A'
0000000000016dcd         db  0x0e ; '.'
0000000000016dce         db  0x10 ; '.'
0000000000016dcf         db  0x42 ; 'B'
0000000000016dd0         db  0x0e ; '.'
0000000000016dd1         db  0x08 ; '.'
0000000000016dd2         db  0x4e ; 'N'
0000000000016dd3         db  0x0b ; '.'
0000000000016dd4         dd         0x0000005c                                  ; Length of the record
0000000000016dd8         dd         0x000009d8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016ddc         db         0x44, 0x3b, 2 dup (0xff)                    ; begin 0xa920
0000000000016de0         db         0x20, 0x01, 2 dup (0x00)                    ; length 0x120 (end at 0xaa40)
0000000000016de4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016de5         db  0x42 ; 'B'
0000000000016de6         db  0x0e ; '.'
0000000000016de7         db  0x10 ; '.'
0000000000016de8         db  0x8f ; '.'
0000000000016de9         db  0x02 ; '.'
0000000000016dea         db  0x42 ; 'B'
0000000000016deb         db  0x0e ; '.'
0000000000016dec         db  0x18 ; '.'
0000000000016ded         db  0x8e ; '.'
0000000000016dee         db  0x03 ; '.'
0000000000016def         db  0x45 ; 'E'
0000000000016df0         db  0x0e ; '.'
0000000000016df1         db  0x20 ; ' '
0000000000016df2         db  0x8d ; '.'
0000000000016df3         db  0x04 ; '.'
0000000000016df4         db  0x42 ; 'B'
0000000000016df5         db  0x0e ; '.'
0000000000016df6         db  0x28 ; '('
0000000000016df7         db  0x8c ; '.'
0000000000016df8         db  0x05 ; '.'
0000000000016df9         db  0x43 ; 'C'
0000000000016dfa         db  0x0e ; '.'
0000000000016dfb         db  0x30 ; '0'
0000000000016dfc         db  0x86 ; '.'
0000000000016dfd         db  0x06 ; '.'
0000000000016dfe         db  0x41 ; 'A'
0000000000016dff         db  0x0e ; '.'
0000000000016e00         db  0x38 ; '8'
0000000000016e01         db  0x83 ; '.'
0000000000016e02         db  0x07 ; '.'
0000000000016e03         db  0x56 ; 'V'
0000000000016e04         db  0x0e ; '.'
0000000000016e05         db  0x40 ; '@'
0000000000016e06         db  0x02 ; '.'
0000000000016e07         db  0xd3 ; '.'
0000000000016e08         db  0x0a ; '.'
0000000000016e09         db  0x0e ; '.'
0000000000016e0a         db  0x38 ; '8'
0000000000016e0b         db  0x41 ; 'A'
0000000000016e0c         db  0x0e ; '.'
0000000000016e0d         db  0x30 ; '0'
0000000000016e0e         db  0x41 ; 'A'
0000000000016e0f         db  0x0e ; '.'
0000000000016e10         db  0x28 ; '('
0000000000016e11         db  0x42 ; 'B'
0000000000016e12         db  0x0e ; '.'
0000000000016e13         db  0x20 ; ' '
0000000000016e14         db  0x42 ; 'B'
0000000000016e15         db  0x0e ; '.'
0000000000016e16         db  0x18 ; '.'
0000000000016e17         db  0x42 ; 'B'
0000000000016e18         db  0x0e ; '.'
0000000000016e19         db  0x10 ; '.'
0000000000016e1a         db  0x42 ; 'B'
0000000000016e1b         db  0x0e ; '.'
0000000000016e1c         db  0x08 ; '.'
0000000000016e1d         db  0x46 ; 'F'
0000000000016e1e         db  0x0b ; '.'
0000000000016e1f         db  0x44 ; 'D'
0000000000016e20         db  0x0e ; '.'
0000000000016e21         db  0x38 ; '8'
0000000000016e22         db  0x46 ; 'F'
0000000000016e23         db  0x0e ; '.'
0000000000016e24         db  0x30 ; '0'
0000000000016e25         db  0x41 ; 'A'
0000000000016e26         db  0x0e ; '.'
0000000000016e27         db  0x28 ; '('
0000000000016e28         db  0x42 ; 'B'
0000000000016e29         db  0x0e ; '.'
0000000000016e2a         db  0x20 ; ' '
0000000000016e2b         db  0x42 ; 'B'
0000000000016e2c         db  0x0e ; '.'
0000000000016e2d         db  0x18 ; '.'
0000000000016e2e         db  0x42 ; 'B'
0000000000016e2f         db  0x0e ; '.'
0000000000016e30         db  0x10 ; '.'
0000000000016e31         db  0x42 ; 'B'
0000000000016e32         db  0x0e ; '.'
0000000000016e33         db  0x08 ; '.'
0000000000016e34         dd         0x00000048                                  ; Length of the record
0000000000016e38         dd         0x00000a38                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016e3c         db         0x04, 0x3c, 2 dup (0xff)                    ; begin 0xaa40
0000000000016e40         db         0x6d, 3 dup (0x00)                          ; length 0x6d (end at 0xaaad)
0000000000016e44         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016e45         db  0x42 ; 'B'
0000000000016e46         db  0x0e ; '.'
0000000000016e47         db  0x10 ; '.'
0000000000016e48         db  0x8f ; '.'
0000000000016e49         db  0x02 ; '.'
0000000000016e4a         db  0x42 ; 'B'
0000000000016e4b         db  0x0e ; '.'
0000000000016e4c         db  0x18 ; '.'
0000000000016e4d         db  0x8e ; '.'
0000000000016e4e         db  0x03 ; '.'
0000000000016e4f         db  0x45 ; 'E'
0000000000016e50         db  0x0e ; '.'
0000000000016e51         db  0x20 ; ' '
0000000000016e52         db  0x8d ; '.'
0000000000016e53         db  0x04 ; '.'
0000000000016e54         db  0x42 ; 'B'
0000000000016e55         db  0x0e ; '.'
0000000000016e56         db  0x28 ; '('
0000000000016e57         db  0x8c ; '.'
0000000000016e58         db  0x05 ; '.'
0000000000016e59         db  0x44 ; 'D'
0000000000016e5a         db  0x0e ; '.'
0000000000016e5b         db  0x30 ; '0'
0000000000016e5c         db  0x86 ; '.'
0000000000016e5d         db  0x06 ; '.'
0000000000016e5e         db  0x41 ; 'A'
0000000000016e5f         db  0x0e ; '.'
0000000000016e60         db  0x38 ; '8'
0000000000016e61         db  0x83 ; '.'
0000000000016e62         db  0x07 ; '.'
0000000000016e63         db  0x50 ; 'P'
0000000000016e64         db  0x0e ; '.'
0000000000016e65         db  0x40 ; '@'
0000000000016e66         db  0x5a ; 'Z'
0000000000016e67         db  0x0a ; '.'
0000000000016e68         db  0x0e ; '.'
0000000000016e69         db  0x38 ; '8'
0000000000016e6a         db  0x41 ; 'A'
0000000000016e6b         db  0x0e ; '.'
0000000000016e6c         db  0x30 ; '0'
0000000000016e6d         db  0x41 ; 'A'
0000000000016e6e         db  0x0e ; '.'
0000000000016e6f         db  0x28 ; '('
0000000000016e70         db  0x42 ; 'B'
0000000000016e71         db  0x0e ; '.'
0000000000016e72         db  0x20 ; ' '
0000000000016e73         db  0x42 ; 'B'
0000000000016e74         db  0x0e ; '.'
0000000000016e75         db  0x18 ; '.'
0000000000016e76         db  0x42 ; 'B'
0000000000016e77         db  0x0e ; '.'
0000000000016e78         db  0x10 ; '.'
0000000000016e79         db  0x42 ; 'B'
0000000000016e7a         db  0x0e ; '.'
0000000000016e7b         db  0x08 ; '.'
0000000000016e7c         db  0x41 ; 'A'
0000000000016e7d         db  0x0b ; '.'
0000000000016e7e         db  0x00 ; '.'
0000000000016e7f         db  0x00 ; '.'
0000000000016e80         dd         0x0000003c                                  ; Length of the record
0000000000016e84         dd         0x00000a84                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016e88         db         0x28, 0x3c, 2 dup (0xff)                    ; begin 0xaab0
0000000000016e8c         db         0x4d, 3 dup (0x00)                          ; length 0x4d (end at 0xaafd)
0000000000016e90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016e91         db  0x42 ; 'B'
0000000000016e92         db  0x0e ; '.'
0000000000016e93         db  0x10 ; '.'
0000000000016e94         db  0x8e ; '.'
0000000000016e95         db  0x02 ; '.'
0000000000016e96         db  0x42 ; 'B'
0000000000016e97         db  0x0e ; '.'
0000000000016e98         db  0x18 ; '.'
0000000000016e99         db  0x8d ; '.'
0000000000016e9a         db  0x03 ; '.'
0000000000016e9b         db  0x42 ; 'B'
0000000000016e9c         db  0x0e ; '.'
0000000000016e9d         db  0x20 ; ' '
0000000000016e9e         db  0x8c ; '.'
0000000000016e9f         db  0x04 ; '.'
0000000000016ea0         db  0x41 ; 'A'
0000000000016ea1         db  0x0e ; '.'
0000000000016ea2         db  0x28 ; '('
0000000000016ea3         db  0x86 ; '.'
0000000000016ea4         db  0x05 ; '.'
0000000000016ea5         db  0x41 ; 'A'
0000000000016ea6         db  0x0e ; '.'
0000000000016ea7         db  0x30 ; '0'
0000000000016ea8         db  0x83 ; '.'
0000000000016ea9         db  0x06 ; '.'
0000000000016eaa         db  0x7a ; 'z'
0000000000016eab         db  0x0e ; '.'
0000000000016eac         db  0x28 ; '('
0000000000016ead         db  0x44 ; 'D'
0000000000016eae         db  0x0e ; '.'
0000000000016eaf         db  0x20 ; ' '
0000000000016eb0         db  0x42 ; 'B'
0000000000016eb1         db  0x0e ; '.'
0000000000016eb2         db  0x18 ; '.'
0000000000016eb3         db  0x42 ; 'B'
0000000000016eb4         db  0x0e ; '.'
0000000000016eb5         db  0x10 ; '.'
0000000000016eb6         db  0x42 ; 'B'
0000000000016eb7         db  0x0e ; '.'
0000000000016eb8         db  0x08 ; '.'
0000000000016eb9         db  0x00 ; '.'
0000000000016eba         db  0x00 ; '.'
0000000000016ebb         db  0x00 ; '.'
0000000000016ebc         db  0x00 ; '.'
0000000000016ebd         db  0x00 ; '.'
0000000000016ebe         db  0x00 ; '.'
0000000000016ebf         db  0x00 ; '.'
0000000000016ec0         dd         0x00000018                                  ; Length of the record
0000000000016ec4         dd         0x00000ac4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016ec8         db         0x38, 0x3c, 2 dup (0xff)                    ; begin 0xab00
0000000000016ecc         db         0x46, 3 dup (0x00)                          ; length 0x46 (end at 0xab46)
0000000000016ed0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016ed1         db  0x44 ; 'D'
0000000000016ed2         db  0x0e ; '.'
0000000000016ed3         db  0x10 ; '.'
0000000000016ed4         db  0x83 ; '.'
0000000000016ed5         db  0x02 ; '.'
0000000000016ed6         db  0x59 ; 'Y'
0000000000016ed7         db  0x0a ; '.'
0000000000016ed8         db  0x0e ; '.'
0000000000016ed9         db  0x08 ; '.'
0000000000016eda         db  0x43 ; 'C'
0000000000016edb         db  0x0b ; '.'
0000000000016edc         dd         0x00000050                                  ; Length of the record
0000000000016ee0         dd         0x00000ae0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016ee4         db         0x6c, 0x3c, 2 dup (0xff)                    ; begin 0xab50
0000000000016ee8         db         0x12, 0x06, 2 dup (0x00)                    ; length 0x612 (end at 0xb162)
0000000000016eec         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016eed         db  0x42 ; 'B'
0000000000016eee         db  0x0e ; '.'
0000000000016eef         db  0x10 ; '.'
0000000000016ef0         db  0x8f ; '.'
0000000000016ef1         db  0x02 ; '.'
0000000000016ef2         db  0x42 ; 'B'
0000000000016ef3         db  0x0e ; '.'
0000000000016ef4         db  0x18 ; '.'
0000000000016ef5         db  0x8e ; '.'
0000000000016ef6         db  0x03 ; '.'
0000000000016ef7         db  0x42 ; 'B'
0000000000016ef8         db  0x0e ; '.'
0000000000016ef9         db  0x20 ; ' '
0000000000016efa         db  0x8d ; '.'
0000000000016efb         db  0x04 ; '.'
0000000000016efc         db  0x42 ; 'B'
0000000000016efd         db  0x0e ; '.'
0000000000016efe         db  0x28 ; '('
0000000000016eff         db  0x8c ; '.'
0000000000016f00         db  0x05 ; '.'
0000000000016f01         db  0x41 ; 'A'
0000000000016f02         db  0x0e ; '.'
0000000000016f03         db  0x30 ; '0'
0000000000016f04         db  0x86 ; '.'
0000000000016f05         db  0x06 ; '.'
0000000000016f06         db  0x41 ; 'A'
0000000000016f07         db  0x0e ; '.'
0000000000016f08         db  0x38 ; '8'
0000000000016f09         db  0x83 ; '.'
0000000000016f0a         db  0x07 ; '.'
0000000000016f0b         db  0x4a ; 'J'
0000000000016f0c         db  0x0e ; '.'
0000000000016f0d         db  0xc0 ; '.'
0000000000016f0e         db  0x01 ; '.'
0000000000016f0f         db  0x03 ; '.'
0000000000016f10         db  0x9a ; '.'
0000000000016f11         db  0x03 ; '.'
0000000000016f12         db  0x0a ; '.'
0000000000016f13         db  0x0e ; '.'
0000000000016f14         db  0x38 ; '8'
0000000000016f15         db  0x41 ; 'A'
0000000000016f16         db  0x0e ; '.'
0000000000016f17         db  0x30 ; '0'
0000000000016f18         db  0x41 ; 'A'
0000000000016f19         db  0x0e ; '.'
0000000000016f1a         db  0x28 ; '('
0000000000016f1b         db  0x42 ; 'B'
0000000000016f1c         db  0x0e ; '.'
0000000000016f1d         db  0x20 ; ' '
0000000000016f1e         db  0x42 ; 'B'
0000000000016f1f         db  0x0e ; '.'
0000000000016f20         db  0x18 ; '.'
0000000000016f21         db  0x42 ; 'B'
0000000000016f22         db  0x0e ; '.'
0000000000016f23         db  0x10 ; '.'
0000000000016f24         db  0x42 ; 'B'
0000000000016f25         db  0x0e ; '.'
0000000000016f26         db  0x08 ; '.'
0000000000016f27         db  0x48 ; 'H'
0000000000016f28         db  0x0b ; '.'
0000000000016f29         db  0x00 ; '.'
0000000000016f2a         db  0x00 ; '.'
0000000000016f2b         db  0x00 ; '.'
0000000000016f2c         db  0x00 ; '.'
0000000000016f2d         db  0x00 ; '.'
0000000000016f2e         db  0x00 ; '.'
0000000000016f2f         db  0x00 ; '.'
0000000000016f30         dd         0x00000014                                  ; Length of the record
0000000000016f34         dd         0x00000b34                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016f38         db         0x38, 0x42, 2 dup (0xff)                    ; begin 0xb170
0000000000016f3c         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0xb17a)
0000000000016f40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016f41         align      8
0000000000016f48         dd         0x00000014                                  ; Length of the record
0000000000016f4c         dd         0x00000b4c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016f50         db         0x30, 0x42, 2 dup (0xff)                    ; begin 0xb180
0000000000016f54         db         0x33, 3 dup (0x00)                          ; length 0x33 (end at 0xb1b3)
0000000000016f58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016f59         db  0x44 ; 'D'
0000000000016f5a         db  0x0e ; '.'
0000000000016f5b         db  0x10 ; '.'
0000000000016f5c         db  0x6e ; 'n'
0000000000016f5d         db  0x0e ; '.'
0000000000016f5e         db  0x08 ; '.'
0000000000016f5f         db  0x00 ; '.'
0000000000016f60         dd         0x00000018                                  ; Length of the record
0000000000016f64         dd         0x00000b64                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016f68         db         0x58, 0x42, 2 dup (0xff)                    ; begin 0xb1c0
0000000000016f6c         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0xb1da)
0000000000016f70         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016f71         db  0x44 ; 'D'
0000000000016f72         db  0x0e ; '.'
0000000000016f73         db  0x10 ; '.'
0000000000016f74         db  0x50 ; 'P'
0000000000016f75         db  0x0a ; '.'
0000000000016f76         db  0x0e ; '.'
0000000000016f77         db  0x08 ; '.'
0000000000016f78         db  0x41 ; 'A'
0000000000016f79         db  0x0b ; '.'
0000000000016f7a         db  0x00 ; '.'
0000000000016f7b         db  0x00 ; '.'
0000000000016f7c         dd         0x00000010                                  ; Length of the record
0000000000016f80         dd         0x00000b80                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016f84         db         0x5c, 0x42, 2 dup (0xff)                    ; begin 0xb1e0
0000000000016f88         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0xb1f6)
0000000000016f8c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016f8d         align      16
0000000000016f90         dd         0x0000001c                                  ; Length of the record
0000000000016f94         dd         0x00000b94                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016f98         db         0x68, 0x42, 2 dup (0xff)                    ; begin 0xb200
0000000000016f9c         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0xb24a)
0000000000016fa0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016fa1         db  0x55 ; 'U'
0000000000016fa2         db  0x0e ; '.'
0000000000016fa3         db  0x10 ; '.'
0000000000016fa4         db  0x5d ; ']'
0000000000016fa5         db  0x0e ; '.'
0000000000016fa6         db  0x08 ; '.'
0000000000016fa7         db  0x4e ; 'N'
0000000000016fa8         db  0x0e ; '.'
0000000000016fa9         db  0x10 ; '.'
0000000000016faa         db  0x49 ; 'I'
0000000000016fab         db  0x0e ; '.'
0000000000016fac         db  0x08 ; '.'
0000000000016fad         db  0x00 ; '.'
0000000000016fae         db  0x00 ; '.'
0000000000016faf         db  0x00 ; '.'
0000000000016fb0         dd         0x00000014                                  ; Length of the record
0000000000016fb4         dd         0x00000bb4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016fb8         db         0x98, 0x42, 2 dup (0xff)                    ; begin 0xb250
0000000000016fbc         db         0x70, 3 dup (0x00)                          ; length 0x70 (end at 0xb2c0)
0000000000016fc0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016fc1         align      8
0000000000016fc8         dd         0x00000010                                  ; Length of the record
0000000000016fcc         dd         0x00000bcc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016fd0         db         0xf0, 0x42, 2 dup (0xff)                    ; begin 0xb2c0
0000000000016fd4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0xb2c8)
0000000000016fd8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016fd9         align      4
0000000000016fdc         dd         0x00000038                                  ; Length of the record
0000000000016fe0         dd         0x00000be0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000016fe4         db         0xec, 0x42, 2 dup (0xff)                    ; begin 0xb2d0
0000000000016fe8         db         0x07, 0x01, 2 dup (0x00)                    ; length 0x107 (end at 0xb3d7)
0000000000016fec         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000016fed         db  0x42 ; 'B'
0000000000016fee         db  0x0e ; '.'
0000000000016fef         db  0x10 ; '.'
0000000000016ff0         db  0x8c ; '.'
0000000000016ff1         db  0x02 ; '.'
0000000000016ff2         db  0x41 ; 'A'
0000000000016ff3         db  0x0e ; '.'
0000000000016ff4         db  0x18 ; '.'
0000000000016ff5         db  0x86 ; '.'
0000000000016ff6         db  0x03 ; '.'
0000000000016ff7         db  0x41 ; 'A'
0000000000016ff8         db  0x0e ; '.'
0000000000016ff9         db  0x20 ; ' '
0000000000016ffa         db  0x83 ; '.'
0000000000016ffb         db  0x04 ; '.'
0000000000016ffc         db  0x65 ; 'e'
0000000000016ffd         db  0x0a ; '.'
0000000000016ffe         db  0x0e ; '.'
0000000000016fff         db  0x18 ; '.'
0000000000017000         db  0x41 ; 'A'
0000000000017001         db  0x0e ; '.'
0000000000017002         db  0x10 ; '.'
0000000000017003         db  0x42 ; 'B'
0000000000017004         db  0x0e ; '.'
0000000000017005         db  0x08 ; '.'
0000000000017006         db  0x4c ; 'L'
0000000000017007         db  0x0b ; '.'
0000000000017008         db  0x02 ; '.'
0000000000017009         db  0xac ; '.'
000000000001700a         db  0x0a ; '.'
000000000001700b         db  0x0e ; '.'
000000000001700c         db  0x18 ; '.'
000000000001700d         db  0x41 ; 'A'
000000000001700e         db  0x0e ; '.'
000000000001700f         db  0x10 ; '.'
0000000000017010         db  0x42 ; 'B'
0000000000017011         db  0x0e ; '.'
0000000000017012         db  0x08 ; '.'
0000000000017013         db  0x49 ; 'I'
0000000000017014         db  0x0b ; '.'
0000000000017015         db  0x00 ; '.'
0000000000017016         db  0x00 ; '.'
0000000000017017         db  0x00 ; '.'
0000000000017018         dd         0x00000010                                  ; Length of the record
000000000001701c         dd         0x00000c1c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017020         db         0xc0, 0x43, 2 dup (0xff)                    ; begin 0xb3e0
0000000000017024         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0xb3e8)
0000000000017028         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017029         align      4
000000000001702c         dd         0x00000010                                  ; Length of the record
0000000000017030         dd         0x00000c30                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017034         db         0xbc, 0x43, 2 dup (0xff)                    ; begin 0xb3f0
0000000000017038         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0xb3f8)
000000000001703c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001703d         align      64
0000000000017040         dd         0x0000002c                                  ; Length of the record
0000000000017044         dd         0x00000c44                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017048         db         0xb8, 0x43, 2 dup (0xff)                    ; begin 0xb400
000000000001704c         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0xb4a4)
0000000000017050         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017051         db  0x41 ; 'A'
0000000000017052         db  0x0e ; '.'
0000000000017053         db  0x10 ; '.'
0000000000017054         db  0x86 ; '.'
0000000000017055         db  0x02 ; '.'
0000000000017056         db  0x41 ; 'A'
0000000000017057         db  0x0e ; '.'
0000000000017058         db  0x18 ; '.'
0000000000017059         db  0x83 ; '.'
000000000001705a         db  0x03 ; '.'
000000000001705b         db  0x44 ; 'D'
000000000001705c         db  0x0e ; '.'
000000000001705d         db  0x20 ; ' '
000000000001705e         db  0x7a ; 'z'
000000000001705f         db  0x0a ; '.'
0000000000017060         db  0x0e ; '.'
0000000000017061         db  0x18 ; '.'
0000000000017062         db  0x41 ; 'A'
0000000000017063         db  0x0e ; '.'
0000000000017064         db  0x10 ; '.'
0000000000017065         db  0x41 ; 'A'
0000000000017066         db  0x0e ; '.'
0000000000017067         db  0x08 ; '.'
0000000000017068         db  0x41 ; 'A'
0000000000017069         db  0x0b ; '.'
000000000001706a         db  0x00 ; '.'
000000000001706b         db  0x00 ; '.'
000000000001706c         db  0x00 ; '.'
000000000001706d         db  0x00 ; '.'
000000000001706e         db  0x00 ; '.'
000000000001706f         db  0x00 ; '.'
0000000000017070         dd         0x0000001c                                  ; Length of the record
0000000000017074         dd         0x00000c74                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017078         db         0x38, 0x44, 2 dup (0xff)                    ; begin 0xb4b0
000000000001707c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0xb4c8)
0000000000017080         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017081         db  0x44 ; 'D'
0000000000017082         db  0x0e ; '.'
0000000000017083         db  0x10 ; '.'
0000000000017084         db  0x4e ; 'N'
0000000000017085         db  0x0a ; '.'
0000000000017086         db  0x0e ; '.'
0000000000017087         db  0x08 ; '.'
0000000000017088         db  0x41 ; 'A'
0000000000017089         db  0x0b ; '.'
000000000001708a         db  0x00 ; '.'
000000000001708b         db  0x00 ; '.'
000000000001708c         db  0x00 ; '.'
000000000001708d         db  0x00 ; '.'
000000000001708e         db  0x00 ; '.'
000000000001708f         db  0x00 ; '.'
0000000000017090         dd         0x00000030                                  ; Length of the record
0000000000017094         dd         0x00000c94                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017098         db         0x38, 0x44, 2 dup (0xff)                    ; begin 0xb4d0
000000000001709c         db         0x5d, 3 dup (0x00)                          ; length 0x5d (end at 0xb52d)
00000000000170a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000170a1         db  0x41 ; 'A'
00000000000170a2         db  0x0e ; '.'
00000000000170a3         db  0x10 ; '.'
00000000000170a4         db  0x86 ; '.'
00000000000170a5         db  0x02 ; '.'
00000000000170a6         db  0x41 ; 'A'
00000000000170a7         db  0x0e ; '.'
00000000000170a8         db  0x18 ; '.'
00000000000170a9         db  0x83 ; '.'
00000000000170aa         db  0x03 ; '.'
00000000000170ab         db  0x49 ; 'I'
00000000000170ac         db  0x0e ; '.'
00000000000170ad         db  0x20 ; ' '
00000000000170ae         db  0x7c ; '|'
00000000000170af         db  0x0a ; '.'
00000000000170b0         db  0x0e ; '.'
00000000000170b1         db  0x18 ; '.'
00000000000170b2         db  0x44 ; 'D'
00000000000170b3         db  0x0e ; '.'
00000000000170b4         db  0x10 ; '.'
00000000000170b5         db  0x41 ; 'A'
00000000000170b6         db  0x0e ; '.'
00000000000170b7         db  0x08 ; '.'
00000000000170b8         db  0x44 ; 'D'
00000000000170b9         db  0x0b ; '.'
00000000000170ba         db  0x44 ; 'D'
00000000000170bb         db  0x0e ; '.'
00000000000170bc         db  0x18 ; '.'
00000000000170bd         db  0x47 ; 'G'
00000000000170be         db  0x0e ; '.'
00000000000170bf         db  0x10 ; '.'
00000000000170c0         db  0x41 ; 'A'
00000000000170c1         db  0x0e ; '.'
00000000000170c2         db  0x08 ; '.'
00000000000170c3         db  0x00 ; '.'
00000000000170c4         dd         0x00000028                                  ; Length of the record
00000000000170c8         dd         0x00000cc8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000170cc         db         0x64, 0x44, 2 dup (0xff)                    ; begin 0xb530
00000000000170d0         db         0x5a, 3 dup (0x00)                          ; length 0x5a (end at 0xb58a)
00000000000170d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000170d5         db  0x41 ; 'A'
00000000000170d6         db  0x0e ; '.'
00000000000170d7         db  0x10 ; '.'
00000000000170d8         db  0x86 ; '.'
00000000000170d9         db  0x02 ; '.'
00000000000170da         db  0x41 ; 'A'
00000000000170db         db  0x0e ; '.'
00000000000170dc         db  0x18 ; '.'
00000000000170dd         db  0x83 ; '.'
00000000000170de         db  0x03 ; '.'
00000000000170df         db  0x47 ; 'G'
00000000000170e0         db  0x0e ; '.'
00000000000170e1         db  0x20 ; ' '
00000000000170e2         db  0x02 ; '.'
00000000000170e3         db  0x41 ; 'A'
00000000000170e4         db  0x0a ; '.'
00000000000170e5         db  0x0e ; '.'
00000000000170e6         db  0x18 ; '.'
00000000000170e7         db  0x44 ; 'D'
00000000000170e8         db  0x0e ; '.'
00000000000170e9         db  0x10 ; '.'
00000000000170ea         db  0x41 ; 'A'
00000000000170eb         db  0x0e ; '.'
00000000000170ec         db  0x08 ; '.'
00000000000170ed         db  0x41 ; 'A'
00000000000170ee         db  0x0b ; '.'
00000000000170ef         db  0x00 ; '.'
00000000000170f0         dd         0x00000010                                  ; Length of the record
00000000000170f4         dd         0x00000cf4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000170f8         db         0x98, 0x44, 2 dup (0xff)                    ; begin 0xb590
00000000000170fc         db         0x5c, 3 dup (0x00)                          ; length 0x5c (end at 0xb5ec)
0000000000017100         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017101         align      4
0000000000017104         dd         0x00000028                                  ; Length of the record
0000000000017108         dd         0x00000d08                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
000000000001710c         db         0xe4, 0x44, 2 dup (0xff)                    ; begin 0xb5f0
0000000000017110         db         0x47, 3 dup (0x00)                          ; length 0x47 (end at 0xb637)
0000000000017114         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017115         db  0x41 ; 'A'
0000000000017116         db  0x0e ; '.'
0000000000017117         db  0x10 ; '.'
0000000000017118         db  0x83 ; '.'
0000000000017119         db  0x02 ; '.'
000000000001711a         db  0x5a ; 'Z'
000000000001711b         db  0x0a ; '.'
000000000001711c         db  0x0e ; '.'
000000000001711d         db  0x08 ; '.'
000000000001711e         db  0x45 ; 'E'
000000000001711f         db  0x0b ; '.'
0000000000017120         db  0x5d ; ']'
0000000000017121         db  0x0a ; '.'
0000000000017122         db  0x0e ; '.'
0000000000017123         db  0x08 ; '.'
0000000000017124         db  0x43 ; 'C'
0000000000017125         db  0x0b ; '.'
0000000000017126         db  0x46 ; 'F'
0000000000017127         db  0x0e ; '.'
0000000000017128         db  0x08 ; '.'
0000000000017129         db  0x00 ; '.'
000000000001712a         db  0x00 ; '.'
000000000001712b         db  0x00 ; '.'
000000000001712c         db  0x00 ; '.'
000000000001712d         db  0x00 ; '.'
000000000001712e         db  0x00 ; '.'
000000000001712f         db  0x00 ; '.'
0000000000017130         dd         0x00000024                                  ; Length of the record
0000000000017134         dd         0x00000d34                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017138         db         0x08, 0x45, 2 dup (0xff)                    ; begin 0xb640
000000000001713c         db         0x33, 3 dup (0x00)                          ; length 0x33 (end at 0xb673)
0000000000017140         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017141         db  0x41 ; 'A'
0000000000017142         db  0x0e ; '.'
0000000000017143         db  0x10 ; '.'
0000000000017144         db  0x86 ; '.'
0000000000017145         db  0x02 ; '.'
0000000000017146         db  0x41 ; 'A'
0000000000017147         db  0x0e ; '.'
0000000000017148         db  0x18 ; '.'
0000000000017149         db  0x83 ; '.'
000000000001714a         db  0x03 ; '.'
000000000001714b         db  0x47 ; 'G'
000000000001714c         db  0x0e ; '.'
000000000001714d         db  0x20 ; ' '
000000000001714e         db  0x67 ; 'g'
000000000001714f         db  0x0e ; '.'
0000000000017150         db  0x18 ; '.'
0000000000017151         db  0x41 ; 'A'
0000000000017152         db  0x0e ; '.'
0000000000017153         db  0x10 ; '.'
0000000000017154         db  0x41 ; 'A'
0000000000017155         db  0x0e ; '.'
0000000000017156         db  0x08 ; '.'
0000000000017157         db  0x00 ; '.'
0000000000017158         dd         0x00000010                                  ; Length of the record
000000000001715c         dd         0x00000d5c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017160         db         0x20, 0x45, 2 dup (0xff)                    ; begin 0xb680
0000000000017164         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0xb685)
0000000000017168         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017169         align      4
000000000001716c         dd         0x00000018                                  ; Length of the record
0000000000017170         dd         0x00000d70                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017174         db         0x1c, 0x45, 2 dup (0xff)                    ; begin 0xb690
0000000000017178         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0xb6b2)
000000000001717c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001717d         db  0x46 ; 'F'
000000000001717e         db  0x0e ; '.'
000000000001717f         db  0x10 ; '.'
0000000000017180         db  0x83 ; '.'
0000000000017181         db  0x02 ; '.'
0000000000017182         db  0x4e ; 'N'
0000000000017183         db  0xc3 ; '.'
0000000000017184         db  0x0e ; '.'
0000000000017185         db  0x08 ; '.'
0000000000017186         db  0x00 ; '.'
0000000000017187         db  0x00 ; '.'
0000000000017188         dd         0x0000001c                                  ; Length of the record
000000000001718c         dd         0x00000d8c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017190         db         0x30, 0x45, 2 dup (0xff)                    ; begin 0xb6c0
0000000000017194         db         0x6e, 3 dup (0x00)                          ; length 0x6e (end at 0xb72e)
0000000000017198         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017199         db  0x44 ; 'D'
000000000001719a         db  0x0e ; '.'
000000000001719b         db  0x60 ; '`'
000000000001719c         db  0x7f ; '.'
000000000001719d         db  0x0a ; '.'
000000000001719e         db  0x0e ; '.'
000000000001719f         db  0x08 ; '.'
00000000000171a0         db  0x45 ; 'E'
00000000000171a1         db  0x0b ; '.'
00000000000171a2         db  0x00 ; '.'
00000000000171a3         db  0x00 ; '.'
00000000000171a4         db  0x00 ; '.'
00000000000171a5         db  0x00 ; '.'
00000000000171a6         db  0x00 ; '.'
00000000000171a7         db  0x00 ; '.'
00000000000171a8         dd         0x0000005c                                  ; Length of the record
00000000000171ac         dd         0x00000dac                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000171b0         db         0x80, 0x45, 2 dup (0xff)                    ; begin 0xb730
00000000000171b4         db         0x87, 3 dup (0x00)                          ; length 0x87 (end at 0xb7b7)
00000000000171b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000171b9         db  0x47 ; 'G'
00000000000171ba         db  0x0e ; '.'
00000000000171bb         db  0x10 ; '.'
00000000000171bc         db  0x8d ; '.'
00000000000171bd         db  0x02 ; '.'
00000000000171be         db  0x42 ; 'B'
00000000000171bf         db  0x0e ; '.'
00000000000171c0         db  0x18 ; '.'
00000000000171c1         db  0x8c ; '.'
00000000000171c2         db  0x03 ; '.'
00000000000171c3         db  0x44 ; 'D'
00000000000171c4         db  0x0e ; '.'
00000000000171c5         db  0x20 ; ' '
00000000000171c6         db  0x86 ; '.'
00000000000171c7         db  0x04 ; '.'
00000000000171c8         db  0x41 ; 'A'
00000000000171c9         db  0x0e ; '.'
00000000000171ca         db  0x28 ; '('
00000000000171cb         db  0x83 ; '.'
00000000000171cc         db  0x05 ; '.'
00000000000171cd         db  0x4f ; 'O'
00000000000171ce         db  0x0e ; '.'
00000000000171cf         db  0x30 ; '0'
00000000000171d0         db  0x7c ; '|'
00000000000171d1         db  0x0a ; '.'
00000000000171d2         db  0x0e ; '.'
00000000000171d3         db  0x28 ; '('
00000000000171d4         db  0x44 ; 'D'
00000000000171d5         db  0xc3 ; '.'
00000000000171d6         db  0x0e ; '.'
00000000000171d7         db  0x20 ; ' '
00000000000171d8         db  0x41 ; 'A'
00000000000171d9         db  0xc6 ; '.'
00000000000171da         db  0x0e ; '.'
00000000000171db         db  0x18 ; '.'
00000000000171dc         db  0x42 ; 'B'
00000000000171dd         db  0xcc ; '.'
00000000000171de         db  0x0e ; '.'
00000000000171df         db  0x10 ; '.'
00000000000171e0         db  0x42 ; 'B'
00000000000171e1         db  0xcd ; '.'
00000000000171e2         db  0x0e ; '.'
00000000000171e3         db  0x08 ; '.'
00000000000171e4         db  0x4e ; 'N'
00000000000171e5         db  0x0b ; '.'
00000000000171e6         db  0x44 ; 'D'
00000000000171e7         db  0x0e ; '.'
00000000000171e8         db  0x28 ; '('
00000000000171e9         db  0x41 ; 'A'
00000000000171ea         db  0x0e ; '.'
00000000000171eb         db  0x20 ; ' '
00000000000171ec         db  0x41 ; 'A'
00000000000171ed         db  0x0e ; '.'
00000000000171ee         db  0x18 ; '.'
00000000000171ef         db  0x42 ; 'B'
00000000000171f0         db  0x0e ; '.'
00000000000171f1         db  0x10 ; '.'
00000000000171f2         db  0x42 ; 'B'
00000000000171f3         db  0x0e ; '.'
00000000000171f4         db  0x08 ; '.'
00000000000171f5         db  0x46 ; 'F'
00000000000171f6         db  0xc3 ; '.'
00000000000171f7         db  0xc6 ; '.'
00000000000171f8         db  0xcc ; '.'
00000000000171f9         db  0xcd ; '.'
00000000000171fa         db  0x42 ; 'B'
00000000000171fb         db  0x0e ; '.'
00000000000171fc         db  0x30 ; '0'
00000000000171fd         db  0x83 ; '.'
00000000000171fe         db  0x05 ; '.'
00000000000171ff         db  0x86 ; '.'
0000000000017200         db  0x04 ; '.'
0000000000017201         db  0x8c ; '.'
0000000000017202         db  0x03 ; '.'
0000000000017203         db  0x8d ; '.'
0000000000017204         db  0x02 ; '.'
0000000000017205         db  0x00 ; '.'
0000000000017206         db  0x00 ; '.'
0000000000017207         db  0x00 ; '.'
0000000000017208         dd         0x0000001c                                  ; Length of the record
000000000001720c         dd         0x00000e0c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017210         db         0xb0, 0x45, 2 dup (0xff)                    ; begin 0xb7c0
0000000000017214         db         0x56, 3 dup (0x00)                          ; length 0x56 (end at 0xb816)
0000000000017218         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017219         db  0x44 ; 'D'
000000000001721a         db  0x0e ; '.'
000000000001721b         db  0x30 ; '0'
000000000001721c         db  0x02 ; '.'
000000000001721d         db  0x4c ; 'L'
000000000001721e         db  0x0a ; '.'
000000000001721f         db  0x0e ; '.'
0000000000017220         db  0x08 ; '.'
0000000000017221         db  0x41 ; 'A'
0000000000017222         db  0x0b ; '.'
0000000000017223         db  0x00 ; '.'
0000000000017224         db  0x00 ; '.'
0000000000017225         db  0x00 ; '.'
0000000000017226         db  0x00 ; '.'
0000000000017227         db  0x00 ; '.'
0000000000017228         dd         0x00000010                                  ; Length of the record
000000000001722c         dd         0x00000e2c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017230         db         0xf0, 0x45, 2 dup (0xff)                    ; begin 0xb820
0000000000017234         db         0x83, 0x01, 2 dup (0x00)                    ; length 0x183 (end at 0xb9a3)
0000000000017238         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017239         align      4
000000000001723c         dd         0x00000010                                  ; Length of the record
0000000000017240         dd         0x00000e40                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017244         db         0x6c, 0x47, 2 dup (0xff)                    ; begin 0xb9b0
0000000000017248         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0xb9b8)
000000000001724c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001724d         align      16
0000000000017250         dd         0x0000001c                                  ; Length of the record
0000000000017254         dd         0x00000e54                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017258         db         0x68, 0x47, 2 dup (0xff)                    ; begin 0xb9c0
000000000001725c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0xb9d8)
0000000000017260         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017261         db  0x44 ; 'D'
0000000000017262         db  0x0e ; '.'
0000000000017263         db  0x10 ; '.'
0000000000017264         db  0x4e ; 'N'
0000000000017265         db  0x0a ; '.'
0000000000017266         db  0x0e ; '.'
0000000000017267         db  0x08 ; '.'
0000000000017268         db  0x41 ; 'A'
0000000000017269         db  0x0b ; '.'
000000000001726a         db  0x00 ; '.'
000000000001726b         db  0x00 ; '.'
000000000001726c         db  0x00 ; '.'
000000000001726d         db  0x00 ; '.'
000000000001726e         db  0x00 ; '.'
000000000001726f         db  0x00 ; '.'
0000000000017270         dd         0x0000004c                                  ; Length of the record
0000000000017274         dd         0x00000e74                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017278         db         0x68, 0x47, 2 dup (0xff)                    ; begin 0xb9e0
000000000001727c         db         0xff, 3 dup (0x00)                          ; length 0xff (end at 0xbadf)
0000000000017280         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017281         db  0x42 ; 'B'
0000000000017282         db  0x0e ; '.'
0000000000017283         db  0x10 ; '.'
0000000000017284         db  0x8f ; '.'
0000000000017285         db  0x02 ; '.'
0000000000017286         db  0x42 ; 'B'
0000000000017287         db  0x0e ; '.'
0000000000017288         db  0x18 ; '.'
0000000000017289         db  0x8e ; '.'
000000000001728a         db  0x03 ; '.'
000000000001728b         db  0x45 ; 'E'
000000000001728c         db  0x0e ; '.'
000000000001728d         db  0x20 ; ' '
000000000001728e         db  0x8d ; '.'
000000000001728f         db  0x04 ; '.'
0000000000017290         db  0x42 ; 'B'
0000000000017291         db  0x0e ; '.'
0000000000017292         db  0x28 ; '('
0000000000017293         db  0x8c ; '.'
0000000000017294         db  0x05 ; '.'
0000000000017295         db  0x44 ; 'D'
0000000000017296         db  0x0e ; '.'
0000000000017297         db  0x30 ; '0'
0000000000017298         db  0x86 ; '.'
0000000000017299         db  0x06 ; '.'
000000000001729a         db  0x41 ; 'A'
000000000001729b         db  0x0e ; '.'
000000000001729c         db  0x38 ; '8'
000000000001729d         db  0x83 ; '.'
000000000001729e         db  0x07 ; '.'
000000000001729f         db  0x47 ; 'G'
00000000000172a0         db  0x0e ; '.'
00000000000172a1         db  0x50 ; 'P'
00000000000172a2         db  0x02 ; '.'
00000000000172a3         db  0xc3 ; '.'
00000000000172a4         db  0x0a ; '.'
00000000000172a5         db  0x0e ; '.'
00000000000172a6         db  0x38 ; '8'
00000000000172a7         db  0x44 ; 'D'
00000000000172a8         db  0x0e ; '.'
00000000000172a9         db  0x30 ; '0'
00000000000172aa         db  0x41 ; 'A'
00000000000172ab         db  0x0e ; '.'
00000000000172ac         db  0x28 ; '('
00000000000172ad         db  0x42 ; 'B'
00000000000172ae         db  0x0e ; '.'
00000000000172af         db  0x20 ; ' '
00000000000172b0         db  0x42 ; 'B'
00000000000172b1         db  0x0e ; '.'
00000000000172b2         db  0x18 ; '.'
00000000000172b3         db  0x42 ; 'B'
00000000000172b4         db  0x0e ; '.'
00000000000172b5         db  0x10 ; '.'
00000000000172b6         db  0x42 ; 'B'
00000000000172b7         db  0x0e ; '.'
00000000000172b8         db  0x08 ; '.'
00000000000172b9         db  0x49 ; 'I'
00000000000172ba         db  0x0b ; '.'
00000000000172bb         db  0x00 ; '.'
00000000000172bc         db  0x00 ; '.'
00000000000172bd         db  0x00 ; '.'
00000000000172be         db  0x00 ; '.'
00000000000172bf         db  0x00 ; '.'
00000000000172c0         dd         0x0000004c                                  ; Length of the record
00000000000172c4         dd         0x00000ec4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000172c8         db         0x18, 0x48, 2 dup (0xff)                    ; begin 0xbae0
00000000000172cc         db         0x76, 3 dup (0x00)                          ; length 0x76 (end at 0xbb56)
00000000000172d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000172d1         db  0x42 ; 'B'
00000000000172d2         db  0x0e ; '.'
00000000000172d3         db  0x10 ; '.'
00000000000172d4         db  0x8d ; '.'
00000000000172d5         db  0x02 ; '.'
00000000000172d6         db  0x42 ; 'B'
00000000000172d7         db  0x0e ; '.'
00000000000172d8         db  0x18 ; '.'
00000000000172d9         db  0x8c ; '.'
00000000000172da         db  0x03 ; '.'
00000000000172db         db  0x41 ; 'A'
00000000000172dc         db  0x0e ; '.'
00000000000172dd         db  0x20 ; ' '
00000000000172de         db  0x86 ; '.'
00000000000172df         db  0x04 ; '.'
00000000000172e0         db  0x41 ; 'A'
00000000000172e1         db  0x0e ; '.'
00000000000172e2         db  0x28 ; '('
00000000000172e3         db  0x83 ; '.'
00000000000172e4         db  0x05 ; '.'
00000000000172e5         db  0x44 ; 'D'
00000000000172e6         db  0x0e ; '.'
00000000000172e7         db  0x30 ; '0'
00000000000172e8         db  0x7e ; '~'
00000000000172e9         db  0x0a ; '.'
00000000000172ea         db  0x0e ; '.'
00000000000172eb         db  0x28 ; '('
00000000000172ec         db  0x44 ; 'D'
00000000000172ed         db  0x0e ; '.'
00000000000172ee         db  0x20 ; ' '
00000000000172ef         db  0x41 ; 'A'
00000000000172f0         db  0x0e ; '.'
00000000000172f1         db  0x18 ; '.'
00000000000172f2         db  0x42 ; 'B'
00000000000172f3         db  0x0e ; '.'
00000000000172f4         db  0x10 ; '.'
00000000000172f5         db  0x42 ; 'B'
00000000000172f6         db  0x0e ; '.'
00000000000172f7         db  0x08 ; '.'
00000000000172f8         db  0x47 ; 'G'
00000000000172f9         db  0x0b ; '.'
00000000000172fa         db  0x4f ; 'O'
00000000000172fb         db  0x0a ; '.'
00000000000172fc         db  0x0e ; '.'
00000000000172fd         db  0x28 ; '('
00000000000172fe         db  0x44 ; 'D'
00000000000172ff         db  0x0e ; '.'
0000000000017300         db  0x20 ; ' '
0000000000017301         db  0x41 ; 'A'
0000000000017302         db  0x0e ; '.'
0000000000017303         db  0x18 ; '.'
0000000000017304         db  0x42 ; 'B'
0000000000017305         db  0x0e ; '.'
0000000000017306         db  0x10 ; '.'
0000000000017307         db  0x42 ; 'B'
0000000000017308         db  0x0e ; '.'
0000000000017309         db  0x08 ; '.'
000000000001730a         db  0x41 ; 'A'
000000000001730b         db  0x0b ; '.'
000000000001730c         db  0x00 ; '.'
000000000001730d         db  0x00 ; '.'
000000000001730e         db  0x00 ; '.'
000000000001730f         db  0x00 ; '.'
0000000000017310         dd         0x00000010                                  ; Length of the record
0000000000017314         dd         0x00000f14                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017318         db         2 dup (0x48), 2 dup (0xff)                  ; begin 0xbb60
000000000001731c         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0xbbf3)
0000000000017320         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017321         align      4
0000000000017324         dd         0x00000010                                  ; Length of the record
0000000000017328         dd         0x00000f28                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
000000000001732c         db         0xd4, 0x48, 2 dup (0xff)                    ; begin 0xbc00
0000000000017330         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0xbc10)
0000000000017334         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017335         align      8
0000000000017338         dd         0x00000010                                  ; Length of the record
000000000001733c         dd         0x00000f3c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017340         db         0xd0, 0x48, 2 dup (0xff)                    ; begin 0xbc10
0000000000017344         db         0x07, 3 dup (0x00)                          ; length 0x7 (end at 0xbc17)
0000000000017348         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017349         align      4
000000000001734c         dd         0x00000018                                  ; Length of the record
0000000000017350         dd         0x00000f50                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017354         db         0xcc, 0x48, 2 dup (0xff)                    ; begin 0xbc20
0000000000017358         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0xbc42)
000000000001735c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001735d         db  0x41 ; 'A'
000000000001735e         db  0x0e ; '.'
000000000001735f         db  0x10 ; '.'
0000000000017360         db  0x83 ; '.'
0000000000017361         db  0x02 ; '.'
0000000000017362         db  0x5b ; '['
0000000000017363         db  0x0a ; '.'
0000000000017364         db  0x0e ; '.'
0000000000017365         db  0x08 ; '.'
0000000000017366         db  0x41 ; 'A'
0000000000017367         db  0x0b ; '.'
0000000000017368         dd         0x0000005c                                  ; Length of the record
000000000001736c         dd         0x00000f6c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017370         db         0xe0, 0x48, 2 dup (0xff)                    ; begin 0xbc50
0000000000017374         db         0x1e, 0x01, 2 dup (0x00)                    ; length 0x11e (end at 0xbd6e)
0000000000017378         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017379         db  0x42 ; 'B'
000000000001737a         db  0x0e ; '.'
000000000001737b         db  0x10 ; '.'
000000000001737c         db  0x8e ; '.'
000000000001737d         db  0x02 ; '.'
000000000001737e         db  0x42 ; 'B'
000000000001737f         db  0x0e ; '.'
0000000000017380         db  0x18 ; '.'
0000000000017381         db  0x8d ; '.'
0000000000017382         db  0x03 ; '.'
0000000000017383         db  0x45 ; 'E'
0000000000017384         db  0x0e ; '.'
0000000000017385         db  0x20 ; ' '
0000000000017386         db  0x8c ; '.'
0000000000017387         db  0x04 ; '.'
0000000000017388         db  0x41 ; 'A'
0000000000017389         db  0x0e ; '.'
000000000001738a         db  0x28 ; '('
000000000001738b         db  0x86 ; '.'
000000000001738c         db  0x05 ; '.'
000000000001738d         db  0x44 ; 'D'
000000000001738e         db  0x0e ; '.'
000000000001738f         db  0x30 ; '0'
0000000000017390         db  0x83 ; '.'
0000000000017391         db  0x06 ; '.'
0000000000017392         db  0x02 ; '.'
0000000000017393         db  0xa1 ; '.'
0000000000017394         db  0x0a ; '.'
0000000000017395         db  0x0e ; '.'
0000000000017396         db  0x28 ; '('
0000000000017397         db  0x44 ; 'D'
0000000000017398         db  0x0e ; '.'
0000000000017399         db  0x20 ; ' '
000000000001739a         db  0x42 ; 'B'
000000000001739b         db  0x0e ; '.'
000000000001739c         db  0x18 ; '.'
000000000001739d         db  0x42 ; 'B'
000000000001739e         db  0x0e ; '.'
000000000001739f         db  0x10 ; '.'
00000000000173a0         db  0x42 ; 'B'
00000000000173a1         db  0x0e ; '.'
00000000000173a2         db  0x08 ; '.'
00000000000173a3         db  0x47 ; 'G'
00000000000173a4         db  0x0b ; '.'
00000000000173a5         db  0x71 ; 'q'
00000000000173a6         db  0x0a ; '.'
00000000000173a7         db  0x0e ; '.'
00000000000173a8         db  0x28 ; '('
00000000000173a9         db  0x41 ; 'A'
00000000000173aa         db  0x0e ; '.'
00000000000173ab         db  0x20 ; ' '
00000000000173ac         db  0x42 ; 'B'
00000000000173ad         db  0x0e ; '.'
00000000000173ae         db  0x18 ; '.'
00000000000173af         db  0x42 ; 'B'
00000000000173b0         db  0x0e ; '.'
00000000000173b1         db  0x10 ; '.'
00000000000173b2         db  0x42 ; 'B'
00000000000173b3         db  0x0e ; '.'
00000000000173b4         db  0x08 ; '.'
00000000000173b5         db  0x48 ; 'H'
00000000000173b6         db  0x0b ; '.'
00000000000173b7         db  0x53 ; 'S'
00000000000173b8         db  0x0e ; '.'
00000000000173b9         db  0x28 ; '('
00000000000173ba         db  0x44 ; 'D'
00000000000173bb         db  0x0e ; '.'
00000000000173bc         db  0x20 ; ' '
00000000000173bd         db  0x42 ; 'B'
00000000000173be         db  0x0e ; '.'
00000000000173bf         db  0x18 ; '.'
00000000000173c0         db  0x42 ; 'B'
00000000000173c1         db  0x0e ; '.'
00000000000173c2         db  0x10 ; '.'
00000000000173c3         db  0x42 ; 'B'
00000000000173c4         db  0x0e ; '.'
00000000000173c5         db  0x08 ; '.'
00000000000173c6         db  0x00 ; '.'
00000000000173c7         db  0x00 ; '.'
00000000000173c8         dd         0x00000010                                  ; Length of the record
00000000000173cc         dd         0x00000fcc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000173d0         db         0xa0, 0x49, 2 dup (0xff)                    ; begin 0xbd70
00000000000173d4         db         0x77, 3 dup (0x00)                          ; length 0x77 (end at 0xbde7)
00000000000173d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000173d9         align      4
00000000000173dc         dd         0x0000005c                                  ; Length of the record
00000000000173e0         dd         0x00000fe0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000173e4         db         0x0c, 0x4a, 2 dup (0xff)                    ; begin 0xbdf0
00000000000173e8         db         0x40, 0x01, 2 dup (0x00)                    ; length 0x140 (end at 0xbf30)
00000000000173ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000173ed         db  0x42 ; 'B'
00000000000173ee         db  0x0e ; '.'
00000000000173ef         db  0x10 ; '.'
00000000000173f0         db  0x8f ; '.'
00000000000173f1         db  0x02 ; '.'
00000000000173f2         db  0x42 ; 'B'
00000000000173f3         db  0x0e ; '.'
00000000000173f4         db  0x18 ; '.'
00000000000173f5         db  0x8e ; '.'
00000000000173f6         db  0x03 ; '.'
00000000000173f7         db  0x42 ; 'B'
00000000000173f8         db  0x0e ; '.'
00000000000173f9         db  0x20 ; ' '
00000000000173fa         db  0x8d ; '.'
00000000000173fb         db  0x04 ; '.'
00000000000173fc         db  0x42 ; 'B'
00000000000173fd         db  0x0e ; '.'
00000000000173fe         db  0x28 ; '('
00000000000173ff         db  0x8c ; '.'
0000000000017400         db  0x05 ; '.'
0000000000017401         db  0x41 ; 'A'
0000000000017402         db  0x0e ; '.'
0000000000017403         db  0x30 ; '0'
0000000000017404         db  0x86 ; '.'
0000000000017405         db  0x06 ; '.'
0000000000017406         db  0x41 ; 'A'
0000000000017407         db  0x0e ; '.'
0000000000017408         db  0x38 ; '8'
0000000000017409         db  0x83 ; '.'
000000000001740a         db  0x07 ; '.'
000000000001740b         db  0x44 ; 'D'
000000000001740c         db  0x0e ; '.'
000000000001740d         db  0x40 ; '@'
000000000001740e         db  0x02 ; '.'
000000000001740f         db  0xee ; '.'
0000000000017410         db  0x0a ; '.'
0000000000017411         db  0x0e ; '.'
0000000000017412         db  0x38 ; '8'
0000000000017413         db  0x46 ; 'F'
0000000000017414         db  0x0e ; '.'
0000000000017415         db  0x30 ; '0'
0000000000017416         db  0x41 ; 'A'
0000000000017417         db  0x0e ; '.'
0000000000017418         db  0x28 ; '('
0000000000017419         db  0x42 ; 'B'
000000000001741a         db  0x0e ; '.'
000000000001741b         db  0x20 ; ' '
000000000001741c         db  0x42 ; 'B'
000000000001741d         db  0x0e ; '.'
000000000001741e         db  0x18 ; '.'
000000000001741f         db  0x42 ; 'B'
0000000000017420         db  0x0e ; '.'
0000000000017421         db  0x10 ; '.'
0000000000017422         db  0x42 ; 'B'
0000000000017423         db  0x0e ; '.'
0000000000017424         db  0x08 ; '.'
0000000000017425         db  0x45 ; 'E'
0000000000017426         db  0x0b ; '.'
0000000000017427         db  0x63 ; 'c'
0000000000017428         db  0x0e ; '.'
0000000000017429         db  0x38 ; '8'
000000000001742a         db  0x43 ; 'C'
000000000001742b         db  0x0e ; '.'
000000000001742c         db  0x30 ; '0'
000000000001742d         db  0x41 ; 'A'
000000000001742e         db  0x0e ; '.'
000000000001742f         db  0x28 ; '('
0000000000017430         db  0x42 ; 'B'
0000000000017431         db  0x0e ; '.'
0000000000017432         db  0x20 ; ' '
0000000000017433         db  0x42 ; 'B'
0000000000017434         db  0x0e ; '.'
0000000000017435         db  0x18 ; '.'
0000000000017436         db  0x42 ; 'B'
0000000000017437         db  0x0e ; '.'
0000000000017438         db  0x10 ; '.'
0000000000017439         db  0x42 ; 'B'
000000000001743a         db  0x0e ; '.'
000000000001743b         db  0x08 ; '.'
000000000001743c         dd         0x00000010                                  ; Length of the record
0000000000017440         dd         0x00001040                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017444         db         0xec, 0x4a, 2 dup (0xff)                    ; begin 0xbf30
0000000000017448         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0xbf35)
000000000001744c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001744d         align      16
0000000000017450         dd         0x00000010                                  ; Length of the record
0000000000017454         dd         0x00001054                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017458         db         0xe8, 0x4a, 2 dup (0xff)                    ; begin 0xbf40
000000000001745c         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0xbf45)
0000000000017460         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017461         align      4
0000000000017464         dd         0x00000010                                  ; Length of the record
0000000000017468         dd         0x00001068                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
000000000001746c         db         0xe4, 0x4a, 2 dup (0xff)                    ; begin 0xbf50
0000000000017470         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0xbf55)
0000000000017474         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017475         align      8
0000000000017478         dd         0x00000010                                  ; Length of the record
000000000001747c         dd         0x0000107c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017480         db         0xe0, 0x4a, 2 dup (0xff)                    ; begin 0xbf60
0000000000017484         db         0x49, 3 dup (0x00)                          ; length 0x49 (end at 0xbfa9)
0000000000017488         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017489         align      4
000000000001748c         dd         0x00000010                                  ; Length of the record
0000000000017490         dd         0x00001090                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017494         db         0x1c, 0x4b, 2 dup (0xff)                    ; begin 0xbfb0
0000000000017498         db         0x58, 3 dup (0x00)                          ; length 0x58 (end at 0xc008)
000000000001749c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001749d         align      32
00000000000174a0         dd         0x00000038                                  ; Length of the record
00000000000174a4         dd         0x000010a4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000174a8         db         0x68, 0x4b, 2 dup (0xff)                    ; begin 0xc010
00000000000174ac         db         0x47, 0x01, 2 dup (0x00)                    ; length 0x147 (end at 0xc157)
00000000000174b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000174b1         db  0x42 ; 'B'
00000000000174b2         db  0x0e ; '.'
00000000000174b3         db  0x10 ; '.'
00000000000174b4         db  0x8d ; '.'
00000000000174b5         db  0x02 ; '.'
00000000000174b6         db  0x42 ; 'B'
00000000000174b7         db  0x0e ; '.'
00000000000174b8         db  0x18 ; '.'
00000000000174b9         db  0x8c ; '.'
00000000000174ba         db  0x03 ; '.'
00000000000174bb         db  0x44 ; 'D'
00000000000174bc         db  0x0e ; '.'
00000000000174bd         db  0x20 ; ' '
00000000000174be         db  0x86 ; '.'
00000000000174bf         db  0x04 ; '.'
00000000000174c0         db  0x41 ; 'A'
00000000000174c1         db  0x0e ; '.'
00000000000174c2         db  0x28 ; '('
00000000000174c3         db  0x83 ; '.'
00000000000174c4         db  0x05 ; '.'
00000000000174c5         db  0x46 ; 'F'
00000000000174c6         db  0x0e ; '.'
00000000000174c7         db  0x30 ; '0'
00000000000174c8         db  0x02 ; '.'
00000000000174c9         db  0xcd ; '.'
00000000000174ca         db  0x0a ; '.'
00000000000174cb         db  0x0e ; '.'
00000000000174cc         db  0x28 ; '('
00000000000174cd         db  0x47 ; 'G'
00000000000174ce         db  0x0e ; '.'
00000000000174cf         db  0x20 ; ' '
00000000000174d0         db  0x41 ; 'A'
00000000000174d1         db  0x0e ; '.'
00000000000174d2         db  0x18 ; '.'
00000000000174d3         db  0x42 ; 'B'
00000000000174d4         db  0x0e ; '.'
00000000000174d5         db  0x10 ; '.'
00000000000174d6         db  0x42 ; 'B'
00000000000174d7         db  0x0e ; '.'
00000000000174d8         db  0x08 ; '.'
00000000000174d9         db  0x58 ; 'X'
00000000000174da         db  0x0b ; '.'
00000000000174db         db  0x00 ; '.'
00000000000174dc         dd         0x00000034                                  ; Length of the record
00000000000174e0         dd         0x000010e0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000174e4         db         0x7c, 0x4c, 2 dup (0xff)                    ; begin 0xc160
00000000000174e8         db         0x5b, 3 dup (0x00)                          ; length 0x5b (end at 0xc1bb)
00000000000174ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000174ed         db  0x42 ; 'B'
00000000000174ee         db  0x0e ; '.'
00000000000174ef         db  0x10 ; '.'
00000000000174f0         db  0x8c ; '.'
00000000000174f1         db  0x02 ; '.'
00000000000174f2         db  0x41 ; 'A'
00000000000174f3         db  0x0e ; '.'
00000000000174f4         db  0x18 ; '.'
00000000000174f5         db  0x86 ; '.'
00000000000174f6         db  0x03 ; '.'
00000000000174f7         db  0x44 ; 'D'
00000000000174f8         db  0x0e ; '.'
00000000000174f9         db  0x20 ; ' '
00000000000174fa         db  0x83 ; '.'
00000000000174fb         db  0x04 ; '.'
00000000000174fc         db  0x79 ; 'y'
00000000000174fd         db  0x0a ; '.'
00000000000174fe         db  0x0e ; '.'
00000000000174ff         db  0x18 ; '.'
0000000000017500         db  0x44 ; 'D'
0000000000017501         db  0x0e ; '.'
0000000000017502         db  0x10 ; '.'
0000000000017503         db  0x42 ; 'B'
0000000000017504         db  0x0e ; '.'
0000000000017505         db  0x08 ; '.'
0000000000017506         db  0x4a ; 'J'
0000000000017507         db  0x0b ; '.'
0000000000017508         db  0x44 ; 'D'
0000000000017509         db  0x0e ; '.'
000000000001750a         db  0x18 ; '.'
000000000001750b         db  0x41 ; 'A'
000000000001750c         db  0x0e ; '.'
000000000001750d         db  0x10 ; '.'
000000000001750e         db  0x45 ; 'E'
000000000001750f         db  0x0e ; '.'
0000000000017510         db  0x08 ; '.'
0000000000017511         db  0x00 ; '.'
0000000000017512         db  0x00 ; '.'
0000000000017513         db  0x00 ; '.'
0000000000017514         dd         0x00000010                                  ; Length of the record
0000000000017518         dd         0x00001118                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
000000000001751c         db         0xa4, 0x4c, 2 dup (0xff)                    ; begin 0xc1c0
0000000000017520         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0xc201)
0000000000017524         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017525         db  0x7c ; '|'
0000000000017526         db  0x0e ; '.'
0000000000017527         db  0x10 ; '.'
0000000000017528         dd         0x00000030                                  ; Length of the record
000000000001752c         dd         0x0000112c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017530         db         0xe0, 0x4c, 2 dup (0xff)                    ; begin 0xc210
0000000000017534         db         0x72, 3 dup (0x00)                          ; length 0x72 (end at 0xc282)
0000000000017538         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017539         db  0x41 ; 'A'
000000000001753a         db  0x0e ; '.'
000000000001753b         db  0x10 ; '.'
000000000001753c         db  0x86 ; '.'
000000000001753d         db  0x02 ; '.'
000000000001753e         db  0x41 ; 'A'
000000000001753f         db  0x0e ; '.'
0000000000017540         db  0x18 ; '.'
0000000000017541         db  0x83 ; '.'
0000000000017542         db  0x03 ; '.'
0000000000017543         db  0x4a ; 'J'
0000000000017544         db  0x0e ; '.'
0000000000017545         db  0x20 ; ' '
0000000000017546         db  0x02 ; '.'
0000000000017547         db  0x53 ; 'S'
0000000000017548         db  0x0a ; '.'
0000000000017549         db  0x0e ; '.'
000000000001754a         db  0x18 ; '.'
000000000001754b         db  0x41 ; 'A'
000000000001754c         db  0x0e ; '.'
000000000001754d         db  0x10 ; '.'
000000000001754e         db  0x41 ; 'A'
000000000001754f         db  0x0e ; '.'
0000000000017550         db  0x08 ; '.'
0000000000017551         db  0x47 ; 'G'
0000000000017552         db  0x0b ; '.'
0000000000017553         db  0x47 ; 'G'
0000000000017554         db  0x0e ; '.'
0000000000017555         db  0x18 ; '.'
0000000000017556         db  0x41 ; 'A'
0000000000017557         db  0x0e ; '.'
0000000000017558         db  0x10 ; '.'
0000000000017559         db  0x41 ; 'A'
000000000001755a         db  0x0e ; '.'
000000000001755b         db  0x08 ; '.'
000000000001755c         dd         0x00000010                                  ; Length of the record
0000000000017560         dd         0x00001160                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017564         db         0x2c, 0x4d, 2 dup (0xff)                    ; begin 0xc290
0000000000017568         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0xc2f5)
000000000001756c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001756d         align      16
0000000000017570         dd         0x00000048                                  ; Length of the record
0000000000017574         dd         0x00001174                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017578         db         0x88, 0x4d, 2 dup (0xff)                    ; begin 0xc300
000000000001757c         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0xc36a)
0000000000017580         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017581         db  0x42 ; 'B'
0000000000017582         db  0x0e ; '.'
0000000000017583         db  0x10 ; '.'
0000000000017584         db  0x8f ; '.'
0000000000017585         db  0x02 ; '.'
0000000000017586         db  0x42 ; 'B'
0000000000017587         db  0x0e ; '.'
0000000000017588         db  0x18 ; '.'
0000000000017589         db  0x8e ; '.'
000000000001758a         db  0x03 ; '.'
000000000001758b         db  0x42 ; 'B'
000000000001758c         db  0x0e ; '.'
000000000001758d         db  0x20 ; ' '
000000000001758e         db  0x8d ; '.'
000000000001758f         db  0x04 ; '.'
0000000000017590         db  0x42 ; 'B'
0000000000017591         db  0x0e ; '.'
0000000000017592         db  0x28 ; '('
0000000000017593         db  0x8c ; '.'
0000000000017594         db  0x05 ; '.'
0000000000017595         db  0x41 ; 'A'
0000000000017596         db  0x0e ; '.'
0000000000017597         db  0x30 ; '0'
0000000000017598         db  0x86 ; '.'
0000000000017599         db  0x06 ; '.'
000000000001759a         db  0x41 ; 'A'
000000000001759b         db  0x0e ; '.'
000000000001759c         db  0x38 ; '8'
000000000001759d         db  0x83 ; '.'
000000000001759e         db  0x07 ; '.'
000000000001759f         db  0x44 ; 'D'
00000000000175a0         db  0x0e ; '.'
00000000000175a1         db  0x40 ; '@'
00000000000175a2         db  0x02 ; '.'
00000000000175a3         db  0x4a ; 'J'
00000000000175a4         db  0x0a ; '.'
00000000000175a5         db  0x0e ; '.'
00000000000175a6         db  0x38 ; '8'
00000000000175a7         db  0x44 ; 'D'
00000000000175a8         db  0x0e ; '.'
00000000000175a9         db  0x30 ; '0'
00000000000175aa         db  0x41 ; 'A'
00000000000175ab         db  0x0e ; '.'
00000000000175ac         db  0x28 ; '('
00000000000175ad         db  0x42 ; 'B'
00000000000175ae         db  0x0e ; '.'
00000000000175af         db  0x20 ; ' '
00000000000175b0         db  0x42 ; 'B'
00000000000175b1         db  0x0e ; '.'
00000000000175b2         db  0x18 ; '.'
00000000000175b3         db  0x42 ; 'B'
00000000000175b4         db  0x0e ; '.'
00000000000175b5         db  0x10 ; '.'
00000000000175b6         db  0x42 ; 'B'
00000000000175b7         db  0x0e ; '.'
00000000000175b8         db  0x08 ; '.'
00000000000175b9         db  0x41 ; 'A'
00000000000175ba         db  0x0b ; '.'
00000000000175bb         db  0x00 ; '.'
00000000000175bc         dd         0x00000010                                  ; Length of the record
00000000000175c0         dd         0x000011c0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000175c4         db         0xac, 0x4d, 2 dup (0xff)                    ; begin 0xc370
00000000000175c8         db         0x31, 3 dup (0x00)                          ; length 0x31 (end at 0xc3a1)
00000000000175cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000175cd         align      16
00000000000175d0         dd         0x00000010                                  ; Length of the record
00000000000175d4         dd         0x000011d4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000175d8         db         0xd8, 0x4d, 2 dup (0xff)                    ; begin 0xc3b0
00000000000175dc         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0xc3d0)
00000000000175e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000175e1         align      4
00000000000175e4         dd         0x00000048                                  ; Length of the record
00000000000175e8         dd         0x000011e8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000175ec         db         0xe4, 0x4d, 2 dup (0xff)                    ; begin 0xc3d0
00000000000175f0         db         0xb4, 0x01, 2 dup (0x00)                    ; length 0x1b4 (end at 0xc584)
00000000000175f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000175f5         db  0x42 ; 'B'
00000000000175f6         db  0x0e ; '.'
00000000000175f7         db  0x10 ; '.'
00000000000175f8         db  0x8f ; '.'
00000000000175f9         db  0x02 ; '.'
00000000000175fa         db  0x42 ; 'B'
00000000000175fb         db  0x0e ; '.'
00000000000175fc         db  0x18 ; '.'
00000000000175fd         db  0x8e ; '.'
00000000000175fe         db  0x03 ; '.'
00000000000175ff         db  0x49 ; 'I'
0000000000017600         db  0x0e ; '.'
0000000000017601         db  0x20 ; ' '
0000000000017602         db  0x8d ; '.'
0000000000017603         db  0x04 ; '.'
0000000000017604         db  0x42 ; 'B'
0000000000017605         db  0x0e ; '.'
0000000000017606         db  0x28 ; '('
0000000000017607         db  0x8c ; '.'
0000000000017608         db  0x05 ; '.'
0000000000017609         db  0x44 ; 'D'
000000000001760a         db  0x0e ; '.'
000000000001760b         db  0x30 ; '0'
000000000001760c         db  0x86 ; '.'
000000000001760d         db  0x06 ; '.'
000000000001760e         db  0x41 ; 'A'
000000000001760f         db  0x0e ; '.'
0000000000017610         db  0x38 ; '8'
0000000000017611         db  0x83 ; '.'
0000000000017612         db  0x07 ; '.'
0000000000017613         db  0x52 ; 'R'
0000000000017614         db  0x0e ; '.'
0000000000017615         db  0x40 ; '@'
0000000000017616         db  0x02 ; '.'
0000000000017617         db  0xd8 ; '.'
0000000000017618         db  0x0a ; '.'
0000000000017619         db  0x0e ; '.'
000000000001761a         db  0x38 ; '8'
000000000001761b         db  0x44 ; 'D'
000000000001761c         db  0x0e ; '.'
000000000001761d         db  0x30 ; '0'
000000000001761e         db  0x41 ; 'A'
000000000001761f         db  0x0e ; '.'
0000000000017620         db  0x28 ; '('
0000000000017621         db  0x42 ; 'B'
0000000000017622         db  0x0e ; '.'
0000000000017623         db  0x20 ; ' '
0000000000017624         db  0x42 ; 'B'
0000000000017625         db  0x0e ; '.'
0000000000017626         db  0x18 ; '.'
0000000000017627         db  0x42 ; 'B'
0000000000017628         db  0x0e ; '.'
0000000000017629         db  0x10 ; '.'
000000000001762a         db  0x42 ; 'B'
000000000001762b         db  0x0e ; '.'
000000000001762c         db  0x08 ; '.'
000000000001762d         db  0x45 ; 'E'
000000000001762e         db  0x0b ; '.'
000000000001762f         db  0x00 ; '.'
0000000000017630         dd         0x00000028                                  ; Length of the record
0000000000017634         dd         0x00001234                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017638         db         0x58, 0x4f, 2 dup (0xff)                    ; begin 0xc590
000000000001763c         db         0x90, 3 dup (0x00)                          ; length 0x90 (end at 0xc620)
0000000000017640         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017641         db  0x42 ; 'B'
0000000000017642         db  0x0e ; '.'
0000000000017643         db  0x10 ; '.'
0000000000017644         db  0x8c ; '.'
0000000000017645         db  0x02 ; '.'
0000000000017646         db  0x41 ; 'A'
0000000000017647         db  0x0e ; '.'
0000000000017648         db  0x18 ; '.'
0000000000017649         db  0x86 ; '.'
000000000001764a         db  0x03 ; '.'
000000000001764b         db  0x44 ; 'D'
000000000001764c         db  0x0e ; '.'
000000000001764d         db  0x20 ; ' '
000000000001764e         db  0x83 ; '.'
000000000001764f         db  0x04 ; '.'
0000000000017650         db  0x02 ; '.'
0000000000017651         db  0x85 ; '.'
0000000000017652         db  0x0e ; '.'
0000000000017653         db  0x18 ; '.'
0000000000017654         db  0x41 ; 'A'
0000000000017655         db  0x0e ; '.'
0000000000017656         db  0x10 ; '.'
0000000000017657         db  0x42 ; 'B'
0000000000017658         db  0x0e ; '.'
0000000000017659         db  0x08 ; '.'
000000000001765a         db  0x00 ; '.'
000000000001765b         db  0x00 ; '.'
000000000001765c         dd         0x00000028                                  ; Length of the record
0000000000017660         dd         0x00001260                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017664         db         0xbc, 0x4f, 2 dup (0xff)                    ; begin 0xc620
0000000000017668         db         0xd6, 3 dup (0x00)                          ; length 0xd6 (end at 0xc6f6)
000000000001766c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001766d         db  0x42 ; 'B'
000000000001766e         db  0x0e ; '.'
000000000001766f         db  0x10 ; '.'
0000000000017670         db  0x8c ; '.'
0000000000017671         db  0x02 ; '.'
0000000000017672         db  0x41 ; 'A'
0000000000017673         db  0x0e ; '.'
0000000000017674         db  0x18 ; '.'
0000000000017675         db  0x86 ; '.'
0000000000017676         db  0x03 ; '.'
0000000000017677         db  0x44 ; 'D'
0000000000017678         db  0x0e ; '.'
0000000000017679         db  0x20 ; ' '
000000000001767a         db  0x83 ; '.'
000000000001767b         db  0x04 ; '.'
000000000001767c         db  0x02 ; '.'
000000000001767d         db  0xc4 ; '.'
000000000001767e         db  0x0e ; '.'
000000000001767f         db  0x18 ; '.'
0000000000017680         db  0x44 ; 'D'
0000000000017681         db  0x0e ; '.'
0000000000017682         db  0x10 ; '.'
0000000000017683         db  0x42 ; 'B'
0000000000017684         db  0x0e ; '.'
0000000000017685         db  0x08 ; '.'
0000000000017686         db  0x00 ; '.'
0000000000017687         db  0x00 ; '.'
0000000000017688         dd         0x00000034                                  ; Length of the record
000000000001768c         dd         0x0000128c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017690         db         0x70, 0x50, 2 dup (0xff)                    ; begin 0xc700
0000000000017694         db         0x3e, 0x02, 2 dup (0x00)                    ; length 0x23e (end at 0xc93e)
0000000000017698         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017699         db  0x42 ; 'B'
000000000001769a         db  0x0e ; '.'
000000000001769b         db  0x10 ; '.'
000000000001769c         db  0x8c ; '.'
000000000001769d         db  0x02 ; '.'
000000000001769e         db  0x41 ; 'A'
000000000001769f         db  0x0e ; '.'
00000000000176a0         db  0x18 ; '.'
00000000000176a1         db  0x86 ; '.'
00000000000176a2         db  0x03 ; '.'
00000000000176a3         db  0x44 ; 'D'
00000000000176a4         db  0x0e ; '.'
00000000000176a5         db  0x20 ; ' '
00000000000176a6         db  0x83 ; '.'
00000000000176a7         db  0x04 ; '.'
00000000000176a8         db  0x44 ; 'D'
00000000000176a9         db  0x0e ; '.'
00000000000176aa         db  0x80 ; '.'
00000000000176ab         db  0x01 ; '.'
00000000000176ac         db  0x03 ; '.'
00000000000176ad         db  0x91 ; '.'
00000000000176ae         db  0x01 ; '.'
00000000000176af         db  0x0a ; '.'
00000000000176b0         db  0x0e ; '.'
00000000000176b1         db  0x20 ; ' '
00000000000176b2         db  0x41 ; 'A'
00000000000176b3         db  0x0e ; '.'
00000000000176b4         db  0x18 ; '.'
00000000000176b5         db  0x41 ; 'A'
00000000000176b6         db  0x0e ; '.'
00000000000176b7         db  0x10 ; '.'
00000000000176b8         db  0x42 ; 'B'
00000000000176b9         db  0x0e ; '.'
00000000000176ba         db  0x08 ; '.'
00000000000176bb         db  0x48 ; 'H'
00000000000176bc         db  0x0b ; '.'
00000000000176bd         db  0x00 ; '.'
00000000000176be         db  0x00 ; '.'
00000000000176bf         db  0x00 ; '.'
00000000000176c0         dd         0x00000038                                  ; Length of the record
00000000000176c4         dd         0x000012c4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000176c8         db         0x78, 0x52, 2 dup (0xff)                    ; begin 0xc940
00000000000176cc         db         0x84, 0x02, 2 dup (0x00)                    ; length 0x284 (end at 0xcbc4)
00000000000176d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000176d1         db  0x42 ; 'B'
00000000000176d2         db  0x0e ; '.'
00000000000176d3         db  0x10 ; '.'
00000000000176d4         db  0x8d ; '.'
00000000000176d5         db  0x02 ; '.'
00000000000176d6         db  0x42 ; 'B'
00000000000176d7         db  0x0e ; '.'
00000000000176d8         db  0x18 ; '.'
00000000000176d9         db  0x8c ; '.'
00000000000176da         db  0x03 ; '.'
00000000000176db         db  0x41 ; 'A'
00000000000176dc         db  0x0e ; '.'
00000000000176dd         db  0x20 ; ' '
00000000000176de         db  0x86 ; '.'
00000000000176df         db  0x04 ; '.'
00000000000176e0         db  0x41 ; 'A'
00000000000176e1         db  0x0e ; '.'
00000000000176e2         db  0x28 ; '('
00000000000176e3         db  0x83 ; '.'
00000000000176e4         db  0x05 ; '.'
00000000000176e5         db  0x44 ; 'D'
00000000000176e6         db  0x0e ; '.'
00000000000176e7         db  0x40 ; '@'
00000000000176e8         db  0x02 ; '.'
00000000000176e9         db  0x5a ; 'Z'
00000000000176ea         db  0x0a ; '.'
00000000000176eb         db  0x0e ; '.'
00000000000176ec         db  0x28 ; '('
00000000000176ed         db  0x41 ; 'A'
00000000000176ee         db  0x0e ; '.'
00000000000176ef         db  0x20 ; ' '
00000000000176f0         db  0x41 ; 'A'
00000000000176f1         db  0x0e ; '.'
00000000000176f2         db  0x18 ; '.'
00000000000176f3         db  0x42 ; 'B'
00000000000176f4         db  0x0e ; '.'
00000000000176f5         db  0x10 ; '.'
00000000000176f6         db  0x42 ; 'B'
00000000000176f7         db  0x0e ; '.'
00000000000176f8         db  0x08 ; '.'
00000000000176f9         db  0x46 ; 'F'
00000000000176fa         db  0x0b ; '.'
00000000000176fb         db  0x00 ; '.'
00000000000176fc         dd         0x00000020                                  ; Length of the record
0000000000017700         dd         0x00001300                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017704         db         0xcc, 0x54, 2 dup (0xff)                    ; begin 0xcbd0
0000000000017708         db         0x59, 3 dup (0x00)                          ; length 0x59 (end at 0xcc29)
000000000001770c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001770d         db  0x41 ; 'A'
000000000001770e         db  0x0e ; '.'
000000000001770f         db  0x10 ; '.'
0000000000017710         db  0x83 ; '.'
0000000000017711         db  0x02 ; '.'
0000000000017712         db  0x47 ; 'G'
0000000000017713         db  0x0e ; '.'
0000000000017714         db  0x20 ; ' '
0000000000017715         db  0x7c ; '|'
0000000000017716         db  0x0a ; '.'
0000000000017717         db  0x0e ; '.'
0000000000017718         db  0x10 ; '.'
0000000000017719         db  0x41 ; 'A'
000000000001771a         db  0x0e ; '.'
000000000001771b         db  0x08 ; '.'
000000000001771c         db  0x4b ; 'K'
000000000001771d         db  0x0b ; '.'
000000000001771e         db  0x00 ; '.'
000000000001771f         db  0x00 ; '.'
0000000000017720         dd         0x00000034                                  ; Length of the record
0000000000017724         dd         0x00001324                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017728         db         0x08, 0x55, 2 dup (0xff)                    ; begin 0xcc30
000000000001772c         db         0x03, 0x02, 2 dup (0x00)                    ; length 0x203 (end at 0xce33)
0000000000017730         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017731         db  0x42 ; 'B'
0000000000017732         db  0x0e ; '.'
0000000000017733         db  0x10 ; '.'
0000000000017734         db  0x8c ; '.'
0000000000017735         db  0x02 ; '.'
0000000000017736         db  0x41 ; 'A'
0000000000017737         db  0x0e ; '.'
0000000000017738         db  0x18 ; '.'
0000000000017739         db  0x86 ; '.'
000000000001773a         db  0x03 ; '.'
000000000001773b         db  0x46 ; 'F'
000000000001773c         db  0x0e ; '.'
000000000001773d         db  0x20 ; ' '
000000000001773e         db  0x83 ; '.'
000000000001773f         db  0x04 ; '.'
0000000000017740         db  0x47 ; 'G'
0000000000017741         db  0x0e ; '.'
0000000000017742         db  0x30 ; '0'
0000000000017743         db  0x02 ; '.'
0000000000017744         db  0x4a ; 'J'
0000000000017745         db  0x0a ; '.'
0000000000017746         db  0x0e ; '.'
0000000000017747         db  0x20 ; ' '
0000000000017748         db  0x41 ; 'A'
0000000000017749         db  0x0e ; '.'
000000000001774a         db  0x18 ; '.'
000000000001774b         db  0x41 ; 'A'
000000000001774c         db  0x0e ; '.'
000000000001774d         db  0x10 ; '.'
000000000001774e         db  0x42 ; 'B'
000000000001774f         db  0x0e ; '.'
0000000000017750         db  0x08 ; '.'
0000000000017751         db  0x42 ; 'B'
0000000000017752         db  0x0b ; '.'
0000000000017753         db  0x00 ; '.'
0000000000017754         db  0x00 ; '.'
0000000000017755         db  0x00 ; '.'
0000000000017756         db  0x00 ; '.'
0000000000017757         db  0x00 ; '.'
0000000000017758         dd         0x00000024                                  ; Length of the record
000000000001775c         dd         0x0000135c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017760         db         0xe0, 0x56, 2 dup (0xff)                    ; begin 0xce40
0000000000017764         db         0x27, 3 dup (0x00)                          ; length 0x27 (end at 0xce67)
0000000000017768         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017769         db  0x41 ; 'A'
000000000001776a         db  0x0e ; '.'
000000000001776b         db  0x10 ; '.'
000000000001776c         db  0x86 ; '.'
000000000001776d         db  0x02 ; '.'
000000000001776e         db  0x41 ; 'A'
000000000001776f         db  0x0e ; '.'
0000000000017770         db  0x18 ; '.'
0000000000017771         db  0x83 ; '.'
0000000000017772         db  0x03 ; '.'
0000000000017773         db  0x4a ; 'J'
0000000000017774         db  0x0e ; '.'
0000000000017775         db  0x20 ; ' '
0000000000017776         db  0x52 ; 'R'
0000000000017777         db  0x0e ; '.'
0000000000017778         db  0x18 ; '.'
0000000000017779         db  0x44 ; 'D'
000000000001777a         db  0x0e ; '.'
000000000001777b         db  0x10 ; '.'
000000000001777c         db  0x41 ; 'A'
000000000001777d         db  0x0e ; '.'
000000000001777e         db  0x08 ; '.'
000000000001777f         db  0x00 ; '.'
0000000000017780         dd         0x00000010                                  ; Length of the record
0000000000017784         dd         0x00001384                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017788         db         0xe8, 0x56, 2 dup (0xff)                    ; begin 0xce70
000000000001778c         db         0x0d, 3 dup (0x00)                          ; length 0xd (end at 0xce7d)
0000000000017790         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017791         align      4
0000000000017794         dd         0x00000014                                  ; Length of the record
0000000000017798         dd         0x00001398                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
000000000001779c         db         0xe4, 0x56, 2 dup (0xff)                    ; begin 0xce80
00000000000177a0         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0xceae)
00000000000177a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000177a5         db  0x5e ; '^'
00000000000177a6         db  0x0e ; '.'
00000000000177a7         db  0x10 ; '.'
00000000000177a8         db  0x4f ; 'O'
00000000000177a9         db  0x0e ; '.'
00000000000177aa         db  0x08 ; '.'
00000000000177ab         db  0x00 ; '.'
00000000000177ac         dd         0x00000014                                  ; Length of the record
00000000000177b0         dd         0x000013b0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000177b4         db         0xfc, 0x56, 2 dup (0xff)                    ; begin 0xceb0
00000000000177b8         db         0x33, 3 dup (0x00)                          ; length 0x33 (end at 0xcee3)
00000000000177bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000177bd         db  0x5e ; '^'
00000000000177be         db  0x0e ; '.'
00000000000177bf         db  0x10 ; '.'
00000000000177c0         db  0x54 ; 'T'
00000000000177c1         db  0x0e ; '.'
00000000000177c2         db  0x08 ; '.'
00000000000177c3         db  0x00 ; '.'
00000000000177c4         dd         0x00000018                                  ; Length of the record
00000000000177c8         dd         0x000013c8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000177cc         db         0x24, 0x57, 2 dup (0xff)                    ; begin 0xcef0
00000000000177d0         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0xcf05)
00000000000177d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000177d5         db  0x41 ; 'A'
00000000000177d6         db  0x0e ; '.'
00000000000177d7         db  0x10 ; '.'
00000000000177d8         db  0x83 ; '.'
00000000000177d9         db  0x02 ; '.'
00000000000177da         db  0x4f ; 'O'
00000000000177db         db  0x0e ; '.'
00000000000177dc         db  0x08 ; '.'
00000000000177dd         db  0x00 ; '.'
00000000000177de         db  0x00 ; '.'
00000000000177df         db  0x00 ; '.'
00000000000177e0         dd         0x0000005c                                  ; Length of the record
00000000000177e4         dd         0x000013e4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000177e8         db         0x28, 0x57, 2 dup (0xff)                    ; begin 0xcf10
00000000000177ec         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0xcf90)
00000000000177f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000177f1         db  0x42 ; 'B'
00000000000177f2         db  0x0e ; '.'
00000000000177f3         db  0x10 ; '.'
00000000000177f4         db  0x8d ; '.'
00000000000177f5         db  0x02 ; '.'
00000000000177f6         db  0x42 ; 'B'
00000000000177f7         db  0x0e ; '.'
00000000000177f8         db  0x18 ; '.'
00000000000177f9         db  0x8c ; '.'
00000000000177fa         db  0x03 ; '.'
00000000000177fb         db  0x47 ; 'G'
00000000000177fc         db  0x0e ; '.'
00000000000177fd         db  0x20 ; ' '
00000000000177fe         db  0x86 ; '.'
00000000000177ff         db  0x04 ; '.'
0000000000017800         db  0x41 ; 'A'
0000000000017801         db  0x0e ; '.'
0000000000017802         db  0x28 ; '('
0000000000017803         db  0x83 ; '.'
0000000000017804         db  0x05 ; '.'
0000000000017805         db  0x49 ; 'I'
0000000000017806         db  0x0e ; '.'
0000000000017807         db  0x30 ; '0'
0000000000017808         db  0x62 ; 'b'
0000000000017809         db  0x0a ; '.'
000000000001780a         db  0x0e ; '.'
000000000001780b         db  0x28 ; '('
000000000001780c         db  0x44 ; 'D'
000000000001780d         db  0x0e ; '.'
000000000001780e         db  0x20 ; ' '
000000000001780f         db  0x41 ; 'A'
0000000000017810         db  0x0e ; '.'
0000000000017811         db  0x18 ; '.'
0000000000017812         db  0x42 ; 'B'
0000000000017813         db  0x0e ; '.'
0000000000017814         db  0x10 ; '.'
0000000000017815         db  0x42 ; 'B'
0000000000017816         db  0x0e ; '.'
0000000000017817         db  0x08 ; '.'
0000000000017818         db  0x48 ; 'H'
0000000000017819         db  0x0b ; '.'
000000000001781a         db  0x5d ; ']'
000000000001781b         db  0x0a ; '.'
000000000001781c         db  0x0e ; '.'
000000000001781d         db  0x28 ; '('
000000000001781e         db  0x41 ; 'A'
000000000001781f         db  0x0e ; '.'
0000000000017820         db  0x20 ; ' '
0000000000017821         db  0x41 ; 'A'
0000000000017822         db  0x0e ; '.'
0000000000017823         db  0x18 ; '.'
0000000000017824         db  0x42 ; 'B'
0000000000017825         db  0x0e ; '.'
0000000000017826         db  0x10 ; '.'
0000000000017827         db  0x42 ; 'B'
0000000000017828         db  0x0e ; '.'
0000000000017829         db  0x08 ; '.'
000000000001782a         db  0x45 ; 'E'
000000000001782b         db  0x0b ; '.'
000000000001782c         db  0x44 ; 'D'
000000000001782d         db  0x0e ; '.'
000000000001782e         db  0x28 ; '('
000000000001782f         db  0x43 ; 'C'
0000000000017830         db  0x0e ; '.'
0000000000017831         db  0x20 ; ' '
0000000000017832         db  0x44 ; 'D'
0000000000017833         db  0x0e ; '.'
0000000000017834         db  0x18 ; '.'
0000000000017835         db  0x42 ; 'B'
0000000000017836         db  0x0e ; '.'
0000000000017837         db  0x10 ; '.'
0000000000017838         db  0x42 ; 'B'
0000000000017839         db  0x0e ; '.'
000000000001783a         db  0x08 ; '.'
000000000001783b         db  0x00 ; '.'
000000000001783c         db  0x00 ; '.'
000000000001783d         db  0x00 ; '.'
000000000001783e         db  0x00 ; '.'
000000000001783f         db  0x00 ; '.'
0000000000017840         dd         0x0000001c                                  ; Length of the record
0000000000017844         dd         0x00001444                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017848         db         0x48, 0x57, 2 dup (0xff)                    ; begin 0xcf90
000000000001784c         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0xd02f)
0000000000017850         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017851         db  0x44 ; 'D'
0000000000017852         db  0x0e ; '.'
0000000000017853         db  0x10 ; '.'
0000000000017854         db  0x83 ; '.'
0000000000017855         db  0x02 ; '.'
0000000000017856         db  0x02 ; '.'
0000000000017857         db  0x78 ; 'x'
0000000000017858         db  0x0a ; '.'
0000000000017859         db  0x0e ; '.'
000000000001785a         db  0x08 ; '.'
000000000001785b         db  0x41 ; 'A'
000000000001785c         db  0x0b ; '.'
000000000001785d         db  0x00 ; '.'
000000000001785e         db  0x00 ; '.'
000000000001785f         db  0x00 ; '.'
0000000000017860         dd         0x00000034                                  ; Length of the record
0000000000017864         dd         0x00001464                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017868         db         0xc8, 0x57, 2 dup (0xff)                    ; begin 0xd030
000000000001786c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0xd0a4)
0000000000017870         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017871         db  0x42 ; 'B'
0000000000017872         db  0x0e ; '.'
0000000000017873         db  0x10 ; '.'
0000000000017874         db  0x8c ; '.'
0000000000017875         db  0x02 ; '.'
0000000000017876         db  0x41 ; 'A'
0000000000017877         db  0x0e ; '.'
0000000000017878         db  0x18 ; '.'
0000000000017879         db  0x86 ; '.'
000000000001787a         db  0x03 ; '.'
000000000001787b         db  0x44 ; 'D'
000000000001787c         db  0x0e ; '.'
000000000001787d         db  0x20 ; ' '
000000000001787e         db  0x83 ; '.'
000000000001787f         db  0x04 ; '.'
0000000000017880         db  0x4a ; 'J'
0000000000017881         db  0x0e ; '.'
0000000000017882         db  0x30 ; '0'
0000000000017883         db  0x02 ; '.'
0000000000017884         db  0x4f ; 'O'
0000000000017885         db  0x0a ; '.'
0000000000017886         db  0x0e ; '.'
0000000000017887         db  0x20 ; ' '
0000000000017888         db  0x41 ; 'A'
0000000000017889         db  0x0e ; '.'
000000000001788a         db  0x18 ; '.'
000000000001788b         db  0x41 ; 'A'
000000000001788c         db  0x0e ; '.'
000000000001788d         db  0x10 ; '.'
000000000001788e         db  0x42 ; 'B'
000000000001788f         db  0x0e ; '.'
0000000000017890         db  0x08 ; '.'
0000000000017891         db  0x44 ; 'D'
0000000000017892         db  0x0b ; '.'
0000000000017893         db  0x00 ; '.'
0000000000017894         db  0x00 ; '.'
0000000000017895         db  0x00 ; '.'
0000000000017896         db  0x00 ; '.'
0000000000017897         db  0x00 ; '.'
0000000000017898         dd         0x0000002c                                  ; Length of the record
000000000001789c         dd         0x0000149c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000178a0         db         0x10, 0x58, 2 dup (0xff)                    ; begin 0xd0b0
00000000000178a4         db         0x54, 3 dup (0x00)                          ; length 0x54 (end at 0xd104)
00000000000178a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000178a9         db  0x41 ; 'A'
00000000000178aa         db  0x0e ; '.'
00000000000178ab         db  0x10 ; '.'
00000000000178ac         db  0x86 ; '.'
00000000000178ad         db  0x02 ; '.'
00000000000178ae         db  0x41 ; 'A'
00000000000178af         db  0x0e ; '.'
00000000000178b0         db  0x18 ; '.'
00000000000178b1         db  0x83 ; '.'
00000000000178b2         db  0x03 ; '.'
00000000000178b3         db  0x44 ; 'D'
00000000000178b4         db  0x0e ; '.'
00000000000178b5         db  0x30 ; '0'
00000000000178b6         db  0x02 ; '.'
00000000000178b7         db  0x44 ; 'D'
00000000000178b8         db  0x0a ; '.'
00000000000178b9         db  0x0e ; '.'
00000000000178ba         db  0x18 ; '.'
00000000000178bb         db  0x43 ; 'C'
00000000000178bc         db  0x0e ; '.'
00000000000178bd         db  0x10 ; '.'
00000000000178be         db  0x41 ; 'A'
00000000000178bf         db  0x0e ; '.'
00000000000178c0         db  0x08 ; '.'
00000000000178c1         db  0x41 ; 'A'
00000000000178c2         db  0x0b ; '.'
00000000000178c3         db  0x00 ; '.'
00000000000178c4         db  0x00 ; '.'
00000000000178c5         db  0x00 ; '.'
00000000000178c6         db  0x00 ; '.'
00000000000178c7         db  0x00 ; '.'
00000000000178c8         dd         0x00000040                                  ; Length of the record
00000000000178cc         dd         0x000014cc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000178d0         db         0x40, 0x58, 2 dup (0xff)                    ; begin 0xd110
00000000000178d4         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0xd1f7)
00000000000178d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000178d9         db  0x41 ; 'A'
00000000000178da         db  0x0e ; '.'
00000000000178db         db  0x10 ; '.'
00000000000178dc         db  0x86 ; '.'
00000000000178dd         db  0x02 ; '.'
00000000000178de         db  0x41 ; 'A'
00000000000178df         db  0x0e ; '.'
00000000000178e0         db  0x18 ; '.'
00000000000178e1         db  0x83 ; '.'
00000000000178e2         db  0x03 ; '.'
00000000000178e3         db  0x49 ; 'I'
00000000000178e4         db  0x0e ; '.'
00000000000178e5         db  0x20 ; ' '
00000000000178e6         db  0x6e ; 'n'
00000000000178e7         db  0x0a ; '.'
00000000000178e8         db  0x0e ; '.'
00000000000178e9         db  0x18 ; '.'
00000000000178ea         db  0x41 ; 'A'
00000000000178eb         db  0x0e ; '.'
00000000000178ec         db  0x10 ; '.'
00000000000178ed         db  0x41 ; 'A'
00000000000178ee         db  0x0e ; '.'
00000000000178ef         db  0x08 ; '.'
00000000000178f0         db  0x45 ; 'E'
00000000000178f1         db  0x0b ; '.'
00000000000178f2         db  0x02 ; '.'
00000000000178f3         db  0x4a ; 'J'
00000000000178f4         db  0x0a ; '.'
00000000000178f5         db  0x0e ; '.'
00000000000178f6         db  0x18 ; '.'
00000000000178f7         db  0x41 ; 'A'
00000000000178f8         db  0x0e ; '.'
00000000000178f9         db  0x10 ; '.'
00000000000178fa         db  0x41 ; 'A'
00000000000178fb         db  0x0e ; '.'
00000000000178fc         db  0x08 ; '.'
00000000000178fd         db  0x44 ; 'D'
00000000000178fe         db  0x0b ; '.'
00000000000178ff         db  0x02 ; '.'
0000000000017900         db  0x54 ; 'T'
0000000000017901         db  0x0e ; '.'
0000000000017902         db  0x18 ; '.'
0000000000017903         db  0x41 ; 'A'
0000000000017904         db  0x0e ; '.'
0000000000017905         db  0x10 ; '.'
0000000000017906         db  0x41 ; 'A'
0000000000017907         db  0x0e ; '.'
0000000000017908         db  0x08 ; '.'
0000000000017909         db  0x00 ; '.'
000000000001790a         db  0x00 ; '.'
000000000001790b         db  0x00 ; '.'
000000000001790c         dd         0x00000074                                  ; Length of the record
0000000000017910         dd         0x00001510                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017914         db         0xec, 0x58, 2 dup (0xff)                    ; begin 0xd200
0000000000017918         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0xe434)
000000000001791c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001791d         db  0x42 ; 'B'
000000000001791e         db  0x0e ; '.'
000000000001791f         db  0x10 ; '.'
0000000000017920         db  0x8f ; '.'
0000000000017921         db  0x02 ; '.'
0000000000017922         db  0x42 ; 'B'
0000000000017923         db  0x0e ; '.'
0000000000017924         db  0x18 ; '.'
0000000000017925         db  0x8e ; '.'
0000000000017926         db  0x03 ; '.'
0000000000017927         db  0x45 ; 'E'
0000000000017928         db  0x0e ; '.'
0000000000017929         db  0x20 ; ' '
000000000001792a         db  0x8d ; '.'
000000000001792b         db  0x04 ; '.'
000000000001792c         db  0x42 ; 'B'
000000000001792d         db  0x0e ; '.'
000000000001792e         db  0x28 ; '('
000000000001792f         db  0x8c ; '.'
0000000000017930         db  0x05 ; '.'
0000000000017931         db  0x44 ; 'D'
0000000000017932         db  0x0e ; '.'
0000000000017933         db  0x30 ; '0'
0000000000017934         db  0x86 ; '.'
0000000000017935         db  0x06 ; '.'
0000000000017936         db  0x41 ; 'A'
0000000000017937         db  0x0e ; '.'
0000000000017938         db  0x38 ; '8'
0000000000017939         db  0x83 ; '.'
000000000001793a         db  0x07 ; '.'
000000000001793b         db  0x53 ; 'S'
000000000001793c         db  0x0e ; '.'
000000000001793d         db  0xf0 ; '.'
000000000001793e         db  0x01 ; '.'
000000000001793f         db  0x03 ; '.'
0000000000017940         db  0x81 ; '.'
0000000000017941         db  0x0b ; '.'
0000000000017942         db  0x0e ; '.'
0000000000017943         db  0xf8 ; '.'
0000000000017944         db  0x01 ; '.'
0000000000017945         db  0x4a ; 'J'
0000000000017946         db  0x0e ; '.'
0000000000017947         db  0x80 ; '.'
0000000000017948         db  0x02 ; '.'
0000000000017949         db  0x44 ; 'D'
000000000001794a         db  0x0e ; '.'
000000000001794b         db  0x88 ; '.'
000000000001794c         db  0x02 ; '.'
000000000001794d         db  0x45 ; 'E'
000000000001794e         db  0x0e ; '.'
000000000001794f         db  0x90 ; '.'
0000000000017950         db  0x02 ; '.'
0000000000017951         db  0x5f ; '_'
0000000000017952         db  0x0e ; '.'
0000000000017953         db  0xf0 ; '.'
0000000000017954         db  0x01 ; '.'
0000000000017955         db  0x64 ; 'd'
0000000000017956         db  0x0a ; '.'
0000000000017957         db  0x0e ; '.'
0000000000017958         db  0x38 ; '8'
0000000000017959         db  0x41 ; 'A'
000000000001795a         db  0x0e ; '.'
000000000001795b         db  0x30 ; '0'
000000000001795c         db  0x41 ; 'A'
000000000001795d         db  0x0e ; '.'
000000000001795e         db  0x28 ; '('
000000000001795f         db  0x42 ; 'B'
0000000000017960         db  0x0e ; '.'
0000000000017961         db  0x20 ; ' '
0000000000017962         db  0x42 ; 'B'
0000000000017963         db  0x0e ; '.'
0000000000017964         db  0x18 ; '.'
0000000000017965         db  0x42 ; 'B'
0000000000017966         db  0x0e ; '.'
0000000000017967         db  0x10 ; '.'
0000000000017968         db  0x42 ; 'B'
0000000000017969         db  0x0e ; '.'
000000000001796a         db  0x08 ; '.'
000000000001796b         db  0x44 ; 'D'
000000000001796c         db  0x0b ; '.'
000000000001796d         db  0x03 ; '.'
000000000001796e         db  0x99 ; '.'
000000000001796f         db  0x05 ; '.'
0000000000017970         db  0x0e ; '.'
0000000000017971         db  0xf8 ; '.'
0000000000017972         db  0x01 ; '.'
0000000000017973         db  0x4d ; 'M'
0000000000017974         db  0x0e ; '.'
0000000000017975         db  0x80 ; '.'
0000000000017976         db  0x02 ; '.'
0000000000017977         db  0x44 ; 'D'
0000000000017978         db  0x0e ; '.'
0000000000017979         db  0x88 ; '.'
000000000001797a         db  0x02 ; '.'
000000000001797b         db  0x47 ; 'G'
000000000001797c         db  0x0e ; '.'
000000000001797d         db  0x90 ; '.'
000000000001797e         db  0x02 ; '.'
000000000001797f         db  0x5b ; '['
0000000000017980         db  0x0e ; '.'
0000000000017981         db  0xf0 ; '.'
0000000000017982         db  0x01 ; '.'
0000000000017983         db  0x00 ; '.'
0000000000017984         dd         0x00000068                                  ; Length of the record
0000000000017988         dd         0x00001588                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
000000000001798c         db         0xb4, 0x6a, 2 dup (0xff)                    ; begin 0xe440
0000000000017990         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0xe5eb)
0000000000017994         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017995         db  0x42 ; 'B'
0000000000017996         db  0x0e ; '.'
0000000000017997         db  0x10 ; '.'
0000000000017998         db  0x8f ; '.'
0000000000017999         db  0x02 ; '.'
000000000001799a         db  0x42 ; 'B'
000000000001799b         db  0x0e ; '.'
000000000001799c         db  0x18 ; '.'
000000000001799d         db  0x8e ; '.'
000000000001799e         db  0x03 ; '.'
000000000001799f         db  0x45 ; 'E'
00000000000179a0         db  0x0e ; '.'
00000000000179a1         db  0x20 ; ' '
00000000000179a2         db  0x8d ; '.'
00000000000179a3         db  0x04 ; '.'
00000000000179a4         db  0x42 ; 'B'
00000000000179a5         db  0x0e ; '.'
00000000000179a6         db  0x28 ; '('
00000000000179a7         db  0x8c ; '.'
00000000000179a8         db  0x05 ; '.'
00000000000179a9         db  0x44 ; 'D'
00000000000179aa         db  0x0e ; '.'
00000000000179ab         db  0x30 ; '0'
00000000000179ac         db  0x86 ; '.'
00000000000179ad         db  0x06 ; '.'
00000000000179ae         db  0x41 ; 'A'
00000000000179af         db  0x0e ; '.'
00000000000179b0         db  0x38 ; '8'
00000000000179b1         db  0x83 ; '.'
00000000000179b2         db  0x07 ; '.'
00000000000179b3         db  0x47 ; 'G'
00000000000179b4         db  0x0e ; '.'
00000000000179b5         db  0x60 ; '`'
00000000000179b6         db  0x02 ; '.'
00000000000179b7         db  0x99 ; '.'
00000000000179b8         db  0x0e ; '.'
00000000000179b9         db  0x68 ; 'h'
00000000000179ba         db  0x5f ; '_'
00000000000179bb         db  0x0e ; '.'
00000000000179bc         db  0x70 ; 'p'
00000000000179bd         db  0x46 ; 'F'
00000000000179be         db  0x0e ; '.'
00000000000179bf         db  0x78 ; 'x'
00000000000179c0         db  0x42 ; 'B'
00000000000179c1         db  0x0e ; '.'
00000000000179c2         db  0x80 ; '.'
00000000000179c3         db  0x01 ; '.'
00000000000179c4         db  0x59 ; 'Y'
00000000000179c5         db  0x0e ; '.'
00000000000179c6         db  0x60 ; '`'
00000000000179c7         db  0x02 ; '.'
00000000000179c8         db  0x40 ; '@'
00000000000179c9         db  0x0e ; '.'
00000000000179ca         db  0x68 ; 'h'
00000000000179cb         db  0x4b ; 'K'
00000000000179cc         db  0x0e ; '.'
00000000000179cd         db  0x70 ; 'p'
00000000000179ce         db  0x43 ; 'C'
00000000000179cf         db  0x0e ; '.'
00000000000179d0         db  0x78 ; 'x'
00000000000179d1         db  0x45 ; 'E'
00000000000179d2         db  0x0e ; '.'
00000000000179d3         db  0x80 ; '.'
00000000000179d4         db  0x01 ; '.'
00000000000179d5         db  0x5e ; '^'
00000000000179d6         db  0x0e ; '.'
00000000000179d7         db  0x60 ; '`'
00000000000179d8         db  0x4c ; 'L'
00000000000179d9         db  0x0a ; '.'
00000000000179da         db  0x0e ; '.'
00000000000179db         db  0x38 ; '8'
00000000000179dc         db  0x44 ; 'D'
00000000000179dd         db  0x0e ; '.'
00000000000179de         db  0x30 ; '0'
00000000000179df         db  0x41 ; 'A'
00000000000179e0         db  0x0e ; '.'
00000000000179e1         db  0x28 ; '('
00000000000179e2         db  0x42 ; 'B'
00000000000179e3         db  0x0e ; '.'
00000000000179e4         db  0x20 ; ' '
00000000000179e5         db  0x42 ; 'B'
00000000000179e6         db  0x0e ; '.'
00000000000179e7         db  0x18 ; '.'
00000000000179e8         db  0x42 ; 'B'
00000000000179e9         db  0x0e ; '.'
00000000000179ea         db  0x10 ; '.'
00000000000179eb         db  0x42 ; 'B'
00000000000179ec         db  0x0e ; '.'
00000000000179ed         db  0x08 ; '.'
00000000000179ee         db  0x46 ; 'F'
00000000000179ef         db  0x0b ; '.'
00000000000179f0         dd         0x00000028                                  ; Length of the record
00000000000179f4         dd         0x000015f4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000179f8         db         0xf8, 0x6b, 2 dup (0xff)                    ; begin 0xe5f0
00000000000179fc         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0xe626)
0000000000017a00         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017a01         db  0x42 ; 'B'
0000000000017a02         db  0x0e ; '.'
0000000000017a03         db  0x10 ; '.'
0000000000017a04         db  0x8c ; '.'
0000000000017a05         db  0x02 ; '.'
0000000000017a06         db  0x41 ; 'A'
0000000000017a07         db  0x0e ; '.'
0000000000017a08         db  0x18 ; '.'
0000000000017a09         db  0x86 ; '.'
0000000000017a0a         db  0x03 ; '.'
0000000000017a0b         db  0x41 ; 'A'
0000000000017a0c         db  0x0e ; '.'
0000000000017a0d         db  0x20 ; ' '
0000000000017a0e         db  0x83 ; '.'
0000000000017a0f         db  0x04 ; '.'
0000000000017a10         db  0x6e ; 'n'
0000000000017a11         db  0x0e ; '.'
0000000000017a12         db  0x18 ; '.'
0000000000017a13         db  0x41 ; 'A'
0000000000017a14         db  0x0e ; '.'
0000000000017a15         db  0x10 ; '.'
0000000000017a16         db  0x42 ; 'B'
0000000000017a17         db  0x0e ; '.'
0000000000017a18         db  0x08 ; '.'
0000000000017a19         db  0x00 ; '.'
0000000000017a1a         db  0x00 ; '.'
0000000000017a1b         db  0x00 ; '.'
0000000000017a1c         dd         0x00000010                                  ; Length of the record
0000000000017a20         dd         0x00001620                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017a24         db         0x0c, 0x6c, 2 dup (0xff)                    ; begin 0xe630
0000000000017a28         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0xe641)
0000000000017a2c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017a2d         align      16
0000000000017a30         dd         0x00000010                                  ; Length of the record
0000000000017a34         dd         0x00001634                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017a38         db         0x18, 0x6c, 2 dup (0xff)                    ; begin 0xe650
0000000000017a3c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0xe661)
0000000000017a40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017a41         align      4
0000000000017a44         dd         0x00000010                                  ; Length of the record
0000000000017a48         dd         0x00001648                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017a4c         db         0x24, 0x6c, 2 dup (0xff)                    ; begin 0xe670
0000000000017a50         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0xe6a5)
0000000000017a54         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017a55         align      8
0000000000017a58         dd         0x00000010                                  ; Length of the record
0000000000017a5c         dd         0x0000165c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017a60         db         0x50, 0x6c, 2 dup (0xff)                    ; begin 0xe6b0
0000000000017a64         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0xe6c5)
0000000000017a68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017a69         align      4
0000000000017a6c         dd         0x00000010                                  ; Length of the record
0000000000017a70         dd         0x00001670                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017a74         db         0x5c, 0x6c, 2 dup (0xff)                    ; begin 0xe6d0
0000000000017a78         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0xe700)
0000000000017a7c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017a7d         db  0x6b ; 'k'
0000000000017a7e         db  0x0e ; '.'
0000000000017a7f         db  0x10 ; '.'
0000000000017a80         dd         0x00000050                                  ; Length of the record
0000000000017a84         dd         0x00001684                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017a88         db         0x78, 0x6c, 2 dup (0xff)                    ; begin 0xe700
0000000000017a8c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0xe774)
0000000000017a90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017a91         db  0x42 ; 'B'
0000000000017a92         db  0x0e ; '.'
0000000000017a93         db  0x10 ; '.'
0000000000017a94         db  0x8f ; '.'
0000000000017a95         db  0x02 ; '.'
0000000000017a96         db  0x42 ; 'B'
0000000000017a97         db  0x0e ; '.'
0000000000017a98         db  0x18 ; '.'
0000000000017a99         db  0x8e ; '.'
0000000000017a9a         db  0x03 ; '.'
0000000000017a9b         db  0x49 ; 'I'
0000000000017a9c         db  0x0e ; '.'
0000000000017a9d         db  0x20 ; ' '
0000000000017a9e         db  0x8d ; '.'
0000000000017a9f         db  0x04 ; '.'
0000000000017aa0         db  0x42 ; 'B'
0000000000017aa1         db  0x0e ; '.'
0000000000017aa2         db  0x28 ; '('
0000000000017aa3         db  0x8c ; '.'
0000000000017aa4         db  0x05 ; '.'
0000000000017aa5         db  0x44 ; 'D'
0000000000017aa6         db  0x0e ; '.'
0000000000017aa7         db  0x30 ; '0'
0000000000017aa8         db  0x86 ; '.'
0000000000017aa9         db  0x06 ; '.'
0000000000017aaa         db  0x41 ; 'A'
0000000000017aab         db  0x0e ; '.'
0000000000017aac         db  0x38 ; '8'
0000000000017aad         db  0x83 ; '.'
0000000000017aae         db  0x07 ; '.'
0000000000017aaf         db  0x4d ; 'M'
0000000000017ab0         db  0x0e ; '.'
0000000000017ab1         db  0x50 ; 'P'
0000000000017ab2         db  0x5f ; '_'
0000000000017ab3         db  0x0e ; '.'
0000000000017ab4         db  0x58 ; 'X'
0000000000017ab5         db  0x47 ; 'G'
0000000000017ab6         db  0x0e ; '.'
0000000000017ab7         db  0x60 ; '`'
0000000000017ab8         db  0x46 ; 'F'
0000000000017ab9         db  0x0e ; '.'
0000000000017aba         db  0x68 ; 'h'
0000000000017abb         db  0x44 ; 'D'
0000000000017abc         db  0x0e ; '.'
0000000000017abd         db  0x70 ; 'p'
0000000000017abe         db  0x58 ; 'X'
0000000000017abf         db  0x0e ; '.'
0000000000017ac0         db  0x38 ; '8'
0000000000017ac1         db  0x41 ; 'A'
0000000000017ac2         db  0x0e ; '.'
0000000000017ac3         db  0x30 ; '0'
0000000000017ac4         db  0x41 ; 'A'
0000000000017ac5         db  0x0e ; '.'
0000000000017ac6         db  0x28 ; '('
0000000000017ac7         db  0x42 ; 'B'
0000000000017ac8         db  0x0e ; '.'
0000000000017ac9         db  0x20 ; ' '
0000000000017aca         db  0x42 ; 'B'
0000000000017acb         db  0x0e ; '.'
0000000000017acc         db  0x18 ; '.'
0000000000017acd         db  0x42 ; 'B'
0000000000017ace         db  0x0e ; '.'
0000000000017acf         db  0x10 ; '.'
0000000000017ad0         db  0x42 ; 'B'
0000000000017ad1         db  0x0e ; '.'
0000000000017ad2         db  0x08 ; '.'
0000000000017ad3         db  0x00 ; '.'
0000000000017ad4         dd         0x00000068                                  ; Length of the record
0000000000017ad8         dd         0x000016d8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017adc         db         0xa4, 0x6c, 2 dup (0xff)                    ; begin 0xe780
0000000000017ae0         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0xe863)
0000000000017ae4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017ae5         db  0x42 ; 'B'
0000000000017ae6         db  0x0e ; '.'
0000000000017ae7         db  0x10 ; '.'
0000000000017ae8         db  0x8f ; '.'
0000000000017ae9         db  0x02 ; '.'
0000000000017aea         db  0x42 ; 'B'
0000000000017aeb         db  0x0e ; '.'
0000000000017aec         db  0x18 ; '.'
0000000000017aed         db  0x8e ; '.'
0000000000017aee         db  0x03 ; '.'
0000000000017aef         db  0x49 ; 'I'
0000000000017af0         db  0x0e ; '.'
0000000000017af1         db  0x20 ; ' '
0000000000017af2         db  0x8d ; '.'
0000000000017af3         db  0x04 ; '.'
0000000000017af4         db  0x42 ; 'B'
0000000000017af5         db  0x0e ; '.'
0000000000017af6         db  0x28 ; '('
0000000000017af7         db  0x8c ; '.'
0000000000017af8         db  0x05 ; '.'
0000000000017af9         db  0x44 ; 'D'
0000000000017afa         db  0x0e ; '.'
0000000000017afb         db  0x30 ; '0'
0000000000017afc         db  0x86 ; '.'
0000000000017afd         db  0x06 ; '.'
0000000000017afe         db  0x41 ; 'A'
0000000000017aff         db  0x0e ; '.'
0000000000017b00         db  0x38 ; '8'
0000000000017b01         db  0x83 ; '.'
0000000000017b02         db  0x07 ; '.'
0000000000017b03         db  0x4d ; 'M'
0000000000017b04         db  0x0e ; '.'
0000000000017b05         db  0x70 ; 'p'
0000000000017b06         db  0x65 ; 'e'
0000000000017b07         db  0x0e ; '.'
0000000000017b08         db  0x78 ; 'x'
0000000000017b09         db  0x4d ; 'M'
0000000000017b0a         db  0x0e ; '.'
0000000000017b0b         db  0x80 ; '.'
0000000000017b0c         db  0x01 ; '.'
0000000000017b0d         db  0x46 ; 'F'
0000000000017b0e         db  0x0e ; '.'
0000000000017b0f         db  0x88 ; '.'
0000000000017b10         db  0x01 ; '.'
0000000000017b11         db  0x42 ; 'B'
0000000000017b12         db  0x0e ; '.'
0000000000017b13         db  0x90 ; '.'
0000000000017b14         db  0x01 ; '.'
0000000000017b15         db  0x5e ; '^'
0000000000017b16         db  0x0e ; '.'
0000000000017b17         db  0x70 ; 'p'
0000000000017b18         db  0x56 ; 'V'
0000000000017b19         db  0x0e ; '.'
0000000000017b1a         db  0x78 ; 'x'
0000000000017b1b         db  0x43 ; 'C'
0000000000017b1c         db  0x0e ; '.'
0000000000017b1d         db  0x80 ; '.'
0000000000017b1e         db  0x01 ; '.'
0000000000017b1f         db  0x43 ; 'C'
0000000000017b20         db  0x0e ; '.'
0000000000017b21         db  0x88 ; '.'
0000000000017b22         db  0x01 ; '.'
0000000000017b23         db  0x56 ; 'V'
0000000000017b24         db  0x0e ; '.'
0000000000017b25         db  0x90 ; '.'
0000000000017b26         db  0x01 ; '.'
0000000000017b27         db  0x52 ; 'R'
0000000000017b28         db  0x0e ; '.'
0000000000017b29         db  0x70 ; 'p'
0000000000017b2a         db  0x5b ; '['
0000000000017b2b         db  0x0e ; '.'
0000000000017b2c         db  0x38 ; '8'
0000000000017b2d         db  0x41 ; 'A'
0000000000017b2e         db  0x0e ; '.'
0000000000017b2f         db  0x30 ; '0'
0000000000017b30         db  0x41 ; 'A'
0000000000017b31         db  0x0e ; '.'
0000000000017b32         db  0x28 ; '('
0000000000017b33         db  0x42 ; 'B'
0000000000017b34         db  0x0e ; '.'
0000000000017b35         db  0x20 ; ' '
0000000000017b36         db  0x42 ; 'B'
0000000000017b37         db  0x0e ; '.'
0000000000017b38         db  0x18 ; '.'
0000000000017b39         db  0x42 ; 'B'
0000000000017b3a         db  0x0e ; '.'
0000000000017b3b         db  0x10 ; '.'
0000000000017b3c         db  0x42 ; 'B'
0000000000017b3d         db  0x0e ; '.'
0000000000017b3e         db  0x08 ; '.'
0000000000017b3f         db  0x00 ; '.'
0000000000017b40         dd         0x00000010                                  ; Length of the record
0000000000017b44         dd         0x00001744                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017b48         db         0x28, 0x6d, 2 dup (0xff)                    ; begin 0xe870
0000000000017b4c         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0xe87a)
0000000000017b50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017b51         align      4
0000000000017b54         dd         0x00000028                                  ; Length of the record
0000000000017b58         dd         0x00001758                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017b5c         db         0x24, 0x6d, 2 dup (0xff)                    ; begin 0xe880
0000000000017b60         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0xe913)
0000000000017b64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017b65         db  0x48 ; 'H'
0000000000017b66         db  0x0e ; '.'
0000000000017b67         db  0x10 ; '.'
0000000000017b68         db  0x8c ; '.'
0000000000017b69         db  0x02 ; '.'
0000000000017b6a         db  0x48 ; 'H'
0000000000017b6b         db  0x0e ; '.'
0000000000017b6c         db  0x18 ; '.'
0000000000017b6d         db  0x86 ; '.'
0000000000017b6e         db  0x03 ; '.'
0000000000017b6f         db  0x41 ; 'A'
0000000000017b70         db  0x0e ; '.'
0000000000017b71         db  0x20 ; ' '
0000000000017b72         db  0x83 ; '.'
0000000000017b73         db  0x04 ; '.'
0000000000017b74         db  0x02 ; '.'
0000000000017b75         db  0x74 ; 't'
0000000000017b76         db  0x0e ; '.'
0000000000017b77         db  0x18 ; '.'
0000000000017b78         db  0x4b ; 'K'
0000000000017b79         db  0x0e ; '.'
0000000000017b7a         db  0x10 ; '.'
0000000000017b7b         db  0x42 ; 'B'
0000000000017b7c         db  0x0e ; '.'
0000000000017b7d         db  0x08 ; '.'
0000000000017b7e         db  0x00 ; '.'
0000000000017b7f         db  0x00 ; '.'
0000000000017b80         dd         0x00000010                                  ; Length of the record
0000000000017b84         dd         0x00001784                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017b88         db         0x98, 0x6d, 2 dup (0xff)                    ; begin 0xe920
0000000000017b8c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0xe933)
0000000000017b90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017b91         align      4
0000000000017b94         dd         0x00000010                                  ; Length of the record
0000000000017b98         dd         0x00001798                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017b9c         db         0xa4, 0x6d, 2 dup (0xff)                    ; begin 0xe940
0000000000017ba0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0xe94c)
0000000000017ba4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017ba5         align      8
0000000000017ba8         dd         0x00000010                                  ; Length of the record
0000000000017bac         dd         0x000017ac                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017bb0         db         0xa0, 0x6d, 2 dup (0xff)                    ; begin 0xe950
0000000000017bb4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0xe968)
0000000000017bb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017bb9         align      4
0000000000017bbc         dd         0x00000010                                  ; Length of the record
0000000000017bc0         dd         0x000017c0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017bc4         db         0xac, 0x6d, 2 dup (0xff)                    ; begin 0xe970
0000000000017bc8         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0xe984)
0000000000017bcc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017bcd         align      16
0000000000017bd0         dd         0x00000018                                  ; Length of the record
0000000000017bd4         dd         0x000017d4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017bd8         db         0xb8, 0x6d, 2 dup (0xff)                    ; begin 0xe990
0000000000017bdc         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0xea1e)
0000000000017be0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017be1         db  0x44 ; 'D'
0000000000017be2         db  0x0e ; '.'
0000000000017be3         db  0x50 ; 'P'
0000000000017be4         db  0x02 ; '.'
0000000000017be5         db  0x7f ; '.'
0000000000017be6         db  0x0a ; '.'
0000000000017be7         db  0x0e ; '.'
0000000000017be8         db  0x08 ; '.'
0000000000017be9         db  0x41 ; 'A'
0000000000017bea         db  0x0b ; '.'
0000000000017beb         db  0x00 ; '.'
0000000000017bec         dd         0x00000018                                  ; Length of the record
0000000000017bf0         dd         0x000017f0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017bf4         db         0x2c, 0x6e, 2 dup (0xff)                    ; begin 0xea20
0000000000017bf8         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0xeaaa)
0000000000017bfc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017bfd         db  0x44 ; 'D'
0000000000017bfe         db  0x0e ; '.'
0000000000017bff         db  0x50 ; 'P'
0000000000017c00         db  0x02 ; '.'
0000000000017c01         db  0x7b ; '{'
0000000000017c02         db  0x0a ; '.'
0000000000017c03         db  0x0e ; '.'
0000000000017c04         db  0x08 ; '.'
0000000000017c05         db  0x41 ; 'A'
0000000000017c06         db  0x0b ; '.'
0000000000017c07         db  0x00 ; '.'
0000000000017c08         dd         0x00000010                                  ; Length of the record
0000000000017c0c         dd         0x0000180c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017c10         db         0xa0, 0x6e, 2 dup (0xff)                    ; begin 0xeab0
0000000000017c14         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0xeabc)
0000000000017c18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017c19         align      4
0000000000017c1c         dd         0x00000010                                  ; Length of the record
0000000000017c20         dd         0x00001820                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017c24         db         0x9c, 0x6e, 2 dup (0xff)                    ; begin 0xeac0
0000000000017c28         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0xeacf)
0000000000017c2c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017c2d         align      16
0000000000017c30         dd         0x00000018                                  ; Length of the record
0000000000017c34         dd         0x00001834                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017c38         db         0x98, 0x6e, 2 dup (0xff)                    ; begin 0xead0
0000000000017c3c         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0xeb68)
0000000000017c40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017c41         db  0x44 ; 'D'
0000000000017c42         db  0x0e ; '.'
0000000000017c43         db  0x50 ; 'P'
0000000000017c44         db  0x02 ; '.'
0000000000017c45         db  0x8e ; '.'
0000000000017c46         db  0x0a ; '.'
0000000000017c47         db  0x0e ; '.'
0000000000017c48         db  0x08 ; '.'
0000000000017c49         db  0x41 ; 'A'
0000000000017c4a         db  0x0b ; '.'
0000000000017c4b         db  0x00 ; '.'
0000000000017c4c         dd         0x00000010                                  ; Length of the record
0000000000017c50         dd         0x00001850                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017c54         db         0x1c, 0x6f, 2 dup (0xff)                    ; begin 0xeb70
0000000000017c58         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0xeb80)
0000000000017c5c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017c5d         align      32
0000000000017c60         dd         0x00000010                                  ; Length of the record
0000000000017c64         dd         0x00001864                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017c68         db         0x18, 0x6f, 2 dup (0xff)                    ; begin 0xeb80
0000000000017c6c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0xeb91)
0000000000017c70         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017c71         align      4
0000000000017c74         dd         0x00000010                                  ; Length of the record
0000000000017c78         dd         0x00001878                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017c7c         db         0x24, 0x6f, 2 dup (0xff)                    ; begin 0xeba0
0000000000017c80         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0xebaa)
0000000000017c84         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017c85         align      8
0000000000017c88         dd         0x00000018                                  ; Length of the record
0000000000017c8c         dd         0x0000188c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017c90         db         0x20, 0x6f, 2 dup (0xff)                    ; begin 0xebb0
0000000000017c94         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0xec3e)
0000000000017c98         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017c99         db  0x44 ; 'D'
0000000000017c9a         db  0x0e ; '.'
0000000000017c9b         db  0x50 ; 'P'
0000000000017c9c         db  0x02 ; '.'
0000000000017c9d         db  0x7f ; '.'
0000000000017c9e         db  0x0a ; '.'
0000000000017c9f         db  0x0e ; '.'
0000000000017ca0         db  0x08 ; '.'
0000000000017ca1         db  0x41 ; 'A'
0000000000017ca2         db  0x0b ; '.'
0000000000017ca3         db  0x00 ; '.'
0000000000017ca4         dd         0x00000018                                  ; Length of the record
0000000000017ca8         dd         0x000018a8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017cac         db         0x94, 0x6f, 2 dup (0xff)                    ; begin 0xec40
0000000000017cb0         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0xecd1)
0000000000017cb4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017cb5         db  0x44 ; 'D'
0000000000017cb6         db  0x0e ; '.'
0000000000017cb7         db  0x50 ; 'P'
0000000000017cb8         db  0x02 ; '.'
0000000000017cb9         db  0x82 ; '.'
0000000000017cba         db  0x0a ; '.'
0000000000017cbb         db  0x0e ; '.'
0000000000017cbc         db  0x08 ; '.'
0000000000017cbd         db  0x41 ; 'A'
0000000000017cbe         db  0x0b ; '.'
0000000000017cbf         db  0x00 ; '.'
0000000000017cc0         dd         0x00000010                                  ; Length of the record
0000000000017cc4         dd         0x000018c4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017cc8         db         0x18, 0x70, 2 dup (0xff)                    ; begin 0xece0
0000000000017ccc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0xecec)
0000000000017cd0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017cd1         align      4
0000000000017cd4         dd         0x00000010                                  ; Length of the record
0000000000017cd8         dd         0x000018d8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017cdc         db         0x14, 0x70, 2 dup (0xff)                    ; begin 0xecf0
0000000000017ce0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0xed07)
0000000000017ce4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017ce5         align      8
0000000000017ce8         dd         0x00000010                                  ; Length of the record
0000000000017cec         dd         0x000018ec                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017cf0         db         0x20, 0x70, 2 dup (0xff)                    ; begin 0xed10
0000000000017cf4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0xed23)
0000000000017cf8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017cf9         align      4
0000000000017cfc         dd         0x00000010                                  ; Length of the record
0000000000017d00         dd         0x00001900                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017d04         db         0x2c, 0x70, 2 dup (0xff)                    ; begin 0xed30
0000000000017d08         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0xed3c)
0000000000017d0c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017d0d         align      16
0000000000017d10         dd         0x00000010                                  ; Length of the record
0000000000017d14         dd         0x00001914                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017d18         db         0x28, 0x70, 2 dup (0xff)                    ; begin 0xed40
0000000000017d1c         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0xed54)
0000000000017d20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017d21         align      4
0000000000017d24         dd         0x00000010                                  ; Length of the record
0000000000017d28         dd         0x00001928                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017d2c         db         0x34, 0x70, 2 dup (0xff)                    ; begin 0xed60
0000000000017d30         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0xed73)
0000000000017d34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017d35         align      8
0000000000017d38         dd         0x00000014                                  ; Length of the record
0000000000017d3c         dd         0x0000193c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017d40         db         0x40, 0x70, 2 dup (0xff)                    ; begin 0xed80
0000000000017d44         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0xed98)
0000000000017d48         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017d49         align      16
0000000000017d50         dd         0x0000004c                                  ; Length of the record
0000000000017d54         dd         0x00001954                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017d58         db         0x48, 0x70, 2 dup (0xff)                    ; begin 0xeda0
0000000000017d5c         db         0x6a, 0x02, 2 dup (0x00)                    ; length 0x26a (end at 0xf00a)
0000000000017d60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017d61         db  0x42 ; 'B'
0000000000017d62         db  0x0e ; '.'
0000000000017d63         db  0x10 ; '.'
0000000000017d64         db  0x8f ; '.'
0000000000017d65         db  0x02 ; '.'
0000000000017d66         db  0x42 ; 'B'
0000000000017d67         db  0x0e ; '.'
0000000000017d68         db  0x18 ; '.'
0000000000017d69         db  0x8e ; '.'
0000000000017d6a         db  0x03 ; '.'
0000000000017d6b         db  0x45 ; 'E'
0000000000017d6c         db  0x0e ; '.'
0000000000017d6d         db  0x20 ; ' '
0000000000017d6e         db  0x8d ; '.'
0000000000017d6f         db  0x04 ; '.'
0000000000017d70         db  0x42 ; 'B'
0000000000017d71         db  0x0e ; '.'
0000000000017d72         db  0x28 ; '('
0000000000017d73         db  0x8c ; '.'
0000000000017d74         db  0x05 ; '.'
0000000000017d75         db  0x44 ; 'D'
0000000000017d76         db  0x0e ; '.'
0000000000017d77         db  0x30 ; '0'
0000000000017d78         db  0x86 ; '.'
0000000000017d79         db  0x06 ; '.'
0000000000017d7a         db  0x41 ; 'A'
0000000000017d7b         db  0x0e ; '.'
0000000000017d7c         db  0x38 ; '8'
0000000000017d7d         db  0x83 ; '.'
0000000000017d7e         db  0x07 ; '.'
0000000000017d7f         db  0x53 ; 'S'
0000000000017d80         db  0x0e ; '.'
0000000000017d81         db  0x80 ; '.'
0000000000017d82         db  0x03 ; '.'
0000000000017d83         db  0x02 ; '.'
0000000000017d84         db  0x58 ; 'X'
0000000000017d85         db  0x0a ; '.'
0000000000017d86         db  0x0e ; '.'
0000000000017d87         db  0x38 ; '8'
0000000000017d88         db  0x41 ; 'A'
0000000000017d89         db  0x0e ; '.'
0000000000017d8a         db  0x30 ; '0'
0000000000017d8b         db  0x41 ; 'A'
0000000000017d8c         db  0x0e ; '.'
0000000000017d8d         db  0x28 ; '('
0000000000017d8e         db  0x42 ; 'B'
0000000000017d8f         db  0x0e ; '.'
0000000000017d90         db  0x20 ; ' '
0000000000017d91         db  0x42 ; 'B'
0000000000017d92         db  0x0e ; '.'
0000000000017d93         db  0x18 ; '.'
0000000000017d94         db  0x42 ; 'B'
0000000000017d95         db  0x0e ; '.'
0000000000017d96         db  0x10 ; '.'
0000000000017d97         db  0x42 ; 'B'
0000000000017d98         db  0x0e ; '.'
0000000000017d99         db  0x08 ; '.'
0000000000017d9a         db  0x4b ; 'K'
0000000000017d9b         db  0x0b ; '.'
0000000000017d9c         db  0x00 ; '.'
0000000000017d9d         db  0x00 ; '.'
0000000000017d9e         db  0x00 ; '.'
0000000000017d9f         db  0x00 ; '.'
0000000000017da0         dd         0x00000034                                  ; Length of the record
0000000000017da4         dd         0x000019a4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017da8         db         0x68, 0x72, 2 dup (0xff)                    ; begin 0xf010
0000000000017dac         db         0x5e, 3 dup (0x00)                          ; length 0x5e (end at 0xf06e)
0000000000017db0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017db1         db  0x42 ; 'B'
0000000000017db2         db  0x0e ; '.'
0000000000017db3         db  0x10 ; '.'
0000000000017db4         db  0x8d ; '.'
0000000000017db5         db  0x02 ; '.'
0000000000017db6         db  0x42 ; 'B'
0000000000017db7         db  0x0e ; '.'
0000000000017db8         db  0x18 ; '.'
0000000000017db9         db  0x8c ; '.'
0000000000017dba         db  0x03 ; '.'
0000000000017dbb         db  0x44 ; 'D'
0000000000017dbc         db  0x0e ; '.'
0000000000017dbd         db  0x20 ; ' '
0000000000017dbe         db  0x86 ; '.'
0000000000017dbf         db  0x04 ; '.'
0000000000017dc0         db  0x41 ; 'A'
0000000000017dc1         db  0x0e ; '.'
0000000000017dc2         db  0x28 ; '('
0000000000017dc3         db  0x83 ; '.'
0000000000017dc4         db  0x05 ; '.'
0000000000017dc5         db  0x4a ; 'J'
0000000000017dc6         db  0x0e ; '.'
0000000000017dc7         db  0x30 ; '0'
0000000000017dc8         db  0x02 ; '.'
0000000000017dc9         db  0x41 ; 'A'
0000000000017dca         db  0x0e ; '.'
0000000000017dcb         db  0x28 ; '('
0000000000017dcc         db  0x44 ; 'D'
0000000000017dcd         db  0x0e ; '.'
0000000000017dce         db  0x20 ; ' '
0000000000017dcf         db  0x41 ; 'A'
0000000000017dd0         db  0x0e ; '.'
0000000000017dd1         db  0x18 ; '.'
0000000000017dd2         db  0x42 ; 'B'
0000000000017dd3         db  0x0e ; '.'
0000000000017dd4         db  0x10 ; '.'
0000000000017dd5         db  0x42 ; 'B'
0000000000017dd6         db  0x0e ; '.'
0000000000017dd7         db  0x08 ; '.'
0000000000017dd8         dd         0x00000038                                  ; Length of the record
0000000000017ddc         dd         0x000019dc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017de0         db         0x90, 0x72, 2 dup (0xff)                    ; begin 0xf070
0000000000017de4         db         0x27, 0x01, 2 dup (0x00)                    ; length 0x127 (end at 0xf197)
0000000000017de8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017de9         db  0x42 ; 'B'
0000000000017dea         db  0x0e ; '.'
0000000000017deb         db  0x10 ; '.'
0000000000017dec         db  0x8d ; '.'
0000000000017ded         db  0x02 ; '.'
0000000000017dee         db  0x42 ; 'B'
0000000000017def         db  0x0e ; '.'
0000000000017df0         db  0x18 ; '.'
0000000000017df1         db  0x8c ; '.'
0000000000017df2         db  0x03 ; '.'
0000000000017df3         db  0x44 ; 'D'
0000000000017df4         db  0x0e ; '.'
0000000000017df5         db  0x20 ; ' '
0000000000017df6         db  0x86 ; '.'
0000000000017df7         db  0x04 ; '.'
0000000000017df8         db  0x41 ; 'A'
0000000000017df9         db  0x0e ; '.'
0000000000017dfa         db  0x28 ; '('
0000000000017dfb         db  0x83 ; '.'
0000000000017dfc         db  0x05 ; '.'
0000000000017dfd         db  0x4f ; 'O'
0000000000017dfe         db  0x0e ; '.'
0000000000017dff         db  0xe0 ; '.'
0000000000017e00         db  0x02 ; '.'
0000000000017e01         db  0x02 ; '.'
0000000000017e02         db  0xb5 ; '.'
0000000000017e03         db  0x0a ; '.'
0000000000017e04         db  0x0e ; '.'
0000000000017e05         db  0x28 ; '('
0000000000017e06         db  0x41 ; 'A'
0000000000017e07         db  0x0e ; '.'
0000000000017e08         db  0x20 ; ' '
0000000000017e09         db  0x41 ; 'A'
0000000000017e0a         db  0x0e ; '.'
0000000000017e0b         db  0x18 ; '.'
0000000000017e0c         db  0x42 ; 'B'
0000000000017e0d         db  0x0e ; '.'
0000000000017e0e         db  0x10 ; '.'
0000000000017e0f         db  0x42 ; 'B'
0000000000017e10         db  0x0e ; '.'
0000000000017e11         db  0x08 ; '.'
0000000000017e12         db  0x45 ; 'E'
0000000000017e13         db  0x0b ; '.'
0000000000017e14         dd         0x0000005c                                  ; Length of the record
0000000000017e18         dd         0x00001a18                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017e1c         db         0x84, 0x73, 2 dup (0xff)                    ; begin 0xf1a0
0000000000017e20         db         0x92, 3 dup (0x00)                          ; length 0x92 (end at 0xf232)
0000000000017e24         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017e25         db  0x42 ; 'B'
0000000000017e26         db  0x0e ; '.'
0000000000017e27         db  0x10 ; '.'
0000000000017e28         db  0x8f ; '.'
0000000000017e29         db  0x02 ; '.'
0000000000017e2a         db  0x42 ; 'B'
0000000000017e2b         db  0x0e ; '.'
0000000000017e2c         db  0x18 ; '.'
0000000000017e2d         db  0x8e ; '.'
0000000000017e2e         db  0x03 ; '.'
0000000000017e2f         db  0x45 ; 'E'
0000000000017e30         db  0x0e ; '.'
0000000000017e31         db  0x20 ; ' '
0000000000017e32         db  0x8d ; '.'
0000000000017e33         db  0x04 ; '.'
0000000000017e34         db  0x42 ; 'B'
0000000000017e35         db  0x0e ; '.'
0000000000017e36         db  0x28 ; '('
0000000000017e37         db  0x8c ; '.'
0000000000017e38         db  0x05 ; '.'
0000000000017e39         db  0x41 ; 'A'
0000000000017e3a         db  0x0e ; '.'
0000000000017e3b         db  0x30 ; '0'
0000000000017e3c         db  0x86 ; '.'
0000000000017e3d         db  0x06 ; '.'
0000000000017e3e         db  0x41 ; 'A'
0000000000017e3f         db  0x0e ; '.'
0000000000017e40         db  0x38 ; '8'
0000000000017e41         db  0x83 ; '.'
0000000000017e42         db  0x07 ; '.'
0000000000017e43         db  0x4a ; 'J'
0000000000017e44         db  0x0e ; '.'
0000000000017e45         db  0x50 ; 'P'
0000000000017e46         db  0x76 ; 'v'
0000000000017e47         db  0x0a ; '.'
0000000000017e48         db  0x0e ; '.'
0000000000017e49         db  0x38 ; '8'
0000000000017e4a         db  0x43 ; 'C'
0000000000017e4b         db  0x0e ; '.'
0000000000017e4c         db  0x30 ; '0'
0000000000017e4d         db  0x41 ; 'A'
0000000000017e4e         db  0x0e ; '.'
0000000000017e4f         db  0x28 ; '('
0000000000017e50         db  0x42 ; 'B'
0000000000017e51         db  0x0e ; '.'
0000000000017e52         db  0x20 ; ' '
0000000000017e53         db  0x42 ; 'B'
0000000000017e54         db  0x0e ; '.'
0000000000017e55         db  0x18 ; '.'
0000000000017e56         db  0x42 ; 'B'
0000000000017e57         db  0x0e ; '.'
0000000000017e58         db  0x10 ; '.'
0000000000017e59         db  0x42 ; 'B'
0000000000017e5a         db  0x0e ; '.'
0000000000017e5b         db  0x08 ; '.'
0000000000017e5c         db  0x47 ; 'G'
0000000000017e5d         db  0x0b ; '.'
0000000000017e5e         db  0x5a ; 'Z'
0000000000017e5f         db  0x0e ; '.'
0000000000017e60         db  0x38 ; '8'
0000000000017e61         db  0x4a ; 'J'
0000000000017e62         db  0x0e ; '.'
0000000000017e63         db  0x30 ; '0'
0000000000017e64         db  0x41 ; 'A'
0000000000017e65         db  0x0e ; '.'
0000000000017e66         db  0x28 ; '('
0000000000017e67         db  0x42 ; 'B'
0000000000017e68         db  0x0e ; '.'
0000000000017e69         db  0x20 ; ' '
0000000000017e6a         db  0x42 ; 'B'
0000000000017e6b         db  0x0e ; '.'
0000000000017e6c         db  0x18 ; '.'
0000000000017e6d         db  0x42 ; 'B'
0000000000017e6e         db  0x0e ; '.'
0000000000017e6f         db  0x10 ; '.'
0000000000017e70         db  0x42 ; 'B'
0000000000017e71         db  0x0e ; '.'
0000000000017e72         db  0x08 ; '.'
0000000000017e73         db  0x00 ; '.'
0000000000017e74         dd         0x00000010                                  ; Length of the record
0000000000017e78         dd         0x00001a78                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017e7c         db         0xc4, 0x73, 2 dup (0xff)                    ; begin 0xf240
0000000000017e80         db         0x12, 3 dup (0x00)                          ; length 0x12 (end at 0xf252)
0000000000017e84         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017e85         align      8
0000000000017e88         dd         0x00000010                                  ; Length of the record
0000000000017e8c         dd         0x00001a8c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017e90         db         0xd0, 0x73, 2 dup (0xff)                    ; begin 0xf260
0000000000017e94         db         0x1e, 3 dup (0x00)                          ; length 0x1e (end at 0xf27e)
0000000000017e98         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017e99         align      4
0000000000017e9c         dd         0x00000010                                  ; Length of the record
0000000000017ea0         dd         0x00001aa0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017ea4         db         0xdc, 0x73, 2 dup (0xff)                    ; begin 0xf280
0000000000017ea8         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0xf28b)
0000000000017eac         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017ead         align      16
0000000000017eb0         dd         0x0000004c                                  ; Length of the record
0000000000017eb4         dd         0x00001ab4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017eb8         db         0xd8, 0x73, 2 dup (0xff)                    ; begin 0xf290
0000000000017ebc         db         0x78, 0x03, 2 dup (0x00)                    ; length 0x378 (end at 0xf608)
0000000000017ec0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017ec1         db  0x42 ; 'B'
0000000000017ec2         db  0x0e ; '.'
0000000000017ec3         db  0x10 ; '.'
0000000000017ec4         db  0x8f ; '.'
0000000000017ec5         db  0x02 ; '.'
0000000000017ec6         db  0x49 ; 'I'
0000000000017ec7         db  0x0e ; '.'
0000000000017ec8         db  0x18 ; '.'
0000000000017ec9         db  0x8e ; '.'
0000000000017eca         db  0x03 ; '.'
0000000000017ecb         db  0x42 ; 'B'
0000000000017ecc         db  0x0e ; '.'
0000000000017ecd         db  0x20 ; ' '
0000000000017ece         db  0x8d ; '.'
0000000000017ecf         db  0x04 ; '.'
0000000000017ed0         db  0x42 ; 'B'
0000000000017ed1         db  0x0e ; '.'
0000000000017ed2         db  0x28 ; '('
0000000000017ed3         db  0x8c ; '.'
0000000000017ed4         db  0x05 ; '.'
0000000000017ed5         db  0x43 ; 'C'
0000000000017ed6         db  0x0e ; '.'
0000000000017ed7         db  0x30 ; '0'
0000000000017ed8         db  0x86 ; '.'
0000000000017ed9         db  0x06 ; '.'
0000000000017eda         db  0x41 ; 'A'
0000000000017edb         db  0x0e ; '.'
0000000000017edc         db  0x38 ; '8'
0000000000017edd         db  0x83 ; '.'
0000000000017ede         db  0x07 ; '.'
0000000000017edf         db  0x44 ; 'D'
0000000000017ee0         db  0x0e ; '.'
0000000000017ee1         db  0x80 ; '.'
0000000000017ee2         db  0x01 ; '.'
0000000000017ee3         db  0x03 ; '.'
0000000000017ee4         db  0x48 ; 'H'
0000000000017ee5         db  0x01 ; '.'
0000000000017ee6         db  0x0a ; '.'
0000000000017ee7         db  0x0e ; '.'
0000000000017ee8         db  0x38 ; '8'
0000000000017ee9         db  0x44 ; 'D'
0000000000017eea         db  0x0e ; '.'
0000000000017eeb         db  0x30 ; '0'
0000000000017eec         db  0x41 ; 'A'
0000000000017eed         db  0x0e ; '.'
0000000000017eee         db  0x28 ; '('
0000000000017eef         db  0x42 ; 'B'
0000000000017ef0         db  0x0e ; '.'
0000000000017ef1         db  0x20 ; ' '
0000000000017ef2         db  0x42 ; 'B'
0000000000017ef3         db  0x0e ; '.'
0000000000017ef4         db  0x18 ; '.'
0000000000017ef5         db  0x42 ; 'B'
0000000000017ef6         db  0x0e ; '.'
0000000000017ef7         db  0x10 ; '.'
0000000000017ef8         db  0x42 ; 'B'
0000000000017ef9         db  0x0e ; '.'
0000000000017efa         db  0x08 ; '.'
0000000000017efb         db  0x44 ; 'D'
0000000000017efc         db  0x0b ; '.'
0000000000017efd         db  0x00 ; '.'
0000000000017efe         db  0x00 ; '.'
0000000000017eff         db  0x00 ; '.'
0000000000017f00         dd         0x0000002c                                  ; Length of the record
0000000000017f04         dd         0x00001b04                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017f08         db         0x08, 0x77, 2 dup (0xff)                    ; begin 0xf610
0000000000017f0c         db         0x5a, 3 dup (0x00)                          ; length 0x5a (end at 0xf66a)
0000000000017f10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017f11         db  0x42 ; 'B'
0000000000017f12         db  0x0e ; '.'
0000000000017f13         db  0x10 ; '.'
0000000000017f14         db  0x8c ; '.'
0000000000017f15         db  0x02 ; '.'
0000000000017f16         db  0x41 ; 'A'
0000000000017f17         db  0x0e ; '.'
0000000000017f18         db  0x18 ; '.'
0000000000017f19         db  0x86 ; '.'
0000000000017f1a         db  0x03 ; '.'
0000000000017f1b         db  0x43 ; 'C'
0000000000017f1c         db  0x0e ; '.'
0000000000017f1d         db  0x20 ; ' '
0000000000017f1e         db  0x83 ; '.'
0000000000017f1f         db  0x04 ; '.'
0000000000017f20         db  0x6a ; 'j'
0000000000017f21         db  0x0a ; '.'
0000000000017f22         db  0x0e ; '.'
0000000000017f23         db  0x18 ; '.'
0000000000017f24         db  0x41 ; 'A'
0000000000017f25         db  0x0e ; '.'
0000000000017f26         db  0x10 ; '.'
0000000000017f27         db  0x42 ; 'B'
0000000000017f28         db  0x0e ; '.'
0000000000017f29         db  0x08 ; '.'
0000000000017f2a         db  0x45 ; 'E'
0000000000017f2b         db  0x0b ; '.'
0000000000017f2c         db  0x00 ; '.'
0000000000017f2d         db  0x00 ; '.'
0000000000017f2e         db  0x00 ; '.'
0000000000017f2f         db  0x00 ; '.'
0000000000017f30         dd         0x00000020                                  ; Length of the record
0000000000017f34         dd         0x00001b34                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017f38         db         0x38, 0x77, 2 dup (0xff)                    ; begin 0xf670
0000000000017f3c         db         0x7c, 3 dup (0x00)                          ; length 0x7c (end at 0xf6ec)
0000000000017f40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017f41         db  0x41 ; 'A'
0000000000017f42         db  0x0e ; '.'
0000000000017f43         db  0x10 ; '.'
0000000000017f44         db  0x83 ; '.'
0000000000017f45         db  0x02 ; '.'
0000000000017f46         db  0x4f ; 'O'
0000000000017f47         db  0x0e ; '.'
0000000000017f48         db  0xb0 ; '.'
0000000000017f49         db  0x01 ; '.'
0000000000017f4a         db  0x02 ; '.'
0000000000017f4b         db  0x65 ; 'e'
0000000000017f4c         db  0x0a ; '.'
0000000000017f4d         db  0x0e ; '.'
0000000000017f4e         db  0x10 ; '.'
0000000000017f4f         db  0x41 ; 'A'
0000000000017f50         db  0x0e ; '.'
0000000000017f51         db  0x08 ; '.'
0000000000017f52         db  0x41 ; 'A'
0000000000017f53         db  0x0b ; '.'
0000000000017f54         dd         0x00000010                                  ; Length of the record
0000000000017f58         dd         0x00001b58                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017f5c         db         0x94, 0x77, 2 dup (0xff)                    ; begin 0xf6f0
0000000000017f60         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0xf6fa)
0000000000017f64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017f65         align      8
0000000000017f68         dd         0x00000010                                  ; Length of the record
0000000000017f6c         dd         0x00001b6c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017f70         db         0x90, 0x77, 2 dup (0xff)                    ; begin 0xf700
0000000000017f74         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0xf716)
0000000000017f78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017f79         align      4
0000000000017f7c         dd         0x00000048                                  ; Length of the record
0000000000017f80         dd         0x00001b80                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017f84         db         0x9c, 0x77, 2 dup (0xff)                    ; begin 0xf720
0000000000017f88         db         0x74, 0x01, 2 dup (0x00)                    ; length 0x174 (end at 0xf894)
0000000000017f8c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017f8d         db  0x42 ; 'B'
0000000000017f8e         db  0x0e ; '.'
0000000000017f8f         db  0x10 ; '.'
0000000000017f90         db  0x8f ; '.'
0000000000017f91         db  0x02 ; '.'
0000000000017f92         db  0x42 ; 'B'
0000000000017f93         db  0x0e ; '.'
0000000000017f94         db  0x18 ; '.'
0000000000017f95         db  0x8e ; '.'
0000000000017f96         db  0x03 ; '.'
0000000000017f97         db  0x45 ; 'E'
0000000000017f98         db  0x0e ; '.'
0000000000017f99         db  0x20 ; ' '
0000000000017f9a         db  0x8d ; '.'
0000000000017f9b         db  0x04 ; '.'
0000000000017f9c         db  0x42 ; 'B'
0000000000017f9d         db  0x0e ; '.'
0000000000017f9e         db  0x28 ; '('
0000000000017f9f         db  0x8c ; '.'
0000000000017fa0         db  0x05 ; '.'
0000000000017fa1         db  0x44 ; 'D'
0000000000017fa2         db  0x0e ; '.'
0000000000017fa3         db  0x30 ; '0'
0000000000017fa4         db  0x86 ; '.'
0000000000017fa5         db  0x06 ; '.'
0000000000017fa6         db  0x41 ; 'A'
0000000000017fa7         db  0x0e ; '.'
0000000000017fa8         db  0x38 ; '8'
0000000000017fa9         db  0x83 ; '.'
0000000000017faa         db  0x07 ; '.'
0000000000017fab         db  0x46 ; 'F'
0000000000017fac         db  0x0e ; '.'
0000000000017fad         db  0x70 ; 'p'
0000000000017fae         db  0x03 ; '.'
0000000000017faf         db  0x31 ; '1'
0000000000017fb0         db  0x01 ; '.'
0000000000017fb1         db  0x0a ; '.'
0000000000017fb2         db  0x0e ; '.'
0000000000017fb3         db  0x38 ; '8'
0000000000017fb4         db  0x43 ; 'C'
0000000000017fb5         db  0x0e ; '.'
0000000000017fb6         db  0x30 ; '0'
0000000000017fb7         db  0x41 ; 'A'
0000000000017fb8         db  0x0e ; '.'
0000000000017fb9         db  0x28 ; '('
0000000000017fba         db  0x42 ; 'B'
0000000000017fbb         db  0x0e ; '.'
0000000000017fbc         db  0x20 ; ' '
0000000000017fbd         db  0x42 ; 'B'
0000000000017fbe         db  0x0e ; '.'
0000000000017fbf         db  0x18 ; '.'
0000000000017fc0         db  0x42 ; 'B'
0000000000017fc1         db  0x0e ; '.'
0000000000017fc2         db  0x10 ; '.'
0000000000017fc3         db  0x42 ; 'B'
0000000000017fc4         db  0x0e ; '.'
0000000000017fc5         db  0x08 ; '.'
0000000000017fc6         db  0x41 ; 'A'
0000000000017fc7         db  0x0b ; '.'
0000000000017fc8         dd         0x00000020                                  ; Length of the record
0000000000017fcc         dd         0x00001bcc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017fd0         db         0xd0, 0x78, 2 dup (0xff)                    ; begin 0xf8a0
0000000000017fd4         db         0x86, 3 dup (0x00)                          ; length 0x86 (end at 0xf926)
0000000000017fd8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017fd9         db  0x44 ; 'D'
0000000000017fda         db  0x0e ; '.'
0000000000017fdb         db  0x20 ; ' '
0000000000017fdc         db  0x02 ; '.'
0000000000017fdd         db  0x49 ; 'I'
0000000000017fde         db  0x0a ; '.'
0000000000017fdf         db  0x0e ; '.'
0000000000017fe0         db  0x08 ; '.'
0000000000017fe1         db  0x43 ; 'C'
0000000000017fe2         db  0x0b ; '.'
0000000000017fe3         db  0x55 ; 'U'
0000000000017fe4         db  0x0a ; '.'
0000000000017fe5         db  0x0e ; '.'
0000000000017fe6         db  0x08 ; '.'
0000000000017fe7         db  0x4b ; 'K'
0000000000017fe8         db  0x0b ; '.'
0000000000017fe9         db  0x55 ; 'U'
0000000000017fea         db  0x0e ; '.'
0000000000017feb         db  0x08 ; '.'
0000000000017fec         dd         0x00000010                                  ; Length of the record
0000000000017ff0         dd         0x00001bf0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000017ff4         db         0x3c, 0x79, 2 dup (0xff)                    ; begin 0xf930
0000000000017ff8         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0xf93b)
0000000000017ffc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000017ffd         align      32768
0000000000018000         dd         0x00000014                                  ; Length of the record
0000000000018004         dd         0x00001c04                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018008         db         0x38, 0x79, 2 dup (0xff)                    ; begin 0xf940
000000000001800c         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0xf94b)
0000000000018010         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018011         align      8
0000000000018018         dd         0x00000034                                  ; Length of the record
000000000001801c         dd         0x00001c1c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018020         db         0x30, 0x79, 2 dup (0xff)                    ; begin 0xf950
0000000000018024         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0xf98f)
0000000000018028         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018029         db  0x42 ; 'B'
000000000001802a         db  0x0e ; '.'
000000000001802b         db  0x10 ; '.'
000000000001802c         db  0x8d ; '.'
000000000001802d         db  0x02 ; '.'
000000000001802e         db  0x42 ; 'B'
000000000001802f         db  0x0e ; '.'
0000000000018030         db  0x18 ; '.'
0000000000018031         db  0x8c ; '.'
0000000000018032         db  0x03 ; '.'
0000000000018033         db  0x41 ; 'A'
0000000000018034         db  0x0e ; '.'
0000000000018035         db  0x20 ; ' '
0000000000018036         db  0x86 ; '.'
0000000000018037         db  0x04 ; '.'
0000000000018038         db  0x41 ; 'A'
0000000000018039         db  0x0e ; '.'
000000000001803a         db  0x28 ; '('
000000000001803b         db  0x83 ; '.'
000000000001803c         db  0x05 ; '.'
000000000001803d         db  0x46 ; 'F'
000000000001803e         db  0x0e ; '.'
000000000001803f         db  0x30 ; '0'
0000000000018040         db  0x6a ; 'j'
0000000000018041         db  0x0e ; '.'
0000000000018042         db  0x28 ; '('
0000000000018043         db  0x43 ; 'C'
0000000000018044         db  0x0e ; '.'
0000000000018045         db  0x20 ; ' '
0000000000018046         db  0x41 ; 'A'
0000000000018047         db  0x0e ; '.'
0000000000018048         db  0x18 ; '.'
0000000000018049         db  0x42 ; 'B'
000000000001804a         db  0x0e ; '.'
000000000001804b         db  0x10 ; '.'
000000000001804c         db  0x42 ; 'B'
000000000001804d         db  0x0e ; '.'
000000000001804e         db  0x08 ; '.'
000000000001804f         db  0x00 ; '.'
0000000000018050         dd         0x00000010                                  ; Length of the record
0000000000018054         dd         0x00001c54                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018058         db         0x38, 0x79, 2 dup (0xff)                    ; begin 0xf990
000000000001805c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0xf99c)
0000000000018060         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018061         align      4
0000000000018064         dd         0x00000010                                  ; Length of the record
0000000000018068         dd         0x00001c68                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
000000000001806c         db         0x34, 0x79, 2 dup (0xff)                    ; begin 0xf9a0
0000000000018070         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0xf9aa)
0000000000018074         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018075         align      8
0000000000018078         dd         0x0000004c                                  ; Length of the record
000000000001807c         dd         0x00001c7c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018080         db         0x30, 0x79, 2 dup (0xff)                    ; begin 0xf9b0
0000000000018084         db         0x7e, 0x07, 2 dup (0x00)                    ; length 0x77e (end at 0x1012e)
0000000000018088         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018089         db  0x42 ; 'B'
000000000001808a         db  0x0e ; '.'
000000000001808b         db  0x10 ; '.'
000000000001808c         db  0x8f ; '.'
000000000001808d         db  0x02 ; '.'
000000000001808e         db  0x42 ; 'B'
000000000001808f         db  0x0e ; '.'
0000000000018090         db  0x18 ; '.'
0000000000018091         db  0x8e ; '.'
0000000000018092         db  0x03 ; '.'
0000000000018093         db  0x42 ; 'B'
0000000000018094         db  0x0e ; '.'
0000000000018095         db  0x20 ; ' '
0000000000018096         db  0x8d ; '.'
0000000000018097         db  0x04 ; '.'
0000000000018098         db  0x42 ; 'B'
0000000000018099         db  0x0e ; '.'
000000000001809a         db  0x28 ; '('
000000000001809b         db  0x8c ; '.'
000000000001809c         db  0x05 ; '.'
000000000001809d         db  0x41 ; 'A'
000000000001809e         db  0x0e ; '.'
000000000001809f         db  0x30 ; '0'
00000000000180a0         db  0x86 ; '.'
00000000000180a1         db  0x06 ; '.'
00000000000180a2         db  0x41 ; 'A'
00000000000180a3         db  0x0e ; '.'
00000000000180a4         db  0x38 ; '8'
00000000000180a5         db  0x83 ; '.'
00000000000180a6         db  0x07 ; '.'
00000000000180a7         db  0x4d ; 'M'
00000000000180a8         db  0x0e ; '.'
00000000000180a9         db  0xe0 ; '.'
00000000000180aa         db  0x02 ; '.'
00000000000180ab         db  0x03 ; '.'
00000000000180ac         db  0x48 ; 'H'
00000000000180ad         db  0x01 ; '.'
00000000000180ae         db  0x0a ; '.'
00000000000180af         db  0x0e ; '.'
00000000000180b0         db  0x38 ; '8'
00000000000180b1         db  0x41 ; 'A'
00000000000180b2         db  0x0e ; '.'
00000000000180b3         db  0x30 ; '0'
00000000000180b4         db  0x41 ; 'A'
00000000000180b5         db  0x0e ; '.'
00000000000180b6         db  0x28 ; '('
00000000000180b7         db  0x42 ; 'B'
00000000000180b8         db  0x0e ; '.'
00000000000180b9         db  0x20 ; ' '
00000000000180ba         db  0x42 ; 'B'
00000000000180bb         db  0x0e ; '.'
00000000000180bc         db  0x18 ; '.'
00000000000180bd         db  0x42 ; 'B'
00000000000180be         db  0x0e ; '.'
00000000000180bf         db  0x10 ; '.'
00000000000180c0         db  0x42 ; 'B'
00000000000180c1         db  0x0e ; '.'
00000000000180c2         db  0x08 ; '.'
00000000000180c3         db  0x47 ; 'G'
00000000000180c4         db  0x0b ; '.'
00000000000180c5         db  0x00 ; '.'
00000000000180c6         db  0x00 ; '.'
00000000000180c7         db  0x00 ; '.'
00000000000180c8         dd         0x00000014                                  ; Length of the record
00000000000180cc         dd         0x00001ccc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000180d0         db         0x60, 0x80, 2 dup (0xff)                    ; begin 0x10130
00000000000180d4         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0x10146)
00000000000180d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000180d9         align      32
00000000000180e0         dd         0x00000040                                  ; Length of the record
00000000000180e4         dd         0x00001ce4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000180e8         db         0x68, 0x80, 2 dup (0xff)                    ; begin 0x10150
00000000000180ec         db         0xd6, 3 dup (0x00)                          ; length 0xd6 (end at 0x10226)
00000000000180f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000180f1         db  0x41 ; 'A'
00000000000180f2         db  0x0e ; '.'
00000000000180f3         db  0x10 ; '.'
00000000000180f4         db  0x86 ; '.'
00000000000180f5         db  0x02 ; '.'
00000000000180f6         db  0x41 ; 'A'
00000000000180f7         db  0x0e ; '.'
00000000000180f8         db  0x18 ; '.'
00000000000180f9         db  0x83 ; '.'
00000000000180fa         db  0x03 ; '.'
00000000000180fb         db  0x47 ; 'G'
00000000000180fc         db  0x0e ; '.'
00000000000180fd         db  0x30 ; '0'
00000000000180fe         db  0x73 ; 's'
00000000000180ff         db  0x0a ; '.'
0000000000018100         db  0x0e ; '.'
0000000000018101         db  0x18 ; '.'
0000000000018102         db  0x41 ; 'A'
0000000000018103         db  0x0e ; '.'
0000000000018104         db  0x10 ; '.'
0000000000018105         db  0x41 ; 'A'
0000000000018106         db  0x0e ; '.'
0000000000018107         db  0x08 ; '.'
0000000000018108         db  0x42 ; 'B'
0000000000018109         db  0x0b ; '.'
000000000001810a         db  0x72 ; 'r'
000000000001810b         db  0x0a ; '.'
000000000001810c         db  0x0e ; '.'
000000000001810d         db  0x18 ; '.'
000000000001810e         db  0x43 ; 'C'
000000000001810f         db  0x0e ; '.'
0000000000018110         db  0x10 ; '.'
0000000000018111         db  0x41 ; 'A'
0000000000018112         db  0x0e ; '.'
0000000000018113         db  0x08 ; '.'
0000000000018114         db  0x4a ; 'J'
0000000000018115         db  0x0b ; '.'
0000000000018116         db  0x7e ; '~'
0000000000018117         db  0x0a ; '.'
0000000000018118         db  0x0e ; '.'
0000000000018119         db  0x18 ; '.'
000000000001811a         db  0x41 ; 'A'
000000000001811b         db  0x0e ; '.'
000000000001811c         db  0x10 ; '.'
000000000001811d         db  0x41 ; 'A'
000000000001811e         db  0x0e ; '.'
000000000001811f         db  0x08 ; '.'
0000000000018120         db  0x48 ; 'H'
0000000000018121         db  0x0b ; '.'
0000000000018122         db  0x00 ; '.'
0000000000018123         db  0x00 ; '.'
0000000000018124         dd         0x00000014                                  ; Length of the record
0000000000018128         dd         0x00001d28                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
000000000001812c         db         0x04, 0x81, 2 dup (0xff)                    ; begin 0x10230
0000000000018130         db         0xa9, 3 dup (0x00)                          ; length 0xa9 (end at 0x102d9)
0000000000018134         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018135         db  0x02 ; '.'
0000000000018136         db  0x94 ; '.'
0000000000018137         db  0x0e ; '.'
0000000000018138         db  0x10 ; '.'
0000000000018139         db  0x54 ; 'T'
000000000001813a         db  0x0e ; '.'
000000000001813b         db  0x08 ; '.'
000000000001813c         dd         0x00000010                                  ; Length of the record
0000000000018140         dd         0x00001d40                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018144         db         0x9c, 0x81, 2 dup (0xff)                    ; begin 0x102e0
0000000000018148         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x102ea)
000000000001814c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001814d         align      16
0000000000018150         dd         0x00000044                                  ; Length of the record
0000000000018154         dd         0x00001d54                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018158         db         0x98, 0x81, 2 dup (0xff)                    ; begin 0x102f0
000000000001815c         db         0x5e, 0x04, 2 dup (0x00)                    ; length 0x45e (end at 0x1074e)
0000000000018160         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018161         db  0x42 ; 'B'
0000000000018162         db  0x0e ; '.'
0000000000018163         db  0x10 ; '.'
0000000000018164         db  0x8e ; '.'
0000000000018165         db  0x02 ; '.'
0000000000018166         db  0x42 ; 'B'
0000000000018167         db  0x0e ; '.'
0000000000018168         db  0x18 ; '.'
0000000000018169         db  0x8d ; '.'
000000000001816a         db  0x03 ; '.'
000000000001816b         db  0x42 ; 'B'
000000000001816c         db  0x0e ; '.'
000000000001816d         db  0x20 ; ' '
000000000001816e         db  0x8c ; '.'
000000000001816f         db  0x04 ; '.'
0000000000018170         db  0x41 ; 'A'
0000000000018171         db  0x0e ; '.'
0000000000018172         db  0x28 ; '('
0000000000018173         db  0x86 ; '.'
0000000000018174         db  0x05 ; '.'
0000000000018175         db  0x44 ; 'D'
0000000000018176         db  0x0e ; '.'
0000000000018177         db  0x30 ; '0'
0000000000018178         db  0x83 ; '.'
0000000000018179         db  0x06 ; '.'
000000000001817a         db  0x49 ; 'I'
000000000001817b         db  0x0e ; '.'
000000000001817c         db  0xc0 ; '.'
000000000001817d         db  0x02 ; '.'
000000000001817e         db  0x03 ; '.'
000000000001817f         db  0x23 ; '#'
0000000000018180         db  0x03 ; '.'
0000000000018181         db  0x0a ; '.'
0000000000018182         db  0x0e ; '.'
0000000000018183         db  0x30 ; '0'
0000000000018184         db  0x41 ; 'A'
0000000000018185         db  0x0e ; '.'
0000000000018186         db  0x28 ; '('
0000000000018187         db  0x41 ; 'A'
0000000000018188         db  0x0e ; '.'
0000000000018189         db  0x20 ; ' '
000000000001818a         db  0x42 ; 'B'
000000000001818b         db  0x0e ; '.'
000000000001818c         db  0x18 ; '.'
000000000001818d         db  0x42 ; 'B'
000000000001818e         db  0x0e ; '.'
000000000001818f         db  0x10 ; '.'
0000000000018190         db  0x42 ; 'B'
0000000000018191         db  0x0e ; '.'
0000000000018192         db  0x08 ; '.'
0000000000018193         db  0x41 ; 'A'
0000000000018194         db  0x0b ; '.'
0000000000018195         db  0x00 ; '.'
0000000000018196         db  0x00 ; '.'
0000000000018197         db  0x00 ; '.'
0000000000018198         dd         0x00000010                                  ; Length of the record
000000000001819c         dd         0x00001d9c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000181a0         db         0xb0, 0x85, 2 dup (0xff)                    ; begin 0x10750
00000000000181a4         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x10760)
00000000000181a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000181a9         align      4
00000000000181ac         dd         0x00000038                                  ; Length of the record
00000000000181b0         dd         0x00001db0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000181b4         db         0xac, 0x85, 2 dup (0xff)                    ; begin 0x10760
00000000000181b8         db         0x5e, 0x02, 2 dup (0x00)                    ; length 0x25e (end at 0x109be)
00000000000181bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000181bd         db  0x42 ; 'B'
00000000000181be         db  0x0e ; '.'
00000000000181bf         db  0x10 ; '.'
00000000000181c0         db  0x8c ; '.'
00000000000181c1         db  0x02 ; '.'
00000000000181c2         db  0x41 ; 'A'
00000000000181c3         db  0x0e ; '.'
00000000000181c4         db  0x18 ; '.'
00000000000181c5         db  0x86 ; '.'
00000000000181c6         db  0x03 ; '.'
00000000000181c7         db  0x44 ; 'D'
00000000000181c8         db  0x0e ; '.'
00000000000181c9         db  0x20 ; ' '
00000000000181ca         db  0x83 ; '.'
00000000000181cb         db  0x04 ; '.'
00000000000181cc         db  0x47 ; 'G'
00000000000181cd         db  0x0e ; '.'
00000000000181ce         db  0xf0 ; '.'
00000000000181cf         db  0x01 ; '.'
00000000000181d0         db  0x03 ; '.'
00000000000181d1         db  0x0a ; '.'
00000000000181d2         db  0x01 ; '.'
00000000000181d3         db  0x0a ; '.'
00000000000181d4         db  0x0e ; '.'
00000000000181d5         db  0x20 ; ' '
00000000000181d6         db  0x41 ; 'A'
00000000000181d7         db  0x0e ; '.'
00000000000181d8         db  0x18 ; '.'
00000000000181d9         db  0x41 ; 'A'
00000000000181da         db  0x0e ; '.'
00000000000181db         db  0x10 ; '.'
00000000000181dc         db  0x42 ; 'B'
00000000000181dd         db  0x0e ; '.'
00000000000181de         db  0x08 ; '.'
00000000000181df         db  0x44 ; 'D'
00000000000181e0         db  0x0b ; '.'
00000000000181e1         db  0x00 ; '.'
00000000000181e2         db  0x00 ; '.'
00000000000181e3         db  0x00 ; '.'
00000000000181e4         db  0x00 ; '.'
00000000000181e5         db  0x00 ; '.'
00000000000181e6         db  0x00 ; '.'
00000000000181e7         db  0x00 ; '.'
00000000000181e8         dd         0x00000110                                  ; Length of the record
00000000000181ec         dd         0x00001dec                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000181f0         db         0xd0, 0x87, 2 dup (0xff)                    ; begin 0x109c0
00000000000181f4         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x10dd7)
00000000000181f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000181f9         db  0x42 ; 'B'
00000000000181fa         db  0x0e ; '.'
00000000000181fb         db  0x10 ; '.'
00000000000181fc         db  0x8f ; '.'
00000000000181fd         db  0x02 ; '.'
00000000000181fe         db  0x42 ; 'B'
00000000000181ff         db  0x0e ; '.'
0000000000018200         db  0x18 ; '.'
0000000000018201         db  0x8e ; '.'
0000000000018202         db  0x03 ; '.'
0000000000018203         db  0x42 ; 'B'
0000000000018204         db  0x0e ; '.'
0000000000018205         db  0x20 ; ' '
0000000000018206         db  0x8d ; '.'
0000000000018207         db  0x04 ; '.'
0000000000018208         db  0x42 ; 'B'
0000000000018209         db  0x0e ; '.'
000000000001820a         db  0x28 ; '('
000000000001820b         db  0x8c ; '.'
000000000001820c         db  0x05 ; '.'
000000000001820d         db  0x44 ; 'D'
000000000001820e         db  0x0e ; '.'
000000000001820f         db  0x30 ; '0'
0000000000018210         db  0x86 ; '.'
0000000000018211         db  0x06 ; '.'
0000000000018212         db  0x41 ; 'A'
0000000000018213         db  0x0e ; '.'
0000000000018214         db  0x38 ; '8'
0000000000018215         db  0x83 ; '.'
0000000000018216         db  0x07 ; '.'
0000000000018217         db  0x4a ; 'J'
0000000000018218         db  0x0e ; '.'
0000000000018219         db  0x60 ; '`'
000000000001821a         db  0x02 ; '.'
000000000001821b         db  0xdd ; '.'
000000000001821c         db  0x0e ; '.'
000000000001821d         db  0x68 ; 'h'
000000000001821e         db  0x57 ; 'W'
000000000001821f         db  0x0e ; '.'
0000000000018220         db  0x70 ; 'p'
0000000000018221         db  0x42 ; 'B'
0000000000018222         db  0x0e ; '.'
0000000000018223         db  0x78 ; 'x'
0000000000018224         db  0x42 ; 'B'
0000000000018225         db  0x0e ; '.'
0000000000018226         db  0x80 ; '.'
0000000000018227         db  0x01 ; '.'
0000000000018228         db  0x42 ; 'B'
0000000000018229         db  0x0e ; '.'
000000000001822a         db  0x88 ; '.'
000000000001822b         db  0x01 ; '.'
000000000001822c         db  0x42 ; 'B'
000000000001822d         db  0x0e ; '.'
000000000001822e         db  0x90 ; '.'
000000000001822f         db  0x01 ; '.'
0000000000018230         db  0x53 ; 'S'
0000000000018231         db  0x0e ; '.'
0000000000018232         db  0x60 ; '`'
0000000000018233         db  0x44 ; 'D'
0000000000018234         db  0x0a ; '.'
0000000000018235         db  0x0e ; '.'
0000000000018236         db  0x38 ; '8'
0000000000018237         db  0x41 ; 'A'
0000000000018238         db  0x0e ; '.'
0000000000018239         db  0x30 ; '0'
000000000001823a         db  0x41 ; 'A'
000000000001823b         db  0x0e ; '.'
000000000001823c         db  0x28 ; '('
000000000001823d         db  0x42 ; 'B'
000000000001823e         db  0x0e ; '.'
000000000001823f         db  0x20 ; ' '
0000000000018240         db  0x42 ; 'B'
0000000000018241         db  0x0e ; '.'
0000000000018242         db  0x18 ; '.'
0000000000018243         db  0x42 ; 'B'
0000000000018244         db  0x0e ; '.'
0000000000018245         db  0x10 ; '.'
0000000000018246         db  0x42 ; 'B'
0000000000018247         db  0x0e ; '.'
0000000000018248         db  0x08 ; '.'
0000000000018249         db  0x44 ; 'D'
000000000001824a         db  0x0b ; '.'
000000000001824b         db  0x02 ; '.'
000000000001824c         db  0x78 ; 'x'
000000000001824d         db  0x0a ; '.'
000000000001824e         db  0x0e ; '.'
000000000001824f         db  0x68 ; 'h'
0000000000018250         db  0x48 ; 'H'
0000000000018251         db  0x0b ; '.'
0000000000018252         db  0x5a ; 'Z'
0000000000018253         db  0x0a ; '.'
0000000000018254         db  0x0e ; '.'
0000000000018255         db  0x38 ; '8'
0000000000018256         db  0x47 ; 'G'
0000000000018257         db  0x0e ; '.'
0000000000018258         db  0x30 ; '0'
0000000000018259         db  0x41 ; 'A'
000000000001825a         db  0x0e ; '.'
000000000001825b         db  0x28 ; '('
000000000001825c         db  0x42 ; 'B'
000000000001825d         db  0x0e ; '.'
000000000001825e         db  0x20 ; ' '
000000000001825f         db  0x42 ; 'B'
0000000000018260         db  0x0e ; '.'
0000000000018261         db  0x18 ; '.'
0000000000018262         db  0x42 ; 'B'
0000000000018263         db  0x0e ; '.'
0000000000018264         db  0x10 ; '.'
0000000000018265         db  0x42 ; 'B'
0000000000018266         db  0x0e ; '.'
0000000000018267         db  0x08 ; '.'
0000000000018268         db  0x56 ; 'V'
0000000000018269         db  0x0b ; '.'
000000000001826a         db  0x5e ; '^'
000000000001826b         db  0x0a ; '.'
000000000001826c         db  0x0e ; '.'
000000000001826d         db  0x38 ; '8'
000000000001826e         db  0x52 ; 'R'
000000000001826f         db  0x0e ; '.'
0000000000018270         db  0x30 ; '0'
0000000000018271         db  0x41 ; 'A'
0000000000018272         db  0x0e ; '.'
0000000000018273         db  0x28 ; '('
0000000000018274         db  0x42 ; 'B'
0000000000018275         db  0x0e ; '.'
0000000000018276         db  0x20 ; ' '
0000000000018277         db  0x42 ; 'B'
0000000000018278         db  0x0e ; '.'
0000000000018279         db  0x18 ; '.'
000000000001827a         db  0x42 ; 'B'
000000000001827b         db  0x0e ; '.'
000000000001827c         db  0x10 ; '.'
000000000001827d         db  0x42 ; 'B'
000000000001827e         db  0x0e ; '.'
000000000001827f         db  0x08 ; '.'
0000000000018280         db  0x4f ; 'O'
0000000000018281         db  0x0b ; '.'
0000000000018282         db  0x62 ; 'b'
0000000000018283         db  0x0a ; '.'
0000000000018284         db  0x0e ; '.'
0000000000018285         db  0x38 ; '8'
0000000000018286         db  0x50 ; 'P'
0000000000018287         db  0x0e ; '.'
0000000000018288         db  0x30 ; '0'
0000000000018289         db  0x41 ; 'A'
000000000001828a         db  0x0e ; '.'
000000000001828b         db  0x28 ; '('
000000000001828c         db  0x42 ; 'B'
000000000001828d         db  0x0e ; '.'
000000000001828e         db  0x20 ; ' '
000000000001828f         db  0x42 ; 'B'
0000000000018290         db  0x0e ; '.'
0000000000018291         db  0x18 ; '.'
0000000000018292         db  0x42 ; 'B'
0000000000018293         db  0x0e ; '.'
0000000000018294         db  0x10 ; '.'
0000000000018295         db  0x42 ; 'B'
0000000000018296         db  0x0e ; '.'
0000000000018297         db  0x08 ; '.'
0000000000018298         db  0x55 ; 'U'
0000000000018299         db  0x0b ; '.'
000000000001829a         db  0x66 ; 'f'
000000000001829b         db  0x0e ; '.'
000000000001829c         db  0x68 ; 'h'
000000000001829d         db  0x42 ; 'B'
000000000001829e         db  0x0e ; '.'
000000000001829f         db  0x70 ; 'p'
00000000000182a0         db  0x5c ; '\'
00000000000182a1         db  0x0e ; '.'
00000000000182a2         db  0x68 ; 'h'
00000000000182a3         db  0x41 ; 'A'
00000000000182a4         db  0x0e ; '.'
00000000000182a5         db  0x60 ; '`'
00000000000182a6         db  0x44 ; 'D'
00000000000182a7         db  0x0a ; '.'
00000000000182a8         db  0x0e ; '.'
00000000000182a9         db  0x38 ; '8'
00000000000182aa         db  0x41 ; 'A'
00000000000182ab         db  0x0e ; '.'
00000000000182ac         db  0x30 ; '0'
00000000000182ad         db  0x41 ; 'A'
00000000000182ae         db  0x0e ; '.'
00000000000182af         db  0x28 ; '('
00000000000182b0         db  0x42 ; 'B'
00000000000182b1         db  0x0e ; '.'
00000000000182b2         db  0x20 ; ' '
00000000000182b3         db  0x42 ; 'B'
00000000000182b4         db  0x0e ; '.'
00000000000182b5         db  0x18 ; '.'
00000000000182b6         db  0x42 ; 'B'
00000000000182b7         db  0x0e ; '.'
00000000000182b8         db  0x10 ; '.'
00000000000182b9         db  0x42 ; 'B'
00000000000182ba         db  0x0e ; '.'
00000000000182bb         db  0x08 ; '.'
00000000000182bc         db  0x45 ; 'E'
00000000000182bd         db  0x0b ; '.'
00000000000182be         db  0x68 ; 'h'
00000000000182bf         db  0x0a ; '.'
00000000000182c0         db  0x0e ; '.'
00000000000182c1         db  0x68 ; 'h'
00000000000182c2         db  0x48 ; 'H'
00000000000182c3         db  0x0b ; '.'
00000000000182c4         db  0x72 ; 'r'
00000000000182c5         db  0x0e ; '.'
00000000000182c6         db  0x68 ; 'h'
00000000000182c7         db  0x45 ; 'E'
00000000000182c8         db  0x0e ; '.'
00000000000182c9         db  0x70 ; 'p'
00000000000182ca         db  0x42 ; 'B'
00000000000182cb         db  0x0e ; '.'
00000000000182cc         db  0x78 ; 'x'
00000000000182cd         db  0x42 ; 'B'
00000000000182ce         db  0x0e ; '.'
00000000000182cf         db  0x80 ; '.'
00000000000182d0         db  0x01 ; '.'
00000000000182d1         db  0x5e ; '^'
00000000000182d2         db  0x0e ; '.'
00000000000182d3         db  0x60 ; '`'
00000000000182d4         db  0x44 ; 'D'
00000000000182d5         db  0x0a ; '.'
00000000000182d6         db  0x0e ; '.'
00000000000182d7         db  0x38 ; '8'
00000000000182d8         db  0x41 ; 'A'
00000000000182d9         db  0x0e ; '.'
00000000000182da         db  0x30 ; '0'
00000000000182db         db  0x41 ; 'A'
00000000000182dc         db  0x0e ; '.'
00000000000182dd         db  0x28 ; '('
00000000000182de         db  0x42 ; 'B'
00000000000182df         db  0x0e ; '.'
00000000000182e0         db  0x20 ; ' '
00000000000182e1         db  0x42 ; 'B'
00000000000182e2         db  0x0e ; '.'
00000000000182e3         db  0x18 ; '.'
00000000000182e4         db  0x42 ; 'B'
00000000000182e5         db  0x0e ; '.'
00000000000182e6         db  0x10 ; '.'
00000000000182e7         db  0x42 ; 'B'
00000000000182e8         db  0x0e ; '.'
00000000000182e9         db  0x08 ; '.'
00000000000182ea         db  0x41 ; 'A'
00000000000182eb         db  0x0b ; '.'
00000000000182ec         db  0x79 ; 'y'
00000000000182ed         db  0x0a ; '.'
00000000000182ee         db  0x0e ; '.'
00000000000182ef         db  0x68 ; 'h'
00000000000182f0         db  0x42 ; 'B'
00000000000182f1         db  0x0e ; '.'
00000000000182f2         db  0x70 ; 'p'
00000000000182f3         db  0x42 ; 'B'
00000000000182f4         db  0x0e ; '.'
00000000000182f5         db  0x78 ; 'x'
00000000000182f6         db  0x42 ; 'B'
00000000000182f7         db  0x0e ; '.'
00000000000182f8         db  0x80 ; '.'
00000000000182f9         db  0x01 ; '.'
00000000000182fa         db  0x51 ; 'Q'
00000000000182fb         db  0x0b ; '.'
00000000000182fc         dd         0x00000010                                  ; Length of the record
0000000000018300         dd         0x00001f00                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018304         db         0xdc, 0x8a, 2 dup (0xff)                    ; begin 0x10de0
0000000000018308         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x10e00)
000000000001830c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001830d         align      16
0000000000018310         dd         0x00000018                                  ; Length of the record
0000000000018314         dd         0x00001f14                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018318         db         0xe8, 0x8a, 2 dup (0xff)                    ; begin 0x10e00
000000000001831c         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x10e78)
0000000000018320         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018321         db  0x44 ; 'D'
0000000000018322         db  0x0e ; '.'
0000000000018323         db  0x70 ; 'p'
0000000000018324         db  0x02 ; '.'
0000000000018325         db  0x60 ; '`'
0000000000018326         db  0x0a ; '.'
0000000000018327         db  0x0e ; '.'
0000000000018328         db  0x08 ; '.'
0000000000018329         db  0x41 ; 'A'
000000000001832a         db  0x0b ; '.'
000000000001832b         db  0x00 ; '.'
000000000001832c         dd         0x00000028                                  ; Length of the record
0000000000018330         dd         0x00001f30                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018334         db         0x4c, 0x8b, 2 dup (0xff)                    ; begin 0x10e80
0000000000018338         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x10f55)
000000000001833c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001833d         db  0x41 ; 'A'
000000000001833e         db  0x0e ; '.'
000000000001833f         db  0x10 ; '.'
0000000000018340         db  0x86 ; '.'
0000000000018341         db  0x02 ; '.'
0000000000018342         db  0x41 ; 'A'
0000000000018343         db  0x0e ; '.'
0000000000018344         db  0x18 ; '.'
0000000000018345         db  0x83 ; '.'
0000000000018346         db  0x03 ; '.'
0000000000018347         db  0x50 ; 'P'
0000000000018348         db  0x0e ; '.'
0000000000018349         db  0xd0 ; '.'
000000000001834a         db  0x01 ; '.'
000000000001834b         db  0x02 ; '.'
000000000001834c         db  0xab ; '.'
000000000001834d         db  0x0a ; '.'
000000000001834e         db  0x0e ; '.'
000000000001834f         db  0x18 ; '.'
0000000000018350         db  0x41 ; 'A'
0000000000018351         db  0x0e ; '.'
0000000000018352         db  0x10 ; '.'
0000000000018353         db  0x41 ; 'A'
0000000000018354         db  0x0e ; '.'
0000000000018355         db  0x08 ; '.'
0000000000018356         db  0x41 ; 'A'
0000000000018357         db  0x0b ; '.'
0000000000018358         dd         0x0000001c                                  ; Length of the record
000000000001835c         dd         0x00001f5c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018360         db         0x00, 0x8c, 2 dup (0xff)                    ; begin 0x10f60
0000000000018364         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x10fe0)
0000000000018368         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018369         db  0x41 ; 'A'
000000000001836a         db  0x0e ; '.'
000000000001836b         db  0x10 ; '.'
000000000001836c         db  0x83 ; '.'
000000000001836d         db  0x02 ; '.'
000000000001836e         db  0x02 ; '.'
000000000001836f         db  0x7a ; 'z'
0000000000018370         db  0x0e ; '.'
0000000000018371         db  0x08 ; '.'
0000000000018372         db  0x00 ; '.'
0000000000018373         db  0x00 ; '.'
0000000000018374         db  0x00 ; '.'
0000000000018375         db  0x00 ; '.'
0000000000018376         db  0x00 ; '.'
0000000000018377         db  0x00 ; '.'
0000000000018378         dd         0x00000014                                  ; Length of the record
000000000001837c         dd         0x00001f7c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018380         db         0x60, 0x8c, 2 dup (0xff)                    ; begin 0x10fe0
0000000000018384         db         0x38, 3 dup (0x00)                          ; length 0x38 (end at 0x11018)
0000000000018388         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018389         db  0x5c ; '\'
000000000001838a         db  0x0e ; '.'
000000000001838b         db  0x10 ; '.'
000000000001838c         db  0x5b ; '['
000000000001838d         db  0x0e ; '.'
000000000001838e         db  0x08 ; '.'
000000000001838f         db  0x00 ; '.'
0000000000018390         dd         0x00000018                                  ; Length of the record
0000000000018394         dd         0x00001f94                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018398         db         0x88, 0x8c, 2 dup (0xff)                    ; begin 0x11020
000000000001839c         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x1103a)
00000000000183a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000183a1         db  0x41 ; 'A'
00000000000183a2         db  0x0e ; '.'
00000000000183a3         db  0x10 ; '.'
00000000000183a4         db  0x83 ; '.'
00000000000183a5         db  0x02 ; '.'
00000000000183a6         db  0x53 ; 'S'
00000000000183a7         db  0x0a ; '.'
00000000000183a8         db  0x0e ; '.'
00000000000183a9         db  0x08 ; '.'
00000000000183aa         db  0x41 ; 'A'
00000000000183ab         db  0x0b ; '.'
00000000000183ac         dd         0x00000010                                  ; Length of the record
00000000000183b0         dd         0x00001fb0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000183b4         db         2 dup (0x8c), 2 dup (0xff)                  ; begin 0x11040
00000000000183b8         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x11064)
00000000000183bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000183bd         db  0x5f ; '_'
00000000000183be         db  0x0e ; '.'
00000000000183bf         db  0x10 ; '.'
00000000000183c0         dd         0x00000010                                  ; Length of the record
00000000000183c4         dd         0x00001fc4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000183c8         db         0xa8, 0x8c, 2 dup (0xff)                    ; begin 0x11070
00000000000183cc         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x11072)
00000000000183d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000183d1         align      4
00000000000183d4         dd         0x00000020                                  ; Length of the record
00000000000183d8         dd         0x00001fd8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000183dc         db         0xa4, 0x8c, 2 dup (0xff)                    ; begin 0x11080
00000000000183e0         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x110b6)
00000000000183e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000183e5         db  0x44 ; 'D'
00000000000183e6         db  0x0e ; '.'
00000000000183e7         db  0x10 ; '.'
00000000000183e8         db  0x83 ; '.'
00000000000183e9         db  0x02 ; '.'
00000000000183ea         db  0x5d ; ']'
00000000000183eb         db  0x0a ; '.'
00000000000183ec         db  0x0e ; '.'
00000000000183ed         db  0x08 ; '.'
00000000000183ee         db  0x47 ; 'G'
00000000000183ef         db  0x0b ; '.'
00000000000183f0         db  0x48 ; 'H'
00000000000183f1         db  0x0a ; '.'
00000000000183f2         db  0x0e ; '.'
00000000000183f3         db  0x08 ; '.'
00000000000183f4         db  0x41 ; 'A'
00000000000183f5         db  0x0b ; '.'
00000000000183f6         db  0x00 ; '.'
00000000000183f7         db  0x00 ; '.'
00000000000183f8         dd         0x00000010                                  ; Length of the record
00000000000183fc         dd         0x00001ffc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018400         db         0xc0, 0x8c, 2 dup (0xff)                    ; begin 0x110c0
0000000000018404         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x110e4)
0000000000018408         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018409         db  0x5f ; '_'
000000000001840a         db  0x0e ; '.'
000000000001840b         db  0x10 ; '.'
000000000001840c         dd         0x00000014                                  ; Length of the record
0000000000018410         dd         0x00002010                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018414         db         0xdc, 0x8c, 2 dup (0xff)                    ; begin 0x110f0
0000000000018418         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x11172)
000000000001841c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001841d         db  0x02 ; '.'
000000000001841e         db  0x5f ; '_'
000000000001841f         db  0x0e ; '.'
0000000000018420         db  0x10 ; '.'
0000000000018421         db  0x49 ; 'I'
0000000000018422         db  0x0e ; '.'
0000000000018423         db  0x08 ; '.'
0000000000018424         dd         0x00000014                                  ; Length of the record
0000000000018428         dd         0x00002028                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
000000000001842c         db         0x54, 0x8d, 2 dup (0xff)                    ; begin 0x11180
0000000000018430         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x111ca)
0000000000018434         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018435         db  0x02 ; '.'
0000000000018436         db  0x45 ; 'E'
0000000000018437         db  0x0e ; '.'
0000000000018438         db  0x10 ; '.'
0000000000018439         db  0x00 ; '.'
000000000001843a         db  0x00 ; '.'
000000000001843b         db  0x00 ; '.'
000000000001843c         dd         0x00000018                                  ; Length of the record
0000000000018440         dd         0x00002040                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018444         db         0x8c, 0x8d, 2 dup (0xff)                    ; begin 0x111d0
0000000000018448         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x111e7)
000000000001844c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001844d         db  0x41 ; 'A'
000000000001844e         db  0x0e ; '.'
000000000001844f         db  0x10 ; '.'
0000000000018450         db  0x83 ; '.'
0000000000018451         db  0x02 ; '.'
0000000000018452         db  0x51 ; 'Q'
0000000000018453         db  0x0e ; '.'
0000000000018454         db  0x08 ; '.'
0000000000018455         db  0x00 ; '.'
0000000000018456         db  0x00 ; '.'
0000000000018457         db  0x00 ; '.'
0000000000018458         dd         0x00000018                                  ; Length of the record
000000000001845c         dd         0x0000205c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018460         db         0x90, 0x8d, 2 dup (0xff)                    ; begin 0x111f0
0000000000018464         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x1121e)
0000000000018468         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018469         db  0x47 ; 'G'
000000000001846a         db  0x0e ; '.'
000000000001846b         db  0x10 ; '.'
000000000001846c         db  0x61 ; 'a'
000000000001846d         db  0x0a ; '.'
000000000001846e         db  0x0e ; '.'
000000000001846f         db  0x08 ; '.'
0000000000018470         db  0x41 ; 'A'
0000000000018471         db  0x0b ; '.'
0000000000018472         db  0x00 ; '.'
0000000000018473         db  0x00 ; '.'
0000000000018474         dd         0x00000024                                  ; Length of the record
0000000000018478         dd         0x00002078                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
000000000001847c         db         0xa4, 0x8d, 2 dup (0xff)                    ; begin 0x11220
0000000000018480         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x11248)
0000000000018484         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018485         db  0x41 ; 'A'
0000000000018486         db  0x0e ; '.'
0000000000018487         db  0x10 ; '.'
0000000000018488         db  0x86 ; '.'
0000000000018489         db  0x02 ; '.'
000000000001848a         db  0x41 ; 'A'
000000000001848b         db  0x0e ; '.'
000000000001848c         db  0x18 ; '.'
000000000001848d         db  0x83 ; '.'
000000000001848e         db  0x03 ; '.'
000000000001848f         db  0x4d ; 'M'
0000000000018490         db  0x0e ; '.'
0000000000018491         db  0x20 ; ' '
0000000000018492         db  0x49 ; 'I'
0000000000018493         db  0x0e ; '.'
0000000000018494         db  0x18 ; '.'
0000000000018495         db  0x47 ; 'G'
0000000000018496         db  0x0e ; '.'
0000000000018497         db  0x10 ; '.'
0000000000018498         db  0x41 ; 'A'
0000000000018499         db  0x0e ; '.'
000000000001849a         db  0x08 ; '.'
000000000001849b         db  0x00 ; '.'
000000000001849c         dd         0x00000018                                  ; Length of the record
00000000000184a0         dd         0x000020a0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000184a4         db         0xac, 0x8d, 2 dup (0xff)                    ; begin 0x11250
00000000000184a8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x11263)
00000000000184ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000184ad         db  0x41 ; 'A'
00000000000184ae         db  0x0e ; '.'
00000000000184af         db  0x10 ; '.'
00000000000184b0         db  0x83 ; '.'
00000000000184b1         db  0x02 ; '.'
00000000000184b2         db  0x50 ; 'P'
00000000000184b3         db  0x0e ; '.'
00000000000184b4         db  0x08 ; '.'
00000000000184b5         db  0x00 ; '.'
00000000000184b6         db  0x00 ; '.'
00000000000184b7         db  0x00 ; '.'
00000000000184b8         dd         0x00000014                                  ; Length of the record
00000000000184bc         dd         0x000020bc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000184c0         db         0xb0, 0x8d, 2 dup (0xff)                    ; begin 0x11270
00000000000184c4         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x112a5)
00000000000184c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000184c9         db  0x4b ; 'K'
00000000000184ca         db  0x0e ; '.'
00000000000184cb         db  0x10 ; '.'
00000000000184cc         db  0x00 ; '.'
00000000000184cd         db  0x00 ; '.'
00000000000184ce         db  0x00 ; '.'
00000000000184cf         db  0x00 ; '.'
00000000000184d0         dd         0x00000024                                  ; Length of the record
00000000000184d4         dd         0x000020d4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000184d8         db         0xd8, 0x8d, 2 dup (0xff)                    ; begin 0x112b0
00000000000184dc         db         0x97, 3 dup (0x00)                          ; length 0x97 (end at 0x11347)
00000000000184e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000184e1         db  0x41 ; 'A'
00000000000184e2         db  0x0e ; '.'
00000000000184e3         db  0x10 ; '.'
00000000000184e4         db  0x83 ; '.'
00000000000184e5         db  0x02 ; '.'
00000000000184e6         db  0x4b ; 'K'
00000000000184e7         db  0x0e ; '.'
00000000000184e8         db  0x30 ; '0'
00000000000184e9         db  0x02 ; '.'
00000000000184ea         db  0x76 ; 'v'
00000000000184eb         db  0x0a ; '.'
00000000000184ec         db  0x0e ; '.'
00000000000184ed         db  0x10 ; '.'
00000000000184ee         db  0x41 ; 'A'
00000000000184ef         db  0x0e ; '.'
00000000000184f0         db  0x08 ; '.'
00000000000184f1         db  0x45 ; 'E'
00000000000184f2         db  0x0b ; '.'
00000000000184f3         db  0x00 ; '.'
00000000000184f4         db  0x00 ; '.'
00000000000184f5         db  0x00 ; '.'
00000000000184f6         db  0x00 ; '.'
00000000000184f7         db  0x00 ; '.'
00000000000184f8         dd         0x0000001c                                  ; Length of the record
00000000000184fc         dd         0x000020fc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018500         db         0x50, 0x8e, 2 dup (0xff)                    ; begin 0x11350
0000000000018504         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x11390)
0000000000018508         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018509         db  0x44 ; 'D'
000000000001850a         db  0x0e ; '.'
000000000001850b         db  0x10 ; '.'
000000000001850c         db  0x83 ; '.'
000000000001850d         db  0x02 ; '.'
000000000001850e         db  0x5a ; 'Z'
000000000001850f         db  0x0a ; '.'
0000000000018510         db  0x0e ; '.'
0000000000018511         db  0x08 ; '.'
0000000000018512         db  0x4a ; 'J'
0000000000018513         db  0x0b ; '.'
0000000000018514         db  0x53 ; 'S'
0000000000018515         db  0x0e ; '.'
0000000000018516         db  0x08 ; '.'
0000000000018517         db  0x00 ; '.'
0000000000018518         dd         0x00000014                                  ; Length of the record
000000000001851c         dd         0x0000211c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018520         db         0x70, 0x8e, 2 dup (0xff)                    ; begin 0x11390
0000000000018524         db         0x29, 3 dup (0x00)                          ; length 0x29 (end at 0x113b9)
0000000000018528         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018529         align      16
0000000000018530         dd         0x0000002c                                  ; Length of the record
0000000000018534         dd         0x00002134                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018538         db         0x88, 0x8e, 2 dup (0xff)                    ; begin 0x113c0
000000000001853c         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x11417)
0000000000018540         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018541         db  0x63 ; 'c'
0000000000018542         db  0x0e ; '.'
0000000000018543         db  0x10 ; '.'
0000000000018544         db  0x8c ; '.'
0000000000018545         db  0x02 ; '.'
0000000000018546         db  0x41 ; 'A'
0000000000018547         db  0x0e ; '.'
0000000000018548         db  0x18 ; '.'
0000000000018549         db  0x86 ; '.'
000000000001854a         db  0x03 ; '.'
000000000001854b         db  0x44 ; 'D'
000000000001854c         db  0x0e ; '.'
000000000001854d         db  0x20 ; ' '
000000000001854e         db  0x83 ; '.'
000000000001854f         db  0x04 ; '.'
0000000000018550         db  0x6b ; 'k'
0000000000018551         db  0x0e ; '.'
0000000000018552         db  0x18 ; '.'
0000000000018553         db  0x41 ; 'A'
0000000000018554         db  0x0e ; '.'
0000000000018555         db  0x10 ; '.'
0000000000018556         db  0x42 ; 'B'
0000000000018557         db  0x0e ; '.'
0000000000018558         db  0x08 ; '.'
0000000000018559         db  0x00 ; '.'
000000000001855a         db  0x00 ; '.'
000000000001855b         db  0x00 ; '.'
000000000001855c         db  0x00 ; '.'
000000000001855d         db  0x00 ; '.'
000000000001855e         db  0x00 ; '.'
000000000001855f         db  0x00 ; '.'
0000000000018560         dd         0x0000003c                                  ; Length of the record
0000000000018564         dd         0x00002164                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018568         db         0xb8, 0x8e, 2 dup (0xff)                    ; begin 0x11420
000000000001856c         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x114a3)
0000000000018570         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018571         db  0x42 ; 'B'
0000000000018572         db  0x0e ; '.'
0000000000018573         db  0x10 ; '.'
0000000000018574         db  0x8d ; '.'
0000000000018575         db  0x02 ; '.'
0000000000018576         db  0x42 ; 'B'
0000000000018577         db  0x0e ; '.'
0000000000018578         db  0x18 ; '.'
0000000000018579         db  0x8c ; '.'
000000000001857a         db  0x03 ; '.'
000000000001857b         db  0x44 ; 'D'
000000000001857c         db  0x0e ; '.'
000000000001857d         db  0x20 ; ' '
000000000001857e         db  0x86 ; '.'
000000000001857f         db  0x04 ; '.'
0000000000018580         db  0x41 ; 'A'
0000000000018581         db  0x0e ; '.'
0000000000018582         db  0x28 ; '('
0000000000018583         db  0x83 ; '.'
0000000000018584         db  0x05 ; '.'
0000000000018585         db  0x4a ; 'J'
0000000000018586         db  0x0e ; '.'
0000000000018587         db  0x40 ; '@'
0000000000018588         db  0x02 ; '.'
0000000000018589         db  0x64 ; 'd'
000000000001858a         db  0x0a ; '.'
000000000001858b         db  0x0e ; '.'
000000000001858c         db  0x28 ; '('
000000000001858d         db  0x41 ; 'A'
000000000001858e         db  0x0e ; '.'
000000000001858f         db  0x20 ; ' '
0000000000018590         db  0x41 ; 'A'
0000000000018591         db  0x0e ; '.'
0000000000018592         db  0x18 ; '.'
0000000000018593         db  0x42 ; 'B'
0000000000018594         db  0x0e ; '.'
0000000000018595         db  0x10 ; '.'
0000000000018596         db  0x42 ; 'B'
0000000000018597         db  0x0e ; '.'
0000000000018598         db  0x08 ; '.'
0000000000018599         db  0x41 ; 'A'
000000000001859a         db  0x0b ; '.'
000000000001859b         db  0x00 ; '.'
000000000001859c         db  0x00 ; '.'
000000000001859d         db  0x00 ; '.'
000000000001859e         db  0x00 ; '.'
000000000001859f         db  0x00 ; '.'
00000000000185a0         dd         0x00000014                                  ; Length of the record
00000000000185a4         dd         0x000021a4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000185a8         db         0x08, 0x8f, 2 dup (0xff)                    ; begin 0x114b0
00000000000185ac         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x114b2)
00000000000185b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000185b1         align      8
00000000000185b8         dd         0x00000014                                  ; Length of the record
00000000000185bc         dd         0x000021bc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000185c0         db         0x00, 0x8f, 2 dup (0xff)                    ; begin 0x114c0
00000000000185c4         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x114c5)
00000000000185c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000185c9         align      16
00000000000185d0         dd         0x00000010                                  ; Length of the record
00000000000185d4         dd         0x000021d4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000185d8         db         0xf8, 0x8e, 2 dup (0xff)                    ; begin 0x114d0
00000000000185dc         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x114e5)
00000000000185e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000185e1         align      4
00000000000185e4         dd         0x00000018                                  ; Length of the record
00000000000185e8         dd         0x000021e8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000185ec         db         0x04, 0x8f, 2 dup (0xff)                    ; begin 0x114f0
00000000000185f0         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x11512)
00000000000185f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000185f5         db  0x44 ; 'D'
00000000000185f6         db  0x0e ; '.'
00000000000185f7         db  0x10 ; '.'
00000000000185f8         db  0x58 ; 'X'
00000000000185f9         db  0x0e ; '.'
00000000000185fa         db  0x08 ; '.'
00000000000185fb         db  0x00 ; '.'
00000000000185fc         db  0x00 ; '.'
00000000000185fd         db  0x00 ; '.'
00000000000185fe         db  0x00 ; '.'
00000000000185ff         db  0x00 ; '.'
0000000000018600         dd         0x0000004c                                  ; Length of the record
0000000000018604         dd         0x00002204                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018608         db         0x18, 0x8f, 2 dup (0xff)                    ; begin 0x11520
000000000001860c         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x1159d)
0000000000018610         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018611         db  0x42 ; 'B'
0000000000018612         db  0x0e ; '.'
0000000000018613         db  0x10 ; '.'
0000000000018614         db  0x8c ; '.'
0000000000018615         db  0x02 ; '.'
0000000000018616         db  0x41 ; 'A'
0000000000018617         db  0x0e ; '.'
0000000000018618         db  0x18 ; '.'
0000000000018619         db  0x86 ; '.'
000000000001861a         db  0x03 ; '.'
000000000001861b         db  0x44 ; 'D'
000000000001861c         db  0x0e ; '.'
000000000001861d         db  0x20 ; ' '
000000000001861e         db  0x83 ; '.'
000000000001861f         db  0x04 ; '.'
0000000000018620         db  0x69 ; 'i'
0000000000018621         db  0x0a ; '.'
0000000000018622         db  0x0e ; '.'
0000000000018623         db  0x18 ; '.'
0000000000018624         db  0x41 ; 'A'
0000000000018625         db  0x0e ; '.'
0000000000018626         db  0x10 ; '.'
0000000000018627         db  0x42 ; 'B'
0000000000018628         db  0x0e ; '.'
0000000000018629         db  0x08 ; '.'
000000000001862a         db  0x45 ; 'E'
000000000001862b         db  0x0b ; '.'
000000000001862c         db  0x55 ; 'U'
000000000001862d         db  0x0a ; '.'
000000000001862e         db  0x0e ; '.'
000000000001862f         db  0x18 ; '.'
0000000000018630         db  0x41 ; 'A'
0000000000018631         db  0x0e ; '.'
0000000000018632         db  0x10 ; '.'
0000000000018633         db  0x42 ; 'B'
0000000000018634         db  0x0e ; '.'
0000000000018635         db  0x08 ; '.'
0000000000018636         db  0x48 ; 'H'
0000000000018637         db  0x0b ; '.'
0000000000018638         db  0x41 ; 'A'
0000000000018639         db  0x0a ; '.'
000000000001863a         db  0x0e ; '.'
000000000001863b         db  0x18 ; '.'
000000000001863c         db  0x46 ; 'F'
000000000001863d         db  0x0e ; '.'
000000000001863e         db  0x10 ; '.'
000000000001863f         db  0x42 ; 'B'
0000000000018640         db  0x0e ; '.'
0000000000018641         db  0x08 ; '.'
0000000000018642         db  0x47 ; 'G'
0000000000018643         db  0x0b ; '.'
0000000000018644         db  0x49 ; 'I'
0000000000018645         db  0x0e ; '.'
0000000000018646         db  0x18 ; '.'
0000000000018647         db  0x41 ; 'A'
0000000000018648         db  0x0e ; '.'
0000000000018649         db  0x10 ; '.'
000000000001864a         db  0x42 ; 'B'
000000000001864b         db  0x0e ; '.'
000000000001864c         db  0x08 ; '.'
000000000001864d         db  0x00 ; '.'
000000000001864e         db  0x00 ; '.'
000000000001864f         db  0x00 ; '.'
0000000000018650         dd         0x0000004c                                  ; Length of the record
0000000000018654         dd         0x00002254                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018658         db         0x48, 0x8f, 2 dup (0xff)                    ; begin 0x115a0
000000000001865c         db         0x96, 3 dup (0x00)                          ; length 0x96 (end at 0x11636)
0000000000018660         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018661         db  0x42 ; 'B'
0000000000018662         db  0x0e ; '.'
0000000000018663         db  0x10 ; '.'
0000000000018664         db  0x8e ; '.'
0000000000018665         db  0x02 ; '.'
0000000000018666         db  0x42 ; 'B'
0000000000018667         db  0x0e ; '.'
0000000000018668         db  0x18 ; '.'
0000000000018669         db  0x8d ; '.'
000000000001866a         db  0x03 ; '.'
000000000001866b         db  0x42 ; 'B'
000000000001866c         db  0x0e ; '.'
000000000001866d         db  0x20 ; ' '
000000000001866e         db  0x8c ; '.'
000000000001866f         db  0x04 ; '.'
0000000000018670         db  0x41 ; 'A'
0000000000018671         db  0x0e ; '.'
0000000000018672         db  0x28 ; '('
0000000000018673         db  0x86 ; '.'
0000000000018674         db  0x05 ; '.'
0000000000018675         db  0x41 ; 'A'
0000000000018676         db  0x0e ; '.'
0000000000018677         db  0x30 ; '0'
0000000000018678         db  0x83 ; '.'
0000000000018679         db  0x06 ; '.'
000000000001867a         db  0x5e ; '^'
000000000001867b         db  0x0a ; '.'
000000000001867c         db  0x0e ; '.'
000000000001867d         db  0x28 ; '('
000000000001867e         db  0x41 ; 'A'
000000000001867f         db  0x0e ; '.'
0000000000018680         db  0x20 ; ' '
0000000000018681         db  0x42 ; 'B'
0000000000018682         db  0x0e ; '.'
0000000000018683         db  0x18 ; '.'
0000000000018684         db  0x42 ; 'B'
0000000000018685         db  0x0e ; '.'
0000000000018686         db  0x10 ; '.'
0000000000018687         db  0x42 ; 'B'
0000000000018688         db  0x0e ; '.'
0000000000018689         db  0x08 ; '.'
000000000001868a         db  0x43 ; 'C'
000000000001868b         db  0x0b ; '.'
000000000001868c         db  0x7c ; '|'
000000000001868d         db  0x0a ; '.'
000000000001868e         db  0x0e ; '.'
000000000001868f         db  0x28 ; '('
0000000000018690         db  0x41 ; 'A'
0000000000018691         db  0x0e ; '.'
0000000000018692         db  0x20 ; ' '
0000000000018693         db  0x42 ; 'B'
0000000000018694         db  0x0e ; '.'
0000000000018695         db  0x18 ; '.'
0000000000018696         db  0x42 ; 'B'
0000000000018697         db  0x0e ; '.'
0000000000018698         db  0x10 ; '.'
0000000000018699         db  0x42 ; 'B'
000000000001869a         db  0x0e ; '.'
000000000001869b         db  0x08 ; '.'
000000000001869c         db  0x45 ; 'E'
000000000001869d         db  0x0b ; '.'
000000000001869e         db  0x00 ; '.'
000000000001869f         db  0x00 ; '.'
00000000000186a0         dd         0x00000010                                  ; Length of the record
00000000000186a4         dd         0x000022a4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000186a8         db         0x98, 0x8f, 2 dup (0xff)                    ; begin 0x11640
00000000000186ac         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x1164a)
00000000000186b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000186b1         align      4
00000000000186b4         dd         0x00000018                                  ; Length of the record
00000000000186b8         dd         0x000022b8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000186bc         db         0x94, 0x8f, 2 dup (0xff)                    ; begin 0x11650
00000000000186c0         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0x11691)
00000000000186c4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000186c5         db  0x44 ; 'D'
00000000000186c6         db  0x0e ; '.'
00000000000186c7         db  0x30 ; '0'
00000000000186c8         db  0x77 ; 'w'
00000000000186c9         db  0x0a ; '.'
00000000000186ca         db  0x0e ; '.'
00000000000186cb         db  0x08 ; '.'
00000000000186cc         db  0x41 ; 'A'
00000000000186cd         db  0x0b ; '.'
00000000000186ce         db  0x00 ; '.'
00000000000186cf         db  0x00 ; '.'
00000000000186d0         dd         0x0000001c                                  ; Length of the record
00000000000186d4         dd         0x000022d4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000186d8         db         0xc8, 0x8f, 2 dup (0xff)                    ; begin 0x116a0
00000000000186dc         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x11700)
00000000000186e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000186e1         db  0x44 ; 'D'
00000000000186e2         db  0x0e ; '.'
00000000000186e3         db  0x10 ; '.'
00000000000186e4         db  0x75 ; 'u'
00000000000186e5         db  0x0a ; '.'
00000000000186e6         db  0x0e ; '.'
00000000000186e7         db  0x08 ; '.'
00000000000186e8         db  0x47 ; 'G'
00000000000186e9         db  0x0b ; '.'
00000000000186ea         db  0x5f ; '_'
00000000000186eb         db  0x0e ; '.'
00000000000186ec         db  0x08 ; '.'
00000000000186ed         db  0x00 ; '.'
00000000000186ee         db  0x00 ; '.'
00000000000186ef         db  0x00 ; '.'
00000000000186f0         dd         0x00000014                                  ; Length of the record
00000000000186f4         dd         0x000022f4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000186f8         db         0x08, 0x90, 2 dup (0xff)                    ; begin 0x11700
00000000000186fc         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x11736)
0000000000018700         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018701         align      8
0000000000018708         dd         0x0000001c                                  ; Length of the record
000000000001870c         dd         0x0000230c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018710         db         0x30, 0x90, 2 dup (0xff)                    ; begin 0x11740
0000000000018714         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x1177c)
0000000000018718         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018719         db  0x44 ; 'D'
000000000001871a         db  0x0e ; '.'
000000000001871b         db  0x10 ; '.'
000000000001871c         db  0x61 ; 'a'
000000000001871d         db  0x0a ; '.'
000000000001871e         db  0x0e ; '.'
000000000001871f         db  0x08 ; '.'
0000000000018720         db  0x4b ; 'K'
0000000000018721         db  0x0b ; '.'
0000000000018722         db  0x4b ; 'K'
0000000000018723         db  0x0e ; '.'
0000000000018724         db  0x08 ; '.'
0000000000018725         db  0x00 ; '.'
0000000000018726         db  0x00 ; '.'
0000000000018727         db  0x00 ; '.'
0000000000018728         dd         0x0000001c                                  ; Length of the record
000000000001872c         dd         0x0000232c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018730         db         0x50, 0x90, 2 dup (0xff)                    ; begin 0x11780
0000000000018734         db         0x6e, 3 dup (0x00)                          ; length 0x6e (end at 0x117ee)
0000000000018738         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018739         db  0x44 ; 'D'
000000000001873a         db  0x0e ; '.'
000000000001873b         db  0x60 ; '`'
000000000001873c         db  0x7e ; '~'
000000000001873d         db  0x0a ; '.'
000000000001873e         db  0x0e ; '.'
000000000001873f         db  0x08 ; '.'
0000000000018740         db  0x46 ; 'F'
0000000000018741         db  0x0b ; '.'
0000000000018742         db  0x00 ; '.'
0000000000018743         db  0x00 ; '.'
0000000000018744         db  0x00 ; '.'
0000000000018745         db  0x00 ; '.'
0000000000018746         db  0x00 ; '.'
0000000000018747         db  0x00 ; '.'
0000000000018748         dd         0x00000018                                  ; Length of the record
000000000001874c         dd         0x0000234c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018750         db         0xa0, 0x90, 2 dup (0xff)                    ; begin 0x117f0
0000000000018754         db         0x23, 3 dup (0x00)                          ; length 0x23 (end at 0x11813)
0000000000018758         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018759         db  0x41 ; 'A'
000000000001875a         db  0x0e ; '.'
000000000001875b         db  0x10 ; '.'
000000000001875c         db  0x83 ; '.'
000000000001875d         db  0x02 ; '.'
000000000001875e         db  0x61 ; 'a'
000000000001875f         db  0x0e ; '.'
0000000000018760         db  0x08 ; '.'
0000000000018761         db  0x00 ; '.'
0000000000018762         db  0x00 ; '.'
0000000000018763         db  0x00 ; '.'
0000000000018764         dd         0x0000001c                                  ; Length of the record
0000000000018768         dd         0x00002368                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
000000000001876c         db         0xb4, 0x90, 2 dup (0xff)                    ; begin 0x11820
0000000000018770         db         0x34, 3 dup (0x00)                          ; length 0x34 (end at 0x11854)
0000000000018774         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018775         db  0x41 ; 'A'
0000000000018776         db  0x0e ; '.'
0000000000018777         db  0x10 ; '.'
0000000000018778         db  0x83 ; '.'
0000000000018779         db  0x02 ; '.'
000000000001877a         db  0x6b ; 'k'
000000000001877b         db  0x0a ; '.'
000000000001877c         db  0x0e ; '.'
000000000001877d         db  0x08 ; '.'
000000000001877e         db  0x44 ; 'D'
000000000001877f         db  0x0b ; '.'
0000000000018780         db  0x43 ; 'C'
0000000000018781         db  0x0e ; '.'
0000000000018782         db  0x08 ; '.'
0000000000018783         db  0x00 ; '.'
0000000000018784         dd         0x00000010                                  ; Length of the record
0000000000018788         dd         0x00002388                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
000000000001878c         db         0xd4, 0x90, 2 dup (0xff)                    ; begin 0x11860
0000000000018790         db         0x04, 3 dup (0x00)                          ; length 0x4 (end at 0x11864)
0000000000018794         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018795         align      8
0000000000018798         dd         0x00000048                                  ; Length of the record
000000000001879c         dd         0x0000239c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000187a0         db         0xd0, 0x90, 2 dup (0xff)                    ; begin 0x11870
00000000000187a4         db         0x1a, 0x01, 2 dup (0x00)                    ; length 0x11a (end at 0x1198a)
00000000000187a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000187a9         db  0x42 ; 'B'
00000000000187aa         db  0x0e ; '.'
00000000000187ab         db  0x10 ; '.'
00000000000187ac         db  0x8f ; '.'
00000000000187ad         db  0x02 ; '.'
00000000000187ae         db  0x42 ; 'B'
00000000000187af         db  0x0e ; '.'
00000000000187b0         db  0x18 ; '.'
00000000000187b1         db  0x8e ; '.'
00000000000187b2         db  0x03 ; '.'
00000000000187b3         db  0x46 ; 'F'
00000000000187b4         db  0x0e ; '.'
00000000000187b5         db  0x20 ; ' '
00000000000187b6         db  0x8d ; '.'
00000000000187b7         db  0x04 ; '.'
00000000000187b8         db  0x42 ; 'B'
00000000000187b9         db  0x0e ; '.'
00000000000187ba         db  0x28 ; '('
00000000000187bb         db  0x8c ; '.'
00000000000187bc         db  0x05 ; '.'
00000000000187bd         db  0x44 ; 'D'
00000000000187be         db  0x0e ; '.'
00000000000187bf         db  0x30 ; '0'
00000000000187c0         db  0x86 ; '.'
00000000000187c1         db  0x06 ; '.'
00000000000187c2         db  0x41 ; 'A'
00000000000187c3         db  0x0e ; '.'
00000000000187c4         db  0x38 ; '8'
00000000000187c5         db  0x83 ; '.'
00000000000187c6         db  0x07 ; '.'
00000000000187c7         db  0x47 ; 'G'
00000000000187c8         db  0x0e ; '.'
00000000000187c9         db  0x60 ; '`'
00000000000187ca         db  0x02 ; '.'
00000000000187cb         db  0xde ; '.'
00000000000187cc         db  0x0a ; '.'
00000000000187cd         db  0x0e ; '.'
00000000000187ce         db  0x38 ; '8'
00000000000187cf         db  0x41 ; 'A'
00000000000187d0         db  0x0e ; '.'
00000000000187d1         db  0x30 ; '0'
00000000000187d2         db  0x41 ; 'A'
00000000000187d3         db  0x0e ; '.'
00000000000187d4         db  0x28 ; '('
00000000000187d5         db  0x42 ; 'B'
00000000000187d6         db  0x0e ; '.'
00000000000187d7         db  0x20 ; ' '
00000000000187d8         db  0x42 ; 'B'
00000000000187d9         db  0x0e ; '.'
00000000000187da         db  0x18 ; '.'
00000000000187db         db  0x42 ; 'B'
00000000000187dc         db  0x0e ; '.'
00000000000187dd         db  0x10 ; '.'
00000000000187de         db  0x42 ; 'B'
00000000000187df         db  0x0e ; '.'
00000000000187e0         db  0x08 ; '.'
00000000000187e1         db  0x48 ; 'H'
00000000000187e2         db  0x0b ; '.'
00000000000187e3         db  0x00 ; '.'
00000000000187e4         dd         0x00000018                                  ; Length of the record
00000000000187e8         dd         0x000023e8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000187ec         db         0xa4, 0x91, 2 dup (0xff)                    ; begin 0x11990
00000000000187f0         db         0x1e, 3 dup (0x00)                          ; length 0x1e (end at 0x119ae)
00000000000187f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000187f5         db  0x41 ; 'A'
00000000000187f6         db  0x0e ; '.'
00000000000187f7         db  0x10 ; '.'
00000000000187f8         db  0x83 ; '.'
00000000000187f9         db  0x02 ; '.'
00000000000187fa         db  0x58 ; 'X'
00000000000187fb         db  0x0e ; '.'
00000000000187fc         db  0x08 ; '.'
00000000000187fd         db  0x00 ; '.'
00000000000187fe         db  0x00 ; '.'
00000000000187ff         db  0x00 ; '.'
0000000000018800         dd         0x00000034                                  ; Length of the record
0000000000018804         dd         0x00002404                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018808         db         0xa8, 0x91, 2 dup (0xff)                    ; begin 0x119b0
000000000001880c         db         0x51, 3 dup (0x00)                          ; length 0x51 (end at 0x11a01)
0000000000018810         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018811         db  0x42 ; 'B'
0000000000018812         db  0x0e ; '.'
0000000000018813         db  0x10 ; '.'
0000000000018814         db  0x8d ; '.'
0000000000018815         db  0x02 ; '.'
0000000000018816         db  0x42 ; 'B'
0000000000018817         db  0x0e ; '.'
0000000000018818         db  0x18 ; '.'
0000000000018819         db  0x8c ; '.'
000000000001881a         db  0x03 ; '.'
000000000001881b         db  0x41 ; 'A'
000000000001881c         db  0x0e ; '.'
000000000001881d         db  0x20 ; ' '
000000000001881e         db  0x86 ; '.'
000000000001881f         db  0x04 ; '.'
0000000000018820         db  0x41 ; 'A'
0000000000018821         db  0x0e ; '.'
0000000000018822         db  0x28 ; '('
0000000000018823         db  0x83 ; '.'
0000000000018824         db  0x05 ; '.'
0000000000018825         db  0x47 ; 'G'
0000000000018826         db  0x0e ; '.'
0000000000018827         db  0x30 ; '0'
0000000000018828         db  0x7a ; 'z'
0000000000018829         db  0x0e ; '.'
000000000001882a         db  0x28 ; '('
000000000001882b         db  0x44 ; 'D'
000000000001882c         db  0x0e ; '.'
000000000001882d         db  0x20 ; ' '
000000000001882e         db  0x41 ; 'A'
000000000001882f         db  0x0e ; '.'
0000000000018830         db  0x18 ; '.'
0000000000018831         db  0x42 ; 'B'
0000000000018832         db  0x0e ; '.'
0000000000018833         db  0x10 ; '.'
0000000000018834         db  0x42 ; 'B'
0000000000018835         db  0x0e ; '.'
0000000000018836         db  0x08 ; '.'
0000000000018837         db  0x00 ; '.'
0000000000018838         dd         0x0000001c                                  ; Length of the record
000000000001883c         dd         0x0000243c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018840         db         0xd0, 0x91, 2 dup (0xff)                    ; begin 0x11a10
0000000000018844         db         0x5d, 3 dup (0x00)                          ; length 0x5d (end at 0x11a6d)
0000000000018848         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018849         db  0x41 ; 'A'
000000000001884a         db  0x0e ; '.'
000000000001884b         db  0x10 ; '.'
000000000001884c         db  0x86 ; '.'
000000000001884d         db  0x02 ; '.'
000000000001884e         db  0x41 ; 'A'
000000000001884f         db  0x0e ; '.'
0000000000018850         db  0x18 ; '.'
0000000000018851         db  0x83 ; '.'
0000000000018852         db  0x03 ; '.'
0000000000018853         db  0x44 ; 'D'
0000000000018854         db  0x0e ; '.'
0000000000018855         db  0x20 ; ' '
0000000000018856         db  0x00 ; '.'
0000000000018857         db  0x00 ; '.'
0000000000018858         dd         0x00000048                                  ; Length of the record
000000000001885c         dd         0x0000245c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018860         db         0x10, 0x92, 2 dup (0xff)                    ; begin 0x11a70
0000000000018864         db         0x29, 0x03, 2 dup (0x00)                    ; length 0x329 (end at 0x11d99)
0000000000018868         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018869         db  0x42 ; 'B'
000000000001886a         db  0x0e ; '.'
000000000001886b         db  0x10 ; '.'
000000000001886c         db  0x8f ; '.'
000000000001886d         db  0x02 ; '.'
000000000001886e         db  0x42 ; 'B'
000000000001886f         db  0x0e ; '.'
0000000000018870         db  0x18 ; '.'
0000000000018871         db  0x8e ; '.'
0000000000018872         db  0x03 ; '.'
0000000000018873         db  0x42 ; 'B'
0000000000018874         db  0x0e ; '.'
0000000000018875         db  0x20 ; ' '
0000000000018876         db  0x8d ; '.'
0000000000018877         db  0x04 ; '.'
0000000000018878         db  0x42 ; 'B'
0000000000018879         db  0x0e ; '.'
000000000001887a         db  0x28 ; '('
000000000001887b         db  0x8c ; '.'
000000000001887c         db  0x05 ; '.'
000000000001887d         db  0x41 ; 'A'
000000000001887e         db  0x0e ; '.'
000000000001887f         db  0x30 ; '0'
0000000000018880         db  0x86 ; '.'
0000000000018881         db  0x06 ; '.'
0000000000018882         db  0x41 ; 'A'
0000000000018883         db  0x0e ; '.'
0000000000018884         db  0x38 ; '8'
0000000000018885         db  0x83 ; '.'
0000000000018886         db  0x07 ; '.'
0000000000018887         db  0x44 ; 'D'
0000000000018888         db  0x0e ; '.'
0000000000018889         db  0x70 ; 'p'
000000000001888a         db  0x02 ; '.'
000000000001888b         db  0x94 ; '.'
000000000001888c         db  0x0a ; '.'
000000000001888d         db  0x0e ; '.'
000000000001888e         db  0x38 ; '8'
000000000001888f         db  0x41 ; 'A'
0000000000018890         db  0x0e ; '.'
0000000000018891         db  0x30 ; '0'
0000000000018892         db  0x41 ; 'A'
0000000000018893         db  0x0e ; '.'
0000000000018894         db  0x28 ; '('
0000000000018895         db  0x42 ; 'B'
0000000000018896         db  0x0e ; '.'
0000000000018897         db  0x20 ; ' '
0000000000018898         db  0x42 ; 'B'
0000000000018899         db  0x0e ; '.'
000000000001889a         db  0x18 ; '.'
000000000001889b         db  0x42 ; 'B'
000000000001889c         db  0x0e ; '.'
000000000001889d         db  0x10 ; '.'
000000000001889e         db  0x42 ; 'B'
000000000001889f         db  0x0e ; '.'
00000000000188a0         db  0x08 ; '.'
00000000000188a1         db  0x44 ; 'D'
00000000000188a2         db  0x0b ; '.'
00000000000188a3         db  0x00 ; '.'
00000000000188a4         dd         0x00000010                                  ; Length of the record
00000000000188a8         dd         0x000024a8                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000188ac         db         0xf4, 0x94, 2 dup (0xff)                    ; begin 0x11da0
00000000000188b0         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x11da5)
00000000000188b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000188b5         align      8
00000000000188b8         dd         0x00000010                                  ; Length of the record
00000000000188bc         dd         0x000024bc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000188c0         db         0xf0, 0x94, 2 dup (0xff)                    ; begin 0x11db0
00000000000188c4         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x11db5)
00000000000188c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000188c9         align      4
00000000000188cc         dd         0x00000060                                  ; Length of the record
00000000000188d0         dd         0x000024d0                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000188d4         db         0xec, 0x94, 2 dup (0xff)                    ; begin 0x11dc0
00000000000188d8         db         0x96, 0x01, 2 dup (0x00)                    ; length 0x196 (end at 0x11f56)
00000000000188dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000188dd         db  0x42 ; 'B'
00000000000188de         db  0x0e ; '.'
00000000000188df         db  0x10 ; '.'
00000000000188e0         db  0x8f ; '.'
00000000000188e1         db  0x02 ; '.'
00000000000188e2         db  0x42 ; 'B'
00000000000188e3         db  0x0e ; '.'
00000000000188e4         db  0x18 ; '.'
00000000000188e5         db  0x8e ; '.'
00000000000188e6         db  0x03 ; '.'
00000000000188e7         db  0x42 ; 'B'
00000000000188e8         db  0x0e ; '.'
00000000000188e9         db  0x20 ; ' '
00000000000188ea         db  0x8d ; '.'
00000000000188eb         db  0x04 ; '.'
00000000000188ec         db  0x42 ; 'B'
00000000000188ed         db  0x0e ; '.'
00000000000188ee         db  0x28 ; '('
00000000000188ef         db  0x8c ; '.'
00000000000188f0         db  0x05 ; '.'
00000000000188f1         db  0x44 ; 'D'
00000000000188f2         db  0x0e ; '.'
00000000000188f3         db  0x30 ; '0'
00000000000188f4         db  0x86 ; '.'
00000000000188f5         db  0x06 ; '.'
00000000000188f6         db  0x41 ; 'A'
00000000000188f7         db  0x0e ; '.'
00000000000188f8         db  0x38 ; '8'
00000000000188f9         db  0x83 ; '.'
00000000000188fa         db  0x07 ; '.'
00000000000188fb         db  0x4a ; 'J'
00000000000188fc         db  0x0e ; '.'
00000000000188fd         db  0x50 ; 'P'
00000000000188fe         db  0x02 ; '.'
00000000000188ff         db  0x5f ; '_'
0000000000018900         db  0x0a ; '.'
0000000000018901         db  0x0e ; '.'
0000000000018902         db  0x38 ; '8'
0000000000018903         db  0x41 ; 'A'
0000000000018904         db  0x0e ; '.'
0000000000018905         db  0x30 ; '0'
0000000000018906         db  0x41 ; 'A'
0000000000018907         db  0x0e ; '.'
0000000000018908         db  0x28 ; '('
0000000000018909         db  0x42 ; 'B'
000000000001890a         db  0x0e ; '.'
000000000001890b         db  0x20 ; ' '
000000000001890c         db  0x42 ; 'B'
000000000001890d         db  0x0e ; '.'
000000000001890e         db  0x18 ; '.'
000000000001890f         db  0x42 ; 'B'
0000000000018910         db  0x0e ; '.'
0000000000018911         db  0x10 ; '.'
0000000000018912         db  0x42 ; 'B'
0000000000018913         db  0x0e ; '.'
0000000000018914         db  0x08 ; '.'
0000000000018915         db  0x48 ; 'H'
0000000000018916         db  0x0b ; '.'
0000000000018917         db  0x02 ; '.'
0000000000018918         db  0x9b ; '.'
0000000000018919         db  0x0a ; '.'
000000000001891a         db  0x0e ; '.'
000000000001891b         db  0x38 ; '8'
000000000001891c         db  0x41 ; 'A'
000000000001891d         db  0x0e ; '.'
000000000001891e         db  0x30 ; '0'
000000000001891f         db  0x41 ; 'A'
0000000000018920         db  0x0e ; '.'
0000000000018921         db  0x28 ; '('
0000000000018922         db  0x42 ; 'B'
0000000000018923         db  0x0e ; '.'
0000000000018924         db  0x20 ; ' '
0000000000018925         db  0x42 ; 'B'
0000000000018926         db  0x0e ; '.'
0000000000018927         db  0x18 ; '.'
0000000000018928         db  0x42 ; 'B'
0000000000018929         db  0x0e ; '.'
000000000001892a         db  0x10 ; '.'
000000000001892b         db  0x42 ; 'B'
000000000001892c         db  0x0e ; '.'
000000000001892d         db  0x08 ; '.'
000000000001892e         db  0x43 ; 'C'
000000000001892f         db  0x0b ; '.'
0000000000018930         dd         0x00000034                                  ; Length of the record
0000000000018934         dd         0x00002534                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018938         db         0x28, 0x96, 2 dup (0xff)                    ; begin 0x11f60
000000000001893c         db         0x49, 3 dup (0x00)                          ; length 0x49 (end at 0x11fa9)
0000000000018940         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018941         db  0x41 ; 'A'
0000000000018942         db  0x0e ; '.'
0000000000018943         db  0x10 ; '.'
0000000000018944         db  0x86 ; '.'
0000000000018945         db  0x02 ; '.'
0000000000018946         db  0x41 ; 'A'
0000000000018947         db  0x0e ; '.'
0000000000018948         db  0x18 ; '.'
0000000000018949         db  0x83 ; '.'
000000000001894a         db  0x03 ; '.'
000000000001894b         db  0x53 ; 'S'
000000000001894c         db  0x0e ; '.'
000000000001894d         db  0x20 ; ' '
000000000001894e         db  0x59 ; 'Y'
000000000001894f         db  0x0a ; '.'
0000000000018950         db  0x0e ; '.'
0000000000018951         db  0x18 ; '.'
0000000000018952         db  0x44 ; 'D'
0000000000018953         db  0x0e ; '.'
0000000000018954         db  0x10 ; '.'
0000000000018955         db  0x41 ; 'A'
0000000000018956         db  0x0e ; '.'
0000000000018957         db  0x08 ; '.'
0000000000018958         db  0x4d ; 'M'
0000000000018959         db  0x0b ; '.'
000000000001895a         db  0x44 ; 'D'
000000000001895b         db  0x0e ; '.'
000000000001895c         db  0x18 ; '.'
000000000001895d         db  0x43 ; 'C'
000000000001895e         db  0x0e ; '.'
000000000001895f         db  0x10 ; '.'
0000000000018960         db  0x41 ; 'A'
0000000000018961         db  0x0e ; '.'
0000000000018962         db  0x08 ; '.'
0000000000018963         db  0x00 ; '.'
0000000000018964         db  0x00 ; '.'
0000000000018965         db  0x00 ; '.'
0000000000018966         db  0x00 ; '.'
0000000000018967         db  0x00 ; '.'
0000000000018968         dd         0x00000010                                  ; Length of the record
000000000001896c         dd         0x0000256c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018970         db         0x40, 0x96, 2 dup (0xff)                    ; begin 0x11fb0
0000000000018974         db         0x8e, 0x02, 2 dup (0x00)                    ; length 0x28e (end at 0x1223e)
0000000000018978         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018979         align      4
000000000001897c         dd         0x00000030                                  ; Length of the record
0000000000018980         dd         0x00002580                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018984         db         0xbc, 0x98, 2 dup (0xff)                    ; begin 0x12240
0000000000018988         db         0x40, 0x02, 2 dup (0x00)                    ; length 0x240 (end at 0x12480)
000000000001898c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001898d         db  0x42 ; 'B'
000000000001898e         db  0x0e ; '.'
000000000001898f         db  0x10 ; '.'
0000000000018990         db  0x8d ; '.'
0000000000018991         db  0x02 ; '.'
0000000000018992         db  0x42 ; 'B'
0000000000018993         db  0x0e ; '.'
0000000000018994         db  0x18 ; '.'
0000000000018995         db  0x8c ; '.'
0000000000018996         db  0x03 ; '.'
0000000000018997         db  0x48 ; 'H'
0000000000018998         db  0x0e ; '.'
0000000000018999         db  0x20 ; ' '
000000000001899a         db  0x86 ; '.'
000000000001899b         db  0x04 ; '.'
000000000001899c         db  0x44 ; 'D'
000000000001899d         db  0x0e ; '.'
000000000001899e         db  0x28 ; '('
000000000001899f         db  0x83 ; '.'
00000000000189a0         db  0x05 ; '.'
00000000000189a1         db  0x03 ; '.'
00000000000189a2         db  0x09 ; '.'
00000000000189a3         db  0x02 ; '.'
00000000000189a4         db  0x0e ; '.'
00000000000189a5         db  0x20 ; ' '
00000000000189a6         db  0x57 ; 'W'
00000000000189a7         db  0x0e ; '.'
00000000000189a8         db  0x18 ; '.'
00000000000189a9         db  0x4d ; 'M'
00000000000189aa         db  0x0e ; '.'
00000000000189ab         db  0x10 ; '.'
00000000000189ac         db  0x42 ; 'B'
00000000000189ad         db  0x0e ; '.'
00000000000189ae         db  0x08 ; '.'
00000000000189af         db  0x00 ; '.'
00000000000189b0         dd         0x00000014                                  ; Length of the record
00000000000189b4         dd         0x000025b4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000189b8         db         0xc8, 0x9a, 2 dup (0xff)                    ; begin 0x12480
00000000000189bc         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x1248e)
00000000000189c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000189c1         align      8
00000000000189c8         dd         0x00000034                                  ; Length of the record
00000000000189cc         dd         0x000025cc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
00000000000189d0         db         0xc0, 0x9a, 2 dup (0xff)                    ; begin 0x12490
00000000000189d4         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x1250b)
00000000000189d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000189d9         db  0x42 ; 'B'
00000000000189da         db  0x0e ; '.'
00000000000189db         db  0x10 ; '.'
00000000000189dc         db  0x8c ; '.'
00000000000189dd         db  0x02 ; '.'
00000000000189de         db  0x41 ; 'A'
00000000000189df         db  0x0e ; '.'
00000000000189e0         db  0x18 ; '.'
00000000000189e1         db  0x86 ; '.'
00000000000189e2         db  0x03 ; '.'
00000000000189e3         db  0x41 ; 'A'
00000000000189e4         db  0x0e ; '.'
00000000000189e5         db  0x20 ; ' '
00000000000189e6         db  0x83 ; '.'
00000000000189e7         db  0x04 ; '.'
00000000000189e8         db  0x7d ; '}'
00000000000189e9         db  0x0a ; '.'
00000000000189ea         db  0x0e ; '.'
00000000000189eb         db  0x18 ; '.'
00000000000189ec         db  0x41 ; 'A'
00000000000189ed         db  0x0e ; '.'
00000000000189ee         db  0x10 ; '.'
00000000000189ef         db  0x42 ; 'B'
00000000000189f0         db  0x0e ; '.'
00000000000189f1         db  0x08 ; '.'
00000000000189f2         db  0x44 ; 'D'
00000000000189f3         db  0x0b ; '.'
00000000000189f4         db  0x60 ; '`'
00000000000189f5         db  0x0a ; '.'
00000000000189f6         db  0x0e ; '.'
00000000000189f7         db  0x18 ; '.'
00000000000189f8         db  0x41 ; 'A'
00000000000189f9         db  0x0e ; '.'
00000000000189fa         db  0x10 ; '.'
00000000000189fb         db  0x42 ; 'B'
00000000000189fc         db  0x0e ; '.'
00000000000189fd         db  0x08 ; '.'
00000000000189fe         db  0x45 ; 'E'
00000000000189ff         db  0x0b ; '.'
0000000000018a00         dd         0x00000034                                  ; Length of the record
0000000000018a04         dd         0x00002604                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018a08         db         0x08, 0x9b, 2 dup (0xff)                    ; begin 0x12510
0000000000018a0c         db         0x7e, 0x02, 2 dup (0x00)                    ; length 0x27e (end at 0x1278e)
0000000000018a10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018a11         db  0x42 ; 'B'
0000000000018a12         db  0x0e ; '.'
0000000000018a13         db  0x10 ; '.'
0000000000018a14         db  0x8c ; '.'
0000000000018a15         db  0x02 ; '.'
0000000000018a16         db  0x41 ; 'A'
0000000000018a17         db  0x0e ; '.'
0000000000018a18         db  0x18 ; '.'
0000000000018a19         db  0x86 ; '.'
0000000000018a1a         db  0x03 ; '.'
0000000000018a1b         db  0x43 ; 'C'
0000000000018a1c         db  0x0e ; '.'
0000000000018a1d         db  0x20 ; ' '
0000000000018a1e         db  0x83 ; '.'
0000000000018a1f         db  0x04 ; '.'
0000000000018a20         db  0x44 ; 'D'
0000000000018a21         db  0x0e ; '.'
0000000000018a22         db  0x70 ; 'p'
0000000000018a23         db  0x02 ; '.'
0000000000018a24         db  0xf0 ; '.'
0000000000018a25         db  0x0a ; '.'
0000000000018a26         db  0x0e ; '.'
0000000000018a27         db  0x20 ; ' '
0000000000018a28         db  0x41 ; 'A'
0000000000018a29         db  0x0e ; '.'
0000000000018a2a         db  0x18 ; '.'
0000000000018a2b         db  0x41 ; 'A'
0000000000018a2c         db  0x0e ; '.'
0000000000018a2d         db  0x10 ; '.'
0000000000018a2e         db  0x42 ; 'B'
0000000000018a2f         db  0x0e ; '.'
0000000000018a30         db  0x08 ; '.'
0000000000018a31         db  0x42 ; 'B'
0000000000018a32         db  0x0b ; '.'
0000000000018a33         db  0x00 ; '.'
0000000000018a34         db  0x00 ; '.'
0000000000018a35         db  0x00 ; '.'
0000000000018a36         db  0x00 ; '.'
0000000000018a37         db  0x00 ; '.'
0000000000018a38         dd         0x0000002c                                  ; Length of the record
0000000000018a3c         dd         0x0000263c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018a40         db         0x50, 0x9d, 2 dup (0xff)                    ; begin 0x12790
0000000000018a44         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x12823)
0000000000018a48         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018a49         db  0x42 ; 'B'
0000000000018a4a         db  0x0e ; '.'
0000000000018a4b         db  0x10 ; '.'
0000000000018a4c         db  0x8c ; '.'
0000000000018a4d         db  0x02 ; '.'
0000000000018a4e         db  0x41 ; 'A'
0000000000018a4f         db  0x0e ; '.'
0000000000018a50         db  0x18 ; '.'
0000000000018a51         db  0x86 ; '.'
0000000000018a52         db  0x03 ; '.'
0000000000018a53         db  0x44 ; 'D'
0000000000018a54         db  0x0e ; '.'
0000000000018a55         db  0x20 ; ' '
0000000000018a56         db  0x83 ; '.'
0000000000018a57         db  0x04 ; '.'
0000000000018a58         db  0x5e ; '^'
0000000000018a59         db  0x0a ; '.'
0000000000018a5a         db  0x0e ; '.'
0000000000018a5b         db  0x18 ; '.'
0000000000018a5c         db  0x41 ; 'A'
0000000000018a5d         db  0x0e ; '.'
0000000000018a5e         db  0x10 ; '.'
0000000000018a5f         db  0x42 ; 'B'
0000000000018a60         db  0x0e ; '.'
0000000000018a61         db  0x08 ; '.'
0000000000018a62         db  0x48 ; 'H'
0000000000018a63         db  0x0b ; '.'
0000000000018a64         db  0x00 ; '.'
0000000000018a65         db  0x00 ; '.'
0000000000018a66         db  0x00 ; '.'
0000000000018a67         db  0x00 ; '.'
0000000000018a68         dd         0x00000044                                  ; Length of the record
0000000000018a6c         dd         0x0000266c                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018a70         db         0xc0, 0x9d, 2 dup (0xff)                    ; begin 0x12830
0000000000018a74         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x12895)
0000000000018a78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018a79         db  0x42 ; 'B'
0000000000018a7a         db  0x0e ; '.'
0000000000018a7b         db  0x10 ; '.'
0000000000018a7c         db  0x8f ; '.'
0000000000018a7d         db  0x02 ; '.'
0000000000018a7e         db  0x42 ; 'B'
0000000000018a7f         db  0x0e ; '.'
0000000000018a80         db  0x18 ; '.'
0000000000018a81         db  0x8e ; '.'
0000000000018a82         db  0x03 ; '.'
0000000000018a83         db  0x45 ; 'E'
0000000000018a84         db  0x0e ; '.'
0000000000018a85         db  0x20 ; ' '
0000000000018a86         db  0x8d ; '.'
0000000000018a87         db  0x04 ; '.'
0000000000018a88         db  0x42 ; 'B'
0000000000018a89         db  0x0e ; '.'
0000000000018a8a         db  0x28 ; '('
0000000000018a8b         db  0x8c ; '.'
0000000000018a8c         db  0x05 ; '.'
0000000000018a8d         db  0x48 ; 'H'
0000000000018a8e         db  0x0e ; '.'
0000000000018a8f         db  0x30 ; '0'
0000000000018a90         db  0x86 ; '.'
0000000000018a91         db  0x06 ; '.'
0000000000018a92         db  0x48 ; 'H'
0000000000018a93         db  0x0e ; '.'
0000000000018a94         db  0x38 ; '8'
0000000000018a95         db  0x83 ; '.'
0000000000018a96         db  0x07 ; '.'
0000000000018a97         db  0x4d ; 'M'
0000000000018a98         db  0x0e ; '.'
0000000000018a99         db  0x40 ; '@'
0000000000018a9a         db  0x72 ; 'r'
0000000000018a9b         db  0x0e ; '.'
0000000000018a9c         db  0x38 ; '8'
0000000000018a9d         db  0x41 ; 'A'
0000000000018a9e         db  0x0e ; '.'
0000000000018a9f         db  0x30 ; '0'
0000000000018aa0         db  0x41 ; 'A'
0000000000018aa1         db  0x0e ; '.'
0000000000018aa2         db  0x28 ; '('
0000000000018aa3         db  0x42 ; 'B'
0000000000018aa4         db  0x0e ; '.'
0000000000018aa5         db  0x20 ; ' '
0000000000018aa6         db  0x42 ; 'B'
0000000000018aa7         db  0x0e ; '.'
0000000000018aa8         db  0x18 ; '.'
0000000000018aa9         db  0x42 ; 'B'
0000000000018aaa         db  0x0e ; '.'
0000000000018aab         db  0x10 ; '.'
0000000000018aac         db  0x42 ; 'B'
0000000000018aad         db  0x0e ; '.'
0000000000018aae         db  0x08 ; '.'
0000000000018aaf         db  0x00 ; '.'
0000000000018ab0         dd         0x00000014                                  ; Length of the record
0000000000018ab4         dd         0x000026b4                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018ab8         db         0xe8, 0x9d, 2 dup (0xff)                    ; begin 0x128a0
0000000000018abc         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x128a2)
0000000000018ac0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018ac1         align      8
0000000000018ac8         dd         0x00000010                                  ; Length of the record
0000000000018acc         dd         0x000026cc                                  ; FDE: parent CIE at 0x16400 (FDE encoding = 0x1B)
0000000000018ad0         db         0xe0, 0x9d, 2 dup (0xff)                    ; begin 0x128b0
0000000000018ad4         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x128be)
0000000000018ad8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000018ad9         align      32


        ; Segment Segment 3
        ; Range: [0x219530; 0x21a718[ (4584 bytes)
        ; File offset : [103728; 106656[ (2928 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x219530; 0x219538[ (8 bytes)
        ; File offset : [103728; 103736[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000219530         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x219538; 0x219540[ (8 bytes)
        ; File offset : [103736; 103744[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000219538         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x219540; 0x219a58[ (1304 bytes)
        ; File offset : [103744; 105048[ (1304 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     preserve_args.7371:
0000000000219540         db  0xc9 ; '.'                                         ; DATA XREF=decode_preserve_arg+126
0000000000219541         db  0x2a ; '*'
0000000000219542         db  0x01 ; '.'
0000000000219543         db  0x00 ; '.'
0000000000219544         db  0x00 ; '.'
0000000000219545         db  0x00 ; '.'
0000000000219546         db  0x00 ; '.'
0000000000219547         db  0x00 ; '.'
0000000000219548         db  0xce ; '.'
0000000000219549         db  0x2a ; '*'
000000000021954a         db  0x01 ; '.'
000000000021954b         db  0x00 ; '.'
000000000021954c         db  0x00 ; '.'
000000000021954d         db  0x00 ; '.'
000000000021954e         db  0x00 ; '.'
000000000021954f         db  0x00 ; '.'
0000000000219550         db  0xd9 ; '.'
0000000000219551         db  0x2a ; '*'
0000000000219552         db  0x01 ; '.'
0000000000219553         db  0x00 ; '.'
0000000000219554         db  0x00 ; '.'
0000000000219555         db  0x00 ; '.'
0000000000219556         db  0x00 ; '.'
0000000000219557         db  0x00 ; '.'
0000000000219558         db  0xe3 ; '.'
0000000000219559         db  0x2a ; '*'
000000000021955a         db  0x01 ; '.'
000000000021955b         db  0x00 ; '.'
000000000021955c         db  0x00 ; '.'
000000000021955d         db  0x00 ; '.'
000000000021955e         db  0x00 ; '.'
000000000021955f         db  0x00 ; '.'
0000000000219560         db  0xe9 ; '.'
0000000000219561         db  0x2a ; '*'
0000000000219562         db  0x01 ; '.'
0000000000219563         db  0x00 ; '.'
0000000000219564         db  0x00 ; '.'
0000000000219565         db  0x00 ; '.'
0000000000219566         db  0x00 ; '.'
0000000000219567         db  0x00 ; '.'
0000000000219568         db  0xf1 ; '.'
0000000000219569         db  0x2a ; '*'
000000000021956a         db  0x01 ; '.'
000000000021956b         db  0x00 ; '.'
000000000021956c         db  0x00 ; '.'
000000000021956d         db  0x00 ; '.'
000000000021956e         db  0x00 ; '.'
000000000021956f         db  0x00 ; '.'
0000000000219570         db  0xf7 ; '.'
0000000000219571         db  0x2a ; '*'
0000000000219572         db  0x01 ; '.'
0000000000219573         db  0x00 ; '.'
0000000000219574         db  0x00 ; '.'
0000000000219575         db  0x00 ; '.'
0000000000219576         db  0x00 ; '.'
0000000000219577         db  0x00 ; '.'
0000000000219578         db  0x00 ; '.'
0000000000219579         db  0x00 ; '.'
000000000021957a         db  0x00 ; '.'
000000000021957b         db  0x00 ; '.'
000000000021957c         db  0x00 ; '.'
000000000021957d         db  0x00 ; '.'
000000000021957e         db  0x00 ; '.'
000000000021957f         db  0x00 ; '.'
                     long_opts:
0000000000219580         db  0xfb ; '.'                                         ; DATA XREF=main+22
0000000000219581         db  0x2a ; '*'
0000000000219582         db  0x01 ; '.'
0000000000219583         db  0x00 ; '.'
0000000000219584         db  0x00 ; '.'
0000000000219585         db  0x00 ; '.'
0000000000219586         db  0x00 ; '.'
0000000000219587         db  0x00 ; '.'
0000000000219588         db  0x00 ; '.'
0000000000219589         db  0x00 ; '.'
000000000021958a         db  0x00 ; '.'
000000000021958b         db  0x00 ; '.'
000000000021958c         db  0x00 ; '.'
000000000021958d         db  0x00 ; '.'
000000000021958e         db  0x00 ; '.'
000000000021958f         db  0x00 ; '.'
0000000000219590         db  0x00 ; '.'
0000000000219591         db  0x00 ; '.'
0000000000219592         db  0x00 ; '.'
0000000000219593         db  0x00 ; '.'
0000000000219594         db  0x00 ; '.'
0000000000219595         db  0x00 ; '.'
0000000000219596         db  0x00 ; '.'
0000000000219597         db  0x00 ; '.'
0000000000219598         db  0x61 ; 'a'
0000000000219599         db  0x00 ; '.'
000000000021959a         db  0x00 ; '.'
000000000021959b         db  0x00 ; '.'
000000000021959c         db  0x00 ; '.'
000000000021959d         db  0x00 ; '.'
000000000021959e         db  0x00 ; '.'
000000000021959f         db  0x00 ; '.'
00000000002195a0         db  0x03 ; '.'
00000000002195a1         db  0x2b ; '+'
00000000002195a2         db  0x01 ; '.'
00000000002195a3         db  0x00 ; '.'
00000000002195a4         db  0x00 ; '.'
00000000002195a5         db  0x00 ; '.'
00000000002195a6         db  0x00 ; '.'
00000000002195a7         db  0x00 ; '.'
00000000002195a8         db  0x00 ; '.'
00000000002195a9         db  0x00 ; '.'
00000000002195aa         db  0x00 ; '.'
00000000002195ab         db  0x00 ; '.'
00000000002195ac         db  0x00 ; '.'
00000000002195ad         db  0x00 ; '.'
00000000002195ae         db  0x00 ; '.'
00000000002195af         db  0x00 ; '.'
00000000002195b0         db  0x00 ; '.'
00000000002195b1         db  0x00 ; '.'
00000000002195b2         db  0x00 ; '.'
00000000002195b3         db  0x00 ; '.'
00000000002195b4         db  0x00 ; '.'
00000000002195b5         db  0x00 ; '.'
00000000002195b6         db  0x00 ; '.'
00000000002195b7         db  0x00 ; '.'
00000000002195b8         db  0x80 ; '.'
00000000002195b9         db  0x00 ; '.'
00000000002195ba         db  0x00 ; '.'
00000000002195bb         db  0x00 ; '.'
00000000002195bc         db  0x00 ; '.'
00000000002195bd         db  0x00 ; '.'
00000000002195be         db  0x00 ; '.'
00000000002195bf         db  0x00 ; '.'
00000000002195c0         db  0x13 ; '.'
00000000002195c1         db  0x2b ; '+'
00000000002195c2         db  0x01 ; '.'
00000000002195c3         db  0x00 ; '.'
00000000002195c4         db  0x00 ; '.'
00000000002195c5         db  0x00 ; '.'
00000000002195c6         db  0x00 ; '.'
00000000002195c7         db  0x00 ; '.'
00000000002195c8         db  0x02 ; '.'
00000000002195c9         db  0x00 ; '.'
00000000002195ca         db  0x00 ; '.'
00000000002195cb         db  0x00 ; '.'
00000000002195cc         db  0x00 ; '.'
00000000002195cd         db  0x00 ; '.'
00000000002195ce         db  0x00 ; '.'
00000000002195cf         db  0x00 ; '.'
00000000002195d0         db  0x00 ; '.'
00000000002195d1         db  0x00 ; '.'
00000000002195d2         db  0x00 ; '.'
00000000002195d3         db  0x00 ; '.'
00000000002195d4         db  0x00 ; '.'
00000000002195d5         db  0x00 ; '.'
00000000002195d6         db  0x00 ; '.'
00000000002195d7         db  0x00 ; '.'
00000000002195d8         db  0x62 ; 'b'
00000000002195d9         db  0x00 ; '.'
00000000002195da         db  0x00 ; '.'
00000000002195db         db  0x00 ; '.'
00000000002195dc         db  0x00 ; '.'
00000000002195dd         db  0x00 ; '.'
00000000002195de         db  0x00 ; '.'
00000000002195df         db  0x00 ; '.'
00000000002195e0         db  0x1a ; '.'
00000000002195e1         db  0x2b ; '+'
00000000002195e2         db  0x01 ; '.'
00000000002195e3         db  0x00 ; '.'
00000000002195e4         db  0x00 ; '.'
00000000002195e5         db  0x00 ; '.'
00000000002195e6         db  0x00 ; '.'
00000000002195e7         db  0x00 ; '.'
00000000002195e8         db  0x00 ; '.'
00000000002195e9         db  0x00 ; '.'
00000000002195ea         db  0x00 ; '.'
00000000002195eb         db  0x00 ; '.'
00000000002195ec         db  0x00 ; '.'
00000000002195ed         db  0x00 ; '.'
00000000002195ee         db  0x00 ; '.'
00000000002195ef         db  0x00 ; '.'
00000000002195f0         db  0x00 ; '.'
00000000002195f1         db  0x00 ; '.'
00000000002195f2         db  0x00 ; '.'
00000000002195f3         db  0x00 ; '.'
00000000002195f4         db  0x00 ; '.'
00000000002195f5         db  0x00 ; '.'
00000000002195f6         db  0x00 ; '.'
00000000002195f7         db  0x00 ; '.'
00000000002195f8         db  0x81 ; '.'
00000000002195f9         db  0x00 ; '.'
00000000002195fa         db  0x00 ; '.'
00000000002195fb         db  0x00 ; '.'
00000000002195fc         db  0x00 ; '.'
00000000002195fd         db  0x00 ; '.'
00000000002195fe         db  0x00 ; '.'
00000000002195ff         db  0x00 ; '.'
0000000000219600         db  0x48 ; 'H'
0000000000219601         db  0x2b ; '+'
0000000000219602         db  0x01 ; '.'
0000000000219603         db  0x00 ; '.'
0000000000219604         db  0x00 ; '.'
0000000000219605         db  0x00 ; '.'
0000000000219606         db  0x00 ; '.'
0000000000219607         db  0x00 ; '.'
0000000000219608         db  0x00 ; '.'
0000000000219609         db  0x00 ; '.'
000000000021960a         db  0x00 ; '.'
000000000021960b         db  0x00 ; '.'
000000000021960c         db  0x00 ; '.'
000000000021960d         db  0x00 ; '.'
000000000021960e         db  0x00 ; '.'
000000000021960f         db  0x00 ; '.'
0000000000219610         db  0x00 ; '.'
0000000000219611         db  0x00 ; '.'
0000000000219612         db  0x00 ; '.'
0000000000219613         db  0x00 ; '.'
0000000000219614         db  0x00 ; '.'
0000000000219615         db  0x00 ; '.'
0000000000219616         db  0x00 ; '.'
0000000000219617         db  0x00 ; '.'
0000000000219618         db  0x4c ; 'L'
0000000000219619         db  0x00 ; '.'
000000000021961a         db  0x00 ; '.'
000000000021961b         db  0x00 ; '.'
000000000021961c         db  0x00 ; '.'
000000000021961d         db  0x00 ; '.'
000000000021961e         db  0x00 ; '.'
000000000021961f         db  0x00 ; '.'
0000000000219620         db  0x28 ; '('
0000000000219621         db  0x2b ; '+'
0000000000219622         db  0x01 ; '.'
0000000000219623         db  0x00 ; '.'
0000000000219624         db  0x00 ; '.'
0000000000219625         db  0x00 ; '.'
0000000000219626         db  0x00 ; '.'
0000000000219627         db  0x00 ; '.'
0000000000219628         db  0x00 ; '.'
0000000000219629         db  0x00 ; '.'
000000000021962a         db  0x00 ; '.'
000000000021962b         db  0x00 ; '.'
000000000021962c         db  0x00 ; '.'
000000000021962d         db  0x00 ; '.'
000000000021962e         db  0x00 ; '.'
000000000021962f         db  0x00 ; '.'
0000000000219630         db  0x00 ; '.'
0000000000219631         db  0x00 ; '.'
0000000000219632         db  0x00 ; '.'
0000000000219633         db  0x00 ; '.'
0000000000219634         db  0x00 ; '.'
0000000000219635         db  0x00 ; '.'
0000000000219636         db  0x00 ; '.'
0000000000219637         db  0x00 ; '.'
0000000000219638         db  0x66 ; 'f'
0000000000219639         db  0x00 ; '.'
000000000021963a         db  0x00 ; '.'
000000000021963b         db  0x00 ; '.'
000000000021963c         db  0x00 ; '.'
000000000021963d         db  0x00 ; '.'
000000000021963e         db  0x00 ; '.'
000000000021963f         db  0x00 ; '.'
0000000000219640         db  0x2e ; '.'
0000000000219641         db  0x2b ; '+'
0000000000219642         db  0x01 ; '.'
0000000000219643         db  0x00 ; '.'
0000000000219644         db  0x00 ; '.'
0000000000219645         db  0x00 ; '.'
0000000000219646         db  0x00 ; '.'
0000000000219647         db  0x00 ; '.'
0000000000219648         db  0x00 ; '.'
0000000000219649         db  0x00 ; '.'
000000000021964a         db  0x00 ; '.'
000000000021964b         db  0x00 ; '.'
000000000021964c         db  0x00 ; '.'
000000000021964d         db  0x00 ; '.'
000000000021964e         db  0x00 ; '.'
000000000021964f         db  0x00 ; '.'
0000000000219650         db  0x00 ; '.'
0000000000219651         db  0x00 ; '.'
0000000000219652         db  0x00 ; '.'
0000000000219653         db  0x00 ; '.'
0000000000219654         db  0x00 ; '.'
0000000000219655         db  0x00 ; '.'
0000000000219656         db  0x00 ; '.'
0000000000219657         db  0x00 ; '.'
0000000000219658         db  0x69 ; 'i'
0000000000219659         db  0x00 ; '.'
000000000021965a         db  0x00 ; '.'
000000000021965b         db  0x00 ; '.'
000000000021965c         db  0x00 ; '.'
000000000021965d         db  0x00 ; '.'
000000000021965e         db  0x00 ; '.'
000000000021965f         db  0x00 ; '.'
0000000000219660         db  0xc9 ; '.'
0000000000219661         db  0x2b ; '+'
0000000000219662         db  0x01 ; '.'
0000000000219663         db  0x00 ; '.'
0000000000219664         db  0x00 ; '.'
0000000000219665         db  0x00 ; '.'
0000000000219666         db  0x00 ; '.'
0000000000219667         db  0x00 ; '.'
0000000000219668         db  0x00 ; '.'
0000000000219669         db  0x00 ; '.'
000000000021966a         db  0x00 ; '.'
000000000021966b         db  0x00 ; '.'
000000000021966c         db  0x00 ; '.'
000000000021966d         db  0x00 ; '.'
000000000021966e         db  0x00 ; '.'
000000000021966f         db  0x00 ; '.'
0000000000219670         db  0x00 ; '.'
0000000000219671         db  0x00 ; '.'
0000000000219672         db  0x00 ; '.'
0000000000219673         db  0x00 ; '.'
0000000000219674         db  0x00 ; '.'
0000000000219675         db  0x00 ; '.'
0000000000219676         db  0x00 ; '.'
0000000000219677         db  0x00 ; '.'
0000000000219678         db  0x6c ; 'l'
0000000000219679         db  0x00 ; '.'
000000000021967a         db  0x00 ; '.'
000000000021967b         db  0x00 ; '.'
000000000021967c         db  0x00 ; '.'
000000000021967d         db  0x00 ; '.'
000000000021967e         db  0x00 ; '.'
000000000021967f         db  0x00 ; '.'
0000000000219680         db  0x3a ; ':'
0000000000219681         db  0x2b ; '+'
0000000000219682         db  0x01 ; '.'
0000000000219683         db  0x00 ; '.'
0000000000219684         db  0x00 ; '.'
0000000000219685         db  0x00 ; '.'
0000000000219686         db  0x00 ; '.'
0000000000219687         db  0x00 ; '.'
0000000000219688         db  0x00 ; '.'
0000000000219689         db  0x00 ; '.'
000000000021968a         db  0x00 ; '.'
000000000021968b         db  0x00 ; '.'
000000000021968c         db  0x00 ; '.'
000000000021968d         db  0x00 ; '.'
000000000021968e         db  0x00 ; '.'
000000000021968f         db  0x00 ; '.'
0000000000219690         db  0x00 ; '.'
0000000000219691         db  0x00 ; '.'
0000000000219692         db  0x00 ; '.'
0000000000219693         db  0x00 ; '.'
0000000000219694         db  0x00 ; '.'
0000000000219695         db  0x00 ; '.'
0000000000219696         db  0x00 ; '.'
0000000000219697         db  0x00 ; '.'
0000000000219698         db  0x6e ; 'n'
0000000000219699         db  0x00 ; '.'
000000000021969a         db  0x00 ; '.'
000000000021969b         db  0x00 ; '.'
000000000021969c         db  0x00 ; '.'
000000000021969d         db  0x00 ; '.'
000000000021969e         db  0x00 ; '.'
000000000021969f         db  0x00 ; '.'
00000000002196a0         db  0x45 ; 'E'
00000000002196a1         db  0x2b ; '+'
00000000002196a2         db  0x01 ; '.'
00000000002196a3         db  0x00 ; '.'
00000000002196a4         db  0x00 ; '.'
00000000002196a5         db  0x00 ; '.'
00000000002196a6         db  0x00 ; '.'
00000000002196a7         db  0x00 ; '.'
00000000002196a8         db  0x00 ; '.'
00000000002196a9         db  0x00 ; '.'
00000000002196aa         db  0x00 ; '.'
00000000002196ab         db  0x00 ; '.'
00000000002196ac         db  0x00 ; '.'
00000000002196ad         db  0x00 ; '.'
00000000002196ae         db  0x00 ; '.'
00000000002196af         db  0x00 ; '.'
00000000002196b0         db  0x00 ; '.'
00000000002196b1         db  0x00 ; '.'
00000000002196b2         db  0x00 ; '.'
00000000002196b3         db  0x00 ; '.'
00000000002196b4         db  0x00 ; '.'
00000000002196b5         db  0x00 ; '.'
00000000002196b6         db  0x00 ; '.'
00000000002196b7         db  0x00 ; '.'
00000000002196b8         db  0x50 ; 'P'
00000000002196b9         db  0x00 ; '.'
00000000002196ba         db  0x00 ; '.'
00000000002196bb         db  0x00 ; '.'
00000000002196bc         db  0x00 ; '.'
00000000002196bd         db  0x00 ; '.'
00000000002196be         db  0x00 ; '.'
00000000002196bf         db  0x00 ; '.'
00000000002196c0         db  0xf1 ; '.'
00000000002196c1         db  0x28 ; '('
00000000002196c2         db  0x01 ; '.'
00000000002196c3         db  0x00 ; '.'
00000000002196c4         db  0x00 ; '.'
00000000002196c5         db  0x00 ; '.'
00000000002196c6         db  0x00 ; '.'
00000000002196c7         db  0x00 ; '.'
00000000002196c8         db  0x01 ; '.'
00000000002196c9         db  0x00 ; '.'
00000000002196ca         db  0x00 ; '.'
00000000002196cb         db  0x00 ; '.'
00000000002196cc         db  0x00 ; '.'
00000000002196cd         db  0x00 ; '.'
00000000002196ce         db  0x00 ; '.'
00000000002196cf         db  0x00 ; '.'
00000000002196d0         db  0x00 ; '.'
00000000002196d1         db  0x00 ; '.'
00000000002196d2         db  0x00 ; '.'
00000000002196d3         db  0x00 ; '.'
00000000002196d4         db  0x00 ; '.'
00000000002196d5         db  0x00 ; '.'
00000000002196d6         db  0x00 ; '.'
00000000002196d7         db  0x00 ; '.'
00000000002196d8         db  0x82 ; '.'
00000000002196d9         db  0x00 ; '.'
00000000002196da         db  0x00 ; '.'
00000000002196db         db  0x00 ; '.'
00000000002196dc         db  0x00 ; '.'
00000000002196dd         db  0x00 ; '.'
00000000002196de         db  0x00 ; '.'
00000000002196df         db  0x00 ; '.'
00000000002196e0         db  0x54 ; 'T'
00000000002196e1         db  0x2b ; '+'
00000000002196e2         db  0x01 ; '.'
00000000002196e3         db  0x00 ; '.'
00000000002196e4         db  0x00 ; '.'
00000000002196e5         db  0x00 ; '.'
00000000002196e6         db  0x00 ; '.'
00000000002196e7         db  0x00 ; '.'
00000000002196e8         db  0x00 ; '.'
00000000002196e9         db  0x00 ; '.'
00000000002196ea         db  0x00 ; '.'
00000000002196eb         db  0x00 ; '.'
00000000002196ec         db  0x00 ; '.'
00000000002196ed         db  0x00 ; '.'
00000000002196ee         db  0x00 ; '.'
00000000002196ef         db  0x00 ; '.'
00000000002196f0         db  0x00 ; '.'
00000000002196f1         db  0x00 ; '.'
00000000002196f2         db  0x00 ; '.'
00000000002196f3         db  0x00 ; '.'
00000000002196f4         db  0x00 ; '.'
00000000002196f5         db  0x00 ; '.'
00000000002196f6         db  0x00 ; '.'
00000000002196f7         db  0x00 ; '.'
00000000002196f8         db  0x54 ; 'T'
00000000002196f9         db  0x00 ; '.'
00000000002196fa         db  0x00 ; '.'
00000000002196fb         db  0x00 ; '.'
00000000002196fc         db  0x00 ; '.'
00000000002196fd         db  0x00 ; '.'
00000000002196fe         db  0x00 ; '.'
00000000002196ff         db  0x00 ; '.'
0000000000219700         db  0x68 ; 'h'
0000000000219701         db  0x2b ; '+'
0000000000219702         db  0x01 ; '.'
0000000000219703         db  0x00 ; '.'
0000000000219704         db  0x00 ; '.'
0000000000219705         db  0x00 ; '.'
0000000000219706         db  0x00 ; '.'
0000000000219707         db  0x00 ; '.'
0000000000219708         db  0x00 ; '.'
0000000000219709         db  0x00 ; '.'
000000000021970a         db  0x00 ; '.'
000000000021970b         db  0x00 ; '.'
000000000021970c         db  0x00 ; '.'
000000000021970d         db  0x00 ; '.'
000000000021970e         db  0x00 ; '.'
000000000021970f         db  0x00 ; '.'
0000000000219710         db  0x00 ; '.'
0000000000219711         db  0x00 ; '.'
0000000000219712         db  0x00 ; '.'
0000000000219713         db  0x00 ; '.'
0000000000219714         db  0x00 ; '.'
0000000000219715         db  0x00 ; '.'
0000000000219716         db  0x00 ; '.'
0000000000219717         db  0x00 ; '.'
0000000000219718         db  0x78 ; 'x'
0000000000219719         db  0x00 ; '.'
000000000021971a         db  0x00 ; '.'
000000000021971b         db  0x00 ; '.'
000000000021971c         db  0x00 ; '.'
000000000021971d         db  0x00 ; '.'
000000000021971e         db  0x00 ; '.'
000000000021971f         db  0x00 ; '.'
0000000000219720         db  0x78 ; 'x'
0000000000219721         db  0x2b ; '+'
0000000000219722         db  0x01 ; '.'
0000000000219723         db  0x00 ; '.'
0000000000219724         db  0x00 ; '.'
0000000000219725         db  0x00 ; '.'
0000000000219726         db  0x00 ; '.'
0000000000219727         db  0x00 ; '.'
0000000000219728         db  0x00 ; '.'
0000000000219729         db  0x00 ; '.'
000000000021972a         db  0x00 ; '.'
000000000021972b         db  0x00 ; '.'
000000000021972c         db  0x00 ; '.'
000000000021972d         db  0x00 ; '.'
000000000021972e         db  0x00 ; '.'
000000000021972f         db  0x00 ; '.'
0000000000219730         db  0x00 ; '.'
0000000000219731         db  0x00 ; '.'
0000000000219732         db  0x00 ; '.'
0000000000219733         db  0x00 ; '.'
0000000000219734         db  0x00 ; '.'
0000000000219735         db  0x00 ; '.'
0000000000219736         db  0x00 ; '.'
0000000000219737         db  0x00 ; '.'
0000000000219738         db  0x83 ; '.'
0000000000219739         db  0x00 ; '.'
000000000021973a         db  0x00 ; '.'
000000000021973b         db  0x00 ; '.'
000000000021973c         db  0x00 ; '.'
000000000021973d         db  0x00 ; '.'
000000000021973e         db  0x00 ; '.'
000000000021973f         db  0x00 ; '.'
0000000000219740         db  0x80 ; '.'
0000000000219741         db  0x2b ; '+'
0000000000219742         db  0x01 ; '.'
0000000000219743         db  0x00 ; '.'
0000000000219744         db  0x00 ; '.'
0000000000219745         db  0x00 ; '.'
0000000000219746         db  0x00 ; '.'
0000000000219747         db  0x00 ; '.'
0000000000219748         db  0x00 ; '.'
0000000000219749         db  0x00 ; '.'
000000000021974a         db  0x00 ; '.'
000000000021974b         db  0x00 ; '.'
000000000021974c         db  0x00 ; '.'
000000000021974d         db  0x00 ; '.'
000000000021974e         db  0x00 ; '.'
000000000021974f         db  0x00 ; '.'
0000000000219750         db  0x00 ; '.'
0000000000219751         db  0x00 ; '.'
0000000000219752         db  0x00 ; '.'
0000000000219753         db  0x00 ; '.'
0000000000219754         db  0x00 ; '.'
0000000000219755         db  0x00 ; '.'
0000000000219756         db  0x00 ; '.'
0000000000219757         db  0x00 ; '.'
0000000000219758         db  0x83 ; '.'
0000000000219759         db  0x00 ; '.'
000000000021975a         db  0x00 ; '.'
000000000021975b         db  0x00 ; '.'
000000000021975c         db  0x00 ; '.'
000000000021975d         db  0x00 ; '.'
000000000021975e         db  0x00 ; '.'
000000000021975f         db  0x00 ; '.'
0000000000219760         db  0xe6 ; '.'
0000000000219761         db  0x28 ; '('
0000000000219762         db  0x01 ; '.'
0000000000219763         db  0x00 ; '.'
0000000000219764         db  0x00 ; '.'
0000000000219765         db  0x00 ; '.'
0000000000219766         db  0x00 ; '.'
0000000000219767         db  0x00 ; '.'
0000000000219768         db  0x02 ; '.'
0000000000219769         db  0x00 ; '.'
000000000021976a         db  0x00 ; '.'
000000000021976b         db  0x00 ; '.'
000000000021976c         db  0x00 ; '.'
000000000021976d         db  0x00 ; '.'
000000000021976e         db  0x00 ; '.'
000000000021976f         db  0x00 ; '.'
0000000000219770         db  0x00 ; '.'
0000000000219771         db  0x00 ; '.'
0000000000219772         db  0x00 ; '.'
0000000000219773         db  0x00 ; '.'
0000000000219774         db  0x00 ; '.'
0000000000219775         db  0x00 ; '.'
0000000000219776         db  0x00 ; '.'
0000000000219777         db  0x00 ; '.'
0000000000219778         db  0x84 ; '.'
0000000000219779         db  0x00 ; '.'
000000000021977a         db  0x00 ; '.'
000000000021977b         db  0x00 ; '.'
000000000021977c         db  0x00 ; '.'
000000000021977d         db  0x00 ; '.'
000000000021977e         db  0x00 ; '.'
000000000021977f         db  0x00 ; '.'
0000000000219780         db  0x85 ; '.'
0000000000219781         db  0x2b ; '+'
0000000000219782         db  0x01 ; '.'
0000000000219783         db  0x00 ; '.'
0000000000219784         db  0x00 ; '.'
0000000000219785         db  0x00 ; '.'
0000000000219786         db  0x00 ; '.'
0000000000219787         db  0x00 ; '.'
0000000000219788         db  0x00 ; '.'
0000000000219789         db  0x00 ; '.'
000000000021978a         db  0x00 ; '.'
000000000021978b         db  0x00 ; '.'
000000000021978c         db  0x00 ; '.'
000000000021978d         db  0x00 ; '.'
000000000021978e         db  0x00 ; '.'
000000000021978f         db  0x00 ; '.'
0000000000219790         db  0x00 ; '.'
0000000000219791         db  0x00 ; '.'
0000000000219792         db  0x00 ; '.'
0000000000219793         db  0x00 ; '.'
0000000000219794         db  0x00 ; '.'
0000000000219795         db  0x00 ; '.'
0000000000219796         db  0x00 ; '.'
0000000000219797         db  0x00 ; '.'
0000000000219798         db  0x52 ; 'R'
0000000000219799         db  0x00 ; '.'
000000000021979a         db  0x00 ; '.'
000000000021979b         db  0x00 ; '.'
000000000021979c         db  0x00 ; '.'
000000000021979d         db  0x00 ; '.'
000000000021979e         db  0x00 ; '.'
000000000021979f         db  0x00 ; '.'
00000000002197a0         db  0x8f ; '.'
00000000002197a1         db  0x2b ; '+'
00000000002197a2         db  0x01 ; '.'
00000000002197a3         db  0x00 ; '.'
00000000002197a4         db  0x00 ; '.'
00000000002197a5         db  0x00 ; '.'
00000000002197a6         db  0x00 ; '.'
00000000002197a7         db  0x00 ; '.'
00000000002197a8         db  0x00 ; '.'
00000000002197a9         db  0x00 ; '.'
00000000002197aa         db  0x00 ; '.'
00000000002197ab         db  0x00 ; '.'
00000000002197ac         db  0x00 ; '.'
00000000002197ad         db  0x00 ; '.'
00000000002197ae         db  0x00 ; '.'
00000000002197af         db  0x00 ; '.'
00000000002197b0         db  0x00 ; '.'
00000000002197b1         db  0x00 ; '.'
00000000002197b2         db  0x00 ; '.'
00000000002197b3         db  0x00 ; '.'
00000000002197b4         db  0x00 ; '.'
00000000002197b5         db  0x00 ; '.'
00000000002197b6         db  0x00 ; '.'
00000000002197b7         db  0x00 ; '.'
00000000002197b8         db  0x88 ; '.'
00000000002197b9         db  0x00 ; '.'
00000000002197ba         db  0x00 ; '.'
00000000002197bb         db  0x00 ; '.'
00000000002197bc         db  0x00 ; '.'
00000000002197bd         db  0x00 ; '.'
00000000002197be         db  0x00 ; '.'
00000000002197bf         db  0x00 ; '.'
00000000002197c0         db  0x65 ; 'e'
00000000002197c1         db  0x2a ; '*'
00000000002197c2         db  0x01 ; '.'
00000000002197c3         db  0x00 ; '.'
00000000002197c4         db  0x00 ; '.'
00000000002197c5         db  0x00 ; '.'
00000000002197c6         db  0x00 ; '.'
00000000002197c7         db  0x00 ; '.'
00000000002197c8         db  0x01 ; '.'
00000000002197c9         db  0x00 ; '.'
00000000002197ca         db  0x00 ; '.'
00000000002197cb         db  0x00 ; '.'
00000000002197cc         db  0x00 ; '.'
00000000002197cd         db  0x00 ; '.'
00000000002197ce         db  0x00 ; '.'
00000000002197cf         db  0x00 ; '.'
00000000002197d0         db  0x00 ; '.'
00000000002197d1         db  0x00 ; '.'
00000000002197d2         db  0x00 ; '.'
00000000002197d3         db  0x00 ; '.'
00000000002197d4         db  0x00 ; '.'
00000000002197d5         db  0x00 ; '.'
00000000002197d6         db  0x00 ; '.'
00000000002197d7         db  0x00 ; '.'
00000000002197d8         db  0x86 ; '.'
00000000002197d9         db  0x00 ; '.'
00000000002197da         db  0x00 ; '.'
00000000002197db         db  0x00 ; '.'
00000000002197dc         db  0x00 ; '.'
00000000002197dd         db  0x00 ; '.'
00000000002197de         db  0x00 ; '.'
00000000002197df         db  0x00 ; '.'
00000000002197e0         db  0x6e ; 'n'
00000000002197e1         db  0x2a ; '*'
00000000002197e2         db  0x01 ; '.'
00000000002197e3         db  0x00 ; '.'
00000000002197e4         db  0x00 ; '.'
00000000002197e5         db  0x00 ; '.'
00000000002197e6         db  0x00 ; '.'
00000000002197e7         db  0x00 ; '.'
00000000002197e8         db  0x02 ; '.'
00000000002197e9         db  0x00 ; '.'
00000000002197ea         db  0x00 ; '.'
00000000002197eb         db  0x00 ; '.'
00000000002197ec         db  0x00 ; '.'
00000000002197ed         db  0x00 ; '.'
00000000002197ee         db  0x00 ; '.'
00000000002197ef         db  0x00 ; '.'
00000000002197f0         db  0x00 ; '.'
00000000002197f1         db  0x00 ; '.'
00000000002197f2         db  0x00 ; '.'
00000000002197f3         db  0x00 ; '.'
00000000002197f4         db  0x00 ; '.'
00000000002197f5         db  0x00 ; '.'
00000000002197f6         db  0x00 ; '.'
00000000002197f7         db  0x00 ; '.'
00000000002197f8         db  0x85 ; '.'
00000000002197f9         db  0x00 ; '.'
00000000002197fa         db  0x00 ; '.'
00000000002197fb         db  0x00 ; '.'
00000000002197fc         db  0x00 ; '.'
00000000002197fd         db  0x00 ; '.'
00000000002197fe         db  0x00 ; '.'
00000000002197ff         db  0x00 ; '.'
0000000000219800         db  0xa2 ; '.'
0000000000219801         db  0x2b ; '+'
0000000000219802         db  0x01 ; '.'
0000000000219803         db  0x00 ; '.'
0000000000219804         db  0x00 ; '.'
0000000000219805         db  0x00 ; '.'
0000000000219806         db  0x00 ; '.'
0000000000219807         db  0x00 ; '.'
0000000000219808         db  0x00 ; '.'
0000000000219809         db  0x00 ; '.'
000000000021980a         db  0x00 ; '.'
000000000021980b         db  0x00 ; '.'
000000000021980c         db  0x00 ; '.'
000000000021980d         db  0x00 ; '.'
000000000021980e         db  0x00 ; '.'
000000000021980f         db  0x00 ; '.'
0000000000219810         db  0x00 ; '.'
0000000000219811         db  0x00 ; '.'
0000000000219812         db  0x00 ; '.'
0000000000219813         db  0x00 ; '.'
0000000000219814         db  0x00 ; '.'
0000000000219815         db  0x00 ; '.'
0000000000219816         db  0x00 ; '.'
0000000000219817         db  0x00 ; '.'
0000000000219818         db  0x87 ; '.'
0000000000219819         db  0x00 ; '.'
000000000021981a         db  0x00 ; '.'
000000000021981b         db  0x00 ; '.'
000000000021981c         db  0x00 ; '.'
000000000021981d         db  0x00 ; '.'
000000000021981e         db  0x00 ; '.'
000000000021981f         db  0x00 ; '.'
0000000000219820         db  0xb9 ; '.'
0000000000219821         db  0x2b ; '+'
0000000000219822         db  0x01 ; '.'
0000000000219823         db  0x00 ; '.'
0000000000219824         db  0x00 ; '.'
0000000000219825         db  0x00 ; '.'
0000000000219826         db  0x00 ; '.'
0000000000219827         db  0x00 ; '.'
0000000000219828         db  0x01 ; '.'
0000000000219829         db  0x00 ; '.'
000000000021982a         db  0x00 ; '.'
000000000021982b         db  0x00 ; '.'
000000000021982c         db  0x00 ; '.'
000000000021982d         db  0x00 ; '.'
000000000021982e         db  0x00 ; '.'
000000000021982f         db  0x00 ; '.'
0000000000219830         db  0x00 ; '.'
0000000000219831         db  0x00 ; '.'
0000000000219832         db  0x00 ; '.'
0000000000219833         db  0x00 ; '.'
0000000000219834         db  0x00 ; '.'
0000000000219835         db  0x00 ; '.'
0000000000219836         db  0x00 ; '.'
0000000000219837         db  0x00 ; '.'
0000000000219838         db  0x53 ; 'S'
0000000000219839         db  0x00 ; '.'
000000000021983a         db  0x00 ; '.'
000000000021983b         db  0x00 ; '.'
000000000021983c         db  0x00 ; '.'
000000000021983d         db  0x00 ; '.'
000000000021983e         db  0x00 ; '.'
000000000021983f         db  0x00 ; '.'
0000000000219840         db  0xc0 ; '.'
0000000000219841         db  0x2b ; '+'
0000000000219842         db  0x01 ; '.'
0000000000219843         db  0x00 ; '.'
0000000000219844         db  0x00 ; '.'
0000000000219845         db  0x00 ; '.'
0000000000219846         db  0x00 ; '.'
0000000000219847         db  0x00 ; '.'
0000000000219848         db  0x00 ; '.'
0000000000219849         db  0x00 ; '.'
000000000021984a         db  0x00 ; '.'
000000000021984b         db  0x00 ; '.'
000000000021984c         db  0x00 ; '.'
000000000021984d         db  0x00 ; '.'
000000000021984e         db  0x00 ; '.'
000000000021984f         db  0x00 ; '.'
0000000000219850         db  0x00 ; '.'
0000000000219851         db  0x00 ; '.'
0000000000219852         db  0x00 ; '.'
0000000000219853         db  0x00 ; '.'
0000000000219854         db  0x00 ; '.'
0000000000219855         db  0x00 ; '.'
0000000000219856         db  0x00 ; '.'
0000000000219857         db  0x00 ; '.'
0000000000219858         db  0x73 ; 's'
0000000000219859         db  0x00 ; '.'
000000000021985a         db  0x00 ; '.'
000000000021985b         db  0x00 ; '.'
000000000021985c         db  0x00 ; '.'
000000000021985d         db  0x00 ; '.'
000000000021985e         db  0x00 ; '.'
000000000021985f         db  0x00 ; '.'
0000000000219860         db  0x57 ; 'W'
0000000000219861         db  0x2b ; '+'
0000000000219862         db  0x01 ; '.'
0000000000219863         db  0x00 ; '.'
0000000000219864         db  0x00 ; '.'
0000000000219865         db  0x00 ; '.'
0000000000219866         db  0x00 ; '.'
0000000000219867         db  0x00 ; '.'
0000000000219868         db  0x01 ; '.'
0000000000219869         db  0x00 ; '.'
000000000021986a         db  0x00 ; '.'
000000000021986b         db  0x00 ; '.'
000000000021986c         db  0x00 ; '.'
000000000021986d         db  0x00 ; '.'
000000000021986e         db  0x00 ; '.'
000000000021986f         db  0x00 ; '.'
0000000000219870         db  0x00 ; '.'
0000000000219871         db  0x00 ; '.'
0000000000219872         db  0x00 ; '.'
0000000000219873         db  0x00 ; '.'
0000000000219874         db  0x00 ; '.'
0000000000219875         db  0x00 ; '.'
0000000000219876         db  0x00 ; '.'
0000000000219877         db  0x00 ; '.'
0000000000219878         db  0x74 ; 't'
0000000000219879         db  0x00 ; '.'
000000000021987a         db  0x00 ; '.'
000000000021987b         db  0x00 ; '.'
000000000021987c         db  0x00 ; '.'
000000000021987d         db  0x00 ; '.'
000000000021987e         db  0x00 ; '.'
000000000021987f         db  0x00 ; '.'
0000000000219880         db  0xce ; '.'
0000000000219881         db  0x2b ; '+'
0000000000219882         db  0x01 ; '.'
0000000000219883         db  0x00 ; '.'
0000000000219884         db  0x00 ; '.'
0000000000219885         db  0x00 ; '.'
0000000000219886         db  0x00 ; '.'
0000000000219887         db  0x00 ; '.'
0000000000219888         db  0x00 ; '.'
0000000000219889         db  0x00 ; '.'
000000000021988a         db  0x00 ; '.'
000000000021988b         db  0x00 ; '.'
000000000021988c         db  0x00 ; '.'
000000000021988d         db  0x00 ; '.'
000000000021988e         db  0x00 ; '.'
000000000021988f         db  0x00 ; '.'
0000000000219890         db  0x00 ; '.'
0000000000219891         db  0x00 ; '.'
0000000000219892         db  0x00 ; '.'
0000000000219893         db  0x00 ; '.'
0000000000219894         db  0x00 ; '.'
0000000000219895         db  0x00 ; '.'
0000000000219896         db  0x00 ; '.'
0000000000219897         db  0x00 ; '.'
0000000000219898         db  0x75 ; 'u'
0000000000219899         db  0x00 ; '.'
000000000021989a         db  0x00 ; '.'
000000000021989b         db  0x00 ; '.'
000000000021989c         db  0x00 ; '.'
000000000021989d         db  0x00 ; '.'
000000000021989e         db  0x00 ; '.'
000000000021989f         db  0x00 ; '.'
00000000002198a0         db  0xd5 ; '.'
00000000002198a1         db  0x2b ; '+'
00000000002198a2         db  0x01 ; '.'
00000000002198a3         db  0x00 ; '.'
00000000002198a4         db  0x00 ; '.'
00000000002198a5         db  0x00 ; '.'
00000000002198a6         db  0x00 ; '.'
00000000002198a7         db  0x00 ; '.'
00000000002198a8         db  0x00 ; '.'
00000000002198a9         db  0x00 ; '.'
00000000002198aa         db  0x00 ; '.'
00000000002198ab         db  0x00 ; '.'
00000000002198ac         db  0x00 ; '.'
00000000002198ad         db  0x00 ; '.'
00000000002198ae         db  0x00 ; '.'
00000000002198af         db  0x00 ; '.'
00000000002198b0         db  0x00 ; '.'
00000000002198b1         db  0x00 ; '.'
00000000002198b2         db  0x00 ; '.'
00000000002198b3         db  0x00 ; '.'
00000000002198b4         db  0x00 ; '.'
00000000002198b5         db  0x00 ; '.'
00000000002198b6         db  0x00 ; '.'
00000000002198b7         db  0x00 ; '.'
00000000002198b8         db  0x76 ; 'v'
00000000002198b9         db  0x00 ; '.'
00000000002198ba         db  0x00 ; '.'
00000000002198bb         db  0x00 ; '.'
00000000002198bc         db  0x00 ; '.'
00000000002198bd         db  0x00 ; '.'
00000000002198be         db  0x00 ; '.'
00000000002198bf         db  0x00 ; '.'
00000000002198c0         db  0xe9 ; '.'
00000000002198c1         db  0x2a ; '*'
00000000002198c2         db  0x01 ; '.'
00000000002198c3         db  0x00 ; '.'
00000000002198c4         db  0x00 ; '.'
00000000002198c5         db  0x00 ; '.'
00000000002198c6         db  0x00 ; '.'
00000000002198c7         db  0x00 ; '.'
00000000002198c8         db  0x02 ; '.'
00000000002198c9         db  0x00 ; '.'
00000000002198ca         db  0x00 ; '.'
00000000002198cb         db  0x00 ; '.'
00000000002198cc         db  0x00 ; '.'
00000000002198cd         db  0x00 ; '.'
00000000002198ce         db  0x00 ; '.'
00000000002198cf         db  0x00 ; '.'
00000000002198d0         db  0x00 ; '.'
00000000002198d1         db  0x00 ; '.'
00000000002198d2         db  0x00 ; '.'
00000000002198d3         db  0x00 ; '.'
00000000002198d4         db  0x00 ; '.'
00000000002198d5         db  0x00 ; '.'
00000000002198d6         db  0x00 ; '.'
00000000002198d7         db  0x00 ; '.'
00000000002198d8         db  0x5a ; 'Z'
00000000002198d9         db  0x00 ; '.'
00000000002198da         db  0x00 ; '.'
00000000002198db         db  0x00 ; '.'
00000000002198dc         db  0x00 ; '.'
00000000002198dd         db  0x00 ; '.'
00000000002198de         db  0x00 ; '.'
00000000002198df         db  0x00 ; '.'
00000000002198e0         db  0xdd ; '.'
00000000002198e1         db  0x2b ; '+'
00000000002198e2         db  0x01 ; '.'
00000000002198e3         db  0x00 ; '.'
00000000002198e4         db  0x00 ; '.'
00000000002198e5         db  0x00 ; '.'
00000000002198e6         db  0x00 ; '.'
00000000002198e7         db  0x00 ; '.'
00000000002198e8         db  0x00 ; '.'
00000000002198e9         db  0x00 ; '.'
00000000002198ea         db  0x00 ; '.'
00000000002198eb         db  0x00 ; '.'
00000000002198ec         db  0x00 ; '.'
00000000002198ed         db  0x00 ; '.'
00000000002198ee         db  0x00 ; '.'
00000000002198ef         db  0x00 ; '.'
00000000002198f0         db  0x00 ; '.'
00000000002198f1         db  0x00 ; '.'
00000000002198f2         db  0x00 ; '.'
00000000002198f3         db  0x00 ; '.'
00000000002198f4         db  0x00 ; '.'
00000000002198f5         db  0x00 ; '.'
00000000002198f6         db  0x00 ; '.'
00000000002198f7         db  0x00 ; '.'
00000000002198f8         db  0x7e ; '~'
00000000002198f9         db  0xff ; '.'
00000000002198fa         db  0xff ; '.'
00000000002198fb         db  0xff ; '.'
00000000002198fc         db  0x00 ; '.'
00000000002198fd         db  0x00 ; '.'
00000000002198fe         db  0x00 ; '.'
00000000002198ff         db  0x00 ; '.'
0000000000219900         db  0xe2 ; '.'
0000000000219901         db  0x2b ; '+'
0000000000219902         db  0x01 ; '.'
0000000000219903         db  0x00 ; '.'
0000000000219904         db  0x00 ; '.'
0000000000219905         db  0x00 ; '.'
0000000000219906         db  0x00 ; '.'
0000000000219907         db  0x00 ; '.'
0000000000219908         db  0x00 ; '.'
0000000000219909         db  0x00 ; '.'
000000000021990a         db  0x00 ; '.'
000000000021990b         db  0x00 ; '.'
000000000021990c         db  0x00 ; '.'
000000000021990d         db  0x00 ; '.'
000000000021990e         db  0x00 ; '.'
000000000021990f         db  0x00 ; '.'
0000000000219910         db  0x00 ; '.'
0000000000219911         db  0x00 ; '.'
0000000000219912         db  0x00 ; '.'
0000000000219913         db  0x00 ; '.'
0000000000219914         db  0x00 ; '.'
0000000000219915         db  0x00 ; '.'
0000000000219916         db  0x00 ; '.'
0000000000219917         db  0x00 ; '.'
0000000000219918         db  0x7d ; '}'
0000000000219919         db  0xff ; '.'
000000000021991a         db  0xff ; '.'
000000000021991b         db  0xff ; '.'
000000000021991c         db  0x00 ; '.'
000000000021991d         db  0x00 ; '.'
000000000021991e         db  0x00 ; '.'
000000000021991f         db  0x00 ; '.'
0000000000219920         db  0x00 ; '.'
0000000000219921         db  0x00 ; '.'
0000000000219922         db  0x00 ; '.'
0000000000219923         db  0x00 ; '.'
0000000000219924         db  0x00 ; '.'
0000000000219925         db  0x00 ; '.'
0000000000219926         db  0x00 ; '.'
0000000000219927         db  0x00 ; '.'
0000000000219928         db  0x00 ; '.'
0000000000219929         db  0x00 ; '.'
000000000021992a         db  0x00 ; '.'
000000000021992b         db  0x00 ; '.'
000000000021992c         db  0x00 ; '.'
000000000021992d         db  0x00 ; '.'
000000000021992e         db  0x00 ; '.'
000000000021992f         db  0x00 ; '.'
0000000000219930         db  0x00 ; '.'
0000000000219931         db  0x00 ; '.'
0000000000219932         db  0x00 ; '.'
0000000000219933         db  0x00 ; '.'
0000000000219934         db  0x00 ; '.'
0000000000219935         db  0x00 ; '.'
0000000000219936         db  0x00 ; '.'
0000000000219937         db  0x00 ; '.'
0000000000219938         db  0x00 ; '.'
0000000000219939         db  0x00 ; '.'
000000000021993a         db  0x00 ; '.'
000000000021993b         db  0x00 ; '.'
000000000021993c         db  0x00 ; '.'
000000000021993d         db  0x00 ; '.'
000000000021993e         db  0x00 ; '.'
000000000021993f         db  0x00 ; '.'
                     reflink_type_string:
0000000000219940         db  0xea ; '.'                                         ; DATA XREF=main+969
0000000000219941         db  0x2b ; '+'
0000000000219942         db  0x01 ; '.'
0000000000219943         db  0x00 ; '.'
0000000000219944         db  0x00 ; '.'
0000000000219945         db  0x00 ; '.'
0000000000219946         db  0x00 ; '.'
0000000000219947         db  0x00 ; '.'
0000000000219948         db  0x6e ; 'n'
0000000000219949         db  0x53 ; 'S'
000000000021994a         db  0x01 ; '.'
000000000021994b         db  0x00 ; '.'
000000000021994c         db  0x00 ; '.'
000000000021994d         db  0x00 ; '.'
000000000021994e         db  0x00 ; '.'
000000000021994f         db  0x00 ; '.'
0000000000219950         db  0xef ; '.'
0000000000219951         db  0x2b ; '+'
0000000000219952         db  0x01 ; '.'
0000000000219953         db  0x00 ; '.'
0000000000219954         db  0x00 ; '.'
0000000000219955         db  0x00 ; '.'
0000000000219956         db  0x00 ; '.'
0000000000219957         db  0x00 ; '.'
0000000000219958         db  0x00 ; '.'
0000000000219959         db  0x00 ; '.'
000000000021995a         db  0x00 ; '.'
000000000021995b         db  0x00 ; '.'
000000000021995c         db  0x00 ; '.'
000000000021995d         db  0x00 ; '.'
000000000021995e         db  0x00 ; '.'
000000000021995f         db  0x00 ; '.'
                     sparse_type_string:
0000000000219960         db  0xef ; '.'                                         ; DATA XREF=main+895
0000000000219961         db  0x2b ; '+'
0000000000219962         db  0x01 ; '.'
0000000000219963         db  0x00 ; '.'
0000000000219964         db  0x00 ; '.'
0000000000219965         db  0x00 ; '.'
0000000000219966         db  0x00 ; '.'
0000000000219967         db  0x00 ; '.'
0000000000219968         db  0xea ; '.'
0000000000219969         db  0x2b ; '+'
000000000021996a         db  0x01 ; '.'
000000000021996b         db  0x00 ; '.'
000000000021996c         db  0x00 ; '.'
000000000021996d         db  0x00 ; '.'
000000000021996e         db  0x00 ; '.'
000000000021996f         db  0x00 ; '.'
0000000000219970         db  0x6e ; 'n'
0000000000219971         db  0x53 ; 'S'
0000000000219972         db  0x01 ; '.'
0000000000219973         db  0x00 ; '.'
0000000000219974         db  0x00 ; '.'
0000000000219975         db  0x00 ; '.'
0000000000219976         db  0x00 ; '.'
0000000000219977         db  0x00 ; '.'
0000000000219978         db  0x00 ; '.'
0000000000219979         db  0x00 ; '.'
000000000021997a         db  0x00 ; '.'
000000000021997b         db  0x00 ; '.'
000000000021997c         db  0x00 ; '.'
000000000021997d         db  0x00 ; '.'
000000000021997e         db  0x00 ; '.'
000000000021997f         db  0x00 ; '.'
                     backup_args:
0000000000219980         db  0xb8 ; '.'                                         ; DATA XREF=get_version.part.0+11
0000000000219981         db  0x51 ; 'Q'
0000000000219982         db  0x01 ; '.'
0000000000219983         db  0x00 ; '.'
0000000000219984         db  0x00 ; '.'
0000000000219985         db  0x00 ; '.'
0000000000219986         db  0x00 ; '.'
0000000000219987         db  0x00 ; '.'
0000000000219988         db  0xbd ; '.'
0000000000219989         db  0x51 ; 'Q'
000000000021998a         db  0x01 ; '.'
000000000021998b         db  0x00 ; '.'
000000000021998c         db  0x00 ; '.'
000000000021998d         db  0x00 ; '.'
000000000021998e         db  0x00 ; '.'
000000000021998f         db  0x00 ; '.'
0000000000219990         db  0xc1 ; '.'
0000000000219991         db  0x51 ; 'Q'
0000000000219992         db  0x01 ; '.'
0000000000219993         db  0x00 ; '.'
0000000000219994         db  0x00 ; '.'
0000000000219995         db  0x00 ; '.'
0000000000219996         db  0x00 ; '.'
0000000000219997         db  0x00 ; '.'
0000000000219998         db  0xef ; '.'
0000000000219999         db  0x2b ; '+'
000000000021999a         db  0x01 ; '.'
000000000021999b         db  0x00 ; '.'
000000000021999c         db  0x00 ; '.'
000000000021999d         db  0x00 ; '.'
000000000021999e         db  0x00 ; '.'
000000000021999f         db  0x00 ; '.'
00000000002199a0         db  0xc8 ; '.'
00000000002199a1         db  0x51 ; 'Q'
00000000002199a2         db  0x01 ; '.'
00000000002199a3         db  0x00 ; '.'
00000000002199a4         db  0x00 ; '.'
00000000002199a5         db  0x00 ; '.'
00000000002199a6         db  0x00 ; '.'
00000000002199a7         db  0x00 ; '.'
00000000002199a8         db  0xd1 ; '.'
00000000002199a9         db  0x51 ; 'Q'
00000000002199aa         db  0x01 ; '.'
00000000002199ab         db  0x00 ; '.'
00000000002199ac         db  0x00 ; '.'
00000000002199ad         db  0x00 ; '.'
00000000002199ae         db  0x00 ; '.'
00000000002199af         db  0x00 ; '.'
00000000002199b0         db  0xd5 ; '.'
00000000002199b1         db  0x51 ; 'Q'
00000000002199b2         db  0x01 ; '.'
00000000002199b3         db  0x00 ; '.'
00000000002199b4         db  0x00 ; '.'
00000000002199b5         db  0x00 ; '.'
00000000002199b6         db  0x00 ; '.'
00000000002199b7         db  0x00 ; '.'
00000000002199b8         db  0xef ; '.'
00000000002199b9         db  0x2a ; '*'
00000000002199ba         db  0x01 ; '.'
00000000002199bb         db  0x00 ; '.'
00000000002199bc         db  0x00 ; '.'
00000000002199bd         db  0x00 ; '.'
00000000002199be         db  0x00 ; '.'
00000000002199bf         db  0x00 ; '.'
00000000002199c0         db  0x00 ; '.'
00000000002199c1         db  0x00 ; '.'
00000000002199c2         db  0x00 ; '.'
00000000002199c3         db  0x00 ; '.'
00000000002199c4         db  0x00 ; '.'
00000000002199c5         db  0x00 ; '.'
00000000002199c6         db  0x00 ; '.'
00000000002199c7         db  0x00 ; '.'
00000000002199c8         db  0x00 ; '.'
00000000002199c9         db  0x00 ; '.'
00000000002199ca         db  0x00 ; '.'
00000000002199cb         db  0x00 ; '.'
00000000002199cc         db  0x00 ; '.'
00000000002199cd         db  0x00 ; '.'
00000000002199ce         db  0x00 ; '.'
00000000002199cf         db  0x00 ; '.'
00000000002199d0         db  0x00 ; '.'
00000000002199d1         db  0x00 ; '.'
00000000002199d2         db  0x00 ; '.'
00000000002199d3         db  0x00 ; '.'
00000000002199d4         db  0x00 ; '.'
00000000002199d5         db  0x00 ; '.'
00000000002199d6         db  0x00 ; '.'
00000000002199d7         db  0x00 ; '.'
00000000002199d8         db  0x00 ; '.'
00000000002199d9         db  0x00 ; '.'
00000000002199da         db  0x00 ; '.'
00000000002199db         db  0x00 ; '.'
00000000002199dc         db  0x00 ; '.'
00000000002199dd         db  0x00 ; '.'
00000000002199de         db  0x00 ; '.'
00000000002199df         db  0x00 ; '.'
                     quoting_style_args:
00000000002199e0         db  0x39 ; '9'
00000000002199e1         db  0x53 ; 'S'
00000000002199e2         db  0x01 ; '.'
00000000002199e3         db  0x00 ; '.'
00000000002199e4         db  0x00 ; '.'
00000000002199e5         db  0x00 ; '.'
00000000002199e6         db  0x00 ; '.'
00000000002199e7         db  0x00 ; '.'
00000000002199e8         db  0x41 ; 'A'
00000000002199e9         db  0x53 ; 'S'
00000000002199ea         db  0x01 ; '.'
00000000002199eb         db  0x00 ; '.'
00000000002199ec         db  0x00 ; '.'
00000000002199ed         db  0x00 ; '.'
00000000002199ee         db  0x00 ; '.'
00000000002199ef         db  0x00 ; '.'
00000000002199f0         db  0x47 ; 'G'
00000000002199f1         db  0x53 ; 'S'
00000000002199f2         db  0x01 ; '.'
00000000002199f3         db  0x00 ; '.'
00000000002199f4         db  0x00 ; '.'
00000000002199f5         db  0x00 ; '.'
00000000002199f6         db  0x00 ; '.'
00000000002199f7         db  0x00 ; '.'
00000000002199f8         db  0x54 ; 'T'
00000000002199f9         db  0x53 ; 'S'
00000000002199fa         db  0x01 ; '.'
00000000002199fb         db  0x00 ; '.'
00000000002199fc         db  0x00 ; '.'
00000000002199fd         db  0x00 ; '.'
00000000002199fe         db  0x00 ; '.'
00000000002199ff         db  0x00 ; '.'
0000000000219a00         db  0x61 ; 'a'
0000000000219a01         db  0x53 ; 'S'
0000000000219a02         db  0x01 ; '.'
0000000000219a03         db  0x00 ; '.'
0000000000219a04         db  0x00 ; '.'
0000000000219a05         db  0x00 ; '.'
0000000000219a06         db  0x00 ; '.'
0000000000219a07         db  0x00 ; '.'
0000000000219a08         db  0x62 ; 'b'
0000000000219a09         db  0x50 ; 'P'
0000000000219a0a         db  0x01 ; '.'
0000000000219a0b         db  0x00 ; '.'
0000000000219a0c         db  0x00 ; '.'
0000000000219a0d         db  0x00 ; '.'
0000000000219a0e         db  0x00 ; '.'
0000000000219a0f         db  0x00 ; '.'
0000000000219a10         db  0x75 ; 'u'
0000000000219a11         db  0x53 ; 'S'
0000000000219a12         db  0x01 ; '.'
0000000000219a13         db  0x00 ; '.'
0000000000219a14         db  0x00 ; '.'
0000000000219a15         db  0x00 ; '.'
0000000000219a16         db  0x00 ; '.'
0000000000219a17         db  0x00 ; '.'
0000000000219a18         db  0x5a ; 'Z'
0000000000219a19         db  0x53 ; 'S'
0000000000219a1a         db  0x01 ; '.'
0000000000219a1b         db  0x00 ; '.'
0000000000219a1c         db  0x00 ; '.'
0000000000219a1d         db  0x00 ; '.'
0000000000219a1e         db  0x00 ; '.'
0000000000219a1f         db  0x00 ; '.'
0000000000219a20         db  0x4c ; 'L'
0000000000219a21         db  0x2a ; '*'
0000000000219a22         db  0x01 ; '.'
0000000000219a23         db  0x00 ; '.'
0000000000219a24         db  0x00 ; '.'
0000000000219a25         db  0x00 ; '.'
0000000000219a26         db  0x00 ; '.'
0000000000219a27         db  0x00 ; '.'
0000000000219a28         db  0x7d ; '}'
0000000000219a29         db  0x53 ; 'S'
0000000000219a2a         db  0x01 ; '.'
0000000000219a2b         db  0x00 ; '.'
0000000000219a2c         db  0x00 ; '.'
0000000000219a2d         db  0x00 ; '.'
0000000000219a2e         db  0x00 ; '.'
0000000000219a2f         db  0x00 ; '.'
0000000000219a30         db  0x00 ; '.'
0000000000219a31         db  0x00 ; '.'
0000000000219a32         db  0x00 ; '.'
0000000000219a33         db  0x00 ; '.'
0000000000219a34         db  0x00 ; '.'
0000000000219a35         db  0x00 ; '.'
0000000000219a36         db  0x00 ; '.'
0000000000219a37         db  0x00 ; '.'
0000000000219a38         db  0x00 ; '.'
0000000000219a39         db  0x00 ; '.'
0000000000219a3a         db  0x00 ; '.'
0000000000219a3b         db  0x00 ; '.'
0000000000219a3c         db  0x00 ; '.'
0000000000219a3d         db  0x00 ; '.'
0000000000219a3e         db  0x00 ; '.'
0000000000219a3f         db  0x00 ; '.'
                     comparison_function_table:
0000000000219a40         db  0x00 ; '.'                                         ; DATA XREF=streamsavedir+2
0000000000219a41         db  0x00 ; '.'
0000000000219a42         db  0x00 ; '.'
0000000000219a43         db  0x00 ; '.'
0000000000219a44         db  0x00 ; '.'
0000000000219a45         db  0x00 ; '.'
0000000000219a46         db  0x00 ; '.'
0000000000219a47         db  0x00 ; '.'
0000000000219a48         db  0x80 ; '.'
0000000000219a49         db  0xf2 ; '.'
0000000000219a4a         db  0x00 ; '.'
0000000000219a4b         db  0x00 ; '.'
0000000000219a4c         db  0x00 ; '.'
0000000000219a4d         db  0x00 ; '.'
0000000000219a4e         db  0x00 ; '.'
0000000000219a4f         db  0x00 ; '.'
0000000000219a50         db  0x60 ; '`'
0000000000219a51         db  0xf2 ; '.'
0000000000219a52         db  0x00 ; '.'
0000000000219a53         db  0x00 ; '.'
0000000000219a54         db  0x00 ; '.'
0000000000219a55         db  0x00 ; '.'
0000000000219a56         db  0x00 ; '.'
0000000000219a57         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x219a58; 0x219c48[ (496 bytes)
        ; File offset : [105048; 105544[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000219a58         db  0x01 ; '.'
0000000000219a59         db  0x00 ; '.'
0000000000219a5a         db  0x00 ; '.'
0000000000219a5b         db  0x00 ; '.'
0000000000219a5c         db  0x00 ; '.'
0000000000219a5d         db  0x00 ; '.'
0000000000219a5e         db  0x00 ; '.'
0000000000219a5f         db  0x00 ; '.'
0000000000219a60         db  0x01 ; '.'
0000000000219a61         db  0x00 ; '.'
0000000000219a62         db  0x00 ; '.'
0000000000219a63         db  0x00 ; '.'
0000000000219a64         db  0x00 ; '.'
0000000000219a65         db  0x00 ; '.'
0000000000219a66         db  0x00 ; '.'
0000000000219a67         db  0x00 ; '.'
0000000000219a68         db  0x0c ; '.'
0000000000219a69         db  0x00 ; '.'
0000000000219a6a         db  0x00 ; '.'
0000000000219a6b         db  0x00 ; '.'
0000000000219a6c         db  0x00 ; '.'
0000000000219a6d         db  0x00 ; '.'
0000000000219a6e         db  0x00 ; '.'
0000000000219a6f         db  0x00 ; '.'
0000000000219a70         db  0x10 ; '.'
0000000000219a71         db  0x27 ; '''
0000000000219a72         db  0x00 ; '.'
0000000000219a73         db  0x00 ; '.'
0000000000219a74         db  0x00 ; '.'
0000000000219a75         db  0x00 ; '.'
0000000000219a76         db  0x00 ; '.'
0000000000219a77         db  0x00 ; '.'
0000000000219a78         db  0x0d ; '.'
0000000000219a79         db  0x00 ; '.'
0000000000219a7a         db  0x00 ; '.'
0000000000219a7b         db  0x00 ; '.'
0000000000219a7c         db  0x00 ; '.'
0000000000219a7d         db  0x00 ; '.'
0000000000219a7e         db  0x00 ; '.'
0000000000219a7f         db  0x00 ; '.'
0000000000219a80         db  0xc0 ; '.'
0000000000219a81         db  0x28 ; '('
0000000000219a82         db  0x01 ; '.'
0000000000219a83         db  0x00 ; '.'
0000000000219a84         db  0x00 ; '.'
0000000000219a85         db  0x00 ; '.'
0000000000219a86         db  0x00 ; '.'
0000000000219a87         db  0x00 ; '.'
0000000000219a88         db  0x19 ; '.'
0000000000219a89         db  0x00 ; '.'
0000000000219a8a         db  0x00 ; '.'
0000000000219a8b         db  0x00 ; '.'
0000000000219a8c         db  0x00 ; '.'
0000000000219a8d         db  0x00 ; '.'
0000000000219a8e         db  0x00 ; '.'
0000000000219a8f         db  0x00 ; '.'
0000000000219a90         db  0x30 ; '0'
0000000000219a91         db  0x95 ; '.'
0000000000219a92         db  0x21 ; '!'
0000000000219a93         db  0x00 ; '.'
0000000000219a94         db  0x00 ; '.'
0000000000219a95         db  0x00 ; '.'
0000000000219a96         db  0x00 ; '.'
0000000000219a97         db  0x00 ; '.'
0000000000219a98         db  0x1b ; '.'
0000000000219a99         db  0x00 ; '.'
0000000000219a9a         db  0x00 ; '.'
0000000000219a9b         db  0x00 ; '.'
0000000000219a9c         db  0x00 ; '.'
0000000000219a9d         db  0x00 ; '.'
0000000000219a9e         db  0x00 ; '.'
0000000000219a9f         db  0x00 ; '.'
0000000000219aa0         db  0x08 ; '.'
0000000000219aa1         db  0x00 ; '.'
0000000000219aa2         db  0x00 ; '.'
0000000000219aa3         db  0x00 ; '.'
0000000000219aa4         db  0x00 ; '.'
0000000000219aa5         db  0x00 ; '.'
0000000000219aa6         db  0x00 ; '.'
0000000000219aa7         db  0x00 ; '.'
0000000000219aa8         db  0x1a ; '.'
0000000000219aa9         db  0x00 ; '.'
0000000000219aaa         db  0x00 ; '.'
0000000000219aab         db  0x00 ; '.'
0000000000219aac         db  0x00 ; '.'
0000000000219aad         db  0x00 ; '.'
0000000000219aae         db  0x00 ; '.'
0000000000219aaf         db  0x00 ; '.'
0000000000219ab0         db  0x38 ; '8'
0000000000219ab1         db  0x95 ; '.'
0000000000219ab2         db  0x21 ; '!'
0000000000219ab3         db  0x00 ; '.'
0000000000219ab4         db  0x00 ; '.'
0000000000219ab5         db  0x00 ; '.'
0000000000219ab6         db  0x00 ; '.'
0000000000219ab7         db  0x00 ; '.'
0000000000219ab8         db  0x1c ; '.'
0000000000219ab9         db  0x00 ; '.'
0000000000219aba         db  0x00 ; '.'
0000000000219abb         db  0x00 ; '.'
0000000000219abc         db  0x00 ; '.'
0000000000219abd         db  0x00 ; '.'
0000000000219abe         db  0x00 ; '.'
0000000000219abf         db  0x00 ; '.'
0000000000219ac0         db  0x08 ; '.'
0000000000219ac1         db  0x00 ; '.'
0000000000219ac2         db  0x00 ; '.'
0000000000219ac3         db  0x00 ; '.'
0000000000219ac4         db  0x00 ; '.'
0000000000219ac5         db  0x00 ; '.'
0000000000219ac6         db  0x00 ; '.'
0000000000219ac7         db  0x00 ; '.'
0000000000219ac8         db  0xf5 ; '.'
0000000000219ac9         db  0xfe ; '.'
0000000000219aca         db  0xff ; '.'
0000000000219acb         db  0x6f ; 'o'
0000000000219acc         db  0x00 ; '.'
0000000000219acd         db  0x00 ; '.'
0000000000219ace         db  0x00 ; '.'
0000000000219acf         db  0x00 ; '.'
0000000000219ad0         db  0x98 ; '.'
0000000000219ad1         db  0x02 ; '.'
0000000000219ad2         db  0x00 ; '.'
0000000000219ad3         db  0x00 ; '.'
0000000000219ad4         db  0x00 ; '.'
0000000000219ad5         db  0x00 ; '.'
0000000000219ad6         db  0x00 ; '.'
0000000000219ad7         db  0x00 ; '.'
0000000000219ad8         db  0x05 ; '.'
0000000000219ad9         db  0x00 ; '.'
0000000000219ada         db  0x00 ; '.'
0000000000219adb         db  0x00 ; '.'
0000000000219adc         db  0x00 ; '.'
0000000000219add         db  0x00 ; '.'
0000000000219ade         db  0x00 ; '.'
0000000000219adf         db  0x00 ; '.'
0000000000219ae0         db  0x98 ; '.'
0000000000219ae1         db  0x0e ; '.'
0000000000219ae2         db  0x00 ; '.'
0000000000219ae3         db  0x00 ; '.'
0000000000219ae4         db  0x00 ; '.'
0000000000219ae5         db  0x00 ; '.'
0000000000219ae6         db  0x00 ; '.'
0000000000219ae7         db  0x00 ; '.'
0000000000219ae8         db  0x06 ; '.'
0000000000219ae9         db  0x00 ; '.'
0000000000219aea         db  0x00 ; '.'
0000000000219aeb         db  0x00 ; '.'
0000000000219aec         db  0x00 ; '.'
0000000000219aed         db  0x00 ; '.'
0000000000219aee         db  0x00 ; '.'
0000000000219aef         db  0x00 ; '.'
0000000000219af0         db  0xe0 ; '.'
0000000000219af1         db  0x02 ; '.'
0000000000219af2         db  0x00 ; '.'
0000000000219af3         db  0x00 ; '.'
0000000000219af4         db  0x00 ; '.'
0000000000219af5         db  0x00 ; '.'
0000000000219af6         db  0x00 ; '.'
0000000000219af7         db  0x00 ; '.'
0000000000219af8         db  0x0a ; '.'
0000000000219af9         db  0x00 ; '.'
0000000000219afa         db  0x00 ; '.'
0000000000219afb         db  0x00 ; '.'
0000000000219afc         db  0x00 ; '.'
0000000000219afd         db  0x00 ; '.'
0000000000219afe         db  0x00 ; '.'
0000000000219aff         db  0x00 ; '.'
0000000000219b00         db  0xf0 ; '.'
0000000000219b01         db  0x04 ; '.'
0000000000219b02         db  0x00 ; '.'
0000000000219b03         db  0x00 ; '.'
0000000000219b04         db  0x00 ; '.'
0000000000219b05         db  0x00 ; '.'
0000000000219b06         db  0x00 ; '.'
0000000000219b07         db  0x00 ; '.'
0000000000219b08         db  0x0b ; '.'
0000000000219b09         db  0x00 ; '.'
0000000000219b0a         db  0x00 ; '.'
0000000000219b0b         db  0x00 ; '.'
0000000000219b0c         db  0x00 ; '.'
0000000000219b0d         db  0x00 ; '.'
0000000000219b0e         db  0x00 ; '.'
0000000000219b0f         db  0x00 ; '.'
0000000000219b10         db  0x18 ; '.'
0000000000219b11         db  0x00 ; '.'
0000000000219b12         db  0x00 ; '.'
0000000000219b13         db  0x00 ; '.'
0000000000219b14         db  0x00 ; '.'
0000000000219b15         db  0x00 ; '.'
0000000000219b16         db  0x00 ; '.'
0000000000219b17         db  0x00 ; '.'
0000000000219b18         db  0x15 ; '.'
0000000000219b19         db  0x00 ; '.'
0000000000219b1a         db  0x00 ; '.'
0000000000219b1b         db  0x00 ; '.'
0000000000219b1c         db  0x00 ; '.'
0000000000219b1d         db  0x00 ; '.'
0000000000219b1e         db  0x00 ; '.'
0000000000219b1f         db  0x00 ; '.'
0000000000219b20         db  0x00 ; '.'
0000000000219b21         db  0x00 ; '.'
0000000000219b22         db  0x00 ; '.'
0000000000219b23         db  0x00 ; '.'
0000000000219b24         db  0x00 ; '.'
0000000000219b25         db  0x00 ; '.'
0000000000219b26         db  0x00 ; '.'
0000000000219b27         db  0x00 ; '.'
0000000000219b28         db  0x03 ; '.'
0000000000219b29         db  0x00 ; '.'
0000000000219b2a         db  0x00 ; '.'
0000000000219b2b         db  0x00 ; '.'
0000000000219b2c         db  0x00 ; '.'
0000000000219b2d         db  0x00 ; '.'
0000000000219b2e         db  0x00 ; '.'
0000000000219b2f         db  0x00 ; '.'
0000000000219b30         db  0x48 ; 'H'
0000000000219b31         db  0x9c ; '.'
0000000000219b32         db  0x21 ; '!'
0000000000219b33         db  0x00 ; '.'
0000000000219b34         db  0x00 ; '.'
0000000000219b35         db  0x00 ; '.'
0000000000219b36         db  0x00 ; '.'
0000000000219b37         db  0x00 ; '.'
0000000000219b38         db  0x02 ; '.'
0000000000219b39         db  0x00 ; '.'
0000000000219b3a         db  0x00 ; '.'
0000000000219b3b         db  0x00 ; '.'
0000000000219b3c         db  0x00 ; '.'
0000000000219b3d         db  0x00 ; '.'
0000000000219b3e         db  0x00 ; '.'
0000000000219b3f         db  0x00 ; '.'
0000000000219b40         db  0x38 ; '8'
0000000000219b41         db  0x0a ; '.'
0000000000219b42         db  0x00 ; '.'
0000000000219b43         db  0x00 ; '.'
0000000000219b44         db  0x00 ; '.'
0000000000219b45         db  0x00 ; '.'
0000000000219b46         db  0x00 ; '.'
0000000000219b47         db  0x00 ; '.'
0000000000219b48         db  0x14 ; '.'
0000000000219b49         db  0x00 ; '.'
0000000000219b4a         db  0x00 ; '.'
0000000000219b4b         db  0x00 ; '.'
0000000000219b4c         db  0x00 ; '.'
0000000000219b4d         db  0x00 ; '.'
0000000000219b4e         db  0x00 ; '.'
0000000000219b4f         db  0x00 ; '.'
0000000000219b50         db  0x07 ; '.'
0000000000219b51         db  0x00 ; '.'
0000000000219b52         db  0x00 ; '.'
0000000000219b53         db  0x00 ; '.'
0000000000219b54         db  0x00 ; '.'
0000000000219b55         db  0x00 ; '.'
0000000000219b56         db  0x00 ; '.'
0000000000219b57         db  0x00 ; '.'
0000000000219b58         db  0x17 ; '.'
0000000000219b59         db  0x00 ; '.'
0000000000219b5a         db  0x00 ; '.'
0000000000219b5b         db  0x00 ; '.'
0000000000219b5c         db  0x00 ; '.'
0000000000219b5d         db  0x00 ; '.'
0000000000219b5e         db  0x00 ; '.'
0000000000219b5f         db  0x00 ; '.'
0000000000219b60         db  0xd8 ; '.'
0000000000219b61         db  0x1c ; '.'
0000000000219b62         db  0x00 ; '.'
0000000000219b63         db  0x00 ; '.'
0000000000219b64         db  0x00 ; '.'
0000000000219b65         db  0x00 ; '.'
0000000000219b66         db  0x00 ; '.'
0000000000219b67         db  0x00 ; '.'
0000000000219b68         db  0x07 ; '.'
0000000000219b69         db  0x00 ; '.'
0000000000219b6a         db  0x00 ; '.'
0000000000219b6b         db  0x00 ; '.'
0000000000219b6c         db  0x00 ; '.'
0000000000219b6d         db  0x00 ; '.'
0000000000219b6e         db  0x00 ; '.'
0000000000219b6f         db  0x00 ; '.'
0000000000219b70         db  0x28 ; '('
0000000000219b71         db  0x15 ; '.'
0000000000219b72         db  0x00 ; '.'
0000000000219b73         db  0x00 ; '.'
0000000000219b74         db  0x00 ; '.'
0000000000219b75         db  0x00 ; '.'
0000000000219b76         db  0x00 ; '.'
0000000000219b77         db  0x00 ; '.'
0000000000219b78         db  0x08 ; '.'
0000000000219b79         db  0x00 ; '.'
0000000000219b7a         db  0x00 ; '.'
0000000000219b7b         db  0x00 ; '.'
0000000000219b7c         db  0x00 ; '.'
0000000000219b7d         db  0x00 ; '.'
0000000000219b7e         db  0x00 ; '.'
0000000000219b7f         db  0x00 ; '.'
0000000000219b80         db  0xb0 ; '.'
0000000000219b81         db  0x07 ; '.'
0000000000219b82         db  0x00 ; '.'
0000000000219b83         db  0x00 ; '.'
0000000000219b84         db  0x00 ; '.'
0000000000219b85         db  0x00 ; '.'
0000000000219b86         db  0x00 ; '.'
0000000000219b87         db  0x00 ; '.'
0000000000219b88         db  0x09 ; '.'
0000000000219b89         db  0x00 ; '.'
0000000000219b8a         db  0x00 ; '.'
0000000000219b8b         db  0x00 ; '.'
0000000000219b8c         db  0x00 ; '.'
0000000000219b8d         db  0x00 ; '.'
0000000000219b8e         db  0x00 ; '.'
0000000000219b8f         db  0x00 ; '.'
0000000000219b90         db  0x18 ; '.'
0000000000219b91         db  0x00 ; '.'
0000000000219b92         db  0x00 ; '.'
0000000000219b93         db  0x00 ; '.'
0000000000219b94         db  0x00 ; '.'
0000000000219b95         db  0x00 ; '.'
0000000000219b96         db  0x00 ; '.'
0000000000219b97         db  0x00 ; '.'
0000000000219b98         db  0x1e ; '.'
0000000000219b99         db  0x00 ; '.'
0000000000219b9a         db  0x00 ; '.'
0000000000219b9b         db  0x00 ; '.'
0000000000219b9c         db  0x00 ; '.'
0000000000219b9d         db  0x00 ; '.'
0000000000219b9e         db  0x00 ; '.'
0000000000219b9f         db  0x00 ; '.'
0000000000219ba0         db  0x08 ; '.'
0000000000219ba1         db  0x00 ; '.'
0000000000219ba2         db  0x00 ; '.'
0000000000219ba3         db  0x00 ; '.'
0000000000219ba4         db  0x00 ; '.'
0000000000219ba5         db  0x00 ; '.'
0000000000219ba6         db  0x00 ; '.'
0000000000219ba7         db  0x00 ; '.'
0000000000219ba8         db  0xfb ; '.'
0000000000219ba9         db  0xff ; '.'
0000000000219baa         db  0xff ; '.'
0000000000219bab         db  0x6f ; 'o'
0000000000219bac         db  0x00 ; '.'
0000000000219bad         db  0x00 ; '.'
0000000000219bae         db  0x00 ; '.'
0000000000219baf         db  0x00 ; '.'
0000000000219bb0         db  0x01 ; '.'
0000000000219bb1         db  0x00 ; '.'
0000000000219bb2         db  0x00 ; '.'
0000000000219bb3         db  0x08 ; '.'
0000000000219bb4         db  0x00 ; '.'
0000000000219bb5         db  0x00 ; '.'
0000000000219bb6         db  0x00 ; '.'
0000000000219bb7         db  0x00 ; '.'
0000000000219bb8         db  0xfe ; '.'
0000000000219bb9         db  0xff ; '.'
0000000000219bba         db  0xff ; '.'
0000000000219bbb         db  0x6f ; 'o'
0000000000219bbc         db  0x00 ; '.'
0000000000219bbd         db  0x00 ; '.'
0000000000219bbe         db  0x00 ; '.'
0000000000219bbf         db  0x00 ; '.'
0000000000219bc0         db  0x88 ; '.'
0000000000219bc1         db  0x14 ; '.'
0000000000219bc2         db  0x00 ; '.'
0000000000219bc3         db  0x00 ; '.'
0000000000219bc4         db  0x00 ; '.'
0000000000219bc5         db  0x00 ; '.'
0000000000219bc6         db  0x00 ; '.'
0000000000219bc7         db  0x00 ; '.'
0000000000219bc8         db  0xff ; '.'
0000000000219bc9         db  0xff ; '.'
0000000000219bca         db  0xff ; '.'
0000000000219bcb         db  0x6f ; 'o'
0000000000219bcc         db  0x00 ; '.'
0000000000219bcd         db  0x00 ; '.'
0000000000219bce         db  0x00 ; '.'
0000000000219bcf         db  0x00 ; '.'
0000000000219bd0         db  0x01 ; '.'
0000000000219bd1         db  0x00 ; '.'
0000000000219bd2         db  0x00 ; '.'
0000000000219bd3         db  0x00 ; '.'
0000000000219bd4         db  0x00 ; '.'
0000000000219bd5         db  0x00 ; '.'
0000000000219bd6         db  0x00 ; '.'
0000000000219bd7         db  0x00 ; '.'
0000000000219bd8         db  0xf0 ; '.'
0000000000219bd9         db  0xff ; '.'
0000000000219bda         db  0xff ; '.'
0000000000219bdb         db  0x6f ; 'o'
0000000000219bdc         db  0x00 ; '.'
0000000000219bdd         db  0x00 ; '.'
0000000000219bde         db  0x00 ; '.'
0000000000219bdf         db  0x00 ; '.'
0000000000219be0         db  0x88 ; '.'
0000000000219be1         db  0x13 ; '.'
0000000000219be2         db  0x00 ; '.'
0000000000219be3         db  0x00 ; '.'
0000000000219be4         db  0x00 ; '.'
0000000000219be5         db  0x00 ; '.'
0000000000219be6         db  0x00 ; '.'
0000000000219be7         db  0x00 ; '.'
0000000000219be8         db  0xf9 ; '.'
0000000000219be9         db  0xff ; '.'
0000000000219bea         db  0xff ; '.'
0000000000219beb         db  0x6f ; 'o'
0000000000219bec         db  0x00 ; '.'
0000000000219bed         db  0x00 ; '.'
0000000000219bee         db  0x00 ; '.'
0000000000219bef         db  0x00 ; '.'
0000000000219bf0         db  0x45 ; 'E'
0000000000219bf1         db  0x00 ; '.'
0000000000219bf2         db  0x00 ; '.'
0000000000219bf3         db  0x00 ; '.'
0000000000219bf4         db  0x00 ; '.'
0000000000219bf5         db  0x00 ; '.'
0000000000219bf6         db  0x00 ; '.'
0000000000219bf7         db  0x00 ; '.'
0000000000219bf8         db  0x00 ; '.'
0000000000219bf9         db  0x00 ; '.'
0000000000219bfa         db  0x00 ; '.'
0000000000219bfb         db  0x00 ; '.'
0000000000219bfc         db  0x00 ; '.'
0000000000219bfd         db  0x00 ; '.'
0000000000219bfe         db  0x00 ; '.'
0000000000219bff         db  0x00 ; '.'
0000000000219c00         db  0x00 ; '.'
0000000000219c01         db  0x00 ; '.'
0000000000219c02         db  0x00 ; '.'
0000000000219c03         db  0x00 ; '.'
0000000000219c04         db  0x00 ; '.'
0000000000219c05         db  0x00 ; '.'
0000000000219c06         db  0x00 ; '.'
0000000000219c07         db  0x00 ; '.'
0000000000219c08         db  0x00 ; '.'
0000000000219c09         db  0x00 ; '.'
0000000000219c0a         db  0x00 ; '.'
0000000000219c0b         db  0x00 ; '.'
0000000000219c0c         db  0x00 ; '.'
0000000000219c0d         db  0x00 ; '.'
0000000000219c0e         db  0x00 ; '.'
0000000000219c0f         db  0x00 ; '.'
0000000000219c10         db  0x00 ; '.'
0000000000219c11         db  0x00 ; '.'
0000000000219c12         db  0x00 ; '.'
0000000000219c13         db  0x00 ; '.'
0000000000219c14         db  0x00 ; '.'
0000000000219c15         db  0x00 ; '.'
0000000000219c16         db  0x00 ; '.'
0000000000219c17         db  0x00 ; '.'
0000000000219c18         db  0x00 ; '.'
0000000000219c19         db  0x00 ; '.'
0000000000219c1a         db  0x00 ; '.'
0000000000219c1b         db  0x00 ; '.'
0000000000219c1c         db  0x00 ; '.'
0000000000219c1d         db  0x00 ; '.'
0000000000219c1e         db  0x00 ; '.'
0000000000219c1f         db  0x00 ; '.'
0000000000219c20         db  0x00 ; '.'
0000000000219c21         db  0x00 ; '.'
0000000000219c22         db  0x00 ; '.'
0000000000219c23         db  0x00 ; '.'
0000000000219c24         db  0x00 ; '.'
0000000000219c25         db  0x00 ; '.'
0000000000219c26         db  0x00 ; '.'
0000000000219c27         db  0x00 ; '.'
0000000000219c28         db  0x00 ; '.'
0000000000219c29         db  0x00 ; '.'
0000000000219c2a         db  0x00 ; '.'
0000000000219c2b         db  0x00 ; '.'
0000000000219c2c         db  0x00 ; '.'
0000000000219c2d         db  0x00 ; '.'
0000000000219c2e         db  0x00 ; '.'
0000000000219c2f         db  0x00 ; '.'
0000000000219c30         db  0x00 ; '.'
0000000000219c31         db  0x00 ; '.'
0000000000219c32         db  0x00 ; '.'
0000000000219c33         db  0x00 ; '.'
0000000000219c34         db  0x00 ; '.'
0000000000219c35         db  0x00 ; '.'
0000000000219c36         db  0x00 ; '.'
0000000000219c37         db  0x00 ; '.'
0000000000219c38         db  0x00 ; '.'
0000000000219c39         db  0x00 ; '.'
0000000000219c3a         db  0x00 ; '.'
0000000000219c3b         db  0x00 ; '.'
0000000000219c3c         db  0x00 ; '.'
0000000000219c3d         db  0x00 ; '.'
0000000000219c3e         db  0x00 ; '.'
0000000000219c3f         db  0x00 ; '.'
0000000000219c40         db  0x00 ; '.'
0000000000219c41         db  0x00 ; '.'
0000000000219c42         db  0x00 ; '.'
0000000000219c43         db  0x00 ; '.'
0000000000219c44         db  0x00 ; '.'
0000000000219c45         db  0x00 ; '.'
0000000000219c46         db  0x00 ; '.'
0000000000219c47         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x219c48; 0x219ff8[ (944 bytes)
        ; File offset : [105544; 106488[ (944 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000219c48         db  0x58 ; 'X'
0000000000219c49         db  0x9a ; '.'
0000000000219c4a         db  0x21 ; '!'
0000000000219c4b         db  0x00 ; '.'
0000000000219c4c         db  0x00 ; '.'
0000000000219c4d         db  0x00 ; '.'
0000000000219c4e         db  0x00 ; '.'
0000000000219c4f         db  0x00 ; '.'
                     qword_219c50:
0000000000219c50         dq         0x0000000000000000                          ; DATA XREF=0x2730
0000000000219c58         db  0x00 ; '.'                                         ; DATA XREF=0x2736
0000000000219c59         db  0x00 ; '.'
0000000000219c5a         db  0x00 ; '.'
0000000000219c5b         db  0x00 ; '.'
0000000000219c5c         db  0x00 ; '.'
0000000000219c5d         db  0x00 ; '.'
0000000000219c5e         db  0x00 ; '.'
0000000000219c5f         db  0x00 ; '.'
                     getenv@GOT:        // getenv
0000000000219c60         dq         0x000000000021a720                          ; DATA XREF=j_getenv
                     utimensat@GOT:        // utimensat
0000000000219c68         dq         0x000000000021a730                          ; DATA XREF=j_utimensat
                     abort@GOT:        // abort
0000000000219c70         dq         0x000000000021a738                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000219c78         dq         0x000000000021a740                          ; DATA XREF=j___errno_location
                     unlink@GOT:        // unlink
0000000000219c80         dq         0x000000000021a748                          ; DATA XREF=j_unlink
                     strncmp@GOT:        // strncmp
0000000000219c88         dq         0x000000000021a750                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000219c90         dq         0x000000000021a760                          ; DATA XREF=j__exit
                     strcpy@GOT:        // strcpy
0000000000219c98         dq         0x000000000021a768                          ; DATA XREF=j_strcpy
                     __fpending@GOT:        // __fpending
0000000000219ca0         dq         0x000000000021a770                          ; DATA XREF=j___fpending
                     __read_chk@GOT:        // __read_chk
0000000000219ca8         dq         0x000000000021a778                          ; DATA XREF=j___read_chk
                     mkdir@GOT:        // mkdir
0000000000219cb0         dq         0x000000000021a780                          ; DATA XREF=j_mkdir
                     unlinkat@GOT:        // unlinkat
0000000000219cb8         dq         0x000000000021a788                          ; DATA XREF=j_unlinkat
                     qsort@GOT:        // qsort
0000000000219cc0         dq         0x000000000021a790                          ; DATA XREF=j_qsort
                     readlink@GOT:        // readlink
0000000000219cc8         dq         0x000000000021a798                          ; DATA XREF=j_readlink
                     fcntl@GOT:        // fcntl
0000000000219cd0         dq         0x000000000021a7a0                          ; DATA XREF=j_fcntl
                     clock_gettime@GOT:        // clock_gettime
0000000000219cd8         dq         0x000000000021a7a8                          ; DATA XREF=j_clock_gettime
                     write@GOT:        // write
0000000000219ce0         dq         0x000000000021a7b0                          ; DATA XREF=j_write
                     getpid@GOT:        // getpid
0000000000219ce8         dq         0x000000000021a7b8                          ; DATA XREF=j_getpid
                     fread_unlocked@GOT:        // fread_unlocked
0000000000219cf0         dq         0x000000000021a7c0                          ; DATA XREF=j_fread_unlocked
                     textdomain@GOT:        // textdomain
0000000000219cf8         dq         0x000000000021a7c8                          ; DATA XREF=j_textdomain
                     pathconf@GOT:        // pathconf
0000000000219d00         dq         0x000000000021a7d0                          ; DATA XREF=j_pathconf
                     fclose@GOT:        // fclose
0000000000219d08         dq         0x000000000021a7d8                          ; DATA XREF=j_fclose
                     opendir@GOT:        // opendir
0000000000219d10         dq         0x000000000021a7e0                          ; DATA XREF=j_opendir
                     bindtextdomain@GOT:        // bindtextdomain
0000000000219d18         dq         0x000000000021a7e8                          ; DATA XREF=j_bindtextdomain
                     stpcpy@GOT:        // stpcpy
0000000000219d20         dq         0x000000000021a7f0                          ; DATA XREF=j_stpcpy
                     rmdir@GOT:        // rmdir
0000000000219d28         dq         0x000000000021a7f8                          ; DATA XREF=j_rmdir
                     dcgettext@GOT:        // dcgettext
0000000000219d30         dq         0x000000000021a800                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000219d38         dq         0x000000000021a808                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000219d40         dq         0x000000000021a810                          ; DATA XREF=j_strlen
                     __lxstat@GOT:        // __lxstat
0000000000219d48         dq         0x000000000021a818                          ; DATA XREF=j___lxstat
                     openat@GOT:        // openat
0000000000219d50         dq         0x000000000021a820                          ; DATA XREF=j_openat
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000219d58         dq         0x000000000021a828                          ; DATA XREF=j___stack_chk_fail
                     getuid@GOT:        // getuid
0000000000219d60         dq         0x000000000021a830                          ; DATA XREF=j_getuid
                     getopt_long@GOT:        // getopt_long
0000000000219d68         dq         0x000000000021a838                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000219d70         dq         0x000000000021a840                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
0000000000219d78         dq         0x000000000021a848                          ; DATA XREF=j_strchr
                     __fxstatat@GOT:        // __fxstatat
0000000000219d80         dq         0x000000000021a850                          ; DATA XREF=j___fxstatat
                     __overflow@GOT:        // __overflow
0000000000219d88         dq         0x000000000021a858                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000219d90         dq         0x000000000021a860                          ; DATA XREF=j_strrchr
                     ftruncate@GOT:        // ftruncate
0000000000219d98         dq         0x000000000021a868                          ; DATA XREF=j_ftruncate
                     lseek@GOT:        // lseek
0000000000219da0         dq         0x000000000021a870                          ; DATA XREF=j_lseek
                     gettimeofday@GOT:        // gettimeofday
0000000000219da8         dq         0x000000000021a878                          ; DATA XREF=j_gettimeofday
                     __assert_fail@GOT:        // __assert_fail
0000000000219db0         dq         0x000000000021a880                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
0000000000219db8         dq         0x000000000021a888                          ; DATA XREF=j_memset
                     geteuid@GOT:        // geteuid
0000000000219dc0         dq         0x000000000021a890                          ; DATA XREF=j_geteuid
                     ioctl@GOT:        // ioctl
0000000000219dc8         dq         0x000000000021a898                          ; DATA XREF=j_ioctl
                     canonicalize_file_name@GOT:        // canonicalize_file_name
0000000000219dd0         dq         0x000000000021a8a0                          ; DATA XREF=j_canonicalize_file_name
                     close@GOT:        // close
0000000000219dd8         dq         0x000000000021a8a8                          ; DATA XREF=j_close
                     rewinddir@GOT:        // rewinddir
0000000000219de0         dq         0x000000000021a8b0                          ; DATA XREF=j_rewinddir
                     strspn@GOT:        // strspn
0000000000219de8         dq         0x000000000021a8b8                          ; DATA XREF=j_strspn
                     closedir@GOT:        // closedir
0000000000219df0         dq         0x000000000021a8c0                          ; DATA XREF=j_closedir
                     posix_fadvise@GOT:        // posix_fadvise
0000000000219df8         dq         0x000000000021a8c8                          ; DATA XREF=j_posix_fadvise
                     read@GOT:        // read
0000000000219e00         dq         0x000000000021a8d0                          ; DATA XREF=j_read
                     memcmp@GOT:        // memcmp
0000000000219e08         dq         0x000000000021a8e0                          ; DATA XREF=j_memcmp
                     fallocate@GOT:        // fallocate
0000000000219e10         dq         0x000000000021a8e8                          ; DATA XREF=j_fallocate
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000219e18         dq         0x000000000021a8f0                          ; DATA XREF=j_fputs_unlocked
                     utimes@GOT:        // utimes
0000000000219e20         dq         0x000000000021a8f8                          ; DATA XREF=j_utimes
                     calloc@GOT:        // calloc
0000000000219e28         dq         0x000000000021a900                          ; DATA XREF=j_calloc
                     __getdelim@GOT:        // __getdelim
0000000000219e30         dq         0x000000000021a908                          ; DATA XREF=j___getdelim
                     strcmp@GOT:        // strcmp
0000000000219e38         dq         0x000000000021a910                          ; DATA XREF=j_strcmp
                     dirfd@GOT:        // dirfd
0000000000219e40         dq         0x000000000021a918                          ; DATA XREF=j_dirfd
                     fpathconf@GOT:        // fpathconf
0000000000219e48         dq         0x000000000021a920                          ; DATA XREF=j_fpathconf
                     rpmatch@GOT:        // rpmatch
0000000000219e50         dq         0x000000000021a928                          ; DATA XREF=j_rpmatch
                     syscall@GOT:        // syscall
0000000000219e58         dq         0x000000000021a930                          ; DATA XREF=j_syscall
                     mkfifo@GOT:        // mkfifo
0000000000219e60         dq         0x000000000021a938                          ; DATA XREF=j_mkfifo
                     umask@GOT:        // umask
0000000000219e68         dq         0x000000000021a948                          ; DATA XREF=j_umask
                     memcpy@GOT:        // memcpy
0000000000219e70         dq         0x000000000021a950                          ; DATA XREF=j_memcpy
                     __xmknod@GOT:        // __xmknod
0000000000219e78         dq         0x000000000021a958                          ; DATA XREF=j___xmknod
                     fileno@GOT:        // fileno
0000000000219e80         dq         0x000000000021a960                          ; DATA XREF=j_fileno
                     getgid@GOT:        // getgid
0000000000219e88         dq         0x000000000021a968                          ; DATA XREF=j_getgid
                     __xstat@GOT:        // __xstat
0000000000219e90         dq         0x000000000021a970                          ; DATA XREF=j___xstat
                     readdir@GOT:        // readdir
0000000000219e98         dq         0x000000000021a978                          ; DATA XREF=j_readdir
                     malloc@GOT:        // malloc
0000000000219ea0         dq         0x000000000021a980                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000219ea8         dq         0x000000000021a988                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000219eb0         dq         0x000000000021a990                          ; DATA XREF=j_nl_langinfo
                     __fxstat@GOT:        // __fxstat
0000000000219eb8         dq         0x000000000021a998                          ; DATA XREF=j___fxstat
                     lchown@GOT:        // lchown
0000000000219ec0         dq         0x000000000021a9a0                          ; DATA XREF=j_lchown
                     __freading@GOT:        // __freading
0000000000219ec8         dq         0x000000000021a9a8                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000219ed0         dq         0x000000000021a9b0                          ; DATA XREF=j_realloc
                     fdopen@GOT:        // fdopen
0000000000219ed8         dq         0x000000000021a9b8                          ; DATA XREF=j_fdopen
                     linkat@GOT:        // linkat
0000000000219ee0         dq         0x000000000021a9c0                          ; DATA XREF=j_linkat
                     setlocale@GOT:        // setlocale
0000000000219ee8         dq         0x000000000021a9c8                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000219ef0         dq         0x000000000021a9d0                          ; DATA XREF=j___printf_chk
                     fchmod@GOT:        // fchmod
0000000000219ef8         dq         0x000000000021a9d8                          ; DATA XREF=j_fchmod
                     setvbuf@GOT:        // setvbuf
0000000000219f00         dq         0x000000000021a9e0                          ; DATA XREF=j_setvbuf
                     chmod@GOT:        // chmod
0000000000219f08         dq         0x000000000021a9e8                          ; DATA XREF=j_chmod
                     mempcpy@GOT:        // mempcpy
0000000000219f10         dq         0x000000000021a9f0                          ; DATA XREF=j_mempcpy
                     error@GOT:        // error
0000000000219f18         dq         0x000000000021a9f8                          ; DATA XREF=j_error
                     __explicit_bzero_chk@GOT:        // __explicit_bzero_chk
0000000000219f20         dq         0x000000000021aa00                          ; DATA XREF=j___explicit_bzero_chk
                     open@GOT:        // open
0000000000219f28         dq         0x000000000021aa08                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
0000000000219f30         dq         0x000000000021aa10                          ; DATA XREF=j_fseeko
                     fchown@GOT:        // fchown
0000000000219f38         dq         0x000000000021aa18                          ; DATA XREF=j_fchown
                     fopen@GOT:        // fopen
0000000000219f40         dq         0x000000000021aa20                          ; DATA XREF=j_fopen
                     rename@GOT:        // rename
0000000000219f48         dq         0x000000000021aa28                          ; DATA XREF=j_rename
                     fdopendir@GOT:        // fdopendir
0000000000219f50         dq         0x000000000021aa30                          ; DATA XREF=j_fdopendir
                     futimens@GOT:        // futimens
0000000000219f58         dq         0x000000000021aa38                          ; DATA XREF=j_futimens
                     euidaccess@GOT:        // euidaccess
0000000000219f60         dq         0x000000000021aa40                          ; DATA XREF=j_euidaccess
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000219f68         dq         0x000000000021aa48                          ; DATA XREF=j___cxa_atexit
                     renameat@GOT:        // renameat
0000000000219f70         dq         0x000000000021aa50                          ; DATA XREF=j_renameat
                     getpagesize@GOT:        // getpagesize
0000000000219f78         dq         0x000000000021aa58                          ; DATA XREF=j_getpagesize
                     getppid@GOT:        // getppid
0000000000219f80         dq         0x000000000021aa60                          ; DATA XREF=j_getppid
                     exit@GOT:        // exit
0000000000219f88         dq         0x000000000021aa68                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000219f90         dq         0x000000000021aa70                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000219f98         dq         0x000000000021aa78                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000219fa0         dq         0x000000000021aa88                          ; DATA XREF=j_mbsinit
                     symlinkat@GOT:        // symlinkat
0000000000219fa8         dq         0x000000000021aa90                          ; DATA XREF=j_symlinkat
                     iswprint@GOT:        // iswprint
0000000000219fb0         dq         0x000000000021aa98                          ; DATA XREF=j_iswprint
                     futimesat@GOT:        // futimesat
0000000000219fb8         dq         0x000000000021aaa8                          ; DATA XREF=j_futimesat
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000219fc0         dq         0x000000000021aab0                          ; DATA XREF=j___ctype_b_loc
                     qword_219fc8:
0000000000219fc8         dq         0x0000000000000000                          ; DATA XREF=sub_2e10, utimecmpat+1584
                     qword_219fd0:
0000000000219fd0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000219fd8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000219fd9         db  0x00 ; '.'
0000000000219fda         db  0x00 ; '.'
0000000000219fdb         db  0x00 ; '.'
0000000000219fdc         db  0x00 ; '.'
0000000000219fdd         db  0x00 ; '.'
0000000000219fde         db  0x00 ; '.'
0000000000219fdf         db  0x00 ; '.'
                     qword_219fe0:
0000000000219fe0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_219fe8:
0000000000219fe8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_219ff0:
0000000000219ff0         dq         0x0000000000000000                          ; DATA XREF=j_qword_219ff0, __do_global_dtors_aux+9
0000000000219ff8         db  0x00 ; '.'
0000000000219ff9         db  0x00 ; '.'
0000000000219ffa         db  0x00 ; '.'
0000000000219ffb         db  0x00 ; '.'
0000000000219ffc         db  0x00 ; '.'
0000000000219ffd         db  0x00 ; '.'
0000000000219ffe         db  0x00 ; '.'
0000000000219fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x21a000; 0x21a0a0[ (160 bytes)
        ; File offset : [106496; 106656[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000021a000         db  0x00 ; '.'
000000000021a001         db  0x00 ; '.'
000000000021a002         db  0x00 ; '.'
000000000021a003         db  0x00 ; '.'
000000000021a004         db  0x00 ; '.'
000000000021a005         db  0x00 ; '.'
000000000021a006         db  0x00 ; '.'
000000000021a007         db  0x00 ; '.'
                     __dso_handle:
000000000021a008         dq         0x000000000021a008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     mask.7898:
000000000021a010         dd         0xffffffff                                  ; DATA XREF=cached_umask+1, cached_umask+27
000000000021a014         align      2
000000000021a01a         db  0x02 ; '.'
000000000021a01b         db  0x00 ; '.'
000000000021a01c         db  0x00 ; '.'
000000000021a01d         db  0x00 ; '.'
000000000021a01e         db  0x00 ; '.'
000000000021a01f         db  0x00 ; '.'
                     Version:
000000000021a020         dq         0x0000000000015131                          ; "8.31", DATA XREF=main+807
                     argmatch_die:
000000000021a028         dq         0x000000000000a770                          ; DATA XREF=main+881, main+962, decode_preserve_arg+108, get_version.part.0+4
                     exit_failure:
000000000021a030         dd         0x00000001                                  ; DATA XREF=close_stdin+168, close_stdout+130, xalloc_die+23, randread_error+51
000000000021a034         db  0x00 ; '.'
000000000021a035         db  0x00 ; '.'
000000000021a036         db  0x00 ; '.'
000000000021a037         db  0x00 ; '.'
000000000021a038         db  0x00 ; '.'
000000000021a039         db  0x00 ; '.'
000000000021a03a         db  0x00 ; '.'
000000000021a03b         db  0x00 ; '.'
000000000021a03c         db  0x00 ; '.'
000000000021a03d         db  0x00 ; '.'
000000000021a03e         db  0x00 ; '.'
000000000021a03f         db  0x00 ; '.'
                     quote_quoting_options:
000000000021a040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000021a041         db  0x00 ; '.'
000000000021a042         db  0x00 ; '.'
000000000021a043         db  0x00 ; '.'
000000000021a044         db  0x00 ; '.'
000000000021a045         db  0x00 ; '.'
000000000021a046         db  0x00 ; '.'
000000000021a047         db  0x00 ; '.'
000000000021a048         db  0x00 ; '.'
000000000021a049         db  0x00 ; '.'
000000000021a04a         db  0x00 ; '.'
000000000021a04b         db  0x00 ; '.'
000000000021a04c         db  0x00 ; '.'
000000000021a04d         db  0x00 ; '.'
000000000021a04e         db  0x00 ; '.'
000000000021a04f         db  0x00 ; '.'
000000000021a050         db  0x00 ; '.'
000000000021a051         db  0x00 ; '.'
000000000021a052         db  0x00 ; '.'
000000000021a053         db  0x00 ; '.'
000000000021a054         db  0x00 ; '.'
000000000021a055         db  0x00 ; '.'
000000000021a056         db  0x00 ; '.'
000000000021a057         db  0x00 ; '.'
000000000021a058         db  0x00 ; '.'
000000000021a059         db  0x00 ; '.'
000000000021a05a         db  0x00 ; '.'
000000000021a05b         db  0x00 ; '.'
000000000021a05c         db  0x00 ; '.'
000000000021a05d         db  0x00 ; '.'
000000000021a05e         db  0x00 ; '.'
000000000021a05f         db  0x00 ; '.'
000000000021a060         db  0x00 ; '.'
000000000021a061         db  0x00 ; '.'
000000000021a062         db  0x00 ; '.'
000000000021a063         db  0x00 ; '.'
000000000021a064         db  0x00 ; '.'
000000000021a065         db  0x00 ; '.'
000000000021a066         db  0x00 ; '.'
000000000021a067         db  0x00 ; '.'
000000000021a068         db  0x00 ; '.'
000000000021a069         db  0x00 ; '.'
000000000021a06a         db  0x00 ; '.'
000000000021a06b         db  0x00 ; '.'
000000000021a06c         db  0x00 ; '.'
000000000021a06d         db  0x00 ; '.'
000000000021a06e         db  0x00 ; '.'
000000000021a06f         db  0x00 ; '.'
000000000021a070         db  0x00 ; '.'
000000000021a071         db  0x00 ; '.'
000000000021a072         db  0x00 ; '.'
000000000021a073         db  0x00 ; '.'
000000000021a074         db  0x00 ; '.'
000000000021a075         db  0x00 ; '.'
000000000021a076         db  0x00 ; '.'
000000000021a077         db  0x00 ; '.'
                     nslots:
000000000021a078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000021a07c         db  0x00 ; '.'
000000000021a07d         db  0x00 ; '.'
000000000021a07e         db  0x00 ; '.'
000000000021a07f         db  0x00 ; '.'
                     slotvec:
000000000021a080         dq         0x000000000021a090                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000021a088         db  0x00 ; '.'
000000000021a089         db  0x00 ; '.'
000000000021a08a         db  0x00 ; '.'
000000000021a08b         db  0x00 ; '.'
000000000021a08c         db  0x00 ; '.'
000000000021a08d         db  0x00 ; '.'
000000000021a08e         db  0x00 ; '.'
000000000021a08f         db  0x00 ; '.'
                     slotvec0:
000000000021a090         dq         1.26481e-321, 1.08947e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x21a0a0; 0x21a718[ (1656 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000021a0a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000021a0a1         db  0x00 ; '.'
000000000021a0a2         db  0x00 ; '.'
000000000021a0a3         db  0x00 ; '.'
000000000021a0a4         db  0x00 ; '.'
000000000021a0a5         db  0x00 ; '.'
000000000021a0a6         db  0x00 ; '.'
000000000021a0a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000021a0a8         db  0x00 ; '.'                                         ; DATA XREF=main+800, usage+131, usage+168, usage+205, usage+242, usage+279, usage+316, usage+353, usage+390, usage+427, usage+464
000000000021a0a9         db  0x00 ; '.'
000000000021a0aa         db  0x00 ; '.'
000000000021a0ab         db  0x00 ; '.'
000000000021a0ac         db  0x00 ; '.'
000000000021a0ad         db  0x00 ; '.'
000000000021a0ae         db  0x00 ; '.'
000000000021a0af         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
000000000021a0b0         db  0x00 ; '.'                                         ; DATA XREF=close_stdin+4, close_stdin+63, close_stdin+201, yesno+12
000000000021a0b1         db  0x00 ; '.'
000000000021a0b2         db  0x00 ; '.'
000000000021a0b3         db  0x00 ; '.'
000000000021a0b4         db  0x00 ; '.'
000000000021a0b5         db  0x00 ; '.'
000000000021a0b6         db  0x00 ; '.'
000000000021a0b7         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000021a0b8         db  0x00 ; '.'                                         ; DATA XREF=main+1505
000000000021a0b9         db  0x00 ; '.'
000000000021a0ba         db  0x00 ; '.'
000000000021a0bb         db  0x00 ; '.'
000000000021a0bc         db  0x00 ; '.'
000000000021a0bd         db  0x00 ; '.'
000000000021a0be         db  0x00 ; '.'
000000000021a0bf         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000021a0c0         db  0x00 ; '.'                                         ; DATA XREF=main+482, main+575, main+680, main+722, main+888, main+946, main+1032, main+1120, main+1145, main+2069
000000000021a0c1         db  0x00 ; '.'
000000000021a0c2         db  0x00 ; '.'
000000000021a0c3         db  0x00 ; '.'
000000000021a0c4         db  0x00 ; '.'
000000000021a0c5         db  0x00 ; '.'
000000000021a0c6         db  0x00 ; '.'
000000000021a0c7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000021a0c8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000021a0c9         db  0x00 ; '.'
000000000021a0ca         db  0x00 ; '.'
000000000021a0cb         db  0x00 ; '.'
000000000021a0cc         db  0x00 ; '.'
000000000021a0cd         db  0x00 ; '.'
000000000021a0ce         db  0x00 ; '.'
000000000021a0cf         db  0x00 ; '.'
000000000021a0d0         db  0x00 ; '.'
000000000021a0d1         db  0x00 ; '.'
000000000021a0d2         db  0x00 ; '.'
000000000021a0d3         db  0x00 ; '.'
000000000021a0d4         db  0x00 ; '.'
000000000021a0d5         db  0x00 ; '.'
000000000021a0d6         db  0x00 ; '.'
000000000021a0d7         db  0x00 ; '.'
000000000021a0d8         db  0x00 ; '.'
000000000021a0d9         db  0x00 ; '.'
000000000021a0da         db  0x00 ; '.'
000000000021a0db         db  0x00 ; '.'
000000000021a0dc         db  0x00 ; '.'
000000000021a0dd         db  0x00 ; '.'
000000000021a0de         db  0x00 ; '.'
000000000021a0df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000021a0e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, overwrite_ok.isra.12+159, overwrite_ok.isra.12+242, argmatch_valid+37, argmatch_valid+95, argmatch_valid+174, argmatch_valid+216, close_stdout+44, set_program_name+125
000000000021a0e1         db  0x00 ; '.'
000000000021a0e2         db  0x00 ; '.'
000000000021a0e3         db  0x00 ; '.'
000000000021a0e4         db  0x00 ; '.'
000000000021a0e5         db  0x00 ; '.'
000000000021a0e6         db  0x00 ; '.'
000000000021a0e7         db  0x00 ; '.'
                     completed.7697:
000000000021a0e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000021a0e9         db  0x00 ; '.'
000000000021a0ea         db  0x00 ; '.'
000000000021a0eb         db  0x00 ; '.'
000000000021a0ec         db  0x00 ; '.'
000000000021a0ed         db  0x00 ; '.'
000000000021a0ee         db  0x00 ; '.'
000000000021a0ef         db  0x00 ; '.'
000000000021a0f0         db  0x00 ; '.'
000000000021a0f1         db  0x00 ; '.'
000000000021a0f2         db  0x00 ; '.'
000000000021a0f3         db  0x00 ; '.'
000000000021a0f4         db  0x00 ; '.'
000000000021a0f5         db  0x00 ; '.'
000000000021a0f6         db  0x00 ; '.'
000000000021a0f7         db  0x00 ; '.'
000000000021a0f8         db  0x00 ; '.'
000000000021a0f9         db  0x00 ; '.'
000000000021a0fa         db  0x00 ; '.'
000000000021a0fb         db  0x00 ; '.'
000000000021a0fc         db  0x00 ; '.'
000000000021a0fd         db  0x00 ; '.'
000000000021a0fe         db  0x00 ; '.'
000000000021a0ff         db  0x00 ; '.'
                     x_tmp.7353:
000000000021a100         db  0x00 ; '.'                                         ; DATA XREF=do_copy+242, do_copy+249, do_copy+266
000000000021a101         db  0x00 ; '.'
000000000021a102         db  0x00 ; '.'
000000000021a103         db  0x00 ; '.'
000000000021a104         db  0x00 ; '.'
000000000021a105         db  0x00 ; '.'
000000000021a106         db  0x00 ; '.'
000000000021a107         db  0x00 ; '.'
000000000021a108         db  0x00 ; '.'
000000000021a109         db  0x00 ; '.'
000000000021a10a         db  0x00 ; '.'
000000000021a10b         db  0x00 ; '.'
000000000021a10c         db  0x00 ; '.'
000000000021a10d         db  0x00 ; '.'
000000000021a10e         db  0x00 ; '.'
000000000021a10f         db  0x00 ; '.'
000000000021a110         db  0x00 ; '.'
000000000021a111         db  0x00 ; '.'
000000000021a112         db  0x00 ; '.'
000000000021a113         db  0x00 ; '.'
000000000021a114         db  0x00 ; '.'
000000000021a115         db  0x00 ; '.'
000000000021a116         db  0x00 ; '.'
000000000021a117         db  0x00 ; '.'
000000000021a118         db  0x00 ; '.'
000000000021a119         db  0x00 ; '.'
000000000021a11a         db  0x00 ; '.'
000000000021a11b         db  0x00 ; '.'
000000000021a11c         db  0x00 ; '.'
000000000021a11d         db  0x00 ; '.'
000000000021a11e         db  0x00 ; '.'
000000000021a11f         db  0x00 ; '.'
000000000021a120         db  0x00 ; '.'
000000000021a121         db  0x00 ; '.'
000000000021a122         db  0x00 ; '.'
000000000021a123         db  0x00 ; '.'
000000000021a124         db  0x00 ; '.'
000000000021a125         db  0x00 ; '.'
000000000021a126         db  0x00 ; '.'
000000000021a127         db  0x00 ; '.'
000000000021a128         db  0x00 ; '.'
000000000021a129         db  0x00 ; '.'
000000000021a12a         db  0x00 ; '.'
000000000021a12b         db  0x00 ; '.'
000000000021a12c         db  0x00 ; '.'
000000000021a12d         db  0x00 ; '.'
000000000021a12e         db  0x00 ; '.'
000000000021a12f         db  0x00 ; '.'
000000000021a130         db  0x00 ; '.'
000000000021a131         db  0x00 ; '.'
000000000021a132         db  0x00 ; '.'
000000000021a133         db  0x00 ; '.'
000000000021a134         db  0x00 ; '.'
000000000021a135         db  0x00 ; '.'
000000000021a136         db  0x00 ; '.'
000000000021a137         db  0x00 ; '.'
000000000021a138         db  0x00 ; '.'
000000000021a139         db  0x00 ; '.'
000000000021a13a         db  0x00 ; '.'
000000000021a13b         db  0x00 ; '.'
000000000021a13c         db  0x00 ; '.'
000000000021a13d         db  0x00 ; '.'
000000000021a13e         db  0x00 ; '.'
000000000021a13f         db  0x00 ; '.'
000000000021a140         db  0x00 ; '.'
000000000021a141         db  0x00 ; '.'
000000000021a142         db  0x00 ; '.'
000000000021a143         db  0x00 ; '.'
000000000021a144         db  0x00 ; '.'
000000000021a145         db  0x00 ; '.'
000000000021a146         db  0x00 ; '.'
000000000021a147         db  0x00 ; '.'
000000000021a148         db  0x00 ; '.'
000000000021a149         db  0x00 ; '.'
000000000021a14a         db  0x00 ; '.'
000000000021a14b         db  0x00 ; '.'
000000000021a14c         db  0x00 ; '.'
000000000021a14d         db  0x00 ; '.'
000000000021a14e         db  0x00 ; '.'
000000000021a14f         db  0x00 ; '.'
                     remove_trailing_slashes:
000000000021a150         db  0x00 ; '.'                                         ; DATA XREF=main+869, do_copy+612
                     parents_option:
000000000021a151         db  0x00 ; '.'                                         ; DATA XREF=main+1020, do_copy+146, do_copy+569, do_copy+639, do_copy+793, do_copy+837
                     selinux_enabled:
000000000021a152         db  0x00 ; '.'                                         ; DATA XREF=main+138, main+606, main+673, main+1765, main+1827, sub_38e0+35
000000000021a153         db  0x00 ; '.'
000000000021a154         db  0x00 ; '.'
000000000021a155         db  0x00 ; '.'
000000000021a156         db  0x00 ; '.'
000000000021a157         db  0x00 ; '.'
000000000021a158         db  0x00 ; '.'
000000000021a159         db  0x00 ; '.'
000000000021a15a         db  0x00 ; '.'
000000000021a15b         db  0x00 ; '.'
000000000021a15c         db  0x00 ; '.'
000000000021a15d         db  0x00 ; '.'
000000000021a15e         db  0x00 ; '.'
000000000021a15f         db  0x00 ; '.'
                     fallback.7572:
000000000021a160         db  0x00 ; '.'                                         ; DATA XREF=write_zeros+135
000000000021a161         db  0x00 ; '.'
000000000021a162         db  0x00 ; '.'
000000000021a163         db  0x00 ; '.'
000000000021a164         db  0x00 ; '.'
000000000021a165         db  0x00 ; '.'
000000000021a166         db  0x00 ; '.'
000000000021a167         db  0x00 ; '.'
000000000021a168         db  0x00 ; '.'
000000000021a169         db  0x00 ; '.'
000000000021a16a         db  0x00 ; '.'
000000000021a16b         db  0x00 ; '.'
000000000021a16c         db  0x00 ; '.'
000000000021a16d         db  0x00 ; '.'
000000000021a16e         db  0x00 ; '.'
000000000021a16f         db  0x00 ; '.'
000000000021a170         db  0x00 ; '.'
000000000021a171         db  0x00 ; '.'
000000000021a172         db  0x00 ; '.'
000000000021a173         db  0x00 ; '.'
000000000021a174         db  0x00 ; '.'
000000000021a175         db  0x00 ; '.'
000000000021a176         db  0x00 ; '.'
000000000021a177         db  0x00 ; '.'
000000000021a178         db  0x00 ; '.'
000000000021a179         db  0x00 ; '.'
000000000021a17a         db  0x00 ; '.'
000000000021a17b         db  0x00 ; '.'
000000000021a17c         db  0x00 ; '.'
000000000021a17d         db  0x00 ; '.'
000000000021a17e         db  0x00 ; '.'
000000000021a17f         db  0x00 ; '.'
000000000021a180         db  0x00 ; '.'
000000000021a181         db  0x00 ; '.'
000000000021a182         db  0x00 ; '.'
000000000021a183         db  0x00 ; '.'
000000000021a184         db  0x00 ; '.'
000000000021a185         db  0x00 ; '.'
000000000021a186         db  0x00 ; '.'
000000000021a187         db  0x00 ; '.'
000000000021a188         db  0x00 ; '.'
000000000021a189         db  0x00 ; '.'
000000000021a18a         db  0x00 ; '.'
000000000021a18b         db  0x00 ; '.'
000000000021a18c         db  0x00 ; '.'
000000000021a18d         db  0x00 ; '.'
000000000021a18e         db  0x00 ; '.'
000000000021a18f         db  0x00 ; '.'
000000000021a190         db  0x00 ; '.'
000000000021a191         db  0x00 ; '.'
000000000021a192         db  0x00 ; '.'
000000000021a193         db  0x00 ; '.'
000000000021a194         db  0x00 ; '.'
000000000021a195         db  0x00 ; '.'
000000000021a196         db  0x00 ; '.'
000000000021a197         db  0x00 ; '.'
000000000021a198         db  0x00 ; '.'
000000000021a199         db  0x00 ; '.'
000000000021a19a         db  0x00 ; '.'
000000000021a19b         db  0x00 ; '.'
000000000021a19c         db  0x00 ; '.'
000000000021a19d         db  0x00 ; '.'
000000000021a19e         db  0x00 ; '.'
000000000021a19f         db  0x00 ; '.'
000000000021a1a0         db  0x00 ; '.'
000000000021a1a1         db  0x00 ; '.'
000000000021a1a2         db  0x00 ; '.'
000000000021a1a3         db  0x00 ; '.'
000000000021a1a4         db  0x00 ; '.'
000000000021a1a5         db  0x00 ; '.'
000000000021a1a6         db  0x00 ; '.'
000000000021a1a7         db  0x00 ; '.'
000000000021a1a8         db  0x00 ; '.'
000000000021a1a9         db  0x00 ; '.'
000000000021a1aa         db  0x00 ; '.'
000000000021a1ab         db  0x00 ; '.'
000000000021a1ac         db  0x00 ; '.'
000000000021a1ad         db  0x00 ; '.'
000000000021a1ae         db  0x00 ; '.'
000000000021a1af         db  0x00 ; '.'
000000000021a1b0         db  0x00 ; '.'
000000000021a1b1         db  0x00 ; '.'
000000000021a1b2         db  0x00 ; '.'
000000000021a1b3         db  0x00 ; '.'
000000000021a1b4         db  0x00 ; '.'
000000000021a1b5         db  0x00 ; '.'
000000000021a1b6         db  0x00 ; '.'
000000000021a1b7         db  0x00 ; '.'
000000000021a1b8         db  0x00 ; '.'
000000000021a1b9         db  0x00 ; '.'
000000000021a1ba         db  0x00 ; '.'
000000000021a1bb         db  0x00 ; '.'
000000000021a1bc         db  0x00 ; '.'
000000000021a1bd         db  0x00 ; '.'
000000000021a1be         db  0x00 ; '.'
000000000021a1bf         db  0x00 ; '.'
000000000021a1c0         db  0x00 ; '.'
000000000021a1c1         db  0x00 ; '.'
000000000021a1c2         db  0x00 ; '.'
000000000021a1c3         db  0x00 ; '.'
000000000021a1c4         db  0x00 ; '.'
000000000021a1c5         db  0x00 ; '.'
000000000021a1c6         db  0x00 ; '.'
000000000021a1c7         db  0x00 ; '.'
000000000021a1c8         db  0x00 ; '.'
000000000021a1c9         db  0x00 ; '.'
000000000021a1ca         db  0x00 ; '.'
000000000021a1cb         db  0x00 ; '.'
000000000021a1cc         db  0x00 ; '.'
000000000021a1cd         db  0x00 ; '.'
000000000021a1ce         db  0x00 ; '.'
000000000021a1cf         db  0x00 ; '.'
000000000021a1d0         db  0x00 ; '.'
000000000021a1d1         db  0x00 ; '.'
000000000021a1d2         db  0x00 ; '.'
000000000021a1d3         db  0x00 ; '.'
000000000021a1d4         db  0x00 ; '.'
000000000021a1d5         db  0x00 ; '.'
000000000021a1d6         db  0x00 ; '.'
000000000021a1d7         db  0x00 ; '.'
000000000021a1d8         db  0x00 ; '.'
000000000021a1d9         db  0x00 ; '.'
000000000021a1da         db  0x00 ; '.'
000000000021a1db         db  0x00 ; '.'
000000000021a1dc         db  0x00 ; '.'
000000000021a1dd         db  0x00 ; '.'
000000000021a1de         db  0x00 ; '.'
000000000021a1df         db  0x00 ; '.'
000000000021a1e0         db  0x00 ; '.'
000000000021a1e1         db  0x00 ; '.'
000000000021a1e2         db  0x00 ; '.'
000000000021a1e3         db  0x00 ; '.'
000000000021a1e4         db  0x00 ; '.'
000000000021a1e5         db  0x00 ; '.'
000000000021a1e6         db  0x00 ; '.'
000000000021a1e7         db  0x00 ; '.'
000000000021a1e8         db  0x00 ; '.'
000000000021a1e9         db  0x00 ; '.'
000000000021a1ea         db  0x00 ; '.'
000000000021a1eb         db  0x00 ; '.'
000000000021a1ec         db  0x00 ; '.'
000000000021a1ed         db  0x00 ; '.'
000000000021a1ee         db  0x00 ; '.'
000000000021a1ef         db  0x00 ; '.'
000000000021a1f0         db  0x00 ; '.'
000000000021a1f1         db  0x00 ; '.'
000000000021a1f2         db  0x00 ; '.'
000000000021a1f3         db  0x00 ; '.'
000000000021a1f4         db  0x00 ; '.'
000000000021a1f5         db  0x00 ; '.'
000000000021a1f6         db  0x00 ; '.'
000000000021a1f7         db  0x00 ; '.'
000000000021a1f8         db  0x00 ; '.'
000000000021a1f9         db  0x00 ; '.'
000000000021a1fa         db  0x00 ; '.'
000000000021a1fb         db  0x00 ; '.'
000000000021a1fc         db  0x00 ; '.'
000000000021a1fd         db  0x00 ; '.'
000000000021a1fe         db  0x00 ; '.'
000000000021a1ff         db  0x00 ; '.'
000000000021a200         db  0x00 ; '.'
000000000021a201         db  0x00 ; '.'
000000000021a202         db  0x00 ; '.'
000000000021a203         db  0x00 ; '.'
000000000021a204         db  0x00 ; '.'
000000000021a205         db  0x00 ; '.'
000000000021a206         db  0x00 ; '.'
000000000021a207         db  0x00 ; '.'
000000000021a208         db  0x00 ; '.'
000000000021a209         db  0x00 ; '.'
000000000021a20a         db  0x00 ; '.'
000000000021a20b         db  0x00 ; '.'
000000000021a20c         db  0x00 ; '.'
000000000021a20d         db  0x00 ; '.'
000000000021a20e         db  0x00 ; '.'
000000000021a20f         db  0x00 ; '.'
000000000021a210         db  0x00 ; '.'
000000000021a211         db  0x00 ; '.'
000000000021a212         db  0x00 ; '.'
000000000021a213         db  0x00 ; '.'
000000000021a214         db  0x00 ; '.'
000000000021a215         db  0x00 ; '.'
000000000021a216         db  0x00 ; '.'
000000000021a217         db  0x00 ; '.'
000000000021a218         db  0x00 ; '.'
000000000021a219         db  0x00 ; '.'
000000000021a21a         db  0x00 ; '.'
000000000021a21b         db  0x00 ; '.'
000000000021a21c         db  0x00 ; '.'
000000000021a21d         db  0x00 ; '.'
000000000021a21e         db  0x00 ; '.'
000000000021a21f         db  0x00 ; '.'
000000000021a220         db  0x00 ; '.'
000000000021a221         db  0x00 ; '.'
000000000021a222         db  0x00 ; '.'
000000000021a223         db  0x00 ; '.'
000000000021a224         db  0x00 ; '.'
000000000021a225         db  0x00 ; '.'
000000000021a226         db  0x00 ; '.'
000000000021a227         db  0x00 ; '.'
000000000021a228         db  0x00 ; '.'
000000000021a229         db  0x00 ; '.'
000000000021a22a         db  0x00 ; '.'
000000000021a22b         db  0x00 ; '.'
000000000021a22c         db  0x00 ; '.'
000000000021a22d         db  0x00 ; '.'
000000000021a22e         db  0x00 ; '.'
000000000021a22f         db  0x00 ; '.'
000000000021a230         db  0x00 ; '.'
000000000021a231         db  0x00 ; '.'
000000000021a232         db  0x00 ; '.'
000000000021a233         db  0x00 ; '.'
000000000021a234         db  0x00 ; '.'
000000000021a235         db  0x00 ; '.'
000000000021a236         db  0x00 ; '.'
000000000021a237         db  0x00 ; '.'
000000000021a238         db  0x00 ; '.'
000000000021a239         db  0x00 ; '.'
000000000021a23a         db  0x00 ; '.'
000000000021a23b         db  0x00 ; '.'
000000000021a23c         db  0x00 ; '.'
000000000021a23d         db  0x00 ; '.'
000000000021a23e         db  0x00 ; '.'
000000000021a23f         db  0x00 ; '.'
000000000021a240         db  0x00 ; '.'
000000000021a241         db  0x00 ; '.'
000000000021a242         db  0x00 ; '.'
000000000021a243         db  0x00 ; '.'
000000000021a244         db  0x00 ; '.'
000000000021a245         db  0x00 ; '.'
000000000021a246         db  0x00 ; '.'
000000000021a247         db  0x00 ; '.'
000000000021a248         db  0x00 ; '.'
000000000021a249         db  0x00 ; '.'
000000000021a24a         db  0x00 ; '.'
000000000021a24b         db  0x00 ; '.'
000000000021a24c         db  0x00 ; '.'
000000000021a24d         db  0x00 ; '.'
000000000021a24e         db  0x00 ; '.'
000000000021a24f         db  0x00 ; '.'
000000000021a250         db  0x00 ; '.'
000000000021a251         db  0x00 ; '.'
000000000021a252         db  0x00 ; '.'
000000000021a253         db  0x00 ; '.'
000000000021a254         db  0x00 ; '.'
000000000021a255         db  0x00 ; '.'
000000000021a256         db  0x00 ; '.'
000000000021a257         db  0x00 ; '.'
000000000021a258         db  0x00 ; '.'
000000000021a259         db  0x00 ; '.'
000000000021a25a         db  0x00 ; '.'
000000000021a25b         db  0x00 ; '.'
000000000021a25c         db  0x00 ; '.'
000000000021a25d         db  0x00 ; '.'
000000000021a25e         db  0x00 ; '.'
000000000021a25f         db  0x00 ; '.'
000000000021a260         db  0x00 ; '.'
000000000021a261         db  0x00 ; '.'
000000000021a262         db  0x00 ; '.'
000000000021a263         db  0x00 ; '.'
000000000021a264         db  0x00 ; '.'
000000000021a265         db  0x00 ; '.'
000000000021a266         db  0x00 ; '.'
000000000021a267         db  0x00 ; '.'
000000000021a268         db  0x00 ; '.'
000000000021a269         db  0x00 ; '.'
000000000021a26a         db  0x00 ; '.'
000000000021a26b         db  0x00 ; '.'
000000000021a26c         db  0x00 ; '.'
000000000021a26d         db  0x00 ; '.'
000000000021a26e         db  0x00 ; '.'
000000000021a26f         db  0x00 ; '.'
000000000021a270         db  0x00 ; '.'
000000000021a271         db  0x00 ; '.'
000000000021a272         db  0x00 ; '.'
000000000021a273         db  0x00 ; '.'
000000000021a274         db  0x00 ; '.'
000000000021a275         db  0x00 ; '.'
000000000021a276         db  0x00 ; '.'
000000000021a277         db  0x00 ; '.'
000000000021a278         db  0x00 ; '.'
000000000021a279         db  0x00 ; '.'
000000000021a27a         db  0x00 ; '.'
000000000021a27b         db  0x00 ; '.'
000000000021a27c         db  0x00 ; '.'
000000000021a27d         db  0x00 ; '.'
000000000021a27e         db  0x00 ; '.'
000000000021a27f         db  0x00 ; '.'
000000000021a280         db  0x00 ; '.'
000000000021a281         db  0x00 ; '.'
000000000021a282         db  0x00 ; '.'
000000000021a283         db  0x00 ; '.'
000000000021a284         db  0x00 ; '.'
000000000021a285         db  0x00 ; '.'
000000000021a286         db  0x00 ; '.'
000000000021a287         db  0x00 ; '.'
000000000021a288         db  0x00 ; '.'
000000000021a289         db  0x00 ; '.'
000000000021a28a         db  0x00 ; '.'
000000000021a28b         db  0x00 ; '.'
000000000021a28c         db  0x00 ; '.'
000000000021a28d         db  0x00 ; '.'
000000000021a28e         db  0x00 ; '.'
000000000021a28f         db  0x00 ; '.'
000000000021a290         db  0x00 ; '.'
000000000021a291         db  0x00 ; '.'
000000000021a292         db  0x00 ; '.'
000000000021a293         db  0x00 ; '.'
000000000021a294         db  0x00 ; '.'
000000000021a295         db  0x00 ; '.'
000000000021a296         db  0x00 ; '.'
000000000021a297         db  0x00 ; '.'
000000000021a298         db  0x00 ; '.'
000000000021a299         db  0x00 ; '.'
000000000021a29a         db  0x00 ; '.'
000000000021a29b         db  0x00 ; '.'
000000000021a29c         db  0x00 ; '.'
000000000021a29d         db  0x00 ; '.'
000000000021a29e         db  0x00 ; '.'
000000000021a29f         db  0x00 ; '.'
000000000021a2a0         db  0x00 ; '.'
000000000021a2a1         db  0x00 ; '.'
000000000021a2a2         db  0x00 ; '.'
000000000021a2a3         db  0x00 ; '.'
000000000021a2a4         db  0x00 ; '.'
000000000021a2a5         db  0x00 ; '.'
000000000021a2a6         db  0x00 ; '.'
000000000021a2a7         db  0x00 ; '.'
000000000021a2a8         db  0x00 ; '.'
000000000021a2a9         db  0x00 ; '.'
000000000021a2aa         db  0x00 ; '.'
000000000021a2ab         db  0x00 ; '.'
000000000021a2ac         db  0x00 ; '.'
000000000021a2ad         db  0x00 ; '.'
000000000021a2ae         db  0x00 ; '.'
000000000021a2af         db  0x00 ; '.'
000000000021a2b0         db  0x00 ; '.'
000000000021a2b1         db  0x00 ; '.'
000000000021a2b2         db  0x00 ; '.'
000000000021a2b3         db  0x00 ; '.'
000000000021a2b4         db  0x00 ; '.'
000000000021a2b5         db  0x00 ; '.'
000000000021a2b6         db  0x00 ; '.'
000000000021a2b7         db  0x00 ; '.'
000000000021a2b8         db  0x00 ; '.'
000000000021a2b9         db  0x00 ; '.'
000000000021a2ba         db  0x00 ; '.'
000000000021a2bb         db  0x00 ; '.'
000000000021a2bc         db  0x00 ; '.'
000000000021a2bd         db  0x00 ; '.'
000000000021a2be         db  0x00 ; '.'
000000000021a2bf         db  0x00 ; '.'
000000000021a2c0         db  0x00 ; '.'
000000000021a2c1         db  0x00 ; '.'
000000000021a2c2         db  0x00 ; '.'
000000000021a2c3         db  0x00 ; '.'
000000000021a2c4         db  0x00 ; '.'
000000000021a2c5         db  0x00 ; '.'
000000000021a2c6         db  0x00 ; '.'
000000000021a2c7         db  0x00 ; '.'
000000000021a2c8         db  0x00 ; '.'
000000000021a2c9         db  0x00 ; '.'
000000000021a2ca         db  0x00 ; '.'
000000000021a2cb         db  0x00 ; '.'
000000000021a2cc         db  0x00 ; '.'
000000000021a2cd         db  0x00 ; '.'
000000000021a2ce         db  0x00 ; '.'
000000000021a2cf         db  0x00 ; '.'
000000000021a2d0         db  0x00 ; '.'
000000000021a2d1         db  0x00 ; '.'
000000000021a2d2         db  0x00 ; '.'
000000000021a2d3         db  0x00 ; '.'
000000000021a2d4         db  0x00 ; '.'
000000000021a2d5         db  0x00 ; '.'
000000000021a2d6         db  0x00 ; '.'
000000000021a2d7         db  0x00 ; '.'
000000000021a2d8         db  0x00 ; '.'
000000000021a2d9         db  0x00 ; '.'
000000000021a2da         db  0x00 ; '.'
000000000021a2db         db  0x00 ; '.'
000000000021a2dc         db  0x00 ; '.'
000000000021a2dd         db  0x00 ; '.'
000000000021a2de         db  0x00 ; '.'
000000000021a2df         db  0x00 ; '.'
000000000021a2e0         db  0x00 ; '.'
000000000021a2e1         db  0x00 ; '.'
000000000021a2e2         db  0x00 ; '.'
000000000021a2e3         db  0x00 ; '.'
000000000021a2e4         db  0x00 ; '.'
000000000021a2e5         db  0x00 ; '.'
000000000021a2e6         db  0x00 ; '.'
000000000021a2e7         db  0x00 ; '.'
000000000021a2e8         db  0x00 ; '.'
000000000021a2e9         db  0x00 ; '.'
000000000021a2ea         db  0x00 ; '.'
000000000021a2eb         db  0x00 ; '.'
000000000021a2ec         db  0x00 ; '.'
000000000021a2ed         db  0x00 ; '.'
000000000021a2ee         db  0x00 ; '.'
000000000021a2ef         db  0x00 ; '.'
000000000021a2f0         db  0x00 ; '.'
000000000021a2f1         db  0x00 ; '.'
000000000021a2f2         db  0x00 ; '.'
000000000021a2f3         db  0x00 ; '.'
000000000021a2f4         db  0x00 ; '.'
000000000021a2f5         db  0x00 ; '.'
000000000021a2f6         db  0x00 ; '.'
000000000021a2f7         db  0x00 ; '.'
000000000021a2f8         db  0x00 ; '.'
000000000021a2f9         db  0x00 ; '.'
000000000021a2fa         db  0x00 ; '.'
000000000021a2fb         db  0x00 ; '.'
000000000021a2fc         db  0x00 ; '.'
000000000021a2fd         db  0x00 ; '.'
000000000021a2fe         db  0x00 ; '.'
000000000021a2ff         db  0x00 ; '.'
000000000021a300         db  0x00 ; '.'
000000000021a301         db  0x00 ; '.'
000000000021a302         db  0x00 ; '.'
000000000021a303         db  0x00 ; '.'
000000000021a304         db  0x00 ; '.'
000000000021a305         db  0x00 ; '.'
000000000021a306         db  0x00 ; '.'
000000000021a307         db  0x00 ; '.'
000000000021a308         db  0x00 ; '.'
000000000021a309         db  0x00 ; '.'
000000000021a30a         db  0x00 ; '.'
000000000021a30b         db  0x00 ; '.'
000000000021a30c         db  0x00 ; '.'
000000000021a30d         db  0x00 ; '.'
000000000021a30e         db  0x00 ; '.'
000000000021a30f         db  0x00 ; '.'
000000000021a310         db  0x00 ; '.'
000000000021a311         db  0x00 ; '.'
000000000021a312         db  0x00 ; '.'
000000000021a313         db  0x00 ; '.'
000000000021a314         db  0x00 ; '.'
000000000021a315         db  0x00 ; '.'
000000000021a316         db  0x00 ; '.'
000000000021a317         db  0x00 ; '.'
000000000021a318         db  0x00 ; '.'
000000000021a319         db  0x00 ; '.'
000000000021a31a         db  0x00 ; '.'
000000000021a31b         db  0x00 ; '.'
000000000021a31c         db  0x00 ; '.'
000000000021a31d         db  0x00 ; '.'
000000000021a31e         db  0x00 ; '.'
000000000021a31f         db  0x00 ; '.'
000000000021a320         db  0x00 ; '.'
000000000021a321         db  0x00 ; '.'
000000000021a322         db  0x00 ; '.'
000000000021a323         db  0x00 ; '.'
000000000021a324         db  0x00 ; '.'
000000000021a325         db  0x00 ; '.'
000000000021a326         db  0x00 ; '.'
000000000021a327         db  0x00 ; '.'
000000000021a328         db  0x00 ; '.'
000000000021a329         db  0x00 ; '.'
000000000021a32a         db  0x00 ; '.'
000000000021a32b         db  0x00 ; '.'
000000000021a32c         db  0x00 ; '.'
000000000021a32d         db  0x00 ; '.'
000000000021a32e         db  0x00 ; '.'
000000000021a32f         db  0x00 ; '.'
000000000021a330         db  0x00 ; '.'
000000000021a331         db  0x00 ; '.'
000000000021a332         db  0x00 ; '.'
000000000021a333         db  0x00 ; '.'
000000000021a334         db  0x00 ; '.'
000000000021a335         db  0x00 ; '.'
000000000021a336         db  0x00 ; '.'
000000000021a337         db  0x00 ; '.'
000000000021a338         db  0x00 ; '.'
000000000021a339         db  0x00 ; '.'
000000000021a33a         db  0x00 ; '.'
000000000021a33b         db  0x00 ; '.'
000000000021a33c         db  0x00 ; '.'
000000000021a33d         db  0x00 ; '.'
000000000021a33e         db  0x00 ; '.'
000000000021a33f         db  0x00 ; '.'
000000000021a340         db  0x00 ; '.'
000000000021a341         db  0x00 ; '.'
000000000021a342         db  0x00 ; '.'
000000000021a343         db  0x00 ; '.'
000000000021a344         db  0x00 ; '.'
000000000021a345         db  0x00 ; '.'
000000000021a346         db  0x00 ; '.'
000000000021a347         db  0x00 ; '.'
000000000021a348         db  0x00 ; '.'
000000000021a349         db  0x00 ; '.'
000000000021a34a         db  0x00 ; '.'
000000000021a34b         db  0x00 ; '.'
000000000021a34c         db  0x00 ; '.'
000000000021a34d         db  0x00 ; '.'
000000000021a34e         db  0x00 ; '.'
000000000021a34f         db  0x00 ; '.'
000000000021a350         db  0x00 ; '.'
000000000021a351         db  0x00 ; '.'
000000000021a352         db  0x00 ; '.'
000000000021a353         db  0x00 ; '.'
000000000021a354         db  0x00 ; '.'
000000000021a355         db  0x00 ; '.'
000000000021a356         db  0x00 ; '.'
000000000021a357         db  0x00 ; '.'
000000000021a358         db  0x00 ; '.'
000000000021a359         db  0x00 ; '.'
000000000021a35a         db  0x00 ; '.'
000000000021a35b         db  0x00 ; '.'
000000000021a35c         db  0x00 ; '.'
000000000021a35d         db  0x00 ; '.'
000000000021a35e         db  0x00 ; '.'
000000000021a35f         db  0x00 ; '.'
000000000021a360         db  0x00 ; '.'
000000000021a361         db  0x00 ; '.'
000000000021a362         db  0x00 ; '.'
000000000021a363         db  0x00 ; '.'
000000000021a364         db  0x00 ; '.'
000000000021a365         db  0x00 ; '.'
000000000021a366         db  0x00 ; '.'
000000000021a367         db  0x00 ; '.'
000000000021a368         db  0x00 ; '.'
000000000021a369         db  0x00 ; '.'
000000000021a36a         db  0x00 ; '.'
000000000021a36b         db  0x00 ; '.'
000000000021a36c         db  0x00 ; '.'
000000000021a36d         db  0x00 ; '.'
000000000021a36e         db  0x00 ; '.'
000000000021a36f         db  0x00 ; '.'
000000000021a370         db  0x00 ; '.'
000000000021a371         db  0x00 ; '.'
000000000021a372         db  0x00 ; '.'
000000000021a373         db  0x00 ; '.'
000000000021a374         db  0x00 ; '.'
000000000021a375         db  0x00 ; '.'
000000000021a376         db  0x00 ; '.'
000000000021a377         db  0x00 ; '.'
000000000021a378         db  0x00 ; '.'
000000000021a379         db  0x00 ; '.'
000000000021a37a         db  0x00 ; '.'
000000000021a37b         db  0x00 ; '.'
000000000021a37c         db  0x00 ; '.'
000000000021a37d         db  0x00 ; '.'
000000000021a37e         db  0x00 ; '.'
000000000021a37f         db  0x00 ; '.'
000000000021a380         db  0x00 ; '.'
000000000021a381         db  0x00 ; '.'
000000000021a382         db  0x00 ; '.'
000000000021a383         db  0x00 ; '.'
000000000021a384         db  0x00 ; '.'
000000000021a385         db  0x00 ; '.'
000000000021a386         db  0x00 ; '.'
000000000021a387         db  0x00 ; '.'
000000000021a388         db  0x00 ; '.'
000000000021a389         db  0x00 ; '.'
000000000021a38a         db  0x00 ; '.'
000000000021a38b         db  0x00 ; '.'
000000000021a38c         db  0x00 ; '.'
000000000021a38d         db  0x00 ; '.'
000000000021a38e         db  0x00 ; '.'
000000000021a38f         db  0x00 ; '.'
000000000021a390         db  0x00 ; '.'
000000000021a391         db  0x00 ; '.'
000000000021a392         db  0x00 ; '.'
000000000021a393         db  0x00 ; '.'
000000000021a394         db  0x00 ; '.'
000000000021a395         db  0x00 ; '.'
000000000021a396         db  0x00 ; '.'
000000000021a397         db  0x00 ; '.'
000000000021a398         db  0x00 ; '.'
000000000021a399         db  0x00 ; '.'
000000000021a39a         db  0x00 ; '.'
000000000021a39b         db  0x00 ; '.'
000000000021a39c         db  0x00 ; '.'
000000000021a39d         db  0x00 ; '.'
000000000021a39e         db  0x00 ; '.'
000000000021a39f         db  0x00 ; '.'
000000000021a3a0         db  0x00 ; '.'
000000000021a3a1         db  0x00 ; '.'
000000000021a3a2         db  0x00 ; '.'
000000000021a3a3         db  0x00 ; '.'
000000000021a3a4         db  0x00 ; '.'
000000000021a3a5         db  0x00 ; '.'
000000000021a3a6         db  0x00 ; '.'
000000000021a3a7         db  0x00 ; '.'
000000000021a3a8         db  0x00 ; '.'
000000000021a3a9         db  0x00 ; '.'
000000000021a3aa         db  0x00 ; '.'
000000000021a3ab         db  0x00 ; '.'
000000000021a3ac         db  0x00 ; '.'
000000000021a3ad         db  0x00 ; '.'
000000000021a3ae         db  0x00 ; '.'
000000000021a3af         db  0x00 ; '.'
000000000021a3b0         db  0x00 ; '.'
000000000021a3b1         db  0x00 ; '.'
000000000021a3b2         db  0x00 ; '.'
000000000021a3b3         db  0x00 ; '.'
000000000021a3b4         db  0x00 ; '.'
000000000021a3b5         db  0x00 ; '.'
000000000021a3b6         db  0x00 ; '.'
000000000021a3b7         db  0x00 ; '.'
000000000021a3b8         db  0x00 ; '.'
000000000021a3b9         db  0x00 ; '.'
000000000021a3ba         db  0x00 ; '.'
000000000021a3bb         db  0x00 ; '.'
000000000021a3bc         db  0x00 ; '.'
000000000021a3bd         db  0x00 ; '.'
000000000021a3be         db  0x00 ; '.'
000000000021a3bf         db  0x00 ; '.'
000000000021a3c0         db  0x00 ; '.'
000000000021a3c1         db  0x00 ; '.'
000000000021a3c2         db  0x00 ; '.'
000000000021a3c3         db  0x00 ; '.'
000000000021a3c4         db  0x00 ; '.'
000000000021a3c5         db  0x00 ; '.'
000000000021a3c6         db  0x00 ; '.'
000000000021a3c7         db  0x00 ; '.'
000000000021a3c8         db  0x00 ; '.'
000000000021a3c9         db  0x00 ; '.'
000000000021a3ca         db  0x00 ; '.'
000000000021a3cb         db  0x00 ; '.'
000000000021a3cc         db  0x00 ; '.'
000000000021a3cd         db  0x00 ; '.'
000000000021a3ce         db  0x00 ; '.'
000000000021a3cf         db  0x00 ; '.'
000000000021a3d0         db  0x00 ; '.'
000000000021a3d1         db  0x00 ; '.'
000000000021a3d2         db  0x00 ; '.'
000000000021a3d3         db  0x00 ; '.'
000000000021a3d4         db  0x00 ; '.'
000000000021a3d5         db  0x00 ; '.'
000000000021a3d6         db  0x00 ; '.'
000000000021a3d7         db  0x00 ; '.'
000000000021a3d8         db  0x00 ; '.'
000000000021a3d9         db  0x00 ; '.'
000000000021a3da         db  0x00 ; '.'
000000000021a3db         db  0x00 ; '.'
000000000021a3dc         db  0x00 ; '.'
000000000021a3dd         db  0x00 ; '.'
000000000021a3de         db  0x00 ; '.'
000000000021a3df         db  0x00 ; '.'
000000000021a3e0         db  0x00 ; '.'
000000000021a3e1         db  0x00 ; '.'
000000000021a3e2         db  0x00 ; '.'
000000000021a3e3         db  0x00 ; '.'
000000000021a3e4         db  0x00 ; '.'
000000000021a3e5         db  0x00 ; '.'
000000000021a3e6         db  0x00 ; '.'
000000000021a3e7         db  0x00 ; '.'
000000000021a3e8         db  0x00 ; '.'
000000000021a3e9         db  0x00 ; '.'
000000000021a3ea         db  0x00 ; '.'
000000000021a3eb         db  0x00 ; '.'
000000000021a3ec         db  0x00 ; '.'
000000000021a3ed         db  0x00 ; '.'
000000000021a3ee         db  0x00 ; '.'
000000000021a3ef         db  0x00 ; '.'
000000000021a3f0         db  0x00 ; '.'
000000000021a3f1         db  0x00 ; '.'
000000000021a3f2         db  0x00 ; '.'
000000000021a3f3         db  0x00 ; '.'
000000000021a3f4         db  0x00 ; '.'
000000000021a3f5         db  0x00 ; '.'
000000000021a3f6         db  0x00 ; '.'
000000000021a3f7         db  0x00 ; '.'
000000000021a3f8         db  0x00 ; '.'
000000000021a3f9         db  0x00 ; '.'
000000000021a3fa         db  0x00 ; '.'
000000000021a3fb         db  0x00 ; '.'
000000000021a3fc         db  0x00 ; '.'
000000000021a3fd         db  0x00 ; '.'
000000000021a3fe         db  0x00 ; '.'
000000000021a3ff         db  0x00 ; '.'
000000000021a400         db  0x00 ; '.'
000000000021a401         db  0x00 ; '.'
000000000021a402         db  0x00 ; '.'
000000000021a403         db  0x00 ; '.'
000000000021a404         db  0x00 ; '.'
000000000021a405         db  0x00 ; '.'
000000000021a406         db  0x00 ; '.'
000000000021a407         db  0x00 ; '.'
000000000021a408         db  0x00 ; '.'
000000000021a409         db  0x00 ; '.'
000000000021a40a         db  0x00 ; '.'
000000000021a40b         db  0x00 ; '.'
000000000021a40c         db  0x00 ; '.'
000000000021a40d         db  0x00 ; '.'
000000000021a40e         db  0x00 ; '.'
000000000021a40f         db  0x00 ; '.'
000000000021a410         db  0x00 ; '.'
000000000021a411         db  0x00 ; '.'
000000000021a412         db  0x00 ; '.'
000000000021a413         db  0x00 ; '.'
000000000021a414         db  0x00 ; '.'
000000000021a415         db  0x00 ; '.'
000000000021a416         db  0x00 ; '.'
000000000021a417         db  0x00 ; '.'
000000000021a418         db  0x00 ; '.'
000000000021a419         db  0x00 ; '.'
000000000021a41a         db  0x00 ; '.'
000000000021a41b         db  0x00 ; '.'
000000000021a41c         db  0x00 ; '.'
000000000021a41d         db  0x00 ; '.'
000000000021a41e         db  0x00 ; '.'
000000000021a41f         db  0x00 ; '.'
000000000021a420         db  0x00 ; '.'
000000000021a421         db  0x00 ; '.'
000000000021a422         db  0x00 ; '.'
000000000021a423         db  0x00 ; '.'
000000000021a424         db  0x00 ; '.'
000000000021a425         db  0x00 ; '.'
000000000021a426         db  0x00 ; '.'
000000000021a427         db  0x00 ; '.'
000000000021a428         db  0x00 ; '.'
000000000021a429         db  0x00 ; '.'
000000000021a42a         db  0x00 ; '.'
000000000021a42b         db  0x00 ; '.'
000000000021a42c         db  0x00 ; '.'
000000000021a42d         db  0x00 ; '.'
000000000021a42e         db  0x00 ; '.'
000000000021a42f         db  0x00 ; '.'
000000000021a430         db  0x00 ; '.'
000000000021a431         db  0x00 ; '.'
000000000021a432         db  0x00 ; '.'
000000000021a433         db  0x00 ; '.'
000000000021a434         db  0x00 ; '.'
000000000021a435         db  0x00 ; '.'
000000000021a436         db  0x00 ; '.'
000000000021a437         db  0x00 ; '.'
000000000021a438         db  0x00 ; '.'
000000000021a439         db  0x00 ; '.'
000000000021a43a         db  0x00 ; '.'
000000000021a43b         db  0x00 ; '.'
000000000021a43c         db  0x00 ; '.'
000000000021a43d         db  0x00 ; '.'
000000000021a43e         db  0x00 ; '.'
000000000021a43f         db  0x00 ; '.'
000000000021a440         db  0x00 ; '.'
000000000021a441         db  0x00 ; '.'
000000000021a442         db  0x00 ; '.'
000000000021a443         db  0x00 ; '.'
000000000021a444         db  0x00 ; '.'
000000000021a445         db  0x00 ; '.'
000000000021a446         db  0x00 ; '.'
000000000021a447         db  0x00 ; '.'
000000000021a448         db  0x00 ; '.'
000000000021a449         db  0x00 ; '.'
000000000021a44a         db  0x00 ; '.'
000000000021a44b         db  0x00 ; '.'
000000000021a44c         db  0x00 ; '.'
000000000021a44d         db  0x00 ; '.'
000000000021a44e         db  0x00 ; '.'
000000000021a44f         db  0x00 ; '.'
000000000021a450         db  0x00 ; '.'
000000000021a451         db  0x00 ; '.'
000000000021a452         db  0x00 ; '.'
000000000021a453         db  0x00 ; '.'
000000000021a454         db  0x00 ; '.'
000000000021a455         db  0x00 ; '.'
000000000021a456         db  0x00 ; '.'
000000000021a457         db  0x00 ; '.'
000000000021a458         db  0x00 ; '.'
000000000021a459         db  0x00 ; '.'
000000000021a45a         db  0x00 ; '.'
000000000021a45b         db  0x00 ; '.'
000000000021a45c         db  0x00 ; '.'
000000000021a45d         db  0x00 ; '.'
000000000021a45e         db  0x00 ; '.'
000000000021a45f         db  0x00 ; '.'
000000000021a460         db  0x00 ; '.'
000000000021a461         db  0x00 ; '.'
000000000021a462         db  0x00 ; '.'
000000000021a463         db  0x00 ; '.'
000000000021a464         db  0x00 ; '.'
000000000021a465         db  0x00 ; '.'
000000000021a466         db  0x00 ; '.'
000000000021a467         db  0x00 ; '.'
000000000021a468         db  0x00 ; '.'
000000000021a469         db  0x00 ; '.'
000000000021a46a         db  0x00 ; '.'
000000000021a46b         db  0x00 ; '.'
000000000021a46c         db  0x00 ; '.'
000000000021a46d         db  0x00 ; '.'
000000000021a46e         db  0x00 ; '.'
000000000021a46f         db  0x00 ; '.'
000000000021a470         db  0x00 ; '.'
000000000021a471         db  0x00 ; '.'
000000000021a472         db  0x00 ; '.'
000000000021a473         db  0x00 ; '.'
000000000021a474         db  0x00 ; '.'
000000000021a475         db  0x00 ; '.'
000000000021a476         db  0x00 ; '.'
000000000021a477         db  0x00 ; '.'
000000000021a478         db  0x00 ; '.'
000000000021a479         db  0x00 ; '.'
000000000021a47a         db  0x00 ; '.'
000000000021a47b         db  0x00 ; '.'
000000000021a47c         db  0x00 ; '.'
000000000021a47d         db  0x00 ; '.'
000000000021a47e         db  0x00 ; '.'
000000000021a47f         db  0x00 ; '.'
000000000021a480         db  0x00 ; '.'
000000000021a481         db  0x00 ; '.'
000000000021a482         db  0x00 ; '.'
000000000021a483         db  0x00 ; '.'
000000000021a484         db  0x00 ; '.'
000000000021a485         db  0x00 ; '.'
000000000021a486         db  0x00 ; '.'
000000000021a487         db  0x00 ; '.'
000000000021a488         db  0x00 ; '.'
000000000021a489         db  0x00 ; '.'
000000000021a48a         db  0x00 ; '.'
000000000021a48b         db  0x00 ; '.'
000000000021a48c         db  0x00 ; '.'
000000000021a48d         db  0x00 ; '.'
000000000021a48e         db  0x00 ; '.'
000000000021a48f         db  0x00 ; '.'
000000000021a490         db  0x00 ; '.'
000000000021a491         db  0x00 ; '.'
000000000021a492         db  0x00 ; '.'
000000000021a493         db  0x00 ; '.'
000000000021a494         db  0x00 ; '.'
000000000021a495         db  0x00 ; '.'
000000000021a496         db  0x00 ; '.'
000000000021a497         db  0x00 ; '.'
000000000021a498         db  0x00 ; '.'
000000000021a499         db  0x00 ; '.'
000000000021a49a         db  0x00 ; '.'
000000000021a49b         db  0x00 ; '.'
000000000021a49c         db  0x00 ; '.'
000000000021a49d         db  0x00 ; '.'
000000000021a49e         db  0x00 ; '.'
000000000021a49f         db  0x00 ; '.'
000000000021a4a0         db  0x00 ; '.'
000000000021a4a1         db  0x00 ; '.'
000000000021a4a2         db  0x00 ; '.'
000000000021a4a3         db  0x00 ; '.'
000000000021a4a4         db  0x00 ; '.'
000000000021a4a5         db  0x00 ; '.'
000000000021a4a6         db  0x00 ; '.'
000000000021a4a7         db  0x00 ; '.'
000000000021a4a8         db  0x00 ; '.'
000000000021a4a9         db  0x00 ; '.'
000000000021a4aa         db  0x00 ; '.'
000000000021a4ab         db  0x00 ; '.'
000000000021a4ac         db  0x00 ; '.'
000000000021a4ad         db  0x00 ; '.'
000000000021a4ae         db  0x00 ; '.'
000000000021a4af         db  0x00 ; '.'
000000000021a4b0         db  0x00 ; '.'
000000000021a4b1         db  0x00 ; '.'
000000000021a4b2         db  0x00 ; '.'
000000000021a4b3         db  0x00 ; '.'
000000000021a4b4         db  0x00 ; '.'
000000000021a4b5         db  0x00 ; '.'
000000000021a4b6         db  0x00 ; '.'
000000000021a4b7         db  0x00 ; '.'
000000000021a4b8         db  0x00 ; '.'
000000000021a4b9         db  0x00 ; '.'
000000000021a4ba         db  0x00 ; '.'
000000000021a4bb         db  0x00 ; '.'
000000000021a4bc         db  0x00 ; '.'
000000000021a4bd         db  0x00 ; '.'
000000000021a4be         db  0x00 ; '.'
000000000021a4bf         db  0x00 ; '.'
000000000021a4c0         db  0x00 ; '.'
000000000021a4c1         db  0x00 ; '.'
000000000021a4c2         db  0x00 ; '.'
000000000021a4c3         db  0x00 ; '.'
000000000021a4c4         db  0x00 ; '.'
000000000021a4c5         db  0x00 ; '.'
000000000021a4c6         db  0x00 ; '.'
000000000021a4c7         db  0x00 ; '.'
000000000021a4c8         db  0x00 ; '.'
000000000021a4c9         db  0x00 ; '.'
000000000021a4ca         db  0x00 ; '.'
000000000021a4cb         db  0x00 ; '.'
000000000021a4cc         db  0x00 ; '.'
000000000021a4cd         db  0x00 ; '.'
000000000021a4ce         db  0x00 ; '.'
000000000021a4cf         db  0x00 ; '.'
000000000021a4d0         db  0x00 ; '.'
000000000021a4d1         db  0x00 ; '.'
000000000021a4d2         db  0x00 ; '.'
000000000021a4d3         db  0x00 ; '.'
000000000021a4d4         db  0x00 ; '.'
000000000021a4d5         db  0x00 ; '.'
000000000021a4d6         db  0x00 ; '.'
000000000021a4d7         db  0x00 ; '.'
000000000021a4d8         db  0x00 ; '.'
000000000021a4d9         db  0x00 ; '.'
000000000021a4da         db  0x00 ; '.'
000000000021a4db         db  0x00 ; '.'
000000000021a4dc         db  0x00 ; '.'
000000000021a4dd         db  0x00 ; '.'
000000000021a4de         db  0x00 ; '.'
000000000021a4df         db  0x00 ; '.'
000000000021a4e0         db  0x00 ; '.'
000000000021a4e1         db  0x00 ; '.'
000000000021a4e2         db  0x00 ; '.'
000000000021a4e3         db  0x00 ; '.'
000000000021a4e4         db  0x00 ; '.'
000000000021a4e5         db  0x00 ; '.'
000000000021a4e6         db  0x00 ; '.'
000000000021a4e7         db  0x00 ; '.'
000000000021a4e8         db  0x00 ; '.'
000000000021a4e9         db  0x00 ; '.'
000000000021a4ea         db  0x00 ; '.'
000000000021a4eb         db  0x00 ; '.'
000000000021a4ec         db  0x00 ; '.'
000000000021a4ed         db  0x00 ; '.'
000000000021a4ee         db  0x00 ; '.'
000000000021a4ef         db  0x00 ; '.'
000000000021a4f0         db  0x00 ; '.'
000000000021a4f1         db  0x00 ; '.'
000000000021a4f2         db  0x00 ; '.'
000000000021a4f3         db  0x00 ; '.'
000000000021a4f4         db  0x00 ; '.'
000000000021a4f5         db  0x00 ; '.'
000000000021a4f6         db  0x00 ; '.'
000000000021a4f7         db  0x00 ; '.'
000000000021a4f8         db  0x00 ; '.'
000000000021a4f9         db  0x00 ; '.'
000000000021a4fa         db  0x00 ; '.'
000000000021a4fb         db  0x00 ; '.'
000000000021a4fc         db  0x00 ; '.'
000000000021a4fd         db  0x00 ; '.'
000000000021a4fe         db  0x00 ; '.'
000000000021a4ff         db  0x00 ; '.'
000000000021a500         db  0x00 ; '.'
000000000021a501         db  0x00 ; '.'
000000000021a502         db  0x00 ; '.'
000000000021a503         db  0x00 ; '.'
000000000021a504         db  0x00 ; '.'
000000000021a505         db  0x00 ; '.'
000000000021a506         db  0x00 ; '.'
000000000021a507         db  0x00 ; '.'
000000000021a508         db  0x00 ; '.'
000000000021a509         db  0x00 ; '.'
000000000021a50a         db  0x00 ; '.'
000000000021a50b         db  0x00 ; '.'
000000000021a50c         db  0x00 ; '.'
000000000021a50d         db  0x00 ; '.'
000000000021a50e         db  0x00 ; '.'
000000000021a50f         db  0x00 ; '.'
000000000021a510         db  0x00 ; '.'
000000000021a511         db  0x00 ; '.'
000000000021a512         db  0x00 ; '.'
000000000021a513         db  0x00 ; '.'
000000000021a514         db  0x00 ; '.'
000000000021a515         db  0x00 ; '.'
000000000021a516         db  0x00 ; '.'
000000000021a517         db  0x00 ; '.'
000000000021a518         db  0x00 ; '.'
000000000021a519         db  0x00 ; '.'
000000000021a51a         db  0x00 ; '.'
000000000021a51b         db  0x00 ; '.'
000000000021a51c         db  0x00 ; '.'
000000000021a51d         db  0x00 ; '.'
000000000021a51e         db  0x00 ; '.'
000000000021a51f         db  0x00 ; '.'
000000000021a520         db  0x00 ; '.'
000000000021a521         db  0x00 ; '.'
000000000021a522         db  0x00 ; '.'
000000000021a523         db  0x00 ; '.'
000000000021a524         db  0x00 ; '.'
000000000021a525         db  0x00 ; '.'
000000000021a526         db  0x00 ; '.'
000000000021a527         db  0x00 ; '.'
000000000021a528         db  0x00 ; '.'
000000000021a529         db  0x00 ; '.'
000000000021a52a         db  0x00 ; '.'
000000000021a52b         db  0x00 ; '.'
000000000021a52c         db  0x00 ; '.'
000000000021a52d         db  0x00 ; '.'
000000000021a52e         db  0x00 ; '.'
000000000021a52f         db  0x00 ; '.'
000000000021a530         db  0x00 ; '.'
000000000021a531         db  0x00 ; '.'
000000000021a532         db  0x00 ; '.'
000000000021a533         db  0x00 ; '.'
000000000021a534         db  0x00 ; '.'
000000000021a535         db  0x00 ; '.'
000000000021a536         db  0x00 ; '.'
000000000021a537         db  0x00 ; '.'
000000000021a538         db  0x00 ; '.'
000000000021a539         db  0x00 ; '.'
000000000021a53a         db  0x00 ; '.'
000000000021a53b         db  0x00 ; '.'
000000000021a53c         db  0x00 ; '.'
000000000021a53d         db  0x00 ; '.'
000000000021a53e         db  0x00 ; '.'
000000000021a53f         db  0x00 ; '.'
000000000021a540         db  0x00 ; '.'
000000000021a541         db  0x00 ; '.'
000000000021a542         db  0x00 ; '.'
000000000021a543         db  0x00 ; '.'
000000000021a544         db  0x00 ; '.'
000000000021a545         db  0x00 ; '.'
000000000021a546         db  0x00 ; '.'
000000000021a547         db  0x00 ; '.'
000000000021a548         db  0x00 ; '.'
000000000021a549         db  0x00 ; '.'
000000000021a54a         db  0x00 ; '.'
000000000021a54b         db  0x00 ; '.'
000000000021a54c         db  0x00 ; '.'
000000000021a54d         db  0x00 ; '.'
000000000021a54e         db  0x00 ; '.'
000000000021a54f         db  0x00 ; '.'
000000000021a550         db  0x00 ; '.'
000000000021a551         db  0x00 ; '.'
000000000021a552         db  0x00 ; '.'
000000000021a553         db  0x00 ; '.'
000000000021a554         db  0x00 ; '.'
000000000021a555         db  0x00 ; '.'
000000000021a556         db  0x00 ; '.'
000000000021a557         db  0x00 ; '.'
000000000021a558         db  0x00 ; '.'
000000000021a559         db  0x00 ; '.'
000000000021a55a         db  0x00 ; '.'
000000000021a55b         db  0x00 ; '.'
000000000021a55c         db  0x00 ; '.'
000000000021a55d         db  0x00 ; '.'
000000000021a55e         db  0x00 ; '.'
000000000021a55f         db  0x00 ; '.'
                     zeros.7570:
000000000021a560         db  0x00 ; '.'                                         ; DATA XREF=write_zeros, write_zeros+47, write_zeros+126, write_zeros+153
000000000021a561         db  0x00 ; '.'
000000000021a562         db  0x00 ; '.'
000000000021a563         db  0x00 ; '.'
000000000021a564         db  0x00 ; '.'
000000000021a565         db  0x00 ; '.'
000000000021a566         db  0x00 ; '.'
000000000021a567         db  0x00 ; '.'
                     top_level_dst_name:
000000000021a568         db  0x00 ; '.'                                         ; DATA XREF=copy_internal+4262, copy_internal+6576, copy+106
000000000021a569         db  0x00 ; '.'
000000000021a56a         db  0x00 ; '.'
000000000021a56b         db  0x00 ; '.'
000000000021a56c         db  0x00 ; '.'
000000000021a56d         db  0x00 ; '.'
000000000021a56e         db  0x00 ; '.'
000000000021a56f         db  0x00 ; '.'
                     top_level_src_name:
000000000021a570         db  0x00 ; '.'                                         ; DATA XREF=copy_internal+4284, copy_internal+6598, copy_internal+9930, copy+113
000000000021a571         db  0x00 ; '.'
000000000021a572         db  0x00 ; '.'
000000000021a573         db  0x00 ; '.'
000000000021a574         db  0x00 ; '.'
000000000021a575         db  0x00 ; '.'
000000000021a576         db  0x00 ; '.'
000000000021a577         db  0x00 ; '.'
                     src_to_dest:
000000000021a578         db  0x00 ; '.'                                         ; DATA XREF=forget_created+9, src_to_dest_lookup+8, remember_copied+40, hash_init+40, forget_all
000000000021a579         db  0x00 ; '.'
000000000021a57a         db  0x00 ; '.'
000000000021a57b         db  0x00 ; '.'
000000000021a57c         db  0x00 ; '.'
000000000021a57d         db  0x00 ; '.'
000000000021a57e         db  0x00 ; '.'
000000000021a57f         db  0x00 ; '.'
                     simple_backup_suffix:
000000000021a580         db  0x00 ; '.'                                         ; DATA XREF=copy_internal+3476, copy_internal+10379, set_simple_backup_suffix+21, backupfile_internal+72, backupfile_internal+970, backupfile_internal+1009, backupfile_internal+1513
000000000021a581         db  0x00 ; '.'
000000000021a582         db  0x00 ; '.'
000000000021a583         db  0x00 ; '.'
000000000021a584         db  0x00 ; '.'
000000000021a585         db  0x00 ; '.'
000000000021a586         db  0x00 ; '.'
000000000021a587         db  0x00 ; '.'
                     file_name:
000000000021a588         db  0x00 ; '.'                                         ; DATA XREF=close_stdin_set_file_name, close_stdin+107
000000000021a589         db  0x00 ; '.'
000000000021a58a         db  0x00 ; '.'
000000000021a58b         db  0x00 ; '.'
000000000021a58c         db  0x00 ; '.'
000000000021a58d         db  0x00 ; '.'
000000000021a58e         db  0x00 ; '.'
000000000021a58f         db  0x00 ; '.'
                     ignore_EPIPE:
000000000021a590         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000021a591         db  0x00 ; '.'
000000000021a592         db  0x00 ; '.'
000000000021a593         db  0x00 ; '.'
000000000021a594         db  0x00 ; '.'
000000000021a595         db  0x00 ; '.'
000000000021a596         db  0x00 ; '.'
000000000021a597         db  0x00 ; '.'
                     file_name_21a598:        // file_name
000000000021a598         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000021a599         db  0x00 ; '.'
000000000021a59a         db  0x00 ; '.'
000000000021a59b         db  0x00 ; '.'
000000000021a59c         db  0x00 ; '.'
000000000021a59d         db  0x00 ; '.'
000000000021a59e         db  0x00 ; '.'
000000000021a59f         db  0x00 ; '.'
                     program_name:
000000000021a5a0         db  0x00 ; '.'                                         ; DATA XREF=usage+20, overwrite_ok.isra.12+106, overwrite_ok.isra.12+220, set_program_name+109
000000000021a5a1         db  0x00 ; '.'
000000000021a5a2         db  0x00 ; '.'
000000000021a5a3         db  0x00 ; '.'
000000000021a5a4         db  0x00 ; '.'
000000000021a5a5         db  0x00 ; '.'
000000000021a5a6         db  0x00 ; '.'
000000000021a5a7         db  0x00 ; '.'
000000000021a5a8         db  0x00 ; '.'
000000000021a5a9         db  0x00 ; '.'
000000000021a5aa         db  0x00 ; '.'
000000000021a5ab         db  0x00 ; '.'
000000000021a5ac         db  0x00 ; '.'
000000000021a5ad         db  0x00 ; '.'
000000000021a5ae         db  0x00 ; '.'
000000000021a5af         db  0x00 ; '.'
000000000021a5b0         db  0x00 ; '.'
000000000021a5b1         db  0x00 ; '.'
000000000021a5b2         db  0x00 ; '.'
000000000021a5b3         db  0x00 ; '.'
000000000021a5b4         db  0x00 ; '.'
000000000021a5b5         db  0x00 ; '.'
000000000021a5b6         db  0x00 ; '.'
000000000021a5b7         db  0x00 ; '.'
000000000021a5b8         db  0x00 ; '.'
000000000021a5b9         db  0x00 ; '.'
000000000021a5ba         db  0x00 ; '.'
000000000021a5bb         db  0x00 ; '.'
000000000021a5bc         db  0x00 ; '.'
000000000021a5bd         db  0x00 ; '.'
000000000021a5be         db  0x00 ; '.'
000000000021a5bf         db  0x00 ; '.'
                     slot0:
000000000021a5c0         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000021a5c1         db  0x00 ; '.'
000000000021a5c2         db  0x00 ; '.'
000000000021a5c3         db  0x00 ; '.'
000000000021a5c4         db  0x00 ; '.'
000000000021a5c5         db  0x00 ; '.'
000000000021a5c6         db  0x00 ; '.'
000000000021a5c7         db  0x00 ; '.'
000000000021a5c8         db  0x00 ; '.'
000000000021a5c9         db  0x00 ; '.'
000000000021a5ca         db  0x00 ; '.'
000000000021a5cb         db  0x00 ; '.'
000000000021a5cc         db  0x00 ; '.'
000000000021a5cd         db  0x00 ; '.'
000000000021a5ce         db  0x00 ; '.'
000000000021a5cf         db  0x00 ; '.'
000000000021a5d0         db  0x00 ; '.'
000000000021a5d1         db  0x00 ; '.'
000000000021a5d2         db  0x00 ; '.'
000000000021a5d3         db  0x00 ; '.'
000000000021a5d4         db  0x00 ; '.'
000000000021a5d5         db  0x00 ; '.'
000000000021a5d6         db  0x00 ; '.'
000000000021a5d7         db  0x00 ; '.'
000000000021a5d8         db  0x00 ; '.'
000000000021a5d9         db  0x00 ; '.'
000000000021a5da         db  0x00 ; '.'
000000000021a5db         db  0x00 ; '.'
000000000021a5dc         db  0x00 ; '.'
000000000021a5dd         db  0x00 ; '.'
000000000021a5de         db  0x00 ; '.'
000000000021a5df         db  0x00 ; '.'
000000000021a5e0         db  0x00 ; '.'
000000000021a5e1         db  0x00 ; '.'
000000000021a5e2         db  0x00 ; '.'
000000000021a5e3         db  0x00 ; '.'
000000000021a5e4         db  0x00 ; '.'
000000000021a5e5         db  0x00 ; '.'
000000000021a5e6         db  0x00 ; '.'
000000000021a5e7         db  0x00 ; '.'
000000000021a5e8         db  0x00 ; '.'
000000000021a5e9         db  0x00 ; '.'
000000000021a5ea         db  0x00 ; '.'
000000000021a5eb         db  0x00 ; '.'
000000000021a5ec         db  0x00 ; '.'
000000000021a5ed         db  0x00 ; '.'
000000000021a5ee         db  0x00 ; '.'
000000000021a5ef         db  0x00 ; '.'
000000000021a5f0         db  0x00 ; '.'
000000000021a5f1         db  0x00 ; '.'
000000000021a5f2         db  0x00 ; '.'
000000000021a5f3         db  0x00 ; '.'
000000000021a5f4         db  0x00 ; '.'
000000000021a5f5         db  0x00 ; '.'
000000000021a5f6         db  0x00 ; '.'
000000000021a5f7         db  0x00 ; '.'
000000000021a5f8         db  0x00 ; '.'
000000000021a5f9         db  0x00 ; '.'
000000000021a5fa         db  0x00 ; '.'
000000000021a5fb         db  0x00 ; '.'
000000000021a5fc         db  0x00 ; '.'
000000000021a5fd         db  0x00 ; '.'
000000000021a5fe         db  0x00 ; '.'
000000000021a5ff         db  0x00 ; '.'
000000000021a600         db  0x00 ; '.'
000000000021a601         db  0x00 ; '.'
000000000021a602         db  0x00 ; '.'
000000000021a603         db  0x00 ; '.'
000000000021a604         db  0x00 ; '.'
000000000021a605         db  0x00 ; '.'
000000000021a606         db  0x00 ; '.'
000000000021a607         db  0x00 ; '.'
000000000021a608         db  0x00 ; '.'
000000000021a609         db  0x00 ; '.'
000000000021a60a         db  0x00 ; '.'
000000000021a60b         db  0x00 ; '.'
000000000021a60c         db  0x00 ; '.'
000000000021a60d         db  0x00 ; '.'
000000000021a60e         db  0x00 ; '.'
000000000021a60f         db  0x00 ; '.'
000000000021a610         db  0x00 ; '.'
000000000021a611         db  0x00 ; '.'
000000000021a612         db  0x00 ; '.'
000000000021a613         db  0x00 ; '.'
000000000021a614         db  0x00 ; '.'
000000000021a615         db  0x00 ; '.'
000000000021a616         db  0x00 ; '.'
000000000021a617         db  0x00 ; '.'
000000000021a618         db  0x00 ; '.'
000000000021a619         db  0x00 ; '.'
000000000021a61a         db  0x00 ; '.'
000000000021a61b         db  0x00 ; '.'
000000000021a61c         db  0x00 ; '.'
000000000021a61d         db  0x00 ; '.'
000000000021a61e         db  0x00 ; '.'
000000000021a61f         db  0x00 ; '.'
000000000021a620         db  0x00 ; '.'
000000000021a621         db  0x00 ; '.'
000000000021a622         db  0x00 ; '.'
000000000021a623         db  0x00 ; '.'
000000000021a624         db  0x00 ; '.'
000000000021a625         db  0x00 ; '.'
000000000021a626         db  0x00 ; '.'
000000000021a627         db  0x00 ; '.'
000000000021a628         db  0x00 ; '.'
000000000021a629         db  0x00 ; '.'
000000000021a62a         db  0x00 ; '.'
000000000021a62b         db  0x00 ; '.'
000000000021a62c         db  0x00 ; '.'
000000000021a62d         db  0x00 ; '.'
000000000021a62e         db  0x00 ; '.'
000000000021a62f         db  0x00 ; '.'
000000000021a630         db  0x00 ; '.'
000000000021a631         db  0x00 ; '.'
000000000021a632         db  0x00 ; '.'
000000000021a633         db  0x00 ; '.'
000000000021a634         db  0x00 ; '.'
000000000021a635         db  0x00 ; '.'
000000000021a636         db  0x00 ; '.'
000000000021a637         db  0x00 ; '.'
000000000021a638         db  0x00 ; '.'
000000000021a639         db  0x00 ; '.'
000000000021a63a         db  0x00 ; '.'
000000000021a63b         db  0x00 ; '.'
000000000021a63c         db  0x00 ; '.'
000000000021a63d         db  0x00 ; '.'
000000000021a63e         db  0x00 ; '.'
000000000021a63f         db  0x00 ; '.'
000000000021a640         db  0x00 ; '.'
000000000021a641         db  0x00 ; '.'
000000000021a642         db  0x00 ; '.'
000000000021a643         db  0x00 ; '.'
000000000021a644         db  0x00 ; '.'
000000000021a645         db  0x00 ; '.'
000000000021a646         db  0x00 ; '.'
000000000021a647         db  0x00 ; '.'
000000000021a648         db  0x00 ; '.'
000000000021a649         db  0x00 ; '.'
000000000021a64a         db  0x00 ; '.'
000000000021a64b         db  0x00 ; '.'
000000000021a64c         db  0x00 ; '.'
000000000021a64d         db  0x00 ; '.'
000000000021a64e         db  0x00 ; '.'
000000000021a64f         db  0x00 ; '.'
000000000021a650         db  0x00 ; '.'
000000000021a651         db  0x00 ; '.'
000000000021a652         db  0x00 ; '.'
000000000021a653         db  0x00 ; '.'
000000000021a654         db  0x00 ; '.'
000000000021a655         db  0x00 ; '.'
000000000021a656         db  0x00 ; '.'
000000000021a657         db  0x00 ; '.'
000000000021a658         db  0x00 ; '.'
000000000021a659         db  0x00 ; '.'
000000000021a65a         db  0x00 ; '.'
000000000021a65b         db  0x00 ; '.'
000000000021a65c         db  0x00 ; '.'
000000000021a65d         db  0x00 ; '.'
000000000021a65e         db  0x00 ; '.'
000000000021a65f         db  0x00 ; '.'
000000000021a660         db  0x00 ; '.'
000000000021a661         db  0x00 ; '.'
000000000021a662         db  0x00 ; '.'
000000000021a663         db  0x00 ; '.'
000000000021a664         db  0x00 ; '.'
000000000021a665         db  0x00 ; '.'
000000000021a666         db  0x00 ; '.'
000000000021a667         db  0x00 ; '.'
000000000021a668         db  0x00 ; '.'
000000000021a669         db  0x00 ; '.'
000000000021a66a         db  0x00 ; '.'
000000000021a66b         db  0x00 ; '.'
000000000021a66c         db  0x00 ; '.'
000000000021a66d         db  0x00 ; '.'
000000000021a66e         db  0x00 ; '.'
000000000021a66f         db  0x00 ; '.'
000000000021a670         db  0x00 ; '.'
000000000021a671         db  0x00 ; '.'
000000000021a672         db  0x00 ; '.'
000000000021a673         db  0x00 ; '.'
000000000021a674         db  0x00 ; '.'
000000000021a675         db  0x00 ; '.'
000000000021a676         db  0x00 ; '.'
000000000021a677         db  0x00 ; '.'
000000000021a678         db  0x00 ; '.'
000000000021a679         db  0x00 ; '.'
000000000021a67a         db  0x00 ; '.'
000000000021a67b         db  0x00 ; '.'
000000000021a67c         db  0x00 ; '.'
000000000021a67d         db  0x00 ; '.'
000000000021a67e         db  0x00 ; '.'
000000000021a67f         db  0x00 ; '.'
000000000021a680         db  0x00 ; '.'
000000000021a681         db  0x00 ; '.'
000000000021a682         db  0x00 ; '.'
000000000021a683         db  0x00 ; '.'
000000000021a684         db  0x00 ; '.'
000000000021a685         db  0x00 ; '.'
000000000021a686         db  0x00 ; '.'
000000000021a687         db  0x00 ; '.'
000000000021a688         db  0x00 ; '.'
000000000021a689         db  0x00 ; '.'
000000000021a68a         db  0x00 ; '.'
000000000021a68b         db  0x00 ; '.'
000000000021a68c         db  0x00 ; '.'
000000000021a68d         db  0x00 ; '.'
000000000021a68e         db  0x00 ; '.'
000000000021a68f         db  0x00 ; '.'
000000000021a690         db  0x00 ; '.'
000000000021a691         db  0x00 ; '.'
000000000021a692         db  0x00 ; '.'
000000000021a693         db  0x00 ; '.'
000000000021a694         db  0x00 ; '.'
000000000021a695         db  0x00 ; '.'
000000000021a696         db  0x00 ; '.'
000000000021a697         db  0x00 ; '.'
000000000021a698         db  0x00 ; '.'
000000000021a699         db  0x00 ; '.'
000000000021a69a         db  0x00 ; '.'
000000000021a69b         db  0x00 ; '.'
000000000021a69c         db  0x00 ; '.'
000000000021a69d         db  0x00 ; '.'
000000000021a69e         db  0x00 ; '.'
000000000021a69f         db  0x00 ; '.'
000000000021a6a0         db  0x00 ; '.'
000000000021a6a1         db  0x00 ; '.'
000000000021a6a2         db  0x00 ; '.'
000000000021a6a3         db  0x00 ; '.'
000000000021a6a4         db  0x00 ; '.'
000000000021a6a5         db  0x00 ; '.'
000000000021a6a6         db  0x00 ; '.'
000000000021a6a7         db  0x00 ; '.'
000000000021a6a8         db  0x00 ; '.'
000000000021a6a9         db  0x00 ; '.'
000000000021a6aa         db  0x00 ; '.'
000000000021a6ab         db  0x00 ; '.'
000000000021a6ac         db  0x00 ; '.'
000000000021a6ad         db  0x00 ; '.'
000000000021a6ae         db  0x00 ; '.'
000000000021a6af         db  0x00 ; '.'
000000000021a6b0         db  0x00 ; '.'
000000000021a6b1         db  0x00 ; '.'
000000000021a6b2         db  0x00 ; '.'
000000000021a6b3         db  0x00 ; '.'
000000000021a6b4         db  0x00 ; '.'
000000000021a6b5         db  0x00 ; '.'
000000000021a6b6         db  0x00 ; '.'
000000000021a6b7         db  0x00 ; '.'
000000000021a6b8         db  0x00 ; '.'
000000000021a6b9         db  0x00 ; '.'
000000000021a6ba         db  0x00 ; '.'
000000000021a6bb         db  0x00 ; '.'
000000000021a6bc         db  0x00 ; '.'
000000000021a6bd         db  0x00 ; '.'
000000000021a6be         db  0x00 ; '.'
000000000021a6bf         db  0x00 ; '.'
                     default_quoting_options:
000000000021a6c0         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000021a6c1         db  0x00 ; '.'
000000000021a6c2         db  0x00 ; '.'
000000000021a6c3         db  0x00 ; '.'
000000000021a6c4         db  0x00 ; '.'
000000000021a6c5         db  0x00 ; '.'
000000000021a6c6         db  0x00 ; '.'
000000000021a6c7         db  0x00 ; '.'
000000000021a6c8         db  0x00 ; '.'
000000000021a6c9         db  0x00 ; '.'
000000000021a6ca         db  0x00 ; '.'
000000000021a6cb         db  0x00 ; '.'
000000000021a6cc         db  0x00 ; '.'
000000000021a6cd         db  0x00 ; '.'
000000000021a6ce         db  0x00 ; '.'
000000000021a6cf         db  0x00 ; '.'
000000000021a6d0         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000021a6d1         db  0x00 ; '.'
000000000021a6d2         db  0x00 ; '.'
000000000021a6d3         db  0x00 ; '.'
000000000021a6d4         db  0x00 ; '.'
000000000021a6d5         db  0x00 ; '.'
000000000021a6d6         db  0x00 ; '.'
000000000021a6d7         db  0x00 ; '.'
000000000021a6d8         db  0x00 ; '.'
000000000021a6d9         db  0x00 ; '.'
000000000021a6da         db  0x00 ; '.'
000000000021a6db         db  0x00 ; '.'
000000000021a6dc         db  0x00 ; '.'
000000000021a6dd         db  0x00 ; '.'
000000000021a6de         db  0x00 ; '.'
000000000021a6df         db  0x00 ; '.'
000000000021a6e0         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000021a6e1         db  0x00 ; '.'
000000000021a6e2         db  0x00 ; '.'
000000000021a6e3         db  0x00 ; '.'
000000000021a6e4         db  0x00 ; '.'
000000000021a6e5         db  0x00 ; '.'
000000000021a6e6         db  0x00 ; '.'
000000000021a6e7         db  0x00 ; '.'
000000000021a6e8         db  0x00 ; '.'
000000000021a6e9         db  0x00 ; '.'
000000000021a6ea         db  0x00 ; '.'
000000000021a6eb         db  0x00 ; '.'
000000000021a6ec         db  0x00 ; '.'
000000000021a6ed         db  0x00 ; '.'
000000000021a6ee         db  0x00 ; '.'
000000000021a6ef         db  0x00 ; '.'
                     qword_21a6f0:
000000000021a6f0         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000021a6f1         db  0x00 ; '.'
000000000021a6f2         db  0x00 ; '.'
000000000021a6f3         db  0x00 ; '.'
000000000021a6f4         db  0x00 ; '.'
000000000021a6f5         db  0x00 ; '.'
000000000021a6f6         db  0x00 ; '.'
000000000021a6f7         db  0x00 ; '.'
                     new_dst_res.5308:
000000000021a6f8         db  0x00 ; '.'                                         ; DATA XREF=utimecmpat+153, utimecmpat+228, utimecmpat+420, utimecmpat+1680
000000000021a6f9         db  0x00 ; '.'
000000000021a6fa         db  0x00 ; '.'
000000000021a6fb         db  0x00 ; '.'
000000000021a6fc         db  0x00 ; '.'
000000000021a6fd         db  0x00 ; '.'
000000000021a6fe         db  0x00 ; '.'
000000000021a6ff         db  0x00 ; '.'
                     ht.5307:
000000000021a700         db  0x00 ; '.'                                         ; DATA XREF=utimecmpat+134, utimecmpat+472, utimecmpat+1638
000000000021a701         db  0x00 ; '.'
000000000021a702         db  0x00 ; '.'
000000000021a703         db  0x00 ; '.'
000000000021a704         db  0x00 ; '.'
000000000021a705         db  0x00 ; '.'
000000000021a706         db  0x00 ; '.'
000000000021a707         db  0x00 ; '.'
                     lutimensat_works_really:
000000000021a708         db  0x00 ; '.'                                         ; DATA XREF=fdutimens+181, lutimens+86, lutimens+152, lutimens+288, lutimens+315, lutimens+384
000000000021a709         db  0x00 ; '.'
000000000021a70a         db  0x00 ; '.'
000000000021a70b         db  0x00 ; '.'
                     utimensat_works_really:
000000000021a70c         db  0x00 ; '.'                                         ; DATA XREF=fdutimens+106, fdutimens+171, fdutimens+975, lutimens+374
000000000021a70d         db  0x00 ; '.'
000000000021a70e         db  0x00 ; '.'
000000000021a70f         db  0x00 ; '.'
                     can_write.3065:
000000000021a710         db  0x00 ; '.'                                         ; DATA XREF=can_write_any_file+9, can_write_any_file+45
                     initialized.3064:
000000000021a711         db  0x00 ; '.'                                         ; DATA XREF=can_write_any_file, can_write_any_file+35
000000000021a712         db  0x00 ; '.'
000000000021a713         db  0x00 ; '.'
                     have_dupfd_cloexec.3326:
000000000021a714         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+94, rpl_fcntl+143, rpl_fcntl+438, rpl_fcntl+574
000000000021a715         db  0x00 ; '.'
000000000021a716         db  0x00 ; '.'
000000000021a717         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x21a720; 0x21ae50[ (1840 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x21a720; 0x435570[ (2207312 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     getenv:
000000000021a720         extern function code                                   ; DATA XREF=getenv@GOT
                     free:
000000000021a728         extern function code
                     utimensat:
000000000021a730         extern function code                                   ; DATA XREF=utimensat@GOT
                     abort:
000000000021a738         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000021a740         extern function code                                   ; DATA XREF=__errno_location@GOT
                     unlink:
000000000021a748         extern function code                                   ; DATA XREF=unlink@GOT
                     strncmp:
000000000021a750         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000021a758         extern function code
                     _exit:
000000000021a760         extern function code                                   ; DATA XREF=_exit@GOT
                     strcpy:
000000000021a768         extern function code                                   ; DATA XREF=strcpy@GOT
                     __fpending:
000000000021a770         extern function code                                   ; DATA XREF=__fpending@GOT
                     __read_chk:
000000000021a778         extern function code                                   ; DATA XREF=__read_chk@GOT
                     mkdir:
000000000021a780         extern function code                                   ; DATA XREF=mkdir@GOT
                     unlinkat:
000000000021a788         extern function code                                   ; DATA XREF=unlinkat@GOT
                     qsort:
000000000021a790         extern function code                                   ; DATA XREF=qsort@GOT
                     readlink:
000000000021a798         extern function code                                   ; DATA XREF=readlink@GOT
                     fcntl:
000000000021a7a0         extern function code                                   ; DATA XREF=fcntl@GOT
                     clock_gettime:
000000000021a7a8         extern function code                                   ; DATA XREF=clock_gettime@GOT
                     write:
000000000021a7b0         extern function code                                   ; DATA XREF=write@GOT
                     getpid:
000000000021a7b8         extern function code                                   ; DATA XREF=getpid@GOT
                     fread_unlocked:
000000000021a7c0         extern function code                                   ; DATA XREF=fread_unlocked@GOT
                     textdomain:
000000000021a7c8         extern function code                                   ; DATA XREF=textdomain@GOT
                     pathconf:
000000000021a7d0         extern function code                                   ; DATA XREF=pathconf@GOT
                     fclose:
000000000021a7d8         extern function code                                   ; DATA XREF=fclose@GOT
                     opendir:
000000000021a7e0         extern function code                                   ; DATA XREF=opendir@GOT
                     bindtextdomain:
000000000021a7e8         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     stpcpy:
000000000021a7f0         extern function code                                   ; DATA XREF=stpcpy@GOT
                     rmdir:
000000000021a7f8         extern function code                                   ; DATA XREF=rmdir@GOT
                     dcgettext:
000000000021a800         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000021a808         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000021a810         extern function code                                   ; DATA XREF=strlen@GOT
                     __lxstat:
000000000021a818         extern function code                                   ; DATA XREF=__lxstat@GOT
                     openat:
000000000021a820         extern function code                                   ; DATA XREF=openat@GOT
                     __stack_chk_fail:
000000000021a828         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getuid:
000000000021a830         extern function code                                   ; DATA XREF=getuid@GOT
                     getopt_long:
000000000021a838         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000021a840         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
000000000021a848         extern function code                                   ; DATA XREF=strchr@GOT
                     __fxstatat:
000000000021a850         extern function code                                   ; DATA XREF=__fxstatat@GOT
                     __overflow:
000000000021a858         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
000000000021a860         extern function code                                   ; DATA XREF=strrchr@GOT
                     ftruncate:
000000000021a868         extern function code                                   ; DATA XREF=ftruncate@GOT
                     lseek:
000000000021a870         extern function code                                   ; DATA XREF=lseek@GOT
                     gettimeofday:
000000000021a878         extern function code                                   ; DATA XREF=gettimeofday@GOT
                     __assert_fail:
000000000021a880         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
000000000021a888         extern function code                                   ; DATA XREF=memset@GOT
                     geteuid:
000000000021a890         extern function code                                   ; DATA XREF=geteuid@GOT
                     ioctl:
000000000021a898         extern function code                                   ; DATA XREF=ioctl@GOT
                     canonicalize_file_name:
000000000021a8a0         extern function code                                   ; DATA XREF=canonicalize_file_name@GOT
                     close:
000000000021a8a8         extern function code                                   ; DATA XREF=close@GOT
                     rewinddir:
000000000021a8b0         extern function code                                   ; DATA XREF=rewinddir@GOT
                     strspn:
000000000021a8b8         extern function code                                   ; DATA XREF=strspn@GOT
                     closedir:
000000000021a8c0         extern function code                                   ; DATA XREF=closedir@GOT
                     posix_fadvise:
000000000021a8c8         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     read:
000000000021a8d0         extern function code                                   ; DATA XREF=read@GOT
                     __libc_start_main:
000000000021a8d8         extern function code
                     memcmp:
000000000021a8e0         extern function code                                   ; DATA XREF=memcmp@GOT
                     fallocate:
000000000021a8e8         extern function code                                   ; DATA XREF=fallocate@GOT
                     fputs_unlocked:
000000000021a8f0         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     utimes:
000000000021a8f8         extern function code                                   ; DATA XREF=utimes@GOT
                     calloc:
000000000021a900         extern function code                                   ; DATA XREF=calloc@GOT
                     __getdelim:
000000000021a908         extern function code                                   ; DATA XREF=__getdelim@GOT
                     strcmp:
000000000021a910         extern function code                                   ; DATA XREF=strcmp@GOT
                     dirfd:
000000000021a918         extern function code                                   ; DATA XREF=dirfd@GOT
                     fpathconf:
000000000021a920         extern function code                                   ; DATA XREF=fpathconf@GOT
                     rpmatch:
000000000021a928         extern function code                                   ; DATA XREF=rpmatch@GOT
                     syscall:
000000000021a930         extern function code                                   ; DATA XREF=syscall@GOT
                     mkfifo:
000000000021a938         extern function code                                   ; DATA XREF=mkfifo@GOT
                     __gmon_start__:
000000000021a940         extern function code
                     umask:
000000000021a948         extern function code                                   ; DATA XREF=umask@GOT
                     memcpy:
000000000021a950         extern function code                                   ; DATA XREF=memcpy@GOT
                     __xmknod:
000000000021a958         extern function code                                   ; DATA XREF=__xmknod@GOT
                     fileno:
000000000021a960         extern function code                                   ; DATA XREF=fileno@GOT
                     getgid:
000000000021a968         extern function code                                   ; DATA XREF=getgid@GOT
                     __xstat:
000000000021a970         extern function code                                   ; DATA XREF=__xstat@GOT
                     readdir:
000000000021a978         extern function code                                   ; DATA XREF=readdir@GOT
                     malloc:
000000000021a980         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000021a988         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000021a990         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __fxstat:
000000000021a998         extern function code                                   ; DATA XREF=__fxstat@GOT
                     lchown:
000000000021a9a0         extern function code                                   ; DATA XREF=lchown@GOT
                     __freading:
000000000021a9a8         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
000000000021a9b0         extern function code                                   ; DATA XREF=realloc@GOT
                     fdopen:
000000000021a9b8         extern function code                                   ; DATA XREF=fdopen@GOT
                     linkat:
000000000021a9c0         extern function code                                   ; DATA XREF=linkat@GOT
                     setlocale:
000000000021a9c8         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000021a9d0         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     fchmod:
000000000021a9d8         extern function code                                   ; DATA XREF=fchmod@GOT
                     setvbuf:
000000000021a9e0         extern function code                                   ; DATA XREF=setvbuf@GOT
                     chmod:
000000000021a9e8         extern function code                                   ; DATA XREF=chmod@GOT
                     mempcpy:
000000000021a9f0         extern function code                                   ; DATA XREF=mempcpy@GOT
                     error:
000000000021a9f8         extern function code                                   ; DATA XREF=error@GOT
                     __explicit_bzero_chk:
000000000021aa00         extern function code                                   ; DATA XREF=__explicit_bzero_chk@GOT
                     open:
000000000021aa08         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
000000000021aa10         extern function code                                   ; DATA XREF=fseeko@GOT
                     fchown:
000000000021aa18         extern function code                                   ; DATA XREF=fchown@GOT
                     fopen:
000000000021aa20         extern function code                                   ; DATA XREF=fopen@GOT
                     rename:
000000000021aa28         extern function code                                   ; DATA XREF=rename@GOT
                     fdopendir:
000000000021aa30         extern function code                                   ; DATA XREF=fdopendir@GOT
                     futimens:
000000000021aa38         extern function code                                   ; DATA XREF=futimens@GOT
                     euidaccess:
000000000021aa40         extern function code                                   ; DATA XREF=euidaccess@GOT
                     __cxa_atexit:
000000000021aa48         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     renameat:
000000000021aa50         extern function code                                   ; DATA XREF=renameat@GOT
                     getpagesize:
000000000021aa58         extern function code                                   ; DATA XREF=getpagesize@GOT
                     getppid:
000000000021aa60         extern function code                                   ; DATA XREF=getppid@GOT
                     exit:
000000000021aa68         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000021aa70         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000021aa78         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000021aa80         extern function code
                     mbsinit:
000000000021aa88         extern function code                                   ; DATA XREF=mbsinit@GOT
                     symlinkat:
000000000021aa90         extern function code                                   ; DATA XREF=symlinkat@GOT
                     iswprint:
000000000021aa98         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000021aaa0         extern function code
                     futimesat:
000000000021aaa8         extern function code                                   ; DATA XREF=futimesat@GOT
                     __ctype_b_loc:
000000000021aab0         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     getenv@@GLIBC_2.2.5:
000000000021aab8         extern function code
                     free@@GLIBC_2.2.5:
000000000021aac0         extern function code
                     utimensat@@GLIBC_2.6:
000000000021aac8         extern function code
                     abort@@GLIBC_2.2.5:
000000000021aad0         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000021aad8         extern function code
                     unlink@@GLIBC_2.2.5:
000000000021aae0         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000021aae8         extern function code
                     _ITM_deregisterTMCloneTable_21aaf0:        // _ITM_deregisterTMCloneTable
000000000021aaf0         extern function code
                     _exit@@GLIBC_2.2.5:
000000000021aaf8         extern function code
                     strcpy@@GLIBC_2.2.5:
000000000021ab00         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000021ab08         extern function code
                     __read_chk@@GLIBC_2.4:
000000000021ab10         extern function code
                     mkdir@@GLIBC_2.2.5:
000000000021ab18         extern function code
                     unlinkat@@GLIBC_2.4:
000000000021ab20         extern function code
                     qsort@@GLIBC_2.2.5:
000000000021ab28         extern function code
                     readlink@@GLIBC_2.2.5:
000000000021ab30         extern function code
                     fcntl@@GLIBC_2.2.5:
000000000021ab38         extern function code
                     clock_gettime@@GLIBC_2.17:
000000000021ab40         extern function code
                     write@@GLIBC_2.2.5:
000000000021ab48         extern function code
                     getpid@@GLIBC_2.2.5:
000000000021ab50         extern function code
                     fread_unlocked@@GLIBC_2.2.5:
000000000021ab58         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000021ab60         extern function code
                     pathconf@@GLIBC_2.2.5:
000000000021ab68         extern function code
                     fclose@@GLIBC_2.2.5:
000000000021ab70         extern function code
                     opendir@@GLIBC_2.2.5:
000000000021ab78         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000021ab80         extern function code
                     stpcpy@@GLIBC_2.2.5:
000000000021ab88         extern function code
                     rmdir@@GLIBC_2.2.5:
000000000021ab90         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000021ab98         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000021aba0         extern function code
                     strlen@@GLIBC_2.2.5:
000000000021aba8         extern function code
                     __lxstat@@GLIBC_2.2.5:
000000000021abb0         extern function code
                     openat@@GLIBC_2.4:
000000000021abb8         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000021abc0         extern function code
                     getuid@@GLIBC_2.2.5:
000000000021abc8         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000021abd0         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000021abd8         extern function code
                     strchr@@GLIBC_2.2.5:
000000000021abe0         extern function code
                     __fxstatat@@GLIBC_2.4:
000000000021abe8         extern function code
                     __overflow@@GLIBC_2.2.5:
000000000021abf0         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000021abf8         extern function code
                     ftruncate@@GLIBC_2.2.5:
000000000021ac00         extern function code
                     lseek@@GLIBC_2.2.5:
000000000021ac08         extern function code
                     gettimeofday@@GLIBC_2.2.5:
000000000021ac10         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000021ac18         extern function code
                     memset@@GLIBC_2.2.5:
000000000021ac20         extern function code
                     geteuid@@GLIBC_2.2.5:
000000000021ac28         extern function code
                     ioctl@@GLIBC_2.2.5:
000000000021ac30         extern function code
                     canonicalize_file_name@@GLIBC_2.2.5:
000000000021ac38         extern function code
                     close@@GLIBC_2.2.5:
000000000021ac40         extern function code
                     rewinddir@@GLIBC_2.2.5:
000000000021ac48         extern function code
                     strspn@@GLIBC_2.2.5:
000000000021ac50         extern function code
                     closedir@@GLIBC_2.2.5:
000000000021ac58         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
000000000021ac60         extern function code
                     read@@GLIBC_2.2.5:
000000000021ac68         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000021ac70         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000021ac78         extern function code
                     fallocate@@GLIBC_2.10:
000000000021ac80         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000021ac88         extern function code
                     utimes@@GLIBC_2.2.5:
000000000021ac90         extern function code
                     calloc@@GLIBC_2.2.5:
000000000021ac98         extern function code
                     __getdelim@@GLIBC_2.2.5:
000000000021aca0         extern function code
                     strcmp@@GLIBC_2.2.5:
000000000021aca8         extern function code
                     dirfd@@GLIBC_2.2.5:
000000000021acb0         extern function code
                     fpathconf@@GLIBC_2.2.5:
000000000021acb8         extern function code
                     rpmatch@@GLIBC_2.2.5:
000000000021acc0         extern function code
                     syscall@@GLIBC_2.2.5:
000000000021acc8         extern function code
                     mkfifo@@GLIBC_2.2.5:
000000000021acd0         extern function code
                     __gmon_start___21acd8:        // __gmon_start__
000000000021acd8         extern function code
                     umask@@GLIBC_2.2.5:
000000000021ace0         extern function code
                     memcpy@@GLIBC_2.14:
000000000021ace8         extern function code
                     __xmknod@@GLIBC_2.2.5:
000000000021acf0         extern function code
                     fileno@@GLIBC_2.2.5:
000000000021acf8         extern function code
                     getgid@@GLIBC_2.2.5:
000000000021ad00         extern function code
                     __xstat@@GLIBC_2.2.5:
000000000021ad08         extern function code
                     readdir@@GLIBC_2.2.5:
000000000021ad10         extern function code
                     malloc@@GLIBC_2.2.5:
000000000021ad18         extern function code
                     fflush@@GLIBC_2.2.5:
000000000021ad20         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000021ad28         extern function code
                     __fxstat@@GLIBC_2.2.5:
000000000021ad30         extern function code
                     lchown@@GLIBC_2.2.5:
000000000021ad38         extern function code
                     __freading@@GLIBC_2.2.5:
000000000021ad40         extern function code
                     realloc@@GLIBC_2.2.5:
000000000021ad48         extern function code
                     fdopen@@GLIBC_2.2.5:
000000000021ad50         extern function code
                     linkat@@GLIBC_2.4:
000000000021ad58         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000021ad60         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000021ad68         extern function code
                     fchmod@@GLIBC_2.2.5:
000000000021ad70         extern function code
                     setvbuf@@GLIBC_2.2.5:
000000000021ad78         extern function code
                     chmod@@GLIBC_2.2.5:
000000000021ad80         extern function code
                     mempcpy@@GLIBC_2.2.5:
000000000021ad88         extern function code
                     error@@GLIBC_2.2.5:
000000000021ad90         extern function code
                     __explicit_bzero_chk@@GLIBC_2.25:
000000000021ad98         extern function code
                     open@@GLIBC_2.2.5:
000000000021ada0         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000021ada8         extern function code
                     fchown@@GLIBC_2.2.5:
000000000021adb0         extern function code
                     fopen@@GLIBC_2.2.5:
000000000021adb8         extern function code
                     rename@@GLIBC_2.2.5:
000000000021adc0         extern function code
                     fdopendir@@GLIBC_2.4:
000000000021adc8         extern function code
                     futimens@@GLIBC_2.6:
000000000021add0         extern function code
                     euidaccess@@GLIBC_2.2.5:
000000000021add8         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000021ade0         extern function code
                     renameat@@GLIBC_2.4:
000000000021ade8         extern function code
                     getpagesize@@GLIBC_2.2.5:
000000000021adf0         extern function code
                     getppid@@GLIBC_2.2.5:
000000000021adf8         extern function code
                     exit@@GLIBC_2.2.5:
000000000021ae00         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000021ae08         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000021ae10         extern function code
                     _ITM_registerTMCloneTable_21ae18:        // _ITM_registerTMCloneTable
000000000021ae18         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000021ae20         extern function code
                     symlinkat@@GLIBC_2.4:
000000000021ae28         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000021ae30         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000021ae38         extern function code
                     futimesat@@GLIBC_2.4:
000000000021ae40         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000021ae48         extern function code
