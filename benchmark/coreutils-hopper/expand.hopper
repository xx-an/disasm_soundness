
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/expand
        UUID: 8CE83998-5A21-6048-442D-460178E1A72F
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x7328[ (29480 bytes)
        ; File offset : [0; 29480[ (29480 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0xf0 ; '.'
0000000000000019         db  0x1a ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0xd0 ; '.'
0000000000000029         db  0x76 ; 'v'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x28 ; '('
00000000000000d1         db  0x73 ; 's'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x28 ; '('
00000000000000d9         db  0x73 ; 's'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x50 ; 'P'
00000000000000f1         db  0x7b ; '{'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x50 ; 'P'
00000000000000f9         db  0x7b ; '{'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x50 ; 'P'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x7b ; '{'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x50 ; 'P'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x50 ; 'P'
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x58 ; 'X'
0000000000000129         db  0x7c ; '|'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x58 ; 'X'
0000000000000131         db  0x7c ; '|'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x58 ; 'X'
0000000000000139         db  0x7c ; '|'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'                                         ; DATA XREF=next_file+503
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xf0 ; '.'
0000000000000199         db  0x63 ; 'c'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xf0 ; '.'
00000000000001a1         db  0x63 ; 'c'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xf0 ; '.'
00000000000001a9         db  0x63 ; 'c'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xa4 ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xa4 ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x50 ; 'P'
0000000000000209         db  0x7b ; '{'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x50 ; 'P'
0000000000000211         db  0x7b ; '{'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x50 ; 'P'
0000000000000219         db  0x7b ; '{'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xb0 ; '.'
0000000000000221         db  0x04 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xb0 ; '.'
0000000000000229         db  0x04 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x8c ; '.'
0000000000000285         db  0xe8 ; '.'
0000000000000286         db  0x39 ; '9'
0000000000000287         db  0x98 ; '.'
0000000000000288         db  0x5a ; 'Z'
0000000000000289         db  0x21 ; '!'
000000000000028a         db  0x60 ; '`'
000000000000028b         db  0x48 ; 'H'
000000000000028c         db  0x44 ; 'D'
000000000000028d         db  0x2d ; '-'
000000000000028e         db  0x46 ; 'F'
000000000000028f         db  0x01 ; '.'
0000000000000290         db  0x78 ; 'x'
0000000000000291         db  0xe1 ; '.'
0000000000000292         db  0xa7 ; '.'
0000000000000293         db  0x2f ; '/'
0000000000000294         db  0x14 ; '.'
0000000000000295         db  0xf4 ; '.'
0000000000000296         db  0xdf ; '.'
0000000000000297         db  0x23 ; '#'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x35 ; '5'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x35 ; '5'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x36 ; '6'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3c ; '<'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x32 ; '2'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0xb3 ; '.'
00000000000002dd         db  0xa2 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x8b0[ (1488 bytes)
        ; File offset : [736; 2224[ (1488 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x63 ; 'c'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x32 ; '2'
0000000000000311         db  0x02 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x92 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x0b ; '.'
0000000000000341         db  0x01 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x49 ; 'I'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x96 ; '.'
0000000000000371         db  0x02 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x20 ; ' '
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x9e ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xb8 ; '.'
00000000000003a1         db  0x01 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x1f ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0xf4 ; '.'
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x4d ; 'M'
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0xf0 ; '.'
0000000000000401         db  0x01 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x60 ; '`'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xd1 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0xfd ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x70 ; 'p'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x9e ; '.'
0000000000000479         db  0x01 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x3b ; ';'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x18 ; '.'
00000000000004a9         db  0x02 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x58 ; 'X'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x40 ; '@'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0xc3 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x04 ; '.'
0000000000000509         db  0x01 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0xa4 ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xe8 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x23 ; '#'
0000000000000551         db  0x01 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0xff ; '.'
0000000000000569         db  0x01 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x1c ; '.'
0000000000000581         db  0x01 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x23 ; '#'
0000000000000599         db  0x02 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0xf6 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0xb2 ; '.'
00000000000005c9         db  0x02 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x20 ; ' '
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x46 ; 'F'
00000000000005e1         db  0x01 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0xaa ; '.'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x54 ; 'T'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x0b ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x6b ; 'k'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x8c ; '.'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x8a ; '.'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x31 ; '1'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x12 ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x6a ; 'j'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x11 ; '.'
00000000000006d1         db  0x02 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x43 ; 'C'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x52 ; 'R'
0000000000000701         db  0x02 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x9f ; '.'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0xb1 ; '.'
0000000000000731         db  0x01 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x2b ; '+'
0000000000000749         db  0x01 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0xc1 ; '.'
0000000000000761         db  0x02 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x20 ; ' '
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x5b ; '['
0000000000000779         db  0x01 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x81 ; '.'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0xe1 ; '.'
00000000000007a9         db  0x01 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x22 ; '"'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x77 ; 'w'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x39 ; '9'
00000000000007d9         db  0x01 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x11 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x19 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0xa8 ; '.'
00000000000007e1         db  0x80 ; '.'
00000000000007e2         db  0x20 ; ' '
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x08 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x37 ; '7'
00000000000007f1         db  0x02 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x11 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x19 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0xa0 ; '.'
00000000000007f9         db  0x80 ; '.'
00000000000007fa         db  0x20 ; ' '
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x08 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x98 ; '.'
0000000000000809         db  0x00 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x11 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x19 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0xb0 ; '.'
0000000000000811         db  0x80 ; '.'
0000000000000812         db  0x20 ; ' '
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x08 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0xab ; '.'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x21 ; '!'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x19 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0xc8 ; '.'
0000000000000829         db  0x80 ; '.'
000000000000082a         db  0x20 ; ' '
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x08 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x42 ; 'B'
0000000000000839         db  0x02 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x11 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x19 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0xc8 ; '.'
0000000000000841         db  0x80 ; '.'
0000000000000842         db  0x20 ; ' '
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x08 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0xc3 ; '.'
0000000000000851         db  0x01 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x21 ; '!'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0xa0 ; '.'
0000000000000859         db  0x80 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x08 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x97 ; '.'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x11 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x19 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0xe0 ; '.'
0000000000000871         db  0x80 ; '.'
0000000000000872         db  0x20 ; ' '
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x08 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x51 ; 'Q'
0000000000000881         db  0x00 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x11 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x19 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0xb8 ; '.'
0000000000000889         db  0x80 ; '.'
000000000000088a         db  0x20 ; ' '
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x04 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x85 ; '.'
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x11 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0xc0 ; '.'
00000000000008a1         db  0x80 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x08 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x8b0; 0xb8b[ (731 bytes)
        ; File offset : [2224; 2955[ (731 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

00000000000008b0         db  0x00 ; '.'
00000000000008b1         db  0x6c ; 'l'
00000000000008b2         db  0x69 ; 'i'
00000000000008b3         db  0x62 ; 'b'
00000000000008b4         db  0x63 ; 'c'
00000000000008b5         db  0x2e ; '.'
00000000000008b6         db  0x73 ; 's'
00000000000008b7         db  0x6f ; 'o'
00000000000008b8         db  0x2e ; '.'
00000000000008b9         db  0x36 ; '6'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x66 ; 'f'
00000000000008bc         db  0x66 ; 'f'
00000000000008bd         db  0x6c ; 'l'
00000000000008be         db  0x75 ; 'u'
00000000000008bf         db  0x73 ; 's'
00000000000008c0         db  0x68 ; 'h'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x5f ; '_'
00000000000008c3         db  0x5f ; '_'
00000000000008c4         db  0x70 ; 'p'
00000000000008c5         db  0x72 ; 'r'
00000000000008c6         db  0x69 ; 'i'
00000000000008c7         db  0x6e ; 'n'
00000000000008c8         db  0x74 ; 't'
00000000000008c9         db  0x66 ; 'f'
00000000000008ca         db  0x5f ; '_'
00000000000008cb         db  0x63 ; 'c'
00000000000008cc         db  0x68 ; 'h'
00000000000008cd         db  0x6b ; 'k'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x63 ; 'c'
00000000000008d0         db  0x6c ; 'l'
00000000000008d1         db  0x65 ; 'e'
00000000000008d2         db  0x61 ; 'a'
00000000000008d3         db  0x72 ; 'r'
00000000000008d4         db  0x65 ; 'e'
00000000000008d5         db  0x72 ; 'r'
00000000000008d6         db  0x72 ; 'r'
00000000000008d7         db  0x5f ; '_'
00000000000008d8         db  0x75 ; 'u'
00000000000008d9         db  0x6e ; 'n'
00000000000008da         db  0x6c ; 'l'
00000000000008db         db  0x6f ; 'o'
00000000000008dc         db  0x63 ; 'c'
00000000000008dd         db  0x6b ; 'k'
00000000000008de         db  0x65 ; 'e'
00000000000008df         db  0x64 ; 'd'
00000000000008e0         db  0x00 ; '.'
00000000000008e1         db  0x73 ; 's'
00000000000008e2         db  0x65 ; 'e'
00000000000008e3         db  0x74 ; 't'
00000000000008e4         db  0x6c ; 'l'
00000000000008e5         db  0x6f ; 'o'
00000000000008e6         db  0x63 ; 'c'
00000000000008e7         db  0x61 ; 'a'
00000000000008e8         db  0x6c ; 'l'
00000000000008e9         db  0x65 ; 'e'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x6d ; 'm'
00000000000008ec         db  0x62 ; 'b'
00000000000008ed         db  0x72 ; 'r'
00000000000008ee         db  0x74 ; 't'
00000000000008ef         db  0x6f ; 'o'
00000000000008f0         db  0x77 ; 'w'
00000000000008f1         db  0x63 ; 'c'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x66 ; 'f'
00000000000008f4         db  0x6f ; 'o'
00000000000008f5         db  0x70 ; 'p'
00000000000008f6         db  0x65 ; 'e'
00000000000008f7         db  0x6e ; 'n'
00000000000008f8         db  0x00 ; '.'
00000000000008f9         db  0x73 ; 's'
00000000000008fa         db  0x74 ; 't'
00000000000008fb         db  0x72 ; 'r'
00000000000008fc         db  0x6e ; 'n'
00000000000008fd         db  0x63 ; 'c'
00000000000008fe         db  0x6d ; 'm'
00000000000008ff         db  0x70 ; 'p'
0000000000000900         db  0x00 ; '.'
0000000000000901         db  0x6f ; 'o'
0000000000000902         db  0x70 ; 'p'
0000000000000903         db  0x74 ; 't'
0000000000000904         db  0x69 ; 'i'
0000000000000905         db  0x6e ; 'n'
0000000000000906         db  0x64 ; 'd'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x73 ; 's'
0000000000000909         db  0x74 ; 't'
000000000000090a         db  0x72 ; 'r'
000000000000090b         db  0x72 ; 'r'
000000000000090c         db  0x63 ; 'c'
000000000000090d         db  0x68 ; 'h'
000000000000090e         db  0x72 ; 'r'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x64 ; 'd'
0000000000000911         db  0x63 ; 'c'
0000000000000912         db  0x67 ; 'g'
0000000000000913         db  0x65 ; 'e'
0000000000000914         db  0x74 ; 't'
0000000000000915         db  0x74 ; 't'
0000000000000916         db  0x65 ; 'e'
0000000000000917         db  0x78 ; 'x'
0000000000000918         db  0x74 ; 't'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x65 ; 'e'
000000000000091b         db  0x72 ; 'r'
000000000000091c         db  0x72 ; 'r'
000000000000091d         db  0x6f ; 'o'
000000000000091e         db  0x72 ; 'r'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x5f ; '_'
0000000000000921         db  0x5f ; '_'
0000000000000922         db  0x73 ; 's'
0000000000000923         db  0x74 ; 't'
0000000000000924         db  0x61 ; 'a'
0000000000000925         db  0x63 ; 'c'
0000000000000926         db  0x6b ; 'k'
0000000000000927         db  0x5f ; '_'
0000000000000928         db  0x63 ; 'c'
0000000000000929         db  0x68 ; 'h'
000000000000092a         db  0x6b ; 'k'
000000000000092b         db  0x5f ; '_'
000000000000092c         db  0x66 ; 'f'
000000000000092d         db  0x61 ; 'a'
000000000000092e         db  0x69 ; 'i'
000000000000092f         db  0x6c ; 'l'
0000000000000930         db  0x00 ; '.'
0000000000000931         db  0x69 ; 'i'
0000000000000932         db  0x73 ; 's'
0000000000000933         db  0x77 ; 'w'
0000000000000934         db  0x70 ; 'p'
0000000000000935         db  0x72 ; 'r'
0000000000000936         db  0x69 ; 'i'
0000000000000937         db  0x6e ; 'n'
0000000000000938         db  0x74 ; 't'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x72 ; 'r'
000000000000093b         db  0x65 ; 'e'
000000000000093c         db  0x61 ; 'a'
000000000000093d         db  0x6c ; 'l'
000000000000093e         db  0x6c ; 'l'
000000000000093f         db  0x6f ; 'o'
0000000000000940         db  0x63 ; 'c'
0000000000000941         db  0x00 ; '.'
0000000000000942         db  0x61 ; 'a'
0000000000000943         db  0x62 ; 'b'
0000000000000944         db  0x6f ; 'o'
0000000000000945         db  0x72 ; 'r'
0000000000000946         db  0x74 ; 't'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x73 ; 's'
0000000000000949         db  0x74 ; 't'
000000000000094a         db  0x64 ; 'd'
000000000000094b         db  0x69 ; 'i'
000000000000094c         db  0x6e ; 'n'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x5f ; '_'
000000000000094f         db  0x65 ; 'e'
0000000000000950         db  0x78 ; 'x'
0000000000000951         db  0x69 ; 'i'
0000000000000952         db  0x74 ; 't'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x73 ; 's'
0000000000000955         db  0x74 ; 't'
0000000000000956         db  0x72 ; 'r'
0000000000000957         db  0x73 ; 's'
0000000000000958         db  0x70 ; 'p'
0000000000000959         db  0x6e ; 'n'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x70 ; 'p'
000000000000095c         db  0x72 ; 'r'
000000000000095d         db  0x6f ; 'o'
000000000000095e         db  0x67 ; 'g'
000000000000095f         db  0x72 ; 'r'
0000000000000960         db  0x61 ; 'a'
0000000000000961         db  0x6d ; 'm'
0000000000000962         db  0x5f ; '_'
0000000000000963         db  0x69 ; 'i'
0000000000000964         db  0x6e ; 'n'
0000000000000965         db  0x76 ; 'v'
0000000000000966         db  0x6f ; 'o'
0000000000000967         db  0x63 ; 'c'
0000000000000968         db  0x61 ; 'a'
0000000000000969         db  0x74 ; 't'
000000000000096a         db  0x69 ; 'i'
000000000000096b         db  0x6f ; 'o'
000000000000096c         db  0x6e ; 'n'
000000000000096d         db  0x5f ; '_'
000000000000096e         db  0x6e ; 'n'
000000000000096f         db  0x61 ; 'a'
0000000000000970         db  0x6d ; 'm'
0000000000000971         db  0x65 ; 'e'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x5f ; '_'
0000000000000974         db  0x5f ; '_'
0000000000000975         db  0x61 ; 'a'
0000000000000976         db  0x73 ; 's'
0000000000000977         db  0x73 ; 's'
0000000000000978         db  0x65 ; 'e'
0000000000000979         db  0x72 ; 'r'
000000000000097a         db  0x74 ; 't'
000000000000097b         db  0x5f ; '_'
000000000000097c         db  0x66 ; 'f'
000000000000097d         db  0x61 ; 'a'
000000000000097e         db  0x69 ; 'i'
000000000000097f         db  0x6c ; 'l'
0000000000000980         db  0x00 ; '.'
0000000000000981         db  0x5f ; '_'
0000000000000982         db  0x5f ; '_'
0000000000000983         db  0x63 ; 'c'
0000000000000984         db  0x74 ; 't'
0000000000000985         db  0x79 ; 'y'
0000000000000986         db  0x70 ; 'p'
0000000000000987         db  0x65 ; 'e'
0000000000000988         db  0x5f ; '_'
0000000000000989         db  0x67 ; 'g'
000000000000098a         db  0x65 ; 'e'
000000000000098b         db  0x74 ; 't'
000000000000098c         db  0x5f ; '_'
000000000000098d         db  0x6d ; 'm'
000000000000098e         db  0x62 ; 'b'
000000000000098f         db  0x5f ; '_'
0000000000000990         db  0x63 ; 'c'
0000000000000991         db  0x75 ; 'u'
0000000000000992         db  0x72 ; 'r'
0000000000000993         db  0x5f ; '_'
0000000000000994         db  0x6d ; 'm'
0000000000000995         db  0x61 ; 'a'
0000000000000996         db  0x78 ; 'x'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x70 ; 'p'
0000000000000999         db  0x6f ; 'o'
000000000000099a         db  0x73 ; 's'
000000000000099b         db  0x69 ; 'i'
000000000000099c         db  0x78 ; 'x'
000000000000099d         db  0x5f ; '_'
000000000000099e         db  0x66 ; 'f'
000000000000099f         db  0x61 ; 'a'
00000000000009a0         db  0x64 ; 'd'
00000000000009a1         db  0x76 ; 'v'
00000000000009a2         db  0x69 ; 'i'
00000000000009a3         db  0x73 ; 's'
00000000000009a4         db  0x65 ; 'e'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x63 ; 'c'
00000000000009a7         db  0x61 ; 'a'
00000000000009a8         db  0x6c ; 'l'
00000000000009a9         db  0x6c ; 'l'
00000000000009aa         db  0x6f ; 'o'
00000000000009ab         db  0x63 ; 'c'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x73 ; 's'
00000000000009ae         db  0x74 ; 't'
00000000000009af         db  0x72 ; 'r'
00000000000009b0         db  0x6c ; 'l'
00000000000009b1         db  0x65 ; 'e'
00000000000009b2         db  0x6e ; 'n'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x6d ; 'm'
00000000000009b5         db  0x65 ; 'e'
00000000000009b6         db  0x6d ; 'm'
00000000000009b7         db  0x73 ; 's'
00000000000009b8         db  0x65 ; 'e'
00000000000009b9         db  0x74 ; 't'
00000000000009ba         db  0x00 ; '.'
00000000000009bb         db  0x5f ; '_'
00000000000009bc         db  0x5f ; '_'
00000000000009bd         db  0x65 ; 'e'
00000000000009be         db  0x72 ; 'r'
00000000000009bf         db  0x72 ; 'r'
00000000000009c0         db  0x6e ; 'n'
00000000000009c1         db  0x6f ; 'o'
00000000000009c2         db  0x5f ; '_'
00000000000009c3         db  0x6c ; 'l'
00000000000009c4         db  0x6f ; 'o'
00000000000009c5         db  0x63 ; 'c'
00000000000009c6         db  0x61 ; 'a'
00000000000009c7         db  0x74 ; 't'
00000000000009c8         db  0x69 ; 'i'
00000000000009c9         db  0x6f ; 'o'
00000000000009ca         db  0x6e ; 'n'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x6d ; 'm'
00000000000009cd         db  0x65 ; 'e'
00000000000009ce         db  0x6d ; 'm'
00000000000009cf         db  0x63 ; 'c'
00000000000009d0         db  0x6d ; 'm'
00000000000009d1         db  0x70 ; 'p'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x73 ; 's'
00000000000009d4         db  0x74 ; 't'
00000000000009d5         db  0x72 ; 'r'
00000000000009d6         db  0x6e ; 'n'
00000000000009d7         db  0x64 ; 'd'
00000000000009d8         db  0x75 ; 'u'
00000000000009d9         db  0x70 ; 'p'
00000000000009da         db  0x00 ; '.'
00000000000009db         db  0x5f ; '_'
00000000000009dc         db  0x5f ; '_'
00000000000009dd         db  0x66 ; 'f'
00000000000009de         db  0x70 ; 'p'
00000000000009df         db  0x72 ; 'r'
00000000000009e0         db  0x69 ; 'i'
00000000000009e1         db  0x6e ; 'n'
00000000000009e2         db  0x74 ; 't'
00000000000009e3         db  0x66 ; 'f'
00000000000009e4         db  0x5f ; '_'
00000000000009e5         db  0x63 ; 'c'
00000000000009e6         db  0x68 ; 'h'
00000000000009e7         db  0x6b ; 'k'
00000000000009e8         db  0x00 ; '.'
00000000000009e9         db  0x73 ; 's'
00000000000009ea         db  0x74 ; 't'
00000000000009eb         db  0x64 ; 'd'
00000000000009ec         db  0x6f ; 'o'
00000000000009ed         db  0x75 ; 'u'
00000000000009ee         db  0x74 ; 't'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0x6c ; 'l'
00000000000009f1         db  0x73 ; 's'
00000000000009f2         db  0x65 ; 'e'
00000000000009f3         db  0x65 ; 'e'
00000000000009f4         db  0x6b ; 'k'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x6d ; 'm'
00000000000009f7         db  0x65 ; 'e'
00000000000009f8         db  0x6d ; 'm'
00000000000009f9         db  0x63 ; 'c'
00000000000009fa         db  0x70 ; 'p'
00000000000009fb         db  0x79 ; 'y'
00000000000009fc         db  0x00 ; '.'
00000000000009fd         db  0x66 ; 'f'
00000000000009fe         db  0x63 ; 'c'
00000000000009ff         db  0x6c ; 'l'
0000000000000a00         db  0x6f ; 'o'
0000000000000a01         db  0x73 ; 's'
0000000000000a02         db  0x65 ; 'e'
0000000000000a03         db  0x00 ; '.'
0000000000000a04         db  0x6d ; 'm'
0000000000000a05         db  0x61 ; 'a'
0000000000000a06         db  0x6c ; 'l'
0000000000000a07         db  0x6c ; 'l'
0000000000000a08         db  0x6f ; 'o'
0000000000000a09         db  0x63 ; 'c'
0000000000000a0a         db  0x00 ; '.'
0000000000000a0b         db  0x6d ; 'm'
0000000000000a0c         db  0x62 ; 'b'
0000000000000a0d         db  0x73 ; 's'
0000000000000a0e         db  0x69 ; 'i'
0000000000000a0f         db  0x6e ; 'n'
0000000000000a10         db  0x69 ; 'i'
0000000000000a11         db  0x74 ; 't'
0000000000000a12         db  0x00 ; '.'
0000000000000a13         db  0x5f ; '_'
0000000000000a14         db  0x5f ; '_'
0000000000000a15         db  0x75 ; 'u'
0000000000000a16         db  0x66 ; 'f'
0000000000000a17         db  0x6c ; 'l'
0000000000000a18         db  0x6f ; 'o'
0000000000000a19         db  0x77 ; 'w'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x6e ; 'n'
0000000000000a1c         db  0x6c ; 'l'
0000000000000a1d         db  0x5f ; '_'
0000000000000a1e         db  0x6c ; 'l'
0000000000000a1f         db  0x61 ; 'a'
0000000000000a20         db  0x6e ; 'n'
0000000000000a21         db  0x67 ; 'g'
0000000000000a22         db  0x69 ; 'i'
0000000000000a23         db  0x6e ; 'n'
0000000000000a24         db  0x66 ; 'f'
0000000000000a25         db  0x6f ; 'o'
0000000000000a26         db  0x00 ; '.'
0000000000000a27         db  0x5f ; '_'
0000000000000a28         db  0x5f ; '_'
0000000000000a29         db  0x63 ; 'c'
0000000000000a2a         db  0x74 ; 't'
0000000000000a2b         db  0x79 ; 'y'
0000000000000a2c         db  0x70 ; 'p'
0000000000000a2d         db  0x65 ; 'e'
0000000000000a2e         db  0x5f ; '_'
0000000000000a2f         db  0x62 ; 'b'
0000000000000a30         db  0x5f ; '_'
0000000000000a31         db  0x6c ; 'l'
0000000000000a32         db  0x6f ; 'o'
0000000000000a33         db  0x63 ; 'c'
0000000000000a34         db  0x00 ; '.'
0000000000000a35         db  0x6f ; 'o'
0000000000000a36         db  0x70 ; 'p'
0000000000000a37         db  0x74 ; 't'
0000000000000a38         db  0x61 ; 'a'
0000000000000a39         db  0x72 ; 'r'
0000000000000a3a         db  0x67 ; 'g'
0000000000000a3b         db  0x00 ; '.'
0000000000000a3c         db  0x5f ; '_'
0000000000000a3d         db  0x5f ; '_'
0000000000000a3e         db  0x66 ; 'f'
0000000000000a3f         db  0x72 ; 'r'
0000000000000a40         db  0x65 ; 'e'
0000000000000a41         db  0x61 ; 'a'
0000000000000a42         db  0x64 ; 'd'
0000000000000a43         db  0x69 ; 'i'
0000000000000a44         db  0x6e ; 'n'
0000000000000a45         db  0x67 ; 'g'
0000000000000a46         db  0x00 ; '.'
0000000000000a47         db  0x73 ; 's'
0000000000000a48         db  0x74 ; 't'
0000000000000a49         db  0x64 ; 'd'
0000000000000a4a         db  0x65 ; 'e'
0000000000000a4b         db  0x72 ; 'r'
0000000000000a4c         db  0x72 ; 'r'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x67 ; 'g'
0000000000000a4f         db  0x65 ; 'e'
0000000000000a50         db  0x74 ; 't'
0000000000000a51         db  0x6f ; 'o'
0000000000000a52         db  0x70 ; 'p'
0000000000000a53         db  0x74 ; 't'
0000000000000a54         db  0x5f ; '_'
0000000000000a55         db  0x6c ; 'l'
0000000000000a56         db  0x6f ; 'o'
0000000000000a57         db  0x6e ; 'n'
0000000000000a58         db  0x67 ; 'g'
0000000000000a59         db  0x00 ; '.'
0000000000000a5a         db  0x66 ; 'f'
0000000000000a5b         db  0x69 ; 'i'
0000000000000a5c         db  0x6c ; 'l'
0000000000000a5d         db  0x65 ; 'e'
0000000000000a5e         db  0x6e ; 'n'
0000000000000a5f         db  0x6f ; 'o'
0000000000000a60         db  0x00 ; '.'
0000000000000a61         db  0x66 ; 'f'
0000000000000a62         db  0x77 ; 'w'
0000000000000a63         db  0x72 ; 'r'
0000000000000a64         db  0x69 ; 'i'
0000000000000a65         db  0x74 ; 't'
0000000000000a66         db  0x65 ; 'e'
0000000000000a67         db  0x00 ; '.'
0000000000000a68         db  0x5f ; '_'
0000000000000a69         db  0x5f ; '_'
0000000000000a6a         db  0x66 ; 'f'
0000000000000a6b         db  0x70 ; 'p'
0000000000000a6c         db  0x65 ; 'e'
0000000000000a6d         db  0x6e ; 'n'
0000000000000a6e         db  0x64 ; 'd'
0000000000000a6f         db  0x69 ; 'i'
0000000000000a70         db  0x6e ; 'n'
0000000000000a71         db  0x67 ; 'g'
0000000000000a72         db  0x00 ; '.'
0000000000000a73         db  0x70 ; 'p'
0000000000000a74         db  0x72 ; 'r'
0000000000000a75         db  0x6f ; 'o'
0000000000000a76         db  0x67 ; 'g'
0000000000000a77         db  0x72 ; 'r'
0000000000000a78         db  0x61 ; 'a'
0000000000000a79         db  0x6d ; 'm'
0000000000000a7a         db  0x5f ; '_'
0000000000000a7b         db  0x69 ; 'i'
0000000000000a7c         db  0x6e ; 'n'
0000000000000a7d         db  0x76 ; 'v'
0000000000000a7e         db  0x6f ; 'o'
0000000000000a7f         db  0x63 ; 'c'
0000000000000a80         db  0x61 ; 'a'
0000000000000a81         db  0x74 ; 't'
0000000000000a82         db  0x69 ; 'i'
0000000000000a83         db  0x6f ; 'o'
0000000000000a84         db  0x6e ; 'n'
0000000000000a85         db  0x5f ; '_'
0000000000000a86         db  0x73 ; 's'
0000000000000a87         db  0x68 ; 'h'
0000000000000a88         db  0x6f ; 'o'
0000000000000a89         db  0x72 ; 'r'
0000000000000a8a         db  0x74 ; 't'
0000000000000a8b         db  0x5f ; '_'
0000000000000a8c         db  0x6e ; 'n'
0000000000000a8d         db  0x61 ; 'a'
0000000000000a8e         db  0x6d ; 'm'
0000000000000a8f         db  0x65 ; 'e'
0000000000000a90         db  0x00 ; '.'
0000000000000a91         db  0x5f ; '_'
0000000000000a92         db  0x5f ; '_'
0000000000000a93         db  0x63 ; 'c'
0000000000000a94         db  0x78 ; 'x'
0000000000000a95         db  0x61 ; 'a'
0000000000000a96         db  0x5f ; '_'
0000000000000a97         db  0x66 ; 'f'
0000000000000a98         db  0x69 ; 'i'
0000000000000a99         db  0x6e ; 'n'
0000000000000a9a         db  0x61 ; 'a'
0000000000000a9b         db  0x6c ; 'l'
0000000000000a9c         db  0x69 ; 'i'
0000000000000a9d         db  0x7a ; 'z'
0000000000000a9e         db  0x65 ; 'e'
0000000000000a9f         db  0x00 ; '.'
0000000000000aa0         db  0x62 ; 'b'
0000000000000aa1         db  0x69 ; 'i'
0000000000000aa2         db  0x6e ; 'n'
0000000000000aa3         db  0x64 ; 'd'
0000000000000aa4         db  0x74 ; 't'
0000000000000aa5         db  0x65 ; 'e'
0000000000000aa6         db  0x78 ; 'x'
0000000000000aa7         db  0x74 ; 't'
0000000000000aa8         db  0x64 ; 'd'
0000000000000aa9         db  0x6f ; 'o'
0000000000000aaa         db  0x6d ; 'm'
0000000000000aab         db  0x61 ; 'a'
0000000000000aac         db  0x69 ; 'i'
0000000000000aad         db  0x6e ; 'n'
0000000000000aae         db  0x00 ; '.'
0000000000000aaf         db  0x5f ; '_'
0000000000000ab0         db  0x5f ; '_'
0000000000000ab1         db  0x6c ; 'l'
0000000000000ab2         db  0x69 ; 'i'
0000000000000ab3         db  0x62 ; 'b'
0000000000000ab4         db  0x63 ; 'c'
0000000000000ab5         db  0x5f ; '_'
0000000000000ab6         db  0x73 ; 's'
0000000000000ab7         db  0x74 ; 't'
0000000000000ab8         db  0x61 ; 'a'
0000000000000ab9         db  0x72 ; 'r'
0000000000000aba         db  0x74 ; 't'
0000000000000abb         db  0x5f ; '_'
0000000000000abc         db  0x6d ; 'm'
0000000000000abd         db  0x61 ; 'a'
0000000000000abe         db  0x69 ; 'i'
0000000000000abf         db  0x6e ; 'n'
0000000000000ac0         db  0x00 ; '.'
0000000000000ac1         db  0x66 ; 'f'
0000000000000ac2         db  0x73 ; 's'
0000000000000ac3         db  0x65 ; 'e'
0000000000000ac4         db  0x65 ; 'e'
0000000000000ac5         db  0x6b ; 'k'
0000000000000ac6         db  0x6f ; 'o'
0000000000000ac7         db  0x00 ; '.'
0000000000000ac8         db  0x5f ; '_'
0000000000000ac9         db  0x5f ; '_'
0000000000000aca         db  0x6f ; 'o'
0000000000000acb         db  0x76 ; 'v'
0000000000000acc         db  0x65 ; 'e'
0000000000000acd         db  0x72 ; 'r'
0000000000000ace         db  0x66 ; 'f'
0000000000000acf         db  0x6c ; 'l'
0000000000000ad0         db  0x6f ; 'o'
0000000000000ad1         db  0x77 ; 'w'
0000000000000ad2         db  0x00 ; '.'
0000000000000ad3         db  0x66 ; 'f'
0000000000000ad4         db  0x70 ; 'p'
0000000000000ad5         db  0x75 ; 'u'
0000000000000ad6         db  0x74 ; 't'
0000000000000ad7         db  0x73 ; 's'
0000000000000ad8         db  0x5f ; '_'
0000000000000ad9         db  0x75 ; 'u'
0000000000000ada         db  0x6e ; 'n'
0000000000000adb         db  0x6c ; 'l'
0000000000000adc         db  0x6f ; 'o'
0000000000000add         db  0x63 ; 'c'
0000000000000ade         db  0x6b ; 'k'
0000000000000adf         db  0x65 ; 'e'
0000000000000ae0         db  0x64 ; 'd'
0000000000000ae1         db  0x00 ; '.'
0000000000000ae2         db  0x66 ; 'f'
0000000000000ae3         db  0x72 ; 'r'
0000000000000ae4         db  0x65 ; 'e'
0000000000000ae5         db  0x65 ; 'e'
0000000000000ae6         db  0x00 ; '.'
0000000000000ae7         db  0x5f ; '_'
0000000000000ae8         db  0x5f ; '_'
0000000000000ae9         db  0x70 ; 'p'
0000000000000aea         db  0x72 ; 'r'
0000000000000aeb         db  0x6f ; 'o'
0000000000000aec         db  0x67 ; 'g'
0000000000000aed         db  0x6e ; 'n'
0000000000000aee         db  0x61 ; 'a'
0000000000000aef         db  0x6d ; 'm'
0000000000000af0         db  0x65 ; 'e'
0000000000000af1         db  0x00 ; '.'
0000000000000af2         db  0x5f ; '_'
0000000000000af3         db  0x5f ; '_'
0000000000000af4         db  0x70 ; 'p'
0000000000000af5         db  0x72 ; 'r'
0000000000000af6         db  0x6f ; 'o'
0000000000000af7         db  0x67 ; 'g'
0000000000000af8         db  0x6e ; 'n'
0000000000000af9         db  0x61 ; 'a'
0000000000000afa         db  0x6d ; 'm'
0000000000000afb         db  0x65 ; 'e'
0000000000000afc         db  0x5f ; '_'
0000000000000afd         db  0x66 ; 'f'
0000000000000afe         db  0x75 ; 'u'
0000000000000aff         db  0x6c ; 'l'
0000000000000b00         db  0x6c ; 'l'
0000000000000b01         db  0x00 ; '.'
0000000000000b02         db  0x5f ; '_'
0000000000000b03         db  0x5f ; '_'
0000000000000b04         db  0x63 ; 'c'
0000000000000b05         db  0x78 ; 'x'
0000000000000b06         db  0x61 ; 'a'
0000000000000b07         db  0x5f ; '_'
0000000000000b08         db  0x61 ; 'a'
0000000000000b09         db  0x74 ; 't'
0000000000000b0a         db  0x65 ; 'e'
0000000000000b0b         db  0x78 ; 'x'
0000000000000b0c         db  0x69 ; 'i'
0000000000000b0d         db  0x74 ; 't'
0000000000000b0e         db  0x00 ; '.'
0000000000000b0f         db  0x47 ; 'G'
0000000000000b10         db  0x4c ; 'L'
0000000000000b11         db  0x49 ; 'I'
0000000000000b12         db  0x42 ; 'B'
0000000000000b13         db  0x43 ; 'C'
0000000000000b14         db  0x5f ; '_'
0000000000000b15         db  0x32 ; '2'
0000000000000b16         db  0x2e ; '.'
0000000000000b17         db  0x33 ; '3'
0000000000000b18         db  0x00 ; '.'
0000000000000b19         db  0x47 ; 'G'
0000000000000b1a         db  0x4c ; 'L'
0000000000000b1b         db  0x49 ; 'I'
0000000000000b1c         db  0x42 ; 'B'
0000000000000b1d         db  0x43 ; 'C'
0000000000000b1e         db  0x5f ; '_'
0000000000000b1f         db  0x32 ; '2'
0000000000000b20         db  0x2e ; '.'
0000000000000b21         db  0x33 ; '3'
0000000000000b22         db  0x2e ; '.'
0000000000000b23         db  0x34 ; '4'
0000000000000b24         db  0x00 ; '.'
0000000000000b25         db  0x47 ; 'G'
0000000000000b26         db  0x4c ; 'L'
0000000000000b27         db  0x49 ; 'I'
0000000000000b28         db  0x42 ; 'B'
0000000000000b29         db  0x43 ; 'C'
0000000000000b2a         db  0x5f ; '_'
0000000000000b2b         db  0x32 ; '2'
0000000000000b2c         db  0x2e ; '.'
0000000000000b2d         db  0x31 ; '1'
0000000000000b2e         db  0x34 ; '4'
0000000000000b2f         db  0x00 ; '.'
0000000000000b30         db  0x47 ; 'G'
0000000000000b31         db  0x4c ; 'L'
0000000000000b32         db  0x49 ; 'I'
0000000000000b33         db  0x42 ; 'B'
0000000000000b34         db  0x43 ; 'C'
0000000000000b35         db  0x5f ; '_'
0000000000000b36         db  0x32 ; '2'
0000000000000b37         db  0x2e ; '.'
0000000000000b38         db  0x34 ; '4'
0000000000000b39         db  0x00 ; '.'
0000000000000b3a         db  0x47 ; 'G'
0000000000000b3b         db  0x4c ; 'L'
0000000000000b3c         db  0x49 ; 'I'
0000000000000b3d         db  0x42 ; 'B'
0000000000000b3e         db  0x43 ; 'C'
0000000000000b3f         db  0x5f ; '_'
0000000000000b40         db  0x32 ; '2'
                     a25:
0000000000000b41         db         ".2.5", 0
0000000000000b46         db  0x5f ; '_'
0000000000000b47         db  0x49 ; 'I'
0000000000000b48         db  0x54 ; 'T'
0000000000000b49         db  0x4d ; 'M'
0000000000000b4a         db  0x5f ; '_'
0000000000000b4b         db  0x64 ; 'd'
0000000000000b4c         db  0x65 ; 'e'
0000000000000b4d         db  0x72 ; 'r'
0000000000000b4e         db  0x65 ; 'e'
0000000000000b4f         db  0x67 ; 'g'
0000000000000b50         db  0x69 ; 'i'
0000000000000b51         db  0x73 ; 's'
0000000000000b52         db  0x74 ; 't'
0000000000000b53         db  0x65 ; 'e'
0000000000000b54         db  0x72 ; 'r'
0000000000000b55         db  0x54 ; 'T'
0000000000000b56         db  0x4d ; 'M'
0000000000000b57         db  0x43 ; 'C'
0000000000000b58         db  0x6c ; 'l'
0000000000000b59         db  0x6f ; 'o'
0000000000000b5a         db  0x6e ; 'n'
0000000000000b5b         db  0x65 ; 'e'
0000000000000b5c         db  0x54 ; 'T'
0000000000000b5d         db  0x61 ; 'a'
0000000000000b5e         db  0x62 ; 'b'
0000000000000b5f         db  0x6c ; 'l'
0000000000000b60         db  0x65 ; 'e'
0000000000000b61         db  0x00 ; '.'
0000000000000b62         db  0x5f ; '_'
0000000000000b63         db  0x5f ; '_'
0000000000000b64         db  0x67 ; 'g'
0000000000000b65         db  0x6d ; 'm'
0000000000000b66         db  0x6f ; 'o'
0000000000000b67         db  0x6e ; 'n'
0000000000000b68         db  0x5f ; '_'
0000000000000b69         db  0x73 ; 's'
0000000000000b6a         db  0x74 ; 't'
0000000000000b6b         db  0x61 ; 'a'
0000000000000b6c         db  0x72 ; 'r'
0000000000000b6d         db  0x74 ; 't'
0000000000000b6e         db  0x5f ; '_'
0000000000000b6f         db  0x5f ; '_'
0000000000000b70         db  0x00 ; '.'
0000000000000b71         db  0x5f ; '_'
0000000000000b72         db  0x49 ; 'I'
0000000000000b73         db  0x54 ; 'T'
0000000000000b74         db  0x4d ; 'M'
0000000000000b75         db  0x5f ; '_'
0000000000000b76         db  0x72 ; 'r'
0000000000000b77         db  0x65 ; 'e'
0000000000000b78         db  0x67 ; 'g'
0000000000000b79         db  0x69 ; 'i'
0000000000000b7a         db  0x73 ; 's'
0000000000000b7b         db  0x74 ; 't'
0000000000000b7c         db  0x65 ; 'e'
0000000000000b7d         db  0x72 ; 'r'
0000000000000b7e         db  0x54 ; 'T'
0000000000000b7f         db  0x4d ; 'M'
0000000000000b80         db  0x43 ; 'C'
0000000000000b81         db  0x6c ; 'l'
0000000000000b82         db  0x6f ; 'o'
0000000000000b83         db  0x6e ; 'n'
0000000000000b84         db  0x65 ; 'e'
0000000000000b85         db  0x54 ; 'T'
0000000000000b86         db  0x61 ; 'a'
0000000000000b87         db  0x62 ; 'b'
0000000000000b88         db  0x6c ; 'l'
0000000000000b89         db  0x65 ; 'e'
0000000000000b8a         db  0x00 ; '.'
0000000000000b8b         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xb8c; 0xc08[ (124 bytes)
        ; File offset : [2956; 3080[ (124 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000b8c         db  0x00 ; '.'
0000000000000b8d         db  0x00 ; '.'
0000000000000b8e         db  0x02 ; '.'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x02 ; '.'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x02 ; '.'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x02 ; '.'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x02 ; '.'
0000000000000b97         db  0x00 ; '.'
0000000000000b98         db  0x00 ; '.'
0000000000000b99         db  0x00 ; '.'
0000000000000b9a         db  0x02 ; '.'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x02 ; '.'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x02 ; '.'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x02 ; '.'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x02 ; '.'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x02 ; '.'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x02 ; '.'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x02 ; '.'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x02 ; '.'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x03 ; '.'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x02 ; '.'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x02 ; '.'
0000000000000bb1         db  0x00 ; '.'
0000000000000bb2         db  0x02 ; '.'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x02 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x02 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x02 ; '.'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x02 ; '.'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x02 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x02 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x02 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x02 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x02 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x02 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x02 ; '.'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x00 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x04 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x02 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x02 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x02 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x02 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x02 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x02 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x02 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x05 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x02 ; '.'
0000000000000bdf         db  0x00 ; '.'
0000000000000be0         db  0x02 ; '.'
0000000000000be1         db  0x00 ; '.'
0000000000000be2         db  0x02 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x02 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x02 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x02 ; '.'
0000000000000be9         db  0x00 ; '.'
0000000000000bea         db  0x05 ; '.'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x00 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x02 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x02 ; '.'
0000000000000bf1         db  0x00 ; '.'
0000000000000bf2         db  0x02 ; '.'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x06 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x02 ; '.'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x02 ; '.'
0000000000000bf9         db  0x00 ; '.'
0000000000000bfa         db  0x02 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x02 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x02 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x02 ; '.'
0000000000000c01         db  0x00 ; '.'
0000000000000c02         db  0x02 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x02 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x02 ; '.'
0000000000000c07         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xc08; 0xc68[ (96 bytes)
        ; File offset : [3080; 3176[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c08         db  0x01 ; '.'
0000000000000c09         db  0x00 ; '.'
0000000000000c0a         db  0x05 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x01 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x00 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x10 ; '.'
0000000000000c11         db  0x00 ; '.'
0000000000000c12         db  0x00 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x00 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x00 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x13 ; '.'
0000000000000c19         db  0x69 ; 'i'
0000000000000c1a         db  0x69 ; 'i'
0000000000000c1b         db  0x0d ; '.'
0000000000000c1c         db  0x00 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x06 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x5f ; '_'
0000000000000c21         db  0x02 ; '.'
0000000000000c22         db  0x00 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x10 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x00 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x74 ; 't'
0000000000000c29         db  0x19 ; '.'
0000000000000c2a         db  0x69 ; 'i'
0000000000000c2b         db  0x09 ; '.'
0000000000000c2c         db  0x00 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x05 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x69 ; 'i'
0000000000000c31         db  0x02 ; '.'
0000000000000c32         db  0x00 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x10 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x00 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x94 ; '.'
0000000000000c39         db  0x91 ; '.'
0000000000000c3a         db  0x96 ; '.'
0000000000000c3b         db  0x06 ; '.'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x04 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x75 ; 'u'
0000000000000c41         db  0x02 ; '.'
0000000000000c42         db  0x00 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x10 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x14 ; '.'
0000000000000c49         db  0x69 ; 'i'
0000000000000c4a         db  0x69 ; 'i'
0000000000000c4b         db  0x0d ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x03 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x80 ; '.'
0000000000000c51         db  0x02 ; '.'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x10 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x75 ; 'u'
0000000000000c59         db  0x1a ; '.'
0000000000000c5a         db  0x69 ; 'i'
0000000000000c5b         db  0x09 ; '.'
0000000000000c5c         db  0x00 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x02 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x8a ; '.'
0000000000000c61         db  0x02 ; '.'
0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x00 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xc68; 0xf80[ (792 bytes)
        ; File offset : [3176; 3968[ (792 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000c68         db  0x50 ; 'P'
0000000000000c69         db  0x7b ; '{'
0000000000000c6a         db  0x20 ; ' '
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x08 ; '.'
0000000000000c71         db  0x00 ; '.'
0000000000000c72         db  0x00 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x00 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0xf0 ; '.'
0000000000000c79         db  0x1b ; '.'
0000000000000c7a         db  0x00 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x58 ; 'X'
0000000000000c81         db  0x7b ; '{'
0000000000000c82         db  0x20 ; ' '
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x00 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x08 ; '.'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x00 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0xb0 ; '.'
0000000000000c91         db  0x1b ; '.'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x60 ; '`'
0000000000000c99         db  0x7b ; '{'
0000000000000c9a         db  0x20 ; ' '
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x08 ; '.'
0000000000000ca1         db  0x00 ; '.'
0000000000000ca2         db  0x00 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0xf9 ; '.'
0000000000000ca9         db  0x54 ; 'T'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x80 ; '.'
0000000000000cb1         db  0x7b ; '{'
0000000000000cb2         db  0x20 ; ' '
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x08 ; '.'
0000000000000cb9         db  0x00 ; '.'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0xfe ; '.'
0000000000000cc1         db  0x54 ; 'T'
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0xa0 ; '.'
0000000000000cc9         db  0x7b ; '{'
0000000000000cca         db  0x20 ; ' '
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x08 ; '.'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x00 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x06 ; '.'
0000000000000cd9         db  0x55 ; 'U'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0xc0 ; '.'
0000000000000ce1         db  0x7b ; '{'
0000000000000ce2         db  0x20 ; ' '
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x08 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x0b ; '.'
0000000000000cf1         db  0x55 ; 'U'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x00 ; '.'
0000000000000cf9         db  0x7c ; '|'
0000000000000cfa         db  0x20 ; ' '
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x08 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0xb1 ; '.'
0000000000000d09         db  0x5b ; '['
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x08 ; '.'
0000000000000d11         db  0x7c ; '|'
0000000000000d12         db  0x20 ; ' '
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x08 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0xb9 ; '.'
0000000000000d21         db  0x5b ; '['
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x10 ; '.'
0000000000000d29         db  0x7c ; '|'
0000000000000d2a         db  0x20 ; ' '
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x08 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0xbf ; '.'
0000000000000d39         db  0x5b ; '['
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x18 ; '.'
0000000000000d41         db  0x7c ; '|'
0000000000000d42         db  0x20 ; ' '
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x08 ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0xcc ; '.'
0000000000000d51         db  0x5b ; '['
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x20 ; ' '
0000000000000d59         db  0x7c ; '|'
0000000000000d5a         db  0x20 ; ' '
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x08 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0xd9 ; '.'
0000000000000d69         db  0x5b ; '['
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x28 ; '('
0000000000000d71         db  0x7c ; '|'
0000000000000d72         db  0x20 ; ' '
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x08 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0xed ; '.'
0000000000000d81         db  0x5b ; '['
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x30 ; '0'
0000000000000d89         db  0x7c ; '|'
0000000000000d8a         db  0x20 ; ' '
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x08 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0xef ; '.'
0000000000000d99         db  0x5b ; '['
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x38 ; '8'
0000000000000da1         db  0x7c ; '|'
0000000000000da2         db  0x20 ; ' '
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x08 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0xd2 ; '.'
0000000000000db1         db  0x5b ; '['
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x40 ; '@'
0000000000000db9         db  0x7c ; '|'
0000000000000dba         db  0x20 ; ' '
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0xbf ; '.'
0000000000000dc9         db  0x54 ; 'T'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x48 ; 'H'
0000000000000dd1         db  0x7c ; '|'
0000000000000dd2         db  0x20 ; ' '
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x08 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0xf7 ; '.'
0000000000000de1         db  0x5b ; '['
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x08 ; '.'
0000000000000de9         db  0x80 ; '.'
0000000000000dea         db  0x20 ; ' '
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x08 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x08 ; '.'
0000000000000df9         db  0x80 ; '.'
0000000000000dfa         db  0x20 ; ' '
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x10 ; '.'
0000000000000e01         db  0x80 ; '.'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x08 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x9a ; '.'
0000000000000e11         db  0x5b ; '['
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x20 ; ' '
0000000000000e19         db  0x80 ; '.'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x08 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x4a ; 'J'
0000000000000e29         db  0x5b ; '['
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x80 ; '.'
0000000000000e31         db  0x80 ; '.'
0000000000000e32         db  0x20 ; ' '
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x08 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x90 ; '.'
0000000000000e41         db  0x80 ; '.'
0000000000000e42         db  0x20 ; ' '
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x98 ; '.'
0000000000000e49         db  0x80 ; '.'
0000000000000e4a         db  0x20 ; ' '
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x08 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x60 ; '`'
0000000000000e59         db  0x81 ; '.'
0000000000000e5a         db  0x20 ; ' '
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0xd8 ; '.'
0000000000000e61         db  0x7f ; '.'
0000000000000e62         db  0x20 ; ' '
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x06 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x06 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x00 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0xe0 ; '.'
0000000000000e79         db  0x7f ; '.'
0000000000000e7a         db  0x20 ; ' '
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x06 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x1b ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x00 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0xe8 ; '.'
0000000000000e91         db  0x7f ; '.'
0000000000000e92         db  0x20 ; ' '
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x06 ; '.'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x1f ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x00 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0xf0 ; '.'
0000000000000ea9         db  0x7f ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x06 ; '.'
0000000000000eb1         db  0x00 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x30 ; '0'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x00 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0xf8 ; '.'
0000000000000ec1         db  0x7f ; '.'
0000000000000ec2         db  0x20 ; ' '
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x06 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x33 ; '3'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x00 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0xa0 ; '.'
0000000000000ed9         db  0x80 ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x05 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x36 ; '6'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x00 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0xa8 ; '.'
0000000000000ef1         db  0x80 ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x05 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x35 ; '5'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x00 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0xb0 ; '.'
0000000000000f09         db  0x80 ; '.'
0000000000000f0a         db  0x20 ; ' '
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x05 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x37 ; '7'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x00 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0xb8 ; '.'
0000000000000f21         db  0x80 ; '.'
0000000000000f22         db  0x20 ; ' '
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x05 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x3c ; '<'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x00 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0xc0 ; '.'
0000000000000f39         db  0x80 ; '.'
0000000000000f3a         db  0x20 ; ' '
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x05 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x3d ; '='
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x00 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0xc8 ; '.'
0000000000000f51         db  0x80 ; '.'
0000000000000f52         db  0x20 ; ' '
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x05 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x39 ; '9'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x00 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0xe0 ; '.'
0000000000000f69         db  0x80 ; '.'
0000000000000f6a         db  0x20 ; ' '
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x05 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x3b ; ';'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x00 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0xf80; 0x13e8[ (1128 bytes)
        ; File offset : [3968; 5096[ (1128 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000f80         db  0x60 ; '`'
0000000000000f81         db  0x7e ; '~'
0000000000000f82         db  0x20 ; ' '
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x07 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x01 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x00 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x68 ; 'h'
0000000000000f99         db  0x7e ; '~'
0000000000000f9a         db  0x20 ; ' '
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x07 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x02 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x00 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x70 ; 'p'
0000000000000fb1         db  0x7e ; '~'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x07 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x03 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x00 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x78 ; 'x'
0000000000000fc9         db  0x7e ; '~'
0000000000000fca         db  0x20 ; ' '
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x07 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x04 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x00 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x80 ; '.'
0000000000000fe1         db  0x7e ; '~'
0000000000000fe2         db  0x20 ; ' '
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x07 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x05 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x00 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x88 ; '.'
0000000000000ff9         db  0x7e ; '~'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x07 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x07 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x00 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x90 ; '.'
0000000000001011         db  0x7e ; '~'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x07 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x08 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x00 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x98 ; '.'
0000000000001029         db  0x7e ; '~'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x07 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x09 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x00 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0xa0 ; '.'
0000000000001041         db  0x7e ; '~'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x07 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x0a ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x00 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0xa8 ; '.'
0000000000001059         db  0x7e ; '~'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x07 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x0b ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x00 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0xb0 ; '.'
0000000000001071         db  0x7e ; '~'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x07 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x0c ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x00 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0xb8 ; '.'
0000000000001089         db  0x7e ; '~'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x07 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x0d ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x00 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0xc0 ; '.'
00000000000010a1         db  0x7e ; '~'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x07 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x0e ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x00 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0xc8 ; '.'
00000000000010b9         db  0x7e ; '~'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x07 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x0f ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x00 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0xd0 ; '.'
00000000000010d1         db  0x7e ; '~'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x07 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x10 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x00 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0xd8 ; '.'
00000000000010e9         db  0x7e ; '~'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x07 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x11 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x00 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0xe0 ; '.'
0000000000001101         db  0x7e ; '~'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x07 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x12 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x00 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0xe8 ; '.'
0000000000001119         db  0x7e ; '~'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x07 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x13 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x00 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0xf0 ; '.'
0000000000001131         db  0x7e ; '~'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x07 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x14 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x00 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0xf8 ; '.'
0000000000001149         db  0x7e ; '~'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x07 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x15 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x00 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x00 ; '.'
0000000000001161         db  0x7f ; '.'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x07 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x16 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x00 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x08 ; '.'
0000000000001179         db  0x7f ; '.'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x07 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x17 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x10 ; '.'
0000000000001191         db  0x7f ; '.'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x07 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x18 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x00 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x18 ; '.'
00000000000011a9         db  0x7f ; '.'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x07 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x19 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x00 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x20 ; ' '
00000000000011c1         db  0x7f ; '.'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x07 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x1a ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x00 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x28 ; '('
00000000000011d9         db  0x7f ; '.'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x07 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x1c ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x30 ; '0'
00000000000011f1         db  0x7f ; '.'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x07 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x1d ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x00 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x38 ; '8'
0000000000001209         db  0x7f ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x07 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x1e ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x00 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x40 ; '@'
0000000000001221         db  0x7f ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x07 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x20 ; ' '
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x00 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x48 ; 'H'
0000000000001239         db  0x7f ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x07 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x21 ; '!'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x00 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x50 ; 'P'
0000000000001251         db  0x7f ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x07 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x22 ; '"'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x00 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x58 ; 'X'
0000000000001269         db  0x7f ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x07 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x23 ; '#'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x00 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x60 ; '`'
0000000000001281         db  0x7f ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x07 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x24 ; '$'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x00 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x68 ; 'h'
0000000000001299         db  0x7f ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x07 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x25 ; '%'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x00 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x70 ; 'p'
00000000000012b1         db  0x7f ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x07 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x26 ; '&'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x00 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x78 ; 'x'
00000000000012c9         db  0x7f ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x07 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x27 ; '''
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x80 ; '.'
00000000000012e1         db  0x7f ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x07 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x28 ; '('
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x00 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x88 ; '.'
00000000000012f9         db  0x7f ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x07 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x29 ; ')'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x00 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x90 ; '.'
0000000000001311         db  0x7f ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x07 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x2a ; '*'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x98 ; '.'
0000000000001329         db  0x7f ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x07 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x2b ; '+'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0xa0 ; '.'
0000000000001341         db  0x7f ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x07 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x2c ; ','
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0xa8 ; '.'
0000000000001359         db  0x7f ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x07 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x2d ; '-'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0xb0 ; '.'
0000000000001371         db  0x7f ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x07 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x2e ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0xb8 ; '.'
0000000000001389         db  0x7f ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x07 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x2f ; '/'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0xc0 ; '.'
00000000000013a1         db  0x7f ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x07 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x31 ; '1'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0xc8 ; '.'
00000000000013b9         db  0x7f ; '.'
00000000000013ba         db  0x20 ; ' '
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x07 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x32 ; '2'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x00 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0xd0 ; '.'
00000000000013d1         db  0x7f ; '.'
00000000000013d2         db  0x20 ; ' '
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x07 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x34 ; '4'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x00 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x13e8; 0x13ff[ (23 bytes)
        ; File offset : [5096; 5119[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000013e8         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000013ec         mov        rax, qword [qword_207fe8]                   ; qword_207fe8
00000000000013f3         test       rax, rax
00000000000013f6         je         loc_13fa

00000000000013f8         call       rax

                     loc_13fa:
00000000000013fa         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000013fe         ret
                        ; endp
00000000000013ff         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1400; 0x1700[ (768 bytes)
        ; File offset : [5120; 5888[ (768 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1400:
0000000000001400         push       qword [qword_207e50]                        ; Begin of unwind block (FDE at 0x66e4), qword_207e50, CODE XREF=sub_1416+5
0000000000001406         jmp        qword [qword_207e50+8]                      ; 0x207e58
                        ; endp
000000000000140c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___uflow:        // __uflow
0000000000001410         jmp        qword [__uflow@GOT]                         ; __uflow, __uflow@GOT, CODE XREF=main+580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1416:
0000000000001416         push       0x0
000000000000141b         jmp        loc_1400


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001420         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=parse_tab_stops+585, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1426:
0000000000001426         push       0x1
000000000000142b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001430         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_3360+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1436:
0000000000001436         push       0x2
000000000000143b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001440         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+696, main+857, next_file+162, next_file+371, next_file+434, cleanup_file_list_stdin+41, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1446:
0000000000001446         push       0x3
000000000000144b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001450         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+636, usage+829
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1456:
0000000000001456         push       0x4
000000000000145b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001460         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1466:
0000000000001466         push       0x5
000000000000146b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001470         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1476:
0000000000001476         push       0x6
000000000000147b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_clearerr_unlocked:        // clearerr_unlocked
0000000000001480         jmp        qword [clearerr_unlocked@GOT]               ; clearerr_unlocked, clearerr_unlocked@GOT, CODE XREF=next_file+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1486:
0000000000001486         push       0x7
000000000000148b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001490         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+91
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1496:
0000000000001496         push       0x8
000000000000149b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
00000000000014a0         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14a6:
00000000000014a6         push       0x9
00000000000014ab         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
00000000000014b0         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+79
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14b6:
00000000000014b6         push       0xa
00000000000014bb         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
00000000000014c0         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+688, main+849, main+922, main+958, usage+56, usage+102, usage+146, usage+183, usage+220, usage+257, usage+299
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14c6:
00000000000014c6         push       0xb
00000000000014cb         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
00000000000014d0         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14d6:
00000000000014d6         push       0xc
00000000000014db         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
00000000000014e0         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_3360+411, sub_3360+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14e6:
00000000000014e6         push       0xd
00000000000014eb         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
00000000000014f0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+903, sub_3360+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192, rpl_mbrtowc+126
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14f6:
00000000000014f6         push       0xe
00000000000014fb         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001500         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+137
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0xf
000000000000150b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001510         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0x10
000000000000151b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000001520         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=main+661, main+826
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0x11
000000000000152b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001530         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0x12
000000000000153b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001540         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0x13
000000000000154b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001550         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=next_file+508
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0x14
000000000000155b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001560         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0x15
000000000000156b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strspn:        // strspn
0000000000001570         jmp        qword [strspn@GOT]                          ; strspn, strspn@GOT, CODE XREF=parse_tab_stops+505
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0x16
000000000000157b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
0000000000001580         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0x17
000000000000158b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strndup:        // strndup
0000000000001590         jmp        qword [strndup@GOT]                         ; strndup, strndup@GOT, CODE XREF=xstrndup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0x18
000000000000159b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
00000000000015a0         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0x19
00000000000015ab         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
00000000000015b0         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+310, usage+354, usage+944, emit_tab_list_info+33, emit_tab_list_info+71, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x1a
00000000000015bb         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
00000000000015c0         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x1b
00000000000015cb         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
00000000000015d0         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x1c
00000000000015db         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
00000000000015e0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x1d
00000000000015eb         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
00000000000015f0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x1e
00000000000015fb         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001600         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x1f
000000000000160b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001610         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x20
000000000000161b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001620         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x21
000000000000162b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001630         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x22
000000000000163b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001640         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+60, usage+611, usage+804, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x23
000000000000164b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001650         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+599, usage+692, usage+753, usage+792, usage+895, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x24
000000000000165b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001660         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+713, main+874, main+939, main+975, set_extend_size+47, set_increment_size+47, parse_tab_stops+577, parse_tab_stops+664, parse_tab_stops+736, parse_tab_stops+842, finalize_tab_stops+239
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x25
000000000000166b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001670         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x26
000000000000167b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
0000000000001680         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=next_file+257
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x27
000000000000168b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001690         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x28
000000000000169b         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
00000000000016a0         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+219, usage+88, parse_tab_stops+852
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x29
00000000000016ab         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
00000000000016b0         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x2a
00000000000016bb         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
00000000000016c0         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x2b
00000000000016cb         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
00000000000016d0         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_3360+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x2c
00000000000016db         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
00000000000016e0         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_3360+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0x2d
00000000000016eb         jmp        0x1400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
00000000000016f0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=main+423, parse_tab_stops+64, sub_3100+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x2e
00000000000016fb         jmp        0x1400
                        ; endp


        ; Section .plt.got
        ; Range: [0x1700; 0x1708[ (8 bytes)
        ; File offset : [5888; 5896[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_207ff8:        // qword_207ff8
0000000000001700         jmp        qword [qword_207ff8]                        ; qword, End of unwind block (FDE at 0x66e4), Begin of unwind block (FDE at 0x670c), qword_207ff8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001706         align      8
0000000000001708         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x670c)
0000000000001709         db  0x00 ; '.'
000000000000170a         db  0x00 ; '.'
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x00 ; '.'
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1710; 0x53ee[ (15582 bytes)
        ; File offset : [5904; 21486[ (15582 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_41: int8_t, -65
        ;    var_42: int8_t, -66
        ;    var_50: int64_t, -80
        ;    var_51: int8_t, -81


                     main:
0000000000001710         push       r15                                         ; Begin of unwind block (FDE at 0x6750), DATA XREF=_start+29
0000000000001712         push       r14
0000000000001714         push       r13
0000000000001716         push       r12
0000000000001718         push       rbp
0000000000001719         push       rbx
000000000000171a         mov        ebp, edi
000000000000171c         mov        rbx, rsi
000000000000171f         sub        rsp, 0x28
0000000000001723         mov        rdi, qword [rsi]
0000000000001726         mov        rax, qword [fs:0x28]
000000000000172f         mov        qword [rsp+0x58+var_40], rax
0000000000001734         xor        eax, eax
0000000000001736         lea        r12, qword [rsp+0x58+var_42]
000000000000173b         call       set_program_name                            ; set_program_name
0000000000001740         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x60c1
0000000000001747         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
000000000000174c         call       j_setlocale                                 ; setlocale
0000000000001751         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001758         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
000000000000175f         call       j_bindtextdomain                            ; bindtextdomain
0000000000001764         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
000000000000176b         call       j_textdomain                                ; textdomain
0000000000001770         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001777         call       atexit                                      ; atexit
000000000000177c         mov        byte [convert_entire_line], 0x1             ; convert_entire_line

                     loc_1783:
0000000000001783         lea        rcx, qword [longopts]                       ; argument "__longopts" for method j_getopt_long, longopts, CODE XREF=main+250, main+277, main+295, main+317
000000000000178a         lea        rdx, qword [shortopts]                      ; argument "__shortopts" for method j_getopt_long, shortopts
0000000000001791         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001794         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001797         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001799         call       j_getopt_long                               ; getopt_long
000000000000179e         cmp        eax, 0xffffffff
00000000000017a1         je         loc_1852

00000000000017a7         cmp        eax, 0x39
00000000000017aa         jg         loc_17f0

00000000000017ac         cmp        eax, 0x30
00000000000017af         jge        loc_1810

00000000000017b1         cmp        eax, 0xffffff7d
00000000000017b6         jne        loc_1a7f

00000000000017bc         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000017c3         mov        rcx, qword [Version]                        ; Version
00000000000017ca         lea        r8, qword [aDavidMackenzie]                 ; "David MacKenzie"
00000000000017d1         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5481
00000000000017d8         lea        rsi, qword [aExpand]                        ; "expand"
00000000000017df         xor        r9d, r9d
00000000000017e2         xor        eax, eax
00000000000017e4         call       version_etc                                 ; version_etc
00000000000017e9         xor        edi, edi                                    ; argument "__status" for method j_exit
00000000000017eb         call       j_exit                                      ; exit
                        ; endp

                     loc_17f0:
00000000000017f0         cmp        eax, 0x69                                   ; CODE XREF=main+154
00000000000017f3         je         loc_1830

00000000000017f5         cmp        eax, 0x74
00000000000017f8         jne        loc_1a8d

00000000000017fe         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001805         call       parse_tab_stops                             ; parse_tab_stops
000000000000180a         jmp        loc_1783
000000000000180f         align      16

                     loc_1810:
0000000000001810         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+159
0000000000001817         test       rdi, rdi
000000000000181a         je         loc_183c

000000000000181c         sub        rdi, 0x1
0000000000001820         call       parse_tab_stops                             ; parse_tab_stops
0000000000001825         jmp        loc_1783
000000000000182a         align      16

                     loc_1830:
0000000000001830         mov        byte [convert_entire_line], 0x0             ; convert_entire_line, CODE XREF=main+227
0000000000001837         jmp        loc_1783

                     loc_183c:
000000000000183c         mov        rdi, r12                                    ; CODE XREF=main+266
000000000000183f         mov        byte [rsp+0x58+var_42], al
0000000000001843         mov        byte [rsp+0x58+var_41], 0x0
0000000000001848         call       parse_tab_stops                             ; parse_tab_stops
000000000000184d         jmp        loc_1783

                     loc_1852:
0000000000001852         call       finalize_tab_stops                          ; finalize_tab_stops, CODE XREF=main+145
0000000000001857         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
000000000000185e         xor        edi, edi
0000000000001860         cmp        eax, ebp
0000000000001862         jge        loc_1868

0000000000001864         lea        rdi, qword [rbx+rax*8]

                     loc_1868:
0000000000001868         call       set_file_list                               ; set_file_list, CODE XREF=main+338
000000000000186d         xor        edi, edi
000000000000186f         call       next_file                                   ; next_file
0000000000001874         test       rax, rax
0000000000001877         mov        rbp, rax
000000000000187a         je         loc_1974

0000000000001880         lea        r13, qword [rsp+0x58+var_51]
0000000000001885         lea        r12, qword [rsp+0x58+var_50]

                     loc_188a:
000000000000188a         mov        qword [rsp+0x58+var_50], 0x0                ; CODE XREF=main+485
0000000000001893         xor        r14d, r14d
0000000000001896         mov        r15d, 0x1
000000000000189c         jmp        loc_18f7
000000000000189e         align      32

                     loc_18a0:
00000000000018a0         add        r14, 0x1                                    ; CODE XREF=main+525
00000000000018a4         je         loc_1a9c

00000000000018aa         movzx      r15d, byte [convert_entire_line]            ; convert_entire_line
00000000000018b2         test       r15b, r15b
00000000000018b5         jne        loc_18cb

                     loc_18b7:
00000000000018b7         call       j___ctype_b_loc                             ; __ctype_b_loc, CODE XREF=main+572
00000000000018bc         mov        rcx, qword [rax]
00000000000018bf         movsxd     rdx, ebx
00000000000018c2         movzx      r15d, word [rcx+rdx*2]
00000000000018c7         and        r15d, 0x1

                     loc_18cb:
00000000000018cb         test       ebx, ebx                                    ; CODE XREF=main+421
00000000000018cd         js         loc_1974

                     loc_18d3:
00000000000018d3         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=main+511, main+570
00000000000018da         mov        rax, qword [rdi+0x28]
00000000000018de         cmp        rax, qword [rdi+0x30]
00000000000018e2         jae        loc_19a2

00000000000018e8         lea        rdx, qword [rax+1]
00000000000018ec         mov        qword [rdi+0x28], rdx
00000000000018f0         mov        byte [rax], bl

                     loc_18f2:
00000000000018f2         cmp        ebx, 0xa                                    ; CODE XREF=main+668
00000000000018f5         je         loc_188a

                     loc_18f7:
00000000000018f7         mov        rax, qword [rbp+8]                          ; CODE XREF=main+396, main+605
00000000000018fb         cmp        rax, qword [rbp+0x10]
00000000000018ff         jae        loc_1951

0000000000001901         lea        rdx, qword [rax+1]
0000000000001905         mov        qword [rbp+8], rdx
0000000000001909         movzx      ebx, byte [rax]

                     loc_190c:
000000000000190c         test       r15b, r15b                                  ; CODE XREF=main+589
000000000000190f         je         loc_18d3

0000000000001911         cmp        ebx, 0x9
0000000000001914         je         loc_19de

                     loc_191a:
000000000000191a         cmp        ebx, 0x8                                    ; CODE XREF=main+610
000000000000191d         jne        loc_18a0

000000000000191f         xor        eax, eax
0000000000001921         test       r14, r14
0000000000001924         setne      al
0000000000001927         xor        edx, edx
0000000000001929         sub        r14, rax
000000000000192c         mov        rax, qword [rsp+0x58+var_50]
0000000000001931         test       rax, rax
0000000000001934         setne      dl
0000000000001937         sub        rax, rdx
000000000000193a         mov        qword [rsp+0x58+var_50], rax

                     loc_193f:
000000000000193f         movzx      r15d, byte [convert_entire_line]            ; convert_entire_line, CODE XREF=main+764
0000000000001947         test       r15b, r15b
000000000000194a         jne        loc_18d3

000000000000194c         jmp        loc_18b7

                     loc_1951:
0000000000001951         mov        rdi, rbp                                    ; argument #1 for method j___uflow, CODE XREF=main+495
0000000000001954         call       j___uflow                                   ; __uflow
0000000000001959         test       eax, eax
000000000000195b         mov        ebx, eax
000000000000195d         jns        loc_190c

000000000000195f         mov        rdi, rbp
0000000000001962         call       next_file                                   ; next_file
0000000000001967         test       rax, rax
000000000000196a         mov        rbp, rax
000000000000196d         jne        loc_18f7

000000000000196f         test       r15b, r15b
0000000000001972         jne        loc_191a

                     loc_1974:
0000000000001974         call       cleanup_file_list_stdin                     ; cleanup_file_list_stdin, CODE XREF=main+362, main+445
0000000000001979         mov        rcx, qword [rsp+0x58+var_40]
000000000000197e         xor        rcx, qword [fs:0x28]
0000000000001987         mov        eax, dword [exit_status]                    ; exit_status
000000000000198d         jne        loc_1a97

0000000000001993         add        rsp, 0x28
0000000000001997         pop        rbx
0000000000001998         pop        rbp
0000000000001999         pop        r12
000000000000199b         pop        r13
000000000000199d         pop        r14
000000000000199f         pop        r15
00000000000019a1         ret
                        ; endp

                     loc_19a2:
00000000000019a2         movzx      esi, bl                                     ; argument #2 for method j___overflow, CODE XREF=main+466
00000000000019a5         call       j___overflow                                ; __overflow
00000000000019aa         test       eax, eax
00000000000019ac         jns        loc_18f2

00000000000019b2         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
00000000000019b9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000019be         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000019c0         call       j_dcgettext                                 ; dcgettext
00000000000019c5         mov        rbx, rax
00000000000019c8         call       j___errno_location                          ; __errno_location
00000000000019cd         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000019cf         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000019d2         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000019d7         xor        eax, eax
00000000000019d9         call       j_error                                     ; error

                     loc_19de:
00000000000019de         mov        rdx, r13                                    ; CODE XREF=main+516
00000000000019e1         mov        rsi, r12
00000000000019e4         mov        rdi, r14
00000000000019e7         call       get_next_tab_column                         ; get_next_tab_column
00000000000019ec         cmp        byte [rsp+0x58+var_51], 0x0
00000000000019f1         mov        rbx, rax
00000000000019f4         je         loc_1a11

00000000000019f6         lea        rax, qword [r14+1]
00000000000019fa         add        r14, 0x1
00000000000019fe         je         loc_1ac0

0000000000001a04         mov        r14, rax

                     loc_1a07:
0000000000001a07         mov        ebx, 0x20                                   ; CODE XREF=main+802
0000000000001a0c         jmp        loc_193f

                     loc_1a11:
0000000000001a11         cmp        r14, rax                                    ; CODE XREF=main+740
0000000000001a14         jbe        loc_1a2b

0000000000001a16         jmp        loc_1ac0
0000000000001a1b         align      32

                     loc_1a20:
0000000000001a20         lea        rdx, qword [rax+1]                          ; CODE XREF=main+819
0000000000001a24         mov        qword [rdi+0x28], rdx
0000000000001a28         mov        byte [rax], 0x20

                     loc_1a2b:
0000000000001a2b         add        r14, 0x1                                    ; CODE XREF=main+772, main+833
0000000000001a2f         cmp        rbx, r14
0000000000001a32         jbe        loc_1a07

0000000000001a34         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001a3b         mov        rax, qword [rdi+0x28]
0000000000001a3f         cmp        rax, qword [rdi+0x30]
0000000000001a43         jb         loc_1a20

0000000000001a45         mov        esi, 0x20                                   ; argument #2 for method j___overflow
0000000000001a4a         call       j___overflow                                ; __overflow
0000000000001a4f         test       eax, eax
0000000000001a51         jns        loc_1a2b

0000000000001a53         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
0000000000001a5a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001a5f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001a61         call       j_dcgettext                                 ; dcgettext
0000000000001a66         mov        rbx, rax
0000000000001a69         call       j___errno_location                          ; __errno_location
0000000000001a6e         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001a70         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001a73         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001a78         xor        eax, eax
0000000000001a7a         call       j_error                                     ; error

                     loc_1a7f:
0000000000001a7f         cmp        eax, 0xffffff7e                             ; CODE XREF=main+166
0000000000001a84         jne        loc_1a8d

0000000000001a86         xor        edi, edi                                    ; argument #1 for method usage
0000000000001a88         call       usage                                       ; usage

                     loc_1a8d:
0000000000001a8d         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+232, main+884
0000000000001a92         call       usage                                       ; usage

                     loc_1a97:
0000000000001a97         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+637
                        ; endp

                     loc_1a9c:
0000000000001a9c         lea        rsi, qword [aInputLineIsToo]                ; argument "msgid" for method j_dcgettext, "input line is too long", CODE XREF=main+404
0000000000001aa3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001aa8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001aaa         call       j_dcgettext                                 ; dcgettext
0000000000001aaf         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001ab1         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001ab4         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001ab9         xor        eax, eax
0000000000001abb         call       j_error                                     ; error

                     loc_1ac0:
0000000000001ac0         lea        rsi, qword [aInputLineIsToo]                ; argument "msgid" for method j_dcgettext, "input line is too long", CODE XREF=main+750, main+774
0000000000001ac7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001acc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ace         call       j_dcgettext                                 ; dcgettext
0000000000001ad3         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001ad5         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001ad8         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001add         xor        eax, eax
0000000000001adf         call       j_error                                     ; error
0000000000001ae4         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x6750)
0000000000001aee         nop
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000001af0         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x66b4)
0000000000001af2         mov        r9, rdx
0000000000001af5         pop        rsi
0000000000001af6         mov        rdx, rsp
0000000000001af9         and        rsp, 0xfffffffffffffff0
0000000000001afd         push       rax
0000000000001afe         push       rsp
0000000000001aff         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000001b06         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000001b0d         lea        rdi, qword [main]                           ; main
0000000000001b14         call       qword [qword_207fd8+8]                      ; 0x207fe0
0000000000001b1a         hlt
                        ; endp
0000000000001b1b         align      32                                          ; End of unwind block (FDE at 0x66b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001b20         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000001b27         push       rbp
0000000000001b28         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001b2f         cmp        rax, rdi
0000000000001b32         mov        rbp, rsp
0000000000001b35         je         loc_1b50

0000000000001b37         mov        rax, qword [qword_207fd8]                   ; qword_207fd8
0000000000001b3e         test       rax, rax
0000000000001b41         je         loc_1b50

0000000000001b43         pop        rbp
0000000000001b44         jmp        rax
                        ; endp
0000000000001b46         align      16

                     loc_1b50:
0000000000001b50         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001b51         ret
                        ; endp
0000000000001b52         align      32

                     register_tm_clones:
0000000000001b60         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000001b67         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001b6e         push       rbp
0000000000001b6f         sub        rsi, rdi
0000000000001b72         mov        rbp, rsp
0000000000001b75         sar        rsi, 0x3
0000000000001b79         mov        rax, rsi
0000000000001b7c         shr        rax, 0x3f
0000000000001b80         add        rsi, rax
0000000000001b83         sar        rsi, 0x1
0000000000001b86         je         loc_1ba0

0000000000001b88         mov        rax, qword [qword_207ff0]                   ; qword_207ff0
0000000000001b8f         test       rax, rax
0000000000001b92         je         loc_1ba0

0000000000001b94         pop        rbp
0000000000001b95         jmp        rax
                        ; endp
0000000000001b97         align      32

                     loc_1ba0:
0000000000001ba0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001ba1         ret
                        ; endp
0000000000001ba2         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000001bb0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000001bb7         jne        loc_1be8

0000000000001bb9         cmp        qword [qword_207ff8], 0x0                   ; qword_207ff8
0000000000001bc1         push       rbp
0000000000001bc2         mov        rbp, rsp
0000000000001bc5         je         loc_1bd3

0000000000001bc7         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000001bce         call       j_qword_207ff8                              ; qword_207ff8

                     loc_1bd3:
0000000000001bd3         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000001bd8         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000001bdf         pop        rbp
0000000000001be0         ret
                        ; endp
0000000000001be1         align      8

                     loc_1be8:
0000000000001be8         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000001bea         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000001bf0         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000001bf1         mov        rbp, rsp
0000000000001bf4         pop        rbp
0000000000001bf5         jmp        register_tm_clones                          ; register_tm_clones
0000000000001bfa         align      1024


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000001c00         push       r13                                         ; Begin of unwind block (FDE at 0x6724), CODE XREF=main+888, main+898
0000000000001c02         push       r12
0000000000001c04         mov        edx, 0x5
0000000000001c09         push       rbp
0000000000001c0a         push       rbx
0000000000001c0b         mov        ebp, edi
0000000000001c0d         sub        rsp, 0x88
0000000000001c14         mov        rbx, qword [program_name]                   ; program_name
0000000000001c1b         mov        rax, qword [fs:0x28]
0000000000001c24         mov        qword [rsp+0xa8+var_30], rax
0000000000001c29         xor        eax, eax
0000000000001c2b         test       edi, edi
0000000000001c2d         je         loc_1c5d

0000000000001c2f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000001c36         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c38         call       j_dcgettext                                 ; dcgettext
0000000000001c3d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000001c44         mov        rdx, rax
0000000000001c47         mov        rcx, rbx
0000000000001c4a         mov        esi, 0x1
0000000000001c4f         xor        eax, eax
0000000000001c51         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_1c56:
0000000000001c56         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+758
0000000000001c58         call       j_exit                                      ; exit
                        ; endp

                     loc_1c5d:
0000000000001c5d         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [FILE]...\\n", CODE XREF=usage+45
0000000000001c64         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c66         call       j_dcgettext                                 ; dcgettext
0000000000001c6b         mov        rdx, rbx
0000000000001c6e         mov        rsi, rax
0000000000001c71         mov        edi, 0x1
0000000000001c76         xor        eax, eax
0000000000001c78         call       j___printf_chk                              ; __printf_chk
0000000000001c7d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001c84         lea        rsi, qword [aConvertTabsInE]                ; argument "msgid" for method j_dcgettext, "Convert tabs in each FILE to spaces, writing to standard output.\\n"
0000000000001c8b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001c90         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c92         call       j_dcgettext                                 ; dcgettext
0000000000001c97         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001c9a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001c9d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001ca2         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001ca9         lea        rsi, qword [aNwithNoFileOrW]                ; argument "msgid" for method j_dcgettext, "\\nWith no FILE, or when FILE is -, read standard input.\\n"
0000000000001cb0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001cb5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001cb7         call       j_dcgettext                                 ; dcgettext
0000000000001cbc         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001cbf         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001cc2         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001cc7         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001cce         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000001cd5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001cda         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001cdc         call       j_dcgettext                                 ; dcgettext
0000000000001ce1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001ce4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001ce7         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001cec         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001cf3         lea        rsi, qword [aIInitialDoNotC]                ; argument "msgid" for method j_dcgettext, "  -i, --initial    do not convert tabs after non blanks\\n  -t, --tabs=N     have tabs N characters apart, not 8\\n"
0000000000001cfa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001cff         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001d01         call       j_dcgettext                                 ; dcgettext
0000000000001d06         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001d09         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001d0c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001d11         call       emit_tab_list_info                          ; emit_tab_list_info
0000000000001d16         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001d1d         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000001d24         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001d29         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001d2b         call       j_dcgettext                                 ; dcgettext
0000000000001d30         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001d33         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001d36         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001d3b         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001d42         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000001d49         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001d4e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001d50         call       j_dcgettext                                 ; dcgettext
0000000000001d55         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001d58         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001d5b         lea        rbx, qword [aExpand]                        ; "expand"
0000000000001d62         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001d67         lea        rax, qword [aExpand+7]                      ; 0x540b
0000000000001d6e         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000001d75         mov        qword [rsp+0xa8+var_48], 0x0
0000000000001d7e         mov        qword [rsp+0xa8+var_40], 0x0
0000000000001d87         mov        rdx, rsp
0000000000001d8a         mov        qword [rsp+0xa8+var_A8], rax
0000000000001d8e         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000001d95         mov        qword [rsp+0xa8+var_78], rcx
0000000000001d9a         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000001da1         mov        qword [rsp+0xa8+var_A0], rax
0000000000001da6         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000001dad         mov        qword [rsp+0xa8+var_68], rcx
0000000000001db2         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000001db9         mov        qword [rsp+0xa8+var_98], rax
0000000000001dbe         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000001dc5         mov        qword [rsp+0xa8+var_58], rcx
0000000000001dca         mov        qword [rsp+0xa8+var_90], rax
0000000000001dcf         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000001dd6         mov        qword [rsp+0xa8+var_88], rax
0000000000001ddb         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000001de2         mov        qword [rsp+0xa8+var_80], rax
0000000000001de7         mov        qword [rsp+0xa8+var_70], rax
0000000000001dec         mov        qword [rsp+0xa8+var_60], rax
0000000000001df1         mov        qword [rsp+0xa8+var_50], rax
0000000000001df6         nop        word [cs:rax+rax]

                     loc_1e00:
0000000000001e00         add        rdx, 0x10                                   ; CODE XREF=usage+541
0000000000001e04         mov        rdi, qword [rdx]
0000000000001e07         test       rdi, rdi
0000000000001e0a         je         loc_1e1f

0000000000001e0c         mov        ecx, 0x7
0000000000001e11         mov        rsi, rbx
0000000000001e14         rep  cmpsb byte [rsi], byte [rdi]
0000000000001e16         seta       al
0000000000001e19         sbb        al, 0x0
0000000000001e1b         test       al, al
0000000000001e1d         jne        loc_1e00

                     loc_1e1f:
0000000000001e1f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+522
0000000000001e23         xor        edi, edi
0000000000001e25         mov        edx, 0x5
0000000000001e2a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000001e31         test       r12, r12
0000000000001e34         je         loc_1efb

0000000000001e3a         call       j_dcgettext                                 ; dcgettext
0000000000001e3f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000001e46         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5481
0000000000001e4d         mov        rsi, rax
0000000000001e50         mov        edi, 0x1
0000000000001e55         xor        eax, eax
0000000000001e57         call       j___printf_chk                              ; __printf_chk
0000000000001e5c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000001e5e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000001e63         call       j_setlocale                                 ; setlocale
0000000000001e68         test       rax, rax
0000000000001e6b         je         loc_1e89

0000000000001e6d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x548f
0000000000001e74         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000001e79         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000001e7c         call       j_strncmp                                   ; strncmp
0000000000001e81         test       eax, eax
0000000000001e83         jne        loc_1f90

                     loc_1e89:
0000000000001e89         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+619, usage+949
0000000000001e90         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e92         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e97         call       j_dcgettext                                 ; dcgettext
0000000000001e9c         lea        rcx, qword [aExpand]                        ; "expand"
0000000000001ea3         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000001eaa         mov        rsi, rax
0000000000001ead         mov        edi, 0x1
0000000000001eb2         xor        eax, eax
0000000000001eb4         call       j___printf_chk                              ; __printf_chk
0000000000001eb9         cmp        r12, rbx
0000000000001ebc         lea        rcx, qword [aMulticallInvoc+10]             ; 0x5427
0000000000001ec3         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x60c1
0000000000001eca         cmove      rbx, rcx

                     loc_1ece:
0000000000001ece         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+900
0000000000001ed5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ed7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001edc         call       j_dcgettext                                 ; dcgettext
0000000000001ee1         mov        rcx, rbx
0000000000001ee4         mov        rsi, rax
0000000000001ee7         mov        rdx, r12
0000000000001eea         mov        edi, 0x1
0000000000001eef         xor        eax, eax
0000000000001ef1         call       j___printf_chk                              ; __printf_chk
0000000000001ef6         jmp        loc_1c56

                     loc_1efb:
0000000000001efb         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+564
0000000000001f00         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000001f07         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5481
0000000000001f0e         mov        rsi, rax
0000000000001f11         mov        edi, 0x1
0000000000001f16         xor        eax, eax
0000000000001f18         call       j___printf_chk                              ; __printf_chk
0000000000001f1d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000001f1f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000001f24         call       j_setlocale                                 ; setlocale
0000000000001f29         test       rax, rax
0000000000001f2c         je         loc_1f46

0000000000001f2e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x548f
0000000000001f35         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000001f3a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000001f3d         call       j_strncmp                                   ; strncmp
0000000000001f42         test       eax, eax
0000000000001f44         jne        loc_1f89

                     loc_1f46:
0000000000001f46         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+812
0000000000001f4d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f52         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f54         lea        r12, qword [aExpand]                        ; "expand"
0000000000001f5b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x5427
0000000000001f62         call       j_dcgettext                                 ; dcgettext
0000000000001f67         lea        rcx, qword [aExpand]                        ; "expand"
0000000000001f6e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000001f75         mov        rsi, rax
0000000000001f78         mov        edi, 0x1
0000000000001f7d         xor        eax, eax
0000000000001f7f         call       j___printf_chk                              ; __printf_chk
0000000000001f84         jmp        loc_1ece

                     loc_1f89:
0000000000001f89         lea        r12, qword [aExpand]                        ; "expand", CODE XREF=usage+836

                     loc_1f90:
0000000000001f90         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+643
0000000000001f97         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000001f9e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001fa0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001fa5         call       j_dcgettext                                 ; dcgettext
0000000000001faa         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001fad         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001fb0         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001fb5         jmp        loc_1e89
0000000000001fba         align      64                                          ; End of unwind block (FDE at 0x6724)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_extend_size:
0000000000001fc0         cmp        qword [extend_size], 0x0                    ; Begin of unwind block (FDE at 0x679c), extend_size, CODE XREF=parse_tab_stops+408, parse_tab_stops+773
0000000000001fc8         push       rbx
0000000000001fc9         mov        eax, 0x1
0000000000001fce         mov        rbx, rdi
0000000000001fd1         je         loc_1ff6

0000000000001fd3         lea        rsi, qword [aSpecifierOnlyA]                ; argument "msgid" for method j_dcgettext, "'/' specifier only allowed with the last value"
0000000000001fda         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001fdf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001fe1         call       j_dcgettext                                 ; dcgettext
0000000000001fe6         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001fe8         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001feb         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001fed         xor        eax, eax
0000000000001fef         call       j_error                                     ; error
0000000000001ff4         xor        eax, eax

                     loc_1ff6:
0000000000001ff6         mov        qword [extend_size], rbx                    ; extend_size, CODE XREF=set_extend_size+17
0000000000001ffd         pop        rbx
0000000000001ffe         ret
                        ; endp
0000000000001fff         align      8192                                        ; End of unwind block (FDE at 0x679c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_increment_size:
0000000000002000         cmp        qword [increment_size], 0x0                 ; Begin of unwind block (FDE at 0x67b8), increment_size, CODE XREF=parse_tab_stops+194, parse_tab_stops+269
0000000000002008         push       rbx
0000000000002009         mov        eax, 0x1
000000000000200e         mov        rbx, rdi
0000000000002011         je         loc_2036

0000000000002013         lea        rsi, qword [aSpecifierOnlyA_5818]           ; argument "msgid" for method j_dcgettext, "'+' specifier only allowed with the last value"
000000000000201a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000201f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002021         call       j_dcgettext                                 ; dcgettext
0000000000002026         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002028         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000202b         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000202d         xor        eax, eax
000000000000202f         call       j_error                                     ; error
0000000000002034         xor        eax, eax

                     loc_2036:
0000000000002036         mov        qword [increment_size], rbx                 ; increment_size, CODE XREF=set_increment_size+17
000000000000203d         pop        rbx
000000000000203e         ret
                        ; endp
000000000000203f         align      64                                          ; End of unwind block (FDE at 0x67b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     add_tab_stop:
0000000000002040         push       rbp                                         ; Begin of unwind block (FDE at 0x67d4), CODE XREF=parse_tab_stops+352, parse_tab_stops+768
0000000000002041         push       rbx
0000000000002042         mov        rbx, rdi
0000000000002045         sub        rsp, 0x8
0000000000002049         mov        rax, qword [first_free_tab]                 ; first_free_tab
0000000000002050         mov        rdi, qword [tab_list]                       ; tab_list
0000000000002057         mov        rsi, qword [n_tabs_allocated]               ; n_tabs_allocated
000000000000205e         test       rax, rax
0000000000002061         je         loc_2098

0000000000002063         lea        rdx, qword [rax*8]
000000000000206b         mov        rcx, qword [rdi+rdx-8]
0000000000002070         cmp        rcx, rbx
0000000000002073         jbe        loc_2142

0000000000002079         cmp        rax, rsi
000000000000207c         je         loc_20d0

000000000000207e         add        rax, 0x1
0000000000002082         mov        qword [rdi+rdx], rbx
0000000000002086         mov        qword [first_free_tab], rax                 ; first_free_tab
000000000000208d         add        rsp, 0x8
0000000000002091         pop        rbx
0000000000002092         pop        rbp
0000000000002093         ret
                        ; endp
0000000000002094         align      8

                     loc_2098:
0000000000002098         mov        rbp, rbx                                    ; CODE XREF=add_tab_stop+33

                     loc_209b:
000000000000209b         cmp        rax, rsi                                    ; CODE XREF=add_tab_stop+264
000000000000209e         je         loc_20d2

                     loc_20a0:
00000000000020a0         mov        qword [rdi+rax*8], rbx                      ; CODE XREF=add_tab_stop+210
00000000000020a4         cmp        qword [max_column_width], rbp               ; max_column_width
00000000000020ab         lea        rdx, qword [rax+1]
00000000000020af         mov        qword [first_free_tab], rdx                 ; first_free_tab
00000000000020b6         jae        loc_20bf

00000000000020b8         mov        qword [max_column_width], rbp               ; max_column_width

                     loc_20bf:
00000000000020bf         add        rsp, 0x8                                    ; CODE XREF=add_tab_stop+118
00000000000020c3         pop        rbx
00000000000020c4         pop        rbp
00000000000020c5         ret
                        ; endp
00000000000020c6         align      16

                     loc_20d0:
00000000000020d0         xor        ebp, ebp                                    ; CODE XREF=add_tab_stop+60

                     loc_20d2:
00000000000020d2         test       rdi, rdi                                    ; CODE XREF=add_tab_stop+94
00000000000020d5         je         loc_2118

00000000000020d7         movabs     rax, 0xaaaaaaaaaaaaaa9
00000000000020e1         cmp        rsi, rax
00000000000020e4         ja         loc_213d

00000000000020e6         mov        rax, rsi
00000000000020e9         shr        rax, 0x1
00000000000020ec         lea        rsi, qword [rsi+rax+1]

                     loc_20f1:
00000000000020f1         mov        qword [n_tabs_allocated], rsi               ; n_tabs_allocated, CODE XREF=add_tab_stop+251
00000000000020f8         shl        rsi, 0x3                                    ; argument #2 for method xrealloc
00000000000020fc         call       xrealloc                                    ; xrealloc
0000000000002101         mov        rdi, rax
0000000000002104         mov        qword [tab_list], rax                       ; tab_list
000000000000210b         mov        rax, qword [first_free_tab]                 ; first_free_tab
0000000000002112         jmp        loc_20a0
0000000000002114         align      8

                     loc_2118:
0000000000002118         test       rsi, rsi                                    ; CODE XREF=add_tab_stop+149
000000000000211b         mov        eax, 0x10
0000000000002120         mov        edx, 0x8
0000000000002125         cmove      rsi, rax
0000000000002129         mov        rax, rdx
000000000000212c         xor        ecx, ecx
000000000000212e         mul        rsi
0000000000002131         jo         loc_214d

                     loc_2133:
0000000000002133         test       rax, rax                                    ; CODE XREF=add_tab_stop+274
0000000000002136         js         loc_213d

0000000000002138         test       rcx, rcx
000000000000213b         je         loc_20f1

                     loc_213d:
000000000000213d         call       xalloc_die                                  ; xalloc_die, CODE XREF=add_tab_stop+164, add_tab_stop+246
                        ; endp

                     loc_2142:
0000000000002142         mov        rbp, rbx                                    ; CODE XREF=add_tab_stop+51
0000000000002145         sub        rbp, rcx
0000000000002148         jmp        loc_209b

                     loc_214d:
000000000000214d         mov        ecx, 0x1                                    ; CODE XREF=add_tab_stop+241
0000000000002152         jmp        loc_2133
0000000000002154         align      32                                          ; End of unwind block (FDE at 0x67d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     parse_tab_stops:
0000000000002160         push       r15                                         ; Begin of unwind block (FDE at 0x680c), CODE XREF=main+245, main+272, main+312
0000000000002162         push       r14
0000000000002164         push       r13
0000000000002166         push       r12
0000000000002168         push       rbp
0000000000002169         push       rbx
000000000000216a         sub        rsp, 0x18
000000000000216e         movzx      r15d, byte [rdi]
0000000000002172         test       r15b, r15b
0000000000002175         je         loc_2281

000000000000217b         mov        rbx, rdi
000000000000217e         xor        r14d, r14d
0000000000002181         mov        byte [rsp+0x48+var_40], 0x1
0000000000002186         mov        qword [rsp+0x48+var_48], 0x0
000000000000218e         xor        r13d, r13d
0000000000002191         xor        r12d, r12d
0000000000002194         xor        ebp, ebp
0000000000002196         jmp        loc_21fe
0000000000002198         align      32

                     loc_21a0:
00000000000021a0         call       j___ctype_b_loc                             ; __ctype_b_loc, CODE XREF=parse_tab_stops+162
00000000000021a5         mov        rsi, qword [rax]
00000000000021a8         movzx      ecx, r15b
00000000000021ac         test       byte [rsi+rcx*2], 0x1
00000000000021b0         jne        loc_2204

00000000000021b2         cmp        r15b, 0x2f
00000000000021b6         je         loc_22d8

00000000000021bc         cmp        r15b, 0x2b
00000000000021c0         je         loc_2318

00000000000021c6         movsx      edx, r15b
00000000000021ca         sub        edx, 0x30
00000000000021cd         cmp        edx, 0x9
00000000000021d0         ja         loc_2480

00000000000021d6         test       bpl, bpl
00000000000021d9         jne        loc_2338

00000000000021df         movsxd     r14, edx
00000000000021e2         mov        rax, rbx
00000000000021e5         mov        qword [rsp+0x48+var_48], rbx
00000000000021e9         mov        ebp, 0x1
00000000000021ee         nop

                     loc_21f0:
00000000000021f0         movzx      r15d, byte [rax+1]                          ; CODE XREF=parse_tab_stops+339, parse_tab_stops+365, parse_tab_stops+397, parse_tab_stops+429, parse_tab_stops+461, parse_tab_stops+604, parse_tab_stops+677, parse_tab_stops+749
00000000000021f5         lea        rbx, qword [rax+1]
00000000000021f9         test       r15b, r15b
00000000000021fc         je         loc_2248

                     loc_21fe:
00000000000021fe         cmp        r15b, 0x2c                                  ; CODE XREF=parse_tab_stops+54, parse_tab_stops+227
0000000000002202         jne        loc_21a0

                     loc_2204:
0000000000002204         test       bpl, bpl                                    ; CODE XREF=parse_tab_stops+80
0000000000002207         je         loc_22b0

000000000000220d         test       r12b, r12b
0000000000002210         mov        rdi, r14
0000000000002213         jne        loc_22f8

0000000000002219         test       r13b, r13b
000000000000221c         je         loc_22c0

0000000000002222         call       set_increment_size                          ; set_increment_size
0000000000002227         test       al, al
0000000000002229         mov        r13d, eax
000000000000222c         je         loc_24af

0000000000002232         mov        rax, rbx
0000000000002235         xor        ebp, ebp
0000000000002237         movzx      r15d, byte [rax+1]
000000000000223c         lea        rbx, qword [rax+1]
0000000000002240         test       r15b, r15b
0000000000002243         jne        loc_21fe

0000000000002245         nop        dword [rax]

                     loc_2248:
0000000000002248         test       bpl, bpl                                    ; CODE XREF=parse_tab_stops+156
000000000000224b         je         loc_2276

000000000000224d         cmp        byte [rsp+0x48+var_40], 0x0
0000000000002252         je         loc_24af

0000000000002258         test       r12b, r12b
000000000000225b         mov        rdi, r14
000000000000225e         jne        loc_2465

0000000000002264         test       r13b, r13b
0000000000002267         je         loc_2452

000000000000226d         call       set_increment_size                          ; set_increment_size
0000000000002272         mov        byte [rsp+0x48+var_40], al

                     loc_2276:
0000000000002276         cmp        byte [rsp+0x48+var_40], 0x0                 ; CODE XREF=parse_tab_stops+235
000000000000227b         je         loc_24af

                     loc_2281:
0000000000002281         add        rsp, 0x18                                   ; CODE XREF=parse_tab_stops+21, parse_tab_stops+787
0000000000002285         pop        rbx
0000000000002286         pop        rbp
0000000000002287         pop        r12
0000000000002289         pop        r13
000000000000228b         pop        r14
000000000000228d         pop        r15
000000000000228f         ret
                        ; endp

                     loc_2290:
0000000000002290         lea        rax, qword [r14+r14*4]                      ; CODE XREF=parse_tab_stops+485
0000000000002294         movsxd     rdx, edx
0000000000002297         lea        rax, qword [rdx+rax*2]
000000000000229b         cmp        rax, r14
000000000000229e         jb         loc_234b

00000000000022a4         mov        r14, rax
00000000000022a7         nop        word [rax+rax]

                     loc_22b0:
00000000000022b0         mov        rax, rbx                                    ; CODE XREF=parse_tab_stops+167
00000000000022b3         jmp        loc_21f0
00000000000022b8         align      64

                     loc_22c0:
00000000000022c0         call       add_tab_stop                                ; add_tab_stop, CODE XREF=parse_tab_stops+188
00000000000022c5         mov        r12d, r13d
00000000000022c8         xor        ebp, ebp
00000000000022ca         mov        rax, rbx
00000000000022cd         jmp        loc_21f0
00000000000022d2         align      8

                     loc_22d8:
00000000000022d8         test       bpl, bpl                                    ; CODE XREF=parse_tab_stops+86
00000000000022db         jne        loc_23c8

00000000000022e1         xor        r13d, r13d
00000000000022e4         mov        rax, rbx
00000000000022e7         mov        r12d, 0x1
00000000000022ed         jmp        loc_21f0
00000000000022f2         align      8

                     loc_22f8:
00000000000022f8         call       set_extend_size                             ; set_extend_size, CODE XREF=parse_tab_stops+179
00000000000022fd         test       al, al
00000000000022ff         mov        r12d, eax
0000000000002302         je         loc_24af

0000000000002308         mov        rax, rbx
000000000000230b         xor        ebp, ebp
000000000000230d         jmp        loc_21f0
0000000000002312         align      8

                     loc_2318:
0000000000002318         test       bpl, bpl                                    ; CODE XREF=parse_tab_stops+96
000000000000231b         jne        loc_2410

0000000000002321         xor        r12d, r12d
0000000000002324         mov        rax, rbx
0000000000002327         mov        r13d, 0x1
000000000000232d         jmp        loc_21f0
0000000000002332         align      8

                     loc_2338:
0000000000002338         movabs     rax, 0x1999999999999999                     ; CODE XREF=parse_tab_stops+121
0000000000002342         cmp        r14, rax
0000000000002345         jbe        loc_2290

                     loc_234b:
000000000000234b         mov        r15, qword [rsp+0x48+var_48]                ; CODE XREF=parse_tab_stops+318
000000000000234f         lea        rsi, qword [a0123456789]                    ; argument "__accept" for method j_strspn, "0123456789"
0000000000002356         mov        rdi, r15                                    ; argument "__s" for method j_strspn
0000000000002359         call       j_strspn                                    ; strspn
000000000000235e         mov        rdi, r15
0000000000002361         mov        rsi, rax
0000000000002364         mov        rbx, rax
0000000000002367         mov        qword [rsp+0x48+var_48], r15
000000000000236b         call       xstrndup                                    ; xstrndup
0000000000002370         mov        rdi, rax
0000000000002373         mov        r15, rax
0000000000002376         call       quote                                       ; quote
000000000000237b         lea        rsi, qword [aTabStopIsTooLa]                ; argument "msgid" for method j_dcgettext, "tab stop is too large %s"
0000000000002382         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002387         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002389         mov        qword [rsp+0x48+var_40], rax
000000000000238e         call       j_dcgettext                                 ; dcgettext
0000000000002393         mov        rcx, qword [rsp+0x48+var_40]
0000000000002398         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000239b         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000239d         xor        eax, eax
000000000000239f         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000023a1         call       j_error                                     ; error
00000000000023a6         mov        rdi, r15                                    ; argument "__ptr" for method j_free
00000000000023a9         call       j_free                                      ; free
00000000000023ae         mov        rax, qword [rsp+0x48+var_48]
00000000000023b2         mov        byte [rsp+0x48+var_40], 0x0
00000000000023b7         lea        rax, qword [rax+rbx-1]
00000000000023bc         jmp        loc_21f0
00000000000023c1         align      8

                     loc_23c8:
00000000000023c8         mov        rdi, rbx                                    ; CODE XREF=parse_tab_stops+379
00000000000023cb         xor        r13d, r13d
00000000000023ce         call       quote                                       ; quote
00000000000023d3         lea        rsi, qword [aSpecifierNotAt_5848]           ; argument "msgid" for method j_dcgettext, "'/' specifier not at start of number: %s"
00000000000023da         mov        r12, rax
00000000000023dd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023e2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023e4         call       j_dcgettext                                 ; dcgettext
00000000000023e9         mov        rcx, r12
00000000000023ec         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000023ef         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000023f1         xor        eax, eax
00000000000023f3         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000023f5         mov        r12d, ebp
00000000000023f8         call       j_error                                     ; error
00000000000023fd         mov        rax, rbx
0000000000002400         mov        byte [rsp+0x48+var_40], 0x0
0000000000002405         jmp        loc_21f0
000000000000240a         align      16

                     loc_2410:
0000000000002410         mov        rdi, rbx                                    ; CODE XREF=parse_tab_stops+443
0000000000002413         mov        r13d, ebp
0000000000002416         call       quote                                       ; quote
000000000000241b         lea        rsi, qword [aSpecifierNotAt]                ; argument "msgid" for method j_dcgettext, "'+' specifier not at start of number: %s"
0000000000002422         mov        r12, rax
0000000000002425         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000242a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000242c         call       j_dcgettext                                 ; dcgettext
0000000000002431         mov        rcx, r12
0000000000002434         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002437         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002439         xor        eax, eax
000000000000243b         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000243d         xor        r12d, r12d
0000000000002440         call       j_error                                     ; error
0000000000002445         mov        rax, rbx
0000000000002448         mov        byte [rsp+0x48+var_40], 0x0
000000000000244d         jmp        loc_21f0

                     loc_2452:
0000000000002452         add        rsp, 0x18                                   ; CODE XREF=parse_tab_stops+263
0000000000002456         pop        rbx
0000000000002457         pop        rbp
0000000000002458         pop        r12
000000000000245a         pop        r13
000000000000245c         pop        r14
000000000000245e         pop        r15
0000000000002460         jmp        add_tab_stop                                ; add_tab_stop
                        ; endp

                     loc_2465:
0000000000002465         call       set_extend_size                             ; set_extend_size, CODE XREF=parse_tab_stops+254
000000000000246a         mov        byte [rsp+0x48+var_40], al
000000000000246e         cmp        byte [rsp+0x48+var_40], 0x0
0000000000002473         jne        loc_2281

0000000000002479         jmp        loc_24af
000000000000247b         align      128

                     loc_2480:
0000000000002480         mov        rdi, rbx                                    ; CODE XREF=parse_tab_stops+112
0000000000002483         call       quote                                       ; quote
0000000000002488         lea        rsi, qword [aTabSizeContain]                ; argument "msgid" for method j_dcgettext, "tab size contains invalid character(s): %s"
000000000000248f         mov        rbx, rax
0000000000002492         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002497         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002499         call       j_dcgettext                                 ; dcgettext
000000000000249e         mov        rcx, rbx
00000000000024a1         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000024a4         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000024a6         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000024a8         xor        eax, eax
00000000000024aa         call       j_error                                     ; error

                     loc_24af:
00000000000024af         mov        edi, 0x1                                    ; argument "__status" for method j_exit, CODE XREF=parse_tab_stops+204, parse_tab_stops+242, parse_tab_stops+283, parse_tab_stops+418, parse_tab_stops+793
00000000000024b4         call       j_exit                                      ; exit
                        ; endp
00000000000024b9         align      64                                          ; End of unwind block (FDE at 0x680c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     finalize_tab_stops:
00000000000024c0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x6874), CODE XREF=main+322
00000000000024c4         mov        rsi, qword [first_free_tab]                 ; first_free_tab
00000000000024cb         mov        rdi, qword [tab_list]                       ; tab_list
00000000000024d2         test       rsi, rsi
00000000000024d5         je         loc_2554

00000000000024d7         mov        r8, qword [rdi]
00000000000024da         test       r8, r8
00000000000024dd         mov        rcx, r8
00000000000024e0         je         loc_2590

00000000000024e6         xor        eax, eax
00000000000024e8         jmp        loc_2509
00000000000024ea         align      16

                     loc_24f0:
00000000000024f0         mov        rdx, qword [rdi+rax*8]                      ; CODE XREF=finalize_tab_stops+80
00000000000024f4         test       rdx, rdx
00000000000024f7         je         loc_2590

00000000000024fd         cmp        rcx, rdx
0000000000002500         jae        loc_25b4

0000000000002506         mov        rcx, rdx

                     loc_2509:
0000000000002509         add        rax, 0x1                                    ; CODE XREF=finalize_tab_stops+40
000000000000250d         cmp        rsi, rax
0000000000002510         jne        loc_24f0

0000000000002512         mov        rax, qword [increment_size]                 ; increment_size
0000000000002519         test       rax, rax
000000000000251c         je         loc_252c

000000000000251e         cmp        qword [extend_size], 0x0                    ; extend_size
0000000000002526         jne        loc_25d8

                     loc_252c:
000000000000252c         cmp        rsi, 0x1                                    ; CODE XREF=finalize_tab_stops+92
0000000000002530         je         loc_2542

                     loc_2532:
0000000000002532         mov        qword [tab_size], 0x0                       ; tab_size, CODE XREF=finalize_tab_stops+137

                     loc_253d:
000000000000253d         add        rsp, 0x8                                    ; CODE XREF=finalize_tab_stops+146
0000000000002541         ret
                        ; endp

                     loc_2542:
0000000000002542         or         rax, qword [extend_size]                    ; extend_size, CODE XREF=finalize_tab_stops+112
0000000000002549         jne        loc_2532

000000000000254b         mov        qword [tab_size], r8                        ; tab_size
0000000000002552         jmp        loc_253d

                     loc_2554:
0000000000002554         mov        rdx, qword [increment_size]                 ; increment_size, CODE XREF=finalize_tab_stops+21
000000000000255b         mov        rax, qword [extend_size]                    ; extend_size
0000000000002562         test       rdx, rdx
0000000000002565         je         loc_2582

0000000000002567         test       rax, rax
000000000000256a         jne        loc_25d8

000000000000256c         mov        rax, rdx

                     loc_256f:
000000000000256f         mov        qword [max_column_width], rax               ; max_column_width, CODE XREF=finalize_tab_stops+206
0000000000002576         mov        qword [tab_size], rax                       ; tab_size
000000000000257d         add        rsp, 0x8
0000000000002581         ret
                        ; endp

                     loc_2582:
0000000000002582         test       rax, rax                                    ; CODE XREF=finalize_tab_stops+165
0000000000002585         mov        edx, 0x8
000000000000258a         cmove      rax, rdx
000000000000258e         jmp        loc_256f

                     loc_2590:
0000000000002590         lea        rsi, qword [aTabSizeCannotB]                ; argument "msgid" for method j_dcgettext, "tab size cannot be 0", CODE XREF=finalize_tab_stops+32, finalize_tab_stops+55
0000000000002597         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000259c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000259e         call       j_dcgettext                                 ; dcgettext
00000000000025a3         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000025a5         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000025a8         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000025ad         xor        eax, eax
00000000000025af         call       j_error                                     ; error

                     loc_25b4:
00000000000025b4         lea        rsi, qword [aTabSizesMustBe]                ; argument "msgid" for method j_dcgettext, "tab sizes must be ascending", CODE XREF=finalize_tab_stops+64
00000000000025bb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000025c0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000025c2         call       j_dcgettext                                 ; dcgettext
00000000000025c7         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000025c9         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000025cc         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000025d1         xor        eax, eax
00000000000025d3         call       j_error                                     ; error

                     loc_25d8:
00000000000025d8         lea        rsi, qword [aSpecifierIsMut]                ; argument "msgid" for method j_dcgettext, "'/' specifier is mutually exclusive with '+'", CODE XREF=finalize_tab_stops+102, finalize_tab_stops+170
00000000000025df         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000025e4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000025e6         call       j_dcgettext                                 ; dcgettext
00000000000025eb         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000025ed         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000025f0         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000025f5         xor        eax, eax
00000000000025f7         call       j_error                                     ; error
00000000000025fc         nop        dword [rax]                                 ; End of unwind block (FDE at 0x6874)
                     get_next_tab_column:
0000000000002600         mov        rcx, qword [tab_size]                       ; Begin of unwind block (FDE at 0x6898), tab_size, CODE XREF=main+727
0000000000002607         mov        byte [rdx], 0x0
000000000000260a         test       rcx, rcx
000000000000260d         jne        loc_2670

000000000000260f         mov        rcx, qword [rsi]
0000000000002612         mov        rax, qword [first_free_tab]                 ; first_free_tab
0000000000002619         cmp        rax, rcx
000000000000261c         jbe        loc_264e

000000000000261e         mov        r9, qword [tab_list]                        ; tab_list
0000000000002625         mov        r8, qword [r9+rcx*8]
0000000000002629         cmp        rdi, r8
000000000000262c         jb         loc_267f

000000000000262e         add        rcx, 0x1
0000000000002632         jmp        loc_2646
0000000000002634         align      8

                     loc_2638:
0000000000002638         add        rcx, 0x1                                    ; CODE XREF=get_next_tab_column+76
000000000000263c         mov        r8, qword [r9+rcx*8-8]
0000000000002641         cmp        rdi, r8
0000000000002644         jb         loc_267f

                     loc_2646:
0000000000002646         cmp        rax, rcx                                    ; CODE XREF=get_next_tab_column+50
0000000000002649         mov        qword [rsi], rcx
000000000000264c         jne        loc_2638

                     loc_264e:
000000000000264e         mov        rcx, qword [extend_size]                    ; extend_size, CODE XREF=get_next_tab_column+28
0000000000002655         test       rcx, rcx
0000000000002658         jne        loc_2670

000000000000265a         mov        r8, qword [increment_size]                  ; increment_size
0000000000002661         test       r8, r8
0000000000002664         jne        loc_2688

0000000000002666         mov        byte [rdx], 0x1
0000000000002669         jmp        loc_267f
000000000000266b         align      16

                     loc_2670:
0000000000002670         mov        rax, rdi                                    ; CODE XREF=get_next_tab_column+13, get_next_tab_column+88
0000000000002673         xor        edx, edx
0000000000002675         lea        r8, qword [rcx+rdi]
0000000000002679         div        rcx
000000000000267c         sub        r8, rdx

                     loc_267f:
000000000000267f         mov        rax, r8                                     ; CODE XREF=get_next_tab_column+44, get_next_tab_column+68, get_next_tab_column+105, get_next_tab_column+166
0000000000002682         ret
                        ; endp
0000000000002683         align      8

                     loc_2688:
0000000000002688         mov        rdx, qword [tab_list]                       ; tab_list, CODE XREF=get_next_tab_column+100
000000000000268f         lea        rcx, qword [r8+rdi]
0000000000002693         sub        rdi, qword [rdx+rax*8-8]
0000000000002698         xor        edx, edx
000000000000269a         mov        rax, rdi
000000000000269d         div        r8
00000000000026a0         sub        rcx, rdx
00000000000026a3         mov        r8, rcx
00000000000026a6         jmp        loc_267f
00000000000026a8         align      16                                          ; End of unwind block (FDE at 0x6898)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_file_list:
00000000000026b0         lea        rax, qword [stdin_argv]                     ; Begin of unwind block (FDE at 0x68ac), stdin_argv, CODE XREF=main+344
00000000000026b7         test       rdi, rdi
00000000000026ba         mov        byte [have_read_stdin], 0x0                 ; have_read_stdin
00000000000026c1         cmove      rdi, rax
00000000000026c5         mov        qword [file_list], rdi                      ; file_list
00000000000026cc         ret
                        ; endp
00000000000026cd         align      16                                          ; End of unwind block (FDE at 0x68ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32


                     next_file:
00000000000026d0         push       r12                                         ; Begin of unwind block (FDE at 0x68c0), CODE XREF=main+351, main+594
00000000000026d2         push       rbp
00000000000026d3         push       rbx
00000000000026d4         sub        rsp, 0x10
00000000000026d8         test       rdi, rdi
00000000000026db         je         loc_271f

00000000000026dd         mov        rsi, qword [prev_file.6959]                 ; prev_file.6959
00000000000026e4         test       rsi, rsi
00000000000026e7         je         loc_28b2

00000000000026ed         test       byte [rdi], 0x20
00000000000026f0         mov        rbp, rdi
00000000000026f3         jne        loc_2870

                     loc_26f9:
00000000000026f9         lea        rbx, qword [aLibs+10]                       ; 0x5b9a, CODE XREF=next_file+477
0000000000002700         mov        ecx, 0x2
0000000000002705         mov        rdi, rbx
0000000000002708         rep  cmpsb byte [rsi], byte [rdi]
000000000000270a         mov        rdi, rbp
000000000000270d         seta       al
0000000000002710         sbb        al, 0x0
0000000000002712         test       al, al
0000000000002714         jne        loc_2820

000000000000271a         call       j_clearerr_unlocked                         ; clearerr_unlocked

                     loc_271f:
000000000000271f         mov        rax, qword [file_list]                      ; file_list, CODE XREF=next_file+11, next_file+343, next_file+407
0000000000002726         lea        rdx, qword [rax+8]
000000000000272a         mov        qword [file_list], rdx                      ; file_list
0000000000002731         mov        rdx, qword [rax]
0000000000002734         test       rdx, rdx
0000000000002737         je         loc_2810

000000000000273d         lea        rbx, qword [aLibs+10]                       ; 0x5b9a
0000000000002744         lea        rbp, qword [aWriteError+10]                 ; 0x54f7
000000000000274b         jmp        loc_27b0
000000000000274d         align      16

                     loc_2750:
0000000000002750         mov        rax, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=next_file+244
0000000000002757         mov        byte [have_read_stdin], 0x1                 ; have_read_stdin
000000000000275e         test       rax, rax
0000000000002761         jne        loc_27e0

                     loc_2763:
0000000000002763         xor        edi, edi                                    ; CODE XREF=next_file+270
0000000000002765         mov        esi, 0x3
000000000000276a         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000276f         mov        r12, rax
0000000000002772         call       j___errno_location                          ; __errno_location
0000000000002777         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002779         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5b53
0000000000002780         xor        eax, eax
0000000000002782         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002784         mov        rcx, r12
0000000000002787         call       j_error                                     ; error
000000000000278c         mov        rax, qword [file_list]                      ; file_list
0000000000002793         mov        dword [exit_status], 0x1                    ; exit_status
000000000000279d         lea        rdx, qword [rax+8]
00000000000027a1         mov        qword [file_list], rdx                      ; file_list
00000000000027a8         mov        rdx, qword [rax]
00000000000027ab         test       rdx, rdx
00000000000027ae         je         loc_2810

                     loc_27b0:
00000000000027b0         mov        ecx, 0x2                                    ; CODE XREF=next_file+123
00000000000027b5         mov        rsi, rdx
00000000000027b8         mov        rdi, rbx
00000000000027bb         rep  cmpsb byte [rsi], byte [rdi]
00000000000027bd         seta       al
00000000000027c0         sbb        al, 0x0
00000000000027c2         test       al, al
00000000000027c4         je         loc_2750

00000000000027c6         mov        rdi, rdx                                    ; argument "__filename" for method j_fopen
00000000000027c9         mov        rsi, rbp                                    ; argument "__modes" for method j_fopen
00000000000027cc         mov        qword [rsp+0x28+var_20], rdx
00000000000027d1         call       j_fopen                                     ; fopen
00000000000027d6         test       rax, rax
00000000000027d9         mov        rdx, qword [rsp+0x28+var_20]
00000000000027de         je         loc_2763

                     loc_27e0:
00000000000027e0         mov        rdi, rax                                    ; CODE XREF=next_file+145
00000000000027e3         mov        esi, 0x2
00000000000027e8         mov        qword [rsp+0x28+var_20], rax
00000000000027ed         mov        qword [prev_file.6959], rdx                 ; prev_file.6959
00000000000027f4         call       fadvise                                     ; fadvise
00000000000027f9         mov        rax, qword [rsp+0x28+var_20]
00000000000027fe         add        rsp, 0x10
0000000000002802         pop        rbx
0000000000002803         pop        rbp
0000000000002804         pop        r12
0000000000002806         ret
                        ; endp
0000000000002807         align      16

                     loc_2810:
0000000000002810         add        rsp, 0x10                                   ; CODE XREF=next_file+103, next_file+222
0000000000002814         xor        eax, eax
0000000000002816         pop        rbx
0000000000002817         pop        rbp
0000000000002818         pop        r12
000000000000281a         ret
                        ; endp
000000000000281b         align      32

                     loc_2820:
0000000000002820         call       rpl_fclose                                  ; rpl_fclose, CODE XREF=next_file+68
0000000000002825         test       eax, eax
0000000000002827         je         loc_271f

000000000000282d         mov        rdx, qword [prev_file.6959]                 ; prev_file.6959
0000000000002834         mov        esi, 0x3
0000000000002839         xor        edi, edi
000000000000283b         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002840         mov        rbx, rax
0000000000002843         call       j___errno_location                          ; __errno_location
0000000000002848         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000284a         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5b53
0000000000002851         mov        rcx, rbx
0000000000002854         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002856         xor        eax, eax
0000000000002858         call       j_error                                     ; error
000000000000285d         mov        dword [exit_status], 0x1                    ; exit_status
0000000000002867         jmp        loc_271f
000000000000286c         align      16

                     loc_2870:
0000000000002870         mov        rdx, rsi                                    ; CODE XREF=next_file+35
0000000000002873         xor        edi, edi
0000000000002875         mov        esi, 0x3
000000000000287a         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000287f         mov        rbx, rax
0000000000002882         call       j___errno_location                          ; __errno_location
0000000000002887         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002889         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5b53
0000000000002890         mov        rcx, rbx
0000000000002893         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002895         xor        eax, eax
0000000000002897         call       j_error                                     ; error
000000000000289c         mov        dword [exit_status], 0x1                    ; exit_status
00000000000028a6         mov        rsi, qword [prev_file.6959]                 ; prev_file.6959
00000000000028ad         jmp        loc_26f9

                     loc_28b2:
00000000000028b2         lea        rcx, qword [__PRETTY_FUNCTION__.6961]       ; argument "__function" for method j___assert_fail, "next_file", CODE XREF=next_file+23
00000000000028b9         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/expand-common.c"
00000000000028c0         lea        rdi, qword [aPrevfile]                      ; argument "__assertion" for method j___assert_fail, "prev_file"
00000000000028c7         mov        edx, 0x155                                  ; argument "__line" for method j___assert_fail
00000000000028cc         call       j___assert_fail                             ; __assert_fail
                        ; endp
00000000000028d1         align      32                                          ; End of unwind block (FDE at 0x68c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cleanup_file_list_stdin:
00000000000028e0         cmp        byte [have_read_stdin], 0x0                 ; Begin of unwind block (FDE at 0x6904), have_read_stdin, CODE XREF=main+612
00000000000028e7         jne        loc_28f0

00000000000028e9         ret
                        ; endp
00000000000028eb         align      16

                     loc_28f0:
00000000000028f0         sub        rsp, 0x8                                    ; CODE XREF=cleanup_file_list_stdin+7
00000000000028f4         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
00000000000028fb         call       rpl_fclose                                  ; rpl_fclose
0000000000002900         test       eax, eax
0000000000002902         jne        loc_2909

0000000000002904         add        rsp, 0x8
0000000000002908         ret
                        ; endp

                     loc_2909:
0000000000002909         call       j___errno_location                          ; __errno_location, CODE XREF=cleanup_file_list_stdin+34
000000000000290e         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002910         lea        rdx, qword [aLibs+10]                       ; argument "__format" for method j_error, 0x5b9a
0000000000002917         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000291c         xor        eax, eax
000000000000291e         call       j_error                                     ; error
0000000000002923         nop        dword [rax]                                 ; End of unwind block (FDE at 0x6904)
0000000000002926         nop        word [cs:rax+rax]
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_tab_list_info:
0000000000002930         push       rbx                                         ; Begin of unwind block (FDE at 0x6920), CODE XREF=usage+273
0000000000002931         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002938         lea        rsi, qword [aTTabslistUseCo]                ; argument "msgid" for method j_dcgettext, "  -t, --tabs=LIST  use comma separated list of tab positions\\n"
000000000000293f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002944         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002946         call       j_dcgettext                                 ; dcgettext
000000000000294b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000294e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002951         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002956         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000295d         lea        rsi, qword [aTheLastSpecifi]                ; argument "msgid" for method j_dcgettext, "                     The last specified position can be prefixed with '/'\\n                     to specify a tab size to use after the last\\n                     explicitly specified tab stop.  Also a prefix of '+'\\n                     can be used to align r…"
0000000000002964         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002966         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000296b         call       j_dcgettext                                 ; dcgettext
0000000000002970         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002973         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002976         pop        rbx
0000000000002977         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp
000000000000297c         align      128                                         ; End of unwind block (FDE at 0x6920)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002980         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x693c), file_name
0000000000002987         ret
                        ; endp
0000000000002988         align      16                                          ; End of unwind block (FDE at 0x693c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002990         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x6950), ignore_EPIPE
0000000000002997         ret
                        ; endp
0000000000002998         align      32                                          ; End of unwind block (FDE at 0x6950)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
00000000000029a0         push       rbp                                         ; Begin of unwind block (FDE at 0x6964), DATA XREF=main+96
00000000000029a1         push       rbx
00000000000029a2         sub        rsp, 0x8
00000000000029a6         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000029ad         call       close_stream                                ; close_stream
00000000000029b2         test       eax, eax
00000000000029b4         je         loc_29cc

00000000000029b6         call       j___errno_location                          ; __errno_location
00000000000029bb         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
00000000000029c2         mov        rbx, rax
00000000000029c5         je         loc_29e3

00000000000029c7         cmp        dword [rax], 0x20
00000000000029ca         jne        loc_29e3

                     loc_29cc:
00000000000029cc         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
00000000000029d3         call       close_stream                                ; close_stream
00000000000029d8         test       eax, eax
00000000000029da         jne        loc_2a22

00000000000029dc         add        rsp, 0x8
00000000000029e0         pop        rbx
00000000000029e1         pop        rbp
00000000000029e2         ret
                        ; endp

                     loc_29e3:
00000000000029e3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
00000000000029ea         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000029ec         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000029f1         call       j_dcgettext                                 ; dcgettext
00000000000029f6         mov        rdi, qword [file_name]                      ; file_name
00000000000029fd         mov        rbp, rax
0000000000002a00         test       rdi, rdi
0000000000002a03         je         loc_2a2d

0000000000002a05         call       quotearg_colon                              ; quotearg_colon
0000000000002a0a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000002a0c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002a13         mov        rcx, rax
0000000000002a16         mov        r8, rbp
0000000000002a19         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002a1b         xor        eax, eax
0000000000002a1d         call       j_error                                     ; error

                     loc_2a22:
0000000000002a22         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002a28         call       j__exit                                     ; _exit
                        ; endp

                     loc_2a2d:
0000000000002a2d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
0000000000002a2f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5b53
0000000000002a36         mov        rcx, rax
0000000000002a39         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002a3b         xor        eax, eax
0000000000002a3d         call       j_error                                     ; error
0000000000002a42         jmp        loc_2a22
0000000000002a44         align      16                                          ; End of unwind block (FDE at 0x6964)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
0000000000002a50         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x6994)
                        ; endp
0000000000002a55         align      32                                          ; End of unwind block (FDE at 0x6994)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
0000000000002a60         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x69a8), CODE XREF=next_file+292
0000000000002a63         je         loc_2a80

0000000000002a65         push       rbx
0000000000002a66         mov        ebx, esi
0000000000002a68         call       j_fileno                                    ; fileno
0000000000002a6d         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
0000000000002a6f         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
0000000000002a71         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
0000000000002a73         pop        rbx
0000000000002a74         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
0000000000002a76         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
0000000000002a7b         align      128

                     loc_2a80:
0000000000002a80         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
0000000000002a82         align      16                                          ; End of unwind block (FDE at 0x69a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000002a90         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x69c4), CODE XREF=main+43
0000000000002a93         push       rbx
0000000000002a94         je         loc_2b0d

0000000000002a96         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000002a9b         mov        rbx, rdi
0000000000002a9e         call       j_strrchr                                   ; strrchr
0000000000002aa3         test       rax, rax
0000000000002aa6         je         loc_2afd

0000000000002aa8         lea        r8, qword [rax+1]
0000000000002aac         mov        rdx, r8
0000000000002aaf         sub        rdx, rbx
0000000000002ab2         cmp        rdx, 0x6
0000000000002ab6         jle        loc_2afd

0000000000002ab8         lea        rsi, qword [rax-6]
0000000000002abc         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000002ac3         mov        ecx, 0x7
0000000000002ac8         rep  cmpsb byte [rsi], byte [rdi]
0000000000002aca         seta       dl
0000000000002acd         sbb        dl, 0x0
0000000000002ad0         test       dl, dl
0000000000002ad2         jne        loc_2afd

0000000000002ad4         lea        rdi, qword [aLibs+8]                        ; 0x5b98
0000000000002adb         mov        ecx, 0x3
0000000000002ae0         mov        rsi, r8
0000000000002ae3         mov        rbx, r8
0000000000002ae6         rep  cmpsb byte [rsi], byte [rdi]
0000000000002ae8         seta       dl
0000000000002aeb         sbb        dl, 0x0
0000000000002aee         test       dl, dl
0000000000002af0         jne        loc_2afd

0000000000002af2         lea        rbx, qword [rax+4]
0000000000002af6         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_2afd:
0000000000002afd         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002b04         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
0000000000002b0b         pop        rbx
0000000000002b0c         ret
                        ; endp

                     loc_2b0d:
0000000000002b0d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002b14         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
0000000000002b1b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002b20         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002b25         call       j_fwrite                                    ; fwrite
0000000000002b2a         call       j_abort                                     ; abort
                        ; endp
0000000000002b2f         align      16                                          ; End of unwind block (FDE at 0x69c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002b30         push       rbp                                         ; Begin of unwind block (FDE at 0x69e4), CODE XREF=sub_3360+2597, sub_3360+2619
0000000000002b31         push       rbx
0000000000002b32         mov        rbp, rdi
0000000000002b35         mov        ebx, esi
0000000000002b37         sub        rsp, 0x8
0000000000002b3b         call       locale_charset                              ; locale_charset
0000000000002b40         movzx      edx, byte [rax]
0000000000002b43         and        edx, 0xffffffdf
0000000000002b46         cmp        dl, 0x55
0000000000002b49         je         loc_2bc0

0000000000002b4b         cmp        dl, 0x47
0000000000002b4e         je         loc_2b70

                     loc_2b50:
0000000000002b50         lea        rax, qword [aLibs+27]                       ; 0x5bab, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002b57         lea        rdx, qword [aLibs+29]                       ; 0x5bad
0000000000002b5e         cmp        ebx, 0x9
0000000000002b61         cmovne     rax, rdx
0000000000002b65         add        rsp, 0x8
0000000000002b69         pop        rbx
0000000000002b6a         pop        rbp
0000000000002b6b         ret
                        ; endp
0000000000002b6c         align      16

                     loc_2b70:
0000000000002b70         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000002b74         and        edx, 0xffffffdf
0000000000002b77         cmp        dl, 0x42
0000000000002b7a         jne        loc_2b50

0000000000002b7c         cmp        byte [rax+2], 0x31
0000000000002b80         jne        loc_2b50

0000000000002b82         cmp        byte [rax+3], 0x38
0000000000002b86         jne        loc_2b50

0000000000002b88         cmp        byte [rax+4], 0x30
0000000000002b8c         jne        loc_2b50

0000000000002b8e         cmp        byte [rax+5], 0x33
0000000000002b92         jne        loc_2b50

0000000000002b94         cmp        byte [rax+6], 0x30
0000000000002b98         jne        loc_2b50

0000000000002b9a         cmp        byte [rax+7], 0x0
0000000000002b9e         jne        loc_2b50

0000000000002ba0         cmp        byte [rbp], 0x60
0000000000002ba4         lea        rax, qword [aLibs+20]                       ; 0x5ba4
0000000000002bab         lea        rdx, qword [aLibs+24]                       ; 0x5ba8
0000000000002bb2         cmovne     rax, rdx
0000000000002bb6         add        rsp, 0x8
0000000000002bba         pop        rbx
0000000000002bbb         pop        rbp
0000000000002bbc         ret
                        ; endp
0000000000002bbd         align      64

                     loc_2bc0:
0000000000002bc0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000002bc4         and        edx, 0xffffffdf
0000000000002bc7         cmp        dl, 0x54
0000000000002bca         jne        loc_2b50

0000000000002bcc         movzx      edx, byte [rax+2]
0000000000002bd0         and        edx, 0xffffffdf
0000000000002bd3         cmp        dl, 0x46
0000000000002bd6         jne        loc_2b50

0000000000002bdc         cmp        byte [rax+3], 0x2d
0000000000002be0         jne        loc_2b50

0000000000002be6         cmp        byte [rax+4], 0x38
0000000000002bea         jne        loc_2b50

0000000000002bf0         cmp        byte [rax+5], 0x0
0000000000002bf4         jne        loc_2b50

0000000000002bfa         cmp        byte [rbp], 0x60
0000000000002bfe         lea        rax, qword [aLibs+12]                       ; 0x5b9c
0000000000002c05         lea        rdx, qword [aLibs+16]                       ; 0x5ba0
0000000000002c0c         cmovne     rax, rdx
0000000000002c10         add        rsp, 0x8
0000000000002c14         pop        rbx
0000000000002c15         pop        rbp
0000000000002c16         ret
                        ; endp
0000000000002c17         align      32                                          ; End of unwind block (FDE at 0x69e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002c20         push       r15                                         ; Begin of unwind block (FDE at 0x6a28), CODE XREF=sub_3360+1165, sub_3360+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002c22         push       r14
0000000000002c24         mov        r15d, r8d
0000000000002c27         push       r13
0000000000002c29         push       r12
0000000000002c2b         mov        r14, rdi
0000000000002c2e         push       rbp
0000000000002c2f         push       rbx
0000000000002c30         mov        ebx, r9d
0000000000002c33         mov        r13, rsi
0000000000002c36         mov        rbp, rcx
0000000000002c39         and        ebx, 0x2
0000000000002c3c         sub        rsp, 0xb8
0000000000002c43         mov        rax, qword [rsp+0xe8+arg_0]
0000000000002c4b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002c50         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002c55         mov        dword [rsp+0xe8+var_70], r9d
0000000000002c5a         mov        qword [rsp+0xe8+var_C8], rax
0000000000002c5f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002c67         mov        qword [rsp+0xe8+var_80], rax
0000000000002c6c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000002c74         mov        qword [rsp+0xe8+var_88], rax
0000000000002c79         mov        rax, qword [fs:0x28]
0000000000002c82         mov        qword [rsp+0xe8+var_40], rax
0000000000002c8a         xor        eax, eax
0000000000002c8c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000002c91         cmp        r15d, 0xa
0000000000002c95         mov        qword [rsp+0xe8+var_90], rax
0000000000002c9a         ja         loc_3e4f

0000000000002ca0         lea        rcx, qword [switch_table_5c00]              ; switch_table_5c00
0000000000002ca7         mov        edx, r15d
0000000000002caa         movsxd     rax, dword [rcx+rdx*4]
0000000000002cae         add        rax, rcx
0000000000002cb1         jmp        rax                                         ; switch statement using table at 0x5c00, with 11 cases, 0x2cb3,0x3884,0x38e0,0x3935,0x397a,0x39b4,0x3a5a,0x3a94,0x3c88

                     loc_2cb3:
0000000000002cb3         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_3360+1318
0000000000002cb8         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000002cbd         xor        r12d, r12d
0000000000002cc0         mov        qword [rsp+0xe8+var_98], 0x0
0000000000002cc9         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000002cce         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_2cd3:
0000000000002cd3         lea        rax, qword [aLibs+29]                       ; 0x5bad, CODE XREF=sub_3360+1876
0000000000002cda         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002ce3         xor        r15d, r15d
0000000000002ce6         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000002cee         mov        qword [rsp+0xe8+var_A0], rax

                     loc_2cf3:
0000000000002cf3         xor        r11d, r11d                                  ; CODE XREF=sub_3360+180, sub_3360+1400, sub_3360+1488, sub_3360+1557, sub_3360+1615, sub_3360+1781, sub_3360+1839, sub_3360+2408, sub_3360+2485
0000000000002cf6         mov        rax, rbp
0000000000002cf9         mov        r8d, r12d
0000000000002cfc         mov        rbp, r11
0000000000002cff         mov        r11, rax
0000000000002d02         nop        word [rax+rax]

                     loc_2d08:
0000000000002d08         cmp        r11, rbp                                    ; CODE XREF=sub_2e10+194
0000000000002d0b         setne      r12b
0000000000002d0f         cmp        r11, 0xffffffffffffffff
0000000000002d13         jne        loc_2d22

0000000000002d15         mov        rax, qword [rsp+0xe8+var_D8]
0000000000002d1a         cmp        byte [rax+rbp], 0x0
0000000000002d1e         setne      r12b

                     loc_2d22:
0000000000002d22         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000002d25         je         loc_3380

0000000000002d2b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002d30         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002d35         lea        r9, qword [rdi+rbp]
0000000000002d39         setne      al
0000000000002d3c         and        al, byte [rsp+0xe8+var_DB]
0000000000002d40         mov        r10d, eax
0000000000002d43         je         loc_2df0

0000000000002d49         mov        rax, qword [rsp+0xe8+var_D0]
0000000000002d4e         test       rax, rax
0000000000002d51         je         loc_3180

0000000000002d57         cmp        r11, 0xffffffffffffffff
0000000000002d5b         lea        rbx, qword [rbp+rax]
0000000000002d60         jne        loc_2d90

0000000000002d62         cmp        rax, 0x1
0000000000002d66         jbe        loc_2d90

0000000000002d68         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002d6d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000002d72         mov        qword [rsp+0xe8+var_C0], r9
0000000000002d77         call       j_strlen                                    ; strlen
0000000000002d7c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002d82         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000002d88         mov        r11, rax
0000000000002d8b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_2d90:
0000000000002d90         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000002d93         mov        byte [rsp+0xe8+var_C0], r10b
0000000000002d98         ja         loc_3350

0000000000002d9e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000002da3         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000002da8         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000002dab         mov        qword [rsp+0xe8+var_A8], r11
0000000000002db0         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002db5         mov        qword [rsp+0xe8+var_B8], r9
0000000000002dba         call       j_memcmp                                    ; memcmp
0000000000002dbf         test       eax, eax
0000000000002dc1         mov        r9, qword [rsp+0xe8+var_B8]
0000000000002dc6         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002dcc         mov        r11, qword [rsp+0xe8+var_A8]
0000000000002dd1         jne        loc_3350

0000000000002dd7         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002ddc         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002de2         jne        loc_3d65

0000000000002de8         nop        dword [rax+rax]

                     loc_2df0:
0000000000002df0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_3340+19
0000000000002df4         cmp        bl, 0x7e
0000000000002df7         ja         loc_3118

0000000000002dfd         lea        rcx, qword [switch_table_5c00+44]           ; 0x5c2c
0000000000002e04         movzx      edx, bl
0000000000002e07         movsxd     rax, dword [rcx+rdx*4]
0000000000002e0b         add        rax, rcx
0000000000002e0e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2e10:
0000000000002e10         xor        r10d, r10d
0000000000002e13         cmp        r11, 0x1
0000000000002e17         setne      al
0000000000002e1a         cmp        r11, 0xffffffffffffffff
0000000000002e1e         jne        loc_2e2c

0000000000002e20         mov        rax, qword [rsp+arg_8]
0000000000002e25         cmp        byte [rax+1], 0x0
0000000000002e29         setne      al

                     loc_2e2c:
0000000000002e2c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2e10+14
0000000000002e31         sete       dl
0000000000002e34         test       al, al
0000000000002e36         je         loc_3088

                     loc_2e3c:
0000000000002e3c         xor        r12d, r12d                                  ; CODE XREF=sub_3080+11
0000000000002e3f         xor        eax, eax
0000000000002e41         nop        dword [rax]
                        ; endp

                     loc_2e48:
0000000000002e48         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_3030+50, sub_3100+119
0000000000002e4d         jne        loc_2f62

0000000000002e53         test       dl, dl
0000000000002e55         jne        loc_2f62

                     loc_2e5b:
0000000000002e5b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_2f10+87
0000000000002e60         test       rsi, rsi
0000000000002e63         je         loc_2e79

0000000000002e65         mov        edx, ebx
0000000000002e67         shr        dl, 0x5
0000000000002e6a         movzx      edx, dl
0000000000002e6d         mov        edx, dword [rsi+rdx*4]
0000000000002e70         bt         edx, ebx
0000000000002e73         jb         loc_2fc3

                     loc_2e79:
0000000000002e79         test       r10b, r10b                                  ; CODE XREF=sub_2e10+83, sub_2f10+93
0000000000002e7c         jne        loc_2fc3

0000000000002e82         xor        eax, 0x1
0000000000002e85         add        rbp, 0x1
0000000000002e89         and        eax, r8d

                     loc_2e8c:
0000000000002e8c         test       al, al                                      ; CODE XREF=sub_3360+936
0000000000002e8e         je         loc_2eb0

0000000000002e90         cmp        r13, r15
0000000000002e93         jbe        loc_2e9a

0000000000002e95         mov        byte [r14+r15], 0x27

                     loc_2e9a:
0000000000002e9a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2e10+131
0000000000002e9e         cmp        r13, rax
0000000000002ea1         jbe        loc_2ea9

0000000000002ea3         mov        byte [r14+r15+1], 0x27

                     loc_2ea9:
0000000000002ea9         add        r15, 0x2                                    ; CODE XREF=sub_2e10+145
0000000000002ead         xor        r8d, r8d

                     loc_2eb0:
0000000000002eb0         cmp        r15, r13                                    ; CODE XREF=sub_2e10+126, sub_2f10+275, sub_3360+869
0000000000002eb3         jae        loc_2eb9

0000000000002eb5         mov        byte [r14+r15], bl

                     loc_2eb9:
0000000000002eb9         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_2e10+163
0000000000002ebe         add        r15, 0x1
0000000000002ec2         mov        eax, 0x0
0000000000002ec7         test       r12b, r12b
0000000000002eca         cmove      edi, eax
0000000000002ecd         mov        byte [rsp+0xe8+var_DA], dil
0000000000002ed2         jmp        loc_2d08
0000000000002ed7         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2ee0:
0000000000002ee0         xor        r10d, r10d
0000000000002ee3         mov        eax, dword [rsp+arg_0]
0000000000002ee7         cmp        eax, 0x2
0000000000002eea         je         loc_34a8

0000000000002ef0         cmp        eax, 0x5
0000000000002ef3         je         loc_3468

0000000000002ef9         cmp        eax, 0x2
0000000000002efc         mov        ebx, 0x3f
0000000000002f01         sete       dl
0000000000002f04         xor        r12d, r12d
0000000000002f07         xor        eax, eax
0000000000002f09         jmp        sub_2e10+56
                        ; endp
0000000000002f0e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2f10:
0000000000002f10         xor        r10d, r10d
0000000000002f13         cmp        dword [rsp+arg_0], 0x2
0000000000002f18         je         loc_3420

0000000000002f1e         mov        byte [rsp+arg_74], r12b
0000000000002f23         xor        edx, edx
0000000000002f25         xor        eax, eax
0000000000002f27         mov        ebx, 0x27
0000000000002f2c         jmp        sub_2e10+56
                        ; endp
0000000000002f31         nop        dword [rax]
0000000000002f38         mov        edx, 0x9
0000000000002f3d         mov        ebx, 0x74

                     loc_2f42:
0000000000002f42         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_30d0+10, sub_31c0+37, sub_3300+53
0000000000002f47         sete       al
0000000000002f4a         and        al, byte [rsp+arg_7]
0000000000002f4e         jne        sub_3080+30

0000000000002f54         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_2f10+114
0000000000002f59         jne        loc_2fc0

                     loc_2f5b:
0000000000002f5b         mov        ebx, edx                                    ; CODE XREF=sub_3030+18
0000000000002f5d         xor        r12d, r12d
0000000000002f60         xor        eax, eax
                        ; endp

                     loc_2f62:
0000000000002f62         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_2e10+61, sub_2e10+69
0000000000002f67         jne        loc_2e5b

0000000000002f6d         jmp        loc_2e79
0000000000002f72         nop        word [rax+rax]
0000000000002f78         mov        edx, 0x8
0000000000002f7d         mov        ebx, 0x62
0000000000002f82         jmp        sub_2f10+68
0000000000002f84         nop        dword [rax]
0000000000002f88         cmp        dword [rsp+8], 0x2
0000000000002f8d         je         sub_3360                                    ; sub_3360
0000000000002f93         cmp        byte [rsp+0xd], 0x0
0000000000002f98         je         sub_31a0+16

                     loc_2f9e:
0000000000002f9e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_31a0+8
0000000000002fa3         je         loc_31b0

0000000000002fa9         cmp        qword [rsp+arg_10], 0x0
0000000000002faf         jne        loc_336b

0000000000002fb5         mov        ebx, 0x5c
0000000000002fba         nop        word [rax+rax]
                        ; endp

                     loc_2fc0:
0000000000002fc0         xor        r12d, r12d                                  ; CODE XREF=sub_2f10+73, sub_3300+29
                        ; endp

                     loc_2fc3:
0000000000002fc3         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2e10+99, sub_2e10+108
0000000000002fc8         sete       dl
0000000000002fcb         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002fd0         mov        eax, edx
0000000000002fd2         jne        loc_3828

0000000000002fd8         mov        eax, r8d
0000000000002fdb         xor        eax, 0x1
0000000000002fde         and        al, dl
0000000000002fe0         je         loc_3011

0000000000002fe2         cmp        r13, r15
0000000000002fe5         jbe        loc_2fec

0000000000002fe7         mov        byte [r14+r15], 0x27

                     loc_2fec:
0000000000002fec         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_2f10+213
0000000000002ff0         cmp        r13, rdx
0000000000002ff3         jbe        loc_2ffb

0000000000002ff5         mov        byte [r14+r15+1], 0x24

                     loc_2ffb:
0000000000002ffb         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_2f10+227
0000000000002fff         cmp        r13, rdx
0000000000003002         jbe        loc_300a

0000000000003004         mov        byte [r14+r15+2], 0x27

                     loc_300a:
000000000000300a         add        r15, 0x3                                    ; CODE XREF=sub_2f10+242
000000000000300e         mov        r8d, eax

                     loc_3011:
0000000000003011         cmp        r13, r15                                    ; CODE XREF=sub_2f10+208
0000000000003014         jbe        loc_301b

0000000000003016         mov        byte [r14+r15], 0x5c

                     loc_301b:
000000000000301b         add        r15, 0x1                                    ; CODE XREF=sub_2f10+260
000000000000301f         add        rbp, 0x1
0000000000003023         jmp        loc_2eb0
0000000000003028         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3030:
0000000000003030         cmp        byte [rsp+arg_5], 0x0
0000000000003035         jne        loc_3203

000000000000303b         xor        edx, edx
000000000000303d         test       byte [rsp+arg_70], 0x1
0000000000003042         je         loc_2f5b

0000000000003048         add        rbp, 0x1
000000000000304c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000003051         nop        dword [rax]
0000000000003058         cmp        dword [rsp+8], 0x2
000000000000305d         sete       dl
0000000000003060         xor        eax, eax
0000000000003062         jmp        sub_2e10+56
0000000000003067         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3070:
0000000000003070         mov        edx, 0x7
0000000000003075         mov        ebx, 0x61
000000000000307a         jmp        sub_2f10+68
                        ; endp
000000000000307f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3080:
0000000000003080         cmp        dword [rsp+8], 0x2
0000000000003085         sete       dl
                        ; endp

                     loc_3088:
0000000000003088         test       rbp, rbp                                    ; CODE XREF=sub_2e10+38, sub_32a0+35
000000000000308b         jne        loc_2e3c

0000000000003091         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_32d0+43
0000000000003096         and        al, dl
0000000000003098         je         sub_2e10+56

000000000000309e         mov        rbp, r11
00000000000030a1         mov        dword [rsp+arg_0], 0x2
00000000000030a9         jmp        sub_3360+1097
                        ; endp
00000000000030ae         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_30b0:
00000000000030b0         cmp        dword [rsp+arg_0], 0x2
00000000000030b5         sete       dl
00000000000030b8         xor        r12d, r12d
00000000000030bb         jmp        sub_3080+17
                        ; endp
00000000000030bd         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_30c0:
00000000000030c0         cmp        dword [rsp+arg_0], 0x2
00000000000030c5         mov        ebx, 0x20
00000000000030ca         sete       dl
00000000000030cd         jmp        sub_3080+17
                        ; endp
00000000000030cf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_30d0:
00000000000030d0         mov        edx, 0xd
00000000000030d5         mov        ebx, 0x72
00000000000030da         jmp        loc_2f42
00000000000030df         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_30e0:
00000000000030e0         mov        edx, 0xc
00000000000030e5         mov        ebx, 0x66
00000000000030ea         jmp        sub_2f10+68
                        ; endp
00000000000030ef         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_30f0:
00000000000030f0         mov        edx, 0xb
00000000000030f5         mov        ebx, 0x76
00000000000030fa         jmp        sub_2f10+68
                        ; endp
00000000000030ff         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3100:
0000000000003100         mov        edx, 0xa
0000000000003105         mov        ebx, 0x6e
000000000000310a         jmp        sub_2f10+50
                        ; endp
000000000000310f         align      16

                     loc_3110:
0000000000003110         xor        r10d, r10d                                  ; CODE XREF=sub_3100+135
0000000000003113         nop        dword [rax+rax]

                     loc_3118:
0000000000003118         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000311e         jne        loc_34c8

0000000000003124         mov        qword [rsp+0xe8+var_B0], r11
0000000000003129         mov        byte [rsp+0xe8+var_B8], r8b
000000000000312e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003133         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003138         mov        rcx, qword [rax]
000000000000313b         movzx      edx, bl
000000000000313e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003144         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000314a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000314f         mov        edi, 0x1
0000000000003154         movzx      eax, word [rcx+rdx*2]
0000000000003158         and        ax, 0x4000
000000000000315c         setne      r12b
0000000000003160         sete       al
0000000000003163         and        al, byte [rsp+0xe8+var_DB]

                     loc_3167:
0000000000003167         test       al, al                                      ; CODE XREF=sub_3360+2221
0000000000003169         jne        loc_3b01

000000000000316f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003174         sete       dl
0000000000003177         jmp        loc_2e48
000000000000317c         align      128

                     loc_3180:
0000000000003180         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000003184         cmp        bl, 0x7e
0000000000003187         ja         loc_3110

0000000000003189         lea        rcx, qword [switch_table_5c00+552]          ; 0x5e28
0000000000003190         movzx      edx, bl
0000000000003193         movsxd     rax, dword [rcx+rdx*4]
0000000000003197         add        rax, rcx
000000000000319a         jmp        rax
                        ; endp
000000000000319c         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_31a0:
00000000000031a0         xor        r10d, r10d
00000000000031a3         cmp        byte [rsp+arg_5], 0x0
00000000000031a8         jne        loc_2f9e

00000000000031ae         nop

                     loc_31b0:
00000000000031b0         mov        edx, 0x5c                                   ; CODE XREF=sub_2f10+136, sub_2f10+147
00000000000031b5         mov        ebx, 0x5c
00000000000031ba         jmp        sub_2f10+68
                        ; endp
00000000000031bf         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_31c0:
00000000000031c0         mov        edx, 0xc
00000000000031c5         xor        r10d, r10d
00000000000031c8         mov        ebx, 0x66
00000000000031cd         jmp        sub_2f10+68
                        ; endp
00000000000031d2         nop        word [rax+rax]
00000000000031d8         mov        edx, 0xa
00000000000031dd         xor        r10d, r10d
00000000000031e0         mov        ebx, 0x6e
00000000000031e5         jmp        sub_2f10+50
00000000000031ea         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_31f0:
00000000000031f0         mov        ebx, 0x61
00000000000031f5         jmp        sub_2f10+176
                        ; endp
00000000000031fa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3200:
0000000000003200         xor        r10d, r10d
                        ; endp

                     loc_3203:
0000000000003203         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3030+5
0000000000003208         sete       dl
000000000000320b         cmp        byte [rsp+arg_7], 0x0
0000000000003210         jne        loc_3daa

0000000000003216         mov        eax, r8d
0000000000003219         mov        rcx, r15
000000000000321c         xor        eax, 0x1
000000000000321f         and        al, dl
0000000000003221         je         loc_3250

0000000000003223         cmp        r13, r15
0000000000003226         jbe        loc_322d

0000000000003228         mov        byte [r14+r15], 0x27

                     loc_322d:
000000000000322d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3200+38
0000000000003231         cmp        r13, rcx
0000000000003234         jbe        loc_323c

0000000000003236         mov        byte [r14+r15+1], 0x24

                     loc_323c:
000000000000323c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3200+52
0000000000003240         cmp        r13, rcx
0000000000003243         ja         loc_3879

                     loc_3249:
0000000000003249         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_3360+1311
000000000000324d         mov        r8d, eax

                     loc_3250:
0000000000003250         cmp        r13, rcx                                    ; CODE XREF=sub_3200+33
0000000000003253         jbe        loc_325a

0000000000003255         mov        byte [r14+rcx], 0x5c

                     loc_325a:
000000000000325a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3200+83
000000000000325f         lea        r15, qword [rcx+1]
0000000000003263         je         loc_3869

0000000000003269         lea        rax, qword [rbp+1]
000000000000326d         cmp        rax, r11
0000000000003270         jae        loc_328b

0000000000003272         mov        rax, qword [rsp+arg_8]
0000000000003277         movzx      eax, byte [rax+rbp+1]
000000000000327c         mov        byte [rsp+arg_20], al
0000000000003280         sub        eax, 0x30
0000000000003283         cmp        al, 0x9
0000000000003285         jbe        loc_3ab9

                     loc_328b:
000000000000328b         mov        eax, r12d                                   ; CODE XREF=sub_3200+112
000000000000328e         mov        ebx, 0x30
0000000000003293         xor        r12d, r12d
0000000000003296         jmp        sub_2e10+56
                        ; endp
000000000000329b         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_32a0:
00000000000032a0         cmp        dword [rsp+arg_0], 0x2
00000000000032a5         mov        r12d, r10d
00000000000032a8         sete       dl
00000000000032ab         xor        r10d, r10d
00000000000032ae         xor        eax, eax
00000000000032b0         jmp        sub_2e10+56
                        ; endp
00000000000032b5         nop        dword [rax]
00000000000032b8         cmp        dword [rsp+8], 0x2
00000000000032bd         sete       dl
00000000000032c0         xor        r10d, r10d
00000000000032c3         jmp        sub_3080+8
00000000000032c8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_32d0:
00000000000032d0         cmp        dword [rsp+8], 0x2
00000000000032d5         sete       dl
00000000000032d8         xor        r10d, r10d
00000000000032db         xor        r12d, r12d
00000000000032de         jmp        sub_3080+17
                        ; endp
00000000000032e3         nop        dword [rax+rax]
00000000000032e8         cmp        dword [rsp+8], 0x2
00000000000032ed         mov        r12d, r10d
00000000000032f0         mov        ebx, 0x20
00000000000032f5         sete       dl
00000000000032f8         xor        r10d, r10d
00000000000032fb         jmp        sub_3080+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3300:
0000000000003300         mov        edx, 0xd
0000000000003305         xor        r10d, r10d
0000000000003308         mov        ebx, 0x72
000000000000330d         jmp        sub_2f10+50
                        ; endp
0000000000003312         nop        word [rax+rax]
0000000000003318         mov        ebx, 0x76
000000000000331d         jmp        sub_2f10+176
0000000000003322         nop        word [rax+rax]
0000000000003328         mov        edx, 0x9
000000000000332d         xor        r10d, r10d
0000000000003330         mov        ebx, 0x74
0000000000003335         jmp        sub_2f10+50
000000000000333a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3340:
0000000000003340         mov        ebx, 0x62
0000000000003345         jmp        sub_2f10+176
                        ; endp
000000000000334a         nop        word [rax+rax]

                     loc_3350:
0000000000003350         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000003353         jmp        loc_2df0
0000000000003358         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_3360:
0000000000003360         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2f10+125
0000000000003365         jne        sub_3360+2416
                        ; endp

                     loc_336b:
000000000000336b         add        rbp, 0x1                                    ; CODE XREF=sub_2f10+159
000000000000336f         mov        eax, r8d
0000000000003372         xor        r12d, r12d
0000000000003375         mov        ebx, 0x5c
000000000000337a         jmp        sub_2e10+124
                        ; endp
000000000000337f         align      128

                     loc_3380:
0000000000003380         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000003385         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000338a         mov        r12d, r8d
000000000000338d         mov        rbp, r11
0000000000003390         sete       dl
0000000000003393         mov        eax, ebx
0000000000003395         test       r15, r15
0000000000003398         sete       cl
000000000000339b         and        eax, edx
000000000000339d         and        al, cl
000000000000339f         jne        loc_3e06

00000000000033a5         mov        eax, ebx
00000000000033a7         xor        eax, 0x1
00000000000033aa         and        dl, al
00000000000033ac         je         loc_3d1c

00000000000033b2         cmp        byte [rsp+0xe8+var_6C], 0x0
00000000000033b7         je         loc_3d1a

00000000000033bd         cmp        byte [rsp+0xe8+var_DA], 0x0
00000000000033c2         jne        loc_3dbd

00000000000033c8         test       r13, r13
00000000000033cb         sete       al
00000000000033ce         cmp        qword [rsp+0xe8+var_98], 0x0
00000000000033d4         setne      dl
00000000000033d7         and        al, dl
00000000000033d9         je         loc_3dfc

00000000000033df         mov        r13, qword [rsp+0xe8+var_98]

                     loc_33e4:
00000000000033e4         lea        rbx, qword [aLibs+29]                       ; 0x5bad, CODE XREF=sub_3360+2781
00000000000033eb         mov        byte [r14], 0x27
00000000000033ef         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000033f7         mov        r15d, 0x1
00000000000033fd         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003406         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000340b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003410         mov        byte [rsp+0xe8+var_6C], al
0000000000003414         jmp        loc_2cf3
0000000000003419         align      32

                     loc_3420:
0000000000003420         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2f10+8
0000000000003425         jne        sub_3360+2416

000000000000342b         test       r13, r13
000000000000342e         je         loc_3830

0000000000003434         xor        edx, edx
0000000000003436         cmp        qword [rsp+arg_48], 0x0
000000000000343c         jne        loc_3830

                     loc_3442:
0000000000003442         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_3360+1284, sub_3360+2794
0000000000003447         add        r15, 0x3
000000000000344b         xor        eax, eax
000000000000344d         mov        byte [rsp+arg_74], r12b
0000000000003452         xor        r8d, r8d
0000000000003455         mov        r13, rdx
0000000000003458         mov        ebx, 0x27
000000000000345d         jmp        sub_2e10+105
                        ; endp
0000000000003462         align      8

                     loc_3468:
0000000000003468         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_2ee0+19
000000000000346d         je         loc_3490

000000000000346f         lea        rcx, qword [rbp+2]
0000000000003473         cmp        rcx, r11
0000000000003476         jae        loc_3490

0000000000003478         mov        rax, qword [rsp+arg_8]
000000000000347d         cmp        byte [rax+rbp+1], 0x3f
0000000000003482         je         loc_3c12

0000000000003488         nop        dword [rax+rax]

                     loc_3490:
0000000000003490         xor        edx, edx                                    ; CODE XREF=sub_3360+269, sub_3360+278, sub_3360+2233, sub_3360+2253
0000000000003492         xor        r12d, r12d
0000000000003495         xor        eax, eax
0000000000003497         mov        ebx, 0x3f
000000000000349c         jmp        sub_2e10+56
                        ; endp
00000000000034a1         align      8

                     loc_34a8:
00000000000034a8         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2ee0+10
00000000000034ad         jne        loc_3cd0

00000000000034b3         xor        r12d, r12d
00000000000034b6         xor        eax, eax
00000000000034b8         mov        ebx, 0x3f
00000000000034bd         jmp        sub_2e10+105
                        ; endp
00000000000034c2         align      8

                     loc_34c8:
00000000000034c8         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3100+30
00000000000034d0         cmp        r11, 0xffffffffffffffff
00000000000034d4         mov        qword [rsp+0xe8+var_48], 0x0
00000000000034e0         mov        qword [rsp+0xe8+var_C0], rax
00000000000034e5         jne        loc_3514

00000000000034e7         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
00000000000034ec         mov        byte [rsp+0xe8+var_A8], r8b
00000000000034f1         mov        byte [rsp+0xe8+var_B0], r10b
00000000000034f6         mov        qword [rsp+0xe8+var_B8], r9
00000000000034fb         call       j_strlen                                    ; strlen
0000000000003500         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000003506         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000350c         mov        r11, rax
000000000000350f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3514:
0000000000003514         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_3360+389
000000000000351c         xor        ecx, ecx
000000000000351e         mov        byte [rsp+0xe8+var_6A], bl
0000000000003522         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003527         mov        rbx, rcx
000000000000352a         mov        qword [rsp+0xe8+var_60], r9
0000000000003532         mov        qword [rsp+0xe8+var_B0], rax
0000000000003537         mov        byte [rsp+0xe8+var_69], r10b
000000000000353c         mov        qword [rsp+0xe8+var_68], r15
0000000000003544         mov        qword [rsp+0xe8+var_A8], r14
0000000000003549         mov        qword [rsp+0xe8+var_78], r13
000000000000354e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_3553:
0000000000003553         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_3360+623
0000000000003558         lea        r14, qword [rbp+rbx]
000000000000355d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000003562         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000003567         mov        rdi, qword [rsp+0xe8+var_B0]
000000000000356c         lea        r13, qword [rax+r14]
0000000000003570         sub        rdx, r14
0000000000003573         mov        rsi, r13
0000000000003576         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000357b         test       rax, rax
000000000000357e         mov        r15, rax
0000000000003581         je         loc_35d1

0000000000003583         cmp        rax, 0xffffffffffffffff
0000000000003587         je         loc_3ba5

000000000000358d         cmp        rax, 0xfffffffffffffffe
0000000000003591         je         loc_3b31

0000000000003597         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000359c         sete       al
000000000000359f         and        al, byte [rsp+0xe8+var_D9]
00000000000035a3         jne        loc_3740

                     loc_35a9:
00000000000035a9         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_3360+996, sub_3360+1031
00000000000035b0         call       j_iswprint                                  ; iswprint
00000000000035b5         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
00000000000035ba         test       eax, eax
00000000000035bc         mov        eax, 0x0
00000000000035c1         cmove      r12d, eax
00000000000035c5         add        rbx, r15
00000000000035c8         call       j_mbsinit                                   ; mbsinit
00000000000035cd         test       eax, eax
00000000000035cf         je         loc_3553

                     loc_35d1:
00000000000035d1         mov        edx, r12d                                   ; CODE XREF=sub_3360+545
00000000000035d4         mov        rdi, rbx
00000000000035d7         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000035dd         xor        edx, 0x1
00000000000035e0         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000035e5         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000035eb         and        dl, byte [rsp+0xe8+var_DB]
00000000000035ef         mov        r15, qword [rsp+0xe8+var_68]
00000000000035f7         mov        r14, qword [rsp+0xe8+var_A8]
00000000000035fc         mov        r13, qword [rsp+0xe8+var_78]
0000000000003601         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_3606:
0000000000003606         cmp        rdi, 0x1                                    ; CODE XREF=sub_3360+2112, sub_3360+2168
000000000000360a         jbe        loc_3c0b

                     loc_3610:
0000000000003610         mov        rcx, rdi                                    ; CODE XREF=sub_3360+1961
0000000000003613         xor        esi, esi
0000000000003615         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000361b         add        rcx, rbp
000000000000361e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003623         jmp        loc_36de
0000000000003628         align      16

                     loc_3630:
0000000000003630         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3360+896
0000000000003635         sete       al
0000000000003638         test       r9b, r9b
000000000000363b         jne        loc_3af0

0000000000003641         mov        esi, r8d
0000000000003644         xor        esi, 0x1
0000000000003647         and        al, sil
000000000000364a         je         loc_367b

000000000000364c         cmp        r13, r15
000000000000364f         jbe        loc_3656

0000000000003651         mov        byte [r14+r15], 0x27

                     loc_3656:
0000000000003656         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_3360+751
000000000000365a         cmp        r13, rsi
000000000000365d         jbe        loc_3665

000000000000365f         mov        byte [r14+r15+1], 0x24

                     loc_3665:
0000000000003665         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_3360+765
0000000000003669         cmp        r13, rsi
000000000000366c         jbe        loc_3674

000000000000366e         mov        byte [r14+r15+2], 0x27

                     loc_3674:
0000000000003674         add        r15, 0x3                                    ; CODE XREF=sub_3360+780
0000000000003678         mov        r8d, eax

                     loc_367b:
000000000000367b         cmp        r13, r15                                    ; CODE XREF=sub_3360+746
000000000000367e         jbe        loc_3685

0000000000003680         mov        byte [r14+r15], 0x5c

                     loc_3685:
0000000000003685         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3360+798
0000000000003689         cmp        r13, rax
000000000000368c         jbe        loc_369b

000000000000368e         mov        eax, ebx
0000000000003690         shr        al, 0x6
0000000000003693         add        eax, 0x30
0000000000003696         mov        byte [r14+r15+1], al

                     loc_369b:
000000000000369b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3360+812
000000000000369f         cmp        r13, rax
00000000000036a2         jbe        loc_36b4

00000000000036a4         mov        eax, ebx
00000000000036a6         shr        al, 0x3
00000000000036a9         and        eax, 0x7
00000000000036ac         add        eax, 0x30
00000000000036af         mov        byte [r14+r15+2], al

                     loc_36b4:
00000000000036b4         and        ebx, 0x7                                    ; CODE XREF=sub_3360+834
00000000000036b7         add        rbp, 0x1
00000000000036bb         add        r15, 0x3
00000000000036bf         add        ebx, 0x30
00000000000036c2         cmp        rbp, rcx
00000000000036c5         jae        loc_2eb0

00000000000036cb         mov        esi, edx

                     loc_36cd:
00000000000036cd         cmp        r13, r15                                    ; CODE XREF=sub_3360+985, sub_3360+1969
00000000000036d0         jbe        loc_36d6

00000000000036d2         mov        byte [r14+r15], bl

                     loc_36d6:
00000000000036d6         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_3360+880
00000000000036da         add        r15, 0x1

                     loc_36de:
00000000000036de         test       dl, dl                                      ; CODE XREF=sub_3360+707
00000000000036e0         jne        loc_3630

00000000000036e6         mov        eax, esi
00000000000036e8         xor        eax, 0x1
00000000000036eb         and        eax, r8d
00000000000036ee         test       r10b, r10b
00000000000036f1         je         loc_3701

00000000000036f3         cmp        r13, r15
00000000000036f6         jbe        loc_36fd

00000000000036f8         mov        byte [r14+r15], 0x5c

                     loc_36fd:
00000000000036fd         add        r15, 0x1                                    ; CODE XREF=sub_3360+918

                     loc_3701:
0000000000003701         add        rbp, 0x1                                    ; CODE XREF=sub_3360+913
0000000000003705         cmp        rbp, rcx
0000000000003708         jae        loc_2e8c

000000000000370e         test       al, al
0000000000003710         je         loc_3b0e

0000000000003716         cmp        r13, r15
0000000000003719         jbe        loc_3720

000000000000371b         mov        byte [r14+r15], 0x27

                     loc_3720:
0000000000003720         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3360+953
0000000000003724         cmp        r13, rax
0000000000003727         jbe        loc_372f

0000000000003729         mov        byte [r14+r15+1], 0x27

                     loc_372f:
000000000000372f         add        r15, 0x2                                    ; CODE XREF=sub_3360+967
0000000000003733         xor        r10d, r10d
0000000000003736         xor        r8d, r8d
0000000000003739         jmp        loc_36cd
000000000000373b         align      64

                     loc_3740:
0000000000003740         cmp        r15, 0x1                                    ; CODE XREF=sub_3360+579
0000000000003744         je         loc_35a9

000000000000374a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000374f         lea        rcx, qword [rdi+r15]
0000000000003753         lea        rdx, qword [rdi+r14+1]
0000000000003758         lea        r8, qword [rcx+r14]
000000000000375c         jmp        loc_376d
000000000000375e         align      32

                     loc_3760:
0000000000003760         add        rdx, 0x1                                    ; CODE XREF=sub_3360+1046, sub_3360+1072
0000000000003764         cmp        r8, rdx
0000000000003767         je         loc_35a9

                     loc_376d:
000000000000376d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_3360+1020
0000000000003770         sub        ecx, 0x5b
0000000000003773         cmp        cl, 0x21
0000000000003776         ja         loc_3760

0000000000003778         mov        esi, 0x1
000000000000377d         shl        rsi, cl
0000000000003780         mov        rcx, rsi
0000000000003783         movabs     rsi, 0x20000002b
000000000000378d         test       rcx, rsi
0000000000003790         je         loc_3760

0000000000003792         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003797         mov        r13, qword [rsp+0xe8+var_78]
000000000000379c         mov        rbp, qword [rsp+0xe8+var_B8]
00000000000037a1         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_37a9:
00000000000037a9         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3360+1227, sub_3360+1948, sub_3360+2585, sub_3360+2734
00000000000037ae         je         loc_37c0

00000000000037b0         test       al, al
00000000000037b2         mov        eax, 0x4
00000000000037b7         cmove      eax, dword [rsp+0xe8+var_E0]
00000000000037bc         mov        dword [rsp+0xe8+var_E0], eax

                     loc_37c0:
00000000000037c0         sub        rsp, 0x8                                    ; CODE XREF=sub_3360+1102
00000000000037c4         mov        rcx, rbp
00000000000037c7         mov        rsi, r13
00000000000037ca         push       qword [rsp+0xf0+var_88]
00000000000037ce         push       qword [rsp+0xf8+var_80]
00000000000037d2         mov        rdi, r14
00000000000037d5         push       0x0
00000000000037d7         mov        r9d, dword [rsp+0x108+var_70]
00000000000037df         mov        r8d, dword [rsp+0x108+var_E0]
00000000000037e4         mov        rdx, qword [rsp+0x108+var_D8]
00000000000037e9         and        r9d, 0xfffffffd
00000000000037ed         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000037f2         add        rsp, 0x20
00000000000037f6         mov        r15, rax

                     loc_37f9:
00000000000037f9         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_3360+2549, sub_3360+2560, sub_3360+2711
0000000000003801         xor        rbx, qword [fs:0x28]
000000000000380a         mov        rax, r15
000000000000380d         jne        loc_3e13

0000000000003813         add        rsp, 0xb8
000000000000381a         pop        rbx
000000000000381b         pop        rbp
000000000000381c         pop        r12
000000000000381e         pop        r13
0000000000003820         pop        r14
0000000000003822         pop        r15
0000000000003824         ret
                        ; endp
0000000000003825         align      8

                     loc_3828:
0000000000003828         mov        rbp, r11                                    ; CODE XREF=sub_2f10+194
000000000000382b         jmp        loc_37a9

                     loc_3830:
0000000000003830         cmp        r13, r15                                    ; CODE XREF=sub_3360+206, sub_3360+220
0000000000003833         jbe        loc_383a

0000000000003835         mov        byte [r14+r15], 0x27

                     loc_383a:
000000000000383a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3360+1235
000000000000383e         cmp        r13, rax
0000000000003841         jbe        loc_3849

0000000000003843         mov        byte [r14+r15+1], 0x5c

                     loc_3849:
0000000000003849         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3360+1249
000000000000384d         cmp        r13, rax
0000000000003850         jbe        loc_3e42

0000000000003856         mov        rdx, r13
0000000000003859         mov        byte [r14+r15+2], 0x27
000000000000385f         mov        r13, qword [rsp+arg_48]
0000000000003864         jmp        loc_3442

                     loc_3869:
0000000000003869         mov        eax, r12d                                   ; CODE XREF=sub_3200+99
000000000000386c         mov        ebx, 0x30
0000000000003871         xor        r12d, r12d
0000000000003874         jmp        sub_2e10+105
                        ; endp

                     loc_3879:
0000000000003879         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3200+67
000000000000387f         jmp        loc_3249

                     loc_3884:
0000000000003884         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000003886         jne        loc_2cb3

000000000000388c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_3891:
0000000000003891         test       r13, r13                                    ; CODE XREF=sub_3360+2749
0000000000003894         jne        loc_3e2a

000000000000389a         lea        rax, qword [aLibs+29]                       ; 0x5bad
00000000000038a1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000038aa         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000038af         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000038b4         xor        r12d, r12d
00000000000038b7         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000038bc         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000038c5         mov        qword [rsp+0xe8+var_A0], rax
00000000000038ca         mov        r15d, 0x1
00000000000038d0         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000038d8         jmp        loc_2cf3
00000000000038dd         align      32

                     loc_38e0:
00000000000038e0         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
00000000000038e2         jne        loc_3cdd

00000000000038e8         test       r13, r13
00000000000038eb         je         loc_3b16

00000000000038f1         mov        byte [r14], 0x22
00000000000038f5         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000038fa         xor        r12d, r12d
00000000000038fd         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003902         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_390b:
000000000000390b         lea        rax, qword [aLibs+27]                       ; 0x5bab, CODE XREF=sub_3360+1996
0000000000003912         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003917         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000391c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003925         mov        r15d, 0x1
000000000000392b         mov        qword [rsp+0xe8+var_A0], rax
0000000000003930         jmp        loc_2cf3

                     loc_3935:
0000000000003935         lea        rax, qword [aLibs+27]                       ; case 6, 0x5bab, CODE XREF=quotearg_buffer_restyled+145
000000000000393c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003941         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003946         xor        r12d, r12d
0000000000003949         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003952         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003957         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000395c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003965         xor        r15d, r15d
0000000000003968         mov        qword [rsp+0xe8+var_A0], rax
000000000000396d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000003975         jmp        loc_2cf3

                     loc_397a:
000000000000397a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000397f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003984         xor        r12d, r12d
0000000000003987         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003990         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003995         xor        r15d, r15d
0000000000003998         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000399d         mov        qword [rsp+0xe8+var_D0], 0x0
00000000000039a6         mov        qword [rsp+0xe8+var_A0], 0x0
00000000000039af         jmp        loc_2cf3

                     loc_39b4:
00000000000039b4         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
00000000000039b9         je         loc_3a11

00000000000039bb         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x5baf
00000000000039c2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000039c4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000039c9         call       j_dcgettext                                 ; dcgettext
00000000000039ce         mov        rcx, rax
00000000000039d1         mov        qword [rsp+0xe8+var_80], rax
00000000000039d6         lea        rax, qword [aLibs+31]                       ; 0x5baf
00000000000039dd         cmp        rcx, rax
00000000000039e0         je         loc_3d7e

                     loc_39e6:
00000000000039e6         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x5bad, CODE XREF=sub_3360+2607
00000000000039ed         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000039ef         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000039f4         call       j_dcgettext                                 ; dcgettext
00000000000039f9         mov        rcx, rax
00000000000039fc         mov        qword [rsp+0xe8+var_88], rax
0000000000003a01         lea        rax, qword [aLibs+29]                       ; 0x5bad
0000000000003a08         cmp        rcx, rax
0000000000003a0b         je         loc_3d94

                     loc_3a11:
0000000000003a11         xor        r15d, r15d                                  ; CODE XREF=sub_3360+1625, sub_3360+2629
0000000000003a14         test       ebx, ebx
0000000000003a16         je         loc_3bdd

                     loc_3a1c:
0000000000003a1c         test       ebx, ebx                                    ; CODE XREF=sub_3360+2183, sub_3360+2214
0000000000003a1e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003a23         setne      byte [rsp+0xe8+var_D9]
0000000000003a28         xor        r12d, r12d
0000000000003a2b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000003a2e         call       j_strlen                                    ; strlen
0000000000003a33         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003a38         mov        qword [rsp+0xe8+var_D0], rax
0000000000003a3d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003a42         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003a47         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003a50         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003a55         jmp        loc_2cf3

                     loc_3a5a:
0000000000003a5a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000003a5f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003a64         xor        r12d, r12d
0000000000003a67         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003a70         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003a75         xor        r15d, r15d
0000000000003a78         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003a7d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003a86         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003a8f         jmp        loc_2cf3

                     loc_3a94:
0000000000003a94         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000003a99         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003a9e         xor        r12d, r12d
0000000000003aa1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003aaa         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003aaf         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003ab4         jmp        loc_2cd3

                     loc_3ab9:
0000000000003ab9         cmp        r13, r15                                    ; CODE XREF=sub_3200+133
0000000000003abc         jbe        loc_3ac3

0000000000003abe         mov        byte [r14+r15], 0x30

                     loc_3ac3:
0000000000003ac3         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_3360+1884
0000000000003ac7         cmp        r13, rax
0000000000003aca         jbe        loc_3ad2

0000000000003acc         mov        byte [r14+rcx+2], 0x30

                     loc_3ad2:
0000000000003ad2         mov        eax, r12d                                   ; CODE XREF=sub_3360+1898
0000000000003ad5         lea        r15, qword [rcx+3]
0000000000003ad9         xor        r12d, r12d
0000000000003adc         mov        ebx, 0x30
0000000000003ae1         jmp        sub_2e10+56
                        ; endp
0000000000003ae6         align      16

                     loc_3af0:
0000000000003af0         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_3360+731
0000000000003af5         mov        rbp, r11
0000000000003af8         mov        byte [rsp+0xe8+var_DB], bl
0000000000003afc         jmp        loc_37a9

                     loc_3b01:
0000000000003b01         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3100+105
0000000000003b06         xor        r12d, r12d
0000000000003b09         jmp        loc_3610

                     loc_3b0e:
0000000000003b0e         xor        r10d, r10d                                  ; CODE XREF=sub_3360+944
0000000000003b11         jmp        loc_36cd

                     loc_3b16:
0000000000003b16         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_3360+1419
0000000000003b1f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003b24         xor        r12d, r12d
0000000000003b27         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b2c         jmp        loc_390b

                     loc_3b31:
0000000000003b31         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_3360+561
0000000000003b36         mov        rsi, r14
0000000000003b39         mov        rcx, r13
0000000000003b3c         mov        rax, rbx
0000000000003b3f         mov        rdi, rbx
0000000000003b42         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003b48         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003b4d         mov        r9, qword [rsp+0xe8+var_60]
0000000000003b55         cmp        rsi, r11
0000000000003b58         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003b5e         mov        r15, qword [rsp+0xe8+var_68]
0000000000003b66         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003b6b         mov        r13, qword [rsp+0xe8+var_78]
0000000000003b70         jae        loc_3b98

0000000000003b72         cmp        byte [rcx], 0x0
0000000000003b75         jne        loc_3b87

0000000000003b77         jmp        loc_3b98
0000000000003b79         align      128

                     loc_3b80:
0000000000003b80         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_3360+2099
0000000000003b85         je         loc_3b95

                     loc_3b87:
0000000000003b87         add        rax, 0x1                                    ; CODE XREF=sub_3360+2069
0000000000003b8b         lea        rdx, qword [rbp+rax]
0000000000003b90         cmp        r11, rdx
0000000000003b93         ja         loc_3b80

                     loc_3b95:
0000000000003b95         mov        rdi, rax                                    ; CODE XREF=sub_3360+2085

                     loc_3b98:
0000000000003b98         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3360+2064, sub_3360+2071
0000000000003b9d         xor        r12d, r12d
0000000000003ba0         jmp        loc_3606

                     loc_3ba5:
0000000000003ba5         mov        rdi, rbx                                    ; CODE XREF=sub_3360+551
0000000000003ba8         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003bae         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003bb3         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003bb9         mov        r15, qword [rsp+0xe8+var_68]
0000000000003bc1         xor        r12d, r12d
0000000000003bc4         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003bc9         mov        r13, qword [rsp+0xe8+var_78]
0000000000003bce         mov        r11, qword [rsp+0xe8+var_B8]
0000000000003bd3         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000003bd8         jmp        loc_3606

                     loc_3bdd:
0000000000003bdd         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_3360+1718
0000000000003be2         movzx      eax, byte [rdx]
0000000000003be5         test       al, al
0000000000003be7         je         loc_3a1c

0000000000003bed         nop        dword [rax]

                     loc_3bf0:
0000000000003bf0         cmp        r13, r15                                    ; CODE XREF=sub_3360+2212
0000000000003bf3         jbe        loc_3bf9

0000000000003bf5         mov        byte [r14+r15], al

                     loc_3bf9:
0000000000003bf9         add        r15, 0x1                                    ; CODE XREF=sub_3360+2195
0000000000003bfd         movzx      eax, byte [rdx+r15]
0000000000003c02         test       al, al
0000000000003c04         jne        loc_3bf0

0000000000003c06         jmp        loc_3a1c

                     loc_3c0b:
0000000000003c0b         mov        eax, edx                                    ; CODE XREF=sub_3360+682
0000000000003c0d         jmp        loc_3167

                     loc_3c12:
0000000000003c12         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_3360+290
0000000000003c16         cmp        bl, 0x3e
0000000000003c19         ja         loc_3490

0000000000003c1f         movabs     rax, 0x7000a38200000000
0000000000003c29         bt         rax, rbx
0000000000003c2d         jae        loc_3490

0000000000003c33         cmp        byte [rsp+arg_7], 0x0
0000000000003c38         jne        loc_3e22

0000000000003c3e         cmp        r13, r15
0000000000003c41         jbe        loc_3c48

0000000000003c43         mov        byte [r14+r15], 0x3f

                     loc_3c48:
0000000000003c48         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3360+2273
0000000000003c4c         cmp        r13, rax
0000000000003c4f         jbe        loc_3c57

0000000000003c51         mov        byte [r14+r15+1], 0x22

                     loc_3c57:
0000000000003c57         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3360+2287
0000000000003c5b         cmp        r13, rax
0000000000003c5e         jbe        loc_3c66

0000000000003c60         mov        byte [r14+r15+2], 0x22

                     loc_3c66:
0000000000003c66         lea        rax, qword [r15+3]                          ; CODE XREF=sub_3360+2302
0000000000003c6a         cmp        r13, rax
0000000000003c6d         jbe        loc_3c75

0000000000003c6f         mov        byte [r14+r15+3], 0x3f

                     loc_3c75:
0000000000003c75         add        r15, 0x4                                    ; CODE XREF=sub_3360+2317
0000000000003c79         xor        edx, edx
0000000000003c7b         xor        r12d, r12d
0000000000003c7e         xor        eax, eax
0000000000003c80         mov        rbp, rcx
0000000000003c83         jmp        sub_2e10+56
                        ; endp

                     loc_3c88:
0000000000003c88         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000003c8a         je         loc_3e18

0000000000003c90         lea        rax, qword [aLibs+29]                       ; 0x5bad
0000000000003c97         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003c9c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003ca1         xor        r12d, r12d
0000000000003ca4         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003cad         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003cb2         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003cb7         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003cc0         xor        r15d, r15d
0000000000003cc3         mov        qword [rsp+0xe8+var_A0], rax
0000000000003cc8         jmp        loc_2cf3
0000000000003ccd         align      16

                     loc_3cd0:
0000000000003cd0         mov        rbp, r11                                    ; CODE XREF=sub_3360+333
0000000000003cd3         movzx      eax, byte [rsp+arg_7]
0000000000003cd8         jmp        sub_3360+1097
                        ; endp

                     loc_3cdd:
0000000000003cdd         lea        rax, qword [aLibs+27]                       ; 0x5bab, CODE XREF=sub_3360+1410
0000000000003ce4         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003ce9         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003cee         xor        r12d, r12d
0000000000003cf1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003cfa         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003cff         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003d04         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003d0d         xor        r15d, r15d
0000000000003d10         mov        qword [rsp+0xe8+var_A0], rax
0000000000003d15         jmp        loc_2cf3

                     loc_3d1a:
0000000000003d1a         mov        eax, edx                                    ; CODE XREF=sub_3360+87

                     loc_3d1c:
0000000000003d1c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_3360+76, sub_3360+2721
0000000000003d21         test       rbx, rbx
0000000000003d24         je         loc_3d52

0000000000003d26         test       al, al
0000000000003d28         je         loc_3d52

0000000000003d2a         movzx      ecx, byte [rbx]
0000000000003d2d         mov        rax, rbx
0000000000003d30         test       cl, cl
0000000000003d32         je         loc_3d52

0000000000003d34         mov        rdx, r15
0000000000003d37         sub        rax, r15

                     loc_3d3a:
0000000000003d3a         cmp        r13, rdx                                    ; CODE XREF=sub_3360+2541
0000000000003d3d         jbe        loc_3d43

0000000000003d3f         mov        byte [r14+rdx], cl

                     loc_3d43:
0000000000003d43         add        rdx, 0x1                                    ; CODE XREF=sub_3360+2525
0000000000003d47         movzx      ecx, byte [rax+rdx]
0000000000003d4b         test       cl, cl
0000000000003d4d         jne        loc_3d3a

0000000000003d4f         mov        r15, rdx

                     loc_3d52:
0000000000003d52         cmp        r13, r15                                    ; CODE XREF=sub_3360+2500, sub_3360+2504, sub_3360+2514
0000000000003d55         jbe        loc_37f9

0000000000003d5b         mov        byte [r14+r15], 0x0
0000000000003d60         jmp        loc_37f9

                     loc_3d65:
0000000000003d65         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000003d6a         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000003d6f         mov        rbp, r11
0000000000003d72         sete       al
0000000000003d75         mov        byte [rsp+0xe8+var_DB], bl
0000000000003d79         jmp        loc_37a9

                     loc_3d7e:
0000000000003d7e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3360+1664
0000000000003d82         mov        rdi, rcx
0000000000003d85         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003d8a         mov        qword [rsp+0xe8+var_80], rax
0000000000003d8f         jmp        loc_39e6

                     loc_3d94:
0000000000003d94         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3360+1707
0000000000003d98         mov        rdi, rcx
0000000000003d9b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003da0         mov        qword [rsp+0xe8+var_88], rax
0000000000003da5         jmp        loc_3a11

                     loc_3daa:
0000000000003daa         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3200+16
0000000000003daf         mov        rbp, r11
0000000000003db2         mov        eax, edx
0000000000003db4         mov        byte [rsp+arg_5], bl
0000000000003db8         jmp        sub_3360+1097
                        ; endp

                     loc_3dbd:
0000000000003dbd         sub        rsp, 0x8                                    ; CODE XREF=sub_3360+98
0000000000003dc1         mov        r8d, 0x5
0000000000003dc7         mov        rcx, r11
0000000000003dca         push       qword [rsp+0xf0+var_88]
0000000000003dce         push       qword [rsp+0xf8+var_80]
0000000000003dd2         mov        rdi, r14
0000000000003dd5         push       qword [rsp+0x100+var_C8]
0000000000003dd9         mov        r9d, dword [rsp+0x108+var_70]
0000000000003de1         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003de6         mov        rsi, qword [rsp+0x108+var_98]
0000000000003deb         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003df0         add        rsp, 0x20
0000000000003df4         mov        r15, rax
0000000000003df7         jmp        loc_37f9

                     loc_3dfc:
0000000000003dfc         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_3360+121
0000000000003e01         jmp        loc_3d1c

                     loc_3e06:
0000000000003e06         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3360+63
0000000000003e0e         jmp        loc_37a9

                     loc_3e13:
0000000000003e13         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_3360+1197
                        ; endp

                     loc_3e18:
0000000000003e18         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3360+2346
0000000000003e1d         jmp        loc_3891

                     loc_3e22:
0000000000003e22         mov        rbp, r11                                    ; CODE XREF=sub_3360+2264
0000000000003e25         jmp        sub_3360+1120
                        ; endp

                     loc_3e2a:
0000000000003e2a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_3360+1332
0000000000003e2f         xor        eax, eax
0000000000003e31         xor        r12d, r12d
0000000000003e34         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003e3d         jmp        loc_33e4

                     loc_3e42:
0000000000003e42         mov        rdx, r13                                    ; CODE XREF=sub_3360+1264
0000000000003e45         mov        r13, qword [rsp+arg_48]
0000000000003e4a         jmp        loc_3442

                     loc_3e4f:
0000000000003e4f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000003e54         align      32                                          ; End of unwind block (FDE at 0x6a28)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000003e60         push       r15                                         ; Begin of unwind block (FDE at 0x6aa0), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000003e62         push       r14
0000000000003e64         movsxd     r15, edi
0000000000003e67         push       r13
0000000000003e69         push       r12
0000000000003e6b         mov        r14, rdx
0000000000003e6e         push       rbp
0000000000003e6f         push       rbx
0000000000003e70         mov        rbp, rcx
0000000000003e73         sub        rsp, 0x28
0000000000003e77         mov        qword [rsp+0x58+var_50], rsi
0000000000003e7c         call       j___errno_location                          ; __errno_location
0000000000003e81         mov        r13, rax
0000000000003e84         mov        eax, dword [rax]
0000000000003e86         test       r15d, r15d
0000000000003e89         mov        rbx, qword [slotvec]                        ; slotvec
0000000000003e90         mov        dword [rsp+0x58+var_40], eax
0000000000003e94         js         loc_4001

0000000000003e9a         cmp        dword [nslots], r15d                        ; nslots
0000000000003ea1         jg         loc_3f05

0000000000003ea3         cmp        r15d, 0x7fffffff
0000000000003eaa         je         loc_4006

0000000000003eb0         lea        r12d, dword [r15+1]
0000000000003eb4         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000003ebb         movsxd     rsi, r12d
0000000000003ebe         shl        rsi, 0x4
0000000000003ec2         cmp        rbx, rax
0000000000003ec5         je         loc_3fe0

0000000000003ecb         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000003ece         call       xrealloc                                    ; xrealloc
0000000000003ed3         mov        rbx, rax
0000000000003ed6         mov        qword [slotvec], rax                        ; slotvec

                     loc_3edd:
0000000000003edd         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000003ee4         mov        edx, r12d
0000000000003ee7         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000003ee9         sub        edx, edi
0000000000003eeb         shl        rdi, 0x4
0000000000003eef         movsxd     rdx, edx
0000000000003ef2         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000003ef5         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000003ef9         call       j_memset                                    ; memset
0000000000003efe         mov        dword [nslots], r12d                        ; nslots

                     loc_3f05:
0000000000003f05         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000003f08         shl        r15, 0x4
0000000000003f0c         sub        rsp, 0x8
0000000000003f10         add        rbx, r15
0000000000003f13         lea        r15, qword [rbp+8]
0000000000003f17         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003f1b         mov        r11, qword [rbx]
0000000000003f1e         mov        r12, qword [rbx+8]
0000000000003f22         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003f25         or         eax, 0x1
0000000000003f28         mov        dword [rsp+0x60+var_3C], eax
0000000000003f2c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003f2f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000003f32         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003f35         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003f37         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000003f3a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000003f3f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003f42         mov        qword [rsp+0x78+var_48], r11
0000000000003f47         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003f4c         add        rsp, 0x20
0000000000003f50         mov        r11, qword [rsp+0x58+var_48]
0000000000003f55         cmp        r11, rax
0000000000003f58         ja         loc_3fc1

0000000000003f5a         lea        rsi, qword [rax+1]
0000000000003f5e         lea        rax, qword [slot0]                          ; slot0
0000000000003f65         cmp        r12, rax
0000000000003f68         mov        qword [rbx], rsi
0000000000003f6b         je         loc_3f7f

0000000000003f6d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000003f70         mov        qword [rsp+0x58+var_48], rsi
0000000000003f75         call       j_free                                      ; free
0000000000003f7a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_3f7f:
0000000000003f7f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000003f82         mov        qword [rsp+0x58+var_48], rsi
0000000000003f87         call       xmalloc                                     ; xmalloc
0000000000003f8c         sub        rsp, 0x8
0000000000003f90         mov        qword [rbx+8], rax
0000000000003f94         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003f98         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003f9b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003f9e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003fa1         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003fa3         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000003fa8         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003fab         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000003fb0         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000003fb5         mov        r12, rax
0000000000003fb8         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003fbd         add        rsp, 0x20

                     loc_3fc1:
0000000000003fc1         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000003fc5         mov        dword [r13], eax
0000000000003fc9         add        rsp, 0x28
0000000000003fcd         mov        rax, r12
0000000000003fd0         pop        rbx
0000000000003fd1         pop        rbp
0000000000003fd2         pop        r12
0000000000003fd4         pop        r13
0000000000003fd6         pop        r14
0000000000003fd8         pop        r15
0000000000003fda         ret
                        ; endp
0000000000003fdb         align      32

                     loc_3fe0:
0000000000003fe0         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000003fe2         call       xrealloc                                    ; xrealloc
0000000000003fe7         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
0000000000003fef         mov        rbx, rax
0000000000003ff2         mov        qword [slotvec], rax                        ; slotvec
0000000000003ff9         movups     xmmword [rax], xmm0
0000000000003ffc         jmp        loc_3edd

                     loc_4001:
0000000000004001         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4006:
0000000000004006         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_400b:
000000000000400b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x6aa0)
                     clone_quoting_options:
0000000000004010         push       r12                                         ; Begin of unwind block (FDE at 0x6b0c)
0000000000004012         push       rbp
0000000000004013         push       rbx
0000000000004014         mov        rbx, rdi
0000000000004017         call       j___errno_location                          ; __errno_location
000000000000401c         mov        r12d, dword [rax]
000000000000401f         mov        rbp, rax
0000000000004022         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004029         test       rbx, rbx
000000000000402c         mov        esi, 0x38
0000000000004031         cmove      rbx, rax
0000000000004035         mov        rdi, rbx
0000000000004038         call       xmemdup                                     ; xmemdup
000000000000403d         mov        dword [rbp], r12d
0000000000004041         pop        rbx
0000000000004042         pop        rbp
0000000000004043         pop        r12
0000000000004045         ret
                        ; endp
0000000000004046         align      16                                          ; End of unwind block (FDE at 0x6b0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000004050         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6b38), default_quoting_options
0000000000004057         test       rdi, rdi
000000000000405a         cmove      rdi, rax
000000000000405e         mov        eax, dword [rdi]
0000000000004060         ret
                        ; endp
0000000000004061         align      16                                          ; End of unwind block (FDE at 0x6b38)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000004070         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6b4c), default_quoting_options
0000000000004077         test       rdi, rdi
000000000000407a         cmove      rdi, rax
000000000000407e         mov        dword [rdi], esi
0000000000004080         ret
                        ; endp
0000000000004081         align      16                                          ; End of unwind block (FDE at 0x6b4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000004090         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6b60), default_quoting_options
0000000000004097         test       rdi, rdi
000000000000409a         mov        ecx, esi
000000000000409c         cmove      rdi, rax
00000000000040a0         mov        eax, esi
00000000000040a2         and        ecx, 0x1f
00000000000040a5         shr        al, 0x5
00000000000040a8         movzx      eax, al
00000000000040ab         lea        rdi, qword [rdi+rax*4+8]
00000000000040b0         mov        esi, dword [rdi]
00000000000040b2         mov        eax, esi
00000000000040b4         shr        eax, cl
00000000000040b6         xor        edx, eax
00000000000040b8         and        eax, 0x1
00000000000040bb         and        edx, 0x1
00000000000040be         shl        edx, cl
00000000000040c0         xor        edx, esi
00000000000040c2         mov        dword [rdi], edx
00000000000040c4         ret
                        ; endp
00000000000040c5         align      16                                          ; End of unwind block (FDE at 0x6b60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
00000000000040d0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6b74), default_quoting_options
00000000000040d7         test       rdi, rdi
00000000000040da         cmove      rdi, rax
00000000000040de         mov        eax, dword [rdi+4]
00000000000040e1         mov        dword [rdi+4], esi
00000000000040e4         ret
                        ; endp
00000000000040e5         align      16                                          ; End of unwind block (FDE at 0x6b74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
00000000000040f0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6b88), default_quoting_options
00000000000040f7         test       rdi, rdi
00000000000040fa         cmove      rdi, rax
00000000000040fe         test       rsi, rsi
0000000000004101         mov        dword [rdi], 0xa
0000000000004107         je         loc_4117

0000000000004109         test       rdx, rdx
000000000000410c         je         loc_4117

000000000000410e         mov        qword [rdi+0x28], rsi
0000000000004112         mov        qword [rdi+0x30], rdx
0000000000004116         ret
                        ; endp

                     loc_4117:
0000000000004117         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000411b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004120         push       r15                                         ; End of unwind block (FDE at 0x6b88), Begin of unwind block (FDE at 0x6b9c)
0000000000004122         push       r14
0000000000004124         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000412b         push       r13
000000000000412d         push       r12
000000000000412f         mov        r13, rdi
0000000000004132         push       rbp
0000000000004133         push       rbx
0000000000004134         mov        rbx, r8
0000000000004137         mov        r14, rsi
000000000000413a         mov        r15, rdx
000000000000413d         sub        rsp, 0x18
0000000000004141         test       r8, r8
0000000000004144         cmove      rbx, rax
0000000000004148         mov        qword [rsp+0x48+var_40], rcx
000000000000414d         call       j___errno_location                          ; __errno_location
0000000000004152         mov        r12d, dword [rax]
0000000000004155         mov        rbp, rax
0000000000004158         lea        rax, qword [rbx+8]
000000000000415c         sub        rsp, 0x8
0000000000004160         mov        r9d, dword [rbx+4]
0000000000004164         push       qword [rbx+0x30]
0000000000004167         mov        r8d, dword [rbx]
000000000000416a         push       qword [rbx+0x28]
000000000000416d         mov        rdx, r15
0000000000004170         push       rax
0000000000004171         mov        rcx, qword [rsp+0x68+var_40]
0000000000004176         mov        rsi, r14
0000000000004179         mov        rdi, r13
000000000000417c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004181         mov        dword [rbp], r12d
0000000000004185         add        rsp, 0x38
0000000000004189         pop        rbx
000000000000418a         pop        rbp
000000000000418b         pop        r12
000000000000418d         pop        r13
000000000000418f         pop        r14
0000000000004191         pop        r15
0000000000004193         ret
                        ; endp
0000000000004194         align      32                                          ; End of unwind block (FDE at 0x6b9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
00000000000041a0         push       r15                                         ; Begin of unwind block (FDE at 0x6bf0), CODE XREF=quotearg_alloc+5
00000000000041a2         push       r14
00000000000041a4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000041ab         push       r13
00000000000041ad         push       r12
00000000000041af         mov        r12, rdx
00000000000041b2         push       rbp
00000000000041b3         push       rbx
00000000000041b4         mov        rbx, rcx
00000000000041b7         mov        r14, rdi
00000000000041ba         mov        r15, rsi
00000000000041bd         sub        rsp, 0x38
00000000000041c1         test       rcx, rcx
00000000000041c4         cmove      rbx, rax
00000000000041c8         xor        ebp, ebp
00000000000041ca         call       j___errno_location                          ; __errno_location
00000000000041cf         test       r12, r12
00000000000041d2         mov        r13, rax
00000000000041d5         mov        eax, dword [rax]
00000000000041d7         sete       bpl
00000000000041db         or         ebp, dword [rbx+4]
00000000000041de         lea        r10, qword [rbx+8]
00000000000041e2         sub        rsp, 0x8
00000000000041e6         mov        r8d, dword [rbx]
00000000000041e9         mov        rcx, r15
00000000000041ec         mov        dword [rsp+0x70+var_5C], eax
00000000000041f0         push       qword [rbx+0x30]
00000000000041f3         mov        rdx, r14
00000000000041f6         push       qword [rbx+0x28]
00000000000041f9         push       r10
00000000000041fb         xor        esi, esi
00000000000041fd         mov        r9d, ebp
0000000000004200         xor        edi, edi
0000000000004202         mov        qword [rsp+0x88+var_48], r10
0000000000004207         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000420c         lea        rsi, qword [rax+1]
0000000000004210         mov        qword [rsp+0x88+var_40], rax
0000000000004215         add        rsp, 0x20
0000000000004219         mov        rdi, rsi
000000000000421c         mov        qword [rsp+0x68+var_50], rsi
0000000000004221         call       xmalloc                                     ; xmalloc
0000000000004226         mov        qword [rsp+0x68+var_58], rax
000000000000422b         sub        rsp, 0x8
000000000000422f         push       qword [rbx+0x30]
0000000000004232         push       qword [rbx+0x28]
0000000000004235         mov        r10, qword [rsp+0x80+var_48]
000000000000423a         mov        r9d, ebp
000000000000423d         mov        r8d, dword [rbx]
0000000000004240         mov        rcx, r15
0000000000004243         mov        rdx, r14
0000000000004246         mov        rdi, rax
0000000000004249         push       r10
000000000000424b         mov        rsi, qword [rsp+0x88+var_50]
0000000000004250         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004255         mov        eax, dword [rsp+0x88+var_5C]
0000000000004259         add        rsp, 0x20
000000000000425d         test       r12, r12
0000000000004260         mov        dword [r13], eax
0000000000004264         je         loc_426f

0000000000004266         mov        r11, qword [rsp+0x68+var_40]
000000000000426b         mov        qword [r12], r11

                     loc_426f:
000000000000426f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000004274         add        rsp, 0x38
0000000000004278         pop        rbx
0000000000004279         pop        rbp
000000000000427a         pop        r12
000000000000427c         pop        r13
000000000000427e         pop        r14
0000000000004280         pop        r15
0000000000004282         ret
                        ; endp
0000000000004283         align      16                                          ; End of unwind block (FDE at 0x6bf0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000004290         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6c5c)
0000000000004293         xor        edx, edx
0000000000004295         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000429a         align      32                                          ; End of unwind block (FDE at 0x6c5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
00000000000042a0         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x6c70), nslots
00000000000042a6         push       r12
00000000000042a8         mov        r12, qword [slotvec]                        ; slotvec
00000000000042af         push       rbp
00000000000042b0         push       rbx
00000000000042b1         cmp        eax, 0x1
00000000000042b4         jle        loc_42e1

00000000000042b6         sub        eax, 0x2
00000000000042b9         lea        rbx, qword [r12+0x18]
00000000000042be         shl        rax, 0x4
00000000000042c2         lea        rbp, qword [r12+rax+0x28]
00000000000042c7         nop        word [rax+rax]

                     loc_42d0:
00000000000042d0         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
00000000000042d3         add        rbx, 0x10
00000000000042d7         call       j_free                                      ; free
00000000000042dc         cmp        rbx, rbp
00000000000042df         jne        loc_42d0

                     loc_42e1:
00000000000042e1         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
00000000000042e6         lea        rbx, qword [slot0]                          ; slot0
00000000000042ed         cmp        rdi, rbx
00000000000042f0         je         loc_4309

00000000000042f2         call       j_free                                      ; free
00000000000042f7         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000004302         mov        qword [slotvec0+8], rbx                     ; 0x208098

                     loc_4309:
0000000000004309         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004310         cmp        r12, rbx
0000000000004313         je         loc_4324

0000000000004315         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004318         call       j_free                                      ; free
000000000000431d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_4324:
0000000000004324         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004325         mov        dword [nslots], 0x1                         ; nslots
000000000000432f         pop        rbp
0000000000004330         pop        r12
0000000000004332         ret
                        ; endp
0000000000004333         align      64                                          ; End of unwind block (FDE at 0x6c70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000004340         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6c9c), default_quoting_options
0000000000004347         mov        rdx, 0xffffffffffffffff
000000000000434e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004353         align      32                                          ; End of unwind block (FDE at 0x6c9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000004360         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6cb0), default_quoting_options
0000000000004367         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000436c         align      16                                          ; End of unwind block (FDE at 0x6cb0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000004370         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6cc4), default_quoting_options
0000000000004377         mov        rsi, rdi
000000000000437a         mov        rdx, 0xffffffffffffffff
0000000000004381         xor        edi, edi
0000000000004383         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004388         align      16                                          ; End of unwind block (FDE at 0x6cc4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000004390         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6cd8), default_quoting_options
0000000000004397         mov        rdx, rsi
000000000000439a         mov        rsi, rdi
000000000000439d         xor        edi, edi
000000000000439f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000043a4         align      16                                          ; End of unwind block (FDE at 0x6cd8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
00000000000043b0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6cec)
00000000000043b4         mov        rax, rdx
00000000000043b7         mov        rdx, qword [fs:0x28]
00000000000043c0         mov        qword [rsp+0x48+var_10], rdx
00000000000043c5         xor        edx, edx
00000000000043c7         cmp        esi, 0xa
00000000000043ca         je         loc_4434

00000000000043cc         mov        dword [rsp+0x48+var_48], esi
00000000000043cf         mov        rcx, rsp
00000000000043d2         mov        rdx, 0xffffffffffffffff
00000000000043d9         mov        rsi, rax
00000000000043dc         mov        qword [rsp+0x48+var_44], 0x0
00000000000043e5         mov        qword [rsp+0x48+var_3C], 0x0
00000000000043ee         mov        qword [rsp+0x48+var_34], 0x0
00000000000043f7         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004400         mov        qword [rsp+0x48+var_24], 0x0
0000000000004409         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004412         mov        dword [rsp+0x48+var_14], 0x0
000000000000441a         call       quotearg_n_options                          ; quotearg_n_options
000000000000441f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004424         xor        rcx, qword [fs:0x28]
000000000000442d         jne        loc_4439

000000000000442f         add        rsp, 0x48
0000000000004433         ret
                        ; endp

                     loc_4434:
0000000000004434         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_4439:
0000000000004439         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000443e         align      64                                          ; End of unwind block (FDE at 0x6cec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000004440         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6d08), CODE XREF=quotearg_style_mem+10
0000000000004444         mov        rax, rdx
0000000000004447         mov        rdx, rcx
000000000000444a         mov        rcx, qword [fs:0x28]
0000000000004453         mov        qword [rsp+0x48+var_10], rcx
0000000000004458         xor        ecx, ecx
000000000000445a         cmp        esi, 0xa
000000000000445d         je         loc_44c0

000000000000445f         mov        dword [rsp+0x48+var_48], esi
0000000000004462         mov        rcx, rsp
0000000000004465         mov        rsi, rax
0000000000004468         mov        qword [rsp+0x48+var_44], 0x0
0000000000004471         mov        qword [rsp+0x48+var_3C], 0x0
000000000000447a         mov        qword [rsp+0x48+var_34], 0x0
0000000000004483         mov        qword [rsp+0x48+var_2C], 0x0
000000000000448c         mov        qword [rsp+0x48+var_24], 0x0
0000000000004495         mov        qword [rsp+0x48+var_1C], 0x0
000000000000449e         mov        dword [rsp+0x48+var_14], 0x0
00000000000044a6         call       quotearg_n_options                          ; quotearg_n_options
00000000000044ab         mov        rdx, qword [rsp+0x48+var_10]
00000000000044b0         xor        rdx, qword [fs:0x28]
00000000000044b9         jne        loc_44c5

00000000000044bb         add        rsp, 0x48
00000000000044bf         ret
                        ; endp

                     loc_44c0:
00000000000044c0         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_44c5:
00000000000044c5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
00000000000044ca         align      16                                          ; End of unwind block (FDE at 0x6d08)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
00000000000044d0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x6d24)
00000000000044d3         mov        esi, edi
00000000000044d5         xor        edi, edi
00000000000044d7         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
00000000000044dc         align      32                                          ; End of unwind block (FDE at 0x6d24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
00000000000044e0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6d38)
00000000000044e3         mov        rdx, rsi
00000000000044e6         mov        esi, edi
00000000000044e8         xor        edi, edi
00000000000044ea         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
00000000000044ef         align      16                                          ; End of unwind block (FDE at 0x6d38)

                     quotearg_char_mem:
00000000000044f0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6d4c), CODE XREF=quotearg_char+11
00000000000044f4         mov        ecx, edx
00000000000044f6         mov        rax, qword [fs:0x28]
00000000000044ff         mov        qword [rsp+0x48+var_10], rax
0000000000004504         xor        eax, eax
0000000000004506         mov        rax, qword [qword_208290]                   ; qword_208290
000000000000450d         mov        r8, rsp
0000000000004510         and        ecx, 0x1f
0000000000004513         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000451b         mov        qword [rsp+0x48+var_18], rax
0000000000004520         mov        eax, edx
0000000000004522         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004526         shr        al, 0x5
0000000000004529         movzx      eax, al
000000000000452c         lea        r9, qword [r8+rax*4+8]
0000000000004531         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208270
0000000000004539         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000453e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208280
0000000000004546         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000454b         mov        edx, dword [r9]
000000000000454e         mov        eax, edx
0000000000004550         shr        eax, cl
0000000000004552         not        eax
0000000000004554         and        eax, 0x1
0000000000004557         shl        eax, cl
0000000000004559         mov        rcx, r8
000000000000455c         xor        eax, edx
000000000000455e         mov        rdx, rsi
0000000000004561         mov        rsi, rdi
0000000000004564         mov        dword [r9], eax
0000000000004567         xor        edi, edi
0000000000004569         call       quotearg_n_options                          ; quotearg_n_options
000000000000456e         mov        rsi, qword [rsp+0x48+var_10]
0000000000004573         xor        rsi, qword [fs:0x28]
000000000000457c         jne        loc_4583

000000000000457e         add        rsp, 0x48
0000000000004582         ret
                        ; endp

                     loc_4583:
0000000000004583         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000004588         align      16                                          ; End of unwind block (FDE at 0x6d4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000004590         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x6d68)
0000000000004594         mov        rsi, 0xffffffffffffffff
000000000000459b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
00000000000045a0         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x6d68), Begin of unwind block (FDE at 0x6d7c), CODE XREF=close_stdout+101
00000000000045a5         mov        rsi, 0xffffffffffffffff
00000000000045ac         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
00000000000045b1         align      64                                          ; End of unwind block (FDE at 0x6d7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
00000000000045c0         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x6d90)
00000000000045c5         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
00000000000045ca         align      16                                          ; End of unwind block (FDE at 0x6d90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
00000000000045d0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6da4), CODE XREF=next_file+154, next_file+363, next_file+426
00000000000045d4         mov        rax, rdx
00000000000045d7         mov        rdx, qword [fs:0x28]
00000000000045e0         mov        qword [rsp+0x48+var_10], rdx
00000000000045e5         xor        edx, edx
00000000000045e7         cmp        esi, 0xa
00000000000045ea         je         loc_4654

00000000000045ec         mov        dword [rsp+0x48+var_48], esi
00000000000045ef         mov        rcx, rsp
00000000000045f2         mov        rdx, 0xffffffffffffffff
00000000000045f9         mov        rsi, rax
00000000000045fc         mov        qword [rsp+0x48+var_44], 0x0
0000000000004605         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000460e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004617         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004620         mov        qword [rsp+0x48+var_24], 0x0
0000000000004629         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004632         mov        dword [rsp+0x48+var_14], 0x0
000000000000463a         call       quotearg_n_options                          ; quotearg_n_options
000000000000463f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004644         xor        rcx, qword [fs:0x28]
000000000000464d         jne        loc_4659

000000000000464f         add        rsp, 0x48
0000000000004653         ret
                        ; endp

                     loc_4654:
0000000000004654         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_4659:
0000000000004659         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000465e         align      32                                          ; End of unwind block (FDE at 0x6da4)

                     quotearg_n_custom_mem:
0000000000004660         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6dc0), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000004664         mov        r9, rcx
0000000000004667         mov        rcx, qword [qword_208290]                   ; qword_208290
000000000000466e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000004676         mov        rax, qword [fs:0x28]
000000000000467f         mov        qword [rsp+0x48+var_10], rax
0000000000004684         xor        eax, eax
0000000000004686         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000468a         test       rsi, rsi
000000000000468d         mov        qword [rsp+0x48+var_18], rcx
0000000000004692         mov        dword [rsp+0x48+var_48], 0xa
0000000000004699         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208270
00000000000046a1         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000046a6         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208280
00000000000046ae         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000046b3         je         loc_46e7

00000000000046b5         test       rdx, rdx
00000000000046b8         je         loc_46e7

00000000000046ba         mov        qword [rsp+0x48+var_20], rsi
00000000000046bf         mov        qword [rsp+0x48+var_18], rdx
00000000000046c4         mov        rcx, rsp
00000000000046c7         mov        rdx, r8
00000000000046ca         mov        rsi, r9
00000000000046cd         call       quotearg_n_options                          ; quotearg_n_options
00000000000046d2         mov        rdi, qword [rsp+0x48+var_10]
00000000000046d7         xor        rdi, qword [fs:0x28]
00000000000046e0         jne        loc_46ec

00000000000046e2         add        rsp, 0x48
00000000000046e6         ret
                        ; endp

                     loc_46e7:
00000000000046e7         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_46ec:
00000000000046ec         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
00000000000046f1         align      256                                         ; End of unwind block (FDE at 0x6dc0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000004700         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x6ddc)
0000000000004707         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
000000000000470c         align      16                                          ; End of unwind block (FDE at 0x6ddc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004710         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6df0)
0000000000004713         mov        r8, 0xffffffffffffffff
000000000000471a         mov        rdx, rsi
000000000000471d         mov        rsi, rdi
0000000000004720         xor        edi, edi
0000000000004722         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004727         align      16                                          ; End of unwind block (FDE at 0x6df0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000004730         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x6e04)
0000000000004733         mov        rcx, rdx
0000000000004736         mov        rdx, rsi
0000000000004739         mov        rsi, rdi
000000000000473c         xor        edi, edi
000000000000473e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004743         align      16                                          ; End of unwind block (FDE at 0x6e04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000004750         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6e18), quote_quoting_options
0000000000004757         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000475c         align      32                                          ; End of unwind block (FDE at 0x6e18)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000004760         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6e2c), quote_quoting_options
0000000000004767         mov        rdx, rsi
000000000000476a         mov        rsi, rdi
000000000000476d         xor        edi, edi
000000000000476f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004774         align      128                                         ; End of unwind block (FDE at 0x6e2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000004780         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6e40), quote_quoting_options
0000000000004787         mov        rdx, 0xffffffffffffffff
000000000000478e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004793         align      32                                          ; End of unwind block (FDE at 0x6e40)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
00000000000047a0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6e54), quote_quoting_options, CODE XREF=parse_tab_stops+534, parse_tab_stops+622, parse_tab_stops+694, parse_tab_stops+803
00000000000047a7         mov        rsi, rdi
00000000000047aa         mov        rdx, 0xffffffffffffffff
00000000000047b1         xor        edi, edi
00000000000047b3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000047b8         align      64                                          ; End of unwind block (FDE at 0x6e54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
00000000000047c0         push       r15                                         ; Begin of unwind block (FDE at 0x6e6c), CODE XREF=version_etc_va+75, version_etc+161
00000000000047c2         push       r14
00000000000047c4         push       r13
00000000000047c6         push       r12
00000000000047c8         mov        r12, r9
00000000000047cb         push       rbp
00000000000047cc         push       rbx
00000000000047cd         mov        rbp, rdi
00000000000047d0         mov        rbx, r8
00000000000047d3         sub        rsp, 0x28
00000000000047d7         test       rsi, rsi
00000000000047da         je         loc_48f8

00000000000047e0         mov        r8, rdx
00000000000047e3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
00000000000047ea         mov        r9, rcx
00000000000047ed         xor        eax, eax
00000000000047ef         mov        rcx, rsi
00000000000047f2         mov        esi, 0x1
00000000000047f7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_47fc:
00000000000047fc         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x607b, CODE XREF=version_etc_arn+337
0000000000004803         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004805         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000480a         call       j_dcgettext                                 ; dcgettext
000000000000480f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000004816         mov        rcx, rax
0000000000004819         mov        r8d, 0x7e3
000000000000481f         mov        esi, 0x1
0000000000004824         mov        rdi, rbp
0000000000004827         xor        eax, eax
0000000000004829         call       j___fprintf_chk                             ; __fprintf_chk
000000000000482e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004835         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004837         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000483c         call       j_dcgettext                                 ; dcgettext
0000000000004841         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004844         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004847         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000484c         cmp        r12, 0x9
0000000000004850         ja         loc_4b90

0000000000004856         lea        rdx, qword [switch_table_6368]              ; switch_table_6368
000000000000485d         movsxd     rax, dword [rdx+r12*4]
0000000000004861         add        rax, rdx
0000000000004864         jmp        rax                                         ; switch statement using table at 0x6368, with 10 cases, 0x4870,0x48e6,0x4920,0x4978,0x49b8,0x4a00,0x4a50,0x4aa8,0x4ad8,0x4b40
0000000000004866         align      16

                     loc_4870:
0000000000004870         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000004874         mov        rax, qword [rbx+0x10]
0000000000004878         lea        rsi, qword [aWrittenBySSSns_6278]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000000487f         mov        r8, qword [rbx+8]
0000000000004883         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004888         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000488a         mov        r13, qword [rbx+0x30]
000000000000488e         mov        r12, qword [rbx+0x28]
0000000000004892         mov        qword [rsp+0x58+var_48], r9
0000000000004897         mov        r15, qword [rbx+0x20]
000000000000489b         mov        r14, qword [rbx+0x18]
000000000000489f         mov        qword [rsp+0x58+var_58], rax
00000000000048a3         mov        qword [rsp+0x58+var_50], r8
00000000000048a8         mov        rbx, qword [rbx]
00000000000048ab         call       j_dcgettext                                 ; dcgettext
00000000000048b0         sub        rsp, 0x8

                     loc_48b4:
00000000000048b4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
00000000000048b9         mov        rdx, rax
00000000000048bc         mov        rcx, rbx
00000000000048bf         mov        esi, 0x1
00000000000048c4         mov        rdi, rbp
00000000000048c7         xor        eax, eax
00000000000048c9         push       r9
00000000000048cb         push       r13
00000000000048cd         push       r12
00000000000048cf         push       r15
00000000000048d1         push       r14
00000000000048d3         mov        r9, qword [rsp+0x88+var_58]
00000000000048d8         mov        r8, qword [rsp+0x88+var_50]
00000000000048dd         call       j___fprintf_chk                             ; __fprintf_chk
00000000000048e2         add        rsp, 0x30

                     loc_48e6:
00000000000048e6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
00000000000048ea         pop        rbx
00000000000048eb         pop        rbp
00000000000048ec         pop        r12
00000000000048ee         pop        r13
00000000000048f0         pop        r14
00000000000048f2         pop        r15
00000000000048f4         ret
                        ; endp
00000000000048f5         align      8

                     loc_48f8:
00000000000048f8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
00000000000048fb         mov        rcx, rdx
00000000000048fe         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000004905         mov        esi, 0x1
000000000000490a         xor        eax, eax
000000000000490c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004911         jmp        loc_47fc
0000000000004916         align      32

                     loc_4920:
0000000000004920         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000004924         mov        r9, qword [rbx+0x38]
0000000000004928         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000492f         mov        rax, qword [rbx+0x10]
0000000000004933         mov        r8, qword [rbx+8]
0000000000004937         mov        edx, 0x5
000000000000493c         mov        r13, qword [rbx+0x30]
0000000000004940         mov        r12, qword [rbx+0x28]
0000000000004944         mov        r15, qword [rbx+0x20]
0000000000004948         mov        r14, qword [rbx+0x18]
000000000000494c         mov        rbx, qword [rbx]
000000000000494f         mov        qword [rsp+0x58+var_40], r10
0000000000004954         mov        qword [rsp+0x58+var_48], r9
0000000000004959         mov        qword [rsp+0x58+var_58], rax
000000000000495d         mov        qword [rsp+0x58+var_50], r8

                     loc_4962:
0000000000004962         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000004964         call       j_dcgettext                                 ; dcgettext
0000000000004969         mov        r10, qword [rsp+0x58+var_40]
000000000000496e         push       r10
0000000000004970         jmp        loc_48b4
0000000000004975         align      8

                     loc_4978:
0000000000004978         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000000497b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000004982         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004987         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004989         call       j_dcgettext                                 ; dcgettext
000000000000498e         add        rsp, 0x28
0000000000004992         mov        rcx, rbx
0000000000004995         mov        rdi, rbp
0000000000004998         pop        rbx
0000000000004999         pop        rbp
000000000000499a         pop        r12
000000000000499c         pop        r13
000000000000499e         pop        r14
00000000000049a0         pop        r15
00000000000049a2         mov        rdx, rax
00000000000049a5         mov        esi, 0x1
00000000000049aa         xor        eax, eax
00000000000049ac         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000049b1         align      8

                     loc_49b8:
00000000000049b8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
00000000000049bc         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
00000000000049c3         mov        rbx, qword [rbx]
00000000000049c6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000049cb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000049cd         call       j_dcgettext                                 ; dcgettext
00000000000049d2         add        rsp, 0x28
00000000000049d6         mov        r8, r12
00000000000049d9         mov        rcx, rbx
00000000000049dc         mov        rdi, rbp
00000000000049df         mov        rdx, rax
00000000000049e2         mov        esi, 0x1
00000000000049e7         pop        rbx
00000000000049e8         pop        rbp
00000000000049e9         pop        r12
00000000000049eb         pop        r13
00000000000049ed         pop        r14
00000000000049ef         pop        r15
00000000000049f1         xor        eax, eax
00000000000049f3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000049f8         align      512

                     loc_4a00:
0000000000004a00         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000004a04         mov        r12, qword [rbx+8]
0000000000004a08         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
0000000000004a0f         mov        rbx, qword [rbx]
0000000000004a12         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004a17         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004a19         call       j_dcgettext                                 ; dcgettext
0000000000004a1e         add        rsp, 0x28
0000000000004a22         mov        r9, r13
0000000000004a25         mov        r8, r12
0000000000004a28         mov        rcx, rbx
0000000000004a2b         mov        rdi, rbp
0000000000004a2e         mov        rdx, rax
0000000000004a31         pop        rbx
0000000000004a32         pop        rbp
0000000000004a33         pop        r12
0000000000004a35         pop        r13
0000000000004a37         pop        r14
0000000000004a39         pop        r15
0000000000004a3b         mov        esi, 0x1
0000000000004a40         xor        eax, eax
0000000000004a42         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004a47         align      16

                     loc_4a50:
0000000000004a50         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000004a57         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004a5c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004a5e         mov        r14, qword [rbx+0x18]
0000000000004a62         mov        r13, qword [rbx+0x10]
0000000000004a66         mov        r12, qword [rbx+8]
0000000000004a6a         mov        rbx, qword [rbx]
0000000000004a6d         call       j_dcgettext                                 ; dcgettext
0000000000004a72         sub        rsp, 0x8

                     loc_4a76:
0000000000004a76         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000004a78         mov        rdx, rax
0000000000004a7b         mov        r9, r13
0000000000004a7e         mov        r8, r12
0000000000004a81         mov        rcx, rbx
0000000000004a84         mov        rdi, rbp
0000000000004a87         mov        esi, 0x1
0000000000004a8c         xor        eax, eax
0000000000004a8e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004a93         pop        rax
0000000000004a94         pop        rdx
0000000000004a95         add        rsp, 0x28
0000000000004a99         pop        rbx
0000000000004a9a         pop        rbp
0000000000004a9b         pop        r12
0000000000004a9d         pop        r13
0000000000004a9f         pop        r14
0000000000004aa1         pop        r15
0000000000004aa3         ret
                        ; endp
0000000000004aa4         align      8

                     loc_4aa8:
0000000000004aa8         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
0000000000004aac         lea        rsi, qword [aWrittenBySSSns_61f8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000004ab3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ab8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004aba         mov        r14, qword [rbx+0x18]
0000000000004abe         mov        r13, qword [rbx+0x10]
0000000000004ac2         mov        r12, qword [rbx+8]
0000000000004ac6         mov        rbx, qword [rbx]
0000000000004ac9         call       j_dcgettext                                 ; dcgettext
0000000000004ace         push       r15
0000000000004ad0         jmp        loc_4a76
0000000000004ad2         align      8

                     loc_4ad8:
0000000000004ad8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
0000000000004adc         mov        r12, qword [rbx+0x28]
0000000000004ae0         lea        rsi, qword [aWrittenBySSSns_6220]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000004ae7         mov        r15, qword [rbx+0x20]
0000000000004aeb         mov        r14, qword [rbx+0x18]
0000000000004aef         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004af4         mov        r13, qword [rbx+0x10]
0000000000004af8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004afa         mov        rbx, qword [rbx]
0000000000004afd         mov        qword [rsp+0x58+var_58], r8
0000000000004b01         call       j_dcgettext                                 ; dcgettext
0000000000004b06         sub        rsp, 0x8
0000000000004b0a         mov        r9, r13
0000000000004b0d         push       r12
0000000000004b0f         push       r15
0000000000004b11         push       r14

                     loc_4b13:
0000000000004b13         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000004b18         mov        rcx, rbx
0000000000004b1b         mov        rdx, rax
0000000000004b1e         mov        rdi, rbp
0000000000004b21         mov        esi, 0x1
0000000000004b26         xor        eax, eax
0000000000004b28         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004b2d         add        rsp, 0x20
0000000000004b31         add        rsp, 0x28
0000000000004b35         pop        rbx
0000000000004b36         pop        rbp
0000000000004b37         pop        r12
0000000000004b39         pop        r13
0000000000004b3b         pop        r14
0000000000004b3d         pop        r15
0000000000004b3f         ret
                        ; endp

                     loc_4b40:
0000000000004b40         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000004b44         mov        r13, qword [rbx+0x30]
0000000000004b48         lea        rsi, qword [aWrittenBySSSns_6248]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000004b4f         mov        r12, qword [rbx+0x28]
0000000000004b53         mov        r15, qword [rbx+0x20]
0000000000004b57         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b5c         mov        r14, qword [rbx+0x18]
0000000000004b60         mov        r8, qword [rbx+8]
0000000000004b64         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b66         mov        qword [rsp+0x58+var_50], r9
0000000000004b6b         mov        rbx, qword [rbx]
0000000000004b6e         mov        qword [rsp+0x58+var_58], r8
0000000000004b72         call       j_dcgettext                                 ; dcgettext
0000000000004b77         push       r13
0000000000004b79         push       r12
0000000000004b7b         push       r15
0000000000004b7d         push       r14
0000000000004b7f         mov        r9, qword [rsp+0x78+var_50]
0000000000004b84         jmp        loc_4b13
0000000000004b86         align      16

                     loc_4b90:
0000000000004b90         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000004b94         mov        r9, qword [rbx+0x38]
0000000000004b98         mov        edx, 0x5
0000000000004b9d         mov        rax, qword [rbx+0x10]
0000000000004ba1         mov        r8, qword [rbx+8]
0000000000004ba5         lea        rsi, qword [aWrittenBySSSns_62e0]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000004bac         mov        r13, qword [rbx+0x30]
0000000000004bb0         mov        r12, qword [rbx+0x28]
0000000000004bb4         mov        r15, qword [rbx+0x20]
0000000000004bb8         mov        r14, qword [rbx+0x18]
0000000000004bbc         mov        qword [rsp+0x58+var_40], r10
0000000000004bc1         mov        qword [rsp+0x58+var_48], r9
0000000000004bc6         mov        qword [rsp+0x58+var_58], rax
0000000000004bca         mov        qword [rsp+0x58+var_50], r8
0000000000004bcf         mov        rbx, qword [rbx]
0000000000004bd2         jmp        loc_4962
0000000000004bd7         align      32                                          ; End of unwind block (FDE at 0x6e6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000004be0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x6f80)
0000000000004be3         cmp        qword [r8], 0x0
0000000000004be7         je         j_version_etc_arn                           ; version_etc_arn

0000000000004be9         nop        dword [rax]

                     loc_4bf0:
0000000000004bf0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000004bf4         cmp        qword [r8+r9*8], 0x0
0000000000004bf9         jne        loc_4bf0

                     j_version_etc_arn:        // version_etc_arn
0000000000004bfb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000004c00         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x6f80), Begin of unwind block (FDE at 0x6f94)
0000000000004c04         mov        r10, r8
0000000000004c07         xor        r9d, r9d
0000000000004c0a         mov        rax, qword [fs:0x28]
0000000000004c13         mov        qword [rsp+0x68+var_10], rax
0000000000004c18         xor        eax, eax
0000000000004c1a         mov        r8, rsp
0000000000004c1d         nop        dword [rax]

                     loc_4c20:
0000000000004c20         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000004c23         cmp        eax, 0x2f
0000000000004c26         ja         loc_4c6a

0000000000004c28         mov        r11d, eax
0000000000004c2b         add        r11, qword [r10+0x10]
0000000000004c2f         add        eax, 0x8
0000000000004c32         mov        dword [r10], eax

                     loc_4c35:
0000000000004c35         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000004c38         test       rax, rax
0000000000004c3b         mov        qword [r8+r9*8], rax
0000000000004c3f         je         loc_4c4b

0000000000004c41         add        r9, 0x1
0000000000004c45         cmp        r9, 0xa
0000000000004c49         jne        loc_4c20

                     loc_4c4b:
0000000000004c4b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000004c50         mov        rax, qword [rsp+0x68+var_10]
0000000000004c55         xor        rax, qword [fs:0x28]
0000000000004c5e         jne        loc_4c65

0000000000004c60         add        rsp, 0x68
0000000000004c64         ret
                        ; endp

                     loc_4c65:
0000000000004c65         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_4c6a:
0000000000004c6a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000004c6e         lea        rax, qword [r11+8]
0000000000004c72         mov        qword [r10+8], rax
0000000000004c76         jmp        loc_4c35
0000000000004c78         align      128                                         ; End of unwind block (FDE at 0x6f94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000004c80         push       rbp                                         ; Begin of unwind block (FDE at 0x6fb0), CODE XREF=main+212
0000000000004c81         push       rbx
0000000000004c82         mov        r10d, 0x20
0000000000004c88         xor        r11d, r11d
0000000000004c8b         sub        rsp, 0xb8
0000000000004c92         mov        rax, qword [fs:0x28]
0000000000004c9b         mov        qword [rsp+0xc8+var_50], rax
0000000000004ca0         xor        eax, eax
0000000000004ca2         lea        rax, qword [rsp+0xc8+arg_0]
0000000000004caa         mov        qword [rsp+0xc8+var_28], r8
0000000000004cb2         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000004cba         lea        r8, qword [rsp+0xc8+var_A8]
0000000000004cbf         mov        qword [rsp+0xc8+var_20], r9
0000000000004cc7         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000004ccf         mov        qword [rsp+0xc8+var_B8], rax
0000000000004cd4         lea        rax, qword [rsp+0xc8+var_48]
0000000000004cdc         xor        r9d, r9d
0000000000004cdf         mov        qword [rsp+0xc8+var_B0], rax
0000000000004ce4         mov        rbp, rax
0000000000004ce7         nop        word [rax+rax]

                     loc_4cf0:
0000000000004cf0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000004cf4         ja         loc_4d4c

0000000000004cf6         mov        eax, r10d
0000000000004cf9         mov        r11d, 0x1
0000000000004cff         add        r10d, 0x8
0000000000004d03         add        rax, rbp

                     loc_4d06:
0000000000004d06         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000004d09         test       rax, rax
0000000000004d0c         mov        qword [r8+r9*8], rax
0000000000004d10         je         loc_4d1c

0000000000004d12         add        r9, 0x1
0000000000004d16         cmp        r9, 0xa
0000000000004d1a         jne        loc_4cf0

                     loc_4d1c:
0000000000004d1c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000004d1f         jne        loc_4d45

                     loc_4d21:
0000000000004d21         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000004d26         mov        rax, qword [rsp+0xc8+var_50]
0000000000004d2b         xor        rax, qword [fs:0x28]
0000000000004d34         jne        loc_4d40

0000000000004d36         add        rsp, 0xb8
0000000000004d3d         pop        rbx
0000000000004d3e         pop        rbp
0000000000004d3f         ret
                        ; endp

                     loc_4d40:
0000000000004d40         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_4d45:
0000000000004d45         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000004d4a         jmp        loc_4d21

                     loc_4d4c:
0000000000004d4c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000004d4f         add        rbx, 0x8
0000000000004d53         jmp        loc_4d06
0000000000004d55         align      32                                          ; End of unwind block (FDE at 0x6fb0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000004d60         push       rbx                                         ; Begin of unwind block (FDE at 0x6fdc)
0000000000004d61         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000004d68         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004d6d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004d6f         call       j_dcgettext                                 ; dcgettext
0000000000004d74         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000004d7b         mov        rsi, rax
0000000000004d7e         mov        edi, 0x1
0000000000004d83         xor        eax, eax
0000000000004d85         call       j___printf_chk                              ; __printf_chk
0000000000004d8a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000004d91         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004d96         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004d98         call       j_dcgettext                                 ; dcgettext
0000000000004d9d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004da4         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5481
0000000000004dab         mov        rsi, rax
0000000000004dae         mov        edi, 0x1
0000000000004db3         xor        eax, eax
0000000000004db5         call       j___printf_chk                              ; __printf_chk
0000000000004dba         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004dc1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000004dc8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004dca         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004dcf         call       j_dcgettext                                 ; dcgettext
0000000000004dd4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004dd7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004dda         pop        rbx
0000000000004ddb         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000004de0         push       rbx                                         ; End of unwind block (FDE at 0x6fdc), Begin of unwind block (FDE at 0x6ffc), CODE XREF=quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000004de1         mov        rbx, rdi
0000000000004de4         call       j_malloc                                    ; malloc
0000000000004de9         test       rax, rax
0000000000004dec         jne        loc_4df3

0000000000004dee         test       rbx, rbx
0000000000004df1         jne        loc_4df5

                     loc_4df3:
0000000000004df3         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000004df4         ret
                        ; endp

                     loc_4df5:
0000000000004df5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4dfa:
0000000000004dfa         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x6ffc)
                     xnmalloc:
0000000000004e00         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x7018)
0000000000004e03         mul        rsi
0000000000004e06         mov        rdi, rax
0000000000004e09         seto       al
0000000000004e0c         test       rdi, rdi
0000000000004e0f         js         loc_4e1b

0000000000004e11         movzx      eax, al
0000000000004e14         test       rax, rax
0000000000004e17         jne        loc_4e1b

0000000000004e19         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_4e1b:
0000000000004e1b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
0000000000004e1f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4e24:
0000000000004e24         nop                                                    ; End of unwind block (FDE at 0x7018)
0000000000004e26         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000004e30         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x702c)
                        ; endp
0000000000004e32         align      64                                          ; End of unwind block (FDE at 0x702c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000004e40         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x7040), CODE XREF=add_tab_stop+188, quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000004e43         push       rbx
0000000000004e44         mov        rbx, rsi
0000000000004e47         jne        loc_4e4e

0000000000004e49         test       rdi, rdi
0000000000004e4c         jne        loc_4e68

                     loc_4e4e:
0000000000004e4e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000004e51         call       j_realloc                                   ; realloc
0000000000004e56         test       rax, rax
0000000000004e59         jne        loc_4e60

0000000000004e5b         test       rbx, rbx
0000000000004e5e         jne        loc_4e71

                     loc_4e60:
0000000000004e60         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000004e61         ret
                        ; endp
0000000000004e62         align      8

                     loc_4e68:
0000000000004e68         call       j_free                                      ; free, CODE XREF=xrealloc+12
0000000000004e6d         xor        eax, eax
0000000000004e6f         pop        rbx
0000000000004e70         ret
                        ; endp

                     loc_4e71:
0000000000004e71         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4e76:
0000000000004e76         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x7040)
                     xnrealloc:
0000000000004e80         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x7064)
0000000000004e83         mul        rdx
0000000000004e86         mov        rsi, rax
0000000000004e89         seto       al
0000000000004e8c         test       rsi, rsi
0000000000004e8f         js         loc_4e9b

0000000000004e91         movzx      eax, al
0000000000004e94         test       rax, rax
0000000000004e97         jne        loc_4e9b

0000000000004e99         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_4e9b:
0000000000004e9b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
0000000000004e9f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4ea4:
0000000000004ea4         nop                                                    ; End of unwind block (FDE at 0x7064)
0000000000004ea6         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000004eb0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7078)
0000000000004eb3         mov        r9, rdx
0000000000004eb6         mov        rcx, qword [rsi]
0000000000004eb9         je         loc_4ef0

0000000000004ebb         xor        edx, edx
0000000000004ebd         movabs     rax, 0x5555555555555554
0000000000004ec7         div        r9
0000000000004eca         cmp        rax, rcx
0000000000004ecd         jbe        loc_4f0b

0000000000004ecf         mov        rax, rcx
0000000000004ed2         shr        rax, 0x1
0000000000004ed5         lea        rcx, qword [rax+rcx+1]

                     loc_4eda:
0000000000004eda         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
0000000000004edd         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000004ee1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000004ee4         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000004ee9         align      16

                     loc_4ef0:
0000000000004ef0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000004ef3         je         loc_4f18

                     loc_4ef5:
0000000000004ef5         mov        rax, rcx                                    ; CODE XREF=sub_4f14+28
0000000000004ef8         mul        r9
0000000000004efb         seto       dl
0000000000004efe         test       rax, rax
0000000000004f01         movzx      edx, dl
0000000000004f04         js         loc_4f0b

0000000000004f06         test       rdx, rdx
0000000000004f09         je         loc_4eda

                     loc_4f0b:
0000000000004f0b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
0000000000004f0f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4f14:
0000000000004f14         nop        dword [rax]
                        ; endp

                     loc_4f18:
0000000000004f18         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
0000000000004f1a         mov        eax, 0x80
0000000000004f1f         xor        r8d, r8d
0000000000004f22         div        r9
0000000000004f25         test       rax, rax
0000000000004f28         sete       r8b
0000000000004f2c         lea        rcx, qword [r8+rax]
0000000000004f30         jmp        loc_4ef5
0000000000004f32         align      64                                          ; End of unwind block (FDE at 0x7078)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000004f40         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7090)
0000000000004f43         mov        rax, qword [rsi]
0000000000004f46         je         loc_4f70

0000000000004f48         movabs     rdx, 0x5555555555555553
0000000000004f52         cmp        rax, rdx
0000000000004f55         ja         loc_4f81

0000000000004f57         mov        rdx, rax
0000000000004f5a         shr        rdx, 0x1
0000000000004f5d         lea        rax, qword [rdx+rax+1]

                     loc_4f62:
0000000000004f62         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000004f65         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000004f68         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000004f6d         align      16

                     loc_4f70:
0000000000004f70         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000004f73         mov        edx, 0x80
0000000000004f78         cmove      rax, rdx
0000000000004f7c         test       rax, rax
0000000000004f7f         jns        loc_4f62

                     loc_4f81:
0000000000004f81         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000004f85         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4f8a:
0000000000004f8a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7090)
                     xzalloc:
0000000000004f90         push       rbx                                         ; Begin of unwind block (FDE at 0x70a8)
0000000000004f91         mov        rbx, rdi
0000000000004f94         call       xmalloc                                     ; xmalloc
0000000000004f99         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000004f9c         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004f9e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000004fa1         pop        rbx
0000000000004fa2         jmp        j_memset                                    ; memset
                        ; endp
0000000000004fa7         align      16                                          ; End of unwind block (FDE at 0x70a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000004fb0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x70c4)
0000000000004fb3         sub        rsp, 0x8
0000000000004fb7         mul        rsi
0000000000004fba         seto       dl
0000000000004fbd         test       rax, rax
0000000000004fc0         js         loc_4fd9

0000000000004fc2         movzx      edx, dl
0000000000004fc5         test       rdx, rdx
0000000000004fc8         jne        loc_4fd9

0000000000004fca         call       j_calloc                                    ; calloc
0000000000004fcf         test       rax, rax
0000000000004fd2         je         loc_4fd9

0000000000004fd4         add        rsp, 0x8
0000000000004fd8         ret
                        ; endp

                     loc_4fd9:
0000000000004fd9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4fde:
0000000000004fde         nop                                                    ; End of unwind block (FDE at 0x70c4)
                        ; endp

                     xmemdup:
0000000000004fe0         push       rbp                                         ; Begin of unwind block (FDE at 0x70e0), CODE XREF=clone_quoting_options+40, xstrdup+17
0000000000004fe1         push       rbx
0000000000004fe2         mov        rbp, rdi
0000000000004fe5         mov        rdi, rsi
0000000000004fe8         mov        rbx, rsi
0000000000004feb         sub        rsp, 0x8
0000000000004fef         call       xmalloc                                     ; xmalloc
0000000000004ff4         add        rsp, 0x8
0000000000004ff8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000004ffb         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000004ffe         pop        rbx
0000000000004fff         pop        rbp
0000000000005000         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005003         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005008         align      16                                          ; End of unwind block (FDE at 0x70e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005010         push       rbx                                         ; Begin of unwind block (FDE at 0x7108)
0000000000005011         mov        rbx, rdi
0000000000005014         call       j_strlen                                    ; strlen
0000000000005019         mov        rdi, rbx
000000000000501c         lea        rsi, qword [rax+1]
0000000000005020         pop        rbx
0000000000005021         jmp        xmemdup                                     ; xmemdup
0000000000005023         align      16                                          ; End of unwind block (FDE at 0x7108)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005030         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x7124), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=add_tab_stop+253, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41, xstrndup+19
0000000000005037         sub        rsp, 0x8
000000000000503b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005040         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005042         call       j_dcgettext                                 ; dcgettext
0000000000005047         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000504d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5b53
0000000000005054         mov        rcx, rax
0000000000005057         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005059         xor        eax, eax
000000000000505b         call       j_error                                     ; error
0000000000005060         call       j_abort                                     ; abort
                        ; endp
0000000000005065         align      16                                          ; End of unwind block (FDE at 0x7124)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrndup:
0000000000005070         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x713c), CODE XREF=parse_tab_stops+523
0000000000005074         call       j_strndup                                   ; strndup
0000000000005079         test       rax, rax
000000000000507c         je         loc_5083

000000000000507e         add        rsp, 0x8
0000000000005082         ret
                        ; endp

                     loc_5083:
0000000000005083         call       xalloc_die                                  ; xalloc_die, CODE XREF=xstrndup+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5088:
0000000000005088         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x713c)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000005090         push       r12                                         ; Begin of unwind block (FDE at 0x715c), CODE XREF=next_file+336, cleanup_file_list_stdin+27, close_stream+21
0000000000005092         push       rbp
0000000000005093         push       rbx
0000000000005094         mov        rbx, rdi
0000000000005097         call       j_fileno                                    ; fileno
000000000000509c         test       eax, eax
000000000000509e         mov        rdi, rbx
00000000000050a1         js         loc_50f7

00000000000050a3         call       j___freading                                ; __freading
00000000000050a8         test       eax, eax
00000000000050aa         jne        loc_50d8

                     loc_50ac:
00000000000050ac         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
00000000000050af         call       rpl_fflush                                  ; rpl_fflush
00000000000050b4         test       eax, eax
00000000000050b6         je         loc_50f4

00000000000050b8         call       j___errno_location                          ; __errno_location
00000000000050bd         mov        r12d, dword [rax]
00000000000050c0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
00000000000050c3         mov        rbp, rax
00000000000050c6         call       j_fclose                                    ; fclose
00000000000050cb         test       r12d, r12d
00000000000050ce         jne        loc_5100

                     loc_50d0:
00000000000050d0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
00000000000050d1         pop        rbp
00000000000050d2         pop        r12
00000000000050d4         ret
                        ; endp
00000000000050d5         align      8

                     loc_50d8:
00000000000050d8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
00000000000050db         call       j_fileno                                    ; fileno
00000000000050e0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
00000000000050e2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
00000000000050e7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000050e9         call       j_lseek                                     ; lseek
00000000000050ee         cmp        rax, 0xffffffffffffffff
00000000000050f2         jne        loc_50ac

                     loc_50f4:
00000000000050f4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_50f7:
00000000000050f7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
00000000000050f8         pop        rbp
00000000000050f9         pop        r12
00000000000050fb         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_5100:
0000000000005100         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000005104         mov        eax, 0xffffffff
0000000000005109         jmp        loc_50d0
000000000000510b         align      16                                          ; End of unwind block (FDE at 0x715c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000005110         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7194), CODE XREF=rpl_fclose+31
0000000000005113         push       rbx
0000000000005114         mov        rbx, rdi
0000000000005117         je         loc_512a

0000000000005119         call       j___freading                                ; __freading
000000000000511e         test       eax, eax
0000000000005120         je         loc_512a

0000000000005122         test       dword [rbx], 0x100
0000000000005128         jne        loc_5138

                     loc_512a:
000000000000512a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000000512d         pop        rbx
000000000000512e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000005133         align      8

                     loc_5138:
0000000000005138         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000513b         mov        edx, 0x1
0000000000005140         xor        esi, esi
0000000000005142         call       rpl_fseeko                                  ; rpl_fseeko
0000000000005147         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000514a         pop        rbx
000000000000514b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000005150         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x7194), Begin of unwind block (FDE at 0x71b4), CODE XREF=rpl_fflush+50
0000000000005154         cmp        qword [rdi+0x10], rax
0000000000005158         je         loc_5160

                     j_j_fseeko:        // fseeko
000000000000515a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000515f         align      32

                     loc_5160:
0000000000005160         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000005164         cmp        qword [rdi+0x28], rax
0000000000005168         jne        j_j_fseeko                                  ; fseeko

000000000000516a         cmp        qword [rdi+0x48], 0x0
000000000000516f         jne        j_j_fseeko                                  ; fseeko

0000000000005171         push       r12
0000000000005173         push       rbp
0000000000005174         mov        r12d, edx
0000000000005177         push       rbx
0000000000005178         mov        rbp, rsi
000000000000517b         mov        rbx, rdi
000000000000517e         call       j_fileno                                    ; fileno
0000000000005183         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000005186         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000005189         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000518b         call       j_lseek                                     ; lseek
0000000000005190         cmp        rax, 0xffffffffffffffff
0000000000005194         je         loc_51a2

0000000000005196         and        dword [rbx], 0xffffffef
0000000000005199         mov        qword [rbx+0x90], rax
00000000000051a0         xor        eax, eax

                     loc_51a2:
00000000000051a2         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
00000000000051a3         pop        rbp
00000000000051a4         pop        r12
00000000000051a6         ret
                        ; endp
00000000000051a7         align      16                                          ; End of unwind block (FDE at 0x71b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
00000000000051b0         push       r13                                         ; Begin of unwind block (FDE at 0x71e4), CODE XREF=sub_3360+534
00000000000051b2         push       r12
00000000000051b4         mov        r13, rsi
00000000000051b7         push       rbp
00000000000051b8         push       rbx
00000000000051b9         mov        rbx, rdi
00000000000051bc         mov        r12, rdx
00000000000051bf         sub        rsp, 0x18
00000000000051c3         mov        rax, qword [fs:0x28]
00000000000051cc         mov        qword [rsp+0x38+var_30], rax
00000000000051d1         xor        eax, eax
00000000000051d3         lea        rax, qword [rsp+0x38+var_34]
00000000000051d8         test       rdi, rdi
00000000000051db         cmove      rbx, rax
00000000000051df         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
00000000000051e2         call       j_mbrtowc                                   ; mbrtowc
00000000000051e7         cmp        rax, 0xfffffffffffffffd
00000000000051eb         mov        rbp, rax
00000000000051ee         jbe        loc_5210

00000000000051f0         test       r12, r12
00000000000051f3         je         loc_5210

00000000000051f5         xor        edi, edi
00000000000051f7         call       hard_locale                                 ; hard_locale
00000000000051fc         test       al, al
00000000000051fe         jne        loc_5210

0000000000005200         movzx      eax, byte [r13]
0000000000005205         mov        ebp, 0x1
000000000000520a         mov        dword [rbx], eax
000000000000520c         nop        dword [rax]

                     loc_5210:
0000000000005210         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000005215         xor        rdx, qword [fs:0x28]
000000000000521e         mov        rax, rbp
0000000000005221         jne        loc_522e

0000000000005223         add        rsp, 0x18
0000000000005227         pop        rbx
0000000000005228         pop        rbp
0000000000005229         pop        r12
000000000000522b         pop        r13
000000000000522d         ret
                        ; endp

                     loc_522e:
000000000000522e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005233         align      64                                          ; End of unwind block (FDE at 0x71e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000005240         push       r12                                         ; Begin of unwind block (FDE at 0x7224), CODE XREF=close_stdout+13, close_stdout+51
0000000000005242         push       rbp
0000000000005243         mov        rbp, rdi
0000000000005246         push       rbx
0000000000005247         call       j___fpending                                ; __fpending
000000000000524c         mov        ebx, dword [rbp]
000000000000524f         mov        rdi, rbp
0000000000005252         mov        r12, rax
0000000000005255         call       rpl_fclose                                  ; rpl_fclose
000000000000525a         and        ebx, 0x20
000000000000525d         test       ebx, ebx
000000000000525f         jne        loc_5278

0000000000005261         test       eax, eax
0000000000005263         je         loc_526f

0000000000005265         test       r12, r12
0000000000005268         mov        eax, 0xffffffff
000000000000526d         je         loc_52a8

                     loc_526f:
000000000000526f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000005270         pop        rbp
0000000000005271         pop        r12
0000000000005273         ret
                        ; endp
0000000000005274         align      8

                     loc_5278:
0000000000005278         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000527a         jne        loc_5298

000000000000527c         call       j___errno_location                          ; __errno_location
0000000000005281         mov        dword [rax], 0x0
0000000000005287         mov        eax, 0xffffffff
000000000000528c         pop        rbx
000000000000528d         pop        rbp
000000000000528e         pop        r12
0000000000005290         ret
                        ; endp
0000000000005291         align      8

                     loc_5298:
0000000000005298         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000005299         mov        eax, 0xffffffff
000000000000529e         pop        rbp
000000000000529f         pop        r12
00000000000052a1         ret
                        ; endp
00000000000052a2         align      8

                     loc_52a8:
00000000000052a8         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
00000000000052ad         cmp        dword [rax], 0x9
00000000000052b0         pop        rbx
00000000000052b1         pop        rbp
00000000000052b2         pop        r12
00000000000052b4         setne      al
00000000000052b7         movzx      eax, al
00000000000052ba         neg        eax
00000000000052bc         ret
                        ; endp
00000000000052bd         align      64                                          ; End of unwind block (FDE at 0x7224)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
00000000000052c0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x7274), CODE XREF=rpl_mbrtowc+71
00000000000052c4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000052c6         call       j_setlocale                                 ; setlocale
00000000000052cb         mov        rdx, rax
00000000000052ce         mov        eax, 0x1
00000000000052d3         test       rdx, rdx
00000000000052d6         je         loc_52f5

00000000000052d8         lea        rdi, qword [aMemoryExhauste+17]             ; 0x63e0
00000000000052df         mov        ecx, 0x2
00000000000052e4         mov        rsi, rdx
00000000000052e7         rep  cmpsb byte [rsi], byte [rdi]
00000000000052e9         seta       cl
00000000000052ec         sbb        cl, 0x0
00000000000052ef         xor        eax, eax
00000000000052f1         test       cl, cl
00000000000052f3         jne        loc_5300

                     loc_52f5:
00000000000052f5         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
00000000000052f9         ret
                        ; endp
00000000000052fa         align      256

                     loc_5300:
0000000000005300         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000005307         mov        ecx, 0x6
000000000000530c         mov        rsi, rdx
000000000000530f         rep  cmpsb byte [rsi], byte [rdi]
0000000000005311         seta       al
0000000000005314         sbb        al, 0x0
0000000000005316         test       al, al
0000000000005318         setne      al
000000000000531b         add        rsp, 0x8
000000000000531f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000005320         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x7274), Begin of unwind block (FDE at 0x7294), CODE XREF=gettext_quote.part.1+11
0000000000005324         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000005329         call       j_nl_langinfo                               ; nl_langinfo
000000000000532e         test       rax, rax
0000000000005331         je         loc_5350

0000000000005333         cmp        byte [rax], 0x0
0000000000005336         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000533d         cmove      rax, rdx
0000000000005341         add        rsp, 0x8
0000000000005345         ret
                        ; endp
0000000000005346         align      16

                     loc_5350:
0000000000005350         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000005357         add        rsp, 0x8
000000000000535b         ret
                        ; endp
000000000000535c         align      32                                          ; End of unwind block (FDE at 0x7294)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000005360         push       r15                                         ; Begin of unwind block (FDE at 0x72b4), DATA XREF=_start+22
0000000000005362         push       r14
0000000000005364         mov        r15, rdx
0000000000005367         push       r13
0000000000005369         push       r12
000000000000536b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000005372         push       rbp
0000000000005373         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000537a         push       rbx
000000000000537b         mov        r13d, edi
000000000000537e         mov        r14, rsi
0000000000005381         sub        rbp, r12
0000000000005384         sub        rsp, 0x8
0000000000005388         sar        rbp, 0x3
000000000000538c         call       _init                                       ; _init
0000000000005391         test       rbp, rbp
0000000000005394         je         loc_53b6

0000000000005396         xor        ebx, ebx
0000000000005398         nop        dword [rax+rax]

                     loc_53a0:
00000000000053a0         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
00000000000053a3         mov        rsi, r14
00000000000053a6         mov        edi, r13d
00000000000053a9         call       qword [r12+rbx*8]
00000000000053ad         add        rbx, 0x1
00000000000053b1         cmp        rbp, rbx
00000000000053b4         jne        loc_53a0

                     loc_53b6:
00000000000053b6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
00000000000053ba         pop        rbx
00000000000053bb         pop        rbp
00000000000053bc         pop        r12
00000000000053be         pop        r13
00000000000053c0         pop        r14
00000000000053c2         pop        r15
00000000000053c4         ret
                        ; endp
00000000000053c5         align      16                                          ; End of unwind block (FDE at 0x72b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
00000000000053d0         ret                                                    ; Begin of unwind block (FDE at 0x72fc), DATA XREF=_start+15
                        ; endp
00000000000053d2         align      32                                          ; End of unwind block (FDE at 0x72fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
00000000000053e0         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x7314), __dso_handle, CODE XREF=main+103
00000000000053e7         xor        esi, esi
00000000000053e9         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
00000000000053ee         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x7314)
00000000000053ef         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x53f0; 0x53f9[ (9 bytes)
        ; File offset : [21488; 21497[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
00000000000053f0         sub        rsp, 0x8
00000000000053f4         add        rsp, 0x8
00000000000053f8         ret
                        ; endp
00000000000053f9         db  0x00 ; '.'
00000000000053fa         db  0x00 ; '.'
00000000000053fb         db  0x00 ; '.'
00000000000053fc         db  0x00 ; '.'
00000000000053fd         db  0x00 ; '.'
00000000000053fe         db  0x00 ; '.'
00000000000053ff         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x5400; 0x63ee[ (4078 bytes)
        ; File offset : [21504; 25582[ (4078 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000005400         db  0x01 ; '.'
0000000000005401         db  0x00 ; '.'
0000000000005402         db  0x02 ; '.'
0000000000005403         db  0x00 ; '.'
                     aExpand:
0000000000005404         db         "expand", 0                                 ; DATA XREF=main+200, usage+347, usage+668, usage+852, usage+871, usage+905
000000000000540b         db  0x5b ; '['                                         ; DATA XREF=usage+359
000000000000540c         db  0x00 ; '.'
                     aTestInvocation:
000000000000540d         db         "test invocation", 0                        ; DATA XREF=usage+398
                     aMulticallInvoc:
000000000000541d         db         "Multi-call invocation", 0                  ; DATA XREF=usage+446
                     aSha224sum:
0000000000005433         db         "sha224sum", 0                              ; DATA XREF=usage+463
                     aSha2Utilities:
000000000000543d         db         "sha2 utilities", 0                         ; DATA XREF=usage+475
                     aSha256sum:
000000000000544c         db         "sha256sum", 0                              ; DATA XREF=usage+366
                     aSha384sum:
0000000000005456         db         "sha384sum", 0                              ; DATA XREF=usage+410
                     aSha512sum:
0000000000005460         db         "sha512sum", 0                              ; DATA XREF=usage+434
                     aNsOnlineHelpSn:
000000000000546a         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+554
0000000000005481         db  0x47 ; 'G'                                         ; DATA XREF=main+193, usage+582, usage+775, emit_bug_reporting_address+68
0000000000005482         db  0x4e ; 'N'
0000000000005483         db  0x55 ; 'U'
0000000000005484         db  0x20 ; ' '
                     aCoreutils:
0000000000005485         db         "coreutils", 0                              ; DATA XREF=main+72, main+84, usage+422
000000000000548f         db  0x65 ; 'e'                                         ; DATA XREF=usage+621, usage+814
0000000000005490         db  0x6e ; 'n'
0000000000005491         db  0x5f ; '_'
0000000000005492         db  0x00 ; '.'
                     aFullDocumentat:
0000000000005493         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+649, usage+838
                     aUsrlocalsharel:
00000000000054ae         db         "/usr/local/share/locale", 0                ; DATA XREF=main+65
                     aDavidMackenzie:
00000000000054c6         db         "David MacKenzie", 0                        ; DATA XREF=main+186
                     aInputLineIsToo:
00000000000054d6         db         "input line is too long", 0                 ; DATA XREF=main+908, main+944
                     aWriteError:
00000000000054ed         db         "write error", 0                            ; DATA XREF=main+674, main+835, close_stdout+67
                     aTabs:
00000000000054f9         db         "tabs", 0
                     aInitial:
00000000000054fe         db         "initial", 0
                     aHelp:
0000000000005506         db         "help", 0
                     aVersion:
000000000000550b         db         "version", 0
0000000000005513         align      8
                     aTrySHelpForMor:
0000000000005518         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
000000000000553f         align      64
                     aUsageSOptionFi:
0000000000005540         db         "Usage: %s [OPTION]... [FILE]...\n", 0      ; DATA XREF=usage+93
0000000000005561         align      8
                     aConvertTabsInE:
0000000000005568         db         "Convert tabs in each FILE to spaces, writing to standard output.\n", 0 ; DATA XREF=usage+132
00000000000055aa         align      16
                     aNwithNoFileOrW:
00000000000055b0         db         "\nWith no FILE, or when FILE is -, read standard input.\n", 0 ; DATA XREF=usage+169
                     aNmandatoryArgu:
00000000000055e8         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+206
0000000000005633         align      8
                     aIInitialDoNotC:
0000000000005638         db         "  -i, --initial    do not convert tabs after non blanks\n  -t, --tabs=N     have tabs N characters apart, not 8\n", 0 ; DATA XREF=usage+243
                     aHelpDisplayThi:
00000000000056a8         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+285
00000000000056d5         align      8
                     aVersionOutputV:
00000000000056d8         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+322
000000000000570e         align      16
                     aHttpswwwgnuorg:
0000000000005710         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+575, usage+675, usage+768, usage+878, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000005738         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+919
000000000000577f         align      128
                     aOrAvailableLoc:
0000000000005780         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+718
00000000000057b3         db  0x00 ; '.'
00000000000057b4         db  0x00 ; '.'
00000000000057b5         db  0x00 ; '.'
00000000000057b6         db  0x00 ; '.'
00000000000057b7         db  0x00 ; '.'
00000000000057b8         db  0x00 ; '.'
00000000000057b9         db  0x00 ; '.'
00000000000057ba         db  0x00 ; '.'
00000000000057bb         db  0x00 ; '.'
00000000000057bc         db  0x00 ; '.'
00000000000057bd         db  0x00 ; '.'
00000000000057be         db  0x00 ; '.'
00000000000057bf         db  0x00 ; '.'
                     shortopts:
00000000000057c0         db  0x69 ; 'i'                                         ; DATA XREF=main+122
00000000000057c1         db  0x74 ; 't'
00000000000057c2         db  0x3a ; ':'
00000000000057c3         db  0x30 ; '0'
00000000000057c4         db  0x3a ; ':'
00000000000057c5         db  0x3a ; ':'
00000000000057c6         db  0x31 ; '1'
00000000000057c7         db  0x3a ; ':'
00000000000057c8         db  0x3a ; ':'
00000000000057c9         db  0x32 ; '2'
00000000000057ca         db  0x3a ; ':'
00000000000057cb         db  0x3a ; ':'
00000000000057cc         db  0x33 ; '3'
00000000000057cd         db  0x3a ; ':'
00000000000057ce         db  0x3a ; ':'
00000000000057cf         db  0x34 ; '4'
00000000000057d0         db  0x3a ; ':'
00000000000057d1         db  0x3a ; ':'
00000000000057d2         db  0x35 ; '5'
00000000000057d3         db  0x3a ; ':'
00000000000057d4         db  0x3a ; ':'
00000000000057d5         db  0x36 ; '6'
00000000000057d6         db  0x3a ; ':'
00000000000057d7         db  0x3a ; ':'
00000000000057d8         db  0x37 ; '7'
00000000000057d9         db  0x3a ; ':'
00000000000057da         db  0x3a ; ':'
00000000000057db         db  0x38 ; '8'
00000000000057dc         db  0x3a ; ':'
00000000000057dd         db  0x3a ; ':'
00000000000057de         db  0x39 ; '9'
00000000000057df         db  0x3a ; ':'
00000000000057e0         db  0x3a ; ':'
00000000000057e1         db  0x00 ; '.'
00000000000057e2         db  0x00 ; '.'
00000000000057e3         db  0x00 ; '.'
00000000000057e4         db  0x00 ; '.'
00000000000057e5         db  0x00 ; '.'
00000000000057e6         db  0x00 ; '.'
00000000000057e7         db  0x00 ; '.'
                     aSpecifierOnlyA:
00000000000057e8         db         "'/' specifier only allowed with the last value", 0 ; DATA XREF=set_extend_size+19
0000000000005817         align      8
                     aSpecifierOnlyA_5818:        // aSpecifierOnlyA
0000000000005818         db         "'+' specifier only allowed with the last value", 0 ; DATA XREF=set_increment_size+19
0000000000005847         align      8
                     aSpecifierNotAt_5848:        // aSpecifierNotAt
0000000000005848         db         "'/' specifier not at start of number: %s", 0 ; DATA XREF=parse_tab_stops+627
0000000000005871         align      8
                     aSpecifierNotAt:
0000000000005878         db         "'+' specifier not at start of number: %s", 0 ; DATA XREF=parse_tab_stops+699
00000000000058a1         align      8
                     aTabSizeContain:
00000000000058a8         db         "tab size contains invalid character(s): %s", 0 ; DATA XREF=parse_tab_stops+808
00000000000058d3         align      8
                     aSpecifierIsMut:
00000000000058d8         db         "'/' specifier is mutually exclusive with '+'", 0 ; DATA XREF=finalize_tab_stops+280
0000000000005905         align      8
                     aCoreutils831sr:
0000000000005908         db         "../coreutils-8.31/src/expand-common.c", 0  ; DATA XREF=next_file+489
000000000000592e         align      16
                     aTTabslistUseCo:
0000000000005930         db         "  -t, --tabs=LIST  use comma separated list of tab positions\n", 0 ; DATA XREF=emit_tab_list_info+8
000000000000596e         align      16
                     aTheLastSpecifi:
0000000000005970         db         "                     The last specified position can be prefixed with '/'\n                     to specify a tab size to use after the last\n                     explicitly specified tab stop.  Also a prefix of '+'\n                     can be used to align r" ; DATA XREF=emit_tab_list_info+45
0000000000005a70         db         "emaining tab stops relative to\n                     the last specified tab stop instead of the first column\n", 0
                     a0123456789:
0000000000005add         db         "0123456789", 0                             ; DATA XREF=parse_tab_stops+495
                     aTabStopIsTooLa:
0000000000005ae8         db         "tab stop is too large %s", 0               ; DATA XREF=parse_tab_stops+539
                     aTabSizeCannotB:
0000000000005b01         db         "tab size cannot be 0", 0                   ; DATA XREF=finalize_tab_stops+208
                     aTabSizesMustBe:
0000000000005b16         db         "tab sizes must be ascending", 0            ; DATA XREF=finalize_tab_stops+244
                     aPrevfile:
0000000000005b32         db         "prev_file", 0                              ; DATA XREF=next_file+496
0000000000005b3c         align      64
                     __PRETTY_FUNCTION__.6961:
0000000000005b40         db         "next_file", 0                              ; DATA XREF=next_file+482
                     a831:
0000000000005b4a         db         "8.31", 0                                   ; DATA XREF=Version
                     aSS:
0000000000005b4f         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
0000000000005b56         align      8
                     aANullArgv0WasP:
0000000000005b58         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000005b90         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000005b98         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000005b99         db  0x74 ; 't'
0000000000005b9a         db  0x2d ; '-'                                         ; DATA XREF=next_file+41, next_file+109, cleanup_file_list_stdin+48
0000000000005b9b         db  0x00 ; '.'
0000000000005b9c         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000005b9d         db  0x80 ; '.'
0000000000005b9e         db  0x98 ; '.'
0000000000005b9f         db  0x00 ; '.'
0000000000005ba0         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000005ba1         db  0x80 ; '.'
0000000000005ba2         db  0x99 ; '.'
0000000000005ba3         db  0x00 ; '.'
0000000000005ba4         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
0000000000005ba5         db  0x07 ; '.'
0000000000005ba6         db  0x65 ; 'e'
0000000000005ba7         db  0x00 ; '.'
0000000000005ba8         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000005ba9         db  0xaf ; '.'
0000000000005baa         db  0x00 ; '.'
0000000000005bab         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_3360+1451, sub_3360+1493, sub_3360+2429
0000000000005bac         db  0x00 ; '.'
0000000000005bad         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_3360+132, sub_3360+1338, sub_3360+1670, sub_3360+1697, sub_3360+2352
0000000000005bae         db  0x00 ; '.'
0000000000005baf         db  0x60 ; '`'                                         ; DATA XREF=sub_3360+1627, sub_3360+1654
0000000000005bb0         db  0x00 ; '.'
                     aLiteral:
0000000000005bb1         db         "literal", 0
                     aShell:
0000000000005bb9         db         "shell", 0
                     aShellalways:
0000000000005bbf         db         "shell-always", 0
0000000000005bcc         db  0x73 ; 's'
0000000000005bcd         db  0x68 ; 'h'
0000000000005bce         db  0x65 ; 'e'
0000000000005bcf         db  0x6c ; 'l'
0000000000005bd0         db  0x6c ; 'l'
0000000000005bd1         db  0x2d ; '-'
                     aEscape:
0000000000005bd2         db         "escape", 0
                     aShellescapealw:
0000000000005bd9         db         "shell-escape-always", 0
0000000000005bed         db  0x63 ; 'c'
0000000000005bee         db  0x00 ; '.'
                     aCmaybe:
0000000000005bef         db         "c-maybe", 0
                     aClocale:
0000000000005bf7         db         "clocale", 0
0000000000005bff         align      1024
                     switch_table_5c00:        // switch_table
0000000000005c00         dd         quotearg_buffer_restyled.loc_3a5a-switch_table_5c00, quotearg_buffer_restyled.loc_2cb3-switch_table_5c00, quotearg_buffer_restyled.loc_3c88-switch_table_5c00, quotearg_buffer_restyled.loc_3a94-switch_table_5c00 ; switch table used at 0x2cb1 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000005c10         dd         quotearg_buffer_restyled.loc_3884-switch_table_5c00, quotearg_buffer_restyled.loc_38e0-switch_table_5c00, quotearg_buffer_restyled.loc_3935-switch_table_5c00, quotearg_buffer_restyled.loc_397a-switch_table_5c00
0000000000005c20         dd         3 dup (quotearg_buffer_restyled.loc_39b4-switch_table_5c00)
0000000000005c2c         db  0x04 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
0000000000005c2d         db  0xd4 ; '.'
0000000000005c2e         db  0xff ; '.'
0000000000005c2f         db  0xff ; '.'
0000000000005c30         db  0xec ; '.'
0000000000005c31         db  0xd4 ; '.'
0000000000005c32         db  0xff ; '.'
0000000000005c33         db  0xff ; '.'
0000000000005c34         db  0xec ; '.'
0000000000005c35         db  0xd4 ; '.'
0000000000005c36         db  0xff ; '.'
0000000000005c37         db  0xff ; '.'
0000000000005c38         db  0xec ; '.'
0000000000005c39         db  0xd4 ; '.'
0000000000005c3a         db  0xff ; '.'
0000000000005c3b         db  0xff ; '.'
0000000000005c3c         db  0xec ; '.'
0000000000005c3d         db  0xd4 ; '.'
0000000000005c3e         db  0xff ; '.'
0000000000005c3f         db  0xff ; '.'
0000000000005c40         db  0xec ; '.'
0000000000005c41         db  0xd4 ; '.'
0000000000005c42         db  0xff ; '.'
0000000000005c43         db  0xff ; '.'
0000000000005c44         db  0xec ; '.'
0000000000005c45         db  0xd4 ; '.'
0000000000005c46         db  0xff ; '.'
0000000000005c47         db  0xff ; '.'
0000000000005c48         db  0x44 ; 'D'
0000000000005c49         db  0xd4 ; '.'
0000000000005c4a         db  0xff ; '.'
0000000000005c4b         db  0xff ; '.'
0000000000005c4c         db  0x4c ; 'L'
0000000000005c4d         db  0xd3 ; '.'
0000000000005c4e         db  0xff ; '.'
0000000000005c4f         db  0xff ; '.'
0000000000005c50         db  0x0c ; '.'
0000000000005c51         db  0xd3 ; '.'
0000000000005c52         db  0xff ; '.'
0000000000005c53         db  0xff ; '.'
0000000000005c54         db  0xd4 ; '.'
0000000000005c55         db  0xd4 ; '.'
0000000000005c56         db  0xff ; '.'
0000000000005c57         db  0xff ; '.'
0000000000005c58         db  0xc4 ; '.'
0000000000005c59         db  0xd4 ; '.'
0000000000005c5a         db  0xff ; '.'
0000000000005c5b         db  0xff ; '.'
0000000000005c5c         db  0xb4 ; '.'
0000000000005c5d         db  0xd4 ; '.'
0000000000005c5e         db  0xff ; '.'
0000000000005c5f         db  0xff ; '.'
0000000000005c60         db  0xa4 ; '.'
0000000000005c61         db  0xd4 ; '.'
0000000000005c62         db  0xff ; '.'
0000000000005c63         db  0xff ; '.'
0000000000005c64         db  0xec ; '.'
0000000000005c65         db  0xd4 ; '.'
0000000000005c66         db  0xff ; '.'
0000000000005c67         db  0xff ; '.'
0000000000005c68         db  0xec ; '.'
0000000000005c69         db  0xd4 ; '.'
0000000000005c6a         db  0xff ; '.'
0000000000005c6b         db  0xff ; '.'
0000000000005c6c         db  0xec ; '.'
0000000000005c6d         db  0xd4 ; '.'
0000000000005c6e         db  0xff ; '.'
0000000000005c6f         db  0xff ; '.'
0000000000005c70         db  0xec ; '.'
0000000000005c71         db  0xd4 ; '.'
0000000000005c72         db  0xff ; '.'
0000000000005c73         db  0xff ; '.'
0000000000005c74         db  0xec ; '.'
0000000000005c75         db  0xd4 ; '.'
0000000000005c76         db  0xff ; '.'
0000000000005c77         db  0xff ; '.'
0000000000005c78         db  0xec ; '.'
0000000000005c79         db  0xd4 ; '.'
0000000000005c7a         db  0xff ; '.'
0000000000005c7b         db  0xff ; '.'
0000000000005c7c         db  0xec ; '.'
0000000000005c7d         db  0xd4 ; '.'
0000000000005c7e         db  0xff ; '.'
0000000000005c7f         db  0xff ; '.'
0000000000005c80         db  0xec ; '.'
0000000000005c81         db  0xd4 ; '.'
0000000000005c82         db  0xff ; '.'
0000000000005c83         db  0xff ; '.'
0000000000005c84         db  0xec ; '.'
0000000000005c85         db  0xd4 ; '.'
0000000000005c86         db  0xff ; '.'
0000000000005c87         db  0xff ; '.'
0000000000005c88         db  0xec ; '.'
0000000000005c89         db  0xd4 ; '.'
0000000000005c8a         db  0xff ; '.'
0000000000005c8b         db  0xff ; '.'
0000000000005c8c         db  0xec ; '.'
0000000000005c8d         db  0xd4 ; '.'
0000000000005c8e         db  0xff ; '.'
0000000000005c8f         db  0xff ; '.'
0000000000005c90         db  0xec ; '.'
0000000000005c91         db  0xd4 ; '.'
0000000000005c92         db  0xff ; '.'
0000000000005c93         db  0xff ; '.'
0000000000005c94         db  0xec ; '.'
0000000000005c95         db  0xd4 ; '.'
0000000000005c96         db  0xff ; '.'
0000000000005c97         db  0xff ; '.'
0000000000005c98         db  0xec ; '.'
0000000000005c99         db  0xd4 ; '.'
0000000000005c9a         db  0xff ; '.'
0000000000005c9b         db  0xff ; '.'
0000000000005c9c         db  0xec ; '.'
0000000000005c9d         db  0xd4 ; '.'
0000000000005c9e         db  0xff ; '.'
0000000000005c9f         db  0xff ; '.'
0000000000005ca0         db  0xec ; '.'
0000000000005ca1         db  0xd4 ; '.'
0000000000005ca2         db  0xff ; '.'
0000000000005ca3         db  0xff ; '.'
0000000000005ca4         db  0xec ; '.'
0000000000005ca5         db  0xd4 ; '.'
0000000000005ca6         db  0xff ; '.'
0000000000005ca7         db  0xff ; '.'
0000000000005ca8         db  0xec ; '.'
0000000000005ca9         db  0xd4 ; '.'
0000000000005caa         db  0xff ; '.'
0000000000005cab         db  0xff ; '.'
0000000000005cac         db  0x94 ; '.'
0000000000005cad         db  0xd4 ; '.'
0000000000005cae         db  0xff ; '.'
0000000000005caf         db  0xff ; '.'
0000000000005cb0         db  0x84 ; '.'
0000000000005cb1         db  0xd4 ; '.'
0000000000005cb2         db  0xff ; '.'
0000000000005cb3         db  0xff ; '.'
0000000000005cb4         db  0x84 ; '.'
0000000000005cb5         db  0xd4 ; '.'
0000000000005cb6         db  0xff ; '.'
0000000000005cb7         db  0xff ; '.'
0000000000005cb8         db  0x54 ; 'T'
0000000000005cb9         db  0xd4 ; '.'
0000000000005cba         db  0xff ; '.'
0000000000005cbb         db  0xff ; '.'
0000000000005cbc         db  0x84 ; '.'
0000000000005cbd         db  0xd4 ; '.'
0000000000005cbe         db  0xff ; '.'
0000000000005cbf         db  0xff ; '.'
0000000000005cc0         db  0x2c ; ','
0000000000005cc1         db  0xd4 ; '.'
0000000000005cc2         db  0xff ; '.'
0000000000005cc3         db  0xff ; '.'
0000000000005cc4         db  0x84 ; '.'
0000000000005cc5         db  0xd4 ; '.'
0000000000005cc6         db  0xff ; '.'
0000000000005cc7         db  0xff ; '.'
0000000000005cc8         db  0xe7 ; '.'
0000000000005cc9         db  0xd2 ; '.'
0000000000005cca         db  0xff ; '.'
0000000000005ccb         db  0xff ; '.'
0000000000005ccc         db  0x84 ; '.'
0000000000005ccd         db  0xd4 ; '.'
0000000000005cce         db  0xff ; '.'
0000000000005ccf         db  0xff ; '.'
0000000000005cd0         db  0x84 ; '.'
0000000000005cd1         db  0xd4 ; '.'
0000000000005cd2         db  0xff ; '.'
0000000000005cd3         db  0xff ; '.'
0000000000005cd4         db  0x84 ; '.'
0000000000005cd5         db  0xd4 ; '.'
0000000000005cd6         db  0xff ; '.'
0000000000005cd7         db  0xff ; '.'
0000000000005cd8         db  0x2c ; ','
0000000000005cd9         db  0xd4 ; '.'
0000000000005cda         db  0xff ; '.'
0000000000005cdb         db  0xff ; '.'
0000000000005cdc         db  0x2c ; ','
0000000000005cdd         db  0xd4 ; '.'
0000000000005cde         db  0xff ; '.'
0000000000005cdf         db  0xff ; '.'
0000000000005ce0         db  0x2c ; ','
0000000000005ce1         db  0xd4 ; '.'
0000000000005ce2         db  0xff ; '.'
0000000000005ce3         db  0xff ; '.'
0000000000005ce4         db  0x2c ; ','
0000000000005ce5         db  0xd4 ; '.'
0000000000005ce6         db  0xff ; '.'
0000000000005ce7         db  0xff ; '.'
0000000000005ce8         db  0x2c ; ','
0000000000005ce9         db  0xd4 ; '.'
0000000000005cea         db  0xff ; '.'
0000000000005ceb         db  0xff ; '.'
0000000000005cec         db  0x2c ; ','
0000000000005ced         db  0xd4 ; '.'
0000000000005cee         db  0xff ; '.'
0000000000005cef         db  0xff ; '.'
0000000000005cf0         db  0x2c ; ','
0000000000005cf1         db  0xd4 ; '.'
0000000000005cf2         db  0xff ; '.'
0000000000005cf3         db  0xff ; '.'
0000000000005cf4         db  0x2c ; ','
0000000000005cf5         db  0xd4 ; '.'
0000000000005cf6         db  0xff ; '.'
0000000000005cf7         db  0xff ; '.'
0000000000005cf8         db  0x2c ; ','
0000000000005cf9         db  0xd4 ; '.'
0000000000005cfa         db  0xff ; '.'
0000000000005cfb         db  0xff ; '.'
0000000000005cfc         db  0x2c ; ','
0000000000005cfd         db  0xd4 ; '.'
0000000000005cfe         db  0xff ; '.'
0000000000005cff         db  0xff ; '.'
0000000000005d00         db  0x2c ; ','
0000000000005d01         db  0xd4 ; '.'
0000000000005d02         db  0xff ; '.'
0000000000005d03         db  0xff ; '.'
0000000000005d04         db  0x2c ; ','
0000000000005d05         db  0xd4 ; '.'
0000000000005d06         db  0xff ; '.'
0000000000005d07         db  0xff ; '.'
0000000000005d08         db  0x2c ; ','
0000000000005d09         db  0xd4 ; '.'
0000000000005d0a         db  0xff ; '.'
0000000000005d0b         db  0xff ; '.'
0000000000005d0c         db  0x2c ; ','
0000000000005d0d         db  0xd4 ; '.'
0000000000005d0e         db  0xff ; '.'
0000000000005d0f         db  0xff ; '.'
0000000000005d10         db  0x2c ; ','
0000000000005d11         db  0xd4 ; '.'
0000000000005d12         db  0xff ; '.'
0000000000005d13         db  0xff ; '.'
0000000000005d14         db  0x2c ; ','
0000000000005d15         db  0xd4 ; '.'
0000000000005d16         db  0xff ; '.'
0000000000005d17         db  0xff ; '.'
0000000000005d18         db  0x84 ; '.'
0000000000005d19         db  0xd4 ; '.'
0000000000005d1a         db  0xff ; '.'
0000000000005d1b         db  0xff ; '.'
0000000000005d1c         db  0x84 ; '.'
0000000000005d1d         db  0xd4 ; '.'
0000000000005d1e         db  0xff ; '.'
0000000000005d1f         db  0xff ; '.'
0000000000005d20         db  0x84 ; '.'
0000000000005d21         db  0xd4 ; '.'
0000000000005d22         db  0xff ; '.'
0000000000005d23         db  0xff ; '.'
0000000000005d24         db  0x84 ; '.'
0000000000005d25         db  0xd4 ; '.'
0000000000005d26         db  0xff ; '.'
0000000000005d27         db  0xff ; '.'
0000000000005d28         db  0xb7 ; '.'
0000000000005d29         db  0xd2 ; '.'
0000000000005d2a         db  0xff ; '.'
0000000000005d2b         db  0xff ; '.'
0000000000005d2c         db  0xec ; '.'
0000000000005d2d         db  0xd4 ; '.'
0000000000005d2e         db  0xff ; '.'
0000000000005d2f         db  0xff ; '.'
0000000000005d30         db  0x2c ; ','
0000000000005d31         db  0xd4 ; '.'
0000000000005d32         db  0xff ; '.'
0000000000005d33         db  0xff ; '.'
0000000000005d34         db  0x2c ; ','
0000000000005d35         db  0xd4 ; '.'
0000000000005d36         db  0xff ; '.'
0000000000005d37         db  0xff ; '.'
0000000000005d38         db  0x2c ; ','
0000000000005d39         db  0xd4 ; '.'
0000000000005d3a         db  0xff ; '.'
0000000000005d3b         db  0xff ; '.'
0000000000005d3c         db  0x2c ; ','
0000000000005d3d         db  0xd4 ; '.'
0000000000005d3e         db  0xff ; '.'
0000000000005d3f         db  0xff ; '.'
0000000000005d40         db  0x2c ; ','
0000000000005d41         db  0xd4 ; '.'
0000000000005d42         db  0xff ; '.'
0000000000005d43         db  0xff ; '.'
0000000000005d44         db  0x2c ; ','
0000000000005d45         db  0xd4 ; '.'
0000000000005d46         db  0xff ; '.'
0000000000005d47         db  0xff ; '.'
0000000000005d48         db  0x2c ; ','
0000000000005d49         db  0xd4 ; '.'
0000000000005d4a         db  0xff ; '.'
0000000000005d4b         db  0xff ; '.'
0000000000005d4c         db  0x2c ; ','
0000000000005d4d         db  0xd4 ; '.'
0000000000005d4e         db  0xff ; '.'
0000000000005d4f         db  0xff ; '.'
0000000000005d50         db  0x2c ; ','
0000000000005d51         db  0xd4 ; '.'
0000000000005d52         db  0xff ; '.'
0000000000005d53         db  0xff ; '.'
0000000000005d54         db  0x2c ; ','
0000000000005d55         db  0xd4 ; '.'
0000000000005d56         db  0xff ; '.'
0000000000005d57         db  0xff ; '.'
0000000000005d58         db  0x2c ; ','
0000000000005d59         db  0xd4 ; '.'
0000000000005d5a         db  0xff ; '.'
0000000000005d5b         db  0xff ; '.'
0000000000005d5c         db  0x2c ; ','
0000000000005d5d         db  0xd4 ; '.'
0000000000005d5e         db  0xff ; '.'
0000000000005d5f         db  0xff ; '.'
0000000000005d60         db  0x2c ; ','
0000000000005d61         db  0xd4 ; '.'
0000000000005d62         db  0xff ; '.'
0000000000005d63         db  0xff ; '.'
0000000000005d64         db  0x2c ; ','
0000000000005d65         db  0xd4 ; '.'
0000000000005d66         db  0xff ; '.'
0000000000005d67         db  0xff ; '.'
0000000000005d68         db  0x2c ; ','
0000000000005d69         db  0xd4 ; '.'
0000000000005d6a         db  0xff ; '.'
0000000000005d6b         db  0xff ; '.'
0000000000005d6c         db  0x2c ; ','
0000000000005d6d         db  0xd4 ; '.'
0000000000005d6e         db  0xff ; '.'
0000000000005d6f         db  0xff ; '.'
0000000000005d70         db  0x2c ; ','
0000000000005d71         db  0xd4 ; '.'
0000000000005d72         db  0xff ; '.'
0000000000005d73         db  0xff ; '.'
0000000000005d74         db  0x2c ; ','
0000000000005d75         db  0xd4 ; '.'
0000000000005d76         db  0xff ; '.'
0000000000005d77         db  0xff ; '.'
0000000000005d78         db  0x2c ; ','
0000000000005d79         db  0xd4 ; '.'
0000000000005d7a         db  0xff ; '.'
0000000000005d7b         db  0xff ; '.'
0000000000005d7c         db  0x2c ; ','
0000000000005d7d         db  0xd4 ; '.'
0000000000005d7e         db  0xff ; '.'
0000000000005d7f         db  0xff ; '.'
0000000000005d80         db  0x2c ; ','
0000000000005d81         db  0xd4 ; '.'
0000000000005d82         db  0xff ; '.'
0000000000005d83         db  0xff ; '.'
0000000000005d84         db  0x2c ; ','
0000000000005d85         db  0xd4 ; '.'
0000000000005d86         db  0xff ; '.'
0000000000005d87         db  0xff ; '.'
0000000000005d88         db  0x2c ; ','
0000000000005d89         db  0xd4 ; '.'
0000000000005d8a         db  0xff ; '.'
0000000000005d8b         db  0xff ; '.'
0000000000005d8c         db  0x2c ; ','
0000000000005d8d         db  0xd4 ; '.'
0000000000005d8e         db  0xff ; '.'
0000000000005d8f         db  0xff ; '.'
0000000000005d90         db  0x2c ; ','
0000000000005d91         db  0xd4 ; '.'
0000000000005d92         db  0xff ; '.'
0000000000005d93         db  0xff ; '.'
0000000000005d94         db  0x2c ; ','
0000000000005d95         db  0xd4 ; '.'
0000000000005d96         db  0xff ; '.'
0000000000005d97         db  0xff ; '.'
0000000000005d98         db  0x84 ; '.'
0000000000005d99         db  0xd4 ; '.'
0000000000005d9a         db  0xff ; '.'
0000000000005d9b         db  0xff ; '.'
0000000000005d9c         db  0x5c ; '\'
0000000000005d9d         db  0xd3 ; '.'
0000000000005d9e         db  0xff ; '.'
0000000000005d9f         db  0xff ; '.'
0000000000005da0         db  0x2c ; ','
0000000000005da1         db  0xd4 ; '.'
0000000000005da2         db  0xff ; '.'
0000000000005da3         db  0xff ; '.'
0000000000005da4         db  0x84 ; '.'
0000000000005da5         db  0xd4 ; '.'
0000000000005da6         db  0xff ; '.'
0000000000005da7         db  0xff ; '.'
0000000000005da8         db  0x2c ; ','
0000000000005da9         db  0xd4 ; '.'
0000000000005daa         db  0xff ; '.'
0000000000005dab         db  0xff ; '.'
0000000000005dac         db  0x84 ; '.'
0000000000005dad         db  0xd4 ; '.'
0000000000005dae         db  0xff ; '.'
0000000000005daf         db  0xff ; '.'
0000000000005db0         db  0x2c ; ','
0000000000005db1         db  0xd4 ; '.'
0000000000005db2         db  0xff ; '.'
0000000000005db3         db  0xff ; '.'
0000000000005db4         db  0x2c ; ','
0000000000005db5         db  0xd4 ; '.'
0000000000005db6         db  0xff ; '.'
0000000000005db7         db  0xff ; '.'
0000000000005db8         db  0x2c ; ','
0000000000005db9         db  0xd4 ; '.'
0000000000005dba         db  0xff ; '.'
0000000000005dbb         db  0xff ; '.'
0000000000005dbc         db  0x2c ; ','
0000000000005dbd         db  0xd4 ; '.'
0000000000005dbe         db  0xff ; '.'
0000000000005dbf         db  0xff ; '.'
0000000000005dc0         db  0x2c ; ','
0000000000005dc1         db  0xd4 ; '.'
0000000000005dc2         db  0xff ; '.'
0000000000005dc3         db  0xff ; '.'
0000000000005dc4         db  0x2c ; ','
0000000000005dc5         db  0xd4 ; '.'
0000000000005dc6         db  0xff ; '.'
0000000000005dc7         db  0xff ; '.'
0000000000005dc8         db  0x2c ; ','
0000000000005dc9         db  0xd4 ; '.'
0000000000005dca         db  0xff ; '.'
0000000000005dcb         db  0xff ; '.'
0000000000005dcc         db  0x2c ; ','
0000000000005dcd         db  0xd4 ; '.'
0000000000005dce         db  0xff ; '.'
0000000000005dcf         db  0xff ; '.'
0000000000005dd0         db  0x2c ; ','
0000000000005dd1         db  0xd4 ; '.'
0000000000005dd2         db  0xff ; '.'
0000000000005dd3         db  0xff ; '.'
0000000000005dd4         db  0x2c ; ','
0000000000005dd5         db  0xd4 ; '.'
0000000000005dd6         db  0xff ; '.'
0000000000005dd7         db  0xff ; '.'
0000000000005dd8         db  0x2c ; ','
0000000000005dd9         db  0xd4 ; '.'
0000000000005dda         db  0xff ; '.'
0000000000005ddb         db  0xff ; '.'
0000000000005ddc         db  0x2c ; ','
0000000000005ddd         db  0xd4 ; '.'
0000000000005dde         db  0xff ; '.'
0000000000005ddf         db  0xff ; '.'
0000000000005de0         db  0x2c ; ','
0000000000005de1         db  0xd4 ; '.'
0000000000005de2         db  0xff ; '.'
0000000000005de3         db  0xff ; '.'
0000000000005de4         db  0x2c ; ','
0000000000005de5         db  0xd4 ; '.'
0000000000005de6         db  0xff ; '.'
0000000000005de7         db  0xff ; '.'
0000000000005de8         db  0x2c ; ','
0000000000005de9         db  0xd4 ; '.'
0000000000005dea         db  0xff ; '.'
0000000000005deb         db  0xff ; '.'
0000000000005dec         db  0x2c ; ','
0000000000005ded         db  0xd4 ; '.'
0000000000005dee         db  0xff ; '.'
0000000000005def         db  0xff ; '.'
0000000000005df0         db  0x2c ; ','
0000000000005df1         db  0xd4 ; '.'
0000000000005df2         db  0xff ; '.'
0000000000005df3         db  0xff ; '.'
0000000000005df4         db  0x2c ; ','
0000000000005df5         db  0xd4 ; '.'
0000000000005df6         db  0xff ; '.'
0000000000005df7         db  0xff ; '.'
0000000000005df8         db  0x2c ; ','
0000000000005df9         db  0xd4 ; '.'
0000000000005dfa         db  0xff ; '.'
0000000000005dfb         db  0xff ; '.'
0000000000005dfc         db  0x2c ; ','
0000000000005dfd         db  0xd4 ; '.'
0000000000005dfe         db  0xff ; '.'
0000000000005dff         db  0xff ; '.'
0000000000005e00         db  0x2c ; ','
0000000000005e01         db  0xd4 ; '.'
0000000000005e02         db  0xff ; '.'
0000000000005e03         db  0xff ; '.'
0000000000005e04         db  0x2c ; ','
0000000000005e05         db  0xd4 ; '.'
0000000000005e06         db  0xff ; '.'
0000000000005e07         db  0xff ; '.'
0000000000005e08         db  0x2c ; ','
0000000000005e09         db  0xd4 ; '.'
0000000000005e0a         db  0xff ; '.'
0000000000005e0b         db  0xff ; '.'
0000000000005e0c         db  0x2c ; ','
0000000000005e0d         db  0xd4 ; '.'
0000000000005e0e         db  0xff ; '.'
0000000000005e0f         db  0xff ; '.'
0000000000005e10         db  0x2c ; ','
0000000000005e11         db  0xd4 ; '.'
0000000000005e12         db  0xff ; '.'
0000000000005e13         db  0xff ; '.'
0000000000005e14         db  0x2c ; ','
0000000000005e15         db  0xd4 ; '.'
0000000000005e16         db  0xff ; '.'
0000000000005e17         db  0xff ; '.'
0000000000005e18         db  0xe7 ; '.'
0000000000005e19         db  0xd1 ; '.'
0000000000005e1a         db  0xff ; '.'
0000000000005e1b         db  0xff ; '.'
0000000000005e1c         db  0x84 ; '.'
0000000000005e1d         db  0xd4 ; '.'
0000000000005e1e         db  0xff ; '.'
0000000000005e1f         db  0xff ; '.'
0000000000005e20         db  0xe7 ; '.'
0000000000005e21         db  0xd1 ; '.'
0000000000005e22         db  0xff ; '.'
0000000000005e23         db  0xff ; '.'
0000000000005e24         db  0x54 ; 'T'
0000000000005e25         db  0xd4 ; '.'
0000000000005e26         db  0xff ; '.'
0000000000005e27         db  0xff ; '.'
0000000000005e28         db  0xd8 ; '.'                                         ; DATA XREF=sub_3100+137
0000000000005e29         db  0xd3 ; '.'
0000000000005e2a         db  0xff ; '.'
0000000000005e2b         db  0xff ; '.'
0000000000005e2c         db  0xe8 ; '.'
0000000000005e2d         db  0xd2 ; '.'
0000000000005e2e         db  0xff ; '.'
0000000000005e2f         db  0xff ; '.'
0000000000005e30         db  0xe8 ; '.'
0000000000005e31         db  0xd2 ; '.'
0000000000005e32         db  0xff ; '.'
0000000000005e33         db  0xff ; '.'
0000000000005e34         db  0xe8 ; '.'
0000000000005e35         db  0xd2 ; '.'
0000000000005e36         db  0xff ; '.'
0000000000005e37         db  0xff ; '.'
0000000000005e38         db  0xe8 ; '.'
0000000000005e39         db  0xd2 ; '.'
0000000000005e3a         db  0xff ; '.'
0000000000005e3b         db  0xff ; '.'
0000000000005e3c         db  0xe8 ; '.'
0000000000005e3d         db  0xd2 ; '.'
0000000000005e3e         db  0xff ; '.'
0000000000005e3f         db  0xff ; '.'
0000000000005e40         db  0xe8 ; '.'
0000000000005e41         db  0xd2 ; '.'
0000000000005e42         db  0xff ; '.'
0000000000005e43         db  0xff ; '.'
0000000000005e44         db  0xc8 ; '.'
0000000000005e45         db  0xd3 ; '.'
0000000000005e46         db  0xff ; '.'
0000000000005e47         db  0xff ; '.'
0000000000005e48         db  0x18 ; '.'
0000000000005e49         db  0xd5 ; '.'
0000000000005e4a         db  0xff ; '.'
0000000000005e4b         db  0xff ; '.'
0000000000005e4c         db  0x00 ; '.'
0000000000005e4d         db  0xd5 ; '.'
0000000000005e4e         db  0xff ; '.'
0000000000005e4f         db  0xff ; '.'
0000000000005e50         db  0xb0 ; '.'
0000000000005e51         db  0xd3 ; '.'
0000000000005e52         db  0xff ; '.'
0000000000005e53         db  0xff ; '.'
0000000000005e54         db  0xf0 ; '.'
0000000000005e55         db  0xd4 ; '.'
0000000000005e56         db  0xff ; '.'
0000000000005e57         db  0xff ; '.'
0000000000005e58         db  0x98 ; '.'
0000000000005e59         db  0xd3 ; '.'
0000000000005e5a         db  0xff ; '.'
0000000000005e5b         db  0xff ; '.'
0000000000005e5c         db  0xd8 ; '.'
0000000000005e5d         db  0xd4 ; '.'
0000000000005e5e         db  0xff ; '.'
0000000000005e5f         db  0xff ; '.'
0000000000005e60         db  0xe8 ; '.'
0000000000005e61         db  0xd2 ; '.'
0000000000005e62         db  0xff ; '.'
0000000000005e63         db  0xff ; '.'
0000000000005e64         db  0xe8 ; '.'
0000000000005e65         db  0xd2 ; '.'
0000000000005e66         db  0xff ; '.'
0000000000005e67         db  0xff ; '.'
0000000000005e68         db  0xe8 ; '.'
0000000000005e69         db  0xd2 ; '.'
0000000000005e6a         db  0xff ; '.'
0000000000005e6b         db  0xff ; '.'
0000000000005e6c         db  0xe8 ; '.'
0000000000005e6d         db  0xd2 ; '.'
0000000000005e6e         db  0xff ; '.'
0000000000005e6f         db  0xff ; '.'
0000000000005e70         db  0xe8 ; '.'
0000000000005e71         db  0xd2 ; '.'
0000000000005e72         db  0xff ; '.'
0000000000005e73         db  0xff ; '.'
0000000000005e74         db  0xe8 ; '.'
0000000000005e75         db  0xd2 ; '.'
0000000000005e76         db  0xff ; '.'
0000000000005e77         db  0xff ; '.'
0000000000005e78         db  0xe8 ; '.'
0000000000005e79         db  0xd2 ; '.'
0000000000005e7a         db  0xff ; '.'
0000000000005e7b         db  0xff ; '.'
0000000000005e7c         db  0xe8 ; '.'
0000000000005e7d         db  0xd2 ; '.'
0000000000005e7e         db  0xff ; '.'
0000000000005e7f         db  0xff ; '.'
0000000000005e80         db  0xe8 ; '.'
0000000000005e81         db  0xd2 ; '.'
0000000000005e82         db  0xff ; '.'
0000000000005e83         db  0xff ; '.'
0000000000005e84         db  0xe8 ; '.'
0000000000005e85         db  0xd2 ; '.'
0000000000005e86         db  0xff ; '.'
0000000000005e87         db  0xff ; '.'
0000000000005e88         db  0xe8 ; '.'
0000000000005e89         db  0xd2 ; '.'
0000000000005e8a         db  0xff ; '.'
0000000000005e8b         db  0xff ; '.'
0000000000005e8c         db  0xe8 ; '.'
0000000000005e8d         db  0xd2 ; '.'
0000000000005e8e         db  0xff ; '.'
0000000000005e8f         db  0xff ; '.'
0000000000005e90         db  0xe8 ; '.'
0000000000005e91         db  0xd2 ; '.'
0000000000005e92         db  0xff ; '.'
0000000000005e93         db  0xff ; '.'
0000000000005e94         db  0xe8 ; '.'
0000000000005e95         db  0xd2 ; '.'
0000000000005e96         db  0xff ; '.'
0000000000005e97         db  0xff ; '.'
0000000000005e98         db  0xe8 ; '.'
0000000000005e99         db  0xd2 ; '.'
0000000000005e9a         db  0xff ; '.'
0000000000005e9b         db  0xff ; '.'
0000000000005e9c         db  0xe8 ; '.'
0000000000005e9d         db  0xd2 ; '.'
0000000000005e9e         db  0xff ; '.'
0000000000005e9f         db  0xff ; '.'
0000000000005ea0         db  0xe8 ; '.'
0000000000005ea1         db  0xd2 ; '.'
0000000000005ea2         db  0xff ; '.'
0000000000005ea3         db  0xff ; '.'
0000000000005ea4         db  0xe8 ; '.'
0000000000005ea5         db  0xd2 ; '.'
0000000000005ea6         db  0xff ; '.'
0000000000005ea7         db  0xff ; '.'
0000000000005ea8         db  0xc0 ; '.'
0000000000005ea9         db  0xd4 ; '.'
0000000000005eaa         db  0xff ; '.'
0000000000005eab         db  0xff ; '.'
0000000000005eac         db  0xa8 ; '.'
0000000000005ead         db  0xd4 ; '.'
0000000000005eae         db  0xff ; '.'
0000000000005eaf         db  0xff ; '.'
0000000000005eb0         db  0xa8 ; '.'
0000000000005eb1         db  0xd4 ; '.'
0000000000005eb2         db  0xff ; '.'
0000000000005eb3         db  0xff ; '.'
0000000000005eb4         db  0x90 ; '.'
0000000000005eb5         db  0xd4 ; '.'
0000000000005eb6         db  0xff ; '.'
0000000000005eb7         db  0xff ; '.'
0000000000005eb8         db  0xa8 ; '.'
0000000000005eb9         db  0xd4 ; '.'
0000000000005eba         db  0xff ; '.'
0000000000005ebb         db  0xff ; '.'
0000000000005ebc         db  0x78 ; 'x'
0000000000005ebd         db  0xd4 ; '.'
0000000000005ebe         db  0xff ; '.'
0000000000005ebf         db  0xff ; '.'
0000000000005ec0         db  0xa8 ; '.'
0000000000005ec1         db  0xd4 ; '.'
0000000000005ec2         db  0xff ; '.'
0000000000005ec3         db  0xff ; '.'
0000000000005ec4         db  0xe8 ; '.'
0000000000005ec5         db  0xd0 ; '.'
0000000000005ec6         db  0xff ; '.'
0000000000005ec7         db  0xff ; '.'
0000000000005ec8         db  0xa8 ; '.'
0000000000005ec9         db  0xd4 ; '.'
0000000000005eca         db  0xff ; '.'
0000000000005ecb         db  0xff ; '.'
0000000000005ecc         db  0xa8 ; '.'
0000000000005ecd         db  0xd4 ; '.'
0000000000005ece         db  0xff ; '.'
0000000000005ecf         db  0xff ; '.'
0000000000005ed0         db  0xa8 ; '.'
0000000000005ed1         db  0xd4 ; '.'
0000000000005ed2         db  0xff ; '.'
0000000000005ed3         db  0xff ; '.'
0000000000005ed4         db  0x78 ; 'x'
0000000000005ed5         db  0xd4 ; '.'
0000000000005ed6         db  0xff ; '.'
0000000000005ed7         db  0xff ; '.'
0000000000005ed8         db  0x78 ; 'x'
0000000000005ed9         db  0xd4 ; '.'
0000000000005eda         db  0xff ; '.'
0000000000005edb         db  0xff ; '.'
0000000000005edc         db  0x78 ; 'x'
0000000000005edd         db  0xd4 ; '.'
0000000000005ede         db  0xff ; '.'
0000000000005edf         db  0xff ; '.'
0000000000005ee0         db  0x78 ; 'x'
0000000000005ee1         db  0xd4 ; '.'
0000000000005ee2         db  0xff ; '.'
0000000000005ee3         db  0xff ; '.'
0000000000005ee4         db  0x78 ; 'x'
0000000000005ee5         db  0xd4 ; '.'
0000000000005ee6         db  0xff ; '.'
0000000000005ee7         db  0xff ; '.'
0000000000005ee8         db  0x78 ; 'x'
0000000000005ee9         db  0xd4 ; '.'
0000000000005eea         db  0xff ; '.'
0000000000005eeb         db  0xff ; '.'
0000000000005eec         db  0x78 ; 'x'
0000000000005eed         db  0xd4 ; '.'
0000000000005eee         db  0xff ; '.'
0000000000005eef         db  0xff ; '.'
0000000000005ef0         db  0x78 ; 'x'
0000000000005ef1         db  0xd4 ; '.'
0000000000005ef2         db  0xff ; '.'
0000000000005ef3         db  0xff ; '.'
0000000000005ef4         db  0x78 ; 'x'
0000000000005ef5         db  0xd4 ; '.'
0000000000005ef6         db  0xff ; '.'
0000000000005ef7         db  0xff ; '.'
0000000000005ef8         db  0x78 ; 'x'
0000000000005ef9         db  0xd4 ; '.'
0000000000005efa         db  0xff ; '.'
0000000000005efb         db  0xff ; '.'
0000000000005efc         db  0x78 ; 'x'
0000000000005efd         db  0xd4 ; '.'
0000000000005efe         db  0xff ; '.'
0000000000005eff         db  0xff ; '.'
0000000000005f00         db  0x78 ; 'x'
0000000000005f01         db  0xd4 ; '.'
0000000000005f02         db  0xff ; '.'
0000000000005f03         db  0xff ; '.'
0000000000005f04         db  0x78 ; 'x'
0000000000005f05         db  0xd4 ; '.'
0000000000005f06         db  0xff ; '.'
0000000000005f07         db  0xff ; '.'
0000000000005f08         db  0x78 ; 'x'
0000000000005f09         db  0xd4 ; '.'
0000000000005f0a         db  0xff ; '.'
0000000000005f0b         db  0xff ; '.'
0000000000005f0c         db  0x78 ; 'x'
0000000000005f0d         db  0xd4 ; '.'
0000000000005f0e         db  0xff ; '.'
0000000000005f0f         db  0xff ; '.'
0000000000005f10         db  0x78 ; 'x'
0000000000005f11         db  0xd4 ; '.'
0000000000005f12         db  0xff ; '.'
0000000000005f13         db  0xff ; '.'
0000000000005f14         db  0xa8 ; '.'
0000000000005f15         db  0xd4 ; '.'
0000000000005f16         db  0xff ; '.'
0000000000005f17         db  0xff ; '.'
0000000000005f18         db  0xa8 ; '.'
0000000000005f19         db  0xd4 ; '.'
0000000000005f1a         db  0xff ; '.'
0000000000005f1b         db  0xff ; '.'
0000000000005f1c         db  0xa8 ; '.'
0000000000005f1d         db  0xd4 ; '.'
0000000000005f1e         db  0xff ; '.'
0000000000005f1f         db  0xff ; '.'
0000000000005f20         db  0xa8 ; '.'
0000000000005f21         db  0xd4 ; '.'
0000000000005f22         db  0xff ; '.'
0000000000005f23         db  0xff ; '.'
0000000000005f24         db  0xb8 ; '.'
0000000000005f25         db  0xd0 ; '.'
0000000000005f26         db  0xff ; '.'
0000000000005f27         db  0xff ; '.'
0000000000005f28         db  0xe8 ; '.'
0000000000005f29         db  0xd2 ; '.'
0000000000005f2a         db  0xff ; '.'
0000000000005f2b         db  0xff ; '.'
0000000000005f2c         db  0x78 ; 'x'
0000000000005f2d         db  0xd4 ; '.'
0000000000005f2e         db  0xff ; '.'
0000000000005f2f         db  0xff ; '.'
0000000000005f30         db  0x78 ; 'x'
0000000000005f31         db  0xd4 ; '.'
0000000000005f32         db  0xff ; '.'
0000000000005f33         db  0xff ; '.'
0000000000005f34         db  0x78 ; 'x'
0000000000005f35         db  0xd4 ; '.'
0000000000005f36         db  0xff ; '.'
0000000000005f37         db  0xff ; '.'
0000000000005f38         db  0x78 ; 'x'
0000000000005f39         db  0xd4 ; '.'
0000000000005f3a         db  0xff ; '.'
0000000000005f3b         db  0xff ; '.'
0000000000005f3c         db  0x78 ; 'x'
0000000000005f3d         db  0xd4 ; '.'
0000000000005f3e         db  0xff ; '.'
0000000000005f3f         db  0xff ; '.'
0000000000005f40         db  0x78 ; 'x'
0000000000005f41         db  0xd4 ; '.'
0000000000005f42         db  0xff ; '.'
0000000000005f43         db  0xff ; '.'
0000000000005f44         db  0x78 ; 'x'
0000000000005f45         db  0xd4 ; '.'
0000000000005f46         db  0xff ; '.'
0000000000005f47         db  0xff ; '.'
0000000000005f48         db  0x78 ; 'x'
0000000000005f49         db  0xd4 ; '.'
0000000000005f4a         db  0xff ; '.'
0000000000005f4b         db  0xff ; '.'
0000000000005f4c         db  0x78 ; 'x'
0000000000005f4d         db  0xd4 ; '.'
0000000000005f4e         db  0xff ; '.'
0000000000005f4f         db  0xff ; '.'
0000000000005f50         db  0x78 ; 'x'
0000000000005f51         db  0xd4 ; '.'
0000000000005f52         db  0xff ; '.'
0000000000005f53         db  0xff ; '.'
0000000000005f54         db  0x78 ; 'x'
0000000000005f55         db  0xd4 ; '.'
0000000000005f56         db  0xff ; '.'
0000000000005f57         db  0xff ; '.'
0000000000005f58         db  0x78 ; 'x'
0000000000005f59         db  0xd4 ; '.'
0000000000005f5a         db  0xff ; '.'
0000000000005f5b         db  0xff ; '.'
0000000000005f5c         db  0x78 ; 'x'
0000000000005f5d         db  0xd4 ; '.'
0000000000005f5e         db  0xff ; '.'
0000000000005f5f         db  0xff ; '.'
0000000000005f60         db  0x78 ; 'x'
0000000000005f61         db  0xd4 ; '.'
0000000000005f62         db  0xff ; '.'
0000000000005f63         db  0xff ; '.'
0000000000005f64         db  0x78 ; 'x'
0000000000005f65         db  0xd4 ; '.'
0000000000005f66         db  0xff ; '.'
0000000000005f67         db  0xff ; '.'
0000000000005f68         db  0x78 ; 'x'
0000000000005f69         db  0xd4 ; '.'
0000000000005f6a         db  0xff ; '.'
0000000000005f6b         db  0xff ; '.'
0000000000005f6c         db  0x78 ; 'x'
0000000000005f6d         db  0xd4 ; '.'
0000000000005f6e         db  0xff ; '.'
0000000000005f6f         db  0xff ; '.'
0000000000005f70         db  0x78 ; 'x'
0000000000005f71         db  0xd4 ; '.'
0000000000005f72         db  0xff ; '.'
0000000000005f73         db  0xff ; '.'
0000000000005f74         db  0x78 ; 'x'
0000000000005f75         db  0xd4 ; '.'
0000000000005f76         db  0xff ; '.'
0000000000005f77         db  0xff ; '.'
0000000000005f78         db  0x78 ; 'x'
0000000000005f79         db  0xd4 ; '.'
0000000000005f7a         db  0xff ; '.'
0000000000005f7b         db  0xff ; '.'
0000000000005f7c         db  0x78 ; 'x'
0000000000005f7d         db  0xd4 ; '.'
0000000000005f7e         db  0xff ; '.'
0000000000005f7f         db  0xff ; '.'
0000000000005f80         db  0x78 ; 'x'
0000000000005f81         db  0xd4 ; '.'
0000000000005f82         db  0xff ; '.'
0000000000005f83         db  0xff ; '.'
0000000000005f84         db  0x78 ; 'x'
0000000000005f85         db  0xd4 ; '.'
0000000000005f86         db  0xff ; '.'
0000000000005f87         db  0xff ; '.'
0000000000005f88         db  0x78 ; 'x'
0000000000005f89         db  0xd4 ; '.'
0000000000005f8a         db  0xff ; '.'
0000000000005f8b         db  0xff ; '.'
0000000000005f8c         db  0x78 ; 'x'
0000000000005f8d         db  0xd4 ; '.'
0000000000005f8e         db  0xff ; '.'
0000000000005f8f         db  0xff ; '.'
0000000000005f90         db  0x78 ; 'x'
0000000000005f91         db  0xd4 ; '.'
0000000000005f92         db  0xff ; '.'
0000000000005f93         db  0xff ; '.'
0000000000005f94         db  0xa8 ; '.'
0000000000005f95         db  0xd4 ; '.'
0000000000005f96         db  0xff ; '.'
0000000000005f97         db  0xff ; '.'
0000000000005f98         db  0x78 ; 'x'
0000000000005f99         db  0xd3 ; '.'
0000000000005f9a         db  0xff ; '.'
0000000000005f9b         db  0xff ; '.'
0000000000005f9c         db  0x78 ; 'x'
0000000000005f9d         db  0xd4 ; '.'
0000000000005f9e         db  0xff ; '.'
0000000000005f9f         db  0xff ; '.'
0000000000005fa0         db  0xa8 ; '.'
0000000000005fa1         db  0xd4 ; '.'
0000000000005fa2         db  0xff ; '.'
0000000000005fa3         db  0xff ; '.'
0000000000005fa4         db  0x78 ; 'x'
0000000000005fa5         db  0xd4 ; '.'
0000000000005fa6         db  0xff ; '.'
0000000000005fa7         db  0xff ; '.'
0000000000005fa8         db  0xa8 ; '.'
0000000000005fa9         db  0xd4 ; '.'
0000000000005faa         db  0xff ; '.'
0000000000005fab         db  0xff ; '.'
0000000000005fac         db  0x78 ; 'x'
0000000000005fad         db  0xd4 ; '.'
0000000000005fae         db  0xff ; '.'
0000000000005faf         db  0xff ; '.'
0000000000005fb0         db  0x78 ; 'x'
0000000000005fb1         db  0xd4 ; '.'
0000000000005fb2         db  0xff ; '.'
0000000000005fb3         db  0xff ; '.'
0000000000005fb4         db  0x78 ; 'x'
0000000000005fb5         db  0xd4 ; '.'
0000000000005fb6         db  0xff ; '.'
0000000000005fb7         db  0xff ; '.'
0000000000005fb8         db  0x78 ; 'x'
0000000000005fb9         db  0xd4 ; '.'
0000000000005fba         db  0xff ; '.'
0000000000005fbb         db  0xff ; '.'
0000000000005fbc         db  0x78 ; 'x'
0000000000005fbd         db  0xd4 ; '.'
0000000000005fbe         db  0xff ; '.'
0000000000005fbf         db  0xff ; '.'
0000000000005fc0         db  0x78 ; 'x'
0000000000005fc1         db  0xd4 ; '.'
0000000000005fc2         db  0xff ; '.'
0000000000005fc3         db  0xff ; '.'
0000000000005fc4         db  0x78 ; 'x'
0000000000005fc5         db  0xd4 ; '.'
0000000000005fc6         db  0xff ; '.'
0000000000005fc7         db  0xff ; '.'
0000000000005fc8         db  0x78 ; 'x'
0000000000005fc9         db  0xd4 ; '.'
0000000000005fca         db  0xff ; '.'
0000000000005fcb         db  0xff ; '.'
0000000000005fcc         db  0x78 ; 'x'
0000000000005fcd         db  0xd4 ; '.'
0000000000005fce         db  0xff ; '.'
0000000000005fcf         db  0xff ; '.'
0000000000005fd0         db  0x78 ; 'x'
0000000000005fd1         db  0xd4 ; '.'
0000000000005fd2         db  0xff ; '.'
0000000000005fd3         db  0xff ; '.'
0000000000005fd4         db  0x78 ; 'x'
0000000000005fd5         db  0xd4 ; '.'
0000000000005fd6         db  0xff ; '.'
0000000000005fd7         db  0xff ; '.'
0000000000005fd8         db  0x78 ; 'x'
0000000000005fd9         db  0xd4 ; '.'
0000000000005fda         db  0xff ; '.'
0000000000005fdb         db  0xff ; '.'
0000000000005fdc         db  0x78 ; 'x'
0000000000005fdd         db  0xd4 ; '.'
0000000000005fde         db  0xff ; '.'
0000000000005fdf         db  0xff ; '.'
0000000000005fe0         db  0x78 ; 'x'
0000000000005fe1         db  0xd4 ; '.'
0000000000005fe2         db  0xff ; '.'
0000000000005fe3         db  0xff ; '.'
0000000000005fe4         db  0x78 ; 'x'
0000000000005fe5         db  0xd4 ; '.'
0000000000005fe6         db  0xff ; '.'
0000000000005fe7         db  0xff ; '.'
0000000000005fe8         db  0x78 ; 'x'
0000000000005fe9         db  0xd4 ; '.'
0000000000005fea         db  0xff ; '.'
0000000000005feb         db  0xff ; '.'
0000000000005fec         db  0x78 ; 'x'
0000000000005fed         db  0xd4 ; '.'
0000000000005fee         db  0xff ; '.'
0000000000005fef         db  0xff ; '.'
0000000000005ff0         db  0x78 ; 'x'
0000000000005ff1         db  0xd4 ; '.'
0000000000005ff2         db  0xff ; '.'
0000000000005ff3         db  0xff ; '.'
0000000000005ff4         db  0x78 ; 'x'
0000000000005ff5         db  0xd4 ; '.'
0000000000005ff6         db  0xff ; '.'
0000000000005ff7         db  0xff ; '.'
0000000000005ff8         db  0x78 ; 'x'
0000000000005ff9         db  0xd4 ; '.'
0000000000005ffa         db  0xff ; '.'
0000000000005ffb         db  0xff ; '.'
0000000000005ffc         db  0x78 ; 'x'
0000000000005ffd         db  0xd4 ; '.'
0000000000005ffe         db  0xff ; '.'
0000000000005fff         db  0xff ; '.'
0000000000006000         db  0x78 ; 'x'
0000000000006001         db  0xd4 ; '.'
0000000000006002         db  0xff ; '.'
0000000000006003         db  0xff ; '.'
0000000000006004         db  0x78 ; 'x'
0000000000006005         db  0xd4 ; '.'
0000000000006006         db  0xff ; '.'
0000000000006007         db  0xff ; '.'
0000000000006008         db  0x78 ; 'x'
0000000000006009         db  0xd4 ; '.'
000000000000600a         db  0xff ; '.'
000000000000600b         db  0xff ; '.'
000000000000600c         db  0x78 ; 'x'
000000000000600d         db  0xd4 ; '.'
000000000000600e         db  0xff ; '.'
000000000000600f         db  0xff ; '.'
0000000000006010         db  0x78 ; 'x'
0000000000006011         db  0xd4 ; '.'
0000000000006012         db  0xff ; '.'
0000000000006013         db  0xff ; '.'
0000000000006014         db  0xe8 ; '.'
0000000000006015         db  0xcf ; '.'
0000000000006016         db  0xff ; '.'
0000000000006017         db  0xff ; '.'
0000000000006018         db  0xa8 ; '.'
0000000000006019         db  0xd4 ; '.'
000000000000601a         db  0xff ; '.'
000000000000601b         db  0xff ; '.'
000000000000601c         db  0xe8 ; '.'
000000000000601d         db  0xcf ; '.'
000000000000601e         db  0xff ; '.'
000000000000601f         db  0xff ; '.'
0000000000006020         db  0x90 ; '.'
0000000000006021         db  0xd4 ; '.'
0000000000006022         db  0xff ; '.'
0000000000006023         db  0xff ; '.'
0000000000006024         db  0x00 ; '.'
0000000000006025         db  0x00 ; '.'
0000000000006026         db  0x00 ; '.'
0000000000006027         db  0x00 ; '.'
0000000000006028         db  0x00 ; '.'
0000000000006029         db  0x00 ; '.'
000000000000602a         db  0x00 ; '.'
000000000000602b         db  0x00 ; '.'
000000000000602c         db  0x00 ; '.'
000000000000602d         db  0x00 ; '.'
000000000000602e         db  0x00 ; '.'
000000000000602f         db  0x00 ; '.'
0000000000006030         db  0x00 ; '.'
0000000000006031         db  0x00 ; '.'
0000000000006032         db  0x00 ; '.'
0000000000006033         db  0x00 ; '.'
0000000000006034         db  0x00 ; '.'
0000000000006035         db  0x00 ; '.'
0000000000006036         db  0x00 ; '.'
0000000000006037         db  0x00 ; '.'
0000000000006038         db  0x00 ; '.'
0000000000006039         db  0x00 ; '.'
000000000000603a         db  0x00 ; '.'
000000000000603b         db  0x00 ; '.'
000000000000603c         db  0x00 ; '.'
000000000000603d         db  0x00 ; '.'
000000000000603e         db  0x00 ; '.'
000000000000603f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000006040         db  0x00 ; '.'
0000000000006041         db  0x00 ; '.'
0000000000006042         db  0x00 ; '.'
0000000000006043         db  0x00 ; '.'
0000000000006044         db  0x01 ; '.'
0000000000006045         db  0x00 ; '.'
0000000000006046         db  0x00 ; '.'
0000000000006047         db  0x00 ; '.'
0000000000006048         db  0x02 ; '.'
0000000000006049         db  0x00 ; '.'
000000000000604a         db  0x00 ; '.'
000000000000604b         db  0x00 ; '.'
000000000000604c         db  0x03 ; '.'
000000000000604d         db  0x00 ; '.'
000000000000604e         db  0x00 ; '.'
000000000000604f         db  0x00 ; '.'
0000000000006050         db  0x04 ; '.'
0000000000006051         db  0x00 ; '.'
0000000000006052         db  0x00 ; '.'
0000000000006053         db  0x00 ; '.'
0000000000006054         db  0x05 ; '.'
0000000000006055         db  0x00 ; '.'
0000000000006056         db  0x00 ; '.'
0000000000006057         db  0x00 ; '.'
0000000000006058         db  0x06 ; '.'
0000000000006059         db  0x00 ; '.'
000000000000605a         db  0x00 ; '.'
000000000000605b         db  0x00 ; '.'
000000000000605c         db  0x07 ; '.'
000000000000605d         db  0x00 ; '.'
000000000000605e         db  0x00 ; '.'
000000000000605f         db  0x00 ; '.'
0000000000006060         db  0x08 ; '.'
0000000000006061         db  0x00 ; '.'
0000000000006062         db  0x00 ; '.'
0000000000006063         db  0x00 ; '.'
0000000000006064         db  0x09 ; '.'
0000000000006065         db  0x00 ; '.'
0000000000006066         db  0x00 ; '.'
0000000000006067         db  0x00 ; '.'
                     aSSSn:
0000000000006068         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000006074         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000607b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000607c         db  0x43 ; 'C'
000000000000607d         db  0x29 ; ')'
000000000000607e         db  0x00 ; '.'
                     aWrittenBySn:
000000000000607f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000608f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
00000000000060a6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
00000000000060c2         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
00000000000060d7         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
00000000000060ed         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000006101         align      8
                     aNlicenseGplv3G:
0000000000006108         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
00000000000061d4         align      8
                     aWrittenBySSSna:
00000000000061d8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_61f8:        // aWrittenBySSSns
00000000000061f8         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000621c         align      32
                     aWrittenBySSSns_6220:        // aWrittenBySSSns
0000000000006220         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_6248:        // aWrittenBySSSns
0000000000006248         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000006274         align      8
                     aWrittenBySSSns_6278:        // aWrittenBySSSns
0000000000006278         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
00000000000062a8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
00000000000062dc         align      32
                     aWrittenBySSSns_62e0:        // aWrittenBySSSns
00000000000062e0         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000631c         align      32
                     aGeneralHelpUsi:
0000000000006320         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000006361         align      8
                     switch_table_6368:        // switch_table
0000000000006368         dd         version_etc_arn.loc_48e6-switch_table_6368, version_etc_arn.loc_4978-switch_table_6368, version_etc_arn.loc_49b8-switch_table_6368, version_etc_arn.loc_4a00-switch_table_6368 ; switch table used at 0x4864 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000006378         dd         version_etc_arn.loc_4a50-switch_table_6368, version_etc_arn.loc_4aa8-switch_table_6368, version_etc_arn.loc_4ad8-switch_table_6368, version_etc_arn.loc_4b40-switch_table_6368
0000000000006388         dd         version_etc_arn.loc_4870-switch_table_6368, version_etc_arn.loc_4920-switch_table_6368
0000000000006390         align      32
                     version_etc_copyright:
00000000000063a0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
00000000000063cf         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
00000000000063e0         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
00000000000063e1         db  0x00 ; '.'
                     aPosix:
00000000000063e2         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
00000000000063e8         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
00000000000063ee         db  0x00 ; '.'
00000000000063ef         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x63f0; 0x6694[ (676 bytes)
        ; File offset : [25584; 26260[ (676 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

00000000000063f0         db  0x01 ; '.'
00000000000063f1         db  0x1b ; '.'
00000000000063f2         db  0x03 ; '.'
00000000000063f3         db  0x3b ; ';'
00000000000063f4         db  0xa4 ; '.'
00000000000063f5         db  0x02 ; '.'
00000000000063f6         db  0x00 ; '.'
00000000000063f7         db  0x00 ; '.'
00000000000063f8         db  0x53 ; 'S'
00000000000063f9         db  0x00 ; '.'
00000000000063fa         db  0x00 ; '.'
00000000000063fb         db  0x00 ; '.'
00000000000063fc         db  0x10 ; '.'
00000000000063fd         db  0xb0 ; '.'
00000000000063fe         db  0xff ; '.'
00000000000063ff         db  0xff ; '.'
0000000000006400         db  0xf0 ; '.'
0000000000006401         db  0x02 ; '.'
0000000000006402         db  0x00 ; '.'
0000000000006403         db  0x00 ; '.'
0000000000006404         db  0x10 ; '.'
0000000000006405         db  0xb3 ; '.'
0000000000006406         db  0xff ; '.'
0000000000006407         db  0xff ; '.'
0000000000006408         db  0x18 ; '.'
0000000000006409         db  0x03 ; '.'
000000000000640a         db  0x00 ; '.'
000000000000640b         db  0x00 ; '.'
000000000000640c         db  0x20 ; ' '
000000000000640d         db  0xb3 ; '.'
000000000000640e         db  0xff ; '.'
000000000000640f         db  0xff ; '.'
0000000000006410         db  0x5c ; '\'
0000000000006411         db  0x03 ; '.'
0000000000006412         db  0x00 ; '.'
0000000000006413         db  0x00 ; '.'
0000000000006414         db  0x00 ; '.'
0000000000006415         db  0xb7 ; '.'
0000000000006416         db  0xff ; '.'
0000000000006417         db  0xff ; '.'
0000000000006418         db  0xc0 ; '.'
0000000000006419         db  0x02 ; '.'
000000000000641a         db  0x00 ; '.'
000000000000641b         db  0x00 ; '.'
000000000000641c         db  0x10 ; '.'
000000000000641d         db  0xb8 ; '.'
000000000000641e         db  0xff ; '.'
000000000000641f         db  0xff ; '.'
0000000000006420         db  0x30 ; '0'
0000000000006421         db  0x03 ; '.'
0000000000006422         db  0x00 ; '.'
0000000000006423         db  0x00 ; '.'
0000000000006424         db  0xd0 ; '.'
0000000000006425         db  0xbb ; '.'
0000000000006426         db  0xff ; '.'
0000000000006427         db  0xff ; '.'
0000000000006428         db  0xa8 ; '.'
0000000000006429         db  0x03 ; '.'
000000000000642a         db  0x00 ; '.'
000000000000642b         db  0x00 ; '.'
000000000000642c         db  0x10 ; '.'
000000000000642d         db  0xbc ; '.'
000000000000642e         db  0xff ; '.'
000000000000642f         db  0xff ; '.'
0000000000006430         db  0xc4 ; '.'
0000000000006431         db  0x03 ; '.'
0000000000006432         db  0x00 ; '.'
0000000000006433         db  0x00 ; '.'
0000000000006434         db  0x50 ; 'P'
0000000000006435         db  0xbc ; '.'
0000000000006436         db  0xff ; '.'
0000000000006437         db  0xff ; '.'
0000000000006438         db  0xe0 ; '.'
0000000000006439         db  0x03 ; '.'
000000000000643a         db  0x00 ; '.'
000000000000643b         db  0x00 ; '.'
000000000000643c         db  0x70 ; 'p'
000000000000643d         db  0xbd ; '.'
000000000000643e         db  0xff ; '.'
000000000000643f         db  0xff ; '.'
0000000000006440         db  0x18 ; '.'
0000000000006441         db  0x04 ; '.'
0000000000006442         db  0x00 ; '.'
0000000000006443         db  0x00 ; '.'
0000000000006444         db  0xd0 ; '.'
0000000000006445         db  0xc0 ; '.'
0000000000006446         db  0xff ; '.'
0000000000006447         db  0xff ; '.'
0000000000006448         db  0x80 ; '.'
0000000000006449         db  0x04 ; '.'
000000000000644a         db  0x00 ; '.'
000000000000644b         db  0x00 ; '.'
000000000000644c         db  0x10 ; '.'
000000000000644d         db  0xc2 ; '.'
000000000000644e         db  0xff ; '.'
000000000000644f         db  0xff ; '.'
0000000000006450         db  0xa4 ; '.'
0000000000006451         db  0x04 ; '.'
0000000000006452         db  0x00 ; '.'
0000000000006453         db  0x00 ; '.'
0000000000006454         db  0xc0 ; '.'
0000000000006455         db  0xc2 ; '.'
0000000000006456         db  0xff ; '.'
0000000000006457         db  0xff ; '.'
0000000000006458         db  0xb8 ; '.'
0000000000006459         db  0x04 ; '.'
000000000000645a         db  0x00 ; '.'
000000000000645b         db  0x00 ; '.'
000000000000645c         db  0xe0 ; '.'
000000000000645d         db  0xc2 ; '.'
000000000000645e         db  0xff ; '.'
000000000000645f         db  0xff ; '.'
0000000000006460         db  0xcc ; '.'
0000000000006461         db  0x04 ; '.'
0000000000006462         db  0x00 ; '.'
0000000000006463         db  0x00 ; '.'
0000000000006464         db  0xf0 ; '.'
0000000000006465         db  0xc4 ; '.'
0000000000006466         db  0xff ; '.'
0000000000006467         db  0xff ; '.'
0000000000006468         db  0x10 ; '.'
0000000000006469         db  0x05 ; '.'
000000000000646a         db  0x00 ; '.'
000000000000646b         db  0x00 ; '.'
000000000000646c         db  0x40 ; '@'
000000000000646d         db  0xc5 ; '.'
000000000000646e         db  0xff ; '.'
000000000000646f         db  0xff ; '.'
0000000000006470         db  0x2c ; ','
0000000000006471         db  0x05 ; '.'
0000000000006472         db  0x00 ; '.'
0000000000006473         db  0x00 ; '.'
0000000000006474         db  0x90 ; '.'
0000000000006475         db  0xc5 ; '.'
0000000000006476         db  0xff ; '.'
0000000000006477         db  0xff ; '.'
0000000000006478         db  0x48 ; 'H'
0000000000006479         db  0x05 ; '.'
000000000000647a         db  0x00 ; '.'
000000000000647b         db  0x00 ; '.'
000000000000647c         db  0xa0 ; '.'
000000000000647d         db  0xc5 ; '.'
000000000000647e         db  0xff ; '.'
000000000000647f         db  0xff ; '.'
0000000000006480         db  0x5c ; '\'
0000000000006481         db  0x05 ; '.'
0000000000006482         db  0x00 ; '.'
0000000000006483         db  0x00 ; '.'
0000000000006484         db  0xb0 ; '.'
0000000000006485         db  0xc5 ; '.'
0000000000006486         db  0xff ; '.'
0000000000006487         db  0xff ; '.'
0000000000006488         db  0x70 ; 'p'
0000000000006489         db  0x05 ; '.'
000000000000648a         db  0x00 ; '.'
000000000000648b         db  0x00 ; '.'
000000000000648c         db  0x60 ; '`'
000000000000648d         db  0xc6 ; '.'
000000000000648e         db  0xff ; '.'
000000000000648f         db  0xff ; '.'
0000000000006490         db  0xa0 ; '.'
0000000000006491         db  0x05 ; '.'
0000000000006492         db  0x00 ; '.'
0000000000006493         db  0x00 ; '.'
0000000000006494         db  0x70 ; 'p'
0000000000006495         db  0xc6 ; '.'
0000000000006496         db  0xff ; '.'
0000000000006497         db  0xff ; '.'
0000000000006498         db  0xb4 ; '.'
0000000000006499         db  0x05 ; '.'
000000000000649a         db  0x00 ; '.'
000000000000649b         db  0x00 ; '.'
000000000000649c         db  0xa0 ; '.'
000000000000649d         db  0xc6 ; '.'
000000000000649e         db  0xff ; '.'
000000000000649f         db  0xff ; '.'
00000000000064a0         db  0xd0 ; '.'
00000000000064a1         db  0x05 ; '.'
00000000000064a2         db  0x00 ; '.'
00000000000064a3         db  0x00 ; '.'
00000000000064a4         db  0x40 ; '@'
00000000000064a5         db  0xc7 ; '.'
00000000000064a6         db  0xff ; '.'
00000000000064a7         db  0xff ; '.'
00000000000064a8         db  0xf0 ; '.'
00000000000064a9         db  0x05 ; '.'
00000000000064aa         db  0x00 ; '.'
00000000000064ab         db  0x00 ; '.'
00000000000064ac         db  0x30 ; '0'
00000000000064ad         db  0xc8 ; '.'
00000000000064ae         db  0xff ; '.'
00000000000064af         db  0xff ; '.'
00000000000064b0         db  0x34 ; '4'
00000000000064b1         db  0x06 ; '.'
00000000000064b2         db  0x00 ; '.'
00000000000064b3         db  0x00 ; '.'
00000000000064b4         db  0x70 ; 'p'
00000000000064b5         db  0xda ; '.'
00000000000064b6         db  0xff ; '.'
00000000000064b7         db  0xff ; '.'
00000000000064b8         db  0xac ; '.'
00000000000064b9         db  0x06 ; '.'
00000000000064ba         db  0x00 ; '.'
00000000000064bb         db  0x00 ; '.'
00000000000064bc         db  0x20 ; ' '
00000000000064bd         db  0xdc ; '.'
00000000000064be         db  0xff ; '.'
00000000000064bf         db  0xff ; '.'
00000000000064c0         db  0x18 ; '.'
00000000000064c1         db  0x07 ; '.'
00000000000064c2         db  0x00 ; '.'
00000000000064c3         db  0x00 ; '.'
00000000000064c4         db  0x60 ; '`'
00000000000064c5         db  0xdc ; '.'
00000000000064c6         db  0xff ; '.'
00000000000064c7         db  0xff ; '.'
00000000000064c8         db  0x44 ; 'D'
00000000000064c9         db  0x07 ; '.'
00000000000064ca         db  0x00 ; '.'
00000000000064cb         db  0x00 ; '.'
00000000000064cc         db  0x80 ; '.'
00000000000064cd         db  0xdc ; '.'
00000000000064ce         db  0xff ; '.'
00000000000064cf         db  0xff ; '.'
00000000000064d0         db  0x58 ; 'X'
00000000000064d1         db  0x07 ; '.'
00000000000064d2         db  0x00 ; '.'
00000000000064d3         db  0x00 ; '.'
00000000000064d4         db  0xa0 ; '.'
00000000000064d5         db  0xdc ; '.'
00000000000064d6         db  0xff ; '.'
00000000000064d7         db  0xff ; '.'
00000000000064d8         db  0x6c ; 'l'
00000000000064d9         db  0x07 ; '.'
00000000000064da         db  0x00 ; '.'
00000000000064db         db  0x00 ; '.'
00000000000064dc         db  0xe0 ; '.'
00000000000064dd         db  0xdc ; '.'
00000000000064de         db  0xff ; '.'
00000000000064df         db  0xff ; '.'
00000000000064e0         db  0x80 ; '.'
00000000000064e1         db  0x07 ; '.'
00000000000064e2         db  0x00 ; '.'
00000000000064e3         db  0x00 ; '.'
00000000000064e4         db  0x00 ; '.'
00000000000064e5         db  0xdd ; '.'
00000000000064e6         db  0xff ; '.'
00000000000064e7         db  0xff ; '.'
00000000000064e8         db  0x94 ; '.'
00000000000064e9         db  0x07 ; '.'
00000000000064ea         db  0x00 ; '.'
00000000000064eb         db  0x00 ; '.'
00000000000064ec         db  0x30 ; '0'
00000000000064ed         db  0xdd ; '.'
00000000000064ee         db  0xff ; '.'
00000000000064ef         db  0xff ; '.'
00000000000064f0         db  0xa8 ; '.'
00000000000064f1         db  0x07 ; '.'
00000000000064f2         db  0x00 ; '.'
00000000000064f3         db  0x00 ; '.'
00000000000064f4         db  0xb0 ; '.'
00000000000064f5         db  0xdd ; '.'
00000000000064f6         db  0xff ; '.'
00000000000064f7         db  0xff ; '.'
00000000000064f8         db  0xfc ; '.'
00000000000064f9         db  0x07 ; '.'
00000000000064fa         db  0x00 ; '.'
00000000000064fb         db  0x00 ; '.'
00000000000064fc         db  0xa0 ; '.'
00000000000064fd         db  0xde ; '.'
00000000000064fe         db  0xff ; '.'
00000000000064ff         db  0xff ; '.'
0000000000006500         db  0x68 ; 'h'
0000000000006501         db  0x08 ; '.'
0000000000006502         db  0x00 ; '.'
0000000000006503         db  0x00 ; '.'
0000000000006504         db  0xb0 ; '.'
0000000000006505         db  0xde ; '.'
0000000000006506         db  0xff ; '.'
0000000000006507         db  0xff ; '.'
0000000000006508         db  0x7c ; '|'
0000000000006509         db  0x08 ; '.'
000000000000650a         db  0x00 ; '.'
000000000000650b         db  0x00 ; '.'
000000000000650c         db  0x50 ; 'P'
000000000000650d         db  0xdf ; '.'
000000000000650e         db  0xff ; '.'
000000000000650f         db  0xff ; '.'
0000000000006510         db  0xa8 ; '.'
0000000000006511         db  0x08 ; '.'
0000000000006512         db  0x00 ; '.'
0000000000006513         db  0x00 ; '.'
0000000000006514         db  0x70 ; 'p'
0000000000006515         db  0xdf ; '.'
0000000000006516         db  0xff ; '.'
0000000000006517         db  0xff ; '.'
0000000000006518         db  0xbc ; '.'
0000000000006519         db  0x08 ; '.'
000000000000651a         db  0x00 ; '.'
000000000000651b         db  0x00 ; '.'
000000000000651c         db  0x80 ; '.'
000000000000651d         db  0xdf ; '.'
000000000000651e         db  0xff ; '.'
000000000000651f         db  0xff ; '.'
0000000000006520         db  0xd0 ; '.'
0000000000006521         db  0x08 ; '.'
0000000000006522         db  0x00 ; '.'
0000000000006523         db  0x00 ; '.'
0000000000006524         db  0xa0 ; '.'
0000000000006525         db  0xdf ; '.'
0000000000006526         db  0xff ; '.'
0000000000006527         db  0xff ; '.'
0000000000006528         db  0xe4 ; '.'
0000000000006529         db  0x08 ; '.'
000000000000652a         db  0x00 ; '.'
000000000000652b         db  0x00 ; '.'
000000000000652c         db  0xc0 ; '.'
000000000000652d         db  0xdf ; '.'
000000000000652e         db  0xff ; '.'
000000000000652f         db  0xff ; '.'
0000000000006530         db  0xf8 ; '.'
0000000000006531         db  0x08 ; '.'
0000000000006532         db  0x00 ; '.'
0000000000006533         db  0x00 ; '.'
0000000000006534         db  0x50 ; 'P'
0000000000006535         db  0xe0 ; '.'
0000000000006536         db  0xff ; '.'
0000000000006537         db  0xff ; '.'
0000000000006538         db  0x14 ; '.'
0000000000006539         db  0x09 ; '.'
000000000000653a         db  0x00 ; '.'
000000000000653b         db  0x00 ; '.'
000000000000653c         db  0xe0 ; '.'
000000000000653d         db  0xe0 ; '.'
000000000000653e         db  0xff ; '.'
000000000000653f         db  0xff ; '.'
0000000000006540         db  0x30 ; '0'
0000000000006541         db  0x09 ; '.'
0000000000006542         db  0x00 ; '.'
0000000000006543         db  0x00 ; '.'
0000000000006544         db  0xf0 ; '.'
0000000000006545         db  0xe0 ; '.'
0000000000006546         db  0xff ; '.'
0000000000006547         db  0xff ; '.'
0000000000006548         db  0x44 ; 'D'
0000000000006549         db  0x09 ; '.'
000000000000654a         db  0x00 ; '.'
000000000000654b         db  0x00 ; '.'
000000000000654c         db  0x00 ; '.'
000000000000654d         db  0xe1 ; '.'
000000000000654e         db  0xff ; '.'
000000000000654f         db  0xff ; '.'
0000000000006550         db  0x58 ; 'X'
0000000000006551         db  0x09 ; '.'
0000000000006552         db  0x00 ; '.'
0000000000006553         db  0x00 ; '.'
0000000000006554         db  0xa0 ; '.'
0000000000006555         db  0xe1 ; '.'
0000000000006556         db  0xff ; '.'
0000000000006557         db  0xff ; '.'
0000000000006558         db  0x74 ; 't'
0000000000006559         db  0x09 ; '.'
000000000000655a         db  0x00 ; '.'
000000000000655b         db  0x00 ; '.'
000000000000655c         db  0xb0 ; '.'
000000000000655d         db  0xe1 ; '.'
000000000000655e         db  0xff ; '.'
000000000000655f         db  0xff ; '.'
0000000000006560         db  0x88 ; '.'
0000000000006561         db  0x09 ; '.'
0000000000006562         db  0x00 ; '.'
0000000000006563         db  0x00 ; '.'
0000000000006564         db  0xd0 ; '.'
0000000000006565         db  0xe1 ; '.'
0000000000006566         db  0xff ; '.'
0000000000006567         db  0xff ; '.'
0000000000006568         db  0x9c ; '.'
0000000000006569         db  0x09 ; '.'
000000000000656a         db  0x00 ; '.'
000000000000656b         db  0x00 ; '.'
000000000000656c         db  0xe0 ; '.'
000000000000656d         db  0xe1 ; '.'
000000000000656e         db  0xff ; '.'
000000000000656f         db  0xff ; '.'
0000000000006570         db  0xb0 ; '.'
0000000000006571         db  0x09 ; '.'
0000000000006572         db  0x00 ; '.'
0000000000006573         db  0x00 ; '.'
0000000000006574         db  0x70 ; 'p'
0000000000006575         db  0xe2 ; '.'
0000000000006576         db  0xff ; '.'
0000000000006577         db  0xff ; '.'
0000000000006578         db  0xcc ; '.'
0000000000006579         db  0x09 ; '.'
000000000000657a         db  0x00 ; '.'
000000000000657b         db  0x00 ; '.'
000000000000657c         db  0x10 ; '.'
000000000000657d         db  0xe3 ; '.'
000000000000657e         db  0xff ; '.'
000000000000657f         db  0xff ; '.'
0000000000006580         db  0xe8 ; '.'
0000000000006581         db  0x09 ; '.'
0000000000006582         db  0x00 ; '.'
0000000000006583         db  0x00 ; '.'
0000000000006584         db  0x20 ; ' '
0000000000006585         db  0xe3 ; '.'
0000000000006586         db  0xff ; '.'
0000000000006587         db  0xff ; '.'
0000000000006588         db  0xfc ; '.'
0000000000006589         db  0x09 ; '.'
000000000000658a         db  0x00 ; '.'
000000000000658b         db  0x00 ; '.'
000000000000658c         db  0x40 ; '@'
000000000000658d         db  0xe3 ; '.'
000000000000658e         db  0xff ; '.'
000000000000658f         db  0xff ; '.'
0000000000006590         db  0x10 ; '.'
0000000000006591         db  0x0a ; '.'
0000000000006592         db  0x00 ; '.'
0000000000006593         db  0x00 ; '.'
0000000000006594         db  0x60 ; '`'
0000000000006595         db  0xe3 ; '.'
0000000000006596         db  0xff ; '.'
0000000000006597         db  0xff ; '.'
0000000000006598         db  0x24 ; '$'
0000000000006599         db  0x0a ; '.'
000000000000659a         db  0x00 ; '.'
000000000000659b         db  0x00 ; '.'
000000000000659c         db  0x70 ; 'p'
000000000000659d         db  0xe3 ; '.'
000000000000659e         db  0xff ; '.'
000000000000659f         db  0xff ; '.'
00000000000065a0         db  0x38 ; '8'
00000000000065a1         db  0x0a ; '.'
00000000000065a2         db  0x00 ; '.'
00000000000065a3         db  0x00 ; '.'
00000000000065a4         db  0x90 ; '.'
00000000000065a5         db  0xe3 ; '.'
00000000000065a6         db  0xff ; '.'
00000000000065a7         db  0xff ; '.'
00000000000065a8         db  0x4c ; 'L'
00000000000065a9         db  0x0a ; '.'
00000000000065aa         db  0x00 ; '.'
00000000000065ab         db  0x00 ; '.'
00000000000065ac         db  0xb0 ; '.'
00000000000065ad         db  0xe3 ; '.'
00000000000065ae         db  0xff ; '.'
00000000000065af         db  0xff ; '.'
00000000000065b0         db  0x60 ; '`'
00000000000065b1         db  0x0a ; '.'
00000000000065b2         db  0x00 ; '.'
00000000000065b3         db  0x00 ; '.'
00000000000065b4         db  0xd0 ; '.'
00000000000065b5         db  0xe3 ; '.'
00000000000065b6         db  0xff ; '.'
00000000000065b7         db  0xff ; '.'
00000000000065b8         db  0x78 ; 'x'
00000000000065b9         db  0x0a ; '.'
00000000000065ba         db  0x00 ; '.'
00000000000065bb         db  0x00 ; '.'
00000000000065bc         db  0xf0 ; '.'
00000000000065bd         db  0xe7 ; '.'
00000000000065be         db  0xff ; '.'
00000000000065bf         db  0xff ; '.'
00000000000065c0         db  0x8c ; '.'
00000000000065c1         db  0x0b ; '.'
00000000000065c2         db  0x00 ; '.'
00000000000065c3         db  0x00 ; '.'
00000000000065c4         db  0x10 ; '.'
00000000000065c5         db  0xe8 ; '.'
00000000000065c6         db  0xff ; '.'
00000000000065c7         db  0xff ; '.'
00000000000065c8         db  0xa0 ; '.'
00000000000065c9         db  0x0b ; '.'
00000000000065ca         db  0x00 ; '.'
00000000000065cb         db  0x00 ; '.'
00000000000065cc         db  0x90 ; '.'
00000000000065cd         db  0xe8 ; '.'
00000000000065ce         db  0xff ; '.'
00000000000065cf         db  0xff ; '.'
00000000000065d0         db  0xbc ; '.'
00000000000065d1         db  0x0b ; '.'
00000000000065d2         db  0x00 ; '.'
00000000000065d3         db  0x00 ; '.'
00000000000065d4         db  0x70 ; 'p'
00000000000065d5         db  0xe9 ; '.'
00000000000065d6         db  0xff ; '.'
00000000000065d7         db  0xff ; '.'
00000000000065d8         db  0xe8 ; '.'
00000000000065d9         db  0x0b ; '.'
00000000000065da         db  0x00 ; '.'
00000000000065db         db  0x00 ; '.'
00000000000065dc         db  0xf0 ; '.'
00000000000065dd         db  0xe9 ; '.'
00000000000065de         db  0xff ; '.'
00000000000065df         db  0xff ; '.'
00000000000065e0         db  0x08 ; '.'
00000000000065e1         db  0x0c ; '.'
00000000000065e2         db  0x00 ; '.'
00000000000065e3         db  0x00 ; '.'
00000000000065e4         db  0x10 ; '.'
00000000000065e5         db  0xea ; '.'
00000000000065e6         db  0xff ; '.'
00000000000065e7         db  0xff ; '.'
00000000000065e8         db  0x24 ; '$'
00000000000065e9         db  0x0c ; '.'
00000000000065ea         db  0x00 ; '.'
00000000000065eb         db  0x00 ; '.'
00000000000065ec         db  0x40 ; '@'
00000000000065ed         db  0xea ; '.'
00000000000065ee         db  0xff ; '.'
00000000000065ef         db  0xff ; '.'
00000000000065f0         db  0x38 ; '8'
00000000000065f1         db  0x0c ; '.'
00000000000065f2         db  0x00 ; '.'
00000000000065f3         db  0x00 ; '.'
00000000000065f4         db  0x50 ; 'P'
00000000000065f5         db  0xea ; '.'
00000000000065f6         db  0xff ; '.'
00000000000065f7         db  0xff ; '.'
00000000000065f8         db  0x4c ; 'L'
00000000000065f9         db  0x0c ; '.'
00000000000065fa         db  0x00 ; '.'
00000000000065fb         db  0x00 ; '.'
00000000000065fc         db  0x90 ; '.'
00000000000065fd         db  0xea ; '.'
00000000000065fe         db  0xff ; '.'
00000000000065ff         db  0xff ; '.'
0000000000006600         db  0x70 ; 'p'
0000000000006601         db  0x0c ; '.'
0000000000006602         db  0x00 ; '.'
0000000000006603         db  0x00 ; '.'
0000000000006604         db  0xc0 ; '.'
0000000000006605         db  0xea ; '.'
0000000000006606         db  0xff ; '.'
0000000000006607         db  0xff ; '.'
0000000000006608         db  0x84 ; '.'
0000000000006609         db  0x0c ; '.'
000000000000660a         db  0x00 ; '.'
000000000000660b         db  0x00 ; '.'
000000000000660c         db  0x50 ; 'P'
000000000000660d         db  0xeb ; '.'
000000000000660e         db  0xff ; '.'
000000000000660f         db  0xff ; '.'
0000000000006610         db  0x9c ; '.'
0000000000006611         db  0x0c ; '.'
0000000000006612         db  0x00 ; '.'
0000000000006613         db  0x00 ; '.'
0000000000006614         db  0xa0 ; '.'
0000000000006615         db  0xeb ; '.'
0000000000006616         db  0xff ; '.'
0000000000006617         db  0xff ; '.'
0000000000006618         db  0xb4 ; '.'
0000000000006619         db  0x0c ; '.'
000000000000661a         db  0x00 ; '.'
000000000000661b         db  0x00 ; '.'
000000000000661c         db  0xc0 ; '.'
000000000000661d         db  0xeb ; '.'
000000000000661e         db  0xff ; '.'
000000000000661f         db  0xff ; '.'
0000000000006620         db  0xd0 ; '.'
0000000000006621         db  0x0c ; '.'
0000000000006622         db  0x00 ; '.'
0000000000006623         db  0x00 ; '.'
0000000000006624         db  0xf0 ; '.'
0000000000006625         db  0xeb ; '.'
0000000000006626         db  0xff ; '.'
0000000000006627         db  0xff ; '.'
0000000000006628         db  0xec ; '.'
0000000000006629         db  0x0c ; '.'
000000000000662a         db  0x00 ; '.'
000000000000662b         db  0x00 ; '.'
000000000000662c         db  0x20 ; ' '
000000000000662d         db  0xec ; '.'
000000000000662e         db  0xff ; '.'
000000000000662f         db  0xff ; '.'
0000000000006630         db  0x14 ; '.'
0000000000006631         db  0x0d ; '.'
0000000000006632         db  0x00 ; '.'
0000000000006633         db  0x00 ; '.'
0000000000006634         db  0x40 ; '@'
0000000000006635         db  0xec ; '.'
0000000000006636         db  0xff ; '.'
0000000000006637         db  0xff ; '.'
0000000000006638         db  0x30 ; '0'
0000000000006639         db  0x0d ; '.'
000000000000663a         db  0x00 ; '.'
000000000000663b         db  0x00 ; '.'
000000000000663c         db  0x80 ; '.'
000000000000663d         db  0xec ; '.'
000000000000663e         db  0xff ; '.'
000000000000663f         db  0xff ; '.'
0000000000006640         db  0x48 ; 'H'
0000000000006641         db  0x0d ; '.'
0000000000006642         db  0x00 ; '.'
0000000000006643         db  0x00 ; '.'
0000000000006644         db  0xa0 ; '.'
0000000000006645         db  0xec ; '.'
0000000000006646         db  0xff ; '.'
0000000000006647         db  0xff ; '.'
0000000000006648         db  0x68 ; 'h'
0000000000006649         db  0x0d ; '.'
000000000000664a         db  0x00 ; '.'
000000000000664b         db  0x00 ; '.'
000000000000664c         db  0x20 ; ' '
000000000000664d         db  0xed ; '.'
000000000000664e         db  0xff ; '.'
000000000000664f         db  0xff ; '.'
0000000000006650         db  0xa0 ; '.'
0000000000006651         db  0x0d ; '.'
0000000000006652         db  0x00 ; '.'
0000000000006653         db  0x00 ; '.'
0000000000006654         db  0x60 ; '`'
0000000000006655         db  0xed ; '.'
0000000000006656         db  0xff ; '.'
0000000000006657         db  0xff ; '.'
0000000000006658         db  0xc0 ; '.'
0000000000006659         db  0x0d ; '.'
000000000000665a         db  0x00 ; '.'
000000000000665b         db  0x00 ; '.'
000000000000665c         db  0xc0 ; '.'
000000000000665d         db  0xed ; '.'
000000000000665e         db  0xff ; '.'
000000000000665f         db  0xff ; '.'
0000000000006660         db  0xf0 ; '.'
0000000000006661         db  0x0d ; '.'
0000000000006662         db  0x00 ; '.'
0000000000006663         db  0x00 ; '.'
0000000000006664         db  0x50 ; 'P'
0000000000006665         db  0xee ; '.'
0000000000006666         db  0xff ; '.'
0000000000006667         db  0xff ; '.'
0000000000006668         db  0x30 ; '0'
0000000000006669         db  0x0e ; '.'
000000000000666a         db  0x00 ; '.'
000000000000666b         db  0x00 ; '.'
000000000000666c         db  0xd0 ; '.'
000000000000666d         db  0xee ; '.'
000000000000666e         db  0xff ; '.'
000000000000666f         db  0xff ; '.'
0000000000006670         db  0x80 ; '.'
0000000000006671         db  0x0e ; '.'
0000000000006672         db  0x00 ; '.'
0000000000006673         db  0x00 ; '.'
0000000000006674         db  0x30 ; '0'
0000000000006675         db  0xef ; '.'
0000000000006676         db  0xff ; '.'
0000000000006677         db  0xff ; '.'
0000000000006678         db  0xa0 ; '.'
0000000000006679         db  0x0e ; '.'
000000000000667a         db  0x00 ; '.'
000000000000667b         db  0x00 ; '.'
000000000000667c         db  0x70 ; 'p'
000000000000667d         db  0xef ; '.'
000000000000667e         db  0xff ; '.'
000000000000667f         db  0xff ; '.'
0000000000006680         db  0xc0 ; '.'
0000000000006681         db  0x0e ; '.'
0000000000006682         db  0x00 ; '.'
0000000000006683         db  0x00 ; '.'
0000000000006684         db  0xe0 ; '.'
0000000000006685         db  0xef ; '.'
0000000000006686         db  0xff ; '.'
0000000000006687         db  0xff ; '.'
0000000000006688         db  0x08 ; '.'
0000000000006689         db  0x0f ; '.'
000000000000668a         db  0x00 ; '.'
000000000000668b         db  0x00 ; '.'
000000000000668c         db  0xf0 ; '.'
000000000000668d         db  0xef ; '.'
000000000000668e         db  0xff ; '.'
000000000000668f         db  0xff ; '.'
0000000000006690         db  0x20 ; ' '
0000000000006691         db  0x0f ; '.'
0000000000006692         db  0x00 ; '.'
0000000000006693         db  0x00 ; '.'
0000000000006694         db  0x00 ; '.'
0000000000006695         db  0x00 ; '.'
0000000000006696         db  0x00 ; '.'
0000000000006697         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x6698; 0x7328[ (3216 bytes)
        ; File offset : [26264; 29480[ (3216 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006698         dd         0x00000014                                  ; Length of the record
000000000000669c         dd         0x00000000                                  ; CIE ID
00000000000066a0         db         0x01                                        ; Version
00000000000066a1         db         "zR", 0                                     ; Augmentation String
00000000000066a4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
00000000000066a5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
00000000000066a6         db         0x10                                        ; Return address register
00000000000066a7         db         0x01                                        ; Augmentation data length
00000000000066a8         db         0x1b                                        ; FDE encoding
00000000000066a9         db  0x0c ; '.'
00000000000066aa         db  0x07 ; '.'
00000000000066ab         db  0x08 ; '.'
00000000000066ac         db  0x90 ; '.'
00000000000066ad         db  0x01 ; '.'
00000000000066ae         db  0x07 ; '.'
00000000000066af         db  0x10 ; '.'
00000000000066b0         dd         0x00000014                                  ; Length of the record
00000000000066b4         dd         0x0000001c                                  ; FDE: parent CIE at 0x6698 (FDE encoding = 0x1B)
00000000000066b8         db         0x38, 0xb4, 2 dup (0xff)                    ; begin 0x1af0
00000000000066bc         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1b1b)
00000000000066c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000066c1         align      8
00000000000066c8         dd         0x00000014                                  ; Length of the record
00000000000066cc         dd         0x00000000                                  ; CIE ID
00000000000066d0         db         0x01                                        ; Version
00000000000066d1         db         "zR", 0                                     ; Augmentation String
00000000000066d4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
00000000000066d5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
00000000000066d6         db         0x10                                        ; Return address register
00000000000066d7         db         0x01                                        ; Augmentation data length
00000000000066d8         db         0x1b                                        ; FDE encoding
00000000000066d9         db  0x0c ; '.'
00000000000066da         db  0x07 ; '.'
00000000000066db         db  0x08 ; '.'
00000000000066dc         db  0x90 ; '.'
00000000000066dd         db  0x01 ; '.'
00000000000066de         db  0x00 ; '.'
00000000000066df         db  0x00 ; '.'
00000000000066e0         dd         0x00000024                                  ; Length of the record
00000000000066e4         dd         0x0000001c                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
00000000000066e8         db         0x18, 0xad, 2 dup (0xff)                    ; begin 0x1400
00000000000066ec         db         0x00, 0x03, 2 dup (0x00)                    ; length 0x300 (end at 0x1700)
00000000000066f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000066f1         db  0x0e ; '.'
00000000000066f2         db  0x10 ; '.'
00000000000066f3         db  0x46 ; 'F'
00000000000066f4         db  0x0e ; '.'
00000000000066f5         db  0x18 ; '.'
00000000000066f6         db  0x4a ; 'J'
00000000000066f7         db  0x0f ; '.'
00000000000066f8         db  0x0b ; '.'
00000000000066f9         db  0x77 ; 'w'
00000000000066fa         db  0x08 ; '.'
00000000000066fb         db  0x80 ; '.'
00000000000066fc         db  0x00 ; '.'
00000000000066fd         db  0x3f ; '?'
00000000000066fe         db  0x1a ; '.'
00000000000066ff         db  0x3b ; ';'
0000000000006700         db  0x2a ; '*'
0000000000006701         db  0x33 ; '3'
0000000000006702         db  0x24 ; '$'
0000000000006703         db  0x22 ; '"'
0000000000006704         db  0x00 ; '.'
0000000000006705         db  0x00 ; '.'
0000000000006706         db  0x00 ; '.'
0000000000006707         db  0x00 ; '.'
0000000000006708         dd         0x00000014                                  ; Length of the record
000000000000670c         dd         0x00000044                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006710         db         0xf0, 0xaf, 2 dup (0xff)                    ; begin 0x1700
0000000000006714         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1708)
0000000000006718         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006719         align      32
0000000000006720         dd         0x00000028                                  ; Length of the record
0000000000006724         dd         0x0000005c                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006728         db         0xd8, 0xb4, 2 dup (0xff)                    ; begin 0x1c00
000000000000672c         db         0xba, 0x03, 2 dup (0x00)                    ; length 0x3ba (end at 0x1fba)
0000000000006730         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006731         db  0x42 ; 'B'
0000000000006732         db  0x0e ; '.'
0000000000006733         db  0x10 ; '.'
0000000000006734         db  0x8d ; '.'
0000000000006735         db  0x02 ; '.'
0000000000006736         db  0x42 ; 'B'
0000000000006737         db  0x0e ; '.'
0000000000006738         db  0x18 ; '.'
0000000000006739         db  0x8c ; '.'
000000000000673a         db  0x03 ; '.'
000000000000673b         db  0x46 ; 'F'
000000000000673c         db  0x0e ; '.'
000000000000673d         db  0x20 ; ' '
000000000000673e         db  0x86 ; '.'
000000000000673f         db  0x04 ; '.'
0000000000006740         db  0x41 ; 'A'
0000000000006741         db  0x0e ; '.'
0000000000006742         db  0x28 ; '('
0000000000006743         db  0x83 ; '.'
0000000000006744         db  0x05 ; '.'
0000000000006745         db  0x49 ; 'I'
0000000000006746         db  0x0e ; '.'
0000000000006747         db  0xb0 ; '.'
0000000000006748         db  0x01 ; '.'
0000000000006749         db  0x00 ; '.'
000000000000674a         db  0x00 ; '.'
000000000000674b         db  0x00 ; '.'
000000000000674c         dd         0x00000048                                  ; Length of the record
0000000000006750         dd         0x00000088                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006754         db         0xbc, 0xaf, 2 dup (0xff)                    ; begin 0x1710
0000000000006758         db         0xd4, 0x03, 2 dup (0x00)                    ; length 0x3d4 (end at 0x1ae4)
000000000000675c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000675d         db  0x42 ; 'B'
000000000000675e         db  0x0e ; '.'
000000000000675f         db  0x10 ; '.'
0000000000006760         db  0x8f ; '.'
0000000000006761         db  0x02 ; '.'
0000000000006762         db  0x42 ; 'B'
0000000000006763         db  0x0e ; '.'
0000000000006764         db  0x18 ; '.'
0000000000006765         db  0x8e ; '.'
0000000000006766         db  0x03 ; '.'
0000000000006767         db  0x42 ; 'B'
0000000000006768         db  0x0e ; '.'
0000000000006769         db  0x20 ; ' '
000000000000676a         db  0x8d ; '.'
000000000000676b         db  0x04 ; '.'
000000000000676c         db  0x42 ; 'B'
000000000000676d         db  0x0e ; '.'
000000000000676e         db  0x28 ; '('
000000000000676f         db  0x8c ; '.'
0000000000006770         db  0x05 ; '.'
0000000000006771         db  0x41 ; 'A'
0000000000006772         db  0x0e ; '.'
0000000000006773         db  0x30 ; '0'
0000000000006774         db  0x86 ; '.'
0000000000006775         db  0x06 ; '.'
0000000000006776         db  0x41 ; 'A'
0000000000006777         db  0x0e ; '.'
0000000000006778         db  0x38 ; '8'
0000000000006779         db  0x83 ; '.'
000000000000677a         db  0x07 ; '.'
000000000000677b         db  0x49 ; 'I'
000000000000677c         db  0x0e ; '.'
000000000000677d         db  0x60 ; '`'
000000000000677e         db  0x03 ; '.'
000000000000677f         db  0x74 ; 't'
0000000000006780         db  0x02 ; '.'
0000000000006781         db  0x0a ; '.'
0000000000006782         db  0x0e ; '.'
0000000000006783         db  0x38 ; '8'
0000000000006784         db  0x41 ; 'A'
0000000000006785         db  0x0e ; '.'
0000000000006786         db  0x30 ; '0'
0000000000006787         db  0x41 ; 'A'
0000000000006788         db  0x0e ; '.'
0000000000006789         db  0x28 ; '('
000000000000678a         db  0x42 ; 'B'
000000000000678b         db  0x0e ; '.'
000000000000678c         db  0x20 ; ' '
000000000000678d         db  0x42 ; 'B'
000000000000678e         db  0x0e ; '.'
000000000000678f         db  0x18 ; '.'
0000000000006790         db  0x42 ; 'B'
0000000000006791         db  0x0e ; '.'
0000000000006792         db  0x10 ; '.'
0000000000006793         db  0x42 ; 'B'
0000000000006794         db  0x0e ; '.'
0000000000006795         db  0x08 ; '.'
0000000000006796         db  0x41 ; 'A'
0000000000006797         db  0x0b ; '.'
0000000000006798         dd         0x00000018                                  ; Length of the record
000000000000679c         dd         0x000000d4                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
00000000000067a0         db         0x20, 0xb8, 2 dup (0xff)                    ; begin 0x1fc0
00000000000067a4         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x1fff)
00000000000067a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067a9         db  0x49 ; 'I'
00000000000067aa         db  0x0e ; '.'
00000000000067ab         db  0x10 ; '.'
00000000000067ac         db  0x83 ; '.'
00000000000067ad         db  0x02 ; '.'
00000000000067ae         db  0x75 ; 'u'
00000000000067af         db  0x0e ; '.'
00000000000067b0         db  0x08 ; '.'
00000000000067b1         db  0x00 ; '.'
00000000000067b2         db  0x00 ; '.'
00000000000067b3         db  0x00 ; '.'
00000000000067b4         dd         0x00000018                                  ; Length of the record
00000000000067b8         dd         0x000000f0                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
00000000000067bc         db         0x44, 0xb8, 2 dup (0xff)                    ; begin 0x2000
00000000000067c0         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x203f)
00000000000067c4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067c5         db  0x49 ; 'I'
00000000000067c6         db  0x0e ; '.'
00000000000067c7         db  0x10 ; '.'
00000000000067c8         db  0x83 ; '.'
00000000000067c9         db  0x02 ; '.'
00000000000067ca         db  0x75 ; 'u'
00000000000067cb         db  0x0e ; '.'
00000000000067cc         db  0x08 ; '.'
00000000000067cd         db  0x00 ; '.'
00000000000067ce         db  0x00 ; '.'
00000000000067cf         db  0x00 ; '.'
00000000000067d0         dd         0x00000034                                  ; Length of the record
00000000000067d4         dd         0x0000010c                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
00000000000067d8         db         0x68, 0xb8, 2 dup (0xff)                    ; begin 0x2040
00000000000067dc         db         0x14, 0x01, 2 dup (0x00)                    ; length 0x114 (end at 0x2154)
00000000000067e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067e1         db  0x41 ; 'A'
00000000000067e2         db  0x0e ; '.'
00000000000067e3         db  0x10 ; '.'
00000000000067e4         db  0x86 ; '.'
00000000000067e5         db  0x02 ; '.'
00000000000067e6         db  0x41 ; 'A'
00000000000067e7         db  0x0e ; '.'
00000000000067e8         db  0x18 ; '.'
00000000000067e9         db  0x83 ; '.'
00000000000067ea         db  0x03 ; '.'
00000000000067eb         db  0x47 ; 'G'
00000000000067ec         db  0x0e ; '.'
00000000000067ed         db  0x20 ; ' '
00000000000067ee         db  0x02 ; '.'
00000000000067ef         db  0x48 ; 'H'
00000000000067f0         db  0x0a ; '.'
00000000000067f1         db  0x0e ; '.'
00000000000067f2         db  0x18 ; '.'
00000000000067f3         db  0x41 ; 'A'
00000000000067f4         db  0x0e ; '.'
00000000000067f5         db  0x10 ; '.'
00000000000067f6         db  0x41 ; 'A'
00000000000067f7         db  0x0e ; '.'
00000000000067f8         db  0x08 ; '.'
00000000000067f9         db  0x45 ; 'E'
00000000000067fa         db  0x0b ; '.'
00000000000067fb         db  0x6b ; 'k'
00000000000067fc         db  0x0a ; '.'
00000000000067fd         db  0x0e ; '.'
00000000000067fe         db  0x18 ; '.'
00000000000067ff         db  0x41 ; 'A'
0000000000006800         db  0x0e ; '.'
0000000000006801         db  0x10 ; '.'
0000000000006802         db  0x41 ; 'A'
0000000000006803         db  0x0e ; '.'
0000000000006804         db  0x08 ; '.'
0000000000006805         db  0x4b ; 'K'
0000000000006806         db  0x0b ; '.'
0000000000006807         db  0x00 ; '.'
0000000000006808         dd         0x00000064                                  ; Length of the record
000000000000680c         dd         0x00000144                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006810         db         0x50, 0xb9, 2 dup (0xff)                    ; begin 0x2160
0000000000006814         db         0x59, 0x03, 2 dup (0x00)                    ; length 0x359 (end at 0x24b9)
0000000000006818         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006819         db  0x42 ; 'B'
000000000000681a         db  0x0e ; '.'
000000000000681b         db  0x10 ; '.'
000000000000681c         db  0x8f ; '.'
000000000000681d         db  0x02 ; '.'
000000000000681e         db  0x42 ; 'B'
000000000000681f         db  0x0e ; '.'
0000000000006820         db  0x18 ; '.'
0000000000006821         db  0x8e ; '.'
0000000000006822         db  0x03 ; '.'
0000000000006823         db  0x42 ; 'B'
0000000000006824         db  0x0e ; '.'
0000000000006825         db  0x20 ; ' '
0000000000006826         db  0x8d ; '.'
0000000000006827         db  0x04 ; '.'
0000000000006828         db  0x42 ; 'B'
0000000000006829         db  0x0e ; '.'
000000000000682a         db  0x28 ; '('
000000000000682b         db  0x8c ; '.'
000000000000682c         db  0x05 ; '.'
000000000000682d         db  0x41 ; 'A'
000000000000682e         db  0x0e ; '.'
000000000000682f         db  0x30 ; '0'
0000000000006830         db  0x86 ; '.'
0000000000006831         db  0x06 ; '.'
0000000000006832         db  0x41 ; 'A'
0000000000006833         db  0x0e ; '.'
0000000000006834         db  0x38 ; '8'
0000000000006835         db  0x83 ; '.'
0000000000006836         db  0x07 ; '.'
0000000000006837         db  0x44 ; 'D'
0000000000006838         db  0x0e ; '.'
0000000000006839         db  0x50 ; 'P'
000000000000683a         db  0x03 ; '.'
000000000000683b         db  0x17 ; '.'
000000000000683c         db  0x01 ; '.'
000000000000683d         db  0x0a ; '.'
000000000000683e         db  0x0e ; '.'
000000000000683f         db  0x38 ; '8'
0000000000006840         db  0x41 ; 'A'
0000000000006841         db  0x0e ; '.'
0000000000006842         db  0x30 ; '0'
0000000000006843         db  0x41 ; 'A'
0000000000006844         db  0x0e ; '.'
0000000000006845         db  0x28 ; '('
0000000000006846         db  0x42 ; 'B'
0000000000006847         db  0x0e ; '.'
0000000000006848         db  0x20 ; ' '
0000000000006849         db  0x42 ; 'B'
000000000000684a         db  0x0e ; '.'
000000000000684b         db  0x18 ; '.'
000000000000684c         db  0x42 ; 'B'
000000000000684d         db  0x0e ; '.'
000000000000684e         db  0x10 ; '.'
000000000000684f         db  0x42 ; 'B'
0000000000006850         db  0x0e ; '.'
0000000000006851         db  0x08 ; '.'
0000000000006852         db  0x41 ; 'A'
0000000000006853         db  0x0b ; '.'
0000000000006854         db  0x03 ; '.'
0000000000006855         db  0xc6 ; '.'
0000000000006856         db  0x01 ; '.'
0000000000006857         db  0x0a ; '.'
0000000000006858         db  0x0e ; '.'
0000000000006859         db  0x38 ; '8'
000000000000685a         db  0x41 ; 'A'
000000000000685b         db  0x0e ; '.'
000000000000685c         db  0x30 ; '0'
000000000000685d         db  0x41 ; 'A'
000000000000685e         db  0x0e ; '.'
000000000000685f         db  0x28 ; '('
0000000000006860         db  0x42 ; 'B'
0000000000006861         db  0x0e ; '.'
0000000000006862         db  0x20 ; ' '
0000000000006863         db  0x42 ; 'B'
0000000000006864         db  0x0e ; '.'
0000000000006865         db  0x18 ; '.'
0000000000006866         db  0x42 ; 'B'
0000000000006867         db  0x0e ; '.'
0000000000006868         db  0x10 ; '.'
0000000000006869         db  0x42 ; 'B'
000000000000686a         db  0x0e ; '.'
000000000000686b         db  0x08 ; '.'
000000000000686c         db  0x45 ; 'E'
000000000000686d         db  0x0b ; '.'
000000000000686e         db  0x00 ; '.'
000000000000686f         db  0x00 ; '.'
0000000000006870         dd         0x00000020                                  ; Length of the record
0000000000006874         dd         0x000001ac                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006878         db         0x48, 0xbc, 2 dup (0xff)                    ; begin 0x24c0
000000000000687c         db         0x3c, 0x01, 2 dup (0x00)                    ; length 0x13c (end at 0x25fc)
0000000000006880         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006881         db  0x44 ; 'D'
0000000000006882         db  0x0e ; '.'
0000000000006883         db  0x10 ; '.'
0000000000006884         db  0x02 ; '.'
0000000000006885         db  0x7d ; '}'
0000000000006886         db  0x0a ; '.'
0000000000006887         db  0x0e ; '.'
0000000000006888         db  0x08 ; '.'
0000000000006889         db  0x41 ; 'A'
000000000000688a         db  0x0b ; '.'
000000000000688b         db  0x7f ; '.'
000000000000688c         db  0x0a ; '.'
000000000000688d         db  0x0e ; '.'
000000000000688e         db  0x08 ; '.'
000000000000688f         db  0x41 ; 'A'
0000000000006890         db  0x0b ; '.'
0000000000006891         db  0x00 ; '.'
0000000000006892         db  0x00 ; '.'
0000000000006893         db  0x00 ; '.'
0000000000006894         dd         0x00000010                                  ; Length of the record
0000000000006898         dd         0x000001d0                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
000000000000689c         db         0x64, 0xbd, 2 dup (0xff)                    ; begin 0x2600
00000000000068a0         db         0xa8, 3 dup (0x00)                          ; length 0xa8 (end at 0x26a8)
00000000000068a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000068a5         align      8
00000000000068a8         dd         0x00000010                                  ; Length of the record
00000000000068ac         dd         0x000001e4                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
00000000000068b0         db         0x00, 0xbe, 2 dup (0xff)                    ; begin 0x26b0
00000000000068b4         db         0x1d, 3 dup (0x00)                          ; length 0x1d (end at 0x26cd)
00000000000068b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000068b9         align      4
00000000000068bc         dd         0x00000040                                  ; Length of the record
00000000000068c0         dd         0x000001f8                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
00000000000068c4         db         0x0c, 0xbe, 2 dup (0xff)                    ; begin 0x26d0
00000000000068c8         db         0x01, 0x02, 2 dup (0x00)                    ; length 0x201 (end at 0x28d1)
00000000000068cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000068cd         db  0x42 ; 'B'
00000000000068ce         db  0x0e ; '.'
00000000000068cf         db  0x10 ; '.'
00000000000068d0         db  0x8c ; '.'
00000000000068d1         db  0x02 ; '.'
00000000000068d2         db  0x41 ; 'A'
00000000000068d3         db  0x0e ; '.'
00000000000068d4         db  0x18 ; '.'
00000000000068d5         db  0x86 ; '.'
00000000000068d6         db  0x03 ; '.'
00000000000068d7         db  0x41 ; 'A'
00000000000068d8         db  0x0e ; '.'
00000000000068d9         db  0x20 ; ' '
00000000000068da         db  0x83 ; '.'
00000000000068db         db  0x04 ; '.'
00000000000068dc         db  0x44 ; 'D'
00000000000068dd         db  0x0e ; '.'
00000000000068de         db  0x30 ; '0'
00000000000068df         db  0x03 ; '.'
00000000000068e0         db  0x2a ; '*'
00000000000068e1         db  0x01 ; '.'
00000000000068e2         db  0x0a ; '.'
00000000000068e3         db  0x0e ; '.'
00000000000068e4         db  0x20 ; ' '
00000000000068e5         db  0x41 ; 'A'
00000000000068e6         db  0x0e ; '.'
00000000000068e7         db  0x18 ; '.'
00000000000068e8         db  0x41 ; 'A'
00000000000068e9         db  0x0e ; '.'
00000000000068ea         db  0x10 ; '.'
00000000000068eb         db  0x42 ; 'B'
00000000000068ec         db  0x0e ; '.'
00000000000068ed         db  0x08 ; '.'
00000000000068ee         db  0x4a ; 'J'
00000000000068ef         db  0x0b ; '.'
00000000000068f0         db  0x44 ; 'D'
00000000000068f1         db  0x0a ; '.'
00000000000068f2         db  0x0e ; '.'
00000000000068f3         db  0x20 ; ' '
00000000000068f4         db  0x43 ; 'C'
00000000000068f5         db  0x0e ; '.'
00000000000068f6         db  0x18 ; '.'
00000000000068f7         db  0x41 ; 'A'
00000000000068f8         db  0x0e ; '.'
00000000000068f9         db  0x10 ; '.'
00000000000068fa         db  0x42 ; 'B'
00000000000068fb         db  0x0e ; '.'
00000000000068fc         db  0x08 ; '.'
00000000000068fd         db  0x46 ; 'F'
00000000000068fe         db  0x0b ; '.'
00000000000068ff         db  0x00 ; '.'
0000000000006900         dd         0x00000018                                  ; Length of the record
0000000000006904         dd         0x0000023c                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006908         db         0xd8, 0xbf, 2 dup (0xff)                    ; begin 0x28e0
000000000000690c         db         0x43, 3 dup (0x00)                          ; length 0x43 (end at 0x2923)
0000000000006910         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006911         db  0x54 ; 'T'
0000000000006912         db  0x0e ; '.'
0000000000006913         db  0x10 ; '.'
0000000000006914         db  0x54 ; 'T'
0000000000006915         db  0x0a ; '.'
0000000000006916         db  0x0e ; '.'
0000000000006917         db  0x08 ; '.'
0000000000006918         db  0x41 ; 'A'
0000000000006919         db  0x0b ; '.'
000000000000691a         db  0x00 ; '.'
000000000000691b         db  0x00 ; '.'
000000000000691c         dd         0x00000018                                  ; Length of the record
0000000000006920         dd         0x00000258                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006924         db         0x0c, 0xc0, 2 dup (0xff)                    ; begin 0x2930
0000000000006928         db         0x4c, 3 dup (0x00)                          ; length 0x4c (end at 0x297c)
000000000000692c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000692d         db  0x41 ; 'A'
000000000000692e         db  0x0e ; '.'
000000000000692f         db  0x10 ; '.'
0000000000006930         db  0x83 ; '.'
0000000000006931         db  0x02 ; '.'
0000000000006932         db  0x02 ; '.'
0000000000006933         db  0x46 ; 'F'
0000000000006934         db  0x0e ; '.'
0000000000006935         db  0x08 ; '.'
0000000000006936         db  0x00 ; '.'
0000000000006937         db  0x00 ; '.'
0000000000006938         dd         0x00000010                                  ; Length of the record
000000000000693c         dd         0x00000274                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006940         db         0x40, 0xc0, 2 dup (0xff)                    ; begin 0x2980
0000000000006944         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2988)
0000000000006948         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006949         align      4
000000000000694c         dd         0x00000010                                  ; Length of the record
0000000000006950         dd         0x00000288                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006954         db         0x3c, 0xc0, 2 dup (0xff)                    ; begin 0x2990
0000000000006958         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2998)
000000000000695c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000695d         align      32
0000000000006960         dd         0x0000002c                                  ; Length of the record
0000000000006964         dd         0x0000029c                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006968         db         0x38, 0xc0, 2 dup (0xff)                    ; begin 0x29a0
000000000000696c         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2a44)
0000000000006970         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006971         db  0x41 ; 'A'
0000000000006972         db  0x0e ; '.'
0000000000006973         db  0x10 ; '.'
0000000000006974         db  0x86 ; '.'
0000000000006975         db  0x02 ; '.'
0000000000006976         db  0x41 ; 'A'
0000000000006977         db  0x0e ; '.'
0000000000006978         db  0x18 ; '.'
0000000000006979         db  0x83 ; '.'
000000000000697a         db  0x03 ; '.'
000000000000697b         db  0x44 ; 'D'
000000000000697c         db  0x0e ; '.'
000000000000697d         db  0x20 ; ' '
000000000000697e         db  0x7a ; 'z'
000000000000697f         db  0x0a ; '.'
0000000000006980         db  0x0e ; '.'
0000000000006981         db  0x18 ; '.'
0000000000006982         db  0x41 ; 'A'
0000000000006983         db  0x0e ; '.'
0000000000006984         db  0x10 ; '.'
0000000000006985         db  0x41 ; 'A'
0000000000006986         db  0x0e ; '.'
0000000000006987         db  0x08 ; '.'
0000000000006988         db  0x41 ; 'A'
0000000000006989         db  0x0b ; '.'
000000000000698a         db  0x00 ; '.'
000000000000698b         db  0x00 ; '.'
000000000000698c         db  0x00 ; '.'
000000000000698d         db  0x00 ; '.'
000000000000698e         db  0x00 ; '.'
000000000000698f         db  0x00 ; '.'
0000000000006990         dd         0x00000010                                  ; Length of the record
0000000000006994         dd         0x000002cc                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006998         db         0xb8, 0xc0, 2 dup (0xff)                    ; begin 0x2a50
000000000000699c         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x2a55)
00000000000069a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069a1         align      4
00000000000069a4         dd         0x00000018                                  ; Length of the record
00000000000069a8         dd         0x000002e0                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
00000000000069ac         db         0xb4, 0xc0, 2 dup (0xff)                    ; begin 0x2a60
00000000000069b0         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x2a82)
00000000000069b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069b5         db  0x46 ; 'F'
00000000000069b6         db  0x0e ; '.'
00000000000069b7         db  0x10 ; '.'
00000000000069b8         db  0x83 ; '.'
00000000000069b9         db  0x02 ; '.'
00000000000069ba         db  0x4e ; 'N'
00000000000069bb         db  0xc3 ; '.'
00000000000069bc         db  0x0e ; '.'
00000000000069bd         db  0x08 ; '.'
00000000000069be         db  0x00 ; '.'
00000000000069bf         db  0x00 ; '.'
00000000000069c0         dd         0x0000001c                                  ; Length of the record
00000000000069c4         dd         0x000002fc                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
00000000000069c8         db         0xc8, 0xc0, 2 dup (0xff)                    ; begin 0x2a90
00000000000069cc         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x2b2f)
00000000000069d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069d1         db  0x44 ; 'D'
00000000000069d2         db  0x0e ; '.'
00000000000069d3         db  0x10 ; '.'
00000000000069d4         db  0x83 ; '.'
00000000000069d5         db  0x02 ; '.'
00000000000069d6         db  0x02 ; '.'
00000000000069d7         db  0x78 ; 'x'
00000000000069d8         db  0x0a ; '.'
00000000000069d9         db  0x0e ; '.'
00000000000069da         db  0x08 ; '.'
00000000000069db         db  0x41 ; 'A'
00000000000069dc         db  0x0b ; '.'
00000000000069dd         db  0x00 ; '.'
00000000000069de         db  0x00 ; '.'
00000000000069df         db  0x00 ; '.'
00000000000069e0         dd         0x00000040                                  ; Length of the record
00000000000069e4         dd         0x0000031c                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
00000000000069e8         db         0x48, 0xc1, 2 dup (0xff)                    ; begin 0x2b30
00000000000069ec         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2c17)
00000000000069f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069f1         db  0x41 ; 'A'
00000000000069f2         db  0x0e ; '.'
00000000000069f3         db  0x10 ; '.'
00000000000069f4         db  0x86 ; '.'
00000000000069f5         db  0x02 ; '.'
00000000000069f6         db  0x41 ; 'A'
00000000000069f7         db  0x0e ; '.'
00000000000069f8         db  0x18 ; '.'
00000000000069f9         db  0x83 ; '.'
00000000000069fa         db  0x03 ; '.'
00000000000069fb         db  0x49 ; 'I'
00000000000069fc         db  0x0e ; '.'
00000000000069fd         db  0x20 ; ' '
00000000000069fe         db  0x6e ; 'n'
00000000000069ff         db  0x0a ; '.'
0000000000006a00         db  0x0e ; '.'
0000000000006a01         db  0x18 ; '.'
0000000000006a02         db  0x41 ; 'A'
0000000000006a03         db  0x0e ; '.'
0000000000006a04         db  0x10 ; '.'
0000000000006a05         db  0x41 ; 'A'
0000000000006a06         db  0x0e ; '.'
0000000000006a07         db  0x08 ; '.'
0000000000006a08         db  0x45 ; 'E'
0000000000006a09         db  0x0b ; '.'
0000000000006a0a         db  0x02 ; '.'
0000000000006a0b         db  0x4a ; 'J'
0000000000006a0c         db  0x0a ; '.'
0000000000006a0d         db  0x0e ; '.'
0000000000006a0e         db  0x18 ; '.'
0000000000006a0f         db  0x41 ; 'A'
0000000000006a10         db  0x0e ; '.'
0000000000006a11         db  0x10 ; '.'
0000000000006a12         db  0x41 ; 'A'
0000000000006a13         db  0x0e ; '.'
0000000000006a14         db  0x08 ; '.'
0000000000006a15         db  0x44 ; 'D'
0000000000006a16         db  0x0b ; '.'
0000000000006a17         db  0x02 ; '.'
0000000000006a18         db  0x54 ; 'T'
0000000000006a19         db  0x0e ; '.'
0000000000006a1a         db  0x18 ; '.'
0000000000006a1b         db  0x41 ; 'A'
0000000000006a1c         db  0x0e ; '.'
0000000000006a1d         db  0x10 ; '.'
0000000000006a1e         db  0x41 ; 'A'
0000000000006a1f         db  0x0e ; '.'
0000000000006a20         db  0x08 ; '.'
0000000000006a21         db  0x00 ; '.'
0000000000006a22         db  0x00 ; '.'
0000000000006a23         db  0x00 ; '.'
0000000000006a24         dd         0x00000074                                  ; Length of the record
0000000000006a28         dd         0x00000360                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006a2c         db         0xf4, 0xc1, 2 dup (0xff)                    ; begin 0x2c20
0000000000006a30         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x3e54)
0000000000006a34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a35         db  0x42 ; 'B'
0000000000006a36         db  0x0e ; '.'
0000000000006a37         db  0x10 ; '.'
0000000000006a38         db  0x8f ; '.'
0000000000006a39         db  0x02 ; '.'
0000000000006a3a         db  0x42 ; 'B'
0000000000006a3b         db  0x0e ; '.'
0000000000006a3c         db  0x18 ; '.'
0000000000006a3d         db  0x8e ; '.'
0000000000006a3e         db  0x03 ; '.'
0000000000006a3f         db  0x45 ; 'E'
0000000000006a40         db  0x0e ; '.'
0000000000006a41         db  0x20 ; ' '
0000000000006a42         db  0x8d ; '.'
0000000000006a43         db  0x04 ; '.'
0000000000006a44         db  0x42 ; 'B'
0000000000006a45         db  0x0e ; '.'
0000000000006a46         db  0x28 ; '('
0000000000006a47         db  0x8c ; '.'
0000000000006a48         db  0x05 ; '.'
0000000000006a49         db  0x44 ; 'D'
0000000000006a4a         db  0x0e ; '.'
0000000000006a4b         db  0x30 ; '0'
0000000000006a4c         db  0x86 ; '.'
0000000000006a4d         db  0x06 ; '.'
0000000000006a4e         db  0x41 ; 'A'
0000000000006a4f         db  0x0e ; '.'
0000000000006a50         db  0x38 ; '8'
0000000000006a51         db  0x83 ; '.'
0000000000006a52         db  0x07 ; '.'
0000000000006a53         db  0x53 ; 'S'
0000000000006a54         db  0x0e ; '.'
0000000000006a55         db  0xf0 ; '.'
0000000000006a56         db  0x01 ; '.'
0000000000006a57         db  0x03 ; '.'
0000000000006a58         db  0x81 ; '.'
0000000000006a59         db  0x0b ; '.'
0000000000006a5a         db  0x0e ; '.'
0000000000006a5b         db  0xf8 ; '.'
0000000000006a5c         db  0x01 ; '.'
0000000000006a5d         db  0x4a ; 'J'
0000000000006a5e         db  0x0e ; '.'
0000000000006a5f         db  0x80 ; '.'
0000000000006a60         db  0x02 ; '.'
0000000000006a61         db  0x44 ; 'D'
0000000000006a62         db  0x0e ; '.'
0000000000006a63         db  0x88 ; '.'
0000000000006a64         db  0x02 ; '.'
0000000000006a65         db  0x45 ; 'E'
0000000000006a66         db  0x0e ; '.'
0000000000006a67         db  0x90 ; '.'
0000000000006a68         db  0x02 ; '.'
0000000000006a69         db  0x5f ; '_'
0000000000006a6a         db  0x0e ; '.'
0000000000006a6b         db  0xf0 ; '.'
0000000000006a6c         db  0x01 ; '.'
0000000000006a6d         db  0x64 ; 'd'
0000000000006a6e         db  0x0a ; '.'
0000000000006a6f         db  0x0e ; '.'
0000000000006a70         db  0x38 ; '8'
0000000000006a71         db  0x41 ; 'A'
0000000000006a72         db  0x0e ; '.'
0000000000006a73         db  0x30 ; '0'
0000000000006a74         db  0x41 ; 'A'
0000000000006a75         db  0x0e ; '.'
0000000000006a76         db  0x28 ; '('
0000000000006a77         db  0x42 ; 'B'
0000000000006a78         db  0x0e ; '.'
0000000000006a79         db  0x20 ; ' '
0000000000006a7a         db  0x42 ; 'B'
0000000000006a7b         db  0x0e ; '.'
0000000000006a7c         db  0x18 ; '.'
0000000000006a7d         db  0x42 ; 'B'
0000000000006a7e         db  0x0e ; '.'
0000000000006a7f         db  0x10 ; '.'
0000000000006a80         db  0x42 ; 'B'
0000000000006a81         db  0x0e ; '.'
0000000000006a82         db  0x08 ; '.'
0000000000006a83         db  0x44 ; 'D'
0000000000006a84         db  0x0b ; '.'
0000000000006a85         db  0x03 ; '.'
0000000000006a86         db  0x99 ; '.'
0000000000006a87         db  0x05 ; '.'
0000000000006a88         db  0x0e ; '.'
0000000000006a89         db  0xf8 ; '.'
0000000000006a8a         db  0x01 ; '.'
0000000000006a8b         db  0x4d ; 'M'
0000000000006a8c         db  0x0e ; '.'
0000000000006a8d         db  0x80 ; '.'
0000000000006a8e         db  0x02 ; '.'
0000000000006a8f         db  0x44 ; 'D'
0000000000006a90         db  0x0e ; '.'
0000000000006a91         db  0x88 ; '.'
0000000000006a92         db  0x02 ; '.'
0000000000006a93         db  0x47 ; 'G'
0000000000006a94         db  0x0e ; '.'
0000000000006a95         db  0x90 ; '.'
0000000000006a96         db  0x02 ; '.'
0000000000006a97         db  0x5b ; '['
0000000000006a98         db  0x0e ; '.'
0000000000006a99         db  0xf0 ; '.'
0000000000006a9a         db  0x01 ; '.'
0000000000006a9b         db  0x00 ; '.'
0000000000006a9c         dd         0x00000068                                  ; Length of the record
0000000000006aa0         dd         0x000003d8                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006aa4         db         0xbc, 0xd3, 2 dup (0xff)                    ; begin 0x3e60
0000000000006aa8         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x400b)
0000000000006aac         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006aad         db  0x42 ; 'B'
0000000000006aae         db  0x0e ; '.'
0000000000006aaf         db  0x10 ; '.'
0000000000006ab0         db  0x8f ; '.'
0000000000006ab1         db  0x02 ; '.'
0000000000006ab2         db  0x42 ; 'B'
0000000000006ab3         db  0x0e ; '.'
0000000000006ab4         db  0x18 ; '.'
0000000000006ab5         db  0x8e ; '.'
0000000000006ab6         db  0x03 ; '.'
0000000000006ab7         db  0x45 ; 'E'
0000000000006ab8         db  0x0e ; '.'
0000000000006ab9         db  0x20 ; ' '
0000000000006aba         db  0x8d ; '.'
0000000000006abb         db  0x04 ; '.'
0000000000006abc         db  0x42 ; 'B'
0000000000006abd         db  0x0e ; '.'
0000000000006abe         db  0x28 ; '('
0000000000006abf         db  0x8c ; '.'
0000000000006ac0         db  0x05 ; '.'
0000000000006ac1         db  0x44 ; 'D'
0000000000006ac2         db  0x0e ; '.'
0000000000006ac3         db  0x30 ; '0'
0000000000006ac4         db  0x86 ; '.'
0000000000006ac5         db  0x06 ; '.'
0000000000006ac6         db  0x41 ; 'A'
0000000000006ac7         db  0x0e ; '.'
0000000000006ac8         db  0x38 ; '8'
0000000000006ac9         db  0x83 ; '.'
0000000000006aca         db  0x07 ; '.'
0000000000006acb         db  0x47 ; 'G'
0000000000006acc         db  0x0e ; '.'
0000000000006acd         db  0x60 ; '`'
0000000000006ace         db  0x02 ; '.'
0000000000006acf         db  0x99 ; '.'
0000000000006ad0         db  0x0e ; '.'
0000000000006ad1         db  0x68 ; 'h'
0000000000006ad2         db  0x5f ; '_'
0000000000006ad3         db  0x0e ; '.'
0000000000006ad4         db  0x70 ; 'p'
0000000000006ad5         db  0x46 ; 'F'
0000000000006ad6         db  0x0e ; '.'
0000000000006ad7         db  0x78 ; 'x'
0000000000006ad8         db  0x42 ; 'B'
0000000000006ad9         db  0x0e ; '.'
0000000000006ada         db  0x80 ; '.'
0000000000006adb         db  0x01 ; '.'
0000000000006adc         db  0x59 ; 'Y'
0000000000006add         db  0x0e ; '.'
0000000000006ade         db  0x60 ; '`'
0000000000006adf         db  0x02 ; '.'
0000000000006ae0         db  0x40 ; '@'
0000000000006ae1         db  0x0e ; '.'
0000000000006ae2         db  0x68 ; 'h'
0000000000006ae3         db  0x4b ; 'K'
0000000000006ae4         db  0x0e ; '.'
0000000000006ae5         db  0x70 ; 'p'
0000000000006ae6         db  0x43 ; 'C'
0000000000006ae7         db  0x0e ; '.'
0000000000006ae8         db  0x78 ; 'x'
0000000000006ae9         db  0x45 ; 'E'
0000000000006aea         db  0x0e ; '.'
0000000000006aeb         db  0x80 ; '.'
0000000000006aec         db  0x01 ; '.'
0000000000006aed         db  0x5e ; '^'
0000000000006aee         db  0x0e ; '.'
0000000000006aef         db  0x60 ; '`'
0000000000006af0         db  0x4c ; 'L'
0000000000006af1         db  0x0a ; '.'
0000000000006af2         db  0x0e ; '.'
0000000000006af3         db  0x38 ; '8'
0000000000006af4         db  0x44 ; 'D'
0000000000006af5         db  0x0e ; '.'
0000000000006af6         db  0x30 ; '0'
0000000000006af7         db  0x41 ; 'A'
0000000000006af8         db  0x0e ; '.'
0000000000006af9         db  0x28 ; '('
0000000000006afa         db  0x42 ; 'B'
0000000000006afb         db  0x0e ; '.'
0000000000006afc         db  0x20 ; ' '
0000000000006afd         db  0x42 ; 'B'
0000000000006afe         db  0x0e ; '.'
0000000000006aff         db  0x18 ; '.'
0000000000006b00         db  0x42 ; 'B'
0000000000006b01         db  0x0e ; '.'
0000000000006b02         db  0x10 ; '.'
0000000000006b03         db  0x42 ; 'B'
0000000000006b04         db  0x0e ; '.'
0000000000006b05         db  0x08 ; '.'
0000000000006b06         db  0x46 ; 'F'
0000000000006b07         db  0x0b ; '.'
0000000000006b08         dd         0x00000028                                  ; Length of the record
0000000000006b0c         dd         0x00000444                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006b10         db         0x00, 0xd5, 2 dup (0xff)                    ; begin 0x4010
0000000000006b14         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4046)
0000000000006b18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b19         db  0x42 ; 'B'
0000000000006b1a         db  0x0e ; '.'
0000000000006b1b         db  0x10 ; '.'
0000000000006b1c         db  0x8c ; '.'
0000000000006b1d         db  0x02 ; '.'
0000000000006b1e         db  0x41 ; 'A'
0000000000006b1f         db  0x0e ; '.'
0000000000006b20         db  0x18 ; '.'
0000000000006b21         db  0x86 ; '.'
0000000000006b22         db  0x03 ; '.'
0000000000006b23         db  0x41 ; 'A'
0000000000006b24         db  0x0e ; '.'
0000000000006b25         db  0x20 ; ' '
0000000000006b26         db  0x83 ; '.'
0000000000006b27         db  0x04 ; '.'
0000000000006b28         db  0x6e ; 'n'
0000000000006b29         db  0x0e ; '.'
0000000000006b2a         db  0x18 ; '.'
0000000000006b2b         db  0x41 ; 'A'
0000000000006b2c         db  0x0e ; '.'
0000000000006b2d         db  0x10 ; '.'
0000000000006b2e         db  0x42 ; 'B'
0000000000006b2f         db  0x0e ; '.'
0000000000006b30         db  0x08 ; '.'
0000000000006b31         db  0x00 ; '.'
0000000000006b32         db  0x00 ; '.'
0000000000006b33         db  0x00 ; '.'
0000000000006b34         dd         0x00000010                                  ; Length of the record
0000000000006b38         dd         0x00000470                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006b3c         db         0x14, 0xd5, 2 dup (0xff)                    ; begin 0x4050
0000000000006b40         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4061)
0000000000006b44         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b45         align      8
0000000000006b48         dd         0x00000010                                  ; Length of the record
0000000000006b4c         dd         0x00000484                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006b50         db         0x20, 0xd5, 2 dup (0xff)                    ; begin 0x4070
0000000000006b54         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4081)
0000000000006b58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b59         align      4
0000000000006b5c         dd         0x00000010                                  ; Length of the record
0000000000006b60         dd         0x00000498                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006b64         db         0x2c, 0xd5, 2 dup (0xff)                    ; begin 0x4090
0000000000006b68         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x40c5)
0000000000006b6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b6d         align      16
0000000000006b70         dd         0x00000010                                  ; Length of the record
0000000000006b74         dd         0x000004ac                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006b78         db         0x58, 0xd5, 2 dup (0xff)                    ; begin 0x40d0
0000000000006b7c         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x40e5)
0000000000006b80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b81         align      4
0000000000006b84         dd         0x00000010                                  ; Length of the record
0000000000006b88         dd         0x000004c0                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006b8c         db         0x64, 0xd5, 2 dup (0xff)                    ; begin 0x40f0
0000000000006b90         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4120)
0000000000006b94         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b95         db  0x6b ; 'k'
0000000000006b96         db  0x0e ; '.'
0000000000006b97         db  0x10 ; '.'
0000000000006b98         dd         0x00000050                                  ; Length of the record
0000000000006b9c         dd         0x000004d4                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006ba0         db         0x80, 0xd5, 2 dup (0xff)                    ; begin 0x4120
0000000000006ba4         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x4194)
0000000000006ba8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ba9         db  0x42 ; 'B'
0000000000006baa         db  0x0e ; '.'
0000000000006bab         db  0x10 ; '.'
0000000000006bac         db  0x8f ; '.'
0000000000006bad         db  0x02 ; '.'
0000000000006bae         db  0x42 ; 'B'
0000000000006baf         db  0x0e ; '.'
0000000000006bb0         db  0x18 ; '.'
0000000000006bb1         db  0x8e ; '.'
0000000000006bb2         db  0x03 ; '.'
0000000000006bb3         db  0x49 ; 'I'
0000000000006bb4         db  0x0e ; '.'
0000000000006bb5         db  0x20 ; ' '
0000000000006bb6         db  0x8d ; '.'
0000000000006bb7         db  0x04 ; '.'
0000000000006bb8         db  0x42 ; 'B'
0000000000006bb9         db  0x0e ; '.'
0000000000006bba         db  0x28 ; '('
0000000000006bbb         db  0x8c ; '.'
0000000000006bbc         db  0x05 ; '.'
0000000000006bbd         db  0x44 ; 'D'
0000000000006bbe         db  0x0e ; '.'
0000000000006bbf         db  0x30 ; '0'
0000000000006bc0         db  0x86 ; '.'
0000000000006bc1         db  0x06 ; '.'
0000000000006bc2         db  0x41 ; 'A'
0000000000006bc3         db  0x0e ; '.'
0000000000006bc4         db  0x38 ; '8'
0000000000006bc5         db  0x83 ; '.'
0000000000006bc6         db  0x07 ; '.'
0000000000006bc7         db  0x4d ; 'M'
0000000000006bc8         db  0x0e ; '.'
0000000000006bc9         db  0x50 ; 'P'
0000000000006bca         db  0x5f ; '_'
0000000000006bcb         db  0x0e ; '.'
0000000000006bcc         db  0x58 ; 'X'
0000000000006bcd         db  0x47 ; 'G'
0000000000006bce         db  0x0e ; '.'
0000000000006bcf         db  0x60 ; '`'
0000000000006bd0         db  0x46 ; 'F'
0000000000006bd1         db  0x0e ; '.'
0000000000006bd2         db  0x68 ; 'h'
0000000000006bd3         db  0x44 ; 'D'
0000000000006bd4         db  0x0e ; '.'
0000000000006bd5         db  0x70 ; 'p'
0000000000006bd6         db  0x58 ; 'X'
0000000000006bd7         db  0x0e ; '.'
0000000000006bd8         db  0x38 ; '8'
0000000000006bd9         db  0x41 ; 'A'
0000000000006bda         db  0x0e ; '.'
0000000000006bdb         db  0x30 ; '0'
0000000000006bdc         db  0x41 ; 'A'
0000000000006bdd         db  0x0e ; '.'
0000000000006bde         db  0x28 ; '('
0000000000006bdf         db  0x42 ; 'B'
0000000000006be0         db  0x0e ; '.'
0000000000006be1         db  0x20 ; ' '
0000000000006be2         db  0x42 ; 'B'
0000000000006be3         db  0x0e ; '.'
0000000000006be4         db  0x18 ; '.'
0000000000006be5         db  0x42 ; 'B'
0000000000006be6         db  0x0e ; '.'
0000000000006be7         db  0x10 ; '.'
0000000000006be8         db  0x42 ; 'B'
0000000000006be9         db  0x0e ; '.'
0000000000006bea         db  0x08 ; '.'
0000000000006beb         db  0x00 ; '.'
0000000000006bec         dd         0x00000068                                  ; Length of the record
0000000000006bf0         dd         0x00000528                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006bf4         db         0xac, 0xd5, 2 dup (0xff)                    ; begin 0x41a0
0000000000006bf8         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x4283)
0000000000006bfc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bfd         db  0x42 ; 'B'
0000000000006bfe         db  0x0e ; '.'
0000000000006bff         db  0x10 ; '.'
0000000000006c00         db  0x8f ; '.'
0000000000006c01         db  0x02 ; '.'
0000000000006c02         db  0x42 ; 'B'
0000000000006c03         db  0x0e ; '.'
0000000000006c04         db  0x18 ; '.'
0000000000006c05         db  0x8e ; '.'
0000000000006c06         db  0x03 ; '.'
0000000000006c07         db  0x49 ; 'I'
0000000000006c08         db  0x0e ; '.'
0000000000006c09         db  0x20 ; ' '
0000000000006c0a         db  0x8d ; '.'
0000000000006c0b         db  0x04 ; '.'
0000000000006c0c         db  0x42 ; 'B'
0000000000006c0d         db  0x0e ; '.'
0000000000006c0e         db  0x28 ; '('
0000000000006c0f         db  0x8c ; '.'
0000000000006c10         db  0x05 ; '.'
0000000000006c11         db  0x44 ; 'D'
0000000000006c12         db  0x0e ; '.'
0000000000006c13         db  0x30 ; '0'
0000000000006c14         db  0x86 ; '.'
0000000000006c15         db  0x06 ; '.'
0000000000006c16         db  0x41 ; 'A'
0000000000006c17         db  0x0e ; '.'
0000000000006c18         db  0x38 ; '8'
0000000000006c19         db  0x83 ; '.'
0000000000006c1a         db  0x07 ; '.'
0000000000006c1b         db  0x4d ; 'M'
0000000000006c1c         db  0x0e ; '.'
0000000000006c1d         db  0x70 ; 'p'
0000000000006c1e         db  0x65 ; 'e'
0000000000006c1f         db  0x0e ; '.'
0000000000006c20         db  0x78 ; 'x'
0000000000006c21         db  0x4d ; 'M'
0000000000006c22         db  0x0e ; '.'
0000000000006c23         db  0x80 ; '.'
0000000000006c24         db  0x01 ; '.'
0000000000006c25         db  0x46 ; 'F'
0000000000006c26         db  0x0e ; '.'
0000000000006c27         db  0x88 ; '.'
0000000000006c28         db  0x01 ; '.'
0000000000006c29         db  0x42 ; 'B'
0000000000006c2a         db  0x0e ; '.'
0000000000006c2b         db  0x90 ; '.'
0000000000006c2c         db  0x01 ; '.'
0000000000006c2d         db  0x5e ; '^'
0000000000006c2e         db  0x0e ; '.'
0000000000006c2f         db  0x70 ; 'p'
0000000000006c30         db  0x56 ; 'V'
0000000000006c31         db  0x0e ; '.'
0000000000006c32         db  0x78 ; 'x'
0000000000006c33         db  0x43 ; 'C'
0000000000006c34         db  0x0e ; '.'
0000000000006c35         db  0x80 ; '.'
0000000000006c36         db  0x01 ; '.'
0000000000006c37         db  0x43 ; 'C'
0000000000006c38         db  0x0e ; '.'
0000000000006c39         db  0x88 ; '.'
0000000000006c3a         db  0x01 ; '.'
0000000000006c3b         db  0x56 ; 'V'
0000000000006c3c         db  0x0e ; '.'
0000000000006c3d         db  0x90 ; '.'
0000000000006c3e         db  0x01 ; '.'
0000000000006c3f         db  0x52 ; 'R'
0000000000006c40         db  0x0e ; '.'
0000000000006c41         db  0x70 ; 'p'
0000000000006c42         db  0x5b ; '['
0000000000006c43         db  0x0e ; '.'
0000000000006c44         db  0x38 ; '8'
0000000000006c45         db  0x41 ; 'A'
0000000000006c46         db  0x0e ; '.'
0000000000006c47         db  0x30 ; '0'
0000000000006c48         db  0x41 ; 'A'
0000000000006c49         db  0x0e ; '.'
0000000000006c4a         db  0x28 ; '('
0000000000006c4b         db  0x42 ; 'B'
0000000000006c4c         db  0x0e ; '.'
0000000000006c4d         db  0x20 ; ' '
0000000000006c4e         db  0x42 ; 'B'
0000000000006c4f         db  0x0e ; '.'
0000000000006c50         db  0x18 ; '.'
0000000000006c51         db  0x42 ; 'B'
0000000000006c52         db  0x0e ; '.'
0000000000006c53         db  0x10 ; '.'
0000000000006c54         db  0x42 ; 'B'
0000000000006c55         db  0x0e ; '.'
0000000000006c56         db  0x08 ; '.'
0000000000006c57         db  0x00 ; '.'
0000000000006c58         dd         0x00000010                                  ; Length of the record
0000000000006c5c         dd         0x00000594                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006c60         db         0x30, 0xd6, 2 dup (0xff)                    ; begin 0x4290
0000000000006c64         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x429a)
0000000000006c68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c69         align      4
0000000000006c6c         dd         0x00000028                                  ; Length of the record
0000000000006c70         dd         0x000005a8                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006c74         db         0x2c, 0xd6, 2 dup (0xff)                    ; begin 0x42a0
0000000000006c78         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x4333)
0000000000006c7c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c7d         db  0x48 ; 'H'
0000000000006c7e         db  0x0e ; '.'
0000000000006c7f         db  0x10 ; '.'
0000000000006c80         db  0x8c ; '.'
0000000000006c81         db  0x02 ; '.'
0000000000006c82         db  0x48 ; 'H'
0000000000006c83         db  0x0e ; '.'
0000000000006c84         db  0x18 ; '.'
0000000000006c85         db  0x86 ; '.'
0000000000006c86         db  0x03 ; '.'
0000000000006c87         db  0x41 ; 'A'
0000000000006c88         db  0x0e ; '.'
0000000000006c89         db  0x20 ; ' '
0000000000006c8a         db  0x83 ; '.'
0000000000006c8b         db  0x04 ; '.'
0000000000006c8c         db  0x02 ; '.'
0000000000006c8d         db  0x74 ; 't'
0000000000006c8e         db  0x0e ; '.'
0000000000006c8f         db  0x18 ; '.'
0000000000006c90         db  0x4b ; 'K'
0000000000006c91         db  0x0e ; '.'
0000000000006c92         db  0x10 ; '.'
0000000000006c93         db  0x42 ; 'B'
0000000000006c94         db  0x0e ; '.'
0000000000006c95         db  0x08 ; '.'
0000000000006c96         db  0x00 ; '.'
0000000000006c97         db  0x00 ; '.'
0000000000006c98         dd         0x00000010                                  ; Length of the record
0000000000006c9c         dd         0x000005d4                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006ca0         db         0xa0, 0xd6, 2 dup (0xff)                    ; begin 0x4340
0000000000006ca4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4353)
0000000000006ca8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ca9         align      4
0000000000006cac         dd         0x00000010                                  ; Length of the record
0000000000006cb0         dd         0x000005e8                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006cb4         db         0xac, 0xd6, 2 dup (0xff)                    ; begin 0x4360
0000000000006cb8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x436c)
0000000000006cbc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006cbd         align      64
0000000000006cc0         dd         0x00000010                                  ; Length of the record
0000000000006cc4         dd         0x000005fc                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006cc8         db         0xa8, 0xd6, 2 dup (0xff)                    ; begin 0x4370
0000000000006ccc         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4388)
0000000000006cd0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006cd1         align      4
0000000000006cd4         dd         0x00000010                                  ; Length of the record
0000000000006cd8         dd         0x00000610                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006cdc         db         0xb4, 0xd6, 2 dup (0xff)                    ; begin 0x4390
0000000000006ce0         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x43a4)
0000000000006ce4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ce5         align      8
0000000000006ce8         dd         0x00000018                                  ; Length of the record
0000000000006cec         dd         0x00000624                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006cf0         db         0xc0, 0xd6, 2 dup (0xff)                    ; begin 0x43b0
0000000000006cf4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x443e)
0000000000006cf8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006cf9         db  0x44 ; 'D'
0000000000006cfa         db  0x0e ; '.'
0000000000006cfb         db  0x50 ; 'P'
0000000000006cfc         db  0x02 ; '.'
0000000000006cfd         db  0x7f ; '.'
0000000000006cfe         db  0x0a ; '.'
0000000000006cff         db  0x0e ; '.'
0000000000006d00         db  0x08 ; '.'
0000000000006d01         db  0x41 ; 'A'
0000000000006d02         db  0x0b ; '.'
0000000000006d03         db  0x00 ; '.'
0000000000006d04         dd         0x00000018                                  ; Length of the record
0000000000006d08         dd         0x00000640                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006d0c         db         0x34, 0xd7, 2 dup (0xff)                    ; begin 0x4440
0000000000006d10         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x44ca)
0000000000006d14         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d15         db  0x44 ; 'D'
0000000000006d16         db  0x0e ; '.'
0000000000006d17         db  0x50 ; 'P'
0000000000006d18         db  0x02 ; '.'
0000000000006d19         db  0x7b ; '{'
0000000000006d1a         db  0x0a ; '.'
0000000000006d1b         db  0x0e ; '.'
0000000000006d1c         db  0x08 ; '.'
0000000000006d1d         db  0x41 ; 'A'
0000000000006d1e         db  0x0b ; '.'
0000000000006d1f         db  0x00 ; '.'
0000000000006d20         dd         0x00000010                                  ; Length of the record
0000000000006d24         dd         0x0000065c                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006d28         db         0xa8, 0xd7, 2 dup (0xff)                    ; begin 0x44d0
0000000000006d2c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x44dc)
0000000000006d30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d31         align      4
0000000000006d34         dd         0x00000010                                  ; Length of the record
0000000000006d38         dd         0x00000670                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006d3c         db         0xa4, 0xd7, 2 dup (0xff)                    ; begin 0x44e0
0000000000006d40         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x44ef)
0000000000006d44         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d45         align      8
0000000000006d48         dd         0x00000018                                  ; Length of the record
0000000000006d4c         dd         0x00000684                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006d50         db         0xa0, 0xd7, 2 dup (0xff)                    ; begin 0x44f0
0000000000006d54         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x4588)
0000000000006d58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d59         db  0x44 ; 'D'
0000000000006d5a         db  0x0e ; '.'
0000000000006d5b         db  0x50 ; 'P'
0000000000006d5c         db  0x02 ; '.'
0000000000006d5d         db  0x8e ; '.'
0000000000006d5e         db  0x0a ; '.'
0000000000006d5f         db  0x0e ; '.'
0000000000006d60         db  0x08 ; '.'
0000000000006d61         db  0x41 ; 'A'
0000000000006d62         db  0x0b ; '.'
0000000000006d63         db  0x00 ; '.'
0000000000006d64         dd         0x00000010                                  ; Length of the record
0000000000006d68         dd         0x000006a0                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006d6c         db         0x24, 0xd8, 2 dup (0xff)                    ; begin 0x4590
0000000000006d70         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x45a0)
0000000000006d74         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d75         align      8
0000000000006d78         dd         0x00000010                                  ; Length of the record
0000000000006d7c         dd         0x000006b4                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006d80         db         0x20, 0xd8, 2 dup (0xff)                    ; begin 0x45a0
0000000000006d84         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x45b1)
0000000000006d88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d89         align      4
0000000000006d8c         dd         0x00000010                                  ; Length of the record
0000000000006d90         dd         0x000006c8                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006d94         db         0x2c, 0xd8, 2 dup (0xff)                    ; begin 0x45c0
0000000000006d98         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x45ca)
0000000000006d9c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d9d         align      32
0000000000006da0         dd         0x00000018                                  ; Length of the record
0000000000006da4         dd         0x000006dc                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006da8         db         0x28, 0xd8, 2 dup (0xff)                    ; begin 0x45d0
0000000000006dac         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x465e)
0000000000006db0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006db1         db  0x44 ; 'D'
0000000000006db2         db  0x0e ; '.'
0000000000006db3         db  0x50 ; 'P'
0000000000006db4         db  0x02 ; '.'
0000000000006db5         db  0x7f ; '.'
0000000000006db6         db  0x0a ; '.'
0000000000006db7         db  0x0e ; '.'
0000000000006db8         db  0x08 ; '.'
0000000000006db9         db  0x41 ; 'A'
0000000000006dba         db  0x0b ; '.'
0000000000006dbb         db  0x00 ; '.'
0000000000006dbc         dd         0x00000018                                  ; Length of the record
0000000000006dc0         dd         0x000006f8                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006dc4         db         0x9c, 0xd8, 2 dup (0xff)                    ; begin 0x4660
0000000000006dc8         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x46f1)
0000000000006dcc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006dcd         db  0x44 ; 'D'
0000000000006dce         db  0x0e ; '.'
0000000000006dcf         db  0x50 ; 'P'
0000000000006dd0         db  0x02 ; '.'
0000000000006dd1         db  0x82 ; '.'
0000000000006dd2         db  0x0a ; '.'
0000000000006dd3         db  0x0e ; '.'
0000000000006dd4         db  0x08 ; '.'
0000000000006dd5         db  0x41 ; 'A'
0000000000006dd6         db  0x0b ; '.'
0000000000006dd7         db  0x00 ; '.'
0000000000006dd8         dd         0x00000010                                  ; Length of the record
0000000000006ddc         dd         0x00000714                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006de0         db         0x20, 0xd9, 2 dup (0xff)                    ; begin 0x4700
0000000000006de4         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x470c)
0000000000006de8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006de9         align      4
0000000000006dec         dd         0x00000010                                  ; Length of the record
0000000000006df0         dd         0x00000728                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006df4         db         0x1c, 0xd9, 2 dup (0xff)                    ; begin 0x4710
0000000000006df8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4727)
0000000000006dfc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006dfd         align      512
0000000000006e00         dd         0x00000010                                  ; Length of the record
0000000000006e04         dd         0x0000073c                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006e08         db         0x28, 0xd9, 2 dup (0xff)                    ; begin 0x4730
0000000000006e0c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4743)
0000000000006e10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e11         align      4
0000000000006e14         dd         0x00000010                                  ; Length of the record
0000000000006e18         dd         0x00000750                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006e1c         db         0x34, 0xd9, 2 dup (0xff)                    ; begin 0x4750
0000000000006e20         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x475c)
0000000000006e24         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e25         align      8
0000000000006e28         dd         0x00000010                                  ; Length of the record
0000000000006e2c         dd         0x00000764                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006e30         db         0x30, 0xd9, 2 dup (0xff)                    ; begin 0x4760
0000000000006e34         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4774)
0000000000006e38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e39         align      4
0000000000006e3c         dd         0x00000010                                  ; Length of the record
0000000000006e40         dd         0x00000778                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006e44         db         0x3c, 0xd9, 2 dup (0xff)                    ; begin 0x4780
0000000000006e48         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4793)
0000000000006e4c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e4d         align      16
0000000000006e50         dd         0x00000014                                  ; Length of the record
0000000000006e54         dd         0x0000078c                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006e58         db         0x48, 0xd9, 2 dup (0xff)                    ; begin 0x47a0
0000000000006e5c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x47b8)
0000000000006e60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e61         align      8
0000000000006e68         dd         0x00000110                                  ; Length of the record
0000000000006e6c         dd         0x000007a4                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006e70         db         0x50, 0xd9, 2 dup (0xff)                    ; begin 0x47c0
0000000000006e74         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x4bd7)
0000000000006e78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e79         db  0x42 ; 'B'
0000000000006e7a         db  0x0e ; '.'
0000000000006e7b         db  0x10 ; '.'
0000000000006e7c         db  0x8f ; '.'
0000000000006e7d         db  0x02 ; '.'
0000000000006e7e         db  0x42 ; 'B'
0000000000006e7f         db  0x0e ; '.'
0000000000006e80         db  0x18 ; '.'
0000000000006e81         db  0x8e ; '.'
0000000000006e82         db  0x03 ; '.'
0000000000006e83         db  0x42 ; 'B'
0000000000006e84         db  0x0e ; '.'
0000000000006e85         db  0x20 ; ' '
0000000000006e86         db  0x8d ; '.'
0000000000006e87         db  0x04 ; '.'
0000000000006e88         db  0x42 ; 'B'
0000000000006e89         db  0x0e ; '.'
0000000000006e8a         db  0x28 ; '('
0000000000006e8b         db  0x8c ; '.'
0000000000006e8c         db  0x05 ; '.'
0000000000006e8d         db  0x44 ; 'D'
0000000000006e8e         db  0x0e ; '.'
0000000000006e8f         db  0x30 ; '0'
0000000000006e90         db  0x86 ; '.'
0000000000006e91         db  0x06 ; '.'
0000000000006e92         db  0x41 ; 'A'
0000000000006e93         db  0x0e ; '.'
0000000000006e94         db  0x38 ; '8'
0000000000006e95         db  0x83 ; '.'
0000000000006e96         db  0x07 ; '.'
0000000000006e97         db  0x4a ; 'J'
0000000000006e98         db  0x0e ; '.'
0000000000006e99         db  0x60 ; '`'
0000000000006e9a         db  0x02 ; '.'
0000000000006e9b         db  0xdd ; '.'
0000000000006e9c         db  0x0e ; '.'
0000000000006e9d         db  0x68 ; 'h'
0000000000006e9e         db  0x57 ; 'W'
0000000000006e9f         db  0x0e ; '.'
0000000000006ea0         db  0x70 ; 'p'
0000000000006ea1         db  0x42 ; 'B'
0000000000006ea2         db  0x0e ; '.'
0000000000006ea3         db  0x78 ; 'x'
0000000000006ea4         db  0x42 ; 'B'
0000000000006ea5         db  0x0e ; '.'
0000000000006ea6         db  0x80 ; '.'
0000000000006ea7         db  0x01 ; '.'
0000000000006ea8         db  0x42 ; 'B'
0000000000006ea9         db  0x0e ; '.'
0000000000006eaa         db  0x88 ; '.'
0000000000006eab         db  0x01 ; '.'
0000000000006eac         db  0x42 ; 'B'
0000000000006ead         db  0x0e ; '.'
0000000000006eae         db  0x90 ; '.'
0000000000006eaf         db  0x01 ; '.'
0000000000006eb0         db  0x53 ; 'S'
0000000000006eb1         db  0x0e ; '.'
0000000000006eb2         db  0x60 ; '`'
0000000000006eb3         db  0x44 ; 'D'
0000000000006eb4         db  0x0a ; '.'
0000000000006eb5         db  0x0e ; '.'
0000000000006eb6         db  0x38 ; '8'
0000000000006eb7         db  0x41 ; 'A'
0000000000006eb8         db  0x0e ; '.'
0000000000006eb9         db  0x30 ; '0'
0000000000006eba         db  0x41 ; 'A'
0000000000006ebb         db  0x0e ; '.'
0000000000006ebc         db  0x28 ; '('
0000000000006ebd         db  0x42 ; 'B'
0000000000006ebe         db  0x0e ; '.'
0000000000006ebf         db  0x20 ; ' '
0000000000006ec0         db  0x42 ; 'B'
0000000000006ec1         db  0x0e ; '.'
0000000000006ec2         db  0x18 ; '.'
0000000000006ec3         db  0x42 ; 'B'
0000000000006ec4         db  0x0e ; '.'
0000000000006ec5         db  0x10 ; '.'
0000000000006ec6         db  0x42 ; 'B'
0000000000006ec7         db  0x0e ; '.'
0000000000006ec8         db  0x08 ; '.'
0000000000006ec9         db  0x44 ; 'D'
0000000000006eca         db  0x0b ; '.'
0000000000006ecb         db  0x02 ; '.'
0000000000006ecc         db  0x78 ; 'x'
0000000000006ecd         db  0x0a ; '.'
0000000000006ece         db  0x0e ; '.'
0000000000006ecf         db  0x68 ; 'h'
0000000000006ed0         db  0x48 ; 'H'
0000000000006ed1         db  0x0b ; '.'
0000000000006ed2         db  0x5a ; 'Z'
0000000000006ed3         db  0x0a ; '.'
0000000000006ed4         db  0x0e ; '.'
0000000000006ed5         db  0x38 ; '8'
0000000000006ed6         db  0x47 ; 'G'
0000000000006ed7         db  0x0e ; '.'
0000000000006ed8         db  0x30 ; '0'
0000000000006ed9         db  0x41 ; 'A'
0000000000006eda         db  0x0e ; '.'
0000000000006edb         db  0x28 ; '('
0000000000006edc         db  0x42 ; 'B'
0000000000006edd         db  0x0e ; '.'
0000000000006ede         db  0x20 ; ' '
0000000000006edf         db  0x42 ; 'B'
0000000000006ee0         db  0x0e ; '.'
0000000000006ee1         db  0x18 ; '.'
0000000000006ee2         db  0x42 ; 'B'
0000000000006ee3         db  0x0e ; '.'
0000000000006ee4         db  0x10 ; '.'
0000000000006ee5         db  0x42 ; 'B'
0000000000006ee6         db  0x0e ; '.'
0000000000006ee7         db  0x08 ; '.'
0000000000006ee8         db  0x56 ; 'V'
0000000000006ee9         db  0x0b ; '.'
0000000000006eea         db  0x5e ; '^'
0000000000006eeb         db  0x0a ; '.'
0000000000006eec         db  0x0e ; '.'
0000000000006eed         db  0x38 ; '8'
0000000000006eee         db  0x52 ; 'R'
0000000000006eef         db  0x0e ; '.'
0000000000006ef0         db  0x30 ; '0'
0000000000006ef1         db  0x41 ; 'A'
0000000000006ef2         db  0x0e ; '.'
0000000000006ef3         db  0x28 ; '('
0000000000006ef4         db  0x42 ; 'B'
0000000000006ef5         db  0x0e ; '.'
0000000000006ef6         db  0x20 ; ' '
0000000000006ef7         db  0x42 ; 'B'
0000000000006ef8         db  0x0e ; '.'
0000000000006ef9         db  0x18 ; '.'
0000000000006efa         db  0x42 ; 'B'
0000000000006efb         db  0x0e ; '.'
0000000000006efc         db  0x10 ; '.'
0000000000006efd         db  0x42 ; 'B'
0000000000006efe         db  0x0e ; '.'
0000000000006eff         db  0x08 ; '.'
0000000000006f00         db  0x4f ; 'O'
0000000000006f01         db  0x0b ; '.'
0000000000006f02         db  0x62 ; 'b'
0000000000006f03         db  0x0a ; '.'
0000000000006f04         db  0x0e ; '.'
0000000000006f05         db  0x38 ; '8'
0000000000006f06         db  0x50 ; 'P'
0000000000006f07         db  0x0e ; '.'
0000000000006f08         db  0x30 ; '0'
0000000000006f09         db  0x41 ; 'A'
0000000000006f0a         db  0x0e ; '.'
0000000000006f0b         db  0x28 ; '('
0000000000006f0c         db  0x42 ; 'B'
0000000000006f0d         db  0x0e ; '.'
0000000000006f0e         db  0x20 ; ' '
0000000000006f0f         db  0x42 ; 'B'
0000000000006f10         db  0x0e ; '.'
0000000000006f11         db  0x18 ; '.'
0000000000006f12         db  0x42 ; 'B'
0000000000006f13         db  0x0e ; '.'
0000000000006f14         db  0x10 ; '.'
0000000000006f15         db  0x42 ; 'B'
0000000000006f16         db  0x0e ; '.'
0000000000006f17         db  0x08 ; '.'
0000000000006f18         db  0x55 ; 'U'
0000000000006f19         db  0x0b ; '.'
0000000000006f1a         db  0x66 ; 'f'
0000000000006f1b         db  0x0e ; '.'
0000000000006f1c         db  0x68 ; 'h'
0000000000006f1d         db  0x42 ; 'B'
0000000000006f1e         db  0x0e ; '.'
0000000000006f1f         db  0x70 ; 'p'
0000000000006f20         db  0x5c ; '\'
0000000000006f21         db  0x0e ; '.'
0000000000006f22         db  0x68 ; 'h'
0000000000006f23         db  0x41 ; 'A'
0000000000006f24         db  0x0e ; '.'
0000000000006f25         db  0x60 ; '`'
0000000000006f26         db  0x44 ; 'D'
0000000000006f27         db  0x0a ; '.'
0000000000006f28         db  0x0e ; '.'
0000000000006f29         db  0x38 ; '8'
0000000000006f2a         db  0x41 ; 'A'
0000000000006f2b         db  0x0e ; '.'
0000000000006f2c         db  0x30 ; '0'
0000000000006f2d         db  0x41 ; 'A'
0000000000006f2e         db  0x0e ; '.'
0000000000006f2f         db  0x28 ; '('
0000000000006f30         db  0x42 ; 'B'
0000000000006f31         db  0x0e ; '.'
0000000000006f32         db  0x20 ; ' '
0000000000006f33         db  0x42 ; 'B'
0000000000006f34         db  0x0e ; '.'
0000000000006f35         db  0x18 ; '.'
0000000000006f36         db  0x42 ; 'B'
0000000000006f37         db  0x0e ; '.'
0000000000006f38         db  0x10 ; '.'
0000000000006f39         db  0x42 ; 'B'
0000000000006f3a         db  0x0e ; '.'
0000000000006f3b         db  0x08 ; '.'
0000000000006f3c         db  0x45 ; 'E'
0000000000006f3d         db  0x0b ; '.'
0000000000006f3e         db  0x68 ; 'h'
0000000000006f3f         db  0x0a ; '.'
0000000000006f40         db  0x0e ; '.'
0000000000006f41         db  0x68 ; 'h'
0000000000006f42         db  0x48 ; 'H'
0000000000006f43         db  0x0b ; '.'
0000000000006f44         db  0x72 ; 'r'
0000000000006f45         db  0x0e ; '.'
0000000000006f46         db  0x68 ; 'h'
0000000000006f47         db  0x45 ; 'E'
0000000000006f48         db  0x0e ; '.'
0000000000006f49         db  0x70 ; 'p'
0000000000006f4a         db  0x42 ; 'B'
0000000000006f4b         db  0x0e ; '.'
0000000000006f4c         db  0x78 ; 'x'
0000000000006f4d         db  0x42 ; 'B'
0000000000006f4e         db  0x0e ; '.'
0000000000006f4f         db  0x80 ; '.'
0000000000006f50         db  0x01 ; '.'
0000000000006f51         db  0x5e ; '^'
0000000000006f52         db  0x0e ; '.'
0000000000006f53         db  0x60 ; '`'
0000000000006f54         db  0x44 ; 'D'
0000000000006f55         db  0x0a ; '.'
0000000000006f56         db  0x0e ; '.'
0000000000006f57         db  0x38 ; '8'
0000000000006f58         db  0x41 ; 'A'
0000000000006f59         db  0x0e ; '.'
0000000000006f5a         db  0x30 ; '0'
0000000000006f5b         db  0x41 ; 'A'
0000000000006f5c         db  0x0e ; '.'
0000000000006f5d         db  0x28 ; '('
0000000000006f5e         db  0x42 ; 'B'
0000000000006f5f         db  0x0e ; '.'
0000000000006f60         db  0x20 ; ' '
0000000000006f61         db  0x42 ; 'B'
0000000000006f62         db  0x0e ; '.'
0000000000006f63         db  0x18 ; '.'
0000000000006f64         db  0x42 ; 'B'
0000000000006f65         db  0x0e ; '.'
0000000000006f66         db  0x10 ; '.'
0000000000006f67         db  0x42 ; 'B'
0000000000006f68         db  0x0e ; '.'
0000000000006f69         db  0x08 ; '.'
0000000000006f6a         db  0x41 ; 'A'
0000000000006f6b         db  0x0b ; '.'
0000000000006f6c         db  0x79 ; 'y'
0000000000006f6d         db  0x0a ; '.'
0000000000006f6e         db  0x0e ; '.'
0000000000006f6f         db  0x68 ; 'h'
0000000000006f70         db  0x42 ; 'B'
0000000000006f71         db  0x0e ; '.'
0000000000006f72         db  0x70 ; 'p'
0000000000006f73         db  0x42 ; 'B'
0000000000006f74         db  0x0e ; '.'
0000000000006f75         db  0x78 ; 'x'
0000000000006f76         db  0x42 ; 'B'
0000000000006f77         db  0x0e ; '.'
0000000000006f78         db  0x80 ; '.'
0000000000006f79         db  0x01 ; '.'
0000000000006f7a         db  0x51 ; 'Q'
0000000000006f7b         db  0x0b ; '.'
0000000000006f7c         dd         0x00000010                                  ; Length of the record
0000000000006f80         dd         0x000008b8                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006f84         db         0x5c, 0xdc, 2 dup (0xff)                    ; begin 0x4be0
0000000000006f88         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x4c00)
0000000000006f8c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f8d         align      16
0000000000006f90         dd         0x00000018                                  ; Length of the record
0000000000006f94         dd         0x000008cc                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006f98         db         0x68, 0xdc, 2 dup (0xff)                    ; begin 0x4c00
0000000000006f9c         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x4c78)
0000000000006fa0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fa1         db  0x44 ; 'D'
0000000000006fa2         db  0x0e ; '.'
0000000000006fa3         db  0x70 ; 'p'
0000000000006fa4         db  0x02 ; '.'
0000000000006fa5         db  0x60 ; '`'
0000000000006fa6         db  0x0a ; '.'
0000000000006fa7         db  0x0e ; '.'
0000000000006fa8         db  0x08 ; '.'
0000000000006fa9         db  0x41 ; 'A'
0000000000006faa         db  0x0b ; '.'
0000000000006fab         db  0x00 ; '.'
0000000000006fac         dd         0x00000028                                  ; Length of the record
0000000000006fb0         dd         0x000008e8                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006fb4         db         0xcc, 0xdc, 2 dup (0xff)                    ; begin 0x4c80
0000000000006fb8         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x4d55)
0000000000006fbc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fbd         db  0x41 ; 'A'
0000000000006fbe         db  0x0e ; '.'
0000000000006fbf         db  0x10 ; '.'
0000000000006fc0         db  0x86 ; '.'
0000000000006fc1         db  0x02 ; '.'
0000000000006fc2         db  0x41 ; 'A'
0000000000006fc3         db  0x0e ; '.'
0000000000006fc4         db  0x18 ; '.'
0000000000006fc5         db  0x83 ; '.'
0000000000006fc6         db  0x03 ; '.'
0000000000006fc7         db  0x50 ; 'P'
0000000000006fc8         db  0x0e ; '.'
0000000000006fc9         db  0xd0 ; '.'
0000000000006fca         db  0x01 ; '.'
0000000000006fcb         db  0x02 ; '.'
0000000000006fcc         db  0xab ; '.'
0000000000006fcd         db  0x0a ; '.'
0000000000006fce         db  0x0e ; '.'
0000000000006fcf         db  0x18 ; '.'
0000000000006fd0         db  0x41 ; 'A'
0000000000006fd1         db  0x0e ; '.'
0000000000006fd2         db  0x10 ; '.'
0000000000006fd3         db  0x41 ; 'A'
0000000000006fd4         db  0x0e ; '.'
0000000000006fd5         db  0x08 ; '.'
0000000000006fd6         db  0x41 ; 'A'
0000000000006fd7         db  0x0b ; '.'
0000000000006fd8         dd         0x0000001c                                  ; Length of the record
0000000000006fdc         dd         0x00000914                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000006fe0         db         0x80, 0xdd, 2 dup (0xff)                    ; begin 0x4d60
0000000000006fe4         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x4de0)
0000000000006fe8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fe9         db  0x41 ; 'A'
0000000000006fea         db  0x0e ; '.'
0000000000006feb         db  0x10 ; '.'
0000000000006fec         db  0x83 ; '.'
0000000000006fed         db  0x02 ; '.'
0000000000006fee         db  0x02 ; '.'
0000000000006fef         db  0x7a ; 'z'
0000000000006ff0         db  0x0e ; '.'
0000000000006ff1         db  0x08 ; '.'
0000000000006ff2         db  0x00 ; '.'
0000000000006ff3         db  0x00 ; '.'
0000000000006ff4         db  0x00 ; '.'
0000000000006ff5         db  0x00 ; '.'
0000000000006ff6         db  0x00 ; '.'
0000000000006ff7         db  0x00 ; '.'
0000000000006ff8         dd         0x00000018                                  ; Length of the record
0000000000006ffc         dd         0x00000934                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000007000         db         0xe0, 0xdd, 2 dup (0xff)                    ; begin 0x4de0
0000000000007004         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x4dfa)
0000000000007008         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007009         db  0x41 ; 'A'
000000000000700a         db  0x0e ; '.'
000000000000700b         db  0x10 ; '.'
000000000000700c         db  0x83 ; '.'
000000000000700d         db  0x02 ; '.'
000000000000700e         db  0x53 ; 'S'
000000000000700f         db  0x0a ; '.'
0000000000007010         db  0x0e ; '.'
0000000000007011         db  0x08 ; '.'
0000000000007012         db  0x41 ; 'A'
0000000000007013         db  0x0b ; '.'
0000000000007014         dd         0x00000010                                  ; Length of the record
0000000000007018         dd         0x00000950                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
000000000000701c         db         0xe4, 0xdd, 2 dup (0xff)                    ; begin 0x4e00
0000000000007020         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4e24)
0000000000007024         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007025         db  0x5f ; '_'
0000000000007026         db  0x0e ; '.'
0000000000007027         db  0x10 ; '.'
0000000000007028         dd         0x00000010                                  ; Length of the record
000000000000702c         dd         0x00000964                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000007030         db         0x00, 0xde, 2 dup (0xff)                    ; begin 0x4e30
0000000000007034         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x4e32)
0000000000007038         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007039         align      4
000000000000703c         dd         0x00000020                                  ; Length of the record
0000000000007040         dd         0x00000978                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000007044         db         0xfc, 0xdd, 2 dup (0xff)                    ; begin 0x4e40
0000000000007048         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4e76)
000000000000704c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000704d         db  0x44 ; 'D'
000000000000704e         db  0x0e ; '.'
000000000000704f         db  0x10 ; '.'
0000000000007050         db  0x83 ; '.'
0000000000007051         db  0x02 ; '.'
0000000000007052         db  0x5d ; ']'
0000000000007053         db  0x0a ; '.'
0000000000007054         db  0x0e ; '.'
0000000000007055         db  0x08 ; '.'
0000000000007056         db  0x47 ; 'G'
0000000000007057         db  0x0b ; '.'
0000000000007058         db  0x48 ; 'H'
0000000000007059         db  0x0a ; '.'
000000000000705a         db  0x0e ; '.'
000000000000705b         db  0x08 ; '.'
000000000000705c         db  0x41 ; 'A'
000000000000705d         db  0x0b ; '.'
000000000000705e         db  0x00 ; '.'
000000000000705f         db  0x00 ; '.'
0000000000007060         dd         0x00000010                                  ; Length of the record
0000000000007064         dd         0x0000099c                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000007068         db         0x18, 0xde, 2 dup (0xff)                    ; begin 0x4e80
000000000000706c         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4ea4)
0000000000007070         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007071         db  0x5f ; '_'
0000000000007072         db  0x0e ; '.'
0000000000007073         db  0x10 ; '.'
0000000000007074         dd         0x00000014                                  ; Length of the record
0000000000007078         dd         0x000009b0                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
000000000000707c         db         0x34, 0xde, 2 dup (0xff)                    ; begin 0x4eb0
0000000000007080         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x4f32)
0000000000007084         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007085         db  0x02 ; '.'
0000000000007086         db  0x5f ; '_'
0000000000007087         db  0x0e ; '.'
0000000000007088         db  0x10 ; '.'
0000000000007089         db  0x49 ; 'I'
000000000000708a         db  0x0e ; '.'
000000000000708b         db  0x08 ; '.'
000000000000708c         dd         0x00000014                                  ; Length of the record
0000000000007090         dd         0x000009c8                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000007094         db         0xac, 0xde, 2 dup (0xff)                    ; begin 0x4f40
0000000000007098         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x4f8a)
000000000000709c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000709d         db  0x02 ; '.'
000000000000709e         db  0x45 ; 'E'
000000000000709f         db  0x0e ; '.'
00000000000070a0         db  0x10 ; '.'
00000000000070a1         db  0x00 ; '.'
00000000000070a2         db  0x00 ; '.'
00000000000070a3         db  0x00 ; '.'
00000000000070a4         dd         0x00000018                                  ; Length of the record
00000000000070a8         dd         0x000009e0                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
00000000000070ac         db         0xe4, 0xde, 2 dup (0xff)                    ; begin 0x4f90
00000000000070b0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4fa7)
00000000000070b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070b5         db  0x41 ; 'A'
00000000000070b6         db  0x0e ; '.'
00000000000070b7         db  0x10 ; '.'
00000000000070b8         db  0x83 ; '.'
00000000000070b9         db  0x02 ; '.'
00000000000070ba         db  0x51 ; 'Q'
00000000000070bb         db  0x0e ; '.'
00000000000070bc         db  0x08 ; '.'
00000000000070bd         db  0x00 ; '.'
00000000000070be         db  0x00 ; '.'
00000000000070bf         db  0x00 ; '.'
00000000000070c0         dd         0x00000018                                  ; Length of the record
00000000000070c4         dd         0x000009fc                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
00000000000070c8         db         0xe8, 0xde, 2 dup (0xff)                    ; begin 0x4fb0
00000000000070cc         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x4fde)
00000000000070d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070d1         db  0x47 ; 'G'
00000000000070d2         db  0x0e ; '.'
00000000000070d3         db  0x10 ; '.'
00000000000070d4         db  0x61 ; 'a'
00000000000070d5         db  0x0a ; '.'
00000000000070d6         db  0x0e ; '.'
00000000000070d7         db  0x08 ; '.'
00000000000070d8         db  0x41 ; 'A'
00000000000070d9         db  0x0b ; '.'
00000000000070da         db  0x00 ; '.'
00000000000070db         db  0x00 ; '.'
00000000000070dc         dd         0x00000024                                  ; Length of the record
00000000000070e0         dd         0x00000a18                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
00000000000070e4         db         0xfc, 0xde, 2 dup (0xff)                    ; begin 0x4fe0
00000000000070e8         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5008)
00000000000070ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070ed         db  0x41 ; 'A'
00000000000070ee         db  0x0e ; '.'
00000000000070ef         db  0x10 ; '.'
00000000000070f0         db  0x86 ; '.'
00000000000070f1         db  0x02 ; '.'
00000000000070f2         db  0x41 ; 'A'
00000000000070f3         db  0x0e ; '.'
00000000000070f4         db  0x18 ; '.'
00000000000070f5         db  0x83 ; '.'
00000000000070f6         db  0x03 ; '.'
00000000000070f7         db  0x4d ; 'M'
00000000000070f8         db  0x0e ; '.'
00000000000070f9         db  0x20 ; ' '
00000000000070fa         db  0x49 ; 'I'
00000000000070fb         db  0x0e ; '.'
00000000000070fc         db  0x18 ; '.'
00000000000070fd         db  0x47 ; 'G'
00000000000070fe         db  0x0e ; '.'
00000000000070ff         db  0x10 ; '.'
0000000000007100         db  0x41 ; 'A'
0000000000007101         db  0x0e ; '.'
0000000000007102         db  0x08 ; '.'
0000000000007103         db  0x00 ; '.'
0000000000007104         dd         0x00000018                                  ; Length of the record
0000000000007108         dd         0x00000a40                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
000000000000710c         db         0x04, 0xdf, 2 dup (0xff)                    ; begin 0x5010
0000000000007110         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5023)
0000000000007114         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007115         db  0x41 ; 'A'
0000000000007116         db  0x0e ; '.'
0000000000007117         db  0x10 ; '.'
0000000000007118         db  0x83 ; '.'
0000000000007119         db  0x02 ; '.'
000000000000711a         db  0x50 ; 'P'
000000000000711b         db  0x0e ; '.'
000000000000711c         db  0x08 ; '.'
000000000000711d         db  0x00 ; '.'
000000000000711e         db  0x00 ; '.'
000000000000711f         db  0x00 ; '.'
0000000000007120         dd         0x00000014                                  ; Length of the record
0000000000007124         dd         0x00000a5c                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000007128         db         0x08, 0xdf, 2 dup (0xff)                    ; begin 0x5030
000000000000712c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5065)
0000000000007130         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007131         db  0x4b ; 'K'
0000000000007132         db  0x0e ; '.'
0000000000007133         db  0x10 ; '.'
0000000000007134         db  0x00 ; '.'
0000000000007135         db  0x00 ; '.'
0000000000007136         db  0x00 ; '.'
0000000000007137         db  0x00 ; '.'
0000000000007138         dd         0x0000001c                                  ; Length of the record
000000000000713c         dd         0x00000a74                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000007140         db         0x30, 0xdf, 2 dup (0xff)                    ; begin 0x5070
0000000000007144         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5088)
0000000000007148         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007149         db  0x44 ; 'D'
000000000000714a         db  0x0e ; '.'
000000000000714b         db  0x10 ; '.'
000000000000714c         db  0x4e ; 'N'
000000000000714d         db  0x0a ; '.'
000000000000714e         db  0x0e ; '.'
000000000000714f         db  0x08 ; '.'
0000000000007150         db  0x41 ; 'A'
0000000000007151         db  0x0b ; '.'
0000000000007152         db  0x00 ; '.'
0000000000007153         db  0x00 ; '.'
0000000000007154         db  0x00 ; '.'
0000000000007155         db  0x00 ; '.'
0000000000007156         db  0x00 ; '.'
0000000000007157         db  0x00 ; '.'
0000000000007158         dd         0x00000034                                  ; Length of the record
000000000000715c         dd         0x00000a94                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000007160         db         0x30, 0xdf, 2 dup (0xff)                    ; begin 0x5090
0000000000007164         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x510b)
0000000000007168         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007169         db  0x42 ; 'B'
000000000000716a         db  0x0e ; '.'
000000000000716b         db  0x10 ; '.'
000000000000716c         db  0x8c ; '.'
000000000000716d         db  0x02 ; '.'
000000000000716e         db  0x41 ; 'A'
000000000000716f         db  0x0e ; '.'
0000000000007170         db  0x18 ; '.'
0000000000007171         db  0x86 ; '.'
0000000000007172         db  0x03 ; '.'
0000000000007173         db  0x41 ; 'A'
0000000000007174         db  0x0e ; '.'
0000000000007175         db  0x20 ; ' '
0000000000007176         db  0x83 ; '.'
0000000000007177         db  0x04 ; '.'
0000000000007178         db  0x7d ; '}'
0000000000007179         db  0x0a ; '.'
000000000000717a         db  0x0e ; '.'
000000000000717b         db  0x18 ; '.'
000000000000717c         db  0x41 ; 'A'
000000000000717d         db  0x0e ; '.'
000000000000717e         db  0x10 ; '.'
000000000000717f         db  0x42 ; 'B'
0000000000007180         db  0x0e ; '.'
0000000000007181         db  0x08 ; '.'
0000000000007182         db  0x44 ; 'D'
0000000000007183         db  0x0b ; '.'
0000000000007184         db  0x60 ; '`'
0000000000007185         db  0x0a ; '.'
0000000000007186         db  0x0e ; '.'
0000000000007187         db  0x18 ; '.'
0000000000007188         db  0x41 ; 'A'
0000000000007189         db  0x0e ; '.'
000000000000718a         db  0x10 ; '.'
000000000000718b         db  0x42 ; 'B'
000000000000718c         db  0x0e ; '.'
000000000000718d         db  0x08 ; '.'
000000000000718e         db  0x45 ; 'E'
000000000000718f         db  0x0b ; '.'
0000000000007190         dd         0x0000001c                                  ; Length of the record
0000000000007194         dd         0x00000acc                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000007198         db         0x78, 0xdf, 2 dup (0xff)                    ; begin 0x5110
000000000000719c         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x5150)
00000000000071a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071a1         db  0x44 ; 'D'
00000000000071a2         db  0x0e ; '.'
00000000000071a3         db  0x10 ; '.'
00000000000071a4         db  0x83 ; '.'
00000000000071a5         db  0x02 ; '.'
00000000000071a6         db  0x5a ; 'Z'
00000000000071a7         db  0x0a ; '.'
00000000000071a8         db  0x0e ; '.'
00000000000071a9         db  0x08 ; '.'
00000000000071aa         db  0x4a ; 'J'
00000000000071ab         db  0x0b ; '.'
00000000000071ac         db  0x53 ; 'S'
00000000000071ad         db  0x0e ; '.'
00000000000071ae         db  0x08 ; '.'
00000000000071af         db  0x00 ; '.'
00000000000071b0         dd         0x0000002c                                  ; Length of the record
00000000000071b4         dd         0x00000aec                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
00000000000071b8         db         0x98, 0xdf, 2 dup (0xff)                    ; begin 0x5150
00000000000071bc         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x51a7)
00000000000071c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071c1         db  0x63 ; 'c'
00000000000071c2         db  0x0e ; '.'
00000000000071c3         db  0x10 ; '.'
00000000000071c4         db  0x8c ; '.'
00000000000071c5         db  0x02 ; '.'
00000000000071c6         db  0x41 ; 'A'
00000000000071c7         db  0x0e ; '.'
00000000000071c8         db  0x18 ; '.'
00000000000071c9         db  0x86 ; '.'
00000000000071ca         db  0x03 ; '.'
00000000000071cb         db  0x44 ; 'D'
00000000000071cc         db  0x0e ; '.'
00000000000071cd         db  0x20 ; ' '
00000000000071ce         db  0x83 ; '.'
00000000000071cf         db  0x04 ; '.'
00000000000071d0         db  0x6b ; 'k'
00000000000071d1         db  0x0e ; '.'
00000000000071d2         db  0x18 ; '.'
00000000000071d3         db  0x41 ; 'A'
00000000000071d4         db  0x0e ; '.'
00000000000071d5         db  0x10 ; '.'
00000000000071d6         db  0x42 ; 'B'
00000000000071d7         db  0x0e ; '.'
00000000000071d8         db  0x08 ; '.'
00000000000071d9         db  0x00 ; '.'
00000000000071da         db  0x00 ; '.'
00000000000071db         db  0x00 ; '.'
00000000000071dc         db  0x00 ; '.'
00000000000071dd         db  0x00 ; '.'
00000000000071de         db  0x00 ; '.'
00000000000071df         db  0x00 ; '.'
00000000000071e0         dd         0x0000003c                                  ; Length of the record
00000000000071e4         dd         0x00000b1c                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
00000000000071e8         db         0xc8, 0xdf, 2 dup (0xff)                    ; begin 0x51b0
00000000000071ec         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5233)
00000000000071f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071f1         db  0x42 ; 'B'
00000000000071f2         db  0x0e ; '.'
00000000000071f3         db  0x10 ; '.'
00000000000071f4         db  0x8d ; '.'
00000000000071f5         db  0x02 ; '.'
00000000000071f6         db  0x42 ; 'B'
00000000000071f7         db  0x0e ; '.'
00000000000071f8         db  0x18 ; '.'
00000000000071f9         db  0x8c ; '.'
00000000000071fa         db  0x03 ; '.'
00000000000071fb         db  0x44 ; 'D'
00000000000071fc         db  0x0e ; '.'
00000000000071fd         db  0x20 ; ' '
00000000000071fe         db  0x86 ; '.'
00000000000071ff         db  0x04 ; '.'
0000000000007200         db  0x41 ; 'A'
0000000000007201         db  0x0e ; '.'
0000000000007202         db  0x28 ; '('
0000000000007203         db  0x83 ; '.'
0000000000007204         db  0x05 ; '.'
0000000000007205         db  0x4a ; 'J'
0000000000007206         db  0x0e ; '.'
0000000000007207         db  0x40 ; '@'
0000000000007208         db  0x02 ; '.'
0000000000007209         db  0x64 ; 'd'
000000000000720a         db  0x0a ; '.'
000000000000720b         db  0x0e ; '.'
000000000000720c         db  0x28 ; '('
000000000000720d         db  0x41 ; 'A'
000000000000720e         db  0x0e ; '.'
000000000000720f         db  0x20 ; ' '
0000000000007210         db  0x41 ; 'A'
0000000000007211         db  0x0e ; '.'
0000000000007212         db  0x18 ; '.'
0000000000007213         db  0x42 ; 'B'
0000000000007214         db  0x0e ; '.'
0000000000007215         db  0x10 ; '.'
0000000000007216         db  0x42 ; 'B'
0000000000007217         db  0x0e ; '.'
0000000000007218         db  0x08 ; '.'
0000000000007219         db  0x41 ; 'A'
000000000000721a         db  0x0b ; '.'
000000000000721b         db  0x00 ; '.'
000000000000721c         db  0x00 ; '.'
000000000000721d         db  0x00 ; '.'
000000000000721e         db  0x00 ; '.'
000000000000721f         db  0x00 ; '.'
0000000000007220         dd         0x0000004c                                  ; Length of the record
0000000000007224         dd         0x00000b5c                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000007228         db         0x18, 0xe0, 2 dup (0xff)                    ; begin 0x5240
000000000000722c         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x52bd)
0000000000007230         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007231         db  0x42 ; 'B'
0000000000007232         db  0x0e ; '.'
0000000000007233         db  0x10 ; '.'
0000000000007234         db  0x8c ; '.'
0000000000007235         db  0x02 ; '.'
0000000000007236         db  0x41 ; 'A'
0000000000007237         db  0x0e ; '.'
0000000000007238         db  0x18 ; '.'
0000000000007239         db  0x86 ; '.'
000000000000723a         db  0x03 ; '.'
000000000000723b         db  0x44 ; 'D'
000000000000723c         db  0x0e ; '.'
000000000000723d         db  0x20 ; ' '
000000000000723e         db  0x83 ; '.'
000000000000723f         db  0x04 ; '.'
0000000000007240         db  0x69 ; 'i'
0000000000007241         db  0x0a ; '.'
0000000000007242         db  0x0e ; '.'
0000000000007243         db  0x18 ; '.'
0000000000007244         db  0x41 ; 'A'
0000000000007245         db  0x0e ; '.'
0000000000007246         db  0x10 ; '.'
0000000000007247         db  0x42 ; 'B'
0000000000007248         db  0x0e ; '.'
0000000000007249         db  0x08 ; '.'
000000000000724a         db  0x45 ; 'E'
000000000000724b         db  0x0b ; '.'
000000000000724c         db  0x55 ; 'U'
000000000000724d         db  0x0a ; '.'
000000000000724e         db  0x0e ; '.'
000000000000724f         db  0x18 ; '.'
0000000000007250         db  0x41 ; 'A'
0000000000007251         db  0x0e ; '.'
0000000000007252         db  0x10 ; '.'
0000000000007253         db  0x42 ; 'B'
0000000000007254         db  0x0e ; '.'
0000000000007255         db  0x08 ; '.'
0000000000007256         db  0x48 ; 'H'
0000000000007257         db  0x0b ; '.'
0000000000007258         db  0x41 ; 'A'
0000000000007259         db  0x0a ; '.'
000000000000725a         db  0x0e ; '.'
000000000000725b         db  0x18 ; '.'
000000000000725c         db  0x46 ; 'F'
000000000000725d         db  0x0e ; '.'
000000000000725e         db  0x10 ; '.'
000000000000725f         db  0x42 ; 'B'
0000000000007260         db  0x0e ; '.'
0000000000007261         db  0x08 ; '.'
0000000000007262         db  0x47 ; 'G'
0000000000007263         db  0x0b ; '.'
0000000000007264         db  0x49 ; 'I'
0000000000007265         db  0x0e ; '.'
0000000000007266         db  0x18 ; '.'
0000000000007267         db  0x41 ; 'A'
0000000000007268         db  0x0e ; '.'
0000000000007269         db  0x10 ; '.'
000000000000726a         db  0x42 ; 'B'
000000000000726b         db  0x0e ; '.'
000000000000726c         db  0x08 ; '.'
000000000000726d         db  0x00 ; '.'
000000000000726e         db  0x00 ; '.'
000000000000726f         db  0x00 ; '.'
0000000000007270         dd         0x0000001c                                  ; Length of the record
0000000000007274         dd         0x00000bac                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000007278         db         0x48, 0xe0, 2 dup (0xff)                    ; begin 0x52c0
000000000000727c         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x5320)
0000000000007280         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007281         db  0x44 ; 'D'
0000000000007282         db  0x0e ; '.'
0000000000007283         db  0x10 ; '.'
0000000000007284         db  0x75 ; 'u'
0000000000007285         db  0x0a ; '.'
0000000000007286         db  0x0e ; '.'
0000000000007287         db  0x08 ; '.'
0000000000007288         db  0x47 ; 'G'
0000000000007289         db  0x0b ; '.'
000000000000728a         db  0x5f ; '_'
000000000000728b         db  0x0e ; '.'
000000000000728c         db  0x08 ; '.'
000000000000728d         db  0x00 ; '.'
000000000000728e         db  0x00 ; '.'
000000000000728f         db  0x00 ; '.'
0000000000007290         dd         0x0000001c                                  ; Length of the record
0000000000007294         dd         0x00000bcc                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000007298         db         0x88, 0xe0, 2 dup (0xff)                    ; begin 0x5320
000000000000729c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x535c)
00000000000072a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072a1         db  0x44 ; 'D'
00000000000072a2         db  0x0e ; '.'
00000000000072a3         db  0x10 ; '.'
00000000000072a4         db  0x61 ; 'a'
00000000000072a5         db  0x0a ; '.'
00000000000072a6         db  0x0e ; '.'
00000000000072a7         db  0x08 ; '.'
00000000000072a8         db  0x4b ; 'K'
00000000000072a9         db  0x0b ; '.'
00000000000072aa         db  0x4b ; 'K'
00000000000072ab         db  0x0e ; '.'
00000000000072ac         db  0x08 ; '.'
00000000000072ad         db  0x00 ; '.'
00000000000072ae         db  0x00 ; '.'
00000000000072af         db  0x00 ; '.'
00000000000072b0         dd         0x00000044                                  ; Length of the record
00000000000072b4         dd         0x00000bec                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
00000000000072b8         db         0xa8, 0xe0, 2 dup (0xff)                    ; begin 0x5360
00000000000072bc         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x53c5)
00000000000072c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072c1         db  0x42 ; 'B'
00000000000072c2         db  0x0e ; '.'
00000000000072c3         db  0x10 ; '.'
00000000000072c4         db  0x8f ; '.'
00000000000072c5         db  0x02 ; '.'
00000000000072c6         db  0x42 ; 'B'
00000000000072c7         db  0x0e ; '.'
00000000000072c8         db  0x18 ; '.'
00000000000072c9         db  0x8e ; '.'
00000000000072ca         db  0x03 ; '.'
00000000000072cb         db  0x45 ; 'E'
00000000000072cc         db  0x0e ; '.'
00000000000072cd         db  0x20 ; ' '
00000000000072ce         db  0x8d ; '.'
00000000000072cf         db  0x04 ; '.'
00000000000072d0         db  0x42 ; 'B'
00000000000072d1         db  0x0e ; '.'
00000000000072d2         db  0x28 ; '('
00000000000072d3         db  0x8c ; '.'
00000000000072d4         db  0x05 ; '.'
00000000000072d5         db  0x48 ; 'H'
00000000000072d6         db  0x0e ; '.'
00000000000072d7         db  0x30 ; '0'
00000000000072d8         db  0x86 ; '.'
00000000000072d9         db  0x06 ; '.'
00000000000072da         db  0x48 ; 'H'
00000000000072db         db  0x0e ; '.'
00000000000072dc         db  0x38 ; '8'
00000000000072dd         db  0x83 ; '.'
00000000000072de         db  0x07 ; '.'
00000000000072df         db  0x4d ; 'M'
00000000000072e0         db  0x0e ; '.'
00000000000072e1         db  0x40 ; '@'
00000000000072e2         db  0x72 ; 'r'
00000000000072e3         db  0x0e ; '.'
00000000000072e4         db  0x38 ; '8'
00000000000072e5         db  0x41 ; 'A'
00000000000072e6         db  0x0e ; '.'
00000000000072e7         db  0x30 ; '0'
00000000000072e8         db  0x41 ; 'A'
00000000000072e9         db  0x0e ; '.'
00000000000072ea         db  0x28 ; '('
00000000000072eb         db  0x42 ; 'B'
00000000000072ec         db  0x0e ; '.'
00000000000072ed         db  0x20 ; ' '
00000000000072ee         db  0x42 ; 'B'
00000000000072ef         db  0x0e ; '.'
00000000000072f0         db  0x18 ; '.'
00000000000072f1         db  0x42 ; 'B'
00000000000072f2         db  0x0e ; '.'
00000000000072f3         db  0x10 ; '.'
00000000000072f4         db  0x42 ; 'B'
00000000000072f5         db  0x0e ; '.'
00000000000072f6         db  0x08 ; '.'
00000000000072f7         db  0x00 ; '.'
00000000000072f8         dd         0x00000014                                  ; Length of the record
00000000000072fc         dd         0x00000c34                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000007300         db         0xd0, 0xe0, 2 dup (0xff)                    ; begin 0x53d0
0000000000007304         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x53d2)
0000000000007308         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007309         align      16
0000000000007310         dd         0x00000010                                  ; Length of the record
0000000000007314         dd         0x00000c4c                                  ; FDE: parent CIE at 0x66c8 (FDE encoding = 0x1B)
0000000000007318         db         0xc8, 0xe0, 2 dup (0xff)                    ; begin 0x53e0
000000000000731c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x53ee)
0000000000007320         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007321         align      8


        ; Segment Segment 3
        ; Range: [0x207b50; 0x2082a0[ (1872 bytes)
        ; File offset : [31568; 32928[ (1360 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x207b50; 0x207b58[ (8 bytes)
        ; File offset : [31568; 31576[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000207b50         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x207b58; 0x207b60[ (8 bytes)
        ; File offset : [31576; 31584[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000207b58         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x207b60; 0x207c58[ (248 bytes)
        ; File offset : [31584; 31832[ (248 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
0000000000207b60         db  0xf9 ; '.'                                         ; DATA XREF=main+115
0000000000207b61         db  0x54 ; 'T'
0000000000207b62         db  0x00 ; '.'
0000000000207b63         db  0x00 ; '.'
0000000000207b64         db  0x00 ; '.'
0000000000207b65         db  0x00 ; '.'
0000000000207b66         db  0x00 ; '.'
0000000000207b67         db  0x00 ; '.'
0000000000207b68         db  0x01 ; '.'
0000000000207b69         db  0x00 ; '.'
0000000000207b6a         db  0x00 ; '.'
0000000000207b6b         db  0x00 ; '.'
0000000000207b6c         db  0x00 ; '.'
0000000000207b6d         db  0x00 ; '.'
0000000000207b6e         db  0x00 ; '.'
0000000000207b6f         db  0x00 ; '.'
0000000000207b70         db  0x00 ; '.'
0000000000207b71         db  0x00 ; '.'
0000000000207b72         db  0x00 ; '.'
0000000000207b73         db  0x00 ; '.'
0000000000207b74         db  0x00 ; '.'
0000000000207b75         db  0x00 ; '.'
0000000000207b76         db  0x00 ; '.'
0000000000207b77         db  0x00 ; '.'
0000000000207b78         db  0x74 ; 't'
0000000000207b79         db  0x00 ; '.'
0000000000207b7a         db  0x00 ; '.'
0000000000207b7b         db  0x00 ; '.'
0000000000207b7c         db  0x00 ; '.'
0000000000207b7d         db  0x00 ; '.'
0000000000207b7e         db  0x00 ; '.'
0000000000207b7f         db  0x00 ; '.'
0000000000207b80         db  0xfe ; '.'
0000000000207b81         db  0x54 ; 'T'
0000000000207b82         db  0x00 ; '.'
0000000000207b83         db  0x00 ; '.'
0000000000207b84         db  0x00 ; '.'
0000000000207b85         db  0x00 ; '.'
0000000000207b86         db  0x00 ; '.'
0000000000207b87         db  0x00 ; '.'
0000000000207b88         db  0x00 ; '.'
0000000000207b89         db  0x00 ; '.'
0000000000207b8a         db  0x00 ; '.'
0000000000207b8b         db  0x00 ; '.'
0000000000207b8c         db  0x00 ; '.'
0000000000207b8d         db  0x00 ; '.'
0000000000207b8e         db  0x00 ; '.'
0000000000207b8f         db  0x00 ; '.'
0000000000207b90         db  0x00 ; '.'
0000000000207b91         db  0x00 ; '.'
0000000000207b92         db  0x00 ; '.'
0000000000207b93         db  0x00 ; '.'
0000000000207b94         db  0x00 ; '.'
0000000000207b95         db  0x00 ; '.'
0000000000207b96         db  0x00 ; '.'
0000000000207b97         db  0x00 ; '.'
0000000000207b98         db  0x69 ; 'i'
0000000000207b99         db  0x00 ; '.'
0000000000207b9a         db  0x00 ; '.'
0000000000207b9b         db  0x00 ; '.'
0000000000207b9c         db  0x00 ; '.'
0000000000207b9d         db  0x00 ; '.'
0000000000207b9e         db  0x00 ; '.'
0000000000207b9f         db  0x00 ; '.'
0000000000207ba0         db  0x06 ; '.'
0000000000207ba1         db  0x55 ; 'U'
0000000000207ba2         db  0x00 ; '.'
0000000000207ba3         db  0x00 ; '.'
0000000000207ba4         db  0x00 ; '.'
0000000000207ba5         db  0x00 ; '.'
0000000000207ba6         db  0x00 ; '.'
0000000000207ba7         db  0x00 ; '.'
0000000000207ba8         db  0x00 ; '.'
0000000000207ba9         db  0x00 ; '.'
0000000000207baa         db  0x00 ; '.'
0000000000207bab         db  0x00 ; '.'
0000000000207bac         db  0x00 ; '.'
0000000000207bad         db  0x00 ; '.'
0000000000207bae         db  0x00 ; '.'
0000000000207baf         db  0x00 ; '.'
0000000000207bb0         db  0x00 ; '.'
0000000000207bb1         db  0x00 ; '.'
0000000000207bb2         db  0x00 ; '.'
0000000000207bb3         db  0x00 ; '.'
0000000000207bb4         db  0x00 ; '.'
0000000000207bb5         db  0x00 ; '.'
0000000000207bb6         db  0x00 ; '.'
0000000000207bb7         db  0x00 ; '.'
0000000000207bb8         db  0x7e ; '~'
0000000000207bb9         db  0xff ; '.'
0000000000207bba         db  0xff ; '.'
0000000000207bbb         db  0xff ; '.'
0000000000207bbc         db  0x00 ; '.'
0000000000207bbd         db  0x00 ; '.'
0000000000207bbe         db  0x00 ; '.'
0000000000207bbf         db  0x00 ; '.'
0000000000207bc0         db  0x0b ; '.'
0000000000207bc1         db  0x55 ; 'U'
0000000000207bc2         db  0x00 ; '.'
0000000000207bc3         db  0x00 ; '.'
0000000000207bc4         db  0x00 ; '.'
0000000000207bc5         db  0x00 ; '.'
0000000000207bc6         db  0x00 ; '.'
0000000000207bc7         db  0x00 ; '.'
0000000000207bc8         db  0x00 ; '.'
0000000000207bc9         db  0x00 ; '.'
0000000000207bca         db  0x00 ; '.'
0000000000207bcb         db  0x00 ; '.'
0000000000207bcc         db  0x00 ; '.'
0000000000207bcd         db  0x00 ; '.'
0000000000207bce         db  0x00 ; '.'
0000000000207bcf         db  0x00 ; '.'
0000000000207bd0         db  0x00 ; '.'
0000000000207bd1         db  0x00 ; '.'
0000000000207bd2         db  0x00 ; '.'
0000000000207bd3         db  0x00 ; '.'
0000000000207bd4         db  0x00 ; '.'
0000000000207bd5         db  0x00 ; '.'
0000000000207bd6         db  0x00 ; '.'
0000000000207bd7         db  0x00 ; '.'
0000000000207bd8         db  0x7d ; '}'
0000000000207bd9         db  0xff ; '.'
0000000000207bda         db  0xff ; '.'
0000000000207bdb         db  0xff ; '.'
0000000000207bdc         db  0x00 ; '.'
0000000000207bdd         db  0x00 ; '.'
0000000000207bde         db  0x00 ; '.'
0000000000207bdf         db  0x00 ; '.'
0000000000207be0         db  0x00 ; '.'
0000000000207be1         db  0x00 ; '.'
0000000000207be2         db  0x00 ; '.'
0000000000207be3         db  0x00 ; '.'
0000000000207be4         db  0x00 ; '.'
0000000000207be5         db  0x00 ; '.'
0000000000207be6         db  0x00 ; '.'
0000000000207be7         db  0x00 ; '.'
0000000000207be8         db  0x00 ; '.'
0000000000207be9         db  0x00 ; '.'
0000000000207bea         db  0x00 ; '.'
0000000000207beb         db  0x00 ; '.'
0000000000207bec         db  0x00 ; '.'
0000000000207bed         db  0x00 ; '.'
0000000000207bee         db  0x00 ; '.'
0000000000207bef         db  0x00 ; '.'
0000000000207bf0         db  0x00 ; '.'
0000000000207bf1         db  0x00 ; '.'
0000000000207bf2         db  0x00 ; '.'
0000000000207bf3         db  0x00 ; '.'
0000000000207bf4         db  0x00 ; '.'
0000000000207bf5         db  0x00 ; '.'
0000000000207bf6         db  0x00 ; '.'
0000000000207bf7         db  0x00 ; '.'
0000000000207bf8         db  0x00 ; '.'
0000000000207bf9         db  0x00 ; '.'
0000000000207bfa         db  0x00 ; '.'
0000000000207bfb         db  0x00 ; '.'
0000000000207bfc         db  0x00 ; '.'
0000000000207bfd         db  0x00 ; '.'
0000000000207bfe         db  0x00 ; '.'
0000000000207bff         db  0x00 ; '.'
                     quoting_style_args:
0000000000207c00         db  0xb1 ; '.'
0000000000207c01         db  0x5b ; '['
0000000000207c02         db  0x00 ; '.'
0000000000207c03         db  0x00 ; '.'
0000000000207c04         db  0x00 ; '.'
0000000000207c05         db  0x00 ; '.'
0000000000207c06         db  0x00 ; '.'
0000000000207c07         db  0x00 ; '.'
0000000000207c08         db  0xb9 ; '.'
0000000000207c09         db  0x5b ; '['
0000000000207c0a         db  0x00 ; '.'
0000000000207c0b         db  0x00 ; '.'
0000000000207c0c         db  0x00 ; '.'
0000000000207c0d         db  0x00 ; '.'
0000000000207c0e         db  0x00 ; '.'
0000000000207c0f         db  0x00 ; '.'
0000000000207c10         db  0xbf ; '.'
0000000000207c11         db  0x5b ; '['
0000000000207c12         db  0x00 ; '.'
0000000000207c13         db  0x00 ; '.'
0000000000207c14         db  0x00 ; '.'
0000000000207c15         db  0x00 ; '.'
0000000000207c16         db  0x00 ; '.'
0000000000207c17         db  0x00 ; '.'
0000000000207c18         db  0xcc ; '.'
0000000000207c19         db  0x5b ; '['
0000000000207c1a         db  0x00 ; '.'
0000000000207c1b         db  0x00 ; '.'
0000000000207c1c         db  0x00 ; '.'
0000000000207c1d         db  0x00 ; '.'
0000000000207c1e         db  0x00 ; '.'
0000000000207c1f         db  0x00 ; '.'
0000000000207c20         db  0xd9 ; '.'
0000000000207c21         db  0x5b ; '['
0000000000207c22         db  0x00 ; '.'
0000000000207c23         db  0x00 ; '.'
0000000000207c24         db  0x00 ; '.'
0000000000207c25         db  0x00 ; '.'
0000000000207c26         db  0x00 ; '.'
0000000000207c27         db  0x00 ; '.'
0000000000207c28         db  0xed ; '.'
0000000000207c29         db  0x5b ; '['
0000000000207c2a         db  0x00 ; '.'
0000000000207c2b         db  0x00 ; '.'
0000000000207c2c         db  0x00 ; '.'
0000000000207c2d         db  0x00 ; '.'
0000000000207c2e         db  0x00 ; '.'
0000000000207c2f         db  0x00 ; '.'
0000000000207c30         db  0xef ; '.'
0000000000207c31         db  0x5b ; '['
0000000000207c32         db  0x00 ; '.'
0000000000207c33         db  0x00 ; '.'
0000000000207c34         db  0x00 ; '.'
0000000000207c35         db  0x00 ; '.'
0000000000207c36         db  0x00 ; '.'
0000000000207c37         db  0x00 ; '.'
0000000000207c38         db  0xd2 ; '.'
0000000000207c39         db  0x5b ; '['
0000000000207c3a         db  0x00 ; '.'
0000000000207c3b         db  0x00 ; '.'
0000000000207c3c         db  0x00 ; '.'
0000000000207c3d         db  0x00 ; '.'
0000000000207c3e         db  0x00 ; '.'
0000000000207c3f         db  0x00 ; '.'
0000000000207c40         db  0xbf ; '.'
0000000000207c41         db  0x54 ; 'T'
0000000000207c42         db  0x00 ; '.'
0000000000207c43         db  0x00 ; '.'
0000000000207c44         db  0x00 ; '.'
0000000000207c45         db  0x00 ; '.'
0000000000207c46         db  0x00 ; '.'
0000000000207c47         db  0x00 ; '.'
0000000000207c48         db  0xf7 ; '.'
0000000000207c49         db  0x5b ; '['
0000000000207c4a         db  0x00 ; '.'
0000000000207c4b         db  0x00 ; '.'
0000000000207c4c         db  0x00 ; '.'
0000000000207c4d         db  0x00 ; '.'
0000000000207c4e         db  0x00 ; '.'
0000000000207c4f         db  0x00 ; '.'
0000000000207c50         db  0x00 ; '.'
0000000000207c51         db  0x00 ; '.'
0000000000207c52         db  0x00 ; '.'
0000000000207c53         db  0x00 ; '.'
0000000000207c54         db  0x00 ; '.'
0000000000207c55         db  0x00 ; '.'
0000000000207c56         db  0x00 ; '.'
0000000000207c57         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x207c58; 0x207e48[ (496 bytes)
        ; File offset : [31832; 32328[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000207c58         db  0x01 ; '.'
0000000000207c59         db  0x00 ; '.'
0000000000207c5a         db  0x00 ; '.'
0000000000207c5b         db  0x00 ; '.'
0000000000207c5c         db  0x00 ; '.'
0000000000207c5d         db  0x00 ; '.'
0000000000207c5e         db  0x00 ; '.'
0000000000207c5f         db  0x00 ; '.'
0000000000207c60         db  0x01 ; '.'
0000000000207c61         db  0x00 ; '.'
0000000000207c62         db  0x00 ; '.'
0000000000207c63         db  0x00 ; '.'
0000000000207c64         db  0x00 ; '.'
0000000000207c65         db  0x00 ; '.'
0000000000207c66         db  0x00 ; '.'
0000000000207c67         db  0x00 ; '.'
0000000000207c68         db  0x0c ; '.'
0000000000207c69         db  0x00 ; '.'
0000000000207c6a         db  0x00 ; '.'
0000000000207c6b         db  0x00 ; '.'
0000000000207c6c         db  0x00 ; '.'
0000000000207c6d         db  0x00 ; '.'
0000000000207c6e         db  0x00 ; '.'
0000000000207c6f         db  0x00 ; '.'
0000000000207c70         db  0xe8 ; '.'
0000000000207c71         db  0x13 ; '.'
0000000000207c72         db  0x00 ; '.'
0000000000207c73         db  0x00 ; '.'
0000000000207c74         db  0x00 ; '.'
0000000000207c75         db  0x00 ; '.'
0000000000207c76         db  0x00 ; '.'
0000000000207c77         db  0x00 ; '.'
0000000000207c78         db  0x0d ; '.'
0000000000207c79         db  0x00 ; '.'
0000000000207c7a         db  0x00 ; '.'
0000000000207c7b         db  0x00 ; '.'
0000000000207c7c         db  0x00 ; '.'
0000000000207c7d         db  0x00 ; '.'
0000000000207c7e         db  0x00 ; '.'
0000000000207c7f         db  0x00 ; '.'
0000000000207c80         db  0xf0 ; '.'
0000000000207c81         db  0x53 ; 'S'
0000000000207c82         db  0x00 ; '.'
0000000000207c83         db  0x00 ; '.'
0000000000207c84         db  0x00 ; '.'
0000000000207c85         db  0x00 ; '.'
0000000000207c86         db  0x00 ; '.'
0000000000207c87         db  0x00 ; '.'
0000000000207c88         db  0x19 ; '.'
0000000000207c89         db  0x00 ; '.'
0000000000207c8a         db  0x00 ; '.'
0000000000207c8b         db  0x00 ; '.'
0000000000207c8c         db  0x00 ; '.'
0000000000207c8d         db  0x00 ; '.'
0000000000207c8e         db  0x00 ; '.'
0000000000207c8f         db  0x00 ; '.'
0000000000207c90         db  0x50 ; 'P'
0000000000207c91         db  0x7b ; '{'
0000000000207c92         db  0x20 ; ' '
0000000000207c93         db  0x00 ; '.'
0000000000207c94         db  0x00 ; '.'
0000000000207c95         db  0x00 ; '.'
0000000000207c96         db  0x00 ; '.'
0000000000207c97         db  0x00 ; '.'
0000000000207c98         db  0x1b ; '.'
0000000000207c99         db  0x00 ; '.'
0000000000207c9a         db  0x00 ; '.'
0000000000207c9b         db  0x00 ; '.'
0000000000207c9c         db  0x00 ; '.'
0000000000207c9d         db  0x00 ; '.'
0000000000207c9e         db  0x00 ; '.'
0000000000207c9f         db  0x00 ; '.'
0000000000207ca0         db  0x08 ; '.'
0000000000207ca1         db  0x00 ; '.'
0000000000207ca2         db  0x00 ; '.'
0000000000207ca3         db  0x00 ; '.'
0000000000207ca4         db  0x00 ; '.'
0000000000207ca5         db  0x00 ; '.'
0000000000207ca6         db  0x00 ; '.'
0000000000207ca7         db  0x00 ; '.'
0000000000207ca8         db  0x1a ; '.'
0000000000207ca9         db  0x00 ; '.'
0000000000207caa         db  0x00 ; '.'
0000000000207cab         db  0x00 ; '.'
0000000000207cac         db  0x00 ; '.'
0000000000207cad         db  0x00 ; '.'
0000000000207cae         db  0x00 ; '.'
0000000000207caf         db  0x00 ; '.'
0000000000207cb0         db  0x58 ; 'X'
0000000000207cb1         db  0x7b ; '{'
0000000000207cb2         db  0x20 ; ' '
0000000000207cb3         db  0x00 ; '.'
0000000000207cb4         db  0x00 ; '.'
0000000000207cb5         db  0x00 ; '.'
0000000000207cb6         db  0x00 ; '.'
0000000000207cb7         db  0x00 ; '.'
0000000000207cb8         db  0x1c ; '.'
0000000000207cb9         db  0x00 ; '.'
0000000000207cba         db  0x00 ; '.'
0000000000207cbb         db  0x00 ; '.'
0000000000207cbc         db  0x00 ; '.'
0000000000207cbd         db  0x00 ; '.'
0000000000207cbe         db  0x00 ; '.'
0000000000207cbf         db  0x00 ; '.'
0000000000207cc0         db  0x08 ; '.'
0000000000207cc1         db  0x00 ; '.'
0000000000207cc2         db  0x00 ; '.'
0000000000207cc3         db  0x00 ; '.'
0000000000207cc4         db  0x00 ; '.'
0000000000207cc5         db  0x00 ; '.'
0000000000207cc6         db  0x00 ; '.'
0000000000207cc7         db  0x00 ; '.'
0000000000207cc8         db  0xf5 ; '.'
0000000000207cc9         db  0xfe ; '.'
0000000000207cca         db  0xff ; '.'
0000000000207ccb         db  0x6f ; 'o'
0000000000207ccc         db  0x00 ; '.'
0000000000207ccd         db  0x00 ; '.'
0000000000207cce         db  0x00 ; '.'
0000000000207ccf         db  0x00 ; '.'
0000000000207cd0         db  0x98 ; '.'
0000000000207cd1         db  0x02 ; '.'
0000000000207cd2         db  0x00 ; '.'
0000000000207cd3         db  0x00 ; '.'
0000000000207cd4         db  0x00 ; '.'
0000000000207cd5         db  0x00 ; '.'
0000000000207cd6         db  0x00 ; '.'
0000000000207cd7         db  0x00 ; '.'
0000000000207cd8         db  0x05 ; '.'
0000000000207cd9         db  0x00 ; '.'
0000000000207cda         db  0x00 ; '.'
0000000000207cdb         db  0x00 ; '.'
0000000000207cdc         db  0x00 ; '.'
0000000000207cdd         db  0x00 ; '.'
0000000000207cde         db  0x00 ; '.'
0000000000207cdf         db  0x00 ; '.'
0000000000207ce0         db  0xb0 ; '.'
0000000000207ce1         db  0x08 ; '.'
0000000000207ce2         db  0x00 ; '.'
0000000000207ce3         db  0x00 ; '.'
0000000000207ce4         db  0x00 ; '.'
0000000000207ce5         db  0x00 ; '.'
0000000000207ce6         db  0x00 ; '.'
0000000000207ce7         db  0x00 ; '.'
0000000000207ce8         db  0x06 ; '.'
0000000000207ce9         db  0x00 ; '.'
0000000000207cea         db  0x00 ; '.'
0000000000207ceb         db  0x00 ; '.'
0000000000207cec         db  0x00 ; '.'
0000000000207ced         db  0x00 ; '.'
0000000000207cee         db  0x00 ; '.'
0000000000207cef         db  0x00 ; '.'
0000000000207cf0         db  0xe0 ; '.'
0000000000207cf1         db  0x02 ; '.'
0000000000207cf2         db  0x00 ; '.'
0000000000207cf3         db  0x00 ; '.'
0000000000207cf4         db  0x00 ; '.'
0000000000207cf5         db  0x00 ; '.'
0000000000207cf6         db  0x00 ; '.'
0000000000207cf7         db  0x00 ; '.'
0000000000207cf8         db  0x0a ; '.'
0000000000207cf9         db  0x00 ; '.'
0000000000207cfa         db  0x00 ; '.'
0000000000207cfb         db  0x00 ; '.'
0000000000207cfc         db  0x00 ; '.'
0000000000207cfd         db  0x00 ; '.'
0000000000207cfe         db  0x00 ; '.'
0000000000207cff         db  0x00 ; '.'
0000000000207d00         db  0xdb ; '.'
0000000000207d01         db  0x02 ; '.'
0000000000207d02         db  0x00 ; '.'
0000000000207d03         db  0x00 ; '.'
0000000000207d04         db  0x00 ; '.'
0000000000207d05         db  0x00 ; '.'
0000000000207d06         db  0x00 ; '.'
0000000000207d07         db  0x00 ; '.'
0000000000207d08         db  0x0b ; '.'
0000000000207d09         db  0x00 ; '.'
0000000000207d0a         db  0x00 ; '.'
0000000000207d0b         db  0x00 ; '.'
0000000000207d0c         db  0x00 ; '.'
0000000000207d0d         db  0x00 ; '.'
0000000000207d0e         db  0x00 ; '.'
0000000000207d0f         db  0x00 ; '.'
0000000000207d10         db  0x18 ; '.'
0000000000207d11         db  0x00 ; '.'
0000000000207d12         db  0x00 ; '.'
0000000000207d13         db  0x00 ; '.'
0000000000207d14         db  0x00 ; '.'
0000000000207d15         db  0x00 ; '.'
0000000000207d16         db  0x00 ; '.'
0000000000207d17         db  0x00 ; '.'
0000000000207d18         db  0x15 ; '.'
0000000000207d19         db  0x00 ; '.'
0000000000207d1a         db  0x00 ; '.'
0000000000207d1b         db  0x00 ; '.'
0000000000207d1c         db  0x00 ; '.'
0000000000207d1d         db  0x00 ; '.'
0000000000207d1e         db  0x00 ; '.'
0000000000207d1f         db  0x00 ; '.'
0000000000207d20         db  0x00 ; '.'
0000000000207d21         db  0x00 ; '.'
0000000000207d22         db  0x00 ; '.'
0000000000207d23         db  0x00 ; '.'
0000000000207d24         db  0x00 ; '.'
0000000000207d25         db  0x00 ; '.'
0000000000207d26         db  0x00 ; '.'
0000000000207d27         db  0x00 ; '.'
0000000000207d28         db  0x03 ; '.'
0000000000207d29         db  0x00 ; '.'
0000000000207d2a         db  0x00 ; '.'
0000000000207d2b         db  0x00 ; '.'
0000000000207d2c         db  0x00 ; '.'
0000000000207d2d         db  0x00 ; '.'
0000000000207d2e         db  0x00 ; '.'
0000000000207d2f         db  0x00 ; '.'
0000000000207d30         db  0x48 ; 'H'
0000000000207d31         db  0x7e ; '~'
0000000000207d32         db  0x20 ; ' '
0000000000207d33         db  0x00 ; '.'
0000000000207d34         db  0x00 ; '.'
0000000000207d35         db  0x00 ; '.'
0000000000207d36         db  0x00 ; '.'
0000000000207d37         db  0x00 ; '.'
0000000000207d38         db  0x02 ; '.'
0000000000207d39         db  0x00 ; '.'
0000000000207d3a         db  0x00 ; '.'
0000000000207d3b         db  0x00 ; '.'
0000000000207d3c         db  0x00 ; '.'
0000000000207d3d         db  0x00 ; '.'
0000000000207d3e         db  0x00 ; '.'
0000000000207d3f         db  0x00 ; '.'
0000000000207d40         db  0x68 ; 'h'
0000000000207d41         db  0x04 ; '.'
0000000000207d42         db  0x00 ; '.'
0000000000207d43         db  0x00 ; '.'
0000000000207d44         db  0x00 ; '.'
0000000000207d45         db  0x00 ; '.'
0000000000207d46         db  0x00 ; '.'
0000000000207d47         db  0x00 ; '.'
0000000000207d48         db  0x14 ; '.'
0000000000207d49         db  0x00 ; '.'
0000000000207d4a         db  0x00 ; '.'
0000000000207d4b         db  0x00 ; '.'
0000000000207d4c         db  0x00 ; '.'
0000000000207d4d         db  0x00 ; '.'
0000000000207d4e         db  0x00 ; '.'
0000000000207d4f         db  0x00 ; '.'
0000000000207d50         db  0x07 ; '.'
0000000000207d51         db  0x00 ; '.'
0000000000207d52         db  0x00 ; '.'
0000000000207d53         db  0x00 ; '.'
0000000000207d54         db  0x00 ; '.'
0000000000207d55         db  0x00 ; '.'
0000000000207d56         db  0x00 ; '.'
0000000000207d57         db  0x00 ; '.'
0000000000207d58         db  0x17 ; '.'
0000000000207d59         db  0x00 ; '.'
0000000000207d5a         db  0x00 ; '.'
0000000000207d5b         db  0x00 ; '.'
0000000000207d5c         db  0x00 ; '.'
0000000000207d5d         db  0x00 ; '.'
0000000000207d5e         db  0x00 ; '.'
0000000000207d5f         db  0x00 ; '.'
0000000000207d60         db  0x80 ; '.'
0000000000207d61         db  0x0f ; '.'
0000000000207d62         db  0x00 ; '.'
0000000000207d63         db  0x00 ; '.'
0000000000207d64         db  0x00 ; '.'
0000000000207d65         db  0x00 ; '.'
0000000000207d66         db  0x00 ; '.'
0000000000207d67         db  0x00 ; '.'
0000000000207d68         db  0x07 ; '.'
0000000000207d69         db  0x00 ; '.'
0000000000207d6a         db  0x00 ; '.'
0000000000207d6b         db  0x00 ; '.'
0000000000207d6c         db  0x00 ; '.'
0000000000207d6d         db  0x00 ; '.'
0000000000207d6e         db  0x00 ; '.'
0000000000207d6f         db  0x00 ; '.'
0000000000207d70         db  0x68 ; 'h'
0000000000207d71         db  0x0c ; '.'
0000000000207d72         db  0x00 ; '.'
0000000000207d73         db  0x00 ; '.'
0000000000207d74         db  0x00 ; '.'
0000000000207d75         db  0x00 ; '.'
0000000000207d76         db  0x00 ; '.'
0000000000207d77         db  0x00 ; '.'
0000000000207d78         db  0x08 ; '.'
0000000000207d79         db  0x00 ; '.'
0000000000207d7a         db  0x00 ; '.'
0000000000207d7b         db  0x00 ; '.'
0000000000207d7c         db  0x00 ; '.'
0000000000207d7d         db  0x00 ; '.'
0000000000207d7e         db  0x00 ; '.'
0000000000207d7f         db  0x00 ; '.'
0000000000207d80         db  0x18 ; '.'
0000000000207d81         db  0x03 ; '.'
0000000000207d82         db  0x00 ; '.'
0000000000207d83         db  0x00 ; '.'
0000000000207d84         db  0x00 ; '.'
0000000000207d85         db  0x00 ; '.'
0000000000207d86         db  0x00 ; '.'
0000000000207d87         db  0x00 ; '.'
0000000000207d88         db  0x09 ; '.'
0000000000207d89         db  0x00 ; '.'
0000000000207d8a         db  0x00 ; '.'
0000000000207d8b         db  0x00 ; '.'
0000000000207d8c         db  0x00 ; '.'
0000000000207d8d         db  0x00 ; '.'
0000000000207d8e         db  0x00 ; '.'
0000000000207d8f         db  0x00 ; '.'
0000000000207d90         db  0x18 ; '.'
0000000000207d91         db  0x00 ; '.'
0000000000207d92         db  0x00 ; '.'
0000000000207d93         db  0x00 ; '.'
0000000000207d94         db  0x00 ; '.'
0000000000207d95         db  0x00 ; '.'
0000000000207d96         db  0x00 ; '.'
0000000000207d97         db  0x00 ; '.'
0000000000207d98         db  0x1e ; '.'
0000000000207d99         db  0x00 ; '.'
0000000000207d9a         db  0x00 ; '.'
0000000000207d9b         db  0x00 ; '.'
0000000000207d9c         db  0x00 ; '.'
0000000000207d9d         db  0x00 ; '.'
0000000000207d9e         db  0x00 ; '.'
0000000000207d9f         db  0x00 ; '.'
0000000000207da0         db  0x08 ; '.'
0000000000207da1         db  0x00 ; '.'
0000000000207da2         db  0x00 ; '.'
0000000000207da3         db  0x00 ; '.'
0000000000207da4         db  0x00 ; '.'
0000000000207da5         db  0x00 ; '.'
0000000000207da6         db  0x00 ; '.'
0000000000207da7         db  0x00 ; '.'
0000000000207da8         db  0xfb ; '.'
0000000000207da9         db  0xff ; '.'
0000000000207daa         db  0xff ; '.'
0000000000207dab         db  0x6f ; 'o'
0000000000207dac         db  0x00 ; '.'
0000000000207dad         db  0x00 ; '.'
0000000000207dae         db  0x00 ; '.'
0000000000207daf         db  0x00 ; '.'
0000000000207db0         db  0x01 ; '.'
0000000000207db1         db  0x00 ; '.'
0000000000207db2         db  0x00 ; '.'
0000000000207db3         db  0x08 ; '.'
0000000000207db4         db  0x00 ; '.'
0000000000207db5         db  0x00 ; '.'
0000000000207db6         db  0x00 ; '.'
0000000000207db7         db  0x00 ; '.'
0000000000207db8         db  0xfe ; '.'
0000000000207db9         db  0xff ; '.'
0000000000207dba         db  0xff ; '.'
0000000000207dbb         db  0x6f ; 'o'
0000000000207dbc         db  0x00 ; '.'
0000000000207dbd         db  0x00 ; '.'
0000000000207dbe         db  0x00 ; '.'
0000000000207dbf         db  0x00 ; '.'
0000000000207dc0         db  0x08 ; '.'
0000000000207dc1         db  0x0c ; '.'
0000000000207dc2         db  0x00 ; '.'
0000000000207dc3         db  0x00 ; '.'
0000000000207dc4         db  0x00 ; '.'
0000000000207dc5         db  0x00 ; '.'
0000000000207dc6         db  0x00 ; '.'
0000000000207dc7         db  0x00 ; '.'
0000000000207dc8         db  0xff ; '.'
0000000000207dc9         db  0xff ; '.'
0000000000207dca         db  0xff ; '.'
0000000000207dcb         db  0x6f ; 'o'
0000000000207dcc         db  0x00 ; '.'
0000000000207dcd         db  0x00 ; '.'
0000000000207dce         db  0x00 ; '.'
0000000000207dcf         db  0x00 ; '.'
0000000000207dd0         db  0x01 ; '.'
0000000000207dd1         db  0x00 ; '.'
0000000000207dd2         db  0x00 ; '.'
0000000000207dd3         db  0x00 ; '.'
0000000000207dd4         db  0x00 ; '.'
0000000000207dd5         db  0x00 ; '.'
0000000000207dd6         db  0x00 ; '.'
0000000000207dd7         db  0x00 ; '.'
0000000000207dd8         db  0xf0 ; '.'
0000000000207dd9         db  0xff ; '.'
0000000000207dda         db  0xff ; '.'
0000000000207ddb         db  0x6f ; 'o'
0000000000207ddc         db  0x00 ; '.'
0000000000207ddd         db  0x00 ; '.'
0000000000207dde         db  0x00 ; '.'
0000000000207ddf         db  0x00 ; '.'
0000000000207de0         db  0x8c ; '.'
0000000000207de1         db  0x0b ; '.'
0000000000207de2         db  0x00 ; '.'
0000000000207de3         db  0x00 ; '.'
0000000000207de4         db  0x00 ; '.'
0000000000207de5         db  0x00 ; '.'
0000000000207de6         db  0x00 ; '.'
0000000000207de7         db  0x00 ; '.'
0000000000207de8         db  0xf9 ; '.'
0000000000207de9         db  0xff ; '.'
0000000000207dea         db  0xff ; '.'
0000000000207deb         db  0x6f ; 'o'
0000000000207dec         db  0x00 ; '.'
0000000000207ded         db  0x00 ; '.'
0000000000207dee         db  0x00 ; '.'
0000000000207def         db  0x00 ; '.'
0000000000207df0         db  0x15 ; '.'
0000000000207df1         db  0x00 ; '.'
0000000000207df2         db  0x00 ; '.'
0000000000207df3         db  0x00 ; '.'
0000000000207df4         db  0x00 ; '.'
0000000000207df5         db  0x00 ; '.'
0000000000207df6         db  0x00 ; '.'
0000000000207df7         db  0x00 ; '.'
0000000000207df8         db  0x00 ; '.'
0000000000207df9         db  0x00 ; '.'
0000000000207dfa         db  0x00 ; '.'
0000000000207dfb         db  0x00 ; '.'
0000000000207dfc         db  0x00 ; '.'
0000000000207dfd         db  0x00 ; '.'
0000000000207dfe         db  0x00 ; '.'
0000000000207dff         db  0x00 ; '.'
0000000000207e00         db  0x00 ; '.'
0000000000207e01         db  0x00 ; '.'
0000000000207e02         db  0x00 ; '.'
0000000000207e03         db  0x00 ; '.'
0000000000207e04         db  0x00 ; '.'
0000000000207e05         db  0x00 ; '.'
0000000000207e06         db  0x00 ; '.'
0000000000207e07         db  0x00 ; '.'
0000000000207e08         db  0x00 ; '.'
0000000000207e09         db  0x00 ; '.'
0000000000207e0a         db  0x00 ; '.'
0000000000207e0b         db  0x00 ; '.'
0000000000207e0c         db  0x00 ; '.'
0000000000207e0d         db  0x00 ; '.'
0000000000207e0e         db  0x00 ; '.'
0000000000207e0f         db  0x00 ; '.'
0000000000207e10         db  0x00 ; '.'
0000000000207e11         db  0x00 ; '.'
0000000000207e12         db  0x00 ; '.'
0000000000207e13         db  0x00 ; '.'
0000000000207e14         db  0x00 ; '.'
0000000000207e15         db  0x00 ; '.'
0000000000207e16         db  0x00 ; '.'
0000000000207e17         db  0x00 ; '.'
0000000000207e18         db  0x00 ; '.'
0000000000207e19         db  0x00 ; '.'
0000000000207e1a         db  0x00 ; '.'
0000000000207e1b         db  0x00 ; '.'
0000000000207e1c         db  0x00 ; '.'
0000000000207e1d         db  0x00 ; '.'
0000000000207e1e         db  0x00 ; '.'
0000000000207e1f         db  0x00 ; '.'
0000000000207e20         db  0x00 ; '.'
0000000000207e21         db  0x00 ; '.'
0000000000207e22         db  0x00 ; '.'
0000000000207e23         db  0x00 ; '.'
0000000000207e24         db  0x00 ; '.'
0000000000207e25         db  0x00 ; '.'
0000000000207e26         db  0x00 ; '.'
0000000000207e27         db  0x00 ; '.'
0000000000207e28         db  0x00 ; '.'
0000000000207e29         db  0x00 ; '.'
0000000000207e2a         db  0x00 ; '.'
0000000000207e2b         db  0x00 ; '.'
0000000000207e2c         db  0x00 ; '.'
0000000000207e2d         db  0x00 ; '.'
0000000000207e2e         db  0x00 ; '.'
0000000000207e2f         db  0x00 ; '.'
0000000000207e30         db  0x00 ; '.'
0000000000207e31         db  0x00 ; '.'
0000000000207e32         db  0x00 ; '.'
0000000000207e33         db  0x00 ; '.'
0000000000207e34         db  0x00 ; '.'
0000000000207e35         db  0x00 ; '.'
0000000000207e36         db  0x00 ; '.'
0000000000207e37         db  0x00 ; '.'
0000000000207e38         db  0x00 ; '.'
0000000000207e39         db  0x00 ; '.'
0000000000207e3a         db  0x00 ; '.'
0000000000207e3b         db  0x00 ; '.'
0000000000207e3c         db  0x00 ; '.'
0000000000207e3d         db  0x00 ; '.'
0000000000207e3e         db  0x00 ; '.'
0000000000207e3f         db  0x00 ; '.'
0000000000207e40         db  0x00 ; '.'
0000000000207e41         db  0x00 ; '.'
0000000000207e42         db  0x00 ; '.'
0000000000207e43         db  0x00 ; '.'
0000000000207e44         db  0x00 ; '.'
0000000000207e45         db  0x00 ; '.'
0000000000207e46         db  0x00 ; '.'
0000000000207e47         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x207e48; 0x208000[ (440 bytes)
        ; File offset : [32328; 32768[ (440 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000207e48         db  0x58 ; 'X'
0000000000207e49         db  0x7c ; '|'
0000000000207e4a         db  0x20 ; ' '
0000000000207e4b         db  0x00 ; '.'
0000000000207e4c         db  0x00 ; '.'
0000000000207e4d         db  0x00 ; '.'
0000000000207e4e         db  0x00 ; '.'
0000000000207e4f         db  0x00 ; '.'
                     qword_207e50:
0000000000207e50         dq         0x0000000000000000                          ; DATA XREF=0x1400
0000000000207e58         db  0x00 ; '.'                                         ; DATA XREF=0x1406
0000000000207e59         db  0x00 ; '.'
0000000000207e5a         db  0x00 ; '.'
0000000000207e5b         db  0x00 ; '.'
0000000000207e5c         db  0x00 ; '.'
0000000000207e5d         db  0x00 ; '.'
0000000000207e5e         db  0x00 ; '.'
0000000000207e5f         db  0x00 ; '.'
                     __uflow@GOT:        // __uflow
0000000000207e60         dq         0x00000000002082b0                          ; DATA XREF=j___uflow
                     free@GOT:        // free
0000000000207e68         dq         0x00000000002082b8                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000207e70         dq         0x00000000002082c0                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000207e78         dq         0x00000000002082c8                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000207e80         dq         0x00000000002082d0                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000207e88         dq         0x00000000002082e0                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000207e90         dq         0x00000000002082e8                          ; DATA XREF=j___fpending
                     clearerr_unlocked@GOT:        // clearerr_unlocked
0000000000207e98         dq         0x00000000002082f0                          ; DATA XREF=j_clearerr_unlocked
                     textdomain@GOT:        // textdomain
0000000000207ea0         dq         0x00000000002082f8                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000207ea8         dq         0x0000000000208300                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000207eb0         dq         0x0000000000208308                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000207eb8         dq         0x0000000000208310                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000207ec0         dq         0x0000000000208318                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000207ec8         dq         0x0000000000208320                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000207ed0         dq         0x0000000000208328                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000207ed8         dq         0x0000000000208330                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000207ee0         dq         0x0000000000208338                          ; DATA XREF=j_mbrtowc
                     __overflow@GOT:        // __overflow
0000000000207ee8         dq         0x0000000000208340                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000207ef0         dq         0x0000000000208348                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000207ef8         dq         0x0000000000208350                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000207f00         dq         0x0000000000208358                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
0000000000207f08         dq         0x0000000000208360                          ; DATA XREF=j_memset
                     strspn@GOT:        // strspn
0000000000207f10         dq         0x0000000000208368                          ; DATA XREF=j_strspn
                     posix_fadvise@GOT:        // posix_fadvise
0000000000207f18         dq         0x0000000000208370                          ; DATA XREF=j_posix_fadvise
                     strndup@GOT:        // strndup
0000000000207f20         dq         0x0000000000208378                          ; DATA XREF=j_strndup
                     memcmp@GOT:        // memcmp
0000000000207f28         dq         0x0000000000208388                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000207f30         dq         0x0000000000208390                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000207f38         dq         0x0000000000208398                          ; DATA XREF=j_calloc
                     memcpy@GOT:        // memcpy
0000000000207f40         dq         0x00000000002083a8                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000207f48         dq         0x00000000002083b0                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000207f50         dq         0x00000000002083b8                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000207f58         dq         0x00000000002083c0                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000207f60         dq         0x00000000002083c8                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000207f68         dq         0x00000000002083d0                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000207f70         dq         0x00000000002083d8                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000207f78         dq         0x00000000002083e0                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000207f80         dq         0x00000000002083e8                          ; DATA XREF=j___printf_chk
                     error@GOT:        // error
0000000000207f88         dq         0x00000000002083f0                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000207f90         dq         0x00000000002083f8                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
0000000000207f98         dq         0x0000000000208400                          ; DATA XREF=j_fopen
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000207fa0         dq         0x0000000000208408                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000207fa8         dq         0x0000000000208410                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000207fb0         dq         0x0000000000208418                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000207fb8         dq         0x0000000000208420                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000207fc0         dq         0x0000000000208430                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000207fc8         dq         0x0000000000208438                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000207fd0         dq         0x0000000000208448                          ; DATA XREF=j___ctype_b_loc
                     qword_207fd8:
0000000000207fd8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000207fe0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000207fe1         db  0x00 ; '.'
0000000000207fe2         db  0x00 ; '.'
0000000000207fe3         db  0x00 ; '.'
0000000000207fe4         db  0x00 ; '.'
0000000000207fe5         db  0x00 ; '.'
0000000000207fe6         db  0x00 ; '.'
0000000000207fe7         db  0x00 ; '.'
                     qword_207fe8:
0000000000207fe8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_207ff0:
0000000000207ff0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_207ff8:
0000000000207ff8         dq         0x0000000000000000                          ; DATA XREF=j_qword_207ff8, __do_global_dtors_aux+9


        ; Section .data
        ; Range: [0x208000; 0x2080a0[ (160 bytes)
        ; File offset : [32768; 32928[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000208000         align      8
                     __dso_handle:
0000000000208008         dq         0x0000000000208008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     stdin_argv:
0000000000208010         db  0x9a ; '.'                                         ; DATA XREF=set_file_list
0000000000208011         db  0x5b ; '['
0000000000208012         db  0x00 ; '.'
0000000000208013         db  0x00 ; '.'
0000000000208014         db  0x00 ; '.'
0000000000208015         db  0x00 ; '.'
0000000000208016         db  0x00 ; '.'
0000000000208017         db  0x00 ; '.'
0000000000208018         db  0x00 ; '.'
0000000000208019         db  0x00 ; '.'
000000000020801a         db  0x00 ; '.'
000000000020801b         db  0x00 ; '.'
000000000020801c         db  0x00 ; '.'
000000000020801d         db  0x00 ; '.'
000000000020801e         db  0x00 ; '.'
000000000020801f         db  0x00 ; '.'
                     Version:
0000000000208020         dq         0x0000000000005b4a                          ; "8.31", DATA XREF=main+179
                     exit_failure:
0000000000208028         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020802c         db  0x00 ; '.'
000000000020802d         db  0x00 ; '.'
000000000020802e         db  0x00 ; '.'
000000000020802f         db  0x00 ; '.'
0000000000208030         db  0x00 ; '.'
0000000000208031         db  0x00 ; '.'
0000000000208032         db  0x00 ; '.'
0000000000208033         db  0x00 ; '.'
0000000000208034         db  0x00 ; '.'
0000000000208035         db  0x00 ; '.'
0000000000208036         db  0x00 ; '.'
0000000000208037         db  0x00 ; '.'
0000000000208038         db  0x00 ; '.'
0000000000208039         db  0x00 ; '.'
000000000020803a         db  0x00 ; '.'
000000000020803b         db  0x00 ; '.'
000000000020803c         db  0x00 ; '.'
000000000020803d         db  0x00 ; '.'
000000000020803e         db  0x00 ; '.'
000000000020803f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000208040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000208041         db  0x00 ; '.'
0000000000208042         db  0x00 ; '.'
0000000000208043         db  0x00 ; '.'
0000000000208044         db  0x00 ; '.'
0000000000208045         db  0x00 ; '.'
0000000000208046         db  0x00 ; '.'
0000000000208047         db  0x00 ; '.'
0000000000208048         db  0x00 ; '.'
0000000000208049         db  0x00 ; '.'
000000000020804a         db  0x00 ; '.'
000000000020804b         db  0x00 ; '.'
000000000020804c         db  0x00 ; '.'
000000000020804d         db  0x00 ; '.'
000000000020804e         db  0x00 ; '.'
000000000020804f         db  0x00 ; '.'
0000000000208050         db  0x00 ; '.'
0000000000208051         db  0x00 ; '.'
0000000000208052         db  0x00 ; '.'
0000000000208053         db  0x00 ; '.'
0000000000208054         db  0x00 ; '.'
0000000000208055         db  0x00 ; '.'
0000000000208056         db  0x00 ; '.'
0000000000208057         db  0x00 ; '.'
0000000000208058         db  0x00 ; '.'
0000000000208059         db  0x00 ; '.'
000000000020805a         db  0x00 ; '.'
000000000020805b         db  0x00 ; '.'
000000000020805c         db  0x00 ; '.'
000000000020805d         db  0x00 ; '.'
000000000020805e         db  0x00 ; '.'
000000000020805f         db  0x00 ; '.'
0000000000208060         db  0x00 ; '.'
0000000000208061         db  0x00 ; '.'
0000000000208062         db  0x00 ; '.'
0000000000208063         db  0x00 ; '.'
0000000000208064         db  0x00 ; '.'
0000000000208065         db  0x00 ; '.'
0000000000208066         db  0x00 ; '.'
0000000000208067         db  0x00 ; '.'
0000000000208068         db  0x00 ; '.'
0000000000208069         db  0x00 ; '.'
000000000020806a         db  0x00 ; '.'
000000000020806b         db  0x00 ; '.'
000000000020806c         db  0x00 ; '.'
000000000020806d         db  0x00 ; '.'
000000000020806e         db  0x00 ; '.'
000000000020806f         db  0x00 ; '.'
0000000000208070         db  0x00 ; '.'
0000000000208071         db  0x00 ; '.'
0000000000208072         db  0x00 ; '.'
0000000000208073         db  0x00 ; '.'
0000000000208074         db  0x00 ; '.'
0000000000208075         db  0x00 ; '.'
0000000000208076         db  0x00 ; '.'
0000000000208077         db  0x00 ; '.'
                     nslots:
0000000000208078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020807c         db  0x00 ; '.'
000000000020807d         db  0x00 ; '.'
000000000020807e         db  0x00 ; '.'
000000000020807f         db  0x00 ; '.'
                     slotvec:
0000000000208080         dq         0x0000000000208090                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
0000000000208088         db  0x00 ; '.'
0000000000208089         db  0x00 ; '.'
000000000020808a         db  0x00 ; '.'
000000000020808b         db  0x00 ; '.'
000000000020808c         db  0x00 ; '.'
000000000020808d         db  0x00 ; '.'
000000000020808e         db  0x00 ; '.'
000000000020808f         db  0x00 ; '.'
                     slotvec0:
0000000000208090         dq         1.26481e-321, 1.05249e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x2080a0; 0x2082a0[ (512 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
00000000002080a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
00000000002080a1         db  0x00 ; '.'
00000000002080a2         db  0x00 ; '.'
00000000002080a3         db  0x00 ; '.'
00000000002080a4         db  0x00 ; '.'
00000000002080a5         db  0x00 ; '.'
00000000002080a6         db  0x00 ; '.'
00000000002080a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
00000000002080a8         db  0x00 ; '.'                                         ; DATA XREF=main+172, main+451, main+804, usage+125, usage+162, usage+199, usage+236, usage+278, usage+315, usage+912, emit_tab_list_info+1
00000000002080a9         db  0x00 ; '.'
00000000002080aa         db  0x00 ; '.'
00000000002080ab         db  0x00 ; '.'
00000000002080ac         db  0x00 ; '.'
00000000002080ad         db  0x00 ; '.'
00000000002080ae         db  0x00 ; '.'
00000000002080af         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
00000000002080b0         db  0x00 ; '.'                                         ; DATA XREF=next_file+128, cleanup_file_list_stdin+20
00000000002080b1         db  0x00 ; '.'
00000000002080b2         db  0x00 ; '.'
00000000002080b3         db  0x00 ; '.'
00000000002080b4         db  0x00 ; '.'
00000000002080b5         db  0x00 ; '.'
00000000002080b6         db  0x00 ; '.'
00000000002080b7         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
00000000002080b8         db  0x00 ; '.'                                         ; DATA XREF=main+327
00000000002080b9         db  0x00 ; '.'
00000000002080ba         db  0x00 ; '.'
00000000002080bb         db  0x00 ; '.'
00000000002080bc         db  0x00 ; '.'
00000000002080bd         db  0x00 ; '.'
00000000002080be         db  0x00 ; '.'
00000000002080bf         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
00000000002080c0         db  0x00 ; '.'                                         ; DATA XREF=main+238, main+256
00000000002080c1         db  0x00 ; '.'
00000000002080c2         db  0x00 ; '.'
00000000002080c3         db  0x00 ; '.'
00000000002080c4         db  0x00 ; '.'
00000000002080c5         db  0x00 ; '.'
00000000002080c6         db  0x00 ; '.'
00000000002080c7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002080c8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002080c9         db  0x00 ; '.'
00000000002080ca         db  0x00 ; '.'
00000000002080cb         db  0x00 ; '.'
00000000002080cc         db  0x00 ; '.'
00000000002080cd         db  0x00 ; '.'
00000000002080ce         db  0x00 ; '.'
00000000002080cf         db  0x00 ; '.'
00000000002080d0         db  0x00 ; '.'
00000000002080d1         db  0x00 ; '.'
00000000002080d2         db  0x00 ; '.'
00000000002080d3         db  0x00 ; '.'
00000000002080d4         db  0x00 ; '.'
00000000002080d5         db  0x00 ; '.'
00000000002080d6         db  0x00 ; '.'
00000000002080d7         db  0x00 ; '.'
00000000002080d8         db  0x00 ; '.'
00000000002080d9         db  0x00 ; '.'
00000000002080da         db  0x00 ; '.'
00000000002080db         db  0x00 ; '.'
00000000002080dc         db  0x00 ; '.'
00000000002080dd         db  0x00 ; '.'
00000000002080de         db  0x00 ; '.'
00000000002080df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002080e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
00000000002080e1         db  0x00 ; '.'
00000000002080e2         db  0x00 ; '.'
00000000002080e3         db  0x00 ; '.'
00000000002080e4         db  0x00 ; '.'
00000000002080e5         db  0x00 ; '.'
00000000002080e6         db  0x00 ; '.'
00000000002080e7         db  0x00 ; '.'
                     completed.7697:
00000000002080e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
00000000002080e9         db  0x00 ; '.'
00000000002080ea         db  0x00 ; '.'
00000000002080eb         db  0x00 ; '.'
00000000002080ec         db  0x00 ; '.'
00000000002080ed         db  0x00 ; '.'
00000000002080ee         db  0x00 ; '.'
00000000002080ef         db  0x00 ; '.'
                     exit_status:
00000000002080f0         db  0x00 ; '.'                                         ; DATA XREF=main+631, next_file+195, next_file+397, next_file+460
00000000002080f1         db  0x00 ; '.'
00000000002080f2         db  0x00 ; '.'
00000000002080f3         db  0x00 ; '.'
                     convert_entire_line:
00000000002080f4         db  0x00 ; '.'                                         ; DATA XREF=main+108, main+288, main+410, main+559
00000000002080f5         db  0x00 ; '.'
00000000002080f6         db  0x00 ; '.'
00000000002080f7         db  0x00 ; '.'
                     prev_file.6959:
00000000002080f8         db  0x00 ; '.'                                         ; DATA XREF=next_file+13, next_file+285, next_file+349, next_file+470
00000000002080f9         db  0x00 ; '.'
00000000002080fa         db  0x00 ; '.'
00000000002080fb         db  0x00 ; '.'
00000000002080fc         db  0x00 ; '.'
00000000002080fd         db  0x00 ; '.'
00000000002080fe         db  0x00 ; '.'
00000000002080ff         db  0x00 ; '.'
                     have_read_stdin:
0000000000208100         db  0x00 ; '.'                                         ; DATA XREF=set_file_list+10, next_file+135, cleanup_file_list_stdin
0000000000208101         db  0x00 ; '.'
0000000000208102         db  0x00 ; '.'
0000000000208103         db  0x00 ; '.'
0000000000208104         db  0x00 ; '.'
0000000000208105         db  0x00 ; '.'
0000000000208106         db  0x00 ; '.'
0000000000208107         db  0x00 ; '.'
                     file_list:
0000000000208108         db  0x00 ; '.'                                         ; DATA XREF=set_file_list+21, next_file+79, next_file+90, next_file+188, next_file+209
0000000000208109         db  0x00 ; '.'
000000000020810a         db  0x00 ; '.'
000000000020810b         db  0x00 ; '.'
000000000020810c         db  0x00 ; '.'
000000000020810d         db  0x00 ; '.'
000000000020810e         db  0x00 ; '.'
000000000020810f         db  0x00 ; '.'
                     first_free_tab:
0000000000208110         db  0x00 ; '.'                                         ; DATA XREF=add_tab_stop+9, add_tab_stop+70, add_tab_stop+111, add_tab_stop+203, finalize_tab_stops+4, get_next_tab_column+18
0000000000208111         db  0x00 ; '.'
0000000000208112         db  0x00 ; '.'
0000000000208113         db  0x00 ; '.'
0000000000208114         db  0x00 ; '.'
0000000000208115         db  0x00 ; '.'
0000000000208116         db  0x00 ; '.'
0000000000208117         db  0x00 ; '.'
                     n_tabs_allocated:
0000000000208118         db  0x00 ; '.'                                         ; DATA XREF=add_tab_stop+23, add_tab_stop+177
0000000000208119         db  0x00 ; '.'
000000000020811a         db  0x00 ; '.'
000000000020811b         db  0x00 ; '.'
000000000020811c         db  0x00 ; '.'
000000000020811d         db  0x00 ; '.'
000000000020811e         db  0x00 ; '.'
000000000020811f         db  0x00 ; '.'
                     tab_list:
0000000000208120         db  0x00 ; '.'                                         ; DATA XREF=add_tab_stop+16, add_tab_stop+196, finalize_tab_stops+11, get_next_tab_column+30, get_next_tab_column+136
0000000000208121         db  0x00 ; '.'
0000000000208122         db  0x00 ; '.'
0000000000208123         db  0x00 ; '.'
0000000000208124         db  0x00 ; '.'
0000000000208125         db  0x00 ; '.'
0000000000208126         db  0x00 ; '.'
0000000000208127         db  0x00 ; '.'
                     increment_size:
0000000000208128         db  0x00 ; '.'                                         ; DATA XREF=set_increment_size, set_increment_size+54, finalize_tab_stops+82, finalize_tab_stops+148, get_next_tab_column+90
0000000000208129         db  0x00 ; '.'
000000000020812a         db  0x00 ; '.'
000000000020812b         db  0x00 ; '.'
000000000020812c         db  0x00 ; '.'
000000000020812d         db  0x00 ; '.'
000000000020812e         db  0x00 ; '.'
000000000020812f         db  0x00 ; '.'
                     extend_size:
0000000000208130         db  0x00 ; '.'                                         ; DATA XREF=set_extend_size, set_extend_size+54, finalize_tab_stops+94, finalize_tab_stops+130, finalize_tab_stops+155, get_next_tab_column+78
0000000000208131         db  0x00 ; '.'
0000000000208132         db  0x00 ; '.'
0000000000208133         db  0x00 ; '.'
0000000000208134         db  0x00 ; '.'
0000000000208135         db  0x00 ; '.'
0000000000208136         db  0x00 ; '.'
0000000000208137         db  0x00 ; '.'
                     tab_size:
0000000000208138         db  0x00 ; '.'                                         ; DATA XREF=finalize_tab_stops+114, finalize_tab_stops+139, finalize_tab_stops+182, get_next_tab_column
0000000000208139         db  0x00 ; '.'
000000000020813a         db  0x00 ; '.'
000000000020813b         db  0x00 ; '.'
000000000020813c         db  0x00 ; '.'
000000000020813d         db  0x00 ; '.'
000000000020813e         db  0x00 ; '.'
000000000020813f         db  0x00 ; '.'
                     ignore_EPIPE:
0000000000208140         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
0000000000208141         db  0x00 ; '.'
0000000000208142         db  0x00 ; '.'
0000000000208143         db  0x00 ; '.'
0000000000208144         db  0x00 ; '.'
0000000000208145         db  0x00 ; '.'
0000000000208146         db  0x00 ; '.'
0000000000208147         db  0x00 ; '.'
                     file_name:
0000000000208148         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
0000000000208149         db  0x00 ; '.'
000000000020814a         db  0x00 ; '.'
000000000020814b         db  0x00 ; '.'
000000000020814c         db  0x00 ; '.'
000000000020814d         db  0x00 ; '.'
000000000020814e         db  0x00 ; '.'
000000000020814f         db  0x00 ; '.'
                     program_name:
0000000000208150         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
0000000000208151         db  0x00 ; '.'
0000000000208152         db  0x00 ; '.'
0000000000208153         db  0x00 ; '.'
0000000000208154         db  0x00 ; '.'
0000000000208155         db  0x00 ; '.'
0000000000208156         db  0x00 ; '.'
0000000000208157         db  0x00 ; '.'
0000000000208158         db  0x00 ; '.'
0000000000208159         db  0x00 ; '.'
000000000020815a         db  0x00 ; '.'
000000000020815b         db  0x00 ; '.'
000000000020815c         db  0x00 ; '.'
000000000020815d         db  0x00 ; '.'
000000000020815e         db  0x00 ; '.'
000000000020815f         db  0x00 ; '.'
                     slot0:
0000000000208160         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000208161         db  0x00 ; '.'
0000000000208162         db  0x00 ; '.'
0000000000208163         db  0x00 ; '.'
0000000000208164         db  0x00 ; '.'
0000000000208165         db  0x00 ; '.'
0000000000208166         db  0x00 ; '.'
0000000000208167         db  0x00 ; '.'
0000000000208168         db  0x00 ; '.'
0000000000208169         db  0x00 ; '.'
000000000020816a         db  0x00 ; '.'
000000000020816b         db  0x00 ; '.'
000000000020816c         db  0x00 ; '.'
000000000020816d         db  0x00 ; '.'
000000000020816e         db  0x00 ; '.'
000000000020816f         db  0x00 ; '.'
0000000000208170         db  0x00 ; '.'
0000000000208171         db  0x00 ; '.'
0000000000208172         db  0x00 ; '.'
0000000000208173         db  0x00 ; '.'
0000000000208174         db  0x00 ; '.'
0000000000208175         db  0x00 ; '.'
0000000000208176         db  0x00 ; '.'
0000000000208177         db  0x00 ; '.'
0000000000208178         db  0x00 ; '.'
0000000000208179         db  0x00 ; '.'
000000000020817a         db  0x00 ; '.'
000000000020817b         db  0x00 ; '.'
000000000020817c         db  0x00 ; '.'
000000000020817d         db  0x00 ; '.'
000000000020817e         db  0x00 ; '.'
000000000020817f         db  0x00 ; '.'
0000000000208180         db  0x00 ; '.'
0000000000208181         db  0x00 ; '.'
0000000000208182         db  0x00 ; '.'
0000000000208183         db  0x00 ; '.'
0000000000208184         db  0x00 ; '.'
0000000000208185         db  0x00 ; '.'
0000000000208186         db  0x00 ; '.'
0000000000208187         db  0x00 ; '.'
0000000000208188         db  0x00 ; '.'
0000000000208189         db  0x00 ; '.'
000000000020818a         db  0x00 ; '.'
000000000020818b         db  0x00 ; '.'
000000000020818c         db  0x00 ; '.'
000000000020818d         db  0x00 ; '.'
000000000020818e         db  0x00 ; '.'
000000000020818f         db  0x00 ; '.'
0000000000208190         db  0x00 ; '.'
0000000000208191         db  0x00 ; '.'
0000000000208192         db  0x00 ; '.'
0000000000208193         db  0x00 ; '.'
0000000000208194         db  0x00 ; '.'
0000000000208195         db  0x00 ; '.'
0000000000208196         db  0x00 ; '.'
0000000000208197         db  0x00 ; '.'
0000000000208198         db  0x00 ; '.'
0000000000208199         db  0x00 ; '.'
000000000020819a         db  0x00 ; '.'
000000000020819b         db  0x00 ; '.'
000000000020819c         db  0x00 ; '.'
000000000020819d         db  0x00 ; '.'
000000000020819e         db  0x00 ; '.'
000000000020819f         db  0x00 ; '.'
00000000002081a0         db  0x00 ; '.'
00000000002081a1         db  0x00 ; '.'
00000000002081a2         db  0x00 ; '.'
00000000002081a3         db  0x00 ; '.'
00000000002081a4         db  0x00 ; '.'
00000000002081a5         db  0x00 ; '.'
00000000002081a6         db  0x00 ; '.'
00000000002081a7         db  0x00 ; '.'
00000000002081a8         db  0x00 ; '.'
00000000002081a9         db  0x00 ; '.'
00000000002081aa         db  0x00 ; '.'
00000000002081ab         db  0x00 ; '.'
00000000002081ac         db  0x00 ; '.'
00000000002081ad         db  0x00 ; '.'
00000000002081ae         db  0x00 ; '.'
00000000002081af         db  0x00 ; '.'
00000000002081b0         db  0x00 ; '.'
00000000002081b1         db  0x00 ; '.'
00000000002081b2         db  0x00 ; '.'
00000000002081b3         db  0x00 ; '.'
00000000002081b4         db  0x00 ; '.'
00000000002081b5         db  0x00 ; '.'
00000000002081b6         db  0x00 ; '.'
00000000002081b7         db  0x00 ; '.'
00000000002081b8         db  0x00 ; '.'
00000000002081b9         db  0x00 ; '.'
00000000002081ba         db  0x00 ; '.'
00000000002081bb         db  0x00 ; '.'
00000000002081bc         db  0x00 ; '.'
00000000002081bd         db  0x00 ; '.'
00000000002081be         db  0x00 ; '.'
00000000002081bf         db  0x00 ; '.'
00000000002081c0         db  0x00 ; '.'
00000000002081c1         db  0x00 ; '.'
00000000002081c2         db  0x00 ; '.'
00000000002081c3         db  0x00 ; '.'
00000000002081c4         db  0x00 ; '.'
00000000002081c5         db  0x00 ; '.'
00000000002081c6         db  0x00 ; '.'
00000000002081c7         db  0x00 ; '.'
00000000002081c8         db  0x00 ; '.'
00000000002081c9         db  0x00 ; '.'
00000000002081ca         db  0x00 ; '.'
00000000002081cb         db  0x00 ; '.'
00000000002081cc         db  0x00 ; '.'
00000000002081cd         db  0x00 ; '.'
00000000002081ce         db  0x00 ; '.'
00000000002081cf         db  0x00 ; '.'
00000000002081d0         db  0x00 ; '.'
00000000002081d1         db  0x00 ; '.'
00000000002081d2         db  0x00 ; '.'
00000000002081d3         db  0x00 ; '.'
00000000002081d4         db  0x00 ; '.'
00000000002081d5         db  0x00 ; '.'
00000000002081d6         db  0x00 ; '.'
00000000002081d7         db  0x00 ; '.'
00000000002081d8         db  0x00 ; '.'
00000000002081d9         db  0x00 ; '.'
00000000002081da         db  0x00 ; '.'
00000000002081db         db  0x00 ; '.'
00000000002081dc         db  0x00 ; '.'
00000000002081dd         db  0x00 ; '.'
00000000002081de         db  0x00 ; '.'
00000000002081df         db  0x00 ; '.'
00000000002081e0         db  0x00 ; '.'
00000000002081e1         db  0x00 ; '.'
00000000002081e2         db  0x00 ; '.'
00000000002081e3         db  0x00 ; '.'
00000000002081e4         db  0x00 ; '.'
00000000002081e5         db  0x00 ; '.'
00000000002081e6         db  0x00 ; '.'
00000000002081e7         db  0x00 ; '.'
00000000002081e8         db  0x00 ; '.'
00000000002081e9         db  0x00 ; '.'
00000000002081ea         db  0x00 ; '.'
00000000002081eb         db  0x00 ; '.'
00000000002081ec         db  0x00 ; '.'
00000000002081ed         db  0x00 ; '.'
00000000002081ee         db  0x00 ; '.'
00000000002081ef         db  0x00 ; '.'
00000000002081f0         db  0x00 ; '.'
00000000002081f1         db  0x00 ; '.'
00000000002081f2         db  0x00 ; '.'
00000000002081f3         db  0x00 ; '.'
00000000002081f4         db  0x00 ; '.'
00000000002081f5         db  0x00 ; '.'
00000000002081f6         db  0x00 ; '.'
00000000002081f7         db  0x00 ; '.'
00000000002081f8         db  0x00 ; '.'
00000000002081f9         db  0x00 ; '.'
00000000002081fa         db  0x00 ; '.'
00000000002081fb         db  0x00 ; '.'
00000000002081fc         db  0x00 ; '.'
00000000002081fd         db  0x00 ; '.'
00000000002081fe         db  0x00 ; '.'
00000000002081ff         db  0x00 ; '.'
0000000000208200         db  0x00 ; '.'
0000000000208201         db  0x00 ; '.'
0000000000208202         db  0x00 ; '.'
0000000000208203         db  0x00 ; '.'
0000000000208204         db  0x00 ; '.'
0000000000208205         db  0x00 ; '.'
0000000000208206         db  0x00 ; '.'
0000000000208207         db  0x00 ; '.'
0000000000208208         db  0x00 ; '.'
0000000000208209         db  0x00 ; '.'
000000000020820a         db  0x00 ; '.'
000000000020820b         db  0x00 ; '.'
000000000020820c         db  0x00 ; '.'
000000000020820d         db  0x00 ; '.'
000000000020820e         db  0x00 ; '.'
000000000020820f         db  0x00 ; '.'
0000000000208210         db  0x00 ; '.'
0000000000208211         db  0x00 ; '.'
0000000000208212         db  0x00 ; '.'
0000000000208213         db  0x00 ; '.'
0000000000208214         db  0x00 ; '.'
0000000000208215         db  0x00 ; '.'
0000000000208216         db  0x00 ; '.'
0000000000208217         db  0x00 ; '.'
0000000000208218         db  0x00 ; '.'
0000000000208219         db  0x00 ; '.'
000000000020821a         db  0x00 ; '.'
000000000020821b         db  0x00 ; '.'
000000000020821c         db  0x00 ; '.'
000000000020821d         db  0x00 ; '.'
000000000020821e         db  0x00 ; '.'
000000000020821f         db  0x00 ; '.'
0000000000208220         db  0x00 ; '.'
0000000000208221         db  0x00 ; '.'
0000000000208222         db  0x00 ; '.'
0000000000208223         db  0x00 ; '.'
0000000000208224         db  0x00 ; '.'
0000000000208225         db  0x00 ; '.'
0000000000208226         db  0x00 ; '.'
0000000000208227         db  0x00 ; '.'
0000000000208228         db  0x00 ; '.'
0000000000208229         db  0x00 ; '.'
000000000020822a         db  0x00 ; '.'
000000000020822b         db  0x00 ; '.'
000000000020822c         db  0x00 ; '.'
000000000020822d         db  0x00 ; '.'
000000000020822e         db  0x00 ; '.'
000000000020822f         db  0x00 ; '.'
0000000000208230         db  0x00 ; '.'
0000000000208231         db  0x00 ; '.'
0000000000208232         db  0x00 ; '.'
0000000000208233         db  0x00 ; '.'
0000000000208234         db  0x00 ; '.'
0000000000208235         db  0x00 ; '.'
0000000000208236         db  0x00 ; '.'
0000000000208237         db  0x00 ; '.'
0000000000208238         db  0x00 ; '.'
0000000000208239         db  0x00 ; '.'
000000000020823a         db  0x00 ; '.'
000000000020823b         db  0x00 ; '.'
000000000020823c         db  0x00 ; '.'
000000000020823d         db  0x00 ; '.'
000000000020823e         db  0x00 ; '.'
000000000020823f         db  0x00 ; '.'
0000000000208240         db  0x00 ; '.'
0000000000208241         db  0x00 ; '.'
0000000000208242         db  0x00 ; '.'
0000000000208243         db  0x00 ; '.'
0000000000208244         db  0x00 ; '.'
0000000000208245         db  0x00 ; '.'
0000000000208246         db  0x00 ; '.'
0000000000208247         db  0x00 ; '.'
0000000000208248         db  0x00 ; '.'
0000000000208249         db  0x00 ; '.'
000000000020824a         db  0x00 ; '.'
000000000020824b         db  0x00 ; '.'
000000000020824c         db  0x00 ; '.'
000000000020824d         db  0x00 ; '.'
000000000020824e         db  0x00 ; '.'
000000000020824f         db  0x00 ; '.'
0000000000208250         db  0x00 ; '.'
0000000000208251         db  0x00 ; '.'
0000000000208252         db  0x00 ; '.'
0000000000208253         db  0x00 ; '.'
0000000000208254         db  0x00 ; '.'
0000000000208255         db  0x00 ; '.'
0000000000208256         db  0x00 ; '.'
0000000000208257         db  0x00 ; '.'
0000000000208258         db  0x00 ; '.'
0000000000208259         db  0x00 ; '.'
000000000020825a         db  0x00 ; '.'
000000000020825b         db  0x00 ; '.'
000000000020825c         db  0x00 ; '.'
000000000020825d         db  0x00 ; '.'
000000000020825e         db  0x00 ; '.'
000000000020825f         db  0x00 ; '.'
                     default_quoting_options:
0000000000208260         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000208261         db  0x00 ; '.'
0000000000208262         db  0x00 ; '.'
0000000000208263         db  0x00 ; '.'
0000000000208264         db  0x00 ; '.'
0000000000208265         db  0x00 ; '.'
0000000000208266         db  0x00 ; '.'
0000000000208267         db  0x00 ; '.'
0000000000208268         db  0x00 ; '.'
0000000000208269         db  0x00 ; '.'
000000000020826a         db  0x00 ; '.'
000000000020826b         db  0x00 ; '.'
000000000020826c         db  0x00 ; '.'
000000000020826d         db  0x00 ; '.'
000000000020826e         db  0x00 ; '.'
000000000020826f         db  0x00 ; '.'
0000000000208270         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000208271         db  0x00 ; '.'
0000000000208272         db  0x00 ; '.'
0000000000208273         db  0x00 ; '.'
0000000000208274         db  0x00 ; '.'
0000000000208275         db  0x00 ; '.'
0000000000208276         db  0x00 ; '.'
0000000000208277         db  0x00 ; '.'
0000000000208278         db  0x00 ; '.'
0000000000208279         db  0x00 ; '.'
000000000020827a         db  0x00 ; '.'
000000000020827b         db  0x00 ; '.'
000000000020827c         db  0x00 ; '.'
000000000020827d         db  0x00 ; '.'
000000000020827e         db  0x00 ; '.'
000000000020827f         db  0x00 ; '.'
0000000000208280         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000208281         db  0x00 ; '.'
0000000000208282         db  0x00 ; '.'
0000000000208283         db  0x00 ; '.'
0000000000208284         db  0x00 ; '.'
0000000000208285         db  0x00 ; '.'
0000000000208286         db  0x00 ; '.'
0000000000208287         db  0x00 ; '.'
0000000000208288         db  0x00 ; '.'
0000000000208289         db  0x00 ; '.'
000000000020828a         db  0x00 ; '.'
000000000020828b         db  0x00 ; '.'
000000000020828c         db  0x00 ; '.'
000000000020828d         db  0x00 ; '.'
000000000020828e         db  0x00 ; '.'
000000000020828f         db  0x00 ; '.'
                     qword_208290:
0000000000208290         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000208291         db  0x00 ; '.'
0000000000208292         db  0x00 ; '.'
0000000000208293         db  0x00 ; '.'
0000000000208294         db  0x00 ; '.'
0000000000208295         db  0x00 ; '.'
0000000000208296         db  0x00 ; '.'
0000000000208297         db  0x00 ; '.'
                     max_column_width:
0000000000208298         db  0x00 ; '.'                                         ; DATA XREF=add_tab_stop+100, add_tab_stop+120, finalize_tab_stops+175
0000000000208299         db  0x00 ; '.'
000000000020829a         db  0x00 ; '.'
000000000020829b         db  0x00 ; '.'
000000000020829c         db  0x00 ; '.'
000000000020829d         db  0x00 ; '.'
000000000020829e         db  0x00 ; '.'
000000000020829f         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x2082b0; 0x2085f0[ (832 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x2082b0; 0x4108a0[ (2131440 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __uflow:
00000000002082b0         extern function code                                   ; DATA XREF=__uflow@GOT
                     free:
00000000002082b8         extern function code                                   ; DATA XREF=free@GOT
                     abort:
00000000002082c0         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
00000000002082c8         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
00000000002082d0         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
00000000002082d8         extern function code
                     _exit:
00000000002082e0         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
00000000002082e8         extern function code                                   ; DATA XREF=__fpending@GOT
                     clearerr_unlocked:
00000000002082f0         extern function code                                   ; DATA XREF=clearerr_unlocked@GOT
                     textdomain:
00000000002082f8         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
0000000000208300         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
0000000000208308         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
0000000000208310         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
0000000000208318         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
0000000000208320         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
0000000000208328         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
0000000000208330         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
0000000000208338         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     __overflow:
0000000000208340         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
0000000000208348         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
0000000000208350         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
0000000000208358         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
0000000000208360         extern function code                                   ; DATA XREF=memset@GOT
                     strspn:
0000000000208368         extern function code                                   ; DATA XREF=strspn@GOT
                     posix_fadvise:
0000000000208370         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     strndup:
0000000000208378         extern function code                                   ; DATA XREF=strndup@GOT
                     __libc_start_main:
0000000000208380         extern function code
                     memcmp:
0000000000208388         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000208390         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000208398         extern function code                                   ; DATA XREF=calloc@GOT
                     __gmon_start__:
00000000002083a0         extern function code
                     memcpy:
00000000002083a8         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
00000000002083b0         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
00000000002083b8         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
00000000002083c0         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
00000000002083c8         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
00000000002083d0         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
00000000002083d8         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
00000000002083e0         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
00000000002083e8         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     error:
00000000002083f0         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
00000000002083f8         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
0000000000208400         extern function code                                   ; DATA XREF=fopen@GOT
                     __cxa_atexit:
0000000000208408         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
0000000000208410         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
0000000000208418         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
0000000000208420         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
0000000000208428         extern function code
                     mbsinit:
0000000000208430         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
0000000000208438         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
0000000000208440         extern function code
                     __ctype_b_loc:
0000000000208448         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __uflow@@GLIBC_2.2.5:
0000000000208450         extern function code
                     free@@GLIBC_2.2.5:
0000000000208458         extern function code
                     abort@@GLIBC_2.2.5:
0000000000208460         extern function code
                     __errno_location@@GLIBC_2.2.5:
0000000000208468         extern function code
                     strncmp@@GLIBC_2.2.5:
0000000000208470         extern function code
                     _ITM_deregisterTMCloneTable_208478:        // _ITM_deregisterTMCloneTable
0000000000208478         extern function code
                     _exit@@GLIBC_2.2.5:
0000000000208480         extern function code
                     __fpending@@GLIBC_2.2.5:
0000000000208488         extern function code
                     clearerr_unlocked@@GLIBC_2.2.5:
0000000000208490         extern function code
                     textdomain@@GLIBC_2.2.5:
0000000000208498         extern function code
                     fclose@@GLIBC_2.2.5:
00000000002084a0         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
00000000002084a8         extern function code
                     dcgettext@@GLIBC_2.2.5:
00000000002084b0         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
00000000002084b8         extern function code
                     strlen@@GLIBC_2.2.5:
00000000002084c0         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
00000000002084c8         extern function code
                     getopt_long@@GLIBC_2.2.5:
00000000002084d0         extern function code
                     mbrtowc@@GLIBC_2.2.5:
00000000002084d8         extern function code
                     __overflow@@GLIBC_2.2.5:
00000000002084e0         extern function code
                     strrchr@@GLIBC_2.2.5:
00000000002084e8         extern function code
                     lseek@@GLIBC_2.2.5:
00000000002084f0         extern function code
                     __assert_fail@@GLIBC_2.2.5:
00000000002084f8         extern function code
                     memset@@GLIBC_2.2.5:
0000000000208500         extern function code
                     strspn@@GLIBC_2.2.5:
0000000000208508         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
0000000000208510         extern function code
                     strndup@@GLIBC_2.2.5:
0000000000208518         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
0000000000208520         extern function code
                     memcmp@@GLIBC_2.2.5:
0000000000208528         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
0000000000208530         extern function code
                     calloc@@GLIBC_2.2.5:
0000000000208538         extern function code
                     __gmon_start___208540:        // __gmon_start__
0000000000208540         extern function code
                     memcpy@@GLIBC_2.14:
0000000000208548         extern function code
                     fileno@@GLIBC_2.2.5:
0000000000208550         extern function code
                     malloc@@GLIBC_2.2.5:
0000000000208558         extern function code
                     fflush@@GLIBC_2.2.5:
0000000000208560         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
0000000000208568         extern function code
                     __freading@@GLIBC_2.2.5:
0000000000208570         extern function code
                     realloc@@GLIBC_2.2.5:
0000000000208578         extern function code
                     setlocale@@GLIBC_2.2.5:
0000000000208580         extern function code
                     __printf_chk@@GLIBC_2.3.4:
0000000000208588         extern function code
                     error@@GLIBC_2.2.5:
0000000000208590         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000208598         extern function code
                     fopen@@GLIBC_2.2.5:
00000000002085a0         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
00000000002085a8         extern function code
                     exit@@GLIBC_2.2.5:
00000000002085b0         extern function code
                     fwrite@@GLIBC_2.2.5:
00000000002085b8         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
00000000002085c0         extern function code
                     _ITM_registerTMCloneTable_2085c8:        // _ITM_registerTMCloneTable
00000000002085c8         extern function code
                     mbsinit@@GLIBC_2.2.5:
00000000002085d0         extern function code
                     iswprint@@GLIBC_2.2.5:
00000000002085d8         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
00000000002085e0         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
00000000002085e8         extern function code
