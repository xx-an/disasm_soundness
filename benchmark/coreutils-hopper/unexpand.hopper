
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/unexpand
        UUID: D483F79A-06C7-ED8F-B270-DF00DD39692E
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x75b0[ (30128 bytes)
        ; File offset : [0; 30128[ (30128 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0xe0 ; '.'
0000000000000019         db  0x1c ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0xc8 ; '.'
0000000000000029         db  0x7e ; '~'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0xb0 ; '.'
00000000000000d1         db  0x75 ; 'u'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0xb0 ; '.'
00000000000000d9         db  0x75 ; 'u'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x10 ; '.'
00000000000000f1         db  0x7b ; '{'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x10 ; '.'
00000000000000f9         db  0x7b ; '{'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x10 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x7b ; '{'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x90 ; '.'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x90 ; '.'
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x38 ; '8'
0000000000000129         db  0x7c ; '|'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x38 ; '8'
0000000000000131         db  0x7c ; '|'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x38 ; '8'
0000000000000139         db  0x7c ; '|'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'                                         ; DATA XREF=next_file+503
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x70 ; 'p'
0000000000000199         db  0x66 ; 'f'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x70 ; 'p'
00000000000001a1         db  0x66 ; 'f'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x70 ; 'p'
00000000000001a9         db  0x66 ; 'f'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xa4 ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xa4 ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x10 ; '.'
0000000000000209         db  0x7b ; '{'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x10 ; '.'
0000000000000211         db  0x7b ; '{'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x10 ; '.'
0000000000000219         db  0x7b ; '{'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xf0 ; '.'
0000000000000221         db  0x04 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xf0 ; '.'
0000000000000229         db  0x04 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xd4 ; '.'
0000000000000285         db  0x83 ; '.'
0000000000000286         db  0xf7 ; '.'
0000000000000287         db  0x9a ; '.'
0000000000000288         db  0x06 ; '.'
0000000000000289         db  0xc7 ; '.'
000000000000028a         db  0xed ; '.'
000000000000028b         db  0x8f ; '.'
000000000000028c         db  0xb2 ; '.'
000000000000028d         db  0x70 ; 'p'
000000000000028e         db  0xdf ; '.'
000000000000028f         db  0x00 ; '.'
0000000000000290         db  0xdd ; '.'
0000000000000291         db  0x39 ; '9'
0000000000000292         db  0x69 ; 'i'
0000000000000293         db  0x2e ; '.'
0000000000000294         db  0x22 ; '"'
0000000000000295         db  0x12 ; '.'
0000000000000296         db  0x1c ; '.'
0000000000000297         db  0x5b ; '['


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x36 ; '6'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x36 ; '6'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x37 ; '7'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3d ; '='
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x32 ; '2'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0xb3 ; '.'
00000000000002dd         db  0xa2 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x8c8[ (1512 bytes)
        ; File offset : [736; 2248[ (1512 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x63 ; 'c'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x42 ; 'B'
0000000000000311         db  0x02 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x92 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x0b ; '.'
0000000000000341         db  0x01 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x49 ; 'I'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0xa6 ; '.'
0000000000000371         db  0x02 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x20 ; ' '
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x9e ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xb8 ; '.'
00000000000003a1         db  0x01 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x1f ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0xf4 ; '.'
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x4d ; 'M'
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0xf0 ; '.'
0000000000000401         db  0x01 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x60 ; '`'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xd1 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0xfd ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x70 ; 'p'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x9e ; '.'
0000000000000479         db  0x01 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x3b ; ';'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x28 ; '('
00000000000004a9         db  0x02 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x58 ; 'X'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x40 ; '@'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0xc3 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x04 ; '.'
0000000000000509         db  0x01 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0xa4 ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xe8 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x23 ; '#'
0000000000000551         db  0x01 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x0f ; '.'
0000000000000569         db  0x02 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x1c ; '.'
0000000000000581         db  0x01 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x33 ; '3'
0000000000000599         db  0x02 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0xf6 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0xc2 ; '.'
00000000000005c9         db  0x02 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x20 ; ' '
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x46 ; 'F'
00000000000005e1         db  0x01 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0xaa ; '.'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x54 ; 'T'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x0b ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x6b ; 'k'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x8c ; '.'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0xff ; '.'
0000000000000671         db  0x01 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x8a ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x31 ; '1'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x12 ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x6a ; 'j'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x21 ; '!'
00000000000006e9         db  0x02 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x43 ; 'C'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x62 ; 'b'
0000000000000719         db  0x02 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x9f ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0xb1 ; '.'
0000000000000749         db  0x01 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x2b ; '+'
0000000000000761         db  0x01 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0xd1 ; '.'
0000000000000779         db  0x02 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x20 ; ' '
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x5b ; '['
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x81 ; '.'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0xe1 ; '.'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x22 ; '"'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x77 ; 'w'
00000000000007d9         db  0x01 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x39 ; '9'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x11 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x19 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0xa8 ; '.'
00000000000007f9         db  0x80 ; '.'
00000000000007fa         db  0x20 ; ' '
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x08 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x47 ; 'G'
0000000000000809         db  0x02 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x11 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x19 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0xa0 ; '.'
0000000000000811         db  0x80 ; '.'
0000000000000812         db  0x20 ; ' '
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x08 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x98 ; '.'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x11 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x19 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0xb0 ; '.'
0000000000000829         db  0x80 ; '.'
000000000000082a         db  0x20 ; ' '
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x08 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0xab ; '.'
0000000000000839         db  0x00 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x21 ; '!'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x19 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0xc8 ; '.'
0000000000000841         db  0x80 ; '.'
0000000000000842         db  0x20 ; ' '
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x08 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x52 ; 'R'
0000000000000851         db  0x02 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x11 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0xc8 ; '.'
0000000000000859         db  0x80 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x08 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0xc3 ; '.'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x21 ; '!'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x19 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0xa0 ; '.'
0000000000000871         db  0x80 ; '.'
0000000000000872         db  0x20 ; ' '
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x08 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x97 ; '.'
0000000000000881         db  0x01 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x11 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x19 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0xe0 ; '.'
0000000000000889         db  0x80 ; '.'
000000000000088a         db  0x20 ; ' '
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x08 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x51 ; 'Q'
0000000000000899         db  0x00 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x11 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0xb8 ; '.'
00000000000008a1         db  0x80 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x04 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x85 ; '.'
00000000000008b1         db  0x01 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x11 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x19 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0xc0 ; '.'
00000000000008b9         db  0x80 ; '.'
00000000000008ba         db  0x20 ; ' '
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x08 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x8c8; 0xbb3[ (747 bytes)
        ; File offset : [2248; 2995[ (747 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

00000000000008c8         db  0x00 ; '.'
00000000000008c9         db  0x6c ; 'l'
00000000000008ca         db  0x69 ; 'i'
00000000000008cb         db  0x62 ; 'b'
00000000000008cc         db  0x63 ; 'c'
00000000000008cd         db  0x2e ; '.'
00000000000008ce         db  0x73 ; 's'
00000000000008cf         db  0x6f ; 'o'
00000000000008d0         db  0x2e ; '.'
00000000000008d1         db  0x36 ; '6'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x66 ; 'f'
00000000000008d4         db  0x66 ; 'f'
00000000000008d5         db  0x6c ; 'l'
00000000000008d6         db  0x75 ; 'u'
00000000000008d7         db  0x73 ; 's'
00000000000008d8         db  0x68 ; 'h'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x5f ; '_'
00000000000008db         db  0x5f ; '_'
00000000000008dc         db  0x70 ; 'p'
00000000000008dd         db  0x72 ; 'r'
00000000000008de         db  0x69 ; 'i'
00000000000008df         db  0x6e ; 'n'
00000000000008e0         db  0x74 ; 't'
00000000000008e1         db  0x66 ; 'f'
00000000000008e2         db  0x5f ; '_'
00000000000008e3         db  0x63 ; 'c'
00000000000008e4         db  0x68 ; 'h'
00000000000008e5         db  0x6b ; 'k'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x63 ; 'c'
00000000000008e8         db  0x6c ; 'l'
00000000000008e9         db  0x65 ; 'e'
00000000000008ea         db  0x61 ; 'a'
00000000000008eb         db  0x72 ; 'r'
00000000000008ec         db  0x65 ; 'e'
00000000000008ed         db  0x72 ; 'r'
00000000000008ee         db  0x72 ; 'r'
00000000000008ef         db  0x5f ; '_'
00000000000008f0         db  0x75 ; 'u'
00000000000008f1         db  0x6e ; 'n'
00000000000008f2         db  0x6c ; 'l'
00000000000008f3         db  0x6f ; 'o'
00000000000008f4         db  0x63 ; 'c'
00000000000008f5         db  0x6b ; 'k'
00000000000008f6         db  0x65 ; 'e'
00000000000008f7         db  0x64 ; 'd'
00000000000008f8         db  0x00 ; '.'
00000000000008f9         db  0x73 ; 's'
00000000000008fa         db  0x65 ; 'e'
00000000000008fb         db  0x74 ; 't'
00000000000008fc         db  0x6c ; 'l'
00000000000008fd         db  0x6f ; 'o'
00000000000008fe         db  0x63 ; 'c'
00000000000008ff         db  0x61 ; 'a'
0000000000000900         db  0x6c ; 'l'
0000000000000901         db  0x65 ; 'e'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x6d ; 'm'
0000000000000904         db  0x62 ; 'b'
0000000000000905         db  0x72 ; 'r'
0000000000000906         db  0x74 ; 't'
0000000000000907         db  0x6f ; 'o'
0000000000000908         db  0x77 ; 'w'
0000000000000909         db  0x63 ; 'c'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x66 ; 'f'
000000000000090c         db  0x6f ; 'o'
000000000000090d         db  0x70 ; 'p'
000000000000090e         db  0x65 ; 'e'
000000000000090f         db  0x6e ; 'n'
0000000000000910         db  0x00 ; '.'
0000000000000911         db  0x73 ; 's'
0000000000000912         db  0x74 ; 't'
0000000000000913         db  0x72 ; 'r'
0000000000000914         db  0x6e ; 'n'
0000000000000915         db  0x63 ; 'c'
0000000000000916         db  0x6d ; 'm'
0000000000000917         db  0x70 ; 'p'
0000000000000918         db  0x00 ; '.'
0000000000000919         db  0x6f ; 'o'
000000000000091a         db  0x70 ; 'p'
000000000000091b         db  0x74 ; 't'
000000000000091c         db  0x69 ; 'i'
000000000000091d         db  0x6e ; 'n'
000000000000091e         db  0x64 ; 'd'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x73 ; 's'
0000000000000921         db  0x74 ; 't'
0000000000000922         db  0x72 ; 'r'
0000000000000923         db  0x72 ; 'r'
0000000000000924         db  0x63 ; 'c'
0000000000000925         db  0x68 ; 'h'
0000000000000926         db  0x72 ; 'r'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x64 ; 'd'
0000000000000929         db  0x63 ; 'c'
000000000000092a         db  0x67 ; 'g'
000000000000092b         db  0x65 ; 'e'
000000000000092c         db  0x74 ; 't'
000000000000092d         db  0x74 ; 't'
000000000000092e         db  0x65 ; 'e'
000000000000092f         db  0x78 ; 'x'
0000000000000930         db  0x74 ; 't'
0000000000000931         db  0x00 ; '.'
0000000000000932         db  0x65 ; 'e'
0000000000000933         db  0x72 ; 'r'
0000000000000934         db  0x72 ; 'r'
0000000000000935         db  0x6f ; 'o'
0000000000000936         db  0x72 ; 'r'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x5f ; '_'
0000000000000939         db  0x5f ; '_'
000000000000093a         db  0x73 ; 's'
000000000000093b         db  0x74 ; 't'
000000000000093c         db  0x61 ; 'a'
000000000000093d         db  0x63 ; 'c'
000000000000093e         db  0x6b ; 'k'
000000000000093f         db  0x5f ; '_'
0000000000000940         db  0x63 ; 'c'
0000000000000941         db  0x68 ; 'h'
0000000000000942         db  0x6b ; 'k'
0000000000000943         db  0x5f ; '_'
0000000000000944         db  0x66 ; 'f'
0000000000000945         db  0x61 ; 'a'
0000000000000946         db  0x69 ; 'i'
0000000000000947         db  0x6c ; 'l'
0000000000000948         db  0x00 ; '.'
0000000000000949         db  0x69 ; 'i'
000000000000094a         db  0x73 ; 's'
000000000000094b         db  0x77 ; 'w'
000000000000094c         db  0x70 ; 'p'
000000000000094d         db  0x72 ; 'r'
000000000000094e         db  0x69 ; 'i'
000000000000094f         db  0x6e ; 'n'
0000000000000950         db  0x74 ; 't'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x72 ; 'r'
0000000000000953         db  0x65 ; 'e'
0000000000000954         db  0x61 ; 'a'
0000000000000955         db  0x6c ; 'l'
0000000000000956         db  0x6c ; 'l'
0000000000000957         db  0x6f ; 'o'
0000000000000958         db  0x63 ; 'c'
0000000000000959         db  0x00 ; '.'
000000000000095a         db  0x61 ; 'a'
000000000000095b         db  0x62 ; 'b'
000000000000095c         db  0x6f ; 'o'
000000000000095d         db  0x72 ; 'r'
000000000000095e         db  0x74 ; 't'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0x73 ; 's'
0000000000000961         db  0x74 ; 't'
0000000000000962         db  0x64 ; 'd'
0000000000000963         db  0x69 ; 'i'
0000000000000964         db  0x6e ; 'n'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x5f ; '_'
0000000000000967         db  0x65 ; 'e'
0000000000000968         db  0x78 ; 'x'
0000000000000969         db  0x69 ; 'i'
000000000000096a         db  0x74 ; 't'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x73 ; 's'
000000000000096d         db  0x74 ; 't'
000000000000096e         db  0x72 ; 'r'
000000000000096f         db  0x73 ; 's'
0000000000000970         db  0x70 ; 'p'
0000000000000971         db  0x6e ; 'n'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x70 ; 'p'
0000000000000974         db  0x72 ; 'r'
0000000000000975         db  0x6f ; 'o'
0000000000000976         db  0x67 ; 'g'
0000000000000977         db  0x72 ; 'r'
0000000000000978         db  0x61 ; 'a'
0000000000000979         db  0x6d ; 'm'
000000000000097a         db  0x5f ; '_'
000000000000097b         db  0x69 ; 'i'
000000000000097c         db  0x6e ; 'n'
000000000000097d         db  0x76 ; 'v'
000000000000097e         db  0x6f ; 'o'
000000000000097f         db  0x63 ; 'c'
0000000000000980         db  0x61 ; 'a'
0000000000000981         db  0x74 ; 't'
0000000000000982         db  0x69 ; 'i'
0000000000000983         db  0x6f ; 'o'
0000000000000984         db  0x6e ; 'n'
0000000000000985         db  0x5f ; '_'
0000000000000986         db  0x6e ; 'n'
0000000000000987         db  0x61 ; 'a'
0000000000000988         db  0x6d ; 'm'
0000000000000989         db  0x65 ; 'e'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x5f ; '_'
000000000000098c         db  0x5f ; '_'
000000000000098d         db  0x61 ; 'a'
000000000000098e         db  0x73 ; 's'
000000000000098f         db  0x73 ; 's'
0000000000000990         db  0x65 ; 'e'
0000000000000991         db  0x72 ; 'r'
0000000000000992         db  0x74 ; 't'
0000000000000993         db  0x5f ; '_'
0000000000000994         db  0x66 ; 'f'
0000000000000995         db  0x61 ; 'a'
0000000000000996         db  0x69 ; 'i'
0000000000000997         db  0x6c ; 'l'
0000000000000998         db  0x00 ; '.'
0000000000000999         db  0x5f ; '_'
000000000000099a         db  0x5f ; '_'
000000000000099b         db  0x63 ; 'c'
000000000000099c         db  0x74 ; 't'
000000000000099d         db  0x79 ; 'y'
000000000000099e         db  0x70 ; 'p'
000000000000099f         db  0x65 ; 'e'
00000000000009a0         db  0x5f ; '_'
00000000000009a1         db  0x67 ; 'g'
00000000000009a2         db  0x65 ; 'e'
00000000000009a3         db  0x74 ; 't'
00000000000009a4         db  0x5f ; '_'
00000000000009a5         db  0x6d ; 'm'
00000000000009a6         db  0x62 ; 'b'
00000000000009a7         db  0x5f ; '_'
00000000000009a8         db  0x63 ; 'c'
00000000000009a9         db  0x75 ; 'u'
00000000000009aa         db  0x72 ; 'r'
00000000000009ab         db  0x5f ; '_'
00000000000009ac         db  0x6d ; 'm'
00000000000009ad         db  0x61 ; 'a'
00000000000009ae         db  0x78 ; 'x'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x70 ; 'p'
00000000000009b1         db  0x6f ; 'o'
00000000000009b2         db  0x73 ; 's'
00000000000009b3         db  0x69 ; 'i'
00000000000009b4         db  0x78 ; 'x'
00000000000009b5         db  0x5f ; '_'
00000000000009b6         db  0x66 ; 'f'
00000000000009b7         db  0x61 ; 'a'
00000000000009b8         db  0x64 ; 'd'
00000000000009b9         db  0x76 ; 'v'
00000000000009ba         db  0x69 ; 'i'
00000000000009bb         db  0x73 ; 's'
00000000000009bc         db  0x65 ; 'e'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x63 ; 'c'
00000000000009bf         db  0x61 ; 'a'
00000000000009c0         db  0x6c ; 'l'
00000000000009c1         db  0x6c ; 'l'
00000000000009c2         db  0x6f ; 'o'
00000000000009c3         db  0x63 ; 'c'
00000000000009c4         db  0x00 ; '.'
00000000000009c5         db  0x73 ; 's'
00000000000009c6         db  0x74 ; 't'
00000000000009c7         db  0x72 ; 'r'
00000000000009c8         db  0x6c ; 'l'
00000000000009c9         db  0x65 ; 'e'
00000000000009ca         db  0x6e ; 'n'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x6d ; 'm'
00000000000009cd         db  0x65 ; 'e'
00000000000009ce         db  0x6d ; 'm'
00000000000009cf         db  0x73 ; 's'
00000000000009d0         db  0x65 ; 'e'
00000000000009d1         db  0x74 ; 't'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x5f ; '_'
00000000000009d4         db  0x5f ; '_'
00000000000009d5         db  0x65 ; 'e'
00000000000009d6         db  0x72 ; 'r'
00000000000009d7         db  0x72 ; 'r'
00000000000009d8         db  0x6e ; 'n'
00000000000009d9         db  0x6f ; 'o'
00000000000009da         db  0x5f ; '_'
00000000000009db         db  0x6c ; 'l'
00000000000009dc         db  0x6f ; 'o'
00000000000009dd         db  0x63 ; 'c'
00000000000009de         db  0x61 ; 'a'
00000000000009df         db  0x74 ; 't'
00000000000009e0         db  0x69 ; 'i'
00000000000009e1         db  0x6f ; 'o'
00000000000009e2         db  0x6e ; 'n'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x6d ; 'm'
00000000000009e5         db  0x65 ; 'e'
00000000000009e6         db  0x6d ; 'm'
00000000000009e7         db  0x63 ; 'c'
00000000000009e8         db  0x6d ; 'm'
00000000000009e9         db  0x70 ; 'p'
00000000000009ea         db  0x00 ; '.'
00000000000009eb         db  0x73 ; 's'
00000000000009ec         db  0x74 ; 't'
00000000000009ed         db  0x72 ; 'r'
00000000000009ee         db  0x6e ; 'n'
00000000000009ef         db  0x64 ; 'd'
00000000000009f0         db  0x75 ; 'u'
00000000000009f1         db  0x70 ; 'p'
00000000000009f2         db  0x00 ; '.'
00000000000009f3         db  0x5f ; '_'
00000000000009f4         db  0x5f ; '_'
00000000000009f5         db  0x66 ; 'f'
00000000000009f6         db  0x70 ; 'p'
00000000000009f7         db  0x72 ; 'r'
00000000000009f8         db  0x69 ; 'i'
00000000000009f9         db  0x6e ; 'n'
00000000000009fa         db  0x74 ; 't'
00000000000009fb         db  0x66 ; 'f'
00000000000009fc         db  0x5f ; '_'
00000000000009fd         db  0x63 ; 'c'
00000000000009fe         db  0x68 ; 'h'
00000000000009ff         db  0x6b ; 'k'
0000000000000a00         db  0x00 ; '.'
0000000000000a01         db  0x73 ; 's'
0000000000000a02         db  0x74 ; 't'
0000000000000a03         db  0x64 ; 'd'
0000000000000a04         db  0x6f ; 'o'
0000000000000a05         db  0x75 ; 'u'
0000000000000a06         db  0x74 ; 't'
0000000000000a07         db  0x00 ; '.'
0000000000000a08         db  0x6c ; 'l'
0000000000000a09         db  0x73 ; 's'
0000000000000a0a         db  0x65 ; 'e'
0000000000000a0b         db  0x65 ; 'e'
0000000000000a0c         db  0x6b ; 'k'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x6d ; 'm'
0000000000000a0f         db  0x65 ; 'e'
0000000000000a10         db  0x6d ; 'm'
0000000000000a11         db  0x63 ; 'c'
0000000000000a12         db  0x70 ; 'p'
0000000000000a13         db  0x79 ; 'y'
0000000000000a14         db  0x00 ; '.'
0000000000000a15         db  0x66 ; 'f'
0000000000000a16         db  0x63 ; 'c'
0000000000000a17         db  0x6c ; 'l'
0000000000000a18         db  0x6f ; 'o'
0000000000000a19         db  0x73 ; 's'
0000000000000a1a         db  0x65 ; 'e'
0000000000000a1b         db  0x00 ; '.'
0000000000000a1c         db  0x6d ; 'm'
0000000000000a1d         db  0x61 ; 'a'
0000000000000a1e         db  0x6c ; 'l'
0000000000000a1f         db  0x6c ; 'l'
0000000000000a20         db  0x6f ; 'o'
0000000000000a21         db  0x63 ; 'c'
0000000000000a22         db  0x00 ; '.'
0000000000000a23         db  0x6d ; 'm'
0000000000000a24         db  0x62 ; 'b'
0000000000000a25         db  0x73 ; 's'
0000000000000a26         db  0x69 ; 'i'
0000000000000a27         db  0x6e ; 'n'
0000000000000a28         db  0x69 ; 'i'
0000000000000a29         db  0x74 ; 't'
0000000000000a2a         db  0x00 ; '.'
0000000000000a2b         db  0x5f ; '_'
0000000000000a2c         db  0x5f ; '_'
0000000000000a2d         db  0x75 ; 'u'
0000000000000a2e         db  0x66 ; 'f'
0000000000000a2f         db  0x6c ; 'l'
0000000000000a30         db  0x6f ; 'o'
0000000000000a31         db  0x77 ; 'w'
0000000000000a32         db  0x00 ; '.'
0000000000000a33         db  0x6e ; 'n'
0000000000000a34         db  0x6c ; 'l'
0000000000000a35         db  0x5f ; '_'
0000000000000a36         db  0x6c ; 'l'
0000000000000a37         db  0x61 ; 'a'
0000000000000a38         db  0x6e ; 'n'
0000000000000a39         db  0x67 ; 'g'
0000000000000a3a         db  0x69 ; 'i'
0000000000000a3b         db  0x6e ; 'n'
0000000000000a3c         db  0x66 ; 'f'
0000000000000a3d         db  0x6f ; 'o'
0000000000000a3e         db  0x00 ; '.'
0000000000000a3f         db  0x5f ; '_'
0000000000000a40         db  0x5f ; '_'
0000000000000a41         db  0x63 ; 'c'
0000000000000a42         db  0x74 ; 't'
0000000000000a43         db  0x79 ; 'y'
0000000000000a44         db  0x70 ; 'p'
0000000000000a45         db  0x65 ; 'e'
0000000000000a46         db  0x5f ; '_'
0000000000000a47         db  0x62 ; 'b'
0000000000000a48         db  0x5f ; '_'
0000000000000a49         db  0x6c ; 'l'
0000000000000a4a         db  0x6f ; 'o'
0000000000000a4b         db  0x63 ; 'c'
0000000000000a4c         db  0x00 ; '.'
0000000000000a4d         db  0x6f ; 'o'
0000000000000a4e         db  0x70 ; 'p'
0000000000000a4f         db  0x74 ; 't'
0000000000000a50         db  0x61 ; 'a'
0000000000000a51         db  0x72 ; 'r'
0000000000000a52         db  0x67 ; 'g'
0000000000000a53         db  0x00 ; '.'
0000000000000a54         db  0x5f ; '_'
0000000000000a55         db  0x5f ; '_'
0000000000000a56         db  0x66 ; 'f'
0000000000000a57         db  0x72 ; 'r'
0000000000000a58         db  0x65 ; 'e'
0000000000000a59         db  0x61 ; 'a'
0000000000000a5a         db  0x64 ; 'd'
0000000000000a5b         db  0x69 ; 'i'
0000000000000a5c         db  0x6e ; 'n'
0000000000000a5d         db  0x67 ; 'g'
0000000000000a5e         db  0x00 ; '.'
0000000000000a5f         db  0x73 ; 's'
0000000000000a60         db  0x74 ; 't'
0000000000000a61         db  0x64 ; 'd'
0000000000000a62         db  0x65 ; 'e'
0000000000000a63         db  0x72 ; 'r'
0000000000000a64         db  0x72 ; 'r'
0000000000000a65         db  0x00 ; '.'
0000000000000a66         db  0x67 ; 'g'
0000000000000a67         db  0x65 ; 'e'
0000000000000a68         db  0x74 ; 't'
0000000000000a69         db  0x6f ; 'o'
0000000000000a6a         db  0x70 ; 'p'
0000000000000a6b         db  0x74 ; 't'
0000000000000a6c         db  0x5f ; '_'
0000000000000a6d         db  0x6c ; 'l'
0000000000000a6e         db  0x6f ; 'o'
0000000000000a6f         db  0x6e ; 'n'
0000000000000a70         db  0x67 ; 'g'
0000000000000a71         db  0x00 ; '.'
0000000000000a72         db  0x66 ; 'f'
0000000000000a73         db  0x69 ; 'i'
0000000000000a74         db  0x6c ; 'l'
0000000000000a75         db  0x65 ; 'e'
0000000000000a76         db  0x6e ; 'n'
0000000000000a77         db  0x6f ; 'o'
0000000000000a78         db  0x00 ; '.'
0000000000000a79         db  0x66 ; 'f'
0000000000000a7a         db  0x77 ; 'w'
0000000000000a7b         db  0x72 ; 'r'
0000000000000a7c         db  0x69 ; 'i'
0000000000000a7d         db  0x74 ; 't'
0000000000000a7e         db  0x65 ; 'e'
0000000000000a7f         db  0x00 ; '.'
0000000000000a80         db  0x5f ; '_'
0000000000000a81         db  0x5f ; '_'
0000000000000a82         db  0x66 ; 'f'
0000000000000a83         db  0x70 ; 'p'
0000000000000a84         db  0x65 ; 'e'
0000000000000a85         db  0x6e ; 'n'
0000000000000a86         db  0x64 ; 'd'
0000000000000a87         db  0x69 ; 'i'
0000000000000a88         db  0x6e ; 'n'
0000000000000a89         db  0x67 ; 'g'
0000000000000a8a         db  0x00 ; '.'
0000000000000a8b         db  0x70 ; 'p'
0000000000000a8c         db  0x72 ; 'r'
0000000000000a8d         db  0x6f ; 'o'
0000000000000a8e         db  0x67 ; 'g'
0000000000000a8f         db  0x72 ; 'r'
0000000000000a90         db  0x61 ; 'a'
0000000000000a91         db  0x6d ; 'm'
0000000000000a92         db  0x5f ; '_'
0000000000000a93         db  0x69 ; 'i'
0000000000000a94         db  0x6e ; 'n'
0000000000000a95         db  0x76 ; 'v'
0000000000000a96         db  0x6f ; 'o'
0000000000000a97         db  0x63 ; 'c'
0000000000000a98         db  0x61 ; 'a'
0000000000000a99         db  0x74 ; 't'
0000000000000a9a         db  0x69 ; 'i'
0000000000000a9b         db  0x6f ; 'o'
0000000000000a9c         db  0x6e ; 'n'
0000000000000a9d         db  0x5f ; '_'
0000000000000a9e         db  0x73 ; 's'
0000000000000a9f         db  0x68 ; 'h'
0000000000000aa0         db  0x6f ; 'o'
0000000000000aa1         db  0x72 ; 'r'
0000000000000aa2         db  0x74 ; 't'
0000000000000aa3         db  0x5f ; '_'
0000000000000aa4         db  0x6e ; 'n'
0000000000000aa5         db  0x61 ; 'a'
0000000000000aa6         db  0x6d ; 'm'
0000000000000aa7         db  0x65 ; 'e'
0000000000000aa8         db  0x00 ; '.'
0000000000000aa9         db  0x5f ; '_'
0000000000000aaa         db  0x5f ; '_'
0000000000000aab         db  0x63 ; 'c'
0000000000000aac         db  0x78 ; 'x'
0000000000000aad         db  0x61 ; 'a'
0000000000000aae         db  0x5f ; '_'
0000000000000aaf         db  0x66 ; 'f'
0000000000000ab0         db  0x69 ; 'i'
0000000000000ab1         db  0x6e ; 'n'
0000000000000ab2         db  0x61 ; 'a'
0000000000000ab3         db  0x6c ; 'l'
0000000000000ab4         db  0x69 ; 'i'
0000000000000ab5         db  0x7a ; 'z'
0000000000000ab6         db  0x65 ; 'e'
0000000000000ab7         db  0x00 ; '.'
0000000000000ab8         db  0x62 ; 'b'
0000000000000ab9         db  0x69 ; 'i'
0000000000000aba         db  0x6e ; 'n'
0000000000000abb         db  0x64 ; 'd'
0000000000000abc         db  0x74 ; 't'
0000000000000abd         db  0x65 ; 'e'
0000000000000abe         db  0x78 ; 'x'
0000000000000abf         db  0x74 ; 't'
0000000000000ac0         db  0x64 ; 'd'
0000000000000ac1         db  0x6f ; 'o'
0000000000000ac2         db  0x6d ; 'm'
0000000000000ac3         db  0x61 ; 'a'
0000000000000ac4         db  0x69 ; 'i'
0000000000000ac5         db  0x6e ; 'n'
0000000000000ac6         db  0x00 ; '.'
0000000000000ac7         db  0x66 ; 'f'
0000000000000ac8         db  0x77 ; 'w'
0000000000000ac9         db  0x72 ; 'r'
0000000000000aca         db  0x69 ; 'i'
0000000000000acb         db  0x74 ; 't'
0000000000000acc         db  0x65 ; 'e'
0000000000000acd         db  0x5f ; '_'
0000000000000ace         db  0x75 ; 'u'
0000000000000acf         db  0x6e ; 'n'
0000000000000ad0         db  0x6c ; 'l'
0000000000000ad1         db  0x6f ; 'o'
0000000000000ad2         db  0x63 ; 'c'
0000000000000ad3         db  0x6b ; 'k'
0000000000000ad4         db  0x65 ; 'e'
0000000000000ad5         db  0x64 ; 'd'
0000000000000ad6         db  0x00 ; '.'
0000000000000ad7         db  0x5f ; '_'
0000000000000ad8         db  0x5f ; '_'
0000000000000ad9         db  0x6c ; 'l'
0000000000000ada         db  0x69 ; 'i'
0000000000000adb         db  0x62 ; 'b'
0000000000000adc         db  0x63 ; 'c'
0000000000000add         db  0x5f ; '_'
0000000000000ade         db  0x73 ; 's'
0000000000000adf         db  0x74 ; 't'
0000000000000ae0         db  0x61 ; 'a'
0000000000000ae1         db  0x72 ; 'r'
0000000000000ae2         db  0x74 ; 't'
0000000000000ae3         db  0x5f ; '_'
0000000000000ae4         db  0x6d ; 'm'
0000000000000ae5         db  0x61 ; 'a'
0000000000000ae6         db  0x69 ; 'i'
0000000000000ae7         db  0x6e ; 'n'
0000000000000ae8         db  0x00 ; '.'
0000000000000ae9         db  0x66 ; 'f'
0000000000000aea         db  0x73 ; 's'
0000000000000aeb         db  0x65 ; 'e'
0000000000000aec         db  0x65 ; 'e'
0000000000000aed         db  0x6b ; 'k'
0000000000000aee         db  0x6f ; 'o'
0000000000000aef         db  0x00 ; '.'
0000000000000af0         db  0x5f ; '_'
0000000000000af1         db  0x5f ; '_'
0000000000000af2         db  0x6f ; 'o'
0000000000000af3         db  0x76 ; 'v'
0000000000000af4         db  0x65 ; 'e'
0000000000000af5         db  0x72 ; 'r'
0000000000000af6         db  0x66 ; 'f'
0000000000000af7         db  0x6c ; 'l'
0000000000000af8         db  0x6f ; 'o'
0000000000000af9         db  0x77 ; 'w'
0000000000000afa         db  0x00 ; '.'
0000000000000afb         db  0x66 ; 'f'
0000000000000afc         db  0x70 ; 'p'
0000000000000afd         db  0x75 ; 'u'
0000000000000afe         db  0x74 ; 't'
0000000000000aff         db  0x73 ; 's'
                     aUnlocked:
0000000000000b00         db         "_unlocked", 0
0000000000000b0a         db  0x66 ; 'f'
0000000000000b0b         db  0x72 ; 'r'
0000000000000b0c         db  0x65 ; 'e'
0000000000000b0d         db  0x65 ; 'e'
0000000000000b0e         db  0x00 ; '.'
0000000000000b0f         db  0x5f ; '_'
0000000000000b10         db  0x5f ; '_'
0000000000000b11         db  0x70 ; 'p'
0000000000000b12         db  0x72 ; 'r'
0000000000000b13         db  0x6f ; 'o'
0000000000000b14         db  0x67 ; 'g'
0000000000000b15         db  0x6e ; 'n'
0000000000000b16         db  0x61 ; 'a'
0000000000000b17         db  0x6d ; 'm'
0000000000000b18         db  0x65 ; 'e'
0000000000000b19         db  0x00 ; '.'
0000000000000b1a         db  0x5f ; '_'
0000000000000b1b         db  0x5f ; '_'
0000000000000b1c         db  0x70 ; 'p'
0000000000000b1d         db  0x72 ; 'r'
0000000000000b1e         db  0x6f ; 'o'
0000000000000b1f         db  0x67 ; 'g'
0000000000000b20         db  0x6e ; 'n'
0000000000000b21         db  0x61 ; 'a'
0000000000000b22         db  0x6d ; 'm'
0000000000000b23         db  0x65 ; 'e'
0000000000000b24         db  0x5f ; '_'
0000000000000b25         db  0x66 ; 'f'
0000000000000b26         db  0x75 ; 'u'
0000000000000b27         db  0x6c ; 'l'
0000000000000b28         db  0x6c ; 'l'
0000000000000b29         db  0x00 ; '.'
0000000000000b2a         db  0x5f ; '_'
0000000000000b2b         db  0x5f ; '_'
0000000000000b2c         db  0x63 ; 'c'
0000000000000b2d         db  0x78 ; 'x'
0000000000000b2e         db  0x61 ; 'a'
0000000000000b2f         db  0x5f ; '_'
0000000000000b30         db  0x61 ; 'a'
0000000000000b31         db  0x74 ; 't'
0000000000000b32         db  0x65 ; 'e'
0000000000000b33         db  0x78 ; 'x'
0000000000000b34         db  0x69 ; 'i'
0000000000000b35         db  0x74 ; 't'
0000000000000b36         db  0x00 ; '.'
0000000000000b37         db  0x47 ; 'G'
0000000000000b38         db  0x4c ; 'L'
0000000000000b39         db  0x49 ; 'I'
0000000000000b3a         db  0x42 ; 'B'
0000000000000b3b         db  0x43 ; 'C'
0000000000000b3c         db  0x5f ; '_'
0000000000000b3d         db  0x32 ; '2'
0000000000000b3e         db  0x2e ; '.'
0000000000000b3f         db  0x33 ; '3'
0000000000000b40         db  0x00 ; '.'
                     aGlibc234:
0000000000000b41         db         "GLIBC_2.3.4", 0
0000000000000b4d         db  0x47 ; 'G'
0000000000000b4e         db  0x4c ; 'L'
0000000000000b4f         db  0x49 ; 'I'
0000000000000b50         db  0x42 ; 'B'
0000000000000b51         db  0x43 ; 'C'
0000000000000b52         db  0x5f ; '_'
0000000000000b53         db  0x32 ; '2'
0000000000000b54         db  0x2e ; '.'
0000000000000b55         db  0x31 ; '1'
0000000000000b56         db  0x34 ; '4'
0000000000000b57         db  0x00 ; '.'
0000000000000b58         db  0x47 ; 'G'
0000000000000b59         db  0x4c ; 'L'
0000000000000b5a         db  0x49 ; 'I'
0000000000000b5b         db  0x42 ; 'B'
0000000000000b5c         db  0x43 ; 'C'
0000000000000b5d         db  0x5f ; '_'
0000000000000b5e         db  0x32 ; '2'
0000000000000b5f         db  0x2e ; '.'
0000000000000b60         db  0x34 ; '4'
0000000000000b61         db  0x00 ; '.'
0000000000000b62         db  0x47 ; 'G'
0000000000000b63         db  0x4c ; 'L'
0000000000000b64         db  0x49 ; 'I'
0000000000000b65         db  0x42 ; 'B'
0000000000000b66         db  0x43 ; 'C'
0000000000000b67         db  0x5f ; '_'
0000000000000b68         db  0x32 ; '2'
0000000000000b69         db  0x2e ; '.'
0000000000000b6a         db  0x32 ; '2'
0000000000000b6b         db  0x2e ; '.'
0000000000000b6c         db  0x35 ; '5'
0000000000000b6d         db  0x00 ; '.'
0000000000000b6e         db  0x5f ; '_'
0000000000000b6f         db  0x49 ; 'I'
0000000000000b70         db  0x54 ; 'T'
0000000000000b71         db  0x4d ; 'M'
0000000000000b72         db  0x5f ; '_'
0000000000000b73         db  0x64 ; 'd'
0000000000000b74         db  0x65 ; 'e'
0000000000000b75         db  0x72 ; 'r'
0000000000000b76         db  0x65 ; 'e'
0000000000000b77         db  0x67 ; 'g'
0000000000000b78         db  0x69 ; 'i'
0000000000000b79         db  0x73 ; 's'
0000000000000b7a         db  0x74 ; 't'
0000000000000b7b         db  0x65 ; 'e'
0000000000000b7c         db  0x72 ; 'r'
0000000000000b7d         db  0x54 ; 'T'
0000000000000b7e         db  0x4d ; 'M'
0000000000000b7f         db  0x43 ; 'C'
0000000000000b80         db  0x6c ; 'l'
0000000000000b81         db  0x6f ; 'o'
0000000000000b82         db  0x6e ; 'n'
0000000000000b83         db  0x65 ; 'e'
0000000000000b84         db  0x54 ; 'T'
0000000000000b85         db  0x61 ; 'a'
0000000000000b86         db  0x62 ; 'b'
0000000000000b87         db  0x6c ; 'l'
0000000000000b88         db  0x65 ; 'e'
0000000000000b89         db  0x00 ; '.'
0000000000000b8a         db  0x5f ; '_'
0000000000000b8b         db  0x5f ; '_'
0000000000000b8c         db  0x67 ; 'g'
0000000000000b8d         db  0x6d ; 'm'
0000000000000b8e         db  0x6f ; 'o'
0000000000000b8f         db  0x6e ; 'n'
0000000000000b90         db  0x5f ; '_'
0000000000000b91         db  0x73 ; 's'
0000000000000b92         db  0x74 ; 't'
0000000000000b93         db  0x61 ; 'a'
0000000000000b94         db  0x72 ; 'r'
0000000000000b95         db  0x74 ; 't'
0000000000000b96         db  0x5f ; '_'
0000000000000b97         db  0x5f ; '_'
0000000000000b98         db  0x00 ; '.'
0000000000000b99         db  0x5f ; '_'
0000000000000b9a         db  0x49 ; 'I'
0000000000000b9b         db  0x54 ; 'T'
0000000000000b9c         db  0x4d ; 'M'
0000000000000b9d         db  0x5f ; '_'
0000000000000b9e         db  0x72 ; 'r'
0000000000000b9f         db  0x65 ; 'e'
0000000000000ba0         db  0x67 ; 'g'
0000000000000ba1         db  0x69 ; 'i'
0000000000000ba2         db  0x73 ; 's'
0000000000000ba3         db  0x74 ; 't'
0000000000000ba4         db  0x65 ; 'e'
0000000000000ba5         db  0x72 ; 'r'
0000000000000ba6         db  0x54 ; 'T'
0000000000000ba7         db  0x4d ; 'M'
0000000000000ba8         db  0x43 ; 'C'
0000000000000ba9         db  0x6c ; 'l'
0000000000000baa         db  0x6f ; 'o'
0000000000000bab         db  0x6e ; 'n'
0000000000000bac         db  0x65 ; 'e'
0000000000000bad         db  0x54 ; 'T'
0000000000000bae         db  0x61 ; 'a'
0000000000000baf         db  0x62 ; 'b'
0000000000000bb0         db  0x6c ; 'l'
0000000000000bb1         db  0x65 ; 'e'
0000000000000bb2         db  0x00 ; '.'
0000000000000bb3         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xbb4; 0xc32[ (126 bytes)
        ; File offset : [2996; 3122[ (126 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000bb4         db  0x00 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x02 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x02 ; '.'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x02 ; '.'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x02 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x02 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x00 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x02 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x02 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x02 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x02 ; '.'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x02 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x02 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x02 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x02 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x02 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x03 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x02 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x02 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x02 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x02 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x02 ; '.'
0000000000000bdf         db  0x00 ; '.'
0000000000000be0         db  0x02 ; '.'
0000000000000be1         db  0x00 ; '.'
0000000000000be2         db  0x02 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x02 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x02 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x02 ; '.'
0000000000000be9         db  0x00 ; '.'
0000000000000bea         db  0x02 ; '.'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x02 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x02 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x02 ; '.'
0000000000000bf1         db  0x00 ; '.'
0000000000000bf2         db  0x00 ; '.'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x04 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x02 ; '.'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x02 ; '.'
0000000000000bf9         db  0x00 ; '.'
0000000000000bfa         db  0x02 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x02 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x02 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x02 ; '.'
0000000000000c01         db  0x00 ; '.'
0000000000000c02         db  0x02 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x02 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x05 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x02 ; '.'
0000000000000c09         db  0x00 ; '.'
0000000000000c0a         db  0x02 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x02 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x02 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x02 ; '.'
0000000000000c11         db  0x00 ; '.'
0000000000000c12         db  0x02 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x05 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x00 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x02 ; '.'
0000000000000c19         db  0x00 ; '.'
0000000000000c1a         db  0x02 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x02 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x06 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x02 ; '.'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x02 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x02 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x02 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x02 ; '.'
0000000000000c29         db  0x00 ; '.'
0000000000000c2a         db  0x02 ; '.'
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x02 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x02 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x02 ; '.'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x00 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x00 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x00 ; '.'
0000000000000c37         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xc38; 0xc98[ (96 bytes)
        ; File offset : [3128; 3224[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c38         db  0x01 ; '.'
0000000000000c39         db  0x00 ; '.'
0000000000000c3a         db  0x05 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x01 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x00 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x10 ; '.'
0000000000000c41         db  0x00 ; '.'
0000000000000c42         db  0x00 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x00 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x13 ; '.'
0000000000000c49         db  0x69 ; 'i'
0000000000000c4a         db  0x69 ; 'i'
0000000000000c4b         db  0x0d ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x06 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x6f ; 'o'
0000000000000c51         db  0x02 ; '.'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x10 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x74 ; 't'
0000000000000c59         db  0x19 ; '.'
0000000000000c5a         db  0x69 ; 'i'
0000000000000c5b         db  0x09 ; '.'
0000000000000c5c         db  0x00 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x05 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x79 ; 'y'
0000000000000c61         db  0x02 ; '.'
0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x10 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x94 ; '.'
0000000000000c69         db  0x91 ; '.'
0000000000000c6a         db  0x96 ; '.'
0000000000000c6b         db  0x06 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x04 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x85 ; '.'
0000000000000c71         db  0x02 ; '.'
0000000000000c72         db  0x00 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x10 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x14 ; '.'
0000000000000c79         db  0x69 ; 'i'
0000000000000c7a         db  0x69 ; 'i'
0000000000000c7b         db  0x0d ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x03 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x90 ; '.'
0000000000000c81         db  0x02 ; '.'
0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x10 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x75 ; 'u'
0000000000000c89         db  0x1a ; '.'
0000000000000c8a         db  0x69 ; 'i'
0000000000000c8b         db  0x09 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x02 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x9a ; '.'
0000000000000c91         db  0x02 ; '.'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xc98; 0xfc8[ (816 bytes)
        ; File offset : [3224; 4040[ (816 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000c98         db  0x10 ; '.'
0000000000000c99         db  0x7b ; '{'
0000000000000c9a         db  0x20 ; ' '
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x08 ; '.'
0000000000000ca1         db  0x00 ; '.'
0000000000000ca2         db  0x00 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0xe0 ; '.'
0000000000000ca9         db  0x1d ; '.'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x18 ; '.'
0000000000000cb1         db  0x7b ; '{'
0000000000000cb2         db  0x20 ; ' '
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x08 ; '.'
0000000000000cb9         db  0x00 ; '.'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0xa0 ; '.'
0000000000000cc1         db  0x1d ; '.'
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x20 ; ' '
0000000000000cc9         db  0x7b ; '{'
0000000000000cca         db  0x20 ; ' '
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x08 ; '.'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x00 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x26 ; '&'
0000000000000cd9         db  0x57 ; 'W'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x40 ; '@'
0000000000000ce1         db  0x7b ; '{'
0000000000000ce2         db  0x20 ; ' '
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x08 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x2b ; '+'
0000000000000cf1         db  0x57 ; 'W'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x60 ; '`'
0000000000000cf9         db  0x7b ; '{'
0000000000000cfa         db  0x20 ; ' '
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x08 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x2f ; '/'
0000000000000d09         db  0x57 ; 'W'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x80 ; '.'
0000000000000d11         db  0x7b ; '{'
0000000000000d12         db  0x20 ; ' '
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x08 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x3a ; ':'
0000000000000d21         db  0x57 ; 'W'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0xa0 ; '.'
0000000000000d29         db  0x7b ; '{'
0000000000000d2a         db  0x20 ; ' '
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x08 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x3f ; '?'
0000000000000d39         db  0x57 ; 'W'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0xe0 ; '.'
0000000000000d41         db  0x7b ; '{'
0000000000000d42         db  0x20 ; ' '
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x08 ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x21 ; '!'
0000000000000d51         db  0x5e ; '^'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0xe8 ; '.'
0000000000000d59         db  0x7b ; '{'
0000000000000d5a         db  0x20 ; ' '
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x08 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x29 ; ')'
0000000000000d69         db  0x5e ; '^'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0xf0 ; '.'
0000000000000d71         db  0x7b ; '{'
0000000000000d72         db  0x20 ; ' '
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x08 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x2f ; '/'
0000000000000d81         db  0x5e ; '^'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0xf8 ; '.'
0000000000000d89         db  0x7b ; '{'
0000000000000d8a         db  0x20 ; ' '
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x08 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x3c ; '<'
0000000000000d99         db  0x5e ; '^'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x00 ; '.'
0000000000000da1         db  0x7c ; '|'
0000000000000da2         db  0x20 ; ' '
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x08 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x49 ; 'I'
0000000000000db1         db  0x5e ; '^'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x08 ; '.'
0000000000000db9         db  0x7c ; '|'
0000000000000dba         db  0x20 ; ' '
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x5d ; ']'
0000000000000dc9         db  0x5e ; '^'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x10 ; '.'
0000000000000dd1         db  0x7c ; '|'
0000000000000dd2         db  0x20 ; ' '
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x08 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x5f ; '_'
0000000000000de1         db  0x5e ; '^'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x18 ; '.'
0000000000000de9         db  0x7c ; '|'
0000000000000dea         db  0x20 ; ' '
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x08 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x42 ; 'B'
0000000000000df9         db  0x5e ; '^'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x20 ; ' '
0000000000000e01         db  0x7c ; '|'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x08 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0xc1 ; '.'
0000000000000e11         db  0x56 ; 'V'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x28 ; '('
0000000000000e19         db  0x7c ; '|'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x08 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x67 ; 'g'
0000000000000e29         db  0x5e ; '^'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x08 ; '.'
0000000000000e31         db  0x80 ; '.'
0000000000000e32         db  0x20 ; ' '
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x08 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x08 ; '.'
0000000000000e41         db  0x80 ; '.'
0000000000000e42         db  0x20 ; ' '
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x10 ; '.'
0000000000000e49         db  0x80 ; '.'
0000000000000e4a         db  0x20 ; ' '
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x08 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x0a ; '.'
0000000000000e59         db  0x5e ; '^'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x20 ; ' '
0000000000000e61         db  0x80 ; '.'
0000000000000e62         db  0x20 ; ' '
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x08 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0xba ; '.'
0000000000000e71         db  0x5d ; ']'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x80 ; '.'
0000000000000e79         db  0x80 ; '.'
0000000000000e7a         db  0x20 ; ' '
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x08 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x90 ; '.'
0000000000000e89         db  0x80 ; '.'
0000000000000e8a         db  0x20 ; ' '
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x98 ; '.'
0000000000000e91         db  0x80 ; '.'
0000000000000e92         db  0x20 ; ' '
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x08 ; '.'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x60 ; '`'
0000000000000ea1         db  0x81 ; '.'
0000000000000ea2         db  0x20 ; ' '
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0xc0 ; '.'
0000000000000ea9         db  0x7f ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x06 ; '.'
0000000000000eb1         db  0x00 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x06 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x00 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0xc8 ; '.'
0000000000000ec1         db  0x7f ; '.'
0000000000000ec2         db  0x20 ; ' '
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x06 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x1b ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x00 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0xd0 ; '.'
0000000000000ed9         db  0x7f ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x06 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x1f ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x00 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0xd8 ; '.'
0000000000000ef1         db  0x7f ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x06 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x31 ; '1'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x00 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0xe0 ; '.'
0000000000000f09         db  0x7f ; '.'
0000000000000f0a         db  0x20 ; ' '
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x06 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x34 ; '4'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x00 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0xa0 ; '.'
0000000000000f21         db  0x80 ; '.'
0000000000000f22         db  0x20 ; ' '
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x05 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x37 ; '7'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x00 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0xa8 ; '.'
0000000000000f39         db  0x80 ; '.'
0000000000000f3a         db  0x20 ; ' '
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x05 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x36 ; '6'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x00 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0xb0 ; '.'
0000000000000f51         db  0x80 ; '.'
0000000000000f52         db  0x20 ; ' '
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x05 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x38 ; '8'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x00 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0xb8 ; '.'
0000000000000f69         db  0x80 ; '.'
0000000000000f6a         db  0x20 ; ' '
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x05 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x3d ; '='
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x00 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0xc0 ; '.'
0000000000000f81         db  0x80 ; '.'
0000000000000f82         db  0x20 ; ' '
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x05 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x3e ; '>'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x00 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0xc8 ; '.'
0000000000000f99         db  0x80 ; '.'
0000000000000f9a         db  0x20 ; ' '
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x05 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x3a ; ':'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x00 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0xe0 ; '.'
0000000000000fb1         db  0x80 ; '.'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x05 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x3c ; '<'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x00 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0xfc8; 0x1448[ (1152 bytes)
        ; File offset : [4040; 5192[ (1152 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000fc8         db  0x40 ; '@'
0000000000000fc9         db  0x7e ; '~'
0000000000000fca         db  0x20 ; ' '
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x07 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x01 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x00 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x48 ; 'H'
0000000000000fe1         db  0x7e ; '~'
0000000000000fe2         db  0x20 ; ' '
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x07 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x02 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x00 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x50 ; 'P'
0000000000000ff9         db  0x7e ; '~'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x07 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x03 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x00 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x58 ; 'X'
0000000000001011         db  0x7e ; '~'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x07 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x04 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x00 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x60 ; '`'
0000000000001029         db  0x7e ; '~'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x07 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x05 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x00 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x68 ; 'h'
0000000000001041         db  0x7e ; '~'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x07 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x07 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x00 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x70 ; 'p'
0000000000001059         db  0x7e ; '~'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x07 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x08 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x00 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x78 ; 'x'
0000000000001071         db  0x7e ; '~'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x07 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x09 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x00 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x80 ; '.'
0000000000001089         db  0x7e ; '~'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x07 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x0a ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x00 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x88 ; '.'
00000000000010a1         db  0x7e ; '~'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x07 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x0b ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x00 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x90 ; '.'
00000000000010b9         db  0x7e ; '~'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x07 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x0c ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x00 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x98 ; '.'
00000000000010d1         db  0x7e ; '~'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x07 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x0d ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x00 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0xa0 ; '.'
00000000000010e9         db  0x7e ; '~'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x07 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x0e ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x00 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0xa8 ; '.'
0000000000001101         db  0x7e ; '~'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x07 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x0f ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x00 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0xb0 ; '.'
0000000000001119         db  0x7e ; '~'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x07 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x10 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x00 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0xb8 ; '.'
0000000000001131         db  0x7e ; '~'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x07 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x11 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x00 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0xc0 ; '.'
0000000000001149         db  0x7e ; '~'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x07 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x12 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x00 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0xc8 ; '.'
0000000000001161         db  0x7e ; '~'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x07 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x13 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x00 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0xd0 ; '.'
0000000000001179         db  0x7e ; '~'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x07 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x14 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0xd8 ; '.'
0000000000001191         db  0x7e ; '~'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x07 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x15 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x00 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0xe0 ; '.'
00000000000011a9         db  0x7e ; '~'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x07 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x16 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x00 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0xe8 ; '.'
00000000000011c1         db  0x7e ; '~'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x07 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x17 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x00 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0xf0 ; '.'
00000000000011d9         db  0x7e ; '~'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x07 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x18 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0xf8 ; '.'
00000000000011f1         db  0x7e ; '~'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x07 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x19 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x00 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x00 ; '.'
0000000000001209         db  0x7f ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x07 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x1a ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x00 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x08 ; '.'
0000000000001221         db  0x7f ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x07 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x1c ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x00 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x10 ; '.'
0000000000001239         db  0x7f ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x07 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x1d ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x00 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x18 ; '.'
0000000000001251         db  0x7f ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x07 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x1e ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x00 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x20 ; ' '
0000000000001269         db  0x7f ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x07 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x20 ; ' '
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x00 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x28 ; '('
0000000000001281         db  0x7f ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x07 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x21 ; '!'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x00 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x30 ; '0'
0000000000001299         db  0x7f ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x07 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x22 ; '"'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x00 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x38 ; '8'
00000000000012b1         db  0x7f ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x07 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x23 ; '#'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x00 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x40 ; '@'
00000000000012c9         db  0x7f ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x07 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x24 ; '$'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x48 ; 'H'
00000000000012e1         db  0x7f ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x07 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x25 ; '%'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x00 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x50 ; 'P'
00000000000012f9         db  0x7f ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x07 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x26 ; '&'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x00 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x58 ; 'X'
0000000000001311         db  0x7f ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x07 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x27 ; '''
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x60 ; '`'
0000000000001329         db  0x7f ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x07 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x28 ; '('
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x68 ; 'h'
0000000000001341         db  0x7f ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x07 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x29 ; ')'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x70 ; 'p'
0000000000001359         db  0x7f ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x07 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x2a ; '*'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x78 ; 'x'
0000000000001371         db  0x7f ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x07 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x2b ; '+'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x80 ; '.'
0000000000001389         db  0x7f ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x07 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x2c ; ','
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x88 ; '.'
00000000000013a1         db  0x7f ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x07 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x2d ; '-'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x90 ; '.'
00000000000013b9         db  0x7f ; '.'
00000000000013ba         db  0x20 ; ' '
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x07 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x2e ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x00 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x98 ; '.'
00000000000013d1         db  0x7f ; '.'
00000000000013d2         db  0x20 ; ' '
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x07 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x2f ; '/'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x00 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0xa0 ; '.'
00000000000013e9         db  0x7f ; '.'
00000000000013ea         db  0x20 ; ' '
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x07 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x30 ; '0'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x00 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0xa8 ; '.'
0000000000001401         db  0x7f ; '.'
0000000000001402         db  0x20 ; ' '
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x07 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x32 ; '2'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x00 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0xb0 ; '.'
0000000000001419         db  0x7f ; '.'
000000000000141a         db  0x20 ; ' '
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x07 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x33 ; '3'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x00 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0xb8 ; '.'
0000000000001431         db  0x7f ; '.'
0000000000001432         db  0x20 ; ' '
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x07 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x35 ; '5'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x00 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1448; 0x145f[ (23 bytes)
        ; File offset : [5192; 5215[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001448         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
000000000000144c         mov        rax, qword [qword_207fd0]                   ; qword_207fd0
0000000000001453         test       rax, rax
0000000000001456         je         loc_145a

0000000000001458         call       rax

                     loc_145a:
000000000000145a         add        rsp, 0x8                                    ; CODE XREF=_init+14
000000000000145e         ret
                        ; endp
000000000000145f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1460; 0x1770[ (784 bytes)
        ; File offset : [5216; 6000[ (784 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1460:
0000000000001460         push       qword [qword_207e30]                        ; Begin of unwind block (FDE at 0x6964), qword_207e30, CODE XREF=sub_1476+5
0000000000001466         jmp        qword [qword_207e30+8]                      ; 0x207e38
                        ; endp
000000000000146c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___uflow:        // __uflow
0000000000001470         jmp        qword [__uflow@GOT]                         ; __uflow, __uflow@GOT, CODE XREF=main+957
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1476:
0000000000001476         push       0x0
000000000000147b         jmp        loc_1460


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001480         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+1070, parse_tab_stops+585, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1486:
0000000000001486         push       0x1
000000000000148b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001490         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_3550+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1496:
0000000000001496         push       0x2
000000000000149b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000014a0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+1037, main+1307, next_file+162, next_file+371, next_file+434, cleanup_file_list_stdin+41, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14a6:
00000000000014a6         push       0x3
00000000000014ab         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000014b0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+636, usage+829
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14b6:
00000000000014b6         push       0x4
00000000000014bb         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000014c0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14c6:
00000000000014c6         push       0x5
00000000000014cb         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
00000000000014d0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14d6:
00000000000014d6         push       0x6
00000000000014db         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_clearerr_unlocked:        // clearerr_unlocked
00000000000014e0         jmp        qword [clearerr_unlocked@GOT]               ; clearerr_unlocked, clearerr_unlocked@GOT, CODE XREF=next_file+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14e6:
00000000000014e6         push       0x7
00000000000014eb         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
00000000000014f0         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+102
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14f6:
00000000000014f6         push       0x8
00000000000014fb         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001500         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0x9
000000000000150b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001510         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0xa
000000000000151b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001520         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+1029, main+1222, main+1263, main+1299, main+1343, usage+56, usage+102, usage+146, usage+183, usage+220, usage+257
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0xb
000000000000152b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001530         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0xc
000000000000153b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001540         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_3550+411, sub_3550+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0xd
000000000000154b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001550         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+1244, sub_3550+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192, rpl_mbrtowc+126
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0xe
000000000000155b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001560         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+146
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0xf
000000000000156b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001570         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0x10
000000000000157b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000001580         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=main+1002
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0x11
000000000000158b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001590         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0x12
000000000000159b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000015a0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0x13
00000000000015ab         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
00000000000015b0         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=next_file+508
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x14
00000000000015bb         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
00000000000015c0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x15
00000000000015cb         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strspn:        // strspn
00000000000015d0         jmp        qword [strspn@GOT]                          ; strspn, strspn@GOT, CODE XREF=parse_tab_stops+505
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x16
00000000000015db         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
00000000000015e0         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x17
00000000000015eb         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strndup:        // strndup
00000000000015f0         jmp        qword [strndup@GOT]                         ; strndup, strndup@GOT, CODE XREF=xstrndup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x18
00000000000015fb         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001600         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x19
000000000000160b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001610         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+310, usage+354, usage+944, emit_tab_list_info+33, emit_tab_list_info+71, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x1a
000000000000161b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001620         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x1b
000000000000162b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001630         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x1c
000000000000163b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001640         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x1d
000000000000164b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001650         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x1e
000000000000165b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001660         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x1f
000000000000166b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001670         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x20
000000000000167b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001680         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x21
000000000000168b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
0000000000001690         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=main+653
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x22
000000000000169b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000016a0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x23
00000000000016ab         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
00000000000016b0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+71, usage+611, usage+804, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x24
00000000000016bb         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
00000000000016c0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+599, usage+692, usage+753, usage+792, usage+895, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x25
00000000000016cb         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
00000000000016d0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+1054, main+1239, main+1280, main+1324, main+1360, set_extend_size+47, set_increment_size+47, parse_tab_stops+577, parse_tab_stops+664, parse_tab_stops+736, parse_tab_stops+842
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x26
00000000000016db         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
00000000000016e0         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0x27
00000000000016eb         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
00000000000016f0         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=next_file+257
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x28
00000000000016fb         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001700         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x29
000000000000170b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001710         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+326, usage+88, parse_tab_stops+852
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x2a
000000000000171b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001720         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x2b
000000000000172b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001730         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x2c
000000000000173b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001740         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_3550+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x2d
000000000000174b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001750         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_3550+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x2e
000000000000175b         jmp        0x1460
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001760         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=main+776, parse_tab_stops+64, sub_32f0+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x2f
000000000000176b         jmp        0x1460
                        ; endp


        ; Section .plt.got
        ; Range: [0x1770; 0x1778[ (8 bytes)
        ; File offset : [6000; 6008[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_207fe0:        // qword_207fe0
0000000000001770         jmp        qword [qword_207fe0]                        ; qword, End of unwind block (FDE at 0x6964), Begin of unwind block (FDE at 0x698c), qword_207fe0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001776         align      8
0000000000001778         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x698c)
0000000000001779         db  0x00 ; '.'
000000000000177a         db  0x00 ; '.'
000000000000177b         db  0x00 ; '.'
000000000000177c         db  0x00 ; '.'
000000000000177d         db  0x00 ; '.'
000000000000177e         db  0x00 ; '.'
000000000000177f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1780; 0x55de[ (15966 bytes)
        ; File offset : [6016; 21982[ (15966 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_49: int8_t, -73
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_78: int64_t, -120


                     main:
0000000000001780         push       r15                                         ; Begin of unwind block (FDE at 0x69d0), DATA XREF=_start+29
0000000000001782         push       r14
0000000000001784         mov        r14d, 0x1
000000000000178a         push       r13
000000000000178c         push       r12
000000000000178e         lea        r12, qword [longopts]                       ; longopts
0000000000001795         push       rbp
0000000000001796         push       rbx
0000000000001797         mov        ebp, edi
0000000000001799         mov        rbx, rsi
000000000000179c         xor        r13d, r13d
000000000000179f         sub        rsp, 0x48
00000000000017a3         mov        rdi, qword [rsi]
00000000000017a6         mov        rax, qword [fs:0x28]
00000000000017af         mov        qword [rsp+0x78+var_40], rax
00000000000017b4         xor        eax, eax
00000000000017b6         call       set_program_name                            ; set_program_name
00000000000017bb         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x6341
00000000000017c2         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
00000000000017c7         call       j_setlocale                                 ; setlocale
00000000000017cc         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
00000000000017d3         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
00000000000017da         call       j_bindtextdomain                            ; bindtextdomain
00000000000017df         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
00000000000017e6         call       j_textdomain                                ; textdomain
00000000000017eb         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
00000000000017f2         call       atexit                                      ; atexit
00000000000017f7         mov        byte [rsp+0x78+var_6A], 0x0
00000000000017fc         nop        dword [rax]

                     loc_1800:
0000000000001800         lea        rdx, qword [a0123456789at]                  ; argument "__shortopts" for method j_getopt_long, ",0123456789at:", CODE XREF=main+252, main+343, main+355, main+372, main+389, main+419, main+436
0000000000001807         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
000000000000180a         mov        rcx, r12                                    ; argument "__longopts" for method j_getopt_long
000000000000180d         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001810         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001812         call       j_getopt_long                               ; getopt_long
0000000000001817         cmp        eax, 0xffffffff
000000000000181a         je         loc_1939

0000000000001820         cmp        eax, 0x3f
0000000000001823         je         loc_1c2e

0000000000001829         jle        loc_1880

000000000000182b         cmp        eax, 0x74
000000000000182e         je         loc_1910

0000000000001834         cmp        eax, 0x80
0000000000001839         je         loc_1900

000000000000183f         cmp        eax, 0x61
0000000000001842         je         loc_18d0

                     loc_1848:
0000000000001848         test       r13b, r13b                                  ; CODE XREF=main+277
000000000000184b         je         loc_1928

0000000000001851         movabs     rcx, 0x1999999999999999
000000000000185b         cmp        r15, rcx
000000000000185e         ja         loc_1c38

0000000000001864         imul       rdx, r15, 0xa
0000000000001868         sub        eax, 0x30
000000000000186b         cdqe
000000000000186d         add        rax, rdx
0000000000001870         cmp        rax, r15
0000000000001873         jb         loc_1c38

0000000000001879         mov        r15, rax
000000000000187c         jmp        loc_1800
000000000000187e         align      128

                     loc_1880:
0000000000001880         cmp        eax, 0xffffff7e                             ; CODE XREF=main+169
0000000000001885         je         loc_1c27

000000000000188b         cmp        eax, 0x2c
000000000000188e         je         loc_18e0

0000000000001890         cmp        eax, 0xffffff7d
0000000000001895         jne        loc_1848

0000000000001897         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000189e         mov        rcx, qword [Version]                        ; Version
00000000000018a5         lea        r8, qword [aDavidMackenzie]                 ; "David MacKenzie"
00000000000018ac         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5683
00000000000018b3         lea        rsi, qword [aUnexpand]                      ; "unexpand"
00000000000018ba         xor        r9d, r9d
00000000000018bd         xor        eax, eax
00000000000018bf         call       version_etc                                 ; version_etc
00000000000018c4         xor        edi, edi                                    ; argument "__status" for method j_exit
00000000000018c6         call       j_exit                                      ; exit
                        ; endp
00000000000018cb         align      16

                     loc_18d0:
00000000000018d0         mov        byte [convert_entire_line], r14b            ; convert_entire_line, CODE XREF=main+194
00000000000018d7         jmp        loc_1800
00000000000018dc         align      32

                     loc_18e0:
00000000000018e0         test       r13b, r13b                                  ; CODE XREF=main+270
00000000000018e3         je         loc_1800

00000000000018e9         mov        rdi, r15
00000000000018ec         xor        r13d, r13d
00000000000018ef         call       add_tab_stop                                ; add_tab_stop
00000000000018f4         jmp        loc_1800
00000000000018f9         align      256

                     loc_1900:
0000000000001900         mov        byte [rsp+0x78+var_6A], 0x1                 ; CODE XREF=main+185
0000000000001905         jmp        loc_1800
000000000000190a         align      16

                     loc_1910:
0000000000001910         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+174
0000000000001917         mov        byte [convert_entire_line], r14b            ; convert_entire_line
000000000000191e         call       parse_tab_stops                             ; parse_tab_stops
0000000000001923         jmp        loc_1800

                     loc_1928:
0000000000001928         sub        eax, 0x30                                   ; CODE XREF=main+203
000000000000192b         mov        r13d, 0x1
0000000000001931         movsxd     r15, eax
0000000000001934         jmp        loc_1800

                     loc_1939:
0000000000001939         cmp        byte [rsp+0x78+var_6A], 0x0                 ; CODE XREF=main+154
000000000000193e         je         loc_1947

0000000000001940         mov        byte [convert_entire_line], 0x0             ; convert_entire_line

                     loc_1947:
0000000000001947         test       r13b, r13b                                  ; CODE XREF=main+446
000000000000194a         jne        loc_1c1a

                     loc_1950:
0000000000001950         call       finalize_tab_stops                          ; finalize_tab_stops, CODE XREF=main+1186
0000000000001955         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
000000000000195c         xor        edi, edi
000000000000195e         cmp        eax, ebp
0000000000001960         jge        loc_1966

0000000000001962         lea        rdi, qword [rbx+rax*8]

                     loc_1966:
0000000000001966         call       set_file_list                               ; set_file_list, CODE XREF=main+480
000000000000196b         xor        edi, edi
000000000000196d         call       next_file                                   ; next_file
0000000000001972         test       rax, rax
0000000000001975         mov        r15, rax
0000000000001978         je         loc_1bb3

000000000000197e         mov        rdi, qword [max_column_width]               ; max_column_width
0000000000001985         call       xmalloc                                     ; xmalloc
000000000000198a         mov        qword [rsp+0x78+var_78], rax
000000000000198e         lea        rax, qword [rsp+0x78+var_49]
0000000000001993         mov        qword [rsp+0x78+var_68], rax
0000000000001998         lea        rax, qword [rsp+0x78+var_48]
000000000000199d         mov        qword [rsp+0x78+var_60], rax

                     loc_19a2:
00000000000019a2         mov        qword [rsp+0x78+var_48], 0x0                ; CODE XREF=main+740
00000000000019ab         xor        ebp, ebp
00000000000019ad         mov        r13d, 0x1
00000000000019b3         mov        byte [rsp+0x78+var_6A], 0x0
00000000000019b8         xor        r12d, r12d
00000000000019bb         mov        ebx, 0x1
00000000000019c0         jmp        loc_1a6a
00000000000019c5         align      8

                     loc_19c8:
00000000000019c8         cmp        r14d, 0x8                                   ; CODE XREF=main+800
00000000000019cc         je         loc_1b15

00000000000019d2         add        r12, 0x1
00000000000019d6         je         loc_1cb1

                     loc_19dc:
00000000000019dc         test       rbp, rbp                                    ; CODE XREF=main+912, main+949, main+1061
00000000000019df         je         loc_1a26

00000000000019e1         cmp        rbp, 0x1
00000000000019e5         jbe        loc_19f5

00000000000019e7         cmp        byte [rsp+0x78+var_6A], 0x0
00000000000019ec         je         loc_19f5

00000000000019ee         mov        rax, qword [rsp+0x78+var_78]
00000000000019f2         mov        byte [rax], 0x9

                     loc_19f5:
00000000000019f5         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=main+613, main+620
00000000000019fc         mov        rdi, qword [rsp+0x78+var_78]                ; argument "__ptr" for method j_fwrite_unlocked
0000000000001a00         mov        rdx, rbp                                    ; argument "__n" for method j_fwrite_unlocked
0000000000001a03         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001a08         mov        byte [rsp+0x78+var_6A], r10b
0000000000001a0d         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000001a12         cmp        rbp, rax
0000000000001a15         movzx      r10d, byte [rsp+0x78+var_6A]
0000000000001a1b         jne        loc_1c85

0000000000001a21         mov        byte [rsp+0x78+var_6A], 0x0

                     loc_1a26:
0000000000001a26         movzx      eax, byte [convert_entire_line]             ; convert_entire_line, CODE XREF=main+607
0000000000001a2d         mov        r13d, r10d
0000000000001a30         xor        ebp, ebp
0000000000001a32         or         eax, r10d
0000000000001a35         and        ebx, eax

                     loc_1a37:
0000000000001a37         test       r14d, r14d                                  ; CODE XREF=main+774
0000000000001a3a         js         loc_1baa

0000000000001a40         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001a47         mov        rax, qword [rdi+0x28]
0000000000001a4b         cmp        rax, qword [rdi+0x30]
0000000000001a4f         jae        loc_1b66

0000000000001a55         lea        rdx, qword [rax+1]
0000000000001a59         mov        qword [rdi+0x28], rdx
0000000000001a5d         mov        byte [rax], r14b

                     loc_1a60:
0000000000001a60         cmp        r14d, 0xa                                   ; CODE XREF=main+1009, main+1173
0000000000001a64         je         loc_19a2

                     loc_1a6a:
0000000000001a6a         mov        rax, qword [r15+8]                          ; CODE XREF=main+576, main+987
0000000000001a6e         cmp        rax, qword [r15+0x10]
0000000000001a72         jae        loc_1b3a

0000000000001a78         lea        rdx, qword [rax+1]
0000000000001a7c         mov        qword [r15+8], rdx
0000000000001a80         movzx      r14d, byte [rax]

                     loc_1a84:
0000000000001a84         test       bl, bl                                      ; CODE XREF=main+967, main+993
0000000000001a86         je         loc_1a37

0000000000001a88         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000001a8d         mov        rcx, qword [rax]
0000000000001a90         movsxd     rdx, r14d
0000000000001a93         movzx      eax, word [rcx+rdx*2]
0000000000001a97         mov        r10d, eax
0000000000001a9a         and        r10d, 0x1
0000000000001a9e         test       al, 0x1
0000000000001aa0         je         loc_19c8

0000000000001aa6         mov        rdx, qword [rsp+0x78+var_68]
0000000000001aab         mov        rsi, qword [rsp+0x78+var_60]
0000000000001ab0         mov        rdi, r12
0000000000001ab3         mov        byte [rsp+0x78+var_69], r10b
0000000000001ab8         call       get_next_tab_column                         ; get_next_tab_column
0000000000001abd         cmp        byte [rsp+0x78+var_49], 0x0
0000000000001ac2         movzx      r10d, byte [rsp+0x78+var_69]
0000000000001ac8         jne        loc_1ba3

0000000000001ace         cmp        r12, rax
0000000000001ad1         ja         loc_1c61

0000000000001ad7         cmp        r14d, 0x9
0000000000001adb         je         loc_1be1

0000000000001ae1         add        r12, 0x1
0000000000001ae5         xor        r13d, 0x1
0000000000001ae9         cmp        rax, r12
0000000000001aec         setne      dl
0000000000001aef         or         r13b, dl
0000000000001af2         jne        loc_1bf6

0000000000001af8         mov        rax, qword [rsp+0x78+var_78]
0000000000001afc         mov        byte [rax], 0x9
0000000000001aff         mov        rax, r12

                     loc_1b02:
0000000000001b02         movzx      ebp, byte [rsp+0x78+var_6A]                 ; CODE XREF=main+1124, main+1137
0000000000001b07         mov        r12, rax
0000000000001b0a         mov        r14d, 0x9
0000000000001b10         jmp        loc_19dc

                     loc_1b15:
0000000000001b15         xor        eax, eax                                    ; CODE XREF=main+588
0000000000001b17         test       r12, r12
0000000000001b1a         setne      al
0000000000001b1d         xor        edx, edx
0000000000001b1f         sub        r12, rax
0000000000001b22         mov        rax, qword [rsp+0x78+var_48]
0000000000001b27         test       rax, rax
0000000000001b2a         setne      dl
0000000000001b2d         sub        rax, rdx
0000000000001b30         mov        qword [rsp+0x78+var_48], rax
0000000000001b35         jmp        loc_19dc

                     loc_1b3a:
0000000000001b3a         mov        rdi, r15                                    ; argument #1 for method j___uflow, CODE XREF=main+754
0000000000001b3d         call       j___uflow                                   ; __uflow
0000000000001b42         test       eax, eax
0000000000001b44         mov        r14d, eax
0000000000001b47         jns        loc_1a84

0000000000001b4d         mov        rdi, r15
0000000000001b50         call       next_file                                   ; next_file
0000000000001b55         test       rax, rax
0000000000001b58         mov        r15, rax
0000000000001b5b         jne        loc_1a6a

0000000000001b61         jmp        loc_1a84

                     loc_1b66:
0000000000001b66         movzx      esi, r14b                                   ; argument #2 for method j___overflow, CODE XREF=main+719
0000000000001b6a         call       j___overflow                                ; __overflow
0000000000001b6f         test       eax, eax
0000000000001b71         jns        loc_1a60

0000000000001b77         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
0000000000001b7e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001b83         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001b85         call       j_dcgettext                                 ; dcgettext
0000000000001b8a         mov        rbx, rax
0000000000001b8d         call       j___errno_location                          ; __errno_location
0000000000001b92         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001b94         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001b97         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001b9c         xor        eax, eax
0000000000001b9e         call       j_error                                     ; error

                     loc_1ba3:
0000000000001ba3         xor        ebx, ebx                                    ; CODE XREF=main+840
0000000000001ba5         jmp        loc_19dc

                     loc_1baa:
0000000000001baa         mov        rdi, qword [rsp+0x78+var_78]                ; argument "__ptr" for method j_free, CODE XREF=main+698
0000000000001bae         call       j_free                                      ; free

                     loc_1bb3:
0000000000001bb3         call       cleanup_file_list_stdin                     ; cleanup_file_list_stdin, CODE XREF=main+504
0000000000001bb8         mov        rcx, qword [rsp+0x78+var_40]
0000000000001bbd         xor        rcx, qword [fs:0x28]
0000000000001bc6         mov        eax, dword [exit_status]                    ; exit_status
0000000000001bcc         jne        loc_1c5c

0000000000001bd2         add        rsp, 0x48
0000000000001bd6         pop        rbx
0000000000001bd7         pop        rbp
0000000000001bd8         pop        r12
0000000000001bda         pop        r13
0000000000001bdc         pop        r14
0000000000001bde         pop        r15
0000000000001be0         ret
                        ; endp

                     loc_1be1:
0000000000001be1         test       rbp, rbp                                    ; CODE XREF=main+859
0000000000001be4         je         loc_1b02

0000000000001bea         mov        rcx, qword [rsp+0x78+var_78]
0000000000001bee         mov        byte [rcx], 0x9
0000000000001bf1         jmp        loc_1b02

                     loc_1bf6:
0000000000001bf6         cmp        rax, r12                                    ; CODE XREF=main+882
0000000000001bf9         movzx      eax, byte [rsp+0x78+var_6A]
0000000000001bfe         mov        ebx, r13d
0000000000001c01         cmove      eax, r13d
0000000000001c05         mov        byte [rsp+0x78+var_6A], al
0000000000001c09         mov        rax, qword [rsp+0x78+var_78]
0000000000001c0d         mov        byte [rax+rbp], r14b
0000000000001c11         add        rbp, 0x1
0000000000001c15         jmp        loc_1a60

                     loc_1c1a:
0000000000001c1a         mov        rdi, r15                                    ; CODE XREF=main+458
0000000000001c1d         call       add_tab_stop                                ; add_tab_stop
0000000000001c22         jmp        loc_1950

                     loc_1c27:
0000000000001c27         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+261
0000000000001c29         call       usage                                       ; usage

                     loc_1c2e:
0000000000001c2e         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+163
0000000000001c33         call       usage                                       ; usage

                     loc_1c38:
0000000000001c38         lea        rsi, qword [aTabStopValueIs]                ; argument "msgid" for method j_dcgettext, "tab stop value is too large", CODE XREF=main+222, main+243
0000000000001c3f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001c44         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c46         call       j_dcgettext                                 ; dcgettext
0000000000001c4b         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001c4d         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001c50         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001c55         xor        eax, eax
0000000000001c57         call       j_error                                     ; error

                     loc_1c5c:
0000000000001c5c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+1100
                        ; endp

                     loc_1c61:
0000000000001c61         lea        rsi, qword [aInputLineIsToo]                ; argument "msgid" for method j_dcgettext, "input line is too long", CODE XREF=main+849
0000000000001c68         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001c6d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c6f         call       j_dcgettext                                 ; dcgettext
0000000000001c74         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001c76         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001c79         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001c7e         xor        eax, eax
0000000000001c80         call       j_error                                     ; error

                     loc_1c85:
0000000000001c85         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=main+667
0000000000001c8c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001c91         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c93         call       j_dcgettext                                 ; dcgettext
0000000000001c98         mov        rbx, rax
0000000000001c9b         call       j___errno_location                          ; __errno_location
0000000000001ca0         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001ca2         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001ca5         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001caa         xor        eax, eax
0000000000001cac         call       j_error                                     ; error

                     loc_1cb1:
0000000000001cb1         lea        rsi, qword [aInputLineIsToo]                ; argument "msgid" for method j_dcgettext, "input line is too long", CODE XREF=main+598
0000000000001cb8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001cbd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001cbf         call       j_dcgettext                                 ; dcgettext
0000000000001cc4         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001cc6         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001cc9         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001cce         xor        eax, eax
0000000000001cd0         call       j_error                                     ; error
0000000000001cd5         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x69d0)
0000000000001cdf         nop
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000001ce0         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x6934)
0000000000001ce2         mov        r9, rdx
0000000000001ce5         pop        rsi
0000000000001ce6         mov        rdx, rsp
0000000000001ce9         and        rsp, 0xfffffffffffffff0
0000000000001ced         push       rax
0000000000001cee         push       rsp
0000000000001cef         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000001cf6         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000001cfd         lea        rdi, qword [main]                           ; main
0000000000001d04         call       qword [qword_207fc0+8]                      ; 0x207fc8
0000000000001d0a         hlt
                        ; endp
0000000000001d0b         align      16                                          ; End of unwind block (FDE at 0x6934)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001d10         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000001d17         push       rbp
0000000000001d18         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001d1f         cmp        rax, rdi
0000000000001d22         mov        rbp, rsp
0000000000001d25         je         loc_1d40

0000000000001d27         mov        rax, qword [qword_207fc0]                   ; qword_207fc0
0000000000001d2e         test       rax, rax
0000000000001d31         je         loc_1d40

0000000000001d33         pop        rbp
0000000000001d34         jmp        rax
                        ; endp
0000000000001d36         align      64

                     loc_1d40:
0000000000001d40         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001d41         ret
                        ; endp
0000000000001d42         align      16

                     register_tm_clones:
0000000000001d50         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000001d57         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001d5e         push       rbp
0000000000001d5f         sub        rsi, rdi
0000000000001d62         mov        rbp, rsp
0000000000001d65         sar        rsi, 0x3
0000000000001d69         mov        rax, rsi
0000000000001d6c         shr        rax, 0x3f
0000000000001d70         add        rsi, rax
0000000000001d73         sar        rsi, 0x1
0000000000001d76         je         loc_1d90

0000000000001d78         mov        rax, qword [qword_207fd8]                   ; qword_207fd8
0000000000001d7f         test       rax, rax
0000000000001d82         je         loc_1d90

0000000000001d84         pop        rbp
0000000000001d85         jmp        rax
                        ; endp
0000000000001d87         align      16

                     loc_1d90:
0000000000001d90         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001d91         ret
                        ; endp
0000000000001d92         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000001da0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000001da7         jne        loc_1dd8

0000000000001da9         cmp        qword [qword_207fe0], 0x0                   ; qword_207fe0
0000000000001db1         push       rbp
0000000000001db2         mov        rbp, rsp
0000000000001db5         je         loc_1dc3

0000000000001db7         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000001dbe         call       j_qword_207fe0                              ; qword_207fe0

                     loc_1dc3:
0000000000001dc3         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000001dc8         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000001dcf         pop        rbp
0000000000001dd0         ret
                        ; endp
0000000000001dd1         align      8

                     loc_1dd8:
0000000000001dd8         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000001dda         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000001de0         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000001de1         mov        rbp, rsp
0000000000001de4         pop        rbp
0000000000001de5         jmp        register_tm_clones                          ; register_tm_clones
0000000000001dea         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000001df0         push       r13                                         ; Begin of unwind block (FDE at 0x69a4), CODE XREF=main+1193, main+1203
0000000000001df2         push       r12
0000000000001df4         mov        edx, 0x5
0000000000001df9         push       rbp
0000000000001dfa         push       rbx
0000000000001dfb         mov        ebp, edi
0000000000001dfd         sub        rsp, 0x88
0000000000001e04         mov        rbx, qword [program_name]                   ; program_name
0000000000001e0b         mov        rax, qword [fs:0x28]
0000000000001e14         mov        qword [rsp+0xa8+var_30], rax
0000000000001e19         xor        eax, eax
0000000000001e1b         test       edi, edi
0000000000001e1d         je         loc_1e4d

0000000000001e1f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000001e26         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e28         call       j_dcgettext                                 ; dcgettext
0000000000001e2d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000001e34         mov        rdx, rax
0000000000001e37         mov        rcx, rbx
0000000000001e3a         mov        esi, 0x1
0000000000001e3f         xor        eax, eax
0000000000001e41         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_1e46:
0000000000001e46         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+758
0000000000001e48         call       j_exit                                      ; exit
                        ; endp

                     loc_1e4d:
0000000000001e4d         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [FILE]...\\n", CODE XREF=usage+45
0000000000001e54         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e56         call       j_dcgettext                                 ; dcgettext
0000000000001e5b         mov        rdx, rbx
0000000000001e5e         mov        rsi, rax
0000000000001e61         mov        edi, 0x1
0000000000001e66         xor        eax, eax
0000000000001e68         call       j___printf_chk                              ; __printf_chk
0000000000001e6d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001e74         lea        rsi, qword [aConvertBlanksI]                ; argument "msgid" for method j_dcgettext, "Convert blanks in each FILE to tabs, writing to standard output.\\n"
0000000000001e7b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e80         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e82         call       j_dcgettext                                 ; dcgettext
0000000000001e87         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001e8a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001e8d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001e92         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001e99         lea        rsi, qword [aNwithNoFileOrW]                ; argument "msgid" for method j_dcgettext, "\\nWith no FILE, or when FILE is -, read standard input.\\n"
0000000000001ea0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001ea5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ea7         call       j_dcgettext                                 ; dcgettext
0000000000001eac         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001eaf         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001eb2         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001eb7         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001ebe         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000001ec5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001eca         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ecc         call       j_dcgettext                                 ; dcgettext
0000000000001ed1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001ed4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001ed7         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001edc         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001ee3         lea        rsi, qword [aAAllConvertAll]                ; argument "msgid" for method j_dcgettext, "  -a, --all        convert all blanks, instead of just initial blanks\\n      --first-only  convert only leading sequences of blanks (overrides -a)\\n  -t, --tabs=N     have tabs N characters apart instead of 8 (enables -a)\\n"
0000000000001eea         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001eef         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ef1         call       j_dcgettext                                 ; dcgettext
0000000000001ef6         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001ef9         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001efc         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001f01         call       emit_tab_list_info                          ; emit_tab_list_info
0000000000001f06         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001f0d         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000001f14         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f19         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f1b         call       j_dcgettext                                 ; dcgettext
0000000000001f20         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001f23         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001f26         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001f2b         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001f32         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000001f39         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f3e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f40         call       j_dcgettext                                 ; dcgettext
0000000000001f45         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001f48         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001f4b         lea        rbx, qword [aUnexpand]                      ; "unexpand"
0000000000001f52         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001f57         lea        rax, qword [aUnexpand+9]                    ; 0x560d
0000000000001f5e         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000001f65         mov        qword [rsp+0xa8+var_48], 0x0
0000000000001f6e         mov        qword [rsp+0xa8+var_40], 0x0
0000000000001f77         mov        rdx, rsp
0000000000001f7a         mov        qword [rsp+0xa8+var_A8], rax
0000000000001f7e         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000001f85         mov        qword [rsp+0xa8+var_78], rcx
0000000000001f8a         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000001f91         mov        qword [rsp+0xa8+var_A0], rax
0000000000001f96         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000001f9d         mov        qword [rsp+0xa8+var_68], rcx
0000000000001fa2         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000001fa9         mov        qword [rsp+0xa8+var_98], rax
0000000000001fae         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000001fb5         mov        qword [rsp+0xa8+var_58], rcx
0000000000001fba         mov        qword [rsp+0xa8+var_90], rax
0000000000001fbf         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000001fc6         mov        qword [rsp+0xa8+var_88], rax
0000000000001fcb         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000001fd2         mov        qword [rsp+0xa8+var_80], rax
0000000000001fd7         mov        qword [rsp+0xa8+var_70], rax
0000000000001fdc         mov        qword [rsp+0xa8+var_60], rax
0000000000001fe1         mov        qword [rsp+0xa8+var_50], rax
0000000000001fe6         nop        word [cs:rax+rax]

                     loc_1ff0:
0000000000001ff0         add        rdx, 0x10                                   ; CODE XREF=usage+541
0000000000001ff4         mov        rdi, qword [rdx]
0000000000001ff7         test       rdi, rdi
0000000000001ffa         je         loc_200f

0000000000001ffc         mov        ecx, 0x9
0000000000002001         mov        rsi, rbx
0000000000002004         rep  cmpsb byte [rsi], byte [rdi]
0000000000002006         seta       al
0000000000002009         sbb        al, 0x0
000000000000200b         test       al, al
000000000000200d         jne        loc_1ff0

                     loc_200f:
000000000000200f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+522
0000000000002013         xor        edi, edi
0000000000002015         mov        edx, 0x5
000000000000201a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002021         test       r12, r12
0000000000002024         je         loc_20eb

000000000000202a         call       j_dcgettext                                 ; dcgettext
000000000000202f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002036         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5683
000000000000203d         mov        rsi, rax
0000000000002040         mov        edi, 0x1
0000000000002045         xor        eax, eax
0000000000002047         call       j___printf_chk                              ; __printf_chk
000000000000204c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000204e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002053         call       j_setlocale                                 ; setlocale
0000000000002058         test       rax, rax
000000000000205b         je         loc_2079

000000000000205d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x5691
0000000000002064         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002069         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000206c         call       j_strncmp                                   ; strncmp
0000000000002071         test       eax, eax
0000000000002073         jne        loc_2180

                     loc_2079:
0000000000002079         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+619, usage+949
0000000000002080         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002082         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002087         call       j_dcgettext                                 ; dcgettext
000000000000208c         lea        rcx, qword [aUnexpand]                      ; "unexpand"
0000000000002093         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000209a         mov        rsi, rax
000000000000209d         mov        edi, 0x1
00000000000020a2         xor        eax, eax
00000000000020a4         call       j___printf_chk                              ; __printf_chk
00000000000020a9         cmp        r12, rbx
00000000000020ac         lea        rcx, qword [aMulticallInvoc+10]             ; 0x5629
00000000000020b3         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x6341
00000000000020ba         cmove      rbx, rcx

                     loc_20be:
00000000000020be         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+900
00000000000020c5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000020c7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000020cc         call       j_dcgettext                                 ; dcgettext
00000000000020d1         mov        rcx, rbx
00000000000020d4         mov        rsi, rax
00000000000020d7         mov        rdx, r12
00000000000020da         mov        edi, 0x1
00000000000020df         xor        eax, eax
00000000000020e1         call       j___printf_chk                              ; __printf_chk
00000000000020e6         jmp        loc_1e46

                     loc_20eb:
00000000000020eb         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+564
00000000000020f0         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000020f7         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5683
00000000000020fe         mov        rsi, rax
0000000000002101         mov        edi, 0x1
0000000000002106         xor        eax, eax
0000000000002108         call       j___printf_chk                              ; __printf_chk
000000000000210d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000210f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002114         call       j_setlocale                                 ; setlocale
0000000000002119         test       rax, rax
000000000000211c         je         loc_2136

000000000000211e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x5691
0000000000002125         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
000000000000212a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000212d         call       j_strncmp                                   ; strncmp
0000000000002132         test       eax, eax
0000000000002134         jne        loc_2179

                     loc_2136:
0000000000002136         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+812
000000000000213d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002142         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002144         lea        r12, qword [aUnexpand]                      ; "unexpand"
000000000000214b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x5629
0000000000002152         call       j_dcgettext                                 ; dcgettext
0000000000002157         lea        rcx, qword [aUnexpand]                      ; "unexpand"
000000000000215e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002165         mov        rsi, rax
0000000000002168         mov        edi, 0x1
000000000000216d         xor        eax, eax
000000000000216f         call       j___printf_chk                              ; __printf_chk
0000000000002174         jmp        loc_20be

                     loc_2179:
0000000000002179         lea        r12, qword [aUnexpand]                      ; "unexpand", CODE XREF=usage+836

                     loc_2180:
0000000000002180         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+643
0000000000002187         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
000000000000218e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002190         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002195         call       j_dcgettext                                 ; dcgettext
000000000000219a         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
000000000000219d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000021a0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000021a5         jmp        loc_2079
00000000000021aa         align      16                                          ; End of unwind block (FDE at 0x69a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_extend_size:
00000000000021b0         cmp        qword [extend_size], 0x0                    ; Begin of unwind block (FDE at 0x6a24), extend_size, CODE XREF=parse_tab_stops+408, parse_tab_stops+773
00000000000021b8         push       rbx
00000000000021b9         mov        eax, 0x1
00000000000021be         mov        rbx, rdi
00000000000021c1         je         loc_21e6

00000000000021c3         lea        rsi, qword [aSpecifierOnlyA]                ; argument "msgid" for method j_dcgettext, "'/' specifier only allowed with the last value"
00000000000021ca         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021cf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021d1         call       j_dcgettext                                 ; dcgettext
00000000000021d6         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000021d8         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000021db         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000021dd         xor        eax, eax
00000000000021df         call       j_error                                     ; error
00000000000021e4         xor        eax, eax

                     loc_21e6:
00000000000021e6         mov        qword [extend_size], rbx                    ; extend_size, CODE XREF=set_extend_size+17
00000000000021ed         pop        rbx
00000000000021ee         ret
                        ; endp
00000000000021ef         align      16                                          ; End of unwind block (FDE at 0x6a24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_increment_size:
00000000000021f0         cmp        qword [increment_size], 0x0                 ; Begin of unwind block (FDE at 0x6a40), increment_size, CODE XREF=parse_tab_stops+194, parse_tab_stops+269
00000000000021f8         push       rbx
00000000000021f9         mov        eax, 0x1
00000000000021fe         mov        rbx, rdi
0000000000002201         je         loc_2226

0000000000002203         lea        rsi, qword [aSpecifierOnlyA_5a88]           ; argument "msgid" for method j_dcgettext, "'+' specifier only allowed with the last value"
000000000000220a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000220f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002211         call       j_dcgettext                                 ; dcgettext
0000000000002216         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002218         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000221b         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000221d         xor        eax, eax
000000000000221f         call       j_error                                     ; error
0000000000002224         xor        eax, eax

                     loc_2226:
0000000000002226         mov        qword [increment_size], rbx                 ; increment_size, CODE XREF=set_increment_size+17
000000000000222d         pop        rbx
000000000000222e         ret
                        ; endp
000000000000222f         align      16                                          ; End of unwind block (FDE at 0x6a40)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     add_tab_stop:
0000000000002230         push       rbp                                         ; Begin of unwind block (FDE at 0x6a5c), CODE XREF=main+367, main+1181, parse_tab_stops+352, parse_tab_stops+768
0000000000002231         push       rbx
0000000000002232         mov        rbx, rdi
0000000000002235         sub        rsp, 0x8
0000000000002239         mov        rax, qword [first_free_tab]                 ; first_free_tab
0000000000002240         mov        rdi, qword [tab_list]                       ; tab_list
0000000000002247         mov        rsi, qword [n_tabs_allocated]               ; n_tabs_allocated
000000000000224e         test       rax, rax
0000000000002251         je         loc_2288

0000000000002253         lea        rdx, qword [rax*8]
000000000000225b         mov        rcx, qword [rdi+rdx-8]
0000000000002260         cmp        rcx, rbx
0000000000002263         jbe        loc_2332

0000000000002269         cmp        rax, rsi
000000000000226c         je         loc_22c0

000000000000226e         add        rax, 0x1
0000000000002272         mov        qword [rdi+rdx], rbx
0000000000002276         mov        qword [first_free_tab], rax                 ; first_free_tab
000000000000227d         add        rsp, 0x8
0000000000002281         pop        rbx
0000000000002282         pop        rbp
0000000000002283         ret
                        ; endp
0000000000002284         align      8

                     loc_2288:
0000000000002288         mov        rbp, rbx                                    ; CODE XREF=add_tab_stop+33

                     loc_228b:
000000000000228b         cmp        rax, rsi                                    ; CODE XREF=add_tab_stop+264
000000000000228e         je         loc_22c2

                     loc_2290:
0000000000002290         mov        qword [rdi+rax*8], rbx                      ; CODE XREF=add_tab_stop+210
0000000000002294         cmp        qword [max_column_width], rbp               ; max_column_width
000000000000229b         lea        rdx, qword [rax+1]
000000000000229f         mov        qword [first_free_tab], rdx                 ; first_free_tab
00000000000022a6         jae        loc_22af

00000000000022a8         mov        qword [max_column_width], rbp               ; max_column_width

                     loc_22af:
00000000000022af         add        rsp, 0x8                                    ; CODE XREF=add_tab_stop+118
00000000000022b3         pop        rbx
00000000000022b4         pop        rbp
00000000000022b5         ret
                        ; endp
00000000000022b6         align      64

                     loc_22c0:
00000000000022c0         xor        ebp, ebp                                    ; CODE XREF=add_tab_stop+60

                     loc_22c2:
00000000000022c2         test       rdi, rdi                                    ; CODE XREF=add_tab_stop+94
00000000000022c5         je         loc_2308

00000000000022c7         movabs     rax, 0xaaaaaaaaaaaaaa9
00000000000022d1         cmp        rsi, rax
00000000000022d4         ja         loc_232d

00000000000022d6         mov        rax, rsi
00000000000022d9         shr        rax, 0x1
00000000000022dc         lea        rsi, qword [rsi+rax+1]

                     loc_22e1:
00000000000022e1         mov        qword [n_tabs_allocated], rsi               ; n_tabs_allocated, CODE XREF=add_tab_stop+251
00000000000022e8         shl        rsi, 0x3                                    ; argument #2 for method xrealloc
00000000000022ec         call       xrealloc                                    ; xrealloc
00000000000022f1         mov        rdi, rax
00000000000022f4         mov        qword [tab_list], rax                       ; tab_list
00000000000022fb         mov        rax, qword [first_free_tab]                 ; first_free_tab
0000000000002302         jmp        loc_2290
0000000000002304         align      8

                     loc_2308:
0000000000002308         test       rsi, rsi                                    ; CODE XREF=add_tab_stop+149
000000000000230b         mov        eax, 0x10
0000000000002310         mov        edx, 0x8
0000000000002315         cmove      rsi, rax
0000000000002319         mov        rax, rdx
000000000000231c         xor        ecx, ecx
000000000000231e         mul        rsi
0000000000002321         jo         loc_233d

                     loc_2323:
0000000000002323         test       rax, rax                                    ; CODE XREF=add_tab_stop+274
0000000000002326         js         loc_232d

0000000000002328         test       rcx, rcx
000000000000232b         je         loc_22e1

                     loc_232d:
000000000000232d         call       xalloc_die                                  ; xalloc_die, CODE XREF=add_tab_stop+164, add_tab_stop+246
                        ; endp

                     loc_2332:
0000000000002332         mov        rbp, rbx                                    ; CODE XREF=add_tab_stop+51
0000000000002335         sub        rbp, rcx
0000000000002338         jmp        loc_228b

                     loc_233d:
000000000000233d         mov        ecx, 0x1                                    ; CODE XREF=add_tab_stop+241
0000000000002342         jmp        loc_2323
0000000000002344         align      16                                          ; End of unwind block (FDE at 0x6a5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     parse_tab_stops:
0000000000002350         push       r15                                         ; Begin of unwind block (FDE at 0x6a94), CODE XREF=main+414
0000000000002352         push       r14
0000000000002354         push       r13
0000000000002356         push       r12
0000000000002358         push       rbp
0000000000002359         push       rbx
000000000000235a         sub        rsp, 0x18
000000000000235e         movzx      r15d, byte [rdi]
0000000000002362         test       r15b, r15b
0000000000002365         je         loc_2471

000000000000236b         mov        rbx, rdi
000000000000236e         xor        r14d, r14d
0000000000002371         mov        byte [rsp+0x48+var_40], 0x1
0000000000002376         mov        qword [rsp+0x48+var_48], 0x0
000000000000237e         xor        r13d, r13d
0000000000002381         xor        r12d, r12d
0000000000002384         xor        ebp, ebp
0000000000002386         jmp        loc_23ee
0000000000002388         align      16

                     loc_2390:
0000000000002390         call       j___ctype_b_loc                             ; __ctype_b_loc, CODE XREF=parse_tab_stops+162
0000000000002395         mov        rsi, qword [rax]
0000000000002398         movzx      ecx, r15b
000000000000239c         test       byte [rsi+rcx*2], 0x1
00000000000023a0         jne        loc_23f4

00000000000023a2         cmp        r15b, 0x2f
00000000000023a6         je         loc_24c8

00000000000023ac         cmp        r15b, 0x2b
00000000000023b0         je         loc_2508

00000000000023b6         movsx      edx, r15b
00000000000023ba         sub        edx, 0x30
00000000000023bd         cmp        edx, 0x9
00000000000023c0         ja         loc_2670

00000000000023c6         test       bpl, bpl
00000000000023c9         jne        loc_2528

00000000000023cf         movsxd     r14, edx
00000000000023d2         mov        rax, rbx
00000000000023d5         mov        qword [rsp+0x48+var_48], rbx
00000000000023d9         mov        ebp, 0x1
00000000000023de         nop

                     loc_23e0:
00000000000023e0         movzx      r15d, byte [rax+1]                          ; CODE XREF=parse_tab_stops+339, parse_tab_stops+365, parse_tab_stops+397, parse_tab_stops+429, parse_tab_stops+461, parse_tab_stops+604, parse_tab_stops+677, parse_tab_stops+749
00000000000023e5         lea        rbx, qword [rax+1]
00000000000023e9         test       r15b, r15b
00000000000023ec         je         loc_2438

                     loc_23ee:
00000000000023ee         cmp        r15b, 0x2c                                  ; CODE XREF=parse_tab_stops+54, parse_tab_stops+227
00000000000023f2         jne        loc_2390

                     loc_23f4:
00000000000023f4         test       bpl, bpl                                    ; CODE XREF=parse_tab_stops+80
00000000000023f7         je         loc_24a0

00000000000023fd         test       r12b, r12b
0000000000002400         mov        rdi, r14
0000000000002403         jne        loc_24e8

0000000000002409         test       r13b, r13b
000000000000240c         je         loc_24b0

0000000000002412         call       set_increment_size                          ; set_increment_size
0000000000002417         test       al, al
0000000000002419         mov        r13d, eax
000000000000241c         je         loc_269f

0000000000002422         mov        rax, rbx
0000000000002425         xor        ebp, ebp
0000000000002427         movzx      r15d, byte [rax+1]
000000000000242c         lea        rbx, qword [rax+1]
0000000000002430         test       r15b, r15b
0000000000002433         jne        loc_23ee

0000000000002435         nop        dword [rax]

                     loc_2438:
0000000000002438         test       bpl, bpl                                    ; CODE XREF=parse_tab_stops+156
000000000000243b         je         loc_2466

000000000000243d         cmp        byte [rsp+0x48+var_40], 0x0
0000000000002442         je         loc_269f

0000000000002448         test       r12b, r12b
000000000000244b         mov        rdi, r14
000000000000244e         jne        loc_2655

0000000000002454         test       r13b, r13b
0000000000002457         je         loc_2642

000000000000245d         call       set_increment_size                          ; set_increment_size
0000000000002462         mov        byte [rsp+0x48+var_40], al

                     loc_2466:
0000000000002466         cmp        byte [rsp+0x48+var_40], 0x0                 ; CODE XREF=parse_tab_stops+235
000000000000246b         je         loc_269f

                     loc_2471:
0000000000002471         add        rsp, 0x18                                   ; CODE XREF=parse_tab_stops+21, parse_tab_stops+787
0000000000002475         pop        rbx
0000000000002476         pop        rbp
0000000000002477         pop        r12
0000000000002479         pop        r13
000000000000247b         pop        r14
000000000000247d         pop        r15
000000000000247f         ret
                        ; endp

                     loc_2480:
0000000000002480         lea        rax, qword [r14+r14*4]                      ; CODE XREF=parse_tab_stops+485
0000000000002484         movsxd     rdx, edx
0000000000002487         lea        rax, qword [rdx+rax*2]
000000000000248b         cmp        rax, r14
000000000000248e         jb         loc_253b

0000000000002494         mov        r14, rax
0000000000002497         nop        word [rax+rax]

                     loc_24a0:
00000000000024a0         mov        rax, rbx                                    ; CODE XREF=parse_tab_stops+167
00000000000024a3         jmp        loc_23e0
00000000000024a8         align      16

                     loc_24b0:
00000000000024b0         call       add_tab_stop                                ; add_tab_stop, CODE XREF=parse_tab_stops+188
00000000000024b5         mov        r12d, r13d
00000000000024b8         xor        ebp, ebp
00000000000024ba         mov        rax, rbx
00000000000024bd         jmp        loc_23e0
00000000000024c2         align      8

                     loc_24c8:
00000000000024c8         test       bpl, bpl                                    ; CODE XREF=parse_tab_stops+86
00000000000024cb         jne        loc_25b8

00000000000024d1         xor        r13d, r13d
00000000000024d4         mov        rax, rbx
00000000000024d7         mov        r12d, 0x1
00000000000024dd         jmp        loc_23e0
00000000000024e2         align      8

                     loc_24e8:
00000000000024e8         call       set_extend_size                             ; set_extend_size, CODE XREF=parse_tab_stops+179
00000000000024ed         test       al, al
00000000000024ef         mov        r12d, eax
00000000000024f2         je         loc_269f

00000000000024f8         mov        rax, rbx
00000000000024fb         xor        ebp, ebp
00000000000024fd         jmp        loc_23e0
0000000000002502         align      8

                     loc_2508:
0000000000002508         test       bpl, bpl                                    ; CODE XREF=parse_tab_stops+96
000000000000250b         jne        loc_2600

0000000000002511         xor        r12d, r12d
0000000000002514         mov        rax, rbx
0000000000002517         mov        r13d, 0x1
000000000000251d         jmp        loc_23e0
0000000000002522         align      8

                     loc_2528:
0000000000002528         movabs     rax, 0x1999999999999999                     ; CODE XREF=parse_tab_stops+121
0000000000002532         cmp        r14, rax
0000000000002535         jbe        loc_2480

                     loc_253b:
000000000000253b         mov        r15, qword [rsp+0x48+var_48]                ; CODE XREF=parse_tab_stops+318
000000000000253f         lea        rsi, qword [a0123456789]                    ; argument "__accept" for method j_strspn, "0123456789"
0000000000002546         mov        rdi, r15                                    ; argument "__s" for method j_strspn
0000000000002549         call       j_strspn                                    ; strspn
000000000000254e         mov        rdi, r15
0000000000002551         mov        rsi, rax
0000000000002554         mov        rbx, rax
0000000000002557         mov        qword [rsp+0x48+var_48], r15
000000000000255b         call       xstrndup                                    ; xstrndup
0000000000002560         mov        rdi, rax
0000000000002563         mov        r15, rax
0000000000002566         call       quote                                       ; quote
000000000000256b         lea        rsi, qword [aTabStopIsTooLa]                ; argument "msgid" for method j_dcgettext, "tab stop is too large %s"
0000000000002572         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002577         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002579         mov        qword [rsp+0x48+var_40], rax
000000000000257e         call       j_dcgettext                                 ; dcgettext
0000000000002583         mov        rcx, qword [rsp+0x48+var_40]
0000000000002588         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000258b         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000258d         xor        eax, eax
000000000000258f         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002591         call       j_error                                     ; error
0000000000002596         mov        rdi, r15                                    ; argument "__ptr" for method j_free
0000000000002599         call       j_free                                      ; free
000000000000259e         mov        rax, qword [rsp+0x48+var_48]
00000000000025a2         mov        byte [rsp+0x48+var_40], 0x0
00000000000025a7         lea        rax, qword [rax+rbx-1]
00000000000025ac         jmp        loc_23e0
00000000000025b1         align      8

                     loc_25b8:
00000000000025b8         mov        rdi, rbx                                    ; CODE XREF=parse_tab_stops+379
00000000000025bb         xor        r13d, r13d
00000000000025be         call       quote                                       ; quote
00000000000025c3         lea        rsi, qword [aSpecifierNotAt_5ab8]           ; argument "msgid" for method j_dcgettext, "'/' specifier not at start of number: %s"
00000000000025ca         mov        r12, rax
00000000000025cd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000025d2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000025d4         call       j_dcgettext                                 ; dcgettext
00000000000025d9         mov        rcx, r12
00000000000025dc         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000025df         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000025e1         xor        eax, eax
00000000000025e3         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000025e5         mov        r12d, ebp
00000000000025e8         call       j_error                                     ; error
00000000000025ed         mov        rax, rbx
00000000000025f0         mov        byte [rsp+0x48+var_40], 0x0
00000000000025f5         jmp        loc_23e0
00000000000025fa         align      512

                     loc_2600:
0000000000002600         mov        rdi, rbx                                    ; CODE XREF=parse_tab_stops+443
0000000000002603         mov        r13d, ebp
0000000000002606         call       quote                                       ; quote
000000000000260b         lea        rsi, qword [aSpecifierNotAt]                ; argument "msgid" for method j_dcgettext, "'+' specifier not at start of number: %s"
0000000000002612         mov        r12, rax
0000000000002615         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000261a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000261c         call       j_dcgettext                                 ; dcgettext
0000000000002621         mov        rcx, r12
0000000000002624         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002627         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002629         xor        eax, eax
000000000000262b         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000262d         xor        r12d, r12d
0000000000002630         call       j_error                                     ; error
0000000000002635         mov        rax, rbx
0000000000002638         mov        byte [rsp+0x48+var_40], 0x0
000000000000263d         jmp        loc_23e0

                     loc_2642:
0000000000002642         add        rsp, 0x18                                   ; CODE XREF=parse_tab_stops+263
0000000000002646         pop        rbx
0000000000002647         pop        rbp
0000000000002648         pop        r12
000000000000264a         pop        r13
000000000000264c         pop        r14
000000000000264e         pop        r15
0000000000002650         jmp        add_tab_stop                                ; add_tab_stop
                        ; endp

                     loc_2655:
0000000000002655         call       set_extend_size                             ; set_extend_size, CODE XREF=parse_tab_stops+254
000000000000265a         mov        byte [rsp+0x48+var_40], al
000000000000265e         cmp        byte [rsp+0x48+var_40], 0x0
0000000000002663         jne        loc_2471

0000000000002669         jmp        loc_269f
000000000000266b         align      16

                     loc_2670:
0000000000002670         mov        rdi, rbx                                    ; CODE XREF=parse_tab_stops+112
0000000000002673         call       quote                                       ; quote
0000000000002678         lea        rsi, qword [aTabSizeContain]                ; argument "msgid" for method j_dcgettext, "tab size contains invalid character(s): %s"
000000000000267f         mov        rbx, rax
0000000000002682         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002687         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002689         call       j_dcgettext                                 ; dcgettext
000000000000268e         mov        rcx, rbx
0000000000002691         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002694         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002696         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002698         xor        eax, eax
000000000000269a         call       j_error                                     ; error

                     loc_269f:
000000000000269f         mov        edi, 0x1                                    ; argument "__status" for method j_exit, CODE XREF=parse_tab_stops+204, parse_tab_stops+242, parse_tab_stops+283, parse_tab_stops+418, parse_tab_stops+793
00000000000026a4         call       j_exit                                      ; exit
                        ; endp
00000000000026a9         align      16                                          ; End of unwind block (FDE at 0x6a94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     finalize_tab_stops:
00000000000026b0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x6afc), CODE XREF=main+464
00000000000026b4         mov        rsi, qword [first_free_tab]                 ; first_free_tab
00000000000026bb         mov        rdi, qword [tab_list]                       ; tab_list
00000000000026c2         test       rsi, rsi
00000000000026c5         je         loc_2744

00000000000026c7         mov        r8, qword [rdi]
00000000000026ca         test       r8, r8
00000000000026cd         mov        rcx, r8
00000000000026d0         je         loc_2780

00000000000026d6         xor        eax, eax
00000000000026d8         jmp        loc_26f9
00000000000026da         align      32

                     loc_26e0:
00000000000026e0         mov        rdx, qword [rdi+rax*8]                      ; CODE XREF=finalize_tab_stops+80
00000000000026e4         test       rdx, rdx
00000000000026e7         je         loc_2780

00000000000026ed         cmp        rcx, rdx
00000000000026f0         jae        loc_27a4

00000000000026f6         mov        rcx, rdx

                     loc_26f9:
00000000000026f9         add        rax, 0x1                                    ; CODE XREF=finalize_tab_stops+40
00000000000026fd         cmp        rsi, rax
0000000000002700         jne        loc_26e0

0000000000002702         mov        rax, qword [increment_size]                 ; increment_size
0000000000002709         test       rax, rax
000000000000270c         je         loc_271c

000000000000270e         cmp        qword [extend_size], 0x0                    ; extend_size
0000000000002716         jne        loc_27c8

                     loc_271c:
000000000000271c         cmp        rsi, 0x1                                    ; CODE XREF=finalize_tab_stops+92
0000000000002720         je         loc_2732

                     loc_2722:
0000000000002722         mov        qword [tab_size], 0x0                       ; tab_size, CODE XREF=finalize_tab_stops+137

                     loc_272d:
000000000000272d         add        rsp, 0x8                                    ; CODE XREF=finalize_tab_stops+146
0000000000002731         ret
                        ; endp

                     loc_2732:
0000000000002732         or         rax, qword [extend_size]                    ; extend_size, CODE XREF=finalize_tab_stops+112
0000000000002739         jne        loc_2722

000000000000273b         mov        qword [tab_size], r8                        ; tab_size
0000000000002742         jmp        loc_272d

                     loc_2744:
0000000000002744         mov        rdx, qword [increment_size]                 ; increment_size, CODE XREF=finalize_tab_stops+21
000000000000274b         mov        rax, qword [extend_size]                    ; extend_size
0000000000002752         test       rdx, rdx
0000000000002755         je         loc_2772

0000000000002757         test       rax, rax
000000000000275a         jne        loc_27c8

000000000000275c         mov        rax, rdx

                     loc_275f:
000000000000275f         mov        qword [max_column_width], rax               ; max_column_width, CODE XREF=finalize_tab_stops+206
0000000000002766         mov        qword [tab_size], rax                       ; tab_size
000000000000276d         add        rsp, 0x8
0000000000002771         ret
                        ; endp

                     loc_2772:
0000000000002772         test       rax, rax                                    ; CODE XREF=finalize_tab_stops+165
0000000000002775         mov        edx, 0x8
000000000000277a         cmove      rax, rdx
000000000000277e         jmp        loc_275f

                     loc_2780:
0000000000002780         lea        rsi, qword [aTabSizeCannotB]                ; argument "msgid" for method j_dcgettext, "tab size cannot be 0", CODE XREF=finalize_tab_stops+32, finalize_tab_stops+55
0000000000002787         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000278c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000278e         call       j_dcgettext                                 ; dcgettext
0000000000002793         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002795         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002798         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000279d         xor        eax, eax
000000000000279f         call       j_error                                     ; error

                     loc_27a4:
00000000000027a4         lea        rsi, qword [aTabSizesMustBe]                ; argument "msgid" for method j_dcgettext, "tab sizes must be ascending", CODE XREF=finalize_tab_stops+64
00000000000027ab         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000027b0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000027b2         call       j_dcgettext                                 ; dcgettext
00000000000027b7         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000027b9         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000027bc         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000027c1         xor        eax, eax
00000000000027c3         call       j_error                                     ; error

                     loc_27c8:
00000000000027c8         lea        rsi, qword [aSpecifierIsMut]                ; argument "msgid" for method j_dcgettext, "'/' specifier is mutually exclusive with '+'", CODE XREF=finalize_tab_stops+102, finalize_tab_stops+170
00000000000027cf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000027d4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000027d6         call       j_dcgettext                                 ; dcgettext
00000000000027db         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000027dd         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000027e0         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000027e5         xor        eax, eax
00000000000027e7         call       j_error                                     ; error
00000000000027ec         nop        dword [rax]                                 ; End of unwind block (FDE at 0x6afc)
                     get_next_tab_column:
00000000000027f0         mov        rcx, qword [tab_size]                       ; Begin of unwind block (FDE at 0x6b20), tab_size, CODE XREF=main+824
00000000000027f7         mov        byte [rdx], 0x0
00000000000027fa         test       rcx, rcx
00000000000027fd         jne        loc_2860

00000000000027ff         mov        rcx, qword [rsi]
0000000000002802         mov        rax, qword [first_free_tab]                 ; first_free_tab
0000000000002809         cmp        rax, rcx
000000000000280c         jbe        loc_283e

000000000000280e         mov        r9, qword [tab_list]                        ; tab_list
0000000000002815         mov        r8, qword [r9+rcx*8]
0000000000002819         cmp        rdi, r8
000000000000281c         jb         loc_286f

000000000000281e         add        rcx, 0x1
0000000000002822         jmp        loc_2836
0000000000002824         align      8

                     loc_2828:
0000000000002828         add        rcx, 0x1                                    ; CODE XREF=get_next_tab_column+76
000000000000282c         mov        r8, qword [r9+rcx*8-8]
0000000000002831         cmp        rdi, r8
0000000000002834         jb         loc_286f

                     loc_2836:
0000000000002836         cmp        rax, rcx                                    ; CODE XREF=get_next_tab_column+50
0000000000002839         mov        qword [rsi], rcx
000000000000283c         jne        loc_2828

                     loc_283e:
000000000000283e         mov        rcx, qword [extend_size]                    ; extend_size, CODE XREF=get_next_tab_column+28
0000000000002845         test       rcx, rcx
0000000000002848         jne        loc_2860

000000000000284a         mov        r8, qword [increment_size]                  ; increment_size
0000000000002851         test       r8, r8
0000000000002854         jne        loc_2878

0000000000002856         mov        byte [rdx], 0x1
0000000000002859         jmp        loc_286f
000000000000285b         align      32

                     loc_2860:
0000000000002860         mov        rax, rdi                                    ; CODE XREF=get_next_tab_column+13, get_next_tab_column+88
0000000000002863         xor        edx, edx
0000000000002865         lea        r8, qword [rcx+rdi]
0000000000002869         div        rcx
000000000000286c         sub        r8, rdx

                     loc_286f:
000000000000286f         mov        rax, r8                                     ; CODE XREF=get_next_tab_column+44, get_next_tab_column+68, get_next_tab_column+105, get_next_tab_column+166
0000000000002872         ret
                        ; endp
0000000000002873         align      8

                     loc_2878:
0000000000002878         mov        rdx, qword [tab_list]                       ; tab_list, CODE XREF=get_next_tab_column+100
000000000000287f         lea        rcx, qword [r8+rdi]
0000000000002883         sub        rdi, qword [rdx+rax*8-8]
0000000000002888         xor        edx, edx
000000000000288a         mov        rax, rdi
000000000000288d         div        r8
0000000000002890         sub        rcx, rdx
0000000000002893         mov        r8, rcx
0000000000002896         jmp        loc_286f
0000000000002898         align      32                                          ; End of unwind block (FDE at 0x6b20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_file_list:
00000000000028a0         lea        rax, qword [stdin_argv]                     ; Begin of unwind block (FDE at 0x6b34), stdin_argv, CODE XREF=main+486
00000000000028a7         test       rdi, rdi
00000000000028aa         mov        byte [have_read_stdin], 0x0                 ; have_read_stdin
00000000000028b1         cmove      rdi, rax
00000000000028b5         mov        qword [file_list], rdi                      ; file_list
00000000000028bc         ret
                        ; endp
00000000000028bd         align      64                                          ; End of unwind block (FDE at 0x6b34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32


                     next_file:
00000000000028c0         push       r12                                         ; Begin of unwind block (FDE at 0x6b48), CODE XREF=main+493, main+976
00000000000028c2         push       rbp
00000000000028c3         push       rbx
00000000000028c4         sub        rsp, 0x10
00000000000028c8         test       rdi, rdi
00000000000028cb         je         loc_290f

00000000000028cd         mov        rsi, qword [prev_file.6959]                 ; prev_file.6959
00000000000028d4         test       rsi, rsi
00000000000028d7         je         loc_2aa2

00000000000028dd         test       byte [rdi], 0x20
00000000000028e0         mov        rbp, rdi
00000000000028e3         jne        loc_2a60

                     loc_28e9:
00000000000028e9         lea        rbx, qword [aLibs+10]                       ; 0x5e0a, CODE XREF=next_file+477
00000000000028f0         mov        ecx, 0x2
00000000000028f5         mov        rdi, rbx
00000000000028f8         rep  cmpsb byte [rsi], byte [rdi]
00000000000028fa         mov        rdi, rbp
00000000000028fd         seta       al
0000000000002900         sbb        al, 0x0
0000000000002902         test       al, al
0000000000002904         jne        loc_2a10

000000000000290a         call       j_clearerr_unlocked                         ; clearerr_unlocked

                     loc_290f:
000000000000290f         mov        rax, qword [file_list]                      ; file_list, CODE XREF=next_file+11, next_file+343, next_file+407
0000000000002916         lea        rdx, qword [rax+8]
000000000000291a         mov        qword [file_list], rdx                      ; file_list
0000000000002921         mov        rdx, qword [rax]
0000000000002924         test       rdx, rdx
0000000000002927         je         loc_2a00

000000000000292d         lea        rbx, qword [aLibs+10]                       ; 0x5e0a
0000000000002934         lea        rbp, qword [aWriteError+10]                 ; 0x5724
000000000000293b         jmp        loc_29a0
000000000000293d         align      64

                     loc_2940:
0000000000002940         mov        rax, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=next_file+244
0000000000002947         mov        byte [have_read_stdin], 0x1                 ; have_read_stdin
000000000000294e         test       rax, rax
0000000000002951         jne        loc_29d0

                     loc_2953:
0000000000002953         xor        edi, edi                                    ; CODE XREF=next_file+270
0000000000002955         mov        esi, 0x3
000000000000295a         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000295f         mov        r12, rax
0000000000002962         call       j___errno_location                          ; __errno_location
0000000000002967         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002969         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5dc3
0000000000002970         xor        eax, eax
0000000000002972         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002974         mov        rcx, r12
0000000000002977         call       j_error                                     ; error
000000000000297c         mov        rax, qword [file_list]                      ; file_list
0000000000002983         mov        dword [exit_status], 0x1                    ; exit_status
000000000000298d         lea        rdx, qword [rax+8]
0000000000002991         mov        qword [file_list], rdx                      ; file_list
0000000000002998         mov        rdx, qword [rax]
000000000000299b         test       rdx, rdx
000000000000299e         je         loc_2a00

                     loc_29a0:
00000000000029a0         mov        ecx, 0x2                                    ; CODE XREF=next_file+123
00000000000029a5         mov        rsi, rdx
00000000000029a8         mov        rdi, rbx
00000000000029ab         rep  cmpsb byte [rsi], byte [rdi]
00000000000029ad         seta       al
00000000000029b0         sbb        al, 0x0
00000000000029b2         test       al, al
00000000000029b4         je         loc_2940

00000000000029b6         mov        rdi, rdx                                    ; argument "__filename" for method j_fopen
00000000000029b9         mov        rsi, rbp                                    ; argument "__modes" for method j_fopen
00000000000029bc         mov        qword [rsp+0x28+var_20], rdx
00000000000029c1         call       j_fopen                                     ; fopen
00000000000029c6         test       rax, rax
00000000000029c9         mov        rdx, qword [rsp+0x28+var_20]
00000000000029ce         je         loc_2953

                     loc_29d0:
00000000000029d0         mov        rdi, rax                                    ; CODE XREF=next_file+145
00000000000029d3         mov        esi, 0x2
00000000000029d8         mov        qword [rsp+0x28+var_20], rax
00000000000029dd         mov        qword [prev_file.6959], rdx                 ; prev_file.6959
00000000000029e4         call       fadvise                                     ; fadvise
00000000000029e9         mov        rax, qword [rsp+0x28+var_20]
00000000000029ee         add        rsp, 0x10
00000000000029f2         pop        rbx
00000000000029f3         pop        rbp
00000000000029f4         pop        r12
00000000000029f6         ret
                        ; endp
00000000000029f7         align      512

                     loc_2a00:
0000000000002a00         add        rsp, 0x10                                   ; CODE XREF=next_file+103, next_file+222
0000000000002a04         xor        eax, eax
0000000000002a06         pop        rbx
0000000000002a07         pop        rbp
0000000000002a08         pop        r12
0000000000002a0a         ret
                        ; endp
0000000000002a0b         align      16

                     loc_2a10:
0000000000002a10         call       rpl_fclose                                  ; rpl_fclose, CODE XREF=next_file+68
0000000000002a15         test       eax, eax
0000000000002a17         je         loc_290f

0000000000002a1d         mov        rdx, qword [prev_file.6959]                 ; prev_file.6959
0000000000002a24         mov        esi, 0x3
0000000000002a29         xor        edi, edi
0000000000002a2b         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002a30         mov        rbx, rax
0000000000002a33         call       j___errno_location                          ; __errno_location
0000000000002a38         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002a3a         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5dc3
0000000000002a41         mov        rcx, rbx
0000000000002a44         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002a46         xor        eax, eax
0000000000002a48         call       j_error                                     ; error
0000000000002a4d         mov        dword [exit_status], 0x1                    ; exit_status
0000000000002a57         jmp        loc_290f
0000000000002a5c         align      32

                     loc_2a60:
0000000000002a60         mov        rdx, rsi                                    ; CODE XREF=next_file+35
0000000000002a63         xor        edi, edi
0000000000002a65         mov        esi, 0x3
0000000000002a6a         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002a6f         mov        rbx, rax
0000000000002a72         call       j___errno_location                          ; __errno_location
0000000000002a77         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002a79         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5dc3
0000000000002a80         mov        rcx, rbx
0000000000002a83         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002a85         xor        eax, eax
0000000000002a87         call       j_error                                     ; error
0000000000002a8c         mov        dword [exit_status], 0x1                    ; exit_status
0000000000002a96         mov        rsi, qword [prev_file.6959]                 ; prev_file.6959
0000000000002a9d         jmp        loc_28e9

                     loc_2aa2:
0000000000002aa2         lea        rcx, qword [__PRETTY_FUNCTION__.6961]       ; argument "__function" for method j___assert_fail, "next_file", CODE XREF=next_file+23
0000000000002aa9         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/expand-common.c"
0000000000002ab0         lea        rdi, qword [aPrevfile]                      ; argument "__assertion" for method j___assert_fail, "prev_file"
0000000000002ab7         mov        edx, 0x155                                  ; argument "__line" for method j___assert_fail
0000000000002abc         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000002ac1         align      16                                          ; End of unwind block (FDE at 0x6b48)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cleanup_file_list_stdin:
0000000000002ad0         cmp        byte [have_read_stdin], 0x0                 ; Begin of unwind block (FDE at 0x6b8c), have_read_stdin, CODE XREF=main+1075
0000000000002ad7         jne        loc_2ae0

0000000000002ad9         ret
                        ; endp
0000000000002adb         align      32

                     loc_2ae0:
0000000000002ae0         sub        rsp, 0x8                                    ; CODE XREF=cleanup_file_list_stdin+7
0000000000002ae4         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
0000000000002aeb         call       rpl_fclose                                  ; rpl_fclose
0000000000002af0         test       eax, eax
0000000000002af2         jne        loc_2af9

0000000000002af4         add        rsp, 0x8
0000000000002af8         ret
                        ; endp

                     loc_2af9:
0000000000002af9         call       j___errno_location                          ; __errno_location, CODE XREF=cleanup_file_list_stdin+34
0000000000002afe         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002b00         lea        rdx, qword [aLibs+10]                       ; argument "__format" for method j_error, 0x5e0a
0000000000002b07         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002b0c         xor        eax, eax
0000000000002b0e         call       j_error                                     ; error
0000000000002b13         nop        dword [rax]                                 ; End of unwind block (FDE at 0x6b8c)
0000000000002b16         nop        word [cs:rax+rax]
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_tab_list_info:
0000000000002b20         push       rbx                                         ; Begin of unwind block (FDE at 0x6ba8), CODE XREF=usage+273
0000000000002b21         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002b28         lea        rsi, qword [aTTabslistUseCo]                ; argument "msgid" for method j_dcgettext, "  -t, --tabs=LIST  use comma separated list of tab positions\\n"
0000000000002b2f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002b34         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002b36         call       j_dcgettext                                 ; dcgettext
0000000000002b3b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002b3e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002b41         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002b46         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002b4d         lea        rsi, qword [aTheLastSpecifi]                ; argument "msgid" for method j_dcgettext, "                     The last specified position can be prefixed with '/'\\n                     to specify a tab size to use after the last\\n                     explicitly specified tab stop.  Also a prefix of '+'\\n                     can be used to align r…"
0000000000002b54         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002b56         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002b5b         call       j_dcgettext                                 ; dcgettext
0000000000002b60         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002b63         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002b66         pop        rbx
0000000000002b67         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp
0000000000002b6c         align      16                                          ; End of unwind block (FDE at 0x6ba8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002b70         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x6bc4), file_name
0000000000002b77         ret
                        ; endp
0000000000002b78         align      128                                         ; End of unwind block (FDE at 0x6bc4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002b80         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x6bd8), ignore_EPIPE
0000000000002b87         ret
                        ; endp
0000000000002b88         align      16                                          ; End of unwind block (FDE at 0x6bd8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002b90         push       rbp                                         ; Begin of unwind block (FDE at 0x6bec), DATA XREF=main+107
0000000000002b91         push       rbx
0000000000002b92         sub        rsp, 0x8
0000000000002b96         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002b9d         call       close_stream                                ; close_stream
0000000000002ba2         test       eax, eax
0000000000002ba4         je         loc_2bbc

0000000000002ba6         call       j___errno_location                          ; __errno_location
0000000000002bab         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002bb2         mov        rbx, rax
0000000000002bb5         je         loc_2bd3

0000000000002bb7         cmp        dword [rax], 0x20
0000000000002bba         jne        loc_2bd3

                     loc_2bbc:
0000000000002bbc         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000002bc3         call       close_stream                                ; close_stream
0000000000002bc8         test       eax, eax
0000000000002bca         jne        loc_2c12

0000000000002bcc         add        rsp, 0x8
0000000000002bd0         pop        rbx
0000000000002bd1         pop        rbp
0000000000002bd2         ret
                        ; endp

                     loc_2bd3:
0000000000002bd3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
0000000000002bda         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002bdc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002be1         call       j_dcgettext                                 ; dcgettext
0000000000002be6         mov        rdi, qword [file_name]                      ; file_name
0000000000002bed         mov        rbp, rax
0000000000002bf0         test       rdi, rdi
0000000000002bf3         je         loc_2c1d

0000000000002bf5         call       quotearg_colon                              ; quotearg_colon
0000000000002bfa         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000002bfc         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002c03         mov        rcx, rax
0000000000002c06         mov        r8, rbp
0000000000002c09         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002c0b         xor        eax, eax
0000000000002c0d         call       j_error                                     ; error

                     loc_2c12:
0000000000002c12         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002c18         call       j__exit                                     ; _exit
                        ; endp

                     loc_2c1d:
0000000000002c1d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
0000000000002c1f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5dc3
0000000000002c26         mov        rcx, rax
0000000000002c29         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002c2b         xor        eax, eax
0000000000002c2d         call       j_error                                     ; error
0000000000002c32         jmp        loc_2c12
0000000000002c34         align      64                                          ; End of unwind block (FDE at 0x6bec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
0000000000002c40         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x6c1c)
                        ; endp
0000000000002c45         align      16                                          ; End of unwind block (FDE at 0x6c1c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
0000000000002c50         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6c30), CODE XREF=next_file+292
0000000000002c53         je         loc_2c70

0000000000002c55         push       rbx
0000000000002c56         mov        ebx, esi
0000000000002c58         call       j_fileno                                    ; fileno
0000000000002c5d         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
0000000000002c5f         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
0000000000002c61         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
0000000000002c63         pop        rbx
0000000000002c64         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
0000000000002c66         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
0000000000002c6b         align      16

                     loc_2c70:
0000000000002c70         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
0000000000002c72         align      128                                         ; End of unwind block (FDE at 0x6c30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000002c80         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6c4c), CODE XREF=main+54
0000000000002c83         push       rbx
0000000000002c84         je         loc_2cfd

0000000000002c86         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000002c8b         mov        rbx, rdi
0000000000002c8e         call       j_strrchr                                   ; strrchr
0000000000002c93         test       rax, rax
0000000000002c96         je         loc_2ced

0000000000002c98         lea        r8, qword [rax+1]
0000000000002c9c         mov        rdx, r8
0000000000002c9f         sub        rdx, rbx
0000000000002ca2         cmp        rdx, 0x6
0000000000002ca6         jle        loc_2ced

0000000000002ca8         lea        rsi, qword [rax-6]
0000000000002cac         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000002cb3         mov        ecx, 0x7
0000000000002cb8         rep  cmpsb byte [rsi], byte [rdi]
0000000000002cba         seta       dl
0000000000002cbd         sbb        dl, 0x0
0000000000002cc0         test       dl, dl
0000000000002cc2         jne        loc_2ced

0000000000002cc4         lea        rdi, qword [aLibs+8]                        ; 0x5e08
0000000000002ccb         mov        ecx, 0x3
0000000000002cd0         mov        rsi, r8
0000000000002cd3         mov        rbx, r8
0000000000002cd6         rep  cmpsb byte [rsi], byte [rdi]
0000000000002cd8         seta       dl
0000000000002cdb         sbb        dl, 0x0
0000000000002cde         test       dl, dl
0000000000002ce0         jne        loc_2ced

0000000000002ce2         lea        rbx, qword [rax+4]
0000000000002ce6         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_2ced:
0000000000002ced         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002cf4         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
0000000000002cfb         pop        rbx
0000000000002cfc         ret
                        ; endp

                     loc_2cfd:
0000000000002cfd         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002d04         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
0000000000002d0b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002d10         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002d15         call       j_fwrite                                    ; fwrite
0000000000002d1a         call       j_abort                                     ; abort
                        ; endp
0000000000002d1f         align      32                                          ; End of unwind block (FDE at 0x6c4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002d20         push       rbp                                         ; Begin of unwind block (FDE at 0x6c6c), CODE XREF=sub_3550+2597, sub_3550+2619
0000000000002d21         push       rbx
0000000000002d22         mov        rbp, rdi
0000000000002d25         mov        ebx, esi
0000000000002d27         sub        rsp, 0x8
0000000000002d2b         call       locale_charset                              ; locale_charset
0000000000002d30         movzx      edx, byte [rax]
0000000000002d33         and        edx, 0xffffffdf
0000000000002d36         cmp        dl, 0x55
0000000000002d39         je         loc_2db0

0000000000002d3b         cmp        dl, 0x47
0000000000002d3e         je         loc_2d60

                     loc_2d40:
0000000000002d40         lea        rax, qword [aLibs+27]                       ; 0x5e1b, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002d47         lea        rdx, qword [aLibs+29]                       ; 0x5e1d
0000000000002d4e         cmp        ebx, 0x9
0000000000002d51         cmovne     rax, rdx
0000000000002d55         add        rsp, 0x8
0000000000002d59         pop        rbx
0000000000002d5a         pop        rbp
0000000000002d5b         ret
                        ; endp
0000000000002d5c         align      32

                     loc_2d60:
0000000000002d60         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000002d64         and        edx, 0xffffffdf
0000000000002d67         cmp        dl, 0x42
0000000000002d6a         jne        loc_2d40

0000000000002d6c         cmp        byte [rax+2], 0x31
0000000000002d70         jne        loc_2d40

0000000000002d72         cmp        byte [rax+3], 0x38
0000000000002d76         jne        loc_2d40

0000000000002d78         cmp        byte [rax+4], 0x30
0000000000002d7c         jne        loc_2d40

0000000000002d7e         cmp        byte [rax+5], 0x33
0000000000002d82         jne        loc_2d40

0000000000002d84         cmp        byte [rax+6], 0x30
0000000000002d88         jne        loc_2d40

0000000000002d8a         cmp        byte [rax+7], 0x0
0000000000002d8e         jne        loc_2d40

0000000000002d90         cmp        byte [rbp], 0x60
0000000000002d94         lea        rax, qword [aLibs+20]                       ; 0x5e14
0000000000002d9b         lea        rdx, qword [aLibs+24]                       ; 0x5e18
0000000000002da2         cmovne     rax, rdx
0000000000002da6         add        rsp, 0x8
0000000000002daa         pop        rbx
0000000000002dab         pop        rbp
0000000000002dac         ret
                        ; endp
0000000000002dad         align      16

                     loc_2db0:
0000000000002db0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000002db4         and        edx, 0xffffffdf
0000000000002db7         cmp        dl, 0x54
0000000000002dba         jne        loc_2d40

0000000000002dbc         movzx      edx, byte [rax+2]
0000000000002dc0         and        edx, 0xffffffdf
0000000000002dc3         cmp        dl, 0x46
0000000000002dc6         jne        loc_2d40

0000000000002dcc         cmp        byte [rax+3], 0x2d
0000000000002dd0         jne        loc_2d40

0000000000002dd6         cmp        byte [rax+4], 0x38
0000000000002dda         jne        loc_2d40

0000000000002de0         cmp        byte [rax+5], 0x0
0000000000002de4         jne        loc_2d40

0000000000002dea         cmp        byte [rbp], 0x60
0000000000002dee         lea        rax, qword [aLibs+12]                       ; 0x5e0c
0000000000002df5         lea        rdx, qword [aLibs+16]                       ; 0x5e10
0000000000002dfc         cmovne     rax, rdx
0000000000002e00         add        rsp, 0x8
0000000000002e04         pop        rbx
0000000000002e05         pop        rbp
0000000000002e06         ret
                        ; endp
0000000000002e07         align      16                                          ; End of unwind block (FDE at 0x6c6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002e10         push       r15                                         ; Begin of unwind block (FDE at 0x6cb0), CODE XREF=sub_3550+1165, sub_3550+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002e12         push       r14
0000000000002e14         mov        r15d, r8d
0000000000002e17         push       r13
0000000000002e19         push       r12
0000000000002e1b         mov        r14, rdi
0000000000002e1e         push       rbp
0000000000002e1f         push       rbx
0000000000002e20         mov        ebx, r9d
0000000000002e23         mov        r13, rsi
0000000000002e26         mov        rbp, rcx
0000000000002e29         and        ebx, 0x2
0000000000002e2c         sub        rsp, 0xb8
0000000000002e33         mov        rax, qword [rsp+0xe8+arg_0]
0000000000002e3b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002e40         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002e45         mov        dword [rsp+0xe8+var_70], r9d
0000000000002e4a         mov        qword [rsp+0xe8+var_C8], rax
0000000000002e4f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002e57         mov        qword [rsp+0xe8+var_80], rax
0000000000002e5c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000002e64         mov        qword [rsp+0xe8+var_88], rax
0000000000002e69         mov        rax, qword [fs:0x28]
0000000000002e72         mov        qword [rsp+0xe8+var_40], rax
0000000000002e7a         xor        eax, eax
0000000000002e7c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000002e81         cmp        r15d, 0xa
0000000000002e85         mov        qword [rsp+0xe8+var_90], rax
0000000000002e8a         ja         loc_403f

0000000000002e90         lea        rcx, qword [switch_table_5e80]              ; switch_table_5e80
0000000000002e97         mov        edx, r15d
0000000000002e9a         movsxd     rax, dword [rcx+rdx*4]
0000000000002e9e         add        rax, rcx
0000000000002ea1         jmp        rax                                         ; switch statement using table at 0x5e80, with 11 cases, 0x2ea3,0x3a74,0x3ad0,0x3b25,0x3b6a,0x3ba4,0x3c4a,0x3c84,0x3e78

                     loc_2ea3:
0000000000002ea3         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_3550+1318
0000000000002ea8         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000002ead         xor        r12d, r12d
0000000000002eb0         mov        qword [rsp+0xe8+var_98], 0x0
0000000000002eb9         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000002ebe         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_2ec3:
0000000000002ec3         lea        rax, qword [aLibs+29]                       ; 0x5e1d, CODE XREF=sub_3550+1876
0000000000002eca         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002ed3         xor        r15d, r15d
0000000000002ed6         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000002ede         mov        qword [rsp+0xe8+var_A0], rax

                     loc_2ee3:
0000000000002ee3         xor        r11d, r11d                                  ; CODE XREF=sub_3550+180, sub_3550+1400, sub_3550+1488, sub_3550+1557, sub_3550+1615, sub_3550+1781, sub_3550+1839, sub_3550+2408, sub_3550+2485
0000000000002ee6         mov        rax, rbp
0000000000002ee9         mov        r8d, r12d
0000000000002eec         mov        rbp, r11
0000000000002eef         mov        r11, rax
0000000000002ef2         nop        word [rax+rax]

                     loc_2ef8:
0000000000002ef8         cmp        r11, rbp                                    ; CODE XREF=sub_3000+194
0000000000002efb         setne      r12b
0000000000002eff         cmp        r11, 0xffffffffffffffff
0000000000002f03         jne        loc_2f12

0000000000002f05         mov        rax, qword [rsp+0xe8+var_D8]
0000000000002f0a         cmp        byte [rax+rbp], 0x0
0000000000002f0e         setne      r12b

                     loc_2f12:
0000000000002f12         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000002f15         je         loc_3570

0000000000002f1b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002f20         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002f25         lea        r9, qword [rdi+rbp]
0000000000002f29         setne      al
0000000000002f2c         and        al, byte [rsp+0xe8+var_DB]
0000000000002f30         mov        r10d, eax
0000000000002f33         je         loc_2fe0

0000000000002f39         mov        rax, qword [rsp+0xe8+var_D0]
0000000000002f3e         test       rax, rax
0000000000002f41         je         loc_3370

0000000000002f47         cmp        r11, 0xffffffffffffffff
0000000000002f4b         lea        rbx, qword [rbp+rax]
0000000000002f50         jne        loc_2f80

0000000000002f52         cmp        rax, 0x1
0000000000002f56         jbe        loc_2f80

0000000000002f58         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002f5d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000002f62         mov        qword [rsp+0xe8+var_C0], r9
0000000000002f67         call       j_strlen                                    ; strlen
0000000000002f6c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002f72         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000002f78         mov        r11, rax
0000000000002f7b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_2f80:
0000000000002f80         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000002f83         mov        byte [rsp+0xe8+var_C0], r10b
0000000000002f88         ja         loc_3540

0000000000002f8e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000002f93         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000002f98         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000002f9b         mov        qword [rsp+0xe8+var_A8], r11
0000000000002fa0         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002fa5         mov        qword [rsp+0xe8+var_B8], r9
0000000000002faa         call       j_memcmp                                    ; memcmp
0000000000002faf         test       eax, eax
0000000000002fb1         mov        r9, qword [rsp+0xe8+var_B8]
0000000000002fb6         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002fbc         mov        r11, qword [rsp+0xe8+var_A8]
0000000000002fc1         jne        loc_3540

0000000000002fc7         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002fcc         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002fd2         jne        loc_3f55

0000000000002fd8         nop        dword [rax+rax]

                     loc_2fe0:
0000000000002fe0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_3530+19
0000000000002fe4         cmp        bl, 0x7e
0000000000002fe7         ja         loc_3308

0000000000002fed         lea        rcx, qword [switch_table_5e80+44]           ; 0x5eac
0000000000002ff4         movzx      edx, bl
0000000000002ff7         movsxd     rax, dword [rcx+rdx*4]
0000000000002ffb         add        rax, rcx
0000000000002ffe         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3000:
0000000000003000         xor        r10d, r10d
0000000000003003         cmp        r11, 0x1
0000000000003007         setne      al
000000000000300a         cmp        r11, 0xffffffffffffffff
000000000000300e         jne        loc_301c

0000000000003010         mov        rax, qword [rsp+arg_8]
0000000000003015         cmp        byte [rax+1], 0x0
0000000000003019         setne      al

                     loc_301c:
000000000000301c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3000+14
0000000000003021         sete       dl
0000000000003024         test       al, al
0000000000003026         je         loc_3278

                     loc_302c:
000000000000302c         xor        r12d, r12d                                  ; CODE XREF=sub_3270+11
000000000000302f         xor        eax, eax
0000000000003031         nop        dword [rax]
                        ; endp

                     loc_3038:
0000000000003038         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_3220+50, sub_32f0+119
000000000000303d         jne        loc_3152

0000000000003043         test       dl, dl
0000000000003045         jne        loc_3152

                     loc_304b:
000000000000304b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_3100+87
0000000000003050         test       rsi, rsi
0000000000003053         je         loc_3069

0000000000003055         mov        edx, ebx
0000000000003057         shr        dl, 0x5
000000000000305a         movzx      edx, dl
000000000000305d         mov        edx, dword [rsi+rdx*4]
0000000000003060         bt         edx, ebx
0000000000003063         jb         loc_31b3

                     loc_3069:
0000000000003069         test       r10b, r10b                                  ; CODE XREF=sub_3000+83, sub_3100+93
000000000000306c         jne        loc_31b3

0000000000003072         xor        eax, 0x1
0000000000003075         add        rbp, 0x1
0000000000003079         and        eax, r8d

                     loc_307c:
000000000000307c         test       al, al                                      ; CODE XREF=sub_3550+936
000000000000307e         je         loc_30a0

0000000000003080         cmp        r13, r15
0000000000003083         jbe        loc_308a

0000000000003085         mov        byte [r14+r15], 0x27

                     loc_308a:
000000000000308a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3000+131
000000000000308e         cmp        r13, rax
0000000000003091         jbe        loc_3099

0000000000003093         mov        byte [r14+r15+1], 0x27

                     loc_3099:
0000000000003099         add        r15, 0x2                                    ; CODE XREF=sub_3000+145
000000000000309d         xor        r8d, r8d

                     loc_30a0:
00000000000030a0         cmp        r15, r13                                    ; CODE XREF=sub_3000+126, sub_3100+275, sub_3550+869
00000000000030a3         jae        loc_30a9

00000000000030a5         mov        byte [r14+r15], bl

                     loc_30a9:
00000000000030a9         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_3000+163
00000000000030ae         add        r15, 0x1
00000000000030b2         mov        eax, 0x0
00000000000030b7         test       r12b, r12b
00000000000030ba         cmove      edi, eax
00000000000030bd         mov        byte [rsp+0xe8+var_DA], dil
00000000000030c2         jmp        loc_2ef8
00000000000030c7         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_30d0:
00000000000030d0         xor        r10d, r10d
00000000000030d3         mov        eax, dword [rsp+arg_0]
00000000000030d7         cmp        eax, 0x2
00000000000030da         je         loc_3698

00000000000030e0         cmp        eax, 0x5
00000000000030e3         je         loc_3658

00000000000030e9         cmp        eax, 0x2
00000000000030ec         mov        ebx, 0x3f
00000000000030f1         sete       dl
00000000000030f4         xor        r12d, r12d
00000000000030f7         xor        eax, eax
00000000000030f9         jmp        sub_3000+56
                        ; endp
00000000000030fe         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3100:
0000000000003100         xor        r10d, r10d
0000000000003103         cmp        dword [rsp+arg_0], 0x2
0000000000003108         je         loc_3610

000000000000310e         mov        byte [rsp+arg_74], r12b
0000000000003113         xor        edx, edx
0000000000003115         xor        eax, eax
0000000000003117         mov        ebx, 0x27
000000000000311c         jmp        sub_3000+56
                        ; endp
0000000000003121         nop        dword [rax]
0000000000003128         mov        edx, 0x9
000000000000312d         mov        ebx, 0x74

                     loc_3132:
0000000000003132         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_32c0+10, sub_33b0+37, sub_34f0+53
0000000000003137         sete       al
000000000000313a         and        al, byte [rsp+arg_7]
000000000000313e         jne        sub_3270+30

0000000000003144         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_3100+114
0000000000003149         jne        loc_31b0

                     loc_314b:
000000000000314b         mov        ebx, edx                                    ; CODE XREF=sub_3220+18
000000000000314d         xor        r12d, r12d
0000000000003150         xor        eax, eax
                        ; endp

                     loc_3152:
0000000000003152         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_3000+61, sub_3000+69
0000000000003157         jne        loc_304b

000000000000315d         jmp        loc_3069
0000000000003162         nop        word [rax+rax]
0000000000003168         mov        edx, 0x8
000000000000316d         mov        ebx, 0x62
0000000000003172         jmp        sub_3100+68
0000000000003174         nop        dword [rax]
0000000000003178         cmp        dword [rsp+8], 0x2
000000000000317d         je         sub_3550                                    ; sub_3550
0000000000003183         cmp        byte [rsp+0xd], 0x0
0000000000003188         je         sub_3390+16

                     loc_318e:
000000000000318e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3390+8
0000000000003193         je         loc_33a0

0000000000003199         cmp        qword [rsp+arg_10], 0x0
000000000000319f         jne        loc_355b

00000000000031a5         mov        ebx, 0x5c
00000000000031aa         nop        word [rax+rax]
                        ; endp

                     loc_31b0:
00000000000031b0         xor        r12d, r12d                                  ; CODE XREF=sub_3100+73, sub_34f0+29
                        ; endp

                     loc_31b3:
00000000000031b3         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3000+99, sub_3000+108
00000000000031b8         sete       dl
00000000000031bb         cmp        byte [rsp+0xe8+var_D9], 0x0
00000000000031c0         mov        eax, edx
00000000000031c2         jne        loc_3a18

00000000000031c8         mov        eax, r8d
00000000000031cb         xor        eax, 0x1
00000000000031ce         and        al, dl
00000000000031d0         je         loc_3201

00000000000031d2         cmp        r13, r15
00000000000031d5         jbe        loc_31dc

00000000000031d7         mov        byte [r14+r15], 0x27

                     loc_31dc:
00000000000031dc         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_3100+213
00000000000031e0         cmp        r13, rdx
00000000000031e3         jbe        loc_31eb

00000000000031e5         mov        byte [r14+r15+1], 0x24

                     loc_31eb:
00000000000031eb         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_3100+227
00000000000031ef         cmp        r13, rdx
00000000000031f2         jbe        loc_31fa

00000000000031f4         mov        byte [r14+r15+2], 0x27

                     loc_31fa:
00000000000031fa         add        r15, 0x3                                    ; CODE XREF=sub_3100+242
00000000000031fe         mov        r8d, eax

                     loc_3201:
0000000000003201         cmp        r13, r15                                    ; CODE XREF=sub_3100+208
0000000000003204         jbe        loc_320b

0000000000003206         mov        byte [r14+r15], 0x5c

                     loc_320b:
000000000000320b         add        r15, 0x1                                    ; CODE XREF=sub_3100+260
000000000000320f         add        rbp, 0x1
0000000000003213         jmp        loc_30a0
0000000000003218         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3220:
0000000000003220         cmp        byte [rsp+arg_5], 0x0
0000000000003225         jne        loc_33f3

000000000000322b         xor        edx, edx
000000000000322d         test       byte [rsp+arg_70], 0x1
0000000000003232         je         loc_314b

0000000000003238         add        rbp, 0x1
000000000000323c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000003241         nop        dword [rax]
0000000000003248         cmp        dword [rsp+8], 0x2
000000000000324d         sete       dl
0000000000003250         xor        eax, eax
0000000000003252         jmp        sub_3000+56
0000000000003257         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3260:
0000000000003260         mov        edx, 0x7
0000000000003265         mov        ebx, 0x61
000000000000326a         jmp        sub_3100+68
                        ; endp
000000000000326f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3270:
0000000000003270         cmp        dword [rsp+8], 0x2
0000000000003275         sete       dl
                        ; endp

                     loc_3278:
0000000000003278         test       rbp, rbp                                    ; CODE XREF=sub_3000+38, sub_3490+35
000000000000327b         jne        loc_302c

0000000000003281         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_34c0+43
0000000000003286         and        al, dl
0000000000003288         je         sub_3000+56

000000000000328e         mov        rbp, r11
0000000000003291         mov        dword [rsp+arg_0], 0x2
0000000000003299         jmp        sub_3550+1097
                        ; endp
000000000000329e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_32a0:
00000000000032a0         cmp        dword [rsp+arg_0], 0x2
00000000000032a5         sete       dl
00000000000032a8         xor        r12d, r12d
00000000000032ab         jmp        sub_3270+17
                        ; endp
00000000000032ad         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_32b0:
00000000000032b0         cmp        dword [rsp+arg_0], 0x2
00000000000032b5         mov        ebx, 0x20
00000000000032ba         sete       dl
00000000000032bd         jmp        sub_3270+17
                        ; endp
00000000000032bf         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_32c0:
00000000000032c0         mov        edx, 0xd
00000000000032c5         mov        ebx, 0x72
00000000000032ca         jmp        loc_3132
00000000000032cf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_32d0:
00000000000032d0         mov        edx, 0xc
00000000000032d5         mov        ebx, 0x66
00000000000032da         jmp        sub_3100+68
                        ; endp
00000000000032df         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_32e0:
00000000000032e0         mov        edx, 0xb
00000000000032e5         mov        ebx, 0x76
00000000000032ea         jmp        sub_3100+68
                        ; endp
00000000000032ef         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_32f0:
00000000000032f0         mov        edx, 0xa
00000000000032f5         mov        ebx, 0x6e
00000000000032fa         jmp        sub_3100+50
                        ; endp
00000000000032ff         align      256

                     loc_3300:
0000000000003300         xor        r10d, r10d                                  ; CODE XREF=sub_32f0+135
0000000000003303         nop        dword [rax+rax]

                     loc_3308:
0000000000003308         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000330e         jne        loc_36b8

0000000000003314         mov        qword [rsp+0xe8+var_B0], r11
0000000000003319         mov        byte [rsp+0xe8+var_B8], r8b
000000000000331e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003323         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003328         mov        rcx, qword [rax]
000000000000332b         movzx      edx, bl
000000000000332e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003334         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000333a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000333f         mov        edi, 0x1
0000000000003344         movzx      eax, word [rcx+rdx*2]
0000000000003348         and        ax, 0x4000
000000000000334c         setne      r12b
0000000000003350         sete       al
0000000000003353         and        al, byte [rsp+0xe8+var_DB]

                     loc_3357:
0000000000003357         test       al, al                                      ; CODE XREF=sub_3550+2221
0000000000003359         jne        loc_3cf1

000000000000335f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003364         sete       dl
0000000000003367         jmp        loc_3038
000000000000336c         align      16

                     loc_3370:
0000000000003370         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000003374         cmp        bl, 0x7e
0000000000003377         ja         loc_3300

0000000000003379         lea        rcx, qword [switch_table_5e80+552]          ; 0x60a8
0000000000003380         movzx      edx, bl
0000000000003383         movsxd     rax, dword [rcx+rdx*4]
0000000000003387         add        rax, rcx
000000000000338a         jmp        rax
                        ; endp
000000000000338c         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3390:
0000000000003390         xor        r10d, r10d
0000000000003393         cmp        byte [rsp+arg_5], 0x0
0000000000003398         jne        loc_318e

000000000000339e         nop

                     loc_33a0:
00000000000033a0         mov        edx, 0x5c                                   ; CODE XREF=sub_3100+136, sub_3100+147
00000000000033a5         mov        ebx, 0x5c
00000000000033aa         jmp        sub_3100+68
                        ; endp
00000000000033af         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33b0:
00000000000033b0         mov        edx, 0xc
00000000000033b5         xor        r10d, r10d
00000000000033b8         mov        ebx, 0x66
00000000000033bd         jmp        sub_3100+68
                        ; endp
00000000000033c2         nop        word [rax+rax]
00000000000033c8         mov        edx, 0xa
00000000000033cd         xor        r10d, r10d
00000000000033d0         mov        ebx, 0x6e
00000000000033d5         jmp        sub_3100+50
00000000000033da         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33e0:
00000000000033e0         mov        ebx, 0x61
00000000000033e5         jmp        sub_3100+176
                        ; endp
00000000000033ea         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33f0:
00000000000033f0         xor        r10d, r10d
                        ; endp

                     loc_33f3:
00000000000033f3         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3220+5
00000000000033f8         sete       dl
00000000000033fb         cmp        byte [rsp+arg_7], 0x0
0000000000003400         jne        loc_3f9a

0000000000003406         mov        eax, r8d
0000000000003409         mov        rcx, r15
000000000000340c         xor        eax, 0x1
000000000000340f         and        al, dl
0000000000003411         je         loc_3440

0000000000003413         cmp        r13, r15
0000000000003416         jbe        loc_341d

0000000000003418         mov        byte [r14+r15], 0x27

                     loc_341d:
000000000000341d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_33f0+38
0000000000003421         cmp        r13, rcx
0000000000003424         jbe        loc_342c

0000000000003426         mov        byte [r14+r15+1], 0x24

                     loc_342c:
000000000000342c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_33f0+52
0000000000003430         cmp        r13, rcx
0000000000003433         ja         loc_3a69

                     loc_3439:
0000000000003439         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_3550+1311
000000000000343d         mov        r8d, eax

                     loc_3440:
0000000000003440         cmp        r13, rcx                                    ; CODE XREF=sub_33f0+33
0000000000003443         jbe        loc_344a

0000000000003445         mov        byte [r14+rcx], 0x5c

                     loc_344a:
000000000000344a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_33f0+83
000000000000344f         lea        r15, qword [rcx+1]
0000000000003453         je         loc_3a59

0000000000003459         lea        rax, qword [rbp+1]
000000000000345d         cmp        rax, r11
0000000000003460         jae        loc_347b

0000000000003462         mov        rax, qword [rsp+arg_8]
0000000000003467         movzx      eax, byte [rax+rbp+1]
000000000000346c         mov        byte [rsp+arg_20], al
0000000000003470         sub        eax, 0x30
0000000000003473         cmp        al, 0x9
0000000000003475         jbe        loc_3ca9

                     loc_347b:
000000000000347b         mov        eax, r12d                                   ; CODE XREF=sub_33f0+112
000000000000347e         mov        ebx, 0x30
0000000000003483         xor        r12d, r12d
0000000000003486         jmp        sub_3000+56
                        ; endp
000000000000348b         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3490:
0000000000003490         cmp        dword [rsp+arg_0], 0x2
0000000000003495         mov        r12d, r10d
0000000000003498         sete       dl
000000000000349b         xor        r10d, r10d
000000000000349e         xor        eax, eax
00000000000034a0         jmp        sub_3000+56
                        ; endp
00000000000034a5         nop        dword [rax]
00000000000034a8         cmp        dword [rsp+8], 0x2
00000000000034ad         sete       dl
00000000000034b0         xor        r10d, r10d
00000000000034b3         jmp        sub_3270+8
00000000000034b8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_34c0:
00000000000034c0         cmp        dword [rsp+8], 0x2
00000000000034c5         sete       dl
00000000000034c8         xor        r10d, r10d
00000000000034cb         xor        r12d, r12d
00000000000034ce         jmp        sub_3270+17
                        ; endp
00000000000034d3         nop        dword [rax+rax]
00000000000034d8         cmp        dword [rsp+8], 0x2
00000000000034dd         mov        r12d, r10d
00000000000034e0         mov        ebx, 0x20
00000000000034e5         sete       dl
00000000000034e8         xor        r10d, r10d
00000000000034eb         jmp        sub_3270+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_34f0:
00000000000034f0         mov        edx, 0xd
00000000000034f5         xor        r10d, r10d
00000000000034f8         mov        ebx, 0x72
00000000000034fd         jmp        sub_3100+50
                        ; endp
0000000000003502         nop        word [rax+rax]
0000000000003508         mov        ebx, 0x76
000000000000350d         jmp        sub_3100+176
0000000000003512         nop        word [rax+rax]
0000000000003518         mov        edx, 0x9
000000000000351d         xor        r10d, r10d
0000000000003520         mov        ebx, 0x74
0000000000003525         jmp        sub_3100+50
000000000000352a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3530:
0000000000003530         mov        ebx, 0x62
0000000000003535         jmp        sub_3100+176
                        ; endp
000000000000353a         nop        word [rax+rax]

                     loc_3540:
0000000000003540         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000003543         jmp        loc_2fe0
0000000000003548         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_3550:
0000000000003550         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3100+125
0000000000003555         jne        sub_3550+2416
                        ; endp

                     loc_355b:
000000000000355b         add        rbp, 0x1                                    ; CODE XREF=sub_3100+159
000000000000355f         mov        eax, r8d
0000000000003562         xor        r12d, r12d
0000000000003565         mov        ebx, 0x5c
000000000000356a         jmp        sub_3000+124
                        ; endp
000000000000356f         align      16

                     loc_3570:
0000000000003570         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000003575         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000357a         mov        r12d, r8d
000000000000357d         mov        rbp, r11
0000000000003580         sete       dl
0000000000003583         mov        eax, ebx
0000000000003585         test       r15, r15
0000000000003588         sete       cl
000000000000358b         and        eax, edx
000000000000358d         and        al, cl
000000000000358f         jne        loc_3ff6

0000000000003595         mov        eax, ebx
0000000000003597         xor        eax, 0x1
000000000000359a         and        dl, al
000000000000359c         je         loc_3f0c

00000000000035a2         cmp        byte [rsp+0xe8+var_6C], 0x0
00000000000035a7         je         loc_3f0a

00000000000035ad         cmp        byte [rsp+0xe8+var_DA], 0x0
00000000000035b2         jne        loc_3fad

00000000000035b8         test       r13, r13
00000000000035bb         sete       al
00000000000035be         cmp        qword [rsp+0xe8+var_98], 0x0
00000000000035c4         setne      dl
00000000000035c7         and        al, dl
00000000000035c9         je         loc_3fec

00000000000035cf         mov        r13, qword [rsp+0xe8+var_98]

                     loc_35d4:
00000000000035d4         lea        rbx, qword [aLibs+29]                       ; 0x5e1d, CODE XREF=sub_3550+2781
00000000000035db         mov        byte [r14], 0x27
00000000000035df         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000035e7         mov        r15d, 0x1
00000000000035ed         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000035f6         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000035fb         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003600         mov        byte [rsp+0xe8+var_6C], al
0000000000003604         jmp        loc_2ee3
0000000000003609         align      16

                     loc_3610:
0000000000003610         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3100+8
0000000000003615         jne        sub_3550+2416

000000000000361b         test       r13, r13
000000000000361e         je         loc_3a20

0000000000003624         xor        edx, edx
0000000000003626         cmp        qword [rsp+arg_48], 0x0
000000000000362c         jne        loc_3a20

                     loc_3632:
0000000000003632         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_3550+1284, sub_3550+2794
0000000000003637         add        r15, 0x3
000000000000363b         xor        eax, eax
000000000000363d         mov        byte [rsp+arg_74], r12b
0000000000003642         xor        r8d, r8d
0000000000003645         mov        r13, rdx
0000000000003648         mov        ebx, 0x27
000000000000364d         jmp        sub_3000+105
                        ; endp
0000000000003652         align      8

                     loc_3658:
0000000000003658         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_30d0+19
000000000000365d         je         loc_3680

000000000000365f         lea        rcx, qword [rbp+2]
0000000000003663         cmp        rcx, r11
0000000000003666         jae        loc_3680

0000000000003668         mov        rax, qword [rsp+arg_8]
000000000000366d         cmp        byte [rax+rbp+1], 0x3f
0000000000003672         je         loc_3e02

0000000000003678         nop        dword [rax+rax]

                     loc_3680:
0000000000003680         xor        edx, edx                                    ; CODE XREF=sub_3550+269, sub_3550+278, sub_3550+2233, sub_3550+2253
0000000000003682         xor        r12d, r12d
0000000000003685         xor        eax, eax
0000000000003687         mov        ebx, 0x3f
000000000000368c         jmp        sub_3000+56
                        ; endp
0000000000003691         align      8

                     loc_3698:
0000000000003698         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_30d0+10
000000000000369d         jne        loc_3ec0

00000000000036a3         xor        r12d, r12d
00000000000036a6         xor        eax, eax
00000000000036a8         mov        ebx, 0x3f
00000000000036ad         jmp        sub_3000+105
                        ; endp
00000000000036b2         align      8

                     loc_36b8:
00000000000036b8         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_32f0+30
00000000000036c0         cmp        r11, 0xffffffffffffffff
00000000000036c4         mov        qword [rsp+0xe8+var_48], 0x0
00000000000036d0         mov        qword [rsp+0xe8+var_C0], rax
00000000000036d5         jne        loc_3704

00000000000036d7         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
00000000000036dc         mov        byte [rsp+0xe8+var_A8], r8b
00000000000036e1         mov        byte [rsp+0xe8+var_B0], r10b
00000000000036e6         mov        qword [rsp+0xe8+var_B8], r9
00000000000036eb         call       j_strlen                                    ; strlen
00000000000036f0         movzx      r8d, byte [rsp+0xe8+var_A8]
00000000000036f6         movzx      r10d, byte [rsp+0xe8+var_B0]
00000000000036fc         mov        r11, rax
00000000000036ff         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3704:
0000000000003704         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_3550+389
000000000000370c         xor        ecx, ecx
000000000000370e         mov        byte [rsp+0xe8+var_6A], bl
0000000000003712         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003717         mov        rbx, rcx
000000000000371a         mov        qword [rsp+0xe8+var_60], r9
0000000000003722         mov        qword [rsp+0xe8+var_B0], rax
0000000000003727         mov        byte [rsp+0xe8+var_69], r10b
000000000000372c         mov        qword [rsp+0xe8+var_68], r15
0000000000003734         mov        qword [rsp+0xe8+var_A8], r14
0000000000003739         mov        qword [rsp+0xe8+var_78], r13
000000000000373e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_3743:
0000000000003743         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_3550+623
0000000000003748         lea        r14, qword [rbp+rbx]
000000000000374d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000003752         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000003757         mov        rdi, qword [rsp+0xe8+var_B0]
000000000000375c         lea        r13, qword [rax+r14]
0000000000003760         sub        rdx, r14
0000000000003763         mov        rsi, r13
0000000000003766         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000376b         test       rax, rax
000000000000376e         mov        r15, rax
0000000000003771         je         loc_37c1

0000000000003773         cmp        rax, 0xffffffffffffffff
0000000000003777         je         loc_3d95

000000000000377d         cmp        rax, 0xfffffffffffffffe
0000000000003781         je         loc_3d21

0000000000003787         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000378c         sete       al
000000000000378f         and        al, byte [rsp+0xe8+var_D9]
0000000000003793         jne        loc_3930

                     loc_3799:
0000000000003799         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_3550+996, sub_3550+1031
00000000000037a0         call       j_iswprint                                  ; iswprint
00000000000037a5         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
00000000000037aa         test       eax, eax
00000000000037ac         mov        eax, 0x0
00000000000037b1         cmove      r12d, eax
00000000000037b5         add        rbx, r15
00000000000037b8         call       j_mbsinit                                   ; mbsinit
00000000000037bd         test       eax, eax
00000000000037bf         je         loc_3743

                     loc_37c1:
00000000000037c1         mov        edx, r12d                                   ; CODE XREF=sub_3550+545
00000000000037c4         mov        rdi, rbx
00000000000037c7         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000037cd         xor        edx, 0x1
00000000000037d0         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000037d5         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000037db         and        dl, byte [rsp+0xe8+var_DB]
00000000000037df         mov        r15, qword [rsp+0xe8+var_68]
00000000000037e7         mov        r14, qword [rsp+0xe8+var_A8]
00000000000037ec         mov        r13, qword [rsp+0xe8+var_78]
00000000000037f1         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_37f6:
00000000000037f6         cmp        rdi, 0x1                                    ; CODE XREF=sub_3550+2112, sub_3550+2168
00000000000037fa         jbe        loc_3dfb

                     loc_3800:
0000000000003800         mov        rcx, rdi                                    ; CODE XREF=sub_3550+1961
0000000000003803         xor        esi, esi
0000000000003805         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000380b         add        rcx, rbp
000000000000380e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003813         jmp        loc_38ce
0000000000003818         align      32

                     loc_3820:
0000000000003820         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3550+896
0000000000003825         sete       al
0000000000003828         test       r9b, r9b
000000000000382b         jne        loc_3ce0

0000000000003831         mov        esi, r8d
0000000000003834         xor        esi, 0x1
0000000000003837         and        al, sil
000000000000383a         je         loc_386b

000000000000383c         cmp        r13, r15
000000000000383f         jbe        loc_3846

0000000000003841         mov        byte [r14+r15], 0x27

                     loc_3846:
0000000000003846         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_3550+751
000000000000384a         cmp        r13, rsi
000000000000384d         jbe        loc_3855

000000000000384f         mov        byte [r14+r15+1], 0x24

                     loc_3855:
0000000000003855         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_3550+765
0000000000003859         cmp        r13, rsi
000000000000385c         jbe        loc_3864

000000000000385e         mov        byte [r14+r15+2], 0x27

                     loc_3864:
0000000000003864         add        r15, 0x3                                    ; CODE XREF=sub_3550+780
0000000000003868         mov        r8d, eax

                     loc_386b:
000000000000386b         cmp        r13, r15                                    ; CODE XREF=sub_3550+746
000000000000386e         jbe        loc_3875

0000000000003870         mov        byte [r14+r15], 0x5c

                     loc_3875:
0000000000003875         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3550+798
0000000000003879         cmp        r13, rax
000000000000387c         jbe        loc_388b

000000000000387e         mov        eax, ebx
0000000000003880         shr        al, 0x6
0000000000003883         add        eax, 0x30
0000000000003886         mov        byte [r14+r15+1], al

                     loc_388b:
000000000000388b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3550+812
000000000000388f         cmp        r13, rax
0000000000003892         jbe        loc_38a4

0000000000003894         mov        eax, ebx
0000000000003896         shr        al, 0x3
0000000000003899         and        eax, 0x7
000000000000389c         add        eax, 0x30
000000000000389f         mov        byte [r14+r15+2], al

                     loc_38a4:
00000000000038a4         and        ebx, 0x7                                    ; CODE XREF=sub_3550+834
00000000000038a7         add        rbp, 0x1
00000000000038ab         add        r15, 0x3
00000000000038af         add        ebx, 0x30
00000000000038b2         cmp        rbp, rcx
00000000000038b5         jae        loc_30a0

00000000000038bb         mov        esi, edx

                     loc_38bd:
00000000000038bd         cmp        r13, r15                                    ; CODE XREF=sub_3550+985, sub_3550+1969
00000000000038c0         jbe        loc_38c6

00000000000038c2         mov        byte [r14+r15], bl

                     loc_38c6:
00000000000038c6         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_3550+880
00000000000038ca         add        r15, 0x1

                     loc_38ce:
00000000000038ce         test       dl, dl                                      ; CODE XREF=sub_3550+707
00000000000038d0         jne        loc_3820

00000000000038d6         mov        eax, esi
00000000000038d8         xor        eax, 0x1
00000000000038db         and        eax, r8d
00000000000038de         test       r10b, r10b
00000000000038e1         je         loc_38f1

00000000000038e3         cmp        r13, r15
00000000000038e6         jbe        loc_38ed

00000000000038e8         mov        byte [r14+r15], 0x5c

                     loc_38ed:
00000000000038ed         add        r15, 0x1                                    ; CODE XREF=sub_3550+918

                     loc_38f1:
00000000000038f1         add        rbp, 0x1                                    ; CODE XREF=sub_3550+913
00000000000038f5         cmp        rbp, rcx
00000000000038f8         jae        loc_307c

00000000000038fe         test       al, al
0000000000003900         je         loc_3cfe

0000000000003906         cmp        r13, r15
0000000000003909         jbe        loc_3910

000000000000390b         mov        byte [r14+r15], 0x27

                     loc_3910:
0000000000003910         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3550+953
0000000000003914         cmp        r13, rax
0000000000003917         jbe        loc_391f

0000000000003919         mov        byte [r14+r15+1], 0x27

                     loc_391f:
000000000000391f         add        r15, 0x2                                    ; CODE XREF=sub_3550+967
0000000000003923         xor        r10d, r10d
0000000000003926         xor        r8d, r8d
0000000000003929         jmp        loc_38bd
000000000000392b         align      16

                     loc_3930:
0000000000003930         cmp        r15, 0x1                                    ; CODE XREF=sub_3550+579
0000000000003934         je         loc_3799

000000000000393a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000393f         lea        rcx, qword [rdi+r15]
0000000000003943         lea        rdx, qword [rdi+r14+1]
0000000000003948         lea        r8, qword [rcx+r14]
000000000000394c         jmp        loc_395d
000000000000394e         align      16

                     loc_3950:
0000000000003950         add        rdx, 0x1                                    ; CODE XREF=sub_3550+1046, sub_3550+1072
0000000000003954         cmp        r8, rdx
0000000000003957         je         loc_3799

                     loc_395d:
000000000000395d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_3550+1020
0000000000003960         sub        ecx, 0x5b
0000000000003963         cmp        cl, 0x21
0000000000003966         ja         loc_3950

0000000000003968         mov        esi, 0x1
000000000000396d         shl        rsi, cl
0000000000003970         mov        rcx, rsi
0000000000003973         movabs     rsi, 0x20000002b
000000000000397d         test       rcx, rsi
0000000000003980         je         loc_3950

0000000000003982         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003987         mov        r13, qword [rsp+0xe8+var_78]
000000000000398c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000003991         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_3999:
0000000000003999         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3550+1227, sub_3550+1948, sub_3550+2585, sub_3550+2734
000000000000399e         je         loc_39b0

00000000000039a0         test       al, al
00000000000039a2         mov        eax, 0x4
00000000000039a7         cmove      eax, dword [rsp+0xe8+var_E0]
00000000000039ac         mov        dword [rsp+0xe8+var_E0], eax

                     loc_39b0:
00000000000039b0         sub        rsp, 0x8                                    ; CODE XREF=sub_3550+1102
00000000000039b4         mov        rcx, rbp
00000000000039b7         mov        rsi, r13
00000000000039ba         push       qword [rsp+0xf0+var_88]
00000000000039be         push       qword [rsp+0xf8+var_80]
00000000000039c2         mov        rdi, r14
00000000000039c5         push       0x0
00000000000039c7         mov        r9d, dword [rsp+0x108+var_70]
00000000000039cf         mov        r8d, dword [rsp+0x108+var_E0]
00000000000039d4         mov        rdx, qword [rsp+0x108+var_D8]
00000000000039d9         and        r9d, 0xfffffffd
00000000000039dd         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000039e2         add        rsp, 0x20
00000000000039e6         mov        r15, rax

                     loc_39e9:
00000000000039e9         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_3550+2549, sub_3550+2560, sub_3550+2711
00000000000039f1         xor        rbx, qword [fs:0x28]
00000000000039fa         mov        rax, r15
00000000000039fd         jne        loc_4003

0000000000003a03         add        rsp, 0xb8
0000000000003a0a         pop        rbx
0000000000003a0b         pop        rbp
0000000000003a0c         pop        r12
0000000000003a0e         pop        r13
0000000000003a10         pop        r14
0000000000003a12         pop        r15
0000000000003a14         ret
                        ; endp
0000000000003a15         align      8

                     loc_3a18:
0000000000003a18         mov        rbp, r11                                    ; CODE XREF=sub_3100+194
0000000000003a1b         jmp        loc_3999

                     loc_3a20:
0000000000003a20         cmp        r13, r15                                    ; CODE XREF=sub_3550+206, sub_3550+220
0000000000003a23         jbe        loc_3a2a

0000000000003a25         mov        byte [r14+r15], 0x27

                     loc_3a2a:
0000000000003a2a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3550+1235
0000000000003a2e         cmp        r13, rax
0000000000003a31         jbe        loc_3a39

0000000000003a33         mov        byte [r14+r15+1], 0x5c

                     loc_3a39:
0000000000003a39         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3550+1249
0000000000003a3d         cmp        r13, rax
0000000000003a40         jbe        loc_4032

0000000000003a46         mov        rdx, r13
0000000000003a49         mov        byte [r14+r15+2], 0x27
0000000000003a4f         mov        r13, qword [rsp+arg_48]
0000000000003a54         jmp        loc_3632

                     loc_3a59:
0000000000003a59         mov        eax, r12d                                   ; CODE XREF=sub_33f0+99
0000000000003a5c         mov        ebx, 0x30
0000000000003a61         xor        r12d, r12d
0000000000003a64         jmp        sub_3000+105
                        ; endp

                     loc_3a69:
0000000000003a69         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_33f0+67
0000000000003a6f         jmp        loc_3439

                     loc_3a74:
0000000000003a74         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000003a76         jne        loc_2ea3

0000000000003a7c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_3a81:
0000000000003a81         test       r13, r13                                    ; CODE XREF=sub_3550+2749
0000000000003a84         jne        loc_401a

0000000000003a8a         lea        rax, qword [aLibs+29]                       ; 0x5e1d
0000000000003a91         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003a9a         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003a9f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003aa4         xor        r12d, r12d
0000000000003aa7         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003aac         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003ab5         mov        qword [rsp+0xe8+var_A0], rax
0000000000003aba         mov        r15d, 0x1
0000000000003ac0         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003ac8         jmp        loc_2ee3
0000000000003acd         align      16

                     loc_3ad0:
0000000000003ad0         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000003ad2         jne        loc_3ecd

0000000000003ad8         test       r13, r13
0000000000003adb         je         loc_3d06

0000000000003ae1         mov        byte [r14], 0x22
0000000000003ae5         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003aea         xor        r12d, r12d
0000000000003aed         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003af2         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_3afb:
0000000000003afb         lea        rax, qword [aLibs+27]                       ; 0x5e1b, CODE XREF=sub_3550+1996
0000000000003b02         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003b07         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003b0c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003b15         mov        r15d, 0x1
0000000000003b1b         mov        qword [rsp+0xe8+var_A0], rax
0000000000003b20         jmp        loc_2ee3

                     loc_3b25:
0000000000003b25         lea        rax, qword [aLibs+27]                       ; case 6, 0x5e1b, CODE XREF=quotearg_buffer_restyled+145
0000000000003b2c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003b31         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b36         xor        r12d, r12d
0000000000003b39         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003b42         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003b47         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003b4c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003b55         xor        r15d, r15d
0000000000003b58         mov        qword [rsp+0xe8+var_A0], rax
0000000000003b5d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000003b65         jmp        loc_2ee3

                     loc_3b6a:
0000000000003b6a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
0000000000003b6f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b74         xor        r12d, r12d
0000000000003b77         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003b80         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003b85         xor        r15d, r15d
0000000000003b88         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003b8d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003b96         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003b9f         jmp        loc_2ee3

                     loc_3ba4:
0000000000003ba4         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000003ba9         je         loc_3c01

0000000000003bab         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x5e1f
0000000000003bb2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003bb4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003bb9         call       j_dcgettext                                 ; dcgettext
0000000000003bbe         mov        rcx, rax
0000000000003bc1         mov        qword [rsp+0xe8+var_80], rax
0000000000003bc6         lea        rax, qword [aLibs+31]                       ; 0x5e1f
0000000000003bcd         cmp        rcx, rax
0000000000003bd0         je         loc_3f6e

                     loc_3bd6:
0000000000003bd6         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x5e1d, CODE XREF=sub_3550+2607
0000000000003bdd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003bdf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003be4         call       j_dcgettext                                 ; dcgettext
0000000000003be9         mov        rcx, rax
0000000000003bec         mov        qword [rsp+0xe8+var_88], rax
0000000000003bf1         lea        rax, qword [aLibs+29]                       ; 0x5e1d
0000000000003bf8         cmp        rcx, rax
0000000000003bfb         je         loc_3f84

                     loc_3c01:
0000000000003c01         xor        r15d, r15d                                  ; CODE XREF=sub_3550+1625, sub_3550+2629
0000000000003c04         test       ebx, ebx
0000000000003c06         je         loc_3dcd

                     loc_3c0c:
0000000000003c0c         test       ebx, ebx                                    ; CODE XREF=sub_3550+2183, sub_3550+2214
0000000000003c0e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003c13         setne      byte [rsp+0xe8+var_D9]
0000000000003c18         xor        r12d, r12d
0000000000003c1b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000003c1e         call       j_strlen                                    ; strlen
0000000000003c23         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003c28         mov        qword [rsp+0xe8+var_D0], rax
0000000000003c2d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003c32         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003c37         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003c40         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003c45         jmp        loc_2ee3

                     loc_3c4a:
0000000000003c4a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000003c4f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003c54         xor        r12d, r12d
0000000000003c57         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003c60         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003c65         xor        r15d, r15d
0000000000003c68         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003c6d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003c76         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003c7f         jmp        loc_2ee3

                     loc_3c84:
0000000000003c84         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000003c89         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003c8e         xor        r12d, r12d
0000000000003c91         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003c9a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003c9f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003ca4         jmp        loc_2ec3

                     loc_3ca9:
0000000000003ca9         cmp        r13, r15                                    ; CODE XREF=sub_33f0+133
0000000000003cac         jbe        loc_3cb3

0000000000003cae         mov        byte [r14+r15], 0x30

                     loc_3cb3:
0000000000003cb3         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_3550+1884
0000000000003cb7         cmp        r13, rax
0000000000003cba         jbe        loc_3cc2

0000000000003cbc         mov        byte [r14+rcx+2], 0x30

                     loc_3cc2:
0000000000003cc2         mov        eax, r12d                                   ; CODE XREF=sub_3550+1898
0000000000003cc5         lea        r15, qword [rcx+3]
0000000000003cc9         xor        r12d, r12d
0000000000003ccc         mov        ebx, 0x30
0000000000003cd1         jmp        sub_3000+56
                        ; endp
0000000000003cd6         align      32

                     loc_3ce0:
0000000000003ce0         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_3550+731
0000000000003ce5         mov        rbp, r11
0000000000003ce8         mov        byte [rsp+0xe8+var_DB], bl
0000000000003cec         jmp        loc_3999

                     loc_3cf1:
0000000000003cf1         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_32f0+105
0000000000003cf6         xor        r12d, r12d
0000000000003cf9         jmp        loc_3800

                     loc_3cfe:
0000000000003cfe         xor        r10d, r10d                                  ; CODE XREF=sub_3550+944
0000000000003d01         jmp        loc_38bd

                     loc_3d06:
0000000000003d06         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_3550+1419
0000000000003d0f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003d14         xor        r12d, r12d
0000000000003d17         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003d1c         jmp        loc_3afb

                     loc_3d21:
0000000000003d21         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_3550+561
0000000000003d26         mov        rsi, r14
0000000000003d29         mov        rcx, r13
0000000000003d2c         mov        rax, rbx
0000000000003d2f         mov        rdi, rbx
0000000000003d32         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003d38         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003d3d         mov        r9, qword [rsp+0xe8+var_60]
0000000000003d45         cmp        rsi, r11
0000000000003d48         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003d4e         mov        r15, qword [rsp+0xe8+var_68]
0000000000003d56         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003d5b         mov        r13, qword [rsp+0xe8+var_78]
0000000000003d60         jae        loc_3d88

0000000000003d62         cmp        byte [rcx], 0x0
0000000000003d65         jne        loc_3d77

0000000000003d67         jmp        loc_3d88
0000000000003d69         align      16

                     loc_3d70:
0000000000003d70         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_3550+2099
0000000000003d75         je         loc_3d85

                     loc_3d77:
0000000000003d77         add        rax, 0x1                                    ; CODE XREF=sub_3550+2069
0000000000003d7b         lea        rdx, qword [rbp+rax]
0000000000003d80         cmp        r11, rdx
0000000000003d83         ja         loc_3d70

                     loc_3d85:
0000000000003d85         mov        rdi, rax                                    ; CODE XREF=sub_3550+2085

                     loc_3d88:
0000000000003d88         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3550+2064, sub_3550+2071
0000000000003d8d         xor        r12d, r12d
0000000000003d90         jmp        loc_37f6

                     loc_3d95:
0000000000003d95         mov        rdi, rbx                                    ; CODE XREF=sub_3550+551
0000000000003d98         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003d9e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003da3         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003da9         mov        r15, qword [rsp+0xe8+var_68]
0000000000003db1         xor        r12d, r12d
0000000000003db4         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003db9         mov        r13, qword [rsp+0xe8+var_78]
0000000000003dbe         mov        r11, qword [rsp+0xe8+var_B8]
0000000000003dc3         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000003dc8         jmp        loc_37f6

                     loc_3dcd:
0000000000003dcd         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_3550+1718
0000000000003dd2         movzx      eax, byte [rdx]
0000000000003dd5         test       al, al
0000000000003dd7         je         loc_3c0c

0000000000003ddd         nop        dword [rax]

                     loc_3de0:
0000000000003de0         cmp        r13, r15                                    ; CODE XREF=sub_3550+2212
0000000000003de3         jbe        loc_3de9

0000000000003de5         mov        byte [r14+r15], al

                     loc_3de9:
0000000000003de9         add        r15, 0x1                                    ; CODE XREF=sub_3550+2195
0000000000003ded         movzx      eax, byte [rdx+r15]
0000000000003df2         test       al, al
0000000000003df4         jne        loc_3de0

0000000000003df6         jmp        loc_3c0c

                     loc_3dfb:
0000000000003dfb         mov        eax, edx                                    ; CODE XREF=sub_3550+682
0000000000003dfd         jmp        loc_3357

                     loc_3e02:
0000000000003e02         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_3550+290
0000000000003e06         cmp        bl, 0x3e
0000000000003e09         ja         loc_3680

0000000000003e0f         movabs     rax, 0x7000a38200000000
0000000000003e19         bt         rax, rbx
0000000000003e1d         jae        loc_3680

0000000000003e23         cmp        byte [rsp+arg_7], 0x0
0000000000003e28         jne        loc_4012

0000000000003e2e         cmp        r13, r15
0000000000003e31         jbe        loc_3e38

0000000000003e33         mov        byte [r14+r15], 0x3f

                     loc_3e38:
0000000000003e38         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3550+2273
0000000000003e3c         cmp        r13, rax
0000000000003e3f         jbe        loc_3e47

0000000000003e41         mov        byte [r14+r15+1], 0x22

                     loc_3e47:
0000000000003e47         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3550+2287
0000000000003e4b         cmp        r13, rax
0000000000003e4e         jbe        loc_3e56

0000000000003e50         mov        byte [r14+r15+2], 0x22

                     loc_3e56:
0000000000003e56         lea        rax, qword [r15+3]                          ; CODE XREF=sub_3550+2302
0000000000003e5a         cmp        r13, rax
0000000000003e5d         jbe        loc_3e65

0000000000003e5f         mov        byte [r14+r15+3], 0x3f

                     loc_3e65:
0000000000003e65         add        r15, 0x4                                    ; CODE XREF=sub_3550+2317
0000000000003e69         xor        edx, edx
0000000000003e6b         xor        r12d, r12d
0000000000003e6e         xor        eax, eax
0000000000003e70         mov        rbp, rcx
0000000000003e73         jmp        sub_3000+56
                        ; endp

                     loc_3e78:
0000000000003e78         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000003e7a         je         loc_4008

0000000000003e80         lea        rax, qword [aLibs+29]                       ; 0x5e1d
0000000000003e87         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003e8c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003e91         xor        r12d, r12d
0000000000003e94         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003e9d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003ea2         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003ea7         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003eb0         xor        r15d, r15d
0000000000003eb3         mov        qword [rsp+0xe8+var_A0], rax
0000000000003eb8         jmp        loc_2ee3
0000000000003ebd         align      64

                     loc_3ec0:
0000000000003ec0         mov        rbp, r11                                    ; CODE XREF=sub_3550+333
0000000000003ec3         movzx      eax, byte [rsp+arg_7]
0000000000003ec8         jmp        sub_3550+1097
                        ; endp

                     loc_3ecd:
0000000000003ecd         lea        rax, qword [aLibs+27]                       ; 0x5e1b, CODE XREF=sub_3550+1410
0000000000003ed4         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003ed9         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003ede         xor        r12d, r12d
0000000000003ee1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003eea         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003eef         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003ef4         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003efd         xor        r15d, r15d
0000000000003f00         mov        qword [rsp+0xe8+var_A0], rax
0000000000003f05         jmp        loc_2ee3

                     loc_3f0a:
0000000000003f0a         mov        eax, edx                                    ; CODE XREF=sub_3550+87

                     loc_3f0c:
0000000000003f0c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_3550+76, sub_3550+2721
0000000000003f11         test       rbx, rbx
0000000000003f14         je         loc_3f42

0000000000003f16         test       al, al
0000000000003f18         je         loc_3f42

0000000000003f1a         movzx      ecx, byte [rbx]
0000000000003f1d         mov        rax, rbx
0000000000003f20         test       cl, cl
0000000000003f22         je         loc_3f42

0000000000003f24         mov        rdx, r15
0000000000003f27         sub        rax, r15

                     loc_3f2a:
0000000000003f2a         cmp        r13, rdx                                    ; CODE XREF=sub_3550+2541
0000000000003f2d         jbe        loc_3f33

0000000000003f2f         mov        byte [r14+rdx], cl

                     loc_3f33:
0000000000003f33         add        rdx, 0x1                                    ; CODE XREF=sub_3550+2525
0000000000003f37         movzx      ecx, byte [rax+rdx]
0000000000003f3b         test       cl, cl
0000000000003f3d         jne        loc_3f2a

0000000000003f3f         mov        r15, rdx

                     loc_3f42:
0000000000003f42         cmp        r13, r15                                    ; CODE XREF=sub_3550+2500, sub_3550+2504, sub_3550+2514
0000000000003f45         jbe        loc_39e9

0000000000003f4b         mov        byte [r14+r15], 0x0
0000000000003f50         jmp        loc_39e9

                     loc_3f55:
0000000000003f55         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000003f5a         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000003f5f         mov        rbp, r11
0000000000003f62         sete       al
0000000000003f65         mov        byte [rsp+0xe8+var_DB], bl
0000000000003f69         jmp        loc_3999

                     loc_3f6e:
0000000000003f6e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3550+1664
0000000000003f72         mov        rdi, rcx
0000000000003f75         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003f7a         mov        qword [rsp+0xe8+var_80], rax
0000000000003f7f         jmp        loc_3bd6

                     loc_3f84:
0000000000003f84         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3550+1707
0000000000003f88         mov        rdi, rcx
0000000000003f8b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003f90         mov        qword [rsp+0xe8+var_88], rax
0000000000003f95         jmp        loc_3c01

                     loc_3f9a:
0000000000003f9a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_33f0+16
0000000000003f9f         mov        rbp, r11
0000000000003fa2         mov        eax, edx
0000000000003fa4         mov        byte [rsp+arg_5], bl
0000000000003fa8         jmp        sub_3550+1097
                        ; endp

                     loc_3fad:
0000000000003fad         sub        rsp, 0x8                                    ; CODE XREF=sub_3550+98
0000000000003fb1         mov        r8d, 0x5
0000000000003fb7         mov        rcx, r11
0000000000003fba         push       qword [rsp+0xf0+var_88]
0000000000003fbe         push       qword [rsp+0xf8+var_80]
0000000000003fc2         mov        rdi, r14
0000000000003fc5         push       qword [rsp+0x100+var_C8]
0000000000003fc9         mov        r9d, dword [rsp+0x108+var_70]
0000000000003fd1         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003fd6         mov        rsi, qword [rsp+0x108+var_98]
0000000000003fdb         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003fe0         add        rsp, 0x20
0000000000003fe4         mov        r15, rax
0000000000003fe7         jmp        loc_39e9

                     loc_3fec:
0000000000003fec         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_3550+121
0000000000003ff1         jmp        loc_3f0c

                     loc_3ff6:
0000000000003ff6         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3550+63
0000000000003ffe         jmp        loc_3999

                     loc_4003:
0000000000004003         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_3550+1197
                        ; endp

                     loc_4008:
0000000000004008         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3550+2346
000000000000400d         jmp        loc_3a81

                     loc_4012:
0000000000004012         mov        rbp, r11                                    ; CODE XREF=sub_3550+2264
0000000000004015         jmp        sub_3550+1120
                        ; endp

                     loc_401a:
000000000000401a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_3550+1332
000000000000401f         xor        eax, eax
0000000000004021         xor        r12d, r12d
0000000000004024         mov        qword [rsp+0xe8+var_98], 0x0
000000000000402d         jmp        loc_35d4

                     loc_4032:
0000000000004032         mov        rdx, r13                                    ; CODE XREF=sub_3550+1264
0000000000004035         mov        r13, qword [rsp+arg_48]
000000000000403a         jmp        loc_3632

                     loc_403f:
000000000000403f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000004044         align      16                                          ; End of unwind block (FDE at 0x6cb0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000004050         push       r15                                         ; Begin of unwind block (FDE at 0x6d28), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000004052         push       r14
0000000000004054         movsxd     r15, edi
0000000000004057         push       r13
0000000000004059         push       r12
000000000000405b         mov        r14, rdx
000000000000405e         push       rbp
000000000000405f         push       rbx
0000000000004060         mov        rbp, rcx
0000000000004063         sub        rsp, 0x28
0000000000004067         mov        qword [rsp+0x58+var_50], rsi
000000000000406c         call       j___errno_location                          ; __errno_location
0000000000004071         mov        r13, rax
0000000000004074         mov        eax, dword [rax]
0000000000004076         test       r15d, r15d
0000000000004079         mov        rbx, qword [slotvec]                        ; slotvec
0000000000004080         mov        dword [rsp+0x58+var_40], eax
0000000000004084         js         loc_41f1

000000000000408a         cmp        dword [nslots], r15d                        ; nslots
0000000000004091         jg         loc_40f5

0000000000004093         cmp        r15d, 0x7fffffff
000000000000409a         je         loc_41f6

00000000000040a0         lea        r12d, dword [r15+1]
00000000000040a4         lea        rax, qword [slotvec0]                       ; slotvec0
00000000000040ab         movsxd     rsi, r12d
00000000000040ae         shl        rsi, 0x4
00000000000040b2         cmp        rbx, rax
00000000000040b5         je         loc_41d0

00000000000040bb         mov        rdi, rbx                                    ; argument #1 for method xrealloc
00000000000040be         call       xrealloc                                    ; xrealloc
00000000000040c3         mov        rbx, rax
00000000000040c6         mov        qword [slotvec], rax                        ; slotvec

                     loc_40cd:
00000000000040cd         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
00000000000040d4         mov        edx, r12d
00000000000040d7         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000040d9         sub        edx, edi
00000000000040db         shl        rdi, 0x4
00000000000040df         movsxd     rdx, edx
00000000000040e2         add        rdi, rbx                                    ; argument "__s" for method j_memset
00000000000040e5         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
00000000000040e9         call       j_memset                                    ; memset
00000000000040ee         mov        dword [nslots], r12d                        ; nslots

                     loc_40f5:
00000000000040f5         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
00000000000040f8         shl        r15, 0x4
00000000000040fc         sub        rsp, 0x8
0000000000004100         add        rbx, r15
0000000000004103         lea        r15, qword [rbp+8]
0000000000004107         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000410b         mov        r11, qword [rbx]
000000000000410e         mov        r12, qword [rbx+8]
0000000000004112         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004115         or         eax, 0x1
0000000000004118         mov        dword [rsp+0x60+var_3C], eax
000000000000411c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000411f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000004122         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004125         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004127         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
000000000000412a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000412f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004132         mov        qword [rsp+0x78+var_48], r11
0000000000004137         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000413c         add        rsp, 0x20
0000000000004140         mov        r11, qword [rsp+0x58+var_48]
0000000000004145         cmp        r11, rax
0000000000004148         ja         loc_41b1

000000000000414a         lea        rsi, qword [rax+1]
000000000000414e         lea        rax, qword [slot0]                          ; slot0
0000000000004155         cmp        r12, rax
0000000000004158         mov        qword [rbx], rsi
000000000000415b         je         loc_416f

000000000000415d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004160         mov        qword [rsp+0x58+var_48], rsi
0000000000004165         call       j_free                                      ; free
000000000000416a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_416f:
000000000000416f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000004172         mov        qword [rsp+0x58+var_48], rsi
0000000000004177         call       xmalloc                                     ; xmalloc
000000000000417c         sub        rsp, 0x8
0000000000004180         mov        qword [rbx+8], rax
0000000000004184         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004188         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000418b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000418e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004191         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004193         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000004198         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
000000000000419b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000041a0         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
00000000000041a5         mov        r12, rax
00000000000041a8         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000041ad         add        rsp, 0x20

                     loc_41b1:
00000000000041b1         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
00000000000041b5         mov        dword [r13], eax
00000000000041b9         add        rsp, 0x28
00000000000041bd         mov        rax, r12
00000000000041c0         pop        rbx
00000000000041c1         pop        rbp
00000000000041c2         pop        r12
00000000000041c4         pop        r13
00000000000041c6         pop        r14
00000000000041c8         pop        r15
00000000000041ca         ret
                        ; endp
00000000000041cb         align      16

                     loc_41d0:
00000000000041d0         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
00000000000041d2         call       xrealloc                                    ; xrealloc
00000000000041d7         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
00000000000041df         mov        rbx, rax
00000000000041e2         mov        qword [slotvec], rax                        ; slotvec
00000000000041e9         movups     xmmword [rax], xmm0
00000000000041ec         jmp        loc_40cd

                     loc_41f1:
00000000000041f1         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_41f6:
00000000000041f6         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_41fb:
00000000000041fb         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x6d28)
                     clone_quoting_options:
0000000000004200         push       r12                                         ; Begin of unwind block (FDE at 0x6d94)
0000000000004202         push       rbp
0000000000004203         push       rbx
0000000000004204         mov        rbx, rdi
0000000000004207         call       j___errno_location                          ; __errno_location
000000000000420c         mov        r12d, dword [rax]
000000000000420f         mov        rbp, rax
0000000000004212         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004219         test       rbx, rbx
000000000000421c         mov        esi, 0x38
0000000000004221         cmove      rbx, rax
0000000000004225         mov        rdi, rbx
0000000000004228         call       xmemdup                                     ; xmemdup
000000000000422d         mov        dword [rbp], r12d
0000000000004231         pop        rbx
0000000000004232         pop        rbp
0000000000004233         pop        r12
0000000000004235         ret
                        ; endp
0000000000004236         align      64                                          ; End of unwind block (FDE at 0x6d94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000004240         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6dc0), default_quoting_options
0000000000004247         test       rdi, rdi
000000000000424a         cmove      rdi, rax
000000000000424e         mov        eax, dword [rdi]
0000000000004250         ret
                        ; endp
0000000000004251         align      32                                          ; End of unwind block (FDE at 0x6dc0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000004260         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6dd4), default_quoting_options
0000000000004267         test       rdi, rdi
000000000000426a         cmove      rdi, rax
000000000000426e         mov        dword [rdi], esi
0000000000004270         ret
                        ; endp
0000000000004271         align      128                                         ; End of unwind block (FDE at 0x6dd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000004280         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6de8), default_quoting_options
0000000000004287         test       rdi, rdi
000000000000428a         mov        ecx, esi
000000000000428c         cmove      rdi, rax
0000000000004290         mov        eax, esi
0000000000004292         and        ecx, 0x1f
0000000000004295         shr        al, 0x5
0000000000004298         movzx      eax, al
000000000000429b         lea        rdi, qword [rdi+rax*4+8]
00000000000042a0         mov        esi, dword [rdi]
00000000000042a2         mov        eax, esi
00000000000042a4         shr        eax, cl
00000000000042a6         xor        edx, eax
00000000000042a8         and        eax, 0x1
00000000000042ab         and        edx, 0x1
00000000000042ae         shl        edx, cl
00000000000042b0         xor        edx, esi
00000000000042b2         mov        dword [rdi], edx
00000000000042b4         ret
                        ; endp
00000000000042b5         align      64                                          ; End of unwind block (FDE at 0x6de8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
00000000000042c0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6dfc), default_quoting_options
00000000000042c7         test       rdi, rdi
00000000000042ca         cmove      rdi, rax
00000000000042ce         mov        eax, dword [rdi+4]
00000000000042d1         mov        dword [rdi+4], esi
00000000000042d4         ret
                        ; endp
00000000000042d5         align      32                                          ; End of unwind block (FDE at 0x6dfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
00000000000042e0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6e10), default_quoting_options
00000000000042e7         test       rdi, rdi
00000000000042ea         cmove      rdi, rax
00000000000042ee         test       rsi, rsi
00000000000042f1         mov        dword [rdi], 0xa
00000000000042f7         je         loc_4307

00000000000042f9         test       rdx, rdx
00000000000042fc         je         loc_4307

00000000000042fe         mov        qword [rdi+0x28], rsi
0000000000004302         mov        qword [rdi+0x30], rdx
0000000000004306         ret
                        ; endp

                     loc_4307:
0000000000004307         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000430b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004310         push       r15                                         ; End of unwind block (FDE at 0x6e10), Begin of unwind block (FDE at 0x6e24)
0000000000004312         push       r14
0000000000004314         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000431b         push       r13
000000000000431d         push       r12
000000000000431f         mov        r13, rdi
0000000000004322         push       rbp
0000000000004323         push       rbx
0000000000004324         mov        rbx, r8
0000000000004327         mov        r14, rsi
000000000000432a         mov        r15, rdx
000000000000432d         sub        rsp, 0x18
0000000000004331         test       r8, r8
0000000000004334         cmove      rbx, rax
0000000000004338         mov        qword [rsp+0x48+var_40], rcx
000000000000433d         call       j___errno_location                          ; __errno_location
0000000000004342         mov        r12d, dword [rax]
0000000000004345         mov        rbp, rax
0000000000004348         lea        rax, qword [rbx+8]
000000000000434c         sub        rsp, 0x8
0000000000004350         mov        r9d, dword [rbx+4]
0000000000004354         push       qword [rbx+0x30]
0000000000004357         mov        r8d, dword [rbx]
000000000000435a         push       qword [rbx+0x28]
000000000000435d         mov        rdx, r15
0000000000004360         push       rax
0000000000004361         mov        rcx, qword [rsp+0x68+var_40]
0000000000004366         mov        rsi, r14
0000000000004369         mov        rdi, r13
000000000000436c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004371         mov        dword [rbp], r12d
0000000000004375         add        rsp, 0x38
0000000000004379         pop        rbx
000000000000437a         pop        rbp
000000000000437b         pop        r12
000000000000437d         pop        r13
000000000000437f         pop        r14
0000000000004381         pop        r15
0000000000004383         ret
                        ; endp
0000000000004384         align      16                                          ; End of unwind block (FDE at 0x6e24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000004390         push       r15                                         ; Begin of unwind block (FDE at 0x6e78), CODE XREF=quotearg_alloc+5
0000000000004392         push       r14
0000000000004394         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000439b         push       r13
000000000000439d         push       r12
000000000000439f         mov        r12, rdx
00000000000043a2         push       rbp
00000000000043a3         push       rbx
00000000000043a4         mov        rbx, rcx
00000000000043a7         mov        r14, rdi
00000000000043aa         mov        r15, rsi
00000000000043ad         sub        rsp, 0x38
00000000000043b1         test       rcx, rcx
00000000000043b4         cmove      rbx, rax
00000000000043b8         xor        ebp, ebp
00000000000043ba         call       j___errno_location                          ; __errno_location
00000000000043bf         test       r12, r12
00000000000043c2         mov        r13, rax
00000000000043c5         mov        eax, dword [rax]
00000000000043c7         sete       bpl
00000000000043cb         or         ebp, dword [rbx+4]
00000000000043ce         lea        r10, qword [rbx+8]
00000000000043d2         sub        rsp, 0x8
00000000000043d6         mov        r8d, dword [rbx]
00000000000043d9         mov        rcx, r15
00000000000043dc         mov        dword [rsp+0x70+var_5C], eax
00000000000043e0         push       qword [rbx+0x30]
00000000000043e3         mov        rdx, r14
00000000000043e6         push       qword [rbx+0x28]
00000000000043e9         push       r10
00000000000043eb         xor        esi, esi
00000000000043ed         mov        r9d, ebp
00000000000043f0         xor        edi, edi
00000000000043f2         mov        qword [rsp+0x88+var_48], r10
00000000000043f7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000043fc         lea        rsi, qword [rax+1]
0000000000004400         mov        qword [rsp+0x88+var_40], rax
0000000000004405         add        rsp, 0x20
0000000000004409         mov        rdi, rsi
000000000000440c         mov        qword [rsp+0x68+var_50], rsi
0000000000004411         call       xmalloc                                     ; xmalloc
0000000000004416         mov        qword [rsp+0x68+var_58], rax
000000000000441b         sub        rsp, 0x8
000000000000441f         push       qword [rbx+0x30]
0000000000004422         push       qword [rbx+0x28]
0000000000004425         mov        r10, qword [rsp+0x80+var_48]
000000000000442a         mov        r9d, ebp
000000000000442d         mov        r8d, dword [rbx]
0000000000004430         mov        rcx, r15
0000000000004433         mov        rdx, r14
0000000000004436         mov        rdi, rax
0000000000004439         push       r10
000000000000443b         mov        rsi, qword [rsp+0x88+var_50]
0000000000004440         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004445         mov        eax, dword [rsp+0x88+var_5C]
0000000000004449         add        rsp, 0x20
000000000000444d         test       r12, r12
0000000000004450         mov        dword [r13], eax
0000000000004454         je         loc_445f

0000000000004456         mov        r11, qword [rsp+0x68+var_40]
000000000000445b         mov        qword [r12], r11

                     loc_445f:
000000000000445f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000004464         add        rsp, 0x38
0000000000004468         pop        rbx
0000000000004469         pop        rbp
000000000000446a         pop        r12
000000000000446c         pop        r13
000000000000446e         pop        r14
0000000000004470         pop        r15
0000000000004472         ret
                        ; endp
0000000000004473         align      128                                         ; End of unwind block (FDE at 0x6e78)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000004480         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6ee4)
0000000000004483         xor        edx, edx
0000000000004485         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000448a         align      16                                          ; End of unwind block (FDE at 0x6ee4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000004490         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x6ef8), nslots
0000000000004496         push       r12
0000000000004498         mov        r12, qword [slotvec]                        ; slotvec
000000000000449f         push       rbp
00000000000044a0         push       rbx
00000000000044a1         cmp        eax, 0x1
00000000000044a4         jle        loc_44d1

00000000000044a6         sub        eax, 0x2
00000000000044a9         lea        rbx, qword [r12+0x18]
00000000000044ae         shl        rax, 0x4
00000000000044b2         lea        rbp, qword [r12+rax+0x28]
00000000000044b7         nop        word [rax+rax]

                     loc_44c0:
00000000000044c0         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
00000000000044c3         add        rbx, 0x10
00000000000044c7         call       j_free                                      ; free
00000000000044cc         cmp        rbx, rbp
00000000000044cf         jne        loc_44c0

                     loc_44d1:
00000000000044d1         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
00000000000044d6         lea        rbx, qword [slot0]                          ; slot0
00000000000044dd         cmp        rdi, rbx
00000000000044e0         je         loc_44f9

00000000000044e2         call       j_free                                      ; free
00000000000044e7         mov        qword [slotvec0], 0x100                     ; slotvec0
00000000000044f2         mov        qword [slotvec0+8], rbx                     ; 0x208098

                     loc_44f9:
00000000000044f9         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004500         cmp        r12, rbx
0000000000004503         je         loc_4514

0000000000004505         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004508         call       j_free                                      ; free
000000000000450d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_4514:
0000000000004514         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004515         mov        dword [nslots], 0x1                         ; nslots
000000000000451f         pop        rbp
0000000000004520         pop        r12
0000000000004522         ret
                        ; endp
0000000000004523         align      16                                          ; End of unwind block (FDE at 0x6ef8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000004530         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6f24), default_quoting_options
0000000000004537         mov        rdx, 0xffffffffffffffff
000000000000453e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004543         align      16                                          ; End of unwind block (FDE at 0x6f24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000004550         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6f38), default_quoting_options
0000000000004557         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000455c         align      32                                          ; End of unwind block (FDE at 0x6f38)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000004560         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6f4c), default_quoting_options
0000000000004567         mov        rsi, rdi
000000000000456a         mov        rdx, 0xffffffffffffffff
0000000000004571         xor        edi, edi
0000000000004573         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004578         align      128                                         ; End of unwind block (FDE at 0x6f4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000004580         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6f60), default_quoting_options
0000000000004587         mov        rdx, rsi
000000000000458a         mov        rsi, rdi
000000000000458d         xor        edi, edi
000000000000458f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004594         align      32                                          ; End of unwind block (FDE at 0x6f60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
00000000000045a0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6f74)
00000000000045a4         mov        rax, rdx
00000000000045a7         mov        rdx, qword [fs:0x28]
00000000000045b0         mov        qword [rsp+0x48+var_10], rdx
00000000000045b5         xor        edx, edx
00000000000045b7         cmp        esi, 0xa
00000000000045ba         je         loc_4624

00000000000045bc         mov        dword [rsp+0x48+var_48], esi
00000000000045bf         mov        rcx, rsp
00000000000045c2         mov        rdx, 0xffffffffffffffff
00000000000045c9         mov        rsi, rax
00000000000045cc         mov        qword [rsp+0x48+var_44], 0x0
00000000000045d5         mov        qword [rsp+0x48+var_3C], 0x0
00000000000045de         mov        qword [rsp+0x48+var_34], 0x0
00000000000045e7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000045f0         mov        qword [rsp+0x48+var_24], 0x0
00000000000045f9         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004602         mov        dword [rsp+0x48+var_14], 0x0
000000000000460a         call       quotearg_n_options                          ; quotearg_n_options
000000000000460f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004614         xor        rcx, qword [fs:0x28]
000000000000461d         jne        loc_4629

000000000000461f         add        rsp, 0x48
0000000000004623         ret
                        ; endp

                     loc_4624:
0000000000004624         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_4629:
0000000000004629         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000462e         align      16                                          ; End of unwind block (FDE at 0x6f74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000004630         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6f90), CODE XREF=quotearg_style_mem+10
0000000000004634         mov        rax, rdx
0000000000004637         mov        rdx, rcx
000000000000463a         mov        rcx, qword [fs:0x28]
0000000000004643         mov        qword [rsp+0x48+var_10], rcx
0000000000004648         xor        ecx, ecx
000000000000464a         cmp        esi, 0xa
000000000000464d         je         loc_46b0

000000000000464f         mov        dword [rsp+0x48+var_48], esi
0000000000004652         mov        rcx, rsp
0000000000004655         mov        rsi, rax
0000000000004658         mov        qword [rsp+0x48+var_44], 0x0
0000000000004661         mov        qword [rsp+0x48+var_3C], 0x0
000000000000466a         mov        qword [rsp+0x48+var_34], 0x0
0000000000004673         mov        qword [rsp+0x48+var_2C], 0x0
000000000000467c         mov        qword [rsp+0x48+var_24], 0x0
0000000000004685         mov        qword [rsp+0x48+var_1C], 0x0
000000000000468e         mov        dword [rsp+0x48+var_14], 0x0
0000000000004696         call       quotearg_n_options                          ; quotearg_n_options
000000000000469b         mov        rdx, qword [rsp+0x48+var_10]
00000000000046a0         xor        rdx, qword [fs:0x28]
00000000000046a9         jne        loc_46b5

00000000000046ab         add        rsp, 0x48
00000000000046af         ret
                        ; endp

                     loc_46b0:
00000000000046b0         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_46b5:
00000000000046b5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
00000000000046ba         align      64                                          ; End of unwind block (FDE at 0x6f90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
00000000000046c0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x6fac)
00000000000046c3         mov        esi, edi
00000000000046c5         xor        edi, edi
00000000000046c7         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
00000000000046cc         align      16                                          ; End of unwind block (FDE at 0x6fac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
00000000000046d0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6fc0)
00000000000046d3         mov        rdx, rsi
00000000000046d6         mov        esi, edi
00000000000046d8         xor        edi, edi
00000000000046da         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
00000000000046df         align      32                                          ; End of unwind block (FDE at 0x6fc0)

                     quotearg_char_mem:
00000000000046e0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6fd4), CODE XREF=quotearg_char+11
00000000000046e4         mov        ecx, edx
00000000000046e6         mov        rax, qword [fs:0x28]
00000000000046ef         mov        qword [rsp+0x48+var_10], rax
00000000000046f4         xor        eax, eax
00000000000046f6         mov        rax, qword [qword_208290]                   ; qword_208290
00000000000046fd         mov        r8, rsp
0000000000004700         and        ecx, 0x1f
0000000000004703         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000470b         mov        qword [rsp+0x48+var_18], rax
0000000000004710         mov        eax, edx
0000000000004712         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004716         shr        al, 0x5
0000000000004719         movzx      eax, al
000000000000471c         lea        r9, qword [r8+rax*4+8]
0000000000004721         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208270
0000000000004729         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000472e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208280
0000000000004736         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000473b         mov        edx, dword [r9]
000000000000473e         mov        eax, edx
0000000000004740         shr        eax, cl
0000000000004742         not        eax
0000000000004744         and        eax, 0x1
0000000000004747         shl        eax, cl
0000000000004749         mov        rcx, r8
000000000000474c         xor        eax, edx
000000000000474e         mov        rdx, rsi
0000000000004751         mov        rsi, rdi
0000000000004754         mov        dword [r9], eax
0000000000004757         xor        edi, edi
0000000000004759         call       quotearg_n_options                          ; quotearg_n_options
000000000000475e         mov        rsi, qword [rsp+0x48+var_10]
0000000000004763         xor        rsi, qword [fs:0x28]
000000000000476c         jne        loc_4773

000000000000476e         add        rsp, 0x48
0000000000004772         ret
                        ; endp

                     loc_4773:
0000000000004773         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000004778         align      128                                         ; End of unwind block (FDE at 0x6fd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000004780         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x6ff0)
0000000000004784         mov        rsi, 0xffffffffffffffff
000000000000478b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000004790         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x6ff0), Begin of unwind block (FDE at 0x7004), CODE XREF=close_stdout+101
0000000000004795         mov        rsi, 0xffffffffffffffff
000000000000479c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
00000000000047a1         align      16                                          ; End of unwind block (FDE at 0x7004)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
00000000000047b0         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x7018)
00000000000047b5         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
00000000000047ba         align      64                                          ; End of unwind block (FDE at 0x7018)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
00000000000047c0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x702c), CODE XREF=next_file+154, next_file+363, next_file+426
00000000000047c4         mov        rax, rdx
00000000000047c7         mov        rdx, qword [fs:0x28]
00000000000047d0         mov        qword [rsp+0x48+var_10], rdx
00000000000047d5         xor        edx, edx
00000000000047d7         cmp        esi, 0xa
00000000000047da         je         loc_4844

00000000000047dc         mov        dword [rsp+0x48+var_48], esi
00000000000047df         mov        rcx, rsp
00000000000047e2         mov        rdx, 0xffffffffffffffff
00000000000047e9         mov        rsi, rax
00000000000047ec         mov        qword [rsp+0x48+var_44], 0x0
00000000000047f5         mov        qword [rsp+0x48+var_3C], 0x4000000
00000000000047fe         mov        qword [rsp+0x48+var_34], 0x0
0000000000004807         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004810         mov        qword [rsp+0x48+var_24], 0x0
0000000000004819         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004822         mov        dword [rsp+0x48+var_14], 0x0
000000000000482a         call       quotearg_n_options                          ; quotearg_n_options
000000000000482f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004834         xor        rcx, qword [fs:0x28]
000000000000483d         jne        loc_4849

000000000000483f         add        rsp, 0x48
0000000000004843         ret
                        ; endp

                     loc_4844:
0000000000004844         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_4849:
0000000000004849         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000484e         align      16                                          ; End of unwind block (FDE at 0x702c)

                     quotearg_n_custom_mem:
0000000000004850         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7048), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000004854         mov        r9, rcx
0000000000004857         mov        rcx, qword [qword_208290]                   ; qword_208290
000000000000485e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000004866         mov        rax, qword [fs:0x28]
000000000000486f         mov        qword [rsp+0x48+var_10], rax
0000000000004874         xor        eax, eax
0000000000004876         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000487a         test       rsi, rsi
000000000000487d         mov        qword [rsp+0x48+var_18], rcx
0000000000004882         mov        dword [rsp+0x48+var_48], 0xa
0000000000004889         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208270
0000000000004891         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000004896         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208280
000000000000489e         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000048a3         je         loc_48d7

00000000000048a5         test       rdx, rdx
00000000000048a8         je         loc_48d7

00000000000048aa         mov        qword [rsp+0x48+var_20], rsi
00000000000048af         mov        qword [rsp+0x48+var_18], rdx
00000000000048b4         mov        rcx, rsp
00000000000048b7         mov        rdx, r8
00000000000048ba         mov        rsi, r9
00000000000048bd         call       quotearg_n_options                          ; quotearg_n_options
00000000000048c2         mov        rdi, qword [rsp+0x48+var_10]
00000000000048c7         xor        rdi, qword [fs:0x28]
00000000000048d0         jne        loc_48dc

00000000000048d2         add        rsp, 0x48
00000000000048d6         ret
                        ; endp

                     loc_48d7:
00000000000048d7         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_48dc:
00000000000048dc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
00000000000048e1         align      16                                          ; End of unwind block (FDE at 0x7048)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
00000000000048f0         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x7064)
00000000000048f7         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
00000000000048fc         align      256                                         ; End of unwind block (FDE at 0x7064)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004900         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x7078)
0000000000004903         mov        r8, 0xffffffffffffffff
000000000000490a         mov        rdx, rsi
000000000000490d         mov        rsi, rdi
0000000000004910         xor        edi, edi
0000000000004912         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004917         align      32                                          ; End of unwind block (FDE at 0x7078)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000004920         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x708c)
0000000000004923         mov        rcx, rdx
0000000000004926         mov        rdx, rsi
0000000000004929         mov        rsi, rdi
000000000000492c         xor        edi, edi
000000000000492e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004933         align      64                                          ; End of unwind block (FDE at 0x708c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000004940         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x70a0), quote_quoting_options
0000000000004947         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000494c         align      16                                          ; End of unwind block (FDE at 0x70a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000004950         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x70b4), quote_quoting_options
0000000000004957         mov        rdx, rsi
000000000000495a         mov        rsi, rdi
000000000000495d         xor        edi, edi
000000000000495f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004964         align      16                                          ; End of unwind block (FDE at 0x70b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000004970         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x70c8), quote_quoting_options
0000000000004977         mov        rdx, 0xffffffffffffffff
000000000000497e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004983         align      16                                          ; End of unwind block (FDE at 0x70c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000004990         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x70dc), quote_quoting_options, CODE XREF=parse_tab_stops+534, parse_tab_stops+622, parse_tab_stops+694, parse_tab_stops+803
0000000000004997         mov        rsi, rdi
000000000000499a         mov        rdx, 0xffffffffffffffff
00000000000049a1         xor        edi, edi
00000000000049a3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000049a8         align      16                                          ; End of unwind block (FDE at 0x70dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
00000000000049b0         push       r15                                         ; Begin of unwind block (FDE at 0x70f4), CODE XREF=version_etc_va+75, version_etc+161
00000000000049b2         push       r14
00000000000049b4         push       r13
00000000000049b6         push       r12
00000000000049b8         mov        r12, r9
00000000000049bb         push       rbp
00000000000049bc         push       rbx
00000000000049bd         mov        rbp, rdi
00000000000049c0         mov        rbx, r8
00000000000049c3         sub        rsp, 0x28
00000000000049c7         test       rsi, rsi
00000000000049ca         je         loc_4ae8

00000000000049d0         mov        r8, rdx
00000000000049d3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
00000000000049da         mov        r9, rcx
00000000000049dd         xor        eax, eax
00000000000049df         mov        rcx, rsi
00000000000049e2         mov        esi, 0x1
00000000000049e7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_49ec:
00000000000049ec         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x62fb, CODE XREF=version_etc_arn+337
00000000000049f3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000049f5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000049fa         call       j_dcgettext                                 ; dcgettext
00000000000049ff         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000004a06         mov        rcx, rax
0000000000004a09         mov        r8d, 0x7e3
0000000000004a0f         mov        esi, 0x1
0000000000004a14         mov        rdi, rbp
0000000000004a17         xor        eax, eax
0000000000004a19         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004a1e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004a25         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004a27         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004a2c         call       j_dcgettext                                 ; dcgettext
0000000000004a31         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004a34         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004a37         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004a3c         cmp        r12, 0x9
0000000000004a40         ja         loc_4d80

0000000000004a46         lea        rdx, qword [switch_table_65e8]              ; switch_table_65e8
0000000000004a4d         movsxd     rax, dword [rdx+r12*4]
0000000000004a51         add        rax, rdx
0000000000004a54         jmp        rax                                         ; switch statement using table at 0x65e8, with 10 cases, 0x4a60,0x4ad6,0x4b10,0x4b68,0x4ba8,0x4bf0,0x4c40,0x4c98,0x4cc8,0x4d30
0000000000004a56         align      32

                     loc_4a60:
0000000000004a60         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000004a64         mov        rax, qword [rbx+0x10]
0000000000004a68         lea        rsi, qword [aWrittenBySSSns_64f8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000004a6f         mov        r8, qword [rbx+8]
0000000000004a73         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004a78         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004a7a         mov        r13, qword [rbx+0x30]
0000000000004a7e         mov        r12, qword [rbx+0x28]
0000000000004a82         mov        qword [rsp+0x58+var_48], r9
0000000000004a87         mov        r15, qword [rbx+0x20]
0000000000004a8b         mov        r14, qword [rbx+0x18]
0000000000004a8f         mov        qword [rsp+0x58+var_58], rax
0000000000004a93         mov        qword [rsp+0x58+var_50], r8
0000000000004a98         mov        rbx, qword [rbx]
0000000000004a9b         call       j_dcgettext                                 ; dcgettext
0000000000004aa0         sub        rsp, 0x8

                     loc_4aa4:
0000000000004aa4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000004aa9         mov        rdx, rax
0000000000004aac         mov        rcx, rbx
0000000000004aaf         mov        esi, 0x1
0000000000004ab4         mov        rdi, rbp
0000000000004ab7         xor        eax, eax
0000000000004ab9         push       r9
0000000000004abb         push       r13
0000000000004abd         push       r12
0000000000004abf         push       r15
0000000000004ac1         push       r14
0000000000004ac3         mov        r9, qword [rsp+0x88+var_58]
0000000000004ac8         mov        r8, qword [rsp+0x88+var_50]
0000000000004acd         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004ad2         add        rsp, 0x30

                     loc_4ad6:
0000000000004ad6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
0000000000004ada         pop        rbx
0000000000004adb         pop        rbp
0000000000004adc         pop        r12
0000000000004ade         pop        r13
0000000000004ae0         pop        r14
0000000000004ae2         pop        r15
0000000000004ae4         ret
                        ; endp
0000000000004ae5         align      8

                     loc_4ae8:
0000000000004ae8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
0000000000004aeb         mov        rcx, rdx
0000000000004aee         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000004af5         mov        esi, 0x1
0000000000004afa         xor        eax, eax
0000000000004afc         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004b01         jmp        loc_49ec
0000000000004b06         align      16

                     loc_4b10:
0000000000004b10         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000004b14         mov        r9, qword [rbx+0x38]
0000000000004b18         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
0000000000004b1f         mov        rax, qword [rbx+0x10]
0000000000004b23         mov        r8, qword [rbx+8]
0000000000004b27         mov        edx, 0x5
0000000000004b2c         mov        r13, qword [rbx+0x30]
0000000000004b30         mov        r12, qword [rbx+0x28]
0000000000004b34         mov        r15, qword [rbx+0x20]
0000000000004b38         mov        r14, qword [rbx+0x18]
0000000000004b3c         mov        rbx, qword [rbx]
0000000000004b3f         mov        qword [rsp+0x58+var_40], r10
0000000000004b44         mov        qword [rsp+0x58+var_48], r9
0000000000004b49         mov        qword [rsp+0x58+var_58], rax
0000000000004b4d         mov        qword [rsp+0x58+var_50], r8

                     loc_4b52:
0000000000004b52         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000004b54         call       j_dcgettext                                 ; dcgettext
0000000000004b59         mov        r10, qword [rsp+0x58+var_40]
0000000000004b5e         push       r10
0000000000004b60         jmp        loc_4aa4
0000000000004b65         align      8

                     loc_4b68:
0000000000004b68         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
0000000000004b6b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000004b72         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b77         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b79         call       j_dcgettext                                 ; dcgettext
0000000000004b7e         add        rsp, 0x28
0000000000004b82         mov        rcx, rbx
0000000000004b85         mov        rdi, rbp
0000000000004b88         pop        rbx
0000000000004b89         pop        rbp
0000000000004b8a         pop        r12
0000000000004b8c         pop        r13
0000000000004b8e         pop        r14
0000000000004b90         pop        r15
0000000000004b92         mov        rdx, rax
0000000000004b95         mov        esi, 0x1
0000000000004b9a         xor        eax, eax
0000000000004b9c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004ba1         align      8

                     loc_4ba8:
0000000000004ba8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
0000000000004bac         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000004bb3         mov        rbx, qword [rbx]
0000000000004bb6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004bbb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004bbd         call       j_dcgettext                                 ; dcgettext
0000000000004bc2         add        rsp, 0x28
0000000000004bc6         mov        r8, r12
0000000000004bc9         mov        rcx, rbx
0000000000004bcc         mov        rdi, rbp
0000000000004bcf         mov        rdx, rax
0000000000004bd2         mov        esi, 0x1
0000000000004bd7         pop        rbx
0000000000004bd8         pop        rbp
0000000000004bd9         pop        r12
0000000000004bdb         pop        r13
0000000000004bdd         pop        r14
0000000000004bdf         pop        r15
0000000000004be1         xor        eax, eax
0000000000004be3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004be8         align      16

                     loc_4bf0:
0000000000004bf0         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000004bf4         mov        r12, qword [rbx+8]
0000000000004bf8         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
0000000000004bff         mov        rbx, qword [rbx]
0000000000004c02         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c07         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c09         call       j_dcgettext                                 ; dcgettext
0000000000004c0e         add        rsp, 0x28
0000000000004c12         mov        r9, r13
0000000000004c15         mov        r8, r12
0000000000004c18         mov        rcx, rbx
0000000000004c1b         mov        rdi, rbp
0000000000004c1e         mov        rdx, rax
0000000000004c21         pop        rbx
0000000000004c22         pop        rbp
0000000000004c23         pop        r12
0000000000004c25         pop        r13
0000000000004c27         pop        r14
0000000000004c29         pop        r15
0000000000004c2b         mov        esi, 0x1
0000000000004c30         xor        eax, eax
0000000000004c32         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004c37         align      64

                     loc_4c40:
0000000000004c40         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000004c47         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c4c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c4e         mov        r14, qword [rbx+0x18]
0000000000004c52         mov        r13, qword [rbx+0x10]
0000000000004c56         mov        r12, qword [rbx+8]
0000000000004c5a         mov        rbx, qword [rbx]
0000000000004c5d         call       j_dcgettext                                 ; dcgettext
0000000000004c62         sub        rsp, 0x8

                     loc_4c66:
0000000000004c66         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000004c68         mov        rdx, rax
0000000000004c6b         mov        r9, r13
0000000000004c6e         mov        r8, r12
0000000000004c71         mov        rcx, rbx
0000000000004c74         mov        rdi, rbp
0000000000004c77         mov        esi, 0x1
0000000000004c7c         xor        eax, eax
0000000000004c7e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004c83         pop        rax
0000000000004c84         pop        rdx
0000000000004c85         add        rsp, 0x28
0000000000004c89         pop        rbx
0000000000004c8a         pop        rbp
0000000000004c8b         pop        r12
0000000000004c8d         pop        r13
0000000000004c8f         pop        r14
0000000000004c91         pop        r15
0000000000004c93         ret
                        ; endp
0000000000004c94         align      8

                     loc_4c98:
0000000000004c98         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
0000000000004c9c         lea        rsi, qword [aWrittenBySSSns_6478]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000004ca3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ca8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004caa         mov        r14, qword [rbx+0x18]
0000000000004cae         mov        r13, qword [rbx+0x10]
0000000000004cb2         mov        r12, qword [rbx+8]
0000000000004cb6         mov        rbx, qword [rbx]
0000000000004cb9         call       j_dcgettext                                 ; dcgettext
0000000000004cbe         push       r15
0000000000004cc0         jmp        loc_4c66
0000000000004cc2         align      8

                     loc_4cc8:
0000000000004cc8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
0000000000004ccc         mov        r12, qword [rbx+0x28]
0000000000004cd0         lea        rsi, qword [aWrittenBySSSns_64a0]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000004cd7         mov        r15, qword [rbx+0x20]
0000000000004cdb         mov        r14, qword [rbx+0x18]
0000000000004cdf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ce4         mov        r13, qword [rbx+0x10]
0000000000004ce8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004cea         mov        rbx, qword [rbx]
0000000000004ced         mov        qword [rsp+0x58+var_58], r8
0000000000004cf1         call       j_dcgettext                                 ; dcgettext
0000000000004cf6         sub        rsp, 0x8
0000000000004cfa         mov        r9, r13
0000000000004cfd         push       r12
0000000000004cff         push       r15
0000000000004d01         push       r14

                     loc_4d03:
0000000000004d03         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000004d08         mov        rcx, rbx
0000000000004d0b         mov        rdx, rax
0000000000004d0e         mov        rdi, rbp
0000000000004d11         mov        esi, 0x1
0000000000004d16         xor        eax, eax
0000000000004d18         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004d1d         add        rsp, 0x20
0000000000004d21         add        rsp, 0x28
0000000000004d25         pop        rbx
0000000000004d26         pop        rbp
0000000000004d27         pop        r12
0000000000004d29         pop        r13
0000000000004d2b         pop        r14
0000000000004d2d         pop        r15
0000000000004d2f         ret
                        ; endp

                     loc_4d30:
0000000000004d30         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000004d34         mov        r13, qword [rbx+0x30]
0000000000004d38         lea        rsi, qword [aWrittenBySSSns_64c8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000004d3f         mov        r12, qword [rbx+0x28]
0000000000004d43         mov        r15, qword [rbx+0x20]
0000000000004d47         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004d4c         mov        r14, qword [rbx+0x18]
0000000000004d50         mov        r8, qword [rbx+8]
0000000000004d54         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004d56         mov        qword [rsp+0x58+var_50], r9
0000000000004d5b         mov        rbx, qword [rbx]
0000000000004d5e         mov        qword [rsp+0x58+var_58], r8
0000000000004d62         call       j_dcgettext                                 ; dcgettext
0000000000004d67         push       r13
0000000000004d69         push       r12
0000000000004d6b         push       r15
0000000000004d6d         push       r14
0000000000004d6f         mov        r9, qword [rsp+0x78+var_50]
0000000000004d74         jmp        loc_4d03
0000000000004d76         align      128

                     loc_4d80:
0000000000004d80         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000004d84         mov        r9, qword [rbx+0x38]
0000000000004d88         mov        edx, 0x5
0000000000004d8d         mov        rax, qword [rbx+0x10]
0000000000004d91         mov        r8, qword [rbx+8]
0000000000004d95         lea        rsi, qword [aWrittenBySSSns_6560]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000004d9c         mov        r13, qword [rbx+0x30]
0000000000004da0         mov        r12, qword [rbx+0x28]
0000000000004da4         mov        r15, qword [rbx+0x20]
0000000000004da8         mov        r14, qword [rbx+0x18]
0000000000004dac         mov        qword [rsp+0x58+var_40], r10
0000000000004db1         mov        qword [rsp+0x58+var_48], r9
0000000000004db6         mov        qword [rsp+0x58+var_58], rax
0000000000004dba         mov        qword [rsp+0x58+var_50], r8
0000000000004dbf         mov        rbx, qword [rbx]
0000000000004dc2         jmp        loc_4b52
0000000000004dc7         align      16                                          ; End of unwind block (FDE at 0x70f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000004dd0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x7208)
0000000000004dd3         cmp        qword [r8], 0x0
0000000000004dd7         je         j_version_etc_arn                           ; version_etc_arn

0000000000004dd9         nop        dword [rax]

                     loc_4de0:
0000000000004de0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000004de4         cmp        qword [r8+r9*8], 0x0
0000000000004de9         jne        loc_4de0

                     j_version_etc_arn:        // version_etc_arn
0000000000004deb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000004df0         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x7208), Begin of unwind block (FDE at 0x721c)
0000000000004df4         mov        r10, r8
0000000000004df7         xor        r9d, r9d
0000000000004dfa         mov        rax, qword [fs:0x28]
0000000000004e03         mov        qword [rsp+0x68+var_10], rax
0000000000004e08         xor        eax, eax
0000000000004e0a         mov        r8, rsp
0000000000004e0d         nop        dword [rax]

                     loc_4e10:
0000000000004e10         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000004e13         cmp        eax, 0x2f
0000000000004e16         ja         loc_4e5a

0000000000004e18         mov        r11d, eax
0000000000004e1b         add        r11, qword [r10+0x10]
0000000000004e1f         add        eax, 0x8
0000000000004e22         mov        dword [r10], eax

                     loc_4e25:
0000000000004e25         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000004e28         test       rax, rax
0000000000004e2b         mov        qword [r8+r9*8], rax
0000000000004e2f         je         loc_4e3b

0000000000004e31         add        r9, 0x1
0000000000004e35         cmp        r9, 0xa
0000000000004e39         jne        loc_4e10

                     loc_4e3b:
0000000000004e3b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000004e40         mov        rax, qword [rsp+0x68+var_10]
0000000000004e45         xor        rax, qword [fs:0x28]
0000000000004e4e         jne        loc_4e55

0000000000004e50         add        rsp, 0x68
0000000000004e54         ret
                        ; endp

                     loc_4e55:
0000000000004e55         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_4e5a:
0000000000004e5a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000004e5e         lea        rax, qword [r11+8]
0000000000004e62         mov        qword [r10+8], rax
0000000000004e66         jmp        loc_4e25
0000000000004e68         align      16                                          ; End of unwind block (FDE at 0x721c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000004e70         push       rbp                                         ; Begin of unwind block (FDE at 0x7238), CODE XREF=main+319
0000000000004e71         push       rbx
0000000000004e72         mov        r10d, 0x20
0000000000004e78         xor        r11d, r11d
0000000000004e7b         sub        rsp, 0xb8
0000000000004e82         mov        rax, qword [fs:0x28]
0000000000004e8b         mov        qword [rsp+0xc8+var_50], rax
0000000000004e90         xor        eax, eax
0000000000004e92         lea        rax, qword [rsp+0xc8+arg_0]
0000000000004e9a         mov        qword [rsp+0xc8+var_28], r8
0000000000004ea2         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000004eaa         lea        r8, qword [rsp+0xc8+var_A8]
0000000000004eaf         mov        qword [rsp+0xc8+var_20], r9
0000000000004eb7         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000004ebf         mov        qword [rsp+0xc8+var_B8], rax
0000000000004ec4         lea        rax, qword [rsp+0xc8+var_48]
0000000000004ecc         xor        r9d, r9d
0000000000004ecf         mov        qword [rsp+0xc8+var_B0], rax
0000000000004ed4         mov        rbp, rax
0000000000004ed7         nop        word [rax+rax]

                     loc_4ee0:
0000000000004ee0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000004ee4         ja         loc_4f3c

0000000000004ee6         mov        eax, r10d
0000000000004ee9         mov        r11d, 0x1
0000000000004eef         add        r10d, 0x8
0000000000004ef3         add        rax, rbp

                     loc_4ef6:
0000000000004ef6         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000004ef9         test       rax, rax
0000000000004efc         mov        qword [r8+r9*8], rax
0000000000004f00         je         loc_4f0c

0000000000004f02         add        r9, 0x1
0000000000004f06         cmp        r9, 0xa
0000000000004f0a         jne        loc_4ee0

                     loc_4f0c:
0000000000004f0c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000004f0f         jne        loc_4f35

                     loc_4f11:
0000000000004f11         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000004f16         mov        rax, qword [rsp+0xc8+var_50]
0000000000004f1b         xor        rax, qword [fs:0x28]
0000000000004f24         jne        loc_4f30

0000000000004f26         add        rsp, 0xb8
0000000000004f2d         pop        rbx
0000000000004f2e         pop        rbp
0000000000004f2f         ret
                        ; endp

                     loc_4f30:
0000000000004f30         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_4f35:
0000000000004f35         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000004f3a         jmp        loc_4f11

                     loc_4f3c:
0000000000004f3c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000004f3f         add        rbx, 0x8
0000000000004f43         jmp        loc_4ef6
0000000000004f45         align      16                                          ; End of unwind block (FDE at 0x7238)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000004f50         push       rbx                                         ; Begin of unwind block (FDE at 0x7264)
0000000000004f51         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000004f58         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004f5d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f5f         call       j_dcgettext                                 ; dcgettext
0000000000004f64         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000004f6b         mov        rsi, rax
0000000000004f6e         mov        edi, 0x1
0000000000004f73         xor        eax, eax
0000000000004f75         call       j___printf_chk                              ; __printf_chk
0000000000004f7a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000004f81         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004f86         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f88         call       j_dcgettext                                 ; dcgettext
0000000000004f8d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004f94         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5683
0000000000004f9b         mov        rsi, rax
0000000000004f9e         mov        edi, 0x1
0000000000004fa3         xor        eax, eax
0000000000004fa5         call       j___printf_chk                              ; __printf_chk
0000000000004faa         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004fb1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000004fb8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004fba         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004fbf         call       j_dcgettext                                 ; dcgettext
0000000000004fc4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004fc7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004fca         pop        rbx
0000000000004fcb         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000004fd0         push       rbx                                         ; End of unwind block (FDE at 0x7264), Begin of unwind block (FDE at 0x7284), CODE XREF=main+517, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000004fd1         mov        rbx, rdi
0000000000004fd4         call       j_malloc                                    ; malloc
0000000000004fd9         test       rax, rax
0000000000004fdc         jne        loc_4fe3

0000000000004fde         test       rbx, rbx
0000000000004fe1         jne        loc_4fe5

                     loc_4fe3:
0000000000004fe3         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000004fe4         ret
                        ; endp

                     loc_4fe5:
0000000000004fe5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4fea:
0000000000004fea         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7284)
                     xnmalloc:
0000000000004ff0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x72a0)
0000000000004ff3         mul        rsi
0000000000004ff6         mov        rdi, rax
0000000000004ff9         seto       al
0000000000004ffc         test       rdi, rdi
0000000000004fff         js         loc_500b

0000000000005001         movzx      eax, al
0000000000005004         test       rax, rax
0000000000005007         jne        loc_500b

0000000000005009         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_500b:
000000000000500b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000500f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5014:
0000000000005014         nop                                                    ; End of unwind block (FDE at 0x72a0)
0000000000005016         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000005020         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x72b4)
                        ; endp
0000000000005022         align      16                                          ; End of unwind block (FDE at 0x72b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000005030         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x72c8), CODE XREF=add_tab_stop+188, quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000005033         push       rbx
0000000000005034         mov        rbx, rsi
0000000000005037         jne        loc_503e

0000000000005039         test       rdi, rdi
000000000000503c         jne        loc_5058

                     loc_503e:
000000000000503e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000005041         call       j_realloc                                   ; realloc
0000000000005046         test       rax, rax
0000000000005049         jne        loc_5050

000000000000504b         test       rbx, rbx
000000000000504e         jne        loc_5061

                     loc_5050:
0000000000005050         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000005051         ret
                        ; endp
0000000000005052         align      8

                     loc_5058:
0000000000005058         call       j_free                                      ; free, CODE XREF=xrealloc+12
000000000000505d         xor        eax, eax
000000000000505f         pop        rbx
0000000000005060         ret
                        ; endp

                     loc_5061:
0000000000005061         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5066:
0000000000005066         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x72c8)
                     xnrealloc:
0000000000005070         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x72ec)
0000000000005073         mul        rdx
0000000000005076         mov        rsi, rax
0000000000005079         seto       al
000000000000507c         test       rsi, rsi
000000000000507f         js         loc_508b

0000000000005081         movzx      eax, al
0000000000005084         test       rax, rax
0000000000005087         jne        loc_508b

0000000000005089         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_508b:
000000000000508b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
000000000000508f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5094:
0000000000005094         nop                                                    ; End of unwind block (FDE at 0x72ec)
0000000000005096         nop        word [cs:rax+rax]
                     x2nrealloc:
00000000000050a0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7300)
00000000000050a3         mov        r9, rdx
00000000000050a6         mov        rcx, qword [rsi]
00000000000050a9         je         loc_50e0

00000000000050ab         xor        edx, edx
00000000000050ad         movabs     rax, 0x5555555555555554
00000000000050b7         div        r9
00000000000050ba         cmp        rax, rcx
00000000000050bd         jbe        loc_50fb

00000000000050bf         mov        rax, rcx
00000000000050c2         shr        rax, 0x1
00000000000050c5         lea        rcx, qword [rax+rcx+1]

                     loc_50ca:
00000000000050ca         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
00000000000050cd         imul       rcx, r9                                     ; argument #4 for method xrealloc
00000000000050d1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
00000000000050d4         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000050d9         align      32

                     loc_50e0:
00000000000050e0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
00000000000050e3         je         loc_5108

                     loc_50e5:
00000000000050e5         mov        rax, rcx                                    ; CODE XREF=sub_5104+28
00000000000050e8         mul        r9
00000000000050eb         seto       dl
00000000000050ee         test       rax, rax
00000000000050f1         movzx      edx, dl
00000000000050f4         js         loc_50fb

00000000000050f6         test       rdx, rdx
00000000000050f9         je         loc_50ca

                     loc_50fb:
00000000000050fb         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
00000000000050ff         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5104:
0000000000005104         nop        dword [rax]
                        ; endp

                     loc_5108:
0000000000005108         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000510a         mov        eax, 0x80
000000000000510f         xor        r8d, r8d
0000000000005112         div        r9
0000000000005115         test       rax, rax
0000000000005118         sete       r8b
000000000000511c         lea        rcx, qword [r8+rax]
0000000000005120         jmp        loc_50e5
0000000000005122         align      16                                          ; End of unwind block (FDE at 0x7300)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000005130         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7318)
0000000000005133         mov        rax, qword [rsi]
0000000000005136         je         loc_5160

0000000000005138         movabs     rdx, 0x5555555555555553
0000000000005142         cmp        rax, rdx
0000000000005145         ja         loc_5171

0000000000005147         mov        rdx, rax
000000000000514a         shr        rdx, 0x1
000000000000514d         lea        rax, qword [rdx+rax+1]

                     loc_5152:
0000000000005152         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000005155         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000005158         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000000515d         align      32

                     loc_5160:
0000000000005160         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000005163         mov        edx, 0x80
0000000000005168         cmove      rax, rdx
000000000000516c         test       rax, rax
000000000000516f         jns        loc_5152

                     loc_5171:
0000000000005171         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000005175         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_517a:
000000000000517a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7318)
                     xzalloc:
0000000000005180         push       rbx                                         ; Begin of unwind block (FDE at 0x7330)
0000000000005181         mov        rbx, rdi
0000000000005184         call       xmalloc                                     ; xmalloc
0000000000005189         mov        rdx, rbx                                    ; argument "__n" for method j_memset
000000000000518c         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000000518e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000005191         pop        rbx
0000000000005192         jmp        j_memset                                    ; memset
                        ; endp
0000000000005197         align      32                                          ; End of unwind block (FDE at 0x7330)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
00000000000051a0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x734c)
00000000000051a3         sub        rsp, 0x8
00000000000051a7         mul        rsi
00000000000051aa         seto       dl
00000000000051ad         test       rax, rax
00000000000051b0         js         loc_51c9

00000000000051b2         movzx      edx, dl
00000000000051b5         test       rdx, rdx
00000000000051b8         jne        loc_51c9

00000000000051ba         call       j_calloc                                    ; calloc
00000000000051bf         test       rax, rax
00000000000051c2         je         loc_51c9

00000000000051c4         add        rsp, 0x8
00000000000051c8         ret
                        ; endp

                     loc_51c9:
00000000000051c9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_51ce:
00000000000051ce         nop                                                    ; End of unwind block (FDE at 0x734c)
                        ; endp

                     xmemdup:
00000000000051d0         push       rbp                                         ; Begin of unwind block (FDE at 0x7368), CODE XREF=clone_quoting_options+40, xstrdup+17
00000000000051d1         push       rbx
00000000000051d2         mov        rbp, rdi
00000000000051d5         mov        rdi, rsi
00000000000051d8         mov        rbx, rsi
00000000000051db         sub        rsp, 0x8
00000000000051df         call       xmalloc                                     ; xmalloc
00000000000051e4         add        rsp, 0x8
00000000000051e8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
00000000000051eb         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
00000000000051ee         pop        rbx
00000000000051ef         pop        rbp
00000000000051f0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000051f3         jmp        j_memcpy                                    ; memcpy
                        ; endp
00000000000051f8         align      512                                         ; End of unwind block (FDE at 0x7368)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005200         push       rbx                                         ; Begin of unwind block (FDE at 0x7390)
0000000000005201         mov        rbx, rdi
0000000000005204         call       j_strlen                                    ; strlen
0000000000005209         mov        rdi, rbx
000000000000520c         lea        rsi, qword [rax+1]
0000000000005210         pop        rbx
0000000000005211         jmp        xmemdup                                     ; xmemdup
0000000000005213         align      32                                          ; End of unwind block (FDE at 0x7390)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005220         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x73ac), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=add_tab_stop+253, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41, xstrndup+19
0000000000005227         sub        rsp, 0x8
000000000000522b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005230         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005232         call       j_dcgettext                                 ; dcgettext
0000000000005237         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000523d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5dc3
0000000000005244         mov        rcx, rax
0000000000005247         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005249         xor        eax, eax
000000000000524b         call       j_error                                     ; error
0000000000005250         call       j_abort                                     ; abort
                        ; endp
0000000000005255         align      32                                          ; End of unwind block (FDE at 0x73ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrndup:
0000000000005260         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x73c4), CODE XREF=parse_tab_stops+523
0000000000005264         call       j_strndup                                   ; strndup
0000000000005269         test       rax, rax
000000000000526c         je         loc_5273

000000000000526e         add        rsp, 0x8
0000000000005272         ret
                        ; endp

                     loc_5273:
0000000000005273         call       xalloc_die                                  ; xalloc_die, CODE XREF=xstrndup+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5278:
0000000000005278         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x73c4)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000005280         push       r12                                         ; Begin of unwind block (FDE at 0x73e4), CODE XREF=next_file+336, cleanup_file_list_stdin+27, close_stream+21
0000000000005282         push       rbp
0000000000005283         push       rbx
0000000000005284         mov        rbx, rdi
0000000000005287         call       j_fileno                                    ; fileno
000000000000528c         test       eax, eax
000000000000528e         mov        rdi, rbx
0000000000005291         js         loc_52e7

0000000000005293         call       j___freading                                ; __freading
0000000000005298         test       eax, eax
000000000000529a         jne        loc_52c8

                     loc_529c:
000000000000529c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000529f         call       rpl_fflush                                  ; rpl_fflush
00000000000052a4         test       eax, eax
00000000000052a6         je         loc_52e4

00000000000052a8         call       j___errno_location                          ; __errno_location
00000000000052ad         mov        r12d, dword [rax]
00000000000052b0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
00000000000052b3         mov        rbp, rax
00000000000052b6         call       j_fclose                                    ; fclose
00000000000052bb         test       r12d, r12d
00000000000052be         jne        loc_52f0

                     loc_52c0:
00000000000052c0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
00000000000052c1         pop        rbp
00000000000052c2         pop        r12
00000000000052c4         ret
                        ; endp
00000000000052c5         align      8

                     loc_52c8:
00000000000052c8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
00000000000052cb         call       j_fileno                                    ; fileno
00000000000052d0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
00000000000052d2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
00000000000052d7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000052d9         call       j_lseek                                     ; lseek
00000000000052de         cmp        rax, 0xffffffffffffffff
00000000000052e2         jne        loc_529c

                     loc_52e4:
00000000000052e4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_52e7:
00000000000052e7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
00000000000052e8         pop        rbp
00000000000052e9         pop        r12
00000000000052eb         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_52f0:
00000000000052f0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
00000000000052f4         mov        eax, 0xffffffff
00000000000052f9         jmp        loc_52c0
00000000000052fb         align      256                                         ; End of unwind block (FDE at 0x73e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000005300         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x741c), CODE XREF=rpl_fclose+31
0000000000005303         push       rbx
0000000000005304         mov        rbx, rdi
0000000000005307         je         loc_531a

0000000000005309         call       j___freading                                ; __freading
000000000000530e         test       eax, eax
0000000000005310         je         loc_531a

0000000000005312         test       dword [rbx], 0x100
0000000000005318         jne        loc_5328

                     loc_531a:
000000000000531a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000000531d         pop        rbx
000000000000531e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000005323         align      8

                     loc_5328:
0000000000005328         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000532b         mov        edx, 0x1
0000000000005330         xor        esi, esi
0000000000005332         call       rpl_fseeko                                  ; rpl_fseeko
0000000000005337         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000533a         pop        rbx
000000000000533b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000005340         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x741c), Begin of unwind block (FDE at 0x743c), CODE XREF=rpl_fflush+50
0000000000005344         cmp        qword [rdi+0x10], rax
0000000000005348         je         loc_5350

                     j_j_fseeko:        // fseeko
000000000000534a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000534f         align      16

                     loc_5350:
0000000000005350         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000005354         cmp        qword [rdi+0x28], rax
0000000000005358         jne        j_j_fseeko                                  ; fseeko

000000000000535a         cmp        qword [rdi+0x48], 0x0
000000000000535f         jne        j_j_fseeko                                  ; fseeko

0000000000005361         push       r12
0000000000005363         push       rbp
0000000000005364         mov        r12d, edx
0000000000005367         push       rbx
0000000000005368         mov        rbp, rsi
000000000000536b         mov        rbx, rdi
000000000000536e         call       j_fileno                                    ; fileno
0000000000005373         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000005376         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000005379         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000537b         call       j_lseek                                     ; lseek
0000000000005380         cmp        rax, 0xffffffffffffffff
0000000000005384         je         loc_5392

0000000000005386         and        dword [rbx], 0xffffffef
0000000000005389         mov        qword [rbx+0x90], rax
0000000000005390         xor        eax, eax

                     loc_5392:
0000000000005392         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000005393         pop        rbp
0000000000005394         pop        r12
0000000000005396         ret
                        ; endp
0000000000005397         align      32                                          ; End of unwind block (FDE at 0x743c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
00000000000053a0         push       r13                                         ; Begin of unwind block (FDE at 0x746c), CODE XREF=sub_3550+534
00000000000053a2         push       r12
00000000000053a4         mov        r13, rsi
00000000000053a7         push       rbp
00000000000053a8         push       rbx
00000000000053a9         mov        rbx, rdi
00000000000053ac         mov        r12, rdx
00000000000053af         sub        rsp, 0x18
00000000000053b3         mov        rax, qword [fs:0x28]
00000000000053bc         mov        qword [rsp+0x38+var_30], rax
00000000000053c1         xor        eax, eax
00000000000053c3         lea        rax, qword [rsp+0x38+var_34]
00000000000053c8         test       rdi, rdi
00000000000053cb         cmove      rbx, rax
00000000000053cf         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
00000000000053d2         call       j_mbrtowc                                   ; mbrtowc
00000000000053d7         cmp        rax, 0xfffffffffffffffd
00000000000053db         mov        rbp, rax
00000000000053de         jbe        loc_5400

00000000000053e0         test       r12, r12
00000000000053e3         je         loc_5400

00000000000053e5         xor        edi, edi
00000000000053e7         call       hard_locale                                 ; hard_locale
00000000000053ec         test       al, al
00000000000053ee         jne        loc_5400

00000000000053f0         movzx      eax, byte [r13]
00000000000053f5         mov        ebp, 0x1
00000000000053fa         mov        dword [rbx], eax
00000000000053fc         nop        dword [rax]

                     loc_5400:
0000000000005400         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000005405         xor        rdx, qword [fs:0x28]
000000000000540e         mov        rax, rbp
0000000000005411         jne        loc_541e

0000000000005413         add        rsp, 0x18
0000000000005417         pop        rbx
0000000000005418         pop        rbp
0000000000005419         pop        r12
000000000000541b         pop        r13
000000000000541d         ret
                        ; endp

                     loc_541e:
000000000000541e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005423         align      16                                          ; End of unwind block (FDE at 0x746c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000005430         push       r12                                         ; Begin of unwind block (FDE at 0x74ac), CODE XREF=close_stdout+13, close_stdout+51
0000000000005432         push       rbp
0000000000005433         mov        rbp, rdi
0000000000005436         push       rbx
0000000000005437         call       j___fpending                                ; __fpending
000000000000543c         mov        ebx, dword [rbp]
000000000000543f         mov        rdi, rbp
0000000000005442         mov        r12, rax
0000000000005445         call       rpl_fclose                                  ; rpl_fclose
000000000000544a         and        ebx, 0x20
000000000000544d         test       ebx, ebx
000000000000544f         jne        loc_5468

0000000000005451         test       eax, eax
0000000000005453         je         loc_545f

0000000000005455         test       r12, r12
0000000000005458         mov        eax, 0xffffffff
000000000000545d         je         loc_5498

                     loc_545f:
000000000000545f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000005460         pop        rbp
0000000000005461         pop        r12
0000000000005463         ret
                        ; endp
0000000000005464         align      8

                     loc_5468:
0000000000005468         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000546a         jne        loc_5488

000000000000546c         call       j___errno_location                          ; __errno_location
0000000000005471         mov        dword [rax], 0x0
0000000000005477         mov        eax, 0xffffffff
000000000000547c         pop        rbx
000000000000547d         pop        rbp
000000000000547e         pop        r12
0000000000005480         ret
                        ; endp
0000000000005481         align      8

                     loc_5488:
0000000000005488         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000005489         mov        eax, 0xffffffff
000000000000548e         pop        rbp
000000000000548f         pop        r12
0000000000005491         ret
                        ; endp
0000000000005492         align      8

                     loc_5498:
0000000000005498         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000549d         cmp        dword [rax], 0x9
00000000000054a0         pop        rbx
00000000000054a1         pop        rbp
00000000000054a2         pop        r12
00000000000054a4         setne      al
00000000000054a7         movzx      eax, al
00000000000054aa         neg        eax
00000000000054ac         ret
                        ; endp
00000000000054ad         align      16                                          ; End of unwind block (FDE at 0x74ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
00000000000054b0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x74fc), CODE XREF=rpl_mbrtowc+71
00000000000054b4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000054b6         call       j_setlocale                                 ; setlocale
00000000000054bb         mov        rdx, rax
00000000000054be         mov        eax, 0x1
00000000000054c3         test       rdx, rdx
00000000000054c6         je         loc_54e5

00000000000054c8         lea        rdi, qword [aMemoryExhauste+17]             ; 0x6660
00000000000054cf         mov        ecx, 0x2
00000000000054d4         mov        rsi, rdx
00000000000054d7         rep  cmpsb byte [rsi], byte [rdi]
00000000000054d9         seta       cl
00000000000054dc         sbb        cl, 0x0
00000000000054df         xor        eax, eax
00000000000054e1         test       cl, cl
00000000000054e3         jne        loc_54f0

                     loc_54e5:
00000000000054e5         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
00000000000054e9         ret
                        ; endp
00000000000054ea         align      16

                     loc_54f0:
00000000000054f0         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
00000000000054f7         mov        ecx, 0x6
00000000000054fc         mov        rsi, rdx
00000000000054ff         rep  cmpsb byte [rsi], byte [rdi]
0000000000005501         seta       al
0000000000005504         sbb        al, 0x0
0000000000005506         test       al, al
0000000000005508         setne      al
000000000000550b         add        rsp, 0x8
000000000000550f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000005510         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x74fc), Begin of unwind block (FDE at 0x751c), CODE XREF=gettext_quote.part.1+11
0000000000005514         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000005519         call       j_nl_langinfo                               ; nl_langinfo
000000000000551e         test       rax, rax
0000000000005521         je         loc_5540

0000000000005523         cmp        byte [rax], 0x0
0000000000005526         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000552d         cmove      rax, rdx
0000000000005531         add        rsp, 0x8
0000000000005535         ret
                        ; endp
0000000000005536         align      64

                     loc_5540:
0000000000005540         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000005547         add        rsp, 0x8
000000000000554b         ret
                        ; endp
000000000000554c         align      16                                          ; End of unwind block (FDE at 0x751c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000005550         push       r15                                         ; Begin of unwind block (FDE at 0x753c), DATA XREF=_start+22
0000000000005552         push       r14
0000000000005554         mov        r15, rdx
0000000000005557         push       r13
0000000000005559         push       r12
000000000000555b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000005562         push       rbp
0000000000005563         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000556a         push       rbx
000000000000556b         mov        r13d, edi
000000000000556e         mov        r14, rsi
0000000000005571         sub        rbp, r12
0000000000005574         sub        rsp, 0x8
0000000000005578         sar        rbp, 0x3
000000000000557c         call       _init                                       ; _init
0000000000005581         test       rbp, rbp
0000000000005584         je         loc_55a6

0000000000005586         xor        ebx, ebx
0000000000005588         nop        dword [rax+rax]

                     loc_5590:
0000000000005590         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000005593         mov        rsi, r14
0000000000005596         mov        edi, r13d
0000000000005599         call       qword [r12+rbx*8]
000000000000559d         add        rbx, 0x1
00000000000055a1         cmp        rbp, rbx
00000000000055a4         jne        loc_5590

                     loc_55a6:
00000000000055a6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
00000000000055aa         pop        rbx
00000000000055ab         pop        rbp
00000000000055ac         pop        r12
00000000000055ae         pop        r13
00000000000055b0         pop        r14
00000000000055b2         pop        r15
00000000000055b4         ret
                        ; endp
00000000000055b5         align      64                                          ; End of unwind block (FDE at 0x753c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
00000000000055c0         ret                                                    ; Begin of unwind block (FDE at 0x7584), DATA XREF=_start+15
                        ; endp
00000000000055c2         align      16                                          ; End of unwind block (FDE at 0x7584)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
00000000000055d0         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x759c), __dso_handle, CODE XREF=main+114
00000000000055d7         xor        esi, esi
00000000000055d9         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
00000000000055de         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x759c)
00000000000055df         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x55e0; 0x55e9[ (9 bytes)
        ; File offset : [21984; 21993[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
00000000000055e0         sub        rsp, 0x8
00000000000055e4         add        rsp, 0x8
00000000000055e8         ret
                        ; endp
00000000000055e9         db  0x00 ; '.'
00000000000055ea         db  0x00 ; '.'
00000000000055eb         db  0x00 ; '.'
00000000000055ec         db  0x00 ; '.'
00000000000055ed         db  0x00 ; '.'
00000000000055ee         db  0x00 ; '.'
00000000000055ef         db  0x00 ; '.'
00000000000055f0         db  0x00 ; '.'
00000000000055f1         db  0x00 ; '.'
00000000000055f2         db  0x00 ; '.'
00000000000055f3         db  0x00 ; '.'
00000000000055f4         db  0x00 ; '.'
00000000000055f5         db  0x00 ; '.'
00000000000055f6         db  0x00 ; '.'
00000000000055f7         db  0x00 ; '.'
00000000000055f8         db  0x00 ; '.'
00000000000055f9         db  0x00 ; '.'
00000000000055fa         db  0x00 ; '.'
00000000000055fb         db  0x00 ; '.'
00000000000055fc         db  0x00 ; '.'
00000000000055fd         db  0x00 ; '.'
00000000000055fe         db  0x00 ; '.'
00000000000055ff         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x5600; 0x666e[ (4206 bytes)
        ; File offset : [22016; 26222[ (4206 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000005600         db  0x01 ; '.'
0000000000005601         db  0x00 ; '.'
0000000000005602         db  0x02 ; '.'
0000000000005603         db  0x00 ; '.'
                     aUnexpand:
0000000000005604         db         "unexpand", 0                               ; DATA XREF=main+307, usage+347, usage+668, usage+852, usage+871, usage+905
000000000000560d         db  0x5b ; '['                                         ; DATA XREF=usage+359
000000000000560e         db  0x00 ; '.'
                     aTestInvocation:
000000000000560f         db         "test invocation", 0                        ; DATA XREF=usage+398
                     aMulticallInvoc:
000000000000561f         db         "Multi-call invocation", 0                  ; DATA XREF=usage+446
                     aSha224sum:
0000000000005635         db         "sha224sum", 0                              ; DATA XREF=usage+463
                     aSha2Utilities:
000000000000563f         db         "sha2 utilities", 0                         ; DATA XREF=usage+475
                     aSha256sum:
000000000000564e         db         "sha256sum", 0                              ; DATA XREF=usage+366
                     aSha384sum:
0000000000005658         db         "sha384sum", 0                              ; DATA XREF=usage+410
                     aSha512sum:
0000000000005662         db         "sha512sum", 0                              ; DATA XREF=usage+434
                     aNsOnlineHelpSn:
000000000000566c         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+554
0000000000005683         db  0x47 ; 'G'                                         ; DATA XREF=main+300, usage+582, usage+775, emit_bug_reporting_address+68
0000000000005684         db  0x4e ; 'N'
0000000000005685         db  0x55 ; 'U'
0000000000005686         db  0x20 ; ' '
                     aCoreutils:
0000000000005687         db         "coreutils", 0                              ; DATA XREF=main+83, main+95, usage+422
0000000000005691         db  0x65 ; 'e'                                         ; DATA XREF=usage+621, usage+814
0000000000005692         db  0x6e ; 'n'
0000000000005693         db  0x5f ; '_'
0000000000005694         db  0x00 ; '.'
                     aFullDocumentat:
0000000000005695         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+649, usage+838
                     aUsrlocalsharel:
00000000000056b0         db         "/usr/local/share/locale", 0                ; DATA XREF=main+76
                     aDavidMackenzie:
00000000000056c8         db         "David MacKenzie", 0                        ; DATA XREF=main+293
                     aTabStopValueIs:
00000000000056d8         db         "tab stop value is too large", 0            ; DATA XREF=main+1208
                     a0123456789at:
00000000000056f4         db         ",0123456789at:", 0                         ; DATA XREF=main+128
                     aInputLineIsToo:
0000000000005703         db         "input line is too long", 0                 ; DATA XREF=main+1249, main+1329
                     aWriteError:
000000000000571a         db         "write error", 0                            ; DATA XREF=main+1015, main+1285, close_stdout+67
                     aTabs:
0000000000005726         db         "tabs", 0
000000000000572b         db  0x61 ; 'a'
000000000000572c         db  0x6c ; 'l'
000000000000572d         db  0x6c ; 'l'
000000000000572e         db  0x00 ; '.'
                     aFirstonly:
000000000000572f         db         "first-only", 0
                     aHelp:
000000000000573a         db         "help", 0
                     aVersion:
000000000000573f         db         "version", 0
0000000000005747         align      8
                     aTrySHelpForMor:
0000000000005748         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
000000000000576f         align      16
                     aUsageSOptionFi:
0000000000005770         db         "Usage: %s [OPTION]... [FILE]...\n", 0      ; DATA XREF=usage+93
0000000000005791         align      8
                     aConvertBlanksI:
0000000000005798         db         "Convert blanks in each FILE to tabs, writing to standard output.\n", 0 ; DATA XREF=usage+132
00000000000057da         align      32
                     aNwithNoFileOrW:
00000000000057e0         db         "\nWith no FILE, or when FILE is -, read standard input.\n", 0 ; DATA XREF=usage+169
                     aNmandatoryArgu:
0000000000005818         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+206
0000000000005863         align      8
                     aAAllConvertAll:
0000000000005868         db         "  -a, --all        convert all blanks, instead of just initial blanks\n      --first-only  convert only leading sequences of blanks (overrides -a)\n  -t, --tabs=N     have tabs N characters apart instead of 8 (enables -a)\n", 0 ; DATA XREF=usage+243
0000000000005945         align      8
                     aHelpDisplayThi:
0000000000005948         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+285
0000000000005975         align      8
                     aVersionOutputV:
0000000000005978         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+322
00000000000059ae         align      16
                     aHttpswwwgnuorg:
00000000000059b0         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+575, usage+675, usage+768, usage+878, emit_bug_reporting_address+61
                     aReportAnyTrans:
00000000000059d8         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+919
0000000000005a1f         align      32
                     aOrAvailableLoc:
0000000000005a20         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+718
0000000000005a53         align      8
                     aSpecifierOnlyA:
0000000000005a58         db         "'/' specifier only allowed with the last value", 0 ; DATA XREF=set_extend_size+19
0000000000005a87         align      8
                     aSpecifierOnlyA_5a88:        // aSpecifierOnlyA
0000000000005a88         db         "'+' specifier only allowed with the last value", 0 ; DATA XREF=set_increment_size+19
0000000000005ab7         align      8
                     aSpecifierNotAt_5ab8:        // aSpecifierNotAt
0000000000005ab8         db         "'/' specifier not at start of number: %s", 0 ; DATA XREF=parse_tab_stops+627
0000000000005ae1         align      8
                     aSpecifierNotAt:
0000000000005ae8         db         "'+' specifier not at start of number: %s", 0 ; DATA XREF=parse_tab_stops+699
0000000000005b11         align      8
                     aTabSizeContain:
0000000000005b18         db         "tab size contains invalid character(s): %s", 0 ; DATA XREF=parse_tab_stops+808
0000000000005b43         align      8
                     aSpecifierIsMut:
0000000000005b48         db         "'/' specifier is mutually exclusive with '+'", 0 ; DATA XREF=finalize_tab_stops+280
0000000000005b75         align      8
                     aCoreutils831sr:
0000000000005b78         db         "../coreutils-8.31/src/expand-common.c", 0  ; DATA XREF=next_file+489
0000000000005b9e         align      32
                     aTTabslistUseCo:
0000000000005ba0         db         "  -t, --tabs=LIST  use comma separated list of tab positions\n", 0 ; DATA XREF=emit_tab_list_info+8
0000000000005bde         align      32
                     aTheLastSpecifi:
0000000000005be0         db         "                     The last specified position can be prefixed with '/'\n                     to specify a tab size to use after the last\n                     explicitly specified tab stop.  Also a prefix of '+'\n                     can be used to align r" ; DATA XREF=emit_tab_list_info+45
0000000000005ce0         db         "emaining tab stops relative to\n                     the last specified tab stop instead of the first column\n", 0
                     a0123456789:
0000000000005d4d         db         "0123456789", 0                             ; DATA XREF=parse_tab_stops+495
                     aTabStopIsTooLa:
0000000000005d58         db         "tab stop is too large %s", 0               ; DATA XREF=parse_tab_stops+539
                     aTabSizeCannotB:
0000000000005d71         db         "tab size cannot be 0", 0                   ; DATA XREF=finalize_tab_stops+208
                     aTabSizesMustBe:
0000000000005d86         db         "tab sizes must be ascending", 0            ; DATA XREF=finalize_tab_stops+244
                     aPrevfile:
0000000000005da2         db         "prev_file", 0                              ; DATA XREF=next_file+496
0000000000005dac         align      16
                     __PRETTY_FUNCTION__.6961:
0000000000005db0         db         "next_file", 0                              ; DATA XREF=next_file+482
                     a831:
0000000000005dba         db         "8.31", 0                                   ; DATA XREF=Version
                     aSS:
0000000000005dbf         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
0000000000005dc6         align      8
                     aANullArgv0WasP:
0000000000005dc8         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000005e00         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000005e08         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000005e09         db  0x74 ; 't'
0000000000005e0a         db  0x2d ; '-'                                         ; DATA XREF=next_file+41, next_file+109, cleanup_file_list_stdin+48
0000000000005e0b         db  0x00 ; '.'
0000000000005e0c         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000005e0d         db  0x80 ; '.'
0000000000005e0e         db  0x98 ; '.'
0000000000005e0f         db  0x00 ; '.'
0000000000005e10         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000005e11         db  0x80 ; '.'
0000000000005e12         db  0x99 ; '.'
0000000000005e13         db  0x00 ; '.'
0000000000005e14         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
0000000000005e15         db  0x07 ; '.'
0000000000005e16         db  0x65 ; 'e'
0000000000005e17         db  0x00 ; '.'
0000000000005e18         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000005e19         db  0xaf ; '.'
0000000000005e1a         db  0x00 ; '.'
0000000000005e1b         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_3550+1451, sub_3550+1493, sub_3550+2429
0000000000005e1c         db  0x00 ; '.'
0000000000005e1d         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_3550+132, sub_3550+1338, sub_3550+1670, sub_3550+1697, sub_3550+2352
0000000000005e1e         db  0x00 ; '.'
0000000000005e1f         db  0x60 ; '`'                                         ; DATA XREF=sub_3550+1627, sub_3550+1654
0000000000005e20         db  0x00 ; '.'
                     aLiteral:
0000000000005e21         db         "literal", 0
                     aShell:
0000000000005e29         db         "shell", 0
                     aShellalways:
0000000000005e2f         db         "shell-always", 0
0000000000005e3c         db  0x73 ; 's'
0000000000005e3d         db  0x68 ; 'h'
0000000000005e3e         db  0x65 ; 'e'
0000000000005e3f         db  0x6c ; 'l'
0000000000005e40         db  0x6c ; 'l'
0000000000005e41         db  0x2d ; '-'
                     aEscape:
0000000000005e42         db         "escape", 0
                     aShellescapealw:
0000000000005e49         db         "shell-escape-always", 0
0000000000005e5d         db  0x63 ; 'c'
0000000000005e5e         db  0x00 ; '.'
                     aCmaybe:
0000000000005e5f         db         "c-maybe", 0
                     aClocale:
0000000000005e67         db         "clocale", 0
0000000000005e6f         align      128
                     switch_table_5e80:        // switch_table
0000000000005e80         dd         quotearg_buffer_restyled.loc_3c4a-switch_table_5e80, quotearg_buffer_restyled.loc_2ea3-switch_table_5e80, quotearg_buffer_restyled.loc_3e78-switch_table_5e80, quotearg_buffer_restyled.loc_3c84-switch_table_5e80 ; switch table used at 0x2ea1 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000005e90         dd         quotearg_buffer_restyled.loc_3a74-switch_table_5e80, quotearg_buffer_restyled.loc_3ad0-switch_table_5e80, quotearg_buffer_restyled.loc_3b25-switch_table_5e80, quotearg_buffer_restyled.loc_3b6a-switch_table_5e80
0000000000005ea0         dd         3 dup (quotearg_buffer_restyled.loc_3ba4-switch_table_5e80)
0000000000005eac         db  0x74 ; 't'                                         ; DATA XREF=quotearg_buffer_restyled+477
0000000000005ead         db  0xd3 ; '.'
0000000000005eae         db  0xff ; '.'
0000000000005eaf         db  0xff ; '.'
0000000000005eb0         db  0x5c ; '\'
0000000000005eb1         db  0xd4 ; '.'
0000000000005eb2         db  0xff ; '.'
0000000000005eb3         db  0xff ; '.'
0000000000005eb4         db  0x5c ; '\'
0000000000005eb5         db  0xd4 ; '.'
0000000000005eb6         db  0xff ; '.'
0000000000005eb7         db  0xff ; '.'
0000000000005eb8         db  0x5c ; '\'
0000000000005eb9         db  0xd4 ; '.'
0000000000005eba         db  0xff ; '.'
0000000000005ebb         db  0xff ; '.'
0000000000005ebc         db  0x5c ; '\'
0000000000005ebd         db  0xd4 ; '.'
0000000000005ebe         db  0xff ; '.'
0000000000005ebf         db  0xff ; '.'
0000000000005ec0         db  0x5c ; '\'
0000000000005ec1         db  0xd4 ; '.'
0000000000005ec2         db  0xff ; '.'
0000000000005ec3         db  0xff ; '.'
0000000000005ec4         db  0x5c ; '\'
0000000000005ec5         db  0xd4 ; '.'
0000000000005ec6         db  0xff ; '.'
0000000000005ec7         db  0xff ; '.'
0000000000005ec8         db  0xb4 ; '.'
0000000000005ec9         db  0xd3 ; '.'
0000000000005eca         db  0xff ; '.'
0000000000005ecb         db  0xff ; '.'
0000000000005ecc         db  0xbc ; '.'
0000000000005ecd         db  0xd2 ; '.'
0000000000005ece         db  0xff ; '.'
0000000000005ecf         db  0xff ; '.'
0000000000005ed0         db  0x7c ; '|'
0000000000005ed1         db  0xd2 ; '.'
0000000000005ed2         db  0xff ; '.'
0000000000005ed3         db  0xff ; '.'
0000000000005ed4         db  0x44 ; 'D'
0000000000005ed5         db  0xd4 ; '.'
0000000000005ed6         db  0xff ; '.'
0000000000005ed7         db  0xff ; '.'
0000000000005ed8         db  0x34 ; '4'
0000000000005ed9         db  0xd4 ; '.'
0000000000005eda         db  0xff ; '.'
0000000000005edb         db  0xff ; '.'
0000000000005edc         db  0x24 ; '$'
0000000000005edd         db  0xd4 ; '.'
0000000000005ede         db  0xff ; '.'
0000000000005edf         db  0xff ; '.'
0000000000005ee0         db  0x14 ; '.'
0000000000005ee1         db  0xd4 ; '.'
0000000000005ee2         db  0xff ; '.'
0000000000005ee3         db  0xff ; '.'
0000000000005ee4         db  0x5c ; '\'
0000000000005ee5         db  0xd4 ; '.'
0000000000005ee6         db  0xff ; '.'
0000000000005ee7         db  0xff ; '.'
0000000000005ee8         db  0x5c ; '\'
0000000000005ee9         db  0xd4 ; '.'
0000000000005eea         db  0xff ; '.'
0000000000005eeb         db  0xff ; '.'
0000000000005eec         db  0x5c ; '\'
0000000000005eed         db  0xd4 ; '.'
0000000000005eee         db  0xff ; '.'
0000000000005eef         db  0xff ; '.'
0000000000005ef0         db  0x5c ; '\'
0000000000005ef1         db  0xd4 ; '.'
0000000000005ef2         db  0xff ; '.'
0000000000005ef3         db  0xff ; '.'
0000000000005ef4         db  0x5c ; '\'
0000000000005ef5         db  0xd4 ; '.'
0000000000005ef6         db  0xff ; '.'
0000000000005ef7         db  0xff ; '.'
0000000000005ef8         db  0x5c ; '\'
0000000000005ef9         db  0xd4 ; '.'
0000000000005efa         db  0xff ; '.'
0000000000005efb         db  0xff ; '.'
0000000000005efc         db  0x5c ; '\'
0000000000005efd         db  0xd4 ; '.'
0000000000005efe         db  0xff ; '.'
0000000000005eff         db  0xff ; '.'
0000000000005f00         db  0x5c ; '\'
0000000000005f01         db  0xd4 ; '.'
0000000000005f02         db  0xff ; '.'
0000000000005f03         db  0xff ; '.'
0000000000005f04         db  0x5c ; '\'
0000000000005f05         db  0xd4 ; '.'
0000000000005f06         db  0xff ; '.'
0000000000005f07         db  0xff ; '.'
0000000000005f08         db  0x5c ; '\'
0000000000005f09         db  0xd4 ; '.'
0000000000005f0a         db  0xff ; '.'
0000000000005f0b         db  0xff ; '.'
0000000000005f0c         db  0x5c ; '\'
0000000000005f0d         db  0xd4 ; '.'
0000000000005f0e         db  0xff ; '.'
0000000000005f0f         db  0xff ; '.'
0000000000005f10         db  0x5c ; '\'
0000000000005f11         db  0xd4 ; '.'
0000000000005f12         db  0xff ; '.'
0000000000005f13         db  0xff ; '.'
0000000000005f14         db  0x5c ; '\'
0000000000005f15         db  0xd4 ; '.'
0000000000005f16         db  0xff ; '.'
0000000000005f17         db  0xff ; '.'
0000000000005f18         db  0x5c ; '\'
0000000000005f19         db  0xd4 ; '.'
0000000000005f1a         db  0xff ; '.'
0000000000005f1b         db  0xff ; '.'
0000000000005f1c         db  0x5c ; '\'
0000000000005f1d         db  0xd4 ; '.'
0000000000005f1e         db  0xff ; '.'
0000000000005f1f         db  0xff ; '.'
0000000000005f20         db  0x5c ; '\'
0000000000005f21         db  0xd4 ; '.'
0000000000005f22         db  0xff ; '.'
0000000000005f23         db  0xff ; '.'
0000000000005f24         db  0x5c ; '\'
0000000000005f25         db  0xd4 ; '.'
0000000000005f26         db  0xff ; '.'
0000000000005f27         db  0xff ; '.'
0000000000005f28         db  0x5c ; '\'
0000000000005f29         db  0xd4 ; '.'
0000000000005f2a         db  0xff ; '.'
0000000000005f2b         db  0xff ; '.'
0000000000005f2c         db  0x04 ; '.'
0000000000005f2d         db  0xd4 ; '.'
0000000000005f2e         db  0xff ; '.'
0000000000005f2f         db  0xff ; '.'
0000000000005f30         db  0xf4 ; '.'
0000000000005f31         db  0xd3 ; '.'
0000000000005f32         db  0xff ; '.'
0000000000005f33         db  0xff ; '.'
0000000000005f34         db  0xf4 ; '.'
0000000000005f35         db  0xd3 ; '.'
0000000000005f36         db  0xff ; '.'
0000000000005f37         db  0xff ; '.'
0000000000005f38         db  0xc4 ; '.'
0000000000005f39         db  0xd3 ; '.'
0000000000005f3a         db  0xff ; '.'
0000000000005f3b         db  0xff ; '.'
0000000000005f3c         db  0xf4 ; '.'
0000000000005f3d         db  0xd3 ; '.'
0000000000005f3e         db  0xff ; '.'
0000000000005f3f         db  0xff ; '.'
0000000000005f40         db  0x9c ; '.'
0000000000005f41         db  0xd3 ; '.'
0000000000005f42         db  0xff ; '.'
0000000000005f43         db  0xff ; '.'
0000000000005f44         db  0xf4 ; '.'
0000000000005f45         db  0xd3 ; '.'
0000000000005f46         db  0xff ; '.'
0000000000005f47         db  0xff ; '.'
0000000000005f48         db  0x57 ; 'W'
0000000000005f49         db  0xd2 ; '.'
0000000000005f4a         db  0xff ; '.'
0000000000005f4b         db  0xff ; '.'
0000000000005f4c         db  0xf4 ; '.'
0000000000005f4d         db  0xd3 ; '.'
0000000000005f4e         db  0xff ; '.'
0000000000005f4f         db  0xff ; '.'
0000000000005f50         db  0xf4 ; '.'
0000000000005f51         db  0xd3 ; '.'
0000000000005f52         db  0xff ; '.'
0000000000005f53         db  0xff ; '.'
0000000000005f54         db  0xf4 ; '.'
0000000000005f55         db  0xd3 ; '.'
0000000000005f56         db  0xff ; '.'
0000000000005f57         db  0xff ; '.'
0000000000005f58         db  0x9c ; '.'
0000000000005f59         db  0xd3 ; '.'
0000000000005f5a         db  0xff ; '.'
0000000000005f5b         db  0xff ; '.'
0000000000005f5c         db  0x9c ; '.'
0000000000005f5d         db  0xd3 ; '.'
0000000000005f5e         db  0xff ; '.'
0000000000005f5f         db  0xff ; '.'
0000000000005f60         db  0x9c ; '.'
0000000000005f61         db  0xd3 ; '.'
0000000000005f62         db  0xff ; '.'
0000000000005f63         db  0xff ; '.'
0000000000005f64         db  0x9c ; '.'
0000000000005f65         db  0xd3 ; '.'
0000000000005f66         db  0xff ; '.'
0000000000005f67         db  0xff ; '.'
0000000000005f68         db  0x9c ; '.'
0000000000005f69         db  0xd3 ; '.'
0000000000005f6a         db  0xff ; '.'
0000000000005f6b         db  0xff ; '.'
0000000000005f6c         db  0x9c ; '.'
0000000000005f6d         db  0xd3 ; '.'
0000000000005f6e         db  0xff ; '.'
0000000000005f6f         db  0xff ; '.'
0000000000005f70         db  0x9c ; '.'
0000000000005f71         db  0xd3 ; '.'
0000000000005f72         db  0xff ; '.'
0000000000005f73         db  0xff ; '.'
0000000000005f74         db  0x9c ; '.'
0000000000005f75         db  0xd3 ; '.'
0000000000005f76         db  0xff ; '.'
0000000000005f77         db  0xff ; '.'
0000000000005f78         db  0x9c ; '.'
0000000000005f79         db  0xd3 ; '.'
0000000000005f7a         db  0xff ; '.'
0000000000005f7b         db  0xff ; '.'
0000000000005f7c         db  0x9c ; '.'
0000000000005f7d         db  0xd3 ; '.'
0000000000005f7e         db  0xff ; '.'
0000000000005f7f         db  0xff ; '.'
0000000000005f80         db  0x9c ; '.'
0000000000005f81         db  0xd3 ; '.'
0000000000005f82         db  0xff ; '.'
0000000000005f83         db  0xff ; '.'
0000000000005f84         db  0x9c ; '.'
0000000000005f85         db  0xd3 ; '.'
0000000000005f86         db  0xff ; '.'
0000000000005f87         db  0xff ; '.'
0000000000005f88         db  0x9c ; '.'
0000000000005f89         db  0xd3 ; '.'
0000000000005f8a         db  0xff ; '.'
0000000000005f8b         db  0xff ; '.'
0000000000005f8c         db  0x9c ; '.'
0000000000005f8d         db  0xd3 ; '.'
0000000000005f8e         db  0xff ; '.'
0000000000005f8f         db  0xff ; '.'
0000000000005f90         db  0x9c ; '.'
0000000000005f91         db  0xd3 ; '.'
0000000000005f92         db  0xff ; '.'
0000000000005f93         db  0xff ; '.'
0000000000005f94         db  0x9c ; '.'
0000000000005f95         db  0xd3 ; '.'
0000000000005f96         db  0xff ; '.'
0000000000005f97         db  0xff ; '.'
0000000000005f98         db  0xf4 ; '.'
0000000000005f99         db  0xd3 ; '.'
0000000000005f9a         db  0xff ; '.'
0000000000005f9b         db  0xff ; '.'
0000000000005f9c         db  0xf4 ; '.'
0000000000005f9d         db  0xd3 ; '.'
0000000000005f9e         db  0xff ; '.'
0000000000005f9f         db  0xff ; '.'
0000000000005fa0         db  0xf4 ; '.'
0000000000005fa1         db  0xd3 ; '.'
0000000000005fa2         db  0xff ; '.'
0000000000005fa3         db  0xff ; '.'
0000000000005fa4         db  0xf4 ; '.'
0000000000005fa5         db  0xd3 ; '.'
0000000000005fa6         db  0xff ; '.'
0000000000005fa7         db  0xff ; '.'
0000000000005fa8         db  0x27 ; '''
0000000000005fa9         db  0xd2 ; '.'
0000000000005faa         db  0xff ; '.'
0000000000005fab         db  0xff ; '.'
0000000000005fac         db  0x5c ; '\'
0000000000005fad         db  0xd4 ; '.'
0000000000005fae         db  0xff ; '.'
0000000000005faf         db  0xff ; '.'
0000000000005fb0         db  0x9c ; '.'
0000000000005fb1         db  0xd3 ; '.'
0000000000005fb2         db  0xff ; '.'
0000000000005fb3         db  0xff ; '.'
0000000000005fb4         db  0x9c ; '.'
0000000000005fb5         db  0xd3 ; '.'
0000000000005fb6         db  0xff ; '.'
0000000000005fb7         db  0xff ; '.'
0000000000005fb8         db  0x9c ; '.'
0000000000005fb9         db  0xd3 ; '.'
0000000000005fba         db  0xff ; '.'
0000000000005fbb         db  0xff ; '.'
0000000000005fbc         db  0x9c ; '.'
0000000000005fbd         db  0xd3 ; '.'
0000000000005fbe         db  0xff ; '.'
0000000000005fbf         db  0xff ; '.'
0000000000005fc0         db  0x9c ; '.'
0000000000005fc1         db  0xd3 ; '.'
0000000000005fc2         db  0xff ; '.'
0000000000005fc3         db  0xff ; '.'
0000000000005fc4         db  0x9c ; '.'
0000000000005fc5         db  0xd3 ; '.'
0000000000005fc6         db  0xff ; '.'
0000000000005fc7         db  0xff ; '.'
0000000000005fc8         db  0x9c ; '.'
0000000000005fc9         db  0xd3 ; '.'
0000000000005fca         db  0xff ; '.'
0000000000005fcb         db  0xff ; '.'
0000000000005fcc         db  0x9c ; '.'
0000000000005fcd         db  0xd3 ; '.'
0000000000005fce         db  0xff ; '.'
0000000000005fcf         db  0xff ; '.'
0000000000005fd0         db  0x9c ; '.'
0000000000005fd1         db  0xd3 ; '.'
0000000000005fd2         db  0xff ; '.'
0000000000005fd3         db  0xff ; '.'
0000000000005fd4         db  0x9c ; '.'
0000000000005fd5         db  0xd3 ; '.'
0000000000005fd6         db  0xff ; '.'
0000000000005fd7         db  0xff ; '.'
0000000000005fd8         db  0x9c ; '.'
0000000000005fd9         db  0xd3 ; '.'
0000000000005fda         db  0xff ; '.'
0000000000005fdb         db  0xff ; '.'
0000000000005fdc         db  0x9c ; '.'
0000000000005fdd         db  0xd3 ; '.'
0000000000005fde         db  0xff ; '.'
0000000000005fdf         db  0xff ; '.'
0000000000005fe0         db  0x9c ; '.'
0000000000005fe1         db  0xd3 ; '.'
0000000000005fe2         db  0xff ; '.'
0000000000005fe3         db  0xff ; '.'
0000000000005fe4         db  0x9c ; '.'
0000000000005fe5         db  0xd3 ; '.'
0000000000005fe6         db  0xff ; '.'
0000000000005fe7         db  0xff ; '.'
0000000000005fe8         db  0x9c ; '.'
0000000000005fe9         db  0xd3 ; '.'
0000000000005fea         db  0xff ; '.'
0000000000005feb         db  0xff ; '.'
0000000000005fec         db  0x9c ; '.'
0000000000005fed         db  0xd3 ; '.'
0000000000005fee         db  0xff ; '.'
0000000000005fef         db  0xff ; '.'
0000000000005ff0         db  0x9c ; '.'
0000000000005ff1         db  0xd3 ; '.'
0000000000005ff2         db  0xff ; '.'
0000000000005ff3         db  0xff ; '.'
0000000000005ff4         db  0x9c ; '.'
0000000000005ff5         db  0xd3 ; '.'
0000000000005ff6         db  0xff ; '.'
0000000000005ff7         db  0xff ; '.'
0000000000005ff8         db  0x9c ; '.'
0000000000005ff9         db  0xd3 ; '.'
0000000000005ffa         db  0xff ; '.'
0000000000005ffb         db  0xff ; '.'
0000000000005ffc         db  0x9c ; '.'
0000000000005ffd         db  0xd3 ; '.'
0000000000005ffe         db  0xff ; '.'
0000000000005fff         db  0xff ; '.'
0000000000006000         db  0x9c ; '.'
0000000000006001         db  0xd3 ; '.'
0000000000006002         db  0xff ; '.'
0000000000006003         db  0xff ; '.'
0000000000006004         db  0x9c ; '.'
0000000000006005         db  0xd3 ; '.'
0000000000006006         db  0xff ; '.'
0000000000006007         db  0xff ; '.'
0000000000006008         db  0x9c ; '.'
0000000000006009         db  0xd3 ; '.'
000000000000600a         db  0xff ; '.'
000000000000600b         db  0xff ; '.'
000000000000600c         db  0x9c ; '.'
000000000000600d         db  0xd3 ; '.'
000000000000600e         db  0xff ; '.'
000000000000600f         db  0xff ; '.'
0000000000006010         db  0x9c ; '.'
0000000000006011         db  0xd3 ; '.'
0000000000006012         db  0xff ; '.'
0000000000006013         db  0xff ; '.'
0000000000006014         db  0x9c ; '.'
0000000000006015         db  0xd3 ; '.'
0000000000006016         db  0xff ; '.'
0000000000006017         db  0xff ; '.'
0000000000006018         db  0xf4 ; '.'
0000000000006019         db  0xd3 ; '.'
000000000000601a         db  0xff ; '.'
000000000000601b         db  0xff ; '.'
000000000000601c         db  0xcc ; '.'
000000000000601d         db  0xd2 ; '.'
000000000000601e         db  0xff ; '.'
000000000000601f         db  0xff ; '.'
0000000000006020         db  0x9c ; '.'
0000000000006021         db  0xd3 ; '.'
0000000000006022         db  0xff ; '.'
0000000000006023         db  0xff ; '.'
0000000000006024         db  0xf4 ; '.'
0000000000006025         db  0xd3 ; '.'
0000000000006026         db  0xff ; '.'
0000000000006027         db  0xff ; '.'
0000000000006028         db  0x9c ; '.'
0000000000006029         db  0xd3 ; '.'
000000000000602a         db  0xff ; '.'
000000000000602b         db  0xff ; '.'
000000000000602c         db  0xf4 ; '.'
000000000000602d         db  0xd3 ; '.'
000000000000602e         db  0xff ; '.'
000000000000602f         db  0xff ; '.'
0000000000006030         db  0x9c ; '.'
0000000000006031         db  0xd3 ; '.'
0000000000006032         db  0xff ; '.'
0000000000006033         db  0xff ; '.'
0000000000006034         db  0x9c ; '.'
0000000000006035         db  0xd3 ; '.'
0000000000006036         db  0xff ; '.'
0000000000006037         db  0xff ; '.'
0000000000006038         db  0x9c ; '.'
0000000000006039         db  0xd3 ; '.'
000000000000603a         db  0xff ; '.'
000000000000603b         db  0xff ; '.'
000000000000603c         db  0x9c ; '.'
000000000000603d         db  0xd3 ; '.'
000000000000603e         db  0xff ; '.'
000000000000603f         db  0xff ; '.'
0000000000006040         db  0x9c ; '.'
0000000000006041         db  0xd3 ; '.'
0000000000006042         db  0xff ; '.'
0000000000006043         db  0xff ; '.'
0000000000006044         db  0x9c ; '.'
0000000000006045         db  0xd3 ; '.'
0000000000006046         db  0xff ; '.'
0000000000006047         db  0xff ; '.'
0000000000006048         db  0x9c ; '.'
0000000000006049         db  0xd3 ; '.'
000000000000604a         db  0xff ; '.'
000000000000604b         db  0xff ; '.'
000000000000604c         db  0x9c ; '.'
000000000000604d         db  0xd3 ; '.'
000000000000604e         db  0xff ; '.'
000000000000604f         db  0xff ; '.'
0000000000006050         db  0x9c ; '.'
0000000000006051         db  0xd3 ; '.'
0000000000006052         db  0xff ; '.'
0000000000006053         db  0xff ; '.'
0000000000006054         db  0x9c ; '.'
0000000000006055         db  0xd3 ; '.'
0000000000006056         db  0xff ; '.'
0000000000006057         db  0xff ; '.'
0000000000006058         db  0x9c ; '.'
0000000000006059         db  0xd3 ; '.'
000000000000605a         db  0xff ; '.'
000000000000605b         db  0xff ; '.'
000000000000605c         db  0x9c ; '.'
000000000000605d         db  0xd3 ; '.'
000000000000605e         db  0xff ; '.'
000000000000605f         db  0xff ; '.'
0000000000006060         db  0x9c ; '.'
0000000000006061         db  0xd3 ; '.'
0000000000006062         db  0xff ; '.'
0000000000006063         db  0xff ; '.'
0000000000006064         db  0x9c ; '.'
0000000000006065         db  0xd3 ; '.'
0000000000006066         db  0xff ; '.'
0000000000006067         db  0xff ; '.'
0000000000006068         db  0x9c ; '.'
0000000000006069         db  0xd3 ; '.'
000000000000606a         db  0xff ; '.'
000000000000606b         db  0xff ; '.'
000000000000606c         db  0x9c ; '.'
000000000000606d         db  0xd3 ; '.'
000000000000606e         db  0xff ; '.'
000000000000606f         db  0xff ; '.'
0000000000006070         db  0x9c ; '.'
0000000000006071         db  0xd3 ; '.'
0000000000006072         db  0xff ; '.'
0000000000006073         db  0xff ; '.'
0000000000006074         db  0x9c ; '.'
0000000000006075         db  0xd3 ; '.'
0000000000006076         db  0xff ; '.'
0000000000006077         db  0xff ; '.'
0000000000006078         db  0x9c ; '.'
0000000000006079         db  0xd3 ; '.'
000000000000607a         db  0xff ; '.'
000000000000607b         db  0xff ; '.'
000000000000607c         db  0x9c ; '.'
000000000000607d         db  0xd3 ; '.'
000000000000607e         db  0xff ; '.'
000000000000607f         db  0xff ; '.'
0000000000006080         db  0x9c ; '.'
0000000000006081         db  0xd3 ; '.'
0000000000006082         db  0xff ; '.'
0000000000006083         db  0xff ; '.'
0000000000006084         db  0x9c ; '.'
0000000000006085         db  0xd3 ; '.'
0000000000006086         db  0xff ; '.'
0000000000006087         db  0xff ; '.'
0000000000006088         db  0x9c ; '.'
0000000000006089         db  0xd3 ; '.'
000000000000608a         db  0xff ; '.'
000000000000608b         db  0xff ; '.'
000000000000608c         db  0x9c ; '.'
000000000000608d         db  0xd3 ; '.'
000000000000608e         db  0xff ; '.'
000000000000608f         db  0xff ; '.'
0000000000006090         db  0x9c ; '.'
0000000000006091         db  0xd3 ; '.'
0000000000006092         db  0xff ; '.'
0000000000006093         db  0xff ; '.'
0000000000006094         db  0x9c ; '.'
0000000000006095         db  0xd3 ; '.'
0000000000006096         db  0xff ; '.'
0000000000006097         db  0xff ; '.'
0000000000006098         db  0x57 ; 'W'
0000000000006099         db  0xd1 ; '.'
000000000000609a         db  0xff ; '.'
000000000000609b         db  0xff ; '.'
000000000000609c         db  0xf4 ; '.'
000000000000609d         db  0xd3 ; '.'
000000000000609e         db  0xff ; '.'
000000000000609f         db  0xff ; '.'
00000000000060a0         db  0x57 ; 'W'
00000000000060a1         db  0xd1 ; '.'
00000000000060a2         db  0xff ; '.'
00000000000060a3         db  0xff ; '.'
00000000000060a4         db  0xc4 ; '.'
00000000000060a5         db  0xd3 ; '.'
00000000000060a6         db  0xff ; '.'
00000000000060a7         db  0xff ; '.'
00000000000060a8         db  0x48 ; 'H'                                         ; DATA XREF=sub_32f0+137
00000000000060a9         db  0xd3 ; '.'
00000000000060aa         db  0xff ; '.'
00000000000060ab         db  0xff ; '.'
00000000000060ac         db  0x58 ; 'X'
00000000000060ad         db  0xd2 ; '.'
00000000000060ae         db  0xff ; '.'
00000000000060af         db  0xff ; '.'
00000000000060b0         db  0x58 ; 'X'
00000000000060b1         db  0xd2 ; '.'
00000000000060b2         db  0xff ; '.'
00000000000060b3         db  0xff ; '.'
00000000000060b4         db  0x58 ; 'X'
00000000000060b5         db  0xd2 ; '.'
00000000000060b6         db  0xff ; '.'
00000000000060b7         db  0xff ; '.'
00000000000060b8         db  0x58 ; 'X'
00000000000060b9         db  0xd2 ; '.'
00000000000060ba         db  0xff ; '.'
00000000000060bb         db  0xff ; '.'
00000000000060bc         db  0x58 ; 'X'
00000000000060bd         db  0xd2 ; '.'
00000000000060be         db  0xff ; '.'
00000000000060bf         db  0xff ; '.'
00000000000060c0         db  0x58 ; 'X'
00000000000060c1         db  0xd2 ; '.'
00000000000060c2         db  0xff ; '.'
00000000000060c3         db  0xff ; '.'
00000000000060c4         db  0x38 ; '8'
00000000000060c5         db  0xd3 ; '.'
00000000000060c6         db  0xff ; '.'
00000000000060c7         db  0xff ; '.'
00000000000060c8         db  0x88 ; '.'
00000000000060c9         db  0xd4 ; '.'
00000000000060ca         db  0xff ; '.'
00000000000060cb         db  0xff ; '.'
00000000000060cc         db  0x70 ; 'p'
00000000000060cd         db  0xd4 ; '.'
00000000000060ce         db  0xff ; '.'
00000000000060cf         db  0xff ; '.'
00000000000060d0         db  0x20 ; ' '
00000000000060d1         db  0xd3 ; '.'
00000000000060d2         db  0xff ; '.'
00000000000060d3         db  0xff ; '.'
00000000000060d4         db  0x60 ; '`'
00000000000060d5         db  0xd4 ; '.'
00000000000060d6         db  0xff ; '.'
00000000000060d7         db  0xff ; '.'
00000000000060d8         db  0x08 ; '.'
00000000000060d9         db  0xd3 ; '.'
00000000000060da         db  0xff ; '.'
00000000000060db         db  0xff ; '.'
00000000000060dc         db  0x48 ; 'H'
00000000000060dd         db  0xd4 ; '.'
00000000000060de         db  0xff ; '.'
00000000000060df         db  0xff ; '.'
00000000000060e0         db  0x58 ; 'X'
00000000000060e1         db  0xd2 ; '.'
00000000000060e2         db  0xff ; '.'
00000000000060e3         db  0xff ; '.'
00000000000060e4         db  0x58 ; 'X'
00000000000060e5         db  0xd2 ; '.'
00000000000060e6         db  0xff ; '.'
00000000000060e7         db  0xff ; '.'
00000000000060e8         db  0x58 ; 'X'
00000000000060e9         db  0xd2 ; '.'
00000000000060ea         db  0xff ; '.'
00000000000060eb         db  0xff ; '.'
00000000000060ec         db  0x58 ; 'X'
00000000000060ed         db  0xd2 ; '.'
00000000000060ee         db  0xff ; '.'
00000000000060ef         db  0xff ; '.'
00000000000060f0         db  0x58 ; 'X'
00000000000060f1         db  0xd2 ; '.'
00000000000060f2         db  0xff ; '.'
00000000000060f3         db  0xff ; '.'
00000000000060f4         db  0x58 ; 'X'
00000000000060f5         db  0xd2 ; '.'
00000000000060f6         db  0xff ; '.'
00000000000060f7         db  0xff ; '.'
00000000000060f8         db  0x58 ; 'X'
00000000000060f9         db  0xd2 ; '.'
00000000000060fa         db  0xff ; '.'
00000000000060fb         db  0xff ; '.'
00000000000060fc         db  0x58 ; 'X'
00000000000060fd         db  0xd2 ; '.'
00000000000060fe         db  0xff ; '.'
00000000000060ff         db  0xff ; '.'
0000000000006100         db  0x58 ; 'X'
0000000000006101         db  0xd2 ; '.'
0000000000006102         db  0xff ; '.'
0000000000006103         db  0xff ; '.'
0000000000006104         db  0x58 ; 'X'
0000000000006105         db  0xd2 ; '.'
0000000000006106         db  0xff ; '.'
0000000000006107         db  0xff ; '.'
0000000000006108         db  0x58 ; 'X'
0000000000006109         db  0xd2 ; '.'
000000000000610a         db  0xff ; '.'
000000000000610b         db  0xff ; '.'
000000000000610c         db  0x58 ; 'X'
000000000000610d         db  0xd2 ; '.'
000000000000610e         db  0xff ; '.'
000000000000610f         db  0xff ; '.'
0000000000006110         db  0x58 ; 'X'
0000000000006111         db  0xd2 ; '.'
0000000000006112         db  0xff ; '.'
0000000000006113         db  0xff ; '.'
0000000000006114         db  0x58 ; 'X'
0000000000006115         db  0xd2 ; '.'
0000000000006116         db  0xff ; '.'
0000000000006117         db  0xff ; '.'
0000000000006118         db  0x58 ; 'X'
0000000000006119         db  0xd2 ; '.'
000000000000611a         db  0xff ; '.'
000000000000611b         db  0xff ; '.'
000000000000611c         db  0x58 ; 'X'
000000000000611d         db  0xd2 ; '.'
000000000000611e         db  0xff ; '.'
000000000000611f         db  0xff ; '.'
0000000000006120         db  0x58 ; 'X'
0000000000006121         db  0xd2 ; '.'
0000000000006122         db  0xff ; '.'
0000000000006123         db  0xff ; '.'
0000000000006124         db  0x58 ; 'X'
0000000000006125         db  0xd2 ; '.'
0000000000006126         db  0xff ; '.'
0000000000006127         db  0xff ; '.'
0000000000006128         db  0x30 ; '0'
0000000000006129         db  0xd4 ; '.'
000000000000612a         db  0xff ; '.'
000000000000612b         db  0xff ; '.'
000000000000612c         db  0x18 ; '.'
000000000000612d         db  0xd4 ; '.'
000000000000612e         db  0xff ; '.'
000000000000612f         db  0xff ; '.'
0000000000006130         db  0x18 ; '.'
0000000000006131         db  0xd4 ; '.'
0000000000006132         db  0xff ; '.'
0000000000006133         db  0xff ; '.'
0000000000006134         db  0x00 ; '.'
0000000000006135         db  0xd4 ; '.'
0000000000006136         db  0xff ; '.'
0000000000006137         db  0xff ; '.'
0000000000006138         db  0x18 ; '.'
0000000000006139         db  0xd4 ; '.'
000000000000613a         db  0xff ; '.'
000000000000613b         db  0xff ; '.'
000000000000613c         db  0xe8 ; '.'
000000000000613d         db  0xd3 ; '.'
000000000000613e         db  0xff ; '.'
000000000000613f         db  0xff ; '.'
0000000000006140         db  0x18 ; '.'
0000000000006141         db  0xd4 ; '.'
0000000000006142         db  0xff ; '.'
0000000000006143         db  0xff ; '.'
0000000000006144         db  0x58 ; 'X'
0000000000006145         db  0xd0 ; '.'
0000000000006146         db  0xff ; '.'
0000000000006147         db  0xff ; '.'
0000000000006148         db  0x18 ; '.'
0000000000006149         db  0xd4 ; '.'
000000000000614a         db  0xff ; '.'
000000000000614b         db  0xff ; '.'
000000000000614c         db  0x18 ; '.'
000000000000614d         db  0xd4 ; '.'
000000000000614e         db  0xff ; '.'
000000000000614f         db  0xff ; '.'
0000000000006150         db  0x18 ; '.'
0000000000006151         db  0xd4 ; '.'
0000000000006152         db  0xff ; '.'
0000000000006153         db  0xff ; '.'
0000000000006154         db  0xe8 ; '.'
0000000000006155         db  0xd3 ; '.'
0000000000006156         db  0xff ; '.'
0000000000006157         db  0xff ; '.'
0000000000006158         db  0xe8 ; '.'
0000000000006159         db  0xd3 ; '.'
000000000000615a         db  0xff ; '.'
000000000000615b         db  0xff ; '.'
000000000000615c         db  0xe8 ; '.'
000000000000615d         db  0xd3 ; '.'
000000000000615e         db  0xff ; '.'
000000000000615f         db  0xff ; '.'
0000000000006160         db  0xe8 ; '.'
0000000000006161         db  0xd3 ; '.'
0000000000006162         db  0xff ; '.'
0000000000006163         db  0xff ; '.'
0000000000006164         db  0xe8 ; '.'
0000000000006165         db  0xd3 ; '.'
0000000000006166         db  0xff ; '.'
0000000000006167         db  0xff ; '.'
0000000000006168         db  0xe8 ; '.'
0000000000006169         db  0xd3 ; '.'
000000000000616a         db  0xff ; '.'
000000000000616b         db  0xff ; '.'
000000000000616c         db  0xe8 ; '.'
000000000000616d         db  0xd3 ; '.'
000000000000616e         db  0xff ; '.'
000000000000616f         db  0xff ; '.'
0000000000006170         db  0xe8 ; '.'
0000000000006171         db  0xd3 ; '.'
0000000000006172         db  0xff ; '.'
0000000000006173         db  0xff ; '.'
0000000000006174         db  0xe8 ; '.'
0000000000006175         db  0xd3 ; '.'
0000000000006176         db  0xff ; '.'
0000000000006177         db  0xff ; '.'
0000000000006178         db  0xe8 ; '.'
0000000000006179         db  0xd3 ; '.'
000000000000617a         db  0xff ; '.'
000000000000617b         db  0xff ; '.'
000000000000617c         db  0xe8 ; '.'
000000000000617d         db  0xd3 ; '.'
000000000000617e         db  0xff ; '.'
000000000000617f         db  0xff ; '.'
0000000000006180         db  0xe8 ; '.'
0000000000006181         db  0xd3 ; '.'
0000000000006182         db  0xff ; '.'
0000000000006183         db  0xff ; '.'
0000000000006184         db  0xe8 ; '.'
0000000000006185         db  0xd3 ; '.'
0000000000006186         db  0xff ; '.'
0000000000006187         db  0xff ; '.'
0000000000006188         db  0xe8 ; '.'
0000000000006189         db  0xd3 ; '.'
000000000000618a         db  0xff ; '.'
000000000000618b         db  0xff ; '.'
000000000000618c         db  0xe8 ; '.'
000000000000618d         db  0xd3 ; '.'
000000000000618e         db  0xff ; '.'
000000000000618f         db  0xff ; '.'
0000000000006190         db  0xe8 ; '.'
0000000000006191         db  0xd3 ; '.'
0000000000006192         db  0xff ; '.'
0000000000006193         db  0xff ; '.'
0000000000006194         db  0x18 ; '.'
0000000000006195         db  0xd4 ; '.'
0000000000006196         db  0xff ; '.'
0000000000006197         db  0xff ; '.'
0000000000006198         db  0x18 ; '.'
0000000000006199         db  0xd4 ; '.'
000000000000619a         db  0xff ; '.'
000000000000619b         db  0xff ; '.'
000000000000619c         db  0x18 ; '.'
000000000000619d         db  0xd4 ; '.'
000000000000619e         db  0xff ; '.'
000000000000619f         db  0xff ; '.'
00000000000061a0         db  0x18 ; '.'
00000000000061a1         db  0xd4 ; '.'
00000000000061a2         db  0xff ; '.'
00000000000061a3         db  0xff ; '.'
00000000000061a4         db  0x28 ; '('
00000000000061a5         db  0xd0 ; '.'
00000000000061a6         db  0xff ; '.'
00000000000061a7         db  0xff ; '.'
00000000000061a8         db  0x58 ; 'X'
00000000000061a9         db  0xd2 ; '.'
00000000000061aa         db  0xff ; '.'
00000000000061ab         db  0xff ; '.'
00000000000061ac         db  0xe8 ; '.'
00000000000061ad         db  0xd3 ; '.'
00000000000061ae         db  0xff ; '.'
00000000000061af         db  0xff ; '.'
00000000000061b0         db  0xe8 ; '.'
00000000000061b1         db  0xd3 ; '.'
00000000000061b2         db  0xff ; '.'
00000000000061b3         db  0xff ; '.'
00000000000061b4         db  0xe8 ; '.'
00000000000061b5         db  0xd3 ; '.'
00000000000061b6         db  0xff ; '.'
00000000000061b7         db  0xff ; '.'
00000000000061b8         db  0xe8 ; '.'
00000000000061b9         db  0xd3 ; '.'
00000000000061ba         db  0xff ; '.'
00000000000061bb         db  0xff ; '.'
00000000000061bc         db  0xe8 ; '.'
00000000000061bd         db  0xd3 ; '.'
00000000000061be         db  0xff ; '.'
00000000000061bf         db  0xff ; '.'
00000000000061c0         db  0xe8 ; '.'
00000000000061c1         db  0xd3 ; '.'
00000000000061c2         db  0xff ; '.'
00000000000061c3         db  0xff ; '.'
00000000000061c4         db  0xe8 ; '.'
00000000000061c5         db  0xd3 ; '.'
00000000000061c6         db  0xff ; '.'
00000000000061c7         db  0xff ; '.'
00000000000061c8         db  0xe8 ; '.'
00000000000061c9         db  0xd3 ; '.'
00000000000061ca         db  0xff ; '.'
00000000000061cb         db  0xff ; '.'
00000000000061cc         db  0xe8 ; '.'
00000000000061cd         db  0xd3 ; '.'
00000000000061ce         db  0xff ; '.'
00000000000061cf         db  0xff ; '.'
00000000000061d0         db  0xe8 ; '.'
00000000000061d1         db  0xd3 ; '.'
00000000000061d2         db  0xff ; '.'
00000000000061d3         db  0xff ; '.'
00000000000061d4         db  0xe8 ; '.'
00000000000061d5         db  0xd3 ; '.'
00000000000061d6         db  0xff ; '.'
00000000000061d7         db  0xff ; '.'
00000000000061d8         db  0xe8 ; '.'
00000000000061d9         db  0xd3 ; '.'
00000000000061da         db  0xff ; '.'
00000000000061db         db  0xff ; '.'
00000000000061dc         db  0xe8 ; '.'
00000000000061dd         db  0xd3 ; '.'
00000000000061de         db  0xff ; '.'
00000000000061df         db  0xff ; '.'
00000000000061e0         db  0xe8 ; '.'
00000000000061e1         db  0xd3 ; '.'
00000000000061e2         db  0xff ; '.'
00000000000061e3         db  0xff ; '.'
00000000000061e4         db  0xe8 ; '.'
00000000000061e5         db  0xd3 ; '.'
00000000000061e6         db  0xff ; '.'
00000000000061e7         db  0xff ; '.'
00000000000061e8         db  0xe8 ; '.'
00000000000061e9         db  0xd3 ; '.'
00000000000061ea         db  0xff ; '.'
00000000000061eb         db  0xff ; '.'
00000000000061ec         db  0xe8 ; '.'
00000000000061ed         db  0xd3 ; '.'
00000000000061ee         db  0xff ; '.'
00000000000061ef         db  0xff ; '.'
00000000000061f0         db  0xe8 ; '.'
00000000000061f1         db  0xd3 ; '.'
00000000000061f2         db  0xff ; '.'
00000000000061f3         db  0xff ; '.'
00000000000061f4         db  0xe8 ; '.'
00000000000061f5         db  0xd3 ; '.'
00000000000061f6         db  0xff ; '.'
00000000000061f7         db  0xff ; '.'
00000000000061f8         db  0xe8 ; '.'
00000000000061f9         db  0xd3 ; '.'
00000000000061fa         db  0xff ; '.'
00000000000061fb         db  0xff ; '.'
00000000000061fc         db  0xe8 ; '.'
00000000000061fd         db  0xd3 ; '.'
00000000000061fe         db  0xff ; '.'
00000000000061ff         db  0xff ; '.'
0000000000006200         db  0xe8 ; '.'
0000000000006201         db  0xd3 ; '.'
0000000000006202         db  0xff ; '.'
0000000000006203         db  0xff ; '.'
0000000000006204         db  0xe8 ; '.'
0000000000006205         db  0xd3 ; '.'
0000000000006206         db  0xff ; '.'
0000000000006207         db  0xff ; '.'
0000000000006208         db  0xe8 ; '.'
0000000000006209         db  0xd3 ; '.'
000000000000620a         db  0xff ; '.'
000000000000620b         db  0xff ; '.'
000000000000620c         db  0xe8 ; '.'
000000000000620d         db  0xd3 ; '.'
000000000000620e         db  0xff ; '.'
000000000000620f         db  0xff ; '.'
0000000000006210         db  0xe8 ; '.'
0000000000006211         db  0xd3 ; '.'
0000000000006212         db  0xff ; '.'
0000000000006213         db  0xff ; '.'
0000000000006214         db  0x18 ; '.'
0000000000006215         db  0xd4 ; '.'
0000000000006216         db  0xff ; '.'
0000000000006217         db  0xff ; '.'
0000000000006218         db  0xe8 ; '.'
0000000000006219         db  0xd2 ; '.'
000000000000621a         db  0xff ; '.'
000000000000621b         db  0xff ; '.'
000000000000621c         db  0xe8 ; '.'
000000000000621d         db  0xd3 ; '.'
000000000000621e         db  0xff ; '.'
000000000000621f         db  0xff ; '.'
0000000000006220         db  0x18 ; '.'
0000000000006221         db  0xd4 ; '.'
0000000000006222         db  0xff ; '.'
0000000000006223         db  0xff ; '.'
0000000000006224         db  0xe8 ; '.'
0000000000006225         db  0xd3 ; '.'
0000000000006226         db  0xff ; '.'
0000000000006227         db  0xff ; '.'
0000000000006228         db  0x18 ; '.'
0000000000006229         db  0xd4 ; '.'
000000000000622a         db  0xff ; '.'
000000000000622b         db  0xff ; '.'
000000000000622c         db  0xe8 ; '.'
000000000000622d         db  0xd3 ; '.'
000000000000622e         db  0xff ; '.'
000000000000622f         db  0xff ; '.'
0000000000006230         db  0xe8 ; '.'
0000000000006231         db  0xd3 ; '.'
0000000000006232         db  0xff ; '.'
0000000000006233         db  0xff ; '.'
0000000000006234         db  0xe8 ; '.'
0000000000006235         db  0xd3 ; '.'
0000000000006236         db  0xff ; '.'
0000000000006237         db  0xff ; '.'
0000000000006238         db  0xe8 ; '.'
0000000000006239         db  0xd3 ; '.'
000000000000623a         db  0xff ; '.'
000000000000623b         db  0xff ; '.'
000000000000623c         db  0xe8 ; '.'
000000000000623d         db  0xd3 ; '.'
000000000000623e         db  0xff ; '.'
000000000000623f         db  0xff ; '.'
0000000000006240         db  0xe8 ; '.'
0000000000006241         db  0xd3 ; '.'
0000000000006242         db  0xff ; '.'
0000000000006243         db  0xff ; '.'
0000000000006244         db  0xe8 ; '.'
0000000000006245         db  0xd3 ; '.'
0000000000006246         db  0xff ; '.'
0000000000006247         db  0xff ; '.'
0000000000006248         db  0xe8 ; '.'
0000000000006249         db  0xd3 ; '.'
000000000000624a         db  0xff ; '.'
000000000000624b         db  0xff ; '.'
000000000000624c         db  0xe8 ; '.'
000000000000624d         db  0xd3 ; '.'
000000000000624e         db  0xff ; '.'
000000000000624f         db  0xff ; '.'
0000000000006250         db  0xe8 ; '.'
0000000000006251         db  0xd3 ; '.'
0000000000006252         db  0xff ; '.'
0000000000006253         db  0xff ; '.'
0000000000006254         db  0xe8 ; '.'
0000000000006255         db  0xd3 ; '.'
0000000000006256         db  0xff ; '.'
0000000000006257         db  0xff ; '.'
0000000000006258         db  0xe8 ; '.'
0000000000006259         db  0xd3 ; '.'
000000000000625a         db  0xff ; '.'
000000000000625b         db  0xff ; '.'
000000000000625c         db  0xe8 ; '.'
000000000000625d         db  0xd3 ; '.'
000000000000625e         db  0xff ; '.'
000000000000625f         db  0xff ; '.'
0000000000006260         db  0xe8 ; '.'
0000000000006261         db  0xd3 ; '.'
0000000000006262         db  0xff ; '.'
0000000000006263         db  0xff ; '.'
0000000000006264         db  0xe8 ; '.'
0000000000006265         db  0xd3 ; '.'
0000000000006266         db  0xff ; '.'
0000000000006267         db  0xff ; '.'
0000000000006268         db  0xe8 ; '.'
0000000000006269         db  0xd3 ; '.'
000000000000626a         db  0xff ; '.'
000000000000626b         db  0xff ; '.'
000000000000626c         db  0xe8 ; '.'
000000000000626d         db  0xd3 ; '.'
000000000000626e         db  0xff ; '.'
000000000000626f         db  0xff ; '.'
0000000000006270         db  0xe8 ; '.'
0000000000006271         db  0xd3 ; '.'
0000000000006272         db  0xff ; '.'
0000000000006273         db  0xff ; '.'
0000000000006274         db  0xe8 ; '.'
0000000000006275         db  0xd3 ; '.'
0000000000006276         db  0xff ; '.'
0000000000006277         db  0xff ; '.'
0000000000006278         db  0xe8 ; '.'
0000000000006279         db  0xd3 ; '.'
000000000000627a         db  0xff ; '.'
000000000000627b         db  0xff ; '.'
000000000000627c         db  0xe8 ; '.'
000000000000627d         db  0xd3 ; '.'
000000000000627e         db  0xff ; '.'
000000000000627f         db  0xff ; '.'
0000000000006280         db  0xe8 ; '.'
0000000000006281         db  0xd3 ; '.'
0000000000006282         db  0xff ; '.'
0000000000006283         db  0xff ; '.'
0000000000006284         db  0xe8 ; '.'
0000000000006285         db  0xd3 ; '.'
0000000000006286         db  0xff ; '.'
0000000000006287         db  0xff ; '.'
0000000000006288         db  0xe8 ; '.'
0000000000006289         db  0xd3 ; '.'
000000000000628a         db  0xff ; '.'
000000000000628b         db  0xff ; '.'
000000000000628c         db  0xe8 ; '.'
000000000000628d         db  0xd3 ; '.'
000000000000628e         db  0xff ; '.'
000000000000628f         db  0xff ; '.'
0000000000006290         db  0xe8 ; '.'
0000000000006291         db  0xd3 ; '.'
0000000000006292         db  0xff ; '.'
0000000000006293         db  0xff ; '.'
0000000000006294         db  0x58 ; 'X'
0000000000006295         db  0xcf ; '.'
0000000000006296         db  0xff ; '.'
0000000000006297         db  0xff ; '.'
0000000000006298         db  0x18 ; '.'
0000000000006299         db  0xd4 ; '.'
000000000000629a         db  0xff ; '.'
000000000000629b         db  0xff ; '.'
000000000000629c         db  0x58 ; 'X'
000000000000629d         db  0xcf ; '.'
000000000000629e         db  0xff ; '.'
000000000000629f         db  0xff ; '.'
00000000000062a0         db  0x00 ; '.'
00000000000062a1         db  0xd4 ; '.'
00000000000062a2         db  0xff ; '.'
00000000000062a3         db  0xff ; '.'
00000000000062a4         db  0x00 ; '.'
00000000000062a5         db  0x00 ; '.'
00000000000062a6         db  0x00 ; '.'
00000000000062a7         db  0x00 ; '.'
00000000000062a8         db  0x00 ; '.'
00000000000062a9         db  0x00 ; '.'
00000000000062aa         db  0x00 ; '.'
00000000000062ab         db  0x00 ; '.'
00000000000062ac         db  0x00 ; '.'
00000000000062ad         db  0x00 ; '.'
00000000000062ae         db  0x00 ; '.'
00000000000062af         db  0x00 ; '.'
00000000000062b0         db  0x00 ; '.'
00000000000062b1         db  0x00 ; '.'
00000000000062b2         db  0x00 ; '.'
00000000000062b3         db  0x00 ; '.'
00000000000062b4         db  0x00 ; '.'
00000000000062b5         db  0x00 ; '.'
00000000000062b6         db  0x00 ; '.'
00000000000062b7         db  0x00 ; '.'
00000000000062b8         db  0x00 ; '.'
00000000000062b9         db  0x00 ; '.'
00000000000062ba         db  0x00 ; '.'
00000000000062bb         db  0x00 ; '.'
00000000000062bc         db  0x00 ; '.'
00000000000062bd         db  0x00 ; '.'
00000000000062be         db  0x00 ; '.'
00000000000062bf         db  0x00 ; '.'
                     quoting_style_vals:
00000000000062c0         db  0x00 ; '.'
00000000000062c1         db  0x00 ; '.'
00000000000062c2         db  0x00 ; '.'
00000000000062c3         db  0x00 ; '.'
00000000000062c4         db  0x01 ; '.'
00000000000062c5         db  0x00 ; '.'
00000000000062c6         db  0x00 ; '.'
00000000000062c7         db  0x00 ; '.'
00000000000062c8         db  0x02 ; '.'
00000000000062c9         db  0x00 ; '.'
00000000000062ca         db  0x00 ; '.'
00000000000062cb         db  0x00 ; '.'
00000000000062cc         db  0x03 ; '.'
00000000000062cd         db  0x00 ; '.'
00000000000062ce         db  0x00 ; '.'
00000000000062cf         db  0x00 ; '.'
00000000000062d0         db  0x04 ; '.'
00000000000062d1         db  0x00 ; '.'
00000000000062d2         db  0x00 ; '.'
00000000000062d3         db  0x00 ; '.'
00000000000062d4         db  0x05 ; '.'
00000000000062d5         db  0x00 ; '.'
00000000000062d6         db  0x00 ; '.'
00000000000062d7         db  0x00 ; '.'
00000000000062d8         db  0x06 ; '.'
00000000000062d9         db  0x00 ; '.'
00000000000062da         db  0x00 ; '.'
00000000000062db         db  0x00 ; '.'
00000000000062dc         db  0x07 ; '.'
00000000000062dd         db  0x00 ; '.'
00000000000062de         db  0x00 ; '.'
00000000000062df         db  0x00 ; '.'
00000000000062e0         db  0x08 ; '.'
00000000000062e1         db  0x00 ; '.'
00000000000062e2         db  0x00 ; '.'
00000000000062e3         db  0x00 ; '.'
00000000000062e4         db  0x09 ; '.'
00000000000062e5         db  0x00 ; '.'
00000000000062e6         db  0x00 ; '.'
00000000000062e7         db  0x00 ; '.'
                     aSSSn:
00000000000062e8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
00000000000062f4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
00000000000062fb         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
00000000000062fc         db  0x43 ; 'C'
00000000000062fd         db  0x29 ; ')'
00000000000062fe         db  0x00 ; '.'
                     aWrittenBySn:
00000000000062ff         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000630f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000006326         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000006342         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000006357         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000636d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000006381         align      8
                     aNlicenseGplv3G:
0000000000006388         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000006454         align      8
                     aWrittenBySSSna:
0000000000006458         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_6478:        // aWrittenBySSSns
0000000000006478         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000649c         align      32
                     aWrittenBySSSns_64a0:        // aWrittenBySSSns
00000000000064a0         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_64c8:        // aWrittenBySSSns
00000000000064c8         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
00000000000064f4         align      8
                     aWrittenBySSSns_64f8:        // aWrittenBySSSns
00000000000064f8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000006528         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000655c         align      32
                     aWrittenBySSSns_6560:        // aWrittenBySSSns
0000000000006560         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000659c         align      32
                     aGeneralHelpUsi:
00000000000065a0         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
00000000000065e1         align      8
                     switch_table_65e8:        // switch_table
00000000000065e8         dd         version_etc_arn.loc_4ad6-switch_table_65e8, version_etc_arn.loc_4b68-switch_table_65e8, version_etc_arn.loc_4ba8-switch_table_65e8, version_etc_arn.loc_4bf0-switch_table_65e8 ; switch table used at 0x4a54 containing 10 entries, DATA XREF=version_etc_arn+150
00000000000065f8         dd         version_etc_arn.loc_4c40-switch_table_65e8, version_etc_arn.loc_4c98-switch_table_65e8, version_etc_arn.loc_4cc8-switch_table_65e8, version_etc_arn.loc_4d30-switch_table_65e8
0000000000006608         dd         version_etc_arn.loc_4a60-switch_table_65e8, version_etc_arn.loc_4b10-switch_table_65e8
0000000000006610         align      32
                     version_etc_copyright:
0000000000006620         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000664f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
0000000000006660         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000006661         db  0x00 ; '.'
                     aPosix:
0000000000006662         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000006668         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
000000000000666e         db  0x00 ; '.'
000000000000666f         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x6670; 0x6914[ (676 bytes)
        ; File offset : [26224; 26900[ (676 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006670         db  0x01 ; '.'
0000000000006671         db  0x1b ; '.'
0000000000006672         db  0x03 ; '.'
0000000000006673         db  0x3b ; ';'
0000000000006674         db  0xa4 ; '.'
0000000000006675         db  0x02 ; '.'
0000000000006676         db  0x00 ; '.'
0000000000006677         db  0x00 ; '.'
0000000000006678         db  0x53 ; 'S'
0000000000006679         db  0x00 ; '.'
000000000000667a         db  0x00 ; '.'
000000000000667b         db  0x00 ; '.'
000000000000667c         db  0xf0 ; '.'
000000000000667d         db  0xad ; '.'
000000000000667e         db  0xff ; '.'
000000000000667f         db  0xff ; '.'
0000000000006680         db  0xf0 ; '.'
0000000000006681         db  0x02 ; '.'
0000000000006682         db  0x00 ; '.'
0000000000006683         db  0x00 ; '.'
0000000000006684         db  0x00 ; '.'
0000000000006685         db  0xb1 ; '.'
0000000000006686         db  0xff ; '.'
0000000000006687         db  0xff ; '.'
0000000000006688         db  0x18 ; '.'
0000000000006689         db  0x03 ; '.'
000000000000668a         db  0x00 ; '.'
000000000000668b         db  0x00 ; '.'
000000000000668c         db  0x10 ; '.'
000000000000668d         db  0xb1 ; '.'
000000000000668e         db  0xff ; '.'
000000000000668f         db  0xff ; '.'
0000000000006690         db  0x5c ; '\'
0000000000006691         db  0x03 ; '.'
0000000000006692         db  0x00 ; '.'
0000000000006693         db  0x00 ; '.'
0000000000006694         db  0x70 ; 'p'
0000000000006695         db  0xb6 ; '.'
0000000000006696         db  0xff ; '.'
0000000000006697         db  0xff ; '.'
0000000000006698         db  0xc0 ; '.'
0000000000006699         db  0x02 ; '.'
000000000000669a         db  0x00 ; '.'
000000000000669b         db  0x00 ; '.'
000000000000669c         db  0x80 ; '.'
000000000000669d         db  0xb7 ; '.'
000000000000669e         db  0xff ; '.'
000000000000669f         db  0xff ; '.'
00000000000066a0         db  0x30 ; '0'
00000000000066a1         db  0x03 ; '.'
00000000000066a2         db  0x00 ; '.'
00000000000066a3         db  0x00 ; '.'
00000000000066a4         db  0x40 ; '@'
00000000000066a5         db  0xbb ; '.'
00000000000066a6         db  0xff ; '.'
00000000000066a7         db  0xff ; '.'
00000000000066a8         db  0xb0 ; '.'
00000000000066a9         db  0x03 ; '.'
00000000000066aa         db  0x00 ; '.'
00000000000066ab         db  0x00 ; '.'
00000000000066ac         db  0x80 ; '.'
00000000000066ad         db  0xbb ; '.'
00000000000066ae         db  0xff ; '.'
00000000000066af         db  0xff ; '.'
00000000000066b0         db  0xcc ; '.'
00000000000066b1         db  0x03 ; '.'
00000000000066b2         db  0x00 ; '.'
00000000000066b3         db  0x00 ; '.'
00000000000066b4         db  0xc0 ; '.'
00000000000066b5         db  0xbb ; '.'
00000000000066b6         db  0xff ; '.'
00000000000066b7         db  0xff ; '.'
00000000000066b8         db  0xe8 ; '.'
00000000000066b9         db  0x03 ; '.'
00000000000066ba         db  0x00 ; '.'
00000000000066bb         db  0x00 ; '.'
00000000000066bc         db  0xe0 ; '.'
00000000000066bd         db  0xbc ; '.'
00000000000066be         db  0xff ; '.'
00000000000066bf         db  0xff ; '.'
00000000000066c0         db  0x20 ; ' '
00000000000066c1         db  0x04 ; '.'
00000000000066c2         db  0x00 ; '.'
00000000000066c3         db  0x00 ; '.'
00000000000066c4         db  0x40 ; '@'
00000000000066c5         db  0xc0 ; '.'
00000000000066c6         db  0xff ; '.'
00000000000066c7         db  0xff ; '.'
00000000000066c8         db  0x88 ; '.'
00000000000066c9         db  0x04 ; '.'
00000000000066ca         db  0x00 ; '.'
00000000000066cb         db  0x00 ; '.'
00000000000066cc         db  0x80 ; '.'
00000000000066cd         db  0xc1 ; '.'
00000000000066ce         db  0xff ; '.'
00000000000066cf         db  0xff ; '.'
00000000000066d0         db  0xac ; '.'
00000000000066d1         db  0x04 ; '.'
00000000000066d2         db  0x00 ; '.'
00000000000066d3         db  0x00 ; '.'
00000000000066d4         db  0x30 ; '0'
00000000000066d5         db  0xc2 ; '.'
00000000000066d6         db  0xff ; '.'
00000000000066d7         db  0xff ; '.'
00000000000066d8         db  0xc0 ; '.'
00000000000066d9         db  0x04 ; '.'
00000000000066da         db  0x00 ; '.'
00000000000066db         db  0x00 ; '.'
00000000000066dc         db  0x50 ; 'P'
00000000000066dd         db  0xc2 ; '.'
00000000000066de         db  0xff ; '.'
00000000000066df         db  0xff ; '.'
00000000000066e0         db  0xd4 ; '.'
00000000000066e1         db  0x04 ; '.'
00000000000066e2         db  0x00 ; '.'
00000000000066e3         db  0x00 ; '.'
00000000000066e4         db  0x60 ; '`'
00000000000066e5         db  0xc4 ; '.'
00000000000066e6         db  0xff ; '.'
00000000000066e7         db  0xff ; '.'
00000000000066e8         db  0x18 ; '.'
00000000000066e9         db  0x05 ; '.'
00000000000066ea         db  0x00 ; '.'
00000000000066eb         db  0x00 ; '.'
00000000000066ec         db  0xb0 ; '.'
00000000000066ed         db  0xc4 ; '.'
00000000000066ee         db  0xff ; '.'
00000000000066ef         db  0xff ; '.'
00000000000066f0         db  0x34 ; '4'
00000000000066f1         db  0x05 ; '.'
00000000000066f2         db  0x00 ; '.'
00000000000066f3         db  0x00 ; '.'
00000000000066f4         db  0x00 ; '.'
00000000000066f5         db  0xc5 ; '.'
00000000000066f6         db  0xff ; '.'
00000000000066f7         db  0xff ; '.'
00000000000066f8         db  0x50 ; 'P'
00000000000066f9         db  0x05 ; '.'
00000000000066fa         db  0x00 ; '.'
00000000000066fb         db  0x00 ; '.'
00000000000066fc         db  0x10 ; '.'
00000000000066fd         db  0xc5 ; '.'
00000000000066fe         db  0xff ; '.'
00000000000066ff         db  0xff ; '.'
0000000000006700         db  0x64 ; 'd'
0000000000006701         db  0x05 ; '.'
0000000000006702         db  0x00 ; '.'
0000000000006703         db  0x00 ; '.'
0000000000006704         db  0x20 ; ' '
0000000000006705         db  0xc5 ; '.'
0000000000006706         db  0xff ; '.'
0000000000006707         db  0xff ; '.'
0000000000006708         db  0x78 ; 'x'
0000000000006709         db  0x05 ; '.'
000000000000670a         db  0x00 ; '.'
000000000000670b         db  0x00 ; '.'
000000000000670c         db  0xd0 ; '.'
000000000000670d         db  0xc5 ; '.'
000000000000670e         db  0xff ; '.'
000000000000670f         db  0xff ; '.'
0000000000006710         db  0xa8 ; '.'
0000000000006711         db  0x05 ; '.'
0000000000006712         db  0x00 ; '.'
0000000000006713         db  0x00 ; '.'
0000000000006714         db  0xe0 ; '.'
0000000000006715         db  0xc5 ; '.'
0000000000006716         db  0xff ; '.'
0000000000006717         db  0xff ; '.'
0000000000006718         db  0xbc ; '.'
0000000000006719         db  0x05 ; '.'
000000000000671a         db  0x00 ; '.'
000000000000671b         db  0x00 ; '.'
000000000000671c         db  0x10 ; '.'
000000000000671d         db  0xc6 ; '.'
000000000000671e         db  0xff ; '.'
000000000000671f         db  0xff ; '.'
0000000000006720         db  0xd8 ; '.'
0000000000006721         db  0x05 ; '.'
0000000000006722         db  0x00 ; '.'
0000000000006723         db  0x00 ; '.'
0000000000006724         db  0xb0 ; '.'
0000000000006725         db  0xc6 ; '.'
0000000000006726         db  0xff ; '.'
0000000000006727         db  0xff ; '.'
0000000000006728         db  0xf8 ; '.'
0000000000006729         db  0x05 ; '.'
000000000000672a         db  0x00 ; '.'
000000000000672b         db  0x00 ; '.'
000000000000672c         db  0xa0 ; '.'
000000000000672d         db  0xc7 ; '.'
000000000000672e         db  0xff ; '.'
000000000000672f         db  0xff ; '.'
0000000000006730         db  0x3c ; '<'
0000000000006731         db  0x06 ; '.'
0000000000006732         db  0x00 ; '.'
0000000000006733         db  0x00 ; '.'
0000000000006734         db  0xe0 ; '.'
0000000000006735         db  0xd9 ; '.'
0000000000006736         db  0xff ; '.'
0000000000006737         db  0xff ; '.'
0000000000006738         db  0xb4 ; '.'
0000000000006739         db  0x06 ; '.'
000000000000673a         db  0x00 ; '.'
000000000000673b         db  0x00 ; '.'
000000000000673c         db  0x90 ; '.'
000000000000673d         db  0xdb ; '.'
000000000000673e         db  0xff ; '.'
000000000000673f         db  0xff ; '.'
0000000000006740         db  0x20 ; ' '
0000000000006741         db  0x07 ; '.'
0000000000006742         db  0x00 ; '.'
0000000000006743         db  0x00 ; '.'
0000000000006744         db  0xd0 ; '.'
0000000000006745         db  0xdb ; '.'
0000000000006746         db  0xff ; '.'
0000000000006747         db  0xff ; '.'
0000000000006748         db  0x4c ; 'L'
0000000000006749         db  0x07 ; '.'
000000000000674a         db  0x00 ; '.'
000000000000674b         db  0x00 ; '.'
000000000000674c         db  0xf0 ; '.'
000000000000674d         db  0xdb ; '.'
000000000000674e         db  0xff ; '.'
000000000000674f         db  0xff ; '.'
0000000000006750         db  0x60 ; '`'
0000000000006751         db  0x07 ; '.'
0000000000006752         db  0x00 ; '.'
0000000000006753         db  0x00 ; '.'
0000000000006754         db  0x10 ; '.'
0000000000006755         db  0xdc ; '.'
0000000000006756         db  0xff ; '.'
0000000000006757         db  0xff ; '.'
0000000000006758         db  0x74 ; 't'
0000000000006759         db  0x07 ; '.'
000000000000675a         db  0x00 ; '.'
000000000000675b         db  0x00 ; '.'
000000000000675c         db  0x50 ; 'P'
000000000000675d         db  0xdc ; '.'
000000000000675e         db  0xff ; '.'
000000000000675f         db  0xff ; '.'
0000000000006760         db  0x88 ; '.'
0000000000006761         db  0x07 ; '.'
0000000000006762         db  0x00 ; '.'
0000000000006763         db  0x00 ; '.'
0000000000006764         db  0x70 ; 'p'
0000000000006765         db  0xdc ; '.'
0000000000006766         db  0xff ; '.'
0000000000006767         db  0xff ; '.'
0000000000006768         db  0x9c ; '.'
0000000000006769         db  0x07 ; '.'
000000000000676a         db  0x00 ; '.'
000000000000676b         db  0x00 ; '.'
000000000000676c         db  0xa0 ; '.'
000000000000676d         db  0xdc ; '.'
000000000000676e         db  0xff ; '.'
000000000000676f         db  0xff ; '.'
0000000000006770         db  0xb0 ; '.'
0000000000006771         db  0x07 ; '.'
0000000000006772         db  0x00 ; '.'
0000000000006773         db  0x00 ; '.'
0000000000006774         db  0x20 ; ' '
0000000000006775         db  0xdd ; '.'
0000000000006776         db  0xff ; '.'
0000000000006777         db  0xff ; '.'
0000000000006778         db  0x04 ; '.'
0000000000006779         db  0x08 ; '.'
000000000000677a         db  0x00 ; '.'
000000000000677b         db  0x00 ; '.'
000000000000677c         db  0x10 ; '.'
000000000000677d         db  0xde ; '.'
000000000000677e         db  0xff ; '.'
000000000000677f         db  0xff ; '.'
0000000000006780         db  0x70 ; 'p'
0000000000006781         db  0x08 ; '.'
0000000000006782         db  0x00 ; '.'
0000000000006783         db  0x00 ; '.'
0000000000006784         db  0x20 ; ' '
0000000000006785         db  0xde ; '.'
0000000000006786         db  0xff ; '.'
0000000000006787         db  0xff ; '.'
0000000000006788         db  0x84 ; '.'
0000000000006789         db  0x08 ; '.'
000000000000678a         db  0x00 ; '.'
000000000000678b         db  0x00 ; '.'
000000000000678c         db  0xc0 ; '.'
000000000000678d         db  0xde ; '.'
000000000000678e         db  0xff ; '.'
000000000000678f         db  0xff ; '.'
0000000000006790         db  0xb0 ; '.'
0000000000006791         db  0x08 ; '.'
0000000000006792         db  0x00 ; '.'
0000000000006793         db  0x00 ; '.'
0000000000006794         db  0xe0 ; '.'
0000000000006795         db  0xde ; '.'
0000000000006796         db  0xff ; '.'
0000000000006797         db  0xff ; '.'
0000000000006798         db  0xc4 ; '.'
0000000000006799         db  0x08 ; '.'
000000000000679a         db  0x00 ; '.'
000000000000679b         db  0x00 ; '.'
000000000000679c         db  0xf0 ; '.'
000000000000679d         db  0xde ; '.'
000000000000679e         db  0xff ; '.'
000000000000679f         db  0xff ; '.'
00000000000067a0         db  0xd8 ; '.'
00000000000067a1         db  0x08 ; '.'
00000000000067a2         db  0x00 ; '.'
00000000000067a3         db  0x00 ; '.'
00000000000067a4         db  0x10 ; '.'
00000000000067a5         db  0xdf ; '.'
00000000000067a6         db  0xff ; '.'
00000000000067a7         db  0xff ; '.'
00000000000067a8         db  0xec ; '.'
00000000000067a9         db  0x08 ; '.'
00000000000067aa         db  0x00 ; '.'
00000000000067ab         db  0x00 ; '.'
00000000000067ac         db  0x30 ; '0'
00000000000067ad         db  0xdf ; '.'
00000000000067ae         db  0xff ; '.'
00000000000067af         db  0xff ; '.'
00000000000067b0         db  0x00 ; '.'
00000000000067b1         db  0x09 ; '.'
00000000000067b2         db  0x00 ; '.'
00000000000067b3         db  0x00 ; '.'
00000000000067b4         db  0xc0 ; '.'
00000000000067b5         db  0xdf ; '.'
00000000000067b6         db  0xff ; '.'
00000000000067b7         db  0xff ; '.'
00000000000067b8         db  0x1c ; '.'
00000000000067b9         db  0x09 ; '.'
00000000000067ba         db  0x00 ; '.'
00000000000067bb         db  0x00 ; '.'
00000000000067bc         db  0x50 ; 'P'
00000000000067bd         db  0xe0 ; '.'
00000000000067be         db  0xff ; '.'
00000000000067bf         db  0xff ; '.'
00000000000067c0         db  0x38 ; '8'
00000000000067c1         db  0x09 ; '.'
00000000000067c2         db  0x00 ; '.'
00000000000067c3         db  0x00 ; '.'
00000000000067c4         db  0x60 ; '`'
00000000000067c5         db  0xe0 ; '.'
00000000000067c6         db  0xff ; '.'
00000000000067c7         db  0xff ; '.'
00000000000067c8         db  0x4c ; 'L'
00000000000067c9         db  0x09 ; '.'
00000000000067ca         db  0x00 ; '.'
00000000000067cb         db  0x00 ; '.'
00000000000067cc         db  0x70 ; 'p'
00000000000067cd         db  0xe0 ; '.'
00000000000067ce         db  0xff ; '.'
00000000000067cf         db  0xff ; '.'
00000000000067d0         db  0x60 ; '`'
00000000000067d1         db  0x09 ; '.'
00000000000067d2         db  0x00 ; '.'
00000000000067d3         db  0x00 ; '.'
00000000000067d4         db  0x10 ; '.'
00000000000067d5         db  0xe1 ; '.'
00000000000067d6         db  0xff ; '.'
00000000000067d7         db  0xff ; '.'
00000000000067d8         db  0x7c ; '|'
00000000000067d9         db  0x09 ; '.'
00000000000067da         db  0x00 ; '.'
00000000000067db         db  0x00 ; '.'
00000000000067dc         db  0x20 ; ' '
00000000000067dd         db  0xe1 ; '.'
00000000000067de         db  0xff ; '.'
00000000000067df         db  0xff ; '.'
00000000000067e0         db  0x90 ; '.'
00000000000067e1         db  0x09 ; '.'
00000000000067e2         db  0x00 ; '.'
00000000000067e3         db  0x00 ; '.'
00000000000067e4         db  0x40 ; '@'
00000000000067e5         db  0xe1 ; '.'
00000000000067e6         db  0xff ; '.'
00000000000067e7         db  0xff ; '.'
00000000000067e8         db  0xa4 ; '.'
00000000000067e9         db  0x09 ; '.'
00000000000067ea         db  0x00 ; '.'
00000000000067eb         db  0x00 ; '.'
00000000000067ec         db  0x50 ; 'P'
00000000000067ed         db  0xe1 ; '.'
00000000000067ee         db  0xff ; '.'
00000000000067ef         db  0xff ; '.'
00000000000067f0         db  0xb8 ; '.'
00000000000067f1         db  0x09 ; '.'
00000000000067f2         db  0x00 ; '.'
00000000000067f3         db  0x00 ; '.'
00000000000067f4         db  0xe0 ; '.'
00000000000067f5         db  0xe1 ; '.'
00000000000067f6         db  0xff ; '.'
00000000000067f7         db  0xff ; '.'
00000000000067f8         db  0xd4 ; '.'
00000000000067f9         db  0x09 ; '.'
00000000000067fa         db  0x00 ; '.'
00000000000067fb         db  0x00 ; '.'
00000000000067fc         db  0x80 ; '.'
00000000000067fd         db  0xe2 ; '.'
00000000000067fe         db  0xff ; '.'
00000000000067ff         db  0xff ; '.'
0000000000006800         db  0xf0 ; '.'
0000000000006801         db  0x09 ; '.'
0000000000006802         db  0x00 ; '.'
0000000000006803         db  0x00 ; '.'
0000000000006804         db  0x90 ; '.'
0000000000006805         db  0xe2 ; '.'
0000000000006806         db  0xff ; '.'
0000000000006807         db  0xff ; '.'
0000000000006808         db  0x04 ; '.'
0000000000006809         db  0x0a ; '.'
000000000000680a         db  0x00 ; '.'
000000000000680b         db  0x00 ; '.'
000000000000680c         db  0xb0 ; '.'
000000000000680d         db  0xe2 ; '.'
000000000000680e         db  0xff ; '.'
000000000000680f         db  0xff ; '.'
0000000000006810         db  0x18 ; '.'
0000000000006811         db  0x0a ; '.'
0000000000006812         db  0x00 ; '.'
0000000000006813         db  0x00 ; '.'
0000000000006814         db  0xd0 ; '.'
0000000000006815         db  0xe2 ; '.'
0000000000006816         db  0xff ; '.'
0000000000006817         db  0xff ; '.'
0000000000006818         db  0x2c ; ','
0000000000006819         db  0x0a ; '.'
000000000000681a         db  0x00 ; '.'
000000000000681b         db  0x00 ; '.'
000000000000681c         db  0xe0 ; '.'
000000000000681d         db  0xe2 ; '.'
000000000000681e         db  0xff ; '.'
000000000000681f         db  0xff ; '.'
0000000000006820         db  0x40 ; '@'
0000000000006821         db  0x0a ; '.'
0000000000006822         db  0x00 ; '.'
0000000000006823         db  0x00 ; '.'
0000000000006824         db  0x00 ; '.'
0000000000006825         db  0xe3 ; '.'
0000000000006826         db  0xff ; '.'
0000000000006827         db  0xff ; '.'
0000000000006828         db  0x54 ; 'T'
0000000000006829         db  0x0a ; '.'
000000000000682a         db  0x00 ; '.'
000000000000682b         db  0x00 ; '.'
000000000000682c         db  0x20 ; ' '
000000000000682d         db  0xe3 ; '.'
000000000000682e         db  0xff ; '.'
000000000000682f         db  0xff ; '.'
0000000000006830         db  0x68 ; 'h'
0000000000006831         db  0x0a ; '.'
0000000000006832         db  0x00 ; '.'
0000000000006833         db  0x00 ; '.'
0000000000006834         db  0x40 ; '@'
0000000000006835         db  0xe3 ; '.'
0000000000006836         db  0xff ; '.'
0000000000006837         db  0xff ; '.'
0000000000006838         db  0x80 ; '.'
0000000000006839         db  0x0a ; '.'
000000000000683a         db  0x00 ; '.'
000000000000683b         db  0x00 ; '.'
000000000000683c         db  0x60 ; '`'
000000000000683d         db  0xe7 ; '.'
000000000000683e         db  0xff ; '.'
000000000000683f         db  0xff ; '.'
0000000000006840         db  0x94 ; '.'
0000000000006841         db  0x0b ; '.'
0000000000006842         db  0x00 ; '.'
0000000000006843         db  0x00 ; '.'
0000000000006844         db  0x80 ; '.'
0000000000006845         db  0xe7 ; '.'
0000000000006846         db  0xff ; '.'
0000000000006847         db  0xff ; '.'
0000000000006848         db  0xa8 ; '.'
0000000000006849         db  0x0b ; '.'
000000000000684a         db  0x00 ; '.'
000000000000684b         db  0x00 ; '.'
000000000000684c         db  0x00 ; '.'
000000000000684d         db  0xe8 ; '.'
000000000000684e         db  0xff ; '.'
000000000000684f         db  0xff ; '.'
0000000000006850         db  0xc4 ; '.'
0000000000006851         db  0x0b ; '.'
0000000000006852         db  0x00 ; '.'
0000000000006853         db  0x00 ; '.'
0000000000006854         db  0xe0 ; '.'
0000000000006855         db  0xe8 ; '.'
0000000000006856         db  0xff ; '.'
0000000000006857         db  0xff ; '.'
0000000000006858         db  0xf0 ; '.'
0000000000006859         db  0x0b ; '.'
000000000000685a         db  0x00 ; '.'
000000000000685b         db  0x00 ; '.'
000000000000685c         db  0x60 ; '`'
000000000000685d         db  0xe9 ; '.'
000000000000685e         db  0xff ; '.'
000000000000685f         db  0xff ; '.'
0000000000006860         db  0x10 ; '.'
0000000000006861         db  0x0c ; '.'
0000000000006862         db  0x00 ; '.'
0000000000006863         db  0x00 ; '.'
0000000000006864         db  0x80 ; '.'
0000000000006865         db  0xe9 ; '.'
0000000000006866         db  0xff ; '.'
0000000000006867         db  0xff ; '.'
0000000000006868         db  0x2c ; ','
0000000000006869         db  0x0c ; '.'
000000000000686a         db  0x00 ; '.'
000000000000686b         db  0x00 ; '.'
000000000000686c         db  0xb0 ; '.'
000000000000686d         db  0xe9 ; '.'
000000000000686e         db  0xff ; '.'
000000000000686f         db  0xff ; '.'
0000000000006870         db  0x40 ; '@'
0000000000006871         db  0x0c ; '.'
0000000000006872         db  0x00 ; '.'
0000000000006873         db  0x00 ; '.'
0000000000006874         db  0xc0 ; '.'
0000000000006875         db  0xe9 ; '.'
0000000000006876         db  0xff ; '.'
0000000000006877         db  0xff ; '.'
0000000000006878         db  0x54 ; 'T'
0000000000006879         db  0x0c ; '.'
000000000000687a         db  0x00 ; '.'
000000000000687b         db  0x00 ; '.'
000000000000687c         db  0x00 ; '.'
000000000000687d         db  0xea ; '.'
000000000000687e         db  0xff ; '.'
000000000000687f         db  0xff ; '.'
0000000000006880         db  0x78 ; 'x'
0000000000006881         db  0x0c ; '.'
0000000000006882         db  0x00 ; '.'
0000000000006883         db  0x00 ; '.'
0000000000006884         db  0x30 ; '0'
0000000000006885         db  0xea ; '.'
0000000000006886         db  0xff ; '.'
0000000000006887         db  0xff ; '.'
0000000000006888         db  0x8c ; '.'
0000000000006889         db  0x0c ; '.'
000000000000688a         db  0x00 ; '.'
000000000000688b         db  0x00 ; '.'
000000000000688c         db  0xc0 ; '.'
000000000000688d         db  0xea ; '.'
000000000000688e         db  0xff ; '.'
000000000000688f         db  0xff ; '.'
0000000000006890         db  0xa4 ; '.'
0000000000006891         db  0x0c ; '.'
0000000000006892         db  0x00 ; '.'
0000000000006893         db  0x00 ; '.'
0000000000006894         db  0x10 ; '.'
0000000000006895         db  0xeb ; '.'
0000000000006896         db  0xff ; '.'
0000000000006897         db  0xff ; '.'
0000000000006898         db  0xbc ; '.'
0000000000006899         db  0x0c ; '.'
000000000000689a         db  0x00 ; '.'
000000000000689b         db  0x00 ; '.'
000000000000689c         db  0x30 ; '0'
000000000000689d         db  0xeb ; '.'
000000000000689e         db  0xff ; '.'
000000000000689f         db  0xff ; '.'
00000000000068a0         db  0xd8 ; '.'
00000000000068a1         db  0x0c ; '.'
00000000000068a2         db  0x00 ; '.'
00000000000068a3         db  0x00 ; '.'
00000000000068a4         db  0x60 ; '`'
00000000000068a5         db  0xeb ; '.'
00000000000068a6         db  0xff ; '.'
00000000000068a7         db  0xff ; '.'
00000000000068a8         db  0xf4 ; '.'
00000000000068a9         db  0x0c ; '.'
00000000000068aa         db  0x00 ; '.'
00000000000068ab         db  0x00 ; '.'
00000000000068ac         db  0x90 ; '.'
00000000000068ad         db  0xeb ; '.'
00000000000068ae         db  0xff ; '.'
00000000000068af         db  0xff ; '.'
00000000000068b0         db  0x1c ; '.'
00000000000068b1         db  0x0d ; '.'
00000000000068b2         db  0x00 ; '.'
00000000000068b3         db  0x00 ; '.'
00000000000068b4         db  0xb0 ; '.'
00000000000068b5         db  0xeb ; '.'
00000000000068b6         db  0xff ; '.'
00000000000068b7         db  0xff ; '.'
00000000000068b8         db  0x38 ; '8'
00000000000068b9         db  0x0d ; '.'
00000000000068ba         db  0x00 ; '.'
00000000000068bb         db  0x00 ; '.'
00000000000068bc         db  0xf0 ; '.'
00000000000068bd         db  0xeb ; '.'
00000000000068be         db  0xff ; '.'
00000000000068bf         db  0xff ; '.'
00000000000068c0         db  0x50 ; 'P'
00000000000068c1         db  0x0d ; '.'
00000000000068c2         db  0x00 ; '.'
00000000000068c3         db  0x00 ; '.'
00000000000068c4         db  0x10 ; '.'
00000000000068c5         db  0xec ; '.'
00000000000068c6         db  0xff ; '.'
00000000000068c7         db  0xff ; '.'
00000000000068c8         db  0x70 ; 'p'
00000000000068c9         db  0x0d ; '.'
00000000000068ca         db  0x00 ; '.'
00000000000068cb         db  0x00 ; '.'
00000000000068cc         db  0x90 ; '.'
00000000000068cd         db  0xec ; '.'
00000000000068ce         db  0xff ; '.'
00000000000068cf         db  0xff ; '.'
00000000000068d0         db  0xa8 ; '.'
00000000000068d1         db  0x0d ; '.'
00000000000068d2         db  0x00 ; '.'
00000000000068d3         db  0x00 ; '.'
00000000000068d4         db  0xd0 ; '.'
00000000000068d5         db  0xec ; '.'
00000000000068d6         db  0xff ; '.'
00000000000068d7         db  0xff ; '.'
00000000000068d8         db  0xc8 ; '.'
00000000000068d9         db  0x0d ; '.'
00000000000068da         db  0x00 ; '.'
00000000000068db         db  0x00 ; '.'
00000000000068dc         db  0x30 ; '0'
00000000000068dd         db  0xed ; '.'
00000000000068de         db  0xff ; '.'
00000000000068df         db  0xff ; '.'
00000000000068e0         db  0xf8 ; '.'
00000000000068e1         db  0x0d ; '.'
00000000000068e2         db  0x00 ; '.'
00000000000068e3         db  0x00 ; '.'
00000000000068e4         db  0xc0 ; '.'
00000000000068e5         db  0xed ; '.'
00000000000068e6         db  0xff ; '.'
00000000000068e7         db  0xff ; '.'
00000000000068e8         db  0x38 ; '8'
00000000000068e9         db  0x0e ; '.'
00000000000068ea         db  0x00 ; '.'
00000000000068eb         db  0x00 ; '.'
00000000000068ec         db  0x40 ; '@'
00000000000068ed         db  0xee ; '.'
00000000000068ee         db  0xff ; '.'
00000000000068ef         db  0xff ; '.'
00000000000068f0         db  0x88 ; '.'
00000000000068f1         db  0x0e ; '.'
00000000000068f2         db  0x00 ; '.'
00000000000068f3         db  0x00 ; '.'
00000000000068f4         db  0xa0 ; '.'
00000000000068f5         db  0xee ; '.'
00000000000068f6         db  0xff ; '.'
00000000000068f7         db  0xff ; '.'
00000000000068f8         db  0xa8 ; '.'
00000000000068f9         db  0x0e ; '.'
00000000000068fa         db  0x00 ; '.'
00000000000068fb         db  0x00 ; '.'
00000000000068fc         db  0xe0 ; '.'
00000000000068fd         db  0xee ; '.'
00000000000068fe         db  0xff ; '.'
00000000000068ff         db  0xff ; '.'
0000000000006900         db  0xc8 ; '.'
0000000000006901         db  0x0e ; '.'
0000000000006902         db  0x00 ; '.'
0000000000006903         db  0x00 ; '.'
0000000000006904         db  0x50 ; 'P'
0000000000006905         db  0xef ; '.'
0000000000006906         db  0xff ; '.'
0000000000006907         db  0xff ; '.'
0000000000006908         db  0x10 ; '.'
0000000000006909         db  0x0f ; '.'
000000000000690a         db  0x00 ; '.'
000000000000690b         db  0x00 ; '.'
000000000000690c         db  0x60 ; '`'
000000000000690d         db  0xef ; '.'
000000000000690e         db  0xff ; '.'
000000000000690f         db  0xff ; '.'
0000000000006910         db  0x28 ; '('
0000000000006911         db  0x0f ; '.'
0000000000006912         db  0x00 ; '.'
0000000000006913         db  0x00 ; '.'
0000000000006914         db  0x00 ; '.'
0000000000006915         db  0x00 ; '.'
0000000000006916         db  0x00 ; '.'
0000000000006917         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x6918; 0x75b0[ (3224 bytes)
        ; File offset : [26904; 30128[ (3224 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006918         dd         0x00000014                                  ; Length of the record
000000000000691c         dd         0x00000000                                  ; CIE ID
0000000000006920         db         0x01                                        ; Version
0000000000006921         db         "zR", 0                                     ; Augmentation String
0000000000006924         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000006925         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000006926         db         0x10                                        ; Return address register
0000000000006927         db         0x01                                        ; Augmentation data length
0000000000006928         db         0x1b                                        ; FDE encoding
0000000000006929         db  0x0c ; '.'
000000000000692a         db  0x07 ; '.'
000000000000692b         db  0x08 ; '.'
000000000000692c         db  0x90 ; '.'
000000000000692d         db  0x01 ; '.'
000000000000692e         db  0x07 ; '.'
000000000000692f         db  0x10 ; '.'
0000000000006930         dd         0x00000014                                  ; Length of the record
0000000000006934         dd         0x0000001c                                  ; FDE: parent CIE at 0x6918 (FDE encoding = 0x1B)
0000000000006938         db         0xa8, 0xb3, 2 dup (0xff)                    ; begin 0x1ce0
000000000000693c         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1d0b)
0000000000006940         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006941         align      8
0000000000006948         dd         0x00000014                                  ; Length of the record
000000000000694c         dd         0x00000000                                  ; CIE ID
0000000000006950         db         0x01                                        ; Version
0000000000006951         db         "zR", 0                                     ; Augmentation String
0000000000006954         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000006955         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000006956         db         0x10                                        ; Return address register
0000000000006957         db         0x01                                        ; Augmentation data length
0000000000006958         db         0x1b                                        ; FDE encoding
0000000000006959         db  0x0c ; '.'
000000000000695a         db  0x07 ; '.'
000000000000695b         db  0x08 ; '.'
000000000000695c         db  0x90 ; '.'
000000000000695d         db  0x01 ; '.'
000000000000695e         db  0x00 ; '.'
000000000000695f         db  0x00 ; '.'
0000000000006960         dd         0x00000024                                  ; Length of the record
0000000000006964         dd         0x0000001c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006968         db         0xf8, 0xaa, 2 dup (0xff)                    ; begin 0x1460
000000000000696c         db         0x10, 0x03, 2 dup (0x00)                    ; length 0x310 (end at 0x1770)
0000000000006970         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006971         db  0x0e ; '.'
0000000000006972         db  0x10 ; '.'
0000000000006973         db  0x46 ; 'F'
0000000000006974         db  0x0e ; '.'
0000000000006975         db  0x18 ; '.'
0000000000006976         db  0x4a ; 'J'
0000000000006977         db  0x0f ; '.'
0000000000006978         db  0x0b ; '.'
0000000000006979         db  0x77 ; 'w'
000000000000697a         db  0x08 ; '.'
000000000000697b         db  0x80 ; '.'
000000000000697c         db  0x00 ; '.'
000000000000697d         db  0x3f ; '?'
000000000000697e         db  0x1a ; '.'
000000000000697f         db  0x3b ; ';'
0000000000006980         db  0x2a ; '*'
0000000000006981         db  0x33 ; '3'
0000000000006982         db  0x24 ; '$'
0000000000006983         db  0x22 ; '"'
0000000000006984         db  0x00 ; '.'
0000000000006985         db  0x00 ; '.'
0000000000006986         db  0x00 ; '.'
0000000000006987         db  0x00 ; '.'
0000000000006988         dd         0x00000014                                  ; Length of the record
000000000000698c         dd         0x00000044                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006990         db         0xe0, 0xad, 2 dup (0xff)                    ; begin 0x1770
0000000000006994         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1778)
0000000000006998         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006999         align      32
00000000000069a0         dd         0x00000028                                  ; Length of the record
00000000000069a4         dd         0x0000005c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000069a8         db         0x48, 0xb4, 2 dup (0xff)                    ; begin 0x1df0
00000000000069ac         db         0xba, 0x03, 2 dup (0x00)                    ; length 0x3ba (end at 0x21aa)
00000000000069b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069b1         db  0x42 ; 'B'
00000000000069b2         db  0x0e ; '.'
00000000000069b3         db  0x10 ; '.'
00000000000069b4         db  0x8d ; '.'
00000000000069b5         db  0x02 ; '.'
00000000000069b6         db  0x42 ; 'B'
00000000000069b7         db  0x0e ; '.'
00000000000069b8         db  0x18 ; '.'
00000000000069b9         db  0x8c ; '.'
00000000000069ba         db  0x03 ; '.'
00000000000069bb         db  0x46 ; 'F'
00000000000069bc         db  0x0e ; '.'
00000000000069bd         db  0x20 ; ' '
00000000000069be         db  0x86 ; '.'
00000000000069bf         db  0x04 ; '.'
00000000000069c0         db  0x41 ; 'A'
00000000000069c1         db  0x0e ; '.'
00000000000069c2         db  0x28 ; '('
00000000000069c3         db  0x83 ; '.'
00000000000069c4         db  0x05 ; '.'
00000000000069c5         db  0x49 ; 'I'
00000000000069c6         db  0x0e ; '.'
00000000000069c7         db  0xb0 ; '.'
00000000000069c8         db  0x01 ; '.'
00000000000069c9         db  0x00 ; '.'
00000000000069ca         db  0x00 ; '.'
00000000000069cb         db  0x00 ; '.'
00000000000069cc         dd         0x00000050                                  ; Length of the record
00000000000069d0         dd         0x00000088                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000069d4         db         0xac, 0xad, 2 dup (0xff)                    ; begin 0x1780
00000000000069d8         db         0x55, 0x05, 2 dup (0x00)                    ; length 0x555 (end at 0x1cd5)
00000000000069dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069dd         db  0x42 ; 'B'
00000000000069de         db  0x0e ; '.'
00000000000069df         db  0x10 ; '.'
00000000000069e0         db  0x8f ; '.'
00000000000069e1         db  0x02 ; '.'
00000000000069e2         db  0x42 ; 'B'
00000000000069e3         db  0x0e ; '.'
00000000000069e4         db  0x18 ; '.'
00000000000069e5         db  0x8e ; '.'
00000000000069e6         db  0x03 ; '.'
00000000000069e7         db  0x48 ; 'H'
00000000000069e8         db  0x0e ; '.'
00000000000069e9         db  0x20 ; ' '
00000000000069ea         db  0x8d ; '.'
00000000000069eb         db  0x04 ; '.'
00000000000069ec         db  0x42 ; 'B'
00000000000069ed         db  0x0e ; '.'
00000000000069ee         db  0x28 ; '('
00000000000069ef         db  0x8c ; '.'
00000000000069f0         db  0x05 ; '.'
00000000000069f1         db  0x48 ; 'H'
00000000000069f2         db  0x0e ; '.'
00000000000069f3         db  0x30 ; '0'
00000000000069f4         db  0x86 ; '.'
00000000000069f5         db  0x06 ; '.'
00000000000069f6         db  0x41 ; 'A'
00000000000069f7         db  0x0e ; '.'
00000000000069f8         db  0x38 ; '8'
00000000000069f9         db  0x83 ; '.'
00000000000069fa         db  0x07 ; '.'
00000000000069fb         db  0x4c ; 'L'
00000000000069fc         db  0x0e ; '.'
00000000000069fd         db  0x80 ; '.'
00000000000069fe         db  0x01 ; '.'
00000000000069ff         db  0x03 ; '.'
0000000000006a00         db  0x33 ; '3'
0000000000006a01         db  0x04 ; '.'
0000000000006a02         db  0x0a ; '.'
0000000000006a03         db  0x0e ; '.'
0000000000006a04         db  0x38 ; '8'
0000000000006a05         db  0x41 ; 'A'
0000000000006a06         db  0x0e ; '.'
0000000000006a07         db  0x30 ; '0'
0000000000006a08         db  0x41 ; 'A'
0000000000006a09         db  0x0e ; '.'
0000000000006a0a         db  0x28 ; '('
0000000000006a0b         db  0x42 ; 'B'
0000000000006a0c         db  0x0e ; '.'
0000000000006a0d         db  0x20 ; ' '
0000000000006a0e         db  0x42 ; 'B'
0000000000006a0f         db  0x0e ; '.'
0000000000006a10         db  0x18 ; '.'
0000000000006a11         db  0x42 ; 'B'
0000000000006a12         db  0x0e ; '.'
0000000000006a13         db  0x10 ; '.'
0000000000006a14         db  0x42 ; 'B'
0000000000006a15         db  0x0e ; '.'
0000000000006a16         db  0x08 ; '.'
0000000000006a17         db  0x41 ; 'A'
0000000000006a18         db  0x0b ; '.'
0000000000006a19         db  0x00 ; '.'
0000000000006a1a         db  0x00 ; '.'
0000000000006a1b         db  0x00 ; '.'
0000000000006a1c         db  0x00 ; '.'
0000000000006a1d         db  0x00 ; '.'
0000000000006a1e         db  0x00 ; '.'
0000000000006a1f         db  0x00 ; '.'
0000000000006a20         dd         0x00000018                                  ; Length of the record
0000000000006a24         dd         0x000000dc                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006a28         db         0x88, 0xb7, 2 dup (0xff)                    ; begin 0x21b0
0000000000006a2c         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x21ef)
0000000000006a30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a31         db  0x49 ; 'I'
0000000000006a32         db  0x0e ; '.'
0000000000006a33         db  0x10 ; '.'
0000000000006a34         db  0x83 ; '.'
0000000000006a35         db  0x02 ; '.'
0000000000006a36         db  0x75 ; 'u'
0000000000006a37         db  0x0e ; '.'
0000000000006a38         db  0x08 ; '.'
0000000000006a39         db  0x00 ; '.'
0000000000006a3a         db  0x00 ; '.'
0000000000006a3b         db  0x00 ; '.'
0000000000006a3c         dd         0x00000018                                  ; Length of the record
0000000000006a40         dd         0x000000f8                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006a44         db         0xac, 0xb7, 2 dup (0xff)                    ; begin 0x21f0
0000000000006a48         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x222f)
0000000000006a4c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a4d         db  0x49 ; 'I'
0000000000006a4e         db  0x0e ; '.'
0000000000006a4f         db  0x10 ; '.'
0000000000006a50         db  0x83 ; '.'
0000000000006a51         db  0x02 ; '.'
0000000000006a52         db  0x75 ; 'u'
0000000000006a53         db  0x0e ; '.'
0000000000006a54         db  0x08 ; '.'
0000000000006a55         db  0x00 ; '.'
0000000000006a56         db  0x00 ; '.'
0000000000006a57         db  0x00 ; '.'
0000000000006a58         dd         0x00000034                                  ; Length of the record
0000000000006a5c         dd         0x00000114                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006a60         db         0xd0, 0xb7, 2 dup (0xff)                    ; begin 0x2230
0000000000006a64         db         0x14, 0x01, 2 dup (0x00)                    ; length 0x114 (end at 0x2344)
0000000000006a68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a69         db  0x41 ; 'A'
0000000000006a6a         db  0x0e ; '.'
0000000000006a6b         db  0x10 ; '.'
0000000000006a6c         db  0x86 ; '.'
0000000000006a6d         db  0x02 ; '.'
0000000000006a6e         db  0x41 ; 'A'
0000000000006a6f         db  0x0e ; '.'
0000000000006a70         db  0x18 ; '.'
0000000000006a71         db  0x83 ; '.'
0000000000006a72         db  0x03 ; '.'
0000000000006a73         db  0x47 ; 'G'
0000000000006a74         db  0x0e ; '.'
0000000000006a75         db  0x20 ; ' '
0000000000006a76         db  0x02 ; '.'
0000000000006a77         db  0x48 ; 'H'
0000000000006a78         db  0x0a ; '.'
0000000000006a79         db  0x0e ; '.'
0000000000006a7a         db  0x18 ; '.'
0000000000006a7b         db  0x41 ; 'A'
0000000000006a7c         db  0x0e ; '.'
0000000000006a7d         db  0x10 ; '.'
0000000000006a7e         db  0x41 ; 'A'
0000000000006a7f         db  0x0e ; '.'
0000000000006a80         db  0x08 ; '.'
0000000000006a81         db  0x45 ; 'E'
0000000000006a82         db  0x0b ; '.'
0000000000006a83         db  0x6b ; 'k'
0000000000006a84         db  0x0a ; '.'
0000000000006a85         db  0x0e ; '.'
0000000000006a86         db  0x18 ; '.'
0000000000006a87         db  0x41 ; 'A'
0000000000006a88         db  0x0e ; '.'
0000000000006a89         db  0x10 ; '.'
0000000000006a8a         db  0x41 ; 'A'
0000000000006a8b         db  0x0e ; '.'
0000000000006a8c         db  0x08 ; '.'
0000000000006a8d         db  0x4b ; 'K'
0000000000006a8e         db  0x0b ; '.'
0000000000006a8f         db  0x00 ; '.'
0000000000006a90         dd         0x00000064                                  ; Length of the record
0000000000006a94         dd         0x0000014c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006a98         db         2 dup (0xb8), 2 dup (0xff)                  ; begin 0x2350
0000000000006a9c         db         0x59, 0x03, 2 dup (0x00)                    ; length 0x359 (end at 0x26a9)
0000000000006aa0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006aa1         db  0x42 ; 'B'
0000000000006aa2         db  0x0e ; '.'
0000000000006aa3         db  0x10 ; '.'
0000000000006aa4         db  0x8f ; '.'
0000000000006aa5         db  0x02 ; '.'
0000000000006aa6         db  0x42 ; 'B'
0000000000006aa7         db  0x0e ; '.'
0000000000006aa8         db  0x18 ; '.'
0000000000006aa9         db  0x8e ; '.'
0000000000006aaa         db  0x03 ; '.'
0000000000006aab         db  0x42 ; 'B'
0000000000006aac         db  0x0e ; '.'
0000000000006aad         db  0x20 ; ' '
0000000000006aae         db  0x8d ; '.'
0000000000006aaf         db  0x04 ; '.'
0000000000006ab0         db  0x42 ; 'B'
0000000000006ab1         db  0x0e ; '.'
0000000000006ab2         db  0x28 ; '('
0000000000006ab3         db  0x8c ; '.'
0000000000006ab4         db  0x05 ; '.'
0000000000006ab5         db  0x41 ; 'A'
0000000000006ab6         db  0x0e ; '.'
0000000000006ab7         db  0x30 ; '0'
0000000000006ab8         db  0x86 ; '.'
0000000000006ab9         db  0x06 ; '.'
0000000000006aba         db  0x41 ; 'A'
0000000000006abb         db  0x0e ; '.'
0000000000006abc         db  0x38 ; '8'
0000000000006abd         db  0x83 ; '.'
0000000000006abe         db  0x07 ; '.'
0000000000006abf         db  0x44 ; 'D'
0000000000006ac0         db  0x0e ; '.'
0000000000006ac1         db  0x50 ; 'P'
0000000000006ac2         db  0x03 ; '.'
0000000000006ac3         db  0x17 ; '.'
0000000000006ac4         db  0x01 ; '.'
0000000000006ac5         db  0x0a ; '.'
0000000000006ac6         db  0x0e ; '.'
0000000000006ac7         db  0x38 ; '8'
0000000000006ac8         db  0x41 ; 'A'
0000000000006ac9         db  0x0e ; '.'
0000000000006aca         db  0x30 ; '0'
0000000000006acb         db  0x41 ; 'A'
0000000000006acc         db  0x0e ; '.'
0000000000006acd         db  0x28 ; '('
0000000000006ace         db  0x42 ; 'B'
0000000000006acf         db  0x0e ; '.'
0000000000006ad0         db  0x20 ; ' '
0000000000006ad1         db  0x42 ; 'B'
0000000000006ad2         db  0x0e ; '.'
0000000000006ad3         db  0x18 ; '.'
0000000000006ad4         db  0x42 ; 'B'
0000000000006ad5         db  0x0e ; '.'
0000000000006ad6         db  0x10 ; '.'
0000000000006ad7         db  0x42 ; 'B'
0000000000006ad8         db  0x0e ; '.'
0000000000006ad9         db  0x08 ; '.'
0000000000006ada         db  0x41 ; 'A'
0000000000006adb         db  0x0b ; '.'
0000000000006adc         db  0x03 ; '.'
0000000000006add         db  0xc6 ; '.'
0000000000006ade         db  0x01 ; '.'
0000000000006adf         db  0x0a ; '.'
0000000000006ae0         db  0x0e ; '.'
0000000000006ae1         db  0x38 ; '8'
0000000000006ae2         db  0x41 ; 'A'
0000000000006ae3         db  0x0e ; '.'
0000000000006ae4         db  0x30 ; '0'
0000000000006ae5         db  0x41 ; 'A'
0000000000006ae6         db  0x0e ; '.'
0000000000006ae7         db  0x28 ; '('
0000000000006ae8         db  0x42 ; 'B'
0000000000006ae9         db  0x0e ; '.'
0000000000006aea         db  0x20 ; ' '
0000000000006aeb         db  0x42 ; 'B'
0000000000006aec         db  0x0e ; '.'
0000000000006aed         db  0x18 ; '.'
0000000000006aee         db  0x42 ; 'B'
0000000000006aef         db  0x0e ; '.'
0000000000006af0         db  0x10 ; '.'
0000000000006af1         db  0x42 ; 'B'
0000000000006af2         db  0x0e ; '.'
0000000000006af3         db  0x08 ; '.'
0000000000006af4         db  0x45 ; 'E'
0000000000006af5         db  0x0b ; '.'
0000000000006af6         db  0x00 ; '.'
0000000000006af7         db  0x00 ; '.'
0000000000006af8         dd         0x00000020                                  ; Length of the record
0000000000006afc         dd         0x000001b4                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006b00         db         0xb0, 0xbb, 2 dup (0xff)                    ; begin 0x26b0
0000000000006b04         db         0x3c, 0x01, 2 dup (0x00)                    ; length 0x13c (end at 0x27ec)
0000000000006b08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b09         db  0x44 ; 'D'
0000000000006b0a         db  0x0e ; '.'
0000000000006b0b         db  0x10 ; '.'
0000000000006b0c         db  0x02 ; '.'
0000000000006b0d         db  0x7d ; '}'
0000000000006b0e         db  0x0a ; '.'
0000000000006b0f         db  0x0e ; '.'
0000000000006b10         db  0x08 ; '.'
0000000000006b11         db  0x41 ; 'A'
0000000000006b12         db  0x0b ; '.'
0000000000006b13         db  0x7f ; '.'
0000000000006b14         db  0x0a ; '.'
0000000000006b15         db  0x0e ; '.'
0000000000006b16         db  0x08 ; '.'
0000000000006b17         db  0x41 ; 'A'
0000000000006b18         db  0x0b ; '.'
0000000000006b19         db  0x00 ; '.'
0000000000006b1a         db  0x00 ; '.'
0000000000006b1b         db  0x00 ; '.'
0000000000006b1c         dd         0x00000010                                  ; Length of the record
0000000000006b20         dd         0x000001d8                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006b24         db         0xcc, 0xbc, 2 dup (0xff)                    ; begin 0x27f0
0000000000006b28         db         0xa8, 3 dup (0x00)                          ; length 0xa8 (end at 0x2898)
0000000000006b2c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b2d         align      16
0000000000006b30         dd         0x00000010                                  ; Length of the record
0000000000006b34         dd         0x000001ec                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006b38         db         0x68, 0xbd, 2 dup (0xff)                    ; begin 0x28a0
0000000000006b3c         db         0x1d, 3 dup (0x00)                          ; length 0x1d (end at 0x28bd)
0000000000006b40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b41         align      4
0000000000006b44         dd         0x00000040                                  ; Length of the record
0000000000006b48         dd         0x00000200                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006b4c         db         0x74, 0xbd, 2 dup (0xff)                    ; begin 0x28c0
0000000000006b50         db         0x01, 0x02, 2 dup (0x00)                    ; length 0x201 (end at 0x2ac1)
0000000000006b54         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b55         db  0x42 ; 'B'
0000000000006b56         db  0x0e ; '.'
0000000000006b57         db  0x10 ; '.'
0000000000006b58         db  0x8c ; '.'
0000000000006b59         db  0x02 ; '.'
0000000000006b5a         db  0x41 ; 'A'
0000000000006b5b         db  0x0e ; '.'
0000000000006b5c         db  0x18 ; '.'
0000000000006b5d         db  0x86 ; '.'
0000000000006b5e         db  0x03 ; '.'
0000000000006b5f         db  0x41 ; 'A'
0000000000006b60         db  0x0e ; '.'
0000000000006b61         db  0x20 ; ' '
0000000000006b62         db  0x83 ; '.'
0000000000006b63         db  0x04 ; '.'
0000000000006b64         db  0x44 ; 'D'
0000000000006b65         db  0x0e ; '.'
0000000000006b66         db  0x30 ; '0'
0000000000006b67         db  0x03 ; '.'
0000000000006b68         db  0x2a ; '*'
0000000000006b69         db  0x01 ; '.'
0000000000006b6a         db  0x0a ; '.'
0000000000006b6b         db  0x0e ; '.'
0000000000006b6c         db  0x20 ; ' '
0000000000006b6d         db  0x41 ; 'A'
0000000000006b6e         db  0x0e ; '.'
0000000000006b6f         db  0x18 ; '.'
0000000000006b70         db  0x41 ; 'A'
0000000000006b71         db  0x0e ; '.'
0000000000006b72         db  0x10 ; '.'
0000000000006b73         db  0x42 ; 'B'
0000000000006b74         db  0x0e ; '.'
0000000000006b75         db  0x08 ; '.'
0000000000006b76         db  0x4a ; 'J'
0000000000006b77         db  0x0b ; '.'
0000000000006b78         db  0x44 ; 'D'
0000000000006b79         db  0x0a ; '.'
0000000000006b7a         db  0x0e ; '.'
0000000000006b7b         db  0x20 ; ' '
0000000000006b7c         db  0x43 ; 'C'
0000000000006b7d         db  0x0e ; '.'
0000000000006b7e         db  0x18 ; '.'
0000000000006b7f         db  0x41 ; 'A'
0000000000006b80         db  0x0e ; '.'
0000000000006b81         db  0x10 ; '.'
0000000000006b82         db  0x42 ; 'B'
0000000000006b83         db  0x0e ; '.'
0000000000006b84         db  0x08 ; '.'
0000000000006b85         db  0x46 ; 'F'
0000000000006b86         db  0x0b ; '.'
0000000000006b87         db  0x00 ; '.'
0000000000006b88         dd         0x00000018                                  ; Length of the record
0000000000006b8c         dd         0x00000244                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006b90         db         0x40, 0xbf, 2 dup (0xff)                    ; begin 0x2ad0
0000000000006b94         db         0x43, 3 dup (0x00)                          ; length 0x43 (end at 0x2b13)
0000000000006b98         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b99         db  0x54 ; 'T'
0000000000006b9a         db  0x0e ; '.'
0000000000006b9b         db  0x10 ; '.'
0000000000006b9c         db  0x54 ; 'T'
0000000000006b9d         db  0x0a ; '.'
0000000000006b9e         db  0x0e ; '.'
0000000000006b9f         db  0x08 ; '.'
0000000000006ba0         db  0x41 ; 'A'
0000000000006ba1         db  0x0b ; '.'
0000000000006ba2         db  0x00 ; '.'
0000000000006ba3         db  0x00 ; '.'
0000000000006ba4         dd         0x00000018                                  ; Length of the record
0000000000006ba8         dd         0x00000260                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006bac         db         0x74, 0xbf, 2 dup (0xff)                    ; begin 0x2b20
0000000000006bb0         db         0x4c, 3 dup (0x00)                          ; length 0x4c (end at 0x2b6c)
0000000000006bb4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bb5         db  0x41 ; 'A'
0000000000006bb6         db  0x0e ; '.'
0000000000006bb7         db  0x10 ; '.'
0000000000006bb8         db  0x83 ; '.'
0000000000006bb9         db  0x02 ; '.'
0000000000006bba         db  0x02 ; '.'
0000000000006bbb         db  0x46 ; 'F'
0000000000006bbc         db  0x0e ; '.'
0000000000006bbd         db  0x08 ; '.'
0000000000006bbe         db  0x00 ; '.'
0000000000006bbf         db  0x00 ; '.'
0000000000006bc0         dd         0x00000010                                  ; Length of the record
0000000000006bc4         dd         0x0000027c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006bc8         db         0xa8, 0xbf, 2 dup (0xff)                    ; begin 0x2b70
0000000000006bcc         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2b78)
0000000000006bd0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bd1         align      4
0000000000006bd4         dd         0x00000010                                  ; Length of the record
0000000000006bd8         dd         0x00000290                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006bdc         db         0xa4, 0xbf, 2 dup (0xff)                    ; begin 0x2b80
0000000000006be0         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2b88)
0000000000006be4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006be5         align      8
0000000000006be8         dd         0x0000002c                                  ; Length of the record
0000000000006bec         dd         0x000002a4                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006bf0         db         0xa0, 0xbf, 2 dup (0xff)                    ; begin 0x2b90
0000000000006bf4         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2c34)
0000000000006bf8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bf9         db  0x41 ; 'A'
0000000000006bfa         db  0x0e ; '.'
0000000000006bfb         db  0x10 ; '.'
0000000000006bfc         db  0x86 ; '.'
0000000000006bfd         db  0x02 ; '.'
0000000000006bfe         db  0x41 ; 'A'
0000000000006bff         db  0x0e ; '.'
0000000000006c00         db  0x18 ; '.'
0000000000006c01         db  0x83 ; '.'
0000000000006c02         db  0x03 ; '.'
0000000000006c03         db  0x44 ; 'D'
0000000000006c04         db  0x0e ; '.'
0000000000006c05         db  0x20 ; ' '
0000000000006c06         db  0x7a ; 'z'
0000000000006c07         db  0x0a ; '.'
0000000000006c08         db  0x0e ; '.'
0000000000006c09         db  0x18 ; '.'
0000000000006c0a         db  0x41 ; 'A'
0000000000006c0b         db  0x0e ; '.'
0000000000006c0c         db  0x10 ; '.'
0000000000006c0d         db  0x41 ; 'A'
0000000000006c0e         db  0x0e ; '.'
0000000000006c0f         db  0x08 ; '.'
0000000000006c10         db  0x41 ; 'A'
0000000000006c11         db  0x0b ; '.'
0000000000006c12         db  0x00 ; '.'
0000000000006c13         db  0x00 ; '.'
0000000000006c14         db  0x00 ; '.'
0000000000006c15         db  0x00 ; '.'
0000000000006c16         db  0x00 ; '.'
0000000000006c17         db  0x00 ; '.'
0000000000006c18         dd         0x00000010                                  ; Length of the record
0000000000006c1c         dd         0x000002d4                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006c20         db         0x20, 0xc0, 2 dup (0xff)                    ; begin 0x2c40
0000000000006c24         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x2c45)
0000000000006c28         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c29         align      4
0000000000006c2c         dd         0x00000018                                  ; Length of the record
0000000000006c30         dd         0x000002e8                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006c34         db         0x1c, 0xc0, 2 dup (0xff)                    ; begin 0x2c50
0000000000006c38         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x2c72)
0000000000006c3c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c3d         db  0x46 ; 'F'
0000000000006c3e         db  0x0e ; '.'
0000000000006c3f         db  0x10 ; '.'
0000000000006c40         db  0x83 ; '.'
0000000000006c41         db  0x02 ; '.'
0000000000006c42         db  0x4e ; 'N'
0000000000006c43         db  0xc3 ; '.'
0000000000006c44         db  0x0e ; '.'
0000000000006c45         db  0x08 ; '.'
0000000000006c46         db  0x00 ; '.'
0000000000006c47         db  0x00 ; '.'
0000000000006c48         dd         0x0000001c                                  ; Length of the record
0000000000006c4c         dd         0x00000304                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006c50         db         0x30, 0xc0, 2 dup (0xff)                    ; begin 0x2c80
0000000000006c54         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x2d1f)
0000000000006c58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c59         db  0x44 ; 'D'
0000000000006c5a         db  0x0e ; '.'
0000000000006c5b         db  0x10 ; '.'
0000000000006c5c         db  0x83 ; '.'
0000000000006c5d         db  0x02 ; '.'
0000000000006c5e         db  0x02 ; '.'
0000000000006c5f         db  0x78 ; 'x'
0000000000006c60         db  0x0a ; '.'
0000000000006c61         db  0x0e ; '.'
0000000000006c62         db  0x08 ; '.'
0000000000006c63         db  0x41 ; 'A'
0000000000006c64         db  0x0b ; '.'
0000000000006c65         db  0x00 ; '.'
0000000000006c66         db  0x00 ; '.'
0000000000006c67         db  0x00 ; '.'
0000000000006c68         dd         0x00000040                                  ; Length of the record
0000000000006c6c         dd         0x00000324                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006c70         db         0xb0, 0xc0, 2 dup (0xff)                    ; begin 0x2d20
0000000000006c74         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2e07)
0000000000006c78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c79         db  0x41 ; 'A'
0000000000006c7a         db  0x0e ; '.'
0000000000006c7b         db  0x10 ; '.'
0000000000006c7c         db  0x86 ; '.'
0000000000006c7d         db  0x02 ; '.'
0000000000006c7e         db  0x41 ; 'A'
0000000000006c7f         db  0x0e ; '.'
0000000000006c80         db  0x18 ; '.'
0000000000006c81         db  0x83 ; '.'
0000000000006c82         db  0x03 ; '.'
0000000000006c83         db  0x49 ; 'I'
0000000000006c84         db  0x0e ; '.'
0000000000006c85         db  0x20 ; ' '
0000000000006c86         db  0x6e ; 'n'
0000000000006c87         db  0x0a ; '.'
0000000000006c88         db  0x0e ; '.'
0000000000006c89         db  0x18 ; '.'
0000000000006c8a         db  0x41 ; 'A'
0000000000006c8b         db  0x0e ; '.'
0000000000006c8c         db  0x10 ; '.'
0000000000006c8d         db  0x41 ; 'A'
0000000000006c8e         db  0x0e ; '.'
0000000000006c8f         db  0x08 ; '.'
0000000000006c90         db  0x45 ; 'E'
0000000000006c91         db  0x0b ; '.'
0000000000006c92         db  0x02 ; '.'
0000000000006c93         db  0x4a ; 'J'
0000000000006c94         db  0x0a ; '.'
0000000000006c95         db  0x0e ; '.'
0000000000006c96         db  0x18 ; '.'
0000000000006c97         db  0x41 ; 'A'
0000000000006c98         db  0x0e ; '.'
0000000000006c99         db  0x10 ; '.'
0000000000006c9a         db  0x41 ; 'A'
0000000000006c9b         db  0x0e ; '.'
0000000000006c9c         db  0x08 ; '.'
0000000000006c9d         db  0x44 ; 'D'
0000000000006c9e         db  0x0b ; '.'
0000000000006c9f         db  0x02 ; '.'
0000000000006ca0         db  0x54 ; 'T'
0000000000006ca1         db  0x0e ; '.'
0000000000006ca2         db  0x18 ; '.'
0000000000006ca3         db  0x41 ; 'A'
0000000000006ca4         db  0x0e ; '.'
0000000000006ca5         db  0x10 ; '.'
0000000000006ca6         db  0x41 ; 'A'
0000000000006ca7         db  0x0e ; '.'
0000000000006ca8         db  0x08 ; '.'
0000000000006ca9         db  0x00 ; '.'
0000000000006caa         db  0x00 ; '.'
0000000000006cab         db  0x00 ; '.'
0000000000006cac         dd         0x00000074                                  ; Length of the record
0000000000006cb0         dd         0x00000368                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006cb4         db         0x5c, 0xc1, 2 dup (0xff)                    ; begin 0x2e10
0000000000006cb8         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x4044)
0000000000006cbc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006cbd         db  0x42 ; 'B'
0000000000006cbe         db  0x0e ; '.'
0000000000006cbf         db  0x10 ; '.'
0000000000006cc0         db  0x8f ; '.'
0000000000006cc1         db  0x02 ; '.'
0000000000006cc2         db  0x42 ; 'B'
0000000000006cc3         db  0x0e ; '.'
0000000000006cc4         db  0x18 ; '.'
0000000000006cc5         db  0x8e ; '.'
0000000000006cc6         db  0x03 ; '.'
0000000000006cc7         db  0x45 ; 'E'
0000000000006cc8         db  0x0e ; '.'
0000000000006cc9         db  0x20 ; ' '
0000000000006cca         db  0x8d ; '.'
0000000000006ccb         db  0x04 ; '.'
0000000000006ccc         db  0x42 ; 'B'
0000000000006ccd         db  0x0e ; '.'
0000000000006cce         db  0x28 ; '('
0000000000006ccf         db  0x8c ; '.'
0000000000006cd0         db  0x05 ; '.'
0000000000006cd1         db  0x44 ; 'D'
0000000000006cd2         db  0x0e ; '.'
0000000000006cd3         db  0x30 ; '0'
0000000000006cd4         db  0x86 ; '.'
0000000000006cd5         db  0x06 ; '.'
0000000000006cd6         db  0x41 ; 'A'
0000000000006cd7         db  0x0e ; '.'
0000000000006cd8         db  0x38 ; '8'
0000000000006cd9         db  0x83 ; '.'
0000000000006cda         db  0x07 ; '.'
0000000000006cdb         db  0x53 ; 'S'
0000000000006cdc         db  0x0e ; '.'
0000000000006cdd         db  0xf0 ; '.'
0000000000006cde         db  0x01 ; '.'
0000000000006cdf         db  0x03 ; '.'
0000000000006ce0         db  0x81 ; '.'
0000000000006ce1         db  0x0b ; '.'
0000000000006ce2         db  0x0e ; '.'
0000000000006ce3         db  0xf8 ; '.'
0000000000006ce4         db  0x01 ; '.'
0000000000006ce5         db  0x4a ; 'J'
0000000000006ce6         db  0x0e ; '.'
0000000000006ce7         db  0x80 ; '.'
0000000000006ce8         db  0x02 ; '.'
0000000000006ce9         db  0x44 ; 'D'
0000000000006cea         db  0x0e ; '.'
0000000000006ceb         db  0x88 ; '.'
0000000000006cec         db  0x02 ; '.'
0000000000006ced         db  0x45 ; 'E'
0000000000006cee         db  0x0e ; '.'
0000000000006cef         db  0x90 ; '.'
0000000000006cf0         db  0x02 ; '.'
0000000000006cf1         db  0x5f ; '_'
0000000000006cf2         db  0x0e ; '.'
0000000000006cf3         db  0xf0 ; '.'
0000000000006cf4         db  0x01 ; '.'
0000000000006cf5         db  0x64 ; 'd'
0000000000006cf6         db  0x0a ; '.'
0000000000006cf7         db  0x0e ; '.'
0000000000006cf8         db  0x38 ; '8'
0000000000006cf9         db  0x41 ; 'A'
0000000000006cfa         db  0x0e ; '.'
0000000000006cfb         db  0x30 ; '0'
0000000000006cfc         db  0x41 ; 'A'
0000000000006cfd         db  0x0e ; '.'
0000000000006cfe         db  0x28 ; '('
0000000000006cff         db  0x42 ; 'B'
0000000000006d00         db  0x0e ; '.'
0000000000006d01         db  0x20 ; ' '
0000000000006d02         db  0x42 ; 'B'
0000000000006d03         db  0x0e ; '.'
0000000000006d04         db  0x18 ; '.'
0000000000006d05         db  0x42 ; 'B'
0000000000006d06         db  0x0e ; '.'
0000000000006d07         db  0x10 ; '.'
0000000000006d08         db  0x42 ; 'B'
0000000000006d09         db  0x0e ; '.'
0000000000006d0a         db  0x08 ; '.'
0000000000006d0b         db  0x44 ; 'D'
0000000000006d0c         db  0x0b ; '.'
0000000000006d0d         db  0x03 ; '.'
0000000000006d0e         db  0x99 ; '.'
0000000000006d0f         db  0x05 ; '.'
0000000000006d10         db  0x0e ; '.'
0000000000006d11         db  0xf8 ; '.'
0000000000006d12         db  0x01 ; '.'
0000000000006d13         db  0x4d ; 'M'
0000000000006d14         db  0x0e ; '.'
0000000000006d15         db  0x80 ; '.'
0000000000006d16         db  0x02 ; '.'
0000000000006d17         db  0x44 ; 'D'
0000000000006d18         db  0x0e ; '.'
0000000000006d19         db  0x88 ; '.'
0000000000006d1a         db  0x02 ; '.'
0000000000006d1b         db  0x47 ; 'G'
0000000000006d1c         db  0x0e ; '.'
0000000000006d1d         db  0x90 ; '.'
0000000000006d1e         db  0x02 ; '.'
0000000000006d1f         db  0x5b ; '['
0000000000006d20         db  0x0e ; '.'
0000000000006d21         db  0xf0 ; '.'
0000000000006d22         db  0x01 ; '.'
0000000000006d23         db  0x00 ; '.'
0000000000006d24         dd         0x00000068                                  ; Length of the record
0000000000006d28         dd         0x000003e0                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006d2c         db         0x24, 0xd3, 2 dup (0xff)                    ; begin 0x4050
0000000000006d30         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x41fb)
0000000000006d34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d35         db  0x42 ; 'B'
0000000000006d36         db  0x0e ; '.'
0000000000006d37         db  0x10 ; '.'
0000000000006d38         db  0x8f ; '.'
0000000000006d39         db  0x02 ; '.'
0000000000006d3a         db  0x42 ; 'B'
0000000000006d3b         db  0x0e ; '.'
0000000000006d3c         db  0x18 ; '.'
0000000000006d3d         db  0x8e ; '.'
0000000000006d3e         db  0x03 ; '.'
0000000000006d3f         db  0x45 ; 'E'
0000000000006d40         db  0x0e ; '.'
0000000000006d41         db  0x20 ; ' '
0000000000006d42         db  0x8d ; '.'
0000000000006d43         db  0x04 ; '.'
0000000000006d44         db  0x42 ; 'B'
0000000000006d45         db  0x0e ; '.'
0000000000006d46         db  0x28 ; '('
0000000000006d47         db  0x8c ; '.'
0000000000006d48         db  0x05 ; '.'
0000000000006d49         db  0x44 ; 'D'
0000000000006d4a         db  0x0e ; '.'
0000000000006d4b         db  0x30 ; '0'
0000000000006d4c         db  0x86 ; '.'
0000000000006d4d         db  0x06 ; '.'
0000000000006d4e         db  0x41 ; 'A'
0000000000006d4f         db  0x0e ; '.'
0000000000006d50         db  0x38 ; '8'
0000000000006d51         db  0x83 ; '.'
0000000000006d52         db  0x07 ; '.'
0000000000006d53         db  0x47 ; 'G'
0000000000006d54         db  0x0e ; '.'
0000000000006d55         db  0x60 ; '`'
0000000000006d56         db  0x02 ; '.'
0000000000006d57         db  0x99 ; '.'
0000000000006d58         db  0x0e ; '.'
0000000000006d59         db  0x68 ; 'h'
0000000000006d5a         db  0x5f ; '_'
0000000000006d5b         db  0x0e ; '.'
0000000000006d5c         db  0x70 ; 'p'
0000000000006d5d         db  0x46 ; 'F'
0000000000006d5e         db  0x0e ; '.'
0000000000006d5f         db  0x78 ; 'x'
0000000000006d60         db  0x42 ; 'B'
0000000000006d61         db  0x0e ; '.'
0000000000006d62         db  0x80 ; '.'
0000000000006d63         db  0x01 ; '.'
0000000000006d64         db  0x59 ; 'Y'
0000000000006d65         db  0x0e ; '.'
0000000000006d66         db  0x60 ; '`'
0000000000006d67         db  0x02 ; '.'
0000000000006d68         db  0x40 ; '@'
0000000000006d69         db  0x0e ; '.'
0000000000006d6a         db  0x68 ; 'h'
0000000000006d6b         db  0x4b ; 'K'
0000000000006d6c         db  0x0e ; '.'
0000000000006d6d         db  0x70 ; 'p'
0000000000006d6e         db  0x43 ; 'C'
0000000000006d6f         db  0x0e ; '.'
0000000000006d70         db  0x78 ; 'x'
0000000000006d71         db  0x45 ; 'E'
0000000000006d72         db  0x0e ; '.'
0000000000006d73         db  0x80 ; '.'
0000000000006d74         db  0x01 ; '.'
0000000000006d75         db  0x5e ; '^'
0000000000006d76         db  0x0e ; '.'
0000000000006d77         db  0x60 ; '`'
0000000000006d78         db  0x4c ; 'L'
0000000000006d79         db  0x0a ; '.'
0000000000006d7a         db  0x0e ; '.'
0000000000006d7b         db  0x38 ; '8'
0000000000006d7c         db  0x44 ; 'D'
0000000000006d7d         db  0x0e ; '.'
0000000000006d7e         db  0x30 ; '0'
0000000000006d7f         db  0x41 ; 'A'
0000000000006d80         db  0x0e ; '.'
0000000000006d81         db  0x28 ; '('
0000000000006d82         db  0x42 ; 'B'
0000000000006d83         db  0x0e ; '.'
0000000000006d84         db  0x20 ; ' '
0000000000006d85         db  0x42 ; 'B'
0000000000006d86         db  0x0e ; '.'
0000000000006d87         db  0x18 ; '.'
0000000000006d88         db  0x42 ; 'B'
0000000000006d89         db  0x0e ; '.'
0000000000006d8a         db  0x10 ; '.'
0000000000006d8b         db  0x42 ; 'B'
0000000000006d8c         db  0x0e ; '.'
0000000000006d8d         db  0x08 ; '.'
0000000000006d8e         db  0x46 ; 'F'
0000000000006d8f         db  0x0b ; '.'
0000000000006d90         dd         0x00000028                                  ; Length of the record
0000000000006d94         dd         0x0000044c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006d98         db         0x68, 0xd4, 2 dup (0xff)                    ; begin 0x4200
0000000000006d9c         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4236)
0000000000006da0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006da1         db  0x42 ; 'B'
0000000000006da2         db  0x0e ; '.'
0000000000006da3         db  0x10 ; '.'
0000000000006da4         db  0x8c ; '.'
0000000000006da5         db  0x02 ; '.'
0000000000006da6         db  0x41 ; 'A'
0000000000006da7         db  0x0e ; '.'
0000000000006da8         db  0x18 ; '.'
0000000000006da9         db  0x86 ; '.'
0000000000006daa         db  0x03 ; '.'
0000000000006dab         db  0x41 ; 'A'
0000000000006dac         db  0x0e ; '.'
0000000000006dad         db  0x20 ; ' '
0000000000006dae         db  0x83 ; '.'
0000000000006daf         db  0x04 ; '.'
0000000000006db0         db  0x6e ; 'n'
0000000000006db1         db  0x0e ; '.'
0000000000006db2         db  0x18 ; '.'
0000000000006db3         db  0x41 ; 'A'
0000000000006db4         db  0x0e ; '.'
0000000000006db5         db  0x10 ; '.'
0000000000006db6         db  0x42 ; 'B'
0000000000006db7         db  0x0e ; '.'
0000000000006db8         db  0x08 ; '.'
0000000000006db9         db  0x00 ; '.'
0000000000006dba         db  0x00 ; '.'
0000000000006dbb         db  0x00 ; '.'
0000000000006dbc         dd         0x00000010                                  ; Length of the record
0000000000006dc0         dd         0x00000478                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006dc4         db         0x7c, 0xd4, 2 dup (0xff)                    ; begin 0x4240
0000000000006dc8         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4251)
0000000000006dcc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006dcd         align      16
0000000000006dd0         dd         0x00000010                                  ; Length of the record
0000000000006dd4         dd         0x0000048c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006dd8         db         0x88, 0xd4, 2 dup (0xff)                    ; begin 0x4260
0000000000006ddc         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4271)
0000000000006de0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006de1         align      4
0000000000006de4         dd         0x00000010                                  ; Length of the record
0000000000006de8         dd         0x000004a0                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006dec         db         0x94, 0xd4, 2 dup (0xff)                    ; begin 0x4280
0000000000006df0         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x42b5)
0000000000006df4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006df5         align      8
0000000000006df8         dd         0x00000010                                  ; Length of the record
0000000000006dfc         dd         0x000004b4                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006e00         db         0xc0, 0xd4, 2 dup (0xff)                    ; begin 0x42c0
0000000000006e04         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x42d5)
0000000000006e08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e09         align      4
0000000000006e0c         dd         0x00000010                                  ; Length of the record
0000000000006e10         dd         0x000004c8                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006e14         db         0xcc, 0xd4, 2 dup (0xff)                    ; begin 0x42e0
0000000000006e18         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4310)
0000000000006e1c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e1d         db  0x6b ; 'k'
0000000000006e1e         db  0x0e ; '.'
0000000000006e1f         db  0x10 ; '.'
0000000000006e20         dd         0x00000050                                  ; Length of the record
0000000000006e24         dd         0x000004dc                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006e28         db         0xe8, 0xd4, 2 dup (0xff)                    ; begin 0x4310
0000000000006e2c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x4384)
0000000000006e30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e31         db  0x42 ; 'B'
0000000000006e32         db  0x0e ; '.'
0000000000006e33         db  0x10 ; '.'
0000000000006e34         db  0x8f ; '.'
0000000000006e35         db  0x02 ; '.'
0000000000006e36         db  0x42 ; 'B'
0000000000006e37         db  0x0e ; '.'
0000000000006e38         db  0x18 ; '.'
0000000000006e39         db  0x8e ; '.'
0000000000006e3a         db  0x03 ; '.'
0000000000006e3b         db  0x49 ; 'I'
0000000000006e3c         db  0x0e ; '.'
0000000000006e3d         db  0x20 ; ' '
0000000000006e3e         db  0x8d ; '.'
0000000000006e3f         db  0x04 ; '.'
0000000000006e40         db  0x42 ; 'B'
0000000000006e41         db  0x0e ; '.'
0000000000006e42         db  0x28 ; '('
0000000000006e43         db  0x8c ; '.'
0000000000006e44         db  0x05 ; '.'
0000000000006e45         db  0x44 ; 'D'
0000000000006e46         db  0x0e ; '.'
0000000000006e47         db  0x30 ; '0'
0000000000006e48         db  0x86 ; '.'
0000000000006e49         db  0x06 ; '.'
0000000000006e4a         db  0x41 ; 'A'
0000000000006e4b         db  0x0e ; '.'
0000000000006e4c         db  0x38 ; '8'
0000000000006e4d         db  0x83 ; '.'
0000000000006e4e         db  0x07 ; '.'
0000000000006e4f         db  0x4d ; 'M'
0000000000006e50         db  0x0e ; '.'
0000000000006e51         db  0x50 ; 'P'
0000000000006e52         db  0x5f ; '_'
0000000000006e53         db  0x0e ; '.'
0000000000006e54         db  0x58 ; 'X'
0000000000006e55         db  0x47 ; 'G'
0000000000006e56         db  0x0e ; '.'
0000000000006e57         db  0x60 ; '`'
0000000000006e58         db  0x46 ; 'F'
0000000000006e59         db  0x0e ; '.'
0000000000006e5a         db  0x68 ; 'h'
0000000000006e5b         db  0x44 ; 'D'
0000000000006e5c         db  0x0e ; '.'
0000000000006e5d         db  0x70 ; 'p'
0000000000006e5e         db  0x58 ; 'X'
0000000000006e5f         db  0x0e ; '.'
0000000000006e60         db  0x38 ; '8'
0000000000006e61         db  0x41 ; 'A'
0000000000006e62         db  0x0e ; '.'
0000000000006e63         db  0x30 ; '0'
0000000000006e64         db  0x41 ; 'A'
0000000000006e65         db  0x0e ; '.'
0000000000006e66         db  0x28 ; '('
0000000000006e67         db  0x42 ; 'B'
0000000000006e68         db  0x0e ; '.'
0000000000006e69         db  0x20 ; ' '
0000000000006e6a         db  0x42 ; 'B'
0000000000006e6b         db  0x0e ; '.'
0000000000006e6c         db  0x18 ; '.'
0000000000006e6d         db  0x42 ; 'B'
0000000000006e6e         db  0x0e ; '.'
0000000000006e6f         db  0x10 ; '.'
0000000000006e70         db  0x42 ; 'B'
0000000000006e71         db  0x0e ; '.'
0000000000006e72         db  0x08 ; '.'
0000000000006e73         db  0x00 ; '.'
0000000000006e74         dd         0x00000068                                  ; Length of the record
0000000000006e78         dd         0x00000530                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006e7c         db         0x14, 0xd5, 2 dup (0xff)                    ; begin 0x4390
0000000000006e80         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x4473)
0000000000006e84         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e85         db  0x42 ; 'B'
0000000000006e86         db  0x0e ; '.'
0000000000006e87         db  0x10 ; '.'
0000000000006e88         db  0x8f ; '.'
0000000000006e89         db  0x02 ; '.'
0000000000006e8a         db  0x42 ; 'B'
0000000000006e8b         db  0x0e ; '.'
0000000000006e8c         db  0x18 ; '.'
0000000000006e8d         db  0x8e ; '.'
0000000000006e8e         db  0x03 ; '.'
0000000000006e8f         db  0x49 ; 'I'
0000000000006e90         db  0x0e ; '.'
0000000000006e91         db  0x20 ; ' '
0000000000006e92         db  0x8d ; '.'
0000000000006e93         db  0x04 ; '.'
0000000000006e94         db  0x42 ; 'B'
0000000000006e95         db  0x0e ; '.'
0000000000006e96         db  0x28 ; '('
0000000000006e97         db  0x8c ; '.'
0000000000006e98         db  0x05 ; '.'
0000000000006e99         db  0x44 ; 'D'
0000000000006e9a         db  0x0e ; '.'
0000000000006e9b         db  0x30 ; '0'
0000000000006e9c         db  0x86 ; '.'
0000000000006e9d         db  0x06 ; '.'
0000000000006e9e         db  0x41 ; 'A'
0000000000006e9f         db  0x0e ; '.'
0000000000006ea0         db  0x38 ; '8'
0000000000006ea1         db  0x83 ; '.'
0000000000006ea2         db  0x07 ; '.'
0000000000006ea3         db  0x4d ; 'M'
0000000000006ea4         db  0x0e ; '.'
0000000000006ea5         db  0x70 ; 'p'
0000000000006ea6         db  0x65 ; 'e'
0000000000006ea7         db  0x0e ; '.'
0000000000006ea8         db  0x78 ; 'x'
0000000000006ea9         db  0x4d ; 'M'
0000000000006eaa         db  0x0e ; '.'
0000000000006eab         db  0x80 ; '.'
0000000000006eac         db  0x01 ; '.'
0000000000006ead         db  0x46 ; 'F'
0000000000006eae         db  0x0e ; '.'
0000000000006eaf         db  0x88 ; '.'
0000000000006eb0         db  0x01 ; '.'
0000000000006eb1         db  0x42 ; 'B'
0000000000006eb2         db  0x0e ; '.'
0000000000006eb3         db  0x90 ; '.'
0000000000006eb4         db  0x01 ; '.'
0000000000006eb5         db  0x5e ; '^'
0000000000006eb6         db  0x0e ; '.'
0000000000006eb7         db  0x70 ; 'p'
0000000000006eb8         db  0x56 ; 'V'
0000000000006eb9         db  0x0e ; '.'
0000000000006eba         db  0x78 ; 'x'
0000000000006ebb         db  0x43 ; 'C'
0000000000006ebc         db  0x0e ; '.'
0000000000006ebd         db  0x80 ; '.'
0000000000006ebe         db  0x01 ; '.'
0000000000006ebf         db  0x43 ; 'C'
0000000000006ec0         db  0x0e ; '.'
0000000000006ec1         db  0x88 ; '.'
0000000000006ec2         db  0x01 ; '.'
0000000000006ec3         db  0x56 ; 'V'
0000000000006ec4         db  0x0e ; '.'
0000000000006ec5         db  0x90 ; '.'
0000000000006ec6         db  0x01 ; '.'
0000000000006ec7         db  0x52 ; 'R'
0000000000006ec8         db  0x0e ; '.'
0000000000006ec9         db  0x70 ; 'p'
0000000000006eca         db  0x5b ; '['
0000000000006ecb         db  0x0e ; '.'
0000000000006ecc         db  0x38 ; '8'
0000000000006ecd         db  0x41 ; 'A'
0000000000006ece         db  0x0e ; '.'
0000000000006ecf         db  0x30 ; '0'
0000000000006ed0         db  0x41 ; 'A'
0000000000006ed1         db  0x0e ; '.'
0000000000006ed2         db  0x28 ; '('
0000000000006ed3         db  0x42 ; 'B'
0000000000006ed4         db  0x0e ; '.'
0000000000006ed5         db  0x20 ; ' '
0000000000006ed6         db  0x42 ; 'B'
0000000000006ed7         db  0x0e ; '.'
0000000000006ed8         db  0x18 ; '.'
0000000000006ed9         db  0x42 ; 'B'
0000000000006eda         db  0x0e ; '.'
0000000000006edb         db  0x10 ; '.'
0000000000006edc         db  0x42 ; 'B'
0000000000006edd         db  0x0e ; '.'
0000000000006ede         db  0x08 ; '.'
0000000000006edf         db  0x00 ; '.'
0000000000006ee0         dd         0x00000010                                  ; Length of the record
0000000000006ee4         dd         0x0000059c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006ee8         db         0x98, 0xd5, 2 dup (0xff)                    ; begin 0x4480
0000000000006eec         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x448a)
0000000000006ef0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ef1         align      4
0000000000006ef4         dd         0x00000028                                  ; Length of the record
0000000000006ef8         dd         0x000005b0                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006efc         db         0x94, 0xd5, 2 dup (0xff)                    ; begin 0x4490
0000000000006f00         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x4523)
0000000000006f04         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f05         db  0x48 ; 'H'
0000000000006f06         db  0x0e ; '.'
0000000000006f07         db  0x10 ; '.'
0000000000006f08         db  0x8c ; '.'
0000000000006f09         db  0x02 ; '.'
0000000000006f0a         db  0x48 ; 'H'
0000000000006f0b         db  0x0e ; '.'
0000000000006f0c         db  0x18 ; '.'
0000000000006f0d         db  0x86 ; '.'
0000000000006f0e         db  0x03 ; '.'
0000000000006f0f         db  0x41 ; 'A'
0000000000006f10         db  0x0e ; '.'
0000000000006f11         db  0x20 ; ' '
0000000000006f12         db  0x83 ; '.'
0000000000006f13         db  0x04 ; '.'
0000000000006f14         db  0x02 ; '.'
0000000000006f15         db  0x74 ; 't'
0000000000006f16         db  0x0e ; '.'
0000000000006f17         db  0x18 ; '.'
0000000000006f18         db  0x4b ; 'K'
0000000000006f19         db  0x0e ; '.'
0000000000006f1a         db  0x10 ; '.'
0000000000006f1b         db  0x42 ; 'B'
0000000000006f1c         db  0x0e ; '.'
0000000000006f1d         db  0x08 ; '.'
0000000000006f1e         db  0x00 ; '.'
0000000000006f1f         db  0x00 ; '.'
0000000000006f20         dd         0x00000010                                  ; Length of the record
0000000000006f24         dd         0x000005dc                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006f28         db         0x08, 0xd6, 2 dup (0xff)                    ; begin 0x4530
0000000000006f2c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4543)
0000000000006f30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f31         align      4
0000000000006f34         dd         0x00000010                                  ; Length of the record
0000000000006f38         dd         0x000005f0                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006f3c         db         0x14, 0xd6, 2 dup (0xff)                    ; begin 0x4550
0000000000006f40         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x455c)
0000000000006f44         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f45         align      8
0000000000006f48         dd         0x00000010                                  ; Length of the record
0000000000006f4c         dd         0x00000604                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006f50         db         0x10, 0xd6, 2 dup (0xff)                    ; begin 0x4560
0000000000006f54         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4578)
0000000000006f58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f59         align      4
0000000000006f5c         dd         0x00000010                                  ; Length of the record
0000000000006f60         dd         0x00000618                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006f64         db         0x1c, 0xd6, 2 dup (0xff)                    ; begin 0x4580
0000000000006f68         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4594)
0000000000006f6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f6d         align      16
0000000000006f70         dd         0x00000018                                  ; Length of the record
0000000000006f74         dd         0x0000062c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006f78         db         0x28, 0xd6, 2 dup (0xff)                    ; begin 0x45a0
0000000000006f7c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x462e)
0000000000006f80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f81         db  0x44 ; 'D'
0000000000006f82         db  0x0e ; '.'
0000000000006f83         db  0x50 ; 'P'
0000000000006f84         db  0x02 ; '.'
0000000000006f85         db  0x7f ; '.'
0000000000006f86         db  0x0a ; '.'
0000000000006f87         db  0x0e ; '.'
0000000000006f88         db  0x08 ; '.'
0000000000006f89         db  0x41 ; 'A'
0000000000006f8a         db  0x0b ; '.'
0000000000006f8b         db  0x00 ; '.'
0000000000006f8c         dd         0x00000018                                  ; Length of the record
0000000000006f90         dd         0x00000648                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006f94         db         0x9c, 0xd6, 2 dup (0xff)                    ; begin 0x4630
0000000000006f98         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x46ba)
0000000000006f9c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f9d         db  0x44 ; 'D'
0000000000006f9e         db  0x0e ; '.'
0000000000006f9f         db  0x50 ; 'P'
0000000000006fa0         db  0x02 ; '.'
0000000000006fa1         db  0x7b ; '{'
0000000000006fa2         db  0x0a ; '.'
0000000000006fa3         db  0x0e ; '.'
0000000000006fa4         db  0x08 ; '.'
0000000000006fa5         db  0x41 ; 'A'
0000000000006fa6         db  0x0b ; '.'
0000000000006fa7         db  0x00 ; '.'
0000000000006fa8         dd         0x00000010                                  ; Length of the record
0000000000006fac         dd         0x00000664                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006fb0         db         0x10, 0xd7, 2 dup (0xff)                    ; begin 0x46c0
0000000000006fb4         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x46cc)
0000000000006fb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fb9         align      4
0000000000006fbc         dd         0x00000010                                  ; Length of the record
0000000000006fc0         dd         0x00000678                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006fc4         db         0x0c, 0xd7, 2 dup (0xff)                    ; begin 0x46d0
0000000000006fc8         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x46df)
0000000000006fcc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fcd         align      16
0000000000006fd0         dd         0x00000018                                  ; Length of the record
0000000000006fd4         dd         0x0000068c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006fd8         db         0x08, 0xd7, 2 dup (0xff)                    ; begin 0x46e0
0000000000006fdc         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x4778)
0000000000006fe0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fe1         db  0x44 ; 'D'
0000000000006fe2         db  0x0e ; '.'
0000000000006fe3         db  0x50 ; 'P'
0000000000006fe4         db  0x02 ; '.'
0000000000006fe5         db  0x8e ; '.'
0000000000006fe6         db  0x0a ; '.'
0000000000006fe7         db  0x0e ; '.'
0000000000006fe8         db  0x08 ; '.'
0000000000006fe9         db  0x41 ; 'A'
0000000000006fea         db  0x0b ; '.'
0000000000006feb         db  0x00 ; '.'
0000000000006fec         dd         0x00000010                                  ; Length of the record
0000000000006ff0         dd         0x000006a8                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000006ff4         db         0x8c, 0xd7, 2 dup (0xff)                    ; begin 0x4780
0000000000006ff8         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x4790)
0000000000006ffc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ffd         align      4096
0000000000007000         dd         0x00000010                                  ; Length of the record
0000000000007004         dd         0x000006bc                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007008         db         0x88, 0xd7, 2 dup (0xff)                    ; begin 0x4790
000000000000700c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x47a1)
0000000000007010         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007011         align      4
0000000000007014         dd         0x00000010                                  ; Length of the record
0000000000007018         dd         0x000006d0                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
000000000000701c         db         0x94, 0xd7, 2 dup (0xff)                    ; begin 0x47b0
0000000000007020         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x47ba)
0000000000007024         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007025         align      8
0000000000007028         dd         0x00000018                                  ; Length of the record
000000000000702c         dd         0x000006e4                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007030         db         0x90, 0xd7, 2 dup (0xff)                    ; begin 0x47c0
0000000000007034         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x484e)
0000000000007038         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007039         db  0x44 ; 'D'
000000000000703a         db  0x0e ; '.'
000000000000703b         db  0x50 ; 'P'
000000000000703c         db  0x02 ; '.'
000000000000703d         db  0x7f ; '.'
000000000000703e         db  0x0a ; '.'
000000000000703f         db  0x0e ; '.'
0000000000007040         db  0x08 ; '.'
0000000000007041         db  0x41 ; 'A'
0000000000007042         db  0x0b ; '.'
0000000000007043         db  0x00 ; '.'
0000000000007044         dd         0x00000018                                  ; Length of the record
0000000000007048         dd         0x00000700                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
000000000000704c         db         0x04, 0xd8, 2 dup (0xff)                    ; begin 0x4850
0000000000007050         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x48e1)
0000000000007054         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007055         db  0x44 ; 'D'
0000000000007056         db  0x0e ; '.'
0000000000007057         db  0x50 ; 'P'
0000000000007058         db  0x02 ; '.'
0000000000007059         db  0x82 ; '.'
000000000000705a         db  0x0a ; '.'
000000000000705b         db  0x0e ; '.'
000000000000705c         db  0x08 ; '.'
000000000000705d         db  0x41 ; 'A'
000000000000705e         db  0x0b ; '.'
000000000000705f         db  0x00 ; '.'
0000000000007060         dd         0x00000010                                  ; Length of the record
0000000000007064         dd         0x0000071c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007068         db         0x88, 0xd8, 2 dup (0xff)                    ; begin 0x48f0
000000000000706c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x48fc)
0000000000007070         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007071         align      4
0000000000007074         dd         0x00000010                                  ; Length of the record
0000000000007078         dd         0x00000730                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
000000000000707c         db         0x84, 0xd8, 2 dup (0xff)                    ; begin 0x4900
0000000000007080         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4917)
0000000000007084         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007085         align      8
0000000000007088         dd         0x00000010                                  ; Length of the record
000000000000708c         dd         0x00000744                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007090         db         0x90, 0xd8, 2 dup (0xff)                    ; begin 0x4920
0000000000007094         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4933)
0000000000007098         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007099         align      4
000000000000709c         dd         0x00000010                                  ; Length of the record
00000000000070a0         dd         0x00000758                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000070a4         db         0x9c, 0xd8, 2 dup (0xff)                    ; begin 0x4940
00000000000070a8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x494c)
00000000000070ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070ad         align      16
00000000000070b0         dd         0x00000010                                  ; Length of the record
00000000000070b4         dd         0x0000076c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000070b8         db         0x98, 0xd8, 2 dup (0xff)                    ; begin 0x4950
00000000000070bc         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4964)
00000000000070c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070c1         align      4
00000000000070c4         dd         0x00000010                                  ; Length of the record
00000000000070c8         dd         0x00000780                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000070cc         db         0xa4, 0xd8, 2 dup (0xff)                    ; begin 0x4970
00000000000070d0         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4983)
00000000000070d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070d5         align      8
00000000000070d8         dd         0x00000014                                  ; Length of the record
00000000000070dc         dd         0x00000794                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000070e0         db         0xb0, 0xd8, 2 dup (0xff)                    ; begin 0x4990
00000000000070e4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x49a8)
00000000000070e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070e9         align      16
00000000000070f0         dd         0x00000110                                  ; Length of the record
00000000000070f4         dd         0x000007ac                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000070f8         db         0xb8, 0xd8, 2 dup (0xff)                    ; begin 0x49b0
00000000000070fc         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x4dc7)
0000000000007100         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007101         db  0x42 ; 'B'
0000000000007102         db  0x0e ; '.'
0000000000007103         db  0x10 ; '.'
0000000000007104         db  0x8f ; '.'
0000000000007105         db  0x02 ; '.'
0000000000007106         db  0x42 ; 'B'
0000000000007107         db  0x0e ; '.'
0000000000007108         db  0x18 ; '.'
0000000000007109         db  0x8e ; '.'
000000000000710a         db  0x03 ; '.'
000000000000710b         db  0x42 ; 'B'
000000000000710c         db  0x0e ; '.'
000000000000710d         db  0x20 ; ' '
000000000000710e         db  0x8d ; '.'
000000000000710f         db  0x04 ; '.'
0000000000007110         db  0x42 ; 'B'
0000000000007111         db  0x0e ; '.'
0000000000007112         db  0x28 ; '('
0000000000007113         db  0x8c ; '.'
0000000000007114         db  0x05 ; '.'
0000000000007115         db  0x44 ; 'D'
0000000000007116         db  0x0e ; '.'
0000000000007117         db  0x30 ; '0'
0000000000007118         db  0x86 ; '.'
0000000000007119         db  0x06 ; '.'
000000000000711a         db  0x41 ; 'A'
000000000000711b         db  0x0e ; '.'
000000000000711c         db  0x38 ; '8'
000000000000711d         db  0x83 ; '.'
000000000000711e         db  0x07 ; '.'
000000000000711f         db  0x4a ; 'J'
0000000000007120         db  0x0e ; '.'
0000000000007121         db  0x60 ; '`'
0000000000007122         db  0x02 ; '.'
0000000000007123         db  0xdd ; '.'
0000000000007124         db  0x0e ; '.'
0000000000007125         db  0x68 ; 'h'
0000000000007126         db  0x57 ; 'W'
0000000000007127         db  0x0e ; '.'
0000000000007128         db  0x70 ; 'p'
0000000000007129         db  0x42 ; 'B'
000000000000712a         db  0x0e ; '.'
000000000000712b         db  0x78 ; 'x'
000000000000712c         db  0x42 ; 'B'
000000000000712d         db  0x0e ; '.'
000000000000712e         db  0x80 ; '.'
000000000000712f         db  0x01 ; '.'
0000000000007130         db  0x42 ; 'B'
0000000000007131         db  0x0e ; '.'
0000000000007132         db  0x88 ; '.'
0000000000007133         db  0x01 ; '.'
0000000000007134         db  0x42 ; 'B'
0000000000007135         db  0x0e ; '.'
0000000000007136         db  0x90 ; '.'
0000000000007137         db  0x01 ; '.'
0000000000007138         db  0x53 ; 'S'
0000000000007139         db  0x0e ; '.'
000000000000713a         db  0x60 ; '`'
000000000000713b         db  0x44 ; 'D'
000000000000713c         db  0x0a ; '.'
000000000000713d         db  0x0e ; '.'
000000000000713e         db  0x38 ; '8'
000000000000713f         db  0x41 ; 'A'
0000000000007140         db  0x0e ; '.'
0000000000007141         db  0x30 ; '0'
0000000000007142         db  0x41 ; 'A'
0000000000007143         db  0x0e ; '.'
0000000000007144         db  0x28 ; '('
0000000000007145         db  0x42 ; 'B'
0000000000007146         db  0x0e ; '.'
0000000000007147         db  0x20 ; ' '
0000000000007148         db  0x42 ; 'B'
0000000000007149         db  0x0e ; '.'
000000000000714a         db  0x18 ; '.'
000000000000714b         db  0x42 ; 'B'
000000000000714c         db  0x0e ; '.'
000000000000714d         db  0x10 ; '.'
000000000000714e         db  0x42 ; 'B'
000000000000714f         db  0x0e ; '.'
0000000000007150         db  0x08 ; '.'
0000000000007151         db  0x44 ; 'D'
0000000000007152         db  0x0b ; '.'
0000000000007153         db  0x02 ; '.'
0000000000007154         db  0x78 ; 'x'
0000000000007155         db  0x0a ; '.'
0000000000007156         db  0x0e ; '.'
0000000000007157         db  0x68 ; 'h'
0000000000007158         db  0x48 ; 'H'
0000000000007159         db  0x0b ; '.'
000000000000715a         db  0x5a ; 'Z'
000000000000715b         db  0x0a ; '.'
000000000000715c         db  0x0e ; '.'
000000000000715d         db  0x38 ; '8'
000000000000715e         db  0x47 ; 'G'
000000000000715f         db  0x0e ; '.'
0000000000007160         db  0x30 ; '0'
0000000000007161         db  0x41 ; 'A'
0000000000007162         db  0x0e ; '.'
0000000000007163         db  0x28 ; '('
0000000000007164         db  0x42 ; 'B'
0000000000007165         db  0x0e ; '.'
0000000000007166         db  0x20 ; ' '
0000000000007167         db  0x42 ; 'B'
0000000000007168         db  0x0e ; '.'
0000000000007169         db  0x18 ; '.'
000000000000716a         db  0x42 ; 'B'
000000000000716b         db  0x0e ; '.'
000000000000716c         db  0x10 ; '.'
000000000000716d         db  0x42 ; 'B'
000000000000716e         db  0x0e ; '.'
000000000000716f         db  0x08 ; '.'
0000000000007170         db  0x56 ; 'V'
0000000000007171         db  0x0b ; '.'
0000000000007172         db  0x5e ; '^'
0000000000007173         db  0x0a ; '.'
0000000000007174         db  0x0e ; '.'
0000000000007175         db  0x38 ; '8'
0000000000007176         db  0x52 ; 'R'
0000000000007177         db  0x0e ; '.'
0000000000007178         db  0x30 ; '0'
0000000000007179         db  0x41 ; 'A'
000000000000717a         db  0x0e ; '.'
000000000000717b         db  0x28 ; '('
000000000000717c         db  0x42 ; 'B'
000000000000717d         db  0x0e ; '.'
000000000000717e         db  0x20 ; ' '
000000000000717f         db  0x42 ; 'B'
0000000000007180         db  0x0e ; '.'
0000000000007181         db  0x18 ; '.'
0000000000007182         db  0x42 ; 'B'
0000000000007183         db  0x0e ; '.'
0000000000007184         db  0x10 ; '.'
0000000000007185         db  0x42 ; 'B'
0000000000007186         db  0x0e ; '.'
0000000000007187         db  0x08 ; '.'
0000000000007188         db  0x4f ; 'O'
0000000000007189         db  0x0b ; '.'
000000000000718a         db  0x62 ; 'b'
000000000000718b         db  0x0a ; '.'
000000000000718c         db  0x0e ; '.'
000000000000718d         db  0x38 ; '8'
000000000000718e         db  0x50 ; 'P'
000000000000718f         db  0x0e ; '.'
0000000000007190         db  0x30 ; '0'
0000000000007191         db  0x41 ; 'A'
0000000000007192         db  0x0e ; '.'
0000000000007193         db  0x28 ; '('
0000000000007194         db  0x42 ; 'B'
0000000000007195         db  0x0e ; '.'
0000000000007196         db  0x20 ; ' '
0000000000007197         db  0x42 ; 'B'
0000000000007198         db  0x0e ; '.'
0000000000007199         db  0x18 ; '.'
000000000000719a         db  0x42 ; 'B'
000000000000719b         db  0x0e ; '.'
000000000000719c         db  0x10 ; '.'
000000000000719d         db  0x42 ; 'B'
000000000000719e         db  0x0e ; '.'
000000000000719f         db  0x08 ; '.'
00000000000071a0         db  0x55 ; 'U'
00000000000071a1         db  0x0b ; '.'
00000000000071a2         db  0x66 ; 'f'
00000000000071a3         db  0x0e ; '.'
00000000000071a4         db  0x68 ; 'h'
00000000000071a5         db  0x42 ; 'B'
00000000000071a6         db  0x0e ; '.'
00000000000071a7         db  0x70 ; 'p'
00000000000071a8         db  0x5c ; '\'
00000000000071a9         db  0x0e ; '.'
00000000000071aa         db  0x68 ; 'h'
00000000000071ab         db  0x41 ; 'A'
00000000000071ac         db  0x0e ; '.'
00000000000071ad         db  0x60 ; '`'
00000000000071ae         db  0x44 ; 'D'
00000000000071af         db  0x0a ; '.'
00000000000071b0         db  0x0e ; '.'
00000000000071b1         db  0x38 ; '8'
00000000000071b2         db  0x41 ; 'A'
00000000000071b3         db  0x0e ; '.'
00000000000071b4         db  0x30 ; '0'
00000000000071b5         db  0x41 ; 'A'
00000000000071b6         db  0x0e ; '.'
00000000000071b7         db  0x28 ; '('
00000000000071b8         db  0x42 ; 'B'
00000000000071b9         db  0x0e ; '.'
00000000000071ba         db  0x20 ; ' '
00000000000071bb         db  0x42 ; 'B'
00000000000071bc         db  0x0e ; '.'
00000000000071bd         db  0x18 ; '.'
00000000000071be         db  0x42 ; 'B'
00000000000071bf         db  0x0e ; '.'
00000000000071c0         db  0x10 ; '.'
00000000000071c1         db  0x42 ; 'B'
00000000000071c2         db  0x0e ; '.'
00000000000071c3         db  0x08 ; '.'
00000000000071c4         db  0x45 ; 'E'
00000000000071c5         db  0x0b ; '.'
00000000000071c6         db  0x68 ; 'h'
00000000000071c7         db  0x0a ; '.'
00000000000071c8         db  0x0e ; '.'
00000000000071c9         db  0x68 ; 'h'
00000000000071ca         db  0x48 ; 'H'
00000000000071cb         db  0x0b ; '.'
00000000000071cc         db  0x72 ; 'r'
00000000000071cd         db  0x0e ; '.'
00000000000071ce         db  0x68 ; 'h'
00000000000071cf         db  0x45 ; 'E'
00000000000071d0         db  0x0e ; '.'
00000000000071d1         db  0x70 ; 'p'
00000000000071d2         db  0x42 ; 'B'
00000000000071d3         db  0x0e ; '.'
00000000000071d4         db  0x78 ; 'x'
00000000000071d5         db  0x42 ; 'B'
00000000000071d6         db  0x0e ; '.'
00000000000071d7         db  0x80 ; '.'
00000000000071d8         db  0x01 ; '.'
00000000000071d9         db  0x5e ; '^'
00000000000071da         db  0x0e ; '.'
00000000000071db         db  0x60 ; '`'
00000000000071dc         db  0x44 ; 'D'
00000000000071dd         db  0x0a ; '.'
00000000000071de         db  0x0e ; '.'
00000000000071df         db  0x38 ; '8'
00000000000071e0         db  0x41 ; 'A'
00000000000071e1         db  0x0e ; '.'
00000000000071e2         db  0x30 ; '0'
00000000000071e3         db  0x41 ; 'A'
00000000000071e4         db  0x0e ; '.'
00000000000071e5         db  0x28 ; '('
00000000000071e6         db  0x42 ; 'B'
00000000000071e7         db  0x0e ; '.'
00000000000071e8         db  0x20 ; ' '
00000000000071e9         db  0x42 ; 'B'
00000000000071ea         db  0x0e ; '.'
00000000000071eb         db  0x18 ; '.'
00000000000071ec         db  0x42 ; 'B'
00000000000071ed         db  0x0e ; '.'
00000000000071ee         db  0x10 ; '.'
00000000000071ef         db  0x42 ; 'B'
00000000000071f0         db  0x0e ; '.'
00000000000071f1         db  0x08 ; '.'
00000000000071f2         db  0x41 ; 'A'
00000000000071f3         db  0x0b ; '.'
00000000000071f4         db  0x79 ; 'y'
00000000000071f5         db  0x0a ; '.'
00000000000071f6         db  0x0e ; '.'
00000000000071f7         db  0x68 ; 'h'
00000000000071f8         db  0x42 ; 'B'
00000000000071f9         db  0x0e ; '.'
00000000000071fa         db  0x70 ; 'p'
00000000000071fb         db  0x42 ; 'B'
00000000000071fc         db  0x0e ; '.'
00000000000071fd         db  0x78 ; 'x'
00000000000071fe         db  0x42 ; 'B'
00000000000071ff         db  0x0e ; '.'
0000000000007200         db  0x80 ; '.'
0000000000007201         db  0x01 ; '.'
0000000000007202         db  0x51 ; 'Q'
0000000000007203         db  0x0b ; '.'
0000000000007204         dd         0x00000010                                  ; Length of the record
0000000000007208         dd         0x000008c0                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
000000000000720c         db         0xc4, 0xdb, 2 dup (0xff)                    ; begin 0x4dd0
0000000000007210         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x4df0)
0000000000007214         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007215         align      8
0000000000007218         dd         0x00000018                                  ; Length of the record
000000000000721c         dd         0x000008d4                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007220         db         0xd0, 0xdb, 2 dup (0xff)                    ; begin 0x4df0
0000000000007224         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x4e68)
0000000000007228         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007229         db  0x44 ; 'D'
000000000000722a         db  0x0e ; '.'
000000000000722b         db  0x70 ; 'p'
000000000000722c         db  0x02 ; '.'
000000000000722d         db  0x60 ; '`'
000000000000722e         db  0x0a ; '.'
000000000000722f         db  0x0e ; '.'
0000000000007230         db  0x08 ; '.'
0000000000007231         db  0x41 ; 'A'
0000000000007232         db  0x0b ; '.'
0000000000007233         db  0x00 ; '.'
0000000000007234         dd         0x00000028                                  ; Length of the record
0000000000007238         dd         0x000008f0                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
000000000000723c         db         0x34, 0xdc, 2 dup (0xff)                    ; begin 0x4e70
0000000000007240         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x4f45)
0000000000007244         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007245         db  0x41 ; 'A'
0000000000007246         db  0x0e ; '.'
0000000000007247         db  0x10 ; '.'
0000000000007248         db  0x86 ; '.'
0000000000007249         db  0x02 ; '.'
000000000000724a         db  0x41 ; 'A'
000000000000724b         db  0x0e ; '.'
000000000000724c         db  0x18 ; '.'
000000000000724d         db  0x83 ; '.'
000000000000724e         db  0x03 ; '.'
000000000000724f         db  0x50 ; 'P'
0000000000007250         db  0x0e ; '.'
0000000000007251         db  0xd0 ; '.'
0000000000007252         db  0x01 ; '.'
0000000000007253         db  0x02 ; '.'
0000000000007254         db  0xab ; '.'
0000000000007255         db  0x0a ; '.'
0000000000007256         db  0x0e ; '.'
0000000000007257         db  0x18 ; '.'
0000000000007258         db  0x41 ; 'A'
0000000000007259         db  0x0e ; '.'
000000000000725a         db  0x10 ; '.'
000000000000725b         db  0x41 ; 'A'
000000000000725c         db  0x0e ; '.'
000000000000725d         db  0x08 ; '.'
000000000000725e         db  0x41 ; 'A'
000000000000725f         db  0x0b ; '.'
0000000000007260         dd         0x0000001c                                  ; Length of the record
0000000000007264         dd         0x0000091c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007268         db         0xe8, 0xdc, 2 dup (0xff)                    ; begin 0x4f50
000000000000726c         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x4fd0)
0000000000007270         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007271         db  0x41 ; 'A'
0000000000007272         db  0x0e ; '.'
0000000000007273         db  0x10 ; '.'
0000000000007274         db  0x83 ; '.'
0000000000007275         db  0x02 ; '.'
0000000000007276         db  0x02 ; '.'
0000000000007277         db  0x7a ; 'z'
0000000000007278         db  0x0e ; '.'
0000000000007279         db  0x08 ; '.'
000000000000727a         db  0x00 ; '.'
000000000000727b         db  0x00 ; '.'
000000000000727c         db  0x00 ; '.'
000000000000727d         db  0x00 ; '.'
000000000000727e         db  0x00 ; '.'
000000000000727f         db  0x00 ; '.'
0000000000007280         dd         0x00000018                                  ; Length of the record
0000000000007284         dd         0x0000093c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007288         db         0x48, 0xdd, 2 dup (0xff)                    ; begin 0x4fd0
000000000000728c         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x4fea)
0000000000007290         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007291         db  0x41 ; 'A'
0000000000007292         db  0x0e ; '.'
0000000000007293         db  0x10 ; '.'
0000000000007294         db  0x83 ; '.'
0000000000007295         db  0x02 ; '.'
0000000000007296         db  0x53 ; 'S'
0000000000007297         db  0x0a ; '.'
0000000000007298         db  0x0e ; '.'
0000000000007299         db  0x08 ; '.'
000000000000729a         db  0x41 ; 'A'
000000000000729b         db  0x0b ; '.'
000000000000729c         dd         0x00000010                                  ; Length of the record
00000000000072a0         dd         0x00000958                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000072a4         db         0x4c, 0xdd, 2 dup (0xff)                    ; begin 0x4ff0
00000000000072a8         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5014)
00000000000072ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072ad         db  0x5f ; '_'
00000000000072ae         db  0x0e ; '.'
00000000000072af         db  0x10 ; '.'
00000000000072b0         dd         0x00000010                                  ; Length of the record
00000000000072b4         dd         0x0000096c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000072b8         db         0x68, 0xdd, 2 dup (0xff)                    ; begin 0x5020
00000000000072bc         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5022)
00000000000072c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072c1         align      4
00000000000072c4         dd         0x00000020                                  ; Length of the record
00000000000072c8         dd         0x00000980                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000072cc         db         0x64, 0xdd, 2 dup (0xff)                    ; begin 0x5030
00000000000072d0         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5066)
00000000000072d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072d5         db  0x44 ; 'D'
00000000000072d6         db  0x0e ; '.'
00000000000072d7         db  0x10 ; '.'
00000000000072d8         db  0x83 ; '.'
00000000000072d9         db  0x02 ; '.'
00000000000072da         db  0x5d ; ']'
00000000000072db         db  0x0a ; '.'
00000000000072dc         db  0x0e ; '.'
00000000000072dd         db  0x08 ; '.'
00000000000072de         db  0x47 ; 'G'
00000000000072df         db  0x0b ; '.'
00000000000072e0         db  0x48 ; 'H'
00000000000072e1         db  0x0a ; '.'
00000000000072e2         db  0x0e ; '.'
00000000000072e3         db  0x08 ; '.'
00000000000072e4         db  0x41 ; 'A'
00000000000072e5         db  0x0b ; '.'
00000000000072e6         db  0x00 ; '.'
00000000000072e7         db  0x00 ; '.'
00000000000072e8         dd         0x00000010                                  ; Length of the record
00000000000072ec         dd         0x000009a4                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000072f0         db         0x80, 0xdd, 2 dup (0xff)                    ; begin 0x5070
00000000000072f4         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5094)
00000000000072f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072f9         db  0x5f ; '_'
00000000000072fa         db  0x0e ; '.'
00000000000072fb         db  0x10 ; '.'
00000000000072fc         dd         0x00000014                                  ; Length of the record
0000000000007300         dd         0x000009b8                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007304         db         0x9c, 0xdd, 2 dup (0xff)                    ; begin 0x50a0
0000000000007308         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5122)
000000000000730c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000730d         db  0x02 ; '.'
000000000000730e         db  0x5f ; '_'
000000000000730f         db  0x0e ; '.'
0000000000007310         db  0x10 ; '.'
0000000000007311         db  0x49 ; 'I'
0000000000007312         db  0x0e ; '.'
0000000000007313         db  0x08 ; '.'
0000000000007314         dd         0x00000014                                  ; Length of the record
0000000000007318         dd         0x000009d0                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
000000000000731c         db         0x14, 0xde, 2 dup (0xff)                    ; begin 0x5130
0000000000007320         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x517a)
0000000000007324         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007325         db  0x02 ; '.'
0000000000007326         db  0x45 ; 'E'
0000000000007327         db  0x0e ; '.'
0000000000007328         db  0x10 ; '.'
0000000000007329         db  0x00 ; '.'
000000000000732a         db  0x00 ; '.'
000000000000732b         db  0x00 ; '.'
000000000000732c         dd         0x00000018                                  ; Length of the record
0000000000007330         dd         0x000009e8                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007334         db         0x4c, 0xde, 2 dup (0xff)                    ; begin 0x5180
0000000000007338         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5197)
000000000000733c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000733d         db  0x41 ; 'A'
000000000000733e         db  0x0e ; '.'
000000000000733f         db  0x10 ; '.'
0000000000007340         db  0x83 ; '.'
0000000000007341         db  0x02 ; '.'
0000000000007342         db  0x51 ; 'Q'
0000000000007343         db  0x0e ; '.'
0000000000007344         db  0x08 ; '.'
0000000000007345         db  0x00 ; '.'
0000000000007346         db  0x00 ; '.'
0000000000007347         db  0x00 ; '.'
0000000000007348         dd         0x00000018                                  ; Length of the record
000000000000734c         dd         0x00000a04                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007350         db         0x50, 0xde, 2 dup (0xff)                    ; begin 0x51a0
0000000000007354         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x51ce)
0000000000007358         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007359         db  0x47 ; 'G'
000000000000735a         db  0x0e ; '.'
000000000000735b         db  0x10 ; '.'
000000000000735c         db  0x61 ; 'a'
000000000000735d         db  0x0a ; '.'
000000000000735e         db  0x0e ; '.'
000000000000735f         db  0x08 ; '.'
0000000000007360         db  0x41 ; 'A'
0000000000007361         db  0x0b ; '.'
0000000000007362         db  0x00 ; '.'
0000000000007363         db  0x00 ; '.'
0000000000007364         dd         0x00000024                                  ; Length of the record
0000000000007368         dd         0x00000a20                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
000000000000736c         db         0x64, 0xde, 2 dup (0xff)                    ; begin 0x51d0
0000000000007370         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x51f8)
0000000000007374         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007375         db  0x41 ; 'A'
0000000000007376         db  0x0e ; '.'
0000000000007377         db  0x10 ; '.'
0000000000007378         db  0x86 ; '.'
0000000000007379         db  0x02 ; '.'
000000000000737a         db  0x41 ; 'A'
000000000000737b         db  0x0e ; '.'
000000000000737c         db  0x18 ; '.'
000000000000737d         db  0x83 ; '.'
000000000000737e         db  0x03 ; '.'
000000000000737f         db  0x4d ; 'M'
0000000000007380         db  0x0e ; '.'
0000000000007381         db  0x20 ; ' '
0000000000007382         db  0x49 ; 'I'
0000000000007383         db  0x0e ; '.'
0000000000007384         db  0x18 ; '.'
0000000000007385         db  0x47 ; 'G'
0000000000007386         db  0x0e ; '.'
0000000000007387         db  0x10 ; '.'
0000000000007388         db  0x41 ; 'A'
0000000000007389         db  0x0e ; '.'
000000000000738a         db  0x08 ; '.'
000000000000738b         db  0x00 ; '.'
000000000000738c         dd         0x00000018                                  ; Length of the record
0000000000007390         dd         0x00000a48                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007394         db         0x6c, 0xde, 2 dup (0xff)                    ; begin 0x5200
0000000000007398         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5213)
000000000000739c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000739d         db  0x41 ; 'A'
000000000000739e         db  0x0e ; '.'
000000000000739f         db  0x10 ; '.'
00000000000073a0         db  0x83 ; '.'
00000000000073a1         db  0x02 ; '.'
00000000000073a2         db  0x50 ; 'P'
00000000000073a3         db  0x0e ; '.'
00000000000073a4         db  0x08 ; '.'
00000000000073a5         db  0x00 ; '.'
00000000000073a6         db  0x00 ; '.'
00000000000073a7         db  0x00 ; '.'
00000000000073a8         dd         0x00000014                                  ; Length of the record
00000000000073ac         dd         0x00000a64                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000073b0         db         0x70, 0xde, 2 dup (0xff)                    ; begin 0x5220
00000000000073b4         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5255)
00000000000073b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073b9         db  0x4b ; 'K'
00000000000073ba         db  0x0e ; '.'
00000000000073bb         db  0x10 ; '.'
00000000000073bc         db  0x00 ; '.'
00000000000073bd         db  0x00 ; '.'
00000000000073be         db  0x00 ; '.'
00000000000073bf         db  0x00 ; '.'
00000000000073c0         dd         0x0000001c                                  ; Length of the record
00000000000073c4         dd         0x00000a7c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000073c8         db         0x98, 0xde, 2 dup (0xff)                    ; begin 0x5260
00000000000073cc         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5278)
00000000000073d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073d1         db  0x44 ; 'D'
00000000000073d2         db  0x0e ; '.'
00000000000073d3         db  0x10 ; '.'
00000000000073d4         db  0x4e ; 'N'
00000000000073d5         db  0x0a ; '.'
00000000000073d6         db  0x0e ; '.'
00000000000073d7         db  0x08 ; '.'
00000000000073d8         db  0x41 ; 'A'
00000000000073d9         db  0x0b ; '.'
00000000000073da         db  0x00 ; '.'
00000000000073db         db  0x00 ; '.'
00000000000073dc         db  0x00 ; '.'
00000000000073dd         db  0x00 ; '.'
00000000000073de         db  0x00 ; '.'
00000000000073df         db  0x00 ; '.'
00000000000073e0         dd         0x00000034                                  ; Length of the record
00000000000073e4         dd         0x00000a9c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000073e8         db         0x98, 0xde, 2 dup (0xff)                    ; begin 0x5280
00000000000073ec         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x52fb)
00000000000073f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073f1         db  0x42 ; 'B'
00000000000073f2         db  0x0e ; '.'
00000000000073f3         db  0x10 ; '.'
00000000000073f4         db  0x8c ; '.'
00000000000073f5         db  0x02 ; '.'
00000000000073f6         db  0x41 ; 'A'
00000000000073f7         db  0x0e ; '.'
00000000000073f8         db  0x18 ; '.'
00000000000073f9         db  0x86 ; '.'
00000000000073fa         db  0x03 ; '.'
00000000000073fb         db  0x41 ; 'A'
00000000000073fc         db  0x0e ; '.'
00000000000073fd         db  0x20 ; ' '
00000000000073fe         db  0x83 ; '.'
00000000000073ff         db  0x04 ; '.'
0000000000007400         db  0x7d ; '}'
0000000000007401         db  0x0a ; '.'
0000000000007402         db  0x0e ; '.'
0000000000007403         db  0x18 ; '.'
0000000000007404         db  0x41 ; 'A'
0000000000007405         db  0x0e ; '.'
0000000000007406         db  0x10 ; '.'
0000000000007407         db  0x42 ; 'B'
0000000000007408         db  0x0e ; '.'
0000000000007409         db  0x08 ; '.'
000000000000740a         db  0x44 ; 'D'
000000000000740b         db  0x0b ; '.'
000000000000740c         db  0x60 ; '`'
000000000000740d         db  0x0a ; '.'
000000000000740e         db  0x0e ; '.'
000000000000740f         db  0x18 ; '.'
0000000000007410         db  0x41 ; 'A'
0000000000007411         db  0x0e ; '.'
0000000000007412         db  0x10 ; '.'
0000000000007413         db  0x42 ; 'B'
0000000000007414         db  0x0e ; '.'
0000000000007415         db  0x08 ; '.'
0000000000007416         db  0x45 ; 'E'
0000000000007417         db  0x0b ; '.'
0000000000007418         dd         0x0000001c                                  ; Length of the record
000000000000741c         dd         0x00000ad4                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007420         db         0xe0, 0xde, 2 dup (0xff)                    ; begin 0x5300
0000000000007424         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x5340)
0000000000007428         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007429         db  0x44 ; 'D'
000000000000742a         db  0x0e ; '.'
000000000000742b         db  0x10 ; '.'
000000000000742c         db  0x83 ; '.'
000000000000742d         db  0x02 ; '.'
000000000000742e         db  0x5a ; 'Z'
000000000000742f         db  0x0a ; '.'
0000000000007430         db  0x0e ; '.'
0000000000007431         db  0x08 ; '.'
0000000000007432         db  0x4a ; 'J'
0000000000007433         db  0x0b ; '.'
0000000000007434         db  0x53 ; 'S'
0000000000007435         db  0x0e ; '.'
0000000000007436         db  0x08 ; '.'
0000000000007437         db  0x00 ; '.'
0000000000007438         dd         0x0000002c                                  ; Length of the record
000000000000743c         dd         0x00000af4                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007440         db         0x00, 0xdf, 2 dup (0xff)                    ; begin 0x5340
0000000000007444         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x5397)
0000000000007448         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007449         db  0x63 ; 'c'
000000000000744a         db  0x0e ; '.'
000000000000744b         db  0x10 ; '.'
000000000000744c         db  0x8c ; '.'
000000000000744d         db  0x02 ; '.'
000000000000744e         db  0x41 ; 'A'
000000000000744f         db  0x0e ; '.'
0000000000007450         db  0x18 ; '.'
0000000000007451         db  0x86 ; '.'
0000000000007452         db  0x03 ; '.'
0000000000007453         db  0x44 ; 'D'
0000000000007454         db  0x0e ; '.'
0000000000007455         db  0x20 ; ' '
0000000000007456         db  0x83 ; '.'
0000000000007457         db  0x04 ; '.'
0000000000007458         db  0x6b ; 'k'
0000000000007459         db  0x0e ; '.'
000000000000745a         db  0x18 ; '.'
000000000000745b         db  0x41 ; 'A'
000000000000745c         db  0x0e ; '.'
000000000000745d         db  0x10 ; '.'
000000000000745e         db  0x42 ; 'B'
000000000000745f         db  0x0e ; '.'
0000000000007460         db  0x08 ; '.'
0000000000007461         db  0x00 ; '.'
0000000000007462         db  0x00 ; '.'
0000000000007463         db  0x00 ; '.'
0000000000007464         db  0x00 ; '.'
0000000000007465         db  0x00 ; '.'
0000000000007466         db  0x00 ; '.'
0000000000007467         db  0x00 ; '.'
0000000000007468         dd         0x0000003c                                  ; Length of the record
000000000000746c         dd         0x00000b24                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007470         db         0x30, 0xdf, 2 dup (0xff)                    ; begin 0x53a0
0000000000007474         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5423)
0000000000007478         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007479         db  0x42 ; 'B'
000000000000747a         db  0x0e ; '.'
000000000000747b         db  0x10 ; '.'
000000000000747c         db  0x8d ; '.'
000000000000747d         db  0x02 ; '.'
000000000000747e         db  0x42 ; 'B'
000000000000747f         db  0x0e ; '.'
0000000000007480         db  0x18 ; '.'
0000000000007481         db  0x8c ; '.'
0000000000007482         db  0x03 ; '.'
0000000000007483         db  0x44 ; 'D'
0000000000007484         db  0x0e ; '.'
0000000000007485         db  0x20 ; ' '
0000000000007486         db  0x86 ; '.'
0000000000007487         db  0x04 ; '.'
0000000000007488         db  0x41 ; 'A'
0000000000007489         db  0x0e ; '.'
000000000000748a         db  0x28 ; '('
000000000000748b         db  0x83 ; '.'
000000000000748c         db  0x05 ; '.'
000000000000748d         db  0x4a ; 'J'
000000000000748e         db  0x0e ; '.'
000000000000748f         db  0x40 ; '@'
0000000000007490         db  0x02 ; '.'
0000000000007491         db  0x64 ; 'd'
0000000000007492         db  0x0a ; '.'
0000000000007493         db  0x0e ; '.'
0000000000007494         db  0x28 ; '('
0000000000007495         db  0x41 ; 'A'
0000000000007496         db  0x0e ; '.'
0000000000007497         db  0x20 ; ' '
0000000000007498         db  0x41 ; 'A'
0000000000007499         db  0x0e ; '.'
000000000000749a         db  0x18 ; '.'
000000000000749b         db  0x42 ; 'B'
000000000000749c         db  0x0e ; '.'
000000000000749d         db  0x10 ; '.'
000000000000749e         db  0x42 ; 'B'
000000000000749f         db  0x0e ; '.'
00000000000074a0         db  0x08 ; '.'
00000000000074a1         db  0x41 ; 'A'
00000000000074a2         db  0x0b ; '.'
00000000000074a3         db  0x00 ; '.'
00000000000074a4         db  0x00 ; '.'
00000000000074a5         db  0x00 ; '.'
00000000000074a6         db  0x00 ; '.'
00000000000074a7         db  0x00 ; '.'
00000000000074a8         dd         0x0000004c                                  ; Length of the record
00000000000074ac         dd         0x00000b64                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000074b0         db         0x80, 0xdf, 2 dup (0xff)                    ; begin 0x5430
00000000000074b4         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x54ad)
00000000000074b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074b9         db  0x42 ; 'B'
00000000000074ba         db  0x0e ; '.'
00000000000074bb         db  0x10 ; '.'
00000000000074bc         db  0x8c ; '.'
00000000000074bd         db  0x02 ; '.'
00000000000074be         db  0x41 ; 'A'
00000000000074bf         db  0x0e ; '.'
00000000000074c0         db  0x18 ; '.'
00000000000074c1         db  0x86 ; '.'
00000000000074c2         db  0x03 ; '.'
00000000000074c3         db  0x44 ; 'D'
00000000000074c4         db  0x0e ; '.'
00000000000074c5         db  0x20 ; ' '
00000000000074c6         db  0x83 ; '.'
00000000000074c7         db  0x04 ; '.'
00000000000074c8         db  0x69 ; 'i'
00000000000074c9         db  0x0a ; '.'
00000000000074ca         db  0x0e ; '.'
00000000000074cb         db  0x18 ; '.'
00000000000074cc         db  0x41 ; 'A'
00000000000074cd         db  0x0e ; '.'
00000000000074ce         db  0x10 ; '.'
00000000000074cf         db  0x42 ; 'B'
00000000000074d0         db  0x0e ; '.'
00000000000074d1         db  0x08 ; '.'
00000000000074d2         db  0x45 ; 'E'
00000000000074d3         db  0x0b ; '.'
00000000000074d4         db  0x55 ; 'U'
00000000000074d5         db  0x0a ; '.'
00000000000074d6         db  0x0e ; '.'
00000000000074d7         db  0x18 ; '.'
00000000000074d8         db  0x41 ; 'A'
00000000000074d9         db  0x0e ; '.'
00000000000074da         db  0x10 ; '.'
00000000000074db         db  0x42 ; 'B'
00000000000074dc         db  0x0e ; '.'
00000000000074dd         db  0x08 ; '.'
00000000000074de         db  0x48 ; 'H'
00000000000074df         db  0x0b ; '.'
00000000000074e0         db  0x41 ; 'A'
00000000000074e1         db  0x0a ; '.'
00000000000074e2         db  0x0e ; '.'
00000000000074e3         db  0x18 ; '.'
00000000000074e4         db  0x46 ; 'F'
00000000000074e5         db  0x0e ; '.'
00000000000074e6         db  0x10 ; '.'
00000000000074e7         db  0x42 ; 'B'
00000000000074e8         db  0x0e ; '.'
00000000000074e9         db  0x08 ; '.'
00000000000074ea         db  0x47 ; 'G'
00000000000074eb         db  0x0b ; '.'
00000000000074ec         db  0x49 ; 'I'
00000000000074ed         db  0x0e ; '.'
00000000000074ee         db  0x18 ; '.'
00000000000074ef         db  0x41 ; 'A'
00000000000074f0         db  0x0e ; '.'
00000000000074f1         db  0x10 ; '.'
00000000000074f2         db  0x42 ; 'B'
00000000000074f3         db  0x0e ; '.'
00000000000074f4         db  0x08 ; '.'
00000000000074f5         db  0x00 ; '.'
00000000000074f6         db  0x00 ; '.'
00000000000074f7         db  0x00 ; '.'
00000000000074f8         dd         0x0000001c                                  ; Length of the record
00000000000074fc         dd         0x00000bb4                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007500         db         0xb0, 0xdf, 2 dup (0xff)                    ; begin 0x54b0
0000000000007504         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x5510)
0000000000007508         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007509         db  0x44 ; 'D'
000000000000750a         db  0x0e ; '.'
000000000000750b         db  0x10 ; '.'
000000000000750c         db  0x75 ; 'u'
000000000000750d         db  0x0a ; '.'
000000000000750e         db  0x0e ; '.'
000000000000750f         db  0x08 ; '.'
0000000000007510         db  0x47 ; 'G'
0000000000007511         db  0x0b ; '.'
0000000000007512         db  0x5f ; '_'
0000000000007513         db  0x0e ; '.'
0000000000007514         db  0x08 ; '.'
0000000000007515         db  0x00 ; '.'
0000000000007516         db  0x00 ; '.'
0000000000007517         db  0x00 ; '.'
0000000000007518         dd         0x0000001c                                  ; Length of the record
000000000000751c         dd         0x00000bd4                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007520         db         0xf0, 0xdf, 2 dup (0xff)                    ; begin 0x5510
0000000000007524         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x554c)
0000000000007528         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007529         db  0x44 ; 'D'
000000000000752a         db  0x0e ; '.'
000000000000752b         db  0x10 ; '.'
000000000000752c         db  0x61 ; 'a'
000000000000752d         db  0x0a ; '.'
000000000000752e         db  0x0e ; '.'
000000000000752f         db  0x08 ; '.'
0000000000007530         db  0x4b ; 'K'
0000000000007531         db  0x0b ; '.'
0000000000007532         db  0x4b ; 'K'
0000000000007533         db  0x0e ; '.'
0000000000007534         db  0x08 ; '.'
0000000000007535         db  0x00 ; '.'
0000000000007536         db  0x00 ; '.'
0000000000007537         db  0x00 ; '.'
0000000000007538         dd         0x00000044                                  ; Length of the record
000000000000753c         dd         0x00000bf4                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007540         db         0x10, 0xe0, 2 dup (0xff)                    ; begin 0x5550
0000000000007544         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x55b5)
0000000000007548         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007549         db  0x42 ; 'B'
000000000000754a         db  0x0e ; '.'
000000000000754b         db  0x10 ; '.'
000000000000754c         db  0x8f ; '.'
000000000000754d         db  0x02 ; '.'
000000000000754e         db  0x42 ; 'B'
000000000000754f         db  0x0e ; '.'
0000000000007550         db  0x18 ; '.'
0000000000007551         db  0x8e ; '.'
0000000000007552         db  0x03 ; '.'
0000000000007553         db  0x45 ; 'E'
0000000000007554         db  0x0e ; '.'
0000000000007555         db  0x20 ; ' '
0000000000007556         db  0x8d ; '.'
0000000000007557         db  0x04 ; '.'
0000000000007558         db  0x42 ; 'B'
0000000000007559         db  0x0e ; '.'
000000000000755a         db  0x28 ; '('
000000000000755b         db  0x8c ; '.'
000000000000755c         db  0x05 ; '.'
000000000000755d         db  0x48 ; 'H'
000000000000755e         db  0x0e ; '.'
000000000000755f         db  0x30 ; '0'
0000000000007560         db  0x86 ; '.'
0000000000007561         db  0x06 ; '.'
0000000000007562         db  0x48 ; 'H'
0000000000007563         db  0x0e ; '.'
0000000000007564         db  0x38 ; '8'
0000000000007565         db  0x83 ; '.'
0000000000007566         db  0x07 ; '.'
0000000000007567         db  0x4d ; 'M'
0000000000007568         db  0x0e ; '.'
0000000000007569         db  0x40 ; '@'
000000000000756a         db  0x72 ; 'r'
000000000000756b         db  0x0e ; '.'
000000000000756c         db  0x38 ; '8'
000000000000756d         db  0x41 ; 'A'
000000000000756e         db  0x0e ; '.'
000000000000756f         db  0x30 ; '0'
0000000000007570         db  0x41 ; 'A'
0000000000007571         db  0x0e ; '.'
0000000000007572         db  0x28 ; '('
0000000000007573         db  0x42 ; 'B'
0000000000007574         db  0x0e ; '.'
0000000000007575         db  0x20 ; ' '
0000000000007576         db  0x42 ; 'B'
0000000000007577         db  0x0e ; '.'
0000000000007578         db  0x18 ; '.'
0000000000007579         db  0x42 ; 'B'
000000000000757a         db  0x0e ; '.'
000000000000757b         db  0x10 ; '.'
000000000000757c         db  0x42 ; 'B'
000000000000757d         db  0x0e ; '.'
000000000000757e         db  0x08 ; '.'
000000000000757f         db  0x00 ; '.'
0000000000007580         dd         0x00000014                                  ; Length of the record
0000000000007584         dd         0x00000c3c                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
0000000000007588         db         0x38, 0xe0, 2 dup (0xff)                    ; begin 0x55c0
000000000000758c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x55c2)
0000000000007590         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007591         align      8
0000000000007598         dd         0x00000010                                  ; Length of the record
000000000000759c         dd         0x00000c54                                  ; FDE: parent CIE at 0x6948 (FDE encoding = 0x1B)
00000000000075a0         db         0x30, 0xe0, 2 dup (0xff)                    ; begin 0x55d0
00000000000075a4         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x55de)
00000000000075a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075a9         align      16


        ; Segment Segment 3
        ; Range: [0x207b10; 0x2082a0[ (1936 bytes)
        ; File offset : [31504; 32928[ (1424 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x207b10; 0x207b18[ (8 bytes)
        ; File offset : [31504; 31512[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000207b10         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x207b18; 0x207b20[ (8 bytes)
        ; File offset : [31512; 31520[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000207b18         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x207b20; 0x207c38[ (280 bytes)
        ; File offset : [31520; 31800[ (280 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
0000000000207b20         db  0x26 ; '&'                                         ; DATA XREF=main+14
0000000000207b21         db  0x57 ; 'W'
0000000000207b22         db  0x00 ; '.'
0000000000207b23         db  0x00 ; '.'
0000000000207b24         db  0x00 ; '.'
0000000000207b25         db  0x00 ; '.'
0000000000207b26         db  0x00 ; '.'
0000000000207b27         db  0x00 ; '.'
0000000000207b28         db  0x01 ; '.'
0000000000207b29         db  0x00 ; '.'
0000000000207b2a         db  0x00 ; '.'
0000000000207b2b         db  0x00 ; '.'
0000000000207b2c         db  0x00 ; '.'
0000000000207b2d         db  0x00 ; '.'
0000000000207b2e         db  0x00 ; '.'
0000000000207b2f         db  0x00 ; '.'
0000000000207b30         db  0x00 ; '.'
0000000000207b31         db  0x00 ; '.'
0000000000207b32         db  0x00 ; '.'
0000000000207b33         db  0x00 ; '.'
0000000000207b34         db  0x00 ; '.'
0000000000207b35         db  0x00 ; '.'
0000000000207b36         db  0x00 ; '.'
0000000000207b37         db  0x00 ; '.'
0000000000207b38         db  0x74 ; 't'
0000000000207b39         db  0x00 ; '.'
0000000000207b3a         db  0x00 ; '.'
0000000000207b3b         db  0x00 ; '.'
0000000000207b3c         db  0x00 ; '.'
0000000000207b3d         db  0x00 ; '.'
0000000000207b3e         db  0x00 ; '.'
0000000000207b3f         db  0x00 ; '.'
0000000000207b40         db  0x2b ; '+'
0000000000207b41         db  0x57 ; 'W'
0000000000207b42         db  0x00 ; '.'
0000000000207b43         db  0x00 ; '.'
0000000000207b44         db  0x00 ; '.'
0000000000207b45         db  0x00 ; '.'
0000000000207b46         db  0x00 ; '.'
0000000000207b47         db  0x00 ; '.'
0000000000207b48         db  0x00 ; '.'
0000000000207b49         db  0x00 ; '.'
0000000000207b4a         db  0x00 ; '.'
0000000000207b4b         db  0x00 ; '.'
0000000000207b4c         db  0x00 ; '.'
0000000000207b4d         db  0x00 ; '.'
0000000000207b4e         db  0x00 ; '.'
0000000000207b4f         db  0x00 ; '.'
0000000000207b50         db  0x00 ; '.'
0000000000207b51         db  0x00 ; '.'
0000000000207b52         db  0x00 ; '.'
0000000000207b53         db  0x00 ; '.'
0000000000207b54         db  0x00 ; '.'
0000000000207b55         db  0x00 ; '.'
0000000000207b56         db  0x00 ; '.'
0000000000207b57         db  0x00 ; '.'
0000000000207b58         db  0x61 ; 'a'
0000000000207b59         db  0x00 ; '.'
0000000000207b5a         db  0x00 ; '.'
0000000000207b5b         db  0x00 ; '.'
0000000000207b5c         db  0x00 ; '.'
0000000000207b5d         db  0x00 ; '.'
0000000000207b5e         db  0x00 ; '.'
0000000000207b5f         db  0x00 ; '.'
0000000000207b60         db  0x2f ; '/'
0000000000207b61         db  0x57 ; 'W'
0000000000207b62         db  0x00 ; '.'
0000000000207b63         db  0x00 ; '.'
0000000000207b64         db  0x00 ; '.'
0000000000207b65         db  0x00 ; '.'
0000000000207b66         db  0x00 ; '.'
0000000000207b67         db  0x00 ; '.'
0000000000207b68         db  0x00 ; '.'
0000000000207b69         db  0x00 ; '.'
0000000000207b6a         db  0x00 ; '.'
0000000000207b6b         db  0x00 ; '.'
0000000000207b6c         db  0x00 ; '.'
0000000000207b6d         db  0x00 ; '.'
0000000000207b6e         db  0x00 ; '.'
0000000000207b6f         db  0x00 ; '.'
0000000000207b70         db  0x00 ; '.'
0000000000207b71         db  0x00 ; '.'
0000000000207b72         db  0x00 ; '.'
0000000000207b73         db  0x00 ; '.'
0000000000207b74         db  0x00 ; '.'
0000000000207b75         db  0x00 ; '.'
0000000000207b76         db  0x00 ; '.'
0000000000207b77         db  0x00 ; '.'
0000000000207b78         db  0x80 ; '.'
0000000000207b79         db  0x00 ; '.'
0000000000207b7a         db  0x00 ; '.'
0000000000207b7b         db  0x00 ; '.'
0000000000207b7c         db  0x00 ; '.'
0000000000207b7d         db  0x00 ; '.'
0000000000207b7e         db  0x00 ; '.'
0000000000207b7f         db  0x00 ; '.'
0000000000207b80         db  0x3a ; ':'
0000000000207b81         db  0x57 ; 'W'
0000000000207b82         db  0x00 ; '.'
0000000000207b83         db  0x00 ; '.'
0000000000207b84         db  0x00 ; '.'
0000000000207b85         db  0x00 ; '.'
0000000000207b86         db  0x00 ; '.'
0000000000207b87         db  0x00 ; '.'
0000000000207b88         db  0x00 ; '.'
0000000000207b89         db  0x00 ; '.'
0000000000207b8a         db  0x00 ; '.'
0000000000207b8b         db  0x00 ; '.'
0000000000207b8c         db  0x00 ; '.'
0000000000207b8d         db  0x00 ; '.'
0000000000207b8e         db  0x00 ; '.'
0000000000207b8f         db  0x00 ; '.'
0000000000207b90         db  0x00 ; '.'
0000000000207b91         db  0x00 ; '.'
0000000000207b92         db  0x00 ; '.'
0000000000207b93         db  0x00 ; '.'
0000000000207b94         db  0x00 ; '.'
0000000000207b95         db  0x00 ; '.'
0000000000207b96         db  0x00 ; '.'
0000000000207b97         db  0x00 ; '.'
0000000000207b98         db  0x7e ; '~'
0000000000207b99         db  0xff ; '.'
0000000000207b9a         db  0xff ; '.'
0000000000207b9b         db  0xff ; '.'
0000000000207b9c         db  0x00 ; '.'
0000000000207b9d         db  0x00 ; '.'
0000000000207b9e         db  0x00 ; '.'
0000000000207b9f         db  0x00 ; '.'
0000000000207ba0         db  0x3f ; '?'
0000000000207ba1         db  0x57 ; 'W'
0000000000207ba2         db  0x00 ; '.'
0000000000207ba3         db  0x00 ; '.'
0000000000207ba4         db  0x00 ; '.'
0000000000207ba5         db  0x00 ; '.'
0000000000207ba6         db  0x00 ; '.'
0000000000207ba7         db  0x00 ; '.'
0000000000207ba8         db  0x00 ; '.'
0000000000207ba9         db  0x00 ; '.'
0000000000207baa         db  0x00 ; '.'
0000000000207bab         db  0x00 ; '.'
0000000000207bac         db  0x00 ; '.'
0000000000207bad         db  0x00 ; '.'
0000000000207bae         db  0x00 ; '.'
0000000000207baf         db  0x00 ; '.'
0000000000207bb0         db  0x00 ; '.'
0000000000207bb1         db  0x00 ; '.'
0000000000207bb2         db  0x00 ; '.'
0000000000207bb3         db  0x00 ; '.'
0000000000207bb4         db  0x00 ; '.'
0000000000207bb5         db  0x00 ; '.'
0000000000207bb6         db  0x00 ; '.'
0000000000207bb7         db  0x00 ; '.'
0000000000207bb8         db  0x7d ; '}'
0000000000207bb9         db  0xff ; '.'
0000000000207bba         db  0xff ; '.'
0000000000207bbb         db  0xff ; '.'
0000000000207bbc         db  0x00 ; '.'
0000000000207bbd         db  0x00 ; '.'
0000000000207bbe         db  0x00 ; '.'
0000000000207bbf         db  0x00 ; '.'
0000000000207bc0         db  0x00 ; '.'
0000000000207bc1         db  0x00 ; '.'
0000000000207bc2         db  0x00 ; '.'
0000000000207bc3         db  0x00 ; '.'
0000000000207bc4         db  0x00 ; '.'
0000000000207bc5         db  0x00 ; '.'
0000000000207bc6         db  0x00 ; '.'
0000000000207bc7         db  0x00 ; '.'
0000000000207bc8         db  0x00 ; '.'
0000000000207bc9         db  0x00 ; '.'
0000000000207bca         db  0x00 ; '.'
0000000000207bcb         db  0x00 ; '.'
0000000000207bcc         db  0x00 ; '.'
0000000000207bcd         db  0x00 ; '.'
0000000000207bce         db  0x00 ; '.'
0000000000207bcf         db  0x00 ; '.'
0000000000207bd0         db  0x00 ; '.'
0000000000207bd1         db  0x00 ; '.'
0000000000207bd2         db  0x00 ; '.'
0000000000207bd3         db  0x00 ; '.'
0000000000207bd4         db  0x00 ; '.'
0000000000207bd5         db  0x00 ; '.'
0000000000207bd6         db  0x00 ; '.'
0000000000207bd7         db  0x00 ; '.'
0000000000207bd8         db  0x00 ; '.'
0000000000207bd9         db  0x00 ; '.'
0000000000207bda         db  0x00 ; '.'
0000000000207bdb         db  0x00 ; '.'
0000000000207bdc         db  0x00 ; '.'
0000000000207bdd         db  0x00 ; '.'
0000000000207bde         db  0x00 ; '.'
0000000000207bdf         db  0x00 ; '.'
                     quoting_style_args:
0000000000207be0         db  0x21 ; '!'
0000000000207be1         db  0x5e ; '^'
0000000000207be2         db  0x00 ; '.'
0000000000207be3         db  0x00 ; '.'
0000000000207be4         db  0x00 ; '.'
0000000000207be5         db  0x00 ; '.'
0000000000207be6         db  0x00 ; '.'
0000000000207be7         db  0x00 ; '.'
0000000000207be8         db  0x29 ; ')'
0000000000207be9         db  0x5e ; '^'
0000000000207bea         db  0x00 ; '.'
0000000000207beb         db  0x00 ; '.'
0000000000207bec         db  0x00 ; '.'
0000000000207bed         db  0x00 ; '.'
0000000000207bee         db  0x00 ; '.'
0000000000207bef         db  0x00 ; '.'
0000000000207bf0         db  0x2f ; '/'
0000000000207bf1         db  0x5e ; '^'
0000000000207bf2         db  0x00 ; '.'
0000000000207bf3         db  0x00 ; '.'
0000000000207bf4         db  0x00 ; '.'
0000000000207bf5         db  0x00 ; '.'
0000000000207bf6         db  0x00 ; '.'
0000000000207bf7         db  0x00 ; '.'
0000000000207bf8         db  0x3c ; '<'
0000000000207bf9         db  0x5e ; '^'
0000000000207bfa         db  0x00 ; '.'
0000000000207bfb         db  0x00 ; '.'
0000000000207bfc         db  0x00 ; '.'
0000000000207bfd         db  0x00 ; '.'
0000000000207bfe         db  0x00 ; '.'
0000000000207bff         db  0x00 ; '.'
0000000000207c00         db  0x49 ; 'I'
0000000000207c01         db  0x5e ; '^'
0000000000207c02         db  0x00 ; '.'
0000000000207c03         db  0x00 ; '.'
0000000000207c04         db  0x00 ; '.'
0000000000207c05         db  0x00 ; '.'
0000000000207c06         db  0x00 ; '.'
0000000000207c07         db  0x00 ; '.'
0000000000207c08         db  0x5d ; ']'
0000000000207c09         db  0x5e ; '^'
0000000000207c0a         db  0x00 ; '.'
0000000000207c0b         db  0x00 ; '.'
0000000000207c0c         db  0x00 ; '.'
0000000000207c0d         db  0x00 ; '.'
0000000000207c0e         db  0x00 ; '.'
0000000000207c0f         db  0x00 ; '.'
0000000000207c10         db  0x5f ; '_'
0000000000207c11         db  0x5e ; '^'
0000000000207c12         db  0x00 ; '.'
0000000000207c13         db  0x00 ; '.'
0000000000207c14         db  0x00 ; '.'
0000000000207c15         db  0x00 ; '.'
0000000000207c16         db  0x00 ; '.'
0000000000207c17         db  0x00 ; '.'
0000000000207c18         db  0x42 ; 'B'
0000000000207c19         db  0x5e ; '^'
0000000000207c1a         db  0x00 ; '.'
0000000000207c1b         db  0x00 ; '.'
0000000000207c1c         db  0x00 ; '.'
0000000000207c1d         db  0x00 ; '.'
0000000000207c1e         db  0x00 ; '.'
0000000000207c1f         db  0x00 ; '.'
0000000000207c20         db  0xc1 ; '.'
0000000000207c21         db  0x56 ; 'V'
0000000000207c22         db  0x00 ; '.'
0000000000207c23         db  0x00 ; '.'
0000000000207c24         db  0x00 ; '.'
0000000000207c25         db  0x00 ; '.'
0000000000207c26         db  0x00 ; '.'
0000000000207c27         db  0x00 ; '.'
0000000000207c28         db  0x67 ; 'g'
0000000000207c29         db  0x5e ; '^'
0000000000207c2a         db  0x00 ; '.'
0000000000207c2b         db  0x00 ; '.'
0000000000207c2c         db  0x00 ; '.'
0000000000207c2d         db  0x00 ; '.'
0000000000207c2e         db  0x00 ; '.'
0000000000207c2f         db  0x00 ; '.'
0000000000207c30         db  0x00 ; '.'
0000000000207c31         db  0x00 ; '.'
0000000000207c32         db  0x00 ; '.'
0000000000207c33         db  0x00 ; '.'
0000000000207c34         db  0x00 ; '.'
0000000000207c35         db  0x00 ; '.'
0000000000207c36         db  0x00 ; '.'
0000000000207c37         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x207c38; 0x207e28[ (496 bytes)
        ; File offset : [31800; 32296[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000207c38         db  0x01 ; '.'
0000000000207c39         db  0x00 ; '.'
0000000000207c3a         db  0x00 ; '.'
0000000000207c3b         db  0x00 ; '.'
0000000000207c3c         db  0x00 ; '.'
0000000000207c3d         db  0x00 ; '.'
0000000000207c3e         db  0x00 ; '.'
0000000000207c3f         db  0x00 ; '.'
0000000000207c40         db  0x01 ; '.'
0000000000207c41         db  0x00 ; '.'
0000000000207c42         db  0x00 ; '.'
0000000000207c43         db  0x00 ; '.'
0000000000207c44         db  0x00 ; '.'
0000000000207c45         db  0x00 ; '.'
0000000000207c46         db  0x00 ; '.'
0000000000207c47         db  0x00 ; '.'
0000000000207c48         db  0x0c ; '.'
0000000000207c49         db  0x00 ; '.'
0000000000207c4a         db  0x00 ; '.'
0000000000207c4b         db  0x00 ; '.'
0000000000207c4c         db  0x00 ; '.'
0000000000207c4d         db  0x00 ; '.'
0000000000207c4e         db  0x00 ; '.'
0000000000207c4f         db  0x00 ; '.'
0000000000207c50         db  0x48 ; 'H'
0000000000207c51         db  0x14 ; '.'
0000000000207c52         db  0x00 ; '.'
0000000000207c53         db  0x00 ; '.'
0000000000207c54         db  0x00 ; '.'
0000000000207c55         db  0x00 ; '.'
0000000000207c56         db  0x00 ; '.'
0000000000207c57         db  0x00 ; '.'
0000000000207c58         db  0x0d ; '.'
0000000000207c59         db  0x00 ; '.'
0000000000207c5a         db  0x00 ; '.'
0000000000207c5b         db  0x00 ; '.'
0000000000207c5c         db  0x00 ; '.'
0000000000207c5d         db  0x00 ; '.'
0000000000207c5e         db  0x00 ; '.'
0000000000207c5f         db  0x00 ; '.'
0000000000207c60         db  0xe0 ; '.'
0000000000207c61         db  0x55 ; 'U'
0000000000207c62         db  0x00 ; '.'
0000000000207c63         db  0x00 ; '.'
0000000000207c64         db  0x00 ; '.'
0000000000207c65         db  0x00 ; '.'
0000000000207c66         db  0x00 ; '.'
0000000000207c67         db  0x00 ; '.'
0000000000207c68         db  0x19 ; '.'
0000000000207c69         db  0x00 ; '.'
0000000000207c6a         db  0x00 ; '.'
0000000000207c6b         db  0x00 ; '.'
0000000000207c6c         db  0x00 ; '.'
0000000000207c6d         db  0x00 ; '.'
0000000000207c6e         db  0x00 ; '.'
0000000000207c6f         db  0x00 ; '.'
0000000000207c70         db  0x10 ; '.'
0000000000207c71         db  0x7b ; '{'
0000000000207c72         db  0x20 ; ' '
0000000000207c73         db  0x00 ; '.'
0000000000207c74         db  0x00 ; '.'
0000000000207c75         db  0x00 ; '.'
0000000000207c76         db  0x00 ; '.'
0000000000207c77         db  0x00 ; '.'
0000000000207c78         db  0x1b ; '.'
0000000000207c79         db  0x00 ; '.'
0000000000207c7a         db  0x00 ; '.'
0000000000207c7b         db  0x00 ; '.'
0000000000207c7c         db  0x00 ; '.'
0000000000207c7d         db  0x00 ; '.'
0000000000207c7e         db  0x00 ; '.'
0000000000207c7f         db  0x00 ; '.'
0000000000207c80         db  0x08 ; '.'
0000000000207c81         db  0x00 ; '.'
0000000000207c82         db  0x00 ; '.'
0000000000207c83         db  0x00 ; '.'
0000000000207c84         db  0x00 ; '.'
0000000000207c85         db  0x00 ; '.'
0000000000207c86         db  0x00 ; '.'
0000000000207c87         db  0x00 ; '.'
0000000000207c88         db  0x1a ; '.'
0000000000207c89         db  0x00 ; '.'
0000000000207c8a         db  0x00 ; '.'
0000000000207c8b         db  0x00 ; '.'
0000000000207c8c         db  0x00 ; '.'
0000000000207c8d         db  0x00 ; '.'
0000000000207c8e         db  0x00 ; '.'
0000000000207c8f         db  0x00 ; '.'
0000000000207c90         db  0x18 ; '.'
0000000000207c91         db  0x7b ; '{'
0000000000207c92         db  0x20 ; ' '
0000000000207c93         db  0x00 ; '.'
0000000000207c94         db  0x00 ; '.'
0000000000207c95         db  0x00 ; '.'
0000000000207c96         db  0x00 ; '.'
0000000000207c97         db  0x00 ; '.'
0000000000207c98         db  0x1c ; '.'
0000000000207c99         db  0x00 ; '.'
0000000000207c9a         db  0x00 ; '.'
0000000000207c9b         db  0x00 ; '.'
0000000000207c9c         db  0x00 ; '.'
0000000000207c9d         db  0x00 ; '.'
0000000000207c9e         db  0x00 ; '.'
0000000000207c9f         db  0x00 ; '.'
0000000000207ca0         db  0x08 ; '.'
0000000000207ca1         db  0x00 ; '.'
0000000000207ca2         db  0x00 ; '.'
0000000000207ca3         db  0x00 ; '.'
0000000000207ca4         db  0x00 ; '.'
0000000000207ca5         db  0x00 ; '.'
0000000000207ca6         db  0x00 ; '.'
0000000000207ca7         db  0x00 ; '.'
0000000000207ca8         db  0xf5 ; '.'
0000000000207ca9         db  0xfe ; '.'
0000000000207caa         db  0xff ; '.'
0000000000207cab         db  0x6f ; 'o'
0000000000207cac         db  0x00 ; '.'
0000000000207cad         db  0x00 ; '.'
0000000000207cae         db  0x00 ; '.'
0000000000207caf         db  0x00 ; '.'
0000000000207cb0         db  0x98 ; '.'
0000000000207cb1         db  0x02 ; '.'
0000000000207cb2         db  0x00 ; '.'
0000000000207cb3         db  0x00 ; '.'
0000000000207cb4         db  0x00 ; '.'
0000000000207cb5         db  0x00 ; '.'
0000000000207cb6         db  0x00 ; '.'
0000000000207cb7         db  0x00 ; '.'
0000000000207cb8         db  0x05 ; '.'
0000000000207cb9         db  0x00 ; '.'
0000000000207cba         db  0x00 ; '.'
0000000000207cbb         db  0x00 ; '.'
0000000000207cbc         db  0x00 ; '.'
0000000000207cbd         db  0x00 ; '.'
0000000000207cbe         db  0x00 ; '.'
0000000000207cbf         db  0x00 ; '.'
0000000000207cc0         db  0xc8 ; '.'
0000000000207cc1         db  0x08 ; '.'
0000000000207cc2         db  0x00 ; '.'
0000000000207cc3         db  0x00 ; '.'
0000000000207cc4         db  0x00 ; '.'
0000000000207cc5         db  0x00 ; '.'
0000000000207cc6         db  0x00 ; '.'
0000000000207cc7         db  0x00 ; '.'
0000000000207cc8         db  0x06 ; '.'
0000000000207cc9         db  0x00 ; '.'
0000000000207cca         db  0x00 ; '.'
0000000000207ccb         db  0x00 ; '.'
0000000000207ccc         db  0x00 ; '.'
0000000000207ccd         db  0x00 ; '.'
0000000000207cce         db  0x00 ; '.'
0000000000207ccf         db  0x00 ; '.'
0000000000207cd0         db  0xe0 ; '.'
0000000000207cd1         db  0x02 ; '.'
0000000000207cd2         db  0x00 ; '.'
0000000000207cd3         db  0x00 ; '.'
0000000000207cd4         db  0x00 ; '.'
0000000000207cd5         db  0x00 ; '.'
0000000000207cd6         db  0x00 ; '.'
0000000000207cd7         db  0x00 ; '.'
0000000000207cd8         db  0x0a ; '.'
0000000000207cd9         db  0x00 ; '.'
0000000000207cda         db  0x00 ; '.'
0000000000207cdb         db  0x00 ; '.'
0000000000207cdc         db  0x00 ; '.'
0000000000207cdd         db  0x00 ; '.'
0000000000207cde         db  0x00 ; '.'
0000000000207cdf         db  0x00 ; '.'
0000000000207ce0         db  0xeb ; '.'
0000000000207ce1         db  0x02 ; '.'
0000000000207ce2         db  0x00 ; '.'
0000000000207ce3         db  0x00 ; '.'
0000000000207ce4         db  0x00 ; '.'
0000000000207ce5         db  0x00 ; '.'
0000000000207ce6         db  0x00 ; '.'
0000000000207ce7         db  0x00 ; '.'
0000000000207ce8         db  0x0b ; '.'
0000000000207ce9         db  0x00 ; '.'
0000000000207cea         db  0x00 ; '.'
0000000000207ceb         db  0x00 ; '.'
0000000000207cec         db  0x00 ; '.'
0000000000207ced         db  0x00 ; '.'
0000000000207cee         db  0x00 ; '.'
0000000000207cef         db  0x00 ; '.'
0000000000207cf0         db  0x18 ; '.'
0000000000207cf1         db  0x00 ; '.'
0000000000207cf2         db  0x00 ; '.'
0000000000207cf3         db  0x00 ; '.'
0000000000207cf4         db  0x00 ; '.'
0000000000207cf5         db  0x00 ; '.'
0000000000207cf6         db  0x00 ; '.'
0000000000207cf7         db  0x00 ; '.'
0000000000207cf8         db  0x15 ; '.'
0000000000207cf9         db  0x00 ; '.'
0000000000207cfa         db  0x00 ; '.'
0000000000207cfb         db  0x00 ; '.'
0000000000207cfc         db  0x00 ; '.'
0000000000207cfd         db  0x00 ; '.'
0000000000207cfe         db  0x00 ; '.'
0000000000207cff         db  0x00 ; '.'
0000000000207d00         db  0x00 ; '.'
0000000000207d01         db  0x00 ; '.'
0000000000207d02         db  0x00 ; '.'
0000000000207d03         db  0x00 ; '.'
0000000000207d04         db  0x00 ; '.'
0000000000207d05         db  0x00 ; '.'
0000000000207d06         db  0x00 ; '.'
0000000000207d07         db  0x00 ; '.'
0000000000207d08         db  0x03 ; '.'
0000000000207d09         db  0x00 ; '.'
0000000000207d0a         db  0x00 ; '.'
0000000000207d0b         db  0x00 ; '.'
0000000000207d0c         db  0x00 ; '.'
0000000000207d0d         db  0x00 ; '.'
0000000000207d0e         db  0x00 ; '.'
0000000000207d0f         db  0x00 ; '.'
0000000000207d10         db  0x28 ; '('
0000000000207d11         db  0x7e ; '~'
0000000000207d12         db  0x20 ; ' '
0000000000207d13         db  0x00 ; '.'
0000000000207d14         db  0x00 ; '.'
0000000000207d15         db  0x00 ; '.'
0000000000207d16         db  0x00 ; '.'
0000000000207d17         db  0x00 ; '.'
0000000000207d18         db  0x02 ; '.'
0000000000207d19         db  0x00 ; '.'
0000000000207d1a         db  0x00 ; '.'
0000000000207d1b         db  0x00 ; '.'
0000000000207d1c         db  0x00 ; '.'
0000000000207d1d         db  0x00 ; '.'
0000000000207d1e         db  0x00 ; '.'
0000000000207d1f         db  0x00 ; '.'
0000000000207d20         db  0x80 ; '.'
0000000000207d21         db  0x04 ; '.'
0000000000207d22         db  0x00 ; '.'
0000000000207d23         db  0x00 ; '.'
0000000000207d24         db  0x00 ; '.'
0000000000207d25         db  0x00 ; '.'
0000000000207d26         db  0x00 ; '.'
0000000000207d27         db  0x00 ; '.'
0000000000207d28         db  0x14 ; '.'
0000000000207d29         db  0x00 ; '.'
0000000000207d2a         db  0x00 ; '.'
0000000000207d2b         db  0x00 ; '.'
0000000000207d2c         db  0x00 ; '.'
0000000000207d2d         db  0x00 ; '.'
0000000000207d2e         db  0x00 ; '.'
0000000000207d2f         db  0x00 ; '.'
0000000000207d30         db  0x07 ; '.'
0000000000207d31         db  0x00 ; '.'
0000000000207d32         db  0x00 ; '.'
0000000000207d33         db  0x00 ; '.'
0000000000207d34         db  0x00 ; '.'
0000000000207d35         db  0x00 ; '.'
0000000000207d36         db  0x00 ; '.'
0000000000207d37         db  0x00 ; '.'
0000000000207d38         db  0x17 ; '.'
0000000000207d39         db  0x00 ; '.'
0000000000207d3a         db  0x00 ; '.'
0000000000207d3b         db  0x00 ; '.'
0000000000207d3c         db  0x00 ; '.'
0000000000207d3d         db  0x00 ; '.'
0000000000207d3e         db  0x00 ; '.'
0000000000207d3f         db  0x00 ; '.'
0000000000207d40         db  0xc8 ; '.'
0000000000207d41         db  0x0f ; '.'
0000000000207d42         db  0x00 ; '.'
0000000000207d43         db  0x00 ; '.'
0000000000207d44         db  0x00 ; '.'
0000000000207d45         db  0x00 ; '.'
0000000000207d46         db  0x00 ; '.'
0000000000207d47         db  0x00 ; '.'
0000000000207d48         db  0x07 ; '.'
0000000000207d49         db  0x00 ; '.'
0000000000207d4a         db  0x00 ; '.'
0000000000207d4b         db  0x00 ; '.'
0000000000207d4c         db  0x00 ; '.'
0000000000207d4d         db  0x00 ; '.'
0000000000207d4e         db  0x00 ; '.'
0000000000207d4f         db  0x00 ; '.'
0000000000207d50         db  0x98 ; '.'
0000000000207d51         db  0x0c ; '.'
0000000000207d52         db  0x00 ; '.'
0000000000207d53         db  0x00 ; '.'
0000000000207d54         db  0x00 ; '.'
0000000000207d55         db  0x00 ; '.'
0000000000207d56         db  0x00 ; '.'
0000000000207d57         db  0x00 ; '.'
0000000000207d58         db  0x08 ; '.'
0000000000207d59         db  0x00 ; '.'
0000000000207d5a         db  0x00 ; '.'
0000000000207d5b         db  0x00 ; '.'
0000000000207d5c         db  0x00 ; '.'
0000000000207d5d         db  0x00 ; '.'
0000000000207d5e         db  0x00 ; '.'
0000000000207d5f         db  0x00 ; '.'
0000000000207d60         db  0x30 ; '0'
0000000000207d61         db  0x03 ; '.'
0000000000207d62         db  0x00 ; '.'
0000000000207d63         db  0x00 ; '.'
0000000000207d64         db  0x00 ; '.'
0000000000207d65         db  0x00 ; '.'
0000000000207d66         db  0x00 ; '.'
0000000000207d67         db  0x00 ; '.'
0000000000207d68         db  0x09 ; '.'
0000000000207d69         db  0x00 ; '.'
0000000000207d6a         db  0x00 ; '.'
0000000000207d6b         db  0x00 ; '.'
0000000000207d6c         db  0x00 ; '.'
0000000000207d6d         db  0x00 ; '.'
0000000000207d6e         db  0x00 ; '.'
0000000000207d6f         db  0x00 ; '.'
0000000000207d70         db  0x18 ; '.'
0000000000207d71         db  0x00 ; '.'
0000000000207d72         db  0x00 ; '.'
0000000000207d73         db  0x00 ; '.'
0000000000207d74         db  0x00 ; '.'
0000000000207d75         db  0x00 ; '.'
0000000000207d76         db  0x00 ; '.'
0000000000207d77         db  0x00 ; '.'
0000000000207d78         db  0x1e ; '.'
0000000000207d79         db  0x00 ; '.'
0000000000207d7a         db  0x00 ; '.'
0000000000207d7b         db  0x00 ; '.'
0000000000207d7c         db  0x00 ; '.'
0000000000207d7d         db  0x00 ; '.'
0000000000207d7e         db  0x00 ; '.'
0000000000207d7f         db  0x00 ; '.'
0000000000207d80         db  0x08 ; '.'
0000000000207d81         db  0x00 ; '.'
0000000000207d82         db  0x00 ; '.'
0000000000207d83         db  0x00 ; '.'
0000000000207d84         db  0x00 ; '.'
0000000000207d85         db  0x00 ; '.'
0000000000207d86         db  0x00 ; '.'
0000000000207d87         db  0x00 ; '.'
0000000000207d88         db  0xfb ; '.'
0000000000207d89         db  0xff ; '.'
0000000000207d8a         db  0xff ; '.'
0000000000207d8b         db  0x6f ; 'o'
0000000000207d8c         db  0x00 ; '.'
0000000000207d8d         db  0x00 ; '.'
0000000000207d8e         db  0x00 ; '.'
0000000000207d8f         db  0x00 ; '.'
0000000000207d90         db  0x01 ; '.'
0000000000207d91         db  0x00 ; '.'
0000000000207d92         db  0x00 ; '.'
0000000000207d93         db  0x08 ; '.'
0000000000207d94         db  0x00 ; '.'
0000000000207d95         db  0x00 ; '.'
0000000000207d96         db  0x00 ; '.'
0000000000207d97         db  0x00 ; '.'
0000000000207d98         db  0xfe ; '.'
0000000000207d99         db  0xff ; '.'
0000000000207d9a         db  0xff ; '.'
0000000000207d9b         db  0x6f ; 'o'
0000000000207d9c         db  0x00 ; '.'
0000000000207d9d         db  0x00 ; '.'
0000000000207d9e         db  0x00 ; '.'
0000000000207d9f         db  0x00 ; '.'
0000000000207da0         db  0x38 ; '8'
0000000000207da1         db  0x0c ; '.'
0000000000207da2         db  0x00 ; '.'
0000000000207da3         db  0x00 ; '.'
0000000000207da4         db  0x00 ; '.'
0000000000207da5         db  0x00 ; '.'
0000000000207da6         db  0x00 ; '.'
0000000000207da7         db  0x00 ; '.'
0000000000207da8         db  0xff ; '.'
0000000000207da9         db  0xff ; '.'
0000000000207daa         db  0xff ; '.'
0000000000207dab         db  0x6f ; 'o'
0000000000207dac         db  0x00 ; '.'
0000000000207dad         db  0x00 ; '.'
0000000000207dae         db  0x00 ; '.'
0000000000207daf         db  0x00 ; '.'
0000000000207db0         db  0x01 ; '.'
0000000000207db1         db  0x00 ; '.'
0000000000207db2         db  0x00 ; '.'
0000000000207db3         db  0x00 ; '.'
0000000000207db4         db  0x00 ; '.'
0000000000207db5         db  0x00 ; '.'
0000000000207db6         db  0x00 ; '.'
0000000000207db7         db  0x00 ; '.'
0000000000207db8         db  0xf0 ; '.'
0000000000207db9         db  0xff ; '.'
0000000000207dba         db  0xff ; '.'
0000000000207dbb         db  0x6f ; 'o'
0000000000207dbc         db  0x00 ; '.'
0000000000207dbd         db  0x00 ; '.'
0000000000207dbe         db  0x00 ; '.'
0000000000207dbf         db  0x00 ; '.'
0000000000207dc0         db  0xb4 ; '.'
0000000000207dc1         db  0x0b ; '.'
0000000000207dc2         db  0x00 ; '.'
0000000000207dc3         db  0x00 ; '.'
0000000000207dc4         db  0x00 ; '.'
0000000000207dc5         db  0x00 ; '.'
0000000000207dc6         db  0x00 ; '.'
0000000000207dc7         db  0x00 ; '.'
0000000000207dc8         db  0xf9 ; '.'
0000000000207dc9         db  0xff ; '.'
0000000000207dca         db  0xff ; '.'
0000000000207dcb         db  0x6f ; 'o'
0000000000207dcc         db  0x00 ; '.'
0000000000207dcd         db  0x00 ; '.'
0000000000207dce         db  0x00 ; '.'
0000000000207dcf         db  0x00 ; '.'
0000000000207dd0         db  0x16 ; '.'
0000000000207dd1         db  0x00 ; '.'
0000000000207dd2         db  0x00 ; '.'
0000000000207dd3         db  0x00 ; '.'
0000000000207dd4         db  0x00 ; '.'
0000000000207dd5         db  0x00 ; '.'
0000000000207dd6         db  0x00 ; '.'
0000000000207dd7         db  0x00 ; '.'
0000000000207dd8         db  0x00 ; '.'
0000000000207dd9         db  0x00 ; '.'
0000000000207dda         db  0x00 ; '.'
0000000000207ddb         db  0x00 ; '.'
0000000000207ddc         db  0x00 ; '.'
0000000000207ddd         db  0x00 ; '.'
0000000000207dde         db  0x00 ; '.'
0000000000207ddf         db  0x00 ; '.'
0000000000207de0         db  0x00 ; '.'
0000000000207de1         db  0x00 ; '.'
0000000000207de2         db  0x00 ; '.'
0000000000207de3         db  0x00 ; '.'
0000000000207de4         db  0x00 ; '.'
0000000000207de5         db  0x00 ; '.'
0000000000207de6         db  0x00 ; '.'
0000000000207de7         db  0x00 ; '.'
0000000000207de8         db  0x00 ; '.'
0000000000207de9         db  0x00 ; '.'
0000000000207dea         db  0x00 ; '.'
0000000000207deb         db  0x00 ; '.'
0000000000207dec         db  0x00 ; '.'
0000000000207ded         db  0x00 ; '.'
0000000000207dee         db  0x00 ; '.'
0000000000207def         db  0x00 ; '.'
0000000000207df0         db  0x00 ; '.'
0000000000207df1         db  0x00 ; '.'
0000000000207df2         db  0x00 ; '.'
0000000000207df3         db  0x00 ; '.'
0000000000207df4         db  0x00 ; '.'
0000000000207df5         db  0x00 ; '.'
0000000000207df6         db  0x00 ; '.'
0000000000207df7         db  0x00 ; '.'
0000000000207df8         db  0x00 ; '.'
0000000000207df9         db  0x00 ; '.'
0000000000207dfa         db  0x00 ; '.'
0000000000207dfb         db  0x00 ; '.'
0000000000207dfc         db  0x00 ; '.'
0000000000207dfd         db  0x00 ; '.'
0000000000207dfe         db  0x00 ; '.'
0000000000207dff         db  0x00 ; '.'
0000000000207e00         db  0x00 ; '.'
0000000000207e01         db  0x00 ; '.'
0000000000207e02         db  0x00 ; '.'
0000000000207e03         db  0x00 ; '.'
0000000000207e04         db  0x00 ; '.'
0000000000207e05         db  0x00 ; '.'
0000000000207e06         db  0x00 ; '.'
0000000000207e07         db  0x00 ; '.'
0000000000207e08         db  0x00 ; '.'
0000000000207e09         db  0x00 ; '.'
0000000000207e0a         db  0x00 ; '.'
0000000000207e0b         db  0x00 ; '.'
0000000000207e0c         db  0x00 ; '.'
0000000000207e0d         db  0x00 ; '.'
0000000000207e0e         db  0x00 ; '.'
0000000000207e0f         db  0x00 ; '.'
0000000000207e10         db  0x00 ; '.'
0000000000207e11         db  0x00 ; '.'
0000000000207e12         db  0x00 ; '.'
0000000000207e13         db  0x00 ; '.'
0000000000207e14         db  0x00 ; '.'
0000000000207e15         db  0x00 ; '.'
0000000000207e16         db  0x00 ; '.'
0000000000207e17         db  0x00 ; '.'
0000000000207e18         db  0x00 ; '.'
0000000000207e19         db  0x00 ; '.'
0000000000207e1a         db  0x00 ; '.'
0000000000207e1b         db  0x00 ; '.'
0000000000207e1c         db  0x00 ; '.'
0000000000207e1d         db  0x00 ; '.'
0000000000207e1e         db  0x00 ; '.'
0000000000207e1f         db  0x00 ; '.'
0000000000207e20         db  0x00 ; '.'
0000000000207e21         db  0x00 ; '.'
0000000000207e22         db  0x00 ; '.'
0000000000207e23         db  0x00 ; '.'
0000000000207e24         db  0x00 ; '.'
0000000000207e25         db  0x00 ; '.'
0000000000207e26         db  0x00 ; '.'
0000000000207e27         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x207e28; 0x207fe8[ (448 bytes)
        ; File offset : [32296; 32744[ (448 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000207e28         db  0x38 ; '8'
0000000000207e29         db  0x7c ; '|'
0000000000207e2a         db  0x20 ; ' '
0000000000207e2b         db  0x00 ; '.'
0000000000207e2c         db  0x00 ; '.'
0000000000207e2d         db  0x00 ; '.'
0000000000207e2e         db  0x00 ; '.'
0000000000207e2f         db  0x00 ; '.'
                     qword_207e30:
0000000000207e30         dq         0x0000000000000000                          ; DATA XREF=0x1460
0000000000207e38         db  0x00 ; '.'                                         ; DATA XREF=0x1466
0000000000207e39         db  0x00 ; '.'
0000000000207e3a         db  0x00 ; '.'
0000000000207e3b         db  0x00 ; '.'
0000000000207e3c         db  0x00 ; '.'
0000000000207e3d         db  0x00 ; '.'
0000000000207e3e         db  0x00 ; '.'
0000000000207e3f         db  0x00 ; '.'
                     __uflow@GOT:        // __uflow
0000000000207e40         dq         0x00000000002082b0                          ; DATA XREF=j___uflow
                     free@GOT:        // free
0000000000207e48         dq         0x00000000002082b8                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000207e50         dq         0x00000000002082c0                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000207e58         dq         0x00000000002082c8                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000207e60         dq         0x00000000002082d0                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000207e68         dq         0x00000000002082e0                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000207e70         dq         0x00000000002082e8                          ; DATA XREF=j___fpending
                     clearerr_unlocked@GOT:        // clearerr_unlocked
0000000000207e78         dq         0x00000000002082f0                          ; DATA XREF=j_clearerr_unlocked
                     textdomain@GOT:        // textdomain
0000000000207e80         dq         0x00000000002082f8                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000207e88         dq         0x0000000000208300                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000207e90         dq         0x0000000000208308                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000207e98         dq         0x0000000000208310                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000207ea0         dq         0x0000000000208318                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000207ea8         dq         0x0000000000208320                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000207eb0         dq         0x0000000000208328                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000207eb8         dq         0x0000000000208330                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000207ec0         dq         0x0000000000208338                          ; DATA XREF=j_mbrtowc
                     __overflow@GOT:        // __overflow
0000000000207ec8         dq         0x0000000000208340                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000207ed0         dq         0x0000000000208348                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000207ed8         dq         0x0000000000208350                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000207ee0         dq         0x0000000000208358                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
0000000000207ee8         dq         0x0000000000208360                          ; DATA XREF=j_memset
                     strspn@GOT:        // strspn
0000000000207ef0         dq         0x0000000000208368                          ; DATA XREF=j_strspn
                     posix_fadvise@GOT:        // posix_fadvise
0000000000207ef8         dq         0x0000000000208370                          ; DATA XREF=j_posix_fadvise
                     strndup@GOT:        // strndup
0000000000207f00         dq         0x0000000000208378                          ; DATA XREF=j_strndup
                     memcmp@GOT:        // memcmp
0000000000207f08         dq         0x0000000000208388                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000207f10         dq         0x0000000000208390                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000207f18         dq         0x0000000000208398                          ; DATA XREF=j_calloc
                     memcpy@GOT:        // memcpy
0000000000207f20         dq         0x00000000002083a8                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000207f28         dq         0x00000000002083b0                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000207f30         dq         0x00000000002083b8                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000207f38         dq         0x00000000002083c0                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000207f40         dq         0x00000000002083c8                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000207f48         dq         0x00000000002083d0                          ; DATA XREF=j___freading
                     fwrite_unlocked@GOT:        // fwrite_unlocked
0000000000207f50         dq         0x00000000002083d8                          ; DATA XREF=j_fwrite_unlocked
                     realloc@GOT:        // realloc
0000000000207f58         dq         0x00000000002083e0                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000207f60         dq         0x00000000002083e8                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000207f68         dq         0x00000000002083f0                          ; DATA XREF=j___printf_chk
                     error@GOT:        // error
0000000000207f70         dq         0x00000000002083f8                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000207f78         dq         0x0000000000208400                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
0000000000207f80         dq         0x0000000000208408                          ; DATA XREF=j_fopen
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000207f88         dq         0x0000000000208410                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000207f90         dq         0x0000000000208418                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000207f98         dq         0x0000000000208420                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000207fa0         dq         0x0000000000208428                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000207fa8         dq         0x0000000000208438                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000207fb0         dq         0x0000000000208440                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000207fb8         dq         0x0000000000208450                          ; DATA XREF=j___ctype_b_loc
                     qword_207fc0:
0000000000207fc0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000207fc8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000207fc9         db  0x00 ; '.'
0000000000207fca         db  0x00 ; '.'
0000000000207fcb         db  0x00 ; '.'
0000000000207fcc         db  0x00 ; '.'
0000000000207fcd         db  0x00 ; '.'
0000000000207fce         db  0x00 ; '.'
0000000000207fcf         db  0x00 ; '.'
                     qword_207fd0:
0000000000207fd0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_207fd8:
0000000000207fd8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_207fe0:
0000000000207fe0         dq         0x0000000000000000                          ; DATA XREF=j_qword_207fe0, __do_global_dtors_aux+9
0000000000207fe8         db  0x00 ; '.'
0000000000207fe9         db  0x00 ; '.'
0000000000207fea         db  0x00 ; '.'
0000000000207feb         db  0x00 ; '.'
0000000000207fec         db  0x00 ; '.'
0000000000207fed         db  0x00 ; '.'
0000000000207fee         db  0x00 ; '.'
0000000000207fef         db  0x00 ; '.'
0000000000207ff0         db  0x00 ; '.'
0000000000207ff1         db  0x00 ; '.'
0000000000207ff2         db  0x00 ; '.'
0000000000207ff3         db  0x00 ; '.'
0000000000207ff4         db  0x00 ; '.'
0000000000207ff5         db  0x00 ; '.'
0000000000207ff6         db  0x00 ; '.'
0000000000207ff7         db  0x00 ; '.'
0000000000207ff8         db  0x00 ; '.'
0000000000207ff9         db  0x00 ; '.'
0000000000207ffa         db  0x00 ; '.'
0000000000207ffb         db  0x00 ; '.'
0000000000207ffc         db  0x00 ; '.'
0000000000207ffd         db  0x00 ; '.'
0000000000207ffe         db  0x00 ; '.'
0000000000207fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x208000; 0x2080a0[ (160 bytes)
        ; File offset : [32768; 32928[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000208000         db  0x00 ; '.'
0000000000208001         db  0x00 ; '.'
0000000000208002         db  0x00 ; '.'
0000000000208003         db  0x00 ; '.'
0000000000208004         db  0x00 ; '.'
0000000000208005         db  0x00 ; '.'
0000000000208006         db  0x00 ; '.'
0000000000208007         db  0x00 ; '.'
                     __dso_handle:
0000000000208008         dq         0x0000000000208008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     stdin_argv:
0000000000208010         db  0x0a ; '.'                                         ; DATA XREF=set_file_list
0000000000208011         db  0x5e ; '^'
0000000000208012         db  0x00 ; '.'
0000000000208013         db  0x00 ; '.'
0000000000208014         db  0x00 ; '.'
0000000000208015         db  0x00 ; '.'
0000000000208016         db  0x00 ; '.'
0000000000208017         db  0x00 ; '.'
0000000000208018         db  0x00 ; '.'
0000000000208019         db  0x00 ; '.'
000000000020801a         db  0x00 ; '.'
000000000020801b         db  0x00 ; '.'
000000000020801c         db  0x00 ; '.'
000000000020801d         db  0x00 ; '.'
000000000020801e         db  0x00 ; '.'
000000000020801f         db  0x00 ; '.'
                     Version:
0000000000208020         dq         0x0000000000005dba                          ; "8.31", DATA XREF=main+286
                     exit_failure:
0000000000208028         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020802c         db  0x00 ; '.'
000000000020802d         db  0x00 ; '.'
000000000020802e         db  0x00 ; '.'
000000000020802f         db  0x00 ; '.'
0000000000208030         db  0x00 ; '.'
0000000000208031         db  0x00 ; '.'
0000000000208032         db  0x00 ; '.'
0000000000208033         db  0x00 ; '.'
0000000000208034         db  0x00 ; '.'
0000000000208035         db  0x00 ; '.'
0000000000208036         db  0x00 ; '.'
0000000000208037         db  0x00 ; '.'
0000000000208038         db  0x00 ; '.'
0000000000208039         db  0x00 ; '.'
000000000020803a         db  0x00 ; '.'
000000000020803b         db  0x00 ; '.'
000000000020803c         db  0x00 ; '.'
000000000020803d         db  0x00 ; '.'
000000000020803e         db  0x00 ; '.'
000000000020803f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000208040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000208041         db  0x00 ; '.'
0000000000208042         db  0x00 ; '.'
0000000000208043         db  0x00 ; '.'
0000000000208044         db  0x00 ; '.'
0000000000208045         db  0x00 ; '.'
0000000000208046         db  0x00 ; '.'
0000000000208047         db  0x00 ; '.'
0000000000208048         db  0x00 ; '.'
0000000000208049         db  0x00 ; '.'
000000000020804a         db  0x00 ; '.'
000000000020804b         db  0x00 ; '.'
000000000020804c         db  0x00 ; '.'
000000000020804d         db  0x00 ; '.'
000000000020804e         db  0x00 ; '.'
000000000020804f         db  0x00 ; '.'
0000000000208050         db  0x00 ; '.'
0000000000208051         db  0x00 ; '.'
0000000000208052         db  0x00 ; '.'
0000000000208053         db  0x00 ; '.'
0000000000208054         db  0x00 ; '.'
0000000000208055         db  0x00 ; '.'
0000000000208056         db  0x00 ; '.'
0000000000208057         db  0x00 ; '.'
0000000000208058         db  0x00 ; '.'
0000000000208059         db  0x00 ; '.'
000000000020805a         db  0x00 ; '.'
000000000020805b         db  0x00 ; '.'
000000000020805c         db  0x00 ; '.'
000000000020805d         db  0x00 ; '.'
000000000020805e         db  0x00 ; '.'
000000000020805f         db  0x00 ; '.'
0000000000208060         db  0x00 ; '.'
0000000000208061         db  0x00 ; '.'
0000000000208062         db  0x00 ; '.'
0000000000208063         db  0x00 ; '.'
0000000000208064         db  0x00 ; '.'
0000000000208065         db  0x00 ; '.'
0000000000208066         db  0x00 ; '.'
0000000000208067         db  0x00 ; '.'
0000000000208068         db  0x00 ; '.'
0000000000208069         db  0x00 ; '.'
000000000020806a         db  0x00 ; '.'
000000000020806b         db  0x00 ; '.'
000000000020806c         db  0x00 ; '.'
000000000020806d         db  0x00 ; '.'
000000000020806e         db  0x00 ; '.'
000000000020806f         db  0x00 ; '.'
0000000000208070         db  0x00 ; '.'
0000000000208071         db  0x00 ; '.'
0000000000208072         db  0x00 ; '.'
0000000000208073         db  0x00 ; '.'
0000000000208074         db  0x00 ; '.'
0000000000208075         db  0x00 ; '.'
0000000000208076         db  0x00 ; '.'
0000000000208077         db  0x00 ; '.'
                     nslots:
0000000000208078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020807c         db  0x00 ; '.'
000000000020807d         db  0x00 ; '.'
000000000020807e         db  0x00 ; '.'
000000000020807f         db  0x00 ; '.'
                     slotvec:
0000000000208080         dq         0x0000000000208090                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
0000000000208088         db  0x00 ; '.'
0000000000208089         db  0x00 ; '.'
000000000020808a         db  0x00 ; '.'
000000000020808b         db  0x00 ; '.'
000000000020808c         db  0x00 ; '.'
000000000020808d         db  0x00 ; '.'
000000000020808e         db  0x00 ; '.'
000000000020808f         db  0x00 ; '.'
                     slotvec0:
0000000000208090         dq         1.26481e-321, 1.05249e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x2080a0; 0x2082a0[ (512 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
00000000002080a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
00000000002080a1         db  0x00 ; '.'
00000000002080a2         db  0x00 ; '.'
00000000002080a3         db  0x00 ; '.'
00000000002080a4         db  0x00 ; '.'
00000000002080a5         db  0x00 ; '.'
00000000002080a6         db  0x00 ; '.'
00000000002080a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
00000000002080a8         db  0x00 ; '.'                                         ; DATA XREF=main+279, main+629, main+704, usage+125, usage+162, usage+199, usage+236, usage+278, usage+315, usage+912, emit_tab_list_info+1
00000000002080a9         db  0x00 ; '.'
00000000002080aa         db  0x00 ; '.'
00000000002080ab         db  0x00 ; '.'
00000000002080ac         db  0x00 ; '.'
00000000002080ad         db  0x00 ; '.'
00000000002080ae         db  0x00 ; '.'
00000000002080af         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
00000000002080b0         db  0x00 ; '.'                                         ; DATA XREF=next_file+128, cleanup_file_list_stdin+20
00000000002080b1         db  0x00 ; '.'
00000000002080b2         db  0x00 ; '.'
00000000002080b3         db  0x00 ; '.'
00000000002080b4         db  0x00 ; '.'
00000000002080b5         db  0x00 ; '.'
00000000002080b6         db  0x00 ; '.'
00000000002080b7         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
00000000002080b8         db  0x00 ; '.'                                         ; DATA XREF=main+469
00000000002080b9         db  0x00 ; '.'
00000000002080ba         db  0x00 ; '.'
00000000002080bb         db  0x00 ; '.'
00000000002080bc         db  0x00 ; '.'
00000000002080bd         db  0x00 ; '.'
00000000002080be         db  0x00 ; '.'
00000000002080bf         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
00000000002080c0         db  0x00 ; '.'                                         ; DATA XREF=main+400
00000000002080c1         db  0x00 ; '.'
00000000002080c2         db  0x00 ; '.'
00000000002080c3         db  0x00 ; '.'
00000000002080c4         db  0x00 ; '.'
00000000002080c5         db  0x00 ; '.'
00000000002080c6         db  0x00 ; '.'
00000000002080c7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002080c8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002080c9         db  0x00 ; '.'
00000000002080ca         db  0x00 ; '.'
00000000002080cb         db  0x00 ; '.'
00000000002080cc         db  0x00 ; '.'
00000000002080cd         db  0x00 ; '.'
00000000002080ce         db  0x00 ; '.'
00000000002080cf         db  0x00 ; '.'
00000000002080d0         db  0x00 ; '.'
00000000002080d1         db  0x00 ; '.'
00000000002080d2         db  0x00 ; '.'
00000000002080d3         db  0x00 ; '.'
00000000002080d4         db  0x00 ; '.'
00000000002080d5         db  0x00 ; '.'
00000000002080d6         db  0x00 ; '.'
00000000002080d7         db  0x00 ; '.'
00000000002080d8         db  0x00 ; '.'
00000000002080d9         db  0x00 ; '.'
00000000002080da         db  0x00 ; '.'
00000000002080db         db  0x00 ; '.'
00000000002080dc         db  0x00 ; '.'
00000000002080dd         db  0x00 ; '.'
00000000002080de         db  0x00 ; '.'
00000000002080df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002080e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
00000000002080e1         db  0x00 ; '.'
00000000002080e2         db  0x00 ; '.'
00000000002080e3         db  0x00 ; '.'
00000000002080e4         db  0x00 ; '.'
00000000002080e5         db  0x00 ; '.'
00000000002080e6         db  0x00 ; '.'
00000000002080e7         db  0x00 ; '.'
                     completed.7697:
00000000002080e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
00000000002080e9         db  0x00 ; '.'
00000000002080ea         db  0x00 ; '.'
00000000002080eb         db  0x00 ; '.'
00000000002080ec         db  0x00 ; '.'
00000000002080ed         db  0x00 ; '.'
00000000002080ee         db  0x00 ; '.'
00000000002080ef         db  0x00 ; '.'
                     exit_status:
00000000002080f0         db  0x00 ; '.'                                         ; DATA XREF=main+1094, next_file+195, next_file+397, next_file+460
00000000002080f1         db  0x00 ; '.'
00000000002080f2         db  0x00 ; '.'
00000000002080f3         db  0x00 ; '.'
                     convert_entire_line:
00000000002080f4         db  0x00 ; '.'                                         ; DATA XREF=main+336, main+407, main+448, main+678
00000000002080f5         db  0x00 ; '.'
00000000002080f6         db  0x00 ; '.'
00000000002080f7         db  0x00 ; '.'
                     prev_file.6959:
00000000002080f8         db  0x00 ; '.'                                         ; DATA XREF=next_file+13, next_file+285, next_file+349, next_file+470
00000000002080f9         db  0x00 ; '.'
00000000002080fa         db  0x00 ; '.'
00000000002080fb         db  0x00 ; '.'
00000000002080fc         db  0x00 ; '.'
00000000002080fd         db  0x00 ; '.'
00000000002080fe         db  0x00 ; '.'
00000000002080ff         db  0x00 ; '.'
                     have_read_stdin:
0000000000208100         db  0x00 ; '.'                                         ; DATA XREF=set_file_list+10, next_file+135, cleanup_file_list_stdin
0000000000208101         db  0x00 ; '.'
0000000000208102         db  0x00 ; '.'
0000000000208103         db  0x00 ; '.'
0000000000208104         db  0x00 ; '.'
0000000000208105         db  0x00 ; '.'
0000000000208106         db  0x00 ; '.'
0000000000208107         db  0x00 ; '.'
                     file_list:
0000000000208108         db  0x00 ; '.'                                         ; DATA XREF=set_file_list+21, next_file+79, next_file+90, next_file+188, next_file+209
0000000000208109         db  0x00 ; '.'
000000000020810a         db  0x00 ; '.'
000000000020810b         db  0x00 ; '.'
000000000020810c         db  0x00 ; '.'
000000000020810d         db  0x00 ; '.'
000000000020810e         db  0x00 ; '.'
000000000020810f         db  0x00 ; '.'
                     first_free_tab:
0000000000208110         db  0x00 ; '.'                                         ; DATA XREF=add_tab_stop+9, add_tab_stop+70, add_tab_stop+111, add_tab_stop+203, finalize_tab_stops+4, get_next_tab_column+18
0000000000208111         db  0x00 ; '.'
0000000000208112         db  0x00 ; '.'
0000000000208113         db  0x00 ; '.'
0000000000208114         db  0x00 ; '.'
0000000000208115         db  0x00 ; '.'
0000000000208116         db  0x00 ; '.'
0000000000208117         db  0x00 ; '.'
                     n_tabs_allocated:
0000000000208118         db  0x00 ; '.'                                         ; DATA XREF=add_tab_stop+23, add_tab_stop+177
0000000000208119         db  0x00 ; '.'
000000000020811a         db  0x00 ; '.'
000000000020811b         db  0x00 ; '.'
000000000020811c         db  0x00 ; '.'
000000000020811d         db  0x00 ; '.'
000000000020811e         db  0x00 ; '.'
000000000020811f         db  0x00 ; '.'
                     tab_list:
0000000000208120         db  0x00 ; '.'                                         ; DATA XREF=add_tab_stop+16, add_tab_stop+196, finalize_tab_stops+11, get_next_tab_column+30, get_next_tab_column+136
0000000000208121         db  0x00 ; '.'
0000000000208122         db  0x00 ; '.'
0000000000208123         db  0x00 ; '.'
0000000000208124         db  0x00 ; '.'
0000000000208125         db  0x00 ; '.'
0000000000208126         db  0x00 ; '.'
0000000000208127         db  0x00 ; '.'
                     increment_size:
0000000000208128         db  0x00 ; '.'                                         ; DATA XREF=set_increment_size, set_increment_size+54, finalize_tab_stops+82, finalize_tab_stops+148, get_next_tab_column+90
0000000000208129         db  0x00 ; '.'
000000000020812a         db  0x00 ; '.'
000000000020812b         db  0x00 ; '.'
000000000020812c         db  0x00 ; '.'
000000000020812d         db  0x00 ; '.'
000000000020812e         db  0x00 ; '.'
000000000020812f         db  0x00 ; '.'
                     extend_size:
0000000000208130         db  0x00 ; '.'                                         ; DATA XREF=set_extend_size, set_extend_size+54, finalize_tab_stops+94, finalize_tab_stops+130, finalize_tab_stops+155, get_next_tab_column+78
0000000000208131         db  0x00 ; '.'
0000000000208132         db  0x00 ; '.'
0000000000208133         db  0x00 ; '.'
0000000000208134         db  0x00 ; '.'
0000000000208135         db  0x00 ; '.'
0000000000208136         db  0x00 ; '.'
0000000000208137         db  0x00 ; '.'
                     tab_size:
0000000000208138         db  0x00 ; '.'                                         ; DATA XREF=finalize_tab_stops+114, finalize_tab_stops+139, finalize_tab_stops+182, get_next_tab_column
0000000000208139         db  0x00 ; '.'
000000000020813a         db  0x00 ; '.'
000000000020813b         db  0x00 ; '.'
000000000020813c         db  0x00 ; '.'
000000000020813d         db  0x00 ; '.'
000000000020813e         db  0x00 ; '.'
000000000020813f         db  0x00 ; '.'
                     ignore_EPIPE:
0000000000208140         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
0000000000208141         db  0x00 ; '.'
0000000000208142         db  0x00 ; '.'
0000000000208143         db  0x00 ; '.'
0000000000208144         db  0x00 ; '.'
0000000000208145         db  0x00 ; '.'
0000000000208146         db  0x00 ; '.'
0000000000208147         db  0x00 ; '.'
                     file_name:
0000000000208148         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
0000000000208149         db  0x00 ; '.'
000000000020814a         db  0x00 ; '.'
000000000020814b         db  0x00 ; '.'
000000000020814c         db  0x00 ; '.'
000000000020814d         db  0x00 ; '.'
000000000020814e         db  0x00 ; '.'
000000000020814f         db  0x00 ; '.'
                     program_name:
0000000000208150         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
0000000000208151         db  0x00 ; '.'
0000000000208152         db  0x00 ; '.'
0000000000208153         db  0x00 ; '.'
0000000000208154         db  0x00 ; '.'
0000000000208155         db  0x00 ; '.'
0000000000208156         db  0x00 ; '.'
0000000000208157         db  0x00 ; '.'
0000000000208158         db  0x00 ; '.'
0000000000208159         db  0x00 ; '.'
000000000020815a         db  0x00 ; '.'
000000000020815b         db  0x00 ; '.'
000000000020815c         db  0x00 ; '.'
000000000020815d         db  0x00 ; '.'
000000000020815e         db  0x00 ; '.'
000000000020815f         db  0x00 ; '.'
                     slot0:
0000000000208160         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000208161         db  0x00 ; '.'
0000000000208162         db  0x00 ; '.'
0000000000208163         db  0x00 ; '.'
0000000000208164         db  0x00 ; '.'
0000000000208165         db  0x00 ; '.'
0000000000208166         db  0x00 ; '.'
0000000000208167         db  0x00 ; '.'
0000000000208168         db  0x00 ; '.'
0000000000208169         db  0x00 ; '.'
000000000020816a         db  0x00 ; '.'
000000000020816b         db  0x00 ; '.'
000000000020816c         db  0x00 ; '.'
000000000020816d         db  0x00 ; '.'
000000000020816e         db  0x00 ; '.'
000000000020816f         db  0x00 ; '.'
0000000000208170         db  0x00 ; '.'
0000000000208171         db  0x00 ; '.'
0000000000208172         db  0x00 ; '.'
0000000000208173         db  0x00 ; '.'
0000000000208174         db  0x00 ; '.'
0000000000208175         db  0x00 ; '.'
0000000000208176         db  0x00 ; '.'
0000000000208177         db  0x00 ; '.'
0000000000208178         db  0x00 ; '.'
0000000000208179         db  0x00 ; '.'
000000000020817a         db  0x00 ; '.'
000000000020817b         db  0x00 ; '.'
000000000020817c         db  0x00 ; '.'
000000000020817d         db  0x00 ; '.'
000000000020817e         db  0x00 ; '.'
000000000020817f         db  0x00 ; '.'
0000000000208180         db  0x00 ; '.'
0000000000208181         db  0x00 ; '.'
0000000000208182         db  0x00 ; '.'
0000000000208183         db  0x00 ; '.'
0000000000208184         db  0x00 ; '.'
0000000000208185         db  0x00 ; '.'
0000000000208186         db  0x00 ; '.'
0000000000208187         db  0x00 ; '.'
0000000000208188         db  0x00 ; '.'
0000000000208189         db  0x00 ; '.'
000000000020818a         db  0x00 ; '.'
000000000020818b         db  0x00 ; '.'
000000000020818c         db  0x00 ; '.'
000000000020818d         db  0x00 ; '.'
000000000020818e         db  0x00 ; '.'
000000000020818f         db  0x00 ; '.'
0000000000208190         db  0x00 ; '.'
0000000000208191         db  0x00 ; '.'
0000000000208192         db  0x00 ; '.'
0000000000208193         db  0x00 ; '.'
0000000000208194         db  0x00 ; '.'
0000000000208195         db  0x00 ; '.'
0000000000208196         db  0x00 ; '.'
0000000000208197         db  0x00 ; '.'
0000000000208198         db  0x00 ; '.'
0000000000208199         db  0x00 ; '.'
000000000020819a         db  0x00 ; '.'
000000000020819b         db  0x00 ; '.'
000000000020819c         db  0x00 ; '.'
000000000020819d         db  0x00 ; '.'
000000000020819e         db  0x00 ; '.'
000000000020819f         db  0x00 ; '.'
00000000002081a0         db  0x00 ; '.'
00000000002081a1         db  0x00 ; '.'
00000000002081a2         db  0x00 ; '.'
00000000002081a3         db  0x00 ; '.'
00000000002081a4         db  0x00 ; '.'
00000000002081a5         db  0x00 ; '.'
00000000002081a6         db  0x00 ; '.'
00000000002081a7         db  0x00 ; '.'
00000000002081a8         db  0x00 ; '.'
00000000002081a9         db  0x00 ; '.'
00000000002081aa         db  0x00 ; '.'
00000000002081ab         db  0x00 ; '.'
00000000002081ac         db  0x00 ; '.'
00000000002081ad         db  0x00 ; '.'
00000000002081ae         db  0x00 ; '.'
00000000002081af         db  0x00 ; '.'
00000000002081b0         db  0x00 ; '.'
00000000002081b1         db  0x00 ; '.'
00000000002081b2         db  0x00 ; '.'
00000000002081b3         db  0x00 ; '.'
00000000002081b4         db  0x00 ; '.'
00000000002081b5         db  0x00 ; '.'
00000000002081b6         db  0x00 ; '.'
00000000002081b7         db  0x00 ; '.'
00000000002081b8         db  0x00 ; '.'
00000000002081b9         db  0x00 ; '.'
00000000002081ba         db  0x00 ; '.'
00000000002081bb         db  0x00 ; '.'
00000000002081bc         db  0x00 ; '.'
00000000002081bd         db  0x00 ; '.'
00000000002081be         db  0x00 ; '.'
00000000002081bf         db  0x00 ; '.'
00000000002081c0         db  0x00 ; '.'
00000000002081c1         db  0x00 ; '.'
00000000002081c2         db  0x00 ; '.'
00000000002081c3         db  0x00 ; '.'
00000000002081c4         db  0x00 ; '.'
00000000002081c5         db  0x00 ; '.'
00000000002081c6         db  0x00 ; '.'
00000000002081c7         db  0x00 ; '.'
00000000002081c8         db  0x00 ; '.'
00000000002081c9         db  0x00 ; '.'
00000000002081ca         db  0x00 ; '.'
00000000002081cb         db  0x00 ; '.'
00000000002081cc         db  0x00 ; '.'
00000000002081cd         db  0x00 ; '.'
00000000002081ce         db  0x00 ; '.'
00000000002081cf         db  0x00 ; '.'
00000000002081d0         db  0x00 ; '.'
00000000002081d1         db  0x00 ; '.'
00000000002081d2         db  0x00 ; '.'
00000000002081d3         db  0x00 ; '.'
00000000002081d4         db  0x00 ; '.'
00000000002081d5         db  0x00 ; '.'
00000000002081d6         db  0x00 ; '.'
00000000002081d7         db  0x00 ; '.'
00000000002081d8         db  0x00 ; '.'
00000000002081d9         db  0x00 ; '.'
00000000002081da         db  0x00 ; '.'
00000000002081db         db  0x00 ; '.'
00000000002081dc         db  0x00 ; '.'
00000000002081dd         db  0x00 ; '.'
00000000002081de         db  0x00 ; '.'
00000000002081df         db  0x00 ; '.'
00000000002081e0         db  0x00 ; '.'
00000000002081e1         db  0x00 ; '.'
00000000002081e2         db  0x00 ; '.'
00000000002081e3         db  0x00 ; '.'
00000000002081e4         db  0x00 ; '.'
00000000002081e5         db  0x00 ; '.'
00000000002081e6         db  0x00 ; '.'
00000000002081e7         db  0x00 ; '.'
00000000002081e8         db  0x00 ; '.'
00000000002081e9         db  0x00 ; '.'
00000000002081ea         db  0x00 ; '.'
00000000002081eb         db  0x00 ; '.'
00000000002081ec         db  0x00 ; '.'
00000000002081ed         db  0x00 ; '.'
00000000002081ee         db  0x00 ; '.'
00000000002081ef         db  0x00 ; '.'
00000000002081f0         db  0x00 ; '.'
00000000002081f1         db  0x00 ; '.'
00000000002081f2         db  0x00 ; '.'
00000000002081f3         db  0x00 ; '.'
00000000002081f4         db  0x00 ; '.'
00000000002081f5         db  0x00 ; '.'
00000000002081f6         db  0x00 ; '.'
00000000002081f7         db  0x00 ; '.'
00000000002081f8         db  0x00 ; '.'
00000000002081f9         db  0x00 ; '.'
00000000002081fa         db  0x00 ; '.'
00000000002081fb         db  0x00 ; '.'
00000000002081fc         db  0x00 ; '.'
00000000002081fd         db  0x00 ; '.'
00000000002081fe         db  0x00 ; '.'
00000000002081ff         db  0x00 ; '.'
0000000000208200         db  0x00 ; '.'
0000000000208201         db  0x00 ; '.'
0000000000208202         db  0x00 ; '.'
0000000000208203         db  0x00 ; '.'
0000000000208204         db  0x00 ; '.'
0000000000208205         db  0x00 ; '.'
0000000000208206         db  0x00 ; '.'
0000000000208207         db  0x00 ; '.'
0000000000208208         db  0x00 ; '.'
0000000000208209         db  0x00 ; '.'
000000000020820a         db  0x00 ; '.'
000000000020820b         db  0x00 ; '.'
000000000020820c         db  0x00 ; '.'
000000000020820d         db  0x00 ; '.'
000000000020820e         db  0x00 ; '.'
000000000020820f         db  0x00 ; '.'
0000000000208210         db  0x00 ; '.'
0000000000208211         db  0x00 ; '.'
0000000000208212         db  0x00 ; '.'
0000000000208213         db  0x00 ; '.'
0000000000208214         db  0x00 ; '.'
0000000000208215         db  0x00 ; '.'
0000000000208216         db  0x00 ; '.'
0000000000208217         db  0x00 ; '.'
0000000000208218         db  0x00 ; '.'
0000000000208219         db  0x00 ; '.'
000000000020821a         db  0x00 ; '.'
000000000020821b         db  0x00 ; '.'
000000000020821c         db  0x00 ; '.'
000000000020821d         db  0x00 ; '.'
000000000020821e         db  0x00 ; '.'
000000000020821f         db  0x00 ; '.'
0000000000208220         db  0x00 ; '.'
0000000000208221         db  0x00 ; '.'
0000000000208222         db  0x00 ; '.'
0000000000208223         db  0x00 ; '.'
0000000000208224         db  0x00 ; '.'
0000000000208225         db  0x00 ; '.'
0000000000208226         db  0x00 ; '.'
0000000000208227         db  0x00 ; '.'
0000000000208228         db  0x00 ; '.'
0000000000208229         db  0x00 ; '.'
000000000020822a         db  0x00 ; '.'
000000000020822b         db  0x00 ; '.'
000000000020822c         db  0x00 ; '.'
000000000020822d         db  0x00 ; '.'
000000000020822e         db  0x00 ; '.'
000000000020822f         db  0x00 ; '.'
0000000000208230         db  0x00 ; '.'
0000000000208231         db  0x00 ; '.'
0000000000208232         db  0x00 ; '.'
0000000000208233         db  0x00 ; '.'
0000000000208234         db  0x00 ; '.'
0000000000208235         db  0x00 ; '.'
0000000000208236         db  0x00 ; '.'
0000000000208237         db  0x00 ; '.'
0000000000208238         db  0x00 ; '.'
0000000000208239         db  0x00 ; '.'
000000000020823a         db  0x00 ; '.'
000000000020823b         db  0x00 ; '.'
000000000020823c         db  0x00 ; '.'
000000000020823d         db  0x00 ; '.'
000000000020823e         db  0x00 ; '.'
000000000020823f         db  0x00 ; '.'
0000000000208240         db  0x00 ; '.'
0000000000208241         db  0x00 ; '.'
0000000000208242         db  0x00 ; '.'
0000000000208243         db  0x00 ; '.'
0000000000208244         db  0x00 ; '.'
0000000000208245         db  0x00 ; '.'
0000000000208246         db  0x00 ; '.'
0000000000208247         db  0x00 ; '.'
0000000000208248         db  0x00 ; '.'
0000000000208249         db  0x00 ; '.'
000000000020824a         db  0x00 ; '.'
000000000020824b         db  0x00 ; '.'
000000000020824c         db  0x00 ; '.'
000000000020824d         db  0x00 ; '.'
000000000020824e         db  0x00 ; '.'
000000000020824f         db  0x00 ; '.'
0000000000208250         db  0x00 ; '.'
0000000000208251         db  0x00 ; '.'
0000000000208252         db  0x00 ; '.'
0000000000208253         db  0x00 ; '.'
0000000000208254         db  0x00 ; '.'
0000000000208255         db  0x00 ; '.'
0000000000208256         db  0x00 ; '.'
0000000000208257         db  0x00 ; '.'
0000000000208258         db  0x00 ; '.'
0000000000208259         db  0x00 ; '.'
000000000020825a         db  0x00 ; '.'
000000000020825b         db  0x00 ; '.'
000000000020825c         db  0x00 ; '.'
000000000020825d         db  0x00 ; '.'
000000000020825e         db  0x00 ; '.'
000000000020825f         db  0x00 ; '.'
                     default_quoting_options:
0000000000208260         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000208261         db  0x00 ; '.'
0000000000208262         db  0x00 ; '.'
0000000000208263         db  0x00 ; '.'
0000000000208264         db  0x00 ; '.'
0000000000208265         db  0x00 ; '.'
0000000000208266         db  0x00 ; '.'
0000000000208267         db  0x00 ; '.'
0000000000208268         db  0x00 ; '.'
0000000000208269         db  0x00 ; '.'
000000000020826a         db  0x00 ; '.'
000000000020826b         db  0x00 ; '.'
000000000020826c         db  0x00 ; '.'
000000000020826d         db  0x00 ; '.'
000000000020826e         db  0x00 ; '.'
000000000020826f         db  0x00 ; '.'
0000000000208270         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000208271         db  0x00 ; '.'
0000000000208272         db  0x00 ; '.'
0000000000208273         db  0x00 ; '.'
0000000000208274         db  0x00 ; '.'
0000000000208275         db  0x00 ; '.'
0000000000208276         db  0x00 ; '.'
0000000000208277         db  0x00 ; '.'
0000000000208278         db  0x00 ; '.'
0000000000208279         db  0x00 ; '.'
000000000020827a         db  0x00 ; '.'
000000000020827b         db  0x00 ; '.'
000000000020827c         db  0x00 ; '.'
000000000020827d         db  0x00 ; '.'
000000000020827e         db  0x00 ; '.'
000000000020827f         db  0x00 ; '.'
0000000000208280         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000208281         db  0x00 ; '.'
0000000000208282         db  0x00 ; '.'
0000000000208283         db  0x00 ; '.'
0000000000208284         db  0x00 ; '.'
0000000000208285         db  0x00 ; '.'
0000000000208286         db  0x00 ; '.'
0000000000208287         db  0x00 ; '.'
0000000000208288         db  0x00 ; '.'
0000000000208289         db  0x00 ; '.'
000000000020828a         db  0x00 ; '.'
000000000020828b         db  0x00 ; '.'
000000000020828c         db  0x00 ; '.'
000000000020828d         db  0x00 ; '.'
000000000020828e         db  0x00 ; '.'
000000000020828f         db  0x00 ; '.'
                     qword_208290:
0000000000208290         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000208291         db  0x00 ; '.'
0000000000208292         db  0x00 ; '.'
0000000000208293         db  0x00 ; '.'
0000000000208294         db  0x00 ; '.'
0000000000208295         db  0x00 ; '.'
0000000000208296         db  0x00 ; '.'
0000000000208297         db  0x00 ; '.'
                     max_column_width:
0000000000208298         db  0x00 ; '.'                                         ; DATA XREF=main+510, add_tab_stop+100, add_tab_stop+120, finalize_tab_stops+175
0000000000208299         db  0x00 ; '.'
000000000020829a         db  0x00 ; '.'
000000000020829b         db  0x00 ; '.'
000000000020829c         db  0x00 ; '.'
000000000020829d         db  0x00 ; '.'
000000000020829e         db  0x00 ; '.'
000000000020829f         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x2082b0; 0x208600[ (848 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x2082b0; 0x4108b0[ (2131456 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __uflow:
00000000002082b0         extern function code                                   ; DATA XREF=__uflow@GOT
                     free:
00000000002082b8         extern function code                                   ; DATA XREF=free@GOT
                     abort:
00000000002082c0         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
00000000002082c8         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
00000000002082d0         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
00000000002082d8         extern function code
                     _exit:
00000000002082e0         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
00000000002082e8         extern function code                                   ; DATA XREF=__fpending@GOT
                     clearerr_unlocked:
00000000002082f0         extern function code                                   ; DATA XREF=clearerr_unlocked@GOT
                     textdomain:
00000000002082f8         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
0000000000208300         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
0000000000208308         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
0000000000208310         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
0000000000208318         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
0000000000208320         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
0000000000208328         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
0000000000208330         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
0000000000208338         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     __overflow:
0000000000208340         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
0000000000208348         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
0000000000208350         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
0000000000208358         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
0000000000208360         extern function code                                   ; DATA XREF=memset@GOT
                     strspn:
0000000000208368         extern function code                                   ; DATA XREF=strspn@GOT
                     posix_fadvise:
0000000000208370         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     strndup:
0000000000208378         extern function code                                   ; DATA XREF=strndup@GOT
                     __libc_start_main:
0000000000208380         extern function code
                     memcmp:
0000000000208388         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000208390         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000208398         extern function code                                   ; DATA XREF=calloc@GOT
                     __gmon_start__:
00000000002083a0         extern function code
                     memcpy:
00000000002083a8         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
00000000002083b0         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
00000000002083b8         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
00000000002083c0         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
00000000002083c8         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
00000000002083d0         extern function code                                   ; DATA XREF=__freading@GOT
                     fwrite_unlocked:
00000000002083d8         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     realloc:
00000000002083e0         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
00000000002083e8         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
00000000002083f0         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     error:
00000000002083f8         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
0000000000208400         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
0000000000208408         extern function code                                   ; DATA XREF=fopen@GOT
                     __cxa_atexit:
0000000000208410         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
0000000000208418         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
0000000000208420         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
0000000000208428         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
0000000000208430         extern function code
                     mbsinit:
0000000000208438         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
0000000000208440         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
0000000000208448         extern function code
                     __ctype_b_loc:
0000000000208450         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __uflow@@GLIBC_2.2.5:
0000000000208458         extern function code
                     free@@GLIBC_2.2.5:
0000000000208460         extern function code
                     abort@@GLIBC_2.2.5:
0000000000208468         extern function code
                     __errno_location@@GLIBC_2.2.5:
0000000000208470         extern function code
                     strncmp@@GLIBC_2.2.5:
0000000000208478         extern function code
                     _ITM_deregisterTMCloneTable_208480:        // _ITM_deregisterTMCloneTable
0000000000208480         extern function code
                     _exit@@GLIBC_2.2.5:
0000000000208488         extern function code
                     __fpending@@GLIBC_2.2.5:
0000000000208490         extern function code
                     clearerr_unlocked@@GLIBC_2.2.5:
0000000000208498         extern function code
                     textdomain@@GLIBC_2.2.5:
00000000002084a0         extern function code
                     fclose@@GLIBC_2.2.5:
00000000002084a8         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
00000000002084b0         extern function code
                     dcgettext@@GLIBC_2.2.5:
00000000002084b8         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
00000000002084c0         extern function code
                     strlen@@GLIBC_2.2.5:
00000000002084c8         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
00000000002084d0         extern function code
                     getopt_long@@GLIBC_2.2.5:
00000000002084d8         extern function code
                     mbrtowc@@GLIBC_2.2.5:
00000000002084e0         extern function code
                     __overflow@@GLIBC_2.2.5:
00000000002084e8         extern function code
                     strrchr@@GLIBC_2.2.5:
00000000002084f0         extern function code
                     lseek@@GLIBC_2.2.5:
00000000002084f8         extern function code
                     __assert_fail@@GLIBC_2.2.5:
0000000000208500         extern function code
                     memset@@GLIBC_2.2.5:
0000000000208508         extern function code
                     strspn@@GLIBC_2.2.5:
0000000000208510         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
0000000000208518         extern function code
                     strndup@@GLIBC_2.2.5:
0000000000208520         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
0000000000208528         extern function code
                     memcmp@@GLIBC_2.2.5:
0000000000208530         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
0000000000208538         extern function code
                     calloc@@GLIBC_2.2.5:
0000000000208540         extern function code
                     __gmon_start___208548:        // __gmon_start__
0000000000208548         extern function code
                     memcpy@@GLIBC_2.14:
0000000000208550         extern function code
                     fileno@@GLIBC_2.2.5:
0000000000208558         extern function code
                     malloc@@GLIBC_2.2.5:
0000000000208560         extern function code
                     fflush@@GLIBC_2.2.5:
0000000000208568         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
0000000000208570         extern function code
                     __freading@@GLIBC_2.2.5:
0000000000208578         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
0000000000208580         extern function code
                     realloc@@GLIBC_2.2.5:
0000000000208588         extern function code
                     setlocale@@GLIBC_2.2.5:
0000000000208590         extern function code
                     __printf_chk@@GLIBC_2.3.4:
0000000000208598         extern function code
                     error@@GLIBC_2.2.5:
00000000002085a0         extern function code
                     fseeko@@GLIBC_2.2.5:
00000000002085a8         extern function code
                     fopen@@GLIBC_2.2.5:
00000000002085b0         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
00000000002085b8         extern function code
                     exit@@GLIBC_2.2.5:
00000000002085c0         extern function code
                     fwrite@@GLIBC_2.2.5:
00000000002085c8         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
00000000002085d0         extern function code
                     _ITM_registerTMCloneTable_2085d8:        // _ITM_registerTMCloneTable
00000000002085d8         extern function code
                     mbsinit@@GLIBC_2.2.5:
00000000002085e0         extern function code
                     iswprint@@GLIBC_2.2.5:
00000000002085e8         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
00000000002085f0         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
00000000002085f8         extern function code
