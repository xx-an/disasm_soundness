
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/stdbuf
        UUID: 03A2A4CF-186F-DEA0-012A-FC6D628DED57
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x9ed0[ (40656 bytes)
        ; File offset : [0; 40656[ (40656 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0xb0 ; '.'
0000000000000019         db  0x1f ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x90 ; '.'
0000000000000029         db  0x76 ; 'v'
000000000000002a         db  0x03 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0xd0 ; '.'
00000000000000d1         db  0x9e ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0xd0 ; '.'
00000000000000d9         db  0x9e ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0xd0 ; '.'
00000000000000f1         db  0xaa ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0xd0 ; '.'
00000000000000f9         db  0xaa ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0xd0 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0xaa ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0xb0 ; '.'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0xc8 ; '.'
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x20 ; ' '
0000000000000129         db  0xac ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x20 ; ' '
0000000000000131         db  0xac ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x20 ; ' '
0000000000000139         db  0xac ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'                                         ; DATA XREF=main+1497
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'                                         ; DATA XREF=main+593, main+1157
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x6c ; 'l'
0000000000000199         db  0x8e ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x6c ; 'l'
00000000000001a1         db  0x8e ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x6c ; 'l'
00000000000001a9         db  0x8e ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xc4 ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xc4 ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=xstrtoumax+573
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0xd0 ; '.'
0000000000000209         db  0xaa ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0xd0 ; '.'
0000000000000211         db  0xaa ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0xd0 ; '.'
0000000000000219         db  0xaa ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x30 ; '0'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x30 ; '0'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000000238         db  0x2f ; '/'
0000000000000239         db  0x6c ; 'l'
000000000000023a         db  0x69 ; 'i'
000000000000023b         db  0x62 ; 'b'
000000000000023c         db  0x36 ; '6'
000000000000023d         db  0x34 ; '4'
000000000000023e         db  0x2f ; '/'
000000000000023f         db  0x6c ; 'l'
0000000000000240         db  0x64 ; 'd'
0000000000000241         db  0x2d ; '-'
0000000000000242         db  0x6c ; 'l'
0000000000000243         db  0x69 ; 'i'
0000000000000244         db  0x6e ; 'n'
0000000000000245         db  0x75 ; 'u'
0000000000000246         db  0x78 ; 'x'
0000000000000247         db  0x2d ; '-'
0000000000000248         db  0x78 ; 'x'
0000000000000249         db  0x38 ; '8'
000000000000024a         db  0x36 ; '6'
000000000000024b         db  0x2d ; '-'
000000000000024c         db  0x36 ; '6'
000000000000024d         db  0x34 ; '4'
000000000000024e         db  0x2e ; '.'
000000000000024f         db  0x73 ; 's'
0000000000000250         db  0x6f ; 'o'
0000000000000251         db  0x2e ; '.'
0000000000000252         db  0x32 ; '2'
0000000000000253         db  0x00 ; '.'


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x03 ; '.'
0000000000000285         db  0xa2 ; '.'
0000000000000286         db  0xa4 ; '.'
0000000000000287         db  0xcf ; '.'
0000000000000288         db  0x18 ; '.'
0000000000000289         db  0x6f ; 'o'
000000000000028a         db  0xde ; '.'
000000000000028b         db  0xa0 ; '.'
000000000000028c         db  0x01 ; '.'
000000000000028d         db  0x2a ; '*'
000000000000028e         db  0xfc ; '.'
000000000000028f         db  0x6d ; 'm'
0000000000000290         db  0x62 ; 'b'
0000000000000291         db  0x8d ; '.'
0000000000000292         db  0xed ; '.'
0000000000000293         db  0x57 ; 'W'
0000000000000294         db  0x42 ; 'B'
0000000000000295         db  0x08 ; '.'
0000000000000296         db  0x95 ; '.'
0000000000000297         db  0x30 ; '0'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x3a ; ':'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x3a ; ':'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x3b ; ';'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x40 ; '@'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x32 ; '2'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'
00000000000002d8         db  0xb3 ; '.'
00000000000002d9         db  0xa2 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x910[ (1584 bytes)
        ; File offset : [736; 2320[ (1584 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0xe1 ; '.'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x58 ; 'X'
0000000000000311         db  0x01 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x78 ; 'x'
0000000000000329         db  0x01 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x5d ; ']'
0000000000000341         db  0x02 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x7a ; 'z'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0xdf ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x31 ; '1'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xc1 ; '.'
00000000000003a1         db  0x02 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x20 ; ' '
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x80 ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0xb1 ; '.'
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x87 ; '.'                                         ; DATA XREF=xstrtoumax+420
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x10 ; '.'                                         ; DATA XREF=xstrtoumax+437, xstrtoumax+806, xstrtoumax+878, careadlinkat+77
0000000000000401         db  0x02 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'                                         ; DATA XREF=vasnprintf+29
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x28 ; '('
0000000000000419         db  0x01 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'                                         ; DATA XREF=careadlinkat+19, careadlinkat+263
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x0c ; '.'
0000000000000431         db  0x02 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x48 ; 'H'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0xac ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0xd1 ; '.'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x58 ; 'X'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x90 ; '.'
00000000000004a9         db  0x01 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x29 ; ')'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0xbc ; '.'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x40 ; '@'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x1b ; '.'
0000000000000509         db  0x01 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x9e ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x3b ; ';'
0000000000000539         db  0x02 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0xd8 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x22 ; '"'
0000000000000569         db  0x02 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0xf0 ; '.'
0000000000000581         db  0x00 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x4e ; 'N'
0000000000000599         db  0x02 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0xca ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x0d ; '.'
00000000000005c9         db  0x01 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0xdd ; '.'
00000000000005e1         db  0x02 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x20 ; ' '
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x21 ; '!'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0xa3 ; '.'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x04 ; '.'
0000000000000629         db  0x02 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x2f ; '/'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x0b ; '.'
0000000000000659         db  0x00 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x3e ; '>'
0000000000000671         db  0x01 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x66 ; 'f'
0000000000000689         db  0x01 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x72 ; 'r'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x1f ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x12 ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0xf7 ; '.'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x52 ; 'R'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x1b ; '.'
0000000000000719         db  0x02 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x34 ; '4'
0000000000000731         db  0x02 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0xc3 ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x9c ; '.'
0000000000000761         db  0x01 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x7d ; '}'
0000000000000779         db  0x02 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x81 ; '.'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0xaa ; '.'
00000000000007a9         db  0x01 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0xff ; '.'
00000000000007c1         db  0x00 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0xec ; '.'
00000000000007d9         db  0x02 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x20 ; ' '
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x36 ; '6'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x69 ; 'i'
0000000000000809         db  0x00 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0xf5 ; '.'
0000000000000821         db  0x01 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x22 ; '"'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x4a ; 'J'
0000000000000839         db  0x01 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x14 ; '.'
0000000000000851         db  0x01 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x11 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x88 ; '.'
0000000000000859         db  0xb0 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x08 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x62 ; 'b'
0000000000000869         db  0x02 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x11 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x19 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x80 ; '.'
0000000000000871         db  0xb0 ; '.'
0000000000000872         db  0x20 ; ' '
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x08 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x86 ; '.'
0000000000000881         db  0x00 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x21 ; '!'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x19 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0xa0 ; '.'
0000000000000889         db  0xb0 ; '.'
000000000000088a         db  0x20 ; ' '
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x08 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x6d ; 'm'
0000000000000899         db  0x02 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x11 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0xa0 ; '.'
00000000000008a1         db  0xb0 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x08 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0xc3 ; '.'
00000000000008b1         db  0x01 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x21 ; '!'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x19 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x80 ; '.'
00000000000008b9         db  0xb0 ; '.'
00000000000008ba         db  0x20 ; ' '
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x08 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x71 ; 'q'
00000000000008c9         db  0x01 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x11 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x19 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0xc0 ; '.'
00000000000008d1         db  0xb0 ; '.'
00000000000008d2         db  0x20 ; ' '
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x08 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x39 ; '9'
00000000000008e1         db  0x00 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x11 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x19 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x90 ; '.'
00000000000008e9         db  0xb0 ; '.'
00000000000008ea         db  0x20 ; ' '
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x04 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x5f ; '_'
00000000000008f9         db  0x01 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x11 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x19 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0x98 ; '.'
0000000000000901         db  0xb0 ; '.'
0000000000000902         db  0x20 ; ' '
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x08 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x910; 0xc16[ (774 bytes)
        ; File offset : [2320; 3094[ (774 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000910         db  0x00 ; '.'
0000000000000911         db  0x6c ; 'l'
0000000000000912         db  0x69 ; 'i'
0000000000000913         db  0x62 ; 'b'
0000000000000914         db  0x63 ; 'c'
0000000000000915         db  0x2e ; '.'
0000000000000916         db  0x73 ; 's'
0000000000000917         db  0x6f ; 'o'
0000000000000918         db  0x2e ; '.'
0000000000000919         db  0x36 ; '6'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x66 ; 'f'
000000000000091c         db  0x66 ; 'f'
000000000000091d         db  0x6c ; 'l'
000000000000091e         db  0x75 ; 'u'
000000000000091f         db  0x73 ; 's'
0000000000000920         db  0x68 ; 'h'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x5f ; '_'
0000000000000923         db  0x5f ; '_'
0000000000000924         db  0x70 ; 'p'
0000000000000925         db  0x72 ; 'r'
0000000000000926         db  0x69 ; 'i'
0000000000000927         db  0x6e ; 'n'
0000000000000928         db  0x74 ; 't'
0000000000000929         db  0x66 ; 'f'
000000000000092a         db  0x5f ; '_'
000000000000092b         db  0x63 ; 'c'
000000000000092c         db  0x68 ; 'h'
000000000000092d         db  0x6b ; 'k'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x73 ; 's'
0000000000000930         db  0x65 ; 'e'
0000000000000931         db  0x74 ; 't'
0000000000000932         db  0x6c ; 'l'
0000000000000933         db  0x6f ; 'o'
0000000000000934         db  0x63 ; 'c'
0000000000000935         db  0x61 ; 'a'
0000000000000936         db  0x6c ; 'l'
0000000000000937         db  0x65 ; 'e'
0000000000000938         db  0x00 ; '.'
0000000000000939         db  0x6d ; 'm'
000000000000093a         db  0x62 ; 'b'
000000000000093b         db  0x72 ; 'r'
000000000000093c         db  0x74 ; 't'
000000000000093d         db  0x6f ; 'o'
000000000000093e         db  0x77 ; 'w'
000000000000093f         db  0x63 ; 'c'
0000000000000940         db  0x00 ; '.'
0000000000000941         db  0x73 ; 's'
0000000000000942         db  0x74 ; 't'
0000000000000943         db  0x72 ; 'r'
0000000000000944         db  0x6e ; 'n'
0000000000000945         db  0x63 ; 'c'
0000000000000946         db  0x6d ; 'm'
0000000000000947         db  0x70 ; 'p'
0000000000000948         db  0x00 ; '.'
0000000000000949         db  0x6f ; 'o'
000000000000094a         db  0x70 ; 'p'
000000000000094b         db  0x74 ; 't'
000000000000094c         db  0x69 ; 'i'
000000000000094d         db  0x6e ; 'n'
000000000000094e         db  0x64 ; 'd'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x73 ; 's'
0000000000000951         db  0x74 ; 't'
0000000000000952         db  0x72 ; 'r'
0000000000000953         db  0x72 ; 'r'
0000000000000954         db  0x63 ; 'c'
0000000000000955         db  0x68 ; 'h'
0000000000000956         db  0x72 ; 'r'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0x64 ; 'd'
0000000000000959         db  0x63 ; 'c'
000000000000095a         db  0x67 ; 'g'
000000000000095b         db  0x65 ; 'e'
000000000000095c         db  0x74 ; 't'
000000000000095d         db  0x74 ; 't'
000000000000095e         db  0x65 ; 'e'
000000000000095f         db  0x78 ; 'x'
0000000000000960         db  0x74 ; 't'
0000000000000961         db  0x00 ; '.'
0000000000000962         db  0x65 ; 'e'
0000000000000963         db  0x72 ; 'r'
0000000000000964         db  0x72 ; 'r'
0000000000000965         db  0x6f ; 'o'
0000000000000966         db  0x72 ; 'r'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x5f ; '_'
0000000000000969         db  0x5f ; '_'
000000000000096a         db  0x73 ; 's'
000000000000096b         db  0x74 ; 't'
000000000000096c         db  0x61 ; 'a'
000000000000096d         db  0x63 ; 'c'
000000000000096e         db  0x6b ; 'k'
000000000000096f         db  0x5f ; '_'
0000000000000970         db  0x63 ; 'c'
0000000000000971         db  0x68 ; 'h'
0000000000000972         db  0x6b ; 'k'
0000000000000973         db  0x5f ; '_'
0000000000000974         db  0x66 ; 'f'
0000000000000975         db  0x61 ; 'a'
0000000000000976         db  0x69 ; 'i'
0000000000000977         db  0x6c ; 'l'
0000000000000978         db  0x00 ; '.'
0000000000000979         db  0x69 ; 'i'
000000000000097a         db  0x73 ; 's'
000000000000097b         db  0x77 ; 'w'
000000000000097c         db  0x70 ; 'p'
000000000000097d         db  0x72 ; 'r'
000000000000097e         db  0x69 ; 'i'
000000000000097f         db  0x6e ; 'n'
0000000000000980         db  0x74 ; 't'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x72 ; 'r'
0000000000000983         db  0x65 ; 'e'
0000000000000984         db  0x61 ; 'a'
0000000000000985         db  0x6c ; 'l'
0000000000000986         db  0x6c ; 'l'
0000000000000987         db  0x6f ; 'o'
0000000000000988         db  0x63 ; 'c'
0000000000000989         db  0x00 ; '.'
000000000000098a         db  0x61 ; 'a'
000000000000098b         db  0x62 ; 'b'
000000000000098c         db  0x6f ; 'o'
000000000000098d         db  0x72 ; 'r'
000000000000098e         db  0x74 ; 't'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x5f ; '_'
0000000000000991         db  0x65 ; 'e'
0000000000000992         db  0x78 ; 'x'
0000000000000993         db  0x69 ; 'i'
0000000000000994         db  0x74 ; 't'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x70 ; 'p'
0000000000000997         db  0x72 ; 'r'
0000000000000998         db  0x6f ; 'o'
0000000000000999         db  0x67 ; 'g'
000000000000099a         db  0x72 ; 'r'
000000000000099b         db  0x61 ; 'a'
000000000000099c         db  0x6d ; 'm'
000000000000099d         db  0x5f ; '_'
000000000000099e         db  0x69 ; 'i'
000000000000099f         db  0x6e ; 'n'
00000000000009a0         db  0x76 ; 'v'
00000000000009a1         db  0x6f ; 'o'
00000000000009a2         db  0x63 ; 'c'
00000000000009a3         db  0x61 ; 'a'
00000000000009a4         db  0x74 ; 't'
00000000000009a5         db  0x69 ; 'i'
00000000000009a6         db  0x6f ; 'o'
00000000000009a7         db  0x6e ; 'n'
00000000000009a8         db  0x5f ; '_'
00000000000009a9         db  0x6e ; 'n'
00000000000009aa         db  0x61 ; 'a'
00000000000009ab         db  0x6d ; 'm'
00000000000009ac         db  0x65 ; 'e'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x5f ; '_'
00000000000009af         db  0x5f ; '_'
00000000000009b0         db  0x61 ; 'a'
00000000000009b1         db  0x73 ; 's'
00000000000009b2         db  0x73 ; 's'
00000000000009b3         db  0x65 ; 'e'
00000000000009b4         db  0x72 ; 'r'
00000000000009b5         db  0x74 ; 't'
00000000000009b6         db  0x5f ; '_'
00000000000009b7         db  0x66 ; 'f'
00000000000009b8         db  0x61 ; 'a'
00000000000009b9         db  0x69 ; 'i'
00000000000009ba         db  0x6c ; 'l'
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x5f ; '_'
00000000000009bd         db  0x5f ; '_'
00000000000009be         db  0x63 ; 'c'
00000000000009bf         db  0x74 ; 't'
00000000000009c0         db  0x79 ; 'y'
00000000000009c1         db  0x70 ; 'p'
00000000000009c2         db  0x65 ; 'e'
00000000000009c3         db  0x5f ; '_'
00000000000009c4         db  0x67 ; 'g'
00000000000009c5         db  0x65 ; 'e'
00000000000009c6         db  0x74 ; 't'
00000000000009c7         db  0x5f ; '_'
00000000000009c8         db  0x6d ; 'm'
00000000000009c9         db  0x62 ; 'b'
00000000000009ca         db  0x5f ; '_'
00000000000009cb         db  0x63 ; 'c'
00000000000009cc         db  0x75 ; 'u'
00000000000009cd         db  0x72 ; 'r'
00000000000009ce         db  0x5f ; '_'
00000000000009cf         db  0x6d ; 'm'
00000000000009d0         db  0x61 ; 'a'
00000000000009d1         db  0x78 ; 'x'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x73 ; 's'
00000000000009d4         db  0x74 ; 't'
00000000000009d5         db  0x72 ; 'r'
00000000000009d6         db  0x74 ; 't'
00000000000009d7         db  0x6f ; 'o'
00000000000009d8         db  0x6b ; 'k'
00000000000009d9         db  0x00 ; '.'
00000000000009da         db  0x63 ; 'c'
00000000000009db         db  0x61 ; 'a'
00000000000009dc         db  0x6c ; 'l'
00000000000009dd         db  0x6c ; 'l'
00000000000009de         db  0x6f ; 'o'
00000000000009df         db  0x63 ; 'c'
00000000000009e0         db  0x00 ; '.'
00000000000009e1         db  0x73 ; 's'
00000000000009e2         db  0x74 ; 't'
00000000000009e3         db  0x72 ; 'r'
00000000000009e4         db  0x6c ; 'l'
00000000000009e5         db  0x65 ; 'e'
00000000000009e6         db  0x6e ; 'n'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0x6d ; 'm'
00000000000009e9         db  0x65 ; 'e'
00000000000009ea         db  0x6d ; 'm'
00000000000009eb         db  0x73 ; 's'
00000000000009ec         db  0x65 ; 'e'
00000000000009ed         db  0x74 ; 't'
00000000000009ee         db  0x00 ; '.'
00000000000009ef         db  0x5f ; '_'
00000000000009f0         db  0x5f ; '_'
00000000000009f1         db  0x65 ; 'e'
00000000000009f2         db  0x72 ; 'r'
00000000000009f3         db  0x72 ; 'r'
00000000000009f4         db  0x6e ; 'n'
00000000000009f5         db  0x6f ; 'o'
00000000000009f6         db  0x5f ; '_'
00000000000009f7         db  0x6c ; 'l'
00000000000009f8         db  0x6f ; 'o'
00000000000009f9         db  0x63 ; 'c'
00000000000009fa         db  0x61 ; 'a'
00000000000009fb         db  0x74 ; 't'
00000000000009fc         db  0x69 ; 'i'
00000000000009fd         db  0x6f ; 'o'
00000000000009fe         db  0x6e ; 'n'
00000000000009ff         db  0x00 ; '.'
                     aMemcmp:
0000000000000a00         db         "memcmp", 0
0000000000000a07         db  0x6d ; 'm'
0000000000000a08         db  0x65 ; 'e'
0000000000000a09         db  0x6d ; 'm'
0000000000000a0a         db  0x70 ; 'p'
0000000000000a0b         db  0x63 ; 'c'
0000000000000a0c         db  0x70 ; 'p'
0000000000000a0d         db  0x79 ; 'y'
0000000000000a0e         db  0x00 ; '.'
0000000000000a0f         db  0x5f ; '_'
0000000000000a10         db  0x5f ; '_'
0000000000000a11         db  0x66 ; 'f'
0000000000000a12         db  0x70 ; 'p'
0000000000000a13         db  0x72 ; 'r'
0000000000000a14         db  0x69 ; 'i'
0000000000000a15         db  0x6e ; 'n'
0000000000000a16         db  0x74 ; 't'
0000000000000a17         db  0x66 ; 'f'
0000000000000a18         db  0x5f ; '_'
0000000000000a19         db  0x63 ; 'c'
0000000000000a1a         db  0x68 ; 'h'
0000000000000a1b         db  0x6b ; 'k'
0000000000000a1c         db  0x00 ; '.'
0000000000000a1d         db  0x70 ; 'p'
0000000000000a1e         db  0x75 ; 'u'
0000000000000a1f         db  0x74 ; 't'
0000000000000a20         db  0x65 ; 'e'
0000000000000a21         db  0x6e ; 'n'
0000000000000a22         db  0x76 ; 'v'
0000000000000a23         db  0x00 ; '.'
0000000000000a24         db  0x73 ; 's'
0000000000000a25         db  0x74 ; 't'
0000000000000a26         db  0x64 ; 'd'
0000000000000a27         db  0x6f ; 'o'
0000000000000a28         db  0x75 ; 'u'
0000000000000a29         db  0x74 ; 't'
0000000000000a2a         db  0x00 ; '.'
0000000000000a2b         db  0x6c ; 'l'
0000000000000a2c         db  0x73 ; 's'
0000000000000a2d         db  0x65 ; 'e'
0000000000000a2e         db  0x65 ; 'e'
0000000000000a2f         db  0x6b ; 'k'
0000000000000a30         db  0x00 ; '.'
0000000000000a31         db  0x6d ; 'm'
0000000000000a32         db  0x65 ; 'e'
0000000000000a33         db  0x6d ; 'm'
0000000000000a34         db  0x63 ; 'c'
0000000000000a35         db  0x70 ; 'p'
0000000000000a36         db  0x79 ; 'y'
0000000000000a37         db  0x00 ; '.'
0000000000000a38         db  0x66 ; 'f'
0000000000000a39         db  0x63 ; 'c'
0000000000000a3a         db  0x6c ; 'l'
0000000000000a3b         db  0x6f ; 'o'
0000000000000a3c         db  0x73 ; 's'
0000000000000a3d         db  0x65 ; 'e'
0000000000000a3e         db  0x00 ; '.'
0000000000000a3f         db  0x6d ; 'm'
0000000000000a40         db  0x61 ; 'a'
0000000000000a41         db  0x6c ; 'l'
0000000000000a42         db  0x6c ; 'l'
0000000000000a43         db  0x6f ; 'o'
0000000000000a44         db  0x63 ; 'c'
0000000000000a45         db  0x00 ; '.'
0000000000000a46         db  0x6d ; 'm'
0000000000000a47         db  0x62 ; 'b'
0000000000000a48         db  0x73 ; 's'
0000000000000a49         db  0x69 ; 'i'
0000000000000a4a         db  0x6e ; 'n'
0000000000000a4b         db  0x69 ; 'i'
0000000000000a4c         db  0x74 ; 't'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x6e ; 'n'
0000000000000a4f         db  0x6c ; 'l'
0000000000000a50         db  0x5f ; '_'
0000000000000a51         db  0x6c ; 'l'
0000000000000a52         db  0x61 ; 'a'
0000000000000a53         db  0x6e ; 'n'
0000000000000a54         db  0x67 ; 'g'
0000000000000a55         db  0x69 ; 'i'
0000000000000a56         db  0x6e ; 'n'
0000000000000a57         db  0x66 ; 'f'
0000000000000a58         db  0x6f ; 'o'
0000000000000a59         db  0x00 ; '.'
0000000000000a5a         db  0x5f ; '_'
0000000000000a5b         db  0x5f ; '_'
0000000000000a5c         db  0x63 ; 'c'
0000000000000a5d         db  0x74 ; 't'
0000000000000a5e         db  0x79 ; 'y'
0000000000000a5f         db  0x70 ; 'p'
0000000000000a60         db  0x65 ; 'e'
0000000000000a61         db  0x5f ; '_'
0000000000000a62         db  0x62 ; 'b'
0000000000000a63         db  0x5f ; '_'
0000000000000a64         db  0x6c ; 'l'
0000000000000a65         db  0x6f ; 'o'
0000000000000a66         db  0x63 ; 'c'
0000000000000a67         db  0x00 ; '.'
0000000000000a68         db  0x67 ; 'g'
0000000000000a69         db  0x65 ; 'e'
0000000000000a6a         db  0x74 ; 't'
0000000000000a6b         db  0x65 ; 'e'
0000000000000a6c         db  0x6e ; 'n'
0000000000000a6d         db  0x76 ; 'v'
0000000000000a6e         db  0x00 ; '.'
0000000000000a6f         db  0x6f ; 'o'
0000000000000a70         db  0x70 ; 'p'
0000000000000a71         db  0x74 ; 't'
0000000000000a72         db  0x61 ; 'a'
0000000000000a73         db  0x72 ; 'r'
0000000000000a74         db  0x67 ; 'g'
0000000000000a75         db  0x00 ; '.'
0000000000000a76         db  0x5f ; '_'
0000000000000a77         db  0x5f ; '_'
0000000000000a78         db  0x66 ; 'f'
0000000000000a79         db  0x72 ; 'r'
0000000000000a7a         db  0x65 ; 'e'
0000000000000a7b         db  0x61 ; 'a'
0000000000000a7c         db  0x64 ; 'd'
0000000000000a7d         db  0x69 ; 'i'
0000000000000a7e         db  0x6e ; 'n'
0000000000000a7f         db  0x67 ; 'g'
0000000000000a80         db  0x00 ; '.'
0000000000000a81         db  0x73 ; 's'
0000000000000a82         db  0x74 ; 't'
0000000000000a83         db  0x64 ; 'd'
0000000000000a84         db  0x65 ; 'e'
0000000000000a85         db  0x72 ; 'r'
0000000000000a86         db  0x72 ; 'r'
0000000000000a87         db  0x00 ; '.'
0000000000000a88         db  0x5f ; '_'
0000000000000a89         db  0x5f ; '_'
0000000000000a8a         db  0x73 ; 's'
0000000000000a8b         db  0x6e ; 'n'
0000000000000a8c         db  0x70 ; 'p'
0000000000000a8d         db  0x72 ; 'r'
0000000000000a8e         db  0x69 ; 'i'
0000000000000a8f         db  0x6e ; 'n'
0000000000000a90         db  0x74 ; 't'
0000000000000a91         db  0x66 ; 'f'
0000000000000a92         db  0x5f ; '_'
0000000000000a93         db  0x63 ; 'c'
0000000000000a94         db  0x68 ; 'h'
0000000000000a95         db  0x6b ; 'k'
0000000000000a96         db  0x00 ; '.'
0000000000000a97         db  0x72 ; 'r'
0000000000000a98         db  0x65 ; 'e'
0000000000000a99         db  0x61 ; 'a'
0000000000000a9a         db  0x64 ; 'd'
0000000000000a9b         db  0x6c ; 'l'
0000000000000a9c         db  0x69 ; 'i'
0000000000000a9d         db  0x6e ; 'n'
0000000000000a9e         db  0x6b ; 'k'
0000000000000a9f         db  0x00 ; '.'
0000000000000aa0         db  0x67 ; 'g'
0000000000000aa1         db  0x65 ; 'e'
0000000000000aa2         db  0x74 ; 't'
0000000000000aa3         db  0x6f ; 'o'
0000000000000aa4         db  0x70 ; 'p'
0000000000000aa5         db  0x74 ; 't'
0000000000000aa6         db  0x5f ; '_'
0000000000000aa7         db  0x6c ; 'l'
0000000000000aa8         db  0x6f ; 'o'
0000000000000aa9         db  0x6e ; 'n'
0000000000000aaa         db  0x67 ; 'g'
0000000000000aab         db  0x00 ; '.'
0000000000000aac         db  0x65 ; 'e'
0000000000000aad         db  0x78 ; 'x'
0000000000000aae         db  0x65 ; 'e'
0000000000000aaf         db  0x63 ; 'c'
0000000000000ab0         db  0x76 ; 'v'
0000000000000ab1         db  0x70 ; 'p'
0000000000000ab2         db  0x00 ; '.'
0000000000000ab3         db  0x66 ; 'f'
0000000000000ab4         db  0x69 ; 'i'
0000000000000ab5         db  0x6c ; 'l'
0000000000000ab6         db  0x65 ; 'e'
0000000000000ab7         db  0x6e ; 'n'
0000000000000ab8         db  0x6f ; 'o'
0000000000000ab9         db  0x00 ; '.'
0000000000000aba         db  0x66 ; 'f'
0000000000000abb         db  0x77 ; 'w'
0000000000000abc         db  0x72 ; 'r'
0000000000000abd         db  0x69 ; 'i'
0000000000000abe         db  0x74 ; 't'
0000000000000abf         db  0x65 ; 'e'
0000000000000ac0         db  0x00 ; '.'
0000000000000ac1         db  0x5f ; '_'
0000000000000ac2         db  0x5f ; '_'
0000000000000ac3         db  0x66 ; 'f'
0000000000000ac4         db  0x70 ; 'p'
0000000000000ac5         db  0x65 ; 'e'
0000000000000ac6         db  0x6e ; 'n'
0000000000000ac7         db  0x64 ; 'd'
0000000000000ac8         db  0x69 ; 'i'
0000000000000ac9         db  0x6e ; 'n'
0000000000000aca         db  0x67 ; 'g'
0000000000000acb         db  0x00 ; '.'
0000000000000acc         db  0x73 ; 's'
0000000000000acd         db  0x74 ; 't'
0000000000000ace         db  0x72 ; 'r'
0000000000000acf         db  0x63 ; 'c'
0000000000000ad0         db  0x68 ; 'h'
0000000000000ad1         db  0x72 ; 'r'
0000000000000ad2         db  0x00 ; '.'
0000000000000ad3         db  0x70 ; 'p'
0000000000000ad4         db  0x72 ; 'r'
0000000000000ad5         db  0x6f ; 'o'
0000000000000ad6         db  0x67 ; 'g'
0000000000000ad7         db  0x72 ; 'r'
0000000000000ad8         db  0x61 ; 'a'
0000000000000ad9         db  0x6d ; 'm'
0000000000000ada         db  0x5f ; '_'
0000000000000adb         db  0x69 ; 'i'
0000000000000adc         db  0x6e ; 'n'
0000000000000add         db  0x76 ; 'v'
0000000000000ade         db  0x6f ; 'o'
0000000000000adf         db  0x63 ; 'c'
0000000000000ae0         db  0x61 ; 'a'
0000000000000ae1         db  0x74 ; 't'
0000000000000ae2         db  0x69 ; 'i'
0000000000000ae3         db  0x6f ; 'o'
0000000000000ae4         db  0x6e ; 'n'
0000000000000ae5         db  0x5f ; '_'
0000000000000ae6         db  0x73 ; 's'
0000000000000ae7         db  0x68 ; 'h'
0000000000000ae8         db  0x6f ; 'o'
0000000000000ae9         db  0x72 ; 'r'
0000000000000aea         db  0x74 ; 't'
0000000000000aeb         db  0x5f ; '_'
0000000000000aec         db  0x6e ; 'n'
0000000000000aed         db  0x61 ; 'a'
0000000000000aee         db  0x6d ; 'm'
0000000000000aef         db  0x65 ; 'e'
0000000000000af0         db  0x00 ; '.'
0000000000000af1         db  0x5f ; '_'
0000000000000af2         db  0x5f ; '_'
0000000000000af3         db  0x63 ; 'c'
0000000000000af4         db  0x74 ; 't'
0000000000000af5         db  0x79 ; 'y'
0000000000000af6         db  0x70 ; 'p'
0000000000000af7         db  0x65 ; 'e'
0000000000000af8         db  0x5f ; '_'
0000000000000af9         db  0x74 ; 't'
0000000000000afa         db  0x6f ; 'o'
0000000000000afb         db  0x75 ; 'u'
0000000000000afc         db  0x70 ; 'p'
0000000000000afd         db  0x70 ; 'p'
0000000000000afe         db  0x65 ; 'e'
0000000000000aff         db  0x72 ; 'r'
                     aLoc:
0000000000000b00         db         "_loc", 0
0000000000000b05         db  0x5f ; '_'
0000000000000b06         db  0x5f ; '_'
0000000000000b07         db  0x63 ; 'c'
0000000000000b08         db  0x78 ; 'x'
0000000000000b09         db  0x61 ; 'a'
0000000000000b0a         db  0x5f ; '_'
0000000000000b0b         db  0x66 ; 'f'
0000000000000b0c         db  0x69 ; 'i'
0000000000000b0d         db  0x6e ; 'n'
0000000000000b0e         db  0x61 ; 'a'
0000000000000b0f         db  0x6c ; 'l'
0000000000000b10         db  0x69 ; 'i'
0000000000000b11         db  0x7a ; 'z'
0000000000000b12         db  0x65 ; 'e'
0000000000000b13         db  0x00 ; '.'
0000000000000b14         db  0x5f ; '_'
0000000000000b15         db  0x5f ; '_'
0000000000000b16         db  0x78 ; 'x'
0000000000000b17         db  0x73 ; 's'
0000000000000b18         db  0x74 ; 't'
0000000000000b19         db  0x61 ; 'a'
0000000000000b1a         db  0x74 ; 't'
0000000000000b1b         db  0x00 ; '.'
0000000000000b1c         db  0x62 ; 'b'
0000000000000b1d         db  0x69 ; 'i'
0000000000000b1e         db  0x6e ; 'n'
0000000000000b1f         db  0x64 ; 'd'
0000000000000b20         db  0x74 ; 't'
0000000000000b21         db  0x65 ; 'e'
0000000000000b22         db  0x78 ; 'x'
0000000000000b23         db  0x74 ; 't'
0000000000000b24         db  0x64 ; 'd'
0000000000000b25         db  0x6f ; 'o'
0000000000000b26         db  0x6d ; 'm'
0000000000000b27         db  0x61 ; 'a'
0000000000000b28         db  0x69 ; 'i'
0000000000000b29         db  0x6e ; 'n'
0000000000000b2a         db  0x00 ; '.'
0000000000000b2b         db  0x61 ; 'a'
0000000000000b2c         db  0x63 ; 'c'
0000000000000b2d         db  0x63 ; 'c'
0000000000000b2e         db  0x65 ; 'e'
0000000000000b2f         db  0x73 ; 's'
0000000000000b30         db  0x73 ; 's'
0000000000000b31         db  0x00 ; '.'
0000000000000b32         db  0x5f ; '_'
0000000000000b33         db  0x5f ; '_'
0000000000000b34         db  0x6c ; 'l'
0000000000000b35         db  0x69 ; 'i'
0000000000000b36         db  0x62 ; 'b'
0000000000000b37         db  0x63 ; 'c'
0000000000000b38         db  0x5f ; '_'
0000000000000b39         db  0x73 ; 's'
0000000000000b3a         db  0x74 ; 't'
0000000000000b3b         db  0x61 ; 'a'
0000000000000b3c         db  0x72 ; 'r'
0000000000000b3d         db  0x74 ; 't'
0000000000000b3e         db  0x5f ; '_'
0000000000000b3f         db  0x6d ; 'm'
0000000000000b40         db  0x61 ; 'a'
0000000000000b41         db  0x69 ; 'i'
0000000000000b42         db  0x6e ; 'n'
0000000000000b43         db  0x00 ; '.'
0000000000000b44         db  0x66 ; 'f'
0000000000000b45         db  0x73 ; 's'
0000000000000b46         db  0x65 ; 'e'
0000000000000b47         db  0x65 ; 'e'
0000000000000b48         db  0x6b ; 'k'
0000000000000b49         db  0x6f ; 'o'
0000000000000b4a         db  0x00 ; '.'
0000000000000b4b         db  0x5f ; '_'
0000000000000b4c         db  0x5f ; '_'
0000000000000b4d         db  0x73 ; 's'
0000000000000b4e         db  0x74 ; 't'
0000000000000b4f         db  0x72 ; 'r'
0000000000000b50         db  0x74 ; 't'
0000000000000b51         db  0x6f ; 'o'
0000000000000b52         db  0x75 ; 'u'
0000000000000b53         db  0x6c ; 'l'
0000000000000b54         db  0x5f ; '_'
0000000000000b55         db  0x69 ; 'i'
0000000000000b56         db  0x6e ; 'n'
0000000000000b57         db  0x74 ; 't'
0000000000000b58         db  0x65 ; 'e'
0000000000000b59         db  0x72 ; 'r'
0000000000000b5a         db  0x6e ; 'n'
0000000000000b5b         db  0x61 ; 'a'
0000000000000b5c         db  0x6c ; 'l'
0000000000000b5d         db  0x00 ; '.'
0000000000000b5e         db  0x66 ; 'f'
0000000000000b5f         db  0x70 ; 'p'
0000000000000b60         db  0x75 ; 'u'
0000000000000b61         db  0x74 ; 't'
0000000000000b62         db  0x73 ; 's'
0000000000000b63         db  0x5f ; '_'
0000000000000b64         db  0x75 ; 'u'
0000000000000b65         db  0x6e ; 'n'
0000000000000b66         db  0x6c ; 'l'
0000000000000b67         db  0x6f ; 'o'
0000000000000b68         db  0x63 ; 'c'
0000000000000b69         db  0x6b ; 'k'
0000000000000b6a         db  0x65 ; 'e'
0000000000000b6b         db  0x64 ; 'd'
0000000000000b6c         db  0x00 ; '.'
0000000000000b6d         db  0x66 ; 'f'
0000000000000b6e         db  0x72 ; 'r'
0000000000000b6f         db  0x65 ; 'e'
0000000000000b70         db  0x65 ; 'e'
0000000000000b71         db  0x00 ; '.'
0000000000000b72         db  0x5f ; '_'
0000000000000b73         db  0x5f ; '_'
0000000000000b74         db  0x70 ; 'p'
0000000000000b75         db  0x72 ; 'r'
0000000000000b76         db  0x6f ; 'o'
0000000000000b77         db  0x67 ; 'g'
0000000000000b78         db  0x6e ; 'n'
0000000000000b79         db  0x61 ; 'a'
0000000000000b7a         db  0x6d ; 'm'
0000000000000b7b         db  0x65 ; 'e'
0000000000000b7c         db  0x00 ; '.'
0000000000000b7d         db  0x5f ; '_'
0000000000000b7e         db  0x5f ; '_'
0000000000000b7f         db  0x70 ; 'p'
0000000000000b80         db  0x72 ; 'r'
0000000000000b81         db  0x6f ; 'o'
0000000000000b82         db  0x67 ; 'g'
0000000000000b83         db  0x6e ; 'n'
0000000000000b84         db  0x61 ; 'a'
0000000000000b85         db  0x6d ; 'm'
0000000000000b86         db  0x65 ; 'e'
0000000000000b87         db  0x5f ; '_'
0000000000000b88         db  0x66 ; 'f'
0000000000000b89         db  0x75 ; 'u'
0000000000000b8a         db  0x6c ; 'l'
0000000000000b8b         db  0x6c ; 'l'
0000000000000b8c         db  0x00 ; '.'
0000000000000b8d         db  0x5f ; '_'
0000000000000b8e         db  0x5f ; '_'
0000000000000b8f         db  0x63 ; 'c'
0000000000000b90         db  0x78 ; 'x'
0000000000000b91         db  0x61 ; 'a'
0000000000000b92         db  0x5f ; '_'
0000000000000b93         db  0x61 ; 'a'
0000000000000b94         db  0x74 ; 't'
0000000000000b95         db  0x65 ; 'e'
0000000000000b96         db  0x78 ; 'x'
0000000000000b97         db  0x69 ; 'i'
0000000000000b98         db  0x74 ; 't'
0000000000000b99         db  0x00 ; '.'
0000000000000b9a         db  0x47 ; 'G'
0000000000000b9b         db  0x4c ; 'L'
0000000000000b9c         db  0x49 ; 'I'
0000000000000b9d         db  0x42 ; 'B'
0000000000000b9e         db  0x43 ; 'C'
0000000000000b9f         db  0x5f ; '_'
0000000000000ba0         db  0x32 ; '2'
0000000000000ba1         db  0x2e ; '.'
0000000000000ba2         db  0x31 ; '1'
0000000000000ba3         db  0x34 ; '4'
0000000000000ba4         db  0x00 ; '.'
0000000000000ba5         db  0x47 ; 'G'
0000000000000ba6         db  0x4c ; 'L'
0000000000000ba7         db  0x49 ; 'I'
0000000000000ba8         db  0x42 ; 'B'
0000000000000ba9         db  0x43 ; 'C'
0000000000000baa         db  0x5f ; '_'
0000000000000bab         db  0x32 ; '2'
0000000000000bac         db  0x2e ; '.'
0000000000000bad         db  0x34 ; '4'
0000000000000bae         db  0x00 ; '.'
0000000000000baf         db  0x47 ; 'G'
0000000000000bb0         db  0x4c ; 'L'
0000000000000bb1         db  0x49 ; 'I'
0000000000000bb2         db  0x42 ; 'B'
0000000000000bb3         db  0x43 ; 'C'
0000000000000bb4         db  0x5f ; '_'
0000000000000bb5         db  0x32 ; '2'
0000000000000bb6         db  0x2e ; '.'
0000000000000bb7         db  0x33 ; '3'
0000000000000bb8         db  0x2e ; '.'
0000000000000bb9         db  0x34 ; '4'
0000000000000bba         db  0x00 ; '.'
0000000000000bbb         db  0x47 ; 'G'
0000000000000bbc         db  0x4c ; 'L'
0000000000000bbd         db  0x49 ; 'I'
0000000000000bbe         db  0x42 ; 'B'
0000000000000bbf         db  0x43 ; 'C'
0000000000000bc0         db  0x5f ; '_'
0000000000000bc1         db  0x32 ; '2'
0000000000000bc2         db  0x2e ; '.'
0000000000000bc3         db  0x32 ; '2'
0000000000000bc4         db  0x2e ; '.'
0000000000000bc5         db  0x35 ; '5'
0000000000000bc6         db  0x00 ; '.'
0000000000000bc7         db  0x47 ; 'G'
0000000000000bc8         db  0x4c ; 'L'
0000000000000bc9         db  0x49 ; 'I'
0000000000000bca         db  0x42 ; 'B'
0000000000000bcb         db  0x43 ; 'C'
0000000000000bcc         db  0x5f ; '_'
0000000000000bcd         db  0x32 ; '2'
0000000000000bce         db  0x2e ; '.'
0000000000000bcf         db  0x33 ; '3'
0000000000000bd0         db  0x00 ; '.'
0000000000000bd1         db  0x5f ; '_'
0000000000000bd2         db  0x49 ; 'I'
0000000000000bd3         db  0x54 ; 'T'
0000000000000bd4         db  0x4d ; 'M'
0000000000000bd5         db  0x5f ; '_'
0000000000000bd6         db  0x64 ; 'd'
0000000000000bd7         db  0x65 ; 'e'
0000000000000bd8         db  0x72 ; 'r'
0000000000000bd9         db  0x65 ; 'e'
0000000000000bda         db  0x67 ; 'g'
0000000000000bdb         db  0x69 ; 'i'
0000000000000bdc         db  0x73 ; 's'
0000000000000bdd         db  0x74 ; 't'
0000000000000bde         db  0x65 ; 'e'
0000000000000bdf         db  0x72 ; 'r'
0000000000000be0         db  0x54 ; 'T'
0000000000000be1         db  0x4d ; 'M'
0000000000000be2         db  0x43 ; 'C'
0000000000000be3         db  0x6c ; 'l'
0000000000000be4         db  0x6f ; 'o'
0000000000000be5         db  0x6e ; 'n'
0000000000000be6         db  0x65 ; 'e'
0000000000000be7         db  0x54 ; 'T'
0000000000000be8         db  0x61 ; 'a'
0000000000000be9         db  0x62 ; 'b'
0000000000000bea         db  0x6c ; 'l'
0000000000000beb         db  0x65 ; 'e'
0000000000000bec         db  0x00 ; '.'
0000000000000bed         db  0x5f ; '_'
0000000000000bee         db  0x5f ; '_'
0000000000000bef         db  0x67 ; 'g'
0000000000000bf0         db  0x6d ; 'm'
0000000000000bf1         db  0x6f ; 'o'
0000000000000bf2         db  0x6e ; 'n'
0000000000000bf3         db  0x5f ; '_'
0000000000000bf4         db  0x73 ; 's'
0000000000000bf5         db  0x74 ; 't'
0000000000000bf6         db  0x61 ; 'a'
0000000000000bf7         db  0x72 ; 'r'
0000000000000bf8         db  0x74 ; 't'
0000000000000bf9         db  0x5f ; '_'
0000000000000bfa         db  0x5f ; '_'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x5f ; '_'
0000000000000bfd         db  0x49 ; 'I'
0000000000000bfe         db  0x54 ; 'T'
0000000000000bff         db  0x4d ; 'M'
                     aRegistertmclon:
0000000000000c00         db         "_registerTMCloneTable", 0


        ; Section .gnu.version
        ; Range: [0xc16; 0xc9a[ (132 bytes)
        ; File offset : [3094; 3226[ (132 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c16         db  0x00 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x02 ; '.'
0000000000000c19         db  0x00 ; '.'
0000000000000c1a         db  0x03 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x04 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x03 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x03 ; '.'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x03 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x03 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x00 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x03 ; '.'
0000000000000c29         db  0x00 ; '.'
0000000000000c2a         db  0x03 ; '.'
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x03 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x03 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x03 ; '.'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x03 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x03 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x03 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x03 ; '.'
0000000000000c39         db  0x00 ; '.'
0000000000000c3a         db  0x05 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x03 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x03 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x03 ; '.'
0000000000000c41         db  0x00 ; '.'
0000000000000c42         db  0x03 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x03 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x03 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x03 ; '.'
0000000000000c49         db  0x00 ; '.'
0000000000000c4a         db  0x03 ; '.'
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x03 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x03 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x03 ; '.'
0000000000000c51         db  0x00 ; '.'
0000000000000c52         db  0x03 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x03 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x06 ; '.'
0000000000000c59         db  0x00 ; '.'
0000000000000c5a         db  0x03 ; '.'
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x03 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x03 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x03 ; '.'
0000000000000c61         db  0x00 ; '.'
0000000000000c62         db  0x03 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x03 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x03 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x03 ; '.'
0000000000000c69         db  0x00 ; '.'
0000000000000c6a         db  0x04 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x03 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x03 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x03 ; '.'
0000000000000c71         db  0x00 ; '.'
0000000000000c72         db  0x03 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x03 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x03 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x03 ; '.'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x03 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x03 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x04 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x00 ; '.'
0000000000000c81         db  0x00 ; '.'
0000000000000c82         db  0x03 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x03 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x03 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x02 ; '.'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x03 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x03 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x03 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x03 ; '.'
0000000000000c91         db  0x00 ; '.'
0000000000000c92         db  0x03 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x03 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x03 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x03 ; '.'
0000000000000c99         db  0x00 ; '.'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xca0; 0xd00[ (96 bytes)
        ; File offset : [3232; 3328[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000ca0         db  0x01 ; '.'
0000000000000ca1         db  0x00 ; '.'
0000000000000ca2         db  0x05 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x01 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x10 ; '.'
0000000000000ca9         db  0x00 ; '.'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x94 ; '.'
0000000000000cb1         db  0x91 ; '.'
0000000000000cb2         db  0x96 ; '.'
0000000000000cb3         db  0x06 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x06 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x8a ; '.'
0000000000000cb9         db  0x02 ; '.'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x10 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x14 ; '.'
0000000000000cc1         db  0x69 ; 'i'
0000000000000cc2         db  0x69 ; 'i'
0000000000000cc3         db  0x0d ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x05 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x95 ; '.'
0000000000000cc9         db  0x02 ; '.'
0000000000000cca         db  0x00 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x10 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x74 ; 't'
0000000000000cd1         db  0x19 ; '.'
0000000000000cd2         db  0x69 ; 'i'
0000000000000cd3         db  0x09 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x04 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x9f ; '.'
0000000000000cd9         db  0x02 ; '.'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x10 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x75 ; 'u'
0000000000000ce1         db  0x1a ; '.'
0000000000000ce2         db  0x69 ; 'i'
0000000000000ce3         db  0x09 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x03 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0xab ; '.'
0000000000000ce9         db  0x02 ; '.'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x10 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x13 ; '.'
0000000000000cf1         db  0x69 ; 'i'
0000000000000cf2         db  0x69 ; 'i'
0000000000000cf3         db  0x0d ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x02 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0xb7 ; '.'
0000000000000cf9         db  0x02 ; '.'
0000000000000cfa         db  0x00 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xd00; 0x1048[ (840 bytes)
        ; File offset : [3328; 4168[ (840 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000d00         db  0xd0 ; '.'
0000000000000d01         db  0xaa ; '.'
0000000000000d02         db  0x20 ; ' '
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x08 ; '.'
0000000000000d09         db  0x00 ; '.'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0xb0 ; '.'
0000000000000d11         db  0x20 ; ' '
0000000000000d12         db  0x00 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0xd8 ; '.'
0000000000000d19         db  0xaa ; '.'
0000000000000d1a         db  0x20 ; ' '
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x08 ; '.'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x70 ; 'p'
0000000000000d29         db  0x20 ; ' '
0000000000000d2a         db  0x00 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0xe0 ; '.'
0000000000000d31         db  0xaa ; '.'
0000000000000d32         db  0x20 ; ' '
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x08 ; '.'
0000000000000d39         db  0x00 ; '.'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x7f ; '.'
0000000000000d41         db  0x7b ; '{'
0000000000000d42         db  0x00 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x00 ; '.'
0000000000000d49         db  0xab ; '.'
0000000000000d4a         db  0x20 ; ' '
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x08 ; '.'
0000000000000d51         db  0x00 ; '.'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x85 ; '.'
0000000000000d59         db  0x7b ; '{'
0000000000000d5a         db  0x00 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x20 ; ' '
0000000000000d61         db  0xab ; '.'
0000000000000d62         db  0x20 ; ' '
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x08 ; '.'
0000000000000d69         db  0x00 ; '.'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x5c ; '\'
0000000000000d71         db  0x82 ; '.'
0000000000000d72         db  0x00 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x40 ; '@'
0000000000000d79         db  0xab ; '.'
0000000000000d7a         db  0x20 ; ' '
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x08 ; '.'
0000000000000d81         db  0x00 ; '.'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x8c ; '.'
0000000000000d89         db  0x7b ; '{'
0000000000000d8a         db  0x00 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x60 ; '`'
0000000000000d91         db  0xab ; '.'
0000000000000d92         db  0x20 ; ' '
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x08 ; '.'
0000000000000d99         db  0x00 ; '.'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x91 ; '.'
0000000000000da1         db  0x7b ; '{'
0000000000000da2         db  0x00 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0xa0 ; '.'
0000000000000da9         db  0xab ; '.'
0000000000000daa         db  0x20 ; ' '
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x08 ; '.'
0000000000000db1         db  0x00 ; '.'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0xc9 ; '.'
0000000000000db9         db  0x82 ; '.'
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0xa8 ; '.'
0000000000000dc1         db  0xab ; '.'
0000000000000dc2         db  0x20 ; ' '
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x08 ; '.'
0000000000000dc9         db  0x00 ; '.'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0xd1 ; '.'
0000000000000dd1         db  0x82 ; '.'
0000000000000dd2         db  0x00 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0xb0 ; '.'
0000000000000dd9         db  0xab ; '.'
0000000000000dda         db  0x20 ; ' '
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x08 ; '.'
0000000000000de1         db  0x00 ; '.'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0xd7 ; '.'
0000000000000de9         db  0x82 ; '.'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0xb8 ; '.'
0000000000000df1         db  0xab ; '.'
0000000000000df2         db  0x20 ; ' '
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x08 ; '.'
0000000000000df9         db  0x00 ; '.'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0xe4 ; '.'
0000000000000e01         db  0x82 ; '.'
0000000000000e02         db  0x00 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0xc0 ; '.'
0000000000000e09         db  0xab ; '.'
0000000000000e0a         db  0x20 ; ' '
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x08 ; '.'
0000000000000e11         db  0x00 ; '.'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0xf1 ; '.'
0000000000000e19         db  0x82 ; '.'
0000000000000e1a         db  0x00 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0xc8 ; '.'
0000000000000e21         db  0xab ; '.'
0000000000000e22         db  0x20 ; ' '
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x08 ; '.'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x05 ; '.'
0000000000000e31         db  0x83 ; '.'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0xd0 ; '.'
0000000000000e39         db  0xab ; '.'
0000000000000e3a         db  0x20 ; ' '
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x08 ; '.'
0000000000000e41         db  0x00 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x07 ; '.'
0000000000000e49         db  0x83 ; '.'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0xd8 ; '.'
0000000000000e51         db  0xab ; '.'
0000000000000e52         db  0x20 ; ' '
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x08 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0xea ; '.'
0000000000000e61         db  0x82 ; '.'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0xe0 ; '.'
0000000000000e69         db  0xab ; '.'
0000000000000e6a         db  0x20 ; ' '
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x08 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x7c ; '|'
0000000000000e79         db  0x7a ; 'z'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0xe8 ; '.'
0000000000000e81         db  0xab ; '.'
0000000000000e82         db  0x20 ; ' '
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x08 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x0f ; '.'
0000000000000e91         db  0x83 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x08 ; '.'
0000000000000e99         db  0xb0 ; '.'
0000000000000e9a         db  0x20 ; ' '
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x08 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x08 ; '.'
0000000000000ea9         db  0xb0 ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x10 ; '.'
0000000000000eb1         db  0xb0 ; '.'
0000000000000eb2         db  0x20 ; ' '
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x08 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x51 ; 'Q'
0000000000000ec1         db  0x82 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x60 ; '`'
0000000000000ec9         db  0xb0 ; '.'
0000000000000eca         db  0x20 ; ' '
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x08 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x70 ; 'p'
0000000000000ed9         db  0xb0 ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x78 ; 'x'
0000000000000ee1         db  0xb0 ; '.'
0000000000000ee2         db  0x20 ; ' '
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x08 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x60 ; '`'
0000000000000ef1         db  0xb1 ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x00 ; '.'
0000000000000ef9         db  0xac ; '.'
0000000000000efa         db  0x20 ; ' '
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x01 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x24 ; '$'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x00 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x08 ; '.'
0000000000000f11         db  0xac ; '.'
0000000000000f12         db  0x20 ; ' '
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x01 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x28 ; '('
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x00 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x10 ; '.'
0000000000000f29         db  0xac ; '.'
0000000000000f2a         db  0x20 ; ' '
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x01 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x04 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x00 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0xc8 ; '.'
0000000000000f41         db  0xaf ; '.'
0000000000000f42         db  0x20 ; ' '
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x06 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x08 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x00 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0xd0 ; '.'
0000000000000f59         db  0xaf ; '.'
0000000000000f5a         db  0x20 ; ' '
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x06 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x1b ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x00 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0xd8 ; '.'
0000000000000f71         db  0xaf ; '.'
0000000000000f72         db  0x20 ; ' '
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x06 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x20 ; ' '
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x00 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0xe0 ; '.'
0000000000000f89         db  0xaf ; '.'
0000000000000f8a         db  0x20 ; ' '
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x06 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x35 ; '5'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x00 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'                                         ; DATA XREF=vasnprintf+180
0000000000000fa0         db  0xe8 ; '.'
0000000000000fa1         db  0xaf ; '.'
0000000000000fa2         db  0x20 ; ' '
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x06 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x38 ; '8'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x00 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x80 ; '.'
0000000000000fb9         db  0xb0 ; '.'
0000000000000fba         db  0x20 ; ' '
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x05 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x3b ; ';'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x00 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x88 ; '.'
0000000000000fd1         db  0xb0 ; '.'
0000000000000fd2         db  0x20 ; ' '
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x05 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x3a ; ':'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x00 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x90 ; '.'
0000000000000fe9         db  0xb0 ; '.'
0000000000000fea         db  0x20 ; ' '
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x05 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x40 ; '@'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x00 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x98 ; '.'
0000000000001001         db  0xb0 ; '.'
0000000000001002         db  0x20 ; ' '
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x05 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x41 ; 'A'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x00 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0xa0 ; '.'
0000000000001019         db  0xb0 ; '.'
000000000000101a         db  0x20 ; ' '
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x05 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x3d ; '='
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x00 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0xc0 ; '.'
0000000000001031         db  0xb0 ; '.'
0000000000001032         db  0x20 ; ' '
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x05 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x3f ; '?'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x00 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x1048; 0x1528[ (1248 bytes)
        ; File offset : [4168; 5416[ (1248 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001048         db  0x28 ; '('
0000000000001049         db  0xae ; '.'
000000000000104a         db  0x20 ; ' '
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x07 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x01 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x00 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x30 ; '0'
0000000000001061         db  0xae ; '.'
0000000000001062         db  0x20 ; ' '
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x07 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x02 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x00 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x38 ; '8'
0000000000001079         db  0xae ; '.'
000000000000107a         db  0x20 ; ' '
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x07 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x03 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x00 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x40 ; '@'
0000000000001091         db  0xae ; '.'
0000000000001092         db  0x20 ; ' '
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x07 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x04 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x00 ; '.'
00000000000010a1         db  0x00 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x48 ; 'H'
00000000000010a9         db  0xae ; '.'
00000000000010aa         db  0x20 ; ' '
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x07 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x05 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x00 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x50 ; 'P'
00000000000010c1         db  0xae ; '.'
00000000000010c2         db  0x20 ; ' '
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x07 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x06 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x00 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x58 ; 'X'
00000000000010d9         db  0xae ; '.'
00000000000010da         db  0x20 ; ' '
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x07 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x07 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x00 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x60 ; '`'
00000000000010f1         db  0xae ; '.'
00000000000010f2         db  0x20 ; ' '
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x07 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x09 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x00 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x68 ; 'h'
0000000000001109         db  0xae ; '.'
000000000000110a         db  0x20 ; ' '
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x07 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x0a ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x00 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x70 ; 'p'
0000000000001121         db  0xae ; '.'
0000000000001122         db  0x20 ; ' '
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x07 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x0b ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x00 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x78 ; 'x'
0000000000001139         db  0xae ; '.'
000000000000113a         db  0x20 ; ' '
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x07 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x0c ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x00 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x80 ; '.'
0000000000001151         db  0xae ; '.'
0000000000001152         db  0x20 ; ' '
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x07 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x0d ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x00 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x88 ; '.'
0000000000001169         db  0xae ; '.'
000000000000116a         db  0x20 ; ' '
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x07 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x0e ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x00 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x90 ; '.'
0000000000001181         db  0xae ; '.'
0000000000001182         db  0x20 ; ' '
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x07 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x0f ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x00 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x98 ; '.'
0000000000001199         db  0xae ; '.'
000000000000119a         db  0x20 ; ' '
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x07 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x10 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x00 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0xa0 ; '.'
00000000000011b1         db  0xae ; '.'
00000000000011b2         db  0x20 ; ' '
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x07 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x11 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x00 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0xa8 ; '.'
00000000000011c9         db  0xae ; '.'
00000000000011ca         db  0x20 ; ' '
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x07 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x12 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x00 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0xb0 ; '.'
00000000000011e1         db  0xae ; '.'
00000000000011e2         db  0x20 ; ' '
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x07 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x13 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x00 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0xb8 ; '.'
00000000000011f9         db  0xae ; '.'
00000000000011fa         db  0x20 ; ' '
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x07 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x14 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x00 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0xc0 ; '.'
0000000000001211         db  0xae ; '.'
0000000000001212         db  0x20 ; ' '
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x07 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x15 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x00 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0xc8 ; '.'
0000000000001229         db  0xae ; '.'
000000000000122a         db  0x20 ; ' '
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x07 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x16 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x00 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0xd0 ; '.'
0000000000001241         db  0xae ; '.'
0000000000001242         db  0x20 ; ' '
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x07 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x17 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x00 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0xd8 ; '.'
0000000000001259         db  0xae ; '.'
000000000000125a         db  0x20 ; ' '
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x07 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x18 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x00 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0xe0 ; '.'
0000000000001271         db  0xae ; '.'
0000000000001272         db  0x20 ; ' '
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x07 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x19 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x00 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0xe8 ; '.'
0000000000001289         db  0xae ; '.'
000000000000128a         db  0x20 ; ' '
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x07 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x1a ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x00 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0xf0 ; '.'
00000000000012a1         db  0xae ; '.'
00000000000012a2         db  0x20 ; ' '
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x07 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x1c ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x00 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0xf8 ; '.'
00000000000012b9         db  0xae ; '.'
00000000000012ba         db  0x20 ; ' '
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x07 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x1d ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x00 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x00 ; '.'
00000000000012d1         db  0xaf ; '.'
00000000000012d2         db  0x20 ; ' '
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x07 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x1e ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x00 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x08 ; '.'
00000000000012e9         db  0xaf ; '.'
00000000000012ea         db  0x20 ; ' '
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x07 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x1f ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x00 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x10 ; '.'
0000000000001301         db  0xaf ; '.'
0000000000001302         db  0x20 ; ' '
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x07 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x21 ; '!'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x00 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x18 ; '.'
0000000000001319         db  0xaf ; '.'
000000000000131a         db  0x20 ; ' '
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x07 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x22 ; '"'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x00 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x20 ; ' '
0000000000001331         db  0xaf ; '.'
0000000000001332         db  0x20 ; ' '
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x07 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x23 ; '#'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x00 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x28 ; '('
0000000000001349         db  0xaf ; '.'
000000000000134a         db  0x20 ; ' '
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x07 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x24 ; '$'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x00 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x30 ; '0'
0000000000001361         db  0xaf ; '.'
0000000000001362         db  0x20 ; ' '
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x07 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x25 ; '%'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x00 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x38 ; '8'
0000000000001379         db  0xaf ; '.'
000000000000137a         db  0x20 ; ' '
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x07 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x26 ; '&'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x00 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x40 ; '@'
0000000000001391         db  0xaf ; '.'
0000000000001392         db  0x20 ; ' '
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x07 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x27 ; '''
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x00 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x48 ; 'H'
00000000000013a9         db  0xaf ; '.'
00000000000013aa         db  0x20 ; ' '
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x07 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x28 ; '('
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x00 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x50 ; 'P'
00000000000013c1         db  0xaf ; '.'
00000000000013c2         db  0x20 ; ' '
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x07 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x29 ; ')'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x00 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x58 ; 'X'
00000000000013d9         db  0xaf ; '.'
00000000000013da         db  0x20 ; ' '
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x07 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x2a ; '*'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x00 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x60 ; '`'
00000000000013f1         db  0xaf ; '.'
00000000000013f2         db  0x20 ; ' '
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x07 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x2b ; '+'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x00 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x68 ; 'h'
0000000000001409         db  0xaf ; '.'
000000000000140a         db  0x20 ; ' '
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x07 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x2c ; ','
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x00 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x70 ; 'p'
0000000000001421         db  0xaf ; '.'
0000000000001422         db  0x20 ; ' '
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x07 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x2d ; '-'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x00 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x78 ; 'x'
0000000000001439         db  0xaf ; '.'
000000000000143a         db  0x20 ; ' '
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x07 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x2e ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x00 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x80 ; '.'
0000000000001451         db  0xaf ; '.'
0000000000001452         db  0x20 ; ' '
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x07 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x2f ; '/'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x00 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x88 ; '.'
0000000000001469         db  0xaf ; '.'
000000000000146a         db  0x20 ; ' '
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x07 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x30 ; '0'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x00 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x00 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x90 ; '.'
0000000000001481         db  0xaf ; '.'
0000000000001482         db  0x20 ; ' '
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x00 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x07 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x31 ; '1'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x00 ; '.'
0000000000001491         db  0x00 ; '.'
0000000000001492         db  0x00 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x98 ; '.'
0000000000001499         db  0xaf ; '.'
000000000000149a         db  0x20 ; ' '
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x07 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x32 ; '2'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x00 ; '.'
00000000000014a9         db  0x00 ; '.'
00000000000014aa         db  0x00 ; '.'
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0xa0 ; '.'
00000000000014b1         db  0xaf ; '.'
00000000000014b2         db  0x20 ; ' '
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x00 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x07 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x33 ; '3'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x00 ; '.'
00000000000014c1         db  0x00 ; '.'
00000000000014c2         db  0x00 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0xa8 ; '.'
00000000000014c9         db  0xaf ; '.'
00000000000014ca         db  0x20 ; ' '
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x00 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x07 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x34 ; '4'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x00 ; '.'
00000000000014d9         db  0x00 ; '.'
00000000000014da         db  0x00 ; '.'
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0xb0 ; '.'
00000000000014e1         db  0xaf ; '.'
00000000000014e2         db  0x20 ; ' '
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x00 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x07 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x00 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x36 ; '6'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x00 ; '.'
00000000000014f1         db  0x00 ; '.'
00000000000014f2         db  0x00 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x00 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0xb8 ; '.'
00000000000014f9         db  0xaf ; '.'
00000000000014fa         db  0x20 ; ' '
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x07 ; '.'
0000000000001501         db  0x00 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x37 ; '7'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x00 ; '.'
0000000000001509         db  0x00 ; '.'
000000000000150a         db  0x00 ; '.'
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0xc0 ; '.'
0000000000001511         db  0xaf ; '.'
0000000000001512         db  0x20 ; ' '
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x00 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x07 ; '.'
0000000000001519         db  0x00 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x39 ; '9'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x00 ; '.'
0000000000001521         db  0x00 ; '.'
0000000000001522         db  0x00 ; '.'
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1528; 0x153f[ (23 bytes)
        ; File offset : [5416; 5439[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001528         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
000000000000152c         mov        rax, qword [qword_20afd8]                   ; qword_20afd8
0000000000001533         test       rax, rax
0000000000001536         je         loc_153a

0000000000001538         call       rax

                     loc_153a:
000000000000153a         add        rsp, 0x8                                    ; CODE XREF=_init+14
000000000000153e         ret
                        ; endp
000000000000153f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1540; 0x1890[ (848 bytes)
        ; File offset : [5440; 6288[ (848 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1540:
0000000000001540         push       qword [qword_20ae18]                        ; Begin of unwind block (FDE at 0x917c), qword_20ae18, CODE XREF=sub_1556+5
0000000000001546         jmp        qword [qword_20ae18+8]                      ; 0x20ae20
                        ; endp
000000000000154c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_toupper_loc:        // __ctype_toupper_loc
0000000000001550         jmp        qword [__ctype_toupper_loc@GOT]             ; __ctype_toupper_loc, __ctype_toupper_loc@GOT, CODE XREF=main+612, main+1168
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0x0
000000000000155b         jmp        loc_1540


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getenv:        // getenv
0000000000001560         jmp        qword [getenv@GOT]                          ; getenv, getenv@GOT, CODE XREF=main+802, main+1320
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0x1
000000000000156b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___snprintf_chk:        // __snprintf_chk
0000000000001570         jmp        qword [__snprintf_chk@GOT]                  ; __snprintf_chk, __snprintf_chk@GOT, CODE XREF=vasnprintf+1464, vasnprintf+1776, vasnprintf+2093, vasnprintf+2222, vasnprintf+2417, vasnprintf+3225
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0x2
000000000000157b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001580         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+901, main+998, main+1040, main+1250, main+1368, main+1443, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0x3
000000000000158b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001590         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_3600+1567, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48, careadlinkatcwd+26, vasnprintf+3878
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0x4
000000000000159b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000015a0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+435, main+1015, main+1763, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42, xreadlink+24, xstrtoumax+67, rpl_vasprintf+96
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0x5
00000000000015ab         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000015b0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+732, usage+925
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x6
00000000000015bb         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000015c0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x7
00000000000015cb         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
00000000000015d0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x8
00000000000015db         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_readlink:        // readlink
00000000000015e0         jmp        qword [readlink@GOT]                        ; readlink, readlink@GOT, CODE XREF=careadlinkatcwd+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x9
00000000000015eb         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
00000000000015f0         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+109
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0xa
00000000000015fb         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001600         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0xb
000000000000160b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001610         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+97
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0xc
000000000000161b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001620         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+498, main+1091, main+1550, main+1631, main+1703, main+1755, usage+56, usage+102, usage+146, usage+183, usage+220
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0xd
000000000000162b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001630         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0xe
000000000000163b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001640         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=base_len+4, mfile_name_concat+51, quotearg_buffer_restyled+343, sub_3130+411, sub_3600+510, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0xf
000000000000164b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001650         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+1471, sub_3600+1507, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192, xstrtoumax+896, rpl_asprintf+172
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x10
000000000000165b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001660         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+165
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x11
000000000000166b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001670         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x12
000000000000167b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000001680         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=main+723, xstrtoumax+291, xstrtoumax+323, xstrtoumax+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x13
000000000000168b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001690         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x14
000000000000169b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000016a0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x15
00000000000016ab         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
00000000000016b0         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=main+1502, xstrtoumax+927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x16
00000000000016bb         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___strtoul_internal:        // __strtoul_internal
00000000000016c0         jmp        qword [__strtoul_internal@GOT]              ; __strtoul_internal, __strtoul_internal@GOT, CODE XREF=xstrtoumax+142
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x17
00000000000016cb         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
00000000000016d0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x18
00000000000016db         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
00000000000016e0         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0x19
00000000000016eb         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
00000000000016f0         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+305, usage+342, usage+379, usage+416, usage+460, usage+1040, version_etc_arn+135
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x1a
00000000000016fb         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001700         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x1b
000000000000170b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_putenv:        // putenv
0000000000001710         jmp        qword [putenv@GOT]                          ; putenv, putenv@GOT, CODE XREF=main+669, main+1008
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x1c
000000000000171b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001720         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=mdir_name+53, xmemdup+35, careadlinkat+410, vasnprintf+686, vasnprintf+912, vasnprintf+973, vasnprintf+2590, vasnprintf+3085, vasnprintf+3403, vasnprintf+3547, vasnprintf+4227
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x1d
000000000000172b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001730         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x1e
000000000000173b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xstat:        // __xstat
0000000000001740         jmp        qword [__xstat@GOT]                         ; __xstat, __xstat@GOT, CODE XREF=main+883
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x1f
000000000000174b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001750         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=mdir_name+31, mfile_name_concat+151, xmalloc+4, vasnprintf+210, vasnprintf+2547, vasnprintf+3007, vasnprintf+3353, vasnprintf+3497, vasnprintf+4191, printf_parse+2420, printf_parse+2528
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x20
000000000000175b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001760         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x21
000000000000176b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001770         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x22
000000000000177b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001780         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x23
000000000000178b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001790         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17, vasnprintf+645, vasnprintf+1242, vasnprintf+1660, vasnprintf+2887, vasnprintf+4043, vasnprintf+4085, printf_parse+805, printf_parse+1041, printf_parse+2266, printf_parse+2729
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1796:
0000000000001796         push       0x24
000000000000179b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
00000000000017a0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+78, usage+707, usage+900, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17a6:
00000000000017a6         push       0x25
00000000000017ab         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
00000000000017b0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+695, usage+788, usage+849, usage+888, usage+991, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17b6:
00000000000017b6         push       0x26
00000000000017bb         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mempcpy:        // mempcpy
00000000000017c0         jmp        qword [mempcpy@GOT]                         ; mempcpy, mempcpy@GOT, CODE XREF=mfile_name_concat+173, mfile_name_concat+206
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17c6:
00000000000017c6         push       0x27
00000000000017cb         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
00000000000017d0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+512, main+1109, main+1575, main+1652, main+1723, main+1783, close_stdout+125, close_stdout+157, xalloc_die+43
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17d6:
00000000000017d6         push       0x28
00000000000017db         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_access:        // access
00000000000017e0         jmp        qword [access@GOT]                          ; access, access@GOT, CODE XREF=main+1416
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17e6:
00000000000017e6         push       0x29
00000000000017eb         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
00000000000017f0         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17f6:
00000000000017f6         push       0x2a
00000000000017fb         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtok:        // strtok
0000000000001800         jmp        qword [strtok@GOT]                          ; strtok, strtok@GOT, CODE XREF=main+1361, main+1378
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1806:
0000000000001806         push       0x2b
000000000000180b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_execvp:        // execvp
0000000000001810         jmp        qword [execvp@GOT]                          ; execvp, execvp@GOT, CODE XREF=main+1051
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1816:
0000000000001816         push       0x2c
000000000000181b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001820         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1826:
0000000000001826         push       0x2d
000000000000182b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001830         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+244, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1836:
0000000000001836         push       0x2e
000000000000183b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001840         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1846:
0000000000001846         push       0x2f
000000000000184b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001850         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1856:
0000000000001856         push       0x30
000000000000185b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001860         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_3130+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1866:
0000000000001866         push       0x31
000000000000186b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001870         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_3130+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1876:
0000000000001876         push       0x32
000000000000187b         jmp        0x1540
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001880         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_2ed0+51, xstrtoumax+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1886:
0000000000001886         push       0x33
000000000000188b         jmp        0x1540
                        ; endp


        ; Section .plt.got
        ; Range: [0x1890; 0x1898[ (8 bytes)
        ; File offset : [6288; 6296[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_20afe8:        // qword_20afe8
0000000000001890         jmp        qword [qword_20afe8]                        ; qword, End of unwind block (FDE at 0x917c), Begin of unwind block (FDE at 0x91a4), qword_20afe8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001896         align      8
0000000000001898         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x91a4)
0000000000001899         db  0x00 ; '.'
000000000000189a         db  0x00 ; '.'
000000000000189b         db  0x00 ; '.'
000000000000189c         db  0x00 ; '.'
000000000000189d         db  0x00 ; '.'
000000000000189e         db  0x00 ; '.'
000000000000189f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x18a0; 0x798e[ (24814 bytes)
        ; File offset : [6304; 31118[ (24814 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_D8: int8_t, -216
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int64_t, -248
        ;    var_100: int64_t, -256
        ;    var_108: int64_t, -264
        ;    var_110: int64_t, -272
        ;    var_120: int64_t, -288
        ;    var_128: int64_t, -296


                     main:
00000000000018a0         push       r15                                         ; Begin of unwind block (FDE at 0x91e8), DATA XREF=_start+29
00000000000018a2         push       r14
00000000000018a4         movabs     r15, 0x100003e00
00000000000018ae         push       r13
00000000000018b0         push       r12
00000000000018b2         lea        r13, qword [CSWTCH.55]                      ; CSWTCH.55
00000000000018b9         push       rbp
00000000000018ba         push       rbx
00000000000018bb         mov        ebp, edi
00000000000018bd         mov        rbx, rsi
00000000000018c0         sub        rsp, 0xf8
00000000000018c7         mov        rdi, qword [rsi]
00000000000018ca         mov        rax, qword [fs:0x28]
00000000000018d3         mov        qword [rsp+0x128+var_40], rax
00000000000018db         xor        eax, eax
00000000000018dd         call       set_program_name                            ; set_program_name
00000000000018e2         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x87e1
00000000000018e9         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
00000000000018ee         call       j_setlocale                                 ; setlocale
00000000000018f3         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
00000000000018fa         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001901         call       j_bindtextdomain                            ; bindtextdomain
0000000000001906         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
000000000000190d         call       j_textdomain                                ; textdomain
0000000000001912         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001919         mov        dword [exit_failure], 0x7d                  ; exit_failure
0000000000001923         call       atexit                                      ; atexit

                     loc_1928:
0000000000001928         lea        r12, qword [stdbuf]                         ; stdbuf, CODE XREF=main+473

                     loc_192f:
000000000000192f         lea        rcx, qword [longopts]                       ; argument "__longopts" for method j_getopt_long, longopts, CODE XREF=main+399
0000000000001936         lea        rdx, qword [aPadraigBrady+14]               ; argument "__shortopts" for method j_getopt_long, 0x7aac
000000000000193d         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001940         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001943         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001945         call       j_getopt_long                               ; getopt_long
000000000000194a         cmp        eax, 0xffffffff
000000000000194d         je         loc_1aaf

0000000000001953         cmp        eax, 0x65
0000000000001956         je         loc_19a7

0000000000001958         jg         loc_1999

000000000000195a         cmp        eax, 0xffffff7d
000000000000195f         jne        loc_1e4d

0000000000001965         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000196c         mov        rcx, qword [Version]                        ; Version
0000000000001973         lea        r8, qword [aPadraigBrady]                   ; "Padraig Brady"
000000000000197a         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x7a3e
0000000000001981         lea        rsi, qword [aStdbuf]                        ; "stdbuf"
0000000000001988         xor        r9d, r9d
000000000000198b         xor        eax, eax
000000000000198d         call       version_etc                                 ; version_etc
0000000000001992         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000001994         call       j_exit                                      ; exit
                        ; endp

                     loc_1999:
0000000000001999         cmp        eax, 0x69                                   ; CODE XREF=main+184
000000000000199c         je         loc_19a7

000000000000199e         cmp        eax, 0x6f
00000000000019a1         jne        loc_1aa5

                     loc_19a7:
00000000000019a7         lea        edx, dword [rax-0x65]                       ; CODE XREF=main+182, main+252
00000000000019aa         movsxd     r14, dword [r13+rdx*4]
00000000000019af         cmp        r14d, 0x2
00000000000019b3         ja         loc_1e64

00000000000019b9         mov        r9, qword [optarg@@GLIBC_2.2.5]             ; optarg@@GLIBC_2.2.5
00000000000019c0         lea        rdx, qword [r14+r14*2]
00000000000019c4         mov        dword [r12+rdx*8+8], eax
00000000000019c9         movsx      edx, byte [r9]
00000000000019cd         cmp        edx, 0x20
00000000000019d0         ja         loc_1a09

00000000000019d2         bt         r15, rdx
00000000000019d6         jae        loc_1a09

00000000000019d8         lea        rdx, qword [r9+1]
00000000000019dc         mov        esi, 0x1
00000000000019e1         jmp        loc_19f7
00000000000019e3         align      8

                     loc_19e8:
00000000000019e8         mov        rdi, rsi                                    ; CODE XREF=main+359
00000000000019eb         add        rdx, 0x1
00000000000019ef         shl        rdi, cl
00000000000019f2         test       rdi, r15
00000000000019f5         je         loc_1a09

                     loc_19f7:
00000000000019f7         mov        qword [optarg@@GLIBC_2.2.5], rdx            ; optarg@@GLIBC_2.2.5, CODE XREF=main+321
00000000000019fe         movsx      ecx, byte [rdx]
0000000000001a01         mov        r9, rdx
0000000000001a04         cmp        ecx, 0x20
0000000000001a07         jbe        loc_19e8

                     loc_1a09:
0000000000001a09         lea        rdx, qword [r14+r14*2]                      ; CODE XREF=main+304, main+310, main+341
0000000000001a0d         cmp        eax, 0x69
0000000000001a10         mov        qword [r12+rdx*8+0x10], r9
0000000000001a15         je         loc_1a7e

                     loc_1a17:
0000000000001a17         lea        rdi, qword [aScl+5]                         ; 0x7ad2, CODE XREF=main+482
0000000000001a1e         mov        ecx, 0x2
0000000000001a23         mov        rsi, r9
0000000000001a26         rep  cmpsb byte [rsi], byte [rdi]
0000000000001a28         seta       al
0000000000001a2b         sbb        al, 0x0
0000000000001a2d         test       al, al
0000000000001a2f         je         loc_192f

0000000000001a35         lea        r8, qword [aEgkkmptyz0]                     ; "EGkKMPTYZ0"
0000000000001a3c         lea        rcx, qword [rsp+0x128+var_100]
0000000000001a41         mov        edx, 0xa
0000000000001a46         xor        esi, esi
0000000000001a48         mov        rdi, r9
0000000000001a4b         call       xstrtoumax                                  ; xstrtoumax
0000000000001a50         mov        dword [rsp+0x128+var_128], eax
0000000000001a53         call       j___errno_location                          ; __errno_location
0000000000001a58         mov        edx, dword [rsp+0x128+var_128]
0000000000001a5b         mov        r8, rax
0000000000001a5e         test       edx, edx
0000000000001a60         jne        loc_1e83

0000000000001a66         imul       r14, r14, 0x18
0000000000001a6a         mov        dword [rax], 0x0
0000000000001a70         mov        rax, qword [rsp+0x128+var_100]
0000000000001a75         mov        qword [r12+r14], rax
0000000000001a79         jmp        loc_1928

                     loc_1a7e:
0000000000001a7e         cmp        byte [r9], 0x4c                             ; CODE XREF=main+373
0000000000001a82         jne        loc_1a17

0000000000001a84         lea        rsi, qword [aLineBufferingS]                ; "line buffering stdin is meaningless"
0000000000001a8b         mov        edx, 0x5

                     loc_1a90:
0000000000001a90         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+1599, main+1669
0000000000001a92         call       j_dcgettext                                 ; dcgettext
0000000000001a97         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001a99         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001a9c         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001a9e         xor        eax, eax
0000000000001aa0         call       j_error                                     ; error

                     loc_1aa5:
0000000000001aa5         mov        edi, 0x7d                                   ; argument #1 for method usage, CODE XREF=main+257, main+1458
0000000000001aaa         call       usage                                       ; usage

                     loc_1aaf:
0000000000001aaf         movsxd     rdx, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+173
0000000000001ab6         sub        ebp, edx
0000000000001ab8         lea        r15, qword [rbx+rdx*8]
0000000000001abc         test       ebp, ebp
0000000000001abe         jle        loc_1ed3

0000000000001ac4         lea        rbx, qword [stdbuf]                         ; stdbuf
0000000000001acb         lea        r12, qword [rsp+0x128+var_110]
0000000000001ad0         xor        edx, edx
0000000000001ad2         lea        rbp, qword [rbx+0x48]

                     loc_1ad6:
0000000000001ad6         mov        rax, qword [rbx+0x10]                       ; CODE XREF=main+694
0000000000001ada         test       rax, rax
0000000000001add         je         loc_1b4f

0000000000001adf         cmp        byte [rax], 0x4c
0000000000001ae2         mov        ecx, dword [rbx+8]
0000000000001ae5         lea        edx, dword [rcx+0x80]
0000000000001aeb         je         loc_1d25

0000000000001af1         cmp        edx, 0x17f
0000000000001af7         mov        r8, qword [rbx]
0000000000001afa         ja         loc_1b18

0000000000001afc         mov        qword [rsp+0x128+var_120], r8
0000000000001b01         mov        dword [rsp+0x128+var_128], ecx
0000000000001b04         call       j___ctype_toupper_loc                       ; __ctype_toupper_loc
0000000000001b09         movsxd     rcx, dword [rsp+0x128+var_128]
0000000000001b0d         mov        rax, qword [rax]
0000000000001b10         mov        r8, qword [rsp+0x128+var_120]
0000000000001b15         mov        ecx, dword [rax+rcx*4]

                     loc_1b18:
0000000000001b18         lea        rdx, qword [aStdbuf_7ac4]                   ; "_STDBUF_", CODE XREF=main+602
0000000000001b1f         lea        rsi, qword [aSclu]                          ; "%s%c=%lu"
0000000000001b26         mov        rdi, r12
0000000000001b29         xor        eax, eax
0000000000001b2b         call       rpl_asprintf                                ; rpl_asprintf

                     loc_1b30:
0000000000001b30         test       eax, eax                                    ; CODE XREF=main+1207
0000000000001b32         js         loc_1f9c

0000000000001b38         mov        rdi, qword [rsp+0x128+var_110]              ; argument "__string" for method j_putenv
0000000000001b3d         call       j_putenv                                    ; putenv
0000000000001b42         test       eax, eax
0000000000001b44         jne        loc_1f60

0000000000001b4a         mov        edx, 0x1

                     loc_1b4f:
0000000000001b4f         add        rbx, 0x18                                   ; CODE XREF=main+573
0000000000001b53         cmp        rbp, rbx
0000000000001b56         jne        loc_1ad6

0000000000001b5c         test       dl, dl
0000000000001b5e         je         loc_1f19

0000000000001b64         mov        rbx, qword [program_name]                   ; program_name
0000000000001b6b         mov        esi, 0x2f                                   ; argument "__c" for method j_strchr
0000000000001b70         mov        rdi, rbx                                    ; argument "__s" for method j_strchr
0000000000001b73         call       j_strchr                                    ; strchr
0000000000001b78         test       rax, rax
0000000000001b7b         je         loc_1d5c

0000000000001b81         mov        rdi, rbx
0000000000001b84         call       dir_name                                    ; dir_name
0000000000001b89         mov        qword [program_path], rax                   ; program_path

                     loc_1b90:
0000000000001b90         cmp        qword [program_path], 0x0                   ; program_path, CODE XREF=main+1255
0000000000001b98         je         loc_1da9

                     loc_1b9e:
0000000000001b9e         lea        rdi, qword [aLdpreload]                     ; argument "__name" for method j_getenv, "LD_PRELOAD", CODE XREF=main+1308
0000000000001ba5         lea        rbx, qword [rsp+0x128+var_F8]
0000000000001baa         lea        r14, qword [rsp+0x128+var_100]
0000000000001baf         lea        r13, qword [aLibstdbufso]                   ; "libstdbuf.so"
0000000000001bb6         lea        r12, qword [aSs]                            ; "%s/%s"
0000000000001bbd         lea        rbp, qword [rsp+0x128+var_D8]
0000000000001bc2         call       j_getenv                                    ; getenv
0000000000001bc7         mov        qword [rsp+0x128+var_128], rax
0000000000001bcb         mov        rax, qword [program_path]                   ; program_path
0000000000001bd2         mov        qword [rsp+0x128+var_E8], 0x0
0000000000001bdb         mov        qword [rsp+0x128+var_F8], rax
0000000000001be0         lea        rax, qword [aUsrlocallibexe]                ; "/usr/local/libexec/coreutils"
0000000000001be7         mov        qword [rsp+0x128+var_F0], rax
0000000000001bec         jmp        loc_1c34

                     loc_1bee:
0000000000001bee         xor        eax, eax                                    ; CODE XREF=main+922
0000000000001bf0         mov        rcx, r13
0000000000001bf3         mov        rsi, r12
0000000000001bf6         mov        rdi, r14
0000000000001bf9         call       rpl_asprintf                                ; rpl_asprintf
0000000000001bfe         test       eax, eax
0000000000001c00         js         loc_1f9c

0000000000001c06         mov        rsi, qword [rsp+0x128+var_100]              ; argument "__filename" for method j___xstat
0000000000001c0b         mov        rdx, rbp                                    ; argument "__stat_buf" for method j___xstat
0000000000001c0e         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000001c13         call       j___xstat                                   ; __xstat
0000000000001c18         test       eax, eax
0000000000001c1a         je         loc_1c4d

0000000000001c1c         mov        rdi, qword [rsp+0x128+var_100]              ; argument "__ptr" for method j_free
0000000000001c21         add        rbx, 0x8
0000000000001c25         call       j_free                                      ; free
0000000000001c2a         cmp        qword [rbx], 0x0
0000000000001c2e         je         loc_1f2a

                     loc_1c34:
0000000000001c34         mov        rdx, qword [rbx]                            ; CODE XREF=main+844
0000000000001c37         cmp        byte [rdx], 0x0
0000000000001c3a         jne        loc_1bee

0000000000001c3c         lea        rdi, qword [aLibstdbufso]                   ; "libstdbuf.so"
0000000000001c43         call       xstrdup                                     ; xstrdup
0000000000001c48         mov        qword [rsp+0x128+var_100], rax

                     loc_1c4d:
0000000000001c4d         mov        rcx, qword [rsp+0x128+var_128]              ; CODE XREF=main+890
0000000000001c51         mov        r8, qword [rsp+0x128+var_100]
0000000000001c56         lea        rdi, qword [rsp+0x128+var_108]
0000000000001c5b         test       rcx, rcx
0000000000001c5e         je         loc_1d8c

0000000000001c64         lea        rdx, qword [aLdpreload]                     ; "LD_PRELOAD"
0000000000001c6b         lea        rsi, qword [aSss]                           ; "%s=%s:%s"
0000000000001c72         xor        eax, eax
0000000000001c74         call       rpl_asprintf                                ; rpl_asprintf

                     loc_1c79:
0000000000001c79         test       eax, eax                                    ; CODE XREF=main+1284
0000000000001c7b         js         loc_1f9c

0000000000001c81         mov        rdi, qword [rsp+0x128+var_100]              ; argument "__ptr" for method j_free
0000000000001c86         call       j_free                                      ; free
0000000000001c8b         mov        rdi, qword [rsp+0x128+var_108]              ; argument "__string" for method j_putenv
0000000000001c90         call       j_putenv                                    ; putenv
0000000000001c95         mov        ebx, eax
0000000000001c97         call       j___errno_location                          ; __errno_location
0000000000001c9c         test       ebx, ebx
0000000000001c9e         mov        rbp, rax
0000000000001ca1         jne        loc_1ee4

0000000000001ca7         mov        rdi, qword [program_path]                   ; argument "__ptr" for method j_free, program_path
0000000000001cae         xor        ebx, ebx
0000000000001cb0         call       j_free                                      ; free
0000000000001cb5         mov        rdi, qword [r15]                            ; argument "__file" for method j_execvp
0000000000001cb8         mov        rsi, r15                                    ; argument "__argv" for method j_execvp
0000000000001cbb         call       j_execvp                                    ; execvp
0000000000001cc0         cmp        dword [rbp], 0x2
0000000000001cc4         mov        rdi, qword [r15]
0000000000001cc7         sete       bl
0000000000001cca         call       quote                                       ; quote
0000000000001ccf         lea        rsi, qword [aFailedToRunCom]                ; argument "msgid" for method j_dcgettext, "failed to run command %s"
0000000000001cd6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001cd8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001cdd         mov        r12, rax
0000000000001ce0         add        ebx, 0x7e
0000000000001ce3         call       j_dcgettext                                 ; dcgettext
0000000000001ce8         mov        esi, dword [rbp]                            ; argument "__errnum" for method j_error
0000000000001ceb         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001cee         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001cf0         xor        eax, eax
0000000000001cf2         mov        rcx, r12
0000000000001cf5         call       j_error                                     ; error
0000000000001cfa         mov        eax, ebx
0000000000001cfc         mov        rbx, qword [rsp+0x128+var_40]
0000000000001d04         xor        rbx, qword [fs:0x28]
0000000000001d0d         jne        loc_1e5f

0000000000001d13         add        rsp, 0xf8
0000000000001d1a         pop        rbx
0000000000001d1b         pop        rbp
0000000000001d1c         pop        r12
0000000000001d1e         pop        r13
0000000000001d20         pop        r14
0000000000001d22         pop        r15
0000000000001d24         ret
                        ; endp

                     loc_1d25:
0000000000001d25         cmp        edx, 0x17f                                  ; CODE XREF=main+587
0000000000001d2b         ja         loc_1d3f

0000000000001d2d         mov        dword [rsp+0x128+var_128], ecx
0000000000001d30         call       j___ctype_toupper_loc                       ; __ctype_toupper_loc
0000000000001d35         movsxd     rcx, dword [rsp+0x128+var_128]
0000000000001d39         mov        rax, qword [rax]
0000000000001d3c         mov        ecx, dword [rax+rcx*4]

                     loc_1d3f:
0000000000001d3f         lea        rdx, qword [aStdbuf_7ac4]                   ; "_STDBUF_", CODE XREF=main+1163
0000000000001d46         lea        rsi, qword [aScl]                           ; "%s%c=L"
0000000000001d4d         mov        rdi, r12
0000000000001d50         xor        eax, eax
0000000000001d52         call       rpl_asprintf                                ; rpl_asprintf
0000000000001d57         jmp        loc_1b30

                     loc_1d5c:
0000000000001d5c         lea        rdi, qword [aProcselfexe]                   ; "/proc/self/exe", CODE XREF=main+731
0000000000001d63         call       xreadlink                                   ; xreadlink
0000000000001d68         test       rax, rax
0000000000001d6b         mov        rbp, rax
0000000000001d6e         je         loc_1dc1

0000000000001d70         mov        rdi, rax
0000000000001d73         call       dir_name                                    ; dir_name
0000000000001d78         mov        qword [program_path], rax                   ; program_path

                     loc_1d7f:
0000000000001d7f         mov        rdi, rbp                                    ; argument "__ptr" for method j_free, CODE XREF=main+1331, main+1386, main+1448
0000000000001d82         call       j_free                                      ; free
0000000000001d87         jmp        loc_1b90

                     loc_1d8c:
0000000000001d8c         lea        rdx, qword [aLdpreload]                     ; "LD_PRELOAD", CODE XREF=main+958
0000000000001d93         lea        rsi, qword [aSs_7b60]                       ; "%s=%s"
0000000000001d9a         mov        rcx, r8
0000000000001d9d         xor        eax, eax
0000000000001d9f         call       rpl_asprintf                                ; rpl_asprintf
0000000000001da4         jmp        loc_1c79

                     loc_1da9:
0000000000001da9         lea        rdi, qword [aUsrlocallibcor]                ; "/usr/local/lib/coreutils", CODE XREF=main+760
0000000000001db0         call       xstrdup                                     ; xstrdup
0000000000001db5         mov        qword [program_path], rax                   ; program_path
0000000000001dbc         jmp        loc_1b9e

                     loc_1dc1:
0000000000001dc1         lea        rdi, qword [aProcselfexe+15]                ; argument "__name" for method j_getenv, 0x7aec, CODE XREF=main+1230
0000000000001dc8         call       j_getenv                                    ; getenv
0000000000001dcd         test       rax, rax
0000000000001dd0         mov        rbp, rax
0000000000001dd3         je         loc_1d7f

0000000000001dd5         mov        rdi, rax
0000000000001dd8         lea        r13, qword [aPadraigBrady+20]               ; 0x7ab2
0000000000001ddf         call       xstrdup                                     ; xstrdup
0000000000001de4         lea        rsi, qword [aPadraigBrady+20]               ; argument "__delim" for method j_strtok, 0x7ab2
0000000000001deb         mov        rdi, rax                                    ; argument "__s" for method j_strtok
0000000000001dee         mov        rbp, rax
0000000000001df1         call       j_strtok                                    ; strtok
0000000000001df6         jmp        loc_1e07

                     loc_1df8:
0000000000001df8         call       j_free                                      ; free, CODE XREF=main+1426
0000000000001dfd         mov        rsi, r13                                    ; argument "__delim" for method j_strtok
0000000000001e00         xor        edi, edi                                    ; argument "__s" for method j_strtok
0000000000001e02         call       j_strtok                                    ; strtok

                     loc_1e07:
0000000000001e07         test       rax, rax                                    ; CODE XREF=main+1366
0000000000001e0a         je         loc_1d7f

0000000000001e10         xor        edx, edx
0000000000001e12         mov        rsi, rbx
0000000000001e15         mov        rdi, rax
0000000000001e18         call       file_name_concat                            ; file_name_concat
0000000000001e1d         mov        esi, 0x1                                    ; argument "__type" for method j_access
0000000000001e22         mov        rdi, rax                                    ; argument "__name" for method j_access
0000000000001e25         mov        r12, rax
0000000000001e28         call       j_access                                    ; access
0000000000001e2d         test       eax, eax
0000000000001e2f         mov        rdi, r12
0000000000001e32         jne        loc_1df8

0000000000001e34         call       dir_name                                    ; dir_name
0000000000001e39         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000001e3c         mov        qword [program_path], rax                   ; program_path
0000000000001e43         call       j_free                                      ; free
0000000000001e48         jmp        loc_1d7f

                     loc_1e4d:
0000000000001e4d         cmp        eax, 0xffffff7e                             ; CODE XREF=main+191
0000000000001e52         jne        loc_1aa5

0000000000001e58         xor        edi, edi                                    ; argument #1 for method usage
0000000000001e5a         call       usage                                       ; usage

                     loc_1e5f:
0000000000001e5f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+1133
                        ; endp

                     loc_1e64:
0000000000001e64         lea        rcx, qword [__PRETTY_FUNCTION__.7688]       ; argument "__function" for method j___assert_fail, __PRETTY_FUNCTION__.7688, CODE XREF=main+275
0000000000001e6b         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/stdbuf.c"
0000000000001e72         lea        rdi, qword [a0OptfilenoOptf]                ; argument "__assertion" for method j___assert_fail, "0 <= opt_fileno && opt_fileno < ARRAY_CARDINALITY (stdbuf)"
0000000000001e79         mov        edx, 0x150                                  ; argument "__line" for method j___assert_fail
0000000000001e7e         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_1e83:
0000000000001e83         sub        edx, 0x1                                    ; CODE XREF=main+448
0000000000001e86         je         loc_1ecc

0000000000001e88         mov        eax, dword [rax]

                     loc_1e8a:
0000000000001e8a         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+1585
0000000000001e91         mov        dword [r8], eax
0000000000001e94         mov        qword [rsp+0x128+var_128], r8
0000000000001e98         call       quote                                       ; quote
0000000000001e9d         lea        rsi, qword [aInvalidModeS]                  ; argument "msgid" for method j_dcgettext, "invalid mode %s"
0000000000001ea4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001ea9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001eab         mov        rbx, rax
0000000000001eae         call       j_dcgettext                                 ; dcgettext
0000000000001eb3         mov        r8, qword [rsp+0x128+var_128]
0000000000001eb7         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001eba         mov        rcx, rbx
0000000000001ebd         mov        edi, 0x7d                                   ; argument "__status" for method j_error
0000000000001ec2         xor        eax, eax
0000000000001ec4         mov        esi, dword [r8]                             ; argument "__errnum" for method j_error
0000000000001ec7         call       j_error                                     ; error

                     loc_1ecc:
0000000000001ecc         mov        eax, 0x4b                                   ; CODE XREF=main+1510
0000000000001ed1         jmp        loc_1e8a

                     loc_1ed3:
0000000000001ed3         mov        edx, 0x5                                    ; CODE XREF=main+542
0000000000001ed8         lea        rsi, qword [aMissingOperand]                ; "missing operand"
0000000000001edf         jmp        loc_1a90

                     loc_1ee4:
0000000000001ee4         mov        rdi, qword [rsp+0x128+var_108]              ; CODE XREF=main+1025
0000000000001ee9         call       quote                                       ; quote
0000000000001eee         lea        rsi, qword [aFailedToUpdate]                ; argument "msgid" for method j_dcgettext, "failed to update the environment with %s"
0000000000001ef5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001efa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001efc         mov        rbx, rax
0000000000001eff         call       j_dcgettext                                 ; dcgettext
0000000000001f04         mov        esi, dword [rbp]                            ; argument "__errnum" for method j_error
0000000000001f07         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001f0a         mov        rcx, rbx
0000000000001f0d         mov        edi, 0x7d                                   ; argument "__status" for method j_error
0000000000001f12         xor        eax, eax
0000000000001f14         call       j_error                                     ; error

                     loc_1f19:
0000000000001f19         mov        edx, 0x5                                    ; CODE XREF=main+702
0000000000001f1e         lea        rsi, qword [aYouMustSpecify]                ; "you must specify a buffering mode option"
0000000000001f25         jmp        loc_1a90

                     loc_1f2a:
0000000000001f2a         lea        rdi, qword [aLibstdbufso]                   ; "libstdbuf.so", CODE XREF=main+910
0000000000001f31         call       quote                                       ; quote
0000000000001f36         lea        rsi, qword [aFailedToFindS]                 ; argument "msgid" for method j_dcgettext, "failed to find %s"
0000000000001f3d         mov        rbx, rax
0000000000001f40         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f45         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f47         call       j_dcgettext                                 ; dcgettext
0000000000001f4c         mov        rcx, rbx
0000000000001f4f         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001f52         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001f54         mov        edi, 0x7d                                   ; argument "__status" for method j_error
0000000000001f59         xor        eax, eax
0000000000001f5b         call       j_error                                     ; error

                     loc_1f60:
0000000000001f60         mov        rdi, qword [rsp+0x128+var_110]              ; CODE XREF=main+676
0000000000001f65         call       quote                                       ; quote
0000000000001f6a         lea        rsi, qword [aFailedToUpdate]                ; argument "msgid" for method j_dcgettext, "failed to update the environment with %s"
0000000000001f71         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f76         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f78         mov        rbp, rax
0000000000001f7b         call       j_dcgettext                                 ; dcgettext
0000000000001f80         mov        rbx, rax
0000000000001f83         call       j___errno_location                          ; __errno_location
0000000000001f88         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001f8a         mov        rcx, rbp
0000000000001f8d         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001f90         mov        edi, 0x7d                                   ; argument "__status" for method j_error
0000000000001f95         xor        eax, eax
0000000000001f97         call       j_error                                     ; error

                     loc_1f9c:
0000000000001f9c         call       xalloc_die                                  ; xalloc_die, CODE XREF=main+658, main+864, main+987
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1fa1:
0000000000001fa1         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x91e8)
0000000000001fab         nop        dword [rax+rax]
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000001fb0         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x914c)
0000000000001fb2         mov        r9, rdx
0000000000001fb5         pop        rsi
0000000000001fb6         mov        rdx, rsp
0000000000001fb9         and        rsp, 0xfffffffffffffff0
0000000000001fbd         push       rax
0000000000001fbe         push       rsp
0000000000001fbf         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000001fc6         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000001fcd         lea        rdi, qword [main]                           ; main
0000000000001fd4         call       qword [qword_20afc8+8]                      ; 0x20afd0
0000000000001fda         hlt
                        ; endp
0000000000001fdb         align      32                                          ; End of unwind block (FDE at 0x914c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001fe0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000001fe7         push       rbp
0000000000001fe8         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001fef         cmp        rax, rdi
0000000000001ff2         mov        rbp, rsp
0000000000001ff5         je         loc_2010

0000000000001ff7         mov        rax, qword [qword_20afc8]                   ; qword_20afc8
0000000000001ffe         test       rax, rax
0000000000002001         je         loc_2010

0000000000002003         pop        rbp
0000000000002004         jmp        rax
                        ; endp
0000000000002006         align      16

                     loc_2010:
0000000000002010         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000002011         ret
                        ; endp
0000000000002012         align      32

                     register_tm_clones:
0000000000002020         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000002027         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000202e         push       rbp
000000000000202f         sub        rsi, rdi
0000000000002032         mov        rbp, rsp
0000000000002035         sar        rsi, 0x3
0000000000002039         mov        rax, rsi
000000000000203c         shr        rax, 0x3f
0000000000002040         add        rsi, rax
0000000000002043         sar        rsi, 0x1
0000000000002046         je         loc_2060

0000000000002048         mov        rax, qword [qword_20afe0]                   ; qword_20afe0
000000000000204f         test       rax, rax
0000000000002052         je         loc_2060

0000000000002054         pop        rbp
0000000000002055         jmp        rax
                        ; endp
0000000000002057         align      32

                     loc_2060:
0000000000002060         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000002061         ret
                        ; endp
0000000000002062         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000002070         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000002077         jne        loc_20a8

0000000000002079         cmp        qword [qword_20afe8], 0x0                   ; qword_20afe8
0000000000002081         push       rbp
0000000000002082         mov        rbp, rsp
0000000000002085         je         loc_2093

0000000000002087         mov        rdi, qword [__dso_handle]                   ; __dso_handle
000000000000208e         call       j_qword_20afe8                              ; qword_20afe8

                     loc_2093:
0000000000002093         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000002098         mov        byte [completed.7697], 0x1                  ; completed.7697
000000000000209f         pop        rbp
00000000000020a0         ret
                        ; endp
00000000000020a1         align      8

                     loc_20a8:
00000000000020a8         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
00000000000020aa         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
00000000000020b0         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
00000000000020b1         mov        rbp, rsp
00000000000020b4         pop        rbp
00000000000020b5         jmp        register_tm_clones                          ; register_tm_clones
00000000000020ba         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
00000000000020c0         push       r13                                         ; Begin of unwind block (FDE at 0x91bc), CODE XREF=main+522, main+1466
00000000000020c2         push       r12
00000000000020c4         mov        edx, 0x5
00000000000020c9         push       rbp
00000000000020ca         push       rbx
00000000000020cb         mov        ebp, edi
00000000000020cd         sub        rsp, 0x88
00000000000020d4         mov        rbx, qword [program_name]                   ; program_name
00000000000020db         mov        rax, qword [fs:0x28]
00000000000020e4         mov        qword [rsp+0xa8+var_30], rax
00000000000020e9         xor        eax, eax
00000000000020eb         test       edi, edi
00000000000020ed         je         loc_211d

00000000000020ef         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
00000000000020f6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000020f8         call       j_dcgettext                                 ; dcgettext
00000000000020fd         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002104         mov        rdx, rax
0000000000002107         mov        rcx, rbx
000000000000210a         mov        esi, 0x1
000000000000210f         xor        eax, eax
0000000000002111         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_2116:
0000000000002116         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+854
0000000000002118         call       j_exit                                      ; exit
                        ; endp

                     loc_211d:
000000000000211d         lea        rsi, qword [aUsageSOptionCo]                ; argument "msgid" for method j_dcgettext, "Usage: %s OPTION... COMMAND\\n", CODE XREF=usage+45
0000000000002124         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002126         call       j_dcgettext                                 ; dcgettext
000000000000212b         mov        rdx, rbx
000000000000212e         mov        rsi, rax
0000000000002131         mov        edi, 0x1
0000000000002136         xor        eax, eax
0000000000002138         call       j___printf_chk                              ; __printf_chk
000000000000213d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002144         lea        rsi, qword [aRunCommandWith]                ; argument "msgid" for method j_dcgettext, "Run COMMAND, with modified buffering operations for its standard streams.\\n"
000000000000214b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002150         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002152         call       j_dcgettext                                 ; dcgettext
0000000000002157         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000215a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000215d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002162         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002169         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000002170         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002175         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002177         call       j_dcgettext                                 ; dcgettext
000000000000217c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000217f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002182         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002187         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000218e         lea        rsi, qword [aIInputmodeAdju]                ; argument "msgid" for method j_dcgettext, "  -i, --input=MODE   adjust standard input stream buffering\\n  -o, --output=MODE  adjust standard output stream buffering\\n  -e, --error=MODE   adjust standard error stream buffering\\n"
0000000000002195         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000219a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000219c         call       j_dcgettext                                 ; dcgettext
00000000000021a1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000021a4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000021a7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000021ac         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000021b3         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
00000000000021ba         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021bf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021c1         call       j_dcgettext                                 ; dcgettext
00000000000021c6         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000021c9         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000021cc         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000021d1         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000021d8         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
00000000000021df         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021e4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021e6         call       j_dcgettext                                 ; dcgettext
00000000000021eb         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000021ee         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000021f1         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000021f6         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000021fd         lea        rsi, qword [aNifModeIsLTheC]                ; argument "msgid" for method j_dcgettext, "\\nIf MODE is 'L' the corresponding stream will be line buffered.\\nThis option is invalid with standard input.\\n"
0000000000002204         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002209         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000220b         call       j_dcgettext                                 ; dcgettext
0000000000002210         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002213         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002216         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000221b         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002222         lea        rsi, qword [aNifModeIs0TheC]                ; argument "msgid" for method j_dcgettext, "\\nIf MODE is '0' the corresponding stream will be unbuffered.\\n"
0000000000002229         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000222e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002230         call       j_dcgettext                                 ; dcgettext
0000000000002235         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002238         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000223b         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002240         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002247         lea        rsi, qword [aNotherwiseMode]                ; argument "msgid" for method j_dcgettext, "\\nOtherwise MODE is a number which may be followed by one of the following:\\nKB 1000, K 1024, MB 1000*1000, M 1024*1024, and so on for G, T, P, E, Z, Y.\\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\\nIn this case the corresponding stream will be …"
000000000000224e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002253         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002255         call       j_dcgettext                                 ; dcgettext
000000000000225a         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000225d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002260         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002265         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000226c         lea        rsi, qword [aNnoteIfCommand]                ; argument "msgid" for method j_dcgettext, "\\nNOTE: If COMMAND adjusts the buffering of its standard streams ('tee' does\\nfor example) then that will override corresponding changes by 'stdbuf'.\\nAlso some filters (like 'dd' and 'cat' etc.) don't use streams for I/O,\\nand are thus unaffected by 'stdbuf' …"
0000000000002273         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002278         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000227a         call       j_dcgettext                                 ; dcgettext
000000000000227f         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002282         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002285         lea        rbx, qword [aStdbuf]                        ; "stdbuf"
000000000000228c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002291         lea        rax, qword [aUsageSOptionCo+29]             ; 0x79c8
0000000000002298         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
000000000000229f         mov        qword [rsp+0xa8+var_48], 0x0
00000000000022a8         mov        qword [rsp+0xa8+var_40], 0x0
00000000000022b1         mov        rdx, rsp
00000000000022b4         mov        qword [rsp+0xa8+var_A8], rax
00000000000022b8         lea        rax, qword [aTestInvocation]                ; "test invocation"
00000000000022bf         mov        qword [rsp+0xa8+var_78], rcx
00000000000022c4         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
00000000000022cb         mov        qword [rsp+0xa8+var_A0], rax
00000000000022d0         lea        rax, qword [aCoreutils]                     ; "coreutils"
00000000000022d7         mov        qword [rsp+0xa8+var_68], rcx
00000000000022dc         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
00000000000022e3         mov        qword [rsp+0xa8+var_98], rax
00000000000022e8         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
00000000000022ef         mov        qword [rsp+0xa8+var_58], rcx
00000000000022f4         mov        qword [rsp+0xa8+var_90], rax
00000000000022f9         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000002300         mov        qword [rsp+0xa8+var_88], rax
0000000000002305         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
000000000000230c         mov        qword [rsp+0xa8+var_80], rax
0000000000002311         mov        qword [rsp+0xa8+var_70], rax
0000000000002316         mov        qword [rsp+0xa8+var_60], rax
000000000000231b         mov        qword [rsp+0xa8+var_50], rax

                     loc_2320:
0000000000002320         add        rdx, 0x10                                   ; CODE XREF=usage+637
0000000000002324         mov        rdi, qword [rdx]
0000000000002327         test       rdi, rdi
000000000000232a         je         loc_233f

000000000000232c         mov        ecx, 0x7
0000000000002331         mov        rsi, rbx
0000000000002334         rep  cmpsb byte [rsi], byte [rdi]
0000000000002336         seta       al
0000000000002339         sbb        al, 0x0
000000000000233b         test       al, al
000000000000233d         jne        loc_2320

                     loc_233f:
000000000000233f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+618
0000000000002343         xor        edi, edi
0000000000002345         mov        edx, 0x5
000000000000234a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002351         test       r12, r12
0000000000002354         je         loc_241b

000000000000235a         call       j_dcgettext                                 ; dcgettext
000000000000235f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002366         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x7a3e
000000000000236d         mov        rsi, rax
0000000000002370         mov        edi, 0x1
0000000000002375         xor        eax, eax
0000000000002377         call       j___printf_chk                              ; __printf_chk
000000000000237c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000237e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002383         call       j_setlocale                                 ; setlocale
0000000000002388         test       rax, rax
000000000000238b         je         loc_23a9

000000000000238d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x7a4c
0000000000002394         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002399         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000239c         call       j_strncmp                                   ; strncmp
00000000000023a1         test       eax, eax
00000000000023a3         jne        loc_24b0

                     loc_23a9:
00000000000023a9         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+715, usage+1045
00000000000023b0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023b2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023b7         call       j_dcgettext                                 ; dcgettext
00000000000023bc         lea        rcx, qword [aStdbuf]                        ; "stdbuf"
00000000000023c3         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000023ca         mov        rsi, rax
00000000000023cd         mov        edi, 0x1
00000000000023d2         xor        eax, eax
00000000000023d4         call       j___printf_chk                              ; __printf_chk
00000000000023d9         cmp        r12, rbx
00000000000023dc         lea        rcx, qword [aMulticallInvoc+10]             ; 0x79e4
00000000000023e3         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x87e1
00000000000023ea         cmove      rbx, rcx

                     loc_23ee:
00000000000023ee         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+996
00000000000023f5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023f7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023fc         call       j_dcgettext                                 ; dcgettext
0000000000002401         mov        rcx, rbx
0000000000002404         mov        rsi, rax
0000000000002407         mov        rdx, r12
000000000000240a         mov        edi, 0x1
000000000000240f         xor        eax, eax
0000000000002411         call       j___printf_chk                              ; __printf_chk
0000000000002416         jmp        loc_2116

                     loc_241b:
000000000000241b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+660
0000000000002420         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002427         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x7a3e
000000000000242e         mov        rsi, rax
0000000000002431         mov        edi, 0x1
0000000000002436         xor        eax, eax
0000000000002438         call       j___printf_chk                              ; __printf_chk
000000000000243d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000243f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002444         call       j_setlocale                                 ; setlocale
0000000000002449         test       rax, rax
000000000000244c         je         loc_2466

000000000000244e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x7a4c
0000000000002455         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
000000000000245a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000245d         call       j_strncmp                                   ; strncmp
0000000000002462         test       eax, eax
0000000000002464         jne        loc_24a9

                     loc_2466:
0000000000002466         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+908
000000000000246d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002472         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002474         lea        r12, qword [aStdbuf]                        ; "stdbuf"
000000000000247b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x79e4
0000000000002482         call       j_dcgettext                                 ; dcgettext
0000000000002487         lea        rcx, qword [aStdbuf]                        ; "stdbuf"
000000000000248e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002495         mov        rsi, rax
0000000000002498         mov        edi, 0x1
000000000000249d         xor        eax, eax
000000000000249f         call       j___printf_chk                              ; __printf_chk
00000000000024a4         jmp        loc_23ee

                     loc_24a9:
00000000000024a9         lea        r12, qword [aStdbuf]                        ; "stdbuf", CODE XREF=usage+932

                     loc_24b0:
00000000000024b0         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+739
00000000000024b7         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
00000000000024be         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024c0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024c5         call       j_dcgettext                                 ; dcgettext
00000000000024ca         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
00000000000024cd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000024d0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024d5         jmp        loc_23a9
00000000000024da         align      32                                          ; End of unwind block (FDE at 0x91bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
00000000000024e0         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x923c), file_name
00000000000024e7         ret
                        ; endp
00000000000024e8         align      16                                          ; End of unwind block (FDE at 0x923c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
00000000000024f0         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x9250), ignore_EPIPE
00000000000024f7         ret
                        ; endp
00000000000024f8         align      256                                         ; End of unwind block (FDE at 0x9250)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002500         push       rbp                                         ; Begin of unwind block (FDE at 0x9264), DATA XREF=main+114
0000000000002501         push       rbx
0000000000002502         sub        rsp, 0x8
0000000000002506         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000250d         call       close_stream                                ; close_stream
0000000000002512         test       eax, eax
0000000000002514         je         loc_252c

0000000000002516         call       j___errno_location                          ; __errno_location
000000000000251b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002522         mov        rbx, rax
0000000000002525         je         loc_2543

0000000000002527         cmp        dword [rax], 0x20
000000000000252a         jne        loc_2543

                     loc_252c:
000000000000252c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000002533         call       close_stream                                ; close_stream
0000000000002538         test       eax, eax
000000000000253a         jne        loc_2582

000000000000253c         add        rsp, 0x8
0000000000002540         pop        rbx
0000000000002541         pop        rbp
0000000000002542         ret
                        ; endp

                     loc_2543:
0000000000002543         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000254a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000254c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002551         call       j_dcgettext                                 ; dcgettext
0000000000002556         mov        rdi, qword [file_name]                      ; file_name
000000000000255d         mov        rbp, rax
0000000000002560         test       rdi, rdi
0000000000002563         je         loc_258d

0000000000002565         call       quotearg_colon                              ; quotearg_colon
000000000000256a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000256c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002573         mov        rcx, rax
0000000000002576         mov        r8, rbp
0000000000002579         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000257b         xor        eax, eax
000000000000257d         call       j_error                                     ; error

                     loc_2582:
0000000000002582         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002588         call       j__exit                                     ; _exit
                        ; endp

                     loc_258d:
000000000000258d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000258f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8266
0000000000002596         mov        rcx, rax
0000000000002599         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000259b         xor        eax, eax
000000000000259d         call       j_error                                     ; error
00000000000025a2         jmp        loc_2582
00000000000025a4         align      16                                          ; End of unwind block (FDE at 0x9264)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dir_name:
00000000000025b0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x9294), CODE XREF=main+740, main+1235, main+1428
00000000000025b4         call       mdir_name                                   ; mdir_name
00000000000025b9         test       rax, rax
00000000000025bc         je         loc_25c3

00000000000025be         add        rsp, 0x8
00000000000025c2         ret
                        ; endp

                     loc_25c3:
00000000000025c3         call       xalloc_die                                  ; xalloc_die, CODE XREF=dir_name+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_25c8:
00000000000025c8         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x9294)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dir_len:
00000000000025d0         push       rbp                                         ; Begin of unwind block (FDE at 0x92b4), CODE XREF=mdir_name+9
00000000000025d1         push       rbx
00000000000025d2         xor        ebp, ebp
00000000000025d4         mov        rbx, rdi
00000000000025d7         sub        rsp, 0x8
00000000000025db         cmp        byte [rdi], 0x2f
00000000000025de         sete       bpl
00000000000025e2         call       last_component                              ; last_component
00000000000025e7         mov        rcx, rax
00000000000025ea         sub        rcx, rbx
00000000000025ed         cmp        rcx, rbp
00000000000025f0         jbe        loc_2620

00000000000025f2         cmp        byte [rax-1], 0x2f
00000000000025f6         lea        rdx, qword [rcx-1]
00000000000025fa         je         loc_260e

00000000000025fc         jmp        loc_2620
00000000000025fe         align      512

                     loc_2600:
0000000000002600         cmp        byte [rbx+rdx-1], 0x2f                      ; CODE XREF=dir_len+65
0000000000002605         lea        rax, qword [rdx-1]
0000000000002609         jne        loc_2613

000000000000260b         mov        rdx, rax

                     loc_260e:
000000000000260e         cmp        rbp, rdx                                    ; CODE XREF=dir_len+42
0000000000002611         jne        loc_2600

                     loc_2613:
0000000000002613         add        rsp, 0x8                                    ; CODE XREF=dir_len+57
0000000000002617         mov        rax, rdx
000000000000261a         pop        rbx
000000000000261b         pop        rbp
000000000000261c         ret
                        ; endp
000000000000261d         align      32

                     loc_2620:
0000000000002620         add        rsp, 0x8                                    ; CODE XREF=dir_len+32, dir_len+44
0000000000002624         mov        rdx, rcx
0000000000002627         mov        rax, rdx
000000000000262a         pop        rbx
000000000000262b         pop        rbp
000000000000262c         ret
                        ; endp
000000000000262d         align      16                                          ; End of unwind block (FDE at 0x92b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mdir_name:
0000000000002630         push       rbp                                         ; Begin of unwind block (FDE at 0x92e8), CODE XREF=dir_name+4
0000000000002631         push       rbx
0000000000002632         mov        rbp, rdi
0000000000002635         sub        rsp, 0x8
0000000000002639         call       dir_len                                     ; dir_len
000000000000263e         test       rax, rax
0000000000002641         mov        rbx, rax
0000000000002644         sete       al
0000000000002647         movzx      eax, al
000000000000264a         lea        rdi, qword [rbx+rax+1]                      ; argument "__size" for method j_malloc
000000000000264f         call       j_malloc                                    ; malloc
0000000000002654         test       rax, rax
0000000000002657         mov        rcx, rax
000000000000265a         je         loc_2676

000000000000265c         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000265f         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000002662         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000002665         call       j_memcpy                                    ; memcpy
000000000000266a         test       rbx, rbx
000000000000266d         mov        rcx, rax
0000000000002670         je         loc_2680

                     loc_2672:
0000000000002672         mov        byte [rcx+rbx], 0x0                         ; CODE XREF=mdir_name+88

                     loc_2676:
0000000000002676         add        rsp, 0x8                                    ; CODE XREF=mdir_name+42
000000000000267a         mov        rax, rcx
000000000000267d         pop        rbx
000000000000267e         pop        rbp
000000000000267f         ret
                        ; endp

                     loc_2680:
0000000000002680         mov        byte [rax], 0x2e                            ; CODE XREF=mdir_name+64
0000000000002683         mov        ebx, 0x1
0000000000002688         jmp        loc_2672
000000000000268a         align      16                                          ; End of unwind block (FDE at 0x92e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     last_component:
0000000000002690         movzx      edx, byte [rdi]                             ; Begin of unwind block (FDE at 0x9314), CODE XREF=dir_len+18, mfile_name_concat+23
0000000000002693         mov        rax, rdi
0000000000002696         cmp        dl, 0x2f
0000000000002699         jne        loc_26ac

000000000000269b         nop        dword [rax+rax]

                     loc_26a0:
00000000000026a0         add        rax, 0x1                                    ; CODE XREF=last_component+26
00000000000026a4         movzx      edx, byte [rax]
00000000000026a7         cmp        dl, 0x2f
00000000000026aa         je         loc_26a0

                     loc_26ac:
00000000000026ac         test       dl, dl                                      ; CODE XREF=last_component+9
00000000000026ae         je         loc_26ea

00000000000026b0         mov        rcx, rax
00000000000026b3         xor        esi, esi
00000000000026b5         jmp        loc_26d5
00000000000026b7         align      64

                     loc_26c0:
00000000000026c0         test       sil, sil                                    ; CODE XREF=last_component+72
00000000000026c3         je         loc_26ca

00000000000026c5         mov        rax, rcx
00000000000026c8         xor        esi, esi

                     loc_26ca:
00000000000026ca         add        rcx, 0x1                                    ; CODE XREF=last_component+51
00000000000026ce         movzx      edx, byte [rcx]
00000000000026d1         test       dl, dl
00000000000026d3         je         loc_26ea

                     loc_26d5:
00000000000026d5         cmp        dl, 0x2f                                    ; CODE XREF=last_component+37, last_component+88
00000000000026d8         jne        loc_26c0

00000000000026da         add        rcx, 0x1
00000000000026de         movzx      edx, byte [rcx]
00000000000026e1         mov        esi, 0x1
00000000000026e6         test       dl, dl
00000000000026e8         jne        loc_26d5

                     loc_26ea:
00000000000026ea         ret                                                    ; CODE XREF=last_component+30, last_component+67
                        ; endp
00000000000026ec         align      16                                          ; End of unwind block (FDE at 0x9314)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base_len:
00000000000026f0         push       rbx                                         ; Begin of unwind block (FDE at 0x9328), CODE XREF=mfile_name_concat+34
00000000000026f1         mov        rbx, rdi
00000000000026f4         call       j_strlen                                    ; strlen
00000000000026f9         cmp        rax, 0x1
00000000000026fd         jbe        loc_270a

00000000000026ff         cmp        byte [rbx+rax-1], 0x2f
0000000000002704         lea        rdx, qword [rax-1]
0000000000002708         je         loc_2718

                     loc_270a:
000000000000270a         pop        rbx                                         ; CODE XREF=base_len+13
000000000000270b         ret
                        ; endp
000000000000270c         align      16

                     loc_2710:
0000000000002710         mov        rdx, rax                                    ; CODE XREF=base_len+55
0000000000002713         nop        dword [rax+rax]

                     loc_2718:
0000000000002718         cmp        rdx, 0x1                                    ; CODE XREF=base_len+24
000000000000271c         je         loc_2730

000000000000271e         cmp        byte [rbx+rdx-1], 0x2f
0000000000002723         lea        rax, qword [rdx-1]
0000000000002727         je         loc_2710

0000000000002729         mov        rax, rdx
000000000000272c         pop        rbx
000000000000272d         ret
                        ; endp
000000000000272e         align      16

                     loc_2730:
0000000000002730         mov        eax, 0x1                                    ; CODE XREF=base_len+44
0000000000002735         pop        rbx
0000000000002736         ret
                        ; endp
0000000000002737         align      64                                          ; End of unwind block (FDE at 0x9328)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     file_name_concat:
0000000000002740         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x9354), CODE XREF=main+1400
0000000000002744         call       mfile_name_concat                           ; mfile_name_concat
0000000000002749         test       rax, rax
000000000000274c         je         loc_2753

000000000000274e         add        rsp, 0x8
0000000000002752         ret
                        ; endp

                     loc_2753:
0000000000002753         call       xalloc_die                                  ; xalloc_die, CODE XREF=file_name_concat+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2758:
0000000000002758         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x9354)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_39: int8_t, -57
        ;    var_48: int64_t, -72


                     mfile_name_concat:
0000000000002760         push       r15                                         ; Begin of unwind block (FDE at 0x9374), CODE XREF=file_name_concat+4
0000000000002762         push       r14
0000000000002764         mov        r15, rdx
0000000000002767         push       r13
0000000000002769         push       r12
000000000000276b         mov        r12, rdi
000000000000276e         push       rbp
000000000000276f         push       rbx
0000000000002770         mov        rbp, rsi
0000000000002773         sub        rsp, 0x18
0000000000002777         call       last_component                              ; last_component
000000000000277c         mov        rbx, rax
000000000000277f         mov        rdi, rax
0000000000002782         call       base_len                                    ; base_len
0000000000002787         sub        rbx, r12
000000000000278a         mov        r13, rax
000000000000278d         mov        rdi, rbp                                    ; argument "__s" for method j_strlen
0000000000002790         add        rbx, rax
0000000000002793         call       j_strlen                                    ; strlen
0000000000002798         test       r13, r13
000000000000279b         mov        r14, rax
000000000000279e         je         loc_27d0

00000000000027a0         cmp        byte [r12+rbx-1], 0x2f
00000000000027a6         je         loc_2850

00000000000027ac         xor        eax, eax
00000000000027ae         cmp        byte [rbp], 0x2f
00000000000027b2         mov        edx, 0x0
00000000000027b7         setne      al
00000000000027ba         mov        qword [rsp+0x48+var_48], rax
00000000000027be         mov        eax, 0x2f
00000000000027c3         cmove      eax, edx
00000000000027c6         mov        byte [rsp+0x48+var_39], al
00000000000027ca         jmp        loc_27ee
00000000000027cc         align      16

                     loc_27d0:
00000000000027d0         xor        eax, eax                                    ; CODE XREF=mfile_name_concat+62
00000000000027d2         cmp        byte [rbp], 0x2f
00000000000027d6         mov        edx, 0x0
00000000000027db         sete       al
00000000000027de         mov        qword [rsp+0x48+var_48], rax
00000000000027e2         mov        eax, 0x2e
00000000000027e7         cmovne     eax, edx
00000000000027ea         mov        byte [rsp+0x48+var_39], al

                     loc_27ee:
00000000000027ee         lea        rdi, qword [rbx+r14+1]                      ; CODE XREF=mfile_name_concat+106, mfile_name_concat+253
00000000000027f3         add        rdi, qword [rsp+0x48+var_48]                ; argument "__size" for method j_malloc
00000000000027f7         call       j_malloc                                    ; malloc
00000000000027fc         test       rax, rax
00000000000027ff         mov        r13, rax
0000000000002802         je         loc_2836

0000000000002804         mov        rdi, rax                                    ; argument "__dest" for method j_mempcpy
0000000000002807         mov        rdx, rbx                                    ; argument "__n" for method j_mempcpy
000000000000280a         mov        rsi, r12                                    ; argument "__src" for method j_mempcpy
000000000000280d         call       j_mempcpy                                   ; mempcpy
0000000000002812         movzx      ecx, byte [rsp+0x48+var_39]
0000000000002817         mov        rdi, qword [rsp+0x48+var_48]
000000000000281b         add        rdi, rax
000000000000281e         test       r15, r15
0000000000002821         mov        byte [rax], cl
0000000000002823         je         loc_2828

0000000000002825         mov        qword [r15], rdi

                     loc_2828:
0000000000002828         mov        rdx, r14                                    ; argument "__n" for method j_mempcpy, CODE XREF=mfile_name_concat+195
000000000000282b         mov        rsi, rbp                                    ; argument "__src" for method j_mempcpy
000000000000282e         call       j_mempcpy                                   ; mempcpy
0000000000002833         mov        byte [rax], 0x0

                     loc_2836:
0000000000002836         add        rsp, 0x18                                   ; CODE XREF=mfile_name_concat+162
000000000000283a         mov        rax, r13
000000000000283d         pop        rbx
000000000000283e         pop        rbp
000000000000283f         pop        r12
0000000000002841         pop        r13
0000000000002843         pop        r14
0000000000002845         pop        r15
0000000000002847         ret
                        ; endp
0000000000002848         align      16

                     loc_2850:
0000000000002850         mov        qword [rsp+0x48+var_48], 0x0                ; CODE XREF=mfile_name_concat+70
0000000000002858         mov        byte [rsp+0x48+var_39], 0x0
000000000000285d         jmp        loc_27ee
000000000000285f         align      32                                          ; End of unwind block (FDE at 0x9374)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000002860         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x93c4), CODE XREF=main+61
0000000000002863         push       rbx
0000000000002864         je         loc_28dd

0000000000002866         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000286b         mov        rbx, rdi
000000000000286e         call       j_strrchr                                   ; strrchr
0000000000002873         test       rax, rax
0000000000002876         je         loc_28cd

0000000000002878         lea        r8, qword [rax+1]
000000000000287c         mov        rdx, r8
000000000000287f         sub        rdx, rbx
0000000000002882         cmp        rdx, 0x6
0000000000002886         jle        loc_28cd

0000000000002888         lea        rsi, qword [rax-6]
000000000000288c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000002893         mov        ecx, 0x7
0000000000002898         rep  cmpsb byte [rsi], byte [rdi]
000000000000289a         seta       dl
000000000000289d         sbb        dl, 0x0
00000000000028a0         test       dl, dl
00000000000028a2         jne        loc_28cd

00000000000028a4         lea        rdi, qword [aLibs+8]                        ; 0x82b0
00000000000028ab         mov        ecx, 0x3
00000000000028b0         mov        rsi, r8
00000000000028b3         mov        rbx, r8
00000000000028b6         rep  cmpsb byte [rsi], byte [rdi]
00000000000028b8         seta       dl
00000000000028bb         sbb        dl, 0x0
00000000000028be         test       dl, dl
00000000000028c0         jne        loc_28cd

00000000000028c2         lea        rbx, qword [rax+4]
00000000000028c6         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_28cd:
00000000000028cd         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
00000000000028d4         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
00000000000028db         pop        rbx
00000000000028dc         ret
                        ; endp

                     loc_28dd:
00000000000028dd         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
00000000000028e4         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
00000000000028eb         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
00000000000028f0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
00000000000028f5         call       j_fwrite                                    ; fwrite
00000000000028fa         call       j_abort                                     ; abort
                        ; endp
00000000000028ff         align      256                                         ; End of unwind block (FDE at 0x93c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002900         push       rbp                                         ; Begin of unwind block (FDE at 0x93e4), CODE XREF=sub_3600+1365, sub_3600+1387
0000000000002901         push       rbx
0000000000002902         mov        rbp, rdi
0000000000002905         mov        ebx, esi
0000000000002907         sub        rsp, 0x8
000000000000290b         call       locale_charset                              ; locale_charset
0000000000002910         movzx      edx, byte [rax]
0000000000002913         and        edx, 0xffffffdf
0000000000002916         cmp        dl, 0x55
0000000000002919         je         loc_2990

000000000000291b         cmp        dl, 0x47
000000000000291e         je         loc_2940

                     loc_2920:
0000000000002920         lea        rax, qword [aLibs+27]                       ; 0x82c3, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002927         lea        rdx, qword [aLibs+29]                       ; 0x82c5
000000000000292e         cmp        ebx, 0x9
0000000000002931         cmovne     rax, rdx
0000000000002935         add        rsp, 0x8
0000000000002939         pop        rbx
000000000000293a         pop        rbp
000000000000293b         ret
                        ; endp
000000000000293c         align      64

                     loc_2940:
0000000000002940         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000002944         and        edx, 0xffffffdf
0000000000002947         cmp        dl, 0x42
000000000000294a         jne        loc_2920

000000000000294c         cmp        byte [rax+2], 0x31
0000000000002950         jne        loc_2920

0000000000002952         cmp        byte [rax+3], 0x38
0000000000002956         jne        loc_2920

0000000000002958         cmp        byte [rax+4], 0x30
000000000000295c         jne        loc_2920

000000000000295e         cmp        byte [rax+5], 0x33
0000000000002962         jne        loc_2920

0000000000002964         cmp        byte [rax+6], 0x30
0000000000002968         jne        loc_2920

000000000000296a         cmp        byte [rax+7], 0x0
000000000000296e         jne        loc_2920

0000000000002970         cmp        byte [rbp], 0x60
0000000000002974         lea        rax, qword [aLibs+20]                       ; 0x82bc
000000000000297b         lea        rdx, qword [aLibs+24]                       ; 0x82c0
0000000000002982         cmovne     rax, rdx
0000000000002986         add        rsp, 0x8
000000000000298a         pop        rbx
000000000000298b         pop        rbp
000000000000298c         ret
                        ; endp
000000000000298d         align      16

                     loc_2990:
0000000000002990         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000002994         and        edx, 0xffffffdf
0000000000002997         cmp        dl, 0x54
000000000000299a         jne        loc_2920

000000000000299c         movzx      edx, byte [rax+2]
00000000000029a0         and        edx, 0xffffffdf
00000000000029a3         cmp        dl, 0x46
00000000000029a6         jne        loc_2920

00000000000029ac         cmp        byte [rax+3], 0x2d
00000000000029b0         jne        loc_2920

00000000000029b6         cmp        byte [rax+4], 0x38
00000000000029ba         jne        loc_2920

00000000000029c0         cmp        byte [rax+5], 0x0
00000000000029c4         jne        loc_2920

00000000000029ca         cmp        byte [rbp], 0x60
00000000000029ce         lea        rax, qword [aLibs+12]                       ; 0x82b4
00000000000029d5         lea        rdx, qword [aLibs+16]                       ; 0x82b8
00000000000029dc         cmovne     rax, rdx
00000000000029e0         add        rsp, 0x8
00000000000029e4         pop        rbx
00000000000029e5         pop        rbp
00000000000029e6         ret
                        ; endp
00000000000029e7         align      16                                          ; End of unwind block (FDE at 0x93e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
00000000000029f0         push       r15                                         ; Begin of unwind block (FDE at 0x9428), CODE XREF=sub_3130+1165, sub_3600+1467, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
00000000000029f2         push       r14
00000000000029f4         mov        r15d, r8d
00000000000029f7         push       r13
00000000000029f9         push       r12
00000000000029fb         mov        r14, rdi
00000000000029fe         push       rbp
00000000000029ff         push       rbx
0000000000002a00         mov        ebx, r9d
0000000000002a03         mov        r13, rsi
0000000000002a06         mov        rbp, rcx
0000000000002a09         and        ebx, 0x2
0000000000002a0c         sub        rsp, 0xb8
0000000000002a13         mov        rax, qword [rsp+0xe8+arg_0]
0000000000002a1b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002a20         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002a25         mov        dword [rsp+0xe8+var_70], r9d
0000000000002a2a         mov        qword [rsp+0xe8+var_C8], rax
0000000000002a2f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002a37         mov        qword [rsp+0xe8+var_80], rax
0000000000002a3c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000002a44         mov        qword [rsp+0xe8+var_88], rax
0000000000002a49         mov        rax, qword [fs:0x28]
0000000000002a52         mov        qword [rsp+0xe8+var_40], rax
0000000000002a5a         xor        eax, eax
0000000000002a5c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000002a61         cmp        r15d, 0xa
0000000000002a65         mov        qword [rsp+0xe8+var_90], rax
0000000000002a6a         ja         loc_3c1f

0000000000002a70         lea        rcx, qword [switch_table_8320]              ; switch_table_8320
0000000000002a77         mov        edx, r15d
0000000000002a7a         movsxd     rax, dword [rcx+rdx*4]
0000000000002a7e         add        rax, rcx
0000000000002a81         jmp        rax                                         ; switch statement using table at 0x8320, with 11 cases, 0x2a83,0x3654,0x36b0,0x3705,0x374a,0x3784,0x382a,0x3864,0x3a58

                     loc_2a83:
0000000000002a83         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_3600+86
0000000000002a88         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000002a8d         xor        r12d, r12d
0000000000002a90         mov        qword [rsp+0xe8+var_98], 0x0
0000000000002a99         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000002a9e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_2aa3:
0000000000002aa3         lea        rax, qword [aLibs+29]                       ; 0x82c5, CODE XREF=sub_3600+644
0000000000002aaa         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002ab3         xor        r15d, r15d
0000000000002ab6         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000002abe         mov        qword [rsp+0xe8+var_A0], rax

                     loc_2ac3:
0000000000002ac3         xor        r11d, r11d                                  ; CODE XREF=sub_3130+180, sub_3600+168, sub_3600+256, sub_3600+325, sub_3600+383, sub_3600+549, sub_3600+607, sub_3600+1176, sub_3600+1253
0000000000002ac6         mov        rax, rbp
0000000000002ac9         mov        r8d, r12d
0000000000002acc         mov        rbp, r11
0000000000002acf         mov        r11, rax
0000000000002ad2         nop        word [rax+rax]

                     loc_2ad8:
0000000000002ad8         cmp        r11, rbp                                    ; CODE XREF=sub_2be0+194
0000000000002adb         setne      r12b
0000000000002adf         cmp        r11, 0xffffffffffffffff
0000000000002ae3         jne        loc_2af2

0000000000002ae5         mov        rax, qword [rsp+0xe8+var_D8]
0000000000002aea         cmp        byte [rax+rbp], 0x0
0000000000002aee         setne      r12b

                     loc_2af2:
0000000000002af2         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000002af5         je         loc_3150

0000000000002afb         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002b00         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002b05         lea        r9, qword [rdi+rbp]
0000000000002b09         setne      al
0000000000002b0c         and        al, byte [rsp+0xe8+var_DB]
0000000000002b10         mov        r10d, eax
0000000000002b13         je         loc_2bc0

0000000000002b19         mov        rax, qword [rsp+0xe8+var_D0]
0000000000002b1e         test       rax, rax
0000000000002b21         je         loc_2f50

0000000000002b27         cmp        r11, 0xffffffffffffffff
0000000000002b2b         lea        rbx, qword [rbp+rax]
0000000000002b30         jne        loc_2b60

0000000000002b32         cmp        rax, 0x1
0000000000002b36         jbe        loc_2b60

0000000000002b38         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002b3d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000002b42         mov        qword [rsp+0xe8+var_C0], r9
0000000000002b47         call       j_strlen                                    ; strlen
0000000000002b4c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002b52         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000002b58         mov        r11, rax
0000000000002b5b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_2b60:
0000000000002b60         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000002b63         mov        byte [rsp+0xe8+var_C0], r10b
0000000000002b68         ja         loc_3120

0000000000002b6e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000002b73         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000002b78         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000002b7b         mov        qword [rsp+0xe8+var_A8], r11
0000000000002b80         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002b85         mov        qword [rsp+0xe8+var_B8], r9
0000000000002b8a         call       j_memcmp                                    ; memcmp
0000000000002b8f         test       eax, eax
0000000000002b91         mov        r9, qword [rsp+0xe8+var_B8]
0000000000002b96         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002b9c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000002ba1         jne        loc_3120

0000000000002ba7         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002bac         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002bb2         jne        loc_3b35

0000000000002bb8         nop        dword [rax+rax]

                     loc_2bc0:
0000000000002bc0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_3110+19
0000000000002bc4         cmp        bl, 0x7e
0000000000002bc7         ja         loc_2ee8

0000000000002bcd         lea        rcx, qword [switch_table_8320+44]           ; 0x834c
0000000000002bd4         movzx      edx, bl
0000000000002bd7         movsxd     rax, dword [rcx+rdx*4]
0000000000002bdb         add        rax, rcx
0000000000002bde         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2be0:
0000000000002be0         xor        r10d, r10d
0000000000002be3         cmp        r11, 0x1
0000000000002be7         setne      al
0000000000002bea         cmp        r11, 0xffffffffffffffff
0000000000002bee         jne        loc_2bfc

0000000000002bf0         mov        rax, qword [rsp+arg_8]
0000000000002bf5         cmp        byte [rax+1], 0x0
0000000000002bf9         setne      al

                     loc_2bfc:
0000000000002bfc         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2be0+14
0000000000002c01         sete       dl
0000000000002c04         test       al, al
0000000000002c06         je         loc_2e58

                     loc_2c0c:
0000000000002c0c         xor        r12d, r12d                                  ; CODE XREF=sub_2e50+11
0000000000002c0f         xor        eax, eax
0000000000002c11         nop        dword [rax]
                        ; endp

                     loc_2c18:
0000000000002c18         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_2e00+50, sub_2ed0+119
0000000000002c1d         jne        loc_2d32

0000000000002c23         test       dl, dl
0000000000002c25         jne        loc_2d32

                     loc_2c2b:
0000000000002c2b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_2ce0+87
0000000000002c30         test       rsi, rsi
0000000000002c33         je         loc_2c49

0000000000002c35         mov        edx, ebx
0000000000002c37         shr        dl, 0x5
0000000000002c3a         movzx      edx, dl
0000000000002c3d         mov        edx, dword [rsi+rdx*4]
0000000000002c40         bt         edx, ebx
0000000000002c43         jb         loc_2d93

                     loc_2c49:
0000000000002c49         test       r10b, r10b                                  ; CODE XREF=sub_2be0+83, sub_2ce0+93
0000000000002c4c         jne        loc_2d93

0000000000002c52         xor        eax, 0x1
0000000000002c55         add        rbp, 0x1
0000000000002c59         and        eax, r8d

                     loc_2c5c:
0000000000002c5c         test       al, al                                      ; CODE XREF=sub_3130+936
0000000000002c5e         je         loc_2c80

0000000000002c60         cmp        r13, r15
0000000000002c63         jbe        loc_2c6a

0000000000002c65         mov        byte [r14+r15], 0x27

                     loc_2c6a:
0000000000002c6a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2be0+131
0000000000002c6e         cmp        r13, rax
0000000000002c71         jbe        loc_2c79

0000000000002c73         mov        byte [r14+r15+1], 0x27

                     loc_2c79:
0000000000002c79         add        r15, 0x2                                    ; CODE XREF=sub_2be0+145
0000000000002c7d         xor        r8d, r8d

                     loc_2c80:
0000000000002c80         cmp        r15, r13                                    ; CODE XREF=sub_2be0+126, sub_2ce0+275, sub_3130+869
0000000000002c83         jae        loc_2c89

0000000000002c85         mov        byte [r14+r15], bl

                     loc_2c89:
0000000000002c89         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_2be0+163
0000000000002c8e         add        r15, 0x1
0000000000002c92         mov        eax, 0x0
0000000000002c97         test       r12b, r12b
0000000000002c9a         cmove      edi, eax
0000000000002c9d         mov        byte [rsp+0xe8+var_DA], dil
0000000000002ca2         jmp        loc_2ad8
0000000000002ca7         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2cb0:
0000000000002cb0         xor        r10d, r10d
0000000000002cb3         mov        eax, dword [rsp+arg_0]
0000000000002cb7         cmp        eax, 0x2
0000000000002cba         je         loc_3278

0000000000002cc0         cmp        eax, 0x5
0000000000002cc3         je         loc_3238

0000000000002cc9         cmp        eax, 0x2
0000000000002ccc         mov        ebx, 0x3f
0000000000002cd1         sete       dl
0000000000002cd4         xor        r12d, r12d
0000000000002cd7         xor        eax, eax
0000000000002cd9         jmp        sub_2be0+56
                        ; endp
0000000000002cde         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2ce0:
0000000000002ce0         xor        r10d, r10d
0000000000002ce3         cmp        dword [rsp+arg_0], 0x2
0000000000002ce8         je         loc_31f0

0000000000002cee         mov        byte [rsp+arg_74], r12b
0000000000002cf3         xor        edx, edx
0000000000002cf5         xor        eax, eax
0000000000002cf7         mov        ebx, 0x27
0000000000002cfc         jmp        sub_2be0+56
                        ; endp
0000000000002d01         nop        dword [rax]
0000000000002d08         mov        edx, 0x9
0000000000002d0d         mov        ebx, 0x74

                     loc_2d12:
0000000000002d12         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2ea0+10, sub_2f90+37, sub_30d0+53
0000000000002d17         sete       al
0000000000002d1a         and        al, byte [rsp+arg_7]
0000000000002d1e         jne        sub_2e50+30

0000000000002d24         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_2ce0+114
0000000000002d29         jne        loc_2d90

                     loc_2d2b:
0000000000002d2b         mov        ebx, edx                                    ; CODE XREF=sub_2e00+18
0000000000002d2d         xor        r12d, r12d
0000000000002d30         xor        eax, eax
                        ; endp

                     loc_2d32:
0000000000002d32         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_2be0+61, sub_2be0+69
0000000000002d37         jne        loc_2c2b

0000000000002d3d         jmp        loc_2c49
0000000000002d42         nop        word [rax+rax]
0000000000002d48         mov        edx, 0x8
0000000000002d4d         mov        ebx, 0x62
0000000000002d52         jmp        sub_2ce0+68
0000000000002d54         nop        dword [rax]
0000000000002d58         cmp        dword [rsp+8], 0x2
0000000000002d5d         je         sub_3130                                    ; sub_3130
0000000000002d63         cmp        byte [rsp+0xd], 0x0
0000000000002d68         je         sub_2f70+16

                     loc_2d6e:
0000000000002d6e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2f70+8
0000000000002d73         je         loc_2f80

0000000000002d79         cmp        qword [rsp+arg_10], 0x0
0000000000002d7f         jne        loc_313b

0000000000002d85         mov        ebx, 0x5c
0000000000002d8a         nop        word [rax+rax]
                        ; endp

                     loc_2d90:
0000000000002d90         xor        r12d, r12d                                  ; CODE XREF=sub_2ce0+73, sub_30d0+29
                        ; endp

                     loc_2d93:
0000000000002d93         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2be0+99, sub_2be0+108
0000000000002d98         sete       dl
0000000000002d9b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002da0         mov        eax, edx
0000000000002da2         jne        loc_35f8

0000000000002da8         mov        eax, r8d
0000000000002dab         xor        eax, 0x1
0000000000002dae         and        al, dl
0000000000002db0         je         loc_2de1

0000000000002db2         cmp        r13, r15
0000000000002db5         jbe        loc_2dbc

0000000000002db7         mov        byte [r14+r15], 0x27

                     loc_2dbc:
0000000000002dbc         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_2ce0+213
0000000000002dc0         cmp        r13, rdx
0000000000002dc3         jbe        loc_2dcb

0000000000002dc5         mov        byte [r14+r15+1], 0x24

                     loc_2dcb:
0000000000002dcb         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_2ce0+227
0000000000002dcf         cmp        r13, rdx
0000000000002dd2         jbe        loc_2dda

0000000000002dd4         mov        byte [r14+r15+2], 0x27

                     loc_2dda:
0000000000002dda         add        r15, 0x3                                    ; CODE XREF=sub_2ce0+242
0000000000002dde         mov        r8d, eax

                     loc_2de1:
0000000000002de1         cmp        r13, r15                                    ; CODE XREF=sub_2ce0+208
0000000000002de4         jbe        loc_2deb

0000000000002de6         mov        byte [r14+r15], 0x5c

                     loc_2deb:
0000000000002deb         add        r15, 0x1                                    ; CODE XREF=sub_2ce0+260
0000000000002def         add        rbp, 0x1
0000000000002df3         jmp        loc_2c80
0000000000002df8         align      512


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_2e00:
0000000000002e00         cmp        byte [rsp+arg_5], 0x0
0000000000002e05         jne        loc_2fd3

0000000000002e0b         xor        edx, edx
0000000000002e0d         test       byte [rsp+arg_70], 0x1
0000000000002e12         je         loc_2d2b

0000000000002e18         add        rbp, 0x1
0000000000002e1c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000002e21         nop        dword [rax]
0000000000002e28         cmp        dword [rsp+8], 0x2
0000000000002e2d         sete       dl
0000000000002e30         xor        eax, eax
0000000000002e32         jmp        sub_2be0+56
0000000000002e37         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e40:
0000000000002e40         mov        edx, 0x7
0000000000002e45         mov        ebx, 0x61
0000000000002e4a         jmp        sub_2ce0+68
                        ; endp
0000000000002e4f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e50:
0000000000002e50         cmp        dword [rsp+8], 0x2
0000000000002e55         sete       dl
                        ; endp

                     loc_2e58:
0000000000002e58         test       rbp, rbp                                    ; CODE XREF=sub_2be0+38, sub_3070+35
0000000000002e5b         jne        loc_2c0c

0000000000002e61         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_30a0+43
0000000000002e66         and        al, dl
0000000000002e68         je         sub_2be0+56

0000000000002e6e         mov        rbp, r11
0000000000002e71         mov        dword [rsp+arg_0], 0x2
0000000000002e79         jmp        sub_3130+1097
                        ; endp
0000000000002e7e         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_2e80:
0000000000002e80         cmp        dword [rsp+arg_0], 0x2
0000000000002e85         sete       dl
0000000000002e88         xor        r12d, r12d
0000000000002e8b         jmp        sub_2e50+17
                        ; endp
0000000000002e8d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_2e90:
0000000000002e90         cmp        dword [rsp+arg_0], 0x2
0000000000002e95         mov        ebx, 0x20
0000000000002e9a         sete       dl
0000000000002e9d         jmp        sub_2e50+17
                        ; endp
0000000000002e9f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_2ea0:
0000000000002ea0         mov        edx, 0xd
0000000000002ea5         mov        ebx, 0x72
0000000000002eaa         jmp        loc_2d12
0000000000002eaf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2eb0:
0000000000002eb0         mov        edx, 0xc
0000000000002eb5         mov        ebx, 0x66
0000000000002eba         jmp        sub_2ce0+68
                        ; endp
0000000000002ebf         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ec0:
0000000000002ec0         mov        edx, 0xb
0000000000002ec5         mov        ebx, 0x76
0000000000002eca         jmp        sub_2ce0+68
                        ; endp
0000000000002ecf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ed0:
0000000000002ed0         mov        edx, 0xa
0000000000002ed5         mov        ebx, 0x6e
0000000000002eda         jmp        sub_2ce0+50
                        ; endp
0000000000002edf         align      32

                     loc_2ee0:
0000000000002ee0         xor        r10d, r10d                                  ; CODE XREF=sub_2ed0+135
0000000000002ee3         nop        dword [rax+rax]

                     loc_2ee8:
0000000000002ee8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000002eee         jne        loc_3298

0000000000002ef4         mov        qword [rsp+0xe8+var_B0], r11
0000000000002ef9         mov        byte [rsp+0xe8+var_B8], r8b
0000000000002efe         mov        byte [rsp+0xe8+var_C0], r10b
0000000000002f03         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000002f08         mov        rcx, qword [rax]
0000000000002f0b         movzx      edx, bl
0000000000002f0e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002f14         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000002f1a         mov        r11, qword [rsp+0xe8+var_B0]
0000000000002f1f         mov        edi, 0x1
0000000000002f24         movzx      eax, word [rcx+rdx*2]
0000000000002f28         and        ax, 0x4000
0000000000002f2c         setne      r12b
0000000000002f30         sete       al
0000000000002f33         and        al, byte [rsp+0xe8+var_DB]

                     loc_2f37:
0000000000002f37         test       al, al                                      ; CODE XREF=sub_3600+989
0000000000002f39         jne        loc_38d1

0000000000002f3f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002f44         sete       dl
0000000000002f47         jmp        loc_2c18
0000000000002f4c         align      16

                     loc_2f50:
0000000000002f50         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000002f54         cmp        bl, 0x7e
0000000000002f57         ja         loc_2ee0

0000000000002f59         lea        rcx, qword [switch_table_8320+552]          ; 0x8548
0000000000002f60         movzx      edx, bl
0000000000002f63         movsxd     rax, dword [rcx+rdx*4]
0000000000002f67         add        rax, rcx
0000000000002f6a         jmp        rax
                        ; endp
0000000000002f6c         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_2f70:
0000000000002f70         xor        r10d, r10d
0000000000002f73         cmp        byte [rsp+arg_5], 0x0
0000000000002f78         jne        loc_2d6e

0000000000002f7e         nop

                     loc_2f80:
0000000000002f80         mov        edx, 0x5c                                   ; CODE XREF=sub_2ce0+136, sub_2ce0+147
0000000000002f85         mov        ebx, 0x5c
0000000000002f8a         jmp        sub_2ce0+68
                        ; endp
0000000000002f8f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f90:
0000000000002f90         mov        edx, 0xc
0000000000002f95         xor        r10d, r10d
0000000000002f98         mov        ebx, 0x66
0000000000002f9d         jmp        sub_2ce0+68
                        ; endp
0000000000002fa2         nop        word [rax+rax]
0000000000002fa8         mov        edx, 0xa
0000000000002fad         xor        r10d, r10d
0000000000002fb0         mov        ebx, 0x6e
0000000000002fb5         jmp        sub_2ce0+50
0000000000002fba         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2fc0:
0000000000002fc0         mov        ebx, 0x61
0000000000002fc5         jmp        sub_2ce0+176
                        ; endp
0000000000002fca         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2fd0:
0000000000002fd0         xor        r10d, r10d
                        ; endp

                     loc_2fd3:
0000000000002fd3         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2e00+5
0000000000002fd8         sete       dl
0000000000002fdb         cmp        byte [rsp+arg_7], 0x0
0000000000002fe0         jne        loc_3b7a

0000000000002fe6         mov        eax, r8d
0000000000002fe9         mov        rcx, r15
0000000000002fec         xor        eax, 0x1
0000000000002fef         and        al, dl
0000000000002ff1         je         loc_3020

0000000000002ff3         cmp        r13, r15
0000000000002ff6         jbe        loc_2ffd

0000000000002ff8         mov        byte [r14+r15], 0x27

                     loc_2ffd:
0000000000002ffd         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_2fd0+38
0000000000003001         cmp        r13, rcx
0000000000003004         jbe        loc_300c

0000000000003006         mov        byte [r14+r15+1], 0x24

                     loc_300c:
000000000000300c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_2fd0+52
0000000000003010         cmp        r13, rcx
0000000000003013         ja         loc_3649

                     loc_3019:
0000000000003019         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_3600+79
000000000000301d         mov        r8d, eax

                     loc_3020:
0000000000003020         cmp        r13, rcx                                    ; CODE XREF=sub_2fd0+33
0000000000003023         jbe        loc_302a

0000000000003025         mov        byte [r14+rcx], 0x5c

                     loc_302a:
000000000000302a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2fd0+83
000000000000302f         lea        r15, qword [rcx+1]
0000000000003033         je         loc_3639

0000000000003039         lea        rax, qword [rbp+1]
000000000000303d         cmp        rax, r11
0000000000003040         jae        loc_305b

0000000000003042         mov        rax, qword [rsp+arg_8]
0000000000003047         movzx      eax, byte [rax+rbp+1]
000000000000304c         mov        byte [rsp+arg_20], al
0000000000003050         sub        eax, 0x30
0000000000003053         cmp        al, 0x9
0000000000003055         jbe        loc_3889

                     loc_305b:
000000000000305b         mov        eax, r12d                                   ; CODE XREF=sub_2fd0+112
000000000000305e         mov        ebx, 0x30
0000000000003063         xor        r12d, r12d
0000000000003066         jmp        sub_2be0+56
                        ; endp
000000000000306b         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3070:
0000000000003070         cmp        dword [rsp+arg_0], 0x2
0000000000003075         mov        r12d, r10d
0000000000003078         sete       dl
000000000000307b         xor        r10d, r10d
000000000000307e         xor        eax, eax
0000000000003080         jmp        sub_2be0+56
                        ; endp
0000000000003085         nop        dword [rax]
0000000000003088         cmp        dword [rsp+8], 0x2
000000000000308d         sete       dl
0000000000003090         xor        r10d, r10d
0000000000003093         jmp        sub_2e50+8
0000000000003098         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_30a0:
00000000000030a0         cmp        dword [rsp+8], 0x2
00000000000030a5         sete       dl
00000000000030a8         xor        r10d, r10d
00000000000030ab         xor        r12d, r12d
00000000000030ae         jmp        sub_2e50+17
                        ; endp
00000000000030b3         nop        dword [rax+rax]
00000000000030b8         cmp        dword [rsp+8], 0x2
00000000000030bd         mov        r12d, r10d
00000000000030c0         mov        ebx, 0x20
00000000000030c5         sete       dl
00000000000030c8         xor        r10d, r10d
00000000000030cb         jmp        sub_2e50+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_30d0:
00000000000030d0         mov        edx, 0xd
00000000000030d5         xor        r10d, r10d
00000000000030d8         mov        ebx, 0x72
00000000000030dd         jmp        sub_2ce0+50
                        ; endp
00000000000030e2         nop        word [rax+rax]
00000000000030e8         mov        ebx, 0x76
00000000000030ed         jmp        sub_2ce0+176
00000000000030f2         nop        word [rax+rax]
00000000000030f8         mov        edx, 0x9
00000000000030fd         xor        r10d, r10d
0000000000003100         mov        ebx, 0x74
0000000000003105         jmp        sub_2ce0+50
000000000000310a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3110:
0000000000003110         mov        ebx, 0x62
0000000000003115         jmp        sub_2ce0+176
                        ; endp
000000000000311a         nop        word [rax+rax]

                     loc_3120:
0000000000003120         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000003123         jmp        loc_2bc0
0000000000003128         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_3130:
0000000000003130         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2ce0+125
0000000000003135         jne        sub_3600+1184
                        ; endp

                     loc_313b:
000000000000313b         add        rbp, 0x1                                    ; CODE XREF=sub_2ce0+159
000000000000313f         mov        eax, r8d
0000000000003142         xor        r12d, r12d
0000000000003145         mov        ebx, 0x5c
000000000000314a         jmp        sub_2be0+124
                        ; endp
000000000000314f         align      16

                     loc_3150:
0000000000003150         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000003155         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000315a         mov        r12d, r8d
000000000000315d         mov        rbp, r11
0000000000003160         sete       dl
0000000000003163         mov        eax, ebx
0000000000003165         test       r15, r15
0000000000003168         sete       cl
000000000000316b         and        eax, edx
000000000000316d         and        al, cl
000000000000316f         jne        loc_3bd6

0000000000003175         mov        eax, ebx
0000000000003177         xor        eax, 0x1
000000000000317a         and        dl, al
000000000000317c         je         loc_3aec

0000000000003182         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000003187         je         loc_3aea

000000000000318d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000003192         jne        loc_3b8d

0000000000003198         test       r13, r13
000000000000319b         sete       al
000000000000319e         cmp        qword [rsp+0xe8+var_98], 0x0
00000000000031a4         setne      dl
00000000000031a7         and        al, dl
00000000000031a9         je         loc_3bcc

00000000000031af         mov        r13, qword [rsp+0xe8+var_98]

                     loc_31b4:
00000000000031b4         lea        rbx, qword [aLibs+29]                       ; 0x82c5, CODE XREF=sub_3600+1549
00000000000031bb         mov        byte [r14], 0x27
00000000000031bf         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000031c7         mov        r15d, 0x1
00000000000031cd         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000031d6         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000031db         mov        qword [rsp+0xe8+var_A0], rbx
00000000000031e0         mov        byte [rsp+0xe8+var_6C], al
00000000000031e4         jmp        loc_2ac3
00000000000031e9         align      16

                     loc_31f0:
00000000000031f0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2ce0+8
00000000000031f5         jne        sub_3600+1184

00000000000031fb         test       r13, r13
00000000000031fe         je         sub_3600                                    ; sub_3600

0000000000003204         xor        edx, edx
0000000000003206         cmp        qword [rsp+arg_48], 0x0
000000000000320c         jne        sub_3600                                    ; sub_3600
                        ; endp

                     loc_3212:
0000000000003212         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_3600+52, sub_3600+1562
0000000000003217         add        r15, 0x3
000000000000321b         xor        eax, eax
000000000000321d         mov        byte [rsp+arg_74], r12b
0000000000003222         xor        r8d, r8d
0000000000003225         mov        r13, rdx
0000000000003228         mov        ebx, 0x27
000000000000322d         jmp        sub_2be0+105
                        ; endp
0000000000003232         align      8

                     loc_3238:
0000000000003238         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_2cb0+19
000000000000323d         je         loc_3260

000000000000323f         lea        rcx, qword [rbp+2]
0000000000003243         cmp        rcx, r11
0000000000003246         jae        loc_3260

0000000000003248         mov        rax, qword [rsp+arg_8]
000000000000324d         cmp        byte [rax+rbp+1], 0x3f
0000000000003252         je         loc_39e2

0000000000003258         nop        dword [rax+rax]

                     loc_3260:
0000000000003260         xor        edx, edx                                    ; CODE XREF=sub_3130+269, sub_3130+278, sub_3600+1001, sub_3600+1021
0000000000003262         xor        r12d, r12d
0000000000003265         xor        eax, eax
0000000000003267         mov        ebx, 0x3f
000000000000326c         jmp        sub_2be0+56
                        ; endp
0000000000003271         align      8

                     loc_3278:
0000000000003278         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2cb0+10
000000000000327d         jne        loc_3aa0

0000000000003283         xor        r12d, r12d
0000000000003286         xor        eax, eax
0000000000003288         mov        ebx, 0x3f
000000000000328d         jmp        sub_2be0+105
                        ; endp
0000000000003292         align      8

                     loc_3298:
0000000000003298         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_2ed0+30
00000000000032a0         cmp        r11, 0xffffffffffffffff
00000000000032a4         mov        qword [rsp+0xe8+var_48], 0x0
00000000000032b0         mov        qword [rsp+0xe8+var_C0], rax
00000000000032b5         jne        loc_32e4

00000000000032b7         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
00000000000032bc         mov        byte [rsp+0xe8+var_A8], r8b
00000000000032c1         mov        byte [rsp+0xe8+var_B0], r10b
00000000000032c6         mov        qword [rsp+0xe8+var_B8], r9
00000000000032cb         call       j_strlen                                    ; strlen
00000000000032d0         movzx      r8d, byte [rsp+0xe8+var_A8]
00000000000032d6         movzx      r10d, byte [rsp+0xe8+var_B0]
00000000000032dc         mov        r11, rax
00000000000032df         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_32e4:
00000000000032e4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_3130+389
00000000000032ec         xor        ecx, ecx
00000000000032ee         mov        byte [rsp+0xe8+var_6A], bl
00000000000032f2         mov        byte [rsp+0xe8+var_6B], r8b
00000000000032f7         mov        rbx, rcx
00000000000032fa         mov        qword [rsp+0xe8+var_60], r9
0000000000003302         mov        qword [rsp+0xe8+var_B0], rax
0000000000003307         mov        byte [rsp+0xe8+var_69], r10b
000000000000330c         mov        qword [rsp+0xe8+var_68], r15
0000000000003314         mov        qword [rsp+0xe8+var_A8], r14
0000000000003319         mov        qword [rsp+0xe8+var_78], r13
000000000000331e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_3323:
0000000000003323         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_3130+623
0000000000003328         lea        r14, qword [rbp+rbx]
000000000000332d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000003332         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000003337         mov        rdi, qword [rsp+0xe8+var_B0]
000000000000333c         lea        r13, qword [rax+r14]
0000000000003340         sub        rdx, r14
0000000000003343         mov        rsi, r13
0000000000003346         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000334b         test       rax, rax
000000000000334e         mov        r15, rax
0000000000003351         je         loc_33a1

0000000000003353         cmp        rax, 0xffffffffffffffff
0000000000003357         je         loc_3975

000000000000335d         cmp        rax, 0xfffffffffffffffe
0000000000003361         je         loc_3901

0000000000003367         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000336c         sete       al
000000000000336f         and        al, byte [rsp+0xe8+var_D9]
0000000000003373         jne        loc_3510

                     loc_3379:
0000000000003379         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_3130+996, sub_3130+1031
0000000000003380         call       j_iswprint                                  ; iswprint
0000000000003385         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000338a         test       eax, eax
000000000000338c         mov        eax, 0x0
0000000000003391         cmove      r12d, eax
0000000000003395         add        rbx, r15
0000000000003398         call       j_mbsinit                                   ; mbsinit
000000000000339d         test       eax, eax
000000000000339f         je         loc_3323

                     loc_33a1:
00000000000033a1         mov        edx, r12d                                   ; CODE XREF=sub_3130+545
00000000000033a4         mov        rdi, rbx
00000000000033a7         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000033ad         xor        edx, 0x1
00000000000033b0         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000033b5         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000033bb         and        dl, byte [rsp+0xe8+var_DB]
00000000000033bf         mov        r15, qword [rsp+0xe8+var_68]
00000000000033c7         mov        r14, qword [rsp+0xe8+var_A8]
00000000000033cc         mov        r13, qword [rsp+0xe8+var_78]
00000000000033d1         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_33d6:
00000000000033d6         cmp        rdi, 0x1                                    ; CODE XREF=sub_3600+880, sub_3600+936
00000000000033da         jbe        loc_39db

                     loc_33e0:
00000000000033e0         mov        rcx, rdi                                    ; CODE XREF=sub_3600+729
00000000000033e3         xor        esi, esi
00000000000033e5         movzx      r9d, byte [rsp+0xe8+var_D9]
00000000000033eb         add        rcx, rbp
00000000000033ee         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000033f3         jmp        loc_34ae
00000000000033f8         align      1024

                     loc_3400:
0000000000003400         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3130+896
0000000000003405         sete       al
0000000000003408         test       r9b, r9b
000000000000340b         jne        loc_38c0

0000000000003411         mov        esi, r8d
0000000000003414         xor        esi, 0x1
0000000000003417         and        al, sil
000000000000341a         je         loc_344b

000000000000341c         cmp        r13, r15
000000000000341f         jbe        loc_3426

0000000000003421         mov        byte [r14+r15], 0x27

                     loc_3426:
0000000000003426         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_3130+751
000000000000342a         cmp        r13, rsi
000000000000342d         jbe        loc_3435

000000000000342f         mov        byte [r14+r15+1], 0x24

                     loc_3435:
0000000000003435         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_3130+765
0000000000003439         cmp        r13, rsi
000000000000343c         jbe        loc_3444

000000000000343e         mov        byte [r14+r15+2], 0x27

                     loc_3444:
0000000000003444         add        r15, 0x3                                    ; CODE XREF=sub_3130+780
0000000000003448         mov        r8d, eax

                     loc_344b:
000000000000344b         cmp        r13, r15                                    ; CODE XREF=sub_3130+746
000000000000344e         jbe        loc_3455

0000000000003450         mov        byte [r14+r15], 0x5c

                     loc_3455:
0000000000003455         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3130+798
0000000000003459         cmp        r13, rax
000000000000345c         jbe        loc_346b

000000000000345e         mov        eax, ebx
0000000000003460         shr        al, 0x6
0000000000003463         add        eax, 0x30
0000000000003466         mov        byte [r14+r15+1], al

                     loc_346b:
000000000000346b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3130+812
000000000000346f         cmp        r13, rax
0000000000003472         jbe        loc_3484

0000000000003474         mov        eax, ebx
0000000000003476         shr        al, 0x3
0000000000003479         and        eax, 0x7
000000000000347c         add        eax, 0x30
000000000000347f         mov        byte [r14+r15+2], al

                     loc_3484:
0000000000003484         and        ebx, 0x7                                    ; CODE XREF=sub_3130+834
0000000000003487         add        rbp, 0x1
000000000000348b         add        r15, 0x3
000000000000348f         add        ebx, 0x30
0000000000003492         cmp        rbp, rcx
0000000000003495         jae        loc_2c80

000000000000349b         mov        esi, edx

                     loc_349d:
000000000000349d         cmp        r13, r15                                    ; CODE XREF=sub_3130+985, sub_3600+737
00000000000034a0         jbe        loc_34a6

00000000000034a2         mov        byte [r14+r15], bl

                     loc_34a6:
00000000000034a6         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_3130+880
00000000000034aa         add        r15, 0x1

                     loc_34ae:
00000000000034ae         test       dl, dl                                      ; CODE XREF=sub_3130+707
00000000000034b0         jne        loc_3400

00000000000034b6         mov        eax, esi
00000000000034b8         xor        eax, 0x1
00000000000034bb         and        eax, r8d
00000000000034be         test       r10b, r10b
00000000000034c1         je         loc_34d1

00000000000034c3         cmp        r13, r15
00000000000034c6         jbe        loc_34cd

00000000000034c8         mov        byte [r14+r15], 0x5c

                     loc_34cd:
00000000000034cd         add        r15, 0x1                                    ; CODE XREF=sub_3130+918

                     loc_34d1:
00000000000034d1         add        rbp, 0x1                                    ; CODE XREF=sub_3130+913
00000000000034d5         cmp        rbp, rcx
00000000000034d8         jae        loc_2c5c

00000000000034de         test       al, al
00000000000034e0         je         loc_38de

00000000000034e6         cmp        r13, r15
00000000000034e9         jbe        loc_34f0

00000000000034eb         mov        byte [r14+r15], 0x27

                     loc_34f0:
00000000000034f0         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3130+953
00000000000034f4         cmp        r13, rax
00000000000034f7         jbe        loc_34ff

00000000000034f9         mov        byte [r14+r15+1], 0x27

                     loc_34ff:
00000000000034ff         add        r15, 0x2                                    ; CODE XREF=sub_3130+967
0000000000003503         xor        r10d, r10d
0000000000003506         xor        r8d, r8d
0000000000003509         jmp        loc_349d
000000000000350b         align      16

                     loc_3510:
0000000000003510         cmp        r15, 0x1                                    ; CODE XREF=sub_3130+579
0000000000003514         je         loc_3379

000000000000351a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000351f         lea        rcx, qword [rdi+r15]
0000000000003523         lea        rdx, qword [rdi+r14+1]
0000000000003528         lea        r8, qword [rcx+r14]
000000000000352c         jmp        loc_353d
000000000000352e         align      16

                     loc_3530:
0000000000003530         add        rdx, 0x1                                    ; CODE XREF=sub_3130+1046, sub_3130+1072
0000000000003534         cmp        r8, rdx
0000000000003537         je         loc_3379

                     loc_353d:
000000000000353d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_3130+1020
0000000000003540         sub        ecx, 0x5b
0000000000003543         cmp        cl, 0x21
0000000000003546         ja         loc_3530

0000000000003548         mov        esi, 0x1
000000000000354d         shl        rsi, cl
0000000000003550         mov        rcx, rsi
0000000000003553         movabs     rsi, 0x20000002b
000000000000355d         test       rcx, rsi
0000000000003560         je         loc_3530

0000000000003562         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003567         mov        r13, qword [rsp+0xe8+var_78]
000000000000356c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000003571         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_3579:
0000000000003579         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3130+1227, sub_3600+716, sub_3600+1353, sub_3600+1502
000000000000357e         je         loc_3590

0000000000003580         test       al, al
0000000000003582         mov        eax, 0x4
0000000000003587         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000358c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_3590:
0000000000003590         sub        rsp, 0x8                                    ; CODE XREF=sub_3130+1102
0000000000003594         mov        rcx, rbp
0000000000003597         mov        rsi, r13
000000000000359a         push       qword [rsp+0xf0+var_88]
000000000000359e         push       qword [rsp+0xf8+var_80]
00000000000035a2         mov        rdi, r14
00000000000035a5         push       0x0
00000000000035a7         mov        r9d, dword [rsp+0x108+var_70]
00000000000035af         mov        r8d, dword [rsp+0x108+var_E0]
00000000000035b4         mov        rdx, qword [rsp+0x108+var_D8]
00000000000035b9         and        r9d, 0xfffffffd
00000000000035bd         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000035c2         add        rsp, 0x20
00000000000035c6         mov        r15, rax

                     loc_35c9:
00000000000035c9         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_3600+1317, sub_3600+1328, sub_3600+1479
00000000000035d1         xor        rbx, qword [fs:0x28]
00000000000035da         mov        rax, r15
00000000000035dd         jne        loc_3be3

00000000000035e3         add        rsp, 0xb8
00000000000035ea         pop        rbx
00000000000035eb         pop        rbp
00000000000035ec         pop        r12
00000000000035ee         pop        r13
00000000000035f0         pop        r14
00000000000035f2         pop        r15
00000000000035f4         ret
                        ; endp
00000000000035f5         align      8

                     loc_35f8:
00000000000035f8         mov        rbp, r11                                    ; CODE XREF=sub_2ce0+194
00000000000035fb         jmp        loc_3579


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8


                     sub_3600:
0000000000003600         cmp        r13, r15
0000000000003603         jbe        loc_360a

0000000000003605         mov        byte [r14+r15], 0x27

                     loc_360a:
000000000000360a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3600+3
000000000000360e         cmp        r13, rax
0000000000003611         jbe        loc_3619

0000000000003613         mov        byte [r14+r15+1], 0x5c

                     loc_3619:
0000000000003619         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3600+17
000000000000361d         cmp        r13, rax
0000000000003620         jbe        loc_3c12

0000000000003626         mov        rdx, r13
0000000000003629         mov        byte [r14+r15+2], 0x27
000000000000362f         mov        r13, qword [rsp+arg_48]
0000000000003634         jmp        loc_3212

                     loc_3639:
0000000000003639         mov        eax, r12d                                   ; CODE XREF=sub_2fd0+99
000000000000363c         mov        ebx, 0x30
0000000000003641         xor        r12d, r12d
0000000000003644         jmp        sub_2be0+105
                        ; endp

                     loc_3649:
0000000000003649         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_2fd0+67
000000000000364f         jmp        loc_3019

                     loc_3654:
0000000000003654         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000003656         jne        loc_2a83

000000000000365c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_3661:
0000000000003661         test       r13, r13                                    ; CODE XREF=sub_3600+1517
0000000000003664         jne        loc_3bfa

000000000000366a         lea        rax, qword [aLibs+29]                       ; 0x82c5
0000000000003671         mov        qword [rsp+0xe8+var_98], 0x0
000000000000367a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000367f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003684         xor        r12d, r12d
0000000000003687         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000368c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003695         mov        qword [rsp+0xe8+var_A0], rax
000000000000369a         mov        r15d, 0x1
00000000000036a0         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000036a8         jmp        loc_2ac3
00000000000036ad         align      16

                     loc_36b0:
00000000000036b0         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
00000000000036b2         jne        loc_3aad

00000000000036b8         test       r13, r13
00000000000036bb         je         loc_38e6

00000000000036c1         mov        byte [r14], 0x22
00000000000036c5         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000036ca         xor        r12d, r12d
00000000000036cd         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000036d2         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_36db:
00000000000036db         lea        rax, qword [aLibs+27]                       ; 0x82c3, CODE XREF=sub_3600+764
00000000000036e2         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000036e7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000036ec         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000036f5         mov        r15d, 0x1
00000000000036fb         mov        qword [rsp+0xe8+var_A0], rax
0000000000003700         jmp        loc_2ac3

                     loc_3705:
0000000000003705         lea        rax, qword [aLibs+27]                       ; case 6, 0x82c3, CODE XREF=quotearg_buffer_restyled+145
000000000000370c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003711         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003716         xor        r12d, r12d
0000000000003719         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003722         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003727         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000372c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003735         xor        r15d, r15d
0000000000003738         mov        qword [rsp+0xe8+var_A0], rax
000000000000373d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000003745         jmp        loc_2ac3

                     loc_374a:
000000000000374a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000374f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003754         xor        r12d, r12d
0000000000003757         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003760         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003765         xor        r15d, r15d
0000000000003768         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000376d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003776         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000377f         jmp        loc_2ac3

                     loc_3784:
0000000000003784         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000003789         je         loc_37e1

000000000000378b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x82c7
0000000000003792         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003794         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003799         call       j_dcgettext                                 ; dcgettext
000000000000379e         mov        rcx, rax
00000000000037a1         mov        qword [rsp+0xe8+var_80], rax
00000000000037a6         lea        rax, qword [aLibs+31]                       ; 0x82c7
00000000000037ad         cmp        rcx, rax
00000000000037b0         je         loc_3b4e

                     loc_37b6:
00000000000037b6         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x82c5, CODE XREF=sub_3600+1375
00000000000037bd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000037bf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000037c4         call       j_dcgettext                                 ; dcgettext
00000000000037c9         mov        rcx, rax
00000000000037cc         mov        qword [rsp+0xe8+var_88], rax
00000000000037d1         lea        rax, qword [aLibs+29]                       ; 0x82c5
00000000000037d8         cmp        rcx, rax
00000000000037db         je         loc_3b64

                     loc_37e1:
00000000000037e1         xor        r15d, r15d                                  ; CODE XREF=sub_3600+393, sub_3600+1397
00000000000037e4         test       ebx, ebx
00000000000037e6         je         loc_39ad

                     loc_37ec:
00000000000037ec         test       ebx, ebx                                    ; CODE XREF=sub_3600+951, sub_3600+982
00000000000037ee         mov        rbx, qword [rsp+0xe8+var_88]
00000000000037f3         setne      byte [rsp+0xe8+var_D9]
00000000000037f8         xor        r12d, r12d
00000000000037fb         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
00000000000037fe         call       j_strlen                                    ; strlen
0000000000003803         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003808         mov        qword [rsp+0xe8+var_D0], rax
000000000000380d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003812         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003817         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003820         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003825         jmp        loc_2ac3

                     loc_382a:
000000000000382a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
000000000000382f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003834         xor        r12d, r12d
0000000000003837         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003840         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003845         xor        r15d, r15d
0000000000003848         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000384d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003856         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000385f         jmp        loc_2ac3

                     loc_3864:
0000000000003864         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000003869         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000386e         xor        r12d, r12d
0000000000003871         mov        qword [rsp+0xe8+var_98], 0x0
000000000000387a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000387f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003884         jmp        loc_2aa3

                     loc_3889:
0000000000003889         cmp        r13, r15                                    ; CODE XREF=sub_2fd0+133
000000000000388c         jbe        loc_3893

000000000000388e         mov        byte [r14+r15], 0x30

                     loc_3893:
0000000000003893         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_3600+652
0000000000003897         cmp        r13, rax
000000000000389a         jbe        loc_38a2

000000000000389c         mov        byte [r14+rcx+2], 0x30

                     loc_38a2:
00000000000038a2         mov        eax, r12d                                   ; CODE XREF=sub_3600+666
00000000000038a5         lea        r15, qword [rcx+3]
00000000000038a9         xor        r12d, r12d
00000000000038ac         mov        ebx, 0x30
00000000000038b1         jmp        sub_2be0+56
                        ; endp
00000000000038b6         align      64

                     loc_38c0:
00000000000038c0         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_3130+731
00000000000038c5         mov        rbp, r11
00000000000038c8         mov        byte [rsp+0xe8+var_DB], bl
00000000000038cc         jmp        loc_3579

                     loc_38d1:
00000000000038d1         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_2ed0+105
00000000000038d6         xor        r12d, r12d
00000000000038d9         jmp        loc_33e0

                     loc_38de:
00000000000038de         xor        r10d, r10d                                  ; CODE XREF=sub_3130+944
00000000000038e1         jmp        loc_349d

                     loc_38e6:
00000000000038e6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_3600+187
00000000000038ef         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000038f4         xor        r12d, r12d
00000000000038f7         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000038fc         jmp        loc_36db

                     loc_3901:
0000000000003901         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_3130+561
0000000000003906         mov        rsi, r14
0000000000003909         mov        rcx, r13
000000000000390c         mov        rax, rbx
000000000000390f         mov        rdi, rbx
0000000000003912         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003918         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000391d         mov        r9, qword [rsp+0xe8+var_60]
0000000000003925         cmp        rsi, r11
0000000000003928         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000392e         mov        r15, qword [rsp+0xe8+var_68]
0000000000003936         mov        r14, qword [rsp+0xe8+var_A8]
000000000000393b         mov        r13, qword [rsp+0xe8+var_78]
0000000000003940         jae        loc_3968

0000000000003942         cmp        byte [rcx], 0x0
0000000000003945         jne        loc_3957

0000000000003947         jmp        loc_3968
0000000000003949         align      16

                     loc_3950:
0000000000003950         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_3600+867
0000000000003955         je         loc_3965

                     loc_3957:
0000000000003957         add        rax, 0x1                                    ; CODE XREF=sub_3600+837
000000000000395b         lea        rdx, qword [rbp+rax]
0000000000003960         cmp        r11, rdx
0000000000003963         ja         loc_3950

                     loc_3965:
0000000000003965         mov        rdi, rax                                    ; CODE XREF=sub_3600+853

                     loc_3968:
0000000000003968         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3600+832, sub_3600+839
000000000000396d         xor        r12d, r12d
0000000000003970         jmp        loc_33d6

                     loc_3975:
0000000000003975         mov        rdi, rbx                                    ; CODE XREF=sub_3130+551
0000000000003978         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000397e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003983         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003989         mov        r15, qword [rsp+0xe8+var_68]
0000000000003991         xor        r12d, r12d
0000000000003994         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003999         mov        r13, qword [rsp+0xe8+var_78]
000000000000399e         mov        r11, qword [rsp+0xe8+var_B8]
00000000000039a3         movzx      edx, byte [rsp+0xe8+var_DB]
00000000000039a8         jmp        loc_33d6

                     loc_39ad:
00000000000039ad         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_3600+486
00000000000039b2         movzx      eax, byte [rdx]
00000000000039b5         test       al, al
00000000000039b7         je         loc_37ec

00000000000039bd         nop        dword [rax]

                     loc_39c0:
00000000000039c0         cmp        r13, r15                                    ; CODE XREF=sub_3600+980
00000000000039c3         jbe        loc_39c9

00000000000039c5         mov        byte [r14+r15], al

                     loc_39c9:
00000000000039c9         add        r15, 0x1                                    ; CODE XREF=sub_3600+963
00000000000039cd         movzx      eax, byte [rdx+r15]
00000000000039d2         test       al, al
00000000000039d4         jne        loc_39c0

00000000000039d6         jmp        loc_37ec

                     loc_39db:
00000000000039db         mov        eax, edx                                    ; CODE XREF=sub_3130+682
00000000000039dd         jmp        loc_2f37

                     loc_39e2:
00000000000039e2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_3130+290
00000000000039e6         cmp        bl, 0x3e
00000000000039e9         ja         loc_3260

00000000000039ef         movabs     rax, 0x7000a38200000000
00000000000039f9         bt         rax, rbx
00000000000039fd         jae        loc_3260

0000000000003a03         cmp        byte [rsp+arg_7], 0x0
0000000000003a08         jne        loc_3bf2

0000000000003a0e         cmp        r13, r15
0000000000003a11         jbe        loc_3a18

0000000000003a13         mov        byte [r14+r15], 0x3f

                     loc_3a18:
0000000000003a18         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3600+1041
0000000000003a1c         cmp        r13, rax
0000000000003a1f         jbe        loc_3a27

0000000000003a21         mov        byte [r14+r15+1], 0x22

                     loc_3a27:
0000000000003a27         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3600+1055
0000000000003a2b         cmp        r13, rax
0000000000003a2e         jbe        loc_3a36

0000000000003a30         mov        byte [r14+r15+2], 0x22

                     loc_3a36:
0000000000003a36         lea        rax, qword [r15+3]                          ; CODE XREF=sub_3600+1070
0000000000003a3a         cmp        r13, rax
0000000000003a3d         jbe        loc_3a45

0000000000003a3f         mov        byte [r14+r15+3], 0x3f

                     loc_3a45:
0000000000003a45         add        r15, 0x4                                    ; CODE XREF=sub_3600+1085
0000000000003a49         xor        edx, edx
0000000000003a4b         xor        r12d, r12d
0000000000003a4e         xor        eax, eax
0000000000003a50         mov        rbp, rcx
0000000000003a53         jmp        sub_2be0+56
                        ; endp

                     loc_3a58:
0000000000003a58         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000003a5a         je         loc_3be8

0000000000003a60         lea        rax, qword [aLibs+29]                       ; 0x82c5
0000000000003a67         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003a6c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003a71         xor        r12d, r12d
0000000000003a74         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003a7d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003a82         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003a87         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003a90         xor        r15d, r15d
0000000000003a93         mov        qword [rsp+0xe8+var_A0], rax
0000000000003a98         jmp        loc_2ac3
0000000000003a9d         align      32

                     loc_3aa0:
0000000000003aa0         mov        rbp, r11                                    ; CODE XREF=sub_3130+333
0000000000003aa3         movzx      eax, byte [rsp+arg_7]
0000000000003aa8         jmp        sub_3130+1097
                        ; endp

                     loc_3aad:
0000000000003aad         lea        rax, qword [aLibs+27]                       ; 0x82c3, CODE XREF=sub_3600+178
0000000000003ab4         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003ab9         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003abe         xor        r12d, r12d
0000000000003ac1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003aca         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003acf         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003ad4         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003add         xor        r15d, r15d
0000000000003ae0         mov        qword [rsp+0xe8+var_A0], rax
0000000000003ae5         jmp        loc_2ac3

                     loc_3aea:
0000000000003aea         mov        eax, edx                                    ; CODE XREF=sub_3130+87

                     loc_3aec:
0000000000003aec         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_3130+76, sub_3600+1489
0000000000003af1         test       rbx, rbx
0000000000003af4         je         loc_3b22

0000000000003af6         test       al, al
0000000000003af8         je         loc_3b22

0000000000003afa         movzx      ecx, byte [rbx]
0000000000003afd         mov        rax, rbx
0000000000003b00         test       cl, cl
0000000000003b02         je         loc_3b22

0000000000003b04         mov        rdx, r15
0000000000003b07         sub        rax, r15

                     loc_3b0a:
0000000000003b0a         cmp        r13, rdx                                    ; CODE XREF=sub_3600+1309
0000000000003b0d         jbe        loc_3b13

0000000000003b0f         mov        byte [r14+rdx], cl

                     loc_3b13:
0000000000003b13         add        rdx, 0x1                                    ; CODE XREF=sub_3600+1293
0000000000003b17         movzx      ecx, byte [rax+rdx]
0000000000003b1b         test       cl, cl
0000000000003b1d         jne        loc_3b0a

0000000000003b1f         mov        r15, rdx

                     loc_3b22:
0000000000003b22         cmp        r13, r15                                    ; CODE XREF=sub_3600+1268, sub_3600+1272, sub_3600+1282
0000000000003b25         jbe        loc_35c9

0000000000003b2b         mov        byte [r14+r15], 0x0
0000000000003b30         jmp        loc_35c9

                     loc_3b35:
0000000000003b35         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000003b3a         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000003b3f         mov        rbp, r11
0000000000003b42         sete       al
0000000000003b45         mov        byte [rsp+0xe8+var_DB], bl
0000000000003b49         jmp        loc_3579

                     loc_3b4e:
0000000000003b4e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3600+432
0000000000003b52         mov        rdi, rcx
0000000000003b55         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003b5a         mov        qword [rsp+0xe8+var_80], rax
0000000000003b5f         jmp        loc_37b6

                     loc_3b64:
0000000000003b64         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3600+475
0000000000003b68         mov        rdi, rcx
0000000000003b6b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003b70         mov        qword [rsp+0xe8+var_88], rax
0000000000003b75         jmp        loc_37e1

                     loc_3b7a:
0000000000003b7a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_2fd0+16
0000000000003b7f         mov        rbp, r11
0000000000003b82         mov        eax, edx
0000000000003b84         mov        byte [rsp+arg_5], bl
0000000000003b88         jmp        sub_3130+1097
                        ; endp

                     loc_3b8d:
0000000000003b8d         sub        rsp, 0x8                                    ; CODE XREF=sub_3130+98
0000000000003b91         mov        r8d, 0x5
0000000000003b97         mov        rcx, r11
0000000000003b9a         push       qword [rsp+0xf0+var_88]
0000000000003b9e         push       qword [rsp+0xf8+var_80]
0000000000003ba2         mov        rdi, r14
0000000000003ba5         push       qword [rsp+0x100+var_C8]
0000000000003ba9         mov        r9d, dword [rsp+0x108+var_70]
0000000000003bb1         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003bb6         mov        rsi, qword [rsp+0x108+var_98]
0000000000003bbb         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003bc0         add        rsp, 0x20
0000000000003bc4         mov        r15, rax
0000000000003bc7         jmp        loc_35c9

                     loc_3bcc:
0000000000003bcc         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_3130+121
0000000000003bd1         jmp        loc_3aec

                     loc_3bd6:
0000000000003bd6         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3130+63
0000000000003bde         jmp        loc_3579

                     loc_3be3:
0000000000003be3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_3130+1197
                        ; endp

                     loc_3be8:
0000000000003be8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3600+1114
0000000000003bed         jmp        loc_3661

                     loc_3bf2:
0000000000003bf2         mov        rbp, r11                                    ; CODE XREF=sub_3600+1032
0000000000003bf5         jmp        sub_3130+1120
                        ; endp

                     loc_3bfa:
0000000000003bfa         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_3600+100
0000000000003bff         xor        eax, eax
0000000000003c01         xor        r12d, r12d
0000000000003c04         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003c0d         jmp        loc_31b4

                     loc_3c12:
0000000000003c12         mov        rdx, r13                                    ; CODE XREF=sub_3600+32
0000000000003c15         mov        r13, qword [rsp+arg_48]
0000000000003c1a         jmp        loc_3212

                     loc_3c1f:
0000000000003c1f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000003c24         align      16                                          ; End of unwind block (FDE at 0x9428)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000003c30         push       r15                                         ; Begin of unwind block (FDE at 0x94a0), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000003c32         push       r14
0000000000003c34         movsxd     r15, edi
0000000000003c37         push       r13
0000000000003c39         push       r12
0000000000003c3b         mov        r14, rdx
0000000000003c3e         push       rbp
0000000000003c3f         push       rbx
0000000000003c40         mov        rbp, rcx
0000000000003c43         sub        rsp, 0x28
0000000000003c47         mov        qword [rsp+0x58+var_50], rsi
0000000000003c4c         call       j___errno_location                          ; __errno_location
0000000000003c51         mov        r13, rax
0000000000003c54         mov        eax, dword [rax]
0000000000003c56         test       r15d, r15d
0000000000003c59         mov        rbx, qword [slotvec]                        ; slotvec
0000000000003c60         mov        dword [rsp+0x58+var_40], eax
0000000000003c64         js         loc_3dd1

0000000000003c6a         cmp        dword [nslots], r15d                        ; nslots
0000000000003c71         jg         loc_3cd5

0000000000003c73         cmp        r15d, 0x7fffffff
0000000000003c7a         je         loc_3dd6

0000000000003c80         lea        r12d, dword [r15+1]
0000000000003c84         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000003c8b         movsxd     rsi, r12d
0000000000003c8e         shl        rsi, 0x4
0000000000003c92         cmp        rbx, rax
0000000000003c95         je         loc_3db0

0000000000003c9b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000003c9e         call       xrealloc                                    ; xrealloc
0000000000003ca3         mov        rbx, rax
0000000000003ca6         mov        qword [slotvec], rax                        ; slotvec

                     loc_3cad:
0000000000003cad         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000003cb4         mov        edx, r12d
0000000000003cb7         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000003cb9         sub        edx, edi
0000000000003cbb         shl        rdi, 0x4
0000000000003cbf         movsxd     rdx, edx
0000000000003cc2         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000003cc5         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000003cc9         call       j_memset                                    ; memset
0000000000003cce         mov        dword [nslots], r12d                        ; nslots

                     loc_3cd5:
0000000000003cd5         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000003cd8         shl        r15, 0x4
0000000000003cdc         sub        rsp, 0x8
0000000000003ce0         add        rbx, r15
0000000000003ce3         lea        r15, qword [rbp+8]
0000000000003ce7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003ceb         mov        r11, qword [rbx]
0000000000003cee         mov        r12, qword [rbx+8]
0000000000003cf2         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003cf5         or         eax, 0x1
0000000000003cf8         mov        dword [rsp+0x60+var_3C], eax
0000000000003cfc         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003cff         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000003d02         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003d05         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003d07         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000003d0a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000003d0f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003d12         mov        qword [rsp+0x78+var_48], r11
0000000000003d17         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003d1c         add        rsp, 0x20
0000000000003d20         mov        r11, qword [rsp+0x58+var_48]
0000000000003d25         cmp        r11, rax
0000000000003d28         ja         loc_3d91

0000000000003d2a         lea        rsi, qword [rax+1]
0000000000003d2e         lea        rax, qword [slot0]                          ; slot0
0000000000003d35         cmp        r12, rax
0000000000003d38         mov        qword [rbx], rsi
0000000000003d3b         je         loc_3d4f

0000000000003d3d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000003d40         mov        qword [rsp+0x58+var_48], rsi
0000000000003d45         call       j_free                                      ; free
0000000000003d4a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_3d4f:
0000000000003d4f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000003d52         mov        qword [rsp+0x58+var_48], rsi
0000000000003d57         call       xmalloc                                     ; xmalloc
0000000000003d5c         sub        rsp, 0x8
0000000000003d60         mov        qword [rbx+8], rax
0000000000003d64         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003d68         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003d6b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003d6e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003d71         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003d73         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000003d78         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003d7b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000003d80         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000003d85         mov        r12, rax
0000000000003d88         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003d8d         add        rsp, 0x20

                     loc_3d91:
0000000000003d91         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000003d95         mov        dword [r13], eax
0000000000003d99         add        rsp, 0x28
0000000000003d9d         mov        rax, r12
0000000000003da0         pop        rbx
0000000000003da1         pop        rbp
0000000000003da2         pop        r12
0000000000003da4         pop        r13
0000000000003da6         pop        r14
0000000000003da8         pop        r15
0000000000003daa         ret
                        ; endp
0000000000003dab         align      16

                     loc_3db0:
0000000000003db0         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000003db2         call       xrealloc                                    ; xrealloc
0000000000003db7         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
0000000000003dbf         mov        rbx, rax
0000000000003dc2         mov        qword [slotvec], rax                        ; slotvec
0000000000003dc9         movups     xmmword [rax], xmm0
0000000000003dcc         jmp        loc_3cad

                     loc_3dd1:
0000000000003dd1         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_3dd6:
0000000000003dd6         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3ddb:
0000000000003ddb         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x94a0)
                     clone_quoting_options:
0000000000003de0         push       r12                                         ; Begin of unwind block (FDE at 0x950c)
0000000000003de2         push       rbp
0000000000003de3         push       rbx
0000000000003de4         mov        rbx, rdi
0000000000003de7         call       j___errno_location                          ; __errno_location
0000000000003dec         mov        r12d, dword [rax]
0000000000003def         mov        rbp, rax
0000000000003df2         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000003df9         test       rbx, rbx
0000000000003dfc         mov        esi, 0x38                                   ; argument #2 for method xmemdup
0000000000003e01         cmove      rbx, rax
0000000000003e05         mov        rdi, rbx                                    ; argument #1 for method xmemdup
0000000000003e08         call       xmemdup                                     ; xmemdup
0000000000003e0d         mov        dword [rbp], r12d
0000000000003e11         pop        rbx
0000000000003e12         pop        rbp
0000000000003e13         pop        r12
0000000000003e15         ret
                        ; endp
0000000000003e16         align      32                                          ; End of unwind block (FDE at 0x950c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000003e20         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9538), default_quoting_options
0000000000003e27         test       rdi, rdi
0000000000003e2a         cmove      rdi, rax
0000000000003e2e         mov        eax, dword [rdi]
0000000000003e30         ret
                        ; endp
0000000000003e31         align      64                                          ; End of unwind block (FDE at 0x9538)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000003e40         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x954c), default_quoting_options
0000000000003e47         test       rdi, rdi
0000000000003e4a         cmove      rdi, rax
0000000000003e4e         mov        dword [rdi], esi
0000000000003e50         ret
                        ; endp
0000000000003e51         align      32                                          ; End of unwind block (FDE at 0x954c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000003e60         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9560), default_quoting_options
0000000000003e67         test       rdi, rdi
0000000000003e6a         mov        ecx, esi
0000000000003e6c         cmove      rdi, rax
0000000000003e70         mov        eax, esi
0000000000003e72         and        ecx, 0x1f
0000000000003e75         shr        al, 0x5
0000000000003e78         movzx      eax, al
0000000000003e7b         lea        rdi, qword [rdi+rax*4+8]
0000000000003e80         mov        esi, dword [rdi]
0000000000003e82         mov        eax, esi
0000000000003e84         shr        eax, cl
0000000000003e86         xor        edx, eax
0000000000003e88         and        eax, 0x1
0000000000003e8b         and        edx, 0x1
0000000000003e8e         shl        edx, cl
0000000000003e90         xor        edx, esi
0000000000003e92         mov        dword [rdi], edx
0000000000003e94         ret
                        ; endp
0000000000003e95         align      32                                          ; End of unwind block (FDE at 0x9560)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000003ea0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9574), default_quoting_options
0000000000003ea7         test       rdi, rdi
0000000000003eaa         cmove      rdi, rax
0000000000003eae         mov        eax, dword [rdi+4]
0000000000003eb1         mov        dword [rdi+4], esi
0000000000003eb4         ret
                        ; endp
0000000000003eb5         align      64                                          ; End of unwind block (FDE at 0x9574)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000003ec0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9588), default_quoting_options
0000000000003ec7         test       rdi, rdi
0000000000003eca         cmove      rdi, rax
0000000000003ece         test       rsi, rsi
0000000000003ed1         mov        dword [rdi], 0xa
0000000000003ed7         je         loc_3ee7

0000000000003ed9         test       rdx, rdx
0000000000003edc         je         loc_3ee7

0000000000003ede         mov        qword [rdi+0x28], rsi
0000000000003ee2         mov        qword [rdi+0x30], rdx
0000000000003ee6         ret
                        ; endp

                     loc_3ee7:
0000000000003ee7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000003eeb         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000003ef0         push       r15                                         ; End of unwind block (FDE at 0x9588), Begin of unwind block (FDE at 0x959c)
0000000000003ef2         push       r14
0000000000003ef4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000003efb         push       r13
0000000000003efd         push       r12
0000000000003eff         mov        r13, rdi
0000000000003f02         push       rbp
0000000000003f03         push       rbx
0000000000003f04         mov        rbx, r8
0000000000003f07         mov        r14, rsi
0000000000003f0a         mov        r15, rdx
0000000000003f0d         sub        rsp, 0x18
0000000000003f11         test       r8, r8
0000000000003f14         cmove      rbx, rax
0000000000003f18         mov        qword [rsp+0x48+var_40], rcx
0000000000003f1d         call       j___errno_location                          ; __errno_location
0000000000003f22         mov        r12d, dword [rax]
0000000000003f25         mov        rbp, rax
0000000000003f28         lea        rax, qword [rbx+8]
0000000000003f2c         sub        rsp, 0x8
0000000000003f30         mov        r9d, dword [rbx+4]
0000000000003f34         push       qword [rbx+0x30]
0000000000003f37         mov        r8d, dword [rbx]
0000000000003f3a         push       qword [rbx+0x28]
0000000000003f3d         mov        rdx, r15
0000000000003f40         push       rax
0000000000003f41         mov        rcx, qword [rsp+0x68+var_40]
0000000000003f46         mov        rsi, r14
0000000000003f49         mov        rdi, r13
0000000000003f4c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003f51         mov        dword [rbp], r12d
0000000000003f55         add        rsp, 0x38
0000000000003f59         pop        rbx
0000000000003f5a         pop        rbp
0000000000003f5b         pop        r12
0000000000003f5d         pop        r13
0000000000003f5f         pop        r14
0000000000003f61         pop        r15
0000000000003f63         ret
                        ; endp
0000000000003f64         align      16                                          ; End of unwind block (FDE at 0x959c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000003f70         push       r15                                         ; Begin of unwind block (FDE at 0x95f0), CODE XREF=quotearg_alloc+5
0000000000003f72         push       r14
0000000000003f74         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000003f7b         push       r13
0000000000003f7d         push       r12
0000000000003f7f         mov        r12, rdx
0000000000003f82         push       rbp
0000000000003f83         push       rbx
0000000000003f84         mov        rbx, rcx
0000000000003f87         mov        r14, rdi
0000000000003f8a         mov        r15, rsi
0000000000003f8d         sub        rsp, 0x38
0000000000003f91         test       rcx, rcx
0000000000003f94         cmove      rbx, rax
0000000000003f98         xor        ebp, ebp
0000000000003f9a         call       j___errno_location                          ; __errno_location
0000000000003f9f         test       r12, r12
0000000000003fa2         mov        r13, rax
0000000000003fa5         mov        eax, dword [rax]
0000000000003fa7         sete       bpl
0000000000003fab         or         ebp, dword [rbx+4]
0000000000003fae         lea        r10, qword [rbx+8]
0000000000003fb2         sub        rsp, 0x8
0000000000003fb6         mov        r8d, dword [rbx]
0000000000003fb9         mov        rcx, r15
0000000000003fbc         mov        dword [rsp+0x70+var_5C], eax
0000000000003fc0         push       qword [rbx+0x30]
0000000000003fc3         mov        rdx, r14
0000000000003fc6         push       qword [rbx+0x28]
0000000000003fc9         push       r10
0000000000003fcb         xor        esi, esi
0000000000003fcd         mov        r9d, ebp
0000000000003fd0         xor        edi, edi
0000000000003fd2         mov        qword [rsp+0x88+var_48], r10
0000000000003fd7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003fdc         lea        rsi, qword [rax+1]
0000000000003fe0         mov        qword [rsp+0x88+var_40], rax
0000000000003fe5         add        rsp, 0x20
0000000000003fe9         mov        rdi, rsi
0000000000003fec         mov        qword [rsp+0x68+var_50], rsi
0000000000003ff1         call       xmalloc                                     ; xmalloc
0000000000003ff6         mov        qword [rsp+0x68+var_58], rax
0000000000003ffb         sub        rsp, 0x8
0000000000003fff         push       qword [rbx+0x30]
0000000000004002         push       qword [rbx+0x28]
0000000000004005         mov        r10, qword [rsp+0x80+var_48]
000000000000400a         mov        r9d, ebp
000000000000400d         mov        r8d, dword [rbx]
0000000000004010         mov        rcx, r15
0000000000004013         mov        rdx, r14
0000000000004016         mov        rdi, rax
0000000000004019         push       r10
000000000000401b         mov        rsi, qword [rsp+0x88+var_50]
0000000000004020         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004025         mov        eax, dword [rsp+0x88+var_5C]
0000000000004029         add        rsp, 0x20
000000000000402d         test       r12, r12
0000000000004030         mov        dword [r13], eax
0000000000004034         je         loc_403f

0000000000004036         mov        r11, qword [rsp+0x68+var_40]
000000000000403b         mov        qword [r12], r11

                     loc_403f:
000000000000403f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000004044         add        rsp, 0x38
0000000000004048         pop        rbx
0000000000004049         pop        rbp
000000000000404a         pop        r12
000000000000404c         pop        r13
000000000000404e         pop        r14
0000000000004050         pop        r15
0000000000004052         ret
                        ; endp
0000000000004053         align      32                                          ; End of unwind block (FDE at 0x95f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000004060         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x965c)
0000000000004063         xor        edx, edx
0000000000004065         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000406a         align      16                                          ; End of unwind block (FDE at 0x965c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000004070         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x9670), nslots
0000000000004076         push       r12
0000000000004078         mov        r12, qword [slotvec]                        ; slotvec
000000000000407f         push       rbp
0000000000004080         push       rbx
0000000000004081         cmp        eax, 0x1
0000000000004084         jle        loc_40b1

0000000000004086         sub        eax, 0x2
0000000000004089         lea        rbx, qword [r12+0x18]
000000000000408e         shl        rax, 0x4
0000000000004092         lea        rbp, qword [r12+rax+0x28]
0000000000004097         nop        word [rax+rax]

                     loc_40a0:
00000000000040a0         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
00000000000040a3         add        rbx, 0x10
00000000000040a7         call       j_free                                      ; free
00000000000040ac         cmp        rbx, rbp
00000000000040af         jne        loc_40a0

                     loc_40b1:
00000000000040b1         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
00000000000040b6         lea        rbx, qword [slot0]                          ; slot0
00000000000040bd         cmp        rdi, rbx
00000000000040c0         je         loc_40d9

00000000000040c2         call       j_free                                      ; free
00000000000040c7         mov        qword [slotvec0], 0x100                     ; slotvec0
00000000000040d2         mov        qword [slotvec0+8], rbx                     ; 0x20b078

                     loc_40d9:
00000000000040d9         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
00000000000040e0         cmp        r12, rbx
00000000000040e3         je         loc_40f4

00000000000040e5         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000040e8         call       j_free                                      ; free
00000000000040ed         mov        qword [slotvec], rbx                        ; slotvec

                     loc_40f4:
00000000000040f4         pop        rbx                                         ; CODE XREF=quotearg_free+115
00000000000040f5         mov        dword [nslots], 0x1                         ; nslots
00000000000040ff         pop        rbp
0000000000004100         pop        r12
0000000000004102         ret
                        ; endp
0000000000004103         align      16                                          ; End of unwind block (FDE at 0x9670)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000004110         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x969c), default_quoting_options
0000000000004117         mov        rdx, 0xffffffffffffffff
000000000000411e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004123         align      16                                          ; End of unwind block (FDE at 0x969c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000004130         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x96b0), default_quoting_options
0000000000004137         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000413c         align      64                                          ; End of unwind block (FDE at 0x96b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000004140         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x96c4), default_quoting_options
0000000000004147         mov        rsi, rdi
000000000000414a         mov        rdx, 0xffffffffffffffff
0000000000004151         xor        edi, edi
0000000000004153         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004158         align      32                                          ; End of unwind block (FDE at 0x96c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000004160         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x96d8), default_quoting_options
0000000000004167         mov        rdx, rsi
000000000000416a         mov        rsi, rdi
000000000000416d         xor        edi, edi
000000000000416f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004174         align      128                                         ; End of unwind block (FDE at 0x96d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000004180         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x96ec)
0000000000004184         mov        rax, rdx
0000000000004187         mov        rdx, qword [fs:0x28]
0000000000004190         mov        qword [rsp+0x48+var_10], rdx
0000000000004195         xor        edx, edx
0000000000004197         cmp        esi, 0xa
000000000000419a         je         loc_4204

000000000000419c         mov        dword [rsp+0x48+var_48], esi
000000000000419f         mov        rcx, rsp
00000000000041a2         mov        rdx, 0xffffffffffffffff
00000000000041a9         mov        rsi, rax
00000000000041ac         mov        qword [rsp+0x48+var_44], 0x0
00000000000041b5         mov        qword [rsp+0x48+var_3C], 0x0
00000000000041be         mov        qword [rsp+0x48+var_34], 0x0
00000000000041c7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000041d0         mov        qword [rsp+0x48+var_24], 0x0
00000000000041d9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000041e2         mov        dword [rsp+0x48+var_14], 0x0
00000000000041ea         call       quotearg_n_options                          ; quotearg_n_options
00000000000041ef         mov        rcx, qword [rsp+0x48+var_10]
00000000000041f4         xor        rcx, qword [fs:0x28]
00000000000041fd         jne        loc_4209

00000000000041ff         add        rsp, 0x48
0000000000004203         ret
                        ; endp

                     loc_4204:
0000000000004204         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_4209:
0000000000004209         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000420e         align      16                                          ; End of unwind block (FDE at 0x96ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000004210         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x9708), CODE XREF=quotearg_style_mem+10
0000000000004214         mov        rax, rdx
0000000000004217         mov        rdx, rcx
000000000000421a         mov        rcx, qword [fs:0x28]
0000000000004223         mov        qword [rsp+0x48+var_10], rcx
0000000000004228         xor        ecx, ecx
000000000000422a         cmp        esi, 0xa
000000000000422d         je         loc_4290

000000000000422f         mov        dword [rsp+0x48+var_48], esi
0000000000004232         mov        rcx, rsp
0000000000004235         mov        rsi, rax
0000000000004238         mov        qword [rsp+0x48+var_44], 0x0
0000000000004241         mov        qword [rsp+0x48+var_3C], 0x0
000000000000424a         mov        qword [rsp+0x48+var_34], 0x0
0000000000004253         mov        qword [rsp+0x48+var_2C], 0x0
000000000000425c         mov        qword [rsp+0x48+var_24], 0x0
0000000000004265         mov        qword [rsp+0x48+var_1C], 0x0
000000000000426e         mov        dword [rsp+0x48+var_14], 0x0
0000000000004276         call       quotearg_n_options                          ; quotearg_n_options
000000000000427b         mov        rdx, qword [rsp+0x48+var_10]
0000000000004280         xor        rdx, qword [fs:0x28]
0000000000004289         jne        loc_4295

000000000000428b         add        rsp, 0x48
000000000000428f         ret
                        ; endp

                     loc_4290:
0000000000004290         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_4295:
0000000000004295         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000429a         align      32                                          ; End of unwind block (FDE at 0x9708)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
00000000000042a0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x9724)
00000000000042a3         mov        esi, edi
00000000000042a5         xor        edi, edi
00000000000042a7         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
00000000000042ac         align      16                                          ; End of unwind block (FDE at 0x9724)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
00000000000042b0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x9738)
00000000000042b3         mov        rdx, rsi
00000000000042b6         mov        esi, edi
00000000000042b8         xor        edi, edi
00000000000042ba         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
00000000000042bf         align      64                                          ; End of unwind block (FDE at 0x9738)

                     quotearg_char_mem:
00000000000042c0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x974c), CODE XREF=quotearg_char+11
00000000000042c4         mov        ecx, edx
00000000000042c6         mov        rax, qword [fs:0x28]
00000000000042cf         mov        qword [rsp+0x48+var_10], rax
00000000000042d4         xor        eax, eax
00000000000042d6         mov        rax, qword [qword_20b290]                   ; qword_20b290
00000000000042dd         mov        r8, rsp
00000000000042e0         and        ecx, 0x1f
00000000000042e3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000042eb         mov        qword [rsp+0x48+var_18], rax
00000000000042f0         mov        eax, edx
00000000000042f2         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000042f6         shr        al, 0x5
00000000000042f9         movzx      eax, al
00000000000042fc         lea        r9, qword [r8+rax*4+8]
0000000000004301         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20b270
0000000000004309         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000430e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20b280
0000000000004316         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000431b         mov        edx, dword [r9]
000000000000431e         mov        eax, edx
0000000000004320         shr        eax, cl
0000000000004322         not        eax
0000000000004324         and        eax, 0x1
0000000000004327         shl        eax, cl
0000000000004329         mov        rcx, r8
000000000000432c         xor        eax, edx
000000000000432e         mov        rdx, rsi
0000000000004331         mov        rsi, rdi
0000000000004334         mov        dword [r9], eax
0000000000004337         xor        edi, edi
0000000000004339         call       quotearg_n_options                          ; quotearg_n_options
000000000000433e         mov        rsi, qword [rsp+0x48+var_10]
0000000000004343         xor        rsi, qword [fs:0x28]
000000000000434c         jne        loc_4353

000000000000434e         add        rsp, 0x48
0000000000004352         ret
                        ; endp

                     loc_4353:
0000000000004353         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000004358         align      32                                          ; End of unwind block (FDE at 0x974c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000004360         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x9768)
0000000000004364         mov        rsi, 0xffffffffffffffff
000000000000436b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000004370         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x9768), Begin of unwind block (FDE at 0x977c), CODE XREF=close_stdout+101
0000000000004375         mov        rsi, 0xffffffffffffffff
000000000000437c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000004381         align      16                                          ; End of unwind block (FDE at 0x977c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000004390         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x9790)
0000000000004395         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000439a         align      32                                          ; End of unwind block (FDE at 0x9790)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
00000000000043a0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x97a4)
00000000000043a4         mov        rax, rdx
00000000000043a7         mov        rdx, qword [fs:0x28]
00000000000043b0         mov        qword [rsp+0x48+var_10], rdx
00000000000043b5         xor        edx, edx
00000000000043b7         cmp        esi, 0xa
00000000000043ba         je         loc_4424

00000000000043bc         mov        dword [rsp+0x48+var_48], esi
00000000000043bf         mov        rcx, rsp
00000000000043c2         mov        rdx, 0xffffffffffffffff
00000000000043c9         mov        rsi, rax
00000000000043cc         mov        qword [rsp+0x48+var_44], 0x0
00000000000043d5         mov        qword [rsp+0x48+var_3C], 0x4000000
00000000000043de         mov        qword [rsp+0x48+var_34], 0x0
00000000000043e7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000043f0         mov        qword [rsp+0x48+var_24], 0x0
00000000000043f9         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004402         mov        dword [rsp+0x48+var_14], 0x0
000000000000440a         call       quotearg_n_options                          ; quotearg_n_options
000000000000440f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004414         xor        rcx, qword [fs:0x28]
000000000000441d         jne        loc_4429

000000000000441f         add        rsp, 0x48
0000000000004423         ret
                        ; endp

                     loc_4424:
0000000000004424         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_4429:
0000000000004429         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000442e         align      16                                          ; End of unwind block (FDE at 0x97a4)

                     quotearg_n_custom_mem:
0000000000004430         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x97c0), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000004434         mov        r9, rcx
0000000000004437         mov        rcx, qword [qword_20b290]                   ; qword_20b290
000000000000443e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000004446         mov        rax, qword [fs:0x28]
000000000000444f         mov        qword [rsp+0x48+var_10], rax
0000000000004454         xor        eax, eax
0000000000004456         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000445a         test       rsi, rsi
000000000000445d         mov        qword [rsp+0x48+var_18], rcx
0000000000004462         mov        dword [rsp+0x48+var_48], 0xa
0000000000004469         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20b270
0000000000004471         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000004476         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20b280
000000000000447e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000004483         je         loc_44b7

0000000000004485         test       rdx, rdx
0000000000004488         je         loc_44b7

000000000000448a         mov        qword [rsp+0x48+var_20], rsi
000000000000448f         mov        qword [rsp+0x48+var_18], rdx
0000000000004494         mov        rcx, rsp
0000000000004497         mov        rdx, r8
000000000000449a         mov        rsi, r9
000000000000449d         call       quotearg_n_options                          ; quotearg_n_options
00000000000044a2         mov        rdi, qword [rsp+0x48+var_10]
00000000000044a7         xor        rdi, qword [fs:0x28]
00000000000044b0         jne        loc_44bc

00000000000044b2         add        rsp, 0x48
00000000000044b6         ret
                        ; endp

                     loc_44b7:
00000000000044b7         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_44bc:
00000000000044bc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
00000000000044c1         align      16                                          ; End of unwind block (FDE at 0x97c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
00000000000044d0         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x97dc)
00000000000044d7         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
00000000000044dc         align      32                                          ; End of unwind block (FDE at 0x97dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
00000000000044e0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x97f0)
00000000000044e3         mov        r8, 0xffffffffffffffff
00000000000044ea         mov        rdx, rsi
00000000000044ed         mov        rsi, rdi
00000000000044f0         xor        edi, edi
00000000000044f2         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000044f7         align      256                                         ; End of unwind block (FDE at 0x97f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000004500         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x9804)
0000000000004503         mov        rcx, rdx
0000000000004506         mov        rdx, rsi
0000000000004509         mov        rsi, rdi
000000000000450c         xor        edi, edi
000000000000450e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004513         align      32                                          ; End of unwind block (FDE at 0x9804)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000004520         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x9818), quote_quoting_options
0000000000004527         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000452c         align      16                                          ; End of unwind block (FDE at 0x9818)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000004530         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x982c), quote_quoting_options
0000000000004537         mov        rdx, rsi
000000000000453a         mov        rsi, rdi
000000000000453d         xor        edi, edi
000000000000453f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004544         align      16                                          ; End of unwind block (FDE at 0x982c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000004550         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x9840), quote_quoting_options
0000000000004557         mov        rdx, 0xffffffffffffffff
000000000000455e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004563         align      16                                          ; End of unwind block (FDE at 0x9840)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000004570         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x9854), quote_quoting_options, CODE XREF=main+1066, main+1528, main+1609, main+1681, main+1733
0000000000004577         mov        rsi, rdi
000000000000457a         mov        rdx, 0xffffffffffffffff
0000000000004581         xor        edi, edi
0000000000004583         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004588         align      16                                          ; End of unwind block (FDE at 0x9854)

                     version_etc_arn:
0000000000004590         push       r15                                         ; Begin of unwind block (FDE at 0x986c), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000004592         push       r14
0000000000004594         push       r13
0000000000004596         push       r12
0000000000004598         mov        r12, r9
000000000000459b         push       rbp
000000000000459c         push       rbx
000000000000459d         mov        rbp, rdi
00000000000045a0         mov        rbx, r8
00000000000045a3         sub        rsp, 0x28
00000000000045a7         test       rsi, rsi
00000000000045aa         je         loc_46c8

00000000000045b0         mov        r8, rdx
00000000000045b3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
00000000000045ba         mov        r9, rcx
00000000000045bd         xor        eax, eax
00000000000045bf         mov        rcx, rsi
00000000000045c2         mov        esi, 0x1
00000000000045c7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_45cc:
00000000000045cc         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x879b, CODE XREF=version_etc_arn+337
00000000000045d3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000045d5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000045da         call       j_dcgettext                                 ; dcgettext
00000000000045df         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
00000000000045e6         mov        rcx, rax
00000000000045e9         mov        r8d, 0x7e3
00000000000045ef         mov        esi, 0x1
00000000000045f4         mov        rdi, rbp
00000000000045f7         xor        eax, eax
00000000000045f9         call       j___fprintf_chk                             ; __fprintf_chk
00000000000045fe         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004605         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004607         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000460c         call       j_dcgettext                                 ; dcgettext
0000000000004611         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004614         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004617         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000461c         cmp        r12, 0x9
0000000000004620         ja         loc_4960

0000000000004626         lea        rdx, qword [switch_table_8a84]              ; switch_table_8a84
000000000000462d         movsxd     rax, dword [rdx+r12*4]
0000000000004631         add        rax, rdx
0000000000004634         jmp        rax                                         ; switch statement using table at 0x8a84, with 10 cases, 0x4640,0x46b6,0x46f0,0x4748,0x4788,0x47d0,0x4820,0x4878,0x48a8,0x4910
0000000000004636         align      64

                     loc_4640:
0000000000004640         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000004644         mov        rax, qword [rbx+0x10]
0000000000004648         lea        rsi, qword [aWrittenBySSSns_8998]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000000464f         mov        r8, qword [rbx+8]
0000000000004653         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004658         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000465a         mov        r13, qword [rbx+0x30]
000000000000465e         mov        r12, qword [rbx+0x28]
0000000000004662         mov        qword [rsp+0x58+var_48], r9
0000000000004667         mov        r15, qword [rbx+0x20]
000000000000466b         mov        r14, qword [rbx+0x18]
000000000000466f         mov        qword [rsp+0x58+var_58], rax
0000000000004673         mov        qword [rsp+0x58+var_50], r8
0000000000004678         mov        rbx, qword [rbx]
000000000000467b         call       j_dcgettext                                 ; dcgettext
0000000000004680         sub        rsp, 0x8

                     loc_4684:
0000000000004684         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000004689         mov        rdx, rax
000000000000468c         mov        rcx, rbx
000000000000468f         mov        esi, 0x1
0000000000004694         mov        rdi, rbp
0000000000004697         xor        eax, eax
0000000000004699         push       r9
000000000000469b         push       r13
000000000000469d         push       r12
000000000000469f         push       r15
00000000000046a1         push       r14
00000000000046a3         mov        r9, qword [rsp+0x88+var_58]
00000000000046a8         mov        r8, qword [rsp+0x88+var_50]
00000000000046ad         call       j___fprintf_chk                             ; __fprintf_chk
00000000000046b2         add        rsp, 0x30

                     loc_46b6:
00000000000046b6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
00000000000046ba         pop        rbx
00000000000046bb         pop        rbp
00000000000046bc         pop        r12
00000000000046be         pop        r13
00000000000046c0         pop        r14
00000000000046c2         pop        r15
00000000000046c4         ret
                        ; endp
00000000000046c5         align      8

                     loc_46c8:
00000000000046c8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
00000000000046cb         mov        rcx, rdx
00000000000046ce         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
00000000000046d5         mov        esi, 0x1
00000000000046da         xor        eax, eax
00000000000046dc         call       j___fprintf_chk                             ; __fprintf_chk
00000000000046e1         jmp        loc_45cc
00000000000046e6         align      16

                     loc_46f0:
00000000000046f0         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
00000000000046f4         mov        r9, qword [rbx+0x38]
00000000000046f8         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
00000000000046ff         mov        rax, qword [rbx+0x10]
0000000000004703         mov        r8, qword [rbx+8]
0000000000004707         mov        edx, 0x5
000000000000470c         mov        r13, qword [rbx+0x30]
0000000000004710         mov        r12, qword [rbx+0x28]
0000000000004714         mov        r15, qword [rbx+0x20]
0000000000004718         mov        r14, qword [rbx+0x18]
000000000000471c         mov        rbx, qword [rbx]
000000000000471f         mov        qword [rsp+0x58+var_40], r10
0000000000004724         mov        qword [rsp+0x58+var_48], r9
0000000000004729         mov        qword [rsp+0x58+var_58], rax
000000000000472d         mov        qword [rsp+0x58+var_50], r8

                     loc_4732:
0000000000004732         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000004734         call       j_dcgettext                                 ; dcgettext
0000000000004739         mov        r10, qword [rsp+0x58+var_40]
000000000000473e         push       r10
0000000000004740         jmp        loc_4684
0000000000004745         align      8

                     loc_4748:
0000000000004748         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000000474b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000004752         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004757         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004759         call       j_dcgettext                                 ; dcgettext
000000000000475e         add        rsp, 0x28
0000000000004762         mov        rcx, rbx
0000000000004765         mov        rdi, rbp
0000000000004768         pop        rbx
0000000000004769         pop        rbp
000000000000476a         pop        r12
000000000000476c         pop        r13
000000000000476e         pop        r14
0000000000004770         pop        r15
0000000000004772         mov        rdx, rax
0000000000004775         mov        esi, 0x1
000000000000477a         xor        eax, eax
000000000000477c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004781         align      8

                     loc_4788:
0000000000004788         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000000478c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000004793         mov        rbx, qword [rbx]
0000000000004796         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000479b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000479d         call       j_dcgettext                                 ; dcgettext
00000000000047a2         add        rsp, 0x28
00000000000047a6         mov        r8, r12
00000000000047a9         mov        rcx, rbx
00000000000047ac         mov        rdi, rbp
00000000000047af         mov        rdx, rax
00000000000047b2         mov        esi, 0x1
00000000000047b7         pop        rbx
00000000000047b8         pop        rbp
00000000000047b9         pop        r12
00000000000047bb         pop        r13
00000000000047bd         pop        r14
00000000000047bf         pop        r15
00000000000047c1         xor        eax, eax
00000000000047c3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000047c8         align      16

                     loc_47d0:
00000000000047d0         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
00000000000047d4         mov        r12, qword [rbx+8]
00000000000047d8         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
00000000000047df         mov        rbx, qword [rbx]
00000000000047e2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000047e7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000047e9         call       j_dcgettext                                 ; dcgettext
00000000000047ee         add        rsp, 0x28
00000000000047f2         mov        r9, r13
00000000000047f5         mov        r8, r12
00000000000047f8         mov        rcx, rbx
00000000000047fb         mov        rdi, rbp
00000000000047fe         mov        rdx, rax
0000000000004801         pop        rbx
0000000000004802         pop        rbp
0000000000004803         pop        r12
0000000000004805         pop        r13
0000000000004807         pop        r14
0000000000004809         pop        r15
000000000000480b         mov        esi, 0x1
0000000000004810         xor        eax, eax
0000000000004812         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004817         align      32

                     loc_4820:
0000000000004820         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000004827         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000482c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000482e         mov        r14, qword [rbx+0x18]
0000000000004832         mov        r13, qword [rbx+0x10]
0000000000004836         mov        r12, qword [rbx+8]
000000000000483a         mov        rbx, qword [rbx]
000000000000483d         call       j_dcgettext                                 ; dcgettext
0000000000004842         sub        rsp, 0x8

                     loc_4846:
0000000000004846         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000004848         mov        rdx, rax
000000000000484b         mov        r9, r13
000000000000484e         mov        r8, r12
0000000000004851         mov        rcx, rbx
0000000000004854         mov        rdi, rbp
0000000000004857         mov        esi, 0x1
000000000000485c         xor        eax, eax
000000000000485e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004863         pop        rax
0000000000004864         pop        rdx
0000000000004865         add        rsp, 0x28
0000000000004869         pop        rbx
000000000000486a         pop        rbp
000000000000486b         pop        r12
000000000000486d         pop        r13
000000000000486f         pop        r14
0000000000004871         pop        r15
0000000000004873         ret
                        ; endp
0000000000004874         align      8

                     loc_4878:
0000000000004878         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000487c         lea        rsi, qword [aWrittenBySSSns_8918]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000004883         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004888         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000488a         mov        r14, qword [rbx+0x18]
000000000000488e         mov        r13, qword [rbx+0x10]
0000000000004892         mov        r12, qword [rbx+8]
0000000000004896         mov        rbx, qword [rbx]
0000000000004899         call       j_dcgettext                                 ; dcgettext
000000000000489e         push       r15
00000000000048a0         jmp        loc_4846
00000000000048a2         align      8

                     loc_48a8:
00000000000048a8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
00000000000048ac         mov        r12, qword [rbx+0x28]
00000000000048b0         lea        rsi, qword [aWrittenBySSSns_8940]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
00000000000048b7         mov        r15, qword [rbx+0x20]
00000000000048bb         mov        r14, qword [rbx+0x18]
00000000000048bf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000048c4         mov        r13, qword [rbx+0x10]
00000000000048c8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000048ca         mov        rbx, qword [rbx]
00000000000048cd         mov        qword [rsp+0x58+var_58], r8
00000000000048d1         call       j_dcgettext                                 ; dcgettext
00000000000048d6         sub        rsp, 0x8
00000000000048da         mov        r9, r13
00000000000048dd         push       r12
00000000000048df         push       r15
00000000000048e1         push       r14

                     loc_48e3:
00000000000048e3         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
00000000000048e8         mov        rcx, rbx
00000000000048eb         mov        rdx, rax
00000000000048ee         mov        rdi, rbp
00000000000048f1         mov        esi, 0x1
00000000000048f6         xor        eax, eax
00000000000048f8         call       j___fprintf_chk                             ; __fprintf_chk
00000000000048fd         add        rsp, 0x20
0000000000004901         add        rsp, 0x28
0000000000004905         pop        rbx
0000000000004906         pop        rbp
0000000000004907         pop        r12
0000000000004909         pop        r13
000000000000490b         pop        r14
000000000000490d         pop        r15
000000000000490f         ret
                        ; endp

                     loc_4910:
0000000000004910         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000004914         mov        r13, qword [rbx+0x30]
0000000000004918         lea        rsi, qword [aWrittenBySSSns_8968]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
000000000000491f         mov        r12, qword [rbx+0x28]
0000000000004923         mov        r15, qword [rbx+0x20]
0000000000004927         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000492c         mov        r14, qword [rbx+0x18]
0000000000004930         mov        r8, qword [rbx+8]
0000000000004934         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004936         mov        qword [rsp+0x58+var_50], r9
000000000000493b         mov        rbx, qword [rbx]
000000000000493e         mov        qword [rsp+0x58+var_58], r8
0000000000004942         call       j_dcgettext                                 ; dcgettext
0000000000004947         push       r13
0000000000004949         push       r12
000000000000494b         push       r15
000000000000494d         push       r14
000000000000494f         mov        r9, qword [rsp+0x78+var_50]
0000000000004954         jmp        loc_48e3
0000000000004956         align      32

                     loc_4960:
0000000000004960         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000004964         mov        r9, qword [rbx+0x38]
0000000000004968         mov        edx, 0x5
000000000000496d         mov        rax, qword [rbx+0x10]
0000000000004971         mov        r8, qword [rbx+8]
0000000000004975         lea        rsi, qword [aWrittenBySSSns_8a00]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000000497c         mov        r13, qword [rbx+0x30]
0000000000004980         mov        r12, qword [rbx+0x28]
0000000000004984         mov        r15, qword [rbx+0x20]
0000000000004988         mov        r14, qword [rbx+0x18]
000000000000498c         mov        qword [rsp+0x58+var_40], r10
0000000000004991         mov        qword [rsp+0x58+var_48], r9
0000000000004996         mov        qword [rsp+0x58+var_58], rax
000000000000499a         mov        qword [rsp+0x58+var_50], r8
000000000000499f         mov        rbx, qword [rbx]
00000000000049a2         jmp        loc_4732
00000000000049a7         align      16                                          ; End of unwind block (FDE at 0x986c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_ar:
00000000000049b0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x9980)
00000000000049b3         cmp        qword [r8], 0x0
00000000000049b7         je         j_version_etc_arn                           ; version_etc_arn

00000000000049b9         nop        dword [rax]

                     loc_49c0:
00000000000049c0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
00000000000049c4         cmp        qword [r8+r9*8], 0x0
00000000000049c9         jne        loc_49c0

                     j_version_etc_arn:        // version_etc_arn
00000000000049cb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
00000000000049d0         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x9980), Begin of unwind block (FDE at 0x9994)
00000000000049d4         mov        r10, r8
00000000000049d7         xor        r9d, r9d
00000000000049da         mov        rax, qword [fs:0x28]
00000000000049e3         mov        qword [rsp+0x68+var_10], rax
00000000000049e8         xor        eax, eax
00000000000049ea         mov        r8, rsp
00000000000049ed         nop        dword [rax]

                     loc_49f0:
00000000000049f0         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
00000000000049f3         cmp        eax, 0x2f
00000000000049f6         ja         loc_4a3a

00000000000049f8         mov        r11d, eax
00000000000049fb         add        r11, qword [r10+0x10]
00000000000049ff         add        eax, 0x8
0000000000004a02         mov        dword [r10], eax

                     loc_4a05:
0000000000004a05         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000004a08         test       rax, rax
0000000000004a0b         mov        qword [r8+r9*8], rax
0000000000004a0f         je         loc_4a1b

0000000000004a11         add        r9, 0x1
0000000000004a15         cmp        r9, 0xa
0000000000004a19         jne        loc_49f0

                     loc_4a1b:
0000000000004a1b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000004a20         mov        rax, qword [rsp+0x68+var_10]
0000000000004a25         xor        rax, qword [fs:0x28]
0000000000004a2e         jne        loc_4a35

0000000000004a30         add        rsp, 0x68
0000000000004a34         ret
                        ; endp

                     loc_4a35:
0000000000004a35         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_4a3a:
0000000000004a3a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000004a3e         lea        rax, qword [r11+8]
0000000000004a42         mov        qword [r10+8], rax
0000000000004a46         jmp        loc_4a05
0000000000004a48         align      16                                          ; End of unwind block (FDE at 0x9994)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000004a50         push       rbp                                         ; Begin of unwind block (FDE at 0x99b0), CODE XREF=main+237
0000000000004a51         push       rbx
0000000000004a52         mov        r10d, 0x20
0000000000004a58         xor        r11d, r11d
0000000000004a5b         sub        rsp, 0xb8
0000000000004a62         mov        rax, qword [fs:0x28]
0000000000004a6b         mov        qword [rsp+0xc8+var_50], rax
0000000000004a70         xor        eax, eax
0000000000004a72         lea        rax, qword [rsp+0xc8+arg_0]
0000000000004a7a         mov        qword [rsp+0xc8+var_28], r8
0000000000004a82         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000004a8a         lea        r8, qword [rsp+0xc8+var_A8]
0000000000004a8f         mov        qword [rsp+0xc8+var_20], r9
0000000000004a97         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000004a9f         mov        qword [rsp+0xc8+var_B8], rax
0000000000004aa4         lea        rax, qword [rsp+0xc8+var_48]
0000000000004aac         xor        r9d, r9d
0000000000004aaf         mov        qword [rsp+0xc8+var_B0], rax
0000000000004ab4         mov        rbp, rax
0000000000004ab7         nop        word [rax+rax]

                     loc_4ac0:
0000000000004ac0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000004ac4         ja         loc_4b1c

0000000000004ac6         mov        eax, r10d
0000000000004ac9         mov        r11d, 0x1
0000000000004acf         add        r10d, 0x8
0000000000004ad3         add        rax, rbp

                     loc_4ad6:
0000000000004ad6         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000004ad9         test       rax, rax
0000000000004adc         mov        qword [r8+r9*8], rax
0000000000004ae0         je         loc_4aec

0000000000004ae2         add        r9, 0x1
0000000000004ae6         cmp        r9, 0xa
0000000000004aea         jne        loc_4ac0

                     loc_4aec:
0000000000004aec         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000004aef         jne        loc_4b15

                     loc_4af1:
0000000000004af1         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000004af6         mov        rax, qword [rsp+0xc8+var_50]
0000000000004afb         xor        rax, qword [fs:0x28]
0000000000004b04         jne        loc_4b10

0000000000004b06         add        rsp, 0xb8
0000000000004b0d         pop        rbx
0000000000004b0e         pop        rbp
0000000000004b0f         ret
                        ; endp

                     loc_4b10:
0000000000004b10         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_4b15:
0000000000004b15         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000004b1a         jmp        loc_4af1

                     loc_4b1c:
0000000000004b1c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000004b1f         add        rbx, 0x8
0000000000004b23         jmp        loc_4ad6
0000000000004b25         align      16                                          ; End of unwind block (FDE at 0x99b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000004b30         push       rbx                                         ; Begin of unwind block (FDE at 0x99dc)
0000000000004b31         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000004b38         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b3d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b3f         call       j_dcgettext                                 ; dcgettext
0000000000004b44         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000004b4b         mov        rsi, rax
0000000000004b4e         mov        edi, 0x1
0000000000004b53         xor        eax, eax
0000000000004b55         call       j___printf_chk                              ; __printf_chk
0000000000004b5a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000004b61         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b66         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b68         call       j_dcgettext                                 ; dcgettext
0000000000004b6d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004b74         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x7a3e
0000000000004b7b         mov        rsi, rax
0000000000004b7e         mov        edi, 0x1
0000000000004b83         xor        eax, eax
0000000000004b85         call       j___printf_chk                              ; __printf_chk
0000000000004b8a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004b91         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000004b98         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b9a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b9f         call       j_dcgettext                                 ; dcgettext
0000000000004ba4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004ba7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004baa         pop        rbx
0000000000004bab         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000004bb0         push       rbx                                         ; End of unwind block (FDE at 0x99dc), Begin of unwind block (FDE at 0x99fc), CODE XREF=quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000004bb1         mov        rbx, rdi
0000000000004bb4         call       j_malloc                                    ; malloc
0000000000004bb9         test       rax, rax
0000000000004bbc         jne        loc_4bc3

0000000000004bbe         test       rbx, rbx
0000000000004bc1         jne        loc_4bc5

                     loc_4bc3:
0000000000004bc3         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000004bc4         ret
                        ; endp

                     loc_4bc5:
0000000000004bc5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4bca:
0000000000004bca         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x99fc)
                     xnmalloc:
0000000000004bd0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x9a18)
0000000000004bd3         mul        rsi
0000000000004bd6         mov        rdi, rax
0000000000004bd9         seto       al
0000000000004bdc         test       rdi, rdi
0000000000004bdf         js         loc_4beb

0000000000004be1         movzx      eax, al
0000000000004be4         test       rax, rax
0000000000004be7         jne        loc_4beb

0000000000004be9         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_4beb:
0000000000004beb         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
0000000000004bef         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4bf4:
0000000000004bf4         nop                                                    ; End of unwind block (FDE at 0x9a18)
0000000000004bf6         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000004c00         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x9a2c)
                        ; endp
0000000000004c02         align      16                                          ; End of unwind block (FDE at 0x9a2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000004c10         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x9a40), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000004c13         push       rbx
0000000000004c14         mov        rbx, rsi
0000000000004c17         jne        loc_4c1e

0000000000004c19         test       rdi, rdi
0000000000004c1c         jne        loc_4c38

                     loc_4c1e:
0000000000004c1e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000004c21         call       j_realloc                                   ; realloc
0000000000004c26         test       rax, rax
0000000000004c29         jne        loc_4c30

0000000000004c2b         test       rbx, rbx
0000000000004c2e         jne        loc_4c41

                     loc_4c30:
0000000000004c30         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000004c31         ret
                        ; endp
0000000000004c32         align      8

                     loc_4c38:
0000000000004c38         call       j_free                                      ; free, CODE XREF=xrealloc+12
0000000000004c3d         xor        eax, eax
0000000000004c3f         pop        rbx
0000000000004c40         ret
                        ; endp

                     loc_4c41:
0000000000004c41         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4c46:
0000000000004c46         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x9a40)
                     xnrealloc:
0000000000004c50         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x9a64)
0000000000004c53         mul        rdx
0000000000004c56         mov        rsi, rax
0000000000004c59         seto       al
0000000000004c5c         test       rsi, rsi
0000000000004c5f         js         loc_4c6b

0000000000004c61         movzx      eax, al
0000000000004c64         test       rax, rax
0000000000004c67         jne        loc_4c6b

0000000000004c69         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_4c6b:
0000000000004c6b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
0000000000004c6f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4c74:
0000000000004c74         nop                                                    ; End of unwind block (FDE at 0x9a64)
0000000000004c76         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000004c80         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9a78)
0000000000004c83         mov        r9, rdx
0000000000004c86         mov        rcx, qword [rsi]
0000000000004c89         je         loc_4cc0

0000000000004c8b         xor        edx, edx
0000000000004c8d         movabs     rax, 0x5555555555555554
0000000000004c97         div        r9
0000000000004c9a         cmp        rax, rcx
0000000000004c9d         jbe        loc_4cdb

0000000000004c9f         mov        rax, rcx
0000000000004ca2         shr        rax, 0x1
0000000000004ca5         lea        rcx, qword [rax+rcx+1]

                     loc_4caa:
0000000000004caa         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
0000000000004cad         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000004cb1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000004cb4         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000004cb9         align      64

                     loc_4cc0:
0000000000004cc0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000004cc3         je         loc_4ce8

                     loc_4cc5:
0000000000004cc5         mov        rax, rcx                                    ; CODE XREF=sub_4ce4+28
0000000000004cc8         mul        r9
0000000000004ccb         seto       dl
0000000000004cce         test       rax, rax
0000000000004cd1         movzx      edx, dl
0000000000004cd4         js         loc_4cdb

0000000000004cd6         test       rdx, rdx
0000000000004cd9         je         loc_4caa

                     loc_4cdb:
0000000000004cdb         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
0000000000004cdf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4ce4:
0000000000004ce4         nop        dword [rax]
                        ; endp

                     loc_4ce8:
0000000000004ce8         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
0000000000004cea         mov        eax, 0x80
0000000000004cef         xor        r8d, r8d
0000000000004cf2         div        r9
0000000000004cf5         test       rax, rax
0000000000004cf8         sete       r8b
0000000000004cfc         lea        rcx, qword [r8+rax]
0000000000004d00         jmp        loc_4cc5
0000000000004d02         align      16                                          ; End of unwind block (FDE at 0x9a78)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000004d10         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9a90)
0000000000004d13         mov        rax, qword [rsi]
0000000000004d16         je         loc_4d40

0000000000004d18         movabs     rdx, 0x5555555555555553
0000000000004d22         cmp        rax, rdx
0000000000004d25         ja         loc_4d51

0000000000004d27         mov        rdx, rax
0000000000004d2a         shr        rdx, 0x1
0000000000004d2d         lea        rax, qword [rdx+rax+1]

                     loc_4d32:
0000000000004d32         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000004d35         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000004d38         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000004d3d         align      64

                     loc_4d40:
0000000000004d40         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000004d43         mov        edx, 0x80
0000000000004d48         cmove      rax, rdx
0000000000004d4c         test       rax, rax
0000000000004d4f         jns        loc_4d32

                     loc_4d51:
0000000000004d51         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000004d55         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4d5a:
0000000000004d5a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x9a90)
                     xzalloc:
0000000000004d60         push       rbx                                         ; Begin of unwind block (FDE at 0x9aa8)
0000000000004d61         mov        rbx, rdi
0000000000004d64         call       xmalloc                                     ; xmalloc
0000000000004d69         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000004d6c         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004d6e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000004d71         pop        rbx
0000000000004d72         jmp        j_memset                                    ; memset
                        ; endp
0000000000004d77         align      128                                         ; End of unwind block (FDE at 0x9aa8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000004d80         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x9ac4)
0000000000004d83         sub        rsp, 0x8
0000000000004d87         mul        rsi
0000000000004d8a         seto       dl
0000000000004d8d         test       rax, rax
0000000000004d90         js         loc_4da9

0000000000004d92         movzx      edx, dl
0000000000004d95         test       rdx, rdx
0000000000004d98         jne        loc_4da9

0000000000004d9a         call       j_calloc                                    ; calloc
0000000000004d9f         test       rax, rax
0000000000004da2         je         loc_4da9

0000000000004da4         add        rsp, 0x8
0000000000004da8         ret
                        ; endp

                     loc_4da9:
0000000000004da9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4dae:
0000000000004dae         nop                                                    ; End of unwind block (FDE at 0x9ac4)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
0000000000004db0         push       rbp                                         ; Begin of unwind block (FDE at 0x9ae0), CODE XREF=clone_quoting_options+40
0000000000004db1         push       rbx
0000000000004db2         mov        rbp, rdi
0000000000004db5         mov        rdi, rsi
0000000000004db8         mov        rbx, rsi
0000000000004dbb         sub        rsp, 0x8
0000000000004dbf         call       xmalloc                                     ; xmalloc
0000000000004dc4         add        rsp, 0x8
0000000000004dc8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000004dcb         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000004dce         pop        rbx
0000000000004dcf         pop        rbp
0000000000004dd0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000004dd3         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000004dd8         align      32                                          ; End of unwind block (FDE at 0x9ae0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000004de0         push       rbx                                         ; Begin of unwind block (FDE at 0x9b08), CODE XREF=main+931, main+1296, main+1343
0000000000004de1         mov        rbx, rdi
0000000000004de4         call       j_strlen                                    ; strlen
0000000000004de9         mov        rdi, rbx
0000000000004dec         lea        rsi, qword [rax+1]
0000000000004df0         pop        rbx
0000000000004df1         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000004df3         align      512                                         ; End of unwind block (FDE at 0x9b08)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000004e00         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x9b24), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=main+1788, dir_name+19, file_name_concat+19, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000004e07         sub        rsp, 0x8
0000000000004e0b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004e10         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004e12         call       j_dcgettext                                 ; dcgettext
0000000000004e17         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000004e1d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8266
0000000000004e24         mov        rcx, rax
0000000000004e27         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004e29         xor        eax, eax
0000000000004e2b         call       j_error                                     ; error
0000000000004e30         call       j_abort                                     ; abort
                        ; endp
0000000000004e35         align      64                                          ; End of unwind block (FDE at 0x9b24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xreadlink:
0000000000004e40         push       rbx                                         ; Begin of unwind block (FDE at 0x9b3c), CODE XREF=main+1219
0000000000004e41         call       areadlink                                   ; areadlink
0000000000004e46         test       rax, rax
0000000000004e49         mov        rbx, rax
0000000000004e4c         je         loc_4e58

                     loc_4e4e:
0000000000004e4e         mov        rax, rbx                                    ; CODE XREF=xreadlink+32
0000000000004e51         pop        rbx
0000000000004e52         ret
                        ; endp
0000000000004e53         align      8

                     loc_4e58:
0000000000004e58         call       j___errno_location                          ; __errno_location, CODE XREF=xreadlink+12
0000000000004e5d         cmp        dword [rax], 0xc
0000000000004e60         jne        loc_4e4e

0000000000004e62         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     sub_4e67:
0000000000004e67         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x9b3c)
                     xstrtoumax:
0000000000004e70         push       r15                                         ; Begin of unwind block (FDE at 0x9b5c), CODE XREF=main+427
0000000000004e72         push       r14
0000000000004e74         push       r13
0000000000004e76         push       r12
0000000000004e78         push       rbp
0000000000004e79         push       rbx
0000000000004e7a         sub        rsp, 0x28
0000000000004e7e         mov        rax, qword [fs:0x28]
0000000000004e87         mov        qword [rsp+0x58+var_40], rax
0000000000004e8c         xor        eax, eax
0000000000004e8e         cmp        edx, 0x24
0000000000004e91         ja         loc_51f5

0000000000004e97         lea        rax, qword [rsp+0x58+var_48]
0000000000004e9c         mov        r15, rsi
0000000000004e9f         test       rsi, rsi
0000000000004ea2         mov        rbp, rdi
0000000000004ea5         mov        dword [rsp+0x58+var_50], edx
0000000000004ea9         mov        r14, rcx
0000000000004eac         mov        r13, r8
0000000000004eaf         cmove      r15, rax
0000000000004eb3         call       j___errno_location                          ; __errno_location
0000000000004eb8         mov        dword [rax], 0x0
0000000000004ebe         mov        r12, rax
0000000000004ec1         movzx      ebx, byte [rbp]
0000000000004ec5         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000004eca         mov        edx, dword [rsp+0x58+var_50]
0000000000004ece         mov        rsi, qword [rax]
0000000000004ed1         mov        rax, rbp
0000000000004ed4         jmp        loc_4ee7
0000000000004ed6         align      32

                     loc_4ee0:
0000000000004ee0         add        rax, 0x1                                    ; CODE XREF=xstrtoumax+127
0000000000004ee4         movzx      ebx, byte [rax]

                     loc_4ee7:
0000000000004ee7         movzx      ecx, bl                                     ; CODE XREF=xstrtoumax+100
0000000000004eea         test       byte [rsi+rcx*2+1], 0x20
0000000000004eef         jne        loc_4ee0

0000000000004ef1         cmp        bl, 0x2d
0000000000004ef4         je         loc_4f48

0000000000004ef6         xor        ecx, ecx
0000000000004ef8         mov        rsi, r15
0000000000004efb         mov        rdi, rbp
0000000000004efe         call       j___strtoul_internal                        ; __strtoul_internal
0000000000004f03         mov        rcx, qword [r15]
0000000000004f06         mov        rbx, rax
0000000000004f09         cmp        rcx, rbp
0000000000004f0c         je         loc_4f38

0000000000004f0e         mov        eax, dword [r12]
0000000000004f12         test       eax, eax
0000000000004f14         je         loc_4f78

0000000000004f16         cmp        eax, 0x22
0000000000004f19         mov        ebp, 0x1
0000000000004f1e         jne        loc_4f48

                     loc_4f20:
0000000000004f20         test       r13, r13                                    ; CODE XREF=xstrtoumax+266
0000000000004f23         je         loc_4f2e

0000000000004f25         movzx      r12d, byte [rcx]
0000000000004f29         test       r12b, r12b
0000000000004f2c         jne        loc_4fa7

                     loc_4f2e:
0000000000004f2e         mov        qword [r14], rbx                            ; CODE XREF=xstrtoumax+179
0000000000004f31         jmp        loc_4f4d
0000000000004f33         align      8

                     loc_4f38:
0000000000004f38         test       r13, r13                                    ; CODE XREF=xstrtoumax+156
0000000000004f3b         mov        qword [rsp+0x58+var_50], rcx
0000000000004f40         jne        loc_4f80

0000000000004f42         nop        word [rax+rax]

                     loc_4f48:
0000000000004f48         mov        ebp, 0x4                                    ; CODE XREF=xstrtoumax+132, xstrtoumax+174, xstrtoumax+280, xstrtoumax+309

                     loc_4f4d:
0000000000004f4d         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoumax+193, xstrtoumax+535, xstrtoumax+546
0000000000004f52         xor        rdi, qword [fs:0x28]
0000000000004f5b         mov        eax, ebp
0000000000004f5d         jne        loc_51f0

0000000000004f63         add        rsp, 0x28
0000000000004f67         pop        rbx
0000000000004f68         pop        rbp
0000000000004f69         pop        r12
0000000000004f6b         pop        r13
0000000000004f6d         pop        r14
0000000000004f6f         pop        r15
0000000000004f71         ret
                        ; endp
0000000000004f72         align      8

                     loc_4f78:
0000000000004f78         xor        ebp, ebp                                    ; CODE XREF=xstrtoumax+164
0000000000004f7a         jmp        loc_4f20
0000000000004f7c         align      128

                     loc_4f80:
0000000000004f80         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoumax+208
0000000000004f85         test       r12b, r12b
0000000000004f88         je         loc_4f48

0000000000004f8a         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
0000000000004f8e         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000004f91         xor        ebp, ebp
0000000000004f93         call       j_strchr                                    ; strchr
0000000000004f98         test       rax, rax
0000000000004f9b         mov        ebx, 0x1
0000000000004fa0         mov        rcx, qword [rsp+0x58+var_50]
0000000000004fa5         je         loc_4f48

                     loc_4fa7:
0000000000004fa7         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoumax+188
0000000000004fab         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000004fae         mov        qword [rsp+0x58+var_50], rcx
0000000000004fb3         call       j_strchr                                    ; strchr
0000000000004fb8         test       rax, rax
0000000000004fbb         mov        rcx, qword [rsp+0x58+var_50]
0000000000004fc0         je         loc_508c

0000000000004fc6         lea        eax, dword [r12-0x45]
0000000000004fcb         cmp        al, 0x2f
0000000000004fcd         ja         loc_5020

0000000000004fcf         movabs     rdx, 0x814400308945
0000000000004fd9         bt         rdx, rax
0000000000004fdd         jae        loc_5020

0000000000004fdf         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
0000000000004fe4         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000004fe7         mov        qword [rsp+0x58+var_50], rcx
0000000000004fec         call       j_strchr                                    ; strchr
0000000000004ff1         test       rax, rax
0000000000004ff4         mov        rcx, qword [rsp+0x58+var_50]
0000000000004ff9         je         loc_5020

0000000000004ffb         movzx      eax, byte [rcx+1]
0000000000004fff         cmp        al, 0x44
0000000000005001         je         loc_500f

0000000000005003         cmp        al, 0x69
0000000000005005         je         loc_51d8

000000000000500b         cmp        al, 0x42
000000000000500d         jne        loc_5020

                     loc_500f:
000000000000500f         mov        edi, 0x2                                    ; CODE XREF=xstrtoumax+401
0000000000005014         mov        esi, 0x3e8
0000000000005019         jmp        loc_502a
000000000000501b         align      32

                     loc_5020:
0000000000005020         mov        edi, 0x1                                    ; CODE XREF=xstrtoumax+349, xstrtoumax+365, xstrtoumax+393, xstrtoumax+413
0000000000005025         mov        esi, 0x400

                     loc_502a:
000000000000502a         sub        r12d, 0x42                                  ; CODE XREF=xstrtoumax+425, xstrtoumax+891
000000000000502e         cmp        r12b, 0x35
0000000000005032         ja         loc_508c

0000000000005034         lea        rdx, qword [switch_table_8b48]              ; switch_table_8b48
000000000000503b         movzx      r12d, r12b
000000000000503f         movsxd     rax, dword [rdx+r12*4]
0000000000005043         add        rax, rdx
0000000000005046         jmp        rax                                         ; switch statement using table at 0x8b48, with 54 cases, 0x5048,0x5070,0x508c,0x5097,0x50ad,0x50c4,0x50ea,0x510f,0x512f,0x5150,0x5173,0x5196,0x51ac

                     loc_5048:
0000000000005048         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoumax+470
000000000000504b         mul        rsi
000000000000504e         jo         loc_5241

0000000000005054         xor        r8d, r8d

                     loc_5057:
0000000000005057         mul        rsi                                         ; CODE XREF=xstrtoumax+846, xstrtoumax+862, xstrtoumax+987
000000000000505a         jo         loc_5232

0000000000005060         mov        rbx, rax

                     loc_5063:
0000000000005063         or         ebp, r8d                                    ; CODE XREF=xstrtoumax+972
0000000000005066         nop        word [cs:rax+rax]

                     loc_5070:
0000000000005070         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoumax+470, xstrtoumax+571, xstrtoumax+594, xstrtoumax+632, xstrtoumax+712, xstrtoumax+727, xstrtoumax+823
0000000000005073         mov        eax, ebp
0000000000005075         add        rcx, rdi
0000000000005078         or         eax, 0x2
000000000000507b         mov        qword [r15], rcx
000000000000507e         cmp        byte [rcx], 0x0
0000000000005081         mov        qword [r14], rbx
0000000000005084         cmovne     ebp, eax
0000000000005087         jmp        loc_4f4d

                     loc_508c:
000000000000508c         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoumax+336, xstrtoumax+450, xstrtoumax+470
000000000000508f         or         ebp, 0x2
0000000000005092         jmp        loc_4f4d

                     loc_5097:
0000000000005097         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoumax+470
000000000000509c         mov        rax, rdx
000000000000509f         mul        rbx
00000000000050a2         jo         loc_513e

00000000000050a8         add        rbx, rbx
00000000000050ab         jmp        loc_5070

                     loc_50ad:
00000000000050ad         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoumax+470
00000000000050b2         mov        rax, rdx
00000000000050b5         mul        rbx
00000000000050b8         jo         loc_513e

00000000000050be         shl        rbx, 0x9
00000000000050c2         jmp        loc_5070

                     loc_50c4:
00000000000050c4         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoumax+470
00000000000050ca         xor        r9d, r9d
00000000000050cd         nop        dword [rax]

                     loc_50d0:
00000000000050d0         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+627
00000000000050d3         mul        rsi
00000000000050d6         mov        rbx, rax
00000000000050d9         jo         loc_526e

                     loc_50df:
00000000000050df         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1032
00000000000050e3         jne        loc_50d0

                     loc_50e5:
00000000000050e5         or         ebp, r9d                                    ; CODE XREF=xstrtoumax+669, xstrtoumax+701, xstrtoumax+766, xstrtoumax+801
00000000000050e8         jmp        loc_5070

                     loc_50ea:
00000000000050ea         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoumax+470
00000000000050f0         xor        r9d, r9d
00000000000050f3         nop        dword [rax+rax]

                     loc_50f8:
00000000000050f8         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+667
00000000000050fb         mul        rsi
00000000000050fe         mov        rbx, rax
0000000000005101         jo         loc_5250

                     loc_5107:
0000000000005107         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1002
000000000000510b         jne        loc_50f8

000000000000510d         jmp        loc_50e5

                     loc_510f:
000000000000510f         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoumax+470
0000000000005115         xor        r9d, r9d

                     loc_5118:
0000000000005118         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+699
000000000000511b         mul        rsi
000000000000511e         mov        rbx, rax
0000000000005121         jo         loc_5223

                     loc_5127:
0000000000005127         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+957
000000000000512b         jne        loc_5118

000000000000512d         jmp        loc_50e5

                     loc_512f:
000000000000512f         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoumax+470
0000000000005132         mul        rsi
0000000000005135         mov        rbx, rax
0000000000005138         jno        loc_5070

                     loc_513e:
000000000000513e         mov        ebp, 0x1                                    ; CODE XREF=xstrtoumax+562, xstrtoumax+584, xstrtoumax+817
0000000000005143         or         rbx, 0xffffffffffffffff
0000000000005147         jmp        loc_5070
000000000000514c         align      16

                     loc_5150:
0000000000005150         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoumax+470
0000000000005156         xor        r9d, r9d

                     loc_5159:
0000000000005159         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+764
000000000000515c         mul        rsi
000000000000515f         mov        rbx, rax
0000000000005162         jo         loc_525f

                     loc_5168:
0000000000005168         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1017
000000000000516c         jne        loc_5159

000000000000516e         jmp        loc_50e5

                     loc_5173:
0000000000005173         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoumax+470
0000000000005179         xor        r9d, r9d

                     loc_517c:
000000000000517c         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+799
000000000000517f         mul        rsi
0000000000005182         mov        rbx, rax
0000000000005185         jo         loc_5214

                     loc_518b:
000000000000518b         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+942
000000000000518f         jne        loc_517c

0000000000005191         jmp        loc_50e5

                     loc_5196:
0000000000005196         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoumax+470
000000000000519b         mov        rax, rdx
000000000000519e         mul        rbx
00000000000051a1         jo         loc_513e

00000000000051a3         shl        rbx, 0xa
00000000000051a7         jmp        loc_5070

                     loc_51ac:
00000000000051ac         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoumax+470
00000000000051af         mul        rsi
00000000000051b2         jo         loc_527d

00000000000051b8         xor        r8d, r8d

                     loc_51bb:
00000000000051bb         mul        rsi                                         ; CODE XREF=xstrtoumax+1047
00000000000051be         jno        loc_5057

00000000000051c4         mov        r8d, 0x1
00000000000051ca         or         rax, 0xffffffffffffffff
00000000000051ce         jmp        loc_5057
00000000000051d3         align      8

                     loc_51d8:
00000000000051d8         xor        edi, edi                                    ; CODE XREF=xstrtoumax+405
00000000000051da         cmp        byte [rcx+2], 0x42
00000000000051de         mov        esi, 0x400
00000000000051e3         sete       dil
00000000000051e7         lea        edi, dword [rdi+rdi+1]
00000000000051eb         jmp        loc_502a

                     loc_51f0:
00000000000051f0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoumax+237
                        ; endp

                     loc_51f5:
00000000000051f5         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoumax", CODE XREF=xstrtoumax+33
00000000000051fc         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
0000000000005203         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
000000000000520a         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
000000000000520f         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_5214:
0000000000005214         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+789
000000000000521a         or         rbx, 0xffffffffffffffff
000000000000521e         jmp        loc_518b

                     loc_5223:
0000000000005223         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+689
0000000000005229         or         rbx, 0xffffffffffffffff
000000000000522d         jmp        loc_5127

                     loc_5232:
0000000000005232         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+490
0000000000005238         or         rbx, 0xffffffffffffffff
000000000000523c         jmp        loc_5063

                     loc_5241:
0000000000005241         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoumax+478
0000000000005245         mov        r8d, 0x1
000000000000524b         jmp        loc_5057

                     loc_5250:
0000000000005250         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+657
0000000000005256         or         rbx, 0xffffffffffffffff
000000000000525a         jmp        loc_5107

                     loc_525f:
000000000000525f         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+754
0000000000005265         or         rbx, 0xffffffffffffffff
0000000000005269         jmp        loc_5168

                     loc_526e:
000000000000526e         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+617
0000000000005274         or         rbx, 0xffffffffffffffff
0000000000005278         jmp        loc_50df

                     loc_527d:
000000000000527d         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+834
0000000000005283         or         rax, 0xffffffffffffffff
0000000000005287         jmp        loc_51bb
000000000000528c         align      16                                          ; End of unwind block (FDE at 0x9b5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_18: -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72
        ;    var_58: -88
        ;    var_68: -104
        ;    var_78: -120
        ;    var_88: -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B8: int8_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D4: int32_t, -212
        ;    var_D8: int32_t, -216


                     rpl_asprintf:
0000000000005290         sub        rsp, 0xd8                                   ; Begin of unwind block (FDE at 0x9bac), CODE XREF=main+651, main+857, main+980, main+1202, main+1279
0000000000005297         test       al, al
0000000000005299         mov        qword [rsp+0xd8+var_A8], rdx
000000000000529e         mov        qword [rsp+0xd8+var_A0], rcx
00000000000052a3         mov        qword [rsp+0xd8+var_98], r8
00000000000052a8         mov        qword [rsp+0xd8+var_90], r9
00000000000052ad         je         loc_52e6

00000000000052af         movaps     xmmword [rsp+0xd8+var_88], xmm0
00000000000052b4         movaps     xmmword [rsp+0xd8+var_78], xmm1
00000000000052b9         movaps     xmmword [rsp+0xd8+var_68], xmm2
00000000000052be         movaps     xmmword [rsp+0xd8+var_58], xmm3
00000000000052c6         movaps     xmmword [rsp+0xd8+var_48], xmm4
00000000000052ce         movaps     xmmword [rsp+0xd8+var_38], xmm5
00000000000052d6         movaps     xmmword [rsp+0xd8+var_28], xmm6
00000000000052de         movaps     xmmword [rsp+0xd8+var_18], xmm7

                     loc_52e6:
00000000000052e6         mov        rax, qword [fs:0x28]                        ; CODE XREF=rpl_asprintf+29
00000000000052ef         mov        qword [rsp+0xd8+var_C0], rax
00000000000052f4         xor        eax, eax
00000000000052f6         lea        rax, qword [rsp+0xd8+arg_0]
00000000000052fe         mov        rdx, rsp
0000000000005301         mov        qword [rsp+0xd8+var_D0], rax
0000000000005306         lea        rax, qword [rsp+0xd8+var_B8]
000000000000530b         mov        dword [rsp+0xd8+var_D8], 0x10
0000000000005312         mov        dword [rsp+0xd8+var_D4], 0x30
000000000000531a         mov        qword [rsp+0xd8+var_C8], rax
000000000000531f         call       rpl_vasprintf                               ; rpl_vasprintf
0000000000005324         mov        rcx, qword [rsp+0xd8+var_C0]
0000000000005329         xor        rcx, qword [fs:0x28]
0000000000005332         jne        loc_533c

0000000000005334         add        rsp, 0xd8
000000000000533b         ret
                        ; endp

                     loc_533c:
000000000000533c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_asprintf+162
                        ; endp
0000000000005341         align      16                                          ; End of unwind block (FDE at 0x9bac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000005350         push       r13                                         ; Begin of unwind block (FDE at 0x9bcc), CODE XREF=sub_3130+534
0000000000005352         push       r12
0000000000005354         mov        r13, rsi
0000000000005357         push       rbp
0000000000005358         push       rbx
0000000000005359         mov        rbx, rdi
000000000000535c         mov        r12, rdx
000000000000535f         sub        rsp, 0x18
0000000000005363         mov        rax, qword [fs:0x28]
000000000000536c         mov        qword [rsp+0x38+var_30], rax
0000000000005371         xor        eax, eax
0000000000005373         lea        rax, qword [rsp+0x38+var_34]
0000000000005378         test       rdi, rdi
000000000000537b         cmove      rbx, rax
000000000000537f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000005382         call       j_mbrtowc                                   ; mbrtowc
0000000000005387         cmp        rax, 0xfffffffffffffffd
000000000000538b         mov        rbp, rax
000000000000538e         jbe        loc_53b0

0000000000005390         test       r12, r12
0000000000005393         je         loc_53b0

0000000000005395         xor        edi, edi
0000000000005397         call       hard_locale                                 ; hard_locale
000000000000539c         test       al, al
000000000000539e         jne        loc_53b0

00000000000053a0         movzx      eax, byte [r13]
00000000000053a5         mov        ebp, 0x1
00000000000053aa         mov        dword [rbx], eax
00000000000053ac         nop        dword [rax]

                     loc_53b0:
00000000000053b0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
00000000000053b5         xor        rdx, qword [fs:0x28]
00000000000053be         mov        rax, rbp
00000000000053c1         jne        loc_53ce

00000000000053c3         add        rsp, 0x18
00000000000053c7         pop        rbx
00000000000053c8         pop        rbp
00000000000053c9         pop        r12
00000000000053cb         pop        r13
00000000000053cd         ret
                        ; endp

                     loc_53ce:
00000000000053ce         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
00000000000053d3         align      32                                          ; End of unwind block (FDE at 0x9bcc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24


                     rpl_vasprintf:
00000000000053e0         push       rbx                                         ; Begin of unwind block (FDE at 0x9c0c), CODE XREF=rpl_asprintf+143
00000000000053e1         mov        rax, rsi
00000000000053e4         mov        rbx, rdi
00000000000053e7         xor        edi, edi
00000000000053e9         sub        rsp, 0x10
00000000000053ed         mov        rcx, qword [fs:0x28]
00000000000053f6         mov        qword [rsp+0x18+var_10], rcx
00000000000053fb         xor        ecx, ecx
00000000000053fd         mov        rsi, rsp
0000000000005400         mov        rcx, rdx
0000000000005403         mov        rdx, rax
0000000000005406         call       vasnprintf                                  ; vasnprintf
000000000000540b         test       rax, rax
000000000000540e         je         loc_5452

0000000000005410         mov        rdx, qword [rsp+0x18+var_18]
0000000000005414         cmp        rdx, 0x7fffffff
000000000000541b         ja         loc_5438

000000000000541d         mov        qword [rbx], rax
0000000000005420         mov        eax, edx

                     loc_5422:
0000000000005422         mov        rbx, qword [rsp+0x18+var_10]                ; CODE XREF=rpl_vasprintf+112, rpl_vasprintf+119
0000000000005427         xor        rbx, qword [fs:0x28]
0000000000005430         jne        loc_5459

0000000000005432         add        rsp, 0x10
0000000000005436         pop        rbx
0000000000005437         ret
                        ; endp

                     loc_5438:
0000000000005438         mov        rdi, rax                                    ; argument "__ptr" for method j_free, CODE XREF=rpl_vasprintf+59
000000000000543b         call       j_free                                      ; free
0000000000005440         call       j___errno_location                          ; __errno_location
0000000000005445         mov        dword [rax], 0x4b
000000000000544b         mov        eax, 0xffffffff
0000000000005450         jmp        loc_5422

                     loc_5452:
0000000000005452         mov        eax, 0xffffffff                             ; CODE XREF=rpl_vasprintf+46
0000000000005457         jmp        loc_5422

                     loc_5459:
0000000000005459         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_vasprintf+80
                        ; endp
000000000000545e         align      32                                          ; End of unwind block (FDE at 0x9c0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     careadlinkatcwd:
0000000000005460         cmp        edi, 0xffffff9c                             ; Begin of unwind block (FDE at 0x9c34), DATA XREF=areadlink
0000000000005463         jne        loc_5476

0000000000005465         mov        rax, rsi
0000000000005468         mov        rsi, rdx                                    ; argument "__buf" for method j_readlink
000000000000546b         mov        rdx, rcx                                    ; argument "__len" for method j_readlink
000000000000546e         mov        rdi, rax                                    ; argument "__path" for method j_readlink
0000000000005471         jmp        j_readlink                                  ; readlink
                        ; endp

                     loc_5476:
0000000000005476         sub        rsp, 0x8                                    ; CODE XREF=careadlinkatcwd+3
000000000000547a         call       j_abort                                     ; abort
                        ; endp
000000000000547f         align      128                                         ; End of unwind block (FDE at 0x9c34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     areadlink:
0000000000005480         lea        r9, qword [careadlinkatcwd]                 ; Begin of unwind block (FDE at 0x9c48), careadlinkatcwd, CODE XREF=xreadlink+1
0000000000005487         mov        rsi, rdi
000000000000548a         xor        r8d, r8d
000000000000548d         xor        ecx, ecx
000000000000548f         xor        edx, edx
0000000000005491         mov        edi, 0xffffff9c
0000000000005496         jmp        careadlinkat                                ; careadlinkat
                        ; endp
000000000000549b         align      32                                          ; End of unwind block (FDE at 0x9c48)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_448: int8_t, -1096
        ;    var_450: int64_t, -1104
        ;    var_458: int64_t, -1112


                     careadlinkat:
00000000000054a0         push       r15                                         ; Begin of unwind block (FDE at 0x9c5c), CODE XREF=areadlink+22
00000000000054a2         push       r14
00000000000054a4         mov        r15, r9
00000000000054a7         push       r13
00000000000054a9         push       r12
00000000000054ab         mov        r13d, edi
00000000000054ae         push       rbp
00000000000054af         push       rbx
00000000000054b0         mov        rbp, r8
00000000000054b3         sub        rsp, 0x428
00000000000054ba         mov        rax, qword [fs:0x28]
00000000000054c3         mov        qword [rsp+0x458+var_40], rax
00000000000054cb         xor        eax, eax
00000000000054cd         lea        rax, qword [stdlib_allocator]               ; stdlib_allocator
00000000000054d4         test       r8, r8
00000000000054d7         mov        qword [rsp+0x458+var_458], rsi
00000000000054db         cmove      rbp, rax
00000000000054df         test       rcx, rcx
00000000000054e2         jne        loc_5600

00000000000054e8         lea        r12, qword [rsp+0x458+var_448]
00000000000054ed         mov        ebx, 0x400

                     loc_54f2:
00000000000054f2         mov        r14, r12                                    ; CODE XREF=careadlinkat+358
00000000000054f5         jmp        loc_5511
00000000000054f7         align      256

                     loc_5500:
0000000000005500         add        rbx, rbx                                    ; CODE XREF=careadlinkat+174
0000000000005503         mov        rdi, rbx
0000000000005506         call       qword [rbp]
0000000000005509         test       rax, rax
000000000000550c         mov        r14, rax
000000000000550f         je         loc_5571

                     loc_5511:
0000000000005511         mov        rcx, rbx                                    ; CODE XREF=careadlinkat+85, careadlinkat+207
0000000000005514         mov        rdx, r14
0000000000005517         mov        rsi, qword [rsp+0x458+var_458]
000000000000551b         mov        edi, r13d
000000000000551e         call       r15
0000000000005521         test       rax, rax
0000000000005524         mov        rcx, rax
0000000000005527         js         loc_55c0

                     loc_552d:
000000000000552d         cmp        rbx, rcx                                    ; CODE XREF=careadlinkat+308
0000000000005530         ja         loc_5610

0000000000005536         cmp        r12, r14
0000000000005539         je         loc_5541

000000000000553b         mov        rdi, r14
000000000000553e         call       qword [rbp+0x10]

                     loc_5541:
0000000000005541         movabs     rax, 0x4000000000000000                     ; CODE XREF=careadlinkat+153
000000000000554b         cmp        rbx, rax
000000000000554e         jbe        loc_5500

0000000000005550         test       rbx, rbx
0000000000005553         js         loc_5648

0000000000005559         movabs     rbx, 0x8000000000000000
0000000000005563         mov        rdi, rbx
0000000000005566         call       qword [rbp]
0000000000005569         test       rax, rax
000000000000556c         mov        r14, rax
000000000000556f         jne        loc_5511

                     loc_5571:
0000000000005571         mov        rax, qword [rbp+0x18]                       ; CODE XREF=careadlinkat+111, careadlinkat+502
0000000000005575         test       rax, rax
0000000000005578         je         loc_557f

000000000000557a         mov        rdi, rbx
000000000000557d         call       rax

                     loc_557f:
000000000000557f         call       j___errno_location                          ; __errno_location, CODE XREF=careadlinkat+216
0000000000005584         xor        r14d, r14d
0000000000005587         mov        dword [rax], 0xc

                     loc_558d:
000000000000558d         mov        rsi, qword [rsp+0x458+var_40]               ; CODE XREF=careadlinkat+350, careadlinkat+415, careadlinkat+438, careadlinkat+451, careadlinkat+460, careadlinkat+473, careadlinkat+494, careadlinkat+510
0000000000005595         xor        rsi, qword [fs:0x28]
000000000000559e         mov        rax, r14
00000000000055a1         jne        loc_56a3

00000000000055a7         add        rsp, 0x428
00000000000055ae         pop        rbx
00000000000055af         pop        rbp
00000000000055b0         pop        r12
00000000000055b2         pop        r13
00000000000055b4         pop        r14
00000000000055b6         pop        r15
00000000000055b8         ret
                        ; endp
00000000000055b9         align      64

                     loc_55c0:
00000000000055c0         mov        qword [rsp+0x458+var_450], rax              ; CODE XREF=careadlinkat+135
00000000000055c5         call       j___errno_location                          ; __errno_location
00000000000055ca         mov        edx, dword [rax]
00000000000055cc         mov        rcx, qword [rsp+0x458+var_450]
00000000000055d1         cmp        edx, 0x22
00000000000055d4         je         loc_552d

00000000000055da         cmp        r12, r14
00000000000055dd         mov        dword [rsp+0x458+var_450], edx
00000000000055e1         mov        qword [rsp+0x458+var_458], rax
00000000000055e5         je         loc_569b

00000000000055eb         mov        rdi, r14
00000000000055ee         xor        r14d, r14d
00000000000055f1         call       qword [rbp+0x10]
00000000000055f4         mov        rax, qword [rsp+0x458+var_458]
00000000000055f8         mov        edx, dword [rsp+0x458+var_450]
00000000000055fc         mov        dword [rax], edx
00000000000055fe         jmp        loc_558d

                     loc_5600:
0000000000005600         mov        r12, rdx                                    ; CODE XREF=careadlinkat+66
0000000000005603         mov        rbx, rcx
0000000000005606         jmp        loc_54f2
000000000000560b         align      16

                     loc_5610:
0000000000005610         lea        r15, qword [rsp+0x458+var_448]              ; CODE XREF=careadlinkat+144
0000000000005615         lea        r13, qword [rcx+1]
0000000000005619         mov        byte [r14+rcx], 0x0
000000000000561e         cmp        r14, r15
0000000000005621         jne        loc_5660

0000000000005623         mov        rdi, r13
0000000000005626         call       qword [rbp]
0000000000005629         test       rax, rax
000000000000562c         mov        r14, rax
000000000000562f         je         loc_5693

0000000000005631         mov        rdx, r13                                    ; argument "__n" for method j_memcpy
0000000000005634         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000005637         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
000000000000563a         call       j_memcpy                                    ; memcpy
000000000000563f         jmp        loc_558d
0000000000005644         align      8

                     loc_5648:
0000000000005648         call       j___errno_location                          ; __errno_location, CODE XREF=careadlinkat+179
000000000000564d         xor        r14d, r14d
0000000000005650         mov        dword [rax], 0x24
0000000000005656         jmp        loc_558d
000000000000565b         align      32

                     loc_5660:
0000000000005660         cmp        rbx, r13                                    ; CODE XREF=careadlinkat+385
0000000000005663         jbe        loc_558d

0000000000005669         cmp        r12, r14
000000000000566c         je         loc_558d

0000000000005672         mov        rax, qword [rbp+8]
0000000000005676         test       rax, rax
0000000000005679         je         loc_558d

000000000000567f         mov        rdi, r14
0000000000005682         mov        rsi, r13
0000000000005685         call       rax
0000000000005687         test       rax, rax
000000000000568a         cmovne     r14, rax
000000000000568e         jmp        loc_558d

                     loc_5693:
0000000000005693         mov        rbx, r13                                    ; CODE XREF=careadlinkat+399
0000000000005696         jmp        loc_5571

                     loc_569b:
000000000000569b         xor        r14d, r14d                                  ; CODE XREF=careadlinkat+325
000000000000569e         jmp        loc_558d

                     loc_56a3:
00000000000056a3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=careadlinkat+257
                        ; endp
00000000000056a8         align      16                                          ; End of unwind block (FDE at 0x9c5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
00000000000056b0         push       r12                                         ; Begin of unwind block (FDE at 0x9cac), CODE XREF=close_stdout+13, close_stdout+51
00000000000056b2         push       rbp
00000000000056b3         mov        rbp, rdi
00000000000056b6         push       rbx
00000000000056b7         call       j___fpending                                ; __fpending
00000000000056bc         mov        ebx, dword [rbp]
00000000000056bf         mov        rdi, rbp
00000000000056c2         mov        r12, rax
00000000000056c5         call       rpl_fclose                                  ; rpl_fclose
00000000000056ca         and        ebx, 0x20
00000000000056cd         test       ebx, ebx
00000000000056cf         jne        loc_56e8

00000000000056d1         test       eax, eax
00000000000056d3         je         loc_56df

00000000000056d5         test       r12, r12
00000000000056d8         mov        eax, 0xffffffff
00000000000056dd         je         loc_5718

                     loc_56df:
00000000000056df         pop        rbx                                         ; CODE XREF=close_stream+35
00000000000056e0         pop        rbp
00000000000056e1         pop        r12
00000000000056e3         ret
                        ; endp
00000000000056e4         align      8

                     loc_56e8:
00000000000056e8         test       eax, eax                                    ; CODE XREF=close_stream+31
00000000000056ea         jne        loc_5708

00000000000056ec         call       j___errno_location                          ; __errno_location
00000000000056f1         mov        dword [rax], 0x0
00000000000056f7         mov        eax, 0xffffffff
00000000000056fc         pop        rbx
00000000000056fd         pop        rbp
00000000000056fe         pop        r12
0000000000005700         ret
                        ; endp
0000000000005701         align      8

                     loc_5708:
0000000000005708         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000005709         mov        eax, 0xffffffff
000000000000570e         pop        rbp
000000000000570f         pop        r12
0000000000005711         ret
                        ; endp
0000000000005712         align      8

                     loc_5718:
0000000000005718         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000571d         cmp        dword [rax], 0x9
0000000000005720         pop        rbx
0000000000005721         pop        rbp
0000000000005722         pop        r12
0000000000005724         setne      al
0000000000005727         movzx      eax, al
000000000000572a         neg        eax
000000000000572c         ret
                        ; endp
000000000000572d         align      16                                          ; End of unwind block (FDE at 0x9cac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000005730         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x9cfc), CODE XREF=rpl_mbrtowc+71
0000000000005734         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000005736         call       j_setlocale                                 ; setlocale
000000000000573b         mov        rdx, rax
000000000000573e         mov        eax, 0x1
0000000000005743         test       rdx, rdx
0000000000005746         je         loc_5765

0000000000005748         lea        rdi, qword [__PRETTY_FUNCTION__.4162+11]    ; 0x8c2b
000000000000574f         mov        ecx, 0x2
0000000000005754         mov        rsi, rdx
0000000000005757         rep  cmpsb byte [rsi], byte [rdi]
0000000000005759         seta       cl
000000000000575c         sbb        cl, 0x0
000000000000575f         xor        eax, eax
0000000000005761         test       cl, cl
0000000000005763         jne        loc_5770

                     loc_5765:
0000000000005765         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000005769         ret
                        ; endp
000000000000576a         align      16

                     loc_5770:
0000000000005770         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000005777         mov        ecx, 0x6
000000000000577c         mov        rsi, rdx
000000000000577f         rep  cmpsb byte [rsi], byte [rdi]
0000000000005781         seta       al
0000000000005784         sbb        al, 0x0
0000000000005786         test       al, al
0000000000005788         setne      al
000000000000578b         add        rsp, 0x8
000000000000578f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000005790         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x9cfc), Begin of unwind block (FDE at 0x9d1c), CODE XREF=gettext_quote.part.1+11
0000000000005794         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000005799         call       j_nl_langinfo                               ; nl_langinfo
000000000000579e         test       rax, rax
00000000000057a1         je         loc_57c0

00000000000057a3         cmp        byte [rax], 0x0
00000000000057a6         lea        rdx, qword [aAscii]                         ; "ASCII"
00000000000057ad         cmove      rax, rdx
00000000000057b1         add        rsp, 0x8
00000000000057b5         ret
                        ; endp
00000000000057b6         align      64

                     loc_57c0:
00000000000057c0         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
00000000000057c7         add        rsp, 0x8
00000000000057cb         ret
                        ; endp
00000000000057cc         align      16                                          ; End of unwind block (FDE at 0x9d1c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
00000000000057d0         push       r12                                         ; Begin of unwind block (FDE at 0x9d3c), CODE XREF=close_stream+21
00000000000057d2         push       rbp
00000000000057d3         push       rbx
00000000000057d4         mov        rbx, rdi
00000000000057d7         call       j_fileno                                    ; fileno
00000000000057dc         test       eax, eax
00000000000057de         mov        rdi, rbx
00000000000057e1         js         loc_5837

00000000000057e3         call       j___freading                                ; __freading
00000000000057e8         test       eax, eax
00000000000057ea         jne        loc_5818

                     loc_57ec:
00000000000057ec         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
00000000000057ef         call       rpl_fflush                                  ; rpl_fflush
00000000000057f4         test       eax, eax
00000000000057f6         je         loc_5834

00000000000057f8         call       j___errno_location                          ; __errno_location
00000000000057fd         mov        r12d, dword [rax]
0000000000005800         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000005803         mov        rbp, rax
0000000000005806         call       j_fclose                                    ; fclose
000000000000580b         test       r12d, r12d
000000000000580e         jne        loc_5840

                     loc_5810:
0000000000005810         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000005811         pop        rbp
0000000000005812         pop        r12
0000000000005814         ret
                        ; endp
0000000000005815         align      8

                     loc_5818:
0000000000005818         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000581b         call       j_fileno                                    ; fileno
0000000000005820         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000005822         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000005827         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000005829         call       j_lseek                                     ; lseek
000000000000582e         cmp        rax, 0xffffffffffffffff
0000000000005832         jne        loc_57ec

                     loc_5834:
0000000000005834         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_5837:
0000000000005837         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000005838         pop        rbp
0000000000005839         pop        r12
000000000000583b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_5840:
0000000000005840         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000005844         mov        eax, 0xffffffff
0000000000005849         jmp        loc_5810
000000000000584b         align      16                                          ; End of unwind block (FDE at 0x9d3c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000005850         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9d74), CODE XREF=rpl_fclose+31
0000000000005853         push       rbx
0000000000005854         mov        rbx, rdi
0000000000005857         je         loc_586a

0000000000005859         call       j___freading                                ; __freading
000000000000585e         test       eax, eax
0000000000005860         je         loc_586a

0000000000005862         test       dword [rbx], 0x100
0000000000005868         jne        loc_5878

                     loc_586a:
000000000000586a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000000586d         pop        rbx
000000000000586e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000005873         align      8

                     loc_5878:
0000000000005878         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000587b         mov        edx, 0x1
0000000000005880         xor        esi, esi
0000000000005882         call       rpl_fseeko                                  ; rpl_fseeko
0000000000005887         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000588a         pop        rbx
000000000000588b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000005890         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x9d74), Begin of unwind block (FDE at 0x9d94), CODE XREF=rpl_fflush+50
0000000000005894         cmp        qword [rdi+0x10], rax
0000000000005898         je         loc_58a0

                     j_j_fseeko:        // fseeko
000000000000589a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000589f         align      32

                     loc_58a0:
00000000000058a0         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
00000000000058a4         cmp        qword [rdi+0x28], rax
00000000000058a8         jne        j_j_fseeko                                  ; fseeko

00000000000058aa         cmp        qword [rdi+0x48], 0x0
00000000000058af         jne        j_j_fseeko                                  ; fseeko

00000000000058b1         push       r12
00000000000058b3         push       rbp
00000000000058b4         mov        r12d, edx
00000000000058b7         push       rbx
00000000000058b8         mov        rbp, rsi
00000000000058bb         mov        rbx, rdi
00000000000058be         call       j_fileno                                    ; fileno
00000000000058c3         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
00000000000058c6         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
00000000000058c9         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000058cb         call       j_lseek                                     ; lseek
00000000000058d0         cmp        rax, 0xffffffffffffffff
00000000000058d4         je         loc_58e2

00000000000058d6         and        dword [rbx], 0xffffffef
00000000000058d9         mov        qword [rbx+0x90], rax
00000000000058e0         xor        eax, eax

                     loc_58e2:
00000000000058e2         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
00000000000058e3         pop        rbp
00000000000058e4         pop        r12
00000000000058e6         ret
                        ; endp
00000000000058e7         align      16                                          ; End of unwind block (FDE at 0x9d94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_28: int8_t, -40
        ;    var_38: int64_t, -56
        ;    var_2A8: int64_t, -680
        ;    var_2B0: int64_t, -688
        ;    var_2B8: int64_t, -696
        ;    var_2C0: int64_t, -704
        ;    var_3A8: int64_t, -936
        ;    var_3B0: int8_t, -944
        ;    var_3B4: int32_t, -948
        ;    var_3B8: int32_t, -952
        ;    var_3BC: int32_t, -956
        ;    var_3C8: int64_t, -968
        ;    var_3D0: int64_t, -976
        ;    var_3D8: int64_t, -984
        ;    var_3E0: int64_t, -992
        ;    var_3E8: int64_t, -1000
        ;    var_3F0: int64_t, -1008
        ;    var_3F8: int64_t, -1016
        ;    var_400: int64_t, -1024
        ;    var_408: int64_t, -1032
        ;    var_410: int64_t, -1040
        ;    var_418: int64_t, -1048
        ;    var_420: int64_t, -1056
        ;    var_421: int8_t, -1057
        ;    var_424: int32_t, -1060
        ;    var_430: int64_t, -1072
        ;    var_440: -1088
        ;    var_450: -1104


                     vasnprintf:
00000000000058f0         push       rbp                                         ; Begin of unwind block (FDE at 0x9dc4), CODE XREF=rpl_vasprintf+38
00000000000058f1         mov        rbp, rsp
00000000000058f4         push       r15
00000000000058f6         push       r14
00000000000058f8         push       r13
00000000000058fa         push       r12
00000000000058fc         lea        r14, qword [rbp+var_3B0]
0000000000005903         push       rbx
0000000000005904         mov        rbx, rdx
0000000000005907         mov        r12, rcx
000000000000590a         mov        rdx, r14
000000000000590d         sub        rsp, 0x408
0000000000005914         mov        qword [rbp+var_418], rsi
000000000000591b         lea        rsi, qword [rbp+var_2C0]
0000000000005922         mov        qword [rbp+var_3E8], rdi
0000000000005929         mov        rdi, rbx
000000000000592c         mov        qword [rbp+var_410], r14
0000000000005933         mov        rax, qword [fs:0x28]
000000000000593c         mov        qword [rbp+var_38], rax
0000000000005940         xor        eax, eax
0000000000005942         mov        qword [rbp+var_408], rsi
0000000000005949         call       printf_parse                                ; printf_parse
000000000000594e         test       eax, eax
0000000000005950         js         loc_67b8

0000000000005956         mov        rsi, r14
0000000000005959         mov        rdi, r12
000000000000595c         call       printf_fetchargs                            ; printf_fetchargs
0000000000005961         test       eax, eax
0000000000005963         js         loc_6820

0000000000005969         mov        rax, qword [rbp+var_2B0]
0000000000005970         mov        rdx, 0xffffffffffffffff
0000000000005977         add        rax, 0x7
000000000000597b         cmp        rax, 0x6
000000000000597f         cmovbe     rax, rdx
0000000000005983         add        rax, qword [rbp+var_2A8]
000000000000598a         jb         loc_63b8

0000000000005990         mov        rdi, rax
0000000000005993         xor        r8d, r8d
0000000000005996         add        rdi, 0x6
000000000000599a         setb       r8b
000000000000599e         jb         loc_63b8

00000000000059a4         cmp        rdi, 0xf9f
00000000000059ab         jbe        loc_5af8

00000000000059b1         cmp        rdi, 0xffffffffffffffff
00000000000059b5         mov        qword [rbp+var_3C8], r8
00000000000059bc         je         loc_63b8

00000000000059c2         call       j_malloc                                    ; malloc
00000000000059c7         test       rax, rax
00000000000059ca         mov        qword [rbp+var_3D8], rax
00000000000059d1         je         loc_63b8

00000000000059d7         mov        r8, qword [rbp+var_3C8]
00000000000059de         mov        qword [rbp+var_420], rax

                     loc_59e5:
00000000000059e5         xor        r12d, r12d                                  ; CODE XREF=vasnprintf+558
00000000000059e8         cmp        qword [rbp+var_3E8], 0x0
00000000000059f0         je         loc_59fc

00000000000059f2         mov        rax, qword [rbp+var_418]
00000000000059f9         mov        r12, qword [rax]

                     loc_59fc:
00000000000059fc         mov        r13, qword [rbp+var_2B8]                    ; CODE XREF=vasnprintf+256
0000000000005a03         lea        rax, qword [rbp+var_3BC]
0000000000005a0a         mov        r15, qword [rbp+var_3E8]
0000000000005a11         mov        qword [rbp+var_400], 0x0
0000000000005a1c         mov        qword [rbp+var_3F0], rax
0000000000005a23         mov        rax, rbx
0000000000005a26         mov        rbx, r8
0000000000005a29         mov        rcx, qword [r13]
0000000000005a2d         mov        r8, rax
0000000000005a30         cmp        rcx, r8
0000000000005a33         je         loc_63a1

                     loc_5a39:
0000000000005a39         sub        rcx, r8                                     ; CODE XREF=vasnprintf+2731
0000000000005a3c         mov        rax, rbx
0000000000005a3f         add        rax, rcx
0000000000005a42         mov        r14, rax
0000000000005a45         jae        loc_5b28

0000000000005a4b         cmp        r12, 0xffffffffffffffff
0000000000005a4f         je         loc_6520

                     loc_5a55:
0000000000005a55         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+1250, vasnprintf+2694, loc_6460, vasnprintf+2950, vasnprintf+3039, loc_65b8, vasnprintf+3299, vasnprintf+3309, vasnprintf+3371, vasnprintf+3515, loc_67d0
0000000000005a5a         mov        qword [rbp+var_3C8], rax

                     loc_5a61:
0000000000005a61         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1600, vasnprintf+1618, vasnprintf+1668, vasnprintf+2558, vasnprintf+4338
0000000000005a68         je         loc_5a73

0000000000005a6a         test       r15, r15
0000000000005a6d         jne        loc_6550

                     loc_5a73:
0000000000005a73         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+376, vasnprintf+3176
0000000000005a7a         test       rax, rax
0000000000005a7d         je         loc_5a87

0000000000005a7f         mov        rdi, rax                                    ; argument "__ptr" for method j_free
0000000000005a82         call       j_free                                      ; free

                     loc_5a87:
0000000000005a87         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+397, vasnprintf+2772
0000000000005a8e         mov        rdi, qword [rbp+var_2B8]
0000000000005a95         add        rax, 0x20
0000000000005a99         cmp        rdi, rax
0000000000005a9c         je         loc_5aa3

0000000000005a9e         call       j_free                                      ; free

                     loc_5aa3:
0000000000005aa3         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+428
0000000000005aaa         mov        rdi, qword [rbp+var_3A8]
0000000000005ab1         add        rax, 0x10
0000000000005ab5         cmp        rdi, rax
0000000000005ab8         je         loc_5abf

0000000000005aba         call       j_free                                      ; free

                     loc_5abf:
0000000000005abf         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+456
0000000000005ac6         xor        r15d, r15d
0000000000005ac9         mov        dword [rax], 0xc

                     loc_5acf:
0000000000005acf         mov        rdi, qword [rbp+var_38]                     ; CODE XREF=vasnprintf+1978, vasnprintf+3774, vasnprintf+3787, vasnprintf+3958, vasnprintf+4183
0000000000005ad3         xor        rdi, qword [fs:0x28]
0000000000005adc         mov        rax, r15
0000000000005adf         jne        loc_69e7

0000000000005ae5         lea        rsp, qword [rbp+var_28]
0000000000005ae9         pop        rbx
0000000000005aea         pop        r12
0000000000005aec         pop        r13
0000000000005aee         pop        r14
0000000000005af0         pop        r15
0000000000005af2         pop        rbp
0000000000005af3         ret
                        ; endp
0000000000005af4         align      8

                     loc_5af8:
0000000000005af8         add        rax, 0x24                                   ; CODE XREF=vasnprintf+187
0000000000005afc         mov        qword [rbp+var_420], 0x0
0000000000005b07         and        rax, 0xfffffffffffffff0
0000000000005b0b         sub        rsp, rax
0000000000005b0e         lea        rax, qword [rsp+0x430+var_421]
0000000000005b13         and        rax, 0xfffffffffffffff0
0000000000005b17         mov        qword [rbp+var_3D8], rax
0000000000005b1e         jmp        loc_59e5
0000000000005b23         align      8

                     loc_5b28:
0000000000005b28         cmp        r12, rax                                    ; CODE XREF=vasnprintf+341
0000000000005b2b         jae        loc_5b94

0000000000005b2d         test       r12, r12
0000000000005b30         jne        loc_6460

0000000000005b36         cmp        rax, 0xc
0000000000005b3a         ja         loc_6472

0000000000005b40         mov        r12d, 0xc

                     loc_5b46:
0000000000005b46         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+2940
0000000000005b4d         sete       dl
0000000000005b50         test       r15, r15
0000000000005b53         je         loc_6498

                     loc_5b59:
0000000000005b59         test       dl, dl                                      ; CODE XREF=vasnprintf+2972
0000000000005b5b         jne        loc_6498

0000000000005b61         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000005b64         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000005b67         mov        qword [rbp+var_3D0], r8
0000000000005b6e         mov        qword [rbp+var_3C8], rcx
0000000000005b75         call       j_realloc                                   ; realloc
0000000000005b7a         test       rax, rax
0000000000005b7d         mov        rcx, qword [rbp+var_3C8]
0000000000005b84         mov        r8, qword [rbp+var_3D0]
0000000000005b8b         je         loc_653b

0000000000005b91         mov        r15, rax

                     loc_5b94:
0000000000005b94         lea        rdi, qword [r15+rbx]                        ; argument "__dest" for method j_memcpy, CODE XREF=vasnprintf+571, vasnprintf+3107, vasnprintf+3123, vasnprintf+3571
0000000000005b98         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
0000000000005b9b         mov        rsi, r8                                     ; argument "__src" for method j_memcpy
0000000000005b9e         call       j_memcpy                                    ; memcpy

                     loc_5ba3:
0000000000005ba3         mov        rax, qword [rbp+var_400]                    ; CODE XREF=vasnprintf+2740
0000000000005baa         cmp        qword [rbp+var_2C0], rax
0000000000005bb1         je         loc_686b

0000000000005bb7         movzx      edx, byte [r13+0x48]
0000000000005bbc         mov        rax, qword [r13+0x50]
0000000000005bc0         cmp        dl, 0x25
0000000000005bc3         je         loc_6358

0000000000005bc9         cmp        rax, 0xffffffffffffffff
0000000000005bcd         je         loc_6816

0000000000005bd3         mov        r8, qword [rbp+var_3A8]
0000000000005bda         shl        rax, 0x5
0000000000005bde         add        rax, r8
0000000000005be1         cmp        dl, 0x6e
0000000000005be4         mov        edi, dword [rax]
0000000000005be6         mov        dword [rbp+var_3D0], edi
0000000000005bec         je         loc_63d0

0000000000005bf2         mov        eax, dword [r13+0x10]
0000000000005bf6         mov        rdi, qword [rbp+var_3D8]
0000000000005bfd         test       al, 0x1
0000000000005bff         mov        byte [rdi], 0x25
0000000000005c02         lea        rbx, qword [rdi+1]
0000000000005c06         je         loc_5c17

0000000000005c08         mov        rdi, qword [rbp+var_3D8]
0000000000005c0f         lea        rbx, qword [rdi+2]
0000000000005c13         mov        byte [rdi+1], 0x27

                     loc_5c17:
0000000000005c17         test       al, 0x2                                     ; CODE XREF=vasnprintf+790
0000000000005c19         je         loc_5c22

0000000000005c1b         mov        byte [rbx], 0x2d
0000000000005c1e         add        rbx, 0x1

                     loc_5c22:
0000000000005c22         test       al, 0x4                                     ; CODE XREF=vasnprintf+809
0000000000005c24         je         loc_5c2d

0000000000005c26         mov        byte [rbx], 0x2b
0000000000005c29         add        rbx, 0x1

                     loc_5c2d:
0000000000005c2d         test       al, 0x8                                     ; CODE XREF=vasnprintf+820
0000000000005c2f         je         loc_5c38

0000000000005c31         mov        byte [rbx], 0x20
0000000000005c34         add        rbx, 0x1

                     loc_5c38:
0000000000005c38         test       al, 0x10                                    ; CODE XREF=vasnprintf+831
0000000000005c3a         je         loc_5c43

0000000000005c3c         mov        byte [rbx], 0x23
0000000000005c3f         add        rbx, 0x1

                     loc_5c43:
0000000000005c43         test       al, 0x40                                    ; CODE XREF=vasnprintf+842
0000000000005c45         je         loc_5c4e

0000000000005c47         mov        byte [rbx], 0x49
0000000000005c4a         add        rbx, 0x1

                     loc_5c4e:
0000000000005c4e         test       al, 0x20                                    ; CODE XREF=vasnprintf+853
0000000000005c50         je         loc_5c59

0000000000005c52         mov        byte [rbx], 0x30
0000000000005c55         add        rbx, 0x1

                     loc_5c59:
0000000000005c59         mov        rsi, qword [r13+0x18]                       ; CODE XREF=vasnprintf+864
0000000000005c5d         mov        rdx, qword [r13+0x20]
0000000000005c61         cmp        rsi, rdx
0000000000005c64         je         loc_5c96

0000000000005c66         mov        rcx, rdx
0000000000005c69         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
0000000000005c6c         mov        qword [rbp+var_3E0], r8
0000000000005c73         sub        rcx, rsi
0000000000005c76         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
0000000000005c79         mov        qword [rbp+var_3C8], rcx
0000000000005c80         call       j_memcpy                                    ; memcpy
0000000000005c85         mov        rcx, qword [rbp+var_3C8]
0000000000005c8c         mov        r8, qword [rbp+var_3E0]
0000000000005c93         add        rbx, rcx

                     loc_5c96:
0000000000005c96         mov        rsi, qword [r13+0x30]                       ; CODE XREF=vasnprintf+884
0000000000005c9a         mov        rdx, qword [r13+0x38]
0000000000005c9e         cmp        rsi, rdx
0000000000005ca1         je         loc_5cd3

0000000000005ca3         mov        rcx, rdx
0000000000005ca6         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
0000000000005ca9         mov        qword [rbp+var_3E0], r8
0000000000005cb0         sub        rcx, rsi
0000000000005cb3         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
0000000000005cb6         mov        qword [rbp+var_3C8], rcx
0000000000005cbd         call       j_memcpy                                    ; memcpy
0000000000005cc2         mov        rcx, qword [rbp+var_3C8]
0000000000005cc9         mov        r8, qword [rbp+var_3E0]
0000000000005cd0         add        rbx, rcx

                     loc_5cd3:
0000000000005cd3         mov        edi, dword [rbp+var_3D0]                    ; CODE XREF=vasnprintf+945
0000000000005cd9         cmp        edi, 0x10
0000000000005cdc         ja         loc_5d0b

0000000000005cde         mov        eax, 0x1
0000000000005ce3         mov        ecx, edi
0000000000005ce5         shl        rax, cl
0000000000005ce8         test       eax, 0x14180
0000000000005ced         jne        loc_5d04

0000000000005cef         test       ah, 0x10
0000000000005cf2         jne        loc_6650

0000000000005cf8         test       ah, 0x6
0000000000005cfb         je         loc_5d0b

0000000000005cfd         mov        byte [rbx], 0x6c
0000000000005d00         add        rbx, 0x1

                     loc_5d04:
0000000000005d04         mov        byte [rbx], 0x6c                            ; CODE XREF=vasnprintf+1021
0000000000005d07         add        rbx, 0x1

                     loc_5d0b:
0000000000005d0b         movzx      eax, byte [r13+0x48]                        ; CODE XREF=vasnprintf+1004, vasnprintf+1035, vasnprintf+3431
0000000000005d10         mov        byte [rbx+1], 0x0
0000000000005d14         mov        byte [rbx], al
0000000000005d16         mov        rax, qword [r13+0x28]
0000000000005d1a         cmp        rax, 0xffffffffffffffff
0000000000005d1e         je         loc_6450

0000000000005d24         shl        rax, 0x5
0000000000005d28         add        rax, r8
0000000000005d2b         cmp        dword [rax], 0x5
0000000000005d2e         jne        loc_6816

0000000000005d34         mov        eax, dword [rax+0x10]
0000000000005d37         mov        dword [rbp+var_3E0], 0x1
0000000000005d41         mov        dword [rbp+var_3B8], eax

                     loc_5d47:
0000000000005d47         mov        rax, qword [r13+0x40]                       ; CODE XREF=vasnprintf+2922
0000000000005d4b         cmp        rax, 0xffffffffffffffff
0000000000005d4f         je         loc_5d7c

0000000000005d51         shl        rax, 0x5
0000000000005d55         add        r8, rax
0000000000005d58         cmp        dword [r8], 0x5
0000000000005d5c         jne        loc_6816

0000000000005d62         mov        eax, dword [rbp+var_3E0]
0000000000005d68         mov        edx, dword [r8+0x10]
0000000000005d6c         mov        dword [rbp+rax*4+var_3B8], edx
0000000000005d73         lea        eax, dword [rax+1]
0000000000005d76         mov        dword [rbp+var_3E0], eax

                     loc_5d7c:
0000000000005d7c         mov        rax, r14                                    ; CODE XREF=vasnprintf+1119
0000000000005d7f         xor        edx, edx
0000000000005d81         add        rax, 0x2
0000000000005d85         jb         loc_69ec

0000000000005d8b         cmp        r12, rax
0000000000005d8e         jae        loc_5ddb

0000000000005d90         test       r12, r12
0000000000005d93         jne        loc_65b8

0000000000005d99         cmp        rax, 0xc
0000000000005d9d         ja         loc_65d0

0000000000005da3         mov        r12d, 0xc

                     loc_5da9:
0000000000005da9         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3284
0000000000005db0         sete       dl
0000000000005db3         test       r15, r15
0000000000005db6         je         loc_6600

                     loc_5dbc:
0000000000005dbc         test       dl, dl                                      ; CODE XREF=vasnprintf+3331
0000000000005dbe         jne        loc_6600

0000000000005dc4         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000005dc7         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000005dca         call       j_realloc                                   ; realloc
0000000000005dcf         test       rax, rax
0000000000005dd2         je         loc_5a55

0000000000005dd8         mov        r15, rax

                     loc_5ddb:
0000000000005ddb         mov        byte [r15+r14], 0x0                         ; CODE XREF=vasnprintf+1182, vasnprintf+3411, vasnprintf+3795, vasnprintf+4357
0000000000005de0         call       j___errno_location                          ; __errno_location
0000000000005de5         mov        qword [rbp+var_3C8], rax
0000000000005dec         mov        eax, dword [rax]
0000000000005dee         mov        qword [rbp+var_3F8], rbx
0000000000005df5         mov        dword [rbp+var_424], eax
0000000000005dfb         nop        dword [rax+rax]

                     loc_5e00:
0000000000005e00         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1591, vasnprintf+1677, vasnprintf+2598, vasnprintf+2652, vasnprintf+2755, vasnprintf+4332
0000000000005e07         mov        rbx, r12
0000000000005e0a         mov        r10d, 0x7fffffff
0000000000005e10         sub        rbx, r14
0000000000005e13         mov        dword [rbp+var_3BC], 0xffffffff
0000000000005e1d         cmp        rbx, 0x7fffffff
0000000000005e24         mov        dword [rax], 0x0
0000000000005e2a         mov        eax, dword [rbp+var_3D0]
0000000000005e30         cmovbe     r10, rbx
0000000000005e34         cmp        eax, 0x11
0000000000005e37         ja         loc_6816

0000000000005e3d         lea        rsi, qword [switch_table_8c3c]              ; switch_table_8c3c
0000000000005e44         movsxd     rax, dword [rsi+rax*4]
0000000000005e48         add        rax, rsi
0000000000005e4b         jmp        rax                                         ; switch statement using table at 0x8c3c, with 18 cases, 0x5e50,0x5f88,0x60b0,0x6138,0x61b8,0x61f8,0x6280,0x62b0,0x6816
0000000000005e4d         align      16

                     loc_5e50:
0000000000005e50         mov        rax, qword [r13+0x50]                       ; case 17, CODE XREF=vasnprintf+1371
0000000000005e54         lea        rdi, qword [r15+r14]
0000000000005e58         shl        rax, 0x5
0000000000005e5c         add        rax, qword [rbp+var_3A8]
0000000000005e63         mov        r9, qword [rax+0x10]
0000000000005e67         mov        eax, dword [rbp+var_3E0]
0000000000005e6d         cmp        eax, 0x1
0000000000005e70         je         loc_6338

0000000000005e76         cmp        eax, 0x2
0000000000005e79         je         loc_6320

0000000000005e7f         sub        rsp, 0x8
0000000000005e83         push       qword [rbp+var_3F0]

                     loc_5e89:
0000000000005e89         mov        r8, qword [rbp+var_3D8]                     ; CODE XREF=vasnprintf+3262
0000000000005e90         mov        rsi, r10
0000000000005e93         mov        rcx, 0xffffffffffffffff
0000000000005e9a         mov        edx, 0x1
0000000000005e9f         xor        eax, eax
0000000000005ea1         mov        qword [rbp+var_430], r10
0000000000005ea8         call       j___snprintf_chk                            ; __snprintf_chk
0000000000005ead         pop        rsi
0000000000005eae         pop        rdi
0000000000005eaf         mov        r10, qword [rbp+var_430]

                     loc_5eb6:
0000000000005eb6         mov        ecx, dword [rbp+var_3BC]                    ; CODE XREF=vasnprintf+2109, vasnprintf+2238, vasnprintf+2433, vasnprintf+3237
0000000000005ebc         test       ecx, ecx
0000000000005ebe         js         loc_5ffc

                     loc_5ec4:
0000000000005ec4         movsxd     rdx, ecx                                    ; CODE XREF=vasnprintf+1798
0000000000005ec7         cmp        rdx, r10
0000000000005eca         jae        loc_5eda

0000000000005ecc         add        rdx, r15
0000000000005ecf         cmp        byte [rdx+r14], 0x0
0000000000005ed4         jne        loc_6816

                     loc_5eda:
0000000000005eda         cmp        ecx, eax                                    ; CODE XREF=vasnprintf+1498
0000000000005edc         jge        loc_5ee6

                     loc_5ede:
0000000000005ede         mov        dword [rbp+var_3BC], eax                    ; CODE XREF=vasnprintf+1823
0000000000005ee4         mov        ecx, eax

                     loc_5ee6:
0000000000005ee6         lea        eax, dword [rcx+1]                          ; CODE XREF=vasnprintf+1516
0000000000005ee9         cmp        rax, r10
0000000000005eec         jb         loc_6720

0000000000005ef2         cmp        rbx, 0x7ffffffe
0000000000005ef9         ja         loc_6740

0000000000005eff         lea        rsi, qword [r12+r12]
0000000000005f03         lea        edx, dword [rcx+2]
0000000000005f06         test       r12, r12
0000000000005f09         mov        rax, 0xffffffffffffffff
0000000000005f10         cmovns     rax, rsi
0000000000005f14         add        rdx, r14
0000000000005f17         jb         loc_69d8

0000000000005f1d         cmp        rax, rdx
0000000000005f20         cmovb      rax, rdx
0000000000005f24         cmp        r12, rax
0000000000005f27         jae        loc_5e00

0000000000005f2d         test       r12, r12
0000000000005f30         js         loc_5a61

0000000000005f36         cmp        rsi, rax
0000000000005f39         mov        r12, rsi
0000000000005f3c         jae        loc_5f4b

0000000000005f3e         cmp        rax, 0xffffffffffffffff
0000000000005f42         je         loc_5a61

0000000000005f48         mov        r12, rax

                     loc_5f4b:
0000000000005f4b         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1612
0000000000005f52         sete       bl
0000000000005f55         test       r15, r15
0000000000005f58         je         loc_62e0

0000000000005f5e         test       bl, bl
0000000000005f60         jne        loc_62e0

0000000000005f66         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000005f69         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000005f6c         call       j_realloc                                   ; realloc
0000000000005f71         test       rax, rax
0000000000005f74         je         loc_5a61

0000000000005f7a         mov        r15, rax
0000000000005f7d         jmp        loc_5e00
0000000000005f82         align      8

                     loc_5f88:
0000000000005f88         mov        rax, qword [r13+0x50]                       ; case 14, CODE XREF=vasnprintf+1371
0000000000005f8c         lea        rdi, qword [r15+r14]
0000000000005f90         shl        rax, 0x5
0000000000005f94         add        rax, qword [rbp+var_3A8]
0000000000005f9b         mov        r9d, dword [rax+0x10]
0000000000005f9f         mov        eax, dword [rbp+var_3E0]
0000000000005fa5         cmp        eax, 0x1
0000000000005fa8         je         loc_61e0

                     loc_5fae:
0000000000005fae         cmp        eax, 0x2                                    ; CODE XREF=vasnprintf+2281, vasnprintf+2481, vasnprintf+2529
0000000000005fb1         je         loc_6228

                     loc_5fb7:
0000000000005fb7         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2350
0000000000005fbb         push       qword [rbp+var_3F0]

                     loc_5fc1:
0000000000005fc1         mov        r8, qword [rbp+var_3D8]                     ; CODE XREF=vasnprintf+2303
0000000000005fc8         mov        rcx, 0xffffffffffffffff
0000000000005fcf         mov        edx, 0x1
0000000000005fd4         mov        rsi, r10
0000000000005fd7         xor        eax, eax
0000000000005fd9         mov        qword [rbp+var_430], r10
0000000000005fe0         call       j___snprintf_chk                            ; __snprintf_chk
0000000000005fe5         pop        rdx
0000000000005fe6         pop        rcx
0000000000005fe7         mov        ecx, dword [rbp+var_3BC]
0000000000005fed         mov        r10, qword [rbp+var_430]
0000000000005ff4         test       ecx, ecx
0000000000005ff6         jns        loc_5ec4

                     loc_5ffc:
0000000000005ffc         mov        rdi, qword [rbp+var_3F8]                    ; CODE XREF=vasnprintf+1486
0000000000006003         cmp        byte [rdi+1], 0x0
0000000000006007         jne        loc_6348

000000000000600d         test       eax, eax
000000000000600f         jns        loc_5ede

0000000000006015         mov        rax, qword [rbp+var_3C8]
000000000000601c         mov        ebx, dword [rax]
000000000000601e         test       ebx, ebx
0000000000006020         jne        loc_6040

0000000000006022         movzx      eax, byte [r13+0x48]
0000000000006027         mov        ebx, 0x16
000000000000602c         and        eax, 0xffffffef
000000000000602f         cmp        al, 0x63
0000000000006031         mov        eax, 0x54
0000000000006036         cmove      ebx, eax
0000000000006039         nop        dword [rax]

                     loc_6040:
0000000000006040         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1840
0000000000006047         je         loc_6052

0000000000006049         test       r15, r15
000000000000604c         jne        loc_67fc

                     loc_6052:
0000000000006052         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+1879, vasnprintf+3860
0000000000006059         test       rax, rax
000000000000605c         je         loc_6066

000000000000605e         mov        rdi, rax                                    ; argument "__ptr" for method j_free
0000000000006061         call       j_free                                      ; free

                     loc_6066:
0000000000006066         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+1900
000000000000606d         mov        rdi, qword [rbp+var_2B8]
0000000000006074         add        rax, 0x20
0000000000006078         cmp        rdi, rax
000000000000607b         je         loc_6082

000000000000607d         call       j_free                                      ; free

                     loc_6082:
0000000000006082         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+1931
0000000000006089         mov        rdi, qword [rbp+var_3A8]
0000000000006090         add        rax, 0x10
0000000000006094         cmp        rdi, rax
0000000000006097         je         loc_609e

0000000000006099         call       j_free                                      ; free

                     loc_609e:
000000000000609e         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1959
00000000000060a5         xor        r15d, r15d
00000000000060a8         mov        dword [rax], ebx
00000000000060aa         jmp        loc_5acf
00000000000060af         align      16

                     loc_60b0:
00000000000060b0         mov        rax, qword [r13+0x50]                       ; case 12, CODE XREF=vasnprintf+1371
00000000000060b4         lea        rdi, qword [r15+r14]
00000000000060b8         shl        rax, 0x5
00000000000060bc         add        rax, qword [rbp+var_3A8]
00000000000060c3         fld        tword [rax+0x10]
00000000000060c6         mov        eax, dword [rbp+var_3E0]
00000000000060cc         cmp        eax, 0x1
00000000000060cf         je         loc_6700

00000000000060d5         cmp        eax, 0x2
00000000000060d8         jne        loc_65a0

00000000000060de         mov        eax, dword [rbp+var_3B4]
00000000000060e4         sub        rsp, 0x8
00000000000060e8         push       qword [rbp+var_3F0]
00000000000060ee         mov        r9d, dword [rbp+var_3B8]
00000000000060f5         mov        r8, qword [rbp+var_3D8]
00000000000060fc         mov        rsi, r10
00000000000060ff         sub        rsp, 0x18
0000000000006103         mov        rcx, 0xffffffffffffffff
000000000000610a         mov        edx, 0x1
000000000000610f         fstp       tword [rsp+0x458+var_450]
0000000000006113         push       rax
0000000000006114         xor        eax, eax
0000000000006116         mov        qword [rbp+var_430], r10
000000000000611d         call       j___snprintf_chk                            ; __snprintf_chk
0000000000006122         add        rsp, 0x30
0000000000006126         mov        r10, qword [rbp+var_430]
000000000000612d         jmp        loc_5eb6
0000000000006132         align      8

                     loc_6138:
0000000000006138         mov        rax, qword [r13+0x50]                       ; case 11, CODE XREF=vasnprintf+1371
000000000000613c         lea        rdi, qword [r15+r14]
0000000000006140         shl        rax, 0x5
0000000000006144         add        rax, qword [rbp+var_3A8]
000000000000614b         movsd      xmm0, qword [rax+0x10]
0000000000006150         mov        eax, dword [rbp+var_3E0]
0000000000006156         cmp        eax, 0x1
0000000000006159         je         loc_66f0

000000000000615f         cmp        eax, 0x2
0000000000006162         jne        loc_6560

0000000000006168         mov        eax, dword [rbp+var_3B4]
000000000000616e         push       qword [rbp+var_3F0]
0000000000006174         push       rax

                     loc_6175:
0000000000006175         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+3594
000000000000617c         mov        r8, qword [rbp+var_3D8]
0000000000006183         mov        rsi, r10
0000000000006186         mov        rcx, 0xffffffffffffffff
000000000000618d         mov        edx, 0x1
0000000000006192         mov        eax, 0x1
0000000000006197         mov        qword [rbp+var_430], r10
000000000000619e         call       j___snprintf_chk                            ; __snprintf_chk
00000000000061a3         pop        r8
00000000000061a5         mov        r10, qword [rbp+var_430]
00000000000061ac         pop        r9
00000000000061ae         jmp        loc_5eb6
00000000000061b3         align      8

                     loc_61b8:
00000000000061b8         mov        rax, qword [r13+0x50]                       ; case 4, CODE XREF=vasnprintf+1371
00000000000061bc         lea        rdi, qword [r15+r14]
00000000000061c0         shl        rax, 0x5
00000000000061c4         add        rax, qword [rbp+var_3A8]
00000000000061cb         movzx      r9d, word [rax+0x10]
00000000000061d0         mov        eax, dword [rbp+var_3E0]
00000000000061d6         cmp        eax, 0x1
00000000000061d9         jne        loc_5fae

00000000000061df         nop

                     loc_61e0:
00000000000061e0         push       qword [rbp+var_3F0]                         ; CODE XREF=vasnprintf+1720, vasnprintf+2345, vasnprintf+2487, vasnprintf+2535
00000000000061e6         push       r9

                     loc_61e8:
00000000000061e8         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+2640
00000000000061ef         jmp        loc_5fc1
00000000000061f4         align      8

                     loc_61f8:
00000000000061f8         mov        rax, qword [r13+0x50]                       ; case 3, CODE XREF=vasnprintf+1371
00000000000061fc         lea        rdi, qword [r15+r14]
0000000000006200         shl        rax, 0x5
0000000000006204         add        rax, qword [rbp+var_3A8]
000000000000620b         movsx      r9d, word [rax+0x10]
0000000000006210         mov        eax, dword [rbp+var_3E0]
0000000000006216         cmp        eax, 0x1
0000000000006219         je         loc_61e0

000000000000621b         cmp        eax, 0x2
000000000000621e         jne        loc_5fb7

0000000000006224         nop        dword [rax]

                     loc_6228:
0000000000006228         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+1729
000000000000622c         push       qword [rbp+var_3F0]
0000000000006232         push       r9

                     loc_6234:
0000000000006234         mov        eax, dword [rbp+var_3B4]                    ; CODE XREF=vasnprintf+2620
000000000000623a         push       rax

                     loc_623b:
000000000000623b         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+3617
0000000000006242         mov        r8, qword [rbp+var_3D8]
0000000000006249         mov        rsi, r10
000000000000624c         mov        rcx, 0xffffffffffffffff
0000000000006253         mov        edx, 0x1
0000000000006258         xor        eax, eax
000000000000625a         mov        qword [rbp+var_430], r10
0000000000006261         call       j___snprintf_chk                            ; __snprintf_chk
0000000000006266         add        rsp, 0x20
000000000000626a         mov        r10, qword [rbp+var_430]
0000000000006271         jmp        loc_5eb6
0000000000006276         align      128

                     loc_6280:
0000000000006280         mov        rax, qword [r13+0x50]                       ; case 2, CODE XREF=vasnprintf+1371
0000000000006284         lea        rdi, qword [r15+r14]
0000000000006288         shl        rax, 0x5
000000000000628c         add        rax, qword [rbp+var_3A8]
0000000000006293         movzx      r9d, byte [rax+0x10]
0000000000006298         mov        eax, dword [rbp+var_3E0]
000000000000629e         cmp        eax, 0x1
00000000000062a1         jne        loc_5fae

00000000000062a7         jmp        loc_61e0
00000000000062ac         align      16

                     loc_62b0:
00000000000062b0         mov        rax, qword [r13+0x50]                       ; case 1, CODE XREF=vasnprintf+1371
00000000000062b4         lea        rdi, qword [r15+r14]
00000000000062b8         shl        rax, 0x5
00000000000062bc         add        rax, qword [rbp+var_3A8]
00000000000062c3         movsx      r9d, byte [rax+0x10]
00000000000062c8         mov        eax, dword [rbp+var_3E0]
00000000000062ce         cmp        eax, 0x1
00000000000062d1         jne        loc_5fae

00000000000062d7         jmp        loc_61e0
00000000000062dc         align      32

                     loc_62e0:
00000000000062e0         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+1640, vasnprintf+1648
00000000000062e3         call       j_malloc                                    ; malloc
00000000000062e8         test       rax, rax
00000000000062eb         mov        rcx, rax
00000000000062ee         je         loc_5a61

00000000000062f4         test       r14, r14
00000000000062f7         je         loc_63b0

00000000000062fd         test       bl, bl
00000000000062ff         je         loc_63b0

0000000000006305         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000006308         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
000000000000630b         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
000000000000630e         call       j_memcpy                                    ; memcpy
0000000000006313         mov        r15, rax
0000000000006316         jmp        loc_5e00
000000000000631b         align      32

                     loc_6320:
0000000000006320         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+1417
0000000000006324         push       qword [rbp+var_3F0]
000000000000632a         push       r9
000000000000632c         jmp        loc_6234
0000000000006331         align      8

                     loc_6338:
0000000000006338         push       qword [rbp+var_3F0]                         ; CODE XREF=vasnprintf+1408
000000000000633e         push       r9
0000000000006340         jmp        loc_61e8
0000000000006345         align      8

                     loc_6348:
0000000000006348         mov        byte [rdi+1], 0x0                           ; CODE XREF=vasnprintf+1815
000000000000634c         jmp        loc_5e00
0000000000006351         align      8

                     loc_6358:
0000000000006358         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+723
000000000000635c         jne        loc_6816

0000000000006362         mov        rax, r14
0000000000006365         add        rax, 0x1
0000000000006369         mov        rbx, rax
000000000000636c         jae        loc_63f8

0000000000006372         cmp        r12, 0xffffffffffffffff
0000000000006376         jne        loc_5a55

000000000000637c         mov        rbx, r12

                     loc_637f:
000000000000637f         mov        byte [r15+r14], 0x25                        ; CODE XREF=vasnprintf+2827, vasnprintf+2904, vasnprintf+3555, vasnprintf+3847

                     loc_6384:
0000000000006384         mov        r8, qword [r13+8]                           ; CODE XREF=vasnprintf+3142, vasnprintf+3446, vasnprintf+3462, vasnprintf+3479, vasnprintf+3653
0000000000006388         add        r13, 0x58
000000000000638c         mov        rcx, qword [r13]
0000000000006390         add        qword [rbp+var_400], 0x1
0000000000006398         cmp        rcx, r8
000000000000639b         jne        loc_5a39

                     loc_63a1:
00000000000063a1         mov        r14, rbx                                    ; CODE XREF=vasnprintf+323
00000000000063a4         jmp        loc_5ba3
00000000000063a9         align      16

                     loc_63b0:
00000000000063b0         mov        r15, rcx                                    ; CODE XREF=vasnprintf+2567, vasnprintf+2575
00000000000063b3         jmp        loc_5e00

                     loc_63b8:
00000000000063b8         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+154, vasnprintf+174, vasnprintf+204, vasnprintf+225
00000000000063bd         mov        qword [rbp+var_3C8], rax
00000000000063c4         jmp        loc_5a87
00000000000063c9         align      16

                     loc_63d0:
00000000000063d0         mov        edx, edi                                    ; CODE XREF=vasnprintf+764
00000000000063d2         sub        edx, 0x12
00000000000063d5         cmp        edx, 0x4
00000000000063d8         ja         loc_6816

00000000000063de         lea        rdi, qword [switch_table_8c84]              ; switch_table_8c84
00000000000063e5         mov        rax, qword [rax+0x10]
00000000000063e9         movsxd     rdx, dword [rdi+rdx*4]
00000000000063ed         add        rdx, rdi
00000000000063f0         jmp        rdx                                         ; switch statement using table at 0x8c84, with 5 cases, 0x6530,0x6660,0x6670,0x6680
00000000000063f2         align      8

                     loc_63f8:
00000000000063f8         cmp        r12, rax                                    ; CODE XREF=vasnprintf+2684
00000000000063fb         jae        loc_637f

00000000000063fd         test       r12, r12
0000000000006400         jne        loc_67d0

0000000000006406         cmp        rax, 0xc
000000000000640a         ja         loc_67e2

0000000000006410         mov        r12d, 0xc

                     loc_6416:
0000000000006416         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3820, vasnprintf+3839
000000000000641d         sete       dl
0000000000006420         test       r15, r15
0000000000006423         je         loc_6690

0000000000006429         test       dl, dl
000000000000642b         jne        loc_6690

0000000000006431         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000006434         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000006437         call       j_realloc                                   ; realloc
000000000000643c         test       rax, rax
000000000000643f         je         loc_653b

0000000000006445         mov        r15, rax
0000000000006448         jmp        loc_637f
000000000000644d         align      16

                     loc_6450:
0000000000006450         mov        dword [rbp+var_3E0], 0x0                    ; CODE XREF=vasnprintf+1070
000000000000645a         jmp        loc_5d47
000000000000645f         align      32

                     loc_6460:
0000000000006460         js         loc_5a55                                    ; CODE XREF=vasnprintf+576

0000000000006466         add        r12, r12
0000000000006469         cmp        r12, rax
000000000000646c         jae        loc_5b46

                     loc_6472:
0000000000006472         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+586
0000000000006476         je         loc_5a55

000000000000647c         cmp        r15, qword [rbp+var_3E8]
0000000000006483         mov        r12, rax
0000000000006486         sete       dl
0000000000006489         test       r15, r15
000000000000648c         jne        loc_5b59

0000000000006492         nop        word [rax+rax]

                     loc_6498:
0000000000006498         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+611, vasnprintf+619
000000000000649b         mov        qword [rbp+var_3E0], r8
00000000000064a2         mov        byte [rbp+var_3D0], dl
00000000000064a8         mov        qword [rbp+var_3C8], rcx
00000000000064af         call       j_malloc                                    ; malloc
00000000000064b4         test       rax, rax
00000000000064b7         mov        r9, rax
00000000000064ba         mov        rcx, qword [rbp+var_3C8]
00000000000064c1         movzx      edx, byte [rbp+var_3D0]
00000000000064c8         mov        r8, qword [rbp+var_3E0]
00000000000064cf         je         loc_5a55

00000000000064d5         test       rbx, rbx
00000000000064d8         je         loc_66e0

00000000000064de         test       dl, dl
00000000000064e0         je         loc_66e0

00000000000064e6         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
00000000000064e9         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
00000000000064ec         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000064ef         mov        qword [rbp+var_3D0], r8
00000000000064f6         mov        qword [rbp+var_3C8], rcx
00000000000064fd         call       j_memcpy                                    ; memcpy
0000000000006502         mov        rcx, qword [rbp+var_3C8]
0000000000006509         mov        r15, rax
000000000000650c         mov        r8, qword [rbp+var_3D0]
0000000000006513         jmp        loc_5b94
0000000000006518         align      32

                     loc_6520:
0000000000006520         mov        r14, r12                                    ; CODE XREF=vasnprintf+351
0000000000006523         jmp        loc_5b94
0000000000006528         align      16

                     loc_6530:
0000000000006530         mov        qword [rax], r14                            ; case 4, CODE XREF=vasnprintf+2816
0000000000006533         mov        rbx, r14
0000000000006536         jmp        loc_6384

                     loc_653b:
000000000000653b         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+667, vasnprintf+2895, vasnprintf+4051
0000000000006540         mov        qword [rbp+var_3C8], rax
0000000000006547         nop        word [rax+rax]

                     loc_6550:
0000000000006550         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=vasnprintf+381
0000000000006553         call       j_free                                      ; free
0000000000006558         jmp        loc_5a73
000000000000655d         align      32

                     loc_6560:
0000000000006560         mov        r9, qword [rbp+var_3F0]                     ; CODE XREF=vasnprintf+2162
0000000000006567         mov        r8, qword [rbp+var_3D8]
000000000000656e         mov        rsi, r10
0000000000006571         mov        rcx, 0xffffffffffffffff
0000000000006578         mov        edx, 0x1
000000000000657d         mov        eax, 0x1
0000000000006582         mov        qword [rbp+var_430], r10
0000000000006589         call       j___snprintf_chk                            ; __snprintf_chk
000000000000658e         mov        r10, qword [rbp+var_430]
0000000000006595         jmp        loc_5eb6
000000000000659a         align      32

                     loc_65a0:
00000000000065a0         sub        rsp, 0x10                                   ; CODE XREF=vasnprintf+2024
00000000000065a4         mov        r9, qword [rbp+var_3F0]
00000000000065ab         fstp       tword [rsp+0x440+var_440]
00000000000065ae         jmp        loc_5e89
00000000000065b3         align      8

                     loc_65b8:
00000000000065b8         js         loc_5a55                                    ; CODE XREF=vasnprintf+1187

00000000000065be         add        r12, r12
00000000000065c1         cmp        r12, rax
00000000000065c4         jae        loc_5da9

00000000000065ca         nop        word [rax+rax]

                     loc_65d0:
00000000000065d0         test       rdx, rdx                                    ; CODE XREF=vasnprintf+1197, vasnprintf+4372
00000000000065d3         jne        loc_5a55

00000000000065d9         cmp        rax, 0xffffffffffffffff
00000000000065dd         je         loc_5a55

00000000000065e3         cmp        r15, qword [rbp+var_3E8]
00000000000065ea         mov        r12, rax
00000000000065ed         sete       dl
00000000000065f0         test       r15, r15
00000000000065f3         jne        loc_5dbc

00000000000065f9         nop        dword [rax]

                     loc_6600:
0000000000006600         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+1222, vasnprintf+1230
0000000000006603         mov        byte [rbp+var_3C8], dl
0000000000006609         call       j_malloc                                    ; malloc
000000000000660e         test       rax, rax
0000000000006611         mov        rcx, rax
0000000000006614         movzx      edx, byte [rbp+var_3C8]
000000000000661b         je         loc_5a55

0000000000006621         test       r14, r14
0000000000006624         je         loc_67c0

000000000000662a         test       dl, dl
000000000000662c         je         loc_67c0

0000000000006632         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000006635         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000006638         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
000000000000663b         call       j_memcpy                                    ; memcpy
0000000000006640         mov        r15, rax
0000000000006643         jmp        loc_5ddb
0000000000006648         align      16

                     loc_6650:
0000000000006650         mov        byte [rbx], 0x4c                            ; CODE XREF=vasnprintf+1026
0000000000006653         add        rbx, 0x1
0000000000006657         jmp        loc_5d0b
000000000000665c         align      32

                     loc_6660:
0000000000006660         mov        byte [rax], r14b                            ; case 0, CODE XREF=vasnprintf+2816
0000000000006663         mov        rbx, r14
0000000000006666         jmp        loc_6384
000000000000666b         align      16

                     loc_6670:
0000000000006670         mov        dword [rax], r14d                           ; case 2, CODE XREF=vasnprintf+2816
0000000000006673         mov        rbx, r14
0000000000006676         jmp        loc_6384
000000000000667b         align      128

                     loc_6680:
0000000000006680         mov        word [rax], r14w                            ; case 1, CODE XREF=vasnprintf+2816
0000000000006684         mov        rbx, r14
0000000000006687         jmp        loc_6384
000000000000668c         align      16

                     loc_6690:
0000000000006690         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+2867, vasnprintf+2875
0000000000006693         mov        byte [rbp+var_3C8], dl
0000000000006699         call       j_malloc                                    ; malloc
000000000000669e         test       rax, rax
00000000000066a1         mov        rcx, rax
00000000000066a4         movzx      edx, byte [rbp+var_3C8]
00000000000066ab         je         loc_5a55

00000000000066b1         test       r14, r14
00000000000066b4         je         loc_67f4

00000000000066ba         test       dl, dl
00000000000066bc         je         loc_67f4

00000000000066c2         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
00000000000066c5         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
00000000000066c8         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000066cb         call       j_memcpy                                    ; memcpy
00000000000066d0         mov        r15, rax
00000000000066d3         jmp        loc_637f
00000000000066d8         align      32

                     loc_66e0:
00000000000066e0         mov        r15, r9                                     ; CODE XREF=vasnprintf+3048, vasnprintf+3056
00000000000066e3         jmp        loc_5b94
00000000000066e8         align      16

                     loc_66f0:
00000000000066f0         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2153
00000000000066f4         push       qword [rbp+var_3F0]
00000000000066fa         jmp        loc_6175
00000000000066ff         align      256

                     loc_6700:
0000000000006700         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2015
0000000000006704         push       qword [rbp+var_3F0]
000000000000670a         sub        rsp, 0x10
000000000000670e         fstp       tword [rsp+0x450+var_450]
0000000000006711         jmp        loc_623b
0000000000006716         align      32

                     loc_6720:
0000000000006720         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1532
0000000000006727         mov        edi, dword [rbp+var_424]
000000000000672d         movsxd     rbx, ecx
0000000000006730         add        rbx, r14
0000000000006733         mov        dword [rax], edi
0000000000006735         jmp        loc_6384
000000000000673a         align      64

                     loc_6740:
0000000000006740         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1545
0000000000006747         je         loc_6752

0000000000006749         test       r15, r15
000000000000674c         jne        loc_6809

                     loc_6752:
0000000000006752         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+3671, vasnprintf+3873
0000000000006759         test       rax, rax
000000000000675c         je         loc_6766

000000000000675e         mov        rdi, rax                                    ; argument "__ptr" for method j_free
0000000000006761         call       j_free                                      ; free

                     loc_6766:
0000000000006766         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+3692
000000000000676d         mov        rdi, qword [rbp+var_2B8]
0000000000006774         add        rax, 0x20
0000000000006778         cmp        rdi, rax
000000000000677b         je         loc_6782

000000000000677d         call       j_free                                      ; free

                     loc_6782:
0000000000006782         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+3723
0000000000006789         mov        rdi, qword [rbp+var_3A8]
0000000000006790         add        rax, 0x10
0000000000006794         cmp        rdi, rax
0000000000006797         je         loc_679e

0000000000006799         call       j_free                                      ; free

                     loc_679e:
000000000000679e         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+3751
00000000000067a5         xor        r15d, r15d
00000000000067a8         mov        dword [rax], 0x4b
00000000000067ae         jmp        loc_5acf
00000000000067b3         align      8

                     loc_67b8:
00000000000067b8         xor        r15d, r15d                                  ; CODE XREF=vasnprintf+96
00000000000067bb         jmp        loc_5acf

                     loc_67c0:
00000000000067c0         mov        r15, rcx                                    ; CODE XREF=vasnprintf+3380, vasnprintf+3388
00000000000067c3         jmp        loc_5ddb
00000000000067c8         align      16

                     loc_67d0:
00000000000067d0         js         loc_5a55                                    ; CODE XREF=vasnprintf+2832

00000000000067d6         add        r12, r12
00000000000067d9         cmp        r12, rax
00000000000067dc         jae        loc_6416

                     loc_67e2:
00000000000067e2         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+2842
00000000000067e6         je         loc_5a55

00000000000067ec         mov        r12, rax
00000000000067ef         jmp        loc_6416

                     loc_67f4:
00000000000067f4         mov        r15, rcx                                    ; CODE XREF=vasnprintf+3524, vasnprintf+3532
00000000000067f7         jmp        loc_637f

                     loc_67fc:
00000000000067fc         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=vasnprintf+1884
00000000000067ff         call       j_free                                      ; free
0000000000006804         jmp        loc_6052

                     loc_6809:
0000000000006809         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=vasnprintf+3676
000000000000680c         call       j_free                                      ; free
0000000000006811         jmp        loc_6752

                     loc_6816:
0000000000006816         call       j_abort                                     ; abort, case 0, CODE XREF=vasnprintf+733, vasnprintf+1086, vasnprintf+1132, vasnprintf+1351, vasnprintf+1371, vasnprintf+1508, vasnprintf+2668, vasnprintf+2792
                        ; endp
000000000000681b         align      32

                     loc_6820:
0000000000006820         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+115
0000000000006827         mov        rdi, qword [rbp+var_2B8]
000000000000682e         add        rax, 0x20
0000000000006832         cmp        rdi, rax
0000000000006835         je         loc_683c

0000000000006837         call       j_free                                      ; free

                     loc_683c:
000000000000683c         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+3909
0000000000006843         mov        rdi, qword [rbp+var_3A8]
000000000000684a         add        rax, 0x10
000000000000684e         cmp        rdi, rax
0000000000006851         je         loc_6858

0000000000006853         call       j_free                                      ; free

                     loc_6858:
0000000000006858         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+3937
000000000000685d         xor        r15d, r15d
0000000000006860         mov        dword [rax], 0x16
0000000000006866         jmp        loc_5acf

                     loc_686b:
000000000000686b         mov        rbx, r14                                    ; CODE XREF=vasnprintf+705
000000000000686e         xor        eax, eax
0000000000006870         add        rbx, 0x1
0000000000006874         jb         loc_6980

000000000000687a         cmp        r12, rbx
000000000000687d         jae        loc_68cc

000000000000687f         test       r12, r12
0000000000006882         jne        loc_69b9

0000000000006888         cmp        rbx, 0xc
000000000000688c         ja         loc_699e

0000000000006892         mov        r12d, 0xc

                     loc_6898:
0000000000006898         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+4292, vasnprintf+4309
000000000000689f         sete       r13b
00000000000068a3         test       r15, r15
00000000000068a6         je         loc_694c

00000000000068ac         test       r13b, r13b
00000000000068af         jne        loc_694c

00000000000068b5         mov        rsi, r12                                    ; argument "__size" for method j_realloc
00000000000068b8         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
00000000000068bb         call       j_realloc                                   ; realloc
00000000000068c0         test       rax, rax
00000000000068c3         je         loc_653b

00000000000068c9         mov        r15, rax

                     loc_68cc:
00000000000068cc         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3981, vasnprintf+4235, vasnprintf+4249, vasnprintf+4323
00000000000068d3         mov        byte [r15+r14], 0x0
00000000000068d8         je         loc_68f1

00000000000068da         cmp        r12, rbx
00000000000068dd         jbe        loc_68f1

00000000000068df         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
00000000000068e2         mov        rsi, rbx                                    ; argument "__size" for method j_realloc
00000000000068e5         call       j_realloc                                   ; realloc
00000000000068ea         test       rax, rax
00000000000068ed         cmovne     r15, rax

                     loc_68f1:
00000000000068f1         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+4072, vasnprintf+4077
00000000000068f8         test       rax, rax
00000000000068fb         je         loc_6905

00000000000068fd         mov        rdi, rax                                    ; argument "__ptr" for method j_free
0000000000006900         call       j_free                                      ; free

                     loc_6905:
0000000000006905         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+4107
000000000000690c         mov        rdi, qword [rbp+var_2B8]
0000000000006913         add        rax, 0x20
0000000000006917         cmp        rdi, rax
000000000000691a         je         loc_6921

000000000000691c         call       j_free                                      ; free

                     loc_6921:
0000000000006921         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+4138
0000000000006928         mov        rdi, qword [rbp+var_3A8]
000000000000692f         add        rax, 0x10
0000000000006933         cmp        rdi, rax
0000000000006936         je         loc_693d

0000000000006938         call       j_free                                      ; free

                     loc_693d:
000000000000693d         mov        rax, qword [rbp+var_418]                    ; CODE XREF=vasnprintf+4166
0000000000006944         mov        qword [rax], r14
0000000000006947         jmp        loc_5acf

                     loc_694c:
000000000000694c         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+4022, vasnprintf+4031
000000000000694f         call       j_malloc                                    ; malloc
0000000000006954         test       rax, rax
0000000000006957         mov        rcx, rax
000000000000695a         je         loc_5a55

0000000000006960         test       r14, r14
0000000000006963         je         loc_69d0

0000000000006965         test       r13b, r13b
0000000000006968         je         loc_69d0

000000000000696a         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
000000000000696d         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000006970         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000006973         call       j_memcpy                                    ; memcpy
0000000000006978         mov        r15, rax
000000000000697b         jmp        loc_68cc

                     loc_6980:
0000000000006980         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+3972
0000000000006984         mov        eax, 0x1
0000000000006989         je         loc_68cc

000000000000698f         test       r12, r12
0000000000006992         je         loc_5a55

0000000000006998         js         loc_5a55

                     loc_699e:
000000000000699e         test       rax, rax                                    ; CODE XREF=vasnprintf+3996, vasnprintf+4315
00000000000069a1         jne        loc_5a55

00000000000069a7         cmp        rbx, 0xffffffffffffffff
00000000000069ab         je         loc_5a55

00000000000069b1         mov        r12, rbx
00000000000069b4         jmp        loc_6898

                     loc_69b9:
00000000000069b9         js         loc_5a55                                    ; CODE XREF=vasnprintf+3986

00000000000069bf         add        r12, r12
00000000000069c2         cmp        r12, rbx
00000000000069c5         jae        loc_6898

00000000000069cb         jmp        loc_699e
00000000000069cd         align      16

                     loc_69d0:
00000000000069d0         mov        r15, rcx                                    ; CODE XREF=vasnprintf+4211, vasnprintf+4216
00000000000069d3         jmp        loc_68cc

                     loc_69d8:
00000000000069d8         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+1575
00000000000069dc         je         loc_5e00

00000000000069e2         jmp        loc_5a61

                     loc_69e7:
00000000000069e7         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=vasnprintf+495
                        ; endp

                     loc_69ec:
00000000000069ec         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+1173
00000000000069f0         mov        edx, 0x1
00000000000069f5         je         loc_5ddb

00000000000069fb         test       r12, r12
00000000000069fe         je         loc_5a55

0000000000006a04         jns        loc_65d0

0000000000006a0a         jmp        loc_5a55
0000000000006a0f         align      16                                          ; End of unwind block (FDE at 0x9dc4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     printf_fetchargs:
0000000000006a10         cmp        qword [rsi], 0x0                            ; Begin of unwind block (FDE at 0x9df4), CODE XREF=vasnprintf+108
0000000000006a14         mov        rax, qword [rsi+8]
0000000000006a18         je         loc_6a7d

0000000000006a1a         lea        r8, qword [aNull+8]                         ; 0x8ca0
0000000000006a21         lea        r10, qword [wide_null_string.2696]          ; wide_null_string.2696
0000000000006a28         lea        r9, qword [aNull]                           ; "(NULL)"
0000000000006a2f         xor        ecx, ecx
0000000000006a31         nop        dword [rax]
0000000000006a38         cmp        dword [rax], 0x16
0000000000006a3b         ja         loc_6a80

0000000000006a3d         mov        edx, dword [rax]
0000000000006a3f         movsxd     rdx, dword [r8+rdx*4]
0000000000006a43         add        rdx, r8
0000000000006a46         jmp        rdx
                        ; endp
0000000000006a48         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6a50:
0000000000006a50         mov        rdx, qword [rdi+8]
0000000000006a54         add        rdx, 0xf
0000000000006a58         and        rdx, 0xfffffffffffffff0
0000000000006a5c         lea        r11, qword [rdx+0x10]
0000000000006a60         mov        qword [rdi+8], r11
0000000000006a64         fld        tword [rdx]
0000000000006a66         fstp       tword [rax+0x10]
0000000000006a69         nop        dword [rax]
0000000000006a70         add        rcx, 0x1                                    ; CODE XREF=sub_6a86+137, sub_6a86+183
0000000000006a74         add        rax, 0x20
0000000000006a78         cmp        qword [rsi], rcx
0000000000006a7b         ja         printf_fetchargs+40
                        ; endp

                     loc_6a7d:
0000000000006a7d         xor        eax, eax                                    ; CODE XREF=printf_fetchargs+8
0000000000006a7f         ret
                        ; endp

                     loc_6a80:
0000000000006a80         mov        eax, 0xffffffff                             ; CODE XREF=printf_fetchargs+43
0000000000006a85         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6a86:
0000000000006a86         mov        r11d, dword [rdi]
0000000000006a89         cmp        r11d, 0x2f
0000000000006a8d         ja         loc_6bca

0000000000006a93         mov        edx, r11d
0000000000006a96         add        rdx, qword [rdi+0x10]
0000000000006a9a         add        r11d, 0x8
0000000000006a9e         mov        dword [rdi], r11d

                     loc_6aa1:
0000000000006aa1         mov        rdx, qword [rdx]                            ; CODE XREF=sub_6b70+102
0000000000006aa4         mov        qword [rax+0x10], rdx
0000000000006aa8         jmp        sub_6a50+32
                        ; endp
0000000000006aaa         mov        r11d, dword [rdi]
0000000000006aad         cmp        r11d, 0x2f
0000000000006ab1         ja         sub_6bec                                    ; sub_6bec
0000000000006ab7         mov        edx, r11d
0000000000006aba         add        rdx, qword [rdi+0x10]
0000000000006abe         add        r11d, 0x8
0000000000006ac2         mov        dword [rdi], r11d

                     loc_6ac5:
0000000000006ac5         mov        edx, dword [rdx]                            ; CODE XREF=sub_6bec+12
0000000000006ac7         mov        dword [rax+0x10], edx
0000000000006aca         jmp        sub_6a50+32
                        ; endp
0000000000006acc         mov        r11d, dword [rdi]
0000000000006acf         cmp        r11d, 0x2f
0000000000006ad3         ja         sub_6bdb                                    ; sub_6bdb
0000000000006ad9         mov        edx, r11d
0000000000006adc         add        rdx, qword [rdi+0x10]
0000000000006ae0         add        r11d, 0x8
0000000000006ae4         mov        dword [rdi], r11d

                     loc_6ae7:
0000000000006ae7         mov        edx, dword [rdx]                            ; CODE XREF=sub_6bdb+12
0000000000006ae9         mov        byte [rax+0x10], dl
0000000000006aec         jmp        sub_6a50+32
                        ; endp
0000000000006aee         mov        r11d, dword [rdi]
0000000000006af1         cmp        r11d, 0x2f
0000000000006af5         ja         sub_6b70+42
0000000000006afb         mov        edx, r11d
0000000000006afe         add        rdx, qword [rdi+0x10]
0000000000006b02         add        r11d, 0x8
0000000000006b06         mov        dword [rdi], r11d
0000000000006b09         mov        edx, dword [rdx]                            ; CODE XREF=sub_6b70+54
0000000000006b0b         mov        word [rax+0x10], dx
0000000000006b0f         jmp        sub_6a50+32
0000000000006b14         mov        r11d, dword [rdi]
0000000000006b17         cmp        r11d, 0x2f
0000000000006b1b         ja         sub_6b70+59
0000000000006b21         mov        edx, r11d
0000000000006b24         add        rdx, qword [rdi+0x10]
0000000000006b28         add        r11d, 0x8
0000000000006b2c         mov        dword [rdi], r11d
0000000000006b2f         mov        rdx, qword [rdx]                            ; CODE XREF=sub_6b70+71
0000000000006b32         test       rdx, rdx
0000000000006b35         cmove      rdx, r9
0000000000006b39         mov        qword [rax+0x10], rdx
0000000000006b3d         jmp        sub_6a50+32
0000000000006b42         mov        r11d, dword [rdi+4]
0000000000006b46         cmp        r11d, 0xaf
0000000000006b4d         ja         sub_6bfd                                    ; sub_6bfd
0000000000006b53         mov        edx, r11d
0000000000006b56         add        rdx, qword [rdi+0x10]
0000000000006b5a         add        r11d, 0x10
0000000000006b5e         mov        dword [rdi+4], r11d

                     loc_6b62:
0000000000006b62         movsd      xmm0, qword [rdx]                           ; CODE XREF=sub_6bfd+12
0000000000006b66         movsd      qword [rax+0x10], xmm0
0000000000006b6b         jmp        sub_6a50+32
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6b70:
0000000000006b70         mov        r11d, dword [rdi]
0000000000006b73         cmp        r11d, 0x2f
0000000000006b77         ja         loc_6bbc

0000000000006b79         mov        edx, r11d
0000000000006b7c         add        rdx, qword [rdi+0x10]
0000000000006b80         add        r11d, 0x8
0000000000006b84         mov        dword [rdi], r11d

                     loc_6b87:
0000000000006b87         mov        rdx, qword [rdx]                            ; CODE XREF=sub_6b70+88
0000000000006b8a         test       rdx, rdx
0000000000006b8d         cmove      rdx, r10
0000000000006b91         mov        qword [rax+0x10], rdx
0000000000006b95         jmp        sub_6a50+32
                        ; endp
0000000000006b9a         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_6a86+111
0000000000006b9e         lea        r11, qword [rdx+8]
0000000000006ba2         mov        qword [rdi+8], r11
0000000000006ba6         jmp        sub_6a86+131
0000000000006bab         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_6a86+149
0000000000006baf         lea        r11, qword [rdx+8]
0000000000006bb3         mov        qword [rdi+8], r11
0000000000006bb7         jmp        sub_6a86+169

                     loc_6bbc:
0000000000006bbc         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_6b70+7
0000000000006bc0         lea        r11, qword [rdx+8]
0000000000006bc4         mov        qword [rdi+8], r11
0000000000006bc8         jmp        loc_6b87

                     loc_6bca:
0000000000006bca         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_6a86+7
0000000000006bce         lea        r11, qword [rdx+8]
0000000000006bd2         mov        qword [rdi+8], r11
0000000000006bd6         jmp        loc_6aa1


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6bdb:
0000000000006bdb         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_6a86+77
0000000000006bdf         lea        r11, qword [rdx+8]
0000000000006be3         mov        qword [rdi+8], r11
0000000000006be7         jmp        loc_6ae7


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6bec:
0000000000006bec         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_6a86+43
0000000000006bf0         lea        r11, qword [rdx+8]
0000000000006bf4         mov        qword [rdi+8], r11
0000000000006bf8         jmp        loc_6ac5


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6bfd:
0000000000006bfd         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_6a86+199
0000000000006c01         lea        r11, qword [rdx+8]
0000000000006c05         mov        qword [rdi+8], r11
0000000000006c09         jmp        loc_6b62


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6c0e:
0000000000006c0e         nop                                                    ; End of unwind block (FDE at 0x9df4)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128


                     printf_parse:
0000000000006c10         push       r15                                         ; Begin of unwind block (FDE at 0x9e0c), CODE XREF=vasnprintf+89
0000000000006c12         push       r14
0000000000006c14         lea        rcx, qword [rsi+0x20]
0000000000006c18         push       r13
0000000000006c1a         push       r12
0000000000006c1c         lea        rax, qword [rdx+0x10]
0000000000006c20         push       rbp
0000000000006c21         push       rbx
0000000000006c22         mov        r14, rsi
0000000000006c25         mov        r15, rdx
0000000000006c28         xor        ebx, ebx
0000000000006c2a         mov        r9d, 0x7
0000000000006c30         sub        rsp, 0x58
0000000000006c34         mov        r10d, 0x7
0000000000006c3a         mov        qword [rsi], 0x0
0000000000006c41         mov        qword [rsi+8], rcx
0000000000006c45         mov        qword [rsp+0x88+var_60], rcx
0000000000006c4a         mov        r8, 0xffffffffffffffff
0000000000006c51         mov        qword [rdx], 0x0
0000000000006c58         mov        qword [rsp+0x88+var_80], rax
0000000000006c5d         mov        qword [rdx+8], rax
0000000000006c61         mov        qword [rsp+0x88+var_70], 0x0
0000000000006c6a         mov        qword [rsp+0x88+var_78], 0x0
0000000000006c73         mov        qword [rsp+0x88+var_68], 0x0
0000000000006c7c         jmp        loc_6c8b
0000000000006c7e         align      128

                     loc_6c80:
0000000000006c80         cmp        al, 0x25                                    ; CODE XREF=printf_parse+128
0000000000006c82         lea        rbp, qword [rdi+1]
0000000000006c86         je         loc_6cc8

                     loc_6c88:
0000000000006c88         mov        rdi, rbp                                    ; CODE XREF=printf_parse+859, printf_parse+868

                     loc_6c8b:
0000000000006c8b         movzx      eax, byte [rdi]                             ; CODE XREF=printf_parse+108
0000000000006c8e         test       al, al
0000000000006c90         jne        loc_6c80

0000000000006c92         lea        rax, qword [rbx+rbx*4]
0000000000006c96         lea        rax, qword [rbx+rax*2]
0000000000006c9a         mov        qword [rcx+rax*8], rdi
0000000000006c9e         mov        rax, qword [rsp+0x88+var_78]
0000000000006ca3         mov        qword [r14+0x10], rax
0000000000006ca7         mov        rax, qword [rsp+0x88+var_70]
0000000000006cac         mov        qword [r14+0x18], rax
0000000000006cb0         xor        eax, eax

                     loc_6cb2:
0000000000006cb2         add        rsp, 0x58                                   ; CODE XREF=printf_parse+2174, printf_parse+2844
0000000000006cb6         pop        rbx
0000000000006cb7         pop        rbp
0000000000006cb8         pop        r12
0000000000006cba         pop        r13
0000000000006cbc         pop        r14
0000000000006cbe         pop        r15
0000000000006cc0         ret
                        ; endp
0000000000006cc1         align      8

                     loc_6cc8:
0000000000006cc8         lea        rax, qword [rbx+rbx*4]                      ; CODE XREF=printf_parse+118
0000000000006ccc         mov        r13, r8
0000000000006ccf         lea        rax, qword [rbx+rax*2]
0000000000006cd3         lea        r12, qword [rcx+rax*8]
0000000000006cd7         mov        qword [r12], rdi
0000000000006cdb         mov        dword [r12+0x10], 0x0
0000000000006ce4         mov        qword [r12+0x18], 0x0
0000000000006ced         mov        qword [r12+0x20], 0x0
0000000000006cf6         mov        qword [r12+0x28], r8
0000000000006cfb         mov        qword [r12+0x30], 0x0
0000000000006d04         mov        qword [r12+0x38], 0x0
0000000000006d0d         mov        qword [r12+0x40], r8
0000000000006d12         mov        qword [r12+0x50], r8
0000000000006d17         movzx      ebx, byte [rdi+1]
0000000000006d1b         lea        eax, dword [rbx-0x30]
0000000000006d1e         cmp        al, 0x9
0000000000006d20         ja         loc_6d5e

0000000000006d22         jmp        loc_715a
0000000000006d27         align      16

                     loc_6d30:
0000000000006d30         cmp        bl, 0x2d                                    ; CODE XREF=printf_parse+344
0000000000006d33         je         loc_6d78

0000000000006d35         cmp        bl, 0x2b
0000000000006d38         je         loc_6d80

0000000000006d3a         cmp        bl, 0x20
0000000000006d3d         je         loc_6d90

0000000000006d3f         cmp        bl, 0x23
0000000000006d42         je         loc_6da0

0000000000006d44         cmp        bl, 0x30
0000000000006d47         je         loc_6db0

0000000000006d49         cmp        bl, 0x49
0000000000006d4c         jne        loc_6dc0

0000000000006d4e         or         dword [r12+0x10], 0x40
0000000000006d54         nop        dword [rax]

                     loc_6d58:
0000000000006d58         movzx      ebx, byte [rax]                             ; CODE XREF=printf_parse+352, printf_parse+366, printf_parse+374, printf_parse+390, printf_parse+406, printf_parse+422
0000000000006d5b         mov        rbp, rax

                     loc_6d5e:
0000000000006d5e         lea        rax, qword [rbp+1]                          ; CODE XREF=printf_parse+272, printf_parse+1381, printf_parse+1490
0000000000006d62         cmp        bl, 0x27
0000000000006d65         mov        rdx, rax
0000000000006d68         jne        loc_6d30

0000000000006d6a         or         dword [r12+0x10], 0x1
0000000000006d70         jmp        loc_6d58
0000000000006d72         align      8

                     loc_6d78:
0000000000006d78         or         dword [r12+0x10], 0x2                       ; CODE XREF=printf_parse+291
0000000000006d7e         jmp        loc_6d58

                     loc_6d80:
0000000000006d80         or         dword [r12+0x10], 0x4                       ; CODE XREF=printf_parse+296
0000000000006d86         jmp        loc_6d58
0000000000006d88         align      16

                     loc_6d90:
0000000000006d90         or         dword [r12+0x10], 0x8                       ; CODE XREF=printf_parse+301
0000000000006d96         jmp        loc_6d58
0000000000006d98         align      32

                     loc_6da0:
0000000000006da0         or         dword [r12+0x10], 0x10                      ; CODE XREF=printf_parse+306
0000000000006da6         jmp        loc_6d58
0000000000006da8         align      16

                     loc_6db0:
0000000000006db0         or         dword [r12+0x10], 0x20                      ; CODE XREF=printf_parse+311
0000000000006db6         jmp        loc_6d58
0000000000006db8         align      64

                     loc_6dc0:
0000000000006dc0         cmp        bl, 0x2a                                    ; CODE XREF=printf_parse+316
0000000000006dc3         je         loc_6f79

0000000000006dc9         lea        ecx, dword [rbx-0x30]
0000000000006dcc         cmp        cl, 0x9
0000000000006dcf         jbe        loc_71e7

                     loc_6dd5:
0000000000006dd5         cmp        bl, 0x2e                                    ; CODE XREF=printf_parse+1577, printf_parse+2412
0000000000006dd8         je         loc_70af

                     loc_6dde:
0000000000006dde         xor        eax, eax                                    ; CODE XREF=printf_parse+1177, printf_parse+1349, printf_parse+1648, printf_parse+2650
0000000000006de0         mov        esi, 0x1
0000000000006de5         jmp        loc_6e17
0000000000006de7         align      16

                     loc_6df0:
0000000000006df0         cmp        bl, 0x4c                                    ; CODE XREF=printf_parse+526
0000000000006df3         je         loc_6e30

0000000000006df5         cmp        bl, 0x6c
0000000000006df8         je         loc_6e10

0000000000006dfa         cmp        bl, 0x6a
0000000000006dfd         je         loc_6e10

0000000000006dff         mov        edx, ebx
0000000000006e01         and        edx, 0xffffffdf
0000000000006e04         cmp        dl, 0x5a
0000000000006e07         je         loc_6e10

0000000000006e09         cmp        bl, 0x74
0000000000006e0c         jne        loc_6e38

0000000000006e0e         nop

                     loc_6e10:
0000000000006e10         add        eax, 0x8                                    ; CODE XREF=printf_parse+488, printf_parse+493, printf_parse+503

                     loc_6e13:
0000000000006e13         movzx      ebx, byte [rbp]                             ; CODE XREF=printf_parse+539, printf_parse+547

                     loc_6e17:
0000000000006e17         add        rbp, 0x1                                    ; CODE XREF=printf_parse+469
0000000000006e1b         cmp        bl, 0x68
0000000000006e1e         jne        loc_6df0

0000000000006e20         mov        ecx, eax
0000000000006e22         mov        edx, esi
0000000000006e24         and        ecx, 0x1
0000000000006e27         shl        edx, cl
0000000000006e29         or         eax, edx
0000000000006e2b         jmp        loc_6e13
0000000000006e2d         align      16

                     loc_6e30:
0000000000006e30         or         eax, 0x4                                    ; CODE XREF=printf_parse+483
0000000000006e33         jmp        loc_6e13
0000000000006e35         align      8

                     loc_6e38:
0000000000006e38         lea        edx, dword [rbx-0x25]                       ; CODE XREF=printf_parse+508
0000000000006e3b         cmp        dl, 0x53
0000000000006e3e         ja         loc_745b

0000000000006e44         lea        rcx, qword [switch_table_8d1c]              ; switch_table_8d1c
0000000000006e4b         movzx      edx, dl
0000000000006e4e         movsxd     rdx, dword [rcx+rdx*4]
0000000000006e52         add        rdx, rcx
0000000000006e55         jmp        rdx                                         ; switch statement using table at 0x8d1c, with 84 cases, 0x6e57,0x6ecb,0x730c,0x7358,0x736b,0x73b8,0x73cb,0x73ec,0x73fc,0x7450,0x745b

                     loc_6e57:
0000000000006e57         mov        r11d, 0x10                                  ; case 46, CODE XREF=printf_parse+581
0000000000006e5d         mov        ebx, 0x73
0000000000006e62         nop        word [rax+rax]

                     loc_6e68:
0000000000006e68         cmp        r13, 0xffffffffffffffff                     ; CODE XREF=printf_parse+1797, printf_parse+1805, printf_parse+1820, printf_parse+1834, printf_parse+1853, printf_parse+1878, printf_parse+1892, printf_parse+1900, printf_parse+1915, printf_parse+1929, printf_parse+1952
0000000000006e6c         je         loc_7527

0000000000006e72         mov        qword [r12+0x50], r13

                     loc_6e77:
0000000000006e77         cmp        r9, r13                                     ; CODE XREF=printf_parse+2361
0000000000006e7a         mov        rcx, qword [r15+8]
0000000000006e7e         jbe        loc_74a0

                     loc_6e84:
0000000000006e84         mov        rax, qword [r15]                            ; CODE XREF=printf_parse+2322
0000000000006e87         mov        rdx, rax
0000000000006e8a         shl        rdx, 0x5
0000000000006e8e         add        rdx, rcx
0000000000006e91         cmp        rax, r13
0000000000006e94         ja         loc_6eb6

0000000000006e96         nop        word [cs:rax+rax]

                     loc_6ea0:
0000000000006ea0         add        rax, 0x1                                    ; CODE XREF=printf_parse+673
0000000000006ea4         mov        dword [rdx], 0x0
0000000000006eaa         add        rdx, 0x20
0000000000006eae         cmp        rax, r13
0000000000006eb1         jbe        loc_6ea0

0000000000006eb3         mov        qword [r15], rax

                     loc_6eb6:
0000000000006eb6         shl        r13, 0x5                                    ; CODE XREF=printf_parse+644
0000000000006eba         lea        rax, qword [rcx+r13]
0000000000006ebe         mov        edx, dword [rax]
0000000000006ec0         test       edx, edx
0000000000006ec2         jne        loc_7493

0000000000006ec8         mov        dword [rax], r11d

                     loc_6ecb:
0000000000006ecb         mov        byte [r12+0x48], bl                         ; case 0, CODE XREF=printf_parse+581, printf_parse+2182
0000000000006ed0         mov        rax, qword [r14]
0000000000006ed3         mov        qword [r12+8], rbp
0000000000006ed8         lea        rbx, qword [rax+1]
0000000000006edc         cmp        r10, rbx
0000000000006edf         mov        qword [r14], rbx
0000000000006ee2         ja         loc_6f70

0000000000006ee8         test       r10, r10
0000000000006eeb         js         loc_7897

0000000000006ef1         add        r10, r10
0000000000006ef4         movabs     rax, 0x2e8ba2e8ba2e8ba
0000000000006efe         cmp        r10, rax
0000000000006f01         ja         loc_7897

0000000000006f07         lea        rax, qword [r10+r10*4]
0000000000006f0b         mov        rdi, qword [r14+8]
0000000000006f0f         cmp        qword [rsp+0x88+var_60], rdi
0000000000006f14         mov        qword [rsp+0x88+var_48], r9
0000000000006f19         mov        qword [rsp+0x88+var_50], r10
0000000000006f1e         lea        rax, qword [r10+rax*2]
0000000000006f22         mov        qword [rsp+0x88+var_58], r8
0000000000006f27         lea        rsi, qword [rax*8]
0000000000006f2f         je         loc_75ed

0000000000006f35         call       j_realloc                                   ; realloc
0000000000006f3a         test       rax, rax
0000000000006f3d         mov        rcx, rax
0000000000006f40         mov        r8, qword [rsp+0x88+var_58]
0000000000006f45         mov        r10, qword [rsp+0x88+var_50]
0000000000006f4a         mov        r9, qword [rsp+0x88+var_48]
0000000000006f4f         je         loc_7897

0000000000006f55         mov        rax, qword [rsp+0x88+var_60]
0000000000006f5a         cmp        rax, qword [r14+8]
0000000000006f5e         mov        rbx, qword [r14]
0000000000006f61         je         loc_7610

                     loc_6f67:
0000000000006f67         mov        qword [r14+8], rcx                          ; CODE XREF=printf_parse+2621
0000000000006f6b         jmp        loc_6c88

                     loc_6f70:
0000000000006f70         mov        rcx, qword [r14+8]                          ; CODE XREF=printf_parse+722
0000000000006f74         jmp        loc_6c88

                     loc_6f79:
0000000000006f79         mov        rsi, qword [rsp+0x88+var_78]                ; CODE XREF=printf_parse+435
0000000000006f7e         mov        ecx, 0x1
0000000000006f83         mov        qword [r12+0x18], rbp
0000000000006f88         mov        qword [r12+0x20], rax
0000000000006f8d         test       rsi, rsi
0000000000006f90         cmovne     rcx, rsi
0000000000006f94         mov        qword [rsp+0x88+var_78], rcx
0000000000006f99         movzx      ecx, byte [rbp+1]
0000000000006f9d         lea        esi, dword [rcx-0x30]
0000000000006fa0         cmp        sil, 0x9
0000000000006fa4         jbe        loc_7285

                     loc_6faa:
0000000000006faa         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+1677
0000000000006faf         cmp        rsi, 0xffffffffffffffff
0000000000006fb3         lea        rdx, qword [rsi+1]
0000000000006fb7         mov        qword [r12+0x28], rsi
0000000000006fbc         je         loc_745b

0000000000006fc2         mov        rbx, qword [rsp+0x88+var_68]
0000000000006fc7         mov        rbp, rax
0000000000006fca         mov        qword [rsp+0x88+var_68], rdx

                     loc_6fcf:
0000000000006fcf         cmp        r9, rbx                                     ; CODE XREF=printf_parse+1783
0000000000006fd2         mov        rcx, qword [r15+8]
0000000000006fd6         ja         loc_7652

0000000000006fdc         add        r9, r9
0000000000006fdf         lea        rax, qword [rbx+1]
0000000000006fe3         cmp        r9, rbx
0000000000006fe6         cmovbe     r9, rax
0000000000006fea         movabs     rax, 0x7ffffffffffffff
0000000000006ff4         cmp        r9, rax
0000000000006ff7         ja         loc_789b

0000000000006ffd         mov        rsi, r9
0000000000007000         mov        qword [rsp+0x88+var_48], r9
0000000000007005         mov        qword [rsp+0x88+var_50], r10
000000000000700a         shl        rsi, 0x5
000000000000700e         cmp        qword [rsp+0x88+var_80], rcx
0000000000007013         mov        qword [rsp+0x88+var_58], r8
0000000000007018         je         loc_7731

000000000000701e         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
0000000000007021         call       j_realloc                                   ; realloc
0000000000007026         mov        rdx, qword [r15+8]
000000000000702a         mov        r8, qword [rsp+0x88+var_58]
000000000000702f         mov        rcx, rax
0000000000007032         mov        r10, qword [rsp+0x88+var_50]
0000000000007037         mov        r9, qword [rsp+0x88+var_48]

                     loc_703c:
000000000000703c         test       rcx, rcx                                    ; CODE XREF=printf_parse+2880
000000000000703f         je         loc_78f7

0000000000007045         cmp        qword [rsp+0x88+var_80], rdx
000000000000704a         mov        rax, qword [r15]
000000000000704d         je         loc_780b

                     loc_7053:
0000000000007053         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+3123

                     loc_7057:
0000000000007057         mov        rdx, rax                                    ; CODE XREF=printf_parse+2629
000000000000705a         shl        rdx, 0x5
000000000000705e         add        rdx, rcx
0000000000007061         cmp        rax, rbx
0000000000007064         ja         loc_7086

0000000000007066         nop        word [cs:rax+rax]

                     loc_7070:
0000000000007070         add        rax, 0x1                                    ; CODE XREF=printf_parse+1137
0000000000007074         mov        dword [rdx], 0x0
000000000000707a         add        rdx, 0x20
000000000000707e         cmp        rax, rbx
0000000000007081         jbe        loc_7070

0000000000007083         mov        qword [r15], rax

                     loc_7086:
0000000000007086         shl        rbx, 0x5                                    ; CODE XREF=printf_parse+1108
000000000000708a         lea        rax, qword [rcx+rbx]
000000000000708e         mov        edx, dword [rax]
0000000000007090         test       edx, edx
0000000000007092         jne        loc_756b

0000000000007098         mov        dword [rax], 0x5
000000000000709e         movzx      ebx, byte [rbp]
00000000000070a2         lea        rdx, qword [rbp+1]
00000000000070a6         cmp        bl, 0x2e
00000000000070a9         jne        loc_6dde

                     loc_70af:
00000000000070af         cmp        byte [rbp+1], 0x2a                          ; CODE XREF=printf_parse+456
00000000000070b3         mov        qword [r12+0x30], rbp
00000000000070b8         jne        loc_723e

00000000000070be         mov        rsi, qword [rsp+0x88+var_70]
00000000000070c3         lea        r11, qword [rbp+2]
00000000000070c7         mov        eax, 0x2
00000000000070cc         mov        qword [r12+0x38], r11
00000000000070d1         cmp        rsi, 0x2
00000000000070d5         cmovae     rax, rsi
00000000000070d9         mov        qword [rsp+0x88+var_70], rax
00000000000070de         movsx      eax, byte [rbp+2]
00000000000070e2         lea        edx, dword [rax-0x30]
00000000000070e5         cmp        dl, 0x9
00000000000070e8         jbe        loc_777c

                     loc_70ee:
00000000000070ee         mov        rbx, qword [r12+0x40]                       ; CODE XREF=printf_parse+2946
00000000000070f3         cmp        rbx, 0xffffffffffffffff
00000000000070f7         je         loc_7755

                     loc_70fd:
00000000000070fd         cmp        r9, rbx                                     ; CODE XREF=printf_parse+2919, printf_parse+3161
0000000000007100         mov        rcx, qword [r15+8]
0000000000007104         jbe        loc_766f

000000000000710a         mov        rax, qword [r15]

                     loc_710d:
000000000000710d         mov        rdx, rax                                    ; CODE XREF=printf_parse+2788
0000000000007110         shl        rdx, 0x5
0000000000007114         add        rdx, rcx
0000000000007117         cmp        rax, rbx
000000000000711a         ja         loc_7136

000000000000711c         nop        dword [rax]

                     loc_7120:
0000000000007120         add        rax, 0x1                                    ; CODE XREF=printf_parse+1313
0000000000007124         mov        dword [rdx], 0x0
000000000000712a         add        rdx, 0x20
000000000000712e         cmp        rax, rbx
0000000000007131         jbe        loc_7120

0000000000007133         mov        qword [r15], rax

                     loc_7136:
0000000000007136         shl        rbx, 0x5                                    ; CODE XREF=printf_parse+1290
000000000000713a         lea        rax, qword [rcx+rbx]
000000000000713e         mov        edx, dword [rax]
0000000000007140         test       edx, edx
0000000000007142         jne        loc_765a

0000000000007148         mov        dword [rax], 0x5
000000000000714e         mov        rbp, r11
0000000000007151         movzx      ebx, byte [r11]
0000000000007155         jmp        loc_6dde

                     loc_715a:
000000000000715a         mov        rax, rbp                                    ; CODE XREF=printf_parse+274
000000000000715d         nop        dword [rax]

                     loc_7160:
0000000000007160         add        rax, 0x1                                    ; CODE XREF=printf_parse+1373
0000000000007164         movzx      edx, byte [rax]
0000000000007167         lea        ecx, dword [rdx-0x30]
000000000000716a         cmp        cl, 0x9
000000000000716d         jbe        loc_7160

000000000000716f         cmp        dl, 0x24
0000000000007172         mov        r13, r8
0000000000007175         jne        loc_6d5e

000000000000717b         xor        edx, edx

                     loc_717d:
000000000000717d         movsx      eax, bl                                     ; CODE XREF=printf_parse+1463
0000000000007180         movabs     rdi, 0x1999999999999999
000000000000718a         mov        rsi, r8
000000000000718d         sub        eax, 0x30
0000000000007190         cmp        rdx, rdi
0000000000007193         cdqe
0000000000007195         ja         loc_719e

0000000000007197         lea        rsi, qword [rdx+rdx*4]
000000000000719b         add        rsi, rsi

                     loc_719e:
000000000000719e         mov        rcx, rbp                                    ; CODE XREF=printf_parse+1413

                     loc_71a1:
00000000000071a1         add        rax, rsi                                    ; CODE XREF=printf_parse+2390
00000000000071a4         movzx      ebx, byte [rbp+1]
00000000000071a8         setb       sil
00000000000071ac         add        rbp, 0x1
00000000000071b0         mov        rdx, rax
00000000000071b3         movzx      esi, sil
00000000000071b7         test       rsi, rsi
00000000000071ba         lea        edi, dword [rbx-0x30]
00000000000071bd         jne        loc_754e

00000000000071c3         cmp        dil, 0x9
00000000000071c7         jbe        loc_717d

00000000000071c9         mov        r13, rax
00000000000071cc         sub        r13, 0x1
00000000000071d0         cmp        r13, 0xfffffffffffffffd
00000000000071d4         ja         loc_745b

00000000000071da         lea        rbp, qword [rcx+2]
00000000000071de         movzx      ebx, byte [rcx+2]
00000000000071e2         jmp        loc_6d5e

                     loc_71e7:
00000000000071e7         mov        qword [r12+0x18], rbp                       ; CODE XREF=printf_parse+447
00000000000071ec         movzx      edi, byte [rbp]
00000000000071f0         mov        rsi, rbp
00000000000071f3         lea        ecx, dword [rdi-0x30]
00000000000071f6         cmp        cl, 0x9
00000000000071f9         jbe        loc_7207

00000000000071fb         jmp        loc_7230
00000000000071fd         align      512

                     loc_7200:
0000000000007200         mov        rbp, rax                                    ; CODE XREF=printf_parse+1536
0000000000007203         add        rax, 0x1

                     loc_7207:
0000000000007207         movzx      edi, byte [rax]                             ; CODE XREF=printf_parse+1513
000000000000720a         lea        edx, dword [rdi-0x30]
000000000000720d         cmp        dl, 0x9
0000000000007210         jbe        loc_7200

0000000000007212         mov        rcx, rax
0000000000007215         lea        rdx, qword [rbp+2]
0000000000007219         mov        rbp, rax
000000000000721c         sub        rcx, rsi
000000000000721f         mov        rsi, qword [rsp+0x88+var_78]
0000000000007224         cmp        rsi, rcx
0000000000007227         cmovae     rcx, rsi
000000000000722b         mov        qword [rsp+0x88+var_78], rcx

                     loc_7230:
0000000000007230         mov        qword [r12+0x20], rbp                       ; CODE XREF=printf_parse+1515
0000000000007235         movzx      ebx, byte [rbp]
0000000000007239         jmp        loc_6dd5

                     loc_723e:
000000000000723e         movzx      eax, byte [rbp+1]                           ; CODE XREF=printf_parse+1192
0000000000007242         sub        eax, 0x30
0000000000007245         cmp        al, 0x9
0000000000007247         ja         loc_725e

0000000000007249         nop        dword [rax]

                     loc_7250:
0000000000007250         add        rdx, 0x1                                    ; CODE XREF=printf_parse+1612
0000000000007254         movzx      eax, byte [rdx]
0000000000007257         sub        eax, 0x30
000000000000725a         cmp        al, 0x9
000000000000725c         jbe        loc_7250

                     loc_725e:
000000000000725e         mov        rsi, qword [rsp+0x88+var_70]                ; CODE XREF=printf_parse+1591
0000000000007263         mov        rax, rdx
0000000000007266         mov        qword [r12+0x38], rdx
000000000000726b         sub        rax, rbp
000000000000726e         movzx      ebx, byte [rdx]
0000000000007271         mov        rbp, rdx
0000000000007274         cmp        rsi, rax
0000000000007277         cmovae     rax, rsi
000000000000727b         mov        qword [rsp+0x88+var_70], rax
0000000000007280         jmp        loc_6dde

                     loc_7285:
0000000000007285         mov        rsi, rax                                    ; CODE XREF=printf_parse+916

                     loc_7288:
0000000000007288         add        rsi, 0x1                                    ; CODE XREF=printf_parse+1671
000000000000728c         movzx      edi, byte [rsi]
000000000000728f         lea        r11d, dword [rdi-0x30]
0000000000007293         cmp        r11b, 0x9
0000000000007297         jbe        loc_7288

0000000000007299         cmp        dil, 0x24
000000000000729d         jne        loc_6faa

00000000000072a3         xor        esi, esi

                     loc_72a5:
00000000000072a5         movsx      eax, cl                                     ; CODE XREF=printf_parse+1758
00000000000072a8         movabs     rdi, 0x1999999999999999
00000000000072b2         mov        rcx, r8
00000000000072b5         sub        eax, 0x30
00000000000072b8         cmp        rsi, rdi
00000000000072bb         cdqe
00000000000072bd         ja         loc_72c6

00000000000072bf         lea        rcx, qword [rsi+rsi*4]
00000000000072c3         add        rcx, rcx

                     loc_72c6:
00000000000072c6         mov        rbp, rdx                                    ; CODE XREF=printf_parse+1709

                     loc_72c9:
00000000000072c9         xor        r11d, r11d                                  ; CODE XREF=printf_parse+3062
00000000000072cc         add        rax, rcx
00000000000072cf         movzx      ecx, byte [rdx+1]
00000000000072d3         setb       r11b
00000000000072d7         add        rdx, 0x1
00000000000072db         mov        rsi, rax
00000000000072de         test       r11, r11
00000000000072e1         lea        edi, dword [rcx-0x30]
00000000000072e4         jne        loc_77ee

00000000000072ea         cmp        dil, 0x9
00000000000072ee         jbe        loc_72a5

00000000000072f0         lea        rbx, qword [rax-1]
00000000000072f4         cmp        rbx, 0xfffffffffffffffd
00000000000072f8         ja         loc_745b

00000000000072fe         mov        qword [r12+0x28], rbx
0000000000007303         add        rbp, 0x2
0000000000007307         jmp        loc_6fcf

                     loc_730c:
000000000000730c         cmp        eax, 0xf                                    ; case 73, CODE XREF=printf_parse+581
000000000000730f         mov        r11d, 0x16
0000000000007315         jg         loc_6e68

000000000000731b         test       al, 0x4
000000000000731d         jne        loc_6e68

0000000000007323         cmp        eax, 0x7
0000000000007326         mov        r11d, 0x15
000000000000732c         jg         loc_6e68

0000000000007332         test       al, 0x2
0000000000007334         mov        r11d, 0x12
000000000000733a         jne        loc_6e68

0000000000007340         xor        r11d, r11d
0000000000007343         test       al, 0x1
0000000000007345         sete       r11b
0000000000007349         add        r11d, 0x13
000000000000734d         jmp        loc_6e68
0000000000007352         align      8

                     loc_7358:
0000000000007358         xor        r11d, r11d                                  ; case 62, CODE XREF=printf_parse+581
000000000000735b         cmp        eax, 0x7
000000000000735e         setg       r11b
0000000000007362         add        r11d, 0xd
0000000000007366         jmp        loc_6e68

                     loc_736b:
000000000000736b         cmp        eax, 0xf                                    ; case 68, CODE XREF=printf_parse+581
000000000000736e         mov        r11d, 0x9
0000000000007374         jg         loc_6e68

000000000000737a         test       al, 0x4
000000000000737c         jne        loc_6e68

0000000000007382         cmp        eax, 0x7
0000000000007385         mov        r11d, 0x7
000000000000738b         jg         loc_6e68

0000000000007391         test       al, 0x2
0000000000007393         mov        r11d, 0x1
0000000000007399         jne        loc_6e68

000000000000739f         and        eax, 0x1
00000000000073a2         cmp        eax, 0x1
00000000000073a5         sbb        r11d, r11d
00000000000073a8         and        r11d, 0x2
00000000000073ac         add        r11d, 0x3
00000000000073b0         jmp        loc_6e68
00000000000073b5         align      8

                     loc_73b8:
00000000000073b8         xor        r11d, r11d                                  ; case 78, CODE XREF=printf_parse+581
00000000000073bb         cmp        eax, 0x7
00000000000073be         setg       r11b
00000000000073c2         add        r11d, 0xf
00000000000073c6         jmp        loc_6e68

                     loc_73cb:
00000000000073cb         cmp        eax, 0xf                                    ; case 66, CODE XREF=printf_parse+581
00000000000073ce         mov        r11d, 0xc
00000000000073d4         jg         loc_6e68

00000000000073da         xor        r11d, r11d
00000000000073dd         test       al, 0x4
00000000000073df         setne      r11b
00000000000073e3         add        r11d, 0xb
00000000000073e7         jmp        loc_6e68

                     loc_73ec:
00000000000073ec         mov        r11d, 0xe                                   ; case 30, CODE XREF=printf_parse+581
00000000000073f2         mov        ebx, 0x63
00000000000073f7         jmp        loc_6e68

                     loc_73fc:
00000000000073fc         cmp        eax, 0xf                                    ; case 83, CODE XREF=printf_parse+581
00000000000073ff         mov        r11d, 0xa
0000000000007405         jg         loc_6e68

000000000000740b         test       al, 0x4
000000000000740d         jne        loc_6e68

0000000000007413         cmp        eax, 0x7
0000000000007416         mov        r11d, 0x8
000000000000741c         jg         loc_6e68

0000000000007422         test       al, 0x2
0000000000007424         mov        r11d, 0x2
000000000000742a         jne        loc_6e68

0000000000007430         and        eax, 0x1
0000000000007433         cmp        eax, 0x1
0000000000007436         sbb        r11d, r11d
0000000000007439         and        r11d, 0x2
000000000000743d         add        r11d, 0x4
0000000000007441         jmp        loc_6e68
0000000000007446         align      16

                     loc_7450:
0000000000007450         mov        r11d, 0x11                                  ; case 75, CODE XREF=printf_parse+581
0000000000007456         jmp        loc_6e68

                     loc_745b:
000000000000745b         mov        rcx, qword [r15+8]                          ; case 82, CODE XREF=printf_parse+558, printf_parse+581, printf_parse+940, printf_parse+1476, printf_parse+1768, printf_parse+2345, printf_parse+2370, printf_parse+2903, printf_parse+3019, printf_parse+3042, printf_parse+3146

                     loc_745f:
000000000000745f         cmp        qword [rsp+0x88+var_80], rcx                ; CODE XREF=printf_parse+2188, printf_parse+2398, printf_parse+2637
0000000000007464         je         loc_746e

0000000000007466         mov        rdi, rcx                                    ; argument "__ptr" for method j_free
0000000000007469         call       j_free                                      ; free

                     loc_746e:
000000000000746e         mov        rdi, qword [r14+8]                          ; CODE XREF=printf_parse+2132
0000000000007472         cmp        qword [rsp+0x88+var_60], rdi
0000000000007477         je         loc_747e

0000000000007479         call       j_free                                      ; free

                     loc_747e:
000000000000747e         call       j___errno_location                          ; __errno_location, CODE XREF=printf_parse+2151
0000000000007483         mov        dword [rax], 0x16
0000000000007489         mov        eax, 0xffffffff
000000000000748e         jmp        loc_6cb2

                     loc_7493:
0000000000007493         cmp        edx, r11d                                   ; CODE XREF=printf_parse+690
0000000000007496         je         loc_6ecb

000000000000749c         jmp        loc_745f
000000000000749e         align      32

                     loc_74a0:
00000000000074a0         add        r9, r9                                      ; CODE XREF=printf_parse+622
00000000000074a3         lea        rax, qword [r13+1]
00000000000074a7         cmp        r9, r13
00000000000074aa         cmovbe     r9, rax
00000000000074ae         movabs     rax, 0x7ffffffffffffff
00000000000074b8         cmp        r9, rax
00000000000074bb         ja         loc_789b

00000000000074c1         mov        rsi, r9
00000000000074c4         mov        qword [rsp+0x88+var_40], r9
00000000000074c9         mov        qword [rsp+0x88+var_48], r10
00000000000074ce         shl        rsi, 0x5
00000000000074d2         cmp        qword [rsp+0x88+var_80], rcx
00000000000074d7         mov        qword [rsp+0x88+var_50], r8
00000000000074dc         mov        dword [rsp+0x88+var_58], r11d
00000000000074e1         je         loc_7581

00000000000074e7         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
00000000000074ea         call       j_realloc                                   ; realloc
00000000000074ef         test       rax, rax
00000000000074f2         mov        rcx, rax
00000000000074f5         mov        r11d, dword [rsp+0x88+var_58]
00000000000074fa         mov        r8, qword [rsp+0x88+var_50]
00000000000074ff         mov        r10, qword [rsp+0x88+var_48]
0000000000007504         mov        r9, qword [rsp+0x88+var_40]
0000000000007509         je         loc_7897

000000000000750f         mov        rax, qword [rsp+0x88+var_80]
0000000000007514         cmp        rax, qword [r15+8]
0000000000007518         je         loc_75a9

                     loc_751e:
000000000000751e         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+2520
0000000000007522         jmp        loc_6e84

                     loc_7527:
0000000000007527         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+604
000000000000752c         cmp        rsi, 0xffffffffffffffff
0000000000007530         lea        rax, qword [rsi+1]
0000000000007534         mov        qword [r12+0x50], rsi
0000000000007539         je         loc_745b

000000000000753f         mov        r13, qword [rsp+0x88+var_68]
0000000000007544         mov        qword [rsp+0x88+var_68], rax
0000000000007549         jmp        loc_6e77

                     loc_754e:
000000000000754e         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+1453
0000000000007552         ja         loc_745b

0000000000007558         movsx      eax, bl
000000000000755b         mov        rsi, r8
000000000000755e         mov        rcx, rbp
0000000000007561         sub        eax, 0x30
0000000000007564         cdqe
0000000000007566         jmp        loc_71a1

                     loc_756b:
000000000000756b         cmp        edx, 0x5                                    ; CODE XREF=printf_parse+1154
000000000000756e         jne        loc_745f

0000000000007574         movzx      ebx, byte [rbp]
0000000000007578         lea        rdx, qword [rbp+1]
000000000000757c         jmp        loc_6dd5

                     loc_7581:
0000000000007581         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+2257
0000000000007584         call       j_malloc                                    ; malloc
0000000000007589         test       rax, rax
000000000000758c         mov        rcx, rax
000000000000758f         mov        r11d, dword [rsp+0x88+var_58]
0000000000007594         mov        r8, qword [rsp+0x88+var_50]
0000000000007599         mov        r10, qword [rsp+0x88+var_48]
000000000000759e         mov        r9, qword [rsp+0x88+var_40]
00000000000075a3         je         loc_770c

                     loc_75a9:
00000000000075a9         mov        rdx, qword [r15]                            ; CODE XREF=printf_parse+2312
00000000000075ac         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy
00000000000075b1         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
00000000000075b4         mov        qword [rsp+0x88+var_40], r9
00000000000075b9         mov        qword [rsp+0x88+var_48], r10
00000000000075be         mov        qword [rsp+0x88+var_50], r8
00000000000075c3         mov        dword [rsp+0x88+var_58], r11d
00000000000075c8         shl        rdx, 0x5                                    ; argument "__n" for method j_memcpy
00000000000075cc         call       j_memcpy                                    ; memcpy
00000000000075d1         mov        r9, qword [rsp+0x88+var_40]
00000000000075d6         mov        r10, qword [rsp+0x88+var_48]
00000000000075db         mov        rcx, rax
00000000000075de         mov        r8, qword [rsp+0x88+var_50]
00000000000075e3         mov        r11d, dword [rsp+0x88+var_58]
00000000000075e8         jmp        loc_751e

                     loc_75ed:
00000000000075ed         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+799
00000000000075f0         call       j_malloc                                    ; malloc
00000000000075f5         test       rax, rax
00000000000075f8         mov        rcx, rax
00000000000075fb         mov        r8, qword [rsp+0x88+var_58]
0000000000007600         mov        r10, qword [rsp+0x88+var_50]
0000000000007605         mov        r9, qword [rsp+0x88+var_48]
000000000000760a         je         loc_76f9

                     loc_7610:
0000000000007610         lea        rax, qword [rbx+rbx*4]                      ; CODE XREF=printf_parse+849
0000000000007614         mov        rsi, qword [rsp+0x88+var_60]                ; argument "__src" for method j_memcpy
0000000000007619         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
000000000000761c         mov        qword [rsp+0x88+var_48], r9
0000000000007621         mov        qword [rsp+0x88+var_50], r10
0000000000007626         lea        rdx, qword [rbx+rax*2]
000000000000762a         mov        qword [rsp+0x88+var_58], r8
000000000000762f         shl        rdx, 0x3                                    ; argument "__n" for method j_memcpy
0000000000007633         call       j_memcpy                                    ; memcpy
0000000000007638         mov        rbx, qword [r14]
000000000000763b         mov        rcx, rax
000000000000763e         mov        r9, qword [rsp+0x88+var_48]
0000000000007643         mov        r10, qword [rsp+0x88+var_50]
0000000000007648         mov        r8, qword [rsp+0x88+var_58]
000000000000764d         jmp        loc_6f67

                     loc_7652:
0000000000007652         mov        rax, qword [r15]                            ; CODE XREF=printf_parse+966
0000000000007655         jmp        loc_7057

                     loc_765a:
000000000000765a         cmp        edx, 0x5                                    ; CODE XREF=printf_parse+1330
000000000000765d         jne        loc_745f

0000000000007663         movzx      ebx, byte [r11]
0000000000007667         mov        rbp, r11
000000000000766a         jmp        loc_6dde

                     loc_766f:
000000000000766f         add        r9, r9                                      ; CODE XREF=printf_parse+1268
0000000000007672         lea        rax, qword [rbx+1]
0000000000007676         cmp        r9, rbx
0000000000007679         cmovbe     r9, rax
000000000000767d         movabs     rax, 0x7ffffffffffffff
0000000000007687         cmp        r9, rax
000000000000768a         ja         loc_789b

0000000000007690         mov        rsi, r9
0000000000007693         mov        qword [rsp+0x88+var_40], r9
0000000000007698         mov        qword [rsp+0x88+var_48], r10
000000000000769d         shl        rsi, 0x5
00000000000076a1         cmp        qword [rsp+0x88+var_80], rcx
00000000000076a6         mov        qword [rsp+0x88+var_50], r8
00000000000076ab         mov        qword [rsp+0x88+var_58], r11
00000000000076b0         je         loc_786e

00000000000076b6         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
00000000000076b9         call       j_realloc                                   ; realloc
00000000000076be         mov        rdx, qword [r15+8]
00000000000076c2         mov        r11, qword [rsp+0x88+var_58]
00000000000076c7         mov        rcx, rax
00000000000076ca         mov        r8, qword [rsp+0x88+var_50]
00000000000076cf         mov        r10, qword [rsp+0x88+var_48]
00000000000076d4         mov        r9, qword [rsp+0x88+var_40]

                     loc_76d9:
00000000000076d9         test       rcx, rcx                                    ; CODE XREF=printf_parse+3202
00000000000076dc         je         loc_78f7

00000000000076e2         cmp        qword [rsp+0x88+var_80], rdx
00000000000076e7         mov        rax, qword [r15]
00000000000076ea         je         loc_78b0

                     loc_76f0:
00000000000076f0         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+3298
00000000000076f4         jmp        loc_710d

                     loc_76f9:
00000000000076f9         mov        rcx, qword [r15+8]                          ; CODE XREF=printf_parse+2554
00000000000076fd         cmp        qword [rsp+0x88+var_80], rcx
0000000000007702         je         loc_771c

                     loc_7704:
0000000000007704         mov        rdi, rcx                                    ; argument "__ptr" for method j_free, CODE XREF=printf_parse+3216
0000000000007707         call       j_free                                      ; free

                     loc_770c:
000000000000770c         mov        rdi, qword [r14+8]                          ; CODE XREF=printf_parse+2451, printf_parse+3222
0000000000007710         cmp        qword [rsp+0x88+var_60], rdi
0000000000007715         je         loc_771c

0000000000007717         call       j_free                                      ; free

                     loc_771c:
000000000000771c         call       j___errno_location                          ; __errno_location, CODE XREF=printf_parse+2802, printf_parse+2821
0000000000007721         mov        dword [rax], 0xc
0000000000007727         mov        eax, 0xffffffff
000000000000772c         jmp        loc_6cb2

                     loc_7731:
0000000000007731         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+1032
0000000000007734         call       j_malloc                                    ; malloc
0000000000007739         mov        rdx, qword [rsp+0x88+var_80]
000000000000773e         mov        rcx, rax
0000000000007741         mov        r9, qword [rsp+0x88+var_48]
0000000000007746         mov        r10, qword [rsp+0x88+var_50]
000000000000774b         mov        r8, qword [rsp+0x88+var_58]
0000000000007750         jmp        loc_703c

                     loc_7755:
0000000000007755         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+1255
000000000000775a         cmp        rsi, 0xffffffffffffffff
000000000000775e         lea        rax, qword [rsi+1]
0000000000007762         mov        qword [r12+0x40], rsi
0000000000007767         je         loc_745b

000000000000776d         mov        rbx, qword [rsp+0x88+var_68]
0000000000007772         mov        qword [rsp+0x88+var_68], rax
0000000000007777         jmp        loc_70fd

                     loc_777c:
000000000000777c         mov        rdx, r11                                    ; CODE XREF=printf_parse+1240

                     loc_777f:
000000000000777f         add        rdx, 0x1                                    ; CODE XREF=printf_parse+2941
0000000000007783         movzx      ecx, byte [rdx]
0000000000007786         lea        esi, dword [rcx-0x30]
0000000000007789         cmp        sil, 0x9
000000000000778d         jbe        loc_777f

000000000000778f         cmp        cl, 0x24
0000000000007792         jne        loc_70ee

0000000000007798         xor        ecx, ecx

                     loc_779a:
000000000000779a         movabs     rsi, 0x1999999999999999                     ; CODE XREF=printf_parse+3132
00000000000077a4         sub        eax, 0x30
00000000000077a7         mov        rdx, r8
00000000000077aa         cmp        rcx, rsi
00000000000077ad         cdqe
00000000000077af         ja         loc_77b8

00000000000077b1         lea        rdx, qword [rcx+rcx*4]
00000000000077b5         add        rdx, rdx

                     loc_77b8:
00000000000077b8         mov        rsi, r11                                    ; CODE XREF=printf_parse+2975

                     loc_77bb:
00000000000077bb         xor        ebx, ebx                                    ; CODE XREF=printf_parse+3036
00000000000077bd         add        rdx, rax
00000000000077c0         movsx      eax, byte [r11+1]
00000000000077c5         setb       bl
00000000000077c8         add        r11, 0x1
00000000000077cc         mov        rcx, rdx
00000000000077cf         test       rbx, rbx
00000000000077d2         lea        edi, dword [rax-0x30]
00000000000077d5         je         loc_7848

00000000000077d7         cmp        dil, 0x9
00000000000077db         ja         loc_745b

00000000000077e1         sub        eax, 0x30
00000000000077e4         mov        rdx, r8
00000000000077e7         mov        rsi, r11
00000000000077ea         cdqe
00000000000077ec         jmp        loc_77bb

                     loc_77ee:
00000000000077ee         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+1748
00000000000077f2         ja         loc_745b

00000000000077f8         movsx      eax, cl
00000000000077fb         mov        rbp, rdx
00000000000077fe         mov        rcx, r8
0000000000007801         sub        eax, 0x30
0000000000007804         cdqe
0000000000007806         jmp        loc_72c9

                     loc_780b:
000000000000780b         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy, CODE XREF=printf_parse+1085
0000000000007810         shl        rax, 0x5
0000000000007814         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
0000000000007817         mov        rdx, rax                                    ; argument "__n" for method j_memcpy
000000000000781a         mov        qword [rsp+0x88+var_48], r9
000000000000781f         mov        qword [rsp+0x88+var_50], r10
0000000000007824         mov        qword [rsp+0x88+var_58], r8
0000000000007829         call       j_memcpy                                    ; memcpy
000000000000782e         mov        r9, qword [rsp+0x88+var_48]
0000000000007833         mov        rcx, rax
0000000000007836         mov        r10, qword [rsp+0x88+var_50]
000000000000783b         mov        rax, qword [r15]
000000000000783e         mov        r8, qword [rsp+0x88+var_58]
0000000000007843         jmp        loc_7053

                     loc_7848:
0000000000007848         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+3013
000000000000784c         jbe        loc_779a

0000000000007852         lea        rbx, qword [rdx-1]
0000000000007856         cmp        rbx, 0xfffffffffffffffd
000000000000785a         ja         loc_745b

0000000000007860         mov        qword [r12+0x40], rbx
0000000000007865         lea        r11, qword [rsi+2]
0000000000007869         jmp        loc_70fd

                     loc_786e:
000000000000786e         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+2720
0000000000007871         call       j_malloc                                    ; malloc
0000000000007876         mov        rdx, qword [rsp+0x88+var_80]
000000000000787b         mov        rcx, rax
000000000000787e         mov        r9, qword [rsp+0x88+var_40]
0000000000007883         mov        r10, qword [rsp+0x88+var_48]
0000000000007888         mov        r8, qword [rsp+0x88+var_50]
000000000000788d         mov        r11, qword [rsp+0x88+var_58]
0000000000007892         jmp        loc_76d9

                     loc_7897:
0000000000007897         mov        rcx, qword [r15+8]                          ; CODE XREF=printf_parse+731, printf_parse+753, printf_parse+831, printf_parse+2297

                     loc_789b:
000000000000789b         cmp        qword [rsp+0x88+var_80], rcx                ; CODE XREF=printf_parse+999, printf_parse+2219, printf_parse+2682, printf_parse+3306
00000000000078a0         jne        loc_7704

00000000000078a6         jmp        loc_770c
00000000000078ab         align      16

                     loc_78b0:
00000000000078b0         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy, CODE XREF=printf_parse+2778
00000000000078b5         shl        rax, 0x5
00000000000078b9         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
00000000000078bc         mov        rdx, rax                                    ; argument "__n" for method j_memcpy
00000000000078bf         mov        qword [rsp+0x88+var_40], r9
00000000000078c4         mov        qword [rsp+0x88+var_48], r10
00000000000078c9         mov        qword [rsp+0x88+var_50], r8
00000000000078ce         mov        qword [rsp+0x88+var_58], r11
00000000000078d3         call       j_memcpy                                    ; memcpy
00000000000078d8         mov        r9, qword [rsp+0x88+var_40]
00000000000078dd         mov        rcx, rax
00000000000078e0         mov        r10, qword [rsp+0x88+var_48]
00000000000078e5         mov        rax, qword [r15]
00000000000078e8         mov        r8, qword [rsp+0x88+var_50]
00000000000078ed         mov        r11, qword [rsp+0x88+var_58]
00000000000078f2         jmp        loc_76f0

                     loc_78f7:
00000000000078f7         mov        rcx, rdx                                    ; CODE XREF=printf_parse+1071, printf_parse+2764
00000000000078fa         jmp        loc_789b
00000000000078fc         align      256                                         ; End of unwind block (FDE at 0x9e0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000007900         push       r15                                         ; Begin of unwind block (FDE at 0x9e5c), DATA XREF=_start+22
0000000000007902         push       r14
0000000000007904         mov        r15, rdx
0000000000007907         push       r13
0000000000007909         push       r12
000000000000790b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000007912         push       rbp
0000000000007913         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000791a         push       rbx
000000000000791b         mov        r13d, edi
000000000000791e         mov        r14, rsi
0000000000007921         sub        rbp, r12
0000000000007924         sub        rsp, 0x8
0000000000007928         sar        rbp, 0x3
000000000000792c         call       _init                                       ; _init
0000000000007931         test       rbp, rbp
0000000000007934         je         loc_7956

0000000000007936         xor        ebx, ebx
0000000000007938         nop        dword [rax+rax]

                     loc_7940:
0000000000007940         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000007943         mov        rsi, r14
0000000000007946         mov        edi, r13d
0000000000007949         call       qword [r12+rbx*8]
000000000000794d         add        rbx, 0x1
0000000000007951         cmp        rbp, rbx
0000000000007954         jne        loc_7940

                     loc_7956:
0000000000007956         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
000000000000795a         pop        rbx
000000000000795b         pop        rbp
000000000000795c         pop        r12
000000000000795e         pop        r13
0000000000007960         pop        r14
0000000000007962         pop        r15
0000000000007964         ret
                        ; endp
0000000000007965         align      16                                          ; End of unwind block (FDE at 0x9e5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000007970         ret                                                    ; Begin of unwind block (FDE at 0x9ea4), DATA XREF=_start+15
                        ; endp
0000000000007972         align      128                                         ; End of unwind block (FDE at 0x9ea4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000007980         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x9ebc), __dso_handle, CODE XREF=main+131
0000000000007987         xor        esi, esi
0000000000007989         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000798e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x9ebc)
000000000000798f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x7990; 0x7999[ (9 bytes)
        ; File offset : [31120; 31129[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000007990         sub        rsp, 0x8
0000000000007994         add        rsp, 0x8
0000000000007998         ret
                        ; endp
0000000000007999         db  0x00 ; '.'
000000000000799a         db  0x00 ; '.'
000000000000799b         db  0x00 ; '.'
000000000000799c         db  0x00 ; '.'
000000000000799d         db  0x00 ; '.'
000000000000799e         db  0x00 ; '.'
000000000000799f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x79a0; 0x8e6c[ (5324 bytes)
        ; File offset : [31136; 36460[ (5324 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
00000000000079a0         db  0x01 ; '.'
00000000000079a1         db  0x00 ; '.'
00000000000079a2         db  0x02 ; '.'
00000000000079a3         db  0x00 ; '.'
                     aStdbuf:
00000000000079a4         db         "stdbuf", 0                                 ; DATA XREF=main+225, usage+453, usage+764, usage+948, usage+967, usage+1001
                     aUsageSOptionCo:
00000000000079ab         db         "Usage: %s OPTION... COMMAND\n", 0          ; DATA XREF=usage+93
00000000000079c8         db  0x5b ; '['                                         ; DATA XREF=usage+465
00000000000079c9         db  0x00 ; '.'
                     aTestInvocation:
00000000000079ca         db         "test invocation", 0                        ; DATA XREF=usage+504
                     aMulticallInvoc:
00000000000079da         db         "Multi-call invocation", 0                  ; DATA XREF=usage+552
                     aSha224sum:
00000000000079f0         db         "sha224sum", 0                              ; DATA XREF=usage+569
                     aSha2Utilities:
00000000000079fa         db         "sha2 utilities", 0                         ; DATA XREF=usage+581
                     aSha256sum:
0000000000007a09         db         "sha256sum", 0                              ; DATA XREF=usage+472
                     aSha384sum:
0000000000007a13         db         "sha384sum", 0                              ; DATA XREF=usage+516
                     aSha512sum:
0000000000007a1d         db         "sha512sum", 0                              ; DATA XREF=usage+540
                     aNsOnlineHelpSn:
0000000000007a27         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+650
0000000000007a3e         db  0x47 ; 'G'                                         ; DATA XREF=main+218, usage+678, usage+871, emit_bug_reporting_address+68
0000000000007a3f         db  0x4e ; 'N'
0000000000007a40         db  0x55 ; 'U'
0000000000007a41         db  0x20 ; ' '
                     aCoreutils:
0000000000007a42         db         "coreutils", 0                              ; DATA XREF=main+90, main+102, usage+528
0000000000007a4c         db  0x65 ; 'e'                                         ; DATA XREF=usage+717, usage+910
0000000000007a4d         db  0x6e ; 'n'
0000000000007a4e         db  0x5f ; '_'
0000000000007a4f         db  0x00 ; '.'
                     aFullDocumentat:
0000000000007a50         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+745, usage+934
                     aUsrlocalsharel:
0000000000007a6b         db         "/usr/local/share/locale", 0                ; DATA XREF=main+83
                     aEgkkmptyz0:
0000000000007a83         db         "EGkKMPTYZ0", 0                             ; DATA XREF=main+405
                     aInvalidModeS:
0000000000007a8e         db         "invalid mode %s", 0                        ; DATA XREF=main+1533
                     aPadraigBrady:
0000000000007a9e         db         "Padraig Brady", 0                          ; DATA XREF=main+211
0000000000007aac         db  0x2b ; '+'                                         ; DATA XREF=main+150
0000000000007aad         db  0x69 ; 'i'
0000000000007aae         db  0x3a ; ':'
0000000000007aaf         db  0x6f ; 'o'
0000000000007ab0         db  0x3a ; ':'
0000000000007ab1         db  0x65 ; 'e'
0000000000007ab2         db  0x3a ; ':'                                         ; DATA XREF=main+1336, main+1348
0000000000007ab3         db  0x00 ; '.'
                     aMissingOperand:
0000000000007ab4         db         "missing operand", 0                        ; DATA XREF=main+1592
                     aStdbuf_7ac4:        // aStdbuf
0000000000007ac4         db         "_STDBUF_", 0                               ; DATA XREF=main+632, main+1183
                     aScl:
0000000000007acd         db         "%s%c=L", 0                                 ; DATA XREF=main+1190
                     aSclu:
0000000000007ad4         db         "%s%c=%lu", 0                               ; DATA XREF=main+639
                     aProcselfexe:
0000000000007add         db         "/proc/self/exe", 0                         ; DATA XREF=main+1212
0000000000007aec         db  0x50 ; 'P'                                         ; DATA XREF=main+1313
0000000000007aed         db  0x41 ; 'A'
0000000000007aee         db  0x54 ; 'T'
0000000000007aef         db  0x48 ; 'H'
0000000000007af0         db  0x00 ; '.'
                     aUsrlocallibcor:
0000000000007af1         db         "/usr/local/lib/coreutils", 0               ; DATA XREF=main+1289
                     aLdpreload:
0000000000007b0a         db         "LD_PRELOAD", 0                             ; DATA XREF=main+766, main+964, main+1260
                     aUsrlocallibexe:
0000000000007b15         db         "/usr/local/libexec/coreutils", 0           ; DATA XREF=main+832
                     aLibstdbufso:
0000000000007b32         db         "libstdbuf.so", 0                           ; DATA XREF=main+783, main+924, main+1674
                     aSs:
0000000000007b3f         db         "%s/%s", 0                                  ; DATA XREF=main+790
                     aFailedToFindS:
0000000000007b45         db         "failed to find %s", 0                      ; DATA XREF=main+1686
                     aSss:
0000000000007b57         db         "%s=%s:%s", 0                               ; DATA XREF=main+971
                     aSs_7b60:        // aSs
0000000000007b60         db         "%s=%s", 0                                  ; DATA XREF=main+1267
                     aFailedToRunCom:
0000000000007b66         db         "failed to run command %s", 0               ; DATA XREF=main+1071
                     aInput:
0000000000007b7f         db         "input", 0
                     aOutput:
0000000000007b85         db         "output", 0
                     aHelp:
0000000000007b8c         db         "help", 0
                     aVersion:
0000000000007b91         db         "version", 0
0000000000007b99         align      32
                     aTrySHelpForMor:
0000000000007ba0         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000007bc7         align      8
                     aRunCommandWith:
0000000000007bc8         db         "Run COMMAND, with modified buffering operations for its standard streams.\n", 0 ; DATA XREF=usage+132
0000000000007c13         align      8
                     aNmandatoryArgu:
0000000000007c18         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+169
0000000000007c63         align      8
                     aIInputmodeAdju:
0000000000007c68         db         "  -i, --input=MODE   adjust standard input stream buffering\n  -o, --output=MODE  adjust standard output stream buffering\n  -e, --error=MODE   adjust standard error stream buffering\n", 0 ; DATA XREF=usage+206
0000000000007d1e         align      32
                     aHelpDisplayThi:
0000000000007d20         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+243
0000000000007d4d         align      16
                     aVersionOutputV:
0000000000007d50         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+280
0000000000007d86         align      8
                     aNifModeIsLTheC:
0000000000007d88         db         "\nIf MODE is 'L' the corresponding stream will be line buffered.\nThis option is invalid with standard input.\n", 0 ; DATA XREF=usage+317
0000000000007df5         align      8
                     aNifModeIs0TheC:
0000000000007df8         db         "\nIf MODE is '0' the corresponding stream will be unbuffered.\n", 0 ; DATA XREF=usage+354
0000000000007e36         align      8
                     aNotherwiseMode:
0000000000007e38         db         "\nOtherwise MODE is a number which may be followed by one of the following:\nKB 1000, K 1024, MB 1000*1000, M 1024*1024, and so on for G, T, P, E, Z, Y.\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\nIn this case the corresponding stream will be " ; DATA XREF=usage+391
0000000000007f38         db         "fully buffered with the buffer\nsize set to MODE bytes.\n", 0
                     aNnoteIfCommand:
0000000000007f70         db         "\nNOTE: If COMMAND adjusts the buffering of its standard streams ('tee' does\nfor example) then that will override corresponding changes by 'stdbuf'.\nAlso some filters (like 'dd' and 'cat' etc.) don't use streams for I/O,\nand are thus unaffected by 'stdbuf' " ; DATA XREF=usage+428
0000000000008070         db         "settings.\n", 0
000000000000807b         align      128
                     aHttpswwwgnuorg:
0000000000008080         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+671, usage+771, usage+864, usage+974, emit_bug_reporting_address+61
                     aReportAnyTrans:
00000000000080a8         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1015
00000000000080ef         align      16
                     aOrAvailableLoc:
00000000000080f0         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+814
0000000000008123         align      8
                     aCoreutils831sr:
0000000000008128         db         "../coreutils-8.31/src/stdbuf.c", 0         ; DATA XREF=main+1483
0000000000008147         align      8
                     a0OptfilenoOptf:
0000000000008148         db         "0 <= opt_fileno && opt_fileno < ARRAY_CARDINALITY (stdbuf)", 0 ; DATA XREF=main+1490
0000000000008183         align      8
                     aLineBufferingS:
0000000000008188         db         "line buffering stdin is meaningless", 0    ; DATA XREF=main+484
00000000000081ac         align      16
                     aFailedToUpdate:
00000000000081b0         db         "failed to update the environment with %s", 0 ; DATA XREF=main+1614, main+1738
00000000000081d9         align      32
                     aYouMustSpecify:
00000000000081e0         db         "you must specify a buffering mode option", 0 ; DATA XREF=main+1662
0000000000008209         db  0x00 ; '.'
000000000000820a         db  0x00 ; '.'
000000000000820b         db  0x00 ; '.'
000000000000820c         db  0x00 ; '.'
000000000000820d         db  0x00 ; '.'
000000000000820e         db  0x00 ; '.'
000000000000820f         db  0x00 ; '.'
0000000000008210         db  0x00 ; '.'
0000000000008211         db  0x00 ; '.'
0000000000008212         db  0x00 ; '.'
0000000000008213         db  0x00 ; '.'
0000000000008214         db  0x00 ; '.'
0000000000008215         db  0x00 ; '.'
0000000000008216         db  0x00 ; '.'
0000000000008217         db  0x00 ; '.'
0000000000008218         db  0x00 ; '.'
0000000000008219         db  0x00 ; '.'
000000000000821a         db  0x00 ; '.'
000000000000821b         db  0x00 ; '.'
000000000000821c         db  0x00 ; '.'
000000000000821d         db  0x00 ; '.'
000000000000821e         db  0x00 ; '.'
000000000000821f         db  0x00 ; '.'
                     CSWTCH.55:
0000000000008220         db  0x02 ; '.'                                         ; DATA XREF=main+18
0000000000008221         db  0x00 ; '.'
0000000000008222         db  0x00 ; '.'
0000000000008223         db  0x00 ; '.'
0000000000008224         db  0xff ; '.'
0000000000008225         db  0xff ; '.'
0000000000008226         db  0xff ; '.'
0000000000008227         db  0xff ; '.'
0000000000008228         db  0xff ; '.'
0000000000008229         db  0xff ; '.'
000000000000822a         db  0xff ; '.'
000000000000822b         db  0xff ; '.'
000000000000822c         db  0xff ; '.'
000000000000822d         db  0xff ; '.'
000000000000822e         db  0xff ; '.'
000000000000822f         db  0xff ; '.'
0000000000008230         db  0x00 ; '.'
0000000000008231         db  0x00 ; '.'
0000000000008232         db  0x00 ; '.'
0000000000008233         db  0x00 ; '.'
0000000000008234         db  0xff ; '.'
0000000000008235         db  0xff ; '.'
0000000000008236         db  0xff ; '.'
0000000000008237         db  0xff ; '.'
0000000000008238         db  0xff ; '.'
0000000000008239         db  0xff ; '.'
000000000000823a         db  0xff ; '.'
000000000000823b         db  0xff ; '.'
000000000000823c         db  0xff ; '.'
000000000000823d         db  0xff ; '.'
000000000000823e         db  0xff ; '.'
000000000000823f         db  0xff ; '.'
0000000000008240         db  0xff ; '.'
0000000000008241         db  0xff ; '.'
0000000000008242         db  0xff ; '.'
0000000000008243         db  0xff ; '.'
0000000000008244         db  0xff ; '.'
0000000000008245         db  0xff ; '.'
0000000000008246         db  0xff ; '.'
0000000000008247         db  0xff ; '.'
0000000000008248         db  0x01 ; '.'
0000000000008249         db  0x00 ; '.'
000000000000824a         db  0x00 ; '.'
000000000000824b         db  0x00 ; '.'
                     __PRETTY_FUNCTION__.7688:
000000000000824c         db  0x6d ; 'm'                                         ; DATA XREF=main+1476
000000000000824d         db  0x61 ; 'a'
000000000000824e         db  0x69 ; 'i'
000000000000824f         db  0x6e ; 'n'
0000000000008250         db  0x00 ; '.'
                     a831:
0000000000008251         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
0000000000008256         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000008262         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
0000000000008269         align      16
                     aANullArgv0WasP:
0000000000008270         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
00000000000082a8         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
00000000000082b0         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
00000000000082b1         db  0x74 ; 't'
00000000000082b2         db  0x2d ; '-'
00000000000082b3         db  0x00 ; '.'
00000000000082b4         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
00000000000082b5         db  0x80 ; '.'
00000000000082b6         db  0x98 ; '.'
00000000000082b7         db  0x00 ; '.'
00000000000082b8         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
00000000000082b9         db  0x80 ; '.'
00000000000082ba         db  0x99 ; '.'
00000000000082bb         db  0x00 ; '.'
00000000000082bc         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
00000000000082bd         db  0x07 ; '.'
00000000000082be         db  0x65 ; 'e'
00000000000082bf         db  0x00 ; '.'
00000000000082c0         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
00000000000082c1         db  0xaf ; '.'
00000000000082c2         db  0x00 ; '.'
00000000000082c3         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_3600+219, sub_3600+261, sub_3600+1197
00000000000082c4         db  0x00 ; '.'
00000000000082c5         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_3130+132, sub_3600+106, sub_3600+438, sub_3600+465, sub_3600+1120
00000000000082c6         db  0x00 ; '.'
00000000000082c7         db  0x60 ; '`'                                         ; DATA XREF=sub_3600+395, sub_3600+422
00000000000082c8         db  0x00 ; '.'
                     aLiteral:
00000000000082c9         db         "literal", 0
                     aShell:
00000000000082d1         db         "shell", 0
                     aShellalways:
00000000000082d7         db         "shell-always", 0
00000000000082e4         db  0x73 ; 's'
00000000000082e5         db  0x68 ; 'h'
00000000000082e6         db  0x65 ; 'e'
00000000000082e7         db  0x6c ; 'l'
00000000000082e8         db  0x6c ; 'l'
00000000000082e9         db  0x2d ; '-'
                     aEscape:
00000000000082ea         db         "escape", 0
                     aShellescapealw:
00000000000082f1         db         "shell-escape-always", 0
0000000000008305         db  0x63 ; 'c'
0000000000008306         db  0x00 ; '.'
                     aCmaybe:
0000000000008307         db         "c-maybe", 0
                     aClocale:
000000000000830f         db         "clocale", 0
0000000000008317         align      32
                     switch_table_8320:        // switch_table
0000000000008320         dd         quotearg_buffer_restyled.loc_382a-switch_table_8320, quotearg_buffer_restyled.loc_2a83-switch_table_8320, quotearg_buffer_restyled.loc_3a58-switch_table_8320, quotearg_buffer_restyled.loc_3864-switch_table_8320 ; switch table used at 0x2a81 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000008330         dd         quotearg_buffer_restyled.loc_3654-switch_table_8320, quotearg_buffer_restyled.loc_36b0-switch_table_8320, quotearg_buffer_restyled.loc_3705-switch_table_8320, quotearg_buffer_restyled.loc_374a-switch_table_8320
0000000000008340         dd         3 dup (quotearg_buffer_restyled.loc_3784-switch_table_8320)
000000000000834c         db  0xb4 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000834d         db  0xaa ; '.'
000000000000834e         db  0xff ; '.'
000000000000834f         db  0xff ; '.'
0000000000008350         db  0x9c ; '.'
0000000000008351         db  0xab ; '.'
0000000000008352         db  0xff ; '.'
0000000000008353         db  0xff ; '.'
0000000000008354         db  0x9c ; '.'
0000000000008355         db  0xab ; '.'
0000000000008356         db  0xff ; '.'
0000000000008357         db  0xff ; '.'
0000000000008358         db  0x9c ; '.'
0000000000008359         db  0xab ; '.'
000000000000835a         db  0xff ; '.'
000000000000835b         db  0xff ; '.'
000000000000835c         db  0x9c ; '.'
000000000000835d         db  0xab ; '.'
000000000000835e         db  0xff ; '.'
000000000000835f         db  0xff ; '.'
0000000000008360         db  0x9c ; '.'
0000000000008361         db  0xab ; '.'
0000000000008362         db  0xff ; '.'
0000000000008363         db  0xff ; '.'
0000000000008364         db  0x9c ; '.'
0000000000008365         db  0xab ; '.'
0000000000008366         db  0xff ; '.'
0000000000008367         db  0xff ; '.'
0000000000008368         db  0xf4 ; '.'
0000000000008369         db  0xaa ; '.'
000000000000836a         db  0xff ; '.'
000000000000836b         db  0xff ; '.'
000000000000836c         db  0xfc ; '.'
000000000000836d         db  0xa9 ; '.'
000000000000836e         db  0xff ; '.'
000000000000836f         db  0xff ; '.'
0000000000008370         db  0xbc ; '.'
0000000000008371         db  0xa9 ; '.'
0000000000008372         db  0xff ; '.'
0000000000008373         db  0xff ; '.'
0000000000008374         db  0x84 ; '.'
0000000000008375         db  0xab ; '.'
0000000000008376         db  0xff ; '.'
0000000000008377         db  0xff ; '.'
0000000000008378         db  0x74 ; 't'
0000000000008379         db  0xab ; '.'
000000000000837a         db  0xff ; '.'
000000000000837b         db  0xff ; '.'
000000000000837c         db  0x64 ; 'd'
000000000000837d         db  0xab ; '.'
000000000000837e         db  0xff ; '.'
000000000000837f         db  0xff ; '.'
0000000000008380         db  0x54 ; 'T'
0000000000008381         db  0xab ; '.'
0000000000008382         db  0xff ; '.'
0000000000008383         db  0xff ; '.'
0000000000008384         db  0x9c ; '.'
0000000000008385         db  0xab ; '.'
0000000000008386         db  0xff ; '.'
0000000000008387         db  0xff ; '.'
0000000000008388         db  0x9c ; '.'
0000000000008389         db  0xab ; '.'
000000000000838a         db  0xff ; '.'
000000000000838b         db  0xff ; '.'
000000000000838c         db  0x9c ; '.'
000000000000838d         db  0xab ; '.'
000000000000838e         db  0xff ; '.'
000000000000838f         db  0xff ; '.'
0000000000008390         db  0x9c ; '.'
0000000000008391         db  0xab ; '.'
0000000000008392         db  0xff ; '.'
0000000000008393         db  0xff ; '.'
0000000000008394         db  0x9c ; '.'
0000000000008395         db  0xab ; '.'
0000000000008396         db  0xff ; '.'
0000000000008397         db  0xff ; '.'
0000000000008398         db  0x9c ; '.'
0000000000008399         db  0xab ; '.'
000000000000839a         db  0xff ; '.'
000000000000839b         db  0xff ; '.'
000000000000839c         db  0x9c ; '.'
000000000000839d         db  0xab ; '.'
000000000000839e         db  0xff ; '.'
000000000000839f         db  0xff ; '.'
00000000000083a0         db  0x9c ; '.'
00000000000083a1         db  0xab ; '.'
00000000000083a2         db  0xff ; '.'
00000000000083a3         db  0xff ; '.'
00000000000083a4         db  0x9c ; '.'
00000000000083a5         db  0xab ; '.'
00000000000083a6         db  0xff ; '.'
00000000000083a7         db  0xff ; '.'
00000000000083a8         db  0x9c ; '.'
00000000000083a9         db  0xab ; '.'
00000000000083aa         db  0xff ; '.'
00000000000083ab         db  0xff ; '.'
00000000000083ac         db  0x9c ; '.'
00000000000083ad         db  0xab ; '.'
00000000000083ae         db  0xff ; '.'
00000000000083af         db  0xff ; '.'
00000000000083b0         db  0x9c ; '.'
00000000000083b1         db  0xab ; '.'
00000000000083b2         db  0xff ; '.'
00000000000083b3         db  0xff ; '.'
00000000000083b4         db  0x9c ; '.'
00000000000083b5         db  0xab ; '.'
00000000000083b6         db  0xff ; '.'
00000000000083b7         db  0xff ; '.'
00000000000083b8         db  0x9c ; '.'
00000000000083b9         db  0xab ; '.'
00000000000083ba         db  0xff ; '.'
00000000000083bb         db  0xff ; '.'
00000000000083bc         db  0x9c ; '.'
00000000000083bd         db  0xab ; '.'
00000000000083be         db  0xff ; '.'
00000000000083bf         db  0xff ; '.'
00000000000083c0         db  0x9c ; '.'
00000000000083c1         db  0xab ; '.'
00000000000083c2         db  0xff ; '.'
00000000000083c3         db  0xff ; '.'
00000000000083c4         db  0x9c ; '.'
00000000000083c5         db  0xab ; '.'
00000000000083c6         db  0xff ; '.'
00000000000083c7         db  0xff ; '.'
00000000000083c8         db  0x9c ; '.'
00000000000083c9         db  0xab ; '.'
00000000000083ca         db  0xff ; '.'
00000000000083cb         db  0xff ; '.'
00000000000083cc         db  0x44 ; 'D'
00000000000083cd         db  0xab ; '.'
00000000000083ce         db  0xff ; '.'
00000000000083cf         db  0xff ; '.'
00000000000083d0         db  0x34 ; '4'
00000000000083d1         db  0xab ; '.'
00000000000083d2         db  0xff ; '.'
00000000000083d3         db  0xff ; '.'
00000000000083d4         db  0x34 ; '4'
00000000000083d5         db  0xab ; '.'
00000000000083d6         db  0xff ; '.'
00000000000083d7         db  0xff ; '.'
00000000000083d8         db  0x04 ; '.'
00000000000083d9         db  0xab ; '.'
00000000000083da         db  0xff ; '.'
00000000000083db         db  0xff ; '.'
00000000000083dc         db  0x34 ; '4'
00000000000083dd         db  0xab ; '.'
00000000000083de         db  0xff ; '.'
00000000000083df         db  0xff ; '.'
00000000000083e0         db  0xdc ; '.'
00000000000083e1         db  0xaa ; '.'
00000000000083e2         db  0xff ; '.'
00000000000083e3         db  0xff ; '.'
00000000000083e4         db  0x34 ; '4'
00000000000083e5         db  0xab ; '.'
00000000000083e6         db  0xff ; '.'
00000000000083e7         db  0xff ; '.'
00000000000083e8         db  0x97 ; '.'
00000000000083e9         db  0xa9 ; '.'
00000000000083ea         db  0xff ; '.'
00000000000083eb         db  0xff ; '.'
00000000000083ec         db  0x34 ; '4'
00000000000083ed         db  0xab ; '.'
00000000000083ee         db  0xff ; '.'
00000000000083ef         db  0xff ; '.'
00000000000083f0         db  0x34 ; '4'
00000000000083f1         db  0xab ; '.'
00000000000083f2         db  0xff ; '.'
00000000000083f3         db  0xff ; '.'
00000000000083f4         db  0x34 ; '4'
00000000000083f5         db  0xab ; '.'
00000000000083f6         db  0xff ; '.'
00000000000083f7         db  0xff ; '.'
00000000000083f8         db  0xdc ; '.'
00000000000083f9         db  0xaa ; '.'
00000000000083fa         db  0xff ; '.'
00000000000083fb         db  0xff ; '.'
00000000000083fc         db  0xdc ; '.'
00000000000083fd         db  0xaa ; '.'
00000000000083fe         db  0xff ; '.'
00000000000083ff         db  0xff ; '.'
0000000000008400         db  0xdc ; '.'
0000000000008401         db  0xaa ; '.'
0000000000008402         db  0xff ; '.'
0000000000008403         db  0xff ; '.'
0000000000008404         db  0xdc ; '.'
0000000000008405         db  0xaa ; '.'
0000000000008406         db  0xff ; '.'
0000000000008407         db  0xff ; '.'
0000000000008408         db  0xdc ; '.'
0000000000008409         db  0xaa ; '.'
000000000000840a         db  0xff ; '.'
000000000000840b         db  0xff ; '.'
000000000000840c         db  0xdc ; '.'
000000000000840d         db  0xaa ; '.'
000000000000840e         db  0xff ; '.'
000000000000840f         db  0xff ; '.'
0000000000008410         db  0xdc ; '.'
0000000000008411         db  0xaa ; '.'
0000000000008412         db  0xff ; '.'
0000000000008413         db  0xff ; '.'
0000000000008414         db  0xdc ; '.'
0000000000008415         db  0xaa ; '.'
0000000000008416         db  0xff ; '.'
0000000000008417         db  0xff ; '.'
0000000000008418         db  0xdc ; '.'
0000000000008419         db  0xaa ; '.'
000000000000841a         db  0xff ; '.'
000000000000841b         db  0xff ; '.'
000000000000841c         db  0xdc ; '.'
000000000000841d         db  0xaa ; '.'
000000000000841e         db  0xff ; '.'
000000000000841f         db  0xff ; '.'
0000000000008420         db  0xdc ; '.'
0000000000008421         db  0xaa ; '.'
0000000000008422         db  0xff ; '.'
0000000000008423         db  0xff ; '.'
0000000000008424         db  0xdc ; '.'
0000000000008425         db  0xaa ; '.'
0000000000008426         db  0xff ; '.'
0000000000008427         db  0xff ; '.'
0000000000008428         db  0xdc ; '.'
0000000000008429         db  0xaa ; '.'
000000000000842a         db  0xff ; '.'
000000000000842b         db  0xff ; '.'
000000000000842c         db  0xdc ; '.'
000000000000842d         db  0xaa ; '.'
000000000000842e         db  0xff ; '.'
000000000000842f         db  0xff ; '.'
0000000000008430         db  0xdc ; '.'
0000000000008431         db  0xaa ; '.'
0000000000008432         db  0xff ; '.'
0000000000008433         db  0xff ; '.'
0000000000008434         db  0xdc ; '.'
0000000000008435         db  0xaa ; '.'
0000000000008436         db  0xff ; '.'
0000000000008437         db  0xff ; '.'
0000000000008438         db  0x34 ; '4'
0000000000008439         db  0xab ; '.'
000000000000843a         db  0xff ; '.'
000000000000843b         db  0xff ; '.'
000000000000843c         db  0x34 ; '4'
000000000000843d         db  0xab ; '.'
000000000000843e         db  0xff ; '.'
000000000000843f         db  0xff ; '.'
0000000000008440         db  0x34 ; '4'
0000000000008441         db  0xab ; '.'
0000000000008442         db  0xff ; '.'
0000000000008443         db  0xff ; '.'
0000000000008444         db  0x34 ; '4'
0000000000008445         db  0xab ; '.'
0000000000008446         db  0xff ; '.'
0000000000008447         db  0xff ; '.'
0000000000008448         db  0x67 ; 'g'
0000000000008449         db  0xa9 ; '.'
000000000000844a         db  0xff ; '.'
000000000000844b         db  0xff ; '.'
000000000000844c         db  0x9c ; '.'
000000000000844d         db  0xab ; '.'
000000000000844e         db  0xff ; '.'
000000000000844f         db  0xff ; '.'
0000000000008450         db  0xdc ; '.'
0000000000008451         db  0xaa ; '.'
0000000000008452         db  0xff ; '.'
0000000000008453         db  0xff ; '.'
0000000000008454         db  0xdc ; '.'
0000000000008455         db  0xaa ; '.'
0000000000008456         db  0xff ; '.'
0000000000008457         db  0xff ; '.'
0000000000008458         db  0xdc ; '.'
0000000000008459         db  0xaa ; '.'
000000000000845a         db  0xff ; '.'
000000000000845b         db  0xff ; '.'
000000000000845c         db  0xdc ; '.'
000000000000845d         db  0xaa ; '.'
000000000000845e         db  0xff ; '.'
000000000000845f         db  0xff ; '.'
0000000000008460         db  0xdc ; '.'
0000000000008461         db  0xaa ; '.'
0000000000008462         db  0xff ; '.'
0000000000008463         db  0xff ; '.'
0000000000008464         db  0xdc ; '.'
0000000000008465         db  0xaa ; '.'
0000000000008466         db  0xff ; '.'
0000000000008467         db  0xff ; '.'
0000000000008468         db  0xdc ; '.'
0000000000008469         db  0xaa ; '.'
000000000000846a         db  0xff ; '.'
000000000000846b         db  0xff ; '.'
000000000000846c         db  0xdc ; '.'
000000000000846d         db  0xaa ; '.'
000000000000846e         db  0xff ; '.'
000000000000846f         db  0xff ; '.'
0000000000008470         db  0xdc ; '.'
0000000000008471         db  0xaa ; '.'
0000000000008472         db  0xff ; '.'
0000000000008473         db  0xff ; '.'
0000000000008474         db  0xdc ; '.'
0000000000008475         db  0xaa ; '.'
0000000000008476         db  0xff ; '.'
0000000000008477         db  0xff ; '.'
0000000000008478         db  0xdc ; '.'
0000000000008479         db  0xaa ; '.'
000000000000847a         db  0xff ; '.'
000000000000847b         db  0xff ; '.'
000000000000847c         db  0xdc ; '.'
000000000000847d         db  0xaa ; '.'
000000000000847e         db  0xff ; '.'
000000000000847f         db  0xff ; '.'
0000000000008480         db  0xdc ; '.'
0000000000008481         db  0xaa ; '.'
0000000000008482         db  0xff ; '.'
0000000000008483         db  0xff ; '.'
0000000000008484         db  0xdc ; '.'
0000000000008485         db  0xaa ; '.'
0000000000008486         db  0xff ; '.'
0000000000008487         db  0xff ; '.'
0000000000008488         db  0xdc ; '.'
0000000000008489         db  0xaa ; '.'
000000000000848a         db  0xff ; '.'
000000000000848b         db  0xff ; '.'
000000000000848c         db  0xdc ; '.'
000000000000848d         db  0xaa ; '.'
000000000000848e         db  0xff ; '.'
000000000000848f         db  0xff ; '.'
0000000000008490         db  0xdc ; '.'
0000000000008491         db  0xaa ; '.'
0000000000008492         db  0xff ; '.'
0000000000008493         db  0xff ; '.'
0000000000008494         db  0xdc ; '.'
0000000000008495         db  0xaa ; '.'
0000000000008496         db  0xff ; '.'
0000000000008497         db  0xff ; '.'
0000000000008498         db  0xdc ; '.'
0000000000008499         db  0xaa ; '.'
000000000000849a         db  0xff ; '.'
000000000000849b         db  0xff ; '.'
000000000000849c         db  0xdc ; '.'
000000000000849d         db  0xaa ; '.'
000000000000849e         db  0xff ; '.'
000000000000849f         db  0xff ; '.'
00000000000084a0         db  0xdc ; '.'
00000000000084a1         db  0xaa ; '.'
00000000000084a2         db  0xff ; '.'
00000000000084a3         db  0xff ; '.'
00000000000084a4         db  0xdc ; '.'
00000000000084a5         db  0xaa ; '.'
00000000000084a6         db  0xff ; '.'
00000000000084a7         db  0xff ; '.'
00000000000084a8         db  0xdc ; '.'
00000000000084a9         db  0xaa ; '.'
00000000000084aa         db  0xff ; '.'
00000000000084ab         db  0xff ; '.'
00000000000084ac         db  0xdc ; '.'
00000000000084ad         db  0xaa ; '.'
00000000000084ae         db  0xff ; '.'
00000000000084af         db  0xff ; '.'
00000000000084b0         db  0xdc ; '.'
00000000000084b1         db  0xaa ; '.'
00000000000084b2         db  0xff ; '.'
00000000000084b3         db  0xff ; '.'
00000000000084b4         db  0xdc ; '.'
00000000000084b5         db  0xaa ; '.'
00000000000084b6         db  0xff ; '.'
00000000000084b7         db  0xff ; '.'
00000000000084b8         db  0x34 ; '4'
00000000000084b9         db  0xab ; '.'
00000000000084ba         db  0xff ; '.'
00000000000084bb         db  0xff ; '.'
00000000000084bc         db  0x0c ; '.'
00000000000084bd         db  0xaa ; '.'
00000000000084be         db  0xff ; '.'
00000000000084bf         db  0xff ; '.'
00000000000084c0         db  0xdc ; '.'
00000000000084c1         db  0xaa ; '.'
00000000000084c2         db  0xff ; '.'
00000000000084c3         db  0xff ; '.'
00000000000084c4         db  0x34 ; '4'
00000000000084c5         db  0xab ; '.'
00000000000084c6         db  0xff ; '.'
00000000000084c7         db  0xff ; '.'
00000000000084c8         db  0xdc ; '.'
00000000000084c9         db  0xaa ; '.'
00000000000084ca         db  0xff ; '.'
00000000000084cb         db  0xff ; '.'
00000000000084cc         db  0x34 ; '4'
00000000000084cd         db  0xab ; '.'
00000000000084ce         db  0xff ; '.'
00000000000084cf         db  0xff ; '.'
00000000000084d0         db  0xdc ; '.'
00000000000084d1         db  0xaa ; '.'
00000000000084d2         db  0xff ; '.'
00000000000084d3         db  0xff ; '.'
00000000000084d4         db  0xdc ; '.'
00000000000084d5         db  0xaa ; '.'
00000000000084d6         db  0xff ; '.'
00000000000084d7         db  0xff ; '.'
00000000000084d8         db  0xdc ; '.'
00000000000084d9         db  0xaa ; '.'
00000000000084da         db  0xff ; '.'
00000000000084db         db  0xff ; '.'
00000000000084dc         db  0xdc ; '.'
00000000000084dd         db  0xaa ; '.'
00000000000084de         db  0xff ; '.'
00000000000084df         db  0xff ; '.'
00000000000084e0         db  0xdc ; '.'
00000000000084e1         db  0xaa ; '.'
00000000000084e2         db  0xff ; '.'
00000000000084e3         db  0xff ; '.'
00000000000084e4         db  0xdc ; '.'
00000000000084e5         db  0xaa ; '.'
00000000000084e6         db  0xff ; '.'
00000000000084e7         db  0xff ; '.'
00000000000084e8         db  0xdc ; '.'
00000000000084e9         db  0xaa ; '.'
00000000000084ea         db  0xff ; '.'
00000000000084eb         db  0xff ; '.'
00000000000084ec         db  0xdc ; '.'
00000000000084ed         db  0xaa ; '.'
00000000000084ee         db  0xff ; '.'
00000000000084ef         db  0xff ; '.'
00000000000084f0         db  0xdc ; '.'
00000000000084f1         db  0xaa ; '.'
00000000000084f2         db  0xff ; '.'
00000000000084f3         db  0xff ; '.'
00000000000084f4         db  0xdc ; '.'
00000000000084f5         db  0xaa ; '.'
00000000000084f6         db  0xff ; '.'
00000000000084f7         db  0xff ; '.'
00000000000084f8         db  0xdc ; '.'
00000000000084f9         db  0xaa ; '.'
00000000000084fa         db  0xff ; '.'
00000000000084fb         db  0xff ; '.'
00000000000084fc         db  0xdc ; '.'
00000000000084fd         db  0xaa ; '.'
00000000000084fe         db  0xff ; '.'
00000000000084ff         db  0xff ; '.'
0000000000008500         db  0xdc ; '.'
0000000000008501         db  0xaa ; '.'
0000000000008502         db  0xff ; '.'
0000000000008503         db  0xff ; '.'
0000000000008504         db  0xdc ; '.'
0000000000008505         db  0xaa ; '.'
0000000000008506         db  0xff ; '.'
0000000000008507         db  0xff ; '.'
0000000000008508         db  0xdc ; '.'
0000000000008509         db  0xaa ; '.'
000000000000850a         db  0xff ; '.'
000000000000850b         db  0xff ; '.'
000000000000850c         db  0xdc ; '.'
000000000000850d         db  0xaa ; '.'
000000000000850e         db  0xff ; '.'
000000000000850f         db  0xff ; '.'
0000000000008510         db  0xdc ; '.'
0000000000008511         db  0xaa ; '.'
0000000000008512         db  0xff ; '.'
0000000000008513         db  0xff ; '.'
0000000000008514         db  0xdc ; '.'
0000000000008515         db  0xaa ; '.'
0000000000008516         db  0xff ; '.'
0000000000008517         db  0xff ; '.'
0000000000008518         db  0xdc ; '.'
0000000000008519         db  0xaa ; '.'
000000000000851a         db  0xff ; '.'
000000000000851b         db  0xff ; '.'
000000000000851c         db  0xdc ; '.'
000000000000851d         db  0xaa ; '.'
000000000000851e         db  0xff ; '.'
000000000000851f         db  0xff ; '.'
0000000000008520         db  0xdc ; '.'
0000000000008521         db  0xaa ; '.'
0000000000008522         db  0xff ; '.'
0000000000008523         db  0xff ; '.'
0000000000008524         db  0xdc ; '.'
0000000000008525         db  0xaa ; '.'
0000000000008526         db  0xff ; '.'
0000000000008527         db  0xff ; '.'
0000000000008528         db  0xdc ; '.'
0000000000008529         db  0xaa ; '.'
000000000000852a         db  0xff ; '.'
000000000000852b         db  0xff ; '.'
000000000000852c         db  0xdc ; '.'
000000000000852d         db  0xaa ; '.'
000000000000852e         db  0xff ; '.'
000000000000852f         db  0xff ; '.'
0000000000008530         db  0xdc ; '.'
0000000000008531         db  0xaa ; '.'
0000000000008532         db  0xff ; '.'
0000000000008533         db  0xff ; '.'
0000000000008534         db  0xdc ; '.'
0000000000008535         db  0xaa ; '.'
0000000000008536         db  0xff ; '.'
0000000000008537         db  0xff ; '.'
0000000000008538         db  0x97 ; '.'
0000000000008539         db  0xa8 ; '.'
000000000000853a         db  0xff ; '.'
000000000000853b         db  0xff ; '.'
000000000000853c         db  0x34 ; '4'
000000000000853d         db  0xab ; '.'
000000000000853e         db  0xff ; '.'
000000000000853f         db  0xff ; '.'
0000000000008540         db  0x97 ; '.'
0000000000008541         db  0xa8 ; '.'
0000000000008542         db  0xff ; '.'
0000000000008543         db  0xff ; '.'
0000000000008544         db  0x04 ; '.'
0000000000008545         db  0xab ; '.'
0000000000008546         db  0xff ; '.'
0000000000008547         db  0xff ; '.'
0000000000008548         db  0x88 ; '.'                                         ; DATA XREF=sub_2ed0+137
0000000000008549         db  0xaa ; '.'
000000000000854a         db  0xff ; '.'
000000000000854b         db  0xff ; '.'
000000000000854c         db  0x98 ; '.'
000000000000854d         db  0xa9 ; '.'
000000000000854e         db  0xff ; '.'
000000000000854f         db  0xff ; '.'
0000000000008550         db  0x98 ; '.'
0000000000008551         db  0xa9 ; '.'
0000000000008552         db  0xff ; '.'
0000000000008553         db  0xff ; '.'
0000000000008554         db  0x98 ; '.'
0000000000008555         db  0xa9 ; '.'
0000000000008556         db  0xff ; '.'
0000000000008557         db  0xff ; '.'
0000000000008558         db  0x98 ; '.'
0000000000008559         db  0xa9 ; '.'
000000000000855a         db  0xff ; '.'
000000000000855b         db  0xff ; '.'
000000000000855c         db  0x98 ; '.'
000000000000855d         db  0xa9 ; '.'
000000000000855e         db  0xff ; '.'
000000000000855f         db  0xff ; '.'
0000000000008560         db  0x98 ; '.'
0000000000008561         db  0xa9 ; '.'
0000000000008562         db  0xff ; '.'
0000000000008563         db  0xff ; '.'
0000000000008564         db  0x78 ; 'x'
0000000000008565         db  0xaa ; '.'
0000000000008566         db  0xff ; '.'
0000000000008567         db  0xff ; '.'
0000000000008568         db  0xc8 ; '.'
0000000000008569         db  0xab ; '.'
000000000000856a         db  0xff ; '.'
000000000000856b         db  0xff ; '.'
000000000000856c         db  0xb0 ; '.'
000000000000856d         db  0xab ; '.'
000000000000856e         db  0xff ; '.'
000000000000856f         db  0xff ; '.'
0000000000008570         db  0x60 ; '`'
0000000000008571         db  0xaa ; '.'
0000000000008572         db  0xff ; '.'
0000000000008573         db  0xff ; '.'
0000000000008574         db  0xa0 ; '.'
0000000000008575         db  0xab ; '.'
0000000000008576         db  0xff ; '.'
0000000000008577         db  0xff ; '.'
0000000000008578         db  0x48 ; 'H'
0000000000008579         db  0xaa ; '.'
000000000000857a         db  0xff ; '.'
000000000000857b         db  0xff ; '.'
000000000000857c         db  0x88 ; '.'
000000000000857d         db  0xab ; '.'
000000000000857e         db  0xff ; '.'
000000000000857f         db  0xff ; '.'
0000000000008580         db  0x98 ; '.'
0000000000008581         db  0xa9 ; '.'
0000000000008582         db  0xff ; '.'
0000000000008583         db  0xff ; '.'
0000000000008584         db  0x98 ; '.'
0000000000008585         db  0xa9 ; '.'
0000000000008586         db  0xff ; '.'
0000000000008587         db  0xff ; '.'
0000000000008588         db  0x98 ; '.'
0000000000008589         db  0xa9 ; '.'
000000000000858a         db  0xff ; '.'
000000000000858b         db  0xff ; '.'
000000000000858c         db  0x98 ; '.'
000000000000858d         db  0xa9 ; '.'
000000000000858e         db  0xff ; '.'
000000000000858f         db  0xff ; '.'
0000000000008590         db  0x98 ; '.'
0000000000008591         db  0xa9 ; '.'
0000000000008592         db  0xff ; '.'
0000000000008593         db  0xff ; '.'
0000000000008594         db  0x98 ; '.'
0000000000008595         db  0xa9 ; '.'
0000000000008596         db  0xff ; '.'
0000000000008597         db  0xff ; '.'
0000000000008598         db  0x98 ; '.'
0000000000008599         db  0xa9 ; '.'
000000000000859a         db  0xff ; '.'
000000000000859b         db  0xff ; '.'
000000000000859c         db  0x98 ; '.'
000000000000859d         db  0xa9 ; '.'
000000000000859e         db  0xff ; '.'
000000000000859f         db  0xff ; '.'
00000000000085a0         db  0x98 ; '.'
00000000000085a1         db  0xa9 ; '.'
00000000000085a2         db  0xff ; '.'
00000000000085a3         db  0xff ; '.'
00000000000085a4         db  0x98 ; '.'
00000000000085a5         db  0xa9 ; '.'
00000000000085a6         db  0xff ; '.'
00000000000085a7         db  0xff ; '.'
00000000000085a8         db  0x98 ; '.'
00000000000085a9         db  0xa9 ; '.'
00000000000085aa         db  0xff ; '.'
00000000000085ab         db  0xff ; '.'
00000000000085ac         db  0x98 ; '.'
00000000000085ad         db  0xa9 ; '.'
00000000000085ae         db  0xff ; '.'
00000000000085af         db  0xff ; '.'
00000000000085b0         db  0x98 ; '.'
00000000000085b1         db  0xa9 ; '.'
00000000000085b2         db  0xff ; '.'
00000000000085b3         db  0xff ; '.'
00000000000085b4         db  0x98 ; '.'
00000000000085b5         db  0xa9 ; '.'
00000000000085b6         db  0xff ; '.'
00000000000085b7         db  0xff ; '.'
00000000000085b8         db  0x98 ; '.'
00000000000085b9         db  0xa9 ; '.'
00000000000085ba         db  0xff ; '.'
00000000000085bb         db  0xff ; '.'
00000000000085bc         db  0x98 ; '.'
00000000000085bd         db  0xa9 ; '.'
00000000000085be         db  0xff ; '.'
00000000000085bf         db  0xff ; '.'
00000000000085c0         db  0x98 ; '.'
00000000000085c1         db  0xa9 ; '.'
00000000000085c2         db  0xff ; '.'
00000000000085c3         db  0xff ; '.'
00000000000085c4         db  0x98 ; '.'
00000000000085c5         db  0xa9 ; '.'
00000000000085c6         db  0xff ; '.'
00000000000085c7         db  0xff ; '.'
00000000000085c8         db  0x70 ; 'p'
00000000000085c9         db  0xab ; '.'
00000000000085ca         db  0xff ; '.'
00000000000085cb         db  0xff ; '.'
00000000000085cc         db  0x58 ; 'X'
00000000000085cd         db  0xab ; '.'
00000000000085ce         db  0xff ; '.'
00000000000085cf         db  0xff ; '.'
00000000000085d0         db  0x58 ; 'X'
00000000000085d1         db  0xab ; '.'
00000000000085d2         db  0xff ; '.'
00000000000085d3         db  0xff ; '.'
00000000000085d4         db  0x40 ; '@'
00000000000085d5         db  0xab ; '.'
00000000000085d6         db  0xff ; '.'
00000000000085d7         db  0xff ; '.'
00000000000085d8         db  0x58 ; 'X'
00000000000085d9         db  0xab ; '.'
00000000000085da         db  0xff ; '.'
00000000000085db         db  0xff ; '.'
00000000000085dc         db  0x28 ; '('
00000000000085dd         db  0xab ; '.'
00000000000085de         db  0xff ; '.'
00000000000085df         db  0xff ; '.'
00000000000085e0         db  0x58 ; 'X'
00000000000085e1         db  0xab ; '.'
00000000000085e2         db  0xff ; '.'
00000000000085e3         db  0xff ; '.'
00000000000085e4         db  0x98 ; '.'
00000000000085e5         db  0xa7 ; '.'
00000000000085e6         db  0xff ; '.'
00000000000085e7         db  0xff ; '.'
00000000000085e8         db  0x58 ; 'X'
00000000000085e9         db  0xab ; '.'
00000000000085ea         db  0xff ; '.'
00000000000085eb         db  0xff ; '.'
00000000000085ec         db  0x58 ; 'X'
00000000000085ed         db  0xab ; '.'
00000000000085ee         db  0xff ; '.'
00000000000085ef         db  0xff ; '.'
00000000000085f0         db  0x58 ; 'X'
00000000000085f1         db  0xab ; '.'
00000000000085f2         db  0xff ; '.'
00000000000085f3         db  0xff ; '.'
00000000000085f4         db  0x28 ; '('
00000000000085f5         db  0xab ; '.'
00000000000085f6         db  0xff ; '.'
00000000000085f7         db  0xff ; '.'
00000000000085f8         db  0x28 ; '('
00000000000085f9         db  0xab ; '.'
00000000000085fa         db  0xff ; '.'
00000000000085fb         db  0xff ; '.'
00000000000085fc         db  0x28 ; '('
00000000000085fd         db  0xab ; '.'
00000000000085fe         db  0xff ; '.'
00000000000085ff         db  0xff ; '.'
0000000000008600         db  0x28 ; '('
0000000000008601         db  0xab ; '.'
0000000000008602         db  0xff ; '.'
0000000000008603         db  0xff ; '.'
0000000000008604         db  0x28 ; '('
0000000000008605         db  0xab ; '.'
0000000000008606         db  0xff ; '.'
0000000000008607         db  0xff ; '.'
0000000000008608         db  0x28 ; '('
0000000000008609         db  0xab ; '.'
000000000000860a         db  0xff ; '.'
000000000000860b         db  0xff ; '.'
000000000000860c         db  0x28 ; '('
000000000000860d         db  0xab ; '.'
000000000000860e         db  0xff ; '.'
000000000000860f         db  0xff ; '.'
0000000000008610         db  0x28 ; '('
0000000000008611         db  0xab ; '.'
0000000000008612         db  0xff ; '.'
0000000000008613         db  0xff ; '.'
0000000000008614         db  0x28 ; '('
0000000000008615         db  0xab ; '.'
0000000000008616         db  0xff ; '.'
0000000000008617         db  0xff ; '.'
0000000000008618         db  0x28 ; '('
0000000000008619         db  0xab ; '.'
000000000000861a         db  0xff ; '.'
000000000000861b         db  0xff ; '.'
000000000000861c         db  0x28 ; '('
000000000000861d         db  0xab ; '.'
000000000000861e         db  0xff ; '.'
000000000000861f         db  0xff ; '.'
0000000000008620         db  0x28 ; '('
0000000000008621         db  0xab ; '.'
0000000000008622         db  0xff ; '.'
0000000000008623         db  0xff ; '.'
0000000000008624         db  0x28 ; '('
0000000000008625         db  0xab ; '.'
0000000000008626         db  0xff ; '.'
0000000000008627         db  0xff ; '.'
0000000000008628         db  0x28 ; '('
0000000000008629         db  0xab ; '.'
000000000000862a         db  0xff ; '.'
000000000000862b         db  0xff ; '.'
000000000000862c         db  0x28 ; '('
000000000000862d         db  0xab ; '.'
000000000000862e         db  0xff ; '.'
000000000000862f         db  0xff ; '.'
0000000000008630         db  0x28 ; '('
0000000000008631         db  0xab ; '.'
0000000000008632         db  0xff ; '.'
0000000000008633         db  0xff ; '.'
0000000000008634         db  0x58 ; 'X'
0000000000008635         db  0xab ; '.'
0000000000008636         db  0xff ; '.'
0000000000008637         db  0xff ; '.'
0000000000008638         db  0x58 ; 'X'
0000000000008639         db  0xab ; '.'
000000000000863a         db  0xff ; '.'
000000000000863b         db  0xff ; '.'
000000000000863c         db  0x58 ; 'X'
000000000000863d         db  0xab ; '.'
000000000000863e         db  0xff ; '.'
000000000000863f         db  0xff ; '.'
0000000000008640         db  0x58 ; 'X'
0000000000008641         db  0xab ; '.'
0000000000008642         db  0xff ; '.'
0000000000008643         db  0xff ; '.'
0000000000008644         db  0x68 ; 'h'
0000000000008645         db  0xa7 ; '.'
0000000000008646         db  0xff ; '.'
0000000000008647         db  0xff ; '.'
0000000000008648         db  0x98 ; '.'
0000000000008649         db  0xa9 ; '.'
000000000000864a         db  0xff ; '.'
000000000000864b         db  0xff ; '.'
000000000000864c         db  0x28 ; '('
000000000000864d         db  0xab ; '.'
000000000000864e         db  0xff ; '.'
000000000000864f         db  0xff ; '.'
0000000000008650         db  0x28 ; '('
0000000000008651         db  0xab ; '.'
0000000000008652         db  0xff ; '.'
0000000000008653         db  0xff ; '.'
0000000000008654         db  0x28 ; '('
0000000000008655         db  0xab ; '.'
0000000000008656         db  0xff ; '.'
0000000000008657         db  0xff ; '.'
0000000000008658         db  0x28 ; '('
0000000000008659         db  0xab ; '.'
000000000000865a         db  0xff ; '.'
000000000000865b         db  0xff ; '.'
000000000000865c         db  0x28 ; '('
000000000000865d         db  0xab ; '.'
000000000000865e         db  0xff ; '.'
000000000000865f         db  0xff ; '.'
0000000000008660         db  0x28 ; '('
0000000000008661         db  0xab ; '.'
0000000000008662         db  0xff ; '.'
0000000000008663         db  0xff ; '.'
0000000000008664         db  0x28 ; '('
0000000000008665         db  0xab ; '.'
0000000000008666         db  0xff ; '.'
0000000000008667         db  0xff ; '.'
0000000000008668         db  0x28 ; '('
0000000000008669         db  0xab ; '.'
000000000000866a         db  0xff ; '.'
000000000000866b         db  0xff ; '.'
000000000000866c         db  0x28 ; '('
000000000000866d         db  0xab ; '.'
000000000000866e         db  0xff ; '.'
000000000000866f         db  0xff ; '.'
0000000000008670         db  0x28 ; '('
0000000000008671         db  0xab ; '.'
0000000000008672         db  0xff ; '.'
0000000000008673         db  0xff ; '.'
0000000000008674         db  0x28 ; '('
0000000000008675         db  0xab ; '.'
0000000000008676         db  0xff ; '.'
0000000000008677         db  0xff ; '.'
0000000000008678         db  0x28 ; '('
0000000000008679         db  0xab ; '.'
000000000000867a         db  0xff ; '.'
000000000000867b         db  0xff ; '.'
000000000000867c         db  0x28 ; '('
000000000000867d         db  0xab ; '.'
000000000000867e         db  0xff ; '.'
000000000000867f         db  0xff ; '.'
0000000000008680         db  0x28 ; '('
0000000000008681         db  0xab ; '.'
0000000000008682         db  0xff ; '.'
0000000000008683         db  0xff ; '.'
0000000000008684         db  0x28 ; '('
0000000000008685         db  0xab ; '.'
0000000000008686         db  0xff ; '.'
0000000000008687         db  0xff ; '.'
0000000000008688         db  0x28 ; '('
0000000000008689         db  0xab ; '.'
000000000000868a         db  0xff ; '.'
000000000000868b         db  0xff ; '.'
000000000000868c         db  0x28 ; '('
000000000000868d         db  0xab ; '.'
000000000000868e         db  0xff ; '.'
000000000000868f         db  0xff ; '.'
0000000000008690         db  0x28 ; '('
0000000000008691         db  0xab ; '.'
0000000000008692         db  0xff ; '.'
0000000000008693         db  0xff ; '.'
0000000000008694         db  0x28 ; '('
0000000000008695         db  0xab ; '.'
0000000000008696         db  0xff ; '.'
0000000000008697         db  0xff ; '.'
0000000000008698         db  0x28 ; '('
0000000000008699         db  0xab ; '.'
000000000000869a         db  0xff ; '.'
000000000000869b         db  0xff ; '.'
000000000000869c         db  0x28 ; '('
000000000000869d         db  0xab ; '.'
000000000000869e         db  0xff ; '.'
000000000000869f         db  0xff ; '.'
00000000000086a0         db  0x28 ; '('
00000000000086a1         db  0xab ; '.'
00000000000086a2         db  0xff ; '.'
00000000000086a3         db  0xff ; '.'
00000000000086a4         db  0x28 ; '('
00000000000086a5         db  0xab ; '.'
00000000000086a6         db  0xff ; '.'
00000000000086a7         db  0xff ; '.'
00000000000086a8         db  0x28 ; '('
00000000000086a9         db  0xab ; '.'
00000000000086aa         db  0xff ; '.'
00000000000086ab         db  0xff ; '.'
00000000000086ac         db  0x28 ; '('
00000000000086ad         db  0xab ; '.'
00000000000086ae         db  0xff ; '.'
00000000000086af         db  0xff ; '.'
00000000000086b0         db  0x28 ; '('
00000000000086b1         db  0xab ; '.'
00000000000086b2         db  0xff ; '.'
00000000000086b3         db  0xff ; '.'
00000000000086b4         db  0x58 ; 'X'
00000000000086b5         db  0xab ; '.'
00000000000086b6         db  0xff ; '.'
00000000000086b7         db  0xff ; '.'
00000000000086b8         db  0x28 ; '('
00000000000086b9         db  0xaa ; '.'
00000000000086ba         db  0xff ; '.'
00000000000086bb         db  0xff ; '.'
00000000000086bc         db  0x28 ; '('
00000000000086bd         db  0xab ; '.'
00000000000086be         db  0xff ; '.'
00000000000086bf         db  0xff ; '.'
00000000000086c0         db  0x58 ; 'X'
00000000000086c1         db  0xab ; '.'
00000000000086c2         db  0xff ; '.'
00000000000086c3         db  0xff ; '.'
00000000000086c4         db  0x28 ; '('
00000000000086c5         db  0xab ; '.'
00000000000086c6         db  0xff ; '.'
00000000000086c7         db  0xff ; '.'
00000000000086c8         db  0x58 ; 'X'
00000000000086c9         db  0xab ; '.'
00000000000086ca         db  0xff ; '.'
00000000000086cb         db  0xff ; '.'
00000000000086cc         db  0x28 ; '('
00000000000086cd         db  0xab ; '.'
00000000000086ce         db  0xff ; '.'
00000000000086cf         db  0xff ; '.'
00000000000086d0         db  0x28 ; '('
00000000000086d1         db  0xab ; '.'
00000000000086d2         db  0xff ; '.'
00000000000086d3         db  0xff ; '.'
00000000000086d4         db  0x28 ; '('
00000000000086d5         db  0xab ; '.'
00000000000086d6         db  0xff ; '.'
00000000000086d7         db  0xff ; '.'
00000000000086d8         db  0x28 ; '('
00000000000086d9         db  0xab ; '.'
00000000000086da         db  0xff ; '.'
00000000000086db         db  0xff ; '.'
00000000000086dc         db  0x28 ; '('
00000000000086dd         db  0xab ; '.'
00000000000086de         db  0xff ; '.'
00000000000086df         db  0xff ; '.'
00000000000086e0         db  0x28 ; '('
00000000000086e1         db  0xab ; '.'
00000000000086e2         db  0xff ; '.'
00000000000086e3         db  0xff ; '.'
00000000000086e4         db  0x28 ; '('
00000000000086e5         db  0xab ; '.'
00000000000086e6         db  0xff ; '.'
00000000000086e7         db  0xff ; '.'
00000000000086e8         db  0x28 ; '('
00000000000086e9         db  0xab ; '.'
00000000000086ea         db  0xff ; '.'
00000000000086eb         db  0xff ; '.'
00000000000086ec         db  0x28 ; '('
00000000000086ed         db  0xab ; '.'
00000000000086ee         db  0xff ; '.'
00000000000086ef         db  0xff ; '.'
00000000000086f0         db  0x28 ; '('
00000000000086f1         db  0xab ; '.'
00000000000086f2         db  0xff ; '.'
00000000000086f3         db  0xff ; '.'
00000000000086f4         db  0x28 ; '('
00000000000086f5         db  0xab ; '.'
00000000000086f6         db  0xff ; '.'
00000000000086f7         db  0xff ; '.'
00000000000086f8         db  0x28 ; '('
00000000000086f9         db  0xab ; '.'
00000000000086fa         db  0xff ; '.'
00000000000086fb         db  0xff ; '.'
00000000000086fc         db  0x28 ; '('
00000000000086fd         db  0xab ; '.'
00000000000086fe         db  0xff ; '.'
00000000000086ff         db  0xff ; '.'
0000000000008700         db  0x28 ; '('
0000000000008701         db  0xab ; '.'
0000000000008702         db  0xff ; '.'
0000000000008703         db  0xff ; '.'
0000000000008704         db  0x28 ; '('
0000000000008705         db  0xab ; '.'
0000000000008706         db  0xff ; '.'
0000000000008707         db  0xff ; '.'
0000000000008708         db  0x28 ; '('
0000000000008709         db  0xab ; '.'
000000000000870a         db  0xff ; '.'
000000000000870b         db  0xff ; '.'
000000000000870c         db  0x28 ; '('
000000000000870d         db  0xab ; '.'
000000000000870e         db  0xff ; '.'
000000000000870f         db  0xff ; '.'
0000000000008710         db  0x28 ; '('
0000000000008711         db  0xab ; '.'
0000000000008712         db  0xff ; '.'
0000000000008713         db  0xff ; '.'
0000000000008714         db  0x28 ; '('
0000000000008715         db  0xab ; '.'
0000000000008716         db  0xff ; '.'
0000000000008717         db  0xff ; '.'
0000000000008718         db  0x28 ; '('
0000000000008719         db  0xab ; '.'
000000000000871a         db  0xff ; '.'
000000000000871b         db  0xff ; '.'
000000000000871c         db  0x28 ; '('
000000000000871d         db  0xab ; '.'
000000000000871e         db  0xff ; '.'
000000000000871f         db  0xff ; '.'
0000000000008720         db  0x28 ; '('
0000000000008721         db  0xab ; '.'
0000000000008722         db  0xff ; '.'
0000000000008723         db  0xff ; '.'
0000000000008724         db  0x28 ; '('
0000000000008725         db  0xab ; '.'
0000000000008726         db  0xff ; '.'
0000000000008727         db  0xff ; '.'
0000000000008728         db  0x28 ; '('
0000000000008729         db  0xab ; '.'
000000000000872a         db  0xff ; '.'
000000000000872b         db  0xff ; '.'
000000000000872c         db  0x28 ; '('
000000000000872d         db  0xab ; '.'
000000000000872e         db  0xff ; '.'
000000000000872f         db  0xff ; '.'
0000000000008730         db  0x28 ; '('
0000000000008731         db  0xab ; '.'
0000000000008732         db  0xff ; '.'
0000000000008733         db  0xff ; '.'
0000000000008734         db  0x98 ; '.'
0000000000008735         db  0xa6 ; '.'
0000000000008736         db  0xff ; '.'
0000000000008737         db  0xff ; '.'
0000000000008738         db  0x58 ; 'X'
0000000000008739         db  0xab ; '.'
000000000000873a         db  0xff ; '.'
000000000000873b         db  0xff ; '.'
000000000000873c         db  0x98 ; '.'
000000000000873d         db  0xa6 ; '.'
000000000000873e         db  0xff ; '.'
000000000000873f         db  0xff ; '.'
0000000000008740         db  0x40 ; '@'
0000000000008741         db  0xab ; '.'
0000000000008742         db  0xff ; '.'
0000000000008743         db  0xff ; '.'
0000000000008744         db  0x00 ; '.'
0000000000008745         db  0x00 ; '.'
0000000000008746         db  0x00 ; '.'
0000000000008747         db  0x00 ; '.'
0000000000008748         db  0x00 ; '.'
0000000000008749         db  0x00 ; '.'
000000000000874a         db  0x00 ; '.'
000000000000874b         db  0x00 ; '.'
000000000000874c         db  0x00 ; '.'
000000000000874d         db  0x00 ; '.'
000000000000874e         db  0x00 ; '.'
000000000000874f         db  0x00 ; '.'
0000000000008750         db  0x00 ; '.'
0000000000008751         db  0x00 ; '.'
0000000000008752         db  0x00 ; '.'
0000000000008753         db  0x00 ; '.'
0000000000008754         db  0x00 ; '.'
0000000000008755         db  0x00 ; '.'
0000000000008756         db  0x00 ; '.'
0000000000008757         db  0x00 ; '.'
0000000000008758         db  0x00 ; '.'
0000000000008759         db  0x00 ; '.'
000000000000875a         db  0x00 ; '.'
000000000000875b         db  0x00 ; '.'
000000000000875c         db  0x00 ; '.'
000000000000875d         db  0x00 ; '.'
000000000000875e         db  0x00 ; '.'
000000000000875f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000008760         db  0x00 ; '.'
0000000000008761         db  0x00 ; '.'
0000000000008762         db  0x00 ; '.'
0000000000008763         db  0x00 ; '.'
0000000000008764         db  0x01 ; '.'
0000000000008765         db  0x00 ; '.'
0000000000008766         db  0x00 ; '.'
0000000000008767         db  0x00 ; '.'
0000000000008768         db  0x02 ; '.'
0000000000008769         db  0x00 ; '.'
000000000000876a         db  0x00 ; '.'
000000000000876b         db  0x00 ; '.'
000000000000876c         db  0x03 ; '.'
000000000000876d         db  0x00 ; '.'
000000000000876e         db  0x00 ; '.'
000000000000876f         db  0x00 ; '.'
0000000000008770         db  0x04 ; '.'
0000000000008771         db  0x00 ; '.'
0000000000008772         db  0x00 ; '.'
0000000000008773         db  0x00 ; '.'
0000000000008774         db  0x05 ; '.'
0000000000008775         db  0x00 ; '.'
0000000000008776         db  0x00 ; '.'
0000000000008777         db  0x00 ; '.'
0000000000008778         db  0x06 ; '.'
0000000000008779         db  0x00 ; '.'
000000000000877a         db  0x00 ; '.'
000000000000877b         db  0x00 ; '.'
000000000000877c         db  0x07 ; '.'
000000000000877d         db  0x00 ; '.'
000000000000877e         db  0x00 ; '.'
000000000000877f         db  0x00 ; '.'
0000000000008780         db  0x08 ; '.'
0000000000008781         db  0x00 ; '.'
0000000000008782         db  0x00 ; '.'
0000000000008783         db  0x00 ; '.'
0000000000008784         db  0x09 ; '.'
0000000000008785         db  0x00 ; '.'
0000000000008786         db  0x00 ; '.'
0000000000008787         db  0x00 ; '.'
                     aSSSn:
0000000000008788         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000008794         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000879b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000879c         db  0x43 ; 'C'
000000000000879d         db  0x29 ; ')'
000000000000879e         db  0x00 ; '.'
                     aWrittenBySn:
000000000000879f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
00000000000087af         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
00000000000087c6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
00000000000087e2         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
00000000000087f7         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000880d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000008821         align      8
                     aNlicenseGplv3G:
0000000000008828         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
00000000000088f4         align      8
                     aWrittenBySSSna:
00000000000088f8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_8918:        // aWrittenBySSSns
0000000000008918         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000893c         align      64
                     aWrittenBySSSns_8940:        // aWrittenBySSSns
0000000000008940         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_8968:        // aWrittenBySSSns
0000000000008968         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000008994         align      8
                     aWrittenBySSSns_8998:        // aWrittenBySSSns
0000000000008998         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
00000000000089c8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
00000000000089fc         align      512
                     aWrittenBySSSns_8a00:        // aWrittenBySSSns
0000000000008a00         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
0000000000008a3c         align      64
                     aGeneralHelpUsi:
0000000000008a40         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000008a81         align      4
                     switch_table_8a84:        // switch_table
0000000000008a84         dd         version_etc_ar.loc_46b6-switch_table_8a84, version_etc_ar.loc_4748-switch_table_8a84, version_etc_ar.loc_4788-switch_table_8a84, version_etc_ar.loc_47d0-switch_table_8a84 ; switch table used at 0x4634 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000008a94         dd         version_etc_ar.loc_4820-switch_table_8a84, version_etc_ar.loc_4878-switch_table_8a84, version_etc_ar.loc_48a8-switch_table_8a84, version_etc_ar.loc_4910-switch_table_8a84
0000000000008aa4         dd         version_etc_ar.loc_4640-switch_table_8a84, version_etc_ar.loc_46f0-switch_table_8a84
0000000000008aac         align      64
                     version_etc_copyright:
0000000000008ac0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
0000000000008aef         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li:
0000000000008b00         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoumax+908
                     a0StrtolbaseStr:
0000000000008b20         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoumax+915
0000000000008b46         align      8
                     switch_table_8b48:        // switch_table
0000000000008b48         dd         sub_4e67.loc_5196-switch_table_8b48, 2 dup (sub_4e67.loc_508c-switch_table_8b48), sub_4e67.loc_5173-switch_table_8b48, sub_4e67.loc_508c-switch_table_8b48 ; switch table used at 0x5046 containing 54 entries, DATA XREF=xstrtoumax+452
0000000000008b5c         dd         sub_4e67.loc_51ac-switch_table_8b48, 3 dup (sub_4e67.loc_508c-switch_table_8b48), sub_4e67.loc_512f-switch_table_8b48, sub_4e67.loc_508c-switch_table_8b48
0000000000008b74         dd         sub_4e67.loc_5048-switch_table_8b48, 2 dup (sub_4e67.loc_508c-switch_table_8b48), sub_4e67.loc_5150-switch_table_8b48, 3 dup (sub_4e67.loc_508c-switch_table_8b48)
0000000000008b90         dd         sub_4e67.loc_510f-switch_table_8b48, 4 dup (sub_4e67.loc_508c-switch_table_8b48), sub_4e67.loc_50ea-switch_table_8b48, sub_4e67.loc_50c4-switch_table_8b48
0000000000008bac         dd         7 dup (sub_4e67.loc_508c-switch_table_8b48), sub_4e67.loc_50ad-switch_table_8b48, sub_4e67.loc_5070-switch_table_8b48, 3 dup (sub_4e67.loc_508c-switch_table_8b48)
0000000000008bdc         dd         sub_4e67.loc_51ac-switch_table_8b48, 3 dup (sub_4e67.loc_508c-switch_table_8b48), sub_4e67.loc_512f-switch_table_8b48, sub_4e67.loc_508c-switch_table_8b48
0000000000008bf4         dd         sub_4e67.loc_5048-switch_table_8b48, 6 dup (sub_4e67.loc_508c-switch_table_8b48), sub_4e67.loc_510f-switch_table_8b48, 2 dup (sub_4e67.loc_508c-switch_table_8b48)
0000000000008c1c         dd         sub_4e67.loc_5097-switch_table_8b48
                     __PRETTY_FUNCTION__.4162:
0000000000008c20         db         "xstrtoumax", 0                             ; DATA XREF=xstrtoumax+901
0000000000008c2b         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000008c2c         db  0x00 ; '.'
                     aPosix:
0000000000008c2d         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000008c33         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
0000000000008c39         align      4
                     switch_table_8c3c:        // switch_table
0000000000008c3c         dd         vasnprintf.loc_6816-switch_table_8c3c, vasnprintf.loc_62b0-switch_table_8c3c, vasnprintf.loc_6280-switch_table_8c3c, vasnprintf.loc_61f8-switch_table_8c3c ; switch table used at 0x5e4b containing 18 entries, DATA XREF=vasnprintf+1357
0000000000008c4c         dd         vasnprintf.loc_61b8-switch_table_8c3c, 2 dup (vasnprintf.loc_5f88-switch_table_8c3c), 4 dup (vasnprintf.loc_5e50-switch_table_8c3c), vasnprintf.loc_6138-switch_table_8c3c
0000000000008c6c         dd         vasnprintf.loc_60b0-switch_table_8c3c, 2 dup (vasnprintf.loc_5f88-switch_table_8c3c), 3 dup (vasnprintf.loc_5e50-switch_table_8c3c)
                     switch_table_8c84:        // switch_table
0000000000008c84         dd         vasnprintf.loc_6660-switch_table_8c84, vasnprintf.loc_6680-switch_table_8c84, vasnprintf.loc_6670-switch_table_8c84, 2 dup (vasnprintf.loc_6530-switch_table_8c84) ; switch table used at 0x63f0 containing 5 entries, DATA XREF=vasnprintf+2798
                     aNull:
0000000000008c98         db         "(NULL)", 0                                 ; DATA XREF=printf_fetchargs+24
0000000000008c9f         db  0x00 ; '.'
0000000000008ca0         db  0xe0 ; '.'                                         ; DATA XREF=printf_fetchargs+10
0000000000008ca1         db  0xdd ; '.'
0000000000008ca2         db  0xff ; '.'
0000000000008ca3         db  0xff ; '.'
0000000000008ca4         db  0x2c ; ','
0000000000008ca5         db  0xde ; '.'
0000000000008ca6         db  0xff ; '.'
0000000000008ca7         db  0xff ; '.'
0000000000008ca8         db  0x2c ; ','
0000000000008ca9         db  0xde ; '.'
0000000000008caa         db  0xff ; '.'
0000000000008cab         db  0xff ; '.'
0000000000008cac         db  0x4e ; 'N'
0000000000008cad         db  0xde ; '.'
0000000000008cae         db  0xff ; '.'
0000000000008caf         db  0xff ; '.'
0000000000008cb0         db  0x4e ; 'N'
0000000000008cb1         db  0xde ; '.'
0000000000008cb2         db  0xff ; '.'
0000000000008cb3         db  0xff ; '.'
0000000000008cb4         db  0x0a ; '.'
0000000000008cb5         db  0xde ; '.'
0000000000008cb6         db  0xff ; '.'
0000000000008cb7         db  0xff ; '.'
0000000000008cb8         db  0x0a ; '.'
0000000000008cb9         db  0xde ; '.'
0000000000008cba         db  0xff ; '.'
0000000000008cbb         db  0xff ; '.'
0000000000008cbc         db  0xe6 ; '.'
0000000000008cbd         db  0xdd ; '.'
0000000000008cbe         db  0xff ; '.'
0000000000008cbf         db  0xff ; '.'
0000000000008cc0         db  0xe6 ; '.'
0000000000008cc1         db  0xdd ; '.'
0000000000008cc2         db  0xff ; '.'
0000000000008cc3         db  0xff ; '.'
0000000000008cc4         db  0xe6 ; '.'
0000000000008cc5         db  0xdd ; '.'
0000000000008cc6         db  0xff ; '.'
0000000000008cc7         db  0xff ; '.'
0000000000008cc8         db  0xe6 ; '.'
0000000000008cc9         db  0xdd ; '.'
0000000000008cca         db  0xff ; '.'
0000000000008ccb         db  0xff ; '.'
0000000000008ccc         db  0xa2 ; '.'
0000000000008ccd         db  0xde ; '.'
0000000000008cce         db  0xff ; '.'
0000000000008ccf         db  0xff ; '.'
0000000000008cd0         db  0xb0 ; '.'
0000000000008cd1         db  0xdd ; '.'
0000000000008cd2         db  0xff ; '.'
0000000000008cd3         db  0xff ; '.'
0000000000008cd4         db  0x0a ; '.'
0000000000008cd5         db  0xde ; '.'
0000000000008cd6         db  0xff ; '.'
0000000000008cd7         db  0xff ; '.'
0000000000008cd8         db  0x0a ; '.'
0000000000008cd9         db  0xde ; '.'
0000000000008cda         db  0xff ; '.'
0000000000008cdb         db  0xff ; '.'
0000000000008cdc         db  0x74 ; 't'
0000000000008cdd         db  0xde ; '.'
0000000000008cde         db  0xff ; '.'
0000000000008cdf         db  0xff ; '.'
0000000000008ce0         db  0xd0 ; '.'
0000000000008ce1         db  0xde ; '.'
0000000000008ce2         db  0xff ; '.'
0000000000008ce3         db  0xff ; '.'
0000000000008ce4         db  0xe6 ; '.'
0000000000008ce5         db  0xdd ; '.'
0000000000008ce6         db  0xff ; '.'
0000000000008ce7         db  0xff ; '.'
0000000000008ce8         db  0xe6 ; '.'
0000000000008ce9         db  0xdd ; '.'
0000000000008cea         db  0xff ; '.'
0000000000008ceb         db  0xff ; '.'
0000000000008cec         db  0xe6 ; '.'
0000000000008ced         db  0xdd ; '.'
0000000000008cee         db  0xff ; '.'
0000000000008cef         db  0xff ; '.'
0000000000008cf0         db  0xe6 ; '.'
0000000000008cf1         db  0xdd ; '.'
0000000000008cf2         db  0xff ; '.'
0000000000008cf3         db  0xff ; '.'
0000000000008cf4         db  0xe6 ; '.'
0000000000008cf5         db  0xdd ; '.'
0000000000008cf6         db  0xff ; '.'
0000000000008cf7         db  0xff ; '.'
0000000000008cf8         db  0xe6 ; '.'
0000000000008cf9         db  0xdd ; '.'
0000000000008cfa         db  0xff ; '.'
0000000000008cfb         db  0xff ; '.'
0000000000008cfc         db  0x00 ; '.'
0000000000008cfd         db  0x00 ; '.'
0000000000008cfe         db  0x00 ; '.'
0000000000008cff         db  0x00 ; '.'
                     wide_null_string.2696:
0000000000008d00         db  0x28 ; '('                                         ; DATA XREF=printf_fetchargs+17
0000000000008d01         db  0x00 ; '.'
0000000000008d02         db  0x00 ; '.'
0000000000008d03         db  0x00 ; '.'
0000000000008d04         db  0x4e ; 'N'
0000000000008d05         db  0x00 ; '.'
0000000000008d06         db  0x00 ; '.'
0000000000008d07         db  0x00 ; '.'
0000000000008d08         db  0x55 ; 'U'
0000000000008d09         db  0x00 ; '.'
0000000000008d0a         db  0x00 ; '.'
0000000000008d0b         db  0x00 ; '.'
0000000000008d0c         db  0x4c ; 'L'
0000000000008d0d         db  0x00 ; '.'
0000000000008d0e         db  0x00 ; '.'
0000000000008d0f         db  0x00 ; '.'
0000000000008d10         db  0x4c ; 'L'
0000000000008d11         db  0x00 ; '.'
0000000000008d12         db  0x00 ; '.'
0000000000008d13         db  0x00 ; '.'
0000000000008d14         db  0x29 ; ')'
0000000000008d15         db  0x00 ; '.'
0000000000008d16         db  0x00 ; '.'
0000000000008d17         db  0x00 ; '.'
0000000000008d18         db  0x00 ; '.'
0000000000008d19         db  0x00 ; '.'
0000000000008d1a         db  0x00 ; '.'
0000000000008d1b         db  0x00 ; '.'
                     switch_table_8d1c:        // switch_table
0000000000008d1c         dd         printf_parse.loc_6ecb-switch_table_8d1c, 27 dup (printf_parse.loc_745b-switch_table_8d1c), printf_parse.loc_73cb-switch_table_8d1c, printf_parse.loc_745b-switch_table_8d1c ; switch table used at 0x6e55 containing 84 entries, DATA XREF=printf_parse+564
0000000000008d94         dd         printf_parse.loc_73ec-switch_table_8d1c, printf_parse.loc_745b-switch_table_8d1c, 3 dup (printf_parse.loc_73cb-switch_table_8d1c), 11 dup (printf_parse.loc_745b-switch_table_8d1c)
0000000000008dd4         dd         printf_parse.loc_6e57-switch_table_8d1c, 4 dup (printf_parse.loc_745b-switch_table_8d1c), printf_parse.loc_73fc-switch_table_8d1c, 8 dup (printf_parse.loc_745b-switch_table_8d1c)
0000000000008e0c         dd         printf_parse.loc_73cb-switch_table_8d1c, printf_parse.loc_745b-switch_table_8d1c, printf_parse.loc_7358-switch_table_8d1c, printf_parse.loc_736b-switch_table_8d1c
0000000000008e1c         dd         3 dup (printf_parse.loc_73cb-switch_table_8d1c), printf_parse.loc_745b-switch_table_8d1c, printf_parse.loc_736b-switch_table_8d1c, 4 dup (printf_parse.loc_745b-switch_table_8d1c)
0000000000008e40         dd         printf_parse.loc_730c-switch_table_8d1c, printf_parse.loc_73fc-switch_table_8d1c, printf_parse.loc_7450-switch_table_8d1c, 2 dup (printf_parse.loc_745b-switch_table_8d1c)
0000000000008e54         dd         printf_parse.loc_73b8-switch_table_8d1c, printf_parse.loc_745b-switch_table_8d1c, printf_parse.loc_73fc-switch_table_8d1c, 2 dup (printf_parse.loc_745b-switch_table_8d1c)
0000000000008e68         dd         printf_parse.loc_73fc-switch_table_8d1c


        ; Section .eh_frame_hdr
        ; Range: [0x8e6c; 0x9130[ (708 bytes)
        ; File offset : [36460; 37168[ (708 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000008e6c         db  0x01 ; '.'
0000000000008e6d         db  0x1b ; '.'
0000000000008e6e         db  0x03 ; '.'
0000000000008e6f         db  0x3b ; ';'
0000000000008e70         db  0xc0 ; '.'
0000000000008e71         db  0x02 ; '.'
0000000000008e72         db  0x00 ; '.'
0000000000008e73         db  0x00 ; '.'
0000000000008e74         db  0x57 ; 'W'
0000000000008e75         db  0x00 ; '.'
0000000000008e76         db  0x00 ; '.'
0000000000008e77         db  0x00 ; '.'
0000000000008e78         db  0xd4 ; '.'
0000000000008e79         db  0x86 ; '.'
0000000000008e7a         db  0xff ; '.'
0000000000008e7b         db  0xff ; '.'
0000000000008e7c         db  0x0c ; '.'
0000000000008e7d         db  0x03 ; '.'
0000000000008e7e         db  0x00 ; '.'
0000000000008e7f         db  0x00 ; '.'
0000000000008e80         db  0x24 ; '$'
0000000000008e81         db  0x8a ; '.'
0000000000008e82         db  0xff ; '.'
0000000000008e83         db  0xff ; '.'
0000000000008e84         db  0x34 ; '4'
0000000000008e85         db  0x03 ; '.'
0000000000008e86         db  0x00 ; '.'
0000000000008e87         db  0x00 ; '.'
0000000000008e88         db  0x34 ; '4'
0000000000008e89         db  0x8a ; '.'
0000000000008e8a         db  0xff ; '.'
0000000000008e8b         db  0xff ; '.'
0000000000008e8c         db  0x78 ; 'x'
0000000000008e8d         db  0x03 ; '.'
0000000000008e8e         db  0x00 ; '.'
0000000000008e8f         db  0x00 ; '.'
0000000000008e90         db  0x44 ; 'D'
0000000000008e91         db  0x91 ; '.'
0000000000008e92         db  0xff ; '.'
0000000000008e93         db  0xff ; '.'
0000000000008e94         db  0xdc ; '.'
0000000000008e95         db  0x02 ; '.'
0000000000008e96         db  0x00 ; '.'
0000000000008e97         db  0x00 ; '.'
0000000000008e98         db  0x54 ; 'T'
0000000000008e99         db  0x92 ; '.'
0000000000008e9a         db  0xff ; '.'
0000000000008e9b         db  0xff ; '.'
0000000000008e9c         db  0x4c ; 'L'
0000000000008e9d         db  0x03 ; '.'
0000000000008e9e         db  0x00 ; '.'
0000000000008e9f         db  0x00 ; '.'
0000000000008ea0         db  0x74 ; 't'
0000000000008ea1         db  0x96 ; '.'
0000000000008ea2         db  0xff ; '.'
0000000000008ea3         db  0xff ; '.'
0000000000008ea4         db  0xcc ; '.'
0000000000008ea5         db  0x03 ; '.'
0000000000008ea6         db  0x00 ; '.'
0000000000008ea7         db  0x00 ; '.'
0000000000008ea8         db  0x84 ; '.'
0000000000008ea9         db  0x96 ; '.'
0000000000008eaa         db  0xff ; '.'
0000000000008eab         db  0xff ; '.'
0000000000008eac         db  0xe0 ; '.'
0000000000008ead         db  0x03 ; '.'
0000000000008eae         db  0x00 ; '.'
0000000000008eaf         db  0x00 ; '.'
0000000000008eb0         db  0x94 ; '.'
0000000000008eb1         db  0x96 ; '.'
0000000000008eb2         db  0xff ; '.'
0000000000008eb3         db  0xff ; '.'
0000000000008eb4         db  0xf4 ; '.'
0000000000008eb5         db  0x03 ; '.'
0000000000008eb6         db  0x00 ; '.'
0000000000008eb7         db  0x00 ; '.'
0000000000008eb8         db  0x44 ; 'D'
0000000000008eb9         db  0x97 ; '.'
0000000000008eba         db  0xff ; '.'
0000000000008ebb         db  0xff ; '.'
0000000000008ebc         db  0x24 ; '$'
0000000000008ebd         db  0x04 ; '.'
0000000000008ebe         db  0x00 ; '.'
0000000000008ebf         db  0x00 ; '.'
0000000000008ec0         db  0x64 ; 'd'
0000000000008ec1         db  0x97 ; '.'
0000000000008ec2         db  0xff ; '.'
0000000000008ec3         db  0xff ; '.'
0000000000008ec4         db  0x44 ; 'D'
0000000000008ec5         db  0x04 ; '.'
0000000000008ec6         db  0x00 ; '.'
0000000000008ec7         db  0x00 ; '.'
0000000000008ec8         db  0xc4 ; '.'
0000000000008ec9         db  0x97 ; '.'
0000000000008eca         db  0xff ; '.'
0000000000008ecb         db  0xff ; '.'
0000000000008ecc         db  0x78 ; 'x'
0000000000008ecd         db  0x04 ; '.'
0000000000008ece         db  0x00 ; '.'
0000000000008ecf         db  0x00 ; '.'
0000000000008ed0         db  0x24 ; '$'
0000000000008ed1         db  0x98 ; '.'
0000000000008ed2         db  0xff ; '.'
0000000000008ed3         db  0xff ; '.'
0000000000008ed4         db  0xa4 ; '.'
0000000000008ed5         db  0x04 ; '.'
0000000000008ed6         db  0x00 ; '.'
0000000000008ed7         db  0x00 ; '.'
0000000000008ed8         db  0x84 ; '.'
0000000000008ed9         db  0x98 ; '.'
0000000000008eda         db  0xff ; '.'
0000000000008edb         db  0xff ; '.'
0000000000008edc         db  0xb8 ; '.'
0000000000008edd         db  0x04 ; '.'
0000000000008ede         db  0x00 ; '.'
0000000000008edf         db  0x00 ; '.'
0000000000008ee0         db  0xd4 ; '.'
0000000000008ee1         db  0x98 ; '.'
0000000000008ee2         db  0xff ; '.'
0000000000008ee3         db  0xff ; '.'
0000000000008ee4         db  0xe4 ; '.'
0000000000008ee5         db  0x04 ; '.'
0000000000008ee6         db  0x00 ; '.'
0000000000008ee7         db  0x00 ; '.'
0000000000008ee8         db  0xf4 ; '.'
0000000000008ee9         db  0x98 ; '.'
0000000000008eea         db  0xff ; '.'
0000000000008eeb         db  0xff ; '.'
0000000000008eec         db  0x04 ; '.'
0000000000008eed         db  0x05 ; '.'
0000000000008eee         db  0x00 ; '.'
0000000000008eef         db  0x00 ; '.'
0000000000008ef0         db  0xf4 ; '.'
0000000000008ef1         db  0x99 ; '.'
0000000000008ef2         db  0xff ; '.'
0000000000008ef3         db  0xff ; '.'
0000000000008ef4         db  0x54 ; 'T'
0000000000008ef5         db  0x05 ; '.'
0000000000008ef6         db  0x00 ; '.'
0000000000008ef7         db  0x00 ; '.'
0000000000008ef8         db  0x94 ; '.'
0000000000008ef9         db  0x9a ; '.'
0000000000008efa         db  0xff ; '.'
0000000000008efb         db  0xff ; '.'
0000000000008efc         db  0x74 ; 't'
0000000000008efd         db  0x05 ; '.'
0000000000008efe         db  0x00 ; '.'
0000000000008eff         db  0x00 ; '.'
0000000000008f00         db  0x84 ; '.'
0000000000008f01         db  0x9b ; '.'
0000000000008f02         db  0xff ; '.'
0000000000008f03         db  0xff ; '.'
0000000000008f04         db  0xb8 ; '.'
0000000000008f05         db  0x05 ; '.'
0000000000008f06         db  0x00 ; '.'
0000000000008f07         db  0x00 ; '.'
0000000000008f08         db  0xc4 ; '.'
0000000000008f09         db  0xad ; '.'
0000000000008f0a         db  0xff ; '.'
0000000000008f0b         db  0xff ; '.'
0000000000008f0c         db  0x30 ; '0'
0000000000008f0d         db  0x06 ; '.'
0000000000008f0e         db  0x00 ; '.'
0000000000008f0f         db  0x00 ; '.'
0000000000008f10         db  0x74 ; 't'
0000000000008f11         db  0xaf ; '.'
0000000000008f12         db  0xff ; '.'
0000000000008f13         db  0xff ; '.'
0000000000008f14         db  0x9c ; '.'
0000000000008f15         db  0x06 ; '.'
0000000000008f16         db  0x00 ; '.'
0000000000008f17         db  0x00 ; '.'
0000000000008f18         db  0xb4 ; '.'
0000000000008f19         db  0xaf ; '.'
0000000000008f1a         db  0xff ; '.'
0000000000008f1b         db  0xff ; '.'
0000000000008f1c         db  0xc8 ; '.'
0000000000008f1d         db  0x06 ; '.'
0000000000008f1e         db  0x00 ; '.'
0000000000008f1f         db  0x00 ; '.'
0000000000008f20         db  0xd4 ; '.'
0000000000008f21         db  0xaf ; '.'
0000000000008f22         db  0xff ; '.'
0000000000008f23         db  0xff ; '.'
0000000000008f24         db  0xdc ; '.'
0000000000008f25         db  0x06 ; '.'
0000000000008f26         db  0x00 ; '.'
0000000000008f27         db  0x00 ; '.'
0000000000008f28         db  0xf4 ; '.'
0000000000008f29         db  0xaf ; '.'
0000000000008f2a         db  0xff ; '.'
0000000000008f2b         db  0xff ; '.'
0000000000008f2c         db  0xf0 ; '.'
0000000000008f2d         db  0x06 ; '.'
0000000000008f2e         db  0x00 ; '.'
0000000000008f2f         db  0x00 ; '.'
0000000000008f30         db  0x34 ; '4'
0000000000008f31         db  0xb0 ; '.'
0000000000008f32         db  0xff ; '.'
0000000000008f33         db  0xff ; '.'
0000000000008f34         db  0x04 ; '.'
0000000000008f35         db  0x07 ; '.'
0000000000008f36         db  0x00 ; '.'
0000000000008f37         db  0x00 ; '.'
0000000000008f38         db  0x54 ; 'T'
0000000000008f39         db  0xb0 ; '.'
0000000000008f3a         db  0xff ; '.'
0000000000008f3b         db  0xff ; '.'
0000000000008f3c         db  0x18 ; '.'
0000000000008f3d         db  0x07 ; '.'
0000000000008f3e         db  0x00 ; '.'
0000000000008f3f         db  0x00 ; '.'
0000000000008f40         db  0x84 ; '.'
0000000000008f41         db  0xb0 ; '.'
0000000000008f42         db  0xff ; '.'
0000000000008f43         db  0xff ; '.'
0000000000008f44         db  0x2c ; ','
0000000000008f45         db  0x07 ; '.'
0000000000008f46         db  0x00 ; '.'
0000000000008f47         db  0x00 ; '.'
0000000000008f48         db  0x04 ; '.'
0000000000008f49         db  0xb1 ; '.'
0000000000008f4a         db  0xff ; '.'
0000000000008f4b         db  0xff ; '.'
0000000000008f4c         db  0x80 ; '.'
0000000000008f4d         db  0x07 ; '.'
0000000000008f4e         db  0x00 ; '.'
0000000000008f4f         db  0x00 ; '.'
0000000000008f50         db  0xf4 ; '.'
0000000000008f51         db  0xb1 ; '.'
0000000000008f52         db  0xff ; '.'
0000000000008f53         db  0xff ; '.'
0000000000008f54         db  0xec ; '.'
0000000000008f55         db  0x07 ; '.'
0000000000008f56         db  0x00 ; '.'
0000000000008f57         db  0x00 ; '.'
0000000000008f58         db  0x04 ; '.'
0000000000008f59         db  0xb2 ; '.'
0000000000008f5a         db  0xff ; '.'
0000000000008f5b         db  0xff ; '.'
0000000000008f5c         db  0x00 ; '.'
0000000000008f5d         db  0x08 ; '.'
0000000000008f5e         db  0x00 ; '.'
0000000000008f5f         db  0x00 ; '.'
0000000000008f60         db  0xa4 ; '.'
0000000000008f61         db  0xb2 ; '.'
0000000000008f62         db  0xff ; '.'
0000000000008f63         db  0xff ; '.'
0000000000008f64         db  0x2c ; ','
0000000000008f65         db  0x08 ; '.'
0000000000008f66         db  0x00 ; '.'
0000000000008f67         db  0x00 ; '.'
0000000000008f68         db  0xc4 ; '.'
0000000000008f69         db  0xb2 ; '.'
0000000000008f6a         db  0xff ; '.'
0000000000008f6b         db  0xff ; '.'
0000000000008f6c         db  0x40 ; '@'
0000000000008f6d         db  0x08 ; '.'
0000000000008f6e         db  0x00 ; '.'
0000000000008f6f         db  0x00 ; '.'
0000000000008f70         db  0xd4 ; '.'
0000000000008f71         db  0xb2 ; '.'
0000000000008f72         db  0xff ; '.'
0000000000008f73         db  0xff ; '.'
0000000000008f74         db  0x54 ; 'T'
0000000000008f75         db  0x08 ; '.'
0000000000008f76         db  0x00 ; '.'
0000000000008f77         db  0x00 ; '.'
0000000000008f78         db  0xf4 ; '.'
0000000000008f79         db  0xb2 ; '.'
0000000000008f7a         db  0xff ; '.'
0000000000008f7b         db  0xff ; '.'
0000000000008f7c         db  0x68 ; 'h'
0000000000008f7d         db  0x08 ; '.'
0000000000008f7e         db  0x00 ; '.'
0000000000008f7f         db  0x00 ; '.'
0000000000008f80         db  0x14 ; '.'
0000000000008f81         db  0xb3 ; '.'
0000000000008f82         db  0xff ; '.'
0000000000008f83         db  0xff ; '.'
0000000000008f84         db  0x7c ; '|'
0000000000008f85         db  0x08 ; '.'
0000000000008f86         db  0x00 ; '.'
0000000000008f87         db  0x00 ; '.'
0000000000008f88         db  0xa4 ; '.'
0000000000008f89         db  0xb3 ; '.'
0000000000008f8a         db  0xff ; '.'
0000000000008f8b         db  0xff ; '.'
0000000000008f8c         db  0x98 ; '.'
0000000000008f8d         db  0x08 ; '.'
0000000000008f8e         db  0x00 ; '.'
0000000000008f8f         db  0x00 ; '.'
0000000000008f90         db  0x34 ; '4'
0000000000008f91         db  0xb4 ; '.'
0000000000008f92         db  0xff ; '.'
0000000000008f93         db  0xff ; '.'
0000000000008f94         db  0xb4 ; '.'
0000000000008f95         db  0x08 ; '.'
0000000000008f96         db  0x00 ; '.'
0000000000008f97         db  0x00 ; '.'
0000000000008f98         db  0x44 ; 'D'
0000000000008f99         db  0xb4 ; '.'
0000000000008f9a         db  0xff ; '.'
0000000000008f9b         db  0xff ; '.'
0000000000008f9c         db  0xc8 ; '.'
0000000000008f9d         db  0x08 ; '.'
0000000000008f9e         db  0x00 ; '.'
0000000000008f9f         db  0x00 ; '.'
0000000000008fa0         db  0x54 ; 'T'
0000000000008fa1         db  0xb4 ; '.'
0000000000008fa2         db  0xff ; '.'
0000000000008fa3         db  0xff ; '.'
0000000000008fa4         db  0xdc ; '.'
0000000000008fa5         db  0x08 ; '.'
0000000000008fa6         db  0x00 ; '.'
0000000000008fa7         db  0x00 ; '.'
0000000000008fa8         db  0xf4 ; '.'
0000000000008fa9         db  0xb4 ; '.'
0000000000008faa         db  0xff ; '.'
0000000000008fab         db  0xff ; '.'
0000000000008fac         db  0xf8 ; '.'
0000000000008fad         db  0x08 ; '.'
0000000000008fae         db  0x00 ; '.'
0000000000008faf         db  0x00 ; '.'
0000000000008fb0         db  0x04 ; '.'
0000000000008fb1         db  0xb5 ; '.'
0000000000008fb2         db  0xff ; '.'
0000000000008fb3         db  0xff ; '.'
0000000000008fb4         db  0x0c ; '.'
0000000000008fb5         db  0x09 ; '.'
0000000000008fb6         db  0x00 ; '.'
0000000000008fb7         db  0x00 ; '.'
0000000000008fb8         db  0x24 ; '$'
0000000000008fb9         db  0xb5 ; '.'
0000000000008fba         db  0xff ; '.'
0000000000008fbb         db  0xff ; '.'
0000000000008fbc         db  0x20 ; ' '
0000000000008fbd         db  0x09 ; '.'
0000000000008fbe         db  0x00 ; '.'
0000000000008fbf         db  0x00 ; '.'
0000000000008fc0         db  0x34 ; '4'
0000000000008fc1         db  0xb5 ; '.'
0000000000008fc2         db  0xff ; '.'
0000000000008fc3         db  0xff ; '.'
0000000000008fc4         db  0x34 ; '4'
0000000000008fc5         db  0x09 ; '.'
0000000000008fc6         db  0x00 ; '.'
0000000000008fc7         db  0x00 ; '.'
0000000000008fc8         db  0xc4 ; '.'
0000000000008fc9         db  0xb5 ; '.'
0000000000008fca         db  0xff ; '.'
0000000000008fcb         db  0xff ; '.'
0000000000008fcc         db  0x50 ; 'P'
0000000000008fcd         db  0x09 ; '.'
0000000000008fce         db  0x00 ; '.'
0000000000008fcf         db  0x00 ; '.'
0000000000008fd0         db  0x64 ; 'd'
0000000000008fd1         db  0xb6 ; '.'
0000000000008fd2         db  0xff ; '.'
0000000000008fd3         db  0xff ; '.'
0000000000008fd4         db  0x6c ; 'l'
0000000000008fd5         db  0x09 ; '.'
0000000000008fd6         db  0x00 ; '.'
0000000000008fd7         db  0x00 ; '.'
0000000000008fd8         db  0x74 ; 't'
0000000000008fd9         db  0xb6 ; '.'
0000000000008fda         db  0xff ; '.'
0000000000008fdb         db  0xff ; '.'
0000000000008fdc         db  0x80 ; '.'
0000000000008fdd         db  0x09 ; '.'
0000000000008fde         db  0x00 ; '.'
0000000000008fdf         db  0x00 ; '.'
0000000000008fe0         db  0x94 ; '.'
0000000000008fe1         db  0xb6 ; '.'
0000000000008fe2         db  0xff ; '.'
0000000000008fe3         db  0xff ; '.'
0000000000008fe4         db  0x94 ; '.'
0000000000008fe5         db  0x09 ; '.'
0000000000008fe6         db  0x00 ; '.'
0000000000008fe7         db  0x00 ; '.'
0000000000008fe8         db  0xb4 ; '.'
0000000000008fe9         db  0xb6 ; '.'
0000000000008fea         db  0xff ; '.'
0000000000008feb         db  0xff ; '.'
0000000000008fec         db  0xa8 ; '.'
0000000000008fed         db  0x09 ; '.'
0000000000008fee         db  0x00 ; '.'
0000000000008fef         db  0x00 ; '.'
0000000000008ff0         db  0xc4 ; '.'
0000000000008ff1         db  0xb6 ; '.'
0000000000008ff2         db  0xff ; '.'
0000000000008ff3         db  0xff ; '.'
0000000000008ff4         db  0xbc ; '.'
0000000000008ff5         db  0x09 ; '.'
0000000000008ff6         db  0x00 ; '.'
0000000000008ff7         db  0x00 ; '.'
0000000000008ff8         db  0xe4 ; '.'
0000000000008ff9         db  0xb6 ; '.'
0000000000008ffa         db  0xff ; '.'
0000000000008ffb         db  0xff ; '.'
0000000000008ffc         db  0xd0 ; '.'
0000000000008ffd         db  0x09 ; '.'
0000000000008ffe         db  0x00 ; '.'
0000000000008fff         db  0x00 ; '.'
0000000000009000         db  0x04 ; '.'
0000000000009001         db  0xb7 ; '.'
0000000000009002         db  0xff ; '.'
0000000000009003         db  0xff ; '.'
0000000000009004         db  0xe4 ; '.'
0000000000009005         db  0x09 ; '.'
0000000000009006         db  0x00 ; '.'
0000000000009007         db  0x00 ; '.'
0000000000009008         db  0x24 ; '$'
0000000000009009         db  0xb7 ; '.'
000000000000900a         db  0xff ; '.'
000000000000900b         db  0xff ; '.'
000000000000900c         db  0xfc ; '.'
000000000000900d         db  0x09 ; '.'
000000000000900e         db  0x00 ; '.'
000000000000900f         db  0x00 ; '.'
0000000000009010         db  0x44 ; 'D'
0000000000009011         db  0xbb ; '.'
0000000000009012         db  0xff ; '.'
0000000000009013         db  0xff ; '.'
0000000000009014         db  0x10 ; '.'
0000000000009015         db  0x0b ; '.'
0000000000009016         db  0x00 ; '.'
0000000000009017         db  0x00 ; '.'
0000000000009018         db  0x64 ; 'd'
0000000000009019         db  0xbb ; '.'
000000000000901a         db  0xff ; '.'
000000000000901b         db  0xff ; '.'
000000000000901c         db  0x24 ; '$'
000000000000901d         db  0x0b ; '.'
000000000000901e         db  0x00 ; '.'
000000000000901f         db  0x00 ; '.'
0000000000009020         db  0xe4 ; '.'
0000000000009021         db  0xbb ; '.'
0000000000009022         db  0xff ; '.'
0000000000009023         db  0xff ; '.'
0000000000009024         db  0x40 ; '@'
0000000000009025         db  0x0b ; '.'
0000000000009026         db  0x00 ; '.'
0000000000009027         db  0x00 ; '.'
0000000000009028         db  0xc4 ; '.'
0000000000009029         db  0xbc ; '.'
000000000000902a         db  0xff ; '.'
000000000000902b         db  0xff ; '.'
000000000000902c         db  0x6c ; 'l'
000000000000902d         db  0x0b ; '.'
000000000000902e         db  0x00 ; '.'
000000000000902f         db  0x00 ; '.'
0000000000009030         db  0x44 ; 'D'
0000000000009031         db  0xbd ; '.'
0000000000009032         db  0xff ; '.'
0000000000009033         db  0xff ; '.'
0000000000009034         db  0x8c ; '.'
0000000000009035         db  0x0b ; '.'
0000000000009036         db  0x00 ; '.'
0000000000009037         db  0x00 ; '.'
0000000000009038         db  0x64 ; 'd'
0000000000009039         db  0xbd ; '.'
000000000000903a         db  0xff ; '.'
000000000000903b         db  0xff ; '.'
000000000000903c         db  0xa8 ; '.'
000000000000903d         db  0x0b ; '.'
000000000000903e         db  0x00 ; '.'
000000000000903f         db  0x00 ; '.'
0000000000009040         db  0x94 ; '.'
0000000000009041         db  0xbd ; '.'
0000000000009042         db  0xff ; '.'
0000000000009043         db  0xff ; '.'
0000000000009044         db  0xbc ; '.'
0000000000009045         db  0x0b ; '.'
0000000000009046         db  0x00 ; '.'
0000000000009047         db  0x00 ; '.'
0000000000009048         db  0xa4 ; '.'
0000000000009049         db  0xbd ; '.'
000000000000904a         db  0xff ; '.'
000000000000904b         db  0xff ; '.'
000000000000904c         db  0xd0 ; '.'
000000000000904d         db  0x0b ; '.'
000000000000904e         db  0x00 ; '.'
000000000000904f         db  0x00 ; '.'
0000000000009050         db  0xe4 ; '.'
0000000000009051         db  0xbd ; '.'
0000000000009052         db  0xff ; '.'
0000000000009053         db  0xff ; '.'
0000000000009054         db  0xf4 ; '.'
0000000000009055         db  0x0b ; '.'
0000000000009056         db  0x00 ; '.'
0000000000009057         db  0x00 ; '.'
0000000000009058         db  0x14 ; '.'
0000000000009059         db  0xbe ; '.'
000000000000905a         db  0xff ; '.'
000000000000905b         db  0xff ; '.'
000000000000905c         db  0x08 ; '.'
000000000000905d         db  0x0c ; '.'
000000000000905e         db  0x00 ; '.'
000000000000905f         db  0x00 ; '.'
0000000000009060         db  0xa4 ; '.'
0000000000009061         db  0xbe ; '.'
0000000000009062         db  0xff ; '.'
0000000000009063         db  0xff ; '.'
0000000000009064         db  0x20 ; ' '
0000000000009065         db  0x0c ; '.'
0000000000009066         db  0x00 ; '.'
0000000000009067         db  0x00 ; '.'
0000000000009068         db  0xf4 ; '.'
0000000000009069         db  0xbe ; '.'
000000000000906a         db  0xff ; '.'
000000000000906b         db  0xff ; '.'
000000000000906c         db  0x38 ; '8'
000000000000906d         db  0x0c ; '.'
000000000000906e         db  0x00 ; '.'
000000000000906f         db  0x00 ; '.'
0000000000009070         db  0x14 ; '.'
0000000000009071         db  0xbf ; '.'
0000000000009072         db  0xff ; '.'
0000000000009073         db  0xff ; '.'
0000000000009074         db  0x54 ; 'T'
0000000000009075         db  0x0c ; '.'
0000000000009076         db  0x00 ; '.'
0000000000009077         db  0x00 ; '.'
0000000000009078         db  0x44 ; 'D'
0000000000009079         db  0xbf ; '.'
000000000000907a         db  0xff ; '.'
000000000000907b         db  0xff ; '.'
000000000000907c         db  0x70 ; 'p'
000000000000907d         db  0x0c ; '.'
000000000000907e         db  0x00 ; '.'
000000000000907f         db  0x00 ; '.'
0000000000009080         db  0x74 ; 't'
0000000000009081         db  0xbf ; '.'
0000000000009082         db  0xff ; '.'
0000000000009083         db  0xff ; '.'
0000000000009084         db  0x98 ; '.'
0000000000009085         db  0x0c ; '.'
0000000000009086         db  0x00 ; '.'
0000000000009087         db  0x00 ; '.'
0000000000009088         db  0x94 ; '.'
0000000000009089         db  0xbf ; '.'
000000000000908a         db  0xff ; '.'
000000000000908b         db  0xff ; '.'
000000000000908c         db  0xb4 ; '.'
000000000000908d         db  0x0c ; '.'
000000000000908e         db  0x00 ; '.'
000000000000908f         db  0x00 ; '.'
0000000000009090         db  0xd4 ; '.'
0000000000009091         db  0xbf ; '.'
0000000000009092         db  0xff ; '.'
0000000000009093         db  0xff ; '.'
0000000000009094         db  0xcc ; '.'
0000000000009095         db  0x0c ; '.'
0000000000009096         db  0x00 ; '.'
0000000000009097         db  0x00 ; '.'
0000000000009098         db  0x04 ; '.'
0000000000009099         db  0xc0 ; '.'
000000000000909a         db  0xff ; '.'
000000000000909b         db  0xff ; '.'
000000000000909c         db  0xec ; '.'
000000000000909d         db  0x0c ; '.'
000000000000909e         db  0x00 ; '.'
000000000000909f         db  0x00 ; '.'
00000000000090a0         db  0x24 ; '$'
00000000000090a1         db  0xc4 ; '.'
00000000000090a2         db  0xff ; '.'
00000000000090a3         db  0xff ; '.'
00000000000090a4         db  0x3c ; '<'
00000000000090a5         db  0x0d ; '.'
00000000000090a6         db  0x00 ; '.'
00000000000090a7         db  0x00 ; '.'
00000000000090a8         db  0xe4 ; '.'
00000000000090a9         db  0xc4 ; '.'
00000000000090aa         db  0xff ; '.'
00000000000090ab         db  0xff ; '.'
00000000000090ac         db  0x5c ; '\'
00000000000090ad         db  0x0d ; '.'
00000000000090ae         db  0x00 ; '.'
00000000000090af         db  0x00 ; '.'
00000000000090b0         db  0x74 ; 't'
00000000000090b1         db  0xc5 ; '.'
00000000000090b2         db  0xff ; '.'
00000000000090b3         db  0xff ; '.'
00000000000090b4         db  0x9c ; '.'
00000000000090b5         db  0x0d ; '.'
00000000000090b6         db  0x00 ; '.'
00000000000090b7         db  0x00 ; '.'
00000000000090b8         db  0xf4 ; '.'
00000000000090b9         db  0xc5 ; '.'
00000000000090ba         db  0xff ; '.'
00000000000090bb         db  0xff ; '.'
00000000000090bc         db  0xc4 ; '.'
00000000000090bd         db  0x0d ; '.'
00000000000090be         db  0x00 ; '.'
00000000000090bf         db  0x00 ; '.'
00000000000090c0         db  0x14 ; '.'
00000000000090c1         db  0xc6 ; '.'
00000000000090c2         db  0xff ; '.'
00000000000090c3         db  0xff ; '.'
00000000000090c4         db  0xd8 ; '.'
00000000000090c5         db  0x0d ; '.'
00000000000090c6         db  0x00 ; '.'
00000000000090c7         db  0x00 ; '.'
00000000000090c8         db  0x34 ; '4'
00000000000090c9         db  0xc6 ; '.'
00000000000090ca         db  0xff ; '.'
00000000000090cb         db  0xff ; '.'
00000000000090cc         db  0xec ; '.'
00000000000090cd         db  0x0d ; '.'
00000000000090ce         db  0x00 ; '.'
00000000000090cf         db  0x00 ; '.'
00000000000090d0         db  0x44 ; 'D'
00000000000090d1         db  0xc8 ; '.'
00000000000090d2         db  0xff ; '.'
00000000000090d3         db  0xff ; '.'
00000000000090d4         db  0x3c ; '<'
00000000000090d5         db  0x0e ; '.'
00000000000090d6         db  0x00 ; '.'
00000000000090d7         db  0x00 ; '.'
00000000000090d8         db  0xc4 ; '.'
00000000000090d9         db  0xc8 ; '.'
00000000000090da         db  0xff ; '.'
00000000000090db         db  0xff ; '.'
00000000000090dc         db  0x8c ; '.'
00000000000090dd         db  0x0e ; '.'
00000000000090de         db  0x00 ; '.'
00000000000090df         db  0x00 ; '.'
00000000000090e0         db  0x24 ; '$'
00000000000090e1         db  0xc9 ; '.'
00000000000090e2         db  0xff ; '.'
00000000000090e3         db  0xff ; '.'
00000000000090e4         db  0xac ; '.'
00000000000090e5         db  0x0e ; '.'
00000000000090e6         db  0x00 ; '.'
00000000000090e7         db  0x00 ; '.'
00000000000090e8         db  0x64 ; 'd'
00000000000090e9         db  0xc9 ; '.'
00000000000090ea         db  0xff ; '.'
00000000000090eb         db  0xff ; '.'
00000000000090ec         db  0xcc ; '.'
00000000000090ed         db  0x0e ; '.'
00000000000090ee         db  0x00 ; '.'
00000000000090ef         db  0x00 ; '.'
00000000000090f0         db  0xe4 ; '.'
00000000000090f1         db  0xc9 ; '.'
00000000000090f2         db  0xff ; '.'
00000000000090f3         db  0xff ; '.'
00000000000090f4         db  0x04 ; '.'
00000000000090f5         db  0x0f ; '.'
00000000000090f6         db  0x00 ; '.'
00000000000090f7         db  0x00 ; '.'
00000000000090f8         db  0x24 ; '$'
00000000000090f9         db  0xca ; '.'
00000000000090fa         db  0xff ; '.'
00000000000090fb         db  0xff ; '.'
00000000000090fc         db  0x24 ; '$'
00000000000090fd         db  0x0f ; '.'
00000000000090fe         db  0x00 ; '.'
00000000000090ff         db  0x00 ; '.'
0000000000009100         db  0x84 ; '.'
0000000000009101         db  0xca ; '.'
0000000000009102         db  0xff ; '.'
0000000000009103         db  0xff ; '.'
0000000000009104         db  0x54 ; 'T'
0000000000009105         db  0x0f ; '.'
0000000000009106         db  0x00 ; '.'
0000000000009107         db  0x00 ; '.'
0000000000009108         db  0xa4 ; '.'
0000000000009109         db  0xdb ; '.'
000000000000910a         db  0xff ; '.'
000000000000910b         db  0xff ; '.'
000000000000910c         db  0x84 ; '.'
000000000000910d         db  0x0f ; '.'
000000000000910e         db  0x00 ; '.'
000000000000910f         db  0x00 ; '.'
0000000000009110         db  0xa4 ; '.'
0000000000009111         db  0xdd ; '.'
0000000000009112         db  0xff ; '.'
0000000000009113         db  0xff ; '.'
0000000000009114         db  0x9c ; '.'
0000000000009115         db  0x0f ; '.'
0000000000009116         db  0x00 ; '.'
0000000000009117         db  0x00 ; '.'
0000000000009118         db  0x94 ; '.'
0000000000009119         db  0xea ; '.'
000000000000911a         db  0xff ; '.'
000000000000911b         db  0xff ; '.'
000000000000911c         db  0xec ; '.'
000000000000911d         db  0x0f ; '.'
000000000000911e         db  0x00 ; '.'
000000000000911f         db  0x00 ; '.'
0000000000009120         db  0x04 ; '.'
0000000000009121         db  0xeb ; '.'
0000000000009122         db  0xff ; '.'
0000000000009123         db  0xff ; '.'
0000000000009124         db  0x34 ; '4'
0000000000009125         db  0x10 ; '.'
0000000000009126         db  0x00 ; '.'
0000000000009127         db  0x00 ; '.'
0000000000009128         db  0x14 ; '.'
0000000000009129         db  0xeb ; '.'
000000000000912a         db  0xff ; '.'
000000000000912b         db  0xff ; '.'
000000000000912c         db  0x4c ; 'L'
000000000000912d         db  0x10 ; '.'
000000000000912e         db  0x00 ; '.'
000000000000912f         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x9130; 0x9ed0[ (3488 bytes)
        ; File offset : [37168; 40656[ (3488 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000009130         dd         0x00000014                                  ; Length of the record
0000000000009134         dd         0x00000000                                  ; CIE ID
0000000000009138         db         0x01                                        ; Version
0000000000009139         db         "zR", 0                                     ; Augmentation String
000000000000913c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000913d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000913e         db         0x10                                        ; Return address register
000000000000913f         db         0x01                                        ; Augmentation data length
0000000000009140         db         0x1b                                        ; FDE encoding
0000000000009141         db  0x0c ; '.'
0000000000009142         db  0x07 ; '.'
0000000000009143         db  0x08 ; '.'
0000000000009144         db  0x90 ; '.'
0000000000009145         db  0x01 ; '.'
0000000000009146         db  0x07 ; '.'
0000000000009147         db  0x10 ; '.'
0000000000009148         dd         0x00000014                                  ; Length of the record
000000000000914c         dd         0x0000001c                                  ; FDE: parent CIE at 0x9130 (FDE encoding = 0x1B)
0000000000009150         db         0x60, 0x8e, 2 dup (0xff)                    ; begin 0x1fb0
0000000000009154         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1fdb)
0000000000009158         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009159         align      32
0000000000009160         dd         0x00000014                                  ; Length of the record
0000000000009164         dd         0x00000000                                  ; CIE ID
0000000000009168         db         0x01                                        ; Version
0000000000009169         db         "zR", 0                                     ; Augmentation String
000000000000916c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000916d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000916e         db         0x10                                        ; Return address register
000000000000916f         db         0x01                                        ; Augmentation data length
0000000000009170         db         0x1b                                        ; FDE encoding
0000000000009171         db  0x0c ; '.'
0000000000009172         db  0x07 ; '.'
0000000000009173         db  0x08 ; '.'
0000000000009174         db  0x90 ; '.'
0000000000009175         db  0x01 ; '.'
0000000000009176         db  0x00 ; '.'
0000000000009177         db  0x00 ; '.'
0000000000009178         dd         0x00000024                                  ; Length of the record
000000000000917c         dd         0x0000001c                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009180         db         0xc0, 0x83, 2 dup (0xff)                    ; begin 0x1540
0000000000009184         db         0x50, 0x03, 2 dup (0x00)                    ; length 0x350 (end at 0x1890)
0000000000009188         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009189         db  0x0e ; '.'
000000000000918a         db  0x10 ; '.'
000000000000918b         db  0x46 ; 'F'
000000000000918c         db  0x0e ; '.'
000000000000918d         db  0x18 ; '.'
000000000000918e         db  0x4a ; 'J'
000000000000918f         db  0x0f ; '.'
0000000000009190         db  0x0b ; '.'
0000000000009191         db  0x77 ; 'w'
0000000000009192         db  0x08 ; '.'
0000000000009193         db  0x80 ; '.'
0000000000009194         db  0x00 ; '.'
0000000000009195         db  0x3f ; '?'
0000000000009196         db  0x1a ; '.'
0000000000009197         db  0x3b ; ';'
0000000000009198         db  0x2a ; '*'
0000000000009199         db  0x33 ; '3'
000000000000919a         db  0x24 ; '$'
000000000000919b         db  0x22 ; '"'
000000000000919c         db  0x00 ; '.'
000000000000919d         db  0x00 ; '.'
000000000000919e         db  0x00 ; '.'
000000000000919f         db  0x00 ; '.'
00000000000091a0         dd         0x00000014                                  ; Length of the record
00000000000091a4         dd         0x00000044                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000091a8         db         0xe8, 0x86, 2 dup (0xff)                    ; begin 0x1890
00000000000091ac         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1898)
00000000000091b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091b1         align      8
00000000000091b8         dd         0x00000028                                  ; Length of the record
00000000000091bc         dd         0x0000005c                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000091c0         db         0x00, 0x8f, 2 dup (0xff)                    ; begin 0x20c0
00000000000091c4         db         0x1a, 0x04, 2 dup (0x00)                    ; length 0x41a (end at 0x24da)
00000000000091c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091c9         db  0x42 ; 'B'
00000000000091ca         db  0x0e ; '.'
00000000000091cb         db  0x10 ; '.'
00000000000091cc         db  0x8d ; '.'
00000000000091cd         db  0x02 ; '.'
00000000000091ce         db  0x42 ; 'B'
00000000000091cf         db  0x0e ; '.'
00000000000091d0         db  0x18 ; '.'
00000000000091d1         db  0x8c ; '.'
00000000000091d2         db  0x03 ; '.'
00000000000091d3         db  0x46 ; 'F'
00000000000091d4         db  0x0e ; '.'
00000000000091d5         db  0x20 ; ' '
00000000000091d6         db  0x86 ; '.'
00000000000091d7         db  0x04 ; '.'
00000000000091d8         db  0x41 ; 'A'
00000000000091d9         db  0x0e ; '.'
00000000000091da         db  0x28 ; '('
00000000000091db         db  0x83 ; '.'
00000000000091dc         db  0x05 ; '.'
00000000000091dd         db  0x49 ; 'I'
00000000000091de         db  0x0e ; '.'
00000000000091df         db  0xb0 ; '.'
00000000000091e0         db  0x01 ; '.'
00000000000091e1         db  0x00 ; '.'
00000000000091e2         db  0x00 ; '.'
00000000000091e3         db  0x00 ; '.'
00000000000091e4         dd         0x00000050                                  ; Length of the record
00000000000091e8         dd         0x00000088                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000091ec         db         0xb4, 0x86, 2 dup (0xff)                    ; begin 0x18a0
00000000000091f0         db         0x01, 0x07, 2 dup (0x00)                    ; length 0x701 (end at 0x1fa1)
00000000000091f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091f5         db  0x42 ; 'B'
00000000000091f6         db  0x0e ; '.'
00000000000091f7         db  0x10 ; '.'
00000000000091f8         db  0x8f ; '.'
00000000000091f9         db  0x02 ; '.'
00000000000091fa         db  0x42 ; 'B'
00000000000091fb         db  0x0e ; '.'
00000000000091fc         db  0x18 ; '.'
00000000000091fd         db  0x8e ; '.'
00000000000091fe         db  0x03 ; '.'
00000000000091ff         db  0x4c ; 'L'
0000000000009200         db  0x0e ; '.'
0000000000009201         db  0x20 ; ' '
0000000000009202         db  0x8d ; '.'
0000000000009203         db  0x04 ; '.'
0000000000009204         db  0x42 ; 'B'
0000000000009205         db  0x0e ; '.'
0000000000009206         db  0x28 ; '('
0000000000009207         db  0x8c ; '.'
0000000000009208         db  0x05 ; '.'
0000000000009209         db  0x48 ; 'H'
000000000000920a         db  0x0e ; '.'
000000000000920b         db  0x30 ; '0'
000000000000920c         db  0x86 ; '.'
000000000000920d         db  0x06 ; '.'
000000000000920e         db  0x41 ; 'A'
000000000000920f         db  0x0e ; '.'
0000000000009210         db  0x38 ; '8'
0000000000009211         db  0x83 ; '.'
0000000000009212         db  0x07 ; '.'
0000000000009213         db  0x4c ; 'L'
0000000000009214         db  0x0e ; '.'
0000000000009215         db  0xb0 ; '.'
0000000000009216         db  0x02 ; '.'
0000000000009217         db  0x03 ; '.'
0000000000009218         db  0x53 ; 'S'
0000000000009219         db  0x04 ; '.'
000000000000921a         db  0x0a ; '.'
000000000000921b         db  0x0e ; '.'
000000000000921c         db  0x38 ; '8'
000000000000921d         db  0x41 ; 'A'
000000000000921e         db  0x0e ; '.'
000000000000921f         db  0x30 ; '0'
0000000000009220         db  0x41 ; 'A'
0000000000009221         db  0x0e ; '.'
0000000000009222         db  0x28 ; '('
0000000000009223         db  0x42 ; 'B'
0000000000009224         db  0x0e ; '.'
0000000000009225         db  0x20 ; ' '
0000000000009226         db  0x42 ; 'B'
0000000000009227         db  0x0e ; '.'
0000000000009228         db  0x18 ; '.'
0000000000009229         db  0x42 ; 'B'
000000000000922a         db  0x0e ; '.'
000000000000922b         db  0x10 ; '.'
000000000000922c         db  0x42 ; 'B'
000000000000922d         db  0x0e ; '.'
000000000000922e         db  0x08 ; '.'
000000000000922f         db  0x41 ; 'A'
0000000000009230         db  0x0b ; '.'
0000000000009231         db  0x00 ; '.'
0000000000009232         db  0x00 ; '.'
0000000000009233         db  0x00 ; '.'
0000000000009234         db  0x00 ; '.'
0000000000009235         db  0x00 ; '.'
0000000000009236         db  0x00 ; '.'
0000000000009237         db  0x00 ; '.'
0000000000009238         dd         0x00000010                                  ; Length of the record
000000000000923c         dd         0x000000dc                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009240         db         0xa0, 0x92, 2 dup (0xff)                    ; begin 0x24e0
0000000000009244         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x24e8)
0000000000009248         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009249         align      4
000000000000924c         dd         0x00000010                                  ; Length of the record
0000000000009250         dd         0x000000f0                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009254         db         0x9c, 0x92, 2 dup (0xff)                    ; begin 0x24f0
0000000000009258         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x24f8)
000000000000925c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000925d         align      32
0000000000009260         dd         0x0000002c                                  ; Length of the record
0000000000009264         dd         0x00000104                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009268         db         0x98, 0x92, 2 dup (0xff)                    ; begin 0x2500
000000000000926c         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x25a4)
0000000000009270         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009271         db  0x41 ; 'A'
0000000000009272         db  0x0e ; '.'
0000000000009273         db  0x10 ; '.'
0000000000009274         db  0x86 ; '.'
0000000000009275         db  0x02 ; '.'
0000000000009276         db  0x41 ; 'A'
0000000000009277         db  0x0e ; '.'
0000000000009278         db  0x18 ; '.'
0000000000009279         db  0x83 ; '.'
000000000000927a         db  0x03 ; '.'
000000000000927b         db  0x44 ; 'D'
000000000000927c         db  0x0e ; '.'
000000000000927d         db  0x20 ; ' '
000000000000927e         db  0x7a ; 'z'
000000000000927f         db  0x0a ; '.'
0000000000009280         db  0x0e ; '.'
0000000000009281         db  0x18 ; '.'
0000000000009282         db  0x41 ; 'A'
0000000000009283         db  0x0e ; '.'
0000000000009284         db  0x10 ; '.'
0000000000009285         db  0x41 ; 'A'
0000000000009286         db  0x0e ; '.'
0000000000009287         db  0x08 ; '.'
0000000000009288         db  0x41 ; 'A'
0000000000009289         db  0x0b ; '.'
000000000000928a         db  0x00 ; '.'
000000000000928b         db  0x00 ; '.'
000000000000928c         db  0x00 ; '.'
000000000000928d         db  0x00 ; '.'
000000000000928e         db  0x00 ; '.'
000000000000928f         db  0x00 ; '.'
0000000000009290         dd         0x0000001c                                  ; Length of the record
0000000000009294         dd         0x00000134                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009298         db         0x18, 0x93, 2 dup (0xff)                    ; begin 0x25b0
000000000000929c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x25c8)
00000000000092a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092a1         db  0x44 ; 'D'
00000000000092a2         db  0x0e ; '.'
00000000000092a3         db  0x10 ; '.'
00000000000092a4         db  0x4e ; 'N'
00000000000092a5         db  0x0a ; '.'
00000000000092a6         db  0x0e ; '.'
00000000000092a7         db  0x08 ; '.'
00000000000092a8         db  0x41 ; 'A'
00000000000092a9         db  0x0b ; '.'
00000000000092aa         db  0x00 ; '.'
00000000000092ab         db  0x00 ; '.'
00000000000092ac         db  0x00 ; '.'
00000000000092ad         db  0x00 ; '.'
00000000000092ae         db  0x00 ; '.'
00000000000092af         db  0x00 ; '.'
00000000000092b0         dd         0x00000030                                  ; Length of the record
00000000000092b4         dd         0x00000154                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000092b8         db         0x18, 0x93, 2 dup (0xff)                    ; begin 0x25d0
00000000000092bc         db         0x5d, 3 dup (0x00)                          ; length 0x5d (end at 0x262d)
00000000000092c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092c1         db  0x41 ; 'A'
00000000000092c2         db  0x0e ; '.'
00000000000092c3         db  0x10 ; '.'
00000000000092c4         db  0x86 ; '.'
00000000000092c5         db  0x02 ; '.'
00000000000092c6         db  0x41 ; 'A'
00000000000092c7         db  0x0e ; '.'
00000000000092c8         db  0x18 ; '.'
00000000000092c9         db  0x83 ; '.'
00000000000092ca         db  0x03 ; '.'
00000000000092cb         db  0x49 ; 'I'
00000000000092cc         db  0x0e ; '.'
00000000000092cd         db  0x20 ; ' '
00000000000092ce         db  0x7c ; '|'
00000000000092cf         db  0x0a ; '.'
00000000000092d0         db  0x0e ; '.'
00000000000092d1         db  0x18 ; '.'
00000000000092d2         db  0x44 ; 'D'
00000000000092d3         db  0x0e ; '.'
00000000000092d4         db  0x10 ; '.'
00000000000092d5         db  0x41 ; 'A'
00000000000092d6         db  0x0e ; '.'
00000000000092d7         db  0x08 ; '.'
00000000000092d8         db  0x44 ; 'D'
00000000000092d9         db  0x0b ; '.'
00000000000092da         db  0x44 ; 'D'
00000000000092db         db  0x0e ; '.'
00000000000092dc         db  0x18 ; '.'
00000000000092dd         db  0x47 ; 'G'
00000000000092de         db  0x0e ; '.'
00000000000092df         db  0x10 ; '.'
00000000000092e0         db  0x41 ; 'A'
00000000000092e1         db  0x0e ; '.'
00000000000092e2         db  0x08 ; '.'
00000000000092e3         db  0x00 ; '.'
00000000000092e4         dd         0x00000028                                  ; Length of the record
00000000000092e8         dd         0x00000188                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000092ec         db         0x44, 0x93, 2 dup (0xff)                    ; begin 0x2630
00000000000092f0         db         0x5a, 3 dup (0x00)                          ; length 0x5a (end at 0x268a)
00000000000092f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092f5         db  0x41 ; 'A'
00000000000092f6         db  0x0e ; '.'
00000000000092f7         db  0x10 ; '.'
00000000000092f8         db  0x86 ; '.'
00000000000092f9         db  0x02 ; '.'
00000000000092fa         db  0x41 ; 'A'
00000000000092fb         db  0x0e ; '.'
00000000000092fc         db  0x18 ; '.'
00000000000092fd         db  0x83 ; '.'
00000000000092fe         db  0x03 ; '.'
00000000000092ff         db  0x47 ; 'G'
0000000000009300         db  0x0e ; '.'
0000000000009301         db  0x20 ; ' '
0000000000009302         db  0x02 ; '.'
0000000000009303         db  0x41 ; 'A'
0000000000009304         db  0x0a ; '.'
0000000000009305         db  0x0e ; '.'
0000000000009306         db  0x18 ; '.'
0000000000009307         db  0x44 ; 'D'
0000000000009308         db  0x0e ; '.'
0000000000009309         db  0x10 ; '.'
000000000000930a         db  0x41 ; 'A'
000000000000930b         db  0x0e ; '.'
000000000000930c         db  0x08 ; '.'
000000000000930d         db  0x41 ; 'A'
000000000000930e         db  0x0b ; '.'
000000000000930f         db  0x00 ; '.'
0000000000009310         dd         0x00000010                                  ; Length of the record
0000000000009314         dd         0x000001b4                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009318         db         0x78, 0x93, 2 dup (0xff)                    ; begin 0x2690
000000000000931c         db         0x5c, 3 dup (0x00)                          ; length 0x5c (end at 0x26ec)
0000000000009320         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009321         align      4
0000000000009324         dd         0x00000028                                  ; Length of the record
0000000000009328         dd         0x000001c8                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
000000000000932c         db         0xc4, 0x93, 2 dup (0xff)                    ; begin 0x26f0
0000000000009330         db         0x47, 3 dup (0x00)                          ; length 0x47 (end at 0x2737)
0000000000009334         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009335         db  0x41 ; 'A'
0000000000009336         db  0x0e ; '.'
0000000000009337         db  0x10 ; '.'
0000000000009338         db  0x83 ; '.'
0000000000009339         db  0x02 ; '.'
000000000000933a         db  0x5a ; 'Z'
000000000000933b         db  0x0a ; '.'
000000000000933c         db  0x0e ; '.'
000000000000933d         db  0x08 ; '.'
000000000000933e         db  0x45 ; 'E'
000000000000933f         db  0x0b ; '.'
0000000000009340         db  0x5d ; ']'
0000000000009341         db  0x0a ; '.'
0000000000009342         db  0x0e ; '.'
0000000000009343         db  0x08 ; '.'
0000000000009344         db  0x43 ; 'C'
0000000000009345         db  0x0b ; '.'
0000000000009346         db  0x46 ; 'F'
0000000000009347         db  0x0e ; '.'
0000000000009348         db  0x08 ; '.'
0000000000009349         db  0x00 ; '.'
000000000000934a         db  0x00 ; '.'
000000000000934b         db  0x00 ; '.'
000000000000934c         db  0x00 ; '.'
000000000000934d         db  0x00 ; '.'
000000000000934e         db  0x00 ; '.'
000000000000934f         db  0x00 ; '.'
0000000000009350         dd         0x0000001c                                  ; Length of the record
0000000000009354         dd         0x000001f4                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009358         db         0xe8, 0x93, 2 dup (0xff)                    ; begin 0x2740
000000000000935c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x2758)
0000000000009360         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009361         db  0x44 ; 'D'
0000000000009362         db  0x0e ; '.'
0000000000009363         db  0x10 ; '.'
0000000000009364         db  0x4e ; 'N'
0000000000009365         db  0x0a ; '.'
0000000000009366         db  0x0e ; '.'
0000000000009367         db  0x08 ; '.'
0000000000009368         db  0x41 ; 'A'
0000000000009369         db  0x0b ; '.'
000000000000936a         db  0x00 ; '.'
000000000000936b         db  0x00 ; '.'
000000000000936c         db  0x00 ; '.'
000000000000936d         db  0x00 ; '.'
000000000000936e         db  0x00 ; '.'
000000000000936f         db  0x00 ; '.'
0000000000009370         dd         0x0000004c                                  ; Length of the record
0000000000009374         dd         0x00000214                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009378         db         0xe8, 0x93, 2 dup (0xff)                    ; begin 0x2760
000000000000937c         db         0xff, 3 dup (0x00)                          ; length 0xff (end at 0x285f)
0000000000009380         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009381         db  0x42 ; 'B'
0000000000009382         db  0x0e ; '.'
0000000000009383         db  0x10 ; '.'
0000000000009384         db  0x8f ; '.'
0000000000009385         db  0x02 ; '.'
0000000000009386         db  0x42 ; 'B'
0000000000009387         db  0x0e ; '.'
0000000000009388         db  0x18 ; '.'
0000000000009389         db  0x8e ; '.'
000000000000938a         db  0x03 ; '.'
000000000000938b         db  0x45 ; 'E'
000000000000938c         db  0x0e ; '.'
000000000000938d         db  0x20 ; ' '
000000000000938e         db  0x8d ; '.'
000000000000938f         db  0x04 ; '.'
0000000000009390         db  0x42 ; 'B'
0000000000009391         db  0x0e ; '.'
0000000000009392         db  0x28 ; '('
0000000000009393         db  0x8c ; '.'
0000000000009394         db  0x05 ; '.'
0000000000009395         db  0x44 ; 'D'
0000000000009396         db  0x0e ; '.'
0000000000009397         db  0x30 ; '0'
0000000000009398         db  0x86 ; '.'
0000000000009399         db  0x06 ; '.'
000000000000939a         db  0x41 ; 'A'
000000000000939b         db  0x0e ; '.'
000000000000939c         db  0x38 ; '8'
000000000000939d         db  0x83 ; '.'
000000000000939e         db  0x07 ; '.'
000000000000939f         db  0x47 ; 'G'
00000000000093a0         db  0x0e ; '.'
00000000000093a1         db  0x50 ; 'P'
00000000000093a2         db  0x02 ; '.'
00000000000093a3         db  0xc3 ; '.'
00000000000093a4         db  0x0a ; '.'
00000000000093a5         db  0x0e ; '.'
00000000000093a6         db  0x38 ; '8'
00000000000093a7         db  0x44 ; 'D'
00000000000093a8         db  0x0e ; '.'
00000000000093a9         db  0x30 ; '0'
00000000000093aa         db  0x41 ; 'A'
00000000000093ab         db  0x0e ; '.'
00000000000093ac         db  0x28 ; '('
00000000000093ad         db  0x42 ; 'B'
00000000000093ae         db  0x0e ; '.'
00000000000093af         db  0x20 ; ' '
00000000000093b0         db  0x42 ; 'B'
00000000000093b1         db  0x0e ; '.'
00000000000093b2         db  0x18 ; '.'
00000000000093b3         db  0x42 ; 'B'
00000000000093b4         db  0x0e ; '.'
00000000000093b5         db  0x10 ; '.'
00000000000093b6         db  0x42 ; 'B'
00000000000093b7         db  0x0e ; '.'
00000000000093b8         db  0x08 ; '.'
00000000000093b9         db  0x49 ; 'I'
00000000000093ba         db  0x0b ; '.'
00000000000093bb         db  0x00 ; '.'
00000000000093bc         db  0x00 ; '.'
00000000000093bd         db  0x00 ; '.'
00000000000093be         db  0x00 ; '.'
00000000000093bf         db  0x00 ; '.'
00000000000093c0         dd         0x0000001c                                  ; Length of the record
00000000000093c4         dd         0x00000264                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000093c8         db         0x98, 0x94, 2 dup (0xff)                    ; begin 0x2860
00000000000093cc         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x28ff)
00000000000093d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000093d1         db  0x44 ; 'D'
00000000000093d2         db  0x0e ; '.'
00000000000093d3         db  0x10 ; '.'
00000000000093d4         db  0x83 ; '.'
00000000000093d5         db  0x02 ; '.'
00000000000093d6         db  0x02 ; '.'
00000000000093d7         db  0x78 ; 'x'
00000000000093d8         db  0x0a ; '.'
00000000000093d9         db  0x0e ; '.'
00000000000093da         db  0x08 ; '.'
00000000000093db         db  0x41 ; 'A'
00000000000093dc         db  0x0b ; '.'
00000000000093dd         db  0x00 ; '.'
00000000000093de         db  0x00 ; '.'
00000000000093df         db  0x00 ; '.'
00000000000093e0         dd         0x00000040                                  ; Length of the record
00000000000093e4         dd         0x00000284                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000093e8         db         0x18, 0x95, 2 dup (0xff)                    ; begin 0x2900
00000000000093ec         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x29e7)
00000000000093f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000093f1         db  0x41 ; 'A'
00000000000093f2         db  0x0e ; '.'
00000000000093f3         db  0x10 ; '.'
00000000000093f4         db  0x86 ; '.'
00000000000093f5         db  0x02 ; '.'
00000000000093f6         db  0x41 ; 'A'
00000000000093f7         db  0x0e ; '.'
00000000000093f8         db  0x18 ; '.'
00000000000093f9         db  0x83 ; '.'
00000000000093fa         db  0x03 ; '.'
00000000000093fb         db  0x49 ; 'I'
00000000000093fc         db  0x0e ; '.'
00000000000093fd         db  0x20 ; ' '
00000000000093fe         db  0x6e ; 'n'
00000000000093ff         db  0x0a ; '.'
0000000000009400         db  0x0e ; '.'
0000000000009401         db  0x18 ; '.'
0000000000009402         db  0x41 ; 'A'
0000000000009403         db  0x0e ; '.'
0000000000009404         db  0x10 ; '.'
0000000000009405         db  0x41 ; 'A'
0000000000009406         db  0x0e ; '.'
0000000000009407         db  0x08 ; '.'
0000000000009408         db  0x45 ; 'E'
0000000000009409         db  0x0b ; '.'
000000000000940a         db  0x02 ; '.'
000000000000940b         db  0x4a ; 'J'
000000000000940c         db  0x0a ; '.'
000000000000940d         db  0x0e ; '.'
000000000000940e         db  0x18 ; '.'
000000000000940f         db  0x41 ; 'A'
0000000000009410         db  0x0e ; '.'
0000000000009411         db  0x10 ; '.'
0000000000009412         db  0x41 ; 'A'
0000000000009413         db  0x0e ; '.'
0000000000009414         db  0x08 ; '.'
0000000000009415         db  0x44 ; 'D'
0000000000009416         db  0x0b ; '.'
0000000000009417         db  0x02 ; '.'
0000000000009418         db  0x54 ; 'T'
0000000000009419         db  0x0e ; '.'
000000000000941a         db  0x18 ; '.'
000000000000941b         db  0x41 ; 'A'
000000000000941c         db  0x0e ; '.'
000000000000941d         db  0x10 ; '.'
000000000000941e         db  0x41 ; 'A'
000000000000941f         db  0x0e ; '.'
0000000000009420         db  0x08 ; '.'
0000000000009421         db  0x00 ; '.'
0000000000009422         db  0x00 ; '.'
0000000000009423         db  0x00 ; '.'
0000000000009424         dd         0x00000074                                  ; Length of the record
0000000000009428         dd         0x000002c8                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
000000000000942c         db         0xc4, 0x95, 2 dup (0xff)                    ; begin 0x29f0
0000000000009430         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x3c24)
0000000000009434         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009435         db  0x42 ; 'B'
0000000000009436         db  0x0e ; '.'
0000000000009437         db  0x10 ; '.'
0000000000009438         db  0x8f ; '.'
0000000000009439         db  0x02 ; '.'
000000000000943a         db  0x42 ; 'B'
000000000000943b         db  0x0e ; '.'
000000000000943c         db  0x18 ; '.'
000000000000943d         db  0x8e ; '.'
000000000000943e         db  0x03 ; '.'
000000000000943f         db  0x45 ; 'E'
0000000000009440         db  0x0e ; '.'
0000000000009441         db  0x20 ; ' '
0000000000009442         db  0x8d ; '.'
0000000000009443         db  0x04 ; '.'
0000000000009444         db  0x42 ; 'B'
0000000000009445         db  0x0e ; '.'
0000000000009446         db  0x28 ; '('
0000000000009447         db  0x8c ; '.'
0000000000009448         db  0x05 ; '.'
0000000000009449         db  0x44 ; 'D'
000000000000944a         db  0x0e ; '.'
000000000000944b         db  0x30 ; '0'
000000000000944c         db  0x86 ; '.'
000000000000944d         db  0x06 ; '.'
000000000000944e         db  0x41 ; 'A'
000000000000944f         db  0x0e ; '.'
0000000000009450         db  0x38 ; '8'
0000000000009451         db  0x83 ; '.'
0000000000009452         db  0x07 ; '.'
0000000000009453         db  0x53 ; 'S'
0000000000009454         db  0x0e ; '.'
0000000000009455         db  0xf0 ; '.'
0000000000009456         db  0x01 ; '.'
0000000000009457         db  0x03 ; '.'
0000000000009458         db  0x81 ; '.'
0000000000009459         db  0x0b ; '.'
000000000000945a         db  0x0e ; '.'
000000000000945b         db  0xf8 ; '.'
000000000000945c         db  0x01 ; '.'
000000000000945d         db  0x4a ; 'J'
000000000000945e         db  0x0e ; '.'
000000000000945f         db  0x80 ; '.'
0000000000009460         db  0x02 ; '.'
0000000000009461         db  0x44 ; 'D'
0000000000009462         db  0x0e ; '.'
0000000000009463         db  0x88 ; '.'
0000000000009464         db  0x02 ; '.'
0000000000009465         db  0x45 ; 'E'
0000000000009466         db  0x0e ; '.'
0000000000009467         db  0x90 ; '.'
0000000000009468         db  0x02 ; '.'
0000000000009469         db  0x5f ; '_'
000000000000946a         db  0x0e ; '.'
000000000000946b         db  0xf0 ; '.'
000000000000946c         db  0x01 ; '.'
000000000000946d         db  0x64 ; 'd'
000000000000946e         db  0x0a ; '.'
000000000000946f         db  0x0e ; '.'
0000000000009470         db  0x38 ; '8'
0000000000009471         db  0x41 ; 'A'
0000000000009472         db  0x0e ; '.'
0000000000009473         db  0x30 ; '0'
0000000000009474         db  0x41 ; 'A'
0000000000009475         db  0x0e ; '.'
0000000000009476         db  0x28 ; '('
0000000000009477         db  0x42 ; 'B'
0000000000009478         db  0x0e ; '.'
0000000000009479         db  0x20 ; ' '
000000000000947a         db  0x42 ; 'B'
000000000000947b         db  0x0e ; '.'
000000000000947c         db  0x18 ; '.'
000000000000947d         db  0x42 ; 'B'
000000000000947e         db  0x0e ; '.'
000000000000947f         db  0x10 ; '.'
0000000000009480         db  0x42 ; 'B'
0000000000009481         db  0x0e ; '.'
0000000000009482         db  0x08 ; '.'
0000000000009483         db  0x44 ; 'D'
0000000000009484         db  0x0b ; '.'
0000000000009485         db  0x03 ; '.'
0000000000009486         db  0x99 ; '.'
0000000000009487         db  0x05 ; '.'
0000000000009488         db  0x0e ; '.'
0000000000009489         db  0xf8 ; '.'
000000000000948a         db  0x01 ; '.'
000000000000948b         db  0x4d ; 'M'
000000000000948c         db  0x0e ; '.'
000000000000948d         db  0x80 ; '.'
000000000000948e         db  0x02 ; '.'
000000000000948f         db  0x44 ; 'D'
0000000000009490         db  0x0e ; '.'
0000000000009491         db  0x88 ; '.'
0000000000009492         db  0x02 ; '.'
0000000000009493         db  0x47 ; 'G'
0000000000009494         db  0x0e ; '.'
0000000000009495         db  0x90 ; '.'
0000000000009496         db  0x02 ; '.'
0000000000009497         db  0x5b ; '['
0000000000009498         db  0x0e ; '.'
0000000000009499         db  0xf0 ; '.'
000000000000949a         db  0x01 ; '.'
000000000000949b         db  0x00 ; '.'
000000000000949c         dd         0x00000068                                  ; Length of the record
00000000000094a0         dd         0x00000340                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000094a4         db         0x8c, 0xa7, 2 dup (0xff)                    ; begin 0x3c30
00000000000094a8         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x3ddb)
00000000000094ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000094ad         db  0x42 ; 'B'
00000000000094ae         db  0x0e ; '.'
00000000000094af         db  0x10 ; '.'
00000000000094b0         db  0x8f ; '.'
00000000000094b1         db  0x02 ; '.'
00000000000094b2         db  0x42 ; 'B'
00000000000094b3         db  0x0e ; '.'
00000000000094b4         db  0x18 ; '.'
00000000000094b5         db  0x8e ; '.'
00000000000094b6         db  0x03 ; '.'
00000000000094b7         db  0x45 ; 'E'
00000000000094b8         db  0x0e ; '.'
00000000000094b9         db  0x20 ; ' '
00000000000094ba         db  0x8d ; '.'
00000000000094bb         db  0x04 ; '.'
00000000000094bc         db  0x42 ; 'B'
00000000000094bd         db  0x0e ; '.'
00000000000094be         db  0x28 ; '('
00000000000094bf         db  0x8c ; '.'
00000000000094c0         db  0x05 ; '.'
00000000000094c1         db  0x44 ; 'D'
00000000000094c2         db  0x0e ; '.'
00000000000094c3         db  0x30 ; '0'
00000000000094c4         db  0x86 ; '.'
00000000000094c5         db  0x06 ; '.'
00000000000094c6         db  0x41 ; 'A'
00000000000094c7         db  0x0e ; '.'
00000000000094c8         db  0x38 ; '8'
00000000000094c9         db  0x83 ; '.'
00000000000094ca         db  0x07 ; '.'
00000000000094cb         db  0x47 ; 'G'
00000000000094cc         db  0x0e ; '.'
00000000000094cd         db  0x60 ; '`'
00000000000094ce         db  0x02 ; '.'
00000000000094cf         db  0x99 ; '.'
00000000000094d0         db  0x0e ; '.'
00000000000094d1         db  0x68 ; 'h'
00000000000094d2         db  0x5f ; '_'
00000000000094d3         db  0x0e ; '.'
00000000000094d4         db  0x70 ; 'p'
00000000000094d5         db  0x46 ; 'F'
00000000000094d6         db  0x0e ; '.'
00000000000094d7         db  0x78 ; 'x'
00000000000094d8         db  0x42 ; 'B'
00000000000094d9         db  0x0e ; '.'
00000000000094da         db  0x80 ; '.'
00000000000094db         db  0x01 ; '.'
00000000000094dc         db  0x59 ; 'Y'
00000000000094dd         db  0x0e ; '.'
00000000000094de         db  0x60 ; '`'
00000000000094df         db  0x02 ; '.'
00000000000094e0         db  0x40 ; '@'
00000000000094e1         db  0x0e ; '.'
00000000000094e2         db  0x68 ; 'h'
00000000000094e3         db  0x4b ; 'K'
00000000000094e4         db  0x0e ; '.'
00000000000094e5         db  0x70 ; 'p'
00000000000094e6         db  0x43 ; 'C'
00000000000094e7         db  0x0e ; '.'
00000000000094e8         db  0x78 ; 'x'
00000000000094e9         db  0x45 ; 'E'
00000000000094ea         db  0x0e ; '.'
00000000000094eb         db  0x80 ; '.'
00000000000094ec         db  0x01 ; '.'
00000000000094ed         db  0x5e ; '^'
00000000000094ee         db  0x0e ; '.'
00000000000094ef         db  0x60 ; '`'
00000000000094f0         db  0x4c ; 'L'
00000000000094f1         db  0x0a ; '.'
00000000000094f2         db  0x0e ; '.'
00000000000094f3         db  0x38 ; '8'
00000000000094f4         db  0x44 ; 'D'
00000000000094f5         db  0x0e ; '.'
00000000000094f6         db  0x30 ; '0'
00000000000094f7         db  0x41 ; 'A'
00000000000094f8         db  0x0e ; '.'
00000000000094f9         db  0x28 ; '('
00000000000094fa         db  0x42 ; 'B'
00000000000094fb         db  0x0e ; '.'
00000000000094fc         db  0x20 ; ' '
00000000000094fd         db  0x42 ; 'B'
00000000000094fe         db  0x0e ; '.'
00000000000094ff         db  0x18 ; '.'
0000000000009500         db  0x42 ; 'B'
0000000000009501         db  0x0e ; '.'
0000000000009502         db  0x10 ; '.'
0000000000009503         db  0x42 ; 'B'
0000000000009504         db  0x0e ; '.'
0000000000009505         db  0x08 ; '.'
0000000000009506         db  0x46 ; 'F'
0000000000009507         db  0x0b ; '.'
0000000000009508         dd         0x00000028                                  ; Length of the record
000000000000950c         dd         0x000003ac                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009510         db         0xd0, 0xa8, 2 dup (0xff)                    ; begin 0x3de0
0000000000009514         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x3e16)
0000000000009518         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009519         db  0x42 ; 'B'
000000000000951a         db  0x0e ; '.'
000000000000951b         db  0x10 ; '.'
000000000000951c         db  0x8c ; '.'
000000000000951d         db  0x02 ; '.'
000000000000951e         db  0x41 ; 'A'
000000000000951f         db  0x0e ; '.'
0000000000009520         db  0x18 ; '.'
0000000000009521         db  0x86 ; '.'
0000000000009522         db  0x03 ; '.'
0000000000009523         db  0x41 ; 'A'
0000000000009524         db  0x0e ; '.'
0000000000009525         db  0x20 ; ' '
0000000000009526         db  0x83 ; '.'
0000000000009527         db  0x04 ; '.'
0000000000009528         db  0x6e ; 'n'
0000000000009529         db  0x0e ; '.'
000000000000952a         db  0x18 ; '.'
000000000000952b         db  0x41 ; 'A'
000000000000952c         db  0x0e ; '.'
000000000000952d         db  0x10 ; '.'
000000000000952e         db  0x42 ; 'B'
000000000000952f         db  0x0e ; '.'
0000000000009530         db  0x08 ; '.'
0000000000009531         db  0x00 ; '.'
0000000000009532         db  0x00 ; '.'
0000000000009533         db  0x00 ; '.'
0000000000009534         dd         0x00000010                                  ; Length of the record
0000000000009538         dd         0x000003d8                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
000000000000953c         db         0xe4, 0xa8, 2 dup (0xff)                    ; begin 0x3e20
0000000000009540         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x3e31)
0000000000009544         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009545         align      8
0000000000009548         dd         0x00000010                                  ; Length of the record
000000000000954c         dd         0x000003ec                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009550         db         0xf0, 0xa8, 2 dup (0xff)                    ; begin 0x3e40
0000000000009554         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x3e51)
0000000000009558         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009559         align      4
000000000000955c         dd         0x00000010                                  ; Length of the record
0000000000009560         dd         0x00000400                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009564         db         0xfc, 0xa8, 2 dup (0xff)                    ; begin 0x3e60
0000000000009568         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x3e95)
000000000000956c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000956d         align      16
0000000000009570         dd         0x00000010                                  ; Length of the record
0000000000009574         dd         0x00000414                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009578         db         0x28, 0xa9, 2 dup (0xff)                    ; begin 0x3ea0
000000000000957c         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x3eb5)
0000000000009580         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009581         align      4
0000000000009584         dd         0x00000010                                  ; Length of the record
0000000000009588         dd         0x00000428                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
000000000000958c         db         0x34, 0xa9, 2 dup (0xff)                    ; begin 0x3ec0
0000000000009590         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x3ef0)
0000000000009594         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009595         db  0x6b ; 'k'
0000000000009596         db  0x0e ; '.'
0000000000009597         db  0x10 ; '.'
0000000000009598         dd         0x00000050                                  ; Length of the record
000000000000959c         dd         0x0000043c                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000095a0         db         0x50, 0xa9, 2 dup (0xff)                    ; begin 0x3ef0
00000000000095a4         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x3f64)
00000000000095a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000095a9         db  0x42 ; 'B'
00000000000095aa         db  0x0e ; '.'
00000000000095ab         db  0x10 ; '.'
00000000000095ac         db  0x8f ; '.'
00000000000095ad         db  0x02 ; '.'
00000000000095ae         db  0x42 ; 'B'
00000000000095af         db  0x0e ; '.'
00000000000095b0         db  0x18 ; '.'
00000000000095b1         db  0x8e ; '.'
00000000000095b2         db  0x03 ; '.'
00000000000095b3         db  0x49 ; 'I'
00000000000095b4         db  0x0e ; '.'
00000000000095b5         db  0x20 ; ' '
00000000000095b6         db  0x8d ; '.'
00000000000095b7         db  0x04 ; '.'
00000000000095b8         db  0x42 ; 'B'
00000000000095b9         db  0x0e ; '.'
00000000000095ba         db  0x28 ; '('
00000000000095bb         db  0x8c ; '.'
00000000000095bc         db  0x05 ; '.'
00000000000095bd         db  0x44 ; 'D'
00000000000095be         db  0x0e ; '.'
00000000000095bf         db  0x30 ; '0'
00000000000095c0         db  0x86 ; '.'
00000000000095c1         db  0x06 ; '.'
00000000000095c2         db  0x41 ; 'A'
00000000000095c3         db  0x0e ; '.'
00000000000095c4         db  0x38 ; '8'
00000000000095c5         db  0x83 ; '.'
00000000000095c6         db  0x07 ; '.'
00000000000095c7         db  0x4d ; 'M'
00000000000095c8         db  0x0e ; '.'
00000000000095c9         db  0x50 ; 'P'
00000000000095ca         db  0x5f ; '_'
00000000000095cb         db  0x0e ; '.'
00000000000095cc         db  0x58 ; 'X'
00000000000095cd         db  0x47 ; 'G'
00000000000095ce         db  0x0e ; '.'
00000000000095cf         db  0x60 ; '`'
00000000000095d0         db  0x46 ; 'F'
00000000000095d1         db  0x0e ; '.'
00000000000095d2         db  0x68 ; 'h'
00000000000095d3         db  0x44 ; 'D'
00000000000095d4         db  0x0e ; '.'
00000000000095d5         db  0x70 ; 'p'
00000000000095d6         db  0x58 ; 'X'
00000000000095d7         db  0x0e ; '.'
00000000000095d8         db  0x38 ; '8'
00000000000095d9         db  0x41 ; 'A'
00000000000095da         db  0x0e ; '.'
00000000000095db         db  0x30 ; '0'
00000000000095dc         db  0x41 ; 'A'
00000000000095dd         db  0x0e ; '.'
00000000000095de         db  0x28 ; '('
00000000000095df         db  0x42 ; 'B'
00000000000095e0         db  0x0e ; '.'
00000000000095e1         db  0x20 ; ' '
00000000000095e2         db  0x42 ; 'B'
00000000000095e3         db  0x0e ; '.'
00000000000095e4         db  0x18 ; '.'
00000000000095e5         db  0x42 ; 'B'
00000000000095e6         db  0x0e ; '.'
00000000000095e7         db  0x10 ; '.'
00000000000095e8         db  0x42 ; 'B'
00000000000095e9         db  0x0e ; '.'
00000000000095ea         db  0x08 ; '.'
00000000000095eb         db  0x00 ; '.'
00000000000095ec         dd         0x00000068                                  ; Length of the record
00000000000095f0         dd         0x00000490                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000095f4         db         0x7c, 0xa9, 2 dup (0xff)                    ; begin 0x3f70
00000000000095f8         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x4053)
00000000000095fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000095fd         db  0x42 ; 'B'
00000000000095fe         db  0x0e ; '.'
00000000000095ff         db  0x10 ; '.'
0000000000009600         db  0x8f ; '.'
0000000000009601         db  0x02 ; '.'
0000000000009602         db  0x42 ; 'B'
0000000000009603         db  0x0e ; '.'
0000000000009604         db  0x18 ; '.'
0000000000009605         db  0x8e ; '.'
0000000000009606         db  0x03 ; '.'
0000000000009607         db  0x49 ; 'I'
0000000000009608         db  0x0e ; '.'
0000000000009609         db  0x20 ; ' '
000000000000960a         db  0x8d ; '.'
000000000000960b         db  0x04 ; '.'
000000000000960c         db  0x42 ; 'B'
000000000000960d         db  0x0e ; '.'
000000000000960e         db  0x28 ; '('
000000000000960f         db  0x8c ; '.'
0000000000009610         db  0x05 ; '.'
0000000000009611         db  0x44 ; 'D'
0000000000009612         db  0x0e ; '.'
0000000000009613         db  0x30 ; '0'
0000000000009614         db  0x86 ; '.'
0000000000009615         db  0x06 ; '.'
0000000000009616         db  0x41 ; 'A'
0000000000009617         db  0x0e ; '.'
0000000000009618         db  0x38 ; '8'
0000000000009619         db  0x83 ; '.'
000000000000961a         db  0x07 ; '.'
000000000000961b         db  0x4d ; 'M'
000000000000961c         db  0x0e ; '.'
000000000000961d         db  0x70 ; 'p'
000000000000961e         db  0x65 ; 'e'
000000000000961f         db  0x0e ; '.'
0000000000009620         db  0x78 ; 'x'
0000000000009621         db  0x4d ; 'M'
0000000000009622         db  0x0e ; '.'
0000000000009623         db  0x80 ; '.'
0000000000009624         db  0x01 ; '.'
0000000000009625         db  0x46 ; 'F'
0000000000009626         db  0x0e ; '.'
0000000000009627         db  0x88 ; '.'
0000000000009628         db  0x01 ; '.'
0000000000009629         db  0x42 ; 'B'
000000000000962a         db  0x0e ; '.'
000000000000962b         db  0x90 ; '.'
000000000000962c         db  0x01 ; '.'
000000000000962d         db  0x5e ; '^'
000000000000962e         db  0x0e ; '.'
000000000000962f         db  0x70 ; 'p'
0000000000009630         db  0x56 ; 'V'
0000000000009631         db  0x0e ; '.'
0000000000009632         db  0x78 ; 'x'
0000000000009633         db  0x43 ; 'C'
0000000000009634         db  0x0e ; '.'
0000000000009635         db  0x80 ; '.'
0000000000009636         db  0x01 ; '.'
0000000000009637         db  0x43 ; 'C'
0000000000009638         db  0x0e ; '.'
0000000000009639         db  0x88 ; '.'
000000000000963a         db  0x01 ; '.'
000000000000963b         db  0x56 ; 'V'
000000000000963c         db  0x0e ; '.'
000000000000963d         db  0x90 ; '.'
000000000000963e         db  0x01 ; '.'
000000000000963f         db  0x52 ; 'R'
0000000000009640         db  0x0e ; '.'
0000000000009641         db  0x70 ; 'p'
0000000000009642         db  0x5b ; '['
0000000000009643         db  0x0e ; '.'
0000000000009644         db  0x38 ; '8'
0000000000009645         db  0x41 ; 'A'
0000000000009646         db  0x0e ; '.'
0000000000009647         db  0x30 ; '0'
0000000000009648         db  0x41 ; 'A'
0000000000009649         db  0x0e ; '.'
000000000000964a         db  0x28 ; '('
000000000000964b         db  0x42 ; 'B'
000000000000964c         db  0x0e ; '.'
000000000000964d         db  0x20 ; ' '
000000000000964e         db  0x42 ; 'B'
000000000000964f         db  0x0e ; '.'
0000000000009650         db  0x18 ; '.'
0000000000009651         db  0x42 ; 'B'
0000000000009652         db  0x0e ; '.'
0000000000009653         db  0x10 ; '.'
0000000000009654         db  0x42 ; 'B'
0000000000009655         db  0x0e ; '.'
0000000000009656         db  0x08 ; '.'
0000000000009657         db  0x00 ; '.'
0000000000009658         dd         0x00000010                                  ; Length of the record
000000000000965c         dd         0x000004fc                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009660         db         0x00, 0xaa, 2 dup (0xff)                    ; begin 0x4060
0000000000009664         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x406a)
0000000000009668         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009669         align      4
000000000000966c         dd         0x00000028                                  ; Length of the record
0000000000009670         dd         0x00000510                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009674         db         0xfc, 0xa9, 2 dup (0xff)                    ; begin 0x4070
0000000000009678         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x4103)
000000000000967c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000967d         db  0x48 ; 'H'
000000000000967e         db  0x0e ; '.'
000000000000967f         db  0x10 ; '.'
0000000000009680         db  0x8c ; '.'
0000000000009681         db  0x02 ; '.'
0000000000009682         db  0x48 ; 'H'
0000000000009683         db  0x0e ; '.'
0000000000009684         db  0x18 ; '.'
0000000000009685         db  0x86 ; '.'
0000000000009686         db  0x03 ; '.'
0000000000009687         db  0x41 ; 'A'
0000000000009688         db  0x0e ; '.'
0000000000009689         db  0x20 ; ' '
000000000000968a         db  0x83 ; '.'
000000000000968b         db  0x04 ; '.'
000000000000968c         db  0x02 ; '.'
000000000000968d         db  0x74 ; 't'
000000000000968e         db  0x0e ; '.'
000000000000968f         db  0x18 ; '.'
0000000000009690         db  0x4b ; 'K'
0000000000009691         db  0x0e ; '.'
0000000000009692         db  0x10 ; '.'
0000000000009693         db  0x42 ; 'B'
0000000000009694         db  0x0e ; '.'
0000000000009695         db  0x08 ; '.'
0000000000009696         db  0x00 ; '.'
0000000000009697         db  0x00 ; '.'
0000000000009698         dd         0x00000010                                  ; Length of the record
000000000000969c         dd         0x0000053c                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000096a0         db         0x70, 0xaa, 2 dup (0xff)                    ; begin 0x4110
00000000000096a4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4123)
00000000000096a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000096a9         align      4
00000000000096ac         dd         0x00000010                                  ; Length of the record
00000000000096b0         dd         0x00000550                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000096b4         db         0x7c, 0xaa, 2 dup (0xff)                    ; begin 0x4130
00000000000096b8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x413c)
00000000000096bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000096bd         align      64
00000000000096c0         dd         0x00000010                                  ; Length of the record
00000000000096c4         dd         0x00000564                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000096c8         db         0x78, 0xaa, 2 dup (0xff)                    ; begin 0x4140
00000000000096cc         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4158)
00000000000096d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000096d1         align      4
00000000000096d4         dd         0x00000010                                  ; Length of the record
00000000000096d8         dd         0x00000578                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000096dc         db         0x84, 0xaa, 2 dup (0xff)                    ; begin 0x4160
00000000000096e0         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4174)
00000000000096e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000096e5         align      8
00000000000096e8         dd         0x00000018                                  ; Length of the record
00000000000096ec         dd         0x0000058c                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000096f0         db         0x90, 0xaa, 2 dup (0xff)                    ; begin 0x4180
00000000000096f4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x420e)
00000000000096f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000096f9         db  0x44 ; 'D'
00000000000096fa         db  0x0e ; '.'
00000000000096fb         db  0x50 ; 'P'
00000000000096fc         db  0x02 ; '.'
00000000000096fd         db  0x7f ; '.'
00000000000096fe         db  0x0a ; '.'
00000000000096ff         db  0x0e ; '.'
0000000000009700         db  0x08 ; '.'
0000000000009701         db  0x41 ; 'A'
0000000000009702         db  0x0b ; '.'
0000000000009703         db  0x00 ; '.'
0000000000009704         dd         0x00000018                                  ; Length of the record
0000000000009708         dd         0x000005a8                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
000000000000970c         db         0x04, 0xab, 2 dup (0xff)                    ; begin 0x4210
0000000000009710         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x429a)
0000000000009714         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009715         db  0x44 ; 'D'
0000000000009716         db  0x0e ; '.'
0000000000009717         db  0x50 ; 'P'
0000000000009718         db  0x02 ; '.'
0000000000009719         db  0x7b ; '{'
000000000000971a         db  0x0a ; '.'
000000000000971b         db  0x0e ; '.'
000000000000971c         db  0x08 ; '.'
000000000000971d         db  0x41 ; 'A'
000000000000971e         db  0x0b ; '.'
000000000000971f         db  0x00 ; '.'
0000000000009720         dd         0x00000010                                  ; Length of the record
0000000000009724         dd         0x000005c4                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009728         db         0x78, 0xab, 2 dup (0xff)                    ; begin 0x42a0
000000000000972c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x42ac)
0000000000009730         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009731         align      4
0000000000009734         dd         0x00000010                                  ; Length of the record
0000000000009738         dd         0x000005d8                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
000000000000973c         db         0x74, 0xab, 2 dup (0xff)                    ; begin 0x42b0
0000000000009740         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x42bf)
0000000000009744         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009745         align      8
0000000000009748         dd         0x00000018                                  ; Length of the record
000000000000974c         dd         0x000005ec                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009750         db         0x70, 0xab, 2 dup (0xff)                    ; begin 0x42c0
0000000000009754         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x4358)
0000000000009758         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009759         db  0x44 ; 'D'
000000000000975a         db  0x0e ; '.'
000000000000975b         db  0x50 ; 'P'
000000000000975c         db  0x02 ; '.'
000000000000975d         db  0x8e ; '.'
000000000000975e         db  0x0a ; '.'
000000000000975f         db  0x0e ; '.'
0000000000009760         db  0x08 ; '.'
0000000000009761         db  0x41 ; 'A'
0000000000009762         db  0x0b ; '.'
0000000000009763         db  0x00 ; '.'
0000000000009764         dd         0x00000010                                  ; Length of the record
0000000000009768         dd         0x00000608                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
000000000000976c         db         0xf4, 0xab, 2 dup (0xff)                    ; begin 0x4360
0000000000009770         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x4370)
0000000000009774         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009775         align      8
0000000000009778         dd         0x00000010                                  ; Length of the record
000000000000977c         dd         0x0000061c                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009780         db         0xf0, 0xab, 2 dup (0xff)                    ; begin 0x4370
0000000000009784         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4381)
0000000000009788         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009789         align      4
000000000000978c         dd         0x00000010                                  ; Length of the record
0000000000009790         dd         0x00000630                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009794         db         0xfc, 0xab, 2 dup (0xff)                    ; begin 0x4390
0000000000009798         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x439a)
000000000000979c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000979d         align      32
00000000000097a0         dd         0x00000018                                  ; Length of the record
00000000000097a4         dd         0x00000644                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000097a8         db         0xf8, 0xab, 2 dup (0xff)                    ; begin 0x43a0
00000000000097ac         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x442e)
00000000000097b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000097b1         db  0x44 ; 'D'
00000000000097b2         db  0x0e ; '.'
00000000000097b3         db  0x50 ; 'P'
00000000000097b4         db  0x02 ; '.'
00000000000097b5         db  0x7f ; '.'
00000000000097b6         db  0x0a ; '.'
00000000000097b7         db  0x0e ; '.'
00000000000097b8         db  0x08 ; '.'
00000000000097b9         db  0x41 ; 'A'
00000000000097ba         db  0x0b ; '.'
00000000000097bb         db  0x00 ; '.'
00000000000097bc         dd         0x00000018                                  ; Length of the record
00000000000097c0         dd         0x00000660                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000097c4         db         0x6c, 0xac, 2 dup (0xff)                    ; begin 0x4430
00000000000097c8         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x44c1)
00000000000097cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000097cd         db  0x44 ; 'D'
00000000000097ce         db  0x0e ; '.'
00000000000097cf         db  0x50 ; 'P'
00000000000097d0         db  0x02 ; '.'
00000000000097d1         db  0x82 ; '.'
00000000000097d2         db  0x0a ; '.'
00000000000097d3         db  0x0e ; '.'
00000000000097d4         db  0x08 ; '.'
00000000000097d5         db  0x41 ; 'A'
00000000000097d6         db  0x0b ; '.'
00000000000097d7         db  0x00 ; '.'
00000000000097d8         dd         0x00000010                                  ; Length of the record
00000000000097dc         dd         0x0000067c                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000097e0         db         0xf0, 0xac, 2 dup (0xff)                    ; begin 0x44d0
00000000000097e4         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x44dc)
00000000000097e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000097e9         align      4
00000000000097ec         dd         0x00000010                                  ; Length of the record
00000000000097f0         dd         0x00000690                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000097f4         db         0xec, 0xac, 2 dup (0xff)                    ; begin 0x44e0
00000000000097f8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x44f7)
00000000000097fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000097fd         align      2048
0000000000009800         dd         0x00000010                                  ; Length of the record
0000000000009804         dd         0x000006a4                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009808         db         0xf8, 0xac, 2 dup (0xff)                    ; begin 0x4500
000000000000980c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4513)
0000000000009810         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009811         align      4
0000000000009814         dd         0x00000010                                  ; Length of the record
0000000000009818         dd         0x000006b8                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
000000000000981c         db         0x04, 0xad, 2 dup (0xff)                    ; begin 0x4520
0000000000009820         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x452c)
0000000000009824         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009825         align      8
0000000000009828         dd         0x00000010                                  ; Length of the record
000000000000982c         dd         0x000006cc                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009830         db         0x00, 0xad, 2 dup (0xff)                    ; begin 0x4530
0000000000009834         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4544)
0000000000009838         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009839         align      4
000000000000983c         dd         0x00000010                                  ; Length of the record
0000000000009840         dd         0x000006e0                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009844         db         0x0c, 0xad, 2 dup (0xff)                    ; begin 0x4550
0000000000009848         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4563)
000000000000984c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000984d         align      16
0000000000009850         dd         0x00000014                                  ; Length of the record
0000000000009854         dd         0x000006f4                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009858         db         0x18, 0xad, 2 dup (0xff)                    ; begin 0x4570
000000000000985c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4588)
0000000000009860         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009861         align      8
0000000000009868         dd         0x00000110                                  ; Length of the record
000000000000986c         dd         0x0000070c                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009870         db         0x20, 0xad, 2 dup (0xff)                    ; begin 0x4590
0000000000009874         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x49a7)
0000000000009878         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009879         db  0x42 ; 'B'
000000000000987a         db  0x0e ; '.'
000000000000987b         db  0x10 ; '.'
000000000000987c         db  0x8f ; '.'
000000000000987d         db  0x02 ; '.'
000000000000987e         db  0x42 ; 'B'
000000000000987f         db  0x0e ; '.'
0000000000009880         db  0x18 ; '.'
0000000000009881         db  0x8e ; '.'
0000000000009882         db  0x03 ; '.'
0000000000009883         db  0x42 ; 'B'
0000000000009884         db  0x0e ; '.'
0000000000009885         db  0x20 ; ' '
0000000000009886         db  0x8d ; '.'
0000000000009887         db  0x04 ; '.'
0000000000009888         db  0x42 ; 'B'
0000000000009889         db  0x0e ; '.'
000000000000988a         db  0x28 ; '('
000000000000988b         db  0x8c ; '.'
000000000000988c         db  0x05 ; '.'
000000000000988d         db  0x44 ; 'D'
000000000000988e         db  0x0e ; '.'
000000000000988f         db  0x30 ; '0'
0000000000009890         db  0x86 ; '.'
0000000000009891         db  0x06 ; '.'
0000000000009892         db  0x41 ; 'A'
0000000000009893         db  0x0e ; '.'
0000000000009894         db  0x38 ; '8'
0000000000009895         db  0x83 ; '.'
0000000000009896         db  0x07 ; '.'
0000000000009897         db  0x4a ; 'J'
0000000000009898         db  0x0e ; '.'
0000000000009899         db  0x60 ; '`'
000000000000989a         db  0x02 ; '.'
000000000000989b         db  0xdd ; '.'
000000000000989c         db  0x0e ; '.'
000000000000989d         db  0x68 ; 'h'
000000000000989e         db  0x57 ; 'W'
000000000000989f         db  0x0e ; '.'
00000000000098a0         db  0x70 ; 'p'
00000000000098a1         db  0x42 ; 'B'
00000000000098a2         db  0x0e ; '.'
00000000000098a3         db  0x78 ; 'x'
00000000000098a4         db  0x42 ; 'B'
00000000000098a5         db  0x0e ; '.'
00000000000098a6         db  0x80 ; '.'
00000000000098a7         db  0x01 ; '.'
00000000000098a8         db  0x42 ; 'B'
00000000000098a9         db  0x0e ; '.'
00000000000098aa         db  0x88 ; '.'
00000000000098ab         db  0x01 ; '.'
00000000000098ac         db  0x42 ; 'B'
00000000000098ad         db  0x0e ; '.'
00000000000098ae         db  0x90 ; '.'
00000000000098af         db  0x01 ; '.'
00000000000098b0         db  0x53 ; 'S'
00000000000098b1         db  0x0e ; '.'
00000000000098b2         db  0x60 ; '`'
00000000000098b3         db  0x44 ; 'D'
00000000000098b4         db  0x0a ; '.'
00000000000098b5         db  0x0e ; '.'
00000000000098b6         db  0x38 ; '8'
00000000000098b7         db  0x41 ; 'A'
00000000000098b8         db  0x0e ; '.'
00000000000098b9         db  0x30 ; '0'
00000000000098ba         db  0x41 ; 'A'
00000000000098bb         db  0x0e ; '.'
00000000000098bc         db  0x28 ; '('
00000000000098bd         db  0x42 ; 'B'
00000000000098be         db  0x0e ; '.'
00000000000098bf         db  0x20 ; ' '
00000000000098c0         db  0x42 ; 'B'
00000000000098c1         db  0x0e ; '.'
00000000000098c2         db  0x18 ; '.'
00000000000098c3         db  0x42 ; 'B'
00000000000098c4         db  0x0e ; '.'
00000000000098c5         db  0x10 ; '.'
00000000000098c6         db  0x42 ; 'B'
00000000000098c7         db  0x0e ; '.'
00000000000098c8         db  0x08 ; '.'
00000000000098c9         db  0x44 ; 'D'
00000000000098ca         db  0x0b ; '.'
00000000000098cb         db  0x02 ; '.'
00000000000098cc         db  0x78 ; 'x'
00000000000098cd         db  0x0a ; '.'
00000000000098ce         db  0x0e ; '.'
00000000000098cf         db  0x68 ; 'h'
00000000000098d0         db  0x48 ; 'H'
00000000000098d1         db  0x0b ; '.'
00000000000098d2         db  0x5a ; 'Z'
00000000000098d3         db  0x0a ; '.'
00000000000098d4         db  0x0e ; '.'
00000000000098d5         db  0x38 ; '8'
00000000000098d6         db  0x47 ; 'G'
00000000000098d7         db  0x0e ; '.'
00000000000098d8         db  0x30 ; '0'
00000000000098d9         db  0x41 ; 'A'
00000000000098da         db  0x0e ; '.'
00000000000098db         db  0x28 ; '('
00000000000098dc         db  0x42 ; 'B'
00000000000098dd         db  0x0e ; '.'
00000000000098de         db  0x20 ; ' '
00000000000098df         db  0x42 ; 'B'
00000000000098e0         db  0x0e ; '.'
00000000000098e1         db  0x18 ; '.'
00000000000098e2         db  0x42 ; 'B'
00000000000098e3         db  0x0e ; '.'
00000000000098e4         db  0x10 ; '.'
00000000000098e5         db  0x42 ; 'B'
00000000000098e6         db  0x0e ; '.'
00000000000098e7         db  0x08 ; '.'
00000000000098e8         db  0x56 ; 'V'
00000000000098e9         db  0x0b ; '.'
00000000000098ea         db  0x5e ; '^'
00000000000098eb         db  0x0a ; '.'
00000000000098ec         db  0x0e ; '.'
00000000000098ed         db  0x38 ; '8'
00000000000098ee         db  0x52 ; 'R'
00000000000098ef         db  0x0e ; '.'
00000000000098f0         db  0x30 ; '0'
00000000000098f1         db  0x41 ; 'A'
00000000000098f2         db  0x0e ; '.'
00000000000098f3         db  0x28 ; '('
00000000000098f4         db  0x42 ; 'B'
00000000000098f5         db  0x0e ; '.'
00000000000098f6         db  0x20 ; ' '
00000000000098f7         db  0x42 ; 'B'
00000000000098f8         db  0x0e ; '.'
00000000000098f9         db  0x18 ; '.'
00000000000098fa         db  0x42 ; 'B'
00000000000098fb         db  0x0e ; '.'
00000000000098fc         db  0x10 ; '.'
00000000000098fd         db  0x42 ; 'B'
00000000000098fe         db  0x0e ; '.'
00000000000098ff         db  0x08 ; '.'
0000000000009900         db  0x4f ; 'O'
0000000000009901         db  0x0b ; '.'
0000000000009902         db  0x62 ; 'b'
0000000000009903         db  0x0a ; '.'
0000000000009904         db  0x0e ; '.'
0000000000009905         db  0x38 ; '8'
0000000000009906         db  0x50 ; 'P'
0000000000009907         db  0x0e ; '.'
0000000000009908         db  0x30 ; '0'
0000000000009909         db  0x41 ; 'A'
000000000000990a         db  0x0e ; '.'
000000000000990b         db  0x28 ; '('
000000000000990c         db  0x42 ; 'B'
000000000000990d         db  0x0e ; '.'
000000000000990e         db  0x20 ; ' '
000000000000990f         db  0x42 ; 'B'
0000000000009910         db  0x0e ; '.'
0000000000009911         db  0x18 ; '.'
0000000000009912         db  0x42 ; 'B'
0000000000009913         db  0x0e ; '.'
0000000000009914         db  0x10 ; '.'
0000000000009915         db  0x42 ; 'B'
0000000000009916         db  0x0e ; '.'
0000000000009917         db  0x08 ; '.'
0000000000009918         db  0x55 ; 'U'
0000000000009919         db  0x0b ; '.'
000000000000991a         db  0x66 ; 'f'
000000000000991b         db  0x0e ; '.'
000000000000991c         db  0x68 ; 'h'
000000000000991d         db  0x42 ; 'B'
000000000000991e         db  0x0e ; '.'
000000000000991f         db  0x70 ; 'p'
0000000000009920         db  0x5c ; '\'
0000000000009921         db  0x0e ; '.'
0000000000009922         db  0x68 ; 'h'
0000000000009923         db  0x41 ; 'A'
0000000000009924         db  0x0e ; '.'
0000000000009925         db  0x60 ; '`'
0000000000009926         db  0x44 ; 'D'
0000000000009927         db  0x0a ; '.'
0000000000009928         db  0x0e ; '.'
0000000000009929         db  0x38 ; '8'
000000000000992a         db  0x41 ; 'A'
000000000000992b         db  0x0e ; '.'
000000000000992c         db  0x30 ; '0'
000000000000992d         db  0x41 ; 'A'
000000000000992e         db  0x0e ; '.'
000000000000992f         db  0x28 ; '('
0000000000009930         db  0x42 ; 'B'
0000000000009931         db  0x0e ; '.'
0000000000009932         db  0x20 ; ' '
0000000000009933         db  0x42 ; 'B'
0000000000009934         db  0x0e ; '.'
0000000000009935         db  0x18 ; '.'
0000000000009936         db  0x42 ; 'B'
0000000000009937         db  0x0e ; '.'
0000000000009938         db  0x10 ; '.'
0000000000009939         db  0x42 ; 'B'
000000000000993a         db  0x0e ; '.'
000000000000993b         db  0x08 ; '.'
000000000000993c         db  0x45 ; 'E'
000000000000993d         db  0x0b ; '.'
000000000000993e         db  0x68 ; 'h'
000000000000993f         db  0x0a ; '.'
0000000000009940         db  0x0e ; '.'
0000000000009941         db  0x68 ; 'h'
0000000000009942         db  0x48 ; 'H'
0000000000009943         db  0x0b ; '.'
0000000000009944         db  0x72 ; 'r'
0000000000009945         db  0x0e ; '.'
0000000000009946         db  0x68 ; 'h'
0000000000009947         db  0x45 ; 'E'
0000000000009948         db  0x0e ; '.'
0000000000009949         db  0x70 ; 'p'
000000000000994a         db  0x42 ; 'B'
000000000000994b         db  0x0e ; '.'
000000000000994c         db  0x78 ; 'x'
000000000000994d         db  0x42 ; 'B'
000000000000994e         db  0x0e ; '.'
000000000000994f         db  0x80 ; '.'
0000000000009950         db  0x01 ; '.'
0000000000009951         db  0x5e ; '^'
0000000000009952         db  0x0e ; '.'
0000000000009953         db  0x60 ; '`'
0000000000009954         db  0x44 ; 'D'
0000000000009955         db  0x0a ; '.'
0000000000009956         db  0x0e ; '.'
0000000000009957         db  0x38 ; '8'
0000000000009958         db  0x41 ; 'A'
0000000000009959         db  0x0e ; '.'
000000000000995a         db  0x30 ; '0'
000000000000995b         db  0x41 ; 'A'
000000000000995c         db  0x0e ; '.'
000000000000995d         db  0x28 ; '('
000000000000995e         db  0x42 ; 'B'
000000000000995f         db  0x0e ; '.'
0000000000009960         db  0x20 ; ' '
0000000000009961         db  0x42 ; 'B'
0000000000009962         db  0x0e ; '.'
0000000000009963         db  0x18 ; '.'
0000000000009964         db  0x42 ; 'B'
0000000000009965         db  0x0e ; '.'
0000000000009966         db  0x10 ; '.'
0000000000009967         db  0x42 ; 'B'
0000000000009968         db  0x0e ; '.'
0000000000009969         db  0x08 ; '.'
000000000000996a         db  0x41 ; 'A'
000000000000996b         db  0x0b ; '.'
000000000000996c         db  0x79 ; 'y'
000000000000996d         db  0x0a ; '.'
000000000000996e         db  0x0e ; '.'
000000000000996f         db  0x68 ; 'h'
0000000000009970         db  0x42 ; 'B'
0000000000009971         db  0x0e ; '.'
0000000000009972         db  0x70 ; 'p'
0000000000009973         db  0x42 ; 'B'
0000000000009974         db  0x0e ; '.'
0000000000009975         db  0x78 ; 'x'
0000000000009976         db  0x42 ; 'B'
0000000000009977         db  0x0e ; '.'
0000000000009978         db  0x80 ; '.'
0000000000009979         db  0x01 ; '.'
000000000000997a         db  0x51 ; 'Q'
000000000000997b         db  0x0b ; '.'
000000000000997c         dd         0x00000010                                  ; Length of the record
0000000000009980         dd         0x00000820                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009984         db         0x2c, 0xb0, 2 dup (0xff)                    ; begin 0x49b0
0000000000009988         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x49d0)
000000000000998c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000998d         align      16
0000000000009990         dd         0x00000018                                  ; Length of the record
0000000000009994         dd         0x00000834                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009998         db         0x38, 0xb0, 2 dup (0xff)                    ; begin 0x49d0
000000000000999c         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x4a48)
00000000000099a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000099a1         db  0x44 ; 'D'
00000000000099a2         db  0x0e ; '.'
00000000000099a3         db  0x70 ; 'p'
00000000000099a4         db  0x02 ; '.'
00000000000099a5         db  0x60 ; '`'
00000000000099a6         db  0x0a ; '.'
00000000000099a7         db  0x0e ; '.'
00000000000099a8         db  0x08 ; '.'
00000000000099a9         db  0x41 ; 'A'
00000000000099aa         db  0x0b ; '.'
00000000000099ab         db  0x00 ; '.'
00000000000099ac         dd         0x00000028                                  ; Length of the record
00000000000099b0         dd         0x00000850                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000099b4         db         0x9c, 0xb0, 2 dup (0xff)                    ; begin 0x4a50
00000000000099b8         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x4b25)
00000000000099bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000099bd         db  0x41 ; 'A'
00000000000099be         db  0x0e ; '.'
00000000000099bf         db  0x10 ; '.'
00000000000099c0         db  0x86 ; '.'
00000000000099c1         db  0x02 ; '.'
00000000000099c2         db  0x41 ; 'A'
00000000000099c3         db  0x0e ; '.'
00000000000099c4         db  0x18 ; '.'
00000000000099c5         db  0x83 ; '.'
00000000000099c6         db  0x03 ; '.'
00000000000099c7         db  0x50 ; 'P'
00000000000099c8         db  0x0e ; '.'
00000000000099c9         db  0xd0 ; '.'
00000000000099ca         db  0x01 ; '.'
00000000000099cb         db  0x02 ; '.'
00000000000099cc         db  0xab ; '.'
00000000000099cd         db  0x0a ; '.'
00000000000099ce         db  0x0e ; '.'
00000000000099cf         db  0x18 ; '.'
00000000000099d0         db  0x41 ; 'A'
00000000000099d1         db  0x0e ; '.'
00000000000099d2         db  0x10 ; '.'
00000000000099d3         db  0x41 ; 'A'
00000000000099d4         db  0x0e ; '.'
00000000000099d5         db  0x08 ; '.'
00000000000099d6         db  0x41 ; 'A'
00000000000099d7         db  0x0b ; '.'
00000000000099d8         dd         0x0000001c                                  ; Length of the record
00000000000099dc         dd         0x0000087c                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
00000000000099e0         db         0x50, 0xb1, 2 dup (0xff)                    ; begin 0x4b30
00000000000099e4         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x4bb0)
00000000000099e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000099e9         db  0x41 ; 'A'
00000000000099ea         db  0x0e ; '.'
00000000000099eb         db  0x10 ; '.'
00000000000099ec         db  0x83 ; '.'
00000000000099ed         db  0x02 ; '.'
00000000000099ee         db  0x02 ; '.'
00000000000099ef         db  0x7a ; 'z'
00000000000099f0         db  0x0e ; '.'
00000000000099f1         db  0x08 ; '.'
00000000000099f2         db  0x00 ; '.'
00000000000099f3         db  0x00 ; '.'
00000000000099f4         db  0x00 ; '.'
00000000000099f5         db  0x00 ; '.'
00000000000099f6         db  0x00 ; '.'
00000000000099f7         db  0x00 ; '.'
00000000000099f8         dd         0x00000018                                  ; Length of the record
00000000000099fc         dd         0x0000089c                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009a00         db         0xb0, 0xb1, 2 dup (0xff)                    ; begin 0x4bb0
0000000000009a04         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x4bca)
0000000000009a08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009a09         db  0x41 ; 'A'
0000000000009a0a         db  0x0e ; '.'
0000000000009a0b         db  0x10 ; '.'
0000000000009a0c         db  0x83 ; '.'
0000000000009a0d         db  0x02 ; '.'
0000000000009a0e         db  0x53 ; 'S'
0000000000009a0f         db  0x0a ; '.'
0000000000009a10         db  0x0e ; '.'
0000000000009a11         db  0x08 ; '.'
0000000000009a12         db  0x41 ; 'A'
0000000000009a13         db  0x0b ; '.'
0000000000009a14         dd         0x00000010                                  ; Length of the record
0000000000009a18         dd         0x000008b8                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009a1c         db         0xb4, 0xb1, 2 dup (0xff)                    ; begin 0x4bd0
0000000000009a20         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4bf4)
0000000000009a24         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009a25         db  0x5f ; '_'
0000000000009a26         db  0x0e ; '.'
0000000000009a27         db  0x10 ; '.'
0000000000009a28         dd         0x00000010                                  ; Length of the record
0000000000009a2c         dd         0x000008cc                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009a30         db         0xd0, 0xb1, 2 dup (0xff)                    ; begin 0x4c00
0000000000009a34         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x4c02)
0000000000009a38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009a39         align      4
0000000000009a3c         dd         0x00000020                                  ; Length of the record
0000000000009a40         dd         0x000008e0                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009a44         db         0xcc, 0xb1, 2 dup (0xff)                    ; begin 0x4c10
0000000000009a48         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4c46)
0000000000009a4c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009a4d         db  0x44 ; 'D'
0000000000009a4e         db  0x0e ; '.'
0000000000009a4f         db  0x10 ; '.'
0000000000009a50         db  0x83 ; '.'
0000000000009a51         db  0x02 ; '.'
0000000000009a52         db  0x5d ; ']'
0000000000009a53         db  0x0a ; '.'
0000000000009a54         db  0x0e ; '.'
0000000000009a55         db  0x08 ; '.'
0000000000009a56         db  0x47 ; 'G'
0000000000009a57         db  0x0b ; '.'
0000000000009a58         db  0x48 ; 'H'
0000000000009a59         db  0x0a ; '.'
0000000000009a5a         db  0x0e ; '.'
0000000000009a5b         db  0x08 ; '.'
0000000000009a5c         db  0x41 ; 'A'
0000000000009a5d         db  0x0b ; '.'
0000000000009a5e         db  0x00 ; '.'
0000000000009a5f         db  0x00 ; '.'
0000000000009a60         dd         0x00000010                                  ; Length of the record
0000000000009a64         dd         0x00000904                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009a68         db         0xe8, 0xb1, 2 dup (0xff)                    ; begin 0x4c50
0000000000009a6c         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4c74)
0000000000009a70         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009a71         db  0x5f ; '_'
0000000000009a72         db  0x0e ; '.'
0000000000009a73         db  0x10 ; '.'
0000000000009a74         dd         0x00000014                                  ; Length of the record
0000000000009a78         dd         0x00000918                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009a7c         db         0x04, 0xb2, 2 dup (0xff)                    ; begin 0x4c80
0000000000009a80         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x4d02)
0000000000009a84         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009a85         db  0x02 ; '.'
0000000000009a86         db  0x5f ; '_'
0000000000009a87         db  0x0e ; '.'
0000000000009a88         db  0x10 ; '.'
0000000000009a89         db  0x49 ; 'I'
0000000000009a8a         db  0x0e ; '.'
0000000000009a8b         db  0x08 ; '.'
0000000000009a8c         dd         0x00000014                                  ; Length of the record
0000000000009a90         dd         0x00000930                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009a94         db         0x7c, 0xb2, 2 dup (0xff)                    ; begin 0x4d10
0000000000009a98         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x4d5a)
0000000000009a9c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009a9d         db  0x02 ; '.'
0000000000009a9e         db  0x45 ; 'E'
0000000000009a9f         db  0x0e ; '.'
0000000000009aa0         db  0x10 ; '.'
0000000000009aa1         db  0x00 ; '.'
0000000000009aa2         db  0x00 ; '.'
0000000000009aa3         db  0x00 ; '.'
0000000000009aa4         dd         0x00000018                                  ; Length of the record
0000000000009aa8         dd         0x00000948                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009aac         db         0xb4, 0xb2, 2 dup (0xff)                    ; begin 0x4d60
0000000000009ab0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4d77)
0000000000009ab4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009ab5         db  0x41 ; 'A'
0000000000009ab6         db  0x0e ; '.'
0000000000009ab7         db  0x10 ; '.'
0000000000009ab8         db  0x83 ; '.'
0000000000009ab9         db  0x02 ; '.'
0000000000009aba         db  0x51 ; 'Q'
0000000000009abb         db  0x0e ; '.'
0000000000009abc         db  0x08 ; '.'
0000000000009abd         db  0x00 ; '.'
0000000000009abe         db  0x00 ; '.'
0000000000009abf         db  0x00 ; '.'
0000000000009ac0         dd         0x00000018                                  ; Length of the record
0000000000009ac4         dd         0x00000964                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009ac8         db         0xb8, 0xb2, 2 dup (0xff)                    ; begin 0x4d80
0000000000009acc         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x4dae)
0000000000009ad0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009ad1         db  0x47 ; 'G'
0000000000009ad2         db  0x0e ; '.'
0000000000009ad3         db  0x10 ; '.'
0000000000009ad4         db  0x61 ; 'a'
0000000000009ad5         db  0x0a ; '.'
0000000000009ad6         db  0x0e ; '.'
0000000000009ad7         db  0x08 ; '.'
0000000000009ad8         db  0x41 ; 'A'
0000000000009ad9         db  0x0b ; '.'
0000000000009ada         db  0x00 ; '.'
0000000000009adb         db  0x00 ; '.'
0000000000009adc         dd         0x00000024                                  ; Length of the record
0000000000009ae0         dd         0x00000980                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009ae4         db         0xcc, 0xb2, 2 dup (0xff)                    ; begin 0x4db0
0000000000009ae8         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x4dd8)
0000000000009aec         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009aed         db  0x41 ; 'A'
0000000000009aee         db  0x0e ; '.'
0000000000009aef         db  0x10 ; '.'
0000000000009af0         db  0x86 ; '.'
0000000000009af1         db  0x02 ; '.'
0000000000009af2         db  0x41 ; 'A'
0000000000009af3         db  0x0e ; '.'
0000000000009af4         db  0x18 ; '.'
0000000000009af5         db  0x83 ; '.'
0000000000009af6         db  0x03 ; '.'
0000000000009af7         db  0x4d ; 'M'
0000000000009af8         db  0x0e ; '.'
0000000000009af9         db  0x20 ; ' '
0000000000009afa         db  0x49 ; 'I'
0000000000009afb         db  0x0e ; '.'
0000000000009afc         db  0x18 ; '.'
0000000000009afd         db  0x47 ; 'G'
0000000000009afe         db  0x0e ; '.'
0000000000009aff         db  0x10 ; '.'
0000000000009b00         db  0x41 ; 'A'
0000000000009b01         db  0x0e ; '.'
0000000000009b02         db  0x08 ; '.'
0000000000009b03         db  0x00 ; '.'
0000000000009b04         dd         0x00000018                                  ; Length of the record
0000000000009b08         dd         0x000009a8                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009b0c         db         0xd4, 0xb2, 2 dup (0xff)                    ; begin 0x4de0
0000000000009b10         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4df3)
0000000000009b14         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009b15         db  0x41 ; 'A'
0000000000009b16         db  0x0e ; '.'
0000000000009b17         db  0x10 ; '.'
0000000000009b18         db  0x83 ; '.'
0000000000009b19         db  0x02 ; '.'
0000000000009b1a         db  0x50 ; 'P'
0000000000009b1b         db  0x0e ; '.'
0000000000009b1c         db  0x08 ; '.'
0000000000009b1d         db  0x00 ; '.'
0000000000009b1e         db  0x00 ; '.'
0000000000009b1f         db  0x00 ; '.'
0000000000009b20         dd         0x00000014                                  ; Length of the record
0000000000009b24         dd         0x000009c4                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009b28         db         0xd8, 0xb2, 2 dup (0xff)                    ; begin 0x4e00
0000000000009b2c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4e35)
0000000000009b30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009b31         db  0x4b ; 'K'
0000000000009b32         db  0x0e ; '.'
0000000000009b33         db  0x10 ; '.'
0000000000009b34         db  0x00 ; '.'
0000000000009b35         db  0x00 ; '.'
0000000000009b36         db  0x00 ; '.'
0000000000009b37         db  0x00 ; '.'
0000000000009b38         dd         0x0000001c                                  ; Length of the record
0000000000009b3c         dd         0x000009dc                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009b40         db         0x00, 0xb3, 2 dup (0xff)                    ; begin 0x4e40
0000000000009b44         db         0x27, 3 dup (0x00)                          ; length 0x27 (end at 0x4e67)
0000000000009b48         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009b49         db  0x41 ; 'A'
0000000000009b4a         db  0x0e ; '.'
0000000000009b4b         db  0x10 ; '.'
0000000000009b4c         db  0x83 ; '.'
0000000000009b4d         db  0x02 ; '.'
0000000000009b4e         db  0x51 ; 'Q'
0000000000009b4f         db  0x0a ; '.'
0000000000009b50         db  0x0e ; '.'
0000000000009b51         db  0x08 ; '.'
0000000000009b52         db  0x46 ; 'F'
0000000000009b53         db  0x0b ; '.'
0000000000009b54         db  0x00 ; '.'
0000000000009b55         db  0x00 ; '.'
0000000000009b56         db  0x00 ; '.'
0000000000009b57         db  0x00 ; '.'
0000000000009b58         dd         0x0000004c                                  ; Length of the record
0000000000009b5c         dd         0x000009fc                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009b60         db         0x10, 0xb3, 2 dup (0xff)                    ; begin 0x4e70
0000000000009b64         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x528c)
0000000000009b68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009b69         db  0x42 ; 'B'
0000000000009b6a         db  0x0e ; '.'
0000000000009b6b         db  0x10 ; '.'
0000000000009b6c         db  0x8f ; '.'
0000000000009b6d         db  0x02 ; '.'
0000000000009b6e         db  0x42 ; 'B'
0000000000009b6f         db  0x0e ; '.'
0000000000009b70         db  0x18 ; '.'
0000000000009b71         db  0x8e ; '.'
0000000000009b72         db  0x03 ; '.'
0000000000009b73         db  0x42 ; 'B'
0000000000009b74         db  0x0e ; '.'
0000000000009b75         db  0x20 ; ' '
0000000000009b76         db  0x8d ; '.'
0000000000009b77         db  0x04 ; '.'
0000000000009b78         db  0x42 ; 'B'
0000000000009b79         db  0x0e ; '.'
0000000000009b7a         db  0x28 ; '('
0000000000009b7b         db  0x8c ; '.'
0000000000009b7c         db  0x05 ; '.'
0000000000009b7d         db  0x41 ; 'A'
0000000000009b7e         db  0x0e ; '.'
0000000000009b7f         db  0x30 ; '0'
0000000000009b80         db  0x86 ; '.'
0000000000009b81         db  0x06 ; '.'
0000000000009b82         db  0x41 ; 'A'
0000000000009b83         db  0x0e ; '.'
0000000000009b84         db  0x38 ; '8'
0000000000009b85         db  0x83 ; '.'
0000000000009b86         db  0x07 ; '.'
0000000000009b87         db  0x44 ; 'D'
0000000000009b88         db  0x0e ; '.'
0000000000009b89         db  0x60 ; '`'
0000000000009b8a         db  0x02 ; '.'
0000000000009b8b         db  0xe9 ; '.'
0000000000009b8c         db  0x0a ; '.'
0000000000009b8d         db  0x0e ; '.'
0000000000009b8e         db  0x38 ; '8'
0000000000009b8f         db  0x41 ; 'A'
0000000000009b90         db  0x0e ; '.'
0000000000009b91         db  0x30 ; '0'
0000000000009b92         db  0x41 ; 'A'
0000000000009b93         db  0x0e ; '.'
0000000000009b94         db  0x28 ; '('
0000000000009b95         db  0x42 ; 'B'
0000000000009b96         db  0x0e ; '.'
0000000000009b97         db  0x20 ; ' '
0000000000009b98         db  0x42 ; 'B'
0000000000009b99         db  0x0e ; '.'
0000000000009b9a         db  0x18 ; '.'
0000000000009b9b         db  0x42 ; 'B'
0000000000009b9c         db  0x0e ; '.'
0000000000009b9d         db  0x10 ; '.'
0000000000009b9e         db  0x42 ; 'B'
0000000000009b9f         db  0x0e ; '.'
0000000000009ba0         db  0x08 ; '.'
0000000000009ba1         db  0x47 ; 'G'
0000000000009ba2         db  0x0b ; '.'
0000000000009ba3         db  0x00 ; '.'
0000000000009ba4         db  0x00 ; '.'
0000000000009ba5         db  0x00 ; '.'
0000000000009ba6         db  0x00 ; '.'
0000000000009ba7         db  0x00 ; '.'
0000000000009ba8         dd         0x0000001c                                  ; Length of the record
0000000000009bac         dd         0x00000a4c                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009bb0         db         0xe0, 0xb6, 2 dup (0xff)                    ; begin 0x5290
0000000000009bb4         db         0xb1, 3 dup (0x00)                          ; length 0xb1 (end at 0x5341)
0000000000009bb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009bb9         db  0x47 ; 'G'
0000000000009bba         db  0x0e ; '.'
0000000000009bbb         db  0xe0 ; '.'
0000000000009bbc         db  0x01 ; '.'
0000000000009bbd         db  0x02 ; '.'
0000000000009bbe         db  0xa4 ; '.'
0000000000009bbf         db  0x0a ; '.'
0000000000009bc0         db  0x0e ; '.'
0000000000009bc1         db  0x08 ; '.'
0000000000009bc2         db  0x41 ; 'A'
0000000000009bc3         db  0x0b ; '.'
0000000000009bc4         db  0x00 ; '.'
0000000000009bc5         db  0x00 ; '.'
0000000000009bc6         db  0x00 ; '.'
0000000000009bc7         db  0x00 ; '.'
0000000000009bc8         dd         0x0000003c                                  ; Length of the record
0000000000009bcc         dd         0x00000a6c                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009bd0         db         0x80, 0xb7, 2 dup (0xff)                    ; begin 0x5350
0000000000009bd4         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x53d3)
0000000000009bd8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009bd9         db  0x42 ; 'B'
0000000000009bda         db  0x0e ; '.'
0000000000009bdb         db  0x10 ; '.'
0000000000009bdc         db  0x8d ; '.'
0000000000009bdd         db  0x02 ; '.'
0000000000009bde         db  0x42 ; 'B'
0000000000009bdf         db  0x0e ; '.'
0000000000009be0         db  0x18 ; '.'
0000000000009be1         db  0x8c ; '.'
0000000000009be2         db  0x03 ; '.'
0000000000009be3         db  0x44 ; 'D'
0000000000009be4         db  0x0e ; '.'
0000000000009be5         db  0x20 ; ' '
0000000000009be6         db  0x86 ; '.'
0000000000009be7         db  0x04 ; '.'
0000000000009be8         db  0x41 ; 'A'
0000000000009be9         db  0x0e ; '.'
0000000000009bea         db  0x28 ; '('
0000000000009beb         db  0x83 ; '.'
0000000000009bec         db  0x05 ; '.'
0000000000009bed         db  0x4a ; 'J'
0000000000009bee         db  0x0e ; '.'
0000000000009bef         db  0x40 ; '@'
0000000000009bf0         db  0x02 ; '.'
0000000000009bf1         db  0x64 ; 'd'
0000000000009bf2         db  0x0a ; '.'
0000000000009bf3         db  0x0e ; '.'
0000000000009bf4         db  0x28 ; '('
0000000000009bf5         db  0x41 ; 'A'
0000000000009bf6         db  0x0e ; '.'
0000000000009bf7         db  0x20 ; ' '
0000000000009bf8         db  0x41 ; 'A'
0000000000009bf9         db  0x0e ; '.'
0000000000009bfa         db  0x18 ; '.'
0000000000009bfb         db  0x42 ; 'B'
0000000000009bfc         db  0x0e ; '.'
0000000000009bfd         db  0x10 ; '.'
0000000000009bfe         db  0x42 ; 'B'
0000000000009bff         db  0x0e ; '.'
0000000000009c00         db  0x08 ; '.'
0000000000009c01         db  0x41 ; 'A'
0000000000009c02         db  0x0b ; '.'
0000000000009c03         db  0x00 ; '.'
0000000000009c04         db  0x00 ; '.'
0000000000009c05         db  0x00 ; '.'
0000000000009c06         db  0x00 ; '.'
0000000000009c07         db  0x00 ; '.'
0000000000009c08         dd         0x00000024                                  ; Length of the record
0000000000009c0c         dd         0x00000aac                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009c10         db         0xd0, 0xb7, 2 dup (0xff)                    ; begin 0x53e0
0000000000009c14         db         0x7e, 3 dup (0x00)                          ; length 0x7e (end at 0x545e)
0000000000009c18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009c19         db  0x41 ; 'A'
0000000000009c1a         db  0x0e ; '.'
0000000000009c1b         db  0x10 ; '.'
0000000000009c1c         db  0x83 ; '.'
0000000000009c1d         db  0x02 ; '.'
0000000000009c1e         db  0x4c ; 'L'
0000000000009c1f         db  0x0e ; '.'
0000000000009c20         db  0x20 ; ' '
0000000000009c21         db  0x02 ; '.'
0000000000009c22         db  0x49 ; 'I'
0000000000009c23         db  0x0a ; '.'
0000000000009c24         db  0x0e ; '.'
0000000000009c25         db  0x10 ; '.'
0000000000009c26         db  0x41 ; 'A'
0000000000009c27         db  0x0e ; '.'
0000000000009c28         db  0x08 ; '.'
0000000000009c29         db  0x41 ; 'A'
0000000000009c2a         db  0x0b ; '.'
0000000000009c2b         db  0x00 ; '.'
0000000000009c2c         db  0x00 ; '.'
0000000000009c2d         db  0x00 ; '.'
0000000000009c2e         db  0x00 ; '.'
0000000000009c2f         db  0x00 ; '.'
0000000000009c30         dd         0x00000010                                  ; Length of the record
0000000000009c34         dd         0x00000ad4                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009c38         db         0x28, 0xb8, 2 dup (0xff)                    ; begin 0x5460
0000000000009c3c         db         0x1f, 3 dup (0x00)                          ; length 0x1f (end at 0x547f)
0000000000009c40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009c41         db  0x5a ; 'Z'
0000000000009c42         db  0x0e ; '.'
0000000000009c43         db  0x10 ; '.'
0000000000009c44         dd         0x00000010                                  ; Length of the record
0000000000009c48         dd         0x00000ae8                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009c4c         db         0x34, 0xb8, 2 dup (0xff)                    ; begin 0x5480
0000000000009c50         db         0x1b, 3 dup (0x00)                          ; length 0x1b (end at 0x549b)
0000000000009c54         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009c55         align      8
0000000000009c58         dd         0x0000004c                                  ; Length of the record
0000000000009c5c         dd         0x00000afc                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009c60         db         0x40, 0xb8, 2 dup (0xff)                    ; begin 0x54a0
0000000000009c64         db         0x08, 0x02, 2 dup (0x00)                    ; length 0x208 (end at 0x56a8)
0000000000009c68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009c69         db  0x42 ; 'B'
0000000000009c6a         db  0x0e ; '.'
0000000000009c6b         db  0x10 ; '.'
0000000000009c6c         db  0x8f ; '.'
0000000000009c6d         db  0x02 ; '.'
0000000000009c6e         db  0x42 ; 'B'
0000000000009c6f         db  0x0e ; '.'
0000000000009c70         db  0x18 ; '.'
0000000000009c71         db  0x8e ; '.'
0000000000009c72         db  0x03 ; '.'
0000000000009c73         db  0x45 ; 'E'
0000000000009c74         db  0x0e ; '.'
0000000000009c75         db  0x20 ; ' '
0000000000009c76         db  0x8d ; '.'
0000000000009c77         db  0x04 ; '.'
0000000000009c78         db  0x42 ; 'B'
0000000000009c79         db  0x0e ; '.'
0000000000009c7a         db  0x28 ; '('
0000000000009c7b         db  0x8c ; '.'
0000000000009c7c         db  0x05 ; '.'
0000000000009c7d         db  0x44 ; 'D'
0000000000009c7e         db  0x0e ; '.'
0000000000009c7f         db  0x30 ; '0'
0000000000009c80         db  0x86 ; '.'
0000000000009c81         db  0x06 ; '.'
0000000000009c82         db  0x41 ; 'A'
0000000000009c83         db  0x0e ; '.'
0000000000009c84         db  0x38 ; '8'
0000000000009c85         db  0x83 ; '.'
0000000000009c86         db  0x07 ; '.'
0000000000009c87         db  0x4a ; 'J'
0000000000009c88         db  0x0e ; '.'
0000000000009c89         db  0xe0 ; '.'
0000000000009c8a         db  0x08 ; '.'
0000000000009c8b         db  0x02 ; '.'
0000000000009c8c         db  0xf4 ; '.'
0000000000009c8d         db  0x0a ; '.'
0000000000009c8e         db  0x0e ; '.'
0000000000009c8f         db  0x38 ; '8'
0000000000009c90         db  0x41 ; 'A'
0000000000009c91         db  0x0e ; '.'
0000000000009c92         db  0x30 ; '0'
0000000000009c93         db  0x41 ; 'A'
0000000000009c94         db  0x0e ; '.'
0000000000009c95         db  0x28 ; '('
0000000000009c96         db  0x42 ; 'B'
0000000000009c97         db  0x0e ; '.'
0000000000009c98         db  0x20 ; ' '
0000000000009c99         db  0x42 ; 'B'
0000000000009c9a         db  0x0e ; '.'
0000000000009c9b         db  0x18 ; '.'
0000000000009c9c         db  0x42 ; 'B'
0000000000009c9d         db  0x0e ; '.'
0000000000009c9e         db  0x10 ; '.'
0000000000009c9f         db  0x42 ; 'B'
0000000000009ca0         db  0x0e ; '.'
0000000000009ca1         db  0x08 ; '.'
0000000000009ca2         db  0x48 ; 'H'
0000000000009ca3         db  0x0b ; '.'
0000000000009ca4         db  0x00 ; '.'
0000000000009ca5         db  0x00 ; '.'
0000000000009ca6         db  0x00 ; '.'
0000000000009ca7         db  0x00 ; '.'
0000000000009ca8         dd         0x0000004c                                  ; Length of the record
0000000000009cac         dd         0x00000b4c                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009cb0         db         0x00, 0xba, 2 dup (0xff)                    ; begin 0x56b0
0000000000009cb4         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x572d)
0000000000009cb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009cb9         db  0x42 ; 'B'
0000000000009cba         db  0x0e ; '.'
0000000000009cbb         db  0x10 ; '.'
0000000000009cbc         db  0x8c ; '.'
0000000000009cbd         db  0x02 ; '.'
0000000000009cbe         db  0x41 ; 'A'
0000000000009cbf         db  0x0e ; '.'
0000000000009cc0         db  0x18 ; '.'
0000000000009cc1         db  0x86 ; '.'
0000000000009cc2         db  0x03 ; '.'
0000000000009cc3         db  0x44 ; 'D'
0000000000009cc4         db  0x0e ; '.'
0000000000009cc5         db  0x20 ; ' '
0000000000009cc6         db  0x83 ; '.'
0000000000009cc7         db  0x04 ; '.'
0000000000009cc8         db  0x69 ; 'i'
0000000000009cc9         db  0x0a ; '.'
0000000000009cca         db  0x0e ; '.'
0000000000009ccb         db  0x18 ; '.'
0000000000009ccc         db  0x41 ; 'A'
0000000000009ccd         db  0x0e ; '.'
0000000000009cce         db  0x10 ; '.'
0000000000009ccf         db  0x42 ; 'B'
0000000000009cd0         db  0x0e ; '.'
0000000000009cd1         db  0x08 ; '.'
0000000000009cd2         db  0x45 ; 'E'
0000000000009cd3         db  0x0b ; '.'
0000000000009cd4         db  0x55 ; 'U'
0000000000009cd5         db  0x0a ; '.'
0000000000009cd6         db  0x0e ; '.'
0000000000009cd7         db  0x18 ; '.'
0000000000009cd8         db  0x41 ; 'A'
0000000000009cd9         db  0x0e ; '.'
0000000000009cda         db  0x10 ; '.'
0000000000009cdb         db  0x42 ; 'B'
0000000000009cdc         db  0x0e ; '.'
0000000000009cdd         db  0x08 ; '.'
0000000000009cde         db  0x48 ; 'H'
0000000000009cdf         db  0x0b ; '.'
0000000000009ce0         db  0x41 ; 'A'
0000000000009ce1         db  0x0a ; '.'
0000000000009ce2         db  0x0e ; '.'
0000000000009ce3         db  0x18 ; '.'
0000000000009ce4         db  0x46 ; 'F'
0000000000009ce5         db  0x0e ; '.'
0000000000009ce6         db  0x10 ; '.'
0000000000009ce7         db  0x42 ; 'B'
0000000000009ce8         db  0x0e ; '.'
0000000000009ce9         db  0x08 ; '.'
0000000000009cea         db  0x47 ; 'G'
0000000000009ceb         db  0x0b ; '.'
0000000000009cec         db  0x49 ; 'I'
0000000000009ced         db  0x0e ; '.'
0000000000009cee         db  0x18 ; '.'
0000000000009cef         db  0x41 ; 'A'
0000000000009cf0         db  0x0e ; '.'
0000000000009cf1         db  0x10 ; '.'
0000000000009cf2         db  0x42 ; 'B'
0000000000009cf3         db  0x0e ; '.'
0000000000009cf4         db  0x08 ; '.'
0000000000009cf5         db  0x00 ; '.'
0000000000009cf6         db  0x00 ; '.'
0000000000009cf7         db  0x00 ; '.'
0000000000009cf8         dd         0x0000001c                                  ; Length of the record
0000000000009cfc         dd         0x00000b9c                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009d00         db         0x30, 0xba, 2 dup (0xff)                    ; begin 0x5730
0000000000009d04         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x5790)
0000000000009d08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d09         db  0x44 ; 'D'
0000000000009d0a         db  0x0e ; '.'
0000000000009d0b         db  0x10 ; '.'
0000000000009d0c         db  0x75 ; 'u'
0000000000009d0d         db  0x0a ; '.'
0000000000009d0e         db  0x0e ; '.'
0000000000009d0f         db  0x08 ; '.'
0000000000009d10         db  0x47 ; 'G'
0000000000009d11         db  0x0b ; '.'
0000000000009d12         db  0x5f ; '_'
0000000000009d13         db  0x0e ; '.'
0000000000009d14         db  0x08 ; '.'
0000000000009d15         db  0x00 ; '.'
0000000000009d16         db  0x00 ; '.'
0000000000009d17         db  0x00 ; '.'
0000000000009d18         dd         0x0000001c                                  ; Length of the record
0000000000009d1c         dd         0x00000bbc                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009d20         db         0x70, 0xba, 2 dup (0xff)                    ; begin 0x5790
0000000000009d24         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x57cc)
0000000000009d28         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d29         db  0x44 ; 'D'
0000000000009d2a         db  0x0e ; '.'
0000000000009d2b         db  0x10 ; '.'
0000000000009d2c         db  0x61 ; 'a'
0000000000009d2d         db  0x0a ; '.'
0000000000009d2e         db  0x0e ; '.'
0000000000009d2f         db  0x08 ; '.'
0000000000009d30         db  0x4b ; 'K'
0000000000009d31         db  0x0b ; '.'
0000000000009d32         db  0x4b ; 'K'
0000000000009d33         db  0x0e ; '.'
0000000000009d34         db  0x08 ; '.'
0000000000009d35         db  0x00 ; '.'
0000000000009d36         db  0x00 ; '.'
0000000000009d37         db  0x00 ; '.'
0000000000009d38         dd         0x00000034                                  ; Length of the record
0000000000009d3c         dd         0x00000bdc                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009d40         db         0x90, 0xba, 2 dup (0xff)                    ; begin 0x57d0
0000000000009d44         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x584b)
0000000000009d48         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d49         db  0x42 ; 'B'
0000000000009d4a         db  0x0e ; '.'
0000000000009d4b         db  0x10 ; '.'
0000000000009d4c         db  0x8c ; '.'
0000000000009d4d         db  0x02 ; '.'
0000000000009d4e         db  0x41 ; 'A'
0000000000009d4f         db  0x0e ; '.'
0000000000009d50         db  0x18 ; '.'
0000000000009d51         db  0x86 ; '.'
0000000000009d52         db  0x03 ; '.'
0000000000009d53         db  0x41 ; 'A'
0000000000009d54         db  0x0e ; '.'
0000000000009d55         db  0x20 ; ' '
0000000000009d56         db  0x83 ; '.'
0000000000009d57         db  0x04 ; '.'
0000000000009d58         db  0x7d ; '}'
0000000000009d59         db  0x0a ; '.'
0000000000009d5a         db  0x0e ; '.'
0000000000009d5b         db  0x18 ; '.'
0000000000009d5c         db  0x41 ; 'A'
0000000000009d5d         db  0x0e ; '.'
0000000000009d5e         db  0x10 ; '.'
0000000000009d5f         db  0x42 ; 'B'
0000000000009d60         db  0x0e ; '.'
0000000000009d61         db  0x08 ; '.'
0000000000009d62         db  0x44 ; 'D'
0000000000009d63         db  0x0b ; '.'
0000000000009d64         db  0x60 ; '`'
0000000000009d65         db  0x0a ; '.'
0000000000009d66         db  0x0e ; '.'
0000000000009d67         db  0x18 ; '.'
0000000000009d68         db  0x41 ; 'A'
0000000000009d69         db  0x0e ; '.'
0000000000009d6a         db  0x10 ; '.'
0000000000009d6b         db  0x42 ; 'B'
0000000000009d6c         db  0x0e ; '.'
0000000000009d6d         db  0x08 ; '.'
0000000000009d6e         db  0x45 ; 'E'
0000000000009d6f         db  0x0b ; '.'
0000000000009d70         dd         0x0000001c                                  ; Length of the record
0000000000009d74         dd         0x00000c14                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009d78         db         0xd8, 0xba, 2 dup (0xff)                    ; begin 0x5850
0000000000009d7c         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x5890)
0000000000009d80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d81         db  0x44 ; 'D'
0000000000009d82         db  0x0e ; '.'
0000000000009d83         db  0x10 ; '.'
0000000000009d84         db  0x83 ; '.'
0000000000009d85         db  0x02 ; '.'
0000000000009d86         db  0x5a ; 'Z'
0000000000009d87         db  0x0a ; '.'
0000000000009d88         db  0x0e ; '.'
0000000000009d89         db  0x08 ; '.'
0000000000009d8a         db  0x4a ; 'J'
0000000000009d8b         db  0x0b ; '.'
0000000000009d8c         db  0x53 ; 'S'
0000000000009d8d         db  0x0e ; '.'
0000000000009d8e         db  0x08 ; '.'
0000000000009d8f         db  0x00 ; '.'
0000000000009d90         dd         0x0000002c                                  ; Length of the record
0000000000009d94         dd         0x00000c34                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009d98         db         0xf8, 0xba, 2 dup (0xff)                    ; begin 0x5890
0000000000009d9c         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x58e7)
0000000000009da0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009da1         db  0x63 ; 'c'
0000000000009da2         db  0x0e ; '.'
0000000000009da3         db  0x10 ; '.'
0000000000009da4         db  0x8c ; '.'
0000000000009da5         db  0x02 ; '.'
0000000000009da6         db  0x41 ; 'A'
0000000000009da7         db  0x0e ; '.'
0000000000009da8         db  0x18 ; '.'
0000000000009da9         db  0x86 ; '.'
0000000000009daa         db  0x03 ; '.'
0000000000009dab         db  0x44 ; 'D'
0000000000009dac         db  0x0e ; '.'
0000000000009dad         db  0x20 ; ' '
0000000000009dae         db  0x83 ; '.'
0000000000009daf         db  0x04 ; '.'
0000000000009db0         db  0x6b ; 'k'
0000000000009db1         db  0x0e ; '.'
0000000000009db2         db  0x18 ; '.'
0000000000009db3         db  0x41 ; 'A'
0000000000009db4         db  0x0e ; '.'
0000000000009db5         db  0x10 ; '.'
0000000000009db6         db  0x42 ; 'B'
0000000000009db7         db  0x0e ; '.'
0000000000009db8         db  0x08 ; '.'
0000000000009db9         db  0x00 ; '.'
0000000000009dba         db  0x00 ; '.'
0000000000009dbb         db  0x00 ; '.'
0000000000009dbc         db  0x00 ; '.'
0000000000009dbd         db  0x00 ; '.'
0000000000009dbe         db  0x00 ; '.'
0000000000009dbf         db  0x00 ; '.'
0000000000009dc0         dd         0x0000002c                                  ; Length of the record
0000000000009dc4         dd         0x00000c64                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009dc8         db         0x28, 0xbb, 2 dup (0xff)                    ; begin 0x58f0
0000000000009dcc         db         0x1f, 0x11, 2 dup (0x00)                    ; length 0x111f (end at 0x6a0f)
0000000000009dd0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009dd1         db  0x41 ; 'A'
0000000000009dd2         db  0x0e ; '.'
0000000000009dd3         db  0x10 ; '.'
0000000000009dd4         db  0x86 ; '.'
0000000000009dd5         db  0x02 ; '.'
0000000000009dd6         db  0x43 ; 'C'
0000000000009dd7         db  0x0d ; '.'
0000000000009dd8         db  0x06 ; '.'
0000000000009dd9         db  0x48 ; 'H'
0000000000009dda         db  0x8f ; '.'
0000000000009ddb         db  0x03 ; '.'
0000000000009ddc         db  0x8e ; '.'
0000000000009ddd         db  0x04 ; '.'
0000000000009dde         db  0x8d ; '.'
0000000000009ddf         db  0x05 ; '.'
0000000000009de0         db  0x8c ; '.'
0000000000009de1         db  0x06 ; '.'
0000000000009de2         db  0x48 ; 'H'
0000000000009de3         db  0x83 ; '.'
0000000000009de4         db  0x07 ; '.'
0000000000009de5         db  0x03 ; '.'
0000000000009de6         db  0xef ; '.'
0000000000009de7         db  0x01 ; '.'
0000000000009de8         db  0x0a ; '.'
0000000000009de9         db  0x0c ; '.'
0000000000009dea         db  0x07 ; '.'
0000000000009deb         db  0x08 ; '.'
0000000000009dec         db  0x45 ; 'E'
0000000000009ded         db  0x0b ; '.'
0000000000009dee         db  0x00 ; '.'
0000000000009def         db  0x00 ; '.'
0000000000009df0         dd         0x00000014                                  ; Length of the record
0000000000009df4         dd         0x00000c94                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009df8         db         0x18, 0xcc, 2 dup (0xff)                    ; begin 0x6a10
0000000000009dfc         db         0xfe, 0x01, 2 dup (0x00)                    ; length 0x1fe (end at 0x6c0e)
0000000000009e00         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009e01         align      8
0000000000009e08         dd         0x0000004c                                  ; Length of the record
0000000000009e0c         dd         0x00000cac                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009e10         db         0x00, 0xce, 2 dup (0xff)                    ; begin 0x6c10
0000000000009e14         db         0xec, 0x0c, 2 dup (0x00)                    ; length 0xcec (end at 0x78fc)
0000000000009e18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009e19         db  0x42 ; 'B'
0000000000009e1a         db  0x0e ; '.'
0000000000009e1b         db  0x10 ; '.'
0000000000009e1c         db  0x8f ; '.'
0000000000009e1d         db  0x02 ; '.'
0000000000009e1e         db  0x42 ; 'B'
0000000000009e1f         db  0x0e ; '.'
0000000000009e20         db  0x18 ; '.'
0000000000009e21         db  0x8e ; '.'
0000000000009e22         db  0x03 ; '.'
0000000000009e23         db  0x46 ; 'F'
0000000000009e24         db  0x0e ; '.'
0000000000009e25         db  0x20 ; ' '
0000000000009e26         db  0x8d ; '.'
0000000000009e27         db  0x04 ; '.'
0000000000009e28         db  0x42 ; 'B'
0000000000009e29         db  0x0e ; '.'
0000000000009e2a         db  0x28 ; '('
0000000000009e2b         db  0x8c ; '.'
0000000000009e2c         db  0x05 ; '.'
0000000000009e2d         db  0x45 ; 'E'
0000000000009e2e         db  0x0e ; '.'
0000000000009e2f         db  0x30 ; '0'
0000000000009e30         db  0x86 ; '.'
0000000000009e31         db  0x06 ; '.'
0000000000009e32         db  0x41 ; 'A'
0000000000009e33         db  0x0e ; '.'
0000000000009e34         db  0x38 ; '8'
0000000000009e35         db  0x83 ; '.'
0000000000009e36         db  0x07 ; '.'
0000000000009e37         db  0x52 ; 'R'
0000000000009e38         db  0x0e ; '.'
0000000000009e39         db  0x90 ; '.'
0000000000009e3a         db  0x01 ; '.'
0000000000009e3b         db  0x02 ; '.'
0000000000009e3c         db  0x82 ; '.'
0000000000009e3d         db  0x0a ; '.'
0000000000009e3e         db  0x0e ; '.'
0000000000009e3f         db  0x38 ; '8'
0000000000009e40         db  0x41 ; 'A'
0000000000009e41         db  0x0e ; '.'
0000000000009e42         db  0x30 ; '0'
0000000000009e43         db  0x41 ; 'A'
0000000000009e44         db  0x0e ; '.'
0000000000009e45         db  0x28 ; '('
0000000000009e46         db  0x42 ; 'B'
0000000000009e47         db  0x0e ; '.'
0000000000009e48         db  0x20 ; ' '
0000000000009e49         db  0x42 ; 'B'
0000000000009e4a         db  0x0e ; '.'
0000000000009e4b         db  0x18 ; '.'
0000000000009e4c         db  0x42 ; 'B'
0000000000009e4d         db  0x0e ; '.'
0000000000009e4e         db  0x10 ; '.'
0000000000009e4f         db  0x42 ; 'B'
0000000000009e50         db  0x0e ; '.'
0000000000009e51         db  0x08 ; '.'
0000000000009e52         db  0x48 ; 'H'
0000000000009e53         db  0x0b ; '.'
0000000000009e54         db  0x00 ; '.'
0000000000009e55         db  0x00 ; '.'
0000000000009e56         db  0x00 ; '.'
0000000000009e57         db  0x00 ; '.'
0000000000009e58         dd         0x00000044                                  ; Length of the record
0000000000009e5c         dd         0x00000cfc                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009e60         db         0xa0, 0xda, 2 dup (0xff)                    ; begin 0x7900
0000000000009e64         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x7965)
0000000000009e68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009e69         db  0x42 ; 'B'
0000000000009e6a         db  0x0e ; '.'
0000000000009e6b         db  0x10 ; '.'
0000000000009e6c         db  0x8f ; '.'
0000000000009e6d         db  0x02 ; '.'
0000000000009e6e         db  0x42 ; 'B'
0000000000009e6f         db  0x0e ; '.'
0000000000009e70         db  0x18 ; '.'
0000000000009e71         db  0x8e ; '.'
0000000000009e72         db  0x03 ; '.'
0000000000009e73         db  0x45 ; 'E'
0000000000009e74         db  0x0e ; '.'
0000000000009e75         db  0x20 ; ' '
0000000000009e76         db  0x8d ; '.'
0000000000009e77         db  0x04 ; '.'
0000000000009e78         db  0x42 ; 'B'
0000000000009e79         db  0x0e ; '.'
0000000000009e7a         db  0x28 ; '('
0000000000009e7b         db  0x8c ; '.'
0000000000009e7c         db  0x05 ; '.'
0000000000009e7d         db  0x48 ; 'H'
0000000000009e7e         db  0x0e ; '.'
0000000000009e7f         db  0x30 ; '0'
0000000000009e80         db  0x86 ; '.'
0000000000009e81         db  0x06 ; '.'
0000000000009e82         db  0x48 ; 'H'
0000000000009e83         db  0x0e ; '.'
0000000000009e84         db  0x38 ; '8'
0000000000009e85         db  0x83 ; '.'
0000000000009e86         db  0x07 ; '.'
0000000000009e87         db  0x4d ; 'M'
0000000000009e88         db  0x0e ; '.'
0000000000009e89         db  0x40 ; '@'
0000000000009e8a         db  0x72 ; 'r'
0000000000009e8b         db  0x0e ; '.'
0000000000009e8c         db  0x38 ; '8'
0000000000009e8d         db  0x41 ; 'A'
0000000000009e8e         db  0x0e ; '.'
0000000000009e8f         db  0x30 ; '0'
0000000000009e90         db  0x41 ; 'A'
0000000000009e91         db  0x0e ; '.'
0000000000009e92         db  0x28 ; '('
0000000000009e93         db  0x42 ; 'B'
0000000000009e94         db  0x0e ; '.'
0000000000009e95         db  0x20 ; ' '
0000000000009e96         db  0x42 ; 'B'
0000000000009e97         db  0x0e ; '.'
0000000000009e98         db  0x18 ; '.'
0000000000009e99         db  0x42 ; 'B'
0000000000009e9a         db  0x0e ; '.'
0000000000009e9b         db  0x10 ; '.'
0000000000009e9c         db  0x42 ; 'B'
0000000000009e9d         db  0x0e ; '.'
0000000000009e9e         db  0x08 ; '.'
0000000000009e9f         db  0x00 ; '.'
0000000000009ea0         dd         0x00000014                                  ; Length of the record
0000000000009ea4         dd         0x00000d44                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009ea8         db         0xc8, 0xda, 2 dup (0xff)                    ; begin 0x7970
0000000000009eac         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x7972)
0000000000009eb0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009eb1         align      8
0000000000009eb8         dd         0x00000010                                  ; Length of the record
0000000000009ebc         dd         0x00000d5c                                  ; FDE: parent CIE at 0x9160 (FDE encoding = 0x1B)
0000000000009ec0         db         0xc0, 0xda, 2 dup (0xff)                    ; begin 0x7980
0000000000009ec4         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x798e)
0000000000009ec8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009ec9         align      16


        ; Segment Segment 3
        ; Range: [0x20aad0; 0x20b298[ (1992 bytes)
        ; File offset : [43728; 45184[ (1456 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x20aad0; 0x20aad8[ (8 bytes)
        ; File offset : [43728; 43736[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
000000000020aad0         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x20aad8; 0x20aae0[ (8 bytes)
        ; File offset : [43736; 43744[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
000000000020aad8         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x20aae0; 0x20ac20[ (320 bytes)
        ; File offset : [43744; 44064[ (320 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
000000000020aae0         db  0x7f ; '.'                                         ; DATA XREF=main+143
000000000020aae1         db  0x7b ; '{'
000000000020aae2         db  0x00 ; '.'
000000000020aae3         db  0x00 ; '.'
000000000020aae4         db  0x00 ; '.'
000000000020aae5         db  0x00 ; '.'
000000000020aae6         db  0x00 ; '.'
000000000020aae7         db  0x00 ; '.'
000000000020aae8         db  0x01 ; '.'
000000000020aae9         db  0x00 ; '.'
000000000020aaea         db  0x00 ; '.'
000000000020aaeb         db  0x00 ; '.'
000000000020aaec         db  0x00 ; '.'
000000000020aaed         db  0x00 ; '.'
000000000020aaee         db  0x00 ; '.'
000000000020aaef         db  0x00 ; '.'
000000000020aaf0         db  0x00 ; '.'
000000000020aaf1         db  0x00 ; '.'
000000000020aaf2         db  0x00 ; '.'
000000000020aaf3         db  0x00 ; '.'
000000000020aaf4         db  0x00 ; '.'
000000000020aaf5         db  0x00 ; '.'
000000000020aaf6         db  0x00 ; '.'
000000000020aaf7         db  0x00 ; '.'
000000000020aaf8         db  0x69 ; 'i'
000000000020aaf9         db  0x00 ; '.'
000000000020aafa         db  0x00 ; '.'
000000000020aafb         db  0x00 ; '.'
000000000020aafc         db  0x00 ; '.'
000000000020aafd         db  0x00 ; '.'
000000000020aafe         db  0x00 ; '.'
000000000020aaff         db  0x00 ; '.'
000000000020ab00         db  0x85 ; '.'
000000000020ab01         db  0x7b ; '{'
000000000020ab02         db  0x00 ; '.'
000000000020ab03         db  0x00 ; '.'
000000000020ab04         db  0x00 ; '.'
000000000020ab05         db  0x00 ; '.'
000000000020ab06         db  0x00 ; '.'
000000000020ab07         db  0x00 ; '.'
000000000020ab08         db  0x01 ; '.'
000000000020ab09         db  0x00 ; '.'
000000000020ab0a         db  0x00 ; '.'
000000000020ab0b         db  0x00 ; '.'
000000000020ab0c         db  0x00 ; '.'
000000000020ab0d         db  0x00 ; '.'
000000000020ab0e         db  0x00 ; '.'
000000000020ab0f         db  0x00 ; '.'
000000000020ab10         db  0x00 ; '.'
000000000020ab11         db  0x00 ; '.'
000000000020ab12         db  0x00 ; '.'
000000000020ab13         db  0x00 ; '.'
000000000020ab14         db  0x00 ; '.'
000000000020ab15         db  0x00 ; '.'
000000000020ab16         db  0x00 ; '.'
000000000020ab17         db  0x00 ; '.'
000000000020ab18         db  0x6f ; 'o'
000000000020ab19         db  0x00 ; '.'
000000000020ab1a         db  0x00 ; '.'
000000000020ab1b         db  0x00 ; '.'
000000000020ab1c         db  0x00 ; '.'
000000000020ab1d         db  0x00 ; '.'
000000000020ab1e         db  0x00 ; '.'
000000000020ab1f         db  0x00 ; '.'
000000000020ab20         db  0x5c ; '\'
000000000020ab21         db  0x82 ; '.'
000000000020ab22         db  0x00 ; '.'
000000000020ab23         db  0x00 ; '.'
000000000020ab24         db  0x00 ; '.'
000000000020ab25         db  0x00 ; '.'
000000000020ab26         db  0x00 ; '.'
000000000020ab27         db  0x00 ; '.'
000000000020ab28         db  0x01 ; '.'
000000000020ab29         db  0x00 ; '.'
000000000020ab2a         db  0x00 ; '.'
000000000020ab2b         db  0x00 ; '.'
000000000020ab2c         db  0x00 ; '.'
000000000020ab2d         db  0x00 ; '.'
000000000020ab2e         db  0x00 ; '.'
000000000020ab2f         db  0x00 ; '.'
000000000020ab30         db  0x00 ; '.'
000000000020ab31         db  0x00 ; '.'
000000000020ab32         db  0x00 ; '.'
000000000020ab33         db  0x00 ; '.'
000000000020ab34         db  0x00 ; '.'
000000000020ab35         db  0x00 ; '.'
000000000020ab36         db  0x00 ; '.'
000000000020ab37         db  0x00 ; '.'
000000000020ab38         db  0x65 ; 'e'
000000000020ab39         db  0x00 ; '.'
000000000020ab3a         db  0x00 ; '.'
000000000020ab3b         db  0x00 ; '.'
000000000020ab3c         db  0x00 ; '.'
000000000020ab3d         db  0x00 ; '.'
000000000020ab3e         db  0x00 ; '.'
000000000020ab3f         db  0x00 ; '.'
000000000020ab40         db  0x8c ; '.'
000000000020ab41         db  0x7b ; '{'
000000000020ab42         db  0x00 ; '.'
000000000020ab43         db  0x00 ; '.'
000000000020ab44         db  0x00 ; '.'
000000000020ab45         db  0x00 ; '.'
000000000020ab46         db  0x00 ; '.'
000000000020ab47         db  0x00 ; '.'
000000000020ab48         db  0x00 ; '.'
000000000020ab49         db  0x00 ; '.'
000000000020ab4a         db  0x00 ; '.'
000000000020ab4b         db  0x00 ; '.'
000000000020ab4c         db  0x00 ; '.'
000000000020ab4d         db  0x00 ; '.'
000000000020ab4e         db  0x00 ; '.'
000000000020ab4f         db  0x00 ; '.'
000000000020ab50         db  0x00 ; '.'
000000000020ab51         db  0x00 ; '.'
000000000020ab52         db  0x00 ; '.'
000000000020ab53         db  0x00 ; '.'
000000000020ab54         db  0x00 ; '.'
000000000020ab55         db  0x00 ; '.'
000000000020ab56         db  0x00 ; '.'
000000000020ab57         db  0x00 ; '.'
000000000020ab58         db  0x7e ; '~'
000000000020ab59         db  0xff ; '.'
000000000020ab5a         db  0xff ; '.'
000000000020ab5b         db  0xff ; '.'
000000000020ab5c         db  0x00 ; '.'
000000000020ab5d         db  0x00 ; '.'
000000000020ab5e         db  0x00 ; '.'
000000000020ab5f         db  0x00 ; '.'
000000000020ab60         db  0x91 ; '.'
000000000020ab61         db  0x7b ; '{'
000000000020ab62         db  0x00 ; '.'
000000000020ab63         db  0x00 ; '.'
000000000020ab64         db  0x00 ; '.'
000000000020ab65         db  0x00 ; '.'
000000000020ab66         db  0x00 ; '.'
000000000020ab67         db  0x00 ; '.'
000000000020ab68         db  0x00 ; '.'
000000000020ab69         db  0x00 ; '.'
000000000020ab6a         db  0x00 ; '.'
000000000020ab6b         db  0x00 ; '.'
000000000020ab6c         db  0x00 ; '.'
000000000020ab6d         db  0x00 ; '.'
000000000020ab6e         db  0x00 ; '.'
000000000020ab6f         db  0x00 ; '.'
000000000020ab70         db  0x00 ; '.'
000000000020ab71         db  0x00 ; '.'
000000000020ab72         db  0x00 ; '.'
000000000020ab73         db  0x00 ; '.'
000000000020ab74         db  0x00 ; '.'
000000000020ab75         db  0x00 ; '.'
000000000020ab76         db  0x00 ; '.'
000000000020ab77         db  0x00 ; '.'
000000000020ab78         db  0x7d ; '}'
000000000020ab79         db  0xff ; '.'
000000000020ab7a         db  0xff ; '.'
000000000020ab7b         db  0xff ; '.'
000000000020ab7c         db  0x00 ; '.'
000000000020ab7d         db  0x00 ; '.'
000000000020ab7e         db  0x00 ; '.'
000000000020ab7f         db  0x00 ; '.'
000000000020ab80         db  0x00 ; '.'
000000000020ab81         db  0x00 ; '.'
000000000020ab82         db  0x00 ; '.'
000000000020ab83         db  0x00 ; '.'
000000000020ab84         db  0x00 ; '.'
000000000020ab85         db  0x00 ; '.'
000000000020ab86         db  0x00 ; '.'
000000000020ab87         db  0x00 ; '.'
000000000020ab88         db  0x00 ; '.'
000000000020ab89         db  0x00 ; '.'
000000000020ab8a         db  0x00 ; '.'
000000000020ab8b         db  0x00 ; '.'
000000000020ab8c         db  0x00 ; '.'
000000000020ab8d         db  0x00 ; '.'
000000000020ab8e         db  0x00 ; '.'
000000000020ab8f         db  0x00 ; '.'
000000000020ab90         db  0x00 ; '.'
000000000020ab91         db  0x00 ; '.'
000000000020ab92         db  0x00 ; '.'
000000000020ab93         db  0x00 ; '.'
000000000020ab94         db  0x00 ; '.'
000000000020ab95         db  0x00 ; '.'
000000000020ab96         db  0x00 ; '.'
000000000020ab97         db  0x00 ; '.'
000000000020ab98         db  0x00 ; '.'
000000000020ab99         db  0x00 ; '.'
000000000020ab9a         db  0x00 ; '.'
000000000020ab9b         db  0x00 ; '.'
000000000020ab9c         db  0x00 ; '.'
000000000020ab9d         db  0x00 ; '.'
000000000020ab9e         db  0x00 ; '.'
000000000020ab9f         db  0x00 ; '.'
                     quoting_style_args:
000000000020aba0         db  0xc9 ; '.'
000000000020aba1         db  0x82 ; '.'
000000000020aba2         db  0x00 ; '.'
000000000020aba3         db  0x00 ; '.'
000000000020aba4         db  0x00 ; '.'
000000000020aba5         db  0x00 ; '.'
000000000020aba6         db  0x00 ; '.'
000000000020aba7         db  0x00 ; '.'
000000000020aba8         db  0xd1 ; '.'
000000000020aba9         db  0x82 ; '.'
000000000020abaa         db  0x00 ; '.'
000000000020abab         db  0x00 ; '.'
000000000020abac         db  0x00 ; '.'
000000000020abad         db  0x00 ; '.'
000000000020abae         db  0x00 ; '.'
000000000020abaf         db  0x00 ; '.'
000000000020abb0         db  0xd7 ; '.'
000000000020abb1         db  0x82 ; '.'
000000000020abb2         db  0x00 ; '.'
000000000020abb3         db  0x00 ; '.'
000000000020abb4         db  0x00 ; '.'
000000000020abb5         db  0x00 ; '.'
000000000020abb6         db  0x00 ; '.'
000000000020abb7         db  0x00 ; '.'
000000000020abb8         db  0xe4 ; '.'
000000000020abb9         db  0x82 ; '.'
000000000020abba         db  0x00 ; '.'
000000000020abbb         db  0x00 ; '.'
000000000020abbc         db  0x00 ; '.'
000000000020abbd         db  0x00 ; '.'
000000000020abbe         db  0x00 ; '.'
000000000020abbf         db  0x00 ; '.'
000000000020abc0         db  0xf1 ; '.'
000000000020abc1         db  0x82 ; '.'
000000000020abc2         db  0x00 ; '.'
000000000020abc3         db  0x00 ; '.'
000000000020abc4         db  0x00 ; '.'
000000000020abc5         db  0x00 ; '.'
000000000020abc6         db  0x00 ; '.'
000000000020abc7         db  0x00 ; '.'
000000000020abc8         db  0x05 ; '.'
000000000020abc9         db  0x83 ; '.'
000000000020abca         db  0x00 ; '.'
000000000020abcb         db  0x00 ; '.'
000000000020abcc         db  0x00 ; '.'
000000000020abcd         db  0x00 ; '.'
000000000020abce         db  0x00 ; '.'
000000000020abcf         db  0x00 ; '.'
000000000020abd0         db  0x07 ; '.'
000000000020abd1         db  0x83 ; '.'
000000000020abd2         db  0x00 ; '.'
000000000020abd3         db  0x00 ; '.'
000000000020abd4         db  0x00 ; '.'
000000000020abd5         db  0x00 ; '.'
000000000020abd6         db  0x00 ; '.'
000000000020abd7         db  0x00 ; '.'
000000000020abd8         db  0xea ; '.'
000000000020abd9         db  0x82 ; '.'
000000000020abda         db  0x00 ; '.'
000000000020abdb         db  0x00 ; '.'
000000000020abdc         db  0x00 ; '.'
000000000020abdd         db  0x00 ; '.'
000000000020abde         db  0x00 ; '.'
000000000020abdf         db  0x00 ; '.'
000000000020abe0         db  0x7c ; '|'
000000000020abe1         db  0x7a ; 'z'
000000000020abe2         db  0x00 ; '.'
000000000020abe3         db  0x00 ; '.'
000000000020abe4         db  0x00 ; '.'
000000000020abe5         db  0x00 ; '.'
000000000020abe6         db  0x00 ; '.'
000000000020abe7         db  0x00 ; '.'
000000000020abe8         db  0x0f ; '.'
000000000020abe9         db  0x83 ; '.'
000000000020abea         db  0x00 ; '.'
000000000020abeb         db  0x00 ; '.'
000000000020abec         db  0x00 ; '.'
000000000020abed         db  0x00 ; '.'
000000000020abee         db  0x00 ; '.'
000000000020abef         db  0x00 ; '.'
000000000020abf0         db  0x00 ; '.'
000000000020abf1         db  0x00 ; '.'
000000000020abf2         db  0x00 ; '.'
000000000020abf3         db  0x00 ; '.'
000000000020abf4         db  0x00 ; '.'
000000000020abf5         db  0x00 ; '.'
000000000020abf6         db  0x00 ; '.'
000000000020abf7         db  0x00 ; '.'
000000000020abf8         db  0x00 ; '.'
000000000020abf9         db  0x00 ; '.'
000000000020abfa         db  0x00 ; '.'
000000000020abfb         db  0x00 ; '.'
000000000020abfc         db  0x00 ; '.'
000000000020abfd         db  0x00 ; '.'
000000000020abfe         db  0x00 ; '.'
000000000020abff         db  0x00 ; '.'
                     stdlib_allocator:
000000000020ac00         db  0x00 ; '.'                                         ; DATA XREF=careadlinkat+45
000000000020ac01         db  0x00 ; '.'
000000000020ac02         db  0x00 ; '.'
000000000020ac03         db  0x00 ; '.'
000000000020ac04         db  0x00 ; '.'
000000000020ac05         db  0x00 ; '.'
000000000020ac06         db  0x00 ; '.'
000000000020ac07         db  0x00 ; '.'
000000000020ac08         db  0x00 ; '.'
000000000020ac09         db  0x00 ; '.'
000000000020ac0a         db  0x00 ; '.'
000000000020ac0b         db  0x00 ; '.'
000000000020ac0c         db  0x00 ; '.'
000000000020ac0d         db  0x00 ; '.'
000000000020ac0e         db  0x00 ; '.'
000000000020ac0f         db  0x00 ; '.'
000000000020ac10         db  0x00 ; '.'
000000000020ac11         db  0x00 ; '.'
000000000020ac12         db  0x00 ; '.'
000000000020ac13         db  0x00 ; '.'
000000000020ac14         db  0x00 ; '.'
000000000020ac15         db  0x00 ; '.'
000000000020ac16         db  0x00 ; '.'
000000000020ac17         db  0x00 ; '.'
000000000020ac18         db  0x00 ; '.'
000000000020ac19         db  0x00 ; '.'
000000000020ac1a         db  0x00 ; '.'
000000000020ac1b         db  0x00 ; '.'
000000000020ac1c         db  0x00 ; '.'
000000000020ac1d         db  0x00 ; '.'
000000000020ac1e         db  0x00 ; '.'
000000000020ac1f         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x20ac20; 0x20ae10[ (496 bytes)
        ; File offset : [44064; 44560[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
000000000020ac20         db  0x01 ; '.'
000000000020ac21         db  0x00 ; '.'
000000000020ac22         db  0x00 ; '.'
000000000020ac23         db  0x00 ; '.'
000000000020ac24         db  0x00 ; '.'
000000000020ac25         db  0x00 ; '.'
000000000020ac26         db  0x00 ; '.'
000000000020ac27         db  0x00 ; '.'
000000000020ac28         db  0x01 ; '.'
000000000020ac29         db  0x00 ; '.'
000000000020ac2a         db  0x00 ; '.'
000000000020ac2b         db  0x00 ; '.'
000000000020ac2c         db  0x00 ; '.'
000000000020ac2d         db  0x00 ; '.'
000000000020ac2e         db  0x00 ; '.'
000000000020ac2f         db  0x00 ; '.'
000000000020ac30         db  0x0c ; '.'
000000000020ac31         db  0x00 ; '.'
000000000020ac32         db  0x00 ; '.'
000000000020ac33         db  0x00 ; '.'
000000000020ac34         db  0x00 ; '.'
000000000020ac35         db  0x00 ; '.'
000000000020ac36         db  0x00 ; '.'
000000000020ac37         db  0x00 ; '.'
000000000020ac38         db  0x28 ; '('
000000000020ac39         db  0x15 ; '.'
000000000020ac3a         db  0x00 ; '.'
000000000020ac3b         db  0x00 ; '.'
000000000020ac3c         db  0x00 ; '.'
000000000020ac3d         db  0x00 ; '.'
000000000020ac3e         db  0x00 ; '.'
000000000020ac3f         db  0x00 ; '.'
000000000020ac40         db  0x0d ; '.'
000000000020ac41         db  0x00 ; '.'
000000000020ac42         db  0x00 ; '.'
000000000020ac43         db  0x00 ; '.'
000000000020ac44         db  0x00 ; '.'
000000000020ac45         db  0x00 ; '.'
000000000020ac46         db  0x00 ; '.'
000000000020ac47         db  0x00 ; '.'
000000000020ac48         db  0x90 ; '.'
000000000020ac49         db  0x79 ; 'y'
000000000020ac4a         db  0x00 ; '.'
000000000020ac4b         db  0x00 ; '.'
000000000020ac4c         db  0x00 ; '.'
000000000020ac4d         db  0x00 ; '.'
000000000020ac4e         db  0x00 ; '.'
000000000020ac4f         db  0x00 ; '.'
000000000020ac50         db  0x19 ; '.'
000000000020ac51         db  0x00 ; '.'
000000000020ac52         db  0x00 ; '.'
000000000020ac53         db  0x00 ; '.'
000000000020ac54         db  0x00 ; '.'
000000000020ac55         db  0x00 ; '.'
000000000020ac56         db  0x00 ; '.'
000000000020ac57         db  0x00 ; '.'
000000000020ac58         db  0xd0 ; '.'
000000000020ac59         db  0xaa ; '.'
000000000020ac5a         db  0x20 ; ' '
000000000020ac5b         db  0x00 ; '.'
000000000020ac5c         db  0x00 ; '.'
000000000020ac5d         db  0x00 ; '.'
000000000020ac5e         db  0x00 ; '.'
000000000020ac5f         db  0x00 ; '.'
000000000020ac60         db  0x1b ; '.'
000000000020ac61         db  0x00 ; '.'
000000000020ac62         db  0x00 ; '.'
000000000020ac63         db  0x00 ; '.'
000000000020ac64         db  0x00 ; '.'
000000000020ac65         db  0x00 ; '.'
000000000020ac66         db  0x00 ; '.'
000000000020ac67         db  0x00 ; '.'
000000000020ac68         db  0x08 ; '.'
000000000020ac69         db  0x00 ; '.'
000000000020ac6a         db  0x00 ; '.'
000000000020ac6b         db  0x00 ; '.'
000000000020ac6c         db  0x00 ; '.'
000000000020ac6d         db  0x00 ; '.'
000000000020ac6e         db  0x00 ; '.'
000000000020ac6f         db  0x00 ; '.'
000000000020ac70         db  0x1a ; '.'
000000000020ac71         db  0x00 ; '.'
000000000020ac72         db  0x00 ; '.'
000000000020ac73         db  0x00 ; '.'
000000000020ac74         db  0x00 ; '.'
000000000020ac75         db  0x00 ; '.'
000000000020ac76         db  0x00 ; '.'
000000000020ac77         db  0x00 ; '.'
000000000020ac78         db  0xd8 ; '.'
000000000020ac79         db  0xaa ; '.'
000000000020ac7a         db  0x20 ; ' '
000000000020ac7b         db  0x00 ; '.'
000000000020ac7c         db  0x00 ; '.'
000000000020ac7d         db  0x00 ; '.'
000000000020ac7e         db  0x00 ; '.'
000000000020ac7f         db  0x00 ; '.'
000000000020ac80         db  0x1c ; '.'
000000000020ac81         db  0x00 ; '.'
000000000020ac82         db  0x00 ; '.'
000000000020ac83         db  0x00 ; '.'
000000000020ac84         db  0x00 ; '.'
000000000020ac85         db  0x00 ; '.'
000000000020ac86         db  0x00 ; '.'
000000000020ac87         db  0x00 ; '.'
000000000020ac88         db  0x08 ; '.'
000000000020ac89         db  0x00 ; '.'
000000000020ac8a         db  0x00 ; '.'
000000000020ac8b         db  0x00 ; '.'
000000000020ac8c         db  0x00 ; '.'
000000000020ac8d         db  0x00 ; '.'
000000000020ac8e         db  0x00 ; '.'
000000000020ac8f         db  0x00 ; '.'
000000000020ac90         db  0xf5 ; '.'
000000000020ac91         db  0xfe ; '.'
000000000020ac92         db  0xff ; '.'
000000000020ac93         db  0x6f ; 'o'
000000000020ac94         db  0x00 ; '.'
000000000020ac95         db  0x00 ; '.'
000000000020ac96         db  0x00 ; '.'
000000000020ac97         db  0x00 ; '.'
000000000020ac98         db  0x98 ; '.'
000000000020ac99         db  0x02 ; '.'
000000000020ac9a         db  0x00 ; '.'
000000000020ac9b         db  0x00 ; '.'
000000000020ac9c         db  0x00 ; '.'
000000000020ac9d         db  0x00 ; '.'
000000000020ac9e         db  0x00 ; '.'
000000000020ac9f         db  0x00 ; '.'
000000000020aca0         db  0x05 ; '.'
000000000020aca1         db  0x00 ; '.'
000000000020aca2         db  0x00 ; '.'
000000000020aca3         db  0x00 ; '.'
000000000020aca4         db  0x00 ; '.'
000000000020aca5         db  0x00 ; '.'
000000000020aca6         db  0x00 ; '.'
000000000020aca7         db  0x00 ; '.'
000000000020aca8         db  0x10 ; '.'
000000000020aca9         db  0x09 ; '.'
000000000020acaa         db  0x00 ; '.'
000000000020acab         db  0x00 ; '.'
000000000020acac         db  0x00 ; '.'
000000000020acad         db  0x00 ; '.'
000000000020acae         db  0x00 ; '.'
000000000020acaf         db  0x00 ; '.'
000000000020acb0         db  0x06 ; '.'
000000000020acb1         db  0x00 ; '.'
000000000020acb2         db  0x00 ; '.'
000000000020acb3         db  0x00 ; '.'
000000000020acb4         db  0x00 ; '.'
000000000020acb5         db  0x00 ; '.'
000000000020acb6         db  0x00 ; '.'
000000000020acb7         db  0x00 ; '.'
000000000020acb8         db  0xe0 ; '.'
000000000020acb9         db  0x02 ; '.'
000000000020acba         db  0x00 ; '.'
000000000020acbb         db  0x00 ; '.'
000000000020acbc         db  0x00 ; '.'
000000000020acbd         db  0x00 ; '.'
000000000020acbe         db  0x00 ; '.'
000000000020acbf         db  0x00 ; '.'
000000000020acc0         db  0x0a ; '.'
000000000020acc1         db  0x00 ; '.'
000000000020acc2         db  0x00 ; '.'
000000000020acc3         db  0x00 ; '.'
000000000020acc4         db  0x00 ; '.'
000000000020acc5         db  0x00 ; '.'
000000000020acc6         db  0x00 ; '.'
000000000020acc7         db  0x00 ; '.'
000000000020acc8         db  0x06 ; '.'
000000000020acc9         db  0x03 ; '.'
000000000020acca         db  0x00 ; '.'
000000000020accb         db  0x00 ; '.'
000000000020accc         db  0x00 ; '.'
000000000020accd         db  0x00 ; '.'
000000000020acce         db  0x00 ; '.'
000000000020accf         db  0x00 ; '.'
000000000020acd0         db  0x0b ; '.'
000000000020acd1         db  0x00 ; '.'
000000000020acd2         db  0x00 ; '.'
000000000020acd3         db  0x00 ; '.'
000000000020acd4         db  0x00 ; '.'
000000000020acd5         db  0x00 ; '.'
000000000020acd6         db  0x00 ; '.'
000000000020acd7         db  0x00 ; '.'
000000000020acd8         db  0x18 ; '.'
000000000020acd9         db  0x00 ; '.'
000000000020acda         db  0x00 ; '.'
000000000020acdb         db  0x00 ; '.'
000000000020acdc         db  0x00 ; '.'
000000000020acdd         db  0x00 ; '.'
000000000020acde         db  0x00 ; '.'
000000000020acdf         db  0x00 ; '.'
000000000020ace0         db  0x15 ; '.'
000000000020ace1         db  0x00 ; '.'
000000000020ace2         db  0x00 ; '.'
000000000020ace3         db  0x00 ; '.'
000000000020ace4         db  0x00 ; '.'
000000000020ace5         db  0x00 ; '.'
000000000020ace6         db  0x00 ; '.'
000000000020ace7         db  0x00 ; '.'
000000000020ace8         db  0x00 ; '.'
000000000020ace9         db  0x00 ; '.'
000000000020acea         db  0x00 ; '.'
000000000020aceb         db  0x00 ; '.'
000000000020acec         db  0x00 ; '.'
000000000020aced         db  0x00 ; '.'
000000000020acee         db  0x00 ; '.'
000000000020acef         db  0x00 ; '.'
000000000020acf0         db  0x03 ; '.'
000000000020acf1         db  0x00 ; '.'
000000000020acf2         db  0x00 ; '.'
000000000020acf3         db  0x00 ; '.'
000000000020acf4         db  0x00 ; '.'
000000000020acf5         db  0x00 ; '.'
000000000020acf6         db  0x00 ; '.'
000000000020acf7         db  0x00 ; '.'
000000000020acf8         db  0x10 ; '.'
000000000020acf9         db  0xae ; '.'
000000000020acfa         db  0x20 ; ' '
000000000020acfb         db  0x00 ; '.'
000000000020acfc         db  0x00 ; '.'
000000000020acfd         db  0x00 ; '.'
000000000020acfe         db  0x00 ; '.'
000000000020acff         db  0x00 ; '.'
000000000020ad00         db  0x02 ; '.'
000000000020ad01         db  0x00 ; '.'
000000000020ad02         db  0x00 ; '.'
000000000020ad03         db  0x00 ; '.'
000000000020ad04         db  0x00 ; '.'
000000000020ad05         db  0x00 ; '.'
000000000020ad06         db  0x00 ; '.'
000000000020ad07         db  0x00 ; '.'
000000000020ad08         db  0xe0 ; '.'
000000000020ad09         db  0x04 ; '.'
000000000020ad0a         db  0x00 ; '.'
000000000020ad0b         db  0x00 ; '.'
000000000020ad0c         db  0x00 ; '.'
000000000020ad0d         db  0x00 ; '.'
000000000020ad0e         db  0x00 ; '.'
000000000020ad0f         db  0x00 ; '.'
000000000020ad10         db  0x14 ; '.'
000000000020ad11         db  0x00 ; '.'
000000000020ad12         db  0x00 ; '.'
000000000020ad13         db  0x00 ; '.'
000000000020ad14         db  0x00 ; '.'
000000000020ad15         db  0x00 ; '.'
000000000020ad16         db  0x00 ; '.'
000000000020ad17         db  0x00 ; '.'
000000000020ad18         db  0x07 ; '.'
000000000020ad19         db  0x00 ; '.'
000000000020ad1a         db  0x00 ; '.'
000000000020ad1b         db  0x00 ; '.'
000000000020ad1c         db  0x00 ; '.'
000000000020ad1d         db  0x00 ; '.'
000000000020ad1e         db  0x00 ; '.'
000000000020ad1f         db  0x00 ; '.'
000000000020ad20         db  0x17 ; '.'
000000000020ad21         db  0x00 ; '.'
000000000020ad22         db  0x00 ; '.'
000000000020ad23         db  0x00 ; '.'
000000000020ad24         db  0x00 ; '.'
000000000020ad25         db  0x00 ; '.'
000000000020ad26         db  0x00 ; '.'
000000000020ad27         db  0x00 ; '.'
000000000020ad28         db  0x48 ; 'H'
000000000020ad29         db  0x10 ; '.'
000000000020ad2a         db  0x00 ; '.'
000000000020ad2b         db  0x00 ; '.'
000000000020ad2c         db  0x00 ; '.'
000000000020ad2d         db  0x00 ; '.'
000000000020ad2e         db  0x00 ; '.'
000000000020ad2f         db  0x00 ; '.'
000000000020ad30         db  0x07 ; '.'
000000000020ad31         db  0x00 ; '.'
000000000020ad32         db  0x00 ; '.'
000000000020ad33         db  0x00 ; '.'
000000000020ad34         db  0x00 ; '.'
000000000020ad35         db  0x00 ; '.'
000000000020ad36         db  0x00 ; '.'
000000000020ad37         db  0x00 ; '.'
000000000020ad38         db  0x00 ; '.'
000000000020ad39         db  0x0d ; '.'
000000000020ad3a         db  0x00 ; '.'
000000000020ad3b         db  0x00 ; '.'
000000000020ad3c         db  0x00 ; '.'
000000000020ad3d         db  0x00 ; '.'
000000000020ad3e         db  0x00 ; '.'
000000000020ad3f         db  0x00 ; '.'
000000000020ad40         db  0x08 ; '.'
000000000020ad41         db  0x00 ; '.'
000000000020ad42         db  0x00 ; '.'
000000000020ad43         db  0x00 ; '.'
000000000020ad44         db  0x00 ; '.'
000000000020ad45         db  0x00 ; '.'
000000000020ad46         db  0x00 ; '.'
000000000020ad47         db  0x00 ; '.'
000000000020ad48         db  0x48 ; 'H'
000000000020ad49         db  0x03 ; '.'
000000000020ad4a         db  0x00 ; '.'
000000000020ad4b         db  0x00 ; '.'
000000000020ad4c         db  0x00 ; '.'
000000000020ad4d         db  0x00 ; '.'
000000000020ad4e         db  0x00 ; '.'
000000000020ad4f         db  0x00 ; '.'
000000000020ad50         db  0x09 ; '.'
000000000020ad51         db  0x00 ; '.'
000000000020ad52         db  0x00 ; '.'
000000000020ad53         db  0x00 ; '.'
000000000020ad54         db  0x00 ; '.'
000000000020ad55         db  0x00 ; '.'
000000000020ad56         db  0x00 ; '.'
000000000020ad57         db  0x00 ; '.'
000000000020ad58         db  0x18 ; '.'
000000000020ad59         db  0x00 ; '.'
000000000020ad5a         db  0x00 ; '.'
000000000020ad5b         db  0x00 ; '.'
000000000020ad5c         db  0x00 ; '.'
000000000020ad5d         db  0x00 ; '.'
000000000020ad5e         db  0x00 ; '.'
000000000020ad5f         db  0x00 ; '.'
000000000020ad60         db  0x1e ; '.'
000000000020ad61         db  0x00 ; '.'
000000000020ad62         db  0x00 ; '.'
000000000020ad63         db  0x00 ; '.'
000000000020ad64         db  0x00 ; '.'
000000000020ad65         db  0x00 ; '.'
000000000020ad66         db  0x00 ; '.'
000000000020ad67         db  0x00 ; '.'
000000000020ad68         db  0x08 ; '.'
000000000020ad69         db  0x00 ; '.'
000000000020ad6a         db  0x00 ; '.'
000000000020ad6b         db  0x00 ; '.'
000000000020ad6c         db  0x00 ; '.'
000000000020ad6d         db  0x00 ; '.'
000000000020ad6e         db  0x00 ; '.'
000000000020ad6f         db  0x00 ; '.'
000000000020ad70         db  0xfb ; '.'
000000000020ad71         db  0xff ; '.'
000000000020ad72         db  0xff ; '.'
000000000020ad73         db  0x6f ; 'o'
000000000020ad74         db  0x00 ; '.'
000000000020ad75         db  0x00 ; '.'
000000000020ad76         db  0x00 ; '.'
000000000020ad77         db  0x00 ; '.'
000000000020ad78         db  0x01 ; '.'
000000000020ad79         db  0x00 ; '.'
000000000020ad7a         db  0x00 ; '.'
000000000020ad7b         db  0x08 ; '.'
000000000020ad7c         db  0x00 ; '.'
000000000020ad7d         db  0x00 ; '.'
000000000020ad7e         db  0x00 ; '.'
000000000020ad7f         db  0x00 ; '.'
000000000020ad80         db  0xfe ; '.'
000000000020ad81         db  0xff ; '.'
000000000020ad82         db  0xff ; '.'
000000000020ad83         db  0x6f ; 'o'
000000000020ad84         db  0x00 ; '.'
000000000020ad85         db  0x00 ; '.'
000000000020ad86         db  0x00 ; '.'
000000000020ad87         db  0x00 ; '.'
000000000020ad88         db  0xa0 ; '.'
000000000020ad89         db  0x0c ; '.'
000000000020ad8a         db  0x00 ; '.'
000000000020ad8b         db  0x00 ; '.'
000000000020ad8c         db  0x00 ; '.'
000000000020ad8d         db  0x00 ; '.'
000000000020ad8e         db  0x00 ; '.'
000000000020ad8f         db  0x00 ; '.'
000000000020ad90         db  0xff ; '.'
000000000020ad91         db  0xff ; '.'
000000000020ad92         db  0xff ; '.'
000000000020ad93         db  0x6f ; 'o'
000000000020ad94         db  0x00 ; '.'
000000000020ad95         db  0x00 ; '.'
000000000020ad96         db  0x00 ; '.'
000000000020ad97         db  0x00 ; '.'
000000000020ad98         db  0x01 ; '.'
000000000020ad99         db  0x00 ; '.'
000000000020ad9a         db  0x00 ; '.'
000000000020ad9b         db  0x00 ; '.'
000000000020ad9c         db  0x00 ; '.'
000000000020ad9d         db  0x00 ; '.'
000000000020ad9e         db  0x00 ; '.'
000000000020ad9f         db  0x00 ; '.'
000000000020ada0         db  0xf0 ; '.'
000000000020ada1         db  0xff ; '.'
000000000020ada2         db  0xff ; '.'
000000000020ada3         db  0x6f ; 'o'
000000000020ada4         db  0x00 ; '.'
000000000020ada5         db  0x00 ; '.'
000000000020ada6         db  0x00 ; '.'
000000000020ada7         db  0x00 ; '.'
000000000020ada8         db  0x16 ; '.'
000000000020ada9         db  0x0c ; '.'
000000000020adaa         db  0x00 ; '.'
000000000020adab         db  0x00 ; '.'
000000000020adac         db  0x00 ; '.'
000000000020adad         db  0x00 ; '.'
000000000020adae         db  0x00 ; '.'
000000000020adaf         db  0x00 ; '.'
000000000020adb0         db  0xf9 ; '.'
000000000020adb1         db  0xff ; '.'
000000000020adb2         db  0xff ; '.'
000000000020adb3         db  0x6f ; 'o'
000000000020adb4         db  0x00 ; '.'
000000000020adb5         db  0x00 ; '.'
000000000020adb6         db  0x00 ; '.'
000000000020adb7         db  0x00 ; '.'
000000000020adb8         db  0x15 ; '.'
000000000020adb9         db  0x00 ; '.'
000000000020adba         db  0x00 ; '.'
000000000020adbb         db  0x00 ; '.'
000000000020adbc         db  0x00 ; '.'
000000000020adbd         db  0x00 ; '.'
000000000020adbe         db  0x00 ; '.'
000000000020adbf         db  0x00 ; '.'
000000000020adc0         db  0x00 ; '.'
000000000020adc1         db  0x00 ; '.'
000000000020adc2         db  0x00 ; '.'
000000000020adc3         db  0x00 ; '.'
000000000020adc4         db  0x00 ; '.'
000000000020adc5         db  0x00 ; '.'
000000000020adc6         db  0x00 ; '.'
000000000020adc7         db  0x00 ; '.'
000000000020adc8         db  0x00 ; '.'
000000000020adc9         db  0x00 ; '.'
000000000020adca         db  0x00 ; '.'
000000000020adcb         db  0x00 ; '.'
000000000020adcc         db  0x00 ; '.'
000000000020adcd         db  0x00 ; '.'
000000000020adce         db  0x00 ; '.'
000000000020adcf         db  0x00 ; '.'
000000000020add0         db  0x00 ; '.'
000000000020add1         db  0x00 ; '.'
000000000020add2         db  0x00 ; '.'
000000000020add3         db  0x00 ; '.'
000000000020add4         db  0x00 ; '.'
000000000020add5         db  0x00 ; '.'
000000000020add6         db  0x00 ; '.'
000000000020add7         db  0x00 ; '.'
000000000020add8         db  0x00 ; '.'
000000000020add9         db  0x00 ; '.'
000000000020adda         db  0x00 ; '.'
000000000020addb         db  0x00 ; '.'
000000000020addc         db  0x00 ; '.'
000000000020addd         db  0x00 ; '.'
000000000020adde         db  0x00 ; '.'
000000000020addf         db  0x00 ; '.'
000000000020ade0         db  0x00 ; '.'
000000000020ade1         db  0x00 ; '.'
000000000020ade2         db  0x00 ; '.'
000000000020ade3         db  0x00 ; '.'
000000000020ade4         db  0x00 ; '.'
000000000020ade5         db  0x00 ; '.'
000000000020ade6         db  0x00 ; '.'
000000000020ade7         db  0x00 ; '.'
000000000020ade8         db  0x00 ; '.'
000000000020ade9         db  0x00 ; '.'
000000000020adea         db  0x00 ; '.'
000000000020adeb         db  0x00 ; '.'
000000000020adec         db  0x00 ; '.'
000000000020aded         db  0x00 ; '.'
000000000020adee         db  0x00 ; '.'
000000000020adef         db  0x00 ; '.'
000000000020adf0         db  0x00 ; '.'
000000000020adf1         db  0x00 ; '.'
000000000020adf2         db  0x00 ; '.'
000000000020adf3         db  0x00 ; '.'
000000000020adf4         db  0x00 ; '.'
000000000020adf5         db  0x00 ; '.'
000000000020adf6         db  0x00 ; '.'
000000000020adf7         db  0x00 ; '.'
000000000020adf8         db  0x00 ; '.'
000000000020adf9         db  0x00 ; '.'
000000000020adfa         db  0x00 ; '.'
000000000020adfb         db  0x00 ; '.'
000000000020adfc         db  0x00 ; '.'
000000000020adfd         db  0x00 ; '.'
000000000020adfe         db  0x00 ; '.'
000000000020adff         db  0x00 ; '.'
000000000020ae00         db  0x00 ; '.'
000000000020ae01         db  0x00 ; '.'
000000000020ae02         db  0x00 ; '.'
000000000020ae03         db  0x00 ; '.'
000000000020ae04         db  0x00 ; '.'
000000000020ae05         db  0x00 ; '.'
000000000020ae06         db  0x00 ; '.'
000000000020ae07         db  0x00 ; '.'
000000000020ae08         db  0x00 ; '.'
000000000020ae09         db  0x00 ; '.'
000000000020ae0a         db  0x00 ; '.'
000000000020ae0b         db  0x00 ; '.'
000000000020ae0c         db  0x00 ; '.'
000000000020ae0d         db  0x00 ; '.'
000000000020ae0e         db  0x00 ; '.'
000000000020ae0f         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x20ae10; 0x20aff0[ (480 bytes)
        ; File offset : [44560; 45040[ (480 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
000000000020ae10         db  0x20 ; ' '
000000000020ae11         db  0xac ; '.'
000000000020ae12         db  0x20 ; ' '
000000000020ae13         db  0x00 ; '.'
000000000020ae14         db  0x00 ; '.'
000000000020ae15         db  0x00 ; '.'
000000000020ae16         db  0x00 ; '.'
000000000020ae17         db  0x00 ; '.'
                     qword_20ae18:
000000000020ae18         dq         0x0000000000000000                          ; DATA XREF=0x1540
000000000020ae20         db  0x00 ; '.'                                         ; DATA XREF=0x1546
000000000020ae21         db  0x00 ; '.'
000000000020ae22         db  0x00 ; '.'
000000000020ae23         db  0x00 ; '.'
000000000020ae24         db  0x00 ; '.'
000000000020ae25         db  0x00 ; '.'
000000000020ae26         db  0x00 ; '.'
000000000020ae27         db  0x00 ; '.'
                     __ctype_toupper_loc@GOT:        // __ctype_toupper_loc
000000000020ae28         dq         0x000000000020b2a0                          ; DATA XREF=j___ctype_toupper_loc
                     getenv@GOT:        // getenv
000000000020ae30         dq         0x000000000020b2a8                          ; DATA XREF=j_getenv
                     __snprintf_chk@GOT:        // __snprintf_chk
000000000020ae38         dq         0x000000000020b2b0                          ; DATA XREF=j___snprintf_chk
                     free@GOT:        // free
000000000020ae40         dq         0x000000000020b2b8                          ; DATA XREF=j_free
                     abort@GOT:        // abort
000000000020ae48         dq         0x000000000020b2c0                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
000000000020ae50         dq         0x000000000020b2c8                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
000000000020ae58         dq         0x000000000020b2d0                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
000000000020ae60         dq         0x000000000020b2e0                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
000000000020ae68         dq         0x000000000020b2e8                          ; DATA XREF=j___fpending
                     readlink@GOT:        // readlink
000000000020ae70         dq         0x000000000020b2f0                          ; DATA XREF=j_readlink
                     textdomain@GOT:        // textdomain
000000000020ae78         dq         0x000000000020b2f8                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
000000000020ae80         dq         0x000000000020b300                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
000000000020ae88         dq         0x000000000020b308                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
000000000020ae90         dq         0x000000000020b310                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
000000000020ae98         dq         0x000000000020b318                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
000000000020aea0         dq         0x000000000020b320                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
000000000020aea8         dq         0x000000000020b328                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
000000000020aeb0         dq         0x000000000020b330                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
000000000020aeb8         dq         0x000000000020b338                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
000000000020aec0         dq         0x000000000020b340                          ; DATA XREF=j_strchr
                     strrchr@GOT:        // strrchr
000000000020aec8         dq         0x000000000020b348                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
000000000020aed0         dq         0x000000000020b350                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
000000000020aed8         dq         0x000000000020b358                          ; DATA XREF=j___assert_fail
                     __strtoul_internal@GOT:        // __strtoul_internal
000000000020aee0         dq         0x000000000020b360                          ; DATA XREF=j___strtoul_internal
                     memset@GOT:        // memset
000000000020aee8         dq         0x000000000020b368                          ; DATA XREF=j_memset
                     memcmp@GOT:        // memcmp
000000000020aef0         dq         0x000000000020b378                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
000000000020aef8         dq         0x000000000020b380                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
000000000020af00         dq         0x000000000020b388                          ; DATA XREF=j_calloc
                     putenv@GOT:        // putenv
000000000020af08         dq         0x000000000020b390                          ; DATA XREF=j_putenv
                     memcpy@GOT:        // memcpy
000000000020af10         dq         0x000000000020b3a0                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
000000000020af18         dq         0x000000000020b3a8                          ; DATA XREF=j_fileno
                     __xstat@GOT:        // __xstat
000000000020af20         dq         0x000000000020b3b0                          ; DATA XREF=j___xstat
                     malloc@GOT:        // malloc
000000000020af28         dq         0x000000000020b3b8                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
000000000020af30         dq         0x000000000020b3c0                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
000000000020af38         dq         0x000000000020b3c8                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
000000000020af40         dq         0x000000000020b3d0                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
000000000020af48         dq         0x000000000020b3d8                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
000000000020af50         dq         0x000000000020b3e0                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
000000000020af58         dq         0x000000000020b3e8                          ; DATA XREF=j___printf_chk
                     mempcpy@GOT:        // mempcpy
000000000020af60         dq         0x000000000020b3f0                          ; DATA XREF=j_mempcpy
                     error@GOT:        // error
000000000020af68         dq         0x000000000020b3f8                          ; DATA XREF=j_error
                     access@GOT:        // access
000000000020af70         dq         0x000000000020b400                          ; DATA XREF=j_access
                     fseeko@GOT:        // fseeko
000000000020af78         dq         0x000000000020b408                          ; DATA XREF=j_fseeko
                     strtok@GOT:        // strtok
000000000020af80         dq         0x000000000020b410                          ; DATA XREF=j_strtok
                     execvp@GOT:        // execvp
000000000020af88         dq         0x000000000020b418                          ; DATA XREF=j_execvp
                     __cxa_atexit@GOT:        // __cxa_atexit
000000000020af90         dq         0x000000000020b420                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
000000000020af98         dq         0x000000000020b428                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
000000000020afa0         dq         0x000000000020b430                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
000000000020afa8         dq         0x000000000020b438                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
000000000020afb0         dq         0x000000000020b448                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
000000000020afb8         dq         0x000000000020b450                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
000000000020afc0         dq         0x000000000020b460                          ; DATA XREF=j___ctype_b_loc
                     qword_20afc8:
000000000020afc8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
000000000020afd0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
000000000020afd1         db  0x00 ; '.'
000000000020afd2         db  0x00 ; '.'
000000000020afd3         db  0x00 ; '.'
000000000020afd4         db  0x00 ; '.'
000000000020afd5         db  0x00 ; '.'
000000000020afd6         db  0x00 ; '.'
000000000020afd7         db  0x00 ; '.'
                     qword_20afd8:
000000000020afd8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_20afe0:
000000000020afe0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_20afe8:
000000000020afe8         dq         0x0000000000000000                          ; DATA XREF=j_qword_20afe8, __do_global_dtors_aux+9
000000000020aff0         db  0x00 ; '.'
000000000020aff1         db  0x00 ; '.'
000000000020aff2         db  0x00 ; '.'
000000000020aff3         db  0x00 ; '.'
000000000020aff4         db  0x00 ; '.'
000000000020aff5         db  0x00 ; '.'
000000000020aff6         db  0x00 ; '.'
000000000020aff7         db  0x00 ; '.'
000000000020aff8         db  0x00 ; '.'
000000000020aff9         db  0x00 ; '.'
000000000020affa         db  0x00 ; '.'
000000000020affb         db  0x00 ; '.'
000000000020affc         db  0x00 ; '.'
000000000020affd         db  0x00 ; '.'
000000000020affe         db  0x00 ; '.'
000000000020afff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x20b000; 0x20b080[ (128 bytes)
        ; File offset : [45056; 45184[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020b000         db  0x00 ; '.'
000000000020b001         db  0x00 ; '.'
000000000020b002         db  0x00 ; '.'
000000000020b003         db  0x00 ; '.'
000000000020b004         db  0x00 ; '.'
000000000020b005         db  0x00 ; '.'
000000000020b006         db  0x00 ; '.'
000000000020b007         db  0x00 ; '.'
                     __dso_handle:
000000000020b008         dq         0x000000000020b008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
000000000020b010         dq         0x0000000000008251                          ; "8.31", DATA XREF=main+204
                     exit_failure:
000000000020b018         dd         0x00000001                                  ; DATA XREF=main+121, close_stdout+130, xalloc_die+23
000000000020b01c         db  0x00 ; '.'
000000000020b01d         db  0x00 ; '.'
000000000020b01e         db  0x00 ; '.'
000000000020b01f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020b020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020b021         db  0x00 ; '.'
000000000020b022         db  0x00 ; '.'
000000000020b023         db  0x00 ; '.'
000000000020b024         db  0x00 ; '.'
000000000020b025         db  0x00 ; '.'
000000000020b026         db  0x00 ; '.'
000000000020b027         db  0x00 ; '.'
000000000020b028         db  0x00 ; '.'
000000000020b029         db  0x00 ; '.'
000000000020b02a         db  0x00 ; '.'
000000000020b02b         db  0x00 ; '.'
000000000020b02c         db  0x00 ; '.'
000000000020b02d         db  0x00 ; '.'
000000000020b02e         db  0x00 ; '.'
000000000020b02f         db  0x00 ; '.'
000000000020b030         db  0x00 ; '.'
000000000020b031         db  0x00 ; '.'
000000000020b032         db  0x00 ; '.'
000000000020b033         db  0x00 ; '.'
000000000020b034         db  0x00 ; '.'
000000000020b035         db  0x00 ; '.'
000000000020b036         db  0x00 ; '.'
000000000020b037         db  0x00 ; '.'
000000000020b038         db  0x00 ; '.'
000000000020b039         db  0x00 ; '.'
000000000020b03a         db  0x00 ; '.'
000000000020b03b         db  0x00 ; '.'
000000000020b03c         db  0x00 ; '.'
000000000020b03d         db  0x00 ; '.'
000000000020b03e         db  0x00 ; '.'
000000000020b03f         db  0x00 ; '.'
000000000020b040         db  0x00 ; '.'
000000000020b041         db  0x00 ; '.'
000000000020b042         db  0x00 ; '.'
000000000020b043         db  0x00 ; '.'
000000000020b044         db  0x00 ; '.'
000000000020b045         db  0x00 ; '.'
000000000020b046         db  0x00 ; '.'
000000000020b047         db  0x00 ; '.'
000000000020b048         db  0x00 ; '.'
000000000020b049         db  0x00 ; '.'
000000000020b04a         db  0x00 ; '.'
000000000020b04b         db  0x00 ; '.'
000000000020b04c         db  0x00 ; '.'
000000000020b04d         db  0x00 ; '.'
000000000020b04e         db  0x00 ; '.'
000000000020b04f         db  0x00 ; '.'
000000000020b050         db  0x00 ; '.'
000000000020b051         db  0x00 ; '.'
000000000020b052         db  0x00 ; '.'
000000000020b053         db  0x00 ; '.'
000000000020b054         db  0x00 ; '.'
000000000020b055         db  0x00 ; '.'
000000000020b056         db  0x00 ; '.'
000000000020b057         db  0x00 ; '.'
                     nslots:
000000000020b058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020b05c         align      32
                     slotvec:
000000000020b060         dq         0x000000000020b070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020b068         db  0x00 ; '.'
000000000020b069         db  0x00 ; '.'
000000000020b06a         db  0x00 ; '.'
000000000020b06b         db  0x00 ; '.'
000000000020b06c         db  0x00 ; '.'
000000000020b06d         db  0x00 ; '.'
000000000020b06e         db  0x00 ; '.'
000000000020b06f         db  0x00 ; '.'
                     slotvec0:
000000000020b070         dq         1.26481e-321, 1.05857e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20b080; 0x20b298[ (536 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020b080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020b081         db  0x00 ; '.'
000000000020b082         db  0x00 ; '.'
000000000020b083         db  0x00 ; '.'
000000000020b084         db  0x00 ; '.'
000000000020b085         db  0x00 ; '.'
000000000020b086         db  0x00 ; '.'
000000000020b087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020b088         db  0x00 ; '.'                                         ; DATA XREF=main+197, usage+125, usage+162, usage+199, usage+236, usage+273, usage+310, usage+347, usage+384, usage+421, usage+1008
000000000020b089         db  0x00 ; '.'
000000000020b08a         db  0x00 ; '.'
000000000020b08b         db  0x00 ; '.'
000000000020b08c         db  0x00 ; '.'
000000000020b08d         db  0x00 ; '.'
000000000020b08e         db  0x00 ; '.'
000000000020b08f         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020b090         db  0x00 ; '.'                                         ; DATA XREF=main+527
000000000020b091         db  0x00 ; '.'
000000000020b092         db  0x00 ; '.'
000000000020b093         db  0x00 ; '.'
000000000020b094         db  0x00 ; '.'
000000000020b095         db  0x00 ; '.'
000000000020b096         db  0x00 ; '.'
000000000020b097         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000020b098         db  0x00 ; '.'                                         ; DATA XREF=main+281, main+343, main+1514
000000000020b099         db  0x00 ; '.'
000000000020b09a         db  0x00 ; '.'
000000000020b09b         db  0x00 ; '.'
000000000020b09c         db  0x00 ; '.'
000000000020b09d         db  0x00 ; '.'
000000000020b09e         db  0x00 ; '.'
000000000020b09f         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020b0a0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020b0a1         db  0x00 ; '.'
000000000020b0a2         db  0x00 ; '.'
000000000020b0a3         db  0x00 ; '.'
000000000020b0a4         db  0x00 ; '.'
000000000020b0a5         db  0x00 ; '.'
000000000020b0a6         db  0x00 ; '.'
000000000020b0a7         db  0x00 ; '.'
000000000020b0a8         db  0x00 ; '.'
000000000020b0a9         db  0x00 ; '.'
000000000020b0aa         db  0x00 ; '.'
000000000020b0ab         db  0x00 ; '.'
000000000020b0ac         db  0x00 ; '.'
000000000020b0ad         db  0x00 ; '.'
000000000020b0ae         db  0x00 ; '.'
000000000020b0af         db  0x00 ; '.'
000000000020b0b0         db  0x00 ; '.'
000000000020b0b1         db  0x00 ; '.'
000000000020b0b2         db  0x00 ; '.'
000000000020b0b3         db  0x00 ; '.'
000000000020b0b4         db  0x00 ; '.'
000000000020b0b5         db  0x00 ; '.'
000000000020b0b6         db  0x00 ; '.'
000000000020b0b7         db  0x00 ; '.'
000000000020b0b8         db  0x00 ; '.'
000000000020b0b9         db  0x00 ; '.'
000000000020b0ba         db  0x00 ; '.'
000000000020b0bb         db  0x00 ; '.'
000000000020b0bc         db  0x00 ; '.'
000000000020b0bd         db  0x00 ; '.'
000000000020b0be         db  0x00 ; '.'
000000000020b0bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020b0c0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
000000000020b0c1         db  0x00 ; '.'
000000000020b0c2         db  0x00 ; '.'
000000000020b0c3         db  0x00 ; '.'
000000000020b0c4         db  0x00 ; '.'
000000000020b0c5         db  0x00 ; '.'
000000000020b0c6         db  0x00 ; '.'
000000000020b0c7         db  0x00 ; '.'
                     completed.7697:
000000000020b0c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020b0c9         db  0x00 ; '.'
000000000020b0ca         db  0x00 ; '.'
000000000020b0cb         db  0x00 ; '.'
000000000020b0cc         db  0x00 ; '.'
000000000020b0cd         db  0x00 ; '.'
000000000020b0ce         db  0x00 ; '.'
000000000020b0cf         db  0x00 ; '.'
000000000020b0d0         db  0x00 ; '.'
000000000020b0d1         db  0x00 ; '.'
000000000020b0d2         db  0x00 ; '.'
000000000020b0d3         db  0x00 ; '.'
000000000020b0d4         db  0x00 ; '.'
000000000020b0d5         db  0x00 ; '.'
000000000020b0d6         db  0x00 ; '.'
000000000020b0d7         db  0x00 ; '.'
000000000020b0d8         db  0x00 ; '.'
000000000020b0d9         db  0x00 ; '.'
000000000020b0da         db  0x00 ; '.'
000000000020b0db         db  0x00 ; '.'
000000000020b0dc         db  0x00 ; '.'
000000000020b0dd         db  0x00 ; '.'
000000000020b0de         db  0x00 ; '.'
000000000020b0df         db  0x00 ; '.'
                     stdbuf:
000000000020b0e0         db  0x00 ; '.'                                         ; DATA XREF=main+136, main+548
000000000020b0e1         db  0x00 ; '.'
000000000020b0e2         db  0x00 ; '.'
000000000020b0e3         db  0x00 ; '.'
000000000020b0e4         db  0x00 ; '.'
000000000020b0e5         db  0x00 ; '.'
000000000020b0e6         db  0x00 ; '.'
000000000020b0e7         db  0x00 ; '.'
000000000020b0e8         db  0x00 ; '.'
000000000020b0e9         db  0x00 ; '.'
000000000020b0ea         db  0x00 ; '.'
000000000020b0eb         db  0x00 ; '.'
000000000020b0ec         db  0x00 ; '.'
000000000020b0ed         db  0x00 ; '.'
000000000020b0ee         db  0x00 ; '.'
000000000020b0ef         db  0x00 ; '.'
000000000020b0f0         db  0x00 ; '.'
000000000020b0f1         db  0x00 ; '.'
000000000020b0f2         db  0x00 ; '.'
000000000020b0f3         db  0x00 ; '.'
000000000020b0f4         db  0x00 ; '.'
000000000020b0f5         db  0x00 ; '.'
000000000020b0f6         db  0x00 ; '.'
000000000020b0f7         db  0x00 ; '.'
000000000020b0f8         db  0x00 ; '.'
000000000020b0f9         db  0x00 ; '.'
000000000020b0fa         db  0x00 ; '.'
000000000020b0fb         db  0x00 ; '.'
000000000020b0fc         db  0x00 ; '.'
000000000020b0fd         db  0x00 ; '.'
000000000020b0fe         db  0x00 ; '.'
000000000020b0ff         db  0x00 ; '.'
000000000020b100         db  0x00 ; '.'
000000000020b101         db  0x00 ; '.'
000000000020b102         db  0x00 ; '.'
000000000020b103         db  0x00 ; '.'
000000000020b104         db  0x00 ; '.'
000000000020b105         db  0x00 ; '.'
000000000020b106         db  0x00 ; '.'
000000000020b107         db  0x00 ; '.'
000000000020b108         db  0x00 ; '.'
000000000020b109         db  0x00 ; '.'
000000000020b10a         db  0x00 ; '.'
000000000020b10b         db  0x00 ; '.'
000000000020b10c         db  0x00 ; '.'
000000000020b10d         db  0x00 ; '.'
000000000020b10e         db  0x00 ; '.'
000000000020b10f         db  0x00 ; '.'
000000000020b110         db  0x00 ; '.'
000000000020b111         db  0x00 ; '.'
000000000020b112         db  0x00 ; '.'
000000000020b113         db  0x00 ; '.'
000000000020b114         db  0x00 ; '.'
000000000020b115         db  0x00 ; '.'
000000000020b116         db  0x00 ; '.'
000000000020b117         db  0x00 ; '.'
000000000020b118         db  0x00 ; '.'
000000000020b119         db  0x00 ; '.'
000000000020b11a         db  0x00 ; '.'
000000000020b11b         db  0x00 ; '.'
000000000020b11c         db  0x00 ; '.'
000000000020b11d         db  0x00 ; '.'
000000000020b11e         db  0x00 ; '.'
000000000020b11f         db  0x00 ; '.'
000000000020b120         db  0x00 ; '.'
000000000020b121         db  0x00 ; '.'
000000000020b122         db  0x00 ; '.'
000000000020b123         db  0x00 ; '.'
000000000020b124         db  0x00 ; '.'
000000000020b125         db  0x00 ; '.'
000000000020b126         db  0x00 ; '.'
000000000020b127         db  0x00 ; '.'
                     program_path:
000000000020b128         db  0x00 ; '.'                                         ; DATA XREF=main+745, main+752, main+811, main+1031, main+1240, main+1301, main+1436
000000000020b129         db  0x00 ; '.'
000000000020b12a         db  0x00 ; '.'
000000000020b12b         db  0x00 ; '.'
000000000020b12c         db  0x00 ; '.'
000000000020b12d         db  0x00 ; '.'
000000000020b12e         db  0x00 ; '.'
000000000020b12f         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020b130         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020b131         db  0x00 ; '.'
000000000020b132         db  0x00 ; '.'
000000000020b133         db  0x00 ; '.'
000000000020b134         db  0x00 ; '.'
000000000020b135         db  0x00 ; '.'
000000000020b136         db  0x00 ; '.'
000000000020b137         db  0x00 ; '.'
                     file_name:
000000000020b138         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020b139         db  0x00 ; '.'
000000000020b13a         db  0x00 ; '.'
000000000020b13b         db  0x00 ; '.'
000000000020b13c         db  0x00 ; '.'
000000000020b13d         db  0x00 ; '.'
000000000020b13e         db  0x00 ; '.'
000000000020b13f         db  0x00 ; '.'
                     program_name:
000000000020b140         db  0x00 ; '.'                                         ; DATA XREF=main+708, usage+20, set_program_name+109
000000000020b141         db  0x00 ; '.'
000000000020b142         db  0x00 ; '.'
000000000020b143         db  0x00 ; '.'
000000000020b144         db  0x00 ; '.'
000000000020b145         db  0x00 ; '.'
000000000020b146         db  0x00 ; '.'
000000000020b147         db  0x00 ; '.'
000000000020b148         db  0x00 ; '.'
000000000020b149         db  0x00 ; '.'
000000000020b14a         db  0x00 ; '.'
000000000020b14b         db  0x00 ; '.'
000000000020b14c         db  0x00 ; '.'
000000000020b14d         db  0x00 ; '.'
000000000020b14e         db  0x00 ; '.'
000000000020b14f         db  0x00 ; '.'
000000000020b150         db  0x00 ; '.'
000000000020b151         db  0x00 ; '.'
000000000020b152         db  0x00 ; '.'
000000000020b153         db  0x00 ; '.'
000000000020b154         db  0x00 ; '.'
000000000020b155         db  0x00 ; '.'
000000000020b156         db  0x00 ; '.'
000000000020b157         db  0x00 ; '.'
000000000020b158         db  0x00 ; '.'
000000000020b159         db  0x00 ; '.'
000000000020b15a         db  0x00 ; '.'
000000000020b15b         db  0x00 ; '.'
000000000020b15c         db  0x00 ; '.'
000000000020b15d         db  0x00 ; '.'
000000000020b15e         db  0x00 ; '.'
000000000020b15f         db  0x00 ; '.'
                     slot0:
000000000020b160         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020b161         db  0x00 ; '.'
000000000020b162         db  0x00 ; '.'
000000000020b163         db  0x00 ; '.'
000000000020b164         db  0x00 ; '.'
000000000020b165         db  0x00 ; '.'
000000000020b166         db  0x00 ; '.'
000000000020b167         db  0x00 ; '.'
000000000020b168         db  0x00 ; '.'
000000000020b169         db  0x00 ; '.'
000000000020b16a         db  0x00 ; '.'
000000000020b16b         db  0x00 ; '.'
000000000020b16c         db  0x00 ; '.'
000000000020b16d         db  0x00 ; '.'
000000000020b16e         db  0x00 ; '.'
000000000020b16f         db  0x00 ; '.'
000000000020b170         db  0x00 ; '.'
000000000020b171         db  0x00 ; '.'
000000000020b172         db  0x00 ; '.'
000000000020b173         db  0x00 ; '.'
000000000020b174         db  0x00 ; '.'
000000000020b175         db  0x00 ; '.'
000000000020b176         db  0x00 ; '.'
000000000020b177         db  0x00 ; '.'
000000000020b178         db  0x00 ; '.'
000000000020b179         db  0x00 ; '.'
000000000020b17a         db  0x00 ; '.'
000000000020b17b         db  0x00 ; '.'
000000000020b17c         db  0x00 ; '.'
000000000020b17d         db  0x00 ; '.'
000000000020b17e         db  0x00 ; '.'
000000000020b17f         db  0x00 ; '.'
000000000020b180         db  0x00 ; '.'
000000000020b181         db  0x00 ; '.'
000000000020b182         db  0x00 ; '.'
000000000020b183         db  0x00 ; '.'
000000000020b184         db  0x00 ; '.'
000000000020b185         db  0x00 ; '.'
000000000020b186         db  0x00 ; '.'
000000000020b187         db  0x00 ; '.'
000000000020b188         db  0x00 ; '.'
000000000020b189         db  0x00 ; '.'
000000000020b18a         db  0x00 ; '.'
000000000020b18b         db  0x00 ; '.'
000000000020b18c         db  0x00 ; '.'
000000000020b18d         db  0x00 ; '.'
000000000020b18e         db  0x00 ; '.'
000000000020b18f         db  0x00 ; '.'
000000000020b190         db  0x00 ; '.'
000000000020b191         db  0x00 ; '.'
000000000020b192         db  0x00 ; '.'
000000000020b193         db  0x00 ; '.'
000000000020b194         db  0x00 ; '.'
000000000020b195         db  0x00 ; '.'
000000000020b196         db  0x00 ; '.'
000000000020b197         db  0x00 ; '.'
000000000020b198         db  0x00 ; '.'
000000000020b199         db  0x00 ; '.'
000000000020b19a         db  0x00 ; '.'
000000000020b19b         db  0x00 ; '.'
000000000020b19c         db  0x00 ; '.'
000000000020b19d         db  0x00 ; '.'
000000000020b19e         db  0x00 ; '.'
000000000020b19f         db  0x00 ; '.'
000000000020b1a0         db  0x00 ; '.'
000000000020b1a1         db  0x00 ; '.'
000000000020b1a2         db  0x00 ; '.'
000000000020b1a3         db  0x00 ; '.'
000000000020b1a4         db  0x00 ; '.'
000000000020b1a5         db  0x00 ; '.'
000000000020b1a6         db  0x00 ; '.'
000000000020b1a7         db  0x00 ; '.'
000000000020b1a8         db  0x00 ; '.'
000000000020b1a9         db  0x00 ; '.'
000000000020b1aa         db  0x00 ; '.'
000000000020b1ab         db  0x00 ; '.'
000000000020b1ac         db  0x00 ; '.'
000000000020b1ad         db  0x00 ; '.'
000000000020b1ae         db  0x00 ; '.'
000000000020b1af         db  0x00 ; '.'
000000000020b1b0         db  0x00 ; '.'
000000000020b1b1         db  0x00 ; '.'
000000000020b1b2         db  0x00 ; '.'
000000000020b1b3         db  0x00 ; '.'
000000000020b1b4         db  0x00 ; '.'
000000000020b1b5         db  0x00 ; '.'
000000000020b1b6         db  0x00 ; '.'
000000000020b1b7         db  0x00 ; '.'
000000000020b1b8         db  0x00 ; '.'
000000000020b1b9         db  0x00 ; '.'
000000000020b1ba         db  0x00 ; '.'
000000000020b1bb         db  0x00 ; '.'
000000000020b1bc         db  0x00 ; '.'
000000000020b1bd         db  0x00 ; '.'
000000000020b1be         db  0x00 ; '.'
000000000020b1bf         db  0x00 ; '.'
000000000020b1c0         db  0x00 ; '.'
000000000020b1c1         db  0x00 ; '.'
000000000020b1c2         db  0x00 ; '.'
000000000020b1c3         db  0x00 ; '.'
000000000020b1c4         db  0x00 ; '.'
000000000020b1c5         db  0x00 ; '.'
000000000020b1c6         db  0x00 ; '.'
000000000020b1c7         db  0x00 ; '.'
000000000020b1c8         db  0x00 ; '.'
000000000020b1c9         db  0x00 ; '.'
000000000020b1ca         db  0x00 ; '.'
000000000020b1cb         db  0x00 ; '.'
000000000020b1cc         db  0x00 ; '.'
000000000020b1cd         db  0x00 ; '.'
000000000020b1ce         db  0x00 ; '.'
000000000020b1cf         db  0x00 ; '.'
000000000020b1d0         db  0x00 ; '.'
000000000020b1d1         db  0x00 ; '.'
000000000020b1d2         db  0x00 ; '.'
000000000020b1d3         db  0x00 ; '.'
000000000020b1d4         db  0x00 ; '.'
000000000020b1d5         db  0x00 ; '.'
000000000020b1d6         db  0x00 ; '.'
000000000020b1d7         db  0x00 ; '.'
000000000020b1d8         db  0x00 ; '.'
000000000020b1d9         db  0x00 ; '.'
000000000020b1da         db  0x00 ; '.'
000000000020b1db         db  0x00 ; '.'
000000000020b1dc         db  0x00 ; '.'
000000000020b1dd         db  0x00 ; '.'
000000000020b1de         db  0x00 ; '.'
000000000020b1df         db  0x00 ; '.'
000000000020b1e0         db  0x00 ; '.'
000000000020b1e1         db  0x00 ; '.'
000000000020b1e2         db  0x00 ; '.'
000000000020b1e3         db  0x00 ; '.'
000000000020b1e4         db  0x00 ; '.'
000000000020b1e5         db  0x00 ; '.'
000000000020b1e6         db  0x00 ; '.'
000000000020b1e7         db  0x00 ; '.'
000000000020b1e8         db  0x00 ; '.'
000000000020b1e9         db  0x00 ; '.'
000000000020b1ea         db  0x00 ; '.'
000000000020b1eb         db  0x00 ; '.'
000000000020b1ec         db  0x00 ; '.'
000000000020b1ed         db  0x00 ; '.'
000000000020b1ee         db  0x00 ; '.'
000000000020b1ef         db  0x00 ; '.'
000000000020b1f0         db  0x00 ; '.'
000000000020b1f1         db  0x00 ; '.'
000000000020b1f2         db  0x00 ; '.'
000000000020b1f3         db  0x00 ; '.'
000000000020b1f4         db  0x00 ; '.'
000000000020b1f5         db  0x00 ; '.'
000000000020b1f6         db  0x00 ; '.'
000000000020b1f7         db  0x00 ; '.'
000000000020b1f8         db  0x00 ; '.'
000000000020b1f9         db  0x00 ; '.'
000000000020b1fa         db  0x00 ; '.'
000000000020b1fb         db  0x00 ; '.'
000000000020b1fc         db  0x00 ; '.'
000000000020b1fd         db  0x00 ; '.'
000000000020b1fe         db  0x00 ; '.'
000000000020b1ff         db  0x00 ; '.'
000000000020b200         db  0x00 ; '.'
000000000020b201         db  0x00 ; '.'
000000000020b202         db  0x00 ; '.'
000000000020b203         db  0x00 ; '.'
000000000020b204         db  0x00 ; '.'
000000000020b205         db  0x00 ; '.'
000000000020b206         db  0x00 ; '.'
000000000020b207         db  0x00 ; '.'
000000000020b208         db  0x00 ; '.'
000000000020b209         db  0x00 ; '.'
000000000020b20a         db  0x00 ; '.'
000000000020b20b         db  0x00 ; '.'
000000000020b20c         db  0x00 ; '.'
000000000020b20d         db  0x00 ; '.'
000000000020b20e         db  0x00 ; '.'
000000000020b20f         db  0x00 ; '.'
000000000020b210         db  0x00 ; '.'
000000000020b211         db  0x00 ; '.'
000000000020b212         db  0x00 ; '.'
000000000020b213         db  0x00 ; '.'
000000000020b214         db  0x00 ; '.'
000000000020b215         db  0x00 ; '.'
000000000020b216         db  0x00 ; '.'
000000000020b217         db  0x00 ; '.'
000000000020b218         db  0x00 ; '.'
000000000020b219         db  0x00 ; '.'
000000000020b21a         db  0x00 ; '.'
000000000020b21b         db  0x00 ; '.'
000000000020b21c         db  0x00 ; '.'
000000000020b21d         db  0x00 ; '.'
000000000020b21e         db  0x00 ; '.'
000000000020b21f         db  0x00 ; '.'
000000000020b220         db  0x00 ; '.'
000000000020b221         db  0x00 ; '.'
000000000020b222         db  0x00 ; '.'
000000000020b223         db  0x00 ; '.'
000000000020b224         db  0x00 ; '.'
000000000020b225         db  0x00 ; '.'
000000000020b226         db  0x00 ; '.'
000000000020b227         db  0x00 ; '.'
000000000020b228         db  0x00 ; '.'
000000000020b229         db  0x00 ; '.'
000000000020b22a         db  0x00 ; '.'
000000000020b22b         db  0x00 ; '.'
000000000020b22c         db  0x00 ; '.'
000000000020b22d         db  0x00 ; '.'
000000000020b22e         db  0x00 ; '.'
000000000020b22f         db  0x00 ; '.'
000000000020b230         db  0x00 ; '.'
000000000020b231         db  0x00 ; '.'
000000000020b232         db  0x00 ; '.'
000000000020b233         db  0x00 ; '.'
000000000020b234         db  0x00 ; '.'
000000000020b235         db  0x00 ; '.'
000000000020b236         db  0x00 ; '.'
000000000020b237         db  0x00 ; '.'
000000000020b238         db  0x00 ; '.'
000000000020b239         db  0x00 ; '.'
000000000020b23a         db  0x00 ; '.'
000000000020b23b         db  0x00 ; '.'
000000000020b23c         db  0x00 ; '.'
000000000020b23d         db  0x00 ; '.'
000000000020b23e         db  0x00 ; '.'
000000000020b23f         db  0x00 ; '.'
000000000020b240         db  0x00 ; '.'
000000000020b241         db  0x00 ; '.'
000000000020b242         db  0x00 ; '.'
000000000020b243         db  0x00 ; '.'
000000000020b244         db  0x00 ; '.'
000000000020b245         db  0x00 ; '.'
000000000020b246         db  0x00 ; '.'
000000000020b247         db  0x00 ; '.'
000000000020b248         db  0x00 ; '.'
000000000020b249         db  0x00 ; '.'
000000000020b24a         db  0x00 ; '.'
000000000020b24b         db  0x00 ; '.'
000000000020b24c         db  0x00 ; '.'
000000000020b24d         db  0x00 ; '.'
000000000020b24e         db  0x00 ; '.'
000000000020b24f         db  0x00 ; '.'
000000000020b250         db  0x00 ; '.'
000000000020b251         db  0x00 ; '.'
000000000020b252         db  0x00 ; '.'
000000000020b253         db  0x00 ; '.'
000000000020b254         db  0x00 ; '.'
000000000020b255         db  0x00 ; '.'
000000000020b256         db  0x00 ; '.'
000000000020b257         db  0x00 ; '.'
000000000020b258         db  0x00 ; '.'
000000000020b259         db  0x00 ; '.'
000000000020b25a         db  0x00 ; '.'
000000000020b25b         db  0x00 ; '.'
000000000020b25c         db  0x00 ; '.'
000000000020b25d         db  0x00 ; '.'
000000000020b25e         db  0x00 ; '.'
000000000020b25f         db  0x00 ; '.'
                     default_quoting_options:
000000000020b260         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020b261         db  0x00 ; '.'
000000000020b262         db  0x00 ; '.'
000000000020b263         db  0x00 ; '.'
000000000020b264         db  0x00 ; '.'
000000000020b265         db  0x00 ; '.'
000000000020b266         db  0x00 ; '.'
000000000020b267         db  0x00 ; '.'
000000000020b268         db  0x00 ; '.'
000000000020b269         db  0x00 ; '.'
000000000020b26a         db  0x00 ; '.'
000000000020b26b         db  0x00 ; '.'
000000000020b26c         db  0x00 ; '.'
000000000020b26d         db  0x00 ; '.'
000000000020b26e         db  0x00 ; '.'
000000000020b26f         db  0x00 ; '.'
000000000020b270         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020b271         db  0x00 ; '.'
000000000020b272         db  0x00 ; '.'
000000000020b273         db  0x00 ; '.'
000000000020b274         db  0x00 ; '.'
000000000020b275         db  0x00 ; '.'
000000000020b276         db  0x00 ; '.'
000000000020b277         db  0x00 ; '.'
000000000020b278         db  0x00 ; '.'
000000000020b279         db  0x00 ; '.'
000000000020b27a         db  0x00 ; '.'
000000000020b27b         db  0x00 ; '.'
000000000020b27c         db  0x00 ; '.'
000000000020b27d         db  0x00 ; '.'
000000000020b27e         db  0x00 ; '.'
000000000020b27f         db  0x00 ; '.'
000000000020b280         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020b281         db  0x00 ; '.'
000000000020b282         db  0x00 ; '.'
000000000020b283         db  0x00 ; '.'
000000000020b284         db  0x00 ; '.'
000000000020b285         db  0x00 ; '.'
000000000020b286         db  0x00 ; '.'
000000000020b287         db  0x00 ; '.'
000000000020b288         db  0x00 ; '.'
000000000020b289         db  0x00 ; '.'
000000000020b28a         db  0x00 ; '.'
000000000020b28b         db  0x00 ; '.'
000000000020b28c         db  0x00 ; '.'
000000000020b28d         db  0x00 ; '.'
000000000020b28e         db  0x00 ; '.'
000000000020b28f         db  0x00 ; '.'
                     qword_20b290:
000000000020b290         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020b291         db  0x00 ; '.'
000000000020b292         db  0x00 ; '.'
000000000020b293         db  0x00 ; '.'
000000000020b294         db  0x00 ; '.'
000000000020b295         db  0x00 ; '.'
000000000020b296         db  0x00 ; '.'
000000000020b297         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20b2a0; 0x20b630[ (912 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20b2a0; 0x4168d0[ (2143792 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __ctype_toupper_loc:
000000000020b2a0         extern function code                                   ; DATA XREF=__ctype_toupper_loc@GOT
                     getenv:
000000000020b2a8         extern function code                                   ; DATA XREF=getenv@GOT
                     __snprintf_chk:
000000000020b2b0         extern function code                                   ; DATA XREF=__snprintf_chk@GOT
                     free:
000000000020b2b8         extern function code                                   ; DATA XREF=free@GOT
                     abort:
000000000020b2c0         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020b2c8         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020b2d0         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020b2d8         extern function code
                     _exit:
000000000020b2e0         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
000000000020b2e8         extern function code                                   ; DATA XREF=__fpending@GOT
                     readlink:
000000000020b2f0         extern function code                                   ; DATA XREF=readlink@GOT
                     textdomain:
000000000020b2f8         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020b300         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020b308         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020b310         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020b318         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020b320         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
000000000020b328         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020b330         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020b338         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
000000000020b340         extern function code                                   ; DATA XREF=strchr@GOT
                     strrchr:
000000000020b348         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020b350         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
000000000020b358         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     __strtoul_internal:
000000000020b360         extern function code                                   ; DATA XREF=__strtoul_internal@GOT
                     memset:
000000000020b368         extern function code                                   ; DATA XREF=memset@GOT
                     __libc_start_main:
000000000020b370         extern function code
                     memcmp:
000000000020b378         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020b380         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020b388         extern function code                                   ; DATA XREF=calloc@GOT
                     putenv:
000000000020b390         extern function code                                   ; DATA XREF=putenv@GOT
                     __gmon_start__:
000000000020b398         extern function code
                     memcpy:
000000000020b3a0         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020b3a8         extern function code                                   ; DATA XREF=fileno@GOT
                     __xstat:
000000000020b3b0         extern function code                                   ; DATA XREF=__xstat@GOT
                     malloc:
000000000020b3b8         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020b3c0         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020b3c8         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
000000000020b3d0         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
000000000020b3d8         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
000000000020b3e0         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020b3e8         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     mempcpy:
000000000020b3f0         extern function code                                   ; DATA XREF=mempcpy@GOT
                     error:
000000000020b3f8         extern function code                                   ; DATA XREF=error@GOT
                     access:
000000000020b400         extern function code                                   ; DATA XREF=access@GOT
                     fseeko:
000000000020b408         extern function code                                   ; DATA XREF=fseeko@GOT
                     strtok:
000000000020b410         extern function code                                   ; DATA XREF=strtok@GOT
                     execvp:
000000000020b418         extern function code                                   ; DATA XREF=execvp@GOT
                     __cxa_atexit:
000000000020b420         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
000000000020b428         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020b430         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020b438         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020b440         extern function code
                     mbsinit:
000000000020b448         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020b450         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020b458         extern function code
                     __ctype_b_loc:
000000000020b460         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __ctype_toupper_loc@@GLIBC_2.3:
000000000020b468         extern function code
                     getenv@@GLIBC_2.2.5:
000000000020b470         extern function code
                     __snprintf_chk@@GLIBC_2.3.4:
000000000020b478         extern function code
                     free@@GLIBC_2.2.5:
000000000020b480         extern function code
                     abort@@GLIBC_2.2.5:
000000000020b488         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020b490         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020b498         extern function code
                     _ITM_deregisterTMCloneTable_20b4a0:        // _ITM_deregisterTMCloneTable
000000000020b4a0         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020b4a8         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020b4b0         extern function code
                     readlink@@GLIBC_2.2.5:
000000000020b4b8         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020b4c0         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020b4c8         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020b4d0         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020b4d8         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020b4e0         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020b4e8         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020b4f0         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020b4f8         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020b500         extern function code
                     strchr@@GLIBC_2.2.5:
000000000020b508         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020b510         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020b518         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000020b520         extern function code
                     __strtoul_internal@@GLIBC_2.2.5:
000000000020b528         extern function code
                     memset@@GLIBC_2.2.5:
000000000020b530         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020b538         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020b540         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020b548         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020b550         extern function code
                     putenv@@GLIBC_2.2.5:
000000000020b558         extern function code
                     __gmon_start___20b560:        // __gmon_start__
000000000020b560         extern function code
                     memcpy@@GLIBC_2.14:
000000000020b568         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020b570         extern function code
                     __xstat@@GLIBC_2.2.5:
000000000020b578         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020b580         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020b588         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020b590         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020b598         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020b5a0         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020b5a8         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020b5b0         extern function code
                     mempcpy@@GLIBC_2.2.5:
000000000020b5b8         extern function code
                     error@@GLIBC_2.2.5:
000000000020b5c0         extern function code
                     access@@GLIBC_2.2.5:
000000000020b5c8         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020b5d0         extern function code
                     strtok@@GLIBC_2.2.5:
000000000020b5d8         extern function code
                     execvp@@GLIBC_2.2.5:
000000000020b5e0         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020b5e8         extern function code
                     exit@@GLIBC_2.2.5:
000000000020b5f0         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020b5f8         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020b600         extern function code
                     _ITM_registerTMCloneTable_20b608:        // _ITM_registerTMCloneTable
000000000020b608         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020b610         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020b618         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020b620         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020b628         extern function code
