
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/shred
        UUID: B1609D52-43DC-6259-964F-3A38F3BF5E03
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0xc960[ (51552 bytes)
        ; File offset : [0; 51552[ (51552 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x40 ; '@'
0000000000000019         db  0x2a ; '*'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x00 ; '.'
0000000000000029         db  0x73 ; 's'
000000000000002a         db  0x04 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x60 ; '`'
00000000000000d1         db  0xc9 ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x60 ; '`'
00000000000000d9         db  0xc9 ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x50 ; 'P'
00000000000000f1         db  0xd9 ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x50 ; 'P'
00000000000000f9         db  0xd9 ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x50 ; 'P'                                         ; DATA XREF=human_readable+924, quotearg_free+87, renameatu+297, renameatu+376, renameatu+466, rpl_fflush+18, slotvec0
0000000000000101         db  0xd9 ; '.'                                         ; DATA XREF=main+946, main+1329
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x50 ; 'P'
0000000000000109         db  0x07 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x10 ; '.'
0000000000000111         db  0x09 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'                                         ; DATA XREF=do_wipefd+15, do_wipefd+228
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x58 ; 'X'
0000000000000129         db  0xdb ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x58 ; 'X'
0000000000000131         db  0xdb ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x58 ; 'X'
0000000000000139         db  0xdb ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'                                         ; DATA XREF=renameatu+65
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'                                         ; DATA XREF=renameatu+28, renameatu+116
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'                                         ; DATA XREF=human_options+440
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xfc ; '.'
0000000000000199         db  0xb1 ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xfc ; '.'
00000000000001a1         db  0xb1 ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xfc ; '.'
00000000000001a9         db  0xb1 ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x94 ; '.'                                         ; DATA XREF=dopass+1661
00000000000001b1         db  0x03 ; '.'
00000000000001b2         db  0x00 ; '.'                                         ; DATA XREF=dopass+1551, dopass+1917
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x94 ; '.'
00000000000001b9         db  0x03 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'                                         ; DATA XREF=dopass+956
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=dopass+564, do_wipefd+678, do_wipefd+1258, human_options+288, human_options+293, human_options+385, xstrtoumax+573
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x50 ; 'P'
0000000000000209         db  0xd9 ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x50 ; 'P'
0000000000000211         db  0xd9 ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x50 ; 'P'
0000000000000219         db  0xd9 ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xb0 ; '.'
0000000000000221         db  0x06 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xb0 ; '.'
0000000000000229         db  0x06 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xb1 ; '.'
0000000000000285         db  0x60 ; '`'
0000000000000286         db  0x9d ; '.'
0000000000000287         db  0x52 ; 'R'                                         ; DATA XREF=human_readable+189
0000000000000288         db  0x43 ; 'C'
0000000000000289         db  0xdc ; '.'
000000000000028a         db  0x62 ; 'b'
000000000000028b         db  0x59 ; 'Y'
000000000000028c         db  0x96 ; '.'                                         ; DATA XREF=dopass+1771
000000000000028d         db  0x4f ; 'O'
000000000000028e         db  0x3a ; ':'
000000000000028f         db  0x38 ; '8'
0000000000000290         db  0xf3 ; '.'
0000000000000291         db  0xbf ; '.'
0000000000000292         db  0x5e ; '^'
0000000000000293         db  0x03 ; '.'
0000000000000294         db  0x31 ; '1'
0000000000000295         db  0x23 ; '#'
0000000000000296         db  0x14 ; '.'
0000000000000297         db  0x93 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x55 ; 'U'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x55 ; 'U'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x56 ; 'V'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x5b ; '['
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x32 ; '2'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'
00000000000002d8         db  0xb3 ; '.'
00000000000002d9         db  0xa2 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0xb98[ (2232 bytes)
        ; File offset : [736; 2968[ (2232 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0xcb ; '.'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x30 ; '0'
0000000000000311         db  0x03 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0xa7 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x4e ; 'N'
0000000000000341         db  0x01 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x04 ; '.'
0000000000000359         db  0x01 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x89 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x37 ; '7'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x9f ; '.'
00000000000003a1         db  0x03 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x20 ; ' '
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xad ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x4a ; 'J'
00000000000003d1         db  0x02 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x68 ; 'h'                                         ; DATA XREF=xstrtoumax+420
00000000000003e9         db  0x00 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0xfd ; '.'                                         ; DATA XREF=human_readable+80, human_options+458, xstrtoumax+437, xstrtoumax+806, xstrtoumax+878, rpl_fcntl+288
0000000000000401         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+272
0000000000000402         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+280
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+81, rpl_fcntl+123, rpl_fcntl+264
0000000000000407         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+256
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+336
000000000000040a         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+350
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'                                         ; DATA XREF=main+2204
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x43 ; 'C'
0000000000000419         db  0x01 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xad ; '.'
0000000000000431         db  0x02 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x15 ; '.'
0000000000000449         db  0x02 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0xb3 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x2d ; '-'
0000000000000479         db  0x01 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0xcd ; '.'
0000000000000491         db  0x02 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x94 ; '.'
00000000000004a9         db  0x01 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0xc9 ; '.'
00000000000004c1         db  0x02 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x58 ; 'X'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0xe6 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x26 ; '&'
0000000000000509         db  0x01 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x78 ; 'x'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xf1 ; '.'
0000000000000539         db  0x01 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0xf8 ; '.'
0000000000000551         db  0x01 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x29 ; ')'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x55 ; 'U'
0000000000000581         db  0x02 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0xd8 ; '.'
0000000000000599         db  0x02 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x03 ; '.'
00000000000005b1         db  0x03 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x50 ; 'P'
00000000000005c9         db  0x00 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x3f ; '?'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x87 ; '.'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x1b ; '.'
0000000000000611         db  0x02 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0xd8 ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x0e ; '.'
0000000000000641         db  0x03 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x3c ; '<'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0xeb ; '.'
0000000000000671         db  0x01 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x95 ; '.'
0000000000000689         db  0x01 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0xea ; '.'
00000000000006a1         db  0x02 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x5f ; '_'
00000000000006b9         db  0x01 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x21 ; '!'
00000000000006d1         db  0x03 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x16 ; '.'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0xe3 ; '.'
0000000000000701         db  0x02 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x3d ; '='
0000000000000719         db  0x02 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x9d ; '.'
0000000000000731         db  0x02 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0xbb ; '.'
0000000000000749         db  0x03 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x20 ; ' '
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x8d ; '.'
0000000000000761         db  0x01 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x73 ; 's'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x0d ; '.'
0000000000000791         db  0x02 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0xaa ; '.'
00000000000007a9         db  0x01 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x09 ; '.'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x9b ; '.'
00000000000007d9         db  0x01 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x0b ; '.'
00000000000007f1         db  0x00 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'                                         ; DATA XREF=isaac_refill+74, isaac_refill+108, isaac_refill+141, isaac_refill+175, isaac_refill+207, isaac_refill+234, isaac_refill+275, isaac_refill+311, isaac_refill+378, isaac_refill+412, isaac_refill+445
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'                                         ; DATA XREF=randread_new+296, randread_new+495, randread_new+648, randread_new+735, randread_new+786, randread+200, randread+223
0000000000000800         db  0x00 ; '.'                                         ; DATA XREF=randread_new+250, randread_new+260, randread_new+431, randread_new+517, randread+165, randread+245, randread+258, randread+312, randread+323, randread+336
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0xb1 ; '.'
0000000000000809         db  0x01 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x04 ; '.'
0000000000000821         db  0x02 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x12 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0xd9 ; '.'
0000000000000839         db  0x01 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'                                         ; DATA XREF=dopass+19, dopass+318
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x99 ; '.'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x12 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x81 ; '.'
0000000000000869         db  0x02 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x12 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x7a ; 'z'
0000000000000881         db  0x02 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x12 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x1f ; '.'
0000000000000899         db  0x00 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x12 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x00 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x12 ; '.'
00000000000008b1         db  0x00 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x12 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x00 ; '.'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0xa5 ; '.'
00000000000008c9         db  0x02 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x12 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x00 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0xd2 ; '.'
00000000000008e1         db  0x00 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x12 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x00 ; '.'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0xc1 ; '.'
00000000000008f9         db  0x02 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x12 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0x00 ; '.'
0000000000000901         db  0x00 ; '.'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x00 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x62 ; 'b'
0000000000000911         db  0x00 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x12 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0x00 ; '.'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0xa1 ; '.'
0000000000000929         db  0x00 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x12 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0x00 ; '.'
0000000000000931         db  0x00 ; '.'
0000000000000932         db  0x00 ; '.'
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x00 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x28 ; '('
0000000000000941         db  0x02 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x12 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x00 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x00 ; '.'
0000000000000949         db  0x00 ; '.'
000000000000094a         db  0x00 ; '.'
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x00 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0x7c ; '|'
0000000000000959         db  0x02 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x12 ; '.'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x00 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0x00 ; '.'
0000000000000961         db  0x00 ; '.'
0000000000000962         db  0x00 ; '.'
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x00 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0xfc ; '.'
0000000000000971         db  0x02 ; '.'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x12 ; '.'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x00 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0x00 ; '.'
0000000000000979         db  0x00 ; '.'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x00 ; '.'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x00 ; '.'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x00 ; '.'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0x31 ; '1'
0000000000000989         db  0x00 ; '.'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x12 ; '.'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x00 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x00 ; '.'
0000000000000991         db  0x00 ; '.'
0000000000000992         db  0x00 ; '.'
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x00 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x00 ; '.'
0000000000000999         db  0x00 ; '.'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0x50 ; 'P'
00000000000009a1         db  0x03 ; '.'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x12 ; '.'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x00 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x00 ; '.'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x00 ; '.'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x00 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0x1d ; '.'
00000000000009b9         db  0x01 ; '.'
00000000000009ba         db  0x00 ; '.'
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x12 ; '.'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x00 ; '.'
00000000000009bf         db  0x00 ; '.'
00000000000009c0         db  0x00 ; '.'
00000000000009c1         db  0x00 ; '.'
00000000000009c2         db  0x00 ; '.'
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x00 ; '.'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x00 ; '.'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x00 ; '.'
00000000000009c9         db  0x00 ; '.'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x00 ; '.'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x00 ; '.'
00000000000009cf         db  0x00 ; '.'
00000000000009d0         db  0x66 ; 'f'
00000000000009d1         db  0x01 ; '.'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x12 ; '.'
00000000000009d5         db  0x00 ; '.'
00000000000009d6         db  0x00 ; '.'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0x00 ; '.'
00000000000009d9         db  0x00 ; '.'
00000000000009da         db  0x00 ; '.'
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x00 ; '.'
00000000000009dd         db  0x00 ; '.'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x00 ; '.'
00000000000009e0         db  0x00 ; '.'
00000000000009e1         db  0x00 ; '.'
00000000000009e2         db  0x00 ; '.'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x00 ; '.'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x00 ; '.'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0x0e ; '.'
00000000000009e9         db  0x01 ; '.'
00000000000009ea         db  0x00 ; '.'
00000000000009eb         db  0x00 ; '.'
00000000000009ec         db  0x12 ; '.'
00000000000009ed         db  0x00 ; '.'
00000000000009ee         db  0x00 ; '.'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0x00 ; '.'
00000000000009f1         db  0x00 ; '.'
00000000000009f2         db  0x00 ; '.'
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x00 ; '.'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x00 ; '.'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0x00 ; '.'
00000000000009f9         db  0x00 ; '.'
00000000000009fa         db  0x00 ; '.'
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x00 ; '.'
00000000000009fd         db  0x00 ; '.'
00000000000009fe         db  0x00 ; '.'
00000000000009ff         db  0x00 ; '.'
0000000000000a00         db  0xae ; '.'
0000000000000a01         db  0x00 ; '.'
0000000000000a02         db  0x00 ; '.'
0000000000000a03         db  0x00 ; '.'
0000000000000a04         db  0x12 ; '.'
0000000000000a05         db  0x00 ; '.'
0000000000000a06         db  0x00 ; '.'
0000000000000a07         db  0x00 ; '.'
0000000000000a08         db  0x00 ; '.'
0000000000000a09         db  0x00 ; '.'
0000000000000a0a         db  0x00 ; '.'
0000000000000a0b         db  0x00 ; '.'
0000000000000a0c         db  0x00 ; '.'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x00 ; '.'
0000000000000a0f         db  0x00 ; '.'
0000000000000a10         db  0x00 ; '.'
0000000000000a11         db  0x00 ; '.'
0000000000000a12         db  0x00 ; '.'
0000000000000a13         db  0x00 ; '.'
0000000000000a14         db  0x00 ; '.'
0000000000000a15         db  0x00 ; '.'
0000000000000a16         db  0x00 ; '.'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x14 ; '.'
0000000000000a19         db  0x02 ; '.'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x00 ; '.'
0000000000000a1c         db  0x12 ; '.'
0000000000000a1d         db  0x00 ; '.'
0000000000000a1e         db  0x00 ; '.'
0000000000000a1f         db  0x00 ; '.'
0000000000000a20         db  0x00 ; '.'
0000000000000a21         db  0x00 ; '.'
0000000000000a22         db  0x00 ; '.'
0000000000000a23         db  0x00 ; '.'
0000000000000a24         db  0x00 ; '.'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x00 ; '.'
0000000000000a27         db  0x00 ; '.'
0000000000000a28         db  0x00 ; '.'
0000000000000a29         db  0x00 ; '.'
0000000000000a2a         db  0x00 ; '.'
0000000000000a2b         db  0x00 ; '.'
0000000000000a2c         db  0x00 ; '.'
0000000000000a2d         db  0x00 ; '.'
0000000000000a2e         db  0x00 ; '.'
0000000000000a2f         db  0x00 ; '.'
0000000000000a30         db  0x72 ; 'r'
0000000000000a31         db  0x01 ; '.'
0000000000000a32         db  0x00 ; '.'
0000000000000a33         db  0x00 ; '.'
0000000000000a34         db  0x12 ; '.'
0000000000000a35         db  0x00 ; '.'
0000000000000a36         db  0x00 ; '.'
0000000000000a37         db  0x00 ; '.'
0000000000000a38         db  0x00 ; '.'
0000000000000a39         db  0x00 ; '.'
0000000000000a3a         db  0x00 ; '.'
0000000000000a3b         db  0x00 ; '.'
0000000000000a3c         db  0x00 ; '.'
0000000000000a3d         db  0x00 ; '.'
0000000000000a3e         db  0x00 ; '.'
0000000000000a3f         db  0x00 ; '.'
0000000000000a40         db  0x00 ; '.'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x00 ; '.'
0000000000000a43         db  0x00 ; '.'
0000000000000a44         db  0x00 ; '.'
0000000000000a45         db  0x00 ; '.'
0000000000000a46         db  0x00 ; '.'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0xca ; '.'
0000000000000a49         db  0x03 ; '.'
0000000000000a4a         db  0x00 ; '.'
0000000000000a4b         db  0x00 ; '.'
0000000000000a4c         db  0x20 ; ' '
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x00 ; '.'
0000000000000a4f         db  0x00 ; '.'
0000000000000a50         db  0x00 ; '.'
0000000000000a51         db  0x00 ; '.'
0000000000000a52         db  0x00 ; '.'
0000000000000a53         db  0x00 ; '.'
0000000000000a54         db  0x00 ; '.'
0000000000000a55         db  0x00 ; '.'
0000000000000a56         db  0x00 ; '.'
0000000000000a57         db  0x00 ; '.'
0000000000000a58         db  0x00 ; '.'
0000000000000a59         db  0x00 ; '.'
0000000000000a5a         db  0x00 ; '.'
0000000000000a5b         db  0x00 ; '.'
0000000000000a5c         db  0x00 ; '.'
0000000000000a5d         db  0x00 ; '.'
0000000000000a5e         db  0x00 ; '.'
0000000000000a5f         db  0x00 ; '.'
0000000000000a60         db  0xa2 ; '.'
0000000000000a61         db  0x01 ; '.'
0000000000000a62         db  0x00 ; '.'
0000000000000a63         db  0x00 ; '.'
0000000000000a64         db  0x12 ; '.'
0000000000000a65         db  0x00 ; '.'
0000000000000a66         db  0x00 ; '.'
0000000000000a67         db  0x00 ; '.'
0000000000000a68         db  0x00 ; '.'
0000000000000a69         db  0x00 ; '.'
0000000000000a6a         db  0x00 ; '.'
0000000000000a6b         db  0x00 ; '.'
0000000000000a6c         db  0x00 ; '.'
0000000000000a6d         db  0x00 ; '.'
0000000000000a6e         db  0x00 ; '.'
0000000000000a6f         db  0x00 ; '.'
0000000000000a70         db  0x00 ; '.'
0000000000000a71         db  0x00 ; '.'
0000000000000a72         db  0x00 ; '.'
0000000000000a73         db  0x00 ; '.'
0000000000000a74         db  0x00 ; '.'
0000000000000a75         db  0x00 ; '.'
0000000000000a76         db  0x00 ; '.'
0000000000000a77         db  0x00 ; '.'
0000000000000a78         db  0x90 ; '.'
0000000000000a79         db  0x00 ; '.'
0000000000000a7a         db  0x00 ; '.'
0000000000000a7b         db  0x00 ; '.'
0000000000000a7c         db  0x12 ; '.'
0000000000000a7d         db  0x00 ; '.'
0000000000000a7e         db  0x00 ; '.'
0000000000000a7f         db  0x00 ; '.'
0000000000000a80         db  0x00 ; '.'
0000000000000a81         db  0x00 ; '.'
0000000000000a82         db  0x00 ; '.'
0000000000000a83         db  0x00 ; '.'
0000000000000a84         db  0x00 ; '.'
0000000000000a85         db  0x00 ; '.'
0000000000000a86         db  0x00 ; '.'
0000000000000a87         db  0x00 ; '.'
0000000000000a88         db  0x00 ; '.'
0000000000000a89         db  0x00 ; '.'
0000000000000a8a         db  0x00 ; '.'
0000000000000a8b         db  0x00 ; '.'
0000000000000a8c         db  0x00 ; '.'
0000000000000a8d         db  0x00 ; '.'
0000000000000a8e         db  0x00 ; '.'
0000000000000a8f         db  0x00 ; '.'
0000000000000a90         db  0x8e ; '.'
0000000000000a91         db  0x02 ; '.'
0000000000000a92         db  0x00 ; '.'
0000000000000a93         db  0x00 ; '.'
0000000000000a94         db  0x22 ; '"'
0000000000000a95         db  0x00 ; '.'
0000000000000a96         db  0x00 ; '.'
0000000000000a97         db  0x00 ; '.'
0000000000000a98         db  0x00 ; '.'
0000000000000a99         db  0x00 ; '.'
0000000000000a9a         db  0x00 ; '.'
0000000000000a9b         db  0x00 ; '.'
0000000000000a9c         db  0x00 ; '.'
0000000000000a9d         db  0x00 ; '.'
0000000000000a9e         db  0x00 ; '.'
0000000000000a9f         db  0x00 ; '.'
0000000000000aa0         db  0x00 ; '.'
0000000000000aa1         db  0x00 ; '.'
0000000000000aa2         db  0x00 ; '.'
0000000000000aa3         db  0x00 ; '.'
0000000000000aa4         db  0x00 ; '.'
0000000000000aa5         db  0x00 ; '.'
0000000000000aa6         db  0x00 ; '.'
0000000000000aa7         db  0x00 ; '.'
0000000000000aa8         db  0xbd ; '.'
0000000000000aa9         db  0x01 ; '.'
0000000000000aaa         db  0x00 ; '.'
0000000000000aab         db  0x00 ; '.'
0000000000000aac         db  0x12 ; '.'
0000000000000aad         db  0x00 ; '.'
0000000000000aae         db  0x00 ; '.'
0000000000000aaf         db  0x00 ; '.'
0000000000000ab0         db  0x00 ; '.'
0000000000000ab1         db  0x00 ; '.'
0000000000000ab2         db  0x00 ; '.'
0000000000000ab3         db  0x00 ; '.'
0000000000000ab4         db  0x00 ; '.'
0000000000000ab5         db  0x00 ; '.'
0000000000000ab6         db  0x00 ; '.'
0000000000000ab7         db  0x00 ; '.'
0000000000000ab8         db  0x00 ; '.'
0000000000000ab9         db  0x00 ; '.'
0000000000000aba         db  0x00 ; '.'
0000000000000abb         db  0x00 ; '.'
0000000000000abc         db  0x00 ; '.'
0000000000000abd         db  0x00 ; '.'
0000000000000abe         db  0x00 ; '.'
0000000000000abf         db  0x00 ; '.'
0000000000000ac0         db  0xb3 ; '.'
0000000000000ac1         db  0x02 ; '.'
0000000000000ac2         db  0x00 ; '.'
0000000000000ac3         db  0x00 ; '.'
0000000000000ac4         db  0x12 ; '.'
0000000000000ac5         db  0x00 ; '.'
0000000000000ac6         db  0x00 ; '.'
0000000000000ac7         db  0x00 ; '.'
0000000000000ac8         db  0x00 ; '.'
0000000000000ac9         db  0x00 ; '.'
0000000000000aca         db  0x00 ; '.'
0000000000000acb         db  0x00 ; '.'
0000000000000acc         db  0x00 ; '.'
0000000000000acd         db  0x00 ; '.'
0000000000000ace         db  0x00 ; '.'
0000000000000acf         db  0x00 ; '.'
0000000000000ad0         db  0x00 ; '.'
0000000000000ad1         db  0x00 ; '.'
0000000000000ad2         db  0x00 ; '.'
0000000000000ad3         db  0x00 ; '.'
0000000000000ad4         db  0x00 ; '.'
0000000000000ad5         db  0x00 ; '.'
0000000000000ad6         db  0x00 ; '.'
0000000000000ad7         db  0x00 ; '.'
0000000000000ad8         db  0x80 ; '.'
0000000000000ad9         db  0x01 ; '.'
0000000000000ada         db  0x00 ; '.'
0000000000000adb         db  0x00 ; '.'
0000000000000adc         db  0x11 ; '.'
0000000000000add         db  0x00 ; '.'
0000000000000ade         db  0x19 ; '.'
0000000000000adf         db  0x00 ; '.'
0000000000000ae0         db  0xa8 ; '.'
0000000000000ae1         db  0xe0 ; '.'
0000000000000ae2         db  0x20 ; ' '
0000000000000ae3         db  0x00 ; '.'
0000000000000ae4         db  0x00 ; '.'
0000000000000ae5         db  0x00 ; '.'
0000000000000ae6         db  0x00 ; '.'
0000000000000ae7         db  0x00 ; '.'
0000000000000ae8         db  0x08 ; '.'
0000000000000ae9         db  0x00 ; '.'
0000000000000aea         db  0x00 ; '.'
0000000000000aeb         db  0x00 ; '.'
0000000000000aec         db  0x00 ; '.'
0000000000000aed         db  0x00 ; '.'
0000000000000aee         db  0x00 ; '.'
0000000000000aef         db  0x00 ; '.'
0000000000000af0         db  0x35 ; '5'
0000000000000af1         db  0x03 ; '.'
0000000000000af2         db  0x00 ; '.'
0000000000000af3         db  0x00 ; '.'
0000000000000af4         db  0x11 ; '.'
0000000000000af5         db  0x00 ; '.'
0000000000000af6         db  0x19 ; '.'
0000000000000af7         db  0x00 ; '.'
0000000000000af8         db  0xa0 ; '.'
0000000000000af9         db  0xe0 ; '.'
0000000000000afa         db  0x20 ; ' '
0000000000000afb         db  0x00 ; '.'
0000000000000afc         db  0x00 ; '.'
0000000000000afd         db  0x00 ; '.'
0000000000000afe         db  0x00 ; '.'
0000000000000aff         db  0x00 ; '.'
0000000000000b00         db  0x08 ; '.'
0000000000000b01         db  0x00 ; '.'
0000000000000b02         db  0x00 ; '.'
0000000000000b03         db  0x00 ; '.'
0000000000000b04         db  0x00 ; '.'
0000000000000b05         db  0x00 ; '.'
0000000000000b06         db  0x00 ; '.'
0000000000000b07         db  0x00 ; '.'
0000000000000b08         db  0xba ; '.'
0000000000000b09         db  0x00 ; '.'
0000000000000b0a         db  0x00 ; '.'
0000000000000b0b         db  0x00 ; '.'
0000000000000b0c         db  0x21 ; '!'
0000000000000b0d         db  0x00 ; '.'
0000000000000b0e         db  0x19 ; '.'
0000000000000b0f         db  0x00 ; '.'
0000000000000b10         db  0xc0 ; '.'
0000000000000b11         db  0xe0 ; '.'
0000000000000b12         db  0x20 ; ' '
0000000000000b13         db  0x00 ; '.'
0000000000000b14         db  0x00 ; '.'
0000000000000b15         db  0x00 ; '.'
0000000000000b16         db  0x00 ; '.'
0000000000000b17         db  0x00 ; '.'
0000000000000b18         db  0x08 ; '.'
0000000000000b19         db  0x00 ; '.'
0000000000000b1a         db  0x00 ; '.'
0000000000000b1b         db  0x00 ; '.'
0000000000000b1c         db  0x00 ; '.'
0000000000000b1d         db  0x00 ; '.'
0000000000000b1e         db  0x00 ; '.'
0000000000000b1f         db  0x00 ; '.'
0000000000000b20         db  0x40 ; '@'
0000000000000b21         db  0x03 ; '.'
0000000000000b22         db  0x00 ; '.'
0000000000000b23         db  0x00 ; '.'
0000000000000b24         db  0x11 ; '.'
0000000000000b25         db  0x00 ; '.'
0000000000000b26         db  0x19 ; '.'
0000000000000b27         db  0x00 ; '.'
0000000000000b28         db  0xc0 ; '.'
0000000000000b29         db  0xe0 ; '.'
0000000000000b2a         db  0x20 ; ' '
0000000000000b2b         db  0x00 ; '.'
0000000000000b2c         db  0x00 ; '.'
0000000000000b2d         db  0x00 ; '.'
0000000000000b2e         db  0x00 ; '.'
0000000000000b2f         db  0x00 ; '.'
0000000000000b30         db  0x08 ; '.'
0000000000000b31         db  0x00 ; '.'
0000000000000b32         db  0x00 ; '.'
0000000000000b33         db  0x00 ; '.'
0000000000000b34         db  0x00 ; '.'
0000000000000b35         db  0x00 ; '.'
0000000000000b36         db  0x00 ; '.'
0000000000000b37         db  0x00 ; '.'
0000000000000b38         db  0x5c ; '\'
0000000000000b39         db  0x02 ; '.'
0000000000000b3a         db  0x00 ; '.'
0000000000000b3b         db  0x00 ; '.'
0000000000000b3c         db  0x21 ; '!'
0000000000000b3d         db  0x00 ; '.'
0000000000000b3e         db  0x19 ; '.'
0000000000000b3f         db  0x00 ; '.'
0000000000000b40         db  0xa0 ; '.'
0000000000000b41         db  0xe0 ; '.'
0000000000000b42         db  0x20 ; ' '
0000000000000b43         db  0x00 ; '.'
0000000000000b44         db  0x00 ; '.'
0000000000000b45         db  0x00 ; '.'
0000000000000b46         db  0x00 ; '.'
0000000000000b47         db  0x00 ; '.'
0000000000000b48         db  0x08 ; '.'
0000000000000b49         db  0x00 ; '.'
0000000000000b4a         db  0x00 ; '.'
0000000000000b4b         db  0x00 ; '.'
0000000000000b4c         db  0x00 ; '.'
0000000000000b4d         db  0x00 ; '.'
0000000000000b4e         db  0x00 ; '.'
0000000000000b4f         db  0x00 ; '.'
0000000000000b50         db  0xe4 ; '.'
0000000000000b51         db  0x01 ; '.'
0000000000000b52         db  0x00 ; '.'
0000000000000b53         db  0x00 ; '.'
0000000000000b54         db  0x11 ; '.'
0000000000000b55         db  0x00 ; '.'
0000000000000b56         db  0x19 ; '.'
0000000000000b57         db  0x00 ; '.'
0000000000000b58         db  0xe0 ; '.'
0000000000000b59         db  0xe0 ; '.'
0000000000000b5a         db  0x20 ; ' '
0000000000000b5b         db  0x00 ; '.'
0000000000000b5c         db  0x00 ; '.'
0000000000000b5d         db  0x00 ; '.'
0000000000000b5e         db  0x00 ; '.'
0000000000000b5f         db  0x00 ; '.'
0000000000000b60         db  0x08 ; '.'
0000000000000b61         db  0x00 ; '.'
0000000000000b62         db  0x00 ; '.'
0000000000000b63         db  0x00 ; '.'
0000000000000b64         db  0x00 ; '.'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x00 ; '.'
0000000000000b67         db  0x00 ; '.'
0000000000000b68         db  0x49 ; 'I'
0000000000000b69         db  0x00 ; '.'
0000000000000b6a         db  0x00 ; '.'
0000000000000b6b         db  0x00 ; '.'
0000000000000b6c         db  0x11 ; '.'
0000000000000b6d         db  0x00 ; '.'
0000000000000b6e         db  0x19 ; '.'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0xb0 ; '.'
0000000000000b71         db  0xe0 ; '.'
0000000000000b72         db  0x20 ; ' '
0000000000000b73         db  0x00 ; '.'
0000000000000b74         db  0x00 ; '.'
0000000000000b75         db  0x00 ; '.'
0000000000000b76         db  0x00 ; '.'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x04 ; '.'
0000000000000b79         db  0x00 ; '.'
0000000000000b7a         db  0x00 ; '.'
0000000000000b7b         db  0x00 ; '.'
0000000000000b7c         db  0x00 ; '.'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x00 ; '.'
0000000000000b7f         db  0x00 ; '.'
0000000000000b80         db  0xd2 ; '.'
0000000000000b81         db  0x01 ; '.'
0000000000000b82         db  0x00 ; '.'
0000000000000b83         db  0x00 ; '.'
0000000000000b84         db  0x11 ; '.'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x19 ; '.'
0000000000000b87         db  0x00 ; '.'
0000000000000b88         db  0xb8 ; '.'
0000000000000b89         db  0xe0 ; '.'
0000000000000b8a         db  0x20 ; ' '
0000000000000b8b         db  0x00 ; '.'
0000000000000b8c         db  0x00 ; '.'
0000000000000b8d         db  0x00 ; '.'
0000000000000b8e         db  0x00 ; '.'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x08 ; '.'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x00 ; '.'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x00 ; '.'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x00 ; '.'
0000000000000b97         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0xb98; 0xf7c[ (996 bytes)
        ; File offset : [2968; 3964[ (996 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000b98         db  0x00 ; '.'
0000000000000b99         db  0x6c ; 'l'
0000000000000b9a         db  0x69 ; 'i'
0000000000000b9b         db  0x62 ; 'b'
0000000000000b9c         db  0x63 ; 'c'
0000000000000b9d         db  0x2e ; '.'
0000000000000b9e         db  0x73 ; 's'
0000000000000b9f         db  0x6f ; 'o'
0000000000000ba0         db  0x2e ; '.'
0000000000000ba1         db  0x36 ; '6'
0000000000000ba2         db  0x00 ; '.'
0000000000000ba3         db  0x66 ; 'f'
0000000000000ba4         db  0x66 ; 'f'
0000000000000ba5         db  0x6c ; 'l'
0000000000000ba6         db  0x75 ; 'u'
0000000000000ba7         db  0x73 ; 's'
0000000000000ba8         db  0x68 ; 'h'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x5f ; '_'
0000000000000bab         db  0x5f ; '_'
0000000000000bac         db  0x70 ; 'p'
0000000000000bad         db  0x72 ; 'r'
0000000000000bae         db  0x69 ; 'i'
0000000000000baf         db  0x6e ; 'n'
0000000000000bb0         db  0x74 ; 't'
0000000000000bb1         db  0x66 ; 'f'
0000000000000bb2         db  0x5f ; '_'
0000000000000bb3         db  0x63 ; 'c'
0000000000000bb4         db  0x68 ; 'h'
0000000000000bb5         db  0x6b ; 'k'
0000000000000bb6         db  0x00 ; '.'
0000000000000bb7         db  0x73 ; 's'
0000000000000bb8         db  0x65 ; 'e'
0000000000000bb9         db  0x74 ; 't'
0000000000000bba         db  0x6c ; 'l'
0000000000000bbb         db  0x6f ; 'o'
0000000000000bbc         db  0x63 ; 'c'
0000000000000bbd         db  0x61 ; 'a'
0000000000000bbe         db  0x6c ; 'l'
0000000000000bbf         db  0x65 ; 'e'
0000000000000bc0         db  0x00 ; '.'
0000000000000bc1         db  0x6d ; 'm'
0000000000000bc2         db  0x62 ; 'b'
0000000000000bc3         db  0x72 ; 'r'
0000000000000bc4         db  0x74 ; 't'
0000000000000bc5         db  0x6f ; 'o'
0000000000000bc6         db  0x77 ; 'w'
0000000000000bc7         db  0x63 ; 'c'
0000000000000bc8         db  0x00 ; '.'
0000000000000bc9         db  0x66 ; 'f'
0000000000000bca         db  0x6f ; 'o'
0000000000000bcb         db  0x70 ; 'p'
0000000000000bcc         db  0x65 ; 'e'
0000000000000bcd         db  0x6e ; 'n'
0000000000000bce         db  0x00 ; '.'
0000000000000bcf         db  0x73 ; 's'
0000000000000bd0         db  0x74 ; 't'
0000000000000bd1         db  0x72 ; 'r'
0000000000000bd2         db  0x6e ; 'n'
0000000000000bd3         db  0x63 ; 'c'
0000000000000bd4         db  0x6d ; 'm'
0000000000000bd5         db  0x70 ; 'p'
0000000000000bd6         db  0x00 ; '.'
0000000000000bd7         db  0x66 ; 'f'
0000000000000bd8         db  0x74 ; 't'
0000000000000bd9         db  0x72 ; 'r'
0000000000000bda         db  0x75 ; 'u'
0000000000000bdb         db  0x6e ; 'n'
0000000000000bdc         db  0x63 ; 'c'
0000000000000bdd         db  0x61 ; 'a'
0000000000000bde         db  0x74 ; 't'
0000000000000bdf         db  0x65 ; 'e'
0000000000000be0         db  0x00 ; '.'
0000000000000be1         db  0x6f ; 'o'
0000000000000be2         db  0x70 ; 'p'
0000000000000be3         db  0x74 ; 't'
0000000000000be4         db  0x69 ; 'i'
0000000000000be5         db  0x6e ; 'n'
0000000000000be6         db  0x64 ; 'd'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x73 ; 's'
0000000000000be9         db  0x74 ; 't'
0000000000000bea         db  0x72 ; 'r'
0000000000000beb         db  0x72 ; 'r'
0000000000000bec         db  0x63 ; 'c'
0000000000000bed         db  0x68 ; 'h'
0000000000000bee         db  0x72 ; 'r'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x64 ; 'd'
0000000000000bf1         db  0x63 ; 'c'
0000000000000bf2         db  0x67 ; 'g'
0000000000000bf3         db  0x65 ; 'e'
0000000000000bf4         db  0x74 ; 't'
0000000000000bf5         db  0x74 ; 't'
0000000000000bf6         db  0x65 ; 'e'
0000000000000bf7         db  0x78 ; 'x'
0000000000000bf8         db  0x74 ; 't'
0000000000000bf9         db  0x00 ; '.'
0000000000000bfa         db  0x65 ; 'e'
0000000000000bfb         db  0x72 ; 'r'
0000000000000bfc         db  0x72 ; 'r'
0000000000000bfd         db  0x6f ; 'o'
0000000000000bfe         db  0x72 ; 'r'
0000000000000bff         db  0x00 ; '.'
                     aReadchk:
0000000000000c00         db         "__read_chk", 0
0000000000000c0b         db  0x74 ; 't'
0000000000000c0c         db  0x69 ; 'i'
0000000000000c0d         db  0x6d ; 'm'
0000000000000c0e         db  0x65 ; 'e'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x5f ; '_'
0000000000000c11         db  0x5f ; '_'
0000000000000c12         db  0x73 ; 's'
0000000000000c13         db  0x74 ; 't'
0000000000000c14         db  0x61 ; 'a'
0000000000000c15         db  0x63 ; 'c'
0000000000000c16         db  0x6b ; 'k'
0000000000000c17         db  0x5f ; '_'
0000000000000c18         db  0x63 ; 'c'
0000000000000c19         db  0x68 ; 'h'
0000000000000c1a         db  0x6b ; 'k'
0000000000000c1b         db  0x5f ; '_'
0000000000000c1c         db  0x66 ; 'f'
0000000000000c1d         db  0x61 ; 'a'
0000000000000c1e         db  0x69 ; 'i'
0000000000000c1f         db  0x6c ; 'l'
0000000000000c20         db  0x00 ; '.'
0000000000000c21         db  0x75 ; 'u'
0000000000000c22         db  0x6e ; 'n'
0000000000000c23         db  0x6c ; 'l'
0000000000000c24         db  0x69 ; 'i'
0000000000000c25         db  0x6e ; 'n'
0000000000000c26         db  0x6b ; 'k'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x69 ; 'i'
0000000000000c29         db  0x73 ; 's'
0000000000000c2a         db  0x77 ; 'w'
0000000000000c2b         db  0x70 ; 'p'
0000000000000c2c         db  0x72 ; 'r'
0000000000000c2d         db  0x69 ; 'i'
0000000000000c2e         db  0x6e ; 'n'
0000000000000c2f         db  0x74 ; 't'
0000000000000c30         db  0x00 ; '.'
0000000000000c31         db  0x72 ; 'r'
0000000000000c32         db  0x65 ; 'e'
0000000000000c33         db  0x61 ; 'a'
0000000000000c34         db  0x6c ; 'l'
0000000000000c35         db  0x6c ; 'l'
0000000000000c36         db  0x6f ; 'o'
0000000000000c37         db  0x63 ; 'c'
0000000000000c38         db  0x00 ; '.'
0000000000000c39         db  0x66 ; 'f'
0000000000000c3a         db  0x73 ; 's'
0000000000000c3b         db  0x79 ; 'y'
0000000000000c3c         db  0x6e ; 'n'
0000000000000c3d         db  0x63 ; 'c'
0000000000000c3e         db  0x00 ; '.'
0000000000000c3f         db  0x61 ; 'a'
0000000000000c40         db  0x62 ; 'b'
0000000000000c41         db  0x6f ; 'o'
0000000000000c42         db  0x72 ; 'r'
0000000000000c43         db  0x74 ; 't'
0000000000000c44         db  0x00 ; '.'
0000000000000c45         db  0x5f ; '_'
0000000000000c46         db  0x65 ; 'e'
0000000000000c47         db  0x78 ; 'x'
0000000000000c48         db  0x69 ; 'i'
0000000000000c49         db  0x74 ; 't'
0000000000000c4a         db  0x00 ; '.'
0000000000000c4b         db  0x67 ; 'g'
0000000000000c4c         db  0x65 ; 'e'
0000000000000c4d         db  0x74 ; 't'
0000000000000c4e         db  0x70 ; 'p'
0000000000000c4f         db  0x69 ; 'i'
0000000000000c50         db  0x64 ; 'd'
0000000000000c51         db  0x00 ; '.'
0000000000000c52         db  0x70 ; 'p'
0000000000000c53         db  0x72 ; 'r'
0000000000000c54         db  0x6f ; 'o'
0000000000000c55         db  0x67 ; 'g'
0000000000000c56         db  0x72 ; 'r'
0000000000000c57         db  0x61 ; 'a'
0000000000000c58         db  0x6d ; 'm'
0000000000000c59         db  0x5f ; '_'
0000000000000c5a         db  0x69 ; 'i'
0000000000000c5b         db  0x6e ; 'n'
0000000000000c5c         db  0x76 ; 'v'
0000000000000c5d         db  0x6f ; 'o'
0000000000000c5e         db  0x63 ; 'c'
0000000000000c5f         db  0x61 ; 'a'
0000000000000c60         db  0x74 ; 't'
0000000000000c61         db  0x69 ; 'i'
0000000000000c62         db  0x6f ; 'o'
0000000000000c63         db  0x6e ; 'n'
0000000000000c64         db  0x5f ; '_'
0000000000000c65         db  0x6e ; 'n'
0000000000000c66         db  0x61 ; 'a'
0000000000000c67         db  0x6d ; 'm'
0000000000000c68         db  0x65 ; 'e'
0000000000000c69         db  0x00 ; '.'
0000000000000c6a         db  0x63 ; 'c'
0000000000000c6b         db  0x68 ; 'h'
0000000000000c6c         db  0x6d ; 'm'
0000000000000c6d         db  0x6f ; 'o'
0000000000000c6e         db  0x64 ; 'd'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x5f ; '_'
0000000000000c71         db  0x5f ; '_'
0000000000000c72         db  0x61 ; 'a'
0000000000000c73         db  0x73 ; 's'
0000000000000c74         db  0x73 ; 's'
0000000000000c75         db  0x65 ; 'e'
0000000000000c76         db  0x72 ; 'r'
0000000000000c77         db  0x74 ; 't'
0000000000000c78         db  0x5f ; '_'
0000000000000c79         db  0x66 ; 'f'
0000000000000c7a         db  0x61 ; 'a'
0000000000000c7b         db  0x69 ; 'i'
0000000000000c7c         db  0x6c ; 'l'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x5f ; '_'
0000000000000c7f         db  0x5f ; '_'
0000000000000c80         db  0x63 ; 'c'
0000000000000c81         db  0x74 ; 't'
0000000000000c82         db  0x79 ; 'y'
0000000000000c83         db  0x70 ; 'p'
0000000000000c84         db  0x65 ; 'e'
0000000000000c85         db  0x5f ; '_'
0000000000000c86         db  0x67 ; 'g'
0000000000000c87         db  0x65 ; 'e'
0000000000000c88         db  0x74 ; 't'
0000000000000c89         db  0x5f ; '_'
0000000000000c8a         db  0x6d ; 'm'
0000000000000c8b         db  0x62 ; 'b'
0000000000000c8c         db  0x5f ; '_'
0000000000000c8d         db  0x63 ; 'c'
0000000000000c8e         db  0x75 ; 'u'
0000000000000c8f         db  0x72 ; 'r'
0000000000000c90         db  0x5f ; '_'
0000000000000c91         db  0x6d ; 'm'
0000000000000c92         db  0x61 ; 'a'
0000000000000c93         db  0x78 ; 'x'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x69 ; 'i'
0000000000000c96         db  0x73 ; 's'
0000000000000c97         db  0x61 ; 'a'
0000000000000c98         db  0x74 ; 't'
0000000000000c99         db  0x74 ; 't'
0000000000000c9a         db  0x79 ; 'y'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x66 ; 'f'
0000000000000c9d         db  0x64 ; 'd'
0000000000000c9e         db  0x61 ; 'a'
0000000000000c9f         db  0x74 ; 't'
0000000000000ca0         db  0x61 ; 'a'
0000000000000ca1         db  0x73 ; 's'
0000000000000ca2         db  0x79 ; 'y'
0000000000000ca3         db  0x6e ; 'n'
0000000000000ca4         db  0x63 ; 'c'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x67 ; 'g'
0000000000000ca7         db  0x65 ; 'e'
0000000000000ca8         db  0x74 ; 't'
0000000000000ca9         db  0x70 ; 'p'
0000000000000caa         db  0x70 ; 'p'
0000000000000cab         db  0x69 ; 'i'
0000000000000cac         db  0x64 ; 'd'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x63 ; 'c'
0000000000000caf         db  0x61 ; 'a'
0000000000000cb0         db  0x6c ; 'l'
0000000000000cb1         db  0x6c ; 'l'
0000000000000cb2         db  0x6f ; 'o'
0000000000000cb3         db  0x63 ; 'c'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x72 ; 'r'
0000000000000cb6         db  0x65 ; 'e'
0000000000000cb7         db  0x6e ; 'n'
0000000000000cb8         db  0x61 ; 'a'
0000000000000cb9         db  0x6d ; 'm'
0000000000000cba         db  0x65 ; 'e'
0000000000000cbb         db  0x61 ; 'a'
0000000000000cbc         db  0x74 ; 't'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x73 ; 's'
0000000000000cbf         db  0x74 ; 't'
0000000000000cc0         db  0x72 ; 'r'
0000000000000cc1         db  0x6c ; 'l'
0000000000000cc2         db  0x65 ; 'e'
0000000000000cc3         db  0x6e ; 'n'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x66 ; 'f'
0000000000000cc6         db  0x72 ; 'r'
0000000000000cc7         db  0x65 ; 'e'
0000000000000cc8         db  0x61 ; 'a'
0000000000000cc9         db  0x64 ; 'd'
0000000000000cca         db  0x5f ; '_'
0000000000000ccb         db  0x75 ; 'u'
0000000000000ccc         db  0x6e ; 'n'
0000000000000ccd         db  0x6c ; 'l'
0000000000000cce         db  0x6f ; 'o'
0000000000000ccf         db  0x63 ; 'c'
0000000000000cd0         db  0x6b ; 'k'
0000000000000cd1         db  0x65 ; 'e'
0000000000000cd2         db  0x64 ; 'd'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x6d ; 'm'
0000000000000cd5         db  0x65 ; 'e'
0000000000000cd6         db  0x6d ; 'm'
0000000000000cd7         db  0x73 ; 's'
0000000000000cd8         db  0x65 ; 'e'
0000000000000cd9         db  0x74 ; 't'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x6c ; 'l'
0000000000000cdc         db  0x6f ; 'o'
0000000000000cdd         db  0x63 ; 'c'
0000000000000cde         db  0x61 ; 'a'
0000000000000cdf         db  0x6c ; 'l'
0000000000000ce0         db  0x65 ; 'e'
0000000000000ce1         db  0x63 ; 'c'
0000000000000ce2         db  0x6f ; 'o'
0000000000000ce3         db  0x6e ; 'n'
0000000000000ce4         db  0x76 ; 'v'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x5f ; '_'
0000000000000ce7         db  0x5f ; '_'
0000000000000ce8         db  0x65 ; 'e'
0000000000000ce9         db  0x72 ; 'r'
0000000000000cea         db  0x72 ; 'r'
0000000000000ceb         db  0x6e ; 'n'
0000000000000cec         db  0x6f ; 'o'
0000000000000ced         db  0x5f ; '_'
0000000000000cee         db  0x6c ; 'l'
0000000000000cef         db  0x6f ; 'o'
0000000000000cf0         db  0x63 ; 'c'
0000000000000cf1         db  0x61 ; 'a'
0000000000000cf2         db  0x74 ; 't'
0000000000000cf3         db  0x69 ; 'i'
0000000000000cf4         db  0x6f ; 'o'
0000000000000cf5         db  0x6e ; 'n'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x6d ; 'm'
0000000000000cf8         db  0x65 ; 'e'
0000000000000cf9         db  0x6d ; 'm'
0000000000000cfa         db  0x63 ; 'c'
0000000000000cfb         db  0x6d ; 'm'
0000000000000cfc         db  0x70 ; 'p'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x67 ; 'g'
0000000000000cff         db  0x65 ; 'e'
                     aTpagesize:
0000000000000d00         db         "tpagesize", 0
0000000000000d0a         db  0x5f ; '_'
0000000000000d0b         db  0x5f ; '_'
0000000000000d0c         db  0x66 ; 'f'
0000000000000d0d         db  0x70 ; 'p'
0000000000000d0e         db  0x72 ; 'r'
0000000000000d0f         db  0x69 ; 'i'
0000000000000d10         db  0x6e ; 'n'
0000000000000d11         db  0x74 ; 't'
0000000000000d12         db  0x66 ; 'f'
0000000000000d13         db  0x5f ; '_'
0000000000000d14         db  0x63 ; 'c'
0000000000000d15         db  0x68 ; 'h'
0000000000000d16         db  0x6b ; 'k'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x73 ; 's'
0000000000000d19         db  0x74 ; 't'
0000000000000d1a         db  0x64 ; 'd'
0000000000000d1b         db  0x6f ; 'o'
0000000000000d1c         db  0x75 ; 'u'
0000000000000d1d         db  0x74 ; 't'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x6c ; 'l'
0000000000000d20         db  0x73 ; 's'
0000000000000d21         db  0x65 ; 'e'
0000000000000d22         db  0x65 ; 'e'
0000000000000d23         db  0x6b ; 'k'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x6d ; 'm'
0000000000000d26         db  0x65 ; 'e'
0000000000000d27         db  0x6d ; 'm'
0000000000000d28         db  0x63 ; 'c'
0000000000000d29         db  0x70 ; 'p'
0000000000000d2a         db  0x79 ; 'y'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x66 ; 'f'
0000000000000d2d         db  0x63 ; 'c'
0000000000000d2e         db  0x6c ; 'l'
0000000000000d2f         db  0x6f ; 'o'
0000000000000d30         db  0x73 ; 's'
0000000000000d31         db  0x65 ; 'e'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x6d ; 'm'
0000000000000d34         db  0x61 ; 'a'
0000000000000d35         db  0x6c ; 'l'
0000000000000d36         db  0x6c ; 'l'
0000000000000d37         db  0x6f ; 'o'
0000000000000d38         db  0x63 ; 'c'
0000000000000d39         db  0x00 ; '.'
0000000000000d3a         db  0x6d ; 'm'
0000000000000d3b         db  0x62 ; 'b'
0000000000000d3c         db  0x73 ; 's'
0000000000000d3d         db  0x69 ; 'i'
0000000000000d3e         db  0x6e ; 'n'
0000000000000d3f         db  0x69 ; 'i'
0000000000000d40         db  0x74 ; 't'
0000000000000d41         db  0x00 ; '.'
0000000000000d42         db  0x67 ; 'g'
0000000000000d43         db  0x65 ; 'e'
0000000000000d44         db  0x74 ; 't'
0000000000000d45         db  0x67 ; 'g'
0000000000000d46         db  0x69 ; 'i'
0000000000000d47         db  0x64 ; 'd'
0000000000000d48         db  0x00 ; '.'
0000000000000d49         db  0x6e ; 'n'
0000000000000d4a         db  0x6c ; 'l'
0000000000000d4b         db  0x5f ; '_'
0000000000000d4c         db  0x6c ; 'l'
0000000000000d4d         db  0x61 ; 'a'
0000000000000d4e         db  0x6e ; 'n'
0000000000000d4f         db  0x67 ; 'g'
0000000000000d50         db  0x69 ; 'i'
0000000000000d51         db  0x6e ; 'n'
0000000000000d52         db  0x66 ; 'f'
0000000000000d53         db  0x6f ; 'o'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x5f ; '_'
0000000000000d56         db  0x5f ; '_'
0000000000000d57         db  0x63 ; 'c'
0000000000000d58         db  0x74 ; 't'
0000000000000d59         db  0x79 ; 'y'
0000000000000d5a         db  0x70 ; 'p'
0000000000000d5b         db  0x65 ; 'e'
0000000000000d5c         db  0x5f ; '_'
0000000000000d5d         db  0x62 ; 'b'
0000000000000d5e         db  0x5f ; '_'
0000000000000d5f         db  0x6c ; 'l'
0000000000000d60         db  0x6f ; 'o'
0000000000000d61         db  0x63 ; 'c'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x67 ; 'g'
0000000000000d64         db  0x65 ; 'e'
0000000000000d65         db  0x74 ; 't'
0000000000000d66         db  0x65 ; 'e'
0000000000000d67         db  0x6e ; 'n'
0000000000000d68         db  0x76 ; 'v'
0000000000000d69         db  0x00 ; '.'
0000000000000d6a         db  0x6f ; 'o'
0000000000000d6b         db  0x70 ; 'p'
0000000000000d6c         db  0x74 ; 't'
0000000000000d6d         db  0x61 ; 'a'
0000000000000d6e         db  0x72 ; 'r'
0000000000000d6f         db  0x67 ; 'g'
0000000000000d70         db  0x00 ; '.'
0000000000000d71         db  0x5f ; '_'
0000000000000d72         db  0x5f ; '_'
0000000000000d73         db  0x66 ; 'f'
0000000000000d74         db  0x72 ; 'r'
0000000000000d75         db  0x65 ; 'e'
0000000000000d76         db  0x61 ; 'a'
0000000000000d77         db  0x64 ; 'd'
0000000000000d78         db  0x69 ; 'i'
0000000000000d79         db  0x6e ; 'n'
0000000000000d7a         db  0x67 ; 'g'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x73 ; 's'
0000000000000d7d         db  0x74 ; 't'
0000000000000d7e         db  0x64 ; 'd'
0000000000000d7f         db  0x65 ; 'e'
0000000000000d80         db  0x72 ; 'r'
0000000000000d81         db  0x72 ; 'r'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x69 ; 'i'
0000000000000d84         db  0x6f ; 'o'
0000000000000d85         db  0x63 ; 'c'
0000000000000d86         db  0x74 ; 't'
0000000000000d87         db  0x6c ; 'l'
0000000000000d88         db  0x00 ; '.'
0000000000000d89         db  0x67 ; 'g'
0000000000000d8a         db  0x65 ; 'e'
0000000000000d8b         db  0x74 ; 't'
0000000000000d8c         db  0x75 ; 'u'
0000000000000d8d         db  0x69 ; 'i'
0000000000000d8e         db  0x64 ; 'd'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x67 ; 'g'
0000000000000d91         db  0x65 ; 'e'
0000000000000d92         db  0x74 ; 't'
0000000000000d93         db  0x6f ; 'o'
0000000000000d94         db  0x70 ; 'p'
0000000000000d95         db  0x74 ; 't'
0000000000000d96         db  0x5f ; '_'
0000000000000d97         db  0x6c ; 'l'
0000000000000d98         db  0x6f ; 'o'
0000000000000d99         db  0x6e ; 'n'
0000000000000d9a         db  0x67 ; 'g'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x5f ; '_'
0000000000000d9d         db  0x5f ; '_'
0000000000000d9e         db  0x66 ; 'f'
0000000000000d9f         db  0x78 ; 'x'
0000000000000da0         db  0x73 ; 's'
0000000000000da1         db  0x74 ; 't'
0000000000000da2         db  0x61 ; 'a'
0000000000000da3         db  0x74 ; 't'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x66 ; 'f'
0000000000000da6         db  0x69 ; 'i'
0000000000000da7         db  0x6c ; 'l'
0000000000000da8         db  0x65 ; 'e'
0000000000000da9         db  0x6e ; 'n'
0000000000000daa         db  0x6f ; 'o'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x66 ; 'f'
0000000000000dad         db  0x77 ; 'w'
0000000000000dae         db  0x72 ; 'r'
0000000000000daf         db  0x69 ; 'i'
0000000000000db0         db  0x74 ; 't'
0000000000000db1         db  0x65 ; 'e'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x67 ; 'g'
0000000000000db4         db  0x65 ; 'e'
0000000000000db5         db  0x74 ; 't'
0000000000000db6         db  0x74 ; 't'
0000000000000db7         db  0x69 ; 'i'
0000000000000db8         db  0x6d ; 'm'
0000000000000db9         db  0x65 ; 'e'
0000000000000dba         db  0x6f ; 'o'
0000000000000dbb         db  0x66 ; 'f'
0000000000000dbc         db  0x64 ; 'd'
0000000000000dbd         db  0x61 ; 'a'
0000000000000dbe         db  0x79 ; 'y'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x5f ; '_'
0000000000000dc1         db  0x5f ; '_'
0000000000000dc2         db  0x65 ; 'e'
0000000000000dc3         db  0x78 ; 'x'
0000000000000dc4         db  0x70 ; 'p'
0000000000000dc5         db  0x6c ; 'l'
0000000000000dc6         db  0x69 ; 'i'
0000000000000dc7         db  0x63 ; 'c'
0000000000000dc8         db  0x69 ; 'i'
0000000000000dc9         db  0x74 ; 't'
0000000000000dca         db  0x5f ; '_'
0000000000000dcb         db  0x62 ; 'b'
0000000000000dcc         db  0x7a ; 'z'
0000000000000dcd         db  0x65 ; 'e'
0000000000000dce         db  0x72 ; 'r'
0000000000000dcf         db  0x6f ; 'o'
0000000000000dd0         db  0x5f ; '_'
0000000000000dd1         db  0x63 ; 'c'
0000000000000dd2         db  0x68 ; 'h'
0000000000000dd3         db  0x6b ; 'k'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x5f ; '_'
0000000000000dd6         db  0x5f ; '_'
0000000000000dd7         db  0x6d ; 'm'
0000000000000dd8         db  0x65 ; 'e'
0000000000000dd9         db  0x6d ; 'm'
0000000000000dda         db  0x63 ; 'c'
0000000000000ddb         db  0x70 ; 'p'
0000000000000ddc         db  0x79 ; 'y'
0000000000000ddd         db  0x5f ; '_'
0000000000000dde         db  0x63 ; 'c'
0000000000000ddf         db  0x68 ; 'h'
0000000000000de0         db  0x6b ; 'k'
0000000000000de1         db  0x00 ; '.'
0000000000000de2         db  0x5f ; '_'
0000000000000de3         db  0x5f ; '_'
0000000000000de4         db  0x66 ; 'f'
0000000000000de5         db  0x70 ; 'p'
0000000000000de6         db  0x65 ; 'e'
0000000000000de7         db  0x6e ; 'n'
0000000000000de8         db  0x64 ; 'd'
0000000000000de9         db  0x69 ; 'i'
0000000000000dea         db  0x6e ; 'n'
0000000000000deb         db  0x67 ; 'g'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x73 ; 's'
0000000000000dee         db  0x74 ; 't'
0000000000000def         db  0x72 ; 'r'
0000000000000df0         db  0x63 ; 'c'
0000000000000df1         db  0x68 ; 'h'
0000000000000df2         db  0x72 ; 'r'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x70 ; 'p'
0000000000000df5         db  0x72 ; 'r'
0000000000000df6         db  0x6f ; 'o'
0000000000000df7         db  0x67 ; 'g'
0000000000000df8         db  0x72 ; 'r'
0000000000000df9         db  0x61 ; 'a'
0000000000000dfa         db  0x6d ; 'm'
0000000000000dfb         db  0x5f ; '_'
0000000000000dfc         db  0x69 ; 'i'
0000000000000dfd         db  0x6e ; 'n'
0000000000000dfe         db  0x76 ; 'v'
0000000000000dff         db  0x6f ; 'o'
                     aCationshortnam:
0000000000000e00         db         "cation_short_name", 0
0000000000000e12         db  0x66 ; 'f'
0000000000000e13         db  0x64 ; 'd'
0000000000000e14         db  0x6f ; 'o'
0000000000000e15         db  0x70 ; 'p'
0000000000000e16         db  0x65 ; 'e'
0000000000000e17         db  0x6e ; 'n'
0000000000000e18         db  0x00 ; '.'
0000000000000e19         db  0x5f ; '_'
0000000000000e1a         db  0x5f ; '_'
0000000000000e1b         db  0x73 ; 's'
0000000000000e1c         db  0x74 ; 't'
0000000000000e1d         db  0x72 ; 'r'
0000000000000e1e         db  0x63 ; 'c'
0000000000000e1f         db  0x70 ; 'p'
0000000000000e20         db  0x79 ; 'y'
0000000000000e21         db  0x5f ; '_'
0000000000000e22         db  0x63 ; 'c'
0000000000000e23         db  0x68 ; 'h'
0000000000000e24         db  0x6b ; 'k'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x5f ; '_'
0000000000000e27         db  0x5f ; '_'
0000000000000e28         db  0x63 ; 'c'
0000000000000e29         db  0x78 ; 'x'
0000000000000e2a         db  0x61 ; 'a'
0000000000000e2b         db  0x5f ; '_'
0000000000000e2c         db  0x66 ; 'f'
0000000000000e2d         db  0x69 ; 'i'
0000000000000e2e         db  0x6e ; 'n'
0000000000000e2f         db  0x61 ; 'a'
0000000000000e30         db  0x6c ; 'l'
0000000000000e31         db  0x69 ; 'i'
0000000000000e32         db  0x7a ; 'z'
0000000000000e33         db  0x65 ; 'e'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x73 ; 's'
0000000000000e36         db  0x79 ; 'y'
0000000000000e37         db  0x73 ; 's'
0000000000000e38         db  0x63 ; 'c'
0000000000000e39         db  0x61 ; 'a'
0000000000000e3a         db  0x6c ; 'l'
0000000000000e3b         db  0x6c ; 'l'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x73 ; 's'
0000000000000e3e         db  0x65 ; 'e'
0000000000000e3f         db  0x74 ; 't'
0000000000000e40         db  0x76 ; 'v'
0000000000000e41         db  0x62 ; 'b'
0000000000000e42         db  0x75 ; 'u'
0000000000000e43         db  0x66 ; 'f'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x66 ; 'f'
0000000000000e46         db  0x63 ; 'c'
0000000000000e47         db  0x6e ; 'n'
0000000000000e48         db  0x74 ; 't'
0000000000000e49         db  0x6c ; 'l'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x5f ; '_'
0000000000000e4c         db  0x5f ; '_'
0000000000000e4d         db  0x73 ; 's'
0000000000000e4e         db  0x70 ; 'p'
0000000000000e4f         db  0x72 ; 'r'
0000000000000e50         db  0x69 ; 'i'
0000000000000e51         db  0x6e ; 'n'
0000000000000e52         db  0x74 ; 't'
0000000000000e53         db  0x66 ; 'f'
0000000000000e54         db  0x5f ; '_'
0000000000000e55         db  0x63 ; 'c'
0000000000000e56         db  0x68 ; 'h'
0000000000000e57         db  0x6b ; 'k'
0000000000000e58         db  0x00 ; '.'
0000000000000e59         db  0x6d ; 'm'
0000000000000e5a         db  0x65 ; 'e'
0000000000000e5b         db  0x6d ; 'm'
0000000000000e5c         db  0x6d ; 'm'
0000000000000e5d         db  0x6f ; 'o'
0000000000000e5e         db  0x76 ; 'v'
0000000000000e5f         db  0x65 ; 'e'
0000000000000e60         db  0x00 ; '.'
0000000000000e61         db  0x62 ; 'b'
0000000000000e62         db  0x69 ; 'i'
0000000000000e63         db  0x6e ; 'n'
0000000000000e64         db  0x64 ; 'd'
0000000000000e65         db  0x74 ; 't'
0000000000000e66         db  0x65 ; 'e'
0000000000000e67         db  0x78 ; 'x'
0000000000000e68         db  0x74 ; 't'
0000000000000e69         db  0x64 ; 'd'
0000000000000e6a         db  0x6f ; 'o'
0000000000000e6b         db  0x6d ; 'm'
0000000000000e6c         db  0x61 ; 'a'
0000000000000e6d         db  0x69 ; 'i'
0000000000000e6e         db  0x6e ; 'n'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x5f ; '_'
0000000000000e71         db  0x5f ; '_'
0000000000000e72         db  0x66 ; 'f'
0000000000000e73         db  0x78 ; 'x'
0000000000000e74         db  0x73 ; 's'
0000000000000e75         db  0x74 ; 't'
0000000000000e76         db  0x61 ; 'a'
0000000000000e77         db  0x74 ; 't'
0000000000000e78         db  0x61 ; 'a'
0000000000000e79         db  0x74 ; 't'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x73 ; 's'
0000000000000e7c         db  0x74 ; 't'
0000000000000e7d         db  0x72 ; 'r'
0000000000000e7e         db  0x63 ; 'c'
0000000000000e7f         db  0x6d ; 'm'
0000000000000e80         db  0x70 ; 'p'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x5f ; '_'
0000000000000e83         db  0x5f ; '_'
0000000000000e84         db  0x6c ; 'l'
0000000000000e85         db  0x69 ; 'i'
0000000000000e86         db  0x62 ; 'b'
0000000000000e87         db  0x63 ; 'c'
0000000000000e88         db  0x5f ; '_'
0000000000000e89         db  0x73 ; 's'
0000000000000e8a         db  0x74 ; 't'
0000000000000e8b         db  0x61 ; 'a'
0000000000000e8c         db  0x72 ; 'r'
0000000000000e8d         db  0x74 ; 't'
0000000000000e8e         db  0x5f ; '_'
0000000000000e8f         db  0x6d ; 'm'
0000000000000e90         db  0x61 ; 'a'
0000000000000e91         db  0x69 ; 'i'
0000000000000e92         db  0x6e ; 'n'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x66 ; 'f'
0000000000000e95         db  0x73 ; 's'
0000000000000e96         db  0x65 ; 'e'
0000000000000e97         db  0x65 ; 'e'
0000000000000e98         db  0x6b ; 'k'
0000000000000e99         db  0x6f ; 'o'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x5f ; '_'
0000000000000e9c         db  0x5f ; '_'
0000000000000e9d         db  0x6f ; 'o'
0000000000000e9e         db  0x76 ; 'v'
0000000000000e9f         db  0x65 ; 'e'
0000000000000ea0         db  0x72 ; 'r'
0000000000000ea1         db  0x66 ; 'f'
0000000000000ea2         db  0x6c ; 'l'
0000000000000ea3         db  0x6f ; 'o'
0000000000000ea4         db  0x77 ; 'w'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x5f ; '_'
0000000000000ea7         db  0x5f ; '_'
0000000000000ea8         db  0x73 ; 's'
0000000000000ea9         db  0x74 ; 't'
0000000000000eaa         db  0x72 ; 'r'
0000000000000eab         db  0x74 ; 't'
0000000000000eac         db  0x6f ; 'o'
0000000000000ead         db  0x75 ; 'u'
0000000000000eae         db  0x6c ; 'l'
0000000000000eaf         db  0x5f ; '_'
0000000000000eb0         db  0x69 ; 'i'
0000000000000eb1         db  0x6e ; 'n'
0000000000000eb2         db  0x74 ; 't'
0000000000000eb3         db  0x65 ; 'e'
0000000000000eb4         db  0x72 ; 'r'
0000000000000eb5         db  0x6e ; 'n'
0000000000000eb6         db  0x61 ; 'a'
0000000000000eb7         db  0x6c ; 'l'
0000000000000eb8         db  0x00 ; '.'
0000000000000eb9         db  0x66 ; 'f'
0000000000000eba         db  0x70 ; 'p'
0000000000000ebb         db  0x75 ; 'u'
0000000000000ebc         db  0x74 ; 't'
0000000000000ebd         db  0x73 ; 's'
0000000000000ebe         db  0x5f ; '_'
0000000000000ebf         db  0x75 ; 'u'
0000000000000ec0         db  0x6e ; 'n'
0000000000000ec1         db  0x6c ; 'l'
0000000000000ec2         db  0x6f ; 'o'
0000000000000ec3         db  0x63 ; 'c'
0000000000000ec4         db  0x6b ; 'k'
0000000000000ec5         db  0x65 ; 'e'
0000000000000ec6         db  0x64 ; 'd'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x66 ; 'f'
0000000000000ec9         db  0x72 ; 'r'
0000000000000eca         db  0x65 ; 'e'
0000000000000ecb         db  0x65 ; 'e'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x5f ; '_'
0000000000000ece         db  0x5f ; '_'
0000000000000ecf         db  0x70 ; 'p'
0000000000000ed0         db  0x72 ; 'r'
0000000000000ed1         db  0x6f ; 'o'
0000000000000ed2         db  0x67 ; 'g'
0000000000000ed3         db  0x6e ; 'n'
0000000000000ed4         db  0x61 ; 'a'
0000000000000ed5         db  0x6d ; 'm'
0000000000000ed6         db  0x65 ; 'e'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x5f ; '_'
0000000000000ed9         db  0x5f ; '_'
0000000000000eda         db  0x70 ; 'p'
0000000000000edb         db  0x72 ; 'r'
0000000000000edc         db  0x6f ; 'o'
0000000000000edd         db  0x67 ; 'g'
0000000000000ede         db  0x6e ; 'n'
0000000000000edf         db  0x61 ; 'a'
0000000000000ee0         db  0x6d ; 'm'
0000000000000ee1         db  0x65 ; 'e'
0000000000000ee2         db  0x5f ; '_'
0000000000000ee3         db  0x66 ; 'f'
0000000000000ee4         db  0x75 ; 'u'
0000000000000ee5         db  0x6c ; 'l'
0000000000000ee6         db  0x6c ; 'l'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x5f ; '_'
0000000000000ee9         db  0x5f ; '_'
0000000000000eea         db  0x63 ; 'c'
0000000000000eeb         db  0x78 ; 'x'
0000000000000eec         db  0x61 ; 'a'
0000000000000eed         db  0x5f ; '_'
0000000000000eee         db  0x61 ; 'a'
0000000000000eef         db  0x74 ; 't'
0000000000000ef0         db  0x65 ; 'e'
0000000000000ef1         db  0x78 ; 'x'
0000000000000ef2         db  0x69 ; 'i'
0000000000000ef3         db  0x74 ; 't'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x47 ; 'G'
0000000000000ef6         db  0x4c ; 'L'
0000000000000ef7         db  0x49 ; 'I'
0000000000000ef8         db  0x42 ; 'B'
0000000000000ef9         db  0x43 ; 'C'
0000000000000efa         db  0x5f ; '_'
0000000000000efb         db  0x32 ; '2'
0000000000000efc         db  0x2e ; '.'
0000000000000efd         db  0x33 ; '3'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x47 ; 'G'
                     aLibc225:
0000000000000f00         db         "LIBC_2.25", 0
0000000000000f0a         db  0x47 ; 'G'
0000000000000f0b         db  0x4c ; 'L'
0000000000000f0c         db  0x49 ; 'I'
0000000000000f0d         db  0x42 ; 'B'
0000000000000f0e         db  0x43 ; 'C'
0000000000000f0f         db  0x5f ; '_'
0000000000000f10         db  0x32 ; '2'
0000000000000f11         db  0x2e ; '.'
0000000000000f12         db  0x31 ; '1'
0000000000000f13         db  0x34 ; '4'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x47 ; 'G'
0000000000000f16         db  0x4c ; 'L'
0000000000000f17         db  0x49 ; 'I'
0000000000000f18         db  0x42 ; 'B'
0000000000000f19         db  0x43 ; 'C'
0000000000000f1a         db  0x5f ; '_'
0000000000000f1b         db  0x32 ; '2'
0000000000000f1c         db  0x2e ; '.'
0000000000000f1d         db  0x33 ; '3'
0000000000000f1e         db  0x2e ; '.'
0000000000000f1f         db  0x34 ; '4'
0000000000000f20         db  0x00 ; '.'
0000000000000f21         db  0x47 ; 'G'
0000000000000f22         db  0x4c ; 'L'
0000000000000f23         db  0x49 ; 'I'
0000000000000f24         db  0x42 ; 'B'
0000000000000f25         db  0x43 ; 'C'
0000000000000f26         db  0x5f ; '_'
0000000000000f27         db  0x32 ; '2'
0000000000000f28         db  0x2e ; '.'
0000000000000f29         db  0x34 ; '4'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x47 ; 'G'
0000000000000f2c         db  0x4c ; 'L'
0000000000000f2d         db  0x49 ; 'I'
0000000000000f2e         db  0x42 ; 'B'
0000000000000f2f         db  0x43 ; 'C'
0000000000000f30         db  0x5f ; '_'
0000000000000f31         db  0x32 ; '2'
0000000000000f32         db  0x2e ; '.'
0000000000000f33         db  0x32 ; '2'
0000000000000f34         db  0x2e ; '.'
0000000000000f35         db  0x35 ; '5'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x5f ; '_'
0000000000000f38         db  0x49 ; 'I'
0000000000000f39         db  0x54 ; 'T'
0000000000000f3a         db  0x4d ; 'M'
0000000000000f3b         db  0x5f ; '_'
0000000000000f3c         db  0x64 ; 'd'
0000000000000f3d         db  0x65 ; 'e'
0000000000000f3e         db  0x72 ; 'r'
0000000000000f3f         db  0x65 ; 'e'
0000000000000f40         db  0x67 ; 'g'
0000000000000f41         db  0x69 ; 'i'
0000000000000f42         db  0x73 ; 's'
0000000000000f43         db  0x74 ; 't'
0000000000000f44         db  0x65 ; 'e'
0000000000000f45         db  0x72 ; 'r'
0000000000000f46         db  0x54 ; 'T'
0000000000000f47         db  0x4d ; 'M'
0000000000000f48         db  0x43 ; 'C'
0000000000000f49         db  0x6c ; 'l'
0000000000000f4a         db  0x6f ; 'o'
0000000000000f4b         db  0x6e ; 'n'
0000000000000f4c         db  0x65 ; 'e'
0000000000000f4d         db  0x54 ; 'T'
0000000000000f4e         db  0x61 ; 'a'
0000000000000f4f         db  0x62 ; 'b'
0000000000000f50         db  0x6c ; 'l'
0000000000000f51         db  0x65 ; 'e'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x5f ; '_'
0000000000000f54         db  0x5f ; '_'
0000000000000f55         db  0x67 ; 'g'
0000000000000f56         db  0x6d ; 'm'
0000000000000f57         db  0x6f ; 'o'
0000000000000f58         db  0x6e ; 'n'
0000000000000f59         db  0x5f ; '_'
0000000000000f5a         db  0x73 ; 's'
0000000000000f5b         db  0x74 ; 't'
0000000000000f5c         db  0x61 ; 'a'
0000000000000f5d         db  0x72 ; 'r'
0000000000000f5e         db  0x74 ; 't'
0000000000000f5f         db  0x5f ; '_'
0000000000000f60         db  0x5f ; '_'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x5f ; '_'
0000000000000f63         db  0x49 ; 'I'
0000000000000f64         db  0x54 ; 'T'
0000000000000f65         db  0x4d ; 'M'
0000000000000f66         db  0x5f ; '_'
0000000000000f67         db  0x72 ; 'r'
0000000000000f68         db  0x65 ; 'e'
0000000000000f69         db  0x67 ; 'g'
0000000000000f6a         db  0x69 ; 'i'
0000000000000f6b         db  0x73 ; 's'
0000000000000f6c         db  0x74 ; 't'
0000000000000f6d         db  0x65 ; 'e'
0000000000000f6e         db  0x72 ; 'r'
0000000000000f6f         db  0x54 ; 'T'
0000000000000f70         db  0x4d ; 'M'
0000000000000f71         db  0x43 ; 'C'
0000000000000f72         db  0x6c ; 'l'
0000000000000f73         db  0x6f ; 'o'
0000000000000f74         db  0x6e ; 'n'
0000000000000f75         db  0x65 ; 'e'
0000000000000f76         db  0x54 ; 'T'
0000000000000f77         db  0x61 ; 'a'
0000000000000f78         db  0x62 ; 'b'
0000000000000f79         db  0x6c ; 'l'
0000000000000f7a         db  0x65 ; 'e'
0000000000000f7b         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xf7c; 0x1036[ (186 bytes)
        ; File offset : [3964; 4150[ (186 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x02 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x02 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x02 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x02 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x02 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x02 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x02 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x02 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x02 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x03 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x02 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x02 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x02 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x02 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x02 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x02 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x02 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x02 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x02 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x02 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x02 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x02 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x03 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x02 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x02 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x02 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x02 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x03 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x02 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x02 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x02 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x02 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x02 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x02 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x02 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x02 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x02 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x02 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x02 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x02 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x02 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x02 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x02 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x04 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x02 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x05 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x02 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x02 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x02 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x02 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x02 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x02 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x02 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x02 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x02 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x02 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x04 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x02 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x02 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x04 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x02 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x02 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x02 ; '.'
0000000000000fff         db  0x00 ; '.'                                         ; DATA XREF=dopass+90, dopass+470
0000000000001000         db  0x02 ; '.'                                         ; DATA XREF=dopass+536, do_wipefd+142, randread_new+97, randread_new+104
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x02 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x06 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x02 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x02 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x02 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x02 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x03 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x02 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x02 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x02 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x02 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x04 ; '.'                                         ; DATA XREF=randread_new+270
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x02 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x02 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x02 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x07 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x04 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x02 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x02 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x02 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x02 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x02 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x02 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x02 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x02 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0x1038; 0x10a8[ (112 bytes)
        ; File offset : [4152; 4264[ (112 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000001038         db  0x01 ; '.'                                         ; DATA XREF=randread_new+74, randread_new+176, randread_new+328, randread_free+12
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x06 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x01 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x10 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x13 ; '.'
0000000000001049         db  0x69 ; 'i'
000000000000104a         db  0x69 ; 'i'
000000000000104b         db  0x0d ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x07 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x5d ; ']'
0000000000001051         db  0x03 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x10 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x85 ; '.'
0000000000001059         db  0x91 ; '.'
000000000000105a         db  0x96 ; '.'
000000000000105b         db  0x06 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x06 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x67 ; 'g'
0000000000001061         db  0x03 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x10 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x94 ; '.'
0000000000001069         db  0x91 ; '.'
000000000000106a         db  0x96 ; '.'
000000000000106b         db  0x06 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x05 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x72 ; 'r'
0000000000001071         db  0x03 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x10 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x74 ; 't'
0000000000001079         db  0x19 ; '.'
000000000000107a         db  0x69 ; 'i'
000000000000107b         db  0x09 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x04 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x7d ; '}'
0000000000001081         db  0x03 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x10 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x14 ; '.'
0000000000001089         db  0x69 ; 'i'
000000000000108a         db  0x69 ; 'i'
000000000000108b         db  0x0d ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x03 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x89 ; '.'
0000000000001091         db  0x03 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x10 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x75 ; 'u'
0000000000001099         db  0x1a ; '.'
000000000000109a         db  0x69 ; 'i'
000000000000109b         db  0x09 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x02 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x93 ; '.'
00000000000010a1         db  0x03 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0x10a8; 0x14b0[ (1032 bytes)
        ; File offset : [4264; 5296[ (1032 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

00000000000010a8         db  0x50 ; 'P'
00000000000010a9         db  0xd9 ; '.'
00000000000010aa         db  0x20 ; ' '
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x08 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x40 ; '@'
00000000000010b9         db  0x2b ; '+'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x58 ; 'X'
00000000000010c1         db  0xd9 ; '.'
00000000000010c2         db  0x20 ; ' '
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x08 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x00 ; '.'
00000000000010d1         db  0x2b ; '+'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x60 ; '`'
00000000000010d9         db  0xd9 ; '.'
00000000000010da         db  0x20 ; ' '
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x08 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x29 ; ')'
00000000000010e9         db  0x98 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x80 ; '.'
00000000000010f1         db  0xd9 ; '.'
00000000000010f2         db  0x20 ; ' '
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x08 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x2f ; '/'
0000000000001101         db  0x98 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0xa0 ; '.'
0000000000001109         db  0xd9 ; '.'
000000000000110a         db  0x20 ; ' '
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x08 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x35 ; '5'
0000000000001119         db  0x98 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0xc0 ; '.'
0000000000001121         db  0xd9 ; '.'
0000000000001122         db  0x20 ; ' '
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x08 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x68 ; 'h'
0000000000001131         db  0x97 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0xe0 ; '.'
0000000000001139         db  0xd9 ; '.'
000000000000113a         db  0x20 ; ' '
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x08 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x40 ; '@'
0000000000001149         db  0x98 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x00 ; '.'
0000000000001151         db  0xda ; '.'
0000000000001152         db  0x20 ; ' '
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x08 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x16 ; '.'
0000000000001161         db  0x98 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x20 ; ' '
0000000000001169         db  0xda ; '.'
000000000000116a         db  0x20 ; ' '
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x08 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x4e ; 'N'
0000000000001179         db  0x98 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x40 ; '@'
0000000000001181         db  0xda ; '.'
0000000000001182         db  0x20 ; ' '
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x08 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x56 ; 'V'
0000000000001191         db  0x98 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x60 ; '`'
0000000000001199         db  0xda ; '.'
000000000000119a         db  0x20 ; ' '
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x08 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x5b ; '['
00000000000011a9         db  0x98 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x80 ; '.'
00000000000011b1         db  0xda ; '.'
00000000000011b2         db  0x20 ; ' '
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x08 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x60 ; '`'
00000000000011c1         db  0x98 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0xc0 ; '.'
00000000000011c9         db  0xda ; '.'
00000000000011ca         db  0x20 ; ' '
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x08 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x68 ; 'h'
00000000000011d9         db  0x98 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0xc8 ; '.'
00000000000011e1         db  0xda ; '.'
00000000000011e2         db  0x20 ; ' '
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x08 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x6f ; 'o'
00000000000011f1         db  0x98 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0xd0 ; '.'
00000000000011f9         db  0xda ; '.'
00000000000011fa         db  0x20 ; ' '
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x08 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x74 ; 't'
0000000000001209         db  0x98 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0xe0 ; '.'
0000000000001211         db  0xda ; '.'
0000000000001212         db  0x20 ; ' '
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x08 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0xc1 ; '.'
0000000000001221         db  0xa7 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0xe8 ; '.'
0000000000001229         db  0xda ; '.'
000000000000122a         db  0x20 ; ' '
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x08 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0xd0 ; '.'
0000000000001239         db  0xa7 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x00 ; '.'
0000000000001241         db  0xdb ; '.'
0000000000001242         db  0x20 ; ' '
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x08 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x69 ; 'i'
0000000000001251         db  0xa8 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x08 ; '.'
0000000000001259         db  0xdb ; '.'
000000000000125a         db  0x20 ; ' '
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x08 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x71 ; 'q'
0000000000001269         db  0xa8 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x10 ; '.'
0000000000001271         db  0xdb ; '.'
0000000000001272         db  0x20 ; ' '
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x08 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x77 ; 'w'
0000000000001281         db  0xa8 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x18 ; '.'
0000000000001289         db  0xdb ; '.'
000000000000128a         db  0x20 ; ' '
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x08 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x84 ; '.'
0000000000001299         db  0xa8 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x20 ; ' '
00000000000012a1         db  0xdb ; '.'
00000000000012a2         db  0x20 ; ' '
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x08 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x91 ; '.'
00000000000012b1         db  0xa8 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x28 ; '('
00000000000012b9         db  0xdb ; '.'
00000000000012ba         db  0x20 ; ' '
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x08 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0xf4 ; '.'
00000000000012c9         db  0x97 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x30 ; '0'
00000000000012d1         db  0xdb ; '.'
00000000000012d2         db  0x20 ; ' '
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x08 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0xa5 ; '.'
00000000000012e1         db  0xa8 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x38 ; '8'
00000000000012e9         db  0xdb ; '.'
00000000000012ea         db  0x20 ; ' '
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x08 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x8a ; '.'
00000000000012f9         db  0xa8 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x40 ; '@'
0000000000001301         db  0xdb ; '.'
0000000000001302         db  0x20 ; ' '
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x08 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x32 ; '2'
0000000000001311         db  0x97 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x48 ; 'H'
0000000000001319         db  0xdb ; '.'
000000000000131a         db  0x20 ; ' '
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x08 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0xad ; '.'
0000000000001329         db  0xa8 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x08 ; '.'
0000000000001331         db  0xe0 ; '.'
0000000000001332         db  0x20 ; ' '
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x08 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x08 ; '.'
0000000000001341         db  0xe0 ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x10 ; '.'
0000000000001349         db  0xe0 ; '.'
000000000000134a         db  0x20 ; ' '
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x08 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x0c ; '.'
0000000000001359         db  0xa7 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x18 ; '.'
0000000000001361         db  0xe0 ; '.'
0000000000001362         db  0x20 ; ' '
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x08 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0xe0 ; '.'
0000000000001371         db  0x40 ; '@'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x80 ; '.'
0000000000001379         db  0xe0 ; '.'
000000000000137a         db  0x20 ; ' '
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x08 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x90 ; '.'
0000000000001389         db  0xe0 ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x98 ; '.'
0000000000001391         db  0xe0 ; '.'
0000000000001392         db  0x20 ; ' '
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x08 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x20 ; ' '
00000000000013a1         db  0xe1 ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0xd8 ; '.'
00000000000013a9         db  0xdf ; '.'
00000000000013aa         db  0x20 ; ' '
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x06 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x08 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x00 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0xe0 ; '.'
00000000000013c1         db  0xdf ; '.'
00000000000013c2         db  0x20 ; ' '
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x06 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x28 ; '('
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x00 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0xe8 ; '.'
00000000000013d9         db  0xdf ; '.'
00000000000013da         db  0x20 ; ' '
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x06 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x2f ; '/'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x00 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0xf0 ; '.'
00000000000013f1         db  0xdf ; '.'
00000000000013f2         db  0x20 ; ' '
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x06 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x4f ; 'O'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x00 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0xf8 ; '.'
0000000000001409         db  0xdf ; '.'
000000000000140a         db  0x20 ; ' '
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x06 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x52 ; 'R'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x00 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0xa0 ; '.'
0000000000001421         db  0xe0 ; '.'
0000000000001422         db  0x20 ; ' '
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x05 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x56 ; 'V'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x00 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0xa8 ; '.'
0000000000001439         db  0xe0 ; '.'
000000000000143a         db  0x20 ; ' '
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x05 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x55 ; 'U'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x00 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0xb0 ; '.'
0000000000001451         db  0xe0 ; '.'
0000000000001452         db  0x20 ; ' '
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x05 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x5b ; '['
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x00 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0xb8 ; '.'
0000000000001469         db  0xe0 ; '.'
000000000000146a         db  0x20 ; ' '
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x05 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x5c ; '\'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x00 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x00 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0xc0 ; '.'
0000000000001481         db  0xe0 ; '.'
0000000000001482         db  0x20 ; ' '
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x00 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x05 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x58 ; 'X'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x00 ; '.'
0000000000001491         db  0x00 ; '.'
0000000000001492         db  0x00 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0xe0 ; '.'
0000000000001499         db  0xe0 ; '.'
000000000000149a         db  0x20 ; ' '
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x05 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x5a ; 'Z'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x00 ; '.'
00000000000014a9         db  0x00 ; '.'
00000000000014aa         db  0x00 ; '.'
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x14b0; 0x1c18[ (1896 bytes)
        ; File offset : [5296; 7192[ (1896 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

00000000000014b0         db  0x60 ; '`'
00000000000014b1         db  0xdd ; '.'
00000000000014b2         db  0x20 ; ' '
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x00 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x07 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x01 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x00 ; '.'
00000000000014c1         db  0x00 ; '.'
00000000000014c2         db  0x00 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x68 ; 'h'
00000000000014c9         db  0xdd ; '.'
00000000000014ca         db  0x20 ; ' '
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x00 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x07 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x02 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x00 ; '.'
00000000000014d9         db  0x00 ; '.'
00000000000014da         db  0x00 ; '.'
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x70 ; 'p'
00000000000014e1         db  0xdd ; '.'
00000000000014e2         db  0x20 ; ' '
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x00 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x07 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x00 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x03 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x00 ; '.'
00000000000014f1         db  0x00 ; '.'
00000000000014f2         db  0x00 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x00 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x78 ; 'x'
00000000000014f9         db  0xdd ; '.'
00000000000014fa         db  0x20 ; ' '
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x07 ; '.'
0000000000001501         db  0x00 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x04 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x00 ; '.'
0000000000001509         db  0x00 ; '.'
000000000000150a         db  0x00 ; '.'
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x80 ; '.'
0000000000001511         db  0xdd ; '.'
0000000000001512         db  0x20 ; ' '
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x00 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x07 ; '.'
0000000000001519         db  0x00 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x05 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x00 ; '.'
0000000000001521         db  0x00 ; '.'
0000000000001522         db  0x00 ; '.'
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x88 ; '.'
0000000000001529         db  0xdd ; '.'
000000000000152a         db  0x20 ; ' '
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x00 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x07 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x00 ; '.'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x06 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0x00 ; '.'
0000000000001539         db  0x00 ; '.'
000000000000153a         db  0x00 ; '.'
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x90 ; '.'
0000000000001541         db  0xdd ; '.'
0000000000001542         db  0x20 ; ' '
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x00 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x07 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x07 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x00 ; '.'
0000000000001551         db  0x00 ; '.'
0000000000001552         db  0x00 ; '.'
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x98 ; '.'
0000000000001559         db  0xdd ; '.'
000000000000155a         db  0x20 ; ' '
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x07 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x00 ; '.'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x09 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x00 ; '.'
0000000000001569         db  0x00 ; '.'
000000000000156a         db  0x00 ; '.'
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x00 ; '.'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0xa0 ; '.'
0000000000001571         db  0xdd ; '.'
0000000000001572         db  0x20 ; ' '
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x00 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x07 ; '.'
0000000000001579         db  0x00 ; '.'
000000000000157a         db  0x00 ; '.'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x0a ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x00 ; '.'
0000000000001581         db  0x00 ; '.'
0000000000001582         db  0x00 ; '.'
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x00 ; '.'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0xa8 ; '.'
0000000000001589         db  0xdd ; '.'
000000000000158a         db  0x20 ; ' '
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x00 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x07 ; '.'
0000000000001591         db  0x00 ; '.'
0000000000001592         db  0x00 ; '.'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x0b ; '.'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x00 ; '.'
0000000000001599         db  0x00 ; '.'
000000000000159a         db  0x00 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x00 ; '.'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0xb0 ; '.'
00000000000015a1         db  0xdd ; '.'
00000000000015a2         db  0x20 ; ' '
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x00 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x07 ; '.'
00000000000015a9         db  0x00 ; '.'
00000000000015aa         db  0x00 ; '.'
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x0c ; '.'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x00 ; '.'
00000000000015b1         db  0x00 ; '.'
00000000000015b2         db  0x00 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x00 ; '.'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0xb8 ; '.'
00000000000015b9         db  0xdd ; '.'
00000000000015ba         db  0x20 ; ' '
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x00 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x07 ; '.'
00000000000015c1         db  0x00 ; '.'
00000000000015c2         db  0x00 ; '.'
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x0d ; '.'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x00 ; '.'
00000000000015c9         db  0x00 ; '.'
00000000000015ca         db  0x00 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x00 ; '.'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0xc0 ; '.'
00000000000015d1         db  0xdd ; '.'
00000000000015d2         db  0x20 ; ' '
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x00 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x07 ; '.'
00000000000015d9         db  0x00 ; '.'
00000000000015da         db  0x00 ; '.'
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x0e ; '.'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x00 ; '.'
00000000000015e1         db  0x00 ; '.'
00000000000015e2         db  0x00 ; '.'
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x00 ; '.'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0xc8 ; '.'
00000000000015e9         db  0xdd ; '.'
00000000000015ea         db  0x20 ; ' '
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x00 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x07 ; '.'
00000000000015f1         db  0x00 ; '.'
00000000000015f2         db  0x00 ; '.'
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x0f ; '.'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x00 ; '.'
00000000000015f9         db  0x00 ; '.'
00000000000015fa         db  0x00 ; '.'
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x00 ; '.'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0xd0 ; '.'
0000000000001601         db  0xdd ; '.'
0000000000001602         db  0x20 ; ' '
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x00 ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x07 ; '.'
0000000000001609         db  0x00 ; '.'
000000000000160a         db  0x00 ; '.'
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x10 ; '.'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x00 ; '.'
0000000000001611         db  0x00 ; '.'
0000000000001612         db  0x00 ; '.'
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x00 ; '.'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0xd8 ; '.'
0000000000001619         db  0xdd ; '.'
000000000000161a         db  0x20 ; ' '
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x00 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x07 ; '.'
0000000000001621         db  0x00 ; '.'
0000000000001622         db  0x00 ; '.'
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x11 ; '.'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x00 ; '.'
0000000000001629         db  0x00 ; '.'
000000000000162a         db  0x00 ; '.'
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x00 ; '.'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0xe0 ; '.'
0000000000001631         db  0xdd ; '.'
0000000000001632         db  0x20 ; ' '
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x00 ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x07 ; '.'
0000000000001639         db  0x00 ; '.'
000000000000163a         db  0x00 ; '.'
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x12 ; '.'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x00 ; '.'
0000000000001641         db  0x00 ; '.'
0000000000001642         db  0x00 ; '.'
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x00 ; '.'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0xe8 ; '.'
0000000000001649         db  0xdd ; '.'
000000000000164a         db  0x20 ; ' '
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x00 ; '.'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0x07 ; '.'
0000000000001651         db  0x00 ; '.'
0000000000001652         db  0x00 ; '.'
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x13 ; '.'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0x00 ; '.'
0000000000001659         db  0x00 ; '.'
000000000000165a         db  0x00 ; '.'
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x00 ; '.'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0xf0 ; '.'
0000000000001661         db  0xdd ; '.'
0000000000001662         db  0x20 ; ' '
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x00 ; '.'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0x07 ; '.'
0000000000001669         db  0x00 ; '.'
000000000000166a         db  0x00 ; '.'
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x14 ; '.'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0x00 ; '.'
0000000000001671         db  0x00 ; '.'
0000000000001672         db  0x00 ; '.'
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x00 ; '.'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0xf8 ; '.'
0000000000001679         db  0xdd ; '.'
000000000000167a         db  0x20 ; ' '
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x00 ; '.'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0x07 ; '.'
0000000000001681         db  0x00 ; '.'
0000000000001682         db  0x00 ; '.'
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x15 ; '.'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0x00 ; '.'
0000000000001689         db  0x00 ; '.'
000000000000168a         db  0x00 ; '.'
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x00 ; '.'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x00 ; '.'
0000000000001691         db  0xde ; '.'
0000000000001692         db  0x20 ; ' '
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x00 ; '.'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0x07 ; '.'
0000000000001699         db  0x00 ; '.'
000000000000169a         db  0x00 ; '.'
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x16 ; '.'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0x00 ; '.'
00000000000016a1         db  0x00 ; '.'
00000000000016a2         db  0x00 ; '.'
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x00 ; '.'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x08 ; '.'
00000000000016a9         db  0xde ; '.'
00000000000016aa         db  0x20 ; ' '
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x00 ; '.'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0x07 ; '.'
00000000000016b1         db  0x00 ; '.'
00000000000016b2         db  0x00 ; '.'
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x17 ; '.'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0x00 ; '.'
00000000000016b9         db  0x00 ; '.'
00000000000016ba         db  0x00 ; '.'
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x00 ; '.'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x10 ; '.'
00000000000016c1         db  0xde ; '.'
00000000000016c2         db  0x20 ; ' '
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x00 ; '.'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0x07 ; '.'
00000000000016c9         db  0x00 ; '.'
00000000000016ca         db  0x00 ; '.'
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x18 ; '.'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'
00000000000016d0         db  0x00 ; '.'
00000000000016d1         db  0x00 ; '.'
00000000000016d2         db  0x00 ; '.'
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x00 ; '.'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0x18 ; '.'
00000000000016d9         db  0xde ; '.'
00000000000016da         db  0x20 ; ' '
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x00 ; '.'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'
00000000000016e0         db  0x07 ; '.'
00000000000016e1         db  0x00 ; '.'
00000000000016e2         db  0x00 ; '.'
00000000000016e3         db  0x00 ; '.'
00000000000016e4         db  0x19 ; '.'
00000000000016e5         db  0x00 ; '.'
00000000000016e6         db  0x00 ; '.'
00000000000016e7         db  0x00 ; '.'
00000000000016e8         db  0x00 ; '.'
00000000000016e9         db  0x00 ; '.'
00000000000016ea         db  0x00 ; '.'
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x00 ; '.'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'
00000000000016f0         db  0x20 ; ' '
00000000000016f1         db  0xde ; '.'
00000000000016f2         db  0x20 ; ' '
00000000000016f3         db  0x00 ; '.'
00000000000016f4         db  0x00 ; '.'
00000000000016f5         db  0x00 ; '.'
00000000000016f6         db  0x00 ; '.'
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0x07 ; '.'
00000000000016f9         db  0x00 ; '.'
00000000000016fa         db  0x00 ; '.'
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x1a ; '.'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'
0000000000001700         db  0x00 ; '.'
0000000000001701         db  0x00 ; '.'
0000000000001702         db  0x00 ; '.'
0000000000001703         db  0x00 ; '.'
0000000000001704         db  0x00 ; '.'
0000000000001705         db  0x00 ; '.'
0000000000001706         db  0x00 ; '.'
0000000000001707         db  0x00 ; '.'
0000000000001708         db  0x28 ; '('
0000000000001709         db  0xde ; '.'
000000000000170a         db  0x20 ; ' '
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x00 ; '.'
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'
0000000000001710         db  0x07 ; '.'
0000000000001711         db  0x00 ; '.'
0000000000001712         db  0x00 ; '.'
0000000000001713         db  0x00 ; '.'
0000000000001714         db  0x1b ; '.'
0000000000001715         db  0x00 ; '.'
0000000000001716         db  0x00 ; '.'
0000000000001717         db  0x00 ; '.'
0000000000001718         db  0x00 ; '.'
0000000000001719         db  0x00 ; '.'
000000000000171a         db  0x00 ; '.'
000000000000171b         db  0x00 ; '.'
000000000000171c         db  0x00 ; '.'
000000000000171d         db  0x00 ; '.'
000000000000171e         db  0x00 ; '.'
000000000000171f         db  0x00 ; '.'
0000000000001720         db  0x30 ; '0'
0000000000001721         db  0xde ; '.'
0000000000001722         db  0x20 ; ' '
0000000000001723         db  0x00 ; '.'
0000000000001724         db  0x00 ; '.'
0000000000001725         db  0x00 ; '.'
0000000000001726         db  0x00 ; '.'
0000000000001727         db  0x00 ; '.'
0000000000001728         db  0x07 ; '.'
0000000000001729         db  0x00 ; '.'
000000000000172a         db  0x00 ; '.'
000000000000172b         db  0x00 ; '.'
000000000000172c         db  0x1c ; '.'
000000000000172d         db  0x00 ; '.'
000000000000172e         db  0x00 ; '.'
000000000000172f         db  0x00 ; '.'
0000000000001730         db  0x00 ; '.'
0000000000001731         db  0x00 ; '.'
0000000000001732         db  0x00 ; '.'
0000000000001733         db  0x00 ; '.'
0000000000001734         db  0x00 ; '.'
0000000000001735         db  0x00 ; '.'
0000000000001736         db  0x00 ; '.'
0000000000001737         db  0x00 ; '.'
0000000000001738         db  0x38 ; '8'
0000000000001739         db  0xde ; '.'
000000000000173a         db  0x20 ; ' '
000000000000173b         db  0x00 ; '.'
000000000000173c         db  0x00 ; '.'
000000000000173d         db  0x00 ; '.'
000000000000173e         db  0x00 ; '.'
000000000000173f         db  0x00 ; '.'
0000000000001740         db  0x07 ; '.'
0000000000001741         db  0x00 ; '.'
0000000000001742         db  0x00 ; '.'
0000000000001743         db  0x00 ; '.'
0000000000001744         db  0x1d ; '.'
0000000000001745         db  0x00 ; '.'
0000000000001746         db  0x00 ; '.'
0000000000001747         db  0x00 ; '.'
0000000000001748         db  0x00 ; '.'
0000000000001749         db  0x00 ; '.'
000000000000174a         db  0x00 ; '.'
000000000000174b         db  0x00 ; '.'
000000000000174c         db  0x00 ; '.'
000000000000174d         db  0x00 ; '.'
000000000000174e         db  0x00 ; '.'
000000000000174f         db  0x00 ; '.'
0000000000001750         db  0x40 ; '@'
0000000000001751         db  0xde ; '.'
0000000000001752         db  0x20 ; ' '
0000000000001753         db  0x00 ; '.'
0000000000001754         db  0x00 ; '.'
0000000000001755         db  0x00 ; '.'
0000000000001756         db  0x00 ; '.'
0000000000001757         db  0x00 ; '.'
0000000000001758         db  0x07 ; '.'
0000000000001759         db  0x00 ; '.'
000000000000175a         db  0x00 ; '.'
000000000000175b         db  0x00 ; '.'
000000000000175c         db  0x1e ; '.'
000000000000175d         db  0x00 ; '.'
000000000000175e         db  0x00 ; '.'
000000000000175f         db  0x00 ; '.'
0000000000001760         db  0x00 ; '.'
0000000000001761         db  0x00 ; '.'
0000000000001762         db  0x00 ; '.'
0000000000001763         db  0x00 ; '.'
0000000000001764         db  0x00 ; '.'
0000000000001765         db  0x00 ; '.'
0000000000001766         db  0x00 ; '.'
0000000000001767         db  0x00 ; '.'
0000000000001768         db  0x48 ; 'H'
0000000000001769         db  0xde ; '.'
000000000000176a         db  0x20 ; ' '
000000000000176b         db  0x00 ; '.'
000000000000176c         db  0x00 ; '.'
000000000000176d         db  0x00 ; '.'
000000000000176e         db  0x00 ; '.'
000000000000176f         db  0x00 ; '.'
0000000000001770         db  0x07 ; '.'
0000000000001771         db  0x00 ; '.'
0000000000001772         db  0x00 ; '.'
0000000000001773         db  0x00 ; '.'
0000000000001774         db  0x1f ; '.'
0000000000001775         db  0x00 ; '.'
0000000000001776         db  0x00 ; '.'
0000000000001777         db  0x00 ; '.'
0000000000001778         db  0x00 ; '.'
0000000000001779         db  0x00 ; '.'
000000000000177a         db  0x00 ; '.'
000000000000177b         db  0x00 ; '.'
000000000000177c         db  0x00 ; '.'
000000000000177d         db  0x00 ; '.'
000000000000177e         db  0x00 ; '.'
000000000000177f         db  0x00 ; '.'
0000000000001780         db  0x50 ; 'P'
0000000000001781         db  0xde ; '.'
0000000000001782         db  0x20 ; ' '
0000000000001783         db  0x00 ; '.'
0000000000001784         db  0x00 ; '.'
0000000000001785         db  0x00 ; '.'
0000000000001786         db  0x00 ; '.'
0000000000001787         db  0x00 ; '.'
0000000000001788         db  0x07 ; '.'
0000000000001789         db  0x00 ; '.'
000000000000178a         db  0x00 ; '.'
000000000000178b         db  0x00 ; '.'
000000000000178c         db  0x20 ; ' '
000000000000178d         db  0x00 ; '.'
000000000000178e         db  0x00 ; '.'
000000000000178f         db  0x00 ; '.'
0000000000001790         db  0x00 ; '.'
0000000000001791         db  0x00 ; '.'
0000000000001792         db  0x00 ; '.'
0000000000001793         db  0x00 ; '.'
0000000000001794         db  0x00 ; '.'
0000000000001795         db  0x00 ; '.'
0000000000001796         db  0x00 ; '.'
0000000000001797         db  0x00 ; '.'
0000000000001798         db  0x58 ; 'X'
0000000000001799         db  0xde ; '.'
000000000000179a         db  0x20 ; ' '
000000000000179b         db  0x00 ; '.'
000000000000179c         db  0x00 ; '.'
000000000000179d         db  0x00 ; '.'
000000000000179e         db  0x00 ; '.'
000000000000179f         db  0x00 ; '.'
00000000000017a0         db  0x07 ; '.'
00000000000017a1         db  0x00 ; '.'
00000000000017a2         db  0x00 ; '.'
00000000000017a3         db  0x00 ; '.'
00000000000017a4         db  0x21 ; '!'
00000000000017a5         db  0x00 ; '.'
00000000000017a6         db  0x00 ; '.'
00000000000017a7         db  0x00 ; '.'
00000000000017a8         db  0x00 ; '.'
00000000000017a9         db  0x00 ; '.'
00000000000017aa         db  0x00 ; '.'
00000000000017ab         db  0x00 ; '.'
00000000000017ac         db  0x00 ; '.'
00000000000017ad         db  0x00 ; '.'
00000000000017ae         db  0x00 ; '.'
00000000000017af         db  0x00 ; '.'
00000000000017b0         db  0x60 ; '`'
00000000000017b1         db  0xde ; '.'
00000000000017b2         db  0x20 ; ' '
00000000000017b3         db  0x00 ; '.'
00000000000017b4         db  0x00 ; '.'
00000000000017b5         db  0x00 ; '.'
00000000000017b6         db  0x00 ; '.'
00000000000017b7         db  0x00 ; '.'
00000000000017b8         db  0x07 ; '.'
00000000000017b9         db  0x00 ; '.'
00000000000017ba         db  0x00 ; '.'
00000000000017bb         db  0x00 ; '.'
00000000000017bc         db  0x22 ; '"'
00000000000017bd         db  0x00 ; '.'
00000000000017be         db  0x00 ; '.'
00000000000017bf         db  0x00 ; '.'
00000000000017c0         db  0x00 ; '.'
00000000000017c1         db  0x00 ; '.'
00000000000017c2         db  0x00 ; '.'
00000000000017c3         db  0x00 ; '.'
00000000000017c4         db  0x00 ; '.'
00000000000017c5         db  0x00 ; '.'
00000000000017c6         db  0x00 ; '.'
00000000000017c7         db  0x00 ; '.'
00000000000017c8         db  0x68 ; 'h'
00000000000017c9         db  0xde ; '.'
00000000000017ca         db  0x20 ; ' '
00000000000017cb         db  0x00 ; '.'
00000000000017cc         db  0x00 ; '.'
00000000000017cd         db  0x00 ; '.'
00000000000017ce         db  0x00 ; '.'
00000000000017cf         db  0x00 ; '.'
00000000000017d0         db  0x07 ; '.'
00000000000017d1         db  0x00 ; '.'
00000000000017d2         db  0x00 ; '.'
00000000000017d3         db  0x00 ; '.'
00000000000017d4         db  0x23 ; '#'
00000000000017d5         db  0x00 ; '.'
00000000000017d6         db  0x00 ; '.'
00000000000017d7         db  0x00 ; '.'
00000000000017d8         db  0x00 ; '.'
00000000000017d9         db  0x00 ; '.'
00000000000017da         db  0x00 ; '.'
00000000000017db         db  0x00 ; '.'
00000000000017dc         db  0x00 ; '.'
00000000000017dd         db  0x00 ; '.'
00000000000017de         db  0x00 ; '.'
00000000000017df         db  0x00 ; '.'
00000000000017e0         db  0x70 ; 'p'
00000000000017e1         db  0xde ; '.'
00000000000017e2         db  0x20 ; ' '
00000000000017e3         db  0x00 ; '.'
00000000000017e4         db  0x00 ; '.'
00000000000017e5         db  0x00 ; '.'
00000000000017e6         db  0x00 ; '.'
00000000000017e7         db  0x00 ; '.'
00000000000017e8         db  0x07 ; '.'
00000000000017e9         db  0x00 ; '.'
00000000000017ea         db  0x00 ; '.'
00000000000017eb         db  0x00 ; '.'
00000000000017ec         db  0x24 ; '$'
00000000000017ed         db  0x00 ; '.'
00000000000017ee         db  0x00 ; '.'
00000000000017ef         db  0x00 ; '.'
00000000000017f0         db  0x00 ; '.'
00000000000017f1         db  0x00 ; '.'
00000000000017f2         db  0x00 ; '.'
00000000000017f3         db  0x00 ; '.'
00000000000017f4         db  0x00 ; '.'
00000000000017f5         db  0x00 ; '.'
00000000000017f6         db  0x00 ; '.'
00000000000017f7         db  0x00 ; '.'
00000000000017f8         db  0x78 ; 'x'
00000000000017f9         db  0xde ; '.'
00000000000017fa         db  0x20 ; ' '
00000000000017fb         db  0x00 ; '.'
00000000000017fc         db  0x00 ; '.'
00000000000017fd         db  0x00 ; '.'
00000000000017fe         db  0x00 ; '.'
00000000000017ff         db  0x00 ; '.'
0000000000001800         db  0x07 ; '.'
0000000000001801         db  0x00 ; '.'
0000000000001802         db  0x00 ; '.'
0000000000001803         db  0x00 ; '.'
0000000000001804         db  0x25 ; '%'
0000000000001805         db  0x00 ; '.'
0000000000001806         db  0x00 ; '.'
0000000000001807         db  0x00 ; '.'
0000000000001808         db  0x00 ; '.'
0000000000001809         db  0x00 ; '.'
000000000000180a         db  0x00 ; '.'
000000000000180b         db  0x00 ; '.'
000000000000180c         db  0x00 ; '.'
000000000000180d         db  0x00 ; '.'
000000000000180e         db  0x00 ; '.'
000000000000180f         db  0x00 ; '.'
0000000000001810         db  0x80 ; '.'
0000000000001811         db  0xde ; '.'
0000000000001812         db  0x20 ; ' '
0000000000001813         db  0x00 ; '.'
0000000000001814         db  0x00 ; '.'
0000000000001815         db  0x00 ; '.'
0000000000001816         db  0x00 ; '.'
0000000000001817         db  0x00 ; '.'
0000000000001818         db  0x07 ; '.'
0000000000001819         db  0x00 ; '.'
000000000000181a         db  0x00 ; '.'
000000000000181b         db  0x00 ; '.'
000000000000181c         db  0x26 ; '&'
000000000000181d         db  0x00 ; '.'
000000000000181e         db  0x00 ; '.'
000000000000181f         db  0x00 ; '.'
0000000000001820         db  0x00 ; '.'
0000000000001821         db  0x00 ; '.'
0000000000001822         db  0x00 ; '.'
0000000000001823         db  0x00 ; '.'
0000000000001824         db  0x00 ; '.'
0000000000001825         db  0x00 ; '.'
0000000000001826         db  0x00 ; '.'
0000000000001827         db  0x00 ; '.'
0000000000001828         db  0x88 ; '.'
0000000000001829         db  0xde ; '.'
000000000000182a         db  0x20 ; ' '
000000000000182b         db  0x00 ; '.'
000000000000182c         db  0x00 ; '.'
000000000000182d         db  0x00 ; '.'
000000000000182e         db  0x00 ; '.'
000000000000182f         db  0x00 ; '.'
0000000000001830         db  0x07 ; '.'
0000000000001831         db  0x00 ; '.'
0000000000001832         db  0x00 ; '.'
0000000000001833         db  0x00 ; '.'
0000000000001834         db  0x27 ; '''
0000000000001835         db  0x00 ; '.'
0000000000001836         db  0x00 ; '.'
0000000000001837         db  0x00 ; '.'
0000000000001838         db  0x00 ; '.'
0000000000001839         db  0x00 ; '.'
000000000000183a         db  0x00 ; '.'
000000000000183b         db  0x00 ; '.'
000000000000183c         db  0x00 ; '.'
000000000000183d         db  0x00 ; '.'
000000000000183e         db  0x00 ; '.'
000000000000183f         db  0x00 ; '.'
0000000000001840         db  0x90 ; '.'
0000000000001841         db  0xde ; '.'
0000000000001842         db  0x20 ; ' '
0000000000001843         db  0x00 ; '.'
0000000000001844         db  0x00 ; '.'
0000000000001845         db  0x00 ; '.'
0000000000001846         db  0x00 ; '.'
0000000000001847         db  0x00 ; '.'
0000000000001848         db  0x07 ; '.'
0000000000001849         db  0x00 ; '.'
000000000000184a         db  0x00 ; '.'
000000000000184b         db  0x00 ; '.'
000000000000184c         db  0x29 ; ')'
000000000000184d         db  0x00 ; '.'
000000000000184e         db  0x00 ; '.'
000000000000184f         db  0x00 ; '.'
0000000000001850         db  0x00 ; '.'
0000000000001851         db  0x00 ; '.'
0000000000001852         db  0x00 ; '.'
0000000000001853         db  0x00 ; '.'
0000000000001854         db  0x00 ; '.'
0000000000001855         db  0x00 ; '.'
0000000000001856         db  0x00 ; '.'
0000000000001857         db  0x00 ; '.'
0000000000001858         db  0x98 ; '.'
0000000000001859         db  0xde ; '.'
000000000000185a         db  0x20 ; ' '
000000000000185b         db  0x00 ; '.'
000000000000185c         db  0x00 ; '.'
000000000000185d         db  0x00 ; '.'
000000000000185e         db  0x00 ; '.'
000000000000185f         db  0x00 ; '.'
0000000000001860         db  0x07 ; '.'
0000000000001861         db  0x00 ; '.'
0000000000001862         db  0x00 ; '.'
0000000000001863         db  0x00 ; '.'
0000000000001864         db  0x2a ; '*'
0000000000001865         db  0x00 ; '.'
0000000000001866         db  0x00 ; '.'
0000000000001867         db  0x00 ; '.'
0000000000001868         db  0x00 ; '.'
0000000000001869         db  0x00 ; '.'
000000000000186a         db  0x00 ; '.'
000000000000186b         db  0x00 ; '.'
000000000000186c         db  0x00 ; '.'
000000000000186d         db  0x00 ; '.'
000000000000186e         db  0x00 ; '.'
000000000000186f         db  0x00 ; '.'
0000000000001870         db  0xa0 ; '.'
0000000000001871         db  0xde ; '.'
0000000000001872         db  0x20 ; ' '
0000000000001873         db  0x00 ; '.'
0000000000001874         db  0x00 ; '.'
0000000000001875         db  0x00 ; '.'
0000000000001876         db  0x00 ; '.'
0000000000001877         db  0x00 ; '.'
0000000000001878         db  0x07 ; '.'
0000000000001879         db  0x00 ; '.'
000000000000187a         db  0x00 ; '.'
000000000000187b         db  0x00 ; '.'
000000000000187c         db  0x2b ; '+'
000000000000187d         db  0x00 ; '.'
000000000000187e         db  0x00 ; '.'
000000000000187f         db  0x00 ; '.'
0000000000001880         db  0x00 ; '.'
0000000000001881         db  0x00 ; '.'
0000000000001882         db  0x00 ; '.'
0000000000001883         db  0x00 ; '.'
0000000000001884         db  0x00 ; '.'
0000000000001885         db  0x00 ; '.'
0000000000001886         db  0x00 ; '.'
0000000000001887         db  0x00 ; '.'
0000000000001888         db  0xa8 ; '.'
0000000000001889         db  0xde ; '.'
000000000000188a         db  0x20 ; ' '
000000000000188b         db  0x00 ; '.'
000000000000188c         db  0x00 ; '.'
000000000000188d         db  0x00 ; '.'
000000000000188e         db  0x00 ; '.'
000000000000188f         db  0x00 ; '.'
0000000000001890         db  0x07 ; '.'
0000000000001891         db  0x00 ; '.'
0000000000001892         db  0x00 ; '.'
0000000000001893         db  0x00 ; '.'
0000000000001894         db  0x2c ; ','
0000000000001895         db  0x00 ; '.'
0000000000001896         db  0x00 ; '.'
0000000000001897         db  0x00 ; '.'
0000000000001898         db  0x00 ; '.'
0000000000001899         db  0x00 ; '.'
000000000000189a         db  0x00 ; '.'
000000000000189b         db  0x00 ; '.'
000000000000189c         db  0x00 ; '.'
000000000000189d         db  0x00 ; '.'
000000000000189e         db  0x00 ; '.'
000000000000189f         db  0x00 ; '.'
00000000000018a0         db  0xb0 ; '.'
00000000000018a1         db  0xde ; '.'
00000000000018a2         db  0x20 ; ' '
00000000000018a3         db  0x00 ; '.'
00000000000018a4         db  0x00 ; '.'
00000000000018a5         db  0x00 ; '.'
00000000000018a6         db  0x00 ; '.'
00000000000018a7         db  0x00 ; '.'
00000000000018a8         db  0x07 ; '.'
00000000000018a9         db  0x00 ; '.'
00000000000018aa         db  0x00 ; '.'
00000000000018ab         db  0x00 ; '.'
00000000000018ac         db  0x2d ; '-'
00000000000018ad         db  0x00 ; '.'
00000000000018ae         db  0x00 ; '.'
00000000000018af         db  0x00 ; '.'
00000000000018b0         db  0x00 ; '.'
00000000000018b1         db  0x00 ; '.'
00000000000018b2         db  0x00 ; '.'
00000000000018b3         db  0x00 ; '.'
00000000000018b4         db  0x00 ; '.'
00000000000018b5         db  0x00 ; '.'
00000000000018b6         db  0x00 ; '.'
00000000000018b7         db  0x00 ; '.'
00000000000018b8         db  0xb8 ; '.'
00000000000018b9         db  0xde ; '.'
00000000000018ba         db  0x20 ; ' '
00000000000018bb         db  0x00 ; '.'
00000000000018bc         db  0x00 ; '.'
00000000000018bd         db  0x00 ; '.'
00000000000018be         db  0x00 ; '.'
00000000000018bf         db  0x00 ; '.'
00000000000018c0         db  0x07 ; '.'
00000000000018c1         db  0x00 ; '.'
00000000000018c2         db  0x00 ; '.'
00000000000018c3         db  0x00 ; '.'
00000000000018c4         db  0x2e ; '.'
00000000000018c5         db  0x00 ; '.'
00000000000018c6         db  0x00 ; '.'
00000000000018c7         db  0x00 ; '.'
00000000000018c8         db  0x00 ; '.'
00000000000018c9         db  0x00 ; '.'
00000000000018ca         db  0x00 ; '.'
00000000000018cb         db  0x00 ; '.'
00000000000018cc         db  0x00 ; '.'
00000000000018cd         db  0x00 ; '.'
00000000000018ce         db  0x00 ; '.'
00000000000018cf         db  0x00 ; '.'
00000000000018d0         db  0xc0 ; '.'
00000000000018d1         db  0xde ; '.'
00000000000018d2         db  0x20 ; ' '
00000000000018d3         db  0x00 ; '.'
00000000000018d4         db  0x00 ; '.'
00000000000018d5         db  0x00 ; '.'
00000000000018d6         db  0x00 ; '.'
00000000000018d7         db  0x00 ; '.'
00000000000018d8         db  0x07 ; '.'
00000000000018d9         db  0x00 ; '.'
00000000000018da         db  0x00 ; '.'
00000000000018db         db  0x00 ; '.'
00000000000018dc         db  0x30 ; '0'
00000000000018dd         db  0x00 ; '.'
00000000000018de         db  0x00 ; '.'
00000000000018df         db  0x00 ; '.'
00000000000018e0         db  0x00 ; '.'
00000000000018e1         db  0x00 ; '.'
00000000000018e2         db  0x00 ; '.'
00000000000018e3         db  0x00 ; '.'
00000000000018e4         db  0x00 ; '.'
00000000000018e5         db  0x00 ; '.'
00000000000018e6         db  0x00 ; '.'
00000000000018e7         db  0x00 ; '.'
00000000000018e8         db  0xc8 ; '.'
00000000000018e9         db  0xde ; '.'
00000000000018ea         db  0x20 ; ' '
00000000000018eb         db  0x00 ; '.'
00000000000018ec         db  0x00 ; '.'
00000000000018ed         db  0x00 ; '.'
00000000000018ee         db  0x00 ; '.'
00000000000018ef         db  0x00 ; '.'
00000000000018f0         db  0x07 ; '.'
00000000000018f1         db  0x00 ; '.'
00000000000018f2         db  0x00 ; '.'
00000000000018f3         db  0x00 ; '.'
00000000000018f4         db  0x31 ; '1'
00000000000018f5         db  0x00 ; '.'
00000000000018f6         db  0x00 ; '.'
00000000000018f7         db  0x00 ; '.'
00000000000018f8         db  0x00 ; '.'
00000000000018f9         db  0x00 ; '.'
00000000000018fa         db  0x00 ; '.'
00000000000018fb         db  0x00 ; '.'
00000000000018fc         db  0x00 ; '.'
00000000000018fd         db  0x00 ; '.'
00000000000018fe         db  0x00 ; '.'
00000000000018ff         db  0x00 ; '.'
0000000000001900         db  0xd0 ; '.'
0000000000001901         db  0xde ; '.'
0000000000001902         db  0x20 ; ' '
0000000000001903         db  0x00 ; '.'
0000000000001904         db  0x00 ; '.'
0000000000001905         db  0x00 ; '.'
0000000000001906         db  0x00 ; '.'
0000000000001907         db  0x00 ; '.'
0000000000001908         db  0x07 ; '.'
0000000000001909         db  0x00 ; '.'
000000000000190a         db  0x00 ; '.'
000000000000190b         db  0x00 ; '.'
000000000000190c         db  0x32 ; '2'
000000000000190d         db  0x00 ; '.'
000000000000190e         db  0x00 ; '.'
000000000000190f         db  0x00 ; '.'
0000000000001910         db  0x00 ; '.'
0000000000001911         db  0x00 ; '.'
0000000000001912         db  0x00 ; '.'
0000000000001913         db  0x00 ; '.'
0000000000001914         db  0x00 ; '.'
0000000000001915         db  0x00 ; '.'
0000000000001916         db  0x00 ; '.'
0000000000001917         db  0x00 ; '.'
0000000000001918         db  0xd8 ; '.'
0000000000001919         db  0xde ; '.'
000000000000191a         db  0x20 ; ' '
000000000000191b         db  0x00 ; '.'
000000000000191c         db  0x00 ; '.'
000000000000191d         db  0x00 ; '.'
000000000000191e         db  0x00 ; '.'
000000000000191f         db  0x00 ; '.'
0000000000001920         db  0x07 ; '.'
0000000000001921         db  0x00 ; '.'
0000000000001922         db  0x00 ; '.'
0000000000001923         db  0x00 ; '.'
0000000000001924         db  0x33 ; '3'
0000000000001925         db  0x00 ; '.'
0000000000001926         db  0x00 ; '.'
0000000000001927         db  0x00 ; '.'
0000000000001928         db  0x00 ; '.'
0000000000001929         db  0x00 ; '.'
000000000000192a         db  0x00 ; '.'
000000000000192b         db  0x00 ; '.'
000000000000192c         db  0x00 ; '.'
000000000000192d         db  0x00 ; '.'
000000000000192e         db  0x00 ; '.'
000000000000192f         db  0x00 ; '.'
0000000000001930         db  0xe0 ; '.'
0000000000001931         db  0xde ; '.'
0000000000001932         db  0x20 ; ' '
0000000000001933         db  0x00 ; '.'
0000000000001934         db  0x00 ; '.'
0000000000001935         db  0x00 ; '.'
0000000000001936         db  0x00 ; '.'
0000000000001937         db  0x00 ; '.'
0000000000001938         db  0x07 ; '.'
0000000000001939         db  0x00 ; '.'
000000000000193a         db  0x00 ; '.'
000000000000193b         db  0x00 ; '.'
000000000000193c         db  0x34 ; '4'
000000000000193d         db  0x00 ; '.'
000000000000193e         db  0x00 ; '.'
000000000000193f         db  0x00 ; '.'
0000000000001940         db  0x00 ; '.'
0000000000001941         db  0x00 ; '.'
0000000000001942         db  0x00 ; '.'
0000000000001943         db  0x00 ; '.'
0000000000001944         db  0x00 ; '.'
0000000000001945         db  0x00 ; '.'
0000000000001946         db  0x00 ; '.'
0000000000001947         db  0x00 ; '.'
0000000000001948         db  0xe8 ; '.'
0000000000001949         db  0xde ; '.'
000000000000194a         db  0x20 ; ' '
000000000000194b         db  0x00 ; '.'
000000000000194c         db  0x00 ; '.'
000000000000194d         db  0x00 ; '.'
000000000000194e         db  0x00 ; '.'
000000000000194f         db  0x00 ; '.'
0000000000001950         db  0x07 ; '.'
0000000000001951         db  0x00 ; '.'
0000000000001952         db  0x00 ; '.'
0000000000001953         db  0x00 ; '.'
0000000000001954         db  0x35 ; '5'
0000000000001955         db  0x00 ; '.'
0000000000001956         db  0x00 ; '.'
0000000000001957         db  0x00 ; '.'
0000000000001958         db  0x00 ; '.'
0000000000001959         db  0x00 ; '.'
000000000000195a         db  0x00 ; '.'
000000000000195b         db  0x00 ; '.'
000000000000195c         db  0x00 ; '.'
000000000000195d         db  0x00 ; '.'
000000000000195e         db  0x00 ; '.'
000000000000195f         db  0x00 ; '.'
0000000000001960         db  0xf0 ; '.'
0000000000001961         db  0xde ; '.'
0000000000001962         db  0x20 ; ' '
0000000000001963         db  0x00 ; '.'
0000000000001964         db  0x00 ; '.'
0000000000001965         db  0x00 ; '.'
0000000000001966         db  0x00 ; '.'
0000000000001967         db  0x00 ; '.'
0000000000001968         db  0x07 ; '.'
0000000000001969         db  0x00 ; '.'
000000000000196a         db  0x00 ; '.'
000000000000196b         db  0x00 ; '.'
000000000000196c         db  0x36 ; '6'
000000000000196d         db  0x00 ; '.'
000000000000196e         db  0x00 ; '.'
000000000000196f         db  0x00 ; '.'
0000000000001970         db  0x00 ; '.'
0000000000001971         db  0x00 ; '.'
0000000000001972         db  0x00 ; '.'
0000000000001973         db  0x00 ; '.'
0000000000001974         db  0x00 ; '.'
0000000000001975         db  0x00 ; '.'
0000000000001976         db  0x00 ; '.'
0000000000001977         db  0x00 ; '.'
0000000000001978         db  0xf8 ; '.'
0000000000001979         db  0xde ; '.'
000000000000197a         db  0x20 ; ' '
000000000000197b         db  0x00 ; '.'
000000000000197c         db  0x00 ; '.'
000000000000197d         db  0x00 ; '.'
000000000000197e         db  0x00 ; '.'
000000000000197f         db  0x00 ; '.'
0000000000001980         db  0x07 ; '.'
0000000000001981         db  0x00 ; '.'
0000000000001982         db  0x00 ; '.'
0000000000001983         db  0x00 ; '.'
0000000000001984         db  0x37 ; '7'
0000000000001985         db  0x00 ; '.'
0000000000001986         db  0x00 ; '.'
0000000000001987         db  0x00 ; '.'
0000000000001988         db  0x00 ; '.'
0000000000001989         db  0x00 ; '.'
000000000000198a         db  0x00 ; '.'
000000000000198b         db  0x00 ; '.'
000000000000198c         db  0x00 ; '.'
000000000000198d         db  0x00 ; '.'
000000000000198e         db  0x00 ; '.'
000000000000198f         db  0x00 ; '.'
0000000000001990         db  0x00 ; '.'
0000000000001991         db  0xdf ; '.'
0000000000001992         db  0x20 ; ' '
0000000000001993         db  0x00 ; '.'
0000000000001994         db  0x00 ; '.'
0000000000001995         db  0x00 ; '.'
0000000000001996         db  0x00 ; '.'
0000000000001997         db  0x00 ; '.'
0000000000001998         db  0x07 ; '.'
0000000000001999         db  0x00 ; '.'
000000000000199a         db  0x00 ; '.'
000000000000199b         db  0x00 ; '.'
000000000000199c         db  0x38 ; '8'
000000000000199d         db  0x00 ; '.'
000000000000199e         db  0x00 ; '.'
000000000000199f         db  0x00 ; '.'
00000000000019a0         db  0x00 ; '.'
00000000000019a1         db  0x00 ; '.'
00000000000019a2         db  0x00 ; '.'
00000000000019a3         db  0x00 ; '.'
00000000000019a4         db  0x00 ; '.'
00000000000019a5         db  0x00 ; '.'
00000000000019a6         db  0x00 ; '.'
00000000000019a7         db  0x00 ; '.'
00000000000019a8         db  0x08 ; '.'
00000000000019a9         db  0xdf ; '.'
00000000000019aa         db  0x20 ; ' '
00000000000019ab         db  0x00 ; '.'
00000000000019ac         db  0x00 ; '.'
00000000000019ad         db  0x00 ; '.'
00000000000019ae         db  0x00 ; '.'
00000000000019af         db  0x00 ; '.'
00000000000019b0         db  0x07 ; '.'
00000000000019b1         db  0x00 ; '.'
00000000000019b2         db  0x00 ; '.'
00000000000019b3         db  0x00 ; '.'
00000000000019b4         db  0x39 ; '9'
00000000000019b5         db  0x00 ; '.'
00000000000019b6         db  0x00 ; '.'
00000000000019b7         db  0x00 ; '.'
00000000000019b8         db  0x00 ; '.'
00000000000019b9         db  0x00 ; '.'
00000000000019ba         db  0x00 ; '.'
00000000000019bb         db  0x00 ; '.'
00000000000019bc         db  0x00 ; '.'
00000000000019bd         db  0x00 ; '.'
00000000000019be         db  0x00 ; '.'
00000000000019bf         db  0x00 ; '.'
00000000000019c0         db  0x10 ; '.'
00000000000019c1         db  0xdf ; '.'
00000000000019c2         db  0x20 ; ' '
00000000000019c3         db  0x00 ; '.'
00000000000019c4         db  0x00 ; '.'
00000000000019c5         db  0x00 ; '.'
00000000000019c6         db  0x00 ; '.'
00000000000019c7         db  0x00 ; '.'
00000000000019c8         db  0x07 ; '.'
00000000000019c9         db  0x00 ; '.'
00000000000019ca         db  0x00 ; '.'
00000000000019cb         db  0x00 ; '.'
00000000000019cc         db  0x3a ; ':'
00000000000019cd         db  0x00 ; '.'
00000000000019ce         db  0x00 ; '.'
00000000000019cf         db  0x00 ; '.'
00000000000019d0         db  0x00 ; '.'
00000000000019d1         db  0x00 ; '.'
00000000000019d2         db  0x00 ; '.'
00000000000019d3         db  0x00 ; '.'
00000000000019d4         db  0x00 ; '.'
00000000000019d5         db  0x00 ; '.'
00000000000019d6         db  0x00 ; '.'
00000000000019d7         db  0x00 ; '.'
00000000000019d8         db  0x18 ; '.'
00000000000019d9         db  0xdf ; '.'
00000000000019da         db  0x20 ; ' '
00000000000019db         db  0x00 ; '.'
00000000000019dc         db  0x00 ; '.'
00000000000019dd         db  0x00 ; '.'
00000000000019de         db  0x00 ; '.'
00000000000019df         db  0x00 ; '.'
00000000000019e0         db  0x07 ; '.'
00000000000019e1         db  0x00 ; '.'
00000000000019e2         db  0x00 ; '.'
00000000000019e3         db  0x00 ; '.'
00000000000019e4         db  0x3b ; ';'
00000000000019e5         db  0x00 ; '.'
00000000000019e6         db  0x00 ; '.'
00000000000019e7         db  0x00 ; '.'
00000000000019e8         db  0x00 ; '.'
00000000000019e9         db  0x00 ; '.'
00000000000019ea         db  0x00 ; '.'
00000000000019eb         db  0x00 ; '.'
00000000000019ec         db  0x00 ; '.'
00000000000019ed         db  0x00 ; '.'
00000000000019ee         db  0x00 ; '.'
00000000000019ef         db  0x00 ; '.'
00000000000019f0         db  0x20 ; ' '
00000000000019f1         db  0xdf ; '.'
00000000000019f2         db  0x20 ; ' '
00000000000019f3         db  0x00 ; '.'
00000000000019f4         db  0x00 ; '.'
00000000000019f5         db  0x00 ; '.'
00000000000019f6         db  0x00 ; '.'
00000000000019f7         db  0x00 ; '.'
00000000000019f8         db  0x07 ; '.'
00000000000019f9         db  0x00 ; '.'
00000000000019fa         db  0x00 ; '.'
00000000000019fb         db  0x00 ; '.'
00000000000019fc         db  0x3c ; '<'
00000000000019fd         db  0x00 ; '.'
00000000000019fe         db  0x00 ; '.'
00000000000019ff         db  0x00 ; '.'
0000000000001a00         db  0x00 ; '.'
0000000000001a01         db  0x00 ; '.'
0000000000001a02         db  0x00 ; '.'
0000000000001a03         db  0x00 ; '.'
0000000000001a04         db  0x00 ; '.'
0000000000001a05         db  0x00 ; '.'
0000000000001a06         db  0x00 ; '.'
0000000000001a07         db  0x00 ; '.'
0000000000001a08         db  0x28 ; '('
0000000000001a09         db  0xdf ; '.'
0000000000001a0a         db  0x20 ; ' '
0000000000001a0b         db  0x00 ; '.'
0000000000001a0c         db  0x00 ; '.'
0000000000001a0d         db  0x00 ; '.'
0000000000001a0e         db  0x00 ; '.'
0000000000001a0f         db  0x00 ; '.'
0000000000001a10         db  0x07 ; '.'
0000000000001a11         db  0x00 ; '.'
0000000000001a12         db  0x00 ; '.'
0000000000001a13         db  0x00 ; '.'
0000000000001a14         db  0x3d ; '='
0000000000001a15         db  0x00 ; '.'
0000000000001a16         db  0x00 ; '.'
0000000000001a17         db  0x00 ; '.'
0000000000001a18         db  0x00 ; '.'
0000000000001a19         db  0x00 ; '.'
0000000000001a1a         db  0x00 ; '.'
0000000000001a1b         db  0x00 ; '.'
0000000000001a1c         db  0x00 ; '.'
0000000000001a1d         db  0x00 ; '.'
0000000000001a1e         db  0x00 ; '.'
0000000000001a1f         db  0x00 ; '.'
0000000000001a20         db  0x30 ; '0'
0000000000001a21         db  0xdf ; '.'
0000000000001a22         db  0x20 ; ' '
0000000000001a23         db  0x00 ; '.'
0000000000001a24         db  0x00 ; '.'
0000000000001a25         db  0x00 ; '.'
0000000000001a26         db  0x00 ; '.'
0000000000001a27         db  0x00 ; '.'
0000000000001a28         db  0x07 ; '.'
0000000000001a29         db  0x00 ; '.'
0000000000001a2a         db  0x00 ; '.'
0000000000001a2b         db  0x00 ; '.'
0000000000001a2c         db  0x3e ; '>'
0000000000001a2d         db  0x00 ; '.'
0000000000001a2e         db  0x00 ; '.'
0000000000001a2f         db  0x00 ; '.'
0000000000001a30         db  0x00 ; '.'
0000000000001a31         db  0x00 ; '.'
0000000000001a32         db  0x00 ; '.'
0000000000001a33         db  0x00 ; '.'
0000000000001a34         db  0x00 ; '.'
0000000000001a35         db  0x00 ; '.'
0000000000001a36         db  0x00 ; '.'
0000000000001a37         db  0x00 ; '.'
0000000000001a38         db  0x38 ; '8'
0000000000001a39         db  0xdf ; '.'
0000000000001a3a         db  0x20 ; ' '
0000000000001a3b         db  0x00 ; '.'
0000000000001a3c         db  0x00 ; '.'
0000000000001a3d         db  0x00 ; '.'
0000000000001a3e         db  0x00 ; '.'
0000000000001a3f         db  0x00 ; '.'
0000000000001a40         db  0x07 ; '.'
0000000000001a41         db  0x00 ; '.'
0000000000001a42         db  0x00 ; '.'
0000000000001a43         db  0x00 ; '.'
0000000000001a44         db  0x3f ; '?'
0000000000001a45         db  0x00 ; '.'
0000000000001a46         db  0x00 ; '.'
0000000000001a47         db  0x00 ; '.'
0000000000001a48         db  0x00 ; '.'
0000000000001a49         db  0x00 ; '.'
0000000000001a4a         db  0x00 ; '.'
0000000000001a4b         db  0x00 ; '.'
0000000000001a4c         db  0x00 ; '.'
0000000000001a4d         db  0x00 ; '.'
0000000000001a4e         db  0x00 ; '.'
0000000000001a4f         db  0x00 ; '.'
0000000000001a50         db  0x40 ; '@'
0000000000001a51         db  0xdf ; '.'
0000000000001a52         db  0x20 ; ' '
0000000000001a53         db  0x00 ; '.'
0000000000001a54         db  0x00 ; '.'
0000000000001a55         db  0x00 ; '.'
0000000000001a56         db  0x00 ; '.'
0000000000001a57         db  0x00 ; '.'
0000000000001a58         db  0x07 ; '.'
0000000000001a59         db  0x00 ; '.'
0000000000001a5a         db  0x00 ; '.'
0000000000001a5b         db  0x00 ; '.'
0000000000001a5c         db  0x40 ; '@'
0000000000001a5d         db  0x00 ; '.'
0000000000001a5e         db  0x00 ; '.'
0000000000001a5f         db  0x00 ; '.'
0000000000001a60         db  0x00 ; '.'
0000000000001a61         db  0x00 ; '.'
0000000000001a62         db  0x00 ; '.'
0000000000001a63         db  0x00 ; '.'
0000000000001a64         db  0x00 ; '.'
0000000000001a65         db  0x00 ; '.'
0000000000001a66         db  0x00 ; '.'
0000000000001a67         db  0x00 ; '.'
0000000000001a68         db  0x48 ; 'H'
0000000000001a69         db  0xdf ; '.'
0000000000001a6a         db  0x20 ; ' '
0000000000001a6b         db  0x00 ; '.'
0000000000001a6c         db  0x00 ; '.'
0000000000001a6d         db  0x00 ; '.'
0000000000001a6e         db  0x00 ; '.'
0000000000001a6f         db  0x00 ; '.'
0000000000001a70         db  0x07 ; '.'
0000000000001a71         db  0x00 ; '.'
0000000000001a72         db  0x00 ; '.'
0000000000001a73         db  0x00 ; '.'
0000000000001a74         db  0x41 ; 'A'
0000000000001a75         db  0x00 ; '.'
0000000000001a76         db  0x00 ; '.'
0000000000001a77         db  0x00 ; '.'
0000000000001a78         db  0x00 ; '.'
0000000000001a79         db  0x00 ; '.'
0000000000001a7a         db  0x00 ; '.'
0000000000001a7b         db  0x00 ; '.'
0000000000001a7c         db  0x00 ; '.'
0000000000001a7d         db  0x00 ; '.'
0000000000001a7e         db  0x00 ; '.'
0000000000001a7f         db  0x00 ; '.'
0000000000001a80         db  0x50 ; 'P'
0000000000001a81         db  0xdf ; '.'
0000000000001a82         db  0x20 ; ' '
0000000000001a83         db  0x00 ; '.'
0000000000001a84         db  0x00 ; '.'
0000000000001a85         db  0x00 ; '.'
0000000000001a86         db  0x00 ; '.'
0000000000001a87         db  0x00 ; '.'
0000000000001a88         db  0x07 ; '.'
0000000000001a89         db  0x00 ; '.'
0000000000001a8a         db  0x00 ; '.'
0000000000001a8b         db  0x00 ; '.'
0000000000001a8c         db  0x42 ; 'B'
0000000000001a8d         db  0x00 ; '.'
0000000000001a8e         db  0x00 ; '.'
0000000000001a8f         db  0x00 ; '.'
0000000000001a90         db  0x00 ; '.'
0000000000001a91         db  0x00 ; '.'
0000000000001a92         db  0x00 ; '.'
0000000000001a93         db  0x00 ; '.'
0000000000001a94         db  0x00 ; '.'
0000000000001a95         db  0x00 ; '.'
0000000000001a96         db  0x00 ; '.'
0000000000001a97         db  0x00 ; '.'
0000000000001a98         db  0x58 ; 'X'
0000000000001a99         db  0xdf ; '.'
0000000000001a9a         db  0x20 ; ' '
0000000000001a9b         db  0x00 ; '.'
0000000000001a9c         db  0x00 ; '.'
0000000000001a9d         db  0x00 ; '.'
0000000000001a9e         db  0x00 ; '.'
0000000000001a9f         db  0x00 ; '.'
0000000000001aa0         db  0x07 ; '.'
0000000000001aa1         db  0x00 ; '.'
0000000000001aa2         db  0x00 ; '.'
0000000000001aa3         db  0x00 ; '.'
0000000000001aa4         db  0x43 ; 'C'
0000000000001aa5         db  0x00 ; '.'
0000000000001aa6         db  0x00 ; '.'
0000000000001aa7         db  0x00 ; '.'
0000000000001aa8         db  0x00 ; '.'
0000000000001aa9         db  0x00 ; '.'
0000000000001aaa         db  0x00 ; '.'
0000000000001aab         db  0x00 ; '.'
0000000000001aac         db  0x00 ; '.'
0000000000001aad         db  0x00 ; '.'
0000000000001aae         db  0x00 ; '.'
0000000000001aaf         db  0x00 ; '.'
0000000000001ab0         db  0x60 ; '`'
0000000000001ab1         db  0xdf ; '.'
0000000000001ab2         db  0x20 ; ' '
0000000000001ab3         db  0x00 ; '.'
0000000000001ab4         db  0x00 ; '.'
0000000000001ab5         db  0x00 ; '.'
0000000000001ab6         db  0x00 ; '.'
0000000000001ab7         db  0x00 ; '.'
0000000000001ab8         db  0x07 ; '.'
0000000000001ab9         db  0x00 ; '.'
0000000000001aba         db  0x00 ; '.'
0000000000001abb         db  0x00 ; '.'
0000000000001abc         db  0x44 ; 'D'
0000000000001abd         db  0x00 ; '.'
0000000000001abe         db  0x00 ; '.'
0000000000001abf         db  0x00 ; '.'
0000000000001ac0         db  0x00 ; '.'
0000000000001ac1         db  0x00 ; '.'
0000000000001ac2         db  0x00 ; '.'
0000000000001ac3         db  0x00 ; '.'
0000000000001ac4         db  0x00 ; '.'
0000000000001ac5         db  0x00 ; '.'
0000000000001ac6         db  0x00 ; '.'
0000000000001ac7         db  0x00 ; '.'
0000000000001ac8         db  0x68 ; 'h'
0000000000001ac9         db  0xdf ; '.'
0000000000001aca         db  0x20 ; ' '
0000000000001acb         db  0x00 ; '.'
0000000000001acc         db  0x00 ; '.'
0000000000001acd         db  0x00 ; '.'
0000000000001ace         db  0x00 ; '.'
0000000000001acf         db  0x00 ; '.'
0000000000001ad0         db  0x07 ; '.'
0000000000001ad1         db  0x00 ; '.'
0000000000001ad2         db  0x00 ; '.'
0000000000001ad3         db  0x00 ; '.'
0000000000001ad4         db  0x45 ; 'E'
0000000000001ad5         db  0x00 ; '.'
0000000000001ad6         db  0x00 ; '.'
0000000000001ad7         db  0x00 ; '.'
0000000000001ad8         db  0x00 ; '.'
0000000000001ad9         db  0x00 ; '.'
0000000000001ada         db  0x00 ; '.'
0000000000001adb         db  0x00 ; '.'
0000000000001adc         db  0x00 ; '.'
0000000000001add         db  0x00 ; '.'
0000000000001ade         db  0x00 ; '.'
0000000000001adf         db  0x00 ; '.'
0000000000001ae0         db  0x70 ; 'p'
0000000000001ae1         db  0xdf ; '.'
0000000000001ae2         db  0x20 ; ' '
0000000000001ae3         db  0x00 ; '.'
0000000000001ae4         db  0x00 ; '.'
0000000000001ae5         db  0x00 ; '.'
0000000000001ae6         db  0x00 ; '.'
0000000000001ae7         db  0x00 ; '.'
0000000000001ae8         db  0x07 ; '.'
0000000000001ae9         db  0x00 ; '.'
0000000000001aea         db  0x00 ; '.'
0000000000001aeb         db  0x00 ; '.'
0000000000001aec         db  0x46 ; 'F'
0000000000001aed         db  0x00 ; '.'
0000000000001aee         db  0x00 ; '.'
0000000000001aef         db  0x00 ; '.'
0000000000001af0         db  0x00 ; '.'
0000000000001af1         db  0x00 ; '.'
0000000000001af2         db  0x00 ; '.'
0000000000001af3         db  0x00 ; '.'
0000000000001af4         db  0x00 ; '.'
0000000000001af5         db  0x00 ; '.'
0000000000001af6         db  0x00 ; '.'
0000000000001af7         db  0x00 ; '.'
0000000000001af8         db  0x78 ; 'x'
0000000000001af9         db  0xdf ; '.'
0000000000001afa         db  0x20 ; ' '
0000000000001afb         db  0x00 ; '.'
0000000000001afc         db  0x00 ; '.'
0000000000001afd         db  0x00 ; '.'
0000000000001afe         db  0x00 ; '.'
0000000000001aff         db  0x00 ; '.'
0000000000001b00         db  0x07 ; '.'
0000000000001b01         db  0x00 ; '.'
0000000000001b02         db  0x00 ; '.'
0000000000001b03         db  0x00 ; '.'
0000000000001b04         db  0x47 ; 'G'
0000000000001b05         db  0x00 ; '.'
0000000000001b06         db  0x00 ; '.'
0000000000001b07         db  0x00 ; '.'
0000000000001b08         db  0x00 ; '.'
0000000000001b09         db  0x00 ; '.'
0000000000001b0a         db  0x00 ; '.'
0000000000001b0b         db  0x00 ; '.'
0000000000001b0c         db  0x00 ; '.'
0000000000001b0d         db  0x00 ; '.'
0000000000001b0e         db  0x00 ; '.'
0000000000001b0f         db  0x00 ; '.'
0000000000001b10         db  0x80 ; '.'
0000000000001b11         db  0xdf ; '.'
0000000000001b12         db  0x20 ; ' '
0000000000001b13         db  0x00 ; '.'
0000000000001b14         db  0x00 ; '.'
0000000000001b15         db  0x00 ; '.'
0000000000001b16         db  0x00 ; '.'
0000000000001b17         db  0x00 ; '.'
0000000000001b18         db  0x07 ; '.'
0000000000001b19         db  0x00 ; '.'
0000000000001b1a         db  0x00 ; '.'
0000000000001b1b         db  0x00 ; '.'
0000000000001b1c         db  0x48 ; 'H'
0000000000001b1d         db  0x00 ; '.'
0000000000001b1e         db  0x00 ; '.'
0000000000001b1f         db  0x00 ; '.'
0000000000001b20         db  0x00 ; '.'
0000000000001b21         db  0x00 ; '.'
0000000000001b22         db  0x00 ; '.'
0000000000001b23         db  0x00 ; '.'
0000000000001b24         db  0x00 ; '.'
0000000000001b25         db  0x00 ; '.'
0000000000001b26         db  0x00 ; '.'
0000000000001b27         db  0x00 ; '.'
0000000000001b28         db  0x88 ; '.'
0000000000001b29         db  0xdf ; '.'
0000000000001b2a         db  0x20 ; ' '
0000000000001b2b         db  0x00 ; '.'
0000000000001b2c         db  0x00 ; '.'
0000000000001b2d         db  0x00 ; '.'
0000000000001b2e         db  0x00 ; '.'
0000000000001b2f         db  0x00 ; '.'
0000000000001b30         db  0x07 ; '.'
0000000000001b31         db  0x00 ; '.'
0000000000001b32         db  0x00 ; '.'
0000000000001b33         db  0x00 ; '.'
0000000000001b34         db  0x49 ; 'I'
0000000000001b35         db  0x00 ; '.'
0000000000001b36         db  0x00 ; '.'
0000000000001b37         db  0x00 ; '.'
0000000000001b38         db  0x00 ; '.'
0000000000001b39         db  0x00 ; '.'
0000000000001b3a         db  0x00 ; '.'
0000000000001b3b         db  0x00 ; '.'
0000000000001b3c         db  0x00 ; '.'
0000000000001b3d         db  0x00 ; '.'
0000000000001b3e         db  0x00 ; '.'
0000000000001b3f         db  0x00 ; '.'
0000000000001b40         db  0x90 ; '.'
0000000000001b41         db  0xdf ; '.'
0000000000001b42         db  0x20 ; ' '
0000000000001b43         db  0x00 ; '.'
0000000000001b44         db  0x00 ; '.'
0000000000001b45         db  0x00 ; '.'
0000000000001b46         db  0x00 ; '.'
0000000000001b47         db  0x00 ; '.'
0000000000001b48         db  0x07 ; '.'
0000000000001b49         db  0x00 ; '.'
0000000000001b4a         db  0x00 ; '.'
0000000000001b4b         db  0x00 ; '.'
0000000000001b4c         db  0x4a ; 'J'
0000000000001b4d         db  0x00 ; '.'
0000000000001b4e         db  0x00 ; '.'
0000000000001b4f         db  0x00 ; '.'
0000000000001b50         db  0x00 ; '.'
0000000000001b51         db  0x00 ; '.'
0000000000001b52         db  0x00 ; '.'
0000000000001b53         db  0x00 ; '.'
0000000000001b54         db  0x00 ; '.'
0000000000001b55         db  0x00 ; '.'
0000000000001b56         db  0x00 ; '.'
0000000000001b57         db  0x00 ; '.'
0000000000001b58         db  0x98 ; '.'
0000000000001b59         db  0xdf ; '.'
0000000000001b5a         db  0x20 ; ' '
0000000000001b5b         db  0x00 ; '.'
0000000000001b5c         db  0x00 ; '.'
0000000000001b5d         db  0x00 ; '.'
0000000000001b5e         db  0x00 ; '.'
0000000000001b5f         db  0x00 ; '.'
0000000000001b60         db  0x07 ; '.'
0000000000001b61         db  0x00 ; '.'
0000000000001b62         db  0x00 ; '.'
0000000000001b63         db  0x00 ; '.'
0000000000001b64         db  0x4b ; 'K'
0000000000001b65         db  0x00 ; '.'
0000000000001b66         db  0x00 ; '.'
0000000000001b67         db  0x00 ; '.'
0000000000001b68         db  0x00 ; '.'
0000000000001b69         db  0x00 ; '.'
0000000000001b6a         db  0x00 ; '.'
0000000000001b6b         db  0x00 ; '.'
0000000000001b6c         db  0x00 ; '.'
0000000000001b6d         db  0x00 ; '.'
0000000000001b6e         db  0x00 ; '.'
0000000000001b6f         db  0x00 ; '.'
0000000000001b70         db  0xa0 ; '.'
0000000000001b71         db  0xdf ; '.'
0000000000001b72         db  0x20 ; ' '
0000000000001b73         db  0x00 ; '.'
0000000000001b74         db  0x00 ; '.'
0000000000001b75         db  0x00 ; '.'
0000000000001b76         db  0x00 ; '.'
0000000000001b77         db  0x00 ; '.'
0000000000001b78         db  0x07 ; '.'
0000000000001b79         db  0x00 ; '.'
0000000000001b7a         db  0x00 ; '.'
0000000000001b7b         db  0x00 ; '.'
0000000000001b7c         db  0x4c ; 'L'
0000000000001b7d         db  0x00 ; '.'
0000000000001b7e         db  0x00 ; '.'
0000000000001b7f         db  0x00 ; '.'
0000000000001b80         db  0x00 ; '.'
0000000000001b81         db  0x00 ; '.'
0000000000001b82         db  0x00 ; '.'
0000000000001b83         db  0x00 ; '.'
0000000000001b84         db  0x00 ; '.'
0000000000001b85         db  0x00 ; '.'
0000000000001b86         db  0x00 ; '.'
0000000000001b87         db  0x00 ; '.'
0000000000001b88         db  0xa8 ; '.'
0000000000001b89         db  0xdf ; '.'
0000000000001b8a         db  0x20 ; ' '
0000000000001b8b         db  0x00 ; '.'
0000000000001b8c         db  0x00 ; '.'
0000000000001b8d         db  0x00 ; '.'
0000000000001b8e         db  0x00 ; '.'
0000000000001b8f         db  0x00 ; '.'
0000000000001b90         db  0x07 ; '.'
0000000000001b91         db  0x00 ; '.'
0000000000001b92         db  0x00 ; '.'
0000000000001b93         db  0x00 ; '.'
0000000000001b94         db  0x4d ; 'M'
0000000000001b95         db  0x00 ; '.'
0000000000001b96         db  0x00 ; '.'
0000000000001b97         db  0x00 ; '.'
0000000000001b98         db  0x00 ; '.'
0000000000001b99         db  0x00 ; '.'
0000000000001b9a         db  0x00 ; '.'
0000000000001b9b         db  0x00 ; '.'
0000000000001b9c         db  0x00 ; '.'
0000000000001b9d         db  0x00 ; '.'
0000000000001b9e         db  0x00 ; '.'
0000000000001b9f         db  0x00 ; '.'
0000000000001ba0         db  0xb0 ; '.'
0000000000001ba1         db  0xdf ; '.'
0000000000001ba2         db  0x20 ; ' '
0000000000001ba3         db  0x00 ; '.'
0000000000001ba4         db  0x00 ; '.'
0000000000001ba5         db  0x00 ; '.'
0000000000001ba6         db  0x00 ; '.'
0000000000001ba7         db  0x00 ; '.'
0000000000001ba8         db  0x07 ; '.'
0000000000001ba9         db  0x00 ; '.'
0000000000001baa         db  0x00 ; '.'
0000000000001bab         db  0x00 ; '.'
0000000000001bac         db  0x4e ; 'N'
0000000000001bad         db  0x00 ; '.'
0000000000001bae         db  0x00 ; '.'
0000000000001baf         db  0x00 ; '.'
0000000000001bb0         db  0x00 ; '.'
0000000000001bb1         db  0x00 ; '.'
0000000000001bb2         db  0x00 ; '.'
0000000000001bb3         db  0x00 ; '.'
0000000000001bb4         db  0x00 ; '.'
0000000000001bb5         db  0x00 ; '.'
0000000000001bb6         db  0x00 ; '.'
0000000000001bb7         db  0x00 ; '.'
0000000000001bb8         db  0xb8 ; '.'
0000000000001bb9         db  0xdf ; '.'
0000000000001bba         db  0x20 ; ' '
0000000000001bbb         db  0x00 ; '.'
0000000000001bbc         db  0x00 ; '.'
0000000000001bbd         db  0x00 ; '.'
0000000000001bbe         db  0x00 ; '.'
0000000000001bbf         db  0x00 ; '.'
0000000000001bc0         db  0x07 ; '.'
0000000000001bc1         db  0x00 ; '.'
0000000000001bc2         db  0x00 ; '.'
0000000000001bc3         db  0x00 ; '.'
0000000000001bc4         db  0x50 ; 'P'
0000000000001bc5         db  0x00 ; '.'
0000000000001bc6         db  0x00 ; '.'
0000000000001bc7         db  0x00 ; '.'
0000000000001bc8         db  0x00 ; '.'
0000000000001bc9         db  0x00 ; '.'
0000000000001bca         db  0x00 ; '.'
0000000000001bcb         db  0x00 ; '.'
0000000000001bcc         db  0x00 ; '.'
0000000000001bcd         db  0x00 ; '.'
0000000000001bce         db  0x00 ; '.'
0000000000001bcf         db  0x00 ; '.'
0000000000001bd0         db  0xc0 ; '.'
0000000000001bd1         db  0xdf ; '.'
0000000000001bd2         db  0x20 ; ' '
0000000000001bd3         db  0x00 ; '.'
0000000000001bd4         db  0x00 ; '.'
0000000000001bd5         db  0x00 ; '.'
0000000000001bd6         db  0x00 ; '.'
0000000000001bd7         db  0x00 ; '.'
0000000000001bd8         db  0x07 ; '.'
0000000000001bd9         db  0x00 ; '.'
0000000000001bda         db  0x00 ; '.'
0000000000001bdb         db  0x00 ; '.'
0000000000001bdc         db  0x51 ; 'Q'
0000000000001bdd         db  0x00 ; '.'
0000000000001bde         db  0x00 ; '.'
0000000000001bdf         db  0x00 ; '.'
0000000000001be0         db  0x00 ; '.'
0000000000001be1         db  0x00 ; '.'
0000000000001be2         db  0x00 ; '.'
0000000000001be3         db  0x00 ; '.'
0000000000001be4         db  0x00 ; '.'
0000000000001be5         db  0x00 ; '.'
0000000000001be6         db  0x00 ; '.'
0000000000001be7         db  0x00 ; '.'
0000000000001be8         db  0xc8 ; '.'
0000000000001be9         db  0xdf ; '.'
0000000000001bea         db  0x20 ; ' '
0000000000001beb         db  0x00 ; '.'
0000000000001bec         db  0x00 ; '.'
0000000000001bed         db  0x00 ; '.'
0000000000001bee         db  0x00 ; '.'
0000000000001bef         db  0x00 ; '.'
0000000000001bf0         db  0x07 ; '.'
0000000000001bf1         db  0x00 ; '.'
0000000000001bf2         db  0x00 ; '.'
0000000000001bf3         db  0x00 ; '.'
0000000000001bf4         db  0x53 ; 'S'
0000000000001bf5         db  0x00 ; '.'
0000000000001bf6         db  0x00 ; '.'
0000000000001bf7         db  0x00 ; '.'
0000000000001bf8         db  0x00 ; '.'
0000000000001bf9         db  0x00 ; '.'
0000000000001bfa         db  0x00 ; '.'
0000000000001bfb         db  0x00 ; '.'
0000000000001bfc         db  0x00 ; '.'
0000000000001bfd         db  0x00 ; '.'
0000000000001bfe         db  0x00 ; '.'
0000000000001bff         db  0x00 ; '.'
0000000000001c00         db  0xd0 ; '.'
0000000000001c01         db  0xdf ; '.'
0000000000001c02         db  0x20 ; ' '
0000000000001c03         db  0x00 ; '.'
0000000000001c04         db  0x00 ; '.'
0000000000001c05         db  0x00 ; '.'
0000000000001c06         db  0x00 ; '.'
0000000000001c07         db  0x00 ; '.'
0000000000001c08         db  0x07 ; '.'
0000000000001c09         db  0x00 ; '.'
0000000000001c0a         db  0x00 ; '.'
0000000000001c0b         db  0x00 ; '.'
0000000000001c0c         db  0x54 ; 'T'
0000000000001c0d         db  0x00 ; '.'
0000000000001c0e         db  0x00 ; '.'
0000000000001c0f         db  0x00 ; '.'
0000000000001c10         db  0x00 ; '.'
0000000000001c11         db  0x00 ; '.'
0000000000001c12         db  0x00 ; '.'
0000000000001c13         db  0x00 ; '.'
0000000000001c14         db  0x00 ; '.'
0000000000001c15         db  0x00 ; '.'
0000000000001c16         db  0x00 ; '.'
0000000000001c17         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1c18; 0x1c2f[ (23 bytes)
        ; File offset : [7192; 7215[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001c18         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
0000000000001c1c         mov        rax, qword [qword_20dfe8]                   ; qword_20dfe8
0000000000001c23         test       rax, rax
0000000000001c26         je         loc_1c2a

0000000000001c28         call       rax

                     loc_1c2a:
0000000000001c2a         add        rsp, 0x8                                    ; CODE XREF=_init+14
0000000000001c2e         ret
                        ; endp
0000000000001c2f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1c30; 0x2130[ (1280 bytes)
        ; File offset : [7216; 8496[ (1280 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1c30:
0000000000001c30         push       qword [qword_20dd50]                        ; Begin of unwind block (FDE at 0xb5dc), qword_20dd50, CODE XREF=sub_1c46+5
0000000000001c36         jmp        qword [qword_20dd50+8]                      ; 0x20dd58
                        ; endp
0000000000001c3c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getenv:        // getenv
0000000000001c40         jmp        qword [getenv@GOT]                          ; getenv, getenv@GOT, CODE XREF=human_options+276, human_options+327, human_options+351, human_options+375
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c46:
0000000000001c46         push       0x0
0000000000001c4b         jmp        loc_1c30


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001c50         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+870, main+1801, main+1811, main+1821, dopass+285, dopass+2018, dopass+2157, do_wipefd+1205, quotearg_n_options+277, quotearg_free+55, quotearg_free+82
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c56:
0000000000001c56         push       0x1
0000000000001c5b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001c60         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_5d30+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, randread_error+72, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c66:
0000000000001c66         push       0x2
0000000000001c6b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001c70         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+1080, main+1219, main+1268, main+1580, main+1772, main+1856, main+2237, dosync+24, dopass+228, dopass+831, dopass+1061
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c76:
0000000000001c76         push       0x3
0000000000001c7b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdatasync:        // fdatasync
0000000000001c80         jmp        qword [fdatasync@GOT]                       ; fdatasync, fdatasync@GOT, CODE XREF=dosync+15
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c86:
0000000000001c86         push       0x4
0000000000001c8b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_unlink:        // unlink
0000000000001c90         jmp        qword [unlink@GOT]                          ; unlink, unlink@GOT, CODE XREF=main+1677
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c96:
0000000000001c96         push       0x5
0000000000001c9b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001ca0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+892, usage+1085, argmatch+162
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ca6:
0000000000001ca6         push       0x6
0000000000001cab         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001cb0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cb6:
0000000000001cb6         push       0x7
0000000000001cbb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001cc0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cc6:
0000000000001cc6         push       0x8
0000000000001ccb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___read_chk:        // __read_chk
0000000000001cd0         jmp        qword [__read_chk@GOT]                      ; __read_chk, __read_chk@GOT, CODE XREF=randread_new+280
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cd6:
0000000000001cd6         push       0x9
0000000000001cdb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_isatty:        // isatty
0000000000001ce0         jmp        qword [isatty@GOT]                          ; isatty, isatty@GOT, CODE XREF=do_wipefd+842
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ce6:
0000000000001ce6         push       0xa
0000000000001ceb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_localeconv:        // localeconv
0000000000001cf0         jmp        qword [localeconv@GOT]                      ; localeconv, localeconv@GOT, CODE XREF=human_readable+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cf6:
0000000000001cf6         push       0xb
0000000000001cfb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fcntl:        // fcntl
0000000000001d00         jmp        qword [fcntl@GOT]                           ; fcntl, fcntl@GOT, CODE XREF=rpl_fcntl+128, rpl_fcntl+212, rpl_fcntl+320, rpl_fcntl+407, rpl_fcntl+423, rpl_fcntl+460, rpl_fcntl+483, rpl_fcntl+559, rpl_fcntl+606
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d06:
0000000000001d06         push       0xc
0000000000001d0b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_write:        // write
0000000000001d10         jmp        qword [write@GOT]                           ; write, write@GOT, CODE XREF=dopass+809
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d16:
0000000000001d16         push       0xd
0000000000001d1b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpid:        // getpid
0000000000001d20         jmp        qword [getpid@GOT]                          ; getpid, getpid@GOT, CODE XREF=randread_new+407, randread_new+706
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d26:
0000000000001d26         push       0xe
0000000000001d2b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fread_unlocked:        // fread_unlocked
0000000000001d30         jmp        qword [fread_unlocked@GOT]                  ; fread_unlocked, fread_unlocked@GOT, CODE XREF=randread+97
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d36:
0000000000001d36         push       0xf
0000000000001d3b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001d40         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+113
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d46:
0000000000001d46         push       0x10
0000000000001d4b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001d50         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d56:
0000000000001d56         push       0x11
0000000000001d5b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001d60         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+101
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d66:
0000000000001d66         push       0x12
0000000000001d6b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001d70         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+289, main+446, main+1051, main+1111, main+1211, main+1260, main+1764, main+1848, main+1897, main+2030, main+2106
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d76:
0000000000001d76         push       0x13
0000000000001d7b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001d80         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d86:
0000000000001d86         push       0x14
0000000000001d8b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001d90         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=argmatch+33, argmatch+174, base_len+4, human_readable+103, human_readable+155, human_readable+457, human_readable+831, human_readable+1149, human_readable+1826, human_readable+1907, quotearg_buffer_restyled+343
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d96:
0000000000001d96         push       0x15
0000000000001d9b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001da0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+2214, dopass+2172, do_wipefd+1793, open_safer+105, human_readable+2491, human_options+481, sub_5d30+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1da6:
0000000000001da6         push       0x16
0000000000001dab         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getuid:        // getuid
0000000000001db0         jmp        qword [getuid@GOT]                          ; getuid, getuid@GOT, CODE XREF=randread_new+452
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1db6:
0000000000001db6         push       0x17
0000000000001dbb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001dc0         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+170
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1dc6:
0000000000001dc6         push       0x18
0000000000001dcb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001dd0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1dd6:
0000000000001dd6         push       0x19
0000000000001ddb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000001de0         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=main+1630, xstrtoumax+291, xstrtoumax+323, xstrtoumax+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1de6:
0000000000001de6         push       0x1a
0000000000001deb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstatat:        // __fxstatat
0000000000001df0         jmp        qword [__fxstatat@GOT]                      ; __fxstatat, __fxstatat@GOT, CODE XREF=renameatu+316, renameatu+398, renameatu+488
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1df6:
0000000000001df6         push       0x1b
0000000000001dfb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000001e00         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=argmatch_valid+283
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e06:
0000000000001e06         push       0x1c
0000000000001e0b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001e10         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e16:
0000000000001e16         push       0x1d
0000000000001e1b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_ftruncate:        // ftruncate
0000000000001e20         jmp        qword [ftruncate@GOT]                       ; ftruncate, ftruncate@GOT, CODE XREF=do_wipefd+1114
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e26:
0000000000001e26         push       0x1e
0000000000001e2b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001e30         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=dopass+213, dopass+989, do_wipefd+1638, rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e36:
0000000000001e36         push       0x1f
0000000000001e3b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_gettimeofday:        // gettimeofday
0000000000001e40         jmp        qword [gettimeofday@GOT]                    ; gettimeofday, gettimeofday@GOT, CODE XREF=randread_new+392, randread_new+632
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e46:
0000000000001e46         push       0x20
0000000000001e4b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001e50         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=main+2209, xstrtoumax+927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e56:
0000000000001e56         push       0x21
0000000000001e5b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___strtoul_internal:        // __strtoul_internal
0000000000001e60         jmp        qword [__strtoul_internal@GOT]              ; __strtoul_internal, __strtoul_internal@GOT, CODE XREF=xstrtoumax+142
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e66:
0000000000001e66         push       0x22
0000000000001e6b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001e70         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=main+1537, quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e76:
0000000000001e76         push       0x23
0000000000001e7b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_ioctl:        // ioctl
0000000000001e80         jmp        qword [ioctl@GOT]                           ; ioctl, ioctl@GOT, CODE XREF=dopass+393
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e86:
0000000000001e86         push       0x24
0000000000001e8b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000001e90         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=main+998, main+1738, randread_new+291, fd_safer+38, rpl_fcntl+510, fopen_safer+106
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e96:
0000000000001e96         push       0x25
0000000000001e9b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001ea0         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=argmatch+111, argmatch_valid+150, argmatch_to_argument+56, quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ea6:
0000000000001ea6         push       0x26
0000000000001eab         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001eb0         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+307, usage+344, usage+381, usage+418, usage+455, usage+492, usage+529, usage+566
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1eb6:
0000000000001eb6         push       0x27
0000000000001ebb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001ec0         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ec6:
0000000000001ec6         push       0x28
0000000000001ecb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000001ed0         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=main+376, dopass+1572
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ed6:
0000000000001ed6         push       0x29
0000000000001edb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___memcpy_chk:        // __memcpy_chk
0000000000001ee0         jmp        qword [__memcpy_chk@GOT]                    ; __memcpy_chk, __memcpy_chk@GOT, CODE XREF=human_readable+1180
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ee6:
0000000000001ee6         push       0x2a
0000000000001eeb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_syscall:        // syscall
0000000000001ef0         jmp        qword [syscall@GOT]                         ; syscall, syscall@GOT, CODE XREF=renameatu+70
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ef6:
0000000000001ef6         push       0x2b
0000000000001efb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001f00         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=main+2078, dopass+517, dopass+1341, do_wipefd+514, mdir_name+53, human_readable+1245, human_readable+1274, human_readable+1338, randread+190, randread+356, xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f06:
0000000000001f06         push       0x2c
0000000000001f0b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_time:        // time
0000000000001f10         jmp        qword [time@GOT]                            ; time, time@GOT, CODE XREF=dopass+1301, dopass+1507, dopass+1940
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f16:
0000000000001f16         push       0x2d
0000000000001f1b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001f20         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36, fopen_safer+23
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f26:
0000000000001f26         push       0x2e
0000000000001f2b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getgid:        // getgid
0000000000001f30         jmp        qword [getgid@GOT]                          ; getgid, getgid@GOT, CODE XREF=randread_new+508
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f36:
0000000000001f36         push       0x2f
0000000000001f3b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sync:        // sync
0000000000001f40         jmp        qword [sync@GOT]                            ; sync, sync@GOT, CODE XREF=dosync+128
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f46:
0000000000001f46         push       0x30
0000000000001f4b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001f50         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=mdir_name+31, xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f56:
0000000000001f56         push       0x31
0000000000001f5b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001f60         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f66:
0000000000001f66         push       0x32
0000000000001f6b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001f70         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f76:
0000000000001f76         push       0x33
0000000000001f7b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstat:        // __fxstat
0000000000001f80         jmp        qword [__fxstat@GOT]                        ; __fxstat, __fxstat@GOT, CODE XREF=do_wipefd+98
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f86:
0000000000001f86         push       0x34
0000000000001f8b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001f90         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f96:
0000000000001f96         push       0x35
0000000000001f9b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001fa0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1fa6:
0000000000001fa6         push       0x36
0000000000001fab         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___strcpy_chk:        // __strcpy_chk
0000000000001fb0         jmp        qword [__strcpy_chk@GOT]                    ; __strcpy_chk, __strcpy_chk@GOT, CODE XREF=dopass+1782
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1fb6:
0000000000001fb6         push       0x37
0000000000001fbb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopen:        // fdopen
0000000000001fc0         jmp        qword [fdopen@GOT]                          ; fdopen, fdopen@GOT, CODE XREF=fopen_safer+80
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1fc6:
0000000000001fc6         push       0x38
0000000000001fcb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001fd0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+82, usage+867, usage+1060, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1fd6:
0000000000001fd6         push       0x39
0000000000001fdb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001fe0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+270, usage+855, usage+948, usage+1009, usage+1048, usage+1151, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1fe6:
0000000000001fe6         push       0x3a
0000000000001feb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setvbuf:        // setvbuf
0000000000001ff0         jmp        qword [setvbuf@GOT]                         ; setvbuf, setvbuf@GOT, CODE XREF=randread_new+130
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ff6:
0000000000001ff6         push       0x3b
0000000000001ffb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_chmod:        // chmod
0000000000002000         jmp        qword [chmod@GOT]                           ; chmod, chmod@GOT, CODE XREF=main+1316, DATA XREF=dopass+195, do_wipefd+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2006:
0000000000002006         push       0x3c
000000000000200b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
0000000000002010         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=human_readable+885
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2016:
0000000000002016         push       0x3d
000000000000201b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000002020         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+1068, main+1133, main+1236, main+1285, main+1791, main+1873, main+1914, main+2052, main+2123, main+2168, main+2261
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2026:
0000000000002026         push       0x3e
000000000000202b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fsync:        // fsync
0000000000002030         jmp        qword [fsync@GOT]                           ; fsync, fsync@GOT, CODE XREF=dosync+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2036:
0000000000002036         push       0x3f
000000000000203b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___explicit_bzero_chk:        // __explicit_bzero_chk
0000000000002040         jmp        qword [__explicit_bzero_chk@GOT]            ; __explicit_bzero_chk, __explicit_bzero_chk@GOT, CODE XREF=randint_free+16, randint_all_free+50, randread_free+24
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2046:
0000000000002046         push       0x40
000000000000204b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
0000000000002050         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=open_safer+35, randread_new+234
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2056:
0000000000002056         push       0x41
000000000000205b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000002060         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2066:
0000000000002066         push       0x42
000000000000206b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
0000000000002070         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=fopen_safer+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2076:
0000000000002076         push       0x43
000000000000207b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000002080         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2086:
0000000000002086         push       0x44
000000000000208b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_renameat:        // renameat
0000000000002090         jmp        qword [renameat@GOT]                        ; renameat, renameat@GOT, CODE XREF=renameatu+240
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2096:
0000000000002096         push       0x45
000000000000209b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpagesize:        // getpagesize
00000000000020a0         jmp        qword [getpagesize@GOT]                     ; getpagesize, getpagesize@GOT, CODE XREF=dopass+72
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_20a6:
00000000000020a6         push       0x46
00000000000020ab         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getppid:        // getppid
00000000000020b0         jmp        qword [getppid@GOT]                         ; getppid, getppid@GOT, CODE XREF=randread_new+419, randread_new+759
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_20b6:
00000000000020b6         push       0x47
00000000000020bb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
00000000000020c0         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+666, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_20c6:
00000000000020c6         push       0x48
00000000000020cb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
00000000000020d0         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_20d6:
00000000000020d6         push       0x49
00000000000020db         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
00000000000020e0         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, argmatch_valid+122, argmatch_valid+198, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_20e6:
00000000000020e6         push       0x4a
00000000000020eb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
00000000000020f0         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_5d30+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_20f6:
00000000000020f6         push       0x4b
00000000000020fb         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000002100         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_5d30+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2106:
0000000000002106         push       0x4c
000000000000210b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000002110         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_5ad0+51, xstrtoumax+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2116:
0000000000002116         push       0x4d
000000000000211b         jmp        0x1c30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___sprintf_chk:        // __sprintf_chk
0000000000002120         jmp        qword [__sprintf_chk@GOT]                   ; __sprintf_chk, __sprintf_chk@GOT, CODE XREF=dopass+617, human_readable+449, human_readable+818, human_readable+1818, human_readable+1899
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2126:
0000000000002126         push       0x4e
000000000000212b         jmp        0x1c30
                        ; endp


        ; Section .plt.got
        ; Range: [0x2130; 0x2138[ (8 bytes)
        ; File offset : [8496; 8504[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_20dff8:        // qword_20dff8
0000000000002130         jmp        qword [qword_20dff8]                        ; qword, End of unwind block (FDE at 0xb5dc), Begin of unwind block (FDE at 0xb604), qword_20dff8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000002136         align      8
0000000000002138         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0xb604)
0000000000002139         db  0x00 ; '.'
000000000000213a         db  0x00 ; '.'
000000000000213b         db  0x00 ; '.'
000000000000213c         db  0x00 ; '.'
000000000000213d         db  0x00 ; '.'
000000000000213e         db  0x00 ; '.'
000000000000213f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x2140; 0x955e[ (29726 bytes)
        ; File offset : [8512; 38238[ (29726 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_4A: int8_t, -74
        ;    var_4B: int8_t, -75
        ;    var_4C: int8_t, -76
        ;    var_50: int32_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int8_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_91: int8_t, -145
        ;    var_98: int32_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A4: int32_t, -164
        ;    var_A5: int8_t, -165
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184


                     main:
0000000000002140         push       r15                                         ; Begin of unwind block (FDE at 0xb7d4), DATA XREF=_start+29
0000000000002142         push       r14
0000000000002144         push       r13
0000000000002146         push       r12
0000000000002148         lea        r12, qword [long_opts]                      ; long_opts
000000000000214f         push       rbp
0000000000002150         push       rbx
0000000000002151         mov        ebp, edi
0000000000002153         pxor       xmm0, xmm0
0000000000002157         mov        rbx, rsi
000000000000215a         sub        rsp, 0x88
0000000000002161         mov        rdi, qword [rsi]
0000000000002164         xor        r13d, r13d
0000000000002167         mov        rax, qword [fs:0x28]
0000000000002170         mov        qword [rsp+0xb8+var_40], rax
0000000000002175         xor        eax, eax
0000000000002177         movaps     xmmword [rsp+0xb8+var_68], xmm0
000000000000217c         movaps     xmmword [rsp+0xb8+var_58], xmm0
0000000000002181         call       set_program_name                            ; set_program_name
0000000000002186         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0xadb0
000000000000218d         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000002192         call       j_setlocale                                 ; setlocale
0000000000002197         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
000000000000219e         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
00000000000021a5         call       j_bindtextdomain                            ; bindtextdomain
00000000000021aa         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
00000000000021b1         call       j_textdomain                                ; textdomain
00000000000021b6         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
00000000000021bd         call       atexit                                      ; atexit
00000000000021c2         mov        qword [rsp+0xb8+var_60], 0x3
00000000000021cb         mov        qword [rsp+0xb8+var_58], 0xffffffffffffffff
00000000000021d4         nop        dword [rax]

                     loc_21d8:
00000000000021d8         lea        rdx, qword [aFnsuvxz]                       ; argument "__shortopts" for method j_getopt_long, "fn:s:uvxz", CODE XREF=main+233, main+336, main+392, main+405, main+421, main+500, main+581, main+597, main+679
00000000000021df         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
00000000000021e2         mov        rcx, r12                                    ; argument "__longopts" for method j_getopt_long
00000000000021e5         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
00000000000021e8         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
00000000000021ea         call       j_getopt_long                               ; getopt_long
00000000000021ef         cmp        eax, 0xffffffff
00000000000021f2         je         loc_23ec

00000000000021f8         cmp        eax, 0x73
00000000000021fb         je         loc_22f0

0000000000002201         jle        loc_2230

0000000000002203         cmp        eax, 0x78
0000000000002206         je         loc_22e0

000000000000220c         jg         loc_2298

0000000000002212         cmp        eax, 0x75
0000000000002215         je         loc_2340

000000000000221b         cmp        eax, 0x76
000000000000221e         jne        loc_29bd

0000000000002224         mov        byte [rsp+0xb8+var_4C], 0x1
0000000000002229         jmp        loc_21d8
000000000000222b         align      16

                     loc_2230:
0000000000002230         cmp        eax, 0xffffff7e                             ; CODE XREF=main+193
0000000000002235         je         loc_2995

000000000000223b         jle        loc_23a0

0000000000002241         cmp        eax, 0x66
0000000000002244         je         loc_2390

000000000000224a         cmp        eax, 0x6e
000000000000224d         jne        loc_29bd

0000000000002253         lea        rsi, qword [aInvalidNumberO]                ; argument "msgid" for method j_dcgettext, "invalid number of passes"
000000000000225a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000225f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002261         call       j_dcgettext                                 ; dcgettext
0000000000002266         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
000000000000226d         lea        rcx, qword [aWrittenBySSAnd+27]             ; 0xadb0
0000000000002274         mov        r8, rax
0000000000002277         xor        r9d, r9d
000000000000227a         movabs     rdx, 0x3fffffffffffffff
0000000000002284         xor        esi, esi
0000000000002286         call       xdectoumax                                  ; xdectoumax
000000000000228b         mov        qword [rsp+0xb8+var_60], rax
0000000000002290         jmp        loc_21d8
0000000000002295         align      8

                     loc_2298:
0000000000002298         cmp        eax, 0x7a                                   ; CODE XREF=main+204
000000000000229b         je         loc_22d0

000000000000229d         add        eax, 0xffffff80
00000000000022a0         jne        loc_29bd

00000000000022a6         test       r13, r13
00000000000022a9         mov        r14, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
00000000000022b0         je         loc_22c5

00000000000022b2         mov        rsi, r14                                    ; argument "__s2" for method j_strcmp
00000000000022b5         mov        rdi, r13                                    ; argument "__s1" for method j_strcmp
00000000000022b8         call       j_strcmp                                    ; strcmp
00000000000022bd         test       eax, eax
00000000000022bf         jne        loc_2a1a

                     loc_22c5:
00000000000022c5         mov        r13, r14                                    ; CODE XREF=main+368
00000000000022c8         jmp        loc_21d8
00000000000022cd         align      16

                     loc_22d0:
00000000000022d0         mov        byte [rsp+0xb8+var_4A], 0x1                 ; CODE XREF=main+347
00000000000022d5         jmp        loc_21d8
00000000000022da         align      32

                     loc_22e0:
00000000000022e0         mov        byte [rsp+0xb8+var_4B], 0x1                 ; CODE XREF=main+198
00000000000022e5         jmp        loc_21d8
00000000000022ea         align      16

                     loc_22f0:
00000000000022f0         lea        rsi, qword [aInvalidFileSiz]                ; argument "msgid" for method j_dcgettext, "invalid file size", CODE XREF=main+187
00000000000022f7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000022fc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000022fe         call       j_dcgettext                                 ; dcgettext
0000000000002303         sub        rsp, 0x8
0000000000002307         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
000000000000230e         lea        r8, qword [aCbbkkmgtpezy0]                  ; "cbBkKMGTPEZY0"
0000000000002315         push       0x0
0000000000002317         xor        edx, edx
0000000000002319         mov        r9, rax
000000000000231c         movabs     rcx, 0x7fffffffffffffff
0000000000002326         xor        esi, esi
0000000000002328         call       xnumtoumax                                  ; xnumtoumax
000000000000232d         mov        qword [rsp+0xc8+var_58], rax
0000000000002332         pop        rax
0000000000002333         pop        rdx
0000000000002334         jmp        loc_21d8
0000000000002339         align      64

                     loc_2340:
0000000000002340         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+213
0000000000002347         test       rsi, rsi
000000000000234a         je         loc_23df

0000000000002350         mov        r9, qword [argmatch_die]                    ; argmatch_die
0000000000002357         lea        rdx, qword [remove_args]                    ; remove_args
000000000000235e         lea        rcx, qword [remove_methods]                 ; remove_methods
0000000000002365         lea        rdi, qword [aRemove]                        ; "--remove"
000000000000236c         mov        r8d, 0x4
0000000000002372         call       __xargmatch_internal                        ; __xargmatch_internal
0000000000002377         lea        rdx, qword [remove_methods]                 ; remove_methods
000000000000237e         mov        eax, dword [rdx+rax*4]
0000000000002381         mov        dword [rsp+0xb8+var_50], eax
0000000000002385         jmp        loc_21d8
000000000000238a         align      16

                     loc_2390:
0000000000002390         mov        byte [rsp+0xb8+var_68], 0x1                 ; CODE XREF=main+260
0000000000002395         jmp        loc_21d8
000000000000239a         align      32

                     loc_23a0:
00000000000023a0         cmp        eax, 0xffffff7d                             ; CODE XREF=main+251
00000000000023a5         jne        loc_29bd

00000000000023ab         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000023b2         mov        rcx, qword [Version]                        ; Version
00000000000023b9         lea        r8, qword [aColinPlumb]                     ; "Colin Plumb"
00000000000023c0         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x96f4
00000000000023c7         lea        rsi, qword [aShred]                         ; "shred"
00000000000023ce         xor        r9d, r9d
00000000000023d1         xor        eax, eax
00000000000023d3         call       version_etc                                 ; version_etc
00000000000023d8         xor        edi, edi                                    ; argument "__status" for method j_exit
00000000000023da         call       j_exit                                      ; exit
                        ; endp

                     loc_23df:
00000000000023df         mov        dword [rsp+0xb8+var_50], 0x3                ; CODE XREF=main+522
00000000000023e7         jmp        loc_21d8

                     loc_23ec:
00000000000023ec         movsxd     r12, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+178
00000000000023f3         mov        r14d, eax
00000000000023f6         mov        rax, r12
00000000000023f9         shl        r12, 0x3
00000000000023fd         sub        ebp, eax
00000000000023ff         je         loc_299c

0000000000002405         or         rsi, 0xffffffffffffffff
0000000000002409         mov        rdi, r13
000000000000240c         call       randint_all_new                             ; randint_all_new
0000000000002411         test       rax, rax
0000000000002414         mov        qword [randint_source], rax                 ; randint_source
000000000000241b         je         loc_29eb

0000000000002421         lea        rdi, qword [clear_random_data]              ; argument "__func" for method atexit, clear_random_data
0000000000002428         call       atexit                                      ; atexit
000000000000242d         test       ebp, ebp
000000000000242f         jle        loc_25b4

0000000000002435         lea        rax, qword [rbx+r12+8]
000000000000243a         lea        edx, dword [rbp-1]
000000000000243d         lea        r15, qword [rbx+r12]
0000000000002441         mov        byte [rsp+0xb8+var_A5], 0x1
0000000000002446         mov        dword [rsp+0xb8+var_98], r14d
000000000000244b         lea        rax, qword [rax+rdx*8]
000000000000244f         mov        qword [rsp+0xb8+var_B8], rax
0000000000002453         lea        rax, qword [rsp+0xb8+var_68]
0000000000002458         mov        qword [rsp+0xb8+var_B0], rax
000000000000245d         jmp        loc_24b5

                     loc_245f:
000000000000245f         mov        esi, 0x3                                    ; CODE XREF=main+938
0000000000002464         mov        edi, 0x1
0000000000002469         mov        rbp, qword [randint_source]                 ; randint_source
0000000000002470         call       rpl_fcntl                                   ; rpl_fcntl
0000000000002475         test       eax, eax
0000000000002477         js         loc_261e

000000000000247d         test       ah, 0x4
0000000000002480         jne        loc_254d

0000000000002486         mov        rcx, qword [rsp+0xb8+var_B0]
000000000000248b         mov        rdx, rbp
000000000000248e         mov        rsi, rbx
0000000000002491         mov        edi, 0x1
0000000000002496         call       do_wipefd                                   ; do_wipefd

                     loc_249b:
000000000000249b         and        byte [rsp+0xb8+var_A5], al                  ; CODE XREF=main+1075, main+1292

                     loc_249f:
000000000000249f         mov        rdi, rbx                                    ; argument "__ptr" for method j_free, CODE XREF=main+1032
00000000000024a2         add        r15, 0x8
00000000000024a6         call       j_free                                      ; free
00000000000024ab         cmp        r15, qword [rsp+0xb8+var_B8]
00000000000024af         je         loc_25b9

                     loc_24b5:
00000000000024b5         mov        rdx, qword [r15]                            ; CODE XREF=main+797
00000000000024b8         mov        esi, 0x3
00000000000024bd         xor        edi, edi
00000000000024bf         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000024c4         mov        rdi, rax
00000000000024c7         call       xstrdup                                     ; xstrdup
00000000000024cc         mov        rbp, qword [r15]
00000000000024cf         lea        rdi, qword [aLibs+10]                       ; 0xa852
00000000000024d6         mov        ecx, 0x2
00000000000024db         mov        rbx, rax
00000000000024de         mov        rsi, rbp
00000000000024e1         rep  cmpsb byte [rsi], byte [rdi]
00000000000024e3         seta       al
00000000000024e6         sbb        al, 0x0
00000000000024e8         test       al, al
00000000000024ea         je         loc_245f

00000000000024f0         xor        eax, eax
00000000000024f2         mov        esi, 0x101
00000000000024f7         mov        rdi, rbp
00000000000024fa         mov        r12, qword [randint_source]                 ; randint_source
0000000000002501         call       open_safer                                  ; open_safer
0000000000002506         test       eax, eax
0000000000002508         mov        r14d, eax
000000000000250b         js         loc_2578

                     loc_250d:
000000000000250d         mov        rcx, qword [rsp+0xb8+var_B0]                ; CODE XREF=main+1347
0000000000002512         mov        rdx, r12
0000000000002515         mov        rsi, rbx
0000000000002518         mov        edi, r14d
000000000000251b         call       do_wipefd                                   ; do_wipefd
0000000000002520         mov        edi, r14d                                   ; argument "__fd" for method j_close
0000000000002523         mov        r13d, eax
0000000000002526         call       j_close                                     ; close
000000000000252b         test       eax, eax
000000000000252d         jne        loc_25ea

0000000000002533         test       r13b, r13b
0000000000002536         je         loc_2543

0000000000002538         cmp        dword [rsp+0xb8+var_50], 0x0
000000000000253d         jne        loc_268e

                     loc_2543:
0000000000002543         and        byte [rsp+0xb8+var_A5], r13b                ; CODE XREF=main+1014, main+1138, main+1241, main+1826
0000000000002548         jmp        loc_249f

                     loc_254d:
000000000000254d         lea        rsi, qword [aSCannotShredAp]                ; argument "msgid" for method j_dcgettext, "%s: cannot shred append-only file descriptor", CODE XREF=main+832
0000000000002554         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002559         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000255b         call       j_dcgettext                                 ; dcgettext
0000000000002560         mov        rcx, rbx
0000000000002563         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002566         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002568         xor        eax, eax
000000000000256a         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000256c         call       j_error                                     ; error
0000000000002571         xor        eax, eax
0000000000002573         jmp        loc_249b

                     loc_2578:
0000000000002578         call       j___errno_location                          ; __errno_location, CODE XREF=main+971
000000000000257d         cmp        dword [rax], 0xd
0000000000002580         mov        r13, rax
0000000000002583         je         loc_2651

                     loc_2589:
0000000000002589         lea        rsi, qword [aSFailedToOpenF]                ; argument "msgid" for method j_dcgettext, "%s: failed to open for writing", CODE XREF=main+1302, main+1323, main+1353
0000000000002590         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002595         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002597         call       j_dcgettext                                 ; dcgettext
000000000000259c         mov        esi, dword [r13]                            ; argument "__errnum" for method j_error
00000000000025a0         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000025a3         mov        rcx, rbx
00000000000025a6         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000025a8         xor        eax, eax
00000000000025aa         xor        r13d, r13d
00000000000025ad         call       j_error                                     ; error
00000000000025b2         jmp        loc_2543

                     loc_25b4:
00000000000025b4         mov        byte [rsp+0xb8+var_A5], 0x1                 ; CODE XREF=main+751

                     loc_25b9:
00000000000025b9         movzx      eax, byte [rsp+0xb8+var_A5]                 ; CODE XREF=main+879
00000000000025be         xor        eax, 0x1
00000000000025c1         mov        rcx, qword [rsp+0xb8+var_40]
00000000000025c6         xor        rcx, qword [fs:0x28]
00000000000025cf         movzx      eax, al
00000000000025d2         jne        loc_29e6

00000000000025d8         add        rsp, 0x88
00000000000025df         pop        rbx
00000000000025e0         pop        rbp
00000000000025e1         pop        r12
00000000000025e3         pop        r13
00000000000025e5         pop        r14
00000000000025e7         pop        r15
00000000000025e9         ret
                        ; endp

                     loc_25ea:
00000000000025ea         lea        rsi, qword [aSFailedToClose]                ; argument "msgid" for method j_dcgettext, "%s: failed to close", CODE XREF=main+1005
00000000000025f1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000025f6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000025f8         xor        r13d, r13d
00000000000025fb         call       j_dcgettext                                 ; dcgettext
0000000000002600         mov        rbp, rax
0000000000002603         call       j___errno_location                          ; __errno_location
0000000000002608         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000260a         mov        rcx, rbx
000000000000260d         mov        rdx, rbp                                    ; argument "__format" for method j_error
0000000000002610         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002612         xor        eax, eax
0000000000002614         call       j_error                                     ; error
0000000000002619         jmp        loc_2543

                     loc_261e:
000000000000261e         lea        rsi, qword [aSFcntlFailed]                  ; argument "msgid" for method j_dcgettext, "%s: fcntl failed", CODE XREF=main+823
0000000000002625         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000262a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000262c         call       j_dcgettext                                 ; dcgettext
0000000000002631         mov        rbp, rax
0000000000002634         call       j___errno_location                          ; __errno_location
0000000000002639         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000263b         mov        rcx, rbx
000000000000263e         xor        eax, eax
0000000000002640         mov        rdx, rbp                                    ; argument "__format" for method j_error
0000000000002643         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002645         call       j_error                                     ; error
000000000000264a         xor        eax, eax
000000000000264c         jmp        loc_249b

                     loc_2651:
0000000000002651         cmp        byte [rsp+0xb8+var_68], 0x0                 ; CODE XREF=main+1091
0000000000002656         je         loc_2589

000000000000265c         mov        esi, 0x80                                   ; argument "__mode" for method j_chmod
0000000000002661         mov        rdi, rbp                                    ; argument "__file" for method j_chmod
0000000000002664         call       j_chmod                                     ; chmod
0000000000002669         test       eax, eax
000000000000266b         jne        loc_2589

0000000000002671         mov        esi, 0x101
0000000000002676         mov        rdi, rbp
0000000000002679         call       open_safer                                  ; open_safer
000000000000267e         test       eax, eax
0000000000002680         mov        r14d, eax
0000000000002683         jns        loc_250d

0000000000002689         jmp        loc_2589

                     loc_268e:
000000000000268e         mov        rdi, rbp                                    ; CODE XREF=main+1021
0000000000002691         call       xstrdup                                     ; xstrdup
0000000000002696         mov        r14, rax
0000000000002699         mov        rdi, rax
000000000000269c         mov        qword [rsp+0xb8+var_90], rax
00000000000026a1         call       last_component                              ; last_component
00000000000026a6         mov        rdi, r14
00000000000026a9         mov        r12, rax
00000000000026ac         call       dir_name                                    ; dir_name
00000000000026b1         xor        edi, edi
00000000000026b3         mov        rdx, rax
00000000000026b6         mov        esi, 0x3
00000000000026bb         mov        qword [rsp+0xb8+var_78], rax
00000000000026c0         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000026c5         mov        rdi, rax
00000000000026c8         call       xstrdup                                     ; xstrdup
00000000000026cd         cmp        dword [rsp+0xb8+var_50], 0x3
00000000000026d2         mov        qword [rsp+0xb8+var_A0], rax
00000000000026d7         mov        eax, dword [rsp+0xb8+var_98]
00000000000026db         mov        dword [rsp+0xb8+var_A4], eax
00000000000026df         je         loc_28c4

                     loc_26e5:
00000000000026e5         cmp        byte [rsp+0xb8+var_4C], 0x0                 ; CODE XREF=main+1945
00000000000026ea         jne        loc_289b

                     loc_26f0:
00000000000026f0         cmp        dword [rsp+0xb8+var_50], 0x1                ; CODE XREF=main+1919
00000000000026f5         je         loc_27ca

00000000000026fb         mov        rdi, r12
00000000000026fe         mov        r14, r12
0000000000002701         lea        r12, qword [r12-1]
0000000000002706         call       base_len                                    ; base_len
000000000000270b         mov        qword [rsp+0xb8+var_70], r15
0000000000002710         mov        r15, qword [rsp+0xb8+var_90]
0000000000002715         sub        rax, 0x1
0000000000002719         mov        qword [rsp+0xb8+var_80], rbx
000000000000271e         mov        byte [rsp+0xb8+var_88], r13b
0000000000002723         mov        rbx, rax
0000000000002726         mov        byte [rsp+0xb8+var_91], r13b

                     loc_272b:
000000000000272b         cmp        rbx, 0xffffffffffffffff                     ; CODE XREF=main+2087
000000000000272f         lea        rdx, qword [rbx+1]
0000000000002733         je         loc_27ba

0000000000002739         mov        esi, 0x30                                   ; argument "__c" for method j_memset
000000000000273e         mov        rdi, r14                                    ; argument "__s" for method j_memset
0000000000002741         call       j_memset                                    ; memset
0000000000002746         mov        byte [r14+rbx+1], 0x0

                     loc_274c:
000000000000274c         mov        edx, 0xffffff9c                             ; CODE XREF=main+1656
0000000000002751         mov        r8d, 0x1
0000000000002757         mov        rcx, r15
000000000000275a         mov        rsi, rbp
000000000000275d         mov        edi, edx
000000000000275f         call       renameatu                                   ; renameatu
0000000000002764         test       eax, eax
0000000000002766         je         loc_28de

000000000000276c         call       j___errno_location                          ; __errno_location
0000000000002771         cmp        dword [rax], 0x11
0000000000002774         jne        loc_2963

000000000000277a         lea        r13, qword [r14+rbx]
000000000000277e         jmp        loc_2792

                     loc_2780:
0000000000002780         mov        byte [r13], 0x30                            ; CODE XREF=main+1650
0000000000002785         sub        r13, 0x1
0000000000002789         cmp        r12, r13
000000000000278c         je         loc_2963

                     loc_2792:
0000000000002792         movsx      esi, byte [r13]                             ; argument "__c" for method j_strchr, CODE XREF=main+1598
0000000000002797         lea        rdi, qword [nameset]                        ; argument "__s" for method j_strchr, "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_."
000000000000279e         call       j_strchr                                    ; strchr
00000000000027a3         test       rax, rax
00000000000027a6         je         loc_29c7

00000000000027ac         movzx      eax, byte [rax+1]
00000000000027b0         test       al, al
00000000000027b2         je         loc_2780

00000000000027b4         mov        byte [r13], al
00000000000027b8         jmp        loc_274c

                     loc_27ba:
00000000000027ba         movzx      r13d, byte [rsp+0xb8+var_91]                ; CODE XREF=main+1523
00000000000027c0         mov        rbx, qword [rsp+0xb8+var_80]
00000000000027c5         mov        r15, qword [rsp+0xb8+var_70]

                     loc_27ca:
00000000000027ca         mov        rdi, rbp                                    ; argument "__name" for method j_unlink, CODE XREF=main+1461
00000000000027cd         call       j_unlink                                    ; unlink
00000000000027d2         test       eax, eax
00000000000027d4         jne        loc_2867

00000000000027da         cmp        byte [rsp+0xb8+var_4C], 0x0
00000000000027df         jne        loc_296c

                     loc_27e5:
00000000000027e5         mov        r14d, dword [rsp+0xb8+var_A4]               ; CODE XREF=main+1878, main+2128
00000000000027ea         test       r14d, r14d
00000000000027ed         js         loc_2844

00000000000027ef         mov        rsi, qword [rsp+0xb8+var_A0]
00000000000027f4         mov        edi, r14d
00000000000027f7         call       dosync                                      ; dosync
00000000000027fc         mov        edi, r14d                                   ; argument "__fd" for method j_close
00000000000027ff         test       eax, eax
0000000000002801         mov        eax, 0x0
0000000000002806         cmovne     r13d, eax
000000000000280a         call       j_close                                     ; close
000000000000280f         test       eax, eax
0000000000002811         je         loc_2844

0000000000002813         lea        rsi, qword [aSFailedToClose]                ; argument "msgid" for method j_dcgettext, "%s: failed to close"
000000000000281a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000281f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002821         xor        r13d, r13d
0000000000002824         call       j_dcgettext                                 ; dcgettext
0000000000002829         mov        rbp, rax
000000000000282c         call       j___errno_location                          ; __errno_location
0000000000002831         mov        rcx, qword [rsp+0xb8+var_A0]
0000000000002836         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002838         mov        rdx, rbp                                    ; argument "__format" for method j_error
000000000000283b         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000283d         xor        eax, eax
000000000000283f         call       j_error                                     ; error

                     loc_2844:
0000000000002844         mov        rdi, qword [rsp+0xb8+var_90]                ; argument "__ptr" for method j_free, CODE XREF=main+1709, main+1745
0000000000002849         call       j_free                                      ; free
000000000000284e         mov        rdi, qword [rsp+0xb8+var_78]                ; argument "__ptr" for method j_free
0000000000002853         call       j_free                                      ; free
0000000000002858         mov        rdi, qword [rsp+0xb8+var_A0]                ; argument "__ptr" for method j_free
000000000000285d         call       j_free                                      ; free
0000000000002862         jmp        loc_2543

                     loc_2867:
0000000000002867         lea        rsi, qword [aSFailedToRemov]                ; argument "msgid" for method j_dcgettext, "%s: failed to remove", CODE XREF=main+1684
000000000000286e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002873         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002875         xor        r13d, r13d
0000000000002878         call       j_dcgettext                                 ; dcgettext
000000000000287d         mov        rbp, rax
0000000000002880         call       j___errno_location                          ; __errno_location
0000000000002885         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002887         mov        rcx, rbx
000000000000288a         mov        rdx, rbp                                    ; argument "__format" for method j_error
000000000000288d         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000288f         xor        eax, eax
0000000000002891         call       j_error                                     ; error
0000000000002896         jmp        loc_27e5

                     loc_289b:
000000000000289b         lea        rsi, qword [aSRemoving]                     ; argument "msgid" for method j_dcgettext, "%s: removing", CODE XREF=main+1450
00000000000028a2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000028a4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000028a9         call       j_dcgettext                                 ; dcgettext
00000000000028ae         mov        rcx, rbx
00000000000028b1         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000028b4         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000028b6         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000028b8         xor        eax, eax
00000000000028ba         call       j_error                                     ; error
00000000000028bf         jmp        loc_26f0

                     loc_28c4:
00000000000028c4         mov        rdi, qword [rsp+0xb8+var_78]                ; CODE XREF=main+1439
00000000000028c9         mov        esi, 0x10900
00000000000028ce         xor        eax, eax
00000000000028d0         call       open_safer                                  ; open_safer
00000000000028d5         mov        dword [rsp+0xb8+var_A4], eax
00000000000028d9         jmp        loc_26e5

                     loc_28de:
00000000000028de         cmp        dword [rsp+0xb8+var_A4], 0x0                ; CODE XREF=main+1574
00000000000028e3         js         loc_2906

00000000000028e5         mov        rsi, qword [rsp+0xb8+var_A0]
00000000000028ea         mov        edi, dword [rsp+0xb8+var_A4]
00000000000028ee         call       dosync                                      ; dosync
00000000000028f3         movzx      ecx, byte [rsp+0xb8+var_91]
00000000000028f8         test       eax, eax
00000000000028fa         mov        eax, 0x0
00000000000028ff         cmovne     ecx, eax
0000000000002902         mov        byte [rsp+0xb8+var_91], cl

                     loc_2906:
0000000000002906         cmp        byte [rsp+0xb8+var_4C], 0x0                 ; CODE XREF=main+1955
000000000000290b         je         loc_294e

000000000000290d         cmp        byte [rsp+0xb8+var_88], 0x0
0000000000002912         mov        rcx, qword [rsp+0xb8+var_80]
0000000000002917         lea        rsi, qword [aSRenamedToS]                   ; argument "msgid" for method j_dcgettext, "%s: renamed to %s"
000000000000291e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002923         cmove      rcx, rbp
0000000000002927         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002929         mov        qword [rsp+0xb8+var_88], rcx
000000000000292e         call       j_dcgettext                                 ; dcgettext
0000000000002933         mov        rcx, qword [rsp+0xb8+var_88]
0000000000002938         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000293b         mov        r8, r15
000000000000293e         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002940         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002942         xor        eax, eax
0000000000002944         call       j_error                                     ; error
0000000000002949         mov        byte [rsp+0xb8+var_88], 0x0

                     loc_294e:
000000000000294e         mov        rdi, r14                                    ; CODE XREF=main+1995
0000000000002951         lea        rdx, qword [rbx+2]                          ; argument "__n" for method j_memcpy
0000000000002955         mov        rsi, r14                                    ; argument "__src" for method j_memcpy
0000000000002958         sub        rdi, r15
000000000000295b         add        rdi, rbp                                    ; argument "__dest" for method j_memcpy
000000000000295e         call       j_memcpy                                    ; memcpy

                     loc_2963:
0000000000002963         sub        rbx, 0x1                                    ; CODE XREF=main+1588, main+1612
0000000000002967         jmp        loc_272b

                     loc_296c:
000000000000296c         lea        rsi, qword [aSRemoved]                      ; argument "msgid" for method j_dcgettext, "%s: removed", CODE XREF=main+1695
0000000000002973         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002975         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000297a         call       j_dcgettext                                 ; dcgettext
000000000000297f         mov        rcx, rbx
0000000000002982         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002985         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002987         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002989         xor        eax, eax
000000000000298b         call       j_error                                     ; error
0000000000002990         jmp        loc_27e5

                     loc_2995:
0000000000002995         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+245
0000000000002997         call       usage                                       ; usage

                     loc_299c:
000000000000299c         lea        rsi, qword [aMissingFileOpe]                ; argument "msgid" for method j_dcgettext, "missing file operand", CODE XREF=main+703
00000000000029a3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000029a8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000029aa         call       j_dcgettext                                 ; dcgettext
00000000000029af         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000029b1         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000029b4         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000029b6         xor        eax, eax
00000000000029b8         call       j_error                                     ; error

                     loc_29bd:
00000000000029bd         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+222, main+269, main+352, main+613
00000000000029c2         call       usage                                       ; usage

                     loc_29c7:
00000000000029c7         lea        rcx, qword [__PRETTY_FUNCTION__.7286]       ; argument "__function" for method j___assert_fail, "incname", CODE XREF=main+1638
00000000000029ce         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/shred.c"
00000000000029d5         lea        rdi, qword [aHelp+3]                        ; argument "__assertion" for method j___assert_fail, 0x985e
00000000000029dc         mov        edx, 0x40c                                  ; argument "__line" for method j___assert_fail
00000000000029e1         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_29e6:
00000000000029e6         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+1170
                        ; endp

                     loc_29eb:
00000000000029eb         mov        rdx, r13                                    ; CODE XREF=main+731
00000000000029ee         mov        esi, 0x3
00000000000029f3         xor        edi, edi
00000000000029f5         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000029fa         mov        rbx, rax
00000000000029fd         call       j___errno_location                          ; __errno_location
0000000000002a02         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002a04         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0xa768
0000000000002a0b         mov        rcx, rbx
0000000000002a0e         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002a13         xor        eax, eax
0000000000002a15         call       j_error                                     ; error

                     loc_2a1a:
0000000000002a1a         lea        rsi, qword [aMultipleRandom]                ; argument "msgid" for method j_dcgettext, "multiple random sources specified", CODE XREF=main+383
0000000000002a21         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a26         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a28         call       j_dcgettext                                 ; dcgettext
0000000000002a2d         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002a2f         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002a32         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002a37         xor        eax, eax
0000000000002a39         call       j_error                                     ; error
0000000000002a3e         nop                                                    ; End of unwind block (FDE at 0xb7d4)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000002a40         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0xb5ac)
0000000000002a42         mov        r9, rdx
0000000000002a45         pop        rsi
0000000000002a46         mov        rdx, rsp
0000000000002a49         and        rsp, 0xfffffffffffffff0
0000000000002a4d         push       rax
0000000000002a4e         push       rsp
0000000000002a4f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000002a56         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000002a5d         lea        rdi, qword [main]                           ; main
0000000000002a64         call       qword [qword_20dfd8+8]                      ; 0x20dfe0
0000000000002a6a         hlt
                        ; endp
0000000000002a6b         align      16                                          ; End of unwind block (FDE at 0xb5ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000002a70         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000002a77         push       rbp
0000000000002a78         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000002a7f         cmp        rax, rdi
0000000000002a82         mov        rbp, rsp
0000000000002a85         je         loc_2aa0

0000000000002a87         mov        rax, qword [qword_20dfd8]                   ; qword_20dfd8
0000000000002a8e         test       rax, rax
0000000000002a91         je         loc_2aa0

0000000000002a93         pop        rbp
0000000000002a94         jmp        rax
                        ; endp
0000000000002a96         align      32

                     loc_2aa0:
0000000000002aa0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000002aa1         ret
                        ; endp
0000000000002aa2         align      16

                     register_tm_clones:
0000000000002ab0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000002ab7         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000002abe         push       rbp
0000000000002abf         sub        rsi, rdi
0000000000002ac2         mov        rbp, rsp
0000000000002ac5         sar        rsi, 0x3
0000000000002ac9         mov        rax, rsi
0000000000002acc         shr        rax, 0x3f
0000000000002ad0         add        rsi, rax
0000000000002ad3         sar        rsi, 0x1
0000000000002ad6         je         loc_2af0

0000000000002ad8         mov        rax, qword [qword_20dff0]                   ; qword_20dff0
0000000000002adf         test       rax, rax
0000000000002ae2         je         loc_2af0

0000000000002ae4         pop        rbp
0000000000002ae5         jmp        rax
                        ; endp
0000000000002ae7         align      16

                     loc_2af0:
0000000000002af0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000002af1         ret
                        ; endp
0000000000002af2         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000002b00         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000002b07         jne        loc_2b38

0000000000002b09         cmp        qword [qword_20dff8], 0x0                   ; qword_20dff8
0000000000002b11         push       rbp
0000000000002b12         mov        rbp, rsp
0000000000002b15         je         loc_2b23

0000000000002b17         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000002b1e         call       j_qword_20dff8                              ; qword_20dff8

                     loc_2b23:
0000000000002b23         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000002b28         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000002b2f         pop        rbp
0000000000002b30         ret
                        ; endp
0000000000002b31         align      8

                     loc_2b38:
0000000000002b38         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000002b3a         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000002b40         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000002b41         mov        rbp, rsp
0000000000002b44         pop        rbp
0000000000002b45         jmp        register_tm_clones                          ; register_tm_clones
0000000000002b4a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     clear_random_data:
0000000000002b50         mov        rdi, qword [randint_source]                 ; Begin of unwind block (FDE at 0xb61c), randint_source, DATA XREF=main+737
0000000000002b57         jmp        randint_all_free                            ; randint_all_free
0000000000002b5c         align      32                                          ; End of unwind block (FDE at 0xb61c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int32_t, -104


                     direct_mode:
0000000000002b60         push       rbp                                         ; Begin of unwind block (FDE at 0xb630), CODE XREF=dopass+1192, dopass+1417
0000000000002b61         push       rbx
0000000000002b62         xor        eax, eax
0000000000002b64         mov        ebp, esi
0000000000002b66         mov        esi, 0x3
0000000000002b6b         mov        ebx, edi
0000000000002b6d         sub        rsp, 0x8
0000000000002b71         call       rpl_fcntl                                   ; rpl_fcntl
0000000000002b76         test       eax, eax
0000000000002b78         jle        loc_2ba8

0000000000002b7a         mov        ecx, eax
0000000000002b7c         mov        edx, eax
0000000000002b7e         or         ch, 0x40
0000000000002b81         and        dh, 0xbf
0000000000002b84         test       bpl, bpl
0000000000002b87         cmovne     edx, ecx
0000000000002b8a         cmp        edx, eax
0000000000002b8c         je         loc_2ba8

0000000000002b8e         add        rsp, 0x8
0000000000002b92         mov        edi, ebx
0000000000002b94         mov        esi, 0x4
0000000000002b99         pop        rbx
0000000000002b9a         pop        rbp
0000000000002b9b         xor        eax, eax
0000000000002b9d         jmp        rpl_fcntl                                   ; rpl_fcntl
0000000000002ba2         align      8

                     loc_2ba8:
0000000000002ba8         add        rsp, 0x8                                    ; CODE XREF=direct_mode+24, direct_mode+44
0000000000002bac         pop        rbx
0000000000002bad         pop        rbp
0000000000002bae         ret
                        ; endp
0000000000002baf         align      16                                          ; End of unwind block (FDE at 0xb630)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dosync:
0000000000002bb0         push       r13                                         ; Begin of unwind block (FDE at 0xb664), CODE XREF=main+1719, main+1966, dopass+1809, dopass+1986
0000000000002bb2         push       r12
0000000000002bb4         mov        r13, rsi
0000000000002bb7         push       rbp
0000000000002bb8         push       rbx
0000000000002bb9         mov        ebx, edi
0000000000002bbb         sub        rsp, 0x8
0000000000002bbf         call       j_fdatasync                                 ; fdatasync
0000000000002bc4         test       eax, eax
0000000000002bc6         je         loc_2c35

0000000000002bc8         call       j___errno_location                          ; __errno_location
0000000000002bcd         mov        ebp, dword [rax]
0000000000002bcf         mov        r12, rax
0000000000002bd2         lea        eax, dword [rbp-0x15]
0000000000002bd5         cmp        eax, 0x1
0000000000002bd8         jbe        loc_2bdf

0000000000002bda         cmp        ebp, 0x9
0000000000002bdd         jne        loc_2c48

                     loc_2bdf:
0000000000002bdf         mov        edi, ebx                                    ; argument "__fd" for method j_fsync, CODE XREF=dosync+40
0000000000002be1         call       j_fsync                                     ; fsync
0000000000002be6         test       eax, eax
0000000000002be8         je         loc_2c35

0000000000002bea         mov        ebx, dword [r12]
0000000000002bee         lea        eax, dword [rbx-0x15]
0000000000002bf1         cmp        eax, 0x1
0000000000002bf4         jbe        loc_2c30

0000000000002bf6         cmp        ebx, 0x9
0000000000002bf9         je         loc_2c30

0000000000002bfb         lea        rsi, qword [aSFsyncFailed]                  ; argument "msgid" for method j_dcgettext, "%s: fsync failed"
0000000000002c02         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002c07         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002c09         call       j_dcgettext                                 ; dcgettext
0000000000002c0e         mov        rcx, r13
0000000000002c11         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002c14         mov        esi, ebx                                    ; argument "__errnum" for method j_error
0000000000002c16         xor        eax, eax
0000000000002c18         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002c1a         call       j_error                                     ; error
0000000000002c1f         mov        dword [r12], ebx
0000000000002c23         mov        eax, 0xffffffff
0000000000002c28         jmp        loc_2c37
0000000000002c2a         align      16

                     loc_2c30:
0000000000002c30         call       j_sync                                      ; sync, CODE XREF=dosync+68, dosync+73

                     loc_2c35:
0000000000002c35         xor        eax, eax                                    ; CODE XREF=dosync+22, dosync+56

                     loc_2c37:
0000000000002c37         add        rsp, 0x8                                    ; CODE XREF=dosync+120
0000000000002c3b         pop        rbx
0000000000002c3c         pop        rbp
0000000000002c3d         pop        r12
0000000000002c3f         pop        r13
0000000000002c41         ret
                        ; endp
0000000000002c42         align      8

                     loc_2c48:
0000000000002c48         lea        rsi, qword [aSFdatasyncFail]                ; argument "msgid" for method j_dcgettext, "%s: fdatasync failed", CODE XREF=dosync+45
0000000000002c4f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002c54         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002c56         call       j_dcgettext                                 ; dcgettext
0000000000002c5b         mov        rcx, r13
0000000000002c5e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002c61         mov        esi, ebp                                    ; argument "__errnum" for method j_error
0000000000002c63         xor        eax, eax
0000000000002c65         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002c67         call       j_error                                     ; error
0000000000002c6c         mov        dword [r12], ebp
0000000000002c70         add        rsp, 0x8
0000000000002c74         mov        eax, 0xffffffff
0000000000002c79         pop        rbx
0000000000002c7a         pop        rbp
0000000000002c7b         pop        r12
0000000000002c7d         pop        r13
0000000000002c7f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_2D8: int8_t, -728
        ;    var_568: int8_t, -1384
        ;    var_7F8: int8_t, -2040
        ;    var_7F9: int8_t, -2041
        ;    var_7FB: int16_t, -2043
        ;    var_7FF: int32_t, -2047
        ;    var_804: int32_t, -2052
        ;    var_808: int16_t, -2056
        ;    var_810: int64_t, -2064
        ;    var_818: int64_t, -2072
        ;    var_820: int64_t, -2080
        ;    var_828: int64_t, -2088
        ;    var_830: int64_t, -2096
        ;    var_838: int64_t, -2104
        ;    var_840: int64_t, -2112
        ;    var_848: int64_t, -2120
        ;    var_850: int64_t, -2128
        ;    var_851: int8_t, -2129
        ;    var_858: int32_t, -2136
        ;    var_860: int64_t, -2144
        ;    var_868: int64_t, -2152
        ;    var_870: int64_t, -2160
        ;    var_878: int64_t, -2168


                     dopass:
0000000000002c80         push       r15                                         ; End of unwind block (FDE at 0xb664), Begin of unwind block (FDE at 0xb6b0), CODE XREF=do_wipefd+1067
0000000000002c82         push       r14
0000000000002c84         mov        rax, rcx
0000000000002c87         push       r13
0000000000002c89         push       r12
0000000000002c8b         mov        r14d, edi
0000000000002c8e         push       rbp
0000000000002c8f         push       rbx
0000000000002c90         mov        ebx, r8d
0000000000002c93         sub        rsp, 0x848
0000000000002c9a         mov        r15, qword [rax]
0000000000002c9d         mov        qword [rsp+0x878+var_828], rcx
0000000000002ca2         mov        qword [rsp+0x878+var_878], rsi
0000000000002ca6         mov        rcx, qword [fs:0x28]
0000000000002caf         mov        qword [rsp+0x878+var_40], rcx
0000000000002cb7         xor        ecx, ecx
0000000000002cb9         mov        qword [rsp+0x878+var_870], rdx
0000000000002cbe         mov        dword [rsp+0x878+var_858], r8d
0000000000002cc3         mov        qword [rsp+0x878+var_830], r9
0000000000002cc8         call       j_getpagesize                               ; getpagesize
0000000000002ccd         test       ebx, ebx
0000000000002ccf         movsxd     rbp, eax
0000000000002cd2         jle        loc_2dd0

0000000000002cd8         mov        edx, ebx
0000000000002cda         and        edx, 0xfff
0000000000002ce0         mov        eax, edx
0000000000002ce2         shl        eax, 0xc
0000000000002ce5         or         eax, edx
0000000000002ce7         mov        edx, eax
0000000000002ce9         shr        edx, 0x4
0000000000002cec         cmp        ah, dl
0000000000002cee         jne        loc_2cf8

0000000000002cf0         cmp        dl, al
0000000000002cf2         je         loc_2dd0

                     loc_2cf8:
0000000000002cf8         mov        r13d, 0xf000                                ; CODE XREF=dopass+110
0000000000002cfe         mov        qword [rsp+0x878+var_860], 0xf000

                     loc_2d07:
0000000000002d07         lea        rbx, qword [rbp-1]                          ; CODE XREF=dopass+351
0000000000002d0b         mov        r12, r15
0000000000002d0e         lea        rdi, qword [r13+rbx]
0000000000002d13         call       xmalloc                                     ; xmalloc
0000000000002d18         test       r15, r15
0000000000002d1b         mov        qword [rsp+0x878+var_848], rax
0000000000002d20         setg       dl
0000000000002d23         cmp        r15, qword [rsp+0x878+var_860]
0000000000002d28         setb       al
0000000000002d2b         and        dl, al
0000000000002d2d         mov        byte [rsp+0x878+var_851], dl
0000000000002d31         je         loc_3120

                     loc_2d37:
0000000000002d37         mov        rax, qword [rsp+0x878+var_878]              ; CODE XREF=dopass+1197
0000000000002d3b         mov        eax, dword [rax+0x18]
0000000000002d3e         and        eax, 0xf000
0000000000002d43         cmp        eax, j_chmod
0000000000002d48         je         loc_2de8

                     loc_2d4e:
0000000000002d4e         xor        edx, edx                                    ; argument "__whence" for method j_lseek, CODE XREF=dopass+400
0000000000002d50         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000002d52         mov        edi, r14d                                   ; argument "__fd" for method j_lseek
0000000000002d55         call       j_lseek                                     ; lseek
0000000000002d5a         cmp        rax, 0x0
0000000000002d5e         jle        loc_3138

0000000000002d64         call       j___errno_location                          ; __errno_location
0000000000002d69         mov        rbx, rax
0000000000002d6c         mov        dword [rax], 0x16

                     loc_2d72:
0000000000002d72         lea        rsi, qword [aSCannotRewind]                 ; argument "msgid" for method j_dcgettext, "%s: cannot rewind", CODE XREF=dopass+1222
0000000000002d79         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002d7e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002d80         call       j_dcgettext                                 ; dcgettext
0000000000002d85         mov        rcx, qword [rsp+0x878+var_870]
0000000000002d8a         mov        esi, dword [rbx]
0000000000002d8c         mov        rdx, rax

                     loc_2d8f:
0000000000002d8f         xor        edi, edi                                    ; argument "__status" for method j_error, CODE XREF=dopass+1134
0000000000002d91         xor        eax, eax
0000000000002d93         call       j_error                                     ; error

                     loc_2d98:
0000000000002d98         mov        rdi, qword [rsp+0x878+var_848]              ; CODE XREF=dopass+947, dopass+966, dopass+1044, dopass+1830

                     loc_2d9d:
0000000000002d9d         call       j_free                                      ; free, CODE XREF=dopass+2012
0000000000002da2         mov        eax, 0xffffffff

                     loc_2da7:
0000000000002da7         mov        rcx, qword [rsp+0x878+var_40]               ; CODE XREF=dopass+2028, dopass+2167
0000000000002daf         xor        rcx, qword [fs:0x28]
0000000000002db8         jne        loc_34fc

0000000000002dbe         add        rsp, 0x848
0000000000002dc5         pop        rbx
0000000000002dc6         pop        rbp
0000000000002dc7         pop        r12
0000000000002dc9         pop        r13
0000000000002dcb         pop        r14
0000000000002dcd         pop        r15
0000000000002dcf         ret
                        ; endp

                     loc_2dd0:
0000000000002dd0         mov        r13d, 0x10002                               ; CODE XREF=dopass+82, dopass+114
0000000000002dd6         mov        qword [rsp+0x878+var_860], 0x10000
0000000000002ddf         jmp        loc_2d07
0000000000002de4         align      8

                     loc_2de8:
0000000000002de8         mov        eax, 0x6                                    ; CODE XREF=dopass+200
0000000000002ded         lea        rdx, qword [rsp+0x878+var_808]
0000000000002df2         mov        esi, 0x40086d01                             ; argument "__request" for method j_ioctl
0000000000002df7         mov        word [rsp+0x878+var_808], ax
0000000000002dfc         mov        edi, r14d                                   ; argument "__fd" for method j_ioctl
0000000000002dff         xor        eax, eax
0000000000002e01         mov        dword [rsp+0x878+var_804], 0x1
0000000000002e09         call       j_ioctl                                     ; ioctl
0000000000002e0e         test       eax, eax
0000000000002e10         jne        loc_2d4e

                     loc_2e16:
0000000000002e16         add        rbx, qword [rsp+0x878+var_848]              ; CODE XREF=loc_3138
0000000000002e1b         xor        edx, edx
0000000000002e1d         mov        r11d, dword [rsp+0x878+var_858]
0000000000002e22         mov        rax, rbx
0000000000002e25         div        rbp
0000000000002e28         sub        rbx, rdx
0000000000002e2b         test       r11d, r11d
0000000000002e2e         js         loc_31e0

0000000000002e34         cmp        r15, r13
0000000000002e37         jae        loc_31d0

0000000000002e3d         test       r15, r15
0000000000002e40         js         loc_31d0

                     loc_2e46:
0000000000002e46         mov        eax, dword [rsp+0x878+var_858]              ; CODE XREF=dopass+1363
0000000000002e4a         mov        rbp, r12
0000000000002e4d         mov        r13d, 0x3
0000000000002e53         shr        rbp, 0x1
0000000000002e56         and        eax, 0xfff
0000000000002e5b         mov        edx, eax
0000000000002e5d         shl        edx, 0xc
0000000000002e60         or         eax, edx
0000000000002e62         mov        edx, eax
0000000000002e64         mov        byte [rbx+1], ah
0000000000002e67         mov        byte [rbx+2], al
0000000000002e6a         shr        edx, 0x4
0000000000002e6d         cmp        rbp, 0x2
0000000000002e71         mov        byte [rbx], dl
0000000000002e73         jbe        loc_2e8f

0000000000002e75         nop        dword [rax]

                     loc_2e78:
0000000000002e78         lea        rdi, qword [rbx+r13]                        ; argument "__dest" for method j_memcpy, CODE XREF=dopass+525
0000000000002e7c         mov        rdx, r13                                    ; argument "__n" for method j_memcpy
0000000000002e7f         mov        rsi, rbx                                    ; argument "__src" for method j_memcpy
0000000000002e82         add        r13, r13
0000000000002e85         call       j_memcpy                                    ; memcpy
0000000000002e8a         cmp        rbp, r13
0000000000002e8d         jae        loc_2e78

                     loc_2e8f:
0000000000002e8f         cmp        r12, r13                                    ; CODE XREF=dopass+499
0000000000002e92         ja         loc_31b0

                     loc_2e98:
0000000000002e98         test       dword [rsp+0x878+var_858], 0x1000           ; CODE XREF=dopass+1346
0000000000002ea0         je         loc_2ebf

0000000000002ea2         test       r12, r12
0000000000002ea5         je         loc_2ebf

0000000000002ea7         xor        eax, eax
0000000000002ea9         nop        dword [rax]

                     loc_2eb0:
0000000000002eb0         add        byte [rbx+rax], 0x80                        ; CODE XREF=dopass+573
0000000000002eb4         add        rax, 0x200
0000000000002eba         cmp        r12, rax
0000000000002ebd         ja         loc_2eb0

                     loc_2ebf:
0000000000002ebf         movzx      eax, byte [rbx+2]                           ; CODE XREF=dopass+544, dopass+549
0000000000002ec3         lea        rdi, qword [rsp+0x878+var_7FF]
0000000000002ec8         sub        rsp, 0x8
0000000000002ecc         lea        rcx, qword [a02x02x02x]                     ; "%02x%02x%02x"
0000000000002ed3         mov        edx, 0x7
0000000000002ed8         mov        esi, 0x1
0000000000002edd         push       rax
0000000000002ede         movzx      r9d, byte [rbx+1]
0000000000002ee3         xor        eax, eax
0000000000002ee5         movzx      r8d, byte [rbx]
0000000000002ee9         call       j___sprintf_chk                             ; __sprintf_chk
0000000000002eee         pop        rax
0000000000002eef         pop        rdx

                     loc_2ef0:
0000000000002ef0         cmp        qword [rsp+0x878+arg_8], 0x0                ; CODE XREF=dopass+1401
0000000000002ef9         jne        loc_3150

                     loc_2eff:
0000000000002eff         lea        rax, qword [aWrittenBySSAnd+27]             ; 0xadb0, CODE XREF=dopass+1319
0000000000002f06         mov        byte [rsp+0x878+var_868], 0x0
0000000000002f0b         mov        qword [rsp+0x878+var_818], 0x0
0000000000002f14         mov        qword [rsp+0x878+var_878], 0x0
0000000000002f1c         mov        r13, r15
0000000000002f1f         mov        qword [rsp+0x878+var_820], rax

                     loc_2f24:
0000000000002f24         test       r13, r13                                    ; CODE XREF=dopass+1490, dopass+1522, dopass+1579, dopass+1846, dopass+1882, dopass+1955, dopass+1973
0000000000002f27         js         loc_30f8

0000000000002f2d         mov        rax, qword [rsp+0x878+var_878]
0000000000002f31         mov        rbp, r13
0000000000002f34         sub        rbp, rax
0000000000002f37         cmp        rbp, qword [rsp+0x878+var_860]
0000000000002f3c         jae        loc_30f8

0000000000002f42         test       rbp, rbp
0000000000002f45         je         loc_343a

0000000000002f4b         cmp        r13, rax
0000000000002f4e         jl         loc_343a

0000000000002f54         mov        edi, dword [rsp+0x878+var_858]
0000000000002f58         test       edi, edi
0000000000002f5a         js         loc_3109

                     loc_2f60:
0000000000002f60         lea        rax, qword [rsp+0x878+var_2D8]              ; CODE XREF=dopass+1155, dopass+1177
0000000000002f68         xor        r15d, r15d
0000000000002f6b         mov        qword [rsp+0x878+var_850], r13
0000000000002f70         mov        qword [rsp+0x878+var_840], rax
0000000000002f75         mov        rax, r13
0000000000002f78         not        rax
0000000000002f7b         shr        rax, 0x3f
0000000000002f7f         mov        qword [rsp+0x878+var_838], rax
0000000000002f84         jmp        loc_2f9c
0000000000002f86         align      16

                     loc_2f90:
0000000000002f90         add        r15, rax                                    ; CODE XREF=dopass+817

                     loc_2f93:
0000000000002f93         cmp        rbp, r15                                    ; CODE XREF=dopass+998
0000000000002f96         jbe        loc_3220

                     loc_2f9c:
0000000000002f9c         mov        rdx, rbp                                    ; CODE XREF=dopass+772, dopass+1425
0000000000002f9f         lea        rsi, qword [rbx+r15]                        ; argument "__buf" for method j_write
0000000000002fa3         mov        edi, r14d                                   ; argument "__fd" for method j_write
0000000000002fa6         sub        rdx, r15                                    ; argument "__n" for method j_write
0000000000002fa9         call       j_write                                     ; write
0000000000002fae         test       rax, rax
0000000000002fb1         jg         loc_2f90

0000000000002fb3         cmp        qword [rsp+0x878+var_850], 0x0
0000000000002fb9         js         loc_30a0

0000000000002fbf         call       j___errno_location                          ; __errno_location
0000000000002fc4         mov        r12d, dword [rax]
0000000000002fc7         mov        r13, rax

                     loc_2fca:
0000000000002fca         movzx      eax, byte [rsp+0x878+var_851]               ; CODE XREF=dopass+1076
0000000000002fcf         xor        eax, 0x1
0000000000002fd2         cmp        r12d, 0x16
0000000000002fd6         sete       dl
0000000000002fd9         and        al, dl
0000000000002fdb         jne        loc_3200

0000000000002fe1         mov        rax, qword [rsp+0x878+var_878]
0000000000002fe5         mov        rsi, qword [rsp+0x878+var_840]
0000000000002fea         lea        rdi, qword [rax+r15]
0000000000002fee         call       umaxtostr                                   ; umaxtostr
0000000000002ff3         lea        rsi, qword [aSErrorWritingA]                ; argument "msgid" for method j_dcgettext, "%s: error writing at offset %s"
0000000000002ffa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002ffc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003001         mov        qword [rsp+0x878+var_868], rax
0000000000003006         call       j_dcgettext                                 ; dcgettext
000000000000300b         mov        r8, qword [rsp+0x878+var_868]
0000000000003010         mov        rcx, qword [rsp+0x878+var_870]
0000000000003015         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003018         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000301a         xor        eax, eax
000000000000301c         mov        esi, r12d                                   ; argument "__errnum" for method j_error
000000000000301f         call       j_error                                     ; error
0000000000003024         cmp        r12d, 0x5
0000000000003028         sete       al
000000000000302b         and        al, byte [rsp+0x878+var_838]
000000000000302f         mov        byte [rsp+0x878+var_868], al
0000000000003033         je         loc_2d98

0000000000003039         mov        r9, r15
000000000000303c         or         r9, 0x1ff
0000000000003043         cmp        r9, rbp
0000000000003046         jae        loc_2d98

000000000000304c         mov        rax, qword [rsp+0x878+var_878]
0000000000003050         lea        r15, qword [r9+1]
0000000000003054         xor        edx, edx                                    ; argument "__whence" for method j_lseek
0000000000003056         mov        edi, r14d                                   ; argument "__fd" for method j_lseek
0000000000003059         lea        rsi, qword [rax+r15]                        ; argument "__offset" for method j_lseek
000000000000305d         call       j_lseek                                     ; lseek
0000000000003062         cmp        rax, 0xffffffffffffffff
0000000000003066         jne        loc_2f93

000000000000306c         lea        rsi, qword [aSLseekFailed]                  ; argument "msgid" for method j_dcgettext, "%s: lseek failed"
0000000000003073         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003075         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000307a         call       j_dcgettext                                 ; dcgettext
000000000000307f         mov        rcx, qword [rsp+0x878+var_870]
0000000000003084         mov        esi, dword [r13]                            ; argument "__errnum" for method j_error
0000000000003088         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000308b         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000308d         xor        eax, eax
000000000000308f         call       j_error                                     ; error
0000000000003094         jmp        loc_2d98
0000000000003099         align      32

                     loc_30a0:
00000000000030a0         test       rax, rax                                    ; CODE XREF=dopass+825
00000000000030a3         je         loc_30ba

00000000000030a5         call       j___errno_location                          ; __errno_location
00000000000030aa         mov        r12d, dword [rax]
00000000000030ad         mov        r13, rax
00000000000030b0         cmp        r12d, 0x1c
00000000000030b4         jne        loc_2fca

                     loc_30ba:
00000000000030ba         movabs     rax, 0x7fffffffffffffff                     ; CODE XREF=dopass+1059
00000000000030c4         sub        rax, qword [rsp+0x878+var_878]
00000000000030c8         cmp        rax, r15
00000000000030cb         jae        loc_33bb

                     loc_30d1:
00000000000030d1         lea        rsi, qword [aSFileTooLarge]                 ; argument "msgid" for method j_dcgettext, "%s: file too large", CODE XREF=dopass+1465
00000000000030d8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000030dd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000030df         call       j_dcgettext                                 ; dcgettext
00000000000030e4         mov        rcx, qword [rsp+0x878+var_870]
00000000000030e9         mov        rdx, rax
00000000000030ec         xor        esi, esi
00000000000030ee         jmp        loc_2d8f
00000000000030f3         align      8

                     loc_30f8:
00000000000030f8         mov        edi, dword [rsp+0x878+var_858]              ; CODE XREF=dopass+679, dopass+700
00000000000030fc         mov        rbp, qword [rsp+0x878+var_860]
0000000000003101         test       edi, edi
0000000000003103         jns        loc_2f60

                     loc_3109:
0000000000003109         mov        rdi, qword [rsp+0x878+var_830]              ; CODE XREF=dopass+730
000000000000310e         mov        rdx, rbp
0000000000003111         mov        rsi, rbx
0000000000003114         call       randread                                    ; randread
0000000000003119         jmp        loc_2f60
000000000000311e         align      32

                     loc_3120:
0000000000003120         mov        esi, 0x1                                    ; CODE XREF=dopass+177
0000000000003125         mov        edi, r14d
0000000000003128         call       direct_mode                                 ; direct_mode
000000000000312d         jmp        loc_2d37
0000000000003132         align      8

                     loc_3138:
0000000000003138         je         loc_2e16                                    ; CODE XREF=dopass+222

000000000000313e         call       j___errno_location                          ; __errno_location
0000000000003143         mov        rbx, rax
0000000000003146         jmp        loc_2d72
000000000000314b         align      16

                     loc_3150:
0000000000003150         lea        rsi, qword [aSPassLuluS]                    ; argument "msgid" for method j_dcgettext, "%s: pass %lu/%lu (%s)...", CODE XREF=dopass+633
0000000000003157         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000315c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000315e         call       j_dcgettext                                 ; dcgettext
0000000000003163         sub        rsp, 0x8
0000000000003167         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003169         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000316b         lea        rdx, qword [rsp+0x880+var_7FF]
0000000000003173         push       rdx
0000000000003174         mov        r9, qword [rsp+0x888+arg_8]
000000000000317c         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000317f         mov        r8, qword [rsp+0x888+arg_0]
0000000000003187         mov        rcx, qword [rsp+0x888+var_870]
000000000000318c         xor        eax, eax
000000000000318e         call       j_error                                     ; error
0000000000003193         xor        edi, edi                                    ; argument "__timer" for method j_time
0000000000003195         call       j_time                                      ; time
000000000000319a         add        rax, 0x5
000000000000319e         mov        qword [rsp+0x888+var_810], rax
00000000000031a3         pop        r8
00000000000031a5         pop        r9
00000000000031a7         jmp        loc_2eff
00000000000031ac         align      16

                     loc_31b0:
00000000000031b0         mov        rdx, r12                                    ; CODE XREF=dopass+530
00000000000031b3         lea        rdi, qword [rbx+r13]                        ; argument "__dest" for method j_memcpy
00000000000031b7         mov        rsi, rbx                                    ; argument "__src" for method j_memcpy
00000000000031ba         sub        rdx, r13                                    ; argument "__n" for method j_memcpy
00000000000031bd         call       j_memcpy                                    ; memcpy
00000000000031c2         jmp        loc_2e98
00000000000031c7         align      16

                     loc_31d0:
00000000000031d0         mov        r12, r13                                    ; CODE XREF=dopass+439, dopass+448
00000000000031d3         jmp        loc_2e46
00000000000031d8         align      32

                     loc_31e0:
00000000000031e0         mov        r10d, 0x6d6f                                ; CODE XREF=dopass+430
00000000000031e6         mov        dword [rsp+0x878+var_7FF], 0x646e6172
00000000000031ee         mov        byte [rsp+0x878+var_7F9], 0x0
00000000000031f3         mov        word [rsp+0x878+var_7FB], r10w
00000000000031f9         jmp        loc_2ef0
00000000000031fe         align      512

                     loc_3200:
0000000000003200         xor        esi, esi                                    ; CODE XREF=dopass+859
0000000000003202         mov        edi, r14d
0000000000003205         mov        byte [rsp+0x878+var_851], al
0000000000003209         call       direct_mode                                 ; direct_mode
000000000000320e         cmp        rbp, r15
0000000000003211         ja         loc_2f9c

0000000000003217         nop        word [rax+rax]

                     loc_3220:
0000000000003220         mov        rcx, qword [rsp+0x878+var_878]              ; CODE XREF=dopass+790
0000000000003224         movabs     rax, 0x7fffffffffffffff
000000000000322e         mov        r13, qword [rsp+0x878+var_850]
0000000000003233         sub        rax, rcx
0000000000003236         cmp        rax, r15
0000000000003239         jb         loc_30d1

000000000000323f         add        rcx, r15
0000000000003242         cmp        qword [rsp+0x878+arg_8], 0x0
000000000000324b         mov        rbp, rcx
000000000000324e         mov        qword [rsp+0x878+var_878], rcx
0000000000003252         je         loc_2f24

0000000000003258         cmp        r13, rcx
000000000000325b         je         loc_33e0

0000000000003261         xor        edi, edi                                    ; argument "__timer" for method j_time
0000000000003263         call       j_time                                      ; time
0000000000003268         cmp        qword [rsp+0x878+var_810], rax
000000000000326d         mov        qword [rsp+0x878+var_818], rax
0000000000003272         jg         loc_2f24

0000000000003278         mov        rdi, qword [rsp+0x878+var_878]
000000000000327c         lea        rsi, qword [rsp+0x878+var_568]
0000000000003284         mov        r8d, 0x1
000000000000328a         mov        ecx, 0x1
000000000000328f         mov        edx, 0x1b2
0000000000003294         call       human_readable                              ; human_readable
0000000000003299         mov        rdi, qword [rsp+0x878+var_820]              ; argument "__s1" for method j_strcmp
000000000000329e         mov        rsi, rax                                    ; argument "__s2" for method j_strcmp
00000000000032a1         mov        r12, rax
00000000000032a4         call       j_strcmp                                    ; strcmp
00000000000032a9         test       eax, eax
00000000000032ab         je         loc_2f24

                     loc_32b1:
00000000000032b1         test       r13, r13                                    ; CODE XREF=dopass+1933
00000000000032b4         js         loc_3471

00000000000032ba         mov        r15d, 0x64
00000000000032c0         je         loc_32ea

00000000000032c2         movabs     rax, 0x28f5c28f5c28f5c
00000000000032cc         cmp        rbp, rax
00000000000032cf         ja         loc_34b9

00000000000032d5         lea        rax, qword [rbp+rbp*4]
00000000000032da         xor        edx, edx
00000000000032dc         lea        rax, qword [rax+rax*4]
00000000000032e0         shl        rax, 0x2
00000000000032e4         div        r13
00000000000032e7         mov        r15d, eax

                     loc_32ea:
00000000000032ea         lea        rsi, qword [rsp+0x878+var_2D8]              ; CODE XREF=dopass+1600, dopass+2147
00000000000032f2         mov        r8d, 0x1
00000000000032f8         mov        ecx, 0x1
00000000000032fd         mov        edx, 0x1b0
0000000000003302         mov        rdi, r13
0000000000003305         call       human_readable                              ; human_readable
000000000000330a         cmp        rbp, r13
000000000000330d         lea        rsi, qword [aSPassLuluSssD]                 ; argument "msgid" for method j_dcgettext, "%s: pass %lu/%lu (%s)...%s/%s %d%%"
0000000000003314         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003319         cmove      r12, rax
000000000000331d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000331f         mov        qword [rsp+0x878+var_850], rax
0000000000003324         call       j_dcgettext                                 ; dcgettext
0000000000003329         push       r15
000000000000332b         mov        rcx, qword [rsp+0x880+var_850]
0000000000003330         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003332         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003334         push       rcx
0000000000003335         push       r12
0000000000003337         lea        rdx, qword [rsp+0x890+var_7FF]
000000000000333f         push       rdx
0000000000003340         mov        r9, qword [rsp+0x898+arg_8]
0000000000003348         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000334b         mov        r8, qword [rsp+0x898+arg_0]
0000000000003353         mov        rcx, qword [rsp+0x898+var_870]
0000000000003358         xor        eax, eax
000000000000335a         call       j_error                                     ; error
000000000000335f         add        rsp, 0x20

                     loc_3363:
0000000000003363         lea        rbp, qword [rsp+0x878+var_7F8]              ; CODE XREF=dopass+2100
000000000000336b         mov        edx, 0x28c
0000000000003370         mov        rsi, r12
0000000000003373         mov        rdi, rbp
0000000000003376         call       j___strcpy_chk                              ; __strcpy_chk
000000000000337b         mov        rax, qword [rsp+0x878+var_818]
0000000000003380         mov        rsi, qword [rsp+0x878+var_870]
0000000000003385         mov        edi, r14d
0000000000003388         add        rax, 0x5
000000000000338c         mov        qword [rsp+0x878+var_810], rax
0000000000003391         call       dosync                                      ; dosync
0000000000003396         test       eax, eax
0000000000003398         je         loc_3430

000000000000339e         call       j___errno_location                          ; __errno_location
00000000000033a3         cmp        dword [rax], 0x5
00000000000033a6         jne        loc_2d98

00000000000033ac         mov        qword [rsp+0x878+var_820], rbp
00000000000033b1         mov        byte [rsp+0x878+var_868], 0x1
00000000000033b6         jmp        loc_2f24

                     loc_33bb:
00000000000033bb         mov        rbp, qword [rsp+0x878+var_878]              ; CODE XREF=dopass+1099
00000000000033bf         mov        rax, qword [rsp+0x878+var_828]
00000000000033c4         add        rbp, r15
00000000000033c7         cmp        qword [rsp+0x878+arg_8], 0x0
00000000000033d0         mov        r13, rbp
00000000000033d3         mov        qword [rsp+0x878+var_878], rbp
00000000000033d7         mov        qword [rax], rbp
00000000000033da         je         loc_2f24

                     loc_33e0:
00000000000033e0         mov        rax, qword [rsp+0x878+var_820]              ; CODE XREF=dopass+1499
00000000000033e5         cmp        byte [rax], 0x0
00000000000033e8         je         loc_3412

                     loc_33ea:
00000000000033ea         lea        rsi, qword [rsp+0x878+var_568]              ; CODE XREF=dopass+1961
00000000000033f2         mov        r8d, 0x1
00000000000033f8         mov        ecx, 0x1
00000000000033fd         mov        edx, 0x1b2
0000000000003402         mov        rdi, rbp
0000000000003405         call       human_readable                              ; human_readable
000000000000340a         mov        r12, rax
000000000000340d         jmp        loc_32b1

                     loc_3412:
0000000000003412         xor        edi, edi                                    ; argument "__timer" for method j_time, CODE XREF=dopass+1896
0000000000003414         call       j_time                                      ; time
0000000000003419         cmp        qword [rsp+0x878+var_810], rax
000000000000341e         mov        qword [rsp+0x878+var_818], rax
0000000000003423         jg         loc_2f24

0000000000003429         jmp        loc_33ea
000000000000342b         align      16

                     loc_3430:
0000000000003430         mov        qword [rsp+0x878+var_820], rbp              ; CODE XREF=dopass+1816
0000000000003435         jmp        loc_2f24

                     loc_343a:
000000000000343a         mov        rsi, qword [rsp+0x878+var_870]              ; CODE XREF=dopass+709, dopass+718
000000000000343f         mov        edi, r14d
0000000000003442         call       dosync                                      ; dosync
0000000000003447         test       eax, eax
0000000000003449         je         loc_34e8

000000000000344f         call       j___errno_location                          ; __errno_location
0000000000003454         cmp        dword [rax], 0x5
0000000000003457         mov        rdi, qword [rsp+0x878+var_848]
000000000000345c         jne        loc_2d9d

0000000000003462         call       j_free                                      ; free
0000000000003467         mov        eax, 0x1
000000000000346c         jmp        loc_2da7

                     loc_3471:
0000000000003471         lea        rsi, qword [aSPassLuluSs]                   ; argument "msgid" for method j_dcgettext, "%s: pass %lu/%lu (%s)...%s", CODE XREF=dopass+1588
0000000000003478         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000347d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000347f         call       j_dcgettext                                 ; dcgettext
0000000000003484         push       r12
0000000000003486         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003488         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000348a         lea        rdx, qword [rsp+0x880+var_7FF]
0000000000003492         push       rdx
0000000000003493         mov        r9, qword [rsp+0x888+arg_8]
000000000000349b         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000349e         mov        r8, qword [rsp+0x888+arg_0]
00000000000034a6         mov        rcx, qword [rsp+0x888+var_870]
00000000000034ab         xor        eax, eax
00000000000034ad         call       j_error                                     ; error
00000000000034b2         pop        rcx
00000000000034b3         pop        rsi
00000000000034b4         jmp        loc_3363

                     loc_34b9:
00000000000034b9         movabs     rax, 0xa3d70a3d70a3d70b                     ; CODE XREF=dopass+1615
00000000000034c3         imul       r13
00000000000034c6         mov        rax, r13
00000000000034c9         sar        rax, 0x3f
00000000000034cd         lea        rcx, qword [rdx+r13]
00000000000034d1         xor        edx, edx
00000000000034d3         sar        rcx, 0x6
00000000000034d7         sub        rcx, rax
00000000000034da         mov        rax, rbp
00000000000034dd         div        rcx
00000000000034e0         mov        r15d, eax
00000000000034e3         jmp        loc_32ea

                     loc_34e8:
00000000000034e8         mov        rdi, qword [rsp+0x878+var_848]              ; argument "__ptr" for method j_free, CODE XREF=dopass+1993
00000000000034ed         call       j_free                                      ; free
00000000000034f2         movzx      eax, byte [rsp+0x878+var_868]
00000000000034f7         jmp        loc_2da7

                     loc_34fc:
00000000000034fc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=dopass+312
                        ; endp
0000000000003501         align      16                                          ; End of unwind block (FDE at 0xb6b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_C0: int32_t, -192
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224
        ;    var_F0: int64_t, -240
        ;    var_F8: int64_t, -248
        ;    var_100: int64_t, -256
        ;    var_108: int64_t, -264
        ;    var_110: int64_t, -272
        ;    var_118: int64_t, -280
        ;    var_120: int64_t, -288
        ;    var_121: int8_t, -289
        ;    var_130: int64_t, -304
        ;    var_138: int64_t, -312
        ;    var_140: int64_t, -320
        ;    var_148: int64_t, -328
        ;    var_178: int64_t, -376
        ;    var_188: int64_t, -392
        ;    var_190: int64_t, -400
        ;    var_198: int64_t, -408
        ;    var_1A0: int64_t, -416
        ;    var_1A8: int64_t, -424
        ;    var_1B0: int64_t, -432
        ;    var_1B8: int64_t, -440
        ;    var_1C0: int64_t, -448
        ;    var_1C8: int64_t, -456
        ;    var_1D0: int64_t, -464
        ;    var_1D8: int64_t, -472
        ;    var_1E0: int64_t, -480
        ;    var_1E8: int64_t, -488
        ;    var_1F0: int64_t, -496


                     do_wipefd:
0000000000003510         push       r15                                         ; Begin of unwind block (FDE at 0xb748), CODE XREF=main+854, main+987
0000000000003512         push       r14
0000000000003514         push       r13
0000000000003516         push       r12
0000000000003518         push       rbp
0000000000003519         push       rbx
000000000000351a         mov        ebp, edi
000000000000351c         mov        rbx, rcx
000000000000351f         sub        rsp, 0x118
0000000000003526         mov        rax, qword [fs:0x28]
000000000000352f         mov        qword [rsp+0x148+var_40], rax
0000000000003537         xor        eax, eax
0000000000003539         cmp        byte [rcx+0x1c], 0x0
000000000000353d         mov        qword [rsp+0x148+var_148], rsi
0000000000003541         mov        qword [rsp+0x148+var_118], rdx
0000000000003546         mov        qword [rsp+0x148+var_120], 0x0
000000000000354f         je         loc_355e

0000000000003551         movzx      eax, byte [rcx+0x1e]
0000000000003555         add        rax, qword [rcx+8]
0000000000003559         mov        qword [rsp+0x148+var_120], rax

                     loc_355e:
000000000000355e         lea        rax, qword [rsp+0x148+var_D8]               ; CODE XREF=do_wipefd+63
0000000000003563         mov        esi, ebp                                    ; argument "__fildes" for method j___fxstat
0000000000003565         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
000000000000356a         mov        rdx, rax                                    ; argument "__stat_buf" for method j___fxstat
000000000000356d         mov        qword [rsp+0x148+var_140], rax
0000000000003572         call       j___fxstat                                  ; __fxstat
0000000000003577         test       eax, eax
0000000000003579         jne        loc_3720

000000000000357f         mov        eax, dword [rsp+0x148+var_C0]
0000000000003586         and        eax, 0xf000
000000000000358b         cmp        eax, j_chmod
0000000000003590         je         loc_3858

                     loc_3596:
0000000000003596         cmp        eax, 0xc000                                 ; CODE XREF=do_wipefd+867
000000000000359b         sete       cl
000000000000359e         cmp        eax, 0x1000
00000000000035a3         sete       dl
00000000000035a6         or         cl, dl
00000000000035a8         mov        byte [rsp+0x148+var_121], cl
00000000000035ac         je         loc_3610

                     loc_35ae:
00000000000035ae         lea        rsi, qword [aSInvalidFileTy]                ; argument "msgid" for method j_dcgettext, "%s: invalid file type", CODE XREF=do_wipefd+849
00000000000035b5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000035ba         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000035bc         call       j_dcgettext                                 ; dcgettext
00000000000035c1         mov        rcx, qword [rsp+0x148+var_148]
00000000000035c5         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000035c8         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000035ca         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000035cc         xor        eax, eax
00000000000035ce         call       j_error                                     ; error
00000000000035d3         mov        byte [rsp+0x148+var_121], 0x0

                     loc_35d8:
00000000000035d8         mov        rcx, qword [rsp+0x148+var_40]               ; CODE XREF=do_wipefd+578, do_wipefd+932, do_wipefd+1210
00000000000035e0         xor        rcx, qword [fs:0x28]
00000000000035e9         movzx      eax, byte [rsp+0x148+var_121]
00000000000035ee         jne        loc_3c11

00000000000035f4         add        rsp, 0x118
00000000000035fb         pop        rbx
00000000000035fc         pop        rbp
00000000000035fd         pop        r12
00000000000035ff         pop        r13
0000000000003601         pop        r14
0000000000003603         pop        r15
0000000000003605         ret
                        ; endp
0000000000003606         align      16

                     loc_3610:
0000000000003610         cmp        eax, 0x8000                                 ; CODE XREF=do_wipefd+156
0000000000003615         je         loc_3880

                     loc_361b:
000000000000361b         mov        rdi, qword [rbx+8]                          ; CODE XREF=do_wipefd+889
000000000000361f         mov        edx, 0x4
0000000000003624         xor        ecx, ecx
0000000000003626         mov        rax, rdx
0000000000003629         mul        rdi
000000000000362c         jo         loc_3c07

                     loc_3632:
0000000000003632         test       rax, rax                                    ; CODE XREF=do_wipefd+1788
0000000000003635         js         loc_3c16

000000000000363b         test       rcx, rcx
000000000000363e         jne        loc_3c16

0000000000003644         shl        rdi, 0x2                                    ; argument #1 for method xmalloc
0000000000003648         call       xmalloc                                     ; xmalloc
000000000000364d         mov        qword [rsp+0x148+var_138], rax
0000000000003652         mov        rax, qword [rbx+0x10]
0000000000003656         cmp        rax, 0xffffffffffffffff
000000000000365a         mov        qword [rsp+0x148+var_108], rax
000000000000365f         je         loc_3760

0000000000003665         mov        rax, qword [rbx+8]
0000000000003669         mov        qword [rsp+0x148+var_110], rax
000000000000366e         mov        eax, dword [rsp+0x148+var_C0]
0000000000003675         and        eax, 0xf000
000000000000367a         cmp        eax, 0x8000
000000000000367f         je         loc_39cf

                     loc_3685:
0000000000003685         cmp        qword [rsp+0x148+var_110], 0x0              ; CODE XREF=do_wipefd+1283
000000000000368b         mov        qword [rsp+0x148+var_100], 0x0
0000000000003694         je         loc_38b9

                     loc_369a:
000000000000369a         mov        r12, qword [rsp+0x148+var_138]              ; CODE XREF=do_wipefd+772, do_wipefd+1485, do_wipefd+1679
000000000000369f         xor        ecx, ecx
00000000000036a1         mov        r14, qword [rsp+0x148+var_110]
00000000000036a6         mov        eax, 0xfffffffe
00000000000036ab         lea        r13, qword [patterns]                       ; patterns
00000000000036b2         mov        qword [rsp+0x148+var_F8], rbx
00000000000036b7         mov        r8, r12
00000000000036ba         mov        r12, rcx
00000000000036bd         jmp        loc_36e3
00000000000036bf         align      64

                     loc_36c0:
00000000000036c0         lea        r13, qword [patterns+4]                     ; 0xa624, CODE XREF=do_wipefd+469
00000000000036c7         mov        eax, 0xfffffffe

                     loc_36cc:
00000000000036cc         neg        eax                                         ; CODE XREF=do_wipefd+477
00000000000036ce         cdqe
00000000000036d0         cmp        rax, r14
00000000000036d3         jae        loc_3a18

00000000000036d9         add        r12, rax
00000000000036dc         sub        r14, rax

                     loc_36df:
00000000000036df         mov        eax, dword [r13]                            ; CODE XREF=do_wipefd+525

                     loc_36e3:
00000000000036e3         test       eax, eax                                    ; CODE XREF=do_wipefd+429
00000000000036e5         je         loc_36c0

00000000000036e7         add        r13, 0x4
00000000000036eb         test       eax, eax
00000000000036ed         js         loc_36cc

00000000000036ef         movsxd     r15, eax
00000000000036f2         cmp        r15, r14
00000000000036f5         ja         loc_3af8

00000000000036fb         lea        rbx, qword [r15*4]
0000000000003703         mov        rsi, r13                                    ; argument "__src" for method j_memcpy
0000000000003706         mov        rdi, r8                                     ; argument "__dest" for method j_memcpy
0000000000003709         sub        r14, r15
000000000000370c         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000370f         add        r13, rbx
0000000000003712         call       j_memcpy                                    ; memcpy
0000000000003717         mov        r8, rax
000000000000371a         add        r8, rbx
000000000000371d         jmp        loc_36df
000000000000371f         align      32

                     loc_3720:
0000000000003720         lea        rsi, qword [aSFstatFailed]                  ; argument "msgid" for method j_dcgettext, "%s: fstat failed", CODE XREF=do_wipefd+105
0000000000003727         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000372c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000372e         call       j_dcgettext                                 ; dcgettext
0000000000003733         mov        rbx, rax
0000000000003736         call       j___errno_location                          ; __errno_location
000000000000373b         mov        rcx, qword [rsp+0x148+var_148]
000000000000373f         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003741         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000003744         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003746         xor        eax, eax
0000000000003748         call       j_error                                     ; error
000000000000374d         mov        byte [rsp+0x148+var_121], 0x0
0000000000003752         jmp        loc_35d8
0000000000003757         align      32

                     loc_3760:
0000000000003760         mov        eax, dword [rsp+0x148+var_C0]               ; CODE XREF=do_wipefd+335
0000000000003767         and        eax, 0xf000
000000000000376c         cmp        eax, 0x8000
0000000000003771         jne        loc_3b6d

0000000000003777         mov        rax, qword [rsp+0x148+var_A8]
000000000000377f         mov        rcx, qword [rbx+8]
0000000000003783         mov        qword [rsp+0x148+var_108], rax
0000000000003788         movzx      eax, byte [rbx+0x1d]
000000000000378c         mov        qword [rsp+0x148+var_110], rcx
0000000000003791         test       al, al
0000000000003793         mov        byte [rsp+0x148+var_130], al
0000000000003797         jne        loc_3ad1

000000000000379d         mov        rcx, qword [rsp+0x148+var_A0]
00000000000037a5         movabs     rax, 0x1fffffffffffffff
00000000000037af         lea        rdx, qword [rcx-1]
00000000000037b3         cmp        rdx, rax
00000000000037b6         mov        eax, 0x200
00000000000037bb         cmova      rcx, rax
00000000000037bf         mov        rax, qword [rsp+0x148+var_108]
00000000000037c4         cqo
00000000000037c6         idiv       rcx
00000000000037c9         mov        rax, qword [rsp+0x148+var_108]
00000000000037ce         cmp        rcx, rax
00000000000037d1         jle        loc_3bef

00000000000037d7         test       rax, rax
00000000000037da         mov        qword [rsp+0x148+var_100], rax
00000000000037df         je         loc_3bef

                     loc_37e5:
00000000000037e5         test       rdx, rdx                                    ; CODE XREF=do_wipefd+1768
00000000000037e8         je         loc_380e

00000000000037ea         mov        rdi, qword [rsp+0x148+var_108]
00000000000037ef         movabs     rax, 0x7fffffffffffffff
00000000000037f9         sub        rcx, rdx
00000000000037fc         sub        rax, rdi
00000000000037ff         cmp        rax, rcx
0000000000003802         cmovle     rcx, rax
0000000000003806         add        rdi, rcx
0000000000003809         mov        qword [rsp+0x148+var_108], rdi

                     loc_380e:
000000000000380e         cmp        qword [rsp+0x148+var_110], 0x0              ; CODE XREF=do_wipefd+728, do_wipefd+1277
0000000000003814         jne        loc_369a

000000000000381a         nop        word [rax+rax]

                     loc_3820:
0000000000003820         mov        rdi, qword [rsp+0x148+var_118]              ; argument #1 for method randint_get_source, CODE XREF=do_wipefd+1468
0000000000003825         call       randint_get_source                          ; randint_get_source
000000000000382a         mov        r14, rax
000000000000382d         mov        rax, qword [rsp+0x148+var_100]
0000000000003832         test       rax, rax
0000000000003835         je         loc_3bfd

000000000000383b         mov        qword [rsp+0x148+var_E0], rax
0000000000003840         mov        rdx, qword [rbx+8]
0000000000003844         xor        r13d, r13d
0000000000003847         mov        byte [rsp+0x148+var_130], 0x1
000000000000384c         jmp        loc_38f8
0000000000003851         align      8

                     loc_3858:
0000000000003858         mov        edi, ebp                                    ; argument "__fd" for method j_isatty, CODE XREF=do_wipefd+128
000000000000385a         call       j_isatty                                    ; isatty
000000000000385f         test       eax, eax
0000000000003861         jne        loc_35ae

0000000000003867         mov        eax, dword [rsp+0x148+var_C0]
000000000000386e         and        eax, 0xf000
0000000000003873         jmp        loc_3596
0000000000003878         align      128

                     loc_3880:
0000000000003880         cmp        qword [rsp+0x148+var_A8], 0x0               ; CODE XREF=do_wipefd+261
0000000000003889         jns        loc_361b

000000000000388f         lea        rsi, qword [aSFileHasNegati]                ; argument "msgid" for method j_dcgettext, "%s: file has negative size"
0000000000003896         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003898         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000389d         call       j_dcgettext                                 ; dcgettext
00000000000038a2         mov        rcx, qword [rsp+0x148+var_148]
00000000000038a6         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000038a9         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000038ab         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000038ad         xor        eax, eax
00000000000038af         call       j_error                                     ; error
00000000000038b4         jmp        loc_35d8

                     loc_38b9:
00000000000038b9         mov        rdi, qword [rsp+0x148+var_118]              ; argument #1 for method randint_get_source, CODE XREF=do_wipefd+388
00000000000038be         call       randint_get_source                          ; randint_get_source
00000000000038c3         mov        byte [rsp+0x148+var_130], 0x1
00000000000038c8         mov        r14, rax
00000000000038cb         nop        dword [rax+rax]

                     loc_38d0:
00000000000038d0         cmp        qword [rsp+0x148+var_108], 0x0              ; CODE XREF=do_wipefd+1105, do_wipefd+1504, do_wipefd+1778
00000000000038d6         je         loc_3ba4

00000000000038dc         mov        rdx, qword [rbx+8]

                     loc_38e0:
00000000000038e0         mov        rax, qword [rsp+0x148+var_108]              ; CODE XREF=do_wipefd+1734
00000000000038e5         mov        r13, qword [rsp+0x148+var_120]
00000000000038ea         mov        qword [rsp+0x148+var_108], 0x0
00000000000038f3         mov        qword [rsp+0x148+var_E0], rax

                     loc_38f8:
00000000000038f8         lea        r12, qword [rsp+0x148+var_E0]               ; CODE XREF=do_wipefd+828
00000000000038fd         xor        r15d, r15d
0000000000003900         mov        rax, r12
0000000000003903         mov        r12, r15
0000000000003906         mov        r15, rbx
0000000000003909         mov        rbx, rax
000000000000390c         jmp        loc_3951
000000000000390e         align      16

                     loc_3910:
0000000000003910         xor        r8d, r8d                                    ; CODE XREF=do_wipefd+1100
0000000000003913         cmp        r12, rdx
0000000000003916         jae        loc_3921

0000000000003918         mov        rax, qword [rsp+0x148+var_138]
000000000000391d         mov        r8d, dword [rax+r12*4]

                     loc_3921:
0000000000003921         add        r12, 0x1                                    ; CODE XREF=do_wipefd+1030
0000000000003925         push       r13                                         ; argument #8 for method dopass
0000000000003927         mov        rcx, rbx                                    ; argument #4 for method dopass
000000000000392a         push       r12                                         ; argument #7 for method dopass
000000000000392c         mov        rdx, qword [rsp+0x158+var_148]              ; argument #3 for method dopass
0000000000003931         mov        r9, r14                                     ; argument #6 for method dopass
0000000000003934         mov        rsi, qword [rsp+0x158+var_140]              ; argument #2 for method dopass
0000000000003939         mov        edi, ebp                                    ; argument #1 for method dopass
000000000000393b         call       dopass                                      ; dopass
0000000000003940         test       eax, eax
0000000000003942         pop        rdx
0000000000003943         pop        rcx
0000000000003944         je         loc_394d

0000000000003946         js         loc_39c0

0000000000003948         mov        byte [rsp+0x148+var_130], 0x0

                     loc_394d:
000000000000394d         mov        rdx, qword [r15+8]                          ; CODE XREF=do_wipefd+1076

                     loc_3951:
0000000000003951         movzx      eax, byte [r15+0x1e]                        ; CODE XREF=do_wipefd+1020
0000000000003956         add        rax, rdx
0000000000003959         cmp        rax, r12
000000000000395c         ja         loc_3910

000000000000395e         mov        rbx, r15
0000000000003961         jmp        loc_38d0

                     loc_3966:
0000000000003966         xor        esi, esi                                    ; argument "__length" for method j_ftruncate, CODE XREF=do_wipefd+1689
0000000000003968         mov        edi, ebp                                    ; argument "__fd" for method j_ftruncate
000000000000396a         call       j_ftruncate                                 ; ftruncate
000000000000396f         test       eax, eax
0000000000003971         je         loc_3baf

0000000000003977         mov        eax, dword [rsp+0x148+var_C0]
000000000000397e         and        eax, 0xf000
0000000000003983         cmp        eax, 0x8000
0000000000003988         jne        loc_3baf

000000000000398e         lea        rsi, qword [aSErrorTruncati]                ; argument "msgid" for method j_dcgettext, "%s: error truncating"
0000000000003995         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000399a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000399c         call       j_dcgettext                                 ; dcgettext
00000000000039a1         mov        rbx, rax
00000000000039a4         call       j___errno_location                          ; __errno_location
00000000000039a9         mov        rcx, qword [rsp+0x148+var_148]
00000000000039ad         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000039af         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000039b2         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000039b4         xor        eax, eax
00000000000039b6         call       j_error                                     ; error
00000000000039bb         nop        dword [rax+rax]

                     loc_39c0:
00000000000039c0         mov        rdi, qword [rsp+0x148+var_138]              ; argument "__ptr" for method j_free, CODE XREF=do_wipefd+1078, do_wipefd+1704
00000000000039c5         call       j_free                                      ; free
00000000000039ca         jmp        loc_35d8

                     loc_39cf:
00000000000039cf         mov        rax, qword [rsp+0x148+var_A0]               ; CODE XREF=do_wipefd+367
00000000000039d7         movabs     rdx, 0x1fffffffffffffff
00000000000039e1         mov        rdi, qword [rsp+0x148+var_A8]
00000000000039e9         lea        rcx, qword [rax-1]
00000000000039ed         mov        qword [rsp+0x148+var_100], rdi
00000000000039f2         cmp        rcx, rdx
00000000000039f5         mov        rcx, qword [rsp+0x148+var_108]
00000000000039fa         mov        edx, 0x200
00000000000039ff         cmova      rax, rdx
0000000000003a03         cmp        rax, rcx
0000000000003a06         cmovg      rax, rcx
0000000000003a0a         cmp        rdi, rax
0000000000003a0d         jl         loc_380e

0000000000003a13         jmp        loc_3685

                     loc_3a18:
0000000000003a18         mov        rbx, qword [rsp+0x148+var_F8]               ; CODE XREF=do_wipefd+451
0000000000003a1d         add        r12, r14
0000000000003a20         mov        qword [rsp+0x148+var_130], r12

                     loc_3a25:
0000000000003a25         mov        rax, qword [rsp+0x148+var_110]              ; CODE XREF=do_wipefd+1614, do_wipefd+1624
0000000000003a2a         mov        rsi, qword [rsp+0x148+var_130]
0000000000003a2f         xor        r12d, r12d
0000000000003a32         mov        dword [rsp+0x148+var_F8], ebp
0000000000003a36         mov        qword [rsp+0x148+var_F0], rbx
0000000000003a3b         mov        r14, qword [rsp+0x148+var_138]
0000000000003a40         lea        rdx, qword [rsi-1]
0000000000003a44         mov        r15, rax
0000000000003a47         lea        r8, qword [rax-1]
0000000000003a4b         sub        r15, rsi
0000000000003a4e         mov        rbx, r15
0000000000003a51         mov        r13, rdx
0000000000003a54         mov        rbp, rdx
0000000000003a57         mov        r15, r8
0000000000003a5a         jmp        loc_3a81
0000000000003a5c         align      32

                     loc_3a60:
0000000000003a60         add        r13, r15                                    ; CODE XREF=do_wipefd+1400
0000000000003a63         mov        dword [r14+rbx*4], r9d
0000000000003a67         mov        dword [r14+r12*4], 0xffffffff
0000000000003a6f         add        rbx, 0x1
0000000000003a73         sub        r13, rbp
0000000000003a76         add        r12, 0x1
0000000000003a7a         cmp        r12, qword [rsp+0x148+var_110]
0000000000003a7f         je         loc_3ac3

                     loc_3a81:
0000000000003a81         cmp        r13, rbp                                    ; CODE XREF=do_wipefd+1354, do_wipefd+1457
0000000000003a84         mov        r9d, dword [r14+r12*4]
0000000000003a88         jbe        loc_3a60

0000000000003a8a         lea        rsi, qword [rbx-1]
0000000000003a8e         mov        rdi, qword [rsp+0x148+var_118]
0000000000003a93         mov        dword [rsp+0x148+var_130], r9d
0000000000003a98         sub        r13, rbp
0000000000003a9b         sub        rsi, r12
0000000000003a9e         call       randint_genmax                              ; randint_genmax
0000000000003aa3         add        rax, r12
0000000000003aa6         mov        r9d, dword [rsp+0x148+var_130]
0000000000003aab         lea        rax, qword [r14+rax*4]
0000000000003aaf         mov        esi, dword [rax]
0000000000003ab1         mov        dword [r14+r12*4], esi
0000000000003ab5         add        r12, 0x1
0000000000003ab9         cmp        r12, qword [rsp+0x148+var_110]
0000000000003abe         mov        dword [rax], r9d
0000000000003ac1         jne        loc_3a81

                     loc_3ac3:
0000000000003ac3         mov        ebp, dword [rsp+0x148+var_F8]               ; CODE XREF=do_wipefd+1391
0000000000003ac7         mov        rbx, qword [rsp+0x148+var_F0]
0000000000003acc         jmp        loc_3820

                     loc_3ad1:
0000000000003ad1         test       rcx, rcx                                    ; CODE XREF=do_wipefd+647
0000000000003ad4         mov        qword [rsp+0x148+var_100], 0x0
0000000000003add         jne        loc_369a

0000000000003ae3         mov        rdi, qword [rsp+0x148+var_118]              ; argument #1 for method randint_get_source
0000000000003ae8         call       randint_get_source                          ; randint_get_source
0000000000003aed         mov        r14, rax
0000000000003af0         jmp        loc_38d0
0000000000003af5         align      8

                     loc_3af8:
0000000000003af8         cmp        r14, 0x1                                    ; CODE XREF=do_wipefd+485
0000000000003afc         mov        qword [rsp+0x148+var_130], r12
0000000000003b01         mov        rbx, qword [rsp+0x148+var_F8]
0000000000003b06         jbe        loc_3b63

0000000000003b08         lea        rax, qword [r14+r14*2]
0000000000003b0c         cmp        r15, rax
0000000000003b0f         ja         loc_3b63

0000000000003b11         mov        qword [rsp+0x148+var_F8], rbx
0000000000003b16         mov        rbx, r8
0000000000003b19         jmp        loc_3b2a
0000000000003b1b         align      32

                     loc_3b20:
0000000000003b20         lea        r12, qword [r15-1]                          ; CODE XREF=do_wipefd+1607
0000000000003b24         mov        rbx, rcx

                     loc_3b27:
0000000000003b27         mov        r15, r12                                    ; CODE XREF=do_wipefd+1591

                     loc_3b2a:
0000000000003b2a         add        r13, 0x4                                    ; CODE XREF=do_wipefd+1545
0000000000003b2e         cmp        r14, r15
0000000000003b31         je         loc_3b49

0000000000003b33         lea        r12, qword [r15-1]
0000000000003b37         mov        rdi, qword [rsp+0x148+var_118]
0000000000003b3c         mov        rsi, r12
0000000000003b3f         call       randint_genmax                              ; randint_genmax
0000000000003b44         cmp        r14, rax
0000000000003b47         jbe        loc_3b27

                     loc_3b49:
0000000000003b49         mov        eax, dword [r13-4]                          ; CODE XREF=do_wipefd+1569
0000000000003b4d         sub        r14, 0x1
0000000000003b51         lea        rcx, qword [rbx+4]
0000000000003b55         mov        dword [rbx], eax
0000000000003b57         jne        loc_3b20

0000000000003b59         mov        rbx, qword [rsp+0x148+var_F8]
0000000000003b5e         jmp        loc_3a25

                     loc_3b63:
0000000000003b63         add        qword [rsp+0x148+var_130], r14              ; CODE XREF=do_wipefd+1526, do_wipefd+1535
0000000000003b68         jmp        loc_3a25

                     loc_3b6d:
0000000000003b6d         xor        esi, esi                                    ; argument "__offset" for method j_lseek, CODE XREF=do_wipefd+609
0000000000003b6f         mov        edx, 0x2                                    ; argument "__whence" for method j_lseek
0000000000003b74         mov        edi, ebp                                    ; argument "__fd" for method j_lseek
0000000000003b76         call       j_lseek                                     ; lseek
0000000000003b7b         mov        r12, rax
0000000000003b7e         mov        rax, qword [rbx+8]
0000000000003b82         test       r12, r12
0000000000003b85         mov        qword [rsp+0x148+var_110], rax
0000000000003b8a         jle        loc_3bbd

0000000000003b8c         test       rax, rax
0000000000003b8f         je         loc_3bdb

0000000000003b91         mov        qword [rsp+0x148+var_108], r12

                     loc_3b96:
0000000000003b96         mov        qword [rsp+0x148+var_100], 0x0              ; CODE XREF=do_wipefd+1712
0000000000003b9f         jmp        loc_369a

                     loc_3ba4:
0000000000003ba4         mov        eax, dword [rbx+0x18]                       ; CODE XREF=do_wipefd+966
0000000000003ba7         test       eax, eax
0000000000003ba9         jne        loc_3966

                     loc_3baf:
0000000000003baf         movzx      eax, byte [rsp+0x148+var_130]               ; CODE XREF=do_wipefd+1121, do_wipefd+1144
0000000000003bb4         mov        byte [rsp+0x148+var_121], al
0000000000003bb8         jmp        loc_39c0

                     loc_3bbd:
0000000000003bbd         test       rax, rax                                    ; CODE XREF=do_wipefd+1658
0000000000003bc0         jne        loc_3b96

0000000000003bc2         mov        rdi, qword [rsp+0x148+var_118]              ; argument #1 for method randint_get_source
0000000000003bc7         call       randint_get_source                          ; randint_get_source
0000000000003bcc         mov        r14, rax

                     loc_3bcf:
0000000000003bcf         xor        edx, edx                                    ; CODE XREF=do_wipefd+1757
0000000000003bd1         mov        byte [rsp+0x148+var_130], 0x1
0000000000003bd6         jmp        loc_38e0

                     loc_3bdb:
0000000000003bdb         mov        rdi, qword [rsp+0x148+var_118]              ; argument #1 for method randint_get_source, CODE XREF=do_wipefd+1663
0000000000003be0         call       randint_get_source                          ; randint_get_source
0000000000003be5         mov        qword [rsp+0x148+var_108], r12
0000000000003bea         mov        r14, rax
0000000000003bed         jmp        loc_3bcf

                     loc_3bef:
0000000000003bef         mov        qword [rsp+0x148+var_100], 0x0              ; CODE XREF=do_wipefd+705, do_wipefd+719
0000000000003bf8         jmp        loc_37e5

                     loc_3bfd:
0000000000003bfd         mov        byte [rsp+0x148+var_130], 0x1               ; CODE XREF=do_wipefd+805
0000000000003c02         jmp        loc_38d0

                     loc_3c07:
0000000000003c07         mov        ecx, 0x1                                    ; CODE XREF=do_wipefd+284
0000000000003c0c         jmp        loc_3632

                     loc_3c11:
0000000000003c11         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=do_wipefd+222
                        ; endp

                     loc_3c16:
0000000000003c16         call       xalloc_die                                  ; xalloc_die, CODE XREF=do_wipefd+293, do_wipefd+302
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     sub_3c1b:
0000000000003c1b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xb748)
                     usage:
0000000000003c20         push       r13                                         ; Begin of unwind block (FDE at 0xb7a8), CODE XREF=main+2135, main+2178, __argmatch_die+5
0000000000003c22         push       r12
0000000000003c24         mov        edx, 0x5
0000000000003c29         push       rbp
0000000000003c2a         push       rbx
0000000000003c2b         mov        ebp, edi
0000000000003c2d         sub        rsp, 0x88
0000000000003c34         mov        rbx, qword [program_name]                   ; program_name
0000000000003c3b         mov        rax, qword [fs:0x28]
0000000000003c44         mov        qword [rsp+0xa8+var_30], rax
0000000000003c49         xor        eax, eax
0000000000003c4b         test       edi, edi
0000000000003c4d         je         loc_3c7d

0000000000003c4f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000003c56         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c58         call       j_dcgettext                                 ; dcgettext
0000000000003c5d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000003c64         mov        rdx, rax
0000000000003c67         mov        rcx, rbx
0000000000003c6a         mov        esi, 0x1
0000000000003c6f         xor        eax, eax
0000000000003c71         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_3c76:
0000000000003c76         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+1014
0000000000003c78         call       j_exit                                      ; exit
                        ; endp

                     loc_3c7d:
0000000000003c7d         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... FILE...\\n", CODE XREF=usage+45
0000000000003c84         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c86         call       j_dcgettext                                 ; dcgettext
0000000000003c8b         mov        rdx, rbx
0000000000003c8e         mov        rsi, rax
0000000000003c91         mov        edi, 0x1
0000000000003c96         xor        eax, eax
0000000000003c98         call       j___printf_chk                              ; __printf_chk
0000000000003c9d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003ca4         lea        rsi, qword [aOverwriteTheSp]                ; argument "msgid" for method j_dcgettext, "Overwrite the specified FILE(s) repeatedly, in order to make it harder\\nfor even very expensive hardware probing to recover the data.\\n"
0000000000003cab         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003cb0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003cb2         call       j_dcgettext                                 ; dcgettext
0000000000003cb7         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003cba         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003cbd         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003cc2         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003cc9         lea        rsi, qword [aNifFileIsShred]                ; argument "msgid" for method j_dcgettext, "\\nIf FILE is -, shred standard output.\\n"
0000000000003cd0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003cd5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003cd7         call       j_dcgettext                                 ; dcgettext
0000000000003cdc         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003cdf         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003ce2         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003ce7         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003cee         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000003cf5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003cfa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003cfc         call       j_dcgettext                                 ; dcgettext
0000000000003d01         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003d04         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003d07         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003d0c         lea        rsi, qword [aFForceChangePe]                ; argument "msgid" for method j_dcgettext, "  -f, --force    change permissions to allow writing if necessary\\n  -n, --iterations=N  overwrite N times instead of the default (%d)\\n      --random-source=FILE  get random bytes from FILE\\n  -s, --size=N   shred this many bytes (suffixes like K, M, G accep…"
0000000000003d13         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d15         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d1a         call       j_dcgettext                                 ; dcgettext
0000000000003d1f         mov        edx, 0x3
0000000000003d24         mov        rsi, rax
0000000000003d27         mov        edi, 0x1
0000000000003d2c         xor        eax, eax
0000000000003d2e         call       j___printf_chk                              ; __printf_chk
0000000000003d33         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003d3a         lea        rsi, qword [aUDeallocateAnd]                ; argument "msgid" for method j_dcgettext, "  -u             deallocate and remove file after overwriting\\n      --remove[=HOW]  like -u but give control on HOW to delete;  See below\\n  -v, --verbose  show progress\\n  -x, --exact    do not round file sizes up to the next full block;\\n                   …"
0000000000003d41         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d46         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d48         call       j_dcgettext                                 ; dcgettext
0000000000003d4d         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003d50         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003d53         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003d58         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003d5f         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000003d66         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d6b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d6d         call       j_dcgettext                                 ; dcgettext
0000000000003d72         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003d75         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003d78         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003d7d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003d84         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000003d8b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d90         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d92         call       j_dcgettext                                 ; dcgettext
0000000000003d97         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003d9a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003d9d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003da2         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003da9         lea        rsi, qword [aNdeleteFilesIf]                ; argument "msgid" for method j_dcgettext, "\\nDelete FILE(s) if --remove (-u) is specified.  The default is not to remove\\nthe files because it is common to operate on device files like /dev/hda,\\nand those files usually should not be removed.\\nThe optional HOW parameter indicates how to remove a direct…"
0000000000003db0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003db5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003db7         call       j_dcgettext                                 ; dcgettext
0000000000003dbc         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003dbf         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003dc2         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003dc7         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003dce         lea        rsi, qword [aCautionNoteTha]                ; argument "msgid" for method j_dcgettext, "CAUTION: Note that shred relies on a very important assumption:\\nthat the file system overwrites data in place.  This is the traditional\\nway to do things, but many modern file system designs do not satisfy this\\nassumption.  The following are examples of fil…"
0000000000003dd5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003dda         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003ddc         call       j_dcgettext                                 ; dcgettext
0000000000003de1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003de4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003de7         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003dec         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003df3         lea        rsi, qword [aLogstructuredO]                ; argument "msgid" for method j_dcgettext, "* log-structured or journaled file systems, such as those supplied with\\nAIX and Solaris (and JFS, ReiserFS, XFS, Ext3, etc.)\\n\\n* file systems that write redundant data and carry on even if some writes\\nfail, such as RAID-based file systems\\n\\n* file systems th…"
0000000000003dfa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003dfc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003e01         call       j_dcgettext                                 ; dcgettext
0000000000003e06         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003e09         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003e0c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003e11         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003e18         lea        rsi, qword [aFileSystemsTha]                ; argument "msgid" for method j_dcgettext, "* file systems that cache in temporary locations, such as NFS\\nversion 3 clients\\n\\n* compressed file systems\\n\\n"
0000000000003e1f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003e24         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003e26         call       j_dcgettext                                 ; dcgettext
0000000000003e2b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003e2e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003e31         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003e36         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003e3d         lea        rsi, qword [aInTheCaseOfExt]                ; argument "msgid" for method j_dcgettext, "In the case of ext3 file systems, the above disclaimer applies\\n(and shred is thus of limited effectiveness) only in data=journal mode,\\nwhich journals file data in addition to just metadata.  In both the\\ndata=ordered (default) and data=writeback modes, shre…"
0000000000003e44         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003e49         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003e4b         call       j_dcgettext                                 ; dcgettext
0000000000003e50         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003e53         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003e56         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003e5b         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003e62         lea        rsi, qword [aInAdditionFile]                ; argument "msgid" for method j_dcgettext, "In addition, file system backups and remote mirrors may contain copies\\nof the file that cannot be removed, and that will allow a shredded file\\nto be recovered later.\\n"
0000000000003e69         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003e6e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003e70         call       j_dcgettext                                 ; dcgettext
0000000000003e75         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003e78         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003e7b         lea        rbx, qword [aShred]                         ; "shred"
0000000000003e82         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003e87         lea        rax, qword [aShred+6]                       ; 0x967e
0000000000003e8e         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000003e95         mov        qword [rsp+0xa8+var_48], 0x0
0000000000003e9e         mov        qword [rsp+0xa8+var_40], 0x0
0000000000003ea7         mov        rdx, rsp
0000000000003eaa         mov        qword [rsp+0xa8+var_A8], rax
0000000000003eae         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000003eb5         mov        qword [rsp+0xa8+var_78], rcx
0000000000003eba         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000003ec1         mov        qword [rsp+0xa8+var_A0], rax
0000000000003ec6         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000003ecd         mov        qword [rsp+0xa8+var_68], rcx
0000000000003ed2         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000003ed9         mov        qword [rsp+0xa8+var_98], rax
0000000000003ede         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000003ee5         mov        qword [rsp+0xa8+var_58], rcx
0000000000003eea         mov        qword [rsp+0xa8+var_90], rax
0000000000003eef         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000003ef6         mov        qword [rsp+0xa8+var_88], rax
0000000000003efb         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000003f02         mov        qword [rsp+0xa8+var_80], rax
0000000000003f07         mov        qword [rsp+0xa8+var_70], rax
0000000000003f0c         mov        qword [rsp+0xa8+var_60], rax
0000000000003f11         mov        qword [rsp+0xa8+var_50], rax
0000000000003f16         nop        word [cs:rax+rax]

                     loc_3f20:
0000000000003f20         add        rdx, 0x10                                   ; CODE XREF=usage+797
0000000000003f24         mov        rdi, qword [rdx]
0000000000003f27         test       rdi, rdi
0000000000003f2a         je         loc_3f3f

0000000000003f2c         mov        ecx, 0x6
0000000000003f31         mov        rsi, rbx
0000000000003f34         rep  cmpsb byte [rsi], byte [rdi]
0000000000003f36         seta       al
0000000000003f39         sbb        al, 0x0
0000000000003f3b         test       al, al
0000000000003f3d         jne        loc_3f20

                     loc_3f3f:
0000000000003f3f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+778
0000000000003f43         xor        edi, edi
0000000000003f45         mov        edx, 0x5
0000000000003f4a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000003f51         test       r12, r12
0000000000003f54         je         loc_401b

0000000000003f5a         call       j_dcgettext                                 ; dcgettext
0000000000003f5f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000003f66         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x96f4
0000000000003f6d         mov        rsi, rax
0000000000003f70         mov        edi, 0x1
0000000000003f75         xor        eax, eax
0000000000003f77         call       j___printf_chk                              ; __printf_chk
0000000000003f7c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000003f7e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000003f83         call       j_setlocale                                 ; setlocale
0000000000003f88         test       rax, rax
0000000000003f8b         je         loc_3fa9

0000000000003f8d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x9702
0000000000003f94         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000003f99         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000003f9c         call       j_strncmp                                   ; strncmp
0000000000003fa1         test       eax, eax
0000000000003fa3         jne        loc_40b0

                     loc_3fa9:
0000000000003fa9         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+875, usage+1205
0000000000003fb0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003fb2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003fb7         call       j_dcgettext                                 ; dcgettext
0000000000003fbc         lea        rcx, qword [aShred]                         ; "shred"
0000000000003fc3         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000003fca         mov        rsi, rax
0000000000003fcd         mov        edi, 0x1
0000000000003fd2         xor        eax, eax
0000000000003fd4         call       j___printf_chk                              ; __printf_chk
0000000000003fd9         cmp        r12, rbx
0000000000003fdc         lea        rcx, qword [aMulticallInvoc+10]             ; 0x969a
0000000000003fe3         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0xadb0
0000000000003fea         cmove      rbx, rcx

                     loc_3fee:
0000000000003fee         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1156
0000000000003ff5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003ff7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003ffc         call       j_dcgettext                                 ; dcgettext
0000000000004001         mov        rcx, rbx
0000000000004004         mov        rsi, rax
0000000000004007         mov        rdx, r12
000000000000400a         mov        edi, 0x1
000000000000400f         xor        eax, eax
0000000000004011         call       j___printf_chk                              ; __printf_chk
0000000000004016         jmp        loc_3c76

                     loc_401b:
000000000000401b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+820
0000000000004020         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004027         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x96f4
000000000000402e         mov        rsi, rax
0000000000004031         mov        edi, 0x1
0000000000004036         xor        eax, eax
0000000000004038         call       j___printf_chk                              ; __printf_chk
000000000000403d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000403f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000004044         call       j_setlocale                                 ; setlocale
0000000000004049         test       rax, rax
000000000000404c         je         loc_4066

000000000000404e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x9702
0000000000004055         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
000000000000405a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000405d         call       j_strncmp                                   ; strncmp
0000000000004062         test       eax, eax
0000000000004064         jne        loc_40a9

                     loc_4066:
0000000000004066         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+1068
000000000000406d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004072         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004074         lea        r12, qword [aShred]                         ; "shred"
000000000000407b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x969a
0000000000004082         call       j_dcgettext                                 ; dcgettext
0000000000004087         lea        rcx, qword [aShred]                         ; "shred"
000000000000408e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004095         mov        rsi, rax
0000000000004098         mov        edi, 0x1
000000000000409d         xor        eax, eax
000000000000409f         call       j___printf_chk                              ; __printf_chk
00000000000040a4         jmp        loc_3fee

                     loc_40a9:
00000000000040a9         lea        r12, qword [aShred]                         ; "shred", CODE XREF=usage+1092

                     loc_40b0:
00000000000040b0         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+899
00000000000040b7         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
00000000000040be         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000040c0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000040c5         call       j_dcgettext                                 ; dcgettext
00000000000040ca         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
00000000000040cd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000040d0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000040d5         jmp        loc_3fa9
00000000000040da         align      32                                          ; End of unwind block (FDE at 0xb7a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __argmatch_die:
00000000000040e0         mov        edi, 0x1                                    ; Begin of unwind block (FDE at 0xb834), argument #1 for method usage, DATA XREF=argmatch_die
00000000000040e5         jmp        usage                                       ; usage
                        ; endp
00000000000040ea         align      16                                          ; End of unwind block (FDE at 0xb834)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_41: int8_t, -65
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     argmatch:
00000000000040f0         push       r15                                         ; Begin of unwind block (FDE at 0xb848), CODE XREF=__xargmatch_internal+44, human_options+82
00000000000040f2         push       r14
00000000000040f4         mov        r15, rsi
00000000000040f7         push       r13
00000000000040f9         push       r12
00000000000040fb         mov        r13, rcx
00000000000040fe         push       rbp
00000000000040ff         push       rbx
0000000000004100         mov        rbp, rdx
0000000000004103         sub        rsp, 0x28
0000000000004107         mov        qword [rsp+0x58+var_50], rdi
000000000000410c         mov        qword [rsp+0x58+var_40], rdx
0000000000004111         call       j_strlen                                    ; strlen
0000000000004116         mov        r14, qword [r15]
0000000000004119         mov        qword [rsp+0x58+var_58], 0xffffffffffffffff
0000000000004121         test       r14, r14
0000000000004124         je         loc_41dd

000000000000412a         mov        r12, rax
000000000000412d         mov        byte [rsp+0x58+var_41], 0x0
0000000000004132         xor        ebx, ebx
0000000000004134         jmp        loc_4187
0000000000004136         align      64

                     loc_4140:
0000000000004140         mov        rax, qword [rsp+0x58+var_40]                ; CODE XREF=argmatch+189
0000000000004145         test       rax, rax
0000000000004148         je         loc_41f0

000000000000414e         mov        rdi, qword [rsp+0x58+var_58]
0000000000004152         mov        rdx, r13                                    ; argument "__n" for method j_memcmp
0000000000004155         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
0000000000004158         imul       rdi, r13
000000000000415c         add        rdi, rax                                    ; argument "__s1" for method j_memcmp
000000000000415f         call       j_memcmp                                    ; memcmp
0000000000004164         test       eax, eax
0000000000004166         movzx      eax, byte [rsp+0x58+var_41]
000000000000416b         mov        ecx, 0x1
0000000000004170         cmovne     eax, ecx
0000000000004173         mov        byte [rsp+0x58+var_41], al

                     loc_4177:
0000000000004177         add        rbx, 0x1                                    ; CODE XREF=argmatch+169, argmatch+261
000000000000417b         add        rbp, r13
000000000000417e         mov        r14, qword [r15+rbx*8]
0000000000004182         test       r14, r14
0000000000004185         je         loc_41c8

                     loc_4187:
0000000000004187         mov        rsi, qword [rsp+0x58+var_50]                ; argument "__s2" for method j_strncmp, CODE XREF=argmatch+68, argmatch+209
000000000000418c         mov        rdx, r12                                    ; argument "__n" for method j_strncmp
000000000000418f         mov        rdi, r14                                    ; argument "__s1" for method j_strncmp
0000000000004192         call       j_strncmp                                   ; strncmp
0000000000004197         test       eax, eax
0000000000004199         jne        loc_4177

000000000000419b         mov        rdi, r14                                    ; argument "__s" for method j_strlen
000000000000419e         call       j_strlen                                    ; strlen
00000000000041a3         cmp        rax, r12
00000000000041a6         je         loc_4200

00000000000041a8         cmp        qword [rsp+0x58+var_58], 0xffffffffffffffff
00000000000041ad         jne        loc_4140

00000000000041af         mov        qword [rsp+0x58+var_58], rbx
00000000000041b3         add        rbx, 0x1
00000000000041b7         add        rbp, r13
00000000000041ba         mov        r14, qword [r15+rbx*8]
00000000000041be         test       r14, r14
00000000000041c1         jne        loc_4187

00000000000041c3         nop        dword [rax+rax]

                     loc_41c8:
00000000000041c8         cmp        byte [rsp+0x58+var_41], 0x0                 ; CODE XREF=argmatch+149
00000000000041cd         mov        rax, 0xfffffffffffffffe
00000000000041d4         cmove      rax, qword [rsp+0x58+var_58]
00000000000041d9         mov        qword [rsp+0x58+var_58], rax

                     loc_41dd:
00000000000041dd         mov        rax, qword [rsp+0x58+var_58]                ; CODE XREF=argmatch+52, argmatch+276
00000000000041e1         add        rsp, 0x28
00000000000041e5         pop        rbx
00000000000041e6         pop        rbp
00000000000041e7         pop        r12
00000000000041e9         pop        r13
00000000000041eb         pop        r14
00000000000041ed         pop        r15
00000000000041ef         ret
                        ; endp

                     loc_41f0:
00000000000041f0         mov        byte [rsp+0x58+var_41], 0x1                 ; CODE XREF=argmatch+88
00000000000041f5         jmp        loc_4177
00000000000041f7         align      512

                     loc_4200:
0000000000004200         mov        qword [rsp+0x58+var_58], rbx                ; CODE XREF=argmatch+182
0000000000004204         jmp        loc_41dd
0000000000004206         align      16                                          ; End of unwind block (FDE at 0xb848)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_invalid:
0000000000004210         cmp        rdx, 0xffffffffffffffff                     ; Begin of unwind block (FDE at 0xb894), CODE XREF=__xargmatch_internal+78
0000000000004214         push       r12
0000000000004216         mov        edx, 0x5
000000000000421b         push       rbp
000000000000421c         mov        r12, rsi
000000000000421f         push       rbx
0000000000004220         mov        rbp, rdi
0000000000004223         je         loc_4270

0000000000004225         lea        rsi, qword [aAmbiguousArgum]                ; argument "msgid" for method j_dcgettext, "ambiguous argument %s for %s"
000000000000422c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000422e         call       j_dcgettext                                 ; dcgettext
0000000000004233         mov        rbx, rax

                     loc_4236:
0000000000004236         mov        rsi, rbp                                    ; CODE XREF=argmatch_invalid+113
0000000000004239         mov        edi, 0x1
000000000000423e         call       quote_n                                     ; quote_n
0000000000004243         mov        rdx, r12
0000000000004246         mov        rbp, rax
0000000000004249         mov        esi, 0x8
000000000000424e         xor        edi, edi
0000000000004250         call       quotearg_n_style                            ; quotearg_n_style
0000000000004255         mov        r8, rbp
0000000000004258         mov        rdx, rbx                                    ; argument "__format" for method j_error
000000000000425b         mov        rcx, rax
000000000000425e         pop        rbx
000000000000425f         pop        rbp
0000000000004260         pop        r12
0000000000004262         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004264         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000004266         xor        eax, eax
0000000000004268         jmp        j_error                                     ; error
                        ; endp
000000000000426d         align      16

                     loc_4270:
0000000000004270         lea        rsi, qword [aInvalidArgumen]                ; argument "msgid" for method j_dcgettext, "invalid argument %s for %s", CODE XREF=argmatch_invalid+19
0000000000004277         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004279         call       j_dcgettext                                 ; dcgettext
000000000000427e         mov        rbx, rax
0000000000004281         jmp        loc_4236
0000000000004283         align      16                                          ; End of unwind block (FDE at 0xb894)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_valid:
0000000000004290         push       r15                                         ; Begin of unwind block (FDE at 0xb8c0), CODE XREF=__xargmatch_internal+92
0000000000004292         push       r14
0000000000004294         mov        r14, rdi
0000000000004297         push       r13
0000000000004299         push       r12
000000000000429b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000429d         push       rbp
000000000000429e         push       rbx
000000000000429f         mov        rbp, rsi
00000000000042a2         lea        rsi, qword [aValidArguments]                ; argument "msgid" for method j_dcgettext, "Valid arguments are:"
00000000000042a9         mov        r12, rdx
00000000000042ac         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000042b1         sub        rsp, 0x8
00000000000042b5         mov        rbx, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000042bc         call       j_dcgettext                                 ; dcgettext
00000000000042c1         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000042c4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000042c7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000042cc         mov        r15, qword [r14]
00000000000042cf         test       r15, r15
00000000000042d2         je         loc_4368

00000000000042d8         xor        r13d, r13d
00000000000042db         xor        ebx, ebx
00000000000042dd         jmp        loc_4318
00000000000042df         align      32

                     loc_42e0:
00000000000042e0         mov        rdi, r15                                    ; CODE XREF=argmatch_valid+139, argmatch_valid+157
00000000000042e3         add        rbx, 0x1
00000000000042e7         mov        r13, rbp
00000000000042ea         call       quote                                       ; quote
00000000000042ef         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000042f6         lea        rdx, qword [aNS]                            ; "\\n  - %s"
00000000000042fd         mov        rcx, rax
0000000000004300         mov        esi, 0x1
0000000000004305         xor        eax, eax
0000000000004307         add        rbp, r12
000000000000430a         call       j___fprintf_chk                             ; __fprintf_chk
000000000000430f         mov        r15, qword [r14+rbx*8]
0000000000004313         test       r15, r15
0000000000004316         je         loc_4368

                     loc_4318:
0000000000004318         test       rbx, rbx                                    ; CODE XREF=argmatch_valid+77, argmatch_valid+210
000000000000431b         je         loc_42e0

000000000000431d         mov        rdx, r12                                    ; argument "__n" for method j_memcmp
0000000000004320         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
0000000000004323         mov        rdi, r13                                    ; argument "__s1" for method j_memcmp
0000000000004326         call       j_memcmp                                    ; memcmp
000000000000432b         test       eax, eax
000000000000432d         jne        loc_42e0

000000000000432f         mov        rdi, r15
0000000000004332         add        rbx, 0x1
0000000000004336         add        rbp, r12
0000000000004339         call       quote                                       ; quote
000000000000433e         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000004345         lea        rdx, qword [aNS+8]                          ; 0xa766
000000000000434c         mov        rcx, rax
000000000000434f         mov        esi, 0x1
0000000000004354         xor        eax, eax
0000000000004356         call       j___fprintf_chk                             ; __fprintf_chk
000000000000435b         mov        r15, qword [r14+rbx*8]
000000000000435f         test       r15, r15
0000000000004362         jne        loc_4318

0000000000004364         nop        dword [rax]

                     loc_4368:
0000000000004368         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=argmatch_valid+66, argmatch_valid+134
000000000000436f         mov        rax, qword [rdi+0x28]
0000000000004373         cmp        rax, qword [rdi+0x30]
0000000000004377         jae        loc_4398

0000000000004379         lea        rdx, qword [rax+1]
000000000000437d         mov        qword [rdi+0x28], rdx
0000000000004381         mov        byte [rax], 0xa
0000000000004384         add        rsp, 0x8
0000000000004388         pop        rbx
0000000000004389         pop        rbp
000000000000438a         pop        r12
000000000000438c         pop        r13
000000000000438e         pop        r14
0000000000004390         pop        r15
0000000000004392         ret
                        ; endp
0000000000004393         align      8

                     loc_4398:
0000000000004398         add        rsp, 0x8                                    ; CODE XREF=argmatch_valid+231
000000000000439c         mov        esi, 0xa                                    ; argument #2 for method j___overflow
00000000000043a1         pop        rbx
00000000000043a2         pop        rbp
00000000000043a3         pop        r12
00000000000043a5         pop        r13
00000000000043a7         pop        r14
00000000000043a9         pop        r15
00000000000043ab         jmp        j___overflow                                ; __overflow
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __xargmatch_internal:
00000000000043b0         push       r15                                         ; End of unwind block (FDE at 0xb8c0), Begin of unwind block (FDE at 0xb920), CODE XREF=main+562
00000000000043b2         push       r14
00000000000043b4         mov        r14, rdi
00000000000043b7         push       r13
00000000000043b9         push       r12
00000000000043bb         mov        r12, rsi
00000000000043be         push       rbp
00000000000043bf         push       rbx
00000000000043c0         mov        rbp, rcx
00000000000043c3         mov        rbx, rdx
00000000000043c6         mov        rcx, r8
00000000000043c9         mov        rdx, rbp
00000000000043cc         sub        rsp, 0x8
00000000000043d0         mov        rsi, rbx
00000000000043d3         mov        rdi, r12
00000000000043d6         mov        r15, r8
00000000000043d9         mov        r13, r9
00000000000043dc         call       argmatch                                    ; argmatch
00000000000043e1         test       rax, rax
00000000000043e4         js         loc_43f5

                     loc_43e6:
00000000000043e6         add        rsp, 0x8                                    ; CODE XREF=__xargmatch_internal+107
00000000000043ea         pop        rbx
00000000000043eb         pop        rbp
00000000000043ec         pop        r12
00000000000043ee         pop        r13
00000000000043f0         pop        r14
00000000000043f2         pop        r15
00000000000043f4         ret
                        ; endp

                     loc_43f5:
00000000000043f5         mov        rdx, rax                                    ; CODE XREF=__xargmatch_internal+52
00000000000043f8         mov        rsi, r12
00000000000043fb         mov        rdi, r14
00000000000043fe         call       argmatch_invalid                            ; argmatch_invalid
0000000000004403         mov        rdx, r15
0000000000004406         mov        rsi, rbp
0000000000004409         mov        rdi, rbx
000000000000440c         call       argmatch_valid                              ; argmatch_valid
0000000000004411         call       r13
0000000000004414         mov        rax, 0xffffffffffffffff
000000000000441b         jmp        loc_43e6
000000000000441d         align      32                                          ; End of unwind block (FDE at 0xb920)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_to_argument:
0000000000004420         push       r14                                         ; Begin of unwind block (FDE at 0xb96c)
0000000000004422         push       r13
0000000000004424         push       r12
0000000000004426         push       rbp
0000000000004427         push       rbx
0000000000004428         mov        r14, qword [rsi]
000000000000442b         test       r14, r14
000000000000442e         je         loc_4461

0000000000004430         mov        r12, rcx
0000000000004433         mov        r13, rdi
0000000000004436         mov        rbp, rdx
0000000000004439         lea        rbx, qword [rsi+8]
000000000000443d         jmp        loc_444f
000000000000443f         align      64

                     loc_4440:
0000000000004440         mov        r14, qword [rbx]                            ; CODE XREF=argmatch_to_argument+63
0000000000004443         add        rbp, r12
0000000000004446         add        rbx, 0x8
000000000000444a         test       r14, r14
000000000000444d         je         loc_4461

                     loc_444f:
000000000000444f         mov        rdx, r12                                    ; argument "__n" for method j_memcmp, CODE XREF=argmatch_to_argument+29
0000000000004452         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
0000000000004455         mov        rdi, r13                                    ; argument "__s1" for method j_memcmp
0000000000004458         call       j_memcmp                                    ; memcmp
000000000000445d         test       eax, eax
000000000000445f         jne        loc_4440

                     loc_4461:
0000000000004461         pop        rbx                                         ; CODE XREF=argmatch_to_argument+14, argmatch_to_argument+45
0000000000004462         mov        rax, r14
0000000000004465         pop        rbp
0000000000004466         pop        r12
0000000000004468         pop        r13
000000000000446a         pop        r14
000000000000446c         ret
                        ; endp
000000000000446d         align      16                                          ; End of unwind block (FDE at 0xb96c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000004470         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0xb9ac), file_name
0000000000004477         ret
                        ; endp
0000000000004478         align      128                                         ; End of unwind block (FDE at 0xb9ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000004480         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0xb9c0), ignore_EPIPE
0000000000004487         ret
                        ; endp
0000000000004488         align      16                                          ; End of unwind block (FDE at 0xb9c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000004490         push       rbp                                         ; Begin of unwind block (FDE at 0xb9d4), DATA XREF=main+118
0000000000004491         push       rbx
0000000000004492         sub        rsp, 0x8
0000000000004496         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000449d         call       close_stream                                ; close_stream
00000000000044a2         test       eax, eax
00000000000044a4         je         loc_44bc

00000000000044a6         call       j___errno_location                          ; __errno_location
00000000000044ab         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
00000000000044b2         mov        rbx, rax
00000000000044b5         je         loc_44d3

00000000000044b7         cmp        dword [rax], 0x20
00000000000044ba         jne        loc_44d3

                     loc_44bc:
00000000000044bc         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
00000000000044c3         call       close_stream                                ; close_stream
00000000000044c8         test       eax, eax
00000000000044ca         jne        loc_4512

00000000000044cc         add        rsp, 0x8
00000000000044d0         pop        rbx
00000000000044d1         pop        rbp
00000000000044d2         ret
                        ; endp

                     loc_44d3:
00000000000044d3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
00000000000044da         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000044dc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000044e1         call       j_dcgettext                                 ; dcgettext
00000000000044e6         mov        rdi, qword [file_name]                      ; file_name
00000000000044ed         mov        rbp, rax
00000000000044f0         test       rdi, rdi
00000000000044f3         je         loc_451d

00000000000044f5         call       quotearg_colon                              ; quotearg_colon
00000000000044fa         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000044fc         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000004503         mov        rcx, rax
0000000000004506         mov        r8, rbp
0000000000004509         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000450b         xor        eax, eax
000000000000450d         call       j_error                                     ; error

                     loc_4512:
0000000000004512         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000004518         call       j__exit                                     ; _exit
                        ; endp

                     loc_451d:
000000000000451d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000451f         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0xa768
0000000000004526         mov        rcx, rax
0000000000004529         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000452b         xor        eax, eax
000000000000452d         call       j_error                                     ; error
0000000000004532         jmp        loc_4512
0000000000004534         align      64                                          ; End of unwind block (FDE at 0xb9d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dir_name:
0000000000004540         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xba04), CODE XREF=main+1388
0000000000004544         call       mdir_name                                   ; mdir_name
0000000000004549         test       rax, rax
000000000000454c         je         loc_4553

000000000000454e         add        rsp, 0x8
0000000000004552         ret
                        ; endp

                     loc_4553:
0000000000004553         call       xalloc_die                                  ; xalloc_die, CODE XREF=dir_name+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4558:
0000000000004558         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xba04)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dir_len:
0000000000004560         push       rbp                                         ; Begin of unwind block (FDE at 0xba24), CODE XREF=mdir_name+9
0000000000004561         push       rbx
0000000000004562         xor        ebp, ebp
0000000000004564         mov        rbx, rdi
0000000000004567         sub        rsp, 0x8
000000000000456b         cmp        byte [rdi], 0x2f
000000000000456e         sete       bpl
0000000000004572         call       last_component                              ; last_component
0000000000004577         mov        rcx, rax
000000000000457a         sub        rcx, rbx
000000000000457d         cmp        rcx, rbp
0000000000004580         jbe        loc_45b0

0000000000004582         cmp        byte [rax-1], 0x2f
0000000000004586         lea        rdx, qword [rcx-1]
000000000000458a         je         loc_459e

000000000000458c         jmp        loc_45b0
000000000000458e         align      16

                     loc_4590:
0000000000004590         cmp        byte [rbx+rdx-1], 0x2f                      ; CODE XREF=dir_len+65
0000000000004595         lea        rax, qword [rdx-1]
0000000000004599         jne        loc_45a3

000000000000459b         mov        rdx, rax

                     loc_459e:
000000000000459e         cmp        rbp, rdx                                    ; CODE XREF=dir_len+42
00000000000045a1         jne        loc_4590

                     loc_45a3:
00000000000045a3         add        rsp, 0x8                                    ; CODE XREF=dir_len+57
00000000000045a7         mov        rax, rdx
00000000000045aa         pop        rbx
00000000000045ab         pop        rbp
00000000000045ac         ret
                        ; endp
00000000000045ad         align      16

                     loc_45b0:
00000000000045b0         add        rsp, 0x8                                    ; CODE XREF=dir_len+32, dir_len+44
00000000000045b4         mov        rdx, rcx
00000000000045b7         mov        rax, rdx
00000000000045ba         pop        rbx
00000000000045bb         pop        rbp
00000000000045bc         ret
                        ; endp
00000000000045bd         align      64                                          ; End of unwind block (FDE at 0xba24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mdir_name:
00000000000045c0         push       rbp                                         ; Begin of unwind block (FDE at 0xba58), CODE XREF=dir_name+4
00000000000045c1         push       rbx
00000000000045c2         mov        rbp, rdi
00000000000045c5         sub        rsp, 0x8
00000000000045c9         call       dir_len                                     ; dir_len
00000000000045ce         test       rax, rax
00000000000045d1         mov        rbx, rax
00000000000045d4         sete       al
00000000000045d7         movzx      eax, al
00000000000045da         lea        rdi, qword [rbx+rax+1]                      ; argument "__size" for method j_malloc
00000000000045df         call       j_malloc                                    ; malloc
00000000000045e4         test       rax, rax
00000000000045e7         mov        rcx, rax
00000000000045ea         je         loc_4606

00000000000045ec         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
00000000000045ef         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
00000000000045f2         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000045f5         call       j_memcpy                                    ; memcpy
00000000000045fa         test       rbx, rbx
00000000000045fd         mov        rcx, rax
0000000000004600         je         loc_4610

                     loc_4602:
0000000000004602         mov        byte [rcx+rbx], 0x0                         ; CODE XREF=mdir_name+88

                     loc_4606:
0000000000004606         add        rsp, 0x8                                    ; CODE XREF=mdir_name+42
000000000000460a         mov        rax, rcx
000000000000460d         pop        rbx
000000000000460e         pop        rbp
000000000000460f         ret
                        ; endp

                     loc_4610:
0000000000004610         mov        byte [rax], 0x2e                            ; CODE XREF=mdir_name+64
0000000000004613         mov        ebx, 0x1
0000000000004618         jmp        loc_4602
000000000000461a         align      32                                          ; End of unwind block (FDE at 0xba58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     last_component:
0000000000004620         movzx      edx, byte [rdi]                             ; Begin of unwind block (FDE at 0xba84), CODE XREF=main+1377, dir_len+18
0000000000004623         mov        rax, rdi
0000000000004626         cmp        dl, 0x2f
0000000000004629         jne        loc_463c

000000000000462b         nop        dword [rax+rax]

                     loc_4630:
0000000000004630         add        rax, 0x1                                    ; CODE XREF=last_component+26
0000000000004634         movzx      edx, byte [rax]
0000000000004637         cmp        dl, 0x2f
000000000000463a         je         loc_4630

                     loc_463c:
000000000000463c         test       dl, dl                                      ; CODE XREF=last_component+9
000000000000463e         je         loc_467a

0000000000004640         mov        rcx, rax
0000000000004643         xor        esi, esi
0000000000004645         jmp        loc_4665
0000000000004647         align      16

                     loc_4650:
0000000000004650         test       sil, sil                                    ; CODE XREF=last_component+72
0000000000004653         je         loc_465a

0000000000004655         mov        rax, rcx
0000000000004658         xor        esi, esi

                     loc_465a:
000000000000465a         add        rcx, 0x1                                    ; CODE XREF=last_component+51
000000000000465e         movzx      edx, byte [rcx]
0000000000004661         test       dl, dl
0000000000004663         je         loc_467a

                     loc_4665:
0000000000004665         cmp        dl, 0x2f                                    ; CODE XREF=last_component+37, last_component+88
0000000000004668         jne        loc_4650

000000000000466a         add        rcx, 0x1
000000000000466e         movzx      edx, byte [rcx]
0000000000004671         mov        esi, 0x1
0000000000004676         test       dl, dl
0000000000004678         jne        loc_4665

                     loc_467a:
000000000000467a         ret                                                    ; CODE XREF=last_component+30, last_component+67
                        ; endp
000000000000467c         align      128                                         ; End of unwind block (FDE at 0xba84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base_len:
0000000000004680         push       rbx                                         ; Begin of unwind block (FDE at 0xba98), CODE XREF=main+1478
0000000000004681         mov        rbx, rdi
0000000000004684         call       j_strlen                                    ; strlen
0000000000004689         cmp        rax, 0x1
000000000000468d         jbe        loc_469a

000000000000468f         cmp        byte [rbx+rax-1], 0x2f
0000000000004694         lea        rdx, qword [rax-1]
0000000000004698         je         loc_46a8

                     loc_469a:
000000000000469a         pop        rbx                                         ; CODE XREF=base_len+13
000000000000469b         ret
                        ; endp
000000000000469c         align      32

                     loc_46a0:
00000000000046a0         mov        rdx, rax                                    ; CODE XREF=base_len+55
00000000000046a3         nop        dword [rax+rax]

                     loc_46a8:
00000000000046a8         cmp        rdx, 0x1                                    ; CODE XREF=base_len+24
00000000000046ac         je         loc_46c0

00000000000046ae         cmp        byte [rbx+rdx-1], 0x2f
00000000000046b3         lea        rax, qword [rdx-1]
00000000000046b7         je         loc_46a0

00000000000046b9         mov        rax, rdx
00000000000046bc         pop        rbx
00000000000046bd         ret
                        ; endp
00000000000046be         align      64

                     loc_46c0:
00000000000046c0         mov        eax, 0x1                                    ; CODE XREF=base_len+44
00000000000046c5         pop        rbx
00000000000046c6         ret
                        ; endp
00000000000046c7         align      16                                          ; End of unwind block (FDE at 0xba98)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_28: int64_t, -40
        ;    var_38: int8_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int32_t, -88


                     open_safer:
00000000000046d0         sub        rsp, 0x58                                   ; Begin of unwind block (FDE at 0xbac4), CODE XREF=main+961, main+1337, main+1936
00000000000046d4         mov        qword [rsp+0x58+var_28], rdx
00000000000046d9         xor        edx, edx
00000000000046db         mov        rax, qword [fs:0x28]
00000000000046e4         mov        qword [rsp+0x58+var_40], rax
00000000000046e9         xor        eax, eax
00000000000046eb         test       sil, 0x40
00000000000046ef         jne        loc_4718

                     loc_46f1:
00000000000046f1         xor        eax, eax                                    ; CODE XREF=open_safer+103
00000000000046f3         call       j_open                                      ; open
00000000000046f8         mov        edi, eax
00000000000046fa         call       fd_safer                                    ; fd_safer
00000000000046ff         mov        rcx, qword [rsp+0x58+var_40]
0000000000004704         xor        rcx, qword [fs:0x28]
000000000000470d         jne        loc_4739

000000000000470f         add        rsp, 0x58
0000000000004713         ret
                        ; endp
0000000000004714         align      8

                     loc_4718:
0000000000004718         lea        rax, qword [rsp+0x58+arg_0]                 ; CODE XREF=open_safer+31
000000000000471d         mov        dword [rsp+0x58+var_58], 0x10
0000000000004724         mov        edx, dword [rsp+0x58+var_28]
0000000000004728         mov        qword [rsp+0x58+var_50], rax
000000000000472d         lea        rax, qword [rsp+0x58+var_38]
0000000000004732         mov        qword [rsp+0x58+var_48], rax
0000000000004737         jmp        loc_46f1

                     loc_4739:
0000000000004739         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=open_safer+61
                        ; endp
000000000000473e         align      64                                          ; End of unwind block (FDE at 0xbac4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_A: int16_t, -10
        ;    var_C: int16_t, -12
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32


                     adjust_value.part.0:
0000000000004740         fld        dword [dword_a7ec]                          ; Begin of unwind block (FDE at 0xbae4), dword_a7ec, CODE XREF=human_readable+1400, human_readable+1434, human_readable+1960
0000000000004746         fld        tword [rsp+arg_0]
000000000000474a         fucomi     st1
000000000000474c         jae        loc_47c0

000000000000474e         fstp       st1
0000000000004750         fnstcw     word [rsp+var_A]
0000000000004754         movzx      eax, word [rsp+var_A]
0000000000004759         or         ah, 0xc
000000000000475c         mov        word [rsp+var_C], ax
0000000000004761         fld        st0
0000000000004763         fldcw      word [rsp+var_C]
0000000000004767         fistp      qword [rsp+var_18]
000000000000476b         fldcw      word [rsp+var_A]
000000000000476f         mov        rax, qword [rsp+var_18]

                     loc_4774:
0000000000004774         mov        qword [rsp+var_20], rax                     ; CODE XREF=adjust_value.part.0+179
0000000000004779         test       rax, rax
000000000000477c         fild       qword [rsp+var_20]
0000000000004780         jns        loc_4788

0000000000004782         fadd       dword [dword_a7f0]                          ; dword_a7f0

                     loc_4788:
0000000000004788         test       edi, edi                                    ; CODE XREF=adjust_value.part.0+64
000000000000478a         jne        loc_47b8

000000000000478c         fxch       st1
000000000000478e         fucomip    st1
0000000000004790         jp         loc_4798

0000000000004792         je         loc_47ba

0000000000004794         fstp       st0
0000000000004796         jmp        loc_47a0

                     loc_4798:
0000000000004798         fstp       st0                                         ; CODE XREF=adjust_value.part.0+80
000000000000479a         nop        word [rax+rax]

                     loc_47a0:
00000000000047a0         add        rax, 0x1                                    ; CODE XREF=adjust_value.part.0+86
00000000000047a4         mov        qword [rsp+var_20], rax
00000000000047a9         test       rax, rax
00000000000047ac         fild       qword [rsp+var_20]
00000000000047b0         js         loc_4800

00000000000047b2         jmp        loc_47ba
00000000000047b4         align      8

                     loc_47b8:
00000000000047b8         fstp       st1                                         ; CODE XREF=adjust_value.part.0+74

                     loc_47ba:
00000000000047ba         ret                                                    ; CODE XREF=adjust_value.part.0+82, adjust_value.part.0+114
                        ; endp
00000000000047bc         align      64

                     loc_47c0:
00000000000047c0         fnstcw     word [rsp+var_A]                            ; CODE XREF=adjust_value.part.0+12
00000000000047c4         movzx      eax, word [rsp+var_A]
00000000000047c9         fsubr      st1, st0
00000000000047cb         fxch       st1
00000000000047cd         movabs     rdx, 0x8000000000000000
00000000000047d7         or         ah, 0xc
00000000000047da         mov        word [rsp+var_C], ax
00000000000047df         fldcw      word [rsp+var_C]
00000000000047e3         fistp      qword [rsp+var_18]
00000000000047e7         fldcw      word [rsp+var_A]
00000000000047eb         mov        rax, qword [rsp+var_18]
00000000000047f0         xor        rax, rdx
00000000000047f3         jmp        loc_4774
00000000000047f8         align      2048

                     loc_4800:
0000000000004800         fadd       dword [dword_a7f0]                          ; dword_a7f0, CODE XREF=adjust_value.part.0+112
0000000000004806         ret
                        ; endp
0000000000004807         align      16                                          ; End of unwind block (FDE at 0xbae4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_78: int8_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_94: int32_t, -148
        ;    var_98: int32_t, -152
        ;    var_A8: int32_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D8: -216


                     human_readable:
0000000000004810         push       r15                                         ; Begin of unwind block (FDE at 0xbaf8), CODE XREF=dopass+1556, dopass+1669, dopass+1925
0000000000004812         push       r14
0000000000004814         mov        eax, edx
0000000000004816         push       r13
0000000000004818         push       r12
000000000000481a         mov        r15d, edx
000000000000481d         push       rbp
000000000000481e         push       rbx
000000000000481f         and        eax, 0x20
0000000000004822         and        r15d, 0x3
0000000000004826         mov        r12d, edx
0000000000004829         mov        rbx, rdi
000000000000482c         sub        rsp, 0x98
0000000000004833         mov        qword [rsp+0xc8+var_B0], rcx
0000000000004838         mov        dword [rsp+0xc8+var_98], eax
000000000000483c         mov        rcx, qword [fs:0x28]
0000000000004845         mov        qword [rsp+0xc8+var_40], rcx
000000000000484d         xor        ecx, ecx
000000000000484f         cmp        eax, 0x1
0000000000004852         mov        qword [rsp+0xc8+var_C8], rsi
0000000000004856         mov        qword [rsp+0xc8+var_B8], r8
000000000000485b         sbb        eax, eax
000000000000485d         and        eax, 0xffffffe8
0000000000004860         add        eax, 0x400
0000000000004865         mov        dword [rsp+0xc8+var_94], eax
0000000000004869         call       j_localeconv                                ; localeconv
000000000000486e         mov        r14, qword [rax]
0000000000004871         mov        r13, rax
0000000000004874         mov        rdi, r14                                    ; argument "__s" for method j_strlen
0000000000004877         call       j_strlen                                    ; strlen
000000000000487c         mov        rcx, qword [r13+0x10]
0000000000004880         mov        r13, qword [r13+8]
0000000000004884         mov        rbp, rax
0000000000004887         sub        rax, 0x1
000000000000488b         mov        edx, 0x1
0000000000004890         cmp        rax, 0x10
0000000000004894         lea        rax, qword [aSPassLuluS+23]                 ; 0x95d3
000000000000489b         mov        rdi, r13                                    ; argument "__s" for method j_strlen
000000000000489e         cmovae     rbp, rdx
00000000000048a2         mov        qword [rsp+0xc8+var_90], rcx
00000000000048a7         cmovae     r14, rax
00000000000048ab         call       j_strlen                                    ; strlen
00000000000048b0         cmp        rax, 0x11
00000000000048b4         lea        rax, qword [aWrittenBySSAnd+27]             ; 0xadb0
00000000000048bb         mov        rdi, qword [rsp+0xc8+var_B8]
00000000000048c0         mov        rcx, qword [rsp+0xc8+var_B0]
00000000000048c5         cmovae     r13, rax
00000000000048c9         mov        rax, qword [rsp+0xc8+var_C8]
00000000000048cd         add        rax, 0x287
00000000000048d3         cmp        rdi, rcx
00000000000048d6         mov        qword [rsp+0xc8+var_C0], rax
00000000000048db         ja         loc_4a28

00000000000048e1         xor        edx, edx
00000000000048e3         mov        rax, rcx
00000000000048e6         div        rdi
00000000000048e9         test       rdx, rdx
00000000000048ec         mov        rdi, rax
00000000000048ef         je         loc_4c50

                     loc_48f5:
00000000000048f5         mov        qword [rsp+0xc8+var_B0], rcx                ; CODE XREF=human_readable+539, human_readable+561, human_readable+1106
00000000000048fa         test       rcx, rcx
00000000000048fd         fild       qword [rsp+0xc8+var_B0]
0000000000004901         jns        loc_4909

0000000000004903         fadd       dword [dword_a7f0]                          ; dword_a7f0

                     loc_4909:
0000000000004909         mov        rax, qword [rsp+0xc8+var_B8]                ; CODE XREF=human_readable+241
000000000000490e         mov        qword [rsp+0xc8+var_B0], rax
0000000000004913         test       rax, rax
0000000000004916         fild       qword [rsp+0xc8+var_B0]
000000000000491a         jns        loc_4922

000000000000491c         fadd       dword [dword_a7f0]                          ; dword_a7f0

                     loc_4922:
0000000000004922         fdivp      st1                                         ; CODE XREF=human_readable+266
0000000000004924         mov        qword [rsp+0xc8+var_B0], rbx
0000000000004929         test       rbx, rbx
000000000000492c         fild       qword [rsp+0xc8+var_B0]
0000000000004930         jns        loc_4938

0000000000004932         fadd       dword [dword_a7f0]                          ; dword_a7f0

                     loc_4938:
0000000000004938         test       r12b, 0x10                                  ; CODE XREF=human_readable+288
000000000000493c         fmulp      st1
000000000000493e         je         loc_4b08

0000000000004944         fild       dword [rsp+0xc8+var_94]
0000000000004948         xor        ebx, ebx
000000000000494a         fld        st0
000000000000494c         jmp        loc_4954
000000000000494e         align      16

                     loc_4950:
0000000000004950         fstp       st1                                         ; CODE XREF=human_readable+340
0000000000004952         fxch       st2

                     loc_4954:
0000000000004954         fld        st0                                         ; CODE XREF=human_readable+316
0000000000004956         add        ebx, 0x1
0000000000004959         fmul       st2
000000000000495b         fxch       st3
000000000000495d         fucomi     st3
000000000000495f         jb         loc_4970

0000000000004961         cmp        ebx, 0x8
0000000000004964         jne        loc_4950

0000000000004966         fstp       st2
0000000000004968         fstp       st2
000000000000496a         jmp        loc_4974
000000000000496c         align      16

                     loc_4970:
0000000000004970         fstp       st2                                         ; CODE XREF=human_readable+335
0000000000004972         fstp       st2

                     loc_4974:
0000000000004974         mov        ecx, dword [rsp+0xc8+var_98]                ; CODE XREF=human_readable+346
0000000000004978         add        rbp, 0x1
000000000000497c         xor        eax, eax
000000000000497e         fdivrp     st1
0000000000004980         test       ecx, ecx
0000000000004982         sete       al
0000000000004985         cmp        r15d, 0x1
0000000000004989         lea        rax, qword [rbp+rax+1]
000000000000498e         mov        qword [rsp+0xc8+var_B0], rax
0000000000004993         je         loc_4f00

0000000000004999         fld        tword [dword_a7f4+12]                       ; 0xa800
000000000000499f         fucomip    st1
00000000000049a1         ja         loc_4d78

00000000000049a7         fld        st0

                     loc_49a9:
00000000000049a9         fstp       tword [rsp+0xc8+var_A8]                     ; CODE XREF=human_readable+1411
00000000000049ad         sub        rsp, 0x10
00000000000049b1         lea        rcx, qword [a1lf]                           ; "%.1Lf"
00000000000049b8         mov        esi, 0x1
00000000000049bd         mov        rdx, 0xffffffffffffffff
00000000000049c4         xor        eax, eax
00000000000049c6         mov        r14, qword [rsp+0xd8+var_C8]
00000000000049cb         mov        rdi, r14
00000000000049ce         fstp       tword [rsp+0xd8+var_D8]
00000000000049d1         call       j___sprintf_chk                             ; __sprintf_chk
00000000000049d6         mov        rdi, r14                                    ; argument "__s" for method j_strlen
00000000000049d9         call       j_strlen                                    ; strlen
00000000000049de         pop        rcx
00000000000049df         pop        rsi
00000000000049e0         cmp        rax, qword [rsp+0xc8+var_B0]
00000000000049e5         mov        r14, rax
00000000000049e8         fld        tword [rsp+0xc8+var_A8]
00000000000049ec         ja         loc_4f98

                     loc_49f2:
00000000000049f2         test       r12b, 0x8                                   ; CODE XREF=human_readable+1845
00000000000049f6         je         loc_4b60

00000000000049fc         mov        rax, qword [rsp+0xc8+var_C8]
0000000000004a00         cmp        byte [rax+r14-1], 0x30
0000000000004a06         jne        loc_4b68

0000000000004a0c         fld        dword [dword_a7f4]                          ; dword_a7f4
0000000000004a12         cmp        r15d, 0x1
0000000000004a16         fmul       st1, st0
0000000000004a18         jne        loc_4fa0

0000000000004a1e         jmp        loc_4f53
0000000000004a23         align      8

                     loc_4a28:
0000000000004a28         test       rcx, rcx                                    ; CODE XREF=human_readable+203
0000000000004a2b         je         loc_48f5

0000000000004a31         mov        rax, qword [rsp+0xc8+var_B8]
0000000000004a36         xor        edx, edx
0000000000004a38         div        rcx
0000000000004a3b         test       rdx, rdx
0000000000004a3e         mov        r8, rax
0000000000004a41         jne        loc_48f5

0000000000004a47         mov        rax, rbx
0000000000004a4a         xor        edx, edx
0000000000004a4c         div        r8
0000000000004a4f         mov        rbx, rax
0000000000004a52         lea        rax, qword [rdx+rdx*4]
0000000000004a56         xor        edx, edx
0000000000004a58         mov        rsi, rbx
0000000000004a5b         add        rax, rax
0000000000004a5e         div        r8
0000000000004a61         add        rdx, rdx
0000000000004a64         mov        r9d, eax
0000000000004a67         cmp        r8, rdx
0000000000004a6a         jbe        loc_4ff8

0000000000004a70         xor        edi, edi
0000000000004a72         test       rdx, rdx
0000000000004a75         setne      dil

                     loc_4a79:
0000000000004a79         mov        ecx, r12d                                   ; CODE XREF=human_readable+1117, human_readable+2035
0000000000004a7c         mov        r8, qword [rsp+0xc8+var_C0]
0000000000004a81         mov        ebx, 0xffffffff
0000000000004a86         and        ecx, 0x10
0000000000004a89         je         loc_4e50

0000000000004a8f         mov        r8d, dword [rsp+0xc8+var_94]
0000000000004a94         cmp        r8, rsi
0000000000004a97         mov        r11, r8
0000000000004a9a         ja         loc_5010

0000000000004aa0         xor        ebx, ebx
0000000000004aa2         jmp        loc_4ac7
0000000000004aa4         align      8

                     loc_4aa8:
0000000000004aa8         test       edi, edi                                    ; CODE XREF=human_readable+736
0000000000004aaa         setne      dil
0000000000004aae         movzx      edi, dil

                     loc_4ab2:
0000000000004ab2         add        ebx, 0x1                                    ; CODE XREF=human_readable+752
0000000000004ab5         cmp        r8, r10
0000000000004ab8         ja         loc_4dcd

0000000000004abe         cmp        ebx, 0x8
0000000000004ac1         je         loc_5068

                     loc_4ac7:
0000000000004ac7         mov        rax, rsi                                    ; CODE XREF=human_readable+658
0000000000004aca         xor        edx, edx
0000000000004acc         mov        esi, edi
0000000000004ace         div        r8
0000000000004ad1         sar        esi, 0x1
0000000000004ad3         mov        r10, rax
0000000000004ad6         lea        eax, dword [rdx+rdx*4]
0000000000004ad9         xor        edx, edx
0000000000004adb         lea        eax, dword [r9+rax*2]
0000000000004adf         div        r11d
0000000000004ae2         lea        edx, dword [rsi+rdx*2]
0000000000004ae5         mov        r9d, eax
0000000000004ae8         mov        rsi, r10
0000000000004aeb         add        edi, edx
0000000000004aed         cmp        r11d, edx
0000000000004af0         ja         loc_4aa8

0000000000004af2         cmp        r11d, edi
0000000000004af5         setb       dil
0000000000004af9         movzx      edi, dil
0000000000004afd         add        edi, 0x2
0000000000004b00         jmp        loc_4ab2
0000000000004b02         align      8

                     loc_4b08:
0000000000004b08         cmp        r15d, 0x1                                   ; CODE XREF=human_readable+302
0000000000004b0c         je         loc_4b1c

0000000000004b0e         fld        tword [dword_a7f4+12]                       ; 0xa800
0000000000004b14         fucomip    st1
0000000000004b16         ja         loc_4da0

                     loc_4b1c:
0000000000004b1c         sub        rsp, 0x10                                   ; CODE XREF=human_readable+764, human_readable+1443
0000000000004b20         lea        rcx, qword [a0lf]                           ; "%.0Lf"
0000000000004b27         mov        esi, 0x1
0000000000004b2c         mov        rbx, qword [rsp+0xd8+var_C8]
0000000000004b31         mov        rdx, 0xffffffffffffffff
0000000000004b38         xor        eax, eax
0000000000004b3a         fstp       tword [rsp+0xd8+var_D8]
0000000000004b3d         xor        ebp, ebp
0000000000004b3f         mov        rdi, rbx
0000000000004b42         call       j___sprintf_chk                             ; __sprintf_chk
0000000000004b47         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000004b4a         mov        ebx, 0xffffffff
0000000000004b4f         call       j_strlen                                    ; strlen
0000000000004b54         pop        rsi
0000000000004b55         pop        rdi
0000000000004b56         mov        r14, rax
0000000000004b59         jmp        loc_4b70
0000000000004b5b         align      32

                     loc_4b60:
0000000000004b60         fstp       st0                                         ; CODE XREF=human_readable+486
0000000000004b62         jmp        loc_4b70
0000000000004b64         align      8

                     loc_4b68:
0000000000004b68         fstp       st0                                         ; CODE XREF=human_readable+502
0000000000004b6a         nop        word [rax+rax]

                     loc_4b70:
0000000000004b70         mov        r15, qword [rsp+0xc8+var_C0]                ; CODE XREF=human_readable+841, human_readable+850, human_readable+1919
0000000000004b75         mov        rsi, qword [rsp+0xc8+var_C8]                ; argument "__src" for method j_memmove
0000000000004b79         mov        rdx, r14                                    ; argument "__n" for method j_memmove
0000000000004b7c         sub        r15, r14
0000000000004b7f         sub        r14, rbp
0000000000004b82         mov        rdi, r15                                    ; argument "__dest" for method j_memmove
0000000000004b85         call       j_memmove                                   ; memmove
0000000000004b8a         mov        r8, r14
0000000000004b8d         add        r8, r15

                     loc_4b90:
0000000000004b90         test       r12b, 0x4                                   ; CODE XREF=human_readable+1702, human_readable+2127
0000000000004b94         jne        loc_4c78

                     loc_4b9a:
0000000000004b9a         test       r12b, 0x80                                  ; CODE XREF=human_readable+1343, human_readable+2562
0000000000004b9e         je         loc_4c17

0000000000004ba0         cmp        ebx, 0xffffffff
0000000000004ba3         je         loc_4ec0

                     loc_4ba9:
0000000000004ba9         mov        eax, r12d                                   ; CODE XREF=human_readable+1748, human_readable+1762, human_readable+2148
0000000000004bac         and        eax, 0x100
0000000000004bb1         mov        ecx, eax
0000000000004bb3         or         ecx, ebx
0000000000004bb5         je         loc_4c17

0000000000004bb7         and        r12d, 0x40
0000000000004bbb         jne        loc_4d58

                     loc_4bc1:
0000000000004bc1         test       ebx, ebx                                    ; CODE XREF=human_readable+1375
0000000000004bc3         je         loc_51f6

0000000000004bc9         cmp        ebx, 0x1
0000000000004bcc         jne        loc_4bdc

0000000000004bce         mov        r9d, dword [rsp+0xc8+var_98]
0000000000004bd3         test       r9d, r9d
0000000000004bd6         je         loc_5020

                     loc_4bdc:
0000000000004bdc         lea        rcx, qword [power_letter]                   ; power_letter, CODE XREF=human_readable+956
0000000000004be3         movsxd     rbx, ebx
0000000000004be6         mov        rdi, qword [rsp+0xc8+var_C0]
0000000000004beb         test       eax, eax
0000000000004bed         movzx      ecx, byte [rcx+rbx]
0000000000004bf1         lea        rdx, qword [rdi+1]
0000000000004bf5         mov        byte [rdi], cl
0000000000004bf7         je         loc_5034

0000000000004bfd         mov        r8d, dword [rsp+0xc8+var_98]
0000000000004c02         test       r8d, r8d
0000000000004c05         jne        loc_4dc0

                     loc_4c0b:
0000000000004c0b         lea        rax, qword [rdx+1]                          ; CODE XREF=human_readable+1464, human_readable+2078, human_readable+2541
0000000000004c0f         mov        byte [rdx], 0x42
0000000000004c12         mov        qword [rsp+0xc8+var_C0], rax

                     loc_4c17:
0000000000004c17         mov        rax, qword [rsp+0xc8+var_C0]                ; CODE XREF=human_readable+910, human_readable+933, human_readable+2089, human_readable+2547
0000000000004c1c         mov        rcx, qword [rsp+0xc8+var_40]
0000000000004c24         xor        rcx, qword [fs:0x28]
0000000000004c2d         mov        byte [rax], 0x0
0000000000004c30         mov        rax, r15
0000000000004c33         jne        loc_51cb

0000000000004c39         add        rsp, 0x98
0000000000004c40         pop        rbx
0000000000004c41         pop        rbp
0000000000004c42         pop        r12
0000000000004c44         pop        r13
0000000000004c46         pop        r14
0000000000004c48         pop        r15
0000000000004c4a         ret
                        ; endp
0000000000004c4b         align      16

                     loc_4c50:
0000000000004c50         mov        rsi, rbx                                    ; CODE XREF=human_readable+223
0000000000004c53         xor        edx, edx
0000000000004c55         imul       rsi, rax
0000000000004c59         mov        rax, rsi
0000000000004c5c         div        rdi
0000000000004c5f         cmp        rax, rbx
0000000000004c62         jne        loc_48f5

0000000000004c68         xor        edi, edi
0000000000004c6a         xor        r9d, r9d
0000000000004c6d         jmp        loc_4a79
0000000000004c72         align      8

                     loc_4c78:
0000000000004c78         mov        r14, r8                                     ; CODE XREF=human_readable+900
0000000000004c7b         mov        rdi, r13                                    ; argument "__s" for method j_strlen
0000000000004c7e         mov        qword [rsp+0xc8+var_80], r8
0000000000004c83         sub        r14, r15
0000000000004c86         mov        rbp, 0xffffffffffffffff
0000000000004c8d         call       j_strlen                                    ; strlen
0000000000004c92         lea        rdi, qword [rsp+0xc8+var_78]
0000000000004c97         mov        ecx, 0x29
0000000000004c9c         mov        rdx, r14
0000000000004c9f         mov        rsi, r15
0000000000004ca2         mov        qword [rsp+0xc8+var_88], rax
0000000000004ca7         mov        qword [rsp+0xc8+var_B0], rdi
0000000000004cac         call       j___memcpy_chk                              ; __memcpy_chk
0000000000004cb1         mov        ecx, r12d
0000000000004cb4         mov        dword [rsp+0xc8+var_A8], ebx
0000000000004cb8         mov        r12, r14
0000000000004cbb         mov        rbx, r13
0000000000004cbe         mov        r8, qword [rsp+0xc8+var_80]
0000000000004cc3         mov        r15, qword [rsp+0xc8+var_90]
0000000000004cc8         mov        r13, qword [rsp+0xc8+var_88]
0000000000004ccd         mov        r14d, ecx
0000000000004cd0         jmp        loc_4d12
0000000000004cd2         align      8

                     loc_4cd8:
0000000000004cd8         mov        rax, qword [rsp+0xc8+var_B0]                ; CODE XREF=human_readable+1306
0000000000004cdd         sub        r12, rbp
0000000000004ce0         sub        r8, rbp
0000000000004ce3         mov        rdi, r8                                     ; argument "__dest" for method j_memcpy
0000000000004ce6         mov        rdx, rbp                                    ; argument "__n" for method j_memcpy
0000000000004ce9         lea        rsi, qword [rax+r12]                        ; argument "__src" for method j_memcpy
0000000000004ced         call       j_memcpy                                    ; memcpy
0000000000004cf2         test       r12, r12
0000000000004cf5         mov        r8, rax
0000000000004cf8         je         loc_5208

0000000000004cfe         sub        r8, r13
0000000000004d01         mov        rdx, r13                                    ; argument "__n" for method j_memcpy
0000000000004d04         mov        rsi, rbx                                    ; argument "__src" for method j_memcpy
0000000000004d07         mov        rdi, r8                                     ; argument "__dest" for method j_memcpy
0000000000004d0a         call       j_memcpy                                    ; memcpy
0000000000004d0f         mov        r8, rax

                     loc_4d12:
0000000000004d12         movzx      eax, byte [r15]                             ; CODE XREF=human_readable+1216
0000000000004d16         test       al, al
0000000000004d18         je         loc_4d27

0000000000004d1a         cmp        al, 0x7f
0000000000004d1c         movzx      ebp, al
0000000000004d1f         cmovae     rbp, r12
0000000000004d23         add        r15, 0x1

                     loc_4d27:
0000000000004d27         cmp        rbp, r12                                    ; CODE XREF=human_readable+1288
0000000000004d2a         jbe        loc_4cd8

0000000000004d2c         mov        eax, r14d
0000000000004d2f         mov        r15, r8
0000000000004d32         mov        r14, r12
0000000000004d35         mov        rsi, qword [rsp+0xc8+var_B0]                ; argument "__src" for method j_memcpy
0000000000004d3a         sub        r15, r14
0000000000004d3d         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000004d40         mov        rdi, r15                                    ; argument "__dest" for method j_memcpy
0000000000004d43         mov        ebx, dword [rsp+0xc8+var_A8]
0000000000004d47         mov        r12d, eax
0000000000004d4a         call       j_memcpy                                    ; memcpy
0000000000004d4f         jmp        loc_4b9a
0000000000004d54         align      8

                     loc_4d58:
0000000000004d58         mov        rcx, qword [rsp+0xc8+var_C8]                ; CODE XREF=human_readable+939
0000000000004d5c         lea        rdi, qword [rcx+0x288]
0000000000004d63         mov        byte [rcx+0x287], 0x20
0000000000004d6a         mov        qword [rsp+0xc8+var_C0], rdi
0000000000004d6f         jmp        loc_4bc1
0000000000004d74         align      8

                     loc_4d78:
0000000000004d78         sub        rsp, 0x10                                   ; CODE XREF=human_readable+401
0000000000004d7c         mov        edi, r15d
0000000000004d7f         fld        st0
0000000000004d81         fstp       tword [rsp+0xd8+var_D8]
0000000000004d84         fstp       tword [rsp+0xd8+var_A8]
0000000000004d88         call       adjust_value.part.0                         ; adjust_value.part.0
0000000000004d8d         pop        rax
0000000000004d8e         pop        rdx
0000000000004d8f         fld        tword [rsp+0xc8+var_A8]
0000000000004d93         jmp        loc_49a9
0000000000004d98         align      32

                     loc_4da0:
0000000000004da0         sub        rsp, 0x10                                   ; CODE XREF=human_readable+774
0000000000004da4         mov        edi, r15d
0000000000004da7         fstp       tword [rsp+0xd8+var_D8]
0000000000004daa         call       adjust_value.part.0                         ; adjust_value.part.0
0000000000004daf         pop        r8
0000000000004db1         pop        r9
0000000000004db3         jmp        loc_4b1c
0000000000004db8         align      64

                     loc_4dc0:
0000000000004dc0         lea        rdx, qword [rdi+2]                          ; CODE XREF=human_readable+1013
0000000000004dc4         mov        byte [rdi+1], 0x69
0000000000004dc8         jmp        loc_4c0b

                     loc_4dcd:
0000000000004dcd         cmp        r10, 0x9                                    ; CODE XREF=human_readable+680
0000000000004dd1         ja         loc_5068

0000000000004dd7         cmp        r15d, 0x1
0000000000004ddb         je         loc_5092

0000000000004de1         test       r15d, r15d
0000000000004de4         sete       dl
0000000000004de7         test       edi, edi
0000000000004de9         setg       r8b
0000000000004ded         and        edx, r8d

                     loc_4df0:
0000000000004df0         test       dl, dl                                      ; CODE XREF=human_readable+2191
0000000000004df2         je         loc_5079

0000000000004df8         lea        r9d, dword [rax+1]
0000000000004dfc         cmp        r9d, 0xa
0000000000004e00         je         loc_5101

                     loc_4e06:
0000000000004e06         add        r9d, 0x30                                   ; CODE XREF=human_readable+2155

                     loc_4e0a:
0000000000004e0a         mov        rax, qword [rsp+0xc8+var_C8]                ; CODE XREF=human_readable+2173
0000000000004e0e         lea        r8, qword [rax+0x286]
0000000000004e15         mov        byte [rax+0x286], r9b
0000000000004e1c         mov        eax, ebp
0000000000004e1e         sub        r8, rbp
0000000000004e21         cmp        ebp, 0x8
0000000000004e24         jae        loc_50b1

0000000000004e2a         test       bpl, 0x4
0000000000004e2e         jne        loc_51b6

0000000000004e34         test       eax, eax
0000000000004e36         je         loc_4e47

0000000000004e38         movzx      edx, byte [r14]
0000000000004e3c         test       al, 0x2
0000000000004e3e         mov        byte [r8], dl
0000000000004e41         jne        loc_51d0

                     loc_4e47:
0000000000004e47         xor        edi, edi                                    ; CODE XREF=human_readable+1574, human_readable+2255, human_readable+2284, human_readable+2389, human_readable+2486, human_readable+2508
0000000000004e49         xor        r9d, r9d
0000000000004e4c         nop        dword [rax]

                     loc_4e50:
0000000000004e50         cmp        r15d, 0x1                                   ; CODE XREF=human_readable+633, human_readable+2055, human_readable+2141, human_readable+2204
0000000000004e54         je         loc_4fd0

0000000000004e5a         test       r15d, r15d
0000000000004e5d         jne        loc_4e80

0000000000004e5f         add        edi, r9d
0000000000004e62         test       edi, edi
0000000000004e64         jle        loc_4e80

                     loc_4e66:
0000000000004e66         add        rsi, 0x1                                    ; CODE XREF=human_readable+2009
0000000000004e6a         test       ecx, ecx
0000000000004e6c         je         loc_4e80

0000000000004e6e         mov        eax, dword [rsp+0xc8+var_94]
0000000000004e72         cmp        rax, rsi
0000000000004e75         je         loc_5040

0000000000004e7b         nop        dword [rax+rax]

                     loc_4e80:
0000000000004e80         mov        r15, r8                                     ; CODE XREF=human_readable+1613, human_readable+1620, human_readable+1628, human_readable+2015, human_readable+2099
0000000000004e83         movabs     rcx, 0xcccccccccccccccd
0000000000004e8d         nop        dword [rax]

                     loc_4e90:
0000000000004e90         mov        rax, rsi                                    ; CODE XREF=human_readable+1700
0000000000004e93         sub        r15, 0x1
0000000000004e97         mul        rcx
0000000000004e9a         shr        rdx, 0x3
0000000000004e9e         lea        rax, qword [rdx+rdx*4]
0000000000004ea2         add        rax, rax
0000000000004ea5         sub        rsi, rax
0000000000004ea8         add        esi, 0x30
0000000000004eab         test       rdx, rdx
0000000000004eae         mov        byte [r15], sil
0000000000004eb1         mov        rsi, rdx
0000000000004eb4         jne        loc_4e90

0000000000004eb6         jmp        loc_4b90
0000000000004ebb         align      64

                     loc_4ec0:
0000000000004ec0         mov        rcx, qword [rsp+0xc8+var_B8]                ; CODE XREF=human_readable+915
0000000000004ec5         cmp        rcx, 0x1
0000000000004ec9         jbe        loc_5072

0000000000004ecf         mov        edx, dword [rsp+0xc8+var_94]
0000000000004ed3         mov        ebx, 0x1
0000000000004ed8         mov        eax, 0x1

                     loc_4edd:
0000000000004edd         imul       rax, rdx                                    ; CODE XREF=human_readable+1760
0000000000004ee1         cmp        rcx, rax
0000000000004ee4         jbe        loc_4ba9

0000000000004eea         add        ebx, 0x1
0000000000004eed         cmp        ebx, 0x8
0000000000004ef0         jne        loc_4edd

0000000000004ef2         jmp        loc_4ba9
0000000000004ef7         align      256

                     loc_4f00:
0000000000004f00         sub        rsp, 0x10                                   ; CODE XREF=human_readable+387
0000000000004f04         lea        rcx, qword [a1lf]                           ; "%.1Lf"
0000000000004f0b         mov        rdx, 0xffffffffffffffff
0000000000004f12         fld        st0
0000000000004f14         fstp       tword [rsp+0xd8+var_D8]
0000000000004f17         mov        r14, qword [rsp+0xd8+var_C8]
0000000000004f1c         mov        esi, 0x1
0000000000004f21         xor        eax, eax
0000000000004f23         mov        rdi, r14
0000000000004f26         fstp       tword [rsp+0xd8+var_A8]
0000000000004f2a         call       j___sprintf_chk                             ; __sprintf_chk
0000000000004f2f         mov        rdi, r14                                    ; argument "__s" for method j_strlen
0000000000004f32         call       j_strlen                                    ; strlen
0000000000004f37         mov        r14, rax
0000000000004f3a         pop        rax
0000000000004f3b         pop        rdx
0000000000004f3c         cmp        r14, qword [rsp+0xc8+var_B0]
0000000000004f41         fld        tword [rsp+0xc8+var_A8]
0000000000004f45         jbe        loc_49f2

0000000000004f4b         fld        dword [dword_a7f4]                          ; dword_a7f4
0000000000004f51         fmul       st1, st0

                     loc_4f53:
0000000000004f53         fdivp      st1                                         ; CODE XREF=human_readable+526, human_readable+1944, human_readable+1972
0000000000004f55         sub        rsp, 0x10
0000000000004f59         lea        rcx, qword [a0lf]                           ; "%.0Lf"
0000000000004f60         mov        r14, qword [rsp+0xd8+var_C8]
0000000000004f65         mov        rdx, 0xffffffffffffffff
0000000000004f6c         mov        esi, 0x1
0000000000004f71         xor        eax, eax
0000000000004f73         xor        ebp, ebp
0000000000004f75         mov        rdi, r14
0000000000004f78         fstp       tword [rsp+0xd8+var_D8]
0000000000004f7b         call       j___sprintf_chk                             ; __sprintf_chk
0000000000004f80         mov        rdi, r14                                    ; argument "__s" for method j_strlen
0000000000004f83         call       j_strlen                                    ; strlen
0000000000004f88         pop        r10
0000000000004f8a         mov        r14, rax
0000000000004f8d         pop        r11
0000000000004f8f         jmp        loc_4b70
0000000000004f94         align      8

                     loc_4f98:
0000000000004f98         fld        dword [dword_a7f4]                          ; dword_a7f4, CODE XREF=human_readable+476
0000000000004f9e         fmul       st1, st0

                     loc_4fa0:
0000000000004fa0         fld        tword [dword_a7f4+12]                       ; 0xa800, CODE XREF=human_readable+520
0000000000004fa6         fucomip    st2
0000000000004fa8         jbe        loc_4f53

0000000000004faa         fstp       dword [rsp+0xc8+var_B0]
0000000000004fae         sub        rsp, 0x10
0000000000004fb2         mov        edi, r15d
0000000000004fb5         fstp       tword [rsp+0xd8+var_D8]
0000000000004fb8         call       adjust_value.part.0                         ; adjust_value.part.0
0000000000004fbd         pop        rbp
0000000000004fbe         pop        r14
0000000000004fc0         fld        dword [rsp+0xc8+var_B0]
0000000000004fc4         jmp        loc_4f53
0000000000004fc6         align      16

                     loc_4fd0:
0000000000004fd0         mov        rax, rsi                                    ; CODE XREF=human_readable+1604
0000000000004fd3         movsxd     rdi, edi
0000000000004fd6         and        eax, 0x1
0000000000004fd9         add        rax, rdi
0000000000004fdc         setne      al
0000000000004fdf         movzx      eax, al
0000000000004fe2         add        r9d, eax
0000000000004fe5         cmp        r9d, 0x5
0000000000004fe9         jg         loc_4e66

0000000000004fef         jmp        loc_4e80
0000000000004ff4         align      8

                     loc_4ff8:
0000000000004ff8         setb       dil                                         ; CODE XREF=human_readable+602
0000000000004ffc         movzx      edi, dil
0000000000005000         add        edi, 0x2
0000000000005003         jmp        loc_4a79
0000000000005008         align      16

                     loc_5010:
0000000000005010         mov        r8, qword [rsp+0xc8+var_C0]                 ; CODE XREF=human_readable+650
0000000000005015         xor        ebx, ebx
0000000000005017         jmp        loc_4e50
000000000000501c         align      32

                     loc_5020:
0000000000005020         mov        rbx, qword [rsp+0xc8+var_C0]                ; CODE XREF=human_readable+966
0000000000005025         test       eax, eax
0000000000005027         lea        rdx, qword [rbx+1]
000000000000502b         mov        byte [rbx], 0x6b
000000000000502e         jne        loc_4c0b

                     loc_5034:
0000000000005034         mov        qword [rsp+0xc8+var_C0], rdx                ; CODE XREF=human_readable+999
0000000000005039         jmp        loc_4c17
000000000000503e         align      64

                     loc_5040:
0000000000005040         cmp        ebx, 0x8                                    ; CODE XREF=human_readable+1637
0000000000005043         je         loc_4e80

0000000000005049         add        ebx, 0x1
000000000000504c         test       r12b, 0x8
0000000000005050         je         loc_5112

                     loc_5056:
0000000000005056         lea        r15, qword [r8-1]                           ; CODE XREF=human_readable+2338, human_readable+2353, human_readable+2371, human_readable+2437, human_readable+2465, human_readable+2529
000000000000505a         mov        byte [r8-1], 0x31
000000000000505f         jmp        loc_4b90
0000000000005064         align      8

                     loc_5068:
0000000000005068         mov        r8, qword [rsp+0xc8+var_C0]                 ; CODE XREF=human_readable+689, human_readable+1473
000000000000506d         jmp        loc_4e50

                     loc_5072:
0000000000005072         xor        ebx, ebx                                    ; CODE XREF=human_readable+1721
0000000000005074         jmp        loc_4ba9

                     loc_5079:
0000000000005079         test       eax, eax                                    ; CODE XREF=human_readable+1506
000000000000507b         jne        loc_4e06

                     loc_5081:
0000000000005081         test       r12b, 0x8                                   ; CODE XREF=human_readable+2301
0000000000005085         jne        loc_50a4

0000000000005087         mov        r9d, 0x30
000000000000508d         jmp        loc_4e0a

                     loc_5092:
0000000000005092         mov        edx, eax                                    ; CODE XREF=human_readable+1483
0000000000005094         and        edx, 0x1
0000000000005097         add        edx, edi
0000000000005099         cmp        edx, 0x2
000000000000509c         setg       dl
000000000000509f         jmp        loc_4df0

                     loc_50a4:
00000000000050a4         mov        r8, qword [rsp+0xc8+var_C0]                 ; CODE XREF=human_readable+2165
00000000000050a9         xor        r9d, r9d
00000000000050ac         jmp        loc_4e50

                     loc_50b1:
00000000000050b1         mov        rax, qword [r14]                            ; CODE XREF=human_readable+1556
00000000000050b4         mov        r9, r14
00000000000050b7         mov        qword [r8], rax
00000000000050ba         mov        eax, ebp
00000000000050bc         mov        rdx, qword [r14+rax-8]
00000000000050c1         mov        qword [r8+rax-8], rdx
00000000000050c6         lea        rdx, qword [r8+8]
00000000000050ca         mov        rax, r8
00000000000050cd         and        rdx, 0xfffffffffffffff8
00000000000050d1         sub        rax, rdx
00000000000050d4         sub        r9, rax
00000000000050d7         add        eax, ebp
00000000000050d9         and        eax, 0xfffffff8
00000000000050dc         cmp        eax, 0x8
00000000000050df         jb         loc_4e47

00000000000050e5         and        eax, 0xfffffff8
00000000000050e8         xor        edi, edi

                     loc_50ea:
00000000000050ea         mov        r10d, edi                                   ; CODE XREF=human_readable+2282
00000000000050ed         add        edi, 0x8
00000000000050f0         mov        r11, qword [r9+r10]
00000000000050f4         cmp        edi, eax
00000000000050f6         mov        qword [rdx+r10], r11
00000000000050fa         jb         loc_50ea

00000000000050fc         jmp        loc_4e47

                     loc_5101:
0000000000005101         lea        rsi, qword [r10+1]                          ; CODE XREF=human_readable+1520
0000000000005105         cmp        rsi, 0xa
0000000000005109         je         loc_5160

000000000000510b         xor        edi, edi
000000000000510d         jmp        loc_5081

                     loc_5112:
0000000000005112         mov        rax, rbp                                    ; CODE XREF=human_readable+2112
0000000000005115         mov        byte [r8-1], 0x30
000000000000511a         not        rax
000000000000511d         add        r8, rax
0000000000005120         cmp        ebp, 0x8
0000000000005123         mov        eax, ebp
0000000000005125         jae        loc_516a

0000000000005127         and        ebp, 0x4
000000000000512a         jne        loc_51e1

0000000000005130         test       eax, eax
0000000000005132         je         loc_5056

0000000000005138         movzx      edx, byte [r14]
000000000000513c         test       al, 0x2
000000000000513e         mov        byte [r8], dl
0000000000005141         je         loc_5056

0000000000005147         movzx      edx, word [r14+rax-2]
000000000000514d         mov        word [r8+rax-2], dx
0000000000005153         jmp        loc_5056
0000000000005158         align      32

                     loc_5160:
0000000000005160         mov        r8, qword [rsp+0xc8+var_C0]                 ; CODE XREF=human_readable+2297
0000000000005165         jmp        loc_4e47

                     loc_516a:
000000000000516a         mov        rax, qword [r14]                            ; CODE XREF=human_readable+2325
000000000000516d         lea        rcx, qword [r8+8]
0000000000005171         and        rcx, 0xfffffffffffffff8
0000000000005175         mov        qword [r8], rax
0000000000005178         mov        eax, ebp
000000000000517a         mov        rdx, qword [r14+rax-8]
000000000000517f         mov        qword [r8+rax-8], rdx
0000000000005184         mov        rax, r8
0000000000005187         sub        rax, rcx
000000000000518a         sub        r14, rax
000000000000518d         add        eax, ebp
000000000000518f         and        eax, 0xfffffff8
0000000000005192         cmp        eax, 0x8
0000000000005195         jb         loc_5056

000000000000519b         and        eax, 0xfffffff8
000000000000519e         xor        edx, edx

                     loc_51a0:
00000000000051a0         mov        esi, edx                                    ; CODE XREF=human_readable+2463
00000000000051a2         add        edx, 0x8
00000000000051a5         mov        rdi, qword [r14+rsi]
00000000000051a9         cmp        edx, eax
00000000000051ab         mov        qword [rcx+rsi], rdi
00000000000051af         jb         loc_51a0

00000000000051b1         jmp        loc_5056

                     loc_51b6:
00000000000051b6         mov        edx, dword [r14]                            ; CODE XREF=human_readable+1566
00000000000051b9         mov        dword [r8], edx
00000000000051bc         mov        edx, dword [r14+rax-4]
00000000000051c1         mov        dword [r8+rax-4], edx
00000000000051c6         jmp        loc_4e47

                     loc_51cb:
00000000000051cb         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=human_readable+1059
                        ; endp

                     loc_51d0:
00000000000051d0         movzx      edx, word [r14+rax-2]                       ; CODE XREF=human_readable+1585
00000000000051d6         mov        word [r8+rax-2], dx
00000000000051dc         jmp        loc_4e47

                     loc_51e1:
00000000000051e1         mov        edx, dword [r14]                            ; CODE XREF=human_readable+2330
00000000000051e4         mov        dword [r8], edx
00000000000051e7         mov        edx, dword [r14+rax-4]
00000000000051ec         mov        dword [r8+rax-4], edx
00000000000051f1         jmp        loc_5056

                     loc_51f6:
00000000000051f6         test       eax, eax                                    ; CODE XREF=human_readable+947
00000000000051f8         mov        rdx, qword [rsp+0xc8+var_C0]
00000000000051fd         jne        loc_4c0b

0000000000005203         jmp        loc_4c17

                     loc_5208:
0000000000005208         mov        ebx, dword [rsp+0xc8+var_A8]                ; CODE XREF=human_readable+1256
000000000000520c         mov        r15, rax
000000000000520f         mov        r12d, r14d
0000000000005212         jmp        loc_4b9a
0000000000005217         align      32                                          ; End of unwind block (FDE at 0xbaf8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     human_options:
0000000000005220         push       r13                                         ; Begin of unwind block (FDE at 0xbba0)
0000000000005222         push       r12
0000000000005224         mov        r13, rsi
0000000000005227         push       rbp
0000000000005228         push       rbx
0000000000005229         mov        r12, rdx
000000000000522c         mov        rbx, rdi
000000000000522f         sub        rsp, 0x18
0000000000005233         mov        rax, qword [fs:0x28]
000000000000523c         mov        qword [rsp+0x38+var_30], rax
0000000000005241         xor        eax, eax
0000000000005243         test       rdi, rdi
0000000000005246         je         loc_5360

                     loc_524c:
000000000000524c         xor        ebp, ebp                                    ; CODE XREF=human_options+338, human_options+362
000000000000524e         cmp        byte [rbx], 0x27
0000000000005251         jne        loc_525c

0000000000005253         add        rbx, 0x1
0000000000005257         mov        ebp, 0x4

                     loc_525c:
000000000000525c         lea        rdx, qword [block_size_opts]                ; block_size_opts, CODE XREF=human_options+49
0000000000005263         lea        rsi, qword [block_size_args]                ; block_size_args
000000000000526a         mov        ecx, 0x4
000000000000526f         mov        rdi, rbx
0000000000005272         call       argmatch                                    ; argmatch
0000000000005277         test       eax, eax
0000000000005279         js         loc_52b8

000000000000527b         lea        rdx, qword [block_size_opts]                ; block_size_opts
0000000000005282         cdqe
0000000000005284         mov        qword [r12], 0x1
000000000000528c         or         ebp, dword [rdx+rax*4]
000000000000528f         xor        eax, eax
0000000000005291         mov        dword [r13], ebp

                     loc_5295:
0000000000005295         mov        rcx, qword [rsp+0x38+var_30]                ; CODE XREF=human_options+263, human_options+308, human_options+403, human_options+476
000000000000529a         xor        rcx, qword [fs:0x28]
00000000000052a3         jne        loc_5401

00000000000052a9         add        rsp, 0x18
00000000000052ad         pop        rbx
00000000000052ae         pop        rbp
00000000000052af         pop        r12
00000000000052b1         pop        r13
00000000000052b3         ret
                        ; endp
00000000000052b4         align      8

                     loc_52b8:
00000000000052b8         lea        r8, qword [aEeggkkmmppttyy]                 ; "eEgGkKmMpPtTyYzZ0", CODE XREF=human_options+89
00000000000052bf         xor        edx, edx
00000000000052c1         mov        rsi, rsp
00000000000052c4         mov        rcx, r12
00000000000052c7         mov        rdi, rbx
00000000000052ca         call       xstrtoumax                                  ; xstrtoumax
00000000000052cf         test       eax, eax
00000000000052d1         jne        loc_5318

00000000000052d3         movzx      esi, byte [rbx]
00000000000052d6         lea        edx, dword [rsi-0x30]
00000000000052d9         cmp        dl, 0x9
00000000000052dc         jbe        loc_5308

00000000000052de         mov        rcx, qword [rsp+0x38+var_38]
00000000000052e2         cmp        rbx, rcx
00000000000052e5         jne        loc_52f9

00000000000052e7         jmp        loc_53c0
00000000000052ec         align      16

                     loc_52f0:
00000000000052f0         cmp        rbx, rcx                                    ; CODE XREF=human_options+230
00000000000052f3         je         loc_53c0

                     loc_52f9:
00000000000052f9         add        rbx, 0x1                                    ; CODE XREF=human_options+197
00000000000052fd         movzx      edi, byte [rbx]
0000000000005300         lea        edx, dword [rdi-0x30]
0000000000005303         cmp        dl, 0x9
0000000000005306         ja         loc_52f0

                     loc_5308:
0000000000005308         mov        rdx, qword [r12]                            ; CODE XREF=human_options+188, human_options+429, human_options+450
000000000000530c         mov        dword [r13], ebp
0000000000005310         jmp        loc_5324
0000000000005312         align      8

                     loc_5318:
0000000000005318         mov        rdx, qword [r12]                            ; CODE XREF=human_options+177
000000000000531c         mov        dword [r13], 0x0

                     loc_5324:
0000000000005324         test       rdx, rdx                                    ; CODE XREF=human_options+240
0000000000005327         jne        loc_5295

000000000000532d         lea        rdi, qword [aPosixlycorrect]                ; argument "__name" for method j_getenv, "POSIXLY_CORRECT"
0000000000005334         call       j_getenv                                    ; getenv
0000000000005339         cmp        rax, 0x1
000000000000533d         sbb        rax, rax
0000000000005340         and        eax, 0x200
0000000000005345         add        rax, 0x200
000000000000534b         mov        qword [r12], rax
000000000000534f         mov        eax, 0x4
0000000000005354         jmp        loc_5295
0000000000005359         align      32

                     loc_5360:
0000000000005360         lea        rdi, qword [aBlocksize]                     ; argument "__name" for method j_getenv, "BLOCK_SIZE", CODE XREF=human_options+38
0000000000005367         call       j_getenv                                    ; getenv
000000000000536c         test       rax, rax
000000000000536f         mov        rbx, rax
0000000000005372         jne        loc_524c

0000000000005378         lea        rdi, qword [aBlocksize_a795]                ; argument "__name" for method j_getenv, "BLOCKSIZE"
000000000000537f         call       j_getenv                                    ; getenv
0000000000005384         test       rax, rax
0000000000005387         mov        rbx, rax
000000000000538a         jne        loc_524c

0000000000005390         lea        rdi, qword [aPosixlycorrect]                ; argument "__name" for method j_getenv, "POSIXLY_CORRECT"
0000000000005397         call       j_getenv                                    ; getenv
000000000000539c         test       rax, rax
000000000000539f         je         loc_53ea

00000000000053a1         mov        qword [r12], 0x200
00000000000053a9         xor        eax, eax
00000000000053ab         mov        dword [r13], 0x0
00000000000053b3         jmp        loc_5295
00000000000053b8         align      64

                     loc_53c0:
00000000000053c0         cmp        byte [rcx-1], 0x42                          ; CODE XREF=human_options+199, human_options+211
00000000000053c4         je         loc_53d8

00000000000053c6         or         bpl, 0x80

                     loc_53ca:
00000000000053ca         or         ebp, 0x20                                   ; CODE XREF=human_options+456
00000000000053cd         jmp        loc_5308
00000000000053d2         align      8

                     loc_53d8:
00000000000053d8         or         ebp, 0x180                                  ; CODE XREF=human_options+420
00000000000053de         cmp        byte [rcx-2], 0x69
00000000000053e2         jne        loc_5308

00000000000053e8         jmp        loc_53ca

                     loc_53ea:
00000000000053ea         mov        qword [r12], 0x400                          ; CODE XREF=human_options+383
00000000000053f2         xor        eax, eax
00000000000053f4         mov        dword [r13], 0x0
00000000000053fc         jmp        loc_5295

                     loc_5401:
0000000000005401         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=human_options+131
                        ; endp
0000000000005406         align      16                                          ; End of unwind block (FDE at 0xbba0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     umaxtostr:
0000000000005410         lea        rcx, qword [rsi+0x14]                       ; Begin of unwind block (FDE at 0xbbdc), CODE XREF=dopass+878
0000000000005414         mov        byte [rsi+0x14], 0x0
0000000000005418         movabs     rsi, 0xcccccccccccccccd
0000000000005422         nop        word [rax+rax]

                     loc_5428:
0000000000005428         mov        rax, rdi                                    ; CODE XREF=umaxtostr+60
000000000000542b         sub        rcx, 0x1
000000000000542f         mul        rsi
0000000000005432         shr        rdx, 0x3
0000000000005436         lea        rax, qword [rdx+rdx*4]
000000000000543a         add        rax, rax
000000000000543d         sub        rdi, rax
0000000000005440         add        edi, 0x30
0000000000005443         test       rdx, rdx
0000000000005446         mov        byte [rcx], dil
0000000000005449         mov        rdi, rdx
000000000000544c         jne        loc_5428

000000000000544e         mov        rax, rcx
0000000000005451         ret
                        ; endp
0000000000005452         align      32                                          ; End of unwind block (FDE at 0xbbdc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000005460         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xbbf4), CODE XREF=main+65
0000000000005463         push       rbx
0000000000005464         je         loc_54dd

0000000000005466         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000546b         mov        rbx, rdi
000000000000546e         call       j_strrchr                                   ; strrchr
0000000000005473         test       rax, rax
0000000000005476         je         loc_54cd

0000000000005478         lea        r8, qword [rax+1]
000000000000547c         mov        rdx, r8
000000000000547f         sub        rdx, rbx
0000000000005482         cmp        rdx, 0x6
0000000000005486         jle        loc_54cd

0000000000005488         lea        rsi, qword [rax-6]
000000000000548c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000005493         mov        ecx, 0x7
0000000000005498         rep  cmpsb byte [rsi], byte [rdi]
000000000000549a         seta       dl
000000000000549d         sbb        dl, 0x0
00000000000054a0         test       dl, dl
00000000000054a2         jne        loc_54cd

00000000000054a4         lea        rdi, qword [aLibs+8]                        ; 0xa850
00000000000054ab         mov        ecx, 0x3
00000000000054b0         mov        rsi, r8
00000000000054b3         mov        rbx, r8
00000000000054b6         rep  cmpsb byte [rsi], byte [rdi]
00000000000054b8         seta       dl
00000000000054bb         sbb        dl, 0x0
00000000000054be         test       dl, dl
00000000000054c0         jne        loc_54cd

00000000000054c2         lea        rbx, qword [rax+4]
00000000000054c6         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_54cd:
00000000000054cd         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
00000000000054d4         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
00000000000054db         pop        rbx
00000000000054dc         ret
                        ; endp

                     loc_54dd:
00000000000054dd         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
00000000000054e4         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
00000000000054eb         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
00000000000054f0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
00000000000054f5         call       j_fwrite                                    ; fwrite
00000000000054fa         call       j_abort                                     ; abort
                        ; endp
00000000000054ff         align      256                                         ; End of unwind block (FDE at 0xbbf4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000005500         push       rbp                                         ; Begin of unwind block (FDE at 0xbc14), CODE XREF=sub_5d30+2597, sub_5d30+2619
0000000000005501         push       rbx
0000000000005502         mov        rbp, rdi
0000000000005505         mov        ebx, esi
0000000000005507         sub        rsp, 0x8
000000000000550b         call       locale_charset                              ; locale_charset
0000000000005510         movzx      edx, byte [rax]
0000000000005513         and        edx, 0xffffffdf
0000000000005516         cmp        dl, 0x55
0000000000005519         je         loc_5590

000000000000551b         cmp        dl, 0x47
000000000000551e         je         loc_5540

                     loc_5520:
0000000000005520         lea        rax, qword [aLibs+27]                       ; 0xa863, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000005527         lea        rdx, qword [aLibs+29]                       ; 0xa865
000000000000552e         cmp        ebx, 0x9
0000000000005531         cmovne     rax, rdx
0000000000005535         add        rsp, 0x8
0000000000005539         pop        rbx
000000000000553a         pop        rbp
000000000000553b         ret
                        ; endp
000000000000553c         align      64

                     loc_5540:
0000000000005540         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000005544         and        edx, 0xffffffdf
0000000000005547         cmp        dl, 0x42
000000000000554a         jne        loc_5520

000000000000554c         cmp        byte [rax+2], 0x31
0000000000005550         jne        loc_5520

0000000000005552         cmp        byte [rax+3], 0x38
0000000000005556         jne        loc_5520

0000000000005558         cmp        byte [rax+4], 0x30
000000000000555c         jne        loc_5520

000000000000555e         cmp        byte [rax+5], 0x33
0000000000005562         jne        loc_5520

0000000000005564         cmp        byte [rax+6], 0x30
0000000000005568         jne        loc_5520

000000000000556a         cmp        byte [rax+7], 0x0
000000000000556e         jne        loc_5520

0000000000005570         cmp        byte [rbp], 0x60
0000000000005574         lea        rax, qword [aLibs+20]                       ; 0xa85c
000000000000557b         lea        rdx, qword [aLibs+24]                       ; 0xa860
0000000000005582         cmovne     rax, rdx
0000000000005586         add        rsp, 0x8
000000000000558a         pop        rbx
000000000000558b         pop        rbp
000000000000558c         ret
                        ; endp
000000000000558d         align      16

                     loc_5590:
0000000000005590         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000005594         and        edx, 0xffffffdf
0000000000005597         cmp        dl, 0x54
000000000000559a         jne        loc_5520

000000000000559c         movzx      edx, byte [rax+2]
00000000000055a0         and        edx, 0xffffffdf
00000000000055a3         cmp        dl, 0x46
00000000000055a6         jne        loc_5520

00000000000055ac         cmp        byte [rax+3], 0x2d
00000000000055b0         jne        loc_5520

00000000000055b6         cmp        byte [rax+4], 0x38
00000000000055ba         jne        loc_5520

00000000000055c0         cmp        byte [rax+5], 0x0
00000000000055c4         jne        loc_5520

00000000000055ca         cmp        byte [rbp], 0x60
00000000000055ce         lea        rax, qword [aLibs+12]                       ; 0xa854
00000000000055d5         lea        rdx, qword [aLibs+16]                       ; 0xa858
00000000000055dc         cmovne     rax, rdx
00000000000055e0         add        rsp, 0x8
00000000000055e4         pop        rbx
00000000000055e5         pop        rbp
00000000000055e6         ret
                        ; endp
00000000000055e7         align      16                                          ; End of unwind block (FDE at 0xbc14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
00000000000055f0         push       r15                                         ; Begin of unwind block (FDE at 0xbc58), CODE XREF=sub_5d30+1165, sub_5d30+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
00000000000055f2         push       r14
00000000000055f4         mov        r15d, r8d
00000000000055f7         push       r13
00000000000055f9         push       r12
00000000000055fb         mov        r14, rdi
00000000000055fe         push       rbp
00000000000055ff         push       rbx
0000000000005600         mov        ebx, r9d
0000000000005603         mov        r13, rsi
0000000000005606         mov        rbp, rcx
0000000000005609         and        ebx, 0x2
000000000000560c         sub        rsp, 0xb8
0000000000005613         mov        rax, qword [rsp+0xe8+arg_0]
000000000000561b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000005620         mov        dword [rsp+0xe8+var_E0], r8d
0000000000005625         mov        dword [rsp+0xe8+var_70], r9d
000000000000562a         mov        qword [rsp+0xe8+var_C8], rax
000000000000562f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000005637         mov        qword [rsp+0xe8+var_80], rax
000000000000563c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000005644         mov        qword [rsp+0xe8+var_88], rax
0000000000005649         mov        rax, qword [fs:0x28]
0000000000005652         mov        qword [rsp+0xe8+var_40], rax
000000000000565a         xor        eax, eax
000000000000565c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000005661         cmp        r15d, 0xa
0000000000005665         mov        qword [rsp+0xe8+var_90], rax
000000000000566a         ja         loc_681f

0000000000005670         lea        rcx, qword [switch_table_a8c0]              ; switch_table_a8c0
0000000000005677         mov        edx, r15d
000000000000567a         movsxd     rax, dword [rcx+rdx*4]
000000000000567e         add        rax, rcx
0000000000005681         jmp        rax                                         ; switch statement using table at 0xa8c0, with 11 cases, 0x5683,0x6254,0x62b0,0x6305,0x634a,0x6384,0x642a,0x6464,0x6658

                     loc_5683:
0000000000005683         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_5d30+1318
0000000000005688         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000568d         xor        r12d, r12d
0000000000005690         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005699         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000569e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_56a3:
00000000000056a3         lea        rax, qword [aLibs+29]                       ; 0xa865, CODE XREF=sub_5d30+1876
00000000000056aa         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000056b3         xor        r15d, r15d
00000000000056b6         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000056be         mov        qword [rsp+0xe8+var_A0], rax

                     loc_56c3:
00000000000056c3         xor        r11d, r11d                                  ; CODE XREF=sub_5d30+180, sub_5d30+1400, sub_5d30+1488, sub_5d30+1557, sub_5d30+1615, sub_5d30+1781, sub_5d30+1839, sub_5d30+2408, sub_5d30+2485
00000000000056c6         mov        rax, rbp
00000000000056c9         mov        r8d, r12d
00000000000056cc         mov        rbp, r11
00000000000056cf         mov        r11, rax
00000000000056d2         nop        word [rax+rax]

                     loc_56d8:
00000000000056d8         cmp        r11, rbp                                    ; CODE XREF=sub_57e0+194
00000000000056db         setne      r12b
00000000000056df         cmp        r11, 0xffffffffffffffff
00000000000056e3         jne        loc_56f2

00000000000056e5         mov        rax, qword [rsp+0xe8+var_D8]
00000000000056ea         cmp        byte [rax+rbp], 0x0
00000000000056ee         setne      r12b

                     loc_56f2:
00000000000056f2         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
00000000000056f5         je         loc_5d50

00000000000056fb         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000005700         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000005705         lea        r9, qword [rdi+rbp]
0000000000005709         setne      al
000000000000570c         and        al, byte [rsp+0xe8+var_DB]
0000000000005710         mov        r10d, eax
0000000000005713         je         loc_57c0

0000000000005719         mov        rax, qword [rsp+0xe8+var_D0]
000000000000571e         test       rax, rax
0000000000005721         je         loc_5b50

0000000000005727         cmp        r11, 0xffffffffffffffff
000000000000572b         lea        rbx, qword [rbp+rax]
0000000000005730         jne        loc_5760

0000000000005732         cmp        rax, 0x1
0000000000005736         jbe        loc_5760

0000000000005738         mov        byte [rsp+0xe8+var_B0], r8b
000000000000573d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000005742         mov        qword [rsp+0xe8+var_C0], r9
0000000000005747         call       j_strlen                                    ; strlen
000000000000574c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000005752         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000005758         mov        r11, rax
000000000000575b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_5760:
0000000000005760         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000005763         mov        byte [rsp+0xe8+var_C0], r10b
0000000000005768         ja         loc_5d20

000000000000576e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000005773         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000005778         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000000577b         mov        qword [rsp+0xe8+var_A8], r11
0000000000005780         mov        byte [rsp+0xe8+var_B0], r8b
0000000000005785         mov        qword [rsp+0xe8+var_B8], r9
000000000000578a         call       j_memcmp                                    ; memcmp
000000000000578f         test       eax, eax
0000000000005791         mov        r9, qword [rsp+0xe8+var_B8]
0000000000005796         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000579c         mov        r11, qword [rsp+0xe8+var_A8]
00000000000057a1         jne        loc_5d20

00000000000057a7         cmp        byte [rsp+0xe8+var_D9], 0x0
00000000000057ac         movzx      r10d, byte [rsp+0xe8+var_C0]
00000000000057b2         jne        loc_6735

00000000000057b8         nop        dword [rax+rax]

                     loc_57c0:
00000000000057c0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_5d10+19
00000000000057c4         cmp        bl, 0x7e
00000000000057c7         ja         loc_5ae8

00000000000057cd         lea        rcx, qword [switch_table_a8c0+44]           ; 0xa8ec
00000000000057d4         movzx      edx, bl
00000000000057d7         movsxd     rax, dword [rcx+rdx*4]
00000000000057db         add        rax, rcx
00000000000057de         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_57e0:
00000000000057e0         xor        r10d, r10d
00000000000057e3         cmp        r11, 0x1
00000000000057e7         setne      al
00000000000057ea         cmp        r11, 0xffffffffffffffff
00000000000057ee         jne        loc_57fc

00000000000057f0         mov        rax, qword [rsp+arg_8]
00000000000057f5         cmp        byte [rax+1], 0x0
00000000000057f9         setne      al

                     loc_57fc:
00000000000057fc         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_57e0+14
0000000000005801         sete       dl
0000000000005804         test       al, al
0000000000005806         je         loc_5a58

                     loc_580c:
000000000000580c         xor        r12d, r12d                                  ; CODE XREF=sub_5a50+11
000000000000580f         xor        eax, eax
0000000000005811         nop        dword [rax]
                        ; endp

                     loc_5818:
0000000000005818         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_5a00+50, sub_5ad0+119
000000000000581d         jne        loc_5932

0000000000005823         test       dl, dl
0000000000005825         jne        loc_5932

                     loc_582b:
000000000000582b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_58e0+87
0000000000005830         test       rsi, rsi
0000000000005833         je         loc_5849

0000000000005835         mov        edx, ebx
0000000000005837         shr        dl, 0x5
000000000000583a         movzx      edx, dl
000000000000583d         mov        edx, dword [rsi+rdx*4]
0000000000005840         bt         edx, ebx
0000000000005843         jb         loc_5993

                     loc_5849:
0000000000005849         test       r10b, r10b                                  ; CODE XREF=sub_57e0+83, sub_58e0+93
000000000000584c         jne        loc_5993

0000000000005852         xor        eax, 0x1
0000000000005855         add        rbp, 0x1
0000000000005859         and        eax, r8d

                     loc_585c:
000000000000585c         test       al, al                                      ; CODE XREF=sub_5d30+936
000000000000585e         je         loc_5880

0000000000005860         cmp        r13, r15
0000000000005863         jbe        loc_586a

0000000000005865         mov        byte [r14+r15], 0x27

                     loc_586a:
000000000000586a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_57e0+131
000000000000586e         cmp        r13, rax
0000000000005871         jbe        loc_5879

0000000000005873         mov        byte [r14+r15+1], 0x27

                     loc_5879:
0000000000005879         add        r15, 0x2                                    ; CODE XREF=sub_57e0+145
000000000000587d         xor        r8d, r8d

                     loc_5880:
0000000000005880         cmp        r15, r13                                    ; CODE XREF=sub_57e0+126, sub_58e0+275, sub_5d30+869
0000000000005883         jae        loc_5889

0000000000005885         mov        byte [r14+r15], bl

                     loc_5889:
0000000000005889         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_57e0+163
000000000000588e         add        r15, 0x1
0000000000005892         mov        eax, 0x0
0000000000005897         test       r12b, r12b
000000000000589a         cmove      edi, eax
000000000000589d         mov        byte [rsp+0xe8+var_DA], dil
00000000000058a2         jmp        loc_56d8
00000000000058a7         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_58b0:
00000000000058b0         xor        r10d, r10d
00000000000058b3         mov        eax, dword [rsp+arg_0]
00000000000058b7         cmp        eax, 0x2
00000000000058ba         je         loc_5e78

00000000000058c0         cmp        eax, 0x5
00000000000058c3         je         loc_5e38

00000000000058c9         cmp        eax, 0x2
00000000000058cc         mov        ebx, 0x3f
00000000000058d1         sete       dl
00000000000058d4         xor        r12d, r12d
00000000000058d7         xor        eax, eax
00000000000058d9         jmp        sub_57e0+56
                        ; endp
00000000000058de         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_58e0:
00000000000058e0         xor        r10d, r10d
00000000000058e3         cmp        dword [rsp+arg_0], 0x2
00000000000058e8         je         loc_5df0

00000000000058ee         mov        byte [rsp+arg_74], r12b
00000000000058f3         xor        edx, edx
00000000000058f5         xor        eax, eax
00000000000058f7         mov        ebx, 0x27
00000000000058fc         jmp        sub_57e0+56
                        ; endp
0000000000005901         nop        dword [rax]
0000000000005908         mov        edx, 0x9
000000000000590d         mov        ebx, 0x74

                     loc_5912:
0000000000005912         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_5aa0+10, sub_5b90+37, sub_5cd0+53
0000000000005917         sete       al
000000000000591a         and        al, byte [rsp+arg_7]
000000000000591e         jne        sub_5a50+30

0000000000005924         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_58e0+114
0000000000005929         jne        loc_5990

                     loc_592b:
000000000000592b         mov        ebx, edx                                    ; CODE XREF=sub_5a00+18
000000000000592d         xor        r12d, r12d
0000000000005930         xor        eax, eax
                        ; endp

                     loc_5932:
0000000000005932         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_57e0+61, sub_57e0+69
0000000000005937         jne        loc_582b

000000000000593d         jmp        loc_5849
0000000000005942         nop        word [rax+rax]
0000000000005948         mov        edx, 0x8
000000000000594d         mov        ebx, 0x62
0000000000005952         jmp        sub_58e0+68
0000000000005954         nop        dword [rax]
0000000000005958         cmp        dword [rsp+8], 0x2
000000000000595d         je         sub_5d30                                    ; sub_5d30
0000000000005963         cmp        byte [rsp+0xd], 0x0
0000000000005968         je         sub_5b70+16

                     loc_596e:
000000000000596e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_5b70+8
0000000000005973         je         loc_5b80

0000000000005979         cmp        qword [rsp+arg_10], 0x0
000000000000597f         jne        loc_5d3b

0000000000005985         mov        ebx, 0x5c
000000000000598a         nop        word [rax+rax]
                        ; endp

                     loc_5990:
0000000000005990         xor        r12d, r12d                                  ; CODE XREF=sub_58e0+73, sub_5cd0+29
                        ; endp

                     loc_5993:
0000000000005993         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_57e0+99, sub_57e0+108
0000000000005998         sete       dl
000000000000599b         cmp        byte [rsp+0xe8+var_D9], 0x0
00000000000059a0         mov        eax, edx
00000000000059a2         jne        loc_61f8

00000000000059a8         mov        eax, r8d
00000000000059ab         xor        eax, 0x1
00000000000059ae         and        al, dl
00000000000059b0         je         loc_59e1

00000000000059b2         cmp        r13, r15
00000000000059b5         jbe        loc_59bc

00000000000059b7         mov        byte [r14+r15], 0x27

                     loc_59bc:
00000000000059bc         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_58e0+213
00000000000059c0         cmp        r13, rdx
00000000000059c3         jbe        loc_59cb

00000000000059c5         mov        byte [r14+r15+1], 0x24

                     loc_59cb:
00000000000059cb         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_58e0+227
00000000000059cf         cmp        r13, rdx
00000000000059d2         jbe        loc_59da

00000000000059d4         mov        byte [r14+r15+2], 0x27

                     loc_59da:
00000000000059da         add        r15, 0x3                                    ; CODE XREF=sub_58e0+242
00000000000059de         mov        r8d, eax

                     loc_59e1:
00000000000059e1         cmp        r13, r15                                    ; CODE XREF=sub_58e0+208
00000000000059e4         jbe        loc_59eb

00000000000059e6         mov        byte [r14+r15], 0x5c

                     loc_59eb:
00000000000059eb         add        r15, 0x1                                    ; CODE XREF=sub_58e0+260
00000000000059ef         add        rbp, 0x1
00000000000059f3         jmp        loc_5880
00000000000059f8         align      512


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_5a00:
0000000000005a00         cmp        byte [rsp+arg_5], 0x0
0000000000005a05         jne        loc_5bd3

0000000000005a0b         xor        edx, edx
0000000000005a0d         test       byte [rsp+arg_70], 0x1
0000000000005a12         je         loc_592b

0000000000005a18         add        rbp, 0x1
0000000000005a1c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000005a21         nop        dword [rax]
0000000000005a28         cmp        dword [rsp+8], 0x2
0000000000005a2d         sete       dl
0000000000005a30         xor        eax, eax
0000000000005a32         jmp        sub_57e0+56
0000000000005a37         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5a40:
0000000000005a40         mov        edx, 0x7
0000000000005a45         mov        ebx, 0x61
0000000000005a4a         jmp        sub_58e0+68
                        ; endp
0000000000005a4f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5a50:
0000000000005a50         cmp        dword [rsp+8], 0x2
0000000000005a55         sete       dl
                        ; endp

                     loc_5a58:
0000000000005a58         test       rbp, rbp                                    ; CODE XREF=sub_57e0+38, sub_5c70+35
0000000000005a5b         jne        loc_580c

0000000000005a61         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_5ca0+43
0000000000005a66         and        al, dl
0000000000005a68         je         sub_57e0+56

0000000000005a6e         mov        rbp, r11
0000000000005a71         mov        dword [rsp+arg_0], 0x2
0000000000005a79         jmp        sub_5d30+1097
                        ; endp
0000000000005a7e         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_5a80:
0000000000005a80         cmp        dword [rsp+arg_0], 0x2
0000000000005a85         sete       dl
0000000000005a88         xor        r12d, r12d
0000000000005a8b         jmp        sub_5a50+17
                        ; endp
0000000000005a8d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_5a90:
0000000000005a90         cmp        dword [rsp+arg_0], 0x2
0000000000005a95         mov        ebx, 0x20
0000000000005a9a         sete       dl
0000000000005a9d         jmp        sub_5a50+17
                        ; endp
0000000000005a9f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_5aa0:
0000000000005aa0         mov        edx, 0xd
0000000000005aa5         mov        ebx, 0x72
0000000000005aaa         jmp        loc_5912
0000000000005aaf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5ab0:
0000000000005ab0         mov        edx, 0xc
0000000000005ab5         mov        ebx, 0x66
0000000000005aba         jmp        sub_58e0+68
                        ; endp
0000000000005abf         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5ac0:
0000000000005ac0         mov        edx, 0xb
0000000000005ac5         mov        ebx, 0x76
0000000000005aca         jmp        sub_58e0+68
                        ; endp
0000000000005acf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5ad0:
0000000000005ad0         mov        edx, 0xa
0000000000005ad5         mov        ebx, 0x6e
0000000000005ada         jmp        sub_58e0+50
                        ; endp
0000000000005adf         align      32

                     loc_5ae0:
0000000000005ae0         xor        r10d, r10d                                  ; CODE XREF=sub_5ad0+135
0000000000005ae3         nop        dword [rax+rax]

                     loc_5ae8:
0000000000005ae8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000005aee         jne        loc_5e98

0000000000005af4         mov        qword [rsp+0xe8+var_B0], r11
0000000000005af9         mov        byte [rsp+0xe8+var_B8], r8b
0000000000005afe         mov        byte [rsp+0xe8+var_C0], r10b
0000000000005b03         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000005b08         mov        rcx, qword [rax]
0000000000005b0b         movzx      edx, bl
0000000000005b0e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000005b14         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000005b1a         mov        r11, qword [rsp+0xe8+var_B0]
0000000000005b1f         mov        edi, 0x1
0000000000005b24         movzx      eax, word [rcx+rdx*2]
0000000000005b28         and        ax, 0x4000
0000000000005b2c         setne      r12b
0000000000005b30         sete       al
0000000000005b33         and        al, byte [rsp+0xe8+var_DB]

                     loc_5b37:
0000000000005b37         test       al, al                                      ; CODE XREF=sub_5d30+2221
0000000000005b39         jne        loc_64d1

0000000000005b3f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000005b44         sete       dl
0000000000005b47         jmp        loc_5818
0000000000005b4c         align      16

                     loc_5b50:
0000000000005b50         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000005b54         cmp        bl, 0x7e
0000000000005b57         ja         loc_5ae0

0000000000005b59         lea        rcx, qword [switch_table_a8c0+552]          ; 0xaae8
0000000000005b60         movzx      edx, bl
0000000000005b63         movsxd     rax, dword [rcx+rdx*4]
0000000000005b67         add        rax, rcx
0000000000005b6a         jmp        rax
                        ; endp
0000000000005b6c         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_5b70:
0000000000005b70         xor        r10d, r10d
0000000000005b73         cmp        byte [rsp+arg_5], 0x0
0000000000005b78         jne        loc_596e

0000000000005b7e         nop

                     loc_5b80:
0000000000005b80         mov        edx, 0x5c                                   ; CODE XREF=sub_58e0+136, sub_58e0+147
0000000000005b85         mov        ebx, 0x5c
0000000000005b8a         jmp        sub_58e0+68
                        ; endp
0000000000005b8f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5b90:
0000000000005b90         mov        edx, 0xc
0000000000005b95         xor        r10d, r10d
0000000000005b98         mov        ebx, 0x66
0000000000005b9d         jmp        sub_58e0+68
                        ; endp
0000000000005ba2         nop        word [rax+rax]
0000000000005ba8         mov        edx, 0xa
0000000000005bad         xor        r10d, r10d
0000000000005bb0         mov        ebx, 0x6e
0000000000005bb5         jmp        sub_58e0+50
0000000000005bba         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5bc0:
0000000000005bc0         mov        ebx, 0x61
0000000000005bc5         jmp        sub_58e0+176
                        ; endp
0000000000005bca         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5bd0:
0000000000005bd0         xor        r10d, r10d
                        ; endp

                     loc_5bd3:
0000000000005bd3         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_5a00+5
0000000000005bd8         sete       dl
0000000000005bdb         cmp        byte [rsp+arg_7], 0x0
0000000000005be0         jne        loc_677a

0000000000005be6         mov        eax, r8d
0000000000005be9         mov        rcx, r15
0000000000005bec         xor        eax, 0x1
0000000000005bef         and        al, dl
0000000000005bf1         je         loc_5c20

0000000000005bf3         cmp        r13, r15
0000000000005bf6         jbe        loc_5bfd

0000000000005bf8         mov        byte [r14+r15], 0x27

                     loc_5bfd:
0000000000005bfd         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_5bd0+38
0000000000005c01         cmp        r13, rcx
0000000000005c04         jbe        loc_5c0c

0000000000005c06         mov        byte [r14+r15+1], 0x24

                     loc_5c0c:
0000000000005c0c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_5bd0+52
0000000000005c10         cmp        r13, rcx
0000000000005c13         ja         loc_6249

                     loc_5c19:
0000000000005c19         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_5d30+1311
0000000000005c1d         mov        r8d, eax

                     loc_5c20:
0000000000005c20         cmp        r13, rcx                                    ; CODE XREF=sub_5bd0+33
0000000000005c23         jbe        loc_5c2a

0000000000005c25         mov        byte [r14+rcx], 0x5c

                     loc_5c2a:
0000000000005c2a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_5bd0+83
0000000000005c2f         lea        r15, qword [rcx+1]
0000000000005c33         je         loc_6239

0000000000005c39         lea        rax, qword [rbp+1]
0000000000005c3d         cmp        rax, r11
0000000000005c40         jae        loc_5c5b

0000000000005c42         mov        rax, qword [rsp+arg_8]
0000000000005c47         movzx      eax, byte [rax+rbp+1]
0000000000005c4c         mov        byte [rsp+arg_20], al
0000000000005c50         sub        eax, 0x30
0000000000005c53         cmp        al, 0x9
0000000000005c55         jbe        loc_6489

                     loc_5c5b:
0000000000005c5b         mov        eax, r12d                                   ; CODE XREF=sub_5bd0+112
0000000000005c5e         mov        ebx, 0x30
0000000000005c63         xor        r12d, r12d
0000000000005c66         jmp        sub_57e0+56
                        ; endp
0000000000005c6b         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_5c70:
0000000000005c70         cmp        dword [rsp+arg_0], 0x2
0000000000005c75         mov        r12d, r10d
0000000000005c78         sete       dl
0000000000005c7b         xor        r10d, r10d
0000000000005c7e         xor        eax, eax
0000000000005c80         jmp        sub_57e0+56
                        ; endp
0000000000005c85         nop        dword [rax]
0000000000005c88         cmp        dword [rsp+8], 0x2
0000000000005c8d         sete       dl
0000000000005c90         xor        r10d, r10d
0000000000005c93         jmp        sub_5a50+8
0000000000005c98         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5ca0:
0000000000005ca0         cmp        dword [rsp+8], 0x2
0000000000005ca5         sete       dl
0000000000005ca8         xor        r10d, r10d
0000000000005cab         xor        r12d, r12d
0000000000005cae         jmp        sub_5a50+17
                        ; endp
0000000000005cb3         nop        dword [rax+rax]
0000000000005cb8         cmp        dword [rsp+8], 0x2
0000000000005cbd         mov        r12d, r10d
0000000000005cc0         mov        ebx, 0x20
0000000000005cc5         sete       dl
0000000000005cc8         xor        r10d, r10d
0000000000005ccb         jmp        sub_5a50+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5cd0:
0000000000005cd0         mov        edx, 0xd
0000000000005cd5         xor        r10d, r10d
0000000000005cd8         mov        ebx, 0x72
0000000000005cdd         jmp        sub_58e0+50
                        ; endp
0000000000005ce2         nop        word [rax+rax]
0000000000005ce8         mov        ebx, 0x76
0000000000005ced         jmp        sub_58e0+176
0000000000005cf2         nop        word [rax+rax]
0000000000005cf8         mov        edx, 0x9
0000000000005cfd         xor        r10d, r10d
0000000000005d00         mov        ebx, 0x74
0000000000005d05         jmp        sub_58e0+50
0000000000005d0a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5d10:
0000000000005d10         mov        ebx, 0x62
0000000000005d15         jmp        sub_58e0+176
                        ; endp
0000000000005d1a         nop        word [rax+rax]

                     loc_5d20:
0000000000005d20         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000005d23         jmp        loc_57c0
0000000000005d28         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_5d30:
0000000000005d30         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_58e0+125
0000000000005d35         jne        sub_5d30+2416
                        ; endp

                     loc_5d3b:
0000000000005d3b         add        rbp, 0x1                                    ; CODE XREF=sub_58e0+159
0000000000005d3f         mov        eax, r8d
0000000000005d42         xor        r12d, r12d
0000000000005d45         mov        ebx, 0x5c
0000000000005d4a         jmp        sub_57e0+124
                        ; endp
0000000000005d4f         align      16

                     loc_5d50:
0000000000005d50         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000005d55         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000005d5a         mov        r12d, r8d
0000000000005d5d         mov        rbp, r11
0000000000005d60         sete       dl
0000000000005d63         mov        eax, ebx
0000000000005d65         test       r15, r15
0000000000005d68         sete       cl
0000000000005d6b         and        eax, edx
0000000000005d6d         and        al, cl
0000000000005d6f         jne        loc_67d6

0000000000005d75         mov        eax, ebx
0000000000005d77         xor        eax, 0x1
0000000000005d7a         and        dl, al
0000000000005d7c         je         loc_66ec

0000000000005d82         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000005d87         je         loc_66ea

0000000000005d8d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000005d92         jne        loc_678d

0000000000005d98         test       r13, r13
0000000000005d9b         sete       al
0000000000005d9e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000005da4         setne      dl
0000000000005da7         and        al, dl
0000000000005da9         je         loc_67cc

0000000000005daf         mov        r13, qword [rsp+0xe8+var_98]

                     loc_5db4:
0000000000005db4         lea        rbx, qword [aLibs+29]                       ; 0xa865, CODE XREF=sub_5d30+2781
0000000000005dbb         mov        byte [r14], 0x27
0000000000005dbf         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000005dc7         mov        r15d, 0x1
0000000000005dcd         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005dd6         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000005ddb         mov        qword [rsp+0xe8+var_A0], rbx
0000000000005de0         mov        byte [rsp+0xe8+var_6C], al
0000000000005de4         jmp        loc_56c3
0000000000005de9         align      16

                     loc_5df0:
0000000000005df0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_58e0+8
0000000000005df5         jne        sub_5d30+2416

0000000000005dfb         test       r13, r13
0000000000005dfe         je         loc_6200

0000000000005e04         xor        edx, edx
0000000000005e06         cmp        qword [rsp+arg_48], 0x0
0000000000005e0c         jne        loc_6200

                     loc_5e12:
0000000000005e12         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_5d30+1284, sub_5d30+2794
0000000000005e17         add        r15, 0x3
0000000000005e1b         xor        eax, eax
0000000000005e1d         mov        byte [rsp+arg_74], r12b
0000000000005e22         xor        r8d, r8d
0000000000005e25         mov        r13, rdx
0000000000005e28         mov        ebx, 0x27
0000000000005e2d         jmp        sub_57e0+105
                        ; endp
0000000000005e32         align      8

                     loc_5e38:
0000000000005e38         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_58b0+19
0000000000005e3d         je         loc_5e60

0000000000005e3f         lea        rcx, qword [rbp+2]
0000000000005e43         cmp        rcx, r11
0000000000005e46         jae        loc_5e60

0000000000005e48         mov        rax, qword [rsp+arg_8]
0000000000005e4d         cmp        byte [rax+rbp+1], 0x3f
0000000000005e52         je         loc_65e2

0000000000005e58         nop        dword [rax+rax]

                     loc_5e60:
0000000000005e60         xor        edx, edx                                    ; CODE XREF=sub_5d30+269, sub_5d30+278, sub_5d30+2233, sub_5d30+2253
0000000000005e62         xor        r12d, r12d
0000000000005e65         xor        eax, eax
0000000000005e67         mov        ebx, 0x3f
0000000000005e6c         jmp        sub_57e0+56
                        ; endp
0000000000005e71         align      8

                     loc_5e78:
0000000000005e78         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_58b0+10
0000000000005e7d         jne        loc_66a0

0000000000005e83         xor        r12d, r12d
0000000000005e86         xor        eax, eax
0000000000005e88         mov        ebx, 0x3f
0000000000005e8d         jmp        sub_57e0+105
                        ; endp
0000000000005e92         align      8

                     loc_5e98:
0000000000005e98         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_5ad0+30
0000000000005ea0         cmp        r11, 0xffffffffffffffff
0000000000005ea4         mov        qword [rsp+0xe8+var_48], 0x0
0000000000005eb0         mov        qword [rsp+0xe8+var_C0], rax
0000000000005eb5         jne        loc_5ee4

0000000000005eb7         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
0000000000005ebc         mov        byte [rsp+0xe8+var_A8], r8b
0000000000005ec1         mov        byte [rsp+0xe8+var_B0], r10b
0000000000005ec6         mov        qword [rsp+0xe8+var_B8], r9
0000000000005ecb         call       j_strlen                                    ; strlen
0000000000005ed0         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000005ed6         movzx      r10d, byte [rsp+0xe8+var_B0]
0000000000005edc         mov        r11, rax
0000000000005edf         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_5ee4:
0000000000005ee4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_5d30+389
0000000000005eec         xor        ecx, ecx
0000000000005eee         mov        byte [rsp+0xe8+var_6A], bl
0000000000005ef2         mov        byte [rsp+0xe8+var_6B], r8b
0000000000005ef7         mov        rbx, rcx
0000000000005efa         mov        qword [rsp+0xe8+var_60], r9
0000000000005f02         mov        qword [rsp+0xe8+var_B0], rax
0000000000005f07         mov        byte [rsp+0xe8+var_69], r10b
0000000000005f0c         mov        qword [rsp+0xe8+var_68], r15
0000000000005f14         mov        qword [rsp+0xe8+var_A8], r14
0000000000005f19         mov        qword [rsp+0xe8+var_78], r13
0000000000005f1e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_5f23:
0000000000005f23         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_5d30+623
0000000000005f28         lea        r14, qword [rbp+rbx]
0000000000005f2d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000005f32         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000005f37         mov        rdi, qword [rsp+0xe8+var_B0]
0000000000005f3c         lea        r13, qword [rax+r14]
0000000000005f40         sub        rdx, r14
0000000000005f43         mov        rsi, r13
0000000000005f46         call       rpl_mbrtowc                                 ; rpl_mbrtowc
0000000000005f4b         test       rax, rax
0000000000005f4e         mov        r15, rax
0000000000005f51         je         loc_5fa1

0000000000005f53         cmp        rax, 0xffffffffffffffff
0000000000005f57         je         loc_6575

0000000000005f5d         cmp        rax, 0xfffffffffffffffe
0000000000005f61         je         loc_6501

0000000000005f67         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000005f6c         sete       al
0000000000005f6f         and        al, byte [rsp+0xe8+var_D9]
0000000000005f73         jne        loc_6110

                     loc_5f79:
0000000000005f79         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_5d30+996, sub_5d30+1031
0000000000005f80         call       j_iswprint                                  ; iswprint
0000000000005f85         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
0000000000005f8a         test       eax, eax
0000000000005f8c         mov        eax, 0x0
0000000000005f91         cmove      r12d, eax
0000000000005f95         add        rbx, r15
0000000000005f98         call       j_mbsinit                                   ; mbsinit
0000000000005f9d         test       eax, eax
0000000000005f9f         je         loc_5f23

                     loc_5fa1:
0000000000005fa1         mov        edx, r12d                                   ; CODE XREF=sub_5d30+545
0000000000005fa4         mov        rdi, rbx
0000000000005fa7         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000005fad         xor        edx, 0x1
0000000000005fb0         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000005fb5         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000005fbb         and        dl, byte [rsp+0xe8+var_DB]
0000000000005fbf         mov        r15, qword [rsp+0xe8+var_68]
0000000000005fc7         mov        r14, qword [rsp+0xe8+var_A8]
0000000000005fcc         mov        r13, qword [rsp+0xe8+var_78]
0000000000005fd1         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_5fd6:
0000000000005fd6         cmp        rdi, 0x1                                    ; CODE XREF=sub_5d30+2112, sub_5d30+2168
0000000000005fda         jbe        loc_65db

                     loc_5fe0:
0000000000005fe0         mov        rcx, rdi                                    ; CODE XREF=sub_5d30+1961
0000000000005fe3         xor        esi, esi
0000000000005fe5         movzx      r9d, byte [rsp+0xe8+var_D9]
0000000000005feb         add        rcx, rbp
0000000000005fee         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000005ff3         jmp        loc_60ae
0000000000005ff8         align      8192

                     loc_6000:
0000000000006000         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_5d30+896
0000000000006005         sete       al
0000000000006008         test       r9b, r9b
000000000000600b         jne        loc_64c0

0000000000006011         mov        esi, r8d
0000000000006014         xor        esi, 0x1
0000000000006017         and        al, sil
000000000000601a         je         loc_604b

000000000000601c         cmp        r13, r15
000000000000601f         jbe        loc_6026

0000000000006021         mov        byte [r14+r15], 0x27

                     loc_6026:
0000000000006026         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_5d30+751
000000000000602a         cmp        r13, rsi
000000000000602d         jbe        loc_6035

000000000000602f         mov        byte [r14+r15+1], 0x24

                     loc_6035:
0000000000006035         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_5d30+765
0000000000006039         cmp        r13, rsi
000000000000603c         jbe        loc_6044

000000000000603e         mov        byte [r14+r15+2], 0x27

                     loc_6044:
0000000000006044         add        r15, 0x3                                    ; CODE XREF=sub_5d30+780
0000000000006048         mov        r8d, eax

                     loc_604b:
000000000000604b         cmp        r13, r15                                    ; CODE XREF=sub_5d30+746
000000000000604e         jbe        loc_6055

0000000000006050         mov        byte [r14+r15], 0x5c

                     loc_6055:
0000000000006055         lea        rax, qword [r15+1]                          ; CODE XREF=sub_5d30+798
0000000000006059         cmp        r13, rax
000000000000605c         jbe        loc_606b

000000000000605e         mov        eax, ebx
0000000000006060         shr        al, 0x6
0000000000006063         add        eax, 0x30
0000000000006066         mov        byte [r14+r15+1], al

                     loc_606b:
000000000000606b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_5d30+812
000000000000606f         cmp        r13, rax
0000000000006072         jbe        loc_6084

0000000000006074         mov        eax, ebx
0000000000006076         shr        al, 0x3
0000000000006079         and        eax, 0x7
000000000000607c         add        eax, 0x30
000000000000607f         mov        byte [r14+r15+2], al

                     loc_6084:
0000000000006084         and        ebx, 0x7                                    ; CODE XREF=sub_5d30+834
0000000000006087         add        rbp, 0x1
000000000000608b         add        r15, 0x3
000000000000608f         add        ebx, 0x30
0000000000006092         cmp        rbp, rcx
0000000000006095         jae        loc_5880

000000000000609b         mov        esi, edx

                     loc_609d:
000000000000609d         cmp        r13, r15                                    ; CODE XREF=sub_5d30+985, sub_5d30+1969
00000000000060a0         jbe        loc_60a6

00000000000060a2         mov        byte [r14+r15], bl

                     loc_60a6:
00000000000060a6         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_5d30+880
00000000000060aa         add        r15, 0x1

                     loc_60ae:
00000000000060ae         test       dl, dl                                      ; CODE XREF=sub_5d30+707
00000000000060b0         jne        loc_6000

00000000000060b6         mov        eax, esi
00000000000060b8         xor        eax, 0x1
00000000000060bb         and        eax, r8d
00000000000060be         test       r10b, r10b
00000000000060c1         je         loc_60d1

00000000000060c3         cmp        r13, r15
00000000000060c6         jbe        loc_60cd

00000000000060c8         mov        byte [r14+r15], 0x5c

                     loc_60cd:
00000000000060cd         add        r15, 0x1                                    ; CODE XREF=sub_5d30+918

                     loc_60d1:
00000000000060d1         add        rbp, 0x1                                    ; CODE XREF=sub_5d30+913
00000000000060d5         cmp        rbp, rcx
00000000000060d8         jae        loc_585c

00000000000060de         test       al, al
00000000000060e0         je         loc_64de

00000000000060e6         cmp        r13, r15
00000000000060e9         jbe        loc_60f0

00000000000060eb         mov        byte [r14+r15], 0x27

                     loc_60f0:
00000000000060f0         lea        rax, qword [r15+1]                          ; CODE XREF=sub_5d30+953
00000000000060f4         cmp        r13, rax
00000000000060f7         jbe        loc_60ff

00000000000060f9         mov        byte [r14+r15+1], 0x27

                     loc_60ff:
00000000000060ff         add        r15, 0x2                                    ; CODE XREF=sub_5d30+967
0000000000006103         xor        r10d, r10d
0000000000006106         xor        r8d, r8d
0000000000006109         jmp        loc_609d
000000000000610b         align      16

                     loc_6110:
0000000000006110         cmp        r15, 0x1                                    ; CODE XREF=sub_5d30+579
0000000000006114         je         loc_5f79

000000000000611a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000611f         lea        rcx, qword [rdi+r15]
0000000000006123         lea        rdx, qword [rdi+r14+1]
0000000000006128         lea        r8, qword [rcx+r14]
000000000000612c         jmp        loc_613d
000000000000612e         align      16

                     loc_6130:
0000000000006130         add        rdx, 0x1                                    ; CODE XREF=sub_5d30+1046, sub_5d30+1072
0000000000006134         cmp        r8, rdx
0000000000006137         je         loc_5f79

                     loc_613d:
000000000000613d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_5d30+1020
0000000000006140         sub        ecx, 0x5b
0000000000006143         cmp        cl, 0x21
0000000000006146         ja         loc_6130

0000000000006148         mov        esi, 0x1
000000000000614d         shl        rsi, cl
0000000000006150         mov        rcx, rsi
0000000000006153         movabs     rsi, 0x20000002b
000000000000615d         test       rcx, rsi
0000000000006160         je         loc_6130

0000000000006162         mov        r14, qword [rsp+0xe8+var_A8]
0000000000006167         mov        r13, qword [rsp+0xe8+var_78]
000000000000616c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000006171         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_6179:
0000000000006179         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_5d30+1227, sub_5d30+1948, sub_5d30+2585, sub_5d30+2734
000000000000617e         je         loc_6190

0000000000006180         test       al, al
0000000000006182         mov        eax, 0x4
0000000000006187         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000618c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_6190:
0000000000006190         sub        rsp, 0x8                                    ; CODE XREF=sub_5d30+1102
0000000000006194         mov        rcx, rbp
0000000000006197         mov        rsi, r13
000000000000619a         push       qword [rsp+0xf0+var_88]
000000000000619e         push       qword [rsp+0xf8+var_80]
00000000000061a2         mov        rdi, r14
00000000000061a5         push       0x0
00000000000061a7         mov        r9d, dword [rsp+0x108+var_70]
00000000000061af         mov        r8d, dword [rsp+0x108+var_E0]
00000000000061b4         mov        rdx, qword [rsp+0x108+var_D8]
00000000000061b9         and        r9d, 0xfffffffd
00000000000061bd         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000061c2         add        rsp, 0x20
00000000000061c6         mov        r15, rax

                     loc_61c9:
00000000000061c9         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_5d30+2549, sub_5d30+2560, sub_5d30+2711
00000000000061d1         xor        rbx, qword [fs:0x28]
00000000000061da         mov        rax, r15
00000000000061dd         jne        loc_67e3

00000000000061e3         add        rsp, 0xb8
00000000000061ea         pop        rbx
00000000000061eb         pop        rbp
00000000000061ec         pop        r12
00000000000061ee         pop        r13
00000000000061f0         pop        r14
00000000000061f2         pop        r15
00000000000061f4         ret
                        ; endp
00000000000061f5         align      8

                     loc_61f8:
00000000000061f8         mov        rbp, r11                                    ; CODE XREF=sub_58e0+194
00000000000061fb         jmp        loc_6179

                     loc_6200:
0000000000006200         cmp        r13, r15                                    ; CODE XREF=sub_5d30+206, sub_5d30+220
0000000000006203         jbe        loc_620a

0000000000006205         mov        byte [r14+r15], 0x27

                     loc_620a:
000000000000620a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_5d30+1235
000000000000620e         cmp        r13, rax
0000000000006211         jbe        loc_6219

0000000000006213         mov        byte [r14+r15+1], 0x5c

                     loc_6219:
0000000000006219         lea        rax, qword [r15+2]                          ; CODE XREF=sub_5d30+1249
000000000000621d         cmp        r13, rax
0000000000006220         jbe        loc_6812

0000000000006226         mov        rdx, r13
0000000000006229         mov        byte [r14+r15+2], 0x27
000000000000622f         mov        r13, qword [rsp+arg_48]
0000000000006234         jmp        loc_5e12

                     loc_6239:
0000000000006239         mov        eax, r12d                                   ; CODE XREF=sub_5bd0+99
000000000000623c         mov        ebx, 0x30
0000000000006241         xor        r12d, r12d
0000000000006244         jmp        sub_57e0+105
                        ; endp

                     loc_6249:
0000000000006249         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_5bd0+67
000000000000624f         jmp        loc_5c19

                     loc_6254:
0000000000006254         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000006256         jne        loc_5683

000000000000625c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_6261:
0000000000006261         test       r13, r13                                    ; CODE XREF=sub_5d30+2749
0000000000006264         jne        loc_67fa

000000000000626a         lea        rax, qword [aLibs+29]                       ; 0xa865
0000000000006271         mov        qword [rsp+0xe8+var_98], 0x0
000000000000627a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000627f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006284         xor        r12d, r12d
0000000000006287         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000628c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000006295         mov        qword [rsp+0xe8+var_A0], rax
000000000000629a         mov        r15d, 0x1
00000000000062a0         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000062a8         jmp        loc_56c3
00000000000062ad         align      16

                     loc_62b0:
00000000000062b0         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
00000000000062b2         jne        loc_66ad

00000000000062b8         test       r13, r13
00000000000062bb         je         loc_64e6

00000000000062c1         mov        byte [r14], 0x22
00000000000062c5         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000062ca         xor        r12d, r12d
00000000000062cd         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000062d2         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_62db:
00000000000062db         lea        rax, qword [aLibs+27]                       ; 0xa863, CODE XREF=sub_5d30+1996
00000000000062e2         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000062e7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000062ec         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000062f5         mov        r15d, 0x1
00000000000062fb         mov        qword [rsp+0xe8+var_A0], rax
0000000000006300         jmp        loc_56c3

                     loc_6305:
0000000000006305         lea        rax, qword [aLibs+27]                       ; case 6, 0xa863, CODE XREF=quotearg_buffer_restyled+145
000000000000630c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000006311         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006316         xor        r12d, r12d
0000000000006319         mov        qword [rsp+0xe8+var_98], 0x0
0000000000006322         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000006327         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000632c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000006335         xor        r15d, r15d
0000000000006338         mov        qword [rsp+0xe8+var_A0], rax
000000000000633d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000006345         jmp        loc_56c3

                     loc_634a:
000000000000634a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000634f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006354         xor        r12d, r12d
0000000000006357         mov        qword [rsp+0xe8+var_98], 0x0
0000000000006360         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000006365         xor        r15d, r15d
0000000000006368         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000636d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000006376         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000637f         jmp        loc_56c3

                     loc_6384:
0000000000006384         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000006389         je         loc_63e1

000000000000638b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0xa867
0000000000006392         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006394         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006399         call       j_dcgettext                                 ; dcgettext
000000000000639e         mov        rcx, rax
00000000000063a1         mov        qword [rsp+0xe8+var_80], rax
00000000000063a6         lea        rax, qword [aLibs+31]                       ; 0xa867
00000000000063ad         cmp        rcx, rax
00000000000063b0         je         loc_674e

                     loc_63b6:
00000000000063b6         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0xa865, CODE XREF=sub_5d30+2607
00000000000063bd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000063bf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000063c4         call       j_dcgettext                                 ; dcgettext
00000000000063c9         mov        rcx, rax
00000000000063cc         mov        qword [rsp+0xe8+var_88], rax
00000000000063d1         lea        rax, qword [aLibs+29]                       ; 0xa865
00000000000063d8         cmp        rcx, rax
00000000000063db         je         loc_6764

                     loc_63e1:
00000000000063e1         xor        r15d, r15d                                  ; CODE XREF=sub_5d30+1625, sub_5d30+2629
00000000000063e4         test       ebx, ebx
00000000000063e6         je         loc_65ad

                     loc_63ec:
00000000000063ec         test       ebx, ebx                                    ; CODE XREF=sub_5d30+2183, sub_5d30+2214
00000000000063ee         mov        rbx, qword [rsp+0xe8+var_88]
00000000000063f3         setne      byte [rsp+0xe8+var_D9]
00000000000063f8         xor        r12d, r12d
00000000000063fb         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
00000000000063fe         call       j_strlen                                    ; strlen
0000000000006403         mov        qword [rsp+0xe8+var_A0], rbx
0000000000006408         mov        qword [rsp+0xe8+var_D0], rax
000000000000640d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000006412         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006417         mov        qword [rsp+0xe8+var_98], 0x0
0000000000006420         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000006425         jmp        loc_56c3

                     loc_642a:
000000000000642a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
000000000000642f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006434         xor        r12d, r12d
0000000000006437         mov        qword [rsp+0xe8+var_98], 0x0
0000000000006440         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000006445         xor        r15d, r15d
0000000000006448         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000644d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000006456         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000645f         jmp        loc_56c3

                     loc_6464:
0000000000006464         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000006469         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000646e         xor        r12d, r12d
0000000000006471         mov        qword [rsp+0xe8+var_98], 0x0
000000000000647a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000647f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000006484         jmp        loc_56a3

                     loc_6489:
0000000000006489         cmp        r13, r15                                    ; CODE XREF=sub_5bd0+133
000000000000648c         jbe        loc_6493

000000000000648e         mov        byte [r14+r15], 0x30

                     loc_6493:
0000000000006493         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_5d30+1884
0000000000006497         cmp        r13, rax
000000000000649a         jbe        loc_64a2

000000000000649c         mov        byte [r14+rcx+2], 0x30

                     loc_64a2:
00000000000064a2         mov        eax, r12d                                   ; CODE XREF=sub_5d30+1898
00000000000064a5         lea        r15, qword [rcx+3]
00000000000064a9         xor        r12d, r12d
00000000000064ac         mov        ebx, 0x30
00000000000064b1         jmp        sub_57e0+56
                        ; endp
00000000000064b6         align      64

                     loc_64c0:
00000000000064c0         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_5d30+731
00000000000064c5         mov        rbp, r11
00000000000064c8         mov        byte [rsp+0xe8+var_DB], bl
00000000000064cc         jmp        loc_6179

                     loc_64d1:
00000000000064d1         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_5ad0+105
00000000000064d6         xor        r12d, r12d
00000000000064d9         jmp        loc_5fe0

                     loc_64de:
00000000000064de         xor        r10d, r10d                                  ; CODE XREF=sub_5d30+944
00000000000064e1         jmp        loc_609d

                     loc_64e6:
00000000000064e6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_5d30+1419
00000000000064ef         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000064f4         xor        r12d, r12d
00000000000064f7         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000064fc         jmp        loc_62db

                     loc_6501:
0000000000006501         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_5d30+561
0000000000006506         mov        rsi, r14
0000000000006509         mov        rcx, r13
000000000000650c         mov        rax, rbx
000000000000650f         mov        rdi, rbx
0000000000006512         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000006518         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000651d         mov        r9, qword [rsp+0xe8+var_60]
0000000000006525         cmp        rsi, r11
0000000000006528         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000652e         mov        r15, qword [rsp+0xe8+var_68]
0000000000006536         mov        r14, qword [rsp+0xe8+var_A8]
000000000000653b         mov        r13, qword [rsp+0xe8+var_78]
0000000000006540         jae        loc_6568

0000000000006542         cmp        byte [rcx], 0x0
0000000000006545         jne        loc_6557

0000000000006547         jmp        loc_6568
0000000000006549         align      16

                     loc_6550:
0000000000006550         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_5d30+2099
0000000000006555         je         loc_6565

                     loc_6557:
0000000000006557         add        rax, 0x1                                    ; CODE XREF=sub_5d30+2069
000000000000655b         lea        rdx, qword [rbp+rax]
0000000000006560         cmp        r11, rdx
0000000000006563         ja         loc_6550

                     loc_6565:
0000000000006565         mov        rdi, rax                                    ; CODE XREF=sub_5d30+2085

                     loc_6568:
0000000000006568         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_5d30+2064, sub_5d30+2071
000000000000656d         xor        r12d, r12d
0000000000006570         jmp        loc_5fd6

                     loc_6575:
0000000000006575         mov        rdi, rbx                                    ; CODE XREF=sub_5d30+551
0000000000006578         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000657e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000006583         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000006589         mov        r15, qword [rsp+0xe8+var_68]
0000000000006591         xor        r12d, r12d
0000000000006594         mov        r14, qword [rsp+0xe8+var_A8]
0000000000006599         mov        r13, qword [rsp+0xe8+var_78]
000000000000659e         mov        r11, qword [rsp+0xe8+var_B8]
00000000000065a3         movzx      edx, byte [rsp+0xe8+var_DB]
00000000000065a8         jmp        loc_5fd6

                     loc_65ad:
00000000000065ad         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_5d30+1718
00000000000065b2         movzx      eax, byte [rdx]
00000000000065b5         test       al, al
00000000000065b7         je         loc_63ec

00000000000065bd         nop        dword [rax]

                     loc_65c0:
00000000000065c0         cmp        r13, r15                                    ; CODE XREF=sub_5d30+2212
00000000000065c3         jbe        loc_65c9

00000000000065c5         mov        byte [r14+r15], al

                     loc_65c9:
00000000000065c9         add        r15, 0x1                                    ; CODE XREF=sub_5d30+2195
00000000000065cd         movzx      eax, byte [rdx+r15]
00000000000065d2         test       al, al
00000000000065d4         jne        loc_65c0

00000000000065d6         jmp        loc_63ec

                     loc_65db:
00000000000065db         mov        eax, edx                                    ; CODE XREF=sub_5d30+682
00000000000065dd         jmp        loc_5b37

                     loc_65e2:
00000000000065e2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_5d30+290
00000000000065e6         cmp        bl, 0x3e
00000000000065e9         ja         loc_5e60

00000000000065ef         movabs     rax, 0x7000a38200000000
00000000000065f9         bt         rax, rbx
00000000000065fd         jae        loc_5e60

0000000000006603         cmp        byte [rsp+arg_7], 0x0
0000000000006608         jne        loc_67f2

000000000000660e         cmp        r13, r15
0000000000006611         jbe        loc_6618

0000000000006613         mov        byte [r14+r15], 0x3f

                     loc_6618:
0000000000006618         lea        rax, qword [r15+1]                          ; CODE XREF=sub_5d30+2273
000000000000661c         cmp        r13, rax
000000000000661f         jbe        loc_6627

0000000000006621         mov        byte [r14+r15+1], 0x22

                     loc_6627:
0000000000006627         lea        rax, qword [r15+2]                          ; CODE XREF=sub_5d30+2287
000000000000662b         cmp        r13, rax
000000000000662e         jbe        loc_6636

0000000000006630         mov        byte [r14+r15+2], 0x22

                     loc_6636:
0000000000006636         lea        rax, qword [r15+3]                          ; CODE XREF=sub_5d30+2302
000000000000663a         cmp        r13, rax
000000000000663d         jbe        loc_6645

000000000000663f         mov        byte [r14+r15+3], 0x3f

                     loc_6645:
0000000000006645         add        r15, 0x4                                    ; CODE XREF=sub_5d30+2317
0000000000006649         xor        edx, edx
000000000000664b         xor        r12d, r12d
000000000000664e         xor        eax, eax
0000000000006650         mov        rbp, rcx
0000000000006653         jmp        sub_57e0+56
                        ; endp

                     loc_6658:
0000000000006658         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
000000000000665a         je         loc_67e8

0000000000006660         lea        rax, qword [aLibs+29]                       ; 0xa865
0000000000006667         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000666c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006671         xor        r12d, r12d
0000000000006674         mov        qword [rsp+0xe8+var_98], 0x0
000000000000667d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000006682         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000006687         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000006690         xor        r15d, r15d
0000000000006693         mov        qword [rsp+0xe8+var_A0], rax
0000000000006698         jmp        loc_56c3
000000000000669d         align      32

                     loc_66a0:
00000000000066a0         mov        rbp, r11                                    ; CODE XREF=sub_5d30+333
00000000000066a3         movzx      eax, byte [rsp+arg_7]
00000000000066a8         jmp        sub_5d30+1097
                        ; endp

                     loc_66ad:
00000000000066ad         lea        rax, qword [aLibs+27]                       ; 0xa863, CODE XREF=sub_5d30+1410
00000000000066b4         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000066b9         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000066be         xor        r12d, r12d
00000000000066c1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000066ca         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000066cf         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000066d4         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000066dd         xor        r15d, r15d
00000000000066e0         mov        qword [rsp+0xe8+var_A0], rax
00000000000066e5         jmp        loc_56c3

                     loc_66ea:
00000000000066ea         mov        eax, edx                                    ; CODE XREF=sub_5d30+87

                     loc_66ec:
00000000000066ec         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_5d30+76, sub_5d30+2721
00000000000066f1         test       rbx, rbx
00000000000066f4         je         loc_6722

00000000000066f6         test       al, al
00000000000066f8         je         loc_6722

00000000000066fa         movzx      ecx, byte [rbx]
00000000000066fd         mov        rax, rbx
0000000000006700         test       cl, cl
0000000000006702         je         loc_6722

0000000000006704         mov        rdx, r15
0000000000006707         sub        rax, r15

                     loc_670a:
000000000000670a         cmp        r13, rdx                                    ; CODE XREF=sub_5d30+2541
000000000000670d         jbe        loc_6713

000000000000670f         mov        byte [r14+rdx], cl

                     loc_6713:
0000000000006713         add        rdx, 0x1                                    ; CODE XREF=sub_5d30+2525
0000000000006717         movzx      ecx, byte [rax+rdx]
000000000000671b         test       cl, cl
000000000000671d         jne        loc_670a

000000000000671f         mov        r15, rdx

                     loc_6722:
0000000000006722         cmp        r13, r15                                    ; CODE XREF=sub_5d30+2500, sub_5d30+2504, sub_5d30+2514
0000000000006725         jbe        loc_61c9

000000000000672b         mov        byte [r14+r15], 0x0
0000000000006730         jmp        loc_61c9

                     loc_6735:
0000000000006735         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
000000000000673a         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000673f         mov        rbp, r11
0000000000006742         sete       al
0000000000006745         mov        byte [rsp+0xe8+var_DB], bl
0000000000006749         jmp        loc_6179

                     loc_674e:
000000000000674e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_5d30+1664
0000000000006752         mov        rdi, rcx
0000000000006755         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000675a         mov        qword [rsp+0xe8+var_80], rax
000000000000675f         jmp        loc_63b6

                     loc_6764:
0000000000006764         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_5d30+1707
0000000000006768         mov        rdi, rcx
000000000000676b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000006770         mov        qword [rsp+0xe8+var_88], rax
0000000000006775         jmp        loc_63e1

                     loc_677a:
000000000000677a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_5bd0+16
000000000000677f         mov        rbp, r11
0000000000006782         mov        eax, edx
0000000000006784         mov        byte [rsp+arg_5], bl
0000000000006788         jmp        sub_5d30+1097
                        ; endp

                     loc_678d:
000000000000678d         sub        rsp, 0x8                                    ; CODE XREF=sub_5d30+98
0000000000006791         mov        r8d, 0x5
0000000000006797         mov        rcx, r11
000000000000679a         push       qword [rsp+0xf0+var_88]
000000000000679e         push       qword [rsp+0xf8+var_80]
00000000000067a2         mov        rdi, r14
00000000000067a5         push       qword [rsp+0x100+var_C8]
00000000000067a9         mov        r9d, dword [rsp+0x108+var_70]
00000000000067b1         mov        rdx, qword [rsp+0x108+var_D8]
00000000000067b6         mov        rsi, qword [rsp+0x108+var_98]
00000000000067bb         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000067c0         add        rsp, 0x20
00000000000067c4         mov        r15, rax
00000000000067c7         jmp        loc_61c9

                     loc_67cc:
00000000000067cc         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_5d30+121
00000000000067d1         jmp        loc_66ec

                     loc_67d6:
00000000000067d6         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_5d30+63
00000000000067de         jmp        loc_6179

                     loc_67e3:
00000000000067e3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_5d30+1197
                        ; endp

                     loc_67e8:
00000000000067e8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_5d30+2346
00000000000067ed         jmp        loc_6261

                     loc_67f2:
00000000000067f2         mov        rbp, r11                                    ; CODE XREF=sub_5d30+2264
00000000000067f5         jmp        sub_5d30+1120
                        ; endp

                     loc_67fa:
00000000000067fa         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_5d30+1332
00000000000067ff         xor        eax, eax
0000000000006801         xor        r12d, r12d
0000000000006804         mov        qword [rsp+0xe8+var_98], 0x0
000000000000680d         jmp        loc_5db4

                     loc_6812:
0000000000006812         mov        rdx, r13                                    ; CODE XREF=sub_5d30+1264
0000000000006815         mov        r13, qword [rsp+arg_48]
000000000000681a         jmp        loc_5e12

                     loc_681f:
000000000000681f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000006824         align      16                                          ; End of unwind block (FDE at 0xbc58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000006830         push       r15                                         ; Begin of unwind block (FDE at 0xbcd0), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000006832         push       r14
0000000000006834         movsxd     r15, edi
0000000000006837         push       r13
0000000000006839         push       r12
000000000000683b         mov        r14, rdx
000000000000683e         push       rbp
000000000000683f         push       rbx
0000000000006840         mov        rbp, rcx
0000000000006843         sub        rsp, 0x28
0000000000006847         mov        qword [rsp+0x58+var_50], rsi
000000000000684c         call       j___errno_location                          ; __errno_location
0000000000006851         mov        r13, rax
0000000000006854         mov        eax, dword [rax]
0000000000006856         test       r15d, r15d
0000000000006859         mov        rbx, qword [slotvec]                        ; slotvec
0000000000006860         mov        dword [rsp+0x58+var_40], eax
0000000000006864         js         loc_69d1

000000000000686a         cmp        dword [nslots], r15d                        ; nslots
0000000000006871         jg         loc_68d5

0000000000006873         cmp        r15d, 0x7fffffff
000000000000687a         je         loc_69d6

0000000000006880         lea        r12d, dword [r15+1]
0000000000006884         lea        rax, qword [slotvec0]                       ; slotvec0
000000000000688b         movsxd     rsi, r12d
000000000000688e         shl        rsi, 0x4
0000000000006892         cmp        rbx, rax
0000000000006895         je         loc_69b0

000000000000689b         mov        rdi, rbx
000000000000689e         call       xrealloc                                    ; xrealloc
00000000000068a3         mov        rbx, rax
00000000000068a6         mov        qword [slotvec], rax                        ; slotvec

                     loc_68ad:
00000000000068ad         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
00000000000068b4         mov        edx, r12d
00000000000068b7         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000068b9         sub        edx, edi
00000000000068bb         shl        rdi, 0x4
00000000000068bf         movsxd     rdx, edx
00000000000068c2         add        rdi, rbx                                    ; argument "__s" for method j_memset
00000000000068c5         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
00000000000068c9         call       j_memset                                    ; memset
00000000000068ce         mov        dword [nslots], r12d                        ; nslots

                     loc_68d5:
00000000000068d5         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
00000000000068d8         shl        r15, 0x4
00000000000068dc         sub        rsp, 0x8
00000000000068e0         add        rbx, r15
00000000000068e3         lea        r15, qword [rbp+8]
00000000000068e7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000068eb         mov        r11, qword [rbx]
00000000000068ee         mov        r12, qword [rbx+8]
00000000000068f2         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000068f5         or         eax, 0x1
00000000000068f8         mov        dword [rsp+0x60+var_3C], eax
00000000000068fc         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000068ff         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000006902         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000006905         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000006907         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
000000000000690a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000690f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000006912         mov        qword [rsp+0x78+var_48], r11
0000000000006917         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000691c         add        rsp, 0x20
0000000000006920         mov        r11, qword [rsp+0x58+var_48]
0000000000006925         cmp        r11, rax
0000000000006928         ja         loc_6991

000000000000692a         lea        rsi, qword [rax+1]
000000000000692e         lea        rax, qword [slot0]                          ; slot0
0000000000006935         cmp        r12, rax
0000000000006938         mov        qword [rbx], rsi
000000000000693b         je         loc_694f

000000000000693d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000006940         mov        qword [rsp+0x58+var_48], rsi
0000000000006945         call       j_free                                      ; free
000000000000694a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_694f:
000000000000694f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000006952         mov        qword [rsp+0x58+var_48], rsi
0000000000006957         call       xmalloc                                     ; xmalloc
000000000000695c         sub        rsp, 0x8
0000000000006960         mov        qword [rbx+8], rax
0000000000006964         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000006968         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000696b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000696e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000006971         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000006973         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000006978         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
000000000000697b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000006980         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000006985         mov        r12, rax
0000000000006988         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000698d         add        rsp, 0x20

                     loc_6991:
0000000000006991         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000006995         mov        dword [r13], eax
0000000000006999         add        rsp, 0x28
000000000000699d         mov        rax, r12
00000000000069a0         pop        rbx
00000000000069a1         pop        rbp
00000000000069a2         pop        r12
00000000000069a4         pop        r13
00000000000069a6         pop        r14
00000000000069a8         pop        r15
00000000000069aa         ret
                        ; endp
00000000000069ab         align      16

                     loc_69b0:
00000000000069b0         xor        edi, edi                                    ; CODE XREF=quotearg_n_options+101
00000000000069b2         call       xrealloc                                    ; xrealloc
00000000000069b7         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
00000000000069bf         mov        rbx, rax
00000000000069c2         mov        qword [slotvec], rax                        ; slotvec
00000000000069c9         movups     xmmword [rax], xmm0
00000000000069cc         jmp        loc_68ad

                     loc_69d1:
00000000000069d1         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_69d6:
00000000000069d6         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_69db:
00000000000069db         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xbcd0)
                     clone_quoting_options:
00000000000069e0         push       r12                                         ; Begin of unwind block (FDE at 0xbd3c)
00000000000069e2         push       rbp
00000000000069e3         push       rbx
00000000000069e4         mov        rbx, rdi
00000000000069e7         call       j___errno_location                          ; __errno_location
00000000000069ec         mov        r12d, dword [rax]
00000000000069ef         mov        rbp, rax
00000000000069f2         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000069f9         test       rbx, rbx
00000000000069fc         mov        esi, 0x38
0000000000006a01         cmove      rbx, rax
0000000000006a05         mov        rdi, rbx
0000000000006a08         call       xmemdup                                     ; xmemdup
0000000000006a0d         mov        dword [rbp], r12d
0000000000006a11         pop        rbx
0000000000006a12         pop        rbp
0000000000006a13         pop        r12
0000000000006a15         ret
                        ; endp
0000000000006a16         align      32                                          ; End of unwind block (FDE at 0xbd3c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000006a20         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbd68), default_quoting_options
0000000000006a27         test       rdi, rdi
0000000000006a2a         cmove      rdi, rax
0000000000006a2e         mov        eax, dword [rdi]
0000000000006a30         ret
                        ; endp
0000000000006a31         align      64                                          ; End of unwind block (FDE at 0xbd68)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000006a40         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbd7c), default_quoting_options
0000000000006a47         test       rdi, rdi
0000000000006a4a         cmove      rdi, rax
0000000000006a4e         mov        dword [rdi], esi
0000000000006a50         ret
                        ; endp
0000000000006a51         align      32                                          ; End of unwind block (FDE at 0xbd7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000006a60         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbd90), default_quoting_options
0000000000006a67         test       rdi, rdi
0000000000006a6a         mov        ecx, esi
0000000000006a6c         cmove      rdi, rax
0000000000006a70         mov        eax, esi
0000000000006a72         and        ecx, 0x1f
0000000000006a75         shr        al, 0x5
0000000000006a78         movzx      eax, al
0000000000006a7b         lea        rdi, qword [rdi+rax*4+8]
0000000000006a80         mov        esi, dword [rdi]
0000000000006a82         mov        eax, esi
0000000000006a84         shr        eax, cl
0000000000006a86         xor        edx, eax
0000000000006a88         and        eax, 0x1
0000000000006a8b         and        edx, 0x1
0000000000006a8e         shl        edx, cl
0000000000006a90         xor        edx, esi
0000000000006a92         mov        dword [rdi], edx
0000000000006a94         ret
                        ; endp
0000000000006a95         align      32                                          ; End of unwind block (FDE at 0xbd90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000006aa0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbda4), default_quoting_options
0000000000006aa7         test       rdi, rdi
0000000000006aaa         cmove      rdi, rax
0000000000006aae         mov        eax, dword [rdi+4]
0000000000006ab1         mov        dword [rdi+4], esi
0000000000006ab4         ret
                        ; endp
0000000000006ab5         align      64                                          ; End of unwind block (FDE at 0xbda4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000006ac0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbdb8), default_quoting_options
0000000000006ac7         test       rdi, rdi
0000000000006aca         cmove      rdi, rax
0000000000006ace         test       rsi, rsi
0000000000006ad1         mov        dword [rdi], 0xa
0000000000006ad7         je         loc_6ae7

0000000000006ad9         test       rdx, rdx
0000000000006adc         je         loc_6ae7

0000000000006ade         mov        qword [rdi+0x28], rsi
0000000000006ae2         mov        qword [rdi+0x30], rdx
0000000000006ae6         ret
                        ; endp

                     loc_6ae7:
0000000000006ae7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000006aeb         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000006af0         push       r15                                         ; End of unwind block (FDE at 0xbdb8), Begin of unwind block (FDE at 0xbdcc)
0000000000006af2         push       r14
0000000000006af4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000006afb         push       r13
0000000000006afd         push       r12
0000000000006aff         mov        r13, rdi
0000000000006b02         push       rbp
0000000000006b03         push       rbx
0000000000006b04         mov        rbx, r8
0000000000006b07         mov        r14, rsi
0000000000006b0a         mov        r15, rdx
0000000000006b0d         sub        rsp, 0x18
0000000000006b11         test       r8, r8
0000000000006b14         cmove      rbx, rax
0000000000006b18         mov        qword [rsp+0x48+var_40], rcx
0000000000006b1d         call       j___errno_location                          ; __errno_location
0000000000006b22         mov        r12d, dword [rax]
0000000000006b25         mov        rbp, rax
0000000000006b28         lea        rax, qword [rbx+8]
0000000000006b2c         sub        rsp, 0x8
0000000000006b30         mov        r9d, dword [rbx+4]
0000000000006b34         push       qword [rbx+0x30]
0000000000006b37         mov        r8d, dword [rbx]
0000000000006b3a         push       qword [rbx+0x28]
0000000000006b3d         mov        rdx, r15
0000000000006b40         push       rax
0000000000006b41         mov        rcx, qword [rsp+0x68+var_40]
0000000000006b46         mov        rsi, r14
0000000000006b49         mov        rdi, r13
0000000000006b4c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000006b51         mov        dword [rbp], r12d
0000000000006b55         add        rsp, 0x38
0000000000006b59         pop        rbx
0000000000006b5a         pop        rbp
0000000000006b5b         pop        r12
0000000000006b5d         pop        r13
0000000000006b5f         pop        r14
0000000000006b61         pop        r15
0000000000006b63         ret
                        ; endp
0000000000006b64         align      16                                          ; End of unwind block (FDE at 0xbdcc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000006b70         push       r15                                         ; Begin of unwind block (FDE at 0xbe20), CODE XREF=quotearg_alloc+5
0000000000006b72         push       r14
0000000000006b74         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000006b7b         push       r13
0000000000006b7d         push       r12
0000000000006b7f         mov        r12, rdx
0000000000006b82         push       rbp
0000000000006b83         push       rbx
0000000000006b84         mov        rbx, rcx
0000000000006b87         mov        r14, rdi
0000000000006b8a         mov        r15, rsi
0000000000006b8d         sub        rsp, 0x38
0000000000006b91         test       rcx, rcx
0000000000006b94         cmove      rbx, rax
0000000000006b98         xor        ebp, ebp
0000000000006b9a         call       j___errno_location                          ; __errno_location
0000000000006b9f         test       r12, r12
0000000000006ba2         mov        r13, rax
0000000000006ba5         mov        eax, dword [rax]
0000000000006ba7         sete       bpl
0000000000006bab         or         ebp, dword [rbx+4]
0000000000006bae         lea        r10, qword [rbx+8]
0000000000006bb2         sub        rsp, 0x8
0000000000006bb6         mov        r8d, dword [rbx]
0000000000006bb9         mov        rcx, r15
0000000000006bbc         mov        dword [rsp+0x70+var_5C], eax
0000000000006bc0         push       qword [rbx+0x30]
0000000000006bc3         mov        rdx, r14
0000000000006bc6         push       qword [rbx+0x28]
0000000000006bc9         push       r10
0000000000006bcb         xor        esi, esi
0000000000006bcd         mov        r9d, ebp
0000000000006bd0         xor        edi, edi
0000000000006bd2         mov        qword [rsp+0x88+var_48], r10
0000000000006bd7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000006bdc         lea        rsi, qword [rax+1]
0000000000006be0         mov        qword [rsp+0x88+var_40], rax
0000000000006be5         add        rsp, 0x20
0000000000006be9         mov        rdi, rsi
0000000000006bec         mov        qword [rsp+0x68+var_50], rsi
0000000000006bf1         call       xmalloc                                     ; xmalloc
0000000000006bf6         mov        qword [rsp+0x68+var_58], rax
0000000000006bfb         sub        rsp, 0x8
0000000000006bff         push       qword [rbx+0x30]
0000000000006c02         push       qword [rbx+0x28]
0000000000006c05         mov        r10, qword [rsp+0x80+var_48]
0000000000006c0a         mov        r9d, ebp
0000000000006c0d         mov        r8d, dword [rbx]
0000000000006c10         mov        rcx, r15
0000000000006c13         mov        rdx, r14
0000000000006c16         mov        rdi, rax
0000000000006c19         push       r10
0000000000006c1b         mov        rsi, qword [rsp+0x88+var_50]
0000000000006c20         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000006c25         mov        eax, dword [rsp+0x88+var_5C]
0000000000006c29         add        rsp, 0x20
0000000000006c2d         test       r12, r12
0000000000006c30         mov        dword [r13], eax
0000000000006c34         je         loc_6c3f

0000000000006c36         mov        r11, qword [rsp+0x68+var_40]
0000000000006c3b         mov        qword [r12], r11

                     loc_6c3f:
0000000000006c3f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000006c44         add        rsp, 0x38
0000000000006c48         pop        rbx
0000000000006c49         pop        rbp
0000000000006c4a         pop        r12
0000000000006c4c         pop        r13
0000000000006c4e         pop        r14
0000000000006c50         pop        r15
0000000000006c52         ret
                        ; endp
0000000000006c53         align      32                                          ; End of unwind block (FDE at 0xbe20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000006c60         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xbe8c)
0000000000006c63         xor        edx, edx
0000000000006c65         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
0000000000006c6a         align      16                                          ; End of unwind block (FDE at 0xbe8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000006c70         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0xbea0), nslots
0000000000006c76         push       r12
0000000000006c78         mov        r12, qword [slotvec]                        ; slotvec
0000000000006c7f         push       rbp
0000000000006c80         push       rbx
0000000000006c81         cmp        eax, 0x1
0000000000006c84         jle        loc_6cb1

0000000000006c86         sub        eax, 0x2
0000000000006c89         lea        rbx, qword [r12+0x18]
0000000000006c8e         shl        rax, 0x4
0000000000006c92         lea        rbp, qword [r12+rax+0x28]
0000000000006c97         nop        word [rax+rax]

                     loc_6ca0:
0000000000006ca0         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000006ca3         add        rbx, 0x10
0000000000006ca7         call       j_free                                      ; free
0000000000006cac         cmp        rbx, rbp
0000000000006caf         jne        loc_6ca0

                     loc_6cb1:
0000000000006cb1         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000006cb6         lea        rbx, qword [slot0]                          ; slot0
0000000000006cbd         cmp        rdi, rbx
0000000000006cc0         je         loc_6cd9

0000000000006cc2         call       j_free                                      ; free
0000000000006cc7         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000006cd2         mov        qword [slotvec0+8], rbx                     ; 0x20e098

                     loc_6cd9:
0000000000006cd9         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000006ce0         cmp        r12, rbx
0000000000006ce3         je         loc_6cf4

0000000000006ce5         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000006ce8         call       j_free                                      ; free
0000000000006ced         mov        qword [slotvec], rbx                        ; slotvec

                     loc_6cf4:
0000000000006cf4         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000006cf5         mov        dword [nslots], 0x1                         ; nslots
0000000000006cff         pop        rbp
0000000000006d00         pop        r12
0000000000006d02         ret
                        ; endp
0000000000006d03         align      16                                          ; End of unwind block (FDE at 0xbea0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000006d10         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbecc), default_quoting_options
0000000000006d17         mov        rdx, 0xffffffffffffffff
0000000000006d1e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000006d23         align      16                                          ; End of unwind block (FDE at 0xbecc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000006d30         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbee0), default_quoting_options
0000000000006d37         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000006d3c         align      64                                          ; End of unwind block (FDE at 0xbee0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000006d40         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbef4), default_quoting_options
0000000000006d47         mov        rsi, rdi
0000000000006d4a         mov        rdx, 0xffffffffffffffff
0000000000006d51         xor        edi, edi
0000000000006d53         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000006d58         align      32                                          ; End of unwind block (FDE at 0xbef4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000006d60         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xbf08), default_quoting_options
0000000000006d67         mov        rdx, rsi
0000000000006d6a         mov        rsi, rdi
0000000000006d6d         xor        edi, edi
0000000000006d6f         jmp        quotearg_n_options                          ; quotearg_n_options, DATA XREF=dopass+1376
                        ; endp
0000000000006d74         align      128                                         ; End of unwind block (FDE at 0xbf08)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000006d80         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xbf1c), CODE XREF=argmatch_invalid+64
0000000000006d84         mov        rax, rdx
0000000000006d87         mov        rdx, qword [fs:0x28]
0000000000006d90         mov        qword [rsp+0x48+var_10], rdx
0000000000006d95         xor        edx, edx
0000000000006d97         cmp        esi, 0xa
0000000000006d9a         je         loc_6e04

0000000000006d9c         mov        dword [rsp+0x48+var_48], esi
0000000000006d9f         mov        rcx, rsp
0000000000006da2         mov        rdx, 0xffffffffffffffff
0000000000006da9         mov        rsi, rax
0000000000006dac         mov        qword [rsp+0x48+var_44], 0x0
0000000000006db5         mov        qword [rsp+0x48+var_3C], 0x0
0000000000006dbe         mov        qword [rsp+0x48+var_34], 0x0
0000000000006dc7         mov        qword [rsp+0x48+var_2C], 0x0
0000000000006dd0         mov        qword [rsp+0x48+var_24], 0x0
0000000000006dd9         mov        qword [rsp+0x48+var_1C], 0x0
0000000000006de2         mov        dword [rsp+0x48+var_14], 0x0
0000000000006dea         call       quotearg_n_options                          ; quotearg_n_options
0000000000006def         mov        rcx, qword [rsp+0x48+var_10]
0000000000006df4         xor        rcx, qword [fs:0x28]
0000000000006dfd         jne        loc_6e09

0000000000006dff         add        rsp, 0x48
0000000000006e03         ret
                        ; endp

                     loc_6e04:
0000000000006e04         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_6e09:
0000000000006e09         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
0000000000006e0e         align      16                                          ; End of unwind block (FDE at 0xbf1c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000006e10         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xbf38), CODE XREF=quotearg_style_mem+10
0000000000006e14         mov        rax, rdx
0000000000006e17         mov        rdx, rcx
0000000000006e1a         mov        rcx, qword [fs:0x28]
0000000000006e23         mov        qword [rsp+0x48+var_10], rcx
0000000000006e28         xor        ecx, ecx
0000000000006e2a         cmp        esi, 0xa
0000000000006e2d         je         loc_6e90

0000000000006e2f         mov        dword [rsp+0x48+var_48], esi
0000000000006e32         mov        rcx, rsp
0000000000006e35         mov        rsi, rax
0000000000006e38         mov        qword [rsp+0x48+var_44], 0x0
0000000000006e41         mov        qword [rsp+0x48+var_3C], 0x0
0000000000006e4a         mov        qword [rsp+0x48+var_34], 0x0
0000000000006e53         mov        qword [rsp+0x48+var_2C], 0x0
0000000000006e5c         mov        qword [rsp+0x48+var_24], 0x0
0000000000006e65         mov        qword [rsp+0x48+var_1C], 0x0
0000000000006e6e         mov        dword [rsp+0x48+var_14], 0x0
0000000000006e76         call       quotearg_n_options                          ; quotearg_n_options
0000000000006e7b         mov        rdx, qword [rsp+0x48+var_10]
0000000000006e80         xor        rdx, qword [fs:0x28]
0000000000006e89         jne        loc_6e95

0000000000006e8b         add        rsp, 0x48
0000000000006e8f         ret
                        ; endp

                     loc_6e90:
0000000000006e90         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_6e95:
0000000000006e95         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
0000000000006e9a         align      32                                          ; End of unwind block (FDE at 0xbf38)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000006ea0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0xbf54)
0000000000006ea3         mov        esi, edi
0000000000006ea5         xor        edi, edi
0000000000006ea7         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
0000000000006eac         align      16                                          ; End of unwind block (FDE at 0xbf54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000006eb0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xbf68)
0000000000006eb3         mov        rdx, rsi
0000000000006eb6         mov        esi, edi
0000000000006eb8         xor        edi, edi
0000000000006eba         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
0000000000006ebf         align      64                                          ; End of unwind block (FDE at 0xbf68)

                     quotearg_char_mem:
0000000000006ec0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xbf7c), CODE XREF=quotearg_char+11
0000000000006ec4         mov        ecx, edx
0000000000006ec6         mov        rax, qword [fs:0x28]
0000000000006ecf         mov        qword [rsp+0x48+var_10], rax
0000000000006ed4         xor        eax, eax
0000000000006ed6         mov        rax, qword [qword_20e250]                   ; qword_20e250
0000000000006edd         mov        r8, rsp
0000000000006ee0         and        ecx, 0x1f
0000000000006ee3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000006eeb         mov        qword [rsp+0x48+var_18], rax
0000000000006ef0         mov        eax, edx
0000000000006ef2         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000006ef6         shr        al, 0x5
0000000000006ef9         movzx      eax, al
0000000000006efc         lea        r9, qword [r8+rax*4+8]
0000000000006f01         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20e230
0000000000006f09         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000006f0e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20e240
0000000000006f16         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000006f1b         mov        edx, dword [r9]
0000000000006f1e         mov        eax, edx
0000000000006f20         shr        eax, cl
0000000000006f22         not        eax
0000000000006f24         and        eax, 0x1
0000000000006f27         shl        eax, cl
0000000000006f29         mov        rcx, r8
0000000000006f2c         xor        eax, edx
0000000000006f2e         mov        rdx, rsi
0000000000006f31         mov        rsi, rdi
0000000000006f34         mov        dword [r9], eax
0000000000006f37         xor        edi, edi
0000000000006f39         call       quotearg_n_options                          ; quotearg_n_options
0000000000006f3e         mov        rsi, qword [rsp+0x48+var_10]
0000000000006f43         xor        rsi, qword [fs:0x28]
0000000000006f4c         jne        loc_6f53

0000000000006f4e         add        rsp, 0x48
0000000000006f52         ret
                        ; endp

                     loc_6f53:
0000000000006f53         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000006f58         align      32                                          ; End of unwind block (FDE at 0xbf7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000006f60         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0xbf98)
0000000000006f64         mov        rsi, 0xffffffffffffffff
0000000000006f6b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000006f70         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0xbf98), Begin of unwind block (FDE at 0xbfac), CODE XREF=close_stdout+101
0000000000006f75         mov        rsi, 0xffffffffffffffff
0000000000006f7c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000006f81         align      16                                          ; End of unwind block (FDE at 0xbfac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000006f90         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0xbfc0)
0000000000006f95         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000006f9a         align      32                                          ; End of unwind block (FDE at 0xbfc0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000006fa0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xbfd4), CODE XREF=main+895, main+1408, main+2229
0000000000006fa4         mov        rax, rdx
0000000000006fa7         mov        rdx, qword [fs:0x28]
0000000000006fb0         mov        qword [rsp+0x48+var_10], rdx
0000000000006fb5         xor        edx, edx
0000000000006fb7         cmp        esi, 0xa
0000000000006fba         je         loc_7024

0000000000006fbc         mov        dword [rsp+0x48+var_48], esi
0000000000006fbf         mov        rcx, rsp
0000000000006fc2         mov        rdx, 0xffffffffffffffff
0000000000006fc9         mov        rsi, rax
0000000000006fcc         mov        qword [rsp+0x48+var_44], 0x0
0000000000006fd5         mov        qword [rsp+0x48+var_3C], 0x4000000
0000000000006fde         mov        qword [rsp+0x48+var_34], 0x0
0000000000006fe7         mov        qword [rsp+0x48+var_2C], 0x0
0000000000006ff0         mov        qword [rsp+0x48+var_24], 0x0
0000000000006ff9         mov        qword [rsp+0x48+var_1C], 0x0
0000000000007002         mov        dword [rsp+0x48+var_14], 0x0
000000000000700a         call       quotearg_n_options                          ; quotearg_n_options
000000000000700f         mov        rcx, qword [rsp+0x48+var_10]
0000000000007014         xor        rcx, qword [fs:0x28]
000000000000701d         jne        loc_7029

000000000000701f         add        rsp, 0x48
0000000000007023         ret
                        ; endp

                     loc_7024:
0000000000007024         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_7029:
0000000000007029         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000702e         align      16                                          ; End of unwind block (FDE at 0xbfd4)

                     quotearg_n_custom_mem:
0000000000007030         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xbff0), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000007034         mov        r9, rcx
0000000000007037         mov        rcx, qword [qword_20e250]                   ; qword_20e250
000000000000703e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000007046         mov        rax, qword [fs:0x28]
000000000000704f         mov        qword [rsp+0x48+var_10], rax
0000000000007054         xor        eax, eax
0000000000007056         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000705a         test       rsi, rsi
000000000000705d         mov        qword [rsp+0x48+var_18], rcx
0000000000007062         mov        dword [rsp+0x48+var_48], 0xa
0000000000007069         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20e230
0000000000007071         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000007076         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20e240
000000000000707e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000007083         je         loc_70b7

0000000000007085         test       rdx, rdx
0000000000007088         je         loc_70b7

000000000000708a         mov        qword [rsp+0x48+var_20], rsi
000000000000708f         mov        qword [rsp+0x48+var_18], rdx
0000000000007094         mov        rcx, rsp
0000000000007097         mov        rdx, r8
000000000000709a         mov        rsi, r9
000000000000709d         call       quotearg_n_options                          ; quotearg_n_options
00000000000070a2         mov        rdi, qword [rsp+0x48+var_10]
00000000000070a7         xor        rdi, qword [fs:0x28]
00000000000070b0         jne        loc_70bc

00000000000070b2         add        rsp, 0x48
00000000000070b6         ret
                        ; endp

                     loc_70b7:
00000000000070b7         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_70bc:
00000000000070bc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
00000000000070c1         align      16                                          ; End of unwind block (FDE at 0xbff0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
00000000000070d0         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0xc00c)
00000000000070d7         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
00000000000070dc         align      32                                          ; End of unwind block (FDE at 0xc00c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
00000000000070e0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xc020)
00000000000070e3         mov        r8, 0xffffffffffffffff
00000000000070ea         mov        rdx, rsi
00000000000070ed         mov        rsi, rdi
00000000000070f0         xor        edi, edi
00000000000070f2         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000070f7         align      256                                         ; End of unwind block (FDE at 0xc020)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000007100         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0xc034)
0000000000007103         mov        rcx, rdx
0000000000007106         mov        rdx, rsi
0000000000007109         mov        rsi, rdi
000000000000710c         xor        edi, edi
000000000000710e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000007113         align      32                                          ; End of unwind block (FDE at 0xc034)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000007120         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xc048), quote_quoting_options
0000000000007127         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000712c         align      16                                          ; End of unwind block (FDE at 0xc048)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000007130         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xc05c), quote_quoting_options
0000000000007137         mov        rdx, rsi
000000000000713a         mov        rsi, rdi
000000000000713d         xor        edi, edi
000000000000713f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000007144         align      16                                          ; End of unwind block (FDE at 0xc05c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000007150         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xc070), quote_quoting_options, CODE XREF=argmatch_invalid+46
0000000000007157         mov        rdx, 0xffffffffffffffff
000000000000715e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000007163         align      16                                          ; End of unwind block (FDE at 0xc070)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000007170         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xc084), quote_quoting_options, CODE XREF=argmatch_valid+90, argmatch_valid+169, randread_error+11, xnumtoumax+109
0000000000007177         mov        rsi, rdi
000000000000717a         mov        rdx, 0xffffffffffffffff
0000000000007181         xor        edi, edi
0000000000007183         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000007188         align      16                                          ; End of unwind block (FDE at 0xc084)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_new:
0000000000007190         push       rbx                                         ; Begin of unwind block (FDE at 0xc09c)
0000000000007191         mov        rbx, rdi
0000000000007194         mov        edi, 0x18
0000000000007199         call       xmalloc                                     ; xmalloc
000000000000719e         mov        qword [rax], rbx
00000000000071a1         mov        qword [rax+0x10], 0x0
00000000000071a9         mov        qword [rax+8], 0x0
00000000000071b1         pop        rbx
00000000000071b2         ret
                        ; endp
00000000000071b3         align      64                                          ; End of unwind block (FDE at 0xc09c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_all_new:
00000000000071c0         push       rbx                                         ; Begin of unwind block (FDE at 0xc0b8), CODE XREF=main+716
00000000000071c1         call       randread_new                                ; randread_new
00000000000071c6         test       rax, rax
00000000000071c9         je         loc_71f0

00000000000071cb         mov        rbx, rax
00000000000071ce         mov        edi, 0x18
00000000000071d3         call       xmalloc                                     ; xmalloc
00000000000071d8         mov        qword [rax], rbx
00000000000071db         mov        qword [rax+0x10], 0x0
00000000000071e3         mov        qword [rax+8], 0x0
00000000000071eb         pop        rbx
00000000000071ec         ret
                        ; endp
00000000000071ed         align      16

                     loc_71f0:
00000000000071f0         xor        eax, eax                                    ; CODE XREF=randint_all_new+9
00000000000071f2         pop        rbx
00000000000071f3         ret
                        ; endp
00000000000071f4         align      512                                         ; End of unwind block (FDE at 0xc0b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_get_source:
0000000000007200         mov        rax, qword [rdi]                            ; Begin of unwind block (FDE at 0xc0d8), CODE XREF=do_wipefd+789, do_wipefd+942, do_wipefd+1496, do_wipefd+1719, do_wipefd+1744
0000000000007203         ret
                        ; endp
0000000000007204         align      16                                          ; End of unwind block (FDE at 0xc0d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     randint_genmax:
0000000000007210         push       r15                                         ; Begin of unwind block (FDE at 0xc0ec), CODE XREF=do_wipefd+1422, do_wipefd+1583
0000000000007212         push       r14
0000000000007214         lea        r15, qword [rsi+1]
0000000000007218         push       r13
000000000000721a         push       r12
000000000000721c         mov        r13, rdi
000000000000721f         push       rbp
0000000000007220         push       rbx
0000000000007221         mov        r14, rsi
0000000000007224         sub        rsp, 0x28
0000000000007228         mov        rbp, qword [rdi+8]
000000000000722c         mov        rbx, qword [rdi+0x10]
0000000000007230         mov        rax, qword [fs:0x28]
0000000000007239         mov        qword [rsp+0x58+var_40], rax
000000000000723e         xor        eax, eax
0000000000007240         mov        rax, qword [rdi]
0000000000007243         lea        r12, qword [rsp+0x58+var_48]
0000000000007248         mov        qword [rsp+0x58+var_50], rax
000000000000724d         jmp        loc_7285
000000000000724f         align      16

                     loc_7250:
0000000000007250         cmp        rbx, r14                                    ; CODE XREF=randint_genmax+120
0000000000007253         je         loc_72df

                     loc_7259:
0000000000007259         mov        rax, rbx                                    ; CODE XREF=randint_genmax+201
000000000000725c         xor        edx, edx
000000000000725e         sub        rax, r14
0000000000007261         div        r15
0000000000007264         sub        rbx, rdx
0000000000007267         mov        rdi, rdx
000000000000726a         mov        rsi, rax
000000000000726d         xor        edx, edx
000000000000726f         mov        rax, rbp
0000000000007272         div        r15
0000000000007275         cmp        rbp, rbx
0000000000007278         jbe        loc_7318

000000000000727e         lea        rbx, qword [rdi-1]
0000000000007282         mov        rbp, rdx

                     loc_7285:
0000000000007285         cmp        rbx, r14                                    ; CODE XREF=randint_genmax+61
0000000000007288         jae        loc_7250

000000000000728a         mov        rax, rbx
000000000000728d         xor        edx, edx
000000000000728f         nop

                     loc_7290:
0000000000007290         shl        rax, 0x8                                    ; CODE XREF=randint_genmax+145
0000000000007294         add        rdx, 0x1
0000000000007298         add        rax, 0xff
000000000000729e         cmp        r14, rax
00000000000072a1         ja         loc_7290

00000000000072a3         mov        rdi, qword [rsp+0x58+var_50]
00000000000072a8         mov        rsi, r12
00000000000072ab         call       randread                                    ; randread
00000000000072b0         mov        rax, r12
00000000000072b3         nop        dword [rax+rax]

                     loc_72b8:
00000000000072b8         movzx      edx, byte [rax]                             ; CODE XREF=randint_genmax+196
00000000000072bb         shl        rbx, 0x8
00000000000072bf         shl        rbp, 0x8
00000000000072c3         add        rbx, 0xff
00000000000072ca         add        rax, 0x1
00000000000072ce         add        rbp, rdx
00000000000072d1         cmp        r14, rbx
00000000000072d4         ja         loc_72b8

00000000000072d6         cmp        rbx, r14
00000000000072d9         jne        loc_7259

                     loc_72df:
00000000000072df         mov        qword [r13+0x10], 0x0                       ; CODE XREF=randint_genmax+67
00000000000072e7         mov        qword [r13+8], 0x0

                     loc_72ef:
00000000000072ef         mov        rcx, qword [rsp+0x58+var_40]                ; CODE XREF=randint_genmax+275
00000000000072f4         xor        rcx, qword [fs:0x28]
00000000000072fd         mov        rax, rbp
0000000000007300         jne        loc_7325

0000000000007302         add        rsp, 0x28
0000000000007306         pop        rbx
0000000000007307         pop        rbp
0000000000007308         pop        r12
000000000000730a         pop        r13
000000000000730c         pop        r14
000000000000730e         pop        r15
0000000000007310         ret
                        ; endp
0000000000007311         align      8

                     loc_7318:
0000000000007318         mov        qword [r13+8], rax                          ; CODE XREF=randint_genmax+104
000000000000731c         mov        qword [r13+0x10], rsi
0000000000007320         mov        rbp, rdx
0000000000007323         jmp        loc_72ef

                     loc_7325:
0000000000007325         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=randint_genmax+240
                        ; endp
000000000000732a         align      16                                          ; End of unwind block (FDE at 0xc0ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_free:
0000000000007330         push       rbx                                         ; Begin of unwind block (FDE at 0xc138)
0000000000007331         mov        rdx, 0xffffffffffffffff
0000000000007338         mov        rbx, rdi
000000000000733b         mov        esi, 0x18
0000000000007340         call       j___explicit_bzero_chk                      ; __explicit_bzero_chk
0000000000007345         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
0000000000007348         pop        rbx
0000000000007349         jmp        j_free                                      ; free
                        ; endp
000000000000734e         align      16                                          ; End of unwind block (FDE at 0xc138)

                     randint_all_free:
0000000000007350         push       r13                                         ; Begin of unwind block (FDE at 0xc154), CODE XREF=clear_random_data+7
0000000000007352         push       r12
0000000000007354         push       rbp
0000000000007355         push       rbx
0000000000007356         mov        rbx, rdi
0000000000007359         sub        rsp, 0x8
000000000000735d         mov        rdi, qword [rdi]
0000000000007360         call       randread_free                               ; randread_free
0000000000007365         mov        r12d, eax
0000000000007368         call       j___errno_location                          ; __errno_location
000000000000736d         mov        r13d, dword [rax]
0000000000007370         mov        rdi, rbx
0000000000007373         mov        rdx, 0xffffffffffffffff
000000000000737a         mov        esi, 0x18
000000000000737f         mov        rbp, rax
0000000000007382         call       j___explicit_bzero_chk                      ; __explicit_bzero_chk
0000000000007387         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
000000000000738a         call       j_free                                      ; free
000000000000738f         mov        dword [rbp], r13d
0000000000007393         add        rsp, 0x8
0000000000007397         mov        eax, r12d
000000000000739a         pop        rbx
000000000000739b         pop        rbp
000000000000739c         pop        r12
000000000000739e         pop        r13
00000000000073a0         ret
                        ; endp
00000000000073a1         align      16                                          ; End of unwind block (FDE at 0xc154)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_error:
00000000000073b0         push       rbp                                         ; Begin of unwind block (FDE at 0xc18c), DATA XREF=randread_new+90, randread_new+196, randread_new+348
00000000000073b1         push       rbx
00000000000073b2         sub        rsp, 0x8
00000000000073b6         test       rdi, rdi
00000000000073b9         je         loc_73f8

00000000000073bb         call       quote                                       ; quote
00000000000073c0         mov        rbp, rax
00000000000073c3         call       j___errno_location                          ; __errno_location
00000000000073c8         cmp        dword [rax], 0x0
00000000000073cb         mov        rbx, rax
00000000000073ce         mov        edx, 0x5
00000000000073d3         je         loc_73fd

00000000000073d5         lea        rsi, qword [aSReadError]                    ; argument "msgid" for method j_dcgettext, "%s: read error"
00000000000073dc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000073de         call       j_dcgettext                                 ; dcgettext

                     loc_73e3:
00000000000073e3         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure, CODE XREF=randread_error+91
00000000000073e9         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000073eb         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000073ee         mov        rcx, rbp
00000000000073f1         xor        eax, eax
00000000000073f3         call       j_error                                     ; error

                     loc_73f8:
00000000000073f8         call       j_abort                                     ; abort, CODE XREF=randread_error+9
                        ; endp

                     loc_73fd:
00000000000073fd         lea        rsi, qword [aSEndOfFile]                    ; argument "msgid" for method j_dcgettext, "%s: end of file", CODE XREF=randread_error+35
0000000000007404         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007406         call       j_dcgettext                                 ; dcgettext
000000000000740b         jmp        loc_73e3
000000000000740d         align      16                                          ; End of unwind block (FDE at 0xc18c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_58: int32_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104


                     randread_new:
0000000000007410         push       r15                                         ; Begin of unwind block (FDE at 0xc1ac), CODE XREF=randint_all_new+1
0000000000007412         push       r14
0000000000007414         push       r13
0000000000007416         push       r12
0000000000007418         push       rbp
0000000000007419         push       rbx
000000000000741a         sub        rsp, 0x38
000000000000741e         mov        rax, qword [fs:0x28]
0000000000007427         mov        qword [rsp+0x68+var_40], rax
000000000000742c         xor        eax, eax
000000000000742e         test       rsi, rsi
0000000000007431         je         loc_7558

0000000000007437         test       rdi, rdi
000000000000743a         mov        r12, rdi
000000000000743d         mov        rbp, rsi
0000000000007440         je         loc_74c0

0000000000007442         lea        rsi, qword [aDevurandom+13]                 ; 0xad54
0000000000007449         call       fopen_safer                                 ; fopen_safer
000000000000744e         test       rax, rax
0000000000007451         mov        r13, rax
0000000000007454         je         loc_7658

000000000000745a         mov        edi, 0x1038
000000000000745f         call       xmalloc                                     ; xmalloc
0000000000007464         mov        rbx, rax
0000000000007467         mov        qword [rax], r13
000000000000746a         lea        rax, qword [randread_error]                 ; randread_error
0000000000007471         cmp        rbp, 0x1000
0000000000007478         mov        ecx, 0x1000
000000000000747d         lea        rsi, qword [rbx+0x18]                       ; argument "__buf" for method j_setvbuf
0000000000007481         cmovbe     rcx, rbp                                    ; argument "__n" for method j_setvbuf
0000000000007485         mov        qword [rbx+8], rax
0000000000007489         mov        qword [rbx+0x10], r12
000000000000748d         xor        edx, edx                                    ; argument "__modes" for method j_setvbuf
000000000000748f         mov        rdi, r13                                    ; argument "__stream" for method j_setvbuf
0000000000007492         call       j_setvbuf                                   ; setvbuf

                     loc_7497:
0000000000007497         mov        rdx, qword [rsp+0x68+var_40]                ; CODE XREF=randread_new+317, randread_new+367, randread_new+586
000000000000749c         xor        rdx, qword [fs:0x28]
00000000000074a5         mov        rax, rbx
00000000000074a8         jne        loc_765f

00000000000074ae         add        rsp, 0x38
00000000000074b2         pop        rbx
00000000000074b3         pop        rbp
00000000000074b4         pop        r12
00000000000074b6         pop        r13
00000000000074b8         pop        r14
00000000000074ba         pop        r15
00000000000074bc         ret
                        ; endp
00000000000074bd         align      64

                     loc_74c0:
00000000000074c0         mov        edi, 0x1038                                 ; CODE XREF=randread_new+48
00000000000074c5         call       xmalloc                                     ; xmalloc
00000000000074ca         mov        rbx, rax
00000000000074cd         mov        qword [rax], 0x0
00000000000074d4         lea        rax, qword [randread_error]                 ; randread_error
00000000000074db         lea        rdi, qword [aDevurandom]                    ; argument "__file" for method j_open, "/dev/urandom"
00000000000074e2         xor        esi, esi                                    ; argument "__oflag" for method j_open
00000000000074e4         mov        qword [rbx+0x10], 0x0
00000000000074ec         mov        qword [rbx+8], rax
00000000000074f0         mov        qword [rbx+0x18], 0x0
00000000000074f8         xor        eax, eax
00000000000074fa         call       j_open                                      ; open
00000000000074ff         test       eax, eax
0000000000007501         lea        r13, qword [rbx+0x20]
0000000000007505         mov        r15d, eax
0000000000007508         js         loc_7588

000000000000750a         cmp        rbp, 0x800
0000000000007511         mov        rdx, rbp
0000000000007514         mov        r14d, 0x800
000000000000751a         cmova      rdx, r14
000000000000751e         mov        ecx, 0x1018
0000000000007523         mov        rsi, r13
0000000000007526         mov        edi, eax
0000000000007528         call       j___read_chk                                ; __read_chk
000000000000752d         mov        edi, r15d                                   ; argument "__fd" for method j_close
0000000000007530         mov        rbp, rax
0000000000007533         call       j_close                                     ; close
0000000000007538         cmp        rbp, 0x7ff
000000000000753f         jle        loc_7664

                     loc_7545:
0000000000007545         mov        rdi, r13                                    ; CODE XREF=randread_new+502, randread_new+547, randread_new+573, randread_new+663, randread_new+742, randread_new+798
0000000000007548         call       isaac_seed                                  ; isaac_seed
000000000000754d         jmp        loc_7497
0000000000007552         align      8

                     loc_7558:
0000000000007558         mov        edi, 0x1038                                 ; CODE XREF=randread_new+33
000000000000755d         call       xmalloc                                     ; xmalloc
0000000000007562         mov        rbx, rax
0000000000007565         mov        qword [rax], 0x0
000000000000756c         lea        rax, qword [randread_error]                 ; randread_error
0000000000007573         mov        qword [rbx+0x10], 0x0
000000000000757b         mov        qword [rbx+8], rax
000000000000757f         jmp        loc_7497
0000000000007584         align      8

                     loc_7588:
0000000000007588         lea        r12, qword [rsp+0x68+var_58]                ; CODE XREF=randread_new+248
000000000000758d         xor        esi, esi                                    ; argument "__tz" for method j_gettimeofday
000000000000758f         mov        r14d, 0x18
0000000000007595         mov        rdi, r12                                    ; argument "__tv" for method j_gettimeofday
0000000000007598         call       j_gettimeofday                              ; gettimeofday
000000000000759d         movdqa     xmm0, xmmword [rsp+0x68+var_58]
00000000000075a3         movups     xmmword [rbx+0x20], xmm0
00000000000075a7         call       j_getpid                                    ; getpid
00000000000075ac         mov        dword [rbx+0x30], eax
00000000000075af         mov        dword [rsp+0x68+var_58], eax
00000000000075b3         call       j_getppid                                   ; getppid
00000000000075b8         mov        dword [rsp+0x68+var_58], eax
00000000000075bc         mov        dword [rbx+0x34], eax

                     loc_75bf:
00000000000075bf         mov        ebp, 0x800                                  ; CODE XREF=randread_new+804
00000000000075c4         mov        eax, 0x4
00000000000075c9         sub        rbp, r14
00000000000075cc         cmp        rbp, 0x4
00000000000075d0         cmova      rbp, rax
00000000000075d4         call       j_getuid                                    ; getuid
00000000000075d9         test       ebp, ebp
00000000000075db         mov        dword [rsp+0x68+var_58], eax
00000000000075df         lea        rcx, qword [r13+r14]
00000000000075e4         mov        esi, ebp
00000000000075e6         je         loc_75fc

00000000000075e8         xor        eax, eax

                     loc_75ea:
00000000000075ea         mov        edx, eax                                    ; CODE XREF=randread_new+490
00000000000075ec         add        eax, 0x1
00000000000075ef         movzx      edi, byte [r12+rdx]
00000000000075f4         cmp        eax, esi
00000000000075f6         mov        byte [rcx+rdx], dil
00000000000075fa         jb         loc_75ea

                     loc_75fc:
00000000000075fc         add        rbp, r14                                    ; CODE XREF=randread_new+470
00000000000075ff         cmp        rbp, 0x7ff
0000000000007606         ja         loc_7545

000000000000760c         call       j_getgid                                    ; getgid
0000000000007611         mov        dword [rsp+0x68+var_58], eax
0000000000007615         mov        eax, 0x800
000000000000761a         mov        edx, 0x4
000000000000761f         sub        rax, rbp
0000000000007622         lea        rcx, qword [r13+rbp]
0000000000007627         cmp        rax, 0x4
000000000000762b         cmova      rax, rdx
000000000000762f         test       eax, eax
0000000000007631         mov        esi, eax
0000000000007633         je         loc_7545

0000000000007639         xor        eax, eax

                     loc_763b:
000000000000763b         mov        edx, eax                                    ; CODE XREF=randread_new+571
000000000000763d         add        eax, 0x1
0000000000007640         movzx      edi, byte [r12+rdx]
0000000000007645         cmp        eax, esi
0000000000007647         mov        byte [rcx+rdx], dil
000000000000764b         jb         loc_763b

000000000000764d         jmp        loc_7545
0000000000007652         align      8

                     loc_7658:
0000000000007658         xor        ebx, ebx                                    ; CODE XREF=randread_new+68
000000000000765a         jmp        loc_7497

                     loc_765f:
000000000000765f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=randread_new+152
                        ; endp

                     loc_7664:
0000000000007664         test       rbp, rbp                                    ; CODE XREF=randread_new+303
0000000000007667         mov        r15, r14
000000000000766a         mov        eax, 0x10
000000000000766f         cmovs      rbp, r12
0000000000007673         lea        r12, qword [rsp+0x68+var_58]
0000000000007678         sub        r15, rbp
000000000000767b         cmp        r15, 0x10
000000000000767f         mov        rdi, r12                                    ; argument "__tv" for method j_gettimeofday
0000000000007682         cmova      r15, rax
0000000000007686         xor        esi, esi                                    ; argument "__tz" for method j_gettimeofday
0000000000007688         call       j_gettimeofday                              ; gettimeofday
000000000000768d         lea        rax, qword [r13+rbp]
0000000000007692         add        rbp, r15
0000000000007695         mov        ecx, r15d
0000000000007698         cmp        rbp, 0x7ff
000000000000769f         mov        rsi, r12
00000000000076a2         mov        rdi, rax
00000000000076a5         rep movsb  byte [rdi], byte [rsi]
00000000000076a7         ja         loc_7545

00000000000076ad         mov        r15, r14
00000000000076b0         mov        r8d, 0x4
00000000000076b6         sub        r15, rbp
00000000000076b9         mov        qword [rsp+0x68+var_60], r8
00000000000076be         cmp        r15, 0x4
00000000000076c2         cmova      r15, r8
00000000000076c6         lea        rdx, qword [rbp+r15]
00000000000076cb         add        rbp, r13
00000000000076ce         mov        qword [rsp+0x68+var_68], rdx
00000000000076d2         call       j_getpid                                    ; getpid
00000000000076d7         mov        rdx, qword [rsp+0x68+var_68]
00000000000076db         mov        dword [rsp+0x68+var_58], eax
00000000000076df         mov        ecx, r15d
00000000000076e2         mov        rdi, rbp
00000000000076e5         mov        rsi, r12
00000000000076e8         mov        r8, qword [rsp+0x68+var_60]
00000000000076ed         rep movsb  byte [rdi], byte [rsi]
00000000000076ef         cmp        rdx, 0x7ff
00000000000076f6         jg         loc_7545

00000000000076fc         sub        r14, rdx
00000000000076ff         cmp        r14, 0x4
0000000000007703         cmova      r14, r8
0000000000007707         call       j_getppid                                   ; getppid
000000000000770c         mov        rdx, qword [rsp+0x68+var_68]
0000000000007710         mov        dword [rsp+0x68+var_58], eax
0000000000007714         mov        ecx, r14d
0000000000007717         mov        rsi, r12
000000000000771a         lea        rax, qword [r13+rdx]
000000000000771f         add        r14, rdx
0000000000007722         cmp        r14, 0x7ff
0000000000007729         mov        rdi, rax
000000000000772c         rep movsb  byte [rdi], byte [rsi]
000000000000772e         ja         loc_7545

0000000000007734         jmp        loc_75bf
0000000000007739         align      64                                          ; End of unwind block (FDE at 0xc1ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_set_handler:
0000000000007740         mov        qword [rdi+8], rsi                          ; Begin of unwind block (FDE at 0xc1f8)
0000000000007744         ret
                        ; endp
0000000000007745         align      16                                          ; End of unwind block (FDE at 0xc1f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_set_handler_arg:
0000000000007750         mov        qword [rdi+0x10], rsi                       ; Begin of unwind block (FDE at 0xc20c)
0000000000007754         ret
                        ; endp
0000000000007755         align      32                                          ; End of unwind block (FDE at 0xc20c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     randread:
0000000000007760         push       r15                                         ; Begin of unwind block (FDE at 0xc220), CODE XREF=dopass+1172, randint_genmax+155
0000000000007762         push       r14
0000000000007764         push       r13
0000000000007766         push       r12
0000000000007768         mov        r12, rdi
000000000000776b         push       rbp
000000000000776c         push       rbx
000000000000776d         mov        rbp, rdx
0000000000007770         mov        rbx, rsi
0000000000007773         sub        rsp, 0x18
0000000000007777         mov        rcx, qword [rdi]
000000000000777a         test       rcx, rcx
000000000000777d         mov        qword [rsp+0x48+var_40], rcx
0000000000007782         je         loc_77e8

0000000000007784         call       j___errno_location                          ; __errno_location
0000000000007789         mov        rcx, qword [rsp+0x48+var_40]
000000000000778e         mov        r13, rax
0000000000007791         jmp        loc_77b6
0000000000007793         align      8

                     loc_7798:
0000000000007798         mov        rax, qword [r12]                            ; CODE XREF=randread+112
000000000000779c         mov        rdi, qword [r12+0x10]
00000000000077a1         mov        eax, dword [rax]
00000000000077a3         and        eax, 0x20
00000000000077a6         cmovne     eax, edx
00000000000077a9         mov        dword [r13], eax
00000000000077ad         call       qword [r12+8]
00000000000077b2         mov        rcx, qword [r12]

                     loc_77b6:
00000000000077b6         mov        rdx, rbp                                    ; argument "__n" for method j_fread_unlocked, CODE XREF=randread+49
00000000000077b9         mov        rdi, rbx                                    ; argument "__ptr" for method j_fread_unlocked
00000000000077bc         mov        esi, 0x1                                    ; argument "__size" for method j_fread_unlocked
00000000000077c1         call       j_fread_unlocked                            ; fread_unlocked
00000000000077c6         add        rbx, rax
00000000000077c9         sub        rbp, rax
00000000000077cc         mov        edx, dword [r13]
00000000000077d0         jne        loc_7798

                     loc_77d2:
00000000000077d2         add        rsp, 0x18                                   ; CODE XREF=randread+366
00000000000077d6         pop        rbx
00000000000077d7         pop        rbp
00000000000077d8         pop        r12
00000000000077da         pop        r13
00000000000077dc         pop        r14
00000000000077de         pop        r15
00000000000077e0         ret
                        ; endp
00000000000077e1         align      8

                     loc_77e8:
00000000000077e8         mov        r14, qword [rdi+0x18]                       ; CODE XREF=randread+34
00000000000077ec         lea        rax, qword [rdi+0x838]
00000000000077f3         lea        r13, qword [rdi+0x20]
00000000000077f7         mov        qword [rsp+0x48+var_40], rax
00000000000077fc         cmp        rdx, r14
00000000000077ff         jbe        loc_78e2

                     loc_7805:
0000000000007805         mov        esi, 0x800                                  ; CODE XREF=randread+330
000000000000780a         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
000000000000780d         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000007810         sub        rsi, r14
0000000000007813         add        rsi, qword [rsp+0x48+var_40]                ; argument "__src" for method j_memcpy
0000000000007818         add        rbx, r14
000000000000781b         sub        rbp, r14
000000000000781e         call       j_memcpy                                    ; memcpy
0000000000007823         test       bl, 0x7
0000000000007826         jne        loc_7890

0000000000007828         cmp        rbp, 0x7ff
000000000000782f         jbe        loc_78d3

0000000000007835         lea        r15, qword [rbp-0x800]
000000000000783c         mov        r14, r15
000000000000783f         and        r14d, 0x7ff
0000000000007846         jmp        loc_785c
0000000000007848         align      16

                     loc_7850:
0000000000007850         cmp        r15, r14                                    ; CODE XREF=randread+276
0000000000007853         je         loc_7890

0000000000007855         sub        r15, 0x800

                     loc_785c:
000000000000785c         mov        rsi, rbx                                    ; CODE XREF=randread+230
000000000000785f         mov        rdi, r13
0000000000007862         add        rbx, 0x800
0000000000007869         call       isaac_refill                                ; isaac_refill
000000000000786e         test       r15, r15
0000000000007871         mov        rbp, r15
0000000000007874         jne        loc_7850

0000000000007876         mov        qword [r12+0x18], 0x0
000000000000787f         add        rsp, 0x18
0000000000007883         pop        rbx
0000000000007884         pop        rbp
0000000000007885         pop        r12
0000000000007887         pop        r13
0000000000007889         pop        r14
000000000000788b         pop        r15
000000000000788d         ret
                        ; endp
000000000000788e         align      16

                     loc_7890:
0000000000007890         mov        rsi, qword [rsp+0x48+var_40]                ; CODE XREF=randread+198, randread+243
0000000000007895         mov        rdi, r13
0000000000007898         mov        r14d, 0x800
000000000000789e         call       isaac_refill                                ; isaac_refill
00000000000078a3         cmp        rbp, 0x800
00000000000078aa         ja         loc_7805

                     loc_78b0:
00000000000078b0         mov        r14d, 0x800                                 ; CODE XREF=randread+384

                     loc_78b6:
00000000000078b6         mov        rsi, qword [rsp+0x48+var_40]                ; argument "__src" for method j_memcpy, CODE XREF=randread+404
00000000000078bb         mov        rdx, rbp                                    ; argument "__n" for method j_memcpy
00000000000078be         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
00000000000078c1         sub        r14, rbp
00000000000078c4         call       j_memcpy                                    ; memcpy
00000000000078c9         mov        qword [r12+0x18], r14
00000000000078ce         jmp        loc_77d2

                     loc_78d3:
00000000000078d3         mov        rsi, qword [rsp+0x48+var_40]                ; CODE XREF=randread+207
00000000000078d8         mov        rdi, r13
00000000000078db         call       isaac_refill                                ; isaac_refill
00000000000078e0         jmp        loc_78b0

                     loc_78e2:
00000000000078e2         mov        r15, rax                                    ; CODE XREF=randread+159
00000000000078e5         sub        r15, r14
00000000000078e8         lea        rax, qword [r15+0x800]
00000000000078ef         mov        qword [rsp+0x48+var_40], rax
00000000000078f4         jmp        loc_78b6
00000000000078f6         align      256                                         ; End of unwind block (FDE at 0xc220)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_free:
0000000000007900         push       rbp                                         ; Begin of unwind block (FDE at 0xc284), CODE XREF=randint_all_free+16
0000000000007901         push       rbx
0000000000007902         mov        rdx, 0xffffffffffffffff
0000000000007909         mov        rbx, rdi
000000000000790c         mov        esi, 0x1038
0000000000007911         sub        rsp, 0x8
0000000000007915         mov        rbp, qword [rdi]
0000000000007918         call       j___explicit_bzero_chk                      ; __explicit_bzero_chk
000000000000791d         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
0000000000007920         call       j_free                                      ; free
0000000000007925         test       rbp, rbp
0000000000007928         je         loc_7940

000000000000792a         add        rsp, 0x8
000000000000792e         mov        rdi, rbp
0000000000007931         pop        rbx
0000000000007932         pop        rbp
0000000000007933         jmp        rpl_fclose                                  ; rpl_fclose
0000000000007938         align      64

                     loc_7940:
0000000000007940         add        rsp, 0x8                                    ; CODE XREF=randread_free+40
0000000000007944         xor        eax, eax
0000000000007946         pop        rbx
0000000000007947         pop        rbp
0000000000007948         ret
                        ; endp
0000000000007949         align      16                                          ; End of unwind block (FDE at 0xc284)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isaac_refill:
0000000000007950         mov        rax, qword [rdi+0x810]                      ; Begin of unwind block (FDE at 0xc2bc), CODE XREF=randread+265, randread+318, randread+379
0000000000007957         mov        rdx, qword [rdi+0x800]
000000000000795e         lea        r9, qword [rdi+0x400]
0000000000007965         lea        rcx, qword [rax+1]
0000000000007969         mov        rax, rdi
000000000000796c         mov        qword [rdi+0x810], rcx
0000000000007973         add        rcx, qword [rdi+0x808]
000000000000797a         nop        word [rax+rax]

                     loc_7980:
0000000000007980         mov        r8, rdx                                     ; CODE XREF=isaac_refill+329
0000000000007983         shl        r8, 0x15
0000000000007987         xor        rdx, r8
000000000000798a         mov        r8, qword [rax]
000000000000798d         not        rdx
0000000000007990         add        rdx, qword [rax+0x400]
0000000000007997         mov        r10, r8
000000000000799a         and        r10d, 0x7f8
00000000000079a1         mov        r11, qword [rdi+r10]
00000000000079a5         mov        r10, rdx
00000000000079a8         shr        r10, 0x5
00000000000079ac         add        r11, rdx
00000000000079af         xor        rdx, r10
00000000000079b2         add        rcx, r11
00000000000079b5         mov        qword [rax], rcx
00000000000079b8         shr        rcx, 0x8
00000000000079bc         and        ecx, 0x7f8
00000000000079c2         mov        r11, qword [rdi+rcx]
00000000000079c6         add        r11, r8
00000000000079c9         mov        qword [rsi], r11
00000000000079cc         add        rdx, qword [rax+0x408]
00000000000079d3         mov        rcx, qword [rax+8]
00000000000079d7         mov        r10, rdx
00000000000079da         mov        rdx, rcx
00000000000079dd         and        edx, 0x7f8
00000000000079e3         mov        r8, qword [rdi+rdx]
00000000000079e7         mov        rdx, r10
00000000000079ea         shl        rdx, 0xc
00000000000079ee         xor        rdx, r10
00000000000079f1         add        r8, r10
00000000000079f4         add        r8, r11
00000000000079f7         mov        qword [rax+8], r8
00000000000079fb         shr        r8, 0x8
00000000000079ff         and        r8d, 0x7f8
0000000000007a06         add        rcx, qword [rdi+r8]
0000000000007a0a         mov        qword [rsi+8], rcx
0000000000007a0e         mov        r8, qword [rax+0x10]
0000000000007a12         mov        r11, rcx
0000000000007a15         add        rdx, qword [rax+0x410]
0000000000007a1c         mov        rcx, r8
0000000000007a1f         and        ecx, 0x7f8
0000000000007a25         mov        r10, qword [rdi+rcx]
0000000000007a29         add        r10, rdx
0000000000007a2c         mov        rcx, r10
0000000000007a2f         add        rcx, r11
0000000000007a32         mov        qword [rax+0x10], rcx
0000000000007a36         shr        rcx, 0x8
0000000000007a3a         and        ecx, 0x7f8
0000000000007a40         mov        r10, qword [rdi+rcx]
0000000000007a44         mov        rcx, rdx
0000000000007a47         shr        rcx, 0x21
0000000000007a4b         xor        rdx, rcx
0000000000007a4e         add        r10, r8
0000000000007a51         mov        qword [rsi+0x10], r10
0000000000007a55         mov        rcx, qword [rax+0x18]
0000000000007a59         add        rdx, qword [rax+0x418]
0000000000007a60         mov        r8, rcx
0000000000007a63         and        r8d, 0x7f8
0000000000007a6a         mov        r11, qword [rdi+r8]
0000000000007a6e         add        r11, rdx
0000000000007a71         mov        r8, r11
0000000000007a74         add        r8, r10
0000000000007a77         add        rax, 0x20
0000000000007a7b         add        rsi, 0x20
0000000000007a7f         mov        qword [rax-8], r8
0000000000007a83         shr        r8, 0x8
0000000000007a87         and        r8d, 0x7f8
0000000000007a8e         add        rcx, qword [rdi+r8]
0000000000007a92         mov        qword [rsi-8], rcx
0000000000007a96         cmp        rax, r9
0000000000007a99         jb         loc_7980

0000000000007a9f         lea        r9, qword [rdi+0x800]
0000000000007aa6         nop        word [cs:rax+rax]

                     loc_7ab0:
0000000000007ab0         mov        r8, rdx                                     ; CODE XREF=isaac_refill+633
0000000000007ab3         shl        r8, 0x15
0000000000007ab7         xor        rdx, r8
0000000000007aba         mov        r8, qword [rax]
0000000000007abd         not        rdx
0000000000007ac0         add        rdx, qword [rax-0x400]
0000000000007ac7         mov        r10, r8
0000000000007aca         and        r10d, 0x7f8
0000000000007ad1         mov        r11, qword [rdi+r10]
0000000000007ad5         mov        r10, rdx
0000000000007ad8         shr        r10, 0x5
0000000000007adc         add        r11, rdx
0000000000007adf         xor        rdx, r10
0000000000007ae2         add        rcx, r11
0000000000007ae5         mov        qword [rax], rcx
0000000000007ae8         shr        rcx, 0x8
0000000000007aec         and        ecx, 0x7f8
0000000000007af2         mov        r11, qword [rdi+rcx]
0000000000007af6         add        r11, r8
0000000000007af9         mov        qword [rsi], r11
0000000000007afc         add        rdx, qword [rax-0x3f8]
0000000000007b03         mov        rcx, qword [rax+8]
0000000000007b07         mov        r10, rdx
0000000000007b0a         mov        rdx, rcx
0000000000007b0d         and        edx, 0x7f8
0000000000007b13         mov        r8, qword [rdi+rdx]
0000000000007b17         mov        rdx, r10
0000000000007b1a         shl        rdx, 0xc
0000000000007b1e         xor        rdx, r10
0000000000007b21         add        r8, r10
0000000000007b24         add        r8, r11
0000000000007b27         mov        qword [rax+8], r8
0000000000007b2b         shr        r8, 0x8
0000000000007b2f         and        r8d, 0x7f8
0000000000007b36         add        rcx, qword [rdi+r8]
0000000000007b3a         mov        qword [rsi+8], rcx
0000000000007b3e         mov        r8, qword [rax+0x10]
0000000000007b42         mov        r11, rcx
0000000000007b45         add        rdx, qword [rax-0x3f0]
0000000000007b4c         mov        rcx, r8
0000000000007b4f         and        ecx, 0x7f8
0000000000007b55         mov        r10, qword [rdi+rcx]
0000000000007b59         add        r10, rdx
0000000000007b5c         mov        rcx, r10
0000000000007b5f         add        rcx, r11
0000000000007b62         mov        qword [rax+0x10], rcx
0000000000007b66         shr        rcx, 0x8
0000000000007b6a         and        ecx, 0x7f8
0000000000007b70         mov        r10, qword [rdi+rcx]
0000000000007b74         mov        rcx, rdx
0000000000007b77         shr        rcx, 0x21
0000000000007b7b         xor        rdx, rcx
0000000000007b7e         add        r10, r8
0000000000007b81         mov        qword [rsi+0x10], r10
0000000000007b85         mov        rcx, qword [rax+0x18]
0000000000007b89         add        rdx, qword [rax-0x3e8]
0000000000007b90         mov        r8, rcx
0000000000007b93         and        r8d, 0x7f8
0000000000007b9a         mov        r11, qword [rdi+r8]
0000000000007b9e         add        r11, rdx
0000000000007ba1         mov        r8, r11
0000000000007ba4         add        r8, r10
0000000000007ba7         add        rax, 0x20
0000000000007bab         add        rsi, 0x20
0000000000007baf         mov        qword [rax-8], r8
0000000000007bb3         shr        r8, 0x8
0000000000007bb7         and        r8d, 0x7f8
0000000000007bbe         add        rcx, qword [rdi+r8]
0000000000007bc2         mov        qword [rsi-8], rcx
0000000000007bc6         cmp        rax, r9
0000000000007bc9         jb         loc_7ab0

0000000000007bcf         mov        qword [rdi+0x800], rdx
0000000000007bd6         mov        qword [rdi+0x808], rcx
0000000000007bdd         ret
                        ; endp
0000000000007bde         align      32                                          ; End of unwind block (FDE at 0xc2bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isaac_seed:
0000000000007be0         push       r13                                         ; Begin of unwind block (FDE at 0xc2d0), CODE XREF=randread_new+312
0000000000007be2         push       r12
0000000000007be4         lea        r12, qword [rdi+0x800]
0000000000007beb         push       rbp
0000000000007bec         mov        rdx, rdi
0000000000007bef         push       rbx
0000000000007bf0         mov        rax, rdi
0000000000007bf3         movabs     rcx, 0x98f5704f6c44c0ab
0000000000007bfd         movabs     r10, 0xae985bf2cbfc89ed
0000000000007c07         movabs     rbp, 0x48fe4a0fa5a09315
0000000000007c11         movabs     rsi, 0x82f053db8355e0ce
0000000000007c1b         movabs     r8, 0xb29b2e824a595524
0000000000007c25         movabs     rbx, 0x8c0ea5053d4712a0
0000000000007c2f         movabs     r11, 0xb9f8b322c73ac862
0000000000007c39         movabs     r9, 0x647c4677a2884b7c
0000000000007c43         nop        dword [rax+rax]

                     loc_7c48:
0000000000007c48         add        rsi, qword [rax+0x20]                       ; CODE XREF=isaac_seed+314
0000000000007c4c         add        rcx, qword [rax+0x38]
0000000000007c50         mov        r13, qword [rax]
0000000000007c53         add        rbp, qword [rax+0x28]
0000000000007c57         add        r10, qword [rax+0x30]
0000000000007c5b         sub        r13, rsi
0000000000007c5e         add        r9, r13
0000000000007c61         mov        r13, rcx
0000000000007c64         shr        r13, 0x9
0000000000007c68         add        rcx, r9
0000000000007c6b         xor        rbp, r13
0000000000007c6e         mov        r13, qword [rax+8]
0000000000007c72         sub        r13, rbp
0000000000007c75         add        r11, r13
0000000000007c78         mov        r13, r9
0000000000007c7b         shl        r13, 0x9
0000000000007c7f         add        r9, r11
0000000000007c82         xor        r10, r13
0000000000007c85         mov        r13, qword [rax+0x10]
0000000000007c89         sub        r13, r10
0000000000007c8c         add        rbx, r13
0000000000007c8f         mov        r13, r11
0000000000007c92         shr        r13, 0x17
0000000000007c96         add        r11, rbx
0000000000007c99         xor        rcx, r13
0000000000007c9c         mov        r13, qword [rax+0x18]
0000000000007ca0         sub        r13, rcx
0000000000007ca3         add        r8, r13
0000000000007ca6         mov        r13, rbx
0000000000007ca9         shl        r13, 0xf
0000000000007cad         add        rbx, r8
0000000000007cb0         xor        r9, r13
0000000000007cb3         mov        r13, r8
0000000000007cb6         sub        rsi, r9
0000000000007cb9         shr        r13, 0xe
0000000000007cbd         mov        qword [rax], r9
0000000000007cc0         xor        r11, r13
0000000000007cc3         mov        r13, rsi
0000000000007cc6         add        r8, rsi
0000000000007cc9         sub        rbp, r11
0000000000007ccc         shl        r13, 0x14
0000000000007cd0         mov        qword [rax+8], r11
0000000000007cd4         xor        rbx, r13
0000000000007cd7         lea        r13, qword [rsi+rbp]
0000000000007cdb         mov        rsi, rbp
0000000000007cde         sub        r10, rbx
0000000000007ce1         shr        rsi, 0x11
0000000000007ce5         mov        qword [rax+0x10], rbx
0000000000007ce9         xor        r8, rsi
0000000000007cec         mov        rsi, r10
0000000000007cef         add        rbp, r10
0000000000007cf2         sub        rcx, r8
0000000000007cf5         shl        rsi, 0xe
0000000000007cf9         mov        qword [rax+0x18], r8
0000000000007cfd         xor        rsi, r13
0000000000007d00         add        r10, rcx
0000000000007d03         mov        qword [rax+0x28], rbp
0000000000007d07         mov        qword [rax+0x20], rsi
0000000000007d0b         mov        qword [rax+0x30], r10
0000000000007d0f         add        rax, 0x40
0000000000007d13         mov        qword [rax-8], rcx
0000000000007d17         cmp        r12, rax
0000000000007d1a         jne        loc_7c48

                     loc_7d20:
0000000000007d20         add        rsi, qword [rdx+0x20]                       ; CODE XREF=isaac_seed+530
0000000000007d24         add        rcx, qword [rdx+0x38]
0000000000007d28         mov        r12, qword [rdx]
0000000000007d2b         add        rbp, qword [rdx+0x28]
0000000000007d2f         add        r10, qword [rdx+0x30]
0000000000007d33         sub        r12, rsi
0000000000007d36         add        r9, r12
0000000000007d39         mov        r12, rcx
0000000000007d3c         shr        r12, 0x9
0000000000007d40         add        rcx, r9
0000000000007d43         xor        rbp, r12
0000000000007d46         mov        r12, qword [rdx+8]
0000000000007d4a         sub        r12, rbp
0000000000007d4d         add        r11, r12
0000000000007d50         mov        r12, r9
0000000000007d53         shl        r12, 0x9
0000000000007d57         add        r9, r11
0000000000007d5a         xor        r10, r12
0000000000007d5d         mov        r12, qword [rdx+0x10]
0000000000007d61         sub        r12, r10
0000000000007d64         add        rbx, r12
0000000000007d67         mov        r12, r11
0000000000007d6a         shr        r12, 0x17
0000000000007d6e         add        r11, rbx
0000000000007d71         xor        rcx, r12
0000000000007d74         mov        r12, qword [rdx+0x18]
0000000000007d78         sub        r12, rcx
0000000000007d7b         add        r8, r12
0000000000007d7e         mov        r12, rbx
0000000000007d81         shl        r12, 0xf
0000000000007d85         add        rbx, r8
0000000000007d88         xor        r9, r12
0000000000007d8b         mov        r12, r8
0000000000007d8e         sub        rsi, r9
0000000000007d91         shr        r12, 0xe
0000000000007d95         mov        qword [rdx], r9
0000000000007d98         xor        r11, r12
0000000000007d9b         mov        r12, rsi
0000000000007d9e         add        r8, rsi
0000000000007da1         sub        rbp, r11
0000000000007da4         shl        r12, 0x14
0000000000007da8         mov        qword [rdx+8], r11
0000000000007dac         xor        rbx, r12
0000000000007daf         lea        r12, qword [rsi+rbp]
0000000000007db3         mov        rsi, rbp
0000000000007db6         sub        r10, rbx
0000000000007db9         shr        rsi, 0x11
0000000000007dbd         mov        qword [rdx+0x10], rbx
0000000000007dc1         xor        r8, rsi
0000000000007dc4         mov        rsi, r10
0000000000007dc7         add        rbp, r10
0000000000007dca         sub        rcx, r8
0000000000007dcd         shl        rsi, 0xe
0000000000007dd1         mov        qword [rdx+0x18], r8
0000000000007dd5         xor        rsi, r12
0000000000007dd8         add        r10, rcx
0000000000007ddb         mov        qword [rdx+0x28], rbp
0000000000007ddf         mov        qword [rdx+0x20], rsi
0000000000007de3         mov        qword [rdx+0x30], r10
0000000000007de7         add        rdx, 0x40
0000000000007deb         mov        qword [rdx-8], rcx
0000000000007def         cmp        rax, rdx
0000000000007df2         jne        loc_7d20

0000000000007df8         pop        rbx
0000000000007df9         mov        qword [rdi+0x810], 0x0
0000000000007e04         mov        qword [rdi+0x808], 0x0
0000000000007e0f         pop        rbp
0000000000007e10         mov        qword [rdi+0x800], 0x0
0000000000007e1b         pop        r12
0000000000007e1d         pop        r13
0000000000007e1f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_C0: int32_t, -192
        ;    var_D8: int8_t, -216
        ;    var_150: int32_t, -336
        ;    var_168: int8_t, -360
        ;    var_170: int64_t, -368
        ;    var_174: int32_t, -372


                     renameatu:
0000000000007e20         push       r15                                         ; End of unwind block (FDE at 0xc2d0), Begin of unwind block (FDE at 0xc304), CODE XREF=main+1567
0000000000007e22         push       r14
0000000000007e24         mov        r9d, r8d
0000000000007e27         push       r13
0000000000007e29         push       r12
0000000000007e2b         mov        r14d, edx
0000000000007e2e         push       rbp
0000000000007e2f         push       rbx
0000000000007e30         mov        r12, rsi
0000000000007e33         mov        r13, rcx
0000000000007e36         mov        ebp, r8d
0000000000007e39         mov        r8, rcx
0000000000007e3c         sub        rsp, 0x148
0000000000007e43         mov        ecx, edx
0000000000007e45         mov        rdx, rsi
0000000000007e48         mov        rax, qword [fs:0x28]
0000000000007e51         mov        qword [rsp+0x178+var_40], rax
0000000000007e59         xor        eax, eax
0000000000007e5b         mov        esi, edi
0000000000007e5d         mov        dword [rsp+0x178+var_174], edi
0000000000007e61         mov        edi, 0x13c                                  ; argument "__sysno" for method j_syscall
0000000000007e66         call       j_syscall                                   ; syscall
0000000000007e6b         mov        rbx, rax
0000000000007e6e         mov        r15d, eax
0000000000007e71         call       j___errno_location                          ; __errno_location
0000000000007e76         test       ebx, ebx
0000000000007e78         js         loc_7eb0

                     loc_7e7a:
0000000000007e7a         mov        rdx, qword [rsp+0x178+var_40]               ; CODE XREF=renameatu+166, renameatu+248, renameatu+274, renameatu+363, renameatu+431, renameatu+453, renameatu+608
0000000000007e82         xor        rdx, qword [fs:0x28]
0000000000007e8b         mov        eax, r15d
0000000000007e8e         jne        loc_8085

0000000000007e94         add        rsp, 0x148
0000000000007e9b         pop        rbx
0000000000007e9c         pop        rbp
0000000000007e9d         pop        r12
0000000000007e9f         pop        r13
0000000000007ea1         pop        r14
0000000000007ea3         pop        r15
0000000000007ea5         ret
                        ; endp
0000000000007ea6         align      16

                     loc_7eb0:
0000000000007eb0         mov        r9, rax                                     ; CODE XREF=renameatu+88
0000000000007eb3         mov        eax, dword [rax]
0000000000007eb5         lea        ecx, dword [rax-0x16]
0000000000007eb8         and        ecx, 0xffffffef
0000000000007ebb         setne      bl
0000000000007ebe         cmp        eax, 0x5f
0000000000007ec1         setne      al
0000000000007ec4         and        bl, al
0000000000007ec6         jne        loc_7e7a

0000000000007ec8         test       ebp, ebp
0000000000007eca         jne        loc_7f20

                     loc_7ecc:
0000000000007ecc         mov        rdi, r12                                    ; argument "__s" for method j_strlen, CODE XREF=renameatu+541
0000000000007ecf         mov        qword [rsp+0x178+var_170], r9
0000000000007ed4         call       j_strlen                                    ; strlen
0000000000007ed9         mov        rdi, r13                                    ; argument "__s" for method j_strlen
0000000000007edc         mov        rbp, rax
0000000000007edf         call       j_strlen                                    ; strlen
0000000000007ee4         test       rbp, rbp
0000000000007ee7         je         loc_7f03

0000000000007ee9         test       rax, rax
0000000000007eec         mov        r9, qword [rsp+0x178+var_170]
0000000000007ef1         je         loc_7f03

0000000000007ef3         cmp        byte [r12+rbp-1], 0x2f
0000000000007ef9         je         loc_7f40

0000000000007efb         cmp        byte [r13+rax-1], 0x2f
0000000000007f01         je         loc_7f40

                     loc_7f03:
0000000000007f03         mov        edi, dword [rsp+0x178+var_174]              ; argument "__oldfd" for method j_renameat, CODE XREF=renameatu+199, renameatu+209, renameatu+348, renameatu+524, renameatu+591
0000000000007f07         mov        rcx, r13                                    ; argument "__new" for method j_renameat
0000000000007f0a         mov        edx, r14d                                   ; argument "__newfd" for method j_renameat
0000000000007f0d         mov        rsi, r12                                    ; argument "__old" for method j_renameat
0000000000007f10         call       j_renameat                                  ; renameat
0000000000007f15         mov        r15d, eax
0000000000007f18         jmp        loc_7e7a
0000000000007f1d         align      32

                     loc_7f20:
0000000000007f20         and        ebp, 0xfffffffe                             ; CODE XREF=renameatu+170
0000000000007f23         je         loc_7f90

0000000000007f25         mov        dword [r9], 0x5f
0000000000007f2c         mov        r15d, 0xffffffff
0000000000007f32         jmp        loc_7e7a
0000000000007f37         align      64

                     loc_7f40:
0000000000007f40         mov        esi, dword [rsp+0x178+var_174]              ; argument "__fildes" for method j___fxstatat, CODE XREF=renameatu+217, renameatu+225
0000000000007f44         lea        rcx, qword [rsp+0x178+var_168]              ; argument "__stat_buf" for method j___fxstatat
0000000000007f49         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000007f4f         mov        rdx, r12                                    ; argument "__filename" for method j___fxstatat
0000000000007f52         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000007f57         mov        qword [rsp+0x178+var_170], r9
0000000000007f5c         call       j___fxstatat                                ; __fxstatat
0000000000007f61         test       eax, eax
0000000000007f63         jne        loc_7fc9

0000000000007f65         test       bl, bl
0000000000007f67         mov        r9, qword [rsp+0x178+var_170]
0000000000007f6c         je         loc_7fea

0000000000007f6e         mov        eax, dword [rsp+0x178+var_150]
0000000000007f72         and        eax, 0xf000
0000000000007f77         cmp        eax, 0x4000
0000000000007f7c         je         loc_7f03

0000000000007f7e         mov        dword [r9], 0x2
0000000000007f85         mov        r15d, 0xffffffff
0000000000007f8b         jmp        loc_7e7a

                     loc_7f90:
0000000000007f90         lea        rcx, qword [rsp+0x178+var_D8]               ; argument "__stat_buf" for method j___fxstatat, CODE XREF=renameatu+259
0000000000007f98         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000007f9e         mov        rdx, r13                                    ; argument "__filename" for method j___fxstatat
0000000000007fa1         mov        esi, r14d                                   ; argument "__fildes" for method j___fxstatat
0000000000007fa4         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000007fa9         mov        qword [rsp+0x178+var_170], r9
0000000000007fae         call       j___fxstatat                                ; __fxstatat
0000000000007fb3         test       eax, eax
0000000000007fb5         mov        r9, qword [rsp+0x178+var_170]
0000000000007fba         je         loc_7fd8

0000000000007fbc         mov        eax, dword [r9]
0000000000007fbf         cmp        eax, 0x4b
0000000000007fc2         je         loc_7fd8

0000000000007fc4         cmp        eax, 0x2
0000000000007fc7         je         loc_8038

                     loc_7fc9:
0000000000007fc9         mov        r15d, 0xffffffff                            ; CODE XREF=renameatu+323, renameatu+506, renameatu+522, renameatu+572
0000000000007fcf         jmp        loc_7e7a
0000000000007fd4         align      8

                     loc_7fd8:
0000000000007fd8         mov        dword [r9], 0x11                            ; CODE XREF=renameatu+410, renameatu+418
0000000000007fdf         mov        r15d, 0xffffffff
0000000000007fe5         jmp        loc_7e7a

                     loc_7fea:
0000000000007fea         lea        rcx, qword [rsp+0x178+var_D8]               ; argument "__stat_buf" for method j___fxstatat, CODE XREF=renameatu+332
0000000000007ff2         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000007ff8         mov        rdx, r13                                    ; argument "__filename" for method j___fxstatat
0000000000007ffb         mov        esi, r14d                                   ; argument "__fildes" for method j___fxstatat
0000000000007ffe         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000008003         mov        qword [rsp+0x178+var_170], r9
0000000000008008         call       j___fxstatat                                ; __fxstatat
000000000000800d         test       eax, eax
000000000000800f         mov        r9, qword [rsp+0x178+var_170]
0000000000008014         je         loc_8042

0000000000008016         cmp        dword [r9], 0x2
000000000000801a         jne        loc_7fc9

000000000000801c         mov        eax, dword [rsp+0x178+var_150]
0000000000008020         and        eax, 0xf000
0000000000008025         cmp        eax, 0x4000
000000000000802a         jne        loc_7fc9

000000000000802c         jmp        loc_7f03
0000000000008031         align      8

                     loc_8038:
0000000000008038         mov        ebx, 0x1                                    ; CODE XREF=renameatu+423
000000000000803d         jmp        loc_7ecc

                     loc_8042:
0000000000008042         mov        eax, dword [rsp+0x178+var_C0]               ; CODE XREF=renameatu+500
0000000000008049         and        eax, 0xf000
000000000000804e         cmp        eax, 0x4000
0000000000008053         je         loc_8061

0000000000008055         mov        dword [r9], 0x14
000000000000805c         jmp        loc_7fc9

                     loc_8061:
0000000000008061         mov        eax, dword [rsp+0x178+var_150]              ; CODE XREF=renameatu+563
0000000000008065         and        eax, 0xf000
000000000000806a         cmp        eax, 0x4000
000000000000806f         je         loc_7f03

0000000000008075         mov        dword [r9], 0x15
000000000000807c         or         r15d, 0xffffffff
0000000000008080         jmp        loc_7e7a

                     loc_8085:
0000000000008085         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=renameatu+110
                        ; endp
000000000000808a         align      16                                          ; End of unwind block (FDE at 0xc304)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fd_safer:
0000000000008090         push       r13                                         ; Begin of unwind block (FDE at 0xc354), CODE XREF=open_safer+42
0000000000008092         push       r12
0000000000008094         push       rbp
0000000000008095         push       rbx
0000000000008096         mov        ebx, edi
0000000000008098         sub        rsp, 0x8
000000000000809c         cmp        edi, 0x2
000000000000809f         ja         loc_80c2

00000000000080a1         call       dup_safer                                   ; dup_safer
00000000000080a6         mov        r12d, eax
00000000000080a9         call       j___errno_location                          ; __errno_location
00000000000080ae         mov        r13d, dword [rax]
00000000000080b1         mov        rbp, rax
00000000000080b4         mov        edi, ebx                                    ; argument "__fd" for method j_close
00000000000080b6         call       j_close                                     ; close
00000000000080bb         mov        ebx, r12d
00000000000080be         mov        dword [rbp], r13d

                     loc_80c2:
00000000000080c2         add        rsp, 0x8                                    ; CODE XREF=fd_safer+15
00000000000080c6         mov        eax, ebx
00000000000080c8         pop        rbx
00000000000080c9         pop        rbp
00000000000080ca         pop        r12
00000000000080cc         pop        r13
00000000000080ce         ret
                        ; endp
00000000000080cf         align      16                                          ; End of unwind block (FDE at 0xc354)

                     version_etc_arn:
00000000000080d0         push       r15                                         ; Begin of unwind block (FDE at 0xc38c), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
00000000000080d2         push       r14
00000000000080d4         push       r13
00000000000080d6         push       r12
00000000000080d8         mov        r12, r9
00000000000080db         push       rbp
00000000000080dc         push       rbx
00000000000080dd         mov        rbp, rdi
00000000000080e0         mov        rbx, r8
00000000000080e3         sub        rsp, 0x28
00000000000080e7         test       rsi, rsi
00000000000080ea         je         loc_8208

00000000000080f0         mov        r8, rdx
00000000000080f3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
00000000000080fa         mov        r9, rcx
00000000000080fd         xor        eax, eax
00000000000080ff         mov        rcx, rsi
0000000000008102         mov        esi, 0x1
0000000000008107         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_810c:
000000000000810c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0xad6a, CODE XREF=version_etc_arn+337
0000000000008113         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008115         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000811a         call       j_dcgettext                                 ; dcgettext
000000000000811f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000008126         mov        rcx, rax
0000000000008129         mov        r8d, 0x7e3
000000000000812f         mov        esi, 0x1
0000000000008134         mov        rdi, rbp
0000000000008137         xor        eax, eax
0000000000008139         call       j___fprintf_chk                             ; __fprintf_chk
000000000000813e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000008145         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008147         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000814c         call       j_dcgettext                                 ; dcgettext
0000000000008151         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000008154         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000008157         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000815c         cmp        r12, 0x9
0000000000008160         ja         loc_84a0

0000000000008166         lea        rdx, qword [switch_table_b04c]              ; switch_table_b04c
000000000000816d         movsxd     rax, dword [rdx+r12*4]
0000000000008171         add        rax, rdx
0000000000008174         jmp        rax                                         ; switch statement using table at 0xb04c, with 10 cases, 0x8180,0x81f6,0x8230,0x8288,0x82c8,0x8310,0x8360,0x83b8,0x83e8,0x8450
0000000000008176         align      128

                     loc_8180:
0000000000008180         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000008184         mov        rax, qword [rbx+0x10]
0000000000008188         lea        rsi, qword [aWrittenBySSSns_af60]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000000818f         mov        r8, qword [rbx+8]
0000000000008193         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008198         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000819a         mov        r13, qword [rbx+0x30]
000000000000819e         mov        r12, qword [rbx+0x28]
00000000000081a2         mov        qword [rsp+0x58+var_48], r9
00000000000081a7         mov        r15, qword [rbx+0x20]
00000000000081ab         mov        r14, qword [rbx+0x18]
00000000000081af         mov        qword [rsp+0x58+var_58], rax
00000000000081b3         mov        qword [rsp+0x58+var_50], r8
00000000000081b8         mov        rbx, qword [rbx]
00000000000081bb         call       j_dcgettext                                 ; dcgettext
00000000000081c0         sub        rsp, 0x8

                     loc_81c4:
00000000000081c4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
00000000000081c9         mov        rdx, rax
00000000000081cc         mov        rcx, rbx
00000000000081cf         mov        esi, 0x1
00000000000081d4         mov        rdi, rbp
00000000000081d7         xor        eax, eax
00000000000081d9         push       r9
00000000000081db         push       r13
00000000000081dd         push       r12
00000000000081df         push       r15
00000000000081e1         push       r14
00000000000081e3         mov        r9, qword [rsp+0x88+var_58]
00000000000081e8         mov        r8, qword [rsp+0x88+var_50]
00000000000081ed         call       j___fprintf_chk                             ; __fprintf_chk
00000000000081f2         add        rsp, 0x30

                     loc_81f6:
00000000000081f6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
00000000000081fa         pop        rbx
00000000000081fb         pop        rbp
00000000000081fc         pop        r12
00000000000081fe         pop        r13
0000000000008200         pop        r14
0000000000008202         pop        r15
0000000000008204         ret
                        ; endp
0000000000008205         align      8

                     loc_8208:
0000000000008208         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
000000000000820b         mov        rcx, rdx
000000000000820e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000008215         mov        esi, 0x1
000000000000821a         xor        eax, eax
000000000000821c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000008221         jmp        loc_810c
0000000000008226         align      16

                     loc_8230:
0000000000008230         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000008234         mov        r9, qword [rbx+0x38]
0000000000008238         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000823f         mov        rax, qword [rbx+0x10]
0000000000008243         mov        r8, qword [rbx+8]
0000000000008247         mov        edx, 0x5
000000000000824c         mov        r13, qword [rbx+0x30]
0000000000008250         mov        r12, qword [rbx+0x28]
0000000000008254         mov        r15, qword [rbx+0x20]
0000000000008258         mov        r14, qword [rbx+0x18]
000000000000825c         mov        rbx, qword [rbx]
000000000000825f         mov        qword [rsp+0x58+var_40], r10
0000000000008264         mov        qword [rsp+0x58+var_48], r9
0000000000008269         mov        qword [rsp+0x58+var_58], rax
000000000000826d         mov        qword [rsp+0x58+var_50], r8

                     loc_8272:
0000000000008272         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000008274         call       j_dcgettext                                 ; dcgettext
0000000000008279         mov        r10, qword [rsp+0x58+var_40]
000000000000827e         push       r10
0000000000008280         jmp        loc_81c4
0000000000008285         align      8

                     loc_8288:
0000000000008288         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000000828b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000008292         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008297         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008299         call       j_dcgettext                                 ; dcgettext
000000000000829e         add        rsp, 0x28
00000000000082a2         mov        rcx, rbx
00000000000082a5         mov        rdi, rbp
00000000000082a8         pop        rbx
00000000000082a9         pop        rbp
00000000000082aa         pop        r12
00000000000082ac         pop        r13
00000000000082ae         pop        r14
00000000000082b0         pop        r15
00000000000082b2         mov        rdx, rax
00000000000082b5         mov        esi, 0x1
00000000000082ba         xor        eax, eax
00000000000082bc         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000082c1         align      8

                     loc_82c8:
00000000000082c8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
00000000000082cc         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
00000000000082d3         mov        rbx, qword [rbx]
00000000000082d6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000082db         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000082dd         call       j_dcgettext                                 ; dcgettext
00000000000082e2         add        rsp, 0x28
00000000000082e6         mov        r8, r12
00000000000082e9         mov        rcx, rbx
00000000000082ec         mov        rdi, rbp
00000000000082ef         mov        rdx, rax
00000000000082f2         mov        esi, 0x1
00000000000082f7         pop        rbx
00000000000082f8         pop        rbp
00000000000082f9         pop        r12
00000000000082fb         pop        r13
00000000000082fd         pop        r14
00000000000082ff         pop        r15
0000000000008301         xor        eax, eax
0000000000008303         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000008308         align      16

                     loc_8310:
0000000000008310         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000008314         mov        r12, qword [rbx+8]
0000000000008318         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000831f         mov        rbx, qword [rbx]
0000000000008322         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008327         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008329         call       j_dcgettext                                 ; dcgettext
000000000000832e         add        rsp, 0x28
0000000000008332         mov        r9, r13
0000000000008335         mov        r8, r12
0000000000008338         mov        rcx, rbx
000000000000833b         mov        rdi, rbp
000000000000833e         mov        rdx, rax
0000000000008341         pop        rbx
0000000000008342         pop        rbp
0000000000008343         pop        r12
0000000000008345         pop        r13
0000000000008347         pop        r14
0000000000008349         pop        r15
000000000000834b         mov        esi, 0x1
0000000000008350         xor        eax, eax
0000000000008352         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000008357         align      32

                     loc_8360:
0000000000008360         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000008367         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000836c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000836e         mov        r14, qword [rbx+0x18]
0000000000008372         mov        r13, qword [rbx+0x10]
0000000000008376         mov        r12, qword [rbx+8]
000000000000837a         mov        rbx, qword [rbx]
000000000000837d         call       j_dcgettext                                 ; dcgettext
0000000000008382         sub        rsp, 0x8

                     loc_8386:
0000000000008386         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000008388         mov        rdx, rax
000000000000838b         mov        r9, r13
000000000000838e         mov        r8, r12
0000000000008391         mov        rcx, rbx
0000000000008394         mov        rdi, rbp
0000000000008397         mov        esi, 0x1
000000000000839c         xor        eax, eax
000000000000839e         call       j___fprintf_chk                             ; __fprintf_chk
00000000000083a3         pop        rax
00000000000083a4         pop        rdx
00000000000083a5         add        rsp, 0x28
00000000000083a9         pop        rbx
00000000000083aa         pop        rbp
00000000000083ab         pop        r12
00000000000083ad         pop        r13
00000000000083af         pop        r14
00000000000083b1         pop        r15
00000000000083b3         ret
                        ; endp
00000000000083b4         align      8

                     loc_83b8:
00000000000083b8         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
00000000000083bc         lea        rsi, qword [aWrittenBySSSns_aee0]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
00000000000083c3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000083c8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000083ca         mov        r14, qword [rbx+0x18]
00000000000083ce         mov        r13, qword [rbx+0x10]
00000000000083d2         mov        r12, qword [rbx+8]
00000000000083d6         mov        rbx, qword [rbx]
00000000000083d9         call       j_dcgettext                                 ; dcgettext
00000000000083de         push       r15
00000000000083e0         jmp        loc_8386
00000000000083e2         align      8

                     loc_83e8:
00000000000083e8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
00000000000083ec         mov        r12, qword [rbx+0x28]
00000000000083f0         lea        rsi, qword [aWrittenBySSSns_af08]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
00000000000083f7         mov        r15, qword [rbx+0x20]
00000000000083fb         mov        r14, qword [rbx+0x18]
00000000000083ff         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008404         mov        r13, qword [rbx+0x10]
0000000000008408         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000840a         mov        rbx, qword [rbx]
000000000000840d         mov        qword [rsp+0x58+var_58], r8
0000000000008411         call       j_dcgettext                                 ; dcgettext
0000000000008416         sub        rsp, 0x8
000000000000841a         mov        r9, r13
000000000000841d         push       r12
000000000000841f         push       r15
0000000000008421         push       r14

                     loc_8423:
0000000000008423         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000008428         mov        rcx, rbx
000000000000842b         mov        rdx, rax
000000000000842e         mov        rdi, rbp
0000000000008431         mov        esi, 0x1
0000000000008436         xor        eax, eax
0000000000008438         call       j___fprintf_chk                             ; __fprintf_chk
000000000000843d         add        rsp, 0x20
0000000000008441         add        rsp, 0x28
0000000000008445         pop        rbx
0000000000008446         pop        rbp
0000000000008447         pop        r12
0000000000008449         pop        r13
000000000000844b         pop        r14
000000000000844d         pop        r15
000000000000844f         ret
                        ; endp

                     loc_8450:
0000000000008450         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000008454         mov        r13, qword [rbx+0x30]
0000000000008458         lea        rsi, qword [aWrittenBySSSns_af30]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
000000000000845f         mov        r12, qword [rbx+0x28]
0000000000008463         mov        r15, qword [rbx+0x20]
0000000000008467         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000846c         mov        r14, qword [rbx+0x18]
0000000000008470         mov        r8, qword [rbx+8]
0000000000008474         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008476         mov        qword [rsp+0x58+var_50], r9
000000000000847b         mov        rbx, qword [rbx]
000000000000847e         mov        qword [rsp+0x58+var_58], r8
0000000000008482         call       j_dcgettext                                 ; dcgettext
0000000000008487         push       r13
0000000000008489         push       r12
000000000000848b         push       r15
000000000000848d         push       r14
000000000000848f         mov        r9, qword [rsp+0x78+var_50]
0000000000008494         jmp        loc_8423
0000000000008496         align      32

                     loc_84a0:
00000000000084a0         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
00000000000084a4         mov        r9, qword [rbx+0x38]
00000000000084a8         mov        edx, 0x5
00000000000084ad         mov        rax, qword [rbx+0x10]
00000000000084b1         mov        r8, qword [rbx+8]
00000000000084b5         lea        rsi, qword [aWrittenBySSSns_afc8]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
00000000000084bc         mov        r13, qword [rbx+0x30]
00000000000084c0         mov        r12, qword [rbx+0x28]
00000000000084c4         mov        r15, qword [rbx+0x20]
00000000000084c8         mov        r14, qword [rbx+0x18]
00000000000084cc         mov        qword [rsp+0x58+var_40], r10
00000000000084d1         mov        qword [rsp+0x58+var_48], r9
00000000000084d6         mov        qword [rsp+0x58+var_58], rax
00000000000084da         mov        qword [rsp+0x58+var_50], r8
00000000000084df         mov        rbx, qword [rbx]
00000000000084e2         jmp        loc_8272
00000000000084e7         align      16                                          ; End of unwind block (FDE at 0xc38c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_ar:
00000000000084f0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0xc4a0)
00000000000084f3         cmp        qword [r8], 0x0
00000000000084f7         je         j_version_etc_arn                           ; version_etc_arn

00000000000084f9         nop        dword [rax]

                     loc_8500:
0000000000008500         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000008504         cmp        qword [r8+r9*8], 0x0
0000000000008509         jne        loc_8500

                     j_version_etc_arn:        // version_etc_arn
000000000000850b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000008510         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0xc4a0), Begin of unwind block (FDE at 0xc4b4)
0000000000008514         mov        r10, r8
0000000000008517         xor        r9d, r9d
000000000000851a         mov        rax, qword [fs:0x28]
0000000000008523         mov        qword [rsp+0x68+var_10], rax
0000000000008528         xor        eax, eax
000000000000852a         mov        r8, rsp
000000000000852d         nop        dword [rax]

                     loc_8530:
0000000000008530         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000008533         cmp        eax, 0x2f
0000000000008536         ja         loc_857a

0000000000008538         mov        r11d, eax
000000000000853b         add        r11, qword [r10+0x10]
000000000000853f         add        eax, 0x8
0000000000008542         mov        dword [r10], eax

                     loc_8545:
0000000000008545         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000008548         test       rax, rax
000000000000854b         mov        qword [r8+r9*8], rax
000000000000854f         je         loc_855b

0000000000008551         add        r9, 0x1
0000000000008555         cmp        r9, 0xa
0000000000008559         jne        loc_8530

                     loc_855b:
000000000000855b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000008560         mov        rax, qword [rsp+0x68+var_10]
0000000000008565         xor        rax, qword [fs:0x28]
000000000000856e         jne        loc_8575

0000000000008570         add        rsp, 0x68
0000000000008574         ret
                        ; endp

                     loc_8575:
0000000000008575         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_857a:
000000000000857a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
000000000000857e         lea        rax, qword [r11+8]
0000000000008582         mov        qword [r10+8], rax
0000000000008586         jmp        loc_8545
0000000000008588         align      16                                          ; End of unwind block (FDE at 0xc4b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000008590         push       rbp                                         ; Begin of unwind block (FDE at 0xc4d0), CODE XREF=main+659
0000000000008591         push       rbx
0000000000008592         mov        r10d, 0x20
0000000000008598         xor        r11d, r11d
000000000000859b         sub        rsp, 0xb8
00000000000085a2         mov        rax, qword [fs:0x28]
00000000000085ab         mov        qword [rsp+0xc8+var_50], rax
00000000000085b0         xor        eax, eax
00000000000085b2         lea        rax, qword [rsp+0xc8+arg_0]
00000000000085ba         mov        qword [rsp+0xc8+var_28], r8
00000000000085c2         lea        rbx, qword [rsp+0xc8+arg_0]
00000000000085ca         lea        r8, qword [rsp+0xc8+var_A8]
00000000000085cf         mov        qword [rsp+0xc8+var_20], r9
00000000000085d7         mov        dword [rsp+0xc8+var_C0], 0x20
00000000000085df         mov        qword [rsp+0xc8+var_B8], rax
00000000000085e4         lea        rax, qword [rsp+0xc8+var_48]
00000000000085ec         xor        r9d, r9d
00000000000085ef         mov        qword [rsp+0xc8+var_B0], rax
00000000000085f4         mov        rbp, rax
00000000000085f7         nop        word [rax+rax]

                     loc_8600:
0000000000008600         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000008604         ja         loc_865c

0000000000008606         mov        eax, r10d
0000000000008609         mov        r11d, 0x1
000000000000860f         add        r10d, 0x8
0000000000008613         add        rax, rbp

                     loc_8616:
0000000000008616         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000008619         test       rax, rax
000000000000861c         mov        qword [r8+r9*8], rax
0000000000008620         je         loc_862c

0000000000008622         add        r9, 0x1
0000000000008626         cmp        r9, 0xa
000000000000862a         jne        loc_8600

                     loc_862c:
000000000000862c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000862f         jne        loc_8655

                     loc_8631:
0000000000008631         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000008636         mov        rax, qword [rsp+0xc8+var_50]
000000000000863b         xor        rax, qword [fs:0x28]
0000000000008644         jne        loc_8650

0000000000008646         add        rsp, 0xb8
000000000000864d         pop        rbx
000000000000864e         pop        rbp
000000000000864f         ret
                        ; endp

                     loc_8650:
0000000000008650         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_8655:
0000000000008655         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000865a         jmp        loc_8631

                     loc_865c:
000000000000865c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000865f         add        rbx, 0x8
0000000000008663         jmp        loc_8616
0000000000008665         align      16                                          ; End of unwind block (FDE at 0xc4d0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000008670         push       rbx                                         ; Begin of unwind block (FDE at 0xc4fc)
0000000000008671         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000008678         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000867d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000867f         call       j_dcgettext                                 ; dcgettext
0000000000008684         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
000000000000868b         mov        rsi, rax
000000000000868e         mov        edi, 0x1
0000000000008693         xor        eax, eax
0000000000008695         call       j___printf_chk                              ; __printf_chk
000000000000869a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
00000000000086a1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000086a6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000086a8         call       j_dcgettext                                 ; dcgettext
00000000000086ad         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000086b4         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x96f4
00000000000086bb         mov        rsi, rax
00000000000086be         mov        edi, 0x1
00000000000086c3         xor        eax, eax
00000000000086c5         call       j___printf_chk                              ; __printf_chk
00000000000086ca         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000086d1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
00000000000086d8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000086da         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000086df         call       j_dcgettext                                 ; dcgettext
00000000000086e4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000086e7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000086ea         pop        rbx
00000000000086eb         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
00000000000086f0         push       rbx                                         ; End of unwind block (FDE at 0xc4fc), Begin of unwind block (FDE at 0xc51c), CODE XREF=dopass+147, do_wipefd+312, quotearg_n_options+295, quotearg_alloc_mem+129, randint_new+9, randint_all_new+19, randread_new+79, randread_new+181, randread_new+333, xnmalloc+25, xcharalloc
00000000000086f1         mov        rbx, rdi
00000000000086f4         call       j_malloc                                    ; malloc
00000000000086f9         test       rax, rax
00000000000086fc         jne        loc_8703

00000000000086fe         test       rbx, rbx
0000000000008701         jne        loc_8705

                     loc_8703:
0000000000008703         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000008704         ret
                        ; endp

                     loc_8705:
0000000000008705         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_870a:
000000000000870a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xc51c)
                     xnmalloc:
0000000000008710         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xc538)
0000000000008713         mul        rsi
0000000000008716         mov        rdi, rax
0000000000008719         seto       al
000000000000871c         test       rdi, rdi
000000000000871f         js         loc_872b

0000000000008721         movzx      eax, al
0000000000008724         test       rax, rax
0000000000008727         jne        loc_872b

0000000000008729         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_872b:
000000000000872b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000872f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_8734:
0000000000008734         nop                                                    ; End of unwind block (FDE at 0xc538)
0000000000008736         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000008740         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0xc54c)
                        ; endp
0000000000008742         align      16                                          ; End of unwind block (FDE at 0xc54c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000008750         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0xc560), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000008753         push       rbx
0000000000008754         mov        rbx, rsi
0000000000008757         jne        loc_875e

0000000000008759         test       rdi, rdi
000000000000875c         jne        loc_8778

                     loc_875e:
000000000000875e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000008761         call       j_realloc                                   ; realloc
0000000000008766         test       rax, rax
0000000000008769         jne        loc_8770

000000000000876b         test       rbx, rbx
000000000000876e         jne        loc_8781

                     loc_8770:
0000000000008770         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000008771         ret
                        ; endp
0000000000008772         align      8

                     loc_8778:
0000000000008778         call       j_free                                      ; free, CODE XREF=xrealloc+12
000000000000877d         xor        eax, eax
000000000000877f         pop        rbx
0000000000008780         ret
                        ; endp

                     loc_8781:
0000000000008781         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_8786:
0000000000008786         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0xc560)
                     xnrealloc:
0000000000008790         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0xc584)
0000000000008793         mul        rdx
0000000000008796         mov        rsi, rax
0000000000008799         seto       al
000000000000879c         test       rsi, rsi
000000000000879f         js         loc_87ab

00000000000087a1         movzx      eax, al
00000000000087a4         test       rax, rax
00000000000087a7         jne        loc_87ab

00000000000087a9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_87ab:
00000000000087ab         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
00000000000087af         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_87b4:
00000000000087b4         nop                                                    ; End of unwind block (FDE at 0xc584)
00000000000087b6         nop        word [cs:rax+rax]
                     x2nrealloc:
00000000000087c0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xc598)
00000000000087c3         mov        r9, rdx
00000000000087c6         mov        rcx, qword [rsi]
00000000000087c9         je         loc_8800

00000000000087cb         xor        edx, edx
00000000000087cd         movabs     rax, 0x5555555555555554
00000000000087d7         div        r9
00000000000087da         cmp        rax, rcx
00000000000087dd         jbe        loc_881b

00000000000087df         mov        rax, rcx
00000000000087e2         shr        rax, 0x1
00000000000087e5         lea        rcx, qword [rax+rcx+1]

                     loc_87ea:
00000000000087ea         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
00000000000087ed         imul       rcx, r9
00000000000087f1         mov        rsi, rcx
00000000000087f4         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000087f9         align      2048

                     loc_8800:
0000000000008800         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000008803         je         loc_8828

                     loc_8805:
0000000000008805         mov        rax, rcx                                    ; CODE XREF=sub_8824+28
0000000000008808         mul        r9
000000000000880b         seto       dl
000000000000880e         test       rax, rax
0000000000008811         movzx      edx, dl
0000000000008814         js         loc_881b

0000000000008816         test       rdx, rdx
0000000000008819         je         loc_87ea

                     loc_881b:
000000000000881b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000000881f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_8824:
0000000000008824         nop        dword [rax]
                        ; endp

                     loc_8828:
0000000000008828         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000882a         mov        eax, 0x80
000000000000882f         xor        r8d, r8d
0000000000008832         div        r9
0000000000008835         test       rax, rax
0000000000008838         sete       r8b
000000000000883c         lea        rcx, qword [r8+rax]
0000000000008840         jmp        loc_8805
0000000000008842         align      16                                          ; End of unwind block (FDE at 0xc598)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000008850         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xc5b0)
0000000000008853         mov        rax, qword [rsi]
0000000000008856         je         loc_8880

0000000000008858         movabs     rdx, 0x5555555555555553
0000000000008862         cmp        rax, rdx
0000000000008865         ja         loc_8891

0000000000008867         mov        rdx, rax
000000000000886a         shr        rdx, 0x1
000000000000886d         lea        rax, qword [rdx+rax+1]

                     loc_8872:
0000000000008872         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000008875         mov        rsi, rax
0000000000008878         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000000887d         align      128

                     loc_8880:
0000000000008880         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000008883         mov        edx, 0x80
0000000000008888         cmove      rax, rdx
000000000000888c         test       rax, rax
000000000000888f         jns        loc_8872

                     loc_8891:
0000000000008891         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000008895         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_889a:
000000000000889a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xc5b0)
                     xzalloc:
00000000000088a0         push       rbx                                         ; Begin of unwind block (FDE at 0xc5c8)
00000000000088a1         mov        rbx, rdi
00000000000088a4         call       xmalloc                                     ; xmalloc
00000000000088a9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
00000000000088ac         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000088ae         mov        rdi, rax                                    ; argument "__s" for method j_memset
00000000000088b1         pop        rbx
00000000000088b2         jmp        j_memset                                    ; memset
                        ; endp
00000000000088b7         align      64                                          ; End of unwind block (FDE at 0xc5c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
00000000000088c0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xc5e4)
00000000000088c3         sub        rsp, 0x8
00000000000088c7         mul        rsi
00000000000088ca         seto       dl
00000000000088cd         test       rax, rax
00000000000088d0         js         loc_88e9

00000000000088d2         movzx      edx, dl
00000000000088d5         test       rdx, rdx
00000000000088d8         jne        loc_88e9

00000000000088da         call       j_calloc                                    ; calloc
00000000000088df         test       rax, rax
00000000000088e2         je         loc_88e9

00000000000088e4         add        rsp, 0x8
00000000000088e8         ret
                        ; endp

                     loc_88e9:
00000000000088e9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_88ee:
00000000000088ee         nop                                                    ; End of unwind block (FDE at 0xc5e4)
                        ; endp

                     xmemdup:
00000000000088f0         push       rbp                                         ; Begin of unwind block (FDE at 0xc600), CODE XREF=clone_quoting_options+40, xstrdup+17
00000000000088f1         push       rbx
00000000000088f2         mov        rbp, rdi
00000000000088f5         mov        rdi, rsi
00000000000088f8         mov        rbx, rsi
00000000000088fb         sub        rsp, 0x8
00000000000088ff         call       xmalloc                                     ; xmalloc
0000000000008904         add        rsp, 0x8
0000000000008908         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000890b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000000890e         pop        rbx
000000000000890f         pop        rbp
0000000000008910         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000008913         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000008918         align      32                                          ; End of unwind block (FDE at 0xc600)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000008920         push       rbx                                         ; Begin of unwind block (FDE at 0xc628), CODE XREF=main+903, main+1361, main+1416
0000000000008921         mov        rbx, rdi
0000000000008924         call       j_strlen                                    ; strlen
0000000000008929         mov        rdi, rbx
000000000000892c         lea        rsi, qword [rax+1]
0000000000008930         pop        rbx
0000000000008931         jmp        xmemdup                                     ; xmemdup
0000000000008933         align      64                                          ; End of unwind block (FDE at 0xc628)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000008940         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0xc644), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=do_wipefd+1798, dir_name+19, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000008947         sub        rsp, 0x8
000000000000894b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008950         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008952         call       j_dcgettext                                 ; dcgettext
0000000000008957         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000895d         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0xa768
0000000000008964         mov        rcx, rax
0000000000008967         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000008969         xor        eax, eax
000000000000896b         call       j_error                                     ; error
0000000000008970         call       j_abort                                     ; abort
                        ; endp
0000000000008975         align      128                                         ; End of unwind block (FDE at 0xc644)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     xnumtoumax:
0000000000008980         push       r15                                         ; Begin of unwind block (FDE at 0xc65c), CODE XREF=main+488, xdectoumax+23
0000000000008982         push       r14
0000000000008984         mov        r15, rcx
0000000000008987         push       r13
0000000000008989         push       r12
000000000000898b         mov        r14, rdx
000000000000898e         push       rbp
000000000000898f         push       rbx
0000000000008990         mov        edx, esi
0000000000008992         xor        esi, esi
0000000000008994         mov        r12, rdi
0000000000008997         mov        r13, r9
000000000000899a         sub        rsp, 0x18
000000000000899e         mov        rcx, rsp
00000000000089a1         mov        ebx, dword [rsp+0x48+arg_0]
00000000000089a5         mov        rax, qword [fs:0x28]
00000000000089ae         mov        qword [rsp+0x48+var_40], rax
00000000000089b3         xor        eax, eax
00000000000089b5         call       xstrtoumax                                  ; xstrtoumax
00000000000089ba         test       eax, eax
00000000000089bc         jne        loc_8a50

00000000000089c2         mov        rbp, qword [rsp+0x48+var_48]
00000000000089c6         cmp        rbp, r14
00000000000089c9         jb         loc_89d0

00000000000089cb         cmp        rbp, r15
00000000000089ce         jbe        loc_8a24

                     loc_89d0:
00000000000089d0         call       j___errno_location                          ; __errno_location, CODE XREF=xnumtoumax+73
00000000000089d5         cmp        rbp, 0x40000000
00000000000089dc         mov        r14, rax
00000000000089df         sbb        eax, eax
00000000000089e1         and        eax, 0xffffffd7
00000000000089e4         add        eax, 0x4b
00000000000089e7         mov        dword [r14], eax

                     loc_89ea:
00000000000089ea         mov        rdi, r12                                    ; CODE XREF=xnumtoumax+226, xnumtoumax+234, xnumtoumax+246
00000000000089ed         call       quote                                       ; quote
00000000000089f2         mov        esi, dword [r14]
00000000000089f5         mov        r8, rax
00000000000089f8         mov        eax, 0x0
00000000000089fd         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000008a04         mov        rcx, r13
0000000000008a07         cmp        esi, 0x16
0000000000008a0a         cmove      esi, eax                                    ; argument "__errnum" for method j_error
0000000000008a0d         test       ebx, ebx
0000000000008a0f         mov        eax, 0x1
0000000000008a14         cmove      ebx, eax
0000000000008a17         xor        eax, eax
0000000000008a19         mov        edi, ebx                                    ; argument "__status" for method j_error
0000000000008a1b         call       j_error                                     ; error
0000000000008a20         mov        rbp, qword [rsp+0x48+var_48]

                     loc_8a24:
0000000000008a24         mov        rdx, qword [rsp+0x48+var_40]                ; CODE XREF=xnumtoumax+78
0000000000008a29         xor        rdx, qword [fs:0x28]
0000000000008a32         mov        rax, rbp
0000000000008a35         jne        loc_8a7b

0000000000008a37         add        rsp, 0x18
0000000000008a3b         pop        rbx
0000000000008a3c         pop        rbp
0000000000008a3d         pop        r12
0000000000008a3f         pop        r13
0000000000008a41         pop        r14
0000000000008a43         pop        r15
0000000000008a45         ret
                        ; endp
0000000000008a46         align      16

                     loc_8a50:
0000000000008a50         mov        ebp, eax                                    ; CODE XREF=xnumtoumax+60
0000000000008a52         call       j___errno_location                          ; __errno_location
0000000000008a57         cmp        ebp, 0x1
0000000000008a5a         mov        r14, rax
0000000000008a5d         je         loc_8a70

0000000000008a5f         cmp        ebp, 0x3
0000000000008a62         jne        loc_89ea

0000000000008a64         mov        dword [rax], 0x0
0000000000008a6a         jmp        loc_89ea
0000000000008a6f         align      16

                     loc_8a70:
0000000000008a70         mov        dword [rax], 0x4b                           ; CODE XREF=xnumtoumax+221
0000000000008a76         jmp        loc_89ea

                     loc_8a7b:
0000000000008a7b         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xnumtoumax+181
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xdectoumax:
0000000000008a80         sub        rsp, 0x10                                   ; End of unwind block (FDE at 0xc65c), Begin of unwind block (FDE at 0xc6a8), CODE XREF=main+326
0000000000008a84         push       r9
0000000000008a86         mov        r9, r8
0000000000008a89         mov        r8, rcx
0000000000008a8c         mov        rcx, rdx
0000000000008a8f         mov        rdx, rsi
0000000000008a92         mov        esi, 0xa
0000000000008a97         call       xnumtoumax                                  ; xnumtoumax
0000000000008a9c         add        rsp, 0x18
0000000000008aa0         ret
                        ; endp
0000000000008aa1         align      16                                          ; End of unwind block (FDE at 0xc6a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoumax:
0000000000008ab0         push       r15                                         ; Begin of unwind block (FDE at 0xc6c4), CODE XREF=human_options+170, xnumtoumax+53
0000000000008ab2         push       r14
0000000000008ab4         push       r13
0000000000008ab6         push       r12
0000000000008ab8         push       rbp
0000000000008ab9         push       rbx
0000000000008aba         sub        rsp, 0x28
0000000000008abe         mov        rax, qword [fs:0x28]
0000000000008ac7         mov        qword [rsp+0x58+var_40], rax
0000000000008acc         xor        eax, eax
0000000000008ace         cmp        edx, 0x24
0000000000008ad1         ja         loc_8e35

0000000000008ad7         lea        rax, qword [rsp+0x58+var_48]
0000000000008adc         mov        r15, rsi
0000000000008adf         test       rsi, rsi
0000000000008ae2         mov        rbp, rdi
0000000000008ae5         mov        dword [rsp+0x58+var_50], edx
0000000000008ae9         mov        r14, rcx
0000000000008aec         mov        r13, r8
0000000000008aef         cmove      r15, rax
0000000000008af3         call       j___errno_location                          ; __errno_location
0000000000008af8         mov        dword [rax], 0x0
0000000000008afe         mov        r12, rax
0000000000008b01         movzx      ebx, byte [rbp]
0000000000008b05         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000008b0a         mov        edx, dword [rsp+0x58+var_50]
0000000000008b0e         mov        rsi, qword [rax]
0000000000008b11         mov        rax, rbp
0000000000008b14         jmp        loc_8b27
0000000000008b16         align      32

                     loc_8b20:
0000000000008b20         add        rax, 0x1                                    ; CODE XREF=xstrtoumax+127
0000000000008b24         movzx      ebx, byte [rax]

                     loc_8b27:
0000000000008b27         movzx      ecx, bl                                     ; CODE XREF=xstrtoumax+100
0000000000008b2a         test       byte [rsi+rcx*2+1], 0x20
0000000000008b2f         jne        loc_8b20

0000000000008b31         cmp        bl, 0x2d
0000000000008b34         je         loc_8b88

0000000000008b36         xor        ecx, ecx
0000000000008b38         mov        rsi, r15
0000000000008b3b         mov        rdi, rbp
0000000000008b3e         call       j___strtoul_internal                        ; __strtoul_internal
0000000000008b43         mov        rcx, qword [r15]
0000000000008b46         mov        rbx, rax
0000000000008b49         cmp        rcx, rbp
0000000000008b4c         je         loc_8b78

0000000000008b4e         mov        eax, dword [r12]
0000000000008b52         test       eax, eax
0000000000008b54         je         loc_8bb8

0000000000008b56         cmp        eax, 0x22
0000000000008b59         mov        ebp, 0x1
0000000000008b5e         jne        loc_8b88

                     loc_8b60:
0000000000008b60         test       r13, r13                                    ; CODE XREF=xstrtoumax+266
0000000000008b63         je         loc_8b6e

0000000000008b65         movzx      r12d, byte [rcx]
0000000000008b69         test       r12b, r12b
0000000000008b6c         jne        loc_8be7

                     loc_8b6e:
0000000000008b6e         mov        qword [r14], rbx                            ; CODE XREF=xstrtoumax+179
0000000000008b71         jmp        loc_8b8d
0000000000008b73         align      8

                     loc_8b78:
0000000000008b78         test       r13, r13                                    ; CODE XREF=xstrtoumax+156
0000000000008b7b         mov        qword [rsp+0x58+var_50], rcx
0000000000008b80         jne        loc_8bc0

0000000000008b82         nop        word [rax+rax]

                     loc_8b88:
0000000000008b88         mov        ebp, 0x4                                    ; CODE XREF=xstrtoumax+132, xstrtoumax+174, xstrtoumax+280, xstrtoumax+309

                     loc_8b8d:
0000000000008b8d         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoumax+193, xstrtoumax+535, xstrtoumax+546
0000000000008b92         xor        rdi, qword [fs:0x28]
0000000000008b9b         mov        eax, ebp
0000000000008b9d         jne        loc_8e30

0000000000008ba3         add        rsp, 0x28
0000000000008ba7         pop        rbx
0000000000008ba8         pop        rbp
0000000000008ba9         pop        r12
0000000000008bab         pop        r13
0000000000008bad         pop        r14
0000000000008baf         pop        r15
0000000000008bb1         ret
                        ; endp
0000000000008bb2         align      8

                     loc_8bb8:
0000000000008bb8         xor        ebp, ebp                                    ; CODE XREF=xstrtoumax+164
0000000000008bba         jmp        loc_8b60
0000000000008bbc         align      64

                     loc_8bc0:
0000000000008bc0         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoumax+208
0000000000008bc5         test       r12b, r12b
0000000000008bc8         je         loc_8b88

0000000000008bca         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
0000000000008bce         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000008bd1         xor        ebp, ebp
0000000000008bd3         call       j_strchr                                    ; strchr
0000000000008bd8         test       rax, rax
0000000000008bdb         mov        ebx, 0x1
0000000000008be0         mov        rcx, qword [rsp+0x58+var_50]
0000000000008be5         je         loc_8b88

                     loc_8be7:
0000000000008be7         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoumax+188
0000000000008beb         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000008bee         mov        qword [rsp+0x58+var_50], rcx
0000000000008bf3         call       j_strchr                                    ; strchr
0000000000008bf8         test       rax, rax
0000000000008bfb         mov        rcx, qword [rsp+0x58+var_50]
0000000000008c00         je         loc_8ccc

0000000000008c06         lea        eax, dword [r12-0x45]
0000000000008c0b         cmp        al, 0x2f
0000000000008c0d         ja         loc_8c60

0000000000008c0f         movabs     rdx, 0x814400308945
0000000000008c19         bt         rdx, rax
0000000000008c1d         jae        loc_8c60

0000000000008c1f         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
0000000000008c24         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000008c27         mov        qword [rsp+0x58+var_50], rcx
0000000000008c2c         call       j_strchr                                    ; strchr
0000000000008c31         test       rax, rax
0000000000008c34         mov        rcx, qword [rsp+0x58+var_50]
0000000000008c39         je         loc_8c60

0000000000008c3b         movzx      eax, byte [rcx+1]
0000000000008c3f         cmp        al, 0x44
0000000000008c41         je         loc_8c4f

0000000000008c43         cmp        al, 0x69
0000000000008c45         je         loc_8e18

0000000000008c4b         cmp        al, 0x42
0000000000008c4d         jne        loc_8c60

                     loc_8c4f:
0000000000008c4f         mov        edi, 0x2                                    ; CODE XREF=xstrtoumax+401
0000000000008c54         mov        esi, 0x3e8
0000000000008c59         jmp        loc_8c6a
0000000000008c5b         align      32

                     loc_8c60:
0000000000008c60         mov        edi, 0x1                                    ; CODE XREF=xstrtoumax+349, xstrtoumax+365, xstrtoumax+393, xstrtoumax+413
0000000000008c65         mov        esi, 0x400

                     loc_8c6a:
0000000000008c6a         sub        r12d, 0x42                                  ; CODE XREF=xstrtoumax+425, xstrtoumax+891
0000000000008c6e         cmp        r12b, 0x35
0000000000008c72         ja         loc_8ccc

0000000000008c74         lea        rdx, qword [switch_table_b108]              ; switch_table_b108
0000000000008c7b         movzx      r12d, r12b
0000000000008c7f         movsxd     rax, dword [rdx+r12*4]
0000000000008c83         add        rax, rdx
0000000000008c86         jmp        rax                                         ; switch statement using table at 0xb108, with 54 cases, 0x8c88,0x8cb0,0x8ccc,0x8cd7,0x8ced,0x8d04,0x8d2a,0x8d4f,0x8d6f,0x8d90,0x8db3,0x8dd6,0x8dec

                     loc_8c88:
0000000000008c88         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoumax+470
0000000000008c8b         mul        rsi
0000000000008c8e         jo         loc_8e81

0000000000008c94         xor        r8d, r8d

                     loc_8c97:
0000000000008c97         mul        rsi                                         ; CODE XREF=xstrtoumax+846, xstrtoumax+862, xstrtoumax+987
0000000000008c9a         jo         loc_8e72

0000000000008ca0         mov        rbx, rax

                     loc_8ca3:
0000000000008ca3         or         ebp, r8d                                    ; CODE XREF=xstrtoumax+972
0000000000008ca6         nop        word [cs:rax+rax]

                     loc_8cb0:
0000000000008cb0         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoumax+470, xstrtoumax+571, xstrtoumax+594, xstrtoumax+632, xstrtoumax+712, xstrtoumax+727, xstrtoumax+823
0000000000008cb3         mov        eax, ebp
0000000000008cb5         add        rcx, rdi
0000000000008cb8         or         eax, 0x2
0000000000008cbb         mov        qword [r15], rcx
0000000000008cbe         cmp        byte [rcx], 0x0
0000000000008cc1         mov        qword [r14], rbx
0000000000008cc4         cmovne     ebp, eax
0000000000008cc7         jmp        loc_8b8d

                     loc_8ccc:
0000000000008ccc         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoumax+336, xstrtoumax+450, xstrtoumax+470
0000000000008ccf         or         ebp, 0x2
0000000000008cd2         jmp        loc_8b8d

                     loc_8cd7:
0000000000008cd7         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoumax+470
0000000000008cdc         mov        rax, rdx
0000000000008cdf         mul        rbx
0000000000008ce2         jo         loc_8d7e

0000000000008ce8         add        rbx, rbx
0000000000008ceb         jmp        loc_8cb0

                     loc_8ced:
0000000000008ced         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoumax+470
0000000000008cf2         mov        rax, rdx
0000000000008cf5         mul        rbx
0000000000008cf8         jo         loc_8d7e

0000000000008cfe         shl        rbx, 0x9
0000000000008d02         jmp        loc_8cb0

                     loc_8d04:
0000000000008d04         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoumax+470
0000000000008d0a         xor        r9d, r9d
0000000000008d0d         nop        dword [rax]

                     loc_8d10:
0000000000008d10         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+627
0000000000008d13         mul        rsi
0000000000008d16         mov        rbx, rax
0000000000008d19         jo         loc_8eae

                     loc_8d1f:
0000000000008d1f         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1032
0000000000008d23         jne        loc_8d10

                     loc_8d25:
0000000000008d25         or         ebp, r9d                                    ; CODE XREF=xstrtoumax+669, xstrtoumax+701, xstrtoumax+766, xstrtoumax+801
0000000000008d28         jmp        loc_8cb0

                     loc_8d2a:
0000000000008d2a         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoumax+470
0000000000008d30         xor        r9d, r9d
0000000000008d33         nop        dword [rax+rax]

                     loc_8d38:
0000000000008d38         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+667
0000000000008d3b         mul        rsi
0000000000008d3e         mov        rbx, rax
0000000000008d41         jo         loc_8e90

                     loc_8d47:
0000000000008d47         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1002
0000000000008d4b         jne        loc_8d38

0000000000008d4d         jmp        loc_8d25

                     loc_8d4f:
0000000000008d4f         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoumax+470
0000000000008d55         xor        r9d, r9d

                     loc_8d58:
0000000000008d58         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+699
0000000000008d5b         mul        rsi
0000000000008d5e         mov        rbx, rax
0000000000008d61         jo         loc_8e63

                     loc_8d67:
0000000000008d67         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+957
0000000000008d6b         jne        loc_8d58

0000000000008d6d         jmp        loc_8d25

                     loc_8d6f:
0000000000008d6f         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoumax+470
0000000000008d72         mul        rsi
0000000000008d75         mov        rbx, rax
0000000000008d78         jno        loc_8cb0

                     loc_8d7e:
0000000000008d7e         mov        ebp, 0x1                                    ; CODE XREF=xstrtoumax+562, xstrtoumax+584, xstrtoumax+817
0000000000008d83         or         rbx, 0xffffffffffffffff
0000000000008d87         jmp        loc_8cb0
0000000000008d8c         align      16

                     loc_8d90:
0000000000008d90         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoumax+470
0000000000008d96         xor        r9d, r9d

                     loc_8d99:
0000000000008d99         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+764
0000000000008d9c         mul        rsi
0000000000008d9f         mov        rbx, rax
0000000000008da2         jo         loc_8e9f

                     loc_8da8:
0000000000008da8         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1017
0000000000008dac         jne        loc_8d99

0000000000008dae         jmp        loc_8d25

                     loc_8db3:
0000000000008db3         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoumax+470
0000000000008db9         xor        r9d, r9d

                     loc_8dbc:
0000000000008dbc         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+799
0000000000008dbf         mul        rsi
0000000000008dc2         mov        rbx, rax
0000000000008dc5         jo         loc_8e54

                     loc_8dcb:
0000000000008dcb         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+942
0000000000008dcf         jne        loc_8dbc

0000000000008dd1         jmp        loc_8d25

                     loc_8dd6:
0000000000008dd6         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoumax+470
0000000000008ddb         mov        rax, rdx
0000000000008dde         mul        rbx
0000000000008de1         jo         loc_8d7e

0000000000008de3         shl        rbx, 0xa
0000000000008de7         jmp        loc_8cb0

                     loc_8dec:
0000000000008dec         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoumax+470
0000000000008def         mul        rsi
0000000000008df2         jo         loc_8ebd

0000000000008df8         xor        r8d, r8d

                     loc_8dfb:
0000000000008dfb         mul        rsi                                         ; CODE XREF=xstrtoumax+1047
0000000000008dfe         jno        loc_8c97

0000000000008e04         mov        r8d, 0x1
0000000000008e0a         or         rax, 0xffffffffffffffff
0000000000008e0e         jmp        loc_8c97
0000000000008e13         align      8

                     loc_8e18:
0000000000008e18         xor        edi, edi                                    ; CODE XREF=xstrtoumax+405
0000000000008e1a         cmp        byte [rcx+2], 0x42
0000000000008e1e         mov        esi, 0x400
0000000000008e23         sete       dil
0000000000008e27         lea        edi, dword [rdi+rdi+1]
0000000000008e2b         jmp        loc_8c6a

                     loc_8e30:
0000000000008e30         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoumax+237
                        ; endp

                     loc_8e35:
0000000000008e35         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoumax", CODE XREF=xstrtoumax+33
0000000000008e3c         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
0000000000008e43         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
0000000000008e4a         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
0000000000008e4f         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_8e54:
0000000000008e54         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+789
0000000000008e5a         or         rbx, 0xffffffffffffffff
0000000000008e5e         jmp        loc_8dcb

                     loc_8e63:
0000000000008e63         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+689
0000000000008e69         or         rbx, 0xffffffffffffffff
0000000000008e6d         jmp        loc_8d67

                     loc_8e72:
0000000000008e72         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+490
0000000000008e78         or         rbx, 0xffffffffffffffff
0000000000008e7c         jmp        loc_8ca3

                     loc_8e81:
0000000000008e81         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoumax+478
0000000000008e85         mov        r8d, 0x1
0000000000008e8b         jmp        loc_8c97

                     loc_8e90:
0000000000008e90         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+657
0000000000008e96         or         rbx, 0xffffffffffffffff
0000000000008e9a         jmp        loc_8d47

                     loc_8e9f:
0000000000008e9f         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+754
0000000000008ea5         or         rbx, 0xffffffffffffffff
0000000000008ea9         jmp        loc_8da8

                     loc_8eae:
0000000000008eae         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+617
0000000000008eb4         or         rbx, 0xffffffffffffffff
0000000000008eb8         jmp        loc_8d1f

                     loc_8ebd:
0000000000008ebd         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+834
0000000000008ec3         or         rax, 0xffffffffffffffff
0000000000008ec7         jmp        loc_8dfb
0000000000008ecc         align      16                                          ; End of unwind block (FDE at 0xc6c4)

                     rpl_fclose:
0000000000008ed0         push       r12                                         ; Begin of unwind block (FDE at 0xc714), CODE XREF=randread_free+51, close_stream+21, fopen_safer+65, fopen_safer+134
0000000000008ed2         push       rbp
0000000000008ed3         push       rbx
0000000000008ed4         mov        rbx, rdi
0000000000008ed7         call       j_fileno                                    ; fileno
0000000000008edc         test       eax, eax
0000000000008ede         mov        rdi, rbx
0000000000008ee1         js         loc_8f37

0000000000008ee3         call       j___freading                                ; __freading
0000000000008ee8         test       eax, eax
0000000000008eea         jne        loc_8f18

                     loc_8eec:
0000000000008eec         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
0000000000008eef         call       rpl_fflush                                  ; rpl_fflush
0000000000008ef4         test       eax, eax
0000000000008ef6         je         loc_8f34

0000000000008ef8         call       j___errno_location                          ; __errno_location
0000000000008efd         mov        r12d, dword [rax]
0000000000008f00         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000008f03         mov        rbp, rax
0000000000008f06         call       j_fclose                                    ; fclose
0000000000008f0b         test       r12d, r12d
0000000000008f0e         jne        loc_8f40

                     loc_8f10:
0000000000008f10         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000008f11         pop        rbp
0000000000008f12         pop        r12
0000000000008f14         ret
                        ; endp
0000000000008f15         align      8

                     loc_8f18:
0000000000008f18         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
0000000000008f1b         call       j_fileno                                    ; fileno
0000000000008f20         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000008f22         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000008f27         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000008f29         call       j_lseek                                     ; lseek
0000000000008f2e         cmp        rax, 0xffffffffffffffff
0000000000008f32         jne        loc_8eec

                     loc_8f34:
0000000000008f34         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_8f37:
0000000000008f37         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000008f38         pop        rbp
0000000000008f39         pop        r12
0000000000008f3b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_8f40:
0000000000008f40         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000008f44         mov        eax, 0xffffffff
0000000000008f49         jmp        loc_8f10
0000000000008f4b         align      16                                          ; End of unwind block (FDE at 0xc714)

                     rpl_fcntl:
0000000000008f50         push       r12                                         ; Begin of unwind block (FDE at 0xc74c), CODE XREF=main+816, direct_mode+17, direct_mode+61, dup_safer+9
0000000000008f52         push       rbp
0000000000008f53         mov        ebp, edi
0000000000008f55         push       rbx
0000000000008f56         sub        rsp, 0x50
0000000000008f5a         mov        rax, qword [fs:0x28]
0000000000008f63         mov        qword [rsp+0x68+var_50], rax
0000000000008f68         xor        eax, eax
0000000000008f6a         lea        rax, qword [rsp+0x68+arg_0]
0000000000008f6f         test       esi, esi
0000000000008f71         mov        qword [rsp+0x68+var_38], rdx
0000000000008f76         mov        qword [rsp+0x68+var_30], rcx
0000000000008f7b         mov        qword [rsp+0x68+var_28], r8
0000000000008f80         mov        qword [rsp+0x68+var_60], rax
0000000000008f85         lea        rax, qword [rsp+0x68+var_48]
0000000000008f8a         mov        qword [rsp+0x68+var_20], r9
0000000000008f8f         mov        dword [rsp+0x68+var_68], 0x10
0000000000008f96         mov        qword [rsp+0x68+var_58], rax
0000000000008f9b         je         loc_91a2

0000000000008fa1         cmp        esi, 0x406
0000000000008fa7         jne        loc_8ff0

0000000000008fa9         mov        rax, qword [rsp+0x68+var_58]
0000000000008fae         cmp        dword [have_dupfd_cloexec.3326], 0x0        ; have_dupfd_cloexec.3326
0000000000008fb5         mov        dword [rsp+0x68+var_68], 0x18
0000000000008fbc         mov        r12d, dword [rax+0x10]
0000000000008fc0         mov        edx, r12d
0000000000008fc3         js         loc_90f3

0000000000008fc9         xor        eax, eax
0000000000008fcb         mov        esi, 0x406                                  ; argument "__cmd" for method j_fcntl
0000000000008fd0         call       j_fcntl                                     ; fcntl
0000000000008fd5         test       eax, eax
0000000000008fd7         mov        ebx, eax
0000000000008fd9         js         loc_9168

                     loc_8fdf:
0000000000008fdf         mov        dword [have_dupfd_cloexec.3326], 0x1        ; have_dupfd_cloexec.3326, CODE XREF=rpl_fcntl+544
0000000000008fe9         jmp        loc_9030
0000000000008feb         align      16

                     loc_8ff0:
0000000000008ff0         cmp        esi, 0xb                                    ; CODE XREF=rpl_fcntl+87
0000000000008ff3         je         loc_9020

0000000000008ff5         jg         loc_9050

0000000000008ff7         cmp        esi, 0x4
0000000000008ffa         je         loc_90d0

0000000000009000         jg         loc_90c0

0000000000009006         cmp        esi, 0x2
0000000000009009         je         loc_90d0

000000000000900f         jg         loc_9020

0000000000009011         cmp        esi, 0x1
0000000000009014         jne        loc_9078

0000000000009016         nop        word [cs:rax+rax]

                     loc_9020:
0000000000009020         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl, CODE XREF=rpl_fcntl+163, rpl_fcntl+191, rpl_fcntl+278, rpl_fcntl+344, rpl_fcntl+358, rpl_fcntl+371
0000000000009022         xor        eax, eax
0000000000009024         call       j_fcntl                                     ; fcntl
0000000000009029         mov        ebx, eax
000000000000902b         nop        dword [rax+rax]

                     loc_9030:
0000000000009030         mov        rcx, qword [rsp+0x68+var_50]                ; CODE XREF=rpl_fcntl+153, rpl_fcntl+327, rpl_fcntl+414, rpl_fcntl+432, rpl_fcntl+445, rpl_fcntl+491, rpl_fcntl+524, rpl_fcntl+568, rpl_fcntl+613
0000000000009035         xor        rcx, qword [fs:0x28]
000000000000903e         mov        eax, ebx
0000000000009040         jne        loc_919d

0000000000009046         add        rsp, 0x50
000000000000904a         pop        rbx
000000000000904b         pop        rbp
000000000000904c         pop        r12
000000000000904e         ret
                        ; endp
000000000000904f         align      16

                     loc_9050:
0000000000009050         cmp        esi, 0x407                                  ; CODE XREF=rpl_fcntl+165
0000000000009056         jg         loc_90a0

0000000000009058         cmp        esi, 0x406
000000000000905e         jge        loc_90d0

0000000000009060         cmp        esi, 0x401
0000000000009066         je         loc_9020

0000000000009068         cmp        esi, 0x402
000000000000906e         je         loc_90d0

0000000000009070         cmp        esi, 0x400
0000000000009076         je         loc_90d0

                     loc_9078:
0000000000009078         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+196, rpl_fcntl+356, rpl_fcntl+382
000000000000907b         cmp        eax, 0x2f
000000000000907e         ja         loc_91ba

0000000000009084         add        rax, qword [rsp+0x68+var_58]

                     loc_9089:
0000000000009089         mov        rdx, qword [rax]                            ; CODE XREF=rpl_fcntl+623
000000000000908c         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000000908e         xor        eax, eax
0000000000009090         call       j_fcntl                                     ; fcntl
0000000000009095         mov        ebx, eax
0000000000009097         jmp        loc_9030
0000000000009099         align      32

                     loc_90a0:
00000000000090a0         cmp        esi, 0x409                                  ; CODE XREF=rpl_fcntl+262
00000000000090a6         je         loc_90d0

00000000000090a8         jl         loc_9020

00000000000090ae         cmp        esi, 0x40a
00000000000090b4         jne        loc_9078

00000000000090b6         jmp        loc_9020
00000000000090bb         align      64

                     loc_90c0:
00000000000090c0         cmp        esi, 0x9                                    ; CODE XREF=rpl_fcntl+176
00000000000090c3         je         loc_9020

00000000000090c9         jg         loc_90d0

00000000000090cb         cmp        esi, 0x8
00000000000090ce         jne        loc_9078

                     loc_90d0:
00000000000090d0         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+170, rpl_fcntl+185, rpl_fcntl+270, rpl_fcntl+286, rpl_fcntl+294, rpl_fcntl+342, rpl_fcntl+377
00000000000090d3         cmp        eax, 0x2f
00000000000090d6         ja         loc_91c4

00000000000090dc         add        rax, qword [rsp+0x68+var_58]

                     loc_90e1:
00000000000090e1         mov        edx, dword [rax]                            ; CODE XREF=rpl_fcntl+633
00000000000090e3         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
00000000000090e5         xor        eax, eax
00000000000090e7         call       j_fcntl                                     ; fcntl
00000000000090ec         mov        ebx, eax
00000000000090ee         jmp        loc_9030

                     loc_90f3:
00000000000090f3         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl, CODE XREF=rpl_fcntl+115
00000000000090f5         xor        eax, eax
00000000000090f7         call       j_fcntl                                     ; fcntl
00000000000090fc         test       eax, eax
00000000000090fe         mov        ebx, eax
0000000000009100         js         loc_9030

0000000000009106         cmp        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
000000000000910d         jne        loc_9030

                     loc_9113:
0000000000009113         xor        eax, eax                                    ; CODE XREF=rpl_fcntl+584
0000000000009115         mov        esi, 0x1                                    ; argument "__cmd" for method j_fcntl
000000000000911a         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
000000000000911c         call       j_fcntl                                     ; fcntl
0000000000009121         test       eax, eax
0000000000009123         js         loc_9141

0000000000009125         or         eax, 0x1
0000000000009128         mov        esi, 0x2                                    ; argument "__cmd" for method j_fcntl
000000000000912d         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
000000000000912f         mov        edx, eax
0000000000009131         xor        eax, eax
0000000000009133         call       j_fcntl                                     ; fcntl
0000000000009138         cmp        eax, 0xffffffff
000000000000913b         jne        loc_9030

                     loc_9141:
0000000000009141         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+467
0000000000009146         mov        r12d, dword [rax]
0000000000009149         mov        rbp, rax
000000000000914c         mov        edi, ebx                                    ; argument "__fd" for method j_close
000000000000914e         call       j_close                                     ; close
0000000000009153         mov        ebx, 0xffffffff
0000000000009158         mov        dword [rbp], r12d
000000000000915c         jmp        loc_9030
0000000000009161         align      8

                     loc_9168:
0000000000009168         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+137
000000000000916d         cmp        dword [rax], 0x16
0000000000009170         jne        loc_8fdf

0000000000009176         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000009178         xor        eax, eax
000000000000917a         mov        edx, r12d
000000000000917d         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000000917f         call       j_fcntl                                     ; fcntl
0000000000009184         test       eax, eax
0000000000009186         mov        ebx, eax
0000000000009188         js         loc_9030

000000000000918e         mov        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
0000000000009198         jmp        loc_9113

                     loc_919d:
000000000000919d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_fcntl+240
                        ; endp

                     loc_91a2:
00000000000091a2         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=rpl_fcntl+75
00000000000091a7         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
00000000000091a9         mov        edx, dword [rax+0x10]
00000000000091ac         xor        eax, eax
00000000000091ae         call       j_fcntl                                     ; fcntl
00000000000091b3         mov        ebx, eax
00000000000091b5         jmp        loc_9030

                     loc_91ba:
00000000000091ba         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+302
00000000000091bf         jmp        loc_9089

                     loc_91c4:
00000000000091c4         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+390
00000000000091c9         jmp        loc_90e1
00000000000091ce         align      16                                          ; End of unwind block (FDE at 0xc74c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
00000000000091d0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xc784), CODE XREF=rpl_fclose+31
00000000000091d3         push       rbx
00000000000091d4         mov        rbx, rdi
00000000000091d7         je         loc_91ea

00000000000091d9         call       j___freading                                ; __freading
00000000000091de         test       eax, eax
00000000000091e0         je         loc_91ea

00000000000091e2         test       dword [rbx], 0x100
00000000000091e8         jne        loc_91f8

                     loc_91ea:
00000000000091ea         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
00000000000091ed         pop        rbx
00000000000091ee         jmp        j_fflush                                    ; fflush
                        ; endp
00000000000091f3         align      8

                     loc_91f8:
00000000000091f8         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
00000000000091fb         mov        edx, 0x1
0000000000009200         xor        esi, esi
0000000000009202         call       rpl_fseeko                                  ; rpl_fseeko
0000000000009207         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000920a         pop        rbx
000000000000920b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000009210         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0xc784), Begin of unwind block (FDE at 0xc7a4), CODE XREF=rpl_fflush+50
0000000000009214         cmp        qword [rdi+0x10], rax
0000000000009218         je         loc_9220

                     j_j_fseeko:        // fseeko
000000000000921a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000921f         align      32

                     loc_9220:
0000000000009220         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000009224         cmp        qword [rdi+0x28], rax
0000000000009228         jne        j_j_fseeko                                  ; fseeko

000000000000922a         cmp        qword [rdi+0x48], 0x0
000000000000922f         jne        j_j_fseeko                                  ; fseeko

0000000000009231         push       r12
0000000000009233         push       rbp
0000000000009234         mov        r12d, edx
0000000000009237         push       rbx
0000000000009238         mov        rbp, rsi
000000000000923b         mov        rbx, rdi
000000000000923e         call       j_fileno                                    ; fileno
0000000000009243         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000009246         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000009249         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000924b         call       j_lseek                                     ; lseek
0000000000009250         cmp        rax, 0xffffffffffffffff
0000000000009254         je         loc_9262

0000000000009256         and        dword [rbx], 0xffffffef
0000000000009259         mov        qword [rbx+0x90], rax
0000000000009260         xor        eax, eax

                     loc_9262:
0000000000009262         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000009263         pop        rbp
0000000000009264         pop        r12
0000000000009266         ret
                        ; endp
0000000000009267         align      16                                          ; End of unwind block (FDE at 0xc7a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000009270         push       r13                                         ; Begin of unwind block (FDE at 0xc7d4), CODE XREF=sub_5d30+534
0000000000009272         push       r12
0000000000009274         mov        r13, rsi
0000000000009277         push       rbp
0000000000009278         push       rbx
0000000000009279         mov        rbx, rdi
000000000000927c         mov        r12, rdx
000000000000927f         sub        rsp, 0x18
0000000000009283         mov        rax, qword [fs:0x28]
000000000000928c         mov        qword [rsp+0x38+var_30], rax
0000000000009291         xor        eax, eax
0000000000009293         lea        rax, qword [rsp+0x38+var_34]
0000000000009298         test       rdi, rdi
000000000000929b         cmove      rbx, rax
000000000000929f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
00000000000092a2         call       j_mbrtowc                                   ; mbrtowc
00000000000092a7         cmp        rax, 0xfffffffffffffffd
00000000000092ab         mov        rbp, rax
00000000000092ae         jbe        loc_92d0

00000000000092b0         test       r12, r12
00000000000092b3         je         loc_92d0

00000000000092b5         xor        edi, edi
00000000000092b7         call       hard_locale                                 ; hard_locale
00000000000092bc         test       al, al
00000000000092be         jne        loc_92d0

00000000000092c0         movzx      eax, byte [r13]
00000000000092c5         mov        ebp, 0x1
00000000000092ca         mov        dword [rbx], eax
00000000000092cc         nop        dword [rax]

                     loc_92d0:
00000000000092d0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
00000000000092d5         xor        rdx, qword [fs:0x28]
00000000000092de         mov        rax, rbp
00000000000092e1         jne        loc_92ee

00000000000092e3         add        rsp, 0x18
00000000000092e7         pop        rbx
00000000000092e8         pop        rbp
00000000000092e9         pop        r12
00000000000092eb         pop        r13
00000000000092ed         ret
                        ; endp

                     loc_92ee:
00000000000092ee         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
00000000000092f3         align      256                                         ; End of unwind block (FDE at 0xc7d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000009300         push       r12                                         ; Begin of unwind block (FDE at 0xc814), CODE XREF=close_stdout+13, close_stdout+51
0000000000009302         push       rbp
0000000000009303         mov        rbp, rdi
0000000000009306         push       rbx
0000000000009307         call       j___fpending                                ; __fpending
000000000000930c         mov        ebx, dword [rbp]
000000000000930f         mov        rdi, rbp
0000000000009312         mov        r12, rax
0000000000009315         call       rpl_fclose                                  ; rpl_fclose
000000000000931a         and        ebx, 0x20
000000000000931d         test       ebx, ebx
000000000000931f         jne        loc_9338

0000000000009321         test       eax, eax
0000000000009323         je         loc_932f

0000000000009325         test       r12, r12
0000000000009328         mov        eax, 0xffffffff
000000000000932d         je         loc_9368

                     loc_932f:
000000000000932f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000009330         pop        rbp
0000000000009331         pop        r12
0000000000009333         ret
                        ; endp
0000000000009334         align      8

                     loc_9338:
0000000000009338         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000933a         jne        loc_9358

000000000000933c         call       j___errno_location                          ; __errno_location
0000000000009341         mov        dword [rax], 0x0
0000000000009347         mov        eax, 0xffffffff
000000000000934c         pop        rbx
000000000000934d         pop        rbp
000000000000934e         pop        r12
0000000000009350         ret
                        ; endp
0000000000009351         align      8

                     loc_9358:
0000000000009358         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000009359         mov        eax, 0xffffffff
000000000000935e         pop        rbp
000000000000935f         pop        r12
0000000000009361         ret
                        ; endp
0000000000009362         align      8

                     loc_9368:
0000000000009368         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000936d         cmp        dword [rax], 0x9
0000000000009370         pop        rbx
0000000000009371         pop        rbp
0000000000009372         pop        r12
0000000000009374         setne      al
0000000000009377         movzx      eax, al
000000000000937a         neg        eax
000000000000937c         ret
                        ; endp
000000000000937d         align      128                                         ; End of unwind block (FDE at 0xc814)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fopen_safer:
0000000000009380         push       r12                                         ; Begin of unwind block (FDE at 0xc864), CODE XREF=randread_new+57
0000000000009382         push       rbp
0000000000009383         mov        rbp, rsi
0000000000009386         push       rbx
0000000000009387         call       j_fopen                                     ; fopen
000000000000938c         test       rax, rax
000000000000938f         mov        rbx, rax
0000000000009392         je         loc_93a1

0000000000009394         mov        rdi, rax                                    ; argument "__stream" for method j_fileno
0000000000009397         call       j_fileno                                    ; fileno
000000000000939c         cmp        eax, 0x2
000000000000939f         jbe        loc_93b0

                     loc_93a1:
00000000000093a1         mov        rax, rbx                                    ; CODE XREF=fopen_safer+18, fopen_safer+91, fopen_safer+115, fopen_safer+145
00000000000093a4         pop        rbx
00000000000093a5         pop        rbp
00000000000093a6         pop        r12
00000000000093a8         ret
                        ; endp
00000000000093a9         align      16

                     loc_93b0:
00000000000093b0         mov        edi, eax                                    ; CODE XREF=fopen_safer+31
00000000000093b2         call       dup_safer                                   ; dup_safer
00000000000093b7         test       eax, eax
00000000000093b9         mov        r12d, eax
00000000000093bc         js         loc_93f8

00000000000093be         mov        rdi, rbx
00000000000093c1         call       rpl_fclose                                  ; rpl_fclose
00000000000093c6         test       eax, eax
00000000000093c8         jne        loc_93dd

00000000000093ca         mov        rsi, rbp                                    ; argument "__modes" for method j_fdopen
00000000000093cd         mov        edi, r12d                                   ; argument "__fd" for method j_fdopen
00000000000093d0         call       j_fdopen                                    ; fdopen
00000000000093d5         test       rax, rax
00000000000093d8         mov        rbx, rax
00000000000093db         jne        loc_93a1

                     loc_93dd:
00000000000093dd         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+72
00000000000093e2         mov        ebp, dword [rax]
00000000000093e4         mov        rbx, rax
00000000000093e7         mov        edi, r12d                                   ; argument "__fd" for method j_close
00000000000093ea         call       j_close                                     ; close
00000000000093ef         mov        dword [rbx], ebp
00000000000093f1         xor        ebx, ebx
00000000000093f3         jmp        loc_93a1
00000000000093f5         align      8

                     loc_93f8:
00000000000093f8         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+60
00000000000093fd         mov        r12d, dword [rax]
0000000000009400         mov        rbp, rax
0000000000009403         mov        rdi, rbx
0000000000009406         call       rpl_fclose                                  ; rpl_fclose
000000000000940b         xor        ebx, ebx
000000000000940d         mov        dword [rbp], r12d
0000000000009411         jmp        loc_93a1
0000000000009413         align      32                                          ; End of unwind block (FDE at 0xc864)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000009420         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xc894), CODE XREF=rpl_mbrtowc+71
0000000000009424         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000009426         call       j_setlocale                                 ; setlocale
000000000000942b         mov        rdx, rax
000000000000942e         mov        eax, 0x1
0000000000009433         test       rdx, rdx
0000000000009436         je         loc_9455

0000000000009438         lea        rdi, qword [__PRETTY_FUNCTION__.4162+11]    ; 0xb1eb
000000000000943f         mov        ecx, 0x2
0000000000009444         mov        rsi, rdx
0000000000009447         rep  cmpsb byte [rsi], byte [rdi]
0000000000009449         seta       cl
000000000000944c         sbb        cl, 0x0
000000000000944f         xor        eax, eax
0000000000009451         test       cl, cl
0000000000009453         jne        loc_9460

                     loc_9455:
0000000000009455         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000009459         ret
                        ; endp
000000000000945a         align      32

                     loc_9460:
0000000000009460         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000009467         mov        ecx, 0x6
000000000000946c         mov        rsi, rdx
000000000000946f         rep  cmpsb byte [rsi], byte [rdi]
0000000000009471         seta       al
0000000000009474         sbb        al, 0x0
0000000000009476         test       al, al
0000000000009478         setne      al
000000000000947b         add        rsp, 0x8
000000000000947f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000009480         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0xc894), Begin of unwind block (FDE at 0xc8b4), CODE XREF=gettext_quote.part.1+11
0000000000009484         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000009489         call       j_nl_langinfo                               ; nl_langinfo
000000000000948e         test       rax, rax
0000000000009491         je         loc_94b0

0000000000009493         cmp        byte [rax], 0x0
0000000000009496         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000949d         cmove      rax, rdx
00000000000094a1         add        rsp, 0x8
00000000000094a5         ret
                        ; endp
00000000000094a6         align      16

                     loc_94b0:
00000000000094b0         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
00000000000094b7         add        rsp, 0x8
00000000000094bb         ret
                        ; endp
00000000000094bc         align      64                                          ; End of unwind block (FDE at 0xc8b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dup_safer:
00000000000094c0         mov        edx, 0x3                                    ; Begin of unwind block (FDE at 0xc8d4), CODE XREF=fd_safer+17, fopen_safer+50
00000000000094c5         xor        esi, esi
00000000000094c7         xor        eax, eax
00000000000094c9         jmp        rpl_fcntl                                   ; rpl_fcntl
                        ; endp
00000000000094ce         align      16                                          ; End of unwind block (FDE at 0xc8d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
00000000000094d0         push       r15                                         ; Begin of unwind block (FDE at 0xc8ec), DATA XREF=_start+22
00000000000094d2         push       r14
00000000000094d4         mov        r15, rdx
00000000000094d7         push       r13
00000000000094d9         push       r12
00000000000094db         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
00000000000094e2         push       rbp
00000000000094e3         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
00000000000094ea         push       rbx
00000000000094eb         mov        r13d, edi
00000000000094ee         mov        r14, rsi
00000000000094f1         sub        rbp, r12
00000000000094f4         sub        rsp, 0x8
00000000000094f8         sar        rbp, 0x3
00000000000094fc         call       _init                                       ; _init
0000000000009501         test       rbp, rbp
0000000000009504         je         loc_9526

0000000000009506         xor        ebx, ebx
0000000000009508         nop        dword [rax+rax]

                     loc_9510:
0000000000009510         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000009513         mov        rsi, r14
0000000000009516         mov        edi, r13d
0000000000009519         call       qword [r12+rbx*8]
000000000000951d         add        rbx, 0x1
0000000000009521         cmp        rbp, rbx
0000000000009524         jne        loc_9510

                     loc_9526:
0000000000009526         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
000000000000952a         pop        rbx
000000000000952b         pop        rbp
000000000000952c         pop        r12
000000000000952e         pop        r13
0000000000009530         pop        r14
0000000000009532         pop        r15
0000000000009534         ret
                        ; endp
0000000000009535         align      64                                          ; End of unwind block (FDE at 0xc8ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000009540         ret                                                    ; Begin of unwind block (FDE at 0xc934), DATA XREF=_start+15
                        ; endp
0000000000009542         align      16                                          ; End of unwind block (FDE at 0xc934)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000009550         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0xc94c), __dso_handle, CODE XREF=main+125, main+744
0000000000009557         xor        esi, esi
0000000000009559         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000955e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0xc94c)
000000000000955f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x9560; 0x9569[ (9 bytes)
        ; File offset : [38240; 38249[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000009560         sub        rsp, 0x8
0000000000009564         add        rsp, 0x8
0000000000009568         ret
                        ; endp
0000000000009569         db  0x00 ; '.'
000000000000956a         db  0x00 ; '.'
000000000000956b         db  0x00 ; '.'
000000000000956c         db  0x00 ; '.'
000000000000956d         db  0x00 ; '.'
000000000000956e         db  0x00 ; '.'
000000000000956f         db  0x00 ; '.'
0000000000009570         db  0x00 ; '.'
0000000000009571         db  0x00 ; '.'
0000000000009572         db  0x00 ; '.'
0000000000009573         db  0x00 ; '.'
0000000000009574         db  0x00 ; '.'
0000000000009575         db  0x00 ; '.'
0000000000009576         db  0x00 ; '.'
0000000000009577         db  0x00 ; '.'
0000000000009578         db  0x00 ; '.'
0000000000009579         db  0x00 ; '.'
000000000000957a         db  0x00 ; '.'
000000000000957b         db  0x00 ; '.'
000000000000957c         db  0x00 ; '.'
000000000000957d         db  0x00 ; '.'
000000000000957e         db  0x00 ; '.'
000000000000957f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x9580; 0xb1f9[ (7289 bytes)
        ; File offset : [38272; 45561[ (7289 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000009580         db  0x01 ; '.'
0000000000009581         db  0x00 ; '.'
0000000000009582         db  0x02 ; '.'
0000000000009583         db  0x00 ; '.'
                     aSFdatasyncFail:
0000000000009584         db         "%s: fdatasync failed", 0                   ; DATA XREF=dosync+152
                     aSFsyncFailed:
0000000000009599         db         "%s: fsync failed", 0                       ; DATA XREF=dosync+75
                     aSCannotRewind:
00000000000095aa         db         "%s: cannot rewind", 0                      ; DATA XREF=dopass+242
                     aSPassLuluS:
00000000000095bc         db         "%s: pass %lu/%lu (%s)...", 0               ; DATA XREF=dopass+1232
                     aSFileTooLarge:
00000000000095d5         db         "%s: file too large", 0                     ; DATA XREF=dopass+1105
                     aSLseekFailed:
00000000000095e8         db         "%s: lseek failed", 0                       ; DATA XREF=dopass+1004
                     aSPassLuluSs:
00000000000095f9         db         "%s: pass %lu/%lu (%s)...%s", 0             ; DATA XREF=dopass+2033
                     a02x02x02x:
0000000000009614         db         "%02x%02x%02x", 0                           ; DATA XREF=dopass+588
                     aSFstatFailed:
0000000000009621         db         "%s: fstat failed", 0                       ; DATA XREF=do_wipefd+528
                     aSInvalidFileTy:
0000000000009632         db         "%s: invalid file type", 0                  ; DATA XREF=do_wipefd+158
                     aSFileHasNegati:
0000000000009648         db         "%s: file has negative size", 0             ; DATA XREF=do_wipefd+895
                     aSErrorTruncati:
0000000000009663         db         "%s: error truncating", 0                   ; DATA XREF=do_wipefd+1150
                     aShred:
0000000000009678         db         "shred", 0                                  ; DATA XREF=main+647, usage+603, usage+924, usage+1108, usage+1127, usage+1161
000000000000967e         db  0x5b ; '['                                         ; DATA XREF=usage+615
000000000000967f         db  0x00 ; '.'
                     aTestInvocation:
0000000000009680         db         "test invocation", 0                        ; DATA XREF=usage+654
                     aMulticallInvoc:
0000000000009690         db         "Multi-call invocation", 0                  ; DATA XREF=usage+702
                     aSha224sum:
00000000000096a6         db         "sha224sum", 0                              ; DATA XREF=usage+719
                     aSha2Utilities:
00000000000096b0         db         "sha2 utilities", 0                         ; DATA XREF=usage+731
                     aSha256sum:
00000000000096bf         db         "sha256sum", 0                              ; DATA XREF=usage+622
                     aSha384sum:
00000000000096c9         db         "sha384sum", 0                              ; DATA XREF=usage+666
                     aSha512sum:
00000000000096d3         db         "sha512sum", 0                              ; DATA XREF=usage+690
                     aNsOnlineHelpSn:
00000000000096dd         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+810
00000000000096f4         db  0x47 ; 'G'                                         ; DATA XREF=main+640, usage+838, usage+1031, emit_bug_reporting_address+68
00000000000096f5         db  0x4e ; 'N'
00000000000096f6         db  0x55 ; 'U'
00000000000096f7         db  0x20 ; ' '
                     aCoreutils:
00000000000096f8         db         "coreutils", 0                              ; DATA XREF=main+94, main+106, usage+678
0000000000009702         db  0x65 ; 'e'                                         ; DATA XREF=usage+877, usage+1070
0000000000009703         db  0x6e ; 'n'
0000000000009704         db  0x5f ; '_'
0000000000009705         db  0x00 ; '.'
                     aFullDocumentat:
0000000000009706         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+905, usage+1094
                     aUsrlocalsharel:
0000000000009721         db         "/usr/local/share/locale", 0                ; DATA XREF=main+87
                     aInvalidNumberO:
0000000000009739         db         "invalid number of passes", 0               ; DATA XREF=main+275
                     aRemove:
0000000000009752         db         "--remove", 0                               ; DATA XREF=main+549
                     aInvalidFileSiz:
000000000000975b         db         "invalid file size", 0                      ; DATA XREF=main+432
                     aCbbkkmgtpezy0:
000000000000976d         db         "cbBkKMGTPEZY0", 0                          ; DATA XREF=main+462
                     aColinPlumb:
000000000000977b         db         "Colin Plumb", 0                            ; DATA XREF=main+633
                     aFnsuvxz:
0000000000009787         db         "fn:s:uvxz", 0                              ; DATA XREF=main+152
                     aMissingFileOpe:
0000000000009791         db         "missing file operand", 0                   ; DATA XREF=main+2140
                     aSFcntlFailed:
00000000000097a6         db         "%s: fcntl failed", 0                       ; DATA XREF=main+1246
                     aSFailedToClose:
00000000000097b7         db         "%s: failed to close", 0                    ; DATA XREF=main+1194, main+1747
                     aSRemoving:
00000000000097cb         db         "%s: removing", 0                           ; DATA XREF=main+1883
                     aCoreutils831sr:
00000000000097d8         db         "../coreutils-8.31/src/shred.c", 0          ; DATA XREF=main+2190
                     aSRenamedToS:
00000000000097f6         db         "%s: renamed to %s", 0                      ; DATA XREF=main+2007
                     aSFailedToRemov:
0000000000009808         db         "%s: failed to remove", 0                   ; DATA XREF=main+1831
                     aSRemoved:
000000000000981d         db         "%s: removed", 0                            ; DATA XREF=main+2092
                     aExact:
0000000000009829         db         "exact", 0
                     aForce:
000000000000982f         db         "force", 0
                     aIterations:
0000000000009835         db         "iterations", 0
                     aRandomsource:
0000000000009840         db         "random-source", 0
                     aVerbose:
000000000000984e         db         "verbose", 0
                     aZero:
0000000000009856         db         "zero", 0
                     aHelp:
000000000000985b         db         "help", 0
                     aVersion:
0000000000009860         db         "version", 0
                     aUnlink:
0000000000009868         db         "unlink", 0
                     aWipe:
000000000000986f         db         "wipe", 0
                     aWipesync:
0000000000009874         db         "wipesync", 0
000000000000987d         align      128
                     aSErrorWritingA:
0000000000009880         db         "%s: error writing at offset %s", 0         ; DATA XREF=dopass+883
000000000000989f         align      32
                     aSPassLuluSssD:
00000000000098a0         db         "%s: pass %lu/%lu (%s)...%s/%s %d%%", 0     ; DATA XREF=dopass+1677
00000000000098c3         align      8
                     aTrySHelpForMor:
00000000000098c8         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
00000000000098ef         align      16
                     aUsageSOptionFi:
00000000000098f0         db         "Usage: %s [OPTION]... FILE...\n", 0        ; DATA XREF=usage+93
000000000000990f         align      16
                     aOverwriteTheSp:
0000000000009910         db         "Overwrite the specified FILE(s) repeatedly, in order to make it harder\nfor even very expensive hardware probing to recover the data.\n", 0 ; DATA XREF=usage+132
0000000000009996         align      8
                     aNifFileIsShred:
0000000000009998         db         "\nIf FILE is -, shred standard output.\n", 0 ; DATA XREF=usage+169
00000000000099bf         align      64
                     aNmandatoryArgu:
00000000000099c0         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+206
0000000000009a0b         align      16
                     aFForceChangePe:
0000000000009a10         db         "  -f, --force    change permissions to allow writing if necessary\n  -n, --iterations=N  overwrite N times instead of the default (%d)\n      --random-source=FILE  get random bytes from FILE\n  -s, --size=N   shred this many bytes (suffixes like K, M, G accep" ; DATA XREF=usage+236
0000000000009b10         db         "ted)\n", 0
0000000000009b16         align      8
                     aUDeallocateAnd:
0000000000009b18         db         "  -u             deallocate and remove file after overwriting\n      --remove[=HOW]  like -u but give control on HOW to delete;  See below\n  -v, --verbose  show progress\n  -x, --exact    do not round file sizes up to the next full block;\n                   " ; DATA XREF=usage+282
0000000000009c18         db         "this is the default for non-regular files\n  -z, --zero     add a final overwrite with zeros to hide shredding\n", 0
0000000000009c87         align      8
                     aHelpDisplayThi:
0000000000009c88         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+319
0000000000009cb5         align      8
                     aVersionOutputV:
0000000000009cb8         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+356
0000000000009cee         align      16
                     aNdeleteFilesIf:
0000000000009cf0         db         "\nDelete FILE(s) if --remove (-u) is specified.  The default is not to remove\nthe files because it is common to operate on device files like /dev/hda,\nand those files usually should not be removed.\nThe optional HOW parameter indicates how to remove a direct" ; DATA XREF=usage+393
0000000000009df0         db         "ory entry:\n'unlink' => use a standard unlink call.\n'wipe' => also first obfuscate bytes in the name.\n'wipesync' => also sync each obfuscated byte to disk.\nThe default mode is 'wipesync', but note it can be expensive.\n\n", 0
0000000000009ecb         align      16
                     aCautionNoteTha:
0000000000009ed0         db         "CAUTION: Note that shred relies on a very important assumption:\nthat the file system overwrites data in place.  This is the traditional\nway to do things, but many modern file system designs do not satisfy this\nassumption.  The following are examples of fil" ; DATA XREF=usage+430
0000000000009fd0         db         "e systems on which shred is\nnot effective, or is not guaranteed to be effective in all file system modes:\n\n", 0
000000000000a03c         align      64
                     aLogstructuredO:
000000000000a040         db         "* log-structured or journaled file systems, such as those supplied with\nAIX and Solaris (and JFS, ReiserFS, XFS, Ext3, etc.)\n\n* file systems that write redundant data and carry on even if some writes\nfail, such as RAID-based file systems\n\n* file systems th" ; DATA XREF=usage+467
000000000000a140         db         "at make snapshots, such as Network Appliance's NFS server\n\n", 0
000000000000a17c         align      128
                     aFileSystemsTha:
000000000000a180         db         "* file systems that cache in temporary locations, such as NFS\nversion 3 clients\n\n* compressed file systems\n\n", 0 ; DATA XREF=usage+504
000000000000a1ed         align      16
                     aInTheCaseOfExt:
000000000000a1f0         db         "In the case of ext3 file systems, the above disclaimer applies\n(and shred is thus of limited effectiveness) only in data=journal mode,\nwhich journals file data in addition to just metadata.  In both the\ndata=ordered (default) and data=writeback modes, shre" ; DATA XREF=usage+541
000000000000a2f0         db         "d works as usual.\nExt3 journaling modes can be changed by adding the data=something option\nto the mount options for a particular file system in the /etc/fstab file,\nas documented in the mount man page (man mount).\n\n", 0
                     aInAdditionFile:
000000000000a3c8         db         "In addition, file system backups and remote mirrors may contain copies\nof the file that cannot be removed, and that will allow a shredded file\nto be recovered later.\n", 0 ; DATA XREF=usage+578
000000000000a46f         align      16
                     aHttpswwwgnuorg:
000000000000a470         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+831, usage+931, usage+1024, usage+1134, emit_bug_reporting_address+61
                     aReportAnyTrans:
000000000000a498         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1175
000000000000a4df         align      32
                     aOrAvailableLoc:
000000000000a4e0         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+974
000000000000a513         align      8
                     aMultipleRandom:
000000000000a518         db         "multiple random sources specified", 0      ; DATA XREF=main+2266
000000000000a53a         align      64
                     aSCannotShredAp:
000000000000a540         db         "%s: cannot shred append-only file descriptor", 0 ; DATA XREF=main+1037
000000000000a56d         align      16
                     aSFailedToOpenF:
000000000000a570         db         "%s: failed to open for writing", 0         ; DATA XREF=main+1097
000000000000a58f         align      32
                     __PRETTY_FUNCTION__.7286:
000000000000a5a0         db         "incname", 0                                ; DATA XREF=main+2183
000000000000a5a8         align      64
                     nameset:
000000000000a5c0         db         "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_.", 0 ; DATA XREF=main+1623
000000000000a601         db  0x00 ; '.'
000000000000a602         db  0x00 ; '.'
000000000000a603         db  0x00 ; '.'
000000000000a604         db  0x00 ; '.'
000000000000a605         db  0x00 ; '.'
000000000000a606         db  0x00 ; '.'
000000000000a607         db  0x00 ; '.'
000000000000a608         db  0x00 ; '.'
000000000000a609         db  0x00 ; '.'
000000000000a60a         db  0x00 ; '.'
000000000000a60b         db  0x00 ; '.'
000000000000a60c         db  0x00 ; '.'
000000000000a60d         db  0x00 ; '.'
000000000000a60e         db  0x00 ; '.'
000000000000a60f         db  0x00 ; '.'
000000000000a610         db  0x00 ; '.'
000000000000a611         db  0x00 ; '.'
000000000000a612         db  0x00 ; '.'
000000000000a613         db  0x00 ; '.'
000000000000a614         db  0x00 ; '.'
000000000000a615         db  0x00 ; '.'
000000000000a616         db  0x00 ; '.'
000000000000a617         db  0x00 ; '.'
000000000000a618         db  0x00 ; '.'
000000000000a619         db  0x00 ; '.'
000000000000a61a         db  0x00 ; '.'
000000000000a61b         db  0x00 ; '.'
000000000000a61c         db  0x00 ; '.'
000000000000a61d         db  0x00 ; '.'
000000000000a61e         db  0x00 ; '.'
000000000000a61f         db  0x00 ; '.'
                     patterns:
000000000000a620         db  0xfe ; '.'                                         ; DATA XREF=do_wipefd+411
000000000000a621         db  0xff ; '.'
000000000000a622         db  0xff ; '.'
000000000000a623         db  0xff ; '.'
000000000000a624         db  0x02 ; '.'                                         ; DATA XREF=do_wipefd+432
000000000000a625         db  0x00 ; '.'
000000000000a626         db  0x00 ; '.'
000000000000a627         db  0x00 ; '.'
000000000000a628         db  0x00 ; '.'
000000000000a629         db  0x00 ; '.'
000000000000a62a         db  0x00 ; '.'
000000000000a62b         db  0x00 ; '.'
000000000000a62c         db  0xff ; '.'
000000000000a62d         db  0x0f ; '.'
000000000000a62e         db  0x00 ; '.'
000000000000a62f         db  0x00 ; '.'
000000000000a630         db  0x02 ; '.'
000000000000a631         db  0x00 ; '.'
000000000000a632         db  0x00 ; '.'
000000000000a633         db  0x00 ; '.'
000000000000a634         db  0x55 ; 'U'
000000000000a635         db  0x05 ; '.'
000000000000a636         db  0x00 ; '.'
000000000000a637         db  0x00 ; '.'
000000000000a638         db  0xaa ; '.'
000000000000a639         db  0x0a ; '.'
000000000000a63a         db  0x00 ; '.'
000000000000a63b         db  0x00 ; '.'
000000000000a63c         db  0xff ; '.'
000000000000a63d         db  0xff ; '.'
000000000000a63e         db  0xff ; '.'
000000000000a63f         db  0xff ; '.'
000000000000a640         db  0x06 ; '.'
000000000000a641         db  0x00 ; '.'
000000000000a642         db  0x00 ; '.'
000000000000a643         db  0x00 ; '.'
000000000000a644         db  0x49 ; 'I'
000000000000a645         db  0x02 ; '.'
000000000000a646         db  0x00 ; '.'
000000000000a647         db  0x00 ; '.'
000000000000a648         db  0x92 ; '.'
000000000000a649         db  0x04 ; '.'
000000000000a64a         db  0x00 ; '.'
000000000000a64b         db  0x00 ; '.'
000000000000a64c         db  0xdb ; '.'
000000000000a64d         db  0x06 ; '.'
000000000000a64e         db  0x00 ; '.'
000000000000a64f         db  0x00 ; '.'
000000000000a650         db  0x24 ; '$'
000000000000a651         db  0x09 ; '.'
000000000000a652         db  0x00 ; '.'
000000000000a653         db  0x00 ; '.'
000000000000a654         db  0x6d ; 'm'
000000000000a655         db  0x0b ; '.'
000000000000a656         db  0x00 ; '.'
000000000000a657         db  0x00 ; '.'
000000000000a658         db  0xb6 ; '.'
000000000000a659         db  0x0d ; '.'
000000000000a65a         db  0x00 ; '.'
000000000000a65b         db  0x00 ; '.'
000000000000a65c         db  0x0c ; '.'
000000000000a65d         db  0x00 ; '.'
000000000000a65e         db  0x00 ; '.'
000000000000a65f         db  0x00 ; '.'
000000000000a660         db  0x11 ; '.'
000000000000a661         db  0x01 ; '.'
000000000000a662         db  0x00 ; '.'
000000000000a663         db  0x00 ; '.'
000000000000a664         db  0x22 ; '"'
000000000000a665         db  0x02 ; '.'
000000000000a666         db  0x00 ; '.'
000000000000a667         db  0x00 ; '.'
000000000000a668         db  0x33 ; '3'
000000000000a669         db  0x03 ; '.'
000000000000a66a         db  0x00 ; '.'
000000000000a66b         db  0x00 ; '.'
000000000000a66c         db  0x44 ; 'D'
000000000000a66d         db  0x04 ; '.'
000000000000a66e         db  0x00 ; '.'
000000000000a66f         db  0x00 ; '.'
000000000000a670         db  0x66 ; 'f'
000000000000a671         db  0x06 ; '.'
000000000000a672         db  0x00 ; '.'
000000000000a673         db  0x00 ; '.'
000000000000a674         db  0x77 ; 'w'
000000000000a675         db  0x07 ; '.'
000000000000a676         db  0x00 ; '.'
000000000000a677         db  0x00 ; '.'
000000000000a678         db  0x88 ; '.'
000000000000a679         db  0x08 ; '.'
000000000000a67a         db  0x00 ; '.'
000000000000a67b         db  0x00 ; '.'
000000000000a67c         db  0x99 ; '.'
000000000000a67d         db  0x09 ; '.'
000000000000a67e         db  0x00 ; '.'
000000000000a67f         db  0x00 ; '.'
000000000000a680         db  0xbb ; '.'
000000000000a681         db  0x0b ; '.'
000000000000a682         db  0x00 ; '.'
000000000000a683         db  0x00 ; '.'
000000000000a684         db  0xcc ; '.'
000000000000a685         db  0x0c ; '.'
000000000000a686         db  0x00 ; '.'
000000000000a687         db  0x00 ; '.'
000000000000a688         db  0xdd ; '.'
000000000000a689         db  0x0d ; '.'
000000000000a68a         db  0x00 ; '.'
000000000000a68b         db  0x00 ; '.'
000000000000a68c         db  0xee ; '.'
000000000000a68d         db  0x0e ; '.'
000000000000a68e         db  0x00 ; '.'
000000000000a68f         db  0x00 ; '.'
000000000000a690         db  0xff ; '.'
000000000000a691         db  0xff ; '.'
000000000000a692         db  0xff ; '.'
000000000000a693         db  0xff ; '.'
000000000000a694         db  0x08 ; '.'
000000000000a695         db  0x00 ; '.'
000000000000a696         db  0x00 ; '.'
000000000000a697         db  0x00 ; '.'
000000000000a698         db  0x00 ; '.'
000000000000a699         db  0x10 ; '.'
000000000000a69a         db  0x00 ; '.'
000000000000a69b         db  0x00 ; '.'
000000000000a69c         db  0x49 ; 'I'
000000000000a69d         db  0x12 ; '.'
000000000000a69e         db  0x00 ; '.'
000000000000a69f         db  0x00 ; '.'
000000000000a6a0         db  0x92 ; '.'
000000000000a6a1         db  0x14 ; '.'
000000000000a6a2         db  0x00 ; '.'
000000000000a6a3         db  0x00 ; '.'
000000000000a6a4         db  0xdb ; '.'
000000000000a6a5         db  0x16 ; '.'
000000000000a6a6         db  0x00 ; '.'
000000000000a6a7         db  0x00 ; '.'
000000000000a6a8         db  0x24 ; '$'
000000000000a6a9         db  0x19 ; '.'
000000000000a6aa         db  0x00 ; '.'
000000000000a6ab         db  0x00 ; '.'
000000000000a6ac         db  0x6d ; 'm'
000000000000a6ad         db  0x1b ; '.'
000000000000a6ae         db  0x00 ; '.'
000000000000a6af         db  0x00 ; '.'
000000000000a6b0         db  0xb6 ; '.'
000000000000a6b1         db  0x1d ; '.'
000000000000a6b2         db  0x00 ; '.'
000000000000a6b3         db  0x00 ; '.'
000000000000a6b4         db  0xff ; '.'
000000000000a6b5         db  0x1f ; '.'
000000000000a6b6         db  0x00 ; '.'
000000000000a6b7         db  0x00 ; '.'
000000000000a6b8         db  0x0e ; '.'
000000000000a6b9         db  0x00 ; '.'
000000000000a6ba         db  0x00 ; '.'
000000000000a6bb         db  0x00 ; '.'
000000000000a6bc         db  0x11 ; '.'
000000000000a6bd         db  0x11 ; '.'
000000000000a6be         db  0x00 ; '.'
000000000000a6bf         db  0x00 ; '.'
000000000000a6c0         db  0x22 ; '"'
000000000000a6c1         db  0x12 ; '.'
000000000000a6c2         db  0x00 ; '.'
000000000000a6c3         db  0x00 ; '.'
000000000000a6c4         db  0x33 ; '3'
000000000000a6c5         db  0x13 ; '.'
000000000000a6c6         db  0x00 ; '.'
000000000000a6c7         db  0x00 ; '.'
000000000000a6c8         db  0x44 ; 'D'
000000000000a6c9         db  0x14 ; '.'
000000000000a6ca         db  0x00 ; '.'
000000000000a6cb         db  0x00 ; '.'
000000000000a6cc         db  0x55 ; 'U'
000000000000a6cd         db  0x15 ; '.'
000000000000a6ce         db  0x00 ; '.'
000000000000a6cf         db  0x00 ; '.'
000000000000a6d0         db  0x66 ; 'f'
000000000000a6d1         db  0x16 ; '.'
000000000000a6d2         db  0x00 ; '.'
000000000000a6d3         db  0x00 ; '.'
000000000000a6d4         db  0x77 ; 'w'
000000000000a6d5         db  0x17 ; '.'
000000000000a6d6         db  0x00 ; '.'
000000000000a6d7         db  0x00 ; '.'
000000000000a6d8         db  0x88 ; '.'
000000000000a6d9         db  0x18 ; '.'
000000000000a6da         db  0x00 ; '.'
000000000000a6db         db  0x00 ; '.'
000000000000a6dc         db  0x99 ; '.'
000000000000a6dd         db  0x19 ; '.'
000000000000a6de         db  0x00 ; '.'
000000000000a6df         db  0x00 ; '.'
000000000000a6e0         db  0xaa ; '.'
000000000000a6e1         db  0x1a ; '.'
000000000000a6e2         db  0x00 ; '.'
000000000000a6e3         db  0x00 ; '.'
000000000000a6e4         db  0xbb ; '.'
000000000000a6e5         db  0x1b ; '.'
000000000000a6e6         db  0x00 ; '.'
000000000000a6e7         db  0x00 ; '.'
000000000000a6e8         db  0xcc ; '.'
000000000000a6e9         db  0x1c ; '.'
000000000000a6ea         db  0x00 ; '.'
000000000000a6eb         db  0x00 ; '.'
000000000000a6ec         db  0xdd ; '.'
000000000000a6ed         db  0x1d ; '.'
000000000000a6ee         db  0x00 ; '.'
000000000000a6ef         db  0x00 ; '.'
000000000000a6f0         db  0xee ; '.'
000000000000a6f1         db  0x1e ; '.'
000000000000a6f2         db  0x00 ; '.'
000000000000a6f3         db  0x00 ; '.'
000000000000a6f4         db  0xff ; '.'
000000000000a6f5         db  0xff ; '.'
000000000000a6f6         db  0xff ; '.'
000000000000a6f7         db  0xff ; '.'
000000000000a6f8         db  0x00 ; '.'
000000000000a6f9         db  0x00 ; '.'
000000000000a6fa         db  0x00 ; '.'
000000000000a6fb         db  0x00 ; '.'
000000000000a6fc         db  0x00 ; '.'
000000000000a6fd         db  0x00 ; '.'
000000000000a6fe         db  0x00 ; '.'
000000000000a6ff         db  0x00 ; '.'
                     remove_methods:
000000000000a700         db  0x01 ; '.'                                         ; DATA XREF=main+542, main+567
000000000000a701         db  0x00 ; '.'
000000000000a702         db  0x00 ; '.'
000000000000a703         db  0x00 ; '.'
000000000000a704         db  0x02 ; '.'
000000000000a705         db  0x00 ; '.'
000000000000a706         db  0x00 ; '.'
000000000000a707         db  0x00 ; '.'
000000000000a708         db  0x03 ; '.'
000000000000a709         db  0x00 ; '.'
000000000000a70a         db  0x00 ; '.'
000000000000a70b         db  0x00 ; '.'
                     a831:
000000000000a70c         db         "8.31", 0                                   ; DATA XREF=Version
                     aInvalidArgumen:
000000000000a711         db         "invalid argument %s for %s", 0             ; DATA XREF=argmatch_invalid+96
                     aAmbiguousArgum:
000000000000a72c         db         "ambiguous argument %s for %s", 0           ; DATA XREF=argmatch_invalid+21
                     aValidArguments:
000000000000a749         db         "Valid arguments are:", 0                   ; DATA XREF=argmatch_valid+18
                     aNS:
000000000000a75e         db         "\n  - %s", 0                               ; DATA XREF=argmatch_valid+102
000000000000a766         db  0x2c ; ','                                         ; DATA XREF=argmatch_valid+181
000000000000a767         db  0x20 ; ' '
000000000000a768         db  0x25 ; '%'                                         ; DATA XREF=main+2244, close_stdout+143, xalloc_die+29
000000000000a769         db  0x73 ; 's'
000000000000a76a         db  0x00 ; '.'
                     aWriteError:
000000000000a76b         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
000000000000a777         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108, xnumtoumax+125
                     a0lf:
000000000000a77e         db         "%.0Lf", 0                                  ; DATA XREF=human_readable+784, human_readable+1865
                     a1lf:
000000000000a784         db         "%.1Lf", 0                                  ; DATA XREF=human_readable+417, human_readable+1780
                     aBlocksize:
000000000000a78a         db         "BLOCK_SIZE", 0                             ; DATA XREF=human_options+320
                     aBlocksize_a795:        // aBlocksize
000000000000a795         db         "BLOCKSIZE", 0                              ; DATA XREF=human_options+344
                     aPosixlycorrect:
000000000000a79f         db         "POSIXLY_CORRECT", 0                        ; DATA XREF=human_options+269, human_options+368
                     aEeggkkmmppttyy:
000000000000a7af         db         "eEgGkKmMpPtTyYzZ0", 0                      ; DATA XREF=human_options+152
                     aHumanreadable:
000000000000a7c1         db         "human-readable", 0
000000000000a7d0         db  0x73 ; 's'
000000000000a7d1         db  0x69 ; 'i'
000000000000a7d2         db  0x00 ; '.'
000000000000a7d3         db  0x00 ; '.'
000000000000a7d4         db  0x00 ; '.'
000000000000a7d5         db  0x00 ; '.'
000000000000a7d6         db  0x00 ; '.'
000000000000a7d7         db  0x00 ; '.'
                     block_size_opts:
000000000000a7d8         db  0xb0 ; '.'                                         ; DATA XREF=human_options+60, human_options+91
000000000000a7d9         db  0x00 ; '.'
000000000000a7da         db  0x00 ; '.'
000000000000a7db         db  0x00 ; '.'
000000000000a7dc         db  0x90 ; '.'
000000000000a7dd         db  0x00 ; '.'
000000000000a7de         db  0x00 ; '.'
000000000000a7df         db  0x00 ; '.'
                     power_letter:
000000000000a7e0         db  0x00 ; '.'                                         ; DATA XREF=human_readable+972
000000000000a7e1         db  0x4b ; 'K'
000000000000a7e2         db  0x4d ; 'M'
000000000000a7e3         db  0x47 ; 'G'
000000000000a7e4         db  0x54 ; 'T'
000000000000a7e5         db  0x50 ; 'P'
000000000000a7e6         db  0x45 ; 'E'
000000000000a7e7         db  0x5a ; 'Z'
000000000000a7e8         db  0x59 ; 'Y'
000000000000a7e9         db  0x00 ; '.'
000000000000a7ea         db  0x00 ; '.'
000000000000a7eb         db  0x00 ; '.'
                     dword_a7ec:
000000000000a7ec         dd         0x5f000000                                  ; DATA XREF=adjust_value.part.0
                     dword_a7f0:
000000000000a7f0         dd         0x5f800000                                  ; DATA XREF=adjust_value.part.0+66, adjust_value.part.0+192, human_readable+243, human_readable+268, human_readable+290
                     dword_a7f4:
000000000000a7f4         dd         0x41200000                                  ; DATA XREF=human_readable+508, human_readable+1851, human_readable+1928
000000000000a7f8         db  0x00 ; '.'
000000000000a7f9         db  0x00 ; '.'
000000000000a7fa         db  0x00 ; '.'
000000000000a7fb         db  0x00 ; '.'
000000000000a7fc         db  0x00 ; '.'
000000000000a7fd         db  0x00 ; '.'
000000000000a7fe         db  0x00 ; '.'
000000000000a7ff         db  0x00 ; '.'
000000000000a800         db  0xff ; '.'                                         ; DATA XREF=human_readable+393, human_readable+766, human_readable+1936
000000000000a801         db  0xff ; '.'
000000000000a802         db  0xff ; '.'
000000000000a803         db  0xff ; '.'
000000000000a804         db  0xff ; '.'
000000000000a805         db  0xff ; '.'
000000000000a806         db  0xff ; '.'
000000000000a807         db  0xff ; '.'
000000000000a808         db  0x3e ; '>'
000000000000a809         db  0x40 ; '@'
000000000000a80a         db  0x00 ; '.'
000000000000a80b         db  0x00 ; '.'
000000000000a80c         db  0x00 ; '.'
000000000000a80d         db  0x00 ; '.'
000000000000a80e         db  0x00 ; '.'
000000000000a80f         db  0x00 ; '.'
                     aANullArgv0WasP:
000000000000a810         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
000000000000a848         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
000000000000a850         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
000000000000a851         db  0x74 ; 't'
000000000000a852         db  0x2d ; '-'                                         ; DATA XREF=main+911
000000000000a853         db  0x00 ; '.'
000000000000a854         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
000000000000a855         db  0x80 ; '.'
000000000000a856         db  0x98 ; '.'
000000000000a857         db  0x00 ; '.'
000000000000a858         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
000000000000a859         db  0x80 ; '.'
000000000000a85a         db  0x99 ; '.'
000000000000a85b         db  0x00 ; '.'
000000000000a85c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
000000000000a85d         db  0x07 ; '.'
000000000000a85e         db  0x65 ; 'e'
000000000000a85f         db  0x00 ; '.'
000000000000a860         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
000000000000a861         db  0xaf ; '.'
000000000000a862         db  0x00 ; '.'
000000000000a863         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_5d30+1451, sub_5d30+1493, sub_5d30+2429
000000000000a864         db  0x00 ; '.'
000000000000a865         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_5d30+132, sub_5d30+1338, sub_5d30+1670, sub_5d30+1697, sub_5d30+2352
000000000000a866         db  0x00 ; '.'
000000000000a867         db  0x60 ; '`'                                         ; DATA XREF=sub_5d30+1627, sub_5d30+1654
000000000000a868         db  0x00 ; '.'
                     aLiteral:
000000000000a869         db         "literal", 0
                     aShell:
000000000000a871         db         "shell", 0
                     aShellalways:
000000000000a877         db         "shell-always", 0
000000000000a884         db  0x73 ; 's'
000000000000a885         db  0x68 ; 'h'
000000000000a886         db  0x65 ; 'e'
000000000000a887         db  0x6c ; 'l'
000000000000a888         db  0x6c ; 'l'
000000000000a889         db  0x2d ; '-'
                     aEscape:
000000000000a88a         db         "escape", 0
                     aShellescapealw:
000000000000a891         db         "shell-escape-always", 0
                     aCmaybe:
000000000000a8a5         db         "c-maybe", 0
                     aClocale:
000000000000a8ad         db         "clocale", 0
000000000000a8b5         align      64
                     switch_table_a8c0:        // switch_table
000000000000a8c0         dd         quotearg_buffer_restyled.loc_642a-switch_table_a8c0, quotearg_buffer_restyled.loc_5683-switch_table_a8c0, quotearg_buffer_restyled.loc_6658-switch_table_a8c0, quotearg_buffer_restyled.loc_6464-switch_table_a8c0 ; switch table used at 0x5681 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
000000000000a8d0         dd         quotearg_buffer_restyled.loc_6254-switch_table_a8c0, quotearg_buffer_restyled.loc_62b0-switch_table_a8c0, quotearg_buffer_restyled.loc_6305-switch_table_a8c0, quotearg_buffer_restyled.loc_634a-switch_table_a8c0
000000000000a8e0         dd         3 dup (quotearg_buffer_restyled.loc_6384-switch_table_a8c0)
000000000000a8ec         db  0x14 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000a8ed         db  0xb1 ; '.'
000000000000a8ee         db  0xff ; '.'
000000000000a8ef         db  0xff ; '.'
000000000000a8f0         db  0xfc ; '.'
000000000000a8f1         db  0xb1 ; '.'
000000000000a8f2         db  0xff ; '.'
000000000000a8f3         db  0xff ; '.'
000000000000a8f4         db  0xfc ; '.'
000000000000a8f5         db  0xb1 ; '.'
000000000000a8f6         db  0xff ; '.'
000000000000a8f7         db  0xff ; '.'
000000000000a8f8         db  0xfc ; '.'
000000000000a8f9         db  0xb1 ; '.'
000000000000a8fa         db  0xff ; '.'
000000000000a8fb         db  0xff ; '.'
000000000000a8fc         db  0xfc ; '.'
000000000000a8fd         db  0xb1 ; '.'
000000000000a8fe         db  0xff ; '.'
000000000000a8ff         db  0xff ; '.'
000000000000a900         db  0xfc ; '.'
000000000000a901         db  0xb1 ; '.'
000000000000a902         db  0xff ; '.'
000000000000a903         db  0xff ; '.'
000000000000a904         db  0xfc ; '.'
000000000000a905         db  0xb1 ; '.'
000000000000a906         db  0xff ; '.'
000000000000a907         db  0xff ; '.'
000000000000a908         db  0x54 ; 'T'
000000000000a909         db  0xb1 ; '.'
000000000000a90a         db  0xff ; '.'
000000000000a90b         db  0xff ; '.'
000000000000a90c         db  0x5c ; '\'
000000000000a90d         db  0xb0 ; '.'
000000000000a90e         db  0xff ; '.'
000000000000a90f         db  0xff ; '.'
000000000000a910         db  0x1c ; '.'
000000000000a911         db  0xb0 ; '.'
000000000000a912         db  0xff ; '.'
000000000000a913         db  0xff ; '.'
000000000000a914         db  0xe4 ; '.'
000000000000a915         db  0xb1 ; '.'
000000000000a916         db  0xff ; '.'
000000000000a917         db  0xff ; '.'
000000000000a918         db  0xd4 ; '.'
000000000000a919         db  0xb1 ; '.'
000000000000a91a         db  0xff ; '.'
000000000000a91b         db  0xff ; '.'
000000000000a91c         db  0xc4 ; '.'
000000000000a91d         db  0xb1 ; '.'
000000000000a91e         db  0xff ; '.'
000000000000a91f         db  0xff ; '.'
000000000000a920         db  0xb4 ; '.'
000000000000a921         db  0xb1 ; '.'
000000000000a922         db  0xff ; '.'
000000000000a923         db  0xff ; '.'
000000000000a924         db  0xfc ; '.'
000000000000a925         db  0xb1 ; '.'
000000000000a926         db  0xff ; '.'
000000000000a927         db  0xff ; '.'
000000000000a928         db  0xfc ; '.'
000000000000a929         db  0xb1 ; '.'
000000000000a92a         db  0xff ; '.'
000000000000a92b         db  0xff ; '.'
000000000000a92c         db  0xfc ; '.'
000000000000a92d         db  0xb1 ; '.'
000000000000a92e         db  0xff ; '.'
000000000000a92f         db  0xff ; '.'
000000000000a930         db  0xfc ; '.'
000000000000a931         db  0xb1 ; '.'
000000000000a932         db  0xff ; '.'
000000000000a933         db  0xff ; '.'
000000000000a934         db  0xfc ; '.'
000000000000a935         db  0xb1 ; '.'
000000000000a936         db  0xff ; '.'
000000000000a937         db  0xff ; '.'
000000000000a938         db  0xfc ; '.'
000000000000a939         db  0xb1 ; '.'
000000000000a93a         db  0xff ; '.'
000000000000a93b         db  0xff ; '.'
000000000000a93c         db  0xfc ; '.'
000000000000a93d         db  0xb1 ; '.'
000000000000a93e         db  0xff ; '.'
000000000000a93f         db  0xff ; '.'
000000000000a940         db  0xfc ; '.'
000000000000a941         db  0xb1 ; '.'
000000000000a942         db  0xff ; '.'
000000000000a943         db  0xff ; '.'
000000000000a944         db  0xfc ; '.'
000000000000a945         db  0xb1 ; '.'
000000000000a946         db  0xff ; '.'
000000000000a947         db  0xff ; '.'
000000000000a948         db  0xfc ; '.'
000000000000a949         db  0xb1 ; '.'
000000000000a94a         db  0xff ; '.'
000000000000a94b         db  0xff ; '.'
000000000000a94c         db  0xfc ; '.'
000000000000a94d         db  0xb1 ; '.'
000000000000a94e         db  0xff ; '.'
000000000000a94f         db  0xff ; '.'
000000000000a950         db  0xfc ; '.'
000000000000a951         db  0xb1 ; '.'
000000000000a952         db  0xff ; '.'
000000000000a953         db  0xff ; '.'
000000000000a954         db  0xfc ; '.'
000000000000a955         db  0xb1 ; '.'
000000000000a956         db  0xff ; '.'
000000000000a957         db  0xff ; '.'
000000000000a958         db  0xfc ; '.'
000000000000a959         db  0xb1 ; '.'
000000000000a95a         db  0xff ; '.'
000000000000a95b         db  0xff ; '.'
000000000000a95c         db  0xfc ; '.'
000000000000a95d         db  0xb1 ; '.'
000000000000a95e         db  0xff ; '.'
000000000000a95f         db  0xff ; '.'
000000000000a960         db  0xfc ; '.'
000000000000a961         db  0xb1 ; '.'
000000000000a962         db  0xff ; '.'
000000000000a963         db  0xff ; '.'
000000000000a964         db  0xfc ; '.'
000000000000a965         db  0xb1 ; '.'
000000000000a966         db  0xff ; '.'
000000000000a967         db  0xff ; '.'
000000000000a968         db  0xfc ; '.'
000000000000a969         db  0xb1 ; '.'
000000000000a96a         db  0xff ; '.'
000000000000a96b         db  0xff ; '.'
000000000000a96c         db  0xa4 ; '.'
000000000000a96d         db  0xb1 ; '.'
000000000000a96e         db  0xff ; '.'
000000000000a96f         db  0xff ; '.'
000000000000a970         db  0x94 ; '.'
000000000000a971         db  0xb1 ; '.'
000000000000a972         db  0xff ; '.'
000000000000a973         db  0xff ; '.'
000000000000a974         db  0x94 ; '.'
000000000000a975         db  0xb1 ; '.'
000000000000a976         db  0xff ; '.'
000000000000a977         db  0xff ; '.'
000000000000a978         db  0x64 ; 'd'
000000000000a979         db  0xb1 ; '.'
000000000000a97a         db  0xff ; '.'
000000000000a97b         db  0xff ; '.'
000000000000a97c         db  0x94 ; '.'
000000000000a97d         db  0xb1 ; '.'
000000000000a97e         db  0xff ; '.'
000000000000a97f         db  0xff ; '.'
000000000000a980         db  0x3c ; '<'
000000000000a981         db  0xb1 ; '.'
000000000000a982         db  0xff ; '.'
000000000000a983         db  0xff ; '.'
000000000000a984         db  0x94 ; '.'
000000000000a985         db  0xb1 ; '.'
000000000000a986         db  0xff ; '.'
000000000000a987         db  0xff ; '.'
000000000000a988         db  0xf7 ; '.'
000000000000a989         db  0xaf ; '.'
000000000000a98a         db  0xff ; '.'
000000000000a98b         db  0xff ; '.'
000000000000a98c         db  0x94 ; '.'
000000000000a98d         db  0xb1 ; '.'
000000000000a98e         db  0xff ; '.'
000000000000a98f         db  0xff ; '.'
000000000000a990         db  0x94 ; '.'
000000000000a991         db  0xb1 ; '.'
000000000000a992         db  0xff ; '.'
000000000000a993         db  0xff ; '.'
000000000000a994         db  0x94 ; '.'
000000000000a995         db  0xb1 ; '.'
000000000000a996         db  0xff ; '.'
000000000000a997         db  0xff ; '.'
000000000000a998         db  0x3c ; '<'
000000000000a999         db  0xb1 ; '.'
000000000000a99a         db  0xff ; '.'
000000000000a99b         db  0xff ; '.'
000000000000a99c         db  0x3c ; '<'
000000000000a99d         db  0xb1 ; '.'
000000000000a99e         db  0xff ; '.'
000000000000a99f         db  0xff ; '.'
000000000000a9a0         db  0x3c ; '<'
000000000000a9a1         db  0xb1 ; '.'
000000000000a9a2         db  0xff ; '.'
000000000000a9a3         db  0xff ; '.'
000000000000a9a4         db  0x3c ; '<'
000000000000a9a5         db  0xb1 ; '.'
000000000000a9a6         db  0xff ; '.'
000000000000a9a7         db  0xff ; '.'
000000000000a9a8         db  0x3c ; '<'
000000000000a9a9         db  0xb1 ; '.'
000000000000a9aa         db  0xff ; '.'
000000000000a9ab         db  0xff ; '.'
000000000000a9ac         db  0x3c ; '<'
000000000000a9ad         db  0xb1 ; '.'
000000000000a9ae         db  0xff ; '.'
000000000000a9af         db  0xff ; '.'
000000000000a9b0         db  0x3c ; '<'
000000000000a9b1         db  0xb1 ; '.'
000000000000a9b2         db  0xff ; '.'
000000000000a9b3         db  0xff ; '.'
000000000000a9b4         db  0x3c ; '<'
000000000000a9b5         db  0xb1 ; '.'
000000000000a9b6         db  0xff ; '.'
000000000000a9b7         db  0xff ; '.'
000000000000a9b8         db  0x3c ; '<'
000000000000a9b9         db  0xb1 ; '.'
000000000000a9ba         db  0xff ; '.'
000000000000a9bb         db  0xff ; '.'
000000000000a9bc         db  0x3c ; '<'
000000000000a9bd         db  0xb1 ; '.'
000000000000a9be         db  0xff ; '.'
000000000000a9bf         db  0xff ; '.'
000000000000a9c0         db  0x3c ; '<'
000000000000a9c1         db  0xb1 ; '.'
000000000000a9c2         db  0xff ; '.'
000000000000a9c3         db  0xff ; '.'
000000000000a9c4         db  0x3c ; '<'
000000000000a9c5         db  0xb1 ; '.'
000000000000a9c6         db  0xff ; '.'
000000000000a9c7         db  0xff ; '.'
000000000000a9c8         db  0x3c ; '<'
000000000000a9c9         db  0xb1 ; '.'
000000000000a9ca         db  0xff ; '.'
000000000000a9cb         db  0xff ; '.'
000000000000a9cc         db  0x3c ; '<'
000000000000a9cd         db  0xb1 ; '.'
000000000000a9ce         db  0xff ; '.'
000000000000a9cf         db  0xff ; '.'
000000000000a9d0         db  0x3c ; '<'
000000000000a9d1         db  0xb1 ; '.'
000000000000a9d2         db  0xff ; '.'
000000000000a9d3         db  0xff ; '.'
000000000000a9d4         db  0x3c ; '<'
000000000000a9d5         db  0xb1 ; '.'
000000000000a9d6         db  0xff ; '.'
000000000000a9d7         db  0xff ; '.'
000000000000a9d8         db  0x94 ; '.'
000000000000a9d9         db  0xb1 ; '.'
000000000000a9da         db  0xff ; '.'
000000000000a9db         db  0xff ; '.'
000000000000a9dc         db  0x94 ; '.'
000000000000a9dd         db  0xb1 ; '.'
000000000000a9de         db  0xff ; '.'
000000000000a9df         db  0xff ; '.'
000000000000a9e0         db  0x94 ; '.'
000000000000a9e1         db  0xb1 ; '.'
000000000000a9e2         db  0xff ; '.'
000000000000a9e3         db  0xff ; '.'
000000000000a9e4         db  0x94 ; '.'
000000000000a9e5         db  0xb1 ; '.'
000000000000a9e6         db  0xff ; '.'
000000000000a9e7         db  0xff ; '.'
000000000000a9e8         db  0xc7 ; '.'
000000000000a9e9         db  0xaf ; '.'
000000000000a9ea         db  0xff ; '.'
000000000000a9eb         db  0xff ; '.'
000000000000a9ec         db  0xfc ; '.'
000000000000a9ed         db  0xb1 ; '.'
000000000000a9ee         db  0xff ; '.'
000000000000a9ef         db  0xff ; '.'
000000000000a9f0         db  0x3c ; '<'
000000000000a9f1         db  0xb1 ; '.'
000000000000a9f2         db  0xff ; '.'
000000000000a9f3         db  0xff ; '.'
000000000000a9f4         db  0x3c ; '<'
000000000000a9f5         db  0xb1 ; '.'
000000000000a9f6         db  0xff ; '.'
000000000000a9f7         db  0xff ; '.'
000000000000a9f8         db  0x3c ; '<'
000000000000a9f9         db  0xb1 ; '.'
000000000000a9fa         db  0xff ; '.'
000000000000a9fb         db  0xff ; '.'
000000000000a9fc         db  0x3c ; '<'
000000000000a9fd         db  0xb1 ; '.'
000000000000a9fe         db  0xff ; '.'
000000000000a9ff         db  0xff ; '.'
000000000000aa00         db  0x3c ; '<'
000000000000aa01         db  0xb1 ; '.'
000000000000aa02         db  0xff ; '.'
000000000000aa03         db  0xff ; '.'
000000000000aa04         db  0x3c ; '<'
000000000000aa05         db  0xb1 ; '.'
000000000000aa06         db  0xff ; '.'
000000000000aa07         db  0xff ; '.'
000000000000aa08         db  0x3c ; '<'
000000000000aa09         db  0xb1 ; '.'
000000000000aa0a         db  0xff ; '.'
000000000000aa0b         db  0xff ; '.'
000000000000aa0c         db  0x3c ; '<'
000000000000aa0d         db  0xb1 ; '.'
000000000000aa0e         db  0xff ; '.'
000000000000aa0f         db  0xff ; '.'
000000000000aa10         db  0x3c ; '<'
000000000000aa11         db  0xb1 ; '.'
000000000000aa12         db  0xff ; '.'
000000000000aa13         db  0xff ; '.'
000000000000aa14         db  0x3c ; '<'
000000000000aa15         db  0xb1 ; '.'
000000000000aa16         db  0xff ; '.'
000000000000aa17         db  0xff ; '.'
000000000000aa18         db  0x3c ; '<'
000000000000aa19         db  0xb1 ; '.'
000000000000aa1a         db  0xff ; '.'
000000000000aa1b         db  0xff ; '.'
000000000000aa1c         db  0x3c ; '<'
000000000000aa1d         db  0xb1 ; '.'
000000000000aa1e         db  0xff ; '.'
000000000000aa1f         db  0xff ; '.'
000000000000aa20         db  0x3c ; '<'
000000000000aa21         db  0xb1 ; '.'
000000000000aa22         db  0xff ; '.'
000000000000aa23         db  0xff ; '.'
000000000000aa24         db  0x3c ; '<'
000000000000aa25         db  0xb1 ; '.'
000000000000aa26         db  0xff ; '.'
000000000000aa27         db  0xff ; '.'
000000000000aa28         db  0x3c ; '<'
000000000000aa29         db  0xb1 ; '.'
000000000000aa2a         db  0xff ; '.'
000000000000aa2b         db  0xff ; '.'
000000000000aa2c         db  0x3c ; '<'
000000000000aa2d         db  0xb1 ; '.'
000000000000aa2e         db  0xff ; '.'
000000000000aa2f         db  0xff ; '.'
000000000000aa30         db  0x3c ; '<'
000000000000aa31         db  0xb1 ; '.'
000000000000aa32         db  0xff ; '.'
000000000000aa33         db  0xff ; '.'
000000000000aa34         db  0x3c ; '<'
000000000000aa35         db  0xb1 ; '.'
000000000000aa36         db  0xff ; '.'
000000000000aa37         db  0xff ; '.'
000000000000aa38         db  0x3c ; '<'
000000000000aa39         db  0xb1 ; '.'
000000000000aa3a         db  0xff ; '.'
000000000000aa3b         db  0xff ; '.'
000000000000aa3c         db  0x3c ; '<'
000000000000aa3d         db  0xb1 ; '.'
000000000000aa3e         db  0xff ; '.'
000000000000aa3f         db  0xff ; '.'
000000000000aa40         db  0x3c ; '<'
000000000000aa41         db  0xb1 ; '.'
000000000000aa42         db  0xff ; '.'
000000000000aa43         db  0xff ; '.'
000000000000aa44         db  0x3c ; '<'
000000000000aa45         db  0xb1 ; '.'
000000000000aa46         db  0xff ; '.'
000000000000aa47         db  0xff ; '.'
000000000000aa48         db  0x3c ; '<'
000000000000aa49         db  0xb1 ; '.'
000000000000aa4a         db  0xff ; '.'
000000000000aa4b         db  0xff ; '.'
000000000000aa4c         db  0x3c ; '<'
000000000000aa4d         db  0xb1 ; '.'
000000000000aa4e         db  0xff ; '.'
000000000000aa4f         db  0xff ; '.'
000000000000aa50         db  0x3c ; '<'
000000000000aa51         db  0xb1 ; '.'
000000000000aa52         db  0xff ; '.'
000000000000aa53         db  0xff ; '.'
000000000000aa54         db  0x3c ; '<'
000000000000aa55         db  0xb1 ; '.'
000000000000aa56         db  0xff ; '.'
000000000000aa57         db  0xff ; '.'
000000000000aa58         db  0x94 ; '.'
000000000000aa59         db  0xb1 ; '.'
000000000000aa5a         db  0xff ; '.'
000000000000aa5b         db  0xff ; '.'
000000000000aa5c         db  0x6c ; 'l'
000000000000aa5d         db  0xb0 ; '.'
000000000000aa5e         db  0xff ; '.'
000000000000aa5f         db  0xff ; '.'
000000000000aa60         db  0x3c ; '<'
000000000000aa61         db  0xb1 ; '.'
000000000000aa62         db  0xff ; '.'
000000000000aa63         db  0xff ; '.'
000000000000aa64         db  0x94 ; '.'
000000000000aa65         db  0xb1 ; '.'
000000000000aa66         db  0xff ; '.'
000000000000aa67         db  0xff ; '.'
000000000000aa68         db  0x3c ; '<'
000000000000aa69         db  0xb1 ; '.'
000000000000aa6a         db  0xff ; '.'
000000000000aa6b         db  0xff ; '.'
000000000000aa6c         db  0x94 ; '.'
000000000000aa6d         db  0xb1 ; '.'
000000000000aa6e         db  0xff ; '.'
000000000000aa6f         db  0xff ; '.'
000000000000aa70         db  0x3c ; '<'
000000000000aa71         db  0xb1 ; '.'
000000000000aa72         db  0xff ; '.'
000000000000aa73         db  0xff ; '.'
000000000000aa74         db  0x3c ; '<'
000000000000aa75         db  0xb1 ; '.'
000000000000aa76         db  0xff ; '.'
000000000000aa77         db  0xff ; '.'
000000000000aa78         db  0x3c ; '<'
000000000000aa79         db  0xb1 ; '.'
000000000000aa7a         db  0xff ; '.'
000000000000aa7b         db  0xff ; '.'
000000000000aa7c         db  0x3c ; '<'
000000000000aa7d         db  0xb1 ; '.'
000000000000aa7e         db  0xff ; '.'
000000000000aa7f         db  0xff ; '.'
000000000000aa80         db  0x3c ; '<'
000000000000aa81         db  0xb1 ; '.'
000000000000aa82         db  0xff ; '.'
000000000000aa83         db  0xff ; '.'
000000000000aa84         db  0x3c ; '<'
000000000000aa85         db  0xb1 ; '.'
000000000000aa86         db  0xff ; '.'
000000000000aa87         db  0xff ; '.'
000000000000aa88         db  0x3c ; '<'
000000000000aa89         db  0xb1 ; '.'
000000000000aa8a         db  0xff ; '.'
000000000000aa8b         db  0xff ; '.'
000000000000aa8c         db  0x3c ; '<'
000000000000aa8d         db  0xb1 ; '.'
000000000000aa8e         db  0xff ; '.'
000000000000aa8f         db  0xff ; '.'
000000000000aa90         db  0x3c ; '<'
000000000000aa91         db  0xb1 ; '.'
000000000000aa92         db  0xff ; '.'
000000000000aa93         db  0xff ; '.'
000000000000aa94         db  0x3c ; '<'
000000000000aa95         db  0xb1 ; '.'
000000000000aa96         db  0xff ; '.'
000000000000aa97         db  0xff ; '.'
000000000000aa98         db  0x3c ; '<'
000000000000aa99         db  0xb1 ; '.'
000000000000aa9a         db  0xff ; '.'
000000000000aa9b         db  0xff ; '.'
000000000000aa9c         db  0x3c ; '<'
000000000000aa9d         db  0xb1 ; '.'
000000000000aa9e         db  0xff ; '.'
000000000000aa9f         db  0xff ; '.'
000000000000aaa0         db  0x3c ; '<'
000000000000aaa1         db  0xb1 ; '.'
000000000000aaa2         db  0xff ; '.'
000000000000aaa3         db  0xff ; '.'
000000000000aaa4         db  0x3c ; '<'
000000000000aaa5         db  0xb1 ; '.'
000000000000aaa6         db  0xff ; '.'
000000000000aaa7         db  0xff ; '.'
000000000000aaa8         db  0x3c ; '<'
000000000000aaa9         db  0xb1 ; '.'
000000000000aaaa         db  0xff ; '.'
000000000000aaab         db  0xff ; '.'
000000000000aaac         db  0x3c ; '<'
000000000000aaad         db  0xb1 ; '.'
000000000000aaae         db  0xff ; '.'
000000000000aaaf         db  0xff ; '.'
000000000000aab0         db  0x3c ; '<'
000000000000aab1         db  0xb1 ; '.'
000000000000aab2         db  0xff ; '.'
000000000000aab3         db  0xff ; '.'
000000000000aab4         db  0x3c ; '<'
000000000000aab5         db  0xb1 ; '.'
000000000000aab6         db  0xff ; '.'
000000000000aab7         db  0xff ; '.'
000000000000aab8         db  0x3c ; '<'
000000000000aab9         db  0xb1 ; '.'
000000000000aaba         db  0xff ; '.'
000000000000aabb         db  0xff ; '.'
000000000000aabc         db  0x3c ; '<'
000000000000aabd         db  0xb1 ; '.'
000000000000aabe         db  0xff ; '.'
000000000000aabf         db  0xff ; '.'
000000000000aac0         db  0x3c ; '<'
000000000000aac1         db  0xb1 ; '.'
000000000000aac2         db  0xff ; '.'
000000000000aac3         db  0xff ; '.'
000000000000aac4         db  0x3c ; '<'
000000000000aac5         db  0xb1 ; '.'
000000000000aac6         db  0xff ; '.'
000000000000aac7         db  0xff ; '.'
000000000000aac8         db  0x3c ; '<'
000000000000aac9         db  0xb1 ; '.'
000000000000aaca         db  0xff ; '.'
000000000000aacb         db  0xff ; '.'
000000000000aacc         db  0x3c ; '<'
000000000000aacd         db  0xb1 ; '.'
000000000000aace         db  0xff ; '.'
000000000000aacf         db  0xff ; '.'
000000000000aad0         db  0x3c ; '<'
000000000000aad1         db  0xb1 ; '.'
000000000000aad2         db  0xff ; '.'
000000000000aad3         db  0xff ; '.'
000000000000aad4         db  0x3c ; '<'
000000000000aad5         db  0xb1 ; '.'
000000000000aad6         db  0xff ; '.'
000000000000aad7         db  0xff ; '.'
000000000000aad8         db  0xf7 ; '.'
000000000000aad9         db  0xae ; '.'
000000000000aada         db  0xff ; '.'
000000000000aadb         db  0xff ; '.'
000000000000aadc         db  0x94 ; '.'
000000000000aadd         db  0xb1 ; '.'
000000000000aade         db  0xff ; '.'
000000000000aadf         db  0xff ; '.'
000000000000aae0         db  0xf7 ; '.'
000000000000aae1         db  0xae ; '.'
000000000000aae2         db  0xff ; '.'
000000000000aae3         db  0xff ; '.'
000000000000aae4         db  0x64 ; 'd'
000000000000aae5         db  0xb1 ; '.'
000000000000aae6         db  0xff ; '.'
000000000000aae7         db  0xff ; '.'
000000000000aae8         db  0xe8 ; '.'                                         ; DATA XREF=sub_5ad0+137
000000000000aae9         db  0xb0 ; '.'
000000000000aaea         db  0xff ; '.'
000000000000aaeb         db  0xff ; '.'
000000000000aaec         db  0xf8 ; '.'
000000000000aaed         db  0xaf ; '.'
000000000000aaee         db  0xff ; '.'
000000000000aaef         db  0xff ; '.'
000000000000aaf0         db  0xf8 ; '.'
000000000000aaf1         db  0xaf ; '.'
000000000000aaf2         db  0xff ; '.'
000000000000aaf3         db  0xff ; '.'
000000000000aaf4         db  0xf8 ; '.'
000000000000aaf5         db  0xaf ; '.'
000000000000aaf6         db  0xff ; '.'
000000000000aaf7         db  0xff ; '.'
000000000000aaf8         db  0xf8 ; '.'
000000000000aaf9         db  0xaf ; '.'
000000000000aafa         db  0xff ; '.'
000000000000aafb         db  0xff ; '.'
000000000000aafc         db  0xf8 ; '.'
000000000000aafd         db  0xaf ; '.'
000000000000aafe         db  0xff ; '.'
000000000000aaff         db  0xff ; '.'
000000000000ab00         db  0xf8 ; '.'
000000000000ab01         db  0xaf ; '.'
000000000000ab02         db  0xff ; '.'
000000000000ab03         db  0xff ; '.'
000000000000ab04         db  0xd8 ; '.'
000000000000ab05         db  0xb0 ; '.'
000000000000ab06         db  0xff ; '.'
000000000000ab07         db  0xff ; '.'
000000000000ab08         db  0x28 ; '('
000000000000ab09         db  0xb2 ; '.'
000000000000ab0a         db  0xff ; '.'
000000000000ab0b         db  0xff ; '.'
000000000000ab0c         db  0x10 ; '.'
000000000000ab0d         db  0xb2 ; '.'
000000000000ab0e         db  0xff ; '.'
000000000000ab0f         db  0xff ; '.'
000000000000ab10         db  0xc0 ; '.'
000000000000ab11         db  0xb0 ; '.'
000000000000ab12         db  0xff ; '.'
000000000000ab13         db  0xff ; '.'
000000000000ab14         db  0x00 ; '.'
000000000000ab15         db  0xb2 ; '.'
000000000000ab16         db  0xff ; '.'
000000000000ab17         db  0xff ; '.'
000000000000ab18         db  0xa8 ; '.'
000000000000ab19         db  0xb0 ; '.'
000000000000ab1a         db  0xff ; '.'
000000000000ab1b         db  0xff ; '.'
000000000000ab1c         db  0xe8 ; '.'
000000000000ab1d         db  0xb1 ; '.'
000000000000ab1e         db  0xff ; '.'
000000000000ab1f         db  0xff ; '.'
000000000000ab20         db  0xf8 ; '.'
000000000000ab21         db  0xaf ; '.'
000000000000ab22         db  0xff ; '.'
000000000000ab23         db  0xff ; '.'
000000000000ab24         db  0xf8 ; '.'
000000000000ab25         db  0xaf ; '.'
000000000000ab26         db  0xff ; '.'
000000000000ab27         db  0xff ; '.'
000000000000ab28         db  0xf8 ; '.'
000000000000ab29         db  0xaf ; '.'
000000000000ab2a         db  0xff ; '.'
000000000000ab2b         db  0xff ; '.'
000000000000ab2c         db  0xf8 ; '.'
000000000000ab2d         db  0xaf ; '.'
000000000000ab2e         db  0xff ; '.'
000000000000ab2f         db  0xff ; '.'
000000000000ab30         db  0xf8 ; '.'
000000000000ab31         db  0xaf ; '.'
000000000000ab32         db  0xff ; '.'
000000000000ab33         db  0xff ; '.'
000000000000ab34         db  0xf8 ; '.'
000000000000ab35         db  0xaf ; '.'
000000000000ab36         db  0xff ; '.'
000000000000ab37         db  0xff ; '.'
000000000000ab38         db  0xf8 ; '.'
000000000000ab39         db  0xaf ; '.'
000000000000ab3a         db  0xff ; '.'
000000000000ab3b         db  0xff ; '.'
000000000000ab3c         db  0xf8 ; '.'
000000000000ab3d         db  0xaf ; '.'
000000000000ab3e         db  0xff ; '.'
000000000000ab3f         db  0xff ; '.'
000000000000ab40         db  0xf8 ; '.'
000000000000ab41         db  0xaf ; '.'
000000000000ab42         db  0xff ; '.'
000000000000ab43         db  0xff ; '.'
000000000000ab44         db  0xf8 ; '.'
000000000000ab45         db  0xaf ; '.'
000000000000ab46         db  0xff ; '.'
000000000000ab47         db  0xff ; '.'
000000000000ab48         db  0xf8 ; '.'
000000000000ab49         db  0xaf ; '.'
000000000000ab4a         db  0xff ; '.'
000000000000ab4b         db  0xff ; '.'
000000000000ab4c         db  0xf8 ; '.'
000000000000ab4d         db  0xaf ; '.'
000000000000ab4e         db  0xff ; '.'
000000000000ab4f         db  0xff ; '.'
000000000000ab50         db  0xf8 ; '.'
000000000000ab51         db  0xaf ; '.'
000000000000ab52         db  0xff ; '.'
000000000000ab53         db  0xff ; '.'
000000000000ab54         db  0xf8 ; '.'
000000000000ab55         db  0xaf ; '.'
000000000000ab56         db  0xff ; '.'
000000000000ab57         db  0xff ; '.'
000000000000ab58         db  0xf8 ; '.'
000000000000ab59         db  0xaf ; '.'
000000000000ab5a         db  0xff ; '.'
000000000000ab5b         db  0xff ; '.'
000000000000ab5c         db  0xf8 ; '.'
000000000000ab5d         db  0xaf ; '.'
000000000000ab5e         db  0xff ; '.'
000000000000ab5f         db  0xff ; '.'
000000000000ab60         db  0xf8 ; '.'
000000000000ab61         db  0xaf ; '.'
000000000000ab62         db  0xff ; '.'
000000000000ab63         db  0xff ; '.'
000000000000ab64         db  0xf8 ; '.'
000000000000ab65         db  0xaf ; '.'
000000000000ab66         db  0xff ; '.'
000000000000ab67         db  0xff ; '.'
000000000000ab68         db  0xd0 ; '.'
000000000000ab69         db  0xb1 ; '.'
000000000000ab6a         db  0xff ; '.'
000000000000ab6b         db  0xff ; '.'
000000000000ab6c         db  0xb8 ; '.'
000000000000ab6d         db  0xb1 ; '.'
000000000000ab6e         db  0xff ; '.'
000000000000ab6f         db  0xff ; '.'
000000000000ab70         db  0xb8 ; '.'
000000000000ab71         db  0xb1 ; '.'
000000000000ab72         db  0xff ; '.'
000000000000ab73         db  0xff ; '.'
000000000000ab74         db  0xa0 ; '.'
000000000000ab75         db  0xb1 ; '.'
000000000000ab76         db  0xff ; '.'
000000000000ab77         db  0xff ; '.'
000000000000ab78         db  0xb8 ; '.'
000000000000ab79         db  0xb1 ; '.'
000000000000ab7a         db  0xff ; '.'
000000000000ab7b         db  0xff ; '.'
000000000000ab7c         db  0x88 ; '.'
000000000000ab7d         db  0xb1 ; '.'
000000000000ab7e         db  0xff ; '.'
000000000000ab7f         db  0xff ; '.'
000000000000ab80         db  0xb8 ; '.'
000000000000ab81         db  0xb1 ; '.'
000000000000ab82         db  0xff ; '.'
000000000000ab83         db  0xff ; '.'
000000000000ab84         db  0xf8 ; '.'
000000000000ab85         db  0xad ; '.'
000000000000ab86         db  0xff ; '.'
000000000000ab87         db  0xff ; '.'
000000000000ab88         db  0xb8 ; '.'
000000000000ab89         db  0xb1 ; '.'
000000000000ab8a         db  0xff ; '.'
000000000000ab8b         db  0xff ; '.'
000000000000ab8c         db  0xb8 ; '.'
000000000000ab8d         db  0xb1 ; '.'
000000000000ab8e         db  0xff ; '.'
000000000000ab8f         db  0xff ; '.'
000000000000ab90         db  0xb8 ; '.'
000000000000ab91         db  0xb1 ; '.'
000000000000ab92         db  0xff ; '.'
000000000000ab93         db  0xff ; '.'
000000000000ab94         db  0x88 ; '.'
000000000000ab95         db  0xb1 ; '.'
000000000000ab96         db  0xff ; '.'
000000000000ab97         db  0xff ; '.'
000000000000ab98         db  0x88 ; '.'
000000000000ab99         db  0xb1 ; '.'
000000000000ab9a         db  0xff ; '.'
000000000000ab9b         db  0xff ; '.'
000000000000ab9c         db  0x88 ; '.'
000000000000ab9d         db  0xb1 ; '.'
000000000000ab9e         db  0xff ; '.'
000000000000ab9f         db  0xff ; '.'
000000000000aba0         db  0x88 ; '.'
000000000000aba1         db  0xb1 ; '.'
000000000000aba2         db  0xff ; '.'
000000000000aba3         db  0xff ; '.'
000000000000aba4         db  0x88 ; '.'
000000000000aba5         db  0xb1 ; '.'
000000000000aba6         db  0xff ; '.'
000000000000aba7         db  0xff ; '.'
000000000000aba8         db  0x88 ; '.'
000000000000aba9         db  0xb1 ; '.'
000000000000abaa         db  0xff ; '.'
000000000000abab         db  0xff ; '.'
000000000000abac         db  0x88 ; '.'
000000000000abad         db  0xb1 ; '.'
000000000000abae         db  0xff ; '.'
000000000000abaf         db  0xff ; '.'
000000000000abb0         db  0x88 ; '.'
000000000000abb1         db  0xb1 ; '.'
000000000000abb2         db  0xff ; '.'
000000000000abb3         db  0xff ; '.'
000000000000abb4         db  0x88 ; '.'
000000000000abb5         db  0xb1 ; '.'
000000000000abb6         db  0xff ; '.'
000000000000abb7         db  0xff ; '.'
000000000000abb8         db  0x88 ; '.'
000000000000abb9         db  0xb1 ; '.'
000000000000abba         db  0xff ; '.'
000000000000abbb         db  0xff ; '.'
000000000000abbc         db  0x88 ; '.'
000000000000abbd         db  0xb1 ; '.'
000000000000abbe         db  0xff ; '.'
000000000000abbf         db  0xff ; '.'
000000000000abc0         db  0x88 ; '.'
000000000000abc1         db  0xb1 ; '.'
000000000000abc2         db  0xff ; '.'
000000000000abc3         db  0xff ; '.'
000000000000abc4         db  0x88 ; '.'
000000000000abc5         db  0xb1 ; '.'
000000000000abc6         db  0xff ; '.'
000000000000abc7         db  0xff ; '.'
000000000000abc8         db  0x88 ; '.'
000000000000abc9         db  0xb1 ; '.'
000000000000abca         db  0xff ; '.'
000000000000abcb         db  0xff ; '.'
000000000000abcc         db  0x88 ; '.'
000000000000abcd         db  0xb1 ; '.'
000000000000abce         db  0xff ; '.'
000000000000abcf         db  0xff ; '.'
000000000000abd0         db  0x88 ; '.'
000000000000abd1         db  0xb1 ; '.'
000000000000abd2         db  0xff ; '.'
000000000000abd3         db  0xff ; '.'
000000000000abd4         db  0xb8 ; '.'
000000000000abd5         db  0xb1 ; '.'
000000000000abd6         db  0xff ; '.'
000000000000abd7         db  0xff ; '.'
000000000000abd8         db  0xb8 ; '.'
000000000000abd9         db  0xb1 ; '.'
000000000000abda         db  0xff ; '.'
000000000000abdb         db  0xff ; '.'
000000000000abdc         db  0xb8 ; '.'
000000000000abdd         db  0xb1 ; '.'
000000000000abde         db  0xff ; '.'
000000000000abdf         db  0xff ; '.'
000000000000abe0         db  0xb8 ; '.'
000000000000abe1         db  0xb1 ; '.'
000000000000abe2         db  0xff ; '.'
000000000000abe3         db  0xff ; '.'
000000000000abe4         db  0xc8 ; '.'
000000000000abe5         db  0xad ; '.'
000000000000abe6         db  0xff ; '.'
000000000000abe7         db  0xff ; '.'
000000000000abe8         db  0xf8 ; '.'
000000000000abe9         db  0xaf ; '.'
000000000000abea         db  0xff ; '.'
000000000000abeb         db  0xff ; '.'
000000000000abec         db  0x88 ; '.'
000000000000abed         db  0xb1 ; '.'
000000000000abee         db  0xff ; '.'
000000000000abef         db  0xff ; '.'
000000000000abf0         db  0x88 ; '.'
000000000000abf1         db  0xb1 ; '.'
000000000000abf2         db  0xff ; '.'
000000000000abf3         db  0xff ; '.'
000000000000abf4         db  0x88 ; '.'
000000000000abf5         db  0xb1 ; '.'
000000000000abf6         db  0xff ; '.'
000000000000abf7         db  0xff ; '.'
000000000000abf8         db  0x88 ; '.'
000000000000abf9         db  0xb1 ; '.'
000000000000abfa         db  0xff ; '.'
000000000000abfb         db  0xff ; '.'
000000000000abfc         db  0x88 ; '.'
000000000000abfd         db  0xb1 ; '.'
000000000000abfe         db  0xff ; '.'
000000000000abff         db  0xff ; '.'
000000000000ac00         db  0x88 ; '.'
000000000000ac01         db  0xb1 ; '.'
000000000000ac02         db  0xff ; '.'
000000000000ac03         db  0xff ; '.'
000000000000ac04         db  0x88 ; '.'
000000000000ac05         db  0xb1 ; '.'
000000000000ac06         db  0xff ; '.'
000000000000ac07         db  0xff ; '.'
000000000000ac08         db  0x88 ; '.'
000000000000ac09         db  0xb1 ; '.'
000000000000ac0a         db  0xff ; '.'
000000000000ac0b         db  0xff ; '.'
000000000000ac0c         db  0x88 ; '.'
000000000000ac0d         db  0xb1 ; '.'
000000000000ac0e         db  0xff ; '.'
000000000000ac0f         db  0xff ; '.'
000000000000ac10         db  0x88 ; '.'
000000000000ac11         db  0xb1 ; '.'
000000000000ac12         db  0xff ; '.'
000000000000ac13         db  0xff ; '.'
000000000000ac14         db  0x88 ; '.'
000000000000ac15         db  0xb1 ; '.'
000000000000ac16         db  0xff ; '.'
000000000000ac17         db  0xff ; '.'
000000000000ac18         db  0x88 ; '.'
000000000000ac19         db  0xb1 ; '.'
000000000000ac1a         db  0xff ; '.'
000000000000ac1b         db  0xff ; '.'
000000000000ac1c         db  0x88 ; '.'
000000000000ac1d         db  0xb1 ; '.'
000000000000ac1e         db  0xff ; '.'
000000000000ac1f         db  0xff ; '.'
000000000000ac20         db  0x88 ; '.'
000000000000ac21         db  0xb1 ; '.'
000000000000ac22         db  0xff ; '.'
000000000000ac23         db  0xff ; '.'
000000000000ac24         db  0x88 ; '.'
000000000000ac25         db  0xb1 ; '.'
000000000000ac26         db  0xff ; '.'
000000000000ac27         db  0xff ; '.'
000000000000ac28         db  0x88 ; '.'
000000000000ac29         db  0xb1 ; '.'
000000000000ac2a         db  0xff ; '.'
000000000000ac2b         db  0xff ; '.'
000000000000ac2c         db  0x88 ; '.'
000000000000ac2d         db  0xb1 ; '.'
000000000000ac2e         db  0xff ; '.'
000000000000ac2f         db  0xff ; '.'
000000000000ac30         db  0x88 ; '.'
000000000000ac31         db  0xb1 ; '.'
000000000000ac32         db  0xff ; '.'
000000000000ac33         db  0xff ; '.'
000000000000ac34         db  0x88 ; '.'
000000000000ac35         db  0xb1 ; '.'
000000000000ac36         db  0xff ; '.'
000000000000ac37         db  0xff ; '.'
000000000000ac38         db  0x88 ; '.'
000000000000ac39         db  0xb1 ; '.'
000000000000ac3a         db  0xff ; '.'
000000000000ac3b         db  0xff ; '.'
000000000000ac3c         db  0x88 ; '.'
000000000000ac3d         db  0xb1 ; '.'
000000000000ac3e         db  0xff ; '.'
000000000000ac3f         db  0xff ; '.'
000000000000ac40         db  0x88 ; '.'
000000000000ac41         db  0xb1 ; '.'
000000000000ac42         db  0xff ; '.'
000000000000ac43         db  0xff ; '.'
000000000000ac44         db  0x88 ; '.'
000000000000ac45         db  0xb1 ; '.'
000000000000ac46         db  0xff ; '.'
000000000000ac47         db  0xff ; '.'
000000000000ac48         db  0x88 ; '.'
000000000000ac49         db  0xb1 ; '.'
000000000000ac4a         db  0xff ; '.'
000000000000ac4b         db  0xff ; '.'
000000000000ac4c         db  0x88 ; '.'
000000000000ac4d         db  0xb1 ; '.'
000000000000ac4e         db  0xff ; '.'
000000000000ac4f         db  0xff ; '.'
000000000000ac50         db  0x88 ; '.'
000000000000ac51         db  0xb1 ; '.'
000000000000ac52         db  0xff ; '.'
000000000000ac53         db  0xff ; '.'
000000000000ac54         db  0xb8 ; '.'
000000000000ac55         db  0xb1 ; '.'
000000000000ac56         db  0xff ; '.'
000000000000ac57         db  0xff ; '.'
000000000000ac58         db  0x88 ; '.'
000000000000ac59         db  0xb0 ; '.'
000000000000ac5a         db  0xff ; '.'
000000000000ac5b         db  0xff ; '.'
000000000000ac5c         db  0x88 ; '.'
000000000000ac5d         db  0xb1 ; '.'
000000000000ac5e         db  0xff ; '.'
000000000000ac5f         db  0xff ; '.'
000000000000ac60         db  0xb8 ; '.'
000000000000ac61         db  0xb1 ; '.'
000000000000ac62         db  0xff ; '.'
000000000000ac63         db  0xff ; '.'
000000000000ac64         db  0x88 ; '.'
000000000000ac65         db  0xb1 ; '.'
000000000000ac66         db  0xff ; '.'
000000000000ac67         db  0xff ; '.'
000000000000ac68         db  0xb8 ; '.'
000000000000ac69         db  0xb1 ; '.'
000000000000ac6a         db  0xff ; '.'
000000000000ac6b         db  0xff ; '.'
000000000000ac6c         db  0x88 ; '.'
000000000000ac6d         db  0xb1 ; '.'
000000000000ac6e         db  0xff ; '.'
000000000000ac6f         db  0xff ; '.'
000000000000ac70         db  0x88 ; '.'
000000000000ac71         db  0xb1 ; '.'
000000000000ac72         db  0xff ; '.'
000000000000ac73         db  0xff ; '.'
000000000000ac74         db  0x88 ; '.'
000000000000ac75         db  0xb1 ; '.'
000000000000ac76         db  0xff ; '.'
000000000000ac77         db  0xff ; '.'
000000000000ac78         db  0x88 ; '.'
000000000000ac79         db  0xb1 ; '.'
000000000000ac7a         db  0xff ; '.'
000000000000ac7b         db  0xff ; '.'
000000000000ac7c         db  0x88 ; '.'
000000000000ac7d         db  0xb1 ; '.'
000000000000ac7e         db  0xff ; '.'
000000000000ac7f         db  0xff ; '.'
000000000000ac80         db  0x88 ; '.'
000000000000ac81         db  0xb1 ; '.'
000000000000ac82         db  0xff ; '.'
000000000000ac83         db  0xff ; '.'
000000000000ac84         db  0x88 ; '.'
000000000000ac85         db  0xb1 ; '.'
000000000000ac86         db  0xff ; '.'
000000000000ac87         db  0xff ; '.'
000000000000ac88         db  0x88 ; '.'
000000000000ac89         db  0xb1 ; '.'
000000000000ac8a         db  0xff ; '.'
000000000000ac8b         db  0xff ; '.'
000000000000ac8c         db  0x88 ; '.'
000000000000ac8d         db  0xb1 ; '.'
000000000000ac8e         db  0xff ; '.'
000000000000ac8f         db  0xff ; '.'
000000000000ac90         db  0x88 ; '.'
000000000000ac91         db  0xb1 ; '.'
000000000000ac92         db  0xff ; '.'
000000000000ac93         db  0xff ; '.'
000000000000ac94         db  0x88 ; '.'
000000000000ac95         db  0xb1 ; '.'
000000000000ac96         db  0xff ; '.'
000000000000ac97         db  0xff ; '.'
000000000000ac98         db  0x88 ; '.'
000000000000ac99         db  0xb1 ; '.'
000000000000ac9a         db  0xff ; '.'
000000000000ac9b         db  0xff ; '.'
000000000000ac9c         db  0x88 ; '.'
000000000000ac9d         db  0xb1 ; '.'
000000000000ac9e         db  0xff ; '.'
000000000000ac9f         db  0xff ; '.'
000000000000aca0         db  0x88 ; '.'
000000000000aca1         db  0xb1 ; '.'
000000000000aca2         db  0xff ; '.'
000000000000aca3         db  0xff ; '.'
000000000000aca4         db  0x88 ; '.'
000000000000aca5         db  0xb1 ; '.'
000000000000aca6         db  0xff ; '.'
000000000000aca7         db  0xff ; '.'
000000000000aca8         db  0x88 ; '.'
000000000000aca9         db  0xb1 ; '.'
000000000000acaa         db  0xff ; '.'
000000000000acab         db  0xff ; '.'
000000000000acac         db  0x88 ; '.'
000000000000acad         db  0xb1 ; '.'
000000000000acae         db  0xff ; '.'
000000000000acaf         db  0xff ; '.'
000000000000acb0         db  0x88 ; '.'
000000000000acb1         db  0xb1 ; '.'
000000000000acb2         db  0xff ; '.'
000000000000acb3         db  0xff ; '.'
000000000000acb4         db  0x88 ; '.'
000000000000acb5         db  0xb1 ; '.'
000000000000acb6         db  0xff ; '.'
000000000000acb7         db  0xff ; '.'
000000000000acb8         db  0x88 ; '.'
000000000000acb9         db  0xb1 ; '.'
000000000000acba         db  0xff ; '.'
000000000000acbb         db  0xff ; '.'
000000000000acbc         db  0x88 ; '.'
000000000000acbd         db  0xb1 ; '.'
000000000000acbe         db  0xff ; '.'
000000000000acbf         db  0xff ; '.'
000000000000acc0         db  0x88 ; '.'
000000000000acc1         db  0xb1 ; '.'
000000000000acc2         db  0xff ; '.'
000000000000acc3         db  0xff ; '.'
000000000000acc4         db  0x88 ; '.'
000000000000acc5         db  0xb1 ; '.'
000000000000acc6         db  0xff ; '.'
000000000000acc7         db  0xff ; '.'
000000000000acc8         db  0x88 ; '.'
000000000000acc9         db  0xb1 ; '.'
000000000000acca         db  0xff ; '.'
000000000000accb         db  0xff ; '.'
000000000000accc         db  0x88 ; '.'
000000000000accd         db  0xb1 ; '.'
000000000000acce         db  0xff ; '.'
000000000000accf         db  0xff ; '.'
000000000000acd0         db  0x88 ; '.'
000000000000acd1         db  0xb1 ; '.'
000000000000acd2         db  0xff ; '.'
000000000000acd3         db  0xff ; '.'
000000000000acd4         db  0xf8 ; '.'
000000000000acd5         db  0xac ; '.'
000000000000acd6         db  0xff ; '.'
000000000000acd7         db  0xff ; '.'
000000000000acd8         db  0xb8 ; '.'
000000000000acd9         db  0xb1 ; '.'
000000000000acda         db  0xff ; '.'
000000000000acdb         db  0xff ; '.'
000000000000acdc         db  0xf8 ; '.'
000000000000acdd         db  0xac ; '.'
000000000000acde         db  0xff ; '.'
000000000000acdf         db  0xff ; '.'
000000000000ace0         db  0xa0 ; '.'
000000000000ace1         db  0xb1 ; '.'
000000000000ace2         db  0xff ; '.'
000000000000ace3         db  0xff ; '.'
000000000000ace4         db  0x00 ; '.'
000000000000ace5         db  0x00 ; '.'
000000000000ace6         db  0x00 ; '.'
000000000000ace7         db  0x00 ; '.'
000000000000ace8         db  0x00 ; '.'
000000000000ace9         db  0x00 ; '.'
000000000000acea         db  0x00 ; '.'
000000000000aceb         db  0x00 ; '.'
000000000000acec         db  0x00 ; '.'
000000000000aced         db  0x00 ; '.'
000000000000acee         db  0x00 ; '.'
000000000000acef         db  0x00 ; '.'
000000000000acf0         db  0x00 ; '.'
000000000000acf1         db  0x00 ; '.'
000000000000acf2         db  0x00 ; '.'
000000000000acf3         db  0x00 ; '.'
000000000000acf4         db  0x00 ; '.'
000000000000acf5         db  0x00 ; '.'
000000000000acf6         db  0x00 ; '.'
000000000000acf7         db  0x00 ; '.'
000000000000acf8         db  0x00 ; '.'
000000000000acf9         db  0x00 ; '.'
000000000000acfa         db  0x00 ; '.'
000000000000acfb         db  0x00 ; '.'
000000000000acfc         db  0x00 ; '.'
000000000000acfd         db  0x00 ; '.'
000000000000acfe         db  0x00 ; '.'
000000000000acff         db  0x00 ; '.'
                     quoting_style_vals:
000000000000ad00         db  0x00 ; '.'
000000000000ad01         db  0x00 ; '.'
000000000000ad02         db  0x00 ; '.'
000000000000ad03         db  0x00 ; '.'
000000000000ad04         db  0x01 ; '.'
000000000000ad05         db  0x00 ; '.'
000000000000ad06         db  0x00 ; '.'
000000000000ad07         db  0x00 ; '.'
000000000000ad08         db  0x02 ; '.'
000000000000ad09         db  0x00 ; '.'
000000000000ad0a         db  0x00 ; '.'
000000000000ad0b         db  0x00 ; '.'
000000000000ad0c         db  0x03 ; '.'
000000000000ad0d         db  0x00 ; '.'
000000000000ad0e         db  0x00 ; '.'
000000000000ad0f         db  0x00 ; '.'
000000000000ad10         db  0x04 ; '.'
000000000000ad11         db  0x00 ; '.'
000000000000ad12         db  0x00 ; '.'
000000000000ad13         db  0x00 ; '.'
000000000000ad14         db  0x05 ; '.'
000000000000ad15         db  0x00 ; '.'
000000000000ad16         db  0x00 ; '.'
000000000000ad17         db  0x00 ; '.'
000000000000ad18         db  0x06 ; '.'
000000000000ad19         db  0x00 ; '.'
000000000000ad1a         db  0x00 ; '.'
000000000000ad1b         db  0x00 ; '.'
000000000000ad1c         db  0x07 ; '.'
000000000000ad1d         db  0x00 ; '.'
000000000000ad1e         db  0x00 ; '.'
000000000000ad1f         db  0x00 ; '.'
000000000000ad20         db  0x08 ; '.'
000000000000ad21         db  0x00 ; '.'
000000000000ad22         db  0x00 ; '.'
000000000000ad23         db  0x00 ; '.'
000000000000ad24         db  0x09 ; '.'
000000000000ad25         db  0x00 ; '.'
000000000000ad26         db  0x00 ; '.'
000000000000ad27         db  0x00 ; '.'
                     aSEndOfFile:
000000000000ad28         db         "%s: end of file", 0                        ; DATA XREF=randread_error+77
                     aSReadError:
000000000000ad38         db         "%s: read error", 0                         ; DATA XREF=randread_error+37
                     aDevurandom:
000000000000ad47         db         "/dev/urandom", 0                           ; DATA XREF=randread_new+203
000000000000ad54         db  0x72 ; 'r'                                         ; DATA XREF=randread_new+50
000000000000ad55         db  0x62 ; 'b'
000000000000ad56         db  0x00 ; '.'
                     aSSSn:
000000000000ad57         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
000000000000ad63         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000ad6a         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000ad6b         db  0x43 ; 'C'
000000000000ad6c         db  0x29 ; ')'
000000000000ad6d         db  0x00 ; '.'
                     aWrittenBySn:
000000000000ad6e         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000ad7e         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
000000000000ad95         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
000000000000adb1         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
000000000000adc6         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000addc         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
                     aNlicenseGplv3G:
000000000000adf0         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
000000000000aebc         align      64
                     aWrittenBySSSna:
000000000000aec0         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_aee0:        // aWrittenBySSSns
000000000000aee0         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000af04         align      8
                     aWrittenBySSSns_af08:        // aWrittenBySSSns
000000000000af08         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_af30:        // aWrittenBySSSns
000000000000af30         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
000000000000af5c         align      32
                     aWrittenBySSSns_af60:        // aWrittenBySSSns
000000000000af60         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
000000000000af90         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000afc4         align      8
                     aWrittenBySSSns_afc8:        // aWrittenBySSSns
000000000000afc8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000b004         align      8
                     aGeneralHelpUsi:
000000000000b008         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
000000000000b049         align      4
                     switch_table_b04c:        // switch_table
000000000000b04c         dd         version_etc_ar.loc_81f6-switch_table_b04c, version_etc_ar.loc_8288-switch_table_b04c, version_etc_ar.loc_82c8-switch_table_b04c, version_etc_ar.loc_8310-switch_table_b04c ; switch table used at 0x8174 containing 10 entries, DATA XREF=version_etc_arn+150
000000000000b05c         dd         version_etc_ar.loc_8360-switch_table_b04c, version_etc_ar.loc_83b8-switch_table_b04c, version_etc_ar.loc_83e8-switch_table_b04c, version_etc_ar.loc_8450-switch_table_b04c
000000000000b06c         dd         version_etc_ar.loc_8180-switch_table_b04c, version_etc_ar.loc_8230-switch_table_b04c
000000000000b074         align      128
                     version_etc_copyright:
000000000000b080         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000b0af         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li:
000000000000b0c0         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoumax+908
                     a0StrtolbaseStr:
000000000000b0e0         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoumax+915
000000000000b106         align      8
                     switch_table_b108:        // switch_table
000000000000b108         dd         xstrtoumax.loc_8dd6-switch_table_b108, 2 dup (xstrtoumax.loc_8ccc-switch_table_b108), xstrtoumax.loc_8db3-switch_table_b108, xstrtoumax.loc_8ccc-switch_table_b108 ; switch table used at 0x8c86 containing 54 entries, DATA XREF=xstrtoumax+452
000000000000b11c         dd         xstrtoumax.loc_8dec-switch_table_b108, 3 dup (xstrtoumax.loc_8ccc-switch_table_b108), xstrtoumax.loc_8d6f-switch_table_b108, xstrtoumax.loc_8ccc-switch_table_b108
000000000000b134         dd         xstrtoumax.loc_8c88-switch_table_b108, 2 dup (xstrtoumax.loc_8ccc-switch_table_b108), xstrtoumax.loc_8d90-switch_table_b108, 3 dup (xstrtoumax.loc_8ccc-switch_table_b108)
000000000000b150         dd         xstrtoumax.loc_8d4f-switch_table_b108, 4 dup (xstrtoumax.loc_8ccc-switch_table_b108), xstrtoumax.loc_8d2a-switch_table_b108, xstrtoumax.loc_8d04-switch_table_b108
000000000000b16c         dd         7 dup (xstrtoumax.loc_8ccc-switch_table_b108), xstrtoumax.loc_8ced-switch_table_b108, xstrtoumax.loc_8cb0-switch_table_b108, 3 dup (xstrtoumax.loc_8ccc-switch_table_b108)
000000000000b19c         dd         xstrtoumax.loc_8dec-switch_table_b108, 3 dup (xstrtoumax.loc_8ccc-switch_table_b108), xstrtoumax.loc_8d6f-switch_table_b108, xstrtoumax.loc_8ccc-switch_table_b108
000000000000b1b4         dd         xstrtoumax.loc_8c88-switch_table_b108, 6 dup (xstrtoumax.loc_8ccc-switch_table_b108), xstrtoumax.loc_8d4f-switch_table_b108, 2 dup (xstrtoumax.loc_8ccc-switch_table_b108)
000000000000b1dc         dd         xstrtoumax.loc_8cd7-switch_table_b108
                     __PRETTY_FUNCTION__.4162:
000000000000b1e0         db         "xstrtoumax", 0                             ; DATA XREF=xstrtoumax+901
000000000000b1eb         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
000000000000b1ec         db  0x00 ; '.'
                     aPosix:
000000000000b1ed         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
000000000000b1f3         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
000000000000b1f9         db  0x00 ; '.'
000000000000b1fa         db  0x00 ; '.'
000000000000b1fb         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0xb1fc; 0xb590[ (916 bytes)
        ; File offset : [45564; 46480[ (916 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000b1fc         db  0x01 ; '.'
000000000000b1fd         db  0x1b ; '.'
000000000000b1fe         db  0x03 ; '.'
000000000000b1ff         db  0x3b ; ';'
000000000000b200         db  0x90 ; '.'
000000000000b201         db  0x03 ; '.'
000000000000b202         db  0x00 ; '.'
000000000000b203         db  0x00 ; '.'
000000000000b204         db  0x71 ; 'q'
000000000000b205         db  0x00 ; '.'
000000000000b206         db  0x00 ; '.'
000000000000b207         db  0x00 ; '.'
000000000000b208         db  0x34 ; '4'
000000000000b209         db  0x6a ; 'j'
000000000000b20a         db  0xff ; '.'
000000000000b20b         db  0xff ; '.'
000000000000b20c         db  0xdc ; '.'
000000000000b20d         db  0x03 ; '.'
000000000000b20e         db  0x00 ; '.'
000000000000b20f         db  0x00 ; '.'
000000000000b210         db  0x34 ; '4'
000000000000b211         db  0x6f ; 'o'
000000000000b212         db  0xff ; '.'
000000000000b213         db  0xff ; '.'
000000000000b214         db  0x04 ; '.'
000000000000b215         db  0x04 ; '.'
000000000000b216         db  0x00 ; '.'
000000000000b217         db  0x00 ; '.'
000000000000b218         db  0x44 ; 'D'
000000000000b219         db  0x6f ; 'o'
000000000000b21a         db  0xff ; '.'
000000000000b21b         db  0xff ; '.'
000000000000b21c         db  0xd4 ; '.'
000000000000b21d         db  0x05 ; '.'
000000000000b21e         db  0x00 ; '.'
000000000000b21f         db  0x00 ; '.'
000000000000b220         db  0x44 ; 'D'
000000000000b221         db  0x78 ; 'x'
000000000000b222         db  0xff ; '.'
000000000000b223         db  0xff ; '.'
000000000000b224         db  0xac ; '.'
000000000000b225         db  0x03 ; '.'
000000000000b226         db  0x00 ; '.'
000000000000b227         db  0x00 ; '.'
000000000000b228         db  0x54 ; 'T'
000000000000b229         db  0x79 ; 'y'
000000000000b22a         db  0xff ; '.'
000000000000b22b         db  0xff ; '.'
000000000000b22c         db  0x1c ; '.'
000000000000b22d         db  0x04 ; '.'
000000000000b22e         db  0x00 ; '.'
000000000000b22f         db  0x00 ; '.'
000000000000b230         db  0x64 ; 'd'
000000000000b231         db  0x79 ; 'y'
000000000000b232         db  0xff ; '.'
000000000000b233         db  0xff ; '.'
000000000000b234         db  0x30 ; '0'
000000000000b235         db  0x04 ; '.'
000000000000b236         db  0x00 ; '.'
000000000000b237         db  0x00 ; '.'
000000000000b238         db  0xb4 ; '.'
000000000000b239         db  0x79 ; 'y'
000000000000b23a         db  0xff ; '.'
000000000000b23b         db  0xff ; '.'
000000000000b23c         db  0x64 ; 'd'
000000000000b23d         db  0x04 ; '.'
000000000000b23e         db  0x00 ; '.'
000000000000b23f         db  0x00 ; '.'
000000000000b240         db  0x84 ; '.'
000000000000b241         db  0x7a ; 'z'
000000000000b242         db  0xff ; '.'
000000000000b243         db  0xff ; '.'
000000000000b244         db  0xb0 ; '.'
000000000000b245         db  0x04 ; '.'
000000000000b246         db  0x00 ; '.'
000000000000b247         db  0x00 ; '.'
000000000000b248         db  0x14 ; '.'
000000000000b249         db  0x83 ; '.'
000000000000b24a         db  0xff ; '.'
000000000000b24b         db  0xff ; '.'
000000000000b24c         db  0x48 ; 'H'
000000000000b24d         db  0x05 ; '.'
000000000000b24e         db  0x00 ; '.'
000000000000b24f         db  0x00 ; '.'
000000000000b250         db  0x24 ; '$'
000000000000b251         db  0x8a ; '.'
000000000000b252         db  0xff ; '.'
000000000000b253         db  0xff ; '.'
000000000000b254         db  0xa8 ; '.'
000000000000b255         db  0x05 ; '.'
000000000000b256         db  0x00 ; '.'
000000000000b257         db  0x00 ; '.'
000000000000b258         db  0xe4 ; '.'
000000000000b259         db  0x8e ; '.'
000000000000b25a         db  0xff ; '.'
000000000000b25b         db  0xff ; '.'
000000000000b25c         db  0x34 ; '4'
000000000000b25d         db  0x06 ; '.'
000000000000b25e         db  0x00 ; '.'
000000000000b25f         db  0x00 ; '.'
000000000000b260         db  0xf4 ; '.'
000000000000b261         db  0x8e ; '.'
000000000000b262         db  0xff ; '.'
000000000000b263         db  0xff ; '.'
000000000000b264         db  0x48 ; 'H'
000000000000b265         db  0x06 ; '.'
000000000000b266         db  0x00 ; '.'
000000000000b267         db  0x00 ; '.'
000000000000b268         db  0x14 ; '.'
000000000000b269         db  0x90 ; '.'
000000000000b26a         db  0xff ; '.'
000000000000b26b         db  0xff ; '.'
000000000000b26c         db  0x94 ; '.'
000000000000b26d         db  0x06 ; '.'
000000000000b26e         db  0x00 ; '.'
000000000000b26f         db  0x00 ; '.'
000000000000b270         db  0x94 ; '.'
000000000000b271         db  0x90 ; '.'
000000000000b272         db  0xff ; '.'
000000000000b273         db  0xff ; '.'
000000000000b274         db  0xc0 ; '.'
000000000000b275         db  0x06 ; '.'
000000000000b276         db  0x00 ; '.'
000000000000b277         db  0x00 ; '.'
000000000000b278         db  0xb4 ; '.'
000000000000b279         db  0x91 ; '.'
000000000000b27a         db  0xff ; '.'
000000000000b27b         db  0xff ; '.'
000000000000b27c         db  0x20 ; ' '
000000000000b27d         db  0x07 ; '.'
000000000000b27e         db  0x00 ; '.'
000000000000b27f         db  0x00 ; '.'
000000000000b280         db  0x24 ; '$'
000000000000b281         db  0x92 ; '.'
000000000000b282         db  0xff ; '.'
000000000000b283         db  0xff ; '.'
000000000000b284         db  0x6c ; 'l'
000000000000b285         db  0x07 ; '.'
000000000000b286         db  0x00 ; '.'
000000000000b287         db  0x00 ; '.'
000000000000b288         db  0x74 ; 't'
000000000000b289         db  0x92 ; '.'
000000000000b28a         db  0xff ; '.'
000000000000b28b         db  0xff ; '.'
000000000000b28c         db  0xac ; '.'
000000000000b28d         db  0x07 ; '.'
000000000000b28e         db  0x00 ; '.'
000000000000b28f         db  0x00 ; '.'
000000000000b290         db  0x84 ; '.'
000000000000b291         db  0x92 ; '.'
000000000000b292         db  0xff ; '.'
000000000000b293         db  0xff ; '.'
000000000000b294         db  0xc0 ; '.'
000000000000b295         db  0x07 ; '.'
000000000000b296         db  0x00 ; '.'
000000000000b297         db  0x00 ; '.'
000000000000b298         db  0x94 ; '.'
000000000000b299         db  0x92 ; '.'
000000000000b29a         db  0xff ; '.'
000000000000b29b         db  0xff ; '.'
000000000000b29c         db  0xd4 ; '.'
000000000000b29d         db  0x07 ; '.'
000000000000b29e         db  0x00 ; '.'
000000000000b29f         db  0x00 ; '.'
000000000000b2a0         db  0x44 ; 'D'
000000000000b2a1         db  0x93 ; '.'
000000000000b2a2         db  0xff ; '.'
000000000000b2a3         db  0xff ; '.'
000000000000b2a4         db  0x04 ; '.'
000000000000b2a5         db  0x08 ; '.'
000000000000b2a6         db  0x00 ; '.'
000000000000b2a7         db  0x00 ; '.'
000000000000b2a8         db  0x64 ; 'd'
000000000000b2a9         db  0x93 ; '.'
000000000000b2aa         db  0xff ; '.'
000000000000b2ab         db  0xff ; '.'
000000000000b2ac         db  0x24 ; '$'
000000000000b2ad         db  0x08 ; '.'
000000000000b2ae         db  0x00 ; '.'
000000000000b2af         db  0x00 ; '.'
000000000000b2b0         db  0xc4 ; '.'
000000000000b2b1         db  0x93 ; '.'
000000000000b2b2         db  0xff ; '.'
000000000000b2b3         db  0xff ; '.'
000000000000b2b4         db  0x58 ; 'X'
000000000000b2b5         db  0x08 ; '.'
000000000000b2b6         db  0x00 ; '.'
000000000000b2b7         db  0x00 ; '.'
000000000000b2b8         db  0x24 ; '$'
000000000000b2b9         db  0x94 ; '.'
000000000000b2ba         db  0xff ; '.'
000000000000b2bb         db  0xff ; '.'
000000000000b2bc         db  0x84 ; '.'
000000000000b2bd         db  0x08 ; '.'
000000000000b2be         db  0x00 ; '.'
000000000000b2bf         db  0x00 ; '.'
000000000000b2c0         db  0x84 ; '.'
000000000000b2c1         db  0x94 ; '.'
000000000000b2c2         db  0xff ; '.'
000000000000b2c3         db  0xff ; '.'
000000000000b2c4         db  0x98 ; '.'
000000000000b2c5         db  0x08 ; '.'
000000000000b2c6         db  0x00 ; '.'
000000000000b2c7         db  0x00 ; '.'
000000000000b2c8         db  0xd4 ; '.'
000000000000b2c9         db  0x94 ; '.'
000000000000b2ca         db  0xff ; '.'
000000000000b2cb         db  0xff ; '.'
000000000000b2cc         db  0xc4 ; '.'
000000000000b2cd         db  0x08 ; '.'
000000000000b2ce         db  0x00 ; '.'
000000000000b2cf         db  0x00 ; '.'
000000000000b2d0         db  0x44 ; 'D'
000000000000b2d1         db  0x95 ; '.'
000000000000b2d2         db  0xff ; '.'
000000000000b2d3         db  0xff ; '.'
000000000000b2d4         db  0xe4 ; '.'
000000000000b2d5         db  0x08 ; '.'
000000000000b2d6         db  0x00 ; '.'
000000000000b2d7         db  0x00 ; '.'
000000000000b2d8         db  0x14 ; '.'
000000000000b2d9         db  0x96 ; '.'
000000000000b2da         db  0xff ; '.'
000000000000b2db         db  0xff ; '.'
000000000000b2dc         db  0xf8 ; '.'
000000000000b2dd         db  0x08 ; '.'
000000000000b2de         db  0x00 ; '.'
000000000000b2df         db  0x00 ; '.'
000000000000b2e0         db  0x24 ; '$'
000000000000b2e1         db  0xa0 ; '.'
000000000000b2e2         db  0xff ; '.'
000000000000b2e3         db  0xff ; '.'
000000000000b2e4         db  0xa0 ; '.'
000000000000b2e5         db  0x09 ; '.'
000000000000b2e6         db  0x00 ; '.'
000000000000b2e7         db  0x00 ; '.'
000000000000b2e8         db  0x14 ; '.'
000000000000b2e9         db  0xa2 ; '.'
000000000000b2ea         db  0xff ; '.'
000000000000b2eb         db  0xff ; '.'
000000000000b2ec         db  0xdc ; '.'
000000000000b2ed         db  0x09 ; '.'
000000000000b2ee         db  0x00 ; '.'
000000000000b2ef         db  0x00 ; '.'
000000000000b2f0         db  0x64 ; 'd'
000000000000b2f1         db  0xa2 ; '.'
000000000000b2f2         db  0xff ; '.'
000000000000b2f3         db  0xff ; '.'
000000000000b2f4         db  0xf4 ; '.'
000000000000b2f5         db  0x09 ; '.'
000000000000b2f6         db  0x00 ; '.'
000000000000b2f7         db  0x00 ; '.'
000000000000b2f8         db  0x04 ; '.'
000000000000b2f9         db  0xa3 ; '.'
000000000000b2fa         db  0xff ; '.'
000000000000b2fb         db  0xff ; '.'
000000000000b2fc         db  0x14 ; '.'
000000000000b2fd         db  0x0a ; '.'
000000000000b2fe         db  0x00 ; '.'
000000000000b2ff         db  0x00 ; '.'
000000000000b300         db  0xf4 ; '.'
000000000000b301         db  0xa3 ; '.'
000000000000b302         db  0xff ; '.'
000000000000b303         db  0xff ; '.'
000000000000b304         db  0x58 ; 'X'
000000000000b305         db  0x0a ; '.'
000000000000b306         db  0x00 ; '.'
000000000000b307         db  0x00 ; '.'
000000000000b308         db  0x34 ; '4'
000000000000b309         db  0xb6 ; '.'
000000000000b30a         db  0xff ; '.'
000000000000b30b         db  0xff ; '.'
000000000000b30c         db  0xd0 ; '.'
000000000000b30d         db  0x0a ; '.'
000000000000b30e         db  0x00 ; '.'
000000000000b30f         db  0x00 ; '.'
000000000000b310         db  0xe4 ; '.'
000000000000b311         db  0xb7 ; '.'
000000000000b312         db  0xff ; '.'
000000000000b313         db  0xff ; '.'
000000000000b314         db  0x3c ; '<'
000000000000b315         db  0x0b ; '.'
000000000000b316         db  0x00 ; '.'
000000000000b317         db  0x00 ; '.'
000000000000b318         db  0x24 ; '$'
000000000000b319         db  0xb8 ; '.'
000000000000b31a         db  0xff ; '.'
000000000000b31b         db  0xff ; '.'
000000000000b31c         db  0x68 ; 'h'
000000000000b31d         db  0x0b ; '.'
000000000000b31e         db  0x00 ; '.'
000000000000b31f         db  0x00 ; '.'
000000000000b320         db  0x44 ; 'D'
000000000000b321         db  0xb8 ; '.'
000000000000b322         db  0xff ; '.'
000000000000b323         db  0xff ; '.'
000000000000b324         db  0x7c ; '|'
000000000000b325         db  0x0b ; '.'
000000000000b326         db  0x00 ; '.'
000000000000b327         db  0x00 ; '.'
000000000000b328         db  0x64 ; 'd'
000000000000b329         db  0xb8 ; '.'
000000000000b32a         db  0xff ; '.'
000000000000b32b         db  0xff ; '.'
000000000000b32c         db  0x90 ; '.'
000000000000b32d         db  0x0b ; '.'
000000000000b32e         db  0x00 ; '.'
000000000000b32f         db  0x00 ; '.'
000000000000b330         db  0xa4 ; '.'
000000000000b331         db  0xb8 ; '.'
000000000000b332         db  0xff ; '.'
000000000000b333         db  0xff ; '.'
000000000000b334         db  0xa4 ; '.'
000000000000b335         db  0x0b ; '.'
000000000000b336         db  0x00 ; '.'
000000000000b337         db  0x00 ; '.'
000000000000b338         db  0xc4 ; '.'
000000000000b339         db  0xb8 ; '.'
000000000000b33a         db  0xff ; '.'
000000000000b33b         db  0xff ; '.'
000000000000b33c         db  0xb8 ; '.'
000000000000b33d         db  0x0b ; '.'
000000000000b33e         db  0x00 ; '.'
000000000000b33f         db  0x00 ; '.'
000000000000b340         db  0xf4 ; '.'
000000000000b341         db  0xb8 ; '.'
000000000000b342         db  0xff ; '.'
000000000000b343         db  0xff ; '.'
000000000000b344         db  0xcc ; '.'
000000000000b345         db  0x0b ; '.'
000000000000b346         db  0x00 ; '.'
000000000000b347         db  0x00 ; '.'
000000000000b348         db  0x74 ; 't'
000000000000b349         db  0xb9 ; '.'
000000000000b34a         db  0xff ; '.'
000000000000b34b         db  0xff ; '.'
000000000000b34c         db  0x20 ; ' '
000000000000b34d         db  0x0c ; '.'
000000000000b34e         db  0x00 ; '.'
000000000000b34f         db  0x00 ; '.'
000000000000b350         db  0x64 ; 'd'
000000000000b351         db  0xba ; '.'
000000000000b352         db  0xff ; '.'
000000000000b353         db  0xff ; '.'
000000000000b354         db  0x8c ; '.'
000000000000b355         db  0x0c ; '.'
000000000000b356         db  0x00 ; '.'
000000000000b357         db  0x00 ; '.'
000000000000b358         db  0x74 ; 't'
000000000000b359         db  0xba ; '.'
000000000000b35a         db  0xff ; '.'
000000000000b35b         db  0xff ; '.'
000000000000b35c         db  0xa0 ; '.'
000000000000b35d         db  0x0c ; '.'
000000000000b35e         db  0x00 ; '.'
000000000000b35f         db  0x00 ; '.'
000000000000b360         db  0x14 ; '.'
000000000000b361         db  0xbb ; '.'
000000000000b362         db  0xff ; '.'
000000000000b363         db  0xff ; '.'
000000000000b364         db  0xcc ; '.'
000000000000b365         db  0x0c ; '.'
000000000000b366         db  0x00 ; '.'
000000000000b367         db  0x00 ; '.'
000000000000b368         db  0x34 ; '4'
000000000000b369         db  0xbb ; '.'
000000000000b36a         db  0xff ; '.'
000000000000b36b         db  0xff ; '.'
000000000000b36c         db  0xe0 ; '.'
000000000000b36d         db  0x0c ; '.'
000000000000b36e         db  0x00 ; '.'
000000000000b36f         db  0x00 ; '.'
000000000000b370         db  0x44 ; 'D'
000000000000b371         db  0xbb ; '.'
000000000000b372         db  0xff ; '.'
000000000000b373         db  0xff ; '.'
000000000000b374         db  0xf4 ; '.'
000000000000b375         db  0x0c ; '.'
000000000000b376         db  0x00 ; '.'
000000000000b377         db  0x00 ; '.'
000000000000b378         db  0x64 ; 'd'
000000000000b379         db  0xbb ; '.'
000000000000b37a         db  0xff ; '.'
000000000000b37b         db  0xff ; '.'
000000000000b37c         db  0x08 ; '.'
000000000000b37d         db  0x0d ; '.'
000000000000b37e         db  0x00 ; '.'
000000000000b37f         db  0x00 ; '.'
000000000000b380         db  0x84 ; '.'
000000000000b381         db  0xbb ; '.'
000000000000b382         db  0xff ; '.'
000000000000b383         db  0xff ; '.'
000000000000b384         db  0x1c ; '.'
000000000000b385         db  0x0d ; '.'
000000000000b386         db  0x00 ; '.'
000000000000b387         db  0x00 ; '.'
000000000000b388         db  0x14 ; '.'
000000000000b389         db  0xbc ; '.'
000000000000b38a         db  0xff ; '.'
000000000000b38b         db  0xff ; '.'
000000000000b38c         db  0x38 ; '8'
000000000000b38d         db  0x0d ; '.'
000000000000b38e         db  0x00 ; '.'
000000000000b38f         db  0x00 ; '.'
000000000000b390         db  0xa4 ; '.'
000000000000b391         db  0xbc ; '.'
000000000000b392         db  0xff ; '.'
000000000000b393         db  0xff ; '.'
000000000000b394         db  0x54 ; 'T'
000000000000b395         db  0x0d ; '.'
000000000000b396         db  0x00 ; '.'
000000000000b397         db  0x00 ; '.'
000000000000b398         db  0xb4 ; '.'
000000000000b399         db  0xbc ; '.'
000000000000b39a         db  0xff ; '.'
000000000000b39b         db  0xff ; '.'
000000000000b39c         db  0x68 ; 'h'
000000000000b39d         db  0x0d ; '.'
000000000000b39e         db  0x00 ; '.'
000000000000b39f         db  0x00 ; '.'
000000000000b3a0         db  0xc4 ; '.'
000000000000b3a1         db  0xbc ; '.'
000000000000b3a2         db  0xff ; '.'
000000000000b3a3         db  0xff ; '.'
000000000000b3a4         db  0x7c ; '|'
000000000000b3a5         db  0x0d ; '.'
000000000000b3a6         db  0x00 ; '.'
000000000000b3a7         db  0x00 ; '.'
000000000000b3a8         db  0x64 ; 'd'
000000000000b3a9         db  0xbd ; '.'
000000000000b3aa         db  0xff ; '.'
000000000000b3ab         db  0xff ; '.'
000000000000b3ac         db  0x98 ; '.'
000000000000b3ad         db  0x0d ; '.'
000000000000b3ae         db  0x00 ; '.'
000000000000b3af         db  0x00 ; '.'
000000000000b3b0         db  0x74 ; 't'
000000000000b3b1         db  0xbd ; '.'
000000000000b3b2         db  0xff ; '.'
000000000000b3b3         db  0xff ; '.'
000000000000b3b4         db  0xac ; '.'
000000000000b3b5         db  0x0d ; '.'
000000000000b3b6         db  0x00 ; '.'
000000000000b3b7         db  0x00 ; '.'
000000000000b3b8         db  0x94 ; '.'
000000000000b3b9         db  0xbd ; '.'
000000000000b3ba         db  0xff ; '.'
000000000000b3bb         db  0xff ; '.'
000000000000b3bc         db  0xc0 ; '.'
000000000000b3bd         db  0x0d ; '.'
000000000000b3be         db  0x00 ; '.'
000000000000b3bf         db  0x00 ; '.'
000000000000b3c0         db  0xa4 ; '.'
000000000000b3c1         db  0xbd ; '.'
000000000000b3c2         db  0xff ; '.'
000000000000b3c3         db  0xff ; '.'
000000000000b3c4         db  0xd4 ; '.'
000000000000b3c5         db  0x0d ; '.'
000000000000b3c6         db  0x00 ; '.'
000000000000b3c7         db  0x00 ; '.'
000000000000b3c8         db  0x34 ; '4'
000000000000b3c9         db  0xbe ; '.'
000000000000b3ca         db  0xff ; '.'
000000000000b3cb         db  0xff ; '.'
000000000000b3cc         db  0xf0 ; '.'
000000000000b3cd         db  0x0d ; '.'
000000000000b3ce         db  0x00 ; '.'
000000000000b3cf         db  0x00 ; '.'
000000000000b3d0         db  0xd4 ; '.'
000000000000b3d1         db  0xbe ; '.'
000000000000b3d2         db  0xff ; '.'
000000000000b3d3         db  0xff ; '.'
000000000000b3d4         db  0x0c ; '.'
000000000000b3d5         db  0x0e ; '.'
000000000000b3d6         db  0x00 ; '.'
000000000000b3d7         db  0x00 ; '.'
000000000000b3d8         db  0xe4 ; '.'
000000000000b3d9         db  0xbe ; '.'
000000000000b3da         db  0xff ; '.'
000000000000b3db         db  0xff ; '.'
000000000000b3dc         db  0x20 ; ' '
000000000000b3dd         db  0x0e ; '.'
000000000000b3de         db  0x00 ; '.'
000000000000b3df         db  0x00 ; '.'
000000000000b3e0         db  0x04 ; '.'
000000000000b3e1         db  0xbf ; '.'
000000000000b3e2         db  0xff ; '.'
000000000000b3e3         db  0xff ; '.'
000000000000b3e4         db  0x34 ; '4'
000000000000b3e5         db  0x0e ; '.'
000000000000b3e6         db  0x00 ; '.'
000000000000b3e7         db  0x00 ; '.'
000000000000b3e8         db  0x24 ; '$'
000000000000b3e9         db  0xbf ; '.'
000000000000b3ea         db  0xff ; '.'
000000000000b3eb         db  0xff ; '.'
000000000000b3ec         db  0x48 ; 'H'
000000000000b3ed         db  0x0e ; '.'
000000000000b3ee         db  0x00 ; '.'
000000000000b3ef         db  0x00 ; '.'
000000000000b3f0         db  0x34 ; '4'
000000000000b3f1         db  0xbf ; '.'
000000000000b3f2         db  0xff ; '.'
000000000000b3f3         db  0xff ; '.'
000000000000b3f4         db  0x5c ; '\'
000000000000b3f5         db  0x0e ; '.'
000000000000b3f6         db  0x00 ; '.'
000000000000b3f7         db  0x00 ; '.'
000000000000b3f8         db  0x54 ; 'T'
000000000000b3f9         db  0xbf ; '.'
000000000000b3fa         db  0xff ; '.'
000000000000b3fb         db  0xff ; '.'
000000000000b3fc         db  0x70 ; 'p'
000000000000b3fd         db  0x0e ; '.'
000000000000b3fe         db  0x00 ; '.'
000000000000b3ff         db  0x00 ; '.'
000000000000b400         db  0x74 ; 't'
000000000000b401         db  0xbf ; '.'
000000000000b402         db  0xff ; '.'
000000000000b403         db  0xff ; '.'
000000000000b404         db  0x84 ; '.'
000000000000b405         db  0x0e ; '.'
000000000000b406         db  0x00 ; '.'
000000000000b407         db  0x00 ; '.'
000000000000b408         db  0x94 ; '.'
000000000000b409         db  0xbf ; '.'
000000000000b40a         db  0xff ; '.'
000000000000b40b         db  0xff ; '.'
000000000000b40c         db  0x9c ; '.'
000000000000b40d         db  0x0e ; '.'
000000000000b40e         db  0x00 ; '.'
000000000000b40f         db  0x00 ; '.'
000000000000b410         db  0xc4 ; '.'
000000000000b411         db  0xbf ; '.'
000000000000b412         db  0xff ; '.'
000000000000b413         db  0xff ; '.'
000000000000b414         db  0xb8 ; '.'
000000000000b415         db  0x0e ; '.'
000000000000b416         db  0x00 ; '.'
000000000000b417         db  0x00 ; '.'
000000000000b418         db  0x04 ; '.'
000000000000b419         db  0xc0 ; '.'
000000000000b41a         db  0xff ; '.'
000000000000b41b         db  0xff ; '.'
000000000000b41c         db  0xd8 ; '.'
000000000000b41d         db  0x0e ; '.'
000000000000b41e         db  0x00 ; '.'
000000000000b41f         db  0x00 ; '.'
000000000000b420         db  0x14 ; '.'
000000000000b421         db  0xc0 ; '.'
000000000000b422         db  0xff ; '.'
000000000000b423         db  0xff ; '.'
000000000000b424         db  0xec ; '.'
000000000000b425         db  0x0e ; '.'
000000000000b426         db  0x00 ; '.'
000000000000b427         db  0x00 ; '.'
000000000000b428         db  0x34 ; '4'
000000000000b429         db  0xc1 ; '.'
000000000000b42a         db  0xff ; '.'
000000000000b42b         db  0xff ; '.'
000000000000b42c         db  0x38 ; '8'
000000000000b42d         db  0x0f ; '.'
000000000000b42e         db  0x00 ; '.'
000000000000b42f         db  0x00 ; '.'
000000000000b430         db  0x54 ; 'T'
000000000000b431         db  0xc1 ; '.'
000000000000b432         db  0xff ; '.'
000000000000b433         db  0xff ; '.'
000000000000b434         db  0x54 ; 'T'
000000000000b435         db  0x0f ; '.'
000000000000b436         db  0x00 ; '.'
000000000000b437         db  0x00 ; '.'
000000000000b438         db  0xb4 ; '.'
000000000000b439         db  0xc1 ; '.'
000000000000b43a         db  0xff ; '.'
000000000000b43b         db  0xff ; '.'
000000000000b43c         db  0x8c ; '.'
000000000000b43d         db  0x0f ; '.'
000000000000b43e         db  0x00 ; '.'
000000000000b43f         db  0x00 ; '.'
000000000000b440         db  0x14 ; '.'
000000000000b441         db  0xc2 ; '.'
000000000000b442         db  0xff ; '.'
000000000000b443         db  0xff ; '.'
000000000000b444         db  0xac ; '.'
000000000000b445         db  0x0f ; '.'
000000000000b446         db  0x00 ; '.'
000000000000b447         db  0x00 ; '.'
000000000000b448         db  0x44 ; 'D'
000000000000b449         db  0xc5 ; '.'
000000000000b44a         db  0xff ; '.'
000000000000b44b         db  0xff ; '.'
000000000000b44c         db  0xf8 ; '.'
000000000000b44d         db  0x0f ; '.'
000000000000b44e         db  0x00 ; '.'
000000000000b44f         db  0x00 ; '.'
000000000000b450         db  0x54 ; 'T'
000000000000b451         db  0xc5 ; '.'
000000000000b452         db  0xff ; '.'
000000000000b453         db  0xff ; '.'
000000000000b454         db  0x0c ; '.'
000000000000b455         db  0x10 ; '.'
000000000000b456         db  0x00 ; '.'
000000000000b457         db  0x00 ; '.'
000000000000b458         db  0x64 ; 'd'
000000000000b459         db  0xc5 ; '.'
000000000000b45a         db  0xff ; '.'
000000000000b45b         db  0xff ; '.'
000000000000b45c         db  0x20 ; ' '
000000000000b45d         db  0x10 ; '.'
000000000000b45e         db  0x00 ; '.'
000000000000b45f         db  0x00 ; '.'
000000000000b460         db  0x04 ; '.'
000000000000b461         db  0xc7 ; '.'
000000000000b462         db  0xff ; '.'
000000000000b463         db  0xff ; '.'
000000000000b464         db  0x84 ; '.'
000000000000b465         db  0x10 ; '.'
000000000000b466         db  0x00 ; '.'
000000000000b467         db  0x00 ; '.'
000000000000b468         db  0x54 ; 'T'
000000000000b469         db  0xc7 ; '.'
000000000000b46a         db  0xff ; '.'
000000000000b46b         db  0xff ; '.'
000000000000b46c         db  0xbc ; '.'
000000000000b46d         db  0x10 ; '.'
000000000000b46e         db  0x00 ; '.'
000000000000b46f         db  0x00 ; '.'
000000000000b470         db  0xe4 ; '.'
000000000000b471         db  0xc9 ; '.'
000000000000b472         db  0xff ; '.'
000000000000b473         db  0xff ; '.'
000000000000b474         db  0xd0 ; '.'
000000000000b475         db  0x10 ; '.'
000000000000b476         db  0x00 ; '.'
000000000000b477         db  0x00 ; '.'
000000000000b478         db  0x24 ; '$'
000000000000b479         db  0xcc ; '.'
000000000000b47a         db  0xff ; '.'
000000000000b47b         db  0xff ; '.'
000000000000b47c         db  0x04 ; '.'
000000000000b47d         db  0x11 ; '.'
000000000000b47e         db  0x00 ; '.'
000000000000b47f         db  0x00 ; '.'
000000000000b480         db  0x94 ; '.'
000000000000b481         db  0xce ; '.'
000000000000b482         db  0xff ; '.'
000000000000b483         db  0xff ; '.'
000000000000b484         db  0x54 ; 'T'
000000000000b485         db  0x11 ; '.'
000000000000b486         db  0x00 ; '.'
000000000000b487         db  0x00 ; '.'
000000000000b488         db  0xd4 ; '.'
000000000000b489         db  0xce ; '.'
000000000000b48a         db  0xff ; '.'
000000000000b48b         db  0xff ; '.'
000000000000b48c         db  0x8c ; '.'
000000000000b48d         db  0x11 ; '.'
000000000000b48e         db  0x00 ; '.'
000000000000b48f         db  0x00 ; '.'
000000000000b490         db  0xf4 ; '.'
000000000000b491         db  0xd2 ; '.'
000000000000b492         db  0xff ; '.'
000000000000b493         db  0xff ; '.'
000000000000b494         db  0xa0 ; '.'
000000000000b495         db  0x12 ; '.'
000000000000b496         db  0x00 ; '.'
000000000000b497         db  0x00 ; '.'
000000000000b498         db  0x14 ; '.'
000000000000b499         db  0xd3 ; '.'
000000000000b49a         db  0xff ; '.'
000000000000b49b         db  0xff ; '.'
000000000000b49c         db  0xb4 ; '.'
000000000000b49d         db  0x12 ; '.'
000000000000b49e         db  0x00 ; '.'
000000000000b49f         db  0x00 ; '.'
000000000000b4a0         db  0x94 ; '.'
000000000000b4a1         db  0xd3 ; '.'
000000000000b4a2         db  0xff ; '.'
000000000000b4a3         db  0xff ; '.'
000000000000b4a4         db  0xd0 ; '.'
000000000000b4a5         db  0x12 ; '.'
000000000000b4a6         db  0x00 ; '.'
000000000000b4a7         db  0x00 ; '.'
000000000000b4a8         db  0x74 ; 't'
000000000000b4a9         db  0xd4 ; '.'
000000000000b4aa         db  0xff ; '.'
000000000000b4ab         db  0xff ; '.'
000000000000b4ac         db  0xfc ; '.'
000000000000b4ad         db  0x12 ; '.'
000000000000b4ae         db  0x00 ; '.'
000000000000b4af         db  0x00 ; '.'
000000000000b4b0         db  0xf4 ; '.'
000000000000b4b1         db  0xd4 ; '.'
000000000000b4b2         db  0xff ; '.'
000000000000b4b3         db  0xff ; '.'
000000000000b4b4         db  0x1c ; '.'
000000000000b4b5         db  0x13 ; '.'
000000000000b4b6         db  0x00 ; '.'
000000000000b4b7         db  0x00 ; '.'
000000000000b4b8         db  0x14 ; '.'
000000000000b4b9         db  0xd5 ; '.'
000000000000b4ba         db  0xff ; '.'
000000000000b4bb         db  0xff ; '.'
000000000000b4bc         db  0x38 ; '8'
000000000000b4bd         db  0x13 ; '.'
000000000000b4be         db  0x00 ; '.'
000000000000b4bf         db  0x00 ; '.'
000000000000b4c0         db  0x44 ; 'D'
000000000000b4c1         db  0xd5 ; '.'
000000000000b4c2         db  0xff ; '.'
000000000000b4c3         db  0xff ; '.'
000000000000b4c4         db  0x4c ; 'L'
000000000000b4c5         db  0x13 ; '.'
000000000000b4c6         db  0x00 ; '.'
000000000000b4c7         db  0x00 ; '.'
000000000000b4c8         db  0x54 ; 'T'
000000000000b4c9         db  0xd5 ; '.'
000000000000b4ca         db  0xff ; '.'
000000000000b4cb         db  0xff ; '.'
000000000000b4cc         db  0x60 ; '`'
000000000000b4cd         db  0x13 ; '.'
000000000000b4ce         db  0x00 ; '.'
000000000000b4cf         db  0x00 ; '.'
000000000000b4d0         db  0x94 ; '.'
000000000000b4d1         db  0xd5 ; '.'
000000000000b4d2         db  0xff ; '.'
000000000000b4d3         db  0xff ; '.'
000000000000b4d4         db  0x84 ; '.'
000000000000b4d5         db  0x13 ; '.'
000000000000b4d6         db  0x00 ; '.'
000000000000b4d7         db  0x00 ; '.'
000000000000b4d8         db  0xc4 ; '.'
000000000000b4d9         db  0xd5 ; '.'
000000000000b4da         db  0xff ; '.'
000000000000b4db         db  0xff ; '.'
000000000000b4dc         db  0x98 ; '.'
000000000000b4dd         db  0x13 ; '.'
000000000000b4de         db  0x00 ; '.'
000000000000b4df         db  0x00 ; '.'
000000000000b4e0         db  0x54 ; 'T'
000000000000b4e1         db  0xd6 ; '.'
000000000000b4e2         db  0xff ; '.'
000000000000b4e3         db  0xff ; '.'
000000000000b4e4         db  0xb0 ; '.'
000000000000b4e5         db  0x13 ; '.'
000000000000b4e6         db  0x00 ; '.'
000000000000b4e7         db  0x00 ; '.'
000000000000b4e8         db  0xa4 ; '.'
000000000000b4e9         db  0xd6 ; '.'
000000000000b4ea         db  0xff ; '.'
000000000000b4eb         db  0xff ; '.'
000000000000b4ec         db  0xc8 ; '.'
000000000000b4ed         db  0x13 ; '.'
000000000000b4ee         db  0x00 ; '.'
000000000000b4ef         db  0x00 ; '.'
000000000000b4f0         db  0xc4 ; '.'
000000000000b4f1         db  0xd6 ; '.'
000000000000b4f2         db  0xff ; '.'
000000000000b4f3         db  0xff ; '.'
000000000000b4f4         db  0xe4 ; '.'
000000000000b4f5         db  0x13 ; '.'
000000000000b4f6         db  0x00 ; '.'
000000000000b4f7         db  0x00 ; '.'
000000000000b4f8         db  0xf4 ; '.'
000000000000b4f9         db  0xd6 ; '.'
000000000000b4fa         db  0xff ; '.'
000000000000b4fb         db  0xff ; '.'
000000000000b4fc         db  0x00 ; '.'
000000000000b4fd         db  0x14 ; '.'
000000000000b4fe         db  0x00 ; '.'
000000000000b4ff         db  0x00 ; '.'
000000000000b500         db  0x24 ; '$'
000000000000b501         db  0xd7 ; '.'
000000000000b502         db  0xff ; '.'
000000000000b503         db  0xff ; '.'
000000000000b504         db  0x28 ; '('
000000000000b505         db  0x14 ; '.'
000000000000b506         db  0x00 ; '.'
000000000000b507         db  0x00 ; '.'
000000000000b508         db  0x44 ; 'D'
000000000000b509         db  0xd7 ; '.'
000000000000b50a         db  0xff ; '.'
000000000000b50b         db  0xff ; '.'
000000000000b50c         db  0x44 ; 'D'
000000000000b50d         db  0x14 ; '.'
000000000000b50e         db  0x00 ; '.'
000000000000b50f         db  0x00 ; '.'
000000000000b510         db  0x84 ; '.'
000000000000b511         db  0xd7 ; '.'
000000000000b512         db  0xff ; '.'
000000000000b513         db  0xff ; '.'
000000000000b514         db  0x5c ; '\'
000000000000b515         db  0x14 ; '.'
000000000000b516         db  0x00 ; '.'
000000000000b517         db  0x00 ; '.'
000000000000b518         db  0x84 ; '.'
000000000000b519         db  0xd8 ; '.'
000000000000b51a         db  0xff ; '.'
000000000000b51b         db  0xff ; '.'
000000000000b51c         db  0xa8 ; '.'
000000000000b51d         db  0x14 ; '.'
000000000000b51e         db  0x00 ; '.'
000000000000b51f         db  0x00 ; '.'
000000000000b520         db  0xb4 ; '.'
000000000000b521         db  0xd8 ; '.'
000000000000b522         db  0xff ; '.'
000000000000b523         db  0xff ; '.'
000000000000b524         db  0xc4 ; '.'
000000000000b525         db  0x14 ; '.'
000000000000b526         db  0x00 ; '.'
000000000000b527         db  0x00 ; '.'
000000000000b528         db  0xd4 ; '.'
000000000000b529         db  0xdc ; '.'
000000000000b52a         db  0xff ; '.'
000000000000b52b         db  0xff ; '.'
000000000000b52c         db  0x14 ; '.'
000000000000b52d         db  0x15 ; '.'
000000000000b52e         db  0x00 ; '.'
000000000000b52f         db  0x00 ; '.'
000000000000b530         db  0x54 ; 'T'
000000000000b531         db  0xdd ; '.'
000000000000b532         db  0xff ; '.'
000000000000b533         db  0xff ; '.'
000000000000b534         db  0x4c ; 'L'
000000000000b535         db  0x15 ; '.'
000000000000b536         db  0x00 ; '.'
000000000000b537         db  0x00 ; '.'
000000000000b538         db  0xd4 ; '.'
000000000000b539         db  0xdf ; '.'
000000000000b53a         db  0xff ; '.'
000000000000b53b         db  0xff ; '.'
000000000000b53c         db  0x84 ; '.'
000000000000b53d         db  0x15 ; '.'
000000000000b53e         db  0x00 ; '.'
000000000000b53f         db  0x00 ; '.'
000000000000b540         db  0x14 ; '.'
000000000000b541         db  0xe0 ; '.'
000000000000b542         db  0xff ; '.'
000000000000b543         db  0xff ; '.'
000000000000b544         db  0xa4 ; '.'
000000000000b545         db  0x15 ; '.'
000000000000b546         db  0x00 ; '.'
000000000000b547         db  0x00 ; '.'
000000000000b548         db  0x74 ; 't'
000000000000b549         db  0xe0 ; '.'
000000000000b54a         db  0xff ; '.'
000000000000b54b         db  0xff ; '.'
000000000000b54c         db  0xd4 ; '.'
000000000000b54d         db  0x15 ; '.'
000000000000b54e         db  0x00 ; '.'
000000000000b54f         db  0x00 ; '.'
000000000000b550         db  0x04 ; '.'
000000000000b551         db  0xe1 ; '.'
000000000000b552         db  0xff ; '.'
000000000000b553         db  0xff ; '.'
000000000000b554         db  0x14 ; '.'
000000000000b555         db  0x16 ; '.'
000000000000b556         db  0x00 ; '.'
000000000000b557         db  0x00 ; '.'
000000000000b558         db  0x84 ; '.'
000000000000b559         db  0xe1 ; '.'
000000000000b55a         db  0xff ; '.'
000000000000b55b         db  0xff ; '.'
000000000000b55c         db  0x64 ; 'd'
000000000000b55d         db  0x16 ; '.'
000000000000b55e         db  0x00 ; '.'
000000000000b55f         db  0x00 ; '.'
000000000000b560         db  0x24 ; '$'
000000000000b561         db  0xe2 ; '.'
000000000000b562         db  0xff ; '.'
000000000000b563         db  0xff ; '.'
000000000000b564         db  0x94 ; '.'
000000000000b565         db  0x16 ; '.'
000000000000b566         db  0x00 ; '.'
000000000000b567         db  0x00 ; '.'
000000000000b568         db  0x84 ; '.'
000000000000b569         db  0xe2 ; '.'
000000000000b56a         db  0xff ; '.'
000000000000b56b         db  0xff ; '.'
000000000000b56c         db  0xb4 ; '.'
000000000000b56d         db  0x16 ; '.'
000000000000b56e         db  0x00 ; '.'
000000000000b56f         db  0x00 ; '.'
000000000000b570         db  0xc4 ; '.'
000000000000b571         db  0xe2 ; '.'
000000000000b572         db  0xff ; '.'
000000000000b573         db  0xff ; '.'
000000000000b574         db  0xd4 ; '.'
000000000000b575         db  0x16 ; '.'
000000000000b576         db  0x00 ; '.'
000000000000b577         db  0x00 ; '.'
000000000000b578         db  0xd4 ; '.'
000000000000b579         db  0xe2 ; '.'
000000000000b57a         db  0xff ; '.'
000000000000b57b         db  0xff ; '.'
000000000000b57c         db  0xec ; '.'
000000000000b57d         db  0x16 ; '.'
000000000000b57e         db  0x00 ; '.'
000000000000b57f         db  0x00 ; '.'
000000000000b580         db  0x44 ; 'D'
000000000000b581         db  0xe3 ; '.'
000000000000b582         db  0xff ; '.'
000000000000b583         db  0xff ; '.'
000000000000b584         db  0x34 ; '4'
000000000000b585         db  0x17 ; '.'
000000000000b586         db  0x00 ; '.'
000000000000b587         db  0x00 ; '.'
000000000000b588         db  0x54 ; 'T'
000000000000b589         db  0xe3 ; '.'
000000000000b58a         db  0xff ; '.'
000000000000b58b         db  0xff ; '.'
000000000000b58c         db  0x4c ; 'L'
000000000000b58d         db  0x17 ; '.'
000000000000b58e         db  0x00 ; '.'
000000000000b58f         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0xb590; 0xc960[ (5072 bytes)
        ; File offset : [46480; 51552[ (5072 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000b590         dd         0x00000014                                  ; Length of the record
000000000000b594         dd         0x00000000                                  ; CIE ID
000000000000b598         db         0x01                                        ; Version
000000000000b599         db         "zR", 0                                     ; Augmentation String
000000000000b59c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000b59d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000b59e         db         0x10                                        ; Return address register
000000000000b59f         db         0x01                                        ; Augmentation data length
000000000000b5a0         db         0x1b                                        ; FDE encoding
000000000000b5a1         db  0x0c ; '.'
000000000000b5a2         db  0x07 ; '.'
000000000000b5a3         db  0x08 ; '.'
000000000000b5a4         db  0x90 ; '.'
000000000000b5a5         db  0x01 ; '.'
000000000000b5a6         db  0x07 ; '.'
000000000000b5a7         db  0x10 ; '.'
000000000000b5a8         dd         0x00000014                                  ; Length of the record
000000000000b5ac         dd         0x0000001c                                  ; FDE: parent CIE at 0xb590 (FDE encoding = 0x1B)
000000000000b5b0         db         0x90, 0x74, 2 dup (0xff)                    ; begin 0x2a40
000000000000b5b4         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x2a6b)
000000000000b5b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b5b9         align      64
000000000000b5c0         dd         0x00000014                                  ; Length of the record
000000000000b5c4         dd         0x00000000                                  ; CIE ID
000000000000b5c8         db         0x01                                        ; Version
000000000000b5c9         db         "zR", 0                                     ; Augmentation String
000000000000b5cc         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000b5cd         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000b5ce         db         0x10                                        ; Return address register
000000000000b5cf         db         0x01                                        ; Augmentation data length
000000000000b5d0         db         0x1b                                        ; FDE encoding
000000000000b5d1         db  0x0c ; '.'
000000000000b5d2         db  0x07 ; '.'
000000000000b5d3         db  0x08 ; '.'
000000000000b5d4         db  0x90 ; '.'
000000000000b5d5         db  0x01 ; '.'
000000000000b5d6         db  0x00 ; '.'
000000000000b5d7         db  0x00 ; '.'
000000000000b5d8         dd         0x00000024                                  ; Length of the record
000000000000b5dc         dd         0x0000001c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b5e0         db         0x50, 0x66, 2 dup (0xff)                    ; begin 0x1c30
000000000000b5e4         db         0x00, 0x05, 2 dup (0x00)                    ; length 0x500 (end at 0x2130)
000000000000b5e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b5e9         db  0x0e ; '.'
000000000000b5ea         db  0x10 ; '.'
000000000000b5eb         db  0x46 ; 'F'
000000000000b5ec         db  0x0e ; '.'
000000000000b5ed         db  0x18 ; '.'
000000000000b5ee         db  0x4a ; 'J'
000000000000b5ef         db  0x0f ; '.'
000000000000b5f0         db  0x0b ; '.'
000000000000b5f1         db  0x77 ; 'w'
000000000000b5f2         db  0x08 ; '.'
000000000000b5f3         db  0x80 ; '.'
000000000000b5f4         db  0x00 ; '.'
000000000000b5f5         db  0x3f ; '?'
000000000000b5f6         db  0x1a ; '.'
000000000000b5f7         db  0x3b ; ';'
000000000000b5f8         db  0x2a ; '*'
000000000000b5f9         db  0x33 ; '3'
000000000000b5fa         db  0x24 ; '$'
000000000000b5fb         db  0x22 ; '"'
000000000000b5fc         db  0x00 ; '.'
000000000000b5fd         db  0x00 ; '.'
000000000000b5fe         db  0x00 ; '.'
000000000000b5ff         db  0x00 ; '.'
000000000000b600         dd         0x00000014                                  ; Length of the record
000000000000b604         dd         0x00000044                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b608         db         0x28, 0x6b, 2 dup (0xff)                    ; begin 0x2130
000000000000b60c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2138)
000000000000b610         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b611         align      8
000000000000b618         dd         0x00000010                                  ; Length of the record
000000000000b61c         dd         0x0000005c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b620         db         0x30, 0x75, 2 dup (0xff)                    ; begin 0x2b50
000000000000b624         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x2b5c)
000000000000b628         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b629         align      4
000000000000b62c         dd         0x00000030                                  ; Length of the record
000000000000b630         dd         0x00000070                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b634         db         0x2c, 0x75, 2 dup (0xff)                    ; begin 0x2b60
000000000000b638         db         0x4f, 3 dup (0x00)                          ; length 0x4f (end at 0x2baf)
000000000000b63c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b63d         db  0x41 ; 'A'
000000000000b63e         db  0x0e ; '.'
000000000000b63f         db  0x10 ; '.'
000000000000b640         db  0x86 ; '.'
000000000000b641         db  0x02 ; '.'
000000000000b642         db  0x41 ; 'A'
000000000000b643         db  0x0e ; '.'
000000000000b644         db  0x18 ; '.'
000000000000b645         db  0x83 ; '.'
000000000000b646         db  0x03 ; '.'
000000000000b647         db  0x4f ; 'O'
000000000000b648         db  0x0e ; '.'
000000000000b649         db  0x20 ; ' '
000000000000b64a         db  0x61 ; 'a'
000000000000b64b         db  0x0a ; '.'
000000000000b64c         db  0x0e ; '.'
000000000000b64d         db  0x18 ; '.'
000000000000b64e         db  0x48 ; 'H'
000000000000b64f         db  0x0e ; '.'
000000000000b650         db  0x10 ; '.'
000000000000b651         db  0x41 ; 'A'
000000000000b652         db  0x0e ; '.'
000000000000b653         db  0x08 ; '.'
000000000000b654         db  0x4d ; 'M'
000000000000b655         db  0x0b ; '.'
000000000000b656         db  0x44 ; 'D'
000000000000b657         db  0x0e ; '.'
000000000000b658         db  0x18 ; '.'
000000000000b659         db  0x41 ; 'A'
000000000000b65a         db  0x0e ; '.'
000000000000b65b         db  0x10 ; '.'
000000000000b65c         db  0x41 ; 'A'
000000000000b65d         db  0x0e ; '.'
000000000000b65e         db  0x08 ; '.'
000000000000b65f         db  0x00 ; '.'
000000000000b660         dd         0x00000048                                  ; Length of the record
000000000000b664         dd         0x000000a4                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b668         db         0x48, 0x75, 2 dup (0xff)                    ; begin 0x2bb0
000000000000b66c         db         0xd0, 3 dup (0x00)                          ; length 0xd0 (end at 0x2c80)
000000000000b670         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b671         db  0x42 ; 'B'
000000000000b672         db  0x0e ; '.'
000000000000b673         db  0x10 ; '.'
000000000000b674         db  0x8d ; '.'
000000000000b675         db  0x02 ; '.'
000000000000b676         db  0x42 ; 'B'
000000000000b677         db  0x0e ; '.'
000000000000b678         db  0x18 ; '.'
000000000000b679         db  0x8c ; '.'
000000000000b67a         db  0x03 ; '.'
000000000000b67b         db  0x44 ; 'D'
000000000000b67c         db  0x0e ; '.'
000000000000b67d         db  0x20 ; ' '
000000000000b67e         db  0x86 ; '.'
000000000000b67f         db  0x04 ; '.'
000000000000b680         db  0x41 ; 'A'
000000000000b681         db  0x0e ; '.'
000000000000b682         db  0x28 ; '('
000000000000b683         db  0x83 ; '.'
000000000000b684         db  0x05 ; '.'
000000000000b685         db  0x46 ; 'F'
000000000000b686         db  0x0e ; '.'
000000000000b687         db  0x30 ; '0'
000000000000b688         db  0x02 ; '.'
000000000000b689         db  0x7c ; '|'
000000000000b68a         db  0x0a ; '.'
000000000000b68b         db  0x0e ; '.'
000000000000b68c         db  0x28 ; '('
000000000000b68d         db  0x41 ; 'A'
000000000000b68e         db  0x0e ; '.'
000000000000b68f         db  0x20 ; ' '
000000000000b690         db  0x41 ; 'A'
000000000000b691         db  0x0e ; '.'
000000000000b692         db  0x18 ; '.'
000000000000b693         db  0x42 ; 'B'
000000000000b694         db  0x0e ; '.'
000000000000b695         db  0x10 ; '.'
000000000000b696         db  0x42 ; 'B'
000000000000b697         db  0x0e ; '.'
000000000000b698         db  0x08 ; '.'
000000000000b699         db  0x47 ; 'G'
000000000000b69a         db  0x0b ; '.'
000000000000b69b         db  0x6c ; 'l'
000000000000b69c         db  0x0e ; '.'
000000000000b69d         db  0x28 ; '('
000000000000b69e         db  0x46 ; 'F'
000000000000b69f         db  0x0e ; '.'
000000000000b6a0         db  0x20 ; ' '
000000000000b6a1         db  0x41 ; 'A'
000000000000b6a2         db  0x0e ; '.'
000000000000b6a3         db  0x18 ; '.'
000000000000b6a4         db  0x42 ; 'B'
000000000000b6a5         db  0x0e ; '.'
000000000000b6a6         db  0x10 ; '.'
000000000000b6a7         db  0x42 ; 'B'
000000000000b6a8         db  0x0e ; '.'
000000000000b6a9         db  0x08 ; '.'
000000000000b6aa         db  0x00 ; '.'
000000000000b6ab         db  0x00 ; '.'
000000000000b6ac         dd         0x00000094                                  ; Length of the record
000000000000b6b0         dd         0x000000f0                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b6b4         db         0xcc, 0x75, 2 dup (0xff)                    ; begin 0x2c80
000000000000b6b8         db         0x81, 0x08, 2 dup (0x00)                    ; length 0x881 (end at 0x3501)
000000000000b6bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b6bd         db  0x42 ; 'B'
000000000000b6be         db  0x0e ; '.'
000000000000b6bf         db  0x10 ; '.'
000000000000b6c0         db  0x8f ; '.'
000000000000b6c1         db  0x02 ; '.'
000000000000b6c2         db  0x42 ; 'B'
000000000000b6c3         db  0x0e ; '.'
000000000000b6c4         db  0x18 ; '.'
000000000000b6c5         db  0x8e ; '.'
000000000000b6c6         db  0x03 ; '.'
000000000000b6c7         db  0x45 ; 'E'
000000000000b6c8         db  0x0e ; '.'
000000000000b6c9         db  0x20 ; ' '
000000000000b6ca         db  0x8d ; '.'
000000000000b6cb         db  0x04 ; '.'
000000000000b6cc         db  0x42 ; 'B'
000000000000b6cd         db  0x0e ; '.'
000000000000b6ce         db  0x28 ; '('
000000000000b6cf         db  0x8c ; '.'
000000000000b6d0         db  0x05 ; '.'
000000000000b6d1         db  0x44 ; 'D'
000000000000b6d2         db  0x0e ; '.'
000000000000b6d3         db  0x30 ; '0'
000000000000b6d4         db  0x86 ; '.'
000000000000b6d5         db  0x06 ; '.'
000000000000b6d6         db  0x41 ; 'A'
000000000000b6d7         db  0x0e ; '.'
000000000000b6d8         db  0x38 ; '8'
000000000000b6d9         db  0x83 ; '.'
000000000000b6da         db  0x07 ; '.'
000000000000b6db         db  0x4a ; 'J'
000000000000b6dc         db  0x0e ; '.'
000000000000b6dd         db  0x80 ; '.'
000000000000b6de         db  0x11 ; '.'
000000000000b6df         db  0x03 ; '.'
000000000000b6e0         db  0x2b ; '+'
000000000000b6e1         db  0x01 ; '.'
000000000000b6e2         db  0x0a ; '.'
000000000000b6e3         db  0x0e ; '.'
000000000000b6e4         db  0x38 ; '8'
000000000000b6e5         db  0x41 ; 'A'
000000000000b6e6         db  0x0e ; '.'
000000000000b6e7         db  0x30 ; '0'
000000000000b6e8         db  0x41 ; 'A'
000000000000b6e9         db  0x0e ; '.'
000000000000b6ea         db  0x28 ; '('
000000000000b6eb         db  0x42 ; 'B'
000000000000b6ec         db  0x0e ; '.'
000000000000b6ed         db  0x20 ; ' '
000000000000b6ee         db  0x42 ; 'B'
000000000000b6ef         db  0x0e ; '.'
000000000000b6f0         db  0x18 ; '.'
000000000000b6f1         db  0x42 ; 'B'
000000000000b6f2         db  0x0e ; '.'
000000000000b6f3         db  0x10 ; '.'
000000000000b6f4         db  0x42 ; 'B'
000000000000b6f5         db  0x0e ; '.'
000000000000b6f6         db  0x08 ; '.'
000000000000b6f7         db  0x41 ; 'A'
000000000000b6f8         db  0x0b ; '.'
000000000000b6f9         db  0x02 ; '.'
000000000000b6fa         db  0xfc ; '.'
000000000000b6fb         db  0x0e ; '.'
000000000000b6fc         db  0x88 ; '.'
000000000000b6fd         db  0x11 ; '.'
000000000000b6fe         db  0x52 ; 'R'
000000000000b6ff         db  0x0e ; '.'
000000000000b700         db  0x90 ; '.'
000000000000b701         db  0x11 ; '.'
000000000000b702         db  0x51 ; 'Q'
000000000000b703         db  0x0e ; '.'
000000000000b704         db  0x88 ; '.'
000000000000b705         db  0x11 ; '.'
000000000000b706         db  0x41 ; 'A'
000000000000b707         db  0x0e ; '.'
000000000000b708         db  0x80 ; '.'
000000000000b709         db  0x11 ; '.'
000000000000b70a         db  0x03 ; '.'
000000000000b70b         db  0x77 ; 'w'
000000000000b70c         db  0x02 ; '.'
000000000000b70d         db  0x0e ; '.'
000000000000b70e         db  0x88 ; '.'
000000000000b70f         db  0x11 ; '.'
000000000000b710         db  0x4d ; 'M'
000000000000b711         db  0x0e ; '.'
000000000000b712         db  0x90 ; '.'
000000000000b713         db  0x11 ; '.'
000000000000b714         db  0x71 ; 'q'
000000000000b715         db  0x0e ; '.'
000000000000b716         db  0x88 ; '.'
000000000000b717         db  0x11 ; '.'
000000000000b718         db  0x42 ; 'B'
000000000000b719         db  0x0e ; '.'
000000000000b71a         db  0x80 ; '.'
000000000000b71b         db  0x11 ; '.'
000000000000b71c         db  0x03 ; '.'
000000000000b71d         db  0x84 ; '.'
000000000000b71e         db  0x01 ; '.'
000000000000b71f         db  0x0e ; '.'
000000000000b720         db  0x88 ; '.'
000000000000b721         db  0x11 ; '.'
000000000000b722         db  0x4a ; 'J'
000000000000b723         db  0x0e ; '.'
000000000000b724         db  0x90 ; '.'
000000000000b725         db  0x11 ; '.'
000000000000b726         db  0x42 ; 'B'
000000000000b727         db  0x0e ; '.'
000000000000b728         db  0x98 ; '.'
000000000000b729         db  0x11 ; '.'
000000000000b72a         db  0x49 ; 'I'
000000000000b72b         db  0x0e ; '.'
000000000000b72c         db  0xa0 ; '.'
000000000000b72d         db  0x11 ; '.'
000000000000b72e         db  0x63 ; 'c'
000000000000b72f         db  0x0e ; '.'
000000000000b730         db  0x80 ; '.'
000000000000b731         db  0x11 ; '.'
000000000000b732         db  0x03 ; '.'
000000000000b733         db  0x23 ; '#'
000000000000b734         db  0x01 ; '.'
000000000000b735         db  0x0e ; '.'
000000000000b736         db  0x88 ; '.'
000000000000b737         db  0x11 ; '.'
000000000000b738         db  0x4d ; 'M'
000000000000b739         db  0x0e ; '.'
000000000000b73a         db  0x90 ; '.'
000000000000b73b         db  0x11 ; '.'
000000000000b73c         db  0x60 ; '`'
000000000000b73d         db  0x0e ; '.'
000000000000b73e         db  0x88 ; '.'
000000000000b73f         db  0x11 ; '.'
000000000000b740         db  0x41 ; 'A'
000000000000b741         db  0x0e ; '.'
000000000000b742         db  0x80 ; '.'
000000000000b743         db  0x11 ; '.'
000000000000b744         dd         0x0000005c                                  ; Length of the record
000000000000b748         dd         0x00000188                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b74c         db         0xc4, 0x7d, 2 dup (0xff)                    ; begin 0x3510
000000000000b750         db         0x0b, 0x07, 2 dup (0x00)                    ; length 0x70b (end at 0x3c1b)
000000000000b754         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b755         db  0x42 ; 'B'
000000000000b756         db  0x0e ; '.'
000000000000b757         db  0x10 ; '.'
000000000000b758         db  0x8f ; '.'
000000000000b759         db  0x02 ; '.'
000000000000b75a         db  0x42 ; 'B'
000000000000b75b         db  0x0e ; '.'
000000000000b75c         db  0x18 ; '.'
000000000000b75d         db  0x8e ; '.'
000000000000b75e         db  0x03 ; '.'
000000000000b75f         db  0x42 ; 'B'
000000000000b760         db  0x0e ; '.'
000000000000b761         db  0x20 ; ' '
000000000000b762         db  0x8d ; '.'
000000000000b763         db  0x04 ; '.'
000000000000b764         db  0x42 ; 'B'
000000000000b765         db  0x0e ; '.'
000000000000b766         db  0x28 ; '('
000000000000b767         db  0x8c ; '.'
000000000000b768         db  0x05 ; '.'
000000000000b769         db  0x41 ; 'A'
000000000000b76a         db  0x0e ; '.'
000000000000b76b         db  0x30 ; '0'
000000000000b76c         db  0x86 ; '.'
000000000000b76d         db  0x06 ; '.'
000000000000b76e         db  0x41 ; 'A'
000000000000b76f         db  0x0e ; '.'
000000000000b770         db  0x38 ; '8'
000000000000b771         db  0x83 ; '.'
000000000000b772         db  0x07 ; '.'
000000000000b773         db  0x4c ; 'L'
000000000000b774         db  0x0e ; '.'
000000000000b775         db  0xd0 ; '.'
000000000000b776         db  0x02 ; '.'
000000000000b777         db  0x02 ; '.'
000000000000b778         db  0xd5 ; '.'
000000000000b779         db  0x0a ; '.'
000000000000b77a         db  0x0e ; '.'
000000000000b77b         db  0x38 ; '8'
000000000000b77c         db  0x41 ; 'A'
000000000000b77d         db  0x0e ; '.'
000000000000b77e         db  0x30 ; '0'
000000000000b77f         db  0x41 ; 'A'
000000000000b780         db  0x0e ; '.'
000000000000b781         db  0x28 ; '('
000000000000b782         db  0x42 ; 'B'
000000000000b783         db  0x0e ; '.'
000000000000b784         db  0x20 ; ' '
000000000000b785         db  0x42 ; 'B'
000000000000b786         db  0x0e ; '.'
000000000000b787         db  0x18 ; '.'
000000000000b788         db  0x42 ; 'B'
000000000000b789         db  0x0e ; '.'
000000000000b78a         db  0x10 ; '.'
000000000000b78b         db  0x42 ; 'B'
000000000000b78c         db  0x0e ; '.'
000000000000b78d         db  0x08 ; '.'
000000000000b78e         db  0x4b ; 'K'
000000000000b78f         db  0x0b ; '.'
000000000000b790         db  0x03 ; '.'
000000000000b791         db  0x17 ; '.'
000000000000b792         db  0x03 ; '.'
000000000000b793         db  0x0e ; '.'
000000000000b794         db  0xd8 ; '.'
000000000000b795         db  0x02 ; '.'
000000000000b796         db  0x45 ; 'E'
000000000000b797         db  0x0e ; '.'
000000000000b798         db  0xe0 ; '.'
000000000000b799         db  0x02 ; '.'
000000000000b79a         db  0x57 ; 'W'
000000000000b79b         db  0x0e ; '.'
000000000000b79c         db  0xd8 ; '.'
000000000000b79d         db  0x02 ; '.'
000000000000b79e         db  0x41 ; 'A'
000000000000b79f         db  0x0e ; '.'
000000000000b7a0         db  0xd0 ; '.'
000000000000b7a1         db  0x02 ; '.'
000000000000b7a2         db  0x00 ; '.'
000000000000b7a3         db  0x00 ; '.'
000000000000b7a4         dd         0x00000028                                  ; Length of the record
000000000000b7a8         dd         0x000001e8                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b7ac         db         0x74, 0x84, 2 dup (0xff)                    ; begin 0x3c20
000000000000b7b0         db         0xba, 0x04, 2 dup (0x00)                    ; length 0x4ba (end at 0x40da)
000000000000b7b4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b7b5         db  0x42 ; 'B'
000000000000b7b6         db  0x0e ; '.'
000000000000b7b7         db  0x10 ; '.'
000000000000b7b8         db  0x8d ; '.'
000000000000b7b9         db  0x02 ; '.'
000000000000b7ba         db  0x42 ; 'B'
000000000000b7bb         db  0x0e ; '.'
000000000000b7bc         db  0x18 ; '.'
000000000000b7bd         db  0x8c ; '.'
000000000000b7be         db  0x03 ; '.'
000000000000b7bf         db  0x46 ; 'F'
000000000000b7c0         db  0x0e ; '.'
000000000000b7c1         db  0x20 ; ' '
000000000000b7c2         db  0x86 ; '.'
000000000000b7c3         db  0x04 ; '.'
000000000000b7c4         db  0x41 ; 'A'
000000000000b7c5         db  0x0e ; '.'
000000000000b7c6         db  0x28 ; '('
000000000000b7c7         db  0x83 ; '.'
000000000000b7c8         db  0x05 ; '.'
000000000000b7c9         db  0x49 ; 'I'
000000000000b7ca         db  0x0e ; '.'
000000000000b7cb         db  0xb0 ; '.'
000000000000b7cc         db  0x01 ; '.'
000000000000b7cd         db  0x00 ; '.'
000000000000b7ce         db  0x00 ; '.'
000000000000b7cf         db  0x00 ; '.'
000000000000b7d0         dd         0x0000005c                                  ; Length of the record
000000000000b7d4         dd         0x00000214                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b7d8         db         0x68, 0x69, 2 dup (0xff)                    ; begin 0x2140
000000000000b7dc         db         0xfe, 0x08, 2 dup (0x00)                    ; length 0x8fe (end at 0x2a3e)
000000000000b7e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b7e1         db  0x42 ; 'B'
000000000000b7e2         db  0x0e ; '.'
000000000000b7e3         db  0x10 ; '.'
000000000000b7e4         db  0x8f ; '.'
000000000000b7e5         db  0x02 ; '.'
000000000000b7e6         db  0x42 ; 'B'
000000000000b7e7         db  0x0e ; '.'
000000000000b7e8         db  0x18 ; '.'
000000000000b7e9         db  0x8e ; '.'
000000000000b7ea         db  0x03 ; '.'
000000000000b7eb         db  0x42 ; 'B'
000000000000b7ec         db  0x0e ; '.'
000000000000b7ed         db  0x20 ; ' '
000000000000b7ee         db  0x8d ; '.'
000000000000b7ef         db  0x04 ; '.'
000000000000b7f0         db  0x42 ; 'B'
000000000000b7f1         db  0x0e ; '.'
000000000000b7f2         db  0x28 ; '('
000000000000b7f3         db  0x8c ; '.'
000000000000b7f4         db  0x05 ; '.'
000000000000b7f5         db  0x48 ; 'H'
000000000000b7f6         db  0x0e ; '.'
000000000000b7f7         db  0x30 ; '0'
000000000000b7f8         db  0x86 ; '.'
000000000000b7f9         db  0x06 ; '.'
000000000000b7fa         db  0x41 ; 'A'
000000000000b7fb         db  0x0e ; '.'
000000000000b7fc         db  0x38 ; '8'
000000000000b7fd         db  0x83 ; '.'
000000000000b7fe         db  0x07 ; '.'
000000000000b7ff         db  0x50 ; 'P'
000000000000b800         db  0x0e ; '.'
000000000000b801         db  0xc0 ; '.'
000000000000b802         db  0x01 ; '.'
000000000000b803         db  0x03 ; '.'
000000000000b804         db  0xa6 ; '.'
000000000000b805         db  0x01 ; '.'
000000000000b806         db  0x0e ; '.'
000000000000b807         db  0xc8 ; '.'
000000000000b808         db  0x01 ; '.'
000000000000b809         db  0x50 ; 'P'
000000000000b80a         db  0x0e ; '.'
000000000000b80b         db  0xd0 ; '.'
000000000000b80c         db  0x01 ; '.'
000000000000b80d         db  0x5c ; '\'
000000000000b80e         db  0x0e ; '.'
000000000000b80f         db  0xc8 ; '.'
000000000000b810         db  0x01 ; '.'
000000000000b811         db  0x41 ; 'A'
000000000000b812         db  0x0e ; '.'
000000000000b813         db  0xc0 ; '.'
000000000000b814         db  0x01 ; '.'
000000000000b815         db  0x03 ; '.'
000000000000b816         db  0xab ; '.'
000000000000b817         db  0x02 ; '.'
000000000000b818         db  0x0a ; '.'
000000000000b819         db  0x0e ; '.'
000000000000b81a         db  0x38 ; '8'
000000000000b81b         db  0x41 ; 'A'
000000000000b81c         db  0x0e ; '.'
000000000000b81d         db  0x30 ; '0'
000000000000b81e         db  0x41 ; 'A'
000000000000b81f         db  0x0e ; '.'
000000000000b820         db  0x28 ; '('
000000000000b821         db  0x42 ; 'B'
000000000000b822         db  0x0e ; '.'
000000000000b823         db  0x20 ; ' '
000000000000b824         db  0x42 ; 'B'
000000000000b825         db  0x0e ; '.'
000000000000b826         db  0x18 ; '.'
000000000000b827         db  0x42 ; 'B'
000000000000b828         db  0x0e ; '.'
000000000000b829         db  0x10 ; '.'
000000000000b82a         db  0x42 ; 'B'
000000000000b82b         db  0x0e ; '.'
000000000000b82c         db  0x08 ; '.'
000000000000b82d         db  0x41 ; 'A'
000000000000b82e         db  0x0b ; '.'
000000000000b82f         db  0x00 ; '.'
000000000000b830         dd         0x00000010                                  ; Length of the record
000000000000b834         dd         0x00000274                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b838         db         0xa8, 0x88, 2 dup (0xff)                    ; begin 0x40e0
000000000000b83c         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x40ea)
000000000000b840         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b841         align      4
000000000000b844         dd         0x00000048                                  ; Length of the record
000000000000b848         dd         0x00000288                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b84c         db         0xa4, 0x88, 2 dup (0xff)                    ; begin 0x40f0
000000000000b850         db         0x16, 0x01, 2 dup (0x00)                    ; length 0x116 (end at 0x4206)
000000000000b854         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b855         db  0x42 ; 'B'
000000000000b856         db  0x0e ; '.'
000000000000b857         db  0x10 ; '.'
000000000000b858         db  0x8f ; '.'
000000000000b859         db  0x02 ; '.'
000000000000b85a         db  0x42 ; 'B'
000000000000b85b         db  0x0e ; '.'
000000000000b85c         db  0x18 ; '.'
000000000000b85d         db  0x8e ; '.'
000000000000b85e         db  0x03 ; '.'
000000000000b85f         db  0x45 ; 'E'
000000000000b860         db  0x0e ; '.'
000000000000b861         db  0x20 ; ' '
000000000000b862         db  0x8d ; '.'
000000000000b863         db  0x04 ; '.'
000000000000b864         db  0x42 ; 'B'
000000000000b865         db  0x0e ; '.'
000000000000b866         db  0x28 ; '('
000000000000b867         db  0x8c ; '.'
000000000000b868         db  0x05 ; '.'
000000000000b869         db  0x44 ; 'D'
000000000000b86a         db  0x0e ; '.'
000000000000b86b         db  0x30 ; '0'
000000000000b86c         db  0x86 ; '.'
000000000000b86d         db  0x06 ; '.'
000000000000b86e         db  0x41 ; 'A'
000000000000b86f         db  0x0e ; '.'
000000000000b870         db  0x38 ; '8'
000000000000b871         db  0x83 ; '.'
000000000000b872         db  0x07 ; '.'
000000000000b873         db  0x47 ; 'G'
000000000000b874         db  0x0e ; '.'
000000000000b875         db  0x60 ; '`'
000000000000b876         db  0x02 ; '.'
000000000000b877         db  0xde ; '.'
000000000000b878         db  0x0a ; '.'
000000000000b879         db  0x0e ; '.'
000000000000b87a         db  0x38 ; '8'
000000000000b87b         db  0x41 ; 'A'
000000000000b87c         db  0x0e ; '.'
000000000000b87d         db  0x30 ; '0'
000000000000b87e         db  0x41 ; 'A'
000000000000b87f         db  0x0e ; '.'
000000000000b880         db  0x28 ; '('
000000000000b881         db  0x42 ; 'B'
000000000000b882         db  0x0e ; '.'
000000000000b883         db  0x20 ; ' '
000000000000b884         db  0x42 ; 'B'
000000000000b885         db  0x0e ; '.'
000000000000b886         db  0x18 ; '.'
000000000000b887         db  0x42 ; 'B'
000000000000b888         db  0x0e ; '.'
000000000000b889         db  0x10 ; '.'
000000000000b88a         db  0x42 ; 'B'
000000000000b88b         db  0x0e ; '.'
000000000000b88c         db  0x08 ; '.'
000000000000b88d         db  0x41 ; 'A'
000000000000b88e         db  0x0b ; '.'
000000000000b88f         db  0x00 ; '.'
000000000000b890         dd         0x00000028                                  ; Length of the record
000000000000b894         dd         0x000002d4                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b898         db         0x78, 0x89, 2 dup (0xff)                    ; begin 0x4210
000000000000b89c         db         0x73, 3 dup (0x00)                          ; length 0x73 (end at 0x4283)
000000000000b8a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b8a1         db  0x46 ; 'F'
000000000000b8a2         db  0x0e ; '.'
000000000000b8a3         db  0x10 ; '.'
000000000000b8a4         db  0x8c ; '.'
000000000000b8a5         db  0x02 ; '.'
000000000000b8a6         db  0x46 ; 'F'
000000000000b8a7         db  0x0e ; '.'
000000000000b8a8         db  0x18 ; '.'
000000000000b8a9         db  0x86 ; '.'
000000000000b8aa         db  0x03 ; '.'
000000000000b8ab         db  0x44 ; 'D'
000000000000b8ac         db  0x0e ; '.'
000000000000b8ad         db  0x20 ; ' '
000000000000b8ae         db  0x83 ; '.'
000000000000b8af         db  0x04 ; '.'
000000000000b8b0         db  0x7f ; '.'
000000000000b8b1         db  0x0a ; '.'
000000000000b8b2         db  0x0e ; '.'
000000000000b8b3         db  0x18 ; '.'
000000000000b8b4         db  0x41 ; 'A'
000000000000b8b5         db  0x0e ; '.'
000000000000b8b6         db  0x10 ; '.'
000000000000b8b7         db  0x42 ; 'B'
000000000000b8b8         db  0x0e ; '.'
000000000000b8b9         db  0x08 ; '.'
000000000000b8ba         db  0x4e ; 'N'
000000000000b8bb         db  0x0b ; '.'
000000000000b8bc         dd         0x0000005c                                  ; Length of the record
000000000000b8c0         dd         0x00000300                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b8c4         db         0xcc, 0x89, 2 dup (0xff)                    ; begin 0x4290
000000000000b8c8         db         0x20, 0x01, 2 dup (0x00)                    ; length 0x120 (end at 0x43b0)
000000000000b8cc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b8cd         db  0x42 ; 'B'
000000000000b8ce         db  0x0e ; '.'
000000000000b8cf         db  0x10 ; '.'
000000000000b8d0         db  0x8f ; '.'
000000000000b8d1         db  0x02 ; '.'
000000000000b8d2         db  0x42 ; 'B'
000000000000b8d3         db  0x0e ; '.'
000000000000b8d4         db  0x18 ; '.'
000000000000b8d5         db  0x8e ; '.'
000000000000b8d6         db  0x03 ; '.'
000000000000b8d7         db  0x45 ; 'E'
000000000000b8d8         db  0x0e ; '.'
000000000000b8d9         db  0x20 ; ' '
000000000000b8da         db  0x8d ; '.'
000000000000b8db         db  0x04 ; '.'
000000000000b8dc         db  0x42 ; 'B'
000000000000b8dd         db  0x0e ; '.'
000000000000b8de         db  0x28 ; '('
000000000000b8df         db  0x8c ; '.'
000000000000b8e0         db  0x05 ; '.'
000000000000b8e1         db  0x43 ; 'C'
000000000000b8e2         db  0x0e ; '.'
000000000000b8e3         db  0x30 ; '0'
000000000000b8e4         db  0x86 ; '.'
000000000000b8e5         db  0x06 ; '.'
000000000000b8e6         db  0x41 ; 'A'
000000000000b8e7         db  0x0e ; '.'
000000000000b8e8         db  0x38 ; '8'
000000000000b8e9         db  0x83 ; '.'
000000000000b8ea         db  0x07 ; '.'
000000000000b8eb         db  0x56 ; 'V'
000000000000b8ec         db  0x0e ; '.'
000000000000b8ed         db  0x40 ; '@'
000000000000b8ee         db  0x02 ; '.'
000000000000b8ef         db  0xd3 ; '.'
000000000000b8f0         db  0x0a ; '.'
000000000000b8f1         db  0x0e ; '.'
000000000000b8f2         db  0x38 ; '8'
000000000000b8f3         db  0x41 ; 'A'
000000000000b8f4         db  0x0e ; '.'
000000000000b8f5         db  0x30 ; '0'
000000000000b8f6         db  0x41 ; 'A'
000000000000b8f7         db  0x0e ; '.'
000000000000b8f8         db  0x28 ; '('
000000000000b8f9         db  0x42 ; 'B'
000000000000b8fa         db  0x0e ; '.'
000000000000b8fb         db  0x20 ; ' '
000000000000b8fc         db  0x42 ; 'B'
000000000000b8fd         db  0x0e ; '.'
000000000000b8fe         db  0x18 ; '.'
000000000000b8ff         db  0x42 ; 'B'
000000000000b900         db  0x0e ; '.'
000000000000b901         db  0x10 ; '.'
000000000000b902         db  0x42 ; 'B'
000000000000b903         db  0x0e ; '.'
000000000000b904         db  0x08 ; '.'
000000000000b905         db  0x46 ; 'F'
000000000000b906         db  0x0b ; '.'
000000000000b907         db  0x44 ; 'D'
000000000000b908         db  0x0e ; '.'
000000000000b909         db  0x38 ; '8'
000000000000b90a         db  0x46 ; 'F'
000000000000b90b         db  0x0e ; '.'
000000000000b90c         db  0x30 ; '0'
000000000000b90d         db  0x41 ; 'A'
000000000000b90e         db  0x0e ; '.'
000000000000b90f         db  0x28 ; '('
000000000000b910         db  0x42 ; 'B'
000000000000b911         db  0x0e ; '.'
000000000000b912         db  0x20 ; ' '
000000000000b913         db  0x42 ; 'B'
000000000000b914         db  0x0e ; '.'
000000000000b915         db  0x18 ; '.'
000000000000b916         db  0x42 ; 'B'
000000000000b917         db  0x0e ; '.'
000000000000b918         db  0x10 ; '.'
000000000000b919         db  0x42 ; 'B'
000000000000b91a         db  0x0e ; '.'
000000000000b91b         db  0x08 ; '.'
000000000000b91c         dd         0x00000048                                  ; Length of the record
000000000000b920         dd         0x00000360                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b924         db         0x8c, 0x8a, 2 dup (0xff)                    ; begin 0x43b0
000000000000b928         db         0x6d, 3 dup (0x00)                          ; length 0x6d (end at 0x441d)
000000000000b92c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b92d         db  0x42 ; 'B'
000000000000b92e         db  0x0e ; '.'
000000000000b92f         db  0x10 ; '.'
000000000000b930         db  0x8f ; '.'
000000000000b931         db  0x02 ; '.'
000000000000b932         db  0x42 ; 'B'
000000000000b933         db  0x0e ; '.'
000000000000b934         db  0x18 ; '.'
000000000000b935         db  0x8e ; '.'
000000000000b936         db  0x03 ; '.'
000000000000b937         db  0x45 ; 'E'
000000000000b938         db  0x0e ; '.'
000000000000b939         db  0x20 ; ' '
000000000000b93a         db  0x8d ; '.'
000000000000b93b         db  0x04 ; '.'
000000000000b93c         db  0x42 ; 'B'
000000000000b93d         db  0x0e ; '.'
000000000000b93e         db  0x28 ; '('
000000000000b93f         db  0x8c ; '.'
000000000000b940         db  0x05 ; '.'
000000000000b941         db  0x44 ; 'D'
000000000000b942         db  0x0e ; '.'
000000000000b943         db  0x30 ; '0'
000000000000b944         db  0x86 ; '.'
000000000000b945         db  0x06 ; '.'
000000000000b946         db  0x41 ; 'A'
000000000000b947         db  0x0e ; '.'
000000000000b948         db  0x38 ; '8'
000000000000b949         db  0x83 ; '.'
000000000000b94a         db  0x07 ; '.'
000000000000b94b         db  0x50 ; 'P'
000000000000b94c         db  0x0e ; '.'
000000000000b94d         db  0x40 ; '@'
000000000000b94e         db  0x5a ; 'Z'
000000000000b94f         db  0x0a ; '.'
000000000000b950         db  0x0e ; '.'
000000000000b951         db  0x38 ; '8'
000000000000b952         db  0x41 ; 'A'
000000000000b953         db  0x0e ; '.'
000000000000b954         db  0x30 ; '0'
000000000000b955         db  0x41 ; 'A'
000000000000b956         db  0x0e ; '.'
000000000000b957         db  0x28 ; '('
000000000000b958         db  0x42 ; 'B'
000000000000b959         db  0x0e ; '.'
000000000000b95a         db  0x20 ; ' '
000000000000b95b         db  0x42 ; 'B'
000000000000b95c         db  0x0e ; '.'
000000000000b95d         db  0x18 ; '.'
000000000000b95e         db  0x42 ; 'B'
000000000000b95f         db  0x0e ; '.'
000000000000b960         db  0x10 ; '.'
000000000000b961         db  0x42 ; 'B'
000000000000b962         db  0x0e ; '.'
000000000000b963         db  0x08 ; '.'
000000000000b964         db  0x41 ; 'A'
000000000000b965         db  0x0b ; '.'
000000000000b966         db  0x00 ; '.'
000000000000b967         db  0x00 ; '.'
000000000000b968         dd         0x0000003c                                  ; Length of the record
000000000000b96c         dd         0x000003ac                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b970         db         0xb0, 0x8a, 2 dup (0xff)                    ; begin 0x4420
000000000000b974         db         0x4d, 3 dup (0x00)                          ; length 0x4d (end at 0x446d)
000000000000b978         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b979         db  0x42 ; 'B'
000000000000b97a         db  0x0e ; '.'
000000000000b97b         db  0x10 ; '.'
000000000000b97c         db  0x8e ; '.'
000000000000b97d         db  0x02 ; '.'
000000000000b97e         db  0x42 ; 'B'
000000000000b97f         db  0x0e ; '.'
000000000000b980         db  0x18 ; '.'
000000000000b981         db  0x8d ; '.'
000000000000b982         db  0x03 ; '.'
000000000000b983         db  0x42 ; 'B'
000000000000b984         db  0x0e ; '.'
000000000000b985         db  0x20 ; ' '
000000000000b986         db  0x8c ; '.'
000000000000b987         db  0x04 ; '.'
000000000000b988         db  0x41 ; 'A'
000000000000b989         db  0x0e ; '.'
000000000000b98a         db  0x28 ; '('
000000000000b98b         db  0x86 ; '.'
000000000000b98c         db  0x05 ; '.'
000000000000b98d         db  0x41 ; 'A'
000000000000b98e         db  0x0e ; '.'
000000000000b98f         db  0x30 ; '0'
000000000000b990         db  0x83 ; '.'
000000000000b991         db  0x06 ; '.'
000000000000b992         db  0x7a ; 'z'
000000000000b993         db  0x0e ; '.'
000000000000b994         db  0x28 ; '('
000000000000b995         db  0x44 ; 'D'
000000000000b996         db  0x0e ; '.'
000000000000b997         db  0x20 ; ' '
000000000000b998         db  0x42 ; 'B'
000000000000b999         db  0x0e ; '.'
000000000000b99a         db  0x18 ; '.'
000000000000b99b         db  0x42 ; 'B'
000000000000b99c         db  0x0e ; '.'
000000000000b99d         db  0x10 ; '.'
000000000000b99e         db  0x42 ; 'B'
000000000000b99f         db  0x0e ; '.'
000000000000b9a0         db  0x08 ; '.'
000000000000b9a1         db  0x00 ; '.'
000000000000b9a2         db  0x00 ; '.'
000000000000b9a3         db  0x00 ; '.'
000000000000b9a4         db  0x00 ; '.'
000000000000b9a5         db  0x00 ; '.'
000000000000b9a6         db  0x00 ; '.'
000000000000b9a7         db  0x00 ; '.'
000000000000b9a8         dd         0x00000010                                  ; Length of the record
000000000000b9ac         dd         0x000003ec                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b9b0         db         0xc0, 0x8a, 2 dup (0xff)                    ; begin 0x4470
000000000000b9b4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x4478)
000000000000b9b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b9b9         align      4
000000000000b9bc         dd         0x00000010                                  ; Length of the record
000000000000b9c0         dd         0x00000400                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b9c4         db         0xbc, 0x8a, 2 dup (0xff)                    ; begin 0x4480
000000000000b9c8         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x4488)
000000000000b9cc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b9cd         align      16
000000000000b9d0         dd         0x0000002c                                  ; Length of the record
000000000000b9d4         dd         0x00000414                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000b9d8         db         0xb8, 0x8a, 2 dup (0xff)                    ; begin 0x4490
000000000000b9dc         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x4534)
000000000000b9e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b9e1         db  0x41 ; 'A'
000000000000b9e2         db  0x0e ; '.'
000000000000b9e3         db  0x10 ; '.'
000000000000b9e4         db  0x86 ; '.'
000000000000b9e5         db  0x02 ; '.'
000000000000b9e6         db  0x41 ; 'A'
000000000000b9e7         db  0x0e ; '.'
000000000000b9e8         db  0x18 ; '.'
000000000000b9e9         db  0x83 ; '.'
000000000000b9ea         db  0x03 ; '.'
000000000000b9eb         db  0x44 ; 'D'
000000000000b9ec         db  0x0e ; '.'
000000000000b9ed         db  0x20 ; ' '
000000000000b9ee         db  0x7a ; 'z'
000000000000b9ef         db  0x0a ; '.'
000000000000b9f0         db  0x0e ; '.'
000000000000b9f1         db  0x18 ; '.'
000000000000b9f2         db  0x41 ; 'A'
000000000000b9f3         db  0x0e ; '.'
000000000000b9f4         db  0x10 ; '.'
000000000000b9f5         db  0x41 ; 'A'
000000000000b9f6         db  0x0e ; '.'
000000000000b9f7         db  0x08 ; '.'
000000000000b9f8         db  0x41 ; 'A'
000000000000b9f9         db  0x0b ; '.'
000000000000b9fa         db  0x00 ; '.'
000000000000b9fb         db  0x00 ; '.'
000000000000b9fc         db  0x00 ; '.'
000000000000b9fd         db  0x00 ; '.'
000000000000b9fe         db  0x00 ; '.'
000000000000b9ff         db  0x00 ; '.'
000000000000ba00         dd         0x0000001c                                  ; Length of the record
000000000000ba04         dd         0x00000444                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000ba08         db         0x38, 0x8b, 2 dup (0xff)                    ; begin 0x4540
000000000000ba0c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4558)
000000000000ba10         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ba11         db  0x44 ; 'D'
000000000000ba12         db  0x0e ; '.'
000000000000ba13         db  0x10 ; '.'
000000000000ba14         db  0x4e ; 'N'
000000000000ba15         db  0x0a ; '.'
000000000000ba16         db  0x0e ; '.'
000000000000ba17         db  0x08 ; '.'
000000000000ba18         db  0x41 ; 'A'
000000000000ba19         db  0x0b ; '.'
000000000000ba1a         db  0x00 ; '.'
000000000000ba1b         db  0x00 ; '.'
000000000000ba1c         db  0x00 ; '.'
000000000000ba1d         db  0x00 ; '.'
000000000000ba1e         db  0x00 ; '.'
000000000000ba1f         db  0x00 ; '.'
000000000000ba20         dd         0x00000030                                  ; Length of the record
000000000000ba24         dd         0x00000464                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000ba28         db         0x38, 0x8b, 2 dup (0xff)                    ; begin 0x4560
000000000000ba2c         db         0x5d, 3 dup (0x00)                          ; length 0x5d (end at 0x45bd)
000000000000ba30         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ba31         db  0x41 ; 'A'
000000000000ba32         db  0x0e ; '.'
000000000000ba33         db  0x10 ; '.'
000000000000ba34         db  0x86 ; '.'
000000000000ba35         db  0x02 ; '.'
000000000000ba36         db  0x41 ; 'A'
000000000000ba37         db  0x0e ; '.'
000000000000ba38         db  0x18 ; '.'
000000000000ba39         db  0x83 ; '.'
000000000000ba3a         db  0x03 ; '.'
000000000000ba3b         db  0x49 ; 'I'
000000000000ba3c         db  0x0e ; '.'
000000000000ba3d         db  0x20 ; ' '
000000000000ba3e         db  0x7c ; '|'
000000000000ba3f         db  0x0a ; '.'
000000000000ba40         db  0x0e ; '.'
000000000000ba41         db  0x18 ; '.'
000000000000ba42         db  0x44 ; 'D'
000000000000ba43         db  0x0e ; '.'
000000000000ba44         db  0x10 ; '.'
000000000000ba45         db  0x41 ; 'A'
000000000000ba46         db  0x0e ; '.'
000000000000ba47         db  0x08 ; '.'
000000000000ba48         db  0x44 ; 'D'
000000000000ba49         db  0x0b ; '.'
000000000000ba4a         db  0x44 ; 'D'
000000000000ba4b         db  0x0e ; '.'
000000000000ba4c         db  0x18 ; '.'
000000000000ba4d         db  0x47 ; 'G'
000000000000ba4e         db  0x0e ; '.'
000000000000ba4f         db  0x10 ; '.'
000000000000ba50         db  0x41 ; 'A'
000000000000ba51         db  0x0e ; '.'
000000000000ba52         db  0x08 ; '.'
000000000000ba53         db  0x00 ; '.'
000000000000ba54         dd         0x00000028                                  ; Length of the record
000000000000ba58         dd         0x00000498                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000ba5c         db         0x64, 0x8b, 2 dup (0xff)                    ; begin 0x45c0
000000000000ba60         db         0x5a, 3 dup (0x00)                          ; length 0x5a (end at 0x461a)
000000000000ba64         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ba65         db  0x41 ; 'A'
000000000000ba66         db  0x0e ; '.'
000000000000ba67         db  0x10 ; '.'
000000000000ba68         db  0x86 ; '.'
000000000000ba69         db  0x02 ; '.'
000000000000ba6a         db  0x41 ; 'A'
000000000000ba6b         db  0x0e ; '.'
000000000000ba6c         db  0x18 ; '.'
000000000000ba6d         db  0x83 ; '.'
000000000000ba6e         db  0x03 ; '.'
000000000000ba6f         db  0x47 ; 'G'
000000000000ba70         db  0x0e ; '.'
000000000000ba71         db  0x20 ; ' '
000000000000ba72         db  0x02 ; '.'
000000000000ba73         db  0x41 ; 'A'
000000000000ba74         db  0x0a ; '.'
000000000000ba75         db  0x0e ; '.'
000000000000ba76         db  0x18 ; '.'
000000000000ba77         db  0x44 ; 'D'
000000000000ba78         db  0x0e ; '.'
000000000000ba79         db  0x10 ; '.'
000000000000ba7a         db  0x41 ; 'A'
000000000000ba7b         db  0x0e ; '.'
000000000000ba7c         db  0x08 ; '.'
000000000000ba7d         db  0x41 ; 'A'
000000000000ba7e         db  0x0b ; '.'
000000000000ba7f         db  0x00 ; '.'
000000000000ba80         dd         0x00000010                                  ; Length of the record
000000000000ba84         dd         0x000004c4                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000ba88         db         0x98, 0x8b, 2 dup (0xff)                    ; begin 0x4620
000000000000ba8c         db         0x5c, 3 dup (0x00)                          ; length 0x5c (end at 0x467c)
000000000000ba90         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ba91         align      4
000000000000ba94         dd         0x00000028                                  ; Length of the record
000000000000ba98         dd         0x000004d8                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000ba9c         db         0xe4, 0x8b, 2 dup (0xff)                    ; begin 0x4680
000000000000baa0         db         0x47, 3 dup (0x00)                          ; length 0x47 (end at 0x46c7)
000000000000baa4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000baa5         db  0x41 ; 'A'
000000000000baa6         db  0x0e ; '.'
000000000000baa7         db  0x10 ; '.'
000000000000baa8         db  0x83 ; '.'
000000000000baa9         db  0x02 ; '.'
000000000000baaa         db  0x5a ; 'Z'
000000000000baab         db  0x0a ; '.'
000000000000baac         db  0x0e ; '.'
000000000000baad         db  0x08 ; '.'
000000000000baae         db  0x45 ; 'E'
000000000000baaf         db  0x0b ; '.'
000000000000bab0         db  0x5d ; ']'
000000000000bab1         db  0x0a ; '.'
000000000000bab2         db  0x0e ; '.'
000000000000bab3         db  0x08 ; '.'
000000000000bab4         db  0x43 ; 'C'
000000000000bab5         db  0x0b ; '.'
000000000000bab6         db  0x46 ; 'F'
000000000000bab7         db  0x0e ; '.'
000000000000bab8         db  0x08 ; '.'
000000000000bab9         db  0x00 ; '.'
000000000000baba         db  0x00 ; '.'
000000000000babb         db  0x00 ; '.'
000000000000babc         db  0x00 ; '.'
000000000000babd         db  0x00 ; '.'
000000000000babe         db  0x00 ; '.'
000000000000babf         db  0x00 ; '.'
000000000000bac0         dd         0x0000001c                                  ; Length of the record
000000000000bac4         dd         0x00000504                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bac8         db         0x08, 0x8c, 2 dup (0xff)                    ; begin 0x46d0
000000000000bacc         db         0x6e, 3 dup (0x00)                          ; length 0x6e (end at 0x473e)
000000000000bad0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bad1         db  0x44 ; 'D'
000000000000bad2         db  0x0e ; '.'
000000000000bad3         db  0x60 ; '`'
000000000000bad4         db  0x7f ; '.'
000000000000bad5         db  0x0a ; '.'
000000000000bad6         db  0x0e ; '.'
000000000000bad7         db  0x08 ; '.'
000000000000bad8         db  0x45 ; 'E'
000000000000bad9         db  0x0b ; '.'
000000000000bada         db  0x00 ; '.'
000000000000badb         db  0x00 ; '.'
000000000000badc         db  0x00 ; '.'
000000000000badd         db  0x00 ; '.'
000000000000bade         db  0x00 ; '.'
000000000000badf         db  0x00 ; '.'
000000000000bae0         dd         0x00000010                                  ; Length of the record
000000000000bae4         dd         0x00000524                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bae8         db         0x58, 0x8c, 2 dup (0xff)                    ; begin 0x4740
000000000000baec         db         0xc7, 3 dup (0x00)                          ; length 0xc7 (end at 0x4807)
000000000000baf0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000baf1         align      4
000000000000baf4         dd         0x000000a4                                  ; Length of the record
000000000000baf8         dd         0x00000538                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bafc         db         0x14, 0x8d, 2 dup (0xff)                    ; begin 0x4810
000000000000bb00         db         0x07, 0x0a, 2 dup (0x00)                    ; length 0xa07 (end at 0x5217)
000000000000bb04         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bb05         db  0x42 ; 'B'
000000000000bb06         db  0x0e ; '.'
000000000000bb07         db  0x10 ; '.'
000000000000bb08         db  0x8f ; '.'
000000000000bb09         db  0x02 ; '.'
000000000000bb0a         db  0x42 ; 'B'
000000000000bb0b         db  0x0e ; '.'
000000000000bb0c         db  0x18 ; '.'
000000000000bb0d         db  0x8e ; '.'
000000000000bb0e         db  0x03 ; '.'
000000000000bb0f         db  0x44 ; 'D'
000000000000bb10         db  0x0e ; '.'
000000000000bb11         db  0x20 ; ' '
000000000000bb12         db  0x8d ; '.'
000000000000bb13         db  0x04 ; '.'
000000000000bb14         db  0x42 ; 'B'
000000000000bb15         db  0x0e ; '.'
000000000000bb16         db  0x28 ; '('
000000000000bb17         db  0x8c ; '.'
000000000000bb18         db  0x05 ; '.'
000000000000bb19         db  0x44 ; 'D'
000000000000bb1a         db  0x0e ; '.'
000000000000bb1b         db  0x30 ; '0'
000000000000bb1c         db  0x86 ; '.'
000000000000bb1d         db  0x06 ; '.'
000000000000bb1e         db  0x41 ; 'A'
000000000000bb1f         db  0x0e ; '.'
000000000000bb20         db  0x38 ; '8'
000000000000bb21         db  0x83 ; '.'
000000000000bb22         db  0x07 ; '.'
000000000000bb23         db  0x54 ; 'T'
000000000000bb24         db  0x0e ; '.'
000000000000bb25         db  0xd0 ; '.'
000000000000bb26         db  0x01 ; '.'
000000000000bb27         db  0x03 ; '.'
000000000000bb28         db  0x7e ; '~'
000000000000bb29         db  0x01 ; '.'
000000000000bb2a         db  0x0e ; '.'
000000000000bb2b         db  0xe0 ; '.'
000000000000bb2c         db  0x01 ; '.'
000000000000bb2d         db  0x6e ; 'n'
000000000000bb2e         db  0x0e ; '.'
000000000000bb2f         db  0xd8 ; '.'
000000000000bb30         db  0x01 ; '.'
000000000000bb31         db  0x41 ; 'A'
000000000000bb32         db  0x0e ; '.'
000000000000bb33         db  0xd0 ; '.'
000000000000bb34         db  0x01 ; '.'
000000000000bb35         db  0x03 ; '.'
000000000000bb36         db  0x40 ; '@'
000000000000bb37         db  0x01 ; '.'
000000000000bb38         db  0x0e ; '.'
000000000000bb39         db  0xe0 ; '.'
000000000000bb3a         db  0x01 ; '.'
000000000000bb3b         db  0x75 ; 'u'
000000000000bb3c         db  0x0e ; '.'
000000000000bb3d         db  0xd8 ; '.'
000000000000bb3e         db  0x01 ; '.'
000000000000bb3f         db  0x41 ; 'A'
000000000000bb40         db  0x0e ; '.'
000000000000bb41         db  0xd0 ; '.'
000000000000bb42         db  0x01 ; '.'
000000000000bb43         db  0x02 ; '.'
000000000000bb44         db  0xea ; '.'
000000000000bb45         db  0x0a ; '.'
000000000000bb46         db  0x0e ; '.'
000000000000bb47         db  0x38 ; '8'
000000000000bb48         db  0x41 ; 'A'
000000000000bb49         db  0x0e ; '.'
000000000000bb4a         db  0x30 ; '0'
000000000000bb4b         db  0x41 ; 'A'
000000000000bb4c         db  0x0e ; '.'
000000000000bb4d         db  0x28 ; '('
000000000000bb4e         db  0x42 ; 'B'
000000000000bb4f         db  0x0e ; '.'
000000000000bb50         db  0x20 ; ' '
000000000000bb51         db  0x42 ; 'B'
000000000000bb52         db  0x0e ; '.'
000000000000bb53         db  0x18 ; '.'
000000000000bb54         db  0x42 ; 'B'
000000000000bb55         db  0x0e ; '.'
000000000000bb56         db  0x10 ; '.'
000000000000bb57         db  0x42 ; 'B'
000000000000bb58         db  0x0e ; '.'
000000000000bb59         db  0x08 ; '.'
000000000000bb5a         db  0x46 ; 'F'
000000000000bb5b         db  0x0b ; '.'
000000000000bb5c         db  0x03 ; '.'
000000000000bb5d         db  0x2c ; ','
000000000000bb5e         db  0x01 ; '.'
000000000000bb5f         db  0x0e ; '.'
000000000000bb60         db  0xe0 ; '.'
000000000000bb61         db  0x01 ; '.'
000000000000bb62         db  0x52 ; 'R'
000000000000bb63         db  0x0e ; '.'
000000000000bb64         db  0xd8 ; '.'
000000000000bb65         db  0x01 ; '.'
000000000000bb66         db  0x41 ; 'A'
000000000000bb67         db  0x0e ; '.'
000000000000bb68         db  0xd0 ; '.'
000000000000bb69         db  0x01 ; '.'
000000000000bb6a         db  0x55 ; 'U'
000000000000bb6b         db  0x0e ; '.'
000000000000bb6c         db  0xe0 ; '.'
000000000000bb6d         db  0x01 ; '.'
000000000000bb6e         db  0x4d ; 'M'
000000000000bb6f         db  0x0e ; '.'
000000000000bb70         db  0xd8 ; '.'
000000000000bb71         db  0x01 ; '.'
000000000000bb72         db  0x42 ; 'B'
000000000000bb73         db  0x0e ; '.'
000000000000bb74         db  0xd0 ; '.'
000000000000bb75         db  0x01 ; '.'
000000000000bb76         db  0x03 ; '.'
000000000000bb77         db  0x51 ; 'Q'
000000000000bb78         db  0x01 ; '.'
000000000000bb79         db  0x0e ; '.'
000000000000bb7a         db  0xe0 ; '.'
000000000000bb7b         db  0x01 ; '.'
000000000000bb7c         db  0x77 ; 'w'
000000000000bb7d         db  0x0e ; '.'
000000000000bb7e         db  0xd8 ; '.'
000000000000bb7f         db  0x01 ; '.'
000000000000bb80         db  0x41 ; 'A'
000000000000bb81         db  0x0e ; '.'
000000000000bb82         db  0xd0 ; '.'
000000000000bb83         db  0x01 ; '.'
000000000000bb84         db  0x5d ; ']'
000000000000bb85         db  0x0e ; '.'
000000000000bb86         db  0xe0 ; '.'
000000000000bb87         db  0x01 ; '.'
000000000000bb88         db  0x71 ; 'q'
000000000000bb89         db  0x0e ; '.'
000000000000bb8a         db  0xd8 ; '.'
000000000000bb8b         db  0x01 ; '.'
000000000000bb8c         db  0x45 ; 'E'
000000000000bb8d         db  0x0e ; '.'
000000000000bb8e         db  0xd0 ; '.'
000000000000bb8f         db  0x01 ; '.'
000000000000bb90         db  0x63 ; 'c'
000000000000bb91         db  0x0e ; '.'
000000000000bb92         db  0xe0 ; '.'
000000000000bb93         db  0x01 ; '.'
000000000000bb94         db  0x4c ; 'L'
000000000000bb95         db  0x0e ; '.'
000000000000bb96         db  0xd8 ; '.'
000000000000bb97         db  0x01 ; '.'
000000000000bb98         db  0x42 ; 'B'
000000000000bb99         db  0x0e ; '.'
000000000000bb9a         db  0xd0 ; '.'
000000000000bb9b         db  0x01 ; '.'
000000000000bb9c         dd         0x00000038                                  ; Length of the record
000000000000bba0         dd         0x000005e0                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bba4         db         0x7c, 0x96, 2 dup (0xff)                    ; begin 0x5220
000000000000bba8         db         0xe6, 0x01, 2 dup (0x00)                    ; length 0x1e6 (end at 0x5406)
000000000000bbac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bbad         db  0x42 ; 'B'
000000000000bbae         db  0x0e ; '.'
000000000000bbaf         db  0x10 ; '.'
000000000000bbb0         db  0x8d ; '.'
000000000000bbb1         db  0x02 ; '.'
000000000000bbb2         db  0x42 ; 'B'
000000000000bbb3         db  0x0e ; '.'
000000000000bbb4         db  0x18 ; '.'
000000000000bbb5         db  0x8c ; '.'
000000000000bbb6         db  0x03 ; '.'
000000000000bbb7         db  0x44 ; 'D'
000000000000bbb8         db  0x0e ; '.'
000000000000bbb9         db  0x20 ; ' '
000000000000bbba         db  0x86 ; '.'
000000000000bbbb         db  0x04 ; '.'
000000000000bbbc         db  0x41 ; 'A'
000000000000bbbd         db  0x0e ; '.'
000000000000bbbe         db  0x28 ; '('
000000000000bbbf         db  0x83 ; '.'
000000000000bbc0         db  0x05 ; '.'
000000000000bbc1         db  0x4a ; 'J'
000000000000bbc2         db  0x0e ; '.'
000000000000bbc3         db  0x40 ; '@'
000000000000bbc4         db  0x02 ; '.'
000000000000bbc5         db  0x7a ; 'z'
000000000000bbc6         db  0x0a ; '.'
000000000000bbc7         db  0x0e ; '.'
000000000000bbc8         db  0x28 ; '('
000000000000bbc9         db  0x41 ; 'A'
000000000000bbca         db  0x0e ; '.'
000000000000bbcb         db  0x20 ; ' '
000000000000bbcc         db  0x41 ; 'A'
000000000000bbcd         db  0x0e ; '.'
000000000000bbce         db  0x18 ; '.'
000000000000bbcf         db  0x42 ; 'B'
000000000000bbd0         db  0x0e ; '.'
000000000000bbd1         db  0x10 ; '.'
000000000000bbd2         db  0x42 ; 'B'
000000000000bbd3         db  0x0e ; '.'
000000000000bbd4         db  0x08 ; '.'
000000000000bbd5         db  0x45 ; 'E'
000000000000bbd6         db  0x0b ; '.'
000000000000bbd7         db  0x00 ; '.'
000000000000bbd8         dd         0x00000014                                  ; Length of the record
000000000000bbdc         dd         0x0000061c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bbe0         db         0x30, 0x98, 2 dup (0xff)                    ; begin 0x5410
000000000000bbe4         db         0x42, 3 dup (0x00)                          ; length 0x42 (end at 0x5452)
000000000000bbe8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bbe9         align      16
000000000000bbf0         dd         0x0000001c                                  ; Length of the record
000000000000bbf4         dd         0x00000634                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bbf8         db         0x68, 0x98, 2 dup (0xff)                    ; begin 0x5460
000000000000bbfc         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x54ff)
000000000000bc00         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bc01         db  0x44 ; 'D'
000000000000bc02         db  0x0e ; '.'
000000000000bc03         db  0x10 ; '.'
000000000000bc04         db  0x83 ; '.'
000000000000bc05         db  0x02 ; '.'
000000000000bc06         db  0x02 ; '.'
000000000000bc07         db  0x78 ; 'x'
000000000000bc08         db  0x0a ; '.'
000000000000bc09         db  0x0e ; '.'
000000000000bc0a         db  0x08 ; '.'
000000000000bc0b         db  0x41 ; 'A'
000000000000bc0c         db  0x0b ; '.'
000000000000bc0d         db  0x00 ; '.'
000000000000bc0e         db  0x00 ; '.'
000000000000bc0f         db  0x00 ; '.'
000000000000bc10         dd         0x00000040                                  ; Length of the record
000000000000bc14         dd         0x00000654                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bc18         db         0xe8, 0x98, 2 dup (0xff)                    ; begin 0x5500
000000000000bc1c         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x55e7)
000000000000bc20         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bc21         db  0x41 ; 'A'
000000000000bc22         db  0x0e ; '.'
000000000000bc23         db  0x10 ; '.'
000000000000bc24         db  0x86 ; '.'
000000000000bc25         db  0x02 ; '.'
000000000000bc26         db  0x41 ; 'A'
000000000000bc27         db  0x0e ; '.'
000000000000bc28         db  0x18 ; '.'
000000000000bc29         db  0x83 ; '.'
000000000000bc2a         db  0x03 ; '.'
000000000000bc2b         db  0x49 ; 'I'
000000000000bc2c         db  0x0e ; '.'
000000000000bc2d         db  0x20 ; ' '
000000000000bc2e         db  0x6e ; 'n'
000000000000bc2f         db  0x0a ; '.'
000000000000bc30         db  0x0e ; '.'
000000000000bc31         db  0x18 ; '.'
000000000000bc32         db  0x41 ; 'A'
000000000000bc33         db  0x0e ; '.'
000000000000bc34         db  0x10 ; '.'
000000000000bc35         db  0x41 ; 'A'
000000000000bc36         db  0x0e ; '.'
000000000000bc37         db  0x08 ; '.'
000000000000bc38         db  0x45 ; 'E'
000000000000bc39         db  0x0b ; '.'
000000000000bc3a         db  0x02 ; '.'
000000000000bc3b         db  0x4a ; 'J'
000000000000bc3c         db  0x0a ; '.'
000000000000bc3d         db  0x0e ; '.'
000000000000bc3e         db  0x18 ; '.'
000000000000bc3f         db  0x41 ; 'A'
000000000000bc40         db  0x0e ; '.'
000000000000bc41         db  0x10 ; '.'
000000000000bc42         db  0x41 ; 'A'
000000000000bc43         db  0x0e ; '.'
000000000000bc44         db  0x08 ; '.'
000000000000bc45         db  0x44 ; 'D'
000000000000bc46         db  0x0b ; '.'
000000000000bc47         db  0x02 ; '.'
000000000000bc48         db  0x54 ; 'T'
000000000000bc49         db  0x0e ; '.'
000000000000bc4a         db  0x18 ; '.'
000000000000bc4b         db  0x41 ; 'A'
000000000000bc4c         db  0x0e ; '.'
000000000000bc4d         db  0x10 ; '.'
000000000000bc4e         db  0x41 ; 'A'
000000000000bc4f         db  0x0e ; '.'
000000000000bc50         db  0x08 ; '.'
000000000000bc51         db  0x00 ; '.'
000000000000bc52         db  0x00 ; '.'
000000000000bc53         db  0x00 ; '.'
000000000000bc54         dd         0x00000074                                  ; Length of the record
000000000000bc58         dd         0x00000698                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bc5c         db         0x94, 0x99, 2 dup (0xff)                    ; begin 0x55f0
000000000000bc60         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x6824)
000000000000bc64         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bc65         db  0x42 ; 'B'
000000000000bc66         db  0x0e ; '.'
000000000000bc67         db  0x10 ; '.'
000000000000bc68         db  0x8f ; '.'
000000000000bc69         db  0x02 ; '.'
000000000000bc6a         db  0x42 ; 'B'
000000000000bc6b         db  0x0e ; '.'
000000000000bc6c         db  0x18 ; '.'
000000000000bc6d         db  0x8e ; '.'
000000000000bc6e         db  0x03 ; '.'
000000000000bc6f         db  0x45 ; 'E'
000000000000bc70         db  0x0e ; '.'
000000000000bc71         db  0x20 ; ' '
000000000000bc72         db  0x8d ; '.'
000000000000bc73         db  0x04 ; '.'
000000000000bc74         db  0x42 ; 'B'
000000000000bc75         db  0x0e ; '.'
000000000000bc76         db  0x28 ; '('
000000000000bc77         db  0x8c ; '.'
000000000000bc78         db  0x05 ; '.'
000000000000bc79         db  0x44 ; 'D'
000000000000bc7a         db  0x0e ; '.'
000000000000bc7b         db  0x30 ; '0'
000000000000bc7c         db  0x86 ; '.'
000000000000bc7d         db  0x06 ; '.'
000000000000bc7e         db  0x41 ; 'A'
000000000000bc7f         db  0x0e ; '.'
000000000000bc80         db  0x38 ; '8'
000000000000bc81         db  0x83 ; '.'
000000000000bc82         db  0x07 ; '.'
000000000000bc83         db  0x53 ; 'S'
000000000000bc84         db  0x0e ; '.'
000000000000bc85         db  0xf0 ; '.'
000000000000bc86         db  0x01 ; '.'
000000000000bc87         db  0x03 ; '.'
000000000000bc88         db  0x81 ; '.'
000000000000bc89         db  0x0b ; '.'
000000000000bc8a         db  0x0e ; '.'
000000000000bc8b         db  0xf8 ; '.'
000000000000bc8c         db  0x01 ; '.'
000000000000bc8d         db  0x4a ; 'J'
000000000000bc8e         db  0x0e ; '.'
000000000000bc8f         db  0x80 ; '.'
000000000000bc90         db  0x02 ; '.'
000000000000bc91         db  0x44 ; 'D'
000000000000bc92         db  0x0e ; '.'
000000000000bc93         db  0x88 ; '.'
000000000000bc94         db  0x02 ; '.'
000000000000bc95         db  0x45 ; 'E'
000000000000bc96         db  0x0e ; '.'
000000000000bc97         db  0x90 ; '.'
000000000000bc98         db  0x02 ; '.'
000000000000bc99         db  0x5f ; '_'
000000000000bc9a         db  0x0e ; '.'
000000000000bc9b         db  0xf0 ; '.'
000000000000bc9c         db  0x01 ; '.'
000000000000bc9d         db  0x64 ; 'd'
000000000000bc9e         db  0x0a ; '.'
000000000000bc9f         db  0x0e ; '.'
000000000000bca0         db  0x38 ; '8'
000000000000bca1         db  0x41 ; 'A'
000000000000bca2         db  0x0e ; '.'
000000000000bca3         db  0x30 ; '0'
000000000000bca4         db  0x41 ; 'A'
000000000000bca5         db  0x0e ; '.'
000000000000bca6         db  0x28 ; '('
000000000000bca7         db  0x42 ; 'B'
000000000000bca8         db  0x0e ; '.'
000000000000bca9         db  0x20 ; ' '
000000000000bcaa         db  0x42 ; 'B'
000000000000bcab         db  0x0e ; '.'
000000000000bcac         db  0x18 ; '.'
000000000000bcad         db  0x42 ; 'B'
000000000000bcae         db  0x0e ; '.'
000000000000bcaf         db  0x10 ; '.'
000000000000bcb0         db  0x42 ; 'B'
000000000000bcb1         db  0x0e ; '.'
000000000000bcb2         db  0x08 ; '.'
000000000000bcb3         db  0x44 ; 'D'
000000000000bcb4         db  0x0b ; '.'
000000000000bcb5         db  0x03 ; '.'
000000000000bcb6         db  0x99 ; '.'
000000000000bcb7         db  0x05 ; '.'
000000000000bcb8         db  0x0e ; '.'
000000000000bcb9         db  0xf8 ; '.'
000000000000bcba         db  0x01 ; '.'
000000000000bcbb         db  0x4d ; 'M'
000000000000bcbc         db  0x0e ; '.'
000000000000bcbd         db  0x80 ; '.'
000000000000bcbe         db  0x02 ; '.'
000000000000bcbf         db  0x44 ; 'D'
000000000000bcc0         db  0x0e ; '.'
000000000000bcc1         db  0x88 ; '.'
000000000000bcc2         db  0x02 ; '.'
000000000000bcc3         db  0x47 ; 'G'
000000000000bcc4         db  0x0e ; '.'
000000000000bcc5         db  0x90 ; '.'
000000000000bcc6         db  0x02 ; '.'
000000000000bcc7         db  0x5b ; '['
000000000000bcc8         db  0x0e ; '.'
000000000000bcc9         db  0xf0 ; '.'
000000000000bcca         db  0x01 ; '.'
000000000000bccb         db  0x00 ; '.'
000000000000bccc         dd         0x00000068                                  ; Length of the record
000000000000bcd0         dd         0x00000710                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bcd4         db         0x5c, 0xab, 2 dup (0xff)                    ; begin 0x6830
000000000000bcd8         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x69db)
000000000000bcdc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bcdd         db  0x42 ; 'B'
000000000000bcde         db  0x0e ; '.'
000000000000bcdf         db  0x10 ; '.'
000000000000bce0         db  0x8f ; '.'
000000000000bce1         db  0x02 ; '.'
000000000000bce2         db  0x42 ; 'B'
000000000000bce3         db  0x0e ; '.'
000000000000bce4         db  0x18 ; '.'
000000000000bce5         db  0x8e ; '.'
000000000000bce6         db  0x03 ; '.'
000000000000bce7         db  0x45 ; 'E'
000000000000bce8         db  0x0e ; '.'
000000000000bce9         db  0x20 ; ' '
000000000000bcea         db  0x8d ; '.'
000000000000bceb         db  0x04 ; '.'
000000000000bcec         db  0x42 ; 'B'
000000000000bced         db  0x0e ; '.'
000000000000bcee         db  0x28 ; '('
000000000000bcef         db  0x8c ; '.'
000000000000bcf0         db  0x05 ; '.'
000000000000bcf1         db  0x44 ; 'D'
000000000000bcf2         db  0x0e ; '.'
000000000000bcf3         db  0x30 ; '0'
000000000000bcf4         db  0x86 ; '.'
000000000000bcf5         db  0x06 ; '.'
000000000000bcf6         db  0x41 ; 'A'
000000000000bcf7         db  0x0e ; '.'
000000000000bcf8         db  0x38 ; '8'
000000000000bcf9         db  0x83 ; '.'
000000000000bcfa         db  0x07 ; '.'
000000000000bcfb         db  0x47 ; 'G'
000000000000bcfc         db  0x0e ; '.'
000000000000bcfd         db  0x60 ; '`'
000000000000bcfe         db  0x02 ; '.'
000000000000bcff         db  0x99 ; '.'
000000000000bd00         db  0x0e ; '.'
000000000000bd01         db  0x68 ; 'h'
000000000000bd02         db  0x5f ; '_'
000000000000bd03         db  0x0e ; '.'
000000000000bd04         db  0x70 ; 'p'
000000000000bd05         db  0x46 ; 'F'
000000000000bd06         db  0x0e ; '.'
000000000000bd07         db  0x78 ; 'x'
000000000000bd08         db  0x42 ; 'B'
000000000000bd09         db  0x0e ; '.'
000000000000bd0a         db  0x80 ; '.'
000000000000bd0b         db  0x01 ; '.'
000000000000bd0c         db  0x59 ; 'Y'
000000000000bd0d         db  0x0e ; '.'
000000000000bd0e         db  0x60 ; '`'
000000000000bd0f         db  0x02 ; '.'
000000000000bd10         db  0x40 ; '@'
000000000000bd11         db  0x0e ; '.'
000000000000bd12         db  0x68 ; 'h'
000000000000bd13         db  0x4b ; 'K'
000000000000bd14         db  0x0e ; '.'
000000000000bd15         db  0x70 ; 'p'
000000000000bd16         db  0x43 ; 'C'
000000000000bd17         db  0x0e ; '.'
000000000000bd18         db  0x78 ; 'x'
000000000000bd19         db  0x45 ; 'E'
000000000000bd1a         db  0x0e ; '.'
000000000000bd1b         db  0x80 ; '.'
000000000000bd1c         db  0x01 ; '.'
000000000000bd1d         db  0x5e ; '^'
000000000000bd1e         db  0x0e ; '.'
000000000000bd1f         db  0x60 ; '`'
000000000000bd20         db  0x4c ; 'L'
000000000000bd21         db  0x0a ; '.'
000000000000bd22         db  0x0e ; '.'
000000000000bd23         db  0x38 ; '8'
000000000000bd24         db  0x44 ; 'D'
000000000000bd25         db  0x0e ; '.'
000000000000bd26         db  0x30 ; '0'
000000000000bd27         db  0x41 ; 'A'
000000000000bd28         db  0x0e ; '.'
000000000000bd29         db  0x28 ; '('
000000000000bd2a         db  0x42 ; 'B'
000000000000bd2b         db  0x0e ; '.'
000000000000bd2c         db  0x20 ; ' '
000000000000bd2d         db  0x42 ; 'B'
000000000000bd2e         db  0x0e ; '.'
000000000000bd2f         db  0x18 ; '.'
000000000000bd30         db  0x42 ; 'B'
000000000000bd31         db  0x0e ; '.'
000000000000bd32         db  0x10 ; '.'
000000000000bd33         db  0x42 ; 'B'
000000000000bd34         db  0x0e ; '.'
000000000000bd35         db  0x08 ; '.'
000000000000bd36         db  0x46 ; 'F'
000000000000bd37         db  0x0b ; '.'
000000000000bd38         dd         0x00000028                                  ; Length of the record
000000000000bd3c         dd         0x0000077c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bd40         db         0xa0, 0xac, 2 dup (0xff)                    ; begin 0x69e0
000000000000bd44         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x6a16)
000000000000bd48         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bd49         db  0x42 ; 'B'
000000000000bd4a         db  0x0e ; '.'
000000000000bd4b         db  0x10 ; '.'
000000000000bd4c         db  0x8c ; '.'
000000000000bd4d         db  0x02 ; '.'
000000000000bd4e         db  0x41 ; 'A'
000000000000bd4f         db  0x0e ; '.'
000000000000bd50         db  0x18 ; '.'
000000000000bd51         db  0x86 ; '.'
000000000000bd52         db  0x03 ; '.'
000000000000bd53         db  0x41 ; 'A'
000000000000bd54         db  0x0e ; '.'
000000000000bd55         db  0x20 ; ' '
000000000000bd56         db  0x83 ; '.'
000000000000bd57         db  0x04 ; '.'
000000000000bd58         db  0x6e ; 'n'
000000000000bd59         db  0x0e ; '.'
000000000000bd5a         db  0x18 ; '.'
000000000000bd5b         db  0x41 ; 'A'
000000000000bd5c         db  0x0e ; '.'
000000000000bd5d         db  0x10 ; '.'
000000000000bd5e         db  0x42 ; 'B'
000000000000bd5f         db  0x0e ; '.'
000000000000bd60         db  0x08 ; '.'
000000000000bd61         db  0x00 ; '.'
000000000000bd62         db  0x00 ; '.'
000000000000bd63         db  0x00 ; '.'
000000000000bd64         dd         0x00000010                                  ; Length of the record
000000000000bd68         dd         0x000007a8                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bd6c         db         0xb4, 0xac, 2 dup (0xff)                    ; begin 0x6a20
000000000000bd70         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x6a31)
000000000000bd74         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bd75         align      8
000000000000bd78         dd         0x00000010                                  ; Length of the record
000000000000bd7c         dd         0x000007bc                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bd80         db         0xc0, 0xac, 2 dup (0xff)                    ; begin 0x6a40
000000000000bd84         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x6a51)
000000000000bd88         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bd89         align      4
000000000000bd8c         dd         0x00000010                                  ; Length of the record
000000000000bd90         dd         0x000007d0                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bd94         db         0xcc, 0xac, 2 dup (0xff)                    ; begin 0x6a60
000000000000bd98         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x6a95)
000000000000bd9c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bd9d         align      32
000000000000bda0         dd         0x00000010                                  ; Length of the record
000000000000bda4         dd         0x000007e4                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bda8         db         0xf8, 0xac, 2 dup (0xff)                    ; begin 0x6aa0
000000000000bdac         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x6ab5)
000000000000bdb0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bdb1         align      4
000000000000bdb4         dd         0x00000010                                  ; Length of the record
000000000000bdb8         dd         0x000007f8                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bdbc         db         0x04, 0xad, 2 dup (0xff)                    ; begin 0x6ac0
000000000000bdc0         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x6af0)
000000000000bdc4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bdc5         db  0x6b ; 'k'
000000000000bdc6         db  0x0e ; '.'
000000000000bdc7         db  0x10 ; '.'
000000000000bdc8         dd         0x00000050                                  ; Length of the record
000000000000bdcc         dd         0x0000080c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bdd0         db         0x20, 0xad, 2 dup (0xff)                    ; begin 0x6af0
000000000000bdd4         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x6b64)
000000000000bdd8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bdd9         db  0x42 ; 'B'
000000000000bdda         db  0x0e ; '.'
000000000000bddb         db  0x10 ; '.'
000000000000bddc         db  0x8f ; '.'
000000000000bddd         db  0x02 ; '.'
000000000000bdde         db  0x42 ; 'B'
000000000000bddf         db  0x0e ; '.'
000000000000bde0         db  0x18 ; '.'
000000000000bde1         db  0x8e ; '.'
000000000000bde2         db  0x03 ; '.'
000000000000bde3         db  0x49 ; 'I'
000000000000bde4         db  0x0e ; '.'
000000000000bde5         db  0x20 ; ' '
000000000000bde6         db  0x8d ; '.'
000000000000bde7         db  0x04 ; '.'
000000000000bde8         db  0x42 ; 'B'
000000000000bde9         db  0x0e ; '.'
000000000000bdea         db  0x28 ; '('
000000000000bdeb         db  0x8c ; '.'
000000000000bdec         db  0x05 ; '.'
000000000000bded         db  0x44 ; 'D'
000000000000bdee         db  0x0e ; '.'
000000000000bdef         db  0x30 ; '0'
000000000000bdf0         db  0x86 ; '.'
000000000000bdf1         db  0x06 ; '.'
000000000000bdf2         db  0x41 ; 'A'
000000000000bdf3         db  0x0e ; '.'
000000000000bdf4         db  0x38 ; '8'
000000000000bdf5         db  0x83 ; '.'
000000000000bdf6         db  0x07 ; '.'
000000000000bdf7         db  0x4d ; 'M'
000000000000bdf8         db  0x0e ; '.'
000000000000bdf9         db  0x50 ; 'P'
000000000000bdfa         db  0x5f ; '_'
000000000000bdfb         db  0x0e ; '.'
000000000000bdfc         db  0x58 ; 'X'
000000000000bdfd         db  0x47 ; 'G'
000000000000bdfe         db  0x0e ; '.'
000000000000bdff         db  0x60 ; '`'
000000000000be00         db  0x46 ; 'F'
000000000000be01         db  0x0e ; '.'
000000000000be02         db  0x68 ; 'h'
000000000000be03         db  0x44 ; 'D'
000000000000be04         db  0x0e ; '.'
000000000000be05         db  0x70 ; 'p'
000000000000be06         db  0x58 ; 'X'
000000000000be07         db  0x0e ; '.'
000000000000be08         db  0x38 ; '8'
000000000000be09         db  0x41 ; 'A'
000000000000be0a         db  0x0e ; '.'
000000000000be0b         db  0x30 ; '0'
000000000000be0c         db  0x41 ; 'A'
000000000000be0d         db  0x0e ; '.'
000000000000be0e         db  0x28 ; '('
000000000000be0f         db  0x42 ; 'B'
000000000000be10         db  0x0e ; '.'
000000000000be11         db  0x20 ; ' '
000000000000be12         db  0x42 ; 'B'
000000000000be13         db  0x0e ; '.'
000000000000be14         db  0x18 ; '.'
000000000000be15         db  0x42 ; 'B'
000000000000be16         db  0x0e ; '.'
000000000000be17         db  0x10 ; '.'
000000000000be18         db  0x42 ; 'B'
000000000000be19         db  0x0e ; '.'
000000000000be1a         db  0x08 ; '.'
000000000000be1b         db  0x00 ; '.'
000000000000be1c         dd         0x00000068                                  ; Length of the record
000000000000be20         dd         0x00000860                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000be24         db         0x4c, 0xad, 2 dup (0xff)                    ; begin 0x6b70
000000000000be28         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x6c53)
000000000000be2c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000be2d         db  0x42 ; 'B'
000000000000be2e         db  0x0e ; '.'
000000000000be2f         db  0x10 ; '.'
000000000000be30         db  0x8f ; '.'
000000000000be31         db  0x02 ; '.'
000000000000be32         db  0x42 ; 'B'
000000000000be33         db  0x0e ; '.'
000000000000be34         db  0x18 ; '.'
000000000000be35         db  0x8e ; '.'
000000000000be36         db  0x03 ; '.'
000000000000be37         db  0x49 ; 'I'
000000000000be38         db  0x0e ; '.'
000000000000be39         db  0x20 ; ' '
000000000000be3a         db  0x8d ; '.'
000000000000be3b         db  0x04 ; '.'
000000000000be3c         db  0x42 ; 'B'
000000000000be3d         db  0x0e ; '.'
000000000000be3e         db  0x28 ; '('
000000000000be3f         db  0x8c ; '.'
000000000000be40         db  0x05 ; '.'
000000000000be41         db  0x44 ; 'D'
000000000000be42         db  0x0e ; '.'
000000000000be43         db  0x30 ; '0'
000000000000be44         db  0x86 ; '.'
000000000000be45         db  0x06 ; '.'
000000000000be46         db  0x41 ; 'A'
000000000000be47         db  0x0e ; '.'
000000000000be48         db  0x38 ; '8'
000000000000be49         db  0x83 ; '.'
000000000000be4a         db  0x07 ; '.'
000000000000be4b         db  0x4d ; 'M'
000000000000be4c         db  0x0e ; '.'
000000000000be4d         db  0x70 ; 'p'
000000000000be4e         db  0x65 ; 'e'
000000000000be4f         db  0x0e ; '.'
000000000000be50         db  0x78 ; 'x'
000000000000be51         db  0x4d ; 'M'
000000000000be52         db  0x0e ; '.'
000000000000be53         db  0x80 ; '.'
000000000000be54         db  0x01 ; '.'
000000000000be55         db  0x46 ; 'F'
000000000000be56         db  0x0e ; '.'
000000000000be57         db  0x88 ; '.'
000000000000be58         db  0x01 ; '.'
000000000000be59         db  0x42 ; 'B'
000000000000be5a         db  0x0e ; '.'
000000000000be5b         db  0x90 ; '.'
000000000000be5c         db  0x01 ; '.'
000000000000be5d         db  0x5e ; '^'
000000000000be5e         db  0x0e ; '.'
000000000000be5f         db  0x70 ; 'p'
000000000000be60         db  0x56 ; 'V'
000000000000be61         db  0x0e ; '.'
000000000000be62         db  0x78 ; 'x'
000000000000be63         db  0x43 ; 'C'
000000000000be64         db  0x0e ; '.'
000000000000be65         db  0x80 ; '.'
000000000000be66         db  0x01 ; '.'
000000000000be67         db  0x43 ; 'C'
000000000000be68         db  0x0e ; '.'
000000000000be69         db  0x88 ; '.'
000000000000be6a         db  0x01 ; '.'
000000000000be6b         db  0x56 ; 'V'
000000000000be6c         db  0x0e ; '.'
000000000000be6d         db  0x90 ; '.'
000000000000be6e         db  0x01 ; '.'
000000000000be6f         db  0x52 ; 'R'
000000000000be70         db  0x0e ; '.'
000000000000be71         db  0x70 ; 'p'
000000000000be72         db  0x5b ; '['
000000000000be73         db  0x0e ; '.'
000000000000be74         db  0x38 ; '8'
000000000000be75         db  0x41 ; 'A'
000000000000be76         db  0x0e ; '.'
000000000000be77         db  0x30 ; '0'
000000000000be78         db  0x41 ; 'A'
000000000000be79         db  0x0e ; '.'
000000000000be7a         db  0x28 ; '('
000000000000be7b         db  0x42 ; 'B'
000000000000be7c         db  0x0e ; '.'
000000000000be7d         db  0x20 ; ' '
000000000000be7e         db  0x42 ; 'B'
000000000000be7f         db  0x0e ; '.'
000000000000be80         db  0x18 ; '.'
000000000000be81         db  0x42 ; 'B'
000000000000be82         db  0x0e ; '.'
000000000000be83         db  0x10 ; '.'
000000000000be84         db  0x42 ; 'B'
000000000000be85         db  0x0e ; '.'
000000000000be86         db  0x08 ; '.'
000000000000be87         db  0x00 ; '.'
000000000000be88         dd         0x00000010                                  ; Length of the record
000000000000be8c         dd         0x000008cc                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000be90         db         0xd0, 0xad, 2 dup (0xff)                    ; begin 0x6c60
000000000000be94         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x6c6a)
000000000000be98         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000be99         align      4
000000000000be9c         dd         0x00000028                                  ; Length of the record
000000000000bea0         dd         0x000008e0                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bea4         db         0xcc, 0xad, 2 dup (0xff)                    ; begin 0x6c70
000000000000bea8         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x6d03)
000000000000beac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bead         db  0x48 ; 'H'
000000000000beae         db  0x0e ; '.'
000000000000beaf         db  0x10 ; '.'
000000000000beb0         db  0x8c ; '.'
000000000000beb1         db  0x02 ; '.'
000000000000beb2         db  0x48 ; 'H'
000000000000beb3         db  0x0e ; '.'
000000000000beb4         db  0x18 ; '.'
000000000000beb5         db  0x86 ; '.'
000000000000beb6         db  0x03 ; '.'
000000000000beb7         db  0x41 ; 'A'
000000000000beb8         db  0x0e ; '.'
000000000000beb9         db  0x20 ; ' '
000000000000beba         db  0x83 ; '.'
000000000000bebb         db  0x04 ; '.'
000000000000bebc         db  0x02 ; '.'
000000000000bebd         db  0x74 ; 't'
000000000000bebe         db  0x0e ; '.'
000000000000bebf         db  0x18 ; '.'
000000000000bec0         db  0x4b ; 'K'
000000000000bec1         db  0x0e ; '.'
000000000000bec2         db  0x10 ; '.'
000000000000bec3         db  0x42 ; 'B'
000000000000bec4         db  0x0e ; '.'
000000000000bec5         db  0x08 ; '.'
000000000000bec6         db  0x00 ; '.'
000000000000bec7         db  0x00 ; '.'
000000000000bec8         dd         0x00000010                                  ; Length of the record
000000000000becc         dd         0x0000090c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bed0         db         0x40, 0xae, 2 dup (0xff)                    ; begin 0x6d10
000000000000bed4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x6d23)
000000000000bed8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bed9         align      4
000000000000bedc         dd         0x00000010                                  ; Length of the record
000000000000bee0         dd         0x00000920                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bee4         db         0x4c, 0xae, 2 dup (0xff)                    ; begin 0x6d30
000000000000bee8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x6d3c)
000000000000beec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000beed         align      16
000000000000bef0         dd         0x00000010                                  ; Length of the record
000000000000bef4         dd         0x00000934                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bef8         db         0x48, 0xae, 2 dup (0xff)                    ; begin 0x6d40
000000000000befc         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x6d58)
000000000000bf00         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bf01         align      4
000000000000bf04         dd         0x00000010                                  ; Length of the record
000000000000bf08         dd         0x00000948                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bf0c         db         0x54, 0xae, 2 dup (0xff)                    ; begin 0x6d60
000000000000bf10         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x6d74)
000000000000bf14         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bf15         align      8
000000000000bf18         dd         0x00000018                                  ; Length of the record
000000000000bf1c         dd         0x0000095c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bf20         db         0x60, 0xae, 2 dup (0xff)                    ; begin 0x6d80
000000000000bf24         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x6e0e)
000000000000bf28         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bf29         db  0x44 ; 'D'
000000000000bf2a         db  0x0e ; '.'
000000000000bf2b         db  0x50 ; 'P'
000000000000bf2c         db  0x02 ; '.'
000000000000bf2d         db  0x7f ; '.'
000000000000bf2e         db  0x0a ; '.'
000000000000bf2f         db  0x0e ; '.'
000000000000bf30         db  0x08 ; '.'
000000000000bf31         db  0x41 ; 'A'
000000000000bf32         db  0x0b ; '.'
000000000000bf33         db  0x00 ; '.'
000000000000bf34         dd         0x00000018                                  ; Length of the record
000000000000bf38         dd         0x00000978                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bf3c         db         0xd4, 0xae, 2 dup (0xff)                    ; begin 0x6e10
000000000000bf40         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x6e9a)
000000000000bf44         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bf45         db  0x44 ; 'D'
000000000000bf46         db  0x0e ; '.'
000000000000bf47         db  0x50 ; 'P'
000000000000bf48         db  0x02 ; '.'
000000000000bf49         db  0x7b ; '{'
000000000000bf4a         db  0x0a ; '.'
000000000000bf4b         db  0x0e ; '.'
000000000000bf4c         db  0x08 ; '.'
000000000000bf4d         db  0x41 ; 'A'
000000000000bf4e         db  0x0b ; '.'
000000000000bf4f         db  0x00 ; '.'
000000000000bf50         dd         0x00000010                                  ; Length of the record
000000000000bf54         dd         0x00000994                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bf58         db         0x48, 0xaf, 2 dup (0xff)                    ; begin 0x6ea0
000000000000bf5c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x6eac)
000000000000bf60         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bf61         align      4
000000000000bf64         dd         0x00000010                                  ; Length of the record
000000000000bf68         dd         0x000009a8                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bf6c         db         0x44, 0xaf, 2 dup (0xff)                    ; begin 0x6eb0
000000000000bf70         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x6ebf)
000000000000bf74         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bf75         align      8
000000000000bf78         dd         0x00000018                                  ; Length of the record
000000000000bf7c         dd         0x000009bc                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bf80         db         0x40, 0xaf, 2 dup (0xff)                    ; begin 0x6ec0
000000000000bf84         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x6f58)
000000000000bf88         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bf89         db  0x44 ; 'D'
000000000000bf8a         db  0x0e ; '.'
000000000000bf8b         db  0x50 ; 'P'
000000000000bf8c         db  0x02 ; '.'
000000000000bf8d         db  0x8e ; '.'
000000000000bf8e         db  0x0a ; '.'
000000000000bf8f         db  0x0e ; '.'
000000000000bf90         db  0x08 ; '.'
000000000000bf91         db  0x41 ; 'A'
000000000000bf92         db  0x0b ; '.'
000000000000bf93         db  0x00 ; '.'
000000000000bf94         dd         0x00000010                                  ; Length of the record
000000000000bf98         dd         0x000009d8                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bf9c         db         0xc4, 0xaf, 2 dup (0xff)                    ; begin 0x6f60
000000000000bfa0         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x6f70)
000000000000bfa4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bfa5         align      8
000000000000bfa8         dd         0x00000010                                  ; Length of the record
000000000000bfac         dd         0x000009ec                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bfb0         db         0xc0, 0xaf, 2 dup (0xff)                    ; begin 0x6f70
000000000000bfb4         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x6f81)
000000000000bfb8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bfb9         align      4
000000000000bfbc         dd         0x00000010                                  ; Length of the record
000000000000bfc0         dd         0x00000a00                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bfc4         db         0xcc, 0xaf, 2 dup (0xff)                    ; begin 0x6f90
000000000000bfc8         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x6f9a)
000000000000bfcc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bfcd         align      16
000000000000bfd0         dd         0x00000018                                  ; Length of the record
000000000000bfd4         dd         0x00000a14                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bfd8         db         0xc8, 0xaf, 2 dup (0xff)                    ; begin 0x6fa0
000000000000bfdc         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x702e)
000000000000bfe0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bfe1         db  0x44 ; 'D'
000000000000bfe2         db  0x0e ; '.'
000000000000bfe3         db  0x50 ; 'P'
000000000000bfe4         db  0x02 ; '.'
000000000000bfe5         db  0x7f ; '.'
000000000000bfe6         db  0x0a ; '.'
000000000000bfe7         db  0x0e ; '.'
000000000000bfe8         db  0x08 ; '.'
000000000000bfe9         db  0x41 ; 'A'
000000000000bfea         db  0x0b ; '.'
000000000000bfeb         db  0x00 ; '.'
000000000000bfec         dd         0x00000018                                  ; Length of the record
000000000000bff0         dd         0x00000a30                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000bff4         db         0x3c, 0xb0, 2 dup (0xff)                    ; begin 0x7030
000000000000bff8         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x70c1)
000000000000bffc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000bffd         db  0x44 ; 'D'
000000000000bffe         db  0x0e ; '.'
000000000000bfff         db  0x50 ; 'P'
000000000000c000         db  0x02 ; '.'                                         ; DATA XREF=do_wipefd+134
000000000000c001         db  0x82 ; '.'
000000000000c002         db  0x0a ; '.'
000000000000c003         db  0x0e ; '.'
000000000000c004         db  0x08 ; '.'
000000000000c005         db  0x41 ; 'A'
000000000000c006         db  0x0b ; '.'
000000000000c007         db  0x00 ; '.'
000000000000c008         dd         0x00000010                                  ; Length of the record
000000000000c00c         dd         0x00000a4c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c010         db         0xc0, 0xb0, 2 dup (0xff)                    ; begin 0x70d0
000000000000c014         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x70dc)
000000000000c018         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c019         align      4
000000000000c01c         dd         0x00000010                                  ; Length of the record
000000000000c020         dd         0x00000a60                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c024         db         0xbc, 0xb0, 2 dup (0xff)                    ; begin 0x70e0
000000000000c028         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x70f7)
000000000000c02c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c02d         align      16
000000000000c030         dd         0x00000010                                  ; Length of the record
000000000000c034         dd         0x00000a74                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c038         db         0xc8, 0xb0, 2 dup (0xff)                    ; begin 0x7100
000000000000c03c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x7113)
000000000000c040         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c041         align      4
000000000000c044         dd         0x00000010                                  ; Length of the record
000000000000c048         dd         0x00000a88                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c04c         db         0xd4, 0xb0, 2 dup (0xff)                    ; begin 0x7120
000000000000c050         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x712c)
000000000000c054         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c055         align      8
000000000000c058         dd         0x00000010                                  ; Length of the record
000000000000c05c         dd         0x00000a9c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c060         db         0xd0, 0xb0, 2 dup (0xff)                    ; begin 0x7130
000000000000c064         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x7144)
000000000000c068         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c069         align      4
000000000000c06c         dd         0x00000010                                  ; Length of the record
000000000000c070         dd         0x00000ab0                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c074         db         0xdc, 0xb0, 2 dup (0xff)                    ; begin 0x7150
000000000000c078         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x7163)
000000000000c07c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c07d         align      128
000000000000c080         dd         0x00000014                                  ; Length of the record
000000000000c084         dd         0x00000ac4                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c088         db         0xe8, 0xb0, 2 dup (0xff)                    ; begin 0x7170
000000000000c08c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x7188)
000000000000c090         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c091         align      8
000000000000c098         dd         0x00000018                                  ; Length of the record
000000000000c09c         dd         0x00000adc                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c0a0         db         0xf0, 0xb0, 2 dup (0xff)                    ; begin 0x7190
000000000000c0a4         db         0x23, 3 dup (0x00)                          ; length 0x23 (end at 0x71b3)
000000000000c0a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c0a9         db  0x41 ; 'A'
000000000000c0aa         db  0x0e ; '.'
000000000000c0ab         db  0x10 ; '.'
000000000000c0ac         db  0x83 ; '.'
000000000000c0ad         db  0x02 ; '.'
000000000000c0ae         db  0x61 ; 'a'
000000000000c0af         db  0x0e ; '.'
000000000000c0b0         db  0x08 ; '.'
000000000000c0b1         db  0x00 ; '.'
000000000000c0b2         db  0x00 ; '.'
000000000000c0b3         db  0x00 ; '.'
000000000000c0b4         dd         0x0000001c                                  ; Length of the record
000000000000c0b8         dd         0x00000af8                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c0bc         db         0x04, 0xb1, 2 dup (0xff)                    ; begin 0x71c0
000000000000c0c0         db         0x34, 3 dup (0x00)                          ; length 0x34 (end at 0x71f4)
000000000000c0c4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c0c5         db  0x41 ; 'A'
000000000000c0c6         db  0x0e ; '.'
000000000000c0c7         db  0x10 ; '.'
000000000000c0c8         db  0x83 ; '.'
000000000000c0c9         db  0x02 ; '.'
000000000000c0ca         db  0x6b ; 'k'
000000000000c0cb         db  0x0a ; '.'
000000000000c0cc         db  0x0e ; '.'
000000000000c0cd         db  0x08 ; '.'
000000000000c0ce         db  0x44 ; 'D'
000000000000c0cf         db  0x0b ; '.'
000000000000c0d0         db  0x43 ; 'C'
000000000000c0d1         db  0x0e ; '.'
000000000000c0d2         db  0x08 ; '.'
000000000000c0d3         db  0x00 ; '.'
000000000000c0d4         dd         0x00000010                                  ; Length of the record
000000000000c0d8         dd         0x00000b18                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c0dc         db         0x24, 0xb1, 2 dup (0xff)                    ; begin 0x7200
000000000000c0e0         db         0x04, 3 dup (0x00)                          ; length 0x4 (end at 0x7204)
000000000000c0e4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c0e5         align      8
000000000000c0e8         dd         0x00000048                                  ; Length of the record
000000000000c0ec         dd         0x00000b2c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c0f0         db         0x20, 0xb1, 2 dup (0xff)                    ; begin 0x7210
000000000000c0f4         db         0x1a, 0x01, 2 dup (0x00)                    ; length 0x11a (end at 0x732a)
000000000000c0f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c0f9         db  0x42 ; 'B'
000000000000c0fa         db  0x0e ; '.'
000000000000c0fb         db  0x10 ; '.'
000000000000c0fc         db  0x8f ; '.'
000000000000c0fd         db  0x02 ; '.'
000000000000c0fe         db  0x42 ; 'B'
000000000000c0ff         db  0x0e ; '.'
000000000000c100         db  0x18 ; '.'
000000000000c101         db  0x8e ; '.'
000000000000c102         db  0x03 ; '.'
000000000000c103         db  0x46 ; 'F'
000000000000c104         db  0x0e ; '.'
000000000000c105         db  0x20 ; ' '
000000000000c106         db  0x8d ; '.'
000000000000c107         db  0x04 ; '.'
000000000000c108         db  0x42 ; 'B'
000000000000c109         db  0x0e ; '.'
000000000000c10a         db  0x28 ; '('
000000000000c10b         db  0x8c ; '.'
000000000000c10c         db  0x05 ; '.'
000000000000c10d         db  0x44 ; 'D'
000000000000c10e         db  0x0e ; '.'
000000000000c10f         db  0x30 ; '0'
000000000000c110         db  0x86 ; '.'
000000000000c111         db  0x06 ; '.'
000000000000c112         db  0x41 ; 'A'
000000000000c113         db  0x0e ; '.'
000000000000c114         db  0x38 ; '8'
000000000000c115         db  0x83 ; '.'
000000000000c116         db  0x07 ; '.'
000000000000c117         db  0x47 ; 'G'
000000000000c118         db  0x0e ; '.'
000000000000c119         db  0x60 ; '`'
000000000000c11a         db  0x02 ; '.'
000000000000c11b         db  0xde ; '.'
000000000000c11c         db  0x0a ; '.'
000000000000c11d         db  0x0e ; '.'
000000000000c11e         db  0x38 ; '8'
000000000000c11f         db  0x41 ; 'A'
000000000000c120         db  0x0e ; '.'
000000000000c121         db  0x30 ; '0'
000000000000c122         db  0x41 ; 'A'
000000000000c123         db  0x0e ; '.'
000000000000c124         db  0x28 ; '('
000000000000c125         db  0x42 ; 'B'
000000000000c126         db  0x0e ; '.'
000000000000c127         db  0x20 ; ' '
000000000000c128         db  0x42 ; 'B'
000000000000c129         db  0x0e ; '.'
000000000000c12a         db  0x18 ; '.'
000000000000c12b         db  0x42 ; 'B'
000000000000c12c         db  0x0e ; '.'
000000000000c12d         db  0x10 ; '.'
000000000000c12e         db  0x42 ; 'B'
000000000000c12f         db  0x0e ; '.'
000000000000c130         db  0x08 ; '.'
000000000000c131         db  0x48 ; 'H'
000000000000c132         db  0x0b ; '.'
000000000000c133         db  0x00 ; '.'
000000000000c134         dd         0x00000018                                  ; Length of the record
000000000000c138         dd         0x00000b78                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c13c         db         0xf4, 0xb1, 2 dup (0xff)                    ; begin 0x7330
000000000000c140         db         0x1e, 3 dup (0x00)                          ; length 0x1e (end at 0x734e)
000000000000c144         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c145         db  0x41 ; 'A'
000000000000c146         db  0x0e ; '.'
000000000000c147         db  0x10 ; '.'
000000000000c148         db  0x83 ; '.'
000000000000c149         db  0x02 ; '.'
000000000000c14a         db  0x58 ; 'X'
000000000000c14b         db  0x0e ; '.'
000000000000c14c         db  0x08 ; '.'
000000000000c14d         db  0x00 ; '.'
000000000000c14e         db  0x00 ; '.'
000000000000c14f         db  0x00 ; '.'
000000000000c150         dd         0x00000034                                  ; Length of the record
000000000000c154         dd         0x00000b94                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c158         db         0xf8, 0xb1, 2 dup (0xff)                    ; begin 0x7350
000000000000c15c         db         0x51, 3 dup (0x00)                          ; length 0x51 (end at 0x73a1)
000000000000c160         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c161         db  0x42 ; 'B'
000000000000c162         db  0x0e ; '.'
000000000000c163         db  0x10 ; '.'
000000000000c164         db  0x8d ; '.'
000000000000c165         db  0x02 ; '.'
000000000000c166         db  0x42 ; 'B'
000000000000c167         db  0x0e ; '.'
000000000000c168         db  0x18 ; '.'
000000000000c169         db  0x8c ; '.'
000000000000c16a         db  0x03 ; '.'
000000000000c16b         db  0x41 ; 'A'
000000000000c16c         db  0x0e ; '.'
000000000000c16d         db  0x20 ; ' '
000000000000c16e         db  0x86 ; '.'
000000000000c16f         db  0x04 ; '.'
000000000000c170         db  0x41 ; 'A'
000000000000c171         db  0x0e ; '.'
000000000000c172         db  0x28 ; '('
000000000000c173         db  0x83 ; '.'
000000000000c174         db  0x05 ; '.'
000000000000c175         db  0x47 ; 'G'
000000000000c176         db  0x0e ; '.'
000000000000c177         db  0x30 ; '0'
000000000000c178         db  0x7a ; 'z'
000000000000c179         db  0x0e ; '.'
000000000000c17a         db  0x28 ; '('
000000000000c17b         db  0x44 ; 'D'
000000000000c17c         db  0x0e ; '.'
000000000000c17d         db  0x20 ; ' '
000000000000c17e         db  0x41 ; 'A'
000000000000c17f         db  0x0e ; '.'
000000000000c180         db  0x18 ; '.'
000000000000c181         db  0x42 ; 'B'
000000000000c182         db  0x0e ; '.'
000000000000c183         db  0x10 ; '.'
000000000000c184         db  0x42 ; 'B'
000000000000c185         db  0x0e ; '.'
000000000000c186         db  0x08 ; '.'
000000000000c187         db  0x00 ; '.'
000000000000c188         dd         0x0000001c                                  ; Length of the record
000000000000c18c         dd         0x00000bcc                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c190         db         0x20, 0xb2, 2 dup (0xff)                    ; begin 0x73b0
000000000000c194         db         0x5d, 3 dup (0x00)                          ; length 0x5d (end at 0x740d)
000000000000c198         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c199         db  0x41 ; 'A'
000000000000c19a         db  0x0e ; '.'
000000000000c19b         db  0x10 ; '.'
000000000000c19c         db  0x86 ; '.'
000000000000c19d         db  0x02 ; '.'
000000000000c19e         db  0x41 ; 'A'
000000000000c19f         db  0x0e ; '.'
000000000000c1a0         db  0x18 ; '.'
000000000000c1a1         db  0x83 ; '.'
000000000000c1a2         db  0x03 ; '.'
000000000000c1a3         db  0x44 ; 'D'
000000000000c1a4         db  0x0e ; '.'
000000000000c1a5         db  0x20 ; ' '
000000000000c1a6         db  0x00 ; '.'
000000000000c1a7         db  0x00 ; '.'
000000000000c1a8         dd         0x00000048                                  ; Length of the record
000000000000c1ac         dd         0x00000bec                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c1b0         db         0x60, 0xb2, 2 dup (0xff)                    ; begin 0x7410
000000000000c1b4         db         0x29, 0x03, 2 dup (0x00)                    ; length 0x329 (end at 0x7739)
000000000000c1b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c1b9         db  0x42 ; 'B'
000000000000c1ba         db  0x0e ; '.'
000000000000c1bb         db  0x10 ; '.'
000000000000c1bc         db  0x8f ; '.'
000000000000c1bd         db  0x02 ; '.'
000000000000c1be         db  0x42 ; 'B'
000000000000c1bf         db  0x0e ; '.'
000000000000c1c0         db  0x18 ; '.'
000000000000c1c1         db  0x8e ; '.'
000000000000c1c2         db  0x03 ; '.'
000000000000c1c3         db  0x42 ; 'B'
000000000000c1c4         db  0x0e ; '.'
000000000000c1c5         db  0x20 ; ' '
000000000000c1c6         db  0x8d ; '.'
000000000000c1c7         db  0x04 ; '.'
000000000000c1c8         db  0x42 ; 'B'
000000000000c1c9         db  0x0e ; '.'
000000000000c1ca         db  0x28 ; '('
000000000000c1cb         db  0x8c ; '.'
000000000000c1cc         db  0x05 ; '.'
000000000000c1cd         db  0x41 ; 'A'
000000000000c1ce         db  0x0e ; '.'
000000000000c1cf         db  0x30 ; '0'
000000000000c1d0         db  0x86 ; '.'
000000000000c1d1         db  0x06 ; '.'
000000000000c1d2         db  0x41 ; 'A'
000000000000c1d3         db  0x0e ; '.'
000000000000c1d4         db  0x38 ; '8'
000000000000c1d5         db  0x83 ; '.'
000000000000c1d6         db  0x07 ; '.'
000000000000c1d7         db  0x44 ; 'D'
000000000000c1d8         db  0x0e ; '.'
000000000000c1d9         db  0x70 ; 'p'
000000000000c1da         db  0x02 ; '.'
000000000000c1db         db  0x94 ; '.'
000000000000c1dc         db  0x0a ; '.'
000000000000c1dd         db  0x0e ; '.'
000000000000c1de         db  0x38 ; '8'
000000000000c1df         db  0x41 ; 'A'
000000000000c1e0         db  0x0e ; '.'
000000000000c1e1         db  0x30 ; '0'
000000000000c1e2         db  0x41 ; 'A'
000000000000c1e3         db  0x0e ; '.'
000000000000c1e4         db  0x28 ; '('
000000000000c1e5         db  0x42 ; 'B'
000000000000c1e6         db  0x0e ; '.'
000000000000c1e7         db  0x20 ; ' '
000000000000c1e8         db  0x42 ; 'B'
000000000000c1e9         db  0x0e ; '.'
000000000000c1ea         db  0x18 ; '.'
000000000000c1eb         db  0x42 ; 'B'
000000000000c1ec         db  0x0e ; '.'
000000000000c1ed         db  0x10 ; '.'
000000000000c1ee         db  0x42 ; 'B'
000000000000c1ef         db  0x0e ; '.'
000000000000c1f0         db  0x08 ; '.'
000000000000c1f1         db  0x44 ; 'D'
000000000000c1f2         db  0x0b ; '.'
000000000000c1f3         db  0x00 ; '.'
000000000000c1f4         dd         0x00000010                                  ; Length of the record
000000000000c1f8         dd         0x00000c38                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c1fc         db         0x44, 0xb5, 2 dup (0xff)                    ; begin 0x7740
000000000000c200         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x7745)
000000000000c204         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c205         align      8
000000000000c208         dd         0x00000010                                  ; Length of the record
000000000000c20c         dd         0x00000c4c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c210         db         0x40, 0xb5, 2 dup (0xff)                    ; begin 0x7750
000000000000c214         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x7755)
000000000000c218         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c219         align      4
000000000000c21c         dd         0x00000060                                  ; Length of the record
000000000000c220         dd         0x00000c60                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c224         db         0x3c, 0xb5, 2 dup (0xff)                    ; begin 0x7760
000000000000c228         db         0x96, 0x01, 2 dup (0x00)                    ; length 0x196 (end at 0x78f6)
000000000000c22c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c22d         db  0x42 ; 'B'
000000000000c22e         db  0x0e ; '.'
000000000000c22f         db  0x10 ; '.'
000000000000c230         db  0x8f ; '.'
000000000000c231         db  0x02 ; '.'
000000000000c232         db  0x42 ; 'B'
000000000000c233         db  0x0e ; '.'
000000000000c234         db  0x18 ; '.'
000000000000c235         db  0x8e ; '.'
000000000000c236         db  0x03 ; '.'
000000000000c237         db  0x42 ; 'B'
000000000000c238         db  0x0e ; '.'
000000000000c239         db  0x20 ; ' '
000000000000c23a         db  0x8d ; '.'
000000000000c23b         db  0x04 ; '.'
000000000000c23c         db  0x42 ; 'B'
000000000000c23d         db  0x0e ; '.'
000000000000c23e         db  0x28 ; '('
000000000000c23f         db  0x8c ; '.'
000000000000c240         db  0x05 ; '.'
000000000000c241         db  0x44 ; 'D'
000000000000c242         db  0x0e ; '.'
000000000000c243         db  0x30 ; '0'
000000000000c244         db  0x86 ; '.'
000000000000c245         db  0x06 ; '.'
000000000000c246         db  0x41 ; 'A'
000000000000c247         db  0x0e ; '.'
000000000000c248         db  0x38 ; '8'
000000000000c249         db  0x83 ; '.'
000000000000c24a         db  0x07 ; '.'
000000000000c24b         db  0x4a ; 'J'
000000000000c24c         db  0x0e ; '.'
000000000000c24d         db  0x50 ; 'P'
000000000000c24e         db  0x02 ; '.'
000000000000c24f         db  0x5f ; '_'
000000000000c250         db  0x0a ; '.'
000000000000c251         db  0x0e ; '.'
000000000000c252         db  0x38 ; '8'
000000000000c253         db  0x41 ; 'A'
000000000000c254         db  0x0e ; '.'
000000000000c255         db  0x30 ; '0'
000000000000c256         db  0x41 ; 'A'
000000000000c257         db  0x0e ; '.'
000000000000c258         db  0x28 ; '('
000000000000c259         db  0x42 ; 'B'
000000000000c25a         db  0x0e ; '.'
000000000000c25b         db  0x20 ; ' '
000000000000c25c         db  0x42 ; 'B'
000000000000c25d         db  0x0e ; '.'
000000000000c25e         db  0x18 ; '.'
000000000000c25f         db  0x42 ; 'B'
000000000000c260         db  0x0e ; '.'
000000000000c261         db  0x10 ; '.'
000000000000c262         db  0x42 ; 'B'
000000000000c263         db  0x0e ; '.'
000000000000c264         db  0x08 ; '.'
000000000000c265         db  0x48 ; 'H'
000000000000c266         db  0x0b ; '.'
000000000000c267         db  0x02 ; '.'
000000000000c268         db  0x9b ; '.'
000000000000c269         db  0x0a ; '.'
000000000000c26a         db  0x0e ; '.'
000000000000c26b         db  0x38 ; '8'
000000000000c26c         db  0x41 ; 'A'
000000000000c26d         db  0x0e ; '.'
000000000000c26e         db  0x30 ; '0'
000000000000c26f         db  0x41 ; 'A'
000000000000c270         db  0x0e ; '.'
000000000000c271         db  0x28 ; '('
000000000000c272         db  0x42 ; 'B'
000000000000c273         db  0x0e ; '.'
000000000000c274         db  0x20 ; ' '
000000000000c275         db  0x42 ; 'B'
000000000000c276         db  0x0e ; '.'
000000000000c277         db  0x18 ; '.'
000000000000c278         db  0x42 ; 'B'
000000000000c279         db  0x0e ; '.'
000000000000c27a         db  0x10 ; '.'
000000000000c27b         db  0x42 ; 'B'
000000000000c27c         db  0x0e ; '.'
000000000000c27d         db  0x08 ; '.'
000000000000c27e         db  0x43 ; 'C'
000000000000c27f         db  0x0b ; '.'
000000000000c280         dd         0x00000034                                  ; Length of the record
000000000000c284         dd         0x00000cc4                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c288         db         0x78, 0xb6, 2 dup (0xff)                    ; begin 0x7900
000000000000c28c         db         0x49, 3 dup (0x00)                          ; length 0x49 (end at 0x7949)
000000000000c290         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c291         db  0x41 ; 'A'
000000000000c292         db  0x0e ; '.'
000000000000c293         db  0x10 ; '.'
000000000000c294         db  0x86 ; '.'
000000000000c295         db  0x02 ; '.'
000000000000c296         db  0x41 ; 'A'
000000000000c297         db  0x0e ; '.'
000000000000c298         db  0x18 ; '.'
000000000000c299         db  0x83 ; '.'
000000000000c29a         db  0x03 ; '.'
000000000000c29b         db  0x53 ; 'S'
000000000000c29c         db  0x0e ; '.'
000000000000c29d         db  0x20 ; ' '
000000000000c29e         db  0x59 ; 'Y'
000000000000c29f         db  0x0a ; '.'
000000000000c2a0         db  0x0e ; '.'
000000000000c2a1         db  0x18 ; '.'
000000000000c2a2         db  0x44 ; 'D'
000000000000c2a3         db  0x0e ; '.'
000000000000c2a4         db  0x10 ; '.'
000000000000c2a5         db  0x41 ; 'A'
000000000000c2a6         db  0x0e ; '.'
000000000000c2a7         db  0x08 ; '.'
000000000000c2a8         db  0x4d ; 'M'
000000000000c2a9         db  0x0b ; '.'
000000000000c2aa         db  0x44 ; 'D'
000000000000c2ab         db  0x0e ; '.'
000000000000c2ac         db  0x18 ; '.'
000000000000c2ad         db  0x43 ; 'C'
000000000000c2ae         db  0x0e ; '.'
000000000000c2af         db  0x10 ; '.'
000000000000c2b0         db  0x41 ; 'A'
000000000000c2b1         db  0x0e ; '.'
000000000000c2b2         db  0x08 ; '.'
000000000000c2b3         db  0x00 ; '.'
000000000000c2b4         db  0x00 ; '.'
000000000000c2b5         db  0x00 ; '.'
000000000000c2b6         db  0x00 ; '.'
000000000000c2b7         db  0x00 ; '.'
000000000000c2b8         dd         0x00000010                                  ; Length of the record
000000000000c2bc         dd         0x00000cfc                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c2c0         db         0x90, 0xb6, 2 dup (0xff)                    ; begin 0x7950
000000000000c2c4         db         0x8e, 0x02, 2 dup (0x00)                    ; length 0x28e (end at 0x7bde)
000000000000c2c8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c2c9         align      4
000000000000c2cc         dd         0x00000030                                  ; Length of the record
000000000000c2d0         dd         0x00000d10                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c2d4         db         0x0c, 0xb9, 2 dup (0xff)                    ; begin 0x7be0
000000000000c2d8         db         0x40, 0x02, 2 dup (0x00)                    ; length 0x240 (end at 0x7e20)
000000000000c2dc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c2dd         db  0x42 ; 'B'
000000000000c2de         db  0x0e ; '.'
000000000000c2df         db  0x10 ; '.'
000000000000c2e0         db  0x8d ; '.'
000000000000c2e1         db  0x02 ; '.'
000000000000c2e2         db  0x42 ; 'B'
000000000000c2e3         db  0x0e ; '.'
000000000000c2e4         db  0x18 ; '.'
000000000000c2e5         db  0x8c ; '.'
000000000000c2e6         db  0x03 ; '.'
000000000000c2e7         db  0x48 ; 'H'
000000000000c2e8         db  0x0e ; '.'
000000000000c2e9         db  0x20 ; ' '
000000000000c2ea         db  0x86 ; '.'
000000000000c2eb         db  0x04 ; '.'
000000000000c2ec         db  0x44 ; 'D'
000000000000c2ed         db  0x0e ; '.'
000000000000c2ee         db  0x28 ; '('
000000000000c2ef         db  0x83 ; '.'
000000000000c2f0         db  0x05 ; '.'
000000000000c2f1         db  0x03 ; '.'
000000000000c2f2         db  0x09 ; '.'
000000000000c2f3         db  0x02 ; '.'
000000000000c2f4         db  0x0e ; '.'
000000000000c2f5         db  0x20 ; ' '
000000000000c2f6         db  0x57 ; 'W'
000000000000c2f7         db  0x0e ; '.'
000000000000c2f8         db  0x18 ; '.'
000000000000c2f9         db  0x4d ; 'M'
000000000000c2fa         db  0x0e ; '.'
000000000000c2fb         db  0x10 ; '.'
000000000000c2fc         db  0x42 ; 'B'
000000000000c2fd         db  0x0e ; '.'
000000000000c2fe         db  0x08 ; '.'
000000000000c2ff         db  0x00 ; '.'
000000000000c300         dd         0x0000004c                                  ; Length of the record
000000000000c304         dd         0x00000d44                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c308         db         0x18, 0xbb, 2 dup (0xff)                    ; begin 0x7e20
000000000000c30c         db         0x6a, 0x02, 2 dup (0x00)                    ; length 0x26a (end at 0x808a)
000000000000c310         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c311         db  0x42 ; 'B'
000000000000c312         db  0x0e ; '.'
000000000000c313         db  0x10 ; '.'
000000000000c314         db  0x8f ; '.'
000000000000c315         db  0x02 ; '.'
000000000000c316         db  0x42 ; 'B'
000000000000c317         db  0x0e ; '.'
000000000000c318         db  0x18 ; '.'
000000000000c319         db  0x8e ; '.'
000000000000c31a         db  0x03 ; '.'
000000000000c31b         db  0x45 ; 'E'
000000000000c31c         db  0x0e ; '.'
000000000000c31d         db  0x20 ; ' '
000000000000c31e         db  0x8d ; '.'
000000000000c31f         db  0x04 ; '.'
000000000000c320         db  0x42 ; 'B'
000000000000c321         db  0x0e ; '.'
000000000000c322         db  0x28 ; '('
000000000000c323         db  0x8c ; '.'
000000000000c324         db  0x05 ; '.'
000000000000c325         db  0x44 ; 'D'
000000000000c326         db  0x0e ; '.'
000000000000c327         db  0x30 ; '0'
000000000000c328         db  0x86 ; '.'
000000000000c329         db  0x06 ; '.'
000000000000c32a         db  0x41 ; 'A'
000000000000c32b         db  0x0e ; '.'
000000000000c32c         db  0x38 ; '8'
000000000000c32d         db  0x83 ; '.'
000000000000c32e         db  0x07 ; '.'
000000000000c32f         db  0x53 ; 'S'
000000000000c330         db  0x0e ; '.'
000000000000c331         db  0x80 ; '.'
000000000000c332         db  0x03 ; '.'
000000000000c333         db  0x02 ; '.'
000000000000c334         db  0x58 ; 'X'
000000000000c335         db  0x0a ; '.'
000000000000c336         db  0x0e ; '.'
000000000000c337         db  0x38 ; '8'
000000000000c338         db  0x41 ; 'A'
000000000000c339         db  0x0e ; '.'
000000000000c33a         db  0x30 ; '0'
000000000000c33b         db  0x41 ; 'A'
000000000000c33c         db  0x0e ; '.'
000000000000c33d         db  0x28 ; '('
000000000000c33e         db  0x42 ; 'B'
000000000000c33f         db  0x0e ; '.'
000000000000c340         db  0x20 ; ' '
000000000000c341         db  0x42 ; 'B'
000000000000c342         db  0x0e ; '.'
000000000000c343         db  0x18 ; '.'
000000000000c344         db  0x42 ; 'B'
000000000000c345         db  0x0e ; '.'
000000000000c346         db  0x10 ; '.'
000000000000c347         db  0x42 ; 'B'
000000000000c348         db  0x0e ; '.'
000000000000c349         db  0x08 ; '.'
000000000000c34a         db  0x4b ; 'K'
000000000000c34b         db  0x0b ; '.'
000000000000c34c         db  0x00 ; '.'
000000000000c34d         db  0x00 ; '.'
000000000000c34e         db  0x00 ; '.'
000000000000c34f         db  0x00 ; '.'
000000000000c350         dd         0x00000034                                  ; Length of the record
000000000000c354         dd         0x00000d94                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c358         db         0x38, 0xbd, 2 dup (0xff)                    ; begin 0x8090
000000000000c35c         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x80cf)
000000000000c360         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c361         db  0x42 ; 'B'
000000000000c362         db  0x0e ; '.'
000000000000c363         db  0x10 ; '.'
000000000000c364         db  0x8d ; '.'
000000000000c365         db  0x02 ; '.'
000000000000c366         db  0x42 ; 'B'
000000000000c367         db  0x0e ; '.'
000000000000c368         db  0x18 ; '.'
000000000000c369         db  0x8c ; '.'
000000000000c36a         db  0x03 ; '.'
000000000000c36b         db  0x41 ; 'A'
000000000000c36c         db  0x0e ; '.'
000000000000c36d         db  0x20 ; ' '
000000000000c36e         db  0x86 ; '.'
000000000000c36f         db  0x04 ; '.'
000000000000c370         db  0x41 ; 'A'
000000000000c371         db  0x0e ; '.'
000000000000c372         db  0x28 ; '('
000000000000c373         db  0x83 ; '.'
000000000000c374         db  0x05 ; '.'
000000000000c375         db  0x46 ; 'F'
000000000000c376         db  0x0e ; '.'
000000000000c377         db  0x30 ; '0'
000000000000c378         db  0x6a ; 'j'
000000000000c379         db  0x0e ; '.'
000000000000c37a         db  0x28 ; '('
000000000000c37b         db  0x43 ; 'C'
000000000000c37c         db  0x0e ; '.'
000000000000c37d         db  0x20 ; ' '
000000000000c37e         db  0x41 ; 'A'
000000000000c37f         db  0x0e ; '.'
000000000000c380         db  0x18 ; '.'
000000000000c381         db  0x42 ; 'B'
000000000000c382         db  0x0e ; '.'
000000000000c383         db  0x10 ; '.'
000000000000c384         db  0x42 ; 'B'
000000000000c385         db  0x0e ; '.'
000000000000c386         db  0x08 ; '.'
000000000000c387         db  0x00 ; '.'
000000000000c388         dd         0x00000110                                  ; Length of the record
000000000000c38c         dd         0x00000dcc                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c390         db         0x40, 0xbd, 2 dup (0xff)                    ; begin 0x80d0
000000000000c394         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x84e7)
000000000000c398         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c399         db  0x42 ; 'B'
000000000000c39a         db  0x0e ; '.'
000000000000c39b         db  0x10 ; '.'
000000000000c39c         db  0x8f ; '.'
000000000000c39d         db  0x02 ; '.'
000000000000c39e         db  0x42 ; 'B'
000000000000c39f         db  0x0e ; '.'
000000000000c3a0         db  0x18 ; '.'
000000000000c3a1         db  0x8e ; '.'
000000000000c3a2         db  0x03 ; '.'
000000000000c3a3         db  0x42 ; 'B'
000000000000c3a4         db  0x0e ; '.'
000000000000c3a5         db  0x20 ; ' '
000000000000c3a6         db  0x8d ; '.'
000000000000c3a7         db  0x04 ; '.'
000000000000c3a8         db  0x42 ; 'B'
000000000000c3a9         db  0x0e ; '.'
000000000000c3aa         db  0x28 ; '('
000000000000c3ab         db  0x8c ; '.'
000000000000c3ac         db  0x05 ; '.'
000000000000c3ad         db  0x44 ; 'D'
000000000000c3ae         db  0x0e ; '.'
000000000000c3af         db  0x30 ; '0'
000000000000c3b0         db  0x86 ; '.'
000000000000c3b1         db  0x06 ; '.'
000000000000c3b2         db  0x41 ; 'A'
000000000000c3b3         db  0x0e ; '.'
000000000000c3b4         db  0x38 ; '8'
000000000000c3b5         db  0x83 ; '.'
000000000000c3b6         db  0x07 ; '.'
000000000000c3b7         db  0x4a ; 'J'
000000000000c3b8         db  0x0e ; '.'
000000000000c3b9         db  0x60 ; '`'
000000000000c3ba         db  0x02 ; '.'
000000000000c3bb         db  0xdd ; '.'
000000000000c3bc         db  0x0e ; '.'
000000000000c3bd         db  0x68 ; 'h'
000000000000c3be         db  0x57 ; 'W'
000000000000c3bf         db  0x0e ; '.'
000000000000c3c0         db  0x70 ; 'p'
000000000000c3c1         db  0x42 ; 'B'
000000000000c3c2         db  0x0e ; '.'
000000000000c3c3         db  0x78 ; 'x'
000000000000c3c4         db  0x42 ; 'B'
000000000000c3c5         db  0x0e ; '.'
000000000000c3c6         db  0x80 ; '.'
000000000000c3c7         db  0x01 ; '.'
000000000000c3c8         db  0x42 ; 'B'
000000000000c3c9         db  0x0e ; '.'
000000000000c3ca         db  0x88 ; '.'
000000000000c3cb         db  0x01 ; '.'
000000000000c3cc         db  0x42 ; 'B'
000000000000c3cd         db  0x0e ; '.'
000000000000c3ce         db  0x90 ; '.'
000000000000c3cf         db  0x01 ; '.'
000000000000c3d0         db  0x53 ; 'S'
000000000000c3d1         db  0x0e ; '.'
000000000000c3d2         db  0x60 ; '`'
000000000000c3d3         db  0x44 ; 'D'
000000000000c3d4         db  0x0a ; '.'
000000000000c3d5         db  0x0e ; '.'
000000000000c3d6         db  0x38 ; '8'
000000000000c3d7         db  0x41 ; 'A'
000000000000c3d8         db  0x0e ; '.'
000000000000c3d9         db  0x30 ; '0'
000000000000c3da         db  0x41 ; 'A'
000000000000c3db         db  0x0e ; '.'
000000000000c3dc         db  0x28 ; '('
000000000000c3dd         db  0x42 ; 'B'
000000000000c3de         db  0x0e ; '.'
000000000000c3df         db  0x20 ; ' '
000000000000c3e0         db  0x42 ; 'B'
000000000000c3e1         db  0x0e ; '.'
000000000000c3e2         db  0x18 ; '.'
000000000000c3e3         db  0x42 ; 'B'
000000000000c3e4         db  0x0e ; '.'
000000000000c3e5         db  0x10 ; '.'
000000000000c3e6         db  0x42 ; 'B'
000000000000c3e7         db  0x0e ; '.'
000000000000c3e8         db  0x08 ; '.'
000000000000c3e9         db  0x44 ; 'D'
000000000000c3ea         db  0x0b ; '.'
000000000000c3eb         db  0x02 ; '.'
000000000000c3ec         db  0x78 ; 'x'
000000000000c3ed         db  0x0a ; '.'
000000000000c3ee         db  0x0e ; '.'
000000000000c3ef         db  0x68 ; 'h'
000000000000c3f0         db  0x48 ; 'H'
000000000000c3f1         db  0x0b ; '.'
000000000000c3f2         db  0x5a ; 'Z'
000000000000c3f3         db  0x0a ; '.'
000000000000c3f4         db  0x0e ; '.'
000000000000c3f5         db  0x38 ; '8'
000000000000c3f6         db  0x47 ; 'G'
000000000000c3f7         db  0x0e ; '.'
000000000000c3f8         db  0x30 ; '0'
000000000000c3f9         db  0x41 ; 'A'
000000000000c3fa         db  0x0e ; '.'
000000000000c3fb         db  0x28 ; '('
000000000000c3fc         db  0x42 ; 'B'
000000000000c3fd         db  0x0e ; '.'
000000000000c3fe         db  0x20 ; ' '
000000000000c3ff         db  0x42 ; 'B'
000000000000c400         db  0x0e ; '.'
000000000000c401         db  0x18 ; '.'
000000000000c402         db  0x42 ; 'B'
000000000000c403         db  0x0e ; '.'
000000000000c404         db  0x10 ; '.'
000000000000c405         db  0x42 ; 'B'
000000000000c406         db  0x0e ; '.'
000000000000c407         db  0x08 ; '.'
000000000000c408         db  0x56 ; 'V'
000000000000c409         db  0x0b ; '.'
000000000000c40a         db  0x5e ; '^'
000000000000c40b         db  0x0a ; '.'
000000000000c40c         db  0x0e ; '.'
000000000000c40d         db  0x38 ; '8'
000000000000c40e         db  0x52 ; 'R'
000000000000c40f         db  0x0e ; '.'
000000000000c410         db  0x30 ; '0'
000000000000c411         db  0x41 ; 'A'
000000000000c412         db  0x0e ; '.'
000000000000c413         db  0x28 ; '('
000000000000c414         db  0x42 ; 'B'
000000000000c415         db  0x0e ; '.'
000000000000c416         db  0x20 ; ' '
000000000000c417         db  0x42 ; 'B'
000000000000c418         db  0x0e ; '.'
000000000000c419         db  0x18 ; '.'
000000000000c41a         db  0x42 ; 'B'
000000000000c41b         db  0x0e ; '.'
000000000000c41c         db  0x10 ; '.'
000000000000c41d         db  0x42 ; 'B'
000000000000c41e         db  0x0e ; '.'
000000000000c41f         db  0x08 ; '.'
000000000000c420         db  0x4f ; 'O'
000000000000c421         db  0x0b ; '.'
000000000000c422         db  0x62 ; 'b'
000000000000c423         db  0x0a ; '.'
000000000000c424         db  0x0e ; '.'
000000000000c425         db  0x38 ; '8'
000000000000c426         db  0x50 ; 'P'
000000000000c427         db  0x0e ; '.'
000000000000c428         db  0x30 ; '0'
000000000000c429         db  0x41 ; 'A'
000000000000c42a         db  0x0e ; '.'
000000000000c42b         db  0x28 ; '('
000000000000c42c         db  0x42 ; 'B'
000000000000c42d         db  0x0e ; '.'
000000000000c42e         db  0x20 ; ' '
000000000000c42f         db  0x42 ; 'B'
000000000000c430         db  0x0e ; '.'
000000000000c431         db  0x18 ; '.'
000000000000c432         db  0x42 ; 'B'
000000000000c433         db  0x0e ; '.'
000000000000c434         db  0x10 ; '.'
000000000000c435         db  0x42 ; 'B'
000000000000c436         db  0x0e ; '.'
000000000000c437         db  0x08 ; '.'
000000000000c438         db  0x55 ; 'U'
000000000000c439         db  0x0b ; '.'
000000000000c43a         db  0x66 ; 'f'
000000000000c43b         db  0x0e ; '.'
000000000000c43c         db  0x68 ; 'h'
000000000000c43d         db  0x42 ; 'B'
000000000000c43e         db  0x0e ; '.'
000000000000c43f         db  0x70 ; 'p'
000000000000c440         db  0x5c ; '\'
000000000000c441         db  0x0e ; '.'
000000000000c442         db  0x68 ; 'h'
000000000000c443         db  0x41 ; 'A'
000000000000c444         db  0x0e ; '.'
000000000000c445         db  0x60 ; '`'
000000000000c446         db  0x44 ; 'D'
000000000000c447         db  0x0a ; '.'
000000000000c448         db  0x0e ; '.'
000000000000c449         db  0x38 ; '8'
000000000000c44a         db  0x41 ; 'A'
000000000000c44b         db  0x0e ; '.'
000000000000c44c         db  0x30 ; '0'
000000000000c44d         db  0x41 ; 'A'
000000000000c44e         db  0x0e ; '.'
000000000000c44f         db  0x28 ; '('
000000000000c450         db  0x42 ; 'B'
000000000000c451         db  0x0e ; '.'
000000000000c452         db  0x20 ; ' '
000000000000c453         db  0x42 ; 'B'
000000000000c454         db  0x0e ; '.'
000000000000c455         db  0x18 ; '.'
000000000000c456         db  0x42 ; 'B'
000000000000c457         db  0x0e ; '.'
000000000000c458         db  0x10 ; '.'
000000000000c459         db  0x42 ; 'B'
000000000000c45a         db  0x0e ; '.'
000000000000c45b         db  0x08 ; '.'
000000000000c45c         db  0x45 ; 'E'
000000000000c45d         db  0x0b ; '.'
000000000000c45e         db  0x68 ; 'h'
000000000000c45f         db  0x0a ; '.'
000000000000c460         db  0x0e ; '.'
000000000000c461         db  0x68 ; 'h'
000000000000c462         db  0x48 ; 'H'
000000000000c463         db  0x0b ; '.'
000000000000c464         db  0x72 ; 'r'
000000000000c465         db  0x0e ; '.'
000000000000c466         db  0x68 ; 'h'
000000000000c467         db  0x45 ; 'E'
000000000000c468         db  0x0e ; '.'
000000000000c469         db  0x70 ; 'p'
000000000000c46a         db  0x42 ; 'B'
000000000000c46b         db  0x0e ; '.'
000000000000c46c         db  0x78 ; 'x'
000000000000c46d         db  0x42 ; 'B'
000000000000c46e         db  0x0e ; '.'
000000000000c46f         db  0x80 ; '.'
000000000000c470         db  0x01 ; '.'
000000000000c471         db  0x5e ; '^'
000000000000c472         db  0x0e ; '.'
000000000000c473         db  0x60 ; '`'
000000000000c474         db  0x44 ; 'D'
000000000000c475         db  0x0a ; '.'
000000000000c476         db  0x0e ; '.'
000000000000c477         db  0x38 ; '8'
000000000000c478         db  0x41 ; 'A'
000000000000c479         db  0x0e ; '.'
000000000000c47a         db  0x30 ; '0'
000000000000c47b         db  0x41 ; 'A'
000000000000c47c         db  0x0e ; '.'
000000000000c47d         db  0x28 ; '('
000000000000c47e         db  0x42 ; 'B'
000000000000c47f         db  0x0e ; '.'
000000000000c480         db  0x20 ; ' '
000000000000c481         db  0x42 ; 'B'
000000000000c482         db  0x0e ; '.'
000000000000c483         db  0x18 ; '.'
000000000000c484         db  0x42 ; 'B'
000000000000c485         db  0x0e ; '.'
000000000000c486         db  0x10 ; '.'
000000000000c487         db  0x42 ; 'B'
000000000000c488         db  0x0e ; '.'
000000000000c489         db  0x08 ; '.'
000000000000c48a         db  0x41 ; 'A'
000000000000c48b         db  0x0b ; '.'
000000000000c48c         db  0x79 ; 'y'
000000000000c48d         db  0x0a ; '.'
000000000000c48e         db  0x0e ; '.'
000000000000c48f         db  0x68 ; 'h'
000000000000c490         db  0x42 ; 'B'
000000000000c491         db  0x0e ; '.'
000000000000c492         db  0x70 ; 'p'
000000000000c493         db  0x42 ; 'B'
000000000000c494         db  0x0e ; '.'
000000000000c495         db  0x78 ; 'x'
000000000000c496         db  0x42 ; 'B'
000000000000c497         db  0x0e ; '.'
000000000000c498         db  0x80 ; '.'
000000000000c499         db  0x01 ; '.'
000000000000c49a         db  0x51 ; 'Q'
000000000000c49b         db  0x0b ; '.'
000000000000c49c         dd         0x00000010                                  ; Length of the record
000000000000c4a0         dd         0x00000ee0                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c4a4         db         0x4c, 0xc0, 2 dup (0xff)                    ; begin 0x84f0
000000000000c4a8         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x8510)
000000000000c4ac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c4ad         align      16
000000000000c4b0         dd         0x00000018                                  ; Length of the record
000000000000c4b4         dd         0x00000ef4                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c4b8         db         0x58, 0xc0, 2 dup (0xff)                    ; begin 0x8510
000000000000c4bc         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x8588)
000000000000c4c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c4c1         db  0x44 ; 'D'
000000000000c4c2         db  0x0e ; '.'
000000000000c4c3         db  0x70 ; 'p'
000000000000c4c4         db  0x02 ; '.'
000000000000c4c5         db  0x60 ; '`'
000000000000c4c6         db  0x0a ; '.'
000000000000c4c7         db  0x0e ; '.'
000000000000c4c8         db  0x08 ; '.'
000000000000c4c9         db  0x41 ; 'A'
000000000000c4ca         db  0x0b ; '.'
000000000000c4cb         db  0x00 ; '.'
000000000000c4cc         dd         0x00000028                                  ; Length of the record
000000000000c4d0         dd         0x00000f10                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c4d4         db         0xbc, 0xc0, 2 dup (0xff)                    ; begin 0x8590
000000000000c4d8         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x8665)
000000000000c4dc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c4dd         db  0x41 ; 'A'
000000000000c4de         db  0x0e ; '.'
000000000000c4df         db  0x10 ; '.'
000000000000c4e0         db  0x86 ; '.'
000000000000c4e1         db  0x02 ; '.'
000000000000c4e2         db  0x41 ; 'A'
000000000000c4e3         db  0x0e ; '.'
000000000000c4e4         db  0x18 ; '.'
000000000000c4e5         db  0x83 ; '.'
000000000000c4e6         db  0x03 ; '.'
000000000000c4e7         db  0x50 ; 'P'
000000000000c4e8         db  0x0e ; '.'
000000000000c4e9         db  0xd0 ; '.'
000000000000c4ea         db  0x01 ; '.'
000000000000c4eb         db  0x02 ; '.'
000000000000c4ec         db  0xab ; '.'
000000000000c4ed         db  0x0a ; '.'
000000000000c4ee         db  0x0e ; '.'
000000000000c4ef         db  0x18 ; '.'
000000000000c4f0         db  0x41 ; 'A'
000000000000c4f1         db  0x0e ; '.'
000000000000c4f2         db  0x10 ; '.'
000000000000c4f3         db  0x41 ; 'A'
000000000000c4f4         db  0x0e ; '.'
000000000000c4f5         db  0x08 ; '.'
000000000000c4f6         db  0x41 ; 'A'
000000000000c4f7         db  0x0b ; '.'
000000000000c4f8         dd         0x0000001c                                  ; Length of the record
000000000000c4fc         dd         0x00000f3c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c500         db         0x70, 0xc1, 2 dup (0xff)                    ; begin 0x8670
000000000000c504         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x86f0)
000000000000c508         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c509         db  0x41 ; 'A'
000000000000c50a         db  0x0e ; '.'
000000000000c50b         db  0x10 ; '.'
000000000000c50c         db  0x83 ; '.'
000000000000c50d         db  0x02 ; '.'
000000000000c50e         db  0x02 ; '.'
000000000000c50f         db  0x7a ; 'z'
000000000000c510         db  0x0e ; '.'
000000000000c511         db  0x08 ; '.'
000000000000c512         db  0x00 ; '.'
000000000000c513         db  0x00 ; '.'
000000000000c514         db  0x00 ; '.'
000000000000c515         db  0x00 ; '.'
000000000000c516         db  0x00 ; '.'
000000000000c517         db  0x00 ; '.'
000000000000c518         dd         0x00000018                                  ; Length of the record
000000000000c51c         dd         0x00000f5c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c520         db         0xd0, 0xc1, 2 dup (0xff)                    ; begin 0x86f0
000000000000c524         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x870a)
000000000000c528         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c529         db  0x41 ; 'A'
000000000000c52a         db  0x0e ; '.'
000000000000c52b         db  0x10 ; '.'
000000000000c52c         db  0x83 ; '.'
000000000000c52d         db  0x02 ; '.'
000000000000c52e         db  0x53 ; 'S'
000000000000c52f         db  0x0a ; '.'
000000000000c530         db  0x0e ; '.'
000000000000c531         db  0x08 ; '.'
000000000000c532         db  0x41 ; 'A'
000000000000c533         db  0x0b ; '.'
000000000000c534         dd         0x00000010                                  ; Length of the record
000000000000c538         dd         0x00000f78                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c53c         db         0xd4, 0xc1, 2 dup (0xff)                    ; begin 0x8710
000000000000c540         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x8734)
000000000000c544         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c545         db  0x5f ; '_'
000000000000c546         db  0x0e ; '.'
000000000000c547         db  0x10 ; '.'
000000000000c548         dd         0x00000010                                  ; Length of the record
000000000000c54c         dd         0x00000f8c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c550         db         0xf0, 0xc1, 2 dup (0xff)                    ; begin 0x8740
000000000000c554         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x8742)
000000000000c558         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c559         align      4
000000000000c55c         dd         0x00000020                                  ; Length of the record
000000000000c560         dd         0x00000fa0                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c564         db         0xec, 0xc1, 2 dup (0xff)                    ; begin 0x8750
000000000000c568         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x8786)
000000000000c56c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c56d         db  0x44 ; 'D'
000000000000c56e         db  0x0e ; '.'
000000000000c56f         db  0x10 ; '.'
000000000000c570         db  0x83 ; '.'
000000000000c571         db  0x02 ; '.'
000000000000c572         db  0x5d ; ']'
000000000000c573         db  0x0a ; '.'
000000000000c574         db  0x0e ; '.'
000000000000c575         db  0x08 ; '.'
000000000000c576         db  0x47 ; 'G'
000000000000c577         db  0x0b ; '.'
000000000000c578         db  0x48 ; 'H'
000000000000c579         db  0x0a ; '.'
000000000000c57a         db  0x0e ; '.'
000000000000c57b         db  0x08 ; '.'
000000000000c57c         db  0x41 ; 'A'
000000000000c57d         db  0x0b ; '.'
000000000000c57e         db  0x00 ; '.'
000000000000c57f         db  0x00 ; '.'
000000000000c580         dd         0x00000010                                  ; Length of the record
000000000000c584         dd         0x00000fc4                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c588         db         0x08, 0xc2, 2 dup (0xff)                    ; begin 0x8790
000000000000c58c         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x87b4)
000000000000c590         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c591         db  0x5f ; '_'
000000000000c592         db  0x0e ; '.'
000000000000c593         db  0x10 ; '.'
000000000000c594         dd         0x00000014                                  ; Length of the record
000000000000c598         dd         0x00000fd8                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c59c         db         0x24, 0xc2, 2 dup (0xff)                    ; begin 0x87c0
000000000000c5a0         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x8842)
000000000000c5a4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c5a5         db  0x02 ; '.'
000000000000c5a6         db  0x5f ; '_'
000000000000c5a7         db  0x0e ; '.'
000000000000c5a8         db  0x10 ; '.'
000000000000c5a9         db  0x49 ; 'I'
000000000000c5aa         db  0x0e ; '.'
000000000000c5ab         db  0x08 ; '.'
000000000000c5ac         dd         0x00000014                                  ; Length of the record
000000000000c5b0         dd         0x00000ff0                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c5b4         db         0x9c, 0xc2, 2 dup (0xff)                    ; begin 0x8850
000000000000c5b8         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x889a)
000000000000c5bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c5bd         db  0x02 ; '.'
000000000000c5be         db  0x45 ; 'E'
000000000000c5bf         db  0x0e ; '.'
000000000000c5c0         db  0x10 ; '.'
000000000000c5c1         db  0x00 ; '.'
000000000000c5c2         db  0x00 ; '.'
000000000000c5c3         db  0x00 ; '.'
000000000000c5c4         dd         0x00000018                                  ; Length of the record
000000000000c5c8         dd         0x00001008                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c5cc         db         0xd4, 0xc2, 2 dup (0xff)                    ; begin 0x88a0
000000000000c5d0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x88b7)
000000000000c5d4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c5d5         db  0x41 ; 'A'
000000000000c5d6         db  0x0e ; '.'
000000000000c5d7         db  0x10 ; '.'
000000000000c5d8         db  0x83 ; '.'
000000000000c5d9         db  0x02 ; '.'
000000000000c5da         db  0x51 ; 'Q'
000000000000c5db         db  0x0e ; '.'
000000000000c5dc         db  0x08 ; '.'
000000000000c5dd         db  0x00 ; '.'
000000000000c5de         db  0x00 ; '.'
000000000000c5df         db  0x00 ; '.'
000000000000c5e0         dd         0x00000018                                  ; Length of the record
000000000000c5e4         dd         0x00001024                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c5e8         db         0xd8, 0xc2, 2 dup (0xff)                    ; begin 0x88c0
000000000000c5ec         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x88ee)
000000000000c5f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c5f1         db  0x47 ; 'G'
000000000000c5f2         db  0x0e ; '.'
000000000000c5f3         db  0x10 ; '.'
000000000000c5f4         db  0x61 ; 'a'
000000000000c5f5         db  0x0a ; '.'
000000000000c5f6         db  0x0e ; '.'
000000000000c5f7         db  0x08 ; '.'
000000000000c5f8         db  0x41 ; 'A'
000000000000c5f9         db  0x0b ; '.'
000000000000c5fa         db  0x00 ; '.'
000000000000c5fb         db  0x00 ; '.'
000000000000c5fc         dd         0x00000024                                  ; Length of the record
000000000000c600         dd         0x00001040                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c604         db         0xec, 0xc2, 2 dup (0xff)                    ; begin 0x88f0
000000000000c608         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x8918)
000000000000c60c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c60d         db  0x41 ; 'A'
000000000000c60e         db  0x0e ; '.'
000000000000c60f         db  0x10 ; '.'
000000000000c610         db  0x86 ; '.'
000000000000c611         db  0x02 ; '.'
000000000000c612         db  0x41 ; 'A'
000000000000c613         db  0x0e ; '.'
000000000000c614         db  0x18 ; '.'
000000000000c615         db  0x83 ; '.'
000000000000c616         db  0x03 ; '.'
000000000000c617         db  0x4d ; 'M'
000000000000c618         db  0x0e ; '.'
000000000000c619         db  0x20 ; ' '
000000000000c61a         db  0x49 ; 'I'
000000000000c61b         db  0x0e ; '.'
000000000000c61c         db  0x18 ; '.'
000000000000c61d         db  0x47 ; 'G'
000000000000c61e         db  0x0e ; '.'
000000000000c61f         db  0x10 ; '.'
000000000000c620         db  0x41 ; 'A'
000000000000c621         db  0x0e ; '.'
000000000000c622         db  0x08 ; '.'
000000000000c623         db  0x00 ; '.'
000000000000c624         dd         0x00000018                                  ; Length of the record
000000000000c628         dd         0x00001068                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c62c         db         0xf4, 0xc2, 2 dup (0xff)                    ; begin 0x8920
000000000000c630         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x8933)
000000000000c634         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c635         db  0x41 ; 'A'
000000000000c636         db  0x0e ; '.'
000000000000c637         db  0x10 ; '.'
000000000000c638         db  0x83 ; '.'
000000000000c639         db  0x02 ; '.'
000000000000c63a         db  0x50 ; 'P'
000000000000c63b         db  0x0e ; '.'
000000000000c63c         db  0x08 ; '.'
000000000000c63d         db  0x00 ; '.'
000000000000c63e         db  0x00 ; '.'
000000000000c63f         db  0x00 ; '.'
000000000000c640         dd         0x00000014                                  ; Length of the record
000000000000c644         dd         0x00001084                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c648         db         0xf8, 0xc2, 2 dup (0xff)                    ; begin 0x8940
000000000000c64c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x8975)
000000000000c650         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c651         db  0x4b ; 'K'
000000000000c652         db  0x0e ; '.'
000000000000c653         db  0x10 ; '.'
000000000000c654         db  0x00 ; '.'
000000000000c655         db  0x00 ; '.'
000000000000c656         db  0x00 ; '.'
000000000000c657         db  0x00 ; '.'
000000000000c658         dd         0x00000048                                  ; Length of the record
000000000000c65c         dd         0x0000109c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c660         db         0x20, 0xc3, 2 dup (0xff)                    ; begin 0x8980
000000000000c664         db         0x00, 0x01, 2 dup (0x00)                    ; length 0x100 (end at 0x8a80)
000000000000c668         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c669         db  0x42 ; 'B'
000000000000c66a         db  0x0e ; '.'
000000000000c66b         db  0x10 ; '.'
000000000000c66c         db  0x8f ; '.'
000000000000c66d         db  0x02 ; '.'
000000000000c66e         db  0x42 ; 'B'
000000000000c66f         db  0x0e ; '.'
000000000000c670         db  0x18 ; '.'
000000000000c671         db  0x8e ; '.'
000000000000c672         db  0x03 ; '.'
000000000000c673         db  0x45 ; 'E'
000000000000c674         db  0x0e ; '.'
000000000000c675         db  0x20 ; ' '
000000000000c676         db  0x8d ; '.'
000000000000c677         db  0x04 ; '.'
000000000000c678         db  0x42 ; 'B'
000000000000c679         db  0x0e ; '.'
000000000000c67a         db  0x28 ; '('
000000000000c67b         db  0x8c ; '.'
000000000000c67c         db  0x05 ; '.'
000000000000c67d         db  0x44 ; 'D'
000000000000c67e         db  0x0e ; '.'
000000000000c67f         db  0x30 ; '0'
000000000000c680         db  0x86 ; '.'
000000000000c681         db  0x06 ; '.'
000000000000c682         db  0x41 ; 'A'
000000000000c683         db  0x0e ; '.'
000000000000c684         db  0x38 ; '8'
000000000000c685         db  0x83 ; '.'
000000000000c686         db  0x07 ; '.'
000000000000c687         db  0x4e ; 'N'
000000000000c688         db  0x0e ; '.'
000000000000c689         db  0x50 ; 'P'
000000000000c68a         db  0x02 ; '.'
000000000000c68b         db  0x9d ; '.'
000000000000c68c         db  0x0a ; '.'
000000000000c68d         db  0x0e ; '.'
000000000000c68e         db  0x38 ; '8'
000000000000c68f         db  0x41 ; 'A'
000000000000c690         db  0x0e ; '.'
000000000000c691         db  0x30 ; '0'
000000000000c692         db  0x41 ; 'A'
000000000000c693         db  0x0e ; '.'
000000000000c694         db  0x28 ; '('
000000000000c695         db  0x42 ; 'B'
000000000000c696         db  0x0e ; '.'
000000000000c697         db  0x20 ; ' '
000000000000c698         db  0x42 ; 'B'
000000000000c699         db  0x0e ; '.'
000000000000c69a         db  0x18 ; '.'
000000000000c69b         db  0x42 ; 'B'
000000000000c69c         db  0x0e ; '.'
000000000000c69d         db  0x10 ; '.'
000000000000c69e         db  0x42 ; 'B'
000000000000c69f         db  0x0e ; '.'
000000000000c6a0         db  0x08 ; '.'
000000000000c6a1         db  0x4b ; 'K'
000000000000c6a2         db  0x0b ; '.'
000000000000c6a3         db  0x00 ; '.'
000000000000c6a4         dd         0x00000018                                  ; Length of the record
000000000000c6a8         dd         0x000010e8                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c6ac         db         0xd4, 0xc3, 2 dup (0xff)                    ; begin 0x8a80
000000000000c6b0         db         0x21, 3 dup (0x00)                          ; length 0x21 (end at 0x8aa1)
000000000000c6b4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c6b5         db  0x44 ; 'D'
000000000000c6b6         db  0x0e ; '.'
000000000000c6b7         db  0x18 ; '.'
000000000000c6b8         db  0x42 ; 'B'
000000000000c6b9         db  0x0e ; '.'
000000000000c6ba         db  0x20 ; ' '
000000000000c6bb         db  0x5a ; 'Z'
000000000000c6bc         db  0x0e ; '.'
000000000000c6bd         db  0x08 ; '.'
000000000000c6be         db  0x00 ; '.'
000000000000c6bf         db  0x00 ; '.'
000000000000c6c0         dd         0x0000004c                                  ; Length of the record
000000000000c6c4         dd         0x00001104                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c6c8         db         0xe8, 0xc3, 2 dup (0xff)                    ; begin 0x8ab0
000000000000c6cc         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x8ecc)
000000000000c6d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c6d1         db  0x42 ; 'B'
000000000000c6d2         db  0x0e ; '.'
000000000000c6d3         db  0x10 ; '.'
000000000000c6d4         db  0x8f ; '.'
000000000000c6d5         db  0x02 ; '.'
000000000000c6d6         db  0x42 ; 'B'
000000000000c6d7         db  0x0e ; '.'
000000000000c6d8         db  0x18 ; '.'
000000000000c6d9         db  0x8e ; '.'
000000000000c6da         db  0x03 ; '.'
000000000000c6db         db  0x42 ; 'B'
000000000000c6dc         db  0x0e ; '.'
000000000000c6dd         db  0x20 ; ' '
000000000000c6de         db  0x8d ; '.'
000000000000c6df         db  0x04 ; '.'
000000000000c6e0         db  0x42 ; 'B'
000000000000c6e1         db  0x0e ; '.'
000000000000c6e2         db  0x28 ; '('
000000000000c6e3         db  0x8c ; '.'
000000000000c6e4         db  0x05 ; '.'
000000000000c6e5         db  0x41 ; 'A'
000000000000c6e6         db  0x0e ; '.'
000000000000c6e7         db  0x30 ; '0'
000000000000c6e8         db  0x86 ; '.'
000000000000c6e9         db  0x06 ; '.'
000000000000c6ea         db  0x41 ; 'A'
000000000000c6eb         db  0x0e ; '.'
000000000000c6ec         db  0x38 ; '8'
000000000000c6ed         db  0x83 ; '.'
000000000000c6ee         db  0x07 ; '.'
000000000000c6ef         db  0x44 ; 'D'
000000000000c6f0         db  0x0e ; '.'
000000000000c6f1         db  0x60 ; '`'
000000000000c6f2         db  0x02 ; '.'
000000000000c6f3         db  0xe9 ; '.'
000000000000c6f4         db  0x0a ; '.'
000000000000c6f5         db  0x0e ; '.'
000000000000c6f6         db  0x38 ; '8'
000000000000c6f7         db  0x41 ; 'A'
000000000000c6f8         db  0x0e ; '.'
000000000000c6f9         db  0x30 ; '0'
000000000000c6fa         db  0x41 ; 'A'
000000000000c6fb         db  0x0e ; '.'
000000000000c6fc         db  0x28 ; '('
000000000000c6fd         db  0x42 ; 'B'
000000000000c6fe         db  0x0e ; '.'
000000000000c6ff         db  0x20 ; ' '
000000000000c700         db  0x42 ; 'B'
000000000000c701         db  0x0e ; '.'
000000000000c702         db  0x18 ; '.'
000000000000c703         db  0x42 ; 'B'
000000000000c704         db  0x0e ; '.'
000000000000c705         db  0x10 ; '.'
000000000000c706         db  0x42 ; 'B'
000000000000c707         db  0x0e ; '.'
000000000000c708         db  0x08 ; '.'
000000000000c709         db  0x47 ; 'G'
000000000000c70a         db  0x0b ; '.'
000000000000c70b         db  0x00 ; '.'
000000000000c70c         db  0x00 ; '.'
000000000000c70d         db  0x00 ; '.'
000000000000c70e         db  0x00 ; '.'
000000000000c70f         db  0x00 ; '.'
000000000000c710         dd         0x00000034                                  ; Length of the record
000000000000c714         dd         0x00001154                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c718         db         0xb8, 0xc7, 2 dup (0xff)                    ; begin 0x8ed0
000000000000c71c         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x8f4b)
000000000000c720         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c721         db  0x42 ; 'B'
000000000000c722         db  0x0e ; '.'
000000000000c723         db  0x10 ; '.'
000000000000c724         db  0x8c ; '.'
000000000000c725         db  0x02 ; '.'
000000000000c726         db  0x41 ; 'A'
000000000000c727         db  0x0e ; '.'
000000000000c728         db  0x18 ; '.'
000000000000c729         db  0x86 ; '.'
000000000000c72a         db  0x03 ; '.'
000000000000c72b         db  0x41 ; 'A'
000000000000c72c         db  0x0e ; '.'
000000000000c72d         db  0x20 ; ' '
000000000000c72e         db  0x83 ; '.'
000000000000c72f         db  0x04 ; '.'
000000000000c730         db  0x7d ; '}'
000000000000c731         db  0x0a ; '.'
000000000000c732         db  0x0e ; '.'
000000000000c733         db  0x18 ; '.'
000000000000c734         db  0x41 ; 'A'
000000000000c735         db  0x0e ; '.'
000000000000c736         db  0x10 ; '.'
000000000000c737         db  0x42 ; 'B'
000000000000c738         db  0x0e ; '.'
000000000000c739         db  0x08 ; '.'
000000000000c73a         db  0x44 ; 'D'
000000000000c73b         db  0x0b ; '.'
000000000000c73c         db  0x60 ; '`'
000000000000c73d         db  0x0a ; '.'
000000000000c73e         db  0x0e ; '.'
000000000000c73f         db  0x18 ; '.'
000000000000c740         db  0x41 ; 'A'
000000000000c741         db  0x0e ; '.'
000000000000c742         db  0x10 ; '.'
000000000000c743         db  0x42 ; 'B'
000000000000c744         db  0x0e ; '.'
000000000000c745         db  0x08 ; '.'
000000000000c746         db  0x45 ; 'E'
000000000000c747         db  0x0b ; '.'
000000000000c748         dd         0x00000034                                  ; Length of the record
000000000000c74c         dd         0x0000118c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c750         db         0x00, 0xc8, 2 dup (0xff)                    ; begin 0x8f50
000000000000c754         db         0x7e, 0x02, 2 dup (0x00)                    ; length 0x27e (end at 0x91ce)
000000000000c758         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c759         db  0x42 ; 'B'
000000000000c75a         db  0x0e ; '.'
000000000000c75b         db  0x10 ; '.'
000000000000c75c         db  0x8c ; '.'
000000000000c75d         db  0x02 ; '.'
000000000000c75e         db  0x41 ; 'A'
000000000000c75f         db  0x0e ; '.'
000000000000c760         db  0x18 ; '.'
000000000000c761         db  0x86 ; '.'
000000000000c762         db  0x03 ; '.'
000000000000c763         db  0x43 ; 'C'
000000000000c764         db  0x0e ; '.'
000000000000c765         db  0x20 ; ' '
000000000000c766         db  0x83 ; '.'
000000000000c767         db  0x04 ; '.'
000000000000c768         db  0x44 ; 'D'
000000000000c769         db  0x0e ; '.'
000000000000c76a         db  0x70 ; 'p'
000000000000c76b         db  0x02 ; '.'
000000000000c76c         db  0xf0 ; '.'
000000000000c76d         db  0x0a ; '.'
000000000000c76e         db  0x0e ; '.'
000000000000c76f         db  0x20 ; ' '
000000000000c770         db  0x41 ; 'A'
000000000000c771         db  0x0e ; '.'
000000000000c772         db  0x18 ; '.'
000000000000c773         db  0x41 ; 'A'
000000000000c774         db  0x0e ; '.'
000000000000c775         db  0x10 ; '.'
000000000000c776         db  0x42 ; 'B'
000000000000c777         db  0x0e ; '.'
000000000000c778         db  0x08 ; '.'
000000000000c779         db  0x42 ; 'B'
000000000000c77a         db  0x0b ; '.'
000000000000c77b         db  0x00 ; '.'
000000000000c77c         db  0x00 ; '.'
000000000000c77d         db  0x00 ; '.'
000000000000c77e         db  0x00 ; '.'
000000000000c77f         db  0x00 ; '.'
000000000000c780         dd         0x0000001c                                  ; Length of the record
000000000000c784         dd         0x000011c4                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c788         db         0x48, 0xca, 2 dup (0xff)                    ; begin 0x91d0
000000000000c78c         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x9210)
000000000000c790         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c791         db  0x44 ; 'D'
000000000000c792         db  0x0e ; '.'
000000000000c793         db  0x10 ; '.'
000000000000c794         db  0x83 ; '.'
000000000000c795         db  0x02 ; '.'
000000000000c796         db  0x5a ; 'Z'
000000000000c797         db  0x0a ; '.'
000000000000c798         db  0x0e ; '.'
000000000000c799         db  0x08 ; '.'
000000000000c79a         db  0x4a ; 'J'
000000000000c79b         db  0x0b ; '.'
000000000000c79c         db  0x53 ; 'S'
000000000000c79d         db  0x0e ; '.'
000000000000c79e         db  0x08 ; '.'
000000000000c79f         db  0x00 ; '.'
000000000000c7a0         dd         0x0000002c                                  ; Length of the record
000000000000c7a4         dd         0x000011e4                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c7a8         db         0x68, 0xca, 2 dup (0xff)                    ; begin 0x9210
000000000000c7ac         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x9267)
000000000000c7b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c7b1         db  0x63 ; 'c'
000000000000c7b2         db  0x0e ; '.'
000000000000c7b3         db  0x10 ; '.'
000000000000c7b4         db  0x8c ; '.'
000000000000c7b5         db  0x02 ; '.'
000000000000c7b6         db  0x41 ; 'A'
000000000000c7b7         db  0x0e ; '.'
000000000000c7b8         db  0x18 ; '.'
000000000000c7b9         db  0x86 ; '.'
000000000000c7ba         db  0x03 ; '.'
000000000000c7bb         db  0x44 ; 'D'
000000000000c7bc         db  0x0e ; '.'
000000000000c7bd         db  0x20 ; ' '
000000000000c7be         db  0x83 ; '.'
000000000000c7bf         db  0x04 ; '.'
000000000000c7c0         db  0x6b ; 'k'
000000000000c7c1         db  0x0e ; '.'
000000000000c7c2         db  0x18 ; '.'
000000000000c7c3         db  0x41 ; 'A'
000000000000c7c4         db  0x0e ; '.'
000000000000c7c5         db  0x10 ; '.'
000000000000c7c6         db  0x42 ; 'B'
000000000000c7c7         db  0x0e ; '.'
000000000000c7c8         db  0x08 ; '.'
000000000000c7c9         db  0x00 ; '.'
000000000000c7ca         db  0x00 ; '.'
000000000000c7cb         db  0x00 ; '.'
000000000000c7cc         db  0x00 ; '.'
000000000000c7cd         db  0x00 ; '.'
000000000000c7ce         db  0x00 ; '.'
000000000000c7cf         db  0x00 ; '.'
000000000000c7d0         dd         0x0000003c                                  ; Length of the record
000000000000c7d4         dd         0x00001214                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c7d8         db         0x98, 0xca, 2 dup (0xff)                    ; begin 0x9270
000000000000c7dc         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x92f3)
000000000000c7e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c7e1         db  0x42 ; 'B'
000000000000c7e2         db  0x0e ; '.'
000000000000c7e3         db  0x10 ; '.'
000000000000c7e4         db  0x8d ; '.'
000000000000c7e5         db  0x02 ; '.'
000000000000c7e6         db  0x42 ; 'B'
000000000000c7e7         db  0x0e ; '.'
000000000000c7e8         db  0x18 ; '.'
000000000000c7e9         db  0x8c ; '.'
000000000000c7ea         db  0x03 ; '.'
000000000000c7eb         db  0x44 ; 'D'
000000000000c7ec         db  0x0e ; '.'
000000000000c7ed         db  0x20 ; ' '
000000000000c7ee         db  0x86 ; '.'
000000000000c7ef         db  0x04 ; '.'
000000000000c7f0         db  0x41 ; 'A'
000000000000c7f1         db  0x0e ; '.'
000000000000c7f2         db  0x28 ; '('
000000000000c7f3         db  0x83 ; '.'
000000000000c7f4         db  0x05 ; '.'
000000000000c7f5         db  0x4a ; 'J'
000000000000c7f6         db  0x0e ; '.'
000000000000c7f7         db  0x40 ; '@'
000000000000c7f8         db  0x02 ; '.'
000000000000c7f9         db  0x64 ; 'd'
000000000000c7fa         db  0x0a ; '.'
000000000000c7fb         db  0x0e ; '.'
000000000000c7fc         db  0x28 ; '('
000000000000c7fd         db  0x41 ; 'A'
000000000000c7fe         db  0x0e ; '.'
000000000000c7ff         db  0x20 ; ' '
000000000000c800         db  0x41 ; 'A'
000000000000c801         db  0x0e ; '.'
000000000000c802         db  0x18 ; '.'
000000000000c803         db  0x42 ; 'B'
000000000000c804         db  0x0e ; '.'
000000000000c805         db  0x10 ; '.'
000000000000c806         db  0x42 ; 'B'
000000000000c807         db  0x0e ; '.'
000000000000c808         db  0x08 ; '.'
000000000000c809         db  0x41 ; 'A'
000000000000c80a         db  0x0b ; '.'
000000000000c80b         db  0x00 ; '.'
000000000000c80c         db  0x00 ; '.'
000000000000c80d         db  0x00 ; '.'
000000000000c80e         db  0x00 ; '.'
000000000000c80f         db  0x00 ; '.'
000000000000c810         dd         0x0000004c                                  ; Length of the record
000000000000c814         dd         0x00001254                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c818         db         0xe8, 0xca, 2 dup (0xff)                    ; begin 0x9300
000000000000c81c         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x937d)
000000000000c820         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c821         db  0x42 ; 'B'
000000000000c822         db  0x0e ; '.'
000000000000c823         db  0x10 ; '.'
000000000000c824         db  0x8c ; '.'
000000000000c825         db  0x02 ; '.'
000000000000c826         db  0x41 ; 'A'
000000000000c827         db  0x0e ; '.'
000000000000c828         db  0x18 ; '.'
000000000000c829         db  0x86 ; '.'
000000000000c82a         db  0x03 ; '.'
000000000000c82b         db  0x44 ; 'D'
000000000000c82c         db  0x0e ; '.'
000000000000c82d         db  0x20 ; ' '
000000000000c82e         db  0x83 ; '.'
000000000000c82f         db  0x04 ; '.'
000000000000c830         db  0x69 ; 'i'
000000000000c831         db  0x0a ; '.'
000000000000c832         db  0x0e ; '.'
000000000000c833         db  0x18 ; '.'
000000000000c834         db  0x41 ; 'A'
000000000000c835         db  0x0e ; '.'
000000000000c836         db  0x10 ; '.'
000000000000c837         db  0x42 ; 'B'
000000000000c838         db  0x0e ; '.'
000000000000c839         db  0x08 ; '.'
000000000000c83a         db  0x45 ; 'E'
000000000000c83b         db  0x0b ; '.'
000000000000c83c         db  0x55 ; 'U'
000000000000c83d         db  0x0a ; '.'
000000000000c83e         db  0x0e ; '.'
000000000000c83f         db  0x18 ; '.'
000000000000c840         db  0x41 ; 'A'
000000000000c841         db  0x0e ; '.'
000000000000c842         db  0x10 ; '.'
000000000000c843         db  0x42 ; 'B'
000000000000c844         db  0x0e ; '.'
000000000000c845         db  0x08 ; '.'
000000000000c846         db  0x48 ; 'H'
000000000000c847         db  0x0b ; '.'
000000000000c848         db  0x41 ; 'A'
000000000000c849         db  0x0a ; '.'
000000000000c84a         db  0x0e ; '.'
000000000000c84b         db  0x18 ; '.'
000000000000c84c         db  0x46 ; 'F'
000000000000c84d         db  0x0e ; '.'
000000000000c84e         db  0x10 ; '.'
000000000000c84f         db  0x42 ; 'B'
000000000000c850         db  0x0e ; '.'
000000000000c851         db  0x08 ; '.'
000000000000c852         db  0x47 ; 'G'
000000000000c853         db  0x0b ; '.'
000000000000c854         db  0x49 ; 'I'
000000000000c855         db  0x0e ; '.'
000000000000c856         db  0x18 ; '.'
000000000000c857         db  0x41 ; 'A'
000000000000c858         db  0x0e ; '.'
000000000000c859         db  0x10 ; '.'
000000000000c85a         db  0x42 ; 'B'
000000000000c85b         db  0x0e ; '.'
000000000000c85c         db  0x08 ; '.'
000000000000c85d         db  0x00 ; '.'
000000000000c85e         db  0x00 ; '.'
000000000000c85f         db  0x00 ; '.'
000000000000c860         dd         0x0000002c                                  ; Length of the record
000000000000c864         dd         0x000012a4                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c868         db         0x18, 0xcb, 2 dup (0xff)                    ; begin 0x9380
000000000000c86c         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x9413)
000000000000c870         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c871         db  0x42 ; 'B'
000000000000c872         db  0x0e ; '.'
000000000000c873         db  0x10 ; '.'
000000000000c874         db  0x8c ; '.'
000000000000c875         db  0x02 ; '.'
000000000000c876         db  0x41 ; 'A'
000000000000c877         db  0x0e ; '.'
000000000000c878         db  0x18 ; '.'
000000000000c879         db  0x86 ; '.'
000000000000c87a         db  0x03 ; '.'
000000000000c87b         db  0x44 ; 'D'
000000000000c87c         db  0x0e ; '.'
000000000000c87d         db  0x20 ; ' '
000000000000c87e         db  0x83 ; '.'
000000000000c87f         db  0x04 ; '.'
000000000000c880         db  0x5e ; '^'
000000000000c881         db  0x0a ; '.'
000000000000c882         db  0x0e ; '.'
000000000000c883         db  0x18 ; '.'
000000000000c884         db  0x41 ; 'A'
000000000000c885         db  0x0e ; '.'
000000000000c886         db  0x10 ; '.'
000000000000c887         db  0x42 ; 'B'
000000000000c888         db  0x0e ; '.'
000000000000c889         db  0x08 ; '.'
000000000000c88a         db  0x48 ; 'H'
000000000000c88b         db  0x0b ; '.'
000000000000c88c         db  0x00 ; '.'
000000000000c88d         db  0x00 ; '.'
000000000000c88e         db  0x00 ; '.'
000000000000c88f         db  0x00 ; '.'
000000000000c890         dd         0x0000001c                                  ; Length of the record
000000000000c894         dd         0x000012d4                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c898         db         0x88, 0xcb, 2 dup (0xff)                    ; begin 0x9420
000000000000c89c         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x9480)
000000000000c8a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c8a1         db  0x44 ; 'D'
000000000000c8a2         db  0x0e ; '.'
000000000000c8a3         db  0x10 ; '.'
000000000000c8a4         db  0x75 ; 'u'
000000000000c8a5         db  0x0a ; '.'
000000000000c8a6         db  0x0e ; '.'
000000000000c8a7         db  0x08 ; '.'
000000000000c8a8         db  0x47 ; 'G'
000000000000c8a9         db  0x0b ; '.'
000000000000c8aa         db  0x5f ; '_'
000000000000c8ab         db  0x0e ; '.'
000000000000c8ac         db  0x08 ; '.'
000000000000c8ad         db  0x00 ; '.'
000000000000c8ae         db  0x00 ; '.'
000000000000c8af         db  0x00 ; '.'
000000000000c8b0         dd         0x0000001c                                  ; Length of the record
000000000000c8b4         dd         0x000012f4                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c8b8         db         0xc8, 0xcb, 2 dup (0xff)                    ; begin 0x9480
000000000000c8bc         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x94bc)
000000000000c8c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c8c1         db  0x44 ; 'D'
000000000000c8c2         db  0x0e ; '.'
000000000000c8c3         db  0x10 ; '.'
000000000000c8c4         db  0x61 ; 'a'
000000000000c8c5         db  0x0a ; '.'
000000000000c8c6         db  0x0e ; '.'
000000000000c8c7         db  0x08 ; '.'
000000000000c8c8         db  0x4b ; 'K'
000000000000c8c9         db  0x0b ; '.'
000000000000c8ca         db  0x4b ; 'K'
000000000000c8cb         db  0x0e ; '.'
000000000000c8cc         db  0x08 ; '.'
000000000000c8cd         db  0x00 ; '.'
000000000000c8ce         db  0x00 ; '.'
000000000000c8cf         db  0x00 ; '.'
000000000000c8d0         dd         0x00000014                                  ; Length of the record
000000000000c8d4         dd         0x00001314                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c8d8         db         0xe8, 0xcb, 2 dup (0xff)                    ; begin 0x94c0
000000000000c8dc         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x94ce)
000000000000c8e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c8e1         align      8
000000000000c8e8         dd         0x00000044                                  ; Length of the record
000000000000c8ec         dd         0x0000132c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c8f0         db         0xe0, 0xcb, 2 dup (0xff)                    ; begin 0x94d0
000000000000c8f4         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x9535)
000000000000c8f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c8f9         db  0x42 ; 'B'
000000000000c8fa         db  0x0e ; '.'
000000000000c8fb         db  0x10 ; '.'
000000000000c8fc         db  0x8f ; '.'
000000000000c8fd         db  0x02 ; '.'
000000000000c8fe         db  0x42 ; 'B'
000000000000c8ff         db  0x0e ; '.'
000000000000c900         db  0x18 ; '.'
000000000000c901         db  0x8e ; '.'
000000000000c902         db  0x03 ; '.'
000000000000c903         db  0x45 ; 'E'
000000000000c904         db  0x0e ; '.'
000000000000c905         db  0x20 ; ' '
000000000000c906         db  0x8d ; '.'
000000000000c907         db  0x04 ; '.'
000000000000c908         db  0x42 ; 'B'
000000000000c909         db  0x0e ; '.'
000000000000c90a         db  0x28 ; '('
000000000000c90b         db  0x8c ; '.'
000000000000c90c         db  0x05 ; '.'
000000000000c90d         db  0x48 ; 'H'
000000000000c90e         db  0x0e ; '.'
000000000000c90f         db  0x30 ; '0'
000000000000c910         db  0x86 ; '.'
000000000000c911         db  0x06 ; '.'
000000000000c912         db  0x48 ; 'H'
000000000000c913         db  0x0e ; '.'
000000000000c914         db  0x38 ; '8'
000000000000c915         db  0x83 ; '.'
000000000000c916         db  0x07 ; '.'
000000000000c917         db  0x4d ; 'M'
000000000000c918         db  0x0e ; '.'
000000000000c919         db  0x40 ; '@'
000000000000c91a         db  0x72 ; 'r'
000000000000c91b         db  0x0e ; '.'
000000000000c91c         db  0x38 ; '8'
000000000000c91d         db  0x41 ; 'A'
000000000000c91e         db  0x0e ; '.'
000000000000c91f         db  0x30 ; '0'
000000000000c920         db  0x41 ; 'A'
000000000000c921         db  0x0e ; '.'
000000000000c922         db  0x28 ; '('
000000000000c923         db  0x42 ; 'B'
000000000000c924         db  0x0e ; '.'
000000000000c925         db  0x20 ; ' '
000000000000c926         db  0x42 ; 'B'
000000000000c927         db  0x0e ; '.'
000000000000c928         db  0x18 ; '.'
000000000000c929         db  0x42 ; 'B'
000000000000c92a         db  0x0e ; '.'
000000000000c92b         db  0x10 ; '.'
000000000000c92c         db  0x42 ; 'B'
000000000000c92d         db  0x0e ; '.'
000000000000c92e         db  0x08 ; '.'
000000000000c92f         db  0x00 ; '.'
000000000000c930         dd         0x00000014                                  ; Length of the record
000000000000c934         dd         0x00001374                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c938         db         0x08, 0xcc, 2 dup (0xff)                    ; begin 0x9540
000000000000c93c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x9542)
000000000000c940         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c941         align      8
000000000000c948         dd         0x00000010                                  ; Length of the record
000000000000c94c         dd         0x0000138c                                  ; FDE: parent CIE at 0xb5c0 (FDE encoding = 0x1B)
000000000000c950         db         0x00, 0xcc, 2 dup (0xff)                    ; begin 0x9550
000000000000c954         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x955e)
000000000000c958         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000c959         align      32


        ; Segment Segment 3
        ; Range: [0x20d950; 0x20e260[ (2320 bytes)
        ; File offset : [55632; 57504[ (1872 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x20d950; 0x20d958[ (8 bytes)
        ; File offset : [55632; 55640[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
000000000020d950         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x20d958; 0x20d960[ (8 bytes)
        ; File offset : [55640; 55648[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
000000000020d958         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x20d960; 0x20db58[ (504 bytes)
        ; File offset : [55648; 56152[ (504 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     long_opts:
000000000020d960         db  0x29 ; ')'                                         ; DATA XREF=main+8
000000000020d961         db  0x98 ; '.'
000000000020d962         db  0x00 ; '.'
000000000020d963         db  0x00 ; '.'
000000000020d964         db  0x00 ; '.'
000000000020d965         db  0x00 ; '.'
000000000020d966         db  0x00 ; '.'
000000000020d967         db  0x00 ; '.'
000000000020d968         db  0x00 ; '.'
000000000020d969         db  0x00 ; '.'
000000000020d96a         db  0x00 ; '.'
000000000020d96b         db  0x00 ; '.'
000000000020d96c         db  0x00 ; '.'
000000000020d96d         db  0x00 ; '.'
000000000020d96e         db  0x00 ; '.'
000000000020d96f         db  0x00 ; '.'
000000000020d970         db  0x00 ; '.'
000000000020d971         db  0x00 ; '.'
000000000020d972         db  0x00 ; '.'
000000000020d973         db  0x00 ; '.'
000000000020d974         db  0x00 ; '.'
000000000020d975         db  0x00 ; '.'
000000000020d976         db  0x00 ; '.'
000000000020d977         db  0x00 ; '.'
000000000020d978         db  0x78 ; 'x'
000000000020d979         db  0x00 ; '.'
000000000020d97a         db  0x00 ; '.'
000000000020d97b         db  0x00 ; '.'
000000000020d97c         db  0x00 ; '.'
000000000020d97d         db  0x00 ; '.'
000000000020d97e         db  0x00 ; '.'
000000000020d97f         db  0x00 ; '.'
000000000020d980         db  0x2f ; '/'
000000000020d981         db  0x98 ; '.'
000000000020d982         db  0x00 ; '.'
000000000020d983         db  0x00 ; '.'
000000000020d984         db  0x00 ; '.'
000000000020d985         db  0x00 ; '.'
000000000020d986         db  0x00 ; '.'
000000000020d987         db  0x00 ; '.'
000000000020d988         db  0x00 ; '.'
000000000020d989         db  0x00 ; '.'
000000000020d98a         db  0x00 ; '.'
000000000020d98b         db  0x00 ; '.'
000000000020d98c         db  0x00 ; '.'
000000000020d98d         db  0x00 ; '.'
000000000020d98e         db  0x00 ; '.'
000000000020d98f         db  0x00 ; '.'
000000000020d990         db  0x00 ; '.'
000000000020d991         db  0x00 ; '.'
000000000020d992         db  0x00 ; '.'
000000000020d993         db  0x00 ; '.'
000000000020d994         db  0x00 ; '.'
000000000020d995         db  0x00 ; '.'
000000000020d996         db  0x00 ; '.'
000000000020d997         db  0x00 ; '.'
000000000020d998         db  0x66 ; 'f'
000000000020d999         db  0x00 ; '.'
000000000020d99a         db  0x00 ; '.'
000000000020d99b         db  0x00 ; '.'
000000000020d99c         db  0x00 ; '.'
000000000020d99d         db  0x00 ; '.'
000000000020d99e         db  0x00 ; '.'
000000000020d99f         db  0x00 ; '.'
000000000020d9a0         db  0x35 ; '5'
000000000020d9a1         db  0x98 ; '.'
000000000020d9a2         db  0x00 ; '.'
000000000020d9a3         db  0x00 ; '.'
000000000020d9a4         db  0x00 ; '.'
000000000020d9a5         db  0x00 ; '.'
000000000020d9a6         db  0x00 ; '.'
000000000020d9a7         db  0x00 ; '.'
000000000020d9a8         db  0x01 ; '.'
000000000020d9a9         db  0x00 ; '.'
000000000020d9aa         db  0x00 ; '.'
000000000020d9ab         db  0x00 ; '.'
000000000020d9ac         db  0x00 ; '.'
000000000020d9ad         db  0x00 ; '.'
000000000020d9ae         db  0x00 ; '.'
000000000020d9af         db  0x00 ; '.'
000000000020d9b0         db  0x00 ; '.'
000000000020d9b1         db  0x00 ; '.'
000000000020d9b2         db  0x00 ; '.'
000000000020d9b3         db  0x00 ; '.'
000000000020d9b4         db  0x00 ; '.'
000000000020d9b5         db  0x00 ; '.'
000000000020d9b6         db  0x00 ; '.'
000000000020d9b7         db  0x00 ; '.'
000000000020d9b8         db  0x6e ; 'n'
000000000020d9b9         db  0x00 ; '.'
000000000020d9ba         db  0x00 ; '.'
000000000020d9bb         db  0x00 ; '.'
000000000020d9bc         db  0x00 ; '.'
000000000020d9bd         db  0x00 ; '.'
000000000020d9be         db  0x00 ; '.'
000000000020d9bf         db  0x00 ; '.'
000000000020d9c0         db  0x68 ; 'h'
000000000020d9c1         db  0x97 ; '.'
000000000020d9c2         db  0x00 ; '.'
000000000020d9c3         db  0x00 ; '.'
000000000020d9c4         db  0x00 ; '.'
000000000020d9c5         db  0x00 ; '.'
000000000020d9c6         db  0x00 ; '.'
000000000020d9c7         db  0x00 ; '.'
000000000020d9c8         db  0x01 ; '.'
000000000020d9c9         db  0x00 ; '.'
000000000020d9ca         db  0x00 ; '.'
000000000020d9cb         db  0x00 ; '.'
000000000020d9cc         db  0x00 ; '.'
000000000020d9cd         db  0x00 ; '.'
000000000020d9ce         db  0x00 ; '.'
000000000020d9cf         db  0x00 ; '.'
000000000020d9d0         db  0x00 ; '.'
000000000020d9d1         db  0x00 ; '.'
000000000020d9d2         db  0x00 ; '.'
000000000020d9d3         db  0x00 ; '.'
000000000020d9d4         db  0x00 ; '.'
000000000020d9d5         db  0x00 ; '.'
000000000020d9d6         db  0x00 ; '.'
000000000020d9d7         db  0x00 ; '.'
000000000020d9d8         db  0x73 ; 's'
000000000020d9d9         db  0x00 ; '.'
000000000020d9da         db  0x00 ; '.'
000000000020d9db         db  0x00 ; '.'
000000000020d9dc         db  0x00 ; '.'
000000000020d9dd         db  0x00 ; '.'
000000000020d9de         db  0x00 ; '.'
000000000020d9df         db  0x00 ; '.'
000000000020d9e0         db  0x40 ; '@'
000000000020d9e1         db  0x98 ; '.'
000000000020d9e2         db  0x00 ; '.'
000000000020d9e3         db  0x00 ; '.'
000000000020d9e4         db  0x00 ; '.'
000000000020d9e5         db  0x00 ; '.'
000000000020d9e6         db  0x00 ; '.'
000000000020d9e7         db  0x00 ; '.'
000000000020d9e8         db  0x01 ; '.'
000000000020d9e9         db  0x00 ; '.'
000000000020d9ea         db  0x00 ; '.'
000000000020d9eb         db  0x00 ; '.'
000000000020d9ec         db  0x00 ; '.'
000000000020d9ed         db  0x00 ; '.'
000000000020d9ee         db  0x00 ; '.'
000000000020d9ef         db  0x00 ; '.'
000000000020d9f0         db  0x00 ; '.'
000000000020d9f1         db  0x00 ; '.'
000000000020d9f2         db  0x00 ; '.'
000000000020d9f3         db  0x00 ; '.'
000000000020d9f4         db  0x00 ; '.'
000000000020d9f5         db  0x00 ; '.'
000000000020d9f6         db  0x00 ; '.'
000000000020d9f7         db  0x00 ; '.'
000000000020d9f8         db  0x80 ; '.'
000000000020d9f9         db  0x00 ; '.'
000000000020d9fa         db  0x00 ; '.'
000000000020d9fb         db  0x00 ; '.'
000000000020d9fc         db  0x00 ; '.'
000000000020d9fd         db  0x00 ; '.'
000000000020d9fe         db  0x00 ; '.'
000000000020d9ff         db  0x00 ; '.'
000000000020da00         db  0x16 ; '.'
000000000020da01         db  0x98 ; '.'
000000000020da02         db  0x00 ; '.'
000000000020da03         db  0x00 ; '.'
000000000020da04         db  0x00 ; '.'
000000000020da05         db  0x00 ; '.'
000000000020da06         db  0x00 ; '.'
000000000020da07         db  0x00 ; '.'
000000000020da08         db  0x02 ; '.'
000000000020da09         db  0x00 ; '.'
000000000020da0a         db  0x00 ; '.'
000000000020da0b         db  0x00 ; '.'
000000000020da0c         db  0x00 ; '.'
000000000020da0d         db  0x00 ; '.'
000000000020da0e         db  0x00 ; '.'
000000000020da0f         db  0x00 ; '.'
000000000020da10         db  0x00 ; '.'
000000000020da11         db  0x00 ; '.'
000000000020da12         db  0x00 ; '.'
000000000020da13         db  0x00 ; '.'
000000000020da14         db  0x00 ; '.'
000000000020da15         db  0x00 ; '.'
000000000020da16         db  0x00 ; '.'
000000000020da17         db  0x00 ; '.'
000000000020da18         db  0x75 ; 'u'
000000000020da19         db  0x00 ; '.'
000000000020da1a         db  0x00 ; '.'
000000000020da1b         db  0x00 ; '.'
000000000020da1c         db  0x00 ; '.'
000000000020da1d         db  0x00 ; '.'
000000000020da1e         db  0x00 ; '.'
000000000020da1f         db  0x00 ; '.'
000000000020da20         db  0x4e ; 'N'
000000000020da21         db  0x98 ; '.'
000000000020da22         db  0x00 ; '.'
000000000020da23         db  0x00 ; '.'
000000000020da24         db  0x00 ; '.'
000000000020da25         db  0x00 ; '.'
000000000020da26         db  0x00 ; '.'
000000000020da27         db  0x00 ; '.'
000000000020da28         db  0x00 ; '.'
000000000020da29         db  0x00 ; '.'
000000000020da2a         db  0x00 ; '.'
000000000020da2b         db  0x00 ; '.'
000000000020da2c         db  0x00 ; '.'
000000000020da2d         db  0x00 ; '.'
000000000020da2e         db  0x00 ; '.'
000000000020da2f         db  0x00 ; '.'
000000000020da30         db  0x00 ; '.'
000000000020da31         db  0x00 ; '.'
000000000020da32         db  0x00 ; '.'
000000000020da33         db  0x00 ; '.'
000000000020da34         db  0x00 ; '.'
000000000020da35         db  0x00 ; '.'
000000000020da36         db  0x00 ; '.'
000000000020da37         db  0x00 ; '.'
000000000020da38         db  0x76 ; 'v'
000000000020da39         db  0x00 ; '.'
000000000020da3a         db  0x00 ; '.'
000000000020da3b         db  0x00 ; '.'
000000000020da3c         db  0x00 ; '.'
000000000020da3d         db  0x00 ; '.'
000000000020da3e         db  0x00 ; '.'
000000000020da3f         db  0x00 ; '.'
000000000020da40         db  0x56 ; 'V'
000000000020da41         db  0x98 ; '.'
000000000020da42         db  0x00 ; '.'
000000000020da43         db  0x00 ; '.'
000000000020da44         db  0x00 ; '.'
000000000020da45         db  0x00 ; '.'
000000000020da46         db  0x00 ; '.'
000000000020da47         db  0x00 ; '.'
000000000020da48         db  0x00 ; '.'
000000000020da49         db  0x00 ; '.'
000000000020da4a         db  0x00 ; '.'
000000000020da4b         db  0x00 ; '.'
000000000020da4c         db  0x00 ; '.'
000000000020da4d         db  0x00 ; '.'
000000000020da4e         db  0x00 ; '.'
000000000020da4f         db  0x00 ; '.'
000000000020da50         db  0x00 ; '.'
000000000020da51         db  0x00 ; '.'
000000000020da52         db  0x00 ; '.'
000000000020da53         db  0x00 ; '.'
000000000020da54         db  0x00 ; '.'
000000000020da55         db  0x00 ; '.'
000000000020da56         db  0x00 ; '.'
000000000020da57         db  0x00 ; '.'
000000000020da58         db  0x7a ; 'z'
000000000020da59         db  0x00 ; '.'
000000000020da5a         db  0x00 ; '.'
000000000020da5b         db  0x00 ; '.'
000000000020da5c         db  0x00 ; '.'
000000000020da5d         db  0x00 ; '.'
000000000020da5e         db  0x00 ; '.'
000000000020da5f         db  0x00 ; '.'
000000000020da60         db  0x5b ; '['
000000000020da61         db  0x98 ; '.'
000000000020da62         db  0x00 ; '.'
000000000020da63         db  0x00 ; '.'
000000000020da64         db  0x00 ; '.'
000000000020da65         db  0x00 ; '.'
000000000020da66         db  0x00 ; '.'
000000000020da67         db  0x00 ; '.'
000000000020da68         db  0x00 ; '.'
000000000020da69         db  0x00 ; '.'
000000000020da6a         db  0x00 ; '.'
000000000020da6b         db  0x00 ; '.'
000000000020da6c         db  0x00 ; '.'
000000000020da6d         db  0x00 ; '.'
000000000020da6e         db  0x00 ; '.'
000000000020da6f         db  0x00 ; '.'
000000000020da70         db  0x00 ; '.'
000000000020da71         db  0x00 ; '.'
000000000020da72         db  0x00 ; '.'
000000000020da73         db  0x00 ; '.'
000000000020da74         db  0x00 ; '.'
000000000020da75         db  0x00 ; '.'
000000000020da76         db  0x00 ; '.'
000000000020da77         db  0x00 ; '.'
000000000020da78         db  0x7e ; '~'
000000000020da79         db  0xff ; '.'
000000000020da7a         db  0xff ; '.'
000000000020da7b         db  0xff ; '.'
000000000020da7c         db  0x00 ; '.'
000000000020da7d         db  0x00 ; '.'
000000000020da7e         db  0x00 ; '.'
000000000020da7f         db  0x00 ; '.'
000000000020da80         db  0x60 ; '`'
000000000020da81         db  0x98 ; '.'
000000000020da82         db  0x00 ; '.'
000000000020da83         db  0x00 ; '.'
000000000020da84         db  0x00 ; '.'
000000000020da85         db  0x00 ; '.'
000000000020da86         db  0x00 ; '.'
000000000020da87         db  0x00 ; '.'
000000000020da88         db  0x00 ; '.'
000000000020da89         db  0x00 ; '.'
000000000020da8a         db  0x00 ; '.'
000000000020da8b         db  0x00 ; '.'
000000000020da8c         db  0x00 ; '.'
000000000020da8d         db  0x00 ; '.'
000000000020da8e         db  0x00 ; '.'
000000000020da8f         db  0x00 ; '.'
000000000020da90         db  0x00 ; '.'
000000000020da91         db  0x00 ; '.'
000000000020da92         db  0x00 ; '.'
000000000020da93         db  0x00 ; '.'
000000000020da94         db  0x00 ; '.'
000000000020da95         db  0x00 ; '.'
000000000020da96         db  0x00 ; '.'
000000000020da97         db  0x00 ; '.'
000000000020da98         db  0x7d ; '}'
000000000020da99         db  0xff ; '.'
000000000020da9a         db  0xff ; '.'
000000000020da9b         db  0xff ; '.'
000000000020da9c         db  0x00 ; '.'
000000000020da9d         db  0x00 ; '.'
000000000020da9e         db  0x00 ; '.'
000000000020da9f         db  0x00 ; '.'
000000000020daa0         db  0x00 ; '.'
000000000020daa1         db  0x00 ; '.'
000000000020daa2         db  0x00 ; '.'
000000000020daa3         db  0x00 ; '.'
000000000020daa4         db  0x00 ; '.'
000000000020daa5         db  0x00 ; '.'
000000000020daa6         db  0x00 ; '.'
000000000020daa7         db  0x00 ; '.'
000000000020daa8         db  0x00 ; '.'
000000000020daa9         db  0x00 ; '.'
000000000020daaa         db  0x00 ; '.'
000000000020daab         db  0x00 ; '.'
000000000020daac         db  0x00 ; '.'
000000000020daad         db  0x00 ; '.'
000000000020daae         db  0x00 ; '.'
000000000020daaf         db  0x00 ; '.'
000000000020dab0         db  0x00 ; '.'
000000000020dab1         db  0x00 ; '.'
000000000020dab2         db  0x00 ; '.'
000000000020dab3         db  0x00 ; '.'
000000000020dab4         db  0x00 ; '.'
000000000020dab5         db  0x00 ; '.'
000000000020dab6         db  0x00 ; '.'
000000000020dab7         db  0x00 ; '.'
000000000020dab8         db  0x00 ; '.'
000000000020dab9         db  0x00 ; '.'
000000000020daba         db  0x00 ; '.'
000000000020dabb         db  0x00 ; '.'
000000000020dabc         db  0x00 ; '.'
000000000020dabd         db  0x00 ; '.'
000000000020dabe         db  0x00 ; '.'
000000000020dabf         db  0x00 ; '.'
                     remove_args:
000000000020dac0         db  0x68 ; 'h'                                         ; DATA XREF=main+535
000000000020dac1         db  0x98 ; '.'
000000000020dac2         db  0x00 ; '.'
000000000020dac3         db  0x00 ; '.'
000000000020dac4         db  0x00 ; '.'
000000000020dac5         db  0x00 ; '.'
000000000020dac6         db  0x00 ; '.'
000000000020dac7         db  0x00 ; '.'
000000000020dac8         db  0x6f ; 'o'
000000000020dac9         db  0x98 ; '.'
000000000020daca         db  0x00 ; '.'
000000000020dacb         db  0x00 ; '.'
000000000020dacc         db  0x00 ; '.'
000000000020dacd         db  0x00 ; '.'
000000000020dace         db  0x00 ; '.'
000000000020dacf         db  0x00 ; '.'
000000000020dad0         db  0x74 ; 't'
000000000020dad1         db  0x98 ; '.'
000000000020dad2         db  0x00 ; '.'
000000000020dad3         db  0x00 ; '.'
000000000020dad4         db  0x00 ; '.'
000000000020dad5         db  0x00 ; '.'
000000000020dad6         db  0x00 ; '.'
000000000020dad7         db  0x00 ; '.'
000000000020dad8         db  0x00 ; '.'
000000000020dad9         db  0x00 ; '.'
000000000020dada         db  0x00 ; '.'
000000000020dadb         db  0x00 ; '.'
000000000020dadc         db  0x00 ; '.'
000000000020dadd         db  0x00 ; '.'
000000000020dade         db  0x00 ; '.'
000000000020dadf         db  0x00 ; '.'
                     block_size_args:
000000000020dae0         db  0xc1 ; '.'                                         ; DATA XREF=human_options+67
000000000020dae1         db  0xa7 ; '.'
000000000020dae2         db  0x00 ; '.'
000000000020dae3         db  0x00 ; '.'
000000000020dae4         db  0x00 ; '.'
000000000020dae5         db  0x00 ; '.'
000000000020dae6         db  0x00 ; '.'
000000000020dae7         db  0x00 ; '.'
000000000020dae8         db  0xd0 ; '.'
000000000020dae9         db  0xa7 ; '.'
000000000020daea         db  0x00 ; '.'
000000000020daeb         db  0x00 ; '.'
000000000020daec         db  0x00 ; '.'
000000000020daed         db  0x00 ; '.'
000000000020daee         db  0x00 ; '.'
000000000020daef         db  0x00 ; '.'
000000000020daf0         db  0x00 ; '.'
000000000020daf1         db  0x00 ; '.'
000000000020daf2         db  0x00 ; '.'
000000000020daf3         db  0x00 ; '.'
000000000020daf4         db  0x00 ; '.'
000000000020daf5         db  0x00 ; '.'
000000000020daf6         db  0x00 ; '.'
000000000020daf7         db  0x00 ; '.'
000000000020daf8         db  0x00 ; '.'
000000000020daf9         db  0x00 ; '.'
000000000020dafa         db  0x00 ; '.'
000000000020dafb         db  0x00 ; '.'
000000000020dafc         db  0x00 ; '.'
000000000020dafd         db  0x00 ; '.'
000000000020dafe         db  0x00 ; '.'
000000000020daff         db  0x00 ; '.'
                     quoting_style_args:
000000000020db00         db  0x69 ; 'i'
000000000020db01         db  0xa8 ; '.'
000000000020db02         db  0x00 ; '.'
000000000020db03         db  0x00 ; '.'
000000000020db04         db  0x00 ; '.'
000000000020db05         db  0x00 ; '.'
000000000020db06         db  0x00 ; '.'
000000000020db07         db  0x00 ; '.'
000000000020db08         db  0x71 ; 'q'
000000000020db09         db  0xa8 ; '.'
000000000020db0a         db  0x00 ; '.'
000000000020db0b         db  0x00 ; '.'
000000000020db0c         db  0x00 ; '.'
000000000020db0d         db  0x00 ; '.'
000000000020db0e         db  0x00 ; '.'
000000000020db0f         db  0x00 ; '.'
000000000020db10         db  0x77 ; 'w'
000000000020db11         db  0xa8 ; '.'
000000000020db12         db  0x00 ; '.'
000000000020db13         db  0x00 ; '.'
000000000020db14         db  0x00 ; '.'
000000000020db15         db  0x00 ; '.'
000000000020db16         db  0x00 ; '.'
000000000020db17         db  0x00 ; '.'
000000000020db18         db  0x84 ; '.'
000000000020db19         db  0xa8 ; '.'
000000000020db1a         db  0x00 ; '.'
000000000020db1b         db  0x00 ; '.'
000000000020db1c         db  0x00 ; '.'
000000000020db1d         db  0x00 ; '.'
000000000020db1e         db  0x00 ; '.'
000000000020db1f         db  0x00 ; '.'
000000000020db20         db  0x91 ; '.'
000000000020db21         db  0xa8 ; '.'
000000000020db22         db  0x00 ; '.'
000000000020db23         db  0x00 ; '.'
000000000020db24         db  0x00 ; '.'
000000000020db25         db  0x00 ; '.'
000000000020db26         db  0x00 ; '.'
000000000020db27         db  0x00 ; '.'
000000000020db28         db  0xf4 ; '.'
000000000020db29         db  0x97 ; '.'
000000000020db2a         db  0x00 ; '.'
000000000020db2b         db  0x00 ; '.'
000000000020db2c         db  0x00 ; '.'
000000000020db2d         db  0x00 ; '.'
000000000020db2e         db  0x00 ; '.'
000000000020db2f         db  0x00 ; '.'
000000000020db30         db  0xa5 ; '.'
000000000020db31         db  0xa8 ; '.'
000000000020db32         db  0x00 ; '.'
000000000020db33         db  0x00 ; '.'
000000000020db34         db  0x00 ; '.'
000000000020db35         db  0x00 ; '.'
000000000020db36         db  0x00 ; '.'
000000000020db37         db  0x00 ; '.'
000000000020db38         db  0x8a ; '.'
000000000020db39         db  0xa8 ; '.'
000000000020db3a         db  0x00 ; '.'
000000000020db3b         db  0x00 ; '.'
000000000020db3c         db  0x00 ; '.'
000000000020db3d         db  0x00 ; '.'
000000000020db3e         db  0x00 ; '.'
000000000020db3f         db  0x00 ; '.'
000000000020db40         db  0x32 ; '2'
000000000020db41         db  0x97 ; '.'
000000000020db42         db  0x00 ; '.'
000000000020db43         db  0x00 ; '.'
000000000020db44         db  0x00 ; '.'
000000000020db45         db  0x00 ; '.'
000000000020db46         db  0x00 ; '.'
000000000020db47         db  0x00 ; '.'
000000000020db48         db  0xad ; '.'
000000000020db49         db  0xa8 ; '.'
000000000020db4a         db  0x00 ; '.'
000000000020db4b         db  0x00 ; '.'
000000000020db4c         db  0x00 ; '.'
000000000020db4d         db  0x00 ; '.'
000000000020db4e         db  0x00 ; '.'
000000000020db4f         db  0x00 ; '.'
000000000020db50         db  0x00 ; '.'
000000000020db51         db  0x00 ; '.'
000000000020db52         db  0x00 ; '.'
000000000020db53         db  0x00 ; '.'
000000000020db54         db  0x00 ; '.'
000000000020db55         db  0x00 ; '.'
000000000020db56         db  0x00 ; '.'
000000000020db57         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x20db58; 0x20dd48[ (496 bytes)
        ; File offset : [56152; 56648[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
000000000020db58         db  0x01 ; '.'
000000000020db59         db  0x00 ; '.'
000000000020db5a         db  0x00 ; '.'
000000000020db5b         db  0x00 ; '.'
000000000020db5c         db  0x00 ; '.'
000000000020db5d         db  0x00 ; '.'
000000000020db5e         db  0x00 ; '.'
000000000020db5f         db  0x00 ; '.'
000000000020db60         db  0x01 ; '.'
000000000020db61         db  0x00 ; '.'
000000000020db62         db  0x00 ; '.'
000000000020db63         db  0x00 ; '.'
000000000020db64         db  0x00 ; '.'
000000000020db65         db  0x00 ; '.'
000000000020db66         db  0x00 ; '.'
000000000020db67         db  0x00 ; '.'
000000000020db68         db  0x0c ; '.'
000000000020db69         db  0x00 ; '.'
000000000020db6a         db  0x00 ; '.'
000000000020db6b         db  0x00 ; '.'
000000000020db6c         db  0x00 ; '.'
000000000020db6d         db  0x00 ; '.'
000000000020db6e         db  0x00 ; '.'
000000000020db6f         db  0x00 ; '.'
000000000020db70         db  0x18 ; '.'
000000000020db71         db  0x1c ; '.'
000000000020db72         db  0x00 ; '.'
000000000020db73         db  0x00 ; '.'
000000000020db74         db  0x00 ; '.'
000000000020db75         db  0x00 ; '.'
000000000020db76         db  0x00 ; '.'
000000000020db77         db  0x00 ; '.'
000000000020db78         db  0x0d ; '.'
000000000020db79         db  0x00 ; '.'
000000000020db7a         db  0x00 ; '.'
000000000020db7b         db  0x00 ; '.'
000000000020db7c         db  0x00 ; '.'
000000000020db7d         db  0x00 ; '.'
000000000020db7e         db  0x00 ; '.'
000000000020db7f         db  0x00 ; '.'
000000000020db80         db  0x60 ; '`'
000000000020db81         db  0x95 ; '.'
000000000020db82         db  0x00 ; '.'
000000000020db83         db  0x00 ; '.'
000000000020db84         db  0x00 ; '.'
000000000020db85         db  0x00 ; '.'
000000000020db86         db  0x00 ; '.'
000000000020db87         db  0x00 ; '.'
000000000020db88         db  0x19 ; '.'
000000000020db89         db  0x00 ; '.'
000000000020db8a         db  0x00 ; '.'
000000000020db8b         db  0x00 ; '.'
000000000020db8c         db  0x00 ; '.'
000000000020db8d         db  0x00 ; '.'
000000000020db8e         db  0x00 ; '.'
000000000020db8f         db  0x00 ; '.'
000000000020db90         db  0x50 ; 'P'
000000000020db91         db  0xd9 ; '.'
000000000020db92         db  0x20 ; ' '
000000000020db93         db  0x00 ; '.'
000000000020db94         db  0x00 ; '.'
000000000020db95         db  0x00 ; '.'
000000000020db96         db  0x00 ; '.'
000000000020db97         db  0x00 ; '.'
000000000020db98         db  0x1b ; '.'
000000000020db99         db  0x00 ; '.'
000000000020db9a         db  0x00 ; '.'
000000000020db9b         db  0x00 ; '.'
000000000020db9c         db  0x00 ; '.'
000000000020db9d         db  0x00 ; '.'
000000000020db9e         db  0x00 ; '.'
000000000020db9f         db  0x00 ; '.'
000000000020dba0         db  0x08 ; '.'
000000000020dba1         db  0x00 ; '.'
000000000020dba2         db  0x00 ; '.'
000000000020dba3         db  0x00 ; '.'
000000000020dba4         db  0x00 ; '.'
000000000020dba5         db  0x00 ; '.'
000000000020dba6         db  0x00 ; '.'
000000000020dba7         db  0x00 ; '.'
000000000020dba8         db  0x1a ; '.'
000000000020dba9         db  0x00 ; '.'
000000000020dbaa         db  0x00 ; '.'
000000000020dbab         db  0x00 ; '.'
000000000020dbac         db  0x00 ; '.'
000000000020dbad         db  0x00 ; '.'
000000000020dbae         db  0x00 ; '.'
000000000020dbaf         db  0x00 ; '.'
000000000020dbb0         db  0x58 ; 'X'
000000000020dbb1         db  0xd9 ; '.'
000000000020dbb2         db  0x20 ; ' '
000000000020dbb3         db  0x00 ; '.'
000000000020dbb4         db  0x00 ; '.'
000000000020dbb5         db  0x00 ; '.'
000000000020dbb6         db  0x00 ; '.'
000000000020dbb7         db  0x00 ; '.'
000000000020dbb8         db  0x1c ; '.'
000000000020dbb9         db  0x00 ; '.'
000000000020dbba         db  0x00 ; '.'
000000000020dbbb         db  0x00 ; '.'
000000000020dbbc         db  0x00 ; '.'
000000000020dbbd         db  0x00 ; '.'
000000000020dbbe         db  0x00 ; '.'
000000000020dbbf         db  0x00 ; '.'
000000000020dbc0         db  0x08 ; '.'
000000000020dbc1         db  0x00 ; '.'
000000000020dbc2         db  0x00 ; '.'
000000000020dbc3         db  0x00 ; '.'
000000000020dbc4         db  0x00 ; '.'
000000000020dbc5         db  0x00 ; '.'
000000000020dbc6         db  0x00 ; '.'
000000000020dbc7         db  0x00 ; '.'
000000000020dbc8         db  0xf5 ; '.'
000000000020dbc9         db  0xfe ; '.'
000000000020dbca         db  0xff ; '.'
000000000020dbcb         db  0x6f ; 'o'
000000000020dbcc         db  0x00 ; '.'
000000000020dbcd         db  0x00 ; '.'
000000000020dbce         db  0x00 ; '.'
000000000020dbcf         db  0x00 ; '.'
000000000020dbd0         db  0x98 ; '.'
000000000020dbd1         db  0x02 ; '.'
000000000020dbd2         db  0x00 ; '.'
000000000020dbd3         db  0x00 ; '.'
000000000020dbd4         db  0x00 ; '.'
000000000020dbd5         db  0x00 ; '.'
000000000020dbd6         db  0x00 ; '.'
000000000020dbd7         db  0x00 ; '.'
000000000020dbd8         db  0x05 ; '.'
000000000020dbd9         db  0x00 ; '.'
000000000020dbda         db  0x00 ; '.'
000000000020dbdb         db  0x00 ; '.'
000000000020dbdc         db  0x00 ; '.'
000000000020dbdd         db  0x00 ; '.'
000000000020dbde         db  0x00 ; '.'
000000000020dbdf         db  0x00 ; '.'
000000000020dbe0         db  0x98 ; '.'
000000000020dbe1         db  0x0b ; '.'
000000000020dbe2         db  0x00 ; '.'
000000000020dbe3         db  0x00 ; '.'
000000000020dbe4         db  0x00 ; '.'
000000000020dbe5         db  0x00 ; '.'
000000000020dbe6         db  0x00 ; '.'
000000000020dbe7         db  0x00 ; '.'
000000000020dbe8         db  0x06 ; '.'
000000000020dbe9         db  0x00 ; '.'
000000000020dbea         db  0x00 ; '.'
000000000020dbeb         db  0x00 ; '.'
000000000020dbec         db  0x00 ; '.'
000000000020dbed         db  0x00 ; '.'
000000000020dbee         db  0x00 ; '.'
000000000020dbef         db  0x00 ; '.'
000000000020dbf0         db  0xe0 ; '.'
000000000020dbf1         db  0x02 ; '.'
000000000020dbf2         db  0x00 ; '.'
000000000020dbf3         db  0x00 ; '.'
000000000020dbf4         db  0x00 ; '.'
000000000020dbf5         db  0x00 ; '.'
000000000020dbf6         db  0x00 ; '.'
000000000020dbf7         db  0x00 ; '.'
000000000020dbf8         db  0x0a ; '.'
000000000020dbf9         db  0x00 ; '.'
000000000020dbfa         db  0x00 ; '.'
000000000020dbfb         db  0x00 ; '.'
000000000020dbfc         db  0x00 ; '.'
000000000020dbfd         db  0x00 ; '.'
000000000020dbfe         db  0x00 ; '.'
000000000020dbff         db  0x00 ; '.'
000000000020dc00         db  0xe4 ; '.'
000000000020dc01         db  0x03 ; '.'
000000000020dc02         db  0x00 ; '.'
000000000020dc03         db  0x00 ; '.'
000000000020dc04         db  0x00 ; '.'
000000000020dc05         db  0x00 ; '.'
000000000020dc06         db  0x00 ; '.'
000000000020dc07         db  0x00 ; '.'
000000000020dc08         db  0x0b ; '.'
000000000020dc09         db  0x00 ; '.'
000000000020dc0a         db  0x00 ; '.'
000000000020dc0b         db  0x00 ; '.'
000000000020dc0c         db  0x00 ; '.'
000000000020dc0d         db  0x00 ; '.'
000000000020dc0e         db  0x00 ; '.'
000000000020dc0f         db  0x00 ; '.'
000000000020dc10         db  0x18 ; '.'
000000000020dc11         db  0x00 ; '.'
000000000020dc12         db  0x00 ; '.'
000000000020dc13         db  0x00 ; '.'
000000000020dc14         db  0x00 ; '.'
000000000020dc15         db  0x00 ; '.'
000000000020dc16         db  0x00 ; '.'
000000000020dc17         db  0x00 ; '.'
000000000020dc18         db  0x15 ; '.'
000000000020dc19         db  0x00 ; '.'
000000000020dc1a         db  0x00 ; '.'
000000000020dc1b         db  0x00 ; '.'
000000000020dc1c         db  0x00 ; '.'
000000000020dc1d         db  0x00 ; '.'
000000000020dc1e         db  0x00 ; '.'
000000000020dc1f         db  0x00 ; '.'
000000000020dc20         db  0x00 ; '.'
000000000020dc21         db  0x00 ; '.'
000000000020dc22         db  0x00 ; '.'
000000000020dc23         db  0x00 ; '.'
000000000020dc24         db  0x00 ; '.'
000000000020dc25         db  0x00 ; '.'
000000000020dc26         db  0x00 ; '.'
000000000020dc27         db  0x00 ; '.'
000000000020dc28         db  0x03 ; '.'
000000000020dc29         db  0x00 ; '.'
000000000020dc2a         db  0x00 ; '.'
000000000020dc2b         db  0x00 ; '.'
000000000020dc2c         db  0x00 ; '.'
000000000020dc2d         db  0x00 ; '.'
000000000020dc2e         db  0x00 ; '.'
000000000020dc2f         db  0x00 ; '.'
000000000020dc30         db  0x48 ; 'H'
000000000020dc31         db  0xdd ; '.'
000000000020dc32         db  0x20 ; ' '
000000000020dc33         db  0x00 ; '.'
000000000020dc34         db  0x00 ; '.'
000000000020dc35         db  0x00 ; '.'
000000000020dc36         db  0x00 ; '.'
000000000020dc37         db  0x00 ; '.'
000000000020dc38         db  0x02 ; '.'
000000000020dc39         db  0x00 ; '.'
000000000020dc3a         db  0x00 ; '.'
000000000020dc3b         db  0x00 ; '.'
000000000020dc3c         db  0x00 ; '.'
000000000020dc3d         db  0x00 ; '.'
000000000020dc3e         db  0x00 ; '.'
000000000020dc3f         db  0x00 ; '.'
000000000020dc40         db  0x68 ; 'h'
000000000020dc41         db  0x07 ; '.'
000000000020dc42         db  0x00 ; '.'
000000000020dc43         db  0x00 ; '.'
000000000020dc44         db  0x00 ; '.'
000000000020dc45         db  0x00 ; '.'
000000000020dc46         db  0x00 ; '.'
000000000020dc47         db  0x00 ; '.'
000000000020dc48         db  0x14 ; '.'
000000000020dc49         db  0x00 ; '.'
000000000020dc4a         db  0x00 ; '.'
000000000020dc4b         db  0x00 ; '.'
000000000020dc4c         db  0x00 ; '.'
000000000020dc4d         db  0x00 ; '.'
000000000020dc4e         db  0x00 ; '.'
000000000020dc4f         db  0x00 ; '.'
000000000020dc50         db  0x07 ; '.'
000000000020dc51         db  0x00 ; '.'
000000000020dc52         db  0x00 ; '.'
000000000020dc53         db  0x00 ; '.'
000000000020dc54         db  0x00 ; '.'
000000000020dc55         db  0x00 ; '.'
000000000020dc56         db  0x00 ; '.'
000000000020dc57         db  0x00 ; '.'
000000000020dc58         db  0x17 ; '.'
000000000020dc59         db  0x00 ; '.'
000000000020dc5a         db  0x00 ; '.'
000000000020dc5b         db  0x00 ; '.'
000000000020dc5c         db  0x00 ; '.'
000000000020dc5d         db  0x00 ; '.'
000000000020dc5e         db  0x00 ; '.'
000000000020dc5f         db  0x00 ; '.'
000000000020dc60         db  0xb0 ; '.'
000000000020dc61         db  0x14 ; '.'
000000000020dc62         db  0x00 ; '.'
000000000020dc63         db  0x00 ; '.'
000000000020dc64         db  0x00 ; '.'
000000000020dc65         db  0x00 ; '.'
000000000020dc66         db  0x00 ; '.'
000000000020dc67         db  0x00 ; '.'
000000000020dc68         db  0x07 ; '.'
000000000020dc69         db  0x00 ; '.'
000000000020dc6a         db  0x00 ; '.'
000000000020dc6b         db  0x00 ; '.'
000000000020dc6c         db  0x00 ; '.'
000000000020dc6d         db  0x00 ; '.'
000000000020dc6e         db  0x00 ; '.'
000000000020dc6f         db  0x00 ; '.'
000000000020dc70         db  0xa8 ; '.'
000000000020dc71         db  0x10 ; '.'
000000000020dc72         db  0x00 ; '.'
000000000020dc73         db  0x00 ; '.'
000000000020dc74         db  0x00 ; '.'
000000000020dc75         db  0x00 ; '.'
000000000020dc76         db  0x00 ; '.'
000000000020dc77         db  0x00 ; '.'
000000000020dc78         db  0x08 ; '.'
000000000020dc79         db  0x00 ; '.'
000000000020dc7a         db  0x00 ; '.'
000000000020dc7b         db  0x00 ; '.'
000000000020dc7c         db  0x00 ; '.'
000000000020dc7d         db  0x00 ; '.'
000000000020dc7e         db  0x00 ; '.'
000000000020dc7f         db  0x00 ; '.'
000000000020dc80         db  0x08 ; '.'
000000000020dc81         db  0x04 ; '.'
000000000020dc82         db  0x00 ; '.'
000000000020dc83         db  0x00 ; '.'
000000000020dc84         db  0x00 ; '.'
000000000020dc85         db  0x00 ; '.'
000000000020dc86         db  0x00 ; '.'
000000000020dc87         db  0x00 ; '.'
000000000020dc88         db  0x09 ; '.'
000000000020dc89         db  0x00 ; '.'
000000000020dc8a         db  0x00 ; '.'
000000000020dc8b         db  0x00 ; '.'
000000000020dc8c         db  0x00 ; '.'
000000000020dc8d         db  0x00 ; '.'
000000000020dc8e         db  0x00 ; '.'
000000000020dc8f         db  0x00 ; '.'
000000000020dc90         db  0x18 ; '.'
000000000020dc91         db  0x00 ; '.'
000000000020dc92         db  0x00 ; '.'
000000000020dc93         db  0x00 ; '.'
000000000020dc94         db  0x00 ; '.'
000000000020dc95         db  0x00 ; '.'
000000000020dc96         db  0x00 ; '.'
000000000020dc97         db  0x00 ; '.'
000000000020dc98         db  0x1e ; '.'
000000000020dc99         db  0x00 ; '.'
000000000020dc9a         db  0x00 ; '.'
000000000020dc9b         db  0x00 ; '.'
000000000020dc9c         db  0x00 ; '.'
000000000020dc9d         db  0x00 ; '.'
000000000020dc9e         db  0x00 ; '.'
000000000020dc9f         db  0x00 ; '.'
000000000020dca0         db  0x08 ; '.'
000000000020dca1         db  0x00 ; '.'
000000000020dca2         db  0x00 ; '.'
000000000020dca3         db  0x00 ; '.'
000000000020dca4         db  0x00 ; '.'
000000000020dca5         db  0x00 ; '.'
000000000020dca6         db  0x00 ; '.'
000000000020dca7         db  0x00 ; '.'
000000000020dca8         db  0xfb ; '.'
000000000020dca9         db  0xff ; '.'
000000000020dcaa         db  0xff ; '.'
000000000020dcab         db  0x6f ; 'o'
000000000020dcac         db  0x00 ; '.'
000000000020dcad         db  0x00 ; '.'
000000000020dcae         db  0x00 ; '.'
000000000020dcaf         db  0x00 ; '.'
000000000020dcb0         db  0x01 ; '.'
000000000020dcb1         db  0x00 ; '.'
000000000020dcb2         db  0x00 ; '.'
000000000020dcb3         db  0x08 ; '.'
000000000020dcb4         db  0x00 ; '.'
000000000020dcb5         db  0x00 ; '.'
000000000020dcb6         db  0x00 ; '.'
000000000020dcb7         db  0x00 ; '.'
000000000020dcb8         db  0xfe ; '.'
000000000020dcb9         db  0xff ; '.'
000000000020dcba         db  0xff ; '.'
000000000020dcbb         db  0x6f ; 'o'
000000000020dcbc         db  0x00 ; '.'
000000000020dcbd         db  0x00 ; '.'
000000000020dcbe         db  0x00 ; '.'
000000000020dcbf         db  0x00 ; '.'
000000000020dcc0         db  0x38 ; '8'
000000000020dcc1         db  0x10 ; '.'
000000000020dcc2         db  0x00 ; '.'
000000000020dcc3         db  0x00 ; '.'
000000000020dcc4         db  0x00 ; '.'
000000000020dcc5         db  0x00 ; '.'
000000000020dcc6         db  0x00 ; '.'
000000000020dcc7         db  0x00 ; '.'
000000000020dcc8         db  0xff ; '.'
000000000020dcc9         db  0xff ; '.'
000000000020dcca         db  0xff ; '.'
000000000020dccb         db  0x6f ; 'o'
000000000020dccc         db  0x00 ; '.'
000000000020dccd         db  0x00 ; '.'
000000000020dcce         db  0x00 ; '.'
000000000020dccf         db  0x00 ; '.'
000000000020dcd0         db  0x01 ; '.'
000000000020dcd1         db  0x00 ; '.'
000000000020dcd2         db  0x00 ; '.'
000000000020dcd3         db  0x00 ; '.'
000000000020dcd4         db  0x00 ; '.'
000000000020dcd5         db  0x00 ; '.'
000000000020dcd6         db  0x00 ; '.'
000000000020dcd7         db  0x00 ; '.'
000000000020dcd8         db  0xf0 ; '.'
000000000020dcd9         db  0xff ; '.'
000000000020dcda         db  0xff ; '.'
000000000020dcdb         db  0x6f ; 'o'
000000000020dcdc         db  0x00 ; '.'
000000000020dcdd         db  0x00 ; '.'
000000000020dcde         db  0x00 ; '.'
000000000020dcdf         db  0x00 ; '.'
000000000020dce0         db  0x7c ; '|'
000000000020dce1         db  0x0f ; '.'
000000000020dce2         db  0x00 ; '.'
000000000020dce3         db  0x00 ; '.'
000000000020dce4         db  0x00 ; '.'
000000000020dce5         db  0x00 ; '.'
000000000020dce6         db  0x00 ; '.'
000000000020dce7         db  0x00 ; '.'
000000000020dce8         db  0xf9 ; '.'
000000000020dce9         db  0xff ; '.'
000000000020dcea         db  0xff ; '.'
000000000020dceb         db  0x6f ; 'o'
000000000020dcec         db  0x00 ; '.'
000000000020dced         db  0x00 ; '.'
000000000020dcee         db  0x00 ; '.'
000000000020dcef         db  0x00 ; '.'
000000000020dcf0         db  0x20 ; ' '
000000000020dcf1         db  0x00 ; '.'
000000000020dcf2         db  0x00 ; '.'
000000000020dcf3         db  0x00 ; '.'
000000000020dcf4         db  0x00 ; '.'
000000000020dcf5         db  0x00 ; '.'
000000000020dcf6         db  0x00 ; '.'
000000000020dcf7         db  0x00 ; '.'
000000000020dcf8         db  0x00 ; '.'
000000000020dcf9         db  0x00 ; '.'
000000000020dcfa         db  0x00 ; '.'
000000000020dcfb         db  0x00 ; '.'
000000000020dcfc         db  0x00 ; '.'
000000000020dcfd         db  0x00 ; '.'
000000000020dcfe         db  0x00 ; '.'
000000000020dcff         db  0x00 ; '.'
000000000020dd00         db  0x00 ; '.'
000000000020dd01         db  0x00 ; '.'
000000000020dd02         db  0x00 ; '.'
000000000020dd03         db  0x00 ; '.'
000000000020dd04         db  0x00 ; '.'
000000000020dd05         db  0x00 ; '.'
000000000020dd06         db  0x00 ; '.'
000000000020dd07         db  0x00 ; '.'
000000000020dd08         db  0x00 ; '.'
000000000020dd09         db  0x00 ; '.'
000000000020dd0a         db  0x00 ; '.'
000000000020dd0b         db  0x00 ; '.'
000000000020dd0c         db  0x00 ; '.'
000000000020dd0d         db  0x00 ; '.'
000000000020dd0e         db  0x00 ; '.'
000000000020dd0f         db  0x00 ; '.'
000000000020dd10         db  0x00 ; '.'
000000000020dd11         db  0x00 ; '.'
000000000020dd12         db  0x00 ; '.'
000000000020dd13         db  0x00 ; '.'
000000000020dd14         db  0x00 ; '.'
000000000020dd15         db  0x00 ; '.'
000000000020dd16         db  0x00 ; '.'
000000000020dd17         db  0x00 ; '.'
000000000020dd18         db  0x00 ; '.'
000000000020dd19         db  0x00 ; '.'
000000000020dd1a         db  0x00 ; '.'
000000000020dd1b         db  0x00 ; '.'
000000000020dd1c         db  0x00 ; '.'
000000000020dd1d         db  0x00 ; '.'
000000000020dd1e         db  0x00 ; '.'
000000000020dd1f         db  0x00 ; '.'
000000000020dd20         db  0x00 ; '.'
000000000020dd21         db  0x00 ; '.'
000000000020dd22         db  0x00 ; '.'
000000000020dd23         db  0x00 ; '.'
000000000020dd24         db  0x00 ; '.'
000000000020dd25         db  0x00 ; '.'
000000000020dd26         db  0x00 ; '.'
000000000020dd27         db  0x00 ; '.'
000000000020dd28         db  0x00 ; '.'
000000000020dd29         db  0x00 ; '.'
000000000020dd2a         db  0x00 ; '.'
000000000020dd2b         db  0x00 ; '.'
000000000020dd2c         db  0x00 ; '.'
000000000020dd2d         db  0x00 ; '.'
000000000020dd2e         db  0x00 ; '.'
000000000020dd2f         db  0x00 ; '.'
000000000020dd30         db  0x00 ; '.'
000000000020dd31         db  0x00 ; '.'
000000000020dd32         db  0x00 ; '.'
000000000020dd33         db  0x00 ; '.'
000000000020dd34         db  0x00 ; '.'
000000000020dd35         db  0x00 ; '.'
000000000020dd36         db  0x00 ; '.'
000000000020dd37         db  0x00 ; '.'
000000000020dd38         db  0x00 ; '.'
000000000020dd39         db  0x00 ; '.'
000000000020dd3a         db  0x00 ; '.'
000000000020dd3b         db  0x00 ; '.'
000000000020dd3c         db  0x00 ; '.'
000000000020dd3d         db  0x00 ; '.'
000000000020dd3e         db  0x00 ; '.'
000000000020dd3f         db  0x00 ; '.'
000000000020dd40         db  0x00 ; '.'
000000000020dd41         db  0x00 ; '.'
000000000020dd42         db  0x00 ; '.'
000000000020dd43         db  0x00 ; '.'
000000000020dd44         db  0x00 ; '.'
000000000020dd45         db  0x00 ; '.'
000000000020dd46         db  0x00 ; '.'
000000000020dd47         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x20dd48; 0x20e000[ (696 bytes)
        ; File offset : [56648; 57344[ (696 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
000000000020dd48         db  0x58 ; 'X'
000000000020dd49         db  0xdb ; '.'
000000000020dd4a         db  0x20 ; ' '
000000000020dd4b         db  0x00 ; '.'
000000000020dd4c         db  0x00 ; '.'
000000000020dd4d         db  0x00 ; '.'
000000000020dd4e         db  0x00 ; '.'
000000000020dd4f         db  0x00 ; '.'
                     qword_20dd50:
000000000020dd50         dq         0x0000000000000000                          ; DATA XREF=0x1c30
000000000020dd58         db  0x00 ; '.'                                         ; DATA XREF=0x1c36
000000000020dd59         db  0x00 ; '.'
000000000020dd5a         db  0x00 ; '.'
000000000020dd5b         db  0x00 ; '.'
000000000020dd5c         db  0x00 ; '.'
000000000020dd5d         db  0x00 ; '.'
000000000020dd5e         db  0x00 ; '.'
000000000020dd5f         db  0x00 ; '.'
                     getenv@GOT:        // getenv
000000000020dd60         dq         0x000000000020e270                          ; DATA XREF=j_getenv
                     free@GOT:        // free
000000000020dd68         dq         0x000000000020e278                          ; DATA XREF=j_free
                     abort@GOT:        // abort
000000000020dd70         dq         0x000000000020e280                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
000000000020dd78         dq         0x000000000020e288                          ; DATA XREF=j___errno_location
                     fdatasync@GOT:        // fdatasync
000000000020dd80         dq         0x000000000020e290                          ; DATA XREF=j_fdatasync
                     unlink@GOT:        // unlink
000000000020dd88         dq         0x000000000020e298                          ; DATA XREF=j_unlink
                     strncmp@GOT:        // strncmp
000000000020dd90         dq         0x000000000020e2a0                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
000000000020dd98         dq         0x000000000020e2b0                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
000000000020dda0         dq         0x000000000020e2b8                          ; DATA XREF=j___fpending
                     __read_chk@GOT:        // __read_chk
000000000020dda8         dq         0x000000000020e2c0                          ; DATA XREF=j___read_chk
                     isatty@GOT:        // isatty
000000000020ddb0         dq         0x000000000020e2c8                          ; DATA XREF=j_isatty
                     localeconv@GOT:        // localeconv
000000000020ddb8         dq         0x000000000020e2d0                          ; DATA XREF=j_localeconv
                     fcntl@GOT:        // fcntl
000000000020ddc0         dq         0x000000000020e2d8                          ; DATA XREF=j_fcntl
                     write@GOT:        // write
000000000020ddc8         dq         0x000000000020e2e0                          ; DATA XREF=j_write
                     getpid@GOT:        // getpid
000000000020ddd0         dq         0x000000000020e2e8                          ; DATA XREF=j_getpid
                     fread_unlocked@GOT:        // fread_unlocked
000000000020ddd8         dq         0x000000000020e2f0                          ; DATA XREF=j_fread_unlocked
                     textdomain@GOT:        // textdomain
000000000020dde0         dq         0x000000000020e2f8                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
000000000020dde8         dq         0x000000000020e300                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
000000000020ddf0         dq         0x000000000020e308                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
000000000020ddf8         dq         0x000000000020e310                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
000000000020de00         dq         0x000000000020e318                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
000000000020de08         dq         0x000000000020e320                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
000000000020de10         dq         0x000000000020e328                          ; DATA XREF=j___stack_chk_fail
                     getuid@GOT:        // getuid
000000000020de18         dq         0x000000000020e330                          ; DATA XREF=j_getuid
                     getopt_long@GOT:        // getopt_long
000000000020de20         dq         0x000000000020e338                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
000000000020de28         dq         0x000000000020e340                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
000000000020de30         dq         0x000000000020e348                          ; DATA XREF=j_strchr
                     __fxstatat@GOT:        // __fxstatat
000000000020de38         dq         0x000000000020e350                          ; DATA XREF=j___fxstatat
                     __overflow@GOT:        // __overflow
000000000020de40         dq         0x000000000020e358                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
000000000020de48         dq         0x000000000020e360                          ; DATA XREF=j_strrchr
                     ftruncate@GOT:        // ftruncate
000000000020de50         dq         0x000000000020e368                          ; DATA XREF=j_ftruncate
                     lseek@GOT:        // lseek
000000000020de58         dq         0x000000000020e370                          ; DATA XREF=j_lseek
                     gettimeofday@GOT:        // gettimeofday
000000000020de60         dq         0x000000000020e378                          ; DATA XREF=j_gettimeofday
                     __assert_fail@GOT:        // __assert_fail
000000000020de68         dq         0x000000000020e380                          ; DATA XREF=j___assert_fail
                     __strtoul_internal@GOT:        // __strtoul_internal
000000000020de70         dq         0x000000000020e388                          ; DATA XREF=j___strtoul_internal
                     memset@GOT:        // memset
000000000020de78         dq         0x000000000020e390                          ; DATA XREF=j_memset
                     ioctl@GOT:        // ioctl
000000000020de80         dq         0x000000000020e398                          ; DATA XREF=j_ioctl
                     close@GOT:        // close
000000000020de88         dq         0x000000000020e3a0                          ; DATA XREF=j_close
                     memcmp@GOT:        // memcmp
000000000020de90         dq         0x000000000020e3b0                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
000000000020de98         dq         0x000000000020e3b8                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
000000000020dea0         dq         0x000000000020e3c0                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
000000000020dea8         dq         0x000000000020e3c8                          ; DATA XREF=j_strcmp
                     __memcpy_chk@GOT:        // __memcpy_chk
000000000020deb0         dq         0x000000000020e3d0                          ; DATA XREF=j___memcpy_chk
                     syscall@GOT:        // syscall
000000000020deb8         dq         0x000000000020e3d8                          ; DATA XREF=j_syscall
                     memcpy@GOT:        // memcpy
000000000020dec0         dq         0x000000000020e3e8                          ; DATA XREF=j_memcpy
                     time@GOT:        // time
000000000020dec8         dq         0x000000000020e3f0                          ; DATA XREF=j_time
                     fileno@GOT:        // fileno
000000000020ded0         dq         0x000000000020e3f8                          ; DATA XREF=j_fileno
                     getgid@GOT:        // getgid
000000000020ded8         dq         0x000000000020e400                          ; DATA XREF=j_getgid
                     sync@GOT:        // sync
000000000020dee0         dq         0x000000000020e408                          ; DATA XREF=j_sync
                     malloc@GOT:        // malloc
000000000020dee8         dq         0x000000000020e410                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
000000000020def0         dq         0x000000000020e418                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
000000000020def8         dq         0x000000000020e420                          ; DATA XREF=j_nl_langinfo
                     __fxstat@GOT:        // __fxstat
000000000020df00         dq         0x000000000020e428                          ; DATA XREF=j___fxstat
                     __freading@GOT:        // __freading
000000000020df08         dq         0x000000000020e430                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
000000000020df10         dq         0x000000000020e438                          ; DATA XREF=j_realloc
                     __strcpy_chk@GOT:        // __strcpy_chk
000000000020df18         dq         0x000000000020e440                          ; DATA XREF=j___strcpy_chk
                     fdopen@GOT:        // fdopen
000000000020df20         dq         0x000000000020e448                          ; DATA XREF=j_fdopen
                     setlocale@GOT:        // setlocale
000000000020df28         dq         0x000000000020e450                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
000000000020df30         dq         0x000000000020e458                          ; DATA XREF=j___printf_chk
                     setvbuf@GOT:        // setvbuf
000000000020df38         dq         0x000000000020e460                          ; DATA XREF=j_setvbuf
                     chmod@GOT:        // chmod
000000000020df40         dq         0x000000000020e468                          ; DATA XREF=j_chmod
                     memmove@GOT:        // memmove
000000000020df48         dq         0x000000000020e470                          ; DATA XREF=j_memmove
                     error@GOT:        // error
000000000020df50         dq         0x000000000020e478                          ; DATA XREF=j_error
                     fsync@GOT:        // fsync
000000000020df58         dq         0x000000000020e480                          ; DATA XREF=j_fsync
                     __explicit_bzero_chk@GOT:        // __explicit_bzero_chk
000000000020df60         dq         0x000000000020e488                          ; DATA XREF=j___explicit_bzero_chk
                     open@GOT:        // open
000000000020df68         dq         0x000000000020e490                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
000000000020df70         dq         0x000000000020e498                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
000000000020df78         dq         0x000000000020e4a0                          ; DATA XREF=j_fopen
                     __cxa_atexit@GOT:        // __cxa_atexit
000000000020df80         dq         0x000000000020e4a8                          ; DATA XREF=j___cxa_atexit
                     renameat@GOT:        // renameat
000000000020df88         dq         0x000000000020e4b0                          ; DATA XREF=j_renameat
                     getpagesize@GOT:        // getpagesize
000000000020df90         dq         0x000000000020e4b8                          ; DATA XREF=j_getpagesize
                     getppid@GOT:        // getppid
000000000020df98         dq         0x000000000020e4c0                          ; DATA XREF=j_getppid
                     exit@GOT:        // exit
000000000020dfa0         dq         0x000000000020e4c8                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
000000000020dfa8         dq         0x000000000020e4d0                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
000000000020dfb0         dq         0x000000000020e4d8                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
000000000020dfb8         dq         0x000000000020e4e8                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
000000000020dfc0         dq         0x000000000020e4f0                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
000000000020dfc8         dq         0x000000000020e500                          ; DATA XREF=j___ctype_b_loc
                     __sprintf_chk@GOT:        // __sprintf_chk
000000000020dfd0         dq         0x000000000020e508                          ; DATA XREF=j___sprintf_chk
                     qword_20dfd8:
000000000020dfd8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
000000000020dfe0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
000000000020dfe1         db  0x00 ; '.'
000000000020dfe2         db  0x00 ; '.'
000000000020dfe3         db  0x00 ; '.'
000000000020dfe4         db  0x00 ; '.'
000000000020dfe5         db  0x00 ; '.'
000000000020dfe6         db  0x00 ; '.'
000000000020dfe7         db  0x00 ; '.'
                     qword_20dfe8:
000000000020dfe8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_20dff0:
000000000020dff0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_20dff8:
000000000020dff8         dq         0x0000000000000000                          ; DATA XREF=j_qword_20dff8, __do_global_dtors_aux+9


        ; Section .data
        ; Range: [0x20e000; 0x20e0a0[ (160 bytes)
        ; File offset : [57344; 57504[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020e000         align      8
                     __dso_handle:
000000000020e008         dq         0x000000000020e008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
000000000020e010         dq         0x000000000000a70c                          ; "8.31", DATA XREF=main+626
                     argmatch_die:
000000000020e018         dq         0x00000000000040e0                          ; DATA XREF=main+528
                     exit_failure:
000000000020e020         dd         0x00000001                                  ; DATA XREF=close_stdout+130, randread_error+51, xalloc_die+23
000000000020e024         db  0x00 ; '.'
000000000020e025         db  0x00 ; '.'
000000000020e026         db  0x00 ; '.'
000000000020e027         db  0x00 ; '.'
000000000020e028         db  0x00 ; '.'
000000000020e029         db  0x00 ; '.'
000000000020e02a         db  0x00 ; '.'
000000000020e02b         db  0x00 ; '.'
000000000020e02c         db  0x00 ; '.'
000000000020e02d         db  0x00 ; '.'
000000000020e02e         db  0x00 ; '.'
000000000020e02f         db  0x00 ; '.'
000000000020e030         db  0x00 ; '.'
000000000020e031         db  0x00 ; '.'
000000000020e032         db  0x00 ; '.'
000000000020e033         db  0x00 ; '.'
000000000020e034         db  0x00 ; '.'
000000000020e035         db  0x00 ; '.'
000000000020e036         db  0x00 ; '.'
000000000020e037         db  0x00 ; '.'
000000000020e038         db  0x00 ; '.'
000000000020e039         db  0x00 ; '.'
000000000020e03a         db  0x00 ; '.'
000000000020e03b         db  0x00 ; '.'
000000000020e03c         db  0x00 ; '.'
000000000020e03d         db  0x00 ; '.'
000000000020e03e         db  0x00 ; '.'
000000000020e03f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020e040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020e041         db  0x00 ; '.'
000000000020e042         db  0x00 ; '.'
000000000020e043         db  0x00 ; '.'
000000000020e044         db  0x00 ; '.'
000000000020e045         db  0x00 ; '.'
000000000020e046         db  0x00 ; '.'
000000000020e047         db  0x00 ; '.'
000000000020e048         db  0x00 ; '.'
000000000020e049         db  0x00 ; '.'
000000000020e04a         db  0x00 ; '.'
000000000020e04b         db  0x00 ; '.'
000000000020e04c         db  0x00 ; '.'
000000000020e04d         db  0x00 ; '.'
000000000020e04e         db  0x00 ; '.'
000000000020e04f         db  0x00 ; '.'
000000000020e050         db  0x00 ; '.'
000000000020e051         db  0x00 ; '.'
000000000020e052         db  0x00 ; '.'
000000000020e053         db  0x00 ; '.'
000000000020e054         db  0x00 ; '.'
000000000020e055         db  0x00 ; '.'
000000000020e056         db  0x00 ; '.'
000000000020e057         db  0x00 ; '.'
000000000020e058         db  0x00 ; '.'
000000000020e059         db  0x00 ; '.'
000000000020e05a         db  0x00 ; '.'
000000000020e05b         db  0x00 ; '.'
000000000020e05c         db  0x00 ; '.'
000000000020e05d         db  0x00 ; '.'
000000000020e05e         db  0x00 ; '.'
000000000020e05f         db  0x00 ; '.'
000000000020e060         db  0x00 ; '.'
000000000020e061         db  0x00 ; '.'
000000000020e062         db  0x00 ; '.'
000000000020e063         db  0x00 ; '.'
000000000020e064         db  0x00 ; '.'
000000000020e065         db  0x00 ; '.'
000000000020e066         db  0x00 ; '.'
000000000020e067         db  0x00 ; '.'
000000000020e068         db  0x00 ; '.'
000000000020e069         db  0x00 ; '.'
000000000020e06a         db  0x00 ; '.'
000000000020e06b         db  0x00 ; '.'
000000000020e06c         db  0x00 ; '.'
000000000020e06d         db  0x00 ; '.'
000000000020e06e         db  0x00 ; '.'
000000000020e06f         db  0x00 ; '.'
000000000020e070         db  0x00 ; '.'
000000000020e071         db  0x00 ; '.'
000000000020e072         db  0x00 ; '.'
000000000020e073         db  0x00 ; '.'
000000000020e074         db  0x00 ; '.'
000000000020e075         db  0x00 ; '.'
000000000020e076         db  0x00 ; '.'
000000000020e077         db  0x00 ; '.'
                     nslots:
000000000020e078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020e07c         db  0x00 ; '.'
000000000020e07d         db  0x00 ; '.'
000000000020e07e         db  0x00 ; '.'
000000000020e07f         db  0x00 ; '.'
                     slotvec:
000000000020e080         dq         0x000000000020e090                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020e088         db  0x00 ; '.'
000000000020e089         db  0x00 ; '.'
000000000020e08a         db  0x00 ; '.'
000000000020e08b         db  0x00 ; '.'
000000000020e08c         db  0x00 ; '.'
000000000020e08d         db  0x00 ; '.'
000000000020e08e         db  0x00 ; '.'
000000000020e08f         db  0x00 ; '.'
                     slotvec0:
000000000020e090         dq         1.26481e-321, 1.0646e-317                   ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20e0a0; 0x20e260[ (448 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020e0a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020e0a1         db  0x00 ; '.'
000000000020e0a2         db  0x00 ; '.'
000000000020e0a3         db  0x00 ; '.'
000000000020e0a4         db  0x00 ; '.'
000000000020e0a5         db  0x00 ; '.'
000000000020e0a6         db  0x00 ; '.'
000000000020e0a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020e0a8         db  0x00 ; '.'                                         ; DATA XREF=main+619, usage+125, usage+162, usage+199, usage+275, usage+312, usage+349, usage+386, usage+423, usage+460, usage+497
000000000020e0a9         db  0x00 ; '.'
000000000020e0aa         db  0x00 ; '.'
000000000020e0ab         db  0x00 ; '.'
000000000020e0ac         db  0x00 ; '.'
000000000020e0ad         db  0x00 ; '.'
000000000020e0ae         db  0x00 ; '.'
000000000020e0af         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020e0b0         db  0x00 ; '.'                                         ; DATA XREF=main+684
000000000020e0b1         db  0x00 ; '.'
000000000020e0b2         db  0x00 ; '.'
000000000020e0b3         db  0x00 ; '.'
000000000020e0b4         db  0x00 ; '.'
000000000020e0b5         db  0x00 ; '.'
000000000020e0b6         db  0x00 ; '.'
000000000020e0b7         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000020e0b8         db  0x00 ; '.'                                         ; DATA XREF=main+294, main+361, main+455, main+512
000000000020e0b9         db  0x00 ; '.'
000000000020e0ba         db  0x00 ; '.'
000000000020e0bb         db  0x00 ; '.'
000000000020e0bc         db  0x00 ; '.'
000000000020e0bd         db  0x00 ; '.'
000000000020e0be         db  0x00 ; '.'
000000000020e0bf         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020e0c0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020e0c1         db  0x00 ; '.'
000000000020e0c2         db  0x00 ; '.'
000000000020e0c3         db  0x00 ; '.'
000000000020e0c4         db  0x00 ; '.'
000000000020e0c5         db  0x00 ; '.'
000000000020e0c6         db  0x00 ; '.'
000000000020e0c7         db  0x00 ; '.'
000000000020e0c8         db  0x00 ; '.'
000000000020e0c9         db  0x00 ; '.'
000000000020e0ca         db  0x00 ; '.'
000000000020e0cb         db  0x00 ; '.'
000000000020e0cc         db  0x00 ; '.'
000000000020e0cd         db  0x00 ; '.'
000000000020e0ce         db  0x00 ; '.'
000000000020e0cf         db  0x00 ; '.'
000000000020e0d0         db  0x00 ; '.'
000000000020e0d1         db  0x00 ; '.'
000000000020e0d2         db  0x00 ; '.'
000000000020e0d3         db  0x00 ; '.'
000000000020e0d4         db  0x00 ; '.'
000000000020e0d5         db  0x00 ; '.'
000000000020e0d6         db  0x00 ; '.'
000000000020e0d7         db  0x00 ; '.'
000000000020e0d8         db  0x00 ; '.'
000000000020e0d9         db  0x00 ; '.'
000000000020e0da         db  0x00 ; '.'
000000000020e0db         db  0x00 ; '.'
000000000020e0dc         db  0x00 ; '.'
000000000020e0dd         db  0x00 ; '.'
000000000020e0de         db  0x00 ; '.'
000000000020e0df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020e0e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, argmatch_valid+37, argmatch_valid+95, argmatch_valid+174, argmatch_valid+216, close_stdout+44, set_program_name+125
000000000020e0e1         db  0x00 ; '.'
000000000020e0e2         db  0x00 ; '.'
000000000020e0e3         db  0x00 ; '.'
000000000020e0e4         db  0x00 ; '.'
000000000020e0e5         db  0x00 ; '.'
000000000020e0e6         db  0x00 ; '.'
000000000020e0e7         db  0x00 ; '.'
                     completed.7697:
000000000020e0e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020e0e9         db  0x00 ; '.'
000000000020e0ea         db  0x00 ; '.'
000000000020e0eb         db  0x00 ; '.'
000000000020e0ec         db  0x00 ; '.'
000000000020e0ed         db  0x00 ; '.'
000000000020e0ee         db  0x00 ; '.'
000000000020e0ef         db  0x00 ; '.'
                     randint_source:
000000000020e0f0         db  0x00 ; '.'                                         ; DATA XREF=main+724, main+809, main+954, clear_random_data
000000000020e0f1         db  0x00 ; '.'
000000000020e0f2         db  0x00 ; '.'
000000000020e0f3         db  0x00 ; '.'
000000000020e0f4         db  0x00 ; '.'
000000000020e0f5         db  0x00 ; '.'
000000000020e0f6         db  0x00 ; '.'
000000000020e0f7         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020e0f8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020e0f9         db  0x00 ; '.'
000000000020e0fa         db  0x00 ; '.'
000000000020e0fb         db  0x00 ; '.'
000000000020e0fc         db  0x00 ; '.'
000000000020e0fd         db  0x00 ; '.'
000000000020e0fe         db  0x00 ; '.'
000000000020e0ff         db  0x00 ; '.'
                     file_name:
000000000020e100         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020e101         db  0x00 ; '.'
000000000020e102         db  0x00 ; '.'
000000000020e103         db  0x00 ; '.'
000000000020e104         db  0x00 ; '.'
000000000020e105         db  0x00 ; '.'
000000000020e106         db  0x00 ; '.'
000000000020e107         db  0x00 ; '.'
                     program_name:
000000000020e108         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020e109         db  0x00 ; '.'
000000000020e10a         db  0x00 ; '.'
000000000020e10b         db  0x00 ; '.'
000000000020e10c         db  0x00 ; '.'
000000000020e10d         db  0x00 ; '.'
000000000020e10e         db  0x00 ; '.'
000000000020e10f         db  0x00 ; '.'
000000000020e110         db  0x00 ; '.'
000000000020e111         db  0x00 ; '.'
000000000020e112         db  0x00 ; '.'
000000000020e113         db  0x00 ; '.'
000000000020e114         db  0x00 ; '.'
000000000020e115         db  0x00 ; '.'
000000000020e116         db  0x00 ; '.'
000000000020e117         db  0x00 ; '.'
000000000020e118         db  0x00 ; '.'
000000000020e119         db  0x00 ; '.'
000000000020e11a         db  0x00 ; '.'
000000000020e11b         db  0x00 ; '.'
000000000020e11c         db  0x00 ; '.'
000000000020e11d         db  0x00 ; '.'
000000000020e11e         db  0x00 ; '.'
000000000020e11f         db  0x00 ; '.'
                     slot0:
000000000020e120         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020e121         db  0x00 ; '.'
000000000020e122         db  0x00 ; '.'
000000000020e123         db  0x00 ; '.'
000000000020e124         db  0x00 ; '.'
000000000020e125         db  0x00 ; '.'
000000000020e126         db  0x00 ; '.'
000000000020e127         db  0x00 ; '.'
000000000020e128         db  0x00 ; '.'
000000000020e129         db  0x00 ; '.'
000000000020e12a         db  0x00 ; '.'
000000000020e12b         db  0x00 ; '.'
000000000020e12c         db  0x00 ; '.'
000000000020e12d         db  0x00 ; '.'
000000000020e12e         db  0x00 ; '.'
000000000020e12f         db  0x00 ; '.'
000000000020e130         db  0x00 ; '.'
000000000020e131         db  0x00 ; '.'
000000000020e132         db  0x00 ; '.'
000000000020e133         db  0x00 ; '.'
000000000020e134         db  0x00 ; '.'
000000000020e135         db  0x00 ; '.'
000000000020e136         db  0x00 ; '.'
000000000020e137         db  0x00 ; '.'
000000000020e138         db  0x00 ; '.'
000000000020e139         db  0x00 ; '.'
000000000020e13a         db  0x00 ; '.'
000000000020e13b         db  0x00 ; '.'
000000000020e13c         db  0x00 ; '.'
000000000020e13d         db  0x00 ; '.'
000000000020e13e         db  0x00 ; '.'
000000000020e13f         db  0x00 ; '.'
000000000020e140         db  0x00 ; '.'
000000000020e141         db  0x00 ; '.'
000000000020e142         db  0x00 ; '.'
000000000020e143         db  0x00 ; '.'
000000000020e144         db  0x00 ; '.'
000000000020e145         db  0x00 ; '.'
000000000020e146         db  0x00 ; '.'
000000000020e147         db  0x00 ; '.'
000000000020e148         db  0x00 ; '.'
000000000020e149         db  0x00 ; '.'
000000000020e14a         db  0x00 ; '.'
000000000020e14b         db  0x00 ; '.'
000000000020e14c         db  0x00 ; '.'
000000000020e14d         db  0x00 ; '.'
000000000020e14e         db  0x00 ; '.'
000000000020e14f         db  0x00 ; '.'
000000000020e150         db  0x00 ; '.'
000000000020e151         db  0x00 ; '.'
000000000020e152         db  0x00 ; '.'
000000000020e153         db  0x00 ; '.'
000000000020e154         db  0x00 ; '.'
000000000020e155         db  0x00 ; '.'
000000000020e156         db  0x00 ; '.'
000000000020e157         db  0x00 ; '.'
000000000020e158         db  0x00 ; '.'
000000000020e159         db  0x00 ; '.'
000000000020e15a         db  0x00 ; '.'
000000000020e15b         db  0x00 ; '.'
000000000020e15c         db  0x00 ; '.'
000000000020e15d         db  0x00 ; '.'
000000000020e15e         db  0x00 ; '.'
000000000020e15f         db  0x00 ; '.'
000000000020e160         db  0x00 ; '.'
000000000020e161         db  0x00 ; '.'
000000000020e162         db  0x00 ; '.'
000000000020e163         db  0x00 ; '.'
000000000020e164         db  0x00 ; '.'
000000000020e165         db  0x00 ; '.'
000000000020e166         db  0x00 ; '.'
000000000020e167         db  0x00 ; '.'
000000000020e168         db  0x00 ; '.'
000000000020e169         db  0x00 ; '.'
000000000020e16a         db  0x00 ; '.'
000000000020e16b         db  0x00 ; '.'
000000000020e16c         db  0x00 ; '.'
000000000020e16d         db  0x00 ; '.'
000000000020e16e         db  0x00 ; '.'
000000000020e16f         db  0x00 ; '.'
000000000020e170         db  0x00 ; '.'
000000000020e171         db  0x00 ; '.'
000000000020e172         db  0x00 ; '.'
000000000020e173         db  0x00 ; '.'
000000000020e174         db  0x00 ; '.'
000000000020e175         db  0x00 ; '.'
000000000020e176         db  0x00 ; '.'
000000000020e177         db  0x00 ; '.'
000000000020e178         db  0x00 ; '.'
000000000020e179         db  0x00 ; '.'
000000000020e17a         db  0x00 ; '.'
000000000020e17b         db  0x00 ; '.'
000000000020e17c         db  0x00 ; '.'
000000000020e17d         db  0x00 ; '.'
000000000020e17e         db  0x00 ; '.'
000000000020e17f         db  0x00 ; '.'
000000000020e180         db  0x00 ; '.'
000000000020e181         db  0x00 ; '.'
000000000020e182         db  0x00 ; '.'
000000000020e183         db  0x00 ; '.'
000000000020e184         db  0x00 ; '.'
000000000020e185         db  0x00 ; '.'
000000000020e186         db  0x00 ; '.'
000000000020e187         db  0x00 ; '.'
000000000020e188         db  0x00 ; '.'
000000000020e189         db  0x00 ; '.'
000000000020e18a         db  0x00 ; '.'
000000000020e18b         db  0x00 ; '.'
000000000020e18c         db  0x00 ; '.'
000000000020e18d         db  0x00 ; '.'
000000000020e18e         db  0x00 ; '.'
000000000020e18f         db  0x00 ; '.'
000000000020e190         db  0x00 ; '.'
000000000020e191         db  0x00 ; '.'
000000000020e192         db  0x00 ; '.'
000000000020e193         db  0x00 ; '.'
000000000020e194         db  0x00 ; '.'
000000000020e195         db  0x00 ; '.'
000000000020e196         db  0x00 ; '.'
000000000020e197         db  0x00 ; '.'
000000000020e198         db  0x00 ; '.'
000000000020e199         db  0x00 ; '.'
000000000020e19a         db  0x00 ; '.'
000000000020e19b         db  0x00 ; '.'
000000000020e19c         db  0x00 ; '.'
000000000020e19d         db  0x00 ; '.'
000000000020e19e         db  0x00 ; '.'
000000000020e19f         db  0x00 ; '.'
000000000020e1a0         db  0x00 ; '.'
000000000020e1a1         db  0x00 ; '.'
000000000020e1a2         db  0x00 ; '.'
000000000020e1a3         db  0x00 ; '.'
000000000020e1a4         db  0x00 ; '.'
000000000020e1a5         db  0x00 ; '.'
000000000020e1a6         db  0x00 ; '.'
000000000020e1a7         db  0x00 ; '.'
000000000020e1a8         db  0x00 ; '.'
000000000020e1a9         db  0x00 ; '.'
000000000020e1aa         db  0x00 ; '.'
000000000020e1ab         db  0x00 ; '.'
000000000020e1ac         db  0x00 ; '.'
000000000020e1ad         db  0x00 ; '.'
000000000020e1ae         db  0x00 ; '.'
000000000020e1af         db  0x00 ; '.'
000000000020e1b0         db  0x00 ; '.'
000000000020e1b1         db  0x00 ; '.'
000000000020e1b2         db  0x00 ; '.'
000000000020e1b3         db  0x00 ; '.'
000000000020e1b4         db  0x00 ; '.'
000000000020e1b5         db  0x00 ; '.'
000000000020e1b6         db  0x00 ; '.'
000000000020e1b7         db  0x00 ; '.'
000000000020e1b8         db  0x00 ; '.'
000000000020e1b9         db  0x00 ; '.'
000000000020e1ba         db  0x00 ; '.'
000000000020e1bb         db  0x00 ; '.'
000000000020e1bc         db  0x00 ; '.'
000000000020e1bd         db  0x00 ; '.'
000000000020e1be         db  0x00 ; '.'
000000000020e1bf         db  0x00 ; '.'
000000000020e1c0         db  0x00 ; '.'
000000000020e1c1         db  0x00 ; '.'
000000000020e1c2         db  0x00 ; '.'
000000000020e1c3         db  0x00 ; '.'
000000000020e1c4         db  0x00 ; '.'
000000000020e1c5         db  0x00 ; '.'
000000000020e1c6         db  0x00 ; '.'
000000000020e1c7         db  0x00 ; '.'
000000000020e1c8         db  0x00 ; '.'
000000000020e1c9         db  0x00 ; '.'
000000000020e1ca         db  0x00 ; '.'
000000000020e1cb         db  0x00 ; '.'
000000000020e1cc         db  0x00 ; '.'
000000000020e1cd         db  0x00 ; '.'
000000000020e1ce         db  0x00 ; '.'
000000000020e1cf         db  0x00 ; '.'
000000000020e1d0         db  0x00 ; '.'
000000000020e1d1         db  0x00 ; '.'
000000000020e1d2         db  0x00 ; '.'
000000000020e1d3         db  0x00 ; '.'
000000000020e1d4         db  0x00 ; '.'
000000000020e1d5         db  0x00 ; '.'
000000000020e1d6         db  0x00 ; '.'
000000000020e1d7         db  0x00 ; '.'
000000000020e1d8         db  0x00 ; '.'
000000000020e1d9         db  0x00 ; '.'
000000000020e1da         db  0x00 ; '.'
000000000020e1db         db  0x00 ; '.'
000000000020e1dc         db  0x00 ; '.'
000000000020e1dd         db  0x00 ; '.'
000000000020e1de         db  0x00 ; '.'
000000000020e1df         db  0x00 ; '.'
000000000020e1e0         db  0x00 ; '.'
000000000020e1e1         db  0x00 ; '.'
000000000020e1e2         db  0x00 ; '.'
000000000020e1e3         db  0x00 ; '.'
000000000020e1e4         db  0x00 ; '.'
000000000020e1e5         db  0x00 ; '.'
000000000020e1e6         db  0x00 ; '.'
000000000020e1e7         db  0x00 ; '.'
000000000020e1e8         db  0x00 ; '.'
000000000020e1e9         db  0x00 ; '.'
000000000020e1ea         db  0x00 ; '.'
000000000020e1eb         db  0x00 ; '.'
000000000020e1ec         db  0x00 ; '.'
000000000020e1ed         db  0x00 ; '.'
000000000020e1ee         db  0x00 ; '.'
000000000020e1ef         db  0x00 ; '.'
000000000020e1f0         db  0x00 ; '.'
000000000020e1f1         db  0x00 ; '.'
000000000020e1f2         db  0x00 ; '.'
000000000020e1f3         db  0x00 ; '.'
000000000020e1f4         db  0x00 ; '.'
000000000020e1f5         db  0x00 ; '.'
000000000020e1f6         db  0x00 ; '.'
000000000020e1f7         db  0x00 ; '.'
000000000020e1f8         db  0x00 ; '.'
000000000020e1f9         db  0x00 ; '.'
000000000020e1fa         db  0x00 ; '.'
000000000020e1fb         db  0x00 ; '.'
000000000020e1fc         db  0x00 ; '.'
000000000020e1fd         db  0x00 ; '.'
000000000020e1fe         db  0x00 ; '.'
000000000020e1ff         db  0x00 ; '.'
000000000020e200         db  0x00 ; '.'
000000000020e201         db  0x00 ; '.'
000000000020e202         db  0x00 ; '.'
000000000020e203         db  0x00 ; '.'
000000000020e204         db  0x00 ; '.'
000000000020e205         db  0x00 ; '.'
000000000020e206         db  0x00 ; '.'
000000000020e207         db  0x00 ; '.'
000000000020e208         db  0x00 ; '.'
000000000020e209         db  0x00 ; '.'
000000000020e20a         db  0x00 ; '.'
000000000020e20b         db  0x00 ; '.'
000000000020e20c         db  0x00 ; '.'
000000000020e20d         db  0x00 ; '.'
000000000020e20e         db  0x00 ; '.'
000000000020e20f         db  0x00 ; '.'
000000000020e210         db  0x00 ; '.'
000000000020e211         db  0x00 ; '.'
000000000020e212         db  0x00 ; '.'
000000000020e213         db  0x00 ; '.'
000000000020e214         db  0x00 ; '.'
000000000020e215         db  0x00 ; '.'
000000000020e216         db  0x00 ; '.'
000000000020e217         db  0x00 ; '.'
000000000020e218         db  0x00 ; '.'
000000000020e219         db  0x00 ; '.'
000000000020e21a         db  0x00 ; '.'
000000000020e21b         db  0x00 ; '.'
000000000020e21c         db  0x00 ; '.'
000000000020e21d         db  0x00 ; '.'
000000000020e21e         db  0x00 ; '.'
000000000020e21f         db  0x00 ; '.'
                     default_quoting_options:
000000000020e220         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020e221         db  0x00 ; '.'
000000000020e222         db  0x00 ; '.'
000000000020e223         db  0x00 ; '.'
000000000020e224         db  0x00 ; '.'
000000000020e225         db  0x00 ; '.'
000000000020e226         db  0x00 ; '.'
000000000020e227         db  0x00 ; '.'
000000000020e228         db  0x00 ; '.'
000000000020e229         db  0x00 ; '.'
000000000020e22a         db  0x00 ; '.'
000000000020e22b         db  0x00 ; '.'
000000000020e22c         db  0x00 ; '.'
000000000020e22d         db  0x00 ; '.'
000000000020e22e         db  0x00 ; '.'
000000000020e22f         db  0x00 ; '.'
000000000020e230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020e231         db  0x00 ; '.'
000000000020e232         db  0x00 ; '.'
000000000020e233         db  0x00 ; '.'
000000000020e234         db  0x00 ; '.'
000000000020e235         db  0x00 ; '.'
000000000020e236         db  0x00 ; '.'
000000000020e237         db  0x00 ; '.'
000000000020e238         db  0x00 ; '.'
000000000020e239         db  0x00 ; '.'
000000000020e23a         db  0x00 ; '.'
000000000020e23b         db  0x00 ; '.'
000000000020e23c         db  0x00 ; '.'
000000000020e23d         db  0x00 ; '.'
000000000020e23e         db  0x00 ; '.'
000000000020e23f         db  0x00 ; '.'
000000000020e240         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020e241         db  0x00 ; '.'
000000000020e242         db  0x00 ; '.'
000000000020e243         db  0x00 ; '.'
000000000020e244         db  0x00 ; '.'
000000000020e245         db  0x00 ; '.'
000000000020e246         db  0x00 ; '.'
000000000020e247         db  0x00 ; '.'
000000000020e248         db  0x00 ; '.'
000000000020e249         db  0x00 ; '.'
000000000020e24a         db  0x00 ; '.'
000000000020e24b         db  0x00 ; '.'
000000000020e24c         db  0x00 ; '.'
000000000020e24d         db  0x00 ; '.'
000000000020e24e         db  0x00 ; '.'
000000000020e24f         db  0x00 ; '.'
                     qword_20e250:
000000000020e250         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020e251         db  0x00 ; '.'
000000000020e252         db  0x00 ; '.'
000000000020e253         db  0x00 ; '.'
000000000020e254         db  0x00 ; '.'
000000000020e255         db  0x00 ; '.'
000000000020e256         db  0x00 ; '.'
000000000020e257         db  0x00 ; '.'
                     have_dupfd_cloexec.3326:
000000000020e258         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+94, rpl_fcntl+143, rpl_fcntl+438, rpl_fcntl+574
000000000020e259         db  0x00 ; '.'
000000000020e25a         db  0x00 ; '.'
000000000020e25b         db  0x00 ; '.'
000000000020e25c         db  0x00 ; '.'
000000000020e25d         db  0x00 ; '.'
000000000020e25e         db  0x00 ; '.'
000000000020e25f         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20e270; 0x20e7b0[ (1344 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20e270; 0x41ca20[ (2156464 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     getenv:
000000000020e270         extern function code                                   ; DATA XREF=getenv@GOT
                     free:
000000000020e278         extern function code                                   ; DATA XREF=free@GOT
                     abort:
000000000020e280         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020e288         extern function code                                   ; DATA XREF=__errno_location@GOT
                     fdatasync:
000000000020e290         extern function code                                   ; DATA XREF=fdatasync@GOT
                     unlink:
000000000020e298         extern function code                                   ; DATA XREF=unlink@GOT
                     strncmp:
000000000020e2a0         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020e2a8         extern function code
                     _exit:
000000000020e2b0         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
000000000020e2b8         extern function code                                   ; DATA XREF=__fpending@GOT
                     __read_chk:
000000000020e2c0         extern function code                                   ; DATA XREF=__read_chk@GOT
                     isatty:
000000000020e2c8         extern function code                                   ; DATA XREF=isatty@GOT
                     localeconv:
000000000020e2d0         extern function code                                   ; DATA XREF=localeconv@GOT
                     fcntl:
000000000020e2d8         extern function code                                   ; DATA XREF=fcntl@GOT
                     write:
000000000020e2e0         extern function code                                   ; DATA XREF=write@GOT
                     getpid:
000000000020e2e8         extern function code                                   ; DATA XREF=getpid@GOT
                     fread_unlocked:
000000000020e2f0         extern function code                                   ; DATA XREF=fread_unlocked@GOT
                     textdomain:
000000000020e2f8         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020e300         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020e308         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020e310         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020e318         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020e320         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
000000000020e328         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getuid:
000000000020e330         extern function code                                   ; DATA XREF=getuid@GOT
                     getopt_long:
000000000020e338         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020e340         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
000000000020e348         extern function code                                   ; DATA XREF=strchr@GOT
                     __fxstatat:
000000000020e350         extern function code                                   ; DATA XREF=__fxstatat@GOT
                     __overflow:
000000000020e358         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
000000000020e360         extern function code                                   ; DATA XREF=strrchr@GOT
                     ftruncate:
000000000020e368         extern function code                                   ; DATA XREF=ftruncate@GOT
                     lseek:
000000000020e370         extern function code                                   ; DATA XREF=lseek@GOT
                     gettimeofday:
000000000020e378         extern function code                                   ; DATA XREF=gettimeofday@GOT
                     __assert_fail:
000000000020e380         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     __strtoul_internal:
000000000020e388         extern function code                                   ; DATA XREF=__strtoul_internal@GOT
                     memset:
000000000020e390         extern function code                                   ; DATA XREF=memset@GOT
                     ioctl:
000000000020e398         extern function code                                   ; DATA XREF=ioctl@GOT
                     close:
000000000020e3a0         extern function code                                   ; DATA XREF=close@GOT
                     __libc_start_main:
000000000020e3a8         extern function code
                     memcmp:
000000000020e3b0         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020e3b8         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020e3c0         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
000000000020e3c8         extern function code                                   ; DATA XREF=strcmp@GOT
                     __memcpy_chk:
000000000020e3d0         extern function code                                   ; DATA XREF=__memcpy_chk@GOT
                     syscall:
000000000020e3d8         extern function code                                   ; DATA XREF=syscall@GOT
                     __gmon_start__:
000000000020e3e0         extern function code
                     memcpy:
000000000020e3e8         extern function code                                   ; DATA XREF=memcpy@GOT
                     time:
000000000020e3f0         extern function code                                   ; DATA XREF=time@GOT
                     fileno:
000000000020e3f8         extern function code                                   ; DATA XREF=fileno@GOT
                     getgid:
000000000020e400         extern function code                                   ; DATA XREF=getgid@GOT
                     sync:
000000000020e408         extern function code                                   ; DATA XREF=sync@GOT
                     malloc:
000000000020e410         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020e418         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020e420         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __fxstat:
000000000020e428         extern function code                                   ; DATA XREF=__fxstat@GOT
                     __freading:
000000000020e430         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
000000000020e438         extern function code                                   ; DATA XREF=realloc@GOT
                     __strcpy_chk:
000000000020e440         extern function code                                   ; DATA XREF=__strcpy_chk@GOT
                     fdopen:
000000000020e448         extern function code                                   ; DATA XREF=fdopen@GOT
                     setlocale:
000000000020e450         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020e458         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     setvbuf:
000000000020e460         extern function code                                   ; DATA XREF=setvbuf@GOT
                     chmod:
000000000020e468         extern function code                                   ; DATA XREF=chmod@GOT
                     memmove:
000000000020e470         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
000000000020e478         extern function code                                   ; DATA XREF=error@GOT
                     fsync:
000000000020e480         extern function code                                   ; DATA XREF=fsync@GOT
                     __explicit_bzero_chk:
000000000020e488         extern function code                                   ; DATA XREF=__explicit_bzero_chk@GOT
                     open:
000000000020e490         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
000000000020e498         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
000000000020e4a0         extern function code                                   ; DATA XREF=fopen@GOT
                     __cxa_atexit:
000000000020e4a8         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     renameat:
000000000020e4b0         extern function code                                   ; DATA XREF=renameat@GOT
                     getpagesize:
000000000020e4b8         extern function code                                   ; DATA XREF=getpagesize@GOT
                     getppid:
000000000020e4c0         extern function code                                   ; DATA XREF=getppid@GOT
                     exit:
000000000020e4c8         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020e4d0         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020e4d8         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020e4e0         extern function code
                     mbsinit:
000000000020e4e8         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020e4f0         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020e4f8         extern function code
                     __ctype_b_loc:
000000000020e500         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __sprintf_chk:
000000000020e508         extern function code                                   ; DATA XREF=__sprintf_chk@GOT
                     getenv@@GLIBC_2.2.5:
000000000020e510         extern function code
                     free@@GLIBC_2.2.5:
000000000020e518         extern function code
                     abort@@GLIBC_2.2.5:
000000000020e520         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020e528         extern function code
                     fdatasync@@GLIBC_2.2.5:
000000000020e530         extern function code
                     unlink@@GLIBC_2.2.5:
000000000020e538         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020e540         extern function code
                     _ITM_deregisterTMCloneTable_20e548:        // _ITM_deregisterTMCloneTable
000000000020e548         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020e550         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020e558         extern function code
                     __read_chk@@GLIBC_2.4:
000000000020e560         extern function code
                     isatty@@GLIBC_2.2.5:
000000000020e568         extern function code
                     localeconv@@GLIBC_2.2.5:
000000000020e570         extern function code
                     fcntl@@GLIBC_2.2.5:
000000000020e578         extern function code
                     write@@GLIBC_2.2.5:
000000000020e580         extern function code
                     getpid@@GLIBC_2.2.5:
000000000020e588         extern function code
                     fread_unlocked@@GLIBC_2.2.5:
000000000020e590         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020e598         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020e5a0         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020e5a8         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020e5b0         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020e5b8         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020e5c0         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020e5c8         extern function code
                     getuid@@GLIBC_2.2.5:
000000000020e5d0         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020e5d8         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020e5e0         extern function code
                     strchr@@GLIBC_2.2.5:
000000000020e5e8         extern function code
                     __fxstatat@@GLIBC_2.4:
000000000020e5f0         extern function code
                     __overflow@@GLIBC_2.2.5:
000000000020e5f8         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020e600         extern function code
                     ftruncate@@GLIBC_2.2.5:
000000000020e608         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020e610         extern function code
                     gettimeofday@@GLIBC_2.2.5:
000000000020e618         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000020e620         extern function code
                     __strtoul_internal@@GLIBC_2.2.5:
000000000020e628         extern function code
                     memset@@GLIBC_2.2.5:
000000000020e630         extern function code
                     ioctl@@GLIBC_2.2.5:
000000000020e638         extern function code
                     close@@GLIBC_2.2.5:
000000000020e640         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020e648         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020e650         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020e658         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020e660         extern function code
                     strcmp@@GLIBC_2.2.5:
000000000020e668         extern function code
                     __memcpy_chk@@GLIBC_2.3.4:
000000000020e670         extern function code
                     syscall@@GLIBC_2.2.5:
000000000020e678         extern function code
                     __gmon_start___20e680:        // __gmon_start__
000000000020e680         extern function code
                     memcpy@@GLIBC_2.14:
000000000020e688         extern function code
                     time@@GLIBC_2.2.5:
000000000020e690         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020e698         extern function code
                     getgid@@GLIBC_2.2.5:
000000000020e6a0         extern function code
                     sync@@GLIBC_2.2.5:
000000000020e6a8         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020e6b0         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020e6b8         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020e6c0         extern function code
                     __fxstat@@GLIBC_2.2.5:
000000000020e6c8         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020e6d0         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020e6d8         extern function code
                     __strcpy_chk@@GLIBC_2.3.4:
000000000020e6e0         extern function code
                     fdopen@@GLIBC_2.2.5:
000000000020e6e8         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020e6f0         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020e6f8         extern function code
                     setvbuf@@GLIBC_2.2.5:
000000000020e700         extern function code
                     chmod@@GLIBC_2.2.5:
000000000020e708         extern function code
                     memmove@@GLIBC_2.2.5:
000000000020e710         extern function code
                     error@@GLIBC_2.2.5:
000000000020e718         extern function code
                     fsync@@GLIBC_2.2.5:
000000000020e720         extern function code
                     __explicit_bzero_chk@@GLIBC_2.25:
000000000020e728         extern function code
                     open@@GLIBC_2.2.5:
000000000020e730         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020e738         extern function code
                     fopen@@GLIBC_2.2.5:
000000000020e740         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020e748         extern function code
                     renameat@@GLIBC_2.4:
000000000020e750         extern function code
                     getpagesize@@GLIBC_2.2.5:
000000000020e758         extern function code
                     getppid@@GLIBC_2.2.5:
000000000020e760         extern function code
                     exit@@GLIBC_2.2.5:
000000000020e768         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020e770         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020e778         extern function code
                     _ITM_registerTMCloneTable_20e780:        // _ITM_registerTMCloneTable
000000000020e780         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020e788         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020e790         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020e798         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020e7a0         extern function code
                     __sprintf_chk@@GLIBC_2.3.4:
000000000020e7a8         extern function code
