
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/base32
        UUID: D05B58FA-5FC6-25A0-6601-122AEC9A2661
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x7c98[ (31896 bytes)
        ; File offset : [0; 31896[ (31896 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x00 ; '.'
0000000000000019         db  0x20 ; ' '
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x50 ; 'P'
0000000000000029         db  0xc4 ; '.'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x98 ; '.'
00000000000000d1         db  0x7c ; '|'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x98 ; '.'
00000000000000d9         db  0x7c ; '|'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x10 ; '.'
00000000000000f1         db  0x8b ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x10 ; '.'
00000000000000f9         db  0x8b ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x10 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x8b ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x70 ; 'p'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x28 ; '('
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x38 ; '8'
0000000000000129         db  0x8c ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x38 ; '8'
0000000000000131         db  0x8c ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x38 ; '8'
0000000000000139         db  0x8c ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x3c ; '<'
0000000000000199         db  0x6d ; 'm'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x3c ; '<'
00000000000001a1         db  0x6d ; 'm'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x3c ; '<'
00000000000001a9         db  0x6d ; 'm'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x9c ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x9c ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=xstrtoumax+573
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x10 ; '.'
0000000000000209         db  0x8b ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x10 ; '.'
0000000000000211         db  0x8b ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x10 ; '.'
0000000000000219         db  0x8b ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xf0 ; '.'
0000000000000221         db  0x04 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xf0 ; '.'
0000000000000229         db  0x04 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xd0 ; '.'
0000000000000285         db  0x5b ; '['
0000000000000286         db  0x58 ; 'X'
0000000000000287         db  0xfa ; '.'
0000000000000288         db  0x5f ; '_'
0000000000000289         db  0xc6 ; '.'
000000000000028a         db  0x25 ; '%'
000000000000028b         db  0xa0 ; '.'
000000000000028c         db  0x66 ; 'f'
000000000000028d         db  0x01 ; '.'
000000000000028e         db  0x12 ; '.'
000000000000028f         db  0x2a ; '*'
0000000000000290         db  0xec ; '.'
0000000000000291         db  0x9a ; '.'
0000000000000292         db  0x26 ; '&'
0000000000000293         db  0x61 ; 'a'
0000000000000294         db  0x14 ; '.'
0000000000000295         db  0x89 ; '.'
0000000000000296         db  0xe6 ; '.'
0000000000000297         db  0x83 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x38 ; '8'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x38 ; '8'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x39 ; '9'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3f ; '?'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x32 ; '2'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0xb3 ; '.'
00000000000002dd         db  0xa2 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x8f8[ (1560 bytes)
        ; File offset : [736; 2296[ (1560 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x58 ; 'X'
00000000000002f9         db  0x02 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x80 ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x08 ; '.'
0000000000000329         db  0x01 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x37 ; '7'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0xbc ; '.'
0000000000000359         db  0x02 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x20 ; ' '
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x8c ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0xa5 ; '.'
0000000000000389         db  0x01 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xf2 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xf0 ; '.'
00000000000003b9         db  0x01 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x42 ; 'B'
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0xec ; '.'                                         ; DATA XREF=xstrtoumax+420
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x4e ; 'N'                                         ; DATA XREF=xstrtoumax+437, xstrtoumax+806, xstrtoumax+878
0000000000000401         db  0x00 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0xbf ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xeb ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x5e ; '^'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x8b ; '.'
0000000000000461         db  0x01 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x29 ; ')'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0xb0 ; '.'
0000000000000491         db  0x01 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x2b ; '+'
00000000000004a9         db  0x02 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x46 ; 'F'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x35 ; '5'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0xb1 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x36 ; '6'
0000000000000509         db  0x02 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x01 ; '.'
0000000000000521         db  0x01 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xd6 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x92 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x12 ; '.'
0000000000000569         db  0x02 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x19 ; '.'
0000000000000581         db  0x01 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x49 ; 'I'
0000000000000599         db  0x02 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0xe4 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x0b ; '.'
00000000000005c9         db  0x02 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0xd8 ; '.'
00000000000005e1         db  0x02 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x20 ; ' '
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x3b ; ';'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x97 ; '.'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x49 ; 'I'
0000000000000629         db  0x01 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x0b ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x58 ; 'X'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x79 ; 'y'
0000000000000671         db  0x01 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0xfb ; '.'
0000000000000689         db  0x01 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x78 ; 'x'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x1f ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x12 ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0xe4 ; '.'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x58 ; 'X'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x24 ; '$'
0000000000000719         db  0x02 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x31 ; '1'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x78 ; 'x'
0000000000000749         db  0x02 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x8d ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x9e ; '.'
0000000000000779         db  0x01 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x20 ; ' '
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0xe7 ; '.'
00000000000007a9         db  0x02 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x20 ; ' '
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x50 ; 'P'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x6f ; 'o'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0xd5 ; '.'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x22 ; '"'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x64 ; 'd'
0000000000000809         db  0x01 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x2e ; '.'
0000000000000821         db  0x01 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x11 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x19 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x88 ; '.'
0000000000000829         db  0x90 ; '.'
000000000000082a         db  0x20 ; ' '
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x08 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x5d ; ']'
0000000000000839         db  0x02 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x11 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x19 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x80 ; '.'
0000000000000841         db  0x90 ; '.'
0000000000000842         db  0x20 ; ' '
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x08 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x86 ; '.'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x11 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x90 ; '.'
0000000000000859         db  0x90 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x08 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x99 ; '.'
0000000000000869         db  0x00 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x21 ; '!'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x19 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0xa8 ; '.'
0000000000000871         db  0x90 ; '.'
0000000000000872         db  0x20 ; ' '
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x08 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x68 ; 'h'
0000000000000881         db  0x02 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x11 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x19 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0xa8 ; '.'
0000000000000889         db  0x90 ; '.'
000000000000088a         db  0x20 ; ' '
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x08 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0xb7 ; '.'
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x21 ; '!'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x80 ; '.'
00000000000008a1         db  0x90 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x08 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x84 ; '.'
00000000000008b1         db  0x01 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x11 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x19 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0xc0 ; '.'
00000000000008b9         db  0x90 ; '.'
00000000000008ba         db  0x20 ; ' '
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x08 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x3f ; '?'
00000000000008c9         db  0x00 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x11 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x19 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x98 ; '.'
00000000000008d1         db  0x90 ; '.'
00000000000008d2         db  0x20 ; ' '
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x04 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x72 ; 'r'
00000000000008e1         db  0x01 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x11 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x19 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0xa0 ; '.'
00000000000008e9         db  0x90 ; '.'
00000000000008ea         db  0x20 ; ' '
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x08 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x8f8; 0xbf9[ (769 bytes)
        ; File offset : [2296; 3065[ (769 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

00000000000008f8         db  0x00 ; '.'
00000000000008f9         db  0x6c ; 'l'
00000000000008fa         db  0x69 ; 'i'
00000000000008fb         db  0x62 ; 'b'
00000000000008fc         db  0x63 ; 'c'
00000000000008fd         db  0x2e ; '.'
00000000000008fe         db  0x73 ; 's'
00000000000008ff         db  0x6f ; 'o'
0000000000000900         db  0x2e ; '.'
0000000000000901         db  0x36 ; '6'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x66 ; 'f'
0000000000000904         db  0x66 ; 'f'
0000000000000905         db  0x6c ; 'l'
0000000000000906         db  0x75 ; 'u'
0000000000000907         db  0x73 ; 's'
0000000000000908         db  0x68 ; 'h'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x5f ; '_'
000000000000090b         db  0x5f ; '_'
000000000000090c         db  0x70 ; 'p'
000000000000090d         db  0x72 ; 'r'
000000000000090e         db  0x69 ; 'i'
000000000000090f         db  0x6e ; 'n'
0000000000000910         db  0x74 ; 't'
0000000000000911         db  0x66 ; 'f'
0000000000000912         db  0x5f ; '_'
0000000000000913         db  0x63 ; 'c'
0000000000000914         db  0x68 ; 'h'
0000000000000915         db  0x6b ; 'k'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x73 ; 's'
0000000000000918         db  0x65 ; 'e'
0000000000000919         db  0x74 ; 't'
000000000000091a         db  0x6c ; 'l'
000000000000091b         db  0x6f ; 'o'
000000000000091c         db  0x63 ; 'c'
000000000000091d         db  0x61 ; 'a'
000000000000091e         db  0x6c ; 'l'
000000000000091f         db  0x65 ; 'e'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x6d ; 'm'
0000000000000922         db  0x62 ; 'b'
0000000000000923         db  0x72 ; 'r'
0000000000000924         db  0x74 ; 't'
0000000000000925         db  0x6f ; 'o'
0000000000000926         db  0x77 ; 'w'
0000000000000927         db  0x63 ; 'c'
0000000000000928         db  0x00 ; '.'
0000000000000929         db  0x66 ; 'f'
000000000000092a         db  0x6f ; 'o'
000000000000092b         db  0x70 ; 'p'
000000000000092c         db  0x65 ; 'e'
000000000000092d         db  0x6e ; 'n'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x73 ; 's'
0000000000000930         db  0x74 ; 't'
0000000000000931         db  0x72 ; 'r'
0000000000000932         db  0x6e ; 'n'
0000000000000933         db  0x63 ; 'c'
0000000000000934         db  0x6d ; 'm'
0000000000000935         db  0x70 ; 'p'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x6f ; 'o'
0000000000000938         db  0x70 ; 'p'
0000000000000939         db  0x74 ; 't'
000000000000093a         db  0x69 ; 'i'
000000000000093b         db  0x6e ; 'n'
000000000000093c         db  0x64 ; 'd'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x73 ; 's'
000000000000093f         db  0x74 ; 't'
0000000000000940         db  0x72 ; 'r'
0000000000000941         db  0x72 ; 'r'
0000000000000942         db  0x63 ; 'c'
0000000000000943         db  0x68 ; 'h'
0000000000000944         db  0x72 ; 'r'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x64 ; 'd'
0000000000000947         db  0x63 ; 'c'
0000000000000948         db  0x67 ; 'g'
0000000000000949         db  0x65 ; 'e'
000000000000094a         db  0x74 ; 't'
000000000000094b         db  0x74 ; 't'
000000000000094c         db  0x65 ; 'e'
000000000000094d         db  0x78 ; 'x'
000000000000094e         db  0x74 ; 't'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x65 ; 'e'
0000000000000951         db  0x72 ; 'r'
0000000000000952         db  0x72 ; 'r'
0000000000000953         db  0x6f ; 'o'
0000000000000954         db  0x72 ; 'r'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x5f ; '_'
0000000000000957         db  0x5f ; '_'
0000000000000958         db  0x73 ; 's'
0000000000000959         db  0x74 ; 't'
000000000000095a         db  0x61 ; 'a'
000000000000095b         db  0x63 ; 'c'
000000000000095c         db  0x6b ; 'k'
000000000000095d         db  0x5f ; '_'
000000000000095e         db  0x63 ; 'c'
000000000000095f         db  0x68 ; 'h'
0000000000000960         db  0x6b ; 'k'
0000000000000961         db  0x5f ; '_'
0000000000000962         db  0x66 ; 'f'
0000000000000963         db  0x61 ; 'a'
0000000000000964         db  0x69 ; 'i'
0000000000000965         db  0x6c ; 'l'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x69 ; 'i'
0000000000000968         db  0x73 ; 's'
0000000000000969         db  0x77 ; 'w'
000000000000096a         db  0x70 ; 'p'
000000000000096b         db  0x72 ; 'r'
000000000000096c         db  0x69 ; 'i'
000000000000096d         db  0x6e ; 'n'
000000000000096e         db  0x74 ; 't'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0x72 ; 'r'
0000000000000971         db  0x65 ; 'e'
0000000000000972         db  0x61 ; 'a'
0000000000000973         db  0x6c ; 'l'
0000000000000974         db  0x6c ; 'l'
0000000000000975         db  0x6f ; 'o'
0000000000000976         db  0x63 ; 'c'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0x61 ; 'a'
0000000000000979         db  0x62 ; 'b'
000000000000097a         db  0x6f ; 'o'
000000000000097b         db  0x72 ; 'r'
000000000000097c         db  0x74 ; 't'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x73 ; 's'
000000000000097f         db  0x74 ; 't'
0000000000000980         db  0x64 ; 'd'
0000000000000981         db  0x69 ; 'i'
0000000000000982         db  0x6e ; 'n'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x5f ; '_'
0000000000000985         db  0x65 ; 'e'
0000000000000986         db  0x78 ; 'x'
0000000000000987         db  0x69 ; 'i'
0000000000000988         db  0x74 ; 't'
0000000000000989         db  0x00 ; '.'
000000000000098a         db  0x6d ; 'm'
000000000000098b         db  0x65 ; 'e'
000000000000098c         db  0x6d ; 'm'
000000000000098d         db  0x63 ; 'c'
000000000000098e         db  0x68 ; 'h'
000000000000098f         db  0x72 ; 'r'
0000000000000990         db  0x00 ; '.'
0000000000000991         db  0x70 ; 'p'
0000000000000992         db  0x72 ; 'r'
0000000000000993         db  0x6f ; 'o'
0000000000000994         db  0x67 ; 'g'
0000000000000995         db  0x72 ; 'r'
0000000000000996         db  0x61 ; 'a'
0000000000000997         db  0x6d ; 'm'
0000000000000998         db  0x5f ; '_'
0000000000000999         db  0x69 ; 'i'
000000000000099a         db  0x6e ; 'n'
000000000000099b         db  0x76 ; 'v'
000000000000099c         db  0x6f ; 'o'
000000000000099d         db  0x63 ; 'c'
000000000000099e         db  0x61 ; 'a'
000000000000099f         db  0x74 ; 't'
00000000000009a0         db  0x69 ; 'i'
00000000000009a1         db  0x6f ; 'o'
00000000000009a2         db  0x6e ; 'n'
00000000000009a3         db  0x5f ; '_'
00000000000009a4         db  0x6e ; 'n'
00000000000009a5         db  0x61 ; 'a'
00000000000009a6         db  0x6d ; 'm'
00000000000009a7         db  0x65 ; 'e'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x5f ; '_'
00000000000009aa         db  0x5f ; '_'
00000000000009ab         db  0x61 ; 'a'
00000000000009ac         db  0x73 ; 's'
00000000000009ad         db  0x73 ; 's'
00000000000009ae         db  0x65 ; 'e'
00000000000009af         db  0x72 ; 'r'
00000000000009b0         db  0x74 ; 't'
00000000000009b1         db  0x5f ; '_'
00000000000009b2         db  0x66 ; 'f'
00000000000009b3         db  0x61 ; 'a'
00000000000009b4         db  0x69 ; 'i'
00000000000009b5         db  0x6c ; 'l'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x5f ; '_'
00000000000009b8         db  0x5f ; '_'
00000000000009b9         db  0x63 ; 'c'
00000000000009ba         db  0x74 ; 't'
00000000000009bb         db  0x79 ; 'y'
00000000000009bc         db  0x70 ; 'p'
00000000000009bd         db  0x65 ; 'e'
00000000000009be         db  0x5f ; '_'
00000000000009bf         db  0x67 ; 'g'
00000000000009c0         db  0x65 ; 'e'
00000000000009c1         db  0x74 ; 't'
00000000000009c2         db  0x5f ; '_'
00000000000009c3         db  0x6d ; 'm'
00000000000009c4         db  0x62 ; 'b'
00000000000009c5         db  0x5f ; '_'
00000000000009c6         db  0x63 ; 'c'
00000000000009c7         db  0x75 ; 'u'
00000000000009c8         db  0x72 ; 'r'
00000000000009c9         db  0x5f ; '_'
00000000000009ca         db  0x6d ; 'm'
00000000000009cb         db  0x61 ; 'a'
00000000000009cc         db  0x78 ; 'x'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x70 ; 'p'
00000000000009cf         db  0x6f ; 'o'
00000000000009d0         db  0x73 ; 's'
00000000000009d1         db  0x69 ; 'i'
00000000000009d2         db  0x78 ; 'x'
00000000000009d3         db  0x5f ; '_'
00000000000009d4         db  0x66 ; 'f'
00000000000009d5         db  0x61 ; 'a'
00000000000009d6         db  0x64 ; 'd'
00000000000009d7         db  0x76 ; 'v'
00000000000009d8         db  0x69 ; 'i'
00000000000009d9         db  0x73 ; 's'
00000000000009da         db  0x65 ; 'e'
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x63 ; 'c'
00000000000009dd         db  0x61 ; 'a'
00000000000009de         db  0x6c ; 'l'
00000000000009df         db  0x6c ; 'l'
00000000000009e0         db  0x6f ; 'o'
00000000000009e1         db  0x63 ; 'c'
00000000000009e2         db  0x00 ; '.'
00000000000009e3         db  0x73 ; 's'
00000000000009e4         db  0x74 ; 't'
00000000000009e5         db  0x72 ; 'r'
00000000000009e6         db  0x6c ; 'l'
00000000000009e7         db  0x65 ; 'e'
00000000000009e8         db  0x6e ; 'n'
00000000000009e9         db  0x00 ; '.'
00000000000009ea         db  0x66 ; 'f'
00000000000009eb         db  0x72 ; 'r'
00000000000009ec         db  0x65 ; 'e'
00000000000009ed         db  0x61 ; 'a'
00000000000009ee         db  0x64 ; 'd'
00000000000009ef         db  0x5f ; '_'
00000000000009f0         db  0x75 ; 'u'
00000000000009f1         db  0x6e ; 'n'
00000000000009f2         db  0x6c ; 'l'
00000000000009f3         db  0x6f ; 'o'
00000000000009f4         db  0x63 ; 'c'
00000000000009f5         db  0x6b ; 'k'
00000000000009f6         db  0x65 ; 'e'
00000000000009f7         db  0x64 ; 'd'
00000000000009f8         db  0x00 ; '.'
00000000000009f9         db  0x6d ; 'm'
00000000000009fa         db  0x65 ; 'e'
00000000000009fb         db  0x6d ; 'm'
00000000000009fc         db  0x73 ; 's'
00000000000009fd         db  0x65 ; 'e'
00000000000009fe         db  0x74 ; 't'
00000000000009ff         db  0x00 ; '.'
                     aErrnolocation:
0000000000000a00         db         "__errno_location", 0
0000000000000a11         db  0x6d ; 'm'
0000000000000a12         db  0x65 ; 'e'
0000000000000a13         db  0x6d ; 'm'
0000000000000a14         db  0x63 ; 'c'
0000000000000a15         db  0x6d ; 'm'
0000000000000a16         db  0x70 ; 'p'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x5f ; '_'
0000000000000a19         db  0x5f ; '_'
0000000000000a1a         db  0x66 ; 'f'
0000000000000a1b         db  0x70 ; 'p'
0000000000000a1c         db  0x72 ; 'r'
0000000000000a1d         db  0x69 ; 'i'
0000000000000a1e         db  0x6e ; 'n'
0000000000000a1f         db  0x74 ; 't'
0000000000000a20         db  0x66 ; 'f'
0000000000000a21         db  0x5f ; '_'
0000000000000a22         db  0x63 ; 'c'
0000000000000a23         db  0x68 ; 'h'
0000000000000a24         db  0x6b ; 'k'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x73 ; 's'
0000000000000a27         db  0x74 ; 't'
0000000000000a28         db  0x64 ; 'd'
0000000000000a29         db  0x6f ; 'o'
0000000000000a2a         db  0x75 ; 'u'
0000000000000a2b         db  0x74 ; 't'
0000000000000a2c         db  0x00 ; '.'
0000000000000a2d         db  0x6c ; 'l'
0000000000000a2e         db  0x73 ; 's'
0000000000000a2f         db  0x65 ; 'e'
0000000000000a30         db  0x65 ; 'e'
0000000000000a31         db  0x6b ; 'k'
0000000000000a32         db  0x00 ; '.'
0000000000000a33         db  0x6d ; 'm'
0000000000000a34         db  0x65 ; 'e'
0000000000000a35         db  0x6d ; 'm'
0000000000000a36         db  0x63 ; 'c'
0000000000000a37         db  0x70 ; 'p'
0000000000000a38         db  0x79 ; 'y'
0000000000000a39         db  0x00 ; '.'
0000000000000a3a         db  0x66 ; 'f'
0000000000000a3b         db  0x63 ; 'c'
0000000000000a3c         db  0x6c ; 'l'
0000000000000a3d         db  0x6f ; 'o'
0000000000000a3e         db  0x73 ; 's'
0000000000000a3f         db  0x65 ; 'e'
0000000000000a40         db  0x00 ; '.'
0000000000000a41         db  0x6d ; 'm'
0000000000000a42         db  0x61 ; 'a'
0000000000000a43         db  0x6c ; 'l'
0000000000000a44         db  0x6c ; 'l'
0000000000000a45         db  0x6f ; 'o'
0000000000000a46         db  0x63 ; 'c'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0x6d ; 'm'
0000000000000a49         db  0x62 ; 'b'
0000000000000a4a         db  0x73 ; 's'
0000000000000a4b         db  0x69 ; 'i'
0000000000000a4c         db  0x6e ; 'n'
0000000000000a4d         db  0x69 ; 'i'
0000000000000a4e         db  0x74 ; 't'
0000000000000a4f         db  0x00 ; '.'
0000000000000a50         db  0x6e ; 'n'
0000000000000a51         db  0x6c ; 'l'
0000000000000a52         db  0x5f ; '_'
0000000000000a53         db  0x6c ; 'l'
0000000000000a54         db  0x61 ; 'a'
0000000000000a55         db  0x6e ; 'n'
0000000000000a56         db  0x67 ; 'g'
0000000000000a57         db  0x69 ; 'i'
0000000000000a58         db  0x6e ; 'n'
0000000000000a59         db  0x66 ; 'f'
0000000000000a5a         db  0x6f ; 'o'
0000000000000a5b         db  0x00 ; '.'
0000000000000a5c         db  0x5f ; '_'
0000000000000a5d         db  0x5f ; '_'
0000000000000a5e         db  0x63 ; 'c'
0000000000000a5f         db  0x74 ; 't'
0000000000000a60         db  0x79 ; 'y'
0000000000000a61         db  0x70 ; 'p'
0000000000000a62         db  0x65 ; 'e'
0000000000000a63         db  0x5f ; '_'
0000000000000a64         db  0x62 ; 'b'
0000000000000a65         db  0x5f ; '_'
0000000000000a66         db  0x6c ; 'l'
0000000000000a67         db  0x6f ; 'o'
0000000000000a68         db  0x63 ; 'c'
0000000000000a69         db  0x00 ; '.'
0000000000000a6a         db  0x6f ; 'o'
0000000000000a6b         db  0x70 ; 'p'
0000000000000a6c         db  0x74 ; 't'
0000000000000a6d         db  0x61 ; 'a'
0000000000000a6e         db  0x72 ; 'r'
0000000000000a6f         db  0x67 ; 'g'
0000000000000a70         db  0x00 ; '.'
0000000000000a71         db  0x5f ; '_'
0000000000000a72         db  0x5f ; '_'
0000000000000a73         db  0x66 ; 'f'
0000000000000a74         db  0x72 ; 'r'
0000000000000a75         db  0x65 ; 'e'
0000000000000a76         db  0x61 ; 'a'
0000000000000a77         db  0x64 ; 'd'
0000000000000a78         db  0x69 ; 'i'
0000000000000a79         db  0x6e ; 'n'
0000000000000a7a         db  0x67 ; 'g'
0000000000000a7b         db  0x00 ; '.'
0000000000000a7c         db  0x73 ; 's'
0000000000000a7d         db  0x74 ; 't'
0000000000000a7e         db  0x64 ; 'd'
0000000000000a7f         db  0x65 ; 'e'
0000000000000a80         db  0x72 ; 'r'
0000000000000a81         db  0x72 ; 'r'
0000000000000a82         db  0x00 ; '.'
0000000000000a83         db  0x67 ; 'g'
0000000000000a84         db  0x65 ; 'e'
0000000000000a85         db  0x74 ; 't'
0000000000000a86         db  0x6f ; 'o'
0000000000000a87         db  0x70 ; 'p'
0000000000000a88         db  0x74 ; 't'
0000000000000a89         db  0x5f ; '_'
0000000000000a8a         db  0x6c ; 'l'
0000000000000a8b         db  0x6f ; 'o'
0000000000000a8c         db  0x6e ; 'n'
0000000000000a8d         db  0x67 ; 'g'
0000000000000a8e         db  0x00 ; '.'
0000000000000a8f         db  0x66 ; 'f'
0000000000000a90         db  0x69 ; 'i'
0000000000000a91         db  0x6c ; 'l'
0000000000000a92         db  0x65 ; 'e'
0000000000000a93         db  0x6e ; 'n'
0000000000000a94         db  0x6f ; 'o'
0000000000000a95         db  0x00 ; '.'
0000000000000a96         db  0x66 ; 'f'
0000000000000a97         db  0x77 ; 'w'
0000000000000a98         db  0x72 ; 'r'
0000000000000a99         db  0x69 ; 'i'
0000000000000a9a         db  0x74 ; 't'
0000000000000a9b         db  0x65 ; 'e'
0000000000000a9c         db  0x00 ; '.'
0000000000000a9d         db  0x5f ; '_'
0000000000000a9e         db  0x5f ; '_'
0000000000000a9f         db  0x66 ; 'f'
0000000000000aa0         db  0x70 ; 'p'
0000000000000aa1         db  0x65 ; 'e'
0000000000000aa2         db  0x6e ; 'n'
0000000000000aa3         db  0x64 ; 'd'
0000000000000aa4         db  0x69 ; 'i'
0000000000000aa5         db  0x6e ; 'n'
0000000000000aa6         db  0x67 ; 'g'
0000000000000aa7         db  0x00 ; '.'
0000000000000aa8         db  0x73 ; 's'
0000000000000aa9         db  0x74 ; 't'
0000000000000aaa         db  0x72 ; 'r'
0000000000000aab         db  0x63 ; 'c'
0000000000000aac         db  0x68 ; 'h'
0000000000000aad         db  0x72 ; 'r'
0000000000000aae         db  0x00 ; '.'
0000000000000aaf         db  0x70 ; 'p'
0000000000000ab0         db  0x72 ; 'r'
0000000000000ab1         db  0x6f ; 'o'
0000000000000ab2         db  0x67 ; 'g'
0000000000000ab3         db  0x72 ; 'r'
0000000000000ab4         db  0x61 ; 'a'
0000000000000ab5         db  0x6d ; 'm'
0000000000000ab6         db  0x5f ; '_'
0000000000000ab7         db  0x69 ; 'i'
0000000000000ab8         db  0x6e ; 'n'
0000000000000ab9         db  0x76 ; 'v'
0000000000000aba         db  0x6f ; 'o'
0000000000000abb         db  0x63 ; 'c'
0000000000000abc         db  0x61 ; 'a'
0000000000000abd         db  0x74 ; 't'
0000000000000abe         db  0x69 ; 'i'
0000000000000abf         db  0x6f ; 'o'
0000000000000ac0         db  0x6e ; 'n'
0000000000000ac1         db  0x5f ; '_'
0000000000000ac2         db  0x73 ; 's'
0000000000000ac3         db  0x68 ; 'h'
0000000000000ac4         db  0x6f ; 'o'
0000000000000ac5         db  0x72 ; 'r'
0000000000000ac6         db  0x74 ; 't'
0000000000000ac7         db  0x5f ; '_'
0000000000000ac8         db  0x6e ; 'n'
0000000000000ac9         db  0x61 ; 'a'
0000000000000aca         db  0x6d ; 'm'
0000000000000acb         db  0x65 ; 'e'
0000000000000acc         db  0x00 ; '.'
0000000000000acd         db  0x5f ; '_'
0000000000000ace         db  0x5f ; '_'
0000000000000acf         db  0x63 ; 'c'
0000000000000ad0         db  0x78 ; 'x'
0000000000000ad1         db  0x61 ; 'a'
0000000000000ad2         db  0x5f ; '_'
0000000000000ad3         db  0x66 ; 'f'
0000000000000ad4         db  0x69 ; 'i'
0000000000000ad5         db  0x6e ; 'n'
0000000000000ad6         db  0x61 ; 'a'
0000000000000ad7         db  0x6c ; 'l'
0000000000000ad8         db  0x69 ; 'i'
0000000000000ad9         db  0x7a ; 'z'
0000000000000ada         db  0x65 ; 'e'
0000000000000adb         db  0x00 ; '.'
0000000000000adc         db  0x6d ; 'm'
0000000000000add         db  0x65 ; 'e'
0000000000000ade         db  0x6d ; 'm'
0000000000000adf         db  0x6d ; 'm'
0000000000000ae0         db  0x6f ; 'o'
0000000000000ae1         db  0x76 ; 'v'
0000000000000ae2         db  0x65 ; 'e'
0000000000000ae3         db  0x00 ; '.'
0000000000000ae4         db  0x62 ; 'b'
0000000000000ae5         db  0x69 ; 'i'
0000000000000ae6         db  0x6e ; 'n'
0000000000000ae7         db  0x64 ; 'd'
0000000000000ae8         db  0x74 ; 't'
0000000000000ae9         db  0x65 ; 'e'
0000000000000aea         db  0x78 ; 'x'
0000000000000aeb         db  0x74 ; 't'
0000000000000aec         db  0x64 ; 'd'
0000000000000aed         db  0x6f ; 'o'
0000000000000aee         db  0x6d ; 'm'
0000000000000aef         db  0x61 ; 'a'
0000000000000af0         db  0x69 ; 'i'
0000000000000af1         db  0x6e ; 'n'
0000000000000af2         db  0x00 ; '.'
0000000000000af3         db  0x66 ; 'f'
0000000000000af4         db  0x77 ; 'w'
0000000000000af5         db  0x72 ; 'r'
0000000000000af6         db  0x69 ; 'i'
0000000000000af7         db  0x74 ; 't'
0000000000000af8         db  0x65 ; 'e'
0000000000000af9         db  0x5f ; '_'
0000000000000afa         db  0x75 ; 'u'
0000000000000afb         db  0x6e ; 'n'
0000000000000afc         db  0x6c ; 'l'
0000000000000afd         db  0x6f ; 'o'
0000000000000afe         db  0x63 ; 'c'
0000000000000aff         db  0x6b ; 'k'
0000000000000b00         db  0x65 ; 'e'
0000000000000b01         db  0x64 ; 'd'
0000000000000b02         db  0x00 ; '.'
0000000000000b03         db  0x73 ; 's'
0000000000000b04         db  0x74 ; 't'
0000000000000b05         db  0x72 ; 'r'
0000000000000b06         db  0x63 ; 'c'
0000000000000b07         db  0x6d ; 'm'
0000000000000b08         db  0x70 ; 'p'
0000000000000b09         db  0x00 ; '.'
0000000000000b0a         db  0x5f ; '_'
0000000000000b0b         db  0x5f ; '_'
0000000000000b0c         db  0x6c ; 'l'
0000000000000b0d         db  0x69 ; 'i'
0000000000000b0e         db  0x62 ; 'b'
0000000000000b0f         db  0x63 ; 'c'
0000000000000b10         db  0x5f ; '_'
0000000000000b11         db  0x73 ; 's'
0000000000000b12         db  0x74 ; 't'
0000000000000b13         db  0x61 ; 'a'
0000000000000b14         db  0x72 ; 'r'
0000000000000b15         db  0x74 ; 't'
0000000000000b16         db  0x5f ; '_'
0000000000000b17         db  0x6d ; 'm'
0000000000000b18         db  0x61 ; 'a'
0000000000000b19         db  0x69 ; 'i'
0000000000000b1a         db  0x6e ; 'n'
0000000000000b1b         db  0x00 ; '.'
0000000000000b1c         db  0x66 ; 'f'
0000000000000b1d         db  0x73 ; 's'
0000000000000b1e         db  0x65 ; 'e'
0000000000000b1f         db  0x65 ; 'e'
0000000000000b20         db  0x6b ; 'k'
0000000000000b21         db  0x6f ; 'o'
0000000000000b22         db  0x00 ; '.'
0000000000000b23         db  0x5f ; '_'
0000000000000b24         db  0x5f ; '_'
0000000000000b25         db  0x6f ; 'o'
0000000000000b26         db  0x76 ; 'v'
0000000000000b27         db  0x65 ; 'e'
0000000000000b28         db  0x72 ; 'r'
0000000000000b29         db  0x66 ; 'f'
0000000000000b2a         db  0x6c ; 'l'
0000000000000b2b         db  0x6f ; 'o'
0000000000000b2c         db  0x77 ; 'w'
0000000000000b2d         db  0x00 ; '.'
0000000000000b2e         db  0x5f ; '_'
0000000000000b2f         db  0x5f ; '_'
0000000000000b30         db  0x73 ; 's'
0000000000000b31         db  0x74 ; 't'
0000000000000b32         db  0x72 ; 'r'
0000000000000b33         db  0x74 ; 't'
0000000000000b34         db  0x6f ; 'o'
0000000000000b35         db  0x75 ; 'u'
0000000000000b36         db  0x6c ; 'l'
0000000000000b37         db  0x5f ; '_'
0000000000000b38         db  0x69 ; 'i'
0000000000000b39         db  0x6e ; 'n'
0000000000000b3a         db  0x74 ; 't'
0000000000000b3b         db  0x65 ; 'e'
0000000000000b3c         db  0x72 ; 'r'
0000000000000b3d         db  0x6e ; 'n'
0000000000000b3e         db  0x61 ; 'a'
0000000000000b3f         db  0x6c ; 'l'
0000000000000b40         db  0x00 ; '.'
                     aFputsunlocked:
0000000000000b41         db         "fputs_unlocked", 0
0000000000000b50         db  0x66 ; 'f'
0000000000000b51         db  0x72 ; 'r'
0000000000000b52         db  0x65 ; 'e'
0000000000000b53         db  0x65 ; 'e'
0000000000000b54         db  0x00 ; '.'
0000000000000b55         db  0x5f ; '_'
0000000000000b56         db  0x5f ; '_'
0000000000000b57         db  0x70 ; 'p'
0000000000000b58         db  0x72 ; 'r'
0000000000000b59         db  0x6f ; 'o'
0000000000000b5a         db  0x67 ; 'g'
0000000000000b5b         db  0x6e ; 'n'
0000000000000b5c         db  0x61 ; 'a'
0000000000000b5d         db  0x6d ; 'm'
0000000000000b5e         db  0x65 ; 'e'
0000000000000b5f         db  0x00 ; '.'
0000000000000b60         db  0x5f ; '_'
0000000000000b61         db  0x5f ; '_'
0000000000000b62         db  0x70 ; 'p'
0000000000000b63         db  0x72 ; 'r'
0000000000000b64         db  0x6f ; 'o'
0000000000000b65         db  0x67 ; 'g'
0000000000000b66         db  0x6e ; 'n'
0000000000000b67         db  0x61 ; 'a'
0000000000000b68         db  0x6d ; 'm'
0000000000000b69         db  0x65 ; 'e'
0000000000000b6a         db  0x5f ; '_'
0000000000000b6b         db  0x66 ; 'f'
0000000000000b6c         db  0x75 ; 'u'
0000000000000b6d         db  0x6c ; 'l'
0000000000000b6e         db  0x6c ; 'l'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0x5f ; '_'
0000000000000b71         db  0x5f ; '_'
0000000000000b72         db  0x63 ; 'c'
0000000000000b73         db  0x78 ; 'x'
0000000000000b74         db  0x61 ; 'a'
0000000000000b75         db  0x5f ; '_'
0000000000000b76         db  0x61 ; 'a'
0000000000000b77         db  0x74 ; 't'
0000000000000b78         db  0x65 ; 'e'
0000000000000b79         db  0x78 ; 'x'
0000000000000b7a         db  0x69 ; 'i'
0000000000000b7b         db  0x74 ; 't'
0000000000000b7c         db  0x00 ; '.'
0000000000000b7d         db  0x47 ; 'G'
0000000000000b7e         db  0x4c ; 'L'
0000000000000b7f         db  0x49 ; 'I'
0000000000000b80         db  0x42 ; 'B'
0000000000000b81         db  0x43 ; 'C'
0000000000000b82         db  0x5f ; '_'
0000000000000b83         db  0x32 ; '2'
0000000000000b84         db  0x2e ; '.'
0000000000000b85         db  0x33 ; '3'
0000000000000b86         db  0x00 ; '.'
0000000000000b87         db  0x47 ; 'G'
0000000000000b88         db  0x4c ; 'L'
0000000000000b89         db  0x49 ; 'I'
0000000000000b8a         db  0x42 ; 'B'
0000000000000b8b         db  0x43 ; 'C'
0000000000000b8c         db  0x5f ; '_'
0000000000000b8d         db  0x32 ; '2'
0000000000000b8e         db  0x2e ; '.'
0000000000000b8f         db  0x33 ; '3'
0000000000000b90         db  0x2e ; '.'
0000000000000b91         db  0x34 ; '4'
0000000000000b92         db  0x00 ; '.'
0000000000000b93         db  0x47 ; 'G'
0000000000000b94         db  0x4c ; 'L'
0000000000000b95         db  0x49 ; 'I'
0000000000000b96         db  0x42 ; 'B'
0000000000000b97         db  0x43 ; 'C'
0000000000000b98         db  0x5f ; '_'
0000000000000b99         db  0x32 ; '2'
0000000000000b9a         db  0x2e ; '.'
0000000000000b9b         db  0x31 ; '1'
0000000000000b9c         db  0x34 ; '4'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x47 ; 'G'
0000000000000b9f         db  0x4c ; 'L'
0000000000000ba0         db  0x49 ; 'I'
0000000000000ba1         db  0x42 ; 'B'
0000000000000ba2         db  0x43 ; 'C'
0000000000000ba3         db  0x5f ; '_'
0000000000000ba4         db  0x32 ; '2'
0000000000000ba5         db  0x2e ; '.'
0000000000000ba6         db  0x34 ; '4'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x47 ; 'G'
0000000000000ba9         db  0x4c ; 'L'
0000000000000baa         db  0x49 ; 'I'
0000000000000bab         db  0x42 ; 'B'
0000000000000bac         db  0x43 ; 'C'
0000000000000bad         db  0x5f ; '_'
0000000000000bae         db  0x32 ; '2'
0000000000000baf         db  0x2e ; '.'
0000000000000bb0         db  0x32 ; '2'
0000000000000bb1         db  0x2e ; '.'
0000000000000bb2         db  0x35 ; '5'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x5f ; '_'
0000000000000bb5         db  0x49 ; 'I'
0000000000000bb6         db  0x54 ; 'T'
0000000000000bb7         db  0x4d ; 'M'
0000000000000bb8         db  0x5f ; '_'
0000000000000bb9         db  0x64 ; 'd'
0000000000000bba         db  0x65 ; 'e'
0000000000000bbb         db  0x72 ; 'r'
0000000000000bbc         db  0x65 ; 'e'
0000000000000bbd         db  0x67 ; 'g'
0000000000000bbe         db  0x69 ; 'i'
0000000000000bbf         db  0x73 ; 's'
0000000000000bc0         db  0x74 ; 't'
0000000000000bc1         db  0x65 ; 'e'
0000000000000bc2         db  0x72 ; 'r'
0000000000000bc3         db  0x54 ; 'T'
0000000000000bc4         db  0x4d ; 'M'
0000000000000bc5         db  0x43 ; 'C'
0000000000000bc6         db  0x6c ; 'l'
0000000000000bc7         db  0x6f ; 'o'
0000000000000bc8         db  0x6e ; 'n'
0000000000000bc9         db  0x65 ; 'e'
0000000000000bca         db  0x54 ; 'T'
0000000000000bcb         db  0x61 ; 'a'
0000000000000bcc         db  0x62 ; 'b'
0000000000000bcd         db  0x6c ; 'l'
0000000000000bce         db  0x65 ; 'e'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x5f ; '_'
0000000000000bd1         db  0x5f ; '_'
0000000000000bd2         db  0x67 ; 'g'
0000000000000bd3         db  0x6d ; 'm'
0000000000000bd4         db  0x6f ; 'o'
0000000000000bd5         db  0x6e ; 'n'
0000000000000bd6         db  0x5f ; '_'
0000000000000bd7         db  0x73 ; 's'
0000000000000bd8         db  0x74 ; 't'
0000000000000bd9         db  0x61 ; 'a'
0000000000000bda         db  0x72 ; 'r'
0000000000000bdb         db  0x74 ; 't'
0000000000000bdc         db  0x5f ; '_'
0000000000000bdd         db  0x5f ; '_'
0000000000000bde         db  0x00 ; '.'
0000000000000bdf         db  0x5f ; '_'
0000000000000be0         db  0x49 ; 'I'
0000000000000be1         db  0x54 ; 'T'
0000000000000be2         db  0x4d ; 'M'
0000000000000be3         db  0x5f ; '_'
0000000000000be4         db  0x72 ; 'r'
0000000000000be5         db  0x65 ; 'e'
0000000000000be6         db  0x67 ; 'g'
0000000000000be7         db  0x69 ; 'i'
0000000000000be8         db  0x73 ; 's'
0000000000000be9         db  0x74 ; 't'
0000000000000bea         db  0x65 ; 'e'
0000000000000beb         db  0x72 ; 'r'
0000000000000bec         db  0x54 ; 'T'
0000000000000bed         db  0x4d ; 'M'
0000000000000bee         db  0x43 ; 'C'
0000000000000bef         db  0x6c ; 'l'
0000000000000bf0         db  0x6f ; 'o'
0000000000000bf1         db  0x6e ; 'n'
0000000000000bf2         db  0x65 ; 'e'
0000000000000bf3         db  0x54 ; 'T'
0000000000000bf4         db  0x61 ; 'a'
0000000000000bf5         db  0x62 ; 'b'
0000000000000bf6         db  0x6c ; 'l'
0000000000000bf7         db  0x65 ; 'e'
0000000000000bf8         db  0x00 ; '.'
0000000000000bf9         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xbfa; 0xc7c[ (130 bytes)
        ; File offset : [3066; 3196[ (130 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000bfa         db  0x00 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x02 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x02 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x02 ; '.'
0000000000000c01         db  0x00 ; '.'
0000000000000c02         db  0x02 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x00 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x02 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x02 ; '.'
0000000000000c09         db  0x00 ; '.'
0000000000000c0a         db  0x02 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x02 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x02 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x02 ; '.'
0000000000000c11         db  0x00 ; '.'
0000000000000c12         db  0x02 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x02 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x02 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x03 ; '.'
0000000000000c19         db  0x00 ; '.'
0000000000000c1a         db  0x02 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x02 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x02 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x02 ; '.'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x02 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x02 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x02 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x02 ; '.'
0000000000000c29         db  0x00 ; '.'
0000000000000c2a         db  0x02 ; '.'
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x02 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x02 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x02 ; '.'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x02 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x02 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x02 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x02 ; '.'
0000000000000c39         db  0x00 ; '.'
0000000000000c3a         db  0x00 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x04 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x02 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x02 ; '.'
0000000000000c41         db  0x00 ; '.'
0000000000000c42         db  0x02 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x02 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x02 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x02 ; '.'
0000000000000c49         db  0x00 ; '.'
0000000000000c4a         db  0x02 ; '.'
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x02 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x05 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x02 ; '.'
0000000000000c51         db  0x00 ; '.'
0000000000000c52         db  0x02 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x02 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x02 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x02 ; '.'
0000000000000c59         db  0x00 ; '.'
0000000000000c5a         db  0x02 ; '.'
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x02 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x05 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x00 ; '.'
0000000000000c61         db  0x00 ; '.'
0000000000000c62         db  0x02 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x02 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x02 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x06 ; '.'
0000000000000c69         db  0x00 ; '.'
0000000000000c6a         db  0x02 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x02 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x02 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x02 ; '.'
0000000000000c71         db  0x00 ; '.'
0000000000000c72         db  0x02 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x02 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x02 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x02 ; '.'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x02 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xc80; 0xce0[ (96 bytes)
        ; File offset : [3200; 3296[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c80         db  0x01 ; '.'
0000000000000c81         db  0x00 ; '.'
0000000000000c82         db  0x05 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x01 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x10 ; '.'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x00 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x13 ; '.'
0000000000000c91         db  0x69 ; 'i'
0000000000000c92         db  0x69 ; 'i'
0000000000000c93         db  0x0d ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x06 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x85 ; '.'
0000000000000c99         db  0x02 ; '.'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x10 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x74 ; 't'
0000000000000ca1         db  0x19 ; '.'
0000000000000ca2         db  0x69 ; 'i'
0000000000000ca3         db  0x09 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x05 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x8f ; '.'
0000000000000ca9         db  0x02 ; '.'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x10 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x94 ; '.'
0000000000000cb1         db  0x91 ; '.'
0000000000000cb2         db  0x96 ; '.'
0000000000000cb3         db  0x06 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x04 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x9b ; '.'
0000000000000cb9         db  0x02 ; '.'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x10 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x14 ; '.'
0000000000000cc1         db  0x69 ; 'i'
0000000000000cc2         db  0x69 ; 'i'
0000000000000cc3         db  0x0d ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x03 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0xa6 ; '.'
0000000000000cc9         db  0x02 ; '.'
0000000000000cca         db  0x00 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x10 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x75 ; 'u'
0000000000000cd1         db  0x1a ; '.'
0000000000000cd2         db  0x69 ; 'i'
0000000000000cd3         db  0x09 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x02 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0xb0 ; '.'
0000000000000cd9         db  0x02 ; '.'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xce0; 0xff8[ (792 bytes)
        ; File offset : [3296; 4088[ (792 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000ce0         db  0x10 ; '.'
0000000000000ce1         db  0x8b ; '.'
0000000000000ce2         db  0x20 ; ' '
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x08 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x00 ; '.'
0000000000000cf1         db  0x21 ; '!'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x18 ; '.'
0000000000000cf9         db  0x8b ; '.'
0000000000000cfa         db  0x20 ; ' '
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x08 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0xc0 ; '.'
0000000000000d09         db  0x20 ; ' '
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x20 ; ' '
0000000000000d11         db  0x8b ; '.'
0000000000000d12         db  0x20 ; ' '
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x08 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0xfb ; '.'
0000000000000d21         db  0x5d ; ']'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x40 ; '@'
0000000000000d29         db  0x8b ; '.'
0000000000000d2a         db  0x20 ; ' '
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x08 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x02 ; '.'
0000000000000d39         db  0x5e ; '^'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x60 ; '`'
0000000000000d41         db  0x8b ; '.'
0000000000000d42         db  0x20 ; ' '
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x08 ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x07 ; '.'
0000000000000d51         db  0x5e ; '^'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x80 ; '.'
0000000000000d59         db  0x8b ; '.'
0000000000000d5a         db  0x20 ; ' '
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x08 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x16 ; '.'
0000000000000d69         db  0x5e ; '^'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0xa0 ; '.'
0000000000000d71         db  0x8b ; '.'
0000000000000d72         db  0x20 ; ' '
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x08 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x1b ; '.'
0000000000000d81         db  0x5e ; '^'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0xe0 ; '.'
0000000000000d89         db  0x8b ; '.'
0000000000000d8a         db  0x20 ; ' '
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x08 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0xc1 ; '.'
0000000000000d99         db  0x63 ; 'c'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0xe8 ; '.'
0000000000000da1         db  0x8b ; '.'
0000000000000da2         db  0x20 ; ' '
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x08 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0xc9 ; '.'
0000000000000db1         db  0x63 ; 'c'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0xf0 ; '.'
0000000000000db9         db  0x8b ; '.'
0000000000000dba         db  0x20 ; ' '
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0xcf ; '.'
0000000000000dc9         db  0x63 ; 'c'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0xf8 ; '.'
0000000000000dd1         db  0x8b ; '.'
0000000000000dd2         db  0x20 ; ' '
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x08 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0xdc ; '.'
0000000000000de1         db  0x63 ; 'c'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x00 ; '.'
0000000000000de9         db  0x8c ; '.'
0000000000000dea         db  0x20 ; ' '
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x08 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0xe9 ; '.'
0000000000000df9         db  0x63 ; 'c'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x08 ; '.'
0000000000000e01         db  0x8c ; '.'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x08 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0xfd ; '.'
0000000000000e11         db  0x63 ; 'c'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x10 ; '.'
0000000000000e19         db  0x8c ; '.'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x08 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0xff ; '.'
0000000000000e29         db  0x63 ; 'c'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x18 ; '.'
0000000000000e31         db  0x8c ; '.'
0000000000000e32         db  0x20 ; ' '
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x08 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0xe2 ; '.'
0000000000000e41         db  0x63 ; 'c'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x20 ; ' '
0000000000000e49         db  0x8c ; '.'
0000000000000e4a         db  0x20 ; ' '
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x08 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x7d ; '}'
0000000000000e59         db  0x5d ; ']'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x28 ; '('
0000000000000e61         db  0x8c ; '.'
0000000000000e62         db  0x20 ; ' '
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x08 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x07 ; '.'
0000000000000e71         db  0x64 ; 'd'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x08 ; '.'
0000000000000e79         db  0x90 ; '.'
0000000000000e7a         db  0x20 ; ' '
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x08 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x08 ; '.'
0000000000000e89         db  0x90 ; '.'
0000000000000e8a         db  0x20 ; ' '
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x10 ; '.'
0000000000000e91         db  0x90 ; '.'
0000000000000e92         db  0x20 ; ' '
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x08 ; '.'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x33 ; '3'
0000000000000ea1         db  0x62 ; 'b'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x60 ; '`'
0000000000000ea9         db  0x90 ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x08 ; '.'
0000000000000eb1         db  0x00 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x70 ; 'p'
0000000000000eb9         db  0x90 ; '.'
0000000000000eba         db  0x20 ; ' '
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x78 ; 'x'
0000000000000ec1         db  0x90 ; '.'
0000000000000ec2         db  0x20 ; ' '
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x08 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x00 ; '.'
0000000000000ed1         db  0x91 ; '.'
0000000000000ed2         db  0x20 ; ' '
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0xd0 ; '.'
0000000000000ed9         db  0x8f ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x06 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x05 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x00 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0xd8 ; '.'
0000000000000ef1         db  0x8f ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x06 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x1b ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x00 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0xe0 ; '.'
0000000000000f09         db  0x8f ; '.'
0000000000000f0a         db  0x20 ; ' '
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x06 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x20 ; ' '
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x00 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0xe8 ; '.'
0000000000000f21         db  0x8f ; '.'
0000000000000f22         db  0x20 ; ' '
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x06 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x33 ; '3'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x00 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0xf0 ; '.'
0000000000000f39         db  0x8f ; '.'
0000000000000f3a         db  0x20 ; ' '
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x06 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x36 ; '6'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x00 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x80 ; '.'
0000000000000f51         db  0x90 ; '.'
0000000000000f52         db  0x20 ; ' '
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x05 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x39 ; '9'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x00 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x88 ; '.'
0000000000000f69         db  0x90 ; '.'
0000000000000f6a         db  0x20 ; ' '
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x05 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x38 ; '8'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x00 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x90 ; '.'
0000000000000f81         db  0x90 ; '.'
0000000000000f82         db  0x20 ; ' '
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x05 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x3a ; ':'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x00 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x98 ; '.'
0000000000000f99         db  0x90 ; '.'
0000000000000f9a         db  0x20 ; ' '
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x05 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x3f ; '?'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x00 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0xa0 ; '.'
0000000000000fb1         db  0x90 ; '.'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x05 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x40 ; '@'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x00 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0xa8 ; '.'
0000000000000fc9         db  0x90 ; '.'
0000000000000fca         db  0x20 ; ' '
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x05 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x3c ; '<'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x00 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0xc0 ; '.'
0000000000000fe1         db  0x90 ; '.'
0000000000000fe2         db  0x20 ; ' '
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x05 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x3e ; '>'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x00 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0xff8; 0x14a8[ (1200 bytes)
        ; File offset : [4088; 5288[ (1200 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000ff8         db  0x40 ; '@'
0000000000000ff9         db  0x8e ; '.'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x07 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x01 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x00 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x48 ; 'H'
0000000000001011         db  0x8e ; '.'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x07 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x02 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x00 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x50 ; 'P'
0000000000001029         db  0x8e ; '.'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x07 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x03 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x00 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x58 ; 'X'
0000000000001041         db  0x8e ; '.'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x07 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x04 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x00 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x60 ; '`'
0000000000001059         db  0x8e ; '.'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x07 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x06 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x00 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x68 ; 'h'
0000000000001071         db  0x8e ; '.'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x07 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x07 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x00 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x70 ; 'p'
0000000000001089         db  0x8e ; '.'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x07 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x08 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x00 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x78 ; 'x'
00000000000010a1         db  0x8e ; '.'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x07 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x09 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x00 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x80 ; '.'
00000000000010b9         db  0x8e ; '.'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x07 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x0a ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x00 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x88 ; '.'
00000000000010d1         db  0x8e ; '.'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x07 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x0b ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x00 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x90 ; '.'
00000000000010e9         db  0x8e ; '.'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x07 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x0c ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x00 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x98 ; '.'
0000000000001101         db  0x8e ; '.'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x07 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x0d ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x00 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0xa0 ; '.'
0000000000001119         db  0x8e ; '.'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x07 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x0e ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x00 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0xa8 ; '.'
0000000000001131         db  0x8e ; '.'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x07 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x0f ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x00 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0xb0 ; '.'
0000000000001149         db  0x8e ; '.'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x07 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x10 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x00 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0xb8 ; '.'
0000000000001161         db  0x8e ; '.'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x07 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x11 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x00 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0xc0 ; '.'
0000000000001179         db  0x8e ; '.'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x07 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x12 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0xc8 ; '.'
0000000000001191         db  0x8e ; '.'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x07 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x13 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x00 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0xd0 ; '.'
00000000000011a9         db  0x8e ; '.'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x07 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x14 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x00 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0xd8 ; '.'
00000000000011c1         db  0x8e ; '.'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x07 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x15 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x00 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0xe0 ; '.'
00000000000011d9         db  0x8e ; '.'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x07 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x16 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0xe8 ; '.'
00000000000011f1         db  0x8e ; '.'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x07 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x17 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x00 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0xf0 ; '.'
0000000000001209         db  0x8e ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x07 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x18 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x00 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0xf8 ; '.'
0000000000001221         db  0x8e ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x07 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x19 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x00 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x00 ; '.'
0000000000001239         db  0x8f ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x07 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x1a ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x00 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x08 ; '.'
0000000000001251         db  0x8f ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x07 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x1c ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x00 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x10 ; '.'
0000000000001269         db  0x8f ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x07 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x1d ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x00 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x18 ; '.'
0000000000001281         db  0x8f ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x07 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x1e ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x00 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x20 ; ' '
0000000000001299         db  0x8f ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x07 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x1f ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x00 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x28 ; '('
00000000000012b1         db  0x8f ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x07 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x21 ; '!'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x00 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x30 ; '0'
00000000000012c9         db  0x8f ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x07 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x22 ; '"'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x38 ; '8'
00000000000012e1         db  0x8f ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x07 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x23 ; '#'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x00 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x40 ; '@'
00000000000012f9         db  0x8f ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x07 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x24 ; '$'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x00 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x48 ; 'H'
0000000000001311         db  0x8f ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x07 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x25 ; '%'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x50 ; 'P'
0000000000001329         db  0x8f ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x07 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x26 ; '&'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x58 ; 'X'
0000000000001341         db  0x8f ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x07 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x27 ; '''
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x60 ; '`'
0000000000001359         db  0x8f ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x07 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x28 ; '('
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x68 ; 'h'
0000000000001371         db  0x8f ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x07 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x29 ; ')'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x70 ; 'p'
0000000000001389         db  0x8f ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x07 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x2a ; '*'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x78 ; 'x'
00000000000013a1         db  0x8f ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x07 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x2b ; '+'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x80 ; '.'
00000000000013b9         db  0x8f ; '.'
00000000000013ba         db  0x20 ; ' '
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x07 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x2c ; ','
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x00 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x88 ; '.'
00000000000013d1         db  0x8f ; '.'
00000000000013d2         db  0x20 ; ' '
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x07 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x2d ; '-'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x00 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x90 ; '.'
00000000000013e9         db  0x8f ; '.'
00000000000013ea         db  0x20 ; ' '
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x07 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x2e ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x00 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x98 ; '.'                                         ; DATA XREF=main+525, main+846, main+946
0000000000001401         db  0x8f ; '.'
0000000000001402         db  0x20 ; ' '
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x07 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x2f ; '/'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x00 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0xa0 ; '.'
0000000000001419         db  0x8f ; '.'
000000000000141a         db  0x20 ; ' '
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x07 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x30 ; '0'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x00 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0xa8 ; '.'
0000000000001431         db  0x8f ; '.'
0000000000001432         db  0x20 ; ' '
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x07 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x31 ; '1'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x00 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0xb0 ; '.'
0000000000001449         db  0x8f ; '.'
000000000000144a         db  0x20 ; ' '
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x07 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x32 ; '2'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x00 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0xb8 ; '.'
0000000000001461         db  0x8f ; '.'
0000000000001462         db  0x20 ; ' '
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x07 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x34 ; '4'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x00 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0xc0 ; '.'
0000000000001479         db  0x8f ; '.'
000000000000147a         db  0x20 ; ' '
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x07 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x35 ; '5'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x00 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0xc8 ; '.'
0000000000001491         db  0x8f ; '.'
0000000000001492         db  0x20 ; ' '
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x07 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x37 ; '7'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x00 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x14a8; 0x14bf[ (23 bytes)
        ; File offset : [5288; 5311[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000014a8         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000014ac         mov        rax, qword [qword_208fe0]                   ; qword_208fe0
00000000000014b3         test       rax, rax
00000000000014b6         je         loc_14ba

00000000000014b8         call       rax

                     loc_14ba:
00000000000014ba         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000014be         ret
                        ; endp
00000000000014bf         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x14c0; 0x17f0[ (816 bytes)
        ; File offset : [5312; 6128[ (816 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_14c0:
00000000000014c0         push       qword [qword_208e30]                        ; Begin of unwind block (FDE at 0x7024), qword_208e30, CODE XREF=sub_14d6+5
00000000000014c6         jmp        qword [qword_208e30+8]                      ; 0x208e38
                        ; endp
00000000000014cc         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
00000000000014d0         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=base32_decode_alloc_ctx+167, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14d6:
00000000000014d6         push       0x0
00000000000014db         jmp        loc_14c0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
00000000000014e0         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_36d0+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14e6:
00000000000014e6         push       0x1
00000000000014eb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000014f0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+434, main+1209, main+1533, main+1599, main+1640, main+1787, main+1831, main+1880, main+2019, close_stdout+22, quotearg_n_options+28
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14f6:
00000000000014f6         push       0x2
00000000000014fb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001500         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+668, usage+861
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0x3
000000000000150b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001510         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0x4
000000000000151b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001520         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0x5
000000000000152b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fread_unlocked:        // fread_unlocked
0000000000001530         jmp        qword [fread_unlocked@GOT]                  ; fread_unlocked, fread_unlocked@GOT, CODE XREF=main+663, main+1104
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0x6
000000000000153b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001540         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+94
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0x7
000000000000154b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001550         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0x8
000000000000155b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001560         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+82
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0x9
000000000000156b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001570         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+188, main+1201, main+1525, main+1591, main+1666, main+1743, main+1779, main+1823, main+1872, main+1943, main+2011
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0xa
000000000000157b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001580         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0xb
000000000000158b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001590         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_36d0+411, sub_36d0+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0xc
000000000000159b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
00000000000015a0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+1853, base32_decode_ctx+681, base32_decode_alloc_ctx+186, sub_36d0+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0xd
00000000000015ab         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
00000000000015b0         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+139
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0xe
00000000000015bb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
00000000000015c0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0xf
00000000000015cb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
00000000000015d0         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=xstrtoumax+291, xstrtoumax+323, xstrtoumax+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x10
00000000000015db         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
00000000000015e0         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=main+1563, main+1983
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x11
00000000000015eb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
00000000000015f0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x12
00000000000015fb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001600         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x13
000000000000160b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001610         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=xstrtoumax+927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x14
000000000000161b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___strtoul_internal:        // __strtoul_internal
0000000000001620         jmp        qword [__strtoul_internal@GOT]              ; __strtoul_internal, __strtoul_internal@GOT, CODE XREF=xstrtoumax+142
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x15
000000000000162b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001630         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x16
000000000000163b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
0000000000001640         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x17
000000000000164b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memchr:        // memchr
0000000000001650         jmp        qword [memchr@GOT]                          ; memchr, memchr@GOT, CODE XREF=base32_decode_ctx+522
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x18
000000000000165b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001660         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x19
000000000000166b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001670         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+196, usage+233, usage+270, usage+307, usage+351, usage+976, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x1a
000000000000167b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001680         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x1b
000000000000168b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000001690         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=main+380, main+1633
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x1c
000000000000169b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
00000000000016a0         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x1d
00000000000016ab         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
00000000000016b0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x1e
00000000000016bb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
00000000000016c0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=base32_encode_alloc+89, base32_decode_alloc_ctx+60, xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x1f
00000000000016cb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
00000000000016d0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x20
00000000000016db         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
00000000000016e0         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0x21
00000000000016eb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
00000000000016f0         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x22
00000000000016fb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
0000000000001700         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=main+895, main+1411, main+1501
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x23
000000000000170b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001710         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x24
000000000000171b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001720         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+63, usage+643, usage+836, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x25
000000000000172b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001730         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+159, usage+395, usage+631, usage+724, usage+785, usage+824, usage+927, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x26
000000000000173b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
0000000000001740         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=main+780
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x27
000000000000174b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001750         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+458, main+1226, main+1550, main+1616, main+1683, main+1724, main+1760, main+1804, main+1848, main+1897, main+1960
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x28
000000000000175b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001760         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x29
000000000000176b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
0000000000001770         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=main+401
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x2a
000000000000177b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001780         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x2b
000000000000178b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001790         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+330, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1796:
0000000000001796         push       0x2c
000000000000179b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
00000000000017a0         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17a6:
00000000000017a6         push       0x2d
00000000000017ab         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
00000000000017b0         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17b6:
00000000000017b6         push       0x2e
00000000000017bb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
00000000000017c0         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_36d0+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17c6:
00000000000017c6         push       0x2f
00000000000017cb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
00000000000017d0         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_36d0+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17d6:
00000000000017d6         push       0x30
00000000000017db         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
00000000000017e0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_3470+51, xstrtoumax+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17e6:
00000000000017e6         push       0x31
00000000000017eb         jmp        0x14c0
                        ; endp


        ; Section .plt.got
        ; Range: [0x17f0; 0x17f8[ (8 bytes)
        ; File offset : [6128; 6136[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_208ff0:        // qword_208ff0
00000000000017f0         jmp        qword [qword_208ff0]                        ; qword, End of unwind block (FDE at 0x7024), Begin of unwind block (FDE at 0x704c), qword_208ff0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
00000000000017f6         align      8
00000000000017f8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x704c)
00000000000017f9         db  0x00 ; '.'
00000000000017fa         db  0x00 ; '.'
00000000000017fb         db  0x00 ; '.'
00000000000017fc         db  0x00 ; '.'
00000000000017fd         db  0x00 ; '.'
00000000000017fe         db  0x00 ; '.'
00000000000017ff         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1800; 0x5c8e[ (17550 bytes)
        ; File offset : [6144; 23694[ (17550 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_4C: int32_t, -76
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160


                     main:
0000000000001800         push       r15                                         ; Begin of unwind block (FDE at 0x7090), DATA XREF=_start+29
0000000000001802         push       r14
0000000000001804         push       r13
0000000000001806         push       r12
0000000000001808         mov        r13d, edi
000000000000180b         push       rbp
000000000000180c         push       rbx
000000000000180d         mov        r12, rsi
0000000000001810         mov        ebp, 0x4c
0000000000001815         xor        ebx, ebx
0000000000001817         sub        rsp, 0x78
000000000000181b         mov        rdi, qword [rsi]
000000000000181e         mov        rax, qword [fs:0x28]
0000000000001827         mov        qword [rsp+0xa8+var_40], rax
000000000000182c         xor        eax, eax
000000000000182e         call       set_program_name                            ; set_program_name
0000000000001833         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x68e1
000000000000183a         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
000000000000183f         call       j_setlocale                                 ; setlocale
0000000000001844         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
000000000000184b         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001852         call       j_bindtextdomain                            ; bindtextdomain
0000000000001857         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
000000000000185e         call       j_textdomain                                ; textdomain
0000000000001863         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
000000000000186a         call       atexit                                      ; atexit
000000000000186f         mov        byte [rsp+0xa8+var_78], 0x0

                     loc_1874:
0000000000001874         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options, CODE XREF=main+230, main+245, main+261
000000000000187b         lea        rdx, qword [aSimonJosefsson+16]             ; argument "__shortopts" for method j_getopt_long, 0x5da6
0000000000001882         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001885         mov        rsi, r12                                    ; argument "___argv" for method j_getopt_long
0000000000001888         mov        edi, r13d                                   ; argument "___argc" for method j_getopt_long
000000000000188b         call       j_getopt_long                               ; getopt_long
0000000000001890         cmp        eax, 0xffffffff
0000000000001893         je         loc_194f

0000000000001899         cmp        eax, 0x64
000000000000189c         je         loc_18f0

000000000000189e         jle        loc_1910

00000000000018a0         cmp        eax, 0x69
00000000000018a3         je         loc_1900

00000000000018a5         cmp        eax, 0x77
00000000000018a8         jne        loc_1fad

00000000000018ae         lea        rsi, qword [aInvalidWrapSiz]                ; argument "msgid" for method j_dcgettext, "invalid wrap size"
00000000000018b5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000018ba         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000018bc         call       j_dcgettext                                 ; dcgettext
00000000000018c1         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
00000000000018c8         lea        rcx, qword [aWrittenBySSAnd+27]             ; 0x68e1
00000000000018cf         mov        r8, rax
00000000000018d2         xor        r9d, r9d
00000000000018d5         mov        rdx, 0xffffffffffffffff
00000000000018dc         xor        esi, esi
00000000000018de         call       xdectoumax                                  ; xdectoumax
00000000000018e3         mov        rbp, rax
00000000000018e6         jmp        loc_1874
00000000000018e8         align      16

                     loc_18f0:
00000000000018f0         mov        ebx, 0x1                                    ; CODE XREF=main+156
00000000000018f5         jmp        loc_1874
00000000000018fa         align      256

                     loc_1900:
0000000000001900         mov        byte [rsp+0xa8+var_78], 0x1                 ; CODE XREF=main+163
0000000000001905         jmp        loc_1874
000000000000190a         align      16

                     loc_1910:
0000000000001910         cmp        eax, 0xffffff7d                             ; CODE XREF=main+158
0000000000001915         jne        loc_1f6e

000000000000191b         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001922         mov        rcx, qword [Version]                        ; Version
0000000000001929         lea        r8, qword [aSimonJosefsson]                 ; "Simon Josefsson"
0000000000001930         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5d3f
0000000000001937         lea        rsi, qword [aBase32]                        ; "base32"
000000000000193e         xor        r9d, r9d
0000000000001941         xor        eax, eax
0000000000001943         call       version_etc                                 ; version_etc
0000000000001948         xor        edi, edi                                    ; argument "__status" for method j_exit
000000000000194a         call       j_exit                                      ; exit
                        ; endp

                     loc_194f:
000000000000194f         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+147
0000000000001956         mov        edx, r13d
0000000000001959         sub        edx, eax
000000000000195b         sub        edx, 0x1
000000000000195e         jg         loc_1f7c

0000000000001964         cmp        eax, r13d
0000000000001967         jge        loc_19cf

0000000000001969         mov        rax, qword [r12+rax*8]
000000000000196d         lea        rsi, qword [aLibs+10]                       ; argument "__s2" for method j_strcmp, 0x63aa
0000000000001974         mov        rdi, rax                                    ; argument "__s1" for method j_strcmp
0000000000001977         mov        qword [rsp+0xa8+var_60], rax
000000000000197c         call       j_strcmp                                    ; strcmp
0000000000001981         test       eax, eax
0000000000001983         je         loc_19db

0000000000001985         mov        rdi, qword [rsp+0xa8+var_60]                ; argument "__filename" for method j_fopen
000000000000198a         lea        rsi, qword [aExtraOperandS+17]              ; argument "__modes" for method j_fopen, 0x5dbc
0000000000001991         call       j_fopen                                     ; fopen
0000000000001996         test       rax, rax
0000000000001999         mov        r12, rax
000000000000199c         jne        loc_19e2

000000000000199e         mov        rdx, qword [rsp+0xa8+var_60]
00000000000019a3         mov        esi, 0x3
00000000000019a8         xor        edi, edi
00000000000019aa         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000019af         mov        rbx, rax
00000000000019b2         call       j___errno_location                          ; __errno_location
00000000000019b7         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000019b9         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6364
00000000000019c0         mov        rcx, rbx
00000000000019c3         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000019c8         xor        eax, eax
00000000000019ca         call       j_error                                     ; error

                     loc_19cf:
00000000000019cf         lea        rax, qword [aLibs+10]                       ; 0x63aa, CODE XREF=main+359
00000000000019d6         mov        qword [rsp+0xa8+var_60], rax

                     loc_19db:
00000000000019db         mov        r12, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+387

                     loc_19e2:
00000000000019e2         mov        esi, 0x2                                    ; CODE XREF=main+412
00000000000019e7         mov        rdi, r12
00000000000019ea         call       fadvise                                     ; fadvise
00000000000019ef         test       bl, bl
00000000000019f1         mov        rax, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000019f8         je         loc_1bf8

00000000000019fe         mov        edi, _start
0000000000001a03         mov        qword [rsp+0xa8+var_70], rax
0000000000001a08         call       xmalloc                                     ; xmalloc
0000000000001a0d         mov        edi, 0x1400
0000000000001a12         mov        rbp, rax
0000000000001a15         call       xmalloc                                     ; xmalloc
0000000000001a1a         mov        qword [rsp+0xa8+var_68], rax
0000000000001a1f         lea        rax, qword [rsp+0xa8+var_4C]
0000000000001a24         mov        rdi, rax
0000000000001a27         mov        qword [rsp+0xa8+var_90], rax
0000000000001a2c         call       base32_decode_ctx_init                      ; base32_decode_ctx_init
0000000000001a31         lea        rax, qword [rsp+0xa8+var_58]
0000000000001a36         mov        qword [rsp+0xa8+var_98], r12
0000000000001a3b         mov        qword [rsp+0xa8+var_A0], rbp
0000000000001a40         mov        qword [rsp+0xa8+var_88], rax
0000000000001a45         nop        dword [rax]

                     loc_1a48:
0000000000001a48         xor        ebx, ebx                                    ; CODE XREF=main+835
0000000000001a4a         jmp        loc_1a7c
0000000000001a4c         align      16

                     loc_1a50:
0000000000001a50         mov        rax, qword [rsp+0xa8+var_98]                ; CODE XREF=main+681, main+689, main+694, main+739
0000000000001a55         add        rbx, r12
0000000000001a58         mov        eax, dword [rax]
0000000000001a5a         test       al, 0x20
0000000000001a5c         jne        loc_1f11

0000000000001a62         mov        edx, eax
0000000000001a64         and        edx, 0x10
0000000000001a67         cmp        rbx, 0x1fff
0000000000001a6e         ja         loc_1b18

0000000000001a74         test       edx, edx
0000000000001a76         jne        loc_1b18

                     loc_1a7c:
0000000000001a7c         mov        rax, qword [rsp+0xa8+var_A0]                ; CODE XREF=main+586
0000000000001a81         mov        rcx, qword [rsp+0xa8+var_98]                ; argument "__stream" for method j_fread_unlocked
0000000000001a86         mov        edx, _start
0000000000001a8b         sub        rdx, rbx                                    ; argument "__n" for method j_fread_unlocked
0000000000001a8e         mov        esi, 0x1                                    ; argument "__size" for method j_fread_unlocked
0000000000001a93         lea        rdi, qword [rax+rbx]                        ; argument "__ptr" for method j_fread_unlocked
0000000000001a97         call       j_fread_unlocked                            ; fread_unlocked
0000000000001a9c         cmp        byte [rsp+0xa8+var_78], 0x0
0000000000001aa1         mov        r12, rax
0000000000001aa4         mov        qword [rsp+0xa8+var_58], rax
0000000000001aa9         je         loc_1a50

0000000000001aab         xor        r13d, r13d

                     loc_1aae:
0000000000001aae         test       r12, r12                                    ; CODE XREF=main+785
0000000000001ab1         je         loc_1a50

                     loc_1ab3:
0000000000001ab3         cmp        r13, r12                                    ; CODE XREF=main+737
0000000000001ab6         jae        loc_1a50

0000000000001ab8         mov        rax, qword [rsp+0xa8+var_A0]
0000000000001abd         lea        r15, qword [rbx+r13]
0000000000001ac1         lea        r14, qword [rax+r15]
0000000000001ac5         movsx      edi, byte [r14]
0000000000001ac9         mov        ebp, edi
0000000000001acb         call       isbase32                                    ; isbase32
0000000000001ad0         cmp        bpl, 0x3d
0000000000001ad4         je         loc_1ada

0000000000001ad6         test       al, al
0000000000001ad8         je         loc_1af0

                     loc_1ada:
0000000000001ada         add        r13, 0x1                                    ; CODE XREF=main+724
0000000000001ade         test       r12, r12
0000000000001ae1         jne        loc_1ab3

0000000000001ae3         jmp        loc_1a50
0000000000001ae8         align      16

                     loc_1af0:
0000000000001af0         mov        rax, qword [rsp+0xa8+var_A0]                ; CODE XREF=main+728
0000000000001af5         sub        r12, 0x1
0000000000001af9         mov        rdi, r14                                    ; argument "__dest" for method j_memmove
0000000000001afc         mov        rdx, r12
0000000000001aff         mov        qword [rsp+0xa8+var_58], r12
0000000000001b04         sub        rdx, r13                                    ; argument "__n" for method j_memmove
0000000000001b07         lea        rsi, qword [rax+r15+1]                      ; argument "__src" for method j_memmove
0000000000001b0c         call       j_memmove                                   ; memmove
0000000000001b11         jmp        loc_1aae
0000000000001b13         align      8

                     loc_1b18:
0000000000001b18         xor        r15d, r15d                                  ; CODE XREF=main+622, main+630
0000000000001b1b         mov        qword [rsp+0xa8+var_80], rbx
0000000000001b20         mov        rbp, qword [rsp+0xa8+var_A0]
0000000000001b25         mov        r14d, r15d
0000000000001b28         mov        r12, qword [rsp+0xa8+var_68]
0000000000001b2d         mov        rbx, qword [rsp+0xa8+var_98]
0000000000001b32         mov        r15, qword [rsp+0xa8+var_70]
0000000000001b37         jmp        loc_1b9e
0000000000001b39         align      64

                     loc_1b40:
0000000000001b40         test       r14d, r14d                                  ; CODE XREF=main+928
0000000000001b43         jne        loc_1a48

                     loc_1b49:
0000000000001b49         mov        rdx, qword [rsp+0xa8+var_80]                ; CODE XREF=main+936
0000000000001b4e         mov        qword [rsp+0xa8+var_58], 0x1400

                     loc_1b57:
0000000000001b57         mov        r8, qword [rsp+0xa8+var_88]                 ; CODE XREF=main+957
0000000000001b5c         mov        rdi, qword [rsp+0xa8+var_90]
0000000000001b61         mov        rcx, r12
0000000000001b64         mov        rsi, rbp
0000000000001b67         call       base32_decode_ctx                           ; base32_decode_ctx
0000000000001b6c         mov        rdx, qword [rsp+0xa8+var_58]                ; argument "__n" for method j_fwrite_unlocked
0000000000001b71         mov        rcx, r15                                    ; argument "__stream" for method j_fwrite_unlocked
0000000000001b74         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001b79         mov        rdi, r12                                    ; argument "__ptr" for method j_fwrite_unlocked
0000000000001b7c         mov        r13d, eax
0000000000001b7f         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000001b84         cmp        rax, qword [rsp+0xa8+var_58]
0000000000001b89         jb         loc_1ee5

0000000000001b8f         test       r13b, r13b
0000000000001b92         je         loc_1ec1

0000000000001b98         mov        eax, dword [rbx]
0000000000001b9a         add        r14d, 0x1

                     loc_1b9e:
0000000000001b9e         test       al, 0x10                                    ; CODE XREF=main+823
0000000000001ba0         je         loc_1b40

0000000000001ba2         cmp        r14d, 0x1
0000000000001ba6         ja         loc_1bbf

0000000000001ba8         jne        loc_1b49

0000000000001baa         mov        eax, dword [rsp+0xa8+var_4C]
0000000000001bae         test       eax, eax
0000000000001bb0         je         loc_1bbf

0000000000001bb2         mov        qword [rsp+0xa8+var_58], 0x1400
0000000000001bbb         xor        edx, edx
0000000000001bbd         jmp        loc_1b57

                     loc_1bbf:
0000000000001bbf         mov        r12, rbx                                    ; CODE XREF=main+934, main+944

                     loc_1bc2:
0000000000001bc2         mov        rdi, r12                                    ; CODE XREF=main+1181
0000000000001bc5         call       rpl_fclose                                  ; rpl_fclose
0000000000001bca         add        eax, 0x1
0000000000001bcd         je         loc_1e55

0000000000001bd3         xor        eax, eax
0000000000001bd5         mov        rcx, qword [rsp+0xa8+var_40]
0000000000001bda         xor        rcx, qword [fs:0x28]
0000000000001be3         jne        loc_1f3d

0000000000001be9         add        rsp, 0x78
0000000000001bed         pop        rbx
0000000000001bee         pop        rbp
0000000000001bef         pop        r12
0000000000001bf1         pop        r13
0000000000001bf3         pop        r14
0000000000001bf5         pop        r15
0000000000001bf7         ret
                        ; endp

                     loc_1bf8:
0000000000001bf8         mov        edi, 0x7800                                 ; CODE XREF=main+504
0000000000001bfd         mov        qword [rsp+0xa8+var_90], rax
0000000000001c02         xor        ebx, ebx
0000000000001c04         call       xmalloc                                     ; xmalloc
0000000000001c09         mov        edi, 0xc000
0000000000001c0e         mov        r13, rax
0000000000001c11         mov        r14d, 0x7800
0000000000001c17         call       xmalloc                                     ; xmalloc
0000000000001c1c         mov        qword [rsp+0xa8+var_A0], rbp
0000000000001c21         mov        qword [rsp+0xa8+var_98], rax

                     loc_1c26:
0000000000001c26         xor        ebp, ebp                                    ; CODE XREF=main+1470
0000000000001c28         jmp        loc_1c3d
0000000000001c2a         align      16

                     loc_1c30:
0000000000001c30         cmp        rbp, 0x77ff                                 ; CODE XREF=main+1118
0000000000001c37         ja         loc_1ccf

                     loc_1c3d:
0000000000001c3d         lea        rdi, qword [r13+rbp]                        ; argument "__ptr" for method j_fread_unlocked, CODE XREF=main+1064
0000000000001c42         mov        rdx, r14
0000000000001c45         mov        rcx, r12                                    ; argument "__stream" for method j_fread_unlocked
0000000000001c48         sub        rdx, rbp                                    ; argument "__n" for method j_fread_unlocked
0000000000001c4b         mov        esi, 0x1                                    ; argument "__size" for method j_fread_unlocked
0000000000001c50         call       j_fread_unlocked                            ; fread_unlocked
0000000000001c55         add        rbp, rax
0000000000001c58         mov        eax, dword [r12]
0000000000001c5c         test       al, 0x30
0000000000001c5e         je         loc_1c30

0000000000001c60         test       rbp, rbp
0000000000001c63         jne        loc_1ccf

                     loc_1c65:
0000000000001c65         test       rbx, rbx                                    ; CODE XREF=main+1457, main+1476
0000000000001c68         mov        rbp, qword [rsp+0xa8+var_A0]
0000000000001c6d         je         loc_1c9b

0000000000001c6f         test       rbp, rbp
0000000000001c72         je         loc_1c9b

0000000000001c74         mov        rcx, qword [rsp+0xa8+var_90]
0000000000001c79         mov        rax, qword [rcx+0x28]
0000000000001c7d         cmp        rax, qword [rcx+0x30]
0000000000001c81         jae        loc_1fb7

0000000000001c87         mov        rcx, qword [rsp+0xa8+var_90]
0000000000001c8c         lea        rdx, qword [rax+1]
0000000000001c90         mov        qword [rcx+0x28], rdx
0000000000001c94         mov        byte [rax], 0xa

                     loc_1c97:
0000000000001c97         mov        eax, dword [r12]                            ; CODE XREF=main+1991

                     loc_1c9b:
0000000000001c9b         test       al, 0x20                                    ; CODE XREF=main+1133, main+1138
0000000000001c9d         je         loc_1bc2

0000000000001ca3         lea        rsi, qword [aReadError]                     ; argument "msgid" for method j_dcgettext, "read error"
0000000000001caa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001caf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001cb1         call       j_dcgettext                                 ; dcgettext
0000000000001cb6         mov        rbx, rax
0000000000001cb9         call       j___errno_location                          ; __errno_location
0000000000001cbe         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001cc0         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001cc3         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001cc8         xor        eax, eax
0000000000001cca         call       j_error                                     ; error

                     loc_1ccf:
0000000000001ccf         lea        rax, qword [rbp+4]                          ; CODE XREF=main+1079, main+1123
0000000000001cd3         mov        ecx, 0x5
0000000000001cd8         xor        edx, edx
0000000000001cda         mov        rsi, rbp
0000000000001cdd         mov        rdi, r13
0000000000001ce0         div        rcx
0000000000001ce3         mov        rdx, qword [rsp+0xa8+var_98]
0000000000001ce8         lea        r15, qword [rax*8]
0000000000001cf0         mov        rcx, r15
0000000000001cf3         call       base32_encode                               ; base32_encode
0000000000001cf8         cmp        qword [rsp+0xa8+var_A0], 0x0
0000000000001cfe         je         loc_1dc9

0000000000001d04         xor        r10d, r10d
0000000000001d07         test       r15, r15
0000000000001d0a         je         loc_1dab

0000000000001d10         mov        qword [rsp+0xa8+var_80], r13
0000000000001d15         mov        qword [rsp+0xa8+var_78], rbp
0000000000001d1a         mov        r13, rbx
0000000000001d1d         mov        rbp, r15
0000000000001d20         mov        qword [rsp+0xa8+var_88], r12
0000000000001d25         mov        r15, qword [rsp+0xa8+var_90]
0000000000001d2a         mov        rbx, r10
0000000000001d2d         jmp        loc_1d51
0000000000001d2f         align      16

                     loc_1d30:
0000000000001d30         mov        rax, qword [r15+0x28]                       ; CODE XREF=main+1385
0000000000001d34         cmp        rax, qword [r15+0x30]
0000000000001d38         jae        loc_1e13

0000000000001d3e         lea        rdx, qword [rax+1]
0000000000001d42         mov        qword [r15+0x28], rdx
0000000000001d46         mov        byte [rax], 0xa

                     loc_1d49:
0000000000001d49         xor        r13d, r13d                                  ; CODE XREF=main+1571

                     loc_1d4c:
0000000000001d4c         cmp        rbp, rbx                                    ; CODE XREF=main+1431
0000000000001d4f         jbe        loc_1d99

                     loc_1d51:
0000000000001d51         mov        r12, qword [rsp+0xa8+var_A0]                ; CODE XREF=main+1325
0000000000001d56         mov        rax, rbp
0000000000001d59         sub        rax, rbx
0000000000001d5c         sub        r12, r13
0000000000001d5f         cmp        r12, rax
0000000000001d62         cmova      r12, rax
0000000000001d66         test       r12, r12
0000000000001d69         je         loc_1d30

0000000000001d6b         mov        rax, qword [rsp+0xa8+var_98]
0000000000001d70         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
0000000000001d77         mov        rdx, r12                                    ; argument "__n" for method j_fwrite_unlocked
0000000000001d7a         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001d7f         lea        rdi, qword [rax+rbx]                        ; argument "__ptr" for method j_fwrite_unlocked
0000000000001d83         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000001d88         cmp        r12, rax
0000000000001d8b         ja         loc_1f42

0000000000001d91         add        r13, r12
0000000000001d94         add        rbx, r12
0000000000001d97         jmp        loc_1d4c

                     loc_1d99:
0000000000001d99         mov        rbx, r13                                    ; CODE XREF=main+1359
0000000000001d9c         mov        r12, qword [rsp+0xa8+var_88]
0000000000001da1         mov        r13, qword [rsp+0xa8+var_80]
0000000000001da6         mov        rbp, qword [rsp+0xa8+var_78]

                     loc_1dab:
0000000000001dab         mov        eax, dword [r12]                            ; CODE XREF=main+1290, main+1509
0000000000001daf         test       al, 0x30
0000000000001db1         jne        loc_1c65

0000000000001db7         cmp        rbp, 0x7800
0000000000001dbe         je         loc_1c26

0000000000001dc4         jmp        loc_1c65

                     loc_1dc9:
0000000000001dc9         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=main+1278
0000000000001dd0         mov        rdi, qword [rsp+0xa8+var_98]                ; argument "__ptr" for method j_fwrite_unlocked
0000000000001dd5         mov        rdx, r15                                    ; argument "__n" for method j_fwrite_unlocked
0000000000001dd8         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001ddd         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000001de2         cmp        r15, rax
0000000000001de5         jbe        loc_1dab

0000000000001de7         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
0000000000001dee         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001df3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001df5         call       j_dcgettext                                 ; dcgettext
0000000000001dfa         mov        rbx, rax
0000000000001dfd         call       j___errno_location                          ; __errno_location
0000000000001e02         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001e04         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001e07         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001e0c         xor        eax, eax
0000000000001e0e         call       j_error                                     ; error

                     loc_1e13:
0000000000001e13         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=main+1336
0000000000001e18         mov        rdi, r15                                    ; argument #1 for method j___overflow
0000000000001e1b         call       j___overflow                                ; __overflow
0000000000001e20         add        eax, 0x1
0000000000001e23         jne        loc_1d49

0000000000001e29         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
0000000000001e30         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e35         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e37         call       j_dcgettext                                 ; dcgettext
0000000000001e3c         mov        rbx, rax
0000000000001e3f         call       j___errno_location                          ; __errno_location
0000000000001e44         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001e46         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001e49         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001e4e         xor        eax, eax
0000000000001e50         call       j_error                                     ; error

                     loc_1e55:
0000000000001e55         mov        rdi, qword [rsp+0xa8+var_60]                ; argument "__s1" for method j_strcmp, CODE XREF=main+973
0000000000001e5a         lea        rsi, qword [aLibs+10]                       ; argument "__s2" for method j_strcmp, 0x63aa
0000000000001e61         call       j_strcmp                                    ; strcmp
0000000000001e66         mov        ebp, eax
0000000000001e68         call       j___errno_location                          ; __errno_location
0000000000001e6d         test       ebp, ebp
0000000000001e6f         mov        rbx, rax
0000000000001e72         jne        loc_1e98

0000000000001e74         lea        rsi, qword [aClosingStandar]                ; argument "msgid" for method j_dcgettext, "closing standard input"
0000000000001e7b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e80         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e82         call       j_dcgettext                                 ; dcgettext
0000000000001e87         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000001e89         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001e8c         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001e91         xor        eax, eax
0000000000001e93         call       j_error                                     ; error

                     loc_1e98:
0000000000001e98         mov        rdx, qword [rsp+0xa8+var_60]                ; CODE XREF=main+1650
0000000000001e9d         mov        esi, 0x3
0000000000001ea2         xor        edi, edi
0000000000001ea4         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001ea9         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000001eab         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6364
0000000000001eb2         mov        rcx, rax
0000000000001eb5         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001eba         xor        eax, eax
0000000000001ebc         call       j_error                                     ; error

                     loc_1ec1:
0000000000001ec1         lea        rsi, qword [aInvalidInput]                  ; argument "msgid" for method j_dcgettext, "invalid input", CODE XREF=main+914
0000000000001ec8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001ecd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ecf         call       j_dcgettext                                 ; dcgettext
0000000000001ed4         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001ed6         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001ed9         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001ede         xor        eax, eax
0000000000001ee0         call       j_error                                     ; error

                     loc_1ee5:
0000000000001ee5         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=main+905
0000000000001eec         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001ef1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ef3         call       j_dcgettext                                 ; dcgettext
0000000000001ef8         mov        rbx, rax
0000000000001efb         call       j___errno_location                          ; __errno_location
0000000000001f00         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001f02         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001f05         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001f0a         xor        eax, eax
0000000000001f0c         call       j_error                                     ; error

                     loc_1f11:
0000000000001f11         lea        rsi, qword [aReadError]                     ; argument "msgid" for method j_dcgettext, "read error", CODE XREF=main+604
0000000000001f18         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f1d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f1f         call       j_dcgettext                                 ; dcgettext
0000000000001f24         mov        rbx, rax
0000000000001f27         call       j___errno_location                          ; __errno_location
0000000000001f2c         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001f2e         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001f31         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001f36         xor        eax, eax
0000000000001f38         call       j_error                                     ; error

                     loc_1f3d:
0000000000001f3d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+995
                        ; endp

                     loc_1f42:
0000000000001f42         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=main+1419
0000000000001f49         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f4e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f50         call       j_dcgettext                                 ; dcgettext
0000000000001f55         mov        rbx, rax
0000000000001f58         call       j___errno_location                          ; __errno_location
0000000000001f5d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001f5f         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001f62         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001f67         xor        eax, eax
0000000000001f69         call       j_error                                     ; error

                     loc_1f6e:
0000000000001f6e         cmp        eax, 0xffffff7e                             ; CODE XREF=main+277
0000000000001f73         jne        loc_1fad

0000000000001f75         xor        edi, edi                                    ; argument #1 for method usage
0000000000001f77         call       usage                                       ; usage

                     loc_1f7c:
0000000000001f7c         mov        rdi, qword [r12+rax*8+8]                    ; CODE XREF=main+350
0000000000001f81         call       quote                                       ; quote
0000000000001f86         lea        rsi, qword [aExtraOperandS]                 ; argument "msgid" for method j_dcgettext, "extra operand %s"
0000000000001f8d         mov        rbx, rax
0000000000001f90         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f95         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f97         call       j_dcgettext                                 ; dcgettext
0000000000001f9c         mov        rcx, rbx
0000000000001f9f         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001fa2         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001fa4         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001fa6         xor        eax, eax
0000000000001fa8         call       j_error                                     ; error

                     loc_1fad:
0000000000001fad         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+168, main+1907
0000000000001fb2         call       usage                                       ; usage

                     loc_1fb7:
0000000000001fb7         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=main+1153
0000000000001fbc         mov        rdi, rcx                                    ; argument #1 for method j___overflow
0000000000001fbf         call       j___overflow                                ; __overflow
0000000000001fc4         add        eax, 0x1
0000000000001fc7         jne        loc_1c97

0000000000001fcd         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
0000000000001fd4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001fd9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001fdb         call       j_dcgettext                                 ; dcgettext
0000000000001fe0         mov        rbx, rax
0000000000001fe3         call       j___errno_location                          ; __errno_location
0000000000001fe8         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001fea         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001fed         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001ff2         xor        eax, eax
0000000000001ff4         call       j_error                                     ; error
0000000000001ff9         nop        dword [rax]                                 ; End of unwind block (FDE at 0x7090)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000002000         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x6ff4), DATA XREF=main+510, main+646
0000000000002002         mov        r9, rdx
0000000000002005         pop        rsi
0000000000002006         mov        rdx, rsp
0000000000002009         and        rsp, 0xfffffffffffffff0
000000000000200d         push       rax
000000000000200e         push       rsp
000000000000200f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000002016         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
000000000000201d         lea        rdi, qword [main]                           ; main
0000000000002024         call       qword [qword_208fd0+8]                      ; 0x208fd8
000000000000202a         hlt
                        ; endp
000000000000202b         align      16                                          ; End of unwind block (FDE at 0x6ff4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000002030         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000002037         push       rbp
0000000000002038         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000203f         cmp        rax, rdi
0000000000002042         mov        rbp, rsp
0000000000002045         je         loc_2060

0000000000002047         mov        rax, qword [qword_208fd0]                   ; qword_208fd0
000000000000204e         test       rax, rax
0000000000002051         je         loc_2060

0000000000002053         pop        rbp
0000000000002054         jmp        rax
                        ; endp
0000000000002056         align      32

                     loc_2060:
0000000000002060         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000002061         ret
                        ; endp
0000000000002062         align      16

                     register_tm_clones:
0000000000002070         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000002077         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000207e         push       rbp
000000000000207f         sub        rsi, rdi
0000000000002082         mov        rbp, rsp
0000000000002085         sar        rsi, 0x3
0000000000002089         mov        rax, rsi
000000000000208c         shr        rax, 0x3f
0000000000002090         add        rsi, rax
0000000000002093         sar        rsi, 0x1
0000000000002096         je         loc_20b0

0000000000002098         mov        rax, qword [qword_208fe8]                   ; qword_208fe8
000000000000209f         test       rax, rax
00000000000020a2         je         loc_20b0

00000000000020a4         pop        rbp
00000000000020a5         jmp        rax
                        ; endp
00000000000020a7         align      16

                     loc_20b0:
00000000000020b0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
00000000000020b1         ret
                        ; endp
00000000000020b2         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
00000000000020c0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
00000000000020c7         jne        loc_20f8

00000000000020c9         cmp        qword [qword_208ff0], 0x0                   ; qword_208ff0
00000000000020d1         push       rbp
00000000000020d2         mov        rbp, rsp
00000000000020d5         je         loc_20e3

00000000000020d7         mov        rdi, qword [__dso_handle]                   ; __dso_handle
00000000000020de         call       j_qword_208ff0                              ; qword_208ff0

                     loc_20e3:
00000000000020e3         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
00000000000020e8         mov        byte [completed.7697], 0x1                  ; completed.7697
00000000000020ef         pop        rbp
00000000000020f0         ret
                        ; endp
00000000000020f1         align      8

                     loc_20f8:
00000000000020f8         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
00000000000020fa         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000002100         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000002101         mov        rbp, rsp
0000000000002104         pop        rbp
0000000000002105         jmp        register_tm_clones                          ; register_tm_clones
000000000000210a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000002110         push       r13                                         ; Begin of unwind block (FDE at 0x7064), CODE XREF=main+1911, main+1970
0000000000002112         push       r12
0000000000002114         mov        edx, 0x5
0000000000002119         push       rbp
000000000000211a         push       rbx
000000000000211b         mov        ebp, edi
000000000000211d         sub        rsp, 0x88
0000000000002124         mov        rbx, qword [program_name]                   ; program_name
000000000000212b         mov        rax, qword [fs:0x28]
0000000000002134         mov        qword [rsp+0xa8+var_30], rax
0000000000002139         xor        eax, eax
000000000000213b         test       edi, edi
000000000000213d         je         loc_216d

000000000000213f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000002146         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002148         call       j_dcgettext                                 ; dcgettext
000000000000214d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002154         mov        rdx, rax
0000000000002157         mov        rcx, rbx
000000000000215a         mov        esi, 0x1
000000000000215f         xor        eax, eax
0000000000002161         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_2166:
0000000000002166         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+790
0000000000002168         call       j_exit                                      ; exit
                        ; endp

                     loc_216d:
000000000000216d         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [FILE]\\n", CODE XREF=usage+45
0000000000002174         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002176         call       j_dcgettext                                 ; dcgettext
000000000000217b         mov        rdx, rbx
000000000000217e         mov        rsi, rax
0000000000002181         mov        edi, 0x1
0000000000002186         xor        eax, eax
0000000000002188         call       j___printf_chk                              ; __printf_chk
000000000000218d         lea        rsi, qword [aBasedEncodeOrD]                ; argument "msgid" for method j_dcgettext, "Base%d encode or decode FILE, or standard input, to standard output.\\n"
0000000000002194         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002199         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000219b         call       j_dcgettext                                 ; dcgettext
00000000000021a0         mov        edx, 0x20
00000000000021a5         mov        rsi, rax
00000000000021a8         mov        edi, 0x1
00000000000021ad         xor        eax, eax
00000000000021af         call       j___printf_chk                              ; __printf_chk
00000000000021b4         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000021bb         lea        rsi, qword [aNwithNoFileOrW]                ; argument "msgid" for method j_dcgettext, "\\nWith no FILE, or when FILE is -, read standard input.\\n"
00000000000021c2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021c7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021c9         call       j_dcgettext                                 ; dcgettext
00000000000021ce         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000021d1         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000021d4         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000021d9         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000021e0         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
00000000000021e7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021ec         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021ee         call       j_dcgettext                                 ; dcgettext
00000000000021f3         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000021f6         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000021f9         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000021fe         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002205         lea        rsi, qword [aDDecodeDecodeD]                ; argument "msgid" for method j_dcgettext, "  -d, --decode          decode data\\n  -i, --ignore-garbage  when decoding, ignore non-alphabet characters\\n  -w, --wrap=COLS       wrap encoded lines after COLS character (default 76).\\n                          Use 0 to disable line wrapping\\n\\n"
000000000000220c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002211         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002213         call       j_dcgettext                                 ; dcgettext
0000000000002218         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000221b         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000221e         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002223         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000222a         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000002231         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002236         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002238         call       j_dcgettext                                 ; dcgettext
000000000000223d         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002240         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002243         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002248         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000224f         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000002256         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000225b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000225d         call       j_dcgettext                                 ; dcgettext
0000000000002262         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002265         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002268         lea        rbx, qword [aBase32]                        ; "base32"
000000000000226f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002274         lea        rsi, qword [aNtheDataAreEnc]                ; argument "msgid" for method j_dcgettext, "\\nThe data are encoded as described for the %s alphabet in RFC 4648.\\nWhen decoding, the input may contain newlines in addition to the bytes of\\nthe formal %s alphabet.  Use --ignore-garbage to attempt to recover\\nfrom any other non-alphabet bytes in the encod…"
000000000000227b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002280         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002282         call       j_dcgettext                                 ; dcgettext
0000000000002287         lea        rcx, qword [aBase32]                        ; "base32"
000000000000228e         mov        rsi, rax
0000000000002291         mov        edi, 0x1
0000000000002296         xor        eax, eax
0000000000002298         mov        rdx, rcx
000000000000229b         call       j___printf_chk                              ; __printf_chk
00000000000022a0         lea        rax, qword [aUsageSOptionFi+30]             ; 0x5cc9
00000000000022a7         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
00000000000022ae         mov        qword [rsp+0xa8+var_48], 0x0
00000000000022b7         mov        qword [rsp+0xa8+var_40], 0x0
00000000000022c0         mov        rdx, rsp
00000000000022c3         mov        qword [rsp+0xa8+var_A8], rax
00000000000022c7         lea        rax, qword [aTestInvocation]                ; "test invocation"
00000000000022ce         mov        qword [rsp+0xa8+var_78], rcx
00000000000022d3         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
00000000000022da         mov        qword [rsp+0xa8+var_A0], rax
00000000000022df         lea        rax, qword [aCoreutils]                     ; "coreutils"
00000000000022e6         mov        qword [rsp+0xa8+var_68], rcx
00000000000022eb         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
00000000000022f2         mov        qword [rsp+0xa8+var_98], rax
00000000000022f7         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
00000000000022fe         mov        qword [rsp+0xa8+var_58], rcx
0000000000002303         mov        qword [rsp+0xa8+var_90], rax
0000000000002308         lea        rax, qword [aSha224sum]                     ; "sha224sum"
000000000000230f         mov        qword [rsp+0xa8+var_88], rax
0000000000002314         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
000000000000231b         mov        qword [rsp+0xa8+var_80], rax
0000000000002320         mov        qword [rsp+0xa8+var_70], rax
0000000000002325         mov        qword [rsp+0xa8+var_60], rax
000000000000232a         mov        qword [rsp+0xa8+var_50], rax
000000000000232f         nop

                     loc_2330:
0000000000002330         add        rdx, 0x10                                   ; CODE XREF=usage+573
0000000000002334         mov        rdi, qword [rdx]
0000000000002337         test       rdi, rdi
000000000000233a         je         loc_234f

000000000000233c         mov        ecx, 0x7
0000000000002341         mov        rsi, rbx
0000000000002344         rep  cmpsb byte [rsi], byte [rdi]
0000000000002346         seta       al
0000000000002349         sbb        al, 0x0
000000000000234b         test       al, al
000000000000234d         jne        loc_2330

                     loc_234f:
000000000000234f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+554
0000000000002353         xor        edi, edi
0000000000002355         mov        edx, 0x5
000000000000235a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002361         test       r12, r12
0000000000002364         je         loc_242b

000000000000236a         call       j_dcgettext                                 ; dcgettext
000000000000236f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002376         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5d3f
000000000000237d         mov        rsi, rax
0000000000002380         mov        edi, 0x1
0000000000002385         xor        eax, eax
0000000000002387         call       j___printf_chk                              ; __printf_chk
000000000000238c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000238e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002393         call       j_setlocale                                 ; setlocale
0000000000002398         test       rax, rax
000000000000239b         je         loc_23b9

000000000000239d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x5d4d
00000000000023a4         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000023a9         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000023ac         call       j_strncmp                                   ; strncmp
00000000000023b1         test       eax, eax
00000000000023b3         jne        loc_24c0

                     loc_23b9:
00000000000023b9         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+651, usage+981
00000000000023c0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023c2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023c7         call       j_dcgettext                                 ; dcgettext
00000000000023cc         lea        rcx, qword [aBase32]                        ; "base32"
00000000000023d3         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000023da         mov        rsi, rax
00000000000023dd         mov        edi, 0x1
00000000000023e2         xor        eax, eax
00000000000023e4         call       j___printf_chk                              ; __printf_chk
00000000000023e9         cmp        r12, rbx
00000000000023ec         lea        rcx, qword [aMulticallInvoc+10]             ; 0x5ce5
00000000000023f3         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x68e1
00000000000023fa         cmove      rbx, rcx

                     loc_23fe:
00000000000023fe         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+932
0000000000002405         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002407         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000240c         call       j_dcgettext                                 ; dcgettext
0000000000002411         mov        rcx, rbx
0000000000002414         mov        rsi, rax
0000000000002417         mov        rdx, r12
000000000000241a         mov        edi, 0x1
000000000000241f         xor        eax, eax
0000000000002421         call       j___printf_chk                              ; __printf_chk
0000000000002426         jmp        loc_2166

                     loc_242b:
000000000000242b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+596
0000000000002430         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002437         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5d3f
000000000000243e         mov        rsi, rax
0000000000002441         mov        edi, 0x1
0000000000002446         xor        eax, eax
0000000000002448         call       j___printf_chk                              ; __printf_chk
000000000000244d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000244f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002454         call       j_setlocale                                 ; setlocale
0000000000002459         test       rax, rax
000000000000245c         je         loc_2476

000000000000245e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x5d4d
0000000000002465         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
000000000000246a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000246d         call       j_strncmp                                   ; strncmp
0000000000002472         test       eax, eax
0000000000002474         jne        loc_24b9

                     loc_2476:
0000000000002476         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+844
000000000000247d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002482         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002484         lea        r12, qword [aBase32]                        ; "base32"
000000000000248b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x5ce5
0000000000002492         call       j_dcgettext                                 ; dcgettext
0000000000002497         lea        rcx, qword [aBase32]                        ; "base32"
000000000000249e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000024a5         mov        rsi, rax
00000000000024a8         mov        edi, 0x1
00000000000024ad         xor        eax, eax
00000000000024af         call       j___printf_chk                              ; __printf_chk
00000000000024b4         jmp        loc_23fe

                     loc_24b9:
00000000000024b9         lea        r12, qword [aBase32]                        ; "base32", CODE XREF=usage+868

                     loc_24c0:
00000000000024c0         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+675
00000000000024c7         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
00000000000024ce         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024d0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024d5         call       j_dcgettext                                 ; dcgettext
00000000000024da         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
00000000000024dd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000024e0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024e5         jmp        loc_23b9
00000000000024ea         align      16                                          ; End of unwind block (FDE at 0x7064)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     decode_8:
00000000000024f0         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x70e4), CODE XREF=base32_decode_ctx+224, base32_decode_ctx+345
00000000000024f2         cmp        rsi, 0x7
00000000000024f6         jbe        loc_2668

00000000000024fc         movzx      r8d, byte [rdi]
0000000000002500         lea        rsi, qword [b32]                            ; b32
0000000000002507         movzx      r8d, byte [rsi+r8]
000000000000250c         test       r8b, r8b
000000000000250f         js         loc_2668

0000000000002515         movzx      r9d, byte [rdi+1]
000000000000251a         movzx      r9d, byte [rsi+r9]
000000000000251f         test       r9b, r9b
0000000000002522         js         loc_2668

0000000000002528         cmp        qword [rcx], 0x0
000000000000252c         mov        rax, qword [rdx]
000000000000252f         je         loc_254b

0000000000002531         mov        r10d, r9d
0000000000002534         shl        r8d, 0x3
0000000000002538         add        rax, 0x1
000000000000253c         sar        r10b, 0x2
0000000000002540         or         r8d, r10d
0000000000002543         mov        byte [rax-1], r8b
0000000000002547         sub        qword [rcx], 0x1

                     loc_254b:
000000000000254b         movzx      r8d, byte [rdi+2]                           ; CODE XREF=decode_8+63
0000000000002550         cmp        r8b, 0x3d
0000000000002554         je         loc_2670

000000000000255a         movzx      r8d, byte [rsi+r8]
000000000000255f         test       r8b, r8b
0000000000002562         js         loc_2676

0000000000002568         movzx      r10d, byte [rdi+3]
000000000000256d         movzx      r10d, byte [rsi+r10]
0000000000002572         test       r10b, r10b
0000000000002575         js         loc_2676

000000000000257b         cmp        qword [rcx], 0x0
000000000000257f         je         loc_25a1

0000000000002581         add        r8d, r8d
0000000000002584         shl        r9d, 0x6
0000000000002588         add        rax, 0x1
000000000000258c         or         r9d, r8d
000000000000258f         mov        r8d, r10d
0000000000002592         sar        r8b, 0x4
0000000000002596         or         r9d, r8d
0000000000002599         mov        byte [rax-1], r9b
000000000000259d         sub        qword [rcx], 0x1

                     loc_25a1:
00000000000025a1         movzx      r8d, byte [rdi+4]                           ; CODE XREF=decode_8+143
00000000000025a6         cmp        r8b, 0x3d
00000000000025aa         je         loc_2686

00000000000025b0         movzx      r8d, byte [rsi+r8]
00000000000025b5         test       r8b, r8b
00000000000025b8         js         loc_2676

00000000000025be         cmp        qword [rcx], 0x0
00000000000025c2         je         loc_25dd

00000000000025c4         mov        r9d, r8d
00000000000025c7         shl        r10d, 0x4
00000000000025cb         add        rax, 0x1
00000000000025cf         sar        r9b, 0x1
00000000000025d2         or         r10d, r9d
00000000000025d5         mov        byte [rax-1], r10b
00000000000025d9         sub        qword [rcx], 0x1

                     loc_25dd:
00000000000025dd         movzx      r9d, byte [rdi+5]                           ; CODE XREF=decode_8+210
00000000000025e2         cmp        r9b, 0x3d
00000000000025e6         je         loc_268c

00000000000025ec         movzx      r9d, byte [rsi+r9]
00000000000025f1         test       r9b, r9b
00000000000025f4         js         loc_2676

00000000000025fa         movzx      r10d, byte [rdi+6]
00000000000025ff         movzx      r10d, byte [rsi+r10]
0000000000002604         test       r10b, r10b
0000000000002607         js         loc_2676

0000000000002609         cmp        qword [rcx], 0x0
000000000000260d         je         loc_2630

000000000000260f         shl        r9d, 0x2
0000000000002613         shl        r8d, 0x7
0000000000002617         add        rax, 0x1
000000000000261b         or         r8d, r9d
000000000000261e         mov        r9d, r10d
0000000000002621         sar        r9b, 0x3
0000000000002625         or         r8d, r9d
0000000000002628         mov        byte [rax-1], r8b
000000000000262c         sub        qword [rcx], 0x1

                     loc_2630:
0000000000002630         movzx      edi, byte [rdi+7]                           ; CODE XREF=decode_8+285
0000000000002634         cmp        dil, 0x3d
0000000000002638         je         loc_2660

000000000000263a         movzx      esi, byte [rsi+rdi]
000000000000263e         test       sil, sil
0000000000002641         js         loc_2676

0000000000002643         cmp        qword [rcx], 0x0
0000000000002647         je         loc_2660

0000000000002649         shl        r10d, 0x5
000000000000264d         add        rax, 0x1
0000000000002651         or         r10d, esi
0000000000002654         mov        byte [rax-1], r10b
0000000000002658         sub        qword [rcx], 0x1
000000000000265c         nop        dword [rax]

                     loc_2660:
0000000000002660         mov        qword [rdx], rax                            ; CODE XREF=decode_8+328, decode_8+343, decode_8+424
0000000000002663         mov        eax, 0x1

                     loc_2668:
0000000000002668         ret                                                    ; CODE XREF=decode_8+6, decode_8+31, decode_8+50
                        ; endp
000000000000266a         align      16

                     loc_2670:
0000000000002670         cmp        byte [rdi+3], 0x3d                          ; CODE XREF=decode_8+100
0000000000002674         je         loc_2680

                     loc_2676:
0000000000002676         mov        qword [rdx], rax                            ; CODE XREF=decode_8+114, decode_8+133, decode_8+200, decode_8+260, decode_8+279, decode_8+337, decode_8+404, decode_8+410, decode_8+416, decode_8+422
0000000000002679         xor        eax, eax
000000000000267b         ret
                        ; endp
000000000000267c         align      128

                     loc_2680:
0000000000002680         cmp        byte [rdi+4], 0x3d                          ; CODE XREF=decode_8+388
0000000000002684         jne        loc_2676

                     loc_2686:
0000000000002686         cmp        byte [rdi+5], 0x3d                          ; CODE XREF=decode_8+186
000000000000268a         jne        loc_2676

                     loc_268c:
000000000000268c         cmp        byte [rdi+6], 0x3d                          ; CODE XREF=decode_8+246
0000000000002690         jne        loc_2676

0000000000002692         cmp        byte [rdi+7], 0x3d
0000000000002696         jne        loc_2676

0000000000002698         jmp        loc_2660
000000000000269a         align      32                                          ; End of unwind block (FDE at 0x70e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base32_encode:
00000000000026a0         lea        r8, qword [b32str.3066]                     ; Begin of unwind block (FDE at 0x70f8), b32str.3066, CODE XREF=main+1267, base32_encode_alloc+118
00000000000026a7         jmp        loc_27cb
00000000000026ac         align      16

                     loc_26b0:
00000000000026b0         movzx      r9d, byte [rdi+1]                           ; CODE XREF=base32_encode+352
00000000000026b5         mov        r10d, r9d
00000000000026b8         shr        r10b, 0x6
00000000000026bc         add        eax, r10d
00000000000026bf         and        eax, 0x1f
00000000000026c2         cmp        rcx, 0x2
00000000000026c6         movzx      eax, byte [r8+rax]
00000000000026cb         mov        byte [rdx+1], al
00000000000026ce         je         loc_2875

00000000000026d4         mov        eax, r9d
00000000000026d7         shr        al, 0x1
00000000000026d9         and        eax, 0x1f
00000000000026dc         cmp        rcx, 0x3
00000000000026e0         movzx      eax, byte [r8+rax]
00000000000026e5         mov        byte [rdx+2], al
00000000000026e8         je         loc_2875

00000000000026ee         shl        r9d, 0x4
00000000000026f2         cmp        rsi, 0x2
00000000000026f6         je         loc_2860

00000000000026fc         movzx      eax, byte [rdi+2]
0000000000002700         mov        r10d, eax
0000000000002703         shr        r10b, 0x4
0000000000002707         add        r9d, r10d
000000000000270a         and        r9d, 0x1f
000000000000270e         cmp        rcx, 0x4
0000000000002712         movzx      r9d, byte [r8+r9]
0000000000002717         mov        byte [rdx+3], r9b
000000000000271b         je         loc_2875

0000000000002721         cmp        rsi, 0x3
0000000000002725         lea        r9d, dword [rax+rax]
0000000000002729         je         loc_2880

000000000000272f         movzx      eax, byte [rdi+3]
0000000000002733         mov        r10d, eax
0000000000002736         shr        r10b, 0x7
000000000000273a         add        r9d, r10d
000000000000273d         and        r9d, 0x1f
0000000000002741         cmp        rcx, 0x5
0000000000002745         movzx      r9d, byte [r8+r9]
000000000000274a         mov        byte [rdx+4], r9b
000000000000274e         je         loc_2875

0000000000002754         mov        r9d, eax
0000000000002757         shr        r9b, 0x2
000000000000275b         and        r9d, 0x1f
000000000000275f         cmp        rcx, 0x6
0000000000002763         movzx      r9d, byte [r8+r9]
0000000000002768         mov        byte [rdx+5], r9b
000000000000276c         je         loc_2875

0000000000002772         shl        eax, 0x3
0000000000002775         cmp        rsi, 0x4
0000000000002779         je         loc_2898

000000000000277f         movzx      r9d, byte [rdi+4]
0000000000002784         mov        r10d, r9d
0000000000002787         shr        r10b, 0x5
000000000000278b         add        eax, r10d
000000000000278e         and        eax, 0x1f
0000000000002791         cmp        rcx, 0x7
0000000000002795         movzx      eax, byte [r8+rax]
000000000000279a         mov        byte [rdx+6], al
000000000000279d         je         loc_2875

00000000000027a3         and        r9d, 0x1f
00000000000027a7         cmp        rcx, 0x8
00000000000027ab         movzx      eax, byte [r8+r9]
00000000000027b0         mov        byte [rdx+7], al
00000000000027b3         je         loc_2875

00000000000027b9         sub        rsi, 0x5
00000000000027bd         je         loc_27c3

00000000000027bf         add        rdi, 0x5

                     loc_27c3:
00000000000027c3         add        rdx, 0x8                                    ; CODE XREF=base32_encode+285, base32_encode+437
00000000000027c7         sub        rcx, 0x8

                     loc_27cb:
00000000000027cb         test       rsi, rsi                                    ; CODE XREF=base32_encode+7
00000000000027ce         je         loc_28b0

00000000000027d4         test       rcx, rcx
00000000000027d7         je         loc_28b0

00000000000027dd         movzx      eax, byte [rdi]
00000000000027e0         mov        r9d, eax
00000000000027e3         shr        r9b, 0x3
00000000000027e7         and        r9d, 0x1f
00000000000027eb         cmp        rcx, 0x1
00000000000027ef         movzx      r9d, byte [r8+r9]
00000000000027f4         mov        byte [rdx], r9b
00000000000027f7         je         loc_2875

00000000000027f9         shl        eax, 0x2
00000000000027fc         cmp        rsi, 0x1
0000000000002800         jne        loc_26b0

0000000000002806         and        eax, 0x1c
0000000000002809         cmp        rcx, 0x2
000000000000280d         movzx      eax, byte [r8+rax]
0000000000002812         mov        byte [rdx+1], al
0000000000002815         je         loc_2875

0000000000002817         cmp        rcx, 0x3
000000000000281b         mov        byte [rdx+2], 0x3d
000000000000281f         je         loc_2875

0000000000002821         cmp        rcx, 0x4
0000000000002825         mov        byte [rdx+3], 0x3d
0000000000002829         je         loc_2875

                     loc_282b:
000000000000282b         cmp        rcx, 0x5                                    ; CODE XREF=base32_encode+467
000000000000282f         mov        byte [rdx+4], 0x3d
0000000000002833         je         loc_2875

                     loc_2835:
0000000000002835         cmp        rcx, 0x6                                    ; CODE XREF=base32_encode+496
0000000000002839         mov        byte [rdx+5], 0x3d
000000000000283d         je         loc_2875

000000000000283f         cmp        rcx, 0x7
0000000000002843         mov        byte [rdx+6], 0x3d
0000000000002847         je         loc_2875

                     loc_2849:
0000000000002849         cmp        rcx, 0x8                                    ; CODE XREF=base32_encode+521
000000000000284d         mov        byte [rdx+7], 0x3d
0000000000002851         je         loc_2875

0000000000002853         xor        esi, esi
0000000000002855         jmp        loc_27c3
000000000000285a         align      32

                     loc_2860:
0000000000002860         and        r9d, 0x1f                                   ; CODE XREF=base32_encode+86
0000000000002864         cmp        rcx, 0x4
0000000000002868         movsxd     r9, r9d
000000000000286b         movzx      eax, byte [r8+r9]
0000000000002870         mov        byte [rdx+3], al
0000000000002873         jne        loc_282b

                     loc_2875:
0000000000002875         ret                                                    ; CODE XREF=base32_encode+46, base32_encode+72, base32_encode+123, base32_encode+174, base32_encode+204, base32_encode+253, base32_encode+275, base32_encode+343, base32_encode+373, base32_encode+383, base32_encode+393
                        ; endp
0000000000002876         align      128

                     loc_2880:
0000000000002880         and        r9d, 0x1e                                   ; CODE XREF=base32_encode+137
0000000000002884         cmp        rcx, 0x5
0000000000002888         movzx      eax, byte [r8+r9]
000000000000288d         mov        byte [rdx+4], al
0000000000002890         jne        loc_2835

0000000000002892         ret
                        ; endp
0000000000002894         align      8

                     loc_2898:
0000000000002898         and        eax, 0x18                                   ; CODE XREF=base32_encode+217
000000000000289b         cmp        rcx, 0x7
000000000000289f         movzx      eax, byte [r8+rax]
00000000000028a4         mov        byte [rdx+6], al
00000000000028a7         je         loc_2875

00000000000028a9         jmp        loc_2849
00000000000028ab         align      16

                     loc_28b0:
00000000000028b0         test       rcx, rcx                                    ; CODE XREF=base32_encode+302, base32_encode+311
00000000000028b3         je         loc_2875

00000000000028b5         mov        byte [rdx], 0x0
00000000000028b8         ret
                        ; endp
00000000000028b9         align      64                                          ; End of unwind block (FDE at 0x70f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base32_encode_alloc:
00000000000028c0         push       r14                                         ; Begin of unwind block (FDE at 0x710c)
00000000000028c2         push       r13
00000000000028c4         mov        r13, rdx
00000000000028c7         lea        rdx, qword [rsi+4]
00000000000028cb         push       r12
00000000000028cd         push       rbp
00000000000028ce         push       rbx
00000000000028cf         movabs     rbx, 0xcccccccccccccccd
00000000000028d9         mov        rax, rdx
00000000000028dc         mul        rbx
00000000000028df         shr        rdx, 0x2
00000000000028e3         lea        rbx, qword [rdx*8]
00000000000028eb         lea        rbp, qword [rbx+1]
00000000000028ef         cmp        rsi, rbp
00000000000028f2         jbe        loc_2910

00000000000028f4         mov        qword [r13], 0x0
00000000000028fc         xor        ebp, ebp

                     loc_28fe:
00000000000028fe         pop        rbx                                         ; CODE XREF=base32_encode_alloc+101
00000000000028ff         mov        rax, rbp
0000000000002902         pop        rbp
0000000000002903         pop        r12
0000000000002905         pop        r13
0000000000002907         pop        r14
0000000000002909         ret
                        ; endp
000000000000290a         align      16

                     loc_2910:
0000000000002910         mov        r14, rdi                                    ; CODE XREF=base32_encode_alloc+50
0000000000002913         mov        rdi, rbp                                    ; argument "__size" for method j_malloc
0000000000002916         mov        r12, rsi
0000000000002919         call       j_malloc                                    ; malloc
000000000000291e         test       rax, rax
0000000000002921         mov        qword [r13], rax
0000000000002925         je         loc_28fe

0000000000002927         mov        rcx, rbp
000000000000292a         mov        rdx, rax
000000000000292d         mov        rbp, rbx
0000000000002930         mov        rsi, r12
0000000000002933         mov        rdi, r14
0000000000002936         call       base32_encode                               ; base32_encode
000000000000293b         pop        rbx
000000000000293c         mov        rax, rbp
000000000000293f         pop        rbp
0000000000002940         pop        r12
0000000000002942         pop        r13
0000000000002944         pop        r14
0000000000002946         ret
                        ; endp
0000000000002947         align      16                                          ; End of unwind block (FDE at 0x710c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isbase32:
0000000000002950         lea        rax, qword [b32]                            ; Begin of unwind block (FDE at 0x7158), b32, CODE XREF=main+715
0000000000002957         movzx      edi, dil
000000000000295b         movzx      eax, byte [rax+rdi]
000000000000295f         not        eax
0000000000002961         shr        al, 0x7
0000000000002964         ret
                        ; endp
0000000000002965         align      16                                          ; End of unwind block (FDE at 0x7158)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base32_decode_ctx_init:
0000000000002970         mov        dword [rdi], 0x0                            ; Begin of unwind block (FDE at 0x716c), CODE XREF=main+556
0000000000002976         ret
                        ; endp
0000000000002977         align      128                                         ; End of unwind block (FDE at 0x716c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_61: int8_t, -97
        ;    var_62: int8_t, -98


                     base32_decode_ctx:
0000000000002980         push       r15                                         ; Begin of unwind block (FDE at 0x7180), CODE XREF=main+871, base32_decode_alloc_ctx+90
0000000000002982         push       r14
0000000000002984         mov        r11, rdx
0000000000002987         push       r13
0000000000002989         push       r12
000000000000298b         mov        r14, rdi
000000000000298e         push       rbp
000000000000298f         push       rbx
0000000000002990         mov        r12, rsi
0000000000002993         sub        rsp, 0x38
0000000000002997         mov        r15, qword [r8]
000000000000299a         mov        rbx, qword [fs:0x28]
00000000000029a3         mov        qword [rsp+0x68+var_40], rbx
00000000000029a8         xor        ebx, ebx
00000000000029aa         test       rdi, rdi
00000000000029ad         mov        qword [rsp+0x68+var_50], rcx
00000000000029b2         mov        qword [rsp+0x68+var_58], r8
00000000000029b7         mov        qword [rsp+0x68+var_48], r15
00000000000029bc         setne      byte [rsp+0x68+var_61]
00000000000029c1         je         loc_2bf0

00000000000029c7         test       rdx, rdx
00000000000029ca         mov        edx, dword [rdi]
00000000000029cc         setne      byte [rsp+0x68+var_62]
00000000000029d1         movzx      eax, byte [rsp+0x68+var_62]
00000000000029d6         test       edx, edx
00000000000029d8         sete       r13b
00000000000029dc         and        r13d, eax

                     loc_29df:
00000000000029df         lea        rax, qword [r14+4]                          ; CODE XREF=base32_decode_ctx+635
00000000000029e3         lea        rbp, qword [rsp+0x68+var_48]
00000000000029e8         lea        rbx, qword [rsp+0x68+var_50]
00000000000029ed         mov        qword [rsp+0x68+var_60], rax

                     loc_29f2:
00000000000029f2         test       r13b, r13b                                  ; CODE XREF=base32_decode_ctx+592
00000000000029f5         mov        rdx, r15
00000000000029f8         jne        loc_2acd

                     loc_29fe:
00000000000029fe         test       r11, r11                                    ; CODE XREF=base32_decode_ctx+359
0000000000002a01         sete       al
0000000000002a04         and        al, byte [rsp+0x68+var_62]
0000000000002a08         jne        loc_2a90

                     loc_2a0e:
0000000000002a0e         test       r11, r11                                    ; CODE XREF=base32_decode_ctx+266
0000000000002a11         je         loc_2af0

0000000000002a17         cmp        byte [r12], 0xa
0000000000002a1c         je         loc_2bc0

0000000000002a22         sub        rdx, r15
0000000000002a25         add        qword [rsp+0x68+var_50], rdx
0000000000002a2a         test       r14, r14
0000000000002a2d         mov        qword [rsp+0x68+var_48], r15
0000000000002a32         lea        r15, qword [r12+r11]
0000000000002a36         jne        loc_2b09

                     loc_2a3c:
0000000000002a3c         mov        rdi, r12                                    ; CODE XREF=base32_decode_ctx+617

                     loc_2a3f:
0000000000002a3f         cmp        r11, 0x7                                    ; CODE XREF=base32_decode_ctx+465, base32_decode_ctx+560
0000000000002a43         ja         loc_2a57

0000000000002a45         cmp        byte [rsp+0x68+var_61], 0x0
0000000000002a4a         je         loc_2a57

0000000000002a4c         cmp        byte [rsp+0x68+var_62], 0x0
0000000000002a51         jne        loc_2b57

                     loc_2a57:
0000000000002a57         mov        rcx, rbp                                    ; CODE XREF=base32_decode_ctx+195, base32_decode_ctx+202, base32_decode_ctx+666
0000000000002a5a         mov        rdx, rbx
0000000000002a5d         mov        rsi, r11
0000000000002a60         call       decode_8                                    ; decode_8
0000000000002a65         test       al, al
0000000000002a67         je         loc_2c1f

0000000000002a6d         mov        r11, r15
0000000000002a70         mov        r15, qword [rsp+0x68+var_48]
0000000000002a75         sub        r11, r12
0000000000002a78         test       r13b, r13b
0000000000002a7b         mov        rdx, r15
0000000000002a7e         jne        loc_2acd

0000000000002a80         test       r11, r11
0000000000002a83         sete       al
0000000000002a86         and        al, byte [rsp+0x68+var_62]
0000000000002a8a         je         loc_2a0e

0000000000002a8c         nop        dword [rax]

                     loc_2a90:
0000000000002a90         mov        rbx, qword [rsp+0x68+var_58]                ; CODE XREF=base32_decode_ctx+136, base32_decode_ctx+481, base32_decode_ctx+648, base32_decode_ctx+676
0000000000002a95         sub        qword [rbx], rdx
0000000000002a98         mov        rbx, qword [rsp+0x68+var_40]
0000000000002a9d         xor        rbx, qword [fs:0x28]
0000000000002aa6         jne        loc_2c29

0000000000002aac         add        rsp, 0x38
0000000000002ab0         pop        rbx
0000000000002ab1         pop        rbp
0000000000002ab2         pop        r12
0000000000002ab4         pop        r13
0000000000002ab6         pop        r14
0000000000002ab8         pop        r15
0000000000002aba         ret
                        ; endp
0000000000002abb         align      64

                     loc_2ac0:
0000000000002ac0         mov        r15, qword [rsp+0x68+var_48]                ; CODE XREF=base32_decode_ctx+352
0000000000002ac5         add        r12, 0x8
0000000000002ac9         sub        r11, 0x8

                     loc_2acd:
0000000000002acd         mov        rcx, rbp                                    ; CODE XREF=base32_decode_ctx+120, base32_decode_ctx+254
0000000000002ad0         mov        rdx, rbx
0000000000002ad3         mov        rsi, r11
0000000000002ad6         mov        rdi, r12
0000000000002ad9         call       decode_8                                    ; decode_8
0000000000002ade         test       al, al
0000000000002ae0         jne        loc_2ac0

0000000000002ae2         mov        rdx, qword [rsp+0x68+var_48]
0000000000002ae7         jmp        loc_29fe
0000000000002aec         align      16

                     loc_2af0:
0000000000002af0         sub        rdx, r15                                    ; CODE XREF=base32_decode_ctx+145
0000000000002af3         add        qword [rsp+0x68+var_50], rdx
0000000000002af8         test       r14, r14
0000000000002afb         mov        qword [rsp+0x68+var_48], r15
0000000000002b00         je         loc_2c00

0000000000002b06         mov        r15, r12

                     loc_2b09:
0000000000002b09         mov        eax, dword [r14]                            ; CODE XREF=base32_decode_ctx+182
0000000000002b0c         cmp        eax, 0x8
0000000000002b0f         je         loc_2b70

0000000000002b11         test       eax, eax
0000000000002b13         je         loc_2b77

                     loc_2b15:
0000000000002b15         cmp        r12, r15                                    ; CODE XREF=base32_decode_ctx+535
0000000000002b18         jae        loc_2b46

0000000000002b1a         nop        word [rax+rax]

                     loc_2b20:
0000000000002b20         add        r12, 0x1                                    ; CODE XREF=base32_decode_ctx+452
0000000000002b24         movzx      edx, byte [r12-1]
0000000000002b2a         cmp        dl, 0xa
0000000000002b2d         je         loc_2b41

0000000000002b2f         lea        ecx, dword [rax+1]
0000000000002b32         cmp        ecx, 0x8
0000000000002b35         mov        dword [r14], ecx
0000000000002b38         mov        byte [r14+rax+4], dl
0000000000002b3d         je         loc_2ba0

0000000000002b3f         mov        eax, ecx

                     loc_2b41:
0000000000002b41         cmp        r12, r15                                    ; CODE XREF=base32_decode_ctx+429
0000000000002b44         jne        loc_2b20

                     loc_2b46:
0000000000002b46         mov        r11d, eax                                   ; CODE XREF=base32_decode_ctx+408
0000000000002b49         mov        rdi, qword [rsp+0x68+var_60]
0000000000002b4e         test       r11, r11
0000000000002b51         jne        loc_2a3f

                     loc_2b57:
0000000000002b57         mov        rdx, qword [rsp+0x68+var_48]                ; CODE XREF=base32_decode_ctx+209, base32_decode_ctx+566
0000000000002b5c         mov        eax, 0x1
0000000000002b61         jmp        loc_2a90
0000000000002b66         align      16

                     loc_2b70:
0000000000002b70         mov        dword [r14], 0x0                            ; CODE XREF=base32_decode_ctx+399

                     loc_2b77:
0000000000002b77         cmp        r11, 0x7                                    ; CODE XREF=base32_decode_ctx+403
0000000000002b7b         jle        loc_2b94

0000000000002b7d         mov        edx, 0x8                                    ; argument "__n" for method j_memchr
0000000000002b82         mov        esi, 0xa                                    ; argument "__c" for method j_memchr
0000000000002b87         mov        rdi, r12                                    ; argument "__s" for method j_memchr
0000000000002b8a         call       j_memchr                                    ; memchr
0000000000002b8f         test       rax, rax
0000000000002b92         je         loc_2c0d

                     loc_2b94:
0000000000002b94         mov        eax, dword [r14]                            ; CODE XREF=base32_decode_ctx+507
0000000000002b97         jmp        loc_2b15
0000000000002b9c         align      32

                     loc_2ba0:
0000000000002ba0         mov        eax, 0x8                                    ; CODE XREF=base32_decode_ctx+445
0000000000002ba5         mov        rdi, qword [rsp+0x68+var_60]
0000000000002baa         mov        r11d, eax
0000000000002bad         test       r11, r11
0000000000002bb0         jne        loc_2a3f

0000000000002bb6         jmp        loc_2b57
0000000000002bb8         align      64

                     loc_2bc0:
0000000000002bc0         test       r14, r14                                    ; CODE XREF=base32_decode_ctx+156
0000000000002bc3         je         loc_2bd8

0000000000002bc5         add        r12, 0x1
0000000000002bc9         sub        r11, 0x1
0000000000002bcd         mov        r15, rdx
0000000000002bd0         jmp        loc_29f2
0000000000002bd5         align      8

                     loc_2bd8:
0000000000002bd8         sub        rdx, r15                                    ; CODE XREF=base32_decode_ctx+579
0000000000002bdb         mov        qword [rsp+0x68+var_48], r15
0000000000002be0         add        qword [rsp+0x68+var_50], rdx
0000000000002be5         lea        r15, qword [r12+r11]
0000000000002be9         jmp        loc_2a3c
0000000000002bee         align      16

                     loc_2bf0:
0000000000002bf0         mov        r13d, 0x1                                   ; CODE XREF=base32_decode_ctx+65
0000000000002bf6         mov        byte [rsp+0x68+var_62], 0x1
0000000000002bfb         jmp        loc_29df

                     loc_2c00:
0000000000002c00         mov        rdx, r15                                    ; CODE XREF=base32_decode_ctx+384
0000000000002c03         mov        eax, 0x1
0000000000002c08         jmp        loc_2a90

                     loc_2c0d:
0000000000002c0d         mov        rdi, r12                                    ; CODE XREF=base32_decode_ctx+530
0000000000002c10         mov        r11d, 0x8
0000000000002c16         add        r12, 0x8
0000000000002c1a         jmp        loc_2a57

                     loc_2c1f:
0000000000002c1f         mov        rdx, qword [rsp+0x68+var_48]                ; CODE XREF=base32_decode_ctx+231
0000000000002c24         jmp        loc_2a90

                     loc_2c29:
0000000000002c29         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=base32_decode_ctx+294
                        ; endp
0000000000002c2e         align      16                                          ; End of unwind block (FDE at 0x7180)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_39: int8_t, -57


                     base32_decode_alloc_ctx:
0000000000002c30         push       r14                                         ; Begin of unwind block (FDE at 0x71cc)
0000000000002c32         push       r13
0000000000002c34         mov        r14, rdx
0000000000002c37         push       r12
0000000000002c39         push       rbp
0000000000002c3a         mov        r12, rdi
0000000000002c3d         push       rbx
0000000000002c3e         mov        r13, rsi
0000000000002c41         mov        rbx, rcx
0000000000002c44         mov        rbp, r8
0000000000002c47         sub        rsp, 0x20
0000000000002c4b         mov        rax, qword [fs:0x28]
0000000000002c54         mov        qword [rsp+0x48+var_30], rax
0000000000002c59         xor        eax, eax
0000000000002c5b         mov        rax, rdx
0000000000002c5e         shr        rax, 0x3
0000000000002c62         lea        rdi, qword [rax+rax*4+5]                    ; argument "__size" for method j_malloc
0000000000002c67         mov        qword [rsp+0x48+var_38], rdi
0000000000002c6c         call       j_malloc                                    ; malloc
0000000000002c71         test       rax, rax
0000000000002c74         mov        qword [rbx], rax
0000000000002c77         je         loc_2ca8

0000000000002c79         lea        r8, qword [rsp+0x48+var_38]
0000000000002c7e         mov        rcx, rax
0000000000002c81         mov        rdx, r14
0000000000002c84         mov        rsi, r13
0000000000002c87         mov        rdi, r12
0000000000002c8a         call       base32_decode_ctx                           ; base32_decode_ctx
0000000000002c8f         test       al, al
0000000000002c91         je         loc_2cd0

0000000000002c93         test       rbp, rbp
0000000000002c96         je         loc_2ca8

0000000000002c98         mov        rdx, qword [rsp+0x48+var_38]
0000000000002c9d         mov        qword [rbp], rdx
0000000000002ca1         jmp        loc_2cad
0000000000002ca3         align      8

                     loc_2ca8:
0000000000002ca8         mov        eax, 0x1                                    ; CODE XREF=base32_decode_alloc_ctx+71, base32_decode_alloc_ctx+102

                     loc_2cad:
0000000000002cad         mov        rcx, qword [rsp+0x48+var_30]                ; CODE XREF=base32_decode_alloc_ctx+113, base32_decode_alloc_ctx+184
0000000000002cb2         xor        rcx, qword [fs:0x28]
0000000000002cbb         jne        loc_2cea

0000000000002cbd         add        rsp, 0x20
0000000000002cc1         pop        rbx
0000000000002cc2         pop        rbp
0000000000002cc3         pop        r12
0000000000002cc5         pop        r13
0000000000002cc7         pop        r14
0000000000002cc9         ret
                        ; endp
0000000000002cca         align      16

                     loc_2cd0:
0000000000002cd0         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=base32_decode_alloc_ctx+97
0000000000002cd3         mov        byte [rsp+0x48+var_39], al
0000000000002cd7         call       j_free                                      ; free
0000000000002cdc         mov        qword [rbx], 0x0
0000000000002ce3         movzx      eax, byte [rsp+0x48+var_39]
0000000000002ce8         jmp        loc_2cad

                     loc_2cea:
0000000000002cea         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=base32_decode_alloc_ctx+139
                        ; endp
0000000000002cef         align      16                                          ; End of unwind block (FDE at 0x71cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002cf0         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x7214), file_name
0000000000002cf7         ret
                        ; endp
0000000000002cf8         align      256                                         ; End of unwind block (FDE at 0x7214)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002d00         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x7228), ignore_EPIPE
0000000000002d07         ret
                        ; endp
0000000000002d08         align      16                                          ; End of unwind block (FDE at 0x7228)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002d10         push       rbp                                         ; Begin of unwind block (FDE at 0x723c), DATA XREF=main+99
0000000000002d11         push       rbx
0000000000002d12         sub        rsp, 0x8
0000000000002d16         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002d1d         call       close_stream                                ; close_stream
0000000000002d22         test       eax, eax
0000000000002d24         je         loc_2d3c

0000000000002d26         call       j___errno_location                          ; __errno_location
0000000000002d2b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002d32         mov        rbx, rax
0000000000002d35         je         loc_2d53

0000000000002d37         cmp        dword [rax], 0x20
0000000000002d3a         jne        loc_2d53

                     loc_2d3c:
0000000000002d3c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000002d43         call       close_stream                                ; close_stream
0000000000002d48         test       eax, eax
0000000000002d4a         jne        loc_2d92

0000000000002d4c         add        rsp, 0x8
0000000000002d50         pop        rbx
0000000000002d51         pop        rbp
0000000000002d52         ret
                        ; endp

                     loc_2d53:
0000000000002d53         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
0000000000002d5a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002d5c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002d61         call       j_dcgettext                                 ; dcgettext
0000000000002d66         mov        rdi, qword [file_name]                      ; file_name
0000000000002d6d         mov        rbp, rax
0000000000002d70         test       rdi, rdi
0000000000002d73         je         loc_2d9d

0000000000002d75         call       quotearg_colon                              ; quotearg_colon
0000000000002d7a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000002d7c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002d83         mov        rcx, rax
0000000000002d86         mov        r8, rbp
0000000000002d89         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002d8b         xor        eax, eax
0000000000002d8d         call       j_error                                     ; error

                     loc_2d92:
0000000000002d92         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002d98         call       j__exit                                     ; _exit
                        ; endp

                     loc_2d9d:
0000000000002d9d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
0000000000002d9f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6364
0000000000002da6         mov        rcx, rax
0000000000002da9         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002dab         xor        eax, eax
0000000000002dad         call       j_error                                     ; error
0000000000002db2         jmp        loc_2d92
0000000000002db4         align      64                                          ; End of unwind block (FDE at 0x723c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
0000000000002dc0         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x726c)
                        ; endp
0000000000002dc5         align      16                                          ; End of unwind block (FDE at 0x726c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
0000000000002dd0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7280), CODE XREF=main+490
0000000000002dd3         je         loc_2df0

0000000000002dd5         push       rbx
0000000000002dd6         mov        ebx, esi
0000000000002dd8         call       j_fileno                                    ; fileno
0000000000002ddd         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
0000000000002ddf         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
0000000000002de1         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
0000000000002de3         pop        rbx
0000000000002de4         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
0000000000002de6         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
0000000000002deb         align      16

                     loc_2df0:
0000000000002df0         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
0000000000002df2         align      512                                         ; End of unwind block (FDE at 0x7280)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000002e00         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x729c), CODE XREF=main+46
0000000000002e03         push       rbx
0000000000002e04         je         loc_2e7d

0000000000002e06         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000002e0b         mov        rbx, rdi
0000000000002e0e         call       j_strrchr                                   ; strrchr
0000000000002e13         test       rax, rax
0000000000002e16         je         loc_2e6d

0000000000002e18         lea        r8, qword [rax+1]
0000000000002e1c         mov        rdx, r8
0000000000002e1f         sub        rdx, rbx
0000000000002e22         cmp        rdx, 0x6
0000000000002e26         jle        loc_2e6d

0000000000002e28         lea        rsi, qword [rax-6]
0000000000002e2c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000002e33         mov        ecx, 0x7
0000000000002e38         rep  cmpsb byte [rsi], byte [rdi]
0000000000002e3a         seta       dl
0000000000002e3d         sbb        dl, 0x0
0000000000002e40         test       dl, dl
0000000000002e42         jne        loc_2e6d

0000000000002e44         lea        rdi, qword [aLibs+8]                        ; 0x63a8
0000000000002e4b         mov        ecx, 0x3
0000000000002e50         mov        rsi, r8
0000000000002e53         mov        rbx, r8
0000000000002e56         rep  cmpsb byte [rsi], byte [rdi]
0000000000002e58         seta       dl
0000000000002e5b         sbb        dl, 0x0
0000000000002e5e         test       dl, dl
0000000000002e60         jne        loc_2e6d

0000000000002e62         lea        rbx, qword [rax+4]
0000000000002e66         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_2e6d:
0000000000002e6d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002e74         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
0000000000002e7b         pop        rbx
0000000000002e7c         ret
                        ; endp

                     loc_2e7d:
0000000000002e7d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002e84         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
0000000000002e8b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002e90         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002e95         call       j_fwrite                                    ; fwrite
0000000000002e9a         call       j_abort                                     ; abort
                        ; endp
0000000000002e9f         align      32                                          ; End of unwind block (FDE at 0x729c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002ea0         push       rbp                                         ; Begin of unwind block (FDE at 0x72bc), CODE XREF=sub_36d0+2597, sub_36d0+2619
0000000000002ea1         push       rbx
0000000000002ea2         mov        rbp, rdi
0000000000002ea5         mov        ebx, esi
0000000000002ea7         sub        rsp, 0x8
0000000000002eab         call       locale_charset                              ; locale_charset
0000000000002eb0         movzx      edx, byte [rax]
0000000000002eb3         and        edx, 0xffffffdf
0000000000002eb6         cmp        dl, 0x55
0000000000002eb9         je         loc_2f30

0000000000002ebb         cmp        dl, 0x47
0000000000002ebe         je         loc_2ee0

                     loc_2ec0:
0000000000002ec0         lea        rax, qword [aLibs+27]                       ; 0x63bb, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002ec7         lea        rdx, qword [aLibs+29]                       ; 0x63bd
0000000000002ece         cmp        ebx, 0x9
0000000000002ed1         cmovne     rax, rdx
0000000000002ed5         add        rsp, 0x8
0000000000002ed9         pop        rbx
0000000000002eda         pop        rbp
0000000000002edb         ret
                        ; endp
0000000000002edc         align      32

                     loc_2ee0:
0000000000002ee0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000002ee4         and        edx, 0xffffffdf
0000000000002ee7         cmp        dl, 0x42
0000000000002eea         jne        loc_2ec0

0000000000002eec         cmp        byte [rax+2], 0x31
0000000000002ef0         jne        loc_2ec0

0000000000002ef2         cmp        byte [rax+3], 0x38
0000000000002ef6         jne        loc_2ec0

0000000000002ef8         cmp        byte [rax+4], 0x30
0000000000002efc         jne        loc_2ec0

0000000000002efe         cmp        byte [rax+5], 0x33
0000000000002f02         jne        loc_2ec0

0000000000002f04         cmp        byte [rax+6], 0x30
0000000000002f08         jne        loc_2ec0

0000000000002f0a         cmp        byte [rax+7], 0x0
0000000000002f0e         jne        loc_2ec0

0000000000002f10         cmp        byte [rbp], 0x60
0000000000002f14         lea        rax, qword [aLibs+20]                       ; 0x63b4
0000000000002f1b         lea        rdx, qword [aLibs+24]                       ; 0x63b8
0000000000002f22         cmovne     rax, rdx
0000000000002f26         add        rsp, 0x8
0000000000002f2a         pop        rbx
0000000000002f2b         pop        rbp
0000000000002f2c         ret
                        ; endp
0000000000002f2d         align      16

                     loc_2f30:
0000000000002f30         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000002f34         and        edx, 0xffffffdf
0000000000002f37         cmp        dl, 0x54
0000000000002f3a         jne        loc_2ec0

0000000000002f3c         movzx      edx, byte [rax+2]
0000000000002f40         and        edx, 0xffffffdf
0000000000002f43         cmp        dl, 0x46
0000000000002f46         jne        loc_2ec0

0000000000002f4c         cmp        byte [rax+3], 0x2d
0000000000002f50         jne        loc_2ec0

0000000000002f56         cmp        byte [rax+4], 0x38
0000000000002f5a         jne        loc_2ec0

0000000000002f60         cmp        byte [rax+5], 0x0
0000000000002f64         jne        loc_2ec0

0000000000002f6a         cmp        byte [rbp], 0x60
0000000000002f6e         lea        rax, qword [aLibs+12]                       ; 0x63ac
0000000000002f75         lea        rdx, qword [aLibs+16]                       ; 0x63b0
0000000000002f7c         cmovne     rax, rdx
0000000000002f80         add        rsp, 0x8
0000000000002f84         pop        rbx
0000000000002f85         pop        rbp
0000000000002f86         ret
                        ; endp
0000000000002f87         align      16                                          ; End of unwind block (FDE at 0x72bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002f90         push       r15                                         ; Begin of unwind block (FDE at 0x7300), CODE XREF=sub_36d0+1165, sub_36d0+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002f92         push       r14
0000000000002f94         mov        r15d, r8d
0000000000002f97         push       r13
0000000000002f99         push       r12
0000000000002f9b         mov        r14, rdi
0000000000002f9e         push       rbp
0000000000002f9f         push       rbx
0000000000002fa0         mov        ebx, r9d
0000000000002fa3         mov        r13, rsi
0000000000002fa6         mov        rbp, rcx
0000000000002fa9         and        ebx, 0x2
0000000000002fac         sub        rsp, 0xb8
0000000000002fb3         mov        rax, qword [rsp+0xe8+arg_0]
0000000000002fbb         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002fc0         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002fc5         mov        dword [rsp+0xe8+var_70], r9d
0000000000002fca         mov        qword [rsp+0xe8+var_C8], rax
0000000000002fcf         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002fd7         mov        qword [rsp+0xe8+var_80], rax
0000000000002fdc         mov        rax, qword [rsp+0xe8+arg_10]
0000000000002fe4         mov        qword [rsp+0xe8+var_88], rax
0000000000002fe9         mov        rax, qword [fs:0x28]
0000000000002ff2         mov        qword [rsp+0xe8+var_40], rax
0000000000002ffa         xor        eax, eax
0000000000002ffc         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000003001         cmp        r15d, 0xa
0000000000003005         mov        qword [rsp+0xe8+var_90], rax
000000000000300a         ja         loc_41bf

0000000000003010         lea        rcx, qword [switch_table_6420]              ; switch_table_6420
0000000000003017         mov        edx, r15d
000000000000301a         movsxd     rax, dword [rcx+rdx*4]
000000000000301e         add        rax, rcx
0000000000003021         jmp        rax                                         ; switch statement using table at 0x6420, with 11 cases, 0x3023,0x3bf4,0x3c50,0x3ca5,0x3cea,0x3d24,0x3dca,0x3e04,0x3ff8

                     loc_3023:
0000000000003023         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_36d0+1318
0000000000003028         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000302d         xor        r12d, r12d
0000000000003030         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003039         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000303e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_3043:
0000000000003043         lea        rax, qword [aLibs+29]                       ; 0x63bd, CODE XREF=sub_36d0+1876
000000000000304a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003053         xor        r15d, r15d
0000000000003056         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000305e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_3063:
0000000000003063         xor        r11d, r11d                                  ; CODE XREF=sub_36d0+180, sub_36d0+1400, sub_36d0+1488, sub_36d0+1557, sub_36d0+1615, sub_36d0+1781, sub_36d0+1839, sub_36d0+2408, sub_36d0+2485
0000000000003066         mov        rax, rbp
0000000000003069         mov        r8d, r12d
000000000000306c         mov        rbp, r11
000000000000306f         mov        r11, rax
0000000000003072         nop        word [rax+rax]

                     loc_3078:
0000000000003078         cmp        r11, rbp                                    ; CODE XREF=sub_3180+194
000000000000307b         setne      r12b
000000000000307f         cmp        r11, 0xffffffffffffffff
0000000000003083         jne        loc_3092

0000000000003085         mov        rax, qword [rsp+0xe8+var_D8]
000000000000308a         cmp        byte [rax+rbp], 0x0
000000000000308e         setne      r12b

                     loc_3092:
0000000000003092         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000003095         je         loc_36f0

000000000000309b         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000030a0         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000030a5         lea        r9, qword [rdi+rbp]
00000000000030a9         setne      al
00000000000030ac         and        al, byte [rsp+0xe8+var_DB]
00000000000030b0         mov        r10d, eax
00000000000030b3         je         loc_3160

00000000000030b9         mov        rax, qword [rsp+0xe8+var_D0]
00000000000030be         test       rax, rax
00000000000030c1         je         loc_34f0

00000000000030c7         cmp        r11, 0xffffffffffffffff
00000000000030cb         lea        rbx, qword [rbp+rax]
00000000000030d0         jne        loc_3100

00000000000030d2         cmp        rax, 0x1
00000000000030d6         jbe        loc_3100

00000000000030d8         mov        byte [rsp+0xe8+var_B0], r8b
00000000000030dd         mov        byte [rsp+0xe8+var_B8], r10b
00000000000030e2         mov        qword [rsp+0xe8+var_C0], r9
00000000000030e7         call       j_strlen                                    ; strlen
00000000000030ec         movzx      r8d, byte [rsp+0xe8+var_B0]
00000000000030f2         movzx      r10d, byte [rsp+0xe8+var_B8]
00000000000030f8         mov        r11, rax
00000000000030fb         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_3100:
0000000000003100         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000003103         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003108         ja         loc_36c0

000000000000310e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000003113         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000003118         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000000311b         mov        qword [rsp+0xe8+var_A8], r11
0000000000003120         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003125         mov        qword [rsp+0xe8+var_B8], r9
000000000000312a         call       j_memcmp                                    ; memcmp
000000000000312f         test       eax, eax
0000000000003131         mov        r9, qword [rsp+0xe8+var_B8]
0000000000003136         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000313c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000003141         jne        loc_36c0

0000000000003147         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000314c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003152         jne        loc_40d5

0000000000003158         nop        dword [rax+rax]

                     loc_3160:
0000000000003160         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_36b0+19
0000000000003164         cmp        bl, 0x7e
0000000000003167         ja         loc_3488

000000000000316d         lea        rcx, qword [switch_table_6420+44]           ; 0x644c
0000000000003174         movzx      edx, bl
0000000000003177         movsxd     rax, dword [rcx+rdx*4]
000000000000317b         add        rax, rcx
000000000000317e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3180:
0000000000003180         xor        r10d, r10d
0000000000003183         cmp        r11, 0x1
0000000000003187         setne      al
000000000000318a         cmp        r11, 0xffffffffffffffff
000000000000318e         jne        loc_319c

0000000000003190         mov        rax, qword [rsp+arg_8]
0000000000003195         cmp        byte [rax+1], 0x0
0000000000003199         setne      al

                     loc_319c:
000000000000319c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3180+14
00000000000031a1         sete       dl
00000000000031a4         test       al, al
00000000000031a6         je         loc_33f8

                     loc_31ac:
00000000000031ac         xor        r12d, r12d                                  ; CODE XREF=sub_33f0+11
00000000000031af         xor        eax, eax
00000000000031b1         nop        dword [rax]
                        ; endp

                     loc_31b8:
00000000000031b8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_33a0+50, sub_3470+119
00000000000031bd         jne        loc_32d2

00000000000031c3         test       dl, dl
00000000000031c5         jne        loc_32d2

                     loc_31cb:
00000000000031cb         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_3280+87
00000000000031d0         test       rsi, rsi
00000000000031d3         je         loc_31e9

00000000000031d5         mov        edx, ebx
00000000000031d7         shr        dl, 0x5
00000000000031da         movzx      edx, dl
00000000000031dd         mov        edx, dword [rsi+rdx*4]
00000000000031e0         bt         edx, ebx
00000000000031e3         jb         loc_3333

                     loc_31e9:
00000000000031e9         test       r10b, r10b                                  ; CODE XREF=sub_3180+83, sub_3280+93
00000000000031ec         jne        loc_3333

00000000000031f2         xor        eax, 0x1
00000000000031f5         add        rbp, 0x1
00000000000031f9         and        eax, r8d

                     loc_31fc:
00000000000031fc         test       al, al                                      ; CODE XREF=sub_36d0+936
00000000000031fe         je         loc_3220

0000000000003200         cmp        r13, r15
0000000000003203         jbe        loc_320a

0000000000003205         mov        byte [r14+r15], 0x27

                     loc_320a:
000000000000320a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3180+131
000000000000320e         cmp        r13, rax
0000000000003211         jbe        loc_3219

0000000000003213         mov        byte [r14+r15+1], 0x27

                     loc_3219:
0000000000003219         add        r15, 0x2                                    ; CODE XREF=sub_3180+145
000000000000321d         xor        r8d, r8d

                     loc_3220:
0000000000003220         cmp        r15, r13                                    ; CODE XREF=sub_3180+126, sub_3280+275, sub_36d0+869
0000000000003223         jae        loc_3229

0000000000003225         mov        byte [r14+r15], bl

                     loc_3229:
0000000000003229         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_3180+163
000000000000322e         add        r15, 0x1
0000000000003232         mov        eax, 0x0
0000000000003237         test       r12b, r12b
000000000000323a         cmove      edi, eax
000000000000323d         mov        byte [rsp+0xe8+var_DA], dil
0000000000003242         jmp        loc_3078
0000000000003247         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3250:
0000000000003250         xor        r10d, r10d
0000000000003253         mov        eax, dword [rsp+arg_0]
0000000000003257         cmp        eax, 0x2
000000000000325a         je         loc_3818

0000000000003260         cmp        eax, 0x5
0000000000003263         je         loc_37d8

0000000000003269         cmp        eax, 0x2
000000000000326c         mov        ebx, 0x3f
0000000000003271         sete       dl
0000000000003274         xor        r12d, r12d
0000000000003277         xor        eax, eax
0000000000003279         jmp        sub_3180+56
                        ; endp
000000000000327e         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3280:
0000000000003280         xor        r10d, r10d
0000000000003283         cmp        dword [rsp+arg_0], 0x2
0000000000003288         je         loc_3790

000000000000328e         mov        byte [rsp+arg_74], r12b
0000000000003293         xor        edx, edx
0000000000003295         xor        eax, eax
0000000000003297         mov        ebx, 0x27
000000000000329c         jmp        sub_3180+56
                        ; endp
00000000000032a1         nop        dword [rax]
00000000000032a8         mov        edx, 0x9
00000000000032ad         mov        ebx, 0x74

                     loc_32b2:
00000000000032b2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3440+10, sub_3530+37, sub_3670+53
00000000000032b7         sete       al
00000000000032ba         and        al, byte [rsp+arg_7]
00000000000032be         jne        sub_33f0+30

00000000000032c4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_3280+114
00000000000032c9         jne        loc_3330

                     loc_32cb:
00000000000032cb         mov        ebx, edx                                    ; CODE XREF=sub_33a0+18
00000000000032cd         xor        r12d, r12d
00000000000032d0         xor        eax, eax
                        ; endp

                     loc_32d2:
00000000000032d2         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_3180+61, sub_3180+69
00000000000032d7         jne        loc_31cb

00000000000032dd         jmp        loc_31e9
00000000000032e2         nop        word [rax+rax]
00000000000032e8         mov        edx, 0x8
00000000000032ed         mov        ebx, 0x62
00000000000032f2         jmp        sub_3280+68
00000000000032f4         nop        dword [rax]
00000000000032f8         cmp        dword [rsp+8], 0x2
00000000000032fd         je         sub_36d0                                    ; sub_36d0
0000000000003303         cmp        byte [rsp+0xd], 0x0
0000000000003308         je         sub_3510+16

                     loc_330e:
000000000000330e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3510+8
0000000000003313         je         loc_3520

0000000000003319         cmp        qword [rsp+arg_10], 0x0
000000000000331f         jne        loc_36db

0000000000003325         mov        ebx, 0x5c
000000000000332a         nop        word [rax+rax]
                        ; endp

                     loc_3330:
0000000000003330         xor        r12d, r12d                                  ; CODE XREF=sub_3280+73, sub_3670+29
                        ; endp

                     loc_3333:
0000000000003333         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3180+99, sub_3180+108
0000000000003338         sete       dl
000000000000333b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003340         mov        eax, edx
0000000000003342         jne        loc_3b98

0000000000003348         mov        eax, r8d
000000000000334b         xor        eax, 0x1
000000000000334e         and        al, dl
0000000000003350         je         loc_3381

0000000000003352         cmp        r13, r15
0000000000003355         jbe        loc_335c

0000000000003357         mov        byte [r14+r15], 0x27

                     loc_335c:
000000000000335c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_3280+213
0000000000003360         cmp        r13, rdx
0000000000003363         jbe        loc_336b

0000000000003365         mov        byte [r14+r15+1], 0x24

                     loc_336b:
000000000000336b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_3280+227
000000000000336f         cmp        r13, rdx
0000000000003372         jbe        loc_337a

0000000000003374         mov        byte [r14+r15+2], 0x27

                     loc_337a:
000000000000337a         add        r15, 0x3                                    ; CODE XREF=sub_3280+242
000000000000337e         mov        r8d, eax

                     loc_3381:
0000000000003381         cmp        r13, r15                                    ; CODE XREF=sub_3280+208
0000000000003384         jbe        loc_338b

0000000000003386         mov        byte [r14+r15], 0x5c

                     loc_338b:
000000000000338b         add        r15, 0x1                                    ; CODE XREF=sub_3280+260
000000000000338f         add        rbp, 0x1
0000000000003393         jmp        loc_3220
0000000000003398         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_33a0:
00000000000033a0         cmp        byte [rsp+arg_5], 0x0
00000000000033a5         jne        loc_3573

00000000000033ab         xor        edx, edx
00000000000033ad         test       byte [rsp+arg_70], 0x1
00000000000033b2         je         loc_32cb

00000000000033b8         add        rbp, 0x1
00000000000033bc         jmp        quotearg_buffer_restyled+232
                        ; endp
00000000000033c1         nop        dword [rax]
00000000000033c8         cmp        dword [rsp+8], 0x2
00000000000033cd         sete       dl
00000000000033d0         xor        eax, eax
00000000000033d2         jmp        sub_3180+56
00000000000033d7         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33e0:
00000000000033e0         mov        edx, 0x7
00000000000033e5         mov        ebx, 0x61
00000000000033ea         jmp        sub_3280+68
                        ; endp
00000000000033ef         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33f0:
00000000000033f0         cmp        dword [rsp+8], 0x2
00000000000033f5         sete       dl
                        ; endp

                     loc_33f8:
00000000000033f8         test       rbp, rbp                                    ; CODE XREF=sub_3180+38, sub_3610+35
00000000000033fb         jne        loc_31ac

0000000000003401         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_3640+43
0000000000003406         and        al, dl
0000000000003408         je         sub_3180+56

000000000000340e         mov        rbp, r11
0000000000003411         mov        dword [rsp+arg_0], 0x2
0000000000003419         jmp        sub_36d0+1097
                        ; endp
000000000000341e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3420:
0000000000003420         cmp        dword [rsp+arg_0], 0x2
0000000000003425         sete       dl
0000000000003428         xor        r12d, r12d
000000000000342b         jmp        sub_33f0+17
                        ; endp
000000000000342d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3430:
0000000000003430         cmp        dword [rsp+arg_0], 0x2
0000000000003435         mov        ebx, 0x20
000000000000343a         sete       dl
000000000000343d         jmp        sub_33f0+17
                        ; endp
000000000000343f         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3440:
0000000000003440         mov        edx, 0xd
0000000000003445         mov        ebx, 0x72
000000000000344a         jmp        loc_32b2
000000000000344f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3450:
0000000000003450         mov        edx, 0xc
0000000000003455         mov        ebx, 0x66
000000000000345a         jmp        sub_3280+68
                        ; endp
000000000000345f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3460:
0000000000003460         mov        edx, 0xb
0000000000003465         mov        ebx, 0x76
000000000000346a         jmp        sub_3280+68
                        ; endp
000000000000346f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3470:
0000000000003470         mov        edx, 0xa
0000000000003475         mov        ebx, 0x6e
000000000000347a         jmp        sub_3280+50
                        ; endp
000000000000347f         align      128

                     loc_3480:
0000000000003480         xor        r10d, r10d                                  ; CODE XREF=sub_3470+135
0000000000003483         nop        dword [rax+rax]

                     loc_3488:
0000000000003488         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000348e         jne        loc_3838

0000000000003494         mov        qword [rsp+0xe8+var_B0], r11
0000000000003499         mov        byte [rsp+0xe8+var_B8], r8b
000000000000349e         mov        byte [rsp+0xe8+var_C0], r10b
00000000000034a3         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000034a8         mov        rcx, qword [rax]
00000000000034ab         movzx      edx, bl
00000000000034ae         movzx      r10d, byte [rsp+0xe8+var_C0]
00000000000034b4         movzx      r8d, byte [rsp+0xe8+var_B8]
00000000000034ba         mov        r11, qword [rsp+0xe8+var_B0]
00000000000034bf         mov        edi, 0x1
00000000000034c4         movzx      eax, word [rcx+rdx*2]
00000000000034c8         and        ax, 0x4000
00000000000034cc         setne      r12b
00000000000034d0         sete       al
00000000000034d3         and        al, byte [rsp+0xe8+var_DB]

                     loc_34d7:
00000000000034d7         test       al, al                                      ; CODE XREF=sub_36d0+2221
00000000000034d9         jne        loc_3e71

00000000000034df         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000034e4         sete       dl
00000000000034e7         jmp        loc_31b8
00000000000034ec         align      16

                     loc_34f0:
00000000000034f0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
00000000000034f4         cmp        bl, 0x7e
00000000000034f7         ja         loc_3480

00000000000034f9         lea        rcx, qword [switch_table_6420+552]          ; 0x6648
0000000000003500         movzx      edx, bl
0000000000003503         movsxd     rax, dword [rcx+rdx*4]
0000000000003507         add        rax, rcx
000000000000350a         jmp        rax
                        ; endp
000000000000350c         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3510:
0000000000003510         xor        r10d, r10d
0000000000003513         cmp        byte [rsp+arg_5], 0x0
0000000000003518         jne        loc_330e

000000000000351e         nop

                     loc_3520:
0000000000003520         mov        edx, 0x5c                                   ; CODE XREF=sub_3280+136, sub_3280+147
0000000000003525         mov        ebx, 0x5c
000000000000352a         jmp        sub_3280+68
                        ; endp
000000000000352f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3530:
0000000000003530         mov        edx, 0xc
0000000000003535         xor        r10d, r10d
0000000000003538         mov        ebx, 0x66
000000000000353d         jmp        sub_3280+68
                        ; endp
0000000000003542         nop        word [rax+rax]
0000000000003548         mov        edx, 0xa
000000000000354d         xor        r10d, r10d
0000000000003550         mov        ebx, 0x6e
0000000000003555         jmp        sub_3280+50
000000000000355a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3560:
0000000000003560         mov        ebx, 0x61
0000000000003565         jmp        sub_3280+176
                        ; endp
000000000000356a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3570:
0000000000003570         xor        r10d, r10d
                        ; endp

                     loc_3573:
0000000000003573         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_33a0+5
0000000000003578         sete       dl
000000000000357b         cmp        byte [rsp+arg_7], 0x0
0000000000003580         jne        loc_411a

0000000000003586         mov        eax, r8d
0000000000003589         mov        rcx, r15
000000000000358c         xor        eax, 0x1
000000000000358f         and        al, dl
0000000000003591         je         loc_35c0

0000000000003593         cmp        r13, r15
0000000000003596         jbe        loc_359d

0000000000003598         mov        byte [r14+r15], 0x27

                     loc_359d:
000000000000359d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3570+38
00000000000035a1         cmp        r13, rcx
00000000000035a4         jbe        loc_35ac

00000000000035a6         mov        byte [r14+r15+1], 0x24

                     loc_35ac:
00000000000035ac         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3570+52
00000000000035b0         cmp        r13, rcx
00000000000035b3         ja         loc_3be9

                     loc_35b9:
00000000000035b9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_36d0+1311
00000000000035bd         mov        r8d, eax

                     loc_35c0:
00000000000035c0         cmp        r13, rcx                                    ; CODE XREF=sub_3570+33
00000000000035c3         jbe        loc_35ca

00000000000035c5         mov        byte [r14+rcx], 0x5c

                     loc_35ca:
00000000000035ca         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3570+83
00000000000035cf         lea        r15, qword [rcx+1]
00000000000035d3         je         loc_3bd9

00000000000035d9         lea        rax, qword [rbp+1]
00000000000035dd         cmp        rax, r11
00000000000035e0         jae        loc_35fb

00000000000035e2         mov        rax, qword [rsp+arg_8]
00000000000035e7         movzx      eax, byte [rax+rbp+1]
00000000000035ec         mov        byte [rsp+arg_20], al
00000000000035f0         sub        eax, 0x30
00000000000035f3         cmp        al, 0x9
00000000000035f5         jbe        loc_3e29

                     loc_35fb:
00000000000035fb         mov        eax, r12d                                   ; CODE XREF=sub_3570+112
00000000000035fe         mov        ebx, 0x30
0000000000003603         xor        r12d, r12d
0000000000003606         jmp        sub_3180+56
                        ; endp
000000000000360b         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3610:
0000000000003610         cmp        dword [rsp+arg_0], 0x2
0000000000003615         mov        r12d, r10d
0000000000003618         sete       dl
000000000000361b         xor        r10d, r10d
000000000000361e         xor        eax, eax
0000000000003620         jmp        sub_3180+56
                        ; endp
0000000000003625         nop        dword [rax]
0000000000003628         cmp        dword [rsp+8], 0x2
000000000000362d         sete       dl
0000000000003630         xor        r10d, r10d
0000000000003633         jmp        sub_33f0+8
0000000000003638         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3640:
0000000000003640         cmp        dword [rsp+8], 0x2
0000000000003645         sete       dl
0000000000003648         xor        r10d, r10d
000000000000364b         xor        r12d, r12d
000000000000364e         jmp        sub_33f0+17
                        ; endp
0000000000003653         nop        dword [rax+rax]
0000000000003658         cmp        dword [rsp+8], 0x2
000000000000365d         mov        r12d, r10d
0000000000003660         mov        ebx, 0x20
0000000000003665         sete       dl
0000000000003668         xor        r10d, r10d
000000000000366b         jmp        sub_33f0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3670:
0000000000003670         mov        edx, 0xd
0000000000003675         xor        r10d, r10d
0000000000003678         mov        ebx, 0x72
000000000000367d         jmp        sub_3280+50
                        ; endp
0000000000003682         nop        word [rax+rax]
0000000000003688         mov        ebx, 0x76
000000000000368d         jmp        sub_3280+176
0000000000003692         nop        word [rax+rax]
0000000000003698         mov        edx, 0x9
000000000000369d         xor        r10d, r10d
00000000000036a0         mov        ebx, 0x74
00000000000036a5         jmp        sub_3280+50
00000000000036aa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_36b0:
00000000000036b0         mov        ebx, 0x62
00000000000036b5         jmp        sub_3280+176
                        ; endp
00000000000036ba         nop        word [rax+rax]

                     loc_36c0:
00000000000036c0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
00000000000036c3         jmp        loc_3160
00000000000036c8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_36d0:
00000000000036d0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3280+125
00000000000036d5         jne        sub_36d0+2416
                        ; endp

                     loc_36db:
00000000000036db         add        rbp, 0x1                                    ; CODE XREF=sub_3280+159
00000000000036df         mov        eax, r8d
00000000000036e2         xor        r12d, r12d
00000000000036e5         mov        ebx, 0x5c
00000000000036ea         jmp        sub_3180+124
                        ; endp
00000000000036ef         align      16

                     loc_36f0:
00000000000036f0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
00000000000036f5         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000036fa         mov        r12d, r8d
00000000000036fd         mov        rbp, r11
0000000000003700         sete       dl
0000000000003703         mov        eax, ebx
0000000000003705         test       r15, r15
0000000000003708         sete       cl
000000000000370b         and        eax, edx
000000000000370d         and        al, cl
000000000000370f         jne        loc_4176

0000000000003715         mov        eax, ebx
0000000000003717         xor        eax, 0x1
000000000000371a         and        dl, al
000000000000371c         je         loc_408c

0000000000003722         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000003727         je         loc_408a

000000000000372d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000003732         jne        loc_412d

0000000000003738         test       r13, r13
000000000000373b         sete       al
000000000000373e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000003744         setne      dl
0000000000003747         and        al, dl
0000000000003749         je         loc_416c

000000000000374f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_3754:
0000000000003754         lea        rbx, qword [aLibs+29]                       ; 0x63bd, CODE XREF=sub_36d0+2781
000000000000375b         mov        byte [r14], 0x27
000000000000375f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003767         mov        r15d, 0x1
000000000000376d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003776         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000377b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003780         mov        byte [rsp+0xe8+var_6C], al
0000000000003784         jmp        loc_3063
0000000000003789         align      16

                     loc_3790:
0000000000003790         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3280+8
0000000000003795         jne        sub_36d0+2416

000000000000379b         test       r13, r13
000000000000379e         je         loc_3ba0

00000000000037a4         xor        edx, edx
00000000000037a6         cmp        qword [rsp+arg_48], 0x0
00000000000037ac         jne        loc_3ba0

                     loc_37b2:
00000000000037b2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_36d0+1284, sub_36d0+2794
00000000000037b7         add        r15, 0x3
00000000000037bb         xor        eax, eax
00000000000037bd         mov        byte [rsp+arg_74], r12b
00000000000037c2         xor        r8d, r8d
00000000000037c5         mov        r13, rdx
00000000000037c8         mov        ebx, 0x27
00000000000037cd         jmp        sub_3180+105
                        ; endp
00000000000037d2         align      8

                     loc_37d8:
00000000000037d8         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_3250+19
00000000000037dd         je         loc_3800

00000000000037df         lea        rcx, qword [rbp+2]
00000000000037e3         cmp        rcx, r11
00000000000037e6         jae        loc_3800

00000000000037e8         mov        rax, qword [rsp+arg_8]
00000000000037ed         cmp        byte [rax+rbp+1], 0x3f
00000000000037f2         je         loc_3f82

00000000000037f8         nop        dword [rax+rax]

                     loc_3800:
0000000000003800         xor        edx, edx                                    ; CODE XREF=sub_36d0+269, sub_36d0+278, sub_36d0+2233, sub_36d0+2253
0000000000003802         xor        r12d, r12d
0000000000003805         xor        eax, eax
0000000000003807         mov        ebx, 0x3f
000000000000380c         jmp        sub_3180+56
                        ; endp
0000000000003811         align      8

                     loc_3818:
0000000000003818         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3250+10
000000000000381d         jne        loc_4040

0000000000003823         xor        r12d, r12d
0000000000003826         xor        eax, eax
0000000000003828         mov        ebx, 0x3f
000000000000382d         jmp        sub_3180+105
                        ; endp
0000000000003832         align      8

                     loc_3838:
0000000000003838         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3470+30
0000000000003840         cmp        r11, 0xffffffffffffffff
0000000000003844         mov        qword [rsp+0xe8+var_48], 0x0
0000000000003850         mov        qword [rsp+0xe8+var_C0], rax
0000000000003855         jne        loc_3884

0000000000003857         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000385c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000003861         mov        byte [rsp+0xe8+var_B0], r10b
0000000000003866         mov        qword [rsp+0xe8+var_B8], r9
000000000000386b         call       j_strlen                                    ; strlen
0000000000003870         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000003876         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000387c         mov        r11, rax
000000000000387f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3884:
0000000000003884         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_36d0+389
000000000000388c         xor        ecx, ecx
000000000000388e         mov        byte [rsp+0xe8+var_6A], bl
0000000000003892         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003897         mov        rbx, rcx
000000000000389a         mov        qword [rsp+0xe8+var_60], r9
00000000000038a2         mov        qword [rsp+0xe8+var_B0], rax
00000000000038a7         mov        byte [rsp+0xe8+var_69], r10b
00000000000038ac         mov        qword [rsp+0xe8+var_68], r15
00000000000038b4         mov        qword [rsp+0xe8+var_A8], r14
00000000000038b9         mov        qword [rsp+0xe8+var_78], r13
00000000000038be         mov        qword [rsp+0xe8+var_B8], r11

                     loc_38c3:
00000000000038c3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_36d0+623
00000000000038c8         lea        r14, qword [rbp+rbx]
00000000000038cd         mov        rdx, qword [rsp+0xe8+var_B8]
00000000000038d2         mov        rcx, qword [rsp+0xe8+var_C0]
00000000000038d7         mov        rdi, qword [rsp+0xe8+var_B0]
00000000000038dc         lea        r13, qword [rax+r14]
00000000000038e0         sub        rdx, r14
00000000000038e3         mov        rsi, r13
00000000000038e6         call       rpl_mbrtowc                                 ; rpl_mbrtowc
00000000000038eb         test       rax, rax
00000000000038ee         mov        r15, rax
00000000000038f1         je         loc_3941

00000000000038f3         cmp        rax, 0xffffffffffffffff
00000000000038f7         je         loc_3f15

00000000000038fd         cmp        rax, 0xfffffffffffffffe
0000000000003901         je         loc_3ea1

0000000000003907         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000390c         sete       al
000000000000390f         and        al, byte [rsp+0xe8+var_D9]
0000000000003913         jne        loc_3ab0

                     loc_3919:
0000000000003919         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_36d0+996, sub_36d0+1031
0000000000003920         call       j_iswprint                                  ; iswprint
0000000000003925         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000392a         test       eax, eax
000000000000392c         mov        eax, 0x0
0000000000003931         cmove      r12d, eax
0000000000003935         add        rbx, r15
0000000000003938         call       j_mbsinit                                   ; mbsinit
000000000000393d         test       eax, eax
000000000000393f         je         loc_38c3

                     loc_3941:
0000000000003941         mov        edx, r12d                                   ; CODE XREF=sub_36d0+545
0000000000003944         mov        rdi, rbx
0000000000003947         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000394d         xor        edx, 0x1
0000000000003950         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003955         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000395b         and        dl, byte [rsp+0xe8+var_DB]
000000000000395f         mov        r15, qword [rsp+0xe8+var_68]
0000000000003967         mov        r14, qword [rsp+0xe8+var_A8]
000000000000396c         mov        r13, qword [rsp+0xe8+var_78]
0000000000003971         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_3976:
0000000000003976         cmp        rdi, 0x1                                    ; CODE XREF=sub_36d0+2112, sub_36d0+2168
000000000000397a         jbe        loc_3f7b

                     loc_3980:
0000000000003980         mov        rcx, rdi                                    ; CODE XREF=sub_36d0+1961
0000000000003983         xor        esi, esi
0000000000003985         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000398b         add        rcx, rbp
000000000000398e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003993         jmp        loc_3a4e
0000000000003998         align      32

                     loc_39a0:
00000000000039a0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_36d0+896
00000000000039a5         sete       al
00000000000039a8         test       r9b, r9b
00000000000039ab         jne        loc_3e60

00000000000039b1         mov        esi, r8d
00000000000039b4         xor        esi, 0x1
00000000000039b7         and        al, sil
00000000000039ba         je         loc_39eb

00000000000039bc         cmp        r13, r15
00000000000039bf         jbe        loc_39c6

00000000000039c1         mov        byte [r14+r15], 0x27

                     loc_39c6:
00000000000039c6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_36d0+751
00000000000039ca         cmp        r13, rsi
00000000000039cd         jbe        loc_39d5

00000000000039cf         mov        byte [r14+r15+1], 0x24

                     loc_39d5:
00000000000039d5         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_36d0+765
00000000000039d9         cmp        r13, rsi
00000000000039dc         jbe        loc_39e4

00000000000039de         mov        byte [r14+r15+2], 0x27

                     loc_39e4:
00000000000039e4         add        r15, 0x3                                    ; CODE XREF=sub_36d0+780
00000000000039e8         mov        r8d, eax

                     loc_39eb:
00000000000039eb         cmp        r13, r15                                    ; CODE XREF=sub_36d0+746
00000000000039ee         jbe        loc_39f5

00000000000039f0         mov        byte [r14+r15], 0x5c

                     loc_39f5:
00000000000039f5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_36d0+798
00000000000039f9         cmp        r13, rax
00000000000039fc         jbe        loc_3a0b

00000000000039fe         mov        eax, ebx
0000000000003a00         shr        al, 0x6
0000000000003a03         add        eax, 0x30
0000000000003a06         mov        byte [r14+r15+1], al

                     loc_3a0b:
0000000000003a0b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_36d0+812
0000000000003a0f         cmp        r13, rax
0000000000003a12         jbe        loc_3a24

0000000000003a14         mov        eax, ebx
0000000000003a16         shr        al, 0x3
0000000000003a19         and        eax, 0x7
0000000000003a1c         add        eax, 0x30
0000000000003a1f         mov        byte [r14+r15+2], al

                     loc_3a24:
0000000000003a24         and        ebx, 0x7                                    ; CODE XREF=sub_36d0+834
0000000000003a27         add        rbp, 0x1
0000000000003a2b         add        r15, 0x3
0000000000003a2f         add        ebx, 0x30
0000000000003a32         cmp        rbp, rcx
0000000000003a35         jae        loc_3220

0000000000003a3b         mov        esi, edx

                     loc_3a3d:
0000000000003a3d         cmp        r13, r15                                    ; CODE XREF=sub_36d0+985, sub_36d0+1969
0000000000003a40         jbe        loc_3a46

0000000000003a42         mov        byte [r14+r15], bl

                     loc_3a46:
0000000000003a46         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_36d0+880
0000000000003a4a         add        r15, 0x1

                     loc_3a4e:
0000000000003a4e         test       dl, dl                                      ; CODE XREF=sub_36d0+707
0000000000003a50         jne        loc_39a0

0000000000003a56         mov        eax, esi
0000000000003a58         xor        eax, 0x1
0000000000003a5b         and        eax, r8d
0000000000003a5e         test       r10b, r10b
0000000000003a61         je         loc_3a71

0000000000003a63         cmp        r13, r15
0000000000003a66         jbe        loc_3a6d

0000000000003a68         mov        byte [r14+r15], 0x5c

                     loc_3a6d:
0000000000003a6d         add        r15, 0x1                                    ; CODE XREF=sub_36d0+918

                     loc_3a71:
0000000000003a71         add        rbp, 0x1                                    ; CODE XREF=sub_36d0+913
0000000000003a75         cmp        rbp, rcx
0000000000003a78         jae        loc_31fc

0000000000003a7e         test       al, al
0000000000003a80         je         loc_3e7e

0000000000003a86         cmp        r13, r15
0000000000003a89         jbe        loc_3a90

0000000000003a8b         mov        byte [r14+r15], 0x27

                     loc_3a90:
0000000000003a90         lea        rax, qword [r15+1]                          ; CODE XREF=sub_36d0+953
0000000000003a94         cmp        r13, rax
0000000000003a97         jbe        loc_3a9f

0000000000003a99         mov        byte [r14+r15+1], 0x27

                     loc_3a9f:
0000000000003a9f         add        r15, 0x2                                    ; CODE XREF=sub_36d0+967
0000000000003aa3         xor        r10d, r10d
0000000000003aa6         xor        r8d, r8d
0000000000003aa9         jmp        loc_3a3d
0000000000003aab         align      16

                     loc_3ab0:
0000000000003ab0         cmp        r15, 0x1                                    ; CODE XREF=sub_36d0+579
0000000000003ab4         je         loc_3919

0000000000003aba         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003abf         lea        rcx, qword [rdi+r15]
0000000000003ac3         lea        rdx, qword [rdi+r14+1]
0000000000003ac8         lea        r8, qword [rcx+r14]
0000000000003acc         jmp        loc_3add
0000000000003ace         align      16

                     loc_3ad0:
0000000000003ad0         add        rdx, 0x1                                    ; CODE XREF=sub_36d0+1046, sub_36d0+1072
0000000000003ad4         cmp        r8, rdx
0000000000003ad7         je         loc_3919

                     loc_3add:
0000000000003add         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_36d0+1020
0000000000003ae0         sub        ecx, 0x5b
0000000000003ae3         cmp        cl, 0x21
0000000000003ae6         ja         loc_3ad0

0000000000003ae8         mov        esi, 0x1
0000000000003aed         shl        rsi, cl
0000000000003af0         mov        rcx, rsi
0000000000003af3         movabs     rsi, 0x20000002b
0000000000003afd         test       rcx, rsi
0000000000003b00         je         loc_3ad0

0000000000003b02         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003b07         mov        r13, qword [rsp+0xe8+var_78]
0000000000003b0c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000003b11         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_3b19:
0000000000003b19         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_36d0+1227, sub_36d0+1948, sub_36d0+2585, sub_36d0+2734
0000000000003b1e         je         loc_3b30

0000000000003b20         test       al, al
0000000000003b22         mov        eax, 0x4
0000000000003b27         cmove      eax, dword [rsp+0xe8+var_E0]
0000000000003b2c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_3b30:
0000000000003b30         sub        rsp, 0x8                                    ; CODE XREF=sub_36d0+1102
0000000000003b34         mov        rcx, rbp
0000000000003b37         mov        rsi, r13
0000000000003b3a         push       qword [rsp+0xf0+var_88]
0000000000003b3e         push       qword [rsp+0xf8+var_80]
0000000000003b42         mov        rdi, r14
0000000000003b45         push       0x0
0000000000003b47         mov        r9d, dword [rsp+0x108+var_70]
0000000000003b4f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000003b54         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003b59         and        r9d, 0xfffffffd
0000000000003b5d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003b62         add        rsp, 0x20
0000000000003b66         mov        r15, rax

                     loc_3b69:
0000000000003b69         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_36d0+2549, sub_36d0+2560, sub_36d0+2711
0000000000003b71         xor        rbx, qword [fs:0x28]
0000000000003b7a         mov        rax, r15
0000000000003b7d         jne        loc_4183

0000000000003b83         add        rsp, 0xb8
0000000000003b8a         pop        rbx
0000000000003b8b         pop        rbp
0000000000003b8c         pop        r12
0000000000003b8e         pop        r13
0000000000003b90         pop        r14
0000000000003b92         pop        r15
0000000000003b94         ret
                        ; endp
0000000000003b95         align      8

                     loc_3b98:
0000000000003b98         mov        rbp, r11                                    ; CODE XREF=sub_3280+194
0000000000003b9b         jmp        loc_3b19

                     loc_3ba0:
0000000000003ba0         cmp        r13, r15                                    ; CODE XREF=sub_36d0+206, sub_36d0+220
0000000000003ba3         jbe        loc_3baa

0000000000003ba5         mov        byte [r14+r15], 0x27

                     loc_3baa:
0000000000003baa         lea        rax, qword [r15+1]                          ; CODE XREF=sub_36d0+1235
0000000000003bae         cmp        r13, rax
0000000000003bb1         jbe        loc_3bb9

0000000000003bb3         mov        byte [r14+r15+1], 0x5c

                     loc_3bb9:
0000000000003bb9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_36d0+1249
0000000000003bbd         cmp        r13, rax
0000000000003bc0         jbe        loc_41b2

0000000000003bc6         mov        rdx, r13
0000000000003bc9         mov        byte [r14+r15+2], 0x27
0000000000003bcf         mov        r13, qword [rsp+arg_48]
0000000000003bd4         jmp        loc_37b2

                     loc_3bd9:
0000000000003bd9         mov        eax, r12d                                   ; CODE XREF=sub_3570+99
0000000000003bdc         mov        ebx, 0x30
0000000000003be1         xor        r12d, r12d
0000000000003be4         jmp        sub_3180+105
                        ; endp

                     loc_3be9:
0000000000003be9         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3570+67
0000000000003bef         jmp        loc_35b9

                     loc_3bf4:
0000000000003bf4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000003bf6         jne        loc_3023

0000000000003bfc         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_3c01:
0000000000003c01         test       r13, r13                                    ; CODE XREF=sub_36d0+2749
0000000000003c04         jne        loc_419a

0000000000003c0a         lea        rax, qword [aLibs+29]                       ; 0x63bd
0000000000003c11         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003c1a         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003c1f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003c24         xor        r12d, r12d
0000000000003c27         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003c2c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003c35         mov        qword [rsp+0xe8+var_A0], rax
0000000000003c3a         mov        r15d, 0x1
0000000000003c40         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003c48         jmp        loc_3063
0000000000003c4d         align      16

                     loc_3c50:
0000000000003c50         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000003c52         jne        loc_404d

0000000000003c58         test       r13, r13
0000000000003c5b         je         loc_3e86

0000000000003c61         mov        byte [r14], 0x22
0000000000003c65         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003c6a         xor        r12d, r12d
0000000000003c6d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003c72         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_3c7b:
0000000000003c7b         lea        rax, qword [aLibs+27]                       ; 0x63bb, CODE XREF=sub_36d0+1996
0000000000003c82         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003c87         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003c8c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003c95         mov        r15d, 0x1
0000000000003c9b         mov        qword [rsp+0xe8+var_A0], rax
0000000000003ca0         jmp        loc_3063

                     loc_3ca5:
0000000000003ca5         lea        rax, qword [aLibs+27]                       ; case 6, 0x63bb, CODE XREF=quotearg_buffer_restyled+145
0000000000003cac         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003cb1         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003cb6         xor        r12d, r12d
0000000000003cb9         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003cc2         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003cc7         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003ccc         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003cd5         xor        r15d, r15d
0000000000003cd8         mov        qword [rsp+0xe8+var_A0], rax
0000000000003cdd         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000003ce5         jmp        loc_3063

                     loc_3cea:
0000000000003cea         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
0000000000003cef         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003cf4         xor        r12d, r12d
0000000000003cf7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003d00         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003d05         xor        r15d, r15d
0000000000003d08         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003d0d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003d16         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003d1f         jmp        loc_3063

                     loc_3d24:
0000000000003d24         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000003d29         je         loc_3d81

0000000000003d2b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x63bf
0000000000003d32         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d34         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d39         call       j_dcgettext                                 ; dcgettext
0000000000003d3e         mov        rcx, rax
0000000000003d41         mov        qword [rsp+0xe8+var_80], rax
0000000000003d46         lea        rax, qword [aLibs+31]                       ; 0x63bf
0000000000003d4d         cmp        rcx, rax
0000000000003d50         je         loc_40ee

                     loc_3d56:
0000000000003d56         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x63bd, CODE XREF=sub_36d0+2607
0000000000003d5d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d5f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d64         call       j_dcgettext                                 ; dcgettext
0000000000003d69         mov        rcx, rax
0000000000003d6c         mov        qword [rsp+0xe8+var_88], rax
0000000000003d71         lea        rax, qword [aLibs+29]                       ; 0x63bd
0000000000003d78         cmp        rcx, rax
0000000000003d7b         je         loc_4104

                     loc_3d81:
0000000000003d81         xor        r15d, r15d                                  ; CODE XREF=sub_36d0+1625, sub_36d0+2629
0000000000003d84         test       ebx, ebx
0000000000003d86         je         loc_3f4d

                     loc_3d8c:
0000000000003d8c         test       ebx, ebx                                    ; CODE XREF=sub_36d0+2183, sub_36d0+2214
0000000000003d8e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003d93         setne      byte [rsp+0xe8+var_D9]
0000000000003d98         xor        r12d, r12d
0000000000003d9b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000003d9e         call       j_strlen                                    ; strlen
0000000000003da3         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003da8         mov        qword [rsp+0xe8+var_D0], rax
0000000000003dad         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003db2         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003db7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003dc0         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003dc5         jmp        loc_3063

                     loc_3dca:
0000000000003dca         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000003dcf         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003dd4         xor        r12d, r12d
0000000000003dd7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003de0         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003de5         xor        r15d, r15d
0000000000003de8         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003ded         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003df6         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003dff         jmp        loc_3063

                     loc_3e04:
0000000000003e04         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000003e09         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003e0e         xor        r12d, r12d
0000000000003e11         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003e1a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003e1f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003e24         jmp        loc_3043

                     loc_3e29:
0000000000003e29         cmp        r13, r15                                    ; CODE XREF=sub_3570+133
0000000000003e2c         jbe        loc_3e33

0000000000003e2e         mov        byte [r14+r15], 0x30

                     loc_3e33:
0000000000003e33         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_36d0+1884
0000000000003e37         cmp        r13, rax
0000000000003e3a         jbe        loc_3e42

0000000000003e3c         mov        byte [r14+rcx+2], 0x30

                     loc_3e42:
0000000000003e42         mov        eax, r12d                                   ; CODE XREF=sub_36d0+1898
0000000000003e45         lea        r15, qword [rcx+3]
0000000000003e49         xor        r12d, r12d
0000000000003e4c         mov        ebx, 0x30
0000000000003e51         jmp        sub_3180+56
                        ; endp
0000000000003e56         align      32

                     loc_3e60:
0000000000003e60         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_36d0+731
0000000000003e65         mov        rbp, r11
0000000000003e68         mov        byte [rsp+0xe8+var_DB], bl
0000000000003e6c         jmp        loc_3b19

                     loc_3e71:
0000000000003e71         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3470+105
0000000000003e76         xor        r12d, r12d
0000000000003e79         jmp        loc_3980

                     loc_3e7e:
0000000000003e7e         xor        r10d, r10d                                  ; CODE XREF=sub_36d0+944
0000000000003e81         jmp        loc_3a3d

                     loc_3e86:
0000000000003e86         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_36d0+1419
0000000000003e8f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003e94         xor        r12d, r12d
0000000000003e97         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003e9c         jmp        loc_3c7b

                     loc_3ea1:
0000000000003ea1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_36d0+561
0000000000003ea6         mov        rsi, r14
0000000000003ea9         mov        rcx, r13
0000000000003eac         mov        rax, rbx
0000000000003eaf         mov        rdi, rbx
0000000000003eb2         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003eb8         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003ebd         mov        r9, qword [rsp+0xe8+var_60]
0000000000003ec5         cmp        rsi, r11
0000000000003ec8         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003ece         mov        r15, qword [rsp+0xe8+var_68]
0000000000003ed6         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003edb         mov        r13, qword [rsp+0xe8+var_78]
0000000000003ee0         jae        loc_3f08

0000000000003ee2         cmp        byte [rcx], 0x0
0000000000003ee5         jne        loc_3ef7

0000000000003ee7         jmp        loc_3f08
0000000000003ee9         align      16

                     loc_3ef0:
0000000000003ef0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_36d0+2099
0000000000003ef5         je         loc_3f05

                     loc_3ef7:
0000000000003ef7         add        rax, 0x1                                    ; CODE XREF=sub_36d0+2069
0000000000003efb         lea        rdx, qword [rbp+rax]
0000000000003f00         cmp        r11, rdx
0000000000003f03         ja         loc_3ef0

                     loc_3f05:
0000000000003f05         mov        rdi, rax                                    ; CODE XREF=sub_36d0+2085

                     loc_3f08:
0000000000003f08         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_36d0+2064, sub_36d0+2071
0000000000003f0d         xor        r12d, r12d
0000000000003f10         jmp        loc_3976

                     loc_3f15:
0000000000003f15         mov        rdi, rbx                                    ; CODE XREF=sub_36d0+551
0000000000003f18         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003f1e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003f23         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003f29         mov        r15, qword [rsp+0xe8+var_68]
0000000000003f31         xor        r12d, r12d
0000000000003f34         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003f39         mov        r13, qword [rsp+0xe8+var_78]
0000000000003f3e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000003f43         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000003f48         jmp        loc_3976

                     loc_3f4d:
0000000000003f4d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_36d0+1718
0000000000003f52         movzx      eax, byte [rdx]
0000000000003f55         test       al, al
0000000000003f57         je         loc_3d8c

0000000000003f5d         nop        dword [rax]

                     loc_3f60:
0000000000003f60         cmp        r13, r15                                    ; CODE XREF=sub_36d0+2212
0000000000003f63         jbe        loc_3f69

0000000000003f65         mov        byte [r14+r15], al

                     loc_3f69:
0000000000003f69         add        r15, 0x1                                    ; CODE XREF=sub_36d0+2195
0000000000003f6d         movzx      eax, byte [rdx+r15]
0000000000003f72         test       al, al
0000000000003f74         jne        loc_3f60

0000000000003f76         jmp        loc_3d8c

                     loc_3f7b:
0000000000003f7b         mov        eax, edx                                    ; CODE XREF=sub_36d0+682
0000000000003f7d         jmp        loc_34d7

                     loc_3f82:
0000000000003f82         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_36d0+290
0000000000003f86         cmp        bl, 0x3e
0000000000003f89         ja         loc_3800

0000000000003f8f         movabs     rax, 0x7000a38200000000
0000000000003f99         bt         rax, rbx
0000000000003f9d         jae        loc_3800

0000000000003fa3         cmp        byte [rsp+arg_7], 0x0
0000000000003fa8         jne        loc_4192

0000000000003fae         cmp        r13, r15
0000000000003fb1         jbe        loc_3fb8

0000000000003fb3         mov        byte [r14+r15], 0x3f

                     loc_3fb8:
0000000000003fb8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_36d0+2273
0000000000003fbc         cmp        r13, rax
0000000000003fbf         jbe        loc_3fc7

0000000000003fc1         mov        byte [r14+r15+1], 0x22

                     loc_3fc7:
0000000000003fc7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_36d0+2287
0000000000003fcb         cmp        r13, rax
0000000000003fce         jbe        loc_3fd6

0000000000003fd0         mov        byte [r14+r15+2], 0x22

                     loc_3fd6:
0000000000003fd6         lea        rax, qword [r15+3]                          ; CODE XREF=sub_36d0+2302
0000000000003fda         cmp        r13, rax
0000000000003fdd         jbe        loc_3fe5

0000000000003fdf         mov        byte [r14+r15+3], 0x3f

                     loc_3fe5:
0000000000003fe5         add        r15, 0x4                                    ; CODE XREF=sub_36d0+2317
0000000000003fe9         xor        edx, edx
0000000000003feb         xor        r12d, r12d
0000000000003fee         xor        eax, eax
0000000000003ff0         mov        rbp, rcx
0000000000003ff3         jmp        sub_3180+56
                        ; endp

                     loc_3ff8:
0000000000003ff8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000003ffa         je         loc_4188

                     loc_4000:
0000000000004000         lea        rax, qword [aLibs+29]                       ; 0x63bd, DATA XREF=sub_3470+88
0000000000004007         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000400c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004011         xor        r12d, r12d
0000000000004014         mov        qword [rsp+0xe8+var_98], 0x0
000000000000401d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004022         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000004027         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004030         xor        r15d, r15d
0000000000004033         mov        qword [rsp+0xe8+var_A0], rax
0000000000004038         jmp        loc_3063
000000000000403d         align      64

                     loc_4040:
0000000000004040         mov        rbp, r11                                    ; CODE XREF=sub_36d0+333
0000000000004043         movzx      eax, byte [rsp+arg_7]
0000000000004048         jmp        sub_36d0+1097
                        ; endp

                     loc_404d:
000000000000404d         lea        rax, qword [aLibs+27]                       ; 0x63bb, CODE XREF=sub_36d0+1410
0000000000004054         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004059         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000405e         xor        r12d, r12d
0000000000004061         mov        qword [rsp+0xe8+var_98], 0x0
000000000000406a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000406f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004074         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000407d         xor        r15d, r15d
0000000000004080         mov        qword [rsp+0xe8+var_A0], rax
0000000000004085         jmp        loc_3063

                     loc_408a:
000000000000408a         mov        eax, edx                                    ; CODE XREF=sub_36d0+87

                     loc_408c:
000000000000408c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_36d0+76, sub_36d0+2721
0000000000004091         test       rbx, rbx
0000000000004094         je         loc_40c2

0000000000004096         test       al, al
0000000000004098         je         loc_40c2

000000000000409a         movzx      ecx, byte [rbx]
000000000000409d         mov        rax, rbx
00000000000040a0         test       cl, cl
00000000000040a2         je         loc_40c2

00000000000040a4         mov        rdx, r15
00000000000040a7         sub        rax, r15

                     loc_40aa:
00000000000040aa         cmp        r13, rdx                                    ; CODE XREF=sub_36d0+2541
00000000000040ad         jbe        loc_40b3

00000000000040af         mov        byte [r14+rdx], cl

                     loc_40b3:
00000000000040b3         add        rdx, 0x1                                    ; CODE XREF=sub_36d0+2525
00000000000040b7         movzx      ecx, byte [rax+rdx]
00000000000040bb         test       cl, cl
00000000000040bd         jne        loc_40aa

00000000000040bf         mov        r15, rdx

                     loc_40c2:
00000000000040c2         cmp        r13, r15                                    ; CODE XREF=sub_36d0+2500, sub_36d0+2504, sub_36d0+2514
00000000000040c5         jbe        loc_3b69

00000000000040cb         mov        byte [r14+r15], 0x0
00000000000040d0         jmp        loc_3b69

                     loc_40d5:
00000000000040d5         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
00000000000040da         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000040df         mov        rbp, r11
00000000000040e2         sete       al
00000000000040e5         mov        byte [rsp+0xe8+var_DB], bl
00000000000040e9         jmp        loc_3b19

                     loc_40ee:
00000000000040ee         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_36d0+1664
00000000000040f2         mov        rdi, rcx
00000000000040f5         call       gettext_quote.part.1                        ; gettext_quote.part.1
00000000000040fa         mov        qword [rsp+0xe8+var_80], rax
00000000000040ff         jmp        loc_3d56

                     loc_4104:
0000000000004104         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_36d0+1707
0000000000004108         mov        rdi, rcx
000000000000410b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004110         mov        qword [rsp+0xe8+var_88], rax
0000000000004115         jmp        loc_3d81

                     loc_411a:
000000000000411a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3570+16
000000000000411f         mov        rbp, r11
0000000000004122         mov        eax, edx
0000000000004124         mov        byte [rsp+arg_5], bl
0000000000004128         jmp        sub_36d0+1097
                        ; endp

                     loc_412d:
000000000000412d         sub        rsp, 0x8                                    ; CODE XREF=sub_36d0+98
0000000000004131         mov        r8d, 0x5
0000000000004137         mov        rcx, r11
000000000000413a         push       qword [rsp+0xf0+var_88]
000000000000413e         push       qword [rsp+0xf8+var_80]
0000000000004142         mov        rdi, r14
0000000000004145         push       qword [rsp+0x100+var_C8]
0000000000004149         mov        r9d, dword [rsp+0x108+var_70]
0000000000004151         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004156         mov        rsi, qword [rsp+0x108+var_98]
000000000000415b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004160         add        rsp, 0x20
0000000000004164         mov        r15, rax
0000000000004167         jmp        loc_3b69

                     loc_416c:
000000000000416c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_36d0+121
0000000000004171         jmp        loc_408c

                     loc_4176:
0000000000004176         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_36d0+63
000000000000417e         jmp        loc_3b19

                     loc_4183:
0000000000004183         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_36d0+1197
                        ; endp

                     loc_4188:
0000000000004188         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_36d0+2346
000000000000418d         jmp        loc_3c01

                     loc_4192:
0000000000004192         mov        rbp, r11                                    ; CODE XREF=sub_36d0+2264
0000000000004195         jmp        sub_36d0+1120
                        ; endp

                     loc_419a:
000000000000419a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_36d0+1332
000000000000419f         xor        eax, eax
00000000000041a1         xor        r12d, r12d
00000000000041a4         mov        qword [rsp+0xe8+var_98], 0x0
00000000000041ad         jmp        loc_3754

                     loc_41b2:
00000000000041b2         mov        rdx, r13                                    ; CODE XREF=sub_36d0+1264
00000000000041b5         mov        r13, qword [rsp+arg_48]
00000000000041ba         jmp        loc_37b2

                     loc_41bf:
00000000000041bf         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
00000000000041c4         align      16                                          ; End of unwind block (FDE at 0x7300)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
00000000000041d0         push       r15                                         ; Begin of unwind block (FDE at 0x7378), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
00000000000041d2         push       r14
00000000000041d4         movsxd     r15, edi
00000000000041d7         push       r13
00000000000041d9         push       r12
00000000000041db         mov        r14, rdx
00000000000041de         push       rbp
00000000000041df         push       rbx
00000000000041e0         mov        rbp, rcx
00000000000041e3         sub        rsp, 0x28
00000000000041e7         mov        qword [rsp+0x58+var_50], rsi
00000000000041ec         call       j___errno_location                          ; __errno_location
00000000000041f1         mov        r13, rax
00000000000041f4         mov        eax, dword [rax]
00000000000041f6         test       r15d, r15d
00000000000041f9         mov        rbx, qword [slotvec]                        ; slotvec
0000000000004200         mov        dword [rsp+0x58+var_40], eax
0000000000004204         js         loc_4371

000000000000420a         cmp        dword [nslots], r15d                        ; nslots
0000000000004211         jg         loc_4275

0000000000004213         cmp        r15d, 0x7fffffff
000000000000421a         je         loc_4376

0000000000004220         lea        r12d, dword [r15+1]
0000000000004224         lea        rax, qword [slotvec0]                       ; slotvec0
000000000000422b         movsxd     rsi, r12d
000000000000422e         shl        rsi, 0x4
0000000000004232         cmp        rbx, rax
0000000000004235         je         loc_4350

000000000000423b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
000000000000423e         call       xrealloc                                    ; xrealloc
0000000000004243         mov        rbx, rax
0000000000004246         mov        qword [slotvec], rax                        ; slotvec

                     loc_424d:
000000000000424d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000004254         mov        edx, r12d
0000000000004257         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004259         sub        edx, edi
000000000000425b         shl        rdi, 0x4
000000000000425f         movsxd     rdx, edx
0000000000004262         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000004265         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000004269         call       j_memset                                    ; memset
000000000000426e         mov        dword [nslots], r12d                        ; nslots

                     loc_4275:
0000000000004275         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000004278         shl        r15, 0x4
000000000000427c         sub        rsp, 0x8
0000000000004280         add        rbx, r15
0000000000004283         lea        r15, qword [rbp+8]
0000000000004287         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000428b         mov        r11, qword [rbx]
000000000000428e         mov        r12, qword [rbx+8]
0000000000004292         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004295         or         eax, 0x1
0000000000004298         mov        dword [rsp+0x60+var_3C], eax
000000000000429c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000429f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
00000000000042a2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000042a5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000042a7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
00000000000042aa         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000042af         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
00000000000042b2         mov        qword [rsp+0x78+var_48], r11
00000000000042b7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000042bc         add        rsp, 0x20
00000000000042c0         mov        r11, qword [rsp+0x58+var_48]
00000000000042c5         cmp        r11, rax
00000000000042c8         ja         loc_4331

00000000000042ca         lea        rsi, qword [rax+1]
00000000000042ce         lea        rax, qword [slot0]                          ; slot0
00000000000042d5         cmp        r12, rax
00000000000042d8         mov        qword [rbx], rsi
00000000000042db         je         loc_42ef

00000000000042dd         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000042e0         mov        qword [rsp+0x58+var_48], rsi
00000000000042e5         call       j_free                                      ; free
00000000000042ea         mov        rsi, qword [rsp+0x58+var_48]

                     loc_42ef:
00000000000042ef         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
00000000000042f2         mov        qword [rsp+0x58+var_48], rsi
00000000000042f7         call       xmalloc                                     ; xmalloc
00000000000042fc         sub        rsp, 0x8
0000000000004300         mov        qword [rbx+8], rax
0000000000004304         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004308         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000430b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000430e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004311         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004313         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000004318         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
000000000000431b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004320         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000004325         mov        r12, rax
0000000000004328         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000432d         add        rsp, 0x20

                     loc_4331:
0000000000004331         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000004335         mov        dword [r13], eax
0000000000004339         add        rsp, 0x28
000000000000433d         mov        rax, r12
0000000000004340         pop        rbx
0000000000004341         pop        rbp
0000000000004342         pop        r12
0000000000004344         pop        r13
0000000000004346         pop        r14
0000000000004348         pop        r15
000000000000434a         ret
                        ; endp
000000000000434b         align      16

                     loc_4350:
0000000000004350         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000004352         call       xrealloc                                    ; xrealloc
0000000000004357         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000435f         mov        rbx, rax
0000000000004362         mov        qword [slotvec], rax                        ; slotvec
0000000000004369         movups     xmmword [rax], xmm0
000000000000436c         jmp        loc_424d

                     loc_4371:
0000000000004371         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4376:
0000000000004376         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_437b:
000000000000437b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x7378)
                     clone_quoting_options:
0000000000004380         push       r12                                         ; Begin of unwind block (FDE at 0x73e4)
0000000000004382         push       rbp
0000000000004383         push       rbx
0000000000004384         mov        rbx, rdi
0000000000004387         call       j___errno_location                          ; __errno_location
000000000000438c         mov        r12d, dword [rax]
000000000000438f         mov        rbp, rax
0000000000004392         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004399         test       rbx, rbx
000000000000439c         mov        esi, 0x38
00000000000043a1         cmove      rbx, rax
00000000000043a5         mov        rdi, rbx
00000000000043a8         call       xmemdup                                     ; xmemdup
00000000000043ad         mov        dword [rbp], r12d
00000000000043b1         pop        rbx
00000000000043b2         pop        rbp
00000000000043b3         pop        r12
00000000000043b5         ret
                        ; endp
00000000000043b6         align      64                                          ; End of unwind block (FDE at 0x73e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
00000000000043c0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7410), default_quoting_options
00000000000043c7         test       rdi, rdi
00000000000043ca         cmove      rdi, rax
00000000000043ce         mov        eax, dword [rdi]
00000000000043d0         ret
                        ; endp
00000000000043d1         align      32                                          ; End of unwind block (FDE at 0x7410)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
00000000000043e0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7424), default_quoting_options
00000000000043e7         test       rdi, rdi
00000000000043ea         cmove      rdi, rax
00000000000043ee         mov        dword [rdi], esi
00000000000043f0         ret
                        ; endp
00000000000043f1         align      1024                                        ; End of unwind block (FDE at 0x7424)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000004400         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7438), default_quoting_options
0000000000004407         test       rdi, rdi
000000000000440a         mov        ecx, esi
000000000000440c         cmove      rdi, rax
0000000000004410         mov        eax, esi
0000000000004412         and        ecx, 0x1f
0000000000004415         shr        al, 0x5
0000000000004418         movzx      eax, al
000000000000441b         lea        rdi, qword [rdi+rax*4+8]
0000000000004420         mov        esi, dword [rdi]
0000000000004422         mov        eax, esi
0000000000004424         shr        eax, cl
0000000000004426         xor        edx, eax
0000000000004428         and        eax, 0x1
000000000000442b         and        edx, 0x1
000000000000442e         shl        edx, cl
0000000000004430         xor        edx, esi
0000000000004432         mov        dword [rdi], edx
0000000000004434         ret
                        ; endp
0000000000004435         align      64                                          ; End of unwind block (FDE at 0x7438)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000004440         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x744c), default_quoting_options
0000000000004447         test       rdi, rdi
000000000000444a         cmove      rdi, rax
000000000000444e         mov        eax, dword [rdi+4]
0000000000004451         mov        dword [rdi+4], esi
0000000000004454         ret
                        ; endp
0000000000004455         align      32                                          ; End of unwind block (FDE at 0x744c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004460         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7460), default_quoting_options
0000000000004467         test       rdi, rdi
000000000000446a         cmove      rdi, rax
000000000000446e         test       rsi, rsi
0000000000004471         mov        dword [rdi], 0xa
0000000000004477         je         loc_4487

0000000000004479         test       rdx, rdx
000000000000447c         je         loc_4487

000000000000447e         mov        qword [rdi+0x28], rsi
0000000000004482         mov        qword [rdi+0x30], rdx
0000000000004486         ret
                        ; endp

                     loc_4487:
0000000000004487         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000448b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004490         push       r15                                         ; End of unwind block (FDE at 0x7460), Begin of unwind block (FDE at 0x7474)
0000000000004492         push       r14
0000000000004494         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000449b         push       r13
000000000000449d         push       r12
000000000000449f         mov        r13, rdi
00000000000044a2         push       rbp
00000000000044a3         push       rbx
00000000000044a4         mov        rbx, r8
00000000000044a7         mov        r14, rsi
00000000000044aa         mov        r15, rdx
00000000000044ad         sub        rsp, 0x18
00000000000044b1         test       r8, r8
00000000000044b4         cmove      rbx, rax
00000000000044b8         mov        qword [rsp+0x48+var_40], rcx
00000000000044bd         call       j___errno_location                          ; __errno_location
00000000000044c2         mov        r12d, dword [rax]
00000000000044c5         mov        rbp, rax
00000000000044c8         lea        rax, qword [rbx+8]
00000000000044cc         sub        rsp, 0x8
00000000000044d0         mov        r9d, dword [rbx+4]
00000000000044d4         push       qword [rbx+0x30]
00000000000044d7         mov        r8d, dword [rbx]
00000000000044da         push       qword [rbx+0x28]
00000000000044dd         mov        rdx, r15
00000000000044e0         push       rax
00000000000044e1         mov        rcx, qword [rsp+0x68+var_40]
00000000000044e6         mov        rsi, r14
00000000000044e9         mov        rdi, r13
00000000000044ec         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000044f1         mov        dword [rbp], r12d
00000000000044f5         add        rsp, 0x38
00000000000044f9         pop        rbx
00000000000044fa         pop        rbp
00000000000044fb         pop        r12
00000000000044fd         pop        r13
00000000000044ff         pop        r14
0000000000004501         pop        r15
0000000000004503         ret
                        ; endp
0000000000004504         align      16                                          ; End of unwind block (FDE at 0x7474)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000004510         push       r15                                         ; Begin of unwind block (FDE at 0x74c8), CODE XREF=quotearg_alloc+5
0000000000004512         push       r14
0000000000004514         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000451b         push       r13
000000000000451d         push       r12
000000000000451f         mov        r12, rdx
0000000000004522         push       rbp
0000000000004523         push       rbx
0000000000004524         mov        rbx, rcx
0000000000004527         mov        r14, rdi
000000000000452a         mov        r15, rsi
000000000000452d         sub        rsp, 0x38
0000000000004531         test       rcx, rcx
0000000000004534         cmove      rbx, rax
0000000000004538         xor        ebp, ebp
000000000000453a         call       j___errno_location                          ; __errno_location
000000000000453f         test       r12, r12
0000000000004542         mov        r13, rax
0000000000004545         mov        eax, dword [rax]
0000000000004547         sete       bpl
000000000000454b         or         ebp, dword [rbx+4]
000000000000454e         lea        r10, qword [rbx+8]
0000000000004552         sub        rsp, 0x8
0000000000004556         mov        r8d, dword [rbx]
0000000000004559         mov        rcx, r15
000000000000455c         mov        dword [rsp+0x70+var_5C], eax
0000000000004560         push       qword [rbx+0x30]
0000000000004563         mov        rdx, r14
0000000000004566         push       qword [rbx+0x28]
0000000000004569         push       r10
000000000000456b         xor        esi, esi
000000000000456d         mov        r9d, ebp
0000000000004570         xor        edi, edi
0000000000004572         mov        qword [rsp+0x88+var_48], r10
0000000000004577         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000457c         lea        rsi, qword [rax+1]
0000000000004580         mov        qword [rsp+0x88+var_40], rax
0000000000004585         add        rsp, 0x20
0000000000004589         mov        rdi, rsi
000000000000458c         mov        qword [rsp+0x68+var_50], rsi
0000000000004591         call       xmalloc                                     ; xmalloc
0000000000004596         mov        qword [rsp+0x68+var_58], rax
000000000000459b         sub        rsp, 0x8
000000000000459f         push       qword [rbx+0x30]
00000000000045a2         push       qword [rbx+0x28]
00000000000045a5         mov        r10, qword [rsp+0x80+var_48]
00000000000045aa         mov        r9d, ebp
00000000000045ad         mov        r8d, dword [rbx]
00000000000045b0         mov        rcx, r15
00000000000045b3         mov        rdx, r14
00000000000045b6         mov        rdi, rax
00000000000045b9         push       r10
00000000000045bb         mov        rsi, qword [rsp+0x88+var_50]
00000000000045c0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000045c5         mov        eax, dword [rsp+0x88+var_5C]
00000000000045c9         add        rsp, 0x20
00000000000045cd         test       r12, r12
00000000000045d0         mov        dword [r13], eax
00000000000045d4         je         loc_45df

00000000000045d6         mov        r11, qword [rsp+0x68+var_40]
00000000000045db         mov        qword [r12], r11

                     loc_45df:
00000000000045df         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
00000000000045e4         add        rsp, 0x38
00000000000045e8         pop        rbx
00000000000045e9         pop        rbp
00000000000045ea         pop        r12
00000000000045ec         pop        r13
00000000000045ee         pop        r14
00000000000045f0         pop        r15
00000000000045f2         ret
                        ; endp
00000000000045f3         align      512                                         ; End of unwind block (FDE at 0x74c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000004600         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x7534)
0000000000004603         xor        edx, edx
0000000000004605         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000460a         align      16                                          ; End of unwind block (FDE at 0x7534)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000004610         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x7548), nslots
0000000000004616         push       r12
0000000000004618         mov        r12, qword [slotvec]                        ; slotvec
000000000000461f         push       rbp
0000000000004620         push       rbx
0000000000004621         cmp        eax, 0x1
0000000000004624         jle        loc_4651

0000000000004626         sub        eax, 0x2
0000000000004629         lea        rbx, qword [r12+0x18]
000000000000462e         shl        rax, 0x4
0000000000004632         lea        rbp, qword [r12+rax+0x28]
0000000000004637         nop        word [rax+rax]

                     loc_4640:
0000000000004640         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000004643         add        rbx, 0x10
0000000000004647         call       j_free                                      ; free
000000000000464c         cmp        rbx, rbp
000000000000464f         jne        loc_4640

                     loc_4651:
0000000000004651         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000004656         lea        rbx, qword [slot0]                          ; slot0
000000000000465d         cmp        rdi, rbx
0000000000004660         je         loc_4679

0000000000004662         call       j_free                                      ; free
0000000000004667         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000004672         mov        qword [slotvec0+8], rbx                     ; 0x209078

                     loc_4679:
0000000000004679         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004680         cmp        r12, rbx
0000000000004683         je         loc_4694

0000000000004685         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004688         call       j_free                                      ; free
000000000000468d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_4694:
0000000000004694         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004695         mov        dword [nslots], 0x1                         ; nslots
000000000000469f         pop        rbp
00000000000046a0         pop        r12
00000000000046a2         ret
                        ; endp
00000000000046a3         align      16                                          ; End of unwind block (FDE at 0x7548)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
00000000000046b0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7574), default_quoting_options
00000000000046b7         mov        rdx, 0xffffffffffffffff
00000000000046be         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000046c3         align      16                                          ; End of unwind block (FDE at 0x7574)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
00000000000046d0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7588), default_quoting_options
00000000000046d7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000046dc         align      32                                          ; End of unwind block (FDE at 0x7588)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
00000000000046e0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x759c), default_quoting_options
00000000000046e7         mov        rsi, rdi
00000000000046ea         mov        rdx, 0xffffffffffffffff
00000000000046f1         xor        edi, edi
00000000000046f3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000046f8         align      256                                         ; End of unwind block (FDE at 0x759c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000004700         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x75b0), default_quoting_options
0000000000004707         mov        rdx, rsi
000000000000470a         mov        rsi, rdi
000000000000470d         xor        edi, edi
000000000000470f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004714         align      32                                          ; End of unwind block (FDE at 0x75b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000004720         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x75c4)
0000000000004724         mov        rax, rdx
0000000000004727         mov        rdx, qword [fs:0x28]
0000000000004730         mov        qword [rsp+0x48+var_10], rdx
0000000000004735         xor        edx, edx
0000000000004737         cmp        esi, 0xa
000000000000473a         je         loc_47a4

000000000000473c         mov        dword [rsp+0x48+var_48], esi
000000000000473f         mov        rcx, rsp
0000000000004742         mov        rdx, 0xffffffffffffffff
0000000000004749         mov        rsi, rax
000000000000474c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004755         mov        qword [rsp+0x48+var_3C], 0x0
000000000000475e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004767         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004770         mov        qword [rsp+0x48+var_24], 0x0
0000000000004779         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004782         mov        dword [rsp+0x48+var_14], 0x0
000000000000478a         call       quotearg_n_options                          ; quotearg_n_options
000000000000478f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004794         xor        rcx, qword [fs:0x28]
000000000000479d         jne        loc_47a9

000000000000479f         add        rsp, 0x48
00000000000047a3         ret
                        ; endp

                     loc_47a4:
00000000000047a4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_47a9:
00000000000047a9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
00000000000047ae         align      16                                          ; End of unwind block (FDE at 0x75c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
00000000000047b0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x75e0), CODE XREF=quotearg_style_mem+10
00000000000047b4         mov        rax, rdx
00000000000047b7         mov        rdx, rcx
00000000000047ba         mov        rcx, qword [fs:0x28]
00000000000047c3         mov        qword [rsp+0x48+var_10], rcx
00000000000047c8         xor        ecx, ecx
00000000000047ca         cmp        esi, 0xa
00000000000047cd         je         loc_4830

00000000000047cf         mov        dword [rsp+0x48+var_48], esi
00000000000047d2         mov        rcx, rsp
00000000000047d5         mov        rsi, rax
00000000000047d8         mov        qword [rsp+0x48+var_44], 0x0
00000000000047e1         mov        qword [rsp+0x48+var_3C], 0x0
00000000000047ea         mov        qword [rsp+0x48+var_34], 0x0
00000000000047f3         mov        qword [rsp+0x48+var_2C], 0x0
00000000000047fc         mov        qword [rsp+0x48+var_24], 0x0
0000000000004805         mov        qword [rsp+0x48+var_1C], 0x0
000000000000480e         mov        dword [rsp+0x48+var_14], 0x0
0000000000004816         call       quotearg_n_options                          ; quotearg_n_options
000000000000481b         mov        rdx, qword [rsp+0x48+var_10]
0000000000004820         xor        rdx, qword [fs:0x28]
0000000000004829         jne        loc_4835

000000000000482b         add        rsp, 0x48
000000000000482f         ret
                        ; endp

                     loc_4830:
0000000000004830         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_4835:
0000000000004835         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000483a         align      64                                          ; End of unwind block (FDE at 0x75e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000004840         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x75fc)
0000000000004843         mov        esi, edi
0000000000004845         xor        edi, edi
0000000000004847         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000484c         align      16                                          ; End of unwind block (FDE at 0x75fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000004850         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x7610)
0000000000004853         mov        rdx, rsi
0000000000004856         mov        esi, edi
0000000000004858         xor        edi, edi
000000000000485a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000485f         align      32                                          ; End of unwind block (FDE at 0x7610)

                     quotearg_char_mem:
0000000000004860         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7624), CODE XREF=quotearg_char+11
0000000000004864         mov        ecx, edx
0000000000004866         mov        rax, qword [fs:0x28]
000000000000486f         mov        qword [rsp+0x48+var_10], rax
0000000000004874         xor        eax, eax
0000000000004876         mov        rax, qword [qword_209230]                   ; qword_209230
000000000000487d         mov        r8, rsp
0000000000004880         and        ecx, 0x1f
0000000000004883         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000488b         mov        qword [rsp+0x48+var_18], rax
0000000000004890         mov        eax, edx
0000000000004892         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004896         shr        al, 0x5
0000000000004899         movzx      eax, al
000000000000489c         lea        r9, qword [r8+rax*4+8]
00000000000048a1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x209210
00000000000048a9         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000048ae         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x209220
00000000000048b6         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000048bb         mov        edx, dword [r9]
00000000000048be         mov        eax, edx
00000000000048c0         shr        eax, cl
00000000000048c2         not        eax
00000000000048c4         and        eax, 0x1
00000000000048c7         shl        eax, cl
00000000000048c9         mov        rcx, r8
00000000000048cc         xor        eax, edx
00000000000048ce         mov        rdx, rsi
00000000000048d1         mov        rsi, rdi
00000000000048d4         mov        dword [r9], eax
00000000000048d7         xor        edi, edi
00000000000048d9         call       quotearg_n_options                          ; quotearg_n_options
00000000000048de         mov        rsi, qword [rsp+0x48+var_10]
00000000000048e3         xor        rsi, qword [fs:0x28]
00000000000048ec         jne        loc_48f3

00000000000048ee         add        rsp, 0x48
00000000000048f2         ret
                        ; endp

                     loc_48f3:
00000000000048f3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
00000000000048f8         align      256                                         ; End of unwind block (FDE at 0x7624)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000004900         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x7640)
0000000000004904         mov        rsi, 0xffffffffffffffff
000000000000490b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000004910         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x7640), Begin of unwind block (FDE at 0x7654), CODE XREF=close_stdout+101
0000000000004915         mov        rsi, 0xffffffffffffffff
000000000000491c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000004921         align      16                                          ; End of unwind block (FDE at 0x7654)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000004930         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x7668)
0000000000004935         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000493a         align      64                                          ; End of unwind block (FDE at 0x7668)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000004940         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x767c), CODE XREF=main+426, main+1700
0000000000004944         mov        rax, rdx
0000000000004947         mov        rdx, qword [fs:0x28]
0000000000004950         mov        qword [rsp+0x48+var_10], rdx
0000000000004955         xor        edx, edx
0000000000004957         cmp        esi, 0xa
000000000000495a         je         loc_49c4

000000000000495c         mov        dword [rsp+0x48+var_48], esi
000000000000495f         mov        rcx, rsp
0000000000004962         mov        rdx, 0xffffffffffffffff
0000000000004969         mov        rsi, rax
000000000000496c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004975         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000497e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004987         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004990         mov        qword [rsp+0x48+var_24], 0x0
0000000000004999         mov        qword [rsp+0x48+var_1C], 0x0
00000000000049a2         mov        dword [rsp+0x48+var_14], 0x0
00000000000049aa         call       quotearg_n_options                          ; quotearg_n_options
00000000000049af         mov        rcx, qword [rsp+0x48+var_10]
00000000000049b4         xor        rcx, qword [fs:0x28]
00000000000049bd         jne        loc_49c9

00000000000049bf         add        rsp, 0x48
00000000000049c3         ret
                        ; endp

                     loc_49c4:
00000000000049c4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_49c9:
00000000000049c9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
00000000000049ce         align      16                                          ; End of unwind block (FDE at 0x767c)

                     quotearg_n_custom_mem:
00000000000049d0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7698), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
00000000000049d4         mov        r9, rcx
00000000000049d7         mov        rcx, qword [qword_209230]                   ; qword_209230
00000000000049de         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000049e6         mov        rax, qword [fs:0x28]
00000000000049ef         mov        qword [rsp+0x48+var_10], rax
00000000000049f4         xor        eax, eax
00000000000049f6         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000049fa         test       rsi, rsi
00000000000049fd         mov        qword [rsp+0x48+var_18], rcx
0000000000004a02         mov        dword [rsp+0x48+var_48], 0xa
0000000000004a09         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x209210
0000000000004a11         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000004a16         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x209220
0000000000004a1e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000004a23         je         loc_4a57

0000000000004a25         test       rdx, rdx
0000000000004a28         je         loc_4a57

0000000000004a2a         mov        qword [rsp+0x48+var_20], rsi
0000000000004a2f         mov        qword [rsp+0x48+var_18], rdx
0000000000004a34         mov        rcx, rsp
0000000000004a37         mov        rdx, r8
0000000000004a3a         mov        rsi, r9
0000000000004a3d         call       quotearg_n_options                          ; quotearg_n_options
0000000000004a42         mov        rdi, qword [rsp+0x48+var_10]
0000000000004a47         xor        rdi, qword [fs:0x28]
0000000000004a50         jne        loc_4a5c

0000000000004a52         add        rsp, 0x48
0000000000004a56         ret
                        ; endp

                     loc_4a57:
0000000000004a57         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_4a5c:
0000000000004a5c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000004a61         align      16                                          ; End of unwind block (FDE at 0x7698)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000004a70         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x76b4)
0000000000004a77         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
0000000000004a7c         align      128                                         ; End of unwind block (FDE at 0x76b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004a80         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x76c8)
0000000000004a83         mov        r8, 0xffffffffffffffff
0000000000004a8a         mov        rdx, rsi
0000000000004a8d         mov        rsi, rdi
0000000000004a90         xor        edi, edi
0000000000004a92         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004a97         align      32                                          ; End of unwind block (FDE at 0x76c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000004aa0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x76dc)
0000000000004aa3         mov        rcx, rdx
0000000000004aa6         mov        rdx, rsi
0000000000004aa9         mov        rsi, rdi
0000000000004aac         xor        edi, edi
0000000000004aae         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004ab3         align      64                                          ; End of unwind block (FDE at 0x76dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000004ac0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x76f0), quote_quoting_options
0000000000004ac7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004acc         align      16                                          ; End of unwind block (FDE at 0x76f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000004ad0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7704), quote_quoting_options
0000000000004ad7         mov        rdx, rsi
0000000000004ada         mov        rsi, rdi
0000000000004add         xor        edi, edi
0000000000004adf         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004ae4         align      16                                          ; End of unwind block (FDE at 0x7704)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000004af0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7718), quote_quoting_options
0000000000004af7         mov        rdx, 0xffffffffffffffff
0000000000004afe         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004b03         align      16                                          ; End of unwind block (FDE at 0x7718)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000004b10         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x772c), quote_quoting_options, CODE XREF=main+1921, xnumtoumax+109
0000000000004b17         mov        rsi, rdi
0000000000004b1a         mov        rdx, 0xffffffffffffffff
0000000000004b21         xor        edi, edi
0000000000004b23         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004b28         align      16                                          ; End of unwind block (FDE at 0x772c)

                     version_etc_arn:
0000000000004b30         push       r15                                         ; Begin of unwind block (FDE at 0x7744), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000004b32         push       r14
0000000000004b34         push       r13
0000000000004b36         push       r12
0000000000004b38         mov        r12, r9
0000000000004b3b         push       rbp
0000000000004b3c         push       rbx
0000000000004b3d         mov        rbp, rdi
0000000000004b40         mov        rbx, r8
0000000000004b43         sub        rsp, 0x28
0000000000004b47         test       rsi, rsi
0000000000004b4a         je         loc_4c68

0000000000004b50         mov        r8, rdx
0000000000004b53         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
0000000000004b5a         mov        r9, rcx
0000000000004b5d         xor        eax, eax
0000000000004b5f         mov        rcx, rsi
0000000000004b62         mov        esi, 0x1
0000000000004b67         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_4b6c:
0000000000004b6c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x689b, CODE XREF=version_etc_arn+337
0000000000004b73         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b75         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b7a         call       j_dcgettext                                 ; dcgettext
0000000000004b7f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000004b86         mov        rcx, rax
0000000000004b89         mov        r8d, 0x7e3
0000000000004b8f         mov        esi, 0x1
0000000000004b94         mov        rdi, rbp
0000000000004b97         xor        eax, eax
0000000000004b99         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004b9e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004ba5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ba7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004bac         call       j_dcgettext                                 ; dcgettext
0000000000004bb1         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004bb4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004bb7         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004bbc         cmp        r12, 0x9
0000000000004bc0         ja         loc_4f00

0000000000004bc6         lea        rdx, qword [switch_table_6b84]              ; switch_table_6b84
0000000000004bcd         movsxd     rax, dword [rdx+r12*4]
0000000000004bd1         add        rax, rdx
0000000000004bd4         jmp        rax                                         ; switch statement using table at 0x6b84, with 10 cases, 0x4be0,0x4c56,0x4c90,0x4ce8,0x4d28,0x4d70,0x4dc0,0x4e18,0x4e48,0x4eb0
0000000000004bd6         align      32

                     loc_4be0:
0000000000004be0         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000004be4         mov        rax, qword [rbx+0x10]
0000000000004be8         lea        rsi, qword [aWrittenBySSSns_6a98]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000004bef         mov        r8, qword [rbx+8]
0000000000004bf3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004bf8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004bfa         mov        r13, qword [rbx+0x30]
0000000000004bfe         mov        r12, qword [rbx+0x28]
0000000000004c02         mov        qword [rsp+0x58+var_48], r9
0000000000004c07         mov        r15, qword [rbx+0x20]
0000000000004c0b         mov        r14, qword [rbx+0x18]
0000000000004c0f         mov        qword [rsp+0x58+var_58], rax
0000000000004c13         mov        qword [rsp+0x58+var_50], r8
0000000000004c18         mov        rbx, qword [rbx]
0000000000004c1b         call       j_dcgettext                                 ; dcgettext
0000000000004c20         sub        rsp, 0x8

                     loc_4c24:
0000000000004c24         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000004c29         mov        rdx, rax
0000000000004c2c         mov        rcx, rbx
0000000000004c2f         mov        esi, 0x1
0000000000004c34         mov        rdi, rbp
0000000000004c37         xor        eax, eax
0000000000004c39         push       r9
0000000000004c3b         push       r13
0000000000004c3d         push       r12
0000000000004c3f         push       r15
0000000000004c41         push       r14
0000000000004c43         mov        r9, qword [rsp+0x88+var_58]
0000000000004c48         mov        r8, qword [rsp+0x88+var_50]
0000000000004c4d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004c52         add        rsp, 0x30

                     loc_4c56:
0000000000004c56         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
0000000000004c5a         pop        rbx
0000000000004c5b         pop        rbp
0000000000004c5c         pop        r12
0000000000004c5e         pop        r13
0000000000004c60         pop        r14
0000000000004c62         pop        r15
0000000000004c64         ret
                        ; endp
0000000000004c65         align      8

                     loc_4c68:
0000000000004c68         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
0000000000004c6b         mov        rcx, rdx
0000000000004c6e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000004c75         mov        esi, 0x1
0000000000004c7a         xor        eax, eax
0000000000004c7c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004c81         jmp        loc_4b6c
0000000000004c86         align      16

                     loc_4c90:
0000000000004c90         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000004c94         mov        r9, qword [rbx+0x38]
0000000000004c98         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
0000000000004c9f         mov        rax, qword [rbx+0x10]
0000000000004ca3         mov        r8, qword [rbx+8]
0000000000004ca7         mov        edx, 0x5
0000000000004cac         mov        r13, qword [rbx+0x30]
0000000000004cb0         mov        r12, qword [rbx+0x28]
0000000000004cb4         mov        r15, qword [rbx+0x20]
0000000000004cb8         mov        r14, qword [rbx+0x18]
0000000000004cbc         mov        rbx, qword [rbx]
0000000000004cbf         mov        qword [rsp+0x58+var_40], r10
0000000000004cc4         mov        qword [rsp+0x58+var_48], r9
0000000000004cc9         mov        qword [rsp+0x58+var_58], rax
0000000000004ccd         mov        qword [rsp+0x58+var_50], r8

                     loc_4cd2:
0000000000004cd2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000004cd4         call       j_dcgettext                                 ; dcgettext
0000000000004cd9         mov        r10, qword [rsp+0x58+var_40]
0000000000004cde         push       r10
0000000000004ce0         jmp        loc_4c24
0000000000004ce5         align      8

                     loc_4ce8:
0000000000004ce8         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
0000000000004ceb         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000004cf2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004cf7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004cf9         call       j_dcgettext                                 ; dcgettext
0000000000004cfe         add        rsp, 0x28
0000000000004d02         mov        rcx, rbx
0000000000004d05         mov        rdi, rbp
0000000000004d08         pop        rbx
0000000000004d09         pop        rbp
0000000000004d0a         pop        r12
0000000000004d0c         pop        r13
0000000000004d0e         pop        r14
0000000000004d10         pop        r15
0000000000004d12         mov        rdx, rax
0000000000004d15         mov        esi, 0x1
0000000000004d1a         xor        eax, eax
0000000000004d1c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004d21         align      8

                     loc_4d28:
0000000000004d28         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
0000000000004d2c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000004d33         mov        rbx, qword [rbx]
0000000000004d36         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004d3b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004d3d         call       j_dcgettext                                 ; dcgettext
0000000000004d42         add        rsp, 0x28
0000000000004d46         mov        r8, r12
0000000000004d49         mov        rcx, rbx
0000000000004d4c         mov        rdi, rbp
0000000000004d4f         mov        rdx, rax
0000000000004d52         mov        esi, 0x1
0000000000004d57         pop        rbx
0000000000004d58         pop        rbp
0000000000004d59         pop        r12
0000000000004d5b         pop        r13
0000000000004d5d         pop        r14
0000000000004d5f         pop        r15
0000000000004d61         xor        eax, eax
0000000000004d63         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004d68         align      16

                     loc_4d70:
0000000000004d70         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000004d74         mov        r12, qword [rbx+8]
0000000000004d78         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
0000000000004d7f         mov        rbx, qword [rbx]
0000000000004d82         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004d87         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004d89         call       j_dcgettext                                 ; dcgettext
0000000000004d8e         add        rsp, 0x28
0000000000004d92         mov        r9, r13
0000000000004d95         mov        r8, r12
0000000000004d98         mov        rcx, rbx
0000000000004d9b         mov        rdi, rbp
0000000000004d9e         mov        rdx, rax
0000000000004da1         pop        rbx
0000000000004da2         pop        rbp
0000000000004da3         pop        r12
0000000000004da5         pop        r13
0000000000004da7         pop        r14
0000000000004da9         pop        r15
0000000000004dab         mov        esi, 0x1
0000000000004db0         xor        eax, eax
0000000000004db2         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004db7         align      64

                     loc_4dc0:
0000000000004dc0         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000004dc7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004dcc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004dce         mov        r14, qword [rbx+0x18]
0000000000004dd2         mov        r13, qword [rbx+0x10]
0000000000004dd6         mov        r12, qword [rbx+8]
0000000000004dda         mov        rbx, qword [rbx]
0000000000004ddd         call       j_dcgettext                                 ; dcgettext
0000000000004de2         sub        rsp, 0x8

                     loc_4de6:
0000000000004de6         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000004de8         mov        rdx, rax
0000000000004deb         mov        r9, r13
0000000000004dee         mov        r8, r12
0000000000004df1         mov        rcx, rbx
0000000000004df4         mov        rdi, rbp
0000000000004df7         mov        esi, 0x1
0000000000004dfc         xor        eax, eax
0000000000004dfe         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004e03         pop        rax
0000000000004e04         pop        rdx
0000000000004e05         add        rsp, 0x28
0000000000004e09         pop        rbx
0000000000004e0a         pop        rbp
0000000000004e0b         pop        r12
0000000000004e0d         pop        r13
0000000000004e0f         pop        r14
0000000000004e11         pop        r15
0000000000004e13         ret
                        ; endp
0000000000004e14         align      8

                     loc_4e18:
0000000000004e18         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
0000000000004e1c         lea        rsi, qword [aWrittenBySSSns_6a18]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000004e23         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004e28         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004e2a         mov        r14, qword [rbx+0x18]
0000000000004e2e         mov        r13, qword [rbx+0x10]
0000000000004e32         mov        r12, qword [rbx+8]
0000000000004e36         mov        rbx, qword [rbx]
0000000000004e39         call       j_dcgettext                                 ; dcgettext
0000000000004e3e         push       r15
0000000000004e40         jmp        loc_4de6
0000000000004e42         align      8

                     loc_4e48:
0000000000004e48         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
0000000000004e4c         mov        r12, qword [rbx+0x28]
0000000000004e50         lea        rsi, qword [aWrittenBySSSns_6a40]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000004e57         mov        r15, qword [rbx+0x20]
0000000000004e5b         mov        r14, qword [rbx+0x18]
0000000000004e5f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004e64         mov        r13, qword [rbx+0x10]
0000000000004e68         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004e6a         mov        rbx, qword [rbx]
0000000000004e6d         mov        qword [rsp+0x58+var_58], r8
0000000000004e71         call       j_dcgettext                                 ; dcgettext
0000000000004e76         sub        rsp, 0x8
0000000000004e7a         mov        r9, r13
0000000000004e7d         push       r12
0000000000004e7f         push       r15
0000000000004e81         push       r14

                     loc_4e83:
0000000000004e83         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000004e88         mov        rcx, rbx
0000000000004e8b         mov        rdx, rax
0000000000004e8e         mov        rdi, rbp
0000000000004e91         mov        esi, 0x1
0000000000004e96         xor        eax, eax
0000000000004e98         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004e9d         add        rsp, 0x20
0000000000004ea1         add        rsp, 0x28
0000000000004ea5         pop        rbx
0000000000004ea6         pop        rbp
0000000000004ea7         pop        r12
0000000000004ea9         pop        r13
0000000000004eab         pop        r14
0000000000004ead         pop        r15
0000000000004eaf         ret
                        ; endp

                     loc_4eb0:
0000000000004eb0         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000004eb4         mov        r13, qword [rbx+0x30]
0000000000004eb8         lea        rsi, qword [aWrittenBySSSns_6a68]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000004ebf         mov        r12, qword [rbx+0x28]
0000000000004ec3         mov        r15, qword [rbx+0x20]
0000000000004ec7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ecc         mov        r14, qword [rbx+0x18]
0000000000004ed0         mov        r8, qword [rbx+8]
0000000000004ed4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ed6         mov        qword [rsp+0x58+var_50], r9
0000000000004edb         mov        rbx, qword [rbx]
0000000000004ede         mov        qword [rsp+0x58+var_58], r8
0000000000004ee2         call       j_dcgettext                                 ; dcgettext
0000000000004ee7         push       r13
0000000000004ee9         push       r12
0000000000004eeb         push       r15
0000000000004eed         push       r14
0000000000004eef         mov        r9, qword [rsp+0x78+var_50]
0000000000004ef4         jmp        loc_4e83
0000000000004ef6         align      256

                     loc_4f00:
0000000000004f00         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000004f04         mov        r9, qword [rbx+0x38]
0000000000004f08         mov        edx, 0x5
0000000000004f0d         mov        rax, qword [rbx+0x10]
0000000000004f11         mov        r8, qword [rbx+8]
0000000000004f15         lea        rsi, qword [aWrittenBySSSns_6b00]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000004f1c         mov        r13, qword [rbx+0x30]
0000000000004f20         mov        r12, qword [rbx+0x28]
0000000000004f24         mov        r15, qword [rbx+0x20]
0000000000004f28         mov        r14, qword [rbx+0x18]
0000000000004f2c         mov        qword [rsp+0x58+var_40], r10
0000000000004f31         mov        qword [rsp+0x58+var_48], r9
0000000000004f36         mov        qword [rsp+0x58+var_58], rax
0000000000004f3a         mov        qword [rsp+0x58+var_50], r8
0000000000004f3f         mov        rbx, qword [rbx]
0000000000004f42         jmp        loc_4cd2
0000000000004f47         align      16                                          ; End of unwind block (FDE at 0x7744)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_ar:
0000000000004f50         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x7858)
0000000000004f53         cmp        qword [r8], 0x0
0000000000004f57         je         j_version_etc_arn                           ; version_etc_arn

0000000000004f59         nop        dword [rax]

                     loc_4f60:
0000000000004f60         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000004f64         cmp        qword [r8+r9*8], 0x0
0000000000004f69         jne        loc_4f60

                     j_version_etc_arn:        // version_etc_arn
0000000000004f6b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000004f70         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x7858), Begin of unwind block (FDE at 0x786c)
0000000000004f74         mov        r10, r8
0000000000004f77         xor        r9d, r9d
0000000000004f7a         mov        rax, qword [fs:0x28]
0000000000004f83         mov        qword [rsp+0x68+var_10], rax
0000000000004f88         xor        eax, eax
0000000000004f8a         mov        r8, rsp
0000000000004f8d         nop        dword [rax]

                     loc_4f90:
0000000000004f90         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000004f93         cmp        eax, 0x2f
0000000000004f96         ja         loc_4fda

0000000000004f98         mov        r11d, eax
0000000000004f9b         add        r11, qword [r10+0x10]
0000000000004f9f         add        eax, 0x8
0000000000004fa2         mov        dword [r10], eax

                     loc_4fa5:
0000000000004fa5         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000004fa8         test       rax, rax
0000000000004fab         mov        qword [r8+r9*8], rax
0000000000004faf         je         loc_4fbb

0000000000004fb1         add        r9, 0x1
0000000000004fb5         cmp        r9, 0xa
0000000000004fb9         jne        loc_4f90

                     loc_4fbb:
0000000000004fbb         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000004fc0         mov        rax, qword [rsp+0x68+var_10]
0000000000004fc5         xor        rax, qword [fs:0x28]
0000000000004fce         jne        loc_4fd5

0000000000004fd0         add        rsp, 0x68
0000000000004fd4         ret
                        ; endp

                     loc_4fd5:
0000000000004fd5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_4fda:
0000000000004fda         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000004fde         lea        rax, qword [r11+8]
0000000000004fe2         mov        qword [r10+8], rax
0000000000004fe6         jmp        loc_4fa5
0000000000004fe8         align      16                                          ; End of unwind block (FDE at 0x786c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000004ff0         push       rbp                                         ; Begin of unwind block (FDE at 0x7888), CODE XREF=main+323
0000000000004ff1         push       rbx
0000000000004ff2         mov        r10d, 0x20
0000000000004ff8         xor        r11d, r11d
0000000000004ffb         sub        rsp, 0xb8
0000000000005002         mov        rax, qword [fs:0x28]
000000000000500b         mov        qword [rsp+0xc8+var_50], rax
0000000000005010         xor        eax, eax
0000000000005012         lea        rax, qword [rsp+0xc8+arg_0]
000000000000501a         mov        qword [rsp+0xc8+var_28], r8
0000000000005022         lea        rbx, qword [rsp+0xc8+arg_0]
000000000000502a         lea        r8, qword [rsp+0xc8+var_A8]
000000000000502f         mov        qword [rsp+0xc8+var_20], r9
0000000000005037         mov        dword [rsp+0xc8+var_C0], 0x20
000000000000503f         mov        qword [rsp+0xc8+var_B8], rax
0000000000005044         lea        rax, qword [rsp+0xc8+var_48]
000000000000504c         xor        r9d, r9d
000000000000504f         mov        qword [rsp+0xc8+var_B0], rax
0000000000005054         mov        rbp, rax
0000000000005057         nop        word [rax+rax]

                     loc_5060:
0000000000005060         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000005064         ja         loc_50bc

0000000000005066         mov        eax, r10d
0000000000005069         mov        r11d, 0x1
000000000000506f         add        r10d, 0x8
0000000000005073         add        rax, rbp

                     loc_5076:
0000000000005076         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000005079         test       rax, rax
000000000000507c         mov        qword [r8+r9*8], rax
0000000000005080         je         loc_508c

0000000000005082         add        r9, 0x1
0000000000005086         cmp        r9, 0xa
000000000000508a         jne        loc_5060

                     loc_508c:
000000000000508c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000508f         jne        loc_50b5

                     loc_5091:
0000000000005091         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000005096         mov        rax, qword [rsp+0xc8+var_50]
000000000000509b         xor        rax, qword [fs:0x28]
00000000000050a4         jne        loc_50b0

00000000000050a6         add        rsp, 0xb8
00000000000050ad         pop        rbx
00000000000050ae         pop        rbp
00000000000050af         ret
                        ; endp

                     loc_50b0:
00000000000050b0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_50b5:
00000000000050b5         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
00000000000050ba         jmp        loc_5091

                     loc_50bc:
00000000000050bc         mov        rax, rbx                                    ; CODE XREF=version_etc+116
00000000000050bf         add        rbx, 0x8
00000000000050c3         jmp        loc_5076
00000000000050c5         align      16                                          ; End of unwind block (FDE at 0x7888)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
00000000000050d0         push       rbx                                         ; Begin of unwind block (FDE at 0x78b4)
00000000000050d1         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
00000000000050d8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000050dd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000050df         call       j_dcgettext                                 ; dcgettext
00000000000050e4         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
00000000000050eb         mov        rsi, rax
00000000000050ee         mov        edi, 0x1
00000000000050f3         xor        eax, eax
00000000000050f5         call       j___printf_chk                              ; __printf_chk
00000000000050fa         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000005101         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005106         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005108         call       j_dcgettext                                 ; dcgettext
000000000000510d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000005114         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5d3f
000000000000511b         mov        rsi, rax
000000000000511e         mov        edi, 0x1
0000000000005123         xor        eax, eax
0000000000005125         call       j___printf_chk                              ; __printf_chk
000000000000512a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000005131         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000005138         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000513a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000513f         call       j_dcgettext                                 ; dcgettext
0000000000005144         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005147         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000514a         pop        rbx
000000000000514b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000005150         push       rbx                                         ; End of unwind block (FDE at 0x78b4), Begin of unwind block (FDE at 0x78d4), CODE XREF=main+520, main+533, main+1028, main+1047, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000005151         mov        rbx, rdi
0000000000005154         call       j_malloc                                    ; malloc
0000000000005159         test       rax, rax
000000000000515c         jne        loc_5163

000000000000515e         test       rbx, rbx
0000000000005161         jne        loc_5165

                     loc_5163:
0000000000005163         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000005164         ret
                        ; endp

                     loc_5165:
0000000000005165         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_516a:
000000000000516a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x78d4)
                     xnmalloc:
0000000000005170         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x78f0)
0000000000005173         mul        rsi
0000000000005176         mov        rdi, rax
0000000000005179         seto       al
000000000000517c         test       rdi, rdi
000000000000517f         js         loc_518b

0000000000005181         movzx      eax, al
0000000000005184         test       rax, rax
0000000000005187         jne        loc_518b

0000000000005189         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_518b:
000000000000518b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000518f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5194:
0000000000005194         nop                                                    ; End of unwind block (FDE at 0x78f0)
0000000000005196         nop        word [cs:rax+rax]
                     xcharalloc:
00000000000051a0         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x7904)
                        ; endp
00000000000051a2         align      16                                          ; End of unwind block (FDE at 0x7904)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
00000000000051b0         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x7918), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
00000000000051b3         push       rbx
00000000000051b4         mov        rbx, rsi
00000000000051b7         jne        loc_51be

00000000000051b9         test       rdi, rdi
00000000000051bc         jne        loc_51d8

                     loc_51be:
00000000000051be         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
00000000000051c1         call       j_realloc                                   ; realloc
00000000000051c6         test       rax, rax
00000000000051c9         jne        loc_51d0

00000000000051cb         test       rbx, rbx
00000000000051ce         jne        loc_51e1

                     loc_51d0:
00000000000051d0         pop        rbx                                         ; CODE XREF=xrealloc+25
00000000000051d1         ret
                        ; endp
00000000000051d2         align      8

                     loc_51d8:
00000000000051d8         call       j_free                                      ; free, CODE XREF=xrealloc+12
00000000000051dd         xor        eax, eax
00000000000051df         pop        rbx
00000000000051e0         ret
                        ; endp

                     loc_51e1:
00000000000051e1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_51e6:
00000000000051e6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x7918)
                     xnrealloc:
00000000000051f0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x793c)
00000000000051f3         mul        rdx
00000000000051f6         mov        rsi, rax
00000000000051f9         seto       al
00000000000051fc         test       rsi, rsi
00000000000051ff         js         loc_520b

0000000000005201         movzx      eax, al
0000000000005204         test       rax, rax
0000000000005207         jne        loc_520b

0000000000005209         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_520b:
000000000000520b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
000000000000520f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5214:
0000000000005214         nop                                                    ; End of unwind block (FDE at 0x793c)
0000000000005216         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000005220         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7950)
0000000000005223         mov        r9, rdx
0000000000005226         mov        rcx, qword [rsi]
0000000000005229         je         loc_5260

000000000000522b         xor        edx, edx
000000000000522d         movabs     rax, 0x5555555555555554
0000000000005237         div        r9
000000000000523a         cmp        rax, rcx
000000000000523d         jbe        loc_527b

000000000000523f         mov        rax, rcx
0000000000005242         shr        rax, 0x1
0000000000005245         lea        rcx, qword [rax+rcx+1]

                     loc_524a:
000000000000524a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
000000000000524d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000005251         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000005254         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005259         align      32

                     loc_5260:
0000000000005260         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000005263         je         loc_5288

                     loc_5265:
0000000000005265         mov        rax, rcx                                    ; CODE XREF=sub_5284+28
0000000000005268         mul        r9
000000000000526b         seto       dl
000000000000526e         test       rax, rax
0000000000005271         movzx      edx, dl
0000000000005274         js         loc_527b

0000000000005276         test       rdx, rdx
0000000000005279         je         loc_524a

                     loc_527b:
000000000000527b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000000527f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5284:
0000000000005284         nop        dword [rax]
                        ; endp

                     loc_5288:
0000000000005288         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000528a         mov        eax, 0x80
000000000000528f         xor        r8d, r8d
0000000000005292         div        r9
0000000000005295         test       rax, rax
0000000000005298         sete       r8b
000000000000529c         lea        rcx, qword [r8+rax]
00000000000052a0         jmp        loc_5265
00000000000052a2         align      16                                          ; End of unwind block (FDE at 0x7950)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
00000000000052b0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7968)
00000000000052b3         mov        rax, qword [rsi]
00000000000052b6         je         loc_52e0

00000000000052b8         movabs     rdx, 0x5555555555555553
00000000000052c2         cmp        rax, rdx
00000000000052c5         ja         loc_52f1

00000000000052c7         mov        rdx, rax
00000000000052ca         shr        rdx, 0x1
00000000000052cd         lea        rax, qword [rdx+rax+1]

                     loc_52d2:
00000000000052d2         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
00000000000052d5         mov        rsi, rax                                    ; argument #2 for method xrealloc
00000000000052d8         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000052dd         align      32

                     loc_52e0:
00000000000052e0         test       rax, rax                                    ; CODE XREF=x2realloc+6
00000000000052e3         mov        edx, 0x80
00000000000052e8         cmove      rax, rdx
00000000000052ec         test       rax, rax
00000000000052ef         jns        loc_52d2

                     loc_52f1:
00000000000052f1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
00000000000052f5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_52fa:
00000000000052fa         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7968)
                     xzalloc:
0000000000005300         push       rbx                                         ; Begin of unwind block (FDE at 0x7980)
0000000000005301         mov        rbx, rdi
0000000000005304         call       xmalloc                                     ; xmalloc
0000000000005309         mov        rdx, rbx                                    ; argument "__n" for method j_memset
000000000000530c         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000000530e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000005311         pop        rbx
0000000000005312         jmp        j_memset                                    ; memset
                        ; endp
0000000000005317         align      32                                          ; End of unwind block (FDE at 0x7980)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000005320         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x799c)
0000000000005323         sub        rsp, 0x8
0000000000005327         mul        rsi
000000000000532a         seto       dl
000000000000532d         test       rax, rax
0000000000005330         js         loc_5349

0000000000005332         movzx      edx, dl
0000000000005335         test       rdx, rdx
0000000000005338         jne        loc_5349

000000000000533a         call       j_calloc                                    ; calloc
000000000000533f         test       rax, rax
0000000000005342         je         loc_5349

0000000000005344         add        rsp, 0x8
0000000000005348         ret
                        ; endp

                     loc_5349:
0000000000005349         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_534e:
000000000000534e         nop                                                    ; End of unwind block (FDE at 0x799c)
                        ; endp

                     xmemdup:
0000000000005350         push       rbp                                         ; Begin of unwind block (FDE at 0x79b8), CODE XREF=clone_quoting_options+40, xstrdup+17
0000000000005351         push       rbx
0000000000005352         mov        rbp, rdi
0000000000005355         mov        rdi, rsi
0000000000005358         mov        rbx, rsi
000000000000535b         sub        rsp, 0x8
000000000000535f         call       xmalloc                                     ; xmalloc
0000000000005364         add        rsp, 0x8
0000000000005368         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000536b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000000536e         pop        rbx
000000000000536f         pop        rbp
0000000000005370         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005373         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005378         align      128                                         ; End of unwind block (FDE at 0x79b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005380         push       rbx                                         ; Begin of unwind block (FDE at 0x79e0)
0000000000005381         mov        rbx, rdi
0000000000005384         call       j_strlen                                    ; strlen
0000000000005389         mov        rdi, rbx
000000000000538c         lea        rsi, qword [rax+1]
0000000000005390         pop        rbx
0000000000005391         jmp        xmemdup                                     ; xmemdup
0000000000005393         align      32                                          ; End of unwind block (FDE at 0x79e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
00000000000053a0         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x79fc), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
00000000000053a7         sub        rsp, 0x8
00000000000053ab         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000053b0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000053b2         call       j_dcgettext                                 ; dcgettext
00000000000053b7         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
00000000000053bd         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6364
00000000000053c4         mov        rcx, rax
00000000000053c7         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000053c9         xor        eax, eax
00000000000053cb         call       j_error                                     ; error
00000000000053d0         call       j_abort                                     ; abort
                        ; endp
00000000000053d5         align      32                                          ; End of unwind block (FDE at 0x79fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     xnumtoumax:
00000000000053e0         push       r15                                         ; Begin of unwind block (FDE at 0x7a14), CODE XREF=xdectoumax+23
00000000000053e2         push       r14
00000000000053e4         mov        r15, rcx
00000000000053e7         push       r13
00000000000053e9         push       r12
00000000000053eb         mov        r14, rdx
00000000000053ee         push       rbp
00000000000053ef         push       rbx
00000000000053f0         mov        edx, esi
00000000000053f2         xor        esi, esi
00000000000053f4         mov        r12, rdi
00000000000053f7         mov        r13, r9
00000000000053fa         sub        rsp, 0x18
00000000000053fe         mov        rcx, rsp
0000000000005401         mov        ebx, dword [rsp+0x48+arg_0]
0000000000005405         mov        rax, qword [fs:0x28]
000000000000540e         mov        qword [rsp+0x48+var_40], rax
0000000000005413         xor        eax, eax
0000000000005415         call       xstrtoumax                                  ; xstrtoumax
000000000000541a         test       eax, eax
000000000000541c         jne        loc_54b0

0000000000005422         mov        rbp, qword [rsp+0x48+var_48]
0000000000005426         cmp        rbp, r14
0000000000005429         jb         loc_5430

000000000000542b         cmp        rbp, r15
000000000000542e         jbe        loc_5484

                     loc_5430:
0000000000005430         call       j___errno_location                          ; __errno_location, CODE XREF=xnumtoumax+73
0000000000005435         cmp        rbp, 0x40000000
000000000000543c         mov        r14, rax
000000000000543f         sbb        eax, eax
0000000000005441         and        eax, 0xffffffd7
0000000000005444         add        eax, 0x4b
0000000000005447         mov        dword [r14], eax

                     loc_544a:
000000000000544a         mov        rdi, r12                                    ; CODE XREF=xnumtoumax+226, xnumtoumax+234, xnumtoumax+246
000000000000544d         call       quote                                       ; quote
0000000000005452         mov        esi, dword [r14]
0000000000005455         mov        r8, rax
0000000000005458         mov        eax, 0x0
000000000000545d         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000005464         mov        rcx, r13
0000000000005467         cmp        esi, 0x16
000000000000546a         cmove      esi, eax                                    ; argument "__errnum" for method j_error
000000000000546d         test       ebx, ebx
000000000000546f         mov        eax, 0x1
0000000000005474         cmove      ebx, eax
0000000000005477         xor        eax, eax
0000000000005479         mov        edi, ebx                                    ; argument "__status" for method j_error
000000000000547b         call       j_error                                     ; error
0000000000005480         mov        rbp, qword [rsp+0x48+var_48]

                     loc_5484:
0000000000005484         mov        rdx, qword [rsp+0x48+var_40]                ; CODE XREF=xnumtoumax+78
0000000000005489         xor        rdx, qword [fs:0x28]
0000000000005492         mov        rax, rbp
0000000000005495         jne        loc_54db

0000000000005497         add        rsp, 0x18
000000000000549b         pop        rbx
000000000000549c         pop        rbp
000000000000549d         pop        r12
000000000000549f         pop        r13
00000000000054a1         pop        r14
00000000000054a3         pop        r15
00000000000054a5         ret
                        ; endp
00000000000054a6         align      16

                     loc_54b0:
00000000000054b0         mov        ebp, eax                                    ; CODE XREF=xnumtoumax+60
00000000000054b2         call       j___errno_location                          ; __errno_location
00000000000054b7         cmp        ebp, 0x1
00000000000054ba         mov        r14, rax
00000000000054bd         je         loc_54d0

00000000000054bf         cmp        ebp, 0x3
00000000000054c2         jne        loc_544a

00000000000054c4         mov        dword [rax], 0x0
00000000000054ca         jmp        loc_544a
00000000000054cf         align      16

                     loc_54d0:
00000000000054d0         mov        dword [rax], 0x4b                           ; CODE XREF=xnumtoumax+221
00000000000054d6         jmp        loc_544a

                     loc_54db:
00000000000054db         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xnumtoumax+181
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xdectoumax:
00000000000054e0         sub        rsp, 0x10                                   ; End of unwind block (FDE at 0x7a14), Begin of unwind block (FDE at 0x7a60), CODE XREF=main+222
00000000000054e4         push       r9
00000000000054e6         mov        r9, r8
00000000000054e9         mov        r8, rcx
00000000000054ec         mov        rcx, rdx
00000000000054ef         mov        rdx, rsi
00000000000054f2         mov        esi, 0xa
00000000000054f7         call       xnumtoumax                                  ; xnumtoumax
00000000000054fc         add        rsp, 0x18
0000000000005500         ret
                        ; endp
0000000000005501         align      16                                          ; End of unwind block (FDE at 0x7a60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoumax:
0000000000005510         push       r15                                         ; Begin of unwind block (FDE at 0x7a7c), CODE XREF=xnumtoumax+53
0000000000005512         push       r14
0000000000005514         push       r13
0000000000005516         push       r12
0000000000005518         push       rbp
0000000000005519         push       rbx
000000000000551a         sub        rsp, 0x28
000000000000551e         mov        rax, qword [fs:0x28]
0000000000005527         mov        qword [rsp+0x58+var_40], rax
000000000000552c         xor        eax, eax
000000000000552e         cmp        edx, 0x24
0000000000005531         ja         loc_5895

0000000000005537         lea        rax, qword [rsp+0x58+var_48]
000000000000553c         mov        r15, rsi
000000000000553f         test       rsi, rsi
0000000000005542         mov        rbp, rdi
0000000000005545         mov        dword [rsp+0x58+var_50], edx
0000000000005549         mov        r14, rcx
000000000000554c         mov        r13, r8
000000000000554f         cmove      r15, rax
0000000000005553         call       j___errno_location                          ; __errno_location
0000000000005558         mov        dword [rax], 0x0
000000000000555e         mov        r12, rax
0000000000005561         movzx      ebx, byte [rbp]
0000000000005565         call       j___ctype_b_loc                             ; __ctype_b_loc
000000000000556a         mov        edx, dword [rsp+0x58+var_50]
000000000000556e         mov        rsi, qword [rax]
0000000000005571         mov        rax, rbp
0000000000005574         jmp        loc_5587
0000000000005576         align      128

                     loc_5580:
0000000000005580         add        rax, 0x1                                    ; CODE XREF=xstrtoumax+127
0000000000005584         movzx      ebx, byte [rax]

                     loc_5587:
0000000000005587         movzx      ecx, bl                                     ; CODE XREF=xstrtoumax+100
000000000000558a         test       byte [rsi+rcx*2+1], 0x20
000000000000558f         jne        loc_5580

0000000000005591         cmp        bl, 0x2d
0000000000005594         je         loc_55e8

0000000000005596         xor        ecx, ecx
0000000000005598         mov        rsi, r15
000000000000559b         mov        rdi, rbp
000000000000559e         call       j___strtoul_internal                        ; __strtoul_internal
00000000000055a3         mov        rcx, qword [r15]
00000000000055a6         mov        rbx, rax
00000000000055a9         cmp        rcx, rbp
00000000000055ac         je         loc_55d8

00000000000055ae         mov        eax, dword [r12]
00000000000055b2         test       eax, eax
00000000000055b4         je         loc_5618

00000000000055b6         cmp        eax, 0x22
00000000000055b9         mov        ebp, 0x1
00000000000055be         jne        loc_55e8

                     loc_55c0:
00000000000055c0         test       r13, r13                                    ; CODE XREF=xstrtoumax+266
00000000000055c3         je         loc_55ce

00000000000055c5         movzx      r12d, byte [rcx]
00000000000055c9         test       r12b, r12b
00000000000055cc         jne        loc_5647

                     loc_55ce:
00000000000055ce         mov        qword [r14], rbx                            ; CODE XREF=xstrtoumax+179
00000000000055d1         jmp        loc_55ed
00000000000055d3         align      8

                     loc_55d8:
00000000000055d8         test       r13, r13                                    ; CODE XREF=xstrtoumax+156
00000000000055db         mov        qword [rsp+0x58+var_50], rcx
00000000000055e0         jne        loc_5620

00000000000055e2         nop        word [rax+rax]

                     loc_55e8:
00000000000055e8         mov        ebp, 0x4                                    ; CODE XREF=xstrtoumax+132, xstrtoumax+174, xstrtoumax+280, xstrtoumax+309

                     loc_55ed:
00000000000055ed         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoumax+193, xstrtoumax+535, xstrtoumax+546
00000000000055f2         xor        rdi, qword [fs:0x28]
00000000000055fb         mov        eax, ebp
00000000000055fd         jne        loc_5890

0000000000005603         add        rsp, 0x28
0000000000005607         pop        rbx
0000000000005608         pop        rbp
0000000000005609         pop        r12
000000000000560b         pop        r13
000000000000560d         pop        r14
000000000000560f         pop        r15
0000000000005611         ret
                        ; endp
0000000000005612         align      8

                     loc_5618:
0000000000005618         xor        ebp, ebp                                    ; CODE XREF=xstrtoumax+164
000000000000561a         jmp        loc_55c0
000000000000561c         align      32

                     loc_5620:
0000000000005620         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoumax+208
0000000000005625         test       r12b, r12b
0000000000005628         je         loc_55e8

000000000000562a         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
000000000000562e         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000005631         xor        ebp, ebp
0000000000005633         call       j_strchr                                    ; strchr
0000000000005638         test       rax, rax
000000000000563b         mov        ebx, 0x1
0000000000005640         mov        rcx, qword [rsp+0x58+var_50]
0000000000005645         je         loc_55e8

                     loc_5647:
0000000000005647         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoumax+188
000000000000564b         mov        rdi, r13                                    ; argument "__s" for method j_strchr
000000000000564e         mov        qword [rsp+0x58+var_50], rcx
0000000000005653         call       j_strchr                                    ; strchr
0000000000005658         test       rax, rax
000000000000565b         mov        rcx, qword [rsp+0x58+var_50]
0000000000005660         je         loc_572c

0000000000005666         lea        eax, dword [r12-0x45]
000000000000566b         cmp        al, 0x2f
000000000000566d         ja         loc_56c0

000000000000566f         movabs     rdx, 0x814400308945
0000000000005679         bt         rdx, rax
000000000000567d         jae        loc_56c0

000000000000567f         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
0000000000005684         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000005687         mov        qword [rsp+0x58+var_50], rcx
000000000000568c         call       j_strchr                                    ; strchr
0000000000005691         test       rax, rax
0000000000005694         mov        rcx, qword [rsp+0x58+var_50]
0000000000005699         je         loc_56c0

000000000000569b         movzx      eax, byte [rcx+1]
000000000000569f         cmp        al, 0x44
00000000000056a1         je         loc_56af

00000000000056a3         cmp        al, 0x69
00000000000056a5         je         loc_5878

00000000000056ab         cmp        al, 0x42
00000000000056ad         jne        loc_56c0

                     loc_56af:
00000000000056af         mov        edi, 0x2                                    ; CODE XREF=xstrtoumax+401
00000000000056b4         mov        esi, 0x3e8
00000000000056b9         jmp        loc_56ca
00000000000056bb         align      64

                     loc_56c0:
00000000000056c0         mov        edi, 0x1                                    ; CODE XREF=xstrtoumax+349, xstrtoumax+365, xstrtoumax+393, xstrtoumax+413
00000000000056c5         mov        esi, 0x400

                     loc_56ca:
00000000000056ca         sub        r12d, 0x42                                  ; CODE XREF=xstrtoumax+425, xstrtoumax+891
00000000000056ce         cmp        r12b, 0x35
00000000000056d2         ja         loc_572c

00000000000056d4         lea        rdx, qword [switch_table_6c48]              ; switch_table_6c48
00000000000056db         movzx      r12d, r12b
00000000000056df         movsxd     rax, dword [rdx+r12*4]
00000000000056e3         add        rax, rdx
00000000000056e6         jmp        rax                                         ; switch statement using table at 0x6c48, with 54 cases, 0x56e8,0x5710,0x572c,0x5737,0x574d,0x5764,0x578a,0x57af,0x57cf,0x57f0,0x5813,0x5836,0x584c

                     loc_56e8:
00000000000056e8         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoumax+470
00000000000056eb         mul        rsi
00000000000056ee         jo         loc_58e1

00000000000056f4         xor        r8d, r8d

                     loc_56f7:
00000000000056f7         mul        rsi                                         ; CODE XREF=xstrtoumax+846, xstrtoumax+862, xstrtoumax+987
00000000000056fa         jo         loc_58d2

0000000000005700         mov        rbx, rax

                     loc_5703:
0000000000005703         or         ebp, r8d                                    ; CODE XREF=xstrtoumax+972
0000000000005706         nop        word [cs:rax+rax]

                     loc_5710:
0000000000005710         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoumax+470, xstrtoumax+571, xstrtoumax+594, xstrtoumax+632, xstrtoumax+712, xstrtoumax+727, xstrtoumax+823
0000000000005713         mov        eax, ebp
0000000000005715         add        rcx, rdi
0000000000005718         or         eax, 0x2
000000000000571b         mov        qword [r15], rcx
000000000000571e         cmp        byte [rcx], 0x0
0000000000005721         mov        qword [r14], rbx
0000000000005724         cmovne     ebp, eax
0000000000005727         jmp        loc_55ed

                     loc_572c:
000000000000572c         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoumax+336, xstrtoumax+450, xstrtoumax+470
000000000000572f         or         ebp, 0x2
0000000000005732         jmp        loc_55ed

                     loc_5737:
0000000000005737         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoumax+470
000000000000573c         mov        rax, rdx
000000000000573f         mul        rbx
0000000000005742         jo         loc_57de

0000000000005748         add        rbx, rbx
000000000000574b         jmp        loc_5710

                     loc_574d:
000000000000574d         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoumax+470
0000000000005752         mov        rax, rdx
0000000000005755         mul        rbx
0000000000005758         jo         loc_57de

000000000000575e         shl        rbx, 0x9
0000000000005762         jmp        loc_5710

                     loc_5764:
0000000000005764         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoumax+470
000000000000576a         xor        r9d, r9d
000000000000576d         nop        dword [rax]

                     loc_5770:
0000000000005770         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+627
0000000000005773         mul        rsi
0000000000005776         mov        rbx, rax
0000000000005779         jo         loc_590e

                     loc_577f:
000000000000577f         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1032
0000000000005783         jne        loc_5770

                     loc_5785:
0000000000005785         or         ebp, r9d                                    ; CODE XREF=xstrtoumax+669, xstrtoumax+701, xstrtoumax+766, xstrtoumax+801
0000000000005788         jmp        loc_5710

                     loc_578a:
000000000000578a         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoumax+470
0000000000005790         xor        r9d, r9d
0000000000005793         nop        dword [rax+rax]

                     loc_5798:
0000000000005798         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+667
000000000000579b         mul        rsi
000000000000579e         mov        rbx, rax
00000000000057a1         jo         loc_58f0

                     loc_57a7:
00000000000057a7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1002
00000000000057ab         jne        loc_5798

00000000000057ad         jmp        loc_5785

                     loc_57af:
00000000000057af         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoumax+470
00000000000057b5         xor        r9d, r9d

                     loc_57b8:
00000000000057b8         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+699
00000000000057bb         mul        rsi
00000000000057be         mov        rbx, rax
00000000000057c1         jo         loc_58c3

                     loc_57c7:
00000000000057c7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+957
00000000000057cb         jne        loc_57b8

00000000000057cd         jmp        loc_5785

                     loc_57cf:
00000000000057cf         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoumax+470
00000000000057d2         mul        rsi
00000000000057d5         mov        rbx, rax
00000000000057d8         jno        loc_5710

                     loc_57de:
00000000000057de         mov        ebp, 0x1                                    ; CODE XREF=xstrtoumax+562, xstrtoumax+584, xstrtoumax+817
00000000000057e3         or         rbx, 0xffffffffffffffff
00000000000057e7         jmp        loc_5710
00000000000057ec         align      16

                     loc_57f0:
00000000000057f0         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoumax+470
00000000000057f6         xor        r9d, r9d

                     loc_57f9:
00000000000057f9         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+764
00000000000057fc         mul        rsi
00000000000057ff         mov        rbx, rax
0000000000005802         jo         loc_58ff

                     loc_5808:
0000000000005808         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1017
000000000000580c         jne        loc_57f9

000000000000580e         jmp        loc_5785

                     loc_5813:
0000000000005813         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoumax+470
0000000000005819         xor        r9d, r9d

                     loc_581c:
000000000000581c         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+799
000000000000581f         mul        rsi
0000000000005822         mov        rbx, rax
0000000000005825         jo         loc_58b4

                     loc_582b:
000000000000582b         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+942
000000000000582f         jne        loc_581c

0000000000005831         jmp        loc_5785

                     loc_5836:
0000000000005836         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoumax+470
000000000000583b         mov        rax, rdx
000000000000583e         mul        rbx
0000000000005841         jo         loc_57de

0000000000005843         shl        rbx, 0xa
0000000000005847         jmp        loc_5710

                     loc_584c:
000000000000584c         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoumax+470
000000000000584f         mul        rsi
0000000000005852         jo         loc_591d

0000000000005858         xor        r8d, r8d

                     loc_585b:
000000000000585b         mul        rsi                                         ; CODE XREF=xstrtoumax+1047
000000000000585e         jno        loc_56f7

0000000000005864         mov        r8d, 0x1
000000000000586a         or         rax, 0xffffffffffffffff
000000000000586e         jmp        loc_56f7
0000000000005873         align      8

                     loc_5878:
0000000000005878         xor        edi, edi                                    ; CODE XREF=xstrtoumax+405
000000000000587a         cmp        byte [rcx+2], 0x42
000000000000587e         mov        esi, 0x400
0000000000005883         sete       dil
0000000000005887         lea        edi, dword [rdi+rdi+1]
000000000000588b         jmp        loc_56ca

                     loc_5890:
0000000000005890         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoumax+237
                        ; endp

                     loc_5895:
0000000000005895         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoumax", CODE XREF=xstrtoumax+33
000000000000589c         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
00000000000058a3         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
00000000000058aa         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
00000000000058af         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_58b4:
00000000000058b4         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+789
00000000000058ba         or         rbx, 0xffffffffffffffff
00000000000058be         jmp        loc_582b

                     loc_58c3:
00000000000058c3         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+689
00000000000058c9         or         rbx, 0xffffffffffffffff
00000000000058cd         jmp        loc_57c7

                     loc_58d2:
00000000000058d2         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+490
00000000000058d8         or         rbx, 0xffffffffffffffff
00000000000058dc         jmp        loc_5703

                     loc_58e1:
00000000000058e1         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoumax+478
00000000000058e5         mov        r8d, 0x1
00000000000058eb         jmp        loc_56f7

                     loc_58f0:
00000000000058f0         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+657
00000000000058f6         or         rbx, 0xffffffffffffffff
00000000000058fa         jmp        loc_57a7

                     loc_58ff:
00000000000058ff         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+754
0000000000005905         or         rbx, 0xffffffffffffffff
0000000000005909         jmp        loc_5808

                     loc_590e:
000000000000590e         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+617
0000000000005914         or         rbx, 0xffffffffffffffff
0000000000005918         jmp        loc_577f

                     loc_591d:
000000000000591d         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+834
0000000000005923         or         rax, 0xffffffffffffffff
0000000000005927         jmp        loc_585b
000000000000592c         align      16                                          ; End of unwind block (FDE at 0x7a7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000005930         push       r12                                         ; Begin of unwind block (FDE at 0x7acc), CODE XREF=main+965, close_stream+21
0000000000005932         push       rbp
0000000000005933         push       rbx
0000000000005934         mov        rbx, rdi
0000000000005937         call       j_fileno                                    ; fileno
000000000000593c         test       eax, eax
000000000000593e         mov        rdi, rbx
0000000000005941         js         loc_5997

0000000000005943         call       j___freading                                ; __freading
0000000000005948         test       eax, eax
000000000000594a         jne        loc_5978

                     loc_594c:
000000000000594c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000594f         call       rpl_fflush                                  ; rpl_fflush
0000000000005954         test       eax, eax
0000000000005956         je         loc_5994

0000000000005958         call       j___errno_location                          ; __errno_location
000000000000595d         mov        r12d, dword [rax]
0000000000005960         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000005963         mov        rbp, rax
0000000000005966         call       j_fclose                                    ; fclose
000000000000596b         test       r12d, r12d
000000000000596e         jne        loc_59a0

                     loc_5970:
0000000000005970         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000005971         pop        rbp
0000000000005972         pop        r12
0000000000005974         ret
                        ; endp
0000000000005975         align      8

                     loc_5978:
0000000000005978         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000597b         call       j_fileno                                    ; fileno
0000000000005980         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000005982         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000005987         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000005989         call       j_lseek                                     ; lseek
000000000000598e         cmp        rax, 0xffffffffffffffff
0000000000005992         jne        loc_594c

                     loc_5994:
0000000000005994         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_5997:
0000000000005997         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000005998         pop        rbp
0000000000005999         pop        r12
000000000000599b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_59a0:
00000000000059a0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
00000000000059a4         mov        eax, 0xffffffff
00000000000059a9         jmp        loc_5970
00000000000059ab         align      16                                          ; End of unwind block (FDE at 0x7acc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
00000000000059b0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7b04), CODE XREF=rpl_fclose+31
00000000000059b3         push       rbx
00000000000059b4         mov        rbx, rdi
00000000000059b7         je         loc_59ca

00000000000059b9         call       j___freading                                ; __freading
00000000000059be         test       eax, eax
00000000000059c0         je         loc_59ca

00000000000059c2         test       dword [rbx], 0x100
00000000000059c8         jne        loc_59d8

                     loc_59ca:
00000000000059ca         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
00000000000059cd         pop        rbx
00000000000059ce         jmp        j_fflush                                    ; fflush
                        ; endp
00000000000059d3         align      8

                     loc_59d8:
00000000000059d8         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
00000000000059db         mov        edx, 0x1
00000000000059e0         xor        esi, esi
00000000000059e2         call       rpl_fseeko                                  ; rpl_fseeko
00000000000059e7         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
00000000000059ea         pop        rbx
00000000000059eb         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
00000000000059f0         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x7b04), Begin of unwind block (FDE at 0x7b24), CODE XREF=rpl_fflush+50
00000000000059f4         cmp        qword [rdi+0x10], rax
00000000000059f8         je         loc_5a00

                     j_j_fseeko:        // fseeko
00000000000059fa         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
00000000000059ff         align      512

                     loc_5a00:
0000000000005a00         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000005a04         cmp        qword [rdi+0x28], rax
0000000000005a08         jne        j_j_fseeko                                  ; fseeko

0000000000005a0a         cmp        qword [rdi+0x48], 0x0
0000000000005a0f         jne        j_j_fseeko                                  ; fseeko

0000000000005a11         push       r12
0000000000005a13         push       rbp
0000000000005a14         mov        r12d, edx
0000000000005a17         push       rbx
0000000000005a18         mov        rbp, rsi
0000000000005a1b         mov        rbx, rdi
0000000000005a1e         call       j_fileno                                    ; fileno
0000000000005a23         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000005a26         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000005a29         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000005a2b         call       j_lseek                                     ; lseek
0000000000005a30         cmp        rax, 0xffffffffffffffff
0000000000005a34         je         loc_5a42

0000000000005a36         and        dword [rbx], 0xffffffef
0000000000005a39         mov        qword [rbx+0x90], rax
0000000000005a40         xor        eax, eax

                     loc_5a42:
0000000000005a42         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000005a43         pop        rbp
0000000000005a44         pop        r12
0000000000005a46         ret
                        ; endp
0000000000005a47         align      16                                          ; End of unwind block (FDE at 0x7b24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000005a50         push       r13                                         ; Begin of unwind block (FDE at 0x7b54), CODE XREF=sub_36d0+534
0000000000005a52         push       r12
0000000000005a54         mov        r13, rsi
0000000000005a57         push       rbp
0000000000005a58         push       rbx
0000000000005a59         mov        rbx, rdi
0000000000005a5c         mov        r12, rdx
0000000000005a5f         sub        rsp, 0x18
0000000000005a63         mov        rax, qword [fs:0x28]
0000000000005a6c         mov        qword [rsp+0x38+var_30], rax
0000000000005a71         xor        eax, eax
0000000000005a73         lea        rax, qword [rsp+0x38+var_34]
0000000000005a78         test       rdi, rdi
0000000000005a7b         cmove      rbx, rax
0000000000005a7f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000005a82         call       j_mbrtowc                                   ; mbrtowc
0000000000005a87         cmp        rax, 0xfffffffffffffffd
0000000000005a8b         mov        rbp, rax
0000000000005a8e         jbe        loc_5ab0

0000000000005a90         test       r12, r12
0000000000005a93         je         loc_5ab0

0000000000005a95         xor        edi, edi
0000000000005a97         call       hard_locale                                 ; hard_locale
0000000000005a9c         test       al, al
0000000000005a9e         jne        loc_5ab0

0000000000005aa0         movzx      eax, byte [r13]
0000000000005aa5         mov        ebp, 0x1
0000000000005aaa         mov        dword [rbx], eax
0000000000005aac         nop        dword [rax]

                     loc_5ab0:
0000000000005ab0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000005ab5         xor        rdx, qword [fs:0x28]
0000000000005abe         mov        rax, rbp
0000000000005ac1         jne        loc_5ace

0000000000005ac3         add        rsp, 0x18
0000000000005ac7         pop        rbx
0000000000005ac8         pop        rbp
0000000000005ac9         pop        r12
0000000000005acb         pop        r13
0000000000005acd         ret
                        ; endp

                     loc_5ace:
0000000000005ace         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005ad3         align      32                                          ; End of unwind block (FDE at 0x7b54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000005ae0         push       r12                                         ; Begin of unwind block (FDE at 0x7b94), CODE XREF=close_stdout+13, close_stdout+51
0000000000005ae2         push       rbp
0000000000005ae3         mov        rbp, rdi
0000000000005ae6         push       rbx
0000000000005ae7         call       j___fpending                                ; __fpending
0000000000005aec         mov        ebx, dword [rbp]
0000000000005aef         mov        rdi, rbp
0000000000005af2         mov        r12, rax
0000000000005af5         call       rpl_fclose                                  ; rpl_fclose
0000000000005afa         and        ebx, 0x20
0000000000005afd         test       ebx, ebx
0000000000005aff         jne        loc_5b18

0000000000005b01         test       eax, eax
0000000000005b03         je         loc_5b0f

0000000000005b05         test       r12, r12
0000000000005b08         mov        eax, 0xffffffff
0000000000005b0d         je         loc_5b48

                     loc_5b0f:
0000000000005b0f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000005b10         pop        rbp
0000000000005b11         pop        r12
0000000000005b13         ret
                        ; endp
0000000000005b14         align      8

                     loc_5b18:
0000000000005b18         test       eax, eax                                    ; CODE XREF=close_stream+31
0000000000005b1a         jne        loc_5b38

0000000000005b1c         call       j___errno_location                          ; __errno_location
0000000000005b21         mov        dword [rax], 0x0
0000000000005b27         mov        eax, 0xffffffff
0000000000005b2c         pop        rbx
0000000000005b2d         pop        rbp
0000000000005b2e         pop        r12
0000000000005b30         ret
                        ; endp
0000000000005b31         align      8

                     loc_5b38:
0000000000005b38         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000005b39         mov        eax, 0xffffffff
0000000000005b3e         pop        rbp
0000000000005b3f         pop        r12
0000000000005b41         ret
                        ; endp
0000000000005b42         align      8

                     loc_5b48:
0000000000005b48         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
0000000000005b4d         cmp        dword [rax], 0x9
0000000000005b50         pop        rbx
0000000000005b51         pop        rbp
0000000000005b52         pop        r12
0000000000005b54         setne      al
0000000000005b57         movzx      eax, al
0000000000005b5a         neg        eax
0000000000005b5c         ret
                        ; endp
0000000000005b5d         align      32                                          ; End of unwind block (FDE at 0x7b94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000005b60         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x7be4), CODE XREF=rpl_mbrtowc+71
0000000000005b64         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000005b66         call       j_setlocale                                 ; setlocale
0000000000005b6b         mov        rdx, rax
0000000000005b6e         mov        eax, 0x1
0000000000005b73         test       rdx, rdx
0000000000005b76         je         loc_5b95

0000000000005b78         lea        rdi, qword [__PRETTY_FUNCTION__.4162+11]    ; 0x6d2b
0000000000005b7f         mov        ecx, 0x2
0000000000005b84         mov        rsi, rdx
0000000000005b87         rep  cmpsb byte [rsi], byte [rdi]
0000000000005b89         seta       cl
0000000000005b8c         sbb        cl, 0x0
0000000000005b8f         xor        eax, eax
0000000000005b91         test       cl, cl
0000000000005b93         jne        loc_5ba0

                     loc_5b95:
0000000000005b95         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000005b99         ret
                        ; endp
0000000000005b9a         align      32

                     loc_5ba0:
0000000000005ba0         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000005ba7         mov        ecx, 0x6
0000000000005bac         mov        rsi, rdx
0000000000005baf         rep  cmpsb byte [rsi], byte [rdi]
0000000000005bb1         seta       al
0000000000005bb4         sbb        al, 0x0
0000000000005bb6         test       al, al
0000000000005bb8         setne      al
0000000000005bbb         add        rsp, 0x8
0000000000005bbf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000005bc0         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x7be4), Begin of unwind block (FDE at 0x7c04), CODE XREF=gettext_quote.part.1+11
0000000000005bc4         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000005bc9         call       j_nl_langinfo                               ; nl_langinfo
0000000000005bce         test       rax, rax
0000000000005bd1         je         loc_5bf0

0000000000005bd3         cmp        byte [rax], 0x0
0000000000005bd6         lea        rdx, qword [aAscii]                         ; "ASCII"
0000000000005bdd         cmove      rax, rdx
0000000000005be1         add        rsp, 0x8
0000000000005be5         ret
                        ; endp
0000000000005be6         align      16

                     loc_5bf0:
0000000000005bf0         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000005bf7         add        rsp, 0x8
0000000000005bfb         ret
                        ; endp
0000000000005bfc         align      1024                                        ; End of unwind block (FDE at 0x7c04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000005c00         push       r15                                         ; Begin of unwind block (FDE at 0x7c24), DATA XREF=_start+22
0000000000005c02         push       r14
0000000000005c04         mov        r15, rdx
0000000000005c07         push       r13
0000000000005c09         push       r12
0000000000005c0b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000005c12         push       rbp
0000000000005c13         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
0000000000005c1a         push       rbx
0000000000005c1b         mov        r13d, edi
0000000000005c1e         mov        r14, rsi
0000000000005c21         sub        rbp, r12
0000000000005c24         sub        rsp, 0x8
0000000000005c28         sar        rbp, 0x3
0000000000005c2c         call       _init                                       ; _init
0000000000005c31         test       rbp, rbp
0000000000005c34         je         loc_5c56

0000000000005c36         xor        ebx, ebx
0000000000005c38         nop        dword [rax+rax]

                     loc_5c40:
0000000000005c40         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000005c43         mov        rsi, r14
0000000000005c46         mov        edi, r13d
0000000000005c49         call       qword [r12+rbx*8]
0000000000005c4d         add        rbx, 0x1
0000000000005c51         cmp        rbp, rbx
0000000000005c54         jne        loc_5c40

                     loc_5c56:
0000000000005c56         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
0000000000005c5a         pop        rbx
0000000000005c5b         pop        rbp
0000000000005c5c         pop        r12
0000000000005c5e         pop        r13
0000000000005c60         pop        r14
0000000000005c62         pop        r15
0000000000005c64         ret
                        ; endp
0000000000005c65         align      16                                          ; End of unwind block (FDE at 0x7c24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000005c70         ret                                                    ; Begin of unwind block (FDE at 0x7c6c), DATA XREF=_start+15
                        ; endp
0000000000005c72         align      128                                         ; End of unwind block (FDE at 0x7c6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000005c80         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x7c84), __dso_handle, CODE XREF=main+106
0000000000005c87         xor        esi, esi
0000000000005c89         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
0000000000005c8e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x7c84)
0000000000005c8f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x5c90; 0x5c99[ (9 bytes)
        ; File offset : [23696; 23705[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000005c90         sub        rsp, 0x8
0000000000005c94         add        rsp, 0x8
0000000000005c98         ret
                        ; endp
0000000000005c99         db  0x00 ; '.'
0000000000005c9a         db  0x00 ; '.'
0000000000005c9b         db  0x00 ; '.'
0000000000005c9c         db  0x00 ; '.'
0000000000005c9d         db  0x00 ; '.'
0000000000005c9e         db  0x00 ; '.'
0000000000005c9f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x5ca0; 0x6d39[ (4249 bytes)
        ; File offset : [23712; 27961[ (4249 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000005ca0         db  0x01 ; '.'
0000000000005ca1         db  0x00 ; '.'
0000000000005ca2         db  0x02 ; '.'
0000000000005ca3         db  0x00 ; '.'
                     aBase32:
0000000000005ca4         db         "base32", 0                                 ; DATA XREF=main+311, usage+344, usage+375, usage+700, usage+884, usage+903, usage+937
                     aUsageSOptionFi:
0000000000005cab         db         "Usage: %s [OPTION]... [FILE]\n", 0         ; DATA XREF=usage+93
0000000000005cc9         db  0x5b ; '['                                         ; DATA XREF=usage+400
0000000000005cca         db  0x00 ; '.'
                     aTestInvocation:
0000000000005ccb         db         "test invocation", 0                        ; DATA XREF=usage+439
                     aMulticallInvoc:
0000000000005cdb         db         "Multi-call invocation", 0                  ; DATA XREF=usage+487
                     aSha224sum:
0000000000005cf1         db         "sha224sum", 0                              ; DATA XREF=usage+504
                     aSha2Utilities:
0000000000005cfb         db         "sha2 utilities", 0                         ; DATA XREF=usage+516
                     aSha256sum:
0000000000005d0a         db         "sha256sum", 0                              ; DATA XREF=usage+407
                     aSha384sum:
0000000000005d14         db         "sha384sum", 0                              ; DATA XREF=usage+451
                     aSha512sum:
0000000000005d1e         db         "sha512sum", 0                              ; DATA XREF=usage+475
                     aNsOnlineHelpSn:
0000000000005d28         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+586
0000000000005d3f         db  0x47 ; 'G'                                         ; DATA XREF=main+304, usage+614, usage+807, emit_bug_reporting_address+68
0000000000005d40         db  0x4e ; 'N'
0000000000005d41         db  0x55 ; 'U'
0000000000005d42         db  0x20 ; ' '
                     aCoreutils:
0000000000005d43         db         "coreutils", 0                              ; DATA XREF=main+75, main+87, usage+463
0000000000005d4d         db  0x65 ; 'e'                                         ; DATA XREF=usage+653, usage+846
0000000000005d4e         db  0x6e ; 'n'
0000000000005d4f         db  0x5f ; '_'
0000000000005d50         db  0x00 ; '.'
                     aFullDocumentat:
0000000000005d51         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+681, usage+870
                     aUsrlocalsharel:
0000000000005d6c         db         "/usr/local/share/locale", 0                ; DATA XREF=main+68
                     aInvalidWrapSiz:
0000000000005d84         db         "invalid wrap size", 0                      ; DATA XREF=main+174
                     aSimonJosefsson:
0000000000005d96         db         "Simon Josefsson", 0                        ; DATA XREF=main+297
0000000000005da6         db  0x64 ; 'd'                                         ; DATA XREF=main+123
0000000000005da7         db  0x69 ; 'i'
0000000000005da8         db  0x77 ; 'w'
0000000000005da9         db  0x3a ; ':'
0000000000005daa         db  0x00 ; '.'
                     aExtraOperandS:
0000000000005dab         db         "extra operand %s", 0                       ; DATA XREF=main+1926
0000000000005dbc         db  0x72 ; 'r'                                         ; DATA XREF=main+394
0000000000005dbd         db  0x62 ; 'b'
0000000000005dbe         db  0x00 ; '.'
                     aReadError:
0000000000005dbf         db         "read error", 0                             ; DATA XREF=main+1187, main+1809
                     aWriteError:
0000000000005dca         db         "write error", 0                            ; DATA XREF=main+1511, main+1577, main+1765, main+1858, main+1997, close_stdout+67
                     aInvalidInput:
0000000000005dd6         db         "invalid input", 0                          ; DATA XREF=main+1729
                     aClosingStandar:
0000000000005de4         db         "closing standard input", 0                 ; DATA XREF=main+1652
                     aDecode:
0000000000005dfb         db         "decode", 0
                     aWrap:
0000000000005e02         db         "wrap", 0
                     aIgnoregarbage:
0000000000005e07         db         "ignore-garbage", 0
                     aHelp:
0000000000005e16         db         "help", 0
                     aVersion:
0000000000005e1b         db         "version", 0
0000000000005e23         align      8
                     aTrySHelpForMor:
0000000000005e28         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000005e4f         align      16
                     aBasedEncodeOrD:
0000000000005e50         db         "Base%d encode or decode FILE, or standard input, to standard output.\n", 0 ; DATA XREF=usage+125
0000000000005e96         align      8
                     aNwithNoFileOrW:
0000000000005e98         db         "\nWith no FILE, or when FILE is -, read standard input.\n", 0 ; DATA XREF=usage+171
                     aNmandatoryArgu:
0000000000005ed0         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+208
0000000000005f1b         align      32
                     aDDecodeDecodeD:
0000000000005f20         db         "  -d, --decode          decode data\n  -i, --ignore-garbage  when decoding, ignore non-alphabet characters\n  -w, --wrap=COLS       wrap encoded lines after COLS character (default 76).\n                          Use 0 to disable line wrapping\n\n", 0 ; DATA XREF=usage+245
0000000000006013         align      8
                     aHelpDisplayThi:
0000000000006018         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+282
0000000000006045         align      8
                     aVersionOutputV:
0000000000006048         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+319
000000000000607e         align      128
                     aNtheDataAreEnc:
0000000000006080         db         "\nThe data are encoded as described for the %s alphabet in RFC 4648.\nWhen decoding, the input may contain newlines in addition to the bytes of\nthe formal %s alphabet.  Use --ignore-garbage to attempt to recover\nfrom any other non-alphabet bytes in the encod" ; DATA XREF=usage+356
0000000000006180         db         "ed stream.\n", 0
000000000000618c         align      16
                     aHttpswwwgnuorg:
0000000000006190         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+607, usage+707, usage+800, usage+910, emit_bug_reporting_address+61
                     aReportAnyTrans:
00000000000061b8         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+951
00000000000061ff         align      512
                     aOrAvailableLoc:
0000000000006200         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+750
                     a831:
0000000000006233         db         "8.31", 0                                   ; DATA XREF=Version
0000000000006238         db  0x00 ; '.'
0000000000006239         db  0x00 ; '.'
000000000000623a         db  0x00 ; '.'
000000000000623b         db  0x00 ; '.'
000000000000623c         db  0x00 ; '.'
000000000000623d         db  0x00 ; '.'
000000000000623e         db  0x00 ; '.'
000000000000623f         db  0x00 ; '.'
                     b32str.3066:
0000000000006240         db  0x41 ; 'A'                                         ; DATA XREF=base32_encode
0000000000006241         db  0x42 ; 'B'
0000000000006242         db  0x43 ; 'C'
0000000000006243         db  0x44 ; 'D'
0000000000006244         db  0x45 ; 'E'
0000000000006245         db  0x46 ; 'F'
0000000000006246         db  0x47 ; 'G'
0000000000006247         db  0x48 ; 'H'
0000000000006248         db  0x49 ; 'I'
0000000000006249         db  0x4a ; 'J'
000000000000624a         db  0x4b ; 'K'
000000000000624b         db  0x4c ; 'L'
000000000000624c         db  0x4d ; 'M'
000000000000624d         db  0x4e ; 'N'
000000000000624e         db  0x4f ; 'O'
000000000000624f         db  0x50 ; 'P'
0000000000006250         db  0x51 ; 'Q'
0000000000006251         db  0x52 ; 'R'
0000000000006252         db  0x53 ; 'S'
0000000000006253         db  0x54 ; 'T'
0000000000006254         db  0x55 ; 'U'
0000000000006255         db  0x56 ; 'V'
0000000000006256         db  0x57 ; 'W'
0000000000006257         db  0x58 ; 'X'
0000000000006258         db  0x59 ; 'Y'
0000000000006259         db  0x5a ; 'Z'
000000000000625a         db  0x32 ; '2'
000000000000625b         db  0x33 ; '3'
000000000000625c         db  0x34 ; '4'
000000000000625d         db  0x35 ; '5'
000000000000625e         db  0x36 ; '6'
000000000000625f         db  0x37 ; '7'
                     b32:
0000000000006260         db  0xff ; '.'                                         ; DATA XREF=decode_8+16, isbase32
0000000000006261         db  0xff ; '.'
0000000000006262         db  0xff ; '.'
0000000000006263         db  0xff ; '.'
0000000000006264         db  0xff ; '.'
0000000000006265         db  0xff ; '.'
0000000000006266         db  0xff ; '.'
0000000000006267         db  0xff ; '.'
0000000000006268         db  0xff ; '.'
0000000000006269         db  0xff ; '.'
000000000000626a         db  0xff ; '.'
000000000000626b         db  0xff ; '.'
000000000000626c         db  0xff ; '.'
000000000000626d         db  0xff ; '.'
000000000000626e         db  0xff ; '.'
000000000000626f         db  0xff ; '.'
0000000000006270         db  0xff ; '.'
0000000000006271         db  0xff ; '.'
0000000000006272         db  0xff ; '.'
0000000000006273         db  0xff ; '.'
0000000000006274         db  0xff ; '.'
0000000000006275         db  0xff ; '.'
0000000000006276         db  0xff ; '.'
0000000000006277         db  0xff ; '.'
0000000000006278         db  0xff ; '.'
0000000000006279         db  0xff ; '.'
000000000000627a         db  0xff ; '.'
000000000000627b         db  0xff ; '.'
000000000000627c         db  0xff ; '.'
000000000000627d         db  0xff ; '.'
000000000000627e         db  0xff ; '.'
000000000000627f         db  0xff ; '.'
0000000000006280         db  0xff ; '.'
0000000000006281         db  0xff ; '.'
0000000000006282         db  0xff ; '.'
0000000000006283         db  0xff ; '.'
0000000000006284         db  0xff ; '.'
0000000000006285         db  0xff ; '.'
0000000000006286         db  0xff ; '.'
0000000000006287         db  0xff ; '.'
0000000000006288         db  0xff ; '.'
0000000000006289         db  0xff ; '.'
000000000000628a         db  0xff ; '.'
000000000000628b         db  0xff ; '.'
000000000000628c         db  0xff ; '.'
000000000000628d         db  0xff ; '.'
000000000000628e         db  0xff ; '.'
000000000000628f         db  0xff ; '.'
0000000000006290         db  0xff ; '.'
0000000000006291         db  0xff ; '.'
0000000000006292         db  0x1a ; '.'
0000000000006293         db  0x1b ; '.'
0000000000006294         db  0x1c ; '.'
0000000000006295         db  0x1d ; '.'
0000000000006296         db  0x1e ; '.'
0000000000006297         db  0x1f ; '.'
0000000000006298         db  0xff ; '.'
0000000000006299         db  0xff ; '.'
000000000000629a         db  0xff ; '.'
000000000000629b         db  0xff ; '.'
000000000000629c         db  0xff ; '.'
000000000000629d         db  0xff ; '.'
000000000000629e         db  0xff ; '.'
000000000000629f         db  0xff ; '.'
00000000000062a0         db  0xff ; '.'
00000000000062a1         db  0x00 ; '.'
00000000000062a2         db  0x01 ; '.'
00000000000062a3         db  0x02 ; '.'
00000000000062a4         db  0x03 ; '.'
00000000000062a5         db  0x04 ; '.'
00000000000062a6         db  0x05 ; '.'
00000000000062a7         db  0x06 ; '.'
00000000000062a8         db  0x07 ; '.'
00000000000062a9         db  0x08 ; '.'
00000000000062aa         db  0x09 ; '.'
00000000000062ab         db  0x0a ; '.'
00000000000062ac         db  0x0b ; '.'
00000000000062ad         db  0x0c ; '.'
00000000000062ae         db  0x0d ; '.'
00000000000062af         db  0x0e ; '.'
00000000000062b0         db  0x0f ; '.'
00000000000062b1         db  0x10 ; '.'
00000000000062b2         db  0x11 ; '.'
00000000000062b3         db  0x12 ; '.'
00000000000062b4         db  0x13 ; '.'
00000000000062b5         db  0x14 ; '.'
00000000000062b6         db  0x15 ; '.'
00000000000062b7         db  0x16 ; '.'
00000000000062b8         db  0x17 ; '.'
00000000000062b9         db  0x18 ; '.'
00000000000062ba         db  0x19 ; '.'
00000000000062bb         db  0xff ; '.'
00000000000062bc         db  0xff ; '.'
00000000000062bd         db  0xff ; '.'
00000000000062be         db  0xff ; '.'
00000000000062bf         db  0xff ; '.'
00000000000062c0         db  0xff ; '.'
00000000000062c1         db  0xff ; '.'
00000000000062c2         db  0xff ; '.'
00000000000062c3         db  0xff ; '.'
00000000000062c4         db  0xff ; '.'
00000000000062c5         db  0xff ; '.'
00000000000062c6         db  0xff ; '.'
00000000000062c7         db  0xff ; '.'
00000000000062c8         db  0xff ; '.'
00000000000062c9         db  0xff ; '.'
00000000000062ca         db  0xff ; '.'
00000000000062cb         db  0xff ; '.'
00000000000062cc         db  0xff ; '.'
00000000000062cd         db  0xff ; '.'
00000000000062ce         db  0xff ; '.'
00000000000062cf         db  0xff ; '.'
00000000000062d0         db  0xff ; '.'
00000000000062d1         db  0xff ; '.'
00000000000062d2         db  0xff ; '.'
00000000000062d3         db  0xff ; '.'
00000000000062d4         db  0xff ; '.'
00000000000062d5         db  0xff ; '.'
00000000000062d6         db  0xff ; '.'
00000000000062d7         db  0xff ; '.'
00000000000062d8         db  0xff ; '.'
00000000000062d9         db  0xff ; '.'
00000000000062da         db  0xff ; '.'
00000000000062db         db  0xff ; '.'
00000000000062dc         db  0xff ; '.'
00000000000062dd         db  0xff ; '.'
00000000000062de         db  0xff ; '.'
00000000000062df         db  0xff ; '.'
00000000000062e0         db  0xff ; '.'
00000000000062e1         db  0xff ; '.'
00000000000062e2         db  0xff ; '.'
00000000000062e3         db  0xff ; '.'
00000000000062e4         db  0xff ; '.'
00000000000062e5         db  0xff ; '.'
00000000000062e6         db  0xff ; '.'
00000000000062e7         db  0xff ; '.'
00000000000062e8         db  0xff ; '.'
00000000000062e9         db  0xff ; '.'
00000000000062ea         db  0xff ; '.'
00000000000062eb         db  0xff ; '.'
00000000000062ec         db  0xff ; '.'
00000000000062ed         db  0xff ; '.'
00000000000062ee         db  0xff ; '.'
00000000000062ef         db  0xff ; '.'
00000000000062f0         db  0xff ; '.'
00000000000062f1         db  0xff ; '.'
00000000000062f2         db  0xff ; '.'
00000000000062f3         db  0xff ; '.'
00000000000062f4         db  0xff ; '.'
00000000000062f5         db  0xff ; '.'
00000000000062f6         db  0xff ; '.'
00000000000062f7         db  0xff ; '.'
00000000000062f8         db  0xff ; '.'
00000000000062f9         db  0xff ; '.'
00000000000062fa         db  0xff ; '.'
00000000000062fb         db  0xff ; '.'
00000000000062fc         db  0xff ; '.'
00000000000062fd         db  0xff ; '.'
00000000000062fe         db  0xff ; '.'
00000000000062ff         db  0xff ; '.'
0000000000006300         db  0xff ; '.'
0000000000006301         db  0xff ; '.'
0000000000006302         db  0xff ; '.'
0000000000006303         db  0xff ; '.'
0000000000006304         db  0xff ; '.'
0000000000006305         db  0xff ; '.'
0000000000006306         db  0xff ; '.'
0000000000006307         db  0xff ; '.'
0000000000006308         db  0xff ; '.'
0000000000006309         db  0xff ; '.'
000000000000630a         db  0xff ; '.'
000000000000630b         db  0xff ; '.'
000000000000630c         db  0xff ; '.'
000000000000630d         db  0xff ; '.'
000000000000630e         db  0xff ; '.'
000000000000630f         db  0xff ; '.'
0000000000006310         db  0xff ; '.'
0000000000006311         db  0xff ; '.'
0000000000006312         db  0xff ; '.'
0000000000006313         db  0xff ; '.'
0000000000006314         db  0xff ; '.'
0000000000006315         db  0xff ; '.'
0000000000006316         db  0xff ; '.'
0000000000006317         db  0xff ; '.'
0000000000006318         db  0xff ; '.'
0000000000006319         db  0xff ; '.'
000000000000631a         db  0xff ; '.'
000000000000631b         db  0xff ; '.'
000000000000631c         db  0xff ; '.'
000000000000631d         db  0xff ; '.'
000000000000631e         db  0xff ; '.'
000000000000631f         db  0xff ; '.'
0000000000006320         db  0xff ; '.'
0000000000006321         db  0xff ; '.'
0000000000006322         db  0xff ; '.'
0000000000006323         db  0xff ; '.'
0000000000006324         db  0xff ; '.'
0000000000006325         db  0xff ; '.'
0000000000006326         db  0xff ; '.'
0000000000006327         db  0xff ; '.'
0000000000006328         db  0xff ; '.'
0000000000006329         db  0xff ; '.'
000000000000632a         db  0xff ; '.'
000000000000632b         db  0xff ; '.'
000000000000632c         db  0xff ; '.'
000000000000632d         db  0xff ; '.'
000000000000632e         db  0xff ; '.'
000000000000632f         db  0xff ; '.'
0000000000006330         db  0xff ; '.'
0000000000006331         db  0xff ; '.'
0000000000006332         db  0xff ; '.'
0000000000006333         db  0xff ; '.'
0000000000006334         db  0xff ; '.'
0000000000006335         db  0xff ; '.'
0000000000006336         db  0xff ; '.'
0000000000006337         db  0xff ; '.'
0000000000006338         db  0xff ; '.'
0000000000006339         db  0xff ; '.'
000000000000633a         db  0xff ; '.'
000000000000633b         db  0xff ; '.'
000000000000633c         db  0xff ; '.'
000000000000633d         db  0xff ; '.'
000000000000633e         db  0xff ; '.'
000000000000633f         db  0xff ; '.'
0000000000006340         db  0xff ; '.'
0000000000006341         db  0xff ; '.'
0000000000006342         db  0xff ; '.'
0000000000006343         db  0xff ; '.'
0000000000006344         db  0xff ; '.'
0000000000006345         db  0xff ; '.'
0000000000006346         db  0xff ; '.'
0000000000006347         db  0xff ; '.'
0000000000006348         db  0xff ; '.'
0000000000006349         db  0xff ; '.'
000000000000634a         db  0xff ; '.'
000000000000634b         db  0xff ; '.'
000000000000634c         db  0xff ; '.'
000000000000634d         db  0xff ; '.'
000000000000634e         db  0xff ; '.'
000000000000634f         db  0xff ; '.'
0000000000006350         db  0xff ; '.'
0000000000006351         db  0xff ; '.'
0000000000006352         db  0xff ; '.'
0000000000006353         db  0xff ; '.'
0000000000006354         db  0xff ; '.'
0000000000006355         db  0xff ; '.'
0000000000006356         db  0xff ; '.'
0000000000006357         db  0xff ; '.'
0000000000006358         db  0xff ; '.'
0000000000006359         db  0xff ; '.'
000000000000635a         db  0xff ; '.'
000000000000635b         db  0xff ; '.'
000000000000635c         db  0xff ; '.'
000000000000635d         db  0xff ; '.'
000000000000635e         db  0xff ; '.'
000000000000635f         db  0xff ; '.'
                     aSS:
0000000000006360         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108, xnumtoumax+125
0000000000006367         align      8
                     aANullArgv0WasP:
0000000000006368         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
00000000000063a0         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
00000000000063a8         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
00000000000063a9         db  0x74 ; 't'
00000000000063aa         db  0x2d ; '-'                                         ; DATA XREF=main+365, main+463, main+1626
00000000000063ab         db  0x00 ; '.'
00000000000063ac         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
00000000000063ad         db  0x80 ; '.'
00000000000063ae         db  0x98 ; '.'
00000000000063af         db  0x00 ; '.'
00000000000063b0         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
00000000000063b1         db  0x80 ; '.'
00000000000063b2         db  0x99 ; '.'
00000000000063b3         db  0x00 ; '.'
00000000000063b4         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
00000000000063b5         db  0x07 ; '.'
00000000000063b6         db  0x65 ; 'e'
00000000000063b7         db  0x00 ; '.'
00000000000063b8         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
00000000000063b9         db  0xaf ; '.'
00000000000063ba         db  0x00 ; '.'
00000000000063bb         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_36d0+1451, sub_36d0+1493, sub_36d0+2429
00000000000063bc         db  0x00 ; '.'
00000000000063bd         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_36d0+132, sub_36d0+1338, sub_36d0+1670, sub_36d0+1697, sub_36d0+2352
00000000000063be         db  0x00 ; '.'
00000000000063bf         db  0x60 ; '`'                                         ; DATA XREF=sub_36d0+1627, sub_36d0+1654
00000000000063c0         db  0x00 ; '.'
                     aLiteral:
00000000000063c1         db         "literal", 0
                     aShell:
00000000000063c9         db         "shell", 0
                     aShellalways:
00000000000063cf         db         "shell-always", 0
00000000000063dc         db  0x73 ; 's'
00000000000063dd         db  0x68 ; 'h'
00000000000063de         db  0x65 ; 'e'
00000000000063df         db  0x6c ; 'l'
00000000000063e0         db  0x6c ; 'l'
00000000000063e1         db  0x2d ; '-'
                     aEscape:
00000000000063e2         db         "escape", 0
                     aShellescapealw:
00000000000063e9         db         "shell-escape-always", 0
00000000000063fd         db  0x63 ; 'c'
00000000000063fe         db  0x00 ; '.'
00000000000063ff         db  0x63 ; 'c'
                     aMaybe:
0000000000006400         db         "-maybe", 0
                     aClocale:
0000000000006407         db         "clocale", 0
000000000000640f         align      32
                     switch_table_6420:        // switch_table
0000000000006420         dd         quotearg_buffer_restyled.loc_3dca-switch_table_6420, quotearg_buffer_restyled.loc_3023-switch_table_6420, quotearg_buffer_restyled.loc_3ff8-switch_table_6420, quotearg_buffer_restyled.loc_3e04-switch_table_6420 ; switch table used at 0x3021 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000006430         dd         quotearg_buffer_restyled.loc_3bf4-switch_table_6420, quotearg_buffer_restyled.loc_3c50-switch_table_6420, quotearg_buffer_restyled.loc_3ca5-switch_table_6420, quotearg_buffer_restyled.loc_3cea-switch_table_6420
0000000000006440         dd         3 dup (quotearg_buffer_restyled.loc_3d24-switch_table_6420)
000000000000644c         db  0x54 ; 'T'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000644d         db  0xcf ; '.'
000000000000644e         db  0xff ; '.'
000000000000644f         db  0xff ; '.'
0000000000006450         db  0x3c ; '<'
0000000000006451         db  0xd0 ; '.'
0000000000006452         db  0xff ; '.'
0000000000006453         db  0xff ; '.'
0000000000006454         db  0x3c ; '<'
0000000000006455         db  0xd0 ; '.'
0000000000006456         db  0xff ; '.'
0000000000006457         db  0xff ; '.'
0000000000006458         db  0x3c ; '<'
0000000000006459         db  0xd0 ; '.'
000000000000645a         db  0xff ; '.'
000000000000645b         db  0xff ; '.'
000000000000645c         db  0x3c ; '<'
000000000000645d         db  0xd0 ; '.'
000000000000645e         db  0xff ; '.'
000000000000645f         db  0xff ; '.'
0000000000006460         db  0x3c ; '<'
0000000000006461         db  0xd0 ; '.'
0000000000006462         db  0xff ; '.'
0000000000006463         db  0xff ; '.'
0000000000006464         db  0x3c ; '<'
0000000000006465         db  0xd0 ; '.'
0000000000006466         db  0xff ; '.'
0000000000006467         db  0xff ; '.'
0000000000006468         db  0x94 ; '.'
0000000000006469         db  0xcf ; '.'
000000000000646a         db  0xff ; '.'
000000000000646b         db  0xff ; '.'
000000000000646c         db  0x9c ; '.'
000000000000646d         db  0xce ; '.'
000000000000646e         db  0xff ; '.'
000000000000646f         db  0xff ; '.'
0000000000006470         db  0x5c ; '\'
0000000000006471         db  0xce ; '.'
0000000000006472         db  0xff ; '.'
0000000000006473         db  0xff ; '.'
0000000000006474         db  0x24 ; '$'
0000000000006475         db  0xd0 ; '.'
0000000000006476         db  0xff ; '.'
0000000000006477         db  0xff ; '.'
0000000000006478         db  0x14 ; '.'
0000000000006479         db  0xd0 ; '.'
000000000000647a         db  0xff ; '.'
000000000000647b         db  0xff ; '.'
000000000000647c         db  0x04 ; '.'
000000000000647d         db  0xd0 ; '.'
000000000000647e         db  0xff ; '.'
000000000000647f         db  0xff ; '.'
0000000000006480         db  0xf4 ; '.'
0000000000006481         db  0xcf ; '.'
0000000000006482         db  0xff ; '.'
0000000000006483         db  0xff ; '.'
0000000000006484         db  0x3c ; '<'
0000000000006485         db  0xd0 ; '.'
0000000000006486         db  0xff ; '.'
0000000000006487         db  0xff ; '.'
0000000000006488         db  0x3c ; '<'
0000000000006489         db  0xd0 ; '.'
000000000000648a         db  0xff ; '.'
000000000000648b         db  0xff ; '.'
000000000000648c         db  0x3c ; '<'
000000000000648d         db  0xd0 ; '.'
000000000000648e         db  0xff ; '.'
000000000000648f         db  0xff ; '.'
0000000000006490         db  0x3c ; '<'
0000000000006491         db  0xd0 ; '.'
0000000000006492         db  0xff ; '.'
0000000000006493         db  0xff ; '.'
0000000000006494         db  0x3c ; '<'
0000000000006495         db  0xd0 ; '.'
0000000000006496         db  0xff ; '.'
0000000000006497         db  0xff ; '.'
0000000000006498         db  0x3c ; '<'
0000000000006499         db  0xd0 ; '.'
000000000000649a         db  0xff ; '.'
000000000000649b         db  0xff ; '.'
000000000000649c         db  0x3c ; '<'
000000000000649d         db  0xd0 ; '.'
000000000000649e         db  0xff ; '.'
000000000000649f         db  0xff ; '.'
00000000000064a0         db  0x3c ; '<'
00000000000064a1         db  0xd0 ; '.'
00000000000064a2         db  0xff ; '.'
00000000000064a3         db  0xff ; '.'
00000000000064a4         db  0x3c ; '<'
00000000000064a5         db  0xd0 ; '.'
00000000000064a6         db  0xff ; '.'
00000000000064a7         db  0xff ; '.'
00000000000064a8         db  0x3c ; '<'
00000000000064a9         db  0xd0 ; '.'
00000000000064aa         db  0xff ; '.'
00000000000064ab         db  0xff ; '.'
00000000000064ac         db  0x3c ; '<'
00000000000064ad         db  0xd0 ; '.'
00000000000064ae         db  0xff ; '.'
00000000000064af         db  0xff ; '.'
00000000000064b0         db  0x3c ; '<'
00000000000064b1         db  0xd0 ; '.'
00000000000064b2         db  0xff ; '.'
00000000000064b3         db  0xff ; '.'
00000000000064b4         db  0x3c ; '<'
00000000000064b5         db  0xd0 ; '.'
00000000000064b6         db  0xff ; '.'
00000000000064b7         db  0xff ; '.'
00000000000064b8         db  0x3c ; '<'
00000000000064b9         db  0xd0 ; '.'
00000000000064ba         db  0xff ; '.'
00000000000064bb         db  0xff ; '.'
00000000000064bc         db  0x3c ; '<'
00000000000064bd         db  0xd0 ; '.'
00000000000064be         db  0xff ; '.'
00000000000064bf         db  0xff ; '.'
00000000000064c0         db  0x3c ; '<'
00000000000064c1         db  0xd0 ; '.'
00000000000064c2         db  0xff ; '.'
00000000000064c3         db  0xff ; '.'
00000000000064c4         db  0x3c ; '<'
00000000000064c5         db  0xd0 ; '.'
00000000000064c6         db  0xff ; '.'
00000000000064c7         db  0xff ; '.'
00000000000064c8         db  0x3c ; '<'
00000000000064c9         db  0xd0 ; '.'
00000000000064ca         db  0xff ; '.'
00000000000064cb         db  0xff ; '.'
00000000000064cc         db  0xe4 ; '.'
00000000000064cd         db  0xcf ; '.'
00000000000064ce         db  0xff ; '.'
00000000000064cf         db  0xff ; '.'
00000000000064d0         db  0xd4 ; '.'
00000000000064d1         db  0xcf ; '.'
00000000000064d2         db  0xff ; '.'
00000000000064d3         db  0xff ; '.'
00000000000064d4         db  0xd4 ; '.'
00000000000064d5         db  0xcf ; '.'
00000000000064d6         db  0xff ; '.'
00000000000064d7         db  0xff ; '.'
00000000000064d8         db  0xa4 ; '.'
00000000000064d9         db  0xcf ; '.'
00000000000064da         db  0xff ; '.'
00000000000064db         db  0xff ; '.'
00000000000064dc         db  0xd4 ; '.'
00000000000064dd         db  0xcf ; '.'
00000000000064de         db  0xff ; '.'
00000000000064df         db  0xff ; '.'
00000000000064e0         db  0x7c ; '|'
00000000000064e1         db  0xcf ; '.'
00000000000064e2         db  0xff ; '.'
00000000000064e3         db  0xff ; '.'
00000000000064e4         db  0xd4 ; '.'
00000000000064e5         db  0xcf ; '.'
00000000000064e6         db  0xff ; '.'
00000000000064e7         db  0xff ; '.'
00000000000064e8         db  0x37 ; '7'
00000000000064e9         db  0xce ; '.'
00000000000064ea         db  0xff ; '.'
00000000000064eb         db  0xff ; '.'
00000000000064ec         db  0xd4 ; '.'
00000000000064ed         db  0xcf ; '.'
00000000000064ee         db  0xff ; '.'
00000000000064ef         db  0xff ; '.'
00000000000064f0         db  0xd4 ; '.'
00000000000064f1         db  0xcf ; '.'
00000000000064f2         db  0xff ; '.'
00000000000064f3         db  0xff ; '.'
00000000000064f4         db  0xd4 ; '.'
00000000000064f5         db  0xcf ; '.'
00000000000064f6         db  0xff ; '.'
00000000000064f7         db  0xff ; '.'
00000000000064f8         db  0x7c ; '|'
00000000000064f9         db  0xcf ; '.'
00000000000064fa         db  0xff ; '.'
00000000000064fb         db  0xff ; '.'
00000000000064fc         db  0x7c ; '|'
00000000000064fd         db  0xcf ; '.'
00000000000064fe         db  0xff ; '.'
00000000000064ff         db  0xff ; '.'
0000000000006500         db  0x7c ; '|'
0000000000006501         db  0xcf ; '.'
0000000000006502         db  0xff ; '.'
0000000000006503         db  0xff ; '.'
0000000000006504         db  0x7c ; '|'
0000000000006505         db  0xcf ; '.'
0000000000006506         db  0xff ; '.'
0000000000006507         db  0xff ; '.'
0000000000006508         db  0x7c ; '|'
0000000000006509         db  0xcf ; '.'
000000000000650a         db  0xff ; '.'
000000000000650b         db  0xff ; '.'
000000000000650c         db  0x7c ; '|'
000000000000650d         db  0xcf ; '.'
000000000000650e         db  0xff ; '.'
000000000000650f         db  0xff ; '.'
0000000000006510         db  0x7c ; '|'
0000000000006511         db  0xcf ; '.'
0000000000006512         db  0xff ; '.'
0000000000006513         db  0xff ; '.'
0000000000006514         db  0x7c ; '|'
0000000000006515         db  0xcf ; '.'
0000000000006516         db  0xff ; '.'
0000000000006517         db  0xff ; '.'
0000000000006518         db  0x7c ; '|'
0000000000006519         db  0xcf ; '.'
000000000000651a         db  0xff ; '.'
000000000000651b         db  0xff ; '.'
000000000000651c         db  0x7c ; '|'
000000000000651d         db  0xcf ; '.'
000000000000651e         db  0xff ; '.'
000000000000651f         db  0xff ; '.'
0000000000006520         db  0x7c ; '|'
0000000000006521         db  0xcf ; '.'
0000000000006522         db  0xff ; '.'
0000000000006523         db  0xff ; '.'
0000000000006524         db  0x7c ; '|'
0000000000006525         db  0xcf ; '.'
0000000000006526         db  0xff ; '.'
0000000000006527         db  0xff ; '.'
0000000000006528         db  0x7c ; '|'
0000000000006529         db  0xcf ; '.'
000000000000652a         db  0xff ; '.'
000000000000652b         db  0xff ; '.'
000000000000652c         db  0x7c ; '|'
000000000000652d         db  0xcf ; '.'
000000000000652e         db  0xff ; '.'
000000000000652f         db  0xff ; '.'
0000000000006530         db  0x7c ; '|'
0000000000006531         db  0xcf ; '.'
0000000000006532         db  0xff ; '.'
0000000000006533         db  0xff ; '.'
0000000000006534         db  0x7c ; '|'
0000000000006535         db  0xcf ; '.'
0000000000006536         db  0xff ; '.'
0000000000006537         db  0xff ; '.'
0000000000006538         db  0xd4 ; '.'
0000000000006539         db  0xcf ; '.'
000000000000653a         db  0xff ; '.'
000000000000653b         db  0xff ; '.'
000000000000653c         db  0xd4 ; '.'
000000000000653d         db  0xcf ; '.'
000000000000653e         db  0xff ; '.'
000000000000653f         db  0xff ; '.'
0000000000006540         db  0xd4 ; '.'
0000000000006541         db  0xcf ; '.'
0000000000006542         db  0xff ; '.'
0000000000006543         db  0xff ; '.'
0000000000006544         db  0xd4 ; '.'
0000000000006545         db  0xcf ; '.'
0000000000006546         db  0xff ; '.'
0000000000006547         db  0xff ; '.'
0000000000006548         db  0x07 ; '.'
0000000000006549         db  0xce ; '.'
000000000000654a         db  0xff ; '.'
000000000000654b         db  0xff ; '.'
000000000000654c         db  0x3c ; '<'
000000000000654d         db  0xd0 ; '.'
000000000000654e         db  0xff ; '.'
000000000000654f         db  0xff ; '.'
0000000000006550         db  0x7c ; '|'
0000000000006551         db  0xcf ; '.'
0000000000006552         db  0xff ; '.'
0000000000006553         db  0xff ; '.'
0000000000006554         db  0x7c ; '|'
0000000000006555         db  0xcf ; '.'
0000000000006556         db  0xff ; '.'
0000000000006557         db  0xff ; '.'
0000000000006558         db  0x7c ; '|'
0000000000006559         db  0xcf ; '.'
000000000000655a         db  0xff ; '.'
000000000000655b         db  0xff ; '.'
000000000000655c         db  0x7c ; '|'
000000000000655d         db  0xcf ; '.'
000000000000655e         db  0xff ; '.'
000000000000655f         db  0xff ; '.'
0000000000006560         db  0x7c ; '|'
0000000000006561         db  0xcf ; '.'
0000000000006562         db  0xff ; '.'
0000000000006563         db  0xff ; '.'
0000000000006564         db  0x7c ; '|'
0000000000006565         db  0xcf ; '.'
0000000000006566         db  0xff ; '.'
0000000000006567         db  0xff ; '.'
0000000000006568         db  0x7c ; '|'
0000000000006569         db  0xcf ; '.'
000000000000656a         db  0xff ; '.'
000000000000656b         db  0xff ; '.'
000000000000656c         db  0x7c ; '|'
000000000000656d         db  0xcf ; '.'
000000000000656e         db  0xff ; '.'
000000000000656f         db  0xff ; '.'
0000000000006570         db  0x7c ; '|'
0000000000006571         db  0xcf ; '.'
0000000000006572         db  0xff ; '.'
0000000000006573         db  0xff ; '.'
0000000000006574         db  0x7c ; '|'
0000000000006575         db  0xcf ; '.'
0000000000006576         db  0xff ; '.'
0000000000006577         db  0xff ; '.'
0000000000006578         db  0x7c ; '|'
0000000000006579         db  0xcf ; '.'
000000000000657a         db  0xff ; '.'
000000000000657b         db  0xff ; '.'
000000000000657c         db  0x7c ; '|'
000000000000657d         db  0xcf ; '.'
000000000000657e         db  0xff ; '.'
000000000000657f         db  0xff ; '.'
0000000000006580         db  0x7c ; '|'
0000000000006581         db  0xcf ; '.'
0000000000006582         db  0xff ; '.'
0000000000006583         db  0xff ; '.'
0000000000006584         db  0x7c ; '|'
0000000000006585         db  0xcf ; '.'
0000000000006586         db  0xff ; '.'
0000000000006587         db  0xff ; '.'
0000000000006588         db  0x7c ; '|'
0000000000006589         db  0xcf ; '.'
000000000000658a         db  0xff ; '.'
000000000000658b         db  0xff ; '.'
000000000000658c         db  0x7c ; '|'
000000000000658d         db  0xcf ; '.'
000000000000658e         db  0xff ; '.'
000000000000658f         db  0xff ; '.'
0000000000006590         db  0x7c ; '|'
0000000000006591         db  0xcf ; '.'
0000000000006592         db  0xff ; '.'
0000000000006593         db  0xff ; '.'
0000000000006594         db  0x7c ; '|'
0000000000006595         db  0xcf ; '.'
0000000000006596         db  0xff ; '.'
0000000000006597         db  0xff ; '.'
0000000000006598         db  0x7c ; '|'
0000000000006599         db  0xcf ; '.'
000000000000659a         db  0xff ; '.'
000000000000659b         db  0xff ; '.'
000000000000659c         db  0x7c ; '|'
000000000000659d         db  0xcf ; '.'
000000000000659e         db  0xff ; '.'
000000000000659f         db  0xff ; '.'
00000000000065a0         db  0x7c ; '|'
00000000000065a1         db  0xcf ; '.'
00000000000065a2         db  0xff ; '.'
00000000000065a3         db  0xff ; '.'
00000000000065a4         db  0x7c ; '|'
00000000000065a5         db  0xcf ; '.'
00000000000065a6         db  0xff ; '.'
00000000000065a7         db  0xff ; '.'
00000000000065a8         db  0x7c ; '|'
00000000000065a9         db  0xcf ; '.'
00000000000065aa         db  0xff ; '.'
00000000000065ab         db  0xff ; '.'
00000000000065ac         db  0x7c ; '|'
00000000000065ad         db  0xcf ; '.'
00000000000065ae         db  0xff ; '.'
00000000000065af         db  0xff ; '.'
00000000000065b0         db  0x7c ; '|'
00000000000065b1         db  0xcf ; '.'
00000000000065b2         db  0xff ; '.'
00000000000065b3         db  0xff ; '.'
00000000000065b4         db  0x7c ; '|'
00000000000065b5         db  0xcf ; '.'
00000000000065b6         db  0xff ; '.'
00000000000065b7         db  0xff ; '.'
00000000000065b8         db  0xd4 ; '.'
00000000000065b9         db  0xcf ; '.'
00000000000065ba         db  0xff ; '.'
00000000000065bb         db  0xff ; '.'
00000000000065bc         db  0xac ; '.'
00000000000065bd         db  0xce ; '.'
00000000000065be         db  0xff ; '.'
00000000000065bf         db  0xff ; '.'
00000000000065c0         db  0x7c ; '|'
00000000000065c1         db  0xcf ; '.'
00000000000065c2         db  0xff ; '.'
00000000000065c3         db  0xff ; '.'
00000000000065c4         db  0xd4 ; '.'
00000000000065c5         db  0xcf ; '.'
00000000000065c6         db  0xff ; '.'
00000000000065c7         db  0xff ; '.'
00000000000065c8         db  0x7c ; '|'
00000000000065c9         db  0xcf ; '.'
00000000000065ca         db  0xff ; '.'
00000000000065cb         db  0xff ; '.'
00000000000065cc         db  0xd4 ; '.'
00000000000065cd         db  0xcf ; '.'
00000000000065ce         db  0xff ; '.'
00000000000065cf         db  0xff ; '.'
00000000000065d0         db  0x7c ; '|'
00000000000065d1         db  0xcf ; '.'
00000000000065d2         db  0xff ; '.'
00000000000065d3         db  0xff ; '.'
00000000000065d4         db  0x7c ; '|'
00000000000065d5         db  0xcf ; '.'
00000000000065d6         db  0xff ; '.'
00000000000065d7         db  0xff ; '.'
00000000000065d8         db  0x7c ; '|'
00000000000065d9         db  0xcf ; '.'
00000000000065da         db  0xff ; '.'
00000000000065db         db  0xff ; '.'
00000000000065dc         db  0x7c ; '|'
00000000000065dd         db  0xcf ; '.'
00000000000065de         db  0xff ; '.'
00000000000065df         db  0xff ; '.'
00000000000065e0         db  0x7c ; '|'
00000000000065e1         db  0xcf ; '.'
00000000000065e2         db  0xff ; '.'
00000000000065e3         db  0xff ; '.'
00000000000065e4         db  0x7c ; '|'
00000000000065e5         db  0xcf ; '.'
00000000000065e6         db  0xff ; '.'
00000000000065e7         db  0xff ; '.'
00000000000065e8         db  0x7c ; '|'
00000000000065e9         db  0xcf ; '.'
00000000000065ea         db  0xff ; '.'
00000000000065eb         db  0xff ; '.'
00000000000065ec         db  0x7c ; '|'
00000000000065ed         db  0xcf ; '.'
00000000000065ee         db  0xff ; '.'
00000000000065ef         db  0xff ; '.'
00000000000065f0         db  0x7c ; '|'
00000000000065f1         db  0xcf ; '.'
00000000000065f2         db  0xff ; '.'
00000000000065f3         db  0xff ; '.'
00000000000065f4         db  0x7c ; '|'
00000000000065f5         db  0xcf ; '.'
00000000000065f6         db  0xff ; '.'
00000000000065f7         db  0xff ; '.'
00000000000065f8         db  0x7c ; '|'
00000000000065f9         db  0xcf ; '.'
00000000000065fa         db  0xff ; '.'
00000000000065fb         db  0xff ; '.'
00000000000065fc         db  0x7c ; '|'
00000000000065fd         db  0xcf ; '.'
00000000000065fe         db  0xff ; '.'
00000000000065ff         db  0xff ; '.'
0000000000006600         db  0x7c ; '|'
0000000000006601         db  0xcf ; '.'
0000000000006602         db  0xff ; '.'
0000000000006603         db  0xff ; '.'
0000000000006604         db  0x7c ; '|'
0000000000006605         db  0xcf ; '.'
0000000000006606         db  0xff ; '.'
0000000000006607         db  0xff ; '.'
0000000000006608         db  0x7c ; '|'
0000000000006609         db  0xcf ; '.'
000000000000660a         db  0xff ; '.'
000000000000660b         db  0xff ; '.'
000000000000660c         db  0x7c ; '|'
000000000000660d         db  0xcf ; '.'
000000000000660e         db  0xff ; '.'
000000000000660f         db  0xff ; '.'
0000000000006610         db  0x7c ; '|'
0000000000006611         db  0xcf ; '.'
0000000000006612         db  0xff ; '.'
0000000000006613         db  0xff ; '.'
0000000000006614         db  0x7c ; '|'
0000000000006615         db  0xcf ; '.'
0000000000006616         db  0xff ; '.'
0000000000006617         db  0xff ; '.'
0000000000006618         db  0x7c ; '|'
0000000000006619         db  0xcf ; '.'
000000000000661a         db  0xff ; '.'
000000000000661b         db  0xff ; '.'
000000000000661c         db  0x7c ; '|'
000000000000661d         db  0xcf ; '.'
000000000000661e         db  0xff ; '.'
000000000000661f         db  0xff ; '.'
0000000000006620         db  0x7c ; '|'
0000000000006621         db  0xcf ; '.'
0000000000006622         db  0xff ; '.'
0000000000006623         db  0xff ; '.'
0000000000006624         db  0x7c ; '|'
0000000000006625         db  0xcf ; '.'
0000000000006626         db  0xff ; '.'
0000000000006627         db  0xff ; '.'
0000000000006628         db  0x7c ; '|'
0000000000006629         db  0xcf ; '.'
000000000000662a         db  0xff ; '.'
000000000000662b         db  0xff ; '.'
000000000000662c         db  0x7c ; '|'
000000000000662d         db  0xcf ; '.'
000000000000662e         db  0xff ; '.'
000000000000662f         db  0xff ; '.'
0000000000006630         db  0x7c ; '|'
0000000000006631         db  0xcf ; '.'
0000000000006632         db  0xff ; '.'
0000000000006633         db  0xff ; '.'
0000000000006634         db  0x7c ; '|'
0000000000006635         db  0xcf ; '.'
0000000000006636         db  0xff ; '.'
0000000000006637         db  0xff ; '.'
0000000000006638         db  0x37 ; '7'
0000000000006639         db  0xcd ; '.'
000000000000663a         db  0xff ; '.'
000000000000663b         db  0xff ; '.'
000000000000663c         db  0xd4 ; '.'
000000000000663d         db  0xcf ; '.'
000000000000663e         db  0xff ; '.'
000000000000663f         db  0xff ; '.'
0000000000006640         db  0x37 ; '7'
0000000000006641         db  0xcd ; '.'
0000000000006642         db  0xff ; '.'
0000000000006643         db  0xff ; '.'
0000000000006644         db  0xa4 ; '.'
0000000000006645         db  0xcf ; '.'
0000000000006646         db  0xff ; '.'
0000000000006647         db  0xff ; '.'
0000000000006648         db  0x28 ; '('                                         ; DATA XREF=sub_3470+137
0000000000006649         db  0xcf ; '.'
000000000000664a         db  0xff ; '.'
000000000000664b         db  0xff ; '.'
000000000000664c         db  0x38 ; '8'
000000000000664d         db  0xce ; '.'
000000000000664e         db  0xff ; '.'
000000000000664f         db  0xff ; '.'
0000000000006650         db  0x38 ; '8'
0000000000006651         db  0xce ; '.'
0000000000006652         db  0xff ; '.'
0000000000006653         db  0xff ; '.'
0000000000006654         db  0x38 ; '8'
0000000000006655         db  0xce ; '.'
0000000000006656         db  0xff ; '.'
0000000000006657         db  0xff ; '.'
0000000000006658         db  0x38 ; '8'
0000000000006659         db  0xce ; '.'
000000000000665a         db  0xff ; '.'
000000000000665b         db  0xff ; '.'
000000000000665c         db  0x38 ; '8'
000000000000665d         db  0xce ; '.'
000000000000665e         db  0xff ; '.'
000000000000665f         db  0xff ; '.'
0000000000006660         db  0x38 ; '8'
0000000000006661         db  0xce ; '.'
0000000000006662         db  0xff ; '.'
0000000000006663         db  0xff ; '.'
0000000000006664         db  0x18 ; '.'
0000000000006665         db  0xcf ; '.'
0000000000006666         db  0xff ; '.'
0000000000006667         db  0xff ; '.'
0000000000006668         db  0x68 ; 'h'
0000000000006669         db  0xd0 ; '.'
000000000000666a         db  0xff ; '.'
000000000000666b         db  0xff ; '.'
000000000000666c         db  0x50 ; 'P'
000000000000666d         db  0xd0 ; '.'
000000000000666e         db  0xff ; '.'
000000000000666f         db  0xff ; '.'
0000000000006670         db  0x00 ; '.'
0000000000006671         db  0xcf ; '.'
0000000000006672         db  0xff ; '.'
0000000000006673         db  0xff ; '.'
0000000000006674         db  0x40 ; '@'
0000000000006675         db  0xd0 ; '.'
0000000000006676         db  0xff ; '.'
0000000000006677         db  0xff ; '.'
0000000000006678         db  0xe8 ; '.'
0000000000006679         db  0xce ; '.'
000000000000667a         db  0xff ; '.'
000000000000667b         db  0xff ; '.'
000000000000667c         db  0x28 ; '('
000000000000667d         db  0xd0 ; '.'
000000000000667e         db  0xff ; '.'
000000000000667f         db  0xff ; '.'
0000000000006680         db  0x38 ; '8'
0000000000006681         db  0xce ; '.'
0000000000006682         db  0xff ; '.'
0000000000006683         db  0xff ; '.'
0000000000006684         db  0x38 ; '8'
0000000000006685         db  0xce ; '.'
0000000000006686         db  0xff ; '.'
0000000000006687         db  0xff ; '.'
0000000000006688         db  0x38 ; '8'
0000000000006689         db  0xce ; '.'
000000000000668a         db  0xff ; '.'
000000000000668b         db  0xff ; '.'
000000000000668c         db  0x38 ; '8'
000000000000668d         db  0xce ; '.'
000000000000668e         db  0xff ; '.'
000000000000668f         db  0xff ; '.'
0000000000006690         db  0x38 ; '8'
0000000000006691         db  0xce ; '.'
0000000000006692         db  0xff ; '.'
0000000000006693         db  0xff ; '.'
0000000000006694         db  0x38 ; '8'
0000000000006695         db  0xce ; '.'
0000000000006696         db  0xff ; '.'
0000000000006697         db  0xff ; '.'
0000000000006698         db  0x38 ; '8'
0000000000006699         db  0xce ; '.'
000000000000669a         db  0xff ; '.'
000000000000669b         db  0xff ; '.'
000000000000669c         db  0x38 ; '8'
000000000000669d         db  0xce ; '.'
000000000000669e         db  0xff ; '.'
000000000000669f         db  0xff ; '.'
00000000000066a0         db  0x38 ; '8'
00000000000066a1         db  0xce ; '.'
00000000000066a2         db  0xff ; '.'
00000000000066a3         db  0xff ; '.'
00000000000066a4         db  0x38 ; '8'
00000000000066a5         db  0xce ; '.'
00000000000066a6         db  0xff ; '.'
00000000000066a7         db  0xff ; '.'
00000000000066a8         db  0x38 ; '8'
00000000000066a9         db  0xce ; '.'
00000000000066aa         db  0xff ; '.'
00000000000066ab         db  0xff ; '.'
00000000000066ac         db  0x38 ; '8'
00000000000066ad         db  0xce ; '.'
00000000000066ae         db  0xff ; '.'
00000000000066af         db  0xff ; '.'
00000000000066b0         db  0x38 ; '8'
00000000000066b1         db  0xce ; '.'
00000000000066b2         db  0xff ; '.'
00000000000066b3         db  0xff ; '.'
00000000000066b4         db  0x38 ; '8'
00000000000066b5         db  0xce ; '.'
00000000000066b6         db  0xff ; '.'
00000000000066b7         db  0xff ; '.'
00000000000066b8         db  0x38 ; '8'
00000000000066b9         db  0xce ; '.'
00000000000066ba         db  0xff ; '.'
00000000000066bb         db  0xff ; '.'
00000000000066bc         db  0x38 ; '8'
00000000000066bd         db  0xce ; '.'
00000000000066be         db  0xff ; '.'
00000000000066bf         db  0xff ; '.'
00000000000066c0         db  0x38 ; '8'
00000000000066c1         db  0xce ; '.'
00000000000066c2         db  0xff ; '.'
00000000000066c3         db  0xff ; '.'
00000000000066c4         db  0x38 ; '8'
00000000000066c5         db  0xce ; '.'
00000000000066c6         db  0xff ; '.'
00000000000066c7         db  0xff ; '.'
00000000000066c8         db  0x10 ; '.'
00000000000066c9         db  0xd0 ; '.'
00000000000066ca         db  0xff ; '.'
00000000000066cb         db  0xff ; '.'
00000000000066cc         db  0xf8 ; '.'
00000000000066cd         db  0xcf ; '.'
00000000000066ce         db  0xff ; '.'
00000000000066cf         db  0xff ; '.'
00000000000066d0         db  0xf8 ; '.'
00000000000066d1         db  0xcf ; '.'
00000000000066d2         db  0xff ; '.'
00000000000066d3         db  0xff ; '.'
00000000000066d4         db  0xe0 ; '.'
00000000000066d5         db  0xcf ; '.'
00000000000066d6         db  0xff ; '.'
00000000000066d7         db  0xff ; '.'
00000000000066d8         db  0xf8 ; '.'
00000000000066d9         db  0xcf ; '.'
00000000000066da         db  0xff ; '.'
00000000000066db         db  0xff ; '.'
00000000000066dc         db  0xc8 ; '.'
00000000000066dd         db  0xcf ; '.'
00000000000066de         db  0xff ; '.'
00000000000066df         db  0xff ; '.'
00000000000066e0         db  0xf8 ; '.'
00000000000066e1         db  0xcf ; '.'
00000000000066e2         db  0xff ; '.'
00000000000066e3         db  0xff ; '.'
00000000000066e4         db  0x38 ; '8'
00000000000066e5         db  0xcc ; '.'
00000000000066e6         db  0xff ; '.'
00000000000066e7         db  0xff ; '.'
00000000000066e8         db  0xf8 ; '.'
00000000000066e9         db  0xcf ; '.'
00000000000066ea         db  0xff ; '.'
00000000000066eb         db  0xff ; '.'
00000000000066ec         db  0xf8 ; '.'
00000000000066ed         db  0xcf ; '.'
00000000000066ee         db  0xff ; '.'
00000000000066ef         db  0xff ; '.'
00000000000066f0         db  0xf8 ; '.'
00000000000066f1         db  0xcf ; '.'
00000000000066f2         db  0xff ; '.'
00000000000066f3         db  0xff ; '.'
00000000000066f4         db  0xc8 ; '.'
00000000000066f5         db  0xcf ; '.'
00000000000066f6         db  0xff ; '.'
00000000000066f7         db  0xff ; '.'
00000000000066f8         db  0xc8 ; '.'
00000000000066f9         db  0xcf ; '.'
00000000000066fa         db  0xff ; '.'
00000000000066fb         db  0xff ; '.'
00000000000066fc         db  0xc8 ; '.'
00000000000066fd         db  0xcf ; '.'
00000000000066fe         db  0xff ; '.'
00000000000066ff         db  0xff ; '.'
0000000000006700         db  0xc8 ; '.'
0000000000006701         db  0xcf ; '.'
0000000000006702         db  0xff ; '.'
0000000000006703         db  0xff ; '.'
0000000000006704         db  0xc8 ; '.'
0000000000006705         db  0xcf ; '.'
0000000000006706         db  0xff ; '.'
0000000000006707         db  0xff ; '.'
0000000000006708         db  0xc8 ; '.'
0000000000006709         db  0xcf ; '.'
000000000000670a         db  0xff ; '.'
000000000000670b         db  0xff ; '.'
000000000000670c         db  0xc8 ; '.'
000000000000670d         db  0xcf ; '.'
000000000000670e         db  0xff ; '.'
000000000000670f         db  0xff ; '.'
0000000000006710         db  0xc8 ; '.'
0000000000006711         db  0xcf ; '.'
0000000000006712         db  0xff ; '.'
0000000000006713         db  0xff ; '.'
0000000000006714         db  0xc8 ; '.'
0000000000006715         db  0xcf ; '.'
0000000000006716         db  0xff ; '.'
0000000000006717         db  0xff ; '.'
0000000000006718         db  0xc8 ; '.'
0000000000006719         db  0xcf ; '.'
000000000000671a         db  0xff ; '.'
000000000000671b         db  0xff ; '.'
000000000000671c         db  0xc8 ; '.'
000000000000671d         db  0xcf ; '.'
000000000000671e         db  0xff ; '.'
000000000000671f         db  0xff ; '.'
0000000000006720         db  0xc8 ; '.'
0000000000006721         db  0xcf ; '.'
0000000000006722         db  0xff ; '.'
0000000000006723         db  0xff ; '.'
0000000000006724         db  0xc8 ; '.'
0000000000006725         db  0xcf ; '.'
0000000000006726         db  0xff ; '.'
0000000000006727         db  0xff ; '.'
0000000000006728         db  0xc8 ; '.'
0000000000006729         db  0xcf ; '.'
000000000000672a         db  0xff ; '.'
000000000000672b         db  0xff ; '.'
000000000000672c         db  0xc8 ; '.'
000000000000672d         db  0xcf ; '.'
000000000000672e         db  0xff ; '.'
000000000000672f         db  0xff ; '.'
0000000000006730         db  0xc8 ; '.'
0000000000006731         db  0xcf ; '.'
0000000000006732         db  0xff ; '.'
0000000000006733         db  0xff ; '.'
0000000000006734         db  0xf8 ; '.'
0000000000006735         db  0xcf ; '.'
0000000000006736         db  0xff ; '.'
0000000000006737         db  0xff ; '.'
0000000000006738         db  0xf8 ; '.'
0000000000006739         db  0xcf ; '.'
000000000000673a         db  0xff ; '.'
000000000000673b         db  0xff ; '.'
000000000000673c         db  0xf8 ; '.'
000000000000673d         db  0xcf ; '.'
000000000000673e         db  0xff ; '.'
000000000000673f         db  0xff ; '.'
0000000000006740         db  0xf8 ; '.'
0000000000006741         db  0xcf ; '.'
0000000000006742         db  0xff ; '.'
0000000000006743         db  0xff ; '.'
0000000000006744         db  0x08 ; '.'
0000000000006745         db  0xcc ; '.'
0000000000006746         db  0xff ; '.'
0000000000006747         db  0xff ; '.'
0000000000006748         db  0x38 ; '8'
0000000000006749         db  0xce ; '.'
000000000000674a         db  0xff ; '.'
000000000000674b         db  0xff ; '.'
000000000000674c         db  0xc8 ; '.'
000000000000674d         db  0xcf ; '.'
000000000000674e         db  0xff ; '.'
000000000000674f         db  0xff ; '.'
0000000000006750         db  0xc8 ; '.'
0000000000006751         db  0xcf ; '.'
0000000000006752         db  0xff ; '.'
0000000000006753         db  0xff ; '.'
0000000000006754         db  0xc8 ; '.'
0000000000006755         db  0xcf ; '.'
0000000000006756         db  0xff ; '.'
0000000000006757         db  0xff ; '.'
0000000000006758         db  0xc8 ; '.'
0000000000006759         db  0xcf ; '.'
000000000000675a         db  0xff ; '.'
000000000000675b         db  0xff ; '.'
000000000000675c         db  0xc8 ; '.'
000000000000675d         db  0xcf ; '.'
000000000000675e         db  0xff ; '.'
000000000000675f         db  0xff ; '.'
0000000000006760         db  0xc8 ; '.'
0000000000006761         db  0xcf ; '.'
0000000000006762         db  0xff ; '.'
0000000000006763         db  0xff ; '.'
0000000000006764         db  0xc8 ; '.'
0000000000006765         db  0xcf ; '.'
0000000000006766         db  0xff ; '.'
0000000000006767         db  0xff ; '.'
0000000000006768         db  0xc8 ; '.'
0000000000006769         db  0xcf ; '.'
000000000000676a         db  0xff ; '.'
000000000000676b         db  0xff ; '.'
000000000000676c         db  0xc8 ; '.'
000000000000676d         db  0xcf ; '.'
000000000000676e         db  0xff ; '.'
000000000000676f         db  0xff ; '.'
0000000000006770         db  0xc8 ; '.'
0000000000006771         db  0xcf ; '.'
0000000000006772         db  0xff ; '.'
0000000000006773         db  0xff ; '.'
0000000000006774         db  0xc8 ; '.'
0000000000006775         db  0xcf ; '.'
0000000000006776         db  0xff ; '.'
0000000000006777         db  0xff ; '.'
0000000000006778         db  0xc8 ; '.'
0000000000006779         db  0xcf ; '.'
000000000000677a         db  0xff ; '.'
000000000000677b         db  0xff ; '.'
000000000000677c         db  0xc8 ; '.'
000000000000677d         db  0xcf ; '.'
000000000000677e         db  0xff ; '.'
000000000000677f         db  0xff ; '.'
0000000000006780         db  0xc8 ; '.'
0000000000006781         db  0xcf ; '.'
0000000000006782         db  0xff ; '.'
0000000000006783         db  0xff ; '.'
0000000000006784         db  0xc8 ; '.'
0000000000006785         db  0xcf ; '.'
0000000000006786         db  0xff ; '.'
0000000000006787         db  0xff ; '.'
0000000000006788         db  0xc8 ; '.'
0000000000006789         db  0xcf ; '.'
000000000000678a         db  0xff ; '.'
000000000000678b         db  0xff ; '.'
000000000000678c         db  0xc8 ; '.'
000000000000678d         db  0xcf ; '.'
000000000000678e         db  0xff ; '.'
000000000000678f         db  0xff ; '.'
0000000000006790         db  0xc8 ; '.'
0000000000006791         db  0xcf ; '.'
0000000000006792         db  0xff ; '.'
0000000000006793         db  0xff ; '.'
0000000000006794         db  0xc8 ; '.'
0000000000006795         db  0xcf ; '.'
0000000000006796         db  0xff ; '.'
0000000000006797         db  0xff ; '.'
0000000000006798         db  0xc8 ; '.'
0000000000006799         db  0xcf ; '.'
000000000000679a         db  0xff ; '.'
000000000000679b         db  0xff ; '.'
000000000000679c         db  0xc8 ; '.'
000000000000679d         db  0xcf ; '.'
000000000000679e         db  0xff ; '.'
000000000000679f         db  0xff ; '.'
00000000000067a0         db  0xc8 ; '.'
00000000000067a1         db  0xcf ; '.'
00000000000067a2         db  0xff ; '.'
00000000000067a3         db  0xff ; '.'
00000000000067a4         db  0xc8 ; '.'
00000000000067a5         db  0xcf ; '.'
00000000000067a6         db  0xff ; '.'
00000000000067a7         db  0xff ; '.'
00000000000067a8         db  0xc8 ; '.'
00000000000067a9         db  0xcf ; '.'
00000000000067aa         db  0xff ; '.'
00000000000067ab         db  0xff ; '.'
00000000000067ac         db  0xc8 ; '.'
00000000000067ad         db  0xcf ; '.'
00000000000067ae         db  0xff ; '.'
00000000000067af         db  0xff ; '.'
00000000000067b0         db  0xc8 ; '.'
00000000000067b1         db  0xcf ; '.'
00000000000067b2         db  0xff ; '.'
00000000000067b3         db  0xff ; '.'
00000000000067b4         db  0xf8 ; '.'
00000000000067b5         db  0xcf ; '.'
00000000000067b6         db  0xff ; '.'
00000000000067b7         db  0xff ; '.'
00000000000067b8         db  0xc8 ; '.'
00000000000067b9         db  0xce ; '.'
00000000000067ba         db  0xff ; '.'
00000000000067bb         db  0xff ; '.'
00000000000067bc         db  0xc8 ; '.'
00000000000067bd         db  0xcf ; '.'
00000000000067be         db  0xff ; '.'
00000000000067bf         db  0xff ; '.'
00000000000067c0         db  0xf8 ; '.'
00000000000067c1         db  0xcf ; '.'
00000000000067c2         db  0xff ; '.'
00000000000067c3         db  0xff ; '.'
00000000000067c4         db  0xc8 ; '.'
00000000000067c5         db  0xcf ; '.'
00000000000067c6         db  0xff ; '.'
00000000000067c7         db  0xff ; '.'
00000000000067c8         db  0xf8 ; '.'
00000000000067c9         db  0xcf ; '.'
00000000000067ca         db  0xff ; '.'
00000000000067cb         db  0xff ; '.'
00000000000067cc         db  0xc8 ; '.'
00000000000067cd         db  0xcf ; '.'
00000000000067ce         db  0xff ; '.'
00000000000067cf         db  0xff ; '.'
00000000000067d0         db  0xc8 ; '.'
00000000000067d1         db  0xcf ; '.'
00000000000067d2         db  0xff ; '.'
00000000000067d3         db  0xff ; '.'
00000000000067d4         db  0xc8 ; '.'
00000000000067d5         db  0xcf ; '.'
00000000000067d6         db  0xff ; '.'
00000000000067d7         db  0xff ; '.'
00000000000067d8         db  0xc8 ; '.'
00000000000067d9         db  0xcf ; '.'
00000000000067da         db  0xff ; '.'
00000000000067db         db  0xff ; '.'
00000000000067dc         db  0xc8 ; '.'
00000000000067dd         db  0xcf ; '.'
00000000000067de         db  0xff ; '.'
00000000000067df         db  0xff ; '.'
00000000000067e0         db  0xc8 ; '.'
00000000000067e1         db  0xcf ; '.'
00000000000067e2         db  0xff ; '.'
00000000000067e3         db  0xff ; '.'
00000000000067e4         db  0xc8 ; '.'
00000000000067e5         db  0xcf ; '.'
00000000000067e6         db  0xff ; '.'
00000000000067e7         db  0xff ; '.'
00000000000067e8         db  0xc8 ; '.'
00000000000067e9         db  0xcf ; '.'
00000000000067ea         db  0xff ; '.'
00000000000067eb         db  0xff ; '.'
00000000000067ec         db  0xc8 ; '.'
00000000000067ed         db  0xcf ; '.'
00000000000067ee         db  0xff ; '.'
00000000000067ef         db  0xff ; '.'
00000000000067f0         db  0xc8 ; '.'
00000000000067f1         db  0xcf ; '.'
00000000000067f2         db  0xff ; '.'
00000000000067f3         db  0xff ; '.'
00000000000067f4         db  0xc8 ; '.'
00000000000067f5         db  0xcf ; '.'
00000000000067f6         db  0xff ; '.'
00000000000067f7         db  0xff ; '.'
00000000000067f8         db  0xc8 ; '.'
00000000000067f9         db  0xcf ; '.'
00000000000067fa         db  0xff ; '.'
00000000000067fb         db  0xff ; '.'
00000000000067fc         db  0xc8 ; '.'
00000000000067fd         db  0xcf ; '.'
00000000000067fe         db  0xff ; '.'
00000000000067ff         db  0xff ; '.'
0000000000006800         db  0xc8 ; '.'
0000000000006801         db  0xcf ; '.'
0000000000006802         db  0xff ; '.'
0000000000006803         db  0xff ; '.'
0000000000006804         db  0xc8 ; '.'
0000000000006805         db  0xcf ; '.'
0000000000006806         db  0xff ; '.'
0000000000006807         db  0xff ; '.'
0000000000006808         db  0xc8 ; '.'
0000000000006809         db  0xcf ; '.'
000000000000680a         db  0xff ; '.'
000000000000680b         db  0xff ; '.'
000000000000680c         db  0xc8 ; '.'
000000000000680d         db  0xcf ; '.'
000000000000680e         db  0xff ; '.'
000000000000680f         db  0xff ; '.'
0000000000006810         db  0xc8 ; '.'
0000000000006811         db  0xcf ; '.'
0000000000006812         db  0xff ; '.'
0000000000006813         db  0xff ; '.'
0000000000006814         db  0xc8 ; '.'
0000000000006815         db  0xcf ; '.'
0000000000006816         db  0xff ; '.'
0000000000006817         db  0xff ; '.'
0000000000006818         db  0xc8 ; '.'
0000000000006819         db  0xcf ; '.'
000000000000681a         db  0xff ; '.'
000000000000681b         db  0xff ; '.'
000000000000681c         db  0xc8 ; '.'
000000000000681d         db  0xcf ; '.'
000000000000681e         db  0xff ; '.'
000000000000681f         db  0xff ; '.'
0000000000006820         db  0xc8 ; '.'
0000000000006821         db  0xcf ; '.'
0000000000006822         db  0xff ; '.'
0000000000006823         db  0xff ; '.'
0000000000006824         db  0xc8 ; '.'
0000000000006825         db  0xcf ; '.'
0000000000006826         db  0xff ; '.'
0000000000006827         db  0xff ; '.'
0000000000006828         db  0xc8 ; '.'
0000000000006829         db  0xcf ; '.'
000000000000682a         db  0xff ; '.'
000000000000682b         db  0xff ; '.'
000000000000682c         db  0xc8 ; '.'
000000000000682d         db  0xcf ; '.'
000000000000682e         db  0xff ; '.'
000000000000682f         db  0xff ; '.'
0000000000006830         db  0xc8 ; '.'
0000000000006831         db  0xcf ; '.'
0000000000006832         db  0xff ; '.'
0000000000006833         db  0xff ; '.'
0000000000006834         db  0x38 ; '8'
0000000000006835         db  0xcb ; '.'
0000000000006836         db  0xff ; '.'
0000000000006837         db  0xff ; '.'
0000000000006838         db  0xf8 ; '.'
0000000000006839         db  0xcf ; '.'
000000000000683a         db  0xff ; '.'
000000000000683b         db  0xff ; '.'
000000000000683c         db  0x38 ; '8'
000000000000683d         db  0xcb ; '.'
000000000000683e         db  0xff ; '.'
000000000000683f         db  0xff ; '.'
0000000000006840         db  0xe0 ; '.'
0000000000006841         db  0xcf ; '.'
0000000000006842         db  0xff ; '.'
0000000000006843         db  0xff ; '.'
0000000000006844         db  0x00 ; '.'
0000000000006845         db  0x00 ; '.'
0000000000006846         db  0x00 ; '.'
0000000000006847         db  0x00 ; '.'
0000000000006848         db  0x00 ; '.'
0000000000006849         db  0x00 ; '.'
000000000000684a         db  0x00 ; '.'
000000000000684b         db  0x00 ; '.'
000000000000684c         db  0x00 ; '.'
000000000000684d         db  0x00 ; '.'
000000000000684e         db  0x00 ; '.'
000000000000684f         db  0x00 ; '.'
0000000000006850         db  0x00 ; '.'
0000000000006851         db  0x00 ; '.'
0000000000006852         db  0x00 ; '.'
0000000000006853         db  0x00 ; '.'
0000000000006854         db  0x00 ; '.'
0000000000006855         db  0x00 ; '.'
0000000000006856         db  0x00 ; '.'
0000000000006857         db  0x00 ; '.'
0000000000006858         db  0x00 ; '.'
0000000000006859         db  0x00 ; '.'
000000000000685a         db  0x00 ; '.'
000000000000685b         db  0x00 ; '.'
000000000000685c         db  0x00 ; '.'
000000000000685d         db  0x00 ; '.'
000000000000685e         db  0x00 ; '.'
000000000000685f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000006860         db  0x00 ; '.'
0000000000006861         db  0x00 ; '.'
0000000000006862         db  0x00 ; '.'
0000000000006863         db  0x00 ; '.'
0000000000006864         db  0x01 ; '.'
0000000000006865         db  0x00 ; '.'
0000000000006866         db  0x00 ; '.'
0000000000006867         db  0x00 ; '.'
0000000000006868         db  0x02 ; '.'
0000000000006869         db  0x00 ; '.'
000000000000686a         db  0x00 ; '.'
000000000000686b         db  0x00 ; '.'
000000000000686c         db  0x03 ; '.'
000000000000686d         db  0x00 ; '.'
000000000000686e         db  0x00 ; '.'
000000000000686f         db  0x00 ; '.'
0000000000006870         db  0x04 ; '.'
0000000000006871         db  0x00 ; '.'
0000000000006872         db  0x00 ; '.'
0000000000006873         db  0x00 ; '.'
0000000000006874         db  0x05 ; '.'
0000000000006875         db  0x00 ; '.'
0000000000006876         db  0x00 ; '.'
0000000000006877         db  0x00 ; '.'
0000000000006878         db  0x06 ; '.'
0000000000006879         db  0x00 ; '.'
000000000000687a         db  0x00 ; '.'
000000000000687b         db  0x00 ; '.'
000000000000687c         db  0x07 ; '.'
000000000000687d         db  0x00 ; '.'
000000000000687e         db  0x00 ; '.'
000000000000687f         db  0x00 ; '.'
0000000000006880         db  0x08 ; '.'
0000000000006881         db  0x00 ; '.'
0000000000006882         db  0x00 ; '.'
0000000000006883         db  0x00 ; '.'
0000000000006884         db  0x09 ; '.'
0000000000006885         db  0x00 ; '.'
0000000000006886         db  0x00 ; '.'
0000000000006887         db  0x00 ; '.'
                     aSSSn:
0000000000006888         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000006894         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000689b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000689c         db  0x43 ; 'C'
000000000000689d         db  0x29 ; ')'
000000000000689e         db  0x00 ; '.'
                     aWrittenBySn:
000000000000689f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
00000000000068af         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
00000000000068c6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
00000000000068e2         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
00000000000068f7         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000690d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000006921         align      8
                     aNlicenseGplv3G:
0000000000006928         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
00000000000069f4         align      8
                     aWrittenBySSSna:
00000000000069f8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_6a18:        // aWrittenBySSSns
0000000000006a18         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
0000000000006a3c         align      64
                     aWrittenBySSSns_6a40:        // aWrittenBySSSns
0000000000006a40         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_6a68:        // aWrittenBySSSns
0000000000006a68         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000006a94         align      8
                     aWrittenBySSSns_6a98:        // aWrittenBySSSns
0000000000006a98         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000006ac8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
0000000000006afc         align      256
                     aWrittenBySSSns_6b00:        // aWrittenBySSSns
0000000000006b00         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
0000000000006b3c         align      64
                     aGeneralHelpUsi:
0000000000006b40         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000006b81         align      4
                     switch_table_6b84:        // switch_table
0000000000006b84         dd         version_etc_ar.loc_4c56-switch_table_6b84, version_etc_ar.loc_4ce8-switch_table_6b84, version_etc_ar.loc_4d28-switch_table_6b84, version_etc_ar.loc_4d70-switch_table_6b84 ; switch table used at 0x4bd4 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000006b94         dd         version_etc_ar.loc_4dc0-switch_table_6b84, version_etc_ar.loc_4e18-switch_table_6b84, version_etc_ar.loc_4e48-switch_table_6b84, version_etc_ar.loc_4eb0-switch_table_6b84
0000000000006ba4         dd         version_etc_ar.loc_4be0-switch_table_6b84, version_etc_ar.loc_4c90-switch_table_6b84
0000000000006bac         align      64
                     version_etc_copyright:
0000000000006bc0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
0000000000006bef         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li:
0000000000006c00         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoumax+908
                     a0StrtolbaseStr:
0000000000006c20         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoumax+915
0000000000006c46         align      8
                     switch_table_6c48:        // switch_table
0000000000006c48         dd         xstrtoumax.loc_5836-switch_table_6c48, 2 dup (xstrtoumax.loc_572c-switch_table_6c48), xstrtoumax.loc_5813-switch_table_6c48, xstrtoumax.loc_572c-switch_table_6c48 ; switch table used at 0x56e6 containing 54 entries, DATA XREF=xstrtoumax+452
0000000000006c5c         dd         xstrtoumax.loc_584c-switch_table_6c48, 3 dup (xstrtoumax.loc_572c-switch_table_6c48), xstrtoumax.loc_57cf-switch_table_6c48, xstrtoumax.loc_572c-switch_table_6c48
0000000000006c74         dd         xstrtoumax.loc_56e8-switch_table_6c48, 2 dup (xstrtoumax.loc_572c-switch_table_6c48), xstrtoumax.loc_57f0-switch_table_6c48, 3 dup (xstrtoumax.loc_572c-switch_table_6c48)
0000000000006c90         dd         xstrtoumax.loc_57af-switch_table_6c48, 4 dup (xstrtoumax.loc_572c-switch_table_6c48), xstrtoumax.loc_578a-switch_table_6c48, xstrtoumax.loc_5764-switch_table_6c48
0000000000006cac         dd         7 dup (xstrtoumax.loc_572c-switch_table_6c48), xstrtoumax.loc_574d-switch_table_6c48, xstrtoumax.loc_5710-switch_table_6c48, 3 dup (xstrtoumax.loc_572c-switch_table_6c48)
0000000000006cdc         dd         xstrtoumax.loc_584c-switch_table_6c48, 3 dup (xstrtoumax.loc_572c-switch_table_6c48), xstrtoumax.loc_57cf-switch_table_6c48, xstrtoumax.loc_572c-switch_table_6c48
0000000000006cf4         dd         xstrtoumax.loc_56e8-switch_table_6c48, 6 dup (xstrtoumax.loc_572c-switch_table_6c48), xstrtoumax.loc_57af-switch_table_6c48, 2 dup (xstrtoumax.loc_572c-switch_table_6c48)
0000000000006d1c         dd         xstrtoumax.loc_5737-switch_table_6c48
                     __PRETTY_FUNCTION__.4162:
0000000000006d20         db         "xstrtoumax", 0                             ; DATA XREF=xstrtoumax+901
0000000000006d2b         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000006d2c         db  0x00 ; '.'
                     aPosix:
0000000000006d2d         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000006d33         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
0000000000006d39         db  0x00 ; '.'
0000000000006d3a         db  0x00 ; '.'
0000000000006d3b         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x6d3c; 0x6fd8[ (668 bytes)
        ; File offset : [27964; 28632[ (668 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006d3c         db  0x01 ; '.'
0000000000006d3d         db  0x1b ; '.'
0000000000006d3e         db  0x03 ; '.'
0000000000006d3f         db  0x3b ; ';'
0000000000006d40         db  0x98 ; '.'
0000000000006d41         db  0x02 ; '.'
0000000000006d42         db  0x00 ; '.'
0000000000006d43         db  0x00 ; '.'
0000000000006d44         db  0x52 ; 'R'
0000000000006d45         db  0x00 ; '.'
0000000000006d46         db  0x00 ; '.'
0000000000006d47         db  0x00 ; '.'
0000000000006d48         db  0x84 ; '.'
0000000000006d49         db  0xa7 ; '.'
0000000000006d4a         db  0xff ; '.'
0000000000006d4b         db  0xff ; '.'
0000000000006d4c         db  0xe4 ; '.'
0000000000006d4d         db  0x02 ; '.'
0000000000006d4e         db  0x00 ; '.'
0000000000006d4f         db  0x00 ; '.'
0000000000006d50         db  0xb4 ; '.'
0000000000006d51         db  0xaa ; '.'
0000000000006d52         db  0xff ; '.'
0000000000006d53         db  0xff ; '.'
0000000000006d54         db  0x0c ; '.'
0000000000006d55         db  0x03 ; '.'
0000000000006d56         db  0x00 ; '.'
0000000000006d57         db  0x00 ; '.'
0000000000006d58         db  0xc4 ; '.'
0000000000006d59         db  0xaa ; '.'
0000000000006d5a         db  0xff ; '.'
0000000000006d5b         db  0xff ; '.'
0000000000006d5c         db  0x50 ; 'P'
0000000000006d5d         db  0x03 ; '.'
0000000000006d5e         db  0x00 ; '.'
0000000000006d5f         db  0x00 ; '.'
0000000000006d60         db  0xc4 ; '.'
0000000000006d61         db  0xb2 ; '.'
0000000000006d62         db  0xff ; '.'
0000000000006d63         db  0xff ; '.'
0000000000006d64         db  0xb4 ; '.'
0000000000006d65         db  0x02 ; '.'
0000000000006d66         db  0x00 ; '.'
0000000000006d67         db  0x00 ; '.'
0000000000006d68         db  0xd4 ; '.'
0000000000006d69         db  0xb3 ; '.'
0000000000006d6a         db  0xff ; '.'
0000000000006d6b         db  0xff ; '.'
0000000000006d6c         db  0x24 ; '$'
0000000000006d6d         db  0x03 ; '.'
0000000000006d6e         db  0x00 ; '.'
0000000000006d6f         db  0x00 ; '.'
0000000000006d70         db  0xb4 ; '.'
0000000000006d71         db  0xb7 ; '.'
0000000000006d72         db  0xff ; '.'
0000000000006d73         db  0xff ; '.'
0000000000006d74         db  0xa4 ; '.'
0000000000006d75         db  0x03 ; '.'
0000000000006d76         db  0x00 ; '.'
0000000000006d77         db  0x00 ; '.'
0000000000006d78         db  0x64 ; 'd'
0000000000006d79         db  0xb9 ; '.'
0000000000006d7a         db  0xff ; '.'
0000000000006d7b         db  0xff ; '.'
0000000000006d7c         db  0xb8 ; '.'
0000000000006d7d         db  0x03 ; '.'
0000000000006d7e         db  0x00 ; '.'
0000000000006d7f         db  0x00 ; '.'
0000000000006d80         db  0x84 ; '.'
0000000000006d81         db  0xbb ; '.'
0000000000006d82         db  0xff ; '.'
0000000000006d83         db  0xff ; '.'
0000000000006d84         db  0xcc ; '.'
0000000000006d85         db  0x03 ; '.'
0000000000006d86         db  0x00 ; '.'
0000000000006d87         db  0x00 ; '.'
0000000000006d88         db  0x14 ; '.'
0000000000006d89         db  0xbc ; '.'
0000000000006d8a         db  0xff ; '.'
0000000000006d8b         db  0xff ; '.'
0000000000006d8c         db  0x18 ; '.'
0000000000006d8d         db  0x04 ; '.'
0000000000006d8e         db  0x00 ; '.'
0000000000006d8f         db  0x00 ; '.'
0000000000006d90         db  0x34 ; '4'
0000000000006d91         db  0xbc ; '.'
0000000000006d92         db  0xff ; '.'
0000000000006d93         db  0xff ; '.'
0000000000006d94         db  0x2c ; ','
0000000000006d95         db  0x04 ; '.'
0000000000006d96         db  0x00 ; '.'
0000000000006d97         db  0x00 ; '.'
0000000000006d98         db  0x44 ; 'D'
0000000000006d99         db  0xbc ; '.'
0000000000006d9a         db  0xff ; '.'
0000000000006d9b         db  0xff ; '.'
0000000000006d9c         db  0x40 ; '@'
0000000000006d9d         db  0x04 ; '.'
0000000000006d9e         db  0x00 ; '.'
0000000000006d9f         db  0x00 ; '.'
0000000000006da0         db  0xf4 ; '.'
0000000000006da1         db  0xbe ; '.'
0000000000006da2         db  0xff ; '.'
0000000000006da3         db  0xff ; '.'
0000000000006da4         db  0x8c ; '.'
0000000000006da5         db  0x04 ; '.'
0000000000006da6         db  0x00 ; '.'
0000000000006da7         db  0x00 ; '.'
0000000000006da8         db  0xb4 ; '.'
0000000000006da9         db  0xbf ; '.'
0000000000006daa         db  0xff ; '.'
0000000000006dab         db  0xff ; '.'
0000000000006dac         db  0xd4 ; '.'
0000000000006dad         db  0x04 ; '.'
0000000000006dae         db  0x00 ; '.'
0000000000006daf         db  0x00 ; '.'
0000000000006db0         db  0xc4 ; '.'
0000000000006db1         db  0xbf ; '.'
0000000000006db2         db  0xff ; '.'
0000000000006db3         db  0xff ; '.'
0000000000006db4         db  0xe8 ; '.'
0000000000006db5         db  0x04 ; '.'
0000000000006db6         db  0x00 ; '.'
0000000000006db7         db  0x00 ; '.'
0000000000006db8         db  0xd4 ; '.'
0000000000006db9         db  0xbf ; '.'
0000000000006dba         db  0xff ; '.'
0000000000006dbb         db  0xff ; '.'
0000000000006dbc         db  0xfc ; '.'
0000000000006dbd         db  0x04 ; '.'
0000000000006dbe         db  0x00 ; '.'
0000000000006dbf         db  0x00 ; '.'
0000000000006dc0         db  0x84 ; '.'
0000000000006dc1         db  0xc0 ; '.'
0000000000006dc2         db  0xff ; '.'
0000000000006dc3         db  0xff ; '.'
0000000000006dc4         db  0x2c ; ','
0000000000006dc5         db  0x05 ; '.'
0000000000006dc6         db  0x00 ; '.'
0000000000006dc7         db  0x00 ; '.'
0000000000006dc8         db  0x94 ; '.'
0000000000006dc9         db  0xc0 ; '.'
0000000000006dca         db  0xff ; '.'
0000000000006dcb         db  0xff ; '.'
0000000000006dcc         db  0x40 ; '@'
0000000000006dcd         db  0x05 ; '.'
0000000000006dce         db  0x00 ; '.'
0000000000006dcf         db  0x00 ; '.'
0000000000006dd0         db  0xc4 ; '.'
0000000000006dd1         db  0xc0 ; '.'
0000000000006dd2         db  0xff ; '.'
0000000000006dd3         db  0xff ; '.'
0000000000006dd4         db  0x5c ; '\'
0000000000006dd5         db  0x05 ; '.'
0000000000006dd6         db  0x00 ; '.'
0000000000006dd7         db  0x00 ; '.'
0000000000006dd8         db  0x64 ; 'd'
0000000000006dd9         db  0xc1 ; '.'
0000000000006dda         db  0xff ; '.'
0000000000006ddb         db  0xff ; '.'
0000000000006ddc         db  0x7c ; '|'
0000000000006ddd         db  0x05 ; '.'
0000000000006dde         db  0x00 ; '.'
0000000000006ddf         db  0x00 ; '.'
0000000000006de0         db  0x54 ; 'T'
0000000000006de1         db  0xc2 ; '.'
0000000000006de2         db  0xff ; '.'
0000000000006de3         db  0xff ; '.'
0000000000006de4         db  0xc0 ; '.'
0000000000006de5         db  0x05 ; '.'
0000000000006de6         db  0x00 ; '.'
0000000000006de7         db  0x00 ; '.'
0000000000006de8         db  0x94 ; '.'
0000000000006de9         db  0xd4 ; '.'
0000000000006dea         db  0xff ; '.'
0000000000006deb         db  0xff ; '.'
0000000000006dec         db  0x38 ; '8'
0000000000006ded         db  0x06 ; '.'
0000000000006dee         db  0x00 ; '.'
0000000000006def         db  0x00 ; '.'
0000000000006df0         db  0x44 ; 'D'
0000000000006df1         db  0xd6 ; '.'
0000000000006df2         db  0xff ; '.'
0000000000006df3         db  0xff ; '.'
0000000000006df4         db  0xa4 ; '.'
0000000000006df5         db  0x06 ; '.'
0000000000006df6         db  0x00 ; '.'
0000000000006df7         db  0x00 ; '.'
0000000000006df8         db  0x84 ; '.'
0000000000006df9         db  0xd6 ; '.'
0000000000006dfa         db  0xff ; '.'
0000000000006dfb         db  0xff ; '.'
0000000000006dfc         db  0xd0 ; '.'
0000000000006dfd         db  0x06 ; '.'
0000000000006dfe         db  0x00 ; '.'
0000000000006dff         db  0x00 ; '.'
0000000000006e00         db  0xa4 ; '.'
0000000000006e01         db  0xd6 ; '.'
0000000000006e02         db  0xff ; '.'
0000000000006e03         db  0xff ; '.'
0000000000006e04         db  0xe4 ; '.'
0000000000006e05         db  0x06 ; '.'
0000000000006e06         db  0x00 ; '.'
0000000000006e07         db  0x00 ; '.'
0000000000006e08         db  0xc4 ; '.'
0000000000006e09         db  0xd6 ; '.'
0000000000006e0a         db  0xff ; '.'
0000000000006e0b         db  0xff ; '.'
0000000000006e0c         db  0xf8 ; '.'
0000000000006e0d         db  0x06 ; '.'
0000000000006e0e         db  0x00 ; '.'
0000000000006e0f         db  0x00 ; '.'
0000000000006e10         db  0x04 ; '.'
0000000000006e11         db  0xd7 ; '.'
0000000000006e12         db  0xff ; '.'
0000000000006e13         db  0xff ; '.'
0000000000006e14         db  0x0c ; '.'
0000000000006e15         db  0x07 ; '.'
0000000000006e16         db  0x00 ; '.'
0000000000006e17         db  0x00 ; '.'
0000000000006e18         db  0x24 ; '$'
0000000000006e19         db  0xd7 ; '.'
0000000000006e1a         db  0xff ; '.'
0000000000006e1b         db  0xff ; '.'
0000000000006e1c         db  0x20 ; ' '
0000000000006e1d         db  0x07 ; '.'
0000000000006e1e         db  0x00 ; '.'
0000000000006e1f         db  0x00 ; '.'
0000000000006e20         db  0x54 ; 'T'
0000000000006e21         db  0xd7 ; '.'
0000000000006e22         db  0xff ; '.'
0000000000006e23         db  0xff ; '.'
0000000000006e24         db  0x34 ; '4'
0000000000006e25         db  0x07 ; '.'
0000000000006e26         db  0x00 ; '.'
0000000000006e27         db  0x00 ; '.'
0000000000006e28         db  0xd4 ; '.'
0000000000006e29         db  0xd7 ; '.'
0000000000006e2a         db  0xff ; '.'
0000000000006e2b         db  0xff ; '.'
0000000000006e2c         db  0x88 ; '.'
0000000000006e2d         db  0x07 ; '.'
0000000000006e2e         db  0x00 ; '.'
0000000000006e2f         db  0x00 ; '.'
0000000000006e30         db  0xc4 ; '.'
0000000000006e31         db  0xd8 ; '.'
0000000000006e32         db  0xff ; '.'
0000000000006e33         db  0xff ; '.'
0000000000006e34         db  0xf4 ; '.'
0000000000006e35         db  0x07 ; '.'
0000000000006e36         db  0x00 ; '.'
0000000000006e37         db  0x00 ; '.'
0000000000006e38         db  0xd4 ; '.'
0000000000006e39         db  0xd8 ; '.'
0000000000006e3a         db  0xff ; '.'
0000000000006e3b         db  0xff ; '.'
0000000000006e3c         db  0x08 ; '.'
0000000000006e3d         db  0x08 ; '.'
0000000000006e3e         db  0x00 ; '.'
0000000000006e3f         db  0x00 ; '.'
0000000000006e40         db  0x74 ; 't'
0000000000006e41         db  0xd9 ; '.'
0000000000006e42         db  0xff ; '.'
0000000000006e43         db  0xff ; '.'
0000000000006e44         db  0x34 ; '4'
0000000000006e45         db  0x08 ; '.'
0000000000006e46         db  0x00 ; '.'
0000000000006e47         db  0x00 ; '.'
0000000000006e48         db  0x94 ; '.'
0000000000006e49         db  0xd9 ; '.'
0000000000006e4a         db  0xff ; '.'
0000000000006e4b         db  0xff ; '.'
0000000000006e4c         db  0x48 ; 'H'
0000000000006e4d         db  0x08 ; '.'
0000000000006e4e         db  0x00 ; '.'
0000000000006e4f         db  0x00 ; '.'
0000000000006e50         db  0xa4 ; '.'
0000000000006e51         db  0xd9 ; '.'
0000000000006e52         db  0xff ; '.'
0000000000006e53         db  0xff ; '.'
0000000000006e54         db  0x5c ; '\'
0000000000006e55         db  0x08 ; '.'
0000000000006e56         db  0x00 ; '.'
0000000000006e57         db  0x00 ; '.'
0000000000006e58         db  0xc4 ; '.'
0000000000006e59         db  0xd9 ; '.'
0000000000006e5a         db  0xff ; '.'
0000000000006e5b         db  0xff ; '.'
0000000000006e5c         db  0x70 ; 'p'
0000000000006e5d         db  0x08 ; '.'
0000000000006e5e         db  0x00 ; '.'
0000000000006e5f         db  0x00 ; '.'
0000000000006e60         db  0xe4 ; '.'
0000000000006e61         db  0xd9 ; '.'
0000000000006e62         db  0xff ; '.'
0000000000006e63         db  0xff ; '.'
0000000000006e64         db  0x84 ; '.'
0000000000006e65         db  0x08 ; '.'
0000000000006e66         db  0x00 ; '.'
0000000000006e67         db  0x00 ; '.'
0000000000006e68         db  0x74 ; 't'
0000000000006e69         db  0xda ; '.'
0000000000006e6a         db  0xff ; '.'
0000000000006e6b         db  0xff ; '.'
0000000000006e6c         db  0xa0 ; '.'
0000000000006e6d         db  0x08 ; '.'
0000000000006e6e         db  0x00 ; '.'
0000000000006e6f         db  0x00 ; '.'
0000000000006e70         db  0x04 ; '.'
0000000000006e71         db  0xdb ; '.'
0000000000006e72         db  0xff ; '.'
0000000000006e73         db  0xff ; '.'
0000000000006e74         db  0xbc ; '.'
0000000000006e75         db  0x08 ; '.'
0000000000006e76         db  0x00 ; '.'
0000000000006e77         db  0x00 ; '.'
0000000000006e78         db  0x14 ; '.'
0000000000006e79         db  0xdb ; '.'
0000000000006e7a         db  0xff ; '.'
0000000000006e7b         db  0xff ; '.'
0000000000006e7c         db  0xd0 ; '.'
0000000000006e7d         db  0x08 ; '.'
0000000000006e7e         db  0x00 ; '.'
0000000000006e7f         db  0x00 ; '.'
0000000000006e80         db  0x24 ; '$'
0000000000006e81         db  0xdb ; '.'
0000000000006e82         db  0xff ; '.'
0000000000006e83         db  0xff ; '.'
0000000000006e84         db  0xe4 ; '.'
0000000000006e85         db  0x08 ; '.'
0000000000006e86         db  0x00 ; '.'
0000000000006e87         db  0x00 ; '.'
0000000000006e88         db  0xc4 ; '.'
0000000000006e89         db  0xdb ; '.'
0000000000006e8a         db  0xff ; '.'
0000000000006e8b         db  0xff ; '.'
0000000000006e8c         db  0x00 ; '.'
0000000000006e8d         db  0x09 ; '.'
0000000000006e8e         db  0x00 ; '.'
0000000000006e8f         db  0x00 ; '.'
0000000000006e90         db  0xd4 ; '.'
0000000000006e91         db  0xdb ; '.'
0000000000006e92         db  0xff ; '.'
0000000000006e93         db  0xff ; '.'
0000000000006e94         db  0x14 ; '.'
0000000000006e95         db  0x09 ; '.'
0000000000006e96         db  0x00 ; '.'
0000000000006e97         db  0x00 ; '.'
0000000000006e98         db  0xf4 ; '.'
0000000000006e99         db  0xdb ; '.'
0000000000006e9a         db  0xff ; '.'
0000000000006e9b         db  0xff ; '.'
0000000000006e9c         db  0x28 ; '('
0000000000006e9d         db  0x09 ; '.'
0000000000006e9e         db  0x00 ; '.'
0000000000006e9f         db  0x00 ; '.'
0000000000006ea0         db  0x04 ; '.'
0000000000006ea1         db  0xdc ; '.'
0000000000006ea2         db  0xff ; '.'
0000000000006ea3         db  0xff ; '.'
0000000000006ea4         db  0x3c ; '<'
0000000000006ea5         db  0x09 ; '.'
0000000000006ea6         db  0x00 ; '.'
0000000000006ea7         db  0x00 ; '.'
0000000000006ea8         db  0x94 ; '.'
0000000000006ea9         db  0xdc ; '.'
0000000000006eaa         db  0xff ; '.'
0000000000006eab         db  0xff ; '.'
0000000000006eac         db  0x58 ; 'X'
0000000000006ead         db  0x09 ; '.'
0000000000006eae         db  0x00 ; '.'
0000000000006eaf         db  0x00 ; '.'
0000000000006eb0         db  0x34 ; '4'
0000000000006eb1         db  0xdd ; '.'
0000000000006eb2         db  0xff ; '.'
0000000000006eb3         db  0xff ; '.'
0000000000006eb4         db  0x74 ; 't'
0000000000006eb5         db  0x09 ; '.'
0000000000006eb6         db  0x00 ; '.'
0000000000006eb7         db  0x00 ; '.'
0000000000006eb8         db  0x44 ; 'D'
0000000000006eb9         db  0xdd ; '.'
0000000000006eba         db  0xff ; '.'
0000000000006ebb         db  0xff ; '.'
0000000000006ebc         db  0x88 ; '.'
0000000000006ebd         db  0x09 ; '.'
0000000000006ebe         db  0x00 ; '.'
0000000000006ebf         db  0x00 ; '.'
0000000000006ec0         db  0x64 ; 'd'
0000000000006ec1         db  0xdd ; '.'
0000000000006ec2         db  0xff ; '.'
0000000000006ec3         db  0xff ; '.'
0000000000006ec4         db  0x9c ; '.'
0000000000006ec5         db  0x09 ; '.'
0000000000006ec6         db  0x00 ; '.'
0000000000006ec7         db  0x00 ; '.'
0000000000006ec8         db  0x84 ; '.'
0000000000006ec9         db  0xdd ; '.'
0000000000006eca         db  0xff ; '.'
0000000000006ecb         db  0xff ; '.'
0000000000006ecc         db  0xb0 ; '.'
0000000000006ecd         db  0x09 ; '.'
0000000000006ece         db  0x00 ; '.'
0000000000006ecf         db  0x00 ; '.'
0000000000006ed0         db  0x94 ; '.'
0000000000006ed1         db  0xdd ; '.'
0000000000006ed2         db  0xff ; '.'
0000000000006ed3         db  0xff ; '.'
0000000000006ed4         db  0xc4 ; '.'
0000000000006ed5         db  0x09 ; '.'
0000000000006ed6         db  0x00 ; '.'
0000000000006ed7         db  0x00 ; '.'
0000000000006ed8         db  0xb4 ; '.'
0000000000006ed9         db  0xdd ; '.'
0000000000006eda         db  0xff ; '.'
0000000000006edb         db  0xff ; '.'
0000000000006edc         db  0xd8 ; '.'
0000000000006edd         db  0x09 ; '.'
0000000000006ede         db  0x00 ; '.'
0000000000006edf         db  0x00 ; '.'
0000000000006ee0         db  0xd4 ; '.'
0000000000006ee1         db  0xdd ; '.'
0000000000006ee2         db  0xff ; '.'
0000000000006ee3         db  0xff ; '.'
0000000000006ee4         db  0xec ; '.'
0000000000006ee5         db  0x09 ; '.'
0000000000006ee6         db  0x00 ; '.'
0000000000006ee7         db  0x00 ; '.'
0000000000006ee8         db  0xf4 ; '.'
0000000000006ee9         db  0xdd ; '.'
0000000000006eea         db  0xff ; '.'
0000000000006eeb         db  0xff ; '.'
0000000000006eec         db  0x04 ; '.'
0000000000006eed         db  0x0a ; '.'
0000000000006eee         db  0x00 ; '.'
0000000000006eef         db  0x00 ; '.'
0000000000006ef0         db  0x14 ; '.'
0000000000006ef1         db  0xe2 ; '.'
0000000000006ef2         db  0xff ; '.'
0000000000006ef3         db  0xff ; '.'
0000000000006ef4         db  0x18 ; '.'
0000000000006ef5         db  0x0b ; '.'
0000000000006ef6         db  0x00 ; '.'
0000000000006ef7         db  0x00 ; '.'
0000000000006ef8         db  0x34 ; '4'
0000000000006ef9         db  0xe2 ; '.'
0000000000006efa         db  0xff ; '.'
0000000000006efb         db  0xff ; '.'
0000000000006efc         db  0x2c ; ','
0000000000006efd         db  0x0b ; '.'
0000000000006efe         db  0x00 ; '.'
0000000000006eff         db  0x00 ; '.'
0000000000006f00         db  0xb4 ; '.'
0000000000006f01         db  0xe2 ; '.'
0000000000006f02         db  0xff ; '.'
0000000000006f03         db  0xff ; '.'
0000000000006f04         db  0x48 ; 'H'
0000000000006f05         db  0x0b ; '.'
0000000000006f06         db  0x00 ; '.'
0000000000006f07         db  0x00 ; '.'
0000000000006f08         db  0x94 ; '.'
0000000000006f09         db  0xe3 ; '.'
0000000000006f0a         db  0xff ; '.'
0000000000006f0b         db  0xff ; '.'
0000000000006f0c         db  0x74 ; 't'
0000000000006f0d         db  0x0b ; '.'
0000000000006f0e         db  0x00 ; '.'
0000000000006f0f         db  0x00 ; '.'
0000000000006f10         db  0x14 ; '.'
0000000000006f11         db  0xe4 ; '.'
0000000000006f12         db  0xff ; '.'
0000000000006f13         db  0xff ; '.'
0000000000006f14         db  0x94 ; '.'
0000000000006f15         db  0x0b ; '.'
0000000000006f16         db  0x00 ; '.'
0000000000006f17         db  0x00 ; '.'
0000000000006f18         db  0x34 ; '4'
0000000000006f19         db  0xe4 ; '.'
0000000000006f1a         db  0xff ; '.'
0000000000006f1b         db  0xff ; '.'
0000000000006f1c         db  0xb0 ; '.'
0000000000006f1d         db  0x0b ; '.'
0000000000006f1e         db  0x00 ; '.'
0000000000006f1f         db  0x00 ; '.'
0000000000006f20         db  0x64 ; 'd'
0000000000006f21         db  0xe4 ; '.'
0000000000006f22         db  0xff ; '.'
0000000000006f23         db  0xff ; '.'
0000000000006f24         db  0xc4 ; '.'
0000000000006f25         db  0x0b ; '.'
0000000000006f26         db  0x00 ; '.'
0000000000006f27         db  0x00 ; '.'
0000000000006f28         db  0x74 ; 't'
0000000000006f29         db  0xe4 ; '.'
0000000000006f2a         db  0xff ; '.'
0000000000006f2b         db  0xff ; '.'
0000000000006f2c         db  0xd8 ; '.'
0000000000006f2d         db  0x0b ; '.'
0000000000006f2e         db  0x00 ; '.'
0000000000006f2f         db  0x00 ; '.'
0000000000006f30         db  0xb4 ; '.'
0000000000006f31         db  0xe4 ; '.'
0000000000006f32         db  0xff ; '.'
0000000000006f33         db  0xff ; '.'
0000000000006f34         db  0xfc ; '.'
0000000000006f35         db  0x0b ; '.'
0000000000006f36         db  0x00 ; '.'
0000000000006f37         db  0x00 ; '.'
0000000000006f38         db  0xe4 ; '.'
0000000000006f39         db  0xe4 ; '.'
0000000000006f3a         db  0xff ; '.'
0000000000006f3b         db  0xff ; '.'
0000000000006f3c         db  0x10 ; '.'
0000000000006f3d         db  0x0c ; '.'
0000000000006f3e         db  0x00 ; '.'
0000000000006f3f         db  0x00 ; '.'
0000000000006f40         db  0x74 ; 't'
0000000000006f41         db  0xe5 ; '.'
0000000000006f42         db  0xff ; '.'
0000000000006f43         db  0xff ; '.'
0000000000006f44         db  0x28 ; '('
0000000000006f45         db  0x0c ; '.'
0000000000006f46         db  0x00 ; '.'
0000000000006f47         db  0x00 ; '.'
0000000000006f48         db  0xc4 ; '.'
0000000000006f49         db  0xe5 ; '.'
0000000000006f4a         db  0xff ; '.'
0000000000006f4b         db  0xff ; '.'
0000000000006f4c         db  0x40 ; '@'
0000000000006f4d         db  0x0c ; '.'
0000000000006f4e         db  0x00 ; '.'
0000000000006f4f         db  0x00 ; '.'
0000000000006f50         db  0xe4 ; '.'
0000000000006f51         db  0xe5 ; '.'
0000000000006f52         db  0xff ; '.'
0000000000006f53         db  0xff ; '.'
0000000000006f54         db  0x5c ; '\'
0000000000006f55         db  0x0c ; '.'
0000000000006f56         db  0x00 ; '.'
0000000000006f57         db  0x00 ; '.'
0000000000006f58         db  0x14 ; '.'
0000000000006f59         db  0xe6 ; '.'
0000000000006f5a         db  0xff ; '.'
0000000000006f5b         db  0xff ; '.'
0000000000006f5c         db  0x78 ; 'x'
0000000000006f5d         db  0x0c ; '.'
0000000000006f5e         db  0x00 ; '.'
0000000000006f5f         db  0x00 ; '.'
0000000000006f60         db  0x44 ; 'D'
0000000000006f61         db  0xe6 ; '.'
0000000000006f62         db  0xff ; '.'
0000000000006f63         db  0xff ; '.'
0000000000006f64         db  0xa0 ; '.'
0000000000006f65         db  0x0c ; '.'
0000000000006f66         db  0x00 ; '.'
0000000000006f67         db  0x00 ; '.'
0000000000006f68         db  0x64 ; 'd'
0000000000006f69         db  0xe6 ; '.'
0000000000006f6a         db  0xff ; '.'
0000000000006f6b         db  0xff ; '.'
0000000000006f6c         db  0xbc ; '.'
0000000000006f6d         db  0x0c ; '.'
0000000000006f6e         db  0x00 ; '.'
0000000000006f6f         db  0x00 ; '.'
0000000000006f70         db  0xa4 ; '.'
0000000000006f71         db  0xe6 ; '.'
0000000000006f72         db  0xff ; '.'
0000000000006f73         db  0xff ; '.'
0000000000006f74         db  0xd4 ; '.'
0000000000006f75         db  0x0c ; '.'
0000000000006f76         db  0x00 ; '.'
0000000000006f77         db  0x00 ; '.'
0000000000006f78         db  0xa4 ; '.'
0000000000006f79         db  0xe7 ; '.'
0000000000006f7a         db  0xff ; '.'
0000000000006f7b         db  0xff ; '.'
0000000000006f7c         db  0x20 ; ' '
0000000000006f7d         db  0x0d ; '.'
0000000000006f7e         db  0x00 ; '.'
0000000000006f7f         db  0x00 ; '.'
0000000000006f80         db  0xd4 ; '.'
0000000000006f81         db  0xe7 ; '.'
0000000000006f82         db  0xff ; '.'
0000000000006f83         db  0xff ; '.'
0000000000006f84         db  0x3c ; '<'
0000000000006f85         db  0x0d ; '.'
0000000000006f86         db  0x00 ; '.'
0000000000006f87         db  0x00 ; '.'
0000000000006f88         db  0xf4 ; '.'
0000000000006f89         db  0xeb ; '.'
0000000000006f8a         db  0xff ; '.'
0000000000006f8b         db  0xff ; '.'
0000000000006f8c         db  0x8c ; '.'
0000000000006f8d         db  0x0d ; '.'
0000000000006f8e         db  0x00 ; '.'
0000000000006f8f         db  0x00 ; '.'
0000000000006f90         db  0x74 ; 't'
0000000000006f91         db  0xec ; '.'
0000000000006f92         db  0xff ; '.'
0000000000006f93         db  0xff ; '.'
0000000000006f94         db  0xc4 ; '.'
0000000000006f95         db  0x0d ; '.'
0000000000006f96         db  0x00 ; '.'
0000000000006f97         db  0x00 ; '.'
0000000000006f98         db  0xb4 ; '.'
0000000000006f99         db  0xec ; '.'
0000000000006f9a         db  0xff ; '.'
0000000000006f9b         db  0xff ; '.'
0000000000006f9c         db  0xe4 ; '.'
0000000000006f9d         db  0x0d ; '.'
0000000000006f9e         db  0x00 ; '.'
0000000000006f9f         db  0x00 ; '.'
0000000000006fa0         db  0x14 ; '.'
0000000000006fa1         db  0xed ; '.'
0000000000006fa2         db  0xff ; '.'
0000000000006fa3         db  0xff ; '.'
0000000000006fa4         db  0x14 ; '.'
0000000000006fa5         db  0x0e ; '.'
0000000000006fa6         db  0x00 ; '.'
0000000000006fa7         db  0x00 ; '.'
0000000000006fa8         db  0xa4 ; '.'
0000000000006fa9         db  0xed ; '.'
0000000000006faa         db  0xff ; '.'
0000000000006fab         db  0xff ; '.'
0000000000006fac         db  0x54 ; 'T'
0000000000006fad         db  0x0e ; '.'
0000000000006fae         db  0x00 ; '.'
0000000000006faf         db  0x00 ; '.'
0000000000006fb0         db  0x24 ; '$'
0000000000006fb1         db  0xee ; '.'
0000000000006fb2         db  0xff ; '.'
0000000000006fb3         db  0xff ; '.'
0000000000006fb4         db  0xa4 ; '.'
0000000000006fb5         db  0x0e ; '.'
0000000000006fb6         db  0x00 ; '.'
0000000000006fb7         db  0x00 ; '.'
0000000000006fb8         db  0x84 ; '.'
0000000000006fb9         db  0xee ; '.'
0000000000006fba         db  0xff ; '.'
0000000000006fbb         db  0xff ; '.'
0000000000006fbc         db  0xc4 ; '.'
0000000000006fbd         db  0x0e ; '.'
0000000000006fbe         db  0x00 ; '.'
0000000000006fbf         db  0x00 ; '.'
0000000000006fc0         db  0xc4 ; '.'
0000000000006fc1         db  0xee ; '.'
0000000000006fc2         db  0xff ; '.'
0000000000006fc3         db  0xff ; '.'
0000000000006fc4         db  0xe4 ; '.'
0000000000006fc5         db  0x0e ; '.'
0000000000006fc6         db  0x00 ; '.'
0000000000006fc7         db  0x00 ; '.'
0000000000006fc8         db  0x34 ; '4'
0000000000006fc9         db  0xef ; '.'
0000000000006fca         db  0xff ; '.'
0000000000006fcb         db  0xff ; '.'
0000000000006fcc         db  0x2c ; ','
0000000000006fcd         db  0x0f ; '.'
0000000000006fce         db  0x00 ; '.'
0000000000006fcf         db  0x00 ; '.'
0000000000006fd0         db  0x44 ; 'D'
0000000000006fd1         db  0xef ; '.'
0000000000006fd2         db  0xff ; '.'
0000000000006fd3         db  0xff ; '.'
0000000000006fd4         db  0x44 ; 'D'
0000000000006fd5         db  0x0f ; '.'
0000000000006fd6         db  0x00 ; '.'
0000000000006fd7         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x6fd8; 0x7c98[ (3264 bytes)
        ; File offset : [28632; 31896[ (3264 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006fd8         dd         0x00000014                                  ; Length of the record
0000000000006fdc         dd         0x00000000                                  ; CIE ID
0000000000006fe0         db         0x01                                        ; Version
0000000000006fe1         db         "zR", 0                                     ; Augmentation String
0000000000006fe4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000006fe5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000006fe6         db         0x10                                        ; Return address register
0000000000006fe7         db         0x01                                        ; Augmentation data length
0000000000006fe8         db         0x1b                                        ; FDE encoding
0000000000006fe9         db  0x0c ; '.'
0000000000006fea         db  0x07 ; '.'
0000000000006feb         db  0x08 ; '.'
0000000000006fec         db  0x90 ; '.'
0000000000006fed         db  0x01 ; '.'
0000000000006fee         db  0x07 ; '.'
0000000000006fef         db  0x10 ; '.'
0000000000006ff0         dd         0x00000014                                  ; Length of the record
0000000000006ff4         dd         0x0000001c                                  ; FDE: parent CIE at 0x6fd8 (FDE encoding = 0x1B)
0000000000006ff8         db         0x08, 0xb0, 2 dup (0xff)                    ; begin 0x2000
0000000000006ffc         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x202b)
0000000000007000         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007001         align      8
0000000000007008         dd         0x00000014                                  ; Length of the record
000000000000700c         dd         0x00000000                                  ; CIE ID
0000000000007010         db         0x01                                        ; Version
0000000000007011         db         "zR", 0                                     ; Augmentation String
0000000000007014         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007015         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007016         db         0x10                                        ; Return address register
0000000000007017         db         0x01                                        ; Augmentation data length
0000000000007018         db         0x1b                                        ; FDE encoding
0000000000007019         db  0x0c ; '.'
000000000000701a         db  0x07 ; '.'
000000000000701b         db  0x08 ; '.'
000000000000701c         db  0x90 ; '.'
000000000000701d         db  0x01 ; '.'
000000000000701e         db  0x00 ; '.'
000000000000701f         db  0x00 ; '.'
0000000000007020         dd         0x00000024                                  ; Length of the record
0000000000007024         dd         0x0000001c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007028         db         0x98, 0xa4, 2 dup (0xff)                    ; begin 0x14c0
000000000000702c         db         0x30, 0x03, 2 dup (0x00)                    ; length 0x330 (end at 0x17f0)
0000000000007030         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007031         db  0x0e ; '.'
0000000000007032         db  0x10 ; '.'
0000000000007033         db  0x46 ; 'F'
0000000000007034         db  0x0e ; '.'
0000000000007035         db  0x18 ; '.'
0000000000007036         db  0x4a ; 'J'
0000000000007037         db  0x0f ; '.'
0000000000007038         db  0x0b ; '.'
0000000000007039         db  0x77 ; 'w'
000000000000703a         db  0x08 ; '.'
000000000000703b         db  0x80 ; '.'
000000000000703c         db  0x00 ; '.'
000000000000703d         db  0x3f ; '?'
000000000000703e         db  0x1a ; '.'
000000000000703f         db  0x3b ; ';'
0000000000007040         db  0x2a ; '*'
0000000000007041         db  0x33 ; '3'
0000000000007042         db  0x24 ; '$'
0000000000007043         db  0x22 ; '"'
0000000000007044         db  0x00 ; '.'
0000000000007045         db  0x00 ; '.'
0000000000007046         db  0x00 ; '.'
0000000000007047         db  0x00 ; '.'
0000000000007048         dd         0x00000014                                  ; Length of the record
000000000000704c         dd         0x00000044                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007050         db         0xa0, 0xa7, 2 dup (0xff)                    ; begin 0x17f0
0000000000007054         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x17f8)
0000000000007058         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007059         align      32
0000000000007060         dd         0x00000028                                  ; Length of the record
0000000000007064         dd         0x0000005c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007068         db         0xa8, 0xb0, 2 dup (0xff)                    ; begin 0x2110
000000000000706c         db         0xda, 0x03, 2 dup (0x00)                    ; length 0x3da (end at 0x24ea)
0000000000007070         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007071         db  0x42 ; 'B'
0000000000007072         db  0x0e ; '.'
0000000000007073         db  0x10 ; '.'
0000000000007074         db  0x8d ; '.'
0000000000007075         db  0x02 ; '.'
0000000000007076         db  0x42 ; 'B'
0000000000007077         db  0x0e ; '.'
0000000000007078         db  0x18 ; '.'
0000000000007079         db  0x8c ; '.'
000000000000707a         db  0x03 ; '.'
000000000000707b         db  0x46 ; 'F'
000000000000707c         db  0x0e ; '.'
000000000000707d         db  0x20 ; ' '
000000000000707e         db  0x86 ; '.'
000000000000707f         db  0x04 ; '.'
0000000000007080         db  0x41 ; 'A'
0000000000007081         db  0x0e ; '.'
0000000000007082         db  0x28 ; '('
0000000000007083         db  0x83 ; '.'
0000000000007084         db  0x05 ; '.'
0000000000007085         db  0x49 ; 'I'
0000000000007086         db  0x0e ; '.'
0000000000007087         db  0xb0 ; '.'
0000000000007088         db  0x01 ; '.'
0000000000007089         db  0x00 ; '.'
000000000000708a         db  0x00 ; '.'
000000000000708b         db  0x00 ; '.'
000000000000708c         dd         0x00000050                                  ; Length of the record
0000000000007090         dd         0x00000088                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007094         db         0x6c, 0xa7, 2 dup (0xff)                    ; begin 0x1800
0000000000007098         db         0xf9, 0x07, 2 dup (0x00)                    ; length 0x7f9 (end at 0x1ff9)
000000000000709c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000709d         db  0x42 ; 'B'
000000000000709e         db  0x0e ; '.'
000000000000709f         db  0x10 ; '.'
00000000000070a0         db  0x8f ; '.'
00000000000070a1         db  0x02 ; '.'
00000000000070a2         db  0x42 ; 'B'
00000000000070a3         db  0x0e ; '.'
00000000000070a4         db  0x18 ; '.'
00000000000070a5         db  0x8e ; '.'
00000000000070a6         db  0x03 ; '.'
00000000000070a7         db  0x42 ; 'B'
00000000000070a8         db  0x0e ; '.'
00000000000070a9         db  0x20 ; ' '
00000000000070aa         db  0x8d ; '.'
00000000000070ab         db  0x04 ; '.'
00000000000070ac         db  0x42 ; 'B'
00000000000070ad         db  0x0e ; '.'
00000000000070ae         db  0x28 ; '('
00000000000070af         db  0x8c ; '.'
00000000000070b0         db  0x05 ; '.'
00000000000070b1         db  0x44 ; 'D'
00000000000070b2         db  0x0e ; '.'
00000000000070b3         db  0x30 ; '0'
00000000000070b4         db  0x86 ; '.'
00000000000070b5         db  0x06 ; '.'
00000000000070b6         db  0x41 ; 'A'
00000000000070b7         db  0x0e ; '.'
00000000000070b8         db  0x38 ; '8'
00000000000070b9         db  0x83 ; '.'
00000000000070ba         db  0x07 ; '.'
00000000000070bb         db  0x4e ; 'N'
00000000000070bc         db  0x0e ; '.'
00000000000070bd         db  0xb0 ; '.'
00000000000070be         db  0x01 ; '.'
00000000000070bf         db  0x03 ; '.'
00000000000070c0         db  0xd2 ; '.'
00000000000070c1         db  0x03 ; '.'
00000000000070c2         db  0x0a ; '.'
00000000000070c3         db  0x0e ; '.'
00000000000070c4         db  0x38 ; '8'
00000000000070c5         db  0x41 ; 'A'
00000000000070c6         db  0x0e ; '.'
00000000000070c7         db  0x30 ; '0'
00000000000070c8         db  0x41 ; 'A'
00000000000070c9         db  0x0e ; '.'
00000000000070ca         db  0x28 ; '('
00000000000070cb         db  0x42 ; 'B'
00000000000070cc         db  0x0e ; '.'
00000000000070cd         db  0x20 ; ' '
00000000000070ce         db  0x42 ; 'B'
00000000000070cf         db  0x0e ; '.'
00000000000070d0         db  0x18 ; '.'
00000000000070d1         db  0x42 ; 'B'
00000000000070d2         db  0x0e ; '.'
00000000000070d3         db  0x10 ; '.'
00000000000070d4         db  0x42 ; 'B'
00000000000070d5         db  0x0e ; '.'
00000000000070d6         db  0x08 ; '.'
00000000000070d7         db  0x41 ; 'A'
00000000000070d8         db  0x0b ; '.'
00000000000070d9         db  0x00 ; '.'
00000000000070da         db  0x00 ; '.'
00000000000070db         db  0x00 ; '.'
00000000000070dc         db  0x00 ; '.'
00000000000070dd         db  0x00 ; '.'
00000000000070de         db  0x00 ; '.'
00000000000070df         db  0x00 ; '.'
00000000000070e0         dd         0x00000010                                  ; Length of the record
00000000000070e4         dd         0x000000dc                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000070e8         db         0x08, 0xb4, 2 dup (0xff)                    ; begin 0x24f0
00000000000070ec         db         0xaa, 0x01, 2 dup (0x00)                    ; length 0x1aa (end at 0x269a)
00000000000070f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070f1         align      4
00000000000070f4         dd         0x00000010                                  ; Length of the record
00000000000070f8         dd         0x000000f0                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000070fc         db         0xa4, 0xb5, 2 dup (0xff)                    ; begin 0x26a0
0000000000007100         db         0x19, 0x02, 2 dup (0x00)                    ; length 0x219 (end at 0x28b9)
0000000000007104         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007105         align      8
0000000000007108         dd         0x00000048                                  ; Length of the record
000000000000710c         dd         0x00000104                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007110         db         0xb0, 0xb7, 2 dup (0xff)                    ; begin 0x28c0
0000000000007114         db         0x87, 3 dup (0x00)                          ; length 0x87 (end at 0x2947)
0000000000007118         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007119         db  0x42 ; 'B'
000000000000711a         db  0x0e ; '.'
000000000000711b         db  0x10 ; '.'
000000000000711c         db  0x8e ; '.'
000000000000711d         db  0x02 ; '.'
000000000000711e         db  0x42 ; 'B'
000000000000711f         db  0x0e ; '.'
0000000000007120         db  0x18 ; '.'
0000000000007121         db  0x8d ; '.'
0000000000007122         db  0x03 ; '.'
0000000000007123         db  0x49 ; 'I'
0000000000007124         db  0x0e ; '.'
0000000000007125         db  0x20 ; ' '
0000000000007126         db  0x8c ; '.'
0000000000007127         db  0x04 ; '.'
0000000000007128         db  0x41 ; 'A'
0000000000007129         db  0x0e ; '.'
000000000000712a         db  0x28 ; '('
000000000000712b         db  0x86 ; '.'
000000000000712c         db  0x05 ; '.'
000000000000712d         db  0x41 ; 'A'
000000000000712e         db  0x0e ; '.'
000000000000712f         db  0x30 ; '0'
0000000000007130         db  0x83 ; '.'
0000000000007131         db  0x06 ; '.'
0000000000007132         db  0x70 ; 'p'
0000000000007133         db  0x0a ; '.'
0000000000007134         db  0x0e ; '.'
0000000000007135         db  0x28 ; '('
0000000000007136         db  0x44 ; 'D'
0000000000007137         db  0x0e ; '.'
0000000000007138         db  0x20 ; ' '
0000000000007139         db  0x42 ; 'B'
000000000000713a         db  0x0e ; '.'
000000000000713b         db  0x18 ; '.'
000000000000713c         db  0x42 ; 'B'
000000000000713d         db  0x0e ; '.'
000000000000713e         db  0x10 ; '.'
000000000000713f         db  0x42 ; 'B'
0000000000007140         db  0x0e ; '.'
0000000000007141         db  0x08 ; '.'
0000000000007142         db  0x47 ; 'G'
0000000000007143         db  0x0b ; '.'
0000000000007144         db  0x6c ; 'l'
0000000000007145         db  0x0e ; '.'
0000000000007146         db  0x28 ; '('
0000000000007147         db  0x44 ; 'D'
0000000000007148         db  0x0e ; '.'
0000000000007149         db  0x20 ; ' '
000000000000714a         db  0x42 ; 'B'
000000000000714b         db  0x0e ; '.'
000000000000714c         db  0x18 ; '.'
000000000000714d         db  0x42 ; 'B'
000000000000714e         db  0x0e ; '.'
000000000000714f         db  0x10 ; '.'
0000000000007150         db  0x42 ; 'B'
0000000000007151         db  0x0e ; '.'
0000000000007152         db  0x08 ; '.'
0000000000007153         db  0x00 ; '.'
0000000000007154         dd         0x00000010                                  ; Length of the record
0000000000007158         dd         0x00000150                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
000000000000715c         db         0xf4, 0xb7, 2 dup (0xff)                    ; begin 0x2950
0000000000007160         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x2965)
0000000000007164         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007165         align      8
0000000000007168         dd         0x00000010                                  ; Length of the record
000000000000716c         dd         0x00000164                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007170         db         0x00, 0xb8, 2 dup (0xff)                    ; begin 0x2970
0000000000007174         db         0x07, 3 dup (0x00)                          ; length 0x7 (end at 0x2977)
0000000000007178         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007179         align      4
000000000000717c         dd         0x00000048                                  ; Length of the record
0000000000007180         dd         0x00000178                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007184         db         0xfc, 0xb7, 2 dup (0xff)                    ; begin 0x2980
0000000000007188         db         0xae, 0x02, 2 dup (0x00)                    ; length 0x2ae (end at 0x2c2e)
000000000000718c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000718d         db  0x42 ; 'B'
000000000000718e         db  0x0e ; '.'
000000000000718f         db  0x10 ; '.'
0000000000007190         db  0x8f ; '.'
0000000000007191         db  0x02 ; '.'
0000000000007192         db  0x42 ; 'B'
0000000000007193         db  0x0e ; '.'
0000000000007194         db  0x18 ; '.'
0000000000007195         db  0x8e ; '.'
0000000000007196         db  0x03 ; '.'
0000000000007197         db  0x45 ; 'E'
0000000000007198         db  0x0e ; '.'
0000000000007199         db  0x20 ; ' '
000000000000719a         db  0x8d ; '.'
000000000000719b         db  0x04 ; '.'
000000000000719c         db  0x42 ; 'B'
000000000000719d         db  0x0e ; '.'
000000000000719e         db  0x28 ; '('
000000000000719f         db  0x8c ; '.'
00000000000071a0         db  0x05 ; '.'
00000000000071a1         db  0x44 ; 'D'
00000000000071a2         db  0x0e ; '.'
00000000000071a3         db  0x30 ; '0'
00000000000071a4         db  0x86 ; '.'
00000000000071a5         db  0x06 ; '.'
00000000000071a6         db  0x41 ; 'A'
00000000000071a7         db  0x0e ; '.'
00000000000071a8         db  0x38 ; '8'
00000000000071a9         db  0x83 ; '.'
00000000000071aa         db  0x07 ; '.'
00000000000071ab         db  0x47 ; 'G'
00000000000071ac         db  0x0e ; '.'
00000000000071ad         db  0x70 ; 'p'
00000000000071ae         db  0x03 ; '.'
00000000000071af         db  0x19 ; '.'
00000000000071b0         db  0x01 ; '.'
00000000000071b1         db  0x0a ; '.'
00000000000071b2         db  0x0e ; '.'
00000000000071b3         db  0x38 ; '8'
00000000000071b4         db  0x41 ; 'A'
00000000000071b5         db  0x0e ; '.'
00000000000071b6         db  0x30 ; '0'
00000000000071b7         db  0x41 ; 'A'
00000000000071b8         db  0x0e ; '.'
00000000000071b9         db  0x28 ; '('
00000000000071ba         db  0x42 ; 'B'
00000000000071bb         db  0x0e ; '.'
00000000000071bc         db  0x20 ; ' '
00000000000071bd         db  0x42 ; 'B'
00000000000071be         db  0x0e ; '.'
00000000000071bf         db  0x18 ; '.'
00000000000071c0         db  0x42 ; 'B'
00000000000071c1         db  0x0e ; '.'
00000000000071c2         db  0x10 ; '.'
00000000000071c3         db  0x42 ; 'B'
00000000000071c4         db  0x0e ; '.'
00000000000071c5         db  0x08 ; '.'
00000000000071c6         db  0x46 ; 'F'
00000000000071c7         db  0x0b ; '.'
00000000000071c8         dd         0x00000044                                  ; Length of the record
00000000000071cc         dd         0x000001c4                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000071d0         db         0x60, 0xba, 2 dup (0xff)                    ; begin 0x2c30
00000000000071d4         db         0xbf, 3 dup (0x00)                          ; length 0xbf (end at 0x2cef)
00000000000071d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071d9         db  0x42 ; 'B'
00000000000071da         db  0x0e ; '.'
00000000000071db         db  0x10 ; '.'
00000000000071dc         db  0x8e ; '.'
00000000000071dd         db  0x02 ; '.'
00000000000071de         db  0x42 ; 'B'
00000000000071df         db  0x0e ; '.'
00000000000071e0         db  0x18 ; '.'
00000000000071e1         db  0x8d ; '.'
00000000000071e2         db  0x03 ; '.'
00000000000071e3         db  0x45 ; 'E'
00000000000071e4         db  0x0e ; '.'
00000000000071e5         db  0x20 ; ' '
00000000000071e6         db  0x8c ; '.'
00000000000071e7         db  0x04 ; '.'
00000000000071e8         db  0x41 ; 'A'
00000000000071e9         db  0x0e ; '.'
00000000000071ea         db  0x28 ; '('
00000000000071eb         db  0x86 ; '.'
00000000000071ec         db  0x05 ; '.'
00000000000071ed         db  0x44 ; 'D'
00000000000071ee         db  0x0e ; '.'
00000000000071ef         db  0x30 ; '0'
00000000000071f0         db  0x83 ; '.'
00000000000071f1         db  0x06 ; '.'
00000000000071f2         db  0x4d ; 'M'
00000000000071f3         db  0x0e ; '.'
00000000000071f4         db  0x50 ; 'P'
00000000000071f5         db  0x02 ; '.'
00000000000071f6         db  0x76 ; 'v'
00000000000071f7         db  0x0a ; '.'
00000000000071f8         db  0x0e ; '.'
00000000000071f9         db  0x30 ; '0'
00000000000071fa         db  0x41 ; 'A'
00000000000071fb         db  0x0e ; '.'
00000000000071fc         db  0x28 ; '('
00000000000071fd         db  0x41 ; 'A'
00000000000071fe         db  0x0e ; '.'
00000000000071ff         db  0x20 ; ' '
0000000000007200         db  0x42 ; 'B'
0000000000007201         db  0x0e ; '.'
0000000000007202         db  0x18 ; '.'
0000000000007203         db  0x42 ; 'B'
0000000000007204         db  0x0e ; '.'
0000000000007205         db  0x10 ; '.'
0000000000007206         db  0x42 ; 'B'
0000000000007207         db  0x0e ; '.'
0000000000007208         db  0x08 ; '.'
0000000000007209         db  0x47 ; 'G'
000000000000720a         db  0x0b ; '.'
000000000000720b         db  0x00 ; '.'
000000000000720c         db  0x00 ; '.'
000000000000720d         db  0x00 ; '.'
000000000000720e         db  0x00 ; '.'
000000000000720f         db  0x00 ; '.'
0000000000007210         dd         0x00000010                                  ; Length of the record
0000000000007214         dd         0x0000020c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007218         db         0xd8, 0xba, 2 dup (0xff)                    ; begin 0x2cf0
000000000000721c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2cf8)
0000000000007220         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007221         align      4
0000000000007224         dd         0x00000010                                  ; Length of the record
0000000000007228         dd         0x00000220                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
000000000000722c         db         0xd4, 0xba, 2 dup (0xff)                    ; begin 0x2d00
0000000000007230         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2d08)
0000000000007234         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007235         align      8
0000000000007238         dd         0x0000002c                                  ; Length of the record
000000000000723c         dd         0x00000234                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007240         db         0xd0, 0xba, 2 dup (0xff)                    ; begin 0x2d10
0000000000007244         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2db4)
0000000000007248         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007249         db  0x41 ; 'A'
000000000000724a         db  0x0e ; '.'
000000000000724b         db  0x10 ; '.'
000000000000724c         db  0x86 ; '.'
000000000000724d         db  0x02 ; '.'
000000000000724e         db  0x41 ; 'A'
000000000000724f         db  0x0e ; '.'
0000000000007250         db  0x18 ; '.'
0000000000007251         db  0x83 ; '.'
0000000000007252         db  0x03 ; '.'
0000000000007253         db  0x44 ; 'D'
0000000000007254         db  0x0e ; '.'
0000000000007255         db  0x20 ; ' '
0000000000007256         db  0x7a ; 'z'
0000000000007257         db  0x0a ; '.'
0000000000007258         db  0x0e ; '.'
0000000000007259         db  0x18 ; '.'
000000000000725a         db  0x41 ; 'A'
000000000000725b         db  0x0e ; '.'
000000000000725c         db  0x10 ; '.'
000000000000725d         db  0x41 ; 'A'
000000000000725e         db  0x0e ; '.'
000000000000725f         db  0x08 ; '.'
0000000000007260         db  0x41 ; 'A'
0000000000007261         db  0x0b ; '.'
0000000000007262         db  0x00 ; '.'
0000000000007263         db  0x00 ; '.'
0000000000007264         db  0x00 ; '.'
0000000000007265         db  0x00 ; '.'
0000000000007266         db  0x00 ; '.'
0000000000007267         db  0x00 ; '.'
0000000000007268         dd         0x00000010                                  ; Length of the record
000000000000726c         dd         0x00000264                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007270         db         0x50, 0xbb, 2 dup (0xff)                    ; begin 0x2dc0
0000000000007274         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x2dc5)
0000000000007278         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007279         align      4
000000000000727c         dd         0x00000018                                  ; Length of the record
0000000000007280         dd         0x00000278                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007284         db         0x4c, 0xbb, 2 dup (0xff)                    ; begin 0x2dd0
0000000000007288         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x2df2)
000000000000728c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000728d         db  0x46 ; 'F'
000000000000728e         db  0x0e ; '.'
000000000000728f         db  0x10 ; '.'
0000000000007290         db  0x83 ; '.'
0000000000007291         db  0x02 ; '.'
0000000000007292         db  0x4e ; 'N'
0000000000007293         db  0xc3 ; '.'
0000000000007294         db  0x0e ; '.'
0000000000007295         db  0x08 ; '.'
0000000000007296         db  0x00 ; '.'
0000000000007297         db  0x00 ; '.'
0000000000007298         dd         0x0000001c                                  ; Length of the record
000000000000729c         dd         0x00000294                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000072a0         db         0x60, 0xbb, 2 dup (0xff)                    ; begin 0x2e00
00000000000072a4         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x2e9f)
00000000000072a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072a9         db  0x44 ; 'D'
00000000000072aa         db  0x0e ; '.'
00000000000072ab         db  0x10 ; '.'
00000000000072ac         db  0x83 ; '.'
00000000000072ad         db  0x02 ; '.'
00000000000072ae         db  0x02 ; '.'
00000000000072af         db  0x78 ; 'x'
00000000000072b0         db  0x0a ; '.'
00000000000072b1         db  0x0e ; '.'
00000000000072b2         db  0x08 ; '.'
00000000000072b3         db  0x41 ; 'A'
00000000000072b4         db  0x0b ; '.'
00000000000072b5         db  0x00 ; '.'
00000000000072b6         db  0x00 ; '.'
00000000000072b7         db  0x00 ; '.'
00000000000072b8         dd         0x00000040                                  ; Length of the record
00000000000072bc         dd         0x000002b4                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000072c0         db         0xe0, 0xbb, 2 dup (0xff)                    ; begin 0x2ea0
00000000000072c4         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2f87)
00000000000072c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072c9         db  0x41 ; 'A'
00000000000072ca         db  0x0e ; '.'
00000000000072cb         db  0x10 ; '.'
00000000000072cc         db  0x86 ; '.'
00000000000072cd         db  0x02 ; '.'
00000000000072ce         db  0x41 ; 'A'
00000000000072cf         db  0x0e ; '.'
00000000000072d0         db  0x18 ; '.'
00000000000072d1         db  0x83 ; '.'
00000000000072d2         db  0x03 ; '.'
00000000000072d3         db  0x49 ; 'I'
00000000000072d4         db  0x0e ; '.'
00000000000072d5         db  0x20 ; ' '
00000000000072d6         db  0x6e ; 'n'
00000000000072d7         db  0x0a ; '.'
00000000000072d8         db  0x0e ; '.'
00000000000072d9         db  0x18 ; '.'
00000000000072da         db  0x41 ; 'A'
00000000000072db         db  0x0e ; '.'
00000000000072dc         db  0x10 ; '.'
00000000000072dd         db  0x41 ; 'A'
00000000000072de         db  0x0e ; '.'
00000000000072df         db  0x08 ; '.'
00000000000072e0         db  0x45 ; 'E'
00000000000072e1         db  0x0b ; '.'
00000000000072e2         db  0x02 ; '.'
00000000000072e3         db  0x4a ; 'J'
00000000000072e4         db  0x0a ; '.'
00000000000072e5         db  0x0e ; '.'
00000000000072e6         db  0x18 ; '.'
00000000000072e7         db  0x41 ; 'A'
00000000000072e8         db  0x0e ; '.'
00000000000072e9         db  0x10 ; '.'
00000000000072ea         db  0x41 ; 'A'
00000000000072eb         db  0x0e ; '.'
00000000000072ec         db  0x08 ; '.'
00000000000072ed         db  0x44 ; 'D'
00000000000072ee         db  0x0b ; '.'
00000000000072ef         db  0x02 ; '.'
00000000000072f0         db  0x54 ; 'T'
00000000000072f1         db  0x0e ; '.'
00000000000072f2         db  0x18 ; '.'
00000000000072f3         db  0x41 ; 'A'
00000000000072f4         db  0x0e ; '.'
00000000000072f5         db  0x10 ; '.'
00000000000072f6         db  0x41 ; 'A'
00000000000072f7         db  0x0e ; '.'
00000000000072f8         db  0x08 ; '.'
00000000000072f9         db  0x00 ; '.'
00000000000072fa         db  0x00 ; '.'
00000000000072fb         db  0x00 ; '.'
00000000000072fc         dd         0x00000074                                  ; Length of the record
0000000000007300         dd         0x000002f8                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007304         db         0x8c, 0xbc, 2 dup (0xff)                    ; begin 0x2f90
0000000000007308         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x41c4)
000000000000730c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000730d         db  0x42 ; 'B'
000000000000730e         db  0x0e ; '.'
000000000000730f         db  0x10 ; '.'
0000000000007310         db  0x8f ; '.'
0000000000007311         db  0x02 ; '.'
0000000000007312         db  0x42 ; 'B'
0000000000007313         db  0x0e ; '.'
0000000000007314         db  0x18 ; '.'
0000000000007315         db  0x8e ; '.'
0000000000007316         db  0x03 ; '.'
0000000000007317         db  0x45 ; 'E'
0000000000007318         db  0x0e ; '.'
0000000000007319         db  0x20 ; ' '
000000000000731a         db  0x8d ; '.'
000000000000731b         db  0x04 ; '.'
000000000000731c         db  0x42 ; 'B'
000000000000731d         db  0x0e ; '.'
000000000000731e         db  0x28 ; '('
000000000000731f         db  0x8c ; '.'
0000000000007320         db  0x05 ; '.'
0000000000007321         db  0x44 ; 'D'
0000000000007322         db  0x0e ; '.'
0000000000007323         db  0x30 ; '0'
0000000000007324         db  0x86 ; '.'
0000000000007325         db  0x06 ; '.'
0000000000007326         db  0x41 ; 'A'
0000000000007327         db  0x0e ; '.'
0000000000007328         db  0x38 ; '8'
0000000000007329         db  0x83 ; '.'
000000000000732a         db  0x07 ; '.'
000000000000732b         db  0x53 ; 'S'
000000000000732c         db  0x0e ; '.'
000000000000732d         db  0xf0 ; '.'
000000000000732e         db  0x01 ; '.'
000000000000732f         db  0x03 ; '.'
0000000000007330         db  0x81 ; '.'
0000000000007331         db  0x0b ; '.'
0000000000007332         db  0x0e ; '.'
0000000000007333         db  0xf8 ; '.'
0000000000007334         db  0x01 ; '.'
0000000000007335         db  0x4a ; 'J'
0000000000007336         db  0x0e ; '.'
0000000000007337         db  0x80 ; '.'
0000000000007338         db  0x02 ; '.'
0000000000007339         db  0x44 ; 'D'
000000000000733a         db  0x0e ; '.'
000000000000733b         db  0x88 ; '.'
000000000000733c         db  0x02 ; '.'
000000000000733d         db  0x45 ; 'E'
000000000000733e         db  0x0e ; '.'
000000000000733f         db  0x90 ; '.'
0000000000007340         db  0x02 ; '.'
0000000000007341         db  0x5f ; '_'
0000000000007342         db  0x0e ; '.'
0000000000007343         db  0xf0 ; '.'
0000000000007344         db  0x01 ; '.'
0000000000007345         db  0x64 ; 'd'
0000000000007346         db  0x0a ; '.'
0000000000007347         db  0x0e ; '.'
0000000000007348         db  0x38 ; '8'
0000000000007349         db  0x41 ; 'A'
000000000000734a         db  0x0e ; '.'
000000000000734b         db  0x30 ; '0'
000000000000734c         db  0x41 ; 'A'
000000000000734d         db  0x0e ; '.'
000000000000734e         db  0x28 ; '('
000000000000734f         db  0x42 ; 'B'
0000000000007350         db  0x0e ; '.'
0000000000007351         db  0x20 ; ' '
0000000000007352         db  0x42 ; 'B'
0000000000007353         db  0x0e ; '.'
0000000000007354         db  0x18 ; '.'
0000000000007355         db  0x42 ; 'B'
0000000000007356         db  0x0e ; '.'
0000000000007357         db  0x10 ; '.'
0000000000007358         db  0x42 ; 'B'
0000000000007359         db  0x0e ; '.'
000000000000735a         db  0x08 ; '.'
000000000000735b         db  0x44 ; 'D'
000000000000735c         db  0x0b ; '.'
000000000000735d         db  0x03 ; '.'
000000000000735e         db  0x99 ; '.'
000000000000735f         db  0x05 ; '.'
0000000000007360         db  0x0e ; '.'
0000000000007361         db  0xf8 ; '.'
0000000000007362         db  0x01 ; '.'
0000000000007363         db  0x4d ; 'M'
0000000000007364         db  0x0e ; '.'
0000000000007365         db  0x80 ; '.'
0000000000007366         db  0x02 ; '.'
0000000000007367         db  0x44 ; 'D'
0000000000007368         db  0x0e ; '.'
0000000000007369         db  0x88 ; '.'
000000000000736a         db  0x02 ; '.'
000000000000736b         db  0x47 ; 'G'
000000000000736c         db  0x0e ; '.'
000000000000736d         db  0x90 ; '.'
000000000000736e         db  0x02 ; '.'
000000000000736f         db  0x5b ; '['
0000000000007370         db  0x0e ; '.'
0000000000007371         db  0xf0 ; '.'
0000000000007372         db  0x01 ; '.'
0000000000007373         db  0x00 ; '.'
0000000000007374         dd         0x00000068                                  ; Length of the record
0000000000007378         dd         0x00000370                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
000000000000737c         db         0x54, 0xce, 2 dup (0xff)                    ; begin 0x41d0
0000000000007380         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x437b)
0000000000007384         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007385         db  0x42 ; 'B'
0000000000007386         db  0x0e ; '.'
0000000000007387         db  0x10 ; '.'
0000000000007388         db  0x8f ; '.'
0000000000007389         db  0x02 ; '.'
000000000000738a         db  0x42 ; 'B'
000000000000738b         db  0x0e ; '.'
000000000000738c         db  0x18 ; '.'
000000000000738d         db  0x8e ; '.'
000000000000738e         db  0x03 ; '.'
000000000000738f         db  0x45 ; 'E'
0000000000007390         db  0x0e ; '.'
0000000000007391         db  0x20 ; ' '
0000000000007392         db  0x8d ; '.'
0000000000007393         db  0x04 ; '.'
0000000000007394         db  0x42 ; 'B'
0000000000007395         db  0x0e ; '.'
0000000000007396         db  0x28 ; '('
0000000000007397         db  0x8c ; '.'
0000000000007398         db  0x05 ; '.'
0000000000007399         db  0x44 ; 'D'
000000000000739a         db  0x0e ; '.'
000000000000739b         db  0x30 ; '0'
000000000000739c         db  0x86 ; '.'
000000000000739d         db  0x06 ; '.'
000000000000739e         db  0x41 ; 'A'
000000000000739f         db  0x0e ; '.'
00000000000073a0         db  0x38 ; '8'
00000000000073a1         db  0x83 ; '.'
00000000000073a2         db  0x07 ; '.'
00000000000073a3         db  0x47 ; 'G'
00000000000073a4         db  0x0e ; '.'
00000000000073a5         db  0x60 ; '`'
00000000000073a6         db  0x02 ; '.'
00000000000073a7         db  0x99 ; '.'
00000000000073a8         db  0x0e ; '.'
00000000000073a9         db  0x68 ; 'h'
00000000000073aa         db  0x5f ; '_'
00000000000073ab         db  0x0e ; '.'
00000000000073ac         db  0x70 ; 'p'
00000000000073ad         db  0x46 ; 'F'
00000000000073ae         db  0x0e ; '.'
00000000000073af         db  0x78 ; 'x'
00000000000073b0         db  0x42 ; 'B'
00000000000073b1         db  0x0e ; '.'
00000000000073b2         db  0x80 ; '.'
00000000000073b3         db  0x01 ; '.'
00000000000073b4         db  0x59 ; 'Y'
00000000000073b5         db  0x0e ; '.'
00000000000073b6         db  0x60 ; '`'
00000000000073b7         db  0x02 ; '.'
00000000000073b8         db  0x40 ; '@'
00000000000073b9         db  0x0e ; '.'
00000000000073ba         db  0x68 ; 'h'
00000000000073bb         db  0x4b ; 'K'
00000000000073bc         db  0x0e ; '.'
00000000000073bd         db  0x70 ; 'p'
00000000000073be         db  0x43 ; 'C'
00000000000073bf         db  0x0e ; '.'
00000000000073c0         db  0x78 ; 'x'
00000000000073c1         db  0x45 ; 'E'
00000000000073c2         db  0x0e ; '.'
00000000000073c3         db  0x80 ; '.'
00000000000073c4         db  0x01 ; '.'
00000000000073c5         db  0x5e ; '^'
00000000000073c6         db  0x0e ; '.'
00000000000073c7         db  0x60 ; '`'
00000000000073c8         db  0x4c ; 'L'
00000000000073c9         db  0x0a ; '.'
00000000000073ca         db  0x0e ; '.'
00000000000073cb         db  0x38 ; '8'
00000000000073cc         db  0x44 ; 'D'
00000000000073cd         db  0x0e ; '.'
00000000000073ce         db  0x30 ; '0'
00000000000073cf         db  0x41 ; 'A'
00000000000073d0         db  0x0e ; '.'
00000000000073d1         db  0x28 ; '('
00000000000073d2         db  0x42 ; 'B'
00000000000073d3         db  0x0e ; '.'
00000000000073d4         db  0x20 ; ' '
00000000000073d5         db  0x42 ; 'B'
00000000000073d6         db  0x0e ; '.'
00000000000073d7         db  0x18 ; '.'
00000000000073d8         db  0x42 ; 'B'
00000000000073d9         db  0x0e ; '.'
00000000000073da         db  0x10 ; '.'
00000000000073db         db  0x42 ; 'B'
00000000000073dc         db  0x0e ; '.'
00000000000073dd         db  0x08 ; '.'
00000000000073de         db  0x46 ; 'F'
00000000000073df         db  0x0b ; '.'
00000000000073e0         dd         0x00000028                                  ; Length of the record
00000000000073e4         dd         0x000003dc                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000073e8         db         0x98, 0xcf, 2 dup (0xff)                    ; begin 0x4380
00000000000073ec         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x43b6)
00000000000073f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073f1         db  0x42 ; 'B'
00000000000073f2         db  0x0e ; '.'
00000000000073f3         db  0x10 ; '.'
00000000000073f4         db  0x8c ; '.'
00000000000073f5         db  0x02 ; '.'
00000000000073f6         db  0x41 ; 'A'
00000000000073f7         db  0x0e ; '.'
00000000000073f8         db  0x18 ; '.'
00000000000073f9         db  0x86 ; '.'
00000000000073fa         db  0x03 ; '.'
00000000000073fb         db  0x41 ; 'A'
00000000000073fc         db  0x0e ; '.'
00000000000073fd         db  0x20 ; ' '
00000000000073fe         db  0x83 ; '.'
00000000000073ff         db  0x04 ; '.'
0000000000007400         db  0x6e ; 'n'
0000000000007401         db  0x0e ; '.'
0000000000007402         db  0x18 ; '.'
0000000000007403         db  0x41 ; 'A'
0000000000007404         db  0x0e ; '.'
0000000000007405         db  0x10 ; '.'
0000000000007406         db  0x42 ; 'B'
0000000000007407         db  0x0e ; '.'
0000000000007408         db  0x08 ; '.'
0000000000007409         db  0x00 ; '.'
000000000000740a         db  0x00 ; '.'
000000000000740b         db  0x00 ; '.'
000000000000740c         dd         0x00000010                                  ; Length of the record
0000000000007410         dd         0x00000408                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007414         db         0xac, 0xcf, 2 dup (0xff)                    ; begin 0x43c0
0000000000007418         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x43d1)
000000000000741c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000741d         align      32
0000000000007420         dd         0x00000010                                  ; Length of the record
0000000000007424         dd         0x0000041c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007428         db         0xb8, 0xcf, 2 dup (0xff)                    ; begin 0x43e0
000000000000742c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x43f1)
0000000000007430         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007431         align      4
0000000000007434         dd         0x00000010                                  ; Length of the record
0000000000007438         dd         0x00000430                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
000000000000743c         db         0xc4, 0xcf, 2 dup (0xff)                    ; begin 0x4400
0000000000007440         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4435)
0000000000007444         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007445         align      8
0000000000007448         dd         0x00000010                                  ; Length of the record
000000000000744c         dd         0x00000444                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007450         db         0xf0, 0xcf, 2 dup (0xff)                    ; begin 0x4440
0000000000007454         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4455)
0000000000007458         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007459         align      4
000000000000745c         dd         0x00000010                                  ; Length of the record
0000000000007460         dd         0x00000458                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007464         db         0xfc, 0xcf, 2 dup (0xff)                    ; begin 0x4460
0000000000007468         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4490)
000000000000746c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000746d         db  0x6b ; 'k'
000000000000746e         db  0x0e ; '.'
000000000000746f         db  0x10 ; '.'
0000000000007470         dd         0x00000050                                  ; Length of the record
0000000000007474         dd         0x0000046c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007478         db         0x18, 0xd0, 2 dup (0xff)                    ; begin 0x4490
000000000000747c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x4504)
0000000000007480         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007481         db  0x42 ; 'B'
0000000000007482         db  0x0e ; '.'
0000000000007483         db  0x10 ; '.'
0000000000007484         db  0x8f ; '.'
0000000000007485         db  0x02 ; '.'
0000000000007486         db  0x42 ; 'B'
0000000000007487         db  0x0e ; '.'
0000000000007488         db  0x18 ; '.'
0000000000007489         db  0x8e ; '.'
000000000000748a         db  0x03 ; '.'
000000000000748b         db  0x49 ; 'I'
000000000000748c         db  0x0e ; '.'
000000000000748d         db  0x20 ; ' '
000000000000748e         db  0x8d ; '.'
000000000000748f         db  0x04 ; '.'
0000000000007490         db  0x42 ; 'B'
0000000000007491         db  0x0e ; '.'
0000000000007492         db  0x28 ; '('
0000000000007493         db  0x8c ; '.'
0000000000007494         db  0x05 ; '.'
0000000000007495         db  0x44 ; 'D'
0000000000007496         db  0x0e ; '.'
0000000000007497         db  0x30 ; '0'
0000000000007498         db  0x86 ; '.'
0000000000007499         db  0x06 ; '.'
000000000000749a         db  0x41 ; 'A'
000000000000749b         db  0x0e ; '.'
000000000000749c         db  0x38 ; '8'
000000000000749d         db  0x83 ; '.'
000000000000749e         db  0x07 ; '.'
000000000000749f         db  0x4d ; 'M'
00000000000074a0         db  0x0e ; '.'
00000000000074a1         db  0x50 ; 'P'
00000000000074a2         db  0x5f ; '_'
00000000000074a3         db  0x0e ; '.'
00000000000074a4         db  0x58 ; 'X'
00000000000074a5         db  0x47 ; 'G'
00000000000074a6         db  0x0e ; '.'
00000000000074a7         db  0x60 ; '`'
00000000000074a8         db  0x46 ; 'F'
00000000000074a9         db  0x0e ; '.'
00000000000074aa         db  0x68 ; 'h'
00000000000074ab         db  0x44 ; 'D'
00000000000074ac         db  0x0e ; '.'
00000000000074ad         db  0x70 ; 'p'
00000000000074ae         db  0x58 ; 'X'
00000000000074af         db  0x0e ; '.'
00000000000074b0         db  0x38 ; '8'
00000000000074b1         db  0x41 ; 'A'
00000000000074b2         db  0x0e ; '.'
00000000000074b3         db  0x30 ; '0'
00000000000074b4         db  0x41 ; 'A'
00000000000074b5         db  0x0e ; '.'
00000000000074b6         db  0x28 ; '('
00000000000074b7         db  0x42 ; 'B'
00000000000074b8         db  0x0e ; '.'
00000000000074b9         db  0x20 ; ' '
00000000000074ba         db  0x42 ; 'B'
00000000000074bb         db  0x0e ; '.'
00000000000074bc         db  0x18 ; '.'
00000000000074bd         db  0x42 ; 'B'
00000000000074be         db  0x0e ; '.'
00000000000074bf         db  0x10 ; '.'
00000000000074c0         db  0x42 ; 'B'
00000000000074c1         db  0x0e ; '.'
00000000000074c2         db  0x08 ; '.'
00000000000074c3         db  0x00 ; '.'
00000000000074c4         dd         0x00000068                                  ; Length of the record
00000000000074c8         dd         0x000004c0                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000074cc         db         0x44, 0xd0, 2 dup (0xff)                    ; begin 0x4510
00000000000074d0         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x45f3)
00000000000074d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074d5         db  0x42 ; 'B'
00000000000074d6         db  0x0e ; '.'
00000000000074d7         db  0x10 ; '.'
00000000000074d8         db  0x8f ; '.'
00000000000074d9         db  0x02 ; '.'
00000000000074da         db  0x42 ; 'B'
00000000000074db         db  0x0e ; '.'
00000000000074dc         db  0x18 ; '.'
00000000000074dd         db  0x8e ; '.'
00000000000074de         db  0x03 ; '.'
00000000000074df         db  0x49 ; 'I'
00000000000074e0         db  0x0e ; '.'
00000000000074e1         db  0x20 ; ' '
00000000000074e2         db  0x8d ; '.'
00000000000074e3         db  0x04 ; '.'
00000000000074e4         db  0x42 ; 'B'
00000000000074e5         db  0x0e ; '.'
00000000000074e6         db  0x28 ; '('
00000000000074e7         db  0x8c ; '.'
00000000000074e8         db  0x05 ; '.'
00000000000074e9         db  0x44 ; 'D'
00000000000074ea         db  0x0e ; '.'
00000000000074eb         db  0x30 ; '0'
00000000000074ec         db  0x86 ; '.'
00000000000074ed         db  0x06 ; '.'
00000000000074ee         db  0x41 ; 'A'
00000000000074ef         db  0x0e ; '.'
00000000000074f0         db  0x38 ; '8'
00000000000074f1         db  0x83 ; '.'
00000000000074f2         db  0x07 ; '.'
00000000000074f3         db  0x4d ; 'M'
00000000000074f4         db  0x0e ; '.'
00000000000074f5         db  0x70 ; 'p'
00000000000074f6         db  0x65 ; 'e'
00000000000074f7         db  0x0e ; '.'
00000000000074f8         db  0x78 ; 'x'
00000000000074f9         db  0x4d ; 'M'
00000000000074fa         db  0x0e ; '.'
00000000000074fb         db  0x80 ; '.'
00000000000074fc         db  0x01 ; '.'
00000000000074fd         db  0x46 ; 'F'
00000000000074fe         db  0x0e ; '.'
00000000000074ff         db  0x88 ; '.'
0000000000007500         db  0x01 ; '.'
0000000000007501         db  0x42 ; 'B'
0000000000007502         db  0x0e ; '.'
0000000000007503         db  0x90 ; '.'
0000000000007504         db  0x01 ; '.'
0000000000007505         db  0x5e ; '^'
0000000000007506         db  0x0e ; '.'
0000000000007507         db  0x70 ; 'p'
0000000000007508         db  0x56 ; 'V'
0000000000007509         db  0x0e ; '.'
000000000000750a         db  0x78 ; 'x'
000000000000750b         db  0x43 ; 'C'
000000000000750c         db  0x0e ; '.'
000000000000750d         db  0x80 ; '.'
000000000000750e         db  0x01 ; '.'
000000000000750f         db  0x43 ; 'C'
0000000000007510         db  0x0e ; '.'
0000000000007511         db  0x88 ; '.'
0000000000007512         db  0x01 ; '.'
0000000000007513         db  0x56 ; 'V'
0000000000007514         db  0x0e ; '.'
0000000000007515         db  0x90 ; '.'
0000000000007516         db  0x01 ; '.'
0000000000007517         db  0x52 ; 'R'
0000000000007518         db  0x0e ; '.'
0000000000007519         db  0x70 ; 'p'
000000000000751a         db  0x5b ; '['
000000000000751b         db  0x0e ; '.'
000000000000751c         db  0x38 ; '8'
000000000000751d         db  0x41 ; 'A'
000000000000751e         db  0x0e ; '.'
000000000000751f         db  0x30 ; '0'
0000000000007520         db  0x41 ; 'A'
0000000000007521         db  0x0e ; '.'
0000000000007522         db  0x28 ; '('
0000000000007523         db  0x42 ; 'B'
0000000000007524         db  0x0e ; '.'
0000000000007525         db  0x20 ; ' '
0000000000007526         db  0x42 ; 'B'
0000000000007527         db  0x0e ; '.'
0000000000007528         db  0x18 ; '.'
0000000000007529         db  0x42 ; 'B'
000000000000752a         db  0x0e ; '.'
000000000000752b         db  0x10 ; '.'
000000000000752c         db  0x42 ; 'B'
000000000000752d         db  0x0e ; '.'
000000000000752e         db  0x08 ; '.'
000000000000752f         db  0x00 ; '.'
0000000000007530         dd         0x00000010                                  ; Length of the record
0000000000007534         dd         0x0000052c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007538         db         0xc8, 0xd0, 2 dup (0xff)                    ; begin 0x4600
000000000000753c         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x460a)
0000000000007540         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007541         align      4
0000000000007544         dd         0x00000028                                  ; Length of the record
0000000000007548         dd         0x00000540                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
000000000000754c         db         0xc4, 0xd0, 2 dup (0xff)                    ; begin 0x4610
0000000000007550         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x46a3)
0000000000007554         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007555         db  0x48 ; 'H'
0000000000007556         db  0x0e ; '.'
0000000000007557         db  0x10 ; '.'
0000000000007558         db  0x8c ; '.'
0000000000007559         db  0x02 ; '.'
000000000000755a         db  0x48 ; 'H'
000000000000755b         db  0x0e ; '.'
000000000000755c         db  0x18 ; '.'
000000000000755d         db  0x86 ; '.'
000000000000755e         db  0x03 ; '.'
000000000000755f         db  0x41 ; 'A'
0000000000007560         db  0x0e ; '.'
0000000000007561         db  0x20 ; ' '
0000000000007562         db  0x83 ; '.'
0000000000007563         db  0x04 ; '.'
0000000000007564         db  0x02 ; '.'
0000000000007565         db  0x74 ; 't'
0000000000007566         db  0x0e ; '.'
0000000000007567         db  0x18 ; '.'
0000000000007568         db  0x4b ; 'K'
0000000000007569         db  0x0e ; '.'
000000000000756a         db  0x10 ; '.'
000000000000756b         db  0x42 ; 'B'
000000000000756c         db  0x0e ; '.'
000000000000756d         db  0x08 ; '.'
000000000000756e         db  0x00 ; '.'
000000000000756f         db  0x00 ; '.'
0000000000007570         dd         0x00000010                                  ; Length of the record
0000000000007574         dd         0x0000056c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007578         db         0x38, 0xd1, 2 dup (0xff)                    ; begin 0x46b0
000000000000757c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x46c3)
0000000000007580         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007581         align      4
0000000000007584         dd         0x00000010                                  ; Length of the record
0000000000007588         dd         0x00000580                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
000000000000758c         db         0x44, 0xd1, 2 dup (0xff)                    ; begin 0x46d0
0000000000007590         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x46dc)
0000000000007594         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007595         align      8
0000000000007598         dd         0x00000010                                  ; Length of the record
000000000000759c         dd         0x00000594                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000075a0         db         0x40, 0xd1, 2 dup (0xff)                    ; begin 0x46e0
00000000000075a4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x46f8)
00000000000075a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075a9         align      4
00000000000075ac         dd         0x00000010                                  ; Length of the record
00000000000075b0         dd         0x000005a8                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000075b4         db         0x4c, 0xd1, 2 dup (0xff)                    ; begin 0x4700
00000000000075b8         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4714)
00000000000075bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075bd         align      64
00000000000075c0         dd         0x00000018                                  ; Length of the record
00000000000075c4         dd         0x000005bc                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000075c8         db         0x58, 0xd1, 2 dup (0xff)                    ; begin 0x4720
00000000000075cc         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x47ae)
00000000000075d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075d1         db  0x44 ; 'D'
00000000000075d2         db  0x0e ; '.'
00000000000075d3         db  0x50 ; 'P'
00000000000075d4         db  0x02 ; '.'
00000000000075d5         db  0x7f ; '.'
00000000000075d6         db  0x0a ; '.'
00000000000075d7         db  0x0e ; '.'
00000000000075d8         db  0x08 ; '.'
00000000000075d9         db  0x41 ; 'A'
00000000000075da         db  0x0b ; '.'
00000000000075db         db  0x00 ; '.'
00000000000075dc         dd         0x00000018                                  ; Length of the record
00000000000075e0         dd         0x000005d8                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000075e4         db         0xcc, 0xd1, 2 dup (0xff)                    ; begin 0x47b0
00000000000075e8         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x483a)
00000000000075ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075ed         db  0x44 ; 'D'
00000000000075ee         db  0x0e ; '.'
00000000000075ef         db  0x50 ; 'P'
00000000000075f0         db  0x02 ; '.'
00000000000075f1         db  0x7b ; '{'
00000000000075f2         db  0x0a ; '.'
00000000000075f3         db  0x0e ; '.'
00000000000075f4         db  0x08 ; '.'
00000000000075f5         db  0x41 ; 'A'
00000000000075f6         db  0x0b ; '.'
00000000000075f7         db  0x00 ; '.'
00000000000075f8         dd         0x00000010                                  ; Length of the record
00000000000075fc         dd         0x000005f4                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007600         db         0x40, 0xd2, 2 dup (0xff)                    ; begin 0x4840
0000000000007604         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x484c)
0000000000007608         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007609         align      4
000000000000760c         dd         0x00000010                                  ; Length of the record
0000000000007610         dd         0x00000608                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007614         db         0x3c, 0xd2, 2 dup (0xff)                    ; begin 0x4850
0000000000007618         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x485f)
000000000000761c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000761d         align      32
0000000000007620         dd         0x00000018                                  ; Length of the record
0000000000007624         dd         0x0000061c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007628         db         0x38, 0xd2, 2 dup (0xff)                    ; begin 0x4860
000000000000762c         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x48f8)
0000000000007630         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007631         db  0x44 ; 'D'
0000000000007632         db  0x0e ; '.'
0000000000007633         db  0x50 ; 'P'
0000000000007634         db  0x02 ; '.'
0000000000007635         db  0x8e ; '.'
0000000000007636         db  0x0a ; '.'
0000000000007637         db  0x0e ; '.'
0000000000007638         db  0x08 ; '.'
0000000000007639         db  0x41 ; 'A'
000000000000763a         db  0x0b ; '.'
000000000000763b         db  0x00 ; '.'
000000000000763c         dd         0x00000010                                  ; Length of the record
0000000000007640         dd         0x00000638                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007644         db         0xbc, 0xd2, 2 dup (0xff)                    ; begin 0x4900
0000000000007648         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x4910)
000000000000764c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000764d         align      16
0000000000007650         dd         0x00000010                                  ; Length of the record
0000000000007654         dd         0x0000064c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007658         db         0xb8, 0xd2, 2 dup (0xff)                    ; begin 0x4910
000000000000765c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4921)
0000000000007660         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007661         align      4
0000000000007664         dd         0x00000010                                  ; Length of the record
0000000000007668         dd         0x00000660                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
000000000000766c         db         0xc4, 0xd2, 2 dup (0xff)                    ; begin 0x4930
0000000000007670         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x493a)
0000000000007674         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007675         align      8
0000000000007678         dd         0x00000018                                  ; Length of the record
000000000000767c         dd         0x00000674                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007680         db         0xc0, 0xd2, 2 dup (0xff)                    ; begin 0x4940
0000000000007684         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x49ce)
0000000000007688         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007689         db  0x44 ; 'D'
000000000000768a         db  0x0e ; '.'
000000000000768b         db  0x50 ; 'P'
000000000000768c         db  0x02 ; '.'
000000000000768d         db  0x7f ; '.'
000000000000768e         db  0x0a ; '.'
000000000000768f         db  0x0e ; '.'
0000000000007690         db  0x08 ; '.'
0000000000007691         db  0x41 ; 'A'
0000000000007692         db  0x0b ; '.'
0000000000007693         db  0x00 ; '.'
0000000000007694         dd         0x00000018                                  ; Length of the record
0000000000007698         dd         0x00000690                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
000000000000769c         db         0x34, 0xd3, 2 dup (0xff)                    ; begin 0x49d0
00000000000076a0         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x4a61)
00000000000076a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000076a5         db  0x44 ; 'D'
00000000000076a6         db  0x0e ; '.'
00000000000076a7         db  0x50 ; 'P'
00000000000076a8         db  0x02 ; '.'
00000000000076a9         db  0x82 ; '.'
00000000000076aa         db  0x0a ; '.'
00000000000076ab         db  0x0e ; '.'
00000000000076ac         db  0x08 ; '.'
00000000000076ad         db  0x41 ; 'A'
00000000000076ae         db  0x0b ; '.'
00000000000076af         db  0x00 ; '.'
00000000000076b0         dd         0x00000010                                  ; Length of the record
00000000000076b4         dd         0x000006ac                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000076b8         db         0xb8, 0xd3, 2 dup (0xff)                    ; begin 0x4a70
00000000000076bc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4a7c)
00000000000076c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000076c1         align      4
00000000000076c4         dd         0x00000010                                  ; Length of the record
00000000000076c8         dd         0x000006c0                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000076cc         db         0xb4, 0xd3, 2 dup (0xff)                    ; begin 0x4a80
00000000000076d0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4a97)
00000000000076d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000076d5         align      8
00000000000076d8         dd         0x00000010                                  ; Length of the record
00000000000076dc         dd         0x000006d4                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000076e0         db         0xc0, 0xd3, 2 dup (0xff)                    ; begin 0x4aa0
00000000000076e4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4ab3)
00000000000076e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000076e9         align      4
00000000000076ec         dd         0x00000010                                  ; Length of the record
00000000000076f0         dd         0x000006e8                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000076f4         db         0xcc, 0xd3, 2 dup (0xff)                    ; begin 0x4ac0
00000000000076f8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4acc)
00000000000076fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000076fd         align      256
0000000000007700         dd         0x00000010                                  ; Length of the record
0000000000007704         dd         0x000006fc                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007708         db         0xc8, 0xd3, 2 dup (0xff)                    ; begin 0x4ad0
000000000000770c         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4ae4)
0000000000007710         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007711         align      4
0000000000007714         dd         0x00000010                                  ; Length of the record
0000000000007718         dd         0x00000710                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
000000000000771c         db         0xd4, 0xd3, 2 dup (0xff)                    ; begin 0x4af0
0000000000007720         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4b03)
0000000000007724         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007725         align      8
0000000000007728         dd         0x00000014                                  ; Length of the record
000000000000772c         dd         0x00000724                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007730         db         0xe0, 0xd3, 2 dup (0xff)                    ; begin 0x4b10
0000000000007734         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4b28)
0000000000007738         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007739         align      64
0000000000007740         dd         0x00000110                                  ; Length of the record
0000000000007744         dd         0x0000073c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007748         db         0xe8, 0xd3, 2 dup (0xff)                    ; begin 0x4b30
000000000000774c         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x4f47)
0000000000007750         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007751         db  0x42 ; 'B'
0000000000007752         db  0x0e ; '.'
0000000000007753         db  0x10 ; '.'
0000000000007754         db  0x8f ; '.'
0000000000007755         db  0x02 ; '.'
0000000000007756         db  0x42 ; 'B'
0000000000007757         db  0x0e ; '.'
0000000000007758         db  0x18 ; '.'
0000000000007759         db  0x8e ; '.'
000000000000775a         db  0x03 ; '.'
000000000000775b         db  0x42 ; 'B'
000000000000775c         db  0x0e ; '.'
000000000000775d         db  0x20 ; ' '
000000000000775e         db  0x8d ; '.'
000000000000775f         db  0x04 ; '.'
0000000000007760         db  0x42 ; 'B'
0000000000007761         db  0x0e ; '.'
0000000000007762         db  0x28 ; '('
0000000000007763         db  0x8c ; '.'
0000000000007764         db  0x05 ; '.'
0000000000007765         db  0x44 ; 'D'
0000000000007766         db  0x0e ; '.'
0000000000007767         db  0x30 ; '0'
0000000000007768         db  0x86 ; '.'
0000000000007769         db  0x06 ; '.'
000000000000776a         db  0x41 ; 'A'
000000000000776b         db  0x0e ; '.'
000000000000776c         db  0x38 ; '8'
000000000000776d         db  0x83 ; '.'
000000000000776e         db  0x07 ; '.'
000000000000776f         db  0x4a ; 'J'
0000000000007770         db  0x0e ; '.'
0000000000007771         db  0x60 ; '`'
0000000000007772         db  0x02 ; '.'
0000000000007773         db  0xdd ; '.'
0000000000007774         db  0x0e ; '.'
0000000000007775         db  0x68 ; 'h'
0000000000007776         db  0x57 ; 'W'
0000000000007777         db  0x0e ; '.'
0000000000007778         db  0x70 ; 'p'
0000000000007779         db  0x42 ; 'B'
000000000000777a         db  0x0e ; '.'
000000000000777b         db  0x78 ; 'x'
000000000000777c         db  0x42 ; 'B'
000000000000777d         db  0x0e ; '.'
000000000000777e         db  0x80 ; '.'
000000000000777f         db  0x01 ; '.'
0000000000007780         db  0x42 ; 'B'
0000000000007781         db  0x0e ; '.'
0000000000007782         db  0x88 ; '.'
0000000000007783         db  0x01 ; '.'
0000000000007784         db  0x42 ; 'B'
0000000000007785         db  0x0e ; '.'
0000000000007786         db  0x90 ; '.'
0000000000007787         db  0x01 ; '.'
0000000000007788         db  0x53 ; 'S'
0000000000007789         db  0x0e ; '.'
000000000000778a         db  0x60 ; '`'
000000000000778b         db  0x44 ; 'D'
000000000000778c         db  0x0a ; '.'
000000000000778d         db  0x0e ; '.'
000000000000778e         db  0x38 ; '8'
000000000000778f         db  0x41 ; 'A'
0000000000007790         db  0x0e ; '.'
0000000000007791         db  0x30 ; '0'
0000000000007792         db  0x41 ; 'A'
0000000000007793         db  0x0e ; '.'
0000000000007794         db  0x28 ; '('
0000000000007795         db  0x42 ; 'B'
0000000000007796         db  0x0e ; '.'
0000000000007797         db  0x20 ; ' '
0000000000007798         db  0x42 ; 'B'
0000000000007799         db  0x0e ; '.'
000000000000779a         db  0x18 ; '.'
000000000000779b         db  0x42 ; 'B'
000000000000779c         db  0x0e ; '.'
000000000000779d         db  0x10 ; '.'
000000000000779e         db  0x42 ; 'B'
000000000000779f         db  0x0e ; '.'
00000000000077a0         db  0x08 ; '.'
00000000000077a1         db  0x44 ; 'D'
00000000000077a2         db  0x0b ; '.'
00000000000077a3         db  0x02 ; '.'
00000000000077a4         db  0x78 ; 'x'
00000000000077a5         db  0x0a ; '.'
00000000000077a6         db  0x0e ; '.'
00000000000077a7         db  0x68 ; 'h'
00000000000077a8         db  0x48 ; 'H'
00000000000077a9         db  0x0b ; '.'
00000000000077aa         db  0x5a ; 'Z'
00000000000077ab         db  0x0a ; '.'
00000000000077ac         db  0x0e ; '.'
00000000000077ad         db  0x38 ; '8'
00000000000077ae         db  0x47 ; 'G'
00000000000077af         db  0x0e ; '.'
00000000000077b0         db  0x30 ; '0'
00000000000077b1         db  0x41 ; 'A'
00000000000077b2         db  0x0e ; '.'
00000000000077b3         db  0x28 ; '('
00000000000077b4         db  0x42 ; 'B'
00000000000077b5         db  0x0e ; '.'
00000000000077b6         db  0x20 ; ' '
00000000000077b7         db  0x42 ; 'B'
00000000000077b8         db  0x0e ; '.'
00000000000077b9         db  0x18 ; '.'
00000000000077ba         db  0x42 ; 'B'
00000000000077bb         db  0x0e ; '.'
00000000000077bc         db  0x10 ; '.'
00000000000077bd         db  0x42 ; 'B'
00000000000077be         db  0x0e ; '.'
00000000000077bf         db  0x08 ; '.'
00000000000077c0         db  0x56 ; 'V'
00000000000077c1         db  0x0b ; '.'
00000000000077c2         db  0x5e ; '^'
00000000000077c3         db  0x0a ; '.'
00000000000077c4         db  0x0e ; '.'
00000000000077c5         db  0x38 ; '8'
00000000000077c6         db  0x52 ; 'R'
00000000000077c7         db  0x0e ; '.'
00000000000077c8         db  0x30 ; '0'
00000000000077c9         db  0x41 ; 'A'
00000000000077ca         db  0x0e ; '.'
00000000000077cb         db  0x28 ; '('
00000000000077cc         db  0x42 ; 'B'
00000000000077cd         db  0x0e ; '.'
00000000000077ce         db  0x20 ; ' '
00000000000077cf         db  0x42 ; 'B'
00000000000077d0         db  0x0e ; '.'
00000000000077d1         db  0x18 ; '.'
00000000000077d2         db  0x42 ; 'B'
00000000000077d3         db  0x0e ; '.'
00000000000077d4         db  0x10 ; '.'
00000000000077d5         db  0x42 ; 'B'
00000000000077d6         db  0x0e ; '.'
00000000000077d7         db  0x08 ; '.'
00000000000077d8         db  0x4f ; 'O'
00000000000077d9         db  0x0b ; '.'
00000000000077da         db  0x62 ; 'b'
00000000000077db         db  0x0a ; '.'
00000000000077dc         db  0x0e ; '.'
00000000000077dd         db  0x38 ; '8'
00000000000077de         db  0x50 ; 'P'
00000000000077df         db  0x0e ; '.'
00000000000077e0         db  0x30 ; '0'
00000000000077e1         db  0x41 ; 'A'
00000000000077e2         db  0x0e ; '.'
00000000000077e3         db  0x28 ; '('
00000000000077e4         db  0x42 ; 'B'
00000000000077e5         db  0x0e ; '.'
00000000000077e6         db  0x20 ; ' '
00000000000077e7         db  0x42 ; 'B'
00000000000077e8         db  0x0e ; '.'
00000000000077e9         db  0x18 ; '.'
00000000000077ea         db  0x42 ; 'B'
00000000000077eb         db  0x0e ; '.'
00000000000077ec         db  0x10 ; '.'
00000000000077ed         db  0x42 ; 'B'
00000000000077ee         db  0x0e ; '.'
00000000000077ef         db  0x08 ; '.'
00000000000077f0         db  0x55 ; 'U'
00000000000077f1         db  0x0b ; '.'
00000000000077f2         db  0x66 ; 'f'
00000000000077f3         db  0x0e ; '.'
00000000000077f4         db  0x68 ; 'h'
00000000000077f5         db  0x42 ; 'B'
00000000000077f6         db  0x0e ; '.'
00000000000077f7         db  0x70 ; 'p'
00000000000077f8         db  0x5c ; '\'
00000000000077f9         db  0x0e ; '.'
00000000000077fa         db  0x68 ; 'h'
00000000000077fb         db  0x41 ; 'A'
00000000000077fc         db  0x0e ; '.'
00000000000077fd         db  0x60 ; '`'
00000000000077fe         db  0x44 ; 'D'
00000000000077ff         db  0x0a ; '.'                                         ; DATA XREF=main+1072
0000000000007800         db  0x0e ; '.'                                         ; DATA XREF=main+1016, main+1041, main+1463
0000000000007801         db  0x38 ; '8'
0000000000007802         db  0x41 ; 'A'
0000000000007803         db  0x0e ; '.'
0000000000007804         db  0x30 ; '0'
0000000000007805         db  0x41 ; 'A'
0000000000007806         db  0x0e ; '.'
0000000000007807         db  0x28 ; '('
0000000000007808         db  0x42 ; 'B'
0000000000007809         db  0x0e ; '.'
000000000000780a         db  0x20 ; ' '
000000000000780b         db  0x42 ; 'B'
000000000000780c         db  0x0e ; '.'
000000000000780d         db  0x18 ; '.'
000000000000780e         db  0x42 ; 'B'
000000000000780f         db  0x0e ; '.'
0000000000007810         db  0x10 ; '.'
0000000000007811         db  0x42 ; 'B'
0000000000007812         db  0x0e ; '.'
0000000000007813         db  0x08 ; '.'
0000000000007814         db  0x45 ; 'E'
0000000000007815         db  0x0b ; '.'
0000000000007816         db  0x68 ; 'h'
0000000000007817         db  0x0a ; '.'
0000000000007818         db  0x0e ; '.'
0000000000007819         db  0x68 ; 'h'
000000000000781a         db  0x48 ; 'H'
000000000000781b         db  0x0b ; '.'
000000000000781c         db  0x72 ; 'r'
000000000000781d         db  0x0e ; '.'
000000000000781e         db  0x68 ; 'h'
000000000000781f         db  0x45 ; 'E'
0000000000007820         db  0x0e ; '.'
0000000000007821         db  0x70 ; 'p'
0000000000007822         db  0x42 ; 'B'
0000000000007823         db  0x0e ; '.'
0000000000007824         db  0x78 ; 'x'
0000000000007825         db  0x42 ; 'B'
0000000000007826         db  0x0e ; '.'
0000000000007827         db  0x80 ; '.'
0000000000007828         db  0x01 ; '.'
0000000000007829         db  0x5e ; '^'
000000000000782a         db  0x0e ; '.'
000000000000782b         db  0x60 ; '`'
000000000000782c         db  0x44 ; 'D'
000000000000782d         db  0x0a ; '.'
000000000000782e         db  0x0e ; '.'
000000000000782f         db  0x38 ; '8'
0000000000007830         db  0x41 ; 'A'
0000000000007831         db  0x0e ; '.'
0000000000007832         db  0x30 ; '0'
0000000000007833         db  0x41 ; 'A'
0000000000007834         db  0x0e ; '.'
0000000000007835         db  0x28 ; '('
0000000000007836         db  0x42 ; 'B'
0000000000007837         db  0x0e ; '.'
0000000000007838         db  0x20 ; ' '
0000000000007839         db  0x42 ; 'B'
000000000000783a         db  0x0e ; '.'
000000000000783b         db  0x18 ; '.'
000000000000783c         db  0x42 ; 'B'
000000000000783d         db  0x0e ; '.'
000000000000783e         db  0x10 ; '.'
000000000000783f         db  0x42 ; 'B'
0000000000007840         db  0x0e ; '.'
0000000000007841         db  0x08 ; '.'
0000000000007842         db  0x41 ; 'A'
0000000000007843         db  0x0b ; '.'
0000000000007844         db  0x79 ; 'y'
0000000000007845         db  0x0a ; '.'
0000000000007846         db  0x0e ; '.'
0000000000007847         db  0x68 ; 'h'
0000000000007848         db  0x42 ; 'B'
0000000000007849         db  0x0e ; '.'
000000000000784a         db  0x70 ; 'p'
000000000000784b         db  0x42 ; 'B'
000000000000784c         db  0x0e ; '.'
000000000000784d         db  0x78 ; 'x'
000000000000784e         db  0x42 ; 'B'
000000000000784f         db  0x0e ; '.'
0000000000007850         db  0x80 ; '.'
0000000000007851         db  0x01 ; '.'
0000000000007852         db  0x51 ; 'Q'
0000000000007853         db  0x0b ; '.'
0000000000007854         dd         0x00000010                                  ; Length of the record
0000000000007858         dd         0x00000850                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
000000000000785c         db         0xf4, 0xd6, 2 dup (0xff)                    ; begin 0x4f50
0000000000007860         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x4f70)
0000000000007864         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007865         align      8
0000000000007868         dd         0x00000018                                  ; Length of the record
000000000000786c         dd         0x00000864                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007870         db         0x00, 0xd7, 2 dup (0xff)                    ; begin 0x4f70
0000000000007874         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x4fe8)
0000000000007878         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007879         db  0x44 ; 'D'
000000000000787a         db  0x0e ; '.'
000000000000787b         db  0x70 ; 'p'
000000000000787c         db  0x02 ; '.'
000000000000787d         db  0x60 ; '`'
000000000000787e         db  0x0a ; '.'
000000000000787f         db  0x0e ; '.'
0000000000007880         db  0x08 ; '.'
0000000000007881         db  0x41 ; 'A'
0000000000007882         db  0x0b ; '.'
0000000000007883         db  0x00 ; '.'
0000000000007884         dd         0x00000028                                  ; Length of the record
0000000000007888         dd         0x00000880                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
000000000000788c         db         0x64, 0xd7, 2 dup (0xff)                    ; begin 0x4ff0
0000000000007890         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x50c5)
0000000000007894         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007895         db  0x41 ; 'A'
0000000000007896         db  0x0e ; '.'
0000000000007897         db  0x10 ; '.'
0000000000007898         db  0x86 ; '.'
0000000000007899         db  0x02 ; '.'
000000000000789a         db  0x41 ; 'A'
000000000000789b         db  0x0e ; '.'
000000000000789c         db  0x18 ; '.'
000000000000789d         db  0x83 ; '.'
000000000000789e         db  0x03 ; '.'
000000000000789f         db  0x50 ; 'P'
00000000000078a0         db  0x0e ; '.'
00000000000078a1         db  0xd0 ; '.'
00000000000078a2         db  0x01 ; '.'
00000000000078a3         db  0x02 ; '.'
00000000000078a4         db  0xab ; '.'
00000000000078a5         db  0x0a ; '.'
00000000000078a6         db  0x0e ; '.'
00000000000078a7         db  0x18 ; '.'
00000000000078a8         db  0x41 ; 'A'
00000000000078a9         db  0x0e ; '.'
00000000000078aa         db  0x10 ; '.'
00000000000078ab         db  0x41 ; 'A'
00000000000078ac         db  0x0e ; '.'
00000000000078ad         db  0x08 ; '.'
00000000000078ae         db  0x41 ; 'A'
00000000000078af         db  0x0b ; '.'
00000000000078b0         dd         0x0000001c                                  ; Length of the record
00000000000078b4         dd         0x000008ac                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000078b8         db         0x18, 0xd8, 2 dup (0xff)                    ; begin 0x50d0
00000000000078bc         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x5150)
00000000000078c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000078c1         db  0x41 ; 'A'
00000000000078c2         db  0x0e ; '.'
00000000000078c3         db  0x10 ; '.'
00000000000078c4         db  0x83 ; '.'
00000000000078c5         db  0x02 ; '.'
00000000000078c6         db  0x02 ; '.'
00000000000078c7         db  0x7a ; 'z'
00000000000078c8         db  0x0e ; '.'
00000000000078c9         db  0x08 ; '.'
00000000000078ca         db  0x00 ; '.'
00000000000078cb         db  0x00 ; '.'
00000000000078cc         db  0x00 ; '.'
00000000000078cd         db  0x00 ; '.'
00000000000078ce         db  0x00 ; '.'
00000000000078cf         db  0x00 ; '.'
00000000000078d0         dd         0x00000018                                  ; Length of the record
00000000000078d4         dd         0x000008cc                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000078d8         db         0x78, 0xd8, 2 dup (0xff)                    ; begin 0x5150
00000000000078dc         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x516a)
00000000000078e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000078e1         db  0x41 ; 'A'
00000000000078e2         db  0x0e ; '.'
00000000000078e3         db  0x10 ; '.'
00000000000078e4         db  0x83 ; '.'
00000000000078e5         db  0x02 ; '.'
00000000000078e6         db  0x53 ; 'S'
00000000000078e7         db  0x0a ; '.'
00000000000078e8         db  0x0e ; '.'
00000000000078e9         db  0x08 ; '.'
00000000000078ea         db  0x41 ; 'A'
00000000000078eb         db  0x0b ; '.'
00000000000078ec         dd         0x00000010                                  ; Length of the record
00000000000078f0         dd         0x000008e8                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000078f4         db         0x7c, 0xd8, 2 dup (0xff)                    ; begin 0x5170
00000000000078f8         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5194)
00000000000078fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000078fd         db  0x5f ; '_'
00000000000078fe         db  0x0e ; '.'
00000000000078ff         db  0x10 ; '.'
0000000000007900         dd         0x00000010                                  ; Length of the record
0000000000007904         dd         0x000008fc                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007908         db         0x98, 0xd8, 2 dup (0xff)                    ; begin 0x51a0
000000000000790c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x51a2)
0000000000007910         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007911         align      4
0000000000007914         dd         0x00000020                                  ; Length of the record
0000000000007918         dd         0x00000910                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
000000000000791c         db         0x94, 0xd8, 2 dup (0xff)                    ; begin 0x51b0
0000000000007920         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x51e6)
0000000000007924         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007925         db  0x44 ; 'D'
0000000000007926         db  0x0e ; '.'
0000000000007927         db  0x10 ; '.'
0000000000007928         db  0x83 ; '.'
0000000000007929         db  0x02 ; '.'
000000000000792a         db  0x5d ; ']'
000000000000792b         db  0x0a ; '.'
000000000000792c         db  0x0e ; '.'
000000000000792d         db  0x08 ; '.'
000000000000792e         db  0x47 ; 'G'
000000000000792f         db  0x0b ; '.'
0000000000007930         db  0x48 ; 'H'
0000000000007931         db  0x0a ; '.'
0000000000007932         db  0x0e ; '.'
0000000000007933         db  0x08 ; '.'
0000000000007934         db  0x41 ; 'A'
0000000000007935         db  0x0b ; '.'
0000000000007936         db  0x00 ; '.'
0000000000007937         db  0x00 ; '.'
0000000000007938         dd         0x00000010                                  ; Length of the record
000000000000793c         dd         0x00000934                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007940         db         0xb0, 0xd8, 2 dup (0xff)                    ; begin 0x51f0
0000000000007944         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5214)
0000000000007948         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007949         db  0x5f ; '_'
000000000000794a         db  0x0e ; '.'
000000000000794b         db  0x10 ; '.'
000000000000794c         dd         0x00000014                                  ; Length of the record
0000000000007950         dd         0x00000948                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007954         db         0xcc, 0xd8, 2 dup (0xff)                    ; begin 0x5220
0000000000007958         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x52a2)
000000000000795c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000795d         db  0x02 ; '.'
000000000000795e         db  0x5f ; '_'
000000000000795f         db  0x0e ; '.'
0000000000007960         db  0x10 ; '.'
0000000000007961         db  0x49 ; 'I'
0000000000007962         db  0x0e ; '.'
0000000000007963         db  0x08 ; '.'
0000000000007964         dd         0x00000014                                  ; Length of the record
0000000000007968         dd         0x00000960                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
000000000000796c         db         0x44, 0xd9, 2 dup (0xff)                    ; begin 0x52b0
0000000000007970         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x52fa)
0000000000007974         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007975         db  0x02 ; '.'
0000000000007976         db  0x45 ; 'E'
0000000000007977         db  0x0e ; '.'
0000000000007978         db  0x10 ; '.'
0000000000007979         db  0x00 ; '.'
000000000000797a         db  0x00 ; '.'
000000000000797b         db  0x00 ; '.'
000000000000797c         dd         0x00000018                                  ; Length of the record
0000000000007980         dd         0x00000978                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007984         db         0x7c, 0xd9, 2 dup (0xff)                    ; begin 0x5300
0000000000007988         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5317)
000000000000798c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000798d         db  0x41 ; 'A'
000000000000798e         db  0x0e ; '.'
000000000000798f         db  0x10 ; '.'
0000000000007990         db  0x83 ; '.'
0000000000007991         db  0x02 ; '.'
0000000000007992         db  0x51 ; 'Q'
0000000000007993         db  0x0e ; '.'
0000000000007994         db  0x08 ; '.'
0000000000007995         db  0x00 ; '.'
0000000000007996         db  0x00 ; '.'
0000000000007997         db  0x00 ; '.'
0000000000007998         dd         0x00000018                                  ; Length of the record
000000000000799c         dd         0x00000994                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000079a0         db         0x80, 0xd9, 2 dup (0xff)                    ; begin 0x5320
00000000000079a4         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x534e)
00000000000079a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000079a9         db  0x47 ; 'G'
00000000000079aa         db  0x0e ; '.'
00000000000079ab         db  0x10 ; '.'
00000000000079ac         db  0x61 ; 'a'
00000000000079ad         db  0x0a ; '.'
00000000000079ae         db  0x0e ; '.'
00000000000079af         db  0x08 ; '.'
00000000000079b0         db  0x41 ; 'A'
00000000000079b1         db  0x0b ; '.'
00000000000079b2         db  0x00 ; '.'
00000000000079b3         db  0x00 ; '.'
00000000000079b4         dd         0x00000024                                  ; Length of the record
00000000000079b8         dd         0x000009b0                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000079bc         db         0x94, 0xd9, 2 dup (0xff)                    ; begin 0x5350
00000000000079c0         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5378)
00000000000079c4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000079c5         db  0x41 ; 'A'
00000000000079c6         db  0x0e ; '.'
00000000000079c7         db  0x10 ; '.'
00000000000079c8         db  0x86 ; '.'
00000000000079c9         db  0x02 ; '.'
00000000000079ca         db  0x41 ; 'A'
00000000000079cb         db  0x0e ; '.'
00000000000079cc         db  0x18 ; '.'
00000000000079cd         db  0x83 ; '.'
00000000000079ce         db  0x03 ; '.'
00000000000079cf         db  0x4d ; 'M'
00000000000079d0         db  0x0e ; '.'
00000000000079d1         db  0x20 ; ' '
00000000000079d2         db  0x49 ; 'I'
00000000000079d3         db  0x0e ; '.'
00000000000079d4         db  0x18 ; '.'
00000000000079d5         db  0x47 ; 'G'
00000000000079d6         db  0x0e ; '.'
00000000000079d7         db  0x10 ; '.'
00000000000079d8         db  0x41 ; 'A'
00000000000079d9         db  0x0e ; '.'
00000000000079da         db  0x08 ; '.'
00000000000079db         db  0x00 ; '.'
00000000000079dc         dd         0x00000018                                  ; Length of the record
00000000000079e0         dd         0x000009d8                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
00000000000079e4         db         0x9c, 0xd9, 2 dup (0xff)                    ; begin 0x5380
00000000000079e8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5393)
00000000000079ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000079ed         db  0x41 ; 'A'
00000000000079ee         db  0x0e ; '.'
00000000000079ef         db  0x10 ; '.'
00000000000079f0         db  0x83 ; '.'
00000000000079f1         db  0x02 ; '.'
00000000000079f2         db  0x50 ; 'P'
00000000000079f3         db  0x0e ; '.'
00000000000079f4         db  0x08 ; '.'
00000000000079f5         db  0x00 ; '.'
00000000000079f6         db  0x00 ; '.'
00000000000079f7         db  0x00 ; '.'
00000000000079f8         dd         0x00000014                                  ; Length of the record
00000000000079fc         dd         0x000009f4                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007a00         db         0xa0, 0xd9, 2 dup (0xff)                    ; begin 0x53a0
0000000000007a04         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x53d5)
0000000000007a08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a09         db  0x4b ; 'K'
0000000000007a0a         db  0x0e ; '.'
0000000000007a0b         db  0x10 ; '.'
0000000000007a0c         db  0x00 ; '.'
0000000000007a0d         db  0x00 ; '.'
0000000000007a0e         db  0x00 ; '.'
0000000000007a0f         db  0x00 ; '.'
0000000000007a10         dd         0x00000048                                  ; Length of the record
0000000000007a14         dd         0x00000a0c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007a18         db         0xc8, 0xd9, 2 dup (0xff)                    ; begin 0x53e0
0000000000007a1c         db         0x00, 0x01, 2 dup (0x00)                    ; length 0x100 (end at 0x54e0)
0000000000007a20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a21         db  0x42 ; 'B'
0000000000007a22         db  0x0e ; '.'
0000000000007a23         db  0x10 ; '.'
0000000000007a24         db  0x8f ; '.'
0000000000007a25         db  0x02 ; '.'
0000000000007a26         db  0x42 ; 'B'
0000000000007a27         db  0x0e ; '.'
0000000000007a28         db  0x18 ; '.'
0000000000007a29         db  0x8e ; '.'
0000000000007a2a         db  0x03 ; '.'
0000000000007a2b         db  0x45 ; 'E'
0000000000007a2c         db  0x0e ; '.'
0000000000007a2d         db  0x20 ; ' '
0000000000007a2e         db  0x8d ; '.'
0000000000007a2f         db  0x04 ; '.'
0000000000007a30         db  0x42 ; 'B'
0000000000007a31         db  0x0e ; '.'
0000000000007a32         db  0x28 ; '('
0000000000007a33         db  0x8c ; '.'
0000000000007a34         db  0x05 ; '.'
0000000000007a35         db  0x44 ; 'D'
0000000000007a36         db  0x0e ; '.'
0000000000007a37         db  0x30 ; '0'
0000000000007a38         db  0x86 ; '.'
0000000000007a39         db  0x06 ; '.'
0000000000007a3a         db  0x41 ; 'A'
0000000000007a3b         db  0x0e ; '.'
0000000000007a3c         db  0x38 ; '8'
0000000000007a3d         db  0x83 ; '.'
0000000000007a3e         db  0x07 ; '.'
0000000000007a3f         db  0x4e ; 'N'
0000000000007a40         db  0x0e ; '.'
0000000000007a41         db  0x50 ; 'P'
0000000000007a42         db  0x02 ; '.'
0000000000007a43         db  0x9d ; '.'
0000000000007a44         db  0x0a ; '.'
0000000000007a45         db  0x0e ; '.'
0000000000007a46         db  0x38 ; '8'
0000000000007a47         db  0x41 ; 'A'
0000000000007a48         db  0x0e ; '.'
0000000000007a49         db  0x30 ; '0'
0000000000007a4a         db  0x41 ; 'A'
0000000000007a4b         db  0x0e ; '.'
0000000000007a4c         db  0x28 ; '('
0000000000007a4d         db  0x42 ; 'B'
0000000000007a4e         db  0x0e ; '.'
0000000000007a4f         db  0x20 ; ' '
0000000000007a50         db  0x42 ; 'B'
0000000000007a51         db  0x0e ; '.'
0000000000007a52         db  0x18 ; '.'
0000000000007a53         db  0x42 ; 'B'
0000000000007a54         db  0x0e ; '.'
0000000000007a55         db  0x10 ; '.'
0000000000007a56         db  0x42 ; 'B'
0000000000007a57         db  0x0e ; '.'
0000000000007a58         db  0x08 ; '.'
0000000000007a59         db  0x4b ; 'K'
0000000000007a5a         db  0x0b ; '.'
0000000000007a5b         db  0x00 ; '.'
0000000000007a5c         dd         0x00000018                                  ; Length of the record
0000000000007a60         dd         0x00000a58                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007a64         db         0x7c, 0xda, 2 dup (0xff)                    ; begin 0x54e0
0000000000007a68         db         0x21, 3 dup (0x00)                          ; length 0x21 (end at 0x5501)
0000000000007a6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a6d         db  0x44 ; 'D'
0000000000007a6e         db  0x0e ; '.'
0000000000007a6f         db  0x18 ; '.'
0000000000007a70         db  0x42 ; 'B'
0000000000007a71         db  0x0e ; '.'
0000000000007a72         db  0x20 ; ' '
0000000000007a73         db  0x5a ; 'Z'
0000000000007a74         db  0x0e ; '.'
0000000000007a75         db  0x08 ; '.'
0000000000007a76         db  0x00 ; '.'
0000000000007a77         db  0x00 ; '.'
0000000000007a78         dd         0x0000004c                                  ; Length of the record
0000000000007a7c         dd         0x00000a74                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007a80         db         0x90, 0xda, 2 dup (0xff)                    ; begin 0x5510
0000000000007a84         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x592c)
0000000000007a88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a89         db  0x42 ; 'B'
0000000000007a8a         db  0x0e ; '.'
0000000000007a8b         db  0x10 ; '.'
0000000000007a8c         db  0x8f ; '.'
0000000000007a8d         db  0x02 ; '.'
0000000000007a8e         db  0x42 ; 'B'
0000000000007a8f         db  0x0e ; '.'
0000000000007a90         db  0x18 ; '.'
0000000000007a91         db  0x8e ; '.'
0000000000007a92         db  0x03 ; '.'
0000000000007a93         db  0x42 ; 'B'
0000000000007a94         db  0x0e ; '.'
0000000000007a95         db  0x20 ; ' '
0000000000007a96         db  0x8d ; '.'
0000000000007a97         db  0x04 ; '.'
0000000000007a98         db  0x42 ; 'B'
0000000000007a99         db  0x0e ; '.'
0000000000007a9a         db  0x28 ; '('
0000000000007a9b         db  0x8c ; '.'
0000000000007a9c         db  0x05 ; '.'
0000000000007a9d         db  0x41 ; 'A'
0000000000007a9e         db  0x0e ; '.'
0000000000007a9f         db  0x30 ; '0'
0000000000007aa0         db  0x86 ; '.'
0000000000007aa1         db  0x06 ; '.'
0000000000007aa2         db  0x41 ; 'A'
0000000000007aa3         db  0x0e ; '.'
0000000000007aa4         db  0x38 ; '8'
0000000000007aa5         db  0x83 ; '.'
0000000000007aa6         db  0x07 ; '.'
0000000000007aa7         db  0x44 ; 'D'
0000000000007aa8         db  0x0e ; '.'
0000000000007aa9         db  0x60 ; '`'
0000000000007aaa         db  0x02 ; '.'
0000000000007aab         db  0xe9 ; '.'
0000000000007aac         db  0x0a ; '.'
0000000000007aad         db  0x0e ; '.'
0000000000007aae         db  0x38 ; '8'
0000000000007aaf         db  0x41 ; 'A'
0000000000007ab0         db  0x0e ; '.'
0000000000007ab1         db  0x30 ; '0'
0000000000007ab2         db  0x41 ; 'A'
0000000000007ab3         db  0x0e ; '.'
0000000000007ab4         db  0x28 ; '('
0000000000007ab5         db  0x42 ; 'B'
0000000000007ab6         db  0x0e ; '.'
0000000000007ab7         db  0x20 ; ' '
0000000000007ab8         db  0x42 ; 'B'
0000000000007ab9         db  0x0e ; '.'
0000000000007aba         db  0x18 ; '.'
0000000000007abb         db  0x42 ; 'B'
0000000000007abc         db  0x0e ; '.'
0000000000007abd         db  0x10 ; '.'
0000000000007abe         db  0x42 ; 'B'
0000000000007abf         db  0x0e ; '.'
0000000000007ac0         db  0x08 ; '.'
0000000000007ac1         db  0x47 ; 'G'
0000000000007ac2         db  0x0b ; '.'
0000000000007ac3         db  0x00 ; '.'
0000000000007ac4         db  0x00 ; '.'
0000000000007ac5         db  0x00 ; '.'
0000000000007ac6         db  0x00 ; '.'
0000000000007ac7         db  0x00 ; '.'
0000000000007ac8         dd         0x00000034                                  ; Length of the record
0000000000007acc         dd         0x00000ac4                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007ad0         db         0x60, 0xde, 2 dup (0xff)                    ; begin 0x5930
0000000000007ad4         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x59ab)
0000000000007ad8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ad9         db  0x42 ; 'B'
0000000000007ada         db  0x0e ; '.'
0000000000007adb         db  0x10 ; '.'
0000000000007adc         db  0x8c ; '.'
0000000000007add         db  0x02 ; '.'
0000000000007ade         db  0x41 ; 'A'
0000000000007adf         db  0x0e ; '.'
0000000000007ae0         db  0x18 ; '.'
0000000000007ae1         db  0x86 ; '.'
0000000000007ae2         db  0x03 ; '.'
0000000000007ae3         db  0x41 ; 'A'
0000000000007ae4         db  0x0e ; '.'
0000000000007ae5         db  0x20 ; ' '
0000000000007ae6         db  0x83 ; '.'
0000000000007ae7         db  0x04 ; '.'
0000000000007ae8         db  0x7d ; '}'
0000000000007ae9         db  0x0a ; '.'
0000000000007aea         db  0x0e ; '.'
0000000000007aeb         db  0x18 ; '.'
0000000000007aec         db  0x41 ; 'A'
0000000000007aed         db  0x0e ; '.'
0000000000007aee         db  0x10 ; '.'
0000000000007aef         db  0x42 ; 'B'
0000000000007af0         db  0x0e ; '.'
0000000000007af1         db  0x08 ; '.'
0000000000007af2         db  0x44 ; 'D'
0000000000007af3         db  0x0b ; '.'
0000000000007af4         db  0x60 ; '`'
0000000000007af5         db  0x0a ; '.'
0000000000007af6         db  0x0e ; '.'
0000000000007af7         db  0x18 ; '.'
0000000000007af8         db  0x41 ; 'A'
0000000000007af9         db  0x0e ; '.'
0000000000007afa         db  0x10 ; '.'
0000000000007afb         db  0x42 ; 'B'
0000000000007afc         db  0x0e ; '.'
0000000000007afd         db  0x08 ; '.'
0000000000007afe         db  0x45 ; 'E'
0000000000007aff         db  0x0b ; '.'
0000000000007b00         dd         0x0000001c                                  ; Length of the record
0000000000007b04         dd         0x00000afc                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007b08         db         0xa8, 0xde, 2 dup (0xff)                    ; begin 0x59b0
0000000000007b0c         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x59f0)
0000000000007b10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b11         db  0x44 ; 'D'
0000000000007b12         db  0x0e ; '.'
0000000000007b13         db  0x10 ; '.'
0000000000007b14         db  0x83 ; '.'
0000000000007b15         db  0x02 ; '.'
0000000000007b16         db  0x5a ; 'Z'
0000000000007b17         db  0x0a ; '.'
0000000000007b18         db  0x0e ; '.'
0000000000007b19         db  0x08 ; '.'
0000000000007b1a         db  0x4a ; 'J'
0000000000007b1b         db  0x0b ; '.'
0000000000007b1c         db  0x53 ; 'S'
0000000000007b1d         db  0x0e ; '.'
0000000000007b1e         db  0x08 ; '.'
0000000000007b1f         db  0x00 ; '.'
0000000000007b20         dd         0x0000002c                                  ; Length of the record
0000000000007b24         dd         0x00000b1c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007b28         db         0xc8, 0xde, 2 dup (0xff)                    ; begin 0x59f0
0000000000007b2c         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x5a47)
0000000000007b30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b31         db  0x63 ; 'c'
0000000000007b32         db  0x0e ; '.'
0000000000007b33         db  0x10 ; '.'
0000000000007b34         db  0x8c ; '.'
0000000000007b35         db  0x02 ; '.'
0000000000007b36         db  0x41 ; 'A'
0000000000007b37         db  0x0e ; '.'
0000000000007b38         db  0x18 ; '.'
0000000000007b39         db  0x86 ; '.'
0000000000007b3a         db  0x03 ; '.'
0000000000007b3b         db  0x44 ; 'D'
0000000000007b3c         db  0x0e ; '.'
0000000000007b3d         db  0x20 ; ' '
0000000000007b3e         db  0x83 ; '.'
0000000000007b3f         db  0x04 ; '.'
0000000000007b40         db  0x6b ; 'k'
0000000000007b41         db  0x0e ; '.'
0000000000007b42         db  0x18 ; '.'
0000000000007b43         db  0x41 ; 'A'
0000000000007b44         db  0x0e ; '.'
0000000000007b45         db  0x10 ; '.'
0000000000007b46         db  0x42 ; 'B'
0000000000007b47         db  0x0e ; '.'
0000000000007b48         db  0x08 ; '.'
0000000000007b49         db  0x00 ; '.'
0000000000007b4a         db  0x00 ; '.'
0000000000007b4b         db  0x00 ; '.'
0000000000007b4c         db  0x00 ; '.'
0000000000007b4d         db  0x00 ; '.'
0000000000007b4e         db  0x00 ; '.'
0000000000007b4f         db  0x00 ; '.'
0000000000007b50         dd         0x0000003c                                  ; Length of the record
0000000000007b54         dd         0x00000b4c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007b58         db         0xf8, 0xde, 2 dup (0xff)                    ; begin 0x5a50
0000000000007b5c         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5ad3)
0000000000007b60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b61         db  0x42 ; 'B'
0000000000007b62         db  0x0e ; '.'
0000000000007b63         db  0x10 ; '.'
0000000000007b64         db  0x8d ; '.'
0000000000007b65         db  0x02 ; '.'
0000000000007b66         db  0x42 ; 'B'
0000000000007b67         db  0x0e ; '.'
0000000000007b68         db  0x18 ; '.'
0000000000007b69         db  0x8c ; '.'
0000000000007b6a         db  0x03 ; '.'
0000000000007b6b         db  0x44 ; 'D'
0000000000007b6c         db  0x0e ; '.'
0000000000007b6d         db  0x20 ; ' '
0000000000007b6e         db  0x86 ; '.'
0000000000007b6f         db  0x04 ; '.'
0000000000007b70         db  0x41 ; 'A'
0000000000007b71         db  0x0e ; '.'
0000000000007b72         db  0x28 ; '('
0000000000007b73         db  0x83 ; '.'
0000000000007b74         db  0x05 ; '.'
0000000000007b75         db  0x4a ; 'J'
0000000000007b76         db  0x0e ; '.'
0000000000007b77         db  0x40 ; '@'
0000000000007b78         db  0x02 ; '.'
0000000000007b79         db  0x64 ; 'd'
0000000000007b7a         db  0x0a ; '.'
0000000000007b7b         db  0x0e ; '.'
0000000000007b7c         db  0x28 ; '('
0000000000007b7d         db  0x41 ; 'A'
0000000000007b7e         db  0x0e ; '.'
0000000000007b7f         db  0x20 ; ' '
0000000000007b80         db  0x41 ; 'A'
0000000000007b81         db  0x0e ; '.'
0000000000007b82         db  0x18 ; '.'
0000000000007b83         db  0x42 ; 'B'
0000000000007b84         db  0x0e ; '.'
0000000000007b85         db  0x10 ; '.'
0000000000007b86         db  0x42 ; 'B'
0000000000007b87         db  0x0e ; '.'
0000000000007b88         db  0x08 ; '.'
0000000000007b89         db  0x41 ; 'A'
0000000000007b8a         db  0x0b ; '.'
0000000000007b8b         db  0x00 ; '.'
0000000000007b8c         db  0x00 ; '.'
0000000000007b8d         db  0x00 ; '.'
0000000000007b8e         db  0x00 ; '.'
0000000000007b8f         db  0x00 ; '.'
0000000000007b90         dd         0x0000004c                                  ; Length of the record
0000000000007b94         dd         0x00000b8c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007b98         db         0x48, 0xdf, 2 dup (0xff)                    ; begin 0x5ae0
0000000000007b9c         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x5b5d)
0000000000007ba0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ba1         db  0x42 ; 'B'
0000000000007ba2         db  0x0e ; '.'
0000000000007ba3         db  0x10 ; '.'
0000000000007ba4         db  0x8c ; '.'
0000000000007ba5         db  0x02 ; '.'
0000000000007ba6         db  0x41 ; 'A'
0000000000007ba7         db  0x0e ; '.'
0000000000007ba8         db  0x18 ; '.'
0000000000007ba9         db  0x86 ; '.'
0000000000007baa         db  0x03 ; '.'
0000000000007bab         db  0x44 ; 'D'
0000000000007bac         db  0x0e ; '.'
0000000000007bad         db  0x20 ; ' '
0000000000007bae         db  0x83 ; '.'
0000000000007baf         db  0x04 ; '.'
0000000000007bb0         db  0x69 ; 'i'
0000000000007bb1         db  0x0a ; '.'
0000000000007bb2         db  0x0e ; '.'
0000000000007bb3         db  0x18 ; '.'
0000000000007bb4         db  0x41 ; 'A'
0000000000007bb5         db  0x0e ; '.'
0000000000007bb6         db  0x10 ; '.'
0000000000007bb7         db  0x42 ; 'B'
0000000000007bb8         db  0x0e ; '.'
0000000000007bb9         db  0x08 ; '.'
0000000000007bba         db  0x45 ; 'E'
0000000000007bbb         db  0x0b ; '.'
0000000000007bbc         db  0x55 ; 'U'
0000000000007bbd         db  0x0a ; '.'
0000000000007bbe         db  0x0e ; '.'
0000000000007bbf         db  0x18 ; '.'
0000000000007bc0         db  0x41 ; 'A'
0000000000007bc1         db  0x0e ; '.'
0000000000007bc2         db  0x10 ; '.'
0000000000007bc3         db  0x42 ; 'B'
0000000000007bc4         db  0x0e ; '.'
0000000000007bc5         db  0x08 ; '.'
0000000000007bc6         db  0x48 ; 'H'
0000000000007bc7         db  0x0b ; '.'
0000000000007bc8         db  0x41 ; 'A'
0000000000007bc9         db  0x0a ; '.'
0000000000007bca         db  0x0e ; '.'
0000000000007bcb         db  0x18 ; '.'
0000000000007bcc         db  0x46 ; 'F'
0000000000007bcd         db  0x0e ; '.'
0000000000007bce         db  0x10 ; '.'
0000000000007bcf         db  0x42 ; 'B'
0000000000007bd0         db  0x0e ; '.'
0000000000007bd1         db  0x08 ; '.'
0000000000007bd2         db  0x47 ; 'G'
0000000000007bd3         db  0x0b ; '.'
0000000000007bd4         db  0x49 ; 'I'
0000000000007bd5         db  0x0e ; '.'
0000000000007bd6         db  0x18 ; '.'
0000000000007bd7         db  0x41 ; 'A'
0000000000007bd8         db  0x0e ; '.'
0000000000007bd9         db  0x10 ; '.'
0000000000007bda         db  0x42 ; 'B'
0000000000007bdb         db  0x0e ; '.'
0000000000007bdc         db  0x08 ; '.'
0000000000007bdd         db  0x00 ; '.'
0000000000007bde         db  0x00 ; '.'
0000000000007bdf         db  0x00 ; '.'
0000000000007be0         dd         0x0000001c                                  ; Length of the record
0000000000007be4         dd         0x00000bdc                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007be8         db         0x78, 0xdf, 2 dup (0xff)                    ; begin 0x5b60
0000000000007bec         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x5bc0)
0000000000007bf0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007bf1         db  0x44 ; 'D'
0000000000007bf2         db  0x0e ; '.'
0000000000007bf3         db  0x10 ; '.'
0000000000007bf4         db  0x75 ; 'u'
0000000000007bf5         db  0x0a ; '.'
0000000000007bf6         db  0x0e ; '.'
0000000000007bf7         db  0x08 ; '.'
0000000000007bf8         db  0x47 ; 'G'
0000000000007bf9         db  0x0b ; '.'
0000000000007bfa         db  0x5f ; '_'
0000000000007bfb         db  0x0e ; '.'
0000000000007bfc         db  0x08 ; '.'
0000000000007bfd         db  0x00 ; '.'
0000000000007bfe         db  0x00 ; '.'
0000000000007bff         db  0x00 ; '.'
0000000000007c00         dd         0x0000001c                                  ; Length of the record
0000000000007c04         dd         0x00000bfc                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007c08         db         0xb8, 0xdf, 2 dup (0xff)                    ; begin 0x5bc0
0000000000007c0c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x5bfc)
0000000000007c10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c11         db  0x44 ; 'D'
0000000000007c12         db  0x0e ; '.'
0000000000007c13         db  0x10 ; '.'
0000000000007c14         db  0x61 ; 'a'
0000000000007c15         db  0x0a ; '.'
0000000000007c16         db  0x0e ; '.'
0000000000007c17         db  0x08 ; '.'
0000000000007c18         db  0x4b ; 'K'
0000000000007c19         db  0x0b ; '.'
0000000000007c1a         db  0x4b ; 'K'
0000000000007c1b         db  0x0e ; '.'
0000000000007c1c         db  0x08 ; '.'
0000000000007c1d         db  0x00 ; '.'
0000000000007c1e         db  0x00 ; '.'
0000000000007c1f         db  0x00 ; '.'
0000000000007c20         dd         0x00000044                                  ; Length of the record
0000000000007c24         dd         0x00000c1c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007c28         db         0xd8, 0xdf, 2 dup (0xff)                    ; begin 0x5c00
0000000000007c2c         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x5c65)
0000000000007c30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c31         db  0x42 ; 'B'
0000000000007c32         db  0x0e ; '.'
0000000000007c33         db  0x10 ; '.'
0000000000007c34         db  0x8f ; '.'
0000000000007c35         db  0x02 ; '.'
0000000000007c36         db  0x42 ; 'B'
0000000000007c37         db  0x0e ; '.'
0000000000007c38         db  0x18 ; '.'
0000000000007c39         db  0x8e ; '.'
0000000000007c3a         db  0x03 ; '.'
0000000000007c3b         db  0x45 ; 'E'
0000000000007c3c         db  0x0e ; '.'
0000000000007c3d         db  0x20 ; ' '
0000000000007c3e         db  0x8d ; '.'
0000000000007c3f         db  0x04 ; '.'
0000000000007c40         db  0x42 ; 'B'
0000000000007c41         db  0x0e ; '.'
0000000000007c42         db  0x28 ; '('
0000000000007c43         db  0x8c ; '.'
0000000000007c44         db  0x05 ; '.'
0000000000007c45         db  0x48 ; 'H'
0000000000007c46         db  0x0e ; '.'
0000000000007c47         db  0x30 ; '0'
0000000000007c48         db  0x86 ; '.'
0000000000007c49         db  0x06 ; '.'
0000000000007c4a         db  0x48 ; 'H'
0000000000007c4b         db  0x0e ; '.'
0000000000007c4c         db  0x38 ; '8'
0000000000007c4d         db  0x83 ; '.'
0000000000007c4e         db  0x07 ; '.'
0000000000007c4f         db  0x4d ; 'M'
0000000000007c50         db  0x0e ; '.'
0000000000007c51         db  0x40 ; '@'
0000000000007c52         db  0x72 ; 'r'
0000000000007c53         db  0x0e ; '.'
0000000000007c54         db  0x38 ; '8'
0000000000007c55         db  0x41 ; 'A'
0000000000007c56         db  0x0e ; '.'
0000000000007c57         db  0x30 ; '0'
0000000000007c58         db  0x41 ; 'A'
0000000000007c59         db  0x0e ; '.'
0000000000007c5a         db  0x28 ; '('
0000000000007c5b         db  0x42 ; 'B'
0000000000007c5c         db  0x0e ; '.'
0000000000007c5d         db  0x20 ; ' '
0000000000007c5e         db  0x42 ; 'B'
0000000000007c5f         db  0x0e ; '.'
0000000000007c60         db  0x18 ; '.'
0000000000007c61         db  0x42 ; 'B'
0000000000007c62         db  0x0e ; '.'
0000000000007c63         db  0x10 ; '.'
0000000000007c64         db  0x42 ; 'B'
0000000000007c65         db  0x0e ; '.'
0000000000007c66         db  0x08 ; '.'
0000000000007c67         db  0x00 ; '.'
0000000000007c68         dd         0x00000014                                  ; Length of the record
0000000000007c6c         dd         0x00000c64                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007c70         db         0x00, 0xe0, 2 dup (0xff)                    ; begin 0x5c70
0000000000007c74         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5c72)
0000000000007c78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c79         align      128
0000000000007c80         dd         0x00000010                                  ; Length of the record
0000000000007c84         dd         0x00000c7c                                  ; FDE: parent CIE at 0x7008 (FDE encoding = 0x1B)
0000000000007c88         db         0xf8, 0xdf, 2 dup (0xff)                    ; begin 0x5c80
0000000000007c8c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x5c8e)
0000000000007c90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c91         align      8


        ; Segment Segment 3
        ; Range: [0x208b10; 0x209238[ (1832 bytes)
        ; File offset : [35600; 36992[ (1392 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x208b10; 0x208b18[ (8 bytes)
        ; File offset : [35600; 35608[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000208b10         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x208b18; 0x208b20[ (8 bytes)
        ; File offset : [35608; 35616[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000208b18         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x208b20; 0x208c38[ (280 bytes)
        ; File offset : [35616; 35896[ (280 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     long_options:
0000000000208b20         db  0xfb ; '.'                                         ; DATA XREF=main+116
0000000000208b21         db  0x5d ; ']'
0000000000208b22         db  0x00 ; '.'
0000000000208b23         db  0x00 ; '.'
0000000000208b24         db  0x00 ; '.'
0000000000208b25         db  0x00 ; '.'
0000000000208b26         db  0x00 ; '.'
0000000000208b27         db  0x00 ; '.'
0000000000208b28         db  0x00 ; '.'
0000000000208b29         db  0x00 ; '.'
0000000000208b2a         db  0x00 ; '.'
0000000000208b2b         db  0x00 ; '.'
0000000000208b2c         db  0x00 ; '.'
0000000000208b2d         db  0x00 ; '.'
0000000000208b2e         db  0x00 ; '.'
0000000000208b2f         db  0x00 ; '.'
0000000000208b30         db  0x00 ; '.'
0000000000208b31         db  0x00 ; '.'
0000000000208b32         db  0x00 ; '.'
0000000000208b33         db  0x00 ; '.'
0000000000208b34         db  0x00 ; '.'
0000000000208b35         db  0x00 ; '.'
0000000000208b36         db  0x00 ; '.'
0000000000208b37         db  0x00 ; '.'
0000000000208b38         db  0x64 ; 'd'
0000000000208b39         db  0x00 ; '.'
0000000000208b3a         db  0x00 ; '.'
0000000000208b3b         db  0x00 ; '.'
0000000000208b3c         db  0x00 ; '.'
0000000000208b3d         db  0x00 ; '.'
0000000000208b3e         db  0x00 ; '.'
0000000000208b3f         db  0x00 ; '.'
0000000000208b40         db  0x02 ; '.'
0000000000208b41         db  0x5e ; '^'
0000000000208b42         db  0x00 ; '.'
0000000000208b43         db  0x00 ; '.'
0000000000208b44         db  0x00 ; '.'
0000000000208b45         db  0x00 ; '.'
0000000000208b46         db  0x00 ; '.'
0000000000208b47         db  0x00 ; '.'
0000000000208b48         db  0x01 ; '.'
0000000000208b49         db  0x00 ; '.'
0000000000208b4a         db  0x00 ; '.'
0000000000208b4b         db  0x00 ; '.'
0000000000208b4c         db  0x00 ; '.'
0000000000208b4d         db  0x00 ; '.'
0000000000208b4e         db  0x00 ; '.'
0000000000208b4f         db  0x00 ; '.'
0000000000208b50         db  0x00 ; '.'
0000000000208b51         db  0x00 ; '.'
0000000000208b52         db  0x00 ; '.'
0000000000208b53         db  0x00 ; '.'
0000000000208b54         db  0x00 ; '.'
0000000000208b55         db  0x00 ; '.'
0000000000208b56         db  0x00 ; '.'
0000000000208b57         db  0x00 ; '.'
0000000000208b58         db  0x77 ; 'w'
0000000000208b59         db  0x00 ; '.'
0000000000208b5a         db  0x00 ; '.'
0000000000208b5b         db  0x00 ; '.'
0000000000208b5c         db  0x00 ; '.'
0000000000208b5d         db  0x00 ; '.'
0000000000208b5e         db  0x00 ; '.'
0000000000208b5f         db  0x00 ; '.'
0000000000208b60         db  0x07 ; '.'
0000000000208b61         db  0x5e ; '^'
0000000000208b62         db  0x00 ; '.'
0000000000208b63         db  0x00 ; '.'
0000000000208b64         db  0x00 ; '.'
0000000000208b65         db  0x00 ; '.'
0000000000208b66         db  0x00 ; '.'
0000000000208b67         db  0x00 ; '.'
0000000000208b68         db  0x00 ; '.'
0000000000208b69         db  0x00 ; '.'
0000000000208b6a         db  0x00 ; '.'
0000000000208b6b         db  0x00 ; '.'
0000000000208b6c         db  0x00 ; '.'
0000000000208b6d         db  0x00 ; '.'
0000000000208b6e         db  0x00 ; '.'
0000000000208b6f         db  0x00 ; '.'
0000000000208b70         db  0x00 ; '.'
0000000000208b71         db  0x00 ; '.'
0000000000208b72         db  0x00 ; '.'
0000000000208b73         db  0x00 ; '.'
0000000000208b74         db  0x00 ; '.'
0000000000208b75         db  0x00 ; '.'
0000000000208b76         db  0x00 ; '.'
0000000000208b77         db  0x00 ; '.'
0000000000208b78         db  0x69 ; 'i'
0000000000208b79         db  0x00 ; '.'
0000000000208b7a         db  0x00 ; '.'
0000000000208b7b         db  0x00 ; '.'
0000000000208b7c         db  0x00 ; '.'
0000000000208b7d         db  0x00 ; '.'
0000000000208b7e         db  0x00 ; '.'
0000000000208b7f         db  0x00 ; '.'
0000000000208b80         db  0x16 ; '.'
0000000000208b81         db  0x5e ; '^'
0000000000208b82         db  0x00 ; '.'
0000000000208b83         db  0x00 ; '.'
0000000000208b84         db  0x00 ; '.'
0000000000208b85         db  0x00 ; '.'
0000000000208b86         db  0x00 ; '.'
0000000000208b87         db  0x00 ; '.'
0000000000208b88         db  0x00 ; '.'
0000000000208b89         db  0x00 ; '.'
0000000000208b8a         db  0x00 ; '.'
0000000000208b8b         db  0x00 ; '.'
0000000000208b8c         db  0x00 ; '.'
0000000000208b8d         db  0x00 ; '.'
0000000000208b8e         db  0x00 ; '.'
0000000000208b8f         db  0x00 ; '.'
0000000000208b90         db  0x00 ; '.'
0000000000208b91         db  0x00 ; '.'
0000000000208b92         db  0x00 ; '.'
0000000000208b93         db  0x00 ; '.'
0000000000208b94         db  0x00 ; '.'
0000000000208b95         db  0x00 ; '.'
0000000000208b96         db  0x00 ; '.'
0000000000208b97         db  0x00 ; '.'
0000000000208b98         db  0x7e ; '~'
0000000000208b99         db  0xff ; '.'
0000000000208b9a         db  0xff ; '.'
0000000000208b9b         db  0xff ; '.'
0000000000208b9c         db  0x00 ; '.'
0000000000208b9d         db  0x00 ; '.'
0000000000208b9e         db  0x00 ; '.'
0000000000208b9f         db  0x00 ; '.'
0000000000208ba0         db  0x1b ; '.'
0000000000208ba1         db  0x5e ; '^'
0000000000208ba2         db  0x00 ; '.'
0000000000208ba3         db  0x00 ; '.'
0000000000208ba4         db  0x00 ; '.'
0000000000208ba5         db  0x00 ; '.'
0000000000208ba6         db  0x00 ; '.'
0000000000208ba7         db  0x00 ; '.'
0000000000208ba8         db  0x00 ; '.'
0000000000208ba9         db  0x00 ; '.'
0000000000208baa         db  0x00 ; '.'
0000000000208bab         db  0x00 ; '.'
0000000000208bac         db  0x00 ; '.'
0000000000208bad         db  0x00 ; '.'
0000000000208bae         db  0x00 ; '.'
0000000000208baf         db  0x00 ; '.'
0000000000208bb0         db  0x00 ; '.'
0000000000208bb1         db  0x00 ; '.'
0000000000208bb2         db  0x00 ; '.'
0000000000208bb3         db  0x00 ; '.'
0000000000208bb4         db  0x00 ; '.'
0000000000208bb5         db  0x00 ; '.'
0000000000208bb6         db  0x00 ; '.'
0000000000208bb7         db  0x00 ; '.'
0000000000208bb8         db  0x7d ; '}'
0000000000208bb9         db  0xff ; '.'
0000000000208bba         db  0xff ; '.'
0000000000208bbb         db  0xff ; '.'
0000000000208bbc         db  0x00 ; '.'
0000000000208bbd         db  0x00 ; '.'
0000000000208bbe         db  0x00 ; '.'
0000000000208bbf         db  0x00 ; '.'
0000000000208bc0         db  0x00 ; '.'
0000000000208bc1         db  0x00 ; '.'
0000000000208bc2         db  0x00 ; '.'
0000000000208bc3         db  0x00 ; '.'
0000000000208bc4         db  0x00 ; '.'
0000000000208bc5         db  0x00 ; '.'
0000000000208bc6         db  0x00 ; '.'
0000000000208bc7         db  0x00 ; '.'
0000000000208bc8         db  0x00 ; '.'
0000000000208bc9         db  0x00 ; '.'
0000000000208bca         db  0x00 ; '.'
0000000000208bcb         db  0x00 ; '.'
0000000000208bcc         db  0x00 ; '.'
0000000000208bcd         db  0x00 ; '.'
0000000000208bce         db  0x00 ; '.'
0000000000208bcf         db  0x00 ; '.'
0000000000208bd0         db  0x00 ; '.'
0000000000208bd1         db  0x00 ; '.'
0000000000208bd2         db  0x00 ; '.'
0000000000208bd3         db  0x00 ; '.'
0000000000208bd4         db  0x00 ; '.'
0000000000208bd5         db  0x00 ; '.'
0000000000208bd6         db  0x00 ; '.'
0000000000208bd7         db  0x00 ; '.'
0000000000208bd8         db  0x00 ; '.'
0000000000208bd9         db  0x00 ; '.'
0000000000208bda         db  0x00 ; '.'
0000000000208bdb         db  0x00 ; '.'
0000000000208bdc         db  0x00 ; '.'
0000000000208bdd         db  0x00 ; '.'
0000000000208bde         db  0x00 ; '.'
0000000000208bdf         db  0x00 ; '.'
                     quoting_style_args:
0000000000208be0         db  0xc1 ; '.'
0000000000208be1         db  0x63 ; 'c'
0000000000208be2         db  0x00 ; '.'
0000000000208be3         db  0x00 ; '.'
0000000000208be4         db  0x00 ; '.'
0000000000208be5         db  0x00 ; '.'
0000000000208be6         db  0x00 ; '.'
0000000000208be7         db  0x00 ; '.'
0000000000208be8         db  0xc9 ; '.'
0000000000208be9         db  0x63 ; 'c'
0000000000208bea         db  0x00 ; '.'
0000000000208beb         db  0x00 ; '.'
0000000000208bec         db  0x00 ; '.'
0000000000208bed         db  0x00 ; '.'
0000000000208bee         db  0x00 ; '.'
0000000000208bef         db  0x00 ; '.'
0000000000208bf0         db  0xcf ; '.'
0000000000208bf1         db  0x63 ; 'c'
0000000000208bf2         db  0x00 ; '.'
0000000000208bf3         db  0x00 ; '.'
0000000000208bf4         db  0x00 ; '.'
0000000000208bf5         db  0x00 ; '.'
0000000000208bf6         db  0x00 ; '.'
0000000000208bf7         db  0x00 ; '.'
0000000000208bf8         db  0xdc ; '.'
0000000000208bf9         db  0x63 ; 'c'
0000000000208bfa         db  0x00 ; '.'
0000000000208bfb         db  0x00 ; '.'
0000000000208bfc         db  0x00 ; '.'
0000000000208bfd         db  0x00 ; '.'
0000000000208bfe         db  0x00 ; '.'
0000000000208bff         db  0x00 ; '.'
0000000000208c00         db  0xe9 ; '.'
0000000000208c01         db  0x63 ; 'c'
0000000000208c02         db  0x00 ; '.'
0000000000208c03         db  0x00 ; '.'
0000000000208c04         db  0x00 ; '.'
0000000000208c05         db  0x00 ; '.'
0000000000208c06         db  0x00 ; '.'
0000000000208c07         db  0x00 ; '.'
0000000000208c08         db  0xfd ; '.'
0000000000208c09         db  0x63 ; 'c'
0000000000208c0a         db  0x00 ; '.'
0000000000208c0b         db  0x00 ; '.'
0000000000208c0c         db  0x00 ; '.'
0000000000208c0d         db  0x00 ; '.'
0000000000208c0e         db  0x00 ; '.'
0000000000208c0f         db  0x00 ; '.'
0000000000208c10         db  0xff ; '.'
0000000000208c11         db  0x63 ; 'c'
0000000000208c12         db  0x00 ; '.'
0000000000208c13         db  0x00 ; '.'
0000000000208c14         db  0x00 ; '.'
0000000000208c15         db  0x00 ; '.'
0000000000208c16         db  0x00 ; '.'
0000000000208c17         db  0x00 ; '.'
0000000000208c18         db  0xe2 ; '.'
0000000000208c19         db  0x63 ; 'c'
0000000000208c1a         db  0x00 ; '.'
0000000000208c1b         db  0x00 ; '.'
0000000000208c1c         db  0x00 ; '.'
0000000000208c1d         db  0x00 ; '.'
0000000000208c1e         db  0x00 ; '.'
0000000000208c1f         db  0x00 ; '.'
0000000000208c20         db  0x7d ; '}'
0000000000208c21         db  0x5d ; ']'
0000000000208c22         db  0x00 ; '.'
0000000000208c23         db  0x00 ; '.'
0000000000208c24         db  0x00 ; '.'
0000000000208c25         db  0x00 ; '.'
0000000000208c26         db  0x00 ; '.'
0000000000208c27         db  0x00 ; '.'
0000000000208c28         db  0x07 ; '.'
0000000000208c29         db  0x64 ; 'd'
0000000000208c2a         db  0x00 ; '.'
0000000000208c2b         db  0x00 ; '.'
0000000000208c2c         db  0x00 ; '.'
0000000000208c2d         db  0x00 ; '.'
0000000000208c2e         db  0x00 ; '.'
0000000000208c2f         db  0x00 ; '.'
0000000000208c30         db  0x00 ; '.'
0000000000208c31         db  0x00 ; '.'
0000000000208c32         db  0x00 ; '.'
0000000000208c33         db  0x00 ; '.'
0000000000208c34         db  0x00 ; '.'
0000000000208c35         db  0x00 ; '.'
0000000000208c36         db  0x00 ; '.'
0000000000208c37         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x208c38; 0x208e28[ (496 bytes)
        ; File offset : [35896; 36392[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000208c38         db  0x01 ; '.'
0000000000208c39         db  0x00 ; '.'
0000000000208c3a         db  0x00 ; '.'
0000000000208c3b         db  0x00 ; '.'
0000000000208c3c         db  0x00 ; '.'
0000000000208c3d         db  0x00 ; '.'
0000000000208c3e         db  0x00 ; '.'
0000000000208c3f         db  0x00 ; '.'
0000000000208c40         db  0x01 ; '.'
0000000000208c41         db  0x00 ; '.'
0000000000208c42         db  0x00 ; '.'
0000000000208c43         db  0x00 ; '.'
0000000000208c44         db  0x00 ; '.'
0000000000208c45         db  0x00 ; '.'
0000000000208c46         db  0x00 ; '.'
0000000000208c47         db  0x00 ; '.'
0000000000208c48         db  0x0c ; '.'
0000000000208c49         db  0x00 ; '.'
0000000000208c4a         db  0x00 ; '.'
0000000000208c4b         db  0x00 ; '.'
0000000000208c4c         db  0x00 ; '.'
0000000000208c4d         db  0x00 ; '.'
0000000000208c4e         db  0x00 ; '.'
0000000000208c4f         db  0x00 ; '.'
0000000000208c50         db  0xa8 ; '.'
0000000000208c51         db  0x14 ; '.'
0000000000208c52         db  0x00 ; '.'
0000000000208c53         db  0x00 ; '.'
0000000000208c54         db  0x00 ; '.'
0000000000208c55         db  0x00 ; '.'
0000000000208c56         db  0x00 ; '.'
0000000000208c57         db  0x00 ; '.'
0000000000208c58         db  0x0d ; '.'
0000000000208c59         db  0x00 ; '.'
0000000000208c5a         db  0x00 ; '.'
0000000000208c5b         db  0x00 ; '.'
0000000000208c5c         db  0x00 ; '.'
0000000000208c5d         db  0x00 ; '.'
0000000000208c5e         db  0x00 ; '.'
0000000000208c5f         db  0x00 ; '.'
0000000000208c60         db  0x90 ; '.'
0000000000208c61         db  0x5c ; '\'
0000000000208c62         db  0x00 ; '.'
0000000000208c63         db  0x00 ; '.'
0000000000208c64         db  0x00 ; '.'
0000000000208c65         db  0x00 ; '.'
0000000000208c66         db  0x00 ; '.'
0000000000208c67         db  0x00 ; '.'
0000000000208c68         db  0x19 ; '.'
0000000000208c69         db  0x00 ; '.'
0000000000208c6a         db  0x00 ; '.'
0000000000208c6b         db  0x00 ; '.'
0000000000208c6c         db  0x00 ; '.'
0000000000208c6d         db  0x00 ; '.'
0000000000208c6e         db  0x00 ; '.'
0000000000208c6f         db  0x00 ; '.'
0000000000208c70         db  0x10 ; '.'
0000000000208c71         db  0x8b ; '.'
0000000000208c72         db  0x20 ; ' '
0000000000208c73         db  0x00 ; '.'
0000000000208c74         db  0x00 ; '.'
0000000000208c75         db  0x00 ; '.'
0000000000208c76         db  0x00 ; '.'
0000000000208c77         db  0x00 ; '.'
0000000000208c78         db  0x1b ; '.'
0000000000208c79         db  0x00 ; '.'
0000000000208c7a         db  0x00 ; '.'
0000000000208c7b         db  0x00 ; '.'
0000000000208c7c         db  0x00 ; '.'
0000000000208c7d         db  0x00 ; '.'
0000000000208c7e         db  0x00 ; '.'
0000000000208c7f         db  0x00 ; '.'
0000000000208c80         db  0x08 ; '.'
0000000000208c81         db  0x00 ; '.'
0000000000208c82         db  0x00 ; '.'
0000000000208c83         db  0x00 ; '.'
0000000000208c84         db  0x00 ; '.'
0000000000208c85         db  0x00 ; '.'
0000000000208c86         db  0x00 ; '.'
0000000000208c87         db  0x00 ; '.'
0000000000208c88         db  0x1a ; '.'
0000000000208c89         db  0x00 ; '.'
0000000000208c8a         db  0x00 ; '.'
0000000000208c8b         db  0x00 ; '.'
0000000000208c8c         db  0x00 ; '.'
0000000000208c8d         db  0x00 ; '.'
0000000000208c8e         db  0x00 ; '.'
0000000000208c8f         db  0x00 ; '.'
0000000000208c90         db  0x18 ; '.'
0000000000208c91         db  0x8b ; '.'
0000000000208c92         db  0x20 ; ' '
0000000000208c93         db  0x00 ; '.'
0000000000208c94         db  0x00 ; '.'
0000000000208c95         db  0x00 ; '.'
0000000000208c96         db  0x00 ; '.'
0000000000208c97         db  0x00 ; '.'
0000000000208c98         db  0x1c ; '.'
0000000000208c99         db  0x00 ; '.'
0000000000208c9a         db  0x00 ; '.'
0000000000208c9b         db  0x00 ; '.'
0000000000208c9c         db  0x00 ; '.'
0000000000208c9d         db  0x00 ; '.'
0000000000208c9e         db  0x00 ; '.'
0000000000208c9f         db  0x00 ; '.'
0000000000208ca0         db  0x08 ; '.'
0000000000208ca1         db  0x00 ; '.'
0000000000208ca2         db  0x00 ; '.'
0000000000208ca3         db  0x00 ; '.'
0000000000208ca4         db  0x00 ; '.'
0000000000208ca5         db  0x00 ; '.'
0000000000208ca6         db  0x00 ; '.'
0000000000208ca7         db  0x00 ; '.'
0000000000208ca8         db  0xf5 ; '.'
0000000000208ca9         db  0xfe ; '.'
0000000000208caa         db  0xff ; '.'
0000000000208cab         db  0x6f ; 'o'
0000000000208cac         db  0x00 ; '.'
0000000000208cad         db  0x00 ; '.'
0000000000208cae         db  0x00 ; '.'
0000000000208caf         db  0x00 ; '.'
0000000000208cb0         db  0x98 ; '.'
0000000000208cb1         db  0x02 ; '.'
0000000000208cb2         db  0x00 ; '.'
0000000000208cb3         db  0x00 ; '.'
0000000000208cb4         db  0x00 ; '.'
0000000000208cb5         db  0x00 ; '.'
0000000000208cb6         db  0x00 ; '.'
0000000000208cb7         db  0x00 ; '.'
0000000000208cb8         db  0x05 ; '.'
0000000000208cb9         db  0x00 ; '.'
0000000000208cba         db  0x00 ; '.'
0000000000208cbb         db  0x00 ; '.'
0000000000208cbc         db  0x00 ; '.'
0000000000208cbd         db  0x00 ; '.'
0000000000208cbe         db  0x00 ; '.'
0000000000208cbf         db  0x00 ; '.'
0000000000208cc0         db  0xf8 ; '.'
0000000000208cc1         db  0x08 ; '.'
0000000000208cc2         db  0x00 ; '.'
0000000000208cc3         db  0x00 ; '.'
0000000000208cc4         db  0x00 ; '.'
0000000000208cc5         db  0x00 ; '.'
0000000000208cc6         db  0x00 ; '.'
0000000000208cc7         db  0x00 ; '.'
0000000000208cc8         db  0x06 ; '.'
0000000000208cc9         db  0x00 ; '.'
0000000000208cca         db  0x00 ; '.'
0000000000208ccb         db  0x00 ; '.'
0000000000208ccc         db  0x00 ; '.'
0000000000208ccd         db  0x00 ; '.'
0000000000208cce         db  0x00 ; '.'
0000000000208ccf         db  0x00 ; '.'
0000000000208cd0         db  0xe0 ; '.'
0000000000208cd1         db  0x02 ; '.'
0000000000208cd2         db  0x00 ; '.'
0000000000208cd3         db  0x00 ; '.'
0000000000208cd4         db  0x00 ; '.'
0000000000208cd5         db  0x00 ; '.'
0000000000208cd6         db  0x00 ; '.'
0000000000208cd7         db  0x00 ; '.'
0000000000208cd8         db  0x0a ; '.'
0000000000208cd9         db  0x00 ; '.'
0000000000208cda         db  0x00 ; '.'
0000000000208cdb         db  0x00 ; '.'
0000000000208cdc         db  0x00 ; '.'
0000000000208cdd         db  0x00 ; '.'
0000000000208cde         db  0x00 ; '.'
0000000000208cdf         db  0x00 ; '.'
0000000000208ce0         db  0x01 ; '.'
0000000000208ce1         db  0x03 ; '.'
0000000000208ce2         db  0x00 ; '.'
0000000000208ce3         db  0x00 ; '.'
0000000000208ce4         db  0x00 ; '.'
0000000000208ce5         db  0x00 ; '.'
0000000000208ce6         db  0x00 ; '.'
0000000000208ce7         db  0x00 ; '.'
0000000000208ce8         db  0x0b ; '.'
0000000000208ce9         db  0x00 ; '.'
0000000000208cea         db  0x00 ; '.'
0000000000208ceb         db  0x00 ; '.'
0000000000208cec         db  0x00 ; '.'
0000000000208ced         db  0x00 ; '.'
0000000000208cee         db  0x00 ; '.'
0000000000208cef         db  0x00 ; '.'
0000000000208cf0         db  0x18 ; '.'
0000000000208cf1         db  0x00 ; '.'
0000000000208cf2         db  0x00 ; '.'
0000000000208cf3         db  0x00 ; '.'
0000000000208cf4         db  0x00 ; '.'
0000000000208cf5         db  0x00 ; '.'
0000000000208cf6         db  0x00 ; '.'
0000000000208cf7         db  0x00 ; '.'
0000000000208cf8         db  0x15 ; '.'
0000000000208cf9         db  0x00 ; '.'
0000000000208cfa         db  0x00 ; '.'
0000000000208cfb         db  0x00 ; '.'
0000000000208cfc         db  0x00 ; '.'
0000000000208cfd         db  0x00 ; '.'
0000000000208cfe         db  0x00 ; '.'
0000000000208cff         db  0x00 ; '.'
0000000000208d00         db  0x00 ; '.'
0000000000208d01         db  0x00 ; '.'
0000000000208d02         db  0x00 ; '.'
0000000000208d03         db  0x00 ; '.'
0000000000208d04         db  0x00 ; '.'
0000000000208d05         db  0x00 ; '.'
0000000000208d06         db  0x00 ; '.'
0000000000208d07         db  0x00 ; '.'
0000000000208d08         db  0x03 ; '.'
0000000000208d09         db  0x00 ; '.'
0000000000208d0a         db  0x00 ; '.'
0000000000208d0b         db  0x00 ; '.'
0000000000208d0c         db  0x00 ; '.'
0000000000208d0d         db  0x00 ; '.'
0000000000208d0e         db  0x00 ; '.'
0000000000208d0f         db  0x00 ; '.'
0000000000208d10         db  0x28 ; '('
0000000000208d11         db  0x8e ; '.'
0000000000208d12         db  0x20 ; ' '
0000000000208d13         db  0x00 ; '.'
0000000000208d14         db  0x00 ; '.'
0000000000208d15         db  0x00 ; '.'
0000000000208d16         db  0x00 ; '.'
0000000000208d17         db  0x00 ; '.'
0000000000208d18         db  0x02 ; '.'
0000000000208d19         db  0x00 ; '.'
0000000000208d1a         db  0x00 ; '.'
0000000000208d1b         db  0x00 ; '.'
0000000000208d1c         db  0x00 ; '.'
0000000000208d1d         db  0x00 ; '.'
0000000000208d1e         db  0x00 ; '.'
0000000000208d1f         db  0x00 ; '.'
0000000000208d20         db  0xb0 ; '.'
0000000000208d21         db  0x04 ; '.'
0000000000208d22         db  0x00 ; '.'
0000000000208d23         db  0x00 ; '.'
0000000000208d24         db  0x00 ; '.'
0000000000208d25         db  0x00 ; '.'
0000000000208d26         db  0x00 ; '.'
0000000000208d27         db  0x00 ; '.'
0000000000208d28         db  0x14 ; '.'
0000000000208d29         db  0x00 ; '.'
0000000000208d2a         db  0x00 ; '.'
0000000000208d2b         db  0x00 ; '.'
0000000000208d2c         db  0x00 ; '.'
0000000000208d2d         db  0x00 ; '.'
0000000000208d2e         db  0x00 ; '.'
0000000000208d2f         db  0x00 ; '.'
0000000000208d30         db  0x07 ; '.'
0000000000208d31         db  0x00 ; '.'
0000000000208d32         db  0x00 ; '.'
0000000000208d33         db  0x00 ; '.'
0000000000208d34         db  0x00 ; '.'
0000000000208d35         db  0x00 ; '.'
0000000000208d36         db  0x00 ; '.'
0000000000208d37         db  0x00 ; '.'
0000000000208d38         db  0x17 ; '.'
0000000000208d39         db  0x00 ; '.'
0000000000208d3a         db  0x00 ; '.'
0000000000208d3b         db  0x00 ; '.'
0000000000208d3c         db  0x00 ; '.'
0000000000208d3d         db  0x00 ; '.'
0000000000208d3e         db  0x00 ; '.'
0000000000208d3f         db  0x00 ; '.'
0000000000208d40         db  0xf8 ; '.'
0000000000208d41         db  0x0f ; '.'
0000000000208d42         db  0x00 ; '.'
0000000000208d43         db  0x00 ; '.'
0000000000208d44         db  0x00 ; '.'
0000000000208d45         db  0x00 ; '.'
0000000000208d46         db  0x00 ; '.'
0000000000208d47         db  0x00 ; '.'
0000000000208d48         db  0x07 ; '.'
0000000000208d49         db  0x00 ; '.'
0000000000208d4a         db  0x00 ; '.'
0000000000208d4b         db  0x00 ; '.'
0000000000208d4c         db  0x00 ; '.'
0000000000208d4d         db  0x00 ; '.'
0000000000208d4e         db  0x00 ; '.'
0000000000208d4f         db  0x00 ; '.'
0000000000208d50         db  0xe0 ; '.'
0000000000208d51         db  0x0c ; '.'
0000000000208d52         db  0x00 ; '.'
0000000000208d53         db  0x00 ; '.'
0000000000208d54         db  0x00 ; '.'
0000000000208d55         db  0x00 ; '.'
0000000000208d56         db  0x00 ; '.'
0000000000208d57         db  0x00 ; '.'
0000000000208d58         db  0x08 ; '.'
0000000000208d59         db  0x00 ; '.'
0000000000208d5a         db  0x00 ; '.'
0000000000208d5b         db  0x00 ; '.'
0000000000208d5c         db  0x00 ; '.'
0000000000208d5d         db  0x00 ; '.'
0000000000208d5e         db  0x00 ; '.'
0000000000208d5f         db  0x00 ; '.'
0000000000208d60         db  0x18 ; '.'
0000000000208d61         db  0x03 ; '.'
0000000000208d62         db  0x00 ; '.'
0000000000208d63         db  0x00 ; '.'
0000000000208d64         db  0x00 ; '.'
0000000000208d65         db  0x00 ; '.'
0000000000208d66         db  0x00 ; '.'
0000000000208d67         db  0x00 ; '.'
0000000000208d68         db  0x09 ; '.'
0000000000208d69         db  0x00 ; '.'
0000000000208d6a         db  0x00 ; '.'
0000000000208d6b         db  0x00 ; '.'
0000000000208d6c         db  0x00 ; '.'
0000000000208d6d         db  0x00 ; '.'
0000000000208d6e         db  0x00 ; '.'
0000000000208d6f         db  0x00 ; '.'
0000000000208d70         db  0x18 ; '.'
0000000000208d71         db  0x00 ; '.'
0000000000208d72         db  0x00 ; '.'
0000000000208d73         db  0x00 ; '.'
0000000000208d74         db  0x00 ; '.'
0000000000208d75         db  0x00 ; '.'
0000000000208d76         db  0x00 ; '.'
0000000000208d77         db  0x00 ; '.'
0000000000208d78         db  0x1e ; '.'
0000000000208d79         db  0x00 ; '.'
0000000000208d7a         db  0x00 ; '.'
0000000000208d7b         db  0x00 ; '.'
0000000000208d7c         db  0x00 ; '.'
0000000000208d7d         db  0x00 ; '.'
0000000000208d7e         db  0x00 ; '.'
0000000000208d7f         db  0x00 ; '.'
0000000000208d80         db  0x08 ; '.'
0000000000208d81         db  0x00 ; '.'
0000000000208d82         db  0x00 ; '.'
0000000000208d83         db  0x00 ; '.'
0000000000208d84         db  0x00 ; '.'
0000000000208d85         db  0x00 ; '.'
0000000000208d86         db  0x00 ; '.'
0000000000208d87         db  0x00 ; '.'
0000000000208d88         db  0xfb ; '.'
0000000000208d89         db  0xff ; '.'
0000000000208d8a         db  0xff ; '.'
0000000000208d8b         db  0x6f ; 'o'
0000000000208d8c         db  0x00 ; '.'
0000000000208d8d         db  0x00 ; '.'
0000000000208d8e         db  0x00 ; '.'
0000000000208d8f         db  0x00 ; '.'
0000000000208d90         db  0x01 ; '.'
0000000000208d91         db  0x00 ; '.'
0000000000208d92         db  0x00 ; '.'
0000000000208d93         db  0x08 ; '.'
0000000000208d94         db  0x00 ; '.'
0000000000208d95         db  0x00 ; '.'
0000000000208d96         db  0x00 ; '.'
0000000000208d97         db  0x00 ; '.'
0000000000208d98         db  0xfe ; '.'
0000000000208d99         db  0xff ; '.'
0000000000208d9a         db  0xff ; '.'
0000000000208d9b         db  0x6f ; 'o'
0000000000208d9c         db  0x00 ; '.'
0000000000208d9d         db  0x00 ; '.'
0000000000208d9e         db  0x00 ; '.'
0000000000208d9f         db  0x00 ; '.'
0000000000208da0         db  0x80 ; '.'
0000000000208da1         db  0x0c ; '.'
0000000000208da2         db  0x00 ; '.'
0000000000208da3         db  0x00 ; '.'
0000000000208da4         db  0x00 ; '.'
0000000000208da5         db  0x00 ; '.'
0000000000208da6         db  0x00 ; '.'
0000000000208da7         db  0x00 ; '.'
0000000000208da8         db  0xff ; '.'
0000000000208da9         db  0xff ; '.'
0000000000208daa         db  0xff ; '.'
0000000000208dab         db  0x6f ; 'o'
0000000000208dac         db  0x00 ; '.'
0000000000208dad         db  0x00 ; '.'
0000000000208dae         db  0x00 ; '.'
0000000000208daf         db  0x00 ; '.'
0000000000208db0         db  0x01 ; '.'
0000000000208db1         db  0x00 ; '.'
0000000000208db2         db  0x00 ; '.'
0000000000208db3         db  0x00 ; '.'
0000000000208db4         db  0x00 ; '.'
0000000000208db5         db  0x00 ; '.'
0000000000208db6         db  0x00 ; '.'
0000000000208db7         db  0x00 ; '.'
0000000000208db8         db  0xf0 ; '.'
0000000000208db9         db  0xff ; '.'
0000000000208dba         db  0xff ; '.'
0000000000208dbb         db  0x6f ; 'o'
0000000000208dbc         db  0x00 ; '.'
0000000000208dbd         db  0x00 ; '.'
0000000000208dbe         db  0x00 ; '.'
0000000000208dbf         db  0x00 ; '.'
0000000000208dc0         db  0xfa ; '.'
0000000000208dc1         db  0x0b ; '.'
0000000000208dc2         db  0x00 ; '.'
0000000000208dc3         db  0x00 ; '.'
0000000000208dc4         db  0x00 ; '.'
0000000000208dc5         db  0x00 ; '.'
0000000000208dc6         db  0x00 ; '.'
0000000000208dc7         db  0x00 ; '.'
0000000000208dc8         db  0xf9 ; '.'
0000000000208dc9         db  0xff ; '.'
0000000000208dca         db  0xff ; '.'
0000000000208dcb         db  0x6f ; 'o'
0000000000208dcc         db  0x00 ; '.'
0000000000208dcd         db  0x00 ; '.'
0000000000208dce         db  0x00 ; '.'
0000000000208dcf         db  0x00 ; '.'
0000000000208dd0         db  0x15 ; '.'
0000000000208dd1         db  0x00 ; '.'
0000000000208dd2         db  0x00 ; '.'
0000000000208dd3         db  0x00 ; '.'
0000000000208dd4         db  0x00 ; '.'
0000000000208dd5         db  0x00 ; '.'
0000000000208dd6         db  0x00 ; '.'
0000000000208dd7         db  0x00 ; '.'
0000000000208dd8         db  0x00 ; '.'
0000000000208dd9         db  0x00 ; '.'
0000000000208dda         db  0x00 ; '.'
0000000000208ddb         db  0x00 ; '.'
0000000000208ddc         db  0x00 ; '.'
0000000000208ddd         db  0x00 ; '.'
0000000000208dde         db  0x00 ; '.'
0000000000208ddf         db  0x00 ; '.'
0000000000208de0         db  0x00 ; '.'
0000000000208de1         db  0x00 ; '.'
0000000000208de2         db  0x00 ; '.'
0000000000208de3         db  0x00 ; '.'
0000000000208de4         db  0x00 ; '.'
0000000000208de5         db  0x00 ; '.'
0000000000208de6         db  0x00 ; '.'
0000000000208de7         db  0x00 ; '.'
0000000000208de8         db  0x00 ; '.'
0000000000208de9         db  0x00 ; '.'
0000000000208dea         db  0x00 ; '.'
0000000000208deb         db  0x00 ; '.'
0000000000208dec         db  0x00 ; '.'
0000000000208ded         db  0x00 ; '.'
0000000000208dee         db  0x00 ; '.'
0000000000208def         db  0x00 ; '.'
0000000000208df0         db  0x00 ; '.'
0000000000208df1         db  0x00 ; '.'
0000000000208df2         db  0x00 ; '.'
0000000000208df3         db  0x00 ; '.'
0000000000208df4         db  0x00 ; '.'
0000000000208df5         db  0x00 ; '.'
0000000000208df6         db  0x00 ; '.'
0000000000208df7         db  0x00 ; '.'
0000000000208df8         db  0x00 ; '.'
0000000000208df9         db  0x00 ; '.'
0000000000208dfa         db  0x00 ; '.'
0000000000208dfb         db  0x00 ; '.'
0000000000208dfc         db  0x00 ; '.'
0000000000208dfd         db  0x00 ; '.'
0000000000208dfe         db  0x00 ; '.'
0000000000208dff         db  0x00 ; '.'
0000000000208e00         db  0x00 ; '.'
0000000000208e01         db  0x00 ; '.'
0000000000208e02         db  0x00 ; '.'
0000000000208e03         db  0x00 ; '.'
0000000000208e04         db  0x00 ; '.'
0000000000208e05         db  0x00 ; '.'
0000000000208e06         db  0x00 ; '.'
0000000000208e07         db  0x00 ; '.'
0000000000208e08         db  0x00 ; '.'
0000000000208e09         db  0x00 ; '.'
0000000000208e0a         db  0x00 ; '.'
0000000000208e0b         db  0x00 ; '.'
0000000000208e0c         db  0x00 ; '.'
0000000000208e0d         db  0x00 ; '.'
0000000000208e0e         db  0x00 ; '.'
0000000000208e0f         db  0x00 ; '.'
0000000000208e10         db  0x00 ; '.'
0000000000208e11         db  0x00 ; '.'
0000000000208e12         db  0x00 ; '.'
0000000000208e13         db  0x00 ; '.'
0000000000208e14         db  0x00 ; '.'
0000000000208e15         db  0x00 ; '.'
0000000000208e16         db  0x00 ; '.'
0000000000208e17         db  0x00 ; '.'
0000000000208e18         db  0x00 ; '.'
0000000000208e19         db  0x00 ; '.'
0000000000208e1a         db  0x00 ; '.'
0000000000208e1b         db  0x00 ; '.'
0000000000208e1c         db  0x00 ; '.'
0000000000208e1d         db  0x00 ; '.'
0000000000208e1e         db  0x00 ; '.'
0000000000208e1f         db  0x00 ; '.'
0000000000208e20         db  0x00 ; '.'
0000000000208e21         db  0x00 ; '.'
0000000000208e22         db  0x00 ; '.'
0000000000208e23         db  0x00 ; '.'
0000000000208e24         db  0x00 ; '.'
0000000000208e25         db  0x00 ; '.'
0000000000208e26         db  0x00 ; '.'
0000000000208e27         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x208e28; 0x208ff8[ (464 bytes)
        ; File offset : [36392; 36856[ (464 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000208e28         db  0x38 ; '8'
0000000000208e29         db  0x8c ; '.'
0000000000208e2a         db  0x20 ; ' '
0000000000208e2b         db  0x00 ; '.'
0000000000208e2c         db  0x00 ; '.'
0000000000208e2d         db  0x00 ; '.'
0000000000208e2e         db  0x00 ; '.'
0000000000208e2f         db  0x00 ; '.'
                     qword_208e30:
0000000000208e30         dq         0x0000000000000000                          ; DATA XREF=0x14c0
0000000000208e38         db  0x00 ; '.'                                         ; DATA XREF=0x14c6
0000000000208e39         db  0x00 ; '.'
0000000000208e3a         db  0x00 ; '.'
0000000000208e3b         db  0x00 ; '.'
0000000000208e3c         db  0x00 ; '.'
0000000000208e3d         db  0x00 ; '.'
0000000000208e3e         db  0x00 ; '.'
0000000000208e3f         db  0x00 ; '.'
                     free@GOT:        // free
0000000000208e40         dq         0x0000000000209240                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000208e48         dq         0x0000000000209248                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000208e50         dq         0x0000000000209250                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000208e58         dq         0x0000000000209258                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000208e60         dq         0x0000000000209268                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000208e68         dq         0x0000000000209270                          ; DATA XREF=j___fpending
                     fread_unlocked@GOT:        // fread_unlocked
0000000000208e70         dq         0x0000000000209278                          ; DATA XREF=j_fread_unlocked
                     textdomain@GOT:        // textdomain
0000000000208e78         dq         0x0000000000209280                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000208e80         dq         0x0000000000209288                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000208e88         dq         0x0000000000209290                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000208e90         dq         0x0000000000209298                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000208e98         dq         0x00000000002092a0                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000208ea0         dq         0x00000000002092a8                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000208ea8         dq         0x00000000002092b0                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000208eb0         dq         0x00000000002092b8                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000208eb8         dq         0x00000000002092c0                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
0000000000208ec0         dq         0x00000000002092c8                          ; DATA XREF=j_strchr
                     __overflow@GOT:        // __overflow
0000000000208ec8         dq         0x00000000002092d0                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000208ed0         dq         0x00000000002092d8                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000208ed8         dq         0x00000000002092e0                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000208ee0         dq         0x00000000002092e8                          ; DATA XREF=j___assert_fail
                     __strtoul_internal@GOT:        // __strtoul_internal
0000000000208ee8         dq         0x00000000002092f0                          ; DATA XREF=j___strtoul_internal
                     memset@GOT:        // memset
0000000000208ef0         dq         0x00000000002092f8                          ; DATA XREF=j_memset
                     posix_fadvise@GOT:        // posix_fadvise
0000000000208ef8         dq         0x0000000000209300                          ; DATA XREF=j_posix_fadvise
                     memchr@GOT:        // memchr
0000000000208f00         dq         0x0000000000209308                          ; DATA XREF=j_memchr
                     memcmp@GOT:        // memcmp
0000000000208f08         dq         0x0000000000209318                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000208f10         dq         0x0000000000209320                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000208f18         dq         0x0000000000209328                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
0000000000208f20         dq         0x0000000000209330                          ; DATA XREF=j_strcmp
                     memcpy@GOT:        // memcpy
0000000000208f28         dq         0x0000000000209340                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000208f30         dq         0x0000000000209348                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000208f38         dq         0x0000000000209350                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000208f40         dq         0x0000000000209358                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000208f48         dq         0x0000000000209360                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000208f50         dq         0x0000000000209368                          ; DATA XREF=j___freading
                     fwrite_unlocked@GOT:        // fwrite_unlocked
0000000000208f58         dq         0x0000000000209370                          ; DATA XREF=j_fwrite_unlocked
                     realloc@GOT:        // realloc
0000000000208f60         dq         0x0000000000209378                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000208f68         dq         0x0000000000209380                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000208f70         dq         0x0000000000209388                          ; DATA XREF=j___printf_chk
                     memmove@GOT:        // memmove
0000000000208f78         dq         0x0000000000209390                          ; DATA XREF=j_memmove
                     error@GOT:        // error
0000000000208f80         dq         0x0000000000209398                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000208f88         dq         0x00000000002093a0                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
0000000000208f90         dq         0x00000000002093a8                          ; DATA XREF=j_fopen
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000208f98         dq         0x00000000002093b0                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000208fa0         dq         0x00000000002093b8                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000208fa8         dq         0x00000000002093c0                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000208fb0         dq         0x00000000002093c8                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000208fb8         dq         0x00000000002093d8                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000208fc0         dq         0x00000000002093e0                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000208fc8         dq         0x00000000002093f0                          ; DATA XREF=j___ctype_b_loc
                     qword_208fd0:
0000000000208fd0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000208fd8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000208fd9         db  0x00 ; '.'
0000000000208fda         db  0x00 ; '.'
0000000000208fdb         db  0x00 ; '.'
0000000000208fdc         db  0x00 ; '.'
0000000000208fdd         db  0x00 ; '.'
0000000000208fde         db  0x00 ; '.'
0000000000208fdf         db  0x00 ; '.'
                     qword_208fe0:
0000000000208fe0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_208fe8:
0000000000208fe8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_208ff0:
0000000000208ff0         dq         0x0000000000000000                          ; DATA XREF=j_qword_208ff0, __do_global_dtors_aux+9
0000000000208ff8         db  0x00 ; '.'
0000000000208ff9         db  0x00 ; '.'
0000000000208ffa         db  0x00 ; '.'
0000000000208ffb         db  0x00 ; '.'
0000000000208ffc         db  0x00 ; '.'
0000000000208ffd         db  0x00 ; '.'
0000000000208ffe         db  0x00 ; '.'
0000000000208fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x209000; 0x209080[ (128 bytes)
        ; File offset : [36864; 36992[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000209000         db  0x00 ; '.'
0000000000209001         db  0x00 ; '.'
0000000000209002         db  0x00 ; '.'
0000000000209003         db  0x00 ; '.'
0000000000209004         db  0x00 ; '.'
0000000000209005         db  0x00 ; '.'
0000000000209006         db  0x00 ; '.'
0000000000209007         db  0x00 ; '.'
                     __dso_handle:
0000000000209008         dq         0x0000000000209008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
0000000000209010         dq         0x0000000000006233                          ; "8.31", DATA XREF=main+290
                     exit_failure:
0000000000209018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020901c         db  0x00 ; '.'
000000000020901d         db  0x00 ; '.'
000000000020901e         db  0x00 ; '.'
000000000020901f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000209020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000209021         db  0x00 ; '.'
0000000000209022         db  0x00 ; '.'
0000000000209023         db  0x00 ; '.'
0000000000209024         db  0x00 ; '.'
0000000000209025         db  0x00 ; '.'
0000000000209026         db  0x00 ; '.'
0000000000209027         db  0x00 ; '.'
0000000000209028         db  0x00 ; '.'
0000000000209029         db  0x00 ; '.'
000000000020902a         db  0x00 ; '.'
000000000020902b         db  0x00 ; '.'
000000000020902c         db  0x00 ; '.'
000000000020902d         db  0x00 ; '.'
000000000020902e         db  0x00 ; '.'
000000000020902f         db  0x00 ; '.'
0000000000209030         db  0x00 ; '.'
0000000000209031         db  0x00 ; '.'
0000000000209032         db  0x00 ; '.'
0000000000209033         db  0x00 ; '.'
0000000000209034         db  0x00 ; '.'
0000000000209035         db  0x00 ; '.'
0000000000209036         db  0x00 ; '.'
0000000000209037         db  0x00 ; '.'
0000000000209038         db  0x00 ; '.'
0000000000209039         db  0x00 ; '.'
000000000020903a         db  0x00 ; '.'
000000000020903b         db  0x00 ; '.'
000000000020903c         db  0x00 ; '.'
000000000020903d         db  0x00 ; '.'
000000000020903e         db  0x00 ; '.'
000000000020903f         db  0x00 ; '.'
0000000000209040         db  0x00 ; '.'
0000000000209041         db  0x00 ; '.'
0000000000209042         db  0x00 ; '.'
0000000000209043         db  0x00 ; '.'
0000000000209044         db  0x00 ; '.'
0000000000209045         db  0x00 ; '.'
0000000000209046         db  0x00 ; '.'
0000000000209047         db  0x00 ; '.'
0000000000209048         db  0x00 ; '.'
0000000000209049         db  0x00 ; '.'
000000000020904a         db  0x00 ; '.'
000000000020904b         db  0x00 ; '.'
000000000020904c         db  0x00 ; '.'
000000000020904d         db  0x00 ; '.'
000000000020904e         db  0x00 ; '.'
000000000020904f         db  0x00 ; '.'
0000000000209050         db  0x00 ; '.'
0000000000209051         db  0x00 ; '.'
0000000000209052         db  0x00 ; '.'
0000000000209053         db  0x00 ; '.'
0000000000209054         db  0x00 ; '.'
0000000000209055         db  0x00 ; '.'
0000000000209056         db  0x00 ; '.'
0000000000209057         db  0x00 ; '.'
                     nslots:
0000000000209058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020905c         align      32
                     slotvec:
0000000000209060         dq         0x0000000000209070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
0000000000209068         db  0x00 ; '.'
0000000000209069         db  0x00 ; '.'
000000000020906a         db  0x00 ; '.'
000000000020906b         db  0x00 ; '.'
000000000020906c         db  0x00 ; '.'
000000000020906d         db  0x00 ; '.'
000000000020906e         db  0x00 ; '.'
000000000020906f         db  0x00 ; '.'
                     slotvec0:
0000000000209070         dq         1.26481e-321, 1.05447e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x209080; 0x209238[ (440 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
0000000000209080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
0000000000209081         db  0x00 ; '.'
0000000000209082         db  0x00 ; '.'
0000000000209083         db  0x00 ; '.'
0000000000209084         db  0x00 ; '.'
0000000000209085         db  0x00 ; '.'
0000000000209086         db  0x00 ; '.'
0000000000209087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
0000000000209088         db  0x00 ; '.'                                         ; DATA XREF=main+283, main+497, main+1392, main+1481, usage+164, usage+201, usage+238, usage+275, usage+312, usage+944, close_stdout+6
0000000000209089         db  0x00 ; '.'
000000000020908a         db  0x00 ; '.'
000000000020908b         db  0x00 ; '.'
000000000020908c         db  0x00 ; '.'
000000000020908d         db  0x00 ; '.'
000000000020908e         db  0x00 ; '.'
000000000020908f         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
0000000000209090         db  0x00 ; '.'                                         ; DATA XREF=main+475
0000000000209091         db  0x00 ; '.'
0000000000209092         db  0x00 ; '.'
0000000000209093         db  0x00 ; '.'
0000000000209094         db  0x00 ; '.'
0000000000209095         db  0x00 ; '.'
0000000000209096         db  0x00 ; '.'
0000000000209097         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
0000000000209098         db  0x00 ; '.'                                         ; DATA XREF=main+335
0000000000209099         db  0x00 ; '.'
000000000020909a         db  0x00 ; '.'
000000000020909b         db  0x00 ; '.'
000000000020909c         db  0x00 ; '.'
000000000020909d         db  0x00 ; '.'
000000000020909e         db  0x00 ; '.'
000000000020909f         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
00000000002090a0         db  0x00 ; '.'                                         ; DATA XREF=main+193
00000000002090a1         db  0x00 ; '.'
00000000002090a2         db  0x00 ; '.'
00000000002090a3         db  0x00 ; '.'
00000000002090a4         db  0x00 ; '.'
00000000002090a5         db  0x00 ; '.'
00000000002090a6         db  0x00 ; '.'
00000000002090a7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002090a8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002090a9         db  0x00 ; '.'
00000000002090aa         db  0x00 ; '.'
00000000002090ab         db  0x00 ; '.'
00000000002090ac         db  0x00 ; '.'
00000000002090ad         db  0x00 ; '.'
00000000002090ae         db  0x00 ; '.'
00000000002090af         db  0x00 ; '.'
00000000002090b0         db  0x00 ; '.'
00000000002090b1         db  0x00 ; '.'
00000000002090b2         db  0x00 ; '.'
00000000002090b3         db  0x00 ; '.'
00000000002090b4         db  0x00 ; '.'
00000000002090b5         db  0x00 ; '.'
00000000002090b6         db  0x00 ; '.'
00000000002090b7         db  0x00 ; '.'
00000000002090b8         db  0x00 ; '.'
00000000002090b9         db  0x00 ; '.'
00000000002090ba         db  0x00 ; '.'
00000000002090bb         db  0x00 ; '.'
00000000002090bc         db  0x00 ; '.'
00000000002090bd         db  0x00 ; '.'
00000000002090be         db  0x00 ; '.'
00000000002090bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002090c0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
00000000002090c1         db  0x00 ; '.'
00000000002090c2         db  0x00 ; '.'
00000000002090c3         db  0x00 ; '.'
00000000002090c4         db  0x00 ; '.'
00000000002090c5         db  0x00 ; '.'
00000000002090c6         db  0x00 ; '.'
00000000002090c7         db  0x00 ; '.'
                     completed.7697:
00000000002090c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
00000000002090c9         db  0x00 ; '.'
00000000002090ca         db  0x00 ; '.'
00000000002090cb         db  0x00 ; '.'
00000000002090cc         db  0x00 ; '.'
00000000002090cd         db  0x00 ; '.'
00000000002090ce         db  0x00 ; '.'
00000000002090cf         db  0x00 ; '.'
                     ignore_EPIPE:
00000000002090d0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
00000000002090d1         db  0x00 ; '.'
00000000002090d2         db  0x00 ; '.'
00000000002090d3         db  0x00 ; '.'
00000000002090d4         db  0x00 ; '.'
00000000002090d5         db  0x00 ; '.'
00000000002090d6         db  0x00 ; '.'
00000000002090d7         db  0x00 ; '.'
                     file_name:
00000000002090d8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
00000000002090d9         db  0x00 ; '.'
00000000002090da         db  0x00 ; '.'
00000000002090db         db  0x00 ; '.'
00000000002090dc         db  0x00 ; '.'
00000000002090dd         db  0x00 ; '.'
00000000002090de         db  0x00 ; '.'
00000000002090df         db  0x00 ; '.'
                     program_name:
00000000002090e0         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
00000000002090e1         db  0x00 ; '.'
00000000002090e2         db  0x00 ; '.'
00000000002090e3         db  0x00 ; '.'
00000000002090e4         db  0x00 ; '.'
00000000002090e5         db  0x00 ; '.'
00000000002090e6         db  0x00 ; '.'
00000000002090e7         db  0x00 ; '.'
00000000002090e8         db  0x00 ; '.'
00000000002090e9         db  0x00 ; '.'
00000000002090ea         db  0x00 ; '.'
00000000002090eb         db  0x00 ; '.'
00000000002090ec         db  0x00 ; '.'
00000000002090ed         db  0x00 ; '.'
00000000002090ee         db  0x00 ; '.'
00000000002090ef         db  0x00 ; '.'
00000000002090f0         db  0x00 ; '.'
00000000002090f1         db  0x00 ; '.'
00000000002090f2         db  0x00 ; '.'
00000000002090f3         db  0x00 ; '.'
00000000002090f4         db  0x00 ; '.'
00000000002090f5         db  0x00 ; '.'
00000000002090f6         db  0x00 ; '.'
00000000002090f7         db  0x00 ; '.'
00000000002090f8         db  0x00 ; '.'
00000000002090f9         db  0x00 ; '.'
00000000002090fa         db  0x00 ; '.'
00000000002090fb         db  0x00 ; '.'
00000000002090fc         db  0x00 ; '.'
00000000002090fd         db  0x00 ; '.'
00000000002090fe         db  0x00 ; '.'
00000000002090ff         db  0x00 ; '.'
                     slot0:
0000000000209100         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000209101         db  0x00 ; '.'
0000000000209102         db  0x00 ; '.'
0000000000209103         db  0x00 ; '.'
0000000000209104         db  0x00 ; '.'
0000000000209105         db  0x00 ; '.'
0000000000209106         db  0x00 ; '.'
0000000000209107         db  0x00 ; '.'
0000000000209108         db  0x00 ; '.'
0000000000209109         db  0x00 ; '.'
000000000020910a         db  0x00 ; '.'
000000000020910b         db  0x00 ; '.'
000000000020910c         db  0x00 ; '.'
000000000020910d         db  0x00 ; '.'
000000000020910e         db  0x00 ; '.'
000000000020910f         db  0x00 ; '.'
0000000000209110         db  0x00 ; '.'
0000000000209111         db  0x00 ; '.'
0000000000209112         db  0x00 ; '.'
0000000000209113         db  0x00 ; '.'
0000000000209114         db  0x00 ; '.'
0000000000209115         db  0x00 ; '.'
0000000000209116         db  0x00 ; '.'
0000000000209117         db  0x00 ; '.'
0000000000209118         db  0x00 ; '.'
0000000000209119         db  0x00 ; '.'
000000000020911a         db  0x00 ; '.'
000000000020911b         db  0x00 ; '.'
000000000020911c         db  0x00 ; '.'
000000000020911d         db  0x00 ; '.'
000000000020911e         db  0x00 ; '.'
000000000020911f         db  0x00 ; '.'
0000000000209120         db  0x00 ; '.'
0000000000209121         db  0x00 ; '.'
0000000000209122         db  0x00 ; '.'
0000000000209123         db  0x00 ; '.'
0000000000209124         db  0x00 ; '.'
0000000000209125         db  0x00 ; '.'
0000000000209126         db  0x00 ; '.'
0000000000209127         db  0x00 ; '.'
0000000000209128         db  0x00 ; '.'
0000000000209129         db  0x00 ; '.'
000000000020912a         db  0x00 ; '.'
000000000020912b         db  0x00 ; '.'
000000000020912c         db  0x00 ; '.'
000000000020912d         db  0x00 ; '.'
000000000020912e         db  0x00 ; '.'
000000000020912f         db  0x00 ; '.'
0000000000209130         db  0x00 ; '.'
0000000000209131         db  0x00 ; '.'
0000000000209132         db  0x00 ; '.'
0000000000209133         db  0x00 ; '.'
0000000000209134         db  0x00 ; '.'
0000000000209135         db  0x00 ; '.'
0000000000209136         db  0x00 ; '.'
0000000000209137         db  0x00 ; '.'
0000000000209138         db  0x00 ; '.'
0000000000209139         db  0x00 ; '.'
000000000020913a         db  0x00 ; '.'
000000000020913b         db  0x00 ; '.'
000000000020913c         db  0x00 ; '.'
000000000020913d         db  0x00 ; '.'
000000000020913e         db  0x00 ; '.'
000000000020913f         db  0x00 ; '.'
0000000000209140         db  0x00 ; '.'
0000000000209141         db  0x00 ; '.'
0000000000209142         db  0x00 ; '.'
0000000000209143         db  0x00 ; '.'
0000000000209144         db  0x00 ; '.'
0000000000209145         db  0x00 ; '.'
0000000000209146         db  0x00 ; '.'
0000000000209147         db  0x00 ; '.'
0000000000209148         db  0x00 ; '.'
0000000000209149         db  0x00 ; '.'
000000000020914a         db  0x00 ; '.'
000000000020914b         db  0x00 ; '.'
000000000020914c         db  0x00 ; '.'
000000000020914d         db  0x00 ; '.'
000000000020914e         db  0x00 ; '.'
000000000020914f         db  0x00 ; '.'
0000000000209150         db  0x00 ; '.'
0000000000209151         db  0x00 ; '.'
0000000000209152         db  0x00 ; '.'
0000000000209153         db  0x00 ; '.'
0000000000209154         db  0x00 ; '.'
0000000000209155         db  0x00 ; '.'
0000000000209156         db  0x00 ; '.'
0000000000209157         db  0x00 ; '.'
0000000000209158         db  0x00 ; '.'
0000000000209159         db  0x00 ; '.'
000000000020915a         db  0x00 ; '.'
000000000020915b         db  0x00 ; '.'
000000000020915c         db  0x00 ; '.'
000000000020915d         db  0x00 ; '.'
000000000020915e         db  0x00 ; '.'
000000000020915f         db  0x00 ; '.'
0000000000209160         db  0x00 ; '.'
0000000000209161         db  0x00 ; '.'
0000000000209162         db  0x00 ; '.'
0000000000209163         db  0x00 ; '.'
0000000000209164         db  0x00 ; '.'
0000000000209165         db  0x00 ; '.'
0000000000209166         db  0x00 ; '.'
0000000000209167         db  0x00 ; '.'
0000000000209168         db  0x00 ; '.'
0000000000209169         db  0x00 ; '.'
000000000020916a         db  0x00 ; '.'
000000000020916b         db  0x00 ; '.'
000000000020916c         db  0x00 ; '.'
000000000020916d         db  0x00 ; '.'
000000000020916e         db  0x00 ; '.'
000000000020916f         db  0x00 ; '.'
0000000000209170         db  0x00 ; '.'
0000000000209171         db  0x00 ; '.'
0000000000209172         db  0x00 ; '.'
0000000000209173         db  0x00 ; '.'
0000000000209174         db  0x00 ; '.'
0000000000209175         db  0x00 ; '.'
0000000000209176         db  0x00 ; '.'
0000000000209177         db  0x00 ; '.'
0000000000209178         db  0x00 ; '.'
0000000000209179         db  0x00 ; '.'
000000000020917a         db  0x00 ; '.'
000000000020917b         db  0x00 ; '.'
000000000020917c         db  0x00 ; '.'
000000000020917d         db  0x00 ; '.'
000000000020917e         db  0x00 ; '.'
000000000020917f         db  0x00 ; '.'
0000000000209180         db  0x00 ; '.'
0000000000209181         db  0x00 ; '.'
0000000000209182         db  0x00 ; '.'
0000000000209183         db  0x00 ; '.'
0000000000209184         db  0x00 ; '.'
0000000000209185         db  0x00 ; '.'
0000000000209186         db  0x00 ; '.'
0000000000209187         db  0x00 ; '.'
0000000000209188         db  0x00 ; '.'
0000000000209189         db  0x00 ; '.'
000000000020918a         db  0x00 ; '.'
000000000020918b         db  0x00 ; '.'
000000000020918c         db  0x00 ; '.'
000000000020918d         db  0x00 ; '.'
000000000020918e         db  0x00 ; '.'
000000000020918f         db  0x00 ; '.'
0000000000209190         db  0x00 ; '.'
0000000000209191         db  0x00 ; '.'
0000000000209192         db  0x00 ; '.'
0000000000209193         db  0x00 ; '.'
0000000000209194         db  0x00 ; '.'
0000000000209195         db  0x00 ; '.'
0000000000209196         db  0x00 ; '.'
0000000000209197         db  0x00 ; '.'
0000000000209198         db  0x00 ; '.'
0000000000209199         db  0x00 ; '.'
000000000020919a         db  0x00 ; '.'
000000000020919b         db  0x00 ; '.'
000000000020919c         db  0x00 ; '.'
000000000020919d         db  0x00 ; '.'
000000000020919e         db  0x00 ; '.'
000000000020919f         db  0x00 ; '.'
00000000002091a0         db  0x00 ; '.'
00000000002091a1         db  0x00 ; '.'
00000000002091a2         db  0x00 ; '.'
00000000002091a3         db  0x00 ; '.'
00000000002091a4         db  0x00 ; '.'
00000000002091a5         db  0x00 ; '.'
00000000002091a6         db  0x00 ; '.'
00000000002091a7         db  0x00 ; '.'
00000000002091a8         db  0x00 ; '.'
00000000002091a9         db  0x00 ; '.'
00000000002091aa         db  0x00 ; '.'
00000000002091ab         db  0x00 ; '.'
00000000002091ac         db  0x00 ; '.'
00000000002091ad         db  0x00 ; '.'
00000000002091ae         db  0x00 ; '.'
00000000002091af         db  0x00 ; '.'
00000000002091b0         db  0x00 ; '.'
00000000002091b1         db  0x00 ; '.'
00000000002091b2         db  0x00 ; '.'
00000000002091b3         db  0x00 ; '.'
00000000002091b4         db  0x00 ; '.'
00000000002091b5         db  0x00 ; '.'
00000000002091b6         db  0x00 ; '.'
00000000002091b7         db  0x00 ; '.'
00000000002091b8         db  0x00 ; '.'
00000000002091b9         db  0x00 ; '.'
00000000002091ba         db  0x00 ; '.'
00000000002091bb         db  0x00 ; '.'
00000000002091bc         db  0x00 ; '.'
00000000002091bd         db  0x00 ; '.'
00000000002091be         db  0x00 ; '.'
00000000002091bf         db  0x00 ; '.'
00000000002091c0         db  0x00 ; '.'
00000000002091c1         db  0x00 ; '.'
00000000002091c2         db  0x00 ; '.'
00000000002091c3         db  0x00 ; '.'
00000000002091c4         db  0x00 ; '.'
00000000002091c5         db  0x00 ; '.'
00000000002091c6         db  0x00 ; '.'
00000000002091c7         db  0x00 ; '.'
00000000002091c8         db  0x00 ; '.'
00000000002091c9         db  0x00 ; '.'
00000000002091ca         db  0x00 ; '.'
00000000002091cb         db  0x00 ; '.'
00000000002091cc         db  0x00 ; '.'
00000000002091cd         db  0x00 ; '.'
00000000002091ce         db  0x00 ; '.'
00000000002091cf         db  0x00 ; '.'
00000000002091d0         db  0x00 ; '.'
00000000002091d1         db  0x00 ; '.'
00000000002091d2         db  0x00 ; '.'
00000000002091d3         db  0x00 ; '.'
00000000002091d4         db  0x00 ; '.'
00000000002091d5         db  0x00 ; '.'
00000000002091d6         db  0x00 ; '.'
00000000002091d7         db  0x00 ; '.'
00000000002091d8         db  0x00 ; '.'
00000000002091d9         db  0x00 ; '.'
00000000002091da         db  0x00 ; '.'
00000000002091db         db  0x00 ; '.'
00000000002091dc         db  0x00 ; '.'
00000000002091dd         db  0x00 ; '.'
00000000002091de         db  0x00 ; '.'
00000000002091df         db  0x00 ; '.'
00000000002091e0         db  0x00 ; '.'
00000000002091e1         db  0x00 ; '.'
00000000002091e2         db  0x00 ; '.'
00000000002091e3         db  0x00 ; '.'
00000000002091e4         db  0x00 ; '.'
00000000002091e5         db  0x00 ; '.'
00000000002091e6         db  0x00 ; '.'
00000000002091e7         db  0x00 ; '.'
00000000002091e8         db  0x00 ; '.'
00000000002091e9         db  0x00 ; '.'
00000000002091ea         db  0x00 ; '.'
00000000002091eb         db  0x00 ; '.'
00000000002091ec         db  0x00 ; '.'
00000000002091ed         db  0x00 ; '.'
00000000002091ee         db  0x00 ; '.'
00000000002091ef         db  0x00 ; '.'
00000000002091f0         db  0x00 ; '.'
00000000002091f1         db  0x00 ; '.'
00000000002091f2         db  0x00 ; '.'
00000000002091f3         db  0x00 ; '.'
00000000002091f4         db  0x00 ; '.'
00000000002091f5         db  0x00 ; '.'
00000000002091f6         db  0x00 ; '.'
00000000002091f7         db  0x00 ; '.'
00000000002091f8         db  0x00 ; '.'
00000000002091f9         db  0x00 ; '.'
00000000002091fa         db  0x00 ; '.'
00000000002091fb         db  0x00 ; '.'
00000000002091fc         db  0x00 ; '.'
00000000002091fd         db  0x00 ; '.'
00000000002091fe         db  0x00 ; '.'
00000000002091ff         db  0x00 ; '.'
                     default_quoting_options:
0000000000209200         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000209201         db  0x00 ; '.'
0000000000209202         db  0x00 ; '.'
0000000000209203         db  0x00 ; '.'
0000000000209204         db  0x00 ; '.'
0000000000209205         db  0x00 ; '.'
0000000000209206         db  0x00 ; '.'
0000000000209207         db  0x00 ; '.'
0000000000209208         db  0x00 ; '.'
0000000000209209         db  0x00 ; '.'
000000000020920a         db  0x00 ; '.'
000000000020920b         db  0x00 ; '.'
000000000020920c         db  0x00 ; '.'
000000000020920d         db  0x00 ; '.'
000000000020920e         db  0x00 ; '.'
000000000020920f         db  0x00 ; '.'
0000000000209210         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000209211         db  0x00 ; '.'
0000000000209212         db  0x00 ; '.'
0000000000209213         db  0x00 ; '.'
0000000000209214         db  0x00 ; '.'
0000000000209215         db  0x00 ; '.'
0000000000209216         db  0x00 ; '.'
0000000000209217         db  0x00 ; '.'
0000000000209218         db  0x00 ; '.'
0000000000209219         db  0x00 ; '.'
000000000020921a         db  0x00 ; '.'
000000000020921b         db  0x00 ; '.'
000000000020921c         db  0x00 ; '.'
000000000020921d         db  0x00 ; '.'
000000000020921e         db  0x00 ; '.'
000000000020921f         db  0x00 ; '.'
0000000000209220         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000209221         db  0x00 ; '.'
0000000000209222         db  0x00 ; '.'
0000000000209223         db  0x00 ; '.'
0000000000209224         db  0x00 ; '.'
0000000000209225         db  0x00 ; '.'
0000000000209226         db  0x00 ; '.'
0000000000209227         db  0x00 ; '.'
0000000000209228         db  0x00 ; '.'
0000000000209229         db  0x00 ; '.'
000000000020922a         db  0x00 ; '.'
000000000020922b         db  0x00 ; '.'
000000000020922c         db  0x00 ; '.'
000000000020922d         db  0x00 ; '.'
000000000020922e         db  0x00 ; '.'
000000000020922f         db  0x00 ; '.'
                     qword_209230:
0000000000209230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000209231         db  0x00 ; '.'
0000000000209232         db  0x00 ; '.'
0000000000209233         db  0x00 ; '.'
0000000000209234         db  0x00 ; '.'
0000000000209235         db  0x00 ; '.'
0000000000209236         db  0x00 ; '.'
0000000000209237         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x209240; 0x2095b0[ (880 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x209240; 0x4127f0[ (2135472 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     free:
0000000000209240         extern function code                                   ; DATA XREF=free@GOT
                     abort:
0000000000209248         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
0000000000209250         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
0000000000209258         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
0000000000209260         extern function code
                     _exit:
0000000000209268         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
0000000000209270         extern function code                                   ; DATA XREF=__fpending@GOT
                     fread_unlocked:
0000000000209278         extern function code                                   ; DATA XREF=fread_unlocked@GOT
                     textdomain:
0000000000209280         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
0000000000209288         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
0000000000209290         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
0000000000209298         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
00000000002092a0         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
00000000002092a8         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
00000000002092b0         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
00000000002092b8         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
00000000002092c0         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
00000000002092c8         extern function code                                   ; DATA XREF=strchr@GOT
                     __overflow:
00000000002092d0         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
00000000002092d8         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
00000000002092e0         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
00000000002092e8         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     __strtoul_internal:
00000000002092f0         extern function code                                   ; DATA XREF=__strtoul_internal@GOT
                     memset:
00000000002092f8         extern function code                                   ; DATA XREF=memset@GOT
                     posix_fadvise:
0000000000209300         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     memchr:
0000000000209308         extern function code                                   ; DATA XREF=memchr@GOT
                     __libc_start_main:
0000000000209310         extern function code
                     memcmp:
0000000000209318         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000209320         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000209328         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
0000000000209330         extern function code                                   ; DATA XREF=strcmp@GOT
                     __gmon_start__:
0000000000209338         extern function code
                     memcpy:
0000000000209340         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
0000000000209348         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
0000000000209350         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
0000000000209358         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
0000000000209360         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
0000000000209368         extern function code                                   ; DATA XREF=__freading@GOT
                     fwrite_unlocked:
0000000000209370         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     realloc:
0000000000209378         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
0000000000209380         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
0000000000209388         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     memmove:
0000000000209390         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
0000000000209398         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
00000000002093a0         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
00000000002093a8         extern function code                                   ; DATA XREF=fopen@GOT
                     __cxa_atexit:
00000000002093b0         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
00000000002093b8         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
00000000002093c0         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
00000000002093c8         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
00000000002093d0         extern function code
                     mbsinit:
00000000002093d8         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
00000000002093e0         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
00000000002093e8         extern function code
                     __ctype_b_loc:
00000000002093f0         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     free@@GLIBC_2.2.5:
00000000002093f8         extern function code
                     abort@@GLIBC_2.2.5:
0000000000209400         extern function code
                     __errno_location@@GLIBC_2.2.5:
0000000000209408         extern function code
                     strncmp@@GLIBC_2.2.5:
0000000000209410         extern function code
                     _ITM_deregisterTMCloneTable_209418:        // _ITM_deregisterTMCloneTable
0000000000209418         extern function code
                     _exit@@GLIBC_2.2.5:
0000000000209420         extern function code
                     __fpending@@GLIBC_2.2.5:
0000000000209428         extern function code
                     fread_unlocked@@GLIBC_2.2.5:
0000000000209430         extern function code
                     textdomain@@GLIBC_2.2.5:
0000000000209438         extern function code
                     fclose@@GLIBC_2.2.5:
0000000000209440         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
0000000000209448         extern function code
                     dcgettext@@GLIBC_2.2.5:
0000000000209450         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
0000000000209458         extern function code
                     strlen@@GLIBC_2.2.5:
0000000000209460         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
0000000000209468         extern function code
                     getopt_long@@GLIBC_2.2.5:
0000000000209470         extern function code
                     mbrtowc@@GLIBC_2.2.5:
0000000000209478         extern function code
                     strchr@@GLIBC_2.2.5:
0000000000209480         extern function code
                     __overflow@@GLIBC_2.2.5:
0000000000209488         extern function code
                     strrchr@@GLIBC_2.2.5:
0000000000209490         extern function code
                     lseek@@GLIBC_2.2.5:
0000000000209498         extern function code
                     __assert_fail@@GLIBC_2.2.5:
00000000002094a0         extern function code
                     __strtoul_internal@@GLIBC_2.2.5:
00000000002094a8         extern function code
                     memset@@GLIBC_2.2.5:
00000000002094b0         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
00000000002094b8         extern function code
                     memchr@@GLIBC_2.2.5:
00000000002094c0         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
00000000002094c8         extern function code
                     memcmp@@GLIBC_2.2.5:
00000000002094d0         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
00000000002094d8         extern function code
                     calloc@@GLIBC_2.2.5:
00000000002094e0         extern function code
                     strcmp@@GLIBC_2.2.5:
00000000002094e8         extern function code
                     __gmon_start___2094f0:        // __gmon_start__
00000000002094f0         extern function code
                     memcpy@@GLIBC_2.14:
00000000002094f8         extern function code
                     fileno@@GLIBC_2.2.5:
0000000000209500         extern function code
                     malloc@@GLIBC_2.2.5:
0000000000209508         extern function code
                     fflush@@GLIBC_2.2.5:
0000000000209510         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
0000000000209518         extern function code
                     __freading@@GLIBC_2.2.5:
0000000000209520         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
0000000000209528         extern function code
                     realloc@@GLIBC_2.2.5:
0000000000209530         extern function code
                     setlocale@@GLIBC_2.2.5:
0000000000209538         extern function code
                     __printf_chk@@GLIBC_2.3.4:
0000000000209540         extern function code
                     memmove@@GLIBC_2.2.5:
0000000000209548         extern function code
                     error@@GLIBC_2.2.5:
0000000000209550         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000209558         extern function code
                     fopen@@GLIBC_2.2.5:
0000000000209560         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
0000000000209568         extern function code
                     exit@@GLIBC_2.2.5:
0000000000209570         extern function code
                     fwrite@@GLIBC_2.2.5:
0000000000209578         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
0000000000209580         extern function code
                     _ITM_registerTMCloneTable_209588:        // _ITM_registerTMCloneTable
0000000000209588         extern function code
                     mbsinit@@GLIBC_2.2.5:
0000000000209590         extern function code
                     iswprint@@GLIBC_2.2.5:
0000000000209598         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
00000000002095a0         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
00000000002095a8         extern function code
