0x4b70:	sub	rsp, 8
0x4b74:	add	rsp, 8
0x4b78:	ret	


0x4b60:	mov	rdx, qword ptr [rip + 0x2034a1]
0x4b67:	xor	esi, esi
0x4b69:	jmp	0x1520


0x4b50:	ret	


0x4ae0:	push	r15
0x4ae2:	push	r14
0x4ae4:	mov	r15, rdx
0x4ae7:	push	r13
0x4ae9:	push	r12
0x4aeb:	lea	r12, [rip + 0x2030be]
0x4af2:	push	rbp
0x4af3:	lea	rbp, [rip + 0x2030be]
0x4afa:	push	rbx
0x4afb:	mov	r13d, edi
0x4afe:	mov	r14, rsi
0x4b01:	sub	rbp, r12
0x4b04:	sub	rsp, 8
0x4b08:	sar	rbp, 3
0x4b0c:	call	0x12b0


0x4aa0:	sub	rsp, 8
0x4aa4:	mov	edi, 0xe
0x4aa9:	call	0x1490


0x4a40:	sub	rsp, 8
0x4a44:	xor	esi, esi
0x4a46:	call	0x14c0


0x49c0:	push	r12
0x49c2:	push	rbp
0x49c3:	mov	rbp, rdi
0x49c6:	push	rbx
0x49c7:	call	0x1330


0x4930:	push	r13
0x4932:	push	r12
0x4934:	mov	r13, rsi
0x4937:	push	rbp
0x4938:	push	rbx
0x4939:	mov	rbx, rdi
0x493c:	mov	r12, rdx
0x493f:	sub	rsp, 0x18
0x4943:	mov	rax, qword ptr fs:[0x28]
0x494c:	mov	qword ptr [rsp + 8], rax
0x4951:	xor	eax, eax
0x4953:	lea	rax, [rsp + 4]
0x4958:	test	rdi, rdi
0x495b:	cmove	rbx, rax
0x495f:	mov	rdi, rbx
0x4962:	call	0x13d0


0x48d0:	mov	rax, qword ptr [rdi + 8]
0x48d4:	cmp	qword ptr [rdi + 0x10], rax
0x48d8:	je	0x48e0


0x4890:	test	rdi, rdi
0x4893:	push	rbx
0x4894:	mov	rbx, rdi
0x4897:	je	0x48aa


0x4810:	push	r12
0x4812:	push	rbp
0x4813:	push	rbx
0x4814:	mov	rbx, rdi
0x4817:	call	0x1460


0x47d0:	lea	rsi, [rip + 0x16f8]
0x47d7:	sub	rsp, 8
0x47db:	mov	edx, 5
0x47e0:	xor	edi, edi
0x47e2:	call	0x1380


0x47b0:	push	rbx
0x47b1:	mov	rbx, rdi
0x47b4:	call	0x13a0


0x4780:	push	rbp
0x4781:	push	rbx
0x4782:	mov	rbp, rdi
0x4785:	mov	rdi, rsi
0x4788:	mov	rbx, rsi
0x478b:	sub	rsp, 8
0x478f:	call	0x4580


0x4750:	mov	rax, rdi
0x4753:	sub	rsp, 8
0x4757:	mul	rsi
0x475a:	seto	dl
0x475d:	test	rax, rax
0x4760:	js	0x4779


0x4730:	push	rbx
0x4731:	mov	rbx, rdi
0x4734:	call	0x4580


0x46e0:	test	rdi, rdi
0x46e3:	mov	rax, qword ptr [rsi]
0x46e6:	je	0x4710


0x4650:	test	rdi, rdi
0x4653:	mov	r9, rdx
0x4656:	mov	rcx, qword ptr [rsi]
0x4659:	je	0x4690


0x4620:	mov	rax, rsi
0x4623:	mul	rdx
0x4626:	mov	rsi, rax
0x4629:	seto	al
0x462c:	test	rsi, rsi
0x462f:	js	0x463b


0x45e0:	test	rsi, rsi
0x45e3:	push	rbx
0x45e4:	mov	rbx, rsi
0x45e7:	jne	0x45ee


0x45d0:	jmp	0x4580


0x45a0:	mov	rax, rdi
0x45a3:	mul	rsi
0x45a6:	mov	rdi, rax
0x45a9:	seto	al
0x45ac:	test	rdi, rdi
0x45af:	js	0x45bb


0x4580:	push	rbx
0x4581:	mov	rbx, rdi
0x4584:	call	0x1470


0x4500:	push	rbx
0x4501:	lea	rsi, [rip + 0x16b3]
0x4508:	mov	edx, 5
0x450d:	xor	edi, edi
0x450f:	call	0x1380


0x4420:	push	rbp
0x4421:	push	rbx
0x4422:	mov	r10d, 0x20
0x4428:	xor	r11d, r11d
0x442b:	sub	rsp, 0xb8
0x4432:	mov	rax, qword ptr fs:[0x28]
0x443b:	mov	qword ptr [rsp + 0x78], rax
0x4440:	xor	eax, eax
0x4442:	lea	rax, [rsp + 0xd0]
0x444a:	mov	qword ptr [rsp + 0xa0], r8
0x4452:	lea	rbx, [rsp + 0xd0]
0x445a:	lea	r8, [rsp + 0x20]
0x445f:	mov	qword ptr [rsp + 0xa8], r9
0x4467:	mov	dword ptr [rsp + 8], 0x20
0x446f:	mov	qword ptr [rsp + 0x10], rax
0x4474:	lea	rax, [rsp + 0x80]
0x447c:	xor	r9d, r9d
0x447f:	mov	qword ptr [rsp + 0x18], rax
0x4484:	mov	rbp, rax
0x4487:	nop	word ptr [rax + rax]
0x4490:	cmp	r10d, 0x2f
0x4494:	ja	0x44ec


0x43a0:	sub	rsp, 0x68
0x43a4:	mov	r10, r8
0x43a7:	xor	r9d, r9d
0x43aa:	mov	rax, qword ptr fs:[0x28]
0x43b3:	mov	qword ptr [rsp + 0x58], rax
0x43b8:	xor	eax, eax
0x43ba:	mov	r8, rsp
0x43bd:	nop	dword ptr [rax]
0x43c0:	mov	eax, dword ptr [r10]
0x43c3:	cmp	eax, 0x2f
0x43c6:	ja	0x440a


0x4380:	xor	r9d, r9d
0x4383:	cmp	qword ptr [r8], 0
0x4387:	je	0x439b


0x3f60:	push	r15
0x3f62:	push	r14
0x3f64:	push	r13
0x3f66:	push	r12
0x3f68:	mov	r12, r9
0x3f6b:	push	rbp
0x3f6c:	push	rbx
0x3f6d:	mov	rbp, rdi
0x3f70:	mov	rbx, r8
0x3f73:	sub	rsp, 0x28
0x3f77:	test	rsi, rsi
0x3f7a:	je	0x4098


0x3f40:	lea	rcx, [rip + 0x2040d9]
0x3f47:	mov	rsi, rdi
0x3f4a:	mov	rdx, -1
0x3f51:	xor	edi, edi
0x3f53:	jmp	0x3600


0x3f20:	lea	rcx, [rip + 0x2040f9]
0x3f27:	mov	rdx, -1
0x3f2e:	jmp	0x3600


0x3f00:	lea	rcx, [rip + 0x204119]
0x3f07:	mov	rdx, rsi
0x3f0a:	mov	rsi, rdi
0x3f0d:	xor	edi, edi
0x3f0f:	jmp	0x3600


0x3ef0:	lea	rcx, [rip + 0x204129]
0x3ef7:	jmp	0x3600


0x3ed0:	mov	r8, rcx
0x3ed3:	mov	rcx, rdx
0x3ed6:	mov	rdx, rsi
0x3ed9:	mov	rsi, rdi
0x3edc:	xor	edi, edi
0x3ede:	jmp	0x3e00


0x3eb0:	mov	rcx, rdx
0x3eb3:	mov	r8, -1
0x3eba:	mov	rdx, rsi
0x3ebd:	mov	rsi, rdi
0x3ec0:	xor	edi, edi
0x3ec2:	jmp	0x3e00


0x3ea0:	mov	r8, -1
0x3ea7:	jmp	0x3e00


0x3e00:	sub	rsp, 0x48
0x3e04:	mov	r9, rcx
0x3e07:	mov	rcx, qword ptr [rip + 0x204442]
0x3e0e:	movdqa	xmm0, xmmword ptr [rip + 0x20440a]
0x3e16:	mov	rax, qword ptr fs:[0x28]
0x3e1f:	mov	qword ptr [rsp + 0x38], rax
0x3e24:	xor	eax, eax
0x3e26:	movaps	xmmword ptr [rsp], xmm0
0x3e2a:	test	rsi, rsi
0x3e2d:	mov	qword ptr [rsp + 0x30], rcx
0x3e32:	mov	dword ptr [rsp], 0xa
0x3e39:	movdqa	xmm0, xmmword ptr [rip + 0x2043ef]
0x3e41:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x3e46:	movdqa	xmm0, xmmword ptr [rip + 0x2043f2]
0x3e4e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x3e53:	je	0x3e87


0x3d70:	sub	rsp, 0x48
0x3d74:	mov	rax, rdx
0x3d77:	mov	rdx, qword ptr fs:[0x28]
0x3d80:	mov	qword ptr [rsp + 0x38], rdx
0x3d85:	xor	edx, edx
0x3d87:	cmp	esi, 0xa
0x3d8a:	je	0x3df4


0x3d60:	mov	edx, 0x3a
0x3d65:	jmp	0x3c90


0x3d40:	mov	edx, 0x3a
0x3d45:	mov	rsi, -1
0x3d4c:	jmp	0x3c90


0x3d30:	movsx	edx, sil
0x3d34:	mov	rsi, -1
0x3d3b:	jmp	0x3c90


0x3c90:	sub	rsp, 0x48
0x3c94:	mov	ecx, edx
0x3c96:	mov	rax, qword ptr fs:[0x28]
0x3c9f:	mov	qword ptr [rsp + 0x38], rax
0x3ca4:	xor	eax, eax
0x3ca6:	mov	rax, qword ptr [rip + 0x2045a3]
0x3cad:	mov	r8, rsp
0x3cb0:	and	ecx, 0x1f
0x3cb3:	movdqa	xmm0, xmmword ptr [rip + 0x204565]
0x3cbb:	mov	qword ptr [rsp + 0x30], rax
0x3cc0:	mov	eax, edx
0x3cc2:	movaps	xmmword ptr [rsp], xmm0
0x3cc6:	shr	al, 5
0x3cc9:	movzx	eax, al
0x3ccc:	lea	r9, [r8 + rax*4 + 8]
0x3cd1:	movdqa	xmm0, xmmword ptr [rip + 0x204557]
0x3cd9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x3cde:	movdqa	xmm0, xmmword ptr [rip + 0x20455a]
0x3ce6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x3ceb:	mov	edx, dword ptr [r9]
0x3cee:	mov	eax, edx
0x3cf0:	shr	eax, cl
0x3cf2:	not	eax
0x3cf4:	and	eax, 1
0x3cf7:	shl	eax, cl
0x3cf9:	mov	rcx, r8
0x3cfc:	xor	eax, edx
0x3cfe:	mov	rdx, rsi
0x3d01:	mov	rsi, rdi
0x3d04:	mov	dword ptr [r9], eax
0x3d07:	xor	edi, edi
0x3d09:	call	0x3600


0x3c80:	mov	rcx, rdx
0x3c83:	mov	rdx, rsi
0x3c86:	mov	esi, edi
0x3c88:	xor	edi, edi
0x3c8a:	jmp	0x3be0


0x3c70:	mov	rdx, rsi
0x3c73:	mov	esi, edi
0x3c75:	xor	edi, edi
0x3c77:	jmp	0x3b50


0x3be0:	sub	rsp, 0x48
0x3be4:	mov	rax, rdx
0x3be7:	mov	rdx, rcx
0x3bea:	mov	rcx, qword ptr fs:[0x28]
0x3bf3:	mov	qword ptr [rsp + 0x38], rcx
0x3bf8:	xor	ecx, ecx
0x3bfa:	cmp	esi, 0xa
0x3bfd:	je	0x3c60


0x3b50:	sub	rsp, 0x48
0x3b54:	mov	rax, rdx
0x3b57:	mov	rdx, qword ptr fs:[0x28]
0x3b60:	mov	qword ptr [rsp + 0x38], rdx
0x3b65:	xor	edx, edx
0x3b67:	cmp	esi, 0xa
0x3b6a:	je	0x3bd4


0x3b30:	lea	rcx, [rip + 0x2046e9]
0x3b37:	mov	rdx, rsi
0x3b3a:	mov	rsi, rdi
0x3b3d:	xor	edi, edi
0x3b3f:	jmp	0x3600


0x3b10:	lea	rcx, [rip + 0x204709]
0x3b17:	mov	rsi, rdi
0x3b1a:	mov	rdx, -1
0x3b21:	xor	edi, edi
0x3b23:	jmp	0x3600


0x3b00:	lea	rcx, [rip + 0x204719]
0x3b07:	jmp	0x3600


0x3ae0:	lea	rcx, [rip + 0x204739]
0x3ae7:	mov	rdx, -1
0x3aee:	jmp	0x3600


0x3a40:	mov	eax, dword ptr [rip + 0x204612]
0x3a46:	push	r12
0x3a48:	mov	r12, qword ptr [rip + 0x204611]
0x3a4f:	push	rbp
0x3a50:	push	rbx
0x3a51:	cmp	eax, 1
0x3a54:	jle	0x3a81


0x3a30:	mov	rcx, rdx
0x3a33:	xor	edx, edx
0x3a35:	jmp	0x3940


0x3940:	push	r15
0x3942:	push	r14
0x3944:	lea	rax, [rip + 0x2048d5]
0x394b:	push	r13
0x394d:	push	r12
0x394f:	mov	r12, rdx
0x3952:	push	rbp
0x3953:	push	rbx
0x3954:	mov	rbx, rcx
0x3957:	mov	r14, rdi
0x395a:	mov	r15, rsi
0x395d:	sub	rsp, 0x38
0x3961:	test	rcx, rcx
0x3964:	cmove	rbx, rax
0x3968:	xor	ebp, ebp
0x396a:	call	0x1300


0x38c0:	push	r15
0x38c2:	push	r14
0x38c4:	lea	rax, [rip + 0x204955]
0x38cb:	push	r13
0x38cd:	push	r12
0x38cf:	mov	r13, rdi
0x38d2:	push	rbp
0x38d3:	push	rbx
0x38d4:	mov	rbx, r8
0x38d7:	mov	r14, rsi
0x38da:	mov	r15, rdx
0x38dd:	sub	rsp, 0x18
0x38e1:	test	r8, r8
0x38e4:	cmove	rbx, rax
0x38e8:	mov	qword ptr [rsp + 8], rcx
0x38ed:	call	0x1300


0x3890:	lea	rax, [rip + 0x204989]
0x3897:	test	rdi, rdi
0x389a:	cmove	rdi, rax
0x389e:	test	rsi, rsi
0x38a1:	mov	dword ptr [rdi], 0xa
0x38a7:	je	0x38b7


0x3870:	lea	rax, [rip + 0x2049a9]
0x3877:	test	rdi, rdi
0x387a:	cmove	rdi, rax
0x387e:	mov	eax, dword ptr [rdi + 4]
0x3881:	mov	dword ptr [rdi + 4], esi
0x3884:	ret	


0x3830:	lea	rax, [rip + 0x2049e9]
0x3837:	test	rdi, rdi
0x383a:	mov	ecx, esi
0x383c:	cmove	rdi, rax
0x3840:	mov	eax, esi
0x3842:	and	ecx, 0x1f
0x3845:	shr	al, 5
0x3848:	movzx	eax, al
0x384b:	lea	rdi, [rdi + rax*4 + 8]
0x3850:	mov	esi, dword ptr [rdi]
0x3852:	mov	eax, esi
0x3854:	shr	eax, cl
0x3856:	xor	edx, eax
0x3858:	and	eax, 1
0x385b:	and	edx, 1
0x385e:	shl	edx, cl
0x3860:	xor	edx, esi
0x3862:	mov	dword ptr [rdi], edx
0x3864:	ret	


0x3810:	lea	rax, [rip + 0x204a09]
0x3817:	test	rdi, rdi
0x381a:	cmove	rdi, rax
0x381e:	mov	dword ptr [rdi], esi
0x3820:	ret	


0x37f0:	lea	rax, [rip + 0x204a29]
0x37f7:	test	rdi, rdi
0x37fa:	cmove	rdi, rax
0x37fe:	mov	eax, dword ptr [rdi]
0x3800:	ret	


0x37b0:	push	r12
0x37b2:	push	rbp
0x37b3:	push	rbx
0x37b4:	mov	rbx, rdi
0x37b7:	call	0x1300


0x3600:	push	r15
0x3602:	push	r14
0x3604:	movsxd	r15, edi
0x3607:	push	r13
0x3609:	push	r12
0x360b:	mov	r14, rdx
0x360e:	push	rbp
0x360f:	push	rbx
0x3610:	mov	rbp, rcx
0x3613:	sub	rsp, 0x28
0x3617:	mov	qword ptr [rsp + 8], rsi
0x361c:	call	0x1300


0x23c0:	push	r15
0x23c2:	push	r14
0x23c4:	mov	r15d, r8d
0x23c7:	push	r13
0x23c9:	push	r12
0x23cb:	mov	r14, rdi
0x23ce:	push	rbp
0x23cf:	push	rbx
0x23d0:	mov	ebx, r9d
0x23d3:	mov	r13, rsi
0x23d6:	mov	rbp, rcx
0x23d9:	and	ebx, 2
0x23dc:	sub	rsp, 0xb8
0x23e3:	mov	rax, qword ptr [rsp + 0xf0]
0x23eb:	mov	qword ptr [rsp + 0x10], rdx
0x23f0:	mov	dword ptr [rsp + 8], r8d
0x23f5:	mov	dword ptr [rsp + 0x78], r9d
0x23fa:	mov	qword ptr [rsp + 0x20], rax
0x23ff:	mov	rax, qword ptr [rsp + 0xf8]
0x2407:	mov	qword ptr [rsp + 0x68], rax
0x240c:	mov	rax, qword ptr [rsp + 0x100]
0x2414:	mov	qword ptr [rsp + 0x60], rax
0x2419:	mov	rax, qword ptr fs:[0x28]
0x2422:	mov	qword ptr [rsp + 0xa8], rax
0x242a:	xor	eax, eax
0x242c:	call	0x1390


0x22d0:	push	rbp
0x22d1:	push	rbx
0x22d2:	mov	rbp, rdi
0x22d5:	mov	ebx, esi
0x22d7:	sub	rsp, 8
0x22db:	call	0x4aa0


0x2230:	test	rdi, rdi
0x2233:	push	rbx
0x2234:	je	0x22ad


0x20f0:	push	r14
0x20f2:	push	r13
0x20f4:	mov	r14, r8
0x20f7:	push	r12
0x20f9:	push	rbp
0x20fa:	mov	r12, rdx
0x20fd:	push	rbx
0x20fe:	mov	r13, rcx
0x2101:	sub	rsp, 0xd0
0x2108:	test	al, al
0x210a:	mov	rbp, qword ptr [rsp + 0x100]
0x2112:	je	0x214b


0x1fb0:	push	r13
0x1fb2:	push	r12
0x1fb4:	mov	r13, r8
0x1fb7:	push	rbp
0x1fb8:	push	rbx
0x1fb9:	mov	rbp, rdx
0x1fbc:	mov	r12, rcx
0x1fbf:	sub	rsp, 0xe8
0x1fc6:	test	al, al
0x1fc8:	je	0x2004


0x1f60:	lea	rcx, [rsi + 0x14]
0x1f64:	mov	byte ptr [rsi + 0x14], 0
0x1f68:	movabs	rsi, 0xcccccccccccccccd
0x1f72:	nop	word ptr [rax + rax]
0x1f78:	mov	rax, rdi
0x1f7b:	sub	rcx, 1
0x1f7f:	mul	rsi
0x1f82:	shr	rdx, 3
0x1f86:	lea	rax, [rdx + rdx*4]
0x1f8a:	add	rax, rax
0x1f8d:	sub	rdi, rax
0x1f90:	add	edi, 0x30
0x1f93:	test	rdx, rdx
0x1f96:	mov	byte ptr [rcx], dil
0x1f99:	mov	rdi, rdx
0x1f9c:	jne	0x1f78


0x1f30:	test	rdi, rdi
0x1f33:	je	0x1f50


0x1f20:	jmp	0x1410


0x1e70:	push	rbp
0x1e71:	push	rbx
0x1e72:	sub	rsp, 8
0x1e76:	mov	rdi, qword ptr [rip + 0x20620b]
0x1e7d:	call	0x49c0


0x1e60:	mov	byte ptr [rip + 0x206289], dil
0x1e67:	ret	


0x1e50:	mov	qword ptr [rip + 0x2062a1], rdi
0x1e57:	ret	


0x1b00:	push	r13
0x1b02:	push	r12
0x1b04:	mov	edx, 5
0x1b09:	push	rbp
0x1b0a:	push	rbx
0x1b0b:	mov	ebp, edi
0x1b0d:	sub	rsp, 0x88
0x1b14:	mov	rbx, qword ptr [rip + 0x2065e5]
0x1b1b:	mov	rax, qword ptr fs:[0x28]
0x1b24:	mov	qword ptr [rsp + 0x78], rax
0x1b29:	xor	eax, eax
0x1b2b:	test	edi, edi
0x1b2d:	je	0x1b5d


0x1810:	push	r15
0x1812:	push	r14
0x1814:	mov	ecx, 2
0x1819:	push	r13
0x181b:	push	r12
0x181d:	mov	r12, rdi
0x1820:	push	rbp
0x1821:	push	rbx
0x1822:	sub	rsp, 0x10048
0x1829:	mov	dword ptr [rsp + 0xc], esi
0x182d:	mov	rsi, rdi
0x1830:	lea	rdi, [rip + 0x3e4b]
0x1837:	mov	rax, qword ptr fs:[0x28]
0x1840:	mov	qword ptr [rsp + 0x10038], rax
0x1848:	xor	eax, eax
0x184a:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1800:	push	rbp
0x1801:	mov	rbp, rsp
0x1804:	pop	rbp
0x1805:	jmp	0x1770


0x17c0:	cmp	byte ptr [rip + 0x206921], 0
0x17c7:	jne	0x17f8


0x1770:	lea	rdi, [rip + 0x206909]
0x1777:	lea	rsi, [rip + 0x206902]
0x177e:	push	rbp
0x177f:	sub	rsi, rdi
0x1782:	mov	rbp, rsp
0x1785:	sar	rsi, 3
0x1789:	mov	rax, rsi
0x178c:	shr	rax, 0x3f
0x1790:	add	rsi, rax
0x1793:	sar	rsi, 1
0x1796:	je	0x17b0


0x1730:	lea	rdi, [rip + 0x206949]
0x1737:	push	rbp
0x1738:	lea	rax, [rip + 0x206941]
0x173f:	cmp	rax, rdi
0x1742:	mov	rbp, rsp
0x1745:	je	0x1760


0x1700:	xor	ebp, ebp
0x1702:	mov	r9, rdx
0x1705:	pop	rsi
0x1706:	mov	rdx, rsp
0x1709:	and	rsp, 0xfffffffffffffff0
0x170d:	push	rax
0x170e:	push	rsp
0x170f:	lea	r8, [rip + 0x343a]
0x1716:	lea	rcx, [rip + 0x33c3]
0x171d:	lea	rdi, [rip - 0x184]
0x1724:	call	qword ptr [rip + 0x2068b6]


0x15a0:	push	r12
0x15a2:	mov	r12d, edi
0x15a5:	push	rbp
0x15a6:	push	rbx
0x15a7:	mov	rdi, qword ptr [rsi]
0x15aa:	mov	rbp, rsi
0x15ad:	call	0x2230


0x12b0:	sub	rsp, 8
0x12b4:	mov	rax, qword ptr [rip + 0x206d2d]
0x12bb:	test	rax, rax
0x12be:	je	0x12c2


0x1520:	jmp	qword ptr [rip + 0x206a7a]


0x1490:	jmp	qword ptr [rip + 0x206ac2]


0x14c0:	jmp	qword ptr [rip + 0x206aaa]


0x1330:	jmp	qword ptr [rip + 0x206b72]


0x13d0:	jmp	qword ptr [rip + 0x206b22]


0x48e0:	mov	rax, qword ptr [rdi + 0x20]
0x48e4:	cmp	qword ptr [rdi + 0x28], rax
0x48e8:	jne	0x48da


0x48da:	jmp	0x1500


0x48aa:	mov	rdi, rbx
0x48ad:	pop	rbx
0x48ae:	jmp	0x1480


0x4899:	call	0x14a0


0x1460:	jmp	qword ptr [rip + 0x206ada]


0x1380:	jmp	qword ptr [rip + 0x206b4a]


0x13a0:	jmp	qword ptr [rip + 0x206b3a]


0x4779:	call	0x47d0


0x4762:	movzx	edx, dl
0x4765:	test	rdx, rdx
0x4768:	jne	0x4779


0x4710:	test	rax, rax
0x4713:	mov	edx, 0x80
0x4718:	cmove	rax, rdx
0x471c:	test	rax, rax
0x471f:	jns	0x4702


0x46e8:	movabs	rdx, 0x5555555555555553
0x46f2:	cmp	rax, rdx
0x46f5:	ja	0x4721


0x4690:	test	rcx, rcx
0x4693:	je	0x46b8


0x465b:	xor	edx, edx
0x465d:	movabs	rax, 0x5555555555555554
0x4667:	div	r9
0x466a:	cmp	rax, rcx
0x466d:	jbe	0x46ab


0x463b:	sub	rsp, 8
0x463f:	call	0x47d0


0x4631:	movzx	eax, al
0x4634:	test	rax, rax
0x4637:	jne	0x463b


0x45e9:	test	rdi, rdi
0x45ec:	jne	0x4608


0x45ee:	mov	rsi, rbx
0x45f1:	call	0x14b0


0x45bb:	sub	rsp, 8
0x45bf:	call	0x47d0


0x45b1:	movzx	eax, al
0x45b4:	test	rax, rax
0x45b7:	jne	0x45bb


0x1470:	jmp	qword ptr [rip + 0x206ad2]


0x4496:	mov	eax, r10d
0x4499:	mov	r11d, 1
0x449f:	add	r10d, 8
0x44a3:	add	rax, rbp
0x44a6:	mov	rax, qword ptr [rax]
0x44a9:	test	rax, rax
0x44ac:	mov	qword ptr [r8 + r9*8], rax
0x44b0:	je	0x44bc


0x44ec:	mov	rax, rbx
0x44ef:	add	rbx, 8
0x44f3:	jmp	0x44a6


0x43c8:	mov	r11d, eax
0x43cb:	add	r11, qword ptr [r10 + 0x10]
0x43cf:	add	eax, 8
0x43d2:	mov	dword ptr [r10], eax
0x43d5:	mov	rax, qword ptr [r11]
0x43d8:	test	rax, rax
0x43db:	mov	qword ptr [r8 + r9*8], rax
0x43df:	je	0x43eb


0x440a:	mov	r11, qword ptr [r10 + 8]
0x440e:	lea	rax, [r11 + 8]
0x4412:	mov	qword ptr [r10 + 8], rax
0x4416:	jmp	0x43d5


0x439b:	jmp	0x3f60


0x4098:	mov	r8, rcx
0x409b:	mov	rcx, rdx
0x409e:	lea	rdx, [rip + 0xaf4]
0x40a5:	mov	esi, 1
0x40aa:	xor	eax, eax
0x40ac:	call	0x1550


0x3f80:	mov	r8, rdx
0x3f83:	lea	rdx, [rip + 0x1bde]
0x3f8a:	mov	r9, rcx
0x3f8d:	xor	eax, eax
0x3f8f:	mov	rcx, rsi
0x3f92:	mov	esi, 1
0x3f97:	call	0x1550


0x3e87:	call	0x12f0


0x3e55:	test	rdx, rdx
0x3e58:	je	0x3e87


0x3df4:	call	0x12f0


0x3d8c:	mov	dword ptr [rsp], esi
0x3d8f:	mov	rcx, rsp
0x3d92:	mov	rdx, -1
0x3d99:	mov	rsi, rax
0x3d9c:	mov	qword ptr [rsp + 4], 0
0x3da5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x3dae:	mov	qword ptr [rsp + 0x14], 0
0x3db7:	mov	qword ptr [rsp + 0x1c], 0
0x3dc0:	mov	qword ptr [rsp + 0x24], 0
0x3dc9:	mov	qword ptr [rsp + 0x2c], 0
0x3dd2:	mov	dword ptr [rsp + 0x34], 0
0x3dda:	call	0x3600


0x3c60:	call	0x12f0


0x3bff:	mov	dword ptr [rsp], esi
0x3c02:	mov	rcx, rsp
0x3c05:	mov	rsi, rax
0x3c08:	mov	qword ptr [rsp + 4], 0
0x3c11:	mov	qword ptr [rsp + 0xc], 0
0x3c1a:	mov	qword ptr [rsp + 0x14], 0
0x3c23:	mov	qword ptr [rsp + 0x1c], 0
0x3c2c:	mov	qword ptr [rsp + 0x24], 0
0x3c35:	mov	qword ptr [rsp + 0x2c], 0
0x3c3e:	mov	dword ptr [rsp + 0x34], 0
0x3c46:	call	0x3600


0x3bd4:	call	0x12f0


0x3b6c:	mov	dword ptr [rsp], esi
0x3b6f:	mov	rcx, rsp
0x3b72:	mov	rdx, -1
0x3b79:	mov	rsi, rax
0x3b7c:	mov	qword ptr [rsp + 4], 0
0x3b85:	mov	qword ptr [rsp + 0xc], 0
0x3b8e:	mov	qword ptr [rsp + 0x14], 0
0x3b97:	mov	qword ptr [rsp + 0x1c], 0
0x3ba0:	mov	qword ptr [rsp + 0x24], 0
0x3ba9:	mov	qword ptr [rsp + 0x2c], 0
0x3bb2:	mov	dword ptr [rsp + 0x34], 0
0x3bba:	call	0x3600


0x3a81:	mov	rdi, qword ptr [r12 + 8]
0x3a86:	lea	rbx, [rip + 0x204693]
0x3a8d:	cmp	rdi, rbx
0x3a90:	je	0x3aa9


0x3a56:	sub	eax, 2
0x3a59:	lea	rbx, [r12 + 0x18]
0x3a5e:	shl	rax, 4
0x3a62:	lea	rbp, [r12 + rax + 0x28]
0x3a67:	nop	word ptr [rax + rax]
0x3a70:	mov	rdi, qword ptr [rbx]
0x3a73:	add	rbx, 0x10
0x3a77:	call	0x12e0


0x1300:	jmp	qword ptr [rip + 0x206b8a]


0x38b7:	sub	rsp, 8
0x38bb:	call	0x12f0


0x38a9:	test	rdx, rdx
0x38ac:	je	0x38b7


0x1390:	jmp	qword ptr [rip + 0x206b42]


0x22ad:	mov	rcx, qword ptr [rip + 0x205e2c]
0x22b4:	lea	rdi, [rip + 0x3385]
0x22bb:	mov	edx, 0x37
0x22c0:	mov	esi, 1
0x22c5:	call	0x1540


0x2236:	mov	esi, 0x2f
0x223b:	mov	rbx, rdi
0x223e:	call	0x13e0


0x214b:	mov	rax, qword ptr fs:[0x28]
0x2154:	mov	qword ptr [rsp + 0x18], rax
0x2159:	xor	eax, eax
0x215b:	lea	rdx, [rip + 0x3a58]
0x2162:	lea	rax, [rip + 0x34c3]
0x2169:	test	r9b, r9b
0x216c:	lea	rcx, [rip + 0x205a4d]
0x2173:	cmove	rdx, rax
0x2177:	xor	r8d, r8d
0x217a:	mov	ebx, dword ptr [rip + 0x205f40]
0x2180:	mov	dword ptr [rip + 0x205f36], 1
0x218a:	call	0x13c0


0x2114:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x2119:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x211e:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x2123:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x212b:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x2133:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x213b:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x2143:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x214b:	mov	rax, qword ptr fs:[0x28]
0x2154:	mov	qword ptr [rsp + 0x18], rax
0x2159:	xor	eax, eax
0x215b:	lea	rdx, [rip + 0x3a58]
0x2162:	lea	rax, [rip + 0x34c3]
0x2169:	test	r9b, r9b
0x216c:	lea	rcx, [rip + 0x205a4d]
0x2173:	cmove	rdx, rax
0x2177:	xor	r8d, r8d
0x217a:	mov	ebx, dword ptr [rip + 0x205f40]
0x2180:	mov	dword ptr [rip + 0x205f36], 1
0x218a:	call	0x13c0


0x2004:	mov	rax, qword ptr fs:[0x28]
0x200d:	mov	qword ptr [rsp + 0x28], rax
0x2012:	xor	eax, eax
0x2014:	cmp	edi, 2
0x2017:	mov	ebx, dword ptr [rip + 0x2060a3]
0x201d:	mov	dword ptr [rip + 0x206099], 0
0x2027:	je	0x2060


0x1fca:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x1fcf:	movaps	xmmword ptr [rsp + 0x70], xmm1
0x1fd4:	movaps	xmmword ptr [rsp + 0x80], xmm2
0x1fdc:	movaps	xmmword ptr [rsp + 0x90], xmm3
0x1fe4:	movaps	xmmword ptr [rsp + 0xa0], xmm4
0x1fec:	movaps	xmmword ptr [rsp + 0xb0], xmm5
0x1ff4:	movaps	xmmword ptr [rsp + 0xc0], xmm6
0x1ffc:	movaps	xmmword ptr [rsp + 0xd0], xmm7
0x2004:	mov	rax, qword ptr fs:[0x28]
0x200d:	mov	qword ptr [rsp + 0x28], rax
0x2012:	xor	eax, eax
0x2014:	cmp	edi, 2
0x2017:	mov	ebx, dword ptr [rip + 0x2060a3]
0x201d:	mov	dword ptr [rip + 0x206099], 0
0x2027:	je	0x2060


0x1f9e:	mov	rax, rcx
0x1fa1:	ret	


0x1f78:	mov	rax, rdi
0x1f7b:	sub	rcx, 1
0x1f7f:	mul	rsi
0x1f82:	shr	rdx, 3
0x1f86:	lea	rax, [rdx + rdx*4]
0x1f8a:	add	rax, rax
0x1f8d:	sub	rdi, rax
0x1f90:	add	edi, 0x30
0x1f93:	test	rdx, rdx
0x1f96:	mov	byte ptr [rcx], dil
0x1f99:	mov	rdi, rdx
0x1f9c:	jne	0x1f78


0x1f50:	ret	


0x1f35:	push	rbx
0x1f36:	mov	ebx, esi
0x1f38:	call	0x1460


0x1410:	jmp	qword ptr [rip + 0x206b02]


0x1b5d:	lea	rsi, [rip + 0x314c]
0x1b64:	xor	edi, edi
0x1b66:	call	0x1380


0x1b2f:	lea	rsi, [rip + 0x3152]
0x1b36:	xor	edi, edi
0x1b38:	call	0x1380


0x184a:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x184c:	seta	al
0x184f:	sbb	al, 0
0x1851:	test	al, al
0x1853:	jne	0x1a6c


0x17c9:	cmp	qword ptr [rip + 0x206827], 0
0x17d1:	push	rbp
0x17d2:	mov	rbp, rsp
0x17d5:	je	0x17e3


0x17f8:	ret	


0x17b0:	pop	rbp
0x17b1:	ret	


0x1798:	mov	rax, qword ptr [rip + 0x206851]
0x179f:	test	rax, rax
0x17a2:	je	0x17b0


0x1760:	pop	rbp
0x1761:	ret	


0x1747:	mov	rax, qword ptr [rip + 0x20688a]
0x174e:	test	rax, rax
0x1751:	je	0x1760




0x12c2:	add	rsp, 8
0x12c6:	ret	


0x12c0:	call	rax












0x48ea:	cmp	qword ptr [rdi + 0x48], 0
0x48ef:	jne	0x48da


0x1500:	jmp	qword ptr [rip + 0x206a8a]


0x1480:	jmp	qword ptr [rip + 0x206aca]


0x14a0:	jmp	qword ptr [rip + 0x206aba]








0x476a:	call	0x1440


0x4721:	sub	rsp, 8
0x4725:	call	0x47d0


0x4702:	mov	qword ptr [rsi], rax
0x4705:	mov	rsi, rax
0x4708:	jmp	0x45e0


0x46f7:	mov	rdx, rax
0x46fa:	shr	rdx, 1
0x46fd:	lea	rax, [rdx + rax + 1]
0x4702:	mov	qword ptr [rsi], rax
0x4705:	mov	rsi, rax
0x4708:	jmp	0x45e0


0x46b8:	xor	edx, edx
0x46ba:	mov	eax, 0x80
0x46bf:	xor	r8d, r8d
0x46c2:	div	r9
0x46c5:	test	rax, rax
0x46c8:	sete	r8b
0x46cc:	lea	rcx, [r8 + rax]
0x46d0:	jmp	0x4695


0x4695:	mov	rax, rcx
0x4698:	mul	r9
0x469b:	seto	dl
0x469e:	test	rax, rax
0x46a1:	movzx	edx, dl
0x46a4:	js	0x46ab


0x46ab:	sub	rsp, 8
0x46af:	call	0x47d0


0x466f:	mov	rax, rcx
0x4672:	shr	rax, 1
0x4675:	lea	rcx, [rax + rcx + 1]
0x467a:	mov	qword ptr [rsi], rcx
0x467d:	imul	rcx, r9
0x4681:	mov	rsi, rcx
0x4684:	jmp	0x45e0


0x4639:	jmp	0x45e0


0x4608:	call	0x12e0


0x14b0:	jmp	qword ptr [rip + 0x206ab2]


0x45b9:	jmp	0x4580




0x44bc:	test	r11b, r11b
0x44bf:	jne	0x44e5


0x44b2:	add	r9, 1
0x44b6:	cmp	r9, 0xa
0x44ba:	jne	0x4490


0x44a6:	mov	rax, qword ptr [rax]
0x44a9:	test	rax, rax
0x44ac:	mov	qword ptr [r8 + r9*8], rax
0x44b0:	je	0x44bc


0x43eb:	call	0x3f60


0x43e1:	add	r9, 1
0x43e5:	cmp	r9, 0xa
0x43e9:	jne	0x43c0


0x43d5:	mov	rax, qword ptr [r11]
0x43d8:	test	rax, rax
0x43db:	mov	qword ptr [r8 + r9*8], rax
0x43df:	je	0x43eb


0x4390:	add	r9, 1
0x4394:	cmp	qword ptr [r8 + r9*8], 0
0x4399:	jne	0x4390


0x1550:	jmp	qword ptr [rip + 0x206a62]


0x12f0:	jmp	qword ptr [rip + 0x206b92]


0x3e5a:	mov	qword ptr [rsp + 0x28], rsi
0x3e5f:	mov	qword ptr [rsp + 0x30], rdx
0x3e64:	mov	rcx, rsp
0x3e67:	mov	rdx, r8
0x3e6a:	mov	rsi, r9
0x3e6d:	call	0x3600


0x3aa9:	lea	rbx, [rip + 0x2045c0]
0x3ab0:	cmp	r12, rbx
0x3ab3:	je	0x3ac4


0x3a92:	call	0x12e0


0x12e0:	jmp	qword ptr [rip + 0x206b9a]




0x38ae:	mov	qword ptr [rdi + 0x28], rsi
0x38b2:	mov	qword ptr [rdi + 0x30], rdx
0x38b6:	ret	




0x1540:	jmp	qword ptr [rip + 0x206a6a]


0x13e0:	jmp	qword ptr [rip + 0x206b1a]


0x13c0:	jmp	qword ptr [rip + 0x206b2a]


0x2060:	lea	rcx, [rip + 0x205b59]
0x2067:	lea	rdx, [rip + 0x35be]
0x206e:	xor	r8d, r8d
0x2071:	mov	qword ptr [rsp + 8], r9
0x2076:	call	0x13c0


0x2029:	mov	rax, qword ptr [rsp + 0x28]
0x202e:	xor	rax, qword ptr fs:[0x28]
0x2037:	mov	dword ptr [rip + 0x206083], ebx
0x203d:	mov	dword ptr [rip + 0x206051], 0
0x2047:	jne	0x20ea




0x1859:	mov	rbp, qword ptr [rip + 0x206830]
0x1860:	mov	byte ptr [rip + 0x206882], 1
0x1867:	lea	r13, [rsp + 0x30]
0x186c:	lea	r14, [rip + 0x35ad]
0x1873:	mov	esi, 2
0x1878:	mov	rdi, rbp
0x187b:	xor	r15d, r15d
0x187e:	xor	ebx, ebx
0x1880:	call	0x1f30


0x1a6c:	lea	rsi, [rip + 0x313e]
0x1a73:	mov	rdi, r12
0x1a76:	call	0x1510


0x17e3:	call	0x1730


0x17d7:	mov	rdi, qword ptr [rip + 0x20682a]
0x17de:	call	0x1590


0x17a4:	pop	rbp
0x17a5:	jmp	rax


0x1753:	pop	rbp
0x1754:	jmp	rax


0x48f1:	push	r12
0x48f3:	push	rbp
0x48f4:	mov	r12d, edx
0x48f7:	push	rbx
0x48f8:	mov	rbp, rsi
0x48fb:	mov	rbx, rdi
0x48fe:	call	0x1460








0x1440:	jmp	qword ptr [rip + 0x206aea]


0x46a6:	test	rdx, rdx
0x46a9:	je	0x467a




0x44c1:	call	0x3f60


0x44e5:	mov	dword ptr [rsp + 8], r10d
0x44ea:	jmp	0x44c1


0x4490:	cmp	r10d, 0x2f
0x4494:	ja	0x44ec


0x43c0:	mov	eax, dword ptr [r10]
0x43c3:	cmp	eax, 0x2f
0x43c6:	ja	0x440a






0x3ac4:	pop	rbx
0x3ac5:	mov	dword ptr [rip + 0x204589], 1
0x3acf:	pop	rbp
0x3ad0:	pop	r12
0x3ad2:	ret	


0x3ab5:	mov	rdi, r12
0x3ab8:	call	0x12e0










0x204d:	add	rsp, 0xe8
0x2054:	pop	rbx
0x2055:	pop	rbp
0x2056:	pop	r12
0x2058:	pop	r13
0x205a:	ret	


0x20ea:	call	0x13b0


0x1510:	jmp	qword ptr [rip + 0x206a82]


0x1590:	jmp	qword ptr [rip + 0x206a62]




0x467a:	mov	qword ptr [rsi], rcx
0x467d:	imul	rcx, r9
0x4681:	mov	rsi, rcx
0x4684:	jmp	0x45e0


0x13b0:	jmp	qword ptr [rip + 0x206b32]






0x17e8:	mov	byte ptr [rip + 0x2068f9], 1
0x17ef:	pop	rbp
0x17f0:	ret	


0x1340:	jmp	qword ptr [rip + 0x206b6a]




0x4b11:	test	rbp, rbp
0x4b14:	je	0x4b36


0x4b36:	add	rsp, 8
0x4b3a:	pop	rbx
0x4b3b:	pop	rbp
0x4b3c:	pop	r12
0x4b3e:	pop	r13
0x4b40:	pop	r14
0x4b42:	pop	r15
0x4b44:	ret	


0x4b16:	xor	ebx, ebx
0x4b18:	nop	dword ptr [rax + rax]
0x4b20:	mov	rdx, r15
0x4b23:	mov	rsi, r14
0x4b26:	mov	edi, r13d
0x4b29:	call	qword ptr [r12 + rbx*8]


0x189d:	test	rax, rax
0x18a0:	je	0x1a08


0x1a08:	mov	eax, dword ptr [rbp]
0x1a0b:	test	al, 0x20
0x1a0d:	je	0x18e8


0x18a6:	add	r15, rax
0x18a9:	jb	0x1a8c


0x18e8:	lea	rdi, [rip + 0x3d93]
0x18ef:	mov	ecx, 2
0x18f4:	mov	rsi, r12
0x18f7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1a13:	xor	edi, edi
0x1a15:	mov	rdx, r12
0x1a18:	mov	esi, 3
0x1a1d:	call	0x3d70


0x1a8c:	mov	rdx, r12
0x1a8f:	mov	esi, 3
0x1a94:	xor	edi, edi
0x1a96:	call	0x3d70


0x18af:	add	rax, r13
0x18b2:	mov	rdx, r13
0x18b5:	nop	dword ptr [rax]
0x18b8:	add	rdx, 1
0x18bc:	mov	rcx, rbx
0x18bf:	shr	rbx, 0x18
0x18c3:	xor	bl, byte ptr [rdx - 1]
0x18c6:	shl	rcx, 8
0x18ca:	movzx	ebx, bl
0x18cd:	xor	rcx, qword ptr [r14 + rbx*8]
0x18d1:	cmp	rdx, rax
0x18d4:	mov	rbx, rcx
0x18d7:	jne	0x18b8


0x18f7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x18f9:	seta	al
0x18fc:	sbb	al, 0
0x18fe:	test	al, al
0x1900:	jne	0x19a7


0x18d9:	mov	eax, dword ptr [rbp]
0x18dc:	test	al, 0x10
0x18de:	je	0x1888


0x18b8:	add	rdx, 1
0x18bc:	mov	rcx, rbx
0x18bf:	shr	rbx, 0x18
0x18c3:	xor	bl, byte ptr [rdx - 1]
0x18c6:	shl	rcx, 8
0x18ca:	movzx	ebx, bl
0x18cd:	xor	rcx, qword ptr [r14 + rbx*8]
0x18d1:	cmp	rdx, rax
0x18d4:	mov	rbx, rcx
0x18d7:	jne	0x18b8


0x1906:	lea	rsi, [rsp + 0x10]
0x190b:	mov	rdi, r15
0x190e:	call	0x1f60


0x19a7:	mov	rdi, rbp
0x19aa:	call	0x4810


0x1888:	mov	rcx, rbp
0x188b:	mov	edx, 0x10000
0x1890:	mov	esi, 1
0x1895:	mov	rdi, r13
0x1898:	call	0x1340


0x18e0:	test	al, 0x20
0x18e2:	jne	0x1a13


0x1913:	test	r15, r15
0x1916:	je	0x1941


0x1941:	cmp	byte ptr [rsp + 0xc], 0
0x1946:	not	rbx
0x1949:	jne	0x19e8


0x1918:	lea	rdi, [rip + 0x3501]
0x191f:	nop	
0x1920:	mov	rsi, rbx
0x1923:	shr	rbx, 0x18
0x1927:	xor	rbx, r15
0x192a:	shl	rsi, 8
0x192e:	shr	r15, 8
0x1932:	movzx	edx, bl
0x1935:	xor	rsi, qword ptr [rdi + rdx*8]
0x1939:	test	r15, r15
0x193c:	mov	rbx, rsi
0x193f:	jne	0x1920


0x194f:	lea	rsi, [rip + 0x324a]
0x1956:	mov	rcx, rax
0x1959:	mov	edx, ebx
0x195b:	mov	edi, 1
0x1960:	xor	eax, eax
0x1962:	call	0x14d0


0x19e8:	lea	rsi, [rip + 0x31a7]
0x19ef:	mov	rcx, rax
0x19f2:	mov	r8, r12
0x19f5:	mov	edx, ebx
0x19f7:	mov	edi, 1
0x19fc:	xor	eax, eax
0x19fe:	call	0x14d0


0x1920:	mov	rsi, rbx
0x1923:	shr	rbx, 0x18
0x1927:	xor	rbx, r15
0x192a:	shl	rsi, 8
0x192e:	shr	r15, 8
0x1932:	movzx	edx, bl
0x1935:	xor	rsi, qword ptr [rdi + rdx*8]
0x1939:	test	r15, r15
0x193c:	mov	rbx, rsi
0x193f:	jne	0x1920


0x14d0:	jmp	qword ptr [rip + 0x206aa2]




0x1a7b:	test	rax, rax
0x1a7e:	mov	rbp, rax
0x1a81:	jne	0x1867


0x1a87:	jmp	0x19b8


0x1867:	lea	r13, [rsp + 0x30]
0x186c:	lea	r14, [rip + 0x35ad]
0x1873:	mov	esi, 2
0x1878:	mov	rdi, rbp
0x187b:	xor	r15d, r15d
0x187e:	xor	ebx, ebx
0x1880:	call	0x1f30


0x19b8:	mov	rdx, r12
0x19bb:	mov	esi, 3
0x19c0:	xor	edi, edi
0x19c2:	call	0x3d70


0x476f:	test	rax, rax
0x4772:	je	0x4779


0x4774:	add	rsp, 8
0x4778:	ret	


0x207b:	cmp	eax, -1
0x207e:	je	0x2029


0x2080:	cmp	eax, 0x68
0x2083:	mov	r9, qword ptr [rsp + 8]
0x2088:	je	0x20e0


0x20e0:	xor	edi, edi
0x20e2:	call	r9


0x208a:	cmp	eax, 0x76
0x208d:	jne	0x2029


0x208f:	lea	rax, [rsp + 0x110]
0x2097:	mov	rdi, qword ptr [rip + 0x205fea]
0x209e:	lea	r8, [rsp + 0x10]
0x20a3:	mov	rcx, r13
0x20a6:	mov	rdx, r12
0x20a9:	mov	rsi, rbp
0x20ac:	mov	qword ptr [rsp + 0x18], rax
0x20b1:	lea	rax, [rsp + 0x30]
0x20b6:	mov	dword ptr [rsp + 0x10], 0x30
0x20be:	mov	dword ptr [rsp + 0x14], 0x30
0x20c6:	mov	qword ptr [rsp + 0x20], rax
0x20cb:	call	0x43a0


0x218f:	cmp	eax, -1
0x2192:	je	0x21f8


0x21f8:	mov	rax, qword ptr [rsp + 0x18]
0x21fd:	xor	rax, qword ptr fs:[0x28]
0x2206:	mov	dword ptr [rip + 0x205eb4], ebx
0x220c:	jne	0x2226


0x2194:	cmp	eax, 0x68
0x2197:	je	0x2220


0x220e:	add	rsp, 0xd0
0x2215:	pop	rbx
0x2216:	pop	rbp
0x2217:	pop	r12
0x2219:	pop	r13
0x221b:	pop	r14
0x221d:	ret	


0x2226:	call	0x13b0


0x2220:	xor	edi, edi
0x2222:	call	rbp


0x219d:	cmp	eax, 0x76
0x21a0:	jne	0x21f0


0x21a2:	lea	rax, [rsp + 0x108]
0x21aa:	mov	rdi, qword ptr [rip + 0x205ed7]
0x21b1:	mov	r8, rsp
0x21b4:	mov	rcx, r14
0x21b7:	mov	rdx, r13
0x21ba:	mov	rsi, r12
0x21bd:	mov	qword ptr [rsp + 8], rax
0x21c2:	lea	rax, [rsp + 0x20]
0x21c7:	mov	dword ptr [rsp], 0x30
0x21ce:	mov	dword ptr [rsp + 4], 0x30
0x21d6:	mov	qword ptr [rsp + 0x10], rax
0x21db:	call	0x43a0


0x21f0:	mov	edi, dword ptr [rip + 0x205e22]
0x21f6:	call	rbp


0x2243:	test	rax, rax
0x2246:	je	0x229d


0x229d:	mov	qword ptr [rip + 0x205e5c], rbx
0x22a4:	mov	qword ptr [rip + 0x205df5], rbx
0x22ab:	pop	rbx
0x22ac:	ret	


0x2248:	lea	r8, [rax + 1]
0x224c:	mov	rdx, r8
0x224f:	sub	rdx, rbx
0x2252:	cmp	rdx, 6
0x2256:	jle	0x229d


0x2258:	lea	rsi, [rax - 6]
0x225c:	lea	rdi, [rip + 0x3415]
0x2263:	mov	ecx, 7
0x2268:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2268:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x226a:	seta	dl
0x226d:	sbb	dl, 0
0x2270:	test	dl, dl
0x2272:	jne	0x229d


0x2274:	lea	rdi, [rip + 0x3405]
0x227b:	mov	ecx, 3
0x2280:	mov	rsi, r8
0x2283:	mov	rbx, r8
0x2286:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2286:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2288:	seta	dl
0x228b:	sbb	dl, 0
0x228e:	test	dl, dl
0x2290:	jne	0x229d


0x2292:	lea	rbx, [rax + 4]
0x2296:	mov	qword ptr [rip + 0x205de3], rbx
0x229d:	mov	qword ptr [rip + 0x205e5c], rbx
0x22a4:	mov	qword ptr [rip + 0x205df5], rbx
0x22ab:	pop	rbx
0x22ac:	ret	


0x22ca:	call	0x12f0


0x3abd:	mov	qword ptr [rip + 0x20459c], rbx
0x3ac4:	pop	rbx
0x3ac5:	mov	dword ptr [rip + 0x204589], 1
0x3acf:	pop	rbp
0x3ad0:	pop	r12
0x3ad2:	ret	


0x3a97:	mov	qword ptr [rip + 0x2045ce], 0x100
0x3aa2:	mov	qword ptr [rip + 0x2045cf], rbx
0x3aa9:	lea	rbx, [rip + 0x2045c0]
0x3ab0:	cmp	r12, rbx
0x3ab3:	je	0x3ac4


0x460d:	xor	eax, eax
0x460f:	pop	rbx
0x4610:	ret	


0x3a7c:	cmp	rbx, rbp
0x3a7f:	jne	0x3a70


0x3a70:	mov	rdi, qword ptr [rbx]
0x3a73:	add	rbx, 0x10
0x3a77:	call	0x12e0


0x3f9c:	lea	rsi, [rip + 0x1bd1]
0x3fa3:	xor	edi, edi
0x3fa5:	mov	edx, 5
0x3faa:	call	0x1380


0x40b1:	jmp	0x3f9c


0x45f6:	test	rax, rax
0x45f9:	jne	0x4600


0x45fb:	test	rbx, rbx
0x45fe:	jne	0x4611


0x4600:	pop	rbx
0x4601:	ret	


0x4611:	call	0x47d0


0x489e:	test	eax, eax
0x48a0:	je	0x48aa


0x48a2:	test	dword ptr [rbx], 0x100
0x48a8:	jne	0x48b8


0x48b8:	mov	rdi, rbx
0x48bb:	mov	edx, 1
0x48c0:	xor	esi, esi
0x48c2:	call	0x48d0


0x15b2:	lea	rsi, [rip + 0x4601]
0x15b9:	mov	edi, 6
0x15be:	call	0x14c0


0x2431:	cmp	r15d, 0xa
0x2435:	mov	qword ptr [rsp + 0x58], rax
0x243a:	ja	0x35ef


0x2440:	lea	rcx, [rip + 0x32b9]
0x2447:	mov	edx, r15d
0x244a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x244e:	add	rax, rcx
0x2451:	jmp	rax


0x35ef:	call	0x12f0


0x3621:	mov	r13, rax
0x3624:	mov	eax, dword ptr [rax]
0x3626:	test	r15d, r15d
0x3629:	mov	rbx, qword ptr [rip + 0x204a30]
0x3630:	mov	dword ptr [rsp + 0x18], eax
0x3634:	js	0x37a1


0x37a1:	call	0x12f0


0x363a:	cmp	dword ptr [rip + 0x204a17], r15d
0x3641:	jg	0x36a5


0x3643:	cmp	r15d, 0x7fffffff
0x364a:	je	0x37a6


0x36a5:	mov	eax, dword ptr [rbp + 4]
0x36a8:	shl	r15, 4
0x36ac:	sub	rsp, 8
0x36b0:	add	rbx, r15
0x36b3:	lea	r15, [rbp + 8]
0x36b7:	mov	r8d, dword ptr [rbp]
0x36bb:	mov	r11, qword ptr [rbx]
0x36be:	mov	r12, qword ptr [rbx + 8]
0x36c2:	mov	rcx, r14
0x36c5:	or	eax, 1
0x36c8:	mov	dword ptr [rsp + 0x24], eax
0x36cc:	push	qword ptr [rbp + 0x30]
0x36cf:	mov	r9d, eax
0x36d2:	push	qword ptr [rbp + 0x28]
0x36d5:	push	r15
0x36d7:	mov	rsi, r11
0x36da:	mov	rdx, qword ptr [rsp + 0x28]
0x36df:	mov	rdi, r12
0x36e2:	mov	qword ptr [rsp + 0x30], r11
0x36e7:	call	0x23c0


0x37a6:	call	0x47d0


0x3650:	lea	r12d, [r15 + 1]
0x3654:	lea	rax, [rip + 0x204a15]
0x365b:	movsxd	rsi, r12d
0x365e:	shl	rsi, 4
0x3662:	cmp	rbx, rax
0x3665:	je	0x3780


0x3780:	xor	edi, edi
0x3782:	call	0x45e0


0x366b:	mov	rdi, rbx
0x366e:	call	0x45e0


0x3673:	mov	rbx, rax
0x3676:	mov	qword ptr [rip + 0x2049e3], rax
0x367d:	movsxd	rdi, dword ptr [rip + 0x2049d4]
0x3684:	mov	edx, r12d
0x3687:	xor	esi, esi
0x3689:	sub	edx, edi
0x368b:	shl	rdi, 4
0x368f:	movsxd	rdx, edx
0x3692:	add	rdi, rbx
0x3695:	shl	rdx, 4
0x3699:	call	0x1400


0x1400:	jmp	qword ptr [rip + 0x206b0a]




0x3787:	movdqa	xmm0, xmmword ptr [rip + 0x2048e1]
0x378f:	mov	rbx, rax
0x3792:	mov	qword ptr [rip + 0x2048c7], rax
0x3799:	movups	xmmword ptr [rax], xmm0
0x379c:	jmp	0x367d


0x367d:	movsxd	rdi, dword ptr [rip + 0x2049d4]
0x3684:	mov	edx, r12d
0x3687:	xor	esi, esi
0x3689:	sub	edx, edi
0x368b:	shl	rdi, 4
0x368f:	movsxd	rdx, edx
0x3692:	add	rdi, rbx
0x3695:	shl	rdx, 4
0x3699:	call	0x1400


0x37bc:	mov	r12d, dword ptr [rax]
0x37bf:	mov	rbp, rax
0x37c2:	lea	rax, [rip + 0x204a57]
0x37c9:	test	rbx, rbx
0x37cc:	mov	esi, 0x38
0x37d1:	cmove	rbx, rax
0x37d5:	mov	rdi, rbx
0x37d8:	call	0x4780


0x38f2:	mov	r12d, dword ptr [rax]
0x38f5:	mov	rbp, rax
0x38f8:	lea	rax, [rbx + 8]
0x38fc:	sub	rsp, 8
0x3900:	mov	r9d, dword ptr [rbx + 4]
0x3904:	push	qword ptr [rbx + 0x30]
0x3907:	mov	r8d, dword ptr [rbx]
0x390a:	push	qword ptr [rbx + 0x28]
0x390d:	mov	rdx, r15
0x3910:	push	rax
0x3911:	mov	rcx, qword ptr [rsp + 0x28]
0x3916:	mov	rsi, r14
0x3919:	mov	rdi, r13
0x391c:	call	0x23c0


0x396f:	test	r12, r12
0x3972:	mov	r13, rax
0x3975:	mov	eax, dword ptr [rax]
0x3977:	sete	bpl
0x397b:	or	ebp, dword ptr [rbx + 4]
0x397e:	lea	r10, [rbx + 8]
0x3982:	sub	rsp, 8
0x3986:	mov	r8d, dword ptr [rbx]
0x3989:	mov	rcx, r15
0x398c:	mov	dword ptr [rsp + 0x14], eax
0x3990:	push	qword ptr [rbx + 0x30]
0x3993:	mov	rdx, r14
0x3996:	push	qword ptr [rbx + 0x28]
0x3999:	push	r10
0x399b:	xor	esi, esi
0x399d:	mov	r9d, ebp
0x39a0:	xor	edi, edi
0x39a2:	mov	qword ptr [rsp + 0x40], r10
0x39a7:	call	0x23c0


0x4589:	test	rax, rax
0x458c:	jne	0x4593


0x458e:	test	rbx, rbx
0x4591:	jne	0x4595


0x4593:	pop	rbx
0x4594:	ret	


0x4595:	call	0x47d0


0x4739:	mov	rdx, rbx
0x473c:	xor	esi, esi
0x473e:	mov	rdi, rax
0x4741:	pop	rbx
0x4742:	jmp	0x1400


0x4794:	add	rsp, 8
0x4798:	mov	rdx, rbx
0x479b:	mov	rsi, rbp
0x479e:	pop	rbx
0x479f:	pop	rbp
0x47a0:	mov	rdi, rax
0x47a3:	jmp	0x1450


0x1450:	jmp	qword ptr [rip + 0x206ae2]




0x47b9:	mov	rdi, rbx
0x47bc:	lea	rsi, [rax + 1]
0x47c0:	pop	rbx
0x47c1:	jmp	0x4780


0x3faf:	lea	rdx, [rip + 0x1eea]
0x3fb6:	mov	rcx, rax
0x3fb9:	mov	r8d, 0x7e3
0x3fbf:	mov	esi, 1
0x3fc4:	mov	rdi, rbp
0x3fc7:	xor	eax, eax
0x3fc9:	call	0x1550


0x3fce:	lea	rsi, [rip + 0x1c2b]
0x3fd5:	xor	edi, edi
0x3fd7:	mov	edx, 5
0x3fdc:	call	0x1380


0x3fe1:	mov	rsi, rbp
0x3fe4:	mov	rdi, rax
0x3fe7:	call	0x1430


0x1430:	jmp	qword ptr [rip + 0x206af2]




0x1b3d:	mov	rdi, qword ptr [rip + 0x20659c]
0x1b44:	mov	rdx, rax
0x1b47:	mov	rcx, rbx
0x1b4a:	mov	esi, 1
0x1b4f:	xor	eax, eax
0x1b51:	call	0x1550


0x1b56:	mov	edi, ebp
0x1b58:	call	0x1530


0x1530:	jmp	qword ptr [rip + 0x206a72]




0x1b6b:	mov	rcx, rbx
0x1b6e:	mov	rdx, rbx
0x1b71:	mov	rsi, rax
0x1b74:	mov	edi, 1
0x1b79:	xor	eax, eax
0x1b7b:	call	0x14d0


0x4514:	lea	rdx, [rip + 0x16b5]
0x451b:	mov	rsi, rax
0x451e:	mov	edi, 1
0x4523:	xor	eax, eax
0x4525:	call	0x14d0


0x47e7:	mov	edi, dword ptr [rip + 0x20382b]
0x47ed:	lea	rdx, [rip + 0x3c2]
0x47f4:	mov	rcx, rax
0x47f7:	xor	esi, esi
0x47f9:	xor	eax, eax
0x47fb:	call	0x14f0


0x14f0:	jmp	qword ptr [rip + 0x206a92]




0x4903:	mov	edx, r12d
0x4906:	mov	rsi, rbp
0x4909:	mov	edi, eax
0x490b:	call	0x13f0


0x13f0:	jmp	qword ptr [rip + 0x206b12]




0x1f3d:	mov	ecx, ebx
0x1f3f:	xor	edx, edx
0x1f41:	xor	esi, esi
0x1f43:	pop	rbx
0x1f44:	mov	edi, eax
0x1f46:	jmp	0x1410


0x481c:	test	eax, eax
0x481e:	mov	rdi, rbx
0x4821:	js	0x4877


0x4877:	pop	rbx
0x4878:	pop	rbp
0x4879:	pop	r12
0x487b:	jmp	0x1360


0x4823:	call	0x14a0


0x1360:	jmp	qword ptr [rip + 0x206b5a]




0x4828:	test	eax, eax
0x482a:	jne	0x4858


0x482c:	mov	rdi, rbx
0x482f:	call	0x4890


0x4858:	mov	rdi, rbx
0x485b:	call	0x1460


0x4860:	xor	esi, esi
0x4862:	mov	edx, 1
0x4867:	mov	edi, eax
0x4869:	call	0x13f0


0x4967:	cmp	rax, -3
0x496b:	mov	rbp, rax
0x496e:	jbe	0x4990


0x4990:	mov	rdx, qword ptr [rsp + 8]
0x4995:	xor	rdx, qword ptr fs:[0x28]
0x499e:	mov	rax, rbp
0x49a1:	jne	0x49ae


0x4970:	test	r12, r12
0x4973:	je	0x4990


0x49a3:	add	rsp, 0x18
0x49a7:	pop	rbx
0x49a8:	pop	rbp
0x49a9:	pop	r12
0x49ab:	pop	r13
0x49ad:	ret	


0x49ae:	call	0x13b0


0x4975:	xor	edi, edi
0x4977:	call	0x4a40


0x49cc:	mov	ebx, dword ptr [rbp]
0x49cf:	mov	rdi, rbp
0x49d2:	mov	r12, rax
0x49d5:	call	0x4810


0x15c3:	lea	rsi, [rip + 0x3698]
0x15ca:	lea	rdi, [rip + 0x3668]
0x15d1:	call	0x1370


0x1370:	jmp	qword ptr [rip + 0x206b52]




0x4a4b:	mov	rdx, rax
0x4a4e:	mov	eax, 1
0x4a53:	test	rdx, rdx
0x4a56:	je	0x4a75


0x4a75:	add	rsp, 8
0x4a79:	ret	


0x4a58:	lea	rdi, [rip + 0x1481]
0x4a5f:	mov	ecx, 2
0x4a64:	mov	rsi, rdx
0x4a67:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4a67:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4a69:	seta	cl
0x4a6c:	sbb	cl, 0
0x4a6f:	xor	eax, eax
0x4a71:	test	cl, cl
0x4a73:	jne	0x4a80


0x4a80:	lea	rdi, [rip + 0x145b]
0x4a87:	mov	ecx, 6
0x4a8c:	mov	rsi, rdx
0x4a8f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4a8f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4a91:	seta	al
0x4a94:	sbb	al, 0
0x4a96:	test	al, al
0x4a98:	setne	al
0x4a9b:	add	rsp, 8
0x4a9f:	ret	


0x497c:	test	al, al
0x497e:	jne	0x4990


0x4980:	movzx	eax, byte ptr [r13]
0x4985:	mov	ebp, 1
0x498a:	mov	dword ptr [rbx], eax
0x498c:	nop	dword ptr [rax]
0x4990:	mov	rdx, qword ptr [rsp + 8]
0x4995:	xor	rdx, qword ptr fs:[0x28]
0x499e:	mov	rax, rbp
0x49a1:	jne	0x49ae


0x4aae:	test	rax, rax
0x4ab1:	je	0x4ad0


0x4ad0:	lea	rax, [rip + 0x1411]
0x4ad7:	add	rsp, 8
0x4adb:	ret	


0x4ab3:	cmp	byte ptr [rax], 0
0x4ab6:	lea	rdx, [rip + 0x142b]
0x4abd:	cmove	rax, rdx
0x4ac1:	add	rsp, 8
0x4ac5:	ret	


0x22e0:	movzx	edx, byte ptr [rax]
0x22e3:	and	edx, 0xffffffdf
0x22e6:	cmp	dl, 0x55
0x22e9:	je	0x2360


0x2360:	movzx	edx, byte ptr [rax + 1]
0x2364:	and	edx, 0xffffffdf
0x2367:	cmp	dl, 0x54
0x236a:	jne	0x22f0


0x22eb:	cmp	dl, 0x47
0x22ee:	je	0x2310


0x236c:	movzx	edx, byte ptr [rax + 2]
0x2370:	and	edx, 0xffffffdf
0x2373:	cmp	dl, 0x46
0x2376:	jne	0x22f0


0x22f0:	lea	rax, [rip + 0x339c]
0x22f7:	lea	rdx, [rip + 0x3397]
0x22fe:	cmp	ebx, 9
0x2301:	cmovne	rax, rdx
0x2305:	add	rsp, 8
0x2309:	pop	rbx
0x230a:	pop	rbp
0x230b:	ret	


0x2310:	movzx	edx, byte ptr [rax + 1]
0x2314:	and	edx, 0xffffffdf
0x2317:	cmp	dl, 0x42
0x231a:	jne	0x22f0


0x237c:	cmp	byte ptr [rax + 3], 0x2d
0x2380:	jne	0x22f0


0x231c:	cmp	byte ptr [rax + 2], 0x31
0x2320:	jne	0x22f0


0x2386:	cmp	byte ptr [rax + 4], 0x38
0x238a:	jne	0x22f0


0x2322:	cmp	byte ptr [rax + 3], 0x38
0x2326:	jne	0x22f0


0x2390:	cmp	byte ptr [rax + 5], 0
0x2394:	jne	0x22f0


0x2328:	cmp	byte ptr [rax + 4], 0x30
0x232c:	jne	0x22f0


0x239a:	cmp	byte ptr [rbp], 0x60
0x239e:	lea	rax, [rip + 0x32df]
0x23a5:	lea	rdx, [rip + 0x32dc]
0x23ac:	cmovne	rax, rdx
0x23b0:	add	rsp, 8
0x23b4:	pop	rbx
0x23b5:	pop	rbp
0x23b6:	ret	


0x232e:	cmp	byte ptr [rax + 5], 0x33
0x2332:	jne	0x22f0


0x2334:	cmp	byte ptr [rax + 6], 0x30
0x2338:	jne	0x22f0


0x233a:	cmp	byte ptr [rax + 7], 0
0x233e:	jne	0x22f0


0x2340:	cmp	byte ptr [rbp], 0x60
0x2344:	lea	rax, [rip + 0x3341]
0x234b:	lea	rdx, [rip + 0x333e]
0x2352:	cmovne	rax, rdx
0x2356:	add	rsp, 8
0x235a:	pop	rbx
0x235b:	pop	rbp
0x235c:	ret	


0x15d6:	lea	rdi, [rip + 0x365c]
0x15dd:	call	0x1350


0x1350:	jmp	qword ptr [rip + 0x206b62]




0x486e:	cmp	rax, -1
0x4872:	jne	0x482c


0x4874:	mov	rdi, rbx
0x4877:	pop	rbx
0x4878:	pop	rbp
0x4879:	pop	r12
0x487b:	jmp	0x1360


0x4910:	cmp	rax, -1
0x4914:	je	0x4922


0x4922:	pop	rbx
0x4923:	pop	rbp
0x4924:	pop	r12
0x4926:	ret	


0x4916:	and	dword ptr [rbx], 0xffffffef
0x4919:	mov	qword ptr [rbx + 0x90], rax
0x4920:	xor	eax, eax
0x4922:	pop	rbx
0x4923:	pop	rbp
0x4924:	pop	r12
0x4926:	ret	


0x4800:	call	0x12f0


0x3fec:	cmp	r12, 9
0x3ff0:	ja	0x4330


0x3ff6:	lea	rdx, [rip + 0x1e63]
0x3ffd:	movsxd	rax, dword ptr [rdx + r12*4]
0x4001:	add	rax, rdx
0x4004:	jmp	rax


0x4330:	mov	r10, qword ptr [rbx + 0x40]
0x4334:	mov	r9, qword ptr [rbx + 0x38]
0x4338:	mov	edx, 5
0x433d:	mov	rax, qword ptr [rbx + 0x10]
0x4341:	mov	r8, qword ptr [rbx + 8]
0x4345:	lea	rsi, [rip + 0x1a8c]
0x434c:	mov	r13, qword ptr [rbx + 0x30]
0x4350:	mov	r12, qword ptr [rbx + 0x28]
0x4354:	mov	r15, qword ptr [rbx + 0x20]
0x4358:	mov	r14, qword ptr [rbx + 0x18]
0x435c:	mov	qword ptr [rsp + 0x18], r10
0x4361:	mov	qword ptr [rsp + 0x10], r9
0x4366:	mov	qword ptr [rsp], rax
0x436a:	mov	qword ptr [rsp + 8], r8
0x436f:	mov	rbx, qword ptr [rbx]
0x4372:	jmp	0x4102


0x4102:	xor	edi, edi
0x4104:	call	0x1380


0x4109:	mov	r10, qword ptr [rsp + 0x18]
0x410e:	push	r10
0x4110:	jmp	0x4054


0x4054:	mov	r9, qword ptr [rsp + 0x18]
0x4059:	mov	rdx, rax
0x405c:	mov	rcx, rbx
0x405f:	mov	esi, 1
0x4064:	mov	rdi, rbp
0x4067:	xor	eax, eax
0x4069:	push	r9
0x406b:	push	r13
0x406d:	push	r12
0x406f:	push	r15
0x4071:	push	r14
0x4073:	mov	r9, qword ptr [rsp + 0x30]
0x4078:	mov	r8, qword ptr [rsp + 0x38]
0x407d:	call	0x1550


0x4082:	add	rsp, 0x30
0x4086:	add	rsp, 0x28
0x408a:	pop	rbx
0x408b:	pop	rbp
0x408c:	pop	r12
0x408e:	pop	r13
0x4090:	pop	r14
0x4092:	pop	r15
0x4094:	ret	


0x37dd:	mov	dword ptr [rbp], r12d
0x37e1:	pop	rbx
0x37e2:	pop	rbp
0x37e3:	pop	r12
0x37e5:	ret	


0x369e:	mov	dword ptr [rip + 0x2049b3], r12d
0x36a5:	mov	eax, dword ptr [rbp + 4]
0x36a8:	shl	r15, 4
0x36ac:	sub	rsp, 8
0x36b0:	add	rbx, r15
0x36b3:	lea	r15, [rbp + 8]
0x36b7:	mov	r8d, dword ptr [rbp]
0x36bb:	mov	r11, qword ptr [rbx]
0x36be:	mov	r12, qword ptr [rbx + 8]
0x36c2:	mov	rcx, r14
0x36c5:	or	eax, 1
0x36c8:	mov	dword ptr [rsp + 0x24], eax
0x36cc:	push	qword ptr [rbp + 0x30]
0x36cf:	mov	r9d, eax
0x36d2:	push	qword ptr [rbp + 0x28]
0x36d5:	push	r15
0x36d7:	mov	rsi, r11
0x36da:	mov	rdx, qword ptr [rsp + 0x28]
0x36df:	mov	rdi, r12
0x36e2:	mov	qword ptr [rsp + 0x30], r11
0x36e7:	call	0x23c0


0x48c7:	mov	rdi, rbx
0x48ca:	pop	rbx
0x48cb:	jmp	0x1480


0x452a:	lea	rsi, [rip + 0x16b5]
0x4531:	mov	edx, 5
0x4536:	xor	edi, edi
0x4538:	call	0x1380


0x453d:	lea	rcx, [rip + 0x834]
0x4544:	lea	rdx, [rip + 0x6ea]
0x454b:	mov	rsi, rax
0x454e:	mov	edi, 1
0x4553:	xor	eax, eax
0x4555:	call	0x14d0


0x455a:	mov	rbx, qword ptr [rip + 0x203b27]
0x4561:	lea	rsi, [rip + 0x18b0]
0x4568:	xor	edi, edi
0x456a:	mov	edx, 5
0x456f:	call	0x1380


0x4574:	mov	rsi, rbx
0x4577:	mov	rdi, rax
0x457a:	pop	rbx
0x457b:	jmp	0x1430


0x1b80:	mov	rbx, qword ptr [rip + 0x206501]
0x1b87:	lea	rsi, [rip + 0x314a]
0x1b8e:	mov	edx, 5
0x1b93:	xor	edi, edi
0x1b95:	call	0x1380


0x1b9a:	mov	rsi, rbx
0x1b9d:	mov	rdi, rax
0x1ba0:	call	0x1430


0x1ba5:	mov	rbx, qword ptr [rip + 0x2064dc]
0x1bac:	lea	rsi, [rip + 0x315d]
0x1bb3:	mov	edx, 5
0x1bb8:	xor	edi, edi
0x1bba:	call	0x1380


0x1bbf:	mov	rsi, rbx
0x1bc2:	mov	rdi, rax
0x1bc5:	call	0x1430


0x1bca:	mov	rbx, qword ptr [rip + 0x2064b7]
0x1bd1:	lea	rsi, [rip + 0x3168]
0x1bd8:	mov	edx, 5
0x1bdd:	xor	edi, edi
0x1bdf:	call	0x1380


0x1be4:	mov	rsi, rbx
0x1be7:	mov	rdi, rax
0x1bea:	lea	rbx, [rip + 0x2fc8]
0x1bf1:	call	0x1430


0x1bf6:	lea	rax, [rip + 0x2fc2]
0x1bfd:	lea	rcx, [rip + 0x2ffc]
0x1c04:	mov	qword ptr [rsp + 0x60], 0
0x1c0d:	mov	qword ptr [rsp + 0x68], 0
0x1c16:	mov	rdx, rsp
0x1c19:	mov	qword ptr [rsp], rax
0x1c1d:	lea	rax, [rip + 0x2f9d]
0x1c24:	mov	qword ptr [rsp + 0x30], rcx
0x1c29:	lea	rcx, [rip + 0x2fda]
0x1c30:	mov	qword ptr [rsp + 8], rax
0x1c35:	lea	rax, [rip + 0x2ffd]
0x1c3c:	mov	qword ptr [rsp + 0x40], rcx
0x1c41:	lea	rcx, [rip + 0x2fcc]
0x1c48:	mov	qword ptr [rsp + 0x10], rax
0x1c4d:	lea	rax, [rip + 0x2f7d]
0x1c54:	mov	qword ptr [rsp + 0x50], rcx
0x1c59:	mov	qword ptr [rsp + 0x18], rax
0x1c5e:	lea	rax, [rip + 0x2f82]
0x1c65:	mov	qword ptr [rsp + 0x20], rax
0x1c6a:	lea	rax, [rip + 0x2f80]
0x1c71:	mov	qword ptr [rsp + 0x28], rax
0x1c76:	mov	qword ptr [rsp + 0x38], rax
0x1c7b:	mov	qword ptr [rsp + 0x48], rax
0x1c80:	mov	qword ptr [rsp + 0x58], rax
0x1c85:	nop	dword ptr [rax]
0x1c88:	add	rdx, 0x10
0x1c8c:	mov	rdi, qword ptr [rdx]
0x1c8f:	test	rdi, rdi
0x1c92:	je	0x1ca7


0x1ca7:	mov	r12, qword ptr [rdx + 8]
0x1cab:	xor	edi, edi
0x1cad:	mov	edx, 5
0x1cb2:	lea	rsi, [rip + 0x2f65]
0x1cb9:	test	r12, r12
0x1cbc:	je	0x1d83


0x1c94:	mov	ecx, 6
0x1c99:	mov	rsi, rbx
0x1c9c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1d83:	call	0x1380


0x1cc2:	call	0x1380


0x1c9c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1c9e:	seta	al
0x1ca1:	sbb	al, 0
0x1ca3:	test	al, al
0x1ca5:	jne	0x1c88


0x1c88:	add	rdx, 0x10
0x1c8c:	mov	rdi, qword ptr [rdx]
0x1c8f:	test	rdi, rdi
0x1c92:	je	0x1ca7


0x1cc7:	lea	rcx, [rip + 0x30aa]
0x1cce:	lea	rdx, [rip + 0x2f60]
0x1cd5:	mov	rsi, rax
0x1cd8:	mov	edi, 1
0x1cdd:	xor	eax, eax
0x1cdf:	call	0x14d0


0x1d88:	lea	rcx, [rip + 0x2fe9]
0x1d8f:	lea	rdx, [rip + 0x2e9f]
0x1d96:	mov	rsi, rax
0x1d99:	mov	edi, 1
0x1d9e:	xor	eax, eax
0x1da0:	call	0x14d0


0x1da5:	xor	esi, esi
0x1da7:	mov	edi, 5
0x1dac:	call	0x14c0


0x1db1:	test	rax, rax
0x1db4:	je	0x1dce


0x1dce:	lea	rsi, [rip + 0x2e72]
0x1dd5:	mov	edx, 5
0x1dda:	xor	edi, edi
0x1ddc:	lea	r12, [rip + 0x2dd6]
0x1de3:	lea	rbx, [rip + 0x2df1]
0x1dea:	call	0x1380


0x1db6:	lea	rsi, [rip + 0x2e86]
0x1dbd:	mov	edx, 3
0x1dc2:	mov	rdi, rax
0x1dc5:	call	0x1310


0x1310:	jmp	qword ptr [rip + 0x206b82]




0x1def:	lea	rcx, [rip + 0x2dc3]
0x1df6:	lea	rdx, [rip + 0x2f7b]
0x1dfd:	mov	rsi, rax
0x1e00:	mov	edi, 1
0x1e05:	xor	eax, eax
0x1e07:	call	0x14d0


0x1e0c:	jmp	0x1d56


0x1d56:	lea	rsi, [rip + 0x308b]
0x1d5d:	xor	edi, edi
0x1d5f:	mov	edx, 5
0x1d64:	call	0x1380


0x1d69:	mov	rcx, rbx
0x1d6c:	mov	rsi, rax
0x1d6f:	mov	rdx, r12
0x1d72:	mov	edi, 1
0x1d77:	xor	eax, eax
0x1d79:	call	0x14d0


0x1d7e:	jmp	0x1b56


0x1ce4:	xor	esi, esi
0x1ce6:	mov	edi, 5
0x1ceb:	call	0x14c0


0x1cf0:	test	rax, rax
0x1cf3:	je	0x1d11


0x1d11:	lea	rsi, [rip + 0x2f2f]
0x1d18:	xor	edi, edi
0x1d1a:	mov	edx, 5
0x1d1f:	call	0x1380


0x1cf5:	lea	rsi, [rip + 0x2f47]
0x1cfc:	mov	edx, 3
0x1d01:	mov	rdi, rax
0x1d04:	call	0x1310


0x1d24:	lea	rcx, [rip + 0x2e8e]
0x1d2b:	lea	rdx, [rip + 0x3046]
0x1d32:	mov	rsi, rax
0x1d35:	mov	edi, 1
0x1d3a:	xor	eax, eax
0x1d3c:	call	0x14d0


0x1d41:	cmp	r12, rbx
0x1d44:	lea	rcx, [rip + 0x2e90]
0x1d4b:	lea	rbx, [rip + 0x3e68]
0x1d52:	cmove	rbx, rcx
0x1d56:	lea	rsi, [rip + 0x308b]
0x1d5d:	xor	edi, edi
0x1d5f:	mov	edx, 5
0x1d64:	call	0x1380


0x1a03:	jmp	0x1967


0x1967:	mov	rax, qword ptr [rip + 0x20671a]
0x196e:	test	byte ptr [rax], 0x20
0x1971:	jne	0x1ac5


0x1977:	mov	ebx, 1
0x197c:	mov	rdi, qword ptr [rsp + 0x10038]
0x1984:	xor	rdi, qword ptr fs:[0x28]
0x198d:	mov	eax, ebx
0x198f:	jne	0x1af8


0x1ac5:	lea	rsi, [rip + 0x30db]
0x1acc:	mov	edx, 5
0x1ad1:	xor	edi, edi
0x1ad3:	call	0x1380


0x1995:	add	rsp, 0x10048
0x199c:	pop	rbx
0x199d:	pop	rbp
0x199e:	pop	r12
0x19a0:	pop	r13
0x19a2:	pop	r14
0x19a4:	pop	r15
0x19a6:	ret	


0x1af8:	call	0x13b0


0x1ad8:	mov	rbx, rax
0x1adb:	call	0x1300


0x1ae0:	mov	esi, dword ptr [rax]
0x1ae2:	lea	rdx, [rip + 0x30ca]
0x1ae9:	mov	rcx, rbx
0x1aec:	mov	edi, 1
0x1af1:	xor	eax, eax
0x1af3:	call	0x14f0


0x44c6:	mov	rax, qword ptr [rsp + 0x78]
0x44cb:	xor	rax, qword ptr fs:[0x28]
0x44d4:	jne	0x44e0


0x44d6:	add	rsp, 0xb8
0x44dd:	pop	rbx
0x44de:	pop	rbp
0x44df:	ret	


0x44e0:	call	0x13b0


0x43f0:	mov	rax, qword ptr [rsp + 0x58]
0x43f5:	xor	rax, qword ptr fs:[0x28]
0x43fe:	jne	0x4405


0x4400:	add	rsp, 0x68
0x4404:	ret	


0x4405:	call	0x13b0


0x21e0:	xor	edi, edi
0x21e2:	call	0x1530


0x20d0:	xor	edi, edi
0x20d2:	call	0x1530


0x1d09:	test	eax, eax
0x1d0b:	jne	0x1e18


0x1e18:	mov	r13, qword ptr [rip + 0x206269]
0x1e1f:	lea	rsi, [rip + 0x2f7a]
0x1e26:	xor	edi, edi
0x1e28:	mov	edx, 5
0x1e2d:	call	0x1380


0x1e32:	mov	rsi, r13
0x1e35:	mov	rdi, rax
0x1e38:	call	0x1430


0x1e3d:	jmp	0x1d11


0x1dca:	test	eax, eax
0x1dcc:	jne	0x1e11


0x1e11:	lea	r12, [rip + 0x2da1]
0x1e18:	mov	r13, qword ptr [rip + 0x206269]
0x1e1f:	lea	rsi, [rip + 0x2f7a]
0x1e26:	xor	edi, edi
0x1e28:	mov	edx, 5
0x1e2d:	call	0x1380


0x15e2:	lea	rdi, [rip + 0x887]
0x15e9:	call	0x4b60


0x15ee:	mov	rdi, qword ptr [rip + 0x206a93]
0x15f5:	xor	ecx, ecx
0x15f7:	xor	esi, esi
0x15f9:	mov	edx, 1
0x15fe:	call	0x14e0


0x14e0:	jmp	qword ptr [rip + 0x206a9a]




0x4834:	test	eax, eax
0x4836:	je	0x4874


0x4838:	call	0x1300


0x483d:	mov	r12d, dword ptr [rax]
0x4840:	mov	rdi, rbx
0x4843:	mov	rbp, rax
0x4846:	call	0x1360


0x484b:	test	r12d, r12d
0x484e:	jne	0x4880


0x4850:	pop	rbx
0x4851:	pop	rbp
0x4852:	pop	r12
0x4854:	ret	


0x4880:	mov	dword ptr [rbp], r12d
0x4884:	mov	eax, 0xffffffff
0x4889:	jmp	0x4850


0x49da:	and	ebx, 0x20
0x49dd:	test	ebx, ebx
0x49df:	jne	0x49f8


0x49e1:	test	eax, eax
0x49e3:	je	0x49ef


0x49f8:	test	eax, eax
0x49fa:	jne	0x4a18


0x49ef:	pop	rbx
0x49f0:	pop	rbp
0x49f1:	pop	r12
0x49f3:	ret	


0x49e5:	test	r12, r12
0x49e8:	mov	eax, 0xffffffff
0x49ed:	je	0x4a28


0x49fc:	call	0x1300


0x4a18:	pop	rbx
0x4a19:	mov	eax, 0xffffffff
0x4a1e:	pop	rbp
0x4a1f:	pop	r12
0x4a21:	ret	


0x4a28:	call	0x1300


0x4a2d:	cmp	dword ptr [rax], 9
0x4a30:	pop	rbx
0x4a31:	pop	rbp
0x4a32:	pop	r12
0x4a34:	setne	al
0x4a37:	movzx	eax, al
0x4a3a:	neg	eax
0x4a3c:	ret	


0x4a01:	mov	dword ptr [rax], 0
0x4a07:	mov	eax, 0xffffffff
0x4a0c:	pop	rbx
0x4a0d:	pop	rbp
0x4a0e:	pop	r12
0x4a10:	ret	


0x19af:	cmp	eax, -1
0x19b2:	jne	0x1906


0x1e82:	test	eax, eax
0x1e84:	je	0x1e9c


0x1e9c:	mov	rdi, qword ptr [rip + 0x20623d]
0x1ea3:	call	0x49c0


0x1e86:	call	0x1300


0x1e8b:	cmp	byte ptr [rip + 0x20625e], 0
0x1e92:	mov	rbx, rax
0x1e95:	je	0x1eb3


0x1eb3:	lea	rsi, [rip + 0x2ced]
0x1eba:	xor	edi, edi
0x1ebc:	mov	edx, 5
0x1ec1:	call	0x1380


0x1e97:	cmp	dword ptr [rax], 0x20
0x1e9a:	jne	0x1eb3


0x1ec6:	mov	rdi, qword ptr [rip + 0x20622b]
0x1ecd:	mov	rbp, rax
0x1ed0:	test	rdi, rdi
0x1ed3:	je	0x1efd


0x1efd:	mov	esi, dword ptr [rbx]
0x1eff:	lea	rdx, [rip + 0x2cb0]
0x1f06:	mov	rcx, rax
0x1f09:	xor	edi, edi
0x1f0b:	xor	eax, eax
0x1f0d:	call	0x14f0


0x1ed5:	call	0x3d40


0x1f12:	jmp	0x1ef2


0x1ef2:	mov	edi, dword ptr [rip + 0x206120]
0x1ef8:	call	0x1320


0x1320:	jmp	qword ptr [rip + 0x206b7a]




0x1ea8:	test	eax, eax
0x1eaa:	jne	0x1ef2


0x1eac:	add	rsp, 8
0x1eb0:	pop	rbx
0x1eb1:	pop	rbp
0x1eb2:	ret	


0x1603:	lea	rax, [rip + 0x3670]
0x160a:	sub	rsp, 8
0x160e:	mov	r8, qword ptr [rip + 0x2069fb]
0x1615:	push	0
0x1617:	lea	rcx, [rip + 0x361b]
0x161e:	lea	rdx, [rip + 0x3594]
0x1625:	push	rax
0x1626:	lea	rax, [rip + 0x4d3]
0x162d:	mov	r9d, 1
0x1633:	mov	rsi, rbp
0x1636:	mov	edi, r12d
0x1639:	push	rax
0x163a:	xor	eax, eax
0x163c:	call	0x20f0


0x1641:	mov	eax, dword ptr [rip + 0x206a51]
0x1647:	add	rsp, 0x20
0x164b:	mov	byte ptr [rip + 0x206a97], 0
0x1652:	cmp	eax, r12d
0x1655:	je	0x16d8


0x16d8:	lea	rdi, [rip + 0x3fa3]
0x16df:	xor	esi, esi
0x16e1:	call	0x1810


0x165b:	jge	0x16ea


0x1661:	movsxd	rdx, eax
0x1664:	not	eax
0x1666:	add	eax, r12d
0x1669:	lea	rbx, [rbp + rdx*8]
0x166e:	add	rax, rdx
0x1671:	lea	r12, [rbp + rax*8 + 8]
0x1676:	mov	ebp, 1
0x167b:	nop	dword ptr [rax + rax]
0x1680:	mov	rdi, qword ptr [rbx]
0x1683:	mov	esi, 1
0x1688:	add	rbx, 8
0x168c:	call	0x1810


0x16ea:	mov	ebp, 1
0x16ef:	jmp	0x16a1


0x16a1:	xor	ebp, 1
0x16a4:	movzx	eax, bpl
0x16a8:	pop	rbx
0x16a9:	pop	rbp
0x16aa:	pop	r12
0x16ac:	ret	


0x1691:	and	ebp, eax
0x1693:	cmp	rbx, r12
0x1696:	jne	0x1680


0x1698:	cmp	byte ptr [rip + 0x206a4a], 0
0x169f:	jne	0x16ad


0x1680:	mov	rdi, qword ptr [rbx]
0x1683:	mov	esi, 1
0x1688:	add	rbx, 8
0x168c:	call	0x1810


0x16ad:	mov	rdi, qword ptr [rip + 0x2069dc]
0x16b4:	call	0x4810


0x16b9:	add	eax, 1
0x16bc:	jne	0x16a1


0x16be:	call	0x1300


0x16c3:	mov	esi, dword ptr [rax]
0x16c5:	lea	rdx, [rip + 0x3fb6]
0x16cc:	mov	edi, 1
0x16d1:	xor	eax, eax
0x16d3:	call	0x14f0


0x16e6:	mov	ebp, eax
0x16e8:	jmp	0x1698


0x1eda:	mov	esi, dword ptr [rbx]
0x1edc:	lea	rdx, [rip + 0x3742]
0x1ee3:	mov	rcx, rax
0x1ee6:	mov	r8, rbp
0x1ee9:	xor	edi, edi
0x1eeb:	xor	eax, eax
0x1eed:	call	0x14f0


0x36ec:	add	rsp, 0x20
0x36f0:	mov	r11, qword ptr [rsp + 0x10]
0x36f5:	cmp	r11, rax
0x36f8:	ja	0x3761


0x36fa:	lea	rsi, [rax + 1]
0x36fe:	lea	rax, [rip + 0x204a1b]
0x3705:	cmp	r12, rax
0x3708:	mov	qword ptr [rbx], rsi
0x370b:	je	0x371f


0x3761:	mov	eax, dword ptr [rsp + 0x18]
0x3765:	mov	dword ptr [r13], eax
0x3769:	add	rsp, 0x28
0x376d:	mov	rax, r12
0x3770:	pop	rbx
0x3771:	pop	rbp
0x3772:	pop	r12
0x3774:	pop	r13
0x3776:	pop	r14
0x3778:	pop	r15
0x377a:	ret	


0x371f:	mov	rdi, rsi
0x3722:	mov	qword ptr [rsp + 0x10], rsi
0x3727:	call	0x4580


0x370d:	mov	rdi, r12
0x3710:	mov	qword ptr [rsp + 0x10], rsi
0x3715:	call	0x12e0


0x371a:	mov	rsi, qword ptr [rsp + 0x10]
0x371f:	mov	rdi, rsi
0x3722:	mov	qword ptr [rsp + 0x10], rsi
0x3727:	call	0x4580


0x372c:	sub	rsp, 8
0x3730:	mov	qword ptr [rbx + 8], rax
0x3734:	mov	r8d, dword ptr [rbp]
0x3738:	push	qword ptr [rbp + 0x30]
0x373b:	push	qword ptr [rbp + 0x28]
0x373e:	mov	rcx, r14
0x3741:	push	r15
0x3743:	mov	r9d, dword ptr [rsp + 0x3c]
0x3748:	mov	rdi, rax
0x374b:	mov	rdx, qword ptr [rsp + 0x28]
0x3750:	mov	rsi, qword ptr [rsp + 0x30]
0x3755:	mov	r12, rax
0x3758:	call	0x23c0


0x3e72:	mov	rdi, qword ptr [rsp + 0x38]
0x3e77:	xor	rdi, qword ptr fs:[0x28]
0x3e80:	jne	0x3e8c


0x3e82:	add	rsp, 0x48
0x3e86:	ret	


0x3e8c:	call	0x13b0


0x3bbf:	mov	rcx, qword ptr [rsp + 0x38]
0x3bc4:	xor	rcx, qword ptr fs:[0x28]
0x3bcd:	jne	0x3bd9


0x3bcf:	add	rsp, 0x48
0x3bd3:	ret	


0x3bd9:	call	0x13b0


0x3c4b:	mov	rdx, qword ptr [rsp + 0x38]
0x3c50:	xor	rdx, qword ptr fs:[0x28]
0x3c59:	jne	0x3c65


0x3c5b:	add	rsp, 0x48
0x3c5f:	ret	


0x3c65:	call	0x13b0


0x3ddf:	mov	rcx, qword ptr [rsp + 0x38]
0x3de4:	xor	rcx, qword ptr fs:[0x28]
0x3ded:	jne	0x3df9


0x3def:	add	rsp, 0x48
0x3df3:	ret	


0x3df9:	call	0x13b0


0x19c7:	mov	rbx, rax
0x19ca:	call	0x1300


0x19cf:	mov	esi, dword ptr [rax]
0x19d1:	lea	rdx, [rip + 0x31de]
0x19d8:	mov	rcx, rbx
0x19db:	xor	edi, edi
0x19dd:	xor	eax, eax
0x19df:	xor	ebx, ebx
0x19e1:	call	0x14f0


0x19e6:	jmp	0x197c


0x197c:	mov	rdi, qword ptr [rsp + 0x10038]
0x1984:	xor	rdi, qword ptr fs:[0x28]
0x198d:	mov	eax, ebx
0x198f:	jne	0x1af8


0x1a9b:	lea	rsi, [rip + 0x30e2]
0x1aa2:	mov	rbx, rax
0x1aa5:	mov	edx, 5
0x1aaa:	xor	edi, edi
0x1aac:	call	0x1380


0x1ab1:	mov	rcx, rbx
0x1ab4:	mov	rdx, rax
0x1ab7:	xor	esi, esi
0x1ab9:	mov	edi, 1
0x1abe:	xor	eax, eax
0x1ac0:	call	0x14f0


0x1a22:	mov	rbx, rax
0x1a25:	call	0x1300


0x1a2a:	mov	esi, dword ptr [rax]
0x1a2c:	lea	rdx, [rip + 0x3183]
0x1a33:	mov	rcx, rbx
0x1a36:	xor	edi, edi
0x1a38:	xor	eax, eax
0x1a3a:	call	0x14f0


0x1a3f:	lea	rdi, [rip + 0x3c3c]
0x1a46:	mov	ecx, 2
0x1a4b:	mov	rsi, r12
0x1a4e:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1a4e:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1a50:	seta	al
0x1a53:	sbb	al, 0
0x1a55:	xor	ebx, ebx
0x1a57:	test	al, al
0x1a59:	je	0x197c


0x1a5f:	mov	rdi, rbp
0x1a62:	call	0x4810


0x1a67:	jmp	0x197c


0x3d0e:	mov	rsi, qword ptr [rsp + 0x38]
0x3d13:	xor	rsi, qword ptr fs:[0x28]
0x3d1c:	jne	0x3d23


0x3d1e:	add	rsp, 0x48
0x3d22:	ret	


0x3d23:	call	0x13b0


0x375d:	add	rsp, 0x20
0x3761:	mov	eax, dword ptr [rsp + 0x18]
0x3765:	mov	dword ptr [r13], eax
0x3769:	add	rsp, 0x28
0x376d:	mov	rax, r12
0x3770:	pop	rbx
0x3771:	pop	rbp
0x3772:	pop	r12
0x3774:	pop	r13
0x3776:	pop	r14
0x3778:	pop	r15
0x377a:	ret	


0x39ac:	lea	rsi, [rax + 1]
0x39b0:	mov	qword ptr [rsp + 0x48], rax
0x39b5:	add	rsp, 0x20
0x39b9:	mov	rdi, rsi
0x39bc:	mov	qword ptr [rsp + 0x18], rsi
0x39c1:	call	0x4580


0x39c6:	mov	qword ptr [rsp + 0x10], rax
0x39cb:	sub	rsp, 8
0x39cf:	push	qword ptr [rbx + 0x30]
0x39d2:	push	qword ptr [rbx + 0x28]
0x39d5:	mov	r10, qword ptr [rsp + 0x38]
0x39da:	mov	r9d, ebp
0x39dd:	mov	r8d, dword ptr [rbx]
0x39e0:	mov	rcx, r15
0x39e3:	mov	rdx, r14
0x39e6:	mov	rdi, rax
0x39e9:	push	r10
0x39eb:	mov	rsi, qword ptr [rsp + 0x38]
0x39f0:	call	0x23c0


0x39f5:	mov	eax, dword ptr [rsp + 0x2c]
0x39f9:	add	rsp, 0x20
0x39fd:	test	r12, r12
0x3a00:	mov	dword ptr [r13], eax
0x3a04:	je	0x3a0f


0x3a0f:	mov	rax, qword ptr [rsp + 0x10]
0x3a14:	add	rsp, 0x38
0x3a18:	pop	rbx
0x3a19:	pop	rbp
0x3a1a:	pop	r12
0x3a1c:	pop	r13
0x3a1e:	pop	r14
0x3a20:	pop	r15
0x3a22:	ret	


0x3a06:	mov	r11, qword ptr [rsp + 0x28]
0x3a0b:	mov	qword ptr [r12], r11
0x3a0f:	mov	rax, qword ptr [rsp + 0x10]
0x3a14:	add	rsp, 0x38
0x3a18:	pop	rbx
0x3a19:	pop	rbp
0x3a1a:	pop	r12
0x3a1c:	pop	r13
0x3a1e:	pop	r14
0x3a20:	pop	r15
0x3a22:	ret	


0x3921:	mov	dword ptr [rbp], r12d
0x3925:	add	rsp, 0x38
0x3929:	pop	rbx
0x392a:	pop	rbp
0x392b:	pop	r12
0x392d:	pop	r13
0x392f:	pop	r14
0x3931:	pop	r15
0x3933:	ret	


0x2224:	jmp	0x21f8


0x20e5:	jmp	0x2029


0x4b2d:	add	rbx, 1
0x4b31:	cmp	rbp, rbx
0x4b34:	jne	0x4b20


0x4b20:	mov	rdx, r15
0x4b23:	mov	rsi, r14
0x4b26:	mov	edi, r13d
0x4b29:	call	qword ptr [r12 + rbx*8]






0x41a0:	mov	r13, qword ptr [rbx + 0x10]
0x41a4:	mov	r12, qword ptr [rbx + 8]
0x41a8:	lea	rsi, [rip + 0x19f0]
0x41af:	mov	rbx, qword ptr [rbx]
0x41b2:	mov	edx, 5
0x41b7:	xor	edi, edi
0x41b9:	call	0x1380


0x42e0:	mov	r9, qword ptr [rbx + 0x10]
0x42e4:	mov	r13, qword ptr [rbx + 0x30]
0x42e8:	lea	rsi, [rip + 0x1a51]
0x42ef:	mov	r12, qword ptr [rbx + 0x28]
0x42f3:	mov	r15, qword ptr [rbx + 0x20]
0x42f7:	mov	edx, 5
0x42fc:	mov	r14, qword ptr [rbx + 0x18]
0x4300:	mov	r8, qword ptr [rbx + 8]
0x4304:	xor	edi, edi
0x4306:	mov	qword ptr [rsp + 8], r9
0x430b:	mov	rbx, qword ptr [rbx]
0x430e:	mov	qword ptr [rsp], r8
0x4312:	call	0x1380


0x40c0:	mov	r10, qword ptr [rbx + 0x40]
0x40c4:	mov	r9, qword ptr [rbx + 0x38]
0x40c8:	lea	rsi, [rip + 0x1cd1]
0x40cf:	mov	rax, qword ptr [rbx + 0x10]
0x40d3:	mov	r8, qword ptr [rbx + 8]
0x40d7:	mov	edx, 5
0x40dc:	mov	r13, qword ptr [rbx + 0x30]
0x40e0:	mov	r12, qword ptr [rbx + 0x28]
0x40e4:	mov	r15, qword ptr [rbx + 0x20]
0x40e8:	mov	r14, qword ptr [rbx + 0x18]
0x40ec:	mov	rbx, qword ptr [rbx]
0x40ef:	mov	qword ptr [rsp + 0x18], r10
0x40f4:	mov	qword ptr [rsp + 0x10], r9
0x40f9:	mov	qword ptr [rsp], rax
0x40fd:	mov	qword ptr [rsp + 8], r8
0x4102:	xor	edi, edi
0x4104:	call	0x1380


0x4158:	mov	r12, qword ptr [rbx + 8]
0x415c:	lea	rsi, [rip + 0x1a25]
0x4163:	mov	rbx, qword ptr [rbx]
0x4166:	mov	edx, 5
0x416b:	xor	edi, edi
0x416d:	call	0x1380


0x4086:	add	rsp, 0x28
0x408a:	pop	rbx
0x408b:	pop	rbp
0x408c:	pop	r12
0x408e:	pop	r13
0x4090:	pop	r14
0x4092:	pop	r15
0x4094:	ret	


0x4248:	mov	r15, qword ptr [rbx + 0x20]
0x424c:	lea	rsi, [rip + 0x1a9d]
0x4253:	mov	edx, 5
0x4258:	xor	edi, edi
0x425a:	mov	r14, qword ptr [rbx + 0x18]
0x425e:	mov	r13, qword ptr [rbx + 0x10]
0x4262:	mov	r12, qword ptr [rbx + 8]
0x4266:	mov	rbx, qword ptr [rbx]
0x4269:	call	0x1380


0x4278:	mov	r8, qword ptr [rbx + 8]
0x427c:	mov	r12, qword ptr [rbx + 0x28]
0x4280:	lea	rsi, [rip + 0x1a91]
0x4287:	mov	r15, qword ptr [rbx + 0x20]
0x428b:	mov	r14, qword ptr [rbx + 0x18]
0x428f:	mov	edx, 5
0x4294:	mov	r13, qword ptr [rbx + 0x10]
0x4298:	xor	edi, edi
0x429a:	mov	rbx, qword ptr [rbx]
0x429d:	mov	qword ptr [rsp], r8
0x42a1:	call	0x1380


0x41f0:	lea	rsi, [rip + 0x1ad9]
0x41f7:	mov	edx, 5
0x41fc:	xor	edi, edi
0x41fe:	mov	r14, qword ptr [rbx + 0x18]
0x4202:	mov	r13, qword ptr [rbx + 0x10]
0x4206:	mov	r12, qword ptr [rbx + 8]
0x420a:	mov	rbx, qword ptr [rbx]
0x420d:	call	0x1380


0x4010:	mov	r9, qword ptr [rbx + 0x38]
0x4014:	mov	rax, qword ptr [rbx + 0x10]
0x4018:	lea	rsi, [rip + 0x1d51]
0x401f:	mov	r8, qword ptr [rbx + 8]
0x4023:	mov	edx, 5
0x4028:	xor	edi, edi
0x402a:	mov	r13, qword ptr [rbx + 0x30]
0x402e:	mov	r12, qword ptr [rbx + 0x28]
0x4032:	mov	qword ptr [rsp + 0x10], r9
0x4037:	mov	r15, qword ptr [rbx + 0x20]
0x403b:	mov	r14, qword ptr [rbx + 0x18]
0x403f:	mov	qword ptr [rsp], rax
0x4043:	mov	qword ptr [rsp + 8], r8
0x4048:	mov	rbx, qword ptr [rbx]
0x404b:	call	0x1380


0x4118:	mov	rbx, qword ptr [rbx]
0x411b:	lea	rsi, [rip + 0x1a56]
0x4122:	mov	edx, 5
0x4127:	xor	edi, edi
0x4129:	call	0x1380


0x412e:	add	rsp, 0x28
0x4132:	mov	rcx, rbx
0x4135:	mov	rdi, rbp
0x4138:	pop	rbx
0x4139:	pop	rbp
0x413a:	pop	r12
0x413c:	pop	r13
0x413e:	pop	r14
0x4140:	pop	r15
0x4142:	mov	rdx, rax
0x4145:	mov	esi, 1
0x414a:	xor	eax, eax
0x414c:	jmp	0x1550


0x4050:	sub	rsp, 8
0x4054:	mov	r9, qword ptr [rsp + 0x18]
0x4059:	mov	rdx, rax
0x405c:	mov	rcx, rbx
0x405f:	mov	esi, 1
0x4064:	mov	rdi, rbp
0x4067:	xor	eax, eax
0x4069:	push	r9
0x406b:	push	r13
0x406d:	push	r12
0x406f:	push	r15
0x4071:	push	r14
0x4073:	mov	r9, qword ptr [rsp + 0x30]
0x4078:	mov	r8, qword ptr [rsp + 0x38]
0x407d:	call	0x1550


0x4212:	sub	rsp, 8
0x4216:	push	r14
0x4218:	mov	rdx, rax
0x421b:	mov	r9, r13
0x421e:	mov	r8, r12
0x4221:	mov	rcx, rbx
0x4224:	mov	rdi, rbp
0x4227:	mov	esi, 1
0x422c:	xor	eax, eax
0x422e:	call	0x1550


0x4233:	pop	rax
0x4234:	pop	rdx
0x4235:	add	rsp, 0x28
0x4239:	pop	rbx
0x423a:	pop	rbp
0x423b:	pop	r12
0x423d:	pop	r13
0x423f:	pop	r14
0x4241:	pop	r15
0x4243:	ret	


0x42a6:	sub	rsp, 8
0x42aa:	mov	r9, r13
0x42ad:	push	r12
0x42af:	push	r15
0x42b1:	push	r14
0x42b3:	mov	r8, qword ptr [rsp + 0x20]
0x42b8:	mov	rcx, rbx
0x42bb:	mov	rdx, rax
0x42be:	mov	rdi, rbp
0x42c1:	mov	esi, 1
0x42c6:	xor	eax, eax
0x42c8:	call	0x1550


0x42cd:	add	rsp, 0x20
0x42d1:	add	rsp, 0x28
0x42d5:	pop	rbx
0x42d6:	pop	rbp
0x42d7:	pop	r12
0x42d9:	pop	r13
0x42db:	pop	r14
0x42dd:	pop	r15
0x42df:	ret	


0x426e:	push	r15
0x4270:	jmp	0x4216


0x4216:	push	r14
0x4218:	mov	rdx, rax
0x421b:	mov	r9, r13
0x421e:	mov	r8, r12
0x4221:	mov	rcx, rbx
0x4224:	mov	rdi, rbp
0x4227:	mov	esi, 1
0x422c:	xor	eax, eax
0x422e:	call	0x1550


0x4172:	add	rsp, 0x28
0x4176:	mov	r8, r12
0x4179:	mov	rcx, rbx
0x417c:	mov	rdi, rbp
0x417f:	mov	rdx, rax
0x4182:	mov	esi, 1
0x4187:	pop	rbx
0x4188:	pop	rbp
0x4189:	pop	r12
0x418b:	pop	r13
0x418d:	pop	r14
0x418f:	pop	r15
0x4191:	xor	eax, eax
0x4193:	jmp	0x1550


0x4317:	push	r13
0x4319:	push	r12
0x431b:	push	r15
0x431d:	push	r14
0x431f:	mov	r9, qword ptr [rsp + 0x28]
0x4324:	jmp	0x42b3


0x42b3:	mov	r8, qword ptr [rsp + 0x20]
0x42b8:	mov	rcx, rbx
0x42bb:	mov	rdx, rax
0x42be:	mov	rdi, rbp
0x42c1:	mov	esi, 1
0x42c6:	xor	eax, eax
0x42c8:	call	0x1550


0x41be:	add	rsp, 0x28
0x41c2:	mov	r9, r13
0x41c5:	mov	r8, r12
0x41c8:	mov	rcx, rbx
0x41cb:	mov	rdi, rbp
0x41ce:	mov	rdx, rax
0x41d1:	pop	rbx
0x41d2:	pop	rbp
0x41d3:	pop	r12
0x41d5:	pop	r13
0x41d7:	pop	r14
0x41d9:	pop	r15
0x41db:	mov	esi, 1
0x41e0:	xor	eax, eax
0x41e2:	jmp	0x1550


0x2f60:	sub	rsp, 8
0x2f64:	mov	rcx, rbp
0x2f67:	mov	rsi, r13
0x2f6a:	push	qword ptr [rsp + 0x68]
0x2f6e:	push	qword ptr [rsp + 0x78]
0x2f72:	mov	rdi, r14
0x2f75:	push	0
0x2f77:	mov	r9d, dword ptr [rsp + 0x98]
0x2f7f:	mov	r8d, dword ptr [rsp + 0x28]
0x2f84:	mov	rdx, qword ptr [rsp + 0x30]
0x2f89:	and	r9d, 0xfffffffd
0x2f8d:	call	0x23c0


0x2f92:	add	rsp, 0x20
0x2f96:	mov	r15, rax
0x2f99:	mov	rbx, qword ptr [rsp + 0xa8]
0x2fa1:	xor	rbx, qword ptr fs:[0x28]
0x2faa:	mov	rax, r15
0x2fad:	jne	0x35b3


0x2fb3:	add	rsp, 0xb8
0x2fba:	pop	rbx
0x2fbb:	pop	rbp
0x2fbc:	pop	r12
0x2fbe:	pop	r13
0x2fc0:	pop	r14
0x2fc2:	pop	r15
0x2fc4:	ret	


0x35b3:	call	0x13b0


0x355d:	sub	rsp, 8
0x3561:	mov	r8d, 5
0x3567:	mov	rcx, r11
0x356a:	push	qword ptr [rsp + 0x68]
0x356e:	push	qword ptr [rsp + 0x78]
0x3572:	mov	rdi, r14
0x3575:	push	qword ptr [rsp + 0x38]
0x3579:	mov	r9d, dword ptr [rsp + 0x98]
0x3581:	mov	rdx, qword ptr [rsp + 0x30]
0x3586:	mov	rsi, qword ptr [rsp + 0x70]
0x358b:	call	0x23c0


0x3590:	add	rsp, 0x20
0x3594:	mov	r15, rax
0x3597:	jmp	0x2f99


0x2f99:	mov	rbx, qword ptr [rsp + 0xa8]
0x2fa1:	xor	rbx, qword ptr fs:[0x28]
0x2faa:	mov	rax, r15
0x2fad:	jne	0x35b3


0x12d0:	push	qword ptr [rip + 0x206b9a]
0x12d6:	jmp	qword ptr [rip + 0x206b9c]


0x12dc:	nop	dword ptr [rax]


0x12e6:	push	0
0x12eb:	jmp	0x12d0


0x12f6:	push	1
0x12fb:	jmp	0x12d0


0x1306:	push	2
0x130b:	jmp	0x12d0


0x1316:	push	3
0x131b:	jmp	0x12d0


0x1326:	push	4
0x132b:	jmp	0x12d0


0x1336:	push	5
0x133b:	jmp	0x12d0


0x1346:	push	6
0x134b:	jmp	0x12d0


0x1356:	push	7
0x135b:	jmp	0x12d0


0x1366:	push	8
0x136b:	jmp	0x12d0


0x1376:	push	9
0x137b:	jmp	0x12d0


0x1386:	push	0xa
0x138b:	jmp	0x12d0


0x1396:	push	0xb
0x139b:	jmp	0x12d0


0x13a6:	push	0xc
0x13ab:	jmp	0x12d0


0x13b6:	push	0xd
0x13bb:	jmp	0x12d0


0x13c6:	push	0xe
0x13cb:	jmp	0x12d0


0x13d6:	push	0xf
0x13db:	jmp	0x12d0


0x13e6:	push	0x10
0x13eb:	jmp	0x12d0


0x13f6:	push	0x11
0x13fb:	jmp	0x12d0


0x1406:	push	0x12
0x140b:	jmp	0x12d0


0x1416:	push	0x13
0x141b:	jmp	0x12d0


0x1420:	jmp	qword ptr [rip + 0x206afa]




0x1426:	push	0x14
0x142b:	jmp	0x12d0


0x1436:	push	0x15
0x143b:	jmp	0x12d0


0x1446:	push	0x16
0x144b:	jmp	0x12d0


0x1456:	push	0x17
0x145b:	jmp	0x12d0


0x1466:	push	0x18
0x146b:	jmp	0x12d0


0x1476:	push	0x19
0x147b:	jmp	0x12d0


0x1486:	push	0x1a
0x148b:	jmp	0x12d0


0x1496:	push	0x1b
0x149b:	jmp	0x12d0


0x14a6:	push	0x1c
0x14ab:	jmp	0x12d0


0x14b6:	push	0x1d
0x14bb:	jmp	0x12d0


0x14c6:	push	0x1e
0x14cb:	jmp	0x12d0


0x14d6:	push	0x1f
0x14db:	jmp	0x12d0


0x14e6:	push	0x20
0x14eb:	jmp	0x12d0


0x14f6:	push	0x21
0x14fb:	jmp	0x12d0


0x1506:	push	0x22
0x150b:	jmp	0x12d0


0x1516:	push	0x23
0x151b:	jmp	0x12d0


0x1526:	push	0x24
0x152b:	jmp	0x12d0


0x1536:	push	0x25
0x153b:	jmp	0x12d0


0x1546:	push	0x26
0x154b:	jmp	0x12d0


0x1556:	push	0x27
0x155b:	jmp	0x12d0


0x1560:	jmp	qword ptr [rip + 0x206a5a]




0x1566:	push	0x28
0x156b:	jmp	0x12d0


0x1570:	jmp	qword ptr [rip + 0x206a52]




0x1576:	push	0x29
0x157b:	jmp	0x12d0


0x1580:	jmp	qword ptr [rip + 0x206a4a]




0x1586:	push	0x2a
0x158b:	jmp	0x12d0


0x16f1:	nop	word ptr cs:[rax + rax]
0x16fb:	nop	dword ptr [rax + rax]


0x172a:	hlt	


0x172b:	nop	dword ptr [rax + rax]


0x1762:	nop	dword ptr [rax]
0x1766:	nop	word ptr cs:[rax + rax]


0x17b2:	nop	dword ptr [rax]
0x17b6:	nop	word ptr cs:[rax + rax]


0x17fa:	nop	word ptr [rax + rax]


0x180a:	nop	word ptr [rax + rax]


0x1afd:	nop	dword ptr [rax]


0x1e42:	nop	word ptr cs:[rax + rax]
0x1e4c:	nop	dword ptr [rax]


0x1e58:	nop	dword ptr [rax + rax]


0x1e68:	nop	dword ptr [rax + rax]


0x1f14:	nop	word ptr cs:[rax + rax]
0x1f1e:	nop	


0x1f25:	nop	
0x1f26:	nop	word ptr cs:[rax + rax]


0x1f52:	nop	word ptr cs:[rax + rax]
0x1f5c:	nop	dword ptr [rax]


0x1fa2:	nop	word ptr cs:[rax + rax]
0x1fac:	nop	dword ptr [rax]


0x20ef:	nop	


0x222b:	nop	dword ptr [rax + rax]


0x22cf:	nop	


0x23b7:	nop	word ptr [rax + rax]


0x2453:	mov	byte ptr [rsp + 0xe], 1
0x2458:	mov	byte ptr [rsp + 0x7c], 0
0x245d:	xor	r12d, r12d
0x2460:	mov	qword ptr [rsp + 0x50], 0
0x2469:	mov	byte ptr [rsp + 0xf], 1
0x246e:	mov	byte ptr [rsp + 0xd], 0
0x2473:	lea	rax, [rip + 0x321b]
0x247a:	mov	qword ptr [rsp + 0x18], 1
0x2483:	xor	r15d, r15d
0x2486:	mov	dword ptr [rsp + 8], 2
0x248e:	mov	qword ptr [rsp + 0x48], rax
0x2493:	xor	r11d, r11d
0x2496:	mov	rax, rbp
0x2499:	mov	r8d, r12d
0x249c:	mov	rbp, r11
0x249f:	mov	r11, rax
0x24a2:	nop	word ptr [rax + rax]
0x24a8:	cmp	r11, rbp
0x24ab:	setne	r12b
0x24af:	cmp	r11, -1
0x24b3:	jne	0x24c2


0x24b5:	mov	rax, qword ptr [rsp + 0x10]
0x24ba:	cmp	byte ptr [rax + rbp], 0
0x24be:	setne	r12b
0x24c2:	test	r12b, r12b
0x24c5:	je	0x2b20


0x24c2:	test	r12b, r12b
0x24c5:	je	0x2b20


0x2b20:	cmp	dword ptr [rsp + 8], 2
0x2b25:	movzx	ebx, byte ptr [rsp + 0xf]
0x2b2a:	mov	r12d, r8d
0x2b2d:	mov	rbp, r11
0x2b30:	sete	dl
0x2b33:	mov	eax, ebx
0x2b35:	test	r15, r15
0x2b38:	sete	cl
0x2b3b:	and	eax, edx
0x2b3d:	and	al, cl
0x2b3f:	jne	0x35a6


0x24cb:	cmp	dword ptr [rsp + 8], 2
0x24d0:	mov	rdi, qword ptr [rsp + 0x10]
0x24d5:	lea	r9, [rdi + rbp]
0x24d9:	setne	al
0x24dc:	and	al, byte ptr [rsp + 0xd]
0x24e0:	mov	r10d, eax
0x24e3:	je	0x2590


0x2b45:	mov	eax, ebx
0x2b47:	xor	eax, 1
0x2b4a:	and	dl, al
0x2b4c:	je	0x34bc


0x35a6:	mov	dword ptr [rsp + 8], 2
0x35ae:	jmp	0x2f49


0x2590:	movzx	ebx, byte ptr [r9]
0x2594:	cmp	bl, 0x7e
0x2597:	ja	0x28b8


0x24e9:	mov	rax, qword ptr [rsp + 0x18]
0x24ee:	test	rax, rax
0x24f1:	je	0x2920


0x34bc:	mov	rbx, qword ptr [rsp + 0x48]
0x34c1:	test	rbx, rbx
0x34c4:	je	0x34f2


0x2b52:	cmp	byte ptr [rsp + 0x7c], 0
0x2b57:	je	0x34ba


0x2f49:	cmp	byte ptr [rsp + 0xd], 0
0x2f4e:	je	0x2f60


0x259d:	lea	rcx, [rip + 0x3188]
0x25a4:	movzx	edx, bl
0x25a7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x25ab:	add	rax, rcx
0x25ae:	jmp	rax


0x28b8:	cmp	qword ptr [rsp + 0x58], 1
0x28be:	jne	0x2c68


0x2920:	movzx	ebx, byte ptr [r9]
0x2924:	cmp	bl, 0x7e
0x2927:	ja	0x28b0


0x24f7:	cmp	r11, -1
0x24fb:	lea	rbx, [rbp + rax]
0x2500:	jne	0x2530


0x34f2:	cmp	r13, r15
0x34f5:	jbe	0x2f99


0x34c6:	test	al, al
0x34c8:	je	0x34f2


0x34ba:	mov	eax, edx
0x34bc:	mov	rbx, qword ptr [rsp + 0x48]
0x34c1:	test	rbx, rbx
0x34c4:	je	0x34f2


0x2b5d:	cmp	byte ptr [rsp + 0xe], 0
0x2b62:	jne	0x355d


0x2f50:	test	al, al
0x2f52:	mov	eax, 4
0x2f57:	cmove	eax, dword ptr [rsp + 8]
0x2f5c:	mov	dword ptr [rsp + 8], eax


0x28c4:	mov	qword ptr [rsp + 0x38], r11
0x28c9:	mov	byte ptr [rsp + 0x30], r8b
0x28ce:	mov	byte ptr [rsp + 0x28], r10b
0x28d3:	call	0x1580


0x2c68:	lea	rax, [rsp + 0xa0]
0x2c70:	cmp	r11, -1
0x2c74:	mov	qword ptr [rsp + 0xa0], 0
0x2c80:	mov	qword ptr [rsp + 0x28], rax
0x2c85:	jne	0x2cb4


0x2929:	lea	rcx, [rip + 0x2ff8]
0x2930:	movzx	edx, bl
0x2933:	movsxd	rax, dword ptr [rcx + rdx*4]
0x2937:	add	rax, rcx
0x293a:	jmp	rax


0x28b0:	xor	r10d, r10d
0x28b3:	nop	dword ptr [rax + rax]
0x28b8:	cmp	qword ptr [rsp + 0x58], 1
0x28be:	jne	0x2c68


0x2502:	cmp	rax, 1
0x2506:	jbe	0x2530


0x2530:	cmp	rbx, r11
0x2533:	mov	byte ptr [rsp + 0x28], r10b
0x2538:	ja	0x2af0


0x34fb:	mov	byte ptr [r14 + r15], 0
0x3500:	jmp	0x2f99


0x34ca:	movzx	ecx, byte ptr [rbx]
0x34cd:	mov	rax, rbx
0x34d0:	test	cl, cl
0x34d2:	je	0x34f2


0x2b68:	test	r13, r13
0x2b6b:	sete	al
0x2b6e:	cmp	qword ptr [rsp + 0x50], 0
0x2b74:	setne	dl
0x2b77:	and	al, dl
0x2b79:	je	0x359c


0x2c87:	mov	rdi, qword ptr [rsp + 0x10]
0x2c8c:	mov	byte ptr [rsp + 0x40], r8b
0x2c91:	mov	byte ptr [rsp + 0x38], r10b
0x2c96:	mov	qword ptr [rsp + 0x30], r9
0x2c9b:	call	0x13a0


0x2cb4:	lea	rax, [rsp + 0x9c]
0x2cbc:	xor	ecx, ecx
0x2cbe:	mov	byte ptr [rsp + 0x7e], bl
0x2cc2:	mov	byte ptr [rsp + 0x7d], r8b
0x2cc7:	mov	rbx, rcx
0x2cca:	mov	qword ptr [rsp + 0x88], r9
0x2cd2:	mov	qword ptr [rsp + 0x38], rax
0x2cd7:	mov	byte ptr [rsp + 0x7f], r10b
0x2cdc:	mov	qword ptr [rsp + 0x80], r15
0x2ce4:	mov	qword ptr [rsp + 0x40], r14
0x2ce9:	mov	qword ptr [rsp + 0x70], r13
0x2cee:	mov	qword ptr [rsp + 0x30], r11
0x2cf3:	mov	rax, qword ptr [rsp + 0x10]
0x2cf8:	lea	r14, [rbp + rbx]
0x2cfd:	mov	rdx, qword ptr [rsp + 0x30]
0x2d02:	mov	rcx, qword ptr [rsp + 0x28]
0x2d07:	mov	rdi, qword ptr [rsp + 0x38]
0x2d0c:	lea	r13, [rax + r14]
0x2d10:	sub	rdx, r14
0x2d13:	mov	rsi, r13
0x2d16:	call	0x4930


0x2508:	mov	byte ptr [rsp + 0x38], r8b
0x250d:	mov	byte ptr [rsp + 0x30], r10b
0x2512:	mov	qword ptr [rsp + 0x28], r9
0x2517:	call	0x13a0


0x253e:	mov	rdx, qword ptr [rsp + 0x18]
0x2543:	mov	rsi, qword ptr [rsp + 0x48]
0x2548:	mov	rdi, r9
0x254b:	mov	qword ptr [rsp + 0x40], r11
0x2550:	mov	byte ptr [rsp + 0x38], r8b
0x2555:	mov	qword ptr [rsp + 0x30], r9
0x255a:	call	0x1420


0x2af0:	xor	r10d, r10d
0x2af3:	jmp	0x2590


0x34d4:	mov	rdx, r15
0x34d7:	sub	rax, r15
0x34da:	cmp	r13, rdx
0x34dd:	jbe	0x34e3


0x359c:	movzx	eax, byte ptr [rsp + 0x7c]
0x35a1:	jmp	0x34bc


0x2b7f:	mov	r13, qword ptr [rsp + 0x50]
0x2b84:	lea	rbx, [rip + 0x2b0a]
0x2b8b:	mov	byte ptr [r14], 0x27
0x2b8f:	mov	dword ptr [rsp + 8], 2
0x2b97:	mov	r15d, 1
0x2b9d:	mov	qword ptr [rsp + 0x18], 1
0x2ba6:	mov	byte ptr [rsp + 0xf], 0
0x2bab:	mov	qword ptr [rsp + 0x48], rbx
0x2bb0:	mov	byte ptr [rsp + 0x7c], al
0x2bb4:	jmp	0x2493


0x34e3:	add	rdx, 1
0x34e7:	movzx	ecx, byte ptr [rax + rdx]
0x34eb:	test	cl, cl
0x34ed:	jne	0x34da


0x34df:	mov	byte ptr [r14 + rdx], cl
0x34e3:	add	rdx, 1
0x34e7:	movzx	ecx, byte ptr [rax + rdx]
0x34eb:	test	cl, cl
0x34ed:	jne	0x34da


0x2493:	xor	r11d, r11d
0x2496:	mov	rax, rbp
0x2499:	mov	r8d, r12d
0x249c:	mov	rbp, r11
0x249f:	mov	r11, rax
0x24a2:	nop	word ptr [rax + rax]
0x24a8:	cmp	r11, rbp
0x24ab:	setne	r12b
0x24af:	cmp	r11, -1
0x24b3:	jne	0x24c2


0x34ef:	mov	r15, rdx
0x34f2:	cmp	r13, r15
0x34f5:	jbe	0x2f99


0x34da:	cmp	r13, rdx
0x34dd:	jbe	0x34e3


0x255f:	test	eax, eax
0x2561:	mov	r9, qword ptr [rsp + 0x30]
0x2566:	movzx	r8d, byte ptr [rsp + 0x38]
0x256c:	mov	r11, qword ptr [rsp + 0x40]
0x2571:	jne	0x2af0


0x2577:	cmp	byte ptr [rsp + 0xf], 0
0x257c:	movzx	r10d, byte ptr [rsp + 0x28]
0x2582:	jne	0x3505


0x3505:	cmp	dword ptr [rsp + 8], 2
0x350a:	movzx	ebx, byte ptr [rsp + 0xf]
0x350f:	mov	rbp, r11
0x3512:	sete	al
0x3515:	mov	byte ptr [rsp + 0xd], bl
0x3519:	jmp	0x2f49


0x2d1b:	test	rax, rax
0x2d1e:	mov	r15, rax
0x2d21:	je	0x2d71


0x2d71:	mov	edx, r12d
0x2d74:	mov	rdi, rbx
0x2d77:	movzx	r8d, byte ptr [rsp + 0x7d]
0x2d7d:	xor	edx, 1
0x2d80:	movzx	ebx, byte ptr [rsp + 0x7e]
0x2d85:	movzx	r10d, byte ptr [rsp + 0x7f]
0x2d8b:	and	dl, byte ptr [rsp + 0xd]
0x2d8f:	mov	r15, qword ptr [rsp + 0x80]
0x2d97:	mov	r14, qword ptr [rsp + 0x40]
0x2d9c:	mov	r13, qword ptr [rsp + 0x70]
0x2da1:	mov	r11, qword ptr [rsp + 0x30]
0x2da6:	cmp	rdi, 1
0x2daa:	jbe	0x33ab


0x2d23:	cmp	rax, -1
0x2d27:	je	0x3345


0x33ab:	mov	eax, edx
0x33ad:	jmp	0x2907


0x2db0:	mov	rcx, rdi
0x2db3:	xor	esi, esi
0x2db5:	movzx	r9d, byte ptr [rsp + 0xf]
0x2dbb:	add	rcx, rbp
0x2dbe:	mov	rdi, qword ptr [rsp + 0x10]
0x2dc3:	jmp	0x2e7e


0x3345:	mov	rdi, rbx
0x3348:	movzx	r8d, byte ptr [rsp + 0x7d]
0x334e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3353:	movzx	r10d, byte ptr [rsp + 0x7f]
0x3359:	mov	r15, qword ptr [rsp + 0x80]
0x3361:	xor	r12d, r12d
0x3364:	mov	r14, qword ptr [rsp + 0x40]
0x3369:	mov	r13, qword ptr [rsp + 0x70]
0x336e:	mov	r11, qword ptr [rsp + 0x30]
0x3373:	movzx	edx, byte ptr [rsp + 0xd]
0x3378:	jmp	0x2da6


0x2d2d:	cmp	rax, -2
0x2d31:	je	0x32d1


0x2907:	test	al, al
0x2909:	jne	0x32a1


0x2e7e:	test	dl, dl
0x2e80:	jne	0x2dd0


0x2da6:	cmp	rdi, 1
0x2daa:	jbe	0x33ab


0x32d1:	mov	r11, qword ptr [rsp + 0x30]
0x32d6:	mov	rsi, r14
0x32d9:	mov	rcx, r13
0x32dc:	mov	rax, rbx
0x32df:	mov	rdi, rbx
0x32e2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x32e8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x32ed:	mov	r9, qword ptr [rsp + 0x88]
0x32f5:	cmp	rsi, r11
0x32f8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x32fe:	mov	r15, qword ptr [rsp + 0x80]
0x3306:	mov	r14, qword ptr [rsp + 0x40]
0x330b:	mov	r13, qword ptr [rsp + 0x70]
0x3310:	jae	0x3338


0x2d37:	cmp	dword ptr [rsp + 8], 2
0x2d3c:	sete	al
0x2d3f:	and	al, byte ptr [rsp + 0xf]
0x2d43:	jne	0x2ee0


0x290f:	cmp	dword ptr [rsp + 8], 2
0x2914:	sete	dl
0x2917:	jmp	0x25e8


0x32a1:	movzx	edx, byte ptr [rsp + 0xd]
0x32a6:	xor	r12d, r12d
0x32a9:	jmp	0x2db0


0x2e86:	mov	eax, esi
0x2e88:	xor	eax, 1
0x2e8b:	and	eax, r8d
0x2e8e:	test	r10b, r10b
0x2e91:	je	0x2ea1


0x2dd0:	cmp	dword ptr [rsp + 8], 2
0x2dd5:	sete	al
0x2dd8:	test	r9b, r9b
0x2ddb:	jne	0x3290


0x3312:	cmp	byte ptr [rcx], 0
0x3315:	jne	0x3327


0x3338:	movzx	edx, byte ptr [rsp + 0xd]
0x333d:	xor	r12d, r12d
0x3340:	jmp	0x2da6


0x2d49:	mov	edi, dword ptr [rsp + 0x9c]
0x2d50:	call	0x1570


0x2ee0:	cmp	r15, 1
0x2ee4:	je	0x2d49


0x25e8:	cmp	byte ptr [rsp + 0xd], 1
0x25ed:	jne	0x2702


0x2ea1:	add	rbp, 1
0x2ea5:	cmp	rbp, rcx
0x2ea8:	jae	0x262c


0x2e93:	cmp	r13, r15
0x2e96:	jbe	0x2e9d


0x2de1:	mov	esi, r8d
0x2de4:	xor	esi, 1
0x2de7:	and	al, sil
0x2dea:	je	0x2e1b


0x3290:	movzx	ebx, byte ptr [rsp + 0xf]
0x3295:	mov	rbp, r11
0x3298:	mov	byte ptr [rsp + 0xd], bl
0x329c:	jmp	0x2f49


0x3317:	jmp	0x3338


0x3327:	add	rax, 1
0x332b:	lea	rdx, [rbp + rax]
0x3330:	cmp	r11, rdx
0x3333:	ja	0x3320


0x2eea:	mov	rdi, qword ptr [rsp + 0x10]
0x2eef:	lea	rcx, [rdi + r15]
0x2ef3:	lea	rdx, [rdi + r14 + 1]
0x2ef8:	lea	r8, [rcx + r14]
0x2efc:	jmp	0x2f0d


0x25f3:	test	dl, dl
0x25f5:	jne	0x2702


0x2702:	cmp	byte ptr [rsp + 0xf], 0
0x2707:	jne	0x25fb


0x2eae:	test	al, al
0x2eb0:	je	0x32ae


0x262c:	test	al, al
0x262e:	je	0x2650


0x2e9d:	add	r15, 1
0x2ea1:	add	rbp, 1
0x2ea5:	cmp	rbp, rcx
0x2ea8:	jae	0x262c


0x2e98:	mov	byte ptr [r14 + r15], 0x5c
0x2e9d:	add	r15, 1
0x2ea1:	add	rbp, 1
0x2ea5:	cmp	rbp, rcx
0x2ea8:	jae	0x262c


0x2e1b:	cmp	r13, r15
0x2e1e:	jbe	0x2e25


0x2dec:	cmp	r13, r15
0x2def:	jbe	0x2df6


0x3335:	mov	rdi, rax
0x3338:	movzx	edx, byte ptr [rsp + 0xd]
0x333d:	xor	r12d, r12d
0x3340:	jmp	0x2da6


0x3320:	cmp	byte ptr [r9 + rax], 0
0x3325:	je	0x3335


0x2f0d:	movzx	ecx, byte ptr [rdx]
0x2f10:	sub	ecx, 0x5b
0x2f13:	cmp	cl, 0x21
0x2f16:	ja	0x2f00


0x25fb:	mov	rsi, qword ptr [rsp + 0x20]
0x2600:	test	rsi, rsi
0x2603:	je	0x2619


0x270d:	jmp	0x2619


0x32ae:	xor	r10d, r10d
0x32b1:	jmp	0x2e6d


0x2eb6:	cmp	r13, r15
0x2eb9:	jbe	0x2ec0


0x2650:	cmp	r15, r13
0x2653:	jae	0x2659


0x2630:	cmp	r13, r15
0x2633:	jbe	0x263a


0x2e25:	lea	rax, [r15 + 1]
0x2e29:	cmp	r13, rax
0x2e2c:	jbe	0x2e3b


0x2e20:	mov	byte ptr [r14 + r15], 0x5c
0x2e25:	lea	rax, [r15 + 1]
0x2e29:	cmp	r13, rax
0x2e2c:	jbe	0x2e3b


0x2df6:	lea	rsi, [r15 + 1]
0x2dfa:	cmp	r13, rsi
0x2dfd:	jbe	0x2e05


0x2df1:	mov	byte ptr [r14 + r15], 0x27
0x2df6:	lea	rsi, [r15 + 1]
0x2dfa:	cmp	r13, rsi
0x2dfd:	jbe	0x2e05


0x2f18:	mov	esi, 1
0x2f1d:	shl	rsi, cl
0x2f20:	mov	rcx, rsi
0x2f23:	movabs	rsi, 0x20000002b
0x2f2d:	test	rcx, rsi
0x2f30:	je	0x2f00


0x2f00:	add	rdx, 1
0x2f04:	cmp	r8, rdx
0x2f07:	je	0x2d49


0x2619:	test	r10b, r10b
0x261c:	jne	0x2763


0x2605:	mov	edx, ebx
0x2607:	shr	dl, 5
0x260a:	movzx	edx, dl
0x260d:	mov	edx, dword ptr [rsi + rdx*4]
0x2610:	bt	edx, ebx
0x2613:	jb	0x2763


0x2e6d:	cmp	r13, r15
0x2e70:	jbe	0x2e76


0x2ec0:	lea	rax, [r15 + 1]
0x2ec4:	cmp	r13, rax
0x2ec7:	jbe	0x2ecf


0x2ebb:	mov	byte ptr [r14 + r15], 0x27
0x2ec0:	lea	rax, [r15 + 1]
0x2ec4:	cmp	r13, rax
0x2ec7:	jbe	0x2ecf


0x2655:	mov	byte ptr [r14 + r15], bl
0x2659:	movzx	edi, byte ptr [rsp + 0xe]
0x265e:	add	r15, 1
0x2662:	mov	eax, 0
0x2667:	test	r12b, r12b
0x266a:	cmove	edi, eax
0x266d:	mov	byte ptr [rsp + 0xe], dil
0x2672:	jmp	0x24a8


0x2659:	movzx	edi, byte ptr [rsp + 0xe]
0x265e:	add	r15, 1
0x2662:	mov	eax, 0
0x2667:	test	r12b, r12b
0x266a:	cmove	edi, eax
0x266d:	mov	byte ptr [rsp + 0xe], dil
0x2672:	jmp	0x24a8


0x263a:	lea	rax, [r15 + 1]
0x263e:	cmp	r13, rax
0x2641:	jbe	0x2649


0x2635:	mov	byte ptr [r14 + r15], 0x27
0x263a:	lea	rax, [r15 + 1]
0x263e:	cmp	r13, rax
0x2641:	jbe	0x2649


0x2e3b:	lea	rax, [r15 + 2]
0x2e3f:	cmp	r13, rax
0x2e42:	jbe	0x2e54


0x2e2e:	mov	eax, ebx
0x2e30:	shr	al, 6
0x2e33:	add	eax, 0x30
0x2e36:	mov	byte ptr [r14 + r15 + 1], al
0x2e3b:	lea	rax, [r15 + 2]
0x2e3f:	cmp	r13, rax
0x2e42:	jbe	0x2e54


0x2e05:	lea	rsi, [r15 + 2]
0x2e09:	cmp	r13, rsi
0x2e0c:	jbe	0x2e14


0x2dff:	mov	byte ptr [r14 + r15 + 1], 0x24
0x2e05:	lea	rsi, [r15 + 2]
0x2e09:	cmp	r13, rsi
0x2e0c:	jbe	0x2e14


0x2f32:	mov	r14, qword ptr [rsp + 0x40]
0x2f37:	mov	r13, qword ptr [rsp + 0x70]
0x2f3c:	mov	rbp, qword ptr [rsp + 0x30]
0x2f41:	mov	dword ptr [rsp + 8], 2
0x2f49:	cmp	byte ptr [rsp + 0xd], 0
0x2f4e:	je	0x2f60


0x2622:	xor	eax, 1
0x2625:	add	rbp, 1
0x2629:	and	eax, r8d
0x262c:	test	al, al
0x262e:	je	0x2650


0x2763:	cmp	dword ptr [rsp + 8], 2
0x2768:	sete	dl
0x276b:	cmp	byte ptr [rsp + 0xf], 0
0x2770:	mov	eax, edx
0x2772:	jne	0x2fc8


0x2e76:	movzx	ebx, byte ptr [rdi + rbp]
0x2e7a:	add	r15, 1
0x2e7e:	test	dl, dl
0x2e80:	jne	0x2dd0


0x2e72:	mov	byte ptr [r14 + r15], bl
0x2e76:	movzx	ebx, byte ptr [rdi + rbp]
0x2e7a:	add	r15, 1
0x2e7e:	test	dl, dl
0x2e80:	jne	0x2dd0


0x2ecf:	add	r15, 2
0x2ed3:	xor	r10d, r10d
0x2ed6:	xor	r8d, r8d
0x2ed9:	jmp	0x2e6d


0x2ec9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2ecf:	add	r15, 2
0x2ed3:	xor	r10d, r10d
0x2ed6:	xor	r8d, r8d
0x2ed9:	jmp	0x2e6d


0x24a8:	cmp	r11, rbp
0x24ab:	setne	r12b
0x24af:	cmp	r11, -1
0x24b3:	jne	0x24c2


0x2649:	add	r15, 2
0x264d:	xor	r8d, r8d
0x2650:	cmp	r15, r13
0x2653:	jae	0x2659


0x2643:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2649:	add	r15, 2
0x264d:	xor	r8d, r8d
0x2650:	cmp	r15, r13
0x2653:	jae	0x2659


0x2e54:	and	ebx, 7
0x2e57:	add	rbp, 1
0x2e5b:	add	r15, 3
0x2e5f:	add	ebx, 0x30
0x2e62:	cmp	rbp, rcx
0x2e65:	jae	0x2650


0x2e44:	mov	eax, ebx
0x2e46:	shr	al, 3
0x2e49:	and	eax, 7
0x2e4c:	add	eax, 0x30
0x2e4f:	mov	byte ptr [r14 + r15 + 2], al
0x2e54:	and	ebx, 7
0x2e57:	add	rbp, 1
0x2e5b:	add	r15, 3
0x2e5f:	add	ebx, 0x30
0x2e62:	cmp	rbp, rcx
0x2e65:	jae	0x2650


0x2e14:	add	r15, 3
0x2e18:	mov	r8d, eax
0x2e1b:	cmp	r13, r15
0x2e1e:	jbe	0x2e25


0x2e0e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2e14:	add	r15, 3
0x2e18:	mov	r8d, eax
0x2e1b:	cmp	r13, r15
0x2e1e:	jbe	0x2e25


0x2778:	mov	eax, r8d
0x277b:	xor	eax, 1
0x277e:	and	al, dl
0x2780:	je	0x27b1


0x2fc8:	mov	rbp, r11
0x2fcb:	jmp	0x2f49


0x2e6b:	mov	esi, edx
0x2e6d:	cmp	r13, r15
0x2e70:	jbe	0x2e76


0x27b1:	cmp	r13, r15
0x27b4:	jbe	0x27bb


0x2782:	cmp	r13, r15
0x2785:	jbe	0x278c


0x27bb:	add	r15, 1
0x27bf:	add	rbp, 1
0x27c3:	jmp	0x2650


0x27b6:	mov	byte ptr [r14 + r15], 0x5c
0x27bb:	add	r15, 1
0x27bf:	add	rbp, 1
0x27c3:	jmp	0x2650


0x278c:	lea	rdx, [r15 + 1]
0x2790:	cmp	r13, rdx
0x2793:	jbe	0x279b


0x2787:	mov	byte ptr [r14 + r15], 0x27
0x278c:	lea	rdx, [r15 + 1]
0x2790:	cmp	r13, rdx
0x2793:	jbe	0x279b


0x279b:	lea	rdx, [r15 + 2]
0x279f:	cmp	r13, rdx
0x27a2:	jbe	0x27aa


0x2795:	mov	byte ptr [r14 + r15 + 1], 0x24
0x279b:	lea	rdx, [r15 + 2]
0x279f:	cmp	r13, rdx
0x27a2:	jbe	0x27aa


0x27aa:	add	r15, 3
0x27ae:	mov	r8d, eax
0x27b1:	cmp	r13, r15
0x27b4:	jbe	0x27bb


0x27a4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x27aa:	add	r15, 3
0x27ae:	mov	r8d, eax
0x27b1:	cmp	r13, r15
0x27b4:	jbe	0x27bb


0x2d55:	mov	rdi, qword ptr [rsp + 0x28]
0x2d5a:	test	eax, eax
0x2d5c:	mov	eax, 0
0x2d61:	cmove	r12d, eax
0x2d65:	add	rbx, r15
0x2d68:	call	0x1560


0x2d6d:	test	eax, eax
0x2d6f:	je	0x2cf3


0x2cf3:	mov	rax, qword ptr [rsp + 0x10]
0x2cf8:	lea	r14, [rbp + rbx]
0x2cfd:	mov	rdx, qword ptr [rsp + 0x30]
0x2d02:	mov	rcx, qword ptr [rsp + 0x28]
0x2d07:	mov	rdi, qword ptr [rsp + 0x38]
0x2d0c:	lea	r13, [rax + r14]
0x2d10:	sub	rdx, r14
0x2d13:	mov	rsi, r13
0x2d16:	call	0x4930


0x251c:	movzx	r8d, byte ptr [rsp + 0x38]
0x2522:	movzx	r10d, byte ptr [rsp + 0x30]
0x2528:	mov	r11, rax
0x252b:	mov	r9, qword ptr [rsp + 0x28]
0x2530:	cmp	rbx, r11
0x2533:	mov	byte ptr [rsp + 0x28], r10b
0x2538:	ja	0x2af0


0x2ca0:	movzx	r8d, byte ptr [rsp + 0x40]
0x2ca6:	movzx	r10d, byte ptr [rsp + 0x38]
0x2cac:	mov	r11, rax
0x2caf:	mov	r9, qword ptr [rsp + 0x30]
0x2cb4:	lea	rax, [rsp + 0x9c]
0x2cbc:	xor	ecx, ecx
0x2cbe:	mov	byte ptr [rsp + 0x7e], bl
0x2cc2:	mov	byte ptr [rsp + 0x7d], r8b
0x2cc7:	mov	rbx, rcx
0x2cca:	mov	qword ptr [rsp + 0x88], r9
0x2cd2:	mov	qword ptr [rsp + 0x38], rax
0x2cd7:	mov	byte ptr [rsp + 0x7f], r10b
0x2cdc:	mov	qword ptr [rsp + 0x80], r15
0x2ce4:	mov	qword ptr [rsp + 0x40], r14
0x2ce9:	mov	qword ptr [rsp + 0x70], r13
0x2cee:	mov	qword ptr [rsp + 0x30], r11
0x2cf3:	mov	rax, qword ptr [rsp + 0x10]
0x2cf8:	lea	r14, [rbp + rbx]
0x2cfd:	mov	rdx, qword ptr [rsp + 0x30]
0x2d02:	mov	rcx, qword ptr [rsp + 0x28]
0x2d07:	mov	rdi, qword ptr [rsp + 0x38]
0x2d0c:	lea	r13, [rax + r14]
0x2d10:	sub	rdx, r14
0x2d13:	mov	rsi, r13
0x2d16:	call	0x4930


0x28d8:	mov	rcx, qword ptr [rax]
0x28db:	movzx	edx, bl
0x28de:	movzx	r10d, byte ptr [rsp + 0x28]
0x28e4:	movzx	r8d, byte ptr [rsp + 0x30]
0x28ea:	mov	r11, qword ptr [rsp + 0x38]
0x28ef:	mov	edi, 1
0x28f4:	movzx	eax, word ptr [rcx + rdx*2]
0x28f8:	and	ax, 0x4000
0x28fc:	setne	r12b
0x2900:	sete	al
0x2903:	and	al, byte ptr [rsp + 0xd]
0x2907:	test	al, al
0x2909:	jne	0x32a1


0x25b0:	xor	r10d, r10d
0x25b3:	cmp	r11, 1
0x25b7:	setne	al
0x25ba:	cmp	r11, -1
0x25be:	jne	0x25cc


0x25c0:	mov	rax, qword ptr [rsp + 0x10]
0x25c5:	cmp	byte ptr [rax + 1], 0
0x25c9:	setne	al
0x25cc:	cmp	dword ptr [rsp + 8], 2
0x25d1:	sete	dl
0x25d4:	test	al, al
0x25d6:	je	0x2828


0x25cc:	cmp	dword ptr [rsp + 8], 2
0x25d1:	sete	dl
0x25d4:	test	al, al
0x25d6:	je	0x2828


0x2828:	test	rbp, rbp
0x282b:	jne	0x25dc


0x25dc:	xor	r12d, r12d
0x25df:	xor	eax, eax
0x25e1:	nop	dword ptr [rax]
0x25e8:	cmp	byte ptr [rsp + 0xd], 1
0x25ed:	jne	0x2702


0x2831:	movzx	eax, byte ptr [rsp + 0xf]
0x2836:	and	al, dl
0x2838:	je	0x25e8


0x283e:	mov	rbp, r11
0x2841:	mov	dword ptr [rsp + 8], 2
0x2849:	jmp	0x2f49


0x2c48:	cmp	byte ptr [rsp + 0xf], 0
0x2c4d:	jne	0x3470


0x2690:	cmp	eax, 5
0x2693:	je	0x2c08


0x2c53:	xor	r12d, r12d
0x2c56:	xor	eax, eax
0x2c58:	mov	ebx, 0x3f
0x2c5d:	jmp	0x2619


0x3470:	mov	rbp, r11
0x3473:	movzx	eax, byte ptr [rsp + 0xf]
0x3478:	jmp	0x2f49


0x2c08:	test	byte ptr [rsp + 0x78], 4
0x2c0d:	je	0x2c30


0x2699:	cmp	eax, 2
0x269c:	mov	ebx, 0x3f
0x26a1:	sete	dl
0x26a4:	xor	r12d, r12d
0x26a7:	xor	eax, eax
0x26a9:	jmp	0x25e8


0x2c30:	xor	edx, edx
0x2c32:	xor	r12d, r12d
0x2c35:	xor	eax, eax
0x2c37:	mov	ebx, 0x3f
0x2c3c:	jmp	0x25e8


0x2c0f:	lea	rcx, [rbp + 2]
0x2c13:	cmp	rcx, r11
0x2c16:	jae	0x2c30


0x2c18:	mov	rax, qword ptr [rsp + 0x10]
0x2c1d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x2c22:	je	0x33b2


0x33b2:	movzx	ebx, byte ptr [rax + rcx]
0x33b6:	cmp	bl, 0x3e
0x33b9:	ja	0x2c30


0x33bf:	movabs	rax, 0x7000a38200000000
0x33c9:	bt	rax, rbx
0x33cd:	jae	0x2c30


0x33d3:	cmp	byte ptr [rsp + 0xf], 0
0x33d8:	jne	0x35c2


0x33de:	cmp	r13, r15
0x33e1:	jbe	0x33e8


0x35c2:	mov	rbp, r11
0x35c5:	jmp	0x2f60


0x33e8:	lea	rax, [r15 + 1]
0x33ec:	cmp	r13, rax
0x33ef:	jbe	0x33f7


0x33e3:	mov	byte ptr [r14 + r15], 0x3f
0x33e8:	lea	rax, [r15 + 1]
0x33ec:	cmp	r13, rax
0x33ef:	jbe	0x33f7


0x33f7:	lea	rax, [r15 + 2]
0x33fb:	cmp	r13, rax
0x33fe:	jbe	0x3406


0x33f1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x33f7:	lea	rax, [r15 + 2]
0x33fb:	cmp	r13, rax
0x33fe:	jbe	0x3406


0x3406:	lea	rax, [r15 + 3]
0x340a:	cmp	r13, rax
0x340d:	jbe	0x3415


0x3400:	mov	byte ptr [r14 + r15 + 2], 0x22
0x3406:	lea	rax, [r15 + 3]
0x340a:	cmp	r13, rax
0x340d:	jbe	0x3415


0x3415:	add	r15, 4
0x3419:	xor	edx, edx
0x341b:	xor	r12d, r12d
0x341e:	xor	eax, eax
0x3420:	mov	rbp, rcx
0x3423:	jmp	0x25e8


0x340f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x3415:	add	r15, 4
0x3419:	xor	edx, edx
0x341b:	xor	r12d, r12d
0x341e:	xor	eax, eax
0x3420:	mov	rbp, rcx
0x3423:	jmp	0x25e8


0x2bc0:	cmp	byte ptr [rsp + 0xf], 0
0x2bc5:	jne	0x3470


0x26be:	mov	byte ptr [rsp + 0x7c], r12b
0x26c3:	xor	edx, edx
0x26c5:	xor	eax, eax
0x26c7:	mov	ebx, 0x27
0x26cc:	jmp	0x25e8


0x2bcb:	test	r13, r13
0x2bce:	je	0x2fd0


0x2fd0:	cmp	r13, r15
0x2fd3:	jbe	0x2fda


0x2bd4:	xor	edx, edx
0x2bd6:	cmp	qword ptr [rsp + 0x50], 0
0x2bdc:	jne	0x2fd0


0x2fda:	lea	rax, [r15 + 1]
0x2fde:	cmp	r13, rax
0x2fe1:	jbe	0x2fe9


0x2fd5:	mov	byte ptr [r14 + r15], 0x27
0x2fda:	lea	rax, [r15 + 1]
0x2fde:	cmp	r13, rax
0x2fe1:	jbe	0x2fe9


0x2be2:	mov	qword ptr [rsp + 0x50], r13
0x2be7:	add	r15, 3
0x2beb:	xor	eax, eax
0x2bed:	mov	byte ptr [rsp + 0x7c], r12b
0x2bf2:	xor	r8d, r8d
0x2bf5:	mov	r13, rdx
0x2bf8:	mov	ebx, 0x27
0x2bfd:	jmp	0x2619


0x2fe9:	lea	rax, [r15 + 2]
0x2fed:	cmp	r13, rax
0x2ff0:	jbe	0x35e2


0x2fe3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x2fe9:	lea	rax, [r15 + 2]
0x2fed:	cmp	r13, rax
0x2ff0:	jbe	0x35e2


0x35e2:	mov	rdx, r13
0x35e5:	mov	r13, qword ptr [rsp + 0x50]
0x35ea:	jmp	0x2be2


0x2ff6:	mov	rdx, r13
0x2ff9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2fff:	mov	r13, qword ptr [rsp + 0x50]
0x3004:	jmp	0x2be2


0x26f4:	cmp	byte ptr [rsp + 0xd], 0
0x26f9:	jne	0x2760


0x26fb:	mov	ebx, edx
0x26fd:	xor	r12d, r12d
0x2700:	xor	eax, eax
0x2702:	cmp	byte ptr [rsp + 0xf], 0
0x2707:	jne	0x25fb


0x2760:	xor	r12d, r12d
0x2763:	cmp	dword ptr [rsp + 8], 2
0x2768:	sete	dl
0x276b:	cmp	byte ptr [rsp + 0xf], 0
0x2770:	mov	eax, edx
0x2772:	jne	0x2fc8


0x2b00:	cmp	byte ptr [rsp + 0xf], 0
0x2b05:	jne	0x3470


0x2733:	cmp	byte ptr [rsp + 0xd], 0
0x2738:	je	0x2950


0x2b0b:	add	rbp, 1
0x2b0f:	mov	eax, r8d
0x2b12:	xor	r12d, r12d
0x2b15:	mov	ebx, 0x5c
0x2b1a:	jmp	0x262c


0x2950:	mov	edx, 0x5c
0x2955:	mov	ebx, 0x5c
0x295a:	jmp	0x26f4


0x273e:	cmp	byte ptr [rsp + 0xf], 0
0x2743:	je	0x2950


0x2749:	cmp	qword ptr [rsp + 0x18], 0
0x274f:	jne	0x2b0b


0x2755:	mov	ebx, 0x5c
0x275a:	nop	word ptr [rax + rax]
0x2760:	xor	r12d, r12d
0x2763:	cmp	dword ptr [rsp + 8], 2
0x2768:	sete	dl
0x276b:	cmp	byte ptr [rsp + 0xf], 0
0x2770:	mov	eax, edx
0x2772:	jne	0x2fc8


0x27db:	xor	edx, edx
0x27dd:	test	byte ptr [rsp + 0x78], 1
0x27e2:	je	0x26fb


0x29a3:	cmp	dword ptr [rsp + 8], 2
0x29a8:	sete	dl
0x29ab:	cmp	byte ptr [rsp + 0xf], 0
0x29b0:	jne	0x354a


0x27e8:	add	rbp, 1
0x27ec:	jmp	0x24a8


0x29b6:	mov	eax, r8d
0x29b9:	mov	rcx, r15
0x29bc:	xor	eax, 1
0x29bf:	and	al, dl
0x29c1:	je	0x29f0


0x354a:	movzx	ebx, byte ptr [rsp + 0xf]
0x354f:	mov	rbp, r11
0x3552:	mov	eax, edx
0x3554:	mov	byte ptr [rsp + 0xd], bl
0x3558:	jmp	0x2f49


0x29f0:	cmp	r13, rcx
0x29f3:	jbe	0x29fa


0x29c3:	cmp	r13, r15
0x29c6:	jbe	0x29cd


0x29fa:	cmp	dword ptr [rsp + 8], 2
0x29ff:	lea	r15, [rcx + 1]
0x2a03:	je	0x3009


0x29f5:	mov	byte ptr [r14 + rcx], 0x5c
0x29fa:	cmp	dword ptr [rsp + 8], 2
0x29ff:	lea	r15, [rcx + 1]
0x2a03:	je	0x3009


0x29cd:	lea	rcx, [r15 + 1]
0x29d1:	cmp	r13, rcx
0x29d4:	jbe	0x29dc


0x29c8:	mov	byte ptr [r14 + r15], 0x27
0x29cd:	lea	rcx, [r15 + 1]
0x29d1:	cmp	r13, rcx
0x29d4:	jbe	0x29dc


0x3009:	mov	eax, r12d
0x300c:	mov	ebx, 0x30
0x3011:	xor	r12d, r12d
0x3014:	jmp	0x2619


0x2a09:	lea	rax, [rbp + 1]
0x2a0d:	cmp	rax, r11
0x2a10:	jae	0x2a2b


0x29dc:	lea	rcx, [r15 + 2]
0x29e0:	cmp	r13, rcx
0x29e3:	ja	0x3019


0x29d6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x29dc:	lea	rcx, [r15 + 2]
0x29e0:	cmp	r13, rcx
0x29e3:	ja	0x3019


0x2a12:	mov	rax, qword ptr [rsp + 0x10]
0x2a17:	movzx	eax, byte ptr [rax + rbp + 1]
0x2a1c:	mov	byte ptr [rsp + 0x28], al
0x2a20:	sub	eax, 0x30
0x2a23:	cmp	al, 9
0x2a25:	jbe	0x3259


0x2a2b:	mov	eax, r12d
0x2a2e:	mov	ebx, 0x30
0x2a33:	xor	r12d, r12d
0x2a36:	jmp	0x25e8


0x29e9:	lea	rcx, [r15 + 3]
0x29ed:	mov	r8d, eax
0x29f0:	cmp	r13, rcx
0x29f3:	jbe	0x29fa


0x3019:	mov	byte ptr [r14 + r15 + 2], 0x27
0x301f:	jmp	0x29e9


0x3259:	cmp	r13, r15
0x325c:	jbe	0x3263


0x3263:	lea	rax, [rcx + 2]
0x3267:	cmp	r13, rax
0x326a:	jbe	0x3272


0x325e:	mov	byte ptr [r14 + r15], 0x30
0x3263:	lea	rax, [rcx + 2]
0x3267:	cmp	r13, rax
0x326a:	jbe	0x3272


0x3272:	mov	eax, r12d
0x3275:	lea	r15, [rcx + 3]
0x3279:	xor	r12d, r12d
0x327c:	mov	ebx, 0x30
0x3281:	jmp	0x25e8


0x326c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x3272:	mov	eax, r12d
0x3275:	lea	r15, [rcx + 3]
0x3279:	xor	r12d, r12d
0x327c:	mov	ebx, 0x30
0x3281:	jmp	0x25e8


0x26e2:	cmp	dword ptr [rsp + 8], 2
0x26e7:	sete	al
0x26ea:	and	al, byte ptr [rsp + 0xf]
0x26ee:	jne	0x283e


0x2aa0:	mov	edx, 0xd
0x2aa5:	xor	r10d, r10d
0x2aa8:	mov	ebx, 0x72
0x2aad:	jmp	0x26e2


0x3024:	test	ebx, ebx
0x3026:	jne	0x2453


0x302c:	mov	byte ptr [rsp + 0xd], 1
0x3031:	test	r13, r13
0x3034:	jne	0x35ca


0x303a:	lea	rax, [rip + 0x2654]
0x3041:	mov	qword ptr [rsp + 0x50], 0
0x304a:	mov	byte ptr [rsp + 0xe], 1
0x304f:	mov	byte ptr [rsp + 0x7c], 0
0x3054:	xor	r12d, r12d
0x3057:	mov	byte ptr [rsp + 0xf], 0
0x305c:	mov	qword ptr [rsp + 0x18], 1
0x3065:	mov	qword ptr [rsp + 0x48], rax
0x306a:	mov	r15d, 1
0x3070:	mov	dword ptr [rsp + 8], 2
0x3078:	jmp	0x2493


0x35ca:	mov	byte ptr [rsp + 0xe], 1
0x35cf:	xor	eax, eax
0x35d1:	xor	r12d, r12d
0x35d4:	mov	qword ptr [rsp + 0x50], 0
0x35dd:	jmp	0x2b84


0x2b84:	lea	rbx, [rip + 0x2b0a]
0x2b8b:	mov	byte ptr [r14], 0x27
0x2b8f:	mov	dword ptr [rsp + 8], 2
0x2b97:	mov	r15d, 1
0x2b9d:	mov	qword ptr [rsp + 0x18], 1
0x2ba6:	mov	byte ptr [rsp + 0xf], 0
0x2bab:	mov	qword ptr [rsp + 0x48], rbx
0x2bb0:	mov	byte ptr [rsp + 0x7c], al
0x2bb4:	jmp	0x2493


0x3088:	test	r13, r13
0x308b:	je	0x32b6


0x347d:	lea	rax, [rip + 0x220f]
0x3484:	mov	byte ptr [rsp + 0xe], 1
0x3489:	mov	byte ptr [rsp + 0x7c], 0
0x348e:	xor	r12d, r12d
0x3491:	mov	qword ptr [rsp + 0x50], 0
0x349a:	mov	byte ptr [rsp + 0xf], 1
0x349f:	mov	byte ptr [rsp + 0xd], 1
0x34a4:	mov	qword ptr [rsp + 0x18], 1
0x34ad:	xor	r15d, r15d
0x34b0:	mov	qword ptr [rsp + 0x48], rax
0x34b5:	jmp	0x2493


0x32b6:	mov	qword ptr [rsp + 0x50], 0
0x32bf:	mov	byte ptr [rsp + 0xe], 1
0x32c4:	xor	r12d, r12d
0x32c7:	mov	byte ptr [rsp + 0x7c], 0
0x32cc:	jmp	0x30ab


0x3091:	mov	byte ptr [r14], 0x22
0x3095:	mov	byte ptr [rsp + 0xe], 1
0x309a:	xor	r12d, r12d
0x309d:	mov	byte ptr [rsp + 0x7c], 0
0x30a2:	mov	qword ptr [rsp + 0x50], 0
0x30ab:	lea	rax, [rip + 0x25e1]
0x30b2:	mov	byte ptr [rsp + 0xf], 0
0x30b7:	mov	byte ptr [rsp + 0xd], 1
0x30bc:	mov	qword ptr [rsp + 0x18], 1
0x30c5:	mov	r15d, 1
0x30cb:	mov	qword ptr [rsp + 0x48], rax
0x30d0:	jmp	0x2493


0x30ab:	lea	rax, [rip + 0x25e1]
0x30b2:	mov	byte ptr [rsp + 0xf], 0
0x30b7:	mov	byte ptr [rsp + 0xd], 1
0x30bc:	mov	qword ptr [rsp + 0x18], 1
0x30c5:	mov	r15d, 1
0x30cb:	mov	qword ptr [rsp + 0x48], rax
0x30d0:	jmp	0x2493


0x30d5:	lea	rax, [rip + 0x25b7]
0x30dc:	mov	byte ptr [rsp + 0xe], 1
0x30e1:	mov	byte ptr [rsp + 0x7c], 0
0x30e6:	xor	r12d, r12d
0x30e9:	mov	qword ptr [rsp + 0x50], 0
0x30f2:	mov	byte ptr [rsp + 0xf], 1
0x30f7:	mov	byte ptr [rsp + 0xd], 1
0x30fc:	mov	qword ptr [rsp + 0x18], 1
0x3105:	xor	r15d, r15d
0x3108:	mov	qword ptr [rsp + 0x48], rax
0x310d:	mov	dword ptr [rsp + 8], 5
0x3115:	jmp	0x2493


0x311a:	mov	byte ptr [rsp + 0xe], 1
0x311f:	mov	byte ptr [rsp + 0x7c], 0
0x3124:	xor	r12d, r12d
0x3127:	mov	qword ptr [rsp + 0x50], 0
0x3130:	mov	byte ptr [rsp + 0xf], 0
0x3135:	xor	r15d, r15d
0x3138:	mov	byte ptr [rsp + 0xd], 1
0x313d:	mov	qword ptr [rsp + 0x18], 0
0x3146:	mov	qword ptr [rsp + 0x48], 0
0x314f:	jmp	0x2493


0x3154:	cmp	dword ptr [rsp + 8], 0xa
0x3159:	je	0x31b1


0x31b1:	xor	r15d, r15d
0x31b4:	test	ebx, ebx
0x31b6:	je	0x337d


0x315b:	lea	rsi, [rip + 0x2535]
0x3162:	xor	edi, edi
0x3164:	mov	edx, 5
0x3169:	call	0x1380


0x337d:	mov	rdx, qword ptr [rsp + 0x68]
0x3382:	movzx	eax, byte ptr [rdx]
0x3385:	test	al, al
0x3387:	je	0x31bc


0x31bc:	test	ebx, ebx
0x31be:	mov	rbx, qword ptr [rsp + 0x60]
0x31c3:	setne	byte ptr [rsp + 0xf]
0x31c8:	xor	r12d, r12d
0x31cb:	mov	rdi, rbx
0x31ce:	call	0x13a0


0x3399:	add	r15, 1
0x339d:	movzx	eax, byte ptr [rdx + r15]
0x33a2:	test	al, al
0x33a4:	jne	0x3390


0x3395:	mov	byte ptr [r14 + r15], al
0x3399:	add	r15, 1
0x339d:	movzx	eax, byte ptr [rdx + r15]
0x33a2:	test	al, al
0x33a4:	jne	0x3390


0x33a6:	jmp	0x31bc


0x3390:	cmp	r13, r15
0x3393:	jbe	0x3399


0x31d3:	mov	qword ptr [rsp + 0x48], rbx
0x31d8:	mov	qword ptr [rsp + 0x18], rax
0x31dd:	mov	byte ptr [rsp + 0xe], 1
0x31e2:	mov	byte ptr [rsp + 0x7c], 0
0x31e7:	mov	qword ptr [rsp + 0x50], 0
0x31f0:	mov	byte ptr [rsp + 0xd], 1
0x31f5:	jmp	0x2493


0x316e:	mov	rcx, rax
0x3171:	mov	qword ptr [rsp + 0x68], rax
0x3176:	lea	rax, [rip + 0x251a]
0x317d:	cmp	rcx, rax
0x3180:	je	0x351e


0x351e:	mov	esi, dword ptr [rsp + 8]
0x3522:	mov	rdi, rcx
0x3525:	call	0x22d0


0x3186:	lea	rsi, [rip + 0x2508]
0x318d:	xor	edi, edi
0x318f:	mov	edx, 5
0x3194:	call	0x1380


0x3199:	mov	rcx, rax
0x319c:	mov	qword ptr [rsp + 0x60], rax
0x31a1:	lea	rax, [rip + 0x24ed]
0x31a8:	cmp	rcx, rax
0x31ab:	je	0x3534


0x3534:	mov	esi, dword ptr [rsp + 8]
0x3538:	mov	rdi, rcx
0x353b:	call	0x22d0


0x3540:	mov	qword ptr [rsp + 0x60], rax
0x3545:	jmp	0x31b1


0x352a:	mov	qword ptr [rsp + 0x68], rax
0x352f:	jmp	0x3186


0x31fa:	mov	byte ptr [rsp + 0xe], 1
0x31ff:	mov	byte ptr [rsp + 0x7c], 0
0x3204:	xor	r12d, r12d
0x3207:	mov	qword ptr [rsp + 0x50], 0
0x3210:	mov	byte ptr [rsp + 0xf], 0
0x3215:	xor	r15d, r15d
0x3218:	mov	byte ptr [rsp + 0xd], 0
0x321d:	mov	qword ptr [rsp + 0x18], 0
0x3226:	mov	qword ptr [rsp + 0x48], 0
0x322f:	jmp	0x2493


0x3234:	mov	byte ptr [rsp + 0xe], 1
0x3239:	mov	byte ptr [rsp + 0x7c], 0
0x323e:	xor	r12d, r12d
0x3241:	mov	qword ptr [rsp + 0x50], 0
0x324a:	mov	byte ptr [rsp + 0xf], 1
0x324f:	mov	byte ptr [rsp + 0xd], 1
0x3254:	jmp	0x2473


0x2473:	lea	rax, [rip + 0x321b]
0x247a:	mov	qword ptr [rsp + 0x18], 1
0x2483:	xor	r15d, r15d
0x2486:	mov	dword ptr [rsp + 8], 2
0x248e:	mov	qword ptr [rsp + 0x48], rax
0x2493:	xor	r11d, r11d
0x2496:	mov	rax, rbp
0x2499:	mov	r8d, r12d
0x249c:	mov	rbp, r11
0x249f:	mov	r11, rax
0x24a2:	nop	word ptr [rax + rax]
0x24a8:	cmp	r11, rbp
0x24ab:	setne	r12b
0x24af:	cmp	r11, -1
0x24b3:	jne	0x24c2


0x3428:	test	ebx, ebx
0x342a:	je	0x35b8


0x35b8:	mov	byte ptr [rsp + 0xd], 0
0x35bd:	jmp	0x3031


0x3430:	lea	rax, [rip + 0x225e]
0x3437:	mov	byte ptr [rsp + 0xe], 1
0x343c:	mov	byte ptr [rsp + 0x7c], 0
0x3441:	xor	r12d, r12d
0x3444:	mov	qword ptr [rsp + 0x50], 0
0x344d:	mov	byte ptr [rsp + 0xf], 1
0x3452:	mov	byte ptr [rsp + 0xd], 0
0x3457:	mov	qword ptr [rsp + 0x18], 1
0x3460:	xor	r15d, r15d
0x3463:	mov	qword ptr [rsp + 0x48], rax
0x3468:	jmp	0x2493


0x3031:	test	r13, r13
0x3034:	jne	0x35ca


0x35f4:	nop	
0x35f6:	nop	word ptr cs:[rax + rax]


0x37ab:	nop	dword ptr [rax + rax]


0x37e6:	nop	word ptr cs:[rax + rax]


0x3801:	nop	dword ptr [rax + rax]
0x3806:	nop	word ptr cs:[rax + rax]


0x3821:	nop	dword ptr [rax + rax]
0x3826:	nop	word ptr cs:[rax + rax]


0x3865:	nop	
0x3866:	nop	word ptr cs:[rax + rax]


0x3885:	nop	
0x3886:	nop	word ptr cs:[rax + rax]


0x3934:	nop	
0x3936:	nop	word ptr cs:[rax + rax]


0x3a23:	nop	dword ptr [rax]
0x3a26:	nop	word ptr cs:[rax + rax]


0x3a3a:	nop	word ptr [rax + rax]


0x3ad3:	nop	dword ptr [rax]
0x3ad6:	nop	word ptr cs:[rax + rax]


0x3af3:	nop	dword ptr [rax]
0x3af6:	nop	word ptr cs:[rax + rax]


0x3b0c:	nop	dword ptr [rax]


0x3b28:	nop	dword ptr [rax + rax]


0x3b44:	nop	
0x3b46:	nop	word ptr cs:[rax + rax]


0x3bde:	nop	


0x3c6a:	nop	word ptr [rax + rax]


0x3c7c:	nop	dword ptr [rax]


0x3c8f:	nop	


0x3d28:	nop	dword ptr [rax + rax]


0x3d51:	nop	dword ptr [rax + rax]
0x3d56:	nop	word ptr cs:[rax + rax]


0x3d6a:	nop	word ptr [rax + rax]


0x3dfe:	nop	


0x3e91:	nop	dword ptr [rax + rax]
0x3e96:	nop	word ptr cs:[rax + rax]


0x3eac:	nop	dword ptr [rax]


0x3ec7:	nop	word ptr [rax + rax]


0x3ee3:	nop	dword ptr [rax]
0x3ee6:	nop	word ptr cs:[rax + rax]


0x3efc:	nop	dword ptr [rax]


0x3f14:	nop	
0x3f16:	nop	word ptr cs:[rax + rax]


0x3f33:	nop	dword ptr [rax]
0x3f36:	nop	word ptr cs:[rax + rax]


0x3f58:	nop	dword ptr [rax + rax]


0x4377:	nop	word ptr [rax + rax]


0x4418:	nop	dword ptr [rax + rax]


0x44f5:	nop	
0x44f6:	nop	word ptr cs:[rax + rax]


0x459a:	nop	word ptr [rax + rax]


0x45c4:	nop	
0x45c6:	nop	word ptr cs:[rax + rax]


0x45d2:	nop	dword ptr [rax]
0x45d6:	nop	word ptr cs:[rax + rax]


0x4616:	nop	word ptr cs:[rax + rax]


0x4644:	nop	
0x4646:	nop	word ptr cs:[rax + rax]


0x46d2:	nop	dword ptr [rax]
0x46d6:	nop	word ptr cs:[rax + rax]


0x472a:	nop	word ptr [rax + rax]


0x4747:	nop	word ptr [rax + rax]


0x477e:	nop	


0x47a8:	nop	dword ptr [rax + rax]


0x47c3:	nop	word ptr cs:[rax + rax]
0x47cd:	nop	dword ptr [rax]


0x4805:	nop	word ptr cs:[rax + rax]
0x480f:	nop	


0x488b:	nop	dword ptr [rax + rax]


0x4927:	nop	word ptr [rax + rax]


0x49b3:	nop	word ptr cs:[rax + rax]
0x49bd:	nop	dword ptr [rax]


0x4a3d:	nop	dword ptr [rax]


0x4adc:	nop	dword ptr [rax]


0x4b45:	nop	
0x4b46:	nop	word ptr cs:[rax + rax]


0x4b52:	nop	word ptr cs:[rax + rax]
0x4b5c:	nop	dword ptr [rax]


0x2680:	xor	r10d, r10d
0x2683:	mov	eax, dword ptr [rsp + 8]
0x2687:	cmp	eax, 2
0x268a:	je	0x2c48


0x26b0:	xor	r10d, r10d
0x26b3:	cmp	dword ptr [rsp + 8], 2
0x26b8:	je	0x2bc0


0x26d8:	mov	edx, 9
0x26dd:	mov	ebx, 0x74
0x26e2:	cmp	dword ptr [rsp + 8], 2
0x26e7:	sete	al
0x26ea:	and	al, byte ptr [rsp + 0xf]
0x26ee:	jne	0x283e


0x2718:	mov	edx, 8
0x271d:	mov	ebx, 0x62
0x2722:	jmp	0x26f4


0x2728:	cmp	dword ptr [rsp + 8], 2
0x272d:	je	0x2b00


0x27d0:	cmp	byte ptr [rsp + 0xd], 0
0x27d5:	jne	0x29a3


0x27f8:	cmp	dword ptr [rsp + 8], 2
0x27fd:	sete	dl
0x2800:	xor	eax, eax
0x2802:	jmp	0x25e8


0x2810:	mov	edx, 7
0x2815:	mov	ebx, 0x61
0x281a:	jmp	0x26f4


0x2820:	cmp	dword ptr [rsp + 8], 2
0x2825:	sete	dl
0x2828:	test	rbp, rbp
0x282b:	jne	0x25dc


0x2850:	cmp	dword ptr [rsp + 8], 2
0x2855:	sete	dl
0x2858:	xor	r12d, r12d
0x285b:	jmp	0x2831


0x2860:	cmp	dword ptr [rsp + 8], 2
0x2865:	mov	ebx, 0x20
0x286a:	sete	dl
0x286d:	jmp	0x2831


0x2870:	mov	edx, 0xd
0x2875:	mov	ebx, 0x72
0x287a:	jmp	0x26e2


0x2880:	mov	edx, 0xc
0x2885:	mov	ebx, 0x66
0x288a:	jmp	0x26f4


0x2890:	mov	edx, 0xb
0x2895:	mov	ebx, 0x76
0x289a:	jmp	0x26f4


0x28a0:	mov	edx, 0xa
0x28a5:	mov	ebx, 0x6e
0x28aa:	jmp	0x26e2


0x2940:	xor	r10d, r10d
0x2943:	cmp	byte ptr [rsp + 0xd], 0
0x2948:	jne	0x273e


0x2960:	mov	edx, 0xc
0x2965:	xor	r10d, r10d
0x2968:	mov	ebx, 0x66
0x296d:	jmp	0x26f4


0x2978:	mov	edx, 0xa
0x297d:	xor	r10d, r10d
0x2980:	mov	ebx, 0x6e
0x2985:	jmp	0x26e2


0x2990:	mov	ebx, 0x61
0x2995:	jmp	0x2760


0x29a0:	xor	r10d, r10d
0x29a3:	cmp	dword ptr [rsp + 8], 2
0x29a8:	sete	dl
0x29ab:	cmp	byte ptr [rsp + 0xf], 0
0x29b0:	jne	0x354a


0x2a40:	cmp	dword ptr [rsp + 8], 2
0x2a45:	mov	r12d, r10d
0x2a48:	sete	dl
0x2a4b:	xor	r10d, r10d
0x2a4e:	xor	eax, eax
0x2a50:	jmp	0x25e8


0x2a58:	cmp	dword ptr [rsp + 8], 2
0x2a5d:	sete	dl
0x2a60:	xor	r10d, r10d
0x2a63:	jmp	0x2828


0x2a70:	cmp	dword ptr [rsp + 8], 2
0x2a75:	sete	dl
0x2a78:	xor	r10d, r10d
0x2a7b:	xor	r12d, r12d
0x2a7e:	jmp	0x2831


0x2a88:	cmp	dword ptr [rsp + 8], 2
0x2a8d:	mov	r12d, r10d
0x2a90:	mov	ebx, 0x20
0x2a95:	sete	dl
0x2a98:	xor	r10d, r10d
0x2a9b:	jmp	0x2831


0x2ab8:	mov	ebx, 0x76
0x2abd:	jmp	0x2760


0x2ac8:	mov	edx, 9
0x2acd:	xor	r10d, r10d
0x2ad0:	mov	ebx, 0x74
0x2ad5:	jmp	0x26e2


0x2ae0:	mov	ebx, 0x62
0x2ae5:	jmp	0x2760


0x3080:	test	ebx, ebx
0x3082:	jne	0x347d


0x1756:	nop	word ptr cs:[rax + rax]


0x17a7:	nop	word ptr [rax + rax]


0x17f1:	nop	dword ptr [rax]


0x1885:	nop	dword ptr [rax]


0x1f4b:	nop	dword ptr [rax + rax]


0x205b:	nop	dword ptr [rax + rax]


0x20d7:	nop	word ptr [rax + rax]


0x21e7:	nop	word ptr [rax + rax]


0x221e:	nop	


0x230c:	nop	dword ptr [rax]


0x235d:	nop	dword ptr [rax]


0x2588:	nop	dword ptr [rax + rax]


0x2677:	nop	word ptr [rax + rax]


0x26ae:	nop	


0x26d1:	nop	dword ptr [rax]


0x2712:	nop	word ptr [rax + rax]


0x2724:	nop	dword ptr [rax]


0x27c8:	nop	dword ptr [rax + rax]


0x27f1:	nop	dword ptr [rax]


0x2807:	nop	word ptr [rax + rax]


0x281f:	nop	


0x284e:	nop	


0x285d:	nop	dword ptr [rax]


0x286f:	nop	


0x287f:	nop	


0x288f:	nop	


0x289f:	nop	


0x28af:	nop	


0x291c:	nop	dword ptr [rax]


0x293c:	nop	dword ptr [rax]


0x294e:	nop	


0x295f:	nop	


0x2972:	nop	word ptr [rax + rax]


0x298a:	nop	word ptr [rax + rax]


0x299a:	nop	word ptr [rax + rax]


0x2a3b:	nop	dword ptr [rax + rax]


0x2a55:	nop	dword ptr [rax]


0x2a68:	nop	dword ptr [rax + rax]


0x2a83:	nop	dword ptr [rax + rax]


0x2ab2:	nop	word ptr [rax + rax]


0x2ac2:	nop	word ptr [rax + rax]


0x2ada:	nop	word ptr [rax + rax]


0x2aea:	nop	word ptr [rax + rax]


0x2af8:	nop	dword ptr [rax + rax]


0x2b1f:	nop	


0x2bb9:	nop	dword ptr [rax]


0x2c02:	nop	word ptr [rax + rax]


0x2c28:	nop	dword ptr [rax + rax]


0x2c41:	nop	dword ptr [rax]


0x2c62:	nop	word ptr [rax + rax]


0x2dc8:	nop	dword ptr [rax + rax]


0x2edb:	nop	dword ptr [rax + rax]


0x2efe:	nop	


0x2fc5:	nop	dword ptr [rax]


0x307d:	nop	dword ptr [rax]


0x3286:	nop	word ptr cs:[rax + rax]


0x3319:	nop	dword ptr [rax]


0x338d:	nop	dword ptr [rax]


0x346d:	nop	dword ptr [rax]


0x377b:	nop	dword ptr [rax + rax]


0x4006:	nop	word ptr cs:[rax + rax]


0x4095:	nop	dword ptr [rax]


0x40b6:	nop	word ptr cs:[rax + rax]


0x4115:	nop	dword ptr [rax]


0x4151:	nop	dword ptr [rax]


0x4198:	nop	dword ptr [rax + rax]


0x41e7:	nop	word ptr [rax + rax]


0x4244:	nop	dword ptr [rax]


0x4272:	nop	word ptr [rax + rax]


0x4326:	nop	word ptr cs:[rax + rax]


0x4389:	nop	dword ptr [rax]


0x4602:	nop	word ptr [rax + rax]


0x4689:	nop	dword ptr [rax]


0x46b4:	nop	dword ptr [rax]


0x470d:	nop	dword ptr [rax]


0x4855:	nop	dword ptr [rax]


0x48b3:	nop	dword ptr [rax + rax]


0x48df:	nop	


0x49f4:	nop	dword ptr [rax]


0x4a11:	nop	dword ptr [rax]


0x4a22:	nop	word ptr [rax + rax]


0x4a7a:	nop	word ptr [rax + rax]


0x4ac6:	nop	word ptr cs:[rax + rax]


