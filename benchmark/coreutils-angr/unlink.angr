0x46e0:	sub	rsp, 8
0x46e4:	add	rsp, 8
0x46e8:	ret	


0x46d0:	mov	rdx, qword ptr [rip + 0x202931]
0x46d7:	xor	esi, esi
0x46d9:	jmp	0x1400


0x46c0:	ret	


0x4650:	push	r15
0x4652:	push	r14
0x4654:	mov	r15, rdx
0x4657:	push	r13
0x4659:	push	r12
0x465b:	lea	r12, [rip + 0x20254e]
0x4662:	push	rbp
0x4663:	lea	rbp, [rip + 0x20254e]
0x466a:	push	rbx
0x466b:	mov	r13d, edi
0x466e:	mov	r14, rsi
0x4671:	sub	rbp, r12
0x4674:	sub	rsp, 8
0x4678:	sar	rbp, 3
0x467c:	call	0x11c0


0x45f0:	mov	rax, qword ptr [rdi + 8]
0x45f4:	cmp	qword ptr [rdi + 0x10], rax
0x45f8:	je	0x4600


0x45b0:	test	rdi, rdi
0x45b3:	push	rbx
0x45b4:	mov	rbx, rdi
0x45b7:	je	0x45ca


0x4530:	push	r12
0x4532:	push	rbp
0x4533:	push	rbx
0x4534:	mov	rbx, rdi
0x4537:	call	0x1360


0x44f0:	sub	rsp, 8
0x44f4:	mov	edi, 0xe
0x44f9:	call	0x1390


0x4490:	sub	rsp, 8
0x4494:	xor	esi, esi
0x4496:	call	0x13c0


0x4410:	push	r12
0x4412:	push	rbp
0x4413:	mov	rbp, rdi
0x4416:	push	rbx
0x4417:	call	0x1250


0x4380:	push	r13
0x4382:	push	r12
0x4384:	mov	r13, rsi
0x4387:	push	rbp
0x4388:	push	rbx
0x4389:	mov	rbx, rdi
0x438c:	mov	r12, rdx
0x438f:	sub	rsp, 0x18
0x4393:	mov	rax, qword ptr fs:[0x28]
0x439c:	mov	qword ptr [rsp + 8], rax
0x43a1:	xor	eax, eax
0x43a3:	lea	rax, [rsp + 4]
0x43a8:	test	rdi, rdi
0x43ab:	cmove	rbx, rax
0x43af:	mov	rdi, rbx
0x43b2:	call	0x12e0


0x4340:	lea	rsi, [rip + 0xf08]
0x4347:	sub	rsp, 8
0x434b:	mov	edx, 5
0x4350:	xor	edi, edi
0x4352:	call	0x1290


0x4320:	push	rbx
0x4321:	mov	rbx, rdi
0x4324:	call	0x12b0


0x42f0:	push	rbp
0x42f1:	push	rbx
0x42f2:	mov	rbp, rdi
0x42f5:	mov	rdi, rsi
0x42f8:	mov	rbx, rsi
0x42fb:	sub	rsp, 8
0x42ff:	call	0x40f0


0x42c0:	mov	rax, rdi
0x42c3:	sub	rsp, 8
0x42c7:	mul	rsi
0x42ca:	seto	dl
0x42cd:	test	rax, rax
0x42d0:	js	0x42e9


0x42a0:	push	rbx
0x42a1:	mov	rbx, rdi
0x42a4:	call	0x40f0


0x4250:	test	rdi, rdi
0x4253:	mov	rax, qword ptr [rsi]
0x4256:	je	0x4280


0x41c0:	test	rdi, rdi
0x41c3:	mov	r9, rdx
0x41c6:	mov	rcx, qword ptr [rsi]
0x41c9:	je	0x4200


0x4190:	mov	rax, rsi
0x4193:	mul	rdx
0x4196:	mov	rsi, rax
0x4199:	seto	al
0x419c:	test	rsi, rsi
0x419f:	js	0x41ab


0x4150:	test	rsi, rsi
0x4153:	push	rbx
0x4154:	mov	rbx, rsi
0x4157:	jne	0x415e


0x4140:	jmp	0x40f0


0x4110:	mov	rax, rdi
0x4113:	mul	rsi
0x4116:	mov	rdi, rax
0x4119:	seto	al
0x411c:	test	rdi, rdi
0x411f:	js	0x412b


0x40f0:	push	rbx
0x40f1:	mov	rbx, rdi
0x40f4:	call	0x1370


0x4070:	push	rbx
0x4071:	lea	rsi, [rip + 0xeca]
0x4078:	mov	edx, 5
0x407d:	xor	edi, edi
0x407f:	call	0x1290


0x3f90:	push	rbp
0x3f91:	push	rbx
0x3f92:	mov	r10d, 0x20
0x3f98:	xor	r11d, r11d
0x3f9b:	sub	rsp, 0xb8
0x3fa2:	mov	rax, qword ptr fs:[0x28]
0x3fab:	mov	qword ptr [rsp + 0x78], rax
0x3fb0:	xor	eax, eax
0x3fb2:	lea	rax, [rsp + 0xd0]
0x3fba:	mov	qword ptr [rsp + 0xa0], r8
0x3fc2:	lea	rbx, [rsp + 0xd0]
0x3fca:	lea	r8, [rsp + 0x20]
0x3fcf:	mov	qword ptr [rsp + 0xa8], r9
0x3fd7:	mov	dword ptr [rsp + 8], 0x20
0x3fdf:	mov	qword ptr [rsp + 0x10], rax
0x3fe4:	lea	rax, [rsp + 0x80]
0x3fec:	xor	r9d, r9d
0x3fef:	mov	qword ptr [rsp + 0x18], rax
0x3ff4:	mov	rbp, rax
0x3ff7:	nop	word ptr [rax + rax]
0x4000:	cmp	r10d, 0x2f
0x4004:	ja	0x405c


0x3f10:	sub	rsp, 0x68
0x3f14:	mov	r10, r8
0x3f17:	xor	r9d, r9d
0x3f1a:	mov	rax, qword ptr fs:[0x28]
0x3f23:	mov	qword ptr [rsp + 0x58], rax
0x3f28:	xor	eax, eax
0x3f2a:	mov	r8, rsp
0x3f2d:	nop	dword ptr [rax]
0x3f30:	mov	eax, dword ptr [r10]
0x3f33:	cmp	eax, 0x2f
0x3f36:	ja	0x3f7a


0x3ef0:	xor	r9d, r9d
0x3ef3:	cmp	qword ptr [r8], 0
0x3ef7:	je	0x3f0b


0x3ad0:	push	r15
0x3ad2:	push	r14
0x3ad4:	push	r13
0x3ad6:	push	r12
0x3ad8:	mov	r12, r9
0x3adb:	push	rbp
0x3adc:	push	rbx
0x3add:	mov	rbp, rdi
0x3ae0:	mov	rbx, r8
0x3ae3:	sub	rsp, 0x28
0x3ae7:	test	rsi, rsi
0x3aea:	je	0x3c08


0x3ab0:	lea	rcx, [rip + 0x203569]
0x3ab7:	mov	rsi, rdi
0x3aba:	mov	rdx, -1
0x3ac1:	xor	edi, edi
0x3ac3:	jmp	0x3170


0x3a90:	lea	rcx, [rip + 0x203589]
0x3a97:	mov	rdx, -1
0x3a9e:	jmp	0x3170


0x3a70:	lea	rcx, [rip + 0x2035a9]
0x3a77:	mov	rdx, rsi
0x3a7a:	mov	rsi, rdi
0x3a7d:	xor	edi, edi
0x3a7f:	jmp	0x3170


0x3a60:	lea	rcx, [rip + 0x2035b9]
0x3a67:	jmp	0x3170


0x3a40:	mov	r8, rcx
0x3a43:	mov	rcx, rdx
0x3a46:	mov	rdx, rsi
0x3a49:	mov	rsi, rdi
0x3a4c:	xor	edi, edi
0x3a4e:	jmp	0x3970


0x3a20:	mov	rcx, rdx
0x3a23:	mov	r8, -1
0x3a2a:	mov	rdx, rsi
0x3a2d:	mov	rsi, rdi
0x3a30:	xor	edi, edi
0x3a32:	jmp	0x3970


0x3a10:	mov	r8, -1
0x3a17:	jmp	0x3970


0x3970:	sub	rsp, 0x48
0x3974:	mov	r9, rcx
0x3977:	mov	rcx, qword ptr [rip + 0x2038b2]
0x397e:	movdqa	xmm0, xmmword ptr [rip + 0x20387a]
0x3986:	mov	rax, qword ptr fs:[0x28]
0x398f:	mov	qword ptr [rsp + 0x38], rax
0x3994:	xor	eax, eax
0x3996:	movaps	xmmword ptr [rsp], xmm0
0x399a:	test	rsi, rsi
0x399d:	mov	qword ptr [rsp + 0x30], rcx
0x39a2:	mov	dword ptr [rsp], 0xa
0x39a9:	movdqa	xmm0, xmmword ptr [rip + 0x20385f]
0x39b1:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x39b6:	movdqa	xmm0, xmmword ptr [rip + 0x203862]
0x39be:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x39c3:	je	0x39f7


0x38e0:	sub	rsp, 0x48
0x38e4:	mov	rax, rdx
0x38e7:	mov	rdx, qword ptr fs:[0x28]
0x38f0:	mov	qword ptr [rsp + 0x38], rdx
0x38f5:	xor	edx, edx
0x38f7:	cmp	esi, 0xa
0x38fa:	je	0x3964


0x38d0:	mov	edx, 0x3a
0x38d5:	jmp	0x3800


0x38b0:	mov	edx, 0x3a
0x38b5:	mov	rsi, -1
0x38bc:	jmp	0x3800


0x38a0:	movsx	edx, sil
0x38a4:	mov	rsi, -1
0x38ab:	jmp	0x3800


0x3800:	sub	rsp, 0x48
0x3804:	mov	ecx, edx
0x3806:	mov	rax, qword ptr fs:[0x28]
0x380f:	mov	qword ptr [rsp + 0x38], rax
0x3814:	xor	eax, eax
0x3816:	mov	rax, qword ptr [rip + 0x203a13]
0x381d:	mov	r8, rsp
0x3820:	and	ecx, 0x1f
0x3823:	movdqa	xmm0, xmmword ptr [rip + 0x2039d5]
0x382b:	mov	qword ptr [rsp + 0x30], rax
0x3830:	mov	eax, edx
0x3832:	movaps	xmmword ptr [rsp], xmm0
0x3836:	shr	al, 5
0x3839:	movzx	eax, al
0x383c:	lea	r9, [r8 + rax*4 + 8]
0x3841:	movdqa	xmm0, xmmword ptr [rip + 0x2039c7]
0x3849:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x384e:	movdqa	xmm0, xmmword ptr [rip + 0x2039ca]
0x3856:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x385b:	mov	edx, dword ptr [r9]
0x385e:	mov	eax, edx
0x3860:	shr	eax, cl
0x3862:	not	eax
0x3864:	and	eax, 1
0x3867:	shl	eax, cl
0x3869:	mov	rcx, r8
0x386c:	xor	eax, edx
0x386e:	mov	rdx, rsi
0x3871:	mov	rsi, rdi
0x3874:	mov	dword ptr [r9], eax
0x3877:	xor	edi, edi
0x3879:	call	0x3170


0x37f0:	mov	rcx, rdx
0x37f3:	mov	rdx, rsi
0x37f6:	mov	esi, edi
0x37f8:	xor	edi, edi
0x37fa:	jmp	0x3750


0x37e0:	mov	rdx, rsi
0x37e3:	mov	esi, edi
0x37e5:	xor	edi, edi
0x37e7:	jmp	0x36c0


0x3750:	sub	rsp, 0x48
0x3754:	mov	rax, rdx
0x3757:	mov	rdx, rcx
0x375a:	mov	rcx, qword ptr fs:[0x28]
0x3763:	mov	qword ptr [rsp + 0x38], rcx
0x3768:	xor	ecx, ecx
0x376a:	cmp	esi, 0xa
0x376d:	je	0x37d0


0x36c0:	sub	rsp, 0x48
0x36c4:	mov	rax, rdx
0x36c7:	mov	rdx, qword ptr fs:[0x28]
0x36d0:	mov	qword ptr [rsp + 0x38], rdx
0x36d5:	xor	edx, edx
0x36d7:	cmp	esi, 0xa
0x36da:	je	0x3744


0x36a0:	lea	rcx, [rip + 0x203b59]
0x36a7:	mov	rdx, rsi
0x36aa:	mov	rsi, rdi
0x36ad:	xor	edi, edi
0x36af:	jmp	0x3170


0x3680:	lea	rcx, [rip + 0x203b79]
0x3687:	mov	rsi, rdi
0x368a:	mov	rdx, -1
0x3691:	xor	edi, edi
0x3693:	jmp	0x3170


0x3670:	lea	rcx, [rip + 0x203b89]
0x3677:	jmp	0x3170


0x3650:	lea	rcx, [rip + 0x203ba9]
0x3657:	mov	rdx, -1
0x365e:	jmp	0x3170


0x35b0:	mov	eax, dword ptr [rip + 0x203aa2]
0x35b6:	push	r12
0x35b8:	mov	r12, qword ptr [rip + 0x203aa1]
0x35bf:	push	rbp
0x35c0:	push	rbx
0x35c1:	cmp	eax, 1
0x35c4:	jle	0x35f1


0x35a0:	mov	rcx, rdx
0x35a3:	xor	edx, edx
0x35a5:	jmp	0x34b0


0x34b0:	push	r15
0x34b2:	push	r14
0x34b4:	lea	rax, [rip + 0x203d45]
0x34bb:	push	r13
0x34bd:	push	r12
0x34bf:	mov	r12, rdx
0x34c2:	push	rbp
0x34c3:	push	rbx
0x34c4:	mov	rbx, rcx
0x34c7:	mov	r14, rdi
0x34ca:	mov	r15, rsi
0x34cd:	sub	rsp, 0x38
0x34d1:	test	rcx, rcx
0x34d4:	cmove	rbx, rax
0x34d8:	xor	ebp, ebp
0x34da:	call	0x1210


0x3430:	push	r15
0x3432:	push	r14
0x3434:	lea	rax, [rip + 0x203dc5]
0x343b:	push	r13
0x343d:	push	r12
0x343f:	mov	r13, rdi
0x3442:	push	rbp
0x3443:	push	rbx
0x3444:	mov	rbx, r8
0x3447:	mov	r14, rsi
0x344a:	mov	r15, rdx
0x344d:	sub	rsp, 0x18
0x3451:	test	r8, r8
0x3454:	cmove	rbx, rax
0x3458:	mov	qword ptr [rsp + 8], rcx
0x345d:	call	0x1210


0x3400:	lea	rax, [rip + 0x203df9]
0x3407:	test	rdi, rdi
0x340a:	cmove	rdi, rax
0x340e:	test	rsi, rsi
0x3411:	mov	dword ptr [rdi], 0xa
0x3417:	je	0x3427


0x33e0:	lea	rax, [rip + 0x203e19]
0x33e7:	test	rdi, rdi
0x33ea:	cmove	rdi, rax
0x33ee:	mov	eax, dword ptr [rdi + 4]
0x33f1:	mov	dword ptr [rdi + 4], esi
0x33f4:	ret	


0x33a0:	lea	rax, [rip + 0x203e59]
0x33a7:	test	rdi, rdi
0x33aa:	mov	ecx, esi
0x33ac:	cmove	rdi, rax
0x33b0:	mov	eax, esi
0x33b2:	and	ecx, 0x1f
0x33b5:	shr	al, 5
0x33b8:	movzx	eax, al
0x33bb:	lea	rdi, [rdi + rax*4 + 8]
0x33c0:	mov	esi, dword ptr [rdi]
0x33c2:	mov	eax, esi
0x33c4:	shr	eax, cl
0x33c6:	xor	edx, eax
0x33c8:	and	eax, 1
0x33cb:	and	edx, 1
0x33ce:	shl	edx, cl
0x33d0:	xor	edx, esi
0x33d2:	mov	dword ptr [rdi], edx
0x33d4:	ret	


0x3380:	lea	rax, [rip + 0x203e79]
0x3387:	test	rdi, rdi
0x338a:	cmove	rdi, rax
0x338e:	mov	dword ptr [rdi], esi
0x3390:	ret	


0x3360:	lea	rax, [rip + 0x203e99]
0x3367:	test	rdi, rdi
0x336a:	cmove	rdi, rax
0x336e:	mov	eax, dword ptr [rdi]
0x3370:	ret	


0x3320:	push	r12
0x3322:	push	rbp
0x3323:	push	rbx
0x3324:	mov	rbx, rdi
0x3327:	call	0x1210


0x3170:	push	r15
0x3172:	push	r14
0x3174:	movsxd	r15, edi
0x3177:	push	r13
0x3179:	push	r12
0x317b:	mov	r14, rdx
0x317e:	push	rbp
0x317f:	push	rbx
0x3180:	mov	rbp, rcx
0x3183:	sub	rsp, 0x28
0x3187:	mov	qword ptr [rsp + 8], rsi
0x318c:	call	0x1210


0x1f30:	push	r15
0x1f32:	push	r14
0x1f34:	mov	r15d, r8d
0x1f37:	push	r13
0x1f39:	push	r12
0x1f3b:	mov	r14, rdi
0x1f3e:	push	rbp
0x1f3f:	push	rbx
0x1f40:	mov	ebx, r9d
0x1f43:	mov	r13, rsi
0x1f46:	mov	rbp, rcx
0x1f49:	and	ebx, 2
0x1f4c:	sub	rsp, 0xb8
0x1f53:	mov	rax, qword ptr [rsp + 0xf0]
0x1f5b:	mov	qword ptr [rsp + 0x10], rdx
0x1f60:	mov	dword ptr [rsp + 8], r8d
0x1f65:	mov	dword ptr [rsp + 0x78], r9d
0x1f6a:	mov	qword ptr [rsp + 0x20], rax
0x1f6f:	mov	rax, qword ptr [rsp + 0xf8]
0x1f77:	mov	qword ptr [rsp + 0x68], rax
0x1f7c:	mov	rax, qword ptr [rsp + 0x100]
0x1f84:	mov	qword ptr [rsp + 0x60], rax
0x1f89:	mov	rax, qword ptr fs:[0x28]
0x1f92:	mov	qword ptr [rsp + 0xa8], rax
0x1f9a:	xor	eax, eax
0x1f9c:	call	0x12a0


0x1e40:	push	rbp
0x1e41:	push	rbx
0x1e42:	mov	rbp, rdi
0x1e45:	mov	ebx, esi
0x1e47:	sub	rsp, 8
0x1e4b:	call	0x44f0


0x1da0:	test	rdi, rdi
0x1da3:	push	rbx
0x1da4:	je	0x1e1d


0x1c60:	push	r14
0x1c62:	push	r13
0x1c64:	mov	r14, r8
0x1c67:	push	r12
0x1c69:	push	rbp
0x1c6a:	mov	r12, rdx
0x1c6d:	push	rbx
0x1c6e:	mov	r13, rcx
0x1c71:	sub	rsp, 0xd0
0x1c78:	test	al, al
0x1c7a:	mov	rbp, qword ptr [rsp + 0x100]
0x1c82:	je	0x1cbb


0x1b20:	push	r13
0x1b22:	push	r12
0x1b24:	mov	r13, r8
0x1b27:	push	rbp
0x1b28:	push	rbx
0x1b29:	mov	rbp, rdx
0x1b2c:	mov	r12, rcx
0x1b2f:	sub	rsp, 0xe8
0x1b36:	test	al, al
0x1b38:	je	0x1b74


0x1a70:	push	rbp
0x1a71:	push	rbx
0x1a72:	sub	rsp, 8
0x1a76:	mov	rdi, qword ptr [rip + 0x20560b]
0x1a7d:	call	0x4410


0x1a60:	mov	byte ptr [rip + 0x205669], dil
0x1a67:	ret	


0x1a50:	mov	qword ptr [rip + 0x205681], rdi
0x1a57:	ret	


0x1700:	push	r13
0x1702:	push	r12
0x1704:	mov	edx, 5
0x1709:	push	rbp
0x170a:	push	rbx
0x170b:	mov	ebp, edi
0x170d:	sub	rsp, 0x88
0x1714:	mov	rbx, qword ptr [rip + 0x2059c5]
0x171b:	mov	rax, qword ptr fs:[0x28]
0x1724:	mov	qword ptr [rsp + 0x78], rax
0x1729:	xor	eax, eax
0x172b:	test	edi, edi
0x172d:	je	0x175d


0x16f0:	push	rbp
0x16f1:	mov	rbp, rsp
0x16f4:	pop	rbp
0x16f5:	jmp	0x1660


0x16b0:	cmp	byte ptr [rip + 0x205a11], 0
0x16b7:	jne	0x16e8


0x1660:	lea	rdi, [rip + 0x205a19]
0x1667:	lea	rsi, [rip + 0x205a12]
0x166e:	push	rbp
0x166f:	sub	rsi, rdi
0x1672:	mov	rbp, rsp
0x1675:	sar	rsi, 3
0x1679:	mov	rax, rsi
0x167c:	shr	rax, 0x3f
0x1680:	add	rsi, rax
0x1683:	sar	rsi, 1
0x1686:	je	0x16a0


0x1620:	lea	rdi, [rip + 0x205a59]
0x1627:	push	rbp
0x1628:	lea	rax, [rip + 0x205a51]
0x162f:	cmp	rax, rdi
0x1632:	mov	rbp, rsp
0x1635:	je	0x1650


0x15f0:	xor	ebp, ebp
0x15f2:	mov	r9, rdx
0x15f5:	pop	rsi
0x15f6:	mov	rdx, rsp
0x15f9:	and	rsp, 0xfffffffffffffff0
0x15fd:	push	rax
0x15fe:	push	rsp
0x15ff:	lea	r8, [rip + 0x30ba]
0x1606:	lea	rcx, [rip + 0x3043]
0x160d:	lea	rdi, [rip - 0x194]
0x1614:	call	qword ptr [rip + 0x2059ae]


0x1480:	push	rbp
0x1481:	push	rbx
0x1482:	mov	ebp, edi
0x1484:	mov	rbx, rsi
0x1487:	sub	rsp, 8
0x148b:	mov	rdi, qword ptr [rsi]
0x148e:	call	0x1da0


0x11c0:	sub	rsp, 8
0x11c4:	mov	rax, qword ptr [rip + 0x205e05]
0x11cb:	test	rax, rax
0x11ce:	je	0x11d2


0x1400:	jmp	qword ptr [rip + 0x205b82]


0x4600:	mov	rax, qword ptr [rdi + 0x20]
0x4604:	cmp	qword ptr [rdi + 0x28], rax
0x4608:	jne	0x45fa


0x45fa:	jmp	0x13f0


0x45ca:	mov	rdi, rbx
0x45cd:	pop	rbx
0x45ce:	jmp	0x1380


0x45b9:	call	0x13a0


0x1360:	jmp	qword ptr [rip + 0x205bd2]


0x1390:	jmp	qword ptr [rip + 0x205bba]


0x13c0:	jmp	qword ptr [rip + 0x205ba2]


0x1250:	jmp	qword ptr [rip + 0x205c5a]


0x12e0:	jmp	qword ptr [rip + 0x205c12]


0x1290:	jmp	qword ptr [rip + 0x205c3a]


0x12b0:	jmp	qword ptr [rip + 0x205c2a]


0x42e9:	call	0x4340


0x42d2:	movzx	edx, dl
0x42d5:	test	rdx, rdx
0x42d8:	jne	0x42e9


0x4280:	test	rax, rax
0x4283:	mov	edx, 0x80
0x4288:	cmove	rax, rdx
0x428c:	test	rax, rax
0x428f:	jns	0x4272


0x4258:	movabs	rdx, 0x5555555555555553
0x4262:	cmp	rax, rdx
0x4265:	ja	0x4291


0x4200:	test	rcx, rcx
0x4203:	je	0x4228


0x41cb:	xor	edx, edx
0x41cd:	movabs	rax, 0x5555555555555554
0x41d7:	div	r9
0x41da:	cmp	rax, rcx
0x41dd:	jbe	0x421b


0x41ab:	sub	rsp, 8
0x41af:	call	0x4340


0x41a1:	movzx	eax, al
0x41a4:	test	rax, rax
0x41a7:	jne	0x41ab


0x4159:	test	rdi, rdi
0x415c:	jne	0x4178


0x415e:	mov	rsi, rbx
0x4161:	call	0x13b0


0x412b:	sub	rsp, 8
0x412f:	call	0x4340


0x4121:	movzx	eax, al
0x4124:	test	rax, rax
0x4127:	jne	0x412b


0x1370:	jmp	qword ptr [rip + 0x205bca]


0x4006:	mov	eax, r10d
0x4009:	mov	r11d, 1
0x400f:	add	r10d, 8
0x4013:	add	rax, rbp
0x4016:	mov	rax, qword ptr [rax]
0x4019:	test	rax, rax
0x401c:	mov	qword ptr [r8 + r9*8], rax
0x4020:	je	0x402c


0x405c:	mov	rax, rbx
0x405f:	add	rbx, 8
0x4063:	jmp	0x4016


0x3f38:	mov	r11d, eax
0x3f3b:	add	r11, qword ptr [r10 + 0x10]
0x3f3f:	add	eax, 8
0x3f42:	mov	dword ptr [r10], eax
0x3f45:	mov	rax, qword ptr [r11]
0x3f48:	test	rax, rax
0x3f4b:	mov	qword ptr [r8 + r9*8], rax
0x3f4f:	je	0x3f5b


0x3f7a:	mov	r11, qword ptr [r10 + 8]
0x3f7e:	lea	rax, [r11 + 8]
0x3f82:	mov	qword ptr [r10 + 8], rax
0x3f86:	jmp	0x3f45


0x3f0b:	jmp	0x3ad0


0x3c08:	mov	r8, rcx
0x3c0b:	mov	rcx, rdx
0x3c0e:	lea	rdx, [rip + 0x12df]
0x3c15:	mov	esi, 1
0x3c1a:	xor	eax, eax
0x3c1c:	call	0x1430


0x3af0:	mov	r8, rdx
0x3af3:	lea	rdx, [rip + 0x13ee]
0x3afa:	mov	r9, rcx
0x3afd:	xor	eax, eax
0x3aff:	mov	rcx, rsi
0x3b02:	mov	esi, 1
0x3b07:	call	0x1430


0x39f7:	call	0x1200


0x39c5:	test	rdx, rdx
0x39c8:	je	0x39f7


0x3964:	call	0x1200


0x38fc:	mov	dword ptr [rsp], esi
0x38ff:	mov	rcx, rsp
0x3902:	mov	rdx, -1
0x3909:	mov	rsi, rax
0x390c:	mov	qword ptr [rsp + 4], 0
0x3915:	mov	qword ptr [rsp + 0xc], 0x4000000
0x391e:	mov	qword ptr [rsp + 0x14], 0
0x3927:	mov	qword ptr [rsp + 0x1c], 0
0x3930:	mov	qword ptr [rsp + 0x24], 0
0x3939:	mov	qword ptr [rsp + 0x2c], 0
0x3942:	mov	dword ptr [rsp + 0x34], 0
0x394a:	call	0x3170


0x37d0:	call	0x1200


0x376f:	mov	dword ptr [rsp], esi
0x3772:	mov	rcx, rsp
0x3775:	mov	rsi, rax
0x3778:	mov	qword ptr [rsp + 4], 0
0x3781:	mov	qword ptr [rsp + 0xc], 0
0x378a:	mov	qword ptr [rsp + 0x14], 0
0x3793:	mov	qword ptr [rsp + 0x1c], 0
0x379c:	mov	qword ptr [rsp + 0x24], 0
0x37a5:	mov	qword ptr [rsp + 0x2c], 0
0x37ae:	mov	dword ptr [rsp + 0x34], 0
0x37b6:	call	0x3170


0x3744:	call	0x1200


0x36dc:	mov	dword ptr [rsp], esi
0x36df:	mov	rcx, rsp
0x36e2:	mov	rdx, -1
0x36e9:	mov	rsi, rax
0x36ec:	mov	qword ptr [rsp + 4], 0
0x36f5:	mov	qword ptr [rsp + 0xc], 0
0x36fe:	mov	qword ptr [rsp + 0x14], 0
0x3707:	mov	qword ptr [rsp + 0x1c], 0
0x3710:	mov	qword ptr [rsp + 0x24], 0
0x3719:	mov	qword ptr [rsp + 0x2c], 0
0x3722:	mov	dword ptr [rsp + 0x34], 0
0x372a:	call	0x3170


0x35f1:	mov	rdi, qword ptr [r12 + 8]
0x35f6:	lea	rbx, [rip + 0x203b03]
0x35fd:	cmp	rdi, rbx
0x3600:	je	0x3619


0x35c6:	sub	eax, 2
0x35c9:	lea	rbx, [r12 + 0x18]
0x35ce:	shl	rax, 4
0x35d2:	lea	rbp, [r12 + rax + 0x28]
0x35d7:	nop	word ptr [rax + rax]
0x35e0:	mov	rdi, qword ptr [rbx]
0x35e3:	add	rbx, 0x10
0x35e7:	call	0x11f0


0x1210:	jmp	qword ptr [rip + 0x205c7a]


0x3427:	sub	rsp, 8
0x342b:	call	0x1200


0x3419:	test	rdx, rdx
0x341c:	je	0x3427


0x12a0:	jmp	qword ptr [rip + 0x205c32]


0x1e1d:	mov	rcx, qword ptr [rip + 0x20529c]
0x1e24:	lea	rdi, [rip + 0x2ba5]
0x1e2b:	mov	edx, 0x37
0x1e30:	mov	esi, 1
0x1e35:	call	0x1420


0x1da6:	mov	esi, 0x2f
0x1dab:	mov	rbx, rdi
0x1dae:	call	0x12f0


0x1cbb:	mov	rax, qword ptr fs:[0x28]
0x1cc4:	mov	qword ptr [rsp + 0x18], rax
0x1cc9:	xor	eax, eax
0x1ccb:	lea	rdx, [rip + 0x326f]
0x1cd2:	lea	rax, [rip + 0x2ce2]
0x1cd9:	test	r9b, r9b
0x1cdc:	lea	rcx, [rip + 0x204edd]
0x1ce3:	cmove	rdx, rax
0x1ce7:	xor	r8d, r8d
0x1cea:	mov	ebx, dword ptr [rip + 0x2053b0]
0x1cf0:	mov	dword ptr [rip + 0x2053a6], 1
0x1cfa:	call	0x12d0


0x1c84:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x1c89:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x1c8e:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x1c93:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x1c9b:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x1ca3:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x1cab:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x1cb3:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x1cbb:	mov	rax, qword ptr fs:[0x28]
0x1cc4:	mov	qword ptr [rsp + 0x18], rax
0x1cc9:	xor	eax, eax
0x1ccb:	lea	rdx, [rip + 0x326f]
0x1cd2:	lea	rax, [rip + 0x2ce2]
0x1cd9:	test	r9b, r9b
0x1cdc:	lea	rcx, [rip + 0x204edd]
0x1ce3:	cmove	rdx, rax
0x1ce7:	xor	r8d, r8d
0x1cea:	mov	ebx, dword ptr [rip + 0x2053b0]
0x1cf0:	mov	dword ptr [rip + 0x2053a6], 1
0x1cfa:	call	0x12d0


0x1b74:	mov	rax, qword ptr fs:[0x28]
0x1b7d:	mov	qword ptr [rsp + 0x28], rax
0x1b82:	xor	eax, eax
0x1b84:	cmp	edi, 2
0x1b87:	mov	ebx, dword ptr [rip + 0x205513]
0x1b8d:	mov	dword ptr [rip + 0x205509], 0
0x1b97:	je	0x1bd0


0x1b3a:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x1b3f:	movaps	xmmword ptr [rsp + 0x70], xmm1
0x1b44:	movaps	xmmword ptr [rsp + 0x80], xmm2
0x1b4c:	movaps	xmmword ptr [rsp + 0x90], xmm3
0x1b54:	movaps	xmmword ptr [rsp + 0xa0], xmm4
0x1b5c:	movaps	xmmword ptr [rsp + 0xb0], xmm5
0x1b64:	movaps	xmmword ptr [rsp + 0xc0], xmm6
0x1b6c:	movaps	xmmword ptr [rsp + 0xd0], xmm7
0x1b74:	mov	rax, qword ptr fs:[0x28]
0x1b7d:	mov	qword ptr [rsp + 0x28], rax
0x1b82:	xor	eax, eax
0x1b84:	cmp	edi, 2
0x1b87:	mov	ebx, dword ptr [rip + 0x205513]
0x1b8d:	mov	dword ptr [rip + 0x205509], 0
0x1b97:	je	0x1bd0


0x175d:	lea	rsi, [rip + 0x30cc]
0x1764:	xor	edi, edi
0x1766:	call	0x1290


0x172f:	lea	rsi, [rip + 0x30d2]
0x1736:	xor	edi, edi
0x1738:	call	0x1290


0x16b9:	cmp	qword ptr [rip + 0x20591f], 0
0x16c1:	push	rbp
0x16c2:	mov	rbp, rsp
0x16c5:	je	0x16d3


0x16e8:	ret	


0x16a0:	pop	rbp
0x16a1:	ret	


0x1688:	mov	rax, qword ptr [rip + 0x205949]
0x168f:	test	rax, rax
0x1692:	je	0x16a0


0x1650:	pop	rbp
0x1651:	ret	


0x1637:	mov	rax, qword ptr [rip + 0x205982]
0x163e:	test	rax, rax
0x1641:	je	0x1650




0x11d2:	add	rsp, 8
0x11d6:	ret	


0x11d0:	call	rax




0x460a:	cmp	qword ptr [rdi + 0x48], 0
0x460f:	jne	0x45fa


0x13f0:	jmp	qword ptr [rip + 0x205b8a]


0x1380:	jmp	qword ptr [rip + 0x205bc2]


0x13a0:	jmp	qword ptr [rip + 0x205bb2]
















0x42da:	call	0x1340


0x4291:	sub	rsp, 8
0x4295:	call	0x4340


0x4272:	mov	qword ptr [rsi], rax
0x4275:	mov	rsi, rax
0x4278:	jmp	0x4150


0x4267:	mov	rdx, rax
0x426a:	shr	rdx, 1
0x426d:	lea	rax, [rdx + rax + 1]
0x4272:	mov	qword ptr [rsi], rax
0x4275:	mov	rsi, rax
0x4278:	jmp	0x4150


0x4228:	xor	edx, edx
0x422a:	mov	eax, 0x80
0x422f:	xor	r8d, r8d
0x4232:	div	r9
0x4235:	test	rax, rax
0x4238:	sete	r8b
0x423c:	lea	rcx, [r8 + rax]
0x4240:	jmp	0x4205


0x4205:	mov	rax, rcx
0x4208:	mul	r9
0x420b:	seto	dl
0x420e:	test	rax, rax
0x4211:	movzx	edx, dl
0x4214:	js	0x421b


0x421b:	sub	rsp, 8
0x421f:	call	0x4340


0x41df:	mov	rax, rcx
0x41e2:	shr	rax, 1
0x41e5:	lea	rcx, [rax + rcx + 1]
0x41ea:	mov	qword ptr [rsi], rcx
0x41ed:	imul	rcx, r9
0x41f1:	mov	rsi, rcx
0x41f4:	jmp	0x4150


0x41a9:	jmp	0x4150


0x4178:	call	0x11f0


0x13b0:	jmp	qword ptr [rip + 0x205baa]


0x4129:	jmp	0x40f0




0x402c:	test	r11b, r11b
0x402f:	jne	0x4055


0x4022:	add	r9, 1
0x4026:	cmp	r9, 0xa
0x402a:	jne	0x4000


0x4016:	mov	rax, qword ptr [rax]
0x4019:	test	rax, rax
0x401c:	mov	qword ptr [r8 + r9*8], rax
0x4020:	je	0x402c


0x3f5b:	call	0x3ad0


0x3f51:	add	r9, 1
0x3f55:	cmp	r9, 0xa
0x3f59:	jne	0x3f30


0x3f45:	mov	rax, qword ptr [r11]
0x3f48:	test	rax, rax
0x3f4b:	mov	qword ptr [r8 + r9*8], rax
0x3f4f:	je	0x3f5b


0x3f00:	add	r9, 1
0x3f04:	cmp	qword ptr [r8 + r9*8], 0
0x3f09:	jne	0x3f00


0x1430:	jmp	qword ptr [rip + 0x205b6a]


0x1200:	jmp	qword ptr [rip + 0x205c82]


0x39ca:	mov	qword ptr [rsp + 0x28], rsi
0x39cf:	mov	qword ptr [rsp + 0x30], rdx
0x39d4:	mov	rcx, rsp
0x39d7:	mov	rdx, r8
0x39da:	mov	rsi, r9
0x39dd:	call	0x3170


0x3619:	lea	rbx, [rip + 0x203a50]
0x3620:	cmp	r12, rbx
0x3623:	je	0x3634


0x3602:	call	0x11f0


0x11f0:	jmp	qword ptr [rip + 0x205c8a]




0x341e:	mov	qword ptr [rdi + 0x28], rsi
0x3422:	mov	qword ptr [rdi + 0x30], rdx
0x3426:	ret	




0x1420:	jmp	qword ptr [rip + 0x205b72]


0x12f0:	jmp	qword ptr [rip + 0x205c0a]


0x12d0:	jmp	qword ptr [rip + 0x205c1a]


0x1bd0:	lea	rcx, [rip + 0x204fe9]
0x1bd7:	lea	rdx, [rip + 0x2ddd]
0x1bde:	xor	r8d, r8d
0x1be1:	mov	qword ptr [rsp + 8], r9
0x1be6:	call	0x12d0


0x1b99:	mov	rax, qword ptr [rsp + 0x28]
0x1b9e:	xor	rax, qword ptr fs:[0x28]
0x1ba7:	mov	dword ptr [rip + 0x2054f3], ebx
0x1bad:	mov	dword ptr [rip + 0x2054d9], 0
0x1bb7:	jne	0x1c5a


0x16d3:	call	0x1620


0x16c7:	mov	rdi, qword ptr [rip + 0x20593a]
0x16ce:	call	0x1470


0x1694:	pop	rbp
0x1695:	jmp	rax


0x1643:	pop	rbp
0x1644:	jmp	rax


0x4611:	push	r12
0x4613:	push	rbp
0x4614:	mov	r12d, edx
0x4617:	push	rbx
0x4618:	mov	rbp, rsi
0x461b:	mov	rbx, rdi
0x461e:	call	0x1360








0x1340:	jmp	qword ptr [rip + 0x205be2]


0x4216:	test	rdx, rdx
0x4219:	je	0x41ea




0x4031:	call	0x3ad0


0x4055:	mov	dword ptr [rsp + 8], r10d
0x405a:	jmp	0x4031


0x4000:	cmp	r10d, 0x2f
0x4004:	ja	0x405c


0x3f30:	mov	eax, dword ptr [r10]
0x3f33:	cmp	eax, 0x2f
0x3f36:	ja	0x3f7a






0x3634:	pop	rbx
0x3635:	mov	dword ptr [rip + 0x203a19], 1
0x363f:	pop	rbp
0x3640:	pop	r12
0x3642:	ret	


0x3625:	mov	rdi, r12
0x3628:	call	0x11f0










0x1bbd:	add	rsp, 0xe8
0x1bc4:	pop	rbx
0x1bc5:	pop	rbp
0x1bc6:	pop	r12
0x1bc8:	pop	r13
0x1bca:	ret	


0x1c5a:	call	0x12c0


0x1470:	jmp	qword ptr [rip + 0x205b6a]




0x41ea:	mov	qword ptr [rsi], rcx
0x41ed:	imul	rcx, r9
0x41f1:	mov	rsi, rcx
0x41f4:	jmp	0x4150


0x12c0:	jmp	qword ptr [rip + 0x205c22]




0x16d8:	mov	byte ptr [rip + 0x2059e9], 1
0x16df:	pop	rbp
0x16e0:	ret	


0x4681:	test	rbp, rbp
0x4684:	je	0x46a6


0x46a6:	add	rsp, 8
0x46aa:	pop	rbx
0x46ab:	pop	rbp
0x46ac:	pop	r12
0x46ae:	pop	r13
0x46b0:	pop	r14
0x46b2:	pop	r15
0x46b4:	ret	


0x4686:	xor	ebx, ebx
0x4688:	nop	dword ptr [rax + rax]
0x4690:	mov	rdx, r15
0x4693:	mov	rsi, r14
0x4696:	mov	edi, r13d
0x4699:	call	qword ptr [r12 + rbx*8]


0x42df:	test	rax, rax
0x42e2:	je	0x42e9


0x42e4:	add	rsp, 8
0x42e8:	ret	


0x1beb:	cmp	eax, -1
0x1bee:	je	0x1b99


0x1bf0:	cmp	eax, 0x68
0x1bf3:	mov	r9, qword ptr [rsp + 8]
0x1bf8:	je	0x1c50


0x1c50:	xor	edi, edi
0x1c52:	call	r9


0x1bfa:	cmp	eax, 0x76
0x1bfd:	jne	0x1b99


0x1bff:	lea	rax, [rsp + 0x110]
0x1c07:	mov	rdi, qword ptr [rip + 0x20547a]
0x1c0e:	lea	r8, [rsp + 0x10]
0x1c13:	mov	rcx, r13
0x1c16:	mov	rdx, r12
0x1c19:	mov	rsi, rbp
0x1c1c:	mov	qword ptr [rsp + 0x18], rax
0x1c21:	lea	rax, [rsp + 0x30]
0x1c26:	mov	dword ptr [rsp + 0x10], 0x30
0x1c2e:	mov	dword ptr [rsp + 0x14], 0x30
0x1c36:	mov	qword ptr [rsp + 0x20], rax
0x1c3b:	call	0x3f10


0x1cff:	cmp	eax, -1
0x1d02:	je	0x1d68


0x1d68:	mov	rax, qword ptr [rsp + 0x18]
0x1d6d:	xor	rax, qword ptr fs:[0x28]
0x1d76:	mov	dword ptr [rip + 0x205324], ebx
0x1d7c:	jne	0x1d96


0x1d04:	cmp	eax, 0x68
0x1d07:	je	0x1d90


0x1d7e:	add	rsp, 0xd0
0x1d85:	pop	rbx
0x1d86:	pop	rbp
0x1d87:	pop	r12
0x1d89:	pop	r13
0x1d8b:	pop	r14
0x1d8d:	ret	


0x1d96:	call	0x12c0


0x1d90:	xor	edi, edi
0x1d92:	call	rbp


0x1d0d:	cmp	eax, 0x76
0x1d10:	jne	0x1d60


0x1d12:	lea	rax, [rsp + 0x108]
0x1d1a:	mov	rdi, qword ptr [rip + 0x205367]
0x1d21:	mov	r8, rsp
0x1d24:	mov	rcx, r14
0x1d27:	mov	rdx, r13
0x1d2a:	mov	rsi, r12
0x1d2d:	mov	qword ptr [rsp + 8], rax
0x1d32:	lea	rax, [rsp + 0x20]
0x1d37:	mov	dword ptr [rsp], 0x30
0x1d3e:	mov	dword ptr [rsp + 4], 0x30
0x1d46:	mov	qword ptr [rsp + 0x10], rax
0x1d4b:	call	0x3f10


0x1d60:	mov	edi, dword ptr [rip + 0x2052b2]
0x1d66:	call	rbp


0x1db3:	test	rax, rax
0x1db6:	je	0x1e0d


0x1e0d:	mov	qword ptr [rip + 0x2052cc], rbx
0x1e14:	mov	qword ptr [rip + 0x20527d], rbx
0x1e1b:	pop	rbx
0x1e1c:	ret	


0x1db8:	lea	r8, [rax + 1]
0x1dbc:	mov	rdx, r8
0x1dbf:	sub	rdx, rbx
0x1dc2:	cmp	rdx, 6
0x1dc6:	jle	0x1e0d


0x1dc8:	lea	rsi, [rax - 6]
0x1dcc:	lea	rdi, [rip + 0x2c35]
0x1dd3:	mov	ecx, 7
0x1dd8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1dd8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1dda:	seta	dl
0x1ddd:	sbb	dl, 0
0x1de0:	test	dl, dl
0x1de2:	jne	0x1e0d


0x1de4:	lea	rdi, [rip + 0x2c25]
0x1deb:	mov	ecx, 3
0x1df0:	mov	rsi, r8
0x1df3:	mov	rbx, r8
0x1df6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1df6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1df8:	seta	dl
0x1dfb:	sbb	dl, 0
0x1dfe:	test	dl, dl
0x1e00:	jne	0x1e0d


0x1e02:	lea	rbx, [rax + 4]
0x1e06:	mov	qword ptr [rip + 0x205273], rbx
0x1e0d:	mov	qword ptr [rip + 0x2052cc], rbx
0x1e14:	mov	qword ptr [rip + 0x20527d], rbx
0x1e1b:	pop	rbx
0x1e1c:	ret	


0x1e3a:	call	0x1200


0x362d:	mov	qword ptr [rip + 0x203a2c], rbx
0x3634:	pop	rbx
0x3635:	mov	dword ptr [rip + 0x203a19], 1
0x363f:	pop	rbp
0x3640:	pop	r12
0x3642:	ret	


0x3607:	mov	qword ptr [rip + 0x203a5e], 0x100
0x3612:	mov	qword ptr [rip + 0x203a5f], rbx
0x3619:	lea	rbx, [rip + 0x203a50]
0x3620:	cmp	r12, rbx
0x3623:	je	0x3634


0x417d:	xor	eax, eax
0x417f:	pop	rbx
0x4180:	ret	


0x35ec:	cmp	rbx, rbp
0x35ef:	jne	0x35e0


0x35e0:	mov	rdi, qword ptr [rbx]
0x35e3:	add	rbx, 0x10
0x35e7:	call	0x11f0


0x3b0c:	lea	rsi, [rip + 0x13e8]
0x3b13:	xor	edi, edi
0x3b15:	mov	edx, 5
0x3b1a:	call	0x1290


0x3c21:	jmp	0x3b0c


0x4166:	test	rax, rax
0x4169:	jne	0x4170


0x416b:	test	rbx, rbx
0x416e:	jne	0x4181


0x4170:	pop	rbx
0x4171:	ret	


0x4181:	call	0x4340


0x45be:	test	eax, eax
0x45c0:	je	0x45ca


0x45c2:	test	dword ptr [rbx], 0x100
0x45c8:	jne	0x45d8


0x45d8:	mov	rdi, rbx
0x45db:	mov	edx, 1
0x45e0:	xor	esi, esi
0x45e2:	call	0x45f0


0x1493:	lea	rsi, [rip + 0x3aa7]
0x149a:	mov	edi, 6
0x149f:	call	0x13c0


0x1fa1:	cmp	r15d, 0xa
0x1fa5:	mov	qword ptr [rsp + 0x58], rax
0x1faa:	ja	0x315f


0x1fb0:	lea	rcx, [rip + 0x2ac9]
0x1fb7:	mov	edx, r15d
0x1fba:	movsxd	rax, dword ptr [rcx + rdx*4]
0x1fbe:	add	rax, rcx
0x1fc1:	jmp	rax


0x315f:	call	0x1200


0x3191:	mov	r13, rax
0x3194:	mov	eax, dword ptr [rax]
0x3196:	test	r15d, r15d
0x3199:	mov	rbx, qword ptr [rip + 0x203ec0]
0x31a0:	mov	dword ptr [rsp + 0x18], eax
0x31a4:	js	0x3311


0x3311:	call	0x1200


0x31aa:	cmp	dword ptr [rip + 0x203ea7], r15d
0x31b1:	jg	0x3215


0x31b3:	cmp	r15d, 0x7fffffff
0x31ba:	je	0x3316


0x3215:	mov	eax, dword ptr [rbp + 4]
0x3218:	shl	r15, 4
0x321c:	sub	rsp, 8
0x3220:	add	rbx, r15
0x3223:	lea	r15, [rbp + 8]
0x3227:	mov	r8d, dword ptr [rbp]
0x322b:	mov	r11, qword ptr [rbx]
0x322e:	mov	r12, qword ptr [rbx + 8]
0x3232:	mov	rcx, r14
0x3235:	or	eax, 1
0x3238:	mov	dword ptr [rsp + 0x24], eax
0x323c:	push	qword ptr [rbp + 0x30]
0x323f:	mov	r9d, eax
0x3242:	push	qword ptr [rbp + 0x28]
0x3245:	push	r15
0x3247:	mov	rsi, r11
0x324a:	mov	rdx, qword ptr [rsp + 0x28]
0x324f:	mov	rdi, r12
0x3252:	mov	qword ptr [rsp + 0x30], r11
0x3257:	call	0x1f30


0x3316:	call	0x4340


0x31c0:	lea	r12d, [r15 + 1]
0x31c4:	lea	rax, [rip + 0x203ea5]
0x31cb:	movsxd	rsi, r12d
0x31ce:	shl	rsi, 4
0x31d2:	cmp	rbx, rax
0x31d5:	je	0x32f0


0x32f0:	xor	edi, edi
0x32f2:	call	0x4150


0x31db:	mov	rdi, rbx
0x31de:	call	0x4150


0x31e3:	mov	rbx, rax
0x31e6:	mov	qword ptr [rip + 0x203e73], rax
0x31ed:	movsxd	rdi, dword ptr [rip + 0x203e64]
0x31f4:	mov	edx, r12d
0x31f7:	xor	esi, esi
0x31f9:	sub	edx, edi
0x31fb:	shl	rdi, 4
0x31ff:	movsxd	rdx, edx
0x3202:	add	rdi, rbx
0x3205:	shl	rdx, 4
0x3209:	call	0x1310


0x1310:	jmp	qword ptr [rip + 0x205bfa]




0x32f7:	movdqa	xmm0, xmmword ptr [rip + 0x203d71]
0x32ff:	mov	rbx, rax
0x3302:	mov	qword ptr [rip + 0x203d57], rax
0x3309:	movups	xmmword ptr [rax], xmm0
0x330c:	jmp	0x31ed


0x31ed:	movsxd	rdi, dword ptr [rip + 0x203e64]
0x31f4:	mov	edx, r12d
0x31f7:	xor	esi, esi
0x31f9:	sub	edx, edi
0x31fb:	shl	rdi, 4
0x31ff:	movsxd	rdx, edx
0x3202:	add	rdi, rbx
0x3205:	shl	rdx, 4
0x3209:	call	0x1310


0x332c:	mov	r12d, dword ptr [rax]
0x332f:	mov	rbp, rax
0x3332:	lea	rax, [rip + 0x203ec7]
0x3339:	test	rbx, rbx
0x333c:	mov	esi, 0x38
0x3341:	cmove	rbx, rax
0x3345:	mov	rdi, rbx
0x3348:	call	0x42f0


0x3462:	mov	r12d, dword ptr [rax]
0x3465:	mov	rbp, rax
0x3468:	lea	rax, [rbx + 8]
0x346c:	sub	rsp, 8
0x3470:	mov	r9d, dword ptr [rbx + 4]
0x3474:	push	qword ptr [rbx + 0x30]
0x3477:	mov	r8d, dword ptr [rbx]
0x347a:	push	qword ptr [rbx + 0x28]
0x347d:	mov	rdx, r15
0x3480:	push	rax
0x3481:	mov	rcx, qword ptr [rsp + 0x28]
0x3486:	mov	rsi, r14
0x3489:	mov	rdi, r13
0x348c:	call	0x1f30


0x34df:	test	r12, r12
0x34e2:	mov	r13, rax
0x34e5:	mov	eax, dword ptr [rax]
0x34e7:	sete	bpl
0x34eb:	or	ebp, dword ptr [rbx + 4]
0x34ee:	lea	r10, [rbx + 8]
0x34f2:	sub	rsp, 8
0x34f6:	mov	r8d, dword ptr [rbx]
0x34f9:	mov	rcx, r15
0x34fc:	mov	dword ptr [rsp + 0x14], eax
0x3500:	push	qword ptr [rbx + 0x30]
0x3503:	mov	rdx, r14
0x3506:	push	qword ptr [rbx + 0x28]
0x3509:	push	r10
0x350b:	xor	esi, esi
0x350d:	mov	r9d, ebp
0x3510:	xor	edi, edi
0x3512:	mov	qword ptr [rsp + 0x40], r10
0x3517:	call	0x1f30


0x40f9:	test	rax, rax
0x40fc:	jne	0x4103


0x40fe:	test	rbx, rbx
0x4101:	jne	0x4105


0x4103:	pop	rbx
0x4104:	ret	


0x4105:	call	0x4340


0x42a9:	mov	rdx, rbx
0x42ac:	xor	esi, esi
0x42ae:	mov	rdi, rax
0x42b1:	pop	rbx
0x42b2:	jmp	0x1310


0x4304:	add	rsp, 8
0x4308:	mov	rdx, rbx
0x430b:	mov	rsi, rbp
0x430e:	pop	rbx
0x430f:	pop	rbp
0x4310:	mov	rdi, rax
0x4313:	jmp	0x1350


0x1350:	jmp	qword ptr [rip + 0x205bda]




0x4329:	mov	rdi, rbx
0x432c:	lea	rsi, [rax + 1]
0x4330:	pop	rbx
0x4331:	jmp	0x42f0


0x3b1f:	lea	rdx, [rip + 0x16fa]
0x3b26:	mov	rcx, rax
0x3b29:	mov	r8d, 0x7e3
0x3b2f:	mov	esi, 1
0x3b34:	mov	rdi, rbp
0x3b37:	xor	eax, eax
0x3b39:	call	0x1430


0x3b3e:	lea	rsi, [rip + 0x1443]
0x3b45:	xor	edi, edi
0x3b47:	mov	edx, 5
0x3b4c:	call	0x1290


0x3b51:	mov	rsi, rbp
0x3b54:	mov	rdi, rax
0x3b57:	call	0x1330


0x1330:	jmp	qword ptr [rip + 0x205bea]




0x173d:	mov	rdi, qword ptr [rip + 0x20597c]
0x1744:	mov	rdx, rax
0x1747:	mov	rcx, rbx
0x174a:	mov	esi, 1
0x174f:	xor	eax, eax
0x1751:	call	0x1430


0x1756:	mov	edi, ebp
0x1758:	call	0x1410


0x1410:	jmp	qword ptr [rip + 0x205b7a]




0x176b:	mov	rcx, rbx
0x176e:	mov	rdx, rbx
0x1771:	mov	rsi, rax
0x1774:	mov	edi, 1
0x1779:	xor	eax, eax
0x177b:	call	0x13d0


0x13d0:	jmp	qword ptr [rip + 0x205b9a]




0x4084:	lea	rdx, [rip + 0xecc]
0x408b:	mov	rsi, rax
0x408e:	mov	edi, 1
0x4093:	xor	eax, eax
0x4095:	call	0x13d0


0x4357:	mov	edi, dword ptr [rip + 0x202cbb]
0x435d:	lea	rdx, [rip + 0x654]
0x4364:	mov	rcx, rax
0x4367:	xor	esi, esi
0x4369:	xor	eax, eax
0x436b:	call	0x13e0


0x13e0:	jmp	qword ptr [rip + 0x205b92]




0x43b7:	cmp	rax, -3
0x43bb:	mov	rbp, rax
0x43be:	jbe	0x43e0


0x43e0:	mov	rdx, qword ptr [rsp + 8]
0x43e5:	xor	rdx, qword ptr fs:[0x28]
0x43ee:	mov	rax, rbp
0x43f1:	jne	0x43fe


0x43c0:	test	r12, r12
0x43c3:	je	0x43e0


0x43f3:	add	rsp, 0x18
0x43f7:	pop	rbx
0x43f8:	pop	rbp
0x43f9:	pop	r12
0x43fb:	pop	r13
0x43fd:	ret	


0x43fe:	call	0x12c0


0x43c5:	xor	edi, edi
0x43c7:	call	0x4490


0x441c:	mov	ebx, dword ptr [rbp]
0x441f:	mov	rdi, rbp
0x4422:	mov	r12, rax
0x4425:	call	0x4530


0x14a4:	lea	rsi, [rip + 0x3303]
0x14ab:	lea	rdi, [rip + 0x32d3]
0x14b2:	call	0x1280


0x1280:	jmp	qword ptr [rip + 0x205c42]




0x449b:	mov	rdx, rax
0x449e:	mov	eax, 1
0x44a3:	test	rdx, rdx
0x44a6:	je	0x44c5


0x44c5:	add	rsp, 8
0x44c9:	ret	


0x44a8:	lea	rdi, [rip + 0xdb1]
0x44af:	mov	ecx, 2
0x44b4:	mov	rsi, rdx
0x44b7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x44b7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x44b9:	seta	cl
0x44bc:	sbb	cl, 0
0x44bf:	xor	eax, eax
0x44c1:	test	cl, cl
0x44c3:	jne	0x44d0


0x44d0:	lea	rdi, [rip + 0xd8b]
0x44d7:	mov	ecx, 6
0x44dc:	mov	rsi, rdx
0x44df:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x44df:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x44e1:	seta	al
0x44e4:	sbb	al, 0
0x44e6:	test	al, al
0x44e8:	setne	al
0x44eb:	add	rsp, 8
0x44ef:	ret	


0x43cc:	test	al, al
0x43ce:	jne	0x43e0


0x43d0:	movzx	eax, byte ptr [r13]
0x43d5:	mov	ebp, 1
0x43da:	mov	dword ptr [rbx], eax
0x43dc:	nop	dword ptr [rax]
0x43e0:	mov	rdx, qword ptr [rsp + 8]
0x43e5:	xor	rdx, qword ptr fs:[0x28]
0x43ee:	mov	rax, rbp
0x43f1:	jne	0x43fe


0x44fe:	test	rax, rax
0x4501:	je	0x4520


0x4520:	lea	rax, [rip + 0xd41]
0x4527:	add	rsp, 8
0x452b:	ret	


0x4503:	cmp	byte ptr [rax], 0
0x4506:	lea	rdx, [rip + 0xd5b]
0x450d:	cmove	rax, rdx
0x4511:	add	rsp, 8
0x4515:	ret	


0x1e50:	movzx	edx, byte ptr [rax]
0x1e53:	and	edx, 0xffffffdf
0x1e56:	cmp	dl, 0x55
0x1e59:	je	0x1ed0


0x1ed0:	movzx	edx, byte ptr [rax + 1]
0x1ed4:	and	edx, 0xffffffdf
0x1ed7:	cmp	dl, 0x54
0x1eda:	jne	0x1e60


0x1e5b:	cmp	dl, 0x47
0x1e5e:	je	0x1e80


0x1edc:	movzx	edx, byte ptr [rax + 2]
0x1ee0:	and	edx, 0xffffffdf
0x1ee3:	cmp	dl, 0x46
0x1ee6:	jne	0x1e60


0x1e60:	lea	rax, [rip + 0x2bbc]
0x1e67:	lea	rdx, [rip + 0x2bb7]
0x1e6e:	cmp	ebx, 9
0x1e71:	cmovne	rax, rdx
0x1e75:	add	rsp, 8
0x1e79:	pop	rbx
0x1e7a:	pop	rbp
0x1e7b:	ret	


0x1e80:	movzx	edx, byte ptr [rax + 1]
0x1e84:	and	edx, 0xffffffdf
0x1e87:	cmp	dl, 0x42
0x1e8a:	jne	0x1e60


0x1eec:	cmp	byte ptr [rax + 3], 0x2d
0x1ef0:	jne	0x1e60


0x1e8c:	cmp	byte ptr [rax + 2], 0x31
0x1e90:	jne	0x1e60


0x1ef6:	cmp	byte ptr [rax + 4], 0x38
0x1efa:	jne	0x1e60


0x1e92:	cmp	byte ptr [rax + 3], 0x38
0x1e96:	jne	0x1e60


0x1f00:	cmp	byte ptr [rax + 5], 0
0x1f04:	jne	0x1e60


0x1e98:	cmp	byte ptr [rax + 4], 0x30
0x1e9c:	jne	0x1e60


0x1f0a:	cmp	byte ptr [rbp], 0x60
0x1f0e:	lea	rax, [rip + 0x2aff]
0x1f15:	lea	rdx, [rip + 0x2afc]
0x1f1c:	cmovne	rax, rdx
0x1f20:	add	rsp, 8
0x1f24:	pop	rbx
0x1f25:	pop	rbp
0x1f26:	ret	


0x1e9e:	cmp	byte ptr [rax + 5], 0x33
0x1ea2:	jne	0x1e60


0x1ea4:	cmp	byte ptr [rax + 6], 0x30
0x1ea8:	jne	0x1e60


0x1eaa:	cmp	byte ptr [rax + 7], 0
0x1eae:	jne	0x1e60


0x1eb0:	cmp	byte ptr [rbp], 0x60
0x1eb4:	lea	rax, [rip + 0x2b61]
0x1ebb:	lea	rdx, [rip + 0x2b5e]
0x1ec2:	cmovne	rax, rdx
0x1ec6:	add	rsp, 8
0x1eca:	pop	rbx
0x1ecb:	pop	rbp
0x1ecc:	ret	


0x4623:	mov	edx, r12d
0x4626:	mov	rsi, rbp
0x4629:	mov	edi, eax
0x462b:	call	0x1300


0x1300:	jmp	qword ptr [rip + 0x205c02]




0x453c:	test	eax, eax
0x453e:	mov	rdi, rbx
0x4541:	js	0x4597


0x4597:	pop	rbx
0x4598:	pop	rbp
0x4599:	pop	r12
0x459b:	jmp	0x1270


0x4543:	call	0x13a0


0x1270:	jmp	qword ptr [rip + 0x205c4a]




0x4548:	test	eax, eax
0x454a:	jne	0x4578


0x454c:	mov	rdi, rbx
0x454f:	call	0x45b0


0x4578:	mov	rdi, rbx
0x457b:	call	0x1360


0x4580:	xor	esi, esi
0x4582:	mov	edx, 1
0x4587:	mov	edi, eax
0x4589:	call	0x1300


0x458e:	cmp	rax, -1
0x4592:	jne	0x454c


0x4594:	mov	rdi, rbx
0x4597:	pop	rbx
0x4598:	pop	rbp
0x4599:	pop	r12
0x459b:	jmp	0x1270


0x4630:	cmp	rax, -1
0x4634:	je	0x4642


0x4642:	pop	rbx
0x4643:	pop	rbp
0x4644:	pop	r12
0x4646:	ret	


0x4636:	and	dword ptr [rbx], 0xffffffef
0x4639:	mov	qword ptr [rbx + 0x90], rax
0x4640:	xor	eax, eax
0x4642:	pop	rbx
0x4643:	pop	rbp
0x4644:	pop	r12
0x4646:	ret	


0x14b7:	lea	rdi, [rip + 0x32c7]
0x14be:	call	0x1260


0x1260:	jmp	qword ptr [rip + 0x205c52]




0x4370:	call	0x1200


0x409a:	lea	rsi, [rip + 0xecc]
0x40a1:	mov	edx, 5
0x40a6:	xor	edi, edi
0x40a8:	call	0x1290


0x40ad:	lea	rcx, [rip + 0x84c]
0x40b4:	lea	rdx, [rip + 0x6c6]
0x40bb:	mov	rsi, rax
0x40be:	mov	edi, 1
0x40c3:	xor	eax, eax
0x40c5:	call	0x13d0


0x40ca:	mov	rbx, qword ptr [rip + 0x202fb7]
0x40d1:	lea	rsi, [rip + 0x10c8]
0x40d8:	xor	edi, edi
0x40da:	mov	edx, 5
0x40df:	call	0x1290


0x40e4:	mov	rsi, rbx
0x40e7:	mov	rdi, rax
0x40ea:	pop	rbx
0x40eb:	jmp	0x1330


0x1780:	mov	rbx, qword ptr [rip + 0x205901]
0x1787:	lea	rsi, [rip + 0x30ca]
0x178e:	mov	edx, 5
0x1793:	xor	edi, edi
0x1795:	call	0x1290


0x179a:	mov	rsi, rbx
0x179d:	mov	rdi, rax
0x17a0:	call	0x1330


0x17a5:	mov	rbx, qword ptr [rip + 0x2058dc]
0x17ac:	lea	rsi, [rip + 0x30e5]
0x17b3:	mov	edx, 5
0x17b8:	xor	edi, edi
0x17ba:	call	0x1290


0x17bf:	mov	rsi, rbx
0x17c2:	mov	rdi, rax
0x17c5:	call	0x1330


0x17ca:	mov	rbx, qword ptr [rip + 0x2058b7]
0x17d1:	lea	rsi, [rip + 0x30f0]
0x17d8:	mov	edx, 5
0x17dd:	xor	edi, edi
0x17df:	call	0x1290


0x17e4:	mov	rsi, rbx
0x17e7:	mov	rdi, rax
0x17ea:	lea	rbx, [rip + 0x2f13]
0x17f1:	call	0x1330


0x17f6:	lea	rax, [rip + 0x2f0e]
0x17fd:	lea	rcx, [rip + 0x2f48]
0x1804:	mov	qword ptr [rsp + 0x60], 0
0x180d:	mov	qword ptr [rsp + 0x68], 0
0x1816:	mov	rdx, rsp
0x1819:	mov	qword ptr [rsp], rax
0x181d:	lea	rax, [rip + 0x2ee9]
0x1824:	mov	qword ptr [rsp + 0x30], rcx
0x1829:	lea	rcx, [rip + 0x2f26]
0x1830:	mov	qword ptr [rsp + 8], rax
0x1835:	lea	rax, [rip + 0x2f49]
0x183c:	mov	qword ptr [rsp + 0x40], rcx
0x1841:	lea	rcx, [rip + 0x2f18]
0x1848:	mov	qword ptr [rsp + 0x10], rax
0x184d:	lea	rax, [rip + 0x2ec9]
0x1854:	mov	qword ptr [rsp + 0x50], rcx
0x1859:	mov	qword ptr [rsp + 0x18], rax
0x185e:	lea	rax, [rip + 0x2ece]
0x1865:	mov	qword ptr [rsp + 0x20], rax
0x186a:	lea	rax, [rip + 0x2ecc]
0x1871:	mov	qword ptr [rsp + 0x28], rax
0x1876:	mov	qword ptr [rsp + 0x38], rax
0x187b:	mov	qword ptr [rsp + 0x48], rax
0x1880:	mov	qword ptr [rsp + 0x58], rax
0x1885:	nop	dword ptr [rax]
0x1888:	add	rdx, 0x10
0x188c:	mov	rdi, qword ptr [rdx]
0x188f:	test	rdi, rdi
0x1892:	je	0x18a7


0x18a7:	mov	r12, qword ptr [rdx + 8]
0x18ab:	xor	edi, edi
0x18ad:	mov	edx, 5
0x18b2:	lea	rsi, [rip + 0x2eb1]
0x18b9:	test	r12, r12
0x18bc:	je	0x1983


0x1894:	mov	ecx, 7
0x1899:	mov	rsi, rbx
0x189c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1983:	call	0x1290


0x18c2:	call	0x1290


0x189c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x189e:	seta	al
0x18a1:	sbb	al, 0
0x18a3:	test	al, al
0x18a5:	jne	0x1888


0x1888:	add	rdx, 0x10
0x188c:	mov	rdi, qword ptr [rdx]
0x188f:	test	rdi, rdi
0x1892:	je	0x18a7


0x18c7:	lea	rcx, [rip + 0x3032]
0x18ce:	lea	rdx, [rip + 0x2eac]
0x18d5:	mov	rsi, rax
0x18d8:	mov	edi, 1
0x18dd:	xor	eax, eax
0x18df:	call	0x13d0


0x18e4:	xor	esi, esi
0x18e6:	mov	edi, 5
0x18eb:	call	0x13c0


0x18f0:	test	rax, rax
0x18f3:	je	0x1911


0x1911:	lea	rsi, [rip + 0x2e7b]
0x1918:	xor	edi, edi
0x191a:	mov	edx, 5
0x191f:	call	0x1290


0x18f5:	lea	rsi, [rip + 0x2e93]
0x18fc:	mov	edx, 3
0x1901:	mov	rdi, rax
0x1904:	call	0x1230


0x1230:	jmp	qword ptr [rip + 0x205c6a]




0x1924:	lea	rcx, [rip + 0x2dd9]
0x192b:	lea	rdx, [rip + 0x2fce]
0x1932:	mov	rsi, rax
0x1935:	mov	edi, 1
0x193a:	xor	eax, eax
0x193c:	call	0x13d0


0x1941:	cmp	r12, rbx
0x1944:	lea	rcx, [rip + 0x2ddc]
0x194b:	lea	rbx, [rip + 0x35ef]
0x1952:	cmove	rbx, rcx
0x1956:	lea	rsi, [rip + 0x3013]
0x195d:	xor	edi, edi
0x195f:	mov	edx, 5
0x1964:	call	0x1290


0x1969:	mov	rcx, rbx
0x196c:	mov	rsi, rax
0x196f:	mov	rdx, r12
0x1972:	mov	edi, 1
0x1977:	xor	eax, eax
0x1979:	call	0x13d0


0x197e:	jmp	0x1756


0x1988:	lea	rcx, [rip + 0x2f71]
0x198f:	lea	rdx, [rip + 0x2deb]
0x1996:	mov	rsi, rax
0x1999:	mov	edi, 1
0x199e:	xor	eax, eax
0x19a0:	call	0x13d0


0x19a5:	xor	esi, esi
0x19a7:	mov	edi, 5
0x19ac:	call	0x13c0


0x19b1:	test	rax, rax
0x19b4:	je	0x19ce


0x19ce:	lea	rsi, [rip + 0x2dbe]
0x19d5:	mov	edx, 5
0x19da:	xor	edi, edi
0x19dc:	lea	r12, [rip + 0x2d21]
0x19e3:	lea	rbx, [rip + 0x2d3d]
0x19ea:	call	0x1290


0x19b6:	lea	rsi, [rip + 0x2dd2]
0x19bd:	mov	edx, 3
0x19c2:	mov	rdi, rax
0x19c5:	call	0x1230


0x19ef:	lea	rcx, [rip + 0x2d0e]
0x19f6:	lea	rdx, [rip + 0x2f03]
0x19fd:	mov	rsi, rax
0x1a00:	mov	edi, 1
0x1a05:	xor	eax, eax
0x1a07:	call	0x13d0


0x1a0c:	jmp	0x1956


0x1956:	lea	rsi, [rip + 0x3013]
0x195d:	xor	edi, edi
0x195f:	mov	edx, 5
0x1964:	call	0x1290


0x3b5c:	cmp	r12, 9
0x3b60:	ja	0x3ea0


0x3b66:	lea	rdx, [rip + 0x167b]
0x3b6d:	movsxd	rax, dword ptr [rdx + r12*4]
0x3b71:	add	rax, rdx
0x3b74:	jmp	rax


0x3ea0:	mov	r10, qword ptr [rbx + 0x40]
0x3ea4:	mov	r9, qword ptr [rbx + 0x38]
0x3ea8:	mov	edx, 5
0x3ead:	mov	rax, qword ptr [rbx + 0x10]
0x3eb1:	mov	r8, qword ptr [rbx + 8]
0x3eb5:	lea	rsi, [rip + 0x12a4]
0x3ebc:	mov	r13, qword ptr [rbx + 0x30]
0x3ec0:	mov	r12, qword ptr [rbx + 0x28]
0x3ec4:	mov	r15, qword ptr [rbx + 0x20]
0x3ec8:	mov	r14, qword ptr [rbx + 0x18]
0x3ecc:	mov	qword ptr [rsp + 0x18], r10
0x3ed1:	mov	qword ptr [rsp + 0x10], r9
0x3ed6:	mov	qword ptr [rsp], rax
0x3eda:	mov	qword ptr [rsp + 8], r8
0x3edf:	mov	rbx, qword ptr [rbx]
0x3ee2:	jmp	0x3c72


0x3c72:	xor	edi, edi
0x3c74:	call	0x1290


0x3c79:	mov	r10, qword ptr [rsp + 0x18]
0x3c7e:	push	r10
0x3c80:	jmp	0x3bc4


0x3bc4:	mov	r9, qword ptr [rsp + 0x18]
0x3bc9:	mov	rdx, rax
0x3bcc:	mov	rcx, rbx
0x3bcf:	mov	esi, 1
0x3bd4:	mov	rdi, rbp
0x3bd7:	xor	eax, eax
0x3bd9:	push	r9
0x3bdb:	push	r13
0x3bdd:	push	r12
0x3bdf:	push	r15
0x3be1:	push	r14
0x3be3:	mov	r9, qword ptr [rsp + 0x30]
0x3be8:	mov	r8, qword ptr [rsp + 0x38]
0x3bed:	call	0x1430


0x3bf2:	add	rsp, 0x30
0x3bf6:	add	rsp, 0x28
0x3bfa:	pop	rbx
0x3bfb:	pop	rbp
0x3bfc:	pop	r12
0x3bfe:	pop	r13
0x3c00:	pop	r14
0x3c02:	pop	r15
0x3c04:	ret	


0x334d:	mov	dword ptr [rbp], r12d
0x3351:	pop	rbx
0x3352:	pop	rbp
0x3353:	pop	r12
0x3355:	ret	


0x320e:	mov	dword ptr [rip + 0x203e43], r12d
0x3215:	mov	eax, dword ptr [rbp + 4]
0x3218:	shl	r15, 4
0x321c:	sub	rsp, 8
0x3220:	add	rbx, r15
0x3223:	lea	r15, [rbp + 8]
0x3227:	mov	r8d, dword ptr [rbp]
0x322b:	mov	r11, qword ptr [rbx]
0x322e:	mov	r12, qword ptr [rbx + 8]
0x3232:	mov	rcx, r14
0x3235:	or	eax, 1
0x3238:	mov	dword ptr [rsp + 0x24], eax
0x323c:	push	qword ptr [rbp + 0x30]
0x323f:	mov	r9d, eax
0x3242:	push	qword ptr [rbp + 0x28]
0x3245:	push	r15
0x3247:	mov	rsi, r11
0x324a:	mov	rdx, qword ptr [rsp + 0x28]
0x324f:	mov	rdi, r12
0x3252:	mov	qword ptr [rsp + 0x30], r11
0x3257:	call	0x1f30


0x45e7:	mov	rdi, rbx
0x45ea:	pop	rbx
0x45eb:	jmp	0x1380


0x4036:	mov	rax, qword ptr [rsp + 0x78]
0x403b:	xor	rax, qword ptr fs:[0x28]
0x4044:	jne	0x4050


0x4046:	add	rsp, 0xb8
0x404d:	pop	rbx
0x404e:	pop	rbp
0x404f:	ret	


0x4050:	call	0x12c0


0x3f60:	mov	rax, qword ptr [rsp + 0x58]
0x3f65:	xor	rax, qword ptr fs:[0x28]
0x3f6e:	jne	0x3f75


0x3f70:	add	rsp, 0x68
0x3f74:	ret	


0x3f75:	call	0x12c0


0x1d50:	xor	edi, edi
0x1d52:	call	0x1410


0x1c40:	xor	edi, edi
0x1c42:	call	0x1410


0x19ca:	test	eax, eax
0x19cc:	jne	0x1a11


0x1a11:	lea	r12, [rip + 0x2cec]
0x1a18:	mov	r13, qword ptr [rip + 0x205669]
0x1a1f:	lea	rsi, [rip + 0x2f02]
0x1a26:	xor	edi, edi
0x1a28:	mov	edx, 5
0x1a2d:	call	0x1290


0x1a32:	mov	rsi, r13
0x1a35:	mov	rdi, rax
0x1a38:	call	0x1330


0x1a3d:	jmp	0x1911


0x1909:	test	eax, eax
0x190b:	jne	0x1a18


0x1a18:	mov	r13, qword ptr [rip + 0x205669]
0x1a1f:	lea	rsi, [rip + 0x2f02]
0x1a26:	xor	edi, edi
0x1a28:	mov	edx, 5
0x1a2d:	call	0x1290


0x14c3:	lea	rdi, [rip + 0x5a6]
0x14ca:	call	0x46d0


0x14cf:	lea	rax, [rip + 0x32f0]
0x14d6:	sub	rsp, 8
0x14da:	mov	r8, qword ptr [rip + 0x205b2f]
0x14e1:	push	0
0x14e3:	lea	rcx, [rip + 0x3297]
0x14ea:	lea	rdx, [rip + 0x3213]
0x14f1:	push	rax
0x14f2:	lea	rax, [rip + 0x207]
0x14f9:	mov	r9d, 1
0x14ff:	mov	rsi, rbx
0x1502:	mov	edi, ebp
0x1504:	push	rax
0x1505:	xor	eax, eax
0x1507:	call	0x1c60


0x150c:	mov	eax, dword ptr [rip + 0x205b7e]
0x1512:	add	rsp, 0x20
0x1516:	cmp	eax, ebp
0x1518:	jge	0x153e


0x151a:	movsxd	rdx, eax
0x151d:	add	eax, 1
0x1520:	cmp	eax, ebp
0x1522:	jl	0x15b0


0x153e:	lea	rsi, [rip + 0x328f]
0x1545:	mov	edx, 5
0x154a:	xor	edi, edi
0x154c:	call	0x1290


0x15b0:	mov	rdi, qword ptr [rbx + rdx*8 + 8]
0x15b5:	call	0x3ab0


0x1528:	mov	rdi, qword ptr [rbx + rdx*8]
0x152c:	call	0x1220


0x1220:	jmp	qword ptr [rip + 0x205c72]




0x1551:	xor	edi, edi
0x1553:	mov	rdx, rax
0x1556:	xor	esi, esi
0x1558:	xor	eax, eax
0x155a:	call	0x13e0


0x155f:	mov	edi, 1
0x1564:	call	0x1700


0x4554:	test	eax, eax
0x4556:	je	0x4594


0x4558:	call	0x1210


0x455d:	mov	r12d, dword ptr [rax]
0x4560:	mov	rdi, rbx
0x4563:	mov	rbp, rax
0x4566:	call	0x1270


0x456b:	test	r12d, r12d
0x456e:	jne	0x45a0


0x4570:	pop	rbx
0x4571:	pop	rbp
0x4572:	pop	r12
0x4574:	ret	


0x45a0:	mov	dword ptr [rbp], r12d
0x45a4:	mov	eax, 0xffffffff
0x45a9:	jmp	0x4570


0x442a:	and	ebx, 0x20
0x442d:	test	ebx, ebx
0x442f:	jne	0x4448


0x4431:	test	eax, eax
0x4433:	je	0x443f


0x4448:	test	eax, eax
0x444a:	jne	0x4468


0x443f:	pop	rbx
0x4440:	pop	rbp
0x4441:	pop	r12
0x4443:	ret	


0x4435:	test	r12, r12
0x4438:	mov	eax, 0xffffffff
0x443d:	je	0x4478


0x444c:	call	0x1210


0x4468:	pop	rbx
0x4469:	mov	eax, 0xffffffff
0x446e:	pop	rbp
0x446f:	pop	r12
0x4471:	ret	


0x4478:	call	0x1210


0x447d:	cmp	dword ptr [rax], 9
0x4480:	pop	rbx
0x4481:	pop	rbp
0x4482:	pop	r12
0x4484:	setne	al
0x4487:	movzx	eax, al
0x448a:	neg	eax
0x448c:	ret	


0x4451:	mov	dword ptr [rax], 0
0x4457:	mov	eax, 0xffffffff
0x445c:	pop	rbx
0x445d:	pop	rbp
0x445e:	pop	r12
0x4460:	ret	


0x1a82:	test	eax, eax
0x1a84:	je	0x1a9c


0x1a9c:	mov	rdi, qword ptr [rip + 0x20561d]
0x1aa3:	call	0x4410


0x1a86:	call	0x1210


0x1a8b:	cmp	byte ptr [rip + 0x20563e], 0
0x1a92:	mov	rbx, rax
0x1a95:	je	0x1ab3


0x1ab3:	lea	rsi, [rip + 0x2eee]
0x1aba:	xor	edi, edi
0x1abc:	mov	edx, 5
0x1ac1:	call	0x1290


0x1a97:	cmp	dword ptr [rax], 0x20
0x1a9a:	jne	0x1ab3


0x1ac6:	mov	rdi, qword ptr [rip + 0x20560b]
0x1acd:	mov	rbp, rax
0x1ad0:	test	rdi, rdi
0x1ad3:	je	0x1afd


0x1afd:	mov	esi, dword ptr [rbx]
0x1aff:	lea	rdx, [rip + 0x2eb2]
0x1b06:	mov	rcx, rax
0x1b09:	xor	edi, edi
0x1b0b:	xor	eax, eax
0x1b0d:	call	0x13e0


0x1ad5:	call	0x38b0


0x1b12:	jmp	0x1af2


0x1af2:	mov	edi, dword ptr [rip + 0x205520]
0x1af8:	call	0x1240


0x1240:	jmp	qword ptr [rip + 0x205c62]




0x1aa8:	test	eax, eax
0x1aaa:	jne	0x1af2


0x1aac:	add	rsp, 8
0x1ab0:	pop	rbx
0x1ab1:	pop	rbp
0x1ab2:	ret	


0x1531:	test	eax, eax
0x1533:	jne	0x1569


0x1535:	add	rsp, 8
0x1539:	xor	eax, eax
0x153b:	pop	rbx
0x153c:	pop	rbp
0x153d:	ret	


0x1569:	movsxd	rax, dword ptr [rip + 0x205b20]
0x1570:	mov	edi, 4
0x1575:	mov	rsi, qword ptr [rbx + rax*8]
0x1579:	call	0x37e0


0x157e:	lea	rsi, [rip + 0x3270]
0x1585:	mov	edx, 5
0x158a:	xor	edi, edi
0x158c:	mov	rbp, rax
0x158f:	call	0x1290


0x1594:	mov	rbx, rax
0x1597:	call	0x1210


0x159c:	mov	esi, dword ptr [rax]
0x159e:	mov	rcx, rbp
0x15a1:	mov	rdx, rbx
0x15a4:	mov	edi, 1
0x15a9:	xor	eax, eax
0x15ab:	call	0x13e0


0x1ada:	mov	esi, dword ptr [rbx]
0x1adc:	lea	rdx, [rip + 0x2ed1]
0x1ae3:	mov	rcx, rax
0x1ae6:	mov	r8, rbp
0x1ae9:	xor	edi, edi
0x1aeb:	xor	eax, eax
0x1aed:	call	0x13e0


0x15ba:	lea	rsi, [rip + 0x3223]
0x15c1:	mov	rbx, rax
0x15c4:	mov	edx, 5
0x15c9:	xor	edi, edi
0x15cb:	call	0x1290


0x15d0:	xor	edi, edi
0x15d2:	mov	rdx, rax
0x15d5:	mov	rcx, rbx
0x15d8:	xor	esi, esi
0x15da:	xor	eax, eax
0x15dc:	call	0x13e0


0x15e1:	mov	edi, 1
0x15e6:	call	0x1700


0x325c:	add	rsp, 0x20
0x3260:	mov	r11, qword ptr [rsp + 0x10]
0x3265:	cmp	r11, rax
0x3268:	ja	0x32d1


0x326a:	lea	rsi, [rax + 1]
0x326e:	lea	rax, [rip + 0x203e8b]
0x3275:	cmp	r12, rax
0x3278:	mov	qword ptr [rbx], rsi
0x327b:	je	0x328f


0x32d1:	mov	eax, dword ptr [rsp + 0x18]
0x32d5:	mov	dword ptr [r13], eax
0x32d9:	add	rsp, 0x28
0x32dd:	mov	rax, r12
0x32e0:	pop	rbx
0x32e1:	pop	rbp
0x32e2:	pop	r12
0x32e4:	pop	r13
0x32e6:	pop	r14
0x32e8:	pop	r15
0x32ea:	ret	


0x328f:	mov	rdi, rsi
0x3292:	mov	qword ptr [rsp + 0x10], rsi
0x3297:	call	0x40f0


0x327d:	mov	rdi, r12
0x3280:	mov	qword ptr [rsp + 0x10], rsi
0x3285:	call	0x11f0


0x328a:	mov	rsi, qword ptr [rsp + 0x10]
0x328f:	mov	rdi, rsi
0x3292:	mov	qword ptr [rsp + 0x10], rsi
0x3297:	call	0x40f0


0x329c:	sub	rsp, 8
0x32a0:	mov	qword ptr [rbx + 8], rax
0x32a4:	mov	r8d, dword ptr [rbp]
0x32a8:	push	qword ptr [rbp + 0x30]
0x32ab:	push	qword ptr [rbp + 0x28]
0x32ae:	mov	rcx, r14
0x32b1:	push	r15
0x32b3:	mov	r9d, dword ptr [rsp + 0x3c]
0x32b8:	mov	rdi, rax
0x32bb:	mov	rdx, qword ptr [rsp + 0x28]
0x32c0:	mov	rsi, qword ptr [rsp + 0x30]
0x32c5:	mov	r12, rax
0x32c8:	call	0x1f30


0x39e2:	mov	rdi, qword ptr [rsp + 0x38]
0x39e7:	xor	rdi, qword ptr fs:[0x28]
0x39f0:	jne	0x39fc


0x39f2:	add	rsp, 0x48
0x39f6:	ret	


0x39fc:	call	0x12c0


0x372f:	mov	rcx, qword ptr [rsp + 0x38]
0x3734:	xor	rcx, qword ptr fs:[0x28]
0x373d:	jne	0x3749


0x373f:	add	rsp, 0x48
0x3743:	ret	


0x3749:	call	0x12c0


0x37bb:	mov	rdx, qword ptr [rsp + 0x38]
0x37c0:	xor	rdx, qword ptr fs:[0x28]
0x37c9:	jne	0x37d5


0x37cb:	add	rsp, 0x48
0x37cf:	ret	


0x37d5:	call	0x12c0


0x394f:	mov	rcx, qword ptr [rsp + 0x38]
0x3954:	xor	rcx, qword ptr fs:[0x28]
0x395d:	jne	0x3969


0x395f:	add	rsp, 0x48
0x3963:	ret	


0x3969:	call	0x12c0


0x387e:	mov	rsi, qword ptr [rsp + 0x38]
0x3883:	xor	rsi, qword ptr fs:[0x28]
0x388c:	jne	0x3893


0x388e:	add	rsp, 0x48
0x3892:	ret	


0x3893:	call	0x12c0


0x32cd:	add	rsp, 0x20
0x32d1:	mov	eax, dword ptr [rsp + 0x18]
0x32d5:	mov	dword ptr [r13], eax
0x32d9:	add	rsp, 0x28
0x32dd:	mov	rax, r12
0x32e0:	pop	rbx
0x32e1:	pop	rbp
0x32e2:	pop	r12
0x32e4:	pop	r13
0x32e6:	pop	r14
0x32e8:	pop	r15
0x32ea:	ret	


0x351c:	lea	rsi, [rax + 1]
0x3520:	mov	qword ptr [rsp + 0x48], rax
0x3525:	add	rsp, 0x20
0x3529:	mov	rdi, rsi
0x352c:	mov	qword ptr [rsp + 0x18], rsi
0x3531:	call	0x40f0


0x3536:	mov	qword ptr [rsp + 0x10], rax
0x353b:	sub	rsp, 8
0x353f:	push	qword ptr [rbx + 0x30]
0x3542:	push	qword ptr [rbx + 0x28]
0x3545:	mov	r10, qword ptr [rsp + 0x38]
0x354a:	mov	r9d, ebp
0x354d:	mov	r8d, dword ptr [rbx]
0x3550:	mov	rcx, r15
0x3553:	mov	rdx, r14
0x3556:	mov	rdi, rax
0x3559:	push	r10
0x355b:	mov	rsi, qword ptr [rsp + 0x38]
0x3560:	call	0x1f30


0x3565:	mov	eax, dword ptr [rsp + 0x2c]
0x3569:	add	rsp, 0x20
0x356d:	test	r12, r12
0x3570:	mov	dword ptr [r13], eax
0x3574:	je	0x357f


0x357f:	mov	rax, qword ptr [rsp + 0x10]
0x3584:	add	rsp, 0x38
0x3588:	pop	rbx
0x3589:	pop	rbp
0x358a:	pop	r12
0x358c:	pop	r13
0x358e:	pop	r14
0x3590:	pop	r15
0x3592:	ret	


0x3576:	mov	r11, qword ptr [rsp + 0x28]
0x357b:	mov	qword ptr [r12], r11
0x357f:	mov	rax, qword ptr [rsp + 0x10]
0x3584:	add	rsp, 0x38
0x3588:	pop	rbx
0x3589:	pop	rbp
0x358a:	pop	r12
0x358c:	pop	r13
0x358e:	pop	r14
0x3590:	pop	r15
0x3592:	ret	


0x3491:	mov	dword ptr [rbp], r12d
0x3495:	add	rsp, 0x38
0x3499:	pop	rbx
0x349a:	pop	rbp
0x349b:	pop	r12
0x349d:	pop	r13
0x349f:	pop	r14
0x34a1:	pop	r15
0x34a3:	ret	


0x1d94:	jmp	0x1d68


0x1c55:	jmp	0x1b99


0x469d:	add	rbx, 1
0x46a1:	cmp	rbp, rbx
0x46a4:	jne	0x4690


0x4690:	mov	rdx, r15
0x4693:	mov	rsi, r14
0x4696:	mov	edi, r13d
0x4699:	call	qword ptr [r12 + rbx*8]






0x3d60:	lea	rsi, [rip + 0x12f1]
0x3d67:	mov	edx, 5
0x3d6c:	xor	edi, edi
0x3d6e:	mov	r14, qword ptr [rbx + 0x18]
0x3d72:	mov	r13, qword ptr [rbx + 0x10]
0x3d76:	mov	r12, qword ptr [rbx + 8]
0x3d7a:	mov	rbx, qword ptr [rbx]
0x3d7d:	call	0x1290


0x3b80:	mov	r9, qword ptr [rbx + 0x38]
0x3b84:	mov	rax, qword ptr [rbx + 0x10]
0x3b88:	lea	rsi, [rip + 0x1569]
0x3b8f:	mov	r8, qword ptr [rbx + 8]
0x3b93:	mov	edx, 5
0x3b98:	xor	edi, edi
0x3b9a:	mov	r13, qword ptr [rbx + 0x30]
0x3b9e:	mov	r12, qword ptr [rbx + 0x28]
0x3ba2:	mov	qword ptr [rsp + 0x10], r9
0x3ba7:	mov	r15, qword ptr [rbx + 0x20]
0x3bab:	mov	r14, qword ptr [rbx + 0x18]
0x3baf:	mov	qword ptr [rsp], rax
0x3bb3:	mov	qword ptr [rsp + 8], r8
0x3bb8:	mov	rbx, qword ptr [rbx]
0x3bbb:	call	0x1290


0x3c88:	mov	rbx, qword ptr [rbx]
0x3c8b:	lea	rsi, [rip + 0x126d]
0x3c92:	mov	edx, 5
0x3c97:	xor	edi, edi
0x3c99:	call	0x1290


0x3cc8:	mov	r12, qword ptr [rbx + 8]
0x3ccc:	lea	rsi, [rip + 0x123c]
0x3cd3:	mov	rbx, qword ptr [rbx]
0x3cd6:	mov	edx, 5
0x3cdb:	xor	edi, edi
0x3cdd:	call	0x1290


0x3de8:	mov	r8, qword ptr [rbx + 8]
0x3dec:	mov	r12, qword ptr [rbx + 0x28]
0x3df0:	lea	rsi, [rip + 0x12a9]
0x3df7:	mov	r15, qword ptr [rbx + 0x20]
0x3dfb:	mov	r14, qword ptr [rbx + 0x18]
0x3dff:	mov	edx, 5
0x3e04:	mov	r13, qword ptr [rbx + 0x10]
0x3e08:	xor	edi, edi
0x3e0a:	mov	rbx, qword ptr [rbx]
0x3e0d:	mov	qword ptr [rsp], r8
0x3e11:	call	0x1290


0x3d10:	mov	r13, qword ptr [rbx + 0x10]
0x3d14:	mov	r12, qword ptr [rbx + 8]
0x3d18:	lea	rsi, [rip + 0x1207]
0x3d1f:	mov	rbx, qword ptr [rbx]
0x3d22:	mov	edx, 5
0x3d27:	xor	edi, edi
0x3d29:	call	0x1290


0x3e50:	mov	r9, qword ptr [rbx + 0x10]
0x3e54:	mov	r13, qword ptr [rbx + 0x30]
0x3e58:	lea	rsi, [rip + 0x1269]
0x3e5f:	mov	r12, qword ptr [rbx + 0x28]
0x3e63:	mov	r15, qword ptr [rbx + 0x20]
0x3e67:	mov	edx, 5
0x3e6c:	mov	r14, qword ptr [rbx + 0x18]
0x3e70:	mov	r8, qword ptr [rbx + 8]
0x3e74:	xor	edi, edi
0x3e76:	mov	qword ptr [rsp + 8], r9
0x3e7b:	mov	rbx, qword ptr [rbx]
0x3e7e:	mov	qword ptr [rsp], r8
0x3e82:	call	0x1290


0x3c30:	mov	r10, qword ptr [rbx + 0x40]
0x3c34:	mov	r9, qword ptr [rbx + 0x38]
0x3c38:	lea	rsi, [rip + 0x14e9]
0x3c3f:	mov	rax, qword ptr [rbx + 0x10]
0x3c43:	mov	r8, qword ptr [rbx + 8]
0x3c47:	mov	edx, 5
0x3c4c:	mov	r13, qword ptr [rbx + 0x30]
0x3c50:	mov	r12, qword ptr [rbx + 0x28]
0x3c54:	mov	r15, qword ptr [rbx + 0x20]
0x3c58:	mov	r14, qword ptr [rbx + 0x18]
0x3c5c:	mov	rbx, qword ptr [rbx]
0x3c5f:	mov	qword ptr [rsp + 0x18], r10
0x3c64:	mov	qword ptr [rsp + 0x10], r9
0x3c69:	mov	qword ptr [rsp], rax
0x3c6d:	mov	qword ptr [rsp + 8], r8
0x3c72:	xor	edi, edi
0x3c74:	call	0x1290


0x3bf6:	add	rsp, 0x28
0x3bfa:	pop	rbx
0x3bfb:	pop	rbp
0x3bfc:	pop	r12
0x3bfe:	pop	r13
0x3c00:	pop	r14
0x3c02:	pop	r15
0x3c04:	ret	


0x3db8:	mov	r15, qword ptr [rbx + 0x20]
0x3dbc:	lea	rsi, [rip + 0x12b5]
0x3dc3:	mov	edx, 5
0x3dc8:	xor	edi, edi
0x3dca:	mov	r14, qword ptr [rbx + 0x18]
0x3dce:	mov	r13, qword ptr [rbx + 0x10]
0x3dd2:	mov	r12, qword ptr [rbx + 8]
0x3dd6:	mov	rbx, qword ptr [rbx]
0x3dd9:	call	0x1290


0x3dde:	push	r15
0x3de0:	jmp	0x3d86


0x3d86:	push	r14
0x3d88:	mov	rdx, rax
0x3d8b:	mov	r9, r13
0x3d8e:	mov	r8, r12
0x3d91:	mov	rcx, rbx
0x3d94:	mov	rdi, rbp
0x3d97:	mov	esi, 1
0x3d9c:	xor	eax, eax
0x3d9e:	call	0x1430


0x3da3:	pop	rax
0x3da4:	pop	rdx
0x3da5:	add	rsp, 0x28
0x3da9:	pop	rbx
0x3daa:	pop	rbp
0x3dab:	pop	r12
0x3dad:	pop	r13
0x3daf:	pop	r14
0x3db1:	pop	r15
0x3db3:	ret	


0x3e87:	push	r13
0x3e89:	push	r12
0x3e8b:	push	r15
0x3e8d:	push	r14
0x3e8f:	mov	r9, qword ptr [rsp + 0x28]
0x3e94:	jmp	0x3e23


0x3e23:	mov	r8, qword ptr [rsp + 0x20]
0x3e28:	mov	rcx, rbx
0x3e2b:	mov	rdx, rax
0x3e2e:	mov	rdi, rbp
0x3e31:	mov	esi, 1
0x3e36:	xor	eax, eax
0x3e38:	call	0x1430


0x3e3d:	add	rsp, 0x20
0x3e41:	add	rsp, 0x28
0x3e45:	pop	rbx
0x3e46:	pop	rbp
0x3e47:	pop	r12
0x3e49:	pop	r13
0x3e4b:	pop	r14
0x3e4d:	pop	r15
0x3e4f:	ret	


0x3d2e:	add	rsp, 0x28
0x3d32:	mov	r9, r13
0x3d35:	mov	r8, r12
0x3d38:	mov	rcx, rbx
0x3d3b:	mov	rdi, rbp
0x3d3e:	mov	rdx, rax
0x3d41:	pop	rbx
0x3d42:	pop	rbp
0x3d43:	pop	r12
0x3d45:	pop	r13
0x3d47:	pop	r14
0x3d49:	pop	r15
0x3d4b:	mov	esi, 1
0x3d50:	xor	eax, eax
0x3d52:	jmp	0x1430


0x3e16:	sub	rsp, 8
0x3e1a:	mov	r9, r13
0x3e1d:	push	r12
0x3e1f:	push	r15
0x3e21:	push	r14
0x3e23:	mov	r8, qword ptr [rsp + 0x20]
0x3e28:	mov	rcx, rbx
0x3e2b:	mov	rdx, rax
0x3e2e:	mov	rdi, rbp
0x3e31:	mov	esi, 1
0x3e36:	xor	eax, eax
0x3e38:	call	0x1430


0x3ce2:	add	rsp, 0x28
0x3ce6:	mov	r8, r12
0x3ce9:	mov	rcx, rbx
0x3cec:	mov	rdi, rbp
0x3cef:	mov	rdx, rax
0x3cf2:	mov	esi, 1
0x3cf7:	pop	rbx
0x3cf8:	pop	rbp
0x3cf9:	pop	r12
0x3cfb:	pop	r13
0x3cfd:	pop	r14
0x3cff:	pop	r15
0x3d01:	xor	eax, eax
0x3d03:	jmp	0x1430


0x3c9e:	add	rsp, 0x28
0x3ca2:	mov	rcx, rbx
0x3ca5:	mov	rdi, rbp
0x3ca8:	pop	rbx
0x3ca9:	pop	rbp
0x3caa:	pop	r12
0x3cac:	pop	r13
0x3cae:	pop	r14
0x3cb0:	pop	r15
0x3cb2:	mov	rdx, rax
0x3cb5:	mov	esi, 1
0x3cba:	xor	eax, eax
0x3cbc:	jmp	0x1430


0x3bc0:	sub	rsp, 8
0x3bc4:	mov	r9, qword ptr [rsp + 0x18]
0x3bc9:	mov	rdx, rax
0x3bcc:	mov	rcx, rbx
0x3bcf:	mov	esi, 1
0x3bd4:	mov	rdi, rbp
0x3bd7:	xor	eax, eax
0x3bd9:	push	r9
0x3bdb:	push	r13
0x3bdd:	push	r12
0x3bdf:	push	r15
0x3be1:	push	r14
0x3be3:	mov	r9, qword ptr [rsp + 0x30]
0x3be8:	mov	r8, qword ptr [rsp + 0x38]
0x3bed:	call	0x1430


0x3d82:	sub	rsp, 8
0x3d86:	push	r14
0x3d88:	mov	rdx, rax
0x3d8b:	mov	r9, r13
0x3d8e:	mov	r8, r12
0x3d91:	mov	rcx, rbx
0x3d94:	mov	rdi, rbp
0x3d97:	mov	esi, 1
0x3d9c:	xor	eax, eax
0x3d9e:	call	0x1430


0x2ad0:	sub	rsp, 8
0x2ad4:	mov	rcx, rbp
0x2ad7:	mov	rsi, r13
0x2ada:	push	qword ptr [rsp + 0x68]
0x2ade:	push	qword ptr [rsp + 0x78]
0x2ae2:	mov	rdi, r14
0x2ae5:	push	0
0x2ae7:	mov	r9d, dword ptr [rsp + 0x98]
0x2aef:	mov	r8d, dword ptr [rsp + 0x28]
0x2af4:	mov	rdx, qword ptr [rsp + 0x30]
0x2af9:	and	r9d, 0xfffffffd
0x2afd:	call	0x1f30


0x2b02:	add	rsp, 0x20
0x2b06:	mov	r15, rax
0x2b09:	mov	rbx, qword ptr [rsp + 0xa8]
0x2b11:	xor	rbx, qword ptr fs:[0x28]
0x2b1a:	mov	rax, r15
0x2b1d:	jne	0x3123


0x2b23:	add	rsp, 0xb8
0x2b2a:	pop	rbx
0x2b2b:	pop	rbp
0x2b2c:	pop	r12
0x2b2e:	pop	r13
0x2b30:	pop	r14
0x2b32:	pop	r15
0x2b34:	ret	


0x3123:	call	0x12c0


0x30cd:	sub	rsp, 8
0x30d1:	mov	r8d, 5
0x30d7:	mov	rcx, r11
0x30da:	push	qword ptr [rsp + 0x68]
0x30de:	push	qword ptr [rsp + 0x78]
0x30e2:	mov	rdi, r14
0x30e5:	push	qword ptr [rsp + 0x38]
0x30e9:	mov	r9d, dword ptr [rsp + 0x98]
0x30f1:	mov	rdx, qword ptr [rsp + 0x30]
0x30f6:	mov	rsi, qword ptr [rsp + 0x70]
0x30fb:	call	0x1f30


0x3100:	add	rsp, 0x20
0x3104:	mov	r15, rax
0x3107:	jmp	0x2b09


0x2b09:	mov	rbx, qword ptr [rsp + 0xa8]
0x2b11:	xor	rbx, qword ptr fs:[0x28]
0x2b1a:	mov	rax, r15
0x2b1d:	jne	0x3123


0x11e0:	push	qword ptr [rip + 0x205c8a]
0x11e6:	jmp	qword ptr [rip + 0x205c8c]


0x11ec:	nop	dword ptr [rax]


0x11f6:	push	0
0x11fb:	jmp	0x11e0


0x1206:	push	1
0x120b:	jmp	0x11e0


0x1216:	push	2
0x121b:	jmp	0x11e0


0x1226:	push	3
0x122b:	jmp	0x11e0


0x1236:	push	4
0x123b:	jmp	0x11e0


0x1246:	push	5
0x124b:	jmp	0x11e0


0x1256:	push	6
0x125b:	jmp	0x11e0


0x1266:	push	7
0x126b:	jmp	0x11e0


0x1276:	push	8
0x127b:	jmp	0x11e0


0x1286:	push	9
0x128b:	jmp	0x11e0


0x1296:	push	0xa
0x129b:	jmp	0x11e0


0x12a6:	push	0xb
0x12ab:	jmp	0x11e0


0x12b6:	push	0xc
0x12bb:	jmp	0x11e0


0x12c6:	push	0xd
0x12cb:	jmp	0x11e0


0x12d6:	push	0xe
0x12db:	jmp	0x11e0


0x12e6:	push	0xf
0x12eb:	jmp	0x11e0


0x12f6:	push	0x10
0x12fb:	jmp	0x11e0


0x1306:	push	0x11
0x130b:	jmp	0x11e0


0x1316:	push	0x12
0x131b:	jmp	0x11e0


0x1320:	jmp	qword ptr [rip + 0x205bf2]




0x1326:	push	0x13
0x132b:	jmp	0x11e0


0x1336:	push	0x14
0x133b:	jmp	0x11e0


0x1346:	push	0x15
0x134b:	jmp	0x11e0


0x1356:	push	0x16
0x135b:	jmp	0x11e0


0x1366:	push	0x17
0x136b:	jmp	0x11e0


0x1376:	push	0x18
0x137b:	jmp	0x11e0


0x1386:	push	0x19
0x138b:	jmp	0x11e0


0x1396:	push	0x1a
0x139b:	jmp	0x11e0


0x13a6:	push	0x1b
0x13ab:	jmp	0x11e0


0x13b6:	push	0x1c
0x13bb:	jmp	0x11e0


0x13c6:	push	0x1d
0x13cb:	jmp	0x11e0


0x13d6:	push	0x1e
0x13db:	jmp	0x11e0


0x13e6:	push	0x1f
0x13eb:	jmp	0x11e0


0x13f6:	push	0x20
0x13fb:	jmp	0x11e0


0x1406:	push	0x21
0x140b:	jmp	0x11e0


0x1416:	push	0x22
0x141b:	jmp	0x11e0


0x1426:	push	0x23
0x142b:	jmp	0x11e0


0x1436:	push	0x24
0x143b:	jmp	0x11e0


0x1440:	jmp	qword ptr [rip + 0x205b62]




0x1446:	push	0x25
0x144b:	jmp	0x11e0


0x1450:	jmp	qword ptr [rip + 0x205b5a]




0x1456:	push	0x26
0x145b:	jmp	0x11e0


0x1460:	jmp	qword ptr [rip + 0x205b52]




0x1466:	push	0x27
0x146b:	jmp	0x11e0


0x15eb:	nop	dword ptr [rax + rax]


0x161a:	hlt	


0x161b:	nop	dword ptr [rax + rax]


0x1652:	nop	dword ptr [rax]
0x1656:	nop	word ptr cs:[rax + rax]


0x16a2:	nop	dword ptr [rax]
0x16a6:	nop	word ptr cs:[rax + rax]


0x16ea:	nop	word ptr [rax + rax]


0x16fa:	nop	word ptr [rax + rax]


0x1a42:	nop	word ptr cs:[rax + rax]
0x1a4c:	nop	dword ptr [rax]


0x1a58:	nop	dword ptr [rax + rax]


0x1a68:	nop	dword ptr [rax + rax]


0x1b14:	nop	word ptr cs:[rax + rax]
0x1b1e:	nop	


0x1c5f:	nop	


0x1d9b:	nop	dword ptr [rax + rax]


0x1e3f:	nop	


0x1f27:	nop	word ptr [rax + rax]


0x1fc3:	mov	byte ptr [rsp + 0xe], 1
0x1fc8:	mov	byte ptr [rsp + 0x7c], 0
0x1fcd:	xor	r12d, r12d
0x1fd0:	mov	qword ptr [rsp + 0x50], 0
0x1fd9:	mov	byte ptr [rsp + 0xf], 1
0x1fde:	mov	byte ptr [rsp + 0xd], 0
0x1fe3:	lea	rax, [rip + 0x2a3b]
0x1fea:	mov	qword ptr [rsp + 0x18], 1
0x1ff3:	xor	r15d, r15d
0x1ff6:	mov	dword ptr [rsp + 8], 2
0x1ffe:	mov	qword ptr [rsp + 0x48], rax
0x2003:	xor	r11d, r11d
0x2006:	mov	rax, rbp
0x2009:	mov	r8d, r12d
0x200c:	mov	rbp, r11
0x200f:	mov	r11, rax
0x2012:	nop	word ptr [rax + rax]
0x2018:	cmp	r11, rbp
0x201b:	setne	r12b
0x201f:	cmp	r11, -1
0x2023:	jne	0x2032


0x2025:	mov	rax, qword ptr [rsp + 0x10]
0x202a:	cmp	byte ptr [rax + rbp], 0
0x202e:	setne	r12b
0x2032:	test	r12b, r12b
0x2035:	je	0x2690


0x2032:	test	r12b, r12b
0x2035:	je	0x2690


0x2690:	cmp	dword ptr [rsp + 8], 2
0x2695:	movzx	ebx, byte ptr [rsp + 0xf]
0x269a:	mov	r12d, r8d
0x269d:	mov	rbp, r11
0x26a0:	sete	dl
0x26a3:	mov	eax, ebx
0x26a5:	test	r15, r15
0x26a8:	sete	cl
0x26ab:	and	eax, edx
0x26ad:	and	al, cl
0x26af:	jne	0x3116


0x203b:	cmp	dword ptr [rsp + 8], 2
0x2040:	mov	rdi, qword ptr [rsp + 0x10]
0x2045:	lea	r9, [rdi + rbp]
0x2049:	setne	al
0x204c:	and	al, byte ptr [rsp + 0xd]
0x2050:	mov	r10d, eax
0x2053:	je	0x2100


0x26b5:	mov	eax, ebx
0x26b7:	xor	eax, 1
0x26ba:	and	dl, al
0x26bc:	je	0x302c


0x3116:	mov	dword ptr [rsp + 8], 2
0x311e:	jmp	0x2ab9


0x2100:	movzx	ebx, byte ptr [r9]
0x2104:	cmp	bl, 0x7e
0x2107:	ja	0x2428


0x2059:	mov	rax, qword ptr [rsp + 0x18]
0x205e:	test	rax, rax
0x2061:	je	0x2490


0x302c:	mov	rbx, qword ptr [rsp + 0x48]
0x3031:	test	rbx, rbx
0x3034:	je	0x3062


0x26c2:	cmp	byte ptr [rsp + 0x7c], 0
0x26c7:	je	0x302a


0x2ab9:	cmp	byte ptr [rsp + 0xd], 0
0x2abe:	je	0x2ad0


0x210d:	lea	rcx, [rip + 0x2998]
0x2114:	movzx	edx, bl
0x2117:	movsxd	rax, dword ptr [rcx + rdx*4]
0x211b:	add	rax, rcx
0x211e:	jmp	rax


0x2428:	cmp	qword ptr [rsp + 0x58], 1
0x242e:	jne	0x27d8


0x2490:	movzx	ebx, byte ptr [r9]
0x2494:	cmp	bl, 0x7e
0x2497:	ja	0x2420


0x2067:	cmp	r11, -1
0x206b:	lea	rbx, [rbp + rax]
0x2070:	jne	0x20a0


0x3062:	cmp	r13, r15
0x3065:	jbe	0x2b09


0x3036:	test	al, al
0x3038:	je	0x3062


0x302a:	mov	eax, edx
0x302c:	mov	rbx, qword ptr [rsp + 0x48]
0x3031:	test	rbx, rbx
0x3034:	je	0x3062


0x26cd:	cmp	byte ptr [rsp + 0xe], 0
0x26d2:	jne	0x30cd


0x2ac0:	test	al, al
0x2ac2:	mov	eax, 4
0x2ac7:	cmove	eax, dword ptr [rsp + 8]
0x2acc:	mov	dword ptr [rsp + 8], eax


0x2434:	mov	qword ptr [rsp + 0x38], r11
0x2439:	mov	byte ptr [rsp + 0x30], r8b
0x243e:	mov	byte ptr [rsp + 0x28], r10b
0x2443:	call	0x1460


0x27d8:	lea	rax, [rsp + 0xa0]
0x27e0:	cmp	r11, -1
0x27e4:	mov	qword ptr [rsp + 0xa0], 0
0x27f0:	mov	qword ptr [rsp + 0x28], rax
0x27f5:	jne	0x2824


0x2499:	lea	rcx, [rip + 0x2808]
0x24a0:	movzx	edx, bl
0x24a3:	movsxd	rax, dword ptr [rcx + rdx*4]
0x24a7:	add	rax, rcx
0x24aa:	jmp	rax


0x2420:	xor	r10d, r10d
0x2423:	nop	dword ptr [rax + rax]
0x2428:	cmp	qword ptr [rsp + 0x58], 1
0x242e:	jne	0x27d8


0x2072:	cmp	rax, 1
0x2076:	jbe	0x20a0


0x20a0:	cmp	rbx, r11
0x20a3:	mov	byte ptr [rsp + 0x28], r10b
0x20a8:	ja	0x2660


0x306b:	mov	byte ptr [r14 + r15], 0
0x3070:	jmp	0x2b09


0x303a:	movzx	ecx, byte ptr [rbx]
0x303d:	mov	rax, rbx
0x3040:	test	cl, cl
0x3042:	je	0x3062


0x26d8:	test	r13, r13
0x26db:	sete	al
0x26de:	cmp	qword ptr [rsp + 0x50], 0
0x26e4:	setne	dl
0x26e7:	and	al, dl
0x26e9:	je	0x310c


0x27f7:	mov	rdi, qword ptr [rsp + 0x10]
0x27fc:	mov	byte ptr [rsp + 0x40], r8b
0x2801:	mov	byte ptr [rsp + 0x38], r10b
0x2806:	mov	qword ptr [rsp + 0x30], r9
0x280b:	call	0x12b0


0x2824:	lea	rax, [rsp + 0x9c]
0x282c:	xor	ecx, ecx
0x282e:	mov	byte ptr [rsp + 0x7e], bl
0x2832:	mov	byte ptr [rsp + 0x7d], r8b
0x2837:	mov	rbx, rcx
0x283a:	mov	qword ptr [rsp + 0x88], r9
0x2842:	mov	qword ptr [rsp + 0x38], rax
0x2847:	mov	byte ptr [rsp + 0x7f], r10b
0x284c:	mov	qword ptr [rsp + 0x80], r15
0x2854:	mov	qword ptr [rsp + 0x40], r14
0x2859:	mov	qword ptr [rsp + 0x70], r13
0x285e:	mov	qword ptr [rsp + 0x30], r11
0x2863:	mov	rax, qword ptr [rsp + 0x10]
0x2868:	lea	r14, [rbp + rbx]
0x286d:	mov	rdx, qword ptr [rsp + 0x30]
0x2872:	mov	rcx, qword ptr [rsp + 0x28]
0x2877:	mov	rdi, qword ptr [rsp + 0x38]
0x287c:	lea	r13, [rax + r14]
0x2880:	sub	rdx, r14
0x2883:	mov	rsi, r13
0x2886:	call	0x4380


0x2078:	mov	byte ptr [rsp + 0x38], r8b
0x207d:	mov	byte ptr [rsp + 0x30], r10b
0x2082:	mov	qword ptr [rsp + 0x28], r9
0x2087:	call	0x12b0


0x20ae:	mov	rdx, qword ptr [rsp + 0x18]
0x20b3:	mov	rsi, qword ptr [rsp + 0x48]
0x20b8:	mov	rdi, r9
0x20bb:	mov	qword ptr [rsp + 0x40], r11
0x20c0:	mov	byte ptr [rsp + 0x38], r8b
0x20c5:	mov	qword ptr [rsp + 0x30], r9
0x20ca:	call	0x1320


0x2660:	xor	r10d, r10d
0x2663:	jmp	0x2100


0x3044:	mov	rdx, r15
0x3047:	sub	rax, r15
0x304a:	cmp	r13, rdx
0x304d:	jbe	0x3053


0x310c:	movzx	eax, byte ptr [rsp + 0x7c]
0x3111:	jmp	0x302c


0x26ef:	mov	r13, qword ptr [rsp + 0x50]
0x26f4:	lea	rbx, [rip + 0x232a]
0x26fb:	mov	byte ptr [r14], 0x27
0x26ff:	mov	dword ptr [rsp + 8], 2
0x2707:	mov	r15d, 1
0x270d:	mov	qword ptr [rsp + 0x18], 1
0x2716:	mov	byte ptr [rsp + 0xf], 0
0x271b:	mov	qword ptr [rsp + 0x48], rbx
0x2720:	mov	byte ptr [rsp + 0x7c], al
0x2724:	jmp	0x2003


0x3053:	add	rdx, 1
0x3057:	movzx	ecx, byte ptr [rax + rdx]
0x305b:	test	cl, cl
0x305d:	jne	0x304a


0x304f:	mov	byte ptr [r14 + rdx], cl
0x3053:	add	rdx, 1
0x3057:	movzx	ecx, byte ptr [rax + rdx]
0x305b:	test	cl, cl
0x305d:	jne	0x304a


0x2003:	xor	r11d, r11d
0x2006:	mov	rax, rbp
0x2009:	mov	r8d, r12d
0x200c:	mov	rbp, r11
0x200f:	mov	r11, rax
0x2012:	nop	word ptr [rax + rax]
0x2018:	cmp	r11, rbp
0x201b:	setne	r12b
0x201f:	cmp	r11, -1
0x2023:	jne	0x2032


0x305f:	mov	r15, rdx
0x3062:	cmp	r13, r15
0x3065:	jbe	0x2b09


0x304a:	cmp	r13, rdx
0x304d:	jbe	0x3053


0x20cf:	test	eax, eax
0x20d1:	mov	r9, qword ptr [rsp + 0x30]
0x20d6:	movzx	r8d, byte ptr [rsp + 0x38]
0x20dc:	mov	r11, qword ptr [rsp + 0x40]
0x20e1:	jne	0x2660


0x20e7:	cmp	byte ptr [rsp + 0xf], 0
0x20ec:	movzx	r10d, byte ptr [rsp + 0x28]
0x20f2:	jne	0x3075


0x3075:	cmp	dword ptr [rsp + 8], 2
0x307a:	movzx	ebx, byte ptr [rsp + 0xf]
0x307f:	mov	rbp, r11
0x3082:	sete	al
0x3085:	mov	byte ptr [rsp + 0xd], bl
0x3089:	jmp	0x2ab9


0x288b:	test	rax, rax
0x288e:	mov	r15, rax
0x2891:	je	0x28e1


0x28e1:	mov	edx, r12d
0x28e4:	mov	rdi, rbx
0x28e7:	movzx	r8d, byte ptr [rsp + 0x7d]
0x28ed:	xor	edx, 1
0x28f0:	movzx	ebx, byte ptr [rsp + 0x7e]
0x28f5:	movzx	r10d, byte ptr [rsp + 0x7f]
0x28fb:	and	dl, byte ptr [rsp + 0xd]
0x28ff:	mov	r15, qword ptr [rsp + 0x80]
0x2907:	mov	r14, qword ptr [rsp + 0x40]
0x290c:	mov	r13, qword ptr [rsp + 0x70]
0x2911:	mov	r11, qword ptr [rsp + 0x30]
0x2916:	cmp	rdi, 1
0x291a:	jbe	0x2f1b


0x2893:	cmp	rax, -1
0x2897:	je	0x2eb5


0x2f1b:	mov	eax, edx
0x2f1d:	jmp	0x2477


0x2920:	mov	rcx, rdi
0x2923:	xor	esi, esi
0x2925:	movzx	r9d, byte ptr [rsp + 0xf]
0x292b:	add	rcx, rbp
0x292e:	mov	rdi, qword ptr [rsp + 0x10]
0x2933:	jmp	0x29ee


0x2eb5:	mov	rdi, rbx
0x2eb8:	movzx	r8d, byte ptr [rsp + 0x7d]
0x2ebe:	movzx	ebx, byte ptr [rsp + 0x7e]
0x2ec3:	movzx	r10d, byte ptr [rsp + 0x7f]
0x2ec9:	mov	r15, qword ptr [rsp + 0x80]
0x2ed1:	xor	r12d, r12d
0x2ed4:	mov	r14, qword ptr [rsp + 0x40]
0x2ed9:	mov	r13, qword ptr [rsp + 0x70]
0x2ede:	mov	r11, qword ptr [rsp + 0x30]
0x2ee3:	movzx	edx, byte ptr [rsp + 0xd]
0x2ee8:	jmp	0x2916


0x289d:	cmp	rax, -2
0x28a1:	je	0x2e41


0x2477:	test	al, al
0x2479:	jne	0x2e11


0x29ee:	test	dl, dl
0x29f0:	jne	0x2940


0x2916:	cmp	rdi, 1
0x291a:	jbe	0x2f1b


0x2e41:	mov	r11, qword ptr [rsp + 0x30]
0x2e46:	mov	rsi, r14
0x2e49:	mov	rcx, r13
0x2e4c:	mov	rax, rbx
0x2e4f:	mov	rdi, rbx
0x2e52:	movzx	r8d, byte ptr [rsp + 0x7d]
0x2e58:	movzx	ebx, byte ptr [rsp + 0x7e]
0x2e5d:	mov	r9, qword ptr [rsp + 0x88]
0x2e65:	cmp	rsi, r11
0x2e68:	movzx	r10d, byte ptr [rsp + 0x7f]
0x2e6e:	mov	r15, qword ptr [rsp + 0x80]
0x2e76:	mov	r14, qword ptr [rsp + 0x40]
0x2e7b:	mov	r13, qword ptr [rsp + 0x70]
0x2e80:	jae	0x2ea8


0x28a7:	cmp	dword ptr [rsp + 8], 2
0x28ac:	sete	al
0x28af:	and	al, byte ptr [rsp + 0xf]
0x28b3:	jne	0x2a50


0x247f:	cmp	dword ptr [rsp + 8], 2
0x2484:	sete	dl
0x2487:	jmp	0x2158


0x2e11:	movzx	edx, byte ptr [rsp + 0xd]
0x2e16:	xor	r12d, r12d
0x2e19:	jmp	0x2920


0x29f6:	mov	eax, esi
0x29f8:	xor	eax, 1
0x29fb:	and	eax, r8d
0x29fe:	test	r10b, r10b
0x2a01:	je	0x2a11


0x2940:	cmp	dword ptr [rsp + 8], 2
0x2945:	sete	al
0x2948:	test	r9b, r9b
0x294b:	jne	0x2e00


0x2e82:	cmp	byte ptr [rcx], 0
0x2e85:	jne	0x2e97


0x2ea8:	movzx	edx, byte ptr [rsp + 0xd]
0x2ead:	xor	r12d, r12d
0x2eb0:	jmp	0x2916


0x28b9:	mov	edi, dword ptr [rsp + 0x9c]
0x28c0:	call	0x1450


0x2a50:	cmp	r15, 1
0x2a54:	je	0x28b9


0x2158:	cmp	byte ptr [rsp + 0xd], 1
0x215d:	jne	0x2272


0x2a11:	add	rbp, 1
0x2a15:	cmp	rbp, rcx
0x2a18:	jae	0x219c


0x2a03:	cmp	r13, r15
0x2a06:	jbe	0x2a0d


0x2951:	mov	esi, r8d
0x2954:	xor	esi, 1
0x2957:	and	al, sil
0x295a:	je	0x298b


0x2e00:	movzx	ebx, byte ptr [rsp + 0xf]
0x2e05:	mov	rbp, r11
0x2e08:	mov	byte ptr [rsp + 0xd], bl
0x2e0c:	jmp	0x2ab9


0x2e87:	jmp	0x2ea8


0x2e97:	add	rax, 1
0x2e9b:	lea	rdx, [rbp + rax]
0x2ea0:	cmp	r11, rdx
0x2ea3:	ja	0x2e90


0x2a5a:	mov	rdi, qword ptr [rsp + 0x10]
0x2a5f:	lea	rcx, [rdi + r15]
0x2a63:	lea	rdx, [rdi + r14 + 1]
0x2a68:	lea	r8, [rcx + r14]
0x2a6c:	jmp	0x2a7d


0x2163:	test	dl, dl
0x2165:	jne	0x2272


0x2272:	cmp	byte ptr [rsp + 0xf], 0
0x2277:	jne	0x216b


0x2a1e:	test	al, al
0x2a20:	je	0x2e1e


0x219c:	test	al, al
0x219e:	je	0x21c0


0x2a0d:	add	r15, 1
0x2a11:	add	rbp, 1
0x2a15:	cmp	rbp, rcx
0x2a18:	jae	0x219c


0x2a08:	mov	byte ptr [r14 + r15], 0x5c
0x2a0d:	add	r15, 1
0x2a11:	add	rbp, 1
0x2a15:	cmp	rbp, rcx
0x2a18:	jae	0x219c


0x298b:	cmp	r13, r15
0x298e:	jbe	0x2995


0x295c:	cmp	r13, r15
0x295f:	jbe	0x2966


0x2ea5:	mov	rdi, rax
0x2ea8:	movzx	edx, byte ptr [rsp + 0xd]
0x2ead:	xor	r12d, r12d
0x2eb0:	jmp	0x2916


0x2e90:	cmp	byte ptr [r9 + rax], 0
0x2e95:	je	0x2ea5


0x2a7d:	movzx	ecx, byte ptr [rdx]
0x2a80:	sub	ecx, 0x5b
0x2a83:	cmp	cl, 0x21
0x2a86:	ja	0x2a70


0x216b:	mov	rsi, qword ptr [rsp + 0x20]
0x2170:	test	rsi, rsi
0x2173:	je	0x2189


0x227d:	jmp	0x2189


0x2e1e:	xor	r10d, r10d
0x2e21:	jmp	0x29dd


0x2a26:	cmp	r13, r15
0x2a29:	jbe	0x2a30


0x21c0:	cmp	r15, r13
0x21c3:	jae	0x21c9


0x21a0:	cmp	r13, r15
0x21a3:	jbe	0x21aa


0x2995:	lea	rax, [r15 + 1]
0x2999:	cmp	r13, rax
0x299c:	jbe	0x29ab


0x2990:	mov	byte ptr [r14 + r15], 0x5c
0x2995:	lea	rax, [r15 + 1]
0x2999:	cmp	r13, rax
0x299c:	jbe	0x29ab


0x2966:	lea	rsi, [r15 + 1]
0x296a:	cmp	r13, rsi
0x296d:	jbe	0x2975


0x2961:	mov	byte ptr [r14 + r15], 0x27
0x2966:	lea	rsi, [r15 + 1]
0x296a:	cmp	r13, rsi
0x296d:	jbe	0x2975


0x2a88:	mov	esi, 1
0x2a8d:	shl	rsi, cl
0x2a90:	mov	rcx, rsi
0x2a93:	movabs	rsi, 0x20000002b
0x2a9d:	test	rcx, rsi
0x2aa0:	je	0x2a70


0x2a70:	add	rdx, 1
0x2a74:	cmp	r8, rdx
0x2a77:	je	0x28b9


0x2189:	test	r10b, r10b
0x218c:	jne	0x22d3


0x2175:	mov	edx, ebx
0x2177:	shr	dl, 5
0x217a:	movzx	edx, dl
0x217d:	mov	edx, dword ptr [rsi + rdx*4]
0x2180:	bt	edx, ebx
0x2183:	jb	0x22d3


0x29dd:	cmp	r13, r15
0x29e0:	jbe	0x29e6


0x2a30:	lea	rax, [r15 + 1]
0x2a34:	cmp	r13, rax
0x2a37:	jbe	0x2a3f


0x2a2b:	mov	byte ptr [r14 + r15], 0x27
0x2a30:	lea	rax, [r15 + 1]
0x2a34:	cmp	r13, rax
0x2a37:	jbe	0x2a3f


0x21c5:	mov	byte ptr [r14 + r15], bl
0x21c9:	movzx	edi, byte ptr [rsp + 0xe]
0x21ce:	add	r15, 1
0x21d2:	mov	eax, 0
0x21d7:	test	r12b, r12b
0x21da:	cmove	edi, eax
0x21dd:	mov	byte ptr [rsp + 0xe], dil
0x21e2:	jmp	0x2018


0x21c9:	movzx	edi, byte ptr [rsp + 0xe]
0x21ce:	add	r15, 1
0x21d2:	mov	eax, 0
0x21d7:	test	r12b, r12b
0x21da:	cmove	edi, eax
0x21dd:	mov	byte ptr [rsp + 0xe], dil
0x21e2:	jmp	0x2018


0x21aa:	lea	rax, [r15 + 1]
0x21ae:	cmp	r13, rax
0x21b1:	jbe	0x21b9


0x21a5:	mov	byte ptr [r14 + r15], 0x27
0x21aa:	lea	rax, [r15 + 1]
0x21ae:	cmp	r13, rax
0x21b1:	jbe	0x21b9


0x29ab:	lea	rax, [r15 + 2]
0x29af:	cmp	r13, rax
0x29b2:	jbe	0x29c4


0x299e:	mov	eax, ebx
0x29a0:	shr	al, 6
0x29a3:	add	eax, 0x30
0x29a6:	mov	byte ptr [r14 + r15 + 1], al
0x29ab:	lea	rax, [r15 + 2]
0x29af:	cmp	r13, rax
0x29b2:	jbe	0x29c4


0x2975:	lea	rsi, [r15 + 2]
0x2979:	cmp	r13, rsi
0x297c:	jbe	0x2984


0x296f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x2975:	lea	rsi, [r15 + 2]
0x2979:	cmp	r13, rsi
0x297c:	jbe	0x2984


0x2aa2:	mov	r14, qword ptr [rsp + 0x40]
0x2aa7:	mov	r13, qword ptr [rsp + 0x70]
0x2aac:	mov	rbp, qword ptr [rsp + 0x30]
0x2ab1:	mov	dword ptr [rsp + 8], 2
0x2ab9:	cmp	byte ptr [rsp + 0xd], 0
0x2abe:	je	0x2ad0


0x2192:	xor	eax, 1
0x2195:	add	rbp, 1
0x2199:	and	eax, r8d
0x219c:	test	al, al
0x219e:	je	0x21c0


0x22d3:	cmp	dword ptr [rsp + 8], 2
0x22d8:	sete	dl
0x22db:	cmp	byte ptr [rsp + 0xf], 0
0x22e0:	mov	eax, edx
0x22e2:	jne	0x2b38


0x29e6:	movzx	ebx, byte ptr [rdi + rbp]
0x29ea:	add	r15, 1
0x29ee:	test	dl, dl
0x29f0:	jne	0x2940


0x29e2:	mov	byte ptr [r14 + r15], bl
0x29e6:	movzx	ebx, byte ptr [rdi + rbp]
0x29ea:	add	r15, 1
0x29ee:	test	dl, dl
0x29f0:	jne	0x2940


0x2a3f:	add	r15, 2
0x2a43:	xor	r10d, r10d
0x2a46:	xor	r8d, r8d
0x2a49:	jmp	0x29dd


0x2a39:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2a3f:	add	r15, 2
0x2a43:	xor	r10d, r10d
0x2a46:	xor	r8d, r8d
0x2a49:	jmp	0x29dd


0x2018:	cmp	r11, rbp
0x201b:	setne	r12b
0x201f:	cmp	r11, -1
0x2023:	jne	0x2032


0x21b9:	add	r15, 2
0x21bd:	xor	r8d, r8d
0x21c0:	cmp	r15, r13
0x21c3:	jae	0x21c9


0x21b3:	mov	byte ptr [r14 + r15 + 1], 0x27
0x21b9:	add	r15, 2
0x21bd:	xor	r8d, r8d
0x21c0:	cmp	r15, r13
0x21c3:	jae	0x21c9


0x29c4:	and	ebx, 7
0x29c7:	add	rbp, 1
0x29cb:	add	r15, 3
0x29cf:	add	ebx, 0x30
0x29d2:	cmp	rbp, rcx
0x29d5:	jae	0x21c0


0x29b4:	mov	eax, ebx
0x29b6:	shr	al, 3
0x29b9:	and	eax, 7
0x29bc:	add	eax, 0x30
0x29bf:	mov	byte ptr [r14 + r15 + 2], al
0x29c4:	and	ebx, 7
0x29c7:	add	rbp, 1
0x29cb:	add	r15, 3
0x29cf:	add	ebx, 0x30
0x29d2:	cmp	rbp, rcx
0x29d5:	jae	0x21c0


0x2984:	add	r15, 3
0x2988:	mov	r8d, eax
0x298b:	cmp	r13, r15
0x298e:	jbe	0x2995


0x297e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2984:	add	r15, 3
0x2988:	mov	r8d, eax
0x298b:	cmp	r13, r15
0x298e:	jbe	0x2995


0x22e8:	mov	eax, r8d
0x22eb:	xor	eax, 1
0x22ee:	and	al, dl
0x22f0:	je	0x2321


0x2b38:	mov	rbp, r11
0x2b3b:	jmp	0x2ab9


0x29db:	mov	esi, edx
0x29dd:	cmp	r13, r15
0x29e0:	jbe	0x29e6


0x2321:	cmp	r13, r15
0x2324:	jbe	0x232b


0x22f2:	cmp	r13, r15
0x22f5:	jbe	0x22fc


0x232b:	add	r15, 1
0x232f:	add	rbp, 1
0x2333:	jmp	0x21c0


0x2326:	mov	byte ptr [r14 + r15], 0x5c
0x232b:	add	r15, 1
0x232f:	add	rbp, 1
0x2333:	jmp	0x21c0


0x22fc:	lea	rdx, [r15 + 1]
0x2300:	cmp	r13, rdx
0x2303:	jbe	0x230b


0x22f7:	mov	byte ptr [r14 + r15], 0x27
0x22fc:	lea	rdx, [r15 + 1]
0x2300:	cmp	r13, rdx
0x2303:	jbe	0x230b


0x230b:	lea	rdx, [r15 + 2]
0x230f:	cmp	r13, rdx
0x2312:	jbe	0x231a


0x2305:	mov	byte ptr [r14 + r15 + 1], 0x24
0x230b:	lea	rdx, [r15 + 2]
0x230f:	cmp	r13, rdx
0x2312:	jbe	0x231a


0x231a:	add	r15, 3
0x231e:	mov	r8d, eax
0x2321:	cmp	r13, r15
0x2324:	jbe	0x232b


0x2314:	mov	byte ptr [r14 + r15 + 2], 0x27
0x231a:	add	r15, 3
0x231e:	mov	r8d, eax
0x2321:	cmp	r13, r15
0x2324:	jbe	0x232b


0x28c5:	mov	rdi, qword ptr [rsp + 0x28]
0x28ca:	test	eax, eax
0x28cc:	mov	eax, 0
0x28d1:	cmove	r12d, eax
0x28d5:	add	rbx, r15
0x28d8:	call	0x1440


0x28dd:	test	eax, eax
0x28df:	je	0x2863


0x2863:	mov	rax, qword ptr [rsp + 0x10]
0x2868:	lea	r14, [rbp + rbx]
0x286d:	mov	rdx, qword ptr [rsp + 0x30]
0x2872:	mov	rcx, qword ptr [rsp + 0x28]
0x2877:	mov	rdi, qword ptr [rsp + 0x38]
0x287c:	lea	r13, [rax + r14]
0x2880:	sub	rdx, r14
0x2883:	mov	rsi, r13
0x2886:	call	0x4380


0x208c:	movzx	r8d, byte ptr [rsp + 0x38]
0x2092:	movzx	r10d, byte ptr [rsp + 0x30]
0x2098:	mov	r11, rax
0x209b:	mov	r9, qword ptr [rsp + 0x28]
0x20a0:	cmp	rbx, r11
0x20a3:	mov	byte ptr [rsp + 0x28], r10b
0x20a8:	ja	0x2660


0x2810:	movzx	r8d, byte ptr [rsp + 0x40]
0x2816:	movzx	r10d, byte ptr [rsp + 0x38]
0x281c:	mov	r11, rax
0x281f:	mov	r9, qword ptr [rsp + 0x30]
0x2824:	lea	rax, [rsp + 0x9c]
0x282c:	xor	ecx, ecx
0x282e:	mov	byte ptr [rsp + 0x7e], bl
0x2832:	mov	byte ptr [rsp + 0x7d], r8b
0x2837:	mov	rbx, rcx
0x283a:	mov	qword ptr [rsp + 0x88], r9
0x2842:	mov	qword ptr [rsp + 0x38], rax
0x2847:	mov	byte ptr [rsp + 0x7f], r10b
0x284c:	mov	qword ptr [rsp + 0x80], r15
0x2854:	mov	qword ptr [rsp + 0x40], r14
0x2859:	mov	qword ptr [rsp + 0x70], r13
0x285e:	mov	qword ptr [rsp + 0x30], r11
0x2863:	mov	rax, qword ptr [rsp + 0x10]
0x2868:	lea	r14, [rbp + rbx]
0x286d:	mov	rdx, qword ptr [rsp + 0x30]
0x2872:	mov	rcx, qword ptr [rsp + 0x28]
0x2877:	mov	rdi, qword ptr [rsp + 0x38]
0x287c:	lea	r13, [rax + r14]
0x2880:	sub	rdx, r14
0x2883:	mov	rsi, r13
0x2886:	call	0x4380


0x2448:	mov	rcx, qword ptr [rax]
0x244b:	movzx	edx, bl
0x244e:	movzx	r10d, byte ptr [rsp + 0x28]
0x2454:	movzx	r8d, byte ptr [rsp + 0x30]
0x245a:	mov	r11, qword ptr [rsp + 0x38]
0x245f:	mov	edi, 1
0x2464:	movzx	eax, word ptr [rcx + rdx*2]
0x2468:	and	ax, 0x4000
0x246c:	setne	r12b
0x2470:	sete	al
0x2473:	and	al, byte ptr [rsp + 0xd]
0x2477:	test	al, al
0x2479:	jne	0x2e11


0x2120:	xor	r10d, r10d
0x2123:	cmp	r11, 1
0x2127:	setne	al
0x212a:	cmp	r11, -1
0x212e:	jne	0x213c


0x2130:	mov	rax, qword ptr [rsp + 0x10]
0x2135:	cmp	byte ptr [rax + 1], 0
0x2139:	setne	al
0x213c:	cmp	dword ptr [rsp + 8], 2
0x2141:	sete	dl
0x2144:	test	al, al
0x2146:	je	0x2398


0x213c:	cmp	dword ptr [rsp + 8], 2
0x2141:	sete	dl
0x2144:	test	al, al
0x2146:	je	0x2398


0x2398:	test	rbp, rbp
0x239b:	jne	0x214c


0x214c:	xor	r12d, r12d
0x214f:	xor	eax, eax
0x2151:	nop	dword ptr [rax]
0x2158:	cmp	byte ptr [rsp + 0xd], 1
0x215d:	jne	0x2272


0x23a1:	movzx	eax, byte ptr [rsp + 0xf]
0x23a6:	and	al, dl
0x23a8:	je	0x2158


0x23ae:	mov	rbp, r11
0x23b1:	mov	dword ptr [rsp + 8], 2
0x23b9:	jmp	0x2ab9


0x27b8:	cmp	byte ptr [rsp + 0xf], 0
0x27bd:	jne	0x2fe0


0x2200:	cmp	eax, 5
0x2203:	je	0x2778


0x27c3:	xor	r12d, r12d
0x27c6:	xor	eax, eax
0x27c8:	mov	ebx, 0x3f
0x27cd:	jmp	0x2189


0x2fe0:	mov	rbp, r11
0x2fe3:	movzx	eax, byte ptr [rsp + 0xf]
0x2fe8:	jmp	0x2ab9


0x2778:	test	byte ptr [rsp + 0x78], 4
0x277d:	je	0x27a0


0x2209:	cmp	eax, 2
0x220c:	mov	ebx, 0x3f
0x2211:	sete	dl
0x2214:	xor	r12d, r12d
0x2217:	xor	eax, eax
0x2219:	jmp	0x2158


0x27a0:	xor	edx, edx
0x27a2:	xor	r12d, r12d
0x27a5:	xor	eax, eax
0x27a7:	mov	ebx, 0x3f
0x27ac:	jmp	0x2158


0x277f:	lea	rcx, [rbp + 2]
0x2783:	cmp	rcx, r11
0x2786:	jae	0x27a0


0x2788:	mov	rax, qword ptr [rsp + 0x10]
0x278d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x2792:	je	0x2f22


0x2f22:	movzx	ebx, byte ptr [rax + rcx]
0x2f26:	cmp	bl, 0x3e
0x2f29:	ja	0x27a0


0x2f2f:	movabs	rax, 0x7000a38200000000
0x2f39:	bt	rax, rbx
0x2f3d:	jae	0x27a0


0x2f43:	cmp	byte ptr [rsp + 0xf], 0
0x2f48:	jne	0x3132


0x2f4e:	cmp	r13, r15
0x2f51:	jbe	0x2f58


0x3132:	mov	rbp, r11
0x3135:	jmp	0x2ad0


0x2f58:	lea	rax, [r15 + 1]
0x2f5c:	cmp	r13, rax
0x2f5f:	jbe	0x2f67


0x2f53:	mov	byte ptr [r14 + r15], 0x3f
0x2f58:	lea	rax, [r15 + 1]
0x2f5c:	cmp	r13, rax
0x2f5f:	jbe	0x2f67


0x2f67:	lea	rax, [r15 + 2]
0x2f6b:	cmp	r13, rax
0x2f6e:	jbe	0x2f76


0x2f61:	mov	byte ptr [r14 + r15 + 1], 0x22
0x2f67:	lea	rax, [r15 + 2]
0x2f6b:	cmp	r13, rax
0x2f6e:	jbe	0x2f76


0x2f76:	lea	rax, [r15 + 3]
0x2f7a:	cmp	r13, rax
0x2f7d:	jbe	0x2f85


0x2f70:	mov	byte ptr [r14 + r15 + 2], 0x22
0x2f76:	lea	rax, [r15 + 3]
0x2f7a:	cmp	r13, rax
0x2f7d:	jbe	0x2f85


0x2f85:	add	r15, 4
0x2f89:	xor	edx, edx
0x2f8b:	xor	r12d, r12d
0x2f8e:	xor	eax, eax
0x2f90:	mov	rbp, rcx
0x2f93:	jmp	0x2158


0x2f7f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x2f85:	add	r15, 4
0x2f89:	xor	edx, edx
0x2f8b:	xor	r12d, r12d
0x2f8e:	xor	eax, eax
0x2f90:	mov	rbp, rcx
0x2f93:	jmp	0x2158


0x2730:	cmp	byte ptr [rsp + 0xf], 0
0x2735:	jne	0x2fe0


0x222e:	mov	byte ptr [rsp + 0x7c], r12b
0x2233:	xor	edx, edx
0x2235:	xor	eax, eax
0x2237:	mov	ebx, 0x27
0x223c:	jmp	0x2158


0x273b:	test	r13, r13
0x273e:	je	0x2b40


0x2b40:	cmp	r13, r15
0x2b43:	jbe	0x2b4a


0x2744:	xor	edx, edx
0x2746:	cmp	qword ptr [rsp + 0x50], 0
0x274c:	jne	0x2b40


0x2b4a:	lea	rax, [r15 + 1]
0x2b4e:	cmp	r13, rax
0x2b51:	jbe	0x2b59


0x2b45:	mov	byte ptr [r14 + r15], 0x27
0x2b4a:	lea	rax, [r15 + 1]
0x2b4e:	cmp	r13, rax
0x2b51:	jbe	0x2b59


0x2752:	mov	qword ptr [rsp + 0x50], r13
0x2757:	add	r15, 3
0x275b:	xor	eax, eax
0x275d:	mov	byte ptr [rsp + 0x7c], r12b
0x2762:	xor	r8d, r8d
0x2765:	mov	r13, rdx
0x2768:	mov	ebx, 0x27
0x276d:	jmp	0x2189


0x2b59:	lea	rax, [r15 + 2]
0x2b5d:	cmp	r13, rax
0x2b60:	jbe	0x3152


0x2b53:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x2b59:	lea	rax, [r15 + 2]
0x2b5d:	cmp	r13, rax
0x2b60:	jbe	0x3152


0x3152:	mov	rdx, r13
0x3155:	mov	r13, qword ptr [rsp + 0x50]
0x315a:	jmp	0x2752


0x2b66:	mov	rdx, r13
0x2b69:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2b6f:	mov	r13, qword ptr [rsp + 0x50]
0x2b74:	jmp	0x2752


0x2264:	cmp	byte ptr [rsp + 0xd], 0
0x2269:	jne	0x22d0


0x226b:	mov	ebx, edx
0x226d:	xor	r12d, r12d
0x2270:	xor	eax, eax
0x2272:	cmp	byte ptr [rsp + 0xf], 0
0x2277:	jne	0x216b


0x22d0:	xor	r12d, r12d
0x22d3:	cmp	dword ptr [rsp + 8], 2
0x22d8:	sete	dl
0x22db:	cmp	byte ptr [rsp + 0xf], 0
0x22e0:	mov	eax, edx
0x22e2:	jne	0x2b38


0x2670:	cmp	byte ptr [rsp + 0xf], 0
0x2675:	jne	0x2fe0


0x22a3:	cmp	byte ptr [rsp + 0xd], 0
0x22a8:	je	0x24c0


0x267b:	add	rbp, 1
0x267f:	mov	eax, r8d
0x2682:	xor	r12d, r12d
0x2685:	mov	ebx, 0x5c
0x268a:	jmp	0x219c


0x24c0:	mov	edx, 0x5c
0x24c5:	mov	ebx, 0x5c
0x24ca:	jmp	0x2264


0x22ae:	cmp	byte ptr [rsp + 0xf], 0
0x22b3:	je	0x24c0


0x22b9:	cmp	qword ptr [rsp + 0x18], 0
0x22bf:	jne	0x267b


0x22c5:	mov	ebx, 0x5c
0x22ca:	nop	word ptr [rax + rax]
0x22d0:	xor	r12d, r12d
0x22d3:	cmp	dword ptr [rsp + 8], 2
0x22d8:	sete	dl
0x22db:	cmp	byte ptr [rsp + 0xf], 0
0x22e0:	mov	eax, edx
0x22e2:	jne	0x2b38


0x234b:	xor	edx, edx
0x234d:	test	byte ptr [rsp + 0x78], 1
0x2352:	je	0x226b


0x2513:	cmp	dword ptr [rsp + 8], 2
0x2518:	sete	dl
0x251b:	cmp	byte ptr [rsp + 0xf], 0
0x2520:	jne	0x30ba


0x2358:	add	rbp, 1
0x235c:	jmp	0x2018


0x2526:	mov	eax, r8d
0x2529:	mov	rcx, r15
0x252c:	xor	eax, 1
0x252f:	and	al, dl
0x2531:	je	0x2560


0x30ba:	movzx	ebx, byte ptr [rsp + 0xf]
0x30bf:	mov	rbp, r11
0x30c2:	mov	eax, edx
0x30c4:	mov	byte ptr [rsp + 0xd], bl
0x30c8:	jmp	0x2ab9


0x2560:	cmp	r13, rcx
0x2563:	jbe	0x256a


0x2533:	cmp	r13, r15
0x2536:	jbe	0x253d


0x256a:	cmp	dword ptr [rsp + 8], 2
0x256f:	lea	r15, [rcx + 1]
0x2573:	je	0x2b79


0x2565:	mov	byte ptr [r14 + rcx], 0x5c
0x256a:	cmp	dword ptr [rsp + 8], 2
0x256f:	lea	r15, [rcx + 1]
0x2573:	je	0x2b79


0x253d:	lea	rcx, [r15 + 1]
0x2541:	cmp	r13, rcx
0x2544:	jbe	0x254c


0x2538:	mov	byte ptr [r14 + r15], 0x27
0x253d:	lea	rcx, [r15 + 1]
0x2541:	cmp	r13, rcx
0x2544:	jbe	0x254c


0x2b79:	mov	eax, r12d
0x2b7c:	mov	ebx, 0x30
0x2b81:	xor	r12d, r12d
0x2b84:	jmp	0x2189


0x2579:	lea	rax, [rbp + 1]
0x257d:	cmp	rax, r11
0x2580:	jae	0x259b


0x254c:	lea	rcx, [r15 + 2]
0x2550:	cmp	r13, rcx
0x2553:	ja	0x2b89


0x2546:	mov	byte ptr [r14 + r15 + 1], 0x24
0x254c:	lea	rcx, [r15 + 2]
0x2550:	cmp	r13, rcx
0x2553:	ja	0x2b89


0x2582:	mov	rax, qword ptr [rsp + 0x10]
0x2587:	movzx	eax, byte ptr [rax + rbp + 1]
0x258c:	mov	byte ptr [rsp + 0x28], al
0x2590:	sub	eax, 0x30
0x2593:	cmp	al, 9
0x2595:	jbe	0x2dc9


0x259b:	mov	eax, r12d
0x259e:	mov	ebx, 0x30
0x25a3:	xor	r12d, r12d
0x25a6:	jmp	0x2158


0x2559:	lea	rcx, [r15 + 3]
0x255d:	mov	r8d, eax
0x2560:	cmp	r13, rcx
0x2563:	jbe	0x256a


0x2b89:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2b8f:	jmp	0x2559


0x2dc9:	cmp	r13, r15
0x2dcc:	jbe	0x2dd3


0x2dd3:	lea	rax, [rcx + 2]
0x2dd7:	cmp	r13, rax
0x2dda:	jbe	0x2de2


0x2dce:	mov	byte ptr [r14 + r15], 0x30
0x2dd3:	lea	rax, [rcx + 2]
0x2dd7:	cmp	r13, rax
0x2dda:	jbe	0x2de2


0x2de2:	mov	eax, r12d
0x2de5:	lea	r15, [rcx + 3]
0x2de9:	xor	r12d, r12d
0x2dec:	mov	ebx, 0x30
0x2df1:	jmp	0x2158


0x2ddc:	mov	byte ptr [r14 + rcx + 2], 0x30
0x2de2:	mov	eax, r12d
0x2de5:	lea	r15, [rcx + 3]
0x2de9:	xor	r12d, r12d
0x2dec:	mov	ebx, 0x30
0x2df1:	jmp	0x2158


0x2252:	cmp	dword ptr [rsp + 8], 2
0x2257:	sete	al
0x225a:	and	al, byte ptr [rsp + 0xf]
0x225e:	jne	0x23ae


0x2610:	mov	edx, 0xd
0x2615:	xor	r10d, r10d
0x2618:	mov	ebx, 0x72
0x261d:	jmp	0x2252


0x2b94:	test	ebx, ebx
0x2b96:	jne	0x1fc3


0x2b9c:	mov	byte ptr [rsp + 0xd], 1
0x2ba1:	test	r13, r13
0x2ba4:	jne	0x313a


0x2baa:	lea	rax, [rip + 0x1e74]
0x2bb1:	mov	qword ptr [rsp + 0x50], 0
0x2bba:	mov	byte ptr [rsp + 0xe], 1
0x2bbf:	mov	byte ptr [rsp + 0x7c], 0
0x2bc4:	xor	r12d, r12d
0x2bc7:	mov	byte ptr [rsp + 0xf], 0
0x2bcc:	mov	qword ptr [rsp + 0x18], 1
0x2bd5:	mov	qword ptr [rsp + 0x48], rax
0x2bda:	mov	r15d, 1
0x2be0:	mov	dword ptr [rsp + 8], 2
0x2be8:	jmp	0x2003


0x313a:	mov	byte ptr [rsp + 0xe], 1
0x313f:	xor	eax, eax
0x3141:	xor	r12d, r12d
0x3144:	mov	qword ptr [rsp + 0x50], 0
0x314d:	jmp	0x26f4


0x26f4:	lea	rbx, [rip + 0x232a]
0x26fb:	mov	byte ptr [r14], 0x27
0x26ff:	mov	dword ptr [rsp + 8], 2
0x2707:	mov	r15d, 1
0x270d:	mov	qword ptr [rsp + 0x18], 1
0x2716:	mov	byte ptr [rsp + 0xf], 0
0x271b:	mov	qword ptr [rsp + 0x48], rbx
0x2720:	mov	byte ptr [rsp + 0x7c], al
0x2724:	jmp	0x2003


0x2bf8:	test	r13, r13
0x2bfb:	je	0x2e26


0x2fed:	lea	rax, [rip + 0x1a2f]
0x2ff4:	mov	byte ptr [rsp + 0xe], 1
0x2ff9:	mov	byte ptr [rsp + 0x7c], 0
0x2ffe:	xor	r12d, r12d
0x3001:	mov	qword ptr [rsp + 0x50], 0
0x300a:	mov	byte ptr [rsp + 0xf], 1
0x300f:	mov	byte ptr [rsp + 0xd], 1
0x3014:	mov	qword ptr [rsp + 0x18], 1
0x301d:	xor	r15d, r15d
0x3020:	mov	qword ptr [rsp + 0x48], rax
0x3025:	jmp	0x2003


0x2e26:	mov	qword ptr [rsp + 0x50], 0
0x2e2f:	mov	byte ptr [rsp + 0xe], 1
0x2e34:	xor	r12d, r12d
0x2e37:	mov	byte ptr [rsp + 0x7c], 0
0x2e3c:	jmp	0x2c1b


0x2c01:	mov	byte ptr [r14], 0x22
0x2c05:	mov	byte ptr [rsp + 0xe], 1
0x2c0a:	xor	r12d, r12d
0x2c0d:	mov	byte ptr [rsp + 0x7c], 0
0x2c12:	mov	qword ptr [rsp + 0x50], 0
0x2c1b:	lea	rax, [rip + 0x1e01]
0x2c22:	mov	byte ptr [rsp + 0xf], 0
0x2c27:	mov	byte ptr [rsp + 0xd], 1
0x2c2c:	mov	qword ptr [rsp + 0x18], 1
0x2c35:	mov	r15d, 1
0x2c3b:	mov	qword ptr [rsp + 0x48], rax
0x2c40:	jmp	0x2003


0x2c1b:	lea	rax, [rip + 0x1e01]
0x2c22:	mov	byte ptr [rsp + 0xf], 0
0x2c27:	mov	byte ptr [rsp + 0xd], 1
0x2c2c:	mov	qword ptr [rsp + 0x18], 1
0x2c35:	mov	r15d, 1
0x2c3b:	mov	qword ptr [rsp + 0x48], rax
0x2c40:	jmp	0x2003


0x2c45:	lea	rax, [rip + 0x1dd7]
0x2c4c:	mov	byte ptr [rsp + 0xe], 1
0x2c51:	mov	byte ptr [rsp + 0x7c], 0
0x2c56:	xor	r12d, r12d
0x2c59:	mov	qword ptr [rsp + 0x50], 0
0x2c62:	mov	byte ptr [rsp + 0xf], 1
0x2c67:	mov	byte ptr [rsp + 0xd], 1
0x2c6c:	mov	qword ptr [rsp + 0x18], 1
0x2c75:	xor	r15d, r15d
0x2c78:	mov	qword ptr [rsp + 0x48], rax
0x2c7d:	mov	dword ptr [rsp + 8], 5
0x2c85:	jmp	0x2003


0x2c8a:	mov	byte ptr [rsp + 0xe], 1
0x2c8f:	mov	byte ptr [rsp + 0x7c], 0
0x2c94:	xor	r12d, r12d
0x2c97:	mov	qword ptr [rsp + 0x50], 0
0x2ca0:	mov	byte ptr [rsp + 0xf], 0
0x2ca5:	xor	r15d, r15d
0x2ca8:	mov	byte ptr [rsp + 0xd], 1
0x2cad:	mov	qword ptr [rsp + 0x18], 0
0x2cb6:	mov	qword ptr [rsp + 0x48], 0
0x2cbf:	jmp	0x2003


0x2cc4:	cmp	dword ptr [rsp + 8], 0xa
0x2cc9:	je	0x2d21


0x2d21:	xor	r15d, r15d
0x2d24:	test	ebx, ebx
0x2d26:	je	0x2eed


0x2ccb:	lea	rsi, [rip + 0x1d55]
0x2cd2:	xor	edi, edi
0x2cd4:	mov	edx, 5
0x2cd9:	call	0x1290


0x2eed:	mov	rdx, qword ptr [rsp + 0x68]
0x2ef2:	movzx	eax, byte ptr [rdx]
0x2ef5:	test	al, al
0x2ef7:	je	0x2d2c


0x2d2c:	test	ebx, ebx
0x2d2e:	mov	rbx, qword ptr [rsp + 0x60]
0x2d33:	setne	byte ptr [rsp + 0xf]
0x2d38:	xor	r12d, r12d
0x2d3b:	mov	rdi, rbx
0x2d3e:	call	0x12b0


0x2f09:	add	r15, 1
0x2f0d:	movzx	eax, byte ptr [rdx + r15]
0x2f12:	test	al, al
0x2f14:	jne	0x2f00


0x2f05:	mov	byte ptr [r14 + r15], al
0x2f09:	add	r15, 1
0x2f0d:	movzx	eax, byte ptr [rdx + r15]
0x2f12:	test	al, al
0x2f14:	jne	0x2f00


0x2f16:	jmp	0x2d2c


0x2f00:	cmp	r13, r15
0x2f03:	jbe	0x2f09


0x2d43:	mov	qword ptr [rsp + 0x48], rbx
0x2d48:	mov	qword ptr [rsp + 0x18], rax
0x2d4d:	mov	byte ptr [rsp + 0xe], 1
0x2d52:	mov	byte ptr [rsp + 0x7c], 0
0x2d57:	mov	qword ptr [rsp + 0x50], 0
0x2d60:	mov	byte ptr [rsp + 0xd], 1
0x2d65:	jmp	0x2003


0x2cde:	mov	rcx, rax
0x2ce1:	mov	qword ptr [rsp + 0x68], rax
0x2ce6:	lea	rax, [rip + 0x1d3a]
0x2ced:	cmp	rcx, rax
0x2cf0:	je	0x308e


0x308e:	mov	esi, dword ptr [rsp + 8]
0x3092:	mov	rdi, rcx
0x3095:	call	0x1e40


0x2cf6:	lea	rsi, [rip + 0x1d28]
0x2cfd:	xor	edi, edi
0x2cff:	mov	edx, 5
0x2d04:	call	0x1290


0x2d09:	mov	rcx, rax
0x2d0c:	mov	qword ptr [rsp + 0x60], rax
0x2d11:	lea	rax, [rip + 0x1d0d]
0x2d18:	cmp	rcx, rax
0x2d1b:	je	0x30a4


0x30a4:	mov	esi, dword ptr [rsp + 8]
0x30a8:	mov	rdi, rcx
0x30ab:	call	0x1e40


0x30b0:	mov	qword ptr [rsp + 0x60], rax
0x30b5:	jmp	0x2d21


0x309a:	mov	qword ptr [rsp + 0x68], rax
0x309f:	jmp	0x2cf6


0x2d6a:	mov	byte ptr [rsp + 0xe], 1
0x2d6f:	mov	byte ptr [rsp + 0x7c], 0
0x2d74:	xor	r12d, r12d
0x2d77:	mov	qword ptr [rsp + 0x50], 0
0x2d80:	mov	byte ptr [rsp + 0xf], 0
0x2d85:	xor	r15d, r15d
0x2d88:	mov	byte ptr [rsp + 0xd], 0
0x2d8d:	mov	qword ptr [rsp + 0x18], 0
0x2d96:	mov	qword ptr [rsp + 0x48], 0
0x2d9f:	jmp	0x2003


0x2da4:	mov	byte ptr [rsp + 0xe], 1
0x2da9:	mov	byte ptr [rsp + 0x7c], 0
0x2dae:	xor	r12d, r12d
0x2db1:	mov	qword ptr [rsp + 0x50], 0
0x2dba:	mov	byte ptr [rsp + 0xf], 1
0x2dbf:	mov	byte ptr [rsp + 0xd], 1
0x2dc4:	jmp	0x1fe3


0x1fe3:	lea	rax, [rip + 0x2a3b]
0x1fea:	mov	qword ptr [rsp + 0x18], 1
0x1ff3:	xor	r15d, r15d
0x1ff6:	mov	dword ptr [rsp + 8], 2
0x1ffe:	mov	qword ptr [rsp + 0x48], rax
0x2003:	xor	r11d, r11d
0x2006:	mov	rax, rbp
0x2009:	mov	r8d, r12d
0x200c:	mov	rbp, r11
0x200f:	mov	r11, rax
0x2012:	nop	word ptr [rax + rax]
0x2018:	cmp	r11, rbp
0x201b:	setne	r12b
0x201f:	cmp	r11, -1
0x2023:	jne	0x2032


0x2f98:	test	ebx, ebx
0x2f9a:	je	0x3128


0x3128:	mov	byte ptr [rsp + 0xd], 0
0x312d:	jmp	0x2ba1


0x2fa0:	lea	rax, [rip + 0x1a7e]
0x2fa7:	mov	byte ptr [rsp + 0xe], 1
0x2fac:	mov	byte ptr [rsp + 0x7c], 0
0x2fb1:	xor	r12d, r12d
0x2fb4:	mov	qword ptr [rsp + 0x50], 0
0x2fbd:	mov	byte ptr [rsp + 0xf], 1
0x2fc2:	mov	byte ptr [rsp + 0xd], 0
0x2fc7:	mov	qword ptr [rsp + 0x18], 1
0x2fd0:	xor	r15d, r15d
0x2fd3:	mov	qword ptr [rsp + 0x48], rax
0x2fd8:	jmp	0x2003


0x2ba1:	test	r13, r13
0x2ba4:	jne	0x313a


0x3164:	nop	
0x3166:	nop	word ptr cs:[rax + rax]


0x331b:	nop	dword ptr [rax + rax]


0x3356:	nop	word ptr cs:[rax + rax]


0x3371:	nop	dword ptr [rax + rax]
0x3376:	nop	word ptr cs:[rax + rax]


0x3391:	nop	dword ptr [rax + rax]
0x3396:	nop	word ptr cs:[rax + rax]


0x33d5:	nop	
0x33d6:	nop	word ptr cs:[rax + rax]


0x33f5:	nop	
0x33f6:	nop	word ptr cs:[rax + rax]


0x34a4:	nop	
0x34a6:	nop	word ptr cs:[rax + rax]


0x3593:	nop	dword ptr [rax]
0x3596:	nop	word ptr cs:[rax + rax]


0x35aa:	nop	word ptr [rax + rax]


0x3643:	nop	dword ptr [rax]
0x3646:	nop	word ptr cs:[rax + rax]


0x3663:	nop	dword ptr [rax]
0x3666:	nop	word ptr cs:[rax + rax]


0x367c:	nop	dword ptr [rax]


0x3698:	nop	dword ptr [rax + rax]


0x36b4:	nop	
0x36b6:	nop	word ptr cs:[rax + rax]


0x374e:	nop	


0x37da:	nop	word ptr [rax + rax]


0x37ec:	nop	dword ptr [rax]


0x37ff:	nop	


0x3898:	nop	dword ptr [rax + rax]


0x38c1:	nop	dword ptr [rax + rax]
0x38c6:	nop	word ptr cs:[rax + rax]


0x38da:	nop	word ptr [rax + rax]


0x396e:	nop	


0x3a01:	nop	dword ptr [rax + rax]
0x3a06:	nop	word ptr cs:[rax + rax]


0x3a1c:	nop	dword ptr [rax]


0x3a37:	nop	word ptr [rax + rax]


0x3a53:	nop	dword ptr [rax]
0x3a56:	nop	word ptr cs:[rax + rax]


0x3a6c:	nop	dword ptr [rax]


0x3a84:	nop	
0x3a86:	nop	word ptr cs:[rax + rax]


0x3aa3:	nop	dword ptr [rax]
0x3aa6:	nop	word ptr cs:[rax + rax]


0x3ac8:	nop	dword ptr [rax + rax]


0x3ee7:	nop	word ptr [rax + rax]


0x3f88:	nop	dword ptr [rax + rax]


0x4065:	nop	
0x4066:	nop	word ptr cs:[rax + rax]


0x410a:	nop	word ptr [rax + rax]


0x4134:	nop	
0x4136:	nop	word ptr cs:[rax + rax]


0x4142:	nop	dword ptr [rax]
0x4146:	nop	word ptr cs:[rax + rax]


0x4186:	nop	word ptr cs:[rax + rax]


0x41b4:	nop	
0x41b6:	nop	word ptr cs:[rax + rax]


0x4242:	nop	dword ptr [rax]
0x4246:	nop	word ptr cs:[rax + rax]


0x429a:	nop	word ptr [rax + rax]


0x42b7:	nop	word ptr [rax + rax]


0x42ee:	nop	


0x4318:	nop	dword ptr [rax + rax]


0x4333:	nop	word ptr cs:[rax + rax]
0x433d:	nop	dword ptr [rax]


0x4375:	nop	word ptr cs:[rax + rax]
0x437f:	nop	


0x4403:	nop	word ptr cs:[rax + rax]
0x440d:	nop	dword ptr [rax]


0x448d:	nop	dword ptr [rax]


0x452c:	nop	dword ptr [rax]


0x45ab:	nop	dword ptr [rax + rax]


0x4647:	nop	word ptr [rax + rax]


0x46b5:	nop	
0x46b6:	nop	word ptr cs:[rax + rax]


0x46c2:	nop	word ptr cs:[rax + rax]
0x46cc:	nop	dword ptr [rax]


0x21f0:	xor	r10d, r10d
0x21f3:	mov	eax, dword ptr [rsp + 8]
0x21f7:	cmp	eax, 2
0x21fa:	je	0x27b8


0x2220:	xor	r10d, r10d
0x2223:	cmp	dword ptr [rsp + 8], 2
0x2228:	je	0x2730


0x2248:	mov	edx, 9
0x224d:	mov	ebx, 0x74
0x2252:	cmp	dword ptr [rsp + 8], 2
0x2257:	sete	al
0x225a:	and	al, byte ptr [rsp + 0xf]
0x225e:	jne	0x23ae


0x2288:	mov	edx, 8
0x228d:	mov	ebx, 0x62
0x2292:	jmp	0x2264


0x2298:	cmp	dword ptr [rsp + 8], 2
0x229d:	je	0x2670


0x2340:	cmp	byte ptr [rsp + 0xd], 0
0x2345:	jne	0x2513


0x2368:	cmp	dword ptr [rsp + 8], 2
0x236d:	sete	dl
0x2370:	xor	eax, eax
0x2372:	jmp	0x2158


0x2380:	mov	edx, 7
0x2385:	mov	ebx, 0x61
0x238a:	jmp	0x2264


0x2390:	cmp	dword ptr [rsp + 8], 2
0x2395:	sete	dl
0x2398:	test	rbp, rbp
0x239b:	jne	0x214c


0x23c0:	cmp	dword ptr [rsp + 8], 2
0x23c5:	sete	dl
0x23c8:	xor	r12d, r12d
0x23cb:	jmp	0x23a1


0x23d0:	cmp	dword ptr [rsp + 8], 2
0x23d5:	mov	ebx, 0x20
0x23da:	sete	dl
0x23dd:	jmp	0x23a1


0x23e0:	mov	edx, 0xd
0x23e5:	mov	ebx, 0x72
0x23ea:	jmp	0x2252


0x23f0:	mov	edx, 0xc
0x23f5:	mov	ebx, 0x66
0x23fa:	jmp	0x2264


0x2400:	mov	edx, 0xb
0x2405:	mov	ebx, 0x76
0x240a:	jmp	0x2264


0x2410:	mov	edx, 0xa
0x2415:	mov	ebx, 0x6e
0x241a:	jmp	0x2252


0x24b0:	xor	r10d, r10d
0x24b3:	cmp	byte ptr [rsp + 0xd], 0
0x24b8:	jne	0x22ae


0x24d0:	mov	edx, 0xc
0x24d5:	xor	r10d, r10d
0x24d8:	mov	ebx, 0x66
0x24dd:	jmp	0x2264


0x24e8:	mov	edx, 0xa
0x24ed:	xor	r10d, r10d
0x24f0:	mov	ebx, 0x6e
0x24f5:	jmp	0x2252


0x2500:	mov	ebx, 0x61
0x2505:	jmp	0x22d0


0x2510:	xor	r10d, r10d
0x2513:	cmp	dword ptr [rsp + 8], 2
0x2518:	sete	dl
0x251b:	cmp	byte ptr [rsp + 0xf], 0
0x2520:	jne	0x30ba


0x25b0:	cmp	dword ptr [rsp + 8], 2
0x25b5:	mov	r12d, r10d
0x25b8:	sete	dl
0x25bb:	xor	r10d, r10d
0x25be:	xor	eax, eax
0x25c0:	jmp	0x2158


0x25c8:	cmp	dword ptr [rsp + 8], 2
0x25cd:	sete	dl
0x25d0:	xor	r10d, r10d
0x25d3:	jmp	0x2398


0x25e0:	cmp	dword ptr [rsp + 8], 2
0x25e5:	sete	dl
0x25e8:	xor	r10d, r10d
0x25eb:	xor	r12d, r12d
0x25ee:	jmp	0x23a1


0x25f8:	cmp	dword ptr [rsp + 8], 2
0x25fd:	mov	r12d, r10d
0x2600:	mov	ebx, 0x20
0x2605:	sete	dl
0x2608:	xor	r10d, r10d
0x260b:	jmp	0x23a1


0x2628:	mov	ebx, 0x76
0x262d:	jmp	0x22d0


0x2638:	mov	edx, 9
0x263d:	xor	r10d, r10d
0x2640:	mov	ebx, 0x74
0x2645:	jmp	0x2252


0x2650:	mov	ebx, 0x62
0x2655:	jmp	0x22d0


0x2bf0:	test	ebx, ebx
0x2bf2:	jne	0x2fed


0x1646:	nop	word ptr cs:[rax + rax]


0x1697:	nop	word ptr [rax + rax]


0x16e1:	nop	dword ptr [rax]


0x1bcb:	nop	dword ptr [rax + rax]


0x1c47:	nop	word ptr [rax + rax]


0x1d57:	nop	word ptr [rax + rax]


0x1d8e:	nop	


0x1e7c:	nop	dword ptr [rax]


0x1ecd:	nop	dword ptr [rax]


0x20f8:	nop	dword ptr [rax + rax]


0x21e7:	nop	word ptr [rax + rax]


0x221e:	nop	


0x2241:	nop	dword ptr [rax]


0x2282:	nop	word ptr [rax + rax]


0x2294:	nop	dword ptr [rax]


0x2338:	nop	dword ptr [rax + rax]


0x2361:	nop	dword ptr [rax]


0x2377:	nop	word ptr [rax + rax]


0x238f:	nop	


0x23be:	nop	


0x23cd:	nop	dword ptr [rax]


0x23df:	nop	


0x23ef:	nop	


0x23ff:	nop	


0x240f:	nop	


0x241f:	nop	


0x248c:	nop	dword ptr [rax]


0x24ac:	nop	dword ptr [rax]


0x24be:	nop	


0x24cf:	nop	


0x24e2:	nop	word ptr [rax + rax]


0x24fa:	nop	word ptr [rax + rax]


0x250a:	nop	word ptr [rax + rax]


0x25ab:	nop	dword ptr [rax + rax]


0x25c5:	nop	dword ptr [rax]


0x25d8:	nop	dword ptr [rax + rax]


0x25f3:	nop	dword ptr [rax + rax]


0x2622:	nop	word ptr [rax + rax]


0x2632:	nop	word ptr [rax + rax]


0x264a:	nop	word ptr [rax + rax]


0x265a:	nop	word ptr [rax + rax]


0x2668:	nop	dword ptr [rax + rax]


0x268f:	nop	


0x2729:	nop	dword ptr [rax]


0x2772:	nop	word ptr [rax + rax]


0x2798:	nop	dword ptr [rax + rax]


0x27b1:	nop	dword ptr [rax]


0x27d2:	nop	word ptr [rax + rax]


0x2938:	nop	dword ptr [rax + rax]


0x2a4b:	nop	dword ptr [rax + rax]


0x2a6e:	nop	


0x2b35:	nop	dword ptr [rax]


0x2bed:	nop	dword ptr [rax]


0x2df6:	nop	word ptr cs:[rax + rax]


0x2e89:	nop	dword ptr [rax]


0x2efd:	nop	dword ptr [rax]


0x2fdd:	nop	dword ptr [rax]


0x32eb:	nop	dword ptr [rax + rax]


0x3b76:	nop	word ptr cs:[rax + rax]


0x3c05:	nop	dword ptr [rax]


0x3c26:	nop	word ptr cs:[rax + rax]


0x3c85:	nop	dword ptr [rax]


0x3cc1:	nop	dword ptr [rax]


0x3d08:	nop	dword ptr [rax + rax]


0x3d57:	nop	word ptr [rax + rax]


0x3db4:	nop	dword ptr [rax]


0x3de2:	nop	word ptr [rax + rax]


0x3e96:	nop	word ptr cs:[rax + rax]


0x3ef9:	nop	dword ptr [rax]


0x4172:	nop	word ptr [rax + rax]


0x41f9:	nop	dword ptr [rax]


0x4224:	nop	dword ptr [rax]


0x427d:	nop	dword ptr [rax]


0x4444:	nop	dword ptr [rax]


0x4461:	nop	dword ptr [rax]


0x4472:	nop	word ptr [rax + rax]


0x44ca:	nop	word ptr [rax + rax]


0x4516:	nop	word ptr cs:[rax + rax]


0x4575:	nop	dword ptr [rax]


0x45d3:	nop	dword ptr [rax + rax]


0x45ff:	nop	


