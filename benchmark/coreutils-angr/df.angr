0xefd0:	sub	rsp, 8
0xefd4:	add	rsp, 8
0xefd8:	ret	


0xefc0:	mov	rdx, qword ptr [rip + 0x205041]
0xefc7:	xor	esi, esi
0xefc9:	jmp	0x24f0


0xefb0:	ret	


0xef40:	push	r15
0xef42:	push	r14
0xef44:	mov	r15, rdx
0xef47:	push	r13
0xef49:	push	r12
0xef4b:	lea	r12, [rip + 0x20491e]
0xef52:	push	rbp
0xef53:	lea	rbp, [rip + 0x20491e]
0xef5a:	push	rbx
0xef5b:	mov	r13d, edi
0xef5e:	mov	r14, rsi
0xef61:	sub	rbp, r12
0xef64:	sub	rsp, 8
0xef68:	sar	rbp, 3
0xef6c:	call	0x2020


0xe250:	push	r15
0xe252:	push	r14
0xe254:	lea	rcx, [rsi + 0x20]
0xe258:	push	r13
0xe25a:	push	r12
0xe25c:	lea	rax, [rdx + 0x10]
0xe260:	push	rbp
0xe261:	push	rbx
0xe262:	mov	r14, rsi
0xe265:	mov	r15, rdx
0xe268:	xor	ebx, ebx
0xe26a:	mov	r9d, 7
0xe270:	sub	rsp, 0x58
0xe274:	mov	r10d, 7
0xe27a:	mov	qword ptr [rsi], 0
0xe281:	mov	qword ptr [rsi + 8], rcx
0xe285:	mov	qword ptr [rsp + 0x28], rcx
0xe28a:	mov	r8, -1
0xe291:	mov	qword ptr [rdx], 0
0xe298:	mov	qword ptr [rsp + 8], rax
0xe29d:	mov	qword ptr [rdx + 8], rax
0xe2a1:	mov	qword ptr [rsp + 0x18], 0
0xe2aa:	mov	qword ptr [rsp + 0x10], 0
0xe2b3:	mov	qword ptr [rsp + 0x20], 0
0xe2bc:	jmp	0xe2cb


0xe050:	cmp	qword ptr [rsi], 0
0xe054:	mov	rax, qword ptr [rsi + 8]
0xe058:	je	0xe0bd


0xddd0:	push	r12
0xddd2:	push	rbp
0xddd3:	mov	ebp, edi
0xddd5:	push	rbx
0xddd6:	sub	rsp, 0x50
0xddda:	mov	rax, qword ptr fs:[0x28]
0xdde3:	mov	qword ptr [rsp + 0x18], rax
0xdde8:	xor	eax, eax
0xddea:	lea	rax, [rsp + 0x70]
0xddef:	test	esi, esi
0xddf1:	mov	qword ptr [rsp + 0x30], rdx
0xddf6:	mov	qword ptr [rsp + 0x38], rcx
0xddfb:	mov	qword ptr [rsp + 0x40], r8
0xde00:	mov	qword ptr [rsp + 8], rax
0xde05:	lea	rax, [rsp + 0x20]
0xde0a:	mov	qword ptr [rsp + 0x48], r9
0xde0f:	mov	dword ptr [rsp], 0x10
0xde16:	mov	qword ptr [rsp + 0x10], rax
0xde1b:	je	0xe022


0xddc0:	mov	edx, 3
0xddc5:	xor	esi, esi
0xddc7:	xor	eax, eax
0xddc9:	jmp	0xddd0


0xcca0:	push	rbp
0xcca1:	mov	rbp, rsp
0xcca4:	push	r15
0xcca6:	push	r14
0xcca8:	push	r13
0xccaa:	push	r12
0xccac:	lea	r14, [rbp - 0x3b0]
0xccb3:	push	rbx
0xccb4:	mov	rbx, rdx
0xccb7:	mov	r12, rcx
0xccba:	mov	rdx, r14
0xccbd:	sub	rsp, 0x408
0xccc4:	mov	qword ptr [rbp - 0x418], rsi
0xcccb:	lea	rsi, [rbp - 0x2c0]
0xccd2:	mov	qword ptr [rbp - 0x3e8], rdi
0xccd9:	mov	rdi, rbx
0xccdc:	mov	qword ptr [rbp - 0x410], r14
0xcce3:	mov	rax, qword ptr fs:[0x28]
0xccec:	mov	qword ptr [rbp - 0x38], rax
0xccf0:	xor	eax, eax
0xccf2:	mov	qword ptr [rbp - 0x408], rsi
0xccf9:	call	0xe250


0xcc40:	mov	rax, qword ptr [rdi + 8]
0xcc44:	cmp	qword ptr [rdi + 0x10], rax
0xcc48:	je	0xcc50


0xcc00:	test	rdi, rdi
0xcc03:	push	rbx
0xcc04:	mov	rbx, rdi
0xcc07:	je	0xcc1a


0xcb80:	push	r12
0xcb82:	push	rbp
0xcb83:	push	rbx
0xcb84:	mov	rbx, rdi
0xcb87:	call	0x2370


0xcb40:	push	r13
0xcb42:	push	r12
0xcb44:	push	rbp
0xcb45:	push	rbx
0xcb46:	mov	ebx, edi
0xcb48:	sub	rsp, 8
0xcb4c:	cmp	edi, 2
0xcb4f:	ja	0xcb72


0xcb00:	sub	rsp, 8
0xcb04:	mov	edi, 0xe
0xcb09:	call	0x2400


0xcac0:	movsx	rcx, byte ptr [rdi]
0xcac4:	test	cl, cl
0xcac6:	je	0xcaf0


0xca60:	sub	rsp, 8
0xca64:	xor	esi, esi
0xca66:	call	0x2460


0xc9f0:	sub	rsp, 0x58
0xc9f4:	mov	qword ptr [rsp + 0x30], rdx
0xc9f9:	xor	edx, edx
0xc9fb:	mov	rax, qword ptr fs:[0x28]
0xca04:	mov	qword ptr [rsp + 0x18], rax
0xca09:	xor	eax, eax
0xca0b:	test	sil, 0x40
0xca0f:	jne	0xca38


0xc970:	push	r12
0xc972:	push	rbp
0xc973:	mov	rbp, rdi
0xc976:	push	rbx
0xc977:	call	0x20e0


0xc920:	push	r14
0xc922:	push	r13
0xc924:	push	r12
0xc926:	push	rbp
0xc927:	push	rbx
0xc928:	mov	r14, qword ptr [rsi]
0xc92b:	test	r14, r14
0xc92e:	je	0xc961


0xc8b0:	push	r15
0xc8b2:	push	r14
0xc8b4:	mov	r14, rdi
0xc8b7:	push	r13
0xc8b9:	push	r12
0xc8bb:	mov	r12, rsi
0xc8be:	push	rbp
0xc8bf:	push	rbx
0xc8c0:	mov	rbp, rcx
0xc8c3:	mov	rbx, rdx
0xc8c6:	mov	rcx, r8
0xc8c9:	mov	rdx, rbp
0xc8cc:	sub	rsp, 8
0xc8d0:	mov	rsi, rbx
0xc8d3:	mov	rdi, r12
0xc8d6:	mov	r15, r8
0xc8d9:	mov	r13, r9
0xc8dc:	call	0xc5f0


0xc790:	push	r15
0xc792:	push	r14
0xc794:	mov	r14, rdi
0xc797:	push	r13
0xc799:	push	r12
0xc79b:	xor	edi, edi
0xc79d:	push	rbp
0xc79e:	push	rbx
0xc79f:	mov	rbp, rsi
0xc7a2:	lea	rsi, [rip + 0x44af]
0xc7a9:	mov	r12, rdx
0xc7ac:	mov	edx, 5
0xc7b1:	sub	rsp, 8
0xc7b5:	mov	rbx, qword ptr [rip + 0x207b84]
0xc7bc:	call	0x2190


0xc710:	cmp	rdx, -1
0xc714:	push	r12
0xc716:	mov	edx, 5
0xc71b:	push	rbp
0xc71c:	mov	r12, rsi
0xc71f:	push	rbx
0xc720:	mov	rbp, rdi
0xc723:	je	0xc770


0xc5f0:	push	r15
0xc5f2:	push	r14
0xc5f4:	mov	r15, rsi
0xc5f7:	push	r13
0xc5f9:	push	r12
0xc5fb:	mov	r13, rcx
0xc5fe:	push	rbp
0xc5ff:	push	rbx
0xc600:	mov	rbp, rdx
0xc603:	sub	rsp, 0x28
0xc607:	mov	qword ptr [rsp + 8], rdi
0xc60c:	mov	qword ptr [rsp + 0x18], rdx
0xc611:	call	0x21b0


0xc5e0:	mov	edi, 1
0xc5e5:	jmp	0x4d70


0xc4f0:	push	r15
0xc4f2:	push	r14
0xc4f4:	mov	eax, 0x401
0xc4f9:	push	r13
0xc4fb:	push	r12
0xc4fd:	mov	r13, rdi
0xc500:	push	rbp
0xc501:	push	rbx
0xc502:	lea	rbx, [rsi + 1]
0xc506:	movabs	r14, 0x3fffffffffffffff
0xc510:	movabs	r15, 0x7ffffffffffffffe
0xc51a:	sub	rsp, 8
0xc51e:	cmp	rsi, 0x401
0xc525:	cmovae	rbx, rax
0xc529:	nop	dword ptr [rax]
0xc530:	mov	rdi, rbx
0xc533:	call	0x23c0


0xc470:	push	rbx
0xc471:	mov	rax, rsi
0xc474:	mov	rbx, rdi
0xc477:	xor	edi, edi
0xc479:	sub	rsp, 0x10
0xc47d:	mov	rcx, qword ptr fs:[0x28]
0xc486:	mov	qword ptr [rsp + 8], rcx
0xc48b:	xor	ecx, ecx
0xc48d:	mov	rsi, rsp
0xc490:	mov	rcx, rdx
0xc493:	mov	rdx, rax
0xc496:	call	0xcca0


0xbc20:	push	r15
0xbc22:	push	r14
0xbc24:	lea	rsi, [rip + 0x435a]
0xbc2b:	push	r13
0xbc2d:	push	r12
0xbc2f:	lea	rdi, [rip + 0x4f1c]
0xbc36:	push	rbp
0xbc37:	push	rbx
0xbc38:	sub	rsp, 0x68
0xbc3c:	mov	rax, qword ptr fs:[0x28]
0xbc45:	mov	qword ptr [rsp + 0x58], rax
0xbc4a:	xor	eax, eax
0xbc4c:	call	0x24e0


0xbbe0:	push	rbx
0xbbe1:	mov	rbx, rdi
0xbbe4:	mov	rdi, qword ptr [rdi]
0xbbe7:	call	0x2070


0xbb50:	push	rbx
0xbb51:	mov	rbx, rdi
0xbb54:	call	0x21b0


0xbac0:	push	r13
0xbac2:	push	r12
0xbac4:	mov	r13, rsi
0xbac7:	push	rbp
0xbac8:	push	rbx
0xbac9:	mov	rbx, rdi
0xbacc:	mov	r12, rdx
0xbacf:	sub	rsp, 0x18
0xbad3:	mov	rax, qword ptr fs:[0x28]
0xbadc:	mov	qword ptr [rsp + 8], rax
0xbae1:	xor	eax, eax
0xbae3:	lea	rax, [rsp + 4]
0xbae8:	test	rdi, rdi
0xbaeb:	cmove	rbx, rax
0xbaef:	mov	rdi, rbx
0xbaf2:	call	0x2210


0xb990:	push	r12
0xb992:	push	rbp
0xb993:	mov	r12, rdi
0xb996:	push	rbx
0xb997:	mov	rbx, rdx
0xb99a:	sub	rsp, 0x190
0xb9a1:	mov	rax, qword ptr fs:[0x28]
0xb9aa:	mov	qword ptr [rsp + 0x188], rax
0xb9b2:	xor	eax, eax
0xb9b4:	mov	eax, dword ptr [rip + 0x208926]
0xb9ba:	mov	rbp, rsp
0xb9bd:	test	eax, eax
0xb9bf:	js	0xb9f0


0xb6b0:	push	r15
0xb6b2:	push	r14
0xb6b4:	push	r13
0xb6b6:	push	r12
0xb6b8:	push	rbp
0xb6b9:	push	rbx
0xb6ba:	mov	rbp, rdi
0xb6bd:	sub	rsp, 0x18
0xb6c1:	mov	rax, qword ptr fs:[0x28]
0xb6ca:	mov	qword ptr [rsp + 8], rax
0xb6cf:	xor	eax, eax
0xb6d1:	call	0x21e0


0xb670:	push	rbp
0xb671:	push	rbx
0xb672:	mov	rbx, rdi
0xb675:	xor	eax, eax
0xb677:	mov	edx, 0x10900
0xb67c:	sub	rsp, 8
0xb680:	mov	edi, dword ptr [rdi]
0xb682:	call	0x21d0


0xb620:	mov	edi, dword ptr [rdi]
0xb622:	test	edi, edi
0xb624:	js	0xb640


0xb560:	sub	rsp, 0xd8
0xb567:	test	al, al
0xb569:	mov	qword ptr [rsp + 0x30], rdx
0xb56e:	mov	qword ptr [rsp + 0x38], rcx
0xb573:	mov	qword ptr [rsp + 0x40], r8
0xb578:	mov	qword ptr [rsp + 0x48], r9
0xb57d:	je	0xb5b6


0xb140:	push	r15
0xb142:	push	r14
0xb144:	push	r13
0xb146:	push	r12
0xb148:	push	rbp
0xb149:	push	rbx
0xb14a:	sub	rsp, 0x28
0xb14e:	mov	rax, qword ptr fs:[0x28]
0xb157:	mov	qword ptr [rsp + 0x18], rax
0xb15c:	xor	eax, eax
0xb15e:	cmp	edx, 0x24
0xb161:	ja	0xb4c5


0xb090:	push	r13
0xb092:	push	r12
0xb094:	mov	r10d, esi
0xb097:	push	rbp
0xb098:	push	rbx
0xb099:	mov	r12, r8
0xb09c:	sub	rsp, 0x18
0xb0a0:	mov	rax, qword ptr fs:[0x28]
0xb0a9:	mov	qword ptr [rsp + 8], rax
0xb0ae:	xor	eax, eax
0xb0b0:	cmp	edi, 3
0xb0b3:	mov	ebp, dword ptr [rip + 0x2091af]
0xb0b9:	ja	0xb114


0xb060:	push	rbx
0xb061:	xor	esi, esi
0xb063:	xor	edi, edi
0xb065:	call	0x22b0


0xb020:	lea	rsi, [rip + 0x58e8]
0xb027:	sub	rsp, 8
0xb02b:	mov	edx, 5
0xb030:	xor	edi, edi
0xb032:	call	0x2190


0xb000:	push	rbx
0xb001:	mov	rbx, rdi
0xb004:	call	0x21b0


0xafd0:	push	rbp
0xafd1:	push	rbx
0xafd2:	mov	rbp, rdi
0xafd5:	mov	rdi, rsi
0xafd8:	mov	rbx, rsi
0xafdb:	sub	rsp, 8
0xafdf:	call	0xadd0


0xafa0:	mov	rax, rdi
0xafa3:	sub	rsp, 8
0xafa7:	mul	rsi
0xafaa:	seto	dl
0xafad:	test	rax, rax
0xafb0:	js	0xafc9


0xaf80:	push	rbx
0xaf81:	mov	rbx, rdi
0xaf84:	call	0xadd0


0xaf30:	test	rdi, rdi
0xaf33:	mov	rax, qword ptr [rsi]
0xaf36:	je	0xaf60


0xaea0:	test	rdi, rdi
0xaea3:	mov	r9, rdx
0xaea6:	mov	rcx, qword ptr [rsi]
0xaea9:	je	0xaee0


0xae70:	mov	rax, rsi
0xae73:	mul	rdx
0xae76:	mov	rsi, rax
0xae79:	seto	al
0xae7c:	test	rsi, rsi
0xae7f:	js	0xae8b


0xae30:	test	rsi, rsi
0xae33:	push	rbx
0xae34:	mov	rbx, rsi
0xae37:	jne	0xae3e


0xae20:	jmp	0xadd0


0xadf0:	mov	rax, rdi
0xadf3:	mul	rsi
0xadf6:	mov	rdi, rax
0xadf9:	seto	al
0xadfc:	test	rdi, rdi
0xadff:	js	0xae0b


0xadd0:	push	rbx
0xadd1:	mov	rbx, rdi
0xadd4:	call	0x23c0


0xad50:	push	rbx
0xad51:	lea	rsi, [rip + 0x58aa]
0xad58:	mov	edx, 5
0xad5d:	xor	edi, edi
0xad5f:	call	0x2190


0xac70:	push	rbp
0xac71:	push	rbx
0xac72:	mov	r10d, 0x20
0xac78:	xor	r11d, r11d
0xac7b:	sub	rsp, 0xb8
0xac82:	mov	rax, qword ptr fs:[0x28]
0xac8b:	mov	qword ptr [rsp + 0x78], rax
0xac90:	xor	eax, eax
0xac92:	lea	rax, [rsp + 0xd0]
0xac9a:	mov	qword ptr [rsp + 0xa0], r8
0xaca2:	lea	rbx, [rsp + 0xd0]
0xacaa:	lea	r8, [rsp + 0x20]
0xacaf:	mov	qword ptr [rsp + 0xa8], r9
0xacb7:	mov	dword ptr [rsp + 8], 0x20
0xacbf:	mov	qword ptr [rsp + 0x10], rax
0xacc4:	lea	rax, [rsp + 0x80]
0xaccc:	xor	r9d, r9d
0xaccf:	mov	qword ptr [rsp + 0x18], rax
0xacd4:	mov	rbp, rax
0xacd7:	nop	word ptr [rax + rax]
0xace0:	cmp	r10d, 0x2f
0xace4:	ja	0xad3c


0xabf0:	sub	rsp, 0x68
0xabf4:	mov	r10, r8
0xabf7:	xor	r9d, r9d
0xabfa:	mov	rax, qword ptr fs:[0x28]
0xac03:	mov	qword ptr [rsp + 0x58], rax
0xac08:	xor	eax, eax
0xac0a:	mov	r8, rsp
0xac0d:	nop	dword ptr [rax]
0xac10:	mov	eax, dword ptr [r10]
0xac13:	cmp	eax, 0x2f
0xac16:	ja	0xac5a


0xabd0:	xor	r9d, r9d
0xabd3:	cmp	qword ptr [r8], 0
0xabd7:	je	0xabeb


0xa7b0:	push	r15
0xa7b2:	push	r14
0xa7b4:	push	r13
0xa7b6:	push	r12
0xa7b8:	mov	r12, r9
0xa7bb:	push	rbp
0xa7bc:	push	rbx
0xa7bd:	mov	rbp, rdi
0xa7c0:	mov	rbx, r8
0xa7c3:	sub	rsp, 0x28
0xa7c7:	test	rsi, rsi
0xa7ca:	je	0xa8e8


0xa790:	push	rbx
0xa791:	mov	rbx, rdi
0xa794:	mov	edi, dword ptr [rdi]
0xa796:	test	edi, edi
0xa798:	js	0xa79f


0xa770:	mov	eax, dword ptr [rdi]
0xa772:	test	eax, eax
0xa774:	js	0xa780


0xa720:	push	rbx
0xa721:	mov	rbx, rdi
0xa724:	mov	qword ptr [rdi + 8], 0
0xa72c:	lea	rdi, [rip + 0x57d9]
0xa733:	xor	eax, eax
0xa735:	mov	esi, 0x80000
0xa73a:	call	0xc9f0


0xa700:	mov	edx, 0xffffff9c
0xa705:	mov	rcx, rsi
0xa708:	mov	rsi, rdi
0xa70b:	mov	edi, edx
0xa70d:	jmp	0xa660


0xa660:	push	r15
0xa662:	push	r14
0xa664:	mov	r15d, edx
0xa667:	push	r13
0xa669:	push	r12
0xa66b:	push	rbp
0xa66c:	push	rbx
0xa66d:	mov	rbp, rcx
0xa670:	mov	rbx, rsi
0xa673:	sub	rsp, 0x18
0xa677:	mov	dword ptr [rsp + 0xc], edi
0xa67b:	mov	rdi, rsi
0xa67e:	call	0x5f30


0xa530:	push	r13
0xa532:	push	r12
0xa534:	mov	r13d, edi
0xa537:	push	rbp
0xa538:	push	rbx
0xa539:	mov	rdi, rsi
0xa53c:	mov	ebp, edx
0xa53e:	mov	r12, rcx
0xa541:	sub	rsp, 0x138
0xa548:	mov	rax, qword ptr fs:[0x28]
0xa551:	mov	qword ptr [rsp + 0x128], rax
0xa559:	xor	eax, eax
0xa55b:	call	0x5e50


0xa510:	lea	rcx, [rip + 0x209d69]
0xa517:	mov	rsi, rdi
0xa51a:	mov	rdx, -1
0xa521:	xor	edi, edi
0xa523:	jmp	0x9bd0


0xa4f0:	lea	rcx, [rip + 0x209d89]
0xa4f7:	mov	rdx, -1
0xa4fe:	jmp	0x9bd0


0xa4d0:	lea	rcx, [rip + 0x209da9]
0xa4d7:	mov	rdx, rsi
0xa4da:	mov	rsi, rdi
0xa4dd:	xor	edi, edi
0xa4df:	jmp	0x9bd0


0xa4c0:	lea	rcx, [rip + 0x209db9]
0xa4c7:	jmp	0x9bd0


0xa4a0:	mov	r8, rcx
0xa4a3:	mov	rcx, rdx
0xa4a6:	mov	rdx, rsi
0xa4a9:	mov	rsi, rdi
0xa4ac:	xor	edi, edi
0xa4ae:	jmp	0xa3d0


0xa480:	mov	rcx, rdx
0xa483:	mov	r8, -1
0xa48a:	mov	rdx, rsi
0xa48d:	mov	rsi, rdi
0xa490:	xor	edi, edi
0xa492:	jmp	0xa3d0


0xa470:	mov	r8, -1
0xa477:	jmp	0xa3d0


0xa3d0:	sub	rsp, 0x48
0xa3d4:	mov	r9, rcx
0xa3d7:	mov	rcx, qword ptr [rip + 0x20a192]
0xa3de:	movdqa	xmm0, xmmword ptr [rip + 0x20a15a]
0xa3e6:	mov	rax, qword ptr fs:[0x28]
0xa3ef:	mov	qword ptr [rsp + 0x38], rax
0xa3f4:	xor	eax, eax
0xa3f6:	movaps	xmmword ptr [rsp], xmm0
0xa3fa:	test	rsi, rsi
0xa3fd:	mov	qword ptr [rsp + 0x30], rcx
0xa402:	mov	dword ptr [rsp], 0xa
0xa409:	movdqa	xmm0, xmmword ptr [rip + 0x20a13f]
0xa411:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xa416:	movdqa	xmm0, xmmword ptr [rip + 0x20a142]
0xa41e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xa423:	je	0xa457


0xa340:	sub	rsp, 0x48
0xa344:	mov	rax, rdx
0xa347:	mov	rdx, qword ptr fs:[0x28]
0xa350:	mov	qword ptr [rsp + 0x38], rdx
0xa355:	xor	edx, edx
0xa357:	cmp	esi, 0xa
0xa35a:	je	0xa3c4


0xa330:	mov	edx, 0x3a
0xa335:	jmp	0xa260


0xa310:	mov	edx, 0x3a
0xa315:	mov	rsi, -1
0xa31c:	jmp	0xa260


0xa300:	movsx	edx, sil
0xa304:	mov	rsi, -1
0xa30b:	jmp	0xa260


0xa260:	sub	rsp, 0x48
0xa264:	mov	ecx, edx
0xa266:	mov	rax, qword ptr fs:[0x28]
0xa26f:	mov	qword ptr [rsp + 0x38], rax
0xa274:	xor	eax, eax
0xa276:	mov	rax, qword ptr [rip + 0x20a2f3]
0xa27d:	mov	r8, rsp
0xa280:	and	ecx, 0x1f
0xa283:	movdqa	xmm0, xmmword ptr [rip + 0x20a2b5]
0xa28b:	mov	qword ptr [rsp + 0x30], rax
0xa290:	mov	eax, edx
0xa292:	movaps	xmmword ptr [rsp], xmm0
0xa296:	shr	al, 5
0xa299:	movzx	eax, al
0xa29c:	lea	r9, [r8 + rax*4 + 8]
0xa2a1:	movdqa	xmm0, xmmword ptr [rip + 0x20a2a7]
0xa2a9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xa2ae:	movdqa	xmm0, xmmword ptr [rip + 0x20a2aa]
0xa2b6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xa2bb:	mov	edx, dword ptr [r9]
0xa2be:	mov	eax, edx
0xa2c0:	shr	eax, cl
0xa2c2:	not	eax
0xa2c4:	and	eax, 1
0xa2c7:	shl	eax, cl
0xa2c9:	mov	rcx, r8
0xa2cc:	xor	eax, edx
0xa2ce:	mov	rdx, rsi
0xa2d1:	mov	rsi, rdi
0xa2d4:	mov	dword ptr [r9], eax
0xa2d7:	xor	edi, edi
0xa2d9:	call	0x9bd0


0xa250:	mov	rcx, rdx
0xa253:	mov	rdx, rsi
0xa256:	mov	esi, edi
0xa258:	xor	edi, edi
0xa25a:	jmp	0xa1b0


0xa240:	mov	rdx, rsi
0xa243:	mov	esi, edi
0xa245:	xor	edi, edi
0xa247:	jmp	0xa120


0xa1b0:	sub	rsp, 0x48
0xa1b4:	mov	rax, rdx
0xa1b7:	mov	rdx, rcx
0xa1ba:	mov	rcx, qword ptr fs:[0x28]
0xa1c3:	mov	qword ptr [rsp + 0x38], rcx
0xa1c8:	xor	ecx, ecx
0xa1ca:	cmp	esi, 0xa
0xa1cd:	je	0xa230


0xa120:	sub	rsp, 0x48
0xa124:	mov	rax, rdx
0xa127:	mov	rdx, qword ptr fs:[0x28]
0xa130:	mov	qword ptr [rsp + 0x38], rdx
0xa135:	xor	edx, edx
0xa137:	cmp	esi, 0xa
0xa13a:	je	0xa1a4


0xa100:	lea	rcx, [rip + 0x20a439]
0xa107:	mov	rdx, rsi
0xa10a:	mov	rsi, rdi
0xa10d:	xor	edi, edi
0xa10f:	jmp	0x9bd0


0xa0e0:	lea	rcx, [rip + 0x20a459]
0xa0e7:	mov	rsi, rdi
0xa0ea:	mov	rdx, -1
0xa0f1:	xor	edi, edi
0xa0f3:	jmp	0x9bd0


0xa0d0:	lea	rcx, [rip + 0x20a469]
0xa0d7:	jmp	0x9bd0


0xa0b0:	lea	rcx, [rip + 0x20a489]
0xa0b7:	mov	rdx, -1
0xa0be:	jmp	0x9bd0


0xa010:	mov	eax, dword ptr [rip + 0x20a2a2]
0xa016:	push	r12
0xa018:	mov	r12, qword ptr [rip + 0x20a2a1]
0xa01f:	push	rbp
0xa020:	push	rbx
0xa021:	cmp	eax, 1
0xa024:	jle	0xa051


0xa000:	mov	rcx, rdx
0xa003:	xor	edx, edx
0xa005:	jmp	0x9f10


0x9f10:	push	r15
0x9f12:	push	r14
0x9f14:	lea	rax, [rip + 0x20a625]
0x9f1b:	push	r13
0x9f1d:	push	r12
0x9f1f:	mov	r12, rdx
0x9f22:	push	rbp
0x9f23:	push	rbx
0x9f24:	mov	rbx, rcx
0x9f27:	mov	r14, rdi
0x9f2a:	mov	r15, rsi
0x9f2d:	sub	rsp, 0x38
0x9f31:	test	rcx, rcx
0x9f34:	cmove	rbx, rax
0x9f38:	xor	ebp, ebp
0x9f3a:	call	0x20b0


0x9e90:	push	r15
0x9e92:	push	r14
0x9e94:	lea	rax, [rip + 0x20a6a5]
0x9e9b:	push	r13
0x9e9d:	push	r12
0x9e9f:	mov	r13, rdi
0x9ea2:	push	rbp
0x9ea3:	push	rbx
0x9ea4:	mov	rbx, r8
0x9ea7:	mov	r14, rsi
0x9eaa:	mov	r15, rdx
0x9ead:	sub	rsp, 0x18
0x9eb1:	test	r8, r8
0x9eb4:	cmove	rbx, rax
0x9eb8:	mov	qword ptr [rsp + 8], rcx
0x9ebd:	call	0x20b0


0x9e60:	lea	rax, [rip + 0x20a6d9]
0x9e67:	test	rdi, rdi
0x9e6a:	cmove	rdi, rax
0x9e6e:	test	rsi, rsi
0x9e71:	mov	dword ptr [rdi], 0xa
0x9e77:	je	0x9e87


0x9e40:	lea	rax, [rip + 0x20a6f9]
0x9e47:	test	rdi, rdi
0x9e4a:	cmove	rdi, rax
0x9e4e:	mov	eax, dword ptr [rdi + 4]
0x9e51:	mov	dword ptr [rdi + 4], esi
0x9e54:	ret	


0x9e00:	lea	rax, [rip + 0x20a739]
0x9e07:	test	rdi, rdi
0x9e0a:	mov	ecx, esi
0x9e0c:	cmove	rdi, rax
0x9e10:	mov	eax, esi
0x9e12:	and	ecx, 0x1f
0x9e15:	shr	al, 5
0x9e18:	movzx	eax, al
0x9e1b:	lea	rdi, [rdi + rax*4 + 8]
0x9e20:	mov	esi, dword ptr [rdi]
0x9e22:	mov	eax, esi
0x9e24:	shr	eax, cl
0x9e26:	xor	edx, eax
0x9e28:	and	eax, 1
0x9e2b:	and	edx, 1
0x9e2e:	shl	edx, cl
0x9e30:	xor	edx, esi
0x9e32:	mov	dword ptr [rdi], edx
0x9e34:	ret	


0x9de0:	lea	rax, [rip + 0x20a759]
0x9de7:	test	rdi, rdi
0x9dea:	cmove	rdi, rax
0x9dee:	mov	dword ptr [rdi], esi
0x9df0:	ret	


0x9dc0:	lea	rax, [rip + 0x20a779]
0x9dc7:	test	rdi, rdi
0x9dca:	cmove	rdi, rax
0x9dce:	mov	eax, dword ptr [rdi]
0x9dd0:	ret	


0x9d80:	push	r12
0x9d82:	push	rbp
0x9d83:	push	rbx
0x9d84:	mov	rbx, rdi
0x9d87:	call	0x20b0


0x9bd0:	push	r15
0x9bd2:	push	r14
0x9bd4:	movsxd	r15, edi
0x9bd7:	push	r13
0x9bd9:	push	r12
0x9bdb:	mov	r14, rdx
0x9bde:	push	rbp
0x9bdf:	push	rbx
0x9be0:	mov	rbp, rcx
0x9be3:	sub	rsp, 0x28
0x9be7:	mov	qword ptr [rsp + 8], rsi
0x9bec:	call	0x20b0


0x8990:	push	r15
0x8992:	push	r14
0x8994:	mov	r15d, r8d
0x8997:	push	r13
0x8999:	push	r12
0x899b:	mov	r14, rdi
0x899e:	push	rbp
0x899f:	push	rbx
0x89a0:	mov	ebx, r9d
0x89a3:	mov	r13, rsi
0x89a6:	mov	rbp, rcx
0x89a9:	and	ebx, 2
0x89ac:	sub	rsp, 0xb8
0x89b3:	mov	rax, qword ptr [rsp + 0xf0]
0x89bb:	mov	qword ptr [rsp + 0x10], rdx
0x89c0:	mov	dword ptr [rsp + 8], r8d
0x89c5:	mov	dword ptr [rsp + 0x78], r9d
0x89ca:	mov	qword ptr [rsp + 0x20], rax
0x89cf:	mov	rax, qword ptr [rsp + 0xf8]
0x89d7:	mov	qword ptr [rsp + 0x68], rax
0x89dc:	mov	rax, qword ptr [rsp + 0x100]
0x89e4:	mov	qword ptr [rsp + 0x60], rax
0x89e9:	mov	rax, qword ptr fs:[0x28]
0x89f2:	mov	qword ptr [rsp + 0xa8], rax
0x89fa:	xor	eax, eax
0x89fc:	call	0x21a0


0x88a0:	push	rbp
0x88a1:	push	rbx
0x88a2:	mov	rbp, rdi
0x88a5:	mov	ebx, esi
0x88a7:	sub	rsp, 8
0x88ab:	call	0xcb00


0x8800:	test	rdi, rdi
0x8803:	push	rbx
0x8804:	je	0x887d


0x87d0:	push	rbp
0x87d1:	push	rbx
0x87d2:	mov	ebp, esi
0x87d4:	mov	rbx, rdi
0x87d7:	sub	rsp, 8
0x87db:	call	0x21b0


0x8610:	push	r15
0x8612:	push	r14
0x8614:	push	r13
0x8616:	push	r12
0x8618:	lea	r13, [rdi + rsi]
0x861c:	push	rbp
0x861d:	push	rbx
0x861e:	mov	rbx, rdi
0x8621:	sub	rsp, 0x38
0x8625:	mov	rax, qword ptr fs:[0x28]
0x862e:	mov	qword ptr [rsp + 0x28], rax
0x8633:	xor	eax, eax
0x8635:	mov	dword ptr [rsp + 0xc], edx
0x8639:	call	0x21a0


0x8570:	push	r15
0x8572:	push	r14
0x8574:	mov	r15, rdi
0x8577:	push	r13
0x8579:	push	r12
0x857b:	xor	r12d, r12d
0x857e:	push	rbp
0x857f:	push	rbx
0x8580:	mov	rbp, rsi
0x8583:	sub	rsp, 0x18
0x8587:	mov	r13, qword ptr [rsi]
0x858a:	mov	dword ptr [rsp + 8], edx
0x858e:	mov	dword ptr [rsp + 0xc], ecx
0x8592:	mov	rax, r13
0x8595:	nop	dword ptr [rax]
0x8598:	lea	rbx, [rax + 1]
0x859c:	mov	rdi, r12
0x859f:	mov	rsi, rbx
0x85a2:	call	0x2450


0x81a0:	push	r15
0x81a2:	push	r14
0x81a4:	mov	r14, rdi
0x81a7:	push	r13
0x81a9:	push	r12
0x81ab:	mov	r13, rsi
0x81ae:	push	rbp
0x81af:	push	rbx
0x81b0:	mov	ebx, r9d
0x81b3:	mov	r12, rcx
0x81b6:	sub	rsp, 0x38
0x81ba:	mov	qword ptr [rsp + 0x10], rdx
0x81bf:	mov	dword ptr [rsp + 0x1c], r8d
0x81c4:	call	0x21b0


0x8150:	lea	rcx, [rsi + 0x14]
0x8154:	mov	byte ptr [rsi + 0x14], 0
0x8158:	movabs	rsi, 0xcccccccccccccccd
0x8162:	nop	word ptr [rax + rax]
0x8168:	mov	rax, rdi
0x816b:	sub	rcx, 1
0x816f:	mul	rsi
0x8172:	shr	rdx, 3
0x8176:	lea	rax, [rdx + rdx*4]
0x817a:	add	rax, rax
0x817d:	sub	rdi, rax
0x8180:	add	edi, 0x30
0x8183:	test	rdx, rdx
0x8186:	mov	byte ptr [rcx], dil
0x8189:	mov	rdi, rdx
0x818c:	jne	0x8168


0x7f60:	push	r13
0x7f62:	push	r12
0x7f64:	mov	r13, rsi
0x7f67:	push	rbp
0x7f68:	push	rbx
0x7f69:	mov	r12, rdx
0x7f6c:	mov	rbx, rdi
0x7f6f:	sub	rsp, 0x18
0x7f73:	mov	rax, qword ptr fs:[0x28]
0x7f7c:	mov	qword ptr [rsp + 8], rax
0x7f81:	xor	eax, eax
0x7f83:	test	rdi, rdi
0x7f86:	je	0x80a0


0x7550:	push	r15
0x7552:	push	r14
0x7554:	mov	eax, edx
0x7556:	push	r13
0x7558:	push	r12
0x755a:	mov	r15d, edx
0x755d:	push	rbp
0x755e:	push	rbx
0x755f:	and	eax, 0x20
0x7562:	and	r15d, 3
0x7566:	mov	r12d, edx
0x7569:	mov	rbx, rdi
0x756c:	sub	rsp, 0x98
0x7573:	mov	qword ptr [rsp + 0x18], rcx
0x7578:	mov	dword ptr [rsp + 0x30], eax
0x757c:	mov	rcx, qword ptr fs:[0x28]
0x7585:	mov	qword ptr [rsp + 0x88], rcx
0x758d:	xor	ecx, ecx
0x758f:	cmp	eax, 1
0x7592:	mov	qword ptr [rsp], rsi
0x7596:	mov	qword ptr [rsp + 0x10], r8
0x759b:	sbb	eax, eax
0x759d:	and	eax, 0xffffffe8
0x75a0:	add	eax, 0x400
0x75a5:	mov	dword ptr [rsp + 0x34], eax
0x75a9:	call	0x2120


0x7480:	fld	dword ptr [rip + 0x8baa]
0x7486:	fld	xword ptr [rsp + 8]
0x748a:	fucomi	st(1)
0x748c:	jae	0x7500


0x7460:	push	rbx
0x7461:	mov	rbx, rdi
0x7464:	mov	rdi, qword ptr [rdi]
0x7467:	call	0x2070


0x7420:	xor	eax, eax
0x7422:	mov	rdx, qword ptr [rsi + 8]
0x7426:	cmp	qword ptr [rdi + 8], rdx
0x742a:	je	0x7430


0x73f0:	xor	eax, eax
0x73f2:	mov	rdx, qword ptr [rsi + 8]
0x73f6:	cmp	qword ptr [rdi + 8], rdx
0x73fa:	je	0x7400


0x73e0:	mov	rax, qword ptr [rdi + 8]
0x73e4:	xor	edx, edx
0x73e6:	div	rsi
0x73e9:	mov	rax, rdx
0x73ec:	ret	


0x73b0:	push	rbp
0x73b1:	push	rbx
0x73b2:	mov	rbp, rdi
0x73b5:	mov	rbx, rsi
0x73b8:	sub	rsp, 8
0x73bc:	mov	rdi, qword ptr [rdi]
0x73bf:	call	0xcac0


0x71a0:	push	r12
0x71a2:	push	rbp
0x71a3:	mov	ecx, 1
0x71a8:	push	rbx
0x71a9:	mov	rbx, rdi
0x71ac:	sub	rsp, 0x10
0x71b0:	mov	rdx, rsp
0x71b3:	mov	rax, qword ptr fs:[0x28]
0x71bc:	mov	qword ptr [rsp + 8], rax
0x71c1:	xor	eax, eax
0x71c3:	call	0x61c0


0x7140:	push	rbx
0x7141:	mov	rbx, rsi
0x7144:	sub	rsp, 0x10
0x7148:	mov	rdx, rsp
0x714b:	mov	rax, qword ptr fs:[0x28]
0x7154:	mov	qword ptr [rsp + 8], rax
0x7159:	xor	eax, eax
0x715b:	call	0x6eb0


0x6eb0:	push	r13
0x6eb2:	push	r12
0x6eb4:	push	rbp
0x6eb5:	push	rbx
0x6eb6:	sub	rsp, 0x18
0x6eba:	mov	rax, qword ptr fs:[0x28]
0x6ec3:	mov	qword ptr [rsp + 8], rax
0x6ec8:	xor	eax, eax
0x6eca:	test	rsi, rsi
0x6ecd:	je	0x708d


0x6c70:	push	r12
0x6c72:	push	rbp
0x6c73:	mov	rbp, rdi
0x6c76:	push	rbx
0x6c77:	sub	rsp, 0x60
0x6c7b:	mov	r12, qword ptr [rdi + 0x28]
0x6c7f:	mov	rax, qword ptr fs:[0x28]
0x6c88:	mov	qword ptr [rsp + 0x58], rax
0x6c8d:	xor	eax, eax
0x6c8f:	cmp	byte ptr [r12 + 0x10], 0
0x6c95:	jne	0x6ce8


0x6b90:	push	r12
0x6b92:	push	rbp
0x6b93:	mov	r12, rdi
0x6b96:	push	rbx
0x6b97:	cmp	qword ptr [rdi + 0x40], 0
0x6b9c:	mov	rbp, qword ptr [rdi]
0x6b9f:	mov	rax, qword ptr [rdi + 8]
0x6ba3:	je	0x6bf3


0x6b00:	push	r12
0x6b02:	push	rbp
0x6b03:	mov	rbp, rdi
0x6b06:	push	rbx
0x6b07:	mov	r12, qword ptr [rdi]
0x6b0a:	cmp	r12, qword ptr [rdi + 8]
0x6b0e:	jae	0x6b7b


0x6940:	push	r15
0x6942:	push	r14
0x6944:	lea	rax, [rip - 0x7db]
0x694b:	push	r13
0x694d:	push	r12
0x694f:	mov	r12, rdx
0x6952:	push	rbp
0x6953:	push	rbx
0x6954:	mov	r13, rcx
0x6957:	mov	rbp, rdi
0x695a:	mov	edi, 0x50
0x695f:	mov	r15, rsi
0x6962:	sub	rsp, 8
0x6966:	test	rdx, rdx
0x6969:	mov	r14, r8
0x696c:	cmove	r12, rax
0x6970:	lea	rax, [rip - 0x7f7]
0x6977:	test	rcx, rcx
0x697a:	cmove	r13, rax
0x697e:	call	0x23c0


0x6920:	movabs	rax, 0x3f80000000000000
0x692a:	mov	byte ptr [rdi + 0x10], 0
0x692e:	mov	qword ptr [rdi], rax
0x6931:	movabs	rax, 0x3fb4fdf43f4ccccd
0x693b:	mov	qword ptr [rdi + 8], rax
0x693f:	ret	


0x68e0:	movzx	ecx, byte ptr [rdi]
0x68e3:	xor	edx, edx
0x68e5:	test	cl, cl
0x68e7:	je	0x690d


0x6870:	push	r15
0x6872:	push	r14
0x6874:	push	r13
0x6876:	push	r12
0x6878:	push	rbp
0x6879:	push	rbx
0x687a:	sub	rsp, 8
0x687e:	mov	r14, qword ptr [rdi]
0x6881:	cmp	qword ptr [rdi + 8], r14
0x6885:	jbe	0x68d6


0x6800:	mov	r9, qword ptr [rdi]
0x6803:	cmp	qword ptr [rdi + 8], r9
0x6807:	jbe	0x6862


0x6780:	push	rbp
0x6781:	push	rbx
0x6782:	mov	rbp, rdi
0x6785:	mov	rbx, rsi
0x6788:	sub	rsp, 8
0x678c:	call	0x6190


0x6730:	cmp	qword ptr [rdi + 0x20], 0
0x6735:	je	0x6763


0x66d0:	push	r12
0x66d2:	push	rbp
0x66d3:	mov	r12, rdi
0x66d6:	push	rbx
0x66d7:	mov	rbp, rsi
0x66da:	call	0x6190


0x6580:	push	r13
0x6582:	push	r12
0x6584:	mov	r12, rsi
0x6587:	push	rbp
0x6588:	push	rbx
0x6589:	xor	ebx, ebx
0x658b:	sub	rsp, 8
0x658f:	mov	rsi, qword ptr [rdi]
0x6592:	mov	rcx, qword ptr [rdi + 0x20]
0x6596:	mov	rbp, qword ptr [rdi + 0x10]
0x659a:	mov	r13, qword ptr [rdi + 0x18]
0x659e:	mov	rdi, qword ptr [rdi + 8]
0x65a2:	cmp	rsi, rdi
0x65a5:	jae	0x65e5


0x6520:	mov	rcx, qword ptr [rdi]
0x6523:	mov	r8, qword ptr [rdi + 8]
0x6527:	xor	edx, edx
0x6529:	xor	esi, esi
0x652b:	cmp	rcx, r8
0x652e:	jae	0x6566


0x64d0:	mov	rsi, qword ptr [rdi]
0x64d3:	mov	rdi, qword ptr [rdi + 8]
0x64d7:	xor	eax, eax
0x64d9:	cmp	rsi, rdi
0x64dc:	jae	0x6517


0x64c0:	mov	rax, qword ptr [rdi + 0x20]
0x64c4:	ret	


0x64b0:	mov	rax, qword ptr [rdi + 0x18]
0x64b4:	ret	


0x64a0:	mov	rax, qword ptr [rdi + 0x10]
0x64a4:	ret	


0x6360:	push	r15
0x6362:	push	r14
0x6364:	push	r13
0x6366:	push	r12
0x6368:	push	rbp
0x6369:	push	rbx
0x636a:	sub	rsp, 8
0x636e:	mov	r12, qword ptr [rsi]
0x6371:	cmp	r12, qword ptr [rsi + 8]
0x6375:	jae	0x6458


0x62e0:	mov	rdx, qword ptr [rdi]
0x62e3:	lea	rcx, [rip + 0x9d16]
0x62ea:	mov	eax, 1
0x62ef:	cmp	rdx, rcx
0x62f2:	je	0x6355


0x61c0:	push	r14
0x61c2:	push	r13
0x61c4:	mov	r14, rdx
0x61c7:	push	r12
0x61c9:	push	rbp
0x61ca:	mov	r12, rdi
0x61cd:	push	rbx
0x61ce:	mov	rbp, rsi
0x61d1:	mov	r13d, ecx
0x61d4:	call	0x6190


0x6190:	push	rbx
0x6191:	mov	rbx, rdi
0x6194:	mov	rdi, rsi
0x6197:	mov	rsi, qword ptr [rbx + 0x10]
0x619b:	call	qword ptr [rbx + 0x30]


0x6180:	cmp	rdi, rsi
0x6183:	sete	al
0x6186:	ret	


0x6170:	mov	rax, rdi
0x6173:	xor	edx, edx
0x6175:	ror	rax, 3
0x6179:	div	rsi
0x617c:	mov	rax, rdx
0x617f:	ret	


0x60d0:	cmp	rdi, 0xa
0x60d4:	mov	eax, 0xa
0x60d9:	movabs	r9, 0xaaaaaaaaaaaaaaab
0x60e3:	cmovb	rdi, rax
0x60e7:	or	rdi, 1
0x60eb:	cmp	rdi, -1
0x60ef:	je	0x615f


0x6070:	sub	rsp, 0x28
0x6074:	mov	rax, qword ptr fs:[0x28]
0x607d:	mov	qword ptr [rsp + 0x18], rax
0x6082:	xor	eax, eax
0x6084:	test	rdi, rdi
0x6087:	je	0x60ac


0x5fe0:	test	rdi, rdi
0x5fe3:	je	0x6060


0x5f90:	push	rbx
0x5f91:	mov	rbx, rdi
0x5f94:	call	0x21b0


0x5f30:	movzx	edx, byte ptr [rdi]
0x5f33:	mov	rax, rdi
0x5f36:	cmp	dl, 0x2f
0x5f39:	jne	0x5f4c


0x5ed0:	push	rbp
0x5ed1:	push	rbx
0x5ed2:	mov	rbp, rdi
0x5ed5:	sub	rsp, 8
0x5ed9:	call	0x5e70


0x5e70:	push	rbp
0x5e71:	push	rbx
0x5e72:	xor	ebp, ebp
0x5e74:	mov	rbx, rdi
0x5e77:	sub	rsp, 8
0x5e7b:	cmp	byte ptr [rdi], 0x2f
0x5e7e:	sete	bpl
0x5e82:	call	0x5f30


0x5e50:	sub	rsp, 8
0x5e54:	call	0x5ed0


0x5da0:	push	rbp
0x5da1:	push	rbx
0x5da2:	sub	rsp, 8
0x5da6:	mov	rdi, qword ptr [rip + 0x20e55b]
0x5dad:	call	0xc970


0x5d90:	mov	byte ptr [rip + 0x20e681], dil
0x5d97:	ret	


0x5d80:	mov	qword ptr [rip + 0x20e699], rdi
0x5d87:	ret	


0x5740:	push	r15
0x5742:	push	r14
0x5744:	push	r13
0x5746:	push	r12
0x5748:	push	rbp
0x5749:	push	rbx
0x574a:	sub	rsp, 0xe8
0x5751:	mov	rax, qword ptr fs:[0x28]
0x575a:	mov	qword ptr [rsp + 0xd8], rax
0x5762:	xor	eax, eax
0x5764:	mov	eax, esi
0x5766:	and	eax, 4
0x5769:	setne	byte ptr [rsp + 0x1b]
0x576e:	and	esi, 3
0x5771:	mov	dword ptr [rsp + 0x1c], eax
0x5775:	lea	eax, [rsi - 1]
0x5778:	mov	dword ptr [rsp + 4], esi
0x577c:	test	esi, eax
0x577e:	jne	0x5cd0


0x5380:	push	rbp
0x5381:	mov	rbp, rsp
0x5384:	push	r15
0x5386:	push	r14
0x5388:	push	r13
0x538a:	lea	r13, [rbp - 0x170]
0x5391:	push	r12
0x5393:	push	rbx
0x5394:	mov	r12, rdi
0x5397:	mov	rbx, rsi
0x539a:	mov	rdi, r13
0x539d:	sub	rsp, 0x148
0x53a4:	mov	rax, qword ptr fs:[0x28]
0x53ad:	mov	qword ptr [rbp - 0x38], rax
0x53b1:	xor	eax, eax
0x53b3:	call	0xa720


0x5210:	push	r15
0x5212:	push	r14
0x5214:	lea	r14, [rip + 0x20ee05]
0x521b:	push	r13
0x521d:	push	r12
0x521f:	push	rbp
0x5220:	push	rbx
0x5221:	sub	rsp, 0x18
0x5225:	call	0xb000


0x4d70:	push	r13
0x4d72:	push	r12
0x4d74:	mov	edx, 5
0x4d79:	push	rbp
0x4d7a:	push	rbx
0x4d7b:	mov	ebp, edi
0x4d7d:	sub	rsp, 0x88
0x4d84:	mov	rbx, qword ptr [rip + 0x20f69d]
0x4d8b:	mov	rax, qword ptr fs:[0x28]
0x4d94:	mov	qword ptr [rsp + 0x78], rax
0x4d99:	xor	eax, eax
0x4d9b:	test	edi, edi
0x4d9d:	je	0x4dcd


0x4350:	push	r15
0x4352:	push	r14
0x4354:	mov	r14, rdi
0x4357:	push	r13
0x4359:	push	r12
0x435b:	mov	r13, rdx
0x435e:	push	rbp
0x435f:	push	rbx
0x4360:	mov	r12, rsi
0x4363:	mov	rbx, r8
0x4366:	sub	rsp, 0x418
0x436d:	mov	eax, dword ptr [rsp + 0x460]
0x4374:	mov	ebp, dword ptr [rsp + 0x450]
0x437b:	mov	qword ptr [rsp], rcx
0x437f:	mov	r15, qword ptr [rsp + 0x458]
0x4387:	mov	dword ptr [rsp + 8], eax
0x438b:	mov	rax, qword ptr fs:[0x28]
0x4394:	mov	qword ptr [rsp + 0x408], rax
0x439c:	xor	eax, eax
0x439e:	test	bpl, bpl
0x43a1:	je	0x43d8


0x4270:	push	r15
0x4272:	push	r14
0x4274:	push	r13
0x4276:	push	r12
0x4278:	mov	r12, rdi
0x427b:	push	rbp
0x427c:	push	rbx
0x427d:	sub	rsp, 0x38
0x4281:	mov	rax, qword ptr fs:[0x28]
0x428a:	mov	qword ptr [rsp + 0x28], rax
0x428f:	xor	eax, eax
0x4291:	call	0x21b0


0x41a0:	push	rbp
0x41a1:	push	rbx
0x41a2:	mov	edx, 8
0x41a7:	mov	rbp, rsi
0x41aa:	mov	ebx, edi
0x41ac:	sub	rsp, 8
0x41b0:	mov	rax, qword ptr [rip + 0x2101b9]
0x41b7:	mov	rdi, qword ptr [rip + 0x2101ba]
0x41be:	lea	rsi, [rax + 1]
0x41c2:	mov	rax, rdx
0x41c5:	mul	rsi
0x41c8:	mov	qword ptr [rip + 0x2101a1], rsi
0x41cf:	jo	0x4237


0x3f10:	push	r15
0x3f12:	push	r14
0x3f14:	push	r13
0x3f16:	push	r12
0x3f18:	push	rbp
0x3f19:	push	rbx
0x3f1a:	sub	rsp, 0x2c8
0x3f21:	mov	rax, qword ptr fs:[0x28]
0x3f2a:	mov	qword ptr [rsp + 0x2b8], rax
0x3f32:	xor	eax, eax
0x3f34:	call	0x3dc0


0x3ec0:	mov	eax, dword ptr [rip + 0x21014a]
0x3ec6:	push	rbx
0x3ec7:	mov	rbx, rdi
0x3eca:	test	eax, eax
0x3ecc:	js	0x3ef0


0x3e50:	mov	rax, rsi
0x3e53:	mov	rsi, rdx
0x3e56:	cmp	rax, -3
0x3e5a:	jbe	0x3e90


0x3dc0:	mov	rax, qword ptr [rip + 0x210599]
0x3dc7:	mov	edx, 8
0x3dcc:	push	rbx
0x3dcd:	mov	rdi, qword ptr [rip + 0x210594]
0x3dd4:	lea	rsi, [rax + 1]
0x3dd8:	mov	rax, rdx
0x3ddb:	mul	rsi
0x3dde:	mov	qword ptr [rip + 0x21057b], rsi
0x3de5:	jo	0x3e42


0x3db0:	jmp	0x2070


0x3d50:	push	r12
0x3d52:	push	rbp
0x3d53:	push	rbx
0x3d54:	mov	rbx, qword ptr [rip + 0x21068d]
0x3d5b:	test	rbx, rbx
0x3d5e:	sete	al
0x3d61:	test	rdi, rdi
0x3d64:	sete	bpl
0x3d68:	or	bpl, al
0x3d6b:	jne	0x3d90


0x3d00:	push	r12
0x3d02:	push	rbp
0x3d03:	push	rbx
0x3d04:	mov	rbx, qword ptr [rip + 0x2106e5]
0x3d0b:	test	rbx, rbx
0x3d0e:	sete	al
0x3d11:	test	rdi, rdi
0x3d14:	sete	r12b
0x3d18:	or	r12b, al
0x3d1b:	jne	0x3d38


0x3cf0:	mov	rax, qword ptr [rsi]
0x3cf3:	cmp	qword ptr [rdi], rax
0x3cf6:	sete	al
0x3cf9:	ret	


0x3ce0:	mov	rax, qword ptr [rdi]
0x3ce3:	xor	edx, edx
0x3ce5:	div	rsi
0x3ce8:	mov	rax, rdx
0x3ceb:	ret	


0x3cb0:	jmp	0x3ccb


0x3ca0:	push	rbp
0x3ca1:	mov	rbp, rsp
0x3ca4:	pop	rbp
0x3ca5:	jmp	0x3c10


0x3c60:	cmp	byte ptr [rip + 0x2106e1], 0
0x3c67:	jne	0x3c98


0x3c10:	lea	rdi, [rip + 0x2106d9]
0x3c17:	lea	rsi, [rip + 0x2106d2]
0x3c1e:	push	rbp
0x3c1f:	sub	rsi, rdi
0x3c22:	mov	rbp, rsp
0x3c25:	sar	rsi, 3
0x3c29:	mov	rax, rsi
0x3c2c:	shr	rax, 0x3f
0x3c30:	add	rsi, rax
0x3c33:	sar	rsi, 1
0x3c36:	je	0x3c50


0x3bd0:	lea	rdi, [rip + 0x210719]
0x3bd7:	push	rbp
0x3bd8:	lea	rax, [rip + 0x210711]
0x3bdf:	cmp	rax, rdi
0x3be2:	mov	rbp, rsp
0x3be5:	je	0x3c00


0x3ba0:	xor	ebp, ebp
0x3ba2:	mov	r9, rdx
0x3ba5:	pop	rsi
0x3ba6:	mov	rdx, rsp
0x3ba9:	and	rsp, 0xfffffffffffffff0
0x3bad:	push	rax
0x3bae:	push	rsp
0x3baf:	lea	r8, [rip + 0xb3fa]
0x3bb6:	lea	rcx, [rip + 0xb383]
0x3bbd:	lea	rdi, [rip - 0x1604]
0x3bc4:	call	qword ptr [rip + 0x21040e]


0x25c0:	push	r15
0x25c2:	push	r14
0x25c4:	mov	r14, rsi
0x25c7:	push	r13
0x25c9:	push	r12
0x25cb:	push	rbp
0x25cc:	push	rbx
0x25cd:	lea	rbx, [rip + 0x2112ac]
0x25d4:	xor	ebp, ebp
0x25d6:	sub	rsp, 0x148
0x25dd:	mov	dword ptr [rsp + 8], edi
0x25e1:	mov	rdi, qword ptr [rsi]
0x25e4:	lea	r15, [rsp + 0x80]
0x25ec:	mov	rax, qword ptr fs:[0x28]
0x25f5:	mov	qword ptr [rsp + 0x138], rax
0x25fd:	xor	eax, eax
0x25ff:	call	0x8800


0x2020:	sub	rsp, 8
0x2024:	mov	rax, qword ptr [rip + 0x211fb5]
0x202b:	test	rax, rax
0x202e:	je	0x2032


0x24f0:	jmp	qword ptr [rip + 0x211a7a]


0xe2cb:	movzx	eax, byte ptr [rdi]
0xe2ce:	test	al, al
0xe2d0:	jne	0xe2c0


0xe0bd:	xor	eax, eax
0xe0bf:	ret	


0xe05a:	lea	r8, [rip + 0x2c8f]
0xe061:	lea	r10, [rip + 0x2ce8]
0xe068:	lea	r9, [rip + 0x2c75]
0xe06f:	xor	ecx, ecx
0xe071:	nop	dword ptr [rax]
0xe078:	cmp	dword ptr [rax], 0x16
0xe07b:	ja	0xe0c0


0xe022:	mov	rax, qword ptr [rsp + 0x10]
0xe027:	xor	esi, esi
0xe029:	mov	edx, dword ptr [rax + 0x10]
0xe02c:	xor	eax, eax
0xe02e:	call	0x2150


0xde21:	cmp	esi, 0x406
0xde27:	jne	0xde70


0xcc50:	mov	rax, qword ptr [rdi + 0x20]
0xcc54:	cmp	qword ptr [rdi + 0x28], rax
0xcc58:	jne	0xcc4a


0xcc4a:	jmp	0x24d0


0xcc1a:	mov	rdi, rbx
0xcc1d:	pop	rbx
0xcc1e:	jmp	0x23d0


0xcc09:	call	0x2420


0x2370:	jmp	qword ptr [rip + 0x211b3a]


0xcb51:	call	0xddc0


0xcb72:	add	rsp, 8
0xcb76:	mov	eax, ebx
0xcb78:	pop	rbx
0xcb79:	pop	rbp
0xcb7a:	pop	r12
0xcb7c:	pop	r13
0xcb7e:	ret	


0x2400:	jmp	qword ptr [rip + 0x211af2]


0xcaf0:	xor	edx, edx
0xcaf2:	mov	rax, rdx
0xcaf5:	ret	


0xcac8:	xor	eax, eax
0xcaca:	nop	word ptr [rax + rax]
0xcad0:	rol	rax, 9
0xcad4:	add	rdi, 1
0xcad8:	add	rax, rcx
0xcadb:	movsx	rcx, byte ptr [rdi]
0xcadf:	test	cl, cl
0xcae1:	jne	0xcad0


0x2460:	jmp	qword ptr [rip + 0x211ac2]


0xca11:	xor	eax, eax
0xca13:	call	0x24c0


0xca38:	lea	rax, [rsp + 0x60]
0xca3d:	mov	dword ptr [rsp], 0x10
0xca44:	mov	edx, dword ptr [rsp + 0x30]
0xca48:	mov	qword ptr [rsp + 8], rax
0xca4d:	lea	rax, [rsp + 0x20]
0xca52:	mov	qword ptr [rsp + 0x10], rax
0xca57:	jmp	0xca11


0x20e0:	jmp	qword ptr [rip + 0x211c82]


0xc961:	pop	rbx
0xc962:	mov	rax, r14
0xc965:	pop	rbp
0xc966:	pop	r12
0xc968:	pop	r13
0xc96a:	pop	r14
0xc96c:	ret	


0xc930:	mov	r12, rcx
0xc933:	mov	r13, rdi
0xc936:	mov	rbp, rdx
0xc939:	lea	rbx, [rsi + 8]
0xc93d:	jmp	0xc94f


0x2190:	jmp	qword ptr [rip + 0x211c2a]


0xc770:	lea	rsi, [rip + 0x44a9]
0xc777:	xor	edi, edi
0xc779:	call	0x2190


0xc725:	lea	rsi, [rip + 0x450f]
0xc72c:	xor	edi, edi
0xc72e:	call	0x2190


0x21b0:	jmp	qword ptr [rip + 0x211c1a]


0x23c0:	jmp	qword ptr [rip + 0x211b12]


0x24e0:	jmp	qword ptr [rip + 0x211a82]


0x2070:	jmp	qword ptr [rip + 0x211cba]


0x2210:	jmp	qword ptr [rip + 0x211bea]


0xb9f0:	mov	rdi, rbp
0xb9f3:	call	0x2260


0xb9c1:	je	0xba0a


0x21e0:	jmp	qword ptr [rip + 0x211c02]


0x21d0:	jmp	qword ptr [rip + 0x211c0a]


0xb640:	ret	


0xb626:	sub	rsp, 8
0xb62a:	call	0x22d0


0xb5b6:	mov	rax, qword ptr fs:[0x28]
0xb5bf:	mov	qword ptr [rsp + 0x18], rax
0xb5c4:	xor	eax, eax
0xb5c6:	lea	rax, [rsp + 0xe0]
0xb5ce:	mov	rdx, rsp
0xb5d1:	mov	qword ptr [rsp + 8], rax
0xb5d6:	lea	rax, [rsp + 0x20]
0xb5db:	mov	dword ptr [rsp], 0x10
0xb5e2:	mov	dword ptr [rsp + 4], 0x30
0xb5ea:	mov	qword ptr [rsp + 0x10], rax
0xb5ef:	call	0xc470


0xb57f:	movaps	xmmword ptr [rsp + 0x50], xmm0
0xb584:	movaps	xmmword ptr [rsp + 0x60], xmm1
0xb589:	movaps	xmmword ptr [rsp + 0x70], xmm2
0xb58e:	movaps	xmmword ptr [rsp + 0x80], xmm3
0xb596:	movaps	xmmword ptr [rsp + 0x90], xmm4
0xb59e:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0xb5a6:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0xb5ae:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0xb5b6:	mov	rax, qword ptr fs:[0x28]
0xb5bf:	mov	qword ptr [rsp + 0x18], rax
0xb5c4:	xor	eax, eax
0xb5c6:	lea	rax, [rsp + 0xe0]
0xb5ce:	mov	rdx, rsp
0xb5d1:	mov	qword ptr [rsp + 8], rax
0xb5d6:	lea	rax, [rsp + 0x20]
0xb5db:	mov	dword ptr [rsp], 0x10
0xb5e2:	mov	dword ptr [rsp + 4], 0x30
0xb5ea:	mov	qword ptr [rsp + 0x10], rax
0xb5ef:	call	0xc470


0xb167:	lea	rax, [rsp + 0x10]
0xb16c:	mov	r15, rsi
0xb16f:	test	rsi, rsi
0xb172:	mov	rbp, rdi
0xb175:	mov	dword ptr [rsp + 8], edx
0xb179:	mov	r14, rcx
0xb17c:	mov	r13, r8
0xb17f:	cmove	r15, rax
0xb183:	call	0x20b0


0xb4c5:	lea	rcx, [rip + 0x55dc]
0xb4cc:	lea	rsi, [rip + 0x54b5]
0xb4d3:	lea	rdi, [rip + 0x54ce]
0xb4da:	mov	edx, 0x54
0xb4df:	call	0x2280


0xb0bb:	cmp	edi, 2
0xb0be:	jae	0xb10b


0xb114:	cmp	edi, 4
0xb117:	lea	rsi, [rip + 0x5802]
0xb11e:	je	0xb0cc


0x22b0:	jmp	qword ptr [rip + 0x211b9a]


0xafc9:	call	0xb020


0xafb2:	movzx	edx, dl
0xafb5:	test	rdx, rdx
0xafb8:	jne	0xafc9


0xaf60:	test	rax, rax
0xaf63:	mov	edx, 0x80
0xaf68:	cmove	rax, rdx
0xaf6c:	test	rax, rax
0xaf6f:	jns	0xaf52


0xaf38:	movabs	rdx, 0x5555555555555553
0xaf42:	cmp	rax, rdx
0xaf45:	ja	0xaf71


0xaee0:	test	rcx, rcx
0xaee3:	je	0xaf08


0xaeab:	xor	edx, edx
0xaead:	movabs	rax, 0x5555555555555554
0xaeb7:	div	r9
0xaeba:	cmp	rax, rcx
0xaebd:	jbe	0xaefb


0xae8b:	sub	rsp, 8
0xae8f:	call	0xb020


0xae81:	movzx	eax, al
0xae84:	test	rax, rax
0xae87:	jne	0xae8b


0xae39:	test	rdi, rdi
0xae3c:	jne	0xae58


0xae3e:	mov	rsi, rbx
0xae41:	call	0x2450


0xae0b:	sub	rsp, 8
0xae0f:	call	0xb020


0xae01:	movzx	eax, al
0xae04:	test	rax, rax
0xae07:	jne	0xae0b


0xace6:	mov	eax, r10d
0xace9:	mov	r11d, 1
0xacef:	add	r10d, 8
0xacf3:	add	rax, rbp
0xacf6:	mov	rax, qword ptr [rax]
0xacf9:	test	rax, rax
0xacfc:	mov	qword ptr [r8 + r9*8], rax
0xad00:	je	0xad0c


0xad3c:	mov	rax, rbx
0xad3f:	add	rbx, 8
0xad43:	jmp	0xacf6


0xac18:	mov	r11d, eax
0xac1b:	add	r11, qword ptr [r10 + 0x10]
0xac1f:	add	eax, 8
0xac22:	mov	dword ptr [r10], eax
0xac25:	mov	rax, qword ptr [r11]
0xac28:	test	rax, rax
0xac2b:	mov	qword ptr [r8 + r9*8], rax
0xac2f:	je	0xac3b


0xac5a:	mov	r11, qword ptr [r10 + 8]
0xac5e:	lea	rax, [r11 + 8]
0xac62:	mov	qword ptr [r10 + 8], rax
0xac66:	jmp	0xac25


0xabeb:	jmp	0xa7b0


0xa8e8:	mov	r8, rcx
0xa8eb:	mov	rcx, rdx
0xa8ee:	lea	rdx, [rip + 0x5cbf]
0xa8f5:	mov	esi, 1
0xa8fa:	xor	eax, eax
0xa8fc:	call	0x2530


0xa7d0:	mov	r8, rdx
0xa7d3:	lea	rdx, [rip + 0x5dce]
0xa7da:	mov	r9, rcx
0xa7dd:	xor	eax, eax
0xa7df:	mov	rcx, rsi
0xa7e2:	mov	esi, 1
0xa7e7:	call	0x2530


0xa79f:	mov	rdi, qword ptr [rbx + 8]
0xa7a3:	pop	rbx
0xa7a4:	jmp	0x2070


0xa79a:	call	0x22d0


0xa780:	mov	rdi, qword ptr [rdi + 8]
0xa784:	jmp	0xb6b0


0xa776:	mov	edi, eax
0xa778:	jmp	0x2440


0xa457:	call	0x20a0


0xa425:	test	rdx, rdx
0xa428:	je	0xa457


0xa3c4:	call	0x20a0


0xa35c:	mov	dword ptr [rsp], esi
0xa35f:	mov	rcx, rsp
0xa362:	mov	rdx, -1
0xa369:	mov	rsi, rax
0xa36c:	mov	qword ptr [rsp + 4], 0
0xa375:	mov	qword ptr [rsp + 0xc], 0x4000000
0xa37e:	mov	qword ptr [rsp + 0x14], 0
0xa387:	mov	qword ptr [rsp + 0x1c], 0
0xa390:	mov	qword ptr [rsp + 0x24], 0
0xa399:	mov	qword ptr [rsp + 0x2c], 0
0xa3a2:	mov	dword ptr [rsp + 0x34], 0
0xa3aa:	call	0x9bd0


0xa230:	call	0x20a0


0xa1cf:	mov	dword ptr [rsp], esi
0xa1d2:	mov	rcx, rsp
0xa1d5:	mov	rsi, rax
0xa1d8:	mov	qword ptr [rsp + 4], 0
0xa1e1:	mov	qword ptr [rsp + 0xc], 0
0xa1ea:	mov	qword ptr [rsp + 0x14], 0
0xa1f3:	mov	qword ptr [rsp + 0x1c], 0
0xa1fc:	mov	qword ptr [rsp + 0x24], 0
0xa205:	mov	qword ptr [rsp + 0x2c], 0
0xa20e:	mov	dword ptr [rsp + 0x34], 0
0xa216:	call	0x9bd0


0xa1a4:	call	0x20a0


0xa13c:	mov	dword ptr [rsp], esi
0xa13f:	mov	rcx, rsp
0xa142:	mov	rdx, -1
0xa149:	mov	rsi, rax
0xa14c:	mov	qword ptr [rsp + 4], 0
0xa155:	mov	qword ptr [rsp + 0xc], 0
0xa15e:	mov	qword ptr [rsp + 0x14], 0
0xa167:	mov	qword ptr [rsp + 0x1c], 0
0xa170:	mov	qword ptr [rsp + 0x24], 0
0xa179:	mov	qword ptr [rsp + 0x2c], 0
0xa182:	mov	dword ptr [rsp + 0x34], 0
0xa18a:	call	0x9bd0


0xa051:	mov	rdi, qword ptr [r12 + 8]
0xa056:	lea	rbx, [rip + 0x20a3e3]
0xa05d:	cmp	rdi, rbx
0xa060:	je	0xa079


0xa026:	sub	eax, 2
0xa029:	lea	rbx, [r12 + 0x18]
0xa02e:	shl	rax, 4
0xa032:	lea	rbp, [r12 + rax + 0x28]
0xa037:	nop	word ptr [rax + rax]
0xa040:	mov	rdi, qword ptr [rbx]
0xa043:	add	rbx, 0x10
0xa047:	call	0x2070


0x20b0:	jmp	qword ptr [rip + 0x211c9a]


0x9e87:	sub	rsp, 8
0x9e8b:	call	0x20a0


0x9e79:	test	rdx, rdx
0x9e7c:	je	0x9e87


0x21a0:	jmp	qword ptr [rip + 0x211c22]


0x887d:	mov	rcx, qword ptr [rip + 0x20babc]
0x8884:	lea	rdi, [rip + 0x7805]
0x888b:	mov	edx, 0x37
0x8890:	mov	esi, 1
0x8895:	call	0x2520


0x8806:	mov	esi, 0x2f
0x880b:	mov	rbx, rdi
0x880e:	call	0x2250


0x2450:	jmp	qword ptr [rip + 0x211aca]


0x818e:	mov	rax, rcx
0x8191:	ret	


0x8168:	mov	rax, rdi
0x816b:	sub	rcx, 1
0x816f:	mul	rsi
0x8172:	shr	rdx, 3
0x8176:	lea	rax, [rdx + rdx*4]
0x817a:	add	rax, rax
0x817d:	sub	rdi, rax
0x8180:	add	edi, 0x30
0x8183:	test	rdx, rdx
0x8186:	mov	byte ptr [rcx], dil
0x8189:	mov	rdi, rdx
0x818c:	jne	0x8168


0x80a0:	lea	rdi, [rip + 0x7108]
0x80a7:	call	0x2050


0x7f8c:	xor	ebp, ebp
0x7f8e:	cmp	byte ptr [rbx], 0x27
0x7f91:	jne	0x7f9c


0x2120:	jmp	qword ptr [rip + 0x211c62]


0x748e:	fstp	st(1)
0x7490:	fnstcw	word ptr [rsp - 0xa]
0x7494:	movzx	eax, word ptr [rsp - 0xa]
0x7499:	or	ah, 0xc
0x749c:	mov	word ptr [rsp - 0xc], ax
0x74a1:	fld	st(0)
0x74a3:	fldcw	word ptr [rsp - 0xc]
0x74a7:	fistp	qword ptr [rsp - 0x18]
0x74ab:	fldcw	word ptr [rsp - 0xa]
0x74af:	mov	rax, qword ptr [rsp - 0x18]
0x74b4:	mov	qword ptr [rsp - 0x20], rax
0x74b9:	test	rax, rax
0x74bc:	fild	qword ptr [rsp - 0x20]
0x74c0:	jns	0x74c8


0x7500:	fnstcw	word ptr [rsp - 0xa]
0x7504:	movzx	eax, word ptr [rsp - 0xa]
0x7509:	fsubr	st(1), st(0)
0x750b:	fxch	st(1)
0x750d:	movabs	rdx, 0x8000000000000000
0x7517:	or	ah, 0xc
0x751a:	mov	word ptr [rsp - 0xc], ax
0x751f:	fldcw	word ptr [rsp - 0xc]
0x7523:	fistp	qword ptr [rsp - 0x18]
0x7527:	fldcw	word ptr [rsp - 0xa]
0x752b:	mov	rax, qword ptr [rsp - 0x18]
0x7530:	xor	rax, rdx
0x7533:	jmp	0x74b4


0x7430:	mov	rcx, qword ptr [rsi + 0x10]
0x7434:	cmp	qword ptr [rdi + 0x10], rcx
0x7438:	jne	0x742c


0x742c:	ret	


0x7400:	mov	rcx, qword ptr [rsi + 0x10]
0x7404:	cmp	qword ptr [rdi + 0x10], rcx
0x7408:	jne	0x73fc


0x73fc:	ret	


0x708d:	call	0x20a0


0x6ed3:	mov	r12, rsp
0x6ed6:	xor	ecx, ecx
0x6ed8:	mov	r13, rdx
0x6edb:	mov	rdx, r12
0x6ede:	mov	rbx, rdi
0x6ee1:	mov	rbp, rsi
0x6ee4:	call	0x61c0


0x6c97:	test	rsi, rsi
0x6c9a:	js	0x6e18


0x6ce8:	mov	rdi, rsi
0x6ceb:	call	0x60d0


0x6bf3:	cmp	rbp, rax
0x6bf6:	jae	0x6c2c


0x6ba5:	cmp	qword ptr [rdi + 0x20], 0
0x6baa:	je	0x6bf3


0x6b10:	cmp	qword ptr [r12], 0
0x6b15:	je	0x6b71


0x6b7b:	mov	qword ptr [rbp + 0x18], 0
0x6b83:	mov	qword ptr [rbp + 0x20], 0
0x6b8b:	pop	rbx
0x6b8c:	pop	rbp
0x6b8d:	pop	r12
0x6b8f:	ret	


0x690d:	mov	rax, rdx
0x6910:	ret	


0x68d6:	xor	ebp, ebp
0x68d8:	jmp	0x68c4


0x6887:	mov	r13, rdx
0x688a:	mov	r12, rsi
0x688d:	mov	r15, rdi
0x6890:	xor	ebp, ebp
0x6892:	mov	rdi, qword ptr [r14]
0x6895:	test	rdi, rdi
0x6898:	je	0x68ba


0x6862:	xor	eax, eax
0x6864:	ret	


0x6809:	xor	r8d, r8d
0x680c:	mov	rcx, qword ptr [r9]
0x680f:	test	rcx, rcx
0x6812:	je	0x684d


0x6763:	xor	eax, eax
0x6765:	ret	


0x6737:	mov	rdx, qword ptr [rdi]
0x673a:	mov	rcx, qword ptr [rdi + 8]
0x673e:	cmp	rdx, rcx
0x6741:	jae	0x6768


0x65e5:	lea	rdx, [rip + 0x99a2]
0x65ec:	mov	esi, 1
0x65f1:	mov	rdi, r12
0x65f4:	xor	eax, eax
0x65f6:	call	0x2530


0x6530:	cmp	qword ptr [rcx], 0
0x6534:	je	0x655d


0x6566:	xor	eax, eax
0x6568:	cmp	qword ptr [rdi + 0x18], rsi
0x656c:	je	0x6570


0x6517:	ret	


0x637b:	mov	rbp, rdi
0x637e:	mov	r13, rsi
0x6381:	mov	r14d, edx
0x6384:	nop	dword ptr [rax]
0x6388:	mov	r15, qword ptr [r12]
0x638c:	test	r15, r15
0x638f:	je	0x644a


0x6458:	add	rsp, 8
0x645c:	mov	eax, 1
0x6461:	pop	rbx
0x6462:	pop	rbp
0x6463:	pop	r12
0x6465:	pop	r13
0x6467:	pop	r14
0x6469:	pop	r15
0x646b:	ret	


0x6355:	ret	


0x62f4:	movss	xmm0, dword ptr [rdx + 8]
0x62f9:	ucomiss	xmm0, dword ptr [rip + 0x9d14]
0x6300:	jbe	0x6350


0x615f:	mov	rax, rdi
0x6162:	ret	


0x60ac:	mov	rcx, qword ptr [rsp + 0x18]
0x60b1:	xor	rcx, qword ptr fs:[0x28]
0x60ba:	jne	0x60c1


0x6089:	mov	rax, qword ptr [rdx + 8]
0x608d:	mov	qword ptr [rsp], rsi
0x6091:	mov	rsi, rsp
0x6094:	mov	qword ptr [rsp + 8], rax
0x6099:	mov	rax, qword ptr [rdx]
0x609c:	mov	qword ptr [rsp + 0x10], rax
0x60a1:	call	0x66d0


0x6060:	ret	


0x5fe5:	push	r13
0x5fe7:	push	r12
0x5fe9:	mov	r13, rdi
0x5fec:	push	rbp
0x5fed:	push	rbx
0x5fee:	mov	r12, rsi
0x5ff1:	mov	edi, 0x18
0x5ff6:	mov	rbp, rdx
0x5ff9:	sub	rsp, 8
0x5ffd:	call	0xadd0


0x5f4c:	test	dl, dl
0x5f4e:	je	0x5f8a


0x5784:	test	rdi, rdi
0x5787:	mov	r14, rdi
0x578a:	je	0x5cd0


0x5cd0:	call	0x20b0


0x4dcd:	lea	rsi, [rip + 0xa5cc]
0x4dd4:	xor	edi, edi
0x4dd6:	call	0x2190


0x4d9f:	lea	rsi, [rip + 0xa5d2]
0x4da6:	xor	edi, edi
0x4da8:	call	0x2190


0x43d8:	test	r9b, r9b
0x43db:	je	0x43f0


0x43a3:	cmp	byte ptr [rip + 0x210063], 0
0x43aa:	je	0x43d8


0x4237:	mov	ecx, 1
0x423c:	jmp	0x41d3


0x41d1:	xor	ecx, ecx
0x41d3:	test	rax, rax
0x41d6:	js	0x425d


0x3ef0:	mov	edi, 1
0x3ef5:	call	0x20f0


0x3ece:	test	eax, eax
0x3ed0:	lea	rdx, [rip + 0x399]
0x3ed7:	lea	rax, [rip - 0x22e]
0x3ede:	mov	rdi, rbx
0x3ee1:	pop	rbx
0x3ee2:	cmovne	rax, rdx
0x3ee6:	jmp	rax


0x3e90:	movzx	r9d, dil
0x3e94:	mov	edx, dword ptr [rip + 0x21056e]
0x3e9a:	add	rsi, r9
0x3e9d:	test	dil, dil
0x3ea0:	jne	0x3e6b


0x3e5c:	test	dil, dil
0x3e5f:	je	0x3eb0


0x3e42:	mov	ecx, 1
0x3e47:	jmp	0x3de9


0x3de7:	xor	ecx, ecx
0x3de9:	test	rax, rax
0x3dec:	js	0x3e3d


0x3d6d:	mov	r12, rdi
0x3d70:	mov	rsi, qword ptr [rbx]
0x3d73:	mov	rdi, r12
0x3d76:	call	0x2340


0x3d90:	xor	ebp, ebp
0x3d92:	mov	eax, ebp
0x3d94:	pop	rbx
0x3d95:	pop	rbp
0x3d96:	pop	r12
0x3d98:	ret	


0x3d1d:	mov	rbp, rdi
0x3d20:	mov	rsi, qword ptr [rbx]
0x3d23:	mov	rdi, rbp
0x3d26:	call	0x2340


0x3d38:	mov	eax, r12d
0x3d3b:	pop	rbx
0x3d3c:	pop	rbp
0x3d3d:	pop	r12
0x3d3f:	ret	


0x3ccb:	movzx	eax, byte ptr [rdi]
0x3cce:	test	al, al
0x3cd0:	jne	0x3cb8


0x3c69:	cmp	qword ptr [rip + 0x21037f], 0
0x3c71:	push	rbp
0x3c72:	mov	rbp, rsp
0x3c75:	je	0x3c83


0x3c98:	ret	


0x3c50:	pop	rbp
0x3c51:	ret	


0x3c38:	mov	rax, qword ptr [rip + 0x2103a9]
0x3c3f:	test	rax, rax
0x3c42:	je	0x3c50


0x3c00:	pop	rbp
0x3c01:	ret	


0x3be7:	mov	rax, qword ptr [rip + 0x2103e2]
0x3bee:	test	rax, rax
0x3bf1:	je	0x3c00




0x2032:	add	rsp, 8
0x2036:	ret	


0x2030:	call	rax




0xe2d2:	lea	rax, [rbx + rbx*4]
0xe2d6:	lea	rax, [rbx + rax*2]
0xe2da:	mov	qword ptr [rcx + rax*8], rdi
0xe2de:	mov	rax, qword ptr [rsp + 0x10]
0xe2e3:	mov	qword ptr [r14 + 0x10], rax
0xe2e7:	mov	rax, qword ptr [rsp + 0x18]
0xe2ec:	mov	qword ptr [r14 + 0x18], rax
0xe2f0:	xor	eax, eax
0xe2f2:	add	rsp, 0x58
0xe2f6:	pop	rbx
0xe2f7:	pop	rbp
0xe2f8:	pop	r12
0xe2fa:	pop	r13
0xe2fc:	pop	r14
0xe2fe:	pop	r15
0xe300:	ret	


0xe2c0:	cmp	al, 0x25
0xe2c2:	lea	rbp, [rdi + 1]
0xe2c6:	je	0xe308


0xe07d:	mov	edx, dword ptr [rax]
0xe07f:	movsxd	rdx, dword ptr [r8 + rdx*4]
0xe083:	add	rdx, r8
0xe086:	jmp	rdx


0xe0c0:	mov	eax, 0xffffffff
0xe0c5:	ret	


0x2150:	jmp	qword ptr [rip + 0x211c4a]


0xde29:	mov	rax, qword ptr [rsp + 0x10]
0xde2e:	cmp	dword ptr [rip + 0x206743], 0
0xde35:	mov	dword ptr [rsp], 0x18
0xde3c:	mov	r12d, dword ptr [rax + 0x10]
0xde40:	mov	edx, r12d
0xde43:	js	0xdf73


0xde70:	cmp	esi, 0xb
0xde73:	je	0xdea0


0xcc5a:	cmp	qword ptr [rdi + 0x48], 0
0xcc5f:	jne	0xcc4a


0x24d0:	jmp	qword ptr [rip + 0x211a8a]


0x23d0:	jmp	qword ptr [rip + 0x211b0a]


0x2420:	jmp	qword ptr [rip + 0x211ae2]






0xcae3:	xor	edx, edx
0xcae5:	div	rsi
0xcae8:	mov	rax, rdx
0xcaeb:	ret	


0xcad0:	rol	rax, 9
0xcad4:	add	rdi, 1
0xcad8:	add	rax, rcx
0xcadb:	movsx	rcx, byte ptr [rdi]
0xcadf:	test	cl, cl
0xcae1:	jne	0xcad0




0x24c0:	jmp	qword ptr [rip + 0x211a92]




0xc94f:	mov	rdx, r12
0xc952:	mov	rsi, rbp
0xc955:	mov	rdi, r13
0xc958:	call	0x2300














0x2260:	jmp	qword ptr [rip + 0x211bc2]


0xba0a:	mov	rsi, rbp
0xba0d:	mov	rdi, r12
0xba10:	call	0x2380


0xb9c3:	mov	rsi, rbp
0xb9c6:	mov	rdi, r12
0xb9c9:	call	0x2430






0x22d0:	jmp	qword ptr [rip + 0x211b8a]


0x2280:	jmp	qword ptr [rip + 0x211bb2]


0xb0c0:	sub	edi, 1
0xb0c3:	lea	rsi, [rip + 0x5871]
0xb0ca:	jne	0xb106


0xb10b:	lea	rsi, [rip + 0x584e]
0xb112:	jmp	0xb0cc


0xb0cc:	test	r10d, r10d
0xb0cf:	movsxd	rax, r10d
0xb0d2:	js	0xb122


0xb120:	jmp	0xb106




0xafba:	call	0x2320


0xaf71:	sub	rsp, 8
0xaf75:	call	0xb020


0xaf52:	mov	qword ptr [rsi], rax
0xaf55:	mov	rsi, rax
0xaf58:	jmp	0xae30


0xaf47:	mov	rdx, rax
0xaf4a:	shr	rdx, 1
0xaf4d:	lea	rax, [rdx + rax + 1]
0xaf52:	mov	qword ptr [rsi], rax
0xaf55:	mov	rsi, rax
0xaf58:	jmp	0xae30


0xaf08:	xor	edx, edx
0xaf0a:	mov	eax, 0x80
0xaf0f:	xor	r8d, r8d
0xaf12:	div	r9
0xaf15:	test	rax, rax
0xaf18:	sete	r8b
0xaf1c:	lea	rcx, [r8 + rax]
0xaf20:	jmp	0xaee5


0xaee5:	mov	rax, rcx
0xaee8:	mul	r9
0xaeeb:	seto	dl
0xaeee:	test	rax, rax
0xaef1:	movzx	edx, dl
0xaef4:	js	0xaefb


0xaefb:	sub	rsp, 8
0xaeff:	call	0xb020


0xaebf:	mov	rax, rcx
0xaec2:	shr	rax, 1
0xaec5:	lea	rcx, [rax + rcx + 1]
0xaeca:	mov	qword ptr [rsi], rcx
0xaecd:	imul	rcx, r9
0xaed1:	mov	rsi, rcx
0xaed4:	jmp	0xae30


0xae89:	jmp	0xae30


0xae58:	call	0x2070


0xae09:	jmp	0xadd0


0xad0c:	test	r11b, r11b
0xad0f:	jne	0xad35


0xad02:	add	r9, 1
0xad06:	cmp	r9, 0xa
0xad0a:	jne	0xace0


0xacf6:	mov	rax, qword ptr [rax]
0xacf9:	test	rax, rax
0xacfc:	mov	qword ptr [r8 + r9*8], rax
0xad00:	je	0xad0c


0xac3b:	call	0xa7b0


0xac31:	add	r9, 1
0xac35:	cmp	r9, 0xa
0xac39:	jne	0xac10


0xac25:	mov	rax, qword ptr [r11]
0xac28:	test	rax, rax
0xac2b:	mov	qword ptr [r8 + r9*8], rax
0xac2f:	je	0xac3b


0xabe0:	add	r9, 1
0xabe4:	cmp	qword ptr [r8 + r9*8], 0
0xabe9:	jne	0xabe0


0x2530:	jmp	qword ptr [rip + 0x211a5a]


0x2440:	jmp	qword ptr [rip + 0x211ad2]


0x20a0:	jmp	qword ptr [rip + 0x211ca2]


0xa42a:	mov	qword ptr [rsp + 0x28], rsi
0xa42f:	mov	qword ptr [rsp + 0x30], rdx
0xa434:	mov	rcx, rsp
0xa437:	mov	rdx, r8
0xa43a:	mov	rsi, r9
0xa43d:	call	0x9bd0


0xa079:	lea	rbx, [rip + 0x20a250]
0xa080:	cmp	r12, rbx
0xa083:	je	0xa094


0xa062:	call	0x2070




0x9e7e:	mov	qword ptr [rdi + 0x28], rsi
0x9e82:	mov	qword ptr [rdi + 0x30], rdx
0x9e86:	ret	




0x2520:	jmp	qword ptr [rip + 0x211a62]


0x2250:	jmp	qword ptr [rip + 0x211bca]




0x2050:	jmp	qword ptr [rip + 0x211cca]


0x7f93:	add	rbx, 1
0x7f97:	mov	ebp, 4
0x7f9c:	lea	rdx, [rip + 0x80bd]
0x7fa3:	lea	rsi, [rip + 0x20baf6]
0x7faa:	mov	ecx, 4
0x7faf:	mov	rdi, rbx
0x7fb2:	call	0xc5f0


0x7f9c:	lea	rdx, [rip + 0x80bd]
0x7fa3:	lea	rsi, [rip + 0x20baf6]
0x7faa:	mov	ecx, 4
0x7faf:	mov	rdi, rbx
0x7fb2:	call	0xc5f0




0x74c2:	fadd	dword ptr [rip + 0x8b64]
0x74c8:	test	edi, edi
0x74ca:	jne	0x74f8


0x74c8:	test	edi, edi
0x74ca:	jne	0x74f8


0x74b4:	mov	qword ptr [rsp - 0x20], rax
0x74b9:	test	rax, rax
0x74bc:	fild	qword ptr [rsp - 0x20]
0x74c0:	jns	0x74c8


0x743a:	sub	rsp, 8
0x743e:	mov	rsi, qword ptr [rsi]
0x7441:	mov	rdi, qword ptr [rdi]
0x7444:	call	0x2340


0x740a:	sub	rsp, 8
0x740e:	mov	rsi, qword ptr [rsi]
0x7411:	mov	rdi, qword ptr [rdi]
0x7414:	call	0xa700


0x6e18:	mov	rax, rsi
0x6e1b:	pxor	xmm0, xmm0
0x6e1f:	shr	rax, 1
0x6e22:	and	esi, 1
0x6e25:	or	rax, rsi
0x6e28:	cvtsi2ss	xmm0, rax
0x6e2d:	addss	xmm0, xmm0
0x6e31:	jmp	0x6ca9


0x6ca0:	pxor	xmm0, xmm0
0x6ca4:	cvtsi2ss	xmm0, rsi
0x6ca9:	divss	xmm0, dword ptr [r12 + 8]
0x6cb0:	ucomiss	xmm0, dword ptr [rip + 0x9375]
0x6cb7:	jae	0x6df0


0x6c2c:	mov	rdi, qword ptr [r12 + 0x48]
0x6c31:	test	rdi, rdi
0x6c34:	je	0x6c51


0x6bac:	cmp	rbp, rax
0x6baf:	jae	0x6c2c


0x6b71:	add	r12, 0x10
0x6b75:	cmp	qword ptr [rbp + 8], r12
0x6b79:	ja	0x6b10


0x6b17:	mov	rbx, qword ptr [r12 + 8]
0x6b1c:	mov	rax, qword ptr [rbp + 0x40]
0x6b20:	test	rbx, rbx
0x6b23:	je	0x6b55


0x68f0:	mov	rax, rdx
0x68f3:	add	rdi, 1
0x68f7:	shl	rax, 5
0x68fb:	sub	rax, rdx
0x68fe:	xor	edx, edx
0x6900:	add	rax, rcx
0x6903:	movzx	ecx, byte ptr [rdi]
0x6906:	div	rsi
0x6909:	test	cl, cl
0x690b:	jne	0x68f0


0x68c4:	add	rsp, 8
0x68c8:	mov	rax, rbp
0x68cb:	pop	rbx
0x68cc:	pop	rbp
0x68cd:	pop	r12
0x68cf:	pop	r13
0x68d1:	pop	r14
0x68d3:	pop	r15
0x68d5:	ret	


0x68ba:	add	r14, 0x10
0x68be:	cmp	qword ptr [r15 + 8], r14
0x68c2:	ja	0x6892


0x689a:	mov	rbx, r14
0x689d:	jmp	0x68a3


0x684d:	add	r9, 0x10
0x6851:	cmp	qword ptr [rdi + 8], r9
0x6855:	ja	0x680c


0x6814:	cmp	rdx, r8
0x6817:	jbe	0x6857


0x6743:	mov	rax, qword ptr [rdx]
0x6746:	test	rax, rax
0x6749:	jne	0x6766


0x6768:	sub	rsp, 8
0x676c:	call	0x20a0


0x65dc:	add	rsi, 0x10
0x65e0:	cmp	rsi, rdi
0x65e3:	jb	0x65b0


0x65b6:	mov	rax, qword ptr [rsi + 8]
0x65ba:	mov	edx, 1
0x65bf:	test	rax, rax
0x65c2:	je	0x65d5


0x655d:	add	rcx, 0x10
0x6561:	cmp	rcx, r8
0x6564:	jb	0x6530


0x6536:	mov	rax, qword ptr [rcx + 8]
0x653a:	add	rsi, 1
0x653e:	add	rdx, 1
0x6542:	test	rax, rax
0x6545:	je	0x655d


0x6570:	cmp	qword ptr [rdi + 0x20], rdx
0x6574:	sete	al
0x6577:	ret	


0x656e:	ret	


0x650c:	add	rsi, 0x10
0x6510:	cmp	rsi, rdi
0x6513:	jb	0x64e0


0x64e6:	mov	rdx, qword ptr [rsi + 8]
0x64ea:	mov	ecx, 1
0x64ef:	test	rdx, rdx
0x64f2:	je	0x6505


0x644a:	add	r12, 0x10
0x644e:	cmp	qword ptr [r13 + 8], r12
0x6452:	ja	0x6388


0x6395:	mov	rbx, qword ptr [r12 + 8]
0x639a:	test	rbx, rbx
0x639d:	jne	0x63bc


0x6350:	mov	qword ptr [rdi], rcx
0x6353:	xor	eax, eax
0x6355:	ret	


0x6302:	movss	xmm1, dword ptr [rip + 0x9d0e]
0x630a:	ucomiss	xmm1, xmm0
0x630d:	jbe	0x6350


0x6150:	test	rax, rax
0x6153:	jne	0x615f


0x6117:	test	rcx, rcx
0x611a:	je	0x6155


0x60bc:	add	rsp, 0x28
0x60c0:	ret	


0x60c1:	call	0x21f0


0x5f40:	add	rax, 1
0x5f44:	movzx	edx, byte ptr [rax]
0x5f47:	cmp	dl, 0x2f
0x5f4a:	je	0x5f40


0x5f8a:	ret	


0x5f50:	mov	rcx, rax
0x5f53:	xor	esi, esi
0x5f55:	jmp	0x5f75


0x5790:	movzx	eax, byte ptr [rdi]
0x5793:	test	al, al
0x5795:	je	0x5d10


0x43f0:	mov	rdi, rbx
0x43f3:	call	0x3d00


0x43dd:	cmp	byte ptr [rip + 0x21002a], 0
0x43e4:	jne	0x43f0


0x43ac:	mov	rax, qword ptr [rsp + 0x408]
0x43b4:	xor	rax, qword ptr fs:[0x28]
0x43bd:	jne	0x4d66


0x41d3:	test	rax, rax
0x41d6:	js	0x425d


0x425d:	call	0xb020


0x41dc:	test	rcx, rcx
0x41df:	jne	0x425d


0x20f0:	jmp	qword ptr [rip + 0x211c7a]


0x3ea2:	mov	rdi, rax
0x3ea5:	jmp	0x7550


0x3e6b:	mov	rdi, rax
0x3e6e:	sub	rsp, 8
0x3e72:	neg	rdi
0x3e75:	call	0x7550


0x3eb0:	lea	rdx, [rip + 0xcaa2]
0x3eb7:	mov	rax, rdx
0x3eba:	ret	


0x3e61:	mov	edx, dword ptr [rip + 0x2105a1]
0x3e67:	add	rsi, 1
0x3e6b:	mov	rdi, rax
0x3e6e:	sub	rsp, 8
0x3e72:	neg	rdi
0x3e75:	call	0x7550


0x3de9:	test	rax, rax
0x3dec:	js	0x3e3d


0x3e3d:	call	0xb020


0x3dee:	test	rcx, rcx
0x3df1:	jne	0x3e3d


0x2340:	jmp	qword ptr [rip + 0x211b52]


0x3cd2:	ret	


0x3cb8:	cmp	al, 1
0x3cba:	jl	0x3cc7


0x3c83:	call	0x3bd0


0x3c77:	mov	rdi, qword ptr [rip + 0x21038a]
0x3c7e:	call	0x25b0


0x3c44:	pop	rbp
0x3c45:	jmp	rax


0x3bf3:	pop	rbp
0x3bf4:	jmp	rax


0xe308:	lea	rax, [rbx + rbx*4]
0xe30c:	mov	r13, r8
0xe30f:	lea	rax, [rbx + rax*2]
0xe313:	lea	r12, [rcx + rax*8]
0xe317:	mov	qword ptr [r12], rdi
0xe31b:	mov	dword ptr [r12 + 0x10], 0
0xe324:	mov	qword ptr [r12 + 0x18], 0
0xe32d:	mov	qword ptr [r12 + 0x20], 0
0xe336:	mov	qword ptr [r12 + 0x28], r8
0xe33b:	mov	qword ptr [r12 + 0x30], 0
0xe344:	mov	qword ptr [r12 + 0x38], 0
0xe34d:	mov	qword ptr [r12 + 0x40], r8
0xe352:	mov	qword ptr [r12 + 0x50], r8
0xe357:	movzx	ebx, byte ptr [rdi + 1]
0xe35b:	lea	eax, [rbx - 0x30]
0xe35e:	cmp	al, 9
0xe360:	ja	0xe39e


0xe2c8:	mov	rdi, rbp
0xe2cb:	movzx	eax, byte ptr [rdi]
0xe2ce:	test	al, al
0xe2d0:	jne	0xe2c0




0xdf73:	xor	esi, esi
0xdf75:	xor	eax, eax
0xdf77:	call	0x2150


0xde49:	xor	eax, eax
0xde4b:	mov	esi, 0x406
0xde50:	call	0x2150


0xdea0:	mov	edi, ebp
0xdea2:	xor	eax, eax
0xdea4:	call	0x2150


0xde75:	jg	0xded0


0xcc61:	push	r12
0xcc63:	push	rbp
0xcc64:	mov	r12d, edx
0xcc67:	push	rbx
0xcc68:	mov	rbp, rsi
0xcc6b:	mov	rbx, rdi
0xcc6e:	call	0x2370










0x2300:	jmp	qword ptr [rip + 0x211b72]




0x2380:	jmp	qword ptr [rip + 0x211b32]


0x2430:	jmp	qword ptr [rip + 0x211ada]






0xb106:	call	0x20a0


0xb122:	lea	rbx, [rip + 0x582f]
0xb129:	mov	byte ptr [rsp + 6], dl
0xb12d:	mov	byte ptr [rsp + 7], 0
0xb132:	lea	r13, [rsp + 6]
0xb137:	sub	rbx, rax
0xb13a:	jmp	0xb0e3


0xb0d4:	shl	rax, 5
0xb0d8:	lea	rbx, [rip + 0x5879]
0xb0df:	mov	r13, qword ptr [rcx + rax]
0xb0e3:	mov	edx, 5
0xb0e8:	xor	edi, edi
0xb0ea:	call	0x2190


0x2320:	jmp	qword ptr [rip + 0x211b62]


0xaef6:	test	rdx, rdx
0xaef9:	je	0xaeca


0xad11:	call	0xa7b0


0xad35:	mov	dword ptr [rsp + 8], r10d
0xad3a:	jmp	0xad11


0xace0:	cmp	r10d, 0x2f
0xace4:	ja	0xad3c


0xac10:	mov	eax, dword ptr [r10]
0xac13:	cmp	eax, 0x2f
0xac16:	ja	0xac5a








0xa094:	pop	rbx
0xa095:	mov	dword ptr [rip + 0x20a219], 1
0xa09f:	pop	rbp
0xa0a0:	pop	r12
0xa0a2:	ret	


0xa085:	mov	rdi, r12
0xa088:	call	0x2070








0x74cc:	fxch	st(1)
0x74ce:	fucomip	st(1)
0x74d0:	jp	0x74d8


0x74f8:	fstp	st(1)
0x74fa:	ret	


0x6ca9:	divss	xmm0, dword ptr [r12 + 8]
0x6cb0:	ucomiss	xmm0, dword ptr [rip + 0x9375]
0x6cb7:	jae	0x6df0


0x6cbd:	ucomiss	xmm0, dword ptr [rip + 0x936c]
0x6cc4:	jb	0x6e40


0x6df0:	xor	ebx, ebx
0x6df2:	mov	rcx, qword ptr [rsp + 0x58]
0x6df7:	xor	rcx, qword ptr fs:[0x28]
0x6e00:	mov	eax, ebx
0x6e02:	jne	0x6e9a


0x6c21:	add	rbp, 0x10
0x6c25:	cmp	qword ptr [r12 + 8], rbp
0x6c2a:	ja	0x6c00


0x6c51:	mov	rdi, qword ptr [r12]
0x6c55:	call	0x2070


0x6b55:	test	rax, rax
0x6b58:	je	0x6b60


0x6892:	mov	rdi, qword ptr [r14]
0x6895:	test	rdi, rdi
0x6898:	je	0x68ba


0x68a3:	mov	rsi, r13
0x68a6:	call	r12


0x6857:	mov	rax, r8
0x685a:	ret	


0x680c:	mov	rcx, qword ptr [r9]
0x680f:	test	rcx, rcx
0x6812:	je	0x684d


0x6819:	mov	qword ptr [rsi + r8*8], rcx
0x681d:	mov	rcx, qword ptr [r9 + 8]
0x6821:	lea	rax, [r8 + 1]
0x6825:	test	rcx, rcx
0x6828:	je	0x684a


0x6766:	ret	


0x65b0:	cmp	qword ptr [rsi], 0
0x65b4:	je	0x65dc


0x65d5:	cmp	rbx, rdx
0x65d8:	cmovb	rbx, rdx
0x65dc:	add	rsi, 0x10
0x65e0:	cmp	rsi, rdi
0x65e3:	jb	0x65b0


0x64e0:	cmp	qword ptr [rsi], 0
0x64e4:	je	0x650c


0x6515:	ret	


0x6505:	cmp	rax, rcx
0x6508:	cmovb	rax, rcx
0x650c:	add	rsi, 0x10
0x6510:	cmp	rsi, rdi
0x6513:	jb	0x64e0


0x6388:	mov	r15, qword ptr [r12]
0x638c:	test	r15, r15
0x638f:	je	0x644a


0x639f:	jmp	0x63fb


0x63bc:	mov	r15, qword ptr [rbx]
0x63bf:	mov	rdi, rbp
0x63c2:	mov	rsi, r15
0x63c5:	call	0x6190


0x630f:	movss	xmm1, dword ptr [rdx + 0xc]
0x6314:	ucomiss	xmm1, dword ptr [rip + 0x9d01]
0x631b:	jbe	0x6350


0x6155:	add	rdi, 2
0x6159:	cmp	rdi, -1
0x615d:	jne	0x60f8


0x611c:	mov	r8d, 0x10
0x6122:	mov	esi, 9
0x6127:	mov	ecx, 3
0x612c:	jmp	0x6139


0x21f0:	jmp	qword ptr [rip + 0x211bfa]


0x5f75:	cmp	dl, 0x2f
0x5f78:	jne	0x5f60


0x5d10:	call	0x20b0


0x579b:	cmp	al, 0x2f
0x579d:	je	0x5c60


0x43e6:	cmp	byte ptr [rip + 0x21001f], 0
0x43ed:	je	0x43ac


0x43c3:	add	rsp, 0x418
0x43ca:	pop	rbx
0x43cb:	pop	rbp
0x43cc:	pop	r12
0x43ce:	pop	r13
0x43d0:	pop	r14
0x43d2:	pop	r15
0x43d4:	ret	


0x4d66:	call	0x21f0


0x41e1:	shl	rsi, 3
0x41e5:	call	0xae30




0x3df3:	shl	rsi, 3
0x3df7:	call	0xae30




0x3cc7:	add	rdi, 1
0x3ccb:	movzx	eax, byte ptr [rdi]
0x3cce:	test	al, al
0x3cd0:	jne	0x3cb8


0x3cbc:	cmp	al, 0x1f
0x3cbe:	jle	0x3cc4


0x25b0:	jmp	qword ptr [rip + 0x211a3a]


0xe362:	jmp	0xe79a


0xe39e:	lea	rax, [rbp + 1]
0xe3a2:	cmp	bl, 0x27
0xe3a5:	mov	rdx, rax
0xe3a8:	jne	0xe370


0xde77:	cmp	esi, 4
0xde7a:	je	0xdf50


0xded0:	cmp	esi, 0x407
0xded6:	jg	0xdf20








0xb0e3:	mov	edx, 5
0xb0e8:	xor	edi, edi
0xb0ea:	call	0x2190




0xaeca:	mov	qword ptr [rsi], rcx
0xaecd:	imul	rcx, r9
0xaed1:	mov	rsi, rcx
0xaed4:	jmp	0xae30


0x74d8:	fstp	st(0)
0x74da:	nop	word ptr [rax + rax]
0x74e0:	add	rax, 1
0x74e4:	mov	qword ptr [rsp - 0x20], rax
0x74e9:	test	rax, rax
0x74ec:	fild	qword ptr [rsp - 0x20]
0x74f0:	js	0x7540


0x74d2:	je	0x74fa


0x6e40:	cvttss2si	rsi, xmm0
0x6e45:	jmp	0x6ce8


0x6cca:	subss	xmm0, dword ptr [rip + 0x935e]
0x6cd2:	movabs	rax, 0x8000000000000000
0x6cdc:	cvttss2si	rsi, xmm0
0x6ce1:	xor	rsi, rax
0x6ce4:	nop	dword ptr [rax]
0x6ce8:	mov	rdi, rsi
0x6ceb:	call	0x60d0


0x6e08:	add	rsp, 0x60
0x6e0c:	pop	rbx
0x6e0d:	pop	rbp
0x6e0e:	pop	r12
0x6e10:	ret	


0x6e9a:	call	0x21f0


0x6c00:	mov	rdi, qword ptr [rbp + 8]
0x6c04:	test	rdi, rdi
0x6c07:	je	0x6c21


0x6be6:	add	rbp, 0x10
0x6bea:	cmp	rax, rbp
0x6bed:	ja	0x6bb8


0x6bc1:	mov	rbx, rbp
0x6bc4:	jmp	0x6bd3


0x6b60:	mov	qword ptr [r12], 0
0x6b68:	mov	qword ptr [r12 + 8], 0
0x6b71:	add	r12, 0x10
0x6b75:	cmp	qword ptr [rbp + 8], r12
0x6b79:	ja	0x6b10


0x6b5a:	mov	rdi, qword ptr [r12]
0x6b5e:	call	rax


0x6b36:	mov	rdx, qword ptr [rbx + 8]
0x6b3a:	mov	rcx, qword ptr [rbp + 0x48]
0x6b3e:	mov	qword ptr [rbx], 0
0x6b45:	test	rdx, rdx
0x6b48:	mov	qword ptr [rbx + 8], rcx
0x6b4c:	mov	qword ptr [rbp + 0x48], rbx
0x6b50:	mov	rbx, rdx
0x6b53:	jne	0x6b28


0x6b2d:	mov	rdi, qword ptr [rbx]
0x6b30:	call	rax


0x684a:	mov	r8, rax
0x684d:	add	r9, 0x10
0x6851:	cmp	qword ptr [rdi + 8], r9
0x6855:	ja	0x680c


0x6759:	mov	rax, qword ptr [rdx]
0x675c:	test	rax, rax
0x675f:	je	0x6750


0x65c8:	mov	rax, qword ptr [rax + 8]
0x65cc:	add	rdx, 1
0x65d0:	test	rax, rax
0x65d3:	jne	0x65c8


0x6550:	mov	rax, qword ptr [rax + 8]
0x6554:	add	rdx, 1
0x6558:	test	rax, rax
0x655b:	jne	0x6550


0x64f8:	mov	rdx, qword ptr [rdx + 8]
0x64fc:	add	rcx, 1
0x6500:	test	rdx, rdx
0x6503:	jne	0x64f8


0x63fb:	test	r14b, r14b
0x63fe:	mov	qword ptr [r12 + 8], 0
0x6407:	jne	0x644a


0x631d:	movss	xmm1, dword ptr [rdx]
0x6321:	ucomiss	xmm1, dword ptr [rip + 0x9cf8]
0x6328:	jb	0x6350


0x60f8:	mov	rax, rdi
0x60fb:	mov	rcx, rdi
0x60fe:	mul	r9
0x6101:	mov	rax, rdx
0x6104:	shr	rax, 1
0x6107:	lea	rax, [rax + rax*2]
0x610b:	sub	rcx, rax
0x610e:	cmp	rdi, 9
0x6112:	mov	rax, rcx
0x6115:	jbe	0x6150


0x6139:	add	rcx, 2
0x613d:	xor	edx, edx
0x613f:	mov	rax, rdi
0x6142:	div	rcx
0x6145:	add	rsi, r8
0x6148:	cmp	rsi, rdi
0x614b:	mov	rax, rdx
0x614e:	jb	0x6130




0x5f7a:	add	rcx, 1
0x5f7e:	movzx	edx, byte ptr [rcx]
0x5f81:	mov	esi, 1
0x5f86:	test	dl, dl
0x5f88:	jne	0x5f75


0x5f60:	test	sil, sil
0x5f63:	je	0x5f6a


0x5c60:	mov	edi, 0x1000
0x5c65:	call	0xadd0


0x57a3:	call	0xb060


0x3cc4:	mov	byte ptr [rdi], 0x3f
0x3cc7:	add	rdi, 1
0x3ccb:	movzx	eax, byte ptr [rdi]
0x3cce:	test	al, al
0x3cd0:	jne	0x3cb8


0x3cc0:	cmp	al, 0x7f
0x3cc2:	jne	0x3cc7


0xe79a:	mov	rax, rbp
0xe79d:	nop	dword ptr [rax]
0xe7a0:	add	rax, 1
0xe7a4:	movzx	edx, byte ptr [rax]
0xe7a7:	lea	ecx, [rdx - 0x30]
0xe7aa:	cmp	cl, 9
0xe7ad:	jbe	0xe7a0


0xe3aa:	or	dword ptr [r12 + 0x10], 1
0xe3b0:	jmp	0xe398


0xe370:	cmp	bl, 0x2d
0xe373:	je	0xe3b8


0xdf50:	mov	eax, dword ptr [rsp]
0xdf53:	cmp	eax, 0x2f
0xdf56:	ja	0xe044


0xde80:	jg	0xdf40


0xded8:	cmp	esi, 0x406
0xdede:	jge	0xdf50


0xdf20:	cmp	esi, 0x409
0xdf26:	je	0xdf50


0x7540:	fadd	dword ptr [rip + 0x8ae6]
0x7546:	ret	


0x74f2:	jmp	0x74fa


0x74fa:	ret	


0x74d4:	fstp	st(0)
0x74d6:	jmp	0x74e0


0x6bef:	mov	rbp, qword ptr [r12]
0x6bf3:	cmp	rbp, rax
0x6bf6:	jae	0x6c2c


0x6bb8:	mov	rdi, qword ptr [rbp]
0x6bbc:	test	rdi, rdi
0x6bbf:	je	0x6be6


0x6bd3:	call	qword ptr [r12 + 0x40]


0x6b28:	test	rax, rax
0x6b2b:	je	0x6b36


0x6860:	ret	


0x6835:	mov	r8, qword ptr [rcx]
0x6838:	add	rax, 1
0x683c:	mov	qword ptr [rsi + rax*8 - 8], r8
0x6841:	mov	rcx, qword ptr [rcx + 8]
0x6845:	test	rcx, rcx
0x6848:	jne	0x6830


0x6750:	add	rdx, 0x10
0x6754:	cmp	rdx, rcx
0x6757:	jae	0x6768


0x6761:	ret	


0x6409:	mov	rsi, r15
0x640c:	mov	rdi, rbp
0x640f:	call	0x6190


0x632a:	addss	xmm1, dword ptr [rip + 0x9ce2]
0x6332:	movss	xmm2, dword ptr [rdx + 4]
0x6337:	ucomiss	xmm2, xmm1
0x633a:	jbe	0x6350


0x6130:	add	r8, 8
0x6134:	test	rdx, rdx
0x6137:	je	0x6155


0x5f6a:	add	rcx, 1
0x5f6e:	movzx	edx, byte ptr [rcx]
0x5f71:	test	dl, dl
0x5f73:	je	0x5f8a


0x5f65:	mov	rax, rcx
0x5f68:	xor	esi, esi
0x5f6a:	add	rcx, 1
0x5f6e:	movzx	edx, byte ptr [rcx]
0x5f71:	test	dl, dl
0x5f73:	je	0x5f8a


0xe7a0:	add	rax, 1
0xe7a4:	movzx	edx, byte ptr [rax]
0xe7a7:	lea	ecx, [rdx - 0x30]
0xe7aa:	cmp	cl, 9
0xe7ad:	jbe	0xe7a0


0xe7af:	cmp	dl, 0x24
0xe7b2:	mov	r13, r8
0xe7b5:	jne	0xe39e


0xe398:	movzx	ebx, byte ptr [rax]
0xe39b:	mov	rbp, rax
0xe39e:	lea	rax, [rbp + 1]
0xe3a2:	cmp	bl, 0x27
0xe3a5:	mov	rdx, rax
0xe3a8:	jne	0xe370


0xe3b8:	or	dword ptr [r12 + 0x10], 2
0xe3be:	jmp	0xe398


0xe375:	cmp	bl, 0x2b
0xe378:	je	0xe3c0


0xdf5c:	add	rax, qword ptr [rsp + 0x10]
0xdf61:	mov	edx, dword ptr [rax]
0xdf63:	mov	edi, ebp
0xdf65:	xor	eax, eax
0xdf67:	call	0x2150


0xe044:	mov	rax, qword ptr [rsp + 8]
0xe049:	jmp	0xdf61


0xde86:	cmp	esi, 2
0xde89:	je	0xdf50


0xdf40:	cmp	esi, 9
0xdf43:	je	0xdea0


0xdee0:	cmp	esi, 0x401
0xdee6:	je	0xdea0


0xdf28:	jl	0xdea0


0x74e0:	add	rax, 1
0x74e4:	mov	qword ptr [rsp - 0x20], rax
0x74e9:	test	rax, rax
0x74ec:	fild	qword ptr [rsp - 0x20]
0x74f0:	js	0x7540


0x6830:	cmp	rdx, rax
0x6833:	je	0x6860


0x633c:	movss	xmm3, dword ptr [rip + 0x9ce0]
0x6344:	ucomiss	xmm3, xmm2
0x6347:	jb	0x6350


0xe7bb:	xor	edx, edx
0xe7bd:	movsx	eax, bl
0xe7c0:	movabs	rdi, 0x1999999999999999
0xe7ca:	mov	rsi, r8
0xe7cd:	sub	eax, 0x30
0xe7d0:	cmp	rdx, rdi
0xe7d3:	cdqe	
0xe7d5:	ja	0xe7de


0xe3c0:	or	dword ptr [r12 + 0x10], 4
0xe3c6:	jmp	0xe398


0xe37a:	cmp	bl, 0x20
0xe37d:	je	0xe3d0


0xdf61:	mov	edx, dword ptr [rax]
0xdf63:	mov	edi, ebp
0xdf65:	xor	eax, eax
0xdf67:	call	0x2150


0xde8f:	jg	0xdea0


0xdf49:	jg	0xdf50


0xdee8:	cmp	esi, 0x402
0xdeee:	je	0xdf50


0xdf2e:	cmp	esi, 0x40a
0xdf34:	jne	0xdef8


0x6349:	ucomiss	xmm0, xmm1
0x634c:	ja	0x6355


0xe7d7:	lea	rsi, [rdx + rdx*4]
0xe7db:	add	rsi, rsi
0xe7de:	mov	rcx, rbp
0xe7e1:	add	rax, rsi
0xe7e4:	movzx	ebx, byte ptr [rbp + 1]
0xe7e8:	setb	sil
0xe7ec:	add	rbp, 1
0xe7f0:	mov	rdx, rax
0xe7f3:	movzx	esi, sil
0xe7f7:	test	rsi, rsi
0xe7fa:	lea	edi, [rbx - 0x30]
0xe7fd:	jne	0xeb8e


0xe7de:	mov	rcx, rbp
0xe7e1:	add	rax, rsi
0xe7e4:	movzx	ebx, byte ptr [rbp + 1]
0xe7e8:	setb	sil
0xe7ec:	add	rbp, 1
0xe7f0:	mov	rdx, rax
0xe7f3:	movzx	esi, sil
0xe7f7:	test	rsi, rsi
0xe7fa:	lea	edi, [rbx - 0x30]
0xe7fd:	jne	0xeb8e


0xe3d0:	or	dword ptr [r12 + 0x10], 8
0xe3d6:	jmp	0xe398


0xe37f:	cmp	bl, 0x23
0xe382:	je	0xe3e0


0xde91:	cmp	esi, 1
0xde94:	jne	0xdef8


0xdf4b:	cmp	esi, 8
0xdf4e:	jne	0xdef8


0xdef0:	cmp	esi, 0x400
0xdef6:	je	0xdf50


0xdf36:	jmp	0xdea0


0xdef8:	mov	eax, dword ptr [rsp]
0xdefb:	cmp	eax, 0x2f
0xdefe:	ja	0xe03a


0xe803:	cmp	dil, 9
0xe807:	jbe	0xe7bd


0xeb8e:	cmp	dil, 9
0xeb92:	ja	0xea9b


0xe3e0:	or	dword ptr [r12 + 0x10], 0x10
0xe3e6:	jmp	0xe398


0xe384:	cmp	bl, 0x30
0xe387:	je	0xe3f0


0xdf04:	add	rax, qword ptr [rsp + 0x10]
0xdf09:	mov	rdx, qword ptr [rax]
0xdf0c:	mov	edi, ebp
0xdf0e:	xor	eax, eax
0xdf10:	call	0x2150


0xe03a:	mov	rax, qword ptr [rsp + 8]
0xe03f:	jmp	0xdf09


0xe7bd:	movsx	eax, bl
0xe7c0:	movabs	rdi, 0x1999999999999999
0xe7ca:	mov	rsi, r8
0xe7cd:	sub	eax, 0x30
0xe7d0:	cmp	rdx, rdi
0xe7d3:	cdqe	
0xe7d5:	ja	0xe7de


0xe809:	mov	r13, rax
0xe80c:	sub	r13, 1
0xe810:	cmp	r13, -3
0xe814:	ja	0xea9b


0xeb98:	movsx	eax, bl
0xeb9b:	mov	rsi, r8
0xeb9e:	mov	rcx, rbp
0xeba1:	sub	eax, 0x30
0xeba4:	cdqe	
0xeba6:	jmp	0xe7e1


0xea9b:	mov	rcx, qword ptr [r15 + 8]
0xea9f:	cmp	qword ptr [rsp + 8], rcx
0xeaa4:	je	0xeaae


0xe3f0:	or	dword ptr [r12 + 0x10], 0x20
0xe3f6:	jmp	0xe398


0xe389:	cmp	bl, 0x49
0xe38c:	jne	0xe400


0xdf09:	mov	rdx, qword ptr [rax]
0xdf0c:	mov	edi, ebp
0xdf0e:	xor	eax, eax
0xdf10:	call	0x2150


0xe81a:	lea	rbp, [rcx + 2]
0xe81e:	movzx	ebx, byte ptr [rcx + 2]
0xe822:	jmp	0xe39e


0xe7e1:	add	rax, rsi
0xe7e4:	movzx	ebx, byte ptr [rbp + 1]
0xe7e8:	setb	sil
0xe7ec:	add	rbp, 1
0xe7f0:	mov	rdx, rax
0xe7f3:	movzx	esi, sil
0xe7f7:	test	rsi, rsi
0xe7fa:	lea	edi, [rbx - 0x30]
0xe7fd:	jne	0xeb8e


0xeaae:	mov	rdi, qword ptr [r14 + 8]
0xeab2:	cmp	qword ptr [rsp + 0x28], rdi
0xeab7:	je	0xeabe


0xeaa6:	mov	rdi, rcx
0xeaa9:	call	0x2070


0xe38e:	or	dword ptr [r12 + 0x10], 0x40
0xe394:	nop	dword ptr [rax]
0xe398:	movzx	ebx, byte ptr [rax]
0xe39b:	mov	rbp, rax
0xe39e:	lea	rax, [rbp + 1]
0xe3a2:	cmp	bl, 0x27
0xe3a5:	mov	rdx, rax
0xe3a8:	jne	0xe370


0xe400:	cmp	bl, 0x2a
0xe403:	je	0xe5b9


0xeabe:	call	0x20b0


0xeab9:	call	0x2070


0xe5b9:	mov	rsi, qword ptr [rsp + 0x10]
0xe5be:	mov	ecx, 1
0xe5c3:	mov	qword ptr [r12 + 0x18], rbp
0xe5c8:	mov	qword ptr [r12 + 0x20], rax
0xe5cd:	test	rsi, rsi
0xe5d0:	cmovne	rcx, rsi
0xe5d4:	mov	qword ptr [rsp + 0x10], rcx
0xe5d9:	movzx	ecx, byte ptr [rbp + 1]
0xe5dd:	lea	esi, [rcx - 0x30]
0xe5e0:	cmp	sil, 9
0xe5e4:	jbe	0xe8c5


0xe409:	lea	ecx, [rbx - 0x30]
0xe40c:	cmp	cl, 9
0xe40f:	jbe	0xe827


0xe8c5:	mov	rsi, rax
0xe8c8:	add	rsi, 1
0xe8cc:	movzx	edi, byte ptr [rsi]
0xe8cf:	lea	r11d, [rdi - 0x30]
0xe8d3:	cmp	r11b, 9
0xe8d7:	jbe	0xe8c8


0xe5ea:	mov	rsi, qword ptr [rsp + 0x20]
0xe5ef:	cmp	rsi, -1
0xe5f3:	lea	rdx, [rsi + 1]
0xe5f7:	mov	qword ptr [r12 + 0x28], rsi
0xe5fc:	je	0xea9b


0xe827:	mov	qword ptr [r12 + 0x18], rbp
0xe82c:	movzx	edi, byte ptr [rbp]
0xe830:	mov	rsi, rbp
0xe833:	lea	ecx, [rdi - 0x30]
0xe836:	cmp	cl, 9
0xe839:	jbe	0xe847


0xe415:	cmp	bl, 0x2e
0xe418:	je	0xe6ef


0xe8c8:	add	rsi, 1
0xe8cc:	movzx	edi, byte ptr [rsi]
0xe8cf:	lea	r11d, [rdi - 0x30]
0xe8d3:	cmp	r11b, 9
0xe8d7:	jbe	0xe8c8


0xe8d9:	cmp	dil, 0x24
0xe8dd:	jne	0xe5ea


0xe602:	mov	rbx, qword ptr [rsp + 0x20]
0xe607:	mov	rbp, rax
0xe60a:	mov	qword ptr [rsp + 0x20], rdx
0xe60f:	cmp	r9, rbx
0xe612:	mov	rcx, qword ptr [r15 + 8]
0xe616:	ja	0xec92


0xe847:	movzx	edi, byte ptr [rax]
0xe84a:	lea	edx, [rdi - 0x30]
0xe84d:	cmp	dl, 9
0xe850:	jbe	0xe840


0xe83b:	jmp	0xe870


0xe6ef:	cmp	byte ptr [rbp + 1], 0x2a
0xe6f3:	mov	qword ptr [r12 + 0x30], rbp
0xe6f8:	jne	0xe87e


0xe41e:	xor	eax, eax
0xe420:	mov	esi, 1
0xe425:	jmp	0xe457


0xe8e3:	xor	esi, esi
0xe8e5:	movsx	eax, cl
0xe8e8:	movabs	rdi, 0x1999999999999999
0xe8f2:	mov	rcx, r8
0xe8f5:	sub	eax, 0x30
0xe8f8:	cmp	rsi, rdi
0xe8fb:	cdqe	
0xe8fd:	ja	0xe906


0xe61c:	add	r9, r9
0xe61f:	lea	rax, [rbx + 1]
0xe623:	cmp	r9, rbx
0xe626:	cmovbe	r9, rax
0xe62a:	movabs	rax, 0x7ffffffffffffff
0xe634:	cmp	r9, rax
0xe637:	ja	0xeedb


0xec92:	mov	rax, qword ptr [r15]
0xec95:	jmp	0xe697


0xe840:	mov	rbp, rax
0xe843:	add	rax, 1
0xe847:	movzx	edi, byte ptr [rax]
0xe84a:	lea	edx, [rdi - 0x30]
0xe84d:	cmp	dl, 9
0xe850:	jbe	0xe840


0xe852:	mov	rcx, rax
0xe855:	lea	rdx, [rbp + 2]
0xe859:	mov	rbp, rax
0xe85c:	sub	rcx, rsi
0xe85f:	mov	rsi, qword ptr [rsp + 0x10]
0xe864:	cmp	rsi, rcx
0xe867:	cmovae	rcx, rsi
0xe86b:	mov	qword ptr [rsp + 0x10], rcx
0xe870:	mov	qword ptr [r12 + 0x20], rbp
0xe875:	movzx	ebx, byte ptr [rbp]
0xe879:	jmp	0xe415


0xe870:	mov	qword ptr [r12 + 0x20], rbp
0xe875:	movzx	ebx, byte ptr [rbp]
0xe879:	jmp	0xe415


0xe6fe:	mov	rsi, qword ptr [rsp + 0x18]
0xe703:	lea	r11, [rbp + 2]
0xe707:	mov	eax, 2
0xe70c:	mov	qword ptr [r12 + 0x38], r11
0xe711:	cmp	rsi, 2
0xe715:	cmovae	rax, rsi
0xe719:	mov	qword ptr [rsp + 0x18], rax
0xe71e:	movsx	eax, byte ptr [rbp + 2]
0xe722:	lea	edx, [rax - 0x30]
0xe725:	cmp	dl, 9
0xe728:	jbe	0xedbc


0xe87e:	movzx	eax, byte ptr [rbp + 1]
0xe882:	sub	eax, 0x30
0xe885:	cmp	al, 9
0xe887:	ja	0xe89e


0xe457:	add	rbp, 1
0xe45b:	cmp	bl, 0x68
0xe45e:	jne	0xe430


0xe8ff:	lea	rcx, [rsi + rsi*4]
0xe903:	add	rcx, rcx
0xe906:	mov	rbp, rdx
0xe909:	xor	r11d, r11d
0xe90c:	add	rax, rcx
0xe90f:	movzx	ecx, byte ptr [rdx + 1]
0xe913:	setb	r11b
0xe917:	add	rdx, 1
0xe91b:	mov	rsi, rax
0xe91e:	test	r11, r11
0xe921:	lea	edi, [rcx - 0x30]
0xe924:	jne	0xee2e


0xe906:	mov	rbp, rdx
0xe909:	xor	r11d, r11d
0xe90c:	add	rax, rcx
0xe90f:	movzx	ecx, byte ptr [rdx + 1]
0xe913:	setb	r11b
0xe917:	add	rdx, 1
0xe91b:	mov	rsi, rax
0xe91e:	test	r11, r11
0xe921:	lea	edi, [rcx - 0x30]
0xe924:	jne	0xee2e


0xe63d:	mov	rsi, r9
0xe640:	mov	qword ptr [rsp + 0x40], r9
0xe645:	mov	qword ptr [rsp + 0x38], r10
0xe64a:	shl	rsi, 5
0xe64e:	cmp	qword ptr [rsp + 8], rcx
0xe653:	mov	qword ptr [rsp + 0x30], r8
0xe658:	je	0xed71


0xeedb:	cmp	qword ptr [rsp + 8], rcx
0xeee0:	jne	0xed44


0xe697:	mov	rdx, rax
0xe69a:	shl	rdx, 5
0xe69e:	add	rdx, rcx
0xe6a1:	cmp	rax, rbx
0xe6a4:	ja	0xe6c6


0xedbc:	mov	rdx, r11
0xedbf:	add	rdx, 1
0xedc3:	movzx	ecx, byte ptr [rdx]
0xedc6:	lea	esi, [rcx - 0x30]
0xedc9:	cmp	sil, 9
0xedcd:	jbe	0xedbf


0xe72e:	mov	rbx, qword ptr [r12 + 0x40]
0xe733:	cmp	rbx, -1
0xe737:	je	0xed95


0xe89e:	mov	rsi, qword ptr [rsp + 0x18]
0xe8a3:	mov	rax, rdx
0xe8a6:	mov	qword ptr [r12 + 0x38], rdx
0xe8ab:	sub	rax, rbp
0xe8ae:	movzx	ebx, byte ptr [rdx]
0xe8b1:	mov	rbp, rdx
0xe8b4:	cmp	rsi, rax
0xe8b7:	cmovae	rax, rsi
0xe8bb:	mov	qword ptr [rsp + 0x18], rax
0xe8c0:	jmp	0xe41e


0xe460:	mov	ecx, eax
0xe462:	mov	edx, esi
0xe464:	and	ecx, 1
0xe467:	shl	edx, cl
0xe469:	or	eax, edx
0xe46b:	jmp	0xe453


0xe430:	cmp	bl, 0x4c
0xe433:	je	0xe470


0xe92a:	cmp	dil, 9
0xe92e:	jbe	0xe8e5


0xee2e:	cmp	dil, 9
0xee32:	ja	0xea9b


0xed71:	mov	rdi, rsi
0xed74:	call	0x23c0


0xe65e:	mov	rdi, rcx
0xe661:	call	0x2450


0xeee6:	jmp	0xed4c


0xed44:	mov	rdi, rcx
0xed47:	call	0x2070


0xe6c6:	shl	rbx, 5
0xe6ca:	lea	rax, [rcx + rbx]
0xe6ce:	mov	edx, dword ptr [rax]
0xe6d0:	test	edx, edx
0xe6d2:	jne	0xebab


0xedbf:	add	rdx, 1
0xedc3:	movzx	ecx, byte ptr [rdx]
0xedc6:	lea	esi, [rcx - 0x30]
0xedc9:	cmp	sil, 9
0xedcd:	jbe	0xedbf


0xedcf:	cmp	cl, 0x24
0xedd2:	jne	0xe72e


0xed95:	mov	rsi, qword ptr [rsp + 0x20]
0xed9a:	cmp	rsi, -1
0xed9e:	lea	rax, [rsi + 1]
0xeda2:	mov	qword ptr [r12 + 0x40], rsi
0xeda7:	je	0xea9b


0xe73d:	cmp	r9, rbx
0xe740:	mov	rcx, qword ptr [r15 + 8]
0xe744:	jbe	0xecaf


0xe890:	add	rdx, 1
0xe894:	movzx	eax, byte ptr [rdx]
0xe897:	sub	eax, 0x30
0xe89a:	cmp	al, 9
0xe89c:	jbe	0xe890


0xe453:	movzx	ebx, byte ptr [rbp]
0xe457:	add	rbp, 1
0xe45b:	cmp	bl, 0x68
0xe45e:	jne	0xe430


0xe470:	or	eax, 4
0xe473:	jmp	0xe453


0xe435:	cmp	bl, 0x6c
0xe438:	je	0xe450


0xe8e5:	movsx	eax, cl
0xe8e8:	movabs	rdi, 0x1999999999999999
0xe8f2:	mov	rcx, r8
0xe8f5:	sub	eax, 0x30
0xe8f8:	cmp	rsi, rdi
0xe8fb:	cdqe	
0xe8fd:	ja	0xe906


0xe930:	lea	rbx, [rax - 1]
0xe934:	cmp	rbx, -3
0xe938:	ja	0xea9b


0xee38:	movsx	eax, cl
0xee3b:	mov	rbp, rdx
0xee3e:	mov	rcx, r8
0xee41:	sub	eax, 0x30
0xee44:	cdqe	
0xee46:	jmp	0xe909


0xed4c:	mov	rdi, qword ptr [r14 + 8]
0xed50:	cmp	qword ptr [rsp + 0x28], rdi
0xed55:	je	0xed5c


0xe6b0:	add	rax, 1
0xe6b4:	mov	dword ptr [rdx], 0
0xe6ba:	add	rdx, 0x20
0xe6be:	cmp	rax, rbx
0xe6c1:	jbe	0xe6b0


0xe6c3:	mov	qword ptr [r15], rax
0xe6c6:	shl	rbx, 5
0xe6ca:	lea	rax, [rcx + rbx]
0xe6ce:	mov	edx, dword ptr [rax]
0xe6d0:	test	edx, edx
0xe6d2:	jne	0xebab


0xe6d8:	mov	dword ptr [rax], 5
0xe6de:	movzx	ebx, byte ptr [rbp]
0xe6e2:	lea	rdx, [rbp + 1]
0xe6e6:	cmp	bl, 0x2e
0xe6e9:	jne	0xe41e


0xebab:	cmp	edx, 5
0xebae:	jne	0xea9f


0xedd8:	xor	ecx, ecx
0xedda:	movabs	rsi, 0x1999999999999999
0xede4:	sub	eax, 0x30
0xede7:	mov	rdx, r8
0xedea:	cmp	rcx, rsi
0xeded:	cdqe	
0xedef:	ja	0xedf8


0xedad:	mov	rbx, qword ptr [rsp + 0x20]
0xedb2:	mov	qword ptr [rsp + 0x20], rax
0xedb7:	jmp	0xe73d


0xecaf:	add	r9, r9
0xecb2:	lea	rax, [rbx + 1]
0xecb6:	cmp	r9, rbx
0xecb9:	cmovbe	r9, rax
0xecbd:	movabs	rax, 0x7ffffffffffffff
0xecc7:	cmp	r9, rax
0xecca:	ja	0xeedb


0xe74a:	mov	rax, qword ptr [r15]
0xe74d:	mov	rdx, rax
0xe750:	shl	rdx, 5
0xe754:	add	rdx, rcx
0xe757:	cmp	rax, rbx
0xe75a:	ja	0xe776


0xe450:	add	eax, 8
0xe453:	movzx	ebx, byte ptr [rbp]
0xe457:	add	rbp, 1
0xe45b:	cmp	bl, 0x68
0xe45e:	jne	0xe430


0xe43a:	cmp	bl, 0x6a
0xe43d:	je	0xe450


0xe93e:	mov	qword ptr [r12 + 0x28], rbx
0xe943:	add	rbp, 2
0xe947:	jmp	0xe60f


0xe909:	xor	r11d, r11d
0xe90c:	add	rax, rcx
0xe90f:	movzx	ecx, byte ptr [rdx + 1]
0xe913:	setb	r11b
0xe917:	add	rdx, 1
0xe91b:	mov	rsi, rax
0xe91e:	test	r11, r11
0xe921:	lea	edi, [rcx - 0x30]
0xe924:	jne	0xee2e


0xed5c:	call	0x20b0


0xed57:	call	0x2070


0xebb4:	movzx	ebx, byte ptr [rbp]
0xebb8:	lea	rdx, [rbp + 1]
0xebbc:	jmp	0xe415


0xea9f:	cmp	qword ptr [rsp + 8], rcx
0xeaa4:	je	0xeaae


0xedf1:	lea	rdx, [rcx + rcx*4]
0xedf5:	add	rdx, rdx
0xedf8:	mov	rsi, r11
0xedfb:	xor	ebx, ebx
0xedfd:	add	rdx, rax
0xee00:	movsx	eax, byte ptr [r11 + 1]
0xee05:	setb	bl
0xee08:	add	r11, 1
0xee0c:	mov	rcx, rdx
0xee0f:	test	rbx, rbx
0xee12:	lea	edi, [rax - 0x30]
0xee15:	je	0xee88


0xedf8:	mov	rsi, r11
0xedfb:	xor	ebx, ebx
0xedfd:	add	rdx, rax
0xee00:	movsx	eax, byte ptr [r11 + 1]
0xee05:	setb	bl
0xee08:	add	r11, 1
0xee0c:	mov	rcx, rdx
0xee0f:	test	rbx, rbx
0xee12:	lea	edi, [rax - 0x30]
0xee15:	je	0xee88


0xecd0:	mov	rsi, r9
0xecd3:	mov	qword ptr [rsp + 0x48], r9
0xecd8:	mov	qword ptr [rsp + 0x40], r10
0xecdd:	shl	rsi, 5
0xece1:	cmp	qword ptr [rsp + 8], rcx
0xece6:	mov	qword ptr [rsp + 0x38], r8
0xeceb:	mov	qword ptr [rsp + 0x30], r11
0xecf0:	je	0xeeae


0xe776:	shl	rbx, 5
0xe77a:	lea	rax, [rcx + rbx]
0xe77e:	mov	edx, dword ptr [rax]
0xe780:	test	edx, edx
0xe782:	jne	0xec9a


0xe43f:	mov	edx, ebx
0xe441:	and	edx, 0xffffffdf
0xe444:	cmp	dl, 0x5a
0xe447:	je	0xe450


0xe60f:	cmp	r9, rbx
0xe612:	mov	rcx, qword ptr [r15 + 8]
0xe616:	ja	0xec92


0xee88:	cmp	dil, 9
0xee8c:	jbe	0xedda


0xee17:	cmp	dil, 9
0xee1b:	ja	0xea9b


0xeeae:	mov	rdi, rsi
0xeeb1:	call	0x23c0


0xecf6:	mov	rdi, rcx
0xecf9:	call	0x2450


0xe760:	add	rax, 1
0xe764:	mov	dword ptr [rdx], 0
0xe76a:	add	rdx, 0x20
0xe76e:	cmp	rax, rbx
0xe771:	jbe	0xe760


0xe773:	mov	qword ptr [r15], rax
0xe776:	shl	rbx, 5
0xe77a:	lea	rax, [rcx + rbx]
0xe77e:	mov	edx, dword ptr [rax]
0xe780:	test	edx, edx
0xe782:	jne	0xec9a


0xe788:	mov	dword ptr [rax], 5
0xe78e:	mov	rbp, r11
0xe791:	movzx	ebx, byte ptr [r11]
0xe795:	jmp	0xe41e


0xec9a:	cmp	edx, 5
0xec9d:	jne	0xea9f


0xe449:	cmp	bl, 0x74
0xe44c:	jne	0xe478


0xedda:	movabs	rsi, 0x1999999999999999
0xede4:	sub	eax, 0x30
0xede7:	mov	rdx, r8
0xedea:	cmp	rcx, rsi
0xeded:	cdqe	
0xedef:	ja	0xedf8


0xee92:	lea	rbx, [rdx - 1]
0xee96:	cmp	rbx, -3
0xee9a:	ja	0xea9b


0xee21:	sub	eax, 0x30
0xee24:	mov	rdx, r8
0xee27:	mov	rsi, r11
0xee2a:	cdqe	
0xee2c:	jmp	0xedfb


0xeca3:	movzx	ebx, byte ptr [r11]
0xeca7:	mov	rbp, r11
0xecaa:	jmp	0xe41e


0xe478:	lea	edx, [rbx - 0x25]
0xe47b:	cmp	dl, 0x53
0xe47e:	ja	0xea9b


0xeea0:	mov	qword ptr [r12 + 0x40], rbx
0xeea5:	lea	r11, [rsi + 2]
0xeea9:	jmp	0xe73d


0xedfb:	xor	ebx, ebx
0xedfd:	add	rdx, rax
0xee00:	movsx	eax, byte ptr [r11 + 1]
0xee05:	setb	bl
0xee08:	add	r11, 1
0xee0c:	mov	rcx, rdx
0xee0f:	test	rbx, rbx
0xee12:	lea	edi, [rax - 0x30]
0xee15:	je	0xee88


0xe484:	lea	rcx, [rip + 0x28e1]
0xe48b:	movzx	edx, dl
0xe48e:	movsxd	rdx, dword ptr [rcx + rdx*4]
0xe492:	add	rdx, rcx
0xe495:	jmp	rdx


0x3c88:	mov	byte ptr [rip + 0x2106b9], 1
0x3c8f:	pop	rbp
0x3c90:	ret	


0x43f8:	test	al, al
0x43fa:	je	0x43ac


0x43fc:	mov	rdi, rbx
0x43ff:	call	0x3d50


0x4404:	test	al, al
0x4406:	jne	0x43ac


0x4408:	test	r15, r15
0x440b:	sete	byte ptr [rsp + 0xf]
0x4410:	test	r12, r12
0x4413:	movzx	eax, byte ptr [rsp + 0xf]
0x4418:	je	0x44b0


0x44b0:	cmp	qword ptr [rsp], 0
0x44b5:	je	0x4a93


0x441e:	test	al, al
0x4420:	je	0x44b0


0x4a93:	test	r12, r12
0x4a96:	mov	rax, r12
0x4a99:	cmove	rax, r14
0x4a9d:	mov	qword ptr [rsp], rax
0x4aa1:	jmp	0x44bb


0x44bb:	test	r15, r15
0x44be:	je	0x4440


0x4426:	cmp	byte ptr [r12], 0x2f
0x442b:	jne	0x43ac


0x4440:	mov	rdi, qword ptr [rsp]
0x4444:	lea	rdx, [rsp + 0x20]
0x4449:	mov	rsi, r14
0x444c:	call	0xb990


0x44c4:	movdqa	xmm0, xmmword ptr [r15]
0x44c9:	mov	rax, qword ptr [r15 + 0x30]
0x44cd:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x44d2:	cmp	qword ptr [rsp + 0x28], 0
0x44d8:	movdqa	xmm0, xmmword ptr [r15 + 0x10]
0x44de:	mov	qword ptr [rsp + 0x50], rax
0x44e3:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x44e8:	movdqa	xmm0, xmmword ptr [r15 + 0x20]
0x44ee:	movaps	xmmword ptr [rsp + 0x40], xmm0
0x44f3:	je	0x49f0


0x4431:	mov	rax, qword ptr [rsp]
0x4435:	test	rax, rax
0x4438:	cmove	rax, r12
0x443c:	mov	qword ptr [rsp], rax
0x4440:	mov	rdi, qword ptr [rsp]
0x4444:	lea	rdx, [rsp + 0x20]
0x4449:	mov	rsi, r14
0x444c:	call	0xb990


0x49f0:	cmp	byte ptr [rip + 0x20fa17], 0
0x49f7:	jne	0x44f9


0x44f9:	call	0x3dc0


0x49fd:	cmp	byte ptr [rip + 0x20fa08], 0
0x4a04:	jne	0x44f9


0x4a0a:	jmp	0x43ac


0x6cf0:	mov	edx, 8
0x6cf5:	mov	rbx, rax
0x6cf8:	xor	ecx, ecx
0x6cfa:	mov	rax, rdx
0x6cfd:	mul	rbx
0x6d00:	jo	0x6e9f


0x6e9f:	mov	ecx, 1
0x6ea4:	jmp	0x6d06


0x6d06:	test	rax, rax
0x6d09:	mov	eax, 1
0x6d0e:	cmovs	rcx, rax
0x6d12:	test	rbx, rbx
0x6d15:	je	0x6df0


0x6d1b:	and	ecx, 1
0x6d1e:	jne	0x6df0


0x6d24:	cmp	qword ptr [rbp + 0x10], rbx
0x6d28:	je	0x6e50


0x6e50:	mov	ebx, 1
0x6e55:	jmp	0x6df2


0x6d2e:	mov	esi, 0x10
0x6d33:	mov	rdi, rbx
0x6d36:	call	0x2320


0x6df2:	mov	rcx, qword ptr [rsp + 0x58]
0x6df7:	xor	rcx, qword ptr fs:[0x28]
0x6e00:	mov	eax, ebx
0x6e02:	jne	0x6e9a


0x73c4:	xor	rax, qword ptr [rbp + 8]
0x73c8:	xor	edx, edx
0x73ca:	add	rsp, 8
0x73ce:	div	rbx
0x73d1:	pop	rbx
0x73d2:	pop	rbp
0x73d3:	mov	rax, rdx
0x73d6:	ret	


0x5e87:	mov	rcx, rax
0x5e8a:	sub	rcx, rbx
0x5e8d:	cmp	rcx, rbp
0x5e90:	jbe	0x5ec0


0x5ec0:	add	rsp, 8
0x5ec4:	mov	rdx, rcx
0x5ec7:	mov	rax, rdx
0x5eca:	pop	rbx
0x5ecb:	pop	rbp
0x5ecc:	ret	


0x5e92:	cmp	byte ptr [rax - 1], 0x2f
0x5e96:	lea	rdx, [rcx - 1]
0x5e9a:	je	0x5eae


0x5eae:	cmp	rbp, rdx
0x5eb1:	jne	0x5ea0


0x5e9c:	jmp	0x5ec0


0x5eb3:	add	rsp, 8
0x5eb7:	mov	rax, rdx
0x5eba:	pop	rbx
0x5ebb:	pop	rbp
0x5ebc:	ret	


0x5ea0:	cmp	byte ptr [rbx + rdx - 1], 0x2f
0x5ea5:	lea	rax, [rdx - 1]
0x5ea9:	jne	0x5eb3


0x5eab:	mov	rdx, rax
0x5eae:	cmp	rbp, rdx
0x5eb1:	jne	0x5ea0


0x5ede:	test	rax, rax
0x5ee1:	mov	rbx, rax
0x5ee4:	sete	al
0x5ee7:	movzx	eax, al
0x5eea:	lea	rdi, [rbx + rax + 1]
0x5eef:	call	0x23c0


0xa683:	mov	rdi, rbp
0xa686:	mov	r12, rax
0xa689:	call	0x5f30


0xa68e:	mov	rdi, r12
0xa691:	mov	r13, rax
0xa694:	call	0x5f90


0xccfe:	test	eax, eax
0xcd00:	js	0xdb68


0xdb68:	xor	r15d, r15d
0xdb6b:	jmp	0xce7f


0xcd06:	mov	rsi, r14
0xcd09:	mov	rdi, r12
0xcd0c:	call	0xe050


0xce7f:	mov	rdi, qword ptr [rbp - 0x38]
0xce83:	xor	rdi, qword ptr fs:[0x28]
0xce8c:	mov	rax, r15
0xce8f:	jne	0xdd97


0xce95:	lea	rsp, [rbp - 0x28]
0xce99:	pop	rbx
0xce9a:	pop	r12
0xce9c:	pop	r13
0xce9e:	pop	r14
0xcea0:	pop	r15
0xcea2:	pop	rbp
0xcea3:	ret	


0xdd97:	call	0x21f0


0xcd11:	test	eax, eax
0xcd13:	js	0xdbd0


0xdbd0:	mov	rax, qword ptr [rbp - 0x408]
0xdbd7:	mov	rdi, qword ptr [rbp - 0x2b8]
0xdbde:	add	rax, 0x20
0xdbe2:	cmp	rdi, rax
0xdbe5:	je	0xdbec


0xcd19:	mov	rax, qword ptr [rbp - 0x2b0]
0xcd20:	mov	rdx, -1
0xcd27:	add	rax, 7
0xcd2b:	cmp	rax, 6
0xcd2f:	cmovbe	rax, rdx
0xcd33:	add	rax, qword ptr [rbp - 0x2a8]
0xcd3a:	jb	0xd768


0xdbec:	mov	rax, qword ptr [rbp - 0x410]
0xdbf3:	mov	rdi, qword ptr [rbp - 0x3a8]
0xdbfa:	add	rax, 0x10
0xdbfe:	cmp	rdi, rax
0xdc01:	je	0xdc08


0xdbe7:	call	0x2070


0xd768:	call	0x20b0


0xcd40:	mov	rdi, rax
0xcd43:	xor	r8d, r8d
0xcd46:	add	rdi, 6
0xcd4a:	setb	r8b
0xcd4e:	jb	0xd768


0xdc08:	call	0x20b0


0xdc03:	call	0x2070


0xcd54:	cmp	rdi, 0xf9f
0xcd5b:	jbe	0xcea8


0xcea8:	add	rax, 0x24
0xceac:	mov	qword ptr [rbp - 0x420], 0
0xceb7:	and	rax, 0xfffffffffffffff0
0xcebb:	sub	rsp, rax
0xcebe:	lea	rax, [rsp + 0xf]
0xcec3:	and	rax, 0xfffffffffffffff0
0xcec7:	mov	qword ptr [rbp - 0x3d8], rax
0xcece:	jmp	0xcd95


0xcd61:	cmp	rdi, -1
0xcd65:	mov	qword ptr [rbp - 0x3c8], r8
0xcd6c:	je	0xd768


0xcd95:	xor	r12d, r12d
0xcd98:	cmp	qword ptr [rbp - 0x3e8], 0
0xcda0:	je	0xcdac


0xcd72:	call	0x23c0


0xcdac:	mov	r13, qword ptr [rbp - 0x2b8]
0xcdb3:	lea	rax, [rbp - 0x3bc]
0xcdba:	mov	r15, qword ptr [rbp - 0x3e8]
0xcdc1:	mov	qword ptr [rbp - 0x400], 0
0xcdcc:	mov	qword ptr [rbp - 0x3f0], rax
0xcdd3:	mov	rax, rbx
0xcdd6:	mov	rbx, r8
0xcdd9:	mov	rcx, qword ptr [r13]
0xcddd:	mov	r8, rax
0xcde0:	cmp	rcx, r8
0xcde3:	je	0xd751


0xcda2:	mov	rax, qword ptr [rbp - 0x418]
0xcda9:	mov	r12, qword ptr [rax]
0xcdac:	mov	r13, qword ptr [rbp - 0x2b8]
0xcdb3:	lea	rax, [rbp - 0x3bc]
0xcdba:	mov	r15, qword ptr [rbp - 0x3e8]
0xcdc1:	mov	qword ptr [rbp - 0x400], 0
0xcdcc:	mov	qword ptr [rbp - 0x3f0], rax
0xcdd3:	mov	rax, rbx
0xcdd6:	mov	rbx, r8
0xcdd9:	mov	rcx, qword ptr [r13]
0xcddd:	mov	r8, rax
0xcde0:	cmp	rcx, r8
0xcde3:	je	0xd751


0xd751:	mov	r14, rbx
0xd754:	jmp	0xcf53


0xcde9:	sub	rcx, r8
0xcdec:	mov	rax, rbx
0xcdef:	add	rax, rcx
0xcdf2:	mov	r14, rax
0xcdf5:	jae	0xced8


0xcf53:	mov	rax, qword ptr [rbp - 0x400]
0xcf5a:	cmp	qword ptr [rbp - 0x2c0], rax
0xcf61:	je	0xdc1b


0xcdfb:	cmp	r12, -1
0xcdff:	je	0xd8d0


0xced8:	cmp	r12, rax
0xcedb:	jae	0xcf44


0xdc1b:	mov	rbx, r14
0xdc1e:	xor	eax, eax
0xdc20:	add	rbx, 1
0xdc24:	jb	0xdd30


0xcf67:	movzx	edx, byte ptr [r13 + 0x48]
0xcf6c:	mov	rax, qword ptr [r13 + 0x50]
0xcf70:	cmp	dl, 0x25
0xcf73:	je	0xd708


0xd8d0:	mov	r14, r12
0xd8d3:	jmp	0xcf44


0xce05:	call	0x20b0


0xcedd:	test	r12, r12
0xcee0:	jne	0xd810


0xcf44:	lea	rdi, [r15 + rbx]
0xcf48:	mov	rdx, rcx
0xcf4b:	mov	rsi, r8
0xcf4e:	call	0x2360


0xdd30:	cmp	r12, -1
0xdd34:	mov	eax, 1
0xdd39:	je	0xdc7c


0xdc2a:	cmp	r12, rbx
0xdc2d:	jae	0xdc7c


0xd708:	cmp	rax, -1
0xd70c:	jne	0xdbc6


0xcf79:	cmp	rax, -1
0xcf7d:	je	0xdbc6


0xcee6:	cmp	rax, 0xc
0xceea:	ja	0xd822


0xd810:	js	0xce05


0x2360:	jmp	qword ptr [rip + 0x211b42]


0xdc7c:	cmp	r15, qword ptr [rbp - 0x3e8]
0xdc83:	mov	byte ptr [r15 + r14], 0
0xdc88:	je	0xdca1


0xdd3f:	test	r12, r12
0xdd42:	je	0xce05


0xdc2f:	test	r12, r12
0xdc32:	jne	0xdd69


0xd712:	mov	rax, r14
0xd715:	add	rax, 1
0xd719:	mov	rbx, rax
0xd71c:	jae	0xd7a8


0xdbc6:	call	0x20a0


0xcf83:	mov	r8, qword ptr [rbp - 0x3a8]
0xcf8a:	shl	rax, 5
0xcf8e:	add	rax, r8
0xcf91:	cmp	dl, 0x6e
0xcf94:	mov	edi, dword ptr [rax]
0xcf96:	mov	dword ptr [rbp - 0x3d0], edi
0xcf9c:	je	0xd780


0xcef0:	mov	r12d, 0xc
0xcef6:	cmp	r15, qword ptr [rbp - 0x3e8]
0xcefd:	sete	dl
0xcf00:	test	r15, r15
0xcf03:	je	0xd848


0xd822:	cmp	rax, -1
0xd826:	je	0xce05


0xd816:	add	r12, r12
0xd819:	cmp	r12, rax
0xd81c:	jae	0xcef6




0xdca1:	mov	rax, qword ptr [rbp - 0x420]
0xdca8:	test	rax, rax
0xdcab:	je	0xdcb5


0xdc8a:	cmp	r12, rbx
0xdc8d:	jbe	0xdca1


0xdd48:	js	0xce05


0xdc38:	cmp	rbx, 0xc
0xdc3c:	ja	0xdd4e


0xdd69:	js	0xce05


0xd722:	cmp	r12, -1
0xd726:	jne	0xce05


0xd7a8:	cmp	r12, rax
0xd7ab:	jae	0xd72f


0xd780:	mov	edx, edi
0xd782:	sub	edx, 0x12
0xd785:	cmp	edx, 4
0xd788:	ja	0xdbc6


0xcfa2:	mov	eax, dword ptr [r13 + 0x10]
0xcfa6:	mov	rdi, qword ptr [rbp - 0x3d8]
0xcfad:	test	al, 1
0xcfaf:	mov	byte ptr [rdi], 0x25
0xcfb2:	lea	rbx, [rdi + 1]
0xcfb6:	je	0xcfc7


0xd848:	mov	rdi, r12
0xd84b:	mov	qword ptr [rbp - 0x3e0], r8
0xd852:	mov	byte ptr [rbp - 0x3d0], dl
0xd858:	mov	qword ptr [rbp - 0x3c8], rcx
0xd85f:	call	0x23c0


0xcf09:	test	dl, dl
0xcf0b:	jne	0xd848


0xd82c:	cmp	r15, qword ptr [rbp - 0x3e8]
0xd833:	mov	r12, rax
0xd836:	sete	dl
0xd839:	test	r15, r15
0xd83c:	jne	0xcf09


0xcef6:	cmp	r15, qword ptr [rbp - 0x3e8]
0xcefd:	sete	dl
0xcf00:	test	r15, r15
0xcf03:	je	0xd848


0xdcb5:	mov	rax, qword ptr [rbp - 0x408]
0xdcbc:	mov	rdi, qword ptr [rbp - 0x2b8]
0xdcc3:	add	rax, 0x20
0xdcc7:	cmp	rdi, rax
0xdcca:	je	0xdcd1


0xdcad:	mov	rdi, rax
0xdcb0:	call	0x2070


0xdc8f:	mov	rdi, r15
0xdc92:	mov	rsi, rbx
0xdc95:	call	0x2450


0xdd4e:	test	rax, rax
0xdd51:	jne	0xce05


0xdc42:	mov	r12d, 0xc
0xdc48:	cmp	r15, qword ptr [rbp - 0x3e8]
0xdc4f:	sete	r13b
0xdc53:	test	r15, r15
0xdc56:	je	0xdcfc


0xdd6f:	add	r12, r12
0xdd72:	cmp	r12, rbx
0xdd75:	jae	0xdc48


0xd72c:	mov	rbx, r12
0xd72f:	mov	byte ptr [r15 + r14], 0x25
0xd734:	mov	r8, qword ptr [r13 + 8]
0xd738:	add	r13, 0x58
0xd73c:	mov	rcx, qword ptr [r13]
0xd740:	add	qword ptr [rbp - 0x400], 1
0xd748:	cmp	rcx, r8
0xd74b:	jne	0xcde9


0xd7ad:	test	r12, r12
0xd7b0:	jne	0xdb80


0xd72f:	mov	byte ptr [r15 + r14], 0x25
0xd734:	mov	r8, qword ptr [r13 + 8]
0xd738:	add	r13, 0x58
0xd73c:	mov	rcx, qword ptr [r13]
0xd740:	add	qword ptr [rbp - 0x400], 1
0xd748:	cmp	rcx, r8
0xd74b:	jne	0xcde9


0xd78e:	lea	rdi, [rip + 0x353b]
0xd795:	mov	rax, qword ptr [rax + 0x10]
0xd799:	movsxd	rdx, dword ptr [rdi + rdx*4]
0xd79d:	add	rdx, rdi
0xd7a0:	jmp	rdx


0xcfc7:	test	al, 2
0xcfc9:	je	0xcfd2


0xcfb8:	mov	rdi, qword ptr [rbp - 0x3d8]
0xcfbf:	lea	rbx, [rdi + 2]
0xcfc3:	mov	byte ptr [rdi + 1], 0x27
0xcfc7:	test	al, 2
0xcfc9:	je	0xcfd2


0xcf11:	mov	rsi, r12
0xcf14:	mov	rdi, r15
0xcf17:	mov	qword ptr [rbp - 0x3d0], r8
0xcf1e:	mov	qword ptr [rbp - 0x3c8], rcx
0xcf25:	call	0x2450


0xdcd1:	mov	rax, qword ptr [rbp - 0x410]
0xdcd8:	mov	rdi, qword ptr [rbp - 0x3a8]
0xdcdf:	add	rax, 0x10
0xdce3:	cmp	rdi, rax
0xdce6:	je	0xdced


0xdccc:	call	0x2070


0xdd57:	cmp	rbx, -1
0xdd5b:	je	0xce05


0xdcfc:	mov	rdi, r12
0xdcff:	call	0x23c0


0xdc5c:	test	r13b, r13b
0xdc5f:	jne	0xdcfc


0xdd7b:	jmp	0xdd4e


0xdc48:	cmp	r15, qword ptr [rbp - 0x3e8]
0xdc4f:	sete	r13b
0xdc53:	test	r15, r15
0xdc56:	je	0xdcfc


0xd7b6:	cmp	rax, 0xc
0xd7ba:	ja	0xdb92


0xdb80:	js	0xce05


0xcfd2:	test	al, 4
0xcfd4:	je	0xcfdd


0xcfcb:	mov	byte ptr [rbx], 0x2d
0xcfce:	add	rbx, 1
0xcfd2:	test	al, 4
0xcfd4:	je	0xcfdd


0xdced:	mov	rax, qword ptr [rbp - 0x418]
0xdcf4:	mov	qword ptr [rax], r14
0xdcf7:	jmp	0xce7f


0xdce8:	call	0x2070


0xdd61:	mov	r12, rbx
0xdd64:	jmp	0xdc48


0xdc65:	mov	rsi, r12
0xdc68:	mov	rdi, r15
0xdc6b:	call	0x2450


0xd7c0:	mov	r12d, 0xc
0xd7c6:	cmp	r15, qword ptr [rbp - 0x3e8]
0xd7cd:	sete	dl
0xd7d0:	test	r15, r15
0xd7d3:	je	0xda40


0xdb92:	cmp	rax, -1
0xdb96:	je	0xce05


0xdb86:	add	r12, r12
0xdb89:	cmp	r12, rax
0xdb8c:	jae	0xd7c6


0xcfdd:	test	al, 8
0xcfdf:	je	0xcfe8


0xcfd6:	mov	byte ptr [rbx], 0x2b
0xcfd9:	add	rbx, 1
0xcfdd:	test	al, 8
0xcfdf:	je	0xcfe8


0xda40:	mov	rdi, r12
0xda43:	mov	byte ptr [rbp - 0x3c8], dl
0xda49:	call	0x23c0


0xd7d9:	test	dl, dl
0xd7db:	jne	0xda40


0xdb9c:	mov	r12, rax
0xdb9f:	jmp	0xd7c6


0xd7c6:	cmp	r15, qword ptr [rbp - 0x3e8]
0xd7cd:	sete	dl
0xd7d0:	test	r15, r15
0xd7d3:	je	0xda40


0xcfe8:	test	al, 0x10
0xcfea:	je	0xcff3


0xcfe1:	mov	byte ptr [rbx], 0x20
0xcfe4:	add	rbx, 1
0xcfe8:	test	al, 0x10
0xcfea:	je	0xcff3


0xd7e1:	mov	rsi, r12
0xd7e4:	mov	rdi, r15
0xd7e7:	call	0x2450


0xcff3:	test	al, 0x40
0xcff5:	je	0xcffe


0xcfec:	mov	byte ptr [rbx], 0x23
0xcfef:	add	rbx, 1
0xcff3:	test	al, 0x40
0xcff5:	je	0xcffe


0xcffe:	test	al, 0x20
0xd000:	je	0xd009


0xcff7:	mov	byte ptr [rbx], 0x49
0xcffa:	add	rbx, 1
0xcffe:	test	al, 0x20
0xd000:	je	0xd009


0xd009:	mov	rsi, qword ptr [r13 + 0x18]
0xd00d:	mov	rdx, qword ptr [r13 + 0x20]
0xd011:	cmp	rsi, rdx
0xd014:	je	0xd046


0xd002:	mov	byte ptr [rbx], 0x30
0xd005:	add	rbx, 1
0xd009:	mov	rsi, qword ptr [r13 + 0x18]
0xd00d:	mov	rdx, qword ptr [r13 + 0x20]
0xd011:	cmp	rsi, rdx
0xd014:	je	0xd046


0xd046:	mov	rsi, qword ptr [r13 + 0x30]
0xd04a:	mov	rdx, qword ptr [r13 + 0x38]
0xd04e:	cmp	rsi, rdx
0xd051:	je	0xd083


0xd016:	mov	rcx, rdx
0xd019:	mov	rdi, rbx
0xd01c:	mov	qword ptr [rbp - 0x3e0], r8
0xd023:	sub	rcx, rsi
0xd026:	mov	rdx, rcx
0xd029:	mov	qword ptr [rbp - 0x3c8], rcx
0xd030:	call	0x2360


0xd083:	mov	edi, dword ptr [rbp - 0x3d0]
0xd089:	cmp	edi, 0x10
0xd08c:	ja	0xd0bb


0xd053:	mov	rcx, rdx
0xd056:	mov	rdi, rbx
0xd059:	mov	qword ptr [rbp - 0x3e0], r8
0xd060:	sub	rcx, rsi
0xd063:	mov	rdx, rcx
0xd066:	mov	qword ptr [rbp - 0x3c8], rcx
0xd06d:	call	0x2360


0xd08e:	mov	eax, 1
0xd093:	mov	ecx, edi
0xd095:	shl	rax, cl
0xd098:	test	eax, 0x14180
0xd09d:	jne	0xd0b4


0xd0bb:	movzx	eax, byte ptr [r13 + 0x48]
0xd0c0:	mov	byte ptr [rbx + 1], 0
0xd0c4:	mov	byte ptr [rbx], al
0xd0c6:	mov	rax, qword ptr [r13 + 0x28]
0xd0ca:	cmp	rax, -1
0xd0ce:	je	0xd800


0xd09f:	test	ah, 0x10
0xd0a2:	jne	0xda00


0xd0b4:	mov	byte ptr [rbx], 0x6c
0xd0b7:	add	rbx, 1
0xd0bb:	movzx	eax, byte ptr [r13 + 0x48]
0xd0c0:	mov	byte ptr [rbx + 1], 0
0xd0c4:	mov	byte ptr [rbx], al
0xd0c6:	mov	rax, qword ptr [r13 + 0x28]
0xd0ca:	cmp	rax, -1
0xd0ce:	je	0xd800


0xd800:	mov	dword ptr [rbp - 0x3e0], 0
0xd80a:	jmp	0xd0f7


0xd0d4:	shl	rax, 5
0xd0d8:	add	rax, r8
0xd0db:	cmp	dword ptr [rax], 5
0xd0de:	jne	0xdbc6


0xd0a8:	test	ah, 6
0xd0ab:	je	0xd0bb


0xda00:	mov	byte ptr [rbx], 0x4c
0xda03:	add	rbx, 1
0xda07:	jmp	0xd0bb


0xd0f7:	mov	rax, qword ptr [r13 + 0x40]
0xd0fb:	cmp	rax, -1
0xd0ff:	je	0xd12c


0xd0e4:	mov	eax, dword ptr [rax + 0x10]
0xd0e7:	mov	dword ptr [rbp - 0x3e0], 1
0xd0f1:	mov	dword ptr [rbp - 0x3b8], eax
0xd0f7:	mov	rax, qword ptr [r13 + 0x40]
0xd0fb:	cmp	rax, -1
0xd0ff:	je	0xd12c


0xd0ad:	mov	byte ptr [rbx], 0x6c
0xd0b0:	add	rbx, 1
0xd0b4:	mov	byte ptr [rbx], 0x6c
0xd0b7:	add	rbx, 1
0xd0bb:	movzx	eax, byte ptr [r13 + 0x48]
0xd0c0:	mov	byte ptr [rbx + 1], 0
0xd0c4:	mov	byte ptr [rbx], al
0xd0c6:	mov	rax, qword ptr [r13 + 0x28]
0xd0ca:	cmp	rax, -1
0xd0ce:	je	0xd800


0xd12c:	mov	rax, r14
0xd12f:	xor	edx, edx
0xd131:	add	rax, 2
0xd135:	jb	0xdd9c


0xd101:	shl	rax, 5
0xd105:	add	r8, rax
0xd108:	cmp	dword ptr [r8], 5
0xd10c:	jne	0xdbc6


0xdd9c:	cmp	r12, -1
0xdda0:	mov	edx, 1
0xdda5:	je	0xd18b


0xd13b:	cmp	r12, rax
0xd13e:	jae	0xd18b


0xd112:	mov	eax, dword ptr [rbp - 0x3e0]
0xd118:	mov	edx, dword ptr [r8 + 0x10]
0xd11c:	mov	dword ptr [rbp + rax*4 - 0x3b8], edx
0xd123:	lea	eax, [rax + 1]
0xd126:	mov	dword ptr [rbp - 0x3e0], eax
0xd12c:	mov	rax, r14
0xd12f:	xor	edx, edx
0xd131:	add	rax, 2
0xd135:	jb	0xdd9c


0xd18b:	mov	byte ptr [r15 + r14], 0
0xd190:	call	0x20b0


0xddab:	test	r12, r12
0xddae:	je	0xce05


0xd140:	test	r12, r12
0xd143:	jne	0xd968


0xddb4:	jns	0xd980


0xd149:	cmp	rax, 0xc
0xd14d:	ja	0xd980


0xd968:	js	0xce05


0xddba:	jmp	0xce05


0xd980:	test	rdx, rdx
0xd983:	jne	0xce05


0xd153:	mov	r12d, 0xc
0xd159:	cmp	r15, qword ptr [rbp - 0x3e8]
0xd160:	sete	dl
0xd163:	test	r15, r15
0xd166:	je	0xd9b0


0xd96e:	add	r12, r12
0xd971:	cmp	r12, rax
0xd974:	jae	0xd159


0xd989:	cmp	rax, -1
0xd98d:	je	0xce05


0xd9b0:	mov	rdi, r12
0xd9b3:	mov	byte ptr [rbp - 0x3c8], dl
0xd9b9:	call	0x23c0


0xd16c:	test	dl, dl
0xd16e:	jne	0xd9b0


0xd159:	cmp	r15, qword ptr [rbp - 0x3e8]
0xd160:	sete	dl
0xd163:	test	r15, r15
0xd166:	je	0xd9b0


0xd993:	cmp	r15, qword ptr [rbp - 0x3e8]
0xd99a:	mov	r12, rax
0xd99d:	sete	dl
0xd9a0:	test	r15, r15
0xd9a3:	jne	0xd16c


0xd174:	mov	rsi, r12
0xd177:	mov	rdi, r15
0xd17a:	call	0x2450


0xc49b:	test	rax, rax
0xc49e:	je	0xc4e2


0xc4e2:	mov	eax, 0xffffffff
0xc4e7:	jmp	0xc4b2


0xc4a0:	mov	rdx, qword ptr [rsp]
0xc4a4:	cmp	rdx, 0x7fffffff
0xc4ab:	ja	0xc4c8


0xc4b2:	mov	rbx, qword ptr [rsp + 8]
0xc4b7:	xor	rbx, qword ptr fs:[0x28]
0xc4c0:	jne	0xc4e9


0xc4ad:	mov	qword ptr [rbx], rax
0xc4b0:	mov	eax, edx
0xc4b2:	mov	rbx, qword ptr [rsp + 8]
0xc4b7:	xor	rbx, qword ptr fs:[0x28]
0xc4c0:	jne	0xc4e9


0xc4c8:	mov	rdi, rax
0xc4cb:	call	0x2070


0xc4c2:	add	rsp, 0x10
0xc4c6:	pop	rbx
0xc4c7:	ret	


0xc4e9:	call	0x21f0


0xb5f4:	mov	rcx, qword ptr [rsp + 0x18]
0xb5f9:	xor	rcx, qword ptr fs:[0x28]
0xb602:	jne	0xb60c


0xb604:	add	rsp, 0xd8
0xb60b:	ret	


0xb60c:	call	0x21f0


0xef71:	test	rbp, rbp
0xef74:	je	0xef96


0xef96:	add	rsp, 8
0xef9a:	pop	rbx
0xef9b:	pop	rbp
0xef9c:	pop	r12
0xef9e:	pop	r13
0xefa0:	pop	r14
0xefa2:	pop	r15
0xefa4:	ret	


0xef76:	xor	ebx, ebx
0xef78:	nop	dword ptr [rax + rax]
0xef80:	mov	rdx, r15
0xef83:	mov	rsi, r14
0xef86:	mov	edi, r13d
0xef89:	call	qword ptr [r12 + rbx*8]


0xd072:	mov	rcx, qword ptr [rbp - 0x3c8]
0xd079:	mov	r8, qword ptr [rbp - 0x3e0]
0xd080:	add	rbx, rcx
0xd083:	mov	edi, dword ptr [rbp - 0x3d0]
0xd089:	cmp	edi, 0x10
0xd08c:	ja	0xd0bb


0xd035:	mov	rcx, qword ptr [rbp - 0x3c8]
0xd03c:	mov	r8, qword ptr [rbp - 0x3e0]
0xd043:	add	rbx, rcx
0xd046:	mov	rsi, qword ptr [r13 + 0x30]
0xd04a:	mov	rdx, qword ptr [r13 + 0x38]
0xd04e:	cmp	rsi, rdx
0xd051:	je	0xd083


0x6d3b:	test	rax, rax
0x6d3e:	mov	qword ptr [rsp], rax
0x6d42:	je	0x6df0


0x6d48:	mov	qword ptr [rsp + 0x10], rbx
0x6d4d:	shl	rbx, 4
0x6d51:	mov	qword ptr [rsp + 0x28], r12
0x6d56:	add	rbx, rax
0x6d59:	mov	rax, qword ptr [rbp + 0x30]
0x6d5d:	mov	r12, rsp
0x6d60:	xor	edx, edx
0x6d62:	mov	rsi, rbp
0x6d65:	mov	rdi, r12
0x6d68:	mov	qword ptr [rsp + 8], rbx
0x6d6d:	mov	qword ptr [rsp + 0x18], 0
0x6d76:	mov	qword ptr [rsp + 0x30], rax
0x6d7b:	mov	rax, qword ptr [rbp + 0x38]
0x6d7f:	mov	qword ptr [rsp + 0x20], 0
0x6d88:	mov	qword ptr [rsp + 0x38], rax
0x6d8d:	mov	rax, qword ptr [rbp + 0x40]
0x6d91:	mov	qword ptr [rsp + 0x40], rax
0x6d96:	mov	rax, qword ptr [rbp + 0x48]
0x6d9a:	mov	qword ptr [rsp + 0x48], rax
0x6d9f:	call	0x6360


0x6da4:	test	al, al
0x6da6:	mov	ebx, eax
0x6da8:	jne	0x6e60


0x6dae:	mov	rax, qword ptr [rsp + 0x48]
0x6db3:	mov	edx, 1
0x6db8:	mov	rsi, r12
0x6dbb:	mov	rdi, rbp
0x6dbe:	mov	qword ptr [rbp + 0x48], rax
0x6dc2:	call	0x6360


0x6e60:	mov	rdi, qword ptr [rbp]
0x6e64:	call	0x2070


0x6dc7:	test	al, al
0x6dc9:	je	0x6ea9


0x6ea9:	call	0x20a0


0x6dcf:	xor	edx, edx
0x6dd1:	mov	rsi, r12
0x6dd4:	mov	rdi, rbp
0x6dd7:	call	0x6360


0x6ddc:	test	al, al
0x6dde:	je	0x6ea9


0x6de4:	mov	rdi, qword ptr [rsp]
0x6de8:	call	0x2070


0xafbf:	test	rax, rax
0xafc2:	je	0xafc9


0xafc4:	add	rsp, 8
0xafc8:	ret	


0xb9ce:	mov	edx, eax
0xb9d0:	mov	eax, 0xffffffff
0xb9d5:	test	edx, edx
0xb9d7:	js	0xba5b


0xba5b:	mov	rcx, qword ptr [rsp + 0x188]
0xba63:	xor	rcx, qword ptr fs:[0x28]
0xba6c:	jne	0xbab1


0xb9dd:	mov	rax, qword ptr [rsp + 8]
0xb9e2:	test	rax, rax
0xb9e5:	jne	0xba22


0xba6e:	add	rsp, 0x190
0xba75:	pop	rbx
0xba76:	pop	rbp
0xba77:	pop	r12
0xba79:	ret	


0xbab1:	call	0x21f0


0xb9e7:	mov	rax, qword ptr [rsp]
0xb9eb:	jmp	0xba22


0xba22:	mov	qword ptr [rbx], rax
0xba25:	mov	rax, qword ptr [rsp + 0x10]
0xba2a:	mov	qword ptr [rbx + 8], rax
0xba2e:	mov	rax, qword ptr [rsp + 0x18]
0xba33:	mov	qword ptr [rbx + 0x10], rax
0xba37:	mov	rax, qword ptr [rsp + 0x20]
0xba3c:	mov	qword ptr [rbx + 0x18], rax
0xba40:	shr	rax, 0x3f
0xba44:	mov	byte ptr [rbx + 0x20], al
0xba47:	mov	rax, qword ptr [rsp + 0x28]
0xba4c:	mov	qword ptr [rbx + 0x28], rax
0xba50:	mov	rax, qword ptr [rsp + 0x30]
0xba55:	mov	qword ptr [rbx + 0x30], rax
0xba59:	xor	eax, eax
0xba5b:	mov	rcx, qword ptr [rsp + 0x188]
0xba63:	xor	rcx, qword ptr fs:[0x28]
0xba6c:	jne	0xbab1


0x4451:	test	eax, eax
0x4453:	je	0x4b1e


0x4b1e:	cmp	byte ptr [rsp + 8], 0
0x4b23:	je	0x4b65


0x4459:	call	0x20b0


0x4b65:	cmp	qword ptr [rsp + 0x28], 0
0x4b6b:	jne	0x4b50


0x4b25:	cmp	byte ptr [rip + 0x20f8e2], 0
0x4b2c:	jne	0x4be8


0x4b6d:	jmp	0x4b3a


0x4b50:	mov	byte ptr [rip + 0x20f8a6], 1
0x4b57:	jmp	0x44f9


0x4b32:	cmp	qword ptr [rsp + 0x28], 0
0x4b38:	jne	0x4b50


0x4be8:	mov	rsi, qword ptr [rsp]
0x4bec:	lea	rdx, [rsp + 0xe0]
0x4bf4:	mov	edi, 1
0x4bf9:	call	0x2390


0x4b3a:	cmp	byte ptr [rip + 0x20f8cd], 0
0x4b41:	jne	0x4b50


0x2390:	jmp	qword ptr [rip + 0x211b2a]


0x4b43:	cmp	byte ptr [rip + 0x20f8c2], 0
0x4b4a:	je	0x43ac




0xba15:	test	eax, eax
0xba17:	js	0xbaaa


0xbaaa:	mov	eax, 0xffffffff
0xbaaf:	jmp	0xba5b


0xba1d:	mov	rax, qword ptr [rsp + 0x48]
0xba22:	mov	qword ptr [rbx], rax
0xba25:	mov	rax, qword ptr [rsp + 0x10]
0xba2a:	mov	qword ptr [rbx + 8], rax
0xba2e:	mov	rax, qword ptr [rsp + 0x18]
0xba33:	mov	qword ptr [rbx + 0x10], rax
0xba37:	mov	rax, qword ptr [rsp + 0x20]
0xba3c:	mov	qword ptr [rbx + 0x18], rax
0xba40:	shr	rax, 0x3f
0xba44:	mov	byte ptr [rbx + 0x20], al
0xba47:	mov	rax, qword ptr [rsp + 0x28]
0xba4c:	mov	qword ptr [rbx + 0x28], rax
0xba50:	mov	rax, qword ptr [rsp + 0x30]
0xba55:	mov	qword ptr [rbx + 0x30], rax
0xba59:	xor	eax, eax
0xba5b:	mov	rcx, qword ptr [rsp + 0x188]
0xba63:	xor	rcx, qword ptr fs:[0x28]
0xba6c:	jne	0xbab1


0xc95d:	test	eax, eax
0xc95f:	jne	0xc940


0xc940:	mov	r14, qword ptr [rbx]
0xc943:	add	rbp, r12
0xc946:	add	rbx, 8
0xc94a:	test	r14, r14
0xc94d:	je	0xc961


0x7449:	test	eax, eax
0x744b:	sete	al
0x744e:	add	rsp, 8
0x7452:	ret	


0x3d2b:	test	eax, eax
0x3d2d:	je	0x3d40


0x3d40:	mov	r12d, 1
0x3d46:	mov	eax, r12d
0x3d49:	pop	rbx
0x3d4a:	pop	rbp
0x3d4b:	pop	r12
0x3d4d:	ret	


0x3d2f:	mov	rbx, qword ptr [rbx + 8]
0x3d33:	test	rbx, rbx
0x3d36:	jne	0x3d20


0x3d20:	mov	rsi, qword ptr [rbx]
0x3d23:	mov	rdi, rbp
0x3d26:	call	0x2340


0x3d7b:	test	eax, eax
0x3d7d:	je	0x3da0


0x3da0:	mov	ebp, 1
0x3da5:	mov	eax, ebp
0x3da7:	pop	rbx
0x3da8:	pop	rbp
0x3da9:	pop	r12
0x3dab:	ret	


0x3d7f:	mov	rbx, qword ptr [rbx + 8]
0x3d83:	test	rbx, rbx
0x3d86:	jne	0x3d70


0x3d88:	mov	eax, ebp
0x3d8a:	pop	rbx
0x3d8b:	pop	rbp
0x3d8c:	pop	r12
0x3d8e:	ret	


0x3d70:	mov	rsi, qword ptr [rbx]
0x3d73:	mov	rdi, r12
0x3d76:	call	0x2340


0x3efa:	mov	dword ptr [rip + 0x210110], eax
0x3f00:	jmp	0x3ece


0x80ac:	test	rax, rax
0x80af:	mov	rbx, rax
0x80b2:	jne	0x7f8c


0x80b8:	lea	rdi, [rip + 0x7f81]
0x80bf:	call	0x2050


0x80c4:	test	rax, rax
0x80c7:	mov	rbx, rax
0x80ca:	jne	0x7f8c


0x80d0:	lea	rdi, [rip + 0x70c5]
0x80d7:	call	0x2050


0x80dc:	test	rax, rax
0x80df:	je	0x812a


0x812a:	mov	qword ptr [r12], 0x400
0x8132:	xor	eax, eax
0x8134:	mov	dword ptr [r13], 0
0x813c:	jmp	0x7fd5


0x80e1:	mov	qword ptr [r12], 0x200
0x80e9:	xor	eax, eax
0x80eb:	mov	dword ptr [r13], 0
0x80f3:	jmp	0x7fd5


0x7fd5:	mov	rcx, qword ptr [rsp + 8]
0x7fda:	xor	rcx, qword ptr fs:[0x28]
0x7fe3:	jne	0x8141


0x7fe9:	add	rsp, 0x18
0x7fed:	pop	rbx
0x7fee:	pop	rbp
0x7fef:	pop	r12
0x7ff1:	pop	r13
0x7ff3:	ret	


0x8141:	call	0x21f0


0x8813:	test	rax, rax
0x8816:	je	0x886d


0x886d:	mov	qword ptr [rip + 0x20bbb4], rbx
0x8874:	mov	qword ptr [rip + 0x20baa5], rbx
0x887b:	pop	rbx
0x887c:	ret	


0x8818:	lea	r8, [rax + 1]
0x881c:	mov	rdx, r8
0x881f:	sub	rdx, rbx
0x8822:	cmp	rdx, 6
0x8826:	jle	0x886d


0x8828:	lea	rsi, [rax - 6]
0x882c:	lea	rdi, [rip + 0x7895]
0x8833:	mov	ecx, 7
0x8838:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8838:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x883a:	seta	dl
0x883d:	sbb	dl, 0
0x8840:	test	dl, dl
0x8842:	jne	0x886d


0x8844:	lea	rdi, [rip + 0x7885]
0x884b:	mov	ecx, 3
0x8850:	mov	rsi, r8
0x8853:	mov	rbx, r8
0x8856:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8856:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8858:	seta	dl
0x885b:	sbb	dl, 0
0x885e:	test	dl, dl
0x8860:	jne	0x886d


0x8862:	lea	rbx, [rax + 4]
0x8866:	mov	qword ptr [rip + 0x20ba93], rbx
0x886d:	mov	qword ptr [rip + 0x20bbb4], rbx
0x8874:	mov	qword ptr [rip + 0x20baa5], rbx
0x887b:	pop	rbx
0x887c:	ret	


0x889a:	call	0x20a0


0x65fb:	lea	rdx, [rip + 0x99a4]
0x6602:	xor	eax, eax
0x6604:	mov	rcx, rbp
0x6607:	mov	esi, 1
0x660c:	mov	rdi, r12
0x660f:	call	0x2530


0x6614:	test	r13, r13
0x6617:	js	0x6680


0x6680:	mov	rax, r13
0x6683:	mov	rdx, r13
0x6686:	pxor	xmm0, xmm0
0x668a:	shr	rax, 1
0x668d:	and	edx, 1
0x6690:	or	rax, rdx
0x6693:	test	rbp, rbp
0x6696:	cvtsi2sd	xmm0, rax
0x669b:	addsd	xmm0, xmm0
0x669f:	mulsd	xmm0, qword ptr [rip + 0x9819]
0x66a7:	jns	0x662f


0x6619:	pxor	xmm0, xmm0
0x661d:	test	rbp, rbp
0x6620:	cvtsi2sd	xmm0, r13
0x6625:	mulsd	xmm0, qword ptr [rip + 0x9893]
0x662d:	js	0x66a9


0x66a9:	mov	rax, rbp
0x66ac:	pxor	xmm1, xmm1
0x66b0:	shr	rax, 1
0x66b3:	and	ebp, 1
0x66b6:	or	rax, rbp
0x66b9:	cvtsi2sd	xmm1, rax
0x66be:	addsd	xmm1, xmm1
0x66c2:	jmp	0x6638


0x662f:	pxor	xmm1, xmm1
0x6633:	cvtsi2sd	xmm1, rbp
0x6638:	divsd	xmm0, xmm1
0x663c:	lea	rdx, [rip + 0x9995]
0x6643:	mov	rcx, r13
0x6646:	mov	rdi, r12
0x6649:	mov	esi, 1
0x664e:	mov	eax, 1
0x6653:	call	0x2530


0x6638:	divsd	xmm0, xmm1
0x663c:	lea	rdx, [rip + 0x9995]
0x6643:	mov	rcx, r13
0x6646:	mov	rdi, r12
0x6649:	mov	esi, 1
0x664e:	mov	eax, 1
0x6653:	call	0x2530


0x6658:	add	rsp, 8
0x665c:	mov	rcx, rbx
0x665f:	mov	rdi, r12
0x6662:	pop	rbx
0x6663:	pop	rbp
0x6664:	pop	r12
0x6666:	pop	r13
0x6668:	lea	rdx, [rip + 0x994f]
0x666f:	mov	esi, 1
0x6674:	xor	eax, eax
0x6676:	jmp	0x2530


0xa7ec:	lea	rsi, [rip + 0x5dc8]
0xa7f3:	xor	edi, edi
0xa7f5:	mov	edx, 5
0xa7fa:	call	0x2190


0xa901:	jmp	0xa7ec


0xb62f:	test	eax, eax
0xb631:	jne	0xb642


0xb633:	add	rsp, 8
0xb637:	ret	


0xb642:	lea	rcx, [rip + 0x54e7]
0xb649:	lea	rsi, [rip + 0x5468]
0xb650:	lea	rdi, [rip + 0x5484]
0xb657:	mov	edx, 0x40
0xb65c:	call	0x2280


0xb9f8:	test	eax, eax
0xb9fa:	je	0xba80


0xba80:	lea	rdi, [rbp + 0x82]
0xba87:	lea	rsi, [rip + 0x50bd]
0xba8e:	call	0x2090


0xba00:	mov	dword ptr [rip + 0x2088d6], 0
0xba0a:	mov	rsi, rbp
0xba0d:	mov	rdi, r12
0xba10:	call	0x2380


0x2090:	jmp	qword ptr [rip + 0x211caa]




0xca18:	mov	edi, eax
0xca1a:	call	0xcb40


0xca1f:	mov	rcx, qword ptr [rsp + 0x18]
0xca24:	xor	rcx, qword ptr fs:[0x28]
0xca2d:	jne	0xca59


0xca2f:	add	rsp, 0x58
0xca33:	ret	


0xca59:	call	0x21f0


0xcc0e:	test	eax, eax
0xcc10:	je	0xcc1a


0xcc12:	test	dword ptr [rbx], 0x100
0xcc18:	jne	0xcc28


0xcc28:	mov	rdi, rbx
0xcc2b:	mov	edx, 1
0xcc30:	xor	esi, esi
0xcc32:	call	0xcc40


0xdf15:	mov	ebx, eax
0xdf17:	jmp	0xdeb0


0xdeb0:	mov	rcx, qword ptr [rsp + 0x18]
0xdeb5:	xor	rcx, qword ptr fs:[0x28]
0xdebe:	mov	eax, ebx
0xdec0:	jne	0xe01d


0xdec6:	add	rsp, 0x50
0xdeca:	pop	rbx
0xdecb:	pop	rbp
0xdecc:	pop	r12
0xdece:	ret	


0xe01d:	call	0x21f0


0xdea9:	mov	ebx, eax
0xdeab:	nop	dword ptr [rax + rax]
0xdeb0:	mov	rcx, qword ptr [rsp + 0x18]
0xdeb5:	xor	rcx, qword ptr fs:[0x28]
0xdebe:	mov	eax, ebx
0xdec0:	jne	0xe01d


0xdf6c:	mov	ebx, eax
0xdf6e:	jmp	0xdeb0


0xde55:	test	eax, eax
0xde57:	mov	ebx, eax
0xde59:	js	0xdfe8


0xdfe8:	call	0x20b0


0xde5f:	mov	dword ptr [rip + 0x20670f], 1
0xde69:	jmp	0xdeb0


0xdf7c:	test	eax, eax
0xdf7e:	mov	ebx, eax
0xdf80:	js	0xdeb0


0xdf86:	cmp	dword ptr [rip + 0x2065eb], -1
0xdf8d:	jne	0xdeb0


0xdf93:	xor	eax, eax
0xdf95:	mov	esi, 1
0xdf9a:	mov	edi, ebx
0xdf9c:	call	0x2150


0xdfa1:	test	eax, eax
0xdfa3:	js	0xdfc1


0xdfc1:	call	0x20b0


0xdfa5:	or	eax, 1
0xdfa8:	mov	esi, 2
0xdfad:	mov	edi, ebx
0xdfaf:	mov	edx, eax
0xdfb1:	xor	eax, eax
0xdfb3:	call	0x2150


0xdfb8:	cmp	eax, -1
0xdfbb:	jne	0xdeb0


0xe033:	mov	ebx, eax
0xe035:	jmp	0xdeb0


0x2604:	lea	rsi, [rip + 0xdff6]
0x260b:	mov	edi, 6
0x2610:	call	0x2460


0x75ae:	mov	r14, qword ptr [rax]
0x75b1:	mov	r13, rax
0x75b4:	mov	rdi, r14
0x75b7:	call	0x21b0


0xd17f:	test	rax, rax
0xd182:	je	0xce05


0xd188:	mov	r15, rax
0xd18b:	mov	byte ptr [r15 + r14], 0
0xd190:	call	0x20b0


0xd7ec:	test	rax, rax
0xd7ef:	je	0xd8eb


0xd8eb:	call	0x20b0


0xd7f5:	mov	r15, rax
0xd7f8:	jmp	0xd72f


0xdc70:	test	rax, rax
0xdc73:	je	0xd8eb


0xdc79:	mov	r15, rax
0xdc7c:	cmp	r15, qword ptr [rbp - 0x3e8]
0xdc83:	mov	byte ptr [r15 + r14], 0
0xdc88:	je	0xdca1


0xcf2a:	test	rax, rax
0xcf2d:	mov	rcx, qword ptr [rbp - 0x3c8]
0xcf34:	mov	r8, qword ptr [rbp - 0x3d0]
0xcf3b:	je	0xd8eb


0xcf41:	mov	r15, rax
0xcf44:	lea	rdi, [r15 + rbx]
0xcf48:	mov	rdx, rcx
0xcf4b:	mov	rsi, r8
0xcf4e:	call	0x2360


0xdc9a:	test	rax, rax
0xdc9d:	cmovne	r15, rax
0xdca1:	mov	rax, qword ptr [rbp - 0x420]
0xdca8:	test	rax, rax
0xdcab:	je	0xdcb5


0xecfe:	mov	rdx, qword ptr [r15 + 8]
0xed02:	mov	r11, qword ptr [rsp + 0x30]
0xed07:	mov	rcx, rax
0xed0a:	mov	r8, qword ptr [rsp + 0x38]
0xed0f:	mov	r10, qword ptr [rsp + 0x40]
0xed14:	mov	r9, qword ptr [rsp + 0x48]
0xed19:	test	rcx, rcx
0xed1c:	je	0xef37


0xef37:	mov	rcx, rdx
0xef3a:	jmp	0xeedb


0xed22:	cmp	qword ptr [rsp + 8], rdx
0xed27:	mov	rax, qword ptr [r15]
0xed2a:	je	0xeef0


0xeef0:	mov	rsi, qword ptr [rsp + 8]
0xeef5:	shl	rax, 5
0xeef9:	mov	rdi, rcx
0xeefc:	mov	rdx, rax
0xeeff:	mov	qword ptr [rsp + 0x48], r9
0xef04:	mov	qword ptr [rsp + 0x40], r10
0xef09:	mov	qword ptr [rsp + 0x38], r8
0xef0e:	mov	qword ptr [rsp + 0x30], r11
0xef13:	call	0x2360


0xed30:	mov	qword ptr [r15 + 8], rcx
0xed34:	jmp	0xe74d


0xe74d:	mov	rdx, rax
0xe750:	shl	rdx, 5
0xe754:	add	rdx, rcx
0xe757:	cmp	rax, rbx
0xe75a:	ja	0xe776


0xef18:	mov	r9, qword ptr [rsp + 0x48]
0xef1d:	mov	rcx, rax
0xef20:	mov	r10, qword ptr [rsp + 0x40]
0xef25:	mov	rax, qword ptr [r15]
0xef28:	mov	r8, qword ptr [rsp + 0x38]
0xef2d:	mov	r11, qword ptr [rsp + 0x30]
0xef32:	jmp	0xed30


0xe666:	mov	rdx, qword ptr [r15 + 8]
0xe66a:	mov	r8, qword ptr [rsp + 0x30]
0xe66f:	mov	rcx, rax
0xe672:	mov	r10, qword ptr [rsp + 0x38]
0xe677:	mov	r9, qword ptr [rsp + 0x40]
0xe67c:	test	rcx, rcx
0xe67f:	je	0xef37


0xe685:	cmp	qword ptr [rsp + 8], rdx
0xe68a:	mov	rax, qword ptr [r15]
0xe68d:	je	0xee4b


0xee4b:	mov	rsi, qword ptr [rsp + 8]
0xee50:	shl	rax, 5
0xee54:	mov	rdi, rcx
0xee57:	mov	rdx, rax
0xee5a:	mov	qword ptr [rsp + 0x40], r9
0xee5f:	mov	qword ptr [rsp + 0x38], r10
0xee64:	mov	qword ptr [rsp + 0x30], r8
0xee69:	call	0x2360


0xe693:	mov	qword ptr [r15 + 8], rcx
0xe697:	mov	rdx, rax
0xe69a:	shl	rdx, 5
0xe69e:	add	rdx, rcx
0xe6a1:	cmp	rax, rbx
0xe6a4:	ja	0xe6c6


0xee6e:	mov	r9, qword ptr [rsp + 0x40]
0xee73:	mov	rcx, rax
0xee76:	mov	r10, qword ptr [rsp + 0x38]
0xee7b:	mov	rax, qword ptr [r15]
0xee7e:	mov	r8, qword ptr [rsp + 0x30]
0xee83:	jmp	0xe693


0xae46:	test	rax, rax
0xae49:	jne	0xae50


0xae4b:	test	rbx, rbx
0xae4e:	jne	0xae61


0xae50:	pop	rbx
0xae51:	ret	


0xae61:	call	0xb020


0x3dfc:	mov	rdx, qword ptr [rip + 0x21055d]
0x3e03:	mov	rdi, qword ptr [rip + 0x210566]
0x3e0a:	xor	ecx, ecx
0x3e0c:	mov	qword ptr [rip + 0x210555], rax
0x3e13:	lea	rbx, [rax + rdx*8 - 8]
0x3e18:	mov	edx, 8
0x3e1d:	mov	rax, rdx
0x3e20:	mul	rdi
0x3e23:	jo	0x3e49


0x3e49:	mov	ecx, 1
0x3e4e:	jmp	0x3e25


0x3e25:	test	rax, rax
0x3e28:	js	0x3e3d


0x3e2a:	test	rcx, rcx
0x3e2d:	jne	0x3e3d


0x3e2f:	shl	rdi, 3
0x3e33:	call	0xadd0


0x41ea:	movsxd	rdi, ebx
0x41ed:	lea	rcx, [rip + 0x20fe2c]
0x41f4:	mov	rsi, qword ptr [rip + 0x210175]
0x41fb:	lea	rdx, [rdi + rdi*2]
0x41ff:	mov	qword ptr [rip + 0x210172], rax
0x4206:	shl	rdx, 4
0x420a:	add	rdx, rcx
0x420d:	test	rbp, rbp
0x4210:	mov	qword ptr [rax + rsi*8 - 8], rdx
0x4215:	je	0x421b


0x421b:	lea	rax, [rdi + rdi*2]
0x421f:	shl	rax, 4
0x4223:	add	rax, rcx
0x4226:	cmp	byte ptr [rax + 0x2c], 0
0x422a:	jne	0x423e


0x4217:	mov	qword ptr [rdx + 0x18], rbp
0x421b:	lea	rax, [rdi + rdi*2]
0x421f:	shl	rax, 4
0x4223:	add	rax, rcx
0x4226:	cmp	byte ptr [rax + 0x2c], 0
0x422a:	jne	0x423e


0x422c:	mov	byte ptr [rax + 0x2c], 1
0x4230:	add	rsp, 8
0x4234:	pop	rbx
0x4235:	pop	rbp
0x4236:	ret	


0x423e:	lea	rcx, [rip + 0xb10b]
0x4245:	lea	rsi, [rip + 0xada5]
0x424c:	lea	rdi, [rip + 0xadb9]
0x4253:	mov	edx, 0x196
0x4258:	call	0x2280


0x85a7:	test	rax, rax
0x85aa:	mov	r14, rax
0x85ad:	je	0x85f0


0x85f0:	mov	rdi, r12
0x85f3:	call	0x2070


0x85af:	mov	r9d, dword ptr [rsp + 0xc]
0x85b4:	mov	r8d, dword ptr [rsp + 8]
0x85b9:	mov	rcx, rbp
0x85bc:	mov	qword ptr [rbp], r13
0x85c0:	mov	rdx, rbx
0x85c3:	mov	rsi, rax
0x85c6:	mov	rdi, r15
0x85c9:	call	0x81a0


0x863e:	cmp	rax, 1
0x8642:	jbe	0x8778


0x8778:	xor	ebp, ebp
0x877a:	cmp	rbx, r13
0x877d:	jae	0x873d


0x8648:	xor	ebp, ebp
0x864a:	cmp	rbx, r13
0x864d:	jae	0x873d


0x877f:	call	0x2590


0x873d:	mov	rsi, qword ptr [rsp + 0x28]
0x8742:	xor	rsi, qword ptr fs:[0x28]
0x874b:	mov	eax, ebp
0x874d:	jne	0x87ca


0x8653:	lea	r12, [rsp + 0x20]
0x8658:	lea	r14, [rsp + 0x1c]
0x865d:	jmp	0x867b


0x2590:	jmp	qword ptr [rip + 0x211a2a]


0x874f:	add	rsp, 0x38
0x8753:	pop	rbx
0x8754:	pop	rbp
0x8755:	pop	r12
0x8757:	pop	r13
0x8759:	pop	r14
0x875b:	pop	r15
0x875d:	ret	


0x87ca:	call	0x21f0


0x867b:	movzx	eax, byte ptr [rbx]
0x867e:	cmp	al, 0x3f
0x8680:	jle	0x8660




0x8660:	cmp	al, 0x25
0x8662:	jge	0x866b


0x8682:	cmp	al, 0x41
0x8684:	jl	0x8691


0x8664:	sub	eax, 0x20
0x8667:	cmp	al, 3
0x8669:	ja	0x8691


0x866b:	add	rbx, 1
0x866f:	add	ebp, 1
0x8672:	cmp	rbx, r13
0x8675:	jae	0x873d


0x8691:	mov	qword ptr [r12], 0
0x8699:	jmp	0x86c0


0x8686:	cmp	al, 0x5f
0x8688:	jle	0x866b


0x86c0:	mov	rdx, r13
0x86c3:	mov	rcx, r12
0x86c6:	mov	rsi, rbx
0x86c9:	sub	rdx, rbx
0x86cc:	mov	rdi, r14
0x86cf:	call	0xbac0


0x868a:	sub	eax, 0x61
0x868d:	cmp	al, 0x1d
0x868f:	jbe	0x866b


0x8a01:	cmp	r15d, 0xa
0x8a05:	mov	qword ptr [rsp + 0x58], rax
0x8a0a:	ja	0x9bbf


0x8a10:	lea	rcx, [rip + 0x7729]
0x8a17:	mov	edx, r15d
0x8a1a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x8a1e:	add	rax, rcx
0x8a21:	jmp	rax


0x9bbf:	call	0x20a0


0xd8f0:	mov	qword ptr [rbp - 0x3c8], rax
0xd8f7:	nop	word ptr [rax + rax]
0xd900:	mov	rdi, r15
0xd903:	call	0x2070


0xd195:	mov	qword ptr [rbp - 0x3c8], rax
0xd19c:	mov	eax, dword ptr [rax]
0xd19e:	mov	qword ptr [rbp - 0x3f8], rbx
0xd1a5:	mov	dword ptr [rbp - 0x424], eax
0xd1ab:	nop	dword ptr [rax + rax]
0xd1b0:	mov	rax, qword ptr [rbp - 0x3c8]
0xd1b7:	mov	rbx, r12
0xd1ba:	mov	r10d, 0x7fffffff
0xd1c0:	sub	rbx, r14
0xd1c3:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0xd1cd:	cmp	rbx, 0x7fffffff
0xd1d4:	mov	dword ptr [rax], 0
0xd1da:	mov	eax, dword ptr [rbp - 0x3d0]
0xd1e0:	cmovbe	r10, rbx
0xd1e4:	cmp	eax, 0x11
0xd1e7:	ja	0xdbc6


0xd1ed:	lea	rsi, [rip + 0x3a94]
0xd1f4:	movsxd	rax, dword ptr [rsi + rax*4]
0xd1f8:	add	rax, rsi
0xd1fb:	jmp	rax


0xdfc6:	mov	r12d, dword ptr [rax]
0xdfc9:	mov	rbp, rax
0xdfcc:	mov	edi, ebx
0xdfce:	call	0x22d0


0xdfd3:	mov	ebx, 0xffffffff
0xdfd8:	mov	dword ptr [rbp], r12d
0xdfdc:	jmp	0xdeb0


0xdfed:	cmp	dword ptr [rax], 0x16
0xdff0:	jne	0xde5f


0xdff6:	xor	esi, esi
0xdff8:	xor	eax, eax
0xdffa:	mov	edx, r12d
0xdffd:	mov	edi, ebp
0xdfff:	call	0x2150


0xe004:	test	eax, eax
0xe006:	mov	ebx, eax
0xe008:	js	0xdeb0


0xe00e:	mov	dword ptr [rip + 0x206560], 0xffffffff
0xe018:	jmp	0xdf93


0x445e:	cmp	byte ptr [rsp + 8], 0
0x4463:	mov	rbx, rax
0x4466:	je	0x447c


0x447c:	mov	rdx, qword ptr [rsp]
0x4480:	mov	esi, 3
0x4485:	xor	edi, edi
0x4487:	call	0xa340


0x4468:	mov	eax, dword ptr [rax]
0x446a:	cmp	eax, 0xd
0x446d:	je	0x4ba5


0x4ba5:	cmp	byte ptr [rip + 0x20f862], 0
0x4bac:	je	0x43ac


0x4473:	cmp	eax, 2
0x4476:	je	0x4ba5


0x4bb2:	mov	rax, -1
0x4bb9:	mov	byte ptr [rsp + 0x40], 0
0x4bbe:	lea	rbx, [rip + 0xbd94]
0x4bc5:	mov	qword ptr [rsp + 0x50], rax
0x4bca:	mov	qword ptr [rsp + 0x48], rax
0x4bcf:	mov	qword ptr [rsp + 0x38], rax
0x4bd4:	mov	qword ptr [rsp + 0x30], rax
0x4bd9:	mov	qword ptr [rsp + 0x28], rax
0x4bde:	mov	qword ptr [rsp + 0x20], rax
0x4be3:	jmp	0x4b50


0xce0a:	mov	qword ptr [rbp - 0x3c8], rax
0xce11:	cmp	r15, qword ptr [rbp - 0x3e8]
0xce18:	je	0xce23


0xce23:	mov	rax, qword ptr [rbp - 0x420]
0xce2a:	test	rax, rax
0xce2d:	je	0xce37


0xce1a:	test	r15, r15
0xce1d:	jne	0xd900


0xce37:	mov	rax, qword ptr [rbp - 0x408]
0xce3e:	mov	rdi, qword ptr [rbp - 0x2b8]
0xce45:	add	rax, 0x20
0xce49:	cmp	rdi, rax
0xce4c:	je	0xce53


0xce2f:	mov	rdi, rax
0xce32:	call	0x2070


0xd900:	mov	rdi, r15
0xd903:	call	0x2070


0xce53:	mov	rax, qword ptr [rbp - 0x410]
0xce5a:	mov	rdi, qword ptr [rbp - 0x3a8]
0xce61:	add	rax, 0x10
0xce65:	cmp	rdi, rax
0xce68:	je	0xce6f


0xce4e:	call	0x2070


0xce6f:	mov	rax, qword ptr [rbp - 0x3c8]
0xce76:	xor	r15d, r15d
0xce79:	mov	dword ptr [rax], 0xc
0xce7f:	mov	rdi, qword ptr [rbp - 0x38]
0xce83:	xor	rdi, qword ptr fs:[0x28]
0xce8c:	mov	rax, r15
0xce8f:	jne	0xdd97


0xce6a:	call	0x2070


0xdc0d:	xor	r15d, r15d
0xdc10:	mov	dword ptr [rax], 0x16
0xdc16:	jmp	0xce7f


0xd76d:	mov	qword ptr [rbp - 0x3c8], rax
0xd774:	jmp	0xce37


0xed61:	mov	dword ptr [rax], 0xc
0xed67:	mov	eax, 0xffffffff
0xed6c:	jmp	0xe2f2


0xe2f2:	add	rsp, 0x58
0xe2f6:	pop	rbx
0xe2f7:	pop	rbp
0xe2f8:	pop	r12
0xe2fa:	pop	r13
0xe2fc:	pop	r14
0xe2fe:	pop	r15
0xe300:	ret	


0xeac3:	mov	dword ptr [rax], 0x16
0xeac9:	mov	eax, 0xffffffff
0xeace:	jmp	0xe2f2


0x5d15:	xor	ebp, ebp
0x5d17:	mov	dword ptr [rax], 2
0x5d1d:	jmp	0x5960


0x5960:	mov	rcx, qword ptr [rsp + 0xd8]
0x5968:	xor	rcx, qword ptr fs:[0x28]
0x5971:	mov	rax, rbp
0x5974:	jne	0x5d71


0x597a:	add	rsp, 0xe8
0x5981:	pop	rbx
0x5982:	pop	rbp
0x5983:	pop	r12
0x5985:	pop	r13
0x5987:	pop	r14
0x5989:	pop	r15
0x598b:	ret	


0x5d71:	call	0x21f0


0x5cd5:	xor	ebp, ebp
0x5cd7:	mov	dword ptr [rax], 0x16
0x5cdd:	jmp	0x5960


0xb188:	mov	dword ptr [rax], 0
0xb18e:	mov	r12, rax
0xb191:	movzx	ebx, byte ptr [rbp]
0xb195:	call	0x2590


0x9bf1:	mov	r13, rax
0x9bf4:	mov	eax, dword ptr [rax]
0x9bf6:	test	r15d, r15d
0x9bf9:	mov	rbx, qword ptr [rip + 0x20a6c0]
0x9c00:	mov	dword ptr [rsp + 0x18], eax
0x9c04:	js	0x9d71


0x9d71:	call	0x20a0


0x9c0a:	cmp	dword ptr [rip + 0x20a6a7], r15d
0x9c11:	jg	0x9c75


0x9c13:	cmp	r15d, 0x7fffffff
0x9c1a:	je	0x9d76


0x9c75:	mov	eax, dword ptr [rbp + 4]
0x9c78:	shl	r15, 4
0x9c7c:	sub	rsp, 8
0x9c80:	add	rbx, r15
0x9c83:	lea	r15, [rbp + 8]
0x9c87:	mov	r8d, dword ptr [rbp]
0x9c8b:	mov	r11, qword ptr [rbx]
0x9c8e:	mov	r12, qword ptr [rbx + 8]
0x9c92:	mov	rcx, r14
0x9c95:	or	eax, 1
0x9c98:	mov	dword ptr [rsp + 0x24], eax
0x9c9c:	push	qword ptr [rbp + 0x30]
0x9c9f:	mov	r9d, eax
0x9ca2:	push	qword ptr [rbp + 0x28]
0x9ca5:	push	r15
0x9ca7:	mov	rsi, r11
0x9caa:	mov	rdx, qword ptr [rsp + 0x28]
0x9caf:	mov	rdi, r12
0x9cb2:	mov	qword ptr [rsp + 0x30], r11
0x9cb7:	call	0x8990


0x9d76:	call	0xb020


0x9c20:	lea	r12d, [r15 + 1]
0x9c24:	lea	rax, [rip + 0x20a6a5]
0x9c2b:	movsxd	rsi, r12d
0x9c2e:	shl	rsi, 4
0x9c32:	cmp	rbx, rax
0x9c35:	je	0x9d50


0x9d50:	xor	edi, edi
0x9d52:	call	0xae30


0x9c3b:	mov	rdi, rbx
0x9c3e:	call	0xae30


0x9c43:	mov	rbx, rax
0x9c46:	mov	qword ptr [rip + 0x20a673], rax
0x9c4d:	movsxd	rdi, dword ptr [rip + 0x20a664]
0x9c54:	mov	edx, r12d
0x9c57:	xor	esi, esi
0x9c59:	sub	edx, edi
0x9c5b:	shl	rdi, 4
0x9c5f:	movsxd	rdx, edx
0x9c62:	add	rdi, rbx
0x9c65:	shl	rdx, 4
0x9c69:	call	0x22a0


0x22a0:	jmp	qword ptr [rip + 0x211ba2]




0x9d57:	movdqa	xmm0, xmmword ptr [rip + 0x20a571]
0x9d5f:	mov	rbx, rax
0x9d62:	mov	qword ptr [rip + 0x20a557], rax
0x9d69:	movups	xmmword ptr [rax], xmm0
0x9d6c:	jmp	0x9c4d


0x9c4d:	movsxd	rdi, dword ptr [rip + 0x20a664]
0x9c54:	mov	edx, r12d
0x9c57:	xor	esi, esi
0x9c59:	sub	edx, edi
0x9c5b:	shl	rdi, 4
0x9c5f:	movsxd	rdx, edx
0x9c62:	add	rdi, rbx
0x9c65:	shl	rdx, 4
0x9c69:	call	0x22a0


0x9d8c:	mov	r12d, dword ptr [rax]
0x9d8f:	mov	rbp, rax
0x9d92:	lea	rax, [rip + 0x20a7a7]
0x9d99:	test	rbx, rbx
0x9d9c:	mov	esi, 0x38
0x9da1:	cmove	rbx, rax
0x9da5:	mov	rdi, rbx
0x9da8:	call	0xafd0


0x9ec2:	mov	r12d, dword ptr [rax]
0x9ec5:	mov	rbp, rax
0x9ec8:	lea	rax, [rbx + 8]
0x9ecc:	sub	rsp, 8
0x9ed0:	mov	r9d, dword ptr [rbx + 4]
0x9ed4:	push	qword ptr [rbx + 0x30]
0x9ed7:	mov	r8d, dword ptr [rbx]
0x9eda:	push	qword ptr [rbx + 0x28]
0x9edd:	mov	rdx, r15
0x9ee0:	push	rax
0x9ee1:	mov	rcx, qword ptr [rsp + 0x28]
0x9ee6:	mov	rsi, r14
0x9ee9:	mov	rdi, r13
0x9eec:	call	0x8990


0x9f3f:	test	r12, r12
0x9f42:	mov	r13, rax
0x9f45:	mov	eax, dword ptr [rax]
0x9f47:	sete	bpl
0x9f4b:	or	ebp, dword ptr [rbx + 4]
0x9f4e:	lea	r10, [rbx + 8]
0x9f52:	sub	rsp, 8
0x9f56:	mov	r8d, dword ptr [rbx]
0x9f59:	mov	rcx, r15
0x9f5c:	mov	dword ptr [rsp + 0x14], eax
0x9f60:	push	qword ptr [rbx + 0x30]
0x9f63:	mov	rdx, r14
0x9f66:	push	qword ptr [rbx + 0x28]
0x9f69:	push	r10
0x9f6b:	xor	esi, esi
0x9f6d:	mov	r9d, ebp
0x9f70:	xor	edi, edi
0x9f72:	mov	qword ptr [rsp + 0x40], r10
0x9f77:	call	0x8990


0xa73f:	mov	edx, eax
0xa741:	mov	dword ptr [rbx], eax
0xa743:	xor	eax, eax
0xa745:	test	edx, edx
0xa747:	js	0xa750


0xa750:	xor	esi, esi
0xa752:	xor	edi, edi
0xa754:	call	0x22b0


0xa749:	pop	rbx
0xa74a:	ret	


0x53b8:	mov	r15d, eax
0x53bb:	call	0x20b0


0x53c0:	test	r15d, r15d
0x53c3:	mov	r14, rax
0x53c6:	jne	0x56e5


0x53cc:	mov	eax, dword ptr [rbx + 0x18]
0x53cf:	and	eax, 0xf000
0x53d4:	cmp	eax, 0x4000
0x53d9:	je	0x55c0


0x56e5:	lea	rsi, [rip + 0xa7e4]
0x56ec:	mov	edx, 5
0x56f1:	xor	edi, edi
0x56f3:	xor	ebx, ebx
0x56f5:	call	0x2190


0x55c0:	movdqu	xmm0, xmmword ptr [rbx]
0x55c4:	mov	rdi, r12
0x55c7:	movaps	xmmword ptr [rbp - 0x160], xmm0
0x55ce:	movdqu	xmm0, xmmword ptr [rbx + 0x10]
0x55d3:	movaps	xmmword ptr [rbp - 0x150], xmm0
0x55da:	movdqu	xmm0, xmmword ptr [rbx + 0x20]
0x55df:	movaps	xmmword ptr [rbp - 0x140], xmm0
0x55e6:	movdqu	xmm0, xmmword ptr [rbx + 0x30]
0x55eb:	movaps	xmmword ptr [rbp - 0x130], xmm0
0x55f2:	movdqu	xmm0, xmmword ptr [rbx + 0x40]
0x55f7:	movaps	xmmword ptr [rbp - 0x120], xmm0
0x55fe:	movdqu	xmm0, xmmword ptr [rbx + 0x50]
0x5603:	movaps	xmmword ptr [rbp - 0x110], xmm0
0x560a:	movdqu	xmm0, xmmword ptr [rbx + 0x60]
0x560f:	movaps	xmmword ptr [rbp - 0x100], xmm0
0x5616:	movdqu	xmm0, xmmword ptr [rbx + 0x70]
0x561b:	movaps	xmmword ptr [rbp - 0xf0], xmm0
0x5622:	movdqu	xmm0, xmmword ptr [rbx + 0x80]
0x562a:	movaps	xmmword ptr [rbp - 0xe0], xmm0
0x5631:	call	0x21e0


0x53df:	mov	rdi, r12
0x53e2:	call	0x5e50


0xa759:	test	rax, rax
0xa75c:	mov	qword ptr [rbx + 8], rax
0xa760:	sete	al
0xa763:	movzx	eax, al
0xa766:	neg	eax
0xa768:	pop	rbx
0xa769:	ret	


0xb06a:	test	rax, rax
0xb06d:	mov	rbx, rax
0xb070:	je	0xb080


0xb080:	call	0x20b0


0xb072:	mov	rax, rbx
0xb075:	pop	rbx
0xb076:	ret	


0xb085:	cmp	dword ptr [rax], 0xc
0xb088:	jne	0xb072


0xb08a:	call	0xb020


0x57a8:	test	rax, rax
0x57ab:	mov	rbp, rax
0x57ae:	je	0x5960


0x57b4:	mov	rdi, rax
0x57b7:	call	0x21b0


0xb687:	test	eax, eax
0xb689:	js	0xb6a0


0xb6a0:	mov	eax, 0xffffffff
0xb6a5:	jmp	0xb699


0xb68b:	mov	ebp, eax
0xb68d:	mov	rdi, rbx
0xb690:	call	0xb620


0xb699:	add	rsp, 8
0xb69d:	pop	rbx
0xb69e:	pop	rbp
0xb69f:	ret	


0xb695:	mov	dword ptr [rbx], ebp
0xb697:	xor	eax, eax
0xb699:	add	rsp, 8
0xb69d:	pop	rbx
0xb69e:	pop	rbp
0xb69f:	ret	


0x5636:	test	eax, eax
0x5638:	jns	0x544d


0x563e:	mov	rsi, r12
0x5641:	mov	edi, 4
0x5646:	call	0xa240


0x544d:	lea	r12, [rbp - 0xd0]
0x5454:	lea	rbx, [rip + 0xaab0]
0x545b:	jmp	0x5513


0x5513:	mov	rdx, r12
0x5516:	mov	rsi, rbx
0x5519:	mov	edi, 1
0x551e:	call	0x2390


0xb6d6:	test	eax, eax
0xb6d8:	mov	ebx, eax
0xb6da:	je	0xb6e9


0xb6e9:	mov	rcx, qword ptr [rsp + 8]
0xb6ee:	xor	rcx, qword ptr fs:[0x28]
0xb6f7:	mov	eax, ebx
0xb6f9:	jne	0xb901


0xb6dc:	call	0x20b0


0xb6ff:	add	rsp, 0x18
0xb703:	pop	rbx
0xb704:	pop	rbp
0xb705:	pop	r12
0xb707:	pop	r13
0xb709:	pop	r14
0xb70b:	pop	r15
0xb70d:	ret	


0xb901:	call	0x21f0


0xb6e1:	cmp	dword ptr [rax], 0x24
0xb6e4:	mov	r14, rax
0xb6e7:	je	0xb710


0xb710:	mov	rdi, rbp
0xb713:	call	0x21b0


0xbaf7:	cmp	rax, -3
0xbafb:	mov	rbp, rax
0xbafe:	jbe	0xbb20


0xbb20:	mov	rdx, qword ptr [rsp + 8]
0xbb25:	xor	rdx, qword ptr fs:[0x28]
0xbb2e:	mov	rax, rbp
0xbb31:	jne	0xbb3e


0xbb00:	test	r12, r12
0xbb03:	je	0xbb20


0xbb33:	add	rsp, 0x18
0xbb37:	pop	rbx
0xbb38:	pop	rbp
0xbb39:	pop	r12
0xbb3b:	pop	r13
0xbb3d:	ret	


0xbb3e:	call	0x21f0


0xbb05:	xor	edi, edi
0xbb07:	call	0xca60


0x86d4:	cmp	rax, -1
0x86d8:	mov	r15, rax
0x86db:	je	0x8728


0x8728:	test	byte ptr [rsp + 0xc], 1
0x872d:	je	0x866b


0x86dd:	cmp	rax, -2
0x86e1:	je	0x8760


0x8760:	test	byte ptr [rsp + 0xc], 1
0x8765:	jne	0x8738


0x86e3:	mov	edi, dword ptr [rsp + 0x1c]
0x86e7:	test	rax, rax
0x86ea:	mov	eax, 1
0x86ef:	cmove	r15, rax
0x86f3:	call	0x23b0


0x8767:	add	ebp, 1
0x876a:	mov	rbx, r13
0x876d:	jmp	0x8672


0x8738:	mov	ebp, 0xffffffff
0x873d:	mov	rsi, qword ptr [rsp + 0x28]
0x8742:	xor	rsi, qword ptr fs:[0x28]
0x874b:	mov	eax, ebp
0x874d:	jne	0x87ca


0x23b0:	jmp	qword ptr [rip + 0x211b1a]


0x8672:	cmp	rbx, r13
0x8675:	jae	0x873d




0xd908:	jmp	0xce23


0x85f8:	jmp	0x85dc


0x85dc:	add	rsp, 0x18
0x85e0:	mov	rax, r14
0x85e3:	pop	rbx
0x85e4:	pop	rbp
0x85e5:	pop	r12
0x85e7:	pop	r13
0x85e9:	pop	r14
0x85eb:	pop	r15
0x85ed:	ret	


0x6ded:	jmp	0x6df2


0x6e69:	mov	rax, qword ptr [rsp]
0x6e6d:	mov	qword ptr [rbp], rax
0x6e71:	mov	rax, qword ptr [rsp + 8]
0x6e76:	mov	qword ptr [rbp + 8], rax
0x6e7a:	mov	rax, qword ptr [rsp + 0x10]
0x6e7f:	mov	qword ptr [rbp + 0x10], rax
0x6e83:	mov	rax, qword ptr [rsp + 0x18]
0x6e88:	mov	qword ptr [rbp + 0x18], rax
0x6e8c:	mov	rax, qword ptr [rsp + 0x48]
0x6e91:	mov	qword ptr [rbp + 0x48], rax
0x6e95:	jmp	0x6df2


0xc4d0:	call	0x20b0


0xc4d5:	mov	dword ptr [rax], 0x4b
0xc4db:	mov	eax, 0xffffffff
0xc4e0:	jmp	0xc4b2


0x6c49:	test	rbx, rbx
0x6c4c:	mov	rdi, rbx
0x6c4f:	jne	0x6c40


0x6c40:	mov	rbx, qword ptr [rdi + 8]
0x6c44:	call	0x2070


0x6c5a:	pop	rbx
0x6c5b:	mov	rdi, r12
0x6c5e:	pop	rbp
0x6c5f:	pop	r12
0x6c61:	jmp	0x2070


0x6c19:	test	rbx, rbx
0x6c1c:	mov	rdi, rbx
0x6c1f:	jne	0x6c10


0x6c10:	mov	rbx, qword ptr [rdi + 8]
0x6c14:	call	0x2070


0xa08d:	mov	qword ptr [rip + 0x20a22c], rbx
0xa094:	pop	rbx
0xa095:	mov	dword ptr [rip + 0x20a219], 1
0xa09f:	pop	rbp
0xa0a0:	pop	r12
0xa0a2:	ret	


0xa067:	mov	qword ptr [rip + 0x20a25e], 0x100
0xa072:	mov	qword ptr [rip + 0x20a25f], rbx
0xa079:	lea	rbx, [rip + 0x20a250]
0xa080:	cmp	r12, rbx
0xa083:	je	0xa094


0xae5d:	xor	eax, eax
0xae5f:	pop	rbx
0xae60:	ret	


0xa04c:	cmp	rbx, rbp
0xa04f:	jne	0xa040


0xa040:	mov	rdi, qword ptr [rbx]
0xa043:	add	rbx, 0x10
0xa047:	call	0x2070


0x746c:	mov	rdi, rbx
0x746f:	pop	rbx
0x7470:	jmp	0x2070


0xbbec:	mov	rdi, qword ptr [rbx + 8]
0xbbf0:	call	0x2070


0xbbf5:	mov	rdi, qword ptr [rbx + 0x10]
0xbbf9:	call	0x2070


0xbbfe:	test	byte ptr [rbx + 0x28], 4
0xbc02:	je	0xbc0d


0xbc0d:	mov	rdi, rbx
0xbc10:	pop	rbx
0xbc11:	jmp	0x2070


0xbc04:	mov	rdi, qword ptr [rbx + 0x18]
0xbc08:	call	0x2070


0xbc51:	test	rax, rax
0xbc54:	je	0xc0a0


0xc0a0:	lea	rsi, [rip + 0x3ede]
0xc0a7:	lea	rdi, [rip + 0x4b3f]
0xc0ae:	call	0x23f0


0xbc5a:	lea	r14, [rsp + 0x40]
0xbc5f:	lea	r13, [rsp + 0x50]
0xbc64:	lea	r12, [rsp + 0x48]
0xbc69:	mov	rbp, rax
0xbc6c:	mov	qword ptr [rsp + 0x48], 0
0xbc75:	mov	qword ptr [rsp + 0x50], 0
0xbc7e:	nop	
0xbc80:	mov	rcx, rbp
0xbc83:	mov	edx, 0xa
0xbc88:	mov	rsi, r13
0xbc8b:	mov	rdi, r12
0xbc8e:	call	0x2330


0x23f0:	jmp	qword ptr [rip + 0x211afa]


0x2330:	jmp	qword ptr [rip + 0x211b5a]






0xd9be:	test	rax, rax
0xd9c1:	mov	rcx, rax
0xd9c4:	movzx	edx, byte ptr [rbp - 0x3c8]
0xd9cb:	je	0xce05


0xd9d1:	test	r14, r14
0xd9d4:	je	0xdb70


0xdb70:	mov	r15, rcx
0xdb73:	jmp	0xd18b


0xd9da:	test	dl, dl
0xd9dc:	je	0xdb70


0xd9e2:	mov	rsi, r15
0xd9e5:	mov	rdx, r14
0xd9e8:	mov	rdi, rax
0xd9eb:	call	0x2360


0xd9f0:	mov	r15, rax
0xd9f3:	jmp	0xd18b


0xda4e:	test	rax, rax
0xda51:	mov	rcx, rax
0xda54:	movzx	edx, byte ptr [rbp - 0x3c8]
0xda5b:	je	0xce05


0xda61:	test	r14, r14
0xda64:	je	0xdba4


0xdba4:	mov	r15, rcx
0xdba7:	jmp	0xd72f


0xda6a:	test	dl, dl
0xda6c:	je	0xdba4


0xda72:	mov	rsi, r15
0xda75:	mov	rdx, r14
0xda78:	mov	rdi, rax
0xda7b:	call	0x2360


0xda80:	mov	r15, rax
0xda83:	jmp	0xd72f


0xdd04:	test	rax, rax
0xdd07:	mov	rcx, rax
0xdd0a:	je	0xce05


0xdd10:	test	r14, r14
0xdd13:	je	0xdd80


0xdd80:	mov	r15, rcx
0xdd83:	jmp	0xdc7c


0xdd15:	test	r13b, r13b
0xdd18:	je	0xdd80


0xdd1a:	mov	rsi, r15
0xdd1d:	mov	rdx, r14
0xdd20:	mov	rdi, rax
0xdd23:	call	0x2360


0xdd28:	mov	r15, rax
0xdd2b:	jmp	0xdc7c


0xd864:	test	rax, rax
0xd867:	mov	r9, rax
0xd86a:	mov	rcx, qword ptr [rbp - 0x3c8]
0xd871:	movzx	edx, byte ptr [rbp - 0x3d0]
0xd878:	mov	r8, qword ptr [rbp - 0x3e0]
0xd87f:	je	0xce05


0xd885:	test	rbx, rbx
0xd888:	je	0xda90


0xda90:	mov	r15, r9
0xda93:	jmp	0xcf44


0xd88e:	test	dl, dl
0xd890:	je	0xda90


0xd896:	mov	rsi, r15
0xd899:	mov	rdx, rbx
0xd89c:	mov	rdi, rax
0xd89f:	mov	qword ptr [rbp - 0x3d0], r8
0xd8a6:	mov	qword ptr [rbp - 0x3c8], rcx
0xd8ad:	call	0x2360


0xd8b2:	mov	rcx, qword ptr [rbp - 0x3c8]
0xd8b9:	mov	r15, rax
0xd8bc:	mov	r8, qword ptr [rbp - 0x3d0]
0xd8c3:	jmp	0xcf44


0xcd77:	test	rax, rax
0xcd7a:	mov	qword ptr [rbp - 0x3d8], rax
0xcd81:	je	0xd768


0xcd87:	mov	r8, qword ptr [rbp - 0x3c8]
0xcd8e:	mov	qword ptr [rbp - 0x420], rax
0xcd95:	xor	r12d, r12d
0xcd98:	cmp	qword ptr [rbp - 0x3e8], 0
0xcda0:	je	0xcdac


0x5ef4:	test	rax, rax
0x5ef7:	mov	rcx, rax
0x5efa:	je	0x5f16


0x5f16:	add	rsp, 8
0x5f1a:	mov	rax, rcx
0x5f1d:	pop	rbx
0x5f1e:	pop	rbp
0x5f1f:	ret	


0x5efc:	mov	rdx, rbx
0x5eff:	mov	rsi, rbp
0x5f02:	mov	rdi, rax
0x5f05:	call	0x2360


0x5f0a:	test	rbx, rbx
0x5f0d:	mov	rcx, rax
0x5f10:	je	0x5f20


0x5f20:	mov	byte ptr [rax], 0x2e
0x5f23:	mov	ebx, 1
0x5f28:	jmp	0x5f12


0x5f12:	mov	byte ptr [rcx + rbx], 0
0x5f16:	add	rsp, 8
0x5f1a:	mov	rax, rcx
0x5f1d:	pop	rbx
0x5f1e:	pop	rbp
0x5f1f:	ret	


0x5e59:	test	rax, rax
0x5e5c:	je	0x5e63


0x5e63:	call	0xb020


0x5e5e:	add	rsp, 8
0x5e62:	ret	


0x53e7:	mov	rdi, rax
0x53ea:	mov	rbx, rax
0x53ed:	call	0x21b0


0xa560:	mov	rcx, rsp
0xa563:	mov	r8d, 0x100
0xa569:	mov	rdx, rax
0xa56c:	mov	esi, r13d
0xa56f:	mov	edi, 1
0xa574:	mov	rbx, rax
0xa577:	call	0x2230


0x2230:	jmp	qword ptr [rip + 0x211bda]




0xeeb6:	mov	rdx, qword ptr [rsp + 8]
0xeebb:	mov	rcx, rax
0xeebe:	mov	r9, qword ptr [rsp + 0x48]
0xeec3:	mov	r10, qword ptr [rsp + 0x40]
0xeec8:	mov	r8, qword ptr [rsp + 0x38]
0xeecd:	mov	r11, qword ptr [rsp + 0x30]
0xeed2:	jmp	0xed19


0xed19:	test	rcx, rcx
0xed1c:	je	0xef37


0xed79:	mov	rdx, qword ptr [rsp + 8]
0xed7e:	mov	rcx, rax
0xed81:	mov	r9, qword ptr [rsp + 0x40]
0xed86:	mov	r10, qword ptr [rsp + 0x38]
0xed8b:	mov	r8, qword ptr [rsp + 0x30]
0xed90:	jmp	0xe67c


0xe67c:	test	rcx, rcx
0xe67f:	je	0xef37


0x6983:	test	rax, rax
0x6986:	mov	rbx, rax
0x6989:	je	0x6a3a


0x6a3a:	add	rsp, 8
0x6a3e:	mov	rax, rbx
0x6a41:	pop	rbx
0x6a42:	pop	rbp
0x6a43:	pop	r12
0x6a45:	pop	r13
0x6a47:	pop	r14
0x6a49:	pop	r15
0x6a4b:	ret	


0x698f:	test	r15, r15
0x6992:	lea	rdi, [rax + 0x28]
0x6996:	je	0x6a50


0x6a50:	lea	rax, [rip + 0x95a9]
0x6a57:	mov	qword ptr [rbx + 0x28], rax
0x6a5b:	call	0x62e0


0x699c:	mov	qword ptr [rax + 0x28], r15
0x69a0:	call	0x62e0


0x69a5:	test	al, al
0x69a7:	je	0x6a30


0x6a30:	mov	rdi, rbx
0x6a33:	xor	ebx, ebx
0x6a35:	call	0x2070


0x69ad:	cmp	byte ptr [r15 + 0x10], 0
0x69b2:	je	0x6ab0


0x6ab0:	test	rbp, rbp
0x6ab3:	movss	xmm1, dword ptr [r15 + 8]
0x6ab9:	jns	0x6a71


0x69b8:	mov	rdi, rbp
0x69bb:	call	0x60d0


0x6abb:	mov	rax, rbp
0x6abe:	pxor	xmm0, xmm0
0x6ac2:	shr	rax, 1
0x6ac5:	and	ebp, 1
0x6ac8:	or	rax, rbp
0x6acb:	cvtsi2ss	xmm0, rax
0x6ad0:	addss	xmm0, xmm0
0x6ad4:	jmp	0x6a7a


0x6a71:	pxor	xmm0, xmm0
0x6a75:	cvtsi2ss	xmm0, rbp
0x6a7a:	divss	xmm0, xmm1
0x6a7e:	ucomiss	xmm0, dword ptr [rip + 0x95a7]
0x6a85:	jae	0x6a30


0x6a7a:	divss	xmm0, xmm1
0x6a7e:	ucomiss	xmm0, dword ptr [rip + 0x95a7]
0x6a85:	jae	0x6a30


0x6a87:	ucomiss	xmm0, dword ptr [rip + 0x95a2]
0x6a8e:	jb	0x6ae0


0x6ae0:	cvttss2si	rbp, xmm0
0x6ae5:	jmp	0x69b8


0x6a90:	subss	xmm0, dword ptr [rip + 0x9598]
0x6a98:	movabs	rax, 0x8000000000000000
0x6aa2:	cvttss2si	rbp, xmm0
0x6aa7:	xor	rbp, rax
0x6aaa:	jmp	0x69b8


0x69c0:	mov	edx, 8
0x69c5:	mov	rbp, rax
0x69c8:	xor	ecx, ecx
0x69ca:	mov	rax, rdx
0x69cd:	mul	rbp
0x69d0:	jo	0x6aea


0x6aea:	mov	ecx, 1
0x6aef:	jmp	0x69d6


0x69d6:	test	rax, rax
0x69d9:	js	0x6a30


0x69db:	test	rcx, rcx
0x69de:	jne	0x6a30


0x69e0:	test	rbp, rbp
0x69e3:	mov	qword ptr [rbx + 0x10], rbp
0x69e7:	je	0x6a30


0x69e9:	mov	esi, 0x10
0x69ee:	mov	rdi, rbp
0x69f1:	call	0x2320


0x69f6:	test	rax, rax
0x69f9:	mov	qword ptr [rbx], rax
0x69fc:	je	0x6a30


0x69fe:	shl	rbp, 4
0x6a02:	mov	qword ptr [rbx + 0x18], 0
0x6a0a:	mov	qword ptr [rbx + 0x20], 0
0x6a12:	add	rbp, rax
0x6a15:	mov	qword ptr [rbx + 0x30], r12
0x6a19:	mov	qword ptr [rbx + 0x38], r13
0x6a1d:	mov	qword ptr [rbx + 8], rbp
0x6a21:	mov	qword ptr [rbx + 0x40], r14
0x6a25:	mov	qword ptr [rbx + 0x48], 0
0x6a2d:	jmp	0x6a3a


0x6a60:	test	al, al
0x6a62:	movss	xmm1, dword ptr [rip + 0x95be]
0x6a6a:	je	0x6a30


0x6a6c:	test	rbp, rbp
0x6a6f:	js	0x6abb


0xadd9:	test	rax, rax
0xaddc:	jne	0xade3


0xadde:	test	rbx, rbx
0xade1:	jne	0xade5


0xade3:	pop	rbx
0xade4:	ret	


0xade5:	call	0xb020


0x3e38:	mov	qword ptr [rbx], rax
0x3e3b:	pop	rbx
0x3e3c:	ret	


0x44fe:	lea	rax, [rip + 0xc454]
0x4505:	test	r14, r14
0x4508:	cmove	r14, rax
0x450c:	test	r13, r13
0x450f:	mov	rdi, r14
0x4512:	cmove	r13, rax
0x4516:	call	0xb000


0x3f39:	cmp	qword ptr [rip + 0x21042f], 0
0x3f41:	je	0x4148


0x4148:	mov	rax, qword ptr [rsp + 0x2b8]
0x4150:	xor	rax, qword ptr fs:[0x28]
0x4159:	jne	0x419a


0x3f47:	mov	rdx, qword ptr [rip + 0x21042a]
0x3f4e:	xor	ebx, ebx
0x3f50:	movabs	r12, 0x20c49ba5e353f7cf
0x3f5a:	lea	r14, [rsp + 0x20]
0x3f5f:	lea	r13, [rsp + 0x18]
0x3f64:	jmp	0x3fe1


0x415b:	add	rsp, 0x2c8
0x4162:	pop	rbx
0x4163:	pop	rbp
0x4164:	pop	r12
0x4166:	pop	r13
0x4168:	pop	r14
0x416a:	pop	r15
0x416c:	ret	


0x419a:	call	0x21f0


0x3fe1:	lea	rbp, [rbx*8]
0x3fe9:	xor	edi, edi
0x3feb:	mov	qword ptr [rsp + 0x18], 0
0x3ff4:	lea	r15, [rdx + rbp]
0x3ff8:	mov	edx, 5
0x3ffd:	mov	rax, qword ptr [r15]
0x4000:	mov	rsi, qword ptr [rax + 0x18]
0x4004:	call	0x2190


0x5c6a:	mov	rbp, rax
0x5c6d:	lea	rbx, [rax + 0x1000]
0x5c74:	lea	r15, [rax + 1]
0x5c78:	mov	byte ptr [rax], 0x2f
0x5c7b:	jmp	0x57d1


0x57d1:	lea	rax, [rsp + 0x40]
0x57d6:	mov	qword ptr [rsp + 0x20], r14
0x57db:	mov	qword ptr [rsp + 0x10], 0
0x57e4:	mov	qword ptr [rsp + 0x30], 0
0x57ed:	mov	qword ptr [rsp + 0x28], 0
0x57f6:	mov	qword ptr [rsp + 8], rax
0x57fb:	movzx	eax, byte ptr [r14]
0x57ff:	test	al, al
0x5801:	je	0x590f


0x590f:	lea	rax, [rbp + 1]
0x5913:	cmp	r15, rax
0x5916:	jbe	0x5923


0x5923:	lea	rax, [r15 + 1]
0x5927:	mov	byte ptr [r15], 0
0x592b:	cmp	rbx, rax
0x592e:	je	0x5942


0x5918:	cmp	byte ptr [r15 - 1], 0x2f
0x591d:	jne	0x5923


0x582c:	mov	r13, r14
0x582f:	jmp	0x583d


0x5942:	mov	rdi, qword ptr [rsp + 0x28]
0x5947:	call	0x2070


0x5930:	sub	r15, rbp
0x5933:	mov	rdi, rbp
0x5936:	lea	rsi, [r15 + 1]
0x593a:	call	0xae30


0x591f:	sub	r15, 1
0x5923:	lea	rax, [r15 + 1]
0x5927:	mov	byte ptr [r15], 0
0x592b:	cmp	rbx, rax
0x592e:	je	0x5942


0x5818:	add	r14, 1
0x581c:	movzx	eax, byte ptr [r14]
0x5820:	cmp	al, 0x2f
0x5822:	je	0x5818


0x5824:	test	al, al
0x5826:	je	0x5af0


0x583d:	add	r13, 1
0x5841:	movzx	edx, byte ptr [r13]
0x5846:	test	dl, dl
0x5848:	jne	0x5838


0x5af0:	mov	r13, r14
0x5af3:	jmp	0x584a


0x584a:	cmp	r13, r14
0x584d:	je	0x590f


0x5838:	cmp	dl, 0x2f
0x583b:	je	0x584a


0x5853:	mov	r12, r13
0x5856:	sub	r12, r14
0x5859:	cmp	r12, 1
0x585d:	je	0x5a30


0x5a30:	cmp	al, 0x2e
0x5a32:	jne	0x5871


0x5863:	cmp	r12, 2
0x5867:	jne	0x5871


0x5a38:	jmp	0x5900


0x5871:	cmp	byte ptr [r15 - 1], 0x2f
0x5876:	je	0x5880


0x5869:	cmp	al, 0x2e
0x586b:	je	0x5b00


0x5900:	mov	r14, r13
0x5903:	movzx	eax, byte ptr [r14]
0x5907:	test	al, al
0x5909:	jne	0x5810


0x5880:	lea	rax, [r15 + r12]
0x5884:	cmp	rbx, rax
0x5887:	ja	0x58ba


0x5878:	mov	byte ptr [r15], 0x2f
0x587c:	add	r15, 1
0x5880:	lea	rax, [r15 + r12]
0x5884:	cmp	rbx, rax
0x5887:	ja	0x58ba


0x5b00:	cmp	byte ptr [r14 + 1], 0x2e
0x5b05:	jne	0x5871


0x5810:	cmp	al, 0x2f
0x5812:	jne	0x582c


0x5889:	sub	rbx, rbp
0x588c:	sub	r15, rbp
0x588f:	mov	rdi, rbp
0x5892:	lea	rax, [r12 + rbx + 1]
0x5897:	add	rbx, 0x1000
0x589e:	cmp	r12, 0x1000
0x58a5:	cmovge	rbx, rax
0x58a9:	mov	rsi, rbx
0x58ac:	call	0xae30


0x58ba:	mov	rdi, r15
0x58bd:	mov	rdx, r12
0x58c0:	mov	rsi, r14
0x58c3:	call	0x2360


0x5b0b:	lea	rax, [rbp + 1]
0x5b0f:	mov	r14, r13
0x5b12:	cmp	r15, rax
0x5b15:	jbe	0x57fb


0x57fb:	movzx	eax, byte ptr [r14]
0x57ff:	test	al, al
0x5801:	je	0x590f


0x5b1b:	lea	rax, [r15 - 1]
0x5b1f:	cmp	rbp, rax
0x5b22:	jae	0x5d69


0x5b28:	cmp	byte ptr [r15 - 2], 0x2f
0x5b2d:	mov	r15, rax
0x5b30:	je	0x57fb


0x5d69:	mov	r15, rax
0x5d6c:	jmp	0x57fb


0x5b36:	sub	r15, 1
0x5b3a:	cmp	rbp, r15
0x5b3d:	je	0x5900


0x5b43:	cmp	byte ptr [r15 - 1], 0x2f
0x5b48:	je	0x5900


0x5b4e:	jmp	0x5b36


0x58c8:	cmp	dword ptr [rsp + 4], 2
0x58cd:	lea	r15, [r15 + r12]
0x58d1:	mov	byte ptr [r15], 0
0x58d5:	jne	0x5990


0x58db:	cmp	byte ptr [rsp + 0x1b], 0
0x58e0:	je	0x5990


0x5990:	mov	eax, dword ptr [rsp + 0x1c]
0x5994:	mov	rdx, qword ptr [rsp + 8]
0x5999:	mov	rsi, rbp
0x599c:	mov	edi, 1
0x59a1:	test	eax, eax
0x59a3:	je	0x5a60


0x58e6:	mov	dword ptr [rsp + 0x58], 0
0x58ee:	cmp	byte ptr [r13], 0
0x58f3:	je	0x5900


0x5a60:	call	0x21c0


0x59a9:	call	0x2390


0x58f5:	cmp	dword ptr [rsp + 4], 2
0x58fa:	jne	0x5d57


0x21c0:	jmp	qword ptr [rip + 0x211c12]


0x5d57:	call	0x20b0




0x5d5c:	mov	edx, 0x14
0x5d61:	mov	r12, rax
0x5d64:	jmp	0x5a01


0x5a01:	mov	rdi, qword ptr [rsp + 0x28]
0x5a06:	mov	dword ptr [rsp + 4], edx
0x5a0a:	call	0x2070


0x58b1:	mov	rbp, rax
0x58b4:	add	rbx, rax
0x58b7:	add	r15, rax
0x58ba:	mov	rdi, r15
0x58bd:	mov	rdx, r12
0x58c0:	mov	rsi, r14
0x58c3:	call	0x2360


0x593f:	mov	rbp, rax
0x5942:	mov	rdi, qword ptr [rsp + 0x28]
0x5947:	call	0x2070


0x594c:	mov	rax, qword ptr [rsp + 0x10]
0x5951:	test	rax, rax
0x5954:	je	0x5960


0x5956:	mov	rdi, rax
0x5959:	call	0x6b90


0x5a0f:	mov	rdi, rbp
0x5a12:	call	0x2070


0x5a17:	cmp	qword ptr [rsp + 0x10], 0
0x5a1d:	mov	edx, dword ptr [rsp + 4]
0x5a21:	je	0x5adc


0x5adc:	mov	dword ptr [r12], edx
0x5ae0:	xor	ebp, ebp
0x5ae2:	jmp	0x5960


0x5a27:	jmp	0x5aca


0x5aca:	mov	rdi, qword ptr [rsp + 0x10]
0x5acf:	mov	dword ptr [rsp + 4], edx
0x5ad3:	call	0x6b90


0x6002:	mov	rdi, r12
0x6005:	mov	rbx, rax
0x6008:	call	0xb000


0xaf89:	mov	rdx, rbx
0xaf8c:	xor	esi, esi
0xaf8e:	mov	rdi, rax
0xaf91:	pop	rbx
0xaf92:	jmp	0x22a0


0xafe4:	add	rsp, 8
0xafe8:	mov	rdx, rbx
0xafeb:	mov	rsi, rbp
0xafee:	pop	rbx
0xafef:	pop	rbp
0xaff0:	mov	rdi, rax
0xaff3:	jmp	0x2360


0xc538:	test	rax, rax
0xc53b:	mov	rbp, rax
0xc53e:	je	0xc57b


0xc57b:	add	rsp, 8
0xc57f:	mov	rax, rbp
0xc582:	pop	rbx
0xc583:	pop	rbp
0xc584:	pop	r12
0xc586:	pop	r13
0xc588:	pop	r14
0xc58a:	pop	r15
0xc58c:	ret	


0xc540:	mov	rdx, rbx
0xc543:	mov	rsi, rax
0xc546:	mov	rdi, r13
0xc549:	call	0x2140


0x2140:	jmp	qword ptr [rip + 0x211c52]




0x53f2:	lea	rdx, [rax + 1]
0x53f6:	add	rax, 0x1f
0x53fa:	mov	rsi, rbx
0x53fd:	and	rax, 0xfffffffffffffff0
0x5401:	sub	rsp, rax
0x5404:	lea	rdi, [rsp + 0xf]
0x5409:	and	rdi, 0xfffffffffffffff0
0x540d:	call	0x2360


0x5412:	mov	rdi, rbx
0x5415:	mov	r12, rax
0x5418:	call	0x2070


0x541d:	mov	rdi, r12
0x5420:	call	0x21e0


0x5425:	test	eax, eax
0x5427:	js	0x563e


0x542d:	lea	rdx, [rbp - 0x160]
0x5434:	lea	rsi, [rip + 0xaad1]
0x543b:	mov	edi, 1
0x5440:	call	0x2390


0xb718:	test	rax, rax
0xb71b:	mov	r12, rax
0xb71e:	mov	dword ptr [rsp + 4], 0xffffff9c
0xb726:	je	0xb906


0xb906:	lea	rcx, [rip + 0x5233]
0xb90d:	lea	rsi, [rip + 0x51a4]
0xb914:	lea	rdi, [rip + 0x51cd]
0xb91b:	mov	edx, 0x7e
0xb920:	call	0x2280


0xb72c:	cmp	rax, 0xfff
0xb732:	jbe	0xb925


0xb925:	lea	rcx, [rip + 0x5214]
0xb92c:	lea	rsi, [rip + 0x5185]
0xb933:	lea	rdi, [rip + 0x51b6]
0xb93a:	mov	edx, 0x7f
0xb93f:	call	0x2280


0xb738:	lea	rsi, [rip + 0x498f]
0xb73f:	mov	rdi, rbp
0xb742:	call	0x22e0


0x22e0:	jmp	qword ptr [rip + 0x211b82]




0x57bc:	cmp	rax, 0xfff
0x57c2:	mov	r15, rax
0x57c5:	jbe	0x5c80


0x5c80:	mov	rdi, rbp
0x5c83:	mov	esi, 0x1000
0x5c88:	call	0xae30


0x57cb:	add	r15, rbp
0x57ce:	mov	rbx, r15
0x57d1:	lea	rax, [rsp + 0x40]
0x57d6:	mov	qword ptr [rsp + 0x20], r14
0x57db:	mov	qword ptr [rsp + 0x10], 0
0x57e4:	mov	qword ptr [rsp + 0x30], 0
0x57ed:	mov	qword ptr [rsp + 0x28], 0
0x57f6:	mov	qword ptr [rsp + 8], rax
0x57fb:	movzx	eax, byte ptr [r14]
0x57ff:	test	al, al
0x5801:	je	0x590f


0x5c8d:	mov	rbp, rax
0x5c90:	add	r15, rax
0x5c93:	lea	rbx, [rax + 0x1000]
0x5c9a:	jmp	0x57d1


0x75bc:	mov	rcx, qword ptr [r13 + 0x10]
0x75c0:	mov	r13, qword ptr [r13 + 8]
0x75c4:	mov	rbp, rax
0x75c7:	sub	rax, 1
0x75cb:	mov	edx, 1
0x75d0:	cmp	rax, 0x10
0x75d4:	lea	rax, [rip + 0x8931]
0x75db:	mov	rdi, r13
0x75de:	cmovae	rbp, rdx
0x75e2:	mov	qword ptr [rsp + 0x38], rcx
0x75e7:	cmovae	r14, rax
0x75eb:	call	0x21b0


0x75f0:	cmp	rax, 0x11
0x75f4:	lea	rax, [rip + 0x9006]
0x75fb:	mov	rdi, qword ptr [rsp + 0x10]
0x7600:	mov	rcx, qword ptr [rsp + 0x18]
0x7605:	cmovae	r13, rax
0x7609:	mov	rax, qword ptr [rsp]
0x760d:	add	rax, 0x287
0x7613:	cmp	rdi, rcx
0x7616:	mov	qword ptr [rsp + 8], rax
0x761b:	ja	0x7768


0x7621:	xor	edx, edx
0x7623:	mov	rax, rcx
0x7626:	div	rdi
0x7629:	test	rdx, rdx
0x762c:	mov	rdi, rax
0x762f:	je	0x7990


0x7768:	test	rcx, rcx
0x776b:	je	0x7635


0x7990:	mov	rsi, rbx
0x7993:	xor	edx, edx
0x7995:	imul	rsi, rax
0x7999:	mov	rax, rsi
0x799c:	div	rdi
0x799f:	cmp	rax, rbx
0x79a2:	jne	0x7635


0x7635:	mov	qword ptr [rsp + 0x18], rcx
0x763a:	test	rcx, rcx
0x763d:	fild	qword ptr [rsp + 0x18]
0x7641:	jns	0x7649


0x7771:	mov	rax, qword ptr [rsp + 0x10]
0x7776:	xor	edx, edx
0x7778:	div	rcx
0x777b:	test	rdx, rdx
0x777e:	mov	r8, rax
0x7781:	jne	0x7635


0x79a8:	xor	edi, edi
0x79aa:	xor	r9d, r9d
0x79ad:	jmp	0x77b9


0x7643:	fadd	dword ptr [rip + 0x89e3]
0x7649:	mov	rax, qword ptr [rsp + 0x10]
0x764e:	mov	qword ptr [rsp + 0x18], rax
0x7653:	test	rax, rax
0x7656:	fild	qword ptr [rsp + 0x18]
0x765a:	jns	0x7662


0x7649:	mov	rax, qword ptr [rsp + 0x10]
0x764e:	mov	qword ptr [rsp + 0x18], rax
0x7653:	test	rax, rax
0x7656:	fild	qword ptr [rsp + 0x18]
0x765a:	jns	0x7662


0x7787:	mov	rax, rbx
0x778a:	xor	edx, edx
0x778c:	div	r8
0x778f:	mov	rbx, rax
0x7792:	lea	rax, [rdx + rdx*4]
0x7796:	xor	edx, edx
0x7798:	mov	rsi, rbx
0x779b:	add	rax, rax
0x779e:	div	r8
0x77a1:	add	rdx, rdx
0x77a4:	mov	r9d, eax
0x77a7:	cmp	r8, rdx
0x77aa:	jbe	0x7d38


0x77b9:	mov	ecx, r12d
0x77bc:	mov	r8, qword ptr [rsp + 8]
0x77c1:	mov	ebx, 0xffffffff
0x77c6:	and	ecx, 0x10
0x77c9:	je	0x7b90


0x765c:	fadd	dword ptr [rip + 0x89ca]
0x7662:	fdivp	st(1)
0x7664:	mov	qword ptr [rsp + 0x18], rbx
0x7669:	test	rbx, rbx
0x766c:	fild	qword ptr [rsp + 0x18]
0x7670:	jns	0x7678


0x7662:	fdivp	st(1)
0x7664:	mov	qword ptr [rsp + 0x18], rbx
0x7669:	test	rbx, rbx
0x766c:	fild	qword ptr [rsp + 0x18]
0x7670:	jns	0x7678


0x7d38:	setb	dil
0x7d3c:	movzx	edi, dil
0x7d40:	add	edi, 2
0x7d43:	jmp	0x77b9


0x77b0:	xor	edi, edi
0x77b2:	test	rdx, rdx
0x77b5:	setne	dil
0x77b9:	mov	ecx, r12d
0x77bc:	mov	r8, qword ptr [rsp + 8]
0x77c1:	mov	ebx, 0xffffffff
0x77c6:	and	ecx, 0x10
0x77c9:	je	0x7b90


0x7b90:	cmp	r15d, 1
0x7b94:	je	0x7d10


0x77cf:	mov	r8d, dword ptr [rsp + 0x34]
0x77d4:	cmp	r8, rsi
0x77d7:	mov	r11, r8
0x77da:	ja	0x7d50


0x7672:	fadd	dword ptr [rip + 0x89b4]
0x7678:	test	r12b, 0x10
0x767c:	fmulp	st(1)
0x767e:	je	0x7848


0x7678:	test	r12b, 0x10
0x767c:	fmulp	st(1)
0x767e:	je	0x7848


0x7d10:	mov	rax, rsi
0x7d13:	movsxd	rdi, edi
0x7d16:	and	eax, 1
0x7d19:	add	rax, rdi
0x7d1c:	setne	al
0x7d1f:	movzx	eax, al
0x7d22:	add	r9d, eax
0x7d25:	cmp	r9d, 5
0x7d29:	jg	0x7ba6


0x7b9a:	test	r15d, r15d
0x7b9d:	jne	0x7bc0


0x77e0:	xor	ebx, ebx
0x77e2:	jmp	0x7807


0x7d50:	mov	r8, qword ptr [rsp + 8]
0x7d55:	xor	ebx, ebx
0x7d57:	jmp	0x7b90


0x7848:	cmp	r15d, 1
0x784c:	je	0x785c


0x7684:	fild	dword ptr [rsp + 0x34]
0x7688:	xor	ebx, ebx
0x768a:	fld	st(0)
0x768c:	jmp	0x7694


0x7d2f:	jmp	0x7bc0


0x7ba6:	add	rsi, 1
0x7baa:	test	ecx, ecx
0x7bac:	je	0x7bc0


0x7b9f:	add	edi, r9d
0x7ba2:	test	edi, edi
0x7ba4:	jle	0x7bc0


0x7bc0:	mov	r15, r8
0x7bc3:	movabs	rcx, 0xcccccccccccccccd
0x7bcd:	nop	dword ptr [rax]
0x7bd0:	mov	rax, rsi
0x7bd3:	sub	r15, 1
0x7bd7:	mul	rcx
0x7bda:	shr	rdx, 3
0x7bde:	lea	rax, [rdx + rdx*4]
0x7be2:	add	rax, rax
0x7be5:	sub	rsi, rax
0x7be8:	add	esi, 0x30
0x7beb:	test	rdx, rdx
0x7bee:	mov	byte ptr [r15], sil
0x7bf1:	mov	rsi, rdx
0x7bf4:	jne	0x7bd0


0x7807:	mov	rax, rsi
0x780a:	xor	edx, edx
0x780c:	mov	esi, edi
0x780e:	div	r8
0x7811:	sar	esi, 1
0x7813:	mov	r10, rax
0x7816:	lea	eax, [rdx + rdx*4]
0x7819:	xor	edx, edx
0x781b:	lea	eax, [r9 + rax*2]
0x781f:	div	r11d
0x7822:	lea	edx, [rsi + rdx*2]
0x7825:	mov	r9d, eax
0x7828:	mov	rsi, r10
0x782b:	add	edi, edx
0x782d:	cmp	r11d, edx
0x7830:	ja	0x77e8


0x785c:	sub	rsp, 0x10
0x7860:	lea	rcx, [rip + 0x87cd]
0x7867:	mov	esi, 1
0x786c:	mov	rbx, qword ptr [rsp + 0x10]
0x7871:	mov	rdx, -1
0x7878:	xor	eax, eax
0x787a:	fstp	xword ptr [rsp]
0x787d:	xor	ebp, ebp
0x787f:	mov	rdi, rbx
0x7882:	call	0x25a0


0x784e:	fld	xword ptr [rip + 0x882c]
0x7854:	fucomip	st(1)
0x7856:	ja	0x7ae0


0x7694:	fld	st(0)
0x7696:	add	ebx, 1
0x7699:	fmul	st(2)
0x769b:	fxch	st(3)
0x769d:	fucomi	st(3)
0x769f:	jb	0x76b0


0x7bae:	mov	eax, dword ptr [rsp + 0x34]
0x7bb2:	cmp	rax, rsi
0x7bb5:	je	0x7d80


0x7bf6:	jmp	0x78d0


0x7bd0:	mov	rax, rsi
0x7bd3:	sub	r15, 1
0x7bd7:	mul	rcx
0x7bda:	shr	rdx, 3
0x7bde:	lea	rax, [rdx + rdx*4]
0x7be2:	add	rax, rax
0x7be5:	sub	rsi, rax
0x7be8:	add	esi, 0x30
0x7beb:	test	rdx, rdx
0x7bee:	mov	byte ptr [r15], sil
0x7bf1:	mov	rsi, rdx
0x7bf4:	jne	0x7bd0


0x7832:	cmp	r11d, edi
0x7835:	setb	dil
0x7839:	movzx	edi, dil
0x783d:	add	edi, 2
0x7840:	jmp	0x77f2


0x77e8:	test	edi, edi
0x77ea:	setne	dil
0x77ee:	movzx	edi, dil
0x77f2:	add	ebx, 1
0x77f5:	cmp	r8, r10
0x77f8:	ja	0x7b0d


0x25a0:	jmp	qword ptr [rip + 0x211a22]


0x7ae0:	sub	rsp, 0x10
0x7ae4:	mov	edi, r15d
0x7ae7:	fstp	xword ptr [rsp]
0x7aea:	call	0x7480


0x76b0:	fstp	st(2)
0x76b2:	fstp	st(2)
0x76b4:	mov	ecx, dword ptr [rsp + 0x30]
0x76b8:	add	rbp, 1
0x76bc:	xor	eax, eax
0x76be:	fdivrp	st(1)
0x76c0:	test	ecx, ecx
0x76c2:	sete	al
0x76c5:	cmp	r15d, 1
0x76c9:	lea	rax, [rbp + rax + 1]
0x76ce:	mov	qword ptr [rsp + 0x18], rax
0x76d3:	je	0x7c40


0x76a1:	cmp	ebx, 8
0x76a4:	jne	0x7690


0x7d80:	cmp	ebx, 8
0x7d83:	je	0x7bc0


0x78d0:	test	r12b, 4
0x78d4:	jne	0x79b8


0x77f2:	add	ebx, 1
0x77f5:	cmp	r8, r10
0x77f8:	ja	0x7b0d


0x77fe:	cmp	ebx, 8
0x7801:	je	0x7da8


0x7b0d:	cmp	r10, 9
0x7b11:	ja	0x7da8




0x7c40:	sub	rsp, 0x10
0x7c44:	lea	rcx, [rip + 0x83ef]
0x7c4b:	mov	rdx, -1
0x7c52:	fld	st(0)
0x7c54:	fstp	xword ptr [rsp]
0x7c57:	mov	r14, qword ptr [rsp + 0x10]
0x7c5c:	mov	esi, 1
0x7c61:	xor	eax, eax
0x7c63:	mov	rdi, r14
0x7c66:	fstp	xword ptr [rsp + 0x30]
0x7c6a:	call	0x25a0


0x76d9:	fld	xword ptr [rip + 0x89a1]
0x76df:	fucomip	st(1)
0x76e1:	ja	0x7ab8


0x76a6:	fstp	st(2)
0x76a8:	fstp	st(2)
0x76aa:	jmp	0x76b4


0x7690:	fstp	st(1)
0x7692:	fxch	st(2)
0x7694:	fld	st(0)
0x7696:	add	ebx, 1
0x7699:	fmul	st(2)
0x769b:	fxch	st(3)
0x769d:	fucomi	st(3)
0x769f:	jb	0x76b0


0x7d89:	add	ebx, 1
0x7d8c:	test	r12b, 8
0x7d90:	je	0x7e52


0x78da:	test	r12b, 0x80
0x78de:	je	0x7957


0x79b8:	mov	r14, r8
0x79bb:	mov	rdi, r13
0x79be:	mov	qword ptr [rsp + 0x48], r8
0x79c3:	sub	r14, r15
0x79c6:	mov	rbp, -1
0x79cd:	call	0x21b0


0x7da8:	mov	r8, qword ptr [rsp + 8]
0x7dad:	jmp	0x7b90


0x7b17:	cmp	r15d, 1
0x7b1b:	je	0x7dd2


0x76e7:	fld	st(0)
0x76e9:	fstp	xword ptr [rsp + 0x20]
0x76ed:	sub	rsp, 0x10
0x76f1:	lea	rcx, [rip + 0x8942]
0x76f8:	mov	esi, 1
0x76fd:	mov	rdx, -1
0x7704:	xor	eax, eax
0x7706:	mov	r14, qword ptr [rsp + 0x10]
0x770b:	mov	rdi, r14
0x770e:	fstp	xword ptr [rsp]
0x7711:	call	0x25a0


0x7ab8:	sub	rsp, 0x10
0x7abc:	mov	edi, r15d
0x7abf:	fld	st(0)
0x7ac1:	fstp	xword ptr [rsp]
0x7ac4:	fstp	xword ptr [rsp + 0x30]
0x7ac8:	call	0x7480


0x76b4:	mov	ecx, dword ptr [rsp + 0x30]
0x76b8:	add	rbp, 1
0x76bc:	xor	eax, eax
0x76be:	fdivrp	st(1)
0x76c0:	test	ecx, ecx
0x76c2:	sete	al
0x76c5:	cmp	r15d, 1
0x76c9:	lea	rax, [rbp + rax + 1]
0x76ce:	mov	qword ptr [rsp + 0x18], rax
0x76d3:	je	0x7c40


0x7e52:	mov	rax, rbp
0x7e55:	mov	byte ptr [r8 - 1], 0x30
0x7e5a:	not	rax
0x7e5d:	add	r8, rax
0x7e60:	cmp	ebp, 8
0x7e63:	mov	eax, ebp
0x7e65:	jae	0x7eaa


0x7d96:	lea	r15, [r8 - 1]
0x7d9a:	mov	byte ptr [r8 - 1], 0x31
0x7d9f:	jmp	0x78d0


0x7957:	mov	rax, qword ptr [rsp + 8]
0x795c:	mov	rcx, qword ptr [rsp + 0x88]
0x7964:	xor	rcx, qword ptr fs:[0x28]
0x796d:	mov	byte ptr [rax], 0
0x7970:	mov	rax, r15
0x7973:	jne	0x7f0b


0x78e0:	cmp	ebx, -1
0x78e3:	je	0x7c00


0x7dd2:	mov	edx, eax
0x7dd4:	and	edx, 1
0x7dd7:	add	edx, edi
0x7dd9:	cmp	edx, 2
0x7ddc:	setg	dl
0x7ddf:	jmp	0x7b30


0x7b21:	test	r15d, r15d
0x7b24:	sete	dl
0x7b27:	test	edi, edi
0x7b29:	setg	r8b
0x7b2d:	and	edx, r8d
0x7b30:	test	dl, dl
0x7b32:	je	0x7db9


0x7e67:	and	ebp, 4
0x7e6a:	jne	0x7f21


0x7eaa:	mov	rax, qword ptr [r14]
0x7ead:	lea	rcx, [r8 + 8]
0x7eb1:	and	rcx, 0xfffffffffffffff8
0x7eb5:	mov	qword ptr [r8], rax
0x7eb8:	mov	eax, ebp
0x7eba:	mov	rdx, qword ptr [r14 + rax - 8]
0x7ebf:	mov	qword ptr [r8 + rax - 8], rdx
0x7ec4:	mov	rax, r8
0x7ec7:	sub	rax, rcx
0x7eca:	sub	r14, rax
0x7ecd:	add	eax, ebp
0x7ecf:	and	eax, 0xfffffff8
0x7ed2:	cmp	eax, 8
0x7ed5:	jb	0x7d96


0x7979:	add	rsp, 0x98
0x7980:	pop	rbx
0x7981:	pop	rbp
0x7982:	pop	r12
0x7984:	pop	r13
0x7986:	pop	r14
0x7988:	pop	r15
0x798a:	ret	


0x7f0b:	call	0x21f0


0x7c00:	mov	rcx, qword ptr [rsp + 0x10]
0x7c05:	cmp	rcx, 1
0x7c09:	jbe	0x7db2


0x78e9:	mov	eax, r12d
0x78ec:	and	eax, 0x100
0x78f1:	mov	ecx, eax
0x78f3:	or	ecx, ebx
0x78f5:	je	0x7957


0x7b30:	test	dl, dl
0x7b32:	je	0x7db9


0x7db9:	test	eax, eax
0x7dbb:	jne	0x7b46


0x7b38:	lea	r9d, [rax + 1]
0x7b3c:	cmp	r9d, 0xa
0x7b40:	je	0x7e41


0x7e70:	test	eax, eax
0x7e72:	je	0x7d96


0x7f21:	mov	edx, dword ptr [r14]
0x7f24:	mov	dword ptr [r8], edx
0x7f27:	mov	edx, dword ptr [r14 + rax - 4]
0x7f2c:	mov	dword ptr [r8 + rax - 4], edx
0x7f31:	jmp	0x7d96


0x7edb:	and	eax, 0xfffffff8
0x7ede:	xor	edx, edx
0x7ee0:	mov	esi, edx
0x7ee2:	add	edx, 8
0x7ee5:	mov	rdi, qword ptr [r14 + rsi]
0x7ee9:	cmp	edx, eax
0x7eeb:	mov	qword ptr [rcx + rsi], rdi
0x7eef:	jb	0x7ee0


0x7db2:	xor	ebx, ebx
0x7db4:	jmp	0x78e9


0x7c0f:	mov	edx, dword ptr [rsp + 0x34]
0x7c13:	mov	ebx, 1
0x7c18:	mov	eax, 1
0x7c1d:	imul	rax, rdx
0x7c21:	cmp	rcx, rax
0x7c24:	jbe	0x78e9


0x78f7:	and	r12d, 0x40
0x78fb:	jne	0x7a98


0x7dc1:	test	r12b, 8
0x7dc5:	jne	0x7de4


0x7b46:	add	r9d, 0x30
0x7b4a:	mov	rax, qword ptr [rsp]
0x7b4e:	lea	r8, [rax + 0x286]
0x7b55:	mov	byte ptr [rax + 0x286], r9b
0x7b5c:	mov	eax, ebp
0x7b5e:	sub	r8, rbp
0x7b61:	cmp	ebp, 8
0x7b64:	jae	0x7df1


0x7e41:	lea	rsi, [r10 + 1]
0x7e45:	cmp	rsi, 0xa
0x7e49:	je	0x7ea0


0x7e78:	movzx	edx, byte ptr [r14]
0x7e7c:	test	al, 2
0x7e7e:	mov	byte ptr [r8], dl
0x7e81:	je	0x7d96


0x7ee0:	mov	esi, edx
0x7ee2:	add	edx, 8
0x7ee5:	mov	rdi, qword ptr [r14 + rsi]
0x7ee9:	cmp	edx, eax
0x7eeb:	mov	qword ptr [rcx + rsi], rdi
0x7eef:	jb	0x7ee0


0x7ef1:	jmp	0x7d96


0x7c2a:	add	ebx, 1
0x7c2d:	cmp	ebx, 8
0x7c30:	jne	0x7c1d


0x7901:	test	ebx, ebx
0x7903:	je	0x7f36


0x7a98:	mov	rcx, qword ptr [rsp]
0x7a9c:	lea	rdi, [rcx + 0x288]
0x7aa3:	mov	byte ptr [rcx + 0x287], 0x20
0x7aaa:	mov	qword ptr [rsp + 8], rdi
0x7aaf:	jmp	0x7901


0x7dc7:	mov	r9d, 0x30
0x7dcd:	jmp	0x7b4a


0x7de4:	mov	r8, qword ptr [rsp + 8]
0x7de9:	xor	r9d, r9d
0x7dec:	jmp	0x7b90


0x7b6a:	test	bpl, 4
0x7b6e:	jne	0x7ef6


0x7df1:	mov	rax, qword ptr [r14]
0x7df4:	mov	r9, r14
0x7df7:	mov	qword ptr [r8], rax
0x7dfa:	mov	eax, ebp
0x7dfc:	mov	rdx, qword ptr [r14 + rax - 8]
0x7e01:	mov	qword ptr [r8 + rax - 8], rdx
0x7e06:	lea	rdx, [r8 + 8]
0x7e0a:	mov	rax, r8
0x7e0d:	and	rdx, 0xfffffffffffffff8
0x7e11:	sub	rax, rdx
0x7e14:	sub	r9, rax
0x7e17:	add	eax, ebp
0x7e19:	and	eax, 0xfffffff8
0x7e1c:	cmp	eax, 8
0x7e1f:	jb	0x7b87


0x7ea0:	mov	r8, qword ptr [rsp + 8]
0x7ea5:	jmp	0x7b87


0x7e4b:	xor	edi, edi
0x7e4d:	jmp	0x7dc1


0x7e87:	movzx	edx, word ptr [r14 + rax - 2]
0x7e8d:	mov	word ptr [r8 + rax - 2], dx
0x7e93:	jmp	0x7d96


0x7c32:	jmp	0x78e9


0x7c1d:	imul	rax, rdx
0x7c21:	cmp	rcx, rax
0x7c24:	jbe	0x78e9


0x7f36:	test	eax, eax
0x7f38:	mov	rdx, qword ptr [rsp + 8]
0x7f3d:	jne	0x794b


0x7909:	cmp	ebx, 1
0x790c:	jne	0x791c


0x7b4a:	mov	rax, qword ptr [rsp]
0x7b4e:	lea	r8, [rax + 0x286]
0x7b55:	mov	byte ptr [rax + 0x286], r9b
0x7b5c:	mov	eax, ebp
0x7b5e:	sub	r8, rbp
0x7b61:	cmp	ebp, 8
0x7b64:	jae	0x7df1


0x7b74:	test	eax, eax
0x7b76:	je	0x7b87


0x7ef6:	mov	edx, dword ptr [r14]
0x7ef9:	mov	dword ptr [r8], edx
0x7efc:	mov	edx, dword ptr [r14 + rax - 4]
0x7f01:	mov	dword ptr [r8 + rax - 4], edx
0x7f06:	jmp	0x7b87


0x7b87:	xor	edi, edi
0x7b89:	xor	r9d, r9d
0x7b8c:	nop	dword ptr [rax]
0x7b90:	cmp	r15d, 1
0x7b94:	je	0x7d10


0x7e25:	and	eax, 0xfffffff8
0x7e28:	xor	edi, edi
0x7e2a:	mov	r10d, edi
0x7e2d:	add	edi, 8
0x7e30:	mov	r11, qword ptr [r9 + r10]
0x7e34:	cmp	edi, eax
0x7e36:	mov	qword ptr [rdx + r10], r11
0x7e3a:	jb	0x7e2a


0x7f43:	jmp	0x7957


0x794b:	lea	rax, [rdx + 1]
0x794f:	mov	byte ptr [rdx], 0x42
0x7952:	mov	qword ptr [rsp + 8], rax
0x7957:	mov	rax, qword ptr [rsp + 8]
0x795c:	mov	rcx, qword ptr [rsp + 0x88]
0x7964:	xor	rcx, qword ptr fs:[0x28]
0x796d:	mov	byte ptr [rax], 0
0x7970:	mov	rax, r15
0x7973:	jne	0x7f0b


0x790e:	mov	r9d, dword ptr [rsp + 0x30]
0x7913:	test	r9d, r9d
0x7916:	je	0x7d60


0x791c:	lea	rcx, [rip + 0x8745]
0x7923:	movsxd	rbx, ebx
0x7926:	mov	rdi, qword ptr [rsp + 8]
0x792b:	test	eax, eax
0x792d:	movzx	ecx, byte ptr [rcx + rbx]
0x7931:	lea	rdx, [rdi + 1]
0x7935:	mov	byte ptr [rdi], cl
0x7937:	je	0x7d74


0x7b78:	movzx	edx, byte ptr [r14]
0x7b7c:	test	al, 2
0x7b7e:	mov	byte ptr [r8], dl
0x7b81:	jne	0x7f10


0x7e2a:	mov	r10d, edi
0x7e2d:	add	edi, 8
0x7e30:	mov	r11, qword ptr [r9 + r10]
0x7e34:	cmp	edi, eax
0x7e36:	mov	qword ptr [rdx + r10], r11
0x7e3a:	jb	0x7e2a


0x7e3c:	jmp	0x7b87


0x7d60:	mov	rbx, qword ptr [rsp + 8]
0x7d65:	test	eax, eax
0x7d67:	lea	rdx, [rbx + 1]
0x7d6b:	mov	byte ptr [rbx], 0x6b
0x7d6e:	jne	0x794b


0x7d74:	mov	qword ptr [rsp + 8], rdx
0x7d79:	jmp	0x7957


0x793d:	mov	r8d, dword ptr [rsp + 0x30]
0x7942:	test	r8d, r8d
0x7945:	jne	0x7b00


0x7f10:	movzx	edx, word ptr [r14 + rax - 2]
0x7f16:	mov	word ptr [r8 + rax - 2], dx
0x7f1c:	jmp	0x7b87


0x7b00:	lea	rdx, [rdi + 2]
0x7b04:	mov	byte ptr [rdi + 1], 0x69
0x7b08:	jmp	0x794b


0x7acd:	pop	rax
0x7ace:	pop	rdx
0x7acf:	fld	xword ptr [rsp + 0x20]
0x7ad3:	jmp	0x76e9


0x76e9:	fstp	xword ptr [rsp + 0x20]
0x76ed:	sub	rsp, 0x10
0x76f1:	lea	rcx, [rip + 0x8942]
0x76f8:	mov	esi, 1
0x76fd:	mov	rdx, -1
0x7704:	xor	eax, eax
0x7706:	mov	r14, qword ptr [rsp + 0x10]
0x770b:	mov	rdi, r14
0x770e:	fstp	xword ptr [rsp]
0x7711:	call	0x25a0


0x7aef:	pop	r8
0x7af1:	pop	r9
0x7af3:	jmp	0x785c


0x3e7a:	lea	rdx, [rax - 1]
0x3e7e:	mov	byte ptr [rax - 1], 0x2d
0x3e82:	add	rsp, 8
0x3e86:	mov	rax, rdx
0x3e89:	ret	


0x79d2:	lea	rdi, [rsp + 0x50]
0x79d7:	mov	ecx, 0x29
0x79dc:	mov	rdx, r14
0x79df:	mov	rsi, r15
0x79e2:	mov	qword ptr [rsp + 0x40], rax
0x79e7:	mov	qword ptr [rsp + 0x18], rdi
0x79ec:	call	0x2350


0x2350:	jmp	qword ptr [rip + 0x211b4a]




0x4296:	lea	r13, [r12 + rax]
0x429a:	mov	qword ptr [rsp + 0x20], 0
0x42a3:	cmp	r12, r13
0x42a6:	je	0x4324


0x4324:	mov	rax, qword ptr [rsp + 0x28]
0x4329:	xor	rax, qword ptr fs:[0x28]
0x4332:	mov	byte ptr [r12], 0
0x4337:	jne	0x4348


0x42a8:	lea	rax, [rsp + 0x1c]
0x42ad:	mov	rbx, r12
0x42b0:	lea	r14, [rsp + 0x20]
0x42b5:	mov	qword ptr [rsp + 8], rax
0x42ba:	jmp	0x42e6


0x4339:	add	rsp, 0x38
0x433d:	pop	rbx
0x433e:	pop	rbp
0x433f:	pop	r12
0x4341:	pop	r13
0x4343:	pop	r14
0x4345:	pop	r15
0x4347:	ret	


0x4348:	call	0x21f0


0x42e6:	mov	r15, r13
0x42e9:	mov	rdi, qword ptr [rsp + 8]
0x42ee:	mov	rcx, r14
0x42f1:	sub	r15, rbx
0x42f4:	mov	rsi, rbx
0x42f7:	mov	rdx, r15
0x42fa:	call	0xbac0


0x42ff:	cmp	r15, rax
0x4302:	mov	rbp, rax
0x4305:	jae	0x42c0


0x4307:	mov	ebp, 1
0x430c:	add	rbx, rbp
0x430f:	mov	byte ptr [r12], 0x3f
0x4314:	add	r12, 1
0x4318:	cmp	r13, rbx
0x431b:	mov	qword ptr [r14], 0
0x4322:	jne	0x42e6


0x42c0:	mov	edi, dword ptr [rsp + 0x1c]
0x42c4:	call	0x2100


0x2100:	jmp	qword ptr [rip + 0x211c72]




0x5f99:	cmp	rax, 1
0x5f9d:	jbe	0x5faa


0x5faa:	pop	rbx
0x5fab:	ret	


0x5f9f:	cmp	byte ptr [rbx + rax - 1], 0x2f
0x5fa4:	lea	rdx, [rax - 1]
0x5fa8:	je	0x5fb8


0x5fb8:	cmp	rdx, 1
0x5fbc:	je	0x5fd0


0x5fd0:	mov	eax, 1
0x5fd5:	pop	rbx
0x5fd6:	ret	


0x5fbe:	cmp	byte ptr [rbx + rdx - 1], 0x2f
0x5fc3:	lea	rax, [rdx - 1]
0x5fc7:	je	0x5fb0


0x5fb0:	mov	rdx, rax
0x5fb3:	nop	dword ptr [rax + rax]
0x5fb8:	cmp	rdx, 1
0x5fbc:	je	0x5fd0


0x5fc9:	mov	rax, rdx
0x5fcc:	pop	rbx
0x5fcd:	ret	


0xa699:	mov	rdi, r13
0xa69c:	mov	r14, rax
0xa69f:	call	0x5f90


0xa6a4:	cmp	r14, rax
0xa6a7:	je	0xa6c0


0xa6c0:	mov	rdx, r14
0xa6c3:	mov	rsi, r13
0xa6c6:	mov	rdi, r12
0xa6c9:	call	0x2300


0xa6a9:	add	rsp, 0x18
0xa6ad:	xor	eax, eax
0xa6af:	pop	rbx
0xa6b0:	pop	rbp
0xa6b1:	pop	r12
0xa6b3:	pop	r13
0xa6b5:	pop	r14
0xa6b7:	pop	r15
0xa6b9:	ret	


0xa6ce:	test	eax, eax
0xa6d0:	jne	0xa6a9


0xa6d2:	mov	edi, dword ptr [rsp + 0xc]
0xa6d6:	add	rsp, 0x18
0xa6da:	mov	rcx, rbp
0xa6dd:	mov	edx, r15d
0xa6e0:	mov	rsi, rbx
0xa6e3:	pop	rbx
0xa6e4:	pop	rbp
0xa6e5:	pop	r12
0xa6e7:	pop	r13
0xa6e9:	pop	r14
0xa6eb:	pop	r15
0xa6ed:	jmp	0xa530


0x81c9:	test	bl, 2
0x81cc:	mov	r15, rax
0x81cf:	mov	qword ptr [rsp + 8], rax
0x81d4:	je	0x8340


0x8340:	call	0x21a0


0x81da:	mov	rbp, r15
0x81dd:	mov	qword ptr [rsp], 0
0x81e5:	mov	qword ptr [rsp + 8], 0
0x81ee:	mov	rax, qword ptr [r12]
0x81f2:	cmp	rax, rbp
0x81f5:	jae	0x8309


0x81fb:	mov	r15, rax
0x81fe:	xor	edx, edx
0x8200:	mov	qword ptr [r12], rax
0x8204:	mov	eax, dword ptr [rsp + 0x1c]
0x8208:	test	eax, eax
0x820a:	je	0x832b


0x8309:	cmp	rbp, rax
0x830c:	jae	0x855a


0x832b:	mov	rbp, rdx
0x832e:	xor	edx, edx
0x8330:	jmp	0x8223


0x8210:	xor	ebp, ebp
0x8212:	cmp	eax, 1
0x8215:	je	0x8223


0x8312:	sub	rax, rbp
0x8315:	mov	rdx, rax
0x8318:	mov	rax, rbp
0x831b:	mov	qword ptr [r12], rax
0x831f:	mov	eax, dword ptr [rsp + 0x1c]
0x8323:	test	eax, eax
0x8325:	jne	0x8210


0x855a:	mov	rax, rbp
0x855d:	xor	edx, edx
0x855f:	jmp	0x8200


0x8223:	test	bl, 4
0x8226:	lea	r12, [rdx + r15]
0x822a:	je	0x8231


0x8217:	mov	rbp, rdx
0x821a:	and	edx, 1
0x821d:	shr	rbp, 1
0x8220:	add	rdx, rbp
0x8223:	test	bl, 4
0x8226:	lea	r12, [rdx + r15]
0x822a:	je	0x8231


0x8200:	mov	qword ptr [r12], rax
0x8204:	mov	eax, dword ptr [rsp + 0x1c]
0x8208:	test	eax, eax
0x820a:	je	0x832b


0x8231:	and	ebx, 8
0x8234:	jne	0x8338


0x822c:	mov	r12, r15
0x822f:	xor	edx, edx
0x8231:	and	ebx, 8
0x8234:	jne	0x8338


0x823a:	add	r12, rbp
0x823d:	mov	rax, qword ptr [rsp + 0x10]
0x8242:	test	rax, rax
0x8245:	je	0x82d1


0x8338:	xor	ebp, ebp
0x833a:	jmp	0x823d


0x82d1:	mov	rdi, qword ptr [rsp]
0x82d5:	call	0x2070


0x824b:	lea	rbx, [r13 + rax - 1]
0x8250:	lea	rax, [rdx - 1]
0x8254:	cmp	r13, rbx
0x8257:	jae	0x827f


0x823d:	mov	rax, qword ptr [rsp + 0x10]
0x8242:	test	rax, rax
0x8245:	je	0x82d1


0x8259:	test	rdx, rdx
0x825c:	je	0x827f


0x827f:	mov	rdx, rbx
0x8282:	mov	byte ptr [r13], 0
0x8287:	mov	rsi, r14
0x828a:	sub	rdx, r13
0x828d:	mov	rdi, r13
0x8290:	cmp	rdx, r15
0x8293:	cmova	rdx, r15
0x8297:	call	0x2480


0x2480:	jmp	qword ptr [rip + 0x211ab2]


0x8260:	add	r13, 1
0x8264:	mov	byte ptr [r13 - 1], 0x20
0x8269:	cmp	rbx, r13
0x826c:	seta	sil
0x8270:	test	rax, rax
0x8273:	setne	dl
0x8276:	sub	rax, 1
0x827a:	test	sil, dl
0x827d:	jne	0x8260




0x82da:	mov	rdi, qword ptr [rsp + 8]
0x82df:	call	0x2070


0x82e4:	add	rsp, 0x38
0x82e8:	mov	rax, r12
0x82eb:	pop	rbx
0x82ec:	pop	rbp
0x82ed:	pop	r12
0x82ef:	pop	r13
0x82f1:	pop	r14
0x82f3:	pop	r15
0x82f5:	ret	


0x8345:	cmp	rax, 1
0x8349:	jbe	0x81da


0x834f:	xor	edx, edx
0x8351:	xor	edi, edi
0x8353:	mov	rsi, r14
0x8356:	call	0x2130


0x2130:	jmp	qword ptr [rip + 0x211c5a]




0x85ce:	cmp	rax, -1
0x85d2:	je	0x8600


0x8600:	mov	rdi, r14
0x8603:	xor	r14d, r14d
0x8606:	call	0x2070


0x85d4:	cmp	rbx, rax
0x85d7:	mov	r12, r14
0x85da:	jbe	0x8598


0x8598:	lea	rbx, [rax + 1]
0x859c:	mov	rdi, r12
0x859f:	mov	rsi, rbx
0x85a2:	call	0x2450


0x860b:	jmp	0x85dc


0x87e0:	add	rsp, 8
0x87e4:	mov	edx, ebp
0x87e6:	mov	rdi, rbx
0x87e9:	pop	rbx
0x87ea:	pop	rbp
0x87eb:	mov	rsi, rax
0x87ee:	jmp	0x8610


0xb009:	mov	rdi, rbx
0xb00c:	lea	rsi, [rax + 1]
0xb010:	pop	rbx
0xb011:	jmp	0xafd0


0xbb59:	mov	rcx, rbx
0xbb5c:	add	rax, 1
0xbb60:	xor	edx, edx
0xbb62:	jmp	0xbb77


0xbb77:	movzx	esi, byte ptr [rbx + rdx]
0xbb7b:	lea	rdi, [rdx + 1]
0xbb7f:	cmp	sil, 0x5c
0xbb83:	jne	0xbb68


0xbb85:	lea	r8, [rdx + 4]
0xbb89:	cmp	r8, rax
0xbb8c:	jae	0xbb68


0xbb68:	mov	byte ptr [rcx], sil
0xbb6b:	mov	rdx, rdi
0xbb6e:	add	rcx, 1
0xbb72:	cmp	rax, rdx
0xbb75:	jbe	0xbbd0


0xbb8e:	movzx	r9d, byte ptr [rbx + rdi]
0xbb93:	lea	r10d, [r9 - 0x30]
0xbb97:	cmp	r10b, 3
0xbb9b:	ja	0xbb68


0xbbd0:	pop	rbx
0xbbd1:	ret	


0xbb9d:	movzx	r10d, byte ptr [rbx + rdx + 2]
0xbba3:	lea	r11d, [r10 - 0x30]
0xbba7:	cmp	r11b, 7
0xbbab:	ja	0xbb68


0xbbad:	movzx	edx, byte ptr [rbx + rdx + 3]
0xbbb2:	lea	r11d, [rdx - 0x30]
0xbbb6:	cmp	r11b, 7
0xbbba:	ja	0xbb68


0xbbbc:	lea	edx, [r10 + r9*8]
0xbbc0:	lea	edx, [r11 + rdx*8 - 0x80]
0xbbc5:	mov	byte ptr [rcx], dl
0xbbc7:	mov	rdx, r8
0xbbca:	jmp	0xbb6e


0xbb6e:	add	rcx, 1
0xbb72:	cmp	rax, rdx
0xbb75:	jbe	0xbbd0


0xc616:	mov	r14, qword ptr [r15]
0xc619:	mov	qword ptr [rsp], -1
0xc621:	test	r14, r14
0xc624:	je	0xc6dd


0xc6dd:	mov	rax, qword ptr [rsp]
0xc6e1:	add	rsp, 0x28
0xc6e5:	pop	rbx
0xc6e6:	pop	rbp
0xc6e7:	pop	r12
0xc6e9:	pop	r13
0xc6eb:	pop	r14
0xc6ed:	pop	r15
0xc6ef:	ret	


0xc62a:	mov	r12, rax
0xc62d:	mov	byte ptr [rsp + 0x17], 0
0xc632:	xor	ebx, ebx
0xc634:	jmp	0xc687


0xc687:	mov	rsi, qword ptr [rsp + 8]
0xc68c:	mov	rdx, r12
0xc68f:	mov	rdi, r14
0xc692:	call	0x20c0


0x20c0:	jmp	qword ptr [rip + 0x211c92]




0x4009:	mov	rcx, rax
0x400c:	mov	rax, qword ptr [r15]
0x400f:	cmp	dword ptr [rax], 2
0x4012:	jne	0x3f70


0x4018:	mov	eax, dword ptr [rip + 0x210362]
0x401e:	mov	r10d, dword ptr [rip + 0x2103e3]
0x4025:	test	eax, eax
0x4027:	je	0x40a8


0x3f70:	mov	rdi, rcx
0x3f73:	call	0x2540


0x40a8:	mov	rdi, qword ptr [rip + 0x210351]
0x40af:	mov	r9d, r10d
0x40b2:	and	r9d, 0x124
0x40b9:	mov	r8, rdi
0x40bc:	mov	rsi, rdi
0x40bf:	nop	
0x40c0:	mov	rdx, rsi
0x40c3:	shr	rdx, 3
0x40c7:	mov	rax, rdx
0x40ca:	mul	r12
0x40cd:	mov	rax, r8
0x40d0:	shr	r8, 0xa
0x40d4:	and	eax, 0x3ff
0x40d9:	mov	rcx, rdx
0x40dc:	shr	rcx, 4
0x40e0:	imul	rcx, rcx, 0x3e8
0x40e7:	sub	rsi, rcx
0x40ea:	mov	rcx, rsi
0x40ed:	mov	rsi, rdx
0x40f0:	mov	rdx, rcx
0x40f3:	shr	rsi, 4
0x40f7:	or	rdx, rax
0x40fa:	je	0x40c0


0x4029:	cmp	eax, 4
0x402c:	je	0x4090


0x2540:	jmp	qword ptr [rip + 0x211a52]


0x40c0:	mov	rdx, rsi
0x40c3:	shr	rdx, 3
0x40c7:	mov	rax, rdx
0x40ca:	mul	r12
0x40cd:	mov	rax, r8
0x40d0:	shr	r8, 0xa
0x40d4:	and	eax, 0x3ff
0x40d9:	mov	rcx, rdx
0x40dc:	shr	rcx, 4
0x40e0:	imul	rcx, rcx, 0x3e8
0x40e7:	sub	rsi, rcx
0x40ea:	mov	rcx, rsi
0x40ed:	mov	rsi, rdx
0x40f0:	mov	rdx, rcx
0x40f3:	shr	rsi, 4
0x40f7:	or	rdx, rax
0x40fa:	je	0x40c0


0x40fc:	test	rcx, rcx
0x40ff:	sete	dl
0x4102:	test	rax, rax
0x4105:	sete	al
0x4108:	cmp	dl, al
0x410a:	jae	0x4170


0x4090:	mov	r10d, dword ptr [rip + 0x210371]
0x4097:	test	r10b, 0x10
0x409b:	jne	0x3f70


0x402e:	cmp	eax, 3
0x4031:	jne	0x3f70




0x410c:	mov	edx, r9d
0x410f:	or	dl, 0xb8
0x4112:	mov	r8d, 1
0x4118:	mov	ecx, 1
0x411d:	mov	rsi, r14
0x4120:	call	0x7550


0x4170:	jbe	0x4188


0x4037:	mov	rdi, qword ptr [rip + 0x2103c2]
0x403e:	mov	rsi, r14
0x4041:	mov	qword ptr [rsp + 8], rcx
0x4046:	call	0x8150


0x4188:	mov	edx, r9d
0x418b:	or	dl, 0x98
0x418e:	and	r10b, 0x20
0x4192:	jne	0x4112


0x4172:	mov	edx, r10d
0x4175:	and	edx, 0x104
0x417b:	or	dl, 0x98
0x417e:	or	dh, 1
0x4181:	jmp	0x4112


0x4198:	jmp	0x417e


0x4112:	mov	r8d, 1
0x4118:	mov	ecx, 1
0x411d:	mov	rsi, r14
0x4120:	call	0x7550


0x417e:	or	dh, 1
0x4181:	jmp	0x4112


0x404b:	mov	r15, rax
0x404e:	lea	rsi, [rip + 0xaf96]
0x4055:	xor	edi, edi
0x4057:	mov	edx, 5
0x405c:	call	0x2190


0x4125:	lea	rsi, [rip + 0xaeb8]
0x412c:	mov	edx, 5
0x4131:	xor	edi, edi
0x4133:	mov	r15, rax
0x4136:	call	0x2190


0x413b:	mov	qword ptr [rsp + 8], rax
0x4140:	jmp	0x404e


0x404e:	lea	rsi, [rip + 0xaf96]
0x4055:	xor	edi, edi
0x4057:	mov	edx, 5
0x405c:	call	0x2190


0x4061:	mov	rcx, qword ptr [rsp + 8]
0x4066:	mov	rsi, rax
0x4069:	mov	rdx, r15
0x406c:	xor	eax, eax
0x406e:	mov	rdi, r13
0x4071:	call	0xb560


0x4076:	cmp	eax, -1
0x4079:	jne	0x4084


0x407b:	mov	qword ptr [rsp + 0x18], 0
0x4084:	mov	rdi, qword ptr [rsp + 0x18]
0x4089:	jmp	0x3f80


0x4084:	mov	rdi, qword ptr [rsp + 0x18]
0x4089:	jmp	0x3f80


0x3f80:	test	rdi, rdi
0x3f83:	je	0x4183


0x4183:	call	0xb020


0x3f89:	call	0x3ec0


0x56fa:	mov	esi, dword ptr [r14]
0x56fd:	mov	rdx, rax
0x5700:	xor	edi, edi
0x5702:	xor	eax, eax
0x5704:	call	0x24a0


0x24a0:	jmp	qword ptr [rip + 0x211aa2]




0xa7ff:	lea	rdx, [rip + 0x60da]
0xa806:	mov	rcx, rax
0xa809:	mov	r8d, 0x7e3
0xa80f:	mov	esi, 1
0xa814:	mov	rdi, rbp
0xa817:	xor	eax, eax
0xa819:	call	0x2530


0xa81e:	lea	rsi, [rip + 0x5e23]
0xa825:	xor	edi, edi
0xa827:	mov	edx, 5
0xa82c:	call	0x2190


0xa831:	mov	rsi, rbp
0xa834:	mov	rdi, rax
0xa837:	call	0x2310


0x2310:	jmp	qword ptr [rip + 0x211b6a]




0xb0ef:	mov	r9, r12
0xb0f2:	mov	rdx, rax
0xb0f5:	mov	r8, r13
0xb0f8:	mov	rcx, rbx
0xb0fb:	xor	esi, esi
0xb0fd:	mov	edi, ebp
0xb0ff:	xor	eax, eax
0xb101:	call	0x24a0


0x4dad:	mov	rdi, qword ptr [rip + 0x20f58c]
0x4db4:	mov	rdx, rax
0x4db7:	mov	rcx, rbx
0x4dba:	mov	esi, 1
0x4dbf:	xor	eax, eax
0x4dc1:	call	0x2530


0x4dc6:	mov	edi, ebp
0x4dc8:	call	0x2510


0x2510:	jmp	qword ptr [rip + 0x211a6a]




0x4ddb:	mov	rdx, rbx
0x4dde:	mov	rsi, rax
0x4de1:	mov	edi, 1
0x4de6:	xor	eax, eax
0x4de8:	call	0x2470


0x2470:	jmp	qword ptr [rip + 0x211aba]




0xc733:	mov	rbx, rax
0xc736:	mov	rsi, rbp
0xc739:	mov	edi, 1
0xc73e:	call	0xa4f0


0xc77e:	mov	rbx, rax
0xc781:	jmp	0xc736


0xc736:	mov	rsi, rbp
0xc739:	mov	edi, 1
0xc73e:	call	0xa4f0


0xad64:	lea	rdx, [rip + 0x58ac]
0xad6b:	mov	rsi, rax
0xad6e:	mov	edi, 1
0xad73:	xor	eax, eax
0xad75:	call	0x2470


0xb037:	mov	edi, dword ptr [rip + 0x20922b]
0xb03d:	lea	rdx, [rip + 0x5c33]
0xb044:	mov	rcx, rax
0xb047:	xor	esi, esi
0xb049:	xor	eax, eax
0xb04b:	call	0x24a0


0xc7c1:	mov	rdi, rax
0xc7c4:	mov	rsi, rbx
0xc7c7:	call	0x2310


0x7fb7:	test	eax, eax
0x7fb9:	js	0x7ff8


0x7ff8:	lea	r8, [rip + 0x804b]
0x7fff:	xor	edx, edx
0x8001:	mov	rsi, rsp
0x8004:	mov	rcx, r12
0x8007:	mov	rdi, rbx
0x800a:	call	0xb140


0x7fbb:	lea	rdx, [rip + 0x809e]
0x7fc2:	cdqe	
0x7fc4:	mov	qword ptr [r12], 1
0x7fcc:	or	ebp, dword ptr [rdx + rax*4]
0x7fcf:	xor	eax, eax
0x7fd1:	mov	dword ptr [r13], ebp
0x7fd5:	mov	rcx, qword ptr [rsp + 8]
0x7fda:	xor	rcx, qword ptr fs:[0x28]
0x7fe3:	jne	0x8141


0xc8e1:	test	rax, rax
0xc8e4:	js	0xc8f5


0xc8f5:	mov	rdx, rax
0xc8f8:	mov	rsi, r12
0xc8fb:	mov	rdi, r14
0xc8fe:	call	0xc710


0xc8e6:	add	rsp, 8
0xc8ea:	pop	rbx
0xc8eb:	pop	rbp
0xc8ec:	pop	r12
0xc8ee:	pop	r13
0xc8f0:	pop	r14
0xc8f2:	pop	r15
0xc8f4:	ret	


0xc97c:	mov	ebx, dword ptr [rbp]
0xc97f:	mov	rdi, rbp
0xc982:	mov	r12, rax
0xc985:	call	0xcb80


0x2615:	lea	rsi, [rip + 0xcb15]
0x261c:	lea	rdi, [rip + 0xcac9]
0x2623:	call	0x2180


0x2180:	jmp	qword ptr [rip + 0x211c32]




0xca6b:	mov	rdx, rax
0xca6e:	mov	eax, 1
0xca73:	test	rdx, rdx
0xca76:	je	0xca95


0xca95:	add	rsp, 8
0xca99:	ret	


0xca78:	lea	rdi, [rip + 0x41fb]
0xca7f:	mov	ecx, 2
0xca84:	mov	rsi, rdx
0xca87:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xca87:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xca89:	seta	cl
0xca8c:	sbb	cl, 0
0xca8f:	xor	eax, eax
0xca91:	test	cl, cl
0xca93:	jne	0xcaa0


0xcaa0:	lea	rdi, [rip + 0x41d5]
0xcaa7:	mov	ecx, 6
0xcaac:	mov	rsi, rdx
0xcaaf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xcaaf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xcab1:	seta	al
0xcab4:	sbb	al, 0
0xcab6:	test	al, al
0xcab8:	setne	al
0xcabb:	add	rsp, 8
0xcabf:	ret	


0xbb0c:	test	al, al
0xbb0e:	jne	0xbb20


0xbb10:	movzx	eax, byte ptr [r13]
0xbb15:	mov	ebp, 1
0xbb1a:	mov	dword ptr [rbx], eax
0xbb1c:	nop	dword ptr [rax]
0xbb20:	mov	rdx, qword ptr [rsp + 8]
0xbb25:	xor	rdx, qword ptr fs:[0x28]
0xbb2e:	mov	rax, rbp
0xbb31:	jne	0xbb3e


0xcb0e:	test	rax, rax
0xcb11:	je	0xcb30


0xcb30:	lea	rax, [rip + 0x414b]
0xcb37:	add	rsp, 8
0xcb3b:	ret	


0xcb13:	cmp	byte ptr [rax], 0
0xcb16:	lea	rdx, [rip + 0x4165]
0xcb1d:	cmove	rax, rdx
0xcb21:	add	rsp, 8
0xcb25:	ret	


0x88b0:	movzx	edx, byte ptr [rax]
0x88b3:	and	edx, 0xffffffdf
0x88b6:	cmp	dl, 0x55
0x88b9:	je	0x8930


0x8930:	movzx	edx, byte ptr [rax + 1]
0x8934:	and	edx, 0xffffffdf
0x8937:	cmp	dl, 0x54
0x893a:	jne	0x88c0


0x88bb:	cmp	dl, 0x47
0x88be:	je	0x88e0


0x893c:	movzx	edx, byte ptr [rax + 2]
0x8940:	and	edx, 0xffffffdf
0x8943:	cmp	dl, 0x46
0x8946:	jne	0x88c0


0x88c0:	lea	rax, [rip + 0x6751]
0x88c7:	lea	rdx, [rip + 0x8238]
0x88ce:	cmp	ebx, 9
0x88d1:	cmovne	rax, rdx
0x88d5:	add	rsp, 8
0x88d9:	pop	rbx
0x88da:	pop	rbp
0x88db:	ret	


0x88e0:	movzx	edx, byte ptr [rax + 1]
0x88e4:	and	edx, 0xffffffdf
0x88e7:	cmp	dl, 0x42
0x88ea:	jne	0x88c0


0x894c:	cmp	byte ptr [rax + 3], 0x2d
0x8950:	jne	0x88c0


0x88ec:	cmp	byte ptr [rax + 2], 0x31
0x88f0:	jne	0x88c0


0x8956:	cmp	byte ptr [rax + 4], 0x38
0x895a:	jne	0x88c0


0x88f2:	cmp	byte ptr [rax + 3], 0x38
0x88f6:	jne	0x88c0


0x8960:	cmp	byte ptr [rax + 5], 0
0x8964:	jne	0x88c0


0x88f8:	cmp	byte ptr [rax + 4], 0x30
0x88fc:	jne	0x88c0


0x896a:	cmp	byte ptr [rbp], 0x60
0x896e:	lea	rax, [rip + 0x775f]
0x8975:	lea	rdx, [rip + 0x775c]
0x897c:	cmovne	rax, rdx
0x8980:	add	rsp, 8
0x8984:	pop	rbx
0x8985:	pop	rbp
0x8986:	ret	


0x88fe:	cmp	byte ptr [rax + 5], 0x33
0x8902:	jne	0x88c0


0x8904:	cmp	byte ptr [rax + 6], 0x30
0x8908:	jne	0x88c0


0x890a:	cmp	byte ptr [rax + 7], 0
0x890e:	jne	0x88c0


0x8910:	cmp	byte ptr [rbp], 0x60
0x8914:	lea	rax, [rip + 0x77c1]
0x891b:	lea	rdx, [rip + 0x77be]
0x8922:	cmovne	rax, rdx
0x8926:	add	rsp, 8
0x892a:	pop	rbx
0x892b:	pop	rbp
0x892c:	ret	


0xcc73:	mov	edx, r12d
0xcc76:	mov	rsi, rbp
0xcc79:	mov	edi, eax
0xcc7b:	call	0x2270


0x2270:	jmp	qword ptr [rip + 0x211bba]




0xcb8c:	test	eax, eax
0xcb8e:	mov	rdi, rbx
0xcb91:	js	0xcbe7


0xcbe7:	pop	rbx
0xcbe8:	pop	rbp
0xcbe9:	pop	r12
0xcbeb:	jmp	0x2170


0xcb93:	call	0x2420


0x2170:	jmp	qword ptr [rip + 0x211c3a]




0xcb98:	test	eax, eax
0xcb9a:	jne	0xcbc8


0xcb9c:	mov	rdi, rbx
0xcb9f:	call	0xcc00


0xcbc8:	mov	rdi, rbx
0xcbcb:	call	0x2370


0xcbd0:	xor	esi, esi
0xcbd2:	mov	edx, 1
0xcbd7:	mov	edi, eax
0xcbd9:	call	0x2270


0xcbde:	cmp	rax, -1
0xcbe2:	jne	0xcb9c


0xcbe4:	mov	rdi, rbx
0xcbe7:	pop	rbx
0xcbe8:	pop	rbp
0xcbe9:	pop	r12
0xcbeb:	jmp	0x2170


0xcc80:	cmp	rax, -1
0xcc84:	je	0xcc92


0xcc92:	pop	rbx
0xcc93:	pop	rbp
0xcc94:	pop	r12
0xcc96:	ret	


0xcc86:	and	dword ptr [rbx], 0xffffffef
0xcc89:	mov	qword ptr [rbx + 0x90], rax
0xcc90:	xor	eax, eax
0xcc92:	pop	rbx
0xcc93:	pop	rbp
0xcc94:	pop	r12
0xcc96:	ret	


0x2628:	lea	rdi, [rip + 0xcabd]
0x262f:	call	0x2160


0x2160:	jmp	qword ptr [rip + 0x211c42]




0xad7a:	lea	rsi, [rip + 0x58ac]
0xad81:	mov	edx, 5
0xad86:	xor	edi, edi
0xad88:	call	0x2190


0xad8d:	lea	rcx, [rip + 0x4f04]
0xad94:	lea	rdx, [rip + 0x434d]
0xad9b:	mov	rsi, rax
0xad9e:	mov	edi, 1
0xada3:	xor	eax, eax
0xada5:	call	0x2470


0xadaa:	mov	rbx, qword ptr [rip + 0x209557]
0xadb1:	lea	rsi, [rip + 0x5aa8]
0xadb8:	xor	edi, edi
0xadba:	mov	edx, 5
0xadbf:	call	0x2190


0xadc4:	mov	rsi, rbx
0xadc7:	mov	rdi, rax
0xadca:	pop	rbx
0xadcb:	jmp	0x2310


0x4ded:	mov	rbx, qword ptr [rip + 0x20f514]
0x4df4:	lea	rsi, [rip + 0xa5cd]
0x4dfb:	mov	edx, 5
0x4e00:	xor	edi, edi
0x4e02:	call	0x2190


0x4e07:	mov	rsi, rbx
0x4e0a:	mov	rdi, rax
0x4e0d:	call	0x2310


0x4e12:	mov	rbx, qword ptr [rip + 0x20f4ef]
0x4e19:	lea	rsi, [rip + 0xa610]
0x4e20:	mov	edx, 5
0x4e25:	xor	edi, edi
0x4e27:	call	0x2190


0x4e2c:	mov	rsi, rbx
0x4e2f:	mov	rdi, rax
0x4e32:	call	0x2310


0x4e37:	mov	rbx, qword ptr [rip + 0x20f4ca]
0x4e3e:	lea	rsi, [rip + 0xa63b]
0x4e45:	mov	edx, 5
0x4e4a:	xor	edi, edi
0x4e4c:	call	0x2190


0x4e51:	mov	rsi, rbx
0x4e54:	mov	rdi, rax
0x4e57:	call	0x2310


0x4e5c:	mov	rbx, qword ptr [rip + 0x20f4a5]
0x4e63:	lea	rsi, [rip + 0xa7b6]
0x4e6a:	mov	edx, 5
0x4e6f:	xor	edi, edi
0x4e71:	call	0x2190


0x4e76:	mov	rsi, rbx
0x4e79:	mov	rdi, rax
0x4e7c:	call	0x2310


0x4e81:	mov	rbx, qword ptr [rip + 0x20f480]
0x4e88:	lea	rsi, [rip + 0xa891]
0x4e8f:	mov	edx, 5
0x4e94:	xor	edi, edi
0x4e96:	call	0x2190


0x4e9b:	mov	rsi, rbx
0x4e9e:	mov	rdi, rax
0x4ea1:	call	0x2310


0x4ea6:	mov	rbx, qword ptr [rip + 0x20f45b]
0x4ead:	lea	rsi, [rip + 0xa97c]
0x4eb4:	mov	edx, 5
0x4eb9:	xor	edi, edi
0x4ebb:	call	0x2190


0x4ec0:	mov	rsi, rbx
0x4ec3:	mov	rdi, rax
0x4ec6:	call	0x2310


0x4ecb:	mov	rbx, qword ptr [rip + 0x20f436]
0x4ed2:	lea	rsi, [rip + 0xa9df]
0x4ed9:	mov	edx, 5
0x4ede:	xor	edi, edi
0x4ee0:	call	0x2190


0x4ee5:	mov	rsi, rbx
0x4ee8:	mov	rdi, rax
0x4eeb:	call	0x2310


0x4ef0:	mov	rbx, qword ptr [rip + 0x20f411]
0x4ef7:	lea	rsi, [rip + 0xaa9a]
0x4efe:	mov	edx, 5
0x4f03:	xor	edi, edi
0x4f05:	call	0x2190


0x4f0a:	mov	rsi, rbx
0x4f0d:	mov	rdi, rax
0x4f10:	call	0x2310


0x4f15:	mov	rbx, qword ptr [rip + 0x20f3ec]
0x4f1c:	lea	rsi, [rip + 0xaaa5]
0x4f23:	mov	edx, 5
0x4f28:	xor	edi, edi
0x4f2a:	call	0x2190


0x4f2f:	mov	rsi, rbx
0x4f32:	mov	rdi, rax
0x4f35:	call	0x2310


0x4f3a:	lea	rsi, [rip + 0xaabf]
0x4f41:	mov	edx, 5
0x4f46:	xor	edi, edi
0x4f48:	call	0x2190


0x4f4d:	lea	rdx, [rip + 0xa11b]
0x4f54:	mov	rsi, rax
0x4f57:	mov	edi, 1
0x4f5c:	xor	eax, eax
0x4f5e:	call	0x2470


0x4f63:	mov	rbx, qword ptr [rip + 0x20f39e]
0x4f6a:	lea	rsi, [rip + 0xab6f]
0x4f71:	mov	edx, 5
0x4f76:	xor	edi, edi
0x4f78:	call	0x2190


0x4f7d:	mov	rsi, rbx
0x4f80:	mov	rdi, rax
0x4f83:	call	0x2310


0x4f88:	mov	rbx, qword ptr [rip + 0x20f379]
0x4f8f:	lea	rsi, [rip + 0xac22]
0x4f96:	mov	edx, 5
0x4f9b:	xor	edi, edi
0x4f9d:	call	0x2190


0x4fa2:	mov	rsi, rbx
0x4fa5:	mov	rdi, rax
0x4fa8:	lea	rbx, [rip + 0xa0bd]
0x4faf:	call	0x2310


0x4fb4:	lea	rax, [rip + 0xa0b7]
0x4fbb:	lea	rcx, [rip + 0xa0f1]
0x4fc2:	mov	qword ptr [rsp + 0x60], 0
0x4fcb:	mov	qword ptr [rsp + 0x68], 0
0x4fd4:	mov	rdx, rsp
0x4fd7:	mov	qword ptr [rsp], rax
0x4fdb:	lea	rax, [rip + 0xa092]
0x4fe2:	mov	qword ptr [rsp + 0x30], rcx
0x4fe7:	lea	rcx, [rip + 0xa0cf]
0x4fee:	mov	qword ptr [rsp + 8], rax
0x4ff3:	lea	rax, [rip + 0xa0f2]
0x4ffa:	mov	qword ptr [rsp + 0x40], rcx
0x4fff:	lea	rcx, [rip + 0xa0c1]
0x5006:	mov	qword ptr [rsp + 0x10], rax
0x500b:	lea	rax, [rip + 0xa072]
0x5012:	mov	qword ptr [rsp + 0x50], rcx
0x5017:	mov	qword ptr [rsp + 0x18], rax
0x501c:	lea	rax, [rip + 0xa077]
0x5023:	mov	qword ptr [rsp + 0x20], rax
0x5028:	lea	rax, [rip + 0xa075]
0x502f:	mov	qword ptr [rsp + 0x28], rax
0x5034:	mov	qword ptr [rsp + 0x38], rax
0x5039:	mov	qword ptr [rsp + 0x48], rax
0x503e:	mov	qword ptr [rsp + 0x58], rax
0x5043:	nop	dword ptr [rax + rax]
0x5048:	add	rdx, 0x10
0x504c:	mov	rdi, qword ptr [rdx]
0x504f:	test	rdi, rdi
0x5052:	je	0x5067


0x5067:	mov	r12, qword ptr [rdx + 8]
0x506b:	xor	edi, edi
0x506d:	mov	edx, 5
0x5072:	lea	rsi, [rip + 0xa058]
0x5079:	test	r12, r12
0x507c:	je	0x5143


0x5054:	mov	ecx, 3
0x5059:	mov	rsi, rbx
0x505c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5143:	call	0x2190


0x5082:	call	0x2190


0x505c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x505e:	seta	al
0x5061:	sbb	al, 0
0x5063:	test	al, al
0x5065:	jne	0x5048


0x5048:	add	rdx, 0x10
0x504c:	mov	rdi, qword ptr [rdx]
0x504f:	test	rdi, rdi
0x5052:	je	0x5067


0x5087:	lea	rcx, [rip + 0xac0a]
0x508e:	lea	rdx, [rip + 0xa053]
0x5095:	mov	rsi, rax
0x5098:	mov	edi, 1
0x509d:	xor	eax, eax
0x509f:	call	0x2470


0x50a4:	xor	esi, esi
0x50a6:	mov	edi, 5
0x50ab:	call	0x2460


0x50b0:	test	rax, rax
0x50b3:	je	0x50d1


0x50d1:	lea	rsi, [rip + 0xa022]
0x50d8:	xor	edi, edi
0x50da:	mov	edx, 5
0x50df:	call	0x2190


0x50b5:	lea	rsi, [rip + 0xa03a]
0x50bc:	mov	edx, 3
0x50c1:	mov	rdi, rax
0x50c4:	call	0x20c0


0x50e4:	lea	rcx, [rip + 0x9f81]
0x50eb:	lea	rdx, [rip + 0xaba6]
0x50f2:	mov	rsi, rax
0x50f5:	mov	edi, 1
0x50fa:	xor	eax, eax
0x50fc:	call	0x2470


0x5101:	cmp	r12, rbx
0x5104:	lea	rcx, [rip + 0x9f83]
0x510b:	lea	rbx, [rip + 0xb4ef]
0x5112:	cmove	rbx, rcx
0x5116:	lea	rsi, [rip + 0xabeb]
0x511d:	xor	edi, edi
0x511f:	mov	edx, 5
0x5124:	call	0x2190


0x5129:	mov	rcx, rbx
0x512c:	mov	rsi, rax
0x512f:	mov	rdx, r12
0x5132:	mov	edi, 1
0x5137:	xor	eax, eax
0x5139:	call	0x2470


0x513e:	jmp	0x4dc6


0x5148:	lea	rcx, [rip + 0xab49]
0x514f:	lea	rdx, [rip + 0x9f92]
0x5156:	mov	rsi, rax
0x5159:	mov	edi, 1
0x515e:	xor	eax, eax
0x5160:	call	0x2470


0x5165:	xor	esi, esi
0x5167:	mov	edi, 5
0x516c:	call	0x2460


0x5171:	test	rax, rax
0x5174:	je	0x518e


0x518e:	lea	rsi, [rip + 0x9f65]
0x5195:	mov	edx, 5
0x519a:	xor	edi, edi
0x519c:	lea	r12, [rip + 0x9ec9]
0x51a3:	lea	rbx, [rip + 0x9ee4]
0x51aa:	call	0x2190


0x5176:	lea	rsi, [rip + 0x9f79]
0x517d:	mov	edx, 3
0x5182:	mov	rdi, rax
0x5185:	call	0x20c0


0x51af:	lea	rcx, [rip + 0x9eb6]
0x51b6:	lea	rdx, [rip + 0xaadb]
0x51bd:	mov	rsi, rax
0x51c0:	mov	edi, 1
0x51c5:	xor	eax, eax
0x51c7:	call	0x2470


0x51cc:	jmp	0x5116


0x5116:	lea	rsi, [rip + 0xabeb]
0x511d:	xor	edi, edi
0x511f:	mov	edx, 5
0x5124:	call	0x2190


0xc7cc:	mov	r15, qword ptr [r14]
0xc7cf:	test	r15, r15
0xc7d2:	je	0xc868


0xc868:	mov	rdi, qword ptr [rip + 0x207ad1]
0xc86f:	mov	rax, qword ptr [rdi + 0x28]
0xc873:	cmp	rax, qword ptr [rdi + 0x30]
0xc877:	jae	0xc898


0xc7d8:	xor	r13d, r13d
0xc7db:	xor	ebx, ebx
0xc7dd:	jmp	0xc818


0xc879:	lea	rdx, [rax + 1]
0xc87d:	mov	qword ptr [rdi + 0x28], rdx
0xc881:	mov	byte ptr [rax], 0xa
0xc884:	add	rsp, 8
0xc888:	pop	rbx
0xc889:	pop	rbp
0xc88a:	pop	r12
0xc88c:	pop	r13
0xc88e:	pop	r14
0xc890:	pop	r15
0xc892:	ret	


0xc898:	add	rsp, 8
0xc89c:	mov	esi, 0xa
0xc8a1:	pop	rbx
0xc8a2:	pop	rbp
0xc8a3:	pop	r12
0xc8a5:	pop	r13
0xc8a7:	pop	r14
0xc8a9:	pop	r15
0xc8ab:	jmp	0x2240


0xc818:	test	rbx, rbx
0xc81b:	je	0xc7e0


0x2240:	jmp	qword ptr [rip + 0x211bd2]


0xc7e0:	mov	rdi, r15
0xc7e3:	add	rbx, 1
0xc7e7:	mov	r13, rbp
0xc7ea:	call	0xa510


0xc81d:	mov	rdx, r12
0xc820:	mov	rsi, rbp
0xc823:	mov	rdi, r13
0xc826:	call	0x2300




0xc82b:	test	eax, eax
0xc82d:	jne	0xc7e0


0xc82f:	mov	rdi, r15
0xc832:	add	rbx, 1
0xc836:	add	rbp, r12
0xc839:	call	0xa510


0xa83c:	cmp	r12, 9
0xa840:	ja	0xab80


0xa846:	lea	rdx, [rip + 0x6057]
0xa84d:	movsxd	rax, dword ptr [rdx + r12*4]
0xa851:	add	rax, rdx
0xa854:	jmp	rax


0xab80:	mov	r10, qword ptr [rbx + 0x40]
0xab84:	mov	r9, qword ptr [rbx + 0x38]
0xab88:	mov	edx, 5
0xab8d:	mov	rax, qword ptr [rbx + 0x10]
0xab91:	mov	r8, qword ptr [rbx + 8]
0xab95:	lea	rsi, [rip + 0x5c84]
0xab9c:	mov	r13, qword ptr [rbx + 0x30]
0xaba0:	mov	r12, qword ptr [rbx + 0x28]
0xaba4:	mov	r15, qword ptr [rbx + 0x20]
0xaba8:	mov	r14, qword ptr [rbx + 0x18]
0xabac:	mov	qword ptr [rsp + 0x18], r10
0xabb1:	mov	qword ptr [rsp + 0x10], r9
0xabb6:	mov	qword ptr [rsp], rax
0xabba:	mov	qword ptr [rsp + 8], r8
0xabbf:	mov	rbx, qword ptr [rbx]
0xabc2:	jmp	0xa952


0xa952:	xor	edi, edi
0xa954:	call	0x2190


0xa959:	mov	r10, qword ptr [rsp + 0x18]
0xa95e:	push	r10
0xa960:	jmp	0xa8a4


0xa8a4:	mov	r9, qword ptr [rsp + 0x18]
0xa8a9:	mov	rdx, rax
0xa8ac:	mov	rcx, rbx
0xa8af:	mov	esi, 1
0xa8b4:	mov	rdi, rbp
0xa8b7:	xor	eax, eax
0xa8b9:	push	r9
0xa8bb:	push	r13
0xa8bd:	push	r12
0xa8bf:	push	r15
0xa8c1:	push	r14
0xa8c3:	mov	r9, qword ptr [rsp + 0x30]
0xa8c8:	mov	r8, qword ptr [rsp + 0x38]
0xa8cd:	call	0x2530


0xa8d2:	add	rsp, 0x30
0xa8d6:	add	rsp, 0x28
0xa8da:	pop	rbx
0xa8db:	pop	rbp
0xa8dc:	pop	r12
0xa8de:	pop	r13
0xa8e0:	pop	r14
0xa8e2:	pop	r15
0xa8e4:	ret	


0xb050:	call	0x20a0


0x5709:	jmp	0x5584


0x5584:	mov	rcx, qword ptr [rbp - 0x38]
0x5588:	xor	rcx, qword ptr fs:[0x28]
0x5591:	mov	rax, rbx
0x5594:	jne	0x5733


0x559a:	lea	rsp, [rbp - 0x28]
0x559e:	pop	rbx
0x559f:	pop	r12
0x55a1:	pop	r13
0x55a3:	pop	r14
0x55a5:	pop	r15
0x55a7:	pop	rbp
0x55a8:	ret	


0x5733:	call	0x21f0


0x3f78:	mov	rdi, rax
0x3f7b:	mov	qword ptr [rsp + 0x18], rax
0x3f80:	test	rdi, rdi
0x3f83:	je	0x4183


0x518a:	test	eax, eax
0x518c:	jne	0x51d1


0x51d1:	lea	r12, [rip + 0x9e94]
0x51d8:	mov	r13, qword ptr [rip + 0x20f129]
0x51df:	lea	rsi, [rip + 0xaada]
0x51e6:	xor	edi, edi
0x51e8:	mov	edx, 5
0x51ed:	call	0x2190


0x51f2:	mov	rsi, r13
0x51f5:	mov	rdi, rax
0x51f8:	call	0x2310


0x51fd:	jmp	0x50d1


0x50c9:	test	eax, eax
0x50cb:	jne	0x51d8


0x51d8:	mov	r13, qword ptr [rip + 0x20f129]
0x51df:	lea	rsi, [rip + 0xaada]
0x51e6:	xor	edi, edi
0x51e8:	mov	edx, 5
0x51ed:	call	0x2190


0xc697:	test	eax, eax
0xc699:	jne	0xc677


0xc69b:	mov	rdi, r14
0xc69e:	call	0x21b0


0xc677:	add	rbx, 1
0xc67b:	add	rbp, r13
0xc67e:	mov	r14, qword ptr [r15 + rbx*8]
0xc682:	test	r14, r14
0xc685:	je	0xc6c8


0xc6c8:	cmp	byte ptr [rsp + 0x17], 0
0xc6cd:	mov	rax, -2
0xc6d4:	cmove	rax, qword ptr [rsp]
0xc6d9:	mov	qword ptr [rsp], rax
0xc6dd:	mov	rax, qword ptr [rsp]
0xc6e1:	add	rsp, 0x28
0xc6e5:	pop	rbx
0xc6e6:	pop	rbp
0xc6e7:	pop	r12
0xc6e9:	pop	r13
0xc6eb:	pop	r14
0xc6ed:	pop	r15
0xc6ef:	ret	


0xc6a3:	cmp	rax, r12
0xc6a6:	je	0xc700


0xc700:	mov	qword ptr [rsp], rbx
0xc704:	jmp	0xc6dd


0xc6a8:	cmp	qword ptr [rsp], -1
0xc6ad:	jne	0xc640


0xc6af:	mov	qword ptr [rsp], rbx
0xc6b3:	add	rbx, 1
0xc6b7:	add	rbp, r13
0xc6ba:	mov	r14, qword ptr [r15 + rbx*8]
0xc6be:	test	r14, r14
0xc6c1:	jne	0xc687


0xc640:	mov	rax, qword ptr [rsp + 0x18]
0xc645:	test	rax, rax
0xc648:	je	0xc6f0


0xc6f0:	mov	byte ptr [rsp + 0x17], 1
0xc6f5:	jmp	0xc677


0xc64e:	mov	rdi, qword ptr [rsp]
0xc652:	mov	rdx, r13
0xc655:	mov	rsi, rbp
0xc658:	imul	rdi, r13
0xc65c:	add	rdi, rax
0xc65f:	call	0x2300


0xc664:	test	eax, eax
0xc666:	movzx	eax, byte ptr [rsp + 0x17]
0xc66b:	mov	ecx, 1
0xc670:	cmovne	eax, ecx
0xc673:	mov	byte ptr [rsp + 0x17], al
0xc677:	add	rbx, 1
0xc67b:	add	rbp, r13
0xc67e:	mov	r14, qword ptr [r15 + rbx*8]
0xc682:	test	r14, r14
0xc685:	je	0xc6c8


0x835b:	cmp	rax, -1
0x835f:	jne	0x8390


0x8361:	test	bl, 1
0x8364:	jne	0x81da


0x8390:	lea	rbp, [rax + 1]
0x8394:	lea	rax, [rbp*4]
0x839c:	mov	rdi, rax
0x839f:	mov	qword ptr [rsp + 0x20], rax
0x83a4:	call	0x23c0


0x836a:	mov	qword ptr [rsp], 0
0x8372:	mov	qword ptr [rsp + 8], 0
0x837b:	mov	r12, -1
0x8382:	jmp	0x82d1


0x83a9:	test	rax, rax
0x83ac:	mov	qword ptr [rsp], rax
0x83b0:	je	0x8535


0x8535:	test	bl, 1
0x8538:	mov	rbp, r15
0x853b:	mov	qword ptr [rsp + 8], 0
0x8544:	jne	0x81ee


0x83b6:	mov	rdi, qword ptr [rsp]
0x83ba:	mov	rdx, rbp
0x83bd:	mov	rsi, r14
0x83c0:	call	0x2130


0x854a:	jmp	0x836a


0x81ee:	mov	rax, qword ptr [r12]
0x81f2:	cmp	rax, rbp
0x81f5:	jae	0x8309


0x83c5:	test	rax, rax
0x83c8:	je	0x84d4


0x84d4:	mov	rbp, r15
0x84d7:	mov	qword ptr [rsp + 8], 0
0x84e0:	jmp	0x81ee


0x83ce:	mov	rax, qword ptr [rsp]
0x83d2:	mov	rcx, qword ptr [rsp + 0x20]
0x83d7:	mov	dword ptr [rax + rcx - 4], 0
0x83df:	mov	edi, dword ptr [rax]
0x83e1:	mov	rdx, rax
0x83e4:	test	edi, edi
0x83e6:	je	0x84e5


0x84e5:	mov	rdi, qword ptr [rsp]
0x84e9:	mov	rsi, rbp
0x84ec:	call	0x2110


0x83ec:	mov	byte ptr [rsp + 0x20], 0
0x83f1:	nop	dword ptr [rax]
0x83f8:	mov	qword ptr [rsp + 0x28], rdx
0x83fd:	call	0x2560


0x2110:	jmp	qword ptr [rip + 0x211c6a]


0x2560:	jmp	qword ptr [rip + 0x211a42]






0x829c:	cmp	rbx, rax
0x829f:	lea	rdx, [rbp - 1]
0x82a3:	jbe	0x82ce


0x82ce:	mov	byte ptr [rax], 0
0x82d1:	mov	rdi, qword ptr [rsp]
0x82d5:	call	0x2070


0x82a5:	test	rbp, rbp
0x82a8:	je	0x82ce


0x82b0:	add	rax, 1
0x82b4:	test	rdx, rdx
0x82b7:	mov	byte ptr [rax - 1], 0x20
0x82bb:	setne	sil
0x82bf:	cmp	rbx, rax
0x82c2:	seta	cl
0x82c5:	sub	rdx, 1
0x82c9:	test	sil, cl
0x82cc:	jne	0x82b0


0x42c9:	test	eax, eax
0x42cb:	jne	0x430c


0x42cd:	mov	rsi, rbx
0x42d0:	mov	rdi, r12
0x42d3:	mov	rdx, rbp
0x42d6:	add	rbx, rbp
0x42d9:	add	r12, rbp
0x42dc:	call	0x2490


0x430c:	add	rbx, rbp
0x430f:	mov	byte ptr [r12], 0x3f
0x4314:	add	r12, 1
0x4318:	cmp	r13, rbx
0x431b:	mov	qword ptr [r14], 0
0x4322:	jne	0x42e6


0x2490:	jmp	qword ptr [rip + 0x211aaa]




0x79f1:	mov	ecx, r12d
0x79f4:	mov	dword ptr [rsp + 0x20], ebx
0x79f8:	mov	r12, r14
0x79fb:	mov	rbx, r13
0x79fe:	mov	r8, qword ptr [rsp + 0x48]
0x7a03:	mov	r15, qword ptr [rsp + 0x38]
0x7a08:	mov	r13, qword ptr [rsp + 0x40]
0x7a0d:	mov	r14d, ecx
0x7a10:	jmp	0x7a52


0x7a52:	movzx	eax, byte ptr [r15]
0x7a56:	test	al, al
0x7a58:	je	0x7a67


0x7a67:	cmp	rbp, r12
0x7a6a:	jbe	0x7a18


0x7a5a:	cmp	al, 0x7f
0x7a5c:	movzx	ebp, al
0x7a5f:	cmovae	rbp, r12
0x7a63:	add	r15, 1
0x7a67:	cmp	rbp, r12
0x7a6a:	jbe	0x7a18


0x7a18:	mov	rax, qword ptr [rsp + 0x18]
0x7a1d:	sub	r12, rbp
0x7a20:	sub	r8, rbp
0x7a23:	mov	rdi, r8
0x7a26:	mov	rdx, rbp
0x7a29:	lea	rsi, [rax + r12]
0x7a2d:	call	0x2360


0x7a6c:	mov	eax, r14d
0x7a6f:	mov	r15, r8
0x7a72:	mov	r14, r12
0x7a75:	mov	rsi, qword ptr [rsp + 0x18]
0x7a7a:	sub	r15, r14
0x7a7d:	mov	rdx, r14
0x7a80:	mov	rdi, r15
0x7a83:	mov	ebx, dword ptr [rsp + 0x20]
0x7a87:	mov	r12d, eax
0x7a8a:	call	0x2360


0x7a8f:	jmp	0x78da


0x7a32:	test	r12, r12
0x7a35:	mov	r8, rax
0x7a38:	je	0x7f48


0x7f48:	mov	ebx, dword ptr [rsp + 0x20]
0x7f4c:	mov	r15, rax
0x7f4f:	mov	r12d, r14d
0x7f52:	jmp	0x78da


0x7a3e:	sub	r8, r13
0x7a41:	mov	rdx, r13
0x7a44:	mov	rsi, rbx
0x7a47:	mov	rdi, r8
0x7a4a:	call	0x2360


0x7a4f:	mov	r8, rax
0x7a52:	movzx	eax, byte ptr [r15]
0x7a56:	test	al, al
0x7a58:	je	0x7a67


0x7716:	mov	rdi, r14
0x7719:	call	0x21b0


0x771e:	pop	rcx
0x771f:	pop	rsi
0x7720:	cmp	rax, qword ptr [rsp + 0x18]
0x7725:	mov	r14, rax
0x7728:	fld	xword ptr [rsp + 0x20]
0x772c:	ja	0x7cd8


0x7732:	test	r12b, 8
0x7736:	je	0x78a0


0x7cd8:	fld	dword ptr [rip + 0x8396]
0x7cde:	fmul	st(1), st(0)
0x7ce0:	fld	xword ptr [rip + 0x839a]
0x7ce6:	fucomip	st(2)
0x7ce8:	jbe	0x7c93


0x78a0:	fstp	st(0)
0x78a2:	jmp	0x78b0


0x773c:	mov	rax, qword ptr [rsp]
0x7740:	cmp	byte ptr [rax + r14 - 1], 0x30
0x7746:	jne	0x78a8


0x7c93:	fdivp	st(1)
0x7c95:	sub	rsp, 0x10
0x7c99:	lea	rcx, [rip + 0x8394]
0x7ca0:	mov	r14, qword ptr [rsp + 0x10]
0x7ca5:	mov	rdx, -1
0x7cac:	mov	esi, 1
0x7cb1:	xor	eax, eax
0x7cb3:	xor	ebp, ebp
0x7cb5:	mov	rdi, r14
0x7cb8:	fstp	xword ptr [rsp]
0x7cbb:	call	0x25a0


0x7cea:	fstp	dword ptr [rsp + 0x18]
0x7cee:	sub	rsp, 0x10
0x7cf2:	mov	edi, r15d
0x7cf5:	fstp	xword ptr [rsp]
0x7cf8:	call	0x7480


0x78b0:	mov	r15, qword ptr [rsp + 8]
0x78b5:	mov	rsi, qword ptr [rsp]
0x78b9:	mov	rdx, r14
0x78bc:	sub	r15, r14
0x78bf:	sub	r14, rbp
0x78c2:	mov	rdi, r15
0x78c5:	call	0x2490


0x774c:	fld	dword ptr [rip + 0x8922]
0x7752:	cmp	r15d, 1
0x7756:	fmul	st(1), st(0)
0x7758:	jne	0x7ce0


0x78a8:	fstp	st(0)
0x78aa:	nop	word ptr [rax + rax]
0x78b0:	mov	r15, qword ptr [rsp + 8]
0x78b5:	mov	rsi, qword ptr [rsp]
0x78b9:	mov	rdx, r14
0x78bc:	sub	r15, r14
0x78bf:	sub	r14, rbp
0x78c2:	mov	rdi, r15
0x78c5:	call	0x2490


0x775e:	jmp	0x7c93


0x7ce0:	fld	xword ptr [rip + 0x839a]
0x7ce6:	fucomip	st(2)
0x7ce8:	jbe	0x7c93


0x7cfd:	pop	rbp
0x7cfe:	pop	r14
0x7d00:	fld	dword ptr [rsp + 0x18]
0x7d04:	jmp	0x7c93


0x7cc0:	mov	rdi, r14
0x7cc3:	call	0x21b0


0x7cc8:	pop	r10
0x7cca:	mov	r14, rax
0x7ccd:	pop	r11
0x7ccf:	jmp	0x78b0


0x7c6f:	mov	rdi, r14
0x7c72:	call	0x21b0


0x7c77:	mov	r14, rax
0x7c7a:	pop	rax
0x7c7b:	pop	rdx
0x7c7c:	cmp	r14, qword ptr [rsp + 0x18]
0x7c81:	fld	xword ptr [rsp + 0x20]
0x7c85:	jbe	0x7732


0x7c8b:	fld	dword ptr [rip + 0x83e3]
0x7c91:	fmul	st(1), st(0)
0x7c93:	fdivp	st(1)
0x7c95:	sub	rsp, 0x10
0x7c99:	lea	rcx, [rip + 0x8394]
0x7ca0:	mov	r14, qword ptr [rsp + 0x10]
0x7ca5:	mov	rdx, -1
0x7cac:	mov	esi, 1
0x7cb1:	xor	eax, eax
0x7cb3:	xor	ebp, ebp
0x7cb5:	mov	rdi, r14
0x7cb8:	fstp	xword ptr [rsp]
0x7cbb:	call	0x25a0


0x7887:	mov	rdi, rbx
0x788a:	mov	ebx, 0xffffffff
0x788f:	call	0x21b0


0x7894:	pop	rsi
0x7895:	pop	rdi
0x7896:	mov	r14, rax
0x7899:	jmp	0x78b0


0xb747:	cmp	rax, 2
0xb74b:	mov	rbx, rax
0xb74e:	je	0xb820


0xb820:	lea	rdx, [r12 - 3]
0xb825:	lea	rdi, [rbp + 3]
0xb829:	mov	esi, 0x2f
0xb82e:	call	0x22f0


0xb754:	test	rax, rax
0xb757:	mov	r15, rbp
0xb75a:	jne	0xb8c0


0x22f0:	jmp	qword ptr [rip + 0x211b7a]


0xb760:	cmp	byte ptr [r15], 0x2f
0xb764:	je	0xb963


0xb8c0:	lea	r13, [rsp + 4]
0xb8c5:	lea	rsi, [rip + 0x4802]
0xb8cc:	mov	rdi, r13
0xb8cf:	call	0xb670




0xb963:	lea	rcx, [rip + 0x51d6]
0xb96a:	lea	rsi, [rip + 0x5147]
0xb971:	lea	rdi, [rip + 0x5184]
0xb978:	mov	edx, 0xa2
0xb97d:	call	0x2280


0xb76a:	add	rbp, r12
0xb76d:	cmp	r15, rbp
0xb770:	ja	0xb944


0xb776:	mov	rax, rbp
0xb779:	lea	r12, [rsp + 4]
0xb77e:	sub	rax, r15
0xb781:	cmp	rax, 0xfff
0xb787:	mov	r13, r12
0xb78a:	jg	0xb7ec


0xb944:	lea	rcx, [rip + 0x51f5]
0xb94b:	lea	rsi, [rip + 0x5166]
0xb952:	lea	rdi, [rip + 0x51af]
0xb959:	mov	edx, 0xa3
0xb95e:	call	0x2280


0xb78c:	jmp	0xb890


0xb7ec:	mov	edx, 0x1000
0xb7f1:	mov	esi, 0x2f
0xb7f6:	mov	rdi, r15
0xb7f9:	call	0x24b0


0xb890:	cmp	rbp, r15
0xb893:	jbe	0xb8a4


0x24b0:	jmp	qword ptr [rip + 0x211a9a]


0xb8a4:	mov	edi, dword ptr [rsp + 4]
0xb8a8:	call	0x2440


0xb895:	mov	rsi, r15
0xb898:	mov	rdi, r13
0xb89b:	call	0xb670




0xb8ad:	test	eax, eax
0xb8af:	mov	ebx, eax
0xb8b1:	jne	0xb878


0xb8b3:	mov	rdi, r13
0xb8b6:	call	0xb620


0xb878:	mov	ebx, dword ptr [r14]
0xb87b:	mov	rdi, r13
0xb87e:	call	0xb620


0xb883:	mov	dword ptr [r14], ebx
0xb886:	mov	ebx, 0xffffffff
0xb88b:	jmp	0xb6e9


0xb8bb:	jmp	0xb6e9


0xb8a0:	test	eax, eax
0xb8a2:	jne	0xb878


0xb8d4:	test	eax, eax
0xb8d6:	jne	0xb878


0xb8d8:	lea	r15, [rbp + rbx]
0xb8dd:	jmp	0xb760


0xc54e:	test	rax, rax
0xc551:	mov	r12, rax
0xc554:	js	0xc5a8


0xc5a8:	call	0x20b0


0xc556:	cmp	rbx, r12
0xc559:	ja	0xc5c0


0xc55b:	mov	rdi, rbp
0xc55e:	call	0x2070


0xc5c0:	mov	byte ptr [rbp + r12], 0
0xc5c6:	jmp	0xc57b


0xc563:	cmp	rbx, r14
0xc566:	ja	0xc590


0xc568:	add	rbx, rbx
0xc56b:	mov	rdi, rbx
0xc56e:	call	0x23c0


0xc590:	cmp	rbx, r15
0xc593:	ja	0xc5d0


0xc595:	movabs	rbx, 0x7fffffffffffffff
0xc59f:	jmp	0xc530


0xc5d0:	call	0x20b0


0xc530:	mov	rdi, rbx
0xc533:	call	0x23c0


0xc573:	test	rax, rax
0xc576:	mov	rbp, rax
0xc579:	jne	0xc540


0xc5d5:	xor	ebp, ebp
0xc5d7:	mov	dword ptr [rax], 0xc
0xc5dd:	jmp	0xc57b


0xc5ad:	cmp	dword ptr [rax], 0x22
0xc5b0:	je	0xc556


0xc5b2:	mov	rdi, rbp
0xc5b5:	xor	ebp, ebp
0xc5b7:	call	0x2070


0xc5bc:	jmp	0xc57b


0x5a65:	test	eax, eax
0x5a67:	setne	al
0x5a6a:	jmp	0x59b3


0x59b3:	test	al, al
0x59b5:	je	0x5a40


0x5a40:	mov	eax, dword ptr [rsp + 0x58]
0x5a44:	and	eax, 0xf000
0x5a49:	cmp	eax, 0xa000
0x5a4e:	je	0x5a70


0x59bb:	call	0x20b0


0x5a70:	cmp	qword ptr [rsp + 0x10], 0
0x5a76:	je	0x5c26


0x5a50:	cmp	eax, 0x4000
0x5a55:	je	0x5900


0x5c26:	lea	r8, [rip + 0x1833]
0x5c2d:	lea	rcx, [rip + 0x17ec]
0x5c34:	xor	esi, esi
0x5c36:	lea	rdx, [rip + 0x1773]
0x5c3d:	mov	edi, 7
0x5c42:	call	0x6940


0x5a7c:	mov	rdx, qword ptr [rsp + 8]
0x5a81:	mov	rsi, qword ptr [rsp + 0x20]
0x5a86:	mov	rdi, qword ptr [rsp + 0x10]
0x5a8b:	call	0x6070


0x5a5b:	jmp	0x58ee


0x58ee:	cmp	byte ptr [r13], 0
0x58f3:	je	0x5900


0x5a90:	test	al, al
0x5a92:	je	0x5b50


0x5b50:	mov	rdx, qword ptr [rsp + 8]
0x5b55:	mov	rsi, qword ptr [rsp + 0x20]
0x5b5a:	mov	rdi, qword ptr [rsp + 0x10]
0x5b5f:	call	0x5fe0


0x5a98:	cmp	dword ptr [rsp + 4], 2
0x5a9d:	je	0x5900


0x5aa3:	call	0x20b0


0x5b64:	mov	rsi, qword ptr [rsp + 0x70]
0x5b69:	mov	rdi, rbp
0x5b6c:	call	0xc4f0


0x5b71:	test	rax, rax
0x5b74:	mov	r14, rax
0x5b77:	je	0x5ce2


0x5ce2:	call	0x20b0


0x5b7d:	mov	rdi, rax
0x5b80:	call	0x21b0


0x5b85:	mov	rdi, r13
0x5b88:	mov	r12, rax
0x5b8b:	mov	qword ptr [rsp + 0x20], rax
0x5b90:	call	0x21b0


0x5b95:	cmp	qword ptr [rsp + 0x30], 0
0x5b9b:	mov	rdx, rax
0x5b9e:	lea	rcx, [r12 + rdx + 1]
0x5ba3:	je	0x5c9f


0x5c9f:	cmp	rcx, 0x1000
0x5ca6:	mov	eax, 0x1000
0x5cab:	mov	qword ptr [rsp + 0x38], rdx
0x5cb0:	cmovae	rax, rcx
0x5cb4:	mov	rdi, rax
0x5cb7:	mov	qword ptr [rsp + 0x30], rax
0x5cbc:	call	0xadd0


0x5ba9:	cmp	qword ptr [rsp + 0x30], rcx
0x5bae:	jae	0x5bd1


0x5bb0:	mov	rdi, qword ptr [rsp + 0x28]
0x5bb5:	mov	rsi, rcx
0x5bb8:	mov	qword ptr [rsp + 0x38], rdx
0x5bbd:	mov	qword ptr [rsp + 0x30], rcx
0x5bc2:	call	0xae30


0x5bd1:	mov	r12, qword ptr [rsp + 0x28]
0x5bd6:	mov	rdi, qword ptr [rsp + 0x20]
0x5bdb:	add	rdx, 1
0x5bdf:	mov	rsi, r13
0x5be2:	add	rdi, r12
0x5be5:	mov	r13, r12
0x5be8:	call	0x2490


0x5bc7:	mov	rdx, qword ptr [rsp + 0x38]
0x5bcc:	mov	qword ptr [rsp + 0x28], rax
0x5bd1:	mov	r12, qword ptr [rsp + 0x28]
0x5bd6:	mov	rdi, qword ptr [rsp + 0x20]
0x5bdb:	add	rdx, 1
0x5bdf:	mov	rsi, r13
0x5be2:	add	rdi, r12
0x5be5:	mov	r13, r12
0x5be8:	call	0x2490


0x5cc1:	mov	rdx, qword ptr [rsp + 0x38]
0x5cc6:	mov	qword ptr [rsp + 0x28], rax
0x5ccb:	jmp	0x5bd1


0x5c47:	test	rax, rax
0x5c4a:	mov	qword ptr [rsp + 0x10], rax
0x5c4f:	jne	0x5a7c


0x5c55:	call	0xb020


0x5ce7:	cmp	dword ptr [rsp + 4], 2
0x5cec:	mov	r14, rax
0x5cef:	mov	edx, dword ptr [rax]
0x5cf1:	jne	0x5cfc


0x5cf3:	cmp	edx, 0xc
0x5cf6:	jne	0x5900


0x5cfc:	mov	r12, r14
0x5cff:	jmp	0x5ab0


0x5ab0:	mov	rdi, qword ptr [rsp + 0x28]
0x5ab5:	mov	dword ptr [rsp + 4], edx
0x5ab9:	call	0x2070


0x5abe:	mov	rdi, rbp
0x5ac1:	call	0x2070


0x5ac6:	mov	edx, dword ptr [rsp + 4]
0x5aca:	mov	rdi, qword ptr [rsp + 0x10]
0x5acf:	mov	dword ptr [rsp + 4], edx
0x5ad3:	call	0x6b90


0x5aa8:	mov	edx, 0x28
0x5aad:	mov	r12, rax
0x5ab0:	mov	rdi, qword ptr [rsp + 0x28]
0x5ab5:	mov	dword ptr [rsp + 4], edx
0x5ab9:	call	0x2070


0x59c0:	mov	r14, rax
0x59c3:	mov	edx, dword ptr [rax]
0x59c5:	mov	eax, dword ptr [rsp + 4]
0x59c9:	test	eax, eax
0x59cb:	je	0x59fe


0x59fe:	mov	r12, r14
0x5a01:	mov	rdi, qword ptr [rsp + 0x28]
0x5a06:	mov	dword ptr [rsp + 4], edx
0x5a0a:	call	0x2070


0x59cd:	cmp	eax, 1
0x59d0:	jne	0x58e6


0x59d6:	lea	rsi, [rip + 0xa6f1]
0x59dd:	mov	rdi, r13
0x59e0:	mov	dword ptr [rsp + 0x38], edx
0x59e4:	call	0x22e0


0x59e9:	cmp	byte ptr [r13 + rax], 0
0x59ef:	mov	edx, dword ptr [rsp + 0x38]
0x59f3:	jne	0x59fe


0x59f5:	cmp	edx, 2
0x59f8:	je	0x5900


0xa57c:	test	eax, eax
0xa57e:	jne	0xa630


0xa584:	mov	rdi, rbx
0xa587:	call	0x2070


0xa630:	call	0x20b0


0xa635:	mov	esi, dword ptr [rax]
0xa637:	lea	rdx, [rip + 0x6639]
0xa63e:	mov	rcx, rbx
0xa641:	mov	edi, 1
0xa646:	xor	eax, eax
0xa648:	call	0x24a0


0xa64d:	jmp	0xa584


0xa58c:	mov	rdi, r12
0xa58f:	call	0x5e50


0xa594:	lea	rcx, [rsp + 0x90]
0xa59c:	mov	r8d, 0x100
0xa5a2:	mov	rdx, rax
0xa5a5:	mov	esi, ebp
0xa5a7:	mov	edi, 1
0xa5ac:	mov	rbx, rax
0xa5af:	call	0x2230


0xa5b4:	test	eax, eax
0xa5b6:	jne	0xa608


0xa5b8:	xor	ebp, ebp
0xa5ba:	mov	rax, qword ptr [rsp + 0x98]
0xa5c2:	cmp	qword ptr [rsp + 8], rax
0xa5c7:	jne	0xa5d9


0xa608:	call	0x20b0


0xa5c9:	mov	rax, qword ptr [rsp + 0x90]
0xa5d1:	cmp	qword ptr [rsp], rax
0xa5d5:	sete	bpl
0xa5d9:	mov	rdi, rbx
0xa5dc:	call	0x2070


0xa5d9:	mov	rdi, rbx
0xa5dc:	call	0x2070


0xa5e1:	mov	rdx, qword ptr [rsp + 0x128]
0xa5e9:	xor	rdx, qword ptr fs:[0x28]
0xa5f2:	mov	eax, ebp
0xa5f4:	jne	0xa652


0xa5f6:	add	rsp, 0x138
0xa5fd:	pop	rbx
0xa5fe:	pop	rbp
0xa5ff:	pop	r12
0xa601:	pop	r13
0xa603:	ret	


0xa652:	call	0x21f0


0xa60d:	mov	esi, dword ptr [rax]
0xa60f:	lea	rdx, [rip + 0x6661]
0xa616:	mov	rcx, rbx
0xa619:	mov	edi, 1
0xa61e:	xor	eax, eax
0xa620:	call	0x24a0


0xa625:	jmp	0xa5b8


0xbc93:	cmp	rax, -1
0xbc97:	je	0xbed0


0xbed0:	mov	rdi, qword ptr [rsp + 0x48]
0xbed5:	call	0x2070


0xbc9d:	lea	rcx, [rsp + 0x1c]
0xbca2:	lea	rdx, [rsp + 0x18]
0xbca7:	sub	rsp, 8
0xbcab:	lea	rbx, [rsp + 0x1f]
0xbcb0:	lea	rsi, [rip + 0x4f49]
0xbcb7:	push	rbx
0xbcb8:	lea	rax, [rsp + 0x34]
0xbcbd:	push	rax
0xbcbe:	lea	rax, [rsp + 0x38]
0xbcc3:	push	rax
0xbcc4:	mov	rdi, qword ptr [rsp + 0x68]
0xbcc9:	xor	eax, eax
0xbccb:	lea	r9, [rsp + 0x5c]
0xbcd0:	lea	r8, [rsp + 0x58]
0xbcd5:	call	0x2410


0x2410:	jmp	qword ptr [rip + 0x211aea]




0xbeda:	test	byte ptr [rbp], 0x20
0xbede:	jne	0xc440


0xbee4:	mov	rdi, rbp
0xbee7:	call	0xcb80


0xc440:	call	0x20b0


0xc445:	mov	r13d, dword ptr [rax]
0xc448:	mov	r12, rax
0xc44b:	mov	rdi, rbp
0xc44e:	call	0xcb80


0xc0b3:	test	rax, rax
0xc0b6:	mov	rbx, rax
0xc0b9:	je	0xc45c


0xc45c:	xor	eax, eax
0xc45e:	jmp	0xbf01


0xc0bf:	mov	rdi, rbx
0xc0c2:	lea	r14, [rsp + 0x40]
0xc0c7:	lea	rbp, [rip + 0x4ab3]
0xc0ce:	call	0x23e0


0xbf01:	mov	rbx, qword ptr [rsp + 0x58]
0xbf06:	xor	rbx, qword ptr fs:[0x28]
0xbf0f:	jne	0xc463


0x23e0:	jmp	qword ptr [rip + 0x211b02]


0xbf15:	add	rsp, 0x68
0xbf19:	pop	rbx
0xbf1a:	pop	rbp
0xbf1b:	pop	r12
0xbf1d:	pop	r13
0xbf1f:	pop	r14
0xbf21:	pop	r15
0xbf23:	ret	


0xc463:	call	0x21f0




0x86f8:	test	eax, eax
0x86fa:	jns	0x86a0


0x86fc:	test	byte ptr [rsp + 0xc], 2
0x8701:	jne	0x8738


0x86a0:	mov	ecx, 0x7fffffff
0x86a5:	sub	ecx, ebp
0x86a7:	cmp	ecx, eax
0x86a9:	jl	0x87c0


0x8703:	mov	edi, dword ptr [rsp + 0x1c]
0x8707:	call	0x2100


0x87c0:	mov	ebp, 0x7fffffff
0x87c5:	jmp	0x873d


0x86af:	add	ebp, eax
0x86b1:	mov	rdi, r12
0x86b4:	add	rbx, r15
0x86b7:	call	0x2550


0x2550:	jmp	qword ptr [rip + 0x211a4a]




0x870c:	test	eax, eax
0x870e:	jne	0x86b1


0x8710:	cmp	ebp, 0x7fffffff
0x8716:	je	0x87c0


0x86b1:	mov	rdi, r12
0x86b4:	add	rbx, r15
0x86b7:	call	0x2550


0x871c:	add	ebp, 1
0x871f:	jmp	0x86b1


0x9dad:	mov	dword ptr [rbp], r12d
0x9db1:	pop	rbx
0x9db2:	pop	rbp
0x9db3:	pop	r12
0x9db5:	ret	


0x9c6e:	mov	dword ptr [rip + 0x20a643], r12d
0x9c75:	mov	eax, dword ptr [rbp + 4]
0x9c78:	shl	r15, 4
0x9c7c:	sub	rsp, 8
0x9c80:	add	rbx, r15
0x9c83:	lea	r15, [rbp + 8]
0x9c87:	mov	r8d, dword ptr [rbp]
0x9c8b:	mov	r11, qword ptr [rbx]
0x9c8e:	mov	r12, qword ptr [rbx + 8]
0x9c92:	mov	rcx, r14
0x9c95:	or	eax, 1
0x9c98:	mov	dword ptr [rsp + 0x24], eax
0x9c9c:	push	qword ptr [rbp + 0x30]
0x9c9f:	mov	r9d, eax
0x9ca2:	push	qword ptr [rbp + 0x28]
0x9ca5:	push	r15
0x9ca7:	mov	rsi, r11
0x9caa:	mov	rdx, qword ptr [rsp + 0x28]
0x9caf:	mov	rdi, r12
0x9cb2:	mov	qword ptr [rsp + 0x30], r11
0x9cb7:	call	0x8990


0xb19a:	mov	edx, dword ptr [rsp + 8]
0xb19e:	mov	rsi, qword ptr [rax]
0xb1a1:	mov	rax, rbp
0xb1a4:	jmp	0xb1b7


0xb1b7:	movzx	ecx, bl
0xb1ba:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0xb1bf:	jne	0xb1b0


0xb1c1:	cmp	bl, 0x2d
0xb1c4:	je	0xb218


0xb1b0:	add	rax, 1
0xb1b4:	movzx	ebx, byte ptr [rax]
0xb1b7:	movzx	ecx, bl
0xb1ba:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0xb1bf:	jne	0xb1b0


0xb218:	mov	ebp, 4
0xb21d:	mov	rdi, qword ptr [rsp + 0x18]
0xb222:	xor	rdi, qword ptr fs:[0x28]
0xb22b:	mov	eax, ebp
0xb22d:	jne	0xb4c0


0xb1c6:	xor	ecx, ecx
0xb1c8:	mov	rsi, r15
0xb1cb:	mov	rdi, rbp
0xb1ce:	call	0x2290


0xb233:	add	rsp, 0x28
0xb237:	pop	rbx
0xb238:	pop	rbp
0xb239:	pop	r12
0xb23b:	pop	r13
0xb23d:	pop	r14
0xb23f:	pop	r15
0xb241:	ret	


0xb4c0:	call	0x21f0


0x2290:	jmp	qword ptr [rip + 0x211baa]




0x800f:	test	eax, eax
0x8011:	jne	0x8058


0x8013:	movzx	esi, byte ptr [rbx]
0x8016:	lea	edx, [rsi - 0x30]
0x8019:	cmp	dl, 9
0x801c:	jbe	0x8048


0x8058:	mov	rdx, qword ptr [r12]
0x805c:	mov	dword ptr [r13], 0
0x8064:	test	rdx, rdx
0x8067:	jne	0x7fd5


0x8048:	mov	rdx, qword ptr [r12]
0x804c:	mov	dword ptr [r13], ebp
0x8050:	jmp	0x8064


0x801e:	mov	rcx, qword ptr [rsp]
0x8022:	cmp	rbx, rcx
0x8025:	jne	0x8039


0x806d:	lea	rdi, [rip + 0x7128]
0x8074:	call	0x2050


0x8064:	test	rdx, rdx
0x8067:	jne	0x7fd5


0x8027:	jmp	0x8100


0x8039:	add	rbx, 1
0x803d:	movzx	edi, byte ptr [rbx]
0x8040:	lea	edx, [rdi - 0x30]
0x8043:	cmp	dl, 9
0x8046:	ja	0x8030


0x8100:	cmp	byte ptr [rcx - 1], 0x42
0x8104:	je	0x8118


0x8030:	cmp	rbx, rcx
0x8033:	je	0x8100


0x8118:	or	ebp, 0x180
0x811e:	cmp	byte ptr [rcx - 2], 0x69
0x8122:	jne	0x8048


0x8106:	or	bpl, 0x80
0x810a:	or	ebp, 0x20
0x810d:	jmp	0x8048


0x8128:	jmp	0x810a


0x810a:	or	ebp, 0x20
0x810d:	jmp	0x8048


0x8079:	cmp	rax, 1
0x807d:	sbb	rax, rax
0x8080:	and	eax, 0x200
0x8085:	add	rax, 0x200
0x808b:	mov	qword ptr [r12], rax
0x808f:	mov	eax, 4
0x8094:	jmp	0x7fd5


0x8784:	mov	edx, dword ptr [rsp + 0xc]
0x8788:	mov	rcx, qword ptr [rax]
0x878b:	xor	ebp, ebp
0x878d:	and	edx, 2
0x8790:	add	rbx, 1
0x8794:	movzx	eax, byte ptr [rbx - 1]
0x8798:	movzx	eax, word ptr [rcx + rax*2]
0x879c:	test	ah, 0x40
0x879f:	jne	0x87a9


0x87a1:	test	edx, edx
0x87a3:	jne	0x8738


0x87a9:	cmp	ebp, 0x7fffffff
0x87af:	je	0x873d


0x87a5:	test	al, 2
0x87a7:	jne	0x87b4


0x87b1:	add	ebp, 1
0x87b4:	cmp	r13, rbx
0x87b7:	jne	0x8790


0x87b4:	cmp	r13, rbx
0x87b7:	jne	0x8790


0x87b9:	jmp	0x873d


0x8790:	add	rbx, 1
0x8794:	movzx	eax, byte ptr [rbx - 1]
0x8798:	movzx	eax, word ptr [rcx + rax*2]
0x879c:	test	ah, 0x40
0x879f:	jne	0x87a9


0xcc37:	mov	rdi, rbx
0xcc3a:	pop	rbx
0xcc3b:	jmp	0x23d0


0xba93:	test	eax, eax
0xba95:	js	0xba00


0xba9b:	mov	dword ptr [rip + 0x20883b], 1
0xbaa5:	jmp	0xb9c3


0x5445:	test	eax, eax
0x5447:	js	0x5680


0x5680:	mov	rsi, r12
0x5683:	mov	edi, 4
0x5688:	call	0xa240


0x59ae:	test	eax, eax
0x59b0:	setne	al
0x59b3:	test	al, al
0x59b5:	je	0x5a40


0x5523:	test	eax, eax
0x5525:	jns	0x5460


0x552b:	lea	rsi, [rip + 0xa9d9]
0x5532:	mov	edi, 4
0x5537:	call	0xa240


0x5460:	mov	rax, qword ptr [rbp - 0x160]
0x5467:	cmp	qword ptr [rbp - 0xd0], rax
0x546e:	jne	0x55b0


0x5474:	mov	rax, qword ptr [rbp - 0x158]
0x547b:	cmp	qword ptr [rbp - 0xc8], rax
0x5482:	je	0x55b0


0x55b0:	call	0xb060


0x5488:	mov	rdi, rbx
0x548b:	call	0x21e0


0x5490:	test	eax, eax
0x5492:	js	0x56c0


0x56c0:	lea	rsi, [rip + 0xa844]
0x56c7:	mov	edi, 4
0x56cc:	call	0xa240


0x5498:	movdqa	xmm0, xmmword ptr [rbp - 0xd0]
0x54a0:	movaps	xmmword ptr [rbp - 0x160], xmm0
0x54a7:	movdqa	xmm0, xmmword ptr [rbp - 0xc0]
0x54af:	movaps	xmmword ptr [rbp - 0x150], xmm0
0x54b6:	movdqa	xmm0, xmmword ptr [rbp - 0xb0]
0x54be:	movaps	xmmword ptr [rbp - 0x140], xmm0
0x54c5:	movdqa	xmm0, xmmword ptr [rbp - 0xa0]
0x54cd:	movaps	xmmword ptr [rbp - 0x130], xmm0
0x54d4:	movdqa	xmm0, xmmword ptr [rbp - 0x90]
0x54dc:	movaps	xmmword ptr [rbp - 0x120], xmm0
0x54e3:	movdqa	xmm0, xmmword ptr [rbp - 0x80]
0x54e8:	movaps	xmmword ptr [rbp - 0x110], xmm0
0x54ef:	movdqa	xmm0, xmmword ptr [rbp - 0x70]
0x54f4:	movaps	xmmword ptr [rbp - 0x100], xmm0
0x54fb:	movdqa	xmm0, xmmword ptr [rbp - 0x60]
0x5500:	movaps	xmmword ptr [rbp - 0xf0], xmm0
0x5507:	movdqa	xmm0, xmmword ptr [rbp - 0x50]
0x550c:	movaps	xmmword ptr [rbp - 0xe0], xmm0
0x5513:	mov	rdx, r12
0x5516:	mov	rsi, rbx
0x5519:	mov	edi, 1
0x551e:	call	0x2390


0x55b5:	mov	rbx, rax
0x55b8:	jmp	0x5566


0x5566:	mov	rdi, r13
0x5569:	mov	r12d, dword ptr [r14]
0x556c:	call	0xa770


0x5571:	test	eax, eax
0x5573:	jne	0x570e


0x5579:	mov	rdi, r13
0x557c:	call	0xa790


0x570e:	lea	rsi, [rip + 0xa833]
0x5715:	mov	edx, 5
0x571a:	xor	edi, edi
0x571c:	call	0x2190


0x5721:	mov	esi, dword ptr [r14]
0x5724:	mov	rdx, rax
0x5727:	mov	edi, 1
0x572c:	xor	eax, eax
0x572e:	call	0x24a0


0x5581:	mov	dword ptr [r14], r12d
0x5584:	mov	rcx, qword ptr [rbp - 0x38]
0x5588:	xor	rcx, qword ptr fs:[0x28]
0x5591:	mov	rax, rbx
0x5594:	jne	0x5733


0x4bfe:	test	eax, eax
0x4c00:	jne	0x4b32


0x4c06:	mov	rdi, qword ptr [rip + 0x20f803]
0x4c0d:	test	rdi, rdi
0x4c10:	je	0x4b32


0x4c16:	mov	rax, qword ptr [rsp + 0xe0]
0x4c1e:	lea	rsi, [rsp + 0xa0]
0x4c26:	mov	qword ptr [rsp + 0xa0], rax
0x4c2e:	call	0x66d0


0xad16:	mov	rax, qword ptr [rsp + 0x78]
0xad1b:	xor	rax, qword ptr fs:[0x28]
0xad24:	jne	0xad30


0xad26:	add	rsp, 0xb8
0xad2d:	pop	rbx
0xad2e:	pop	rbp
0xad2f:	ret	


0xad30:	call	0x21f0


0xac40:	mov	rax, qword ptr [rsp + 0x58]
0xac45:	xor	rax, qword ptr fs:[0x28]
0xac4e:	jne	0xac55


0xac50:	add	rsp, 0x68
0xac54:	ret	


0xac55:	call	0x21f0


0x600d:	mov	qword ptr [rbx], rax
0x6010:	mov	rax, qword ptr [rbp + 8]
0x6014:	mov	rsi, rbx
0x6017:	mov	rdi, r13
0x601a:	mov	qword ptr [rbx + 8], rax
0x601e:	mov	rax, qword ptr [rbp]
0x6022:	mov	qword ptr [rbx + 0x10], rax
0x6026:	call	0x7140


0x451b:	cmp	byte ptr [rsp + 8], 0
0x4520:	mov	r15, rax
0x4523:	mov	qword ptr [rsp], rax
0x4527:	je	0x4570


0x4570:	lea	rax, [rip + 0xc3e2]
0x4577:	test	rbx, rbx
0x457a:	mov	rsi, qword ptr [rsp + 0x48]
0x457f:	mov	qword ptr [rsp + 0xa8], 1
0x458b:	mov	qword ptr [rsp + 0xa0], 1
0x4597:	cmove	rbx, rax
0x459b:	mov	rax, qword ptr [rsp + 0x50]
0x45a0:	mov	byte ptr [rsp + 0xc0], 0
0x45a8:	cmp	rsi, -3
0x45ac:	mov	qword ptr [rsp + 0xb0], rsi
0x45b4:	mov	qword ptr [rsp + 0xd0], -1
0x45c0:	mov	byte ptr [rsp + 0xd8], 0
0x45c8:	mov	qword ptr [rsp + 0xc8], rax
0x45d0:	mov	qword ptr [rsp + 0xb8], rax
0x45d8:	ja	0x45e4


0x4529:	mov	rdi, rax
0x452c:	call	0x21b0


0x45da:	cmp	rax, -3
0x45de:	jbe	0x4a50


0x45e4:	mov	r8, qword ptr [rsp + 0x38]
0x45e9:	mov	rdx, qword ptr [rip + 0x20fe10]
0x45f0:	mov	rcx, qword ptr [rsp + 0x30]
0x45f5:	mov	r9, qword ptr [rsp + 0x20]
0x45fa:	mov	rdi, qword ptr [rsp + 0x28]
0x45ff:	mov	qword ptr [rsp + 0x90], -1
0x460b:	cmp	r8, -3
0x460f:	mov	qword ptr [rsp + 0x68], rdx
0x4614:	mov	qword ptr [rsp + 0x78], r8
0x4619:	setbe	dl
0x461c:	and	dl, byte ptr [rsp + 0x40]
0x4620:	cmp	rcx, -3
0x4624:	mov	qword ptr [rsp + 0x60], r9
0x4629:	mov	qword ptr [rsp + 0x70], rdi
0x462e:	mov	qword ptr [rsp + 0x88], rcx
0x4636:	mov	byte ptr [rsp + 0x98], 0
0x463e:	mov	byte ptr [rsp + 0x80], dl
0x4645:	ja	0x4651


0x4a50:	mov	rdx, rsi
0x4a53:	sub	rdx, rax
0x4a56:	cmp	rsi, rax
0x4a59:	mov	qword ptr [rsp + 0xd0], rdx
0x4a61:	setb	byte ptr [rsp + 0xd8]
0x4a69:	jmp	0x45e4


0x4647:	cmp	rdi, -3
0x464b:	jbe	0x4a32


0x4651:	cmp	byte ptr [rip + 0x20fd80], 0
0x4658:	je	0x46d0


0x4a32:	mov	r10, rdi
0x4a35:	sub	r10, rcx
0x4a38:	cmp	rdi, rcx
0x4a3b:	mov	qword ptr [rsp + 0x90], r10
0x4a43:	setb	byte ptr [rsp + 0x98]
0x4a4b:	jmp	0x4651


0x46d0:	xor	ebp, ebp
0x46d2:	cmp	qword ptr [rip + 0x20fc96], 0
0x46da:	mov	rcx, qword ptr [rip + 0x20fc97]
0x46e1:	je	0x47a1


0x465a:	cmp	byte ptr [rsp + 0xf], 0
0x465f:	je	0x46d0


0x47a1:	mov	rdi, qword ptr [rsp]
0x47a5:	call	0x2070


0x46e7:	lea	r15, [rip + 0xac02]
0x46ee:	nop	
0x46f0:	mov	rax, qword ptr [rcx + rbp*8]
0x46f4:	lea	r14, [rbp*8]
0x46fc:	mov	edx, dword ptr [rax + 0x10]
0x46ff:	cmp	edx, 1
0x4702:	je	0x48c0


0x4661:	cmp	rsi, -3
0x4665:	ja	0x466e


0x48c0:	lea	rcx, [rsp + 0xa0]
0x48c8:	jmp	0x4719


0x4708:	jb	0x48b0


0x4667:	add	qword ptr [rip + 0x20fd5a], rsi
0x466e:	cmp	rax, -3
0x4672:	ja	0x467b


0x466e:	cmp	rax, -3
0x4672:	ja	0x467b


0x4719:	cmp	dword ptr [rax], 0xb
0x471c:	ja	0x4d10


0x48b0:	lea	rcx, [rsp + 0x60]
0x48b5:	jmp	0x4719


0x470e:	cmp	edx, 2
0x4711:	jne	0x4d2f


0x4674:	add	qword ptr [rip + 0x20fd55], rax
0x467b:	cmp	rdi, -3
0x467f:	ja	0x468c


0x467b:	cmp	rdi, -3
0x467f:	ja	0x468c


0x4722:	mov	eax, dword ptr [rax]
0x4724:	movsxd	rax, dword ptr [r15 + rax*4]
0x4728:	add	rax, r15
0x472b:	jmp	rax


0x4d10:	lea	rcx, [rip + 0xa621]
0x4d17:	lea	rsi, [rip + 0xa2d3]
0x4d1e:	lea	rdi, [rip + 0xa326]
0x4d25:	mov	edx, 0x4ce
0x4d2a:	call	0x2280


0x4717:	xor	ecx, ecx
0x4719:	cmp	dword ptr [rax], 0xb
0x471c:	ja	0x4d10


0x4d2f:	lea	rcx, [rip + 0xa602]
0x4d36:	lea	rsi, [rip + 0xa2b4]
0x4d3d:	lea	rdi, [rip + 0xa2ee]
0x4d44:	mov	edx, 0x468
0x4d49:	call	0x2280


0x4681:	imul	rdi, r9
0x4685:	add	qword ptr [rip + 0x20fd1c], rdi
0x468c:	cmp	rcx, -3
0x4690:	ja	0x469d


0x468c:	cmp	rcx, -3
0x4690:	ja	0x469d


0x4692:	imul	rcx, r9
0x4696:	add	qword ptr [rip + 0x20fd13], rcx
0x469d:	cmp	r8, -3
0x46a1:	ja	0x46d0


0x469d:	cmp	r8, -3
0x46a1:	ja	0x46d0


0x46a3:	movzx	edi, byte ptr [rip + 0x20fd16]
0x46aa:	mov	rax, r9
0x46ad:	imul	rax, r8
0x46b1:	mov	rcx, qword ptr [rip + 0x20fd00]
0x46b8:	mov	esi, edi
0x46ba:	xor	esi, 1
0x46bd:	cmp	sil, dl
0x46c0:	je	0x4ce0


0x4ce0:	test	dil, dil
0x4ce3:	je	0x4d61


0x46c6:	add	rax, rcx
0x46c9:	mov	qword ptr [rip + 0x20fce8], rax
0x46d0:	xor	ebp, ebp
0x46d2:	cmp	qword ptr [rip + 0x20fc96], 0
0x46da:	mov	rcx, qword ptr [rip + 0x20fc97]
0x46e1:	je	0x47a1


0x4d61:	neg	rax
0x4d64:	jmp	0x4ce8


0x4ce5:	neg	rcx
0x4ce8:	cmp	rcx, rax
0x4ceb:	jbe	0x4d4e


0x4ce8:	cmp	rcx, rax
0x4ceb:	jbe	0x4d4e


0x4d4e:	sub	rax, rcx
0x4d51:	mov	byte ptr [rip + 0x20f668], sil
0x4d58:	mov	qword ptr [rip + 0x20f659], rax
0x4d5f:	jmp	0x4cf7


0x4ced:	sub	rcx, rax
0x4cf0:	mov	qword ptr [rip + 0x20f6c1], rcx
0x4cf7:	cmp	byte ptr [rip + 0x20f6c2], 0
0x4cfe:	je	0x46d0


0x4cf7:	cmp	byte ptr [rip + 0x20f6c2], 0
0x4cfe:	je	0x46d0


0x4d04:	neg	qword ptr [rip + 0x20f6ad]
0x4d0b:	jmp	0x46d0


0x47aa:	jmp	0x43ac


0x4531:	cmp	rax, 0x24
0x4535:	jbe	0x4570


0x4537:	lea	rdi, [r15 + rax - 0x24]
0x453c:	lea	rsi, [rip + 0xaad7]
0x4543:	call	0x22e0


0x4548:	cmp	rax, 0x24
0x454c:	jne	0x4570


0x454e:	mov	rdi, qword ptr [rsp]
0x4552:	xor	esi, esi
0x4554:	call	0x5740


0x4559:	test	rax, rax
0x455c:	mov	r14, rax
0x455f:	je	0x4570


0x4561:	mov	rdi, qword ptr [rsp]
0x4565:	call	0x2070


0x456a:	mov	qword ptr [rsp], r14
0x456e:	nop	
0x4570:	lea	rax, [rip + 0xc3e2]
0x4577:	test	rbx, rbx
0x457a:	mov	rsi, qword ptr [rsp + 0x48]
0x457f:	mov	qword ptr [rsp + 0xa8], 1
0x458b:	mov	qword ptr [rsp + 0xa0], 1
0x4597:	cmove	rbx, rax
0x459b:	mov	rax, qword ptr [rsp + 0x50]
0x45a0:	mov	byte ptr [rsp + 0xc0], 0
0x45a8:	cmp	rsi, -3
0x45ac:	mov	qword ptr [rsp + 0xb0], rsi
0x45b4:	mov	qword ptr [rsp + 0xd0], -1
0x45c0:	mov	byte ptr [rsp + 0xd8], 0
0x45c8:	mov	qword ptr [rsp + 0xc8], rax
0x45d0:	mov	qword ptr [rsp + 0xb8], rax
0x45d8:	ja	0x45e4


0x522a:	mov	qword ptr [rsp + 8], rax
0x522f:	mov	r12, rax
0x5232:	nop	word ptr [rax + rax]
0x5238:	mov	esi, 0x2c
0x523d:	mov	rdi, r12
0x5240:	xor	r13d, r13d
0x5243:	call	0x2220


0x2220:	jmp	qword ptr [rip + 0x211be2]




0x5248:	test	rax, rax
0x524b:	je	0x5254


0x5254:	lea	r15, [rip + 0x20edcd]
0x525b:	xor	ebx, ebx
0x525d:	nop	dword ptr [rax]
0x5260:	mov	rbp, qword ptr [r15]
0x5263:	mov	rsi, r12
0x5266:	mov	rdi, rbp
0x5269:	call	0x2340


0x524d:	lea	r13, [rax + 1]
0x5251:	mov	byte ptr [rax], 0
0x5254:	lea	r15, [rip + 0x20edcd]
0x525b:	xor	ebx, ebx
0x525d:	nop	dword ptr [rax]
0x5260:	mov	rbp, qword ptr [r15]
0x5263:	mov	rsi, r12
0x5266:	mov	rdi, rbp
0x5269:	call	0x2340


0x526e:	test	eax, eax
0x5270:	je	0x52c0


0x52c0:	mov	eax, ebx
0x52c2:	lea	rax, [rax + rax*2]
0x52c6:	shl	rax, 4
0x52ca:	cmp	byte ptr [r14 + rax + 0x2c], 0
0x52d0:	jne	0x5340


0x5272:	add	ebx, 1
0x5275:	add	r15, 0x30
0x5279:	cmp	ebx, 0xc
0x527c:	jne	0x5260


0x52d2:	mov	eax, 1
0x52d7:	mov	ecx, ebx
0x52d9:	shl	rax, cl
0x52dc:	test	eax, 0xfeb
0x52e1:	jne	0x5320


0x5340:	mov	rdi, rbp
0x5343:	call	0xa510


0x527e:	mov	rdi, r12
0x5281:	call	0xa510


0x5260:	mov	rbp, qword ptr [r15]
0x5263:	mov	rsi, r12
0x5266:	mov	rdi, rbp
0x5269:	call	0x2340


0x52e3:	test	al, 0x10
0x52e5:	jne	0x5330


0x5320:	xor	esi, esi
0x5322:	mov	edi, ebx
0x5324:	call	0x41a0


0x52e7:	test	al, 4
0x52e9:	je	0x535c


0x5330:	lea	rsi, [rip + 0x9de3]
0x5337:	mov	edi, ebx
0x5339:	call	0x41a0


0x535c:	lea	rcx, [rip + 0x9ffd]
0x5363:	lea	rsi, [rip + 0x9c87]
0x536a:	lea	rdi, [rip + 0x9daf]
0x5371:	mov	edx, 0x1dd
0x5376:	call	0x2280


0x52eb:	lea	rsi, [rip + 0x9e23]
0x52f2:	mov	edi, ebx
0x52f4:	call	0x41a0


0x52f9:	test	r13, r13
0x52fc:	mov	r12, r13
0x52ff:	jne	0x5238


0x5305:	mov	rdi, qword ptr [rsp + 8]
0x530a:	add	rsp, 0x18
0x530e:	pop	rbx
0x530f:	pop	rbp
0x5310:	pop	r12
0x5312:	pop	r13
0x5314:	pop	r14
0x5316:	pop	r15
0x5318:	jmp	0x2070


0x5238:	mov	esi, 0x2c
0x523d:	mov	rdi, r12
0x5240:	xor	r13d, r13d
0x5243:	call	0x2220


0x533e:	jmp	0x52f9


0x5329:	jmp	0x52f9


0xb1d3:	mov	rcx, qword ptr [r15]
0xb1d6:	mov	rbx, rax
0xb1d9:	cmp	rcx, rbp
0xb1dc:	je	0xb208


0xb208:	test	r13, r13
0xb20b:	mov	qword ptr [rsp + 8], rcx
0xb210:	jne	0xb250


0xb1de:	mov	eax, dword ptr [r12]
0xb1e2:	test	eax, eax
0xb1e4:	je	0xb248


0xb250:	movzx	r12d, byte ptr [rbp]
0xb255:	test	r12b, r12b
0xb258:	je	0xb218


0xb248:	xor	ebp, ebp
0xb24a:	jmp	0xb1f0


0xb1e6:	cmp	eax, 0x22
0xb1e9:	mov	ebp, 1
0xb1ee:	jne	0xb218


0xb25a:	movsx	esi, r12b
0xb25e:	mov	rdi, r13
0xb261:	xor	ebp, ebp
0xb263:	call	0x2220


0xb1f0:	test	r13, r13
0xb1f3:	je	0xb1fe


0xb1fe:	mov	qword ptr [r14], rbx
0xb201:	jmp	0xb21d


0xb1f5:	movzx	r12d, byte ptr [rcx]
0xb1f9:	test	r12b, r12b
0xb1fc:	jne	0xb277


0xb21d:	mov	rdi, qword ptr [rsp + 0x18]
0xb222:	xor	rdi, qword ptr fs:[0x28]
0xb22b:	mov	eax, ebp
0xb22d:	jne	0xb4c0


0xb277:	movsx	esi, r12b
0xb27b:	mov	rdi, r13
0xb27e:	mov	qword ptr [rsp + 8], rcx
0xb283:	call	0x2220


0xb288:	test	rax, rax
0xb28b:	mov	rcx, qword ptr [rsp + 8]
0xb290:	je	0xb35c


0xb35c:	mov	qword ptr [r14], rbx
0xb35f:	or	ebp, 2
0xb362:	jmp	0xb21d


0xb296:	lea	eax, [r12 - 0x45]
0xb29b:	cmp	al, 0x2f
0xb29d:	ja	0xb2f0


0xb29f:	movabs	rdx, 0x814400308945
0xb2a9:	bt	rdx, rax
0xb2ad:	jae	0xb2f0


0xb2f0:	mov	edi, 1
0xb2f5:	mov	esi, 0x400
0xb2fa:	sub	r12d, 0x42
0xb2fe:	cmp	r12b, 0x35
0xb302:	ja	0xb35c


0xb2af:	mov	esi, 0x30
0xb2b4:	mov	rdi, r13
0xb2b7:	mov	qword ptr [rsp + 8], rcx
0xb2bc:	call	0x2220


0xb304:	lea	rdx, [rip + 0x56c5]
0xb30b:	movzx	r12d, r12b
0xb30f:	movsxd	rax, dword ptr [rdx + r12*4]
0xb313:	add	rax, rdx
0xb316:	jmp	rax


0xb2c1:	test	rax, rax
0xb2c4:	mov	rcx, qword ptr [rsp + 8]
0xb2c9:	je	0xb2f0


0xb2cb:	movzx	eax, byte ptr [rcx + 1]
0xb2cf:	cmp	al, 0x44
0xb2d1:	je	0xb2df


0xb2df:	mov	edi, 2
0xb2e4:	mov	esi, 0x3e8
0xb2e9:	jmp	0xb2fa


0xb2d3:	cmp	al, 0x69
0xb2d5:	je	0xb4a8


0xb2fa:	sub	r12d, 0x42
0xb2fe:	cmp	r12b, 0x35
0xb302:	ja	0xb35c


0xb4a8:	xor	edi, edi
0xb4aa:	cmp	byte ptr [rcx + 2], 0x42
0xb4ae:	mov	esi, 0x400
0xb4b3:	sete	dil
0xb4b7:	lea	edi, [rdi + rdi + 1]
0xb4bb:	jmp	0xb2fa


0xb2db:	cmp	al, 0x42
0xb2dd:	jne	0xb2f0


0xb268:	test	rax, rax
0xb26b:	mov	ebx, 1
0xb270:	mov	rcx, qword ptr [rsp + 8]
0xb275:	je	0xb218


0x86bc:	test	eax, eax
0x86be:	jne	0x8672


0xc0d3:	test	rax, rax
0xc0d6:	mov	r13, rax
0xc0d9:	je	0xc31e


0xc31e:	mov	rdi, rbx
0xc321:	call	0x2080


0x2080:	jmp	qword ptr [rip + 0x211cb2]


0x2570:	jmp	qword ptr [rip + 0x211a3a]






0xbcda:	and	eax, 0xfffffffb
0xbcdd:	add	rsp, 0x20
0xbce1:	cmp	eax, 3
0xbce4:	jne	0xbc80


0xbce6:	movsxd	rdi, dword ptr [rsp + 0x24]
0xbceb:	lea	rsi, [rip + 0x4e75]
0xbcf2:	add	rdi, qword ptr [rsp + 0x48]
0xbcf7:	call	0x2580


0xbc80:	mov	rcx, rbp
0xbc83:	mov	edx, 0xa
0xbc88:	mov	rsi, r13
0xbc8b:	mov	rdi, r12
0xbc8e:	call	0x2330


0x2580:	jmp	qword ptr [rip + 0x211a32]




0xb7fe:	test	rax, rax
0xb801:	mov	rbx, rax
0xb804:	jne	0xb798


0xb806:	mov	dword ptr [r14], 0x24
0xb80d:	mov	ebx, 0xffffffff
0xb812:	jmp	0xb6e9


0xb798:	mov	byte ptr [rax], 0
0xb79b:	sub	rax, r15
0xb79e:	cmp	rax, 0xfff
0xb7a4:	jg	0xb8e2


0xb7aa:	mov	rsi, r15
0xb7ad:	mov	rdi, r12
0xb7b0:	mov	r13, r12
0xb7b3:	call	0xb670


0xb8e2:	lea	rcx, [rip + 0x5257]
0xb8e9:	lea	rsi, [rip + 0x51c8]
0xb8f0:	lea	rdi, [rip + 0x5220]
0xb8f7:	mov	edx, 0xb3
0xb8fc:	call	0x2280


0xb7b8:	test	eax, eax
0xb7ba:	mov	byte ptr [rbx], 0x2f
0xb7bd:	jne	0xb878


0xb7c3:	add	rbx, 1
0xb7c7:	lea	rsi, [rip + 0x4900]
0xb7ce:	mov	rdi, rbx
0xb7d1:	call	0x22e0


0xb7d6:	lea	r15, [rbx + rax]
0xb7da:	mov	rax, rbp
0xb7dd:	sub	rax, r15
0xb7e0:	cmp	rax, 0xfff
0xb7e6:	jle	0xb890


0xb833:	test	rax, rax
0xb836:	mov	rbx, rax
0xb839:	je	0xb886


0xb886:	mov	ebx, 0xffffffff
0xb88b:	jmp	0xb6e9


0xb83b:	lea	r13, [rsp + 4]
0xb840:	mov	byte ptr [rax], 0
0xb843:	mov	rsi, rbp
0xb846:	mov	rdi, r13
0xb849:	call	0xb670


0xb84e:	test	eax, eax
0xb850:	mov	byte ptr [rbx], 0x2f
0xb853:	jne	0xb878


0xb855:	add	rbx, 1
0xb859:	lea	rsi, [rip + 0x486e]
0xb860:	mov	rdi, rbx
0xb863:	call	0x22e0


0xb868:	lea	r15, [rbx + rax]
0xb86c:	jmp	0xb760


0x5bed:	mov	rdx, qword ptr [rsp + 0x20]
0x5bf2:	mov	rsi, r14
0x5bf5:	mov	rdi, r12
0x5bf8:	call	0x2360


0x5bfd:	cmp	byte ptr [r14], 0x2f
0x5c01:	mov	qword ptr [rsp + 0x20], r12
0x5c06:	lea	rax, [rbp + 1]
0x5c0a:	je	0x5d04


0x5d04:	mov	byte ptr [rbp], 0x2f
0x5d08:	mov	r15, rax
0x5d0b:	jmp	0x5c19


0x5c10:	cmp	r15, rax
0x5c13:	ja	0x5d22


0x5c19:	mov	rdi, r14
0x5c1c:	call	0x2070


0x5d22:	lea	rax, [r15 - 1]
0x5d26:	cmp	rbp, rax
0x5d29:	jae	0x5d32


0x5d2b:	cmp	byte ptr [r15 - 2], 0x2f
0x5d30:	jne	0x5d3d


0x5d32:	mov	r15, rax
0x5d35:	jmp	0x5c19


0x5d3d:	lea	r15, [rax - 1]
0x5d41:	cmp	rbp, r15
0x5d44:	je	0x5c19


0x5d4a:	cmp	byte ptr [r15 - 1], 0x2f
0x5d4f:	je	0x5c19


0x5d55:	jmp	0x5d3a


0x5d3a:	mov	rax, r15
0x5d3d:	lea	r15, [rax - 1]
0x5d41:	cmp	rbp, r15
0x5d44:	je	0x5c19


0x5c21:	jmp	0x5900


0x78ca:	mov	r8, r14
0x78cd:	add	r8, r15
0x78d0:	test	r12b, 4
0x78d4:	jne	0x79b8


0x42e1:	cmp	r13, rbx
0x42e4:	je	0x4324


0x8402:	test	eax, eax
0x8404:	mov	rdx, qword ptr [rsp + 0x28]
0x8409:	jne	0x8416


0x840b:	mov	dword ptr [rdx], 0xfffd
0x8411:	mov	byte ptr [rsp + 0x20], 1
0x8416:	add	rdx, 4
0x841a:	mov	edi, dword ptr [rdx]
0x841c:	test	edi, edi
0x841e:	jne	0x83f8


0x8416:	add	rdx, 4
0x841a:	mov	edi, dword ptr [rdx]
0x841c:	test	edi, edi
0x841e:	jne	0x83f8


0x8420:	mov	rdi, qword ptr [rsp]
0x8424:	mov	rsi, rbp
0x8427:	call	0x2110


0x83f8:	mov	qword ptr [rsp + 0x28], rdx
0x83fd:	call	0x2560


0x842c:	cmp	byte ptr [rsp + 0x20], 0
0x8431:	movsxd	rbp, eax
0x8434:	je	0x84f8


0x84f8:	mov	rax, qword ptr [r12]
0x84fc:	cmp	rax, rbp
0x84ff:	jae	0x8300


0x843a:	mov	rsi, qword ptr [rsp]
0x843e:	xor	edx, edx
0x8440:	xor	edi, edi
0x8442:	call	0x2500


0x8505:	mov	rax, qword ptr [rsp + 8]
0x850a:	add	rax, 1
0x850e:	mov	qword ptr [rsp + 0x20], rax
0x8513:	jmp	0x8450


0x8300:	mov	qword ptr [rsp + 8], 0
0x8309:	cmp	rbp, rax
0x830c:	jae	0x855a


0x2500:	jmp	qword ptr [rip + 0x211a72]


0x8450:	mov	rdi, qword ptr [rsp + 0x20]
0x8455:	call	0x23c0




0x845a:	test	rax, rax
0x845d:	mov	qword ptr [rsp + 8], rax
0x8462:	je	0x8520


0x8520:	test	bl, 1
0x8523:	jne	0x81ee


0x8468:	mov	r15, qword ptr [rsp]
0x846c:	mov	r14, qword ptr [r12]
0x8470:	mov	edi, dword ptr [r15]
0x8473:	test	edi, edi
0x8475:	je	0x854f


0x8529:	mov	r12, -1
0x8530:	jmp	0x82d1


0x854f:	mov	r15, qword ptr [rsp]
0x8553:	xor	ebp, ebp
0x8555:	jmp	0x84af


0x847b:	xor	ebp, ebp
0x847d:	jmp	0x848e


0x84af:	mov	r14, qword ptr [rsp + 8]
0x84b4:	mov	rdx, qword ptr [rsp + 0x20]
0x84b9:	mov	rsi, qword ptr [rsp]
0x84bd:	mov	dword ptr [r15], 0
0x84c4:	mov	rdi, r14
0x84c7:	call	0x2500


0x848e:	call	0x23b0


0x8493:	cmp	eax, -1
0x8496:	movsxd	rdx, eax
0x8499:	jne	0x84a7


0x849b:	mov	dword ptr [r15], 0xfffd
0x84a2:	mov	edx, 1
0x84a7:	add	rdx, rbp
0x84aa:	cmp	r14, rdx
0x84ad:	jae	0x8480


0x84a7:	add	rdx, rbp
0x84aa:	cmp	r14, rdx
0x84ad:	jae	0x8480


0x8480:	add	r15, 4
0x8484:	mov	edi, dword ptr [r15]
0x8487:	mov	rbp, rdx
0x848a:	test	edi, edi
0x848c:	je	0x84af


0x84f1:	movsxd	rbp, eax
0x84f4:	nop	dword ptr [rax]
0x84f8:	mov	rax, qword ptr [r12]
0x84fc:	cmp	rax, rbp
0x84ff:	jae	0x8300


0x2634:	lea	rdi, [rip + 0x3765]
0x263b:	call	0xefc0


0x2640:	lea	rsi, [rip + 0xd751]
0x2647:	mov	edx, 5
0x264c:	xor	edi, edi
0x264e:	mov	qword ptr [rip + 0x211d97], 0
0x2659:	mov	qword ptr [rip + 0x211d84], 0
0x2664:	mov	byte ptr [rip + 0x211da3], 0
0x266b:	mov	byte ptr [rip + 0x211d9a], 0
0x2672:	mov	dword ptr [rip + 0x211d8c], 0xffffffff
0x267c:	mov	byte ptr [rip + 0x211d56], 0
0x2683:	mov	byte ptr [rip + 0x211d73], 0
0x268a:	mov	dword ptr [rip + 0x211d64], 0
0x2694:	mov	byte ptr [rip + 0x211d3d], 0
0x269b:	mov	qword ptr [rip + 0x211cfa], 1
0x26a6:	call	0x2190


0x26ab:	mov	r12, rax
0x26ae:	nop	
0x26b0:	mov	edi, dword ptr [rsp + 8]
0x26b4:	lea	rdx, [rip + 0xca8e]
0x26bb:	mov	r8, r15
0x26be:	mov	rcx, rbx
0x26c1:	mov	rsi, r14
0x26c4:	mov	dword ptr [rsp + 0x80], 0xffffffff
0x26cf:	call	0x2200


0x2200:	jmp	qword ptr [rip + 0x211bf2]




0xcba4:	test	eax, eax
0xcba6:	je	0xcbe4


0xcba8:	call	0x20b0


0xcbad:	mov	r12d, dword ptr [rax]
0xcbb0:	mov	rdi, rbx
0xcbb3:	mov	rbp, rax
0xcbb6:	call	0x2170


0xcbbb:	test	r12d, r12d
0xcbbe:	jne	0xcbf0


0xcbc0:	pop	rbx
0xcbc1:	pop	rbp
0xcbc2:	pop	r12
0xcbc4:	ret	


0xcbf0:	mov	dword ptr [rbp], r12d
0xcbf4:	mov	eax, 0xffffffff
0xcbf9:	jmp	0xcbc0


0xc453:	mov	dword ptr [r12], r13d
0xc457:	jmp	0xc339


0xc339:	mov	qword ptr [r14], 0
0xc340:	mov	rdi, qword ptr [rsp + 0x40]
0xc345:	test	rdi, rdi
0xc348:	je	0xc366


0xc366:	mov	dword ptr [r12], r13d
0xc36a:	xor	eax, eax
0xc36c:	jmp	0xbf01


0xc359:	test	rbx, rbx
0xc35c:	mov	qword ptr [rsp + 0x40], rbx
0xc361:	mov	rdi, rbx
0xc364:	jne	0xc350


0xc350:	mov	rbx, qword ptr [rdi + 0x30]
0xc354:	call	0xbbe0


0xbeec:	cmp	eax, -1
0xbeef:	je	0xc32e


0xc32e:	call	0x20b0


0xbef5:	mov	qword ptr [r14], 0
0xbefc:	mov	rax, qword ptr [rsp + 0x40]
0xbf01:	mov	rbx, qword ptr [rsp + 0x58]
0xbf06:	xor	rbx, qword ptr fs:[0x28]
0xbf0f:	jne	0xc463


0xc333:	mov	r13d, dword ptr [rax]
0xc336:	mov	r12, rax
0xc339:	mov	qword ptr [r14], 0
0xc340:	mov	rdi, qword ptr [rsp + 0x40]
0xc345:	test	rdi, rdi
0xc348:	je	0xc366


0xc98a:	and	ebx, 0x20
0xc98d:	test	ebx, ebx
0xc98f:	jne	0xc9a8


0xc991:	test	eax, eax
0xc993:	je	0xc99f


0xc9a8:	test	eax, eax
0xc9aa:	jne	0xc9c8


0xc99f:	pop	rbx
0xc9a0:	pop	rbp
0xc9a1:	pop	r12
0xc9a3:	ret	


0xc995:	test	r12, r12
0xc998:	mov	eax, 0xffffffff
0xc99d:	je	0xc9d8


0xc9ac:	call	0x20b0


0xc9c8:	pop	rbx
0xc9c9:	mov	eax, 0xffffffff
0xc9ce:	pop	rbp
0xc9cf:	pop	r12
0xc9d1:	ret	


0xc9d8:	call	0x20b0


0xc9dd:	cmp	dword ptr [rax], 9
0xc9e0:	pop	rbx
0xc9e1:	pop	rbp
0xc9e2:	pop	r12
0xc9e4:	setne	al
0xc9e7:	movzx	eax, al
0xc9ea:	neg	eax
0xc9ec:	ret	


0xc9b1:	mov	dword ptr [rax], 0
0xc9b7:	mov	eax, 0xffffffff
0xc9bc:	pop	rbx
0xc9bd:	pop	rbp
0xc9be:	pop	r12
0xc9c0:	ret	


0x5db2:	test	eax, eax
0x5db4:	je	0x5dcc


0x5dcc:	mov	rdi, qword ptr [rip + 0x20e56d]
0x5dd3:	call	0xc970


0x5db6:	call	0x20b0


0x5dbb:	cmp	byte ptr [rip + 0x20e656], 0
0x5dc2:	mov	rbx, rax
0x5dc5:	je	0x5de3


0x5de3:	lea	rsi, [rip + 0xa191]
0x5dea:	xor	edi, edi
0x5dec:	mov	edx, 5
0x5df1:	call	0x2190


0x5dc7:	cmp	dword ptr [rax], 0x20
0x5dca:	jne	0x5de3


0x5df6:	mov	rdi, qword ptr [rip + 0x20e623]
0x5dfd:	mov	rbp, rax
0x5e00:	test	rdi, rdi
0x5e03:	je	0x5e2d


0x5e2d:	mov	esi, dword ptr [rbx]
0x5e2f:	lea	rdx, [rip + 0xae41]
0x5e36:	mov	rcx, rax
0x5e39:	xor	edi, edi
0x5e3b:	xor	eax, eax
0x5e3d:	call	0x24a0


0x5e05:	call	0xa310


0x5e42:	jmp	0x5e22


0x5e22:	mov	edi, dword ptr [rip + 0x20e440]
0x5e28:	call	0x20d0


0x20d0:	jmp	qword ptr [rip + 0x211c8a]




0x5dd8:	test	eax, eax
0x5dda:	jne	0x5e22


0x5ddc:	add	rsp, 8
0x5de0:	pop	rbx
0x5de1:	pop	rbp
0x5de2:	ret	


0x26d4:	cmp	eax, -1
0x26d7:	je	0x2a10


0x2a10:	cmp	dword ptr [rip + 0x2119f1], -1
0x2a17:	je	0x2c24


0x26dd:	cmp	eax, 0x69
0x26e0:	je	0x2880


0x2c24:	test	bpl, bpl
0x2c27:	je	0x2cda


0x2a1d:	mov	eax, dword ptr [rip + 0x21195d]
0x2a23:	cmp	eax, 1
0x2a26:	je	0x2a44


0x2880:	cmp	dword ptr [rip + 0x211af9], 4
0x2887:	je	0x3b7e


0x26e6:	jle	0x2720


0x2cda:	lea	rdi, [rip + 0xc4cb]
0x2ce1:	call	0x2050


0x2c2d:	lea	rdi, [rip + 0xc568]
0x2c34:	mov	dword ptr [rip + 0x2117ca], 0
0x2c3e:	call	0x2050


0x2a44:	mov	rbp, qword ptr [rip + 0x2119a5]
0x2a4b:	xor	r12d, r12d
0x2a4e:	test	rbp, rbp
0x2a51:	je	0x2b01


0x2a28:	cmp	eax, 4
0x2a2b:	je	0x2a44


0x3b7e:	lea	r8, [rip + 0xb5d7]
0x3b85:	lea	rcx, [rip + 0xb5d9]
0x3b8c:	jmp	0x3b5b


0x288d:	mov	dword ptr [rip + 0x211ae9], 1
0x2897:	jmp	0x26b0


0x2720:	cmp	eax, 0x48
0x2723:	je	0x28a0


0x26e8:	cmp	eax, 0x76
0x26eb:	je	0x26b0


0x2b01:	mov	eax, dword ptr [rip + 0x211809]
0x2b07:	cmp	eax, dword ptr [rsp + 8]
0x2b0b:	jge	0x2c69


0x2a2d:	test	byte ptr [rip + 0x2119d4], 0x10
0x2a34:	je	0x2cc2


0x3b5b:	mov	rdx, r12
0x3b5e:	xor	esi, esi
0x3b60:	xor	edi, edi
0x3b62:	xor	eax, eax
0x3b64:	call	0x24a0


0x26b0:	mov	edi, dword ptr [rsp + 8]
0x26b4:	lea	rdx, [rip + 0xca8e]
0x26bb:	mov	r8, r15
0x26be:	mov	rcx, rbx
0x26c1:	mov	rsi, r14
0x26c4:	mov	dword ptr [rsp + 0x80], 0xffffffff
0x26cf:	call	0x2200


0x28a0:	mov	dword ptr [rip + 0x211b5e], 0x90
0x28aa:	mov	qword ptr [rip + 0x211b4b], 1
0x28b5:	jmp	0x26b0


0x2729:	jle	0x27a8


0x26ed:	jle	0x2770


0x2b11:	mov	ecx, dword ptr [rsp + 8]
0x2b15:	mov	edx, 0x90
0x2b1a:	xor	esi, esi
0x2b1c:	sub	ecx, eax
0x2b1e:	mov	rax, rdx
0x2b21:	movsxd	rcx, ecx
0x2b24:	mul	rcx
0x2b27:	jo	0x3b43


0x2c69:	cmp	qword ptr [rip + 0x21177f], 0
0x2c71:	mov	edi, 1
0x2c76:	je	0x3962


0x2ac5:	mov	rbp, qword ptr [rbp + 8]
0x2ac9:	test	rbp, rbp
0x2acc:	jne	0x2a60


0x2a6c:	mov	r13, qword ptr [rbp]
0x2a70:	jmp	0x2a81


0x2cc2:	test	bpl, bpl
0x2cc5:	je	0x2a44


0x2a3a:	mov	dword ptr [rip + 0x21193c], 2
0x2a44:	mov	rbp, qword ptr [rip + 0x2119a5]
0x2a4b:	xor	r12d, r12d
0x2a4e:	test	rbp, rbp
0x2a51:	je	0x2b01


0x27a8:	cmp	eax, 0xffffff7e
0x27ad:	je	0x3abd


0x272b:	cmp	eax, 0x54
0x272e:	je	0x28e0


0x2770:	cmp	eax, 0x6c
0x2773:	je	0x2928


0x26f3:	cmp	eax, 0x81
0x26f8:	je	0x2938


0x3b43:	mov	esi, 1
0x3b48:	jmp	0x2b2d


0x2b2d:	test	rax, rax
0x2b30:	js	0x3b13


0x3962:	cmp	qword ptr [rip + 0x210a7e], 0
0x396a:	jne	0x2c7c


0x2c7c:	call	0xbc20


0x2ace:	test	r12b, r12b
0x2ad1:	mov	eax, 1
0x2ad6:	je	0x2b01


0x2a60:	mov	rbx, qword ptr [rip + 0x211981]
0x2a67:	test	rbx, rbx
0x2a6a:	je	0x2ac5


0x2a81:	mov	rsi, qword ptr [rbx]
0x2a84:	mov	rdi, r13
0x2a87:	call	0x2340


0x2ccb:	mov	dword ptr [rip + 0x2116ab], 3
0x2cd5:	jmp	0x2a44


0x3abd:	xor	edi, edi
0x3abf:	call	0x4d70


0x27b3:	jle	0x2988


0x28e0:	cmp	dword ptr [rip + 0x211a99], 4
0x28e7:	je	0x3b6e


0x2734:	jle	0x28c0


0x2928:	mov	byte ptr [rip + 0x211ade], 1
0x292f:	jmp	0x26b0


0x2779:	jle	0x2900


0x2938:	mov	byte ptr [rip + 0x211abd], 1
0x293f:	jmp	0x26b0


0x26fe:	jg	0x2808


0x3b13:	call	0xb020


0x2b36:	test	rsi, rsi
0x2b39:	jne	0x3b13


0x3970:	cmp	byte ptr [rip + 0x210a62], 0
0x3977:	jne	0x2c7c


0x2ad8:	mov	rcx, qword ptr [rsp + 0x138]
0x2ae0:	xor	rcx, qword ptr fs:[0x28]
0x2ae9:	jne	0x3b8e


0x2988:	cmp	eax, 0xffffff7d
0x298d:	jne	0x2a06


0x27b9:	cmp	eax, 0x42
0x27bc:	jne	0x29d1


0x3b6e:	lea	r8, [rip + 0xb5e7]
0x3b75:	lea	rcx, [rip + 0xb5ec]
0x3b7c:	jmp	0x3b5b


0x28ed:	mov	byte ptr [rip + 0x211ae5], 1
0x28f4:	jmp	0x26b0


0x28c0:	cmp	eax, 0x50
0x28c3:	jne	0x2a06


0x273a:	cmp	eax, 0x61
0x273d:	je	0x2948


0x2900:	cmp	eax, 0x6b
0x2903:	jne	0x2a06


0x277f:	cmp	eax, 0x6d
0x2782:	jne	0x2a01


0x2704:	cmp	eax, 0x78
0x2707:	je	0x2958


0x2808:	cmp	eax, 0x82
0x280d:	je	0x2870


0x2b3f:	imul	rdi, rcx, 0x90
0x2b46:	lea	rbp, [rip + 0xe12a]
0x2b4d:	call	0xadd0


0x397d:	cmp	byte ptr [rip + 0x2106f8], 0
0x3984:	jne	0x2c7c


0x2aef:	add	rsp, 0x148
0x2af6:	pop	rbx
0x2af7:	pop	rbp
0x2af8:	pop	r12
0x2afa:	pop	r13
0x2afc:	pop	r14
0x2afe:	pop	r15
0x2b00:	ret	


0x3b8e:	call	0x21f0


0x298f:	lea	rax, [rip + 0xc7fa]
0x2996:	mov	rdi, qword ptr [rip + 0x21196b]
0x299d:	mov	rcx, qword ptr [rip + 0x2118bc]
0x29a4:	push	0
0x29a6:	lea	r9, [rip + 0xc7c1]
0x29ad:	lea	r8, [rip + 0xc7ca]
0x29b4:	push	rax
0x29b5:	lea	rdx, [rip + 0xc72c]
0x29bc:	lea	rsi, [rip + 0xc6a9]
0x29c3:	xor	eax, eax
0x29c5:	call	0xac70


0x2a06:	mov	edi, 1
0x2a0b:	call	0x4d70


0x27c2:	mov	rdi, qword ptr [rip + 0x211b4f]
0x27c9:	lea	rdx, [rip + 0x211c30]
0x27d0:	lea	rsi, [rip + 0x211c31]
0x27d7:	call	0x7f60


0x29d1:	cmp	eax, 0x46
0x29d4:	jne	0x2a06


0x28c9:	cmp	dword ptr [rip + 0x211ab0], 4
0x28d0:	je	0x3b4d


0x2948:	mov	byte ptr [rip + 0x211abf], 1
0x294f:	jmp	0x26b0


0x2743:	cmp	eax, 0x68
0x2746:	jne	0x2a06


0x2909:	mov	dword ptr [rip + 0x211af5], 0
0x2913:	mov	qword ptr [rip + 0x211ae2], 0x400
0x291e:	jmp	0x26b0


0x2788:	mov	dword ptr [rip + 0x211c76], 0
0x2792:	mov	qword ptr [rip + 0x211c63], 0x100000
0x279d:	jmp	0x26b0


0x2a01:	cmp	eax, 0x74
0x2a04:	je	0x29d6


0x2958:	mov	edi, 0x10
0x295d:	mov	r13, qword ptr [rip + 0x2119b4]
0x2964:	call	0xadd0


0x270d:	add	eax, -0x80
0x2710:	jne	0x2a06


0x2870:	mov	byte ptr [rip + 0x211b61], 1
0x2877:	jmp	0x26b0


0x280f:	cmp	eax, 0x83
0x2814:	jne	0x2a06


0x398a:	movzx	edi, byte ptr [rip + 0x210a7c]
0x3991:	jmp	0x2c7c


0x29d6:	mov	edi, 0x10
0x29db:	mov	r13, qword ptr [rip + 0x211936]
0x29e2:	call	0xadd0


0x3b4d:	lea	r8, [rip + 0xb608]
0x3b54:	lea	rcx, [rip + 0xb610]
0x3b5b:	mov	rdx, r12
0x3b5e:	xor	esi, esi
0x3b60:	xor	edi, edi
0x3b62:	xor	eax, eax
0x3b64:	call	0x24a0


0x28d6:	mov	ebp, 1
0x28db:	jmp	0x26b0


0x274c:	mov	dword ptr [rip + 0x211cb2], 0xb0
0x2756:	mov	qword ptr [rip + 0x211c9f], 1
0x2761:	jmp	0x26b0


0x2716:	mov	byte ptr [rip + 0x211cdf], 0
0x271d:	jmp	0x26b0


0x281a:	mov	eax, dword ptr [rip + 0x211b60]
0x2820:	cmp	eax, 1
0x2823:	je	0x3b7e


0x2829:	test	eax, eax
0x282b:	jne	0x2836


0x282d:	test	bpl, bpl
0x2830:	jne	0x3aef


0x2836:	cmp	byte ptr [rip + 0x211b9c], 0
0x283d:	jne	0x3b6e


0x3aef:	lea	r8, [rip + 0xb666]
0x3af6:	lea	rcx, [rip + 0xb66e]
0x3afd:	xor	edi, edi
0x3aff:	mov	rdx, r12
0x3b02:	xor	esi, esi
0x3b04:	call	0x24a0


0x2843:	mov	rdi, qword ptr [rip + 0x211ace]
0x284a:	mov	dword ptr [rip + 0x211b2c], 4
0x2854:	test	rdi, rdi
0x2857:	je	0x26b0


0x285d:	call	0x5210


0x27dc:	test	eax, eax
0x27de:	je	0x26b0


0x27e4:	mov	r8, qword ptr [rip + 0x211b2d]
0x27eb:	mov	esi, dword ptr [rsp + 0x80]
0x27f2:	lea	rcx, [rip + 0x211087]
0x27f9:	mov	edx, 0x42
0x27fe:	mov	edi, eax
0x2800:	call	0xb090


0x29ca:	xor	edi, edi
0x29cc:	call	0x2510


0x29e7:	mov	rdx, qword ptr [rip + 0x211a02]
0x29ee:	mov	qword ptr [rip + 0x2119fb], rax
0x29f5:	mov	qword ptr [rax], r13
0x29f8:	mov	qword ptr [rax + 8], rdx
0x29fc:	jmp	0x26b0


0x2969:	mov	rdx, qword ptr [rip + 0x211a78]
0x2970:	mov	qword ptr [rip + 0x211a71], rax
0x2977:	mov	qword ptr [rax], r13
0x297a:	mov	qword ptr [rax + 8], rdx
0x297e:	jmp	0x26b0


0x2b52:	movsxd	r12, dword ptr [rip + 0x2117b7]
0x2b59:	mov	qword ptr [rsp + 0x10], r15
0x2b5e:	mov	r13, rax
0x2b61:	mov	r15, r14
0x2b64:	mov	qword ptr [rsp + 0x60], rax
0x2b69:	mov	r14, r12
0x2b6c:	mov	r12d, dword ptr [rsp + 8]
0x2b71:	jmp	0x2bb3


0x2bb3:	cmp	r14d, r12d
0x2bb6:	mov	ebx, r14d
0x2bb9:	jge	0x2c61


0x2bbf:	mov	edx, r14d
0x2bc2:	sub	edx, dword ptr [rip + 0x211748]
0x2bc8:	mov	rsi, qword ptr [r15 + r14*8]
0x2bcc:	mov	edi, 1
0x2bd1:	movsxd	rdx, edx
0x2bd4:	imul	rdx, rdx, 0x90
0x2bdb:	add	rdx, r13
0x2bde:	call	0x2390


0x2c61:	mov	r14, r15
0x2c64:	mov	r15, qword ptr [rsp + 0x10]
0x2c69:	cmp	qword ptr [rip + 0x21177f], 0
0x2c71:	mov	edi, 1
0x2c76:	je	0x3962


0x2be3:	test	eax, eax
0x2be5:	je	0x2b73


0x2b73:	sub	ebx, dword ptr [rip + 0x211797]
0x2b79:	movsxd	rax, ebx
0x2b7c:	imul	rax, rax, 0x90
0x2b83:	mov	eax, dword ptr [r13 + rax + 0x18]
0x2b88:	and	eax, 0xf000
0x2b8d:	cmp	eax, 0x1000
0x2b92:	je	0x2baf


0x2be7:	mov	rdx, qword ptr [r15 + r14*8]
0x2beb:	mov	esi, 3
0x2bf0:	xor	edi, edi
0x2bf2:	call	0xa340


0x2baf:	add	r14, 1
0x2bb3:	cmp	r14d, r12d
0x2bb6:	mov	ebx, r14d
0x2bb9:	jge	0x2c61


0x2b94:	mov	rdi, qword ptr [r15 + r14*8]
0x2b98:	xor	eax, eax
0x2b9a:	mov	esi, 0x100
0x2b9f:	call	0x24c0


0x2ba4:	test	eax, eax
0x2ba6:	js	0x2baf


0x2ba8:	mov	edi, eax
0x2baa:	call	0x22d0


0x2a8c:	test	eax, eax
0x2a8e:	jne	0x2a78


0x2a90:	mov	rdi, r13
0x2a93:	mov	r12d, 1
0x2a99:	call	0xa510


0x2a78:	mov	rbx, qword ptr [rbx + 8]
0x2a7c:	test	rbx, rbx
0x2a7f:	je	0x2ac5


0x2c81:	test	rax, rax
0x2c84:	mov	qword ptr [rip + 0x211755], rax
0x2c8b:	je	0x38e6


0x38e6:	mov	eax, dword ptr [rsp + 8]
0x38ea:	cmp	dword ptr [rip + 0x210a20], eax
0x38f0:	jge	0x39a5


0x2c91:	cmp	byte ptr [rip + 0x211764], 0
0x2c98:	je	0x2c9f


0x38f6:	cmp	byte ptr [rip + 0x210b11], 0
0x38fd:	jne	0x39a5


0x39a5:	mov	ebx, 1
0x39aa:	lea	rbp, [rip + 0xcc50]
0x39b1:	jmp	0x392a


0x2c9f:	cmp	dword ptr [rip + 0x2116da], 4
0x2ca6:	ja	0x3b24


0x2c9a:	call	0x23a0


0x3903:	cmp	byte ptr [rip + 0x210b03], 0
0x390a:	jne	0x39a5


0x392a:	lea	rsi, [rip + 0xc4c7]
0x3931:	xor	edi, edi
0x3933:	mov	edx, 5
0x3938:	call	0x2190


0x2cac:	mov	eax, dword ptr [rip + 0x2116ce]
0x2cb2:	lea	rdx, [rip + 0xc667]
0x2cb9:	movsxd	rax, dword ptr [rdx + rax*4]
0x2cbd:	add	rax, rdx
0x2cc0:	jmp	rax


0x3b24:	lea	rcx, [rip + 0xb815]
0x3b2b:	lea	rsi, [rip + 0xb4bf]
0x3b32:	lea	rdi, [rip + 0xb699]
0x3b39:	mov	edx, 0x222
0x3b3e:	call	0x2280


0x23a0:	jmp	qword ptr [rip + 0x211b22]


0x3910:	cmp	qword ptr [rip + 0x210ad8], 0
0x3918:	mov	ebx, 1
0x391d:	lea	rbp, [rip + 0xccdd]
0x3924:	je	0x3ac4




0x3ac4:	cmp	qword ptr [rip + 0x21091c], 0
0x3acc:	jne	0x392a


0x3ad2:	lea	rsi, [rip + 0xb6e1]
0x3ad9:	mov	edx, 5
0x3ade:	xor	edi, edi
0x3ae0:	xor	ebx, ebx
0x3ae2:	call	0x2190


0x3ae7:	mov	rbp, rax
0x3aea:	jmp	0x392a


0x393d:	mov	r12, rax
0x3940:	call	0x20b0


0x3945:	mov	esi, dword ptr [rax]
0x3947:	lea	rdx, [rip + 0xb876]
0x394e:	mov	r8, r12
0x3951:	mov	rcx, rbp
0x3954:	mov	edi, ebx
0x3956:	xor	eax, eax
0x3958:	call	0x24a0


0x395d:	jmp	0x2c91


0x3b09:	mov	edi, 1
0x3b0e:	call	0x4d70


0x3b69:	jmp	0x2a06


0x2c43:	cmp	rax, 1
0x2c47:	sbb	rax, rax
0x2c4a:	and	eax, 0x200
0x2c4f:	add	rax, 0x200
0x2c55:	mov	qword ptr [rip + 0x2117a4], rax
0x2c5c:	jmp	0x2a1d


0x2ce6:	lea	rdx, [rip + 0x211713]
0x2ced:	lea	rsi, [rip + 0x211714]
0x2cf4:	mov	rdi, rax
0x2cf7:	call	0x7f60


0x2cfc:	jmp	0x2a1d


0x84cc:	mov	r15, rax
0x84cf:	jmp	0x81ee


0x8447:	add	rax, 1
0x844b:	mov	qword ptr [rsp + 0x20], rax
0x8450:	mov	rdi, qword ptr [rsp + 0x20]
0x8455:	call	0x23c0


0xbcfc:	test	rax, rax
0xbcff:	mov	r15, rax
0xbd02:	je	0xbc80


0xbd08:	lea	rcx, [rsp + 0x2c]
0xbd0d:	lea	rdx, [rsp + 0x28]
0xbd12:	sub	rsp, 8
0xbd16:	push	rbx
0xbd17:	lea	rsi, [rip + 0x4e4d]
0xbd1e:	mov	rdi, rax
0xbd21:	xor	eax, eax
0xbd23:	lea	r9, [rsp + 0x44]
0xbd28:	lea	r8, [rsp + 0x40]
0xbd2d:	call	0x2410


0xbd32:	and	eax, 0xfffffffb
0xbd35:	cmp	eax, 1
0xbd38:	pop	rdx
0xbd39:	pop	rcx
0xbd3a:	jne	0xbc80


0xbd40:	movsxd	rax, dword ptr [rsp + 0x3c]
0xbd45:	mov	rdx, qword ptr [rsp + 0x48]
0xbd4a:	mov	byte ptr [rdx + rax], 0
0xbd4e:	movsxd	rax, dword ptr [rsp + 0x24]
0xbd53:	mov	rdx, qword ptr [rsp + 0x48]
0xbd58:	mov	byte ptr [rdx + rax], 0
0xbd5c:	movsxd	rax, dword ptr [rsp + 0x2c]
0xbd61:	mov	byte ptr [r15 + rax], 0
0xbd66:	movsxd	rax, dword ptr [rsp + 0x34]
0xbd6b:	mov	byte ptr [r15 + rax], 0
0xbd70:	movsxd	rdi, dword ptr [rsp + 0x30]
0xbd75:	add	rdi, r15
0xbd78:	call	0xbb50


0xbd7d:	movsxd	rdi, dword ptr [rsp + 0x20]
0xbd82:	add	rdi, qword ptr [rsp + 0x48]
0xbd87:	call	0xbb50


0xbd8c:	movsxd	rdi, dword ptr [rsp + 0x38]
0xbd91:	add	rdi, qword ptr [rsp + 0x48]
0xbd96:	call	0xbb50


0xbd9b:	mov	edi, 0x38
0xbda0:	call	0xadd0


0xbda5:	movsxd	rdi, dword ptr [rsp + 0x30]
0xbdaa:	mov	rbx, rax
0xbdad:	add	rdi, r15
0xbdb0:	call	0xb000


0xbdb5:	movsxd	rdi, dword ptr [rsp + 0x20]
0xbdba:	mov	qword ptr [rbx], rax
0xbdbd:	add	rdi, qword ptr [rsp + 0x48]
0xbdc2:	call	0xb000


0xbdc7:	movsxd	rdi, dword ptr [rsp + 0x38]
0xbdcc:	mov	qword ptr [rbx + 8], rax
0xbdd0:	add	rdi, qword ptr [rsp + 0x48]
0xbdd5:	call	0xb000


0xbdda:	movsxd	rdi, dword ptr [rsp + 0x28]
0xbddf:	mov	qword ptr [rbx + 0x10], rax
0xbde3:	add	rdi, r15
0xbde6:	call	0xb000


0xbdeb:	mov	edx, dword ptr [rsp + 0x18]
0xbdef:	mov	r15, rax
0xbdf2:	mov	qword ptr [rbx + 0x18], rax
0xbdf6:	mov	eax, dword ptr [rsp + 0x1c]
0xbdfa:	movabs	rsi, 0xfffff00000000000
0xbe04:	lea	rdi, [rip + 0x4d76]
0xbe0b:	or	byte ptr [rbx + 0x28], 4
0xbe0f:	mov	rcx, rdx
0xbe12:	shl	rdx, 0x20
0xbe16:	shl	rcx, 8
0xbe1a:	and	rdx, rsi
0xbe1d:	movabs	rsi, 0xffffff00000
0xbe27:	and	ecx, 0xfff00
0xbe2d:	or	rdx, rcx
0xbe30:	movzx	ecx, al
0xbe33:	shl	rax, 0xc
0xbe37:	or	rdx, rcx
0xbe3a:	and	rax, rsi
0xbe3d:	mov	ecx, 7
0xbe42:	mov	rsi, r15
0xbe45:	or	rax, rdx
0xbe48:	mov	edx, 1
0xbe4d:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbe4d:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbe4f:	mov	qword ptr [rbx + 0x20], rax
0xbe53:	seta	al
0xbe56:	sbb	al, 0
0xbe58:	test	al, al
0xbe5a:	je	0xbe7a


0xbe7a:	movzx	eax, byte ptr [rbx + 0x28]
0xbe7e:	mov	r8, qword ptr [rbx]
0xbe81:	mov	esi, 0x3a
0xbe86:	mov	rdi, r8
0xbe89:	mov	qword ptr [rsp + 8], r8
0xbe8e:	and	eax, 0xfffffffe
0xbe91:	or	eax, edx
0xbe93:	mov	byte ptr [rbx + 0x28], al
0xbe96:	call	0x2220


0xbe5c:	lea	rdi, [rip + 0x4d25]
0xbe63:	mov	ecx, 5
0xbe68:	mov	rsi, r15
0xbe6b:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbe6b:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbe6d:	seta	al
0xbe70:	sbb	al, 0
0xbe72:	test	al, al
0xbe74:	jne	0xbf28


0xbf28:	lea	rdi, [rip + 0x4c5e]
0xbf2f:	mov	ecx, 6
0xbf34:	mov	rsi, r15
0xbf37:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbf37:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbf39:	seta	al
0xbf3c:	sbb	al, 0
0xbf3e:	test	al, al
0xbf40:	je	0xbe7a


0xbf46:	lea	rdi, [rip + 0x4c46]
0xbf4d:	mov	ecx, 8
0xbf52:	mov	rsi, r15
0xbf55:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbf55:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbf57:	seta	al
0xbf5a:	sbb	al, 0
0xbf5c:	test	al, al
0xbf5e:	je	0xbe7a


0xbf64:	lea	rdi, [rip + 0x4c30]
0xbf6b:	mov	ecx, 7
0xbf70:	mov	rsi, r15
0xbf73:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbf73:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbf75:	seta	al
0xbf78:	sbb	al, 0
0xbf7a:	test	al, al
0xbf7c:	je	0xbe7a


0xbf82:	lea	rdi, [rip + 0x4c19]
0xbf89:	mov	ecx, 8
0xbf8e:	mov	rsi, r15
0xbf91:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbf91:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbf93:	seta	al
0xbf96:	sbb	al, 0
0xbf98:	test	al, al
0xbf9a:	je	0xbe7a


0xbfa0:	lea	rdi, [rip + 0x4c03]
0xbfa7:	mov	ecx, 7
0xbfac:	mov	rsi, r15
0xbfaf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbfaf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbfb1:	seta	al
0xbfb4:	sbb	al, 0
0xbfb6:	test	al, al
0xbfb8:	je	0xbe7a


0xbfbe:	lea	rdi, [rip + 0x4bec]
0xbfc5:	mov	ecx, 0xb
0xbfca:	mov	rsi, r15
0xbfcd:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbfcd:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbfcf:	seta	al
0xbfd2:	sbb	al, 0
0xbfd4:	test	al, al
0xbfd6:	je	0xbe7a


0xbfdc:	lea	rdi, [rip + 0x4bd9]
0xbfe3:	mov	ecx, 6
0xbfe8:	mov	rsi, r15
0xbfeb:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbfeb:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xbfed:	seta	al
0xbff0:	sbb	al, 0
0xbff2:	test	al, al
0xbff4:	je	0xbe7a


0xbffa:	lea	rdi, [rip + 0x4bc1]
0xc001:	mov	ecx, 6
0xc006:	mov	rsi, r15
0xc009:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc009:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc00b:	seta	al
0xc00e:	sbb	al, 0
0xc010:	test	al, al
0xc012:	je	0xbe7a


0xc018:	lea	rdi, [rip + 0x4ba9]
0xc01f:	mov	ecx, 7
0xc024:	mov	rsi, r15
0xc027:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc027:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc029:	seta	al
0xc02c:	sbb	al, 0
0xc02e:	test	al, al
0xc030:	je	0xbe7a


0xc036:	lea	rsi, [rip + 0x4b92]
0xc03d:	mov	rdi, r15
0xc040:	mov	byte ptr [rsp + 8], dl
0xc044:	call	0x2340


0xc049:	test	eax, eax
0xc04b:	movzx	edx, byte ptr [rsp + 8]
0xc050:	je	0xbe7a


0xc056:	lea	rsi, [rip + 0x4b79]
0xc05d:	mov	rdi, r15
0xc060:	call	0x2340


0xc065:	test	eax, eax
0xc067:	sete	dl
0xc06a:	jmp	0xbe7a


0xbe9b:	test	rax, rax
0xbe9e:	mov	edx, 1
0xbea3:	mov	r8, qword ptr [rsp + 8]
0xbea8:	je	0xc070


0xc070:	cmp	byte ptr [r8], 0x2f
0xc074:	je	0xc3a0


0xbeae:	movzx	eax, byte ptr [rbx + 0x28]
0xbeb2:	add	edx, edx
0xbeb4:	and	eax, 0xfffffffd
0xbeb7:	or	eax, edx
0xbeb9:	mov	byte ptr [rbx + 0x28], al
0xbebc:	mov	qword ptr [r14], rbx
0xbebf:	lea	r14, [rbx + 0x30]
0xbec3:	jmp	0xbc80


0xc3a0:	cmp	byte ptr [r8 + 1], 0x2f
0xc3a5:	jne	0xc07a


0xc07a:	lea	rsi, [rip + 0x4b65]
0xc081:	mov	ecx, 7
0xc086:	mov	rdi, r8
0xc089:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc3ab:	lea	rdi, [rip + 0x4829]
0xc3b2:	mov	ecx, 6
0xc3b7:	mov	rsi, r15
0xc3ba:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc089:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc08b:	seta	al
0xc08e:	sbb	al, 0
0xc090:	test	al, al
0xc092:	sete	dl
0xc095:	jmp	0xbeae


0xc3ba:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc3bc:	seta	al
0xc3bf:	sbb	al, 0
0xc3c1:	test	al, al
0xc3c3:	je	0xbeae


0xc3c9:	lea	rdi, [rip + 0x4811]
0xc3d0:	mov	ecx, 5
0xc3d5:	mov	rsi, r15
0xc3d8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc3d8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc3da:	seta	al
0xc3dd:	sbb	al, 0
0xc3df:	test	al, al
0xc3e1:	je	0xbeae


0xc3e7:	jmp	0xc07a


0xc0ef:	mov	edi, 0x38
0xc0f4:	mov	r15, rax
0xc0f7:	call	0xadd0


0xc0fc:	mov	rdi, qword ptr [r13]
0xc100:	mov	r12, rax
0xc103:	call	0xb000


0xc108:	mov	rdi, qword ptr [r13 + 8]
0xc10c:	mov	qword ptr [r12], rax
0xc110:	call	0xb000


0xc115:	mov	rdi, qword ptr [r13 + 0x10]
0xc119:	mov	qword ptr [r12 + 8], rax
0xc11e:	mov	qword ptr [r12 + 0x10], 0
0xc127:	call	0xb000


0xc12c:	mov	ecx, 7
0xc131:	mov	rsi, rax
0xc134:	mov	rdi, rbp
0xc137:	or	byte ptr [r12 + 0x28], 4
0xc13d:	mov	r13, rax
0xc140:	mov	qword ptr [r12 + 0x18], rax
0xc145:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc145:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc147:	mov	edx, 1
0xc14c:	seta	al
0xc14f:	sbb	al, 0
0xc151:	test	al, al
0xc153:	je	0xc2b8


0xc2b8:	movzx	eax, byte ptr [r12 + 0x28]
0xc2be:	mov	r15, qword ptr [r12]
0xc2c2:	mov	esi, 0x3a
0xc2c7:	mov	rdi, r15
0xc2ca:	and	eax, 0xfffffffe
0xc2cd:	or	eax, edx
0xc2cf:	mov	byte ptr [r12 + 0x28], al
0xc2d4:	call	0x2220


0xc159:	lea	rdi, [rip + 0x4a28]
0xc160:	mov	ecx, 5
0xc165:	mov	rsi, r13
0xc168:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc168:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc16a:	seta	al
0xc16d:	sbb	al, 0
0xc16f:	test	al, al
0xc171:	je	0xc2b8


0xc177:	lea	rdi, [rip + 0x4a0f]
0xc17e:	mov	ecx, 6
0xc183:	mov	rsi, r13
0xc186:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc186:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc188:	seta	al
0xc18b:	sbb	al, 0
0xc18d:	test	al, al
0xc18f:	je	0xc2b8


0xc195:	lea	rdi, [rip + 0x49f7]
0xc19c:	mov	ecx, 8
0xc1a1:	mov	rsi, r13
0xc1a4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc1a4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc1a6:	seta	al
0xc1a9:	sbb	al, 0
0xc1ab:	test	al, al
0xc1ad:	je	0xc2b8


0xc1b3:	lea	rdi, [rip + 0x49e1]
0xc1ba:	mov	ecx, 7
0xc1bf:	mov	rsi, r13
0xc1c2:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc1c2:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc1c4:	seta	al
0xc1c7:	sbb	al, 0
0xc1c9:	test	al, al
0xc1cb:	je	0xc2b8


0xc1d1:	lea	rdi, [rip + 0x49ca]
0xc1d8:	mov	ecx, 8
0xc1dd:	mov	rsi, r13
0xc1e0:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc1e0:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc1e2:	seta	al
0xc1e5:	sbb	al, 0
0xc1e7:	test	al, al
0xc1e9:	je	0xc2b8


0xc1ef:	lea	rdi, [rip + 0x49b4]
0xc1f6:	mov	ecx, 7
0xc1fb:	mov	rsi, r13
0xc1fe:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc1fe:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc200:	seta	al
0xc203:	sbb	al, 0
0xc205:	test	al, al
0xc207:	je	0xc2b8


0xc20d:	lea	rdi, [rip + 0x499d]
0xc214:	mov	ecx, 0xb
0xc219:	mov	rsi, r13
0xc21c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc21c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc21e:	seta	al
0xc221:	sbb	al, 0
0xc223:	test	al, al
0xc225:	je	0xc2b8


0xc22b:	lea	rdi, [rip + 0x498a]
0xc232:	mov	ecx, 6
0xc237:	mov	rsi, r13
0xc23a:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc23a:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc23c:	seta	al
0xc23f:	sbb	al, 0
0xc241:	test	al, al
0xc243:	je	0xc2b8


0xc245:	lea	rdi, [rip + 0x4976]
0xc24c:	mov	ecx, 6
0xc251:	mov	rsi, r13
0xc254:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc254:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc256:	seta	al
0xc259:	sbb	al, 0
0xc25b:	test	al, al
0xc25d:	je	0xc2b8


0xc25f:	lea	rdi, [rip + 0x4962]
0xc266:	mov	ecx, 7
0xc26b:	mov	rsi, r13
0xc26e:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc26e:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc270:	seta	al
0xc273:	sbb	al, 0
0xc275:	test	al, al
0xc277:	je	0xc2b8


0xc279:	lea	rsi, [rip + 0x494f]
0xc280:	mov	rdi, r13
0xc283:	mov	byte ptr [rsp + 8], dl
0xc287:	call	0x2340


0xc28c:	test	eax, eax
0xc28e:	movzx	edx, byte ptr [rsp + 8]
0xc293:	je	0xc2b8


0xc295:	lea	rsi, [rip + 0x493a]
0xc29c:	mov	rdi, r13
0xc29f:	call	0x2340


0xc2a4:	test	r15, r15
0xc2a7:	sete	dl
0xc2aa:	test	eax, eax
0xc2ac:	sete	al
0xc2af:	and	edx, eax
0xc2b1:	nop	dword ptr [rax]
0xc2b8:	movzx	eax, byte ptr [r12 + 0x28]
0xc2be:	mov	r15, qword ptr [r12]
0xc2c2:	mov	esi, 0x3a
0xc2c7:	mov	rdi, r15
0xc2ca:	and	eax, 0xfffffffe
0xc2cd:	or	eax, edx
0xc2cf:	mov	byte ptr [r12 + 0x28], al
0xc2d4:	call	0x2220


0xc2d9:	test	rax, rax
0xc2dc:	mov	edx, 1
0xc2e1:	je	0xc378


0xc378:	cmp	byte ptr [r15], 0x2f
0xc37c:	je	0xc3f0


0xc2e7:	movzx	eax, byte ptr [r12 + 0x28]
0xc2ed:	add	edx, edx
0xc2ef:	mov	qword ptr [r12 + 0x20], -1
0xc2f8:	mov	rdi, rbx
0xc2fb:	and	eax, 0xfffffffd
0xc2fe:	or	eax, edx
0xc300:	mov	byte ptr [r12 + 0x28], al
0xc305:	mov	qword ptr [r14], r12
0xc308:	lea	r14, [r12 + 0x30]
0xc30d:	call	0x23e0


0xc3f0:	cmp	byte ptr [r15 + 1], 0x2f
0xc3f5:	jne	0xc37e


0xc37e:	lea	rsi, [rip + 0x4861]
0xc385:	mov	ecx, 7
0xc38a:	mov	rdi, r15
0xc38d:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc3f7:	lea	rdi, [rip + 0x47dd]
0xc3fe:	mov	ecx, 6
0xc403:	mov	rsi, r13
0xc406:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc38d:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc38f:	seta	al
0xc392:	sbb	al, 0
0xc394:	test	al, al
0xc396:	sete	dl
0xc399:	jmp	0xc2e7


0xc406:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc408:	seta	al
0xc40b:	sbb	al, 0
0xc40d:	test	al, al
0xc40f:	je	0xc2e7


0xc415:	lea	rdi, [rip + 0x47c5]
0xc41c:	mov	ecx, 5
0xc421:	mov	rsi, r13
0xc424:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc424:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc426:	seta	al
0xc429:	sbb	al, 0
0xc42b:	test	al, al
0xc42d:	je	0xc2e7


0xc433:	jmp	0xc37e


0xc312:	test	rax, rax
0xc315:	mov	r13, rax
0xc318:	jne	0xc0e0


0xc0e0:	lea	rsi, [rip + 0x4b10]
0xc0e7:	mov	rdi, r13
0xc0ea:	call	0x2570


0xc326:	test	eax, eax
0xc328:	jne	0xbef5


0x2862:	jmp	0x26b0


0x5e0a:	mov	esi, dword ptr [rbx]
0x5e0c:	lea	rdx, [rip + 0xa174]
0x5e13:	mov	rcx, rax
0x5e16:	mov	r8, rbp
0x5e19:	xor	edi, edi
0x5e1b:	xor	eax, eax
0x5e1d:	call	0x24a0


0x602b:	test	rax, rax
0x602e:	je	0x6062


0x6062:	call	0xb020


0x6030:	cmp	rbx, rax
0x6033:	je	0x6050


0x6050:	add	rsp, 8
0x6054:	pop	rbx
0x6055:	pop	rbp
0x6056:	pop	r12
0x6058:	pop	r13
0x605a:	ret	


0x6035:	add	rsp, 8
0x6039:	mov	rdi, rbx
0x603c:	pop	rbx
0x603d:	pop	rbp
0x603e:	pop	r12
0x6040:	pop	r13
0x6042:	jmp	0x7460


0x2a9e:	lea	rsi, [rip + 0xd323]
0x2aa5:	mov	rbx, rax
0x2aa8:	mov	edx, 5
0x2aad:	xor	edi, edi
0x2aaf:	call	0x2190


0x2ab4:	mov	rcx, rbx
0x2ab7:	mov	rdx, rax
0x2aba:	xor	esi, esi
0x2abc:	xor	edi, edi
0x2abe:	xor	eax, eax
0x2ac0:	call	0x24a0


0x5286:	lea	rsi, [rip + 0xaae3]
0x528d:	mov	rbx, rax
0x5290:	mov	edx, 5
0x5295:	xor	edi, edi
0x5297:	call	0x2190


0x529c:	xor	edi, edi
0x529e:	mov	rdx, rax
0x52a1:	mov	rcx, rbx
0x52a4:	xor	esi, esi
0x52a6:	xor	eax, eax
0x52a8:	call	0x24a0


0x52ad:	mov	edi, 1
0x52b2:	call	0x4d70


0x5348:	mov	edx, 5
0x534d:	mov	rbx, rax
0x5350:	lea	rsi, [rip + 0xa9e9]
0x5357:	jmp	0x5295


0x5295:	xor	edi, edi
0x5297:	call	0x2190


0xc83e:	mov	rdi, qword ptr [rip + 0x207afb]
0xc845:	lea	rdx, [rip + 0x4429]
0xc84c:	mov	rcx, rax
0xc84f:	mov	esi, 1
0xc854:	xor	eax, eax
0xc856:	call	0x2530


0xc85b:	mov	r15, qword ptr [r14 + rbx*8]
0xc85f:	test	r15, r15
0xc862:	jne	0xc818


0xc7ef:	mov	rdi, qword ptr [rip + 0x207b4a]
0xc7f6:	lea	rdx, [rip + 0x4470]
0xc7fd:	mov	rcx, rax
0xc800:	mov	esi, 1
0xc805:	xor	eax, eax
0xc807:	add	rbp, r12
0xc80a:	call	0x2530


0xc80f:	mov	r15, qword ptr [r14 + rbx*8]
0xc813:	test	r15, r15
0xc816:	je	0xc868


0xc903:	mov	rdx, r15
0xc906:	mov	rsi, rbp
0xc909:	mov	rdi, rbx
0xc90c:	call	0xc790


0xc911:	call	r13


0xc743:	mov	rdx, r12
0xc746:	mov	rbp, rax
0xc749:	mov	esi, 8
0xc74e:	xor	edi, edi
0xc750:	call	0xa120


0xc755:	mov	r8, rbp
0xc758:	mov	rdx, rbx
0xc75b:	mov	rcx, rax
0xc75e:	pop	rbx
0xc75f:	pop	rbp
0xc760:	pop	r12
0xc762:	xor	esi, esi
0xc764:	xor	edi, edi
0xc766:	xor	eax, eax
0xc768:	jmp	0x24a0


0x3f8e:	mov	rdx, qword ptr [rip + 0x2103cb]
0x3f95:	mov	rax, qword ptr [rip + 0x2103cc]
0x3f9c:	xor	esi, esi
0x3f9e:	mov	rax, qword ptr [rax + rdx*8 - 8]
0x3fa3:	mov	rdx, qword ptr [rsp + 0x18]
0x3fa8:	mov	qword ptr [rax + rbp], rdx
0x3fac:	mov	rdi, qword ptr [rsp + 0x18]
0x3fb1:	call	0x87d0


0x3fb6:	mov	rdx, qword ptr [rip + 0x2103bb]
0x3fbd:	cdqe	
0x3fbf:	mov	rcx, qword ptr [rdx + rbp]
0x3fc3:	cmp	qword ptr [rcx + 0x20], rax
0x3fc7:	cmovae	rax, qword ptr [rcx + 0x20]
0x3fcc:	add	rbx, 1
0x3fd0:	cmp	qword ptr [rip + 0x210399], rbx
0x3fd7:	mov	qword ptr [rcx + 0x20], rax
0x3fdb:	jbe	0x4148


0x5ad8:	mov	edx, dword ptr [rsp + 4]
0x5adc:	mov	dword ptr [r12], edx
0x5ae0:	xor	ebp, ebp
0x5ae2:	jmp	0x5960


0x56d1:	mov	edx, 5
0x56d6:	mov	rbx, rax
0x56d9:	lea	rsi, [rip + 0xa80d]
0x56e0:	jmp	0x554b


0x554b:	xor	edi, edi
0x554d:	call	0x2190


0x5552:	mov	esi, dword ptr [r14]
0x5555:	mov	rcx, rbx
0x5558:	mov	rdx, rax
0x555b:	xor	edi, edi
0x555d:	xor	eax, eax
0x555f:	xor	ebx, ebx
0x5561:	call	0x24a0


0x553c:	lea	rsi, [rip + 0xa9cb]
0x5543:	mov	rbx, rax
0x5546:	mov	edx, 5
0x554b:	xor	edi, edi
0x554d:	call	0x2190


0x568d:	lea	rsi, [rip + 0xa88c]
0x5694:	mov	edx, 5
0x5699:	xor	edi, edi
0x569b:	mov	rbx, rax
0x569e:	call	0x2190


0x56a3:	mov	esi, dword ptr [r14]
0x56a6:	mov	rcx, rbx
0x56a9:	mov	rdx, rax
0x56ac:	xor	edi, edi
0x56ae:	xor	eax, eax
0x56b0:	xor	ebx, ebx
0x56b2:	call	0x24a0


0x56b7:	jmp	0x5566


0x564b:	lea	rsi, [rip + 0xa89b]
0x5652:	mov	edx, 5
0x5657:	xor	edi, edi
0x5659:	mov	rbx, rax
0x565c:	call	0x2190


0x5661:	mov	esi, dword ptr [r14]
0x5664:	mov	rcx, rbx
0x5667:	mov	rdx, rax
0x566a:	xor	edi, edi
0x566c:	xor	eax, eax
0x566e:	xor	ebx, ebx
0x5670:	call	0x24a0


0x5675:	jmp	0x5584


0x9cbc:	add	rsp, 0x20
0x9cc0:	mov	r11, qword ptr [rsp + 0x10]
0x9cc5:	cmp	r11, rax
0x9cc8:	ja	0x9d31


0x9cca:	lea	rsi, [rax + 1]
0x9cce:	lea	rax, [rip + 0x20a76b]
0x9cd5:	cmp	r12, rax
0x9cd8:	mov	qword ptr [rbx], rsi
0x9cdb:	je	0x9cef


0x9d31:	mov	eax, dword ptr [rsp + 0x18]
0x9d35:	mov	dword ptr [r13], eax
0x9d39:	add	rsp, 0x28
0x9d3d:	mov	rax, r12
0x9d40:	pop	rbx
0x9d41:	pop	rbp
0x9d42:	pop	r12
0x9d44:	pop	r13
0x9d46:	pop	r14
0x9d48:	pop	r15
0x9d4a:	ret	


0x9cef:	mov	rdi, rsi
0x9cf2:	mov	qword ptr [rsp + 0x10], rsi
0x9cf7:	call	0xadd0


0x9cdd:	mov	rdi, r12
0x9ce0:	mov	qword ptr [rsp + 0x10], rsi
0x9ce5:	call	0x2070


0x9cea:	mov	rsi, qword ptr [rsp + 0x10]
0x9cef:	mov	rdi, rsi
0x9cf2:	mov	qword ptr [rsp + 0x10], rsi
0x9cf7:	call	0xadd0


0x9cfc:	sub	rsp, 8
0x9d00:	mov	qword ptr [rbx + 8], rax
0x9d04:	mov	r8d, dword ptr [rbp]
0x9d08:	push	qword ptr [rbp + 0x30]
0x9d0b:	push	qword ptr [rbp + 0x28]
0x9d0e:	mov	rcx, r14
0x9d11:	push	r15
0x9d13:	mov	r9d, dword ptr [rsp + 0x3c]
0x9d18:	mov	rdi, rax
0x9d1b:	mov	rdx, qword ptr [rsp + 0x28]
0x9d20:	mov	rsi, qword ptr [rsp + 0x30]
0x9d25:	mov	r12, rax
0x9d28:	call	0x8990


0xa442:	mov	rdi, qword ptr [rsp + 0x38]
0xa447:	xor	rdi, qword ptr fs:[0x28]
0xa450:	jne	0xa45c


0xa452:	add	rsp, 0x48
0xa456:	ret	


0xa45c:	call	0x21f0


0xa18f:	mov	rcx, qword ptr [rsp + 0x38]
0xa194:	xor	rcx, qword ptr fs:[0x28]
0xa19d:	jne	0xa1a9


0xa19f:	add	rsp, 0x48
0xa1a3:	ret	


0xa1a9:	call	0x21f0


0xa21b:	mov	rdx, qword ptr [rsp + 0x38]
0xa220:	xor	rdx, qword ptr fs:[0x28]
0xa229:	jne	0xa235


0xa22b:	add	rsp, 0x48
0xa22f:	ret	


0xa235:	call	0x21f0


0xa3af:	mov	rcx, qword ptr [rsp + 0x38]
0xa3b4:	xor	rcx, qword ptr fs:[0x28]
0xa3bd:	jne	0xa3c9


0xa3bf:	add	rsp, 0x48
0xa3c3:	ret	


0xa3c9:	call	0x21f0


0x2bf7:	mov	rbx, rax
0x2bfa:	call	0x20b0


0x2bff:	mov	esi, dword ptr [rax]
0x2c01:	mov	rcx, rbx
0x2c04:	mov	rdx, rbp
0x2c07:	xor	edi, edi
0x2c09:	xor	eax, eax
0x2c0b:	call	0x24a0


0x2c10:	mov	dword ptr [rip + 0x2117de], 1
0x2c1a:	mov	qword ptr [r15 + r14*8], 0
0x2c22:	jmp	0x2baf


0x448c:	mov	esi, dword ptr [rbx]
0x448e:	lea	rdx, [rip + 0xc7e2]
0x4495:	mov	rcx, rax
0x4498:	xor	edi, edi
0x449a:	xor	eax, eax
0x449c:	call	0x24a0


0x44a1:	mov	dword ptr [rip + 0x20ff4d], 1
0x44ab:	jmp	0x43ac


0xa2de:	mov	rsi, qword ptr [rsp + 0x38]
0xa2e3:	xor	rsi, qword ptr fs:[0x28]
0xa2ec:	jne	0xa2f3


0xa2ee:	add	rsp, 0x48
0xa2f2:	ret	


0xa2f3:	call	0x21f0


0x9d2d:	add	rsp, 0x20
0x9d31:	mov	eax, dword ptr [rsp + 0x18]
0x9d35:	mov	dword ptr [r13], eax
0x9d39:	add	rsp, 0x28
0x9d3d:	mov	rax, r12
0x9d40:	pop	rbx
0x9d41:	pop	rbp
0x9d42:	pop	r12
0x9d44:	pop	r13
0x9d46:	pop	r14
0x9d48:	pop	r15
0x9d4a:	ret	


0x9f7c:	lea	rsi, [rax + 1]
0x9f80:	mov	qword ptr [rsp + 0x48], rax
0x9f85:	add	rsp, 0x20
0x9f89:	mov	rdi, rsi
0x9f8c:	mov	qword ptr [rsp + 0x18], rsi
0x9f91:	call	0xadd0


0x9f96:	mov	qword ptr [rsp + 0x10], rax
0x9f9b:	sub	rsp, 8
0x9f9f:	push	qword ptr [rbx + 0x30]
0x9fa2:	push	qword ptr [rbx + 0x28]
0x9fa5:	mov	r10, qword ptr [rsp + 0x38]
0x9faa:	mov	r9d, ebp
0x9fad:	mov	r8d, dword ptr [rbx]
0x9fb0:	mov	rcx, r15
0x9fb3:	mov	rdx, r14
0x9fb6:	mov	rdi, rax
0x9fb9:	push	r10
0x9fbb:	mov	rsi, qword ptr [rsp + 0x38]
0x9fc0:	call	0x8990


0x9fc5:	mov	eax, dword ptr [rsp + 0x2c]
0x9fc9:	add	rsp, 0x20
0x9fcd:	test	r12, r12
0x9fd0:	mov	dword ptr [r13], eax
0x9fd4:	je	0x9fdf


0x9fdf:	mov	rax, qword ptr [rsp + 0x10]
0x9fe4:	add	rsp, 0x38
0x9fe8:	pop	rbx
0x9fe9:	pop	rbp
0x9fea:	pop	r12
0x9fec:	pop	r13
0x9fee:	pop	r14
0x9ff0:	pop	r15
0x9ff2:	ret	


0x9fd6:	mov	r11, qword ptr [rsp + 0x28]
0x9fdb:	mov	qword ptr [r12], r11
0x9fdf:	mov	rax, qword ptr [rsp + 0x10]
0x9fe4:	add	rsp, 0x38
0x9fe8:	pop	rbx
0x9fe9:	pop	rbp
0x9fea:	pop	r12
0x9fec:	pop	r13
0x9fee:	pop	r14
0x9ff0:	pop	r15
0x9ff2:	ret	


0x9ef1:	mov	dword ptr [rbp], r12d
0x9ef5:	add	rsp, 0x38
0x9ef9:	pop	rbx
0x9efa:	pop	rbp
0x9efb:	pop	r12
0x9efd:	pop	r13
0x9eff:	pop	r14
0x9f01:	pop	r15
0x9f03:	ret	


0x7419:	add	rsp, 8
0x741d:	ret	


0x4c33:	test	rax, rax
0x4c36:	je	0x4b32


0x4c3c:	mov	r15, qword ptr [rax + 8]
0x4c40:	test	r15, r15
0x4c43:	je	0x4b32


0x4c49:	mov	rdi, qword ptr [r15]
0x4c4c:	mov	rsi, r14
0x4c4f:	call	0x2340


0x4c54:	test	eax, eax
0x4c56:	je	0x4b32


0x4c5c:	test	byte ptr [r15 + 0x28], 2
0x4c61:	je	0x4c6c


0x4c6c:	or	rax, 0xffffffffffffffff
0x4c70:	mov	byte ptr [rsp + 0x40], 0
0x4c75:	lea	rbx, [rip + 0xbcdd]
0x4c7c:	mov	qword ptr [rsp + 0x50], rax
0x4c81:	mov	qword ptr [rsp + 0x48], rax
0x4c86:	mov	qword ptr [rsp + 0x38], rax
0x4c8b:	mov	qword ptr [rsp + 0x30], rax
0x4c90:	mov	qword ptr [rsp + 0x28], rax
0x4c95:	mov	qword ptr [rsp + 0x20], rax
0x4c9a:	jmp	0x4b32


0x4c63:	test	bpl, bpl
0x4c66:	jne	0x4b32


0x60a6:	test	rax, rax
0x60a9:	setne	al
0x60ac:	mov	rcx, qword ptr [rsp + 0x18]
0x60b1:	xor	rcx, qword ptr fs:[0x28]
0x60ba:	jne	0x60c1


0xcb56:	mov	r12d, eax
0xcb59:	call	0x20b0


0xcb5e:	mov	r13d, dword ptr [rax]
0xcb61:	mov	rbp, rax
0xcb64:	mov	edi, ebx
0xcb66:	call	0x22d0


0xcb6b:	mov	ebx, r12d
0xcb6e:	mov	dword ptr [rbp], r13d
0xcb72:	add	rsp, 8
0xcb76:	mov	eax, ebx
0xcb78:	pop	rbx
0xcb79:	pop	rbp
0xcb7a:	pop	r12
0xcb7c:	pop	r13
0xcb7e:	ret	


0xc914:	mov	rax, -1
0xc91b:	jmp	0xc8e6


0xef8d:	add	rbx, 1
0xef91:	cmp	rbp, rbx
0xef94:	jne	0xef80


0xef80:	mov	rdx, r15
0xef83:	mov	rsi, r14
0xef86:	mov	edi, r13d
0xef89:	call	qword ptr [r12 + rbx*8]


0x6bd8:	mov	rbx, qword ptr [rbx + 8]
0x6bdc:	test	rbx, rbx
0x6bdf:	jne	0x6bd0


0x6be1:	mov	rax, qword ptr [r12 + 8]
0x6be6:	add	rbp, 0x10
0x6bea:	cmp	rax, rbp
0x6bed:	ja	0x6bb8


0x6bd0:	mov	rdi, qword ptr [rbx]
0x6bd3:	call	qword ptr [r12 + 0x40]


0x6b32:	mov	rax, qword ptr [rbp + 0x40]
0x6b36:	mov	rdx, qword ptr [rbx + 8]
0x6b3a:	mov	rcx, qword ptr [rbp + 0x48]
0x6b3e:	mov	qword ptr [rbx], 0
0x6b45:	test	rdx, rdx
0x6b48:	mov	qword ptr [rbx + 8], rcx
0x6b4c:	mov	qword ptr [rbp + 0x48], rbx
0x6b50:	mov	rbx, rdx
0x6b53:	jne	0x6b28


0x68a9:	test	al, al
0x68ab:	je	0x68c4


0x68ad:	mov	rbx, qword ptr [rbx + 8]
0x68b1:	add	rbp, 1
0x68b5:	test	rbx, rbx
0x68b8:	jne	0x68a0


0x68a0:	mov	rdi, qword ptr [rbx]
0x68a3:	mov	rsi, r13
0x68a6:	call	r12


0x619e:	cmp	qword ptr [rbx + 0x10], rax
0x61a2:	jbe	0x61ad


0x61ad:	call	0x20a0


0x61a4:	shl	rax, 4
0x61a8:	add	rax, qword ptr [rbx]
0x61ab:	pop	rbx
0x61ac:	ret	


0x6414:	cmp	qword ptr [rax], 0
0x6418:	mov	rbx, rax
0x641b:	je	0x6470


0x6470:	mov	qword ptr [rax], r15
0x6473:	add	qword ptr [rbp + 0x18], 1
0x6478:	jmp	0x643d


0x641d:	mov	rax, qword ptr [rbp + 0x48]
0x6421:	test	rax, rax
0x6424:	je	0x6480


0x643d:	mov	qword ptr [r12], 0
0x6445:	sub	qword ptr [r13 + 0x18], 1
0x644a:	add	r12, 0x10
0x644e:	cmp	qword ptr [r13 + 8], r12
0x6452:	ja	0x6388


0x6480:	mov	edi, 0x10
0x6485:	call	0x23c0


0x6426:	mov	rdx, qword ptr [rax + 8]
0x642a:	mov	qword ptr [rbp + 0x48], rdx
0x642e:	mov	rdx, qword ptr [rbx + 8]
0x6432:	mov	qword ptr [rax], r15
0x6435:	mov	qword ptr [rax + 8], rdx
0x6439:	mov	qword ptr [rbx + 8], rax
0x643d:	mov	qword ptr [r12], 0
0x6445:	sub	qword ptr [r13 + 0x18], 1
0x644a:	add	r12, 0x10
0x644e:	cmp	qword ptr [r13 + 8], r12
0x6452:	ja	0x6388


0x648a:	test	rax, rax
0x648d:	jne	0x642e


0x648f:	add	rsp, 8
0x6493:	xor	eax, eax
0x6495:	pop	rbx
0x6496:	pop	rbp
0x6497:	pop	r12
0x6499:	pop	r13
0x649b:	pop	r14
0x649d:	pop	r15
0x649f:	ret	


0x642e:	mov	rdx, qword ptr [rbx + 8]
0x6432:	mov	qword ptr [rax], r15
0x6435:	mov	qword ptr [rax + 8], rdx
0x6439:	mov	qword ptr [rbx + 8], rax
0x643d:	mov	qword ptr [r12], 0
0x6445:	sub	qword ptr [r13 + 0x18], 1
0x644a:	add	r12, 0x10
0x644e:	cmp	qword ptr [r13 + 8], r12
0x6452:	ja	0x6388


0x63ca:	cmp	qword ptr [rax], 0
0x63ce:	mov	rdx, qword ptr [rbx + 8]
0x63d2:	jne	0x63a8


0x63d4:	mov	qword ptr [rax], r15
0x63d7:	add	qword ptr [rbp + 0x18], 1
0x63dc:	test	rdx, rdx
0x63df:	mov	qword ptr [rbx], 0
0x63e6:	mov	rax, qword ptr [rbp + 0x48]
0x63ea:	mov	qword ptr [rbx + 8], rax
0x63ee:	mov	qword ptr [rbp + 0x48], rbx
0x63f2:	mov	rbx, rdx
0x63f5:	jne	0x63bc


0x63a8:	mov	rcx, qword ptr [rax + 8]
0x63ac:	test	rdx, rdx
0x63af:	mov	qword ptr [rbx + 8], rcx
0x63b3:	mov	qword ptr [rax + 8], rbx
0x63b7:	mov	rbx, rdx
0x63ba:	je	0x63f7


0x63f7:	mov	r15, qword ptr [r12]
0x63fb:	test	r14b, r14b
0x63fe:	mov	qword ptr [r12 + 8], 0
0x6407:	jne	0x644a


0x61d9:	mov	qword ptr [r14], rax
0x61dc:	mov	rsi, qword ptr [rax]
0x61df:	test	rsi, rsi
0x61e2:	je	0x62d0


0x62d0:	xor	esi, esi
0x62d2:	pop	rbx
0x62d3:	mov	rax, rsi
0x62d6:	pop	rbp
0x62d7:	pop	r12
0x62d9:	pop	r13
0x62db:	pop	r14
0x62dd:	ret	


0x61e8:	cmp	rsi, rbp
0x61eb:	mov	rbx, rax
0x61ee:	je	0x6283


0x6283:	test	r13b, r13b
0x6286:	je	0x626e


0x61f4:	mov	rdi, rbp
0x61f7:	call	qword ptr [r12 + 0x38]


0x626e:	pop	rbx
0x626f:	mov	rax, rsi
0x6272:	pop	rbp
0x6273:	pop	r12
0x6275:	pop	r13
0x6277:	pop	r14
0x6279:	ret	


0x6288:	mov	rax, qword ptr [rbx + 8]
0x628c:	test	rax, rax
0x628f:	je	0x62c0


0x62c0:	mov	qword ptr [rbx], 0
0x62c7:	jmp	0x626e


0x6291:	movdqu	xmm0, xmmword ptr [rax]
0x6295:	movups	xmmword ptr [rbx], xmm0
0x6298:	mov	qword ptr [rax], 0
0x629f:	mov	rdx, qword ptr [r12 + 0x48]
0x62a4:	mov	qword ptr [rax + 8], rdx
0x62a8:	mov	qword ptr [r12 + 0x48], rax
0x62ad:	mov	rax, rsi
0x62b0:	pop	rbx
0x62b1:	pop	rbp
0x62b2:	pop	r12
0x62b4:	pop	r13
0x62b6:	pop	r14
0x62b8:	ret	


0x66df:	mov	rsi, qword ptr [rax]
0x66e2:	test	rsi, rsi
0x66e5:	je	0x670d


0x670d:	xor	esi, esi
0x670f:	pop	rbx
0x6710:	mov	rax, rsi
0x6713:	pop	rbp
0x6714:	pop	r12
0x6716:	ret	


0x66e7:	mov	rbx, rax
0x66ea:	jmp	0x66f3


0x66f3:	cmp	rsi, rbp
0x66f6:	je	0x670f


0x670f:	pop	rbx
0x6710:	mov	rax, rsi
0x6713:	pop	rbp
0x6714:	pop	r12
0x6716:	ret	


0x66f8:	mov	rdi, rbp
0x66fb:	call	qword ptr [r12 + 0x38]


0x6791:	mov	rdx, rax
0x6794:	mov	rcx, rax
0x6797:	mov	rax, qword ptr [rdx]
0x679a:	mov	rdx, qword ptr [rdx + 8]
0x679e:	cmp	rax, rbx
0x67a1:	je	0x67b9


0x67b9:	test	rdx, rdx
0x67bc:	jne	0x67e8


0x67be:	mov	rdx, qword ptr [rbp + 8]
0x67c2:	jmp	0x67d0


0x67e8:	mov	rax, qword ptr [rdx]
0x67eb:	add	rsp, 8
0x67ef:	pop	rbx
0x67f0:	pop	rbp
0x67f1:	ret	


0x67ad:	mov	rax, qword ptr [rdx]
0x67b0:	mov	rdx, qword ptr [rdx + 8]
0x67b4:	cmp	rax, rbx
0x67b7:	jne	0x67a8


0x67d0:	add	rcx, 0x10
0x67d4:	cmp	rdx, rcx
0x67d7:	ja	0x67c8


0x67a8:	test	rdx, rdx
0x67ab:	je	0x67be


0x67d9:	xor	eax, eax
0x67db:	add	rsp, 8
0x67df:	pop	rbx
0x67e0:	pop	rbp
0x67e1:	ret	


0x67c8:	mov	rax, qword ptr [rcx]
0x67cb:	test	rax, rax
0x67ce:	jne	0x67db


0x67db:	add	rsp, 8
0x67df:	pop	rbx
0x67e0:	pop	rbp
0x67e1:	ret	


0x6ee9:	test	rax, rax
0x6eec:	mov	rdx, rax
0x6eef:	je	0x6f20


0x6f20:	mov	rax, qword ptr [rbx + 0x18]
0x6f24:	test	rax, rax
0x6f27:	js	0x6fa0


0x6ef1:	xor	eax, eax
0x6ef3:	test	r13, r13
0x6ef6:	je	0x6efc


0x6fa0:	mov	rdx, rax
0x6fa3:	pxor	xmm1, xmm1
0x6fa7:	and	eax, 1
0x6faa:	shr	rdx, 1
0x6fad:	or	rdx, rax
0x6fb0:	mov	rax, qword ptr [rbx + 0x10]
0x6fb4:	cvtsi2ss	xmm1, rdx
0x6fb9:	mov	rdx, qword ptr [rbx + 0x28]
0x6fbd:	test	rax, rax
0x6fc0:	addss	xmm1, xmm1
0x6fc4:	jns	0x6f43


0x6f29:	pxor	xmm1, xmm1
0x6f2d:	mov	rdx, qword ptr [rbx + 0x28]
0x6f31:	cvtsi2ss	xmm1, rax
0x6f36:	mov	rax, qword ptr [rbx + 0x10]
0x6f3a:	test	rax, rax
0x6f3d:	js	0x6fca


0x6efc:	mov	rcx, qword ptr [rsp + 8]
0x6f01:	xor	rcx, qword ptr fs:[0x28]
0x6f0a:	jne	0x712f


0x6ef8:	mov	qword ptr [r13], rdx
0x6efc:	mov	rcx, qword ptr [rsp + 8]
0x6f01:	xor	rcx, qword ptr fs:[0x28]
0x6f0a:	jne	0x712f


0x6fca:	mov	rcx, rax
0x6fcd:	pxor	xmm0, xmm0
0x6fd1:	shr	rcx, 1
0x6fd4:	and	eax, 1
0x6fd7:	or	rcx, rax
0x6fda:	cvtsi2ss	xmm0, rcx
0x6fdf:	addss	xmm0, xmm0
0x6fe3:	jmp	0x6f4c


0x6f43:	pxor	xmm0, xmm0
0x6f47:	cvtsi2ss	xmm0, rax
0x6f4c:	mulss	xmm0, dword ptr [rdx + 8]
0x6f51:	ucomiss	xmm1, xmm0
0x6f54:	ja	0x6ff0


0x6f10:	add	rsp, 0x18
0x6f14:	pop	rbx
0x6f15:	pop	rbp
0x6f16:	pop	r12
0x6f18:	pop	r13
0x6f1a:	ret	


0x712f:	call	0x21f0


0x6f4c:	mulss	xmm0, dword ptr [rdx + 8]
0x6f51:	ucomiss	xmm1, xmm0
0x6f54:	ja	0x6ff0


0x6f5a:	mov	r12, qword ptr [rsp]
0x6f5e:	cmp	qword ptr [r12], 0
0x6f63:	je	0x7098


0x6ff0:	lea	rdi, [rbx + 0x28]
0x6ff4:	call	0x62e0


0x7098:	mov	qword ptr [r12], rbp
0x709c:	mov	eax, 1
0x70a1:	add	qword ptr [rbx + 0x20], 1
0x70a6:	add	qword ptr [rbx + 0x18], 1
0x70ab:	jmp	0x6efc


0x6f69:	mov	rax, qword ptr [rbx + 0x48]
0x6f6d:	test	rax, rax
0x6f70:	je	0x70b0


0x70b0:	mov	edi, 0x10
0x70b5:	call	0x23c0


0x6f76:	mov	rdx, qword ptr [rax + 8]
0x6f7a:	mov	qword ptr [rbx + 0x48], rdx
0x6f7e:	mov	rdx, qword ptr [r12 + 8]
0x6f83:	mov	qword ptr [rax], rbp
0x6f86:	mov	qword ptr [rax + 8], rdx
0x6f8a:	mov	qword ptr [r12 + 8], rax
0x6f8f:	mov	eax, 1
0x6f94:	add	qword ptr [rbx + 0x20], 1
0x6f99:	jmp	0x6efc


0x70ba:	test	rax, rax
0x70bd:	jne	0x6f7e


0x70c3:	mov	eax, 0xffffffff
0x70c8:	jmp	0x6efc


0x6f7e:	mov	rdx, qword ptr [r12 + 8]
0x6f83:	mov	qword ptr [rax], rbp
0x6f86:	mov	qword ptr [rax + 8], rdx
0x6f8a:	mov	qword ptr [r12 + 8], rax
0x6f8f:	mov	eax, 1
0x6f94:	add	qword ptr [rbx + 0x20], 1
0x6f99:	jmp	0x6efc


0x6ff9:	mov	rax, qword ptr [rbx + 0x10]
0x6ffd:	mov	rdx, qword ptr [rbx + 0x28]
0x7001:	test	rax, rax
0x7004:	movss	xmm2, dword ptr [rdx + 8]
0x7009:	js	0x70d0


0x70d0:	mov	rcx, rax
0x70d3:	pxor	xmm0, xmm0
0x70d7:	shr	rcx, 1
0x70da:	and	eax, 1
0x70dd:	or	rcx, rax
0x70e0:	cvtsi2ss	xmm0, rcx
0x70e5:	addss	xmm0, xmm0
0x70e9:	jmp	0x7018


0x700f:	pxor	xmm0, xmm0
0x7013:	cvtsi2ss	xmm0, rax
0x7018:	mov	rax, qword ptr [rbx + 0x18]
0x701c:	test	rax, rax
0x701f:	js	0x70f0


0x7018:	mov	rax, qword ptr [rbx + 0x18]
0x701c:	test	rax, rax
0x701f:	js	0x70f0


0x70f0:	mov	rcx, rax
0x70f3:	pxor	xmm1, xmm1
0x70f7:	shr	rcx, 1
0x70fa:	and	eax, 1
0x70fd:	or	rcx, rax
0x7100:	cvtsi2ss	xmm1, rcx
0x7105:	addss	xmm1, xmm1
0x7109:	jmp	0x702e


0x7025:	pxor	xmm1, xmm1
0x7029:	cvtsi2ss	xmm1, rax
0x702e:	movaps	xmm3, xmm2
0x7031:	mulss	xmm3, xmm0
0x7035:	ucomiss	xmm1, xmm3
0x7038:	jbe	0x6f5a


0x702e:	movaps	xmm3, xmm2
0x7031:	mulss	xmm3, xmm0
0x7035:	ucomiss	xmm1, xmm3
0x7038:	jbe	0x6f5a


0x703e:	cmp	byte ptr [rdx + 0x10], 0
0x7042:	mulss	xmm0, dword ptr [rdx + 0xc]
0x7047:	jne	0x704d


0x7049:	mulss	xmm0, xmm2
0x704d:	ucomiss	xmm0, dword ptr [rip + 0x8fd8]
0x7054:	jae	0x70c3


0x704d:	ucomiss	xmm0, dword ptr [rip + 0x8fd8]
0x7054:	jae	0x70c3


0x7056:	ucomiss	xmm0, dword ptr [rip + 0x8fd3]
0x705d:	jae	0x7110


0x7063:	cvttss2si	rsi, xmm0
0x7068:	mov	rdi, rbx
0x706b:	call	0x6c70


0x7110:	subss	xmm0, dword ptr [rip + 0x8f18]
0x7118:	movabs	rax, 0x8000000000000000
0x7122:	cvttss2si	rsi, xmm0
0x7127:	xor	rsi, rax
0x712a:	jmp	0x7068


0x7068:	mov	rdi, rbx
0x706b:	call	0x6c70


0x7070:	test	al, al
0x7072:	je	0x70c3


0x7074:	xor	ecx, ecx
0x7076:	mov	rdx, r12
0x7079:	mov	rsi, rbp
0x707c:	mov	rdi, rbx
0x707f:	call	0x61c0


0x7160:	cmp	eax, -1
0x7163:	je	0x7190


0x7190:	xor	ebx, ebx
0x7192:	jmp	0x716d


0x7165:	test	eax, eax
0x7167:	jne	0x716d


0x716d:	mov	rcx, qword ptr [rsp + 8]
0x7172:	xor	rcx, qword ptr fs:[0x28]
0x717b:	mov	rax, rbx
0x717e:	jne	0x7194


0x7169:	mov	rbx, qword ptr [rsp]
0x716d:	mov	rcx, qword ptr [rsp + 8]
0x7172:	xor	rcx, qword ptr fs:[0x28]
0x717b:	mov	rax, rbx
0x717e:	jne	0x7194


0x7180:	add	rsp, 0x10
0x7184:	pop	rbx
0x7185:	ret	


0x7194:	call	0x21f0


0x7084:	test	rax, rax
0x7087:	je	0x6f5a


0x71c8:	test	rax, rax
0x71cb:	mov	rbp, rax
0x71ce:	je	0x71df


0x71df:	mov	rcx, qword ptr [rsp + 8]
0x71e4:	xor	rcx, qword ptr fs:[0x28]
0x71ed:	mov	rax, rbp
0x71f0:	jne	0x739e


0x71d0:	mov	rax, qword ptr [rsp]
0x71d4:	sub	qword ptr [rbx + 0x20], 1
0x71d9:	cmp	qword ptr [rax], 0
0x71dd:	je	0x7200


0x71f6:	add	rsp, 0x10
0x71fa:	pop	rbx
0x71fb:	pop	rbp
0x71fc:	pop	r12
0x71fe:	ret	


0x739e:	call	0x21f0


0x7200:	mov	rax, qword ptr [rbx + 0x18]
0x7204:	sub	rax, 1
0x7208:	test	rax, rax
0x720b:	mov	qword ptr [rbx + 0x18], rax
0x720f:	js	0x7310


0x7310:	mov	rdx, rax
0x7313:	pxor	xmm0, xmm0
0x7317:	shr	rdx, 1
0x731a:	and	eax, 1
0x731d:	or	rdx, rax
0x7320:	cvtsi2ss	xmm0, rdx
0x7325:	addss	xmm0, xmm0
0x7329:	jmp	0x721e


0x7215:	pxor	xmm0, xmm0
0x7219:	cvtsi2ss	xmm0, rax
0x721e:	mov	rax, qword ptr [rbx + 0x10]
0x7222:	mov	rdx, qword ptr [rbx + 0x28]
0x7226:	test	rax, rax
0x7229:	js	0x72f0


0x721e:	mov	rax, qword ptr [rbx + 0x10]
0x7222:	mov	rdx, qword ptr [rbx + 0x28]
0x7226:	test	rax, rax
0x7229:	js	0x72f0


0x72f0:	mov	rcx, rax
0x72f3:	pxor	xmm1, xmm1
0x72f7:	shr	rcx, 1
0x72fa:	and	eax, 1
0x72fd:	or	rcx, rax
0x7300:	cvtsi2ss	xmm1, rcx
0x7305:	addss	xmm1, xmm1
0x7309:	jmp	0x7238


0x722f:	pxor	xmm1, xmm1
0x7233:	cvtsi2ss	xmm1, rax
0x7238:	mulss	xmm1, dword ptr [rdx]
0x723c:	ucomiss	xmm1, xmm0
0x723f:	jbe	0x71df


0x7238:	mulss	xmm1, dword ptr [rdx]
0x723c:	ucomiss	xmm1, xmm0
0x723f:	jbe	0x71df


0x7241:	lea	rdi, [rbx + 0x28]
0x7245:	call	0x62e0


0x724a:	mov	rax, qword ptr [rbx + 0x10]
0x724e:	mov	rdx, qword ptr [rbx + 0x28]
0x7252:	test	rax, rax
0x7255:	js	0x7380


0x7380:	mov	rcx, rax
0x7383:	pxor	xmm0, xmm0
0x7387:	shr	rcx, 1
0x738a:	and	eax, 1
0x738d:	or	rcx, rax
0x7390:	cvtsi2ss	xmm0, rcx
0x7395:	addss	xmm0, xmm0
0x7399:	jmp	0x7264


0x725b:	pxor	xmm0, xmm0
0x725f:	cvtsi2ss	xmm0, rax
0x7264:	mov	rax, qword ptr [rbx + 0x18]
0x7268:	test	rax, rax
0x726b:	js	0x7360


0x7264:	mov	rax, qword ptr [rbx + 0x18]
0x7268:	test	rax, rax
0x726b:	js	0x7360


0x7360:	mov	rcx, rax
0x7363:	pxor	xmm1, xmm1
0x7367:	shr	rcx, 1
0x736a:	and	eax, 1
0x736d:	or	rcx, rax
0x7370:	cvtsi2ss	xmm1, rcx
0x7375:	addss	xmm1, xmm1
0x7379:	jmp	0x727a


0x7271:	pxor	xmm1, xmm1
0x7275:	cvtsi2ss	xmm1, rax
0x727a:	movss	xmm2, dword ptr [rdx]
0x727e:	mulss	xmm2, xmm0
0x7282:	ucomiss	xmm2, xmm1
0x7285:	jbe	0x71df


0x727a:	movss	xmm2, dword ptr [rdx]
0x727e:	mulss	xmm2, xmm0
0x7282:	ucomiss	xmm2, xmm1
0x7285:	jbe	0x71df


0x728b:	cmp	byte ptr [rdx + 0x10], 0
0x728f:	mulss	xmm0, dword ptr [rdx + 4]
0x7294:	je	0x7350


0x7350:	mulss	xmm0, dword ptr [rdx + 8]
0x7355:	jmp	0x729a


0x729a:	ucomiss	xmm0, dword ptr [rip + 0x8d8f]
0x72a1:	jae	0x7330


0x72a7:	cvttss2si	rsi, xmm0
0x72ac:	mov	rdi, rbx
0x72af:	call	0x6c70


0x7330:	subss	xmm0, dword ptr [rip + 0x8cf8]
0x7338:	movabs	rax, 0x8000000000000000
0x7342:	cvttss2si	rsi, xmm0
0x7347:	xor	rsi, rax
0x734a:	jmp	0x72ac


0x72ac:	mov	rdi, rbx
0x72af:	call	0x6c70


0x72b4:	test	al, al
0x72b6:	jne	0x71df


0x72bc:	mov	rdi, qword ptr [rbx + 0x48]
0x72c0:	test	rdi, rdi
0x72c3:	je	0x72d9


0x72d9:	mov	qword ptr [rbx + 0x48], 0
0x72e1:	jmp	0x71df


0x72d1:	test	r12, r12
0x72d4:	mov	rdi, r12
0x72d7:	jne	0x72c8


0x72c8:	mov	r12, qword ptr [rdi + 8]
0x72cc:	call	0x2070


0x6700:	test	al, al
0x6702:	jne	0x6720


0x6704:	mov	rbx, qword ptr [rbx + 8]
0x6708:	test	rbx, rbx
0x670b:	jne	0x66f0


0x6720:	mov	rsi, qword ptr [rbx]
0x6723:	pop	rbx
0x6724:	pop	rbp
0x6725:	mov	rax, rsi
0x6728:	pop	r12
0x672a:	ret	


0x66f0:	mov	rsi, qword ptr [rbx]
0x66f3:	cmp	rsi, rbp
0x66f6:	je	0x670f


0x61fc:	test	al, al
0x61fe:	jne	0x6280


0x6204:	mov	rax, qword ptr [rbx + 8]
0x6208:	test	rax, rax
0x620b:	je	0x62d0


0x6280:	mov	rsi, qword ptr [rbx]
0x6283:	test	r13b, r13b
0x6286:	je	0x626e


0x6211:	mov	rsi, qword ptr [rax]
0x6214:	cmp	rbp, rsi
0x6217:	jne	0x6239


0x6219:	jmp	0x624c


0x6239:	mov	rdi, rbp
0x623c:	call	qword ptr [r12 + 0x38]


0x624c:	test	r13b, r13b
0x624f:	je	0x626e


0x6251:	mov	rdx, qword ptr [rax + 8]
0x6255:	mov	qword ptr [rbx + 8], rdx
0x6259:	mov	qword ptr [rax], 0
0x6260:	mov	rdx, qword ptr [r12 + 0x48]
0x6265:	mov	qword ptr [rax + 8], rdx
0x6269:	mov	qword ptr [r12 + 0x48], rax
0x626e:	pop	rbx
0x626f:	mov	rax, rsi
0x6272:	pop	rbp
0x6273:	pop	r12
0x6275:	pop	r13
0x6277:	pop	r14
0x6279:	ret	


0x6241:	test	al, al
0x6243:	je	0x6220


0x6220:	mov	rbx, qword ptr [rbx + 8]
0x6224:	mov	rax, qword ptr [rbx + 8]
0x6228:	test	rax, rax
0x622b:	je	0x62d0


0x6245:	mov	rax, qword ptr [rbx + 8]
0x6249:	mov	rsi, qword ptr [rax]
0x624c:	test	r13b, r13b
0x624f:	je	0x626e


0x6231:	mov	rsi, qword ptr [rax]
0x6234:	cmp	rsi, rbp
0x6237:	je	0x624c






0xda10:	mov	byte ptr [rax], r14b
0xda13:	mov	rbx, r14
0xda16:	jmp	0xd734


0xda20:	mov	dword ptr [rax], r14d
0xda23:	mov	rbx, r14
0xda26:	jmp	0xd734


0xda30:	mov	word ptr [rax], r14w
0xda34:	mov	rbx, r14
0xda37:	jmp	0xd734


0xd8e0:	mov	qword ptr [rax], r14
0xd8e3:	mov	rbx, r14
0xd8e6:	jmp	0xd734


0xd660:	mov	rax, qword ptr [r13 + 0x50]
0xd664:	lea	rdi, [r15 + r14]
0xd668:	shl	rax, 5
0xd66c:	add	rax, qword ptr [rbp - 0x3a8]
0xd673:	movsx	r9d, byte ptr [rax + 0x10]
0xd678:	mov	eax, dword ptr [rbp - 0x3e0]
0xd67e:	cmp	eax, 1
0xd681:	jne	0xd35e


0xd200:	mov	rax, qword ptr [r13 + 0x50]
0xd204:	lea	rdi, [r15 + r14]
0xd208:	shl	rax, 5
0xd20c:	add	rax, qword ptr [rbp - 0x3a8]
0xd213:	mov	r9, qword ptr [rax + 0x10]
0xd217:	mov	eax, dword ptr [rbp - 0x3e0]
0xd21d:	cmp	eax, 1
0xd220:	je	0xd6e8


0xd460:	mov	rax, qword ptr [r13 + 0x50]
0xd464:	lea	rdi, [r15 + r14]
0xd468:	shl	rax, 5
0xd46c:	add	rax, qword ptr [rbp - 0x3a8]
0xd473:	fld	xword ptr [rax + 0x10]
0xd476:	mov	eax, dword ptr [rbp - 0x3e0]
0xd47c:	cmp	eax, 1
0xd47f:	je	0xdab0


0xd5a8:	mov	rax, qword ptr [r13 + 0x50]
0xd5ac:	lea	rdi, [r15 + r14]
0xd5b0:	shl	rax, 5
0xd5b4:	add	rax, qword ptr [rbp - 0x3a8]
0xd5bb:	movsx	r9d, word ptr [rax + 0x10]
0xd5c0:	mov	eax, dword ptr [rbp - 0x3e0]
0xd5c6:	cmp	eax, 1
0xd5c9:	je	0xd590


0xd568:	mov	rax, qword ptr [r13 + 0x50]
0xd56c:	lea	rdi, [r15 + r14]
0xd570:	shl	rax, 5
0xd574:	add	rax, qword ptr [rbp - 0x3a8]
0xd57b:	movzx	r9d, word ptr [rax + 0x10]
0xd580:	mov	eax, dword ptr [rbp - 0x3e0]
0xd586:	cmp	eax, 1
0xd589:	jne	0xd35e


0xd4e8:	mov	rax, qword ptr [r13 + 0x50]
0xd4ec:	lea	rdi, [r15 + r14]
0xd4f0:	shl	rax, 5
0xd4f4:	add	rax, qword ptr [rbp - 0x3a8]
0xd4fb:	movsd	xmm0, qword ptr [rax + 0x10]
0xd500:	mov	eax, dword ptr [rbp - 0x3e0]
0xd506:	cmp	eax, 1
0xd509:	je	0xdaa0


0xd630:	mov	rax, qword ptr [r13 + 0x50]
0xd634:	lea	rdi, [r15 + r14]
0xd638:	shl	rax, 5
0xd63c:	add	rax, qword ptr [rbp - 0x3a8]
0xd643:	movzx	r9d, byte ptr [rax + 0x10]
0xd648:	mov	eax, dword ptr [rbp - 0x3e0]
0xd64e:	cmp	eax, 1
0xd651:	jne	0xd35e


0xd338:	mov	rax, qword ptr [r13 + 0x50]
0xd33c:	lea	rdi, [r15 + r14]
0xd340:	shl	rax, 5
0xd344:	add	rax, qword ptr [rbp - 0x3a8]
0xd34b:	mov	r9d, dword ptr [rax + 0x10]
0xd34f:	mov	eax, dword ptr [rbp - 0x3e0]
0xd355:	cmp	eax, 1
0xd358:	je	0xd590


0xe182:	mov	r11d, dword ptr [rdi + 4]
0xe186:	cmp	r11d, 0xaf
0xe18d:	ja	0xe23d


0xe0c6:	mov	r11d, dword ptr [rdi]
0xe0c9:	cmp	r11d, 0x2f
0xe0cd:	ja	0xe20a


0xe0ea:	mov	r11d, dword ptr [rdi]
0xe0ed:	cmp	r11d, 0x2f
0xe0f1:	ja	0xe22c


0xe10c:	mov	r11d, dword ptr [rdi]
0xe10f:	cmp	r11d, 0x2f
0xe113:	ja	0xe21b


0xe12e:	mov	r11d, dword ptr [rdi]
0xe131:	cmp	r11d, 0x2f
0xe135:	ja	0xe1da


0xe090:	mov	rdx, qword ptr [rdi + 8]
0xe094:	add	rdx, 0xf
0xe098:	and	rdx, 0xfffffffffffffff0
0xe09c:	lea	r11, [rdx + 0x10]
0xe0a0:	mov	qword ptr [rdi + 8], r11
0xe0a4:	fld	xword ptr [rdx]
0xe0a6:	fstp	xword ptr [rax + 0x10]
0xe0a9:	nop	dword ptr [rax]
0xe0b0:	add	rcx, 1
0xe0b4:	add	rax, 0x20
0xe0b8:	cmp	qword ptr [rsi], rcx
0xe0bb:	ja	0xe078


0xe1b0:	mov	r11d, dword ptr [rdi]
0xe1b3:	cmp	r11d, 0x2f
0xe1b7:	ja	0xe1fc


0xe154:	mov	r11d, dword ptr [rdi]
0xe157:	cmp	r11d, 0x2f
0xe15b:	ja	0xe1eb


0xaa40:	lea	rsi, [rip + 0x5cd1]
0xaa47:	mov	edx, 5
0xaa4c:	xor	edi, edi
0xaa4e:	mov	r14, qword ptr [rbx + 0x18]
0xaa52:	mov	r13, qword ptr [rbx + 0x10]
0xaa56:	mov	r12, qword ptr [rbx + 8]
0xaa5a:	mov	rbx, qword ptr [rbx]
0xaa5d:	call	0x2190


0xa860:	mov	r9, qword ptr [rbx + 0x38]
0xa864:	mov	rax, qword ptr [rbx + 0x10]
0xa868:	lea	rsi, [rip + 0x5f49]
0xa86f:	mov	r8, qword ptr [rbx + 8]
0xa873:	mov	edx, 5
0xa878:	xor	edi, edi
0xa87a:	mov	r13, qword ptr [rbx + 0x30]
0xa87e:	mov	r12, qword ptr [rbx + 0x28]
0xa882:	mov	qword ptr [rsp + 0x10], r9
0xa887:	mov	r15, qword ptr [rbx + 0x20]
0xa88b:	mov	r14, qword ptr [rbx + 0x18]
0xa88f:	mov	qword ptr [rsp], rax
0xa893:	mov	qword ptr [rsp + 8], r8
0xa898:	mov	rbx, qword ptr [rbx]
0xa89b:	call	0x2190


0xa968:	mov	rbx, qword ptr [rbx]
0xa96b:	lea	rsi, [rip + 0x5c4d]
0xa972:	mov	edx, 5
0xa977:	xor	edi, edi
0xa979:	call	0x2190


0xa9a8:	mov	r12, qword ptr [rbx + 8]
0xa9ac:	lea	rsi, [rip + 0x5c1c]
0xa9b3:	mov	rbx, qword ptr [rbx]
0xa9b6:	mov	edx, 5
0xa9bb:	xor	edi, edi
0xa9bd:	call	0x2190


0xaac8:	mov	r8, qword ptr [rbx + 8]
0xaacc:	mov	r12, qword ptr [rbx + 0x28]
0xaad0:	lea	rsi, [rip + 0x5c89]
0xaad7:	mov	r15, qword ptr [rbx + 0x20]
0xaadb:	mov	r14, qword ptr [rbx + 0x18]
0xaadf:	mov	edx, 5
0xaae4:	mov	r13, qword ptr [rbx + 0x10]
0xaae8:	xor	edi, edi
0xaaea:	mov	rbx, qword ptr [rbx]
0xaaed:	mov	qword ptr [rsp], r8
0xaaf1:	call	0x2190


0xa9f0:	mov	r13, qword ptr [rbx + 0x10]
0xa9f4:	mov	r12, qword ptr [rbx + 8]
0xa9f8:	lea	rsi, [rip + 0x5be7]
0xa9ff:	mov	rbx, qword ptr [rbx]
0xaa02:	mov	edx, 5
0xaa07:	xor	edi, edi
0xaa09:	call	0x2190


0xab30:	mov	r9, qword ptr [rbx + 0x10]
0xab34:	mov	r13, qword ptr [rbx + 0x30]
0xab38:	lea	rsi, [rip + 0x5c49]
0xab3f:	mov	r12, qword ptr [rbx + 0x28]
0xab43:	mov	r15, qword ptr [rbx + 0x20]
0xab47:	mov	edx, 5
0xab4c:	mov	r14, qword ptr [rbx + 0x18]
0xab50:	mov	r8, qword ptr [rbx + 8]
0xab54:	xor	edi, edi
0xab56:	mov	qword ptr [rsp + 8], r9
0xab5b:	mov	rbx, qword ptr [rbx]
0xab5e:	mov	qword ptr [rsp], r8
0xab62:	call	0x2190


0xa910:	mov	r10, qword ptr [rbx + 0x40]
0xa914:	mov	r9, qword ptr [rbx + 0x38]
0xa918:	lea	rsi, [rip + 0x5ec9]
0xa91f:	mov	rax, qword ptr [rbx + 0x10]
0xa923:	mov	r8, qword ptr [rbx + 8]
0xa927:	mov	edx, 5
0xa92c:	mov	r13, qword ptr [rbx + 0x30]
0xa930:	mov	r12, qword ptr [rbx + 0x28]
0xa934:	mov	r15, qword ptr [rbx + 0x20]
0xa938:	mov	r14, qword ptr [rbx + 0x18]
0xa93c:	mov	rbx, qword ptr [rbx]
0xa93f:	mov	qword ptr [rsp + 0x18], r10
0xa944:	mov	qword ptr [rsp + 0x10], r9
0xa949:	mov	qword ptr [rsp], rax
0xa94d:	mov	qword ptr [rsp + 8], r8
0xa952:	xor	edi, edi
0xa954:	call	0x2190


0xa8d6:	add	rsp, 0x28
0xa8da:	pop	rbx
0xa8db:	pop	rbp
0xa8dc:	pop	r12
0xa8de:	pop	r13
0xa8e0:	pop	r14
0xa8e2:	pop	r15
0xa8e4:	ret	


0xaa98:	mov	r15, qword ptr [rbx + 0x20]
0xaa9c:	lea	rsi, [rip + 0x5c95]
0xaaa3:	mov	edx, 5
0xaaa8:	xor	edi, edi
0xaaaa:	mov	r14, qword ptr [rbx + 0x18]
0xaaae:	mov	r13, qword ptr [rbx + 0x10]
0xaab2:	mov	r12, qword ptr [rbx + 8]
0xaab6:	mov	rbx, qword ptr [rbx]
0xaab9:	call	0x2190


0xd734:	mov	r8, qword ptr [r13 + 8]
0xd738:	add	r13, 0x58
0xd73c:	mov	rcx, qword ptr [r13]
0xd740:	add	qword ptr [rbp - 0x400], 1
0xd748:	cmp	rcx, r8
0xd74b:	jne	0xcde9


0xd687:	jmp	0xd590


0xd35e:	cmp	eax, 2
0xd361:	je	0xd5d8


0xd6e8:	push	qword ptr [rbp - 0x3f0]
0xd6ee:	push	r9
0xd6f0:	jmp	0xd598


0xd226:	cmp	eax, 2
0xd229:	je	0xd6d0


0xdab0:	sub	rsp, 8
0xdab4:	push	qword ptr [rbp - 0x3f0]
0xdaba:	sub	rsp, 0x10
0xdabe:	fstp	xword ptr [rsp]
0xdac1:	jmp	0xd5eb


0xd485:	cmp	eax, 2
0xd488:	jne	0xd950


0xd590:	push	qword ptr [rbp - 0x3f0]
0xd596:	push	r9
0xd598:	mov	r9d, dword ptr [rbp - 0x3b8]
0xd59f:	jmp	0xd371


0xd5cb:	cmp	eax, 2
0xd5ce:	jne	0xd367


0xdaa0:	sub	rsp, 8
0xdaa4:	push	qword ptr [rbp - 0x3f0]
0xdaaa:	jmp	0xd525


0xd50f:	cmp	eax, 2
0xd512:	jne	0xd910


0xd657:	jmp	0xd590


0xe193:	mov	edx, r11d
0xe196:	add	rdx, qword ptr [rdi + 0x10]
0xe19a:	add	r11d, 0x10
0xe19e:	mov	dword ptr [rdi + 4], r11d
0xe1a2:	movsd	xmm0, qword ptr [rdx]
0xe1a6:	movsd	qword ptr [rax + 0x10], xmm0
0xe1ab:	jmp	0xe0b0


0xe23d:	mov	rdx, qword ptr [rdi + 8]
0xe241:	lea	r11, [rdx + 8]
0xe245:	mov	qword ptr [rdi + 8], r11
0xe249:	jmp	0xe1a2


0xe0d3:	mov	edx, r11d
0xe0d6:	add	rdx, qword ptr [rdi + 0x10]
0xe0da:	add	r11d, 8
0xe0de:	mov	dword ptr [rdi], r11d
0xe0e1:	mov	rdx, qword ptr [rdx]
0xe0e4:	mov	qword ptr [rax + 0x10], rdx
0xe0e8:	jmp	0xe0b0


0xe20a:	mov	rdx, qword ptr [rdi + 8]
0xe20e:	lea	r11, [rdx + 8]
0xe212:	mov	qword ptr [rdi + 8], r11
0xe216:	jmp	0xe0e1


0xe0f7:	mov	edx, r11d
0xe0fa:	add	rdx, qword ptr [rdi + 0x10]
0xe0fe:	add	r11d, 8
0xe102:	mov	dword ptr [rdi], r11d
0xe105:	mov	edx, dword ptr [rdx]
0xe107:	mov	dword ptr [rax + 0x10], edx
0xe10a:	jmp	0xe0b0


0xe22c:	mov	rdx, qword ptr [rdi + 8]
0xe230:	lea	r11, [rdx + 8]
0xe234:	mov	qword ptr [rdi + 8], r11
0xe238:	jmp	0xe105


0xe119:	mov	edx, r11d
0xe11c:	add	rdx, qword ptr [rdi + 0x10]
0xe120:	add	r11d, 8
0xe124:	mov	dword ptr [rdi], r11d
0xe127:	mov	edx, dword ptr [rdx]
0xe129:	mov	byte ptr [rax + 0x10], dl
0xe12c:	jmp	0xe0b0


0xe21b:	mov	rdx, qword ptr [rdi + 8]
0xe21f:	lea	r11, [rdx + 8]
0xe223:	mov	qword ptr [rdi + 8], r11
0xe227:	jmp	0xe127


0xe13b:	mov	edx, r11d
0xe13e:	add	rdx, qword ptr [rdi + 0x10]
0xe142:	add	r11d, 8
0xe146:	mov	dword ptr [rdi], r11d
0xe149:	mov	edx, dword ptr [rdx]
0xe14b:	mov	word ptr [rax + 0x10], dx
0xe14f:	jmp	0xe0b0


0xe1da:	mov	rdx, qword ptr [rdi + 8]
0xe1de:	lea	r11, [rdx + 8]
0xe1e2:	mov	qword ptr [rdi + 8], r11
0xe1e6:	jmp	0xe149


0xe078:	cmp	dword ptr [rax], 0x16
0xe07b:	ja	0xe0c0


0xe1b9:	mov	edx, r11d
0xe1bc:	add	rdx, qword ptr [rdi + 0x10]
0xe1c0:	add	r11d, 8
0xe1c4:	mov	dword ptr [rdi], r11d
0xe1c7:	mov	rdx, qword ptr [rdx]
0xe1ca:	test	rdx, rdx
0xe1cd:	cmove	rdx, r10
0xe1d1:	mov	qword ptr [rax + 0x10], rdx
0xe1d5:	jmp	0xe0b0


0xe1fc:	mov	rdx, qword ptr [rdi + 8]
0xe200:	lea	r11, [rdx + 8]
0xe204:	mov	qword ptr [rdi + 8], r11
0xe208:	jmp	0xe1c7


0xe161:	mov	edx, r11d
0xe164:	add	rdx, qword ptr [rdi + 0x10]
0xe168:	add	r11d, 8
0xe16c:	mov	dword ptr [rdi], r11d
0xe16f:	mov	rdx, qword ptr [rdx]
0xe172:	test	rdx, rdx
0xe175:	cmove	rdx, r9
0xe179:	mov	qword ptr [rax + 0x10], rdx
0xe17d:	jmp	0xe0b0


0xe1eb:	mov	rdx, qword ptr [rdi + 8]
0xe1ef:	lea	r11, [rdx + 8]
0xe1f3:	mov	qword ptr [rdi + 8], r11
0xe1f7:	jmp	0xe16f


0xd5d8:	sub	rsp, 8
0xd5dc:	push	qword ptr [rbp - 0x3f0]
0xd5e2:	push	r9
0xd5e4:	mov	eax, dword ptr [rbp - 0x3b4]
0xd5ea:	push	rax
0xd5eb:	mov	r9d, dword ptr [rbp - 0x3b8]
0xd5f2:	mov	r8, qword ptr [rbp - 0x3d8]
0xd5f9:	mov	rsi, r10
0xd5fc:	mov	rcx, -1
0xd603:	mov	edx, 1
0xd608:	xor	eax, eax
0xd60a:	mov	qword ptr [rbp - 0x430], r10
0xd611:	call	0x2060


0xd367:	sub	rsp, 8
0xd36b:	push	qword ptr [rbp - 0x3f0]
0xd371:	mov	r8, qword ptr [rbp - 0x3d8]
0xd378:	mov	rcx, -1
0xd37f:	mov	edx, 1
0xd384:	mov	rsi, r10
0xd387:	xor	eax, eax
0xd389:	mov	qword ptr [rbp - 0x430], r10
0xd390:	call	0x2060


0xd598:	mov	r9d, dword ptr [rbp - 0x3b8]
0xd59f:	jmp	0xd371


0xd6d0:	sub	rsp, 8
0xd6d4:	push	qword ptr [rbp - 0x3f0]
0xd6da:	push	r9
0xd6dc:	jmp	0xd5e4


0xd22f:	sub	rsp, 8
0xd233:	push	qword ptr [rbp - 0x3f0]
0xd239:	mov	r8, qword ptr [rbp - 0x3d8]
0xd240:	mov	rsi, r10
0xd243:	mov	rcx, -1
0xd24a:	mov	edx, 1
0xd24f:	xor	eax, eax
0xd251:	mov	qword ptr [rbp - 0x430], r10
0xd258:	call	0x2060


0xd5eb:	mov	r9d, dword ptr [rbp - 0x3b8]
0xd5f2:	mov	r8, qword ptr [rbp - 0x3d8]
0xd5f9:	mov	rsi, r10
0xd5fc:	mov	rcx, -1
0xd603:	mov	edx, 1
0xd608:	xor	eax, eax
0xd60a:	mov	qword ptr [rbp - 0x430], r10
0xd611:	call	0x2060


0xd48e:	mov	eax, dword ptr [rbp - 0x3b4]
0xd494:	sub	rsp, 8
0xd498:	push	qword ptr [rbp - 0x3f0]
0xd49e:	mov	r9d, dword ptr [rbp - 0x3b8]
0xd4a5:	mov	r8, qword ptr [rbp - 0x3d8]
0xd4ac:	mov	rsi, r10
0xd4af:	sub	rsp, 0x18
0xd4b3:	mov	rcx, -1
0xd4ba:	mov	edx, 1
0xd4bf:	fstp	xword ptr [rsp + 8]
0xd4c3:	push	rax
0xd4c4:	xor	eax, eax
0xd4c6:	mov	qword ptr [rbp - 0x430], r10
0xd4cd:	call	0x2060


0xd950:	sub	rsp, 0x10
0xd954:	mov	r9, qword ptr [rbp - 0x3f0]
0xd95b:	fstp	xword ptr [rsp]
0xd95e:	jmp	0xd239


0xd371:	mov	r8, qword ptr [rbp - 0x3d8]
0xd378:	mov	rcx, -1
0xd37f:	mov	edx, 1
0xd384:	mov	rsi, r10
0xd387:	xor	eax, eax
0xd389:	mov	qword ptr [rbp - 0x430], r10
0xd390:	call	0x2060


0xd525:	mov	r9d, dword ptr [rbp - 0x3b8]
0xd52c:	mov	r8, qword ptr [rbp - 0x3d8]
0xd533:	mov	rsi, r10
0xd536:	mov	rcx, -1
0xd53d:	mov	edx, 1
0xd542:	mov	eax, 1
0xd547:	mov	qword ptr [rbp - 0x430], r10
0xd54e:	call	0x2060


0xd518:	mov	eax, dword ptr [rbp - 0x3b4]
0xd51e:	push	qword ptr [rbp - 0x3f0]
0xd524:	push	rax
0xd525:	mov	r9d, dword ptr [rbp - 0x3b8]
0xd52c:	mov	r8, qword ptr [rbp - 0x3d8]
0xd533:	mov	rsi, r10
0xd536:	mov	rcx, -1
0xd53d:	mov	edx, 1
0xd542:	mov	eax, 1
0xd547:	mov	qword ptr [rbp - 0x430], r10
0xd54e:	call	0x2060


0xd910:	mov	r9, qword ptr [rbp - 0x3f0]
0xd917:	mov	r8, qword ptr [rbp - 0x3d8]
0xd91e:	mov	rsi, r10
0xd921:	mov	rcx, -1
0xd928:	mov	edx, 1
0xd92d:	mov	eax, 1
0xd932:	mov	qword ptr [rbp - 0x430], r10
0xd939:	call	0x2060


0xe0b0:	add	rcx, 1
0xe0b4:	add	rax, 0x20
0xe0b8:	cmp	qword ptr [rsi], rcx
0xe0bb:	ja	0xe078


0xe1a2:	movsd	xmm0, qword ptr [rdx]
0xe1a6:	movsd	qword ptr [rax + 0x10], xmm0
0xe1ab:	jmp	0xe0b0


0xe0e1:	mov	rdx, qword ptr [rdx]
0xe0e4:	mov	qword ptr [rax + 0x10], rdx
0xe0e8:	jmp	0xe0b0


0xe105:	mov	edx, dword ptr [rdx]
0xe107:	mov	dword ptr [rax + 0x10], edx
0xe10a:	jmp	0xe0b0


0xe127:	mov	edx, dword ptr [rdx]
0xe129:	mov	byte ptr [rax + 0x10], dl
0xe12c:	jmp	0xe0b0


0xe149:	mov	edx, dword ptr [rdx]
0xe14b:	mov	word ptr [rax + 0x10], dx
0xe14f:	jmp	0xe0b0


0xe1c7:	mov	rdx, qword ptr [rdx]
0xe1ca:	test	rdx, rdx
0xe1cd:	cmove	rdx, r10
0xe1d1:	mov	qword ptr [rax + 0x10], rdx
0xe1d5:	jmp	0xe0b0


0xe16f:	mov	rdx, qword ptr [rdx]
0xe172:	test	rdx, rdx
0xe175:	cmove	rdx, r9
0xe179:	mov	qword ptr [rax + 0x10], rdx
0xe17d:	jmp	0xe0b0


0x2060:	jmp	qword ptr [rip + 0x211cc2]


0xd5e4:	mov	eax, dword ptr [rbp - 0x3b4]
0xd5ea:	push	rax
0xd5eb:	mov	r9d, dword ptr [rbp - 0x3b8]
0xd5f2:	mov	r8, qword ptr [rbp - 0x3d8]
0xd5f9:	mov	rsi, r10
0xd5fc:	mov	rcx, -1
0xd603:	mov	edx, 1
0xd608:	xor	eax, eax
0xd60a:	mov	qword ptr [rbp - 0x430], r10
0xd611:	call	0x2060


0xd239:	mov	r8, qword ptr [rbp - 0x3d8]
0xd240:	mov	rsi, r10
0xd243:	mov	rcx, -1
0xd24a:	mov	edx, 1
0xd24f:	xor	eax, eax
0xd251:	mov	qword ptr [rbp - 0x430], r10
0xd258:	call	0x2060




0xaabe:	push	r15
0xaac0:	jmp	0xaa66


0xaa66:	push	r14
0xaa68:	mov	rdx, rax
0xaa6b:	mov	r9, r13
0xaa6e:	mov	r8, r12
0xaa71:	mov	rcx, rbx
0xaa74:	mov	rdi, rbp
0xaa77:	mov	esi, 1
0xaa7c:	xor	eax, eax
0xaa7e:	call	0x2530


0xaa83:	pop	rax
0xaa84:	pop	rdx
0xaa85:	add	rsp, 0x28
0xaa89:	pop	rbx
0xaa8a:	pop	rbp
0xaa8b:	pop	r12
0xaa8d:	pop	r13
0xaa8f:	pop	r14
0xaa91:	pop	r15
0xaa93:	ret	


0xab67:	push	r13
0xab69:	push	r12
0xab6b:	push	r15
0xab6d:	push	r14
0xab6f:	mov	r9, qword ptr [rsp + 0x28]
0xab74:	jmp	0xab03


0xab03:	mov	r8, qword ptr [rsp + 0x20]
0xab08:	mov	rcx, rbx
0xab0b:	mov	rdx, rax
0xab0e:	mov	rdi, rbp
0xab11:	mov	esi, 1
0xab16:	xor	eax, eax
0xab18:	call	0x2530


0xab1d:	add	rsp, 0x20
0xab21:	add	rsp, 0x28
0xab25:	pop	rbx
0xab26:	pop	rbp
0xab27:	pop	r12
0xab29:	pop	r13
0xab2b:	pop	r14
0xab2d:	pop	r15
0xab2f:	ret	


0xaa0e:	add	rsp, 0x28
0xaa12:	mov	r9, r13
0xaa15:	mov	r8, r12
0xaa18:	mov	rcx, rbx
0xaa1b:	mov	rdi, rbp
0xaa1e:	mov	rdx, rax
0xaa21:	pop	rbx
0xaa22:	pop	rbp
0xaa23:	pop	r12
0xaa25:	pop	r13
0xaa27:	pop	r14
0xaa29:	pop	r15
0xaa2b:	mov	esi, 1
0xaa30:	xor	eax, eax
0xaa32:	jmp	0x2530


0xaaf6:	sub	rsp, 8
0xaafa:	mov	r9, r13
0xaafd:	push	r12
0xaaff:	push	r15
0xab01:	push	r14
0xab03:	mov	r8, qword ptr [rsp + 0x20]
0xab08:	mov	rcx, rbx
0xab0b:	mov	rdx, rax
0xab0e:	mov	rdi, rbp
0xab11:	mov	esi, 1
0xab16:	xor	eax, eax
0xab18:	call	0x2530


0xa9c2:	add	rsp, 0x28
0xa9c6:	mov	r8, r12
0xa9c9:	mov	rcx, rbx
0xa9cc:	mov	rdi, rbp
0xa9cf:	mov	rdx, rax
0xa9d2:	mov	esi, 1
0xa9d7:	pop	rbx
0xa9d8:	pop	rbp
0xa9d9:	pop	r12
0xa9db:	pop	r13
0xa9dd:	pop	r14
0xa9df:	pop	r15
0xa9e1:	xor	eax, eax
0xa9e3:	jmp	0x2530


0xa97e:	add	rsp, 0x28
0xa982:	mov	rcx, rbx
0xa985:	mov	rdi, rbp
0xa988:	pop	rbx
0xa989:	pop	rbp
0xa98a:	pop	r12
0xa98c:	pop	r13
0xa98e:	pop	r14
0xa990:	pop	r15
0xa992:	mov	rdx, rax
0xa995:	mov	esi, 1
0xa99a:	xor	eax, eax
0xa99c:	jmp	0x2530


0xa8a0:	sub	rsp, 8
0xa8a4:	mov	r9, qword ptr [rsp + 0x18]
0xa8a9:	mov	rdx, rax
0xa8ac:	mov	rcx, rbx
0xa8af:	mov	esi, 1
0xa8b4:	mov	rdi, rbp
0xa8b7:	xor	eax, eax
0xa8b9:	push	r9
0xa8bb:	push	r13
0xa8bd:	push	r12
0xa8bf:	push	r15
0xa8c1:	push	r14
0xa8c3:	mov	r9, qword ptr [rsp + 0x30]
0xa8c8:	mov	r8, qword ptr [rsp + 0x38]
0xa8cd:	call	0x2530


0xaa62:	sub	rsp, 8
0xaa66:	push	r14
0xaa68:	mov	rdx, rax
0xaa6b:	mov	r9, r13
0xaa6e:	mov	r8, r12
0xaa71:	mov	rcx, rbx
0xaa74:	mov	rdi, rbp
0xaa77:	mov	esi, 1
0xaa7c:	xor	eax, eax
0xaa7e:	call	0x2530


0xd25d:	pop	rsi
0xd25e:	pop	rdi
0xd25f:	mov	r10, qword ptr [rbp - 0x430]
0xd266:	mov	ecx, dword ptr [rbp - 0x3bc]
0xd26c:	test	ecx, ecx
0xd26e:	js	0xd3ac


0xd3ac:	mov	rdi, qword ptr [rbp - 0x3f8]
0xd3b3:	cmp	byte ptr [rdi + 1], 0
0xd3b7:	jne	0xd6f8


0xd274:	movsxd	rdx, ecx
0xd277:	cmp	rdx, r10
0xd27a:	jae	0xd28a


0xd3bd:	test	eax, eax
0xd3bf:	jns	0xd28e


0xd6f8:	mov	byte ptr [rdi + 1], 0
0xd6fc:	jmp	0xd1b0


0xd27c:	add	rdx, r15
0xd27f:	cmp	byte ptr [rdx + r14], 0
0xd284:	jne	0xdbc6


0xd28a:	cmp	ecx, eax
0xd28c:	jge	0xd296


0xd3c5:	mov	rax, qword ptr [rbp - 0x3c8]
0xd3cc:	mov	ebx, dword ptr [rax]
0xd3ce:	test	ebx, ebx
0xd3d0:	jne	0xd3f0


0xd28e:	mov	dword ptr [rbp - 0x3bc], eax
0xd294:	mov	ecx, eax
0xd296:	lea	eax, [rcx + 1]
0xd299:	cmp	rax, r10
0xd29c:	jb	0xdad0


0xd1b0:	mov	rax, qword ptr [rbp - 0x3c8]
0xd1b7:	mov	rbx, r12
0xd1ba:	mov	r10d, 0x7fffffff
0xd1c0:	sub	rbx, r14
0xd1c3:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0xd1cd:	cmp	rbx, 0x7fffffff
0xd1d4:	mov	dword ptr [rax], 0
0xd1da:	mov	eax, dword ptr [rbp - 0x3d0]
0xd1e0:	cmovbe	r10, rbx
0xd1e4:	cmp	eax, 0x11
0xd1e7:	ja	0xdbc6


0xd296:	lea	eax, [rcx + 1]
0xd299:	cmp	rax, r10
0xd29c:	jb	0xdad0


0xd3d2:	movzx	eax, byte ptr [r13 + 0x48]
0xd3d7:	mov	ebx, 0x16
0xd3dc:	and	eax, 0xffffffef
0xd3df:	cmp	al, 0x63
0xd3e1:	mov	eax, 0x54
0xd3e6:	cmove	ebx, eax
0xd3e9:	nop	dword ptr [rax]
0xd3f0:	cmp	r15, qword ptr [rbp - 0x3e8]
0xd3f7:	je	0xd402


0xd3f0:	cmp	r15, qword ptr [rbp - 0x3e8]
0xd3f7:	je	0xd402


0xdad0:	mov	rax, qword ptr [rbp - 0x3c8]
0xdad7:	mov	edi, dword ptr [rbp - 0x424]
0xdadd:	movsxd	rbx, ecx
0xdae0:	add	rbx, r14
0xdae3:	mov	dword ptr [rax], edi
0xdae5:	jmp	0xd734


0xd2a2:	cmp	rbx, 0x7ffffffe
0xd2a9:	ja	0xdaf0


0xd402:	mov	rax, qword ptr [rbp - 0x420]
0xd409:	test	rax, rax
0xd40c:	je	0xd416


0xd3f9:	test	r15, r15
0xd3fc:	jne	0xdbac


0xd2af:	lea	rsi, [r12 + r12]
0xd2b3:	lea	edx, [rcx + 2]
0xd2b6:	test	r12, r12
0xd2b9:	mov	rax, -1
0xd2c0:	cmovns	rax, rsi
0xd2c4:	add	rdx, r14
0xd2c7:	jb	0xdd88


0xdaf0:	cmp	r15, qword ptr [rbp - 0x3e8]
0xdaf7:	je	0xdb02


0xd416:	mov	rax, qword ptr [rbp - 0x408]
0xd41d:	mov	rdi, qword ptr [rbp - 0x2b8]
0xd424:	add	rax, 0x20
0xd428:	cmp	rdi, rax
0xd42b:	je	0xd432


0xd40e:	mov	rdi, rax
0xd411:	call	0x2070


0xdbac:	mov	rdi, r15
0xdbaf:	call	0x2070


0xdd88:	cmp	r12, -1
0xdd8c:	je	0xd1b0


0xd2cd:	cmp	rax, rdx
0xd2d0:	cmovb	rax, rdx
0xd2d4:	cmp	r12, rax
0xd2d7:	jae	0xd1b0


0xdb02:	mov	rax, qword ptr [rbp - 0x420]
0xdb09:	test	rax, rax
0xdb0c:	je	0xdb16


0xdaf9:	test	r15, r15
0xdafc:	jne	0xdbb9


0xd432:	mov	rax, qword ptr [rbp - 0x410]
0xd439:	mov	rdi, qword ptr [rbp - 0x3a8]
0xd440:	add	rax, 0x10
0xd444:	cmp	rdi, rax
0xd447:	je	0xd44e


0xd42d:	call	0x2070


0xdd92:	jmp	0xce11


0xd2dd:	test	r12, r12
0xd2e0:	js	0xce11


0xdb16:	mov	rax, qword ptr [rbp - 0x408]
0xdb1d:	mov	rdi, qword ptr [rbp - 0x2b8]
0xdb24:	add	rax, 0x20
0xdb28:	cmp	rdi, rax
0xdb2b:	je	0xdb32


0xdb0e:	mov	rdi, rax
0xdb11:	call	0x2070


0xdbb9:	mov	rdi, r15
0xdbbc:	call	0x2070


0xd44e:	mov	rax, qword ptr [rbp - 0x3c8]
0xd455:	xor	r15d, r15d
0xd458:	mov	dword ptr [rax], ebx
0xd45a:	jmp	0xce7f


0xd449:	call	0x2070


0xce11:	cmp	r15, qword ptr [rbp - 0x3e8]
0xce18:	je	0xce23


0xd2e6:	cmp	rsi, rax
0xd2e9:	mov	r12, rsi
0xd2ec:	jae	0xd2fb


0xdb32:	mov	rax, qword ptr [rbp - 0x410]
0xdb39:	mov	rdi, qword ptr [rbp - 0x3a8]
0xdb40:	add	rax, 0x10
0xdb44:	cmp	rdi, rax
0xdb47:	je	0xdb4e


0xdb2d:	call	0x2070


0xd2ee:	cmp	rax, -1
0xd2f2:	je	0xce11


0xd2fb:	cmp	r15, qword ptr [rbp - 0x3e8]
0xd302:	sete	bl
0xd305:	test	r15, r15
0xd308:	je	0xd690


0xdb4e:	mov	rax, qword ptr [rbp - 0x3c8]
0xdb55:	xor	r15d, r15d
0xdb58:	mov	dword ptr [rax], 0x4b
0xdb5e:	jmp	0xce7f


0xdb49:	call	0x2070


0xd2f8:	mov	r12, rax
0xd2fb:	cmp	r15, qword ptr [rbp - 0x3e8]
0xd302:	sete	bl
0xd305:	test	r15, r15
0xd308:	je	0xd690


0xd690:	mov	rdi, r12
0xd693:	call	0x23c0


0xd30e:	test	bl, bl
0xd310:	jne	0xd690


0xd316:	mov	rsi, r12
0xd319:	mov	rdi, r15
0xd31c:	call	0x2450


0xd321:	test	rax, rax
0xd324:	je	0xce11


0xd32a:	mov	r15, rax
0xd32d:	jmp	0xd1b0


0xd698:	test	rax, rax
0xd69b:	mov	rcx, rax
0xd69e:	je	0xce11


0xd6a4:	test	r14, r14
0xd6a7:	je	0xd760


0xd760:	mov	r15, rcx
0xd763:	jmp	0xd1b0


0xd6ad:	test	bl, bl
0xd6af:	je	0xd760


0xd6b5:	mov	rsi, r15
0xd6b8:	mov	rdx, r14
0xd6bb:	mov	rdi, rax
0xd6be:	call	0x2360


0xd6c3:	mov	r15, rax
0xd6c6:	jmp	0xd1b0


0xdbc1:	jmp	0xdb02


0xdbb4:	jmp	0xd402


0xd616:	add	rsp, 0x20
0xd61a:	mov	r10, qword ptr [rbp - 0x430]
0xd621:	jmp	0xd266


0xd266:	mov	ecx, dword ptr [rbp - 0x3bc]
0xd26c:	test	ecx, ecx
0xd26e:	js	0xd3ac


0xd93e:	mov	r10, qword ptr [rbp - 0x430]
0xd945:	jmp	0xd266


0xd553:	pop	r8
0xd555:	mov	r10, qword ptr [rbp - 0x430]
0xd55c:	pop	r9
0xd55e:	jmp	0xd266


0xd395:	pop	rdx
0xd396:	pop	rcx
0xd397:	mov	ecx, dword ptr [rbp - 0x3bc]
0xd39d:	mov	r10, qword ptr [rbp - 0x430]
0xd3a4:	test	ecx, ecx
0xd3a6:	jns	0xd274


0xd4d2:	add	rsp, 0x30
0xd4d6:	mov	r10, qword ptr [rbp - 0x430]
0xd4dd:	jmp	0xd266


0x3157:	sub	rsp, 8
0x315b:	xor	edi, edi
0x315d:	xor	r9d, r9d
0x3160:	push	0
0x3162:	push	0
0x3164:	xor	r8d, r8d
0x3167:	push	0
0x3169:	xor	ecx, ecx
0x316b:	mov	rdx, r15
0x316e:	mov	rsi, rax
0x3171:	call	0x4350


0x3176:	add	rsp, 0x20
0x317a:	mov	rdi, rbx
0x317d:	call	0x2070


0x3182:	add	qword ptr [rsp + 0x10], 1
0x3188:	mov	rax, qword ptr [rsp + 0x10]
0x318d:	cmp	dword ptr [rsp + 8], eax
0x3191:	jg	0x2d99


0x3197:	mov	r15, qword ptr [rsp + 0x78]
0x319c:	cmp	byte ptr [rip + 0x21125a], 0
0x31a3:	je	0x343c


0x2d99:	mov	rcx, qword ptr [rsp + 0x40]
0x2d9e:	mov	rax, qword ptr [rsp + 0x10]
0x2da3:	mov	rcx, qword ptr [rcx + rax*8]
0x2da7:	test	rcx, rcx
0x2daa:	mov	rbx, rcx
0x2dad:	mov	qword ptr [rsp + 0x30], rcx
0x2db2:	je	0x3182


0x343c:	cmp	dword ptr [rip + 0x210fb5], 0
0x3443:	jne	0x33bc


0x31a9:	cmp	byte ptr [rip + 0x211228], 0
0x31b0:	je	0x31ee


0x2db8:	sub	eax, dword ptr [rip + 0x211552]
0x2dbe:	cdqe	
0x2dc0:	imul	rax, rax, 0x90
0x2dc7:	add	rax, qword ptr [rsp + 0x60]
0x2dcc:	mov	qword ptr [rsp + 0x50], rax
0x2dd1:	mov	eax, dword ptr [rax + 0x18]
0x2dd4:	mov	dword ptr [rsp + 0x18], eax
0x2dd8:	and	eax, 0xb000
0x2ddd:	cmp	eax, 0x2000
0x2de2:	jne	0x2f66


0x3449:	lea	rsi, [rip + 0xbd9e]
0x3450:	mov	edx, 5
0x3455:	xor	edi, edi
0x3457:	call	0x2190


0x33bc:	mov	eax, dword ptr [rip + 0x211036]
0x33c2:	jmp	0x2ad8


0x31ee:	xor	r13d, r13d
0x31f1:	cmp	r13, qword ptr [rip + 0x211168]
0x31f8:	jae	0x33bc


0x31b2:	cmp	byte ptr [rip + 0x210e93], 0
0x31b9:	lea	rdi, [rip + 0xc0d8]
0x31c0:	lea	rsi, [rip + 0xd792]
0x31c7:	lea	rax, [rip + 0x2111d2]
0x31ce:	cmove	rsi, rdi
0x31d2:	sub	rsp, 8
0x31d6:	xor	r9d, r9d
0x31d9:	push	0
0x31db:	push	rax
0x31dc:	xor	r8d, r8d
0x31df:	push	0
0x31e1:	xor	ecx, ecx
0x31e3:	xor	edx, edx
0x31e5:	call	0x4350


0x2de8:	mov	rdi, rcx
0x2deb:	call	0x22c0


0x2f66:	mov	rdi, qword ptr [rsp + 0x30]
0x2f6b:	call	0x22c0


0x31fe:	mov	rax, qword ptr [rip + 0x21116b]
0x3205:	test	rax, rax
0x3208:	je	0x32e9


0x22c0:	jmp	qword ptr [rip + 0x211b92]


0x32e9:	mov	rdi, qword ptr [rip + 0x211018]
0x32f0:	mov	rax, qword ptr [rdi + 0x28]
0x32f4:	cmp	rax, qword ptr [rdi + 0x30]
0x32f8:	jae	0x3996


0x320e:	mov	rdx, qword ptr [rip + 0x211153]
0x3215:	lea	r12, [r13*8]
0x321d:	xor	ebx, ebx
0x321f:	mov	rdx, qword ptr [rdx + r13*8]
0x3223:	mov	r14, qword ptr [rdx]
0x3226:	nop	word ptr cs:[rax + rax]
0x3230:	sub	rax, 1
0x3234:	xor	ecx, ecx
0x3236:	mov	rdi, r14
0x3239:	cmp	rax, rbx
0x323c:	mov	rax, qword ptr [rip + 0x211135]
0x3243:	mov	rsi, r15
0x3246:	sete	cl
0x3249:	lea	rbp, [rbx*8]
0x3251:	shl	ecx, 3
0x3254:	mov	rax, qword ptr [rax + rbx*8]
0x3258:	mov	rdx, qword ptr [rax + 0x20]
0x325c:	mov	qword ptr [rsp + 0x80], rdx
0x3264:	mov	edx, dword ptr [rax + 0x28]
0x3267:	call	0x8570




0x32fe:	lea	rdx, [rax + 1]
0x3302:	mov	qword ptr [rdi + 0x28], rdx
0x3306:	mov	byte ptr [rax], 0xa
0x3309:	add	r13, 1
0x330d:	jmp	0x31f1


0x3996:	mov	esi, 0xa
0x399b:	call	0x2240


0x31f1:	cmp	r13, qword ptr [rip + 0x211168]
0x31f8:	jae	0x33bc


0x39a0:	jmp	0x3309


0x3309:	add	r13, 1
0x330d:	jmp	0x31f1


0x326c:	test	rax, rax
0x326f:	mov	r14, rax
0x3272:	mov	rsi, qword ptr [rip + 0x21108f]
0x3279:	mov	rdi, rax
0x327c:	je	0x32d8


0x32d8:	mov	rax, qword ptr [rip + 0x211089]
0x32df:	mov	rax, qword ptr [rax + r12]
0x32e3:	mov	rdi, qword ptr [rax + rbx*8]
0x32e7:	jmp	0x327e


0x327e:	call	0x2310


0x3283:	mov	rdi, r14
0x3286:	add	rbx, 1
0x328a:	call	0x2070


0x328f:	mov	rax, qword ptr [rip + 0x2110da]
0x3296:	cmp	rbx, rax
0x3299:	jae	0x32e9


0x329b:	mov	rdx, qword ptr [rip + 0x2110c6]
0x32a2:	test	rbx, rbx
0x32a5:	mov	rdx, qword ptr [rdx + r12]
0x32a9:	mov	r14, qword ptr [rdx + rbp + 8]
0x32ae:	je	0x3230


0x3230:	sub	rax, 1
0x3234:	xor	ecx, ecx
0x3236:	mov	rdi, r14
0x3239:	cmp	rax, rbx
0x323c:	mov	rax, qword ptr [rip + 0x211135]
0x3243:	mov	rsi, r15
0x3246:	sete	cl
0x3249:	lea	rbp, [rbx*8]
0x3251:	shl	ecx, 3
0x3254:	mov	rax, qword ptr [rax + rbx*8]
0x3258:	mov	rdx, qword ptr [rax + 0x20]
0x325c:	mov	qword ptr [rsp + 0x80], rdx
0x3264:	mov	edx, dword ptr [rax + 0x28]
0x3267:	call	0x8570


0x32b0:	mov	rdi, qword ptr [rip + 0x211051]
0x32b7:	mov	rdx, qword ptr [rdi + 0x28]
0x32bb:	cmp	rdx, qword ptr [rdi + 0x30]
0x32bf:	jae	0x340b


0x32c5:	lea	rcx, [rdx + 1]
0x32c9:	mov	qword ptr [rdi + 0x28], rcx
0x32cd:	mov	byte ptr [rdx], 0x20
0x32d0:	jmp	0x3230


0x340b:	mov	esi, 0x20
0x3410:	call	0x2240


0x3415:	mov	rax, qword ptr [rip + 0x210f54]
0x341c:	jmp	0x3230


0x31ea:	add	rsp, 0x20
0x31ee:	xor	r13d, r13d
0x31f1:	cmp	r13, qword ptr [rip + 0x211168]
0x31f8:	jae	0x33bc


0x345c:	xor	esi, esi
0x345e:	mov	rdx, rax
0x3461:	mov	edi, 1
0x3466:	xor	eax, eax
0x3468:	call	0x24a0


0x346d:	mov	rdi, r8
0x3470:	call	0x2070


0x3475:	mov	rdi, r12
0x3478:	call	0x2070


0x347d:	mov	rdi, qword ptr [rsp + 0x68]
0x3482:	call	0x2070


0x3487:	mov	qword ptr [rsp + 0x58], rbx
0x348c:	mov	rcx, qword ptr [rsp + 0x58]
0x3491:	sub	rsp, 8
0x3495:	movzx	r9d, byte ptr [rcx + 0x28]
0x349a:	mov	rsi, qword ptr [rcx + 8]
0x349e:	push	0
0x34a0:	push	0
0x34a2:	mov	r8, qword ptr [rcx + 0x18]
0x34a6:	mov	eax, r9d
0x34a9:	and	r9d, 1
0x34ad:	shr	al, 1
0x34af:	and	eax, 1
0x34b2:	push	rax
0x34b3:	mov	rax, rcx
0x34b6:	mov	rdx, qword ptr [rsp + 0x50]
0x34bb:	mov	rdi, qword ptr [rax]
0x34be:	xor	ecx, ecx
0x34c0:	call	0x4350


0x34c5:	add	rsp, 0x20
0x34c9:	jmp	0x3182


0x2f70:	test	rax, rax
0x2f73:	mov	r15, rax
0x2f76:	mov	r12, qword ptr [rip + 0x211463]
0x2f7d:	je	0x2f88


0x2f88:	mov	rdi, r15
0x2f8b:	call	0x2070


0x2f7f:	cmp	byte ptr [rax], 0x2f
0x2f82:	je	0x34ce


0x34ce:	or	r13, 0xffffffffffffffff
0x34d2:	xor	eax, eax
0x34d4:	mov	rdi, r15
0x34d7:	mov	rcx, r13
0x34da:	mov	rbp, r12
0x34dd:	xor	ebx, ebx
0x34df:	repne scasb	al, byte ptr [rdi]


0x34df:	repne scasb	al, byte ptr [rdi]


0x34e1:	xor	r14d, r14d
0x34e4:	mov	qword ptr [rsp + 0x18], 0
0x34ed:	mov	rax, rcx
0x34f0:	not	rax
0x34f3:	add	rax, r13
0x34f6:	mov	qword ptr [rsp + 0x20], rax
0x34fb:	jmp	0x356c


0x356c:	test	rbp, rbp
0x356f:	jne	0x34fd


0x3571:	mov	rdi, r15
0x3574:	call	0x2070


0x34fd:	mov	rdi, qword ptr [rbp + 0x18]
0x3501:	lea	rsi, [rip + 0xbce1]
0x3508:	call	0x2340


0x350d:	test	eax, eax
0x350f:	je	0x3568


0x3568:	mov	rbp, qword ptr [rbp + 0x30]
0x356c:	test	rbp, rbp
0x356f:	jne	0x34fd


0x3511:	test	rbx, rbx
0x3514:	je	0x3522


0x3522:	mov	r9, qword ptr [rbp + 8]
0x3526:	mov	rcx, r13
0x3529:	mov	eax, r14d
0x352c:	mov	rdi, r9
0x352f:	repne scasb	al, byte ptr [rdi]


0x3516:	test	byte ptr [rbx + 0x28], 1
0x351a:	jne	0x3522


0x3531:	not	rcx
0x3534:	lea	r10, [rcx - 1]
0x3538:	cmp	r10, qword ptr [rsp + 0x18]
0x353d:	jb	0x3568


0x352f:	repne scasb	al, byte ptr [rdi]


0x351c:	test	byte ptr [rbp + 0x28], 1
0x3520:	jne	0x3568


0x353f:	mov	rax, qword ptr [rsp + 0x20]
0x3544:	cmp	rax, r10
0x3547:	jb	0x3568


0x3549:	cmp	r10, 1
0x354d:	je	0x3a29


0x3a29:	mov	qword ptr [rsp + 0x18], 1
0x3a32:	mov	rbx, rbp
0x3a35:	jmp	0x3568


0x3553:	cmp	rax, r10
0x3556:	je	0x39fb


0x39fb:	mov	rdx, r10
0x39fe:	mov	rsi, r15
0x3a01:	mov	rdi, r9
0x3a04:	mov	qword ptr [rsp + 0x28], r10
0x3a09:	call	0x20c0


0x355c:	cmp	byte ptr [r15 + rcx - 1], 0x2f
0x3562:	je	0x39fb


0x3a0e:	mov	r10, qword ptr [rsp + 0x28]
0x3a13:	test	eax, eax
0x3a15:	cmovne	r10, qword ptr [rsp + 0x18]
0x3a1b:	cmove	rbx, rbp
0x3a1f:	mov	qword ptr [rsp + 0x18], r10
0x3a24:	jmp	0x3568


0x3579:	test	rbx, rbx
0x357c:	je	0x2f90


0x2f90:	test	r12, r12
0x2f93:	je	0x313d


0x3582:	mov	rsi, qword ptr [rbx + 8]
0x3586:	mov	rdx, qword ptr [rsp + 0x48]
0x358b:	mov	edi, 1
0x3590:	call	0x2390


0x313d:	mov	r15, qword ptr [rsp + 0x30]
0x3142:	mov	rsi, qword ptr [rsp + 0x50]
0x3147:	mov	rdi, r15
0x314a:	call	0x5380


0x2f99:	xor	ebx, ebx
0x2f9b:	mov	rbp, -2
0x2fa2:	mov	r13, qword ptr [rsp + 0x50]
0x2fa7:	jmp	0x2fbe


0x2fbe:	cmp	qword ptr [r12 + 0x20], -1
0x2fc4:	je	0x3392


0x3392:	mov	rsi, qword ptr [r12 + 8]
0x3397:	mov	rdx, qword ptr [rsp + 0x48]
0x339c:	mov	edi, 1
0x33a1:	call	0x2390


0x2fca:	mov	rax, qword ptr [r12 + 0x20]
0x2fcf:	cmp	qword ptr [r13], rax
0x2fd3:	jne	0x2fb0


0x2fd5:	mov	rdi, qword ptr [r12 + 0x18]
0x2fda:	lea	rsi, [rip + 0xc208]
0x2fe1:	call	0x2340


0x2fb0:	mov	r12, qword ptr [r12 + 0x30]
0x2fb5:	test	r12, r12
0x2fb8:	je	0x33c7


0x33c7:	test	rbx, rbx
0x33ca:	je	0x313d


0x33d0:	movzx	r9d, byte ptr [rbx + 0x28]
0x33d5:	sub	rsp, 8
0x33d9:	mov	rsi, qword ptr [rbx + 8]
0x33dd:	push	0
0x33df:	push	0
0x33e1:	mov	r8, qword ptr [rbx + 0x18]
0x33e5:	mov	rdi, qword ptr [rbx]
0x33e8:	mov	eax, r9d
0x33eb:	and	r9d, 1
0x33ef:	shr	al, 1
0x33f1:	and	eax, 1
0x33f4:	push	rax
0x33f5:	mov	rdx, qword ptr [rsp + 0x50]
0x33fa:	mov	rcx, rdx
0x33fd:	call	0x4350


0x3402:	add	rsp, 0x20
0x3406:	jmp	0x3182


0x2fe6:	test	eax, eax
0x2fe8:	je	0x2fb0


0x2fea:	test	rbx, rbx
0x2fed:	je	0x2ffd


0x2ffd:	mov	rsi, qword ptr [r12 + 8]
0x3002:	mov	rdx, qword ptr [rsp + 0x48]
0x3007:	mov	edi, 1
0x300c:	call	0x2390


0x2fef:	test	byte ptr [rbx + 0x28], 1
0x2ff3:	jne	0x2ffd


0x2ff5:	test	byte ptr [r12 + 0x28], 1
0x2ffb:	jne	0x2fb0


0x314f:	test	rax, rax
0x3152:	mov	rbx, rax
0x3155:	je	0x3182


0x3011:	test	eax, eax
0x3013:	jne	0x3028


0x3015:	mov	rax, qword ptr [r12 + 0x20]
0x301a:	cmp	qword ptr [rsp + 0xa0], rax
0x3022:	je	0x3a3a


0x3028:	mov	qword ptr [r12 + 0x20], rbp
0x302d:	jmp	0x2fb0


0x3a3a:	mov	rbx, r12
0x3a3d:	jmp	0x2fb0


0x33a6:	test	eax, eax
0x33a8:	jne	0x3421


0x33aa:	mov	rax, qword ptr [rsp + 0xa0]
0x33b2:	mov	qword ptr [r12 + 0x20], rax
0x33b7:	jmp	0x2fca


0x3421:	call	0x20b0


0x3426:	cmp	dword ptr [rax], 5
0x3429:	mov	r14, rax
0x342c:	je	0x3a42


0x3a42:	mov	rdx, qword ptr [r12 + 8]
0x3a47:	mov	esi, 3
0x3a4c:	xor	edi, edi
0x3a4e:	call	0xa340


0x3432:	mov	qword ptr [r12 + 0x20], rbp
0x3437:	jmp	0x2fca


0x3a53:	mov	esi, dword ptr [r14]
0x3a56:	lea	rdx, [rip + 0xd21a]
0x3a5d:	mov	rcx, rax
0x3a60:	xor	edi, edi
0x3a62:	xor	eax, eax
0x3a64:	call	0x24a0


0x3a69:	mov	dword ptr [rip + 0x210985], 1
0x3a73:	jmp	0x3432


0x3595:	test	eax, eax
0x3597:	jne	0x2f90


0x359d:	mov	rax, qword ptr [rsp + 0x50]
0x35a2:	mov	rax, qword ptr [rax]
0x35a5:	cmp	qword ptr [rsp + 0xa0], rax
0x35ad:	jne	0x2f90


0x35b3:	jmp	0x33d0


0x2df0:	test	rax, rax
0x2df3:	mov	qword ptr [rsp + 0x68], rax
0x2df8:	je	0x38d7


0x38d7:	mov	rax, qword ptr [rsp + 0x30]
0x38dc:	mov	qword ptr [rsp + 0x18], rax
0x38e1:	jmp	0x2e0a


0x2dfe:	cmp	byte ptr [rax], 0x2f
0x2e01:	cmove	rbx, rax
0x2e05:	mov	qword ptr [rsp + 0x18], rbx
0x2e0a:	mov	rbx, qword ptr [rip + 0x2115cf]
0x2e11:	test	rbx, rbx
0x2e14:	je	0x3a78


0x2e0a:	mov	rbx, qword ptr [rip + 0x2115cf]
0x2e11:	test	rbx, rbx
0x2e14:	je	0x3a78


0x3a78:	mov	rdi, qword ptr [rsp + 0x68]
0x3a7d:	call	0x2070


0x2e1a:	xor	r14d, r14d
0x2e1d:	mov	qword ptr [rsp + 0x58], 0
0x2e26:	mov	qword ptr [rsp + 0x38], -1
0x2e2f:	mov	byte ptr [rsp + 0x20], 0
0x2e34:	nop	dword ptr [rax]
0x2e38:	mov	rbp, qword ptr [rbx]
0x2e3b:	mov	rdi, rbp
0x2e3e:	call	0x22c0


0x2e43:	test	rax, rax
0x2e46:	mov	r12, rax
0x2e49:	je	0x2e52


0x2e52:	mov	rdi, qword ptr [rsp + 0x18]
0x2e57:	mov	rsi, rbp
0x2e5a:	call	0x2340


0x2e4b:	cmp	byte ptr [rax], 0x2f
0x2e4e:	cmove	rbp, rax
0x2e52:	mov	rdi, qword ptr [rsp + 0x18]
0x2e57:	mov	rsi, rbp
0x2e5a:	call	0x2340


0x2e5f:	test	eax, eax
0x2e61:	jne	0x2f32


0x2e67:	mov	r14, qword ptr [rip + 0x211572]
0x2e6e:	xor	r15d, r15d
0x2e71:	mov	r13, qword ptr [rbx + 8]
0x2e75:	test	r14, r14
0x2e78:	je	0x3316


0x2f32:	mov	rdi, r12
0x2f35:	call	0x2070


0x3316:	xor	r8d, r8d
0x3319:	jmp	0x2ef6


0x2ef6:	or	rcx, 0xffffffffffffffff
0x2efa:	xor	eax, eax
0x2efc:	mov	rdi, r13
0x2eff:	repne scasb	al, byte ptr [rdi]


0x2eff:	repne scasb	al, byte ptr [rdi]


0x2f01:	not	rcx
0x2f04:	lea	rbp, [rcx - 1]
0x2f08:	movzx	ecx, byte ptr [rsp + 0x20]
0x2f0d:	xor	ecx, 1
0x2f10:	cmp	rbp, qword ptr [rsp + 0x38]
0x2f15:	mov	r14d, ecx
0x2f18:	setb	r9b
0x2f1c:	or	r14b, r9b
0x2f1f:	jne	0x3329


0x2f25:	mov	byte ptr [rsp + 0x20], 1
0x2f2a:	mov	rdi, r8
0x2f2d:	call	0x2070


0x3329:	mov	rdx, qword ptr [rsp + 0x48]
0x332e:	mov	rsi, r13
0x3331:	mov	edi, 1
0x3336:	mov	qword ptr [rsp + 0x28], r8
0x333b:	mov	byte ptr [rsp + 0x77], r9b
0x3340:	mov	byte ptr [rsp + 0x76], cl
0x3344:	call	0x2390


0x3349:	test	eax, eax
0x334b:	mov	r8, qword ptr [rsp + 0x28]
0x3350:	je	0x3371


0x3371:	cmp	rbp, 1
0x3375:	je	0x346d


0x3352:	movzx	ecx, byte ptr [rsp + 0x76]
0x3357:	test	cl, cl
0x3359:	je	0x38cc


0x337b:	mov	qword ptr [rsp + 0x38], rbp
0x3380:	mov	qword ptr [rsp + 0x58], rbx
0x3385:	mov	byte ptr [rsp + 0x20], r14b
0x338a:	xor	r14d, r14d
0x338d:	jmp	0x2f2a


0x38cc:	movzx	r14d, byte ptr [rsp + 0x20]
0x38d2:	jmp	0x3385


0x335f:	movzx	r9d, byte ptr [rsp + 0x77]
0x3365:	test	r9b, r9b
0x3368:	je	0x38cc


0x2f2a:	mov	rdi, r8
0x2f2d:	call	0x2070


0x3385:	mov	byte ptr [rsp + 0x20], r14b
0x338a:	xor	r14d, r14d
0x338d:	jmp	0x2f2a


0x336e:	xor	r14d, r14d
0x3371:	cmp	rbp, 1
0x3375:	je	0x346d


0x2e8c:	test	eax, eax
0x2e8e:	cmove	r15, r14
0x2e92:	mov	r14, qword ptr [r14 + 0x30]
0x2e96:	test	r14, r14
0x2e99:	jne	0x2e80


0x2e9b:	test	r15, r15
0x2e9e:	je	0x3316


0x2e80:	mov	rdi, qword ptr [r14 + 8]
0x2e84:	mov	rsi, r13
0x2e87:	call	0x2340


0x2ea4:	mov	rdi, qword ptr [r15]
0x2ea7:	call	0x22c0


0x2eac:	test	rax, rax
0x2eaf:	mov	r8, rax
0x2eb2:	je	0x2eb9


0x2eb9:	mov	rdi, r8
0x2ebc:	call	0x2070


0x2eb4:	cmp	byte ptr [rax], 0x2f
0x2eb7:	je	0x2ed5


0x2ed5:	mov	rdi, r8
0x2ed8:	mov	rsi, rbp
0x2edb:	mov	qword ptr [rsp + 0x28], r8
0x2ee0:	call	0x2340


0x2ee5:	test	eax, eax
0x2ee7:	mov	r8, qword ptr [rsp + 0x28]
0x2eec:	jne	0x331e


0x2ef2:	mov	r13, qword ptr [rbx + 8]
0x2ef6:	or	rcx, 0xffffffffffffffff
0x2efa:	xor	eax, eax
0x2efc:	mov	rdi, r13
0x2eff:	repne scasb	al, byte ptr [rdi]


0x331e:	mov	r14d, 1
0x3324:	jmp	0x2f2a


0x2ec1:	mov	rdi, qword ptr [r15]
0x2ec4:	call	0xb000


0x2ec9:	test	rax, rax
0x2ecc:	mov	r8, rax
0x2ecf:	je	0x3312


0x3312:	mov	r13, qword ptr [rbx + 8]
0x3316:	xor	r8d, r8d
0x3319:	jmp	0x2ef6


0x2f3a:	mov	rbx, qword ptr [rbx + 0x30]
0x2f3e:	test	rbx, rbx
0x2f41:	jne	0x2e38


0x2f47:	mov	rdi, qword ptr [rsp + 0x68]
0x2f4c:	call	0x2070


0x2e38:	mov	rbp, qword ptr [rbx]
0x2e3b:	mov	rdi, rbp
0x2e3e:	call	0x22c0


0x2f51:	cmp	qword ptr [rsp + 0x58], 0
0x2f57:	jne	0x348c


0x2f5d:	test	r14b, r14b
0x2f60:	jne	0x39b6


0x348c:	mov	rcx, qword ptr [rsp + 0x58]
0x3491:	sub	rsp, 8
0x3495:	movzx	r9d, byte ptr [rcx + 0x28]
0x349a:	mov	rsi, qword ptr [rcx + 8]
0x349e:	push	0
0x34a0:	push	0
0x34a2:	mov	r8, qword ptr [rcx + 0x18]
0x34a6:	mov	eax, r9d
0x34a9:	and	r9d, 1
0x34ad:	shr	al, 1
0x34af:	and	eax, 1
0x34b2:	push	rax
0x34b3:	mov	rax, rcx
0x34b6:	mov	rdx, qword ptr [rsp + 0x50]
0x34bb:	mov	rdi, qword ptr [rax]
0x34be:	xor	ecx, ecx
0x34c0:	call	0x4350


0x39b6:	mov	rsi, qword ptr [rsp + 0x30]
0x39bb:	mov	edi, 4
0x39c0:	call	0xa240


0x3a82:	jmp	0x2f66


0x39c5:	lea	rsi, [rip + 0xc4ac]
0x39cc:	mov	rbx, rax
0x39cf:	mov	edx, 5
0x39d4:	xor	edi, edi
0x39d6:	call	0x2190


0x39db:	mov	rcx, rbx
0x39de:	mov	rdx, rax
0x39e1:	xor	esi, esi
0x39e3:	xor	edi, edi
0x39e5:	xor	eax, eax
0x39e7:	call	0x24a0


0x39ec:	mov	dword ptr [rip + 0x210a02], 1
0x39f6:	jmp	0x3182


0x3895:	sub	rsp, 8
0x3899:	mov	r8, qword ptr [rbx + 0x18]
0x389d:	mov	rdi, qword ptr [rbx]
0x38a0:	xor	ecx, ecx
0x38a2:	push	1
0x38a4:	push	0
0x38a6:	xor	edx, edx
0x38a8:	mov	eax, r9d
0x38ab:	and	r9d, 1
0x38af:	shr	al, 1
0x38b1:	and	eax, 1
0x38b4:	push	rax
0x38b5:	call	0x4350


0x38ba:	mov	rbx, qword ptr [rbx + 0x30]
0x38be:	add	rsp, 0x20
0x38c2:	test	rbx, rbx
0x38c5:	jne	0x388c


0x38c7:	jmp	0x319c


0x388c:	movzx	r9d, byte ptr [rbx + 0x28]
0x3891:	mov	rsi, qword ptr [rbx + 8]


0x319c:	cmp	byte ptr [rip + 0x21125a], 0
0x31a3:	je	0x343c


0x9530:	sub	rsp, 8
0x9534:	mov	rcx, rbp
0x9537:	mov	rsi, r13
0x953a:	push	qword ptr [rsp + 0x68]
0x953e:	push	qword ptr [rsp + 0x78]
0x9542:	mov	rdi, r14
0x9545:	push	0
0x9547:	mov	r9d, dword ptr [rsp + 0x98]
0x954f:	mov	r8d, dword ptr [rsp + 0x28]
0x9554:	mov	rdx, qword ptr [rsp + 0x30]
0x9559:	and	r9d, 0xfffffffd
0x955d:	call	0x8990


0x9562:	add	rsp, 0x20
0x9566:	mov	r15, rax
0x9569:	mov	rbx, qword ptr [rsp + 0xa8]
0x9571:	xor	rbx, qword ptr fs:[0x28]
0x957a:	mov	rax, r15
0x957d:	jne	0x9b83


0x9583:	add	rsp, 0xb8
0x958a:	pop	rbx
0x958b:	pop	rbp
0x958c:	pop	r12
0x958e:	pop	r13
0x9590:	pop	r14
0x9592:	pop	r15
0x9594:	ret	


0x9b83:	call	0x21f0


0x9b2d:	sub	rsp, 8
0x9b31:	mov	r8d, 5
0x9b37:	mov	rcx, r11
0x9b3a:	push	qword ptr [rsp + 0x68]
0x9b3e:	push	qword ptr [rsp + 0x78]
0x9b42:	mov	rdi, r14
0x9b45:	push	qword ptr [rsp + 0x38]
0x9b49:	mov	r9d, dword ptr [rsp + 0x98]
0x9b51:	mov	rdx, qword ptr [rsp + 0x30]
0x9b56:	mov	rsi, qword ptr [rsp + 0x70]
0x9b5b:	call	0x8990


0x9b60:	add	rsp, 0x20
0x9b64:	mov	r15, rax
0x9b67:	jmp	0x9569


0x9569:	mov	rbx, qword ptr [rsp + 0xa8]
0x9571:	xor	rbx, qword ptr fs:[0x28]
0x957a:	mov	rax, r15
0x957d:	jne	0x9b83


0x2040:	push	qword ptr [rip + 0x211cca]
0x2046:	jmp	qword ptr [rip + 0x211ccc]


0x204c:	nop	dword ptr [rax]


0x2056:	push	0
0x205b:	jmp	0x2040


0x2066:	push	1
0x206b:	jmp	0x2040


0x2076:	push	2
0x207b:	jmp	0x2040


0x2086:	push	3
0x208b:	jmp	0x2040


0x2096:	push	4
0x209b:	jmp	0x2040


0x20a6:	push	5
0x20ab:	jmp	0x2040


0x20b6:	push	6
0x20bb:	jmp	0x2040


0x20c6:	push	7
0x20cb:	jmp	0x2040


0x20d6:	push	8
0x20db:	jmp	0x2040


0x20e6:	push	9
0x20eb:	jmp	0x2040


0x20f6:	push	0xa
0x20fb:	jmp	0x2040


0x2106:	push	0xb
0x210b:	jmp	0x2040


0x2116:	push	0xc
0x211b:	jmp	0x2040


0x2126:	push	0xd
0x212b:	jmp	0x2040


0x2136:	push	0xe
0x213b:	jmp	0x2040


0x2146:	push	0xf
0x214b:	jmp	0x2040


0x2156:	push	0x10
0x215b:	jmp	0x2040


0x2166:	push	0x11
0x216b:	jmp	0x2040


0x2176:	push	0x12
0x217b:	jmp	0x2040


0x2186:	push	0x13
0x218b:	jmp	0x2040


0x2196:	push	0x14
0x219b:	jmp	0x2040


0x21a6:	push	0x15
0x21ab:	jmp	0x2040


0x21b6:	push	0x16
0x21bb:	jmp	0x2040


0x21c6:	push	0x17
0x21cb:	jmp	0x2040


0x21d6:	push	0x18
0x21db:	jmp	0x2040


0x21e6:	push	0x19
0x21eb:	jmp	0x2040


0x21f6:	push	0x1a
0x21fb:	jmp	0x2040


0x2206:	push	0x1b
0x220b:	jmp	0x2040


0x2216:	push	0x1c
0x221b:	jmp	0x2040


0x2226:	push	0x1d
0x222b:	jmp	0x2040


0x2236:	push	0x1e
0x223b:	jmp	0x2040


0x2246:	push	0x1f
0x224b:	jmp	0x2040


0x2256:	push	0x20
0x225b:	jmp	0x2040


0x2266:	push	0x21
0x226b:	jmp	0x2040


0x2276:	push	0x22
0x227b:	jmp	0x2040


0x2286:	push	0x23
0x228b:	jmp	0x2040


0x2296:	push	0x24
0x229b:	jmp	0x2040


0x22a6:	push	0x25
0x22ab:	jmp	0x2040


0x22b6:	push	0x26
0x22bb:	jmp	0x2040


0x22c6:	push	0x27
0x22cb:	jmp	0x2040


0x22d6:	push	0x28
0x22db:	jmp	0x2040


0x22e6:	push	0x29
0x22eb:	jmp	0x2040


0x22f6:	push	0x2a
0x22fb:	jmp	0x2040


0x2306:	push	0x2b
0x230b:	jmp	0x2040


0x2316:	push	0x2c
0x231b:	jmp	0x2040


0x2326:	push	0x2d
0x232b:	jmp	0x2040


0x2336:	push	0x2e
0x233b:	jmp	0x2040


0x2346:	push	0x2f
0x234b:	jmp	0x2040


0x2356:	push	0x30
0x235b:	jmp	0x2040


0x2366:	push	0x31
0x236b:	jmp	0x2040


0x2376:	push	0x32
0x237b:	jmp	0x2040


0x2386:	push	0x33
0x238b:	jmp	0x2040


0x2396:	push	0x34
0x239b:	jmp	0x2040


0x23a6:	push	0x35
0x23ab:	jmp	0x2040


0x23b6:	push	0x36
0x23bb:	jmp	0x2040


0x23c6:	push	0x37
0x23cb:	jmp	0x2040


0x23d6:	push	0x38
0x23db:	jmp	0x2040


0x23e6:	push	0x39
0x23eb:	jmp	0x2040


0x23f6:	push	0x3a
0x23fb:	jmp	0x2040


0x2406:	push	0x3b
0x240b:	jmp	0x2040


0x2416:	push	0x3c
0x241b:	jmp	0x2040


0x2426:	push	0x3d
0x242b:	jmp	0x2040


0x2436:	push	0x3e
0x243b:	jmp	0x2040


0x2446:	push	0x3f
0x244b:	jmp	0x2040


0x2456:	push	0x40
0x245b:	jmp	0x2040


0x2466:	push	0x41
0x246b:	jmp	0x2040


0x2476:	push	0x42
0x247b:	jmp	0x2040


0x2486:	push	0x43
0x248b:	jmp	0x2040


0x2496:	push	0x44
0x249b:	jmp	0x2040


0x24a6:	push	0x45
0x24ab:	jmp	0x2040


0x24b6:	push	0x46
0x24bb:	jmp	0x2040


0x24c6:	push	0x47
0x24cb:	jmp	0x2040


0x24d6:	push	0x48
0x24db:	jmp	0x2040


0x24e6:	push	0x49
0x24eb:	jmp	0x2040


0x24f6:	push	0x4a
0x24fb:	jmp	0x2040


0x2506:	push	0x4b
0x250b:	jmp	0x2040


0x2516:	push	0x4c
0x251b:	jmp	0x2040


0x2526:	push	0x4d
0x252b:	jmp	0x2040


0x2536:	push	0x4e
0x253b:	jmp	0x2040


0x2546:	push	0x4f
0x254b:	jmp	0x2040


0x2556:	push	0x50
0x255b:	jmp	0x2040


0x2566:	push	0x51
0x256b:	jmp	0x2040


0x2576:	push	0x52
0x257b:	jmp	0x2040


0x2586:	push	0x53
0x258b:	jmp	0x2040


0x2596:	push	0x54
0x259b:	jmp	0x2040


0x25a6:	push	0x55
0x25ab:	jmp	0x2040


0x2d01:	xor	esi, esi
0x2d03:	xor	edi, edi
0x2d05:	call	0x41a0


0x2d0a:	cmp	byte ptr [rip + 0x2116c8], 0
0x2d11:	je	0x2d1f


0x2d1f:	xor	esi, esi
0x2d21:	mov	edi, 2
0x2d26:	call	0x41a0


0x2d13:	xor	esi, esi
0x2d15:	mov	edi, 1
0x2d1a:	call	0x41a0


0x2d2b:	xor	esi, esi
0x2d2d:	mov	edi, 3
0x2d32:	call	0x41a0


0x2d37:	xor	esi, esi
0x2d39:	mov	edi, 4
0x2d3e:	call	0x41a0


0x2d43:	lea	rsi, [rip + 0xc47f]
0x2d4a:	mov	edi, 5
0x2d4f:	call	0x41a0


0x2d54:	xor	esi, esi
0x2d56:	mov	edi, 0xa
0x2d5b:	call	0x41a0


0x2d60:	call	0x3f10


0x2d65:	movsxd	rax, dword ptr [rip + 0x2115a4]
0x2d6c:	cmp	eax, dword ptr [rsp + 8]
0x2d70:	jge	0x35b8


0x2d76:	mov	qword ptr [rsp + 0x10], rax
0x2d7b:	lea	rax, [rsp + 0xa0]
0x2d83:	mov	byte ptr [rip + 0x211682], 1
0x2d8a:	mov	qword ptr [rsp + 0x40], r14
0x2d8f:	mov	qword ptr [rsp + 0x78], r15
0x2d94:	mov	qword ptr [rsp + 0x48], rax
0x2d99:	mov	rcx, qword ptr [rsp + 0x40]
0x2d9e:	mov	rax, qword ptr [rsp + 0x10]
0x2da3:	mov	rcx, qword ptr [rcx + rax*8]
0x2da7:	test	rcx, rcx
0x2daa:	mov	rbx, rcx
0x2dad:	mov	qword ptr [rsp + 0x30], rcx
0x2db2:	je	0x3182


0x35b8:	movzx	ebp, byte ptr [rip + 0x210e4f]
0x35bf:	mov	rax, qword ptr [rip + 0x210e1a]
0x35c6:	xor	edx, edx
0x35c8:	jmp	0x35d1


0x35d1:	test	rax, rax
0x35d4:	jne	0x35ca


0x35d6:	movsxd	rdi, edx
0x35d9:	lea	r8, [rip + 0x7d0]
0x35e0:	lea	rcx, [rip + 0x709]
0x35e7:	lea	rdx, [rip + 0x6f2]
0x35ee:	xor	esi, esi
0x35f0:	call	0x6940


0x35ca:	mov	rax, qword ptr [rax + 0x30]
0x35ce:	add	edx, 1
0x35d1:	test	rax, rax
0x35d4:	jne	0x35ca


0x35f5:	test	rax, rax
0x35f8:	mov	qword ptr [rip + 0x210e11], rax
0x35ff:	je	0x3b13


0x3605:	lea	rax, [rsp + 0xa0]
0x360d:	mov	r13, qword ptr [rip + 0x210dcc]
0x3614:	xor	ebx, ebx
0x3616:	mov	qword ptr [rsp + 8], rax
0x361b:	jmp	0x366a


0x366a:	test	r13, r13
0x366d:	je	0x3838


0x3838:	test	bpl, bpl
0x383b:	jne	0x3883


0x3673:	movzx	eax, byte ptr [r13 + 0x28]
0x3678:	test	al, 2
0x367a:	je	0x3685


0x383d:	mov	qword ptr [rip + 0x210b98], 0
0x3848:	jmp	0x385e


0x3883:	mov	rbx, qword ptr [rip + 0x210b56]
0x388a:	jmp	0x38c2


0x3685:	test	al, 1
0x3687:	je	0x369b


0x367c:	cmp	byte ptr [rip + 0x210d8a], 0
0x3683:	jne	0x361d


0x385e:	test	rbx, rbx
0x3861:	jne	0x384a


0x38c2:	test	rbx, rbx
0x38c5:	jne	0x388c


0x369b:	mov	r12, qword ptr [r13 + 0x18]
0x369f:	mov	rdi, r12
0x36a2:	call	0x3d00


0x3689:	cmp	byte ptr [rip + 0x210d7e], 0
0x3690:	jne	0x369b


0x361d:	mov	rax, qword ptr [r13 + 0x20]
0x3621:	mov	qword ptr [rsp + 0xa0], rax
0x3629:	mov	edi, 0x18
0x362e:	call	0xadd0


0x3863:	test	bpl, bpl
0x3866:	jne	0x3b18


0x384a:	mov	rax, qword ptr [rbx + 8]
0x384e:	mov	rbx, qword ptr [rbx + 0x10]
0x3852:	mov	ebp, 1
0x3857:	mov	qword ptr [rax + 0x30], r13
0x385b:	mov	r13, rax
0x385e:	test	rbx, rbx
0x3861:	jne	0x384a


0x3692:	cmp	byte ptr [rip + 0x210d73], 0
0x3699:	je	0x361d


0x386c:	mov	rdi, qword ptr [rip + 0x210b9d]
0x3873:	call	0x6b90


0x3b18:	mov	qword ptr [rip + 0x2108c1], r13
0x3b1f:	jmp	0x386c


0x3633:	mov	r12, rax
0x3636:	mov	qword ptr [rax + 8], r13
0x363a:	mov	rax, qword ptr [rsp + 0xa0]
0x3642:	mov	rdi, qword ptr [rip + 0x210dc7]
0x3649:	mov	qword ptr [r12 + 0x10], rbx
0x364e:	mov	rsi, r12
0x3651:	mov	qword ptr [r12], rax
0x3655:	call	0x7140


0x365a:	test	rax, rax
0x365d:	je	0x3b13


0x3663:	mov	r13, qword ptr [r13 + 0x30]
0x3667:	mov	rbx, r12
0x366a:	test	r13, r13
0x366d:	je	0x3838


0x36a7:	test	al, al
0x36a9:	je	0x361d


0x36af:	mov	rdi, r12
0x36b2:	call	0x3d50


0x36b7:	test	al, al
0x36b9:	mov	r14d, eax
0x36bc:	jne	0x361d


0x36c2:	mov	rsi, qword ptr [r13 + 8]
0x36c6:	mov	rdx, qword ptr [rsp + 8]
0x36cb:	mov	edi, 1
0x36d0:	call	0x2390


0x36d5:	add	eax, 1
0x36d8:	je	0x361d


0x36de:	mov	rdi, qword ptr [rip + 0x210d2b]
0x36e5:	test	rdi, rdi
0x36e8:	je	0x3629


0x3629:	mov	edi, 0x18
0x362e:	call	0xadd0


0x36ee:	mov	rax, qword ptr [rsp + 0xa0]
0x36f6:	mov	rsi, r15
0x36f9:	mov	qword ptr [rsp + 0x80], rax
0x3701:	call	0x66d0


0x3706:	test	rax, rax
0x3709:	mov	qword ptr [rsp + 0x10], rax
0x370e:	je	0x3629


0x3714:	mov	r12, qword ptr [rax + 8]
0x3718:	or	rcx, 0xffffffffffffffff
0x371c:	mov	eax, r14d
0x371f:	mov	rdi, qword ptr [r12 + 8]
0x3724:	mov	qword ptr [rsp + 0x18], rdi
0x3729:	repne scasb	al, byte ptr [rdi]


0x3729:	repne scasb	al, byte ptr [rdi]


0x372b:	mov	rdi, qword ptr [r13 + 8]
0x372f:	not	rcx
0x3732:	mov	rdx, rcx
0x3735:	or	rcx, 0xffffffffffffffff
0x3739:	mov	qword ptr [rsp + 0x20], rdi
0x373e:	sub	rdx, 1
0x3742:	repne scasb	al, byte ptr [rdi]


0x3742:	repne scasb	al, byte ptr [rdi]


0x3744:	mov	rdi, qword ptr [r12 + 0x10]
0x3749:	mov	rax, rcx
0x374c:	not	rax
0x374f:	sub	rax, 1
0x3753:	cmp	rdx, rax
0x3756:	seta	byte ptr [rsp + 0x28]
0x375b:	test	rdi, rdi
0x375e:	je	0x3a87


0x3a87:	xor	eax, eax
0x3a89:	jmp	0x37a0


0x3764:	mov	rsi, qword ptr [r13 + 0x10]
0x3768:	test	rsi, rsi
0x376b:	je	0x3a87


0x37a0:	and	eax, 1
0x37a3:	cmp	byte ptr [rip + 0x210c2e], 0
0x37aa:	mov	byte ptr [rsp + 0x30], al
0x37ae:	mov	rax, qword ptr [r13]
0x37b2:	mov	r14, rax
0x37b5:	jne	0x37da


0x3771:	mov	eax, r14d
0x3774:	or	rcx, 0xffffffffffffffff
0x3778:	repne scasb	al, byte ptr [rdi]


0x37b7:	test	byte ptr [r13 + 0x28], 2
0x37bc:	je	0x37da


0x37da:	mov	esi, 0x2f
0x37df:	mov	rdi, r14
0x37e2:	call	0x2220


0x3778:	repne scasb	al, byte ptr [rdi]


0x377a:	mov	rdi, rsi
0x377d:	not	rcx
0x3780:	mov	rdx, rcx
0x3783:	or	rcx, 0xffffffffffffffff
0x3787:	repne scasb	al, byte ptr [rdi]


0x37be:	test	byte ptr [r12 + 0x28], 2
0x37c4:	je	0x37da


0x3787:	repne scasb	al, byte ptr [rdi]


0x3789:	sub	rdx, 1
0x378d:	mov	rax, rcx
0x3790:	not	rax
0x3793:	sub	rax, 1
0x3797:	cmp	rdx, rax
0x379a:	setb	al
0x379d:	movzx	eax, al
0x37a0:	and	eax, 1
0x37a3:	cmp	byte ptr [rip + 0x210c2e], 0
0x37aa:	mov	byte ptr [rsp + 0x30], al
0x37ae:	mov	rax, qword ptr [r13]
0x37b2:	mov	r14, rax
0x37b5:	jne	0x37da


0x37c6:	mov	rdi, qword ptr [r12]
0x37ca:	mov	rsi, rax
0x37cd:	call	0x2340


0x37d2:	test	eax, eax
0x37d4:	jne	0x3629


0x37e7:	test	rax, rax
0x37ea:	je	0x37ff


0x37ff:	cmp	byte ptr [rsp + 0x30], 0
0x3804:	jne	0x3a8e


0x37ec:	mov	rdi, qword ptr [r12]
0x37f0:	mov	esi, 0x2f
0x37f5:	call	0x2220


0x380a:	cmp	byte ptr [rsp + 0x28], 0
0x380f:	je	0x3a8e


0x3a8e:	mov	rdi, qword ptr [r12]
0x3a92:	mov	rsi, r14
0x3a95:	call	0x2340


0x3815:	mov	rax, qword ptr [rsp + 0x10]
0x381a:	mov	qword ptr [rax + 8], r13
0x381e:	test	bpl, bpl
0x3821:	mov	r13, qword ptr [r13 + 0x30]
0x3825:	jne	0x366a


0x382b:	mov	rdi, r12
0x382e:	call	0xbbe0


0x3833:	jmp	0x366a


0x3a9a:	test	eax, eax
0x3a9c:	je	0x3ab5


0x3ab5:	mov	r12, r13
0x3ab8:	jmp	0x381e


0x3a9e:	mov	rsi, qword ptr [rsp + 0x18]
0x3aa3:	mov	rdi, qword ptr [rsp + 0x20]
0x3aa8:	call	0x2340


0x381e:	test	bpl, bpl
0x3821:	mov	r13, qword ptr [r13 + 0x30]
0x3825:	jne	0x366a


0x3aad:	test	eax, eax
0x3aaf:	je	0x3815


0x37fa:	test	rax, rax
0x37fd:	je	0x3815


0x3878:	mov	qword ptr [rip + 0x210b8d], 0
0x3883:	mov	rbx, qword ptr [rip + 0x210b56]
0x388a:	jmp	0x38c2


0x302f:	xor	esi, esi
0x3031:	xor	edi, edi
0x3033:	call	0x41a0


0x3038:	cmp	byte ptr [rip + 0x21139a], 0
0x303f:	je	0x304d


0x304d:	lea	rsi, [rip + 0xc0c1]
0x3054:	mov	edi, 2
0x3059:	call	0x41a0


0x3041:	xor	esi, esi
0x3043:	mov	edi, 1
0x3048:	call	0x41a0


0x305e:	xor	esi, esi
0x3060:	mov	edi, 3
0x3065:	call	0x41a0


0x306a:	lea	rsi, [rip + 0xc0a9]
0x3071:	mov	edi, 4
0x3076:	call	0x41a0


0x307b:	xor	esi, esi
0x307d:	jmp	0x2d4a


0x2d4a:	mov	edi, 5
0x2d4f:	call	0x41a0


0x3082:	xor	esi, esi
0x3084:	xor	edi, edi
0x3086:	call	0x41a0


0x308b:	cmp	byte ptr [rip + 0x211347], 0
0x3092:	je	0x30a0


0x30a0:	xor	esi, esi
0x30a2:	mov	edi, 6
0x30a7:	call	0x41a0


0x3094:	xor	esi, esi
0x3096:	mov	edi, 1
0x309b:	call	0x41a0


0x30ac:	xor	esi, esi
0x30ae:	mov	edi, 7
0x30b3:	call	0x41a0


0x30b8:	xor	esi, esi
0x30ba:	mov	edi, 8
0x30bf:	call	0x41a0


0x30c4:	xor	esi, esi
0x30c6:	mov	edi, 9
0x30cb:	call	0x41a0


0x30d0:	xor	esi, esi
0x30d2:	mov	edi, 0xa
0x30d7:	call	0x41a0


0x30dc:	jmp	0x2d60


0x30e1:	xor	esi, esi
0x30e3:	xor	edi, edi
0x30e5:	call	0x41a0


0x30ea:	cmp	byte ptr [rip + 0x2112e8], 0
0x30f1:	je	0x30ff


0x30ff:	xor	esi, esi
0x3101:	mov	edi, 2
0x3106:	call	0x41a0


0x30f3:	xor	esi, esi
0x30f5:	mov	edi, 1
0x30fa:	call	0x41a0


0x310b:	xor	esi, esi
0x310d:	mov	edi, 3
0x3112:	call	0x41a0


0x3117:	xor	esi, esi
0x3119:	jmp	0x3071


0x3071:	mov	edi, 4
0x3076:	call	0x41a0


0x311e:	cmp	qword ptr [rip + 0x21124a], 0
0x3126:	jne	0x2d60


0x312c:	lea	rdi, [rip + 0xccf5]
0x3133:	call	0x5210


0x3138:	jmp	0x2d60


0x3b93:	nop	word ptr cs:[rax + rax]
0x3b9d:	nop	dword ptr [rax]


0x3bca:	hlt	


0x3bcb:	nop	dword ptr [rax + rax]


0x3c02:	nop	dword ptr [rax]
0x3c06:	nop	word ptr cs:[rax + rax]


0x3c52:	nop	dword ptr [rax]
0x3c56:	nop	word ptr cs:[rax + rax]


0x3c9a:	nop	word ptr [rax + rax]


0x3caa:	nop	word ptr [rax + rax]


0x3cd4:	nop	
0x3cd6:	nop	word ptr cs:[rax + rax]


0x3cec:	nop	dword ptr [rax]


0x3cfa:	nop	word ptr [rax + rax]


0x3d4e:	nop	


0x3dac:	nop	dword ptr [rax]


0x3db5:	nop	
0x3db6:	nop	word ptr cs:[rax + rax]


0x3ebb:	nop	dword ptr [rax + rax]


0x3f02:	nop	dword ptr [rax]
0x3f06:	nop	word ptr cs:[rax + rax]


0x419f:	nop	


0x4262:	nop	dword ptr [rax]
0x4266:	nop	word ptr cs:[rax + rax]


0x434d:	nop	dword ptr [rax]


0x4738:	mov	rdi, rax
0x473b:	mov	qword ptr [rsp + 0x18], rax
0x4740:	test	rdi, rdi
0x4743:	je	0x4cc1


0x4cc1:	lea	rcx, [rip + 0xa670]
0x4cc8:	lea	rsi, [rip + 0xa322]
0x4ccf:	lea	rdi, [rip + 0xa388]
0x4cd6:	mov	edx, 0x4d2
0x4cdb:	call	0x2280


0x4749:	call	0x3ec0


0x474e:	mov	rdi, qword ptr [rsp + 0x18]
0x4753:	xor	esi, esi
0x4755:	call	0x87d0


0x475a:	mov	rcx, qword ptr [rip + 0x20fc17]
0x4761:	cdqe	
0x4763:	mov	rdx, qword ptr [rcx + r14]
0x4767:	cmp	qword ptr [rdx + 0x20], rax
0x476b:	cmovae	rax, qword ptr [rdx + 0x20]
0x4770:	add	rbp, 1
0x4774:	cmp	qword ptr [rip + 0x20fbf5], rbp
0x477b:	mov	qword ptr [rdx + 0x20], rax
0x477f:	mov	rdx, qword ptr [rip + 0x20fbda]
0x4786:	mov	rax, qword ptr [rip + 0x20fbdb]
0x478d:	mov	rax, qword ptr [rax + rdx*8 - 8]
0x4792:	mov	rdx, qword ptr [rsp + 0x18]
0x4797:	mov	qword ptr [rax + r14], rdx
0x479b:	ja	0x46f0


0x46f0:	mov	rax, qword ptr [rcx + rbp*8]
0x46f4:	lea	r14, [rbp*8]
0x46fc:	mov	edx, dword ptr [rax + 0x10]
0x46ff:	cmp	edx, 1
0x4702:	je	0x48c0


0x48d0:	mov	rsi, qword ptr [rcx + 0x18]
0x48d4:	cmp	rsi, -3
0x48d8:	ja	0x47be


0x47be:	lea	rdi, [rip + 0xc194]
0x47c5:	call	0x2540


0x48de:	cmp	byte ptr [rcx + 0x38], 0
0x48e2:	movzx	edi, byte ptr [rcx + 0x20]
0x48e6:	jne	0x4a10


0x48ec:	movabs	rdx, 0x28f5c28f5c28f5c
0x48f6:	cmp	rax, rdx
0x48f9:	ja	0x4918


0x4a10:	neg	rax
0x4a13:	test	rax, rax
0x4a16:	js	0x4aa6


0x48fb:	mov	rcx, rax
0x48fe:	xor	edx, edx
0x4900:	add	rcx, rsi
0x4903:	setb	dl
0x4906:	test	rcx, rcx
0x4909:	je	0x4918


0x4918:	test	rax, rax
0x491b:	js	0x4ae2


0x4aa6:	mov	rdx, rax
0x4aa9:	pxor	xmm0, xmm0
0x4aad:	shr	rdx, 1
0x4ab0:	and	eax, 1
0x4ab3:	or	rdx, rax
0x4ab6:	cvtsi2sd	xmm0, rdx
0x4abb:	addsd	xmm0, xmm0
0x4abf:	jmp	0x4a25


0x4a1c:	pxor	xmm0, xmm0
0x4a20:	cvtsi2sd	xmm0, rax
0x4a25:	xorpd	xmm0, xmmword ptr [rip + 0xb483]
0x4a2d:	jmp	0x492a


0x490b:	cmp	dil, dl
0x490e:	je	0x4b70


0x4ae2:	mov	rdx, rax
0x4ae5:	pxor	xmm0, xmm0
0x4ae9:	shr	rdx, 1
0x4aec:	and	eax, 1
0x4aef:	or	rdx, rax
0x4af2:	cvtsi2sd	xmm0, rdx
0x4af7:	addsd	xmm0, xmm0
0x4afb:	jmp	0x492a


0x4921:	pxor	xmm0, xmm0
0x4925:	cvtsi2sd	xmm0, rax
0x492a:	test	dil, dil
0x492d:	je	0x4a80


0x4a25:	xorpd	xmm0, xmmword ptr [rip + 0xb483]
0x4a2d:	jmp	0x492a


0x492a:	test	dil, dil
0x492d:	je	0x4a80


0x4b70:	lea	rax, [rax + rax*4]
0x4b74:	xor	edx, edx
0x4b76:	lea	rax, [rax + rax*4]
0x4b7a:	shl	rax, 2
0x4b7e:	div	rcx
0x4b81:	test	rdx, rdx
0x4b84:	setne	dl
0x4b87:	movzx	edx, dl
0x4b8a:	add	rdx, rax
0x4b8d:	js	0x4c9f


0x4a80:	test	rsi, rsi
0x4a83:	js	0x4b00


0x4933:	neg	rsi
0x4936:	test	rsi, rsi
0x4939:	js	0x4ac4


0x4c9f:	mov	rax, rdx
0x4ca2:	pxor	xmm0, xmm0
0x4ca6:	shr	rax, 1
0x4ca9:	and	edx, 1
0x4cac:	or	rax, rdx
0x4caf:	pxor	xmm3, xmm3
0x4cb3:	cvtsi2sd	xmm0, rax
0x4cb8:	addsd	xmm0, xmm0
0x4cbc:	jmp	0x49b8


0x4b93:	pxor	xmm0, xmm0
0x4b97:	pxor	xmm3, xmm3
0x4b9b:	cvtsi2sd	xmm0, rdx
0x4ba0:	jmp	0x49b8


0x4b00:	mov	rax, rsi
0x4b03:	pxor	xmm1, xmm1
0x4b07:	shr	rax, 1
0x4b0a:	and	esi, 1
0x4b0d:	or	rax, rsi
0x4b10:	cvtsi2sd	xmm1, rax
0x4b15:	addsd	xmm1, xmm1
0x4b19:	jmp	0x4950


0x4a85:	pxor	xmm1, xmm1
0x4a89:	cvtsi2sd	xmm1, rsi
0x4a8e:	jmp	0x4950


0x4ac4:	mov	rax, rsi
0x4ac7:	pxor	xmm1, xmm1
0x4acb:	shr	rax, 1
0x4ace:	and	esi, 1
0x4ad1:	or	rax, rsi
0x4ad4:	cvtsi2sd	xmm1, rax
0x4ad9:	addsd	xmm1, xmm1
0x4add:	jmp	0x4948


0x493f:	pxor	xmm1, xmm1
0x4943:	cvtsi2sd	xmm1, rsi
0x4948:	xorpd	xmm1, xmmword ptr [rip + 0xb560]
0x4950:	addsd	xmm1, xmm0
0x4954:	pxor	xmm5, xmm5
0x4958:	pxor	xmm3, xmm3
0x495c:	ucomisd	xmm1, xmm5
0x4960:	jp	0x4968


0x49b8:	ucomisd	xmm0, xmm3
0x49bc:	jb	0x47be


0x4950:	addsd	xmm1, xmm0
0x4954:	pxor	xmm5, xmm5
0x4958:	pxor	xmm3, xmm3
0x495c:	ucomisd	xmm1, xmm5
0x4960:	jp	0x4968


0x4948:	xorpd	xmm1, xmmword ptr [rip + 0xb560]
0x4950:	addsd	xmm1, xmm0
0x4954:	pxor	xmm5, xmm5
0x4958:	pxor	xmm3, xmm3
0x495c:	ucomisd	xmm1, xmm5
0x4960:	jp	0x4968


0x4968:	mulsd	xmm0, qword ptr [rip + 0xb550]
0x4970:	movsd	xmm2, qword ptr [rip + 0xb550]
0x4978:	divsd	xmm0, xmm1
0x497c:	pxor	xmm1, xmm1
0x4980:	cvttsd2si	rax, xmm0
0x4985:	cvtsi2sd	xmm1, rax
0x498a:	movapd	xmm4, xmm1
0x498e:	subsd	xmm4, xmm2
0x4992:	ucomisd	xmm0, xmm4
0x4996:	jbe	0x49b8


0x4962:	je	0x47be


0x49c2:	lea	rdi, [rsp + 0x18]
0x49c7:	lea	rsi, [rip + 0xa676]
0x49ce:	mov	eax, 1
0x49d3:	call	0xb560


0x4998:	addsd	xmm2, xmm1
0x499c:	ucomisd	xmm2, xmm0
0x49a0:	jb	0x49b8


0x49a2:	ucomisd	xmm0, xmm1
0x49a6:	ja	0x4b5c


0x49ac:	pxor	xmm0, xmm0
0x49b0:	addsd	xmm0, xmm1
0x49b4:	nop	dword ptr [rax]
0x49b8:	ucomisd	xmm0, xmm3
0x49bc:	jb	0x47be


0x4b5c:	movapd	xmm0, xmm2
0x4b60:	jmp	0x49b8


0x49d8:	cmp	eax, -1
0x49db:	je	0x4a70


0x4a70:	mov	qword ptr [rsp + 0x18], 0
0x4a79:	call	0xb020


0x49e1:	mov	rdi, qword ptr [rsp + 0x18]
0x49e6:	jmp	0x47d2


0x47d2:	test	rdi, rdi
0x47d5:	jne	0x4749


0x47db:	jmp	0x4a79


0x4a79:	call	0xb020


0x47ca:	mov	rdi, rax
0x47cd:	mov	qword ptr [rsp + 0x18], rax
0x47d2:	test	rdi, rdi
0x47d5:	jne	0x4749


0x47e0:	movzx	edi, byte ptr [rcx + 0x20]
0x47e4:	mov	rsi, qword ptr [rcx + 0x18]
0x47e8:	lea	rdx, [rsp + 0x170]
0x47f0:	mov	r8, qword ptr [rcx + 8]
0x47f4:	mov	rcx, qword ptr [rcx]
0x47f7:	call	0x3e50


0x47fc:	mov	rdi, rax
0x47ff:	call	0xb000


0x4804:	mov	rdi, rax
0x4807:	mov	qword ptr [rsp + 0x18], rax
0x480c:	jmp	0x4740


0x4740:	test	rdi, rdi
0x4743:	je	0x4cc1


0x47f0:	mov	r8, qword ptr [rcx + 8]
0x47f4:	mov	rcx, qword ptr [rcx]
0x47f7:	call	0x3e50


0x4841:	mov	r8, qword ptr [rcx + 8]
0x4845:	mov	edx, dword ptr [rip + 0x20fbbd]
0x484b:	lea	rsi, [rsp + 0x170]
0x4853:	mov	rcx, qword ptr [rcx]
0x4856:	mov	rdi, rax
0x4859:	call	0x7550


0x47ff:	call	0xb000


0x485e:	mov	rdi, rax
0x4861:	jmp	0x47ff


0x4870:	mov	rdi, rax
0x4873:	mov	qword ptr [rsp + 0x18], rax
0x4878:	jmp	0x4740


0x4889:	mov	rdi, rax
0x488c:	mov	qword ptr [rsp + 0x18], rax
0x4891:	jmp	0x4740


0x4d6b:	nop	dword ptr [rax + rax]


0x5202:	nop	dword ptr [rax]
0x5206:	nop	word ptr cs:[rax + rax]


0x537b:	nop	dword ptr [rax + rax]


0x5738:	nop	dword ptr [rax + rax]


0x5d76:	nop	word ptr cs:[rax + rax]


0x5d88:	nop	dword ptr [rax + rax]


0x5d98:	nop	dword ptr [rax + rax]


0x5e44:	nop	word ptr cs:[rax + rax]
0x5e4e:	nop	


0x5e68:	nop	dword ptr [rax + rax]


0x5ecd:	nop	dword ptr [rax]


0x5f2a:	nop	word ptr [rax + rax]


0x5f8c:	nop	dword ptr [rax]


0x5fd7:	nop	word ptr [rax + rax]


0x6067:	nop	word ptr [rax + rax]


0x60c6:	nop	word ptr cs:[rax + rax]


0x6163:	nop	dword ptr [rax]
0x6166:	nop	word ptr cs:[rax + rax]


0x6187:	nop	word ptr [rax + rax]


0x61b2:	nop	dword ptr [rax]
0x61b6:	nop	word ptr cs:[rax + rax]


0x62de:	nop	


0x6357:	nop	word ptr [rax + rax]


0x64a5:	nop	
0x64a6:	nop	word ptr cs:[rax + rax]


0x64b5:	nop	
0x64b6:	nop	word ptr cs:[rax + rax]


0x64c5:	nop	
0x64c6:	nop	word ptr cs:[rax + rax]


0x6519:	nop	dword ptr [rax]


0x6578:	nop	dword ptr [rax + rax]


0x66c7:	nop	word ptr [rax + rax]


0x672b:	nop	dword ptr [rax + rax]


0x6771:	nop	dword ptr [rax + rax]
0x6776:	nop	word ptr cs:[rax + rax]


0x67f2:	nop	dword ptr [rax]
0x67f6:	nop	word ptr cs:[rax + rax]


0x6865:	nop	
0x6866:	nop	word ptr cs:[rax + rax]


0x68da:	nop	word ptr [rax + rax]


0x6911:	nop	dword ptr [rax + rax]
0x6916:	nop	word ptr cs:[rax + rax]


0x6af4:	nop	
0x6af6:	nop	word ptr cs:[rax + rax]


0x6c66:	nop	word ptr cs:[rax + rax]


0x6eae:	nop	


0x7134:	nop	
0x7136:	nop	word ptr cs:[rax + rax]


0x7199:	nop	dword ptr [rax]


0x73a3:	nop	word ptr cs:[rax + rax]
0x73ad:	nop	dword ptr [rax]


0x73d7:	nop	word ptr [rax + rax]


0x73ed:	nop	dword ptr [rax]


0x741e:	nop	


0x7453:	nop	dword ptr [rax]
0x7456:	nop	word ptr cs:[rax + rax]


0x7475:	nop	word ptr cs:[rax + rax]
0x747f:	nop	


0x7547:	nop	word ptr [rax + rax]


0x7f57:	nop	word ptr [rax + rax]


0x8146:	nop	word ptr cs:[rax + rax]


0x8192:	nop	word ptr cs:[rax + rax]
0x819c:	nop	dword ptr [rax]


0x8564:	nop	
0x8566:	nop	word ptr cs:[rax + rax]


0x860d:	nop	dword ptr [rax]


0x87cf:	nop	


0x87f3:	nop	word ptr cs:[rax + rax]
0x87fd:	nop	dword ptr [rax]


0x889f:	nop	


0x8987:	nop	word ptr [rax + rax]


0x8a23:	mov	byte ptr [rsp + 0xe], 1
0x8a28:	mov	byte ptr [rsp + 0x7c], 0
0x8a2d:	xor	r12d, r12d
0x8a30:	mov	qword ptr [rsp + 0x50], 0
0x8a39:	mov	byte ptr [rsp + 0xf], 1
0x8a3e:	mov	byte ptr [rsp + 0xd], 0
0x8a43:	lea	rax, [rip + 0x80bc]
0x8a4a:	mov	qword ptr [rsp + 0x18], 1
0x8a53:	xor	r15d, r15d
0x8a56:	mov	dword ptr [rsp + 8], 2
0x8a5e:	mov	qword ptr [rsp + 0x48], rax
0x8a63:	xor	r11d, r11d
0x8a66:	mov	rax, rbp
0x8a69:	mov	r8d, r12d
0x8a6c:	mov	rbp, r11
0x8a6f:	mov	r11, rax
0x8a72:	nop	word ptr [rax + rax]
0x8a78:	cmp	r11, rbp
0x8a7b:	setne	r12b
0x8a7f:	cmp	r11, -1
0x8a83:	jne	0x8a92


0x8a85:	mov	rax, qword ptr [rsp + 0x10]
0x8a8a:	cmp	byte ptr [rax + rbp], 0
0x8a8e:	setne	r12b
0x8a92:	test	r12b, r12b
0x8a95:	je	0x90f0


0x8a92:	test	r12b, r12b
0x8a95:	je	0x90f0


0x90f0:	cmp	dword ptr [rsp + 8], 2
0x90f5:	movzx	ebx, byte ptr [rsp + 0xf]
0x90fa:	mov	r12d, r8d
0x90fd:	mov	rbp, r11
0x9100:	sete	dl
0x9103:	mov	eax, ebx
0x9105:	test	r15, r15
0x9108:	sete	cl
0x910b:	and	eax, edx
0x910d:	and	al, cl
0x910f:	jne	0x9b76


0x8a9b:	cmp	dword ptr [rsp + 8], 2
0x8aa0:	mov	rdi, qword ptr [rsp + 0x10]
0x8aa5:	lea	r9, [rdi + rbp]
0x8aa9:	setne	al
0x8aac:	and	al, byte ptr [rsp + 0xd]
0x8ab0:	mov	r10d, eax
0x8ab3:	je	0x8b60


0x9115:	mov	eax, ebx
0x9117:	xor	eax, 1
0x911a:	and	dl, al
0x911c:	je	0x9a8c


0x9b76:	mov	dword ptr [rsp + 8], 2
0x9b7e:	jmp	0x9519


0x8b60:	movzx	ebx, byte ptr [r9]
0x8b64:	cmp	bl, 0x7e
0x8b67:	ja	0x8e88


0x8ab9:	mov	rax, qword ptr [rsp + 0x18]
0x8abe:	test	rax, rax
0x8ac1:	je	0x8ef0


0x9a8c:	mov	rbx, qword ptr [rsp + 0x48]
0x9a91:	test	rbx, rbx
0x9a94:	je	0x9ac2


0x9122:	cmp	byte ptr [rsp + 0x7c], 0
0x9127:	je	0x9a8a


0x9519:	cmp	byte ptr [rsp + 0xd], 0
0x951e:	je	0x9530


0x8b6d:	lea	rcx, [rip + 0x75f8]
0x8b74:	movzx	edx, bl
0x8b77:	movsxd	rax, dword ptr [rcx + rdx*4]
0x8b7b:	add	rax, rcx
0x8b7e:	jmp	rax


0x8e88:	cmp	qword ptr [rsp + 0x58], 1
0x8e8e:	jne	0x9238


0x8ef0:	movzx	ebx, byte ptr [r9]
0x8ef4:	cmp	bl, 0x7e
0x8ef7:	ja	0x8e80


0x8ac7:	cmp	r11, -1
0x8acb:	lea	rbx, [rbp + rax]
0x8ad0:	jne	0x8b00


0x9ac2:	cmp	r13, r15
0x9ac5:	jbe	0x9569


0x9a96:	test	al, al
0x9a98:	je	0x9ac2


0x9a8a:	mov	eax, edx
0x9a8c:	mov	rbx, qword ptr [rsp + 0x48]
0x9a91:	test	rbx, rbx
0x9a94:	je	0x9ac2


0x912d:	cmp	byte ptr [rsp + 0xe], 0
0x9132:	jne	0x9b2d


0x9520:	test	al, al
0x9522:	mov	eax, 4
0x9527:	cmove	eax, dword ptr [rsp + 8]
0x952c:	mov	dword ptr [rsp + 8], eax


0x8e94:	mov	qword ptr [rsp + 0x38], r11
0x8e99:	mov	byte ptr [rsp + 0x30], r8b
0x8e9e:	mov	byte ptr [rsp + 0x28], r10b
0x8ea3:	call	0x2590


0x9238:	lea	rax, [rsp + 0xa0]
0x9240:	cmp	r11, -1
0x9244:	mov	qword ptr [rsp + 0xa0], 0
0x9250:	mov	qword ptr [rsp + 0x28], rax
0x9255:	jne	0x9284


0x8ef9:	lea	rcx, [rip + 0x7468]
0x8f00:	movzx	edx, bl
0x8f03:	movsxd	rax, dword ptr [rcx + rdx*4]
0x8f07:	add	rax, rcx
0x8f0a:	jmp	rax


0x8e80:	xor	r10d, r10d
0x8e83:	nop	dword ptr [rax + rax]
0x8e88:	cmp	qword ptr [rsp + 0x58], 1
0x8e8e:	jne	0x9238


0x8ad2:	cmp	rax, 1
0x8ad6:	jbe	0x8b00


0x8b00:	cmp	rbx, r11
0x8b03:	mov	byte ptr [rsp + 0x28], r10b
0x8b08:	ja	0x90c0


0x9acb:	mov	byte ptr [r14 + r15], 0
0x9ad0:	jmp	0x9569


0x9a9a:	movzx	ecx, byte ptr [rbx]
0x9a9d:	mov	rax, rbx
0x9aa0:	test	cl, cl
0x9aa2:	je	0x9ac2


0x9138:	test	r13, r13
0x913b:	sete	al
0x913e:	cmp	qword ptr [rsp + 0x50], 0
0x9144:	setne	dl
0x9147:	and	al, dl
0x9149:	je	0x9b6c


0x9257:	mov	rdi, qword ptr [rsp + 0x10]
0x925c:	mov	byte ptr [rsp + 0x40], r8b
0x9261:	mov	byte ptr [rsp + 0x38], r10b
0x9266:	mov	qword ptr [rsp + 0x30], r9
0x926b:	call	0x21b0


0x9284:	lea	rax, [rsp + 0x9c]
0x928c:	xor	ecx, ecx
0x928e:	mov	byte ptr [rsp + 0x7e], bl
0x9292:	mov	byte ptr [rsp + 0x7d], r8b
0x9297:	mov	rbx, rcx
0x929a:	mov	qword ptr [rsp + 0x88], r9
0x92a2:	mov	qword ptr [rsp + 0x38], rax
0x92a7:	mov	byte ptr [rsp + 0x7f], r10b
0x92ac:	mov	qword ptr [rsp + 0x80], r15
0x92b4:	mov	qword ptr [rsp + 0x40], r14
0x92b9:	mov	qword ptr [rsp + 0x70], r13
0x92be:	mov	qword ptr [rsp + 0x30], r11
0x92c3:	mov	rax, qword ptr [rsp + 0x10]
0x92c8:	lea	r14, [rbp + rbx]
0x92cd:	mov	rdx, qword ptr [rsp + 0x30]
0x92d2:	mov	rcx, qword ptr [rsp + 0x28]
0x92d7:	mov	rdi, qword ptr [rsp + 0x38]
0x92dc:	lea	r13, [rax + r14]
0x92e0:	sub	rdx, r14
0x92e3:	mov	rsi, r13
0x92e6:	call	0xbac0


0x8ad8:	mov	byte ptr [rsp + 0x38], r8b
0x8add:	mov	byte ptr [rsp + 0x30], r10b
0x8ae2:	mov	qword ptr [rsp + 0x28], r9
0x8ae7:	call	0x21b0


0x8b0e:	mov	rdx, qword ptr [rsp + 0x18]
0x8b13:	mov	rsi, qword ptr [rsp + 0x48]
0x8b18:	mov	rdi, r9
0x8b1b:	mov	qword ptr [rsp + 0x40], r11
0x8b20:	mov	byte ptr [rsp + 0x38], r8b
0x8b25:	mov	qword ptr [rsp + 0x30], r9
0x8b2a:	call	0x2300


0x90c0:	xor	r10d, r10d
0x90c3:	jmp	0x8b60


0x9aa4:	mov	rdx, r15
0x9aa7:	sub	rax, r15
0x9aaa:	cmp	r13, rdx
0x9aad:	jbe	0x9ab3


0x9b6c:	movzx	eax, byte ptr [rsp + 0x7c]
0x9b71:	jmp	0x9a8c


0x914f:	mov	r13, qword ptr [rsp + 0x50]
0x9154:	lea	rbx, [rip + 0x79ab]
0x915b:	mov	byte ptr [r14], 0x27
0x915f:	mov	dword ptr [rsp + 8], 2
0x9167:	mov	r15d, 1
0x916d:	mov	qword ptr [rsp + 0x18], 1
0x9176:	mov	byte ptr [rsp + 0xf], 0
0x917b:	mov	qword ptr [rsp + 0x48], rbx
0x9180:	mov	byte ptr [rsp + 0x7c], al
0x9184:	jmp	0x8a63


0x9ab3:	add	rdx, 1
0x9ab7:	movzx	ecx, byte ptr [rax + rdx]
0x9abb:	test	cl, cl
0x9abd:	jne	0x9aaa


0x9aaf:	mov	byte ptr [r14 + rdx], cl
0x9ab3:	add	rdx, 1
0x9ab7:	movzx	ecx, byte ptr [rax + rdx]
0x9abb:	test	cl, cl
0x9abd:	jne	0x9aaa


0x8a63:	xor	r11d, r11d
0x8a66:	mov	rax, rbp
0x8a69:	mov	r8d, r12d
0x8a6c:	mov	rbp, r11
0x8a6f:	mov	r11, rax
0x8a72:	nop	word ptr [rax + rax]
0x8a78:	cmp	r11, rbp
0x8a7b:	setne	r12b
0x8a7f:	cmp	r11, -1
0x8a83:	jne	0x8a92


0x9abf:	mov	r15, rdx
0x9ac2:	cmp	r13, r15
0x9ac5:	jbe	0x9569


0x9aaa:	cmp	r13, rdx
0x9aad:	jbe	0x9ab3


0x8b2f:	test	eax, eax
0x8b31:	mov	r9, qword ptr [rsp + 0x30]
0x8b36:	movzx	r8d, byte ptr [rsp + 0x38]
0x8b3c:	mov	r11, qword ptr [rsp + 0x40]
0x8b41:	jne	0x90c0


0x8b47:	cmp	byte ptr [rsp + 0xf], 0
0x8b4c:	movzx	r10d, byte ptr [rsp + 0x28]
0x8b52:	jne	0x9ad5


0x9ad5:	cmp	dword ptr [rsp + 8], 2
0x9ada:	movzx	ebx, byte ptr [rsp + 0xf]
0x9adf:	mov	rbp, r11
0x9ae2:	sete	al
0x9ae5:	mov	byte ptr [rsp + 0xd], bl
0x9ae9:	jmp	0x9519


0x92eb:	test	rax, rax
0x92ee:	mov	r15, rax
0x92f1:	je	0x9341


0x9341:	mov	edx, r12d
0x9344:	mov	rdi, rbx
0x9347:	movzx	r8d, byte ptr [rsp + 0x7d]
0x934d:	xor	edx, 1
0x9350:	movzx	ebx, byte ptr [rsp + 0x7e]
0x9355:	movzx	r10d, byte ptr [rsp + 0x7f]
0x935b:	and	dl, byte ptr [rsp + 0xd]
0x935f:	mov	r15, qword ptr [rsp + 0x80]
0x9367:	mov	r14, qword ptr [rsp + 0x40]
0x936c:	mov	r13, qword ptr [rsp + 0x70]
0x9371:	mov	r11, qword ptr [rsp + 0x30]
0x9376:	cmp	rdi, 1
0x937a:	jbe	0x997b


0x92f3:	cmp	rax, -1
0x92f7:	je	0x9915


0x997b:	mov	eax, edx
0x997d:	jmp	0x8ed7


0x9380:	mov	rcx, rdi
0x9383:	xor	esi, esi
0x9385:	movzx	r9d, byte ptr [rsp + 0xf]
0x938b:	add	rcx, rbp
0x938e:	mov	rdi, qword ptr [rsp + 0x10]
0x9393:	jmp	0x944e


0x9915:	mov	rdi, rbx
0x9918:	movzx	r8d, byte ptr [rsp + 0x7d]
0x991e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x9923:	movzx	r10d, byte ptr [rsp + 0x7f]
0x9929:	mov	r15, qword ptr [rsp + 0x80]
0x9931:	xor	r12d, r12d
0x9934:	mov	r14, qword ptr [rsp + 0x40]
0x9939:	mov	r13, qword ptr [rsp + 0x70]
0x993e:	mov	r11, qword ptr [rsp + 0x30]
0x9943:	movzx	edx, byte ptr [rsp + 0xd]
0x9948:	jmp	0x9376


0x92fd:	cmp	rax, -2
0x9301:	je	0x98a1


0x8ed7:	test	al, al
0x8ed9:	jne	0x9871


0x944e:	test	dl, dl
0x9450:	jne	0x93a0


0x9376:	cmp	rdi, 1
0x937a:	jbe	0x997b


0x98a1:	mov	r11, qword ptr [rsp + 0x30]
0x98a6:	mov	rsi, r14
0x98a9:	mov	rcx, r13
0x98ac:	mov	rax, rbx
0x98af:	mov	rdi, rbx
0x98b2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x98b8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x98bd:	mov	r9, qword ptr [rsp + 0x88]
0x98c5:	cmp	rsi, r11
0x98c8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x98ce:	mov	r15, qword ptr [rsp + 0x80]
0x98d6:	mov	r14, qword ptr [rsp + 0x40]
0x98db:	mov	r13, qword ptr [rsp + 0x70]
0x98e0:	jae	0x9908


0x9307:	cmp	dword ptr [rsp + 8], 2
0x930c:	sete	al
0x930f:	and	al, byte ptr [rsp + 0xf]
0x9313:	jne	0x94b0


0x8edf:	cmp	dword ptr [rsp + 8], 2
0x8ee4:	sete	dl
0x8ee7:	jmp	0x8bb8


0x9871:	movzx	edx, byte ptr [rsp + 0xd]
0x9876:	xor	r12d, r12d
0x9879:	jmp	0x9380


0x9456:	mov	eax, esi
0x9458:	xor	eax, 1
0x945b:	and	eax, r8d
0x945e:	test	r10b, r10b
0x9461:	je	0x9471


0x93a0:	cmp	dword ptr [rsp + 8], 2
0x93a5:	sete	al
0x93a8:	test	r9b, r9b
0x93ab:	jne	0x9860


0x98e2:	cmp	byte ptr [rcx], 0
0x98e5:	jne	0x98f7


0x9908:	movzx	edx, byte ptr [rsp + 0xd]
0x990d:	xor	r12d, r12d
0x9910:	jmp	0x9376


0x9319:	mov	edi, dword ptr [rsp + 0x9c]
0x9320:	call	0x2560


0x94b0:	cmp	r15, 1
0x94b4:	je	0x9319


0x8bb8:	cmp	byte ptr [rsp + 0xd], 1
0x8bbd:	jne	0x8cd2


0x9471:	add	rbp, 1
0x9475:	cmp	rbp, rcx
0x9478:	jae	0x8bfc


0x9463:	cmp	r13, r15
0x9466:	jbe	0x946d


0x93b1:	mov	esi, r8d
0x93b4:	xor	esi, 1
0x93b7:	and	al, sil
0x93ba:	je	0x93eb


0x9860:	movzx	ebx, byte ptr [rsp + 0xf]
0x9865:	mov	rbp, r11
0x9868:	mov	byte ptr [rsp + 0xd], bl
0x986c:	jmp	0x9519


0x98e7:	jmp	0x9908


0x98f7:	add	rax, 1
0x98fb:	lea	rdx, [rbp + rax]
0x9900:	cmp	r11, rdx
0x9903:	ja	0x98f0


0x94ba:	mov	rdi, qword ptr [rsp + 0x10]
0x94bf:	lea	rcx, [rdi + r15]
0x94c3:	lea	rdx, [rdi + r14 + 1]
0x94c8:	lea	r8, [rcx + r14]
0x94cc:	jmp	0x94dd


0x8bc3:	test	dl, dl
0x8bc5:	jne	0x8cd2


0x8cd2:	cmp	byte ptr [rsp + 0xf], 0
0x8cd7:	jne	0x8bcb


0x947e:	test	al, al
0x9480:	je	0x987e


0x8bfc:	test	al, al
0x8bfe:	je	0x8c20


0x946d:	add	r15, 1
0x9471:	add	rbp, 1
0x9475:	cmp	rbp, rcx
0x9478:	jae	0x8bfc


0x9468:	mov	byte ptr [r14 + r15], 0x5c
0x946d:	add	r15, 1
0x9471:	add	rbp, 1
0x9475:	cmp	rbp, rcx
0x9478:	jae	0x8bfc


0x93eb:	cmp	r13, r15
0x93ee:	jbe	0x93f5


0x93bc:	cmp	r13, r15
0x93bf:	jbe	0x93c6


0x9905:	mov	rdi, rax
0x9908:	movzx	edx, byte ptr [rsp + 0xd]
0x990d:	xor	r12d, r12d
0x9910:	jmp	0x9376


0x98f0:	cmp	byte ptr [r9 + rax], 0
0x98f5:	je	0x9905


0x94dd:	movzx	ecx, byte ptr [rdx]
0x94e0:	sub	ecx, 0x5b
0x94e3:	cmp	cl, 0x21
0x94e6:	ja	0x94d0


0x8bcb:	mov	rsi, qword ptr [rsp + 0x20]
0x8bd0:	test	rsi, rsi
0x8bd3:	je	0x8be9


0x8cdd:	jmp	0x8be9


0x987e:	xor	r10d, r10d
0x9881:	jmp	0x943d


0x9486:	cmp	r13, r15
0x9489:	jbe	0x9490


0x8c20:	cmp	r15, r13
0x8c23:	jae	0x8c29


0x8c00:	cmp	r13, r15
0x8c03:	jbe	0x8c0a


0x93f5:	lea	rax, [r15 + 1]
0x93f9:	cmp	r13, rax
0x93fc:	jbe	0x940b


0x93f0:	mov	byte ptr [r14 + r15], 0x5c
0x93f5:	lea	rax, [r15 + 1]
0x93f9:	cmp	r13, rax
0x93fc:	jbe	0x940b


0x93c6:	lea	rsi, [r15 + 1]
0x93ca:	cmp	r13, rsi
0x93cd:	jbe	0x93d5


0x93c1:	mov	byte ptr [r14 + r15], 0x27
0x93c6:	lea	rsi, [r15 + 1]
0x93ca:	cmp	r13, rsi
0x93cd:	jbe	0x93d5


0x94e8:	mov	esi, 1
0x94ed:	shl	rsi, cl
0x94f0:	mov	rcx, rsi
0x94f3:	movabs	rsi, 0x20000002b
0x94fd:	test	rcx, rsi
0x9500:	je	0x94d0


0x94d0:	add	rdx, 1
0x94d4:	cmp	r8, rdx
0x94d7:	je	0x9319


0x8be9:	test	r10b, r10b
0x8bec:	jne	0x8d33


0x8bd5:	mov	edx, ebx
0x8bd7:	shr	dl, 5
0x8bda:	movzx	edx, dl
0x8bdd:	mov	edx, dword ptr [rsi + rdx*4]
0x8be0:	bt	edx, ebx
0x8be3:	jb	0x8d33


0x943d:	cmp	r13, r15
0x9440:	jbe	0x9446


0x9490:	lea	rax, [r15 + 1]
0x9494:	cmp	r13, rax
0x9497:	jbe	0x949f


0x948b:	mov	byte ptr [r14 + r15], 0x27
0x9490:	lea	rax, [r15 + 1]
0x9494:	cmp	r13, rax
0x9497:	jbe	0x949f


0x8c25:	mov	byte ptr [r14 + r15], bl
0x8c29:	movzx	edi, byte ptr [rsp + 0xe]
0x8c2e:	add	r15, 1
0x8c32:	mov	eax, 0
0x8c37:	test	r12b, r12b
0x8c3a:	cmove	edi, eax
0x8c3d:	mov	byte ptr [rsp + 0xe], dil
0x8c42:	jmp	0x8a78


0x8c29:	movzx	edi, byte ptr [rsp + 0xe]
0x8c2e:	add	r15, 1
0x8c32:	mov	eax, 0
0x8c37:	test	r12b, r12b
0x8c3a:	cmove	edi, eax
0x8c3d:	mov	byte ptr [rsp + 0xe], dil
0x8c42:	jmp	0x8a78


0x8c0a:	lea	rax, [r15 + 1]
0x8c0e:	cmp	r13, rax
0x8c11:	jbe	0x8c19


0x8c05:	mov	byte ptr [r14 + r15], 0x27
0x8c0a:	lea	rax, [r15 + 1]
0x8c0e:	cmp	r13, rax
0x8c11:	jbe	0x8c19


0x940b:	lea	rax, [r15 + 2]
0x940f:	cmp	r13, rax
0x9412:	jbe	0x9424


0x93fe:	mov	eax, ebx
0x9400:	shr	al, 6
0x9403:	add	eax, 0x30
0x9406:	mov	byte ptr [r14 + r15 + 1], al
0x940b:	lea	rax, [r15 + 2]
0x940f:	cmp	r13, rax
0x9412:	jbe	0x9424


0x93d5:	lea	rsi, [r15 + 2]
0x93d9:	cmp	r13, rsi
0x93dc:	jbe	0x93e4


0x93cf:	mov	byte ptr [r14 + r15 + 1], 0x24
0x93d5:	lea	rsi, [r15 + 2]
0x93d9:	cmp	r13, rsi
0x93dc:	jbe	0x93e4


0x9502:	mov	r14, qword ptr [rsp + 0x40]
0x9507:	mov	r13, qword ptr [rsp + 0x70]
0x950c:	mov	rbp, qword ptr [rsp + 0x30]
0x9511:	mov	dword ptr [rsp + 8], 2
0x9519:	cmp	byte ptr [rsp + 0xd], 0
0x951e:	je	0x9530


0x8bf2:	xor	eax, 1
0x8bf5:	add	rbp, 1
0x8bf9:	and	eax, r8d
0x8bfc:	test	al, al
0x8bfe:	je	0x8c20


0x8d33:	cmp	dword ptr [rsp + 8], 2
0x8d38:	sete	dl
0x8d3b:	cmp	byte ptr [rsp + 0xf], 0
0x8d40:	mov	eax, edx
0x8d42:	jne	0x9598


0x9446:	movzx	ebx, byte ptr [rdi + rbp]
0x944a:	add	r15, 1
0x944e:	test	dl, dl
0x9450:	jne	0x93a0


0x9442:	mov	byte ptr [r14 + r15], bl
0x9446:	movzx	ebx, byte ptr [rdi + rbp]
0x944a:	add	r15, 1
0x944e:	test	dl, dl
0x9450:	jne	0x93a0


0x949f:	add	r15, 2
0x94a3:	xor	r10d, r10d
0x94a6:	xor	r8d, r8d
0x94a9:	jmp	0x943d


0x9499:	mov	byte ptr [r14 + r15 + 1], 0x27
0x949f:	add	r15, 2
0x94a3:	xor	r10d, r10d
0x94a6:	xor	r8d, r8d
0x94a9:	jmp	0x943d


0x8a78:	cmp	r11, rbp
0x8a7b:	setne	r12b
0x8a7f:	cmp	r11, -1
0x8a83:	jne	0x8a92


0x8c19:	add	r15, 2
0x8c1d:	xor	r8d, r8d
0x8c20:	cmp	r15, r13
0x8c23:	jae	0x8c29


0x8c13:	mov	byte ptr [r14 + r15 + 1], 0x27
0x8c19:	add	r15, 2
0x8c1d:	xor	r8d, r8d
0x8c20:	cmp	r15, r13
0x8c23:	jae	0x8c29


0x9424:	and	ebx, 7
0x9427:	add	rbp, 1
0x942b:	add	r15, 3
0x942f:	add	ebx, 0x30
0x9432:	cmp	rbp, rcx
0x9435:	jae	0x8c20


0x9414:	mov	eax, ebx
0x9416:	shr	al, 3
0x9419:	and	eax, 7
0x941c:	add	eax, 0x30
0x941f:	mov	byte ptr [r14 + r15 + 2], al
0x9424:	and	ebx, 7
0x9427:	add	rbp, 1
0x942b:	add	r15, 3
0x942f:	add	ebx, 0x30
0x9432:	cmp	rbp, rcx
0x9435:	jae	0x8c20


0x93e4:	add	r15, 3
0x93e8:	mov	r8d, eax
0x93eb:	cmp	r13, r15
0x93ee:	jbe	0x93f5


0x93de:	mov	byte ptr [r14 + r15 + 2], 0x27
0x93e4:	add	r15, 3
0x93e8:	mov	r8d, eax
0x93eb:	cmp	r13, r15
0x93ee:	jbe	0x93f5


0x8d48:	mov	eax, r8d
0x8d4b:	xor	eax, 1
0x8d4e:	and	al, dl
0x8d50:	je	0x8d81


0x9598:	mov	rbp, r11
0x959b:	jmp	0x9519


0x943b:	mov	esi, edx
0x943d:	cmp	r13, r15
0x9440:	jbe	0x9446


0x8d81:	cmp	r13, r15
0x8d84:	jbe	0x8d8b


0x8d52:	cmp	r13, r15
0x8d55:	jbe	0x8d5c


0x8d8b:	add	r15, 1
0x8d8f:	add	rbp, 1
0x8d93:	jmp	0x8c20


0x8d86:	mov	byte ptr [r14 + r15], 0x5c
0x8d8b:	add	r15, 1
0x8d8f:	add	rbp, 1
0x8d93:	jmp	0x8c20


0x8d5c:	lea	rdx, [r15 + 1]
0x8d60:	cmp	r13, rdx
0x8d63:	jbe	0x8d6b


0x8d57:	mov	byte ptr [r14 + r15], 0x27
0x8d5c:	lea	rdx, [r15 + 1]
0x8d60:	cmp	r13, rdx
0x8d63:	jbe	0x8d6b


0x8d6b:	lea	rdx, [r15 + 2]
0x8d6f:	cmp	r13, rdx
0x8d72:	jbe	0x8d7a


0x8d65:	mov	byte ptr [r14 + r15 + 1], 0x24
0x8d6b:	lea	rdx, [r15 + 2]
0x8d6f:	cmp	r13, rdx
0x8d72:	jbe	0x8d7a


0x8d7a:	add	r15, 3
0x8d7e:	mov	r8d, eax
0x8d81:	cmp	r13, r15
0x8d84:	jbe	0x8d8b


0x8d74:	mov	byte ptr [r14 + r15 + 2], 0x27
0x8d7a:	add	r15, 3
0x8d7e:	mov	r8d, eax
0x8d81:	cmp	r13, r15
0x8d84:	jbe	0x8d8b


0x9325:	mov	rdi, qword ptr [rsp + 0x28]
0x932a:	test	eax, eax
0x932c:	mov	eax, 0
0x9331:	cmove	r12d, eax
0x9335:	add	rbx, r15
0x9338:	call	0x2550


0x933d:	test	eax, eax
0x933f:	je	0x92c3


0x92c3:	mov	rax, qword ptr [rsp + 0x10]
0x92c8:	lea	r14, [rbp + rbx]
0x92cd:	mov	rdx, qword ptr [rsp + 0x30]
0x92d2:	mov	rcx, qword ptr [rsp + 0x28]
0x92d7:	mov	rdi, qword ptr [rsp + 0x38]
0x92dc:	lea	r13, [rax + r14]
0x92e0:	sub	rdx, r14
0x92e3:	mov	rsi, r13
0x92e6:	call	0xbac0


0x8aec:	movzx	r8d, byte ptr [rsp + 0x38]
0x8af2:	movzx	r10d, byte ptr [rsp + 0x30]
0x8af8:	mov	r11, rax
0x8afb:	mov	r9, qword ptr [rsp + 0x28]
0x8b00:	cmp	rbx, r11
0x8b03:	mov	byte ptr [rsp + 0x28], r10b
0x8b08:	ja	0x90c0


0x9270:	movzx	r8d, byte ptr [rsp + 0x40]
0x9276:	movzx	r10d, byte ptr [rsp + 0x38]
0x927c:	mov	r11, rax
0x927f:	mov	r9, qword ptr [rsp + 0x30]
0x9284:	lea	rax, [rsp + 0x9c]
0x928c:	xor	ecx, ecx
0x928e:	mov	byte ptr [rsp + 0x7e], bl
0x9292:	mov	byte ptr [rsp + 0x7d], r8b
0x9297:	mov	rbx, rcx
0x929a:	mov	qword ptr [rsp + 0x88], r9
0x92a2:	mov	qword ptr [rsp + 0x38], rax
0x92a7:	mov	byte ptr [rsp + 0x7f], r10b
0x92ac:	mov	qword ptr [rsp + 0x80], r15
0x92b4:	mov	qword ptr [rsp + 0x40], r14
0x92b9:	mov	qword ptr [rsp + 0x70], r13
0x92be:	mov	qword ptr [rsp + 0x30], r11
0x92c3:	mov	rax, qword ptr [rsp + 0x10]
0x92c8:	lea	r14, [rbp + rbx]
0x92cd:	mov	rdx, qword ptr [rsp + 0x30]
0x92d2:	mov	rcx, qword ptr [rsp + 0x28]
0x92d7:	mov	rdi, qword ptr [rsp + 0x38]
0x92dc:	lea	r13, [rax + r14]
0x92e0:	sub	rdx, r14
0x92e3:	mov	rsi, r13
0x92e6:	call	0xbac0


0x8ea8:	mov	rcx, qword ptr [rax]
0x8eab:	movzx	edx, bl
0x8eae:	movzx	r10d, byte ptr [rsp + 0x28]
0x8eb4:	movzx	r8d, byte ptr [rsp + 0x30]
0x8eba:	mov	r11, qword ptr [rsp + 0x38]
0x8ebf:	mov	edi, 1
0x8ec4:	movzx	eax, word ptr [rcx + rdx*2]
0x8ec8:	and	ax, 0x4000
0x8ecc:	setne	r12b
0x8ed0:	sete	al
0x8ed3:	and	al, byte ptr [rsp + 0xd]
0x8ed7:	test	al, al
0x8ed9:	jne	0x9871


0x8b80:	xor	r10d, r10d
0x8b83:	cmp	r11, 1
0x8b87:	setne	al
0x8b8a:	cmp	r11, -1
0x8b8e:	jne	0x8b9c


0x8b90:	mov	rax, qword ptr [rsp + 0x10]
0x8b95:	cmp	byte ptr [rax + 1], 0
0x8b99:	setne	al
0x8b9c:	cmp	dword ptr [rsp + 8], 2
0x8ba1:	sete	dl
0x8ba4:	test	al, al
0x8ba6:	je	0x8df8


0x8b9c:	cmp	dword ptr [rsp + 8], 2
0x8ba1:	sete	dl
0x8ba4:	test	al, al
0x8ba6:	je	0x8df8


0x8df8:	test	rbp, rbp
0x8dfb:	jne	0x8bac


0x8bac:	xor	r12d, r12d
0x8baf:	xor	eax, eax
0x8bb1:	nop	dword ptr [rax]
0x8bb8:	cmp	byte ptr [rsp + 0xd], 1
0x8bbd:	jne	0x8cd2


0x8e01:	movzx	eax, byte ptr [rsp + 0xf]
0x8e06:	and	al, dl
0x8e08:	je	0x8bb8


0x8e0e:	mov	rbp, r11
0x8e11:	mov	dword ptr [rsp + 8], 2
0x8e19:	jmp	0x9519


0x9218:	cmp	byte ptr [rsp + 0xf], 0
0x921d:	jne	0x9a40


0x8c60:	cmp	eax, 5
0x8c63:	je	0x91d8


0x9223:	xor	r12d, r12d
0x9226:	xor	eax, eax
0x9228:	mov	ebx, 0x3f
0x922d:	jmp	0x8be9


0x9a40:	mov	rbp, r11
0x9a43:	movzx	eax, byte ptr [rsp + 0xf]
0x9a48:	jmp	0x9519


0x91d8:	test	byte ptr [rsp + 0x78], 4
0x91dd:	je	0x9200


0x8c69:	cmp	eax, 2
0x8c6c:	mov	ebx, 0x3f
0x8c71:	sete	dl
0x8c74:	xor	r12d, r12d
0x8c77:	xor	eax, eax
0x8c79:	jmp	0x8bb8


0x9200:	xor	edx, edx
0x9202:	xor	r12d, r12d
0x9205:	xor	eax, eax
0x9207:	mov	ebx, 0x3f
0x920c:	jmp	0x8bb8


0x91df:	lea	rcx, [rbp + 2]
0x91e3:	cmp	rcx, r11
0x91e6:	jae	0x9200


0x91e8:	mov	rax, qword ptr [rsp + 0x10]
0x91ed:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x91f2:	je	0x9982


0x9982:	movzx	ebx, byte ptr [rax + rcx]
0x9986:	cmp	bl, 0x3e
0x9989:	ja	0x9200


0x998f:	movabs	rax, 0x7000a38200000000
0x9999:	bt	rax, rbx
0x999d:	jae	0x9200


0x99a3:	cmp	byte ptr [rsp + 0xf], 0
0x99a8:	jne	0x9b92


0x99ae:	cmp	r13, r15
0x99b1:	jbe	0x99b8


0x9b92:	mov	rbp, r11
0x9b95:	jmp	0x9530


0x99b8:	lea	rax, [r15 + 1]
0x99bc:	cmp	r13, rax
0x99bf:	jbe	0x99c7


0x99b3:	mov	byte ptr [r14 + r15], 0x3f
0x99b8:	lea	rax, [r15 + 1]
0x99bc:	cmp	r13, rax
0x99bf:	jbe	0x99c7


0x99c7:	lea	rax, [r15 + 2]
0x99cb:	cmp	r13, rax
0x99ce:	jbe	0x99d6


0x99c1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x99c7:	lea	rax, [r15 + 2]
0x99cb:	cmp	r13, rax
0x99ce:	jbe	0x99d6


0x99d6:	lea	rax, [r15 + 3]
0x99da:	cmp	r13, rax
0x99dd:	jbe	0x99e5


0x99d0:	mov	byte ptr [r14 + r15 + 2], 0x22
0x99d6:	lea	rax, [r15 + 3]
0x99da:	cmp	r13, rax
0x99dd:	jbe	0x99e5


0x99e5:	add	r15, 4
0x99e9:	xor	edx, edx
0x99eb:	xor	r12d, r12d
0x99ee:	xor	eax, eax
0x99f0:	mov	rbp, rcx
0x99f3:	jmp	0x8bb8


0x99df:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x99e5:	add	r15, 4
0x99e9:	xor	edx, edx
0x99eb:	xor	r12d, r12d
0x99ee:	xor	eax, eax
0x99f0:	mov	rbp, rcx
0x99f3:	jmp	0x8bb8


0x9190:	cmp	byte ptr [rsp + 0xf], 0
0x9195:	jne	0x9a40


0x8c8e:	mov	byte ptr [rsp + 0x7c], r12b
0x8c93:	xor	edx, edx
0x8c95:	xor	eax, eax
0x8c97:	mov	ebx, 0x27
0x8c9c:	jmp	0x8bb8


0x919b:	test	r13, r13
0x919e:	je	0x95a0


0x95a0:	cmp	r13, r15
0x95a3:	jbe	0x95aa


0x91a4:	xor	edx, edx
0x91a6:	cmp	qword ptr [rsp + 0x50], 0
0x91ac:	jne	0x95a0


0x95aa:	lea	rax, [r15 + 1]
0x95ae:	cmp	r13, rax
0x95b1:	jbe	0x95b9


0x95a5:	mov	byte ptr [r14 + r15], 0x27
0x95aa:	lea	rax, [r15 + 1]
0x95ae:	cmp	r13, rax
0x95b1:	jbe	0x95b9


0x91b2:	mov	qword ptr [rsp + 0x50], r13
0x91b7:	add	r15, 3
0x91bb:	xor	eax, eax
0x91bd:	mov	byte ptr [rsp + 0x7c], r12b
0x91c2:	xor	r8d, r8d
0x91c5:	mov	r13, rdx
0x91c8:	mov	ebx, 0x27
0x91cd:	jmp	0x8be9


0x95b9:	lea	rax, [r15 + 2]
0x95bd:	cmp	r13, rax
0x95c0:	jbe	0x9bb2


0x95b3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x95b9:	lea	rax, [r15 + 2]
0x95bd:	cmp	r13, rax
0x95c0:	jbe	0x9bb2


0x9bb2:	mov	rdx, r13
0x9bb5:	mov	r13, qword ptr [rsp + 0x50]
0x9bba:	jmp	0x91b2


0x95c6:	mov	rdx, r13
0x95c9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x95cf:	mov	r13, qword ptr [rsp + 0x50]
0x95d4:	jmp	0x91b2


0x8cc4:	cmp	byte ptr [rsp + 0xd], 0
0x8cc9:	jne	0x8d30


0x8ccb:	mov	ebx, edx
0x8ccd:	xor	r12d, r12d
0x8cd0:	xor	eax, eax
0x8cd2:	cmp	byte ptr [rsp + 0xf], 0
0x8cd7:	jne	0x8bcb


0x8d30:	xor	r12d, r12d
0x8d33:	cmp	dword ptr [rsp + 8], 2
0x8d38:	sete	dl
0x8d3b:	cmp	byte ptr [rsp + 0xf], 0
0x8d40:	mov	eax, edx
0x8d42:	jne	0x9598


0x90d0:	cmp	byte ptr [rsp + 0xf], 0
0x90d5:	jne	0x9a40


0x8d03:	cmp	byte ptr [rsp + 0xd], 0
0x8d08:	je	0x8f20


0x90db:	add	rbp, 1
0x90df:	mov	eax, r8d
0x90e2:	xor	r12d, r12d
0x90e5:	mov	ebx, 0x5c
0x90ea:	jmp	0x8bfc


0x8f20:	mov	edx, 0x5c
0x8f25:	mov	ebx, 0x5c
0x8f2a:	jmp	0x8cc4


0x8d0e:	cmp	byte ptr [rsp + 0xf], 0
0x8d13:	je	0x8f20


0x8d19:	cmp	qword ptr [rsp + 0x18], 0
0x8d1f:	jne	0x90db


0x8d25:	mov	ebx, 0x5c
0x8d2a:	nop	word ptr [rax + rax]
0x8d30:	xor	r12d, r12d
0x8d33:	cmp	dword ptr [rsp + 8], 2
0x8d38:	sete	dl
0x8d3b:	cmp	byte ptr [rsp + 0xf], 0
0x8d40:	mov	eax, edx
0x8d42:	jne	0x9598


0x8dab:	xor	edx, edx
0x8dad:	test	byte ptr [rsp + 0x78], 1
0x8db2:	je	0x8ccb


0x8f73:	cmp	dword ptr [rsp + 8], 2
0x8f78:	sete	dl
0x8f7b:	cmp	byte ptr [rsp + 0xf], 0
0x8f80:	jne	0x9b1a


0x8db8:	add	rbp, 1
0x8dbc:	jmp	0x8a78


0x8f86:	mov	eax, r8d
0x8f89:	mov	rcx, r15
0x8f8c:	xor	eax, 1
0x8f8f:	and	al, dl
0x8f91:	je	0x8fc0


0x9b1a:	movzx	ebx, byte ptr [rsp + 0xf]
0x9b1f:	mov	rbp, r11
0x9b22:	mov	eax, edx
0x9b24:	mov	byte ptr [rsp + 0xd], bl
0x9b28:	jmp	0x9519


0x8fc0:	cmp	r13, rcx
0x8fc3:	jbe	0x8fca


0x8f93:	cmp	r13, r15
0x8f96:	jbe	0x8f9d


0x8fca:	cmp	dword ptr [rsp + 8], 2
0x8fcf:	lea	r15, [rcx + 1]
0x8fd3:	je	0x95d9


0x8fc5:	mov	byte ptr [r14 + rcx], 0x5c
0x8fca:	cmp	dword ptr [rsp + 8], 2
0x8fcf:	lea	r15, [rcx + 1]
0x8fd3:	je	0x95d9


0x8f9d:	lea	rcx, [r15 + 1]
0x8fa1:	cmp	r13, rcx
0x8fa4:	jbe	0x8fac


0x8f98:	mov	byte ptr [r14 + r15], 0x27
0x8f9d:	lea	rcx, [r15 + 1]
0x8fa1:	cmp	r13, rcx
0x8fa4:	jbe	0x8fac


0x95d9:	mov	eax, r12d
0x95dc:	mov	ebx, 0x30
0x95e1:	xor	r12d, r12d
0x95e4:	jmp	0x8be9


0x8fd9:	lea	rax, [rbp + 1]
0x8fdd:	cmp	rax, r11
0x8fe0:	jae	0x8ffb


0x8fac:	lea	rcx, [r15 + 2]
0x8fb0:	cmp	r13, rcx
0x8fb3:	ja	0x95e9


0x8fa6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x8fac:	lea	rcx, [r15 + 2]
0x8fb0:	cmp	r13, rcx
0x8fb3:	ja	0x95e9


0x8fe2:	mov	rax, qword ptr [rsp + 0x10]
0x8fe7:	movzx	eax, byte ptr [rax + rbp + 1]
0x8fec:	mov	byte ptr [rsp + 0x28], al
0x8ff0:	sub	eax, 0x30
0x8ff3:	cmp	al, 9
0x8ff5:	jbe	0x9829


0x8ffb:	mov	eax, r12d
0x8ffe:	mov	ebx, 0x30
0x9003:	xor	r12d, r12d
0x9006:	jmp	0x8bb8


0x8fb9:	lea	rcx, [r15 + 3]
0x8fbd:	mov	r8d, eax
0x8fc0:	cmp	r13, rcx
0x8fc3:	jbe	0x8fca


0x95e9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x95ef:	jmp	0x8fb9


0x9829:	cmp	r13, r15
0x982c:	jbe	0x9833


0x9833:	lea	rax, [rcx + 2]
0x9837:	cmp	r13, rax
0x983a:	jbe	0x9842


0x982e:	mov	byte ptr [r14 + r15], 0x30
0x9833:	lea	rax, [rcx + 2]
0x9837:	cmp	r13, rax
0x983a:	jbe	0x9842


0x9842:	mov	eax, r12d
0x9845:	lea	r15, [rcx + 3]
0x9849:	xor	r12d, r12d
0x984c:	mov	ebx, 0x30
0x9851:	jmp	0x8bb8


0x983c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x9842:	mov	eax, r12d
0x9845:	lea	r15, [rcx + 3]
0x9849:	xor	r12d, r12d
0x984c:	mov	ebx, 0x30
0x9851:	jmp	0x8bb8


0x8cb2:	cmp	dword ptr [rsp + 8], 2
0x8cb7:	sete	al
0x8cba:	and	al, byte ptr [rsp + 0xf]
0x8cbe:	jne	0x8e0e


0x9070:	mov	edx, 0xd
0x9075:	xor	r10d, r10d
0x9078:	mov	ebx, 0x72
0x907d:	jmp	0x8cb2


0x95f4:	test	ebx, ebx
0x95f6:	jne	0x8a23


0x95fc:	mov	byte ptr [rsp + 0xd], 1
0x9601:	test	r13, r13
0x9604:	jne	0x9b9a


0x960a:	lea	rax, [rip + 0x74f5]
0x9611:	mov	qword ptr [rsp + 0x50], 0
0x961a:	mov	byte ptr [rsp + 0xe], 1
0x961f:	mov	byte ptr [rsp + 0x7c], 0
0x9624:	xor	r12d, r12d
0x9627:	mov	byte ptr [rsp + 0xf], 0
0x962c:	mov	qword ptr [rsp + 0x18], 1
0x9635:	mov	qword ptr [rsp + 0x48], rax
0x963a:	mov	r15d, 1
0x9640:	mov	dword ptr [rsp + 8], 2
0x9648:	jmp	0x8a63


0x9b9a:	mov	byte ptr [rsp + 0xe], 1
0x9b9f:	xor	eax, eax
0x9ba1:	xor	r12d, r12d
0x9ba4:	mov	qword ptr [rsp + 0x50], 0
0x9bad:	jmp	0x9154


0x9154:	lea	rbx, [rip + 0x79ab]
0x915b:	mov	byte ptr [r14], 0x27
0x915f:	mov	dword ptr [rsp + 8], 2
0x9167:	mov	r15d, 1
0x916d:	mov	qword ptr [rsp + 0x18], 1
0x9176:	mov	byte ptr [rsp + 0xf], 0
0x917b:	mov	qword ptr [rsp + 0x48], rbx
0x9180:	mov	byte ptr [rsp + 0x7c], al
0x9184:	jmp	0x8a63


0x9658:	test	r13, r13
0x965b:	je	0x9886


0x9a4d:	lea	rax, [rip + 0x55c4]
0x9a54:	mov	byte ptr [rsp + 0xe], 1
0x9a59:	mov	byte ptr [rsp + 0x7c], 0
0x9a5e:	xor	r12d, r12d
0x9a61:	mov	qword ptr [rsp + 0x50], 0
0x9a6a:	mov	byte ptr [rsp + 0xf], 1
0x9a6f:	mov	byte ptr [rsp + 0xd], 1
0x9a74:	mov	qword ptr [rsp + 0x18], 1
0x9a7d:	xor	r15d, r15d
0x9a80:	mov	qword ptr [rsp + 0x48], rax
0x9a85:	jmp	0x8a63


0x9886:	mov	qword ptr [rsp + 0x50], 0
0x988f:	mov	byte ptr [rsp + 0xe], 1
0x9894:	xor	r12d, r12d
0x9897:	mov	byte ptr [rsp + 0x7c], 0
0x989c:	jmp	0x967b


0x9661:	mov	byte ptr [r14], 0x22
0x9665:	mov	byte ptr [rsp + 0xe], 1
0x966a:	xor	r12d, r12d
0x966d:	mov	byte ptr [rsp + 0x7c], 0
0x9672:	mov	qword ptr [rsp + 0x50], 0
0x967b:	lea	rax, [rip + 0x5996]
0x9682:	mov	byte ptr [rsp + 0xf], 0
0x9687:	mov	byte ptr [rsp + 0xd], 1
0x968c:	mov	qword ptr [rsp + 0x18], 1
0x9695:	mov	r15d, 1
0x969b:	mov	qword ptr [rsp + 0x48], rax
0x96a0:	jmp	0x8a63


0x967b:	lea	rax, [rip + 0x5996]
0x9682:	mov	byte ptr [rsp + 0xf], 0
0x9687:	mov	byte ptr [rsp + 0xd], 1
0x968c:	mov	qword ptr [rsp + 0x18], 1
0x9695:	mov	r15d, 1
0x969b:	mov	qword ptr [rsp + 0x48], rax
0x96a0:	jmp	0x8a63


0x96a5:	lea	rax, [rip + 0x596c]
0x96ac:	mov	byte ptr [rsp + 0xe], 1
0x96b1:	mov	byte ptr [rsp + 0x7c], 0
0x96b6:	xor	r12d, r12d
0x96b9:	mov	qword ptr [rsp + 0x50], 0
0x96c2:	mov	byte ptr [rsp + 0xf], 1
0x96c7:	mov	byte ptr [rsp + 0xd], 1
0x96cc:	mov	qword ptr [rsp + 0x18], 1
0x96d5:	xor	r15d, r15d
0x96d8:	mov	qword ptr [rsp + 0x48], rax
0x96dd:	mov	dword ptr [rsp + 8], 5
0x96e5:	jmp	0x8a63


0x96ea:	mov	byte ptr [rsp + 0xe], 1
0x96ef:	mov	byte ptr [rsp + 0x7c], 0
0x96f4:	xor	r12d, r12d
0x96f7:	mov	qword ptr [rsp + 0x50], 0
0x9700:	mov	byte ptr [rsp + 0xf], 0
0x9705:	xor	r15d, r15d
0x9708:	mov	byte ptr [rsp + 0xd], 1
0x970d:	mov	qword ptr [rsp + 0x18], 0
0x9716:	mov	qword ptr [rsp + 0x48], 0
0x971f:	jmp	0x8a63


0x9724:	cmp	dword ptr [rsp + 8], 0xa
0x9729:	je	0x9781


0x9781:	xor	r15d, r15d
0x9784:	test	ebx, ebx
0x9786:	je	0x994d


0x972b:	lea	rsi, [rip + 0x69b1]
0x9732:	xor	edi, edi
0x9734:	mov	edx, 5
0x9739:	call	0x2190


0x994d:	mov	rdx, qword ptr [rsp + 0x68]
0x9952:	movzx	eax, byte ptr [rdx]
0x9955:	test	al, al
0x9957:	je	0x978c


0x978c:	test	ebx, ebx
0x978e:	mov	rbx, qword ptr [rsp + 0x60]
0x9793:	setne	byte ptr [rsp + 0xf]
0x9798:	xor	r12d, r12d
0x979b:	mov	rdi, rbx
0x979e:	call	0x21b0


0x9969:	add	r15, 1
0x996d:	movzx	eax, byte ptr [rdx + r15]
0x9972:	test	al, al
0x9974:	jne	0x9960


0x9965:	mov	byte ptr [r14 + r15], al
0x9969:	add	r15, 1
0x996d:	movzx	eax, byte ptr [rdx + r15]
0x9972:	test	al, al
0x9974:	jne	0x9960


0x9976:	jmp	0x978c


0x9960:	cmp	r13, r15
0x9963:	jbe	0x9969


0x97a3:	mov	qword ptr [rsp + 0x48], rbx
0x97a8:	mov	qword ptr [rsp + 0x18], rax
0x97ad:	mov	byte ptr [rsp + 0xe], 1
0x97b2:	mov	byte ptr [rsp + 0x7c], 0
0x97b7:	mov	qword ptr [rsp + 0x50], 0
0x97c0:	mov	byte ptr [rsp + 0xd], 1
0x97c5:	jmp	0x8a63


0x973e:	mov	rcx, rax
0x9741:	mov	qword ptr [rsp + 0x68], rax
0x9746:	lea	rax, [rip + 0x6996]
0x974d:	cmp	rcx, rax
0x9750:	je	0x9aee


0x9aee:	mov	esi, dword ptr [rsp + 8]
0x9af2:	mov	rdi, rcx
0x9af5:	call	0x88a0


0x9756:	lea	rsi, [rip + 0x73a9]
0x975d:	xor	edi, edi
0x975f:	mov	edx, 5
0x9764:	call	0x2190


0x9769:	mov	rcx, rax
0x976c:	mov	qword ptr [rsp + 0x60], rax
0x9771:	lea	rax, [rip + 0x738e]
0x9778:	cmp	rcx, rax
0x977b:	je	0x9b04


0x9b04:	mov	esi, dword ptr [rsp + 8]
0x9b08:	mov	rdi, rcx
0x9b0b:	call	0x88a0


0x9b10:	mov	qword ptr [rsp + 0x60], rax
0x9b15:	jmp	0x9781


0x9afa:	mov	qword ptr [rsp + 0x68], rax
0x9aff:	jmp	0x9756


0x97ca:	mov	byte ptr [rsp + 0xe], 1
0x97cf:	mov	byte ptr [rsp + 0x7c], 0
0x97d4:	xor	r12d, r12d
0x97d7:	mov	qword ptr [rsp + 0x50], 0
0x97e0:	mov	byte ptr [rsp + 0xf], 0
0x97e5:	xor	r15d, r15d
0x97e8:	mov	byte ptr [rsp + 0xd], 0
0x97ed:	mov	qword ptr [rsp + 0x18], 0
0x97f6:	mov	qword ptr [rsp + 0x48], 0
0x97ff:	jmp	0x8a63


0x9804:	mov	byte ptr [rsp + 0xe], 1
0x9809:	mov	byte ptr [rsp + 0x7c], 0
0x980e:	xor	r12d, r12d
0x9811:	mov	qword ptr [rsp + 0x50], 0
0x981a:	mov	byte ptr [rsp + 0xf], 1
0x981f:	mov	byte ptr [rsp + 0xd], 1
0x9824:	jmp	0x8a43


0x8a43:	lea	rax, [rip + 0x80bc]
0x8a4a:	mov	qword ptr [rsp + 0x18], 1
0x8a53:	xor	r15d, r15d
0x8a56:	mov	dword ptr [rsp + 8], 2
0x8a5e:	mov	qword ptr [rsp + 0x48], rax
0x8a63:	xor	r11d, r11d
0x8a66:	mov	rax, rbp
0x8a69:	mov	r8d, r12d
0x8a6c:	mov	rbp, r11
0x8a6f:	mov	r11, rax
0x8a72:	nop	word ptr [rax + rax]
0x8a78:	cmp	r11, rbp
0x8a7b:	setne	r12b
0x8a7f:	cmp	r11, -1
0x8a83:	jne	0x8a92


0x99f8:	test	ebx, ebx
0x99fa:	je	0x9b88


0x9b88:	mov	byte ptr [rsp + 0xd], 0
0x9b8d:	jmp	0x9601


0x9a00:	lea	rax, [rip + 0x70ff]
0x9a07:	mov	byte ptr [rsp + 0xe], 1
0x9a0c:	mov	byte ptr [rsp + 0x7c], 0
0x9a11:	xor	r12d, r12d
0x9a14:	mov	qword ptr [rsp + 0x50], 0
0x9a1d:	mov	byte ptr [rsp + 0xf], 1
0x9a22:	mov	byte ptr [rsp + 0xd], 0
0x9a27:	mov	qword ptr [rsp + 0x18], 1
0x9a30:	xor	r15d, r15d
0x9a33:	mov	qword ptr [rsp + 0x48], rax
0x9a38:	jmp	0x8a63


0x9601:	test	r13, r13
0x9604:	jne	0x9b9a


0x9bc4:	nop	
0x9bc6:	nop	word ptr cs:[rax + rax]


0x9d7b:	nop	dword ptr [rax + rax]


0x9db6:	nop	word ptr cs:[rax + rax]


0x9dd1:	nop	dword ptr [rax + rax]
0x9dd6:	nop	word ptr cs:[rax + rax]


0x9df1:	nop	dword ptr [rax + rax]
0x9df6:	nop	word ptr cs:[rax + rax]


0x9e35:	nop	
0x9e36:	nop	word ptr cs:[rax + rax]


0x9e55:	nop	
0x9e56:	nop	word ptr cs:[rax + rax]


0x9f04:	nop	
0x9f06:	nop	word ptr cs:[rax + rax]


0x9ff3:	nop	dword ptr [rax]
0x9ff6:	nop	word ptr cs:[rax + rax]


0xa00a:	nop	word ptr [rax + rax]


0xa0a3:	nop	dword ptr [rax]
0xa0a6:	nop	word ptr cs:[rax + rax]


0xa0c3:	nop	dword ptr [rax]
0xa0c6:	nop	word ptr cs:[rax + rax]


0xa0dc:	nop	dword ptr [rax]


0xa0f8:	nop	dword ptr [rax + rax]


0xa114:	nop	
0xa116:	nop	word ptr cs:[rax + rax]


0xa1ae:	nop	


0xa23a:	nop	word ptr [rax + rax]


0xa24c:	nop	dword ptr [rax]


0xa25f:	nop	


0xa2f8:	nop	dword ptr [rax + rax]


0xa321:	nop	dword ptr [rax + rax]
0xa326:	nop	word ptr cs:[rax + rax]


0xa33a:	nop	word ptr [rax + rax]


0xa3ce:	nop	


0xa461:	nop	dword ptr [rax + rax]
0xa466:	nop	word ptr cs:[rax + rax]


0xa47c:	nop	dword ptr [rax]


0xa497:	nop	word ptr [rax + rax]


0xa4b3:	nop	dword ptr [rax]
0xa4b6:	nop	word ptr cs:[rax + rax]


0xa4cc:	nop	dword ptr [rax]


0xa4e4:	nop	
0xa4e6:	nop	word ptr cs:[rax + rax]


0xa503:	nop	dword ptr [rax]
0xa506:	nop	word ptr cs:[rax + rax]


0xa528:	nop	dword ptr [rax + rax]


0xa657:	nop	word ptr [rax + rax]


0xa6f2:	nop	dword ptr [rax]
0xa6f6:	nop	word ptr cs:[rax + rax]


0xa712:	nop	word ptr cs:[rax + rax]
0xa71c:	nop	dword ptr [rax]


0xa76a:	nop	word ptr [rax + rax]


0xa789:	nop	dword ptr [rax]


0xa7a9:	nop	dword ptr [rax]


0xabc7:	nop	word ptr [rax + rax]


0xac68:	nop	dword ptr [rax + rax]


0xad45:	nop	
0xad46:	nop	word ptr cs:[rax + rax]


0xadea:	nop	word ptr [rax + rax]


0xae14:	nop	
0xae16:	nop	word ptr cs:[rax + rax]


0xae22:	nop	dword ptr [rax]
0xae26:	nop	word ptr cs:[rax + rax]


0xae66:	nop	word ptr cs:[rax + rax]


0xae94:	nop	
0xae96:	nop	word ptr cs:[rax + rax]


0xaf22:	nop	dword ptr [rax]
0xaf26:	nop	word ptr cs:[rax + rax]


0xaf7a:	nop	word ptr [rax + rax]


0xaf97:	nop	word ptr [rax + rax]


0xafce:	nop	


0xaff8:	nop	dword ptr [rax + rax]


0xb013:	nop	word ptr cs:[rax + rax]
0xb01d:	nop	dword ptr [rax]


0xb055:	nop	word ptr cs:[rax + rax]
0xb05f:	nop	


0xb08f:	nop	


0xb13c:	nop	dword ptr [rax]


0xb318:	mov	rax, rbx
0xb31b:	mul	rsi
0xb31e:	jo	0xb511


0xb511:	or	rax, 0xffffffffffffffff
0xb515:	mov	r8d, 1
0xb51b:	jmp	0xb327


0xb324:	xor	r8d, r8d
0xb327:	mul	rsi
0xb32a:	jo	0xb502


0xb327:	mul	rsi
0xb32a:	jo	0xb502


0xb502:	mov	r8d, 1
0xb508:	or	rbx, 0xffffffffffffffff
0xb50c:	jmp	0xb333


0xb330:	mov	rbx, rax
0xb333:	or	ebp, r8d
0xb336:	nop	word ptr cs:[rax + rax]
0xb340:	movsxd	rdi, edi
0xb343:	mov	eax, ebp
0xb345:	add	rcx, rdi
0xb348:	or	eax, 2
0xb34b:	mov	qword ptr [r15], rcx
0xb34e:	cmp	byte ptr [rcx], 0
0xb351:	mov	qword ptr [r14], rbx
0xb354:	cmovne	ebp, eax
0xb357:	jmp	0xb21d


0xb333:	or	ebp, r8d
0xb336:	nop	word ptr cs:[rax + rax]
0xb340:	movsxd	rdi, edi
0xb343:	mov	eax, ebp
0xb345:	add	rcx, rdi
0xb348:	or	eax, 2
0xb34b:	mov	qword ptr [r15], rcx
0xb34e:	cmp	byte ptr [rcx], 0
0xb351:	mov	qword ptr [r14], rbx
0xb354:	cmovne	ebp, eax
0xb357:	jmp	0xb21d


0xb367:	mov	edx, 2
0xb36c:	mov	rax, rdx
0xb36f:	mul	rbx
0xb372:	jo	0xb40e


0xb40e:	mov	ebp, 1
0xb413:	or	rbx, 0xffffffffffffffff
0xb417:	jmp	0xb340


0xb378:	add	rbx, rbx
0xb37b:	jmp	0xb340


0xb340:	movsxd	rdi, edi
0xb343:	mov	eax, ebp
0xb345:	add	rcx, rdi
0xb348:	or	eax, 2
0xb34b:	mov	qword ptr [r15], rcx
0xb34e:	cmp	byte ptr [rcx], 0
0xb351:	mov	qword ptr [r14], rbx
0xb354:	cmovne	ebp, eax
0xb357:	jmp	0xb21d


0xb37d:	mov	edx, 0x200
0xb382:	mov	rax, rdx
0xb385:	mul	rbx
0xb388:	jo	0xb40e


0xb38e:	shl	rbx, 9
0xb392:	jmp	0xb340


0xb394:	mov	r8d, 7
0xb39a:	xor	r9d, r9d
0xb39d:	nop	dword ptr [rax]
0xb3a0:	mov	rax, rbx
0xb3a3:	mul	rsi
0xb3a6:	mov	rbx, rax
0xb3a9:	jo	0xb53e


0xb53e:	mov	r9d, 1
0xb544:	or	rbx, 0xffffffffffffffff
0xb548:	jmp	0xb3af


0xb3af:	sub	r8d, 1
0xb3b3:	jne	0xb3a0


0xb3b5:	or	ebp, r9d
0xb3b8:	jmp	0xb340


0xb3a0:	mov	rax, rbx
0xb3a3:	mul	rsi
0xb3a6:	mov	rbx, rax
0xb3a9:	jo	0xb53e


0xb3ba:	mov	r8d, 8
0xb3c0:	xor	r9d, r9d
0xb3c3:	nop	dword ptr [rax + rax]
0xb3c8:	mov	rax, rbx
0xb3cb:	mul	rsi
0xb3ce:	mov	rbx, rax
0xb3d1:	jo	0xb520


0xb520:	mov	r9d, 1
0xb526:	or	rbx, 0xffffffffffffffff
0xb52a:	jmp	0xb3d7


0xb3d7:	sub	r8d, 1
0xb3db:	jne	0xb3c8


0xb3dd:	jmp	0xb3b5


0xb3c8:	mov	rax, rbx
0xb3cb:	mul	rsi
0xb3ce:	mov	rbx, rax
0xb3d1:	jo	0xb520


0xb3df:	mov	r8d, 4
0xb3e5:	xor	r9d, r9d
0xb3e8:	mov	rax, rbx
0xb3eb:	mul	rsi
0xb3ee:	mov	rbx, rax
0xb3f1:	jo	0xb4f3


0xb4f3:	mov	r9d, 1
0xb4f9:	or	rbx, 0xffffffffffffffff
0xb4fd:	jmp	0xb3f7


0xb3f7:	sub	r8d, 1
0xb3fb:	jne	0xb3e8


0xb3fd:	jmp	0xb3b5


0xb3e8:	mov	rax, rbx
0xb3eb:	mul	rsi
0xb3ee:	mov	rbx, rax
0xb3f1:	jo	0xb4f3


0xb3ff:	mov	rax, rbx
0xb402:	mul	rsi
0xb405:	mov	rbx, rax
0xb408:	jno	0xb340


0xb52f:	mov	r9d, 1
0xb535:	or	rbx, 0xffffffffffffffff
0xb539:	jmp	0xb438


0xb438:	sub	r8d, 1
0xb43c:	jne	0xb429


0xb43e:	jmp	0xb3b5


0xb429:	mov	rax, rbx
0xb42c:	mul	rsi
0xb42f:	mov	rbx, rax
0xb432:	jo	0xb52f


0xb443:	mov	r8d, 6
0xb449:	xor	r9d, r9d
0xb44c:	mov	rax, rbx
0xb44f:	mul	rsi
0xb452:	mov	rbx, rax
0xb455:	jo	0xb4e4


0xb4e4:	mov	r9d, 1
0xb4ea:	or	rbx, 0xffffffffffffffff
0xb4ee:	jmp	0xb45b


0xb45b:	sub	r8d, 1
0xb45f:	jne	0xb44c


0xb461:	jmp	0xb3b5


0xb44c:	mov	rax, rbx
0xb44f:	mul	rsi
0xb452:	mov	rbx, rax
0xb455:	jo	0xb4e4


0xb466:	mov	edx, 0x400
0xb46b:	mov	rax, rdx
0xb46e:	mul	rbx
0xb471:	jo	0xb40e


0xb473:	shl	rbx, 0xa
0xb477:	jmp	0xb340


0xb47c:	mov	rax, rbx
0xb47f:	mul	rsi
0xb482:	jo	0xb54d


0xb54d:	mov	r8d, 1
0xb553:	or	rax, 0xffffffffffffffff
0xb557:	jmp	0xb48b


0xb488:	xor	r8d, r8d
0xb48b:	mul	rsi
0xb48e:	jno	0xb327


0xb48b:	mul	rsi
0xb48e:	jno	0xb327


0xb494:	mov	r8d, 1
0xb49a:	or	rax, 0xffffffffffffffff
0xb49e:	jmp	0xb327


0xb55c:	nop	dword ptr [rax]


0xb611:	nop	word ptr cs:[rax + rax]
0xb61b:	nop	dword ptr [rax + rax]


0xb661:	nop	dword ptr [rax + rax]
0xb666:	nop	word ptr cs:[rax + rax]


0xb6a7:	nop	word ptr [rax + rax]


0xb982:	nop	word ptr cs:[rax + rax]
0xb98c:	nop	dword ptr [rax]


0xbab6:	nop	word ptr cs:[rax + rax]


0xbb43:	nop	word ptr cs:[rax + rax]
0xbb4d:	nop	dword ptr [rax]


0xbbd2:	nop	dword ptr [rax]
0xbbd6:	nop	word ptr cs:[rax + rax]


0xbc16:	nop	word ptr cs:[rax + rax]


0xc468:	nop	dword ptr [rax + rax]


0xc4ee:	nop	


0xc5df:	nop	


0xc5ea:	nop	word ptr [rax + rax]


0xc706:	nop	word ptr cs:[rax + rax]


0xc783:	nop	dword ptr [rax]
0xc786:	nop	word ptr cs:[rax + rax]


0xc91d:	nop	dword ptr [rax]


0xc96d:	nop	dword ptr [rax]


0xc9ed:	nop	dword ptr [rax]


0xca5e:	nop	


0xcaf6:	nop	word ptr cs:[rax + rax]


0xcb3c:	nop	dword ptr [rax]


0xcb7f:	nop	


0xcbfb:	nop	dword ptr [rax + rax]


0xcc97:	nop	word ptr [rax + rax]


0xddbf:	nop	


0xddce:	nop	


0xe04e:	nop	


0xe24e:	nop	


0xe497:	mov	r11d, 0x10
0xe49d:	mov	ebx, 0x73
0xe4a2:	nop	word ptr [rax + rax]
0xe4a8:	cmp	r13, -1
0xe4ac:	je	0xeb67


0xeb67:	mov	rsi, qword ptr [rsp + 0x20]
0xeb6c:	cmp	rsi, -1
0xeb70:	lea	rax, [rsi + 1]
0xeb74:	mov	qword ptr [r12 + 0x50], rsi
0xeb79:	je	0xea9b


0xe4b2:	mov	qword ptr [r12 + 0x50], r13
0xe4b7:	cmp	r9, r13
0xe4ba:	mov	rcx, qword ptr [r15 + 8]
0xe4be:	jbe	0xeae0


0xeb7f:	mov	r13, qword ptr [rsp + 0x20]
0xeb84:	mov	qword ptr [rsp + 0x20], rax
0xeb89:	jmp	0xe4b7


0xeae0:	add	r9, r9
0xeae3:	lea	rax, [r13 + 1]
0xeae7:	cmp	r9, r13
0xeaea:	cmovbe	r9, rax
0xeaee:	movabs	rax, 0x7ffffffffffffff
0xeaf8:	cmp	r9, rax
0xeafb:	ja	0xeedb


0xe4c4:	mov	rax, qword ptr [r15]
0xe4c7:	mov	rdx, rax
0xe4ca:	shl	rdx, 5
0xe4ce:	add	rdx, rcx
0xe4d1:	cmp	rax, r13
0xe4d4:	ja	0xe4f6


0xe4b7:	cmp	r9, r13
0xe4ba:	mov	rcx, qword ptr [r15 + 8]
0xe4be:	jbe	0xeae0


0xeb01:	mov	rsi, r9
0xeb04:	mov	qword ptr [rsp + 0x48], r9
0xeb09:	mov	qword ptr [rsp + 0x40], r10
0xeb0e:	shl	rsi, 5
0xeb12:	cmp	qword ptr [rsp + 8], rcx
0xeb17:	mov	qword ptr [rsp + 0x38], r8
0xeb1c:	mov	dword ptr [rsp + 0x30], r11d
0xeb21:	je	0xebc1


0xe4f6:	shl	r13, 5
0xe4fa:	lea	rax, [rcx + r13]
0xe4fe:	mov	edx, dword ptr [rax]
0xe500:	test	edx, edx
0xe502:	jne	0xead3


0xebc1:	mov	rdi, rsi
0xebc4:	call	0x23c0


0xeb27:	mov	rdi, rcx
0xeb2a:	call	0x2450


0xe4e0:	add	rax, 1
0xe4e4:	mov	dword ptr [rdx], 0
0xe4ea:	add	rdx, 0x20
0xe4ee:	cmp	rax, r13
0xe4f1:	jbe	0xe4e0


0xe4f3:	mov	qword ptr [r15], rax
0xe4f6:	shl	r13, 5
0xe4fa:	lea	rax, [rcx + r13]
0xe4fe:	mov	edx, dword ptr [rax]
0xe500:	test	edx, edx
0xe502:	jne	0xead3


0xe508:	mov	dword ptr [rax], r11d
0xe50b:	mov	byte ptr [r12 + 0x48], bl
0xe510:	mov	rax, qword ptr [r14]
0xe513:	mov	qword ptr [r12 + 8], rbp
0xe518:	lea	rbx, [rax + 1]
0xe51c:	cmp	r10, rbx
0xe51f:	mov	qword ptr [r14], rbx
0xe522:	ja	0xe5b0


0xead3:	cmp	edx, r11d
0xead6:	je	0xe50b


0xe528:	test	r10, r10
0xe52b:	js	0xeed7


0xe5b0:	mov	rcx, qword ptr [r14 + 8]
0xe5b4:	jmp	0xe2c8


0xe50b:	mov	byte ptr [r12 + 0x48], bl
0xe510:	mov	rax, qword ptr [r14]
0xe513:	mov	qword ptr [r12 + 8], rbp
0xe518:	lea	rbx, [rax + 1]
0xe51c:	cmp	r10, rbx
0xe51f:	mov	qword ptr [r14], rbx
0xe522:	ja	0xe5b0


0xeadc:	jmp	0xea9f


0xeed7:	mov	rcx, qword ptr [r15 + 8]
0xeedb:	cmp	qword ptr [rsp + 8], rcx
0xeee0:	jne	0xed44


0xe531:	add	r10, r10
0xe534:	movabs	rax, 0x2e8ba2e8ba2e8ba
0xe53e:	cmp	r10, rax
0xe541:	ja	0xeed7


0xe547:	lea	rax, [r10 + r10*4]
0xe54b:	mov	rdi, qword ptr [r14 + 8]
0xe54f:	cmp	qword ptr [rsp + 0x28], rdi
0xe554:	mov	qword ptr [rsp + 0x40], r9
0xe559:	mov	qword ptr [rsp + 0x38], r10
0xe55e:	lea	rax, [r10 + rax*2]
0xe562:	mov	qword ptr [rsp + 0x30], r8
0xe567:	lea	rsi, [rax*8]
0xe56f:	je	0xec2d


0xec2d:	mov	rdi, rsi
0xec30:	call	0x23c0


0xe575:	call	0x2450


0xe57a:	test	rax, rax
0xe57d:	mov	rcx, rax
0xe580:	mov	r8, qword ptr [rsp + 0x30]
0xe585:	mov	r10, qword ptr [rsp + 0x38]
0xe58a:	mov	r9, qword ptr [rsp + 0x40]
0xe58f:	je	0xeed7


0xe595:	mov	rax, qword ptr [rsp + 0x28]
0xe59a:	cmp	rax, qword ptr [r14 + 8]
0xe59e:	mov	rbx, qword ptr [r14]
0xe5a1:	je	0xec50


0xec50:	lea	rax, [rbx + rbx*4]
0xec54:	mov	rsi, qword ptr [rsp + 0x28]
0xec59:	mov	rdi, rcx
0xec5c:	mov	qword ptr [rsp + 0x40], r9
0xec61:	mov	qword ptr [rsp + 0x38], r10
0xec66:	lea	rdx, [rbx + rax*2]
0xec6a:	mov	qword ptr [rsp + 0x30], r8
0xec6f:	shl	rdx, 3
0xec73:	call	0x2360


0xe5a7:	mov	qword ptr [r14 + 8], rcx
0xe5ab:	jmp	0xe2c8


0xec78:	mov	rbx, qword ptr [r14]
0xec7b:	mov	rcx, rax
0xec7e:	mov	r9, qword ptr [rsp + 0x40]
0xec83:	mov	r10, qword ptr [rsp + 0x38]
0xec88:	mov	r8, qword ptr [rsp + 0x30]
0xec8d:	jmp	0xe5a7


0xeb2f:	test	rax, rax
0xeb32:	mov	rcx, rax
0xeb35:	mov	r11d, dword ptr [rsp + 0x30]
0xeb3a:	mov	r8, qword ptr [rsp + 0x38]
0xeb3f:	mov	r10, qword ptr [rsp + 0x40]
0xeb44:	mov	r9, qword ptr [rsp + 0x48]
0xeb49:	je	0xeed7


0xeb4f:	mov	rax, qword ptr [rsp + 8]
0xeb54:	cmp	rax, qword ptr [r15 + 8]
0xeb58:	je	0xebe9


0xebe9:	mov	rdx, qword ptr [r15]
0xebec:	mov	rsi, qword ptr [rsp + 8]
0xebf1:	mov	rdi, rcx
0xebf4:	mov	qword ptr [rsp + 0x48], r9
0xebf9:	mov	qword ptr [rsp + 0x40], r10
0xebfe:	mov	qword ptr [rsp + 0x38], r8
0xec03:	mov	dword ptr [rsp + 0x30], r11d
0xec08:	shl	rdx, 5
0xec0c:	call	0x2360


0xeb5e:	mov	qword ptr [r15 + 8], rcx
0xeb62:	jmp	0xe4c4


0xec11:	mov	r9, qword ptr [rsp + 0x48]
0xec16:	mov	r10, qword ptr [rsp + 0x40]
0xec1b:	mov	rcx, rax
0xec1e:	mov	r8, qword ptr [rsp + 0x38]
0xec23:	mov	r11d, dword ptr [rsp + 0x30]
0xec28:	jmp	0xeb5e


0xec35:	test	rax, rax
0xec38:	mov	rcx, rax
0xec3b:	mov	r8, qword ptr [rsp + 0x30]
0xec40:	mov	r10, qword ptr [rsp + 0x38]
0xec45:	mov	r9, qword ptr [rsp + 0x40]
0xec4a:	je	0xed39


0xed39:	mov	rcx, qword ptr [r15 + 8]
0xed3d:	cmp	qword ptr [rsp + 8], rcx
0xed42:	je	0xed5c


0xebc9:	test	rax, rax
0xebcc:	mov	rcx, rax
0xebcf:	mov	r11d, dword ptr [rsp + 0x30]
0xebd4:	mov	r8, qword ptr [rsp + 0x38]
0xebd9:	mov	r10, qword ptr [rsp + 0x40]
0xebde:	mov	r9, qword ptr [rsp + 0x48]
0xebe3:	je	0xed4c


0xe94c:	cmp	eax, 0xf
0xe94f:	mov	r11d, 0x16
0xe955:	jg	0xe4a8


0xe95b:	test	al, 4
0xe95d:	jne	0xe4a8


0xe4a8:	cmp	r13, -1
0xe4ac:	je	0xeb67


0xe963:	cmp	eax, 7
0xe966:	mov	r11d, 0x15
0xe96c:	jg	0xe4a8


0xe972:	test	al, 2
0xe974:	mov	r11d, 0x12
0xe97a:	jne	0xe4a8


0xe980:	xor	r11d, r11d
0xe983:	test	al, 1
0xe985:	sete	r11b
0xe989:	add	r11d, 0x13
0xe98d:	jmp	0xe4a8


0xe9ab:	cmp	eax, 0xf
0xe9ae:	mov	r11d, 9
0xe9b4:	jg	0xe4a8


0xe9ba:	test	al, 4
0xe9bc:	jne	0xe4a8


0xe9c2:	cmp	eax, 7
0xe9c5:	mov	r11d, 7
0xe9cb:	jg	0xe4a8


0xe9d1:	test	al, 2
0xe9d3:	mov	r11d, 1
0xe9d9:	jne	0xe4a8


0xe9df:	and	eax, 1
0xe9e2:	cmp	eax, 1
0xe9e5:	sbb	r11d, r11d
0xe9e8:	and	r11d, 2
0xe9ec:	add	r11d, 3
0xe9f0:	jmp	0xe4a8


0xea0b:	cmp	eax, 0xf
0xea0e:	mov	r11d, 0xc
0xea14:	jg	0xe4a8


0xea1a:	xor	r11d, r11d
0xea1d:	test	al, 4
0xea1f:	setne	r11b
0xea23:	add	r11d, 0xb
0xea27:	jmp	0xe4a8


0xea2c:	mov	r11d, 0xe
0xea32:	mov	ebx, 0x63
0xea37:	jmp	0xe4a8


0xea3c:	cmp	eax, 0xf
0xea3f:	mov	r11d, 0xa
0xea45:	jg	0xe4a8


0xea4b:	test	al, 4
0xea4d:	jne	0xe4a8


0xea53:	cmp	eax, 7
0xea56:	mov	r11d, 8
0xea5c:	jg	0xe4a8


0xea62:	test	al, 2
0xea64:	mov	r11d, 2
0xea6a:	jne	0xe4a8


0xea70:	and	eax, 1
0xea73:	cmp	eax, 1
0xea76:	sbb	r11d, r11d
0xea79:	and	r11d, 2
0xea7d:	add	r11d, 4
0xea81:	jmp	0xe4a8


0xef3c:	nop	dword ptr [rax]


0xefa5:	nop	
0xefa6:	nop	word ptr cs:[rax + rax]


0xefb2:	nop	word ptr cs:[rax + rax]
0xefbc:	nop	dword ptr [rax]


0x4730:	mov	rdi, r12
0x4733:	call	0xb000


0x47b0:	mov	rax, qword ptr [rcx + 0x30]
0x47b4:	cmp	rax, -3
0x47b8:	jbe	0x48d0


0x4818:	lea	rdx, [rsp + 0x170]
0x4820:	mov	rsi, qword ptr [rcx + 0x30]
0x4824:	movzx	edi, byte ptr [rcx + 0x38]
0x4828:	jmp	0x47f0


0x4830:	mov	rax, qword ptr [rcx + 0x10]
0x4834:	lea	rdi, [rip + 0xc11e]
0x483b:	cmp	rax, -3
0x483f:	ja	0x47ff


0x4868:	mov	rdi, rbx
0x486b:	call	0xb000


0x4880:	mov	rdi, qword ptr [rsp]
0x4884:	call	0xb000


0x48a0:	mov	rdi, r13
0x48a3:	jmp	0x47ff


0x8c50:	xor	r10d, r10d
0x8c53:	mov	eax, dword ptr [rsp + 8]
0x8c57:	cmp	eax, 2
0x8c5a:	je	0x9218


0x8c80:	xor	r10d, r10d
0x8c83:	cmp	dword ptr [rsp + 8], 2
0x8c88:	je	0x9190


0x8ca8:	mov	edx, 9
0x8cad:	mov	ebx, 0x74
0x8cb2:	cmp	dword ptr [rsp + 8], 2
0x8cb7:	sete	al
0x8cba:	and	al, byte ptr [rsp + 0xf]
0x8cbe:	jne	0x8e0e


0x8ce8:	mov	edx, 8
0x8ced:	mov	ebx, 0x62
0x8cf2:	jmp	0x8cc4


0x8cf8:	cmp	dword ptr [rsp + 8], 2
0x8cfd:	je	0x90d0


0x8da0:	cmp	byte ptr [rsp + 0xd], 0
0x8da5:	jne	0x8f73


0x8dc8:	cmp	dword ptr [rsp + 8], 2
0x8dcd:	sete	dl
0x8dd0:	xor	eax, eax
0x8dd2:	jmp	0x8bb8


0x8de0:	mov	edx, 7
0x8de5:	mov	ebx, 0x61
0x8dea:	jmp	0x8cc4


0x8df0:	cmp	dword ptr [rsp + 8], 2
0x8df5:	sete	dl
0x8df8:	test	rbp, rbp
0x8dfb:	jne	0x8bac


0x8e20:	cmp	dword ptr [rsp + 8], 2
0x8e25:	sete	dl
0x8e28:	xor	r12d, r12d
0x8e2b:	jmp	0x8e01


0x8e30:	cmp	dword ptr [rsp + 8], 2
0x8e35:	mov	ebx, 0x20
0x8e3a:	sete	dl
0x8e3d:	jmp	0x8e01


0x8e40:	mov	edx, 0xd
0x8e45:	mov	ebx, 0x72
0x8e4a:	jmp	0x8cb2


0x8e50:	mov	edx, 0xc
0x8e55:	mov	ebx, 0x66
0x8e5a:	jmp	0x8cc4


0x8e60:	mov	edx, 0xb
0x8e65:	mov	ebx, 0x76
0x8e6a:	jmp	0x8cc4


0x8e70:	mov	edx, 0xa
0x8e75:	mov	ebx, 0x6e
0x8e7a:	jmp	0x8cb2


0x8f10:	xor	r10d, r10d
0x8f13:	cmp	byte ptr [rsp + 0xd], 0
0x8f18:	jne	0x8d0e


0x8f30:	mov	edx, 0xc
0x8f35:	xor	r10d, r10d
0x8f38:	mov	ebx, 0x66
0x8f3d:	jmp	0x8cc4


0x8f48:	mov	edx, 0xa
0x8f4d:	xor	r10d, r10d
0x8f50:	mov	ebx, 0x6e
0x8f55:	jmp	0x8cb2


0x8f60:	mov	ebx, 0x61
0x8f65:	jmp	0x8d30


0x8f70:	xor	r10d, r10d
0x8f73:	cmp	dword ptr [rsp + 8], 2
0x8f78:	sete	dl
0x8f7b:	cmp	byte ptr [rsp + 0xf], 0
0x8f80:	jne	0x9b1a


0x9010:	cmp	dword ptr [rsp + 8], 2
0x9015:	mov	r12d, r10d
0x9018:	sete	dl
0x901b:	xor	r10d, r10d
0x901e:	xor	eax, eax
0x9020:	jmp	0x8bb8


0x9028:	cmp	dword ptr [rsp + 8], 2
0x902d:	sete	dl
0x9030:	xor	r10d, r10d
0x9033:	jmp	0x8df8


0x9040:	cmp	dword ptr [rsp + 8], 2
0x9045:	sete	dl
0x9048:	xor	r10d, r10d
0x904b:	xor	r12d, r12d
0x904e:	jmp	0x8e01


0x9058:	cmp	dword ptr [rsp + 8], 2
0x905d:	mov	r12d, r10d
0x9060:	mov	ebx, 0x20
0x9065:	sete	dl
0x9068:	xor	r10d, r10d
0x906b:	jmp	0x8e01


0x9088:	mov	ebx, 0x76
0x908d:	jmp	0x8d30


0x9098:	mov	edx, 9
0x909d:	xor	r10d, r10d
0x90a0:	mov	ebx, 0x74
0x90a5:	jmp	0x8cb2


0x90b0:	mov	ebx, 0x62
0x90b5:	jmp	0x8d30


0x9650:	test	ebx, ebx
0x9652:	jne	0x9a4d


0xb420:	mov	r8d, 5
0xb426:	xor	r9d, r9d
0xb429:	mov	rax, rbx
0xb42c:	mul	rsi
0xb42f:	mov	rbx, rax
0xb432:	jo	0xb52f


0xe998:	xor	r11d, r11d
0xe99b:	cmp	eax, 7
0xe99e:	setg	r11b
0xe9a2:	add	r11d, 0xd
0xe9a6:	jmp	0xe4a8


0xe9f8:	xor	r11d, r11d
0xe9fb:	cmp	eax, 7
0xe9fe:	setg	r11b
0xea02:	add	r11d, 0xf
0xea06:	jmp	0xe4a8


0xea90:	mov	r11d, 0x11
0xea96:	jmp	0xe4a8


0x271f:	nop	


0x2766:	nop	word ptr cs:[rax + rax]


0x27a2:	nop	word ptr [rax + rax]


0x2805:	nop	dword ptr [rax]


0x2867:	nop	word ptr [rax + rax]


0x287c:	nop	dword ptr [rax]


0x289c:	nop	dword ptr [rax]


0x28ba:	nop	word ptr [rax + rax]


0x28f9:	nop	dword ptr [rax]


0x2923:	nop	dword ptr [rax + rax]


0x2934:	nop	dword ptr [rax]


0x2944:	nop	dword ptr [rax]


0x2954:	nop	dword ptr [rax]


0x2983:	nop	dword ptr [rax + rax]


0x2a57:	nop	word ptr [rax + rax]


0x2a72:	nop	word ptr [rax + rax]


0x2e7e:	nop	


0x2fa9:	nop	dword ptr [rax]


0x32d5:	nop	dword ptr [rax]


0x3bf6:	nop	word ptr cs:[rax + rax]


0x3c47:	nop	word ptr [rax + rax]


0x3c91:	nop	dword ptr [rax]


0x3cb2:	nop	word ptr [rax + rax]


0x3d8f:	nop	


0x3d99:	nop	dword ptr [rax]


0x3e8a:	nop	word ptr [rax + rax]


0x3eaa:	nop	word ptr [rax + rax]


0x3ee8:	nop	dword ptr [rax + rax]


0x3f66:	nop	word ptr cs:[rax + rax]


0x408e:	nop	


0x40a1:	nop	dword ptr [rax]


0x4145:	nop	dword ptr [rax]


0x416d:	nop	dword ptr [rax]


0x42bc:	nop	dword ptr [rax]


0x43d5:	nop	dword ptr [rax]


0x43ef:	nop	


0x472d:	nop	dword ptr [rax]


0x47af:	nop	


0x4811:	nop	dword ptr [rax]


0x482a:	nop	word ptr [rax + rax]


0x4863:	nop	dword ptr [rax + rax]


0x487d:	nop	dword ptr [rax]


0x4896:	nop	word ptr cs:[rax + rax]


0x48a8:	nop	dword ptr [rax + rax]


0x48ba:	nop	word ptr [rax + rax]


0x48cd:	nop	dword ptr [rax]


0x4914:	nop	dword ptr [rax]


0x49eb:	nop	dword ptr [rax + rax]


0x4a0f:	nop	


0x4a6e:	nop	


0x4a7e:	nop	


0x4b6f:	nop	


0x52b7:	nop	word ptr [rax + rax]


0x531d:	nop	dword ptr [rax]


0x532b:	nop	dword ptr [rax + rax]


0x55a9:	nop	dword ptr [rax]


0x55ba:	nop	word ptr [rax + rax]


0x567a:	nop	word ptr [rax + rax]


0x56bc:	nop	dword ptr [rax]


0x5807:	nop	word ptr [rax + rax]


0x5814:	nop	dword ptr [rax]


0x5831:	nop	dword ptr [rax]


0x595e:	nop	


0x598c:	nop	dword ptr [rax]


0x5a2c:	nop	dword ptr [rax]


0x5a3d:	nop	dword ptr [rax]


0x5a6f:	nop	


0x5ae7:	nop	word ptr [rax + rax]


0x5af8:	nop	dword ptr [rax + rax]


0x5c5a:	nop	word ptr [rax + rax]


0x5e9e:	nop	


0x5ebd:	nop	dword ptr [rax]


0x5f3b:	nop	dword ptr [rax + rax]


0x5f57:	nop	word ptr [rax + rax]


0x5fac:	nop	dword ptr [rax]


0x5fce:	nop	


0x6047:	nop	word ptr [rax + rax]


0x605b:	nop	dword ptr [rax + rax]


0x60f1:	nop	dword ptr [rax]


0x612e:	nop	


0x621b:	nop	dword ptr [rax + rax]


0x627a:	nop	word ptr [rax + rax]


0x62b9:	nop	dword ptr [rax]


0x62c9:	nop	dword ptr [rax]


0x634e:	nop	


0x63a1:	nop	dword ptr [rax]


0x646c:	nop	dword ptr [rax]


0x647a:	nop	word ptr [rax + rax]


0x64de:	nop	


0x64f4:	nop	dword ptr [rax]


0x6547:	nop	word ptr [rax + rax]


0x65a7:	nop	word ptr [rax + rax]


0x65c4:	nop	dword ptr [rax]


0x667b:	nop	dword ptr [rax + rax]


0x66ec:	nop	dword ptr [rax]


0x6717:	nop	word ptr [rax + rax]


0x674b:	nop	dword ptr [rax + rax]


0x67a3:	nop	dword ptr [rax + rax]


0x67c4:	nop	dword ptr [rax]


0x67e2:	nop	word ptr [rax + rax]


0x682a:	nop	word ptr [rax + rax]


0x685b:	nop	dword ptr [rax + rax]


0x689f:	nop	


0x68e9:	nop	dword ptr [rax]


0x6a2f:	nop	


0x6a4c:	nop	dword ptr [rax]


0x6aaf:	nop	


0x6ad6:	nop	word ptr cs:[rax + rax]


0x6b25:	nop	dword ptr [rax]


0x6bb1:	nop	dword ptr [rax]


0x6bc6:	nop	word ptr cs:[rax + rax]


0x6bf8:	nop	dword ptr [rax + rax]


0x6c09:	nop	dword ptr [rax]


0x6c36:	nop	word ptr cs:[rax + rax]


0x6def:	nop	


0x6e11:	nop	dword ptr [rax]


0x6e36:	nop	word ptr cs:[rax + rax]


0x6e4a:	nop	word ptr [rax + rax]


0x6e57:	nop	word ptr [rax + rax]


0x6f1b:	nop	dword ptr [rax + rax]


0x6f9e:	nop	


0x6fe8:	nop	dword ptr [rax + rax]


0x7092:	nop	word ptr [rax + rax]


0x70cd:	nop	dword ptr [rax]


0x70ee:	nop	


0x710e:	nop	


0x7186:	nop	word ptr cs:[rax + rax]


0x71ff:	nop	


0x72c5:	nop	dword ptr [rax]


0x72e6:	nop	word ptr cs:[rax + rax]


0x730e:	nop	


0x732e:	nop	


0x734f:	nop	


0x735a:	nop	word ptr [rax + rax]


0x737e:	nop	


0x73fe:	nop	


0x742e:	nop	


0x74f4:	nop	dword ptr [rax]


0x74fc:	nop	dword ptr [rax]


0x7538:	nop	dword ptr [rax + rax]


0x768e:	nop	


0x76ac:	nop	dword ptr [rax]


0x7763:	nop	dword ptr [rax + rax]


0x77e4:	nop	dword ptr [rax]


0x7842:	nop	word ptr [rax + rax]


0x789b:	nop	dword ptr [rax + rax]


0x78a4:	nop	dword ptr [rax]


0x798b:	nop	dword ptr [rax + rax]


0x79b2:	nop	word ptr [rax + rax]


0x7a12:	nop	word ptr [rax + rax]


0x7a94:	nop	dword ptr [rax]


0x7ab4:	nop	dword ptr [rax]


0x7ad8:	nop	dword ptr [rax + rax]


0x7af8:	nop	dword ptr [rax + rax]


0x7bbb:	nop	dword ptr [rax + rax]


0x7bfb:	nop	dword ptr [rax + rax]


0x7c37:	nop	word ptr [rax + rax]


0x7cd4:	nop	dword ptr [rax]


0x7d06:	nop	word ptr cs:[rax + rax]


0x7d34:	nop	dword ptr [rax]


0x7d48:	nop	dword ptr [rax + rax]


0x7d5c:	nop	dword ptr [rax]


0x7d7e:	nop	


0x7da4:	nop	dword ptr [rax]


0x7e98:	nop	dword ptr [rax + rax]


0x7ff4:	nop	dword ptr [rax]


0x802c:	nop	dword ptr [rax]


0x8052:	nop	word ptr [rax + rax]


0x8099:	nop	dword ptr [rax]


0x80f8:	nop	dword ptr [rax + rax]


0x8112:	nop	word ptr [rax + rax]


0x825e:	nop	


0x82aa:	nop	word ptr [rax + rax]


0x82f6:	nop	word ptr cs:[rax + rax]


0x8335:	nop	dword ptr [rax]


0x833f:	nop	


0x8387:	nop	word ptr [rax + rax]


0x847f:	nop	


0x8518:	nop	dword ptr [rax + rax]


0x85ee:	nop	


0x85fa:	nop	word ptr [rax + rax]


0x865f:	nop	


0x869b:	nop	dword ptr [rax + rax]


0x8721:	nop	dword ptr [rax]


0x8733:	nop	dword ptr [rax + rax]


0x875e:	nop	


0x8772:	nop	word ptr [rax + rax]


0x87bb:	nop	dword ptr [rax + rax]


0x88dc:	nop	dword ptr [rax]


0x892d:	nop	dword ptr [rax]


0x8b58:	nop	dword ptr [rax + rax]


0x8c47:	nop	word ptr [rax + rax]


0x8c7e:	nop	


0x8ca1:	nop	dword ptr [rax]


0x8ce2:	nop	word ptr [rax + rax]


0x8cf4:	nop	dword ptr [rax]


0x8d98:	nop	dword ptr [rax + rax]


0x8dc1:	nop	dword ptr [rax]


0x8dd7:	nop	word ptr [rax + rax]


0x8def:	nop	


0x8e1e:	nop	


0x8e2d:	nop	dword ptr [rax]


0x8e3f:	nop	


0x8e4f:	nop	


0x8e5f:	nop	


0x8e6f:	nop	


0x8e7f:	nop	


0x8eec:	nop	dword ptr [rax]


0x8f0c:	nop	dword ptr [rax]


0x8f1e:	nop	


0x8f2f:	nop	


0x8f42:	nop	word ptr [rax + rax]


0x8f5a:	nop	word ptr [rax + rax]


0x8f6a:	nop	word ptr [rax + rax]


0x900b:	nop	dword ptr [rax + rax]


0x9025:	nop	dword ptr [rax]


0x9038:	nop	dword ptr [rax + rax]


0x9053:	nop	dword ptr [rax + rax]


0x9082:	nop	word ptr [rax + rax]


0x9092:	nop	word ptr [rax + rax]


0x90aa:	nop	word ptr [rax + rax]


0x90ba:	nop	word ptr [rax + rax]


0x90c8:	nop	dword ptr [rax + rax]


0x90ef:	nop	


0x9189:	nop	dword ptr [rax]


0x91d2:	nop	word ptr [rax + rax]


0x91f8:	nop	dword ptr [rax + rax]


0x9211:	nop	dword ptr [rax]


0x9232:	nop	word ptr [rax + rax]


0x9398:	nop	dword ptr [rax + rax]


0x94ab:	nop	dword ptr [rax + rax]


0x94ce:	nop	


0x9595:	nop	dword ptr [rax]


0x964d:	nop	dword ptr [rax]


0x9856:	nop	word ptr cs:[rax + rax]


0x98e9:	nop	dword ptr [rax]


0x995d:	nop	dword ptr [rax]


0x9a3d:	nop	dword ptr [rax]


0x9d4b:	nop	dword ptr [rax + rax]


0xa604:	nop	dword ptr [rax]


0xa627:	nop	word ptr [rax + rax]


0xa6ba:	nop	word ptr [rax + rax]


0xa74b:	nop	dword ptr [rax + rax]


0xa77d:	nop	dword ptr [rax]


0xa856:	nop	word ptr cs:[rax + rax]


0xa8e5:	nop	dword ptr [rax]


0xa906:	nop	word ptr cs:[rax + rax]


0xa965:	nop	dword ptr [rax]


0xa9a1:	nop	dword ptr [rax]


0xa9e8:	nop	dword ptr [rax + rax]


0xaa37:	nop	word ptr [rax + rax]


0xaa94:	nop	dword ptr [rax]


0xaac2:	nop	word ptr [rax + rax]


0xab76:	nop	word ptr cs:[rax + rax]


0xabd9:	nop	dword ptr [rax]


0xae52:	nop	word ptr [rax + rax]


0xaed9:	nop	dword ptr [rax]


0xaf04:	nop	dword ptr [rax]


0xaf5d:	nop	dword ptr [rax]


0xb077:	nop	word ptr [rax + rax]


0xb1a6:	nop	word ptr cs:[rax + rax]


0xb203:	nop	dword ptr [rax + rax]


0xb212:	nop	word ptr [rax + rax]


0xb242:	nop	word ptr [rax + rax]


0xb24c:	nop	dword ptr [rax]


0xb2eb:	nop	dword ptr [rax + rax]


0xb41c:	nop	dword ptr [rax]


0xb4a3:	nop	dword ptr [rax + rax]


0xb638:	nop	dword ptr [rax + rax]


0xb70e:	nop	


0xb791:	nop	dword ptr [rax]


0xb817:	nop	word ptr [rax + rax]


0xb871:	nop	dword ptr [rax]


0xb9ed:	nop	dword ptr [rax]


0xba7a:	nop	word ptr [rax + rax]


0xbb64:	nop	dword ptr [rax]


0xbbcc:	nop	dword ptr [rax]


0xbec8:	nop	dword ptr [rax + rax]


0xbf24:	nop	dword ptr [rax]


0xc06f:	nop	


0xc09a:	nop	word ptr [rax + rax]


0xc0df:	nop	


0xc34a:	nop	word ptr [rax + rax]


0xc371:	nop	dword ptr [rax]


0xc39e:	nop	


0xc3ec:	nop	dword ptr [rax]


0xc438:	nop	dword ptr [rax + rax]


0xc58d:	nop	dword ptr [rax]


0xc5a1:	nop	dword ptr [rax]


0xc5be:	nop	


0xc5c8:	nop	dword ptr [rax + rax]


0xc636:	nop	word ptr cs:[rax + rax]


0xc6c3:	nop	dword ptr [rax + rax]


0xc6f7:	nop	word ptr [rax + rax]


0xc76d:	nop	dword ptr [rax]


0xc7df:	nop	


0xc864:	nop	dword ptr [rax]


0xc893:	nop	dword ptr [rax + rax]


0xc93f:	nop	


0xc9a4:	nop	dword ptr [rax]


0xc9c1:	nop	dword ptr [rax]


0xc9d2:	nop	word ptr [rax + rax]


0xca34:	nop	dword ptr [rax]


0xca9a:	nop	word ptr [rax + rax]


0xcaec:	nop	dword ptr [rax]


0xcb26:	nop	word ptr cs:[rax + rax]


0xcbc5:	nop	dword ptr [rax]


0xcc23:	nop	dword ptr [rax + rax]


0xcc4f:	nop	


0xcea4:	nop	dword ptr [rax]


0xced3:	nop	dword ptr [rax + rax]


0xd1fd:	nop	dword ptr [rax]


0xd332:	nop	word ptr [rax + rax]


0xd45f:	nop	


0xd4e2:	nop	word ptr [rax + rax]


0xd563:	nop	dword ptr [rax + rax]


0xd58f:	nop	


0xd5a4:	nop	dword ptr [rax]


0xd5d4:	nop	dword ptr [rax]


0xd626:	nop	word ptr cs:[rax + rax]


0xd65c:	nop	dword ptr [rax]


0xd68c:	nop	dword ptr [rax]


0xd6cb:	nop	dword ptr [rax + rax]


0xd6e1:	nop	dword ptr [rax]


0xd6f5:	nop	dword ptr [rax]


0xd701:	nop	dword ptr [rax]


0xd759:	nop	dword ptr [rax]


0xd779:	nop	dword ptr [rax]


0xd7a2:	nop	word ptr [rax + rax]


0xd7fd:	nop	dword ptr [rax]


0xd80f:	nop	


0xd842:	nop	word ptr [rax + rax]


0xd8c8:	nop	dword ptr [rax + rax]


0xd8d8:	nop	dword ptr [rax + rax]


0xd90d:	nop	dword ptr [rax]


0xd94a:	nop	word ptr [rax + rax]


0xd963:	nop	dword ptr [rax + rax]


0xd97a:	nop	word ptr [rax + rax]


0xd9a9:	nop	dword ptr [rax]


0xd9f8:	nop	dword ptr [rax + rax]


0xda0c:	nop	dword ptr [rax]


0xda1b:	nop	dword ptr [rax + rax]


0xda2b:	nop	dword ptr [rax + rax]


0xda3c:	nop	dword ptr [rax]


0xda88:	nop	dword ptr [rax + rax]


0xda98:	nop	dword ptr [rax + rax]


0xdaaf:	nop	


0xdac6:	nop	word ptr cs:[rax + rax]


0xdaea:	nop	word ptr [rax + rax]


0xdb63:	nop	dword ptr [rax + rax]


0xdb78:	nop	dword ptr [rax + rax]


0xdbcb:	nop	dword ptr [rax + rax]


0xdd7d:	nop	dword ptr [rax]


0xde6b:	nop	dword ptr [rax + rax]


0xde96:	nop	word ptr cs:[rax + rax]


0xdecf:	nop	


0xdf19:	nop	dword ptr [rax]


0xdf3b:	nop	dword ptr [rax + rax]


0xdfe1:	nop	dword ptr [rax]


0xe088:	nop	dword ptr [rax + rax]


0xe2be:	nop	


0xe301:	nop	dword ptr [rax]


0xe367:	nop	word ptr [rax + rax]


0xe3b2:	nop	word ptr [rax + rax]


0xe3c8:	nop	dword ptr [rax + rax]


0xe3d8:	nop	dword ptr [rax + rax]


0xe3e8:	nop	dword ptr [rax + rax]


0xe3f8:	nop	dword ptr [rax + rax]


0xe427:	nop	word ptr [rax + rax]


0xe44e:	nop	


0xe46d:	nop	dword ptr [rax]


0xe475:	nop	dword ptr [rax]


0xe4d6:	nop	word ptr cs:[rax + rax]


0xe6a6:	nop	word ptr cs:[rax + rax]


0xe75c:	nop	dword ptr [rax]


0xe83d:	nop	dword ptr [rax]


0xe889:	nop	dword ptr [rax]


0xe992:	nop	word ptr [rax + rax]


0xe9f5:	nop	dword ptr [rax]


0xea86:	nop	word ptr cs:[rax + rax]


0xeade:	nop	


0xeeeb:	nop	dword ptr [rax + rax]


