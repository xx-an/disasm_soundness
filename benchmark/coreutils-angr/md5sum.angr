0x6e10:	sub	rsp, 8
0x6e14:	add	rsp, 8
0x6e18:	ret	


0x6e00:	mov	rdx, qword ptr [rip + 0x203201]
0x6e07:	xor	esi, esi
0x6e09:	jmp	0x1870


0x6df0:	ret	


0x6d80:	push	r15
0x6d82:	push	r14
0x6d84:	mov	r15, rdx
0x6d87:	push	r13
0x6d89:	push	r12
0x6d8b:	lea	r12, [rip + 0x202c7e]
0x6d92:	push	rbp
0x6d93:	lea	rbp, [rip + 0x202c7e]
0x6d9a:	push	rbx
0x6d9b:	mov	r13d, edi
0x6d9e:	mov	r14, rsi
0x6da1:	sub	rbp, r12
0x6da4:	sub	rsp, 8
0x6da8:	sar	rbp, 3
0x6dac:	call	0x1580


0x6d40:	sub	rsp, 8
0x6d44:	mov	edi, 0xe
0x6d49:	call	0x17b0


0x6ce0:	sub	rsp, 8
0x6ce4:	xor	esi, esi
0x6ce6:	call	0x1800


0x6c60:	push	r12
0x6c62:	push	rbp
0x6c63:	mov	rbp, rdi
0x6c66:	push	rbx
0x6c67:	call	0x1600


0x6bd0:	push	r13
0x6bd2:	push	r12
0x6bd4:	mov	r13, rsi
0x6bd7:	push	rbp
0x6bd8:	push	rbx
0x6bd9:	mov	rbx, rdi
0x6bdc:	mov	r12, rdx
0x6bdf:	sub	rsp, 0x18
0x6be3:	mov	rax, qword ptr fs:[0x28]
0x6bec:	mov	qword ptr [rsp + 8], rax
0x6bf1:	xor	eax, eax
0x6bf3:	lea	rax, [rsp + 4]
0x6bf8:	test	rdi, rdi
0x6bfb:	cmove	rbx, rax
0x6bff:	mov	rdi, rbx
0x6c02:	call	0x16b0


0x6b70:	mov	rax, qword ptr [rdi + 8]
0x6b74:	cmp	qword ptr [rdi + 0x10], rax
0x6b78:	je	0x6b80


0x6b30:	test	rdi, rdi
0x6b33:	push	rbx
0x6b34:	mov	rbx, rdi
0x6b37:	je	0x6b4a


0x68b0:	push	r12
0x68b2:	push	rbp
0x68b3:	mov	ebp, edi
0x68b5:	push	rbx
0x68b6:	sub	rsp, 0x50
0x68ba:	mov	rax, qword ptr fs:[0x28]
0x68c3:	mov	qword ptr [rsp + 0x18], rax
0x68c8:	xor	eax, eax
0x68ca:	lea	rax, [rsp + 0x70]
0x68cf:	test	esi, esi
0x68d1:	mov	qword ptr [rsp + 0x30], rdx
0x68d6:	mov	qword ptr [rsp + 0x38], rcx
0x68db:	mov	qword ptr [rsp + 0x40], r8
0x68e0:	mov	qword ptr [rsp + 8], rax
0x68e5:	lea	rax, [rsp + 0x20]
0x68ea:	mov	qword ptr [rsp + 0x48], r9
0x68ef:	mov	dword ptr [rsp], 0x10
0x68f6:	mov	qword ptr [rsp + 0x10], rax
0x68fb:	je	0x6b02


0x6830:	push	r12
0x6832:	push	rbp
0x6833:	push	rbx
0x6834:	mov	rbx, rdi
0x6837:	call	0x1780


0x67f0:	lea	rsi, [rip + 0x1ad8]
0x67f7:	sub	rsp, 8
0x67fb:	mov	edx, 5
0x6800:	xor	edi, edi
0x6802:	call	0x1660


0x67d0:	push	rbx
0x67d1:	mov	rbx, rdi
0x67d4:	call	0x1680


0x67a0:	push	rbp
0x67a1:	push	rbx
0x67a2:	mov	rbp, rdi
0x67a5:	mov	rdi, rsi
0x67a8:	mov	rbx, rsi
0x67ab:	sub	rsp, 8
0x67af:	call	0x65a0


0x6770:	mov	rax, rdi
0x6773:	sub	rsp, 8
0x6777:	mul	rsi
0x677a:	seto	dl
0x677d:	test	rax, rax
0x6780:	js	0x6799


0x6750:	push	rbx
0x6751:	mov	rbx, rdi
0x6754:	call	0x65a0


0x6700:	test	rdi, rdi
0x6703:	mov	rax, qword ptr [rsi]
0x6706:	je	0x6730


0x6670:	test	rdi, rdi
0x6673:	mov	r9, rdx
0x6676:	mov	rcx, qword ptr [rsi]
0x6679:	je	0x66b0


0x6640:	mov	rax, rsi
0x6643:	mul	rdx
0x6646:	mov	rsi, rax
0x6649:	seto	al
0x664c:	test	rsi, rsi
0x664f:	js	0x665b


0x6600:	test	rsi, rsi
0x6603:	push	rbx
0x6604:	mov	rbx, rsi
0x6607:	jne	0x660e


0x65f0:	jmp	0x65a0


0x65c0:	mov	rax, rdi
0x65c3:	mul	rsi
0x65c6:	mov	rdi, rax
0x65c9:	seto	al
0x65cc:	test	rdi, rdi
0x65cf:	js	0x65db


0x65a0:	push	rbx
0x65a1:	mov	rbx, rdi
0x65a4:	call	0x1790


0x6520:	push	rbx
0x6521:	lea	rsi, [rip + 0x1a9a]
0x6528:	mov	edx, 5
0x652d:	xor	edi, edi
0x652f:	call	0x1660


0x6440:	push	rbp
0x6441:	push	rbx
0x6442:	mov	r10d, 0x20
0x6448:	xor	r11d, r11d
0x644b:	sub	rsp, 0xb8
0x6452:	mov	rax, qword ptr fs:[0x28]
0x645b:	mov	qword ptr [rsp + 0x78], rax
0x6460:	xor	eax, eax
0x6462:	lea	rax, [rsp + 0xd0]
0x646a:	mov	qword ptr [rsp + 0xa0], r8
0x6472:	lea	rbx, [rsp + 0xd0]
0x647a:	lea	r8, [rsp + 0x20]
0x647f:	mov	qword ptr [rsp + 0xa8], r9
0x6487:	mov	dword ptr [rsp + 8], 0x20
0x648f:	mov	qword ptr [rsp + 0x10], rax
0x6494:	lea	rax, [rsp + 0x80]
0x649c:	xor	r9d, r9d
0x649f:	mov	qword ptr [rsp + 0x18], rax
0x64a4:	mov	rbp, rax
0x64a7:	nop	word ptr [rax + rax]
0x64b0:	cmp	r10d, 0x2f
0x64b4:	ja	0x650c


0x63c0:	sub	rsp, 0x68
0x63c4:	mov	r10, r8
0x63c7:	xor	r9d, r9d
0x63ca:	mov	rax, qword ptr fs:[0x28]
0x63d3:	mov	qword ptr [rsp + 0x58], rax
0x63d8:	xor	eax, eax
0x63da:	mov	r8, rsp
0x63dd:	nop	dword ptr [rax]
0x63e0:	mov	eax, dword ptr [r10]
0x63e3:	cmp	eax, 0x2f
0x63e6:	ja	0x642a


0x63a0:	xor	r9d, r9d
0x63a3:	cmp	qword ptr [r8], 0
0x63a7:	je	0x63bb


0x5f80:	push	r15
0x5f82:	push	r14
0x5f84:	push	r13
0x5f86:	push	r12
0x5f88:	mov	r12, r9
0x5f8b:	push	rbp
0x5f8c:	push	rbx
0x5f8d:	mov	rbp, rdi
0x5f90:	mov	rbx, r8
0x5f93:	sub	rsp, 0x28
0x5f97:	test	rsi, rsi
0x5f9a:	je	0x60b8


0x5f70:	mov	edx, 3
0x5f75:	xor	esi, esi
0x5f77:	xor	eax, eax
0x5f79:	jmp	0x68b0


0x5f50:	lea	rcx, [rip + 0x2040e9]
0x5f57:	mov	rsi, rdi
0x5f5a:	mov	rdx, -1
0x5f61:	xor	edi, edi
0x5f63:	jmp	0x5610


0x5f30:	lea	rcx, [rip + 0x204109]
0x5f37:	mov	rdx, -1
0x5f3e:	jmp	0x5610


0x5f10:	lea	rcx, [rip + 0x204129]
0x5f17:	mov	rdx, rsi
0x5f1a:	mov	rsi, rdi
0x5f1d:	xor	edi, edi
0x5f1f:	jmp	0x5610


0x5f00:	lea	rcx, [rip + 0x204139]
0x5f07:	jmp	0x5610


0x5ee0:	mov	r8, rcx
0x5ee3:	mov	rcx, rdx
0x5ee6:	mov	rdx, rsi
0x5ee9:	mov	rsi, rdi
0x5eec:	xor	edi, edi
0x5eee:	jmp	0x5e10


0x5ec0:	mov	rcx, rdx
0x5ec3:	mov	r8, -1
0x5eca:	mov	rdx, rsi
0x5ecd:	mov	rsi, rdi
0x5ed0:	xor	edi, edi
0x5ed2:	jmp	0x5e10


0x5eb0:	mov	r8, -1
0x5eb7:	jmp	0x5e10


0x5e10:	sub	rsp, 0x48
0x5e14:	mov	r9, rcx
0x5e17:	mov	rcx, qword ptr [rip + 0x204452]
0x5e1e:	movdqa	xmm0, xmmword ptr [rip + 0x20441a]
0x5e26:	mov	rax, qword ptr fs:[0x28]
0x5e2f:	mov	qword ptr [rsp + 0x38], rax
0x5e34:	xor	eax, eax
0x5e36:	movaps	xmmword ptr [rsp], xmm0
0x5e3a:	test	rsi, rsi
0x5e3d:	mov	qword ptr [rsp + 0x30], rcx
0x5e42:	mov	dword ptr [rsp], 0xa
0x5e49:	movdqa	xmm0, xmmword ptr [rip + 0x2043ff]
0x5e51:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x5e56:	movdqa	xmm0, xmmword ptr [rip + 0x204402]
0x5e5e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x5e63:	je	0x5e97


0x5d80:	sub	rsp, 0x48
0x5d84:	mov	rax, rdx
0x5d87:	mov	rdx, qword ptr fs:[0x28]
0x5d90:	mov	qword ptr [rsp + 0x38], rdx
0x5d95:	xor	edx, edx
0x5d97:	cmp	esi, 0xa
0x5d9a:	je	0x5e04


0x5d70:	mov	edx, 0x3a
0x5d75:	jmp	0x5ca0


0x5d50:	mov	edx, 0x3a
0x5d55:	mov	rsi, -1
0x5d5c:	jmp	0x5ca0


0x5d40:	movsx	edx, sil
0x5d44:	mov	rsi, -1
0x5d4b:	jmp	0x5ca0


0x5ca0:	sub	rsp, 0x48
0x5ca4:	mov	ecx, edx
0x5ca6:	mov	rax, qword ptr fs:[0x28]
0x5caf:	mov	qword ptr [rsp + 0x38], rax
0x5cb4:	xor	eax, eax
0x5cb6:	mov	rax, qword ptr [rip + 0x2045b3]
0x5cbd:	mov	r8, rsp
0x5cc0:	and	ecx, 0x1f
0x5cc3:	movdqa	xmm0, xmmword ptr [rip + 0x204575]
0x5ccb:	mov	qword ptr [rsp + 0x30], rax
0x5cd0:	mov	eax, edx
0x5cd2:	movaps	xmmword ptr [rsp], xmm0
0x5cd6:	shr	al, 5
0x5cd9:	movzx	eax, al
0x5cdc:	lea	r9, [r8 + rax*4 + 8]
0x5ce1:	movdqa	xmm0, xmmword ptr [rip + 0x204567]
0x5ce9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x5cee:	movdqa	xmm0, xmmword ptr [rip + 0x20456a]
0x5cf6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x5cfb:	mov	edx, dword ptr [r9]
0x5cfe:	mov	eax, edx
0x5d00:	shr	eax, cl
0x5d02:	not	eax
0x5d04:	and	eax, 1
0x5d07:	shl	eax, cl
0x5d09:	mov	rcx, r8
0x5d0c:	xor	eax, edx
0x5d0e:	mov	rdx, rsi
0x5d11:	mov	rsi, rdi
0x5d14:	mov	dword ptr [r9], eax
0x5d17:	xor	edi, edi
0x5d19:	call	0x5610


0x5c90:	mov	rcx, rdx
0x5c93:	mov	rdx, rsi
0x5c96:	mov	esi, edi
0x5c98:	xor	edi, edi
0x5c9a:	jmp	0x5bf0


0x5c80:	mov	rdx, rsi
0x5c83:	mov	esi, edi
0x5c85:	xor	edi, edi
0x5c87:	jmp	0x5b60


0x5bf0:	sub	rsp, 0x48
0x5bf4:	mov	rax, rdx
0x5bf7:	mov	rdx, rcx
0x5bfa:	mov	rcx, qword ptr fs:[0x28]
0x5c03:	mov	qword ptr [rsp + 0x38], rcx
0x5c08:	xor	ecx, ecx
0x5c0a:	cmp	esi, 0xa
0x5c0d:	je	0x5c70


0x5b60:	sub	rsp, 0x48
0x5b64:	mov	rax, rdx
0x5b67:	mov	rdx, qword ptr fs:[0x28]
0x5b70:	mov	qword ptr [rsp + 0x38], rdx
0x5b75:	xor	edx, edx
0x5b77:	cmp	esi, 0xa
0x5b7a:	je	0x5be4


0x5b40:	lea	rcx, [rip + 0x2046f9]
0x5b47:	mov	rdx, rsi
0x5b4a:	mov	rsi, rdi
0x5b4d:	xor	edi, edi
0x5b4f:	jmp	0x5610


0x5b20:	lea	rcx, [rip + 0x204719]
0x5b27:	mov	rsi, rdi
0x5b2a:	mov	rdx, -1
0x5b31:	xor	edi, edi
0x5b33:	jmp	0x5610


0x5b10:	lea	rcx, [rip + 0x204729]
0x5b17:	jmp	0x5610


0x5af0:	lea	rcx, [rip + 0x204749]
0x5af7:	mov	rdx, -1
0x5afe:	jmp	0x5610


0x5a50:	mov	eax, dword ptr [rip + 0x204622]
0x5a56:	push	r12
0x5a58:	mov	r12, qword ptr [rip + 0x204621]
0x5a5f:	push	rbp
0x5a60:	push	rbx
0x5a61:	cmp	eax, 1
0x5a64:	jle	0x5a91


0x5a40:	mov	rcx, rdx
0x5a43:	xor	edx, edx
0x5a45:	jmp	0x5950


0x5950:	push	r15
0x5952:	push	r14
0x5954:	lea	rax, [rip + 0x2048e5]
0x595b:	push	r13
0x595d:	push	r12
0x595f:	mov	r12, rdx
0x5962:	push	rbp
0x5963:	push	rbx
0x5964:	mov	rbx, rcx
0x5967:	mov	r14, rdi
0x596a:	mov	r15, rsi
0x596d:	sub	rsp, 0x38
0x5971:	test	rcx, rcx
0x5974:	cmove	rbx, rax
0x5978:	xor	ebp, ebp
0x597a:	call	0x15d0


0x58d0:	push	r15
0x58d2:	push	r14
0x58d4:	lea	rax, [rip + 0x204965]
0x58db:	push	r13
0x58dd:	push	r12
0x58df:	mov	r13, rdi
0x58e2:	push	rbp
0x58e3:	push	rbx
0x58e4:	mov	rbx, r8
0x58e7:	mov	r14, rsi
0x58ea:	mov	r15, rdx
0x58ed:	sub	rsp, 0x18
0x58f1:	test	r8, r8
0x58f4:	cmove	rbx, rax
0x58f8:	mov	qword ptr [rsp + 8], rcx
0x58fd:	call	0x15d0


0x58a0:	lea	rax, [rip + 0x204999]
0x58a7:	test	rdi, rdi
0x58aa:	cmove	rdi, rax
0x58ae:	test	rsi, rsi
0x58b1:	mov	dword ptr [rdi], 0xa
0x58b7:	je	0x58c7


0x5880:	lea	rax, [rip + 0x2049b9]
0x5887:	test	rdi, rdi
0x588a:	cmove	rdi, rax
0x588e:	mov	eax, dword ptr [rdi + 4]
0x5891:	mov	dword ptr [rdi + 4], esi
0x5894:	ret	


0x5840:	lea	rax, [rip + 0x2049f9]
0x5847:	test	rdi, rdi
0x584a:	mov	ecx, esi
0x584c:	cmove	rdi, rax
0x5850:	mov	eax, esi
0x5852:	and	ecx, 0x1f
0x5855:	shr	al, 5
0x5858:	movzx	eax, al
0x585b:	lea	rdi, [rdi + rax*4 + 8]
0x5860:	mov	esi, dword ptr [rdi]
0x5862:	mov	eax, esi
0x5864:	shr	eax, cl
0x5866:	xor	edx, eax
0x5868:	and	eax, 1
0x586b:	and	edx, 1
0x586e:	shl	edx, cl
0x5870:	xor	edx, esi
0x5872:	mov	dword ptr [rdi], edx
0x5874:	ret	


0x5820:	lea	rax, [rip + 0x204a19]
0x5827:	test	rdi, rdi
0x582a:	cmove	rdi, rax
0x582e:	mov	dword ptr [rdi], esi
0x5830:	ret	


0x5800:	lea	rax, [rip + 0x204a39]
0x5807:	test	rdi, rdi
0x580a:	cmove	rdi, rax
0x580e:	mov	eax, dword ptr [rdi]
0x5810:	ret	


0x57c0:	push	r12
0x57c2:	push	rbp
0x57c3:	push	rbx
0x57c4:	mov	rbx, rdi
0x57c7:	call	0x15d0


0x5610:	push	r15
0x5612:	push	r14
0x5614:	movsxd	r15, edi
0x5617:	push	r13
0x5619:	push	r12
0x561b:	mov	r14, rdx
0x561e:	push	rbp
0x561f:	push	rbx
0x5620:	mov	rbp, rcx
0x5623:	sub	rsp, 0x28
0x5627:	mov	qword ptr [rsp + 8], rsi
0x562c:	call	0x15d0


0x43d0:	push	r15
0x43d2:	push	r14
0x43d4:	mov	r15d, r8d
0x43d7:	push	r13
0x43d9:	push	r12
0x43db:	mov	r14, rdi
0x43de:	push	rbp
0x43df:	push	rbx
0x43e0:	mov	ebx, r9d
0x43e3:	mov	r13, rsi
0x43e6:	mov	rbp, rcx
0x43e9:	and	ebx, 2
0x43ec:	sub	rsp, 0xb8
0x43f3:	mov	rax, qword ptr [rsp + 0xf0]
0x43fb:	mov	qword ptr [rsp + 0x10], rdx
0x4400:	mov	dword ptr [rsp + 8], r8d
0x4405:	mov	dword ptr [rsp + 0x78], r9d
0x440a:	mov	qword ptr [rsp + 0x20], rax
0x440f:	mov	rax, qword ptr [rsp + 0xf8]
0x4417:	mov	qword ptr [rsp + 0x68], rax
0x441c:	mov	rax, qword ptr [rsp + 0x100]
0x4424:	mov	qword ptr [rsp + 0x60], rax
0x4429:	mov	rax, qword ptr fs:[0x28]
0x4432:	mov	qword ptr [rsp + 0xa8], rax
0x443a:	xor	eax, eax
0x443c:	call	0x1670


0x42e0:	push	rbp
0x42e1:	push	rbx
0x42e2:	mov	rbp, rdi
0x42e5:	mov	ebx, esi
0x42e7:	sub	rsp, 8
0x42eb:	call	0x6d40


0x4240:	test	rdi, rdi
0x4243:	push	rbx
0x4244:	je	0x42bd


0x41a0:	push	r12
0x41a2:	push	rbp
0x41a3:	mov	rbp, rsi
0x41a6:	push	rbx
0x41a7:	call	0x1850


0x4170:	test	rdi, rdi
0x4173:	je	0x4190


0x4160:	jmp	0x1720


0x4020:	push	r15
0x4022:	push	r14
0x4024:	mov	r14, rsi
0x4027:	push	r13
0x4029:	push	r12
0x402b:	push	rbp
0x402c:	push	rbx
0x402d:	mov	rbp, rdi
0x4030:	mov	edi, 0x8048
0x4035:	sub	rsp, 0xb8
0x403c:	mov	rax, qword ptr fs:[0x28]
0x4045:	mov	qword ptr [rsp + 0xa8], rax
0x404d:	xor	eax, eax
0x404f:	call	0x1790


0x3f90:	push	rbp
0x3f91:	push	rbx
0x3f92:	mov	rbp, rdx
0x3f95:	sub	rsp, 0xb8
0x3f9c:	mov	rax, qword ptr fs:[0x28]
0x3fa5:	mov	qword ptr [rsp + 0xa8], rax
0x3fad:	xor	eax, eax
0x3faf:	mov	rbx, rsp
0x3fb2:	movabs	rax, 0xefcdab8967452301
0x3fbc:	mov	qword ptr [rsp + 0x10], 0
0x3fc5:	mov	qword ptr [rsp], rax
0x3fc9:	mov	rdx, rbx
0x3fcc:	movabs	rax, 0x1032547698badcfe
0x3fd6:	mov	qword ptr [rsp + 8], rax
0x3fdb:	mov	dword ptr [rsp + 0x18], 0
0x3fe3:	call	0x3cb0


0x3cb0:	push	r15
0x3cb2:	push	r14
0x3cb4:	push	r13
0x3cb6:	push	r12
0x3cb8:	mov	r13, rdx
0x3cbb:	push	rbp
0x3cbc:	push	rbx
0x3cbd:	mov	r12, rsi
0x3cc0:	mov	rbx, rdi
0x3cc3:	sub	rsp, 8
0x3cc7:	mov	eax, dword ptr [rdx + 0x18]
0x3cca:	test	eax, eax
0x3ccc:	jne	0x3e00


0x3b90:	push	rbp
0x3b91:	push	rbx
0x3b92:	mov	rbx, rdi
0x3b95:	mov	eax, dword ptr [rdi + 0x18]
0x3b98:	mov	rbp, rsi
0x3b9b:	mov	edx, dword ptr [rbx + 0x14]
0x3b9e:	cmp	eax, 0x38
0x3ba1:	mov	esi, eax
0x3ba3:	sbb	r8, r8
0x3ba6:	and	r8, 0xffffffffffffffc0
0x3baa:	sub	r8, -0x80
0x3bae:	cmp	eax, 0x38
0x3bb1:	sbb	rcx, rcx
0x3bb4:	and	rcx, 0xfffffffffffffff0
0x3bb8:	add	rcx, 0x1f
0x3bbc:	cmp	eax, 0x38
0x3bbf:	sbb	rdi, rdi
0x3bc2:	xor	r9d, r9d
0x3bc5:	and	rdi, 0xfffffffffffffff0
0x3bc9:	add	rdi, 0x1e
0x3bcd:	add	esi, dword ptr [rbx + 0x10]
0x3bd0:	setb	r9b
0x3bd4:	mov	dword ptr [rbx + 0x10], esi
0x3bd7:	test	r9d, r9d
0x3bda:	je	0x3be2


0x3420:	mov	rax, rsi
0x3423:	push	r15
0x3425:	push	r14
0x3427:	and	rax, 0xfffffffffffffffc
0x342b:	push	r13
0x342d:	push	r12
0x342f:	push	rbp
0x3430:	push	rbx
0x3431:	mov	rbx, rdi
0x3434:	lea	rcx, [rbx + rax]
0x3438:	mov	eax, dword ptr [rdx]
0x343a:	mov	rdi, rdx
0x343d:	mov	r11d, dword ptr [rdx + 4]
0x3441:	mov	r10d, dword ptr [rdx + 8]
0x3445:	mov	qword ptr [rsp - 8], rdx
0x344a:	mov	qword ptr [rsp - 0x10], rcx
0x344f:	mov	dword ptr [rsp - 0x18], eax
0x3453:	mov	eax, dword ptr [rdx + 0xc]
0x3456:	mov	edx, esi
0x3458:	mov	dword ptr [rsp - 0x20], eax
0x345c:	xor	eax, eax
0x345e:	add	edx, dword ptr [rdi + 0x10]
0x3461:	setb	al
0x3464:	shr	rsi, 0x20
0x3468:	add	esi, dword ptr [rdi + 0x14]
0x346b:	mov	dword ptr [rdi + 0x10], edx
0x346e:	add	esi, eax
0x3470:	cmp	rbx, rcx
0x3473:	mov	dword ptr [rdi + 0x14], esi
0x3476:	jae	0x3b6a


0x3400:	mov	edx, dword ptr [rdi]
0x3402:	mov	rax, rsi
0x3405:	mov	dword ptr [rsi], edx
0x3407:	mov	edx, dword ptr [rdi + 4]
0x340a:	mov	dword ptr [rsi + 4], edx
0x340d:	mov	edx, dword ptr [rdi + 8]
0x3410:	mov	dword ptr [rsi + 8], edx
0x3413:	mov	edx, dword ptr [rdi + 0xc]
0x3416:	mov	dword ptr [rsi + 0xc], edx
0x3419:	ret	


0x33d0:	movabs	rax, 0xefcdab8967452301
0x33da:	mov	qword ptr [rdi + 0x10], 0
0x33e2:	mov	dword ptr [rdi + 0x18], 0
0x33e9:	mov	qword ptr [rdi], rax
0x33ec:	movabs	rax, 0x1032547698badcfe
0x33f6:	mov	qword ptr [rdi + 8], rax
0x33fa:	ret	


0x3320:	push	rbp
0x3321:	push	rbx
0x3322:	sub	rsp, 8
0x3326:	mov	rdi, qword ptr [rip + 0x206d7b]
0x332d:	call	0x6c60


0x3310:	mov	byte ptr [rip + 0x206df9], dil
0x3317:	ret	


0x3300:	mov	qword ptr [rip + 0x206e11], rdi
0x3307:	ret	


0x2ea0:	push	r13
0x2ea2:	push	r12
0x2ea4:	mov	edx, 5
0x2ea9:	push	rbp
0x2eaa:	push	rbx
0x2eab:	mov	ebp, edi
0x2ead:	sub	rsp, 0x88
0x2eb4:	mov	rbx, qword ptr [rip + 0x207265]
0x2ebb:	mov	rax, qword ptr fs:[0x28]
0x2ec4:	mov	qword ptr [rsp + 0x78], rax
0x2ec9:	xor	eax, eax
0x2ecb:	test	edi, edi
0x2ecd:	je	0x2efd


0x2d00:	push	r13
0x2d02:	push	r12
0x2d04:	mov	ecx, 2
0x2d09:	push	rbp
0x2d0a:	push	rbx
0x2d0b:	mov	rbp, rdi
0x2d0e:	lea	rdi, [rip + 0x4d6d]
0x2d15:	mov	r12, rsi
0x2d18:	mov	rsi, rbp
0x2d1b:	sub	rsp, 8
0x2d1f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2c30:	push	rbp
0x2c31:	push	rbx
0x2c32:	mov	rbx, rdi
0x2c35:	sub	rsp, 8
0x2c39:	test	sil, sil
0x2c3c:	je	0x2cd0


0x2bd0:	push	rbp
0x2bd1:	push	rbx
0x2bd2:	sub	rsp, 8
0x2bd6:	mov	rbp, qword ptr [rip + 0x20751b]
0x2bdd:	test	rbp, rbp
0x2be0:	je	0x2c20


0x2b50:	xor	edx, edx
0x2b52:	test	rsi, rsi
0x2b55:	lea	rcx, [rdi + 1]
0x2b59:	lea	r8, [rsi - 1]
0x2b5d:	je	0x2bb7


0x2b40:	push	rbp
0x2b41:	mov	rbp, rsp
0x2b44:	pop	rbp
0x2b45:	jmp	0x2ab0


0x2b00:	cmp	byte ptr [rip + 0x2075e1], 0
0x2b07:	jne	0x2b38


0x2ab0:	lea	rdi, [rip + 0x2075e9]
0x2ab7:	lea	rsi, [rip + 0x2075e2]
0x2abe:	push	rbp
0x2abf:	sub	rsi, rdi
0x2ac2:	mov	rbp, rsp
0x2ac5:	sar	rsi, 3
0x2ac9:	mov	rax, rsi
0x2acc:	shr	rax, 0x3f
0x2ad0:	add	rsi, rax
0x2ad3:	sar	rsi, 1
0x2ad6:	je	0x2af0


0x2a70:	lea	rdi, [rip + 0x207629]
0x2a77:	push	rbp
0x2a78:	lea	rax, [rip + 0x207621]
0x2a7f:	cmp	rax, rdi
0x2a82:	mov	rbp, rsp
0x2a85:	je	0x2aa0


0x2a40:	xor	ebp, ebp
0x2a42:	mov	r9, rdx
0x2a45:	pop	rsi
0x2a46:	mov	rdx, rsp
0x2a49:	and	rsp, 0xfffffffffffffff0
0x2a4d:	push	rax
0x2a4e:	push	rsp
0x2a4f:	lea	r8, [rip + 0x439a]
0x2a56:	lea	rcx, [rip + 0x4323]
0x2a5d:	lea	rdi, [rip - 0x1164]
0x2a64:	call	qword ptr [rip + 0x20755e]


0x1900:	push	r15
0x1902:	push	r14
0x1904:	push	r13
0x1906:	push	r12
0x1908:	mov	r12d, edi
0x190b:	push	rbp
0x190c:	push	rbx
0x190d:	mov	rbx, rsi
0x1910:	mov	ebp, 0xffffffff
0x1915:	sub	rsp, 0xe8
0x191c:	mov	rdi, qword ptr [rsi]
0x191f:	mov	rax, qword ptr fs:[0x28]
0x1928:	mov	qword ptr [rsp + 0xd8], rax
0x1930:	xor	eax, eax
0x1932:	call	0x4240


0x1580:	sub	rsp, 8
0x1584:	mov	rax, qword ptr [rip + 0x208a45]
0x158b:	test	rax, rax
0x158e:	je	0x1592


0x1870:	jmp	qword ptr [rip + 0x20870a]


0x17b0:	jmp	qword ptr [rip + 0x20876a]


0x1800:	jmp	qword ptr [rip + 0x208742]


0x1600:	jmp	qword ptr [rip + 0x208842]


0x16b0:	jmp	qword ptr [rip + 0x2087ea]


0x6b80:	mov	rax, qword ptr [rdi + 0x20]
0x6b84:	cmp	qword ptr [rdi + 0x28], rax
0x6b88:	jne	0x6b7a


0x6b7a:	jmp	0x1840


0x6b4a:	mov	rdi, rbx
0x6b4d:	pop	rbx
0x6b4e:	jmp	0x17a0


0x6b39:	call	0x17c0


0x6b02:	mov	rax, qword ptr [rsp + 0x10]
0x6b07:	xor	esi, esi
0x6b09:	mov	edx, dword ptr [rax + 0x10]
0x6b0c:	xor	eax, eax
0x6b0e:	call	0x1610


0x6901:	cmp	esi, 0x406
0x6907:	jne	0x6950


0x1780:	jmp	qword ptr [rip + 0x208782]


0x1660:	jmp	qword ptr [rip + 0x208812]


0x1680:	jmp	qword ptr [rip + 0x208802]


0x6799:	call	0x67f0


0x6782:	movzx	edx, dl
0x6785:	test	rdx, rdx
0x6788:	jne	0x6799


0x6730:	test	rax, rax
0x6733:	mov	edx, 0x80
0x6738:	cmove	rax, rdx
0x673c:	test	rax, rax
0x673f:	jns	0x6722


0x6708:	movabs	rdx, 0x5555555555555553
0x6712:	cmp	rax, rdx
0x6715:	ja	0x6741


0x66b0:	test	rcx, rcx
0x66b3:	je	0x66d8


0x667b:	xor	edx, edx
0x667d:	movabs	rax, 0x5555555555555554
0x6687:	div	r9
0x668a:	cmp	rax, rcx
0x668d:	jbe	0x66cb


0x665b:	sub	rsp, 8
0x665f:	call	0x67f0


0x6651:	movzx	eax, al
0x6654:	test	rax, rax
0x6657:	jne	0x665b


0x6609:	test	rdi, rdi
0x660c:	jne	0x6628


0x660e:	mov	rsi, rbx
0x6611:	call	0x17e0


0x65db:	sub	rsp, 8
0x65df:	call	0x67f0


0x65d1:	movzx	eax, al
0x65d4:	test	rax, rax
0x65d7:	jne	0x65db


0x1790:	jmp	qword ptr [rip + 0x20877a]


0x64b6:	mov	eax, r10d
0x64b9:	mov	r11d, 1
0x64bf:	add	r10d, 8
0x64c3:	add	rax, rbp
0x64c6:	mov	rax, qword ptr [rax]
0x64c9:	test	rax, rax
0x64cc:	mov	qword ptr [r8 + r9*8], rax
0x64d0:	je	0x64dc


0x650c:	mov	rax, rbx
0x650f:	add	rbx, 8
0x6513:	jmp	0x64c6


0x63e8:	mov	r11d, eax
0x63eb:	add	r11, qword ptr [r10 + 0x10]
0x63ef:	add	eax, 8
0x63f2:	mov	dword ptr [r10], eax
0x63f5:	mov	rax, qword ptr [r11]
0x63f8:	test	rax, rax
0x63fb:	mov	qword ptr [r8 + r9*8], rax
0x63ff:	je	0x640b


0x642a:	mov	r11, qword ptr [r10 + 8]
0x642e:	lea	rax, [r11 + 8]
0x6432:	mov	qword ptr [r10 + 8], rax
0x6436:	jmp	0x63f5


0x63bb:	jmp	0x5f80


0x60b8:	mov	r8, rcx
0x60bb:	mov	rcx, rdx
0x60be:	lea	rdx, [rip + 0x1eaf]
0x60c5:	mov	esi, 1
0x60ca:	xor	eax, eax
0x60cc:	call	0x18a0


0x5fa0:	mov	r8, rdx
0x5fa3:	lea	rdx, [rip + 0x1fbe]
0x5faa:	mov	r9, rcx
0x5fad:	xor	eax, eax
0x5faf:	mov	rcx, rsi
0x5fb2:	mov	esi, 1
0x5fb7:	call	0x18a0


0x5e97:	call	0x15c0


0x5e65:	test	rdx, rdx
0x5e68:	je	0x5e97


0x5e04:	call	0x15c0


0x5d9c:	mov	dword ptr [rsp], esi
0x5d9f:	mov	rcx, rsp
0x5da2:	mov	rdx, -1
0x5da9:	mov	rsi, rax
0x5dac:	mov	qword ptr [rsp + 4], 0
0x5db5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x5dbe:	mov	qword ptr [rsp + 0x14], 0
0x5dc7:	mov	qword ptr [rsp + 0x1c], 0
0x5dd0:	mov	qword ptr [rsp + 0x24], 0
0x5dd9:	mov	qword ptr [rsp + 0x2c], 0
0x5de2:	mov	dword ptr [rsp + 0x34], 0
0x5dea:	call	0x5610


0x5c70:	call	0x15c0


0x5c0f:	mov	dword ptr [rsp], esi
0x5c12:	mov	rcx, rsp
0x5c15:	mov	rsi, rax
0x5c18:	mov	qword ptr [rsp + 4], 0
0x5c21:	mov	qword ptr [rsp + 0xc], 0
0x5c2a:	mov	qword ptr [rsp + 0x14], 0
0x5c33:	mov	qword ptr [rsp + 0x1c], 0
0x5c3c:	mov	qword ptr [rsp + 0x24], 0
0x5c45:	mov	qword ptr [rsp + 0x2c], 0
0x5c4e:	mov	dword ptr [rsp + 0x34], 0
0x5c56:	call	0x5610


0x5be4:	call	0x15c0


0x5b7c:	mov	dword ptr [rsp], esi
0x5b7f:	mov	rcx, rsp
0x5b82:	mov	rdx, -1
0x5b89:	mov	rsi, rax
0x5b8c:	mov	qword ptr [rsp + 4], 0
0x5b95:	mov	qword ptr [rsp + 0xc], 0
0x5b9e:	mov	qword ptr [rsp + 0x14], 0
0x5ba7:	mov	qword ptr [rsp + 0x1c], 0
0x5bb0:	mov	qword ptr [rsp + 0x24], 0
0x5bb9:	mov	qword ptr [rsp + 0x2c], 0
0x5bc2:	mov	dword ptr [rsp + 0x34], 0
0x5bca:	call	0x5610


0x5a91:	mov	rdi, qword ptr [r12 + 8]
0x5a96:	lea	rbx, [rip + 0x2046a3]
0x5a9d:	cmp	rdi, rbx
0x5aa0:	je	0x5ab9


0x5a66:	sub	eax, 2
0x5a69:	lea	rbx, [r12 + 0x18]
0x5a6e:	shl	rax, 4
0x5a72:	lea	rbp, [r12 + rax + 0x28]
0x5a77:	nop	word ptr [rax + rax]
0x5a80:	mov	rdi, qword ptr [rbx]
0x5a83:	add	rbx, 0x10
0x5a87:	call	0x15b0


0x15d0:	jmp	qword ptr [rip + 0x20885a]


0x58c7:	sub	rsp, 8
0x58cb:	call	0x15c0


0x58b9:	test	rdx, rdx
0x58bc:	je	0x58c7


0x1670:	jmp	qword ptr [rip + 0x20880a]


0x42bd:	mov	rcx, qword ptr [rip + 0x205e1c]
0x42c4:	lea	rdi, [rip + 0x3775]
0x42cb:	mov	edx, 0x37
0x42d0:	mov	esi, 1
0x42d5:	call	0x1890


0x4246:	mov	esi, 0x2f
0x424b:	mov	rbx, rdi
0x424e:	call	0x16e0


0x1850:	jmp	qword ptr [rip + 0x20871a]


0x4190:	ret	


0x4175:	push	rbx
0x4176:	mov	ebx, esi
0x4178:	call	0x1780


0x1720:	jmp	qword ptr [rip + 0x2087b2]


0x3cd2:	cmp	r12, 0x3f
0x3cd6:	jbe	0x3de4


0x3e00:	mov	ebp, eax
0x3e02:	mov	edx, 0x80
0x3e07:	lea	r15, [r13 + 0x1c]
0x3e0b:	sub	rdx, rbp
0x3e0e:	cmp	rdx, rsi
0x3e11:	lea	rdi, [r15 + rbp]
0x3e15:	cmova	rdx, rsi
0x3e19:	mov	rsi, rbx
0x3e1c:	mov	r14, rdx
0x3e1f:	call	0x1770


0x3be2:	lea	r9d, [rsi*8]
0x3bea:	shl	edx, 3
0x3bed:	shr	esi, 0x1d
0x3bf0:	or	edx, esi
0x3bf2:	lea	rsi, [rip + 0x3e07]
0x3bf9:	mov	dword ptr [rbx + rdi*4 + 0x1c], r9d
0x3bfe:	mov	rdi, r8
0x3c01:	mov	dword ptr [rbx + rcx*4 + 0x1c], edx
0x3c05:	sub	rdi, rax
0x3c08:	lea	r9, [rbx + 0x1c]
0x3c0c:	lea	rcx, [rdi - 8]
0x3c10:	lea	rdx, [r9 + rax]
0x3c14:	cmp	rcx, 8
0x3c18:	jae	0x3c40


0x3bdc:	add	edx, 1
0x3bdf:	mov	dword ptr [rbx + 0x14], edx
0x3be2:	lea	r9d, [rsi*8]
0x3bea:	shl	edx, 3
0x3bed:	shr	esi, 0x1d
0x3bf0:	or	edx, esi
0x3bf2:	lea	rsi, [rip + 0x3e07]
0x3bf9:	mov	dword ptr [rbx + rdi*4 + 0x1c], r9d
0x3bfe:	mov	rdi, r8
0x3c01:	mov	dword ptr [rbx + rcx*4 + 0x1c], edx
0x3c05:	sub	rdi, rax
0x3c08:	lea	r9, [rbx + 0x1c]
0x3c0c:	lea	rcx, [rdi - 8]
0x3c10:	lea	rdx, [r9 + rax]
0x3c14:	cmp	rcx, 8
0x3c18:	jae	0x3c40


0x347c:	mov	r15d, r10d
0x347f:	nop	
0x3480:	mov	r14d, dword ptr [rbx]
0x3483:	mov	edi, dword ptr [rsp - 0x20]
0x3487:	mov	eax, dword ptr [rsp - 0x18]
0x348b:	mov	esi, dword ptr [rbx + 4]
0x348e:	mov	r8d, dword ptr [rbx + 0xc]
0x3492:	mov	r10d, dword ptr [rbx + 0x14]
0x3496:	mov	ebp, dword ptr [rbx + 0x18]
0x3499:	mov	r13d, dword ptr [rbx + 0x1c]
0x349d:	lea	edx, [r14 + rax - 0x28955b88]
0x34a5:	mov	eax, edi
0x34a7:	lea	ecx, [rsi + rdi - 0x173848aa]
0x34ae:	xor	eax, r15d
0x34b1:	mov	dword ptr [rsp - 0x44], esi
0x34b5:	mov	dword ptr [rsp - 0x34], r10d
0x34ba:	and	eax, r11d
0x34bd:	mov	r12d, dword ptr [rbx + 0x24]
0x34c1:	mov	dword ptr [rsp - 0x3c], r8d
0x34c6:	xor	eax, edi
0x34c8:	lea	edi, [r8 + r11 - 0x3e423112]
0x34d0:	mov	r8d, dword ptr [rbx + 0x2c]
0x34d4:	add	eax, edx
0x34d6:	mov	edx, r11d
0x34d9:	rol	eax, 7
0x34dc:	xor	edx, r15d
0x34df:	mov	dword ptr [rsp - 0x2c], r12d
0x34e4:	add	eax, r11d
0x34e7:	mov	dword ptr [rsp - 0x24], r8d
0x34ec:	and	edx, eax
0x34ee:	mov	r9d, eax
0x34f1:	xor	edx, r15d
0x34f4:	xor	r9d, r11d
0x34f7:	add	edx, ecx
0x34f9:	mov	ecx, dword ptr [rbx + 8]
0x34fc:	rol	edx, 0xc
0x34ff:	add	edx, eax
0x3501:	lea	esi, [rcx + r15 + 0x242070db]
0x3509:	mov	dword ptr [rsp - 0x40], ecx
0x350d:	mov	ecx, r9d
0x3510:	and	ecx, edx
0x3512:	mov	r9d, eax
0x3515:	xor	ecx, r11d
0x3518:	xor	r9d, edx
0x351b:	add	ecx, esi
0x351d:	mov	esi, r9d
0x3520:	mov	r9d, dword ptr [rbx + 0x10]
0x3524:	ror	ecx, 0xf
0x3527:	add	ecx, edx
0x3529:	and	esi, ecx
0x352b:	mov	dword ptr [rsp - 0x38], r9d
0x3530:	xor	esi, eax
0x3532:	add	esi, edi
0x3534:	lea	edi, [r9 + rax - 0xa83f051]
0x353c:	mov	eax, edx
0x353e:	ror	esi, 0xa
0x3541:	xor	eax, ecx
0x3543:	mov	r9d, dword ptr [rbx + 0x3c]
0x3547:	add	esi, ecx
0x3549:	and	eax, esi
0x354b:	xor	eax, edx
0x354d:	add	eax, edi
0x354f:	lea	edi, [r10 + rdx + 0x4787c62a]
0x3557:	mov	edx, ecx
0x3559:	rol	eax, 7
0x355c:	xor	edx, esi
0x355e:	mov	r10d, ebp
0x3561:	add	eax, esi
0x3563:	mov	dword ptr [rsp - 0x1c], r10d
0x3568:	and	edx, eax
0x356a:	xor	edx, ecx
0x356c:	add	edx, edi
0x356e:	lea	edi, [rbp + rcx - 0x57cfb9ed]
0x3575:	mov	ebp, esi
0x3577:	xor	ebp, eax
0x3579:	rol	edx, 0xc
0x357c:	add	edx, eax
0x357e:	mov	ecx, ebp
0x3580:	mov	ebp, eax
0x3582:	and	ecx, edx
0x3584:	xor	ebp, edx
0x3586:	xor	ecx, esi
0x3588:	add	ecx, edi
0x358a:	lea	edi, [r13 + rsi - 0x2b96aff]
0x3592:	mov	esi, ebp
0x3594:	ror	ecx, 0xf
0x3597:	mov	ebp, dword ptr [rbx + 0x20]
0x359a:	add	ecx, edx
0x359c:	and	esi, ecx
0x359e:	xor	esi, eax
0x35a0:	mov	dword ptr [rsp - 0x30], ebp
0x35a4:	add	esi, edi
0x35a6:	lea	edi, [rbp + rax + 0x698098d8]
0x35ad:	mov	eax, edx
0x35af:	ror	esi, 0xa
0x35b2:	xor	eax, ecx
0x35b4:	mov	ebp, dword ptr [rbx + 0x30]
0x35b7:	add	esi, ecx
0x35b9:	and	eax, esi


0x3b6a:	mov	rax, qword ptr [rsp - 8]
0x3b6f:	mov	ebx, dword ptr [rsp - 0x18]
0x3b73:	mov	dword ptr [rax], ebx
0x3b75:	mov	ebx, dword ptr [rsp - 0x20]
0x3b79:	mov	dword ptr [rax + 4], r11d
0x3b7d:	mov	dword ptr [rax + 8], r10d
0x3b81:	mov	dword ptr [rax + 0xc], ebx
0x3b84:	pop	rbx
0x3b85:	pop	rbp
0x3b86:	pop	r12
0x3b88:	pop	r13
0x3b8a:	pop	r14
0x3b8c:	pop	r15
0x3b8e:	ret	


0x2efd:	lea	rsi, [rip + 0x411c]
0x2f04:	xor	edi, edi
0x2f06:	call	0x1660


0x2ecf:	lea	rsi, [rip + 0x4122]
0x2ed6:	xor	edi, edi
0x2ed8:	call	0x1660


0x2d1f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2d21:	mov	byte ptr [rdx], 0
0x2d24:	seta	al
0x2d27:	sbb	al, 0
0x2d29:	test	al, al
0x2d2b:	jne	0x2dc0


0x2cd0:	mov	rsi, qword ptr [rip + 0x2073d1]
0x2cd7:	add	rsp, 8
0x2cdb:	pop	rbx
0x2cdc:	pop	rbp
0x2cdd:	jmp	0x1740


0x2c42:	movzx	esi, byte ptr [rdi]
0x2c45:	lea	rbp, [rip + 0x41d8]
0x2c4c:	test	sil, sil
0x2c4f:	jne	0x2c7a


0x2c20:	mov	rax, rdi
0x2c23:	cmp	byte ptr [rax], 0
0x2c26:	sete	al
0x2c29:	add	rsp, 8
0x2c2d:	pop	rbx
0x2c2e:	pop	rbp
0x2c2f:	ret	


0x2be2:	mov	rbx, rdi
0x2be5:	call	0x18e0


0x2bb7:	mov	rax, rdi
0x2bba:	ret	


0x2b5f:	movzx	eax, byte ptr [rdi + rdx]
0x2b63:	test	al, al
0x2b65:	je	0x2b90


0x2b09:	cmp	qword ptr [rip + 0x2074cf], 0
0x2b11:	push	rbp
0x2b12:	mov	rbp, rsp
0x2b15:	je	0x2b23


0x2b38:	ret	


0x2af0:	pop	rbp
0x2af1:	ret	


0x2ad8:	mov	rax, qword ptr [rip + 0x2074f9]
0x2adf:	test	rax, rax
0x2ae2:	je	0x2af0


0x2aa0:	pop	rbp
0x2aa1:	ret	


0x2a87:	mov	rax, qword ptr [rip + 0x207532]
0x2a8e:	test	rax, rax
0x2a91:	je	0x2aa0




0x1592:	add	rsp, 8
0x1596:	ret	


0x1590:	call	rax












0x6b8a:	cmp	qword ptr [rdi + 0x48], 0
0x6b8f:	jne	0x6b7a


0x1840:	jmp	qword ptr [rip + 0x208722]


0x17a0:	jmp	qword ptr [rip + 0x208772]


0x17c0:	jmp	qword ptr [rip + 0x208762]


0x1610:	jmp	qword ptr [rip + 0x20883a]


0x6909:	mov	rax, qword ptr [rsp + 0x10]
0x690e:	cmp	dword ptr [rip + 0x203963], 0
0x6915:	mov	dword ptr [rsp], 0x18
0x691c:	mov	r12d, dword ptr [rax + 0x10]
0x6920:	mov	edx, r12d
0x6923:	js	0x6a53


0x6950:	cmp	esi, 0xb
0x6953:	je	0x6980








0x678a:	call	0x1750


0x6741:	sub	rsp, 8
0x6745:	call	0x67f0


0x6722:	mov	qword ptr [rsi], rax
0x6725:	mov	rsi, rax
0x6728:	jmp	0x6600


0x6717:	mov	rdx, rax
0x671a:	shr	rdx, 1
0x671d:	lea	rax, [rdx + rax + 1]
0x6722:	mov	qword ptr [rsi], rax
0x6725:	mov	rsi, rax
0x6728:	jmp	0x6600


0x66d8:	xor	edx, edx
0x66da:	mov	eax, 0x80
0x66df:	xor	r8d, r8d
0x66e2:	div	r9
0x66e5:	test	rax, rax
0x66e8:	sete	r8b
0x66ec:	lea	rcx, [r8 + rax]
0x66f0:	jmp	0x66b5


0x66b5:	mov	rax, rcx
0x66b8:	mul	r9
0x66bb:	seto	dl
0x66be:	test	rax, rax
0x66c1:	movzx	edx, dl
0x66c4:	js	0x66cb


0x66cb:	sub	rsp, 8
0x66cf:	call	0x67f0


0x668f:	mov	rax, rcx
0x6692:	shr	rax, 1
0x6695:	lea	rcx, [rax + rcx + 1]
0x669a:	mov	qword ptr [rsi], rcx
0x669d:	imul	rcx, r9
0x66a1:	mov	rsi, rcx
0x66a4:	jmp	0x6600


0x6659:	jmp	0x6600


0x6628:	call	0x15b0


0x17e0:	jmp	qword ptr [rip + 0x208752]


0x65d9:	jmp	0x65a0




0x64dc:	test	r11b, r11b
0x64df:	jne	0x6505


0x64d2:	add	r9, 1
0x64d6:	cmp	r9, 0xa
0x64da:	jne	0x64b0


0x64c6:	mov	rax, qword ptr [rax]
0x64c9:	test	rax, rax
0x64cc:	mov	qword ptr [r8 + r9*8], rax
0x64d0:	je	0x64dc


0x640b:	call	0x5f80


0x6401:	add	r9, 1
0x6405:	cmp	r9, 0xa
0x6409:	jne	0x63e0


0x63f5:	mov	rax, qword ptr [r11]
0x63f8:	test	rax, rax
0x63fb:	mov	qword ptr [r8 + r9*8], rax
0x63ff:	je	0x640b


0x63b0:	add	r9, 1
0x63b4:	cmp	qword ptr [r8 + r9*8], 0
0x63b9:	jne	0x63b0


0x18a0:	jmp	qword ptr [rip + 0x2086f2]


0x15c0:	jmp	qword ptr [rip + 0x208862]


0x5e6a:	mov	qword ptr [rsp + 0x28], rsi
0x5e6f:	mov	qword ptr [rsp + 0x30], rdx
0x5e74:	mov	rcx, rsp
0x5e77:	mov	rdx, r8
0x5e7a:	mov	rsi, r9
0x5e7d:	call	0x5610


0x5ab9:	lea	rbx, [rip + 0x2045d0]
0x5ac0:	cmp	r12, rbx
0x5ac3:	je	0x5ad4


0x5aa2:	call	0x15b0


0x15b0:	jmp	qword ptr [rip + 0x20886a]




0x58be:	mov	qword ptr [rdi + 0x28], rsi
0x58c2:	mov	qword ptr [rdi + 0x30], rdx
0x58c6:	ret	




0x1890:	jmp	qword ptr [rip + 0x2086fa]


0x16e0:	jmp	qword ptr [rip + 0x2087d2]






0x3de4:	test	r12, r12
0x3de7:	jne	0x3f58


0x3cdc:	test	bl, 3
0x3cdf:	je	0x3dc8


0x1770:	jmp	qword ptr [rip + 0x20878a]


0x3c1a:	test	cl, 4
0x3c1d:	jne	0x3c90


0x3c40:	mov	rax, qword ptr [rip + 0x3db9]
0x3c47:	lea	rdi, [rdx + 8]
0x3c4b:	and	rdi, 0xfffffffffffffff8
0x3c4f:	mov	qword ptr [rdx], rax
0x3c52:	mov	rax, qword ptr [rsi + rcx - 8]
0x3c57:	mov	qword ptr [rdx + rcx - 8], rax
0x3c5c:	sub	rdx, rdi
0x3c5f:	add	rcx, rdx
0x3c62:	sub	rsi, rdx
0x3c65:	shr	rcx, 3
0x3c69:	rep movsq	qword ptr [rdi], qword ptr [rsi]


0x35bb:	xor	eax, edx
0x35bd:	add	eax, edi
0x35bf:	lea	edi, [r12 + rdx - 0x74bb0851]
0x35c7:	mov	edx, ecx
0x35c9:	rol	eax, 7
0x35cc:	xor	edx, esi
0x35ce:	mov	r12d, dword ptr [rbx + 0x38]
0x35d2:	add	eax, esi
0x35d4:	and	edx, eax
0x35d6:	xor	edx, ecx
0x35d8:	add	edx, edi
0x35da:	mov	edi, dword ptr [rbx + 0x28]
0x35dd:	rol	edx, 0xc
0x35e0:	add	edx, eax
0x35e2:	mov	dword ptr [rsp - 0x28], edi
0x35e6:	lea	edi, [rdi + rcx - 0xa44f]
0x35ed:	mov	ecx, esi
0x35ef:	xor	ecx, eax
0x35f1:	and	ecx, edx
0x35f3:	xor	ecx, esi
0x35f5:	add	ecx, edi
0x35f7:	lea	edi, [r8 + rsi - 0x76a32842]
0x35ff:	mov	esi, eax
0x3601:	ror	ecx, 0xf
0x3604:	xor	esi, edx
0x3606:	mov	r8d, dword ptr [rbx + 0x34]
0x360a:	add	ecx, edx
0x360c:	add	rbx, 0x40
0x3610:	and	esi, ecx
0x3612:	xor	esi, eax
0x3614:	add	esi, edi
0x3616:	lea	edi, [rbp + rax + 0x6b901122]
0x361d:	mov	eax, edx
0x361f:	ror	esi, 0xa
0x3622:	xor	eax, ecx
0x3624:	add	esi, ecx
0x3626:	and	eax, esi
0x3628:	xor	eax, edx
0x362a:	add	eax, edi
0x362c:	lea	edi, [r8 + rdx - 0x2678e6d]
0x3634:	mov	edx, ecx
0x3636:	rol	eax, 7
0x3639:	xor	edx, esi
0x363b:	add	eax, esi
0x363d:	and	edx, eax
0x363f:	xor	edx, ecx
0x3641:	add	edx, edi
0x3643:	lea	edi, [r12 + rcx - 0x5986bc72]
0x364b:	mov	ecx, esi
0x364d:	rol	edx, 0xc
0x3650:	xor	ecx, eax
0x3652:	add	edx, eax
0x3654:	and	ecx, edx
0x3656:	xor	ecx, esi
0x3658:	add	ecx, edi
0x365a:	lea	edi, [r9 + rsi + 0x49b40821]
0x3662:	mov	esi, eax
0x3664:	ror	ecx, 0xf
0x3667:	xor	esi, edx
0x3669:	add	ecx, edx
0x366b:	and	esi, ecx
0x366d:	xor	esi, eax
0x366f:	add	esi, edi
0x3671:	mov	edi, dword ptr [rsp - 0x44]
0x3675:	ror	esi, 0xa
0x3678:	add	esi, ecx
0x367a:	lea	edi, [rdi + rax - 0x9e1da9e]
0x3681:	mov	eax, ecx
0x3683:	xor	eax, esi
0x3685:	and	eax, edx
0x3687:	xor	eax, ecx
0x3689:	add	eax, edi
0x368b:	lea	edi, [r10 + rdx - 0x3fbf4cc0]
0x3693:	mov	edx, esi
0x3695:	rol	eax, 5
0x3698:	add	eax, esi
0x369a:	xor	edx, eax
0x369c:	and	edx, ecx
0x369e:	xor	edx, esi
0x36a0:	add	edx, edi
0x36a2:	mov	edi, dword ptr [rsp - 0x24]
0x36a6:	rol	edx, 9
0x36a9:	add	edx, eax
0x36ab:	lea	edi, [rdi + rcx + 0x265e5a51]
0x36b2:	mov	ecx, eax
0x36b4:	xor	ecx, edx
0x36b6:	and	ecx, esi
0x36b8:	xor	ecx, eax
0x36ba:	add	ecx, edi
0x36bc:	lea	edi, [r14 + rsi - 0x16493856]
0x36c4:	mov	esi, edx
0x36c6:	rol	ecx, 0xe
0x36c9:	add	ecx, edx
0x36cb:	xor	esi, ecx
0x36cd:	and	esi, eax
0x36cf:	xor	esi, edx
0x36d1:	add	esi, edi
0x36d3:	mov	edi, dword ptr [rsp - 0x34]
0x36d7:	ror	esi, 0xc


0x2d31:	mov	rbx, qword ptr [rip + 0x207378]
0x2d38:	mov	esi, 2
0x2d3d:	mov	byte ptr [rip + 0x2073c4], 1
0x2d44:	mov	rdi, rbx
0x2d47:	call	0x4170


0x2dc0:	lea	rsi, [rip + 0x413d]
0x2dc7:	mov	rdi, rbp
0x2dca:	mov	r13, rdx
0x2dcd:	call	0x41a0


0x1740:	jmp	qword ptr [rip + 0x2087a2]


0x2c51:	jmp	0x2cae


0x2c7a:	cmp	sil, 0xa
0x2c7e:	mov	rcx, qword ptr [rip + 0x207423]
0x2c85:	je	0x2cb8


0x18e0:	jmp	qword ptr [rip + 0x2086d2]


0x2b90:	xor	eax, eax
0x2b92:	ret	


0x2b67:	cmp	al, 0x5c
0x2b69:	jne	0x2b98


0x2b23:	call	0x2a70


0x2b17:	mov	rdi, qword ptr [rip + 0x2074ea]
0x2b1e:	call	0x18f0


0x2ae4:	pop	rbp
0x2ae5:	jmp	rax


0x2a93:	pop	rbp
0x2a94:	jmp	rax


0x6b91:	push	r12
0x6b93:	push	rbp
0x6b94:	mov	r12d, edx
0x6b97:	push	rbx
0x6b98:	mov	rbp, rsi
0x6b9b:	mov	rbx, rdi
0x6b9e:	call	0x1780










0x6a53:	xor	esi, esi
0x6a55:	xor	eax, eax
0x6a57:	call	0x1610


0x6929:	xor	eax, eax
0x692b:	mov	esi, 0x406
0x6930:	call	0x1610


0x6980:	mov	edi, ebp
0x6982:	xor	eax, eax
0x6984:	call	0x1610


0x6955:	jg	0x69b0


0x1750:	jmp	qword ptr [rip + 0x20879a]


0x66c6:	test	rdx, rdx
0x66c9:	je	0x669a




0x64e1:	call	0x5f80


0x6505:	mov	dword ptr [rsp + 8], r10d
0x650a:	jmp	0x64e1


0x64b0:	cmp	r10d, 0x2f
0x64b4:	ja	0x650c


0x63e0:	mov	eax, dword ptr [r10]
0x63e3:	cmp	eax, 0x2f
0x63e6:	ja	0x642a






0x5ad4:	pop	rbx
0x5ad5:	mov	dword ptr [rip + 0x204599], 1
0x5adf:	pop	rbp
0x5ae0:	pop	r12
0x5ae2:	ret	


0x5ac5:	mov	rdi, r12
0x5ac8:	call	0x15b0








0x3ded:	add	rsp, 8
0x3df1:	pop	rbx
0x3df2:	pop	rbp
0x3df3:	pop	r12
0x3df5:	pop	r13
0x3df7:	pop	r14
0x3df9:	pop	r15
0x3dfb:	ret	


0x3f58:	lea	rbp, [r13 + 0x1c]
0x3f5c:	jmp	0x3d50


0x3dc8:	mov	rbp, r12
0x3dcb:	mov	rdi, rbx
0x3dce:	mov	rdx, r13
0x3dd1:	and	rbp, 0xffffffffffffffc0
0x3dd5:	and	r12d, 0x3f
0x3dd9:	mov	rsi, rbp
0x3ddc:	add	rbx, rbp
0x3ddf:	call	0x3420


0x3ce5:	cmp	r12, 0x40
0x3ce9:	lea	rbp, [r13 + 0x1c]
0x3ced:	je	0x3d50




0x3c1f:	test	rcx, rcx
0x3c22:	je	0x3c6c


0x3c90:	mov	eax, dword ptr [rip + 0x3d6a]
0x3c96:	mov	dword ptr [rdx], eax
0x3c98:	mov	eax, dword ptr [rsi + rcx - 4]
0x3c9c:	mov	dword ptr [rdx + rcx - 4], eax
0x3ca0:	jmp	0x3c6c


0x3c6c:	mov	rdx, rbx
0x3c6f:	mov	rsi, r8
0x3c72:	mov	rdi, r9
0x3c75:	call	0x3420


0x3c69:	rep movsq	qword ptr [rdi], qword ptr [rsi]


0x36da:	add	esi, ecx
0x36dc:	lea	edi, [rdi + rax - 0x29d0efa3]
0x36e3:	mov	eax, ecx
0x36e5:	xor	eax, esi
0x36e7:	and	eax, edx
0x36e9:	xor	eax, ecx
0x36eb:	add	eax, edi
0x36ed:	mov	edi, dword ptr [rsp - 0x28]
0x36f1:	rol	eax, 5
0x36f4:	add	eax, esi
0x36f6:	lea	edi, [rdi + rdx + 0x2441453]
0x36fd:	mov	edx, esi
0x36ff:	xor	edx, eax
0x3701:	and	edx, ecx
0x3703:	xor	edx, esi
0x3705:	add	edx, edi
0x3707:	lea	edi, [r9 + rcx - 0x275e197f]
0x370f:	mov	ecx, eax
0x3711:	rol	edx, 9
0x3714:	add	edx, eax
0x3716:	xor	ecx, edx
0x3718:	and	ecx, esi
0x371a:	xor	ecx, eax
0x371c:	add	ecx, edi
0x371e:	mov	edi, dword ptr [rsp - 0x38]
0x3722:	mov	r10d, dword ptr [rsp - 0x2c]
0x3727:	rol	ecx, 0xe
0x372a:	add	ecx, edx
0x372c:	lea	edi, [rdi + rsi - 0x182c0438]
0x3733:	mov	esi, edx
0x3735:	xor	esi, ecx
0x3737:	and	esi, eax
0x3739:	xor	esi, edx
0x373b:	add	esi, edi
0x373d:	lea	edi, [r10 + rax + 0x21e1cde6]
0x3745:	mov	eax, ecx
0x3747:	ror	esi, 0xc
0x374a:	mov	r10d, dword ptr [rsp - 0x30]
0x374f:	add	esi, ecx
0x3751:	xor	eax, esi
0x3753:	and	eax, edx
0x3755:	xor	eax, ecx
0x3757:	add	eax, edi
0x3759:	lea	edi, [r12 + rdx - 0x3cc8f82a]
0x3761:	mov	edx, esi
0x3763:	rol	eax, 5
0x3766:	add	eax, esi
0x3768:	xor	edx, eax
0x376a:	and	edx, ecx
0x376c:	xor	edx, esi
0x376e:	add	edx, edi
0x3770:	mov	edi, dword ptr [rsp - 0x3c]
0x3774:	rol	edx, 9
0x3777:	add	edx, eax
0x3779:	lea	edi, [rdi + rcx - 0xb2af279]
0x3780:	mov	ecx, eax
0x3782:	xor	ecx, edx
0x3784:	and	ecx, esi
0x3786:	lea	esi, [r10 + rsi + 0x455a14ed]
0x378e:	mov	r10d, edx
0x3791:	xor	ecx, eax
0x3793:	add	ecx, edi
0x3795:	rol	ecx, 0xe
0x3798:	add	ecx, edx
0x379a:	xor	r10d, ecx
0x379d:	mov	edi, r10d
0x37a0:	and	edi, eax
0x37a2:	xor	edi, edx
0x37a4:	add	edi, esi
0x37a6:	lea	esi, [r8 + rax - 0x561c16fb]
0x37ae:	mov	eax, ecx
0x37b0:	ror	edi, 0xc
0x37b3:	add	edi, ecx
0x37b5:	xor	eax, edi
0x37b7:	lea	r10d, [rbp + rdi - 0x72d5b376]
0x37bf:	and	eax, edx
0x37c1:	xor	eax, ecx
0x37c3:	mov	dword ptr [rsp - 0x14], r10d
0x37c8:	add	eax, esi
0x37ca:	mov	esi, dword ptr [rsp - 0x40]
0x37ce:	rol	eax, 5
0x37d1:	add	eax, edi
0x37d3:	lea	esi, [rsi + rdx - 0x3105c08]
0x37da:	mov	edx, edi
0x37dc:	xor	edx, eax
0x37de:	and	edx, ecx
0x37e0:	lea	ecx, [r13 + rcx + 0x676f02d9]
0x37e8:	xor	edx, edi
0x37ea:	add	edx, esi
0x37ec:	mov	esi, eax
0x37ee:	rol	edx, 9
0x37f1:	add	edx, eax
0x37f3:	xor	esi, edx
0x37f5:	and	esi, edi
0x37f7:	xor	esi, eax
0x37f9:	add	esi, ecx
0x37fb:	mov	ecx, edx
0x37fd:	rol	esi, 0xe
0x3800:	add	esi, edx




0x2cae:	add	rsp, 8
0x2cb2:	pop	rbx
0x2cb3:	pop	rbp
0x2cb4:	ret	


0x2cb8:	mov	edx, 2
0x2cbd:	mov	esi, 1
0x2cc2:	mov	rdi, rbp
0x2cc5:	call	0x17d0


0x2c87:	cmp	sil, 0x5c
0x2c8b:	je	0x2c58




0x2b6b:	cmp	r8, rdx
0x2b6e:	je	0x2b90


0x2b98:	mov	r9, rcx
0x2b9b:	mov	byte ptr [rcx - 1], al
0x2b9e:	add	rdx, 1
0x2ba2:	add	rcx, 1
0x2ba6:	cmp	rsi, rdx
0x2ba9:	ja	0x2b5f


0x18f0:	jmp	qword ptr [rip + 0x2086ea]


0x6957:	cmp	esi, 4
0x695a:	je	0x6a30


0x69b0:	cmp	esi, 0x407
0x69b6:	jg	0x6a00




0x669a:	mov	qword ptr [rsi], rcx
0x669d:	imul	rcx, r9
0x66a1:	mov	rsi, rcx
0x66a4:	jmp	0x6600


0x3d50:	mov	edi, dword ptr [r13 + 0x18]
0x3d54:	cmp	r12d, 8
0x3d58:	mov	eax, r12d
0x3d5b:	lea	rcx, [rbp + rdi]
0x3d60:	jae	0x3e40


0x3cef:	lea	r15, [r12 - 0x41]
0x3cf4:	shr	r15, 6
0x3cf8:	lea	r14, [r15 + 1]
0x3cfc:	shl	r14, 6
0x3d00:	add	r14, rbx
0x3d03:	nop	dword ptr [rax + rax]
0x3d08:	movdqu	xmm0, xmmword ptr [rbx]
0x3d0c:	mov	rdx, r13
0x3d0f:	mov	esi, 0x40
0x3d14:	mov	rdi, rbp
0x3d17:	add	rbx, 0x40
0x3d1b:	movups	xmmword ptr [rbp], xmm0
0x3d1f:	movdqu	xmm0, xmmword ptr [rbx - 0x30]
0x3d24:	movups	xmmword ptr [rbp + 0x10], xmm0
0x3d28:	movdqu	xmm0, xmmword ptr [rbx - 0x20]
0x3d2d:	movups	xmmword ptr [rbp + 0x20], xmm0
0x3d31:	movdqu	xmm0, xmmword ptr [rbx - 0x10]
0x3d36:	movups	xmmword ptr [rbp + 0x30], xmm0
0x3d3a:	call	0x3420


0x3c24:	movzx	eax, byte ptr [rip + 0x3dd5]
0x3c2b:	test	cl, 2
0x3c2e:	mov	byte ptr [rdx], al
0x3c30:	je	0x3c6c


0x3802:	xor	ecx, esi
0x3804:	mov	r10d, ecx
0x3807:	and	r10d, eax
0x380a:	mov	edi, r10d
0x380d:	mov	r10d, dword ptr [rsp - 0x34]
0x3812:	xor	edi, edx
0x3814:	add	edi, dword ptr [rsp - 0x14]
0x3818:	lea	eax, [r10 + rax - 0x5c6be]
0x3820:	ror	edi, 0xc
0x3823:	add	edi, esi
0x3825:	xor	ecx, edi
0x3827:	add	ecx, eax
0x3829:	mov	eax, dword ptr [rsp - 0x30]
0x382d:	rol	ecx, 4
0x3830:	add	ecx, edi
0x3832:	lea	eax, [rax + rdx - 0x788e097f]
0x3839:	mov	edx, esi
0x383b:	xor	edx, edi
0x383d:	xor	edx, ecx
0x383f:	add	edx, eax
0x3841:	mov	eax, dword ptr [rsp - 0x24]
0x3845:	rol	edx, 0xb
0x3848:	add	edx, ecx
0x384a:	lea	eax, [rax + rsi + 0x6d9d6122]
0x3851:	mov	esi, edi
0x3853:	lea	edi, [r12 + rdi - 0x21ac7f4]
0x385b:	xor	esi, ecx
0x385d:	xor	esi, edx
0x385f:	add	esi, eax
0x3861:	mov	eax, ecx
0x3863:	rol	esi, 0x10
0x3866:	xor	eax, edx
0x3868:	add	esi, edx
0x386a:	xor	eax, esi
0x386c:	mov	r10d, esi
0x386f:	add	eax, edi
0x3871:	mov	edi, dword ptr [rsp - 0x44]
0x3875:	ror	eax, 9
0x3878:	add	eax, esi
0x387a:	lea	edi, [rdi + rcx - 0x5b4115bc]
0x3881:	mov	ecx, edx
0x3883:	xor	r10d, eax
0x3886:	xor	ecx, esi
0x3888:	lea	esi, [r13 + rsi - 0x944b4a0]
0x3890:	xor	ecx, eax
0x3892:	add	ecx, edi
0x3894:	mov	edi, dword ptr [rsp - 0x38]
0x3898:	rol	ecx, 4
0x389b:	add	ecx, eax
0x389d:	lea	edx, [rdi + rdx + 0x4bdecfa9]
0x38a4:	mov	edi, r10d
0x38a7:	xor	edi, ecx
0x38a9:	add	edi, edx
0x38ab:	mov	edx, eax
0x38ad:	rol	edi, 0xb
0x38b0:	xor	edx, ecx
0x38b2:	add	edi, ecx
0x38b4:	xor	edx, edi
0x38b6:	add	edx, esi
0x38b8:	mov	esi, dword ptr [rsp - 0x28]
0x38bc:	rol	edx, 0x10
0x38bf:	add	edx, edi
0x38c1:	lea	eax, [rsi + rax - 0x41404390]
0x38c8:	mov	esi, ecx
0x38ca:	xor	esi, edi
0x38cc:	xor	esi, edx
0x38ce:	add	esi, eax
0x38d0:	lea	eax, [r8 + rcx + 0x289b7ec6]
0x38d8:	mov	ecx, edi
0x38da:	ror	esi, 9
0x38dd:	xor	ecx, edx
0x38df:	lea	edi, [r14 + rdi - 0x155ed806]
0x38e7:	add	esi, edx
0x38e9:	xor	ecx, esi
0x38eb:	mov	r10d, esi
0x38ee:	add	ecx, eax
0x38f0:	mov	eax, edx
0x38f2:	rol	ecx, 4
0x38f5:	xor	eax, esi
0x38f7:	add	ecx, esi
0x38f9:	xor	eax, ecx
0x38fb:	xor	r10d, ecx
0x38fe:	add	eax, edi
0x3900:	mov	edi, dword ptr [rsp - 0x3c]
0x3904:	rol	eax, 0xb
0x3907:	add	eax, ecx
0x3909:	lea	edx, [rdi + rdx - 0x2b10cf7b]
0x3910:	mov	edi, r10d
0x3913:	xor	edi, eax
0x3915:	add	edi, edx
0x3917:	mov	edx, dword ptr [rsp - 0x1c]
0x391b:	rol	edi, 0x10
0x391e:	add	edi, eax
0x3920:	lea	edx, [rdx + rsi + 0x4881d05]
0x3927:	mov	esi, ecx
0x3929:	xor	esi, eax
0x392b:	xor	esi, edi
0x392d:	add	esi, edx
0x392f:	mov	edx, dword ptr [rsp - 0x2c]


0x17d0:	jmp	qword ptr [rip + 0x20875a]


0x2c58:	lea	rdi, [rip + 0x41c8]
0x2c5f:	mov	edx, 2
0x2c64:	mov	esi, 1
0x2c69:	call	0x17d0


0x2c8d:	mov	rax, qword ptr [rcx + 0x28]
0x2c91:	cmp	rax, qword ptr [rcx + 0x30]
0x2c95:	jae	0x2ce8


0x2b70:	add	rdx, 1
0x2b74:	movzx	eax, byte ptr [rdi + rdx]
0x2b78:	cmp	al, 0x5c
0x2b7a:	je	0x2bc0


0x2bab:	add	rsi, rdi
0x2bae:	cmp	r9, rsi
0x2bb1:	jae	0x2bb7


0x6a30:	mov	eax, dword ptr [rsp]
0x6a33:	cmp	eax, 0x2f
0x6a36:	ja	0x6b24


0x6960:	jg	0x6a20


0x69b8:	cmp	esi, 0x406
0x69be:	jge	0x6a30


0x6a00:	cmp	esi, 0x409
0x6a06:	je	0x6a30


0x3d66:	test	r12b, 4
0x3d6a:	jne	0x3f61


0x3e40:	mov	rax, qword ptr [rbx]
0x3e43:	mov	edx, r12d
0x3e46:	mov	qword ptr [rcx], rax
0x3e49:	mov	rax, qword ptr [rbx + rdx - 8]
0x3e4e:	mov	qword ptr [rcx + rdx - 8], rax
0x3e53:	lea	rdx, [rcx + 8]
0x3e57:	mov	rax, rcx
0x3e5a:	and	rdx, 0xfffffffffffffff8
0x3e5e:	sub	rax, rdx
0x3e61:	sub	rbx, rax
0x3e64:	add	eax, r12d
0x3e67:	and	eax, 0xfffffff8
0x3e6a:	cmp	eax, 8
0x3e6d:	jb	0x3d82


0x3c32:	movzx	eax, word ptr [rsi + rcx - 2]
0x3c37:	mov	word ptr [rdx + rcx - 2], ax
0x3c3c:	jmp	0x3c6c


0x3933:	ror	esi, 9
0x3936:	add	esi, edi
0x3938:	lea	ecx, [rdx + rcx - 0x262b2fc7]
0x393f:	mov	edx, eax
0x3941:	lea	eax, [rbp + rax - 0x1924661b]
0x3948:	xor	edx, edi
0x394a:	mov	r10d, esi
0x394d:	xor	edx, esi
0x394f:	add	edx, ecx
0x3951:	mov	ecx, edi
0x3953:	rol	edx, 4
0x3956:	add	edx, esi
0x3958:	xor	ecx, esi
0x395a:	xor	ecx, edx
0x395c:	xor	r10d, edx
0x395f:	add	ecx, eax
0x3961:	lea	eax, [r9 + rdi + 0x1fa27cf8]
0x3969:	mov	edi, r10d
0x396c:	rol	ecx, 0xb
0x396f:	mov	r10d, dword ptr [rsp - 0x34]
0x3974:	add	ecx, edx
0x3976:	xor	edi, ecx
0x3978:	add	edi, eax
0x397a:	mov	eax, dword ptr [rsp - 0x40]
0x397e:	rol	edi, 0x10
0x3981:	add	edi, ecx
0x3983:	lea	esi, [rax + rsi - 0x3b53a99b]
0x398a:	mov	eax, edx
0x398c:	xor	eax, ecx
0x398e:	xor	eax, edi
0x3990:	add	eax, esi
0x3992:	lea	esi, [r14 + rdx - 0xbd6ddbc]
0x399a:	mov	edx, ecx
0x399c:	ror	eax, 9
0x399f:	not	edx
0x39a1:	mov	r14d, dword ptr [rsp - 0x44]
0x39a6:	add	eax, edi
0x39a8:	or	edx, eax
0x39aa:	xor	edx, edi
0x39ac:	add	edx, esi
0x39ae:	lea	esi, [r13 + rcx + 0x432aff97]
0x39b6:	mov	r13d, edi
0x39b9:	rol	edx, 6
0x39bc:	not	r13d
0x39bf:	lea	edi, [r12 + rdi - 0x546bdc59]
0x39c7:	add	edx, eax
0x39c9:	mov	ecx, r13d
0x39cc:	or	ecx, edx
0x39ce:	mov	r13d, edx
0x39d1:	xor	ecx, eax
0x39d3:	not	r13d
0x39d6:	add	ecx, esi
0x39d8:	mov	esi, eax
0x39da:	rol	ecx, 0xa
0x39dd:	not	esi
0x39df:	add	ecx, edx
0x39e1:	or	esi, ecx
0x39e3:	mov	r12d, ecx
0x39e6:	xor	esi, edx
0x39e8:	not	r12d
0x39eb:	add	esi, edi
0x39ed:	lea	edi, [r10 + rax - 0x36c5fc7]
0x39f5:	mov	eax, r13d
0x39f8:	rol	esi, 0xf
0x39fb:	mov	r10d, dword ptr [rsp - 0x1c]
0x3a00:	add	esi, ecx
0x3a02:	or	eax, esi
0x3a04:	xor	eax, ecx
0x3a06:	add	eax, edi
0x3a08:	lea	edi, [rbp + rdx + 0x655b59c3]
0x3a0f:	mov	ebp, dword ptr [rsp - 0x3c]
0x3a13:	ror	eax, 0xb
0x3a16:	mov	edx, r12d
0x3a19:	add	eax, esi
0x3a1b:	or	edx, eax
0x3a1d:	xor	edx, esi
0x3a1f:	add	edx, edi
0x3a21:	lea	edi, [rbp + rcx - 0x70f3336e]
0x3a28:	mov	ebp, esi
0x3a2a:	rol	edx, 6
0x3a2d:	not	ebp
0x3a2f:	add	edx, eax
0x3a31:	mov	ecx, ebp
0x3a33:	or	ecx, edx
0x3a35:	mov	ebp, edx
0x3a37:	xor	ecx, eax
0x3a39:	not	ebp
0x3a3b:	add	ecx, edi
0x3a3d:	mov	edi, dword ptr [rsp - 0x28]
0x3a41:	rol	ecx, 0xa
0x3a44:	add	ecx, edx
0x3a46:	lea	edi, [rdi + rsi - 0x100b83]
0x3a4d:	mov	esi, eax
0x3a4f:	not	esi
0x3a51:	or	esi, ecx
0x3a53:	xor	esi, edx
0x3a55:	add	esi, edi
0x3a57:	lea	edi, [r14 + rax - 0x7a7ba22f]
0x3a5f:	mov	eax, ebp




0x2c97:	lea	rdx, [rax + 1]
0x2c9b:	add	rbx, 1
0x2c9f:	mov	qword ptr [rcx + 0x28], rdx
0x2ca3:	mov	byte ptr [rax], sil
0x2ca6:	movzx	esi, byte ptr [rbx]
0x2ca9:	test	sil, sil
0x2cac:	jne	0x2c7a


0x2ce8:	mov	rdi, rcx
0x2ceb:	call	0x16d0


0x2bc0:	mov	r9, rcx
0x2bc3:	mov	byte ptr [rcx - 1], 0x5c
0x2bc7:	jmp	0x2b9e


0x2b7c:	cmp	al, 0x6e
0x2b7e:	jne	0x2b90


0x2bb3:	mov	byte ptr [r9], 0
0x2bb7:	mov	rax, rdi
0x2bba:	ret	


0x6a3c:	add	rax, qword ptr [rsp + 0x10]
0x6a41:	mov	edx, dword ptr [rax]
0x6a43:	mov	edi, ebp
0x6a45:	xor	eax, eax
0x6a47:	call	0x1610


0x6b24:	mov	rax, qword ptr [rsp + 8]
0x6b29:	jmp	0x6a41


0x6966:	cmp	esi, 2
0x6969:	je	0x6a30


0x6a20:	cmp	esi, 9
0x6a23:	je	0x6980


0x69c0:	cmp	esi, 0x401
0x69c6:	je	0x6980


0x6a08:	jl	0x6980


0x3d70:	test	r12d, r12d
0x3d73:	je	0x3d82


0x3f61:	mov	edx, dword ptr [rbx]
0x3f63:	mov	dword ptr [rcx], edx
0x3f65:	mov	edx, r12d
0x3f68:	mov	eax, dword ptr [rbx + rdx - 4]
0x3f6c:	mov	dword ptr [rcx + rdx - 4], eax
0x3f70:	jmp	0x3d82


0x3d82:	add	r12, rdi
0x3d85:	cmp	r12, 0x3f
0x3d89:	jbe	0x3dae


0x3e73:	and	eax, 0xfffffff8
0x3e76:	xor	ecx, ecx
0x3e78:	mov	esi, ecx
0x3e7a:	add	ecx, 8
0x3e7d:	mov	r8, qword ptr [rbx + rsi]
0x3e81:	cmp	ecx, eax
0x3e83:	mov	qword ptr [rdx + rsi], r8
0x3e87:	jb	0x3e78


0x3a61:	rol	esi, 0xf
0x3a64:	mov	r14d, dword ptr [rsp - 0x30]
0x3a69:	mov	ebp, ecx
0x3a6b:	add	esi, ecx
0x3a6d:	not	ebp
0x3a6f:	or	eax, esi
0x3a71:	xor	eax, ecx
0x3a73:	add	eax, edi
0x3a75:	lea	edi, [r14 + rdx + 0x6fa87e4f]
0x3a7d:	mov	edx, ebp
0x3a7f:	ror	eax, 0xb
0x3a82:	mov	ebp, esi
0x3a84:	mov	r14d, dword ptr [rsp - 0x24]
0x3a89:	add	eax, esi
0x3a8b:	not	ebp
0x3a8d:	or	edx, eax
0x3a8f:	xor	edx, esi
0x3a91:	add	edx, edi
0x3a93:	lea	edi, [r9 + rcx - 0x1d31920]
0x3a9b:	mov	ecx, ebp
0x3a9d:	rol	edx, 6
0x3aa0:	mov	r9d, dword ptr [rsp - 0x38]
0x3aa5:	add	edx, eax
0x3aa7:	or	ecx, edx
0x3aa9:	xor	ecx, eax
0x3aab:	add	ecx, edi
0x3aad:	lea	edi, [r10 + rsi - 0x5cfebcec]
0x3ab5:	mov	esi, eax
0x3ab7:	rol	ecx, 0xa
0x3aba:	not	esi
0x3abc:	lea	eax, [r8 + rax + 0x4e0811a1]
0x3ac4:	add	ecx, edx
0x3ac6:	mov	r8d, edx
0x3ac9:	mov	r10d, dword ptr [rsp - 0x2c]
0x3ace:	or	esi, ecx
0x3ad0:	not	r8d
0x3ad3:	xor	esi, edx
0x3ad5:	lea	edx, [r9 + rdx - 0x8ac817e]
0x3add:	mov	r9d, ecx
0x3ae0:	add	esi, edi
0x3ae2:	mov	edi, r8d
0x3ae5:	not	r9d
0x3ae8:	rol	esi, 0xf
0x3aeb:	add	esi, ecx
0x3aed:	or	edi, esi
0x3aef:	xor	edi, ecx
0x3af1:	lea	ecx, [r14 + rcx - 0x42c50dcb]
0x3af9:	add	edi, eax
0x3afb:	mov	eax, r9d
0x3afe:	ror	edi, 0xb
0x3b01:	add	edi, esi
0x3b03:	or	eax, edi
0x3b05:	xor	eax, esi
0x3b07:	add	eax, edx
0x3b09:	mov	edx, esi
0x3b0b:	rol	eax, 6
0x3b0e:	not	edx
0x3b10:	add	eax, edi
0x3b12:	or	edx, eax
0x3b14:	xor	edx, edi
0x3b16:	add	edx, ecx
0x3b18:	mov	ecx, dword ptr [rsp - 0x40]
0x3b1c:	rol	edx, 0xa
0x3b1f:	add	edx, eax
0x3b21:	lea	esi, [rcx + rsi + 0x2ad7d2bb]
0x3b28:	mov	ecx, edi
0x3b2a:	lea	edi, [r10 + rdi - 0x14792c6f]
0x3b32:	not	ecx
0x3b34:	or	ecx, edx
0x3b36:	xor	ecx, eax
0x3b38:	add	ecx, esi
0x3b3a:	mov	esi, eax
0x3b3c:	rol	ecx, 0xf
0x3b3f:	not	esi
0x3b41:	add	ecx, edx
0x3b43:	or	esi, ecx
0x3b45:	xor	esi, edx
0x3b47:	add	esi, edi
0x3b49:	ror	esi, 0xb
0x3b4c:	add	esi, ecx
0x3b4e:	add	dword ptr [rsp - 0x18], eax
0x3b52:	add	r15d, ecx
0x3b55:	add	r11d, esi
0x3b58:	add	dword ptr [rsp - 0x20], edx
0x3b5c:	cmp	qword ptr [rsp - 0x10], rbx
0x3b61:	ja	0x3480


0x16d0:	jmp	qword ptr [rip + 0x2087da]


0x2b9e:	add	rdx, 1
0x2ba2:	add	rcx, 1
0x2ba6:	cmp	rsi, rdx
0x2ba9:	ja	0x2b5f


0x2b80:	mov	r9, rcx
0x2b83:	mov	byte ptr [rcx - 1], 0xa
0x2b87:	jmp	0x2b9e


0x6a41:	mov	edx, dword ptr [rax]
0x6a43:	mov	edi, ebp
0x6a45:	xor	eax, eax
0x6a47:	call	0x1610


0x696f:	jg	0x6980


0x6a29:	jg	0x6a30


0x69c8:	cmp	esi, 0x402
0x69ce:	je	0x6a30


0x6a0e:	cmp	esi, 0x40a
0x6a14:	jne	0x69d8


0x3d75:	movzx	edx, byte ptr [rbx]
0x3d78:	test	al, 2
0x3d7a:	mov	byte ptr [rcx], dl
0x3d7c:	jne	0x3f75


0x3dae:	mov	dword ptr [r13 + 0x18], r12d
0x3db2:	add	rsp, 8
0x3db6:	pop	rbx
0x3db7:	pop	rbp
0x3db8:	pop	r12
0x3dba:	pop	r13
0x3dbc:	pop	r14
0x3dbe:	pop	r15
0x3dc0:	ret	


0x3d8b:	mov	rdx, r13
0x3d8e:	mov	esi, 0x40
0x3d93:	mov	rdi, rbp
0x3d96:	call	0x3420


0x3e78:	mov	esi, ecx
0x3e7a:	add	ecx, 8
0x3e7d:	mov	r8, qword ptr [rbx + rsi]
0x3e81:	cmp	ecx, eax
0x3e83:	mov	qword ptr [rdx + rsi], r8
0x3e87:	jb	0x3e78


0x3e89:	jmp	0x3d82


0x3b67:	mov	r10d, r15d
0x3b6a:	mov	rax, qword ptr [rsp - 8]
0x3b6f:	mov	ebx, dword ptr [rsp - 0x18]
0x3b73:	mov	dword ptr [rax], ebx
0x3b75:	mov	ebx, dword ptr [rsp - 0x20]
0x3b79:	mov	dword ptr [rax + 4], r11d
0x3b7d:	mov	dword ptr [rax + 8], r10d
0x3b81:	mov	dword ptr [rax + 0xc], ebx
0x3b84:	pop	rbx
0x3b85:	pop	rbp
0x3b86:	pop	r12
0x3b88:	pop	r13
0x3b8a:	pop	r14
0x3b8c:	pop	r15
0x3b8e:	ret	


0x3480:	mov	r14d, dword ptr [rbx]
0x3483:	mov	edi, dword ptr [rsp - 0x20]
0x3487:	mov	eax, dword ptr [rsp - 0x18]
0x348b:	mov	esi, dword ptr [rbx + 4]
0x348e:	mov	r8d, dword ptr [rbx + 0xc]
0x3492:	mov	r10d, dword ptr [rbx + 0x14]
0x3496:	mov	ebp, dword ptr [rbx + 0x18]
0x3499:	mov	r13d, dword ptr [rbx + 0x1c]
0x349d:	lea	edx, [r14 + rax - 0x28955b88]
0x34a5:	mov	eax, edi
0x34a7:	lea	ecx, [rsi + rdi - 0x173848aa]
0x34ae:	xor	eax, r15d
0x34b1:	mov	dword ptr [rsp - 0x44], esi
0x34b5:	mov	dword ptr [rsp - 0x34], r10d
0x34ba:	and	eax, r11d
0x34bd:	mov	r12d, dword ptr [rbx + 0x24]
0x34c1:	mov	dword ptr [rsp - 0x3c], r8d
0x34c6:	xor	eax, edi
0x34c8:	lea	edi, [r8 + r11 - 0x3e423112]
0x34d0:	mov	r8d, dword ptr [rbx + 0x2c]
0x34d4:	add	eax, edx
0x34d6:	mov	edx, r11d
0x34d9:	rol	eax, 7
0x34dc:	xor	edx, r15d
0x34df:	mov	dword ptr [rsp - 0x2c], r12d
0x34e4:	add	eax, r11d
0x34e7:	mov	dword ptr [rsp - 0x24], r8d
0x34ec:	and	edx, eax
0x34ee:	mov	r9d, eax
0x34f1:	xor	edx, r15d
0x34f4:	xor	r9d, r11d
0x34f7:	add	edx, ecx
0x34f9:	mov	ecx, dword ptr [rbx + 8]
0x34fc:	rol	edx, 0xc
0x34ff:	add	edx, eax
0x3501:	lea	esi, [rcx + r15 + 0x242070db]
0x3509:	mov	dword ptr [rsp - 0x40], ecx
0x350d:	mov	ecx, r9d
0x3510:	and	ecx, edx
0x3512:	mov	r9d, eax
0x3515:	xor	ecx, r11d
0x3518:	xor	r9d, edx
0x351b:	add	ecx, esi
0x351d:	mov	esi, r9d
0x3520:	mov	r9d, dword ptr [rbx + 0x10]
0x3524:	ror	ecx, 0xf
0x3527:	add	ecx, edx
0x3529:	and	esi, ecx
0x352b:	mov	dword ptr [rsp - 0x38], r9d
0x3530:	xor	esi, eax
0x3532:	add	esi, edi
0x3534:	lea	edi, [r9 + rax - 0xa83f051]
0x353c:	mov	eax, edx
0x353e:	ror	esi, 0xa
0x3541:	xor	eax, ecx
0x3543:	mov	r9d, dword ptr [rbx + 0x3c]
0x3547:	add	esi, ecx
0x3549:	and	eax, esi
0x354b:	xor	eax, edx
0x354d:	add	eax, edi
0x354f:	lea	edi, [r10 + rdx + 0x4787c62a]
0x3557:	mov	edx, ecx
0x3559:	rol	eax, 7
0x355c:	xor	edx, esi
0x355e:	mov	r10d, ebp
0x3561:	add	eax, esi
0x3563:	mov	dword ptr [rsp - 0x1c], r10d
0x3568:	and	edx, eax
0x356a:	xor	edx, ecx
0x356c:	add	edx, edi
0x356e:	lea	edi, [rbp + rcx - 0x57cfb9ed]
0x3575:	mov	ebp, esi
0x3577:	xor	ebp, eax
0x3579:	rol	edx, 0xc
0x357c:	add	edx, eax
0x357e:	mov	ecx, ebp
0x3580:	mov	ebp, eax
0x3582:	and	ecx, edx
0x3584:	xor	ebp, edx
0x3586:	xor	ecx, esi
0x3588:	add	ecx, edi
0x358a:	lea	edi, [r13 + rsi - 0x2b96aff]
0x3592:	mov	esi, ebp
0x3594:	ror	ecx, 0xf
0x3597:	mov	ebp, dword ptr [rbx + 0x20]
0x359a:	add	ecx, edx
0x359c:	and	esi, ecx
0x359e:	xor	esi, eax
0x35a0:	mov	dword ptr [rsp - 0x30], ebp
0x35a4:	add	esi, edi
0x35a6:	lea	edi, [rbp + rax + 0x698098d8]
0x35ad:	mov	eax, edx
0x35af:	ror	esi, 0xa
0x35b2:	xor	eax, ecx
0x35b4:	mov	ebp, dword ptr [rbx + 0x30]
0x35b7:	add	esi, ecx
0x35b9:	and	eax, esi
0x35bb:	xor	eax, edx
0x35bd:	add	eax, edi




0x6971:	cmp	esi, 1
0x6974:	jne	0x69d8


0x6a2b:	cmp	esi, 8
0x6a2e:	jne	0x69d8


0x69d0:	cmp	esi, 0x400
0x69d6:	je	0x6a30


0x6a16:	jmp	0x6980


0x69d8:	mov	eax, dword ptr [rsp]
0x69db:	cmp	eax, 0x2f
0x69de:	ja	0x6b1a


0x3f75:	mov	edx, r12d
0x3f78:	movzx	eax, word ptr [rbx + rdx - 2]
0x3f7d:	mov	word ptr [rcx + rdx - 2], ax
0x3f82:	jmp	0x3d82


0x35bf:	lea	edi, [r12 + rdx - 0x74bb0851]
0x35c7:	mov	edx, ecx
0x35c9:	rol	eax, 7
0x35cc:	xor	edx, esi
0x35ce:	mov	r12d, dword ptr [rbx + 0x38]
0x35d2:	add	eax, esi
0x35d4:	and	edx, eax
0x35d6:	xor	edx, ecx
0x35d8:	add	edx, edi
0x35da:	mov	edi, dword ptr [rbx + 0x28]
0x35dd:	rol	edx, 0xc
0x35e0:	add	edx, eax
0x35e2:	mov	dword ptr [rsp - 0x28], edi
0x35e6:	lea	edi, [rdi + rcx - 0xa44f]
0x35ed:	mov	ecx, esi
0x35ef:	xor	ecx, eax
0x35f1:	and	ecx, edx
0x35f3:	xor	ecx, esi
0x35f5:	add	ecx, edi
0x35f7:	lea	edi, [r8 + rsi - 0x76a32842]
0x35ff:	mov	esi, eax
0x3601:	ror	ecx, 0xf
0x3604:	xor	esi, edx
0x3606:	mov	r8d, dword ptr [rbx + 0x34]
0x360a:	add	ecx, edx
0x360c:	add	rbx, 0x40
0x3610:	and	esi, ecx
0x3612:	xor	esi, eax
0x3614:	add	esi, edi
0x3616:	lea	edi, [rbp + rax + 0x6b901122]
0x361d:	mov	eax, edx
0x361f:	ror	esi, 0xa
0x3622:	xor	eax, ecx
0x3624:	add	esi, ecx
0x3626:	and	eax, esi
0x3628:	xor	eax, edx
0x362a:	add	eax, edi
0x362c:	lea	edi, [r8 + rdx - 0x2678e6d]
0x3634:	mov	edx, ecx
0x3636:	rol	eax, 7
0x3639:	xor	edx, esi
0x363b:	add	eax, esi
0x363d:	and	edx, eax
0x363f:	xor	edx, ecx
0x3641:	add	edx, edi
0x3643:	lea	edi, [r12 + rcx - 0x5986bc72]
0x364b:	mov	ecx, esi
0x364d:	rol	edx, 0xc
0x3650:	xor	ecx, eax
0x3652:	add	edx, eax
0x3654:	and	ecx, edx
0x3656:	xor	ecx, esi
0x3658:	add	ecx, edi
0x365a:	lea	edi, [r9 + rsi + 0x49b40821]
0x3662:	mov	esi, eax
0x3664:	ror	ecx, 0xf
0x3667:	xor	esi, edx
0x3669:	add	ecx, edx
0x366b:	and	esi, ecx
0x366d:	xor	esi, eax
0x366f:	add	esi, edi
0x3671:	mov	edi, dword ptr [rsp - 0x44]
0x3675:	ror	esi, 0xa
0x3678:	add	esi, ecx
0x367a:	lea	edi, [rdi + rax - 0x9e1da9e]
0x3681:	mov	eax, ecx
0x3683:	xor	eax, esi
0x3685:	and	eax, edx
0x3687:	xor	eax, ecx
0x3689:	add	eax, edi
0x368b:	lea	edi, [r10 + rdx - 0x3fbf4cc0]
0x3693:	mov	edx, esi
0x3695:	rol	eax, 5
0x3698:	add	eax, esi
0x369a:	xor	edx, eax
0x369c:	and	edx, ecx
0x369e:	xor	edx, esi
0x36a0:	add	edx, edi
0x36a2:	mov	edi, dword ptr [rsp - 0x24]
0x36a6:	rol	edx, 9
0x36a9:	add	edx, eax
0x36ab:	lea	edi, [rdi + rcx + 0x265e5a51]
0x36b2:	mov	ecx, eax
0x36b4:	xor	ecx, edx
0x36b6:	and	ecx, esi
0x36b8:	xor	ecx, eax
0x36ba:	add	ecx, edi
0x36bc:	lea	edi, [r14 + rsi - 0x16493856]
0x36c4:	mov	esi, edx
0x36c6:	rol	ecx, 0xe
0x36c9:	add	ecx, edx
0x36cb:	xor	esi, ecx
0x36cd:	and	esi, eax
0x36cf:	xor	esi, edx
0x36d1:	add	esi, edi
0x36d3:	mov	edi, dword ptr [rsp - 0x34]
0x36d7:	ror	esi, 0xc
0x36da:	add	esi, ecx
0x36dc:	lea	edi, [rdi + rax - 0x29d0efa3]


0x69e4:	add	rax, qword ptr [rsp + 0x10]
0x69e9:	mov	rdx, qword ptr [rax]
0x69ec:	mov	edi, ebp
0x69ee:	xor	eax, eax
0x69f0:	call	0x1610


0x6b1a:	mov	rax, qword ptr [rsp + 8]
0x6b1f:	jmp	0x69e9


0x36e3:	mov	eax, ecx
0x36e5:	xor	eax, esi
0x36e7:	and	eax, edx
0x36e9:	xor	eax, ecx
0x36eb:	add	eax, edi
0x36ed:	mov	edi, dword ptr [rsp - 0x28]
0x36f1:	rol	eax, 5
0x36f4:	add	eax, esi
0x36f6:	lea	edi, [rdi + rdx + 0x2441453]
0x36fd:	mov	edx, esi
0x36ff:	xor	edx, eax
0x3701:	and	edx, ecx
0x3703:	xor	edx, esi
0x3705:	add	edx, edi
0x3707:	lea	edi, [r9 + rcx - 0x275e197f]
0x370f:	mov	ecx, eax
0x3711:	rol	edx, 9
0x3714:	add	edx, eax
0x3716:	xor	ecx, edx
0x3718:	and	ecx, esi
0x371a:	xor	ecx, eax
0x371c:	add	ecx, edi
0x371e:	mov	edi, dword ptr [rsp - 0x38]
0x3722:	mov	r10d, dword ptr [rsp - 0x2c]
0x3727:	rol	ecx, 0xe
0x372a:	add	ecx, edx
0x372c:	lea	edi, [rdi + rsi - 0x182c0438]
0x3733:	mov	esi, edx
0x3735:	xor	esi, ecx
0x3737:	and	esi, eax
0x3739:	xor	esi, edx
0x373b:	add	esi, edi
0x373d:	lea	edi, [r10 + rax + 0x21e1cde6]
0x3745:	mov	eax, ecx
0x3747:	ror	esi, 0xc
0x374a:	mov	r10d, dword ptr [rsp - 0x30]
0x374f:	add	esi, ecx
0x3751:	xor	eax, esi
0x3753:	and	eax, edx
0x3755:	xor	eax, ecx
0x3757:	add	eax, edi
0x3759:	lea	edi, [r12 + rdx - 0x3cc8f82a]
0x3761:	mov	edx, esi
0x3763:	rol	eax, 5
0x3766:	add	eax, esi
0x3768:	xor	edx, eax
0x376a:	and	edx, ecx
0x376c:	xor	edx, esi
0x376e:	add	edx, edi
0x3770:	mov	edi, dword ptr [rsp - 0x3c]
0x3774:	rol	edx, 9
0x3777:	add	edx, eax
0x3779:	lea	edi, [rdi + rcx - 0xb2af279]
0x3780:	mov	ecx, eax
0x3782:	xor	ecx, edx
0x3784:	and	ecx, esi
0x3786:	lea	esi, [r10 + rsi + 0x455a14ed]
0x378e:	mov	r10d, edx
0x3791:	xor	ecx, eax
0x3793:	add	ecx, edi
0x3795:	rol	ecx, 0xe
0x3798:	add	ecx, edx
0x379a:	xor	r10d, ecx
0x379d:	mov	edi, r10d
0x37a0:	and	edi, eax
0x37a2:	xor	edi, edx
0x37a4:	add	edi, esi
0x37a6:	lea	esi, [r8 + rax - 0x561c16fb]
0x37ae:	mov	eax, ecx
0x37b0:	ror	edi, 0xc
0x37b3:	add	edi, ecx
0x37b5:	xor	eax, edi
0x37b7:	lea	r10d, [rbp + rdi - 0x72d5b376]
0x37bf:	and	eax, edx
0x37c1:	xor	eax, ecx
0x37c3:	mov	dword ptr [rsp - 0x14], r10d
0x37c8:	add	eax, esi
0x37ca:	mov	esi, dword ptr [rsp - 0x40]
0x37ce:	rol	eax, 5
0x37d1:	add	eax, edi
0x37d3:	lea	esi, [rsi + rdx - 0x3105c08]
0x37da:	mov	edx, edi
0x37dc:	xor	edx, eax
0x37de:	and	edx, ecx
0x37e0:	lea	ecx, [r13 + rcx + 0x676f02d9]
0x37e8:	xor	edx, edi
0x37ea:	add	edx, esi
0x37ec:	mov	esi, eax
0x37ee:	rol	edx, 9
0x37f1:	add	edx, eax
0x37f3:	xor	esi, edx
0x37f5:	and	esi, edi
0x37f7:	xor	esi, eax
0x37f9:	add	esi, ecx
0x37fb:	mov	ecx, edx
0x37fd:	rol	esi, 0xe
0x3800:	add	esi, edx
0x3802:	xor	ecx, esi
0x3804:	mov	r10d, ecx


0x69e9:	mov	rdx, qword ptr [rax]
0x69ec:	mov	edi, ebp
0x69ee:	xor	eax, eax
0x69f0:	call	0x1610


0x3807:	and	r10d, eax
0x380a:	mov	edi, r10d
0x380d:	mov	r10d, dword ptr [rsp - 0x34]
0x3812:	xor	edi, edx
0x3814:	add	edi, dword ptr [rsp - 0x14]
0x3818:	lea	eax, [r10 + rax - 0x5c6be]
0x3820:	ror	edi, 0xc
0x3823:	add	edi, esi
0x3825:	xor	ecx, edi
0x3827:	add	ecx, eax
0x3829:	mov	eax, dword ptr [rsp - 0x30]
0x382d:	rol	ecx, 4
0x3830:	add	ecx, edi
0x3832:	lea	eax, [rax + rdx - 0x788e097f]
0x3839:	mov	edx, esi
0x383b:	xor	edx, edi
0x383d:	xor	edx, ecx
0x383f:	add	edx, eax
0x3841:	mov	eax, dword ptr [rsp - 0x24]
0x3845:	rol	edx, 0xb
0x3848:	add	edx, ecx
0x384a:	lea	eax, [rax + rsi + 0x6d9d6122]
0x3851:	mov	esi, edi
0x3853:	lea	edi, [r12 + rdi - 0x21ac7f4]
0x385b:	xor	esi, ecx
0x385d:	xor	esi, edx
0x385f:	add	esi, eax
0x3861:	mov	eax, ecx
0x3863:	rol	esi, 0x10
0x3866:	xor	eax, edx
0x3868:	add	esi, edx
0x386a:	xor	eax, esi
0x386c:	mov	r10d, esi
0x386f:	add	eax, edi
0x3871:	mov	edi, dword ptr [rsp - 0x44]
0x3875:	ror	eax, 9
0x3878:	add	eax, esi
0x387a:	lea	edi, [rdi + rcx - 0x5b4115bc]
0x3881:	mov	ecx, edx
0x3883:	xor	r10d, eax
0x3886:	xor	ecx, esi
0x3888:	lea	esi, [r13 + rsi - 0x944b4a0]
0x3890:	xor	ecx, eax
0x3892:	add	ecx, edi
0x3894:	mov	edi, dword ptr [rsp - 0x38]
0x3898:	rol	ecx, 4
0x389b:	add	ecx, eax
0x389d:	lea	edx, [rdi + rdx + 0x4bdecfa9]
0x38a4:	mov	edi, r10d
0x38a7:	xor	edi, ecx
0x38a9:	add	edi, edx
0x38ab:	mov	edx, eax
0x38ad:	rol	edi, 0xb
0x38b0:	xor	edx, ecx
0x38b2:	add	edi, ecx
0x38b4:	xor	edx, edi
0x38b6:	add	edx, esi
0x38b8:	mov	esi, dword ptr [rsp - 0x28]
0x38bc:	rol	edx, 0x10
0x38bf:	add	edx, edi
0x38c1:	lea	eax, [rsi + rax - 0x41404390]
0x38c8:	mov	esi, ecx
0x38ca:	xor	esi, edi
0x38cc:	xor	esi, edx
0x38ce:	add	esi, eax
0x38d0:	lea	eax, [r8 + rcx + 0x289b7ec6]
0x38d8:	mov	ecx, edi
0x38da:	ror	esi, 9
0x38dd:	xor	ecx, edx
0x38df:	lea	edi, [r14 + rdi - 0x155ed806]
0x38e7:	add	esi, edx
0x38e9:	xor	ecx, esi
0x38eb:	mov	r10d, esi
0x38ee:	add	ecx, eax
0x38f0:	mov	eax, edx
0x38f2:	rol	ecx, 4
0x38f5:	xor	eax, esi
0x38f7:	add	ecx, esi
0x38f9:	xor	eax, ecx
0x38fb:	xor	r10d, ecx
0x38fe:	add	eax, edi
0x3900:	mov	edi, dword ptr [rsp - 0x3c]
0x3904:	rol	eax, 0xb
0x3907:	add	eax, ecx
0x3909:	lea	edx, [rdi + rdx - 0x2b10cf7b]
0x3910:	mov	edi, r10d
0x3913:	xor	edi, eax
0x3915:	add	edi, edx
0x3917:	mov	edx, dword ptr [rsp - 0x1c]
0x391b:	rol	edi, 0x10
0x391e:	add	edi, eax
0x3920:	lea	edx, [rdx + rsi + 0x4881d05]
0x3927:	mov	esi, ecx
0x3929:	xor	esi, eax
0x392b:	xor	esi, edi
0x392d:	add	esi, edx
0x392f:	mov	edx, dword ptr [rsp - 0x2c]
0x3933:	ror	esi, 9
0x3936:	add	esi, edi


0x3938:	lea	ecx, [rdx + rcx - 0x262b2fc7]
0x393f:	mov	edx, eax
0x3941:	lea	eax, [rbp + rax - 0x1924661b]
0x3948:	xor	edx, edi
0x394a:	mov	r10d, esi
0x394d:	xor	edx, esi
0x394f:	add	edx, ecx
0x3951:	mov	ecx, edi
0x3953:	rol	edx, 4
0x3956:	add	edx, esi
0x3958:	xor	ecx, esi
0x395a:	xor	ecx, edx
0x395c:	xor	r10d, edx
0x395f:	add	ecx, eax
0x3961:	lea	eax, [r9 + rdi + 0x1fa27cf8]
0x3969:	mov	edi, r10d
0x396c:	rol	ecx, 0xb
0x396f:	mov	r10d, dword ptr [rsp - 0x34]
0x3974:	add	ecx, edx
0x3976:	xor	edi, ecx
0x3978:	add	edi, eax
0x397a:	mov	eax, dword ptr [rsp - 0x40]
0x397e:	rol	edi, 0x10
0x3981:	add	edi, ecx
0x3983:	lea	esi, [rax + rsi - 0x3b53a99b]
0x398a:	mov	eax, edx
0x398c:	xor	eax, ecx
0x398e:	xor	eax, edi
0x3990:	add	eax, esi
0x3992:	lea	esi, [r14 + rdx - 0xbd6ddbc]
0x399a:	mov	edx, ecx
0x399c:	ror	eax, 9
0x399f:	not	edx
0x39a1:	mov	r14d, dword ptr [rsp - 0x44]
0x39a6:	add	eax, edi
0x39a8:	or	edx, eax
0x39aa:	xor	edx, edi
0x39ac:	add	edx, esi
0x39ae:	lea	esi, [r13 + rcx + 0x432aff97]
0x39b6:	mov	r13d, edi
0x39b9:	rol	edx, 6
0x39bc:	not	r13d
0x39bf:	lea	edi, [r12 + rdi - 0x546bdc59]
0x39c7:	add	edx, eax
0x39c9:	mov	ecx, r13d
0x39cc:	or	ecx, edx
0x39ce:	mov	r13d, edx
0x39d1:	xor	ecx, eax
0x39d3:	not	r13d
0x39d6:	add	ecx, esi
0x39d8:	mov	esi, eax
0x39da:	rol	ecx, 0xa
0x39dd:	not	esi
0x39df:	add	ecx, edx
0x39e1:	or	esi, ecx
0x39e3:	mov	r12d, ecx
0x39e6:	xor	esi, edx
0x39e8:	not	r12d
0x39eb:	add	esi, edi
0x39ed:	lea	edi, [r10 + rax - 0x36c5fc7]
0x39f5:	mov	eax, r13d
0x39f8:	rol	esi, 0xf
0x39fb:	mov	r10d, dword ptr [rsp - 0x1c]
0x3a00:	add	esi, ecx
0x3a02:	or	eax, esi
0x3a04:	xor	eax, ecx
0x3a06:	add	eax, edi
0x3a08:	lea	edi, [rbp + rdx + 0x655b59c3]
0x3a0f:	mov	ebp, dword ptr [rsp - 0x3c]
0x3a13:	ror	eax, 0xb
0x3a16:	mov	edx, r12d
0x3a19:	add	eax, esi
0x3a1b:	or	edx, eax
0x3a1d:	xor	edx, esi
0x3a1f:	add	edx, edi
0x3a21:	lea	edi, [rbp + rcx - 0x70f3336e]
0x3a28:	mov	ebp, esi
0x3a2a:	rol	edx, 6
0x3a2d:	not	ebp
0x3a2f:	add	edx, eax
0x3a31:	mov	ecx, ebp
0x3a33:	or	ecx, edx
0x3a35:	mov	ebp, edx
0x3a37:	xor	ecx, eax
0x3a39:	not	ebp
0x3a3b:	add	ecx, edi
0x3a3d:	mov	edi, dword ptr [rsp - 0x28]
0x3a41:	rol	ecx, 0xa
0x3a44:	add	ecx, edx
0x3a46:	lea	edi, [rdi + rsi - 0x100b83]
0x3a4d:	mov	esi, eax
0x3a4f:	not	esi
0x3a51:	or	esi, ecx
0x3a53:	xor	esi, edx
0x3a55:	add	esi, edi
0x3a57:	lea	edi, [r14 + rax - 0x7a7ba22f]
0x3a5f:	mov	eax, ebp
0x3a61:	rol	esi, 0xf
0x3a64:	mov	r14d, dword ptr [rsp - 0x30]


0x3a69:	mov	ebp, ecx
0x3a6b:	add	esi, ecx
0x3a6d:	not	ebp
0x3a6f:	or	eax, esi
0x3a71:	xor	eax, ecx
0x3a73:	add	eax, edi
0x3a75:	lea	edi, [r14 + rdx + 0x6fa87e4f]
0x3a7d:	mov	edx, ebp
0x3a7f:	ror	eax, 0xb
0x3a82:	mov	ebp, esi
0x3a84:	mov	r14d, dword ptr [rsp - 0x24]
0x3a89:	add	eax, esi
0x3a8b:	not	ebp
0x3a8d:	or	edx, eax
0x3a8f:	xor	edx, esi
0x3a91:	add	edx, edi
0x3a93:	lea	edi, [r9 + rcx - 0x1d31920]
0x3a9b:	mov	ecx, ebp
0x3a9d:	rol	edx, 6
0x3aa0:	mov	r9d, dword ptr [rsp - 0x38]
0x3aa5:	add	edx, eax
0x3aa7:	or	ecx, edx
0x3aa9:	xor	ecx, eax
0x3aab:	add	ecx, edi
0x3aad:	lea	edi, [r10 + rsi - 0x5cfebcec]
0x3ab5:	mov	esi, eax
0x3ab7:	rol	ecx, 0xa
0x3aba:	not	esi
0x3abc:	lea	eax, [r8 + rax + 0x4e0811a1]
0x3ac4:	add	ecx, edx
0x3ac6:	mov	r8d, edx
0x3ac9:	mov	r10d, dword ptr [rsp - 0x2c]
0x3ace:	or	esi, ecx
0x3ad0:	not	r8d
0x3ad3:	xor	esi, edx
0x3ad5:	lea	edx, [r9 + rdx - 0x8ac817e]
0x3add:	mov	r9d, ecx
0x3ae0:	add	esi, edi
0x3ae2:	mov	edi, r8d
0x3ae5:	not	r9d
0x3ae8:	rol	esi, 0xf
0x3aeb:	add	esi, ecx
0x3aed:	or	edi, esi
0x3aef:	xor	edi, ecx
0x3af1:	lea	ecx, [r14 + rcx - 0x42c50dcb]
0x3af9:	add	edi, eax
0x3afb:	mov	eax, r9d
0x3afe:	ror	edi, 0xb
0x3b01:	add	edi, esi
0x3b03:	or	eax, edi
0x3b05:	xor	eax, esi
0x3b07:	add	eax, edx
0x3b09:	mov	edx, esi
0x3b0b:	rol	eax, 6
0x3b0e:	not	edx
0x3b10:	add	eax, edi
0x3b12:	or	edx, eax
0x3b14:	xor	edx, edi
0x3b16:	add	edx, ecx
0x3b18:	mov	ecx, dword ptr [rsp - 0x40]
0x3b1c:	rol	edx, 0xa
0x3b1f:	add	edx, eax
0x3b21:	lea	esi, [rcx + rsi + 0x2ad7d2bb]
0x3b28:	mov	ecx, edi
0x3b2a:	lea	edi, [r10 + rdi - 0x14792c6f]
0x3b32:	not	ecx
0x3b34:	or	ecx, edx
0x3b36:	xor	ecx, eax
0x3b38:	add	ecx, esi
0x3b3a:	mov	esi, eax
0x3b3c:	rol	ecx, 0xf
0x3b3f:	not	esi
0x3b41:	add	ecx, edx
0x3b43:	or	esi, ecx
0x3b45:	xor	esi, edx
0x3b47:	add	esi, edi
0x3b49:	ror	esi, 0xb
0x3b4c:	add	esi, ecx
0x3b4e:	add	dword ptr [rsp - 0x18], eax
0x3b52:	add	r15d, ecx
0x3b55:	add	r11d, esi
0x3b58:	add	dword ptr [rsp - 0x20], edx
0x3b5c:	cmp	qword ptr [rsp - 0x10], rbx
0x3b61:	ja	0x3480


0x3d9b:	sub	r12, 0x40
0x3d9f:	lea	rsi, [r13 + 0x5c]
0x3da3:	mov	rdi, rbp
0x3da6:	mov	rdx, r12
0x3da9:	call	0x1770


0x3d3f:	cmp	rbx, r14
0x3d42:	jne	0x3d08


0x3d44:	neg	r15
0x3d47:	shl	r15, 6
0x3d4b:	lea	r12, [r12 + r15 - 0x40]
0x3d50:	mov	edi, dword ptr [r13 + 0x18]
0x3d54:	cmp	r12d, 8
0x3d58:	mov	eax, r12d
0x3d5b:	lea	rcx, [rbp + rdi]
0x3d60:	jae	0x3e40


0x3d08:	movdqu	xmm0, xmmword ptr [rbx]
0x3d0c:	mov	rdx, r13
0x3d0f:	mov	esi, 0x40
0x3d14:	mov	rdi, rbp
0x3d17:	add	rbx, 0x40
0x3d1b:	movups	xmmword ptr [rbp], xmm0
0x3d1f:	movdqu	xmm0, xmmword ptr [rbx - 0x30]
0x3d24:	movups	xmmword ptr [rbp + 0x10], xmm0
0x3d28:	movdqu	xmm0, xmmword ptr [rbx - 0x20]
0x3d2d:	movups	xmmword ptr [rbp + 0x20], xmm0
0x3d31:	movdqu	xmm0, xmmword ptr [rbx - 0x10]
0x3d36:	movups	xmmword ptr [rbp + 0x30], xmm0
0x3d3a:	call	0x3420


0x3c7a:	mov	rsi, rbp
0x3c7d:	mov	rdi, rbx
0x3c80:	pop	rbx
0x3c81:	pop	rbp
0x3c82:	jmp	0x3400


0x2b28:	mov	byte ptr [rip + 0x2075b9], 1
0x2b2f:	pop	rbp
0x2b30:	ret	


0x2d4c:	mov	rsi, r12
0x2d4f:	mov	rdi, rbx
0x2d52:	call	0x4020


0x3fe8:	mov	rsi, rbp
0x3feb:	mov	rdi, rbx
0x3fee:	call	0x3b90


0x6db1:	test	rbp, rbp
0x6db4:	je	0x6dd6


0x6dd6:	add	rsp, 8
0x6dda:	pop	rbx
0x6ddb:	pop	rbp
0x6ddc:	pop	r12
0x6dde:	pop	r13
0x6de0:	pop	r14
0x6de2:	pop	r15
0x6de4:	ret	


0x6db6:	xor	ebx, ebx
0x6db8:	nop	dword ptr [rax + rax]
0x6dc0:	mov	rdx, r15
0x6dc3:	mov	rsi, r14
0x6dc6:	mov	edi, r13d
0x6dc9:	call	qword ptr [r12 + rbx*8]


0x3ff3:	mov	rcx, qword ptr [rsp + 0xa8]
0x3ffb:	xor	rcx, qword ptr fs:[0x28]
0x4004:	jne	0x4010


0x4006:	add	rsp, 0xb8
0x400d:	pop	rbx
0x400e:	pop	rbp
0x400f:	ret	


0x4010:	call	0x1690


0x1690:	jmp	qword ptr [rip + 0x2087fa]




0x2cf0:	jmp	0x2c6e


0x2c6e:	add	rbx, 1
0x2c72:	movzx	esi, byte ptr [rbx]
0x2c75:	test	sil, sil
0x2c78:	je	0x2cae


0x2cca:	jmp	0x2c6e


0x678f:	test	rax, rax
0x6792:	je	0x6799


0x6794:	add	rsp, 8
0x6798:	ret	


0x2bea:	mov	rcx, qword ptr [rax]
0x2bed:	mov	rax, rbx
0x2bf0:	jmp	0x2c05


0x2c05:	movzx	edx, byte ptr [rax]
0x2c08:	test	byte ptr [rcx + rdx*2 + 1], 0x10
0x2c0d:	jne	0x2bf8


0x2c0f:	add	rsp, 8
0x2c13:	xor	eax, eax
0x2c15:	pop	rbx
0x2c16:	pop	rbp
0x2c17:	ret	


0x2bf8:	add	rax, 1
0x2bfc:	mov	edx, eax
0x2bfe:	sub	edx, ebx
0x2c00:	cmp	rdx, rbp
0x2c03:	jae	0x2c23


0x2c23:	cmp	byte ptr [rax], 0
0x2c26:	sete	al
0x2c29:	add	rsp, 8
0x2c2d:	pop	rbx
0x2c2e:	pop	rbp
0x2c2f:	ret	


0x3e24:	mov	esi, dword ptr [r13 + 0x18]
0x3e28:	add	esi, r14d
0x3e2b:	cmp	esi, 0x40
0x3e2e:	mov	dword ptr [r13 + 0x18], esi
0x3e32:	ja	0x3e90


0x3e34:	add	rbx, r14
0x3e37:	sub	r12, r14
0x3e3a:	jmp	0x3cd2


0x3e90:	and	esi, 0xffffffc0
0x3e93:	mov	rdx, r13
0x3e96:	mov	rdi, r15
0x3e99:	call	0x3420


0x3e9e:	mov	ecx, dword ptr [r13 + 0x18]
0x3ea2:	lea	rax, [rbp + r14]
0x3ea7:	and	rax, 0xffffffffffffffc0
0x3eab:	mov	edx, ecx
0x3ead:	add	rax, r15
0x3eb0:	and	edx, 0x3f
0x3eb3:	cmp	edx, 8
0x3eb6:	mov	dword ptr [r13 + 0x18], edx
0x3eba:	jae	0x3ef0


0x3ebc:	test	cl, 4
0x3ebf:	jne	0x3f3f


0x3ef0:	mov	rcx, qword ptr [rax]
0x3ef3:	mov	qword ptr [r13 + 0x1c], rcx
0x3ef7:	mov	ecx, edx
0x3ef9:	mov	rsi, qword ptr [rax + rcx - 8]
0x3efe:	mov	qword ptr [r15 + rcx - 8], rsi
0x3f03:	lea	rcx, [r13 + 0x24]
0x3f07:	and	rcx, 0xfffffffffffffff8
0x3f0b:	sub	r15, rcx
0x3f0e:	sub	rax, r15
0x3f11:	add	r15d, edx
0x3f14:	and	r15d, 0xfffffff8
0x3f18:	cmp	r15d, 8
0x3f1c:	jb	0x3e34


0x3ec1:	test	edx, edx
0x3ec3:	je	0x3e34


0x3f3f:	mov	ecx, dword ptr [rax]
0x3f41:	mov	dword ptr [r13 + 0x1c], ecx
0x3f45:	mov	eax, dword ptr [rax + rdx - 4]
0x3f49:	mov	dword ptr [r15 + rdx - 4], eax
0x3f4e:	jmp	0x3e34


0x3f22:	and	r15d, 0xfffffff8
0x3f26:	xor	edx, edx
0x3f28:	mov	esi, edx
0x3f2a:	add	edx, 8
0x3f2d:	mov	rdi, qword ptr [rax + rsi]
0x3f31:	cmp	edx, r15d
0x3f34:	mov	qword ptr [rcx + rsi], rdi
0x3f38:	jb	0x3f28


0x3ec9:	movzx	esi, byte ptr [rax]
0x3ecc:	and	ecx, 2
0x3ecf:	mov	byte ptr [r13 + 0x1c], sil
0x3ed3:	je	0x3e34


0x3f28:	mov	esi, edx
0x3f2a:	add	edx, 8
0x3f2d:	mov	rdi, qword ptr [rax + rsi]
0x3f31:	cmp	edx, r15d
0x3f34:	mov	qword ptr [rcx + rsi], rdi
0x3f38:	jb	0x3f28


0x3f3a:	jmp	0x3e34


0x3ed9:	movzx	eax, word ptr [rax + rdx - 2]
0x3ede:	mov	word ptr [r15 + rdx - 2], ax
0x3ee4:	jmp	0x3e34


0x4253:	test	rax, rax
0x4256:	je	0x42ad


0x42ad:	mov	qword ptr [rip + 0x205e6c], rbx
0x42b4:	mov	qword ptr [rip + 0x205e05], rbx
0x42bb:	pop	rbx
0x42bc:	ret	


0x4258:	lea	r8, [rax + 1]
0x425c:	mov	rdx, r8
0x425f:	sub	rdx, rbx
0x4262:	cmp	rdx, 6
0x4266:	jle	0x42ad


0x4268:	lea	rsi, [rax - 6]
0x426c:	lea	rdi, [rip + 0x3805]
0x4273:	mov	ecx, 7
0x4278:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4278:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x427a:	seta	dl
0x427d:	sbb	dl, 0
0x4280:	test	dl, dl
0x4282:	jne	0x42ad


0x4284:	lea	rdi, [rip + 0x37f5]
0x428b:	mov	ecx, 3
0x4290:	mov	rsi, r8
0x4293:	mov	rbx, r8
0x4296:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4296:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4298:	seta	dl
0x429b:	sbb	dl, 0
0x429e:	test	dl, dl
0x42a0:	jne	0x42ad


0x42a2:	lea	rbx, [rax + 4]
0x42a6:	mov	qword ptr [rip + 0x205df3], rbx
0x42ad:	mov	qword ptr [rip + 0x205e6c], rbx
0x42b4:	mov	qword ptr [rip + 0x205e05], rbx
0x42bb:	pop	rbx
0x42bc:	ret	


0x42da:	call	0x15c0


0x5acd:	mov	qword ptr [rip + 0x2045ac], rbx
0x5ad4:	pop	rbx
0x5ad5:	mov	dword ptr [rip + 0x204599], 1
0x5adf:	pop	rbp
0x5ae0:	pop	r12
0x5ae2:	ret	


0x5aa7:	mov	qword ptr [rip + 0x2045de], 0x100
0x5ab2:	mov	qword ptr [rip + 0x2045df], rbx
0x5ab9:	lea	rbx, [rip + 0x2045d0]
0x5ac0:	cmp	r12, rbx
0x5ac3:	je	0x5ad4


0x662d:	xor	eax, eax
0x662f:	pop	rbx
0x6630:	ret	


0x5a8c:	cmp	rbx, rbp
0x5a8f:	jne	0x5a80


0x5a80:	mov	rdi, qword ptr [rbx]
0x5a83:	add	rbx, 0x10
0x5a87:	call	0x15b0


0x5fbc:	lea	rsi, [rip + 0x1fb8]
0x5fc3:	xor	edi, edi
0x5fc5:	mov	edx, 5
0x5fca:	call	0x1660


0x60d1:	jmp	0x5fbc


0x6616:	test	rax, rax
0x6619:	jne	0x6620


0x661b:	test	rbx, rbx
0x661e:	jne	0x6631


0x6620:	pop	rbx
0x6621:	ret	


0x6631:	call	0x67f0


0x69f5:	mov	ebx, eax
0x69f7:	jmp	0x6990


0x6990:	mov	rcx, qword ptr [rsp + 0x18]
0x6995:	xor	rcx, qword ptr fs:[0x28]
0x699e:	mov	eax, ebx
0x69a0:	jne	0x6afd


0x69a6:	add	rsp, 0x50
0x69aa:	pop	rbx
0x69ab:	pop	rbp
0x69ac:	pop	r12
0x69ae:	ret	


0x6afd:	call	0x1690


0x6989:	mov	ebx, eax
0x698b:	nop	dword ptr [rax + rax]
0x6990:	mov	rcx, qword ptr [rsp + 0x18]
0x6995:	xor	rcx, qword ptr fs:[0x28]
0x699e:	mov	eax, ebx
0x69a0:	jne	0x6afd


0x6a4c:	mov	ebx, eax
0x6a4e:	jmp	0x6990


0x6935:	test	eax, eax
0x6937:	mov	ebx, eax
0x6939:	js	0x6ac8


0x6ac8:	call	0x15d0


0x693f:	mov	dword ptr [rip + 0x20392f], 1
0x6949:	jmp	0x6990


0x6a5c:	test	eax, eax
0x6a5e:	mov	ebx, eax
0x6a60:	js	0x6990


0x6a66:	cmp	dword ptr [rip + 0x20380b], -1
0x6a6d:	jne	0x6990


0x6a73:	xor	eax, eax
0x6a75:	mov	esi, 1
0x6a7a:	mov	edi, ebx
0x6a7c:	call	0x1610


0x6a81:	test	eax, eax
0x6a83:	js	0x6aa1


0x6aa1:	call	0x15d0


0x6a85:	or	eax, 1
0x6a88:	mov	esi, 2
0x6a8d:	mov	edi, ebx
0x6a8f:	mov	edx, eax
0x6a91:	xor	eax, eax
0x6a93:	call	0x1610


0x6a98:	cmp	eax, -1
0x6a9b:	jne	0x6990


0x6b13:	mov	ebx, eax
0x6b15:	jmp	0x6990


0x6b3e:	test	eax, eax
0x6b40:	je	0x6b4a


0x6b42:	test	dword ptr [rbx], 0x100
0x6b48:	jne	0x6b58


0x6b58:	mov	rdi, rbx
0x6b5b:	mov	edx, 1
0x6b60:	xor	esi, esi
0x6b62:	call	0x6b70


0x1937:	lea	rsi, [rip + 0x6683]
0x193e:	mov	edi, 6
0x1943:	call	0x1800


0x41ac:	test	rax, rax
0x41af:	mov	rbx, rax
0x41b2:	je	0x41c1


0x41c1:	mov	rax, rbx
0x41c4:	pop	rbx
0x41c5:	pop	rbp
0x41c6:	pop	r12
0x41c8:	ret	


0x41b4:	mov	rdi, rax
0x41b7:	call	0x1780


0x2dd2:	test	rax, rax
0x2dd5:	mov	rbx, rax
0x2dd8:	je	0x2e40


0x2e40:	movzx	r12d, byte ptr [rip + 0x2072aa]
0x2e48:	call	0x15d0


0x2dda:	mov	rdi, rax
0x2ddd:	mov	esi, 2
0x2de2:	call	0x4170


0x2de7:	mov	rsi, r12
0x2dea:	mov	rdi, rbx
0x2ded:	call	0x4020


0x4441:	cmp	r15d, 0xa
0x4445:	mov	qword ptr [rsp + 0x58], rax
0x444a:	ja	0x55ff


0x4450:	lea	rcx, [rip + 0x36a9]
0x4457:	mov	edx, r15d
0x445a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x445e:	add	rax, rcx
0x4461:	jmp	rax


0x55ff:	call	0x15c0


0x2e4d:	mov	rbx, rax
0x2e50:	test	r12b, r12b
0x2e53:	je	0x2e5a


0x2e5a:	mov	rdx, rbp
0x2e5d:	mov	esi, 3
0x2e62:	xor	edi, edi
0x2e64:	call	0x5d80


0x2e55:	cmp	dword ptr [rax], 2
0x2e58:	je	0x2e90


0x2e90:	mov	byte ptr [r13], 1
0x2e95:	jmp	0x2d61


0x2d61:	add	rsp, 8
0x2d65:	mov	eax, r12d
0x2d68:	pop	rbx
0x2d69:	pop	rbp
0x2d6a:	pop	r12
0x2d6c:	pop	r13
0x2d6e:	ret	


0x6aa6:	mov	r12d, dword ptr [rax]
0x6aa9:	mov	rbp, rax
0x6aac:	mov	edi, ebx
0x6aae:	call	0x1710


0x1710:	jmp	qword ptr [rip + 0x2087ba]




0x6acd:	cmp	dword ptr [rax], 0x16
0x6ad0:	jne	0x693f


0x6ad6:	xor	esi, esi
0x6ad8:	xor	eax, eax
0x6ada:	mov	edx, r12d
0x6add:	mov	edi, ebp
0x6adf:	call	0x1610


0x6ae4:	test	eax, eax
0x6ae6:	mov	ebx, eax
0x6ae8:	js	0x6990


0x6aee:	mov	dword ptr [rip + 0x203780], 0xffffffff
0x6af8:	jmp	0x6a73


0x5631:	mov	r13, rax
0x5634:	mov	eax, dword ptr [rax]
0x5636:	test	r15d, r15d
0x5639:	mov	rbx, qword ptr [rip + 0x204a40]
0x5640:	mov	dword ptr [rsp + 0x18], eax
0x5644:	js	0x57b1


0x57b1:	call	0x15c0


0x564a:	cmp	dword ptr [rip + 0x204a27], r15d
0x5651:	jg	0x56b5


0x5653:	cmp	r15d, 0x7fffffff
0x565a:	je	0x57b6


0x56b5:	mov	eax, dword ptr [rbp + 4]
0x56b8:	shl	r15, 4
0x56bc:	sub	rsp, 8
0x56c0:	add	rbx, r15
0x56c3:	lea	r15, [rbp + 8]
0x56c7:	mov	r8d, dword ptr [rbp]
0x56cb:	mov	r11, qword ptr [rbx]
0x56ce:	mov	r12, qword ptr [rbx + 8]
0x56d2:	mov	rcx, r14
0x56d5:	or	eax, 1
0x56d8:	mov	dword ptr [rsp + 0x24], eax
0x56dc:	push	qword ptr [rbp + 0x30]
0x56df:	mov	r9d, eax
0x56e2:	push	qword ptr [rbp + 0x28]
0x56e5:	push	r15
0x56e7:	mov	rsi, r11
0x56ea:	mov	rdx, qword ptr [rsp + 0x28]
0x56ef:	mov	rdi, r12
0x56f2:	mov	qword ptr [rsp + 0x30], r11
0x56f7:	call	0x43d0


0x57b6:	call	0x67f0


0x5660:	lea	r12d, [r15 + 1]
0x5664:	lea	rax, [rip + 0x204a25]
0x566b:	movsxd	rsi, r12d
0x566e:	shl	rsi, 4
0x5672:	cmp	rbx, rax
0x5675:	je	0x5790


0x5790:	xor	edi, edi
0x5792:	call	0x6600


0x567b:	mov	rdi, rbx
0x567e:	call	0x6600


0x5683:	mov	rbx, rax
0x5686:	mov	qword ptr [rip + 0x2049f3], rax
0x568d:	movsxd	rdi, dword ptr [rip + 0x2049e4]
0x5694:	mov	edx, r12d
0x5697:	xor	esi, esi
0x5699:	sub	edx, edi
0x569b:	shl	rdi, 4
0x569f:	movsxd	rdx, edx
0x56a2:	add	rdi, rbx
0x56a5:	shl	rdx, 4
0x56a9:	call	0x1700


0x1700:	jmp	qword ptr [rip + 0x2087c2]




0x5797:	movdqa	xmm0, xmmword ptr [rip + 0x2048f1]
0x579f:	mov	rbx, rax
0x57a2:	mov	qword ptr [rip + 0x2048d7], rax
0x57a9:	movups	xmmword ptr [rax], xmm0
0x57ac:	jmp	0x568d


0x568d:	movsxd	rdi, dword ptr [rip + 0x2049e4]
0x5694:	mov	edx, r12d
0x5697:	xor	esi, esi
0x5699:	sub	edx, edi
0x569b:	shl	rdi, 4
0x569f:	movsxd	rdx, edx
0x56a2:	add	rdi, rbx
0x56a5:	shl	rdx, 4
0x56a9:	call	0x1700


0x57cc:	mov	r12d, dword ptr [rax]
0x57cf:	mov	rbp, rax
0x57d2:	lea	rax, [rip + 0x204a67]
0x57d9:	test	rbx, rbx
0x57dc:	mov	esi, 0x38
0x57e1:	cmove	rbx, rax
0x57e5:	mov	rdi, rbx
0x57e8:	call	0x67a0


0x5902:	mov	r12d, dword ptr [rax]
0x5905:	mov	rbp, rax
0x5908:	lea	rax, [rbx + 8]
0x590c:	sub	rsp, 8
0x5910:	mov	r9d, dword ptr [rbx + 4]
0x5914:	push	qword ptr [rbx + 0x30]
0x5917:	mov	r8d, dword ptr [rbx]
0x591a:	push	qword ptr [rbx + 0x28]
0x591d:	mov	rdx, r15
0x5920:	push	rax
0x5921:	mov	rcx, qword ptr [rsp + 0x28]
0x5926:	mov	rsi, r14
0x5929:	mov	rdi, r13
0x592c:	call	0x43d0


0x597f:	test	r12, r12
0x5982:	mov	r13, rax
0x5985:	mov	eax, dword ptr [rax]
0x5987:	sete	bpl
0x598b:	or	ebp, dword ptr [rbx + 4]
0x598e:	lea	r10, [rbx + 8]
0x5992:	sub	rsp, 8
0x5996:	mov	r8d, dword ptr [rbx]
0x5999:	mov	rcx, r15
0x599c:	mov	dword ptr [rsp + 0x14], eax
0x59a0:	push	qword ptr [rbx + 0x30]
0x59a3:	mov	rdx, r14
0x59a6:	push	qword ptr [rbx + 0x28]
0x59a9:	push	r10
0x59ab:	xor	esi, esi
0x59ad:	mov	r9d, ebp
0x59b0:	xor	edi, edi
0x59b2:	mov	qword ptr [rsp + 0x40], r10
0x59b7:	call	0x43d0


0x4054:	mov	r12, rax
0x4057:	mov	eax, 1
0x405c:	test	r12, r12
0x405f:	je	0x40eb


0x40eb:	mov	rcx, qword ptr [rsp + 0xa8]
0x40f3:	xor	rcx, qword ptr fs:[0x28]
0x40fc:	jne	0x414d


0x4065:	movabs	rax, 0xefcdab8967452301
0x406f:	mov	qword ptr [rsp + 0x10], 0
0x4078:	mov	dword ptr [rsp + 0x18], 0
0x4080:	mov	qword ptr [rsp], rax
0x4084:	movabs	rax, 0x1032547698badcfe
0x408e:	mov	r13d, 0x8000
0x4094:	mov	qword ptr [rsp + 8], rax
0x4099:	mov	r15, rsp
0x409c:	xor	ebx, ebx
0x409e:	jmp	0x40c8


0x40fe:	add	rsp, 0xb8
0x4105:	pop	rbx
0x4106:	pop	rbp
0x4107:	pop	r12
0x4109:	pop	r13
0x410b:	pop	r14
0x410d:	pop	r15
0x410f:	ret	


0x414d:	call	0x1690


0x40c8:	test	byte ptr [rbp], 0x10
0x40cc:	je	0x40a0


0x40a0:	lea	rdi, [r12 + rbx]
0x40a4:	mov	rdx, r13
0x40a7:	mov	rcx, rbp
0x40aa:	sub	rdx, rbx
0x40ad:	mov	esi, 1
0x40b2:	call	0x1620


0x40ce:	test	rbx, rbx
0x40d1:	mov	rbp, rsp
0x40d4:	jne	0x4110


0x1620:	jmp	qword ptr [rip + 0x208832]


0x40d6:	mov	rsi, r14
0x40d9:	mov	rdi, rbp
0x40dc:	call	0x3b90


0x4110:	mov	rdx, rbp
0x4113:	mov	rsi, rbx
0x4116:	mov	rdi, r12
0x4119:	call	0x3cb0




0x411e:	jmp	0x40d6


0x40e1:	mov	rdi, r12
0x40e4:	call	0x15b0


0x40e9:	xor	eax, eax
0x40eb:	mov	rcx, qword ptr [rsp + 0xa8]
0x40f3:	xor	rcx, qword ptr fs:[0x28]
0x40fc:	jne	0x414d


0x2df2:	test	eax, eax
0x2df4:	jne	0x2d70


0x2dfa:	mov	rdi, rbx
0x2dfd:	call	0x6830


0x2d70:	mov	rdx, rbp
0x2d73:	xor	edi, edi
0x2d75:	mov	esi, 3
0x2d7a:	call	0x5d80


0x2d57:	test	eax, eax
0x2d59:	jne	0x2d70


0x2d5b:	mov	r12d, 1
0x2d61:	add	rsp, 8
0x2d65:	mov	eax, r12d
0x2d68:	pop	rbx
0x2d69:	pop	rbp
0x2d6a:	pop	r12
0x2d6c:	pop	r13
0x2d6e:	ret	


0x65a9:	test	rax, rax
0x65ac:	jne	0x65b3


0x65ae:	test	rbx, rbx
0x65b1:	jne	0x65b5


0x65b3:	pop	rbx
0x65b4:	ret	


0x65b5:	call	0x67f0


0x6759:	mov	rdx, rbx
0x675c:	xor	esi, esi
0x675e:	mov	rdi, rax
0x6761:	pop	rbx
0x6762:	jmp	0x1700


0x67b4:	add	rsp, 8
0x67b8:	mov	rdx, rbx
0x67bb:	mov	rsi, rbp
0x67be:	pop	rbx
0x67bf:	pop	rbp
0x67c0:	mov	rdi, rax
0x67c3:	jmp	0x1770


0x67d9:	mov	rdi, rbx
0x67dc:	lea	rsi, [rax + 1]
0x67e0:	pop	rbx
0x67e1:	jmp	0x67a0


0x5fcf:	lea	rdx, [rip + 0x22ca]
0x5fd6:	mov	rcx, rax
0x5fd9:	mov	r8d, 0x7e3
0x5fdf:	mov	esi, 1
0x5fe4:	mov	rdi, rbp
0x5fe7:	xor	eax, eax
0x5fe9:	call	0x18a0


0x5fee:	lea	rsi, [rip + 0x2013]
0x5ff5:	xor	edi, edi
0x5ff7:	mov	edx, 5
0x5ffc:	call	0x1660


0x6001:	mov	rsi, rbp
0x6004:	mov	rdi, rax
0x6007:	call	0x1740


0x600c:	cmp	r12, 9
0x6010:	ja	0x6350


0x6016:	lea	rdx, [rip + 0x224b]
0x601d:	movsxd	rax, dword ptr [rdx + r12*4]
0x6021:	add	rax, rdx
0x6024:	jmp	rax


0x6350:	mov	r10, qword ptr [rbx + 0x40]
0x6354:	mov	r9, qword ptr [rbx + 0x38]
0x6358:	mov	edx, 5
0x635d:	mov	rax, qword ptr [rbx + 0x10]
0x6361:	mov	r8, qword ptr [rbx + 8]
0x6365:	lea	rsi, [rip + 0x1e74]
0x636c:	mov	r13, qword ptr [rbx + 0x30]
0x6370:	mov	r12, qword ptr [rbx + 0x28]
0x6374:	mov	r15, qword ptr [rbx + 0x20]
0x6378:	mov	r14, qword ptr [rbx + 0x18]
0x637c:	mov	qword ptr [rsp + 0x18], r10
0x6381:	mov	qword ptr [rsp + 0x10], r9
0x6386:	mov	qword ptr [rsp], rax
0x638a:	mov	qword ptr [rsp + 8], r8
0x638f:	mov	rbx, qword ptr [rbx]
0x6392:	jmp	0x6122


0x6122:	xor	edi, edi
0x6124:	call	0x1660


0x6129:	mov	r10, qword ptr [rsp + 0x18]
0x612e:	push	r10
0x6130:	jmp	0x6074


0x6074:	mov	r9, qword ptr [rsp + 0x18]
0x6079:	mov	rdx, rax
0x607c:	mov	rcx, rbx
0x607f:	mov	esi, 1
0x6084:	mov	rdi, rbp
0x6087:	xor	eax, eax
0x6089:	push	r9
0x608b:	push	r13
0x608d:	push	r12
0x608f:	push	r15
0x6091:	push	r14
0x6093:	mov	r9, qword ptr [rsp + 0x30]
0x6098:	mov	r8, qword ptr [rsp + 0x38]
0x609d:	call	0x18a0


0x60a2:	add	rsp, 0x30
0x60a6:	add	rsp, 0x28
0x60aa:	pop	rbx
0x60ab:	pop	rbp
0x60ac:	pop	r12
0x60ae:	pop	r13
0x60b0:	pop	r14
0x60b2:	pop	r15
0x60b4:	ret	


0x64e6:	mov	rax, qword ptr [rsp + 0x78]
0x64eb:	xor	rax, qword ptr fs:[0x28]
0x64f4:	jne	0x6500


0x64f6:	add	rsp, 0xb8
0x64fd:	pop	rbx
0x64fe:	pop	rbp
0x64ff:	ret	


0x6500:	call	0x1690


0x6410:	mov	rax, qword ptr [rsp + 0x58]
0x6415:	xor	rax, qword ptr fs:[0x28]
0x641e:	jne	0x6425


0x6420:	add	rsp, 0x68
0x6424:	ret	


0x6425:	call	0x1690


0x2edd:	mov	rdi, qword ptr [rip + 0x2071fc]
0x2ee4:	mov	rdx, rax
0x2ee7:	mov	rcx, rbx
0x2eea:	mov	esi, 1
0x2eef:	xor	eax, eax
0x2ef1:	call	0x18a0


0x2ef6:	mov	edi, ebp
0x2ef8:	call	0x1880


0x1880:	jmp	qword ptr [rip + 0x208702]




0x2f0b:	lea	rcx, [rip + 0x3f1f]
0x2f12:	mov	r8d, 0x80
0x2f18:	mov	rdx, rbx
0x2f1b:	mov	rsi, rax
0x2f1e:	mov	edi, 1
0x2f23:	xor	eax, eax
0x2f25:	call	0x1810


0x1810:	jmp	qword ptr [rip + 0x20873a]




0x6534:	lea	rdx, [rip + 0x1a9c]
0x653b:	mov	rsi, rax
0x653e:	mov	edi, 1
0x6543:	xor	eax, eax
0x6545:	call	0x1810


0x6807:	mov	edi, dword ptr [rip + 0x203813]
0x680d:	lea	rdx, [rip + 0x11e1]
0x6814:	mov	rcx, rax
0x6817:	xor	esi, esi
0x6819:	xor	eax, eax
0x681b:	call	0x1830


0x1830:	jmp	qword ptr [rip + 0x20872a]




0x41bc:	cmp	eax, 2
0x41bf:	jbe	0x41d0


0x41d0:	mov	edi, eax
0x41d2:	call	0x5f70


0x6ba3:	mov	edx, r12d
0x6ba6:	mov	rsi, rbp
0x6ba9:	mov	edi, eax
0x6bab:	call	0x16f0


0x16f0:	jmp	qword ptr [rip + 0x2087ca]




0x417d:	mov	ecx, ebx
0x417f:	xor	edx, edx
0x4181:	xor	esi, esi
0x4183:	pop	rbx
0x4184:	mov	edi, eax
0x4186:	jmp	0x1720


0x683c:	test	eax, eax
0x683e:	mov	rdi, rbx
0x6841:	js	0x6897


0x6897:	pop	rbx
0x6898:	pop	rbp
0x6899:	pop	r12
0x689b:	jmp	0x1640


0x6843:	call	0x17c0


0x1640:	jmp	qword ptr [rip + 0x208822]




0x6848:	test	eax, eax
0x684a:	jne	0x6878


0x684c:	mov	rdi, rbx
0x684f:	call	0x6b30


0x6878:	mov	rdi, rbx
0x687b:	call	0x1780


0x6880:	xor	esi, esi
0x6882:	mov	edx, 1
0x6887:	mov	edi, eax
0x6889:	call	0x16f0


0x6c07:	cmp	rax, -3
0x6c0b:	mov	rbp, rax
0x6c0e:	jbe	0x6c30


0x6c30:	mov	rdx, qword ptr [rsp + 8]
0x6c35:	xor	rdx, qword ptr fs:[0x28]
0x6c3e:	mov	rax, rbp
0x6c41:	jne	0x6c4e


0x6c10:	test	r12, r12
0x6c13:	je	0x6c30


0x6c43:	add	rsp, 0x18
0x6c47:	pop	rbx
0x6c48:	pop	rbp
0x6c49:	pop	r12
0x6c4b:	pop	r13
0x6c4d:	ret	


0x6c4e:	call	0x1690


0x6c15:	xor	edi, edi
0x6c17:	call	0x6ce0


0x6c6c:	mov	ebx, dword ptr [rbp]
0x6c6f:	mov	rdi, rbp
0x6c72:	mov	r12, rax
0x6c75:	call	0x6830


0x1948:	lea	rsi, [rip + 0x5592]
0x194f:	lea	rdi, [rip + 0x5562]
0x1956:	call	0x1650


0x1650:	jmp	qword ptr [rip + 0x20881a]




0x6ceb:	mov	rdx, rax
0x6cee:	mov	eax, 1
0x6cf3:	test	rdx, rdx
0x6cf6:	je	0x6d15


0x6d15:	add	rsp, 8
0x6d19:	ret	


0x6cf8:	lea	rdi, [rip + 0x15e1]
0x6cff:	mov	ecx, 2
0x6d04:	mov	rsi, rdx
0x6d07:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6d07:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6d09:	seta	cl
0x6d0c:	sbb	cl, 0
0x6d0f:	xor	eax, eax
0x6d11:	test	cl, cl
0x6d13:	jne	0x6d20


0x6d20:	lea	rdi, [rip + 0x15bb]
0x6d27:	mov	ecx, 6
0x6d2c:	mov	rsi, rdx
0x6d2f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6d2f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6d31:	seta	al
0x6d34:	sbb	al, 0
0x6d36:	test	al, al
0x6d38:	setne	al
0x6d3b:	add	rsp, 8
0x6d3f:	ret	


0x6c1c:	test	al, al
0x6c1e:	jne	0x6c30


0x6c20:	movzx	eax, byte ptr [r13]
0x6c25:	mov	ebp, 1
0x6c2a:	mov	dword ptr [rbx], eax
0x6c2c:	nop	dword ptr [rax]
0x6c30:	mov	rdx, qword ptr [rsp + 8]
0x6c35:	xor	rdx, qword ptr fs:[0x28]
0x6c3e:	mov	rax, rbp
0x6c41:	jne	0x6c4e


0x6d4e:	test	rax, rax
0x6d51:	je	0x6d70


0x6d70:	lea	rax, [rip + 0x1571]
0x6d77:	add	rsp, 8
0x6d7b:	ret	


0x6d53:	cmp	byte ptr [rax], 0
0x6d56:	lea	rdx, [rip + 0x158b]
0x6d5d:	cmove	rax, rdx
0x6d61:	add	rsp, 8
0x6d65:	ret	


0x42f0:	movzx	edx, byte ptr [rax]
0x42f3:	and	edx, 0xffffffdf
0x42f6:	cmp	dl, 0x55
0x42f9:	je	0x4370


0x4370:	movzx	edx, byte ptr [rax + 1]
0x4374:	and	edx, 0xffffffdf
0x4377:	cmp	dl, 0x54
0x437a:	jne	0x4300


0x42fb:	cmp	dl, 0x47
0x42fe:	je	0x4320


0x437c:	movzx	edx, byte ptr [rax + 2]
0x4380:	and	edx, 0xffffffdf
0x4383:	cmp	dl, 0x46
0x4386:	jne	0x4300


0x4300:	lea	rax, [rip + 0x378c]
0x4307:	lea	rdx, [rip + 0x3787]
0x430e:	cmp	ebx, 9
0x4311:	cmovne	rax, rdx
0x4315:	add	rsp, 8
0x4319:	pop	rbx
0x431a:	pop	rbp
0x431b:	ret	


0x4320:	movzx	edx, byte ptr [rax + 1]
0x4324:	and	edx, 0xffffffdf
0x4327:	cmp	dl, 0x42
0x432a:	jne	0x4300


0x438c:	cmp	byte ptr [rax + 3], 0x2d
0x4390:	jne	0x4300


0x432c:	cmp	byte ptr [rax + 2], 0x31
0x4330:	jne	0x4300


0x4396:	cmp	byte ptr [rax + 4], 0x38
0x439a:	jne	0x4300


0x4332:	cmp	byte ptr [rax + 3], 0x38
0x4336:	jne	0x4300


0x43a0:	cmp	byte ptr [rax + 5], 0
0x43a4:	jne	0x4300


0x4338:	cmp	byte ptr [rax + 4], 0x30
0x433c:	jne	0x4300


0x43aa:	cmp	byte ptr [rbp], 0x60
0x43ae:	lea	rax, [rip + 0x36cf]
0x43b5:	lea	rdx, [rip + 0x36cc]
0x43bc:	cmovne	rax, rdx
0x43c0:	add	rsp, 8
0x43c4:	pop	rbx
0x43c5:	pop	rbp
0x43c6:	ret	


0x433e:	cmp	byte ptr [rax + 5], 0x33
0x4342:	jne	0x4300


0x4344:	cmp	byte ptr [rax + 6], 0x30
0x4348:	jne	0x4300


0x434a:	cmp	byte ptr [rax + 7], 0
0x434e:	jne	0x4300


0x4350:	cmp	byte ptr [rbp], 0x60
0x4354:	lea	rax, [rip + 0x3731]
0x435b:	lea	rdx, [rip + 0x372e]
0x4362:	cmovne	rax, rdx
0x4366:	add	rsp, 8
0x436a:	pop	rbx
0x436b:	pop	rbp
0x436c:	ret	


0x195b:	lea	rdi, [rip + 0x5556]
0x1962:	call	0x1630


0x1630:	jmp	qword ptr [rip + 0x20882a]




0x688e:	cmp	rax, -1
0x6892:	jne	0x684c


0x6894:	mov	rdi, rbx
0x6897:	pop	rbx
0x6898:	pop	rbp
0x6899:	pop	r12
0x689b:	jmp	0x1640


0x6bb0:	cmp	rax, -1
0x6bb4:	je	0x6bc2


0x6bc2:	pop	rbx
0x6bc3:	pop	rbp
0x6bc4:	pop	r12
0x6bc6:	ret	


0x6bb6:	and	dword ptr [rbx], 0xffffffef
0x6bb9:	mov	qword ptr [rbx + 0x90], rax
0x6bc0:	xor	eax, eax
0x6bc2:	pop	rbx
0x6bc3:	pop	rbp
0x6bc4:	pop	r12
0x6bc6:	ret	


0x41d7:	test	eax, eax
0x41d9:	mov	r12d, eax
0x41dc:	js	0x4218


0x4218:	call	0x15d0


0x41de:	mov	rdi, rbx
0x41e1:	call	0x6830


0x421d:	mov	r12d, dword ptr [rax]
0x4220:	mov	rbp, rax
0x4223:	mov	rdi, rbx
0x4226:	call	0x6830


0x6820:	call	0x15c0


0x654a:	lea	rsi, [rip + 0x1a9c]
0x6551:	mov	edx, 5
0x6556:	xor	edi, edi
0x6558:	call	0x1660


0x655d:	lea	rcx, [rip + 0xff4]
0x6564:	lea	rdx, [rip + 0x949]
0x656b:	mov	rsi, rax
0x656e:	mov	edi, 1
0x6573:	xor	eax, eax
0x6575:	call	0x1810


0x657a:	mov	rbx, qword ptr [rip + 0x203b27]
0x6581:	lea	rsi, [rip + 0x1c98]
0x6588:	xor	edi, edi
0x658a:	mov	edx, 5
0x658f:	call	0x1660


0x6594:	mov	rsi, rbx
0x6597:	mov	rdi, rax
0x659a:	pop	rbx
0x659b:	jmp	0x1740


0x2f2a:	mov	rbx, qword ptr [rip + 0x207177]
0x2f31:	lea	rsi, [rip + 0x4130]
0x2f38:	mov	edx, 5
0x2f3d:	xor	edi, edi
0x2f3f:	call	0x1660


0x2f44:	mov	rsi, rbx
0x2f47:	mov	rdi, rax
0x2f4a:	call	0x1740


0x2f4f:	mov	rbx, qword ptr [rip + 0x207152]
0x2f56:	lea	rsi, [rip + 0x4143]
0x2f5d:	mov	edx, 5
0x2f62:	xor	edi, edi
0x2f64:	call	0x1660


0x2f69:	mov	rsi, rbx
0x2f6c:	mov	rdi, rax
0x2f6f:	call	0x1740


0x2f74:	lea	rsi, [rip + 0x4155]
0x2f7b:	xor	edi, edi
0x2f7d:	mov	edx, 5
0x2f82:	call	0x1660


0x2f87:	lea	rdx, [rip + 0x3ea3]
0x2f8e:	mov	rsi, rax
0x2f91:	mov	edi, 1
0x2f96:	xor	eax, eax
0x2f98:	call	0x1810


0x2f9d:	mov	rbx, qword ptr [rip + 0x207104]
0x2fa4:	lea	rsi, [rip + 0x416d]
0x2fab:	mov	edx, 5
0x2fb0:	xor	edi, edi
0x2fb2:	call	0x1660


0x2fb7:	mov	rsi, rbx
0x2fba:	mov	rdi, rax
0x2fbd:	call	0x1740


0x2fc2:	mov	rbx, qword ptr [rip + 0x2070df]
0x2fc9:	lea	rsi, [rip + 0x4180]
0x2fd0:	mov	edx, 5
0x2fd5:	xor	edi, edi
0x2fd7:	call	0x1660


0x2fdc:	mov	rsi, rbx
0x2fdf:	mov	rdi, rax
0x2fe2:	call	0x1740


0x2fe7:	mov	rbx, qword ptr [rip + 0x2070ba]
0x2fee:	lea	rsi, [rip + 0x4193]
0x2ff5:	mov	edx, 5
0x2ffa:	xor	edi, edi
0x2ffc:	call	0x1660


0x3001:	mov	rsi, rbx
0x3004:	mov	rdi, rax
0x3007:	call	0x1740


0x300c:	mov	rbx, qword ptr [rip + 0x207095]
0x3013:	lea	rsi, [rip + 0x41ee]
0x301a:	mov	edx, 5
0x301f:	xor	edi, edi
0x3021:	call	0x1660


0x3026:	mov	rsi, rbx
0x3029:	mov	rdi, rax
0x302c:	call	0x1740


0x3031:	mov	rbx, qword ptr [rip + 0x207070]
0x3038:	lea	rsi, [rip + 0x4381]
0x303f:	mov	edx, 5
0x3044:	xor	edi, edi
0x3046:	call	0x1660


0x304b:	mov	rsi, rbx
0x304e:	mov	rdi, rax
0x3051:	call	0x1740


0x3056:	mov	rbx, qword ptr [rip + 0x20704b]
0x305d:	lea	rsi, [rip + 0x438c]
0x3064:	mov	edx, 5
0x3069:	xor	edi, edi
0x306b:	call	0x1660


0x3070:	mov	rsi, rbx
0x3073:	mov	rdi, rax
0x3076:	lea	rbx, [rip + 0x3dad]
0x307d:	call	0x1740


0x3082:	lea	rsi, [rip + 0x439f]
0x3089:	xor	edi, edi
0x308b:	mov	edx, 5
0x3090:	call	0x1660


0x3095:	lea	rdx, [rip + 0x3d99]
0x309c:	mov	rsi, rax
0x309f:	mov	edi, 1
0x30a4:	xor	eax, eax
0x30a6:	call	0x1810


0x30ab:	lea	rax, [rip + 0x3d8c]
0x30b2:	lea	rcx, [rip + 0x3dc6]
0x30b9:	mov	qword ptr [rsp + 0x60], 0
0x30c2:	mov	qword ptr [rsp + 0x68], 0
0x30cb:	mov	rdx, rsp
0x30ce:	mov	qword ptr [rsp], rax
0x30d2:	lea	rax, [rip + 0x3d67]
0x30d9:	mov	qword ptr [rsp + 0x30], rcx
0x30de:	lea	rcx, [rip + 0x3da4]
0x30e5:	mov	qword ptr [rsp + 8], rax
0x30ea:	lea	rax, [rip + 0x3dc7]
0x30f1:	mov	qword ptr [rsp + 0x40], rcx
0x30f6:	lea	rcx, [rip + 0x3d96]
0x30fd:	mov	qword ptr [rsp + 0x10], rax
0x3102:	lea	rax, [rip + 0x3d47]
0x3109:	mov	qword ptr [rsp + 0x50], rcx
0x310e:	mov	qword ptr [rsp + 0x18], rax
0x3113:	lea	rax, [rip + 0x3d4c]
0x311a:	mov	qword ptr [rsp + 0x20], rax
0x311f:	lea	rax, [rip + 0x3d4a]
0x3126:	mov	qword ptr [rsp + 0x28], rax
0x312b:	mov	qword ptr [rsp + 0x38], rax
0x3130:	mov	qword ptr [rsp + 0x48], rax
0x3135:	mov	qword ptr [rsp + 0x58], rax
0x313a:	nop	word ptr [rax + rax]
0x3140:	add	rdx, 0x10
0x3144:	mov	rdi, qword ptr [rdx]
0x3147:	test	rdi, rdi
0x314a:	je	0x315f


0x315f:	mov	r12, qword ptr [rdx + 8]
0x3163:	xor	edi, edi
0x3165:	mov	edx, 5
0x316a:	lea	rsi, [rip + 0x3d2c]
0x3171:	test	r12, r12
0x3174:	je	0x323b


0x314c:	mov	ecx, 7
0x3151:	mov	rsi, rbx
0x3154:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x323b:	call	0x1660


0x317a:	call	0x1660


0x3154:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3156:	seta	al
0x3159:	sbb	al, 0
0x315b:	test	al, al
0x315d:	jne	0x3140


0x3140:	add	rdx, 0x10
0x3144:	mov	rdi, qword ptr [rdx]
0x3147:	test	rdi, rdi
0x314a:	je	0x315f


0x317f:	lea	rcx, [rip + 0x43d2]
0x3186:	lea	rdx, [rip + 0x3d27]
0x318d:	mov	rsi, rax
0x3190:	mov	edi, 1
0x3195:	xor	eax, eax
0x3197:	call	0x1810


0x319c:	xor	esi, esi
0x319e:	mov	edi, 5
0x31a3:	call	0x1800


0x31a8:	test	rax, rax
0x31ab:	je	0x31c9


0x31c9:	lea	rsi, [rip + 0x3cf6]
0x31d0:	xor	edi, edi
0x31d2:	mov	edx, 5
0x31d7:	call	0x1660


0x31ad:	lea	rsi, [rip + 0x3d0e]
0x31b4:	mov	edx, 3
0x31b9:	mov	rdi, rax
0x31bc:	call	0x15e0


0x15e0:	jmp	qword ptr [rip + 0x208852]




0x31dc:	lea	rcx, [rip + 0x3c47]
0x31e3:	lea	rdx, [rip + 0x436e]
0x31ea:	mov	rsi, rax
0x31ed:	mov	edi, 1
0x31f2:	xor	eax, eax
0x31f4:	call	0x1810


0x31f9:	cmp	r12, rbx
0x31fc:	lea	rcx, [rip + 0x3c57]
0x3203:	lea	rbx, [rip + 0x4db7]
0x320a:	cmove	rbx, rcx
0x320e:	lea	rsi, [rip + 0x43b3]
0x3215:	xor	edi, edi
0x3217:	mov	edx, 5
0x321c:	call	0x1660


0x3221:	mov	rcx, rbx
0x3224:	mov	rsi, rax
0x3227:	mov	rdx, r12
0x322a:	mov	edi, 1
0x322f:	xor	eax, eax
0x3231:	call	0x1810


0x3236:	jmp	0x2ef6


0x3240:	lea	rcx, [rip + 0x4311]
0x3247:	lea	rdx, [rip + 0x3c66]
0x324e:	mov	rsi, rax
0x3251:	mov	edi, 1
0x3256:	xor	eax, eax
0x3258:	call	0x1810


0x325d:	xor	esi, esi
0x325f:	mov	edi, 5
0x3264:	call	0x1800


0x3269:	test	rax, rax
0x326c:	je	0x3286


0x3286:	lea	rsi, [rip + 0x3c39]
0x328d:	mov	edx, 5
0x3292:	xor	edi, edi
0x3294:	lea	r12, [rip + 0x3b8f]
0x329b:	lea	rbx, [rip + 0x3bb8]
0x32a2:	call	0x1660


0x326e:	lea	rsi, [rip + 0x3c4d]
0x3275:	mov	edx, 3
0x327a:	mov	rdi, rax
0x327d:	call	0x15e0


0x32a7:	lea	rcx, [rip + 0x3b7c]
0x32ae:	lea	rdx, [rip + 0x42a3]
0x32b5:	mov	rsi, rax
0x32b8:	mov	edi, 1
0x32bd:	xor	eax, eax
0x32bf:	call	0x1810


0x32c4:	jmp	0x320e


0x320e:	lea	rsi, [rip + 0x43b3]
0x3215:	xor	edi, edi
0x3217:	mov	edx, 5
0x321c:	call	0x1660


0x40b7:	add	rbx, rax
0x40ba:	cmp	rbx, 0x8000
0x40c1:	je	0x4120


0x4120:	mov	rdx, r15
0x4123:	mov	esi, 0x8000
0x4128:	mov	rdi, r12
0x412b:	call	0x3420


0x40c3:	test	rax, rax
0x40c6:	je	0x4138


0x4138:	test	byte ptr [rbp], 0x20
0x413c:	je	0x40ce


0x413e:	mov	rdi, r12
0x4141:	call	0x15b0


0x4146:	mov	eax, 1
0x414b:	jmp	0x40eb


0x4130:	jmp	0x409c


0x409c:	xor	ebx, ebx
0x409e:	jmp	0x40c8


0x57ed:	mov	dword ptr [rbp], r12d
0x57f1:	pop	rbx
0x57f2:	pop	rbp
0x57f3:	pop	r12
0x57f5:	ret	


0x56ae:	mov	dword ptr [rip + 0x2049c3], r12d
0x56b5:	mov	eax, dword ptr [rbp + 4]
0x56b8:	shl	r15, 4
0x56bc:	sub	rsp, 8
0x56c0:	add	rbx, r15
0x56c3:	lea	r15, [rbp + 8]
0x56c7:	mov	r8d, dword ptr [rbp]
0x56cb:	mov	r11, qword ptr [rbx]
0x56ce:	mov	r12, qword ptr [rbx + 8]
0x56d2:	mov	rcx, r14
0x56d5:	or	eax, 1
0x56d8:	mov	dword ptr [rsp + 0x24], eax
0x56dc:	push	qword ptr [rbp + 0x30]
0x56df:	mov	r9d, eax
0x56e2:	push	qword ptr [rbp + 0x28]
0x56e5:	push	r15
0x56e7:	mov	rsi, r11
0x56ea:	mov	rdx, qword ptr [rsp + 0x28]
0x56ef:	mov	rdi, r12
0x56f2:	mov	qword ptr [rsp + 0x30], r11
0x56f7:	call	0x43d0


0x6ab3:	mov	ebx, 0xffffffff
0x6ab8:	mov	dword ptr [rbp], r12d
0x6abc:	jmp	0x6990


0x6b67:	mov	rdi, rbx
0x6b6a:	pop	rbx
0x6b6b:	jmp	0x17a0


0x3282:	test	eax, eax
0x3284:	jne	0x32c9


0x32c9:	lea	r12, [rip + 0x3b5a]
0x32d0:	mov	r13, qword ptr [rip + 0x206dd1]
0x32d7:	lea	rsi, [rip + 0x42a2]
0x32de:	xor	edi, edi
0x32e0:	mov	edx, 5
0x32e5:	call	0x1660


0x32ea:	mov	rsi, r13
0x32ed:	mov	rdi, rax
0x32f0:	call	0x1740


0x32f5:	jmp	0x31c9


0x31c1:	test	eax, eax
0x31c3:	jne	0x32d0


0x32d0:	mov	r13, qword ptr [rip + 0x206dd1]
0x32d7:	lea	rsi, [rip + 0x42a2]
0x32de:	xor	edi, edi
0x32e0:	mov	edx, 5
0x32e5:	call	0x1660


0x1967:	lea	rdi, [rip + 0x19b2]
0x196e:	call	0x6e00


0x1973:	mov	rdi, qword ptr [rip + 0x20872e]
0x197a:	xor	ecx, ecx
0x197c:	mov	edx, 1
0x1981:	xor	esi, esi
0x1983:	call	0x1820


0x1820:	jmp	qword ptr [rip + 0x208732]




0x6854:	test	eax, eax
0x6856:	je	0x6894


0x6858:	call	0x15d0


0x685d:	mov	r12d, dword ptr [rax]
0x6860:	mov	rdi, rbx
0x6863:	mov	rbp, rax
0x6866:	call	0x1640


0x686b:	test	r12d, r12d
0x686e:	jne	0x68a0


0x6870:	pop	rbx
0x6871:	pop	rbp
0x6872:	pop	r12
0x6874:	ret	


0x68a0:	mov	dword ptr [rbp], r12d
0x68a4:	mov	eax, 0xffffffff
0x68a9:	jmp	0x6870


0x422b:	xor	ebx, ebx
0x422d:	mov	dword ptr [rbp], r12d
0x4231:	jmp	0x41c1


0x41e6:	test	eax, eax
0x41e8:	jne	0x41fd


0x41ea:	mov	rsi, rbp
0x41ed:	mov	edi, r12d
0x41f0:	call	0x17f0


0x41fd:	call	0x15d0


0x17f0:	jmp	qword ptr [rip + 0x20874a]




0x4202:	mov	ebp, dword ptr [rax]
0x4204:	mov	rbx, rax
0x4207:	mov	edi, r12d
0x420a:	call	0x1710


0x420f:	mov	dword ptr [rbx], ebp
0x4211:	xor	ebx, ebx
0x4213:	jmp	0x41c1


0x6c7a:	and	ebx, 0x20
0x6c7d:	test	ebx, ebx
0x6c7f:	jne	0x6c98


0x6c81:	test	eax, eax
0x6c83:	je	0x6c8f


0x6c98:	test	eax, eax
0x6c9a:	jne	0x6cb8


0x6c8f:	pop	rbx
0x6c90:	pop	rbp
0x6c91:	pop	r12
0x6c93:	ret	


0x6c85:	test	r12, r12
0x6c88:	mov	eax, 0xffffffff
0x6c8d:	je	0x6cc8


0x6c9c:	call	0x15d0


0x6cb8:	pop	rbx
0x6cb9:	mov	eax, 0xffffffff
0x6cbe:	pop	rbp
0x6cbf:	pop	r12
0x6cc1:	ret	


0x6cc8:	call	0x15d0


0x6ccd:	cmp	dword ptr [rax], 9
0x6cd0:	pop	rbx
0x6cd1:	pop	rbp
0x6cd2:	pop	r12
0x6cd4:	setne	al
0x6cd7:	movzx	eax, al
0x6cda:	neg	eax
0x6cdc:	ret	


0x6ca1:	mov	dword ptr [rax], 0
0x6ca7:	mov	eax, 0xffffffff
0x6cac:	pop	rbx
0x6cad:	pop	rbp
0x6cae:	pop	r12
0x6cb0:	ret	


0x2e02:	test	eax, eax
0x2e04:	je	0x2d5b


0x2e0a:	mov	rdx, rbp
0x2e0d:	mov	esi, 3
0x2e12:	xor	edi, edi
0x2e14:	call	0x5d80


0x3332:	test	eax, eax
0x3334:	je	0x334c


0x334c:	mov	rdi, qword ptr [rip + 0x206d8d]
0x3353:	call	0x6c60


0x3336:	call	0x15d0


0x333b:	cmp	byte ptr [rip + 0x206dce], 0
0x3342:	mov	rbx, rax
0x3345:	je	0x3363


0x3363:	lea	rsi, [rip + 0x467b]
0x336a:	xor	edi, edi
0x336c:	mov	edx, 5
0x3371:	call	0x1660


0x3347:	cmp	dword ptr [rax], 0x20
0x334a:	jne	0x3363


0x3376:	mov	rdi, qword ptr [rip + 0x206d9b]
0x337d:	mov	rbp, rax
0x3380:	test	rdi, rdi
0x3383:	je	0x33ad


0x33ad:	mov	esi, dword ptr [rbx]
0x33af:	lea	rdx, [rip + 0x463f]
0x33b6:	mov	rcx, rax
0x33b9:	xor	edi, edi
0x33bb:	xor	eax, eax
0x33bd:	call	0x1830


0x3385:	call	0x5d50


0x33c2:	jmp	0x33a2


0x33a2:	mov	edi, dword ptr [rip + 0x206c78]
0x33a8:	call	0x15f0


0x15f0:	jmp	qword ptr [rip + 0x20884a]




0x3358:	test	eax, eax
0x335a:	jne	0x33a2


0x335c:	add	rsp, 8
0x3360:	pop	rbx
0x3361:	pop	rbp
0x3362:	ret	


0x41f5:	test	rax, rax
0x41f8:	mov	rbx, rax
0x41fb:	jne	0x41c1


0x1988:	mov	byte ptr [rsp + 0x78], 0
0x198d:	mov	byte ptr [rsp + 0x2b], 0
0x1992:	nop	word ptr [rax + rax]
0x1998:	lea	rcx, [rip + 0x208081]
0x199f:	lea	rdx, [rip + 0x557c]
0x19a6:	xor	r8d, r8d
0x19a9:	mov	rsi, rbx
0x19ac:	mov	edi, r12d
0x19af:	call	0x16a0


0x16a0:	jmp	qword ptr [rip + 0x2087f2]




0x19b4:	cmp	eax, -1
0x19b7:	je	0x1b3c


0x1b3c:	test	ebp, ebp
0x1b3e:	mov	qword ptr [rip + 0x2085b7], 0x22
0x1b49:	mov	qword ptr [rip + 0x2085a4], 0x20
0x1b54:	sete	al
0x1b57:	test	byte ptr [rsp + 0x78], al
0x1b5b:	jne	0x2a1b


0x19bd:	cmp	eax, 0x77
0x19c0:	je	0x1aa0


0x1b61:	cmp	byte ptr [rip + 0x2084a8], 0xa
0x1b68:	je	0x1bda


0x2a1b:	mov	edx, 5
0x2a20:	lea	rsi, [rip + 0x4bd9]
0x2a27:	jmp	0x1bbb


0x1aa0:	mov	byte ptr [rip + 0x20864d], 0
0x1aa7:	mov	byte ptr [rip + 0x208645], 1
0x1aae:	mov	byte ptr [rip + 0x20863c], 0
0x1ab5:	jmp	0x1998


0x19c6:	jle	0x1a00


0x1bda:	cmp	byte ptr [rsp + 0x2b], 0
0x1bdf:	je	0x1bf4


0x1b6a:	cmp	byte ptr [rsp + 0x2b], 0
0x1b6f:	mov	edx, 5
0x1b74:	lea	rsi, [rip + 0x5aad]
0x1b7b:	jne	0x1bbb


0x1bbb:	xor	edi, edi
0x1bbd:	call	0x1660


0x1998:	lea	rcx, [rip + 0x208081]
0x199f:	lea	rdx, [rip + 0x557c]
0x19a6:	xor	r8d, r8d
0x19a9:	mov	rsi, rbx
0x19ac:	mov	edi, r12d
0x19af:	call	0x16a0


0x1a00:	cmp	eax, 0x62
0x1a03:	je	0x1b20


0x19c8:	cmp	eax, 0x81
0x19cd:	je	0x1af0


0x1bf4:	test	ebp, ebp
0x1bf6:	js	0x1c0b


0x1be1:	cmp	byte ptr [rsp + 0x78], 0
0x1be6:	mov	edx, 5
0x1beb:	lea	rsi, [rip + 0x5a76]
0x1bf2:	jne	0x1bbb


0x1b7d:	cmp	byte ptr [rip + 0x20856e], 0
0x1b84:	jne	0x2a2c


0x1b20:	mov	ebp, 1
0x1b25:	jmp	0x1998


0x1a09:	jle	0x1a50


0x1af0:	mov	byte ptr [rip + 0x2085fd], 1
0x1af7:	mov	byte ptr [rip + 0x2085f5], 0
0x1afe:	mov	byte ptr [rip + 0x2085ec], 0
0x1b05:	jmp	0x1998


0x19d3:	jle	0x1a28


0x1c0b:	cmp	byte ptr [rip + 0x2084e0], 0
0x1c12:	je	0x29e8


0x1bf8:	cmp	byte ptr [rsp + 0x2b], 0
0x1bfd:	mov	edx, 5
0x1c02:	lea	rsi, [rip + 0x5a9f]
0x1c09:	jne	0x1bbb


0x1b8a:	cmp	byte ptr [rip + 0x208563], 0
0x1b91:	jne	0x2a00


0x2a2c:	mov	edx, 5
0x2a31:	lea	rsi, [rip + 0x4cc0]
0x2a38:	jmp	0x1bbb


0x1a50:	cmp	eax, 0xffffff7d
0x1a55:	jne	0x29d1


0x1a0b:	cmp	eax, 0x63
0x1a0e:	je	0x1b10


0x1a28:	cmp	eax, 0x7a
0x1a2b:	je	0x1b30


0x19d5:	cmp	eax, 0x83
0x19da:	je	0x1ae0


0x29e8:	cmp	byte ptr [rip + 0x207705], 0
0x29ef:	je	0x1b97


0x1c18:	cmp	byte ptr [rsp + 0x2b], 0
0x1c1d:	je	0x2a2c


0x1b97:	cmp	byte ptr [rip + 0x208555], 0
0x1b9e:	je	0x1ea5


0x2a00:	mov	edx, 5
0x2a05:	lea	rsi, [rip + 0x4d34]
0x2a0c:	jmp	0x1bbb


0x1a5b:	lea	rax, [rip + 0x54b3]
0x1a62:	mov	rdi, qword ptr [rip + 0x20863f]
0x1a69:	mov	rcx, qword ptr [rip + 0x2085a8]
0x1a70:	push	0
0x1a72:	lea	r9, [rip + 0x5480]
0x1a79:	lea	r8, [rip + 0x5486]
0x1a80:	push	rax
0x1a81:	lea	rdx, [rip + 0x542c]
0x1a88:	lea	rsi, [rip + 0x539b]
0x1a8f:	xor	eax, eax
0x1a91:	call	0x6440


0x29d1:	cmp	eax, 0xffffff7e
0x29d6:	jne	0x1bd0


0x1b10:	mov	byte ptr [rsp + 0x2b], 1
0x1b15:	jmp	0x1998


0x1a14:	cmp	eax, 0x74
0x1a17:	jne	0x1bd0


0x1b30:	mov	byte ptr [rip + 0x2084d9], 0
0x1b37:	jmp	0x1998


0x1a31:	add	eax, -0x80
0x1a34:	jne	0x1bd0


0x1ae0:	mov	byte ptr [rip + 0x208609], 1
0x1ae7:	jmp	0x1998


0x19e0:	jl	0x1ac0


0x29f5:	cmp	byte ptr [rsp + 0x2b], 0
0x29fa:	jne	0x25ad


0x1c23:	cmp	byte ptr [rip + 0x2084ca], 0
0x1c2a:	je	0x25ad


0x1ea5:	cmp	byte ptr [rip + 0x208245], 1
0x1eac:	jne	0x1ec5


0x1ba4:	cmp	byte ptr [rsp + 0x2b], 0
0x1ba9:	mov	edx, 5
0x1bae:	lea	rsi, [rip + 0x5bcb]
0x1bb5:	jne	0x1c3d


0x29dc:	xor	edi, edi
0x29de:	call	0x2ea0


0x1bd0:	mov	edi, 1
0x1bd5:	call	0x2ea0


0x1a1d:	xor	ebp, ebp
0x1a1f:	jmp	0x1998


0x1a3a:	mov	byte ptr [rip + 0x2086b1], 1
0x1a41:	jmp	0x1998


0x1ac0:	mov	byte ptr [rip + 0x20862d], 0
0x1ac7:	mov	byte ptr [rip + 0x208625], 0
0x1ace:	mov	byte ptr [rip + 0x20861c], 1
0x1ad5:	jmp	0x1998


0x19e6:	cmp	eax, 0x84
0x19eb:	jne	0x1bd0


0x25ad:	cmp	byte ptr [rip + 0x207b3f], 0
0x25b4:	jne	0x1c3d


0x1c30:	cmp	byte ptr [rip + 0x2084bc], 0
0x1c37:	je	0x1ea5


0x1eae:	cmp	byte ptr [rsp + 0x2b], 0
0x1eb3:	mov	edx, 5
0x1eb8:	lea	rsi, [rip + 0x5901]
0x1ebf:	je	0x1bbb


0x1ec5:	cmp	byte ptr [rip + 0x208224], 0
0x1ecc:	je	0x1c3d


0x1c3d:	cmp	ebp, -1
0x1c40:	jne	0x1c44


0x19f1:	mov	byte ptr [rsp + 0x78], 1
0x19f6:	mov	ebp, 1
0x19fb:	jmp	0x1998


0x25ba:	jmp	0x1ec5


0x1ed2:	cmp	byte ptr [rsp + 0x2b], 0
0x1ed7:	mov	edx, 5
0x1edc:	lea	rsi, [rip + 0x591d]
0x1ee3:	jne	0x1c3d


0x1c42:	xor	ebp, ebp
0x1c44:	movsxd	rax, r12d
0x1c47:	lea	rax, [rbx + rax*8]
0x1c4b:	mov	qword ptr [rsp + 0x48], rax
0x1c50:	movsxd	rax, dword ptr [rip + 0x208461]
0x1c57:	cmp	eax, r12d
0x1c5a:	jne	0x1c75


0x1c44:	movsxd	rax, r12d
0x1c47:	lea	rax, [rbx + rax*8]
0x1c4b:	mov	qword ptr [rsp + 0x48], rax
0x1c50:	movsxd	rax, dword ptr [rip + 0x208461]
0x1c57:	cmp	eax, r12d
0x1c5a:	jne	0x1c75


0x1ee9:	jmp	0x1bbb


0x1c5c:	mov	rdi, qword ptr [rsp + 0x48]
0x1c61:	lea	rsi, [rip + 0x5e1a]
0x1c68:	add	rdi, 8
0x1c6c:	mov	qword ptr [rdi - 8], rsi
0x1c70:	mov	qword ptr [rsp + 0x48], rdi
0x1c75:	lea	rax, [rbx + rax*8]
0x1c79:	cmp	qword ptr [rsp + 0x48], rax
0x1c7e:	mov	qword ptr [rsp + 0x18], rax
0x1c83:	jbe	0x2934


0x1c75:	lea	rax, [rbx + rax*8]
0x1c79:	cmp	qword ptr [rsp + 0x48], rax
0x1c7e:	mov	qword ptr [rsp + 0x18], rax
0x1c83:	jbe	0x2934


0x2934:	mov	byte ptr [rsp + 0x79], 1
0x2939:	jmp	0x2383


0x1c89:	cmp	ebp, 1
0x1c8c:	lea	r14, [rip + 0x5d3d]
0x1c93:	mov	byte ptr [rsp + 0x79], 1
0x1c98:	sbb	eax, eax
0x1c9a:	and	eax, 0xfffffff6
0x1c9d:	add	eax, 0x2a
0x1ca0:	mov	dword ptr [rsp + 0x7c], eax
0x1ca4:	mov	byte ptr [rsp + 0x7b], al
0x1ca8:	nop	dword ptr [rax + rax]
0x1cb0:	mov	rax, qword ptr [rsp + 0x18]
0x1cb5:	cmp	byte ptr [rsp + 0x2b], 0
0x1cba:	mov	rsi, qword ptr [rax]
0x1cbd:	mov	qword ptr [rsp + 0x20], rsi
0x1cc2:	je	0x2340


0x2383:	cmp	byte ptr [rip + 0x207d7e], 0
0x238a:	jne	0x2700


0x2340:	lea	rax, [rsp + 0x98]
0x2348:	lea	rbx, [rsp + 0xa0]
0x2350:	mov	rdi, qword ptr [rsp + 0x20]
0x2355:	mov	rdx, rax
0x2358:	mov	rsi, rbx
0x235b:	call	0x2d00


0x1cc8:	lea	rdi, [rip + 0x5db3]
0x1ccf:	mov	ecx, 2
0x1cd4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2390:	movzx	eax, byte ptr [rsp + 0x79]
0x2395:	xor	eax, 1
0x2398:	mov	rdi, qword ptr [rsp + 0xd8]
0x23a0:	xor	rdi, qword ptr fs:[0x28]
0x23a9:	movzx	eax, al
0x23ac:	jne	0x29e3


0x2700:	mov	rdi, qword ptr [rip + 0x2079a9]
0x2707:	call	0x6830


0x1cd4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1cd6:	seta	al
0x1cd9:	sbb	al, 0
0x1cdb:	movsx	eax, al
0x1cde:	test	eax, eax
0x1ce0:	mov	dword ptr [rsp + 0x2c], eax
0x1ce4:	jne	0x2415


0x23b2:	add	rsp, 0xe8
0x23b9:	pop	rbx
0x23ba:	pop	rbp
0x23bb:	pop	r12
0x23bd:	pop	r13
0x23bf:	pop	r14
0x23c1:	pop	r15
0x23c3:	ret	


0x29e3:	call	0x1690


0x1cea:	lea	rsi, [rip + 0x5237]
0x1cf1:	mov	edx, 5
0x1cf6:	xor	edi, edi
0x1cf8:	mov	byte ptr [rip + 0x208409], 1
0x1cff:	call	0x1660


0x2415:	mov	rdi, qword ptr [rsp + 0x20]
0x241a:	lea	rsi, [rip + 0x4ae3]
0x2421:	call	0x41a0


0x2426:	test	rax, rax
0x2429:	mov	r12, rax
0x242c:	jne	0x1d10


0x2432:	mov	rdx, qword ptr [rsp + 0x20]
0x2437:	mov	esi, 3
0x243c:	xor	edi, edi
0x243e:	call	0x5d80


0x1d10:	lea	rax, [rsp + 0x98]
0x1d18:	mov	qword ptr [rsp + 0x90], 0
0x1d24:	mov	qword ptr [rsp + 0x98], 0
0x1d30:	mov	byte ptr [rsp + 0x7a], 0
0x1d35:	mov	byte ptr [rsp + 0x30], 0
0x1d3a:	xor	r13d, r13d
0x1d3d:	mov	qword ptr [rsp + 0x10], rax
0x1d42:	lea	rax, [rsp + 0x90]
0x1d4a:	mov	qword ptr [rsp + 0x58], 0
0x1d53:	mov	qword ptr [rsp + 0x50], 0
0x1d5c:	mov	ebp, 1
0x1d61:	mov	qword ptr [rsp + 8], rax
0x1d66:	lea	rax, [rsp + 0x8f]
0x1d6e:	mov	qword ptr [rsp + 0x40], rax
0x1d73:	lea	rax, [rsp + 0xc0]
0x1d7b:	mov	qword ptr [rsp + 0x38], rax
0x1d80:	mov	rsi, qword ptr [rsp + 0x10]
0x1d85:	mov	rdi, qword ptr [rsp + 8]
0x1d8a:	mov	rcx, r12
0x1d8d:	mov	edx, 0xa
0x1d92:	call	0x1760


0x1760:	jmp	qword ptr [rip + 0x208792]




0x270c:	add	eax, 1
0x270f:	jne	0x2390


0x2715:	lea	rsi, [rip + 0x480c]
0x271c:	mov	edx, 5
0x2721:	xor	edi, edi
0x2723:	call	0x1660


0x2360:	test	al, al
0x2362:	jne	0x2467


0x2368:	mov	byte ptr [rsp + 0x79], 0
0x236d:	add	qword ptr [rsp + 0x18], 8
0x2373:	mov	rax, qword ptr [rsp + 0x18]
0x2378:	cmp	qword ptr [rsp + 0x48], rax
0x237d:	ja	0x1cb0


0x2467:	mov	rdi, qword ptr [rsp + 0x20]
0x246c:	mov	esi, 0x5c
0x2471:	call	0x16c0


0x1cb0:	mov	rax, qword ptr [rsp + 0x18]
0x1cb5:	cmp	byte ptr [rsp + 0x2b], 0
0x1cba:	mov	rsi, qword ptr [rax]
0x1cbd:	mov	qword ptr [rsp + 0x20], rsi
0x1cc2:	je	0x2340


0x16c0:	jmp	qword ptr [rip + 0x2087e2]




0x1a96:	xor	edi, edi
0x1a98:	call	0x1880


0x2728:	mov	rbx, rax
0x272b:	call	0x15d0


0x2730:	mov	esi, dword ptr [rax]
0x2732:	mov	rdx, rbx
0x2735:	mov	edi, 1
0x273a:	xor	eax, eax
0x273c:	call	0x1830


0x2741:	mov	rsi, r15
0x2744:	mov	rdi, rbx
0x2747:	mov	qword ptr [rsp + 0x60], r8
0x274c:	sub	rsi, rax
0x274f:	call	0x2b50


0x2754:	mov	r8, qword ptr [rsp + 0x60]
0x2759:	test	rax, rax
0x275c:	setne	al
0x275f:	test	al, al
0x2761:	jne	0x1fa6


0x2767:	jmp	0x1e44


0x1fa6:	mov	eax, dword ptr [rsp + 0x2c]
0x1faa:	test	eax, eax
0x1fac:	jne	0x1fcc


0x1e44:	add	r13, 1
0x1e48:	cmp	byte ptr [rip + 0x2082a4], 0
0x1e4f:	jne	0x21d0


0x1fae:	lea	rdi, [rip + 0x5acd]
0x1fb5:	mov	ecx, 2
0x1fba:	mov	rsi, rbx
0x1fbd:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1fcc:	xor	r15d, r15d
0x1fcf:	cmp	byte ptr [rip + 0x20811e], 0
0x1fd6:	jne	0x1ff9


0x1e55:	test	byte ptr [r12], 0x30
0x1e5a:	jne	0x209c


0x21d0:	mov	rdx, qword ptr [rsp + 0x20]
0x21d5:	xor	edi, edi
0x21d7:	mov	esi, 3
0x21dc:	call	0x5d80


0x1fbd:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1fbf:	seta	al
0x1fc2:	sbb	al, 0
0x1fc4:	test	al, al
0x1fc6:	je	0x1e44


0x1fd8:	mov	esi, 0xa
0x1fdd:	mov	rdi, rbx
0x1fe0:	mov	qword ptr [rsp + 0x30], r8
0x1fe5:	call	0x16c0


0x1ff9:	mov	rdx, qword ptr [rsp + 0x40]
0x1ffe:	mov	rsi, qword ptr [rsp + 0x38]
0x2003:	mov	rdi, rbx
0x2006:	mov	qword ptr [rsp + 0x30], r8
0x200b:	call	0x2d00


0x1e60:	add	rbp, 1
0x1e64:	jne	0x1d80


0x209c:	mov	rdi, qword ptr [rsp + 0x90]
0x20a4:	call	0x15b0


0x1e6a:	mov	rdx, qword ptr [rsp + 0x20]
0x1e6f:	mov	esi, 3
0x1e74:	xor	edi, edi
0x1e76:	call	0x5d80


0x1d80:	mov	rsi, qword ptr [rsp + 0x10]
0x1d85:	mov	rdi, qword ptr [rsp + 8]
0x1d8a:	mov	rcx, r12
0x1d8d:	mov	edx, 0xa
0x1d92:	call	0x1760


0x20a9:	mov	ebx, dword ptr [r12]
0x20ad:	and	ebx, 0x20
0x20b0:	jne	0x256e


0x20b6:	cmp	dword ptr [rsp + 0x2c], 0
0x20bb:	jne	0x2628


0x256e:	mov	rdx, qword ptr [rsp + 0x20]
0x2573:	mov	esi, 3
0x2578:	xor	edi, edi
0x257a:	call	0x5d80


0x20c1:	cmp	byte ptr [rsp + 0x30], 0
0x20c6:	je	0x2645


0x2628:	mov	rdi, r12
0x262b:	call	0x6830


0x2645:	mov	rdx, qword ptr [rsp + 0x20]
0x264a:	xor	edi, edi
0x264c:	mov	esi, 3
0x2651:	call	0x5d80


0x20cc:	cmp	byte ptr [rip + 0x208021], 0
0x20d3:	jne	0x255e


0x20d9:	test	r13, r13
0x20dc:	je	0x210d


0x255e:	cmp	byte ptr [rsp + 0x7a], 0
0x2563:	jne	0x219d


0x210d:	cmp	qword ptr [rsp + 0x50], 0
0x2113:	je	0x2149


0x20de:	lea	rdx, [rip + 0x57c3]
0x20e5:	lea	rsi, [rip + 0x57ec]
0x20ec:	mov	rcx, r13
0x20ef:	xor	edi, edi
0x20f1:	mov	r8d, 5
0x20f7:	call	0x1860


0x2569:	jmp	0x21be


0x219d:	mov	rax, qword ptr [rsp + 0x50]
0x21a2:	or	rax, qword ptr [rsp + 0x58]
0x21a7:	jne	0x21be


0x2149:	cmp	qword ptr [rsp + 0x58], 0
0x214f:	je	0x2185


0x2115:	mov	r15, qword ptr [rsp + 0x50]
0x211a:	lea	rdx, [rip + 0x57e7]
0x2121:	lea	rsi, [rip + 0x5810]
0x2128:	xor	edi, edi
0x212a:	mov	r8d, 5
0x2130:	mov	rcx, r15
0x2133:	call	0x1860


0x1860:	jmp	qword ptr [rip + 0x208712]


0x21be:	mov	eax, ebx
0x21c0:	and	eax, 1
0x21c3:	and	byte ptr [rsp + 0x79], al
0x21c7:	jmp	0x236d


0x21a9:	movzx	eax, byte ptr [rip + 0x207f40]
0x21b0:	xor	eax, 1
0x21b3:	test	r13, r13
0x21b6:	sete	bl
0x21b9:	or	eax, ebx
0x21bb:	movzx	ebx, al
0x21be:	mov	eax, ebx
0x21c0:	and	eax, 1
0x21c3:	and	byte ptr [rsp + 0x79], al
0x21c7:	jmp	0x236d


0x2185:	cmp	byte ptr [rip + 0x207f66], 0
0x218c:	je	0x255e


0x2151:	mov	r15, qword ptr [rsp + 0x58]
0x2156:	lea	rdx, [rip + 0x580b]
0x215d:	lea	rsi, [rip + 0x5834]
0x2164:	xor	edi, edi
0x2166:	mov	r8d, 5
0x216c:	mov	rcx, r15
0x216f:	call	0x1860




0x236d:	add	qword ptr [rsp + 0x18], 8
0x2373:	mov	rax, qword ptr [rsp + 0x18]
0x2378:	cmp	qword ptr [rsp + 0x48], rax
0x237d:	ja	0x1cb0


0x2192:	cmp	byte ptr [rsp + 0x7a], 0
0x2197:	je	0x28f7


0x28f7:	mov	rdx, qword ptr [rsp + 0x20]
0x28fc:	xor	edi, edi
0x28fe:	mov	esi, 3
0x2903:	call	0x5d80


0x2630:	test	eax, eax
0x2632:	je	0x20c1


0x2638:	jmp	0x2432


0x2010:	test	al, al
0x2012:	mov	r9d, eax
0x2015:	mov	r8, qword ptr [rsp + 0x30]
0x201a:	jne	0x2220


0x2020:	add	qword ptr [rsp + 0x50], 1
0x2026:	cmp	byte ptr [rip + 0x2080c7], 0
0x202d:	jne	0x2088


0x2220:	cmp	byte ptr [rip + 0x207ecb], 0
0x2227:	je	0x2237


0x202f:	test	r15d, r15d
0x2032:	je	0x2054


0x2088:	movzx	eax, byte ptr [rsp + 0x2b]
0x208d:	test	byte ptr [r12], 0x30
0x2092:	mov	byte ptr [rsp + 0x30], al
0x2096:	je	0x1e60


0x2237:	mov	rcx, qword ptr [rip + 0x207eba]
0x223e:	mov	qword ptr [rsp + 0x68], r8
0x2243:	shr	rcx, 1
0x2246:	je	0x25bf


0x2229:	cmp	byte ptr [rsp + 0x8f], 0
0x2231:	jne	0x2088


0x2054:	mov	esi, r15d
0x2057:	mov	rdi, rbx
0x205a:	call	0x2c30


0x2034:	mov	rdi, qword ptr [rip + 0x20806d]
0x203b:	mov	rax, qword ptr [rdi + 0x28]
0x203f:	cmp	rax, qword ptr [rdi + 0x30]
0x2043:	jae	0x2964


0x25bf:	xor	edx, edx
0x25c1:	movzx	eax, byte ptr [rip + 0x207b2c]
0x25c8:	test	al, al
0x25ca:	mov	byte ptr [rsp + 0x7a], al
0x25ce:	jne	0x2088


0x224c:	mov	qword ptr [rsp + 0x60], rcx
0x2251:	mov	byte ptr [rsp + 0x30], r9b
0x2256:	call	0x18d0


0x2049:	lea	rdx, [rax + 1]
0x204d:	mov	qword ptr [rdi + 0x28], rdx
0x2051:	mov	byte ptr [rax], 0x5c
0x2054:	mov	esi, r15d
0x2057:	mov	rdi, rbx
0x205a:	call	0x2c30


0x2964:	mov	esi, 0x5c
0x2969:	call	0x16d0


0x25d4:	movzx	eax, byte ptr [rip + 0x207b16]
0x25db:	test	al, al
0x25dd:	mov	byte ptr [rsp + 0x7a], al
0x25e1:	jne	0x2088


0x18d0:	jmp	qword ptr [rip + 0x2086da]


0x25e7:	test	r15d, r15d
0x25ea:	jne	0x2a11




0x25f0:	xor	esi, esi
0x25f2:	mov	rdi, rbx
0x25f5:	mov	byte ptr [rsp + 0x30], r9b
0x25fa:	call	0x2c30


0x2a11:	mov	byte ptr [rsp + 0x7a], r9b
0x2a16:	jmp	0x22e3


0x22e3:	mov	rdi, qword ptr [rip + 0x207dbe]
0x22ea:	mov	rax, qword ptr [rdi + 0x28]
0x22ee:	cmp	rax, qword ptr [rdi + 0x30]
0x22f2:	jae	0x299f


0x22f8:	lea	rsi, [rax + 1]
0x22fc:	mov	qword ptr [rdi + 0x28], rsi
0x2300:	mov	byte ptr [rax], 0x5c
0x2303:	mov	esi, 1
0x2308:	mov	rdi, rbx
0x230b:	mov	qword ptr [rsp + 0x60], rcx
0x2310:	mov	qword ptr [rsp + 0x30], rdx
0x2315:	call	0x2c30


0x299f:	mov	esi, 0x5c
0x29a4:	mov	qword ptr [rsp + 0x60], rcx
0x29a9:	mov	qword ptr [rsp + 0x30], rdx
0x29ae:	call	0x16d0


0x29b3:	mov	rdx, qword ptr [rsp + 0x30]
0x29b8:	mov	rcx, qword ptr [rsp + 0x60]
0x29bd:	jmp	0x2303


0x2303:	mov	esi, 1
0x2308:	mov	rdi, rbx
0x230b:	mov	qword ptr [rsp + 0x60], rcx
0x2310:	mov	qword ptr [rsp + 0x30], rdx
0x2315:	call	0x2c30


0x296e:	jmp	0x2054


0x231a:	mov	rdx, qword ptr [rsp + 0x30]
0x231f:	mov	rcx, qword ptr [rsp + 0x60]
0x2324:	cmp	rdx, rcx
0x2327:	je	0x260a


0x260a:	cmp	byte ptr [rip + 0x207ae0], 0
0x2611:	jne	0x2088


0x232d:	mov	edx, 5
0x2332:	lea	rsi, [rip + 0x4c2e]
0x2339:	jmp	0x206b


0x2617:	mov	edx, 5
0x261c:	lea	rsi, [rip + 0x494b]
0x2623:	jmp	0x206b


0x206b:	xor	edi, edi
0x206d:	call	0x1660


0x25ff:	movzx	r9d, byte ptr [rsp + 0x30]
0x2605:	mov	byte ptr [rsp + 0x7a], r9b
0x260a:	cmp	byte ptr [rip + 0x207ae0], 0
0x2611:	jne	0x2088


0x205f:	lea	rsi, [rip + 0x4eed]
0x2066:	mov	edx, 5
0x206b:	xor	edi, edi
0x206d:	call	0x1660


0x2072:	lea	rsi, [rip + 0x5f58]
0x2079:	mov	rdx, rax
0x207c:	mov	edi, 1
0x2081:	xor	eax, eax
0x2083:	call	0x1810


0x1d04:	mov	r12, qword ptr [rip + 0x2083a5]
0x1d0b:	mov	qword ptr [rsp + 0x20], rax
0x1d10:	lea	rax, [rsp + 0x98]
0x1d18:	mov	qword ptr [rsp + 0x90], 0
0x1d24:	mov	qword ptr [rsp + 0x98], 0
0x1d30:	mov	byte ptr [rsp + 0x7a], 0
0x1d35:	mov	byte ptr [rsp + 0x30], 0
0x1d3a:	xor	r13d, r13d
0x1d3d:	mov	qword ptr [rsp + 0x10], rax
0x1d42:	lea	rax, [rsp + 0x90]
0x1d4a:	mov	qword ptr [rsp + 0x58], 0
0x1d53:	mov	qword ptr [rsp + 0x50], 0
0x1d5c:	mov	ebp, 1
0x1d61:	mov	qword ptr [rsp + 8], rax
0x1d66:	lea	rax, [rsp + 0x8f]
0x1d6e:	mov	qword ptr [rsp + 0x40], rax
0x1d73:	lea	rax, [rsp + 0xc0]
0x1d7b:	mov	qword ptr [rsp + 0x38], rax
0x1d80:	mov	rsi, qword ptr [rsp + 0x10]
0x1d85:	mov	rdi, qword ptr [rsp + 8]
0x1d8a:	mov	rcx, r12
0x1d8d:	mov	edx, 0xa
0x1d92:	call	0x1760


0x1bc2:	xor	esi, esi
0x1bc4:	mov	rdx, rax
0x1bc7:	xor	edi, edi
0x1bc9:	xor	eax, eax
0x1bcb:	call	0x1830


0x225b:	xor	edx, edx
0x225d:	mov	rdi, qword ptr [rax]
0x2260:	movzx	r9d, byte ptr [rsp + 0x30]
0x2266:	mov	rcx, qword ptr [rsp + 0x60]
0x226b:	mov	r8, qword ptr [rsp + 0x68]
0x2270:	mov	r10, qword ptr [rsp + 0x38]
0x2275:	jmp	0x22a0


0x22a0:	movzx	eax, byte ptr [r10 + rdx]
0x22a5:	movzx	r11d, byte ptr [r8 + rdx*2]
0x22aa:	mov	esi, eax
0x22ac:	shr	sil, 4
0x22b0:	and	esi, 0xf
0x22b3:	movsx	esi, byte ptr [r14 + rsi]
0x22b8:	cmp	dword ptr [rdi + r11*4], esi
0x22bc:	je	0x2280


0x2280:	movzx	esi, byte ptr [r8 + rdx*2 + 1]
0x2286:	and	eax, 0xf
0x2289:	movsx	eax, byte ptr [r14 + rax]
0x228e:	cmp	dword ptr [rdi + rsi*4], eax
0x2291:	jne	0x22be


0x22be:	cmp	rcx, rdx
0x22c1:	je	0x25c1


0x2293:	add	rdx, 1
0x2297:	cmp	rcx, rdx
0x229a:	je	0x263d


0x25c1:	movzx	eax, byte ptr [rip + 0x207b2c]
0x25c8:	test	al, al
0x25ca:	mov	byte ptr [rsp + 0x7a], al
0x25ce:	jne	0x2088


0x22c7:	add	qword ptr [rsp + 0x58], 1
0x22cd:	cmp	byte ptr [rip + 0x207e20], 0
0x22d4:	jne	0x2088


0x263d:	mov	rdx, rcx
0x2640:	jmp	0x25c1


0x22da:	test	r15d, r15d
0x22dd:	je	0x28e8


0x28e8:	xor	esi, esi
0x28ea:	mov	rdi, rbx
0x28ed:	call	0x2c30


0x28f2:	jmp	0x232d


0x2174:	mov	rcx, r15
0x2177:	mov	rdx, rax
0x217a:	xor	esi, esi
0x217c:	xor	edi, edi
0x217e:	xor	eax, eax
0x2180:	call	0x1830


0x2138:	mov	rcx, r15
0x213b:	mov	rdx, rax
0x213e:	xor	esi, esi
0x2140:	xor	edi, edi
0x2142:	xor	eax, eax
0x2144:	call	0x1830


0x20fc:	mov	rcx, r13
0x20ff:	mov	rdx, rax
0x2102:	xor	esi, esi
0x2104:	xor	edi, edi
0x2106:	xor	eax, eax
0x2108:	call	0x1830


0x1fea:	mov	r8, qword ptr [rsp + 0x30]
0x1fef:	xor	r15d, r15d
0x1ff2:	test	rax, rax
0x1ff5:	setne	r15b
0x1ff9:	mov	rdx, qword ptr [rsp + 0x40]
0x1ffe:	mov	rsi, qword ptr [rsp + 0x38]
0x2003:	mov	rdi, rbx
0x2006:	mov	qword ptr [rsp + 0x30], r8
0x200b:	call	0x2d00


0x2476:	test	rax, rax
0x2479:	je	0x2851


0x2851:	mov	rdi, qword ptr [rsp + 0x20]
0x2856:	mov	esi, 0xa
0x285b:	call	0x16c0


0x247f:	cmp	byte ptr [rip + 0x207b8a], 0xa
0x2486:	je	0x276c


0x276c:	cmp	byte ptr [rsp + 0x78], 0
0x2771:	je	0x2817


0x248c:	cmp	byte ptr [rsp + 0x78], 0
0x2491:	jne	0x286e


0x2817:	mov	rdi, qword ptr [rip + 0x20788a]
0x281e:	mov	rax, qword ptr [rdi + 0x28]
0x2822:	cmp	rax, qword ptr [rdi + 0x30]
0x2826:	jae	0x2973


0x2777:	mov	rdi, qword ptr [rip + 0x20792a]
0x277e:	mov	rax, qword ptr [rdi + 0x28]
0x2782:	cmp	rax, qword ptr [rdi + 0x30]
0x2786:	jae	0x29c2


0x2497:	mov	rax, qword ptr [rip + 0x207c5a]
0x249e:	xor	ebp, ebp
0x24a0:	shr	rax, 1
0x24a3:	je	0x24e2


0x286e:	mov	rcx, qword ptr [rip + 0x207833]
0x2875:	lea	rdi, [rip + 0x45b5]
0x287c:	mov	edx, 3
0x2881:	mov	esi, 1
0x2886:	xor	ebp, ebp
0x2888:	call	0x17d0


0x282c:	lea	rdx, [rax + 1]
0x2830:	mov	ebp, 1
0x2835:	mov	qword ptr [rdi + 0x28], rdx
0x2839:	mov	byte ptr [rax], 0x5c
0x283c:	mov	rax, qword ptr [rip + 0x2078b5]
0x2843:	shr	rax, 1
0x2846:	jne	0x24a5


0x2973:	mov	esi, 0x5c
0x2978:	call	0x16d0


0x278c:	lea	rdx, [rax + 1]
0x2790:	mov	qword ptr [rdi + 0x28], rdx
0x2794:	mov	byte ptr [rax], 0x5c
0x2797:	mov	rcx, qword ptr [rip + 0x20790a]
0x279e:	lea	rdi, [rip + 0x468c]
0x27a5:	mov	edx, 3
0x27aa:	mov	esi, 1
0x27af:	call	0x17d0


0x29c2:	mov	esi, 0x5c
0x29c7:	call	0x16d0


0x24e2:	mov	rdi, qword ptr [rip + 0x207bbf]
0x24e9:	mov	rax, qword ptr [rdi + 0x28]
0x24ed:	cmp	qword ptr [rdi + 0x30], rax
0x24f1:	jbe	0x2990


0x24a5:	xor	r12d, r12d
0x24a8:	nop	dword ptr [rax + rax]
0x24b0:	movzx	edx, byte ptr [rbx + r12]
0x24b5:	lea	rsi, [rip + 0x4add]
0x24bc:	xor	eax, eax
0x24be:	mov	edi, 1
0x24c3:	add	r12, 1
0x24c7:	call	0x1810


0x284c:	jmp	0x24e2


0x2990:	mov	esi, 0x20
0x2995:	call	0x16d0


0x24f7:	lea	rdx, [rax + 1]
0x24fb:	mov	qword ptr [rdi + 0x28], rdx
0x24ff:	mov	byte ptr [rax], 0x20
0x2502:	mov	rdi, qword ptr [rip + 0x207b9f]
0x2509:	mov	rax, qword ptr [rdi + 0x28]
0x250d:	cmp	rax, qword ptr [rdi + 0x30]
0x2511:	jae	0x2982


0x2517:	lea	rdx, [rax + 1]
0x251b:	mov	qword ptr [rdi + 0x28], rdx
0x251f:	movzx	edi, byte ptr [rsp + 0x7b]
0x2524:	mov	byte ptr [rax], dil
0x2527:	mov	rdi, qword ptr [rsp + 0x20]
0x252c:	mov	esi, ebp
0x252e:	call	0x2c30


0x2982:	mov	esi, dword ptr [rsp + 0x7c]
0x2986:	call	0x16d0


0x2533:	mov	rdi, qword ptr [rip + 0x207b6e]
0x253a:	movzx	edx, byte ptr [rip + 0x207acf]
0x2541:	mov	rax, qword ptr [rdi + 0x28]
0x2545:	cmp	rax, qword ptr [rdi + 0x30]
0x2549:	jae	0x2957


0x254f:	lea	rcx, [rax + 1]
0x2553:	mov	qword ptr [rdi + 0x28], rcx
0x2557:	mov	byte ptr [rax], dl
0x2559:	jmp	0x236d


0x2957:	movzx	esi, dl
0x295a:	call	0x16d0


0x24cc:	mov	rax, qword ptr [rip + 0x207c25]
0x24d3:	shr	rax, 1
0x24d6:	cmp	rax, r12
0x24d9:	ja	0x24b0


0x24db:	cmp	byte ptr [rsp + 0x78], 0
0x24e0:	jne	0x2533


0x24b0:	movzx	edx, byte ptr [rbx + r12]
0x24b5:	lea	rsi, [rip + 0x4add]
0x24bc:	xor	eax, eax
0x24be:	mov	edi, 1
0x24c3:	add	r12, 1
0x24c7:	call	0x1810


0x295f:	jmp	0x236d


0x298b:	jmp	0x2527


0x2527:	mov	rdi, qword ptr [rsp + 0x20]
0x252c:	mov	esi, ebp
0x252e:	call	0x2c30


0x299a:	jmp	0x2502


0x2502:	mov	rdi, qword ptr [rip + 0x207b9f]
0x2509:	mov	rax, qword ptr [rdi + 0x28]
0x250d:	cmp	rax, qword ptr [rdi + 0x30]
0x2511:	jae	0x2982


0x29cc:	jmp	0x2797


0x2797:	mov	rcx, qword ptr [rip + 0x20790a]
0x279e:	lea	rdi, [rip + 0x468c]
0x27a5:	mov	edx, 3
0x27aa:	mov	esi, 1
0x27af:	call	0x17d0


0x297d:	jmp	0x27fd


0x27fd:	mov	rax, qword ptr [rip + 0x2078f4]
0x2804:	mov	ebp, 1
0x2809:	shr	rax, 1
0x280c:	jne	0x24a5


0x2812:	jmp	0x24db


0x27b4:	mov	rcx, qword ptr [rip + 0x2078ed]
0x27bb:	lea	rdi, [rip + 0x47dc]
0x27c2:	mov	edx, 2
0x27c7:	mov	esi, 1
0x27cc:	call	0x17d0


0x27d1:	mov	rdi, qword ptr [rsp + 0x20]
0x27d6:	mov	esi, 1
0x27db:	call	0x2c30


0x27e0:	mov	rcx, qword ptr [rip + 0x2078c1]
0x27e7:	lea	rdi, [rip + 0x47b3]
0x27ee:	mov	edx, 4
0x27f3:	mov	esi, 1
0x27f8:	call	0x17d0


0x288d:	mov	rcx, qword ptr [rip + 0x207814]
0x2894:	lea	rdi, [rip + 0x4703]
0x289b:	mov	edx, 2
0x28a0:	mov	esi, 1
0x28a5:	call	0x17d0


0x28aa:	mov	rdi, qword ptr [rsp + 0x20]
0x28af:	xor	esi, esi
0x28b1:	call	0x2c30


0x28b6:	mov	rcx, qword ptr [rip + 0x2077eb]
0x28bd:	lea	rdi, [rip + 0x46dd]
0x28c4:	mov	edx, 4
0x28c9:	mov	esi, 1
0x28ce:	call	0x17d0


0x28d3:	mov	rax, qword ptr [rip + 0x20781e]
0x28da:	shr	rax, 1
0x28dd:	jne	0x24a5


0x28e3:	jmp	0x2533


0x2860:	test	rax, rax
0x2863:	jne	0x247f


0x2869:	jmp	0x248c


0x1d97:	test	rax, rax
0x1d9a:	jle	0x209c


0x1da0:	mov	rbx, qword ptr [rsp + 0x90]
0x1da8:	movzx	ecx, byte ptr [rbx]
0x1dab:	cmp	cl, 0x23
0x1dae:	je	0x1e55


0x1db4:	cmp	byte ptr [rbx + rax - 1], 0xa
0x1db9:	mov	r15, rax
0x1dbc:	jne	0x1dd2


0x1dbe:	sub	r15, 1
0x1dc2:	mov	byte ptr [rbx + r15], 0
0x1dc7:	mov	rbx, qword ptr [rsp + 0x90]
0x1dcf:	movzx	ecx, byte ptr [rbx]
0x1dd2:	cmp	cl, 9
0x1dd5:	je	0x1dde


0x1dd2:	cmp	cl, 9
0x1dd5:	je	0x1dde


0x1dde:	xor	edx, edx
0x1de0:	add	rdx, 1
0x1de4:	movzx	ecx, byte ptr [rbx + rdx]
0x1de8:	cmp	cl, 0x20
0x1deb:	je	0x1de0


0x1dd7:	xor	edx, edx
0x1dd9:	cmp	cl, 0x20
0x1ddc:	jne	0x1df2


0x1de0:	add	rdx, 1
0x1de4:	movzx	ecx, byte ptr [rbx + rdx]
0x1de8:	cmp	cl, 0x20
0x1deb:	je	0x1de0


0x1ded:	cmp	cl, 9
0x1df0:	je	0x1de0


0x1df2:	xor	r9d, r9d
0x1df5:	cmp	cl, 0x5c
0x1df8:	jne	0x1e04


0x1dfa:	movzx	r9d, byte ptr [rsp + 0x2b]
0x1e00:	add	rdx, 1
0x1e04:	lea	r8, [rbx + rdx]
0x1e08:	lea	rdi, [rip + 0x5022]
0x1e0f:	mov	ecx, 3
0x1e14:	mov	rsi, r8
0x1e17:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1e04:	lea	r8, [rbx + rdx]
0x1e08:	lea	rdi, [rip + 0x5022]
0x1e0f:	mov	ecx, 3
0x1e14:	mov	rsi, r8
0x1e17:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1e17:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1e19:	seta	al
0x1e1c:	sbb	al, 0
0x1e1e:	test	al, al
0x1e20:	jne	0x1ef0


0x1e26:	movzx	eax, byte ptr [rbx + rdx + 3]
0x1e2b:	lea	rcx, [rdx + 3]
0x1e2f:	cmp	al, 0x20
0x1e31:	jne	0x1e3c


0x1ef0:	mov	rcx, r15
0x1ef3:	xor	eax, eax
0x1ef5:	sub	rcx, rdx
0x1ef8:	cmp	byte ptr [r8], 0x5c
0x1efc:	sete	al
0x1eff:	add	rax, qword ptr [rip + 0x2081fa]
0x1f06:	cmp	rcx, rax
0x1f09:	jb	0x1e44


0x1e33:	movzx	eax, byte ptr [rbx + rdx + 4]
0x1e38:	lea	rcx, [rdx + 4]
0x1e3c:	cmp	al, 0x28
0x1e3e:	je	0x23c4


0x1e3c:	cmp	al, 0x28
0x1e3e:	je	0x23c4


0x1f0f:	add	rdx, qword ptr [rip + 0x2081e2]
0x1f16:	lea	rcx, [rbx + rdx]
0x1f1a:	movzx	eax, byte ptr [rcx]
0x1f1d:	cmp	al, 0x20
0x1f1f:	je	0x1f29


0x23c4:	add	rcx, 1
0x23c8:	sub	r15, rcx
0x23cb:	je	0x1e44


0x1f29:	mov	byte ptr [rcx], 0
0x1f2c:	mov	rdi, r8
0x1f2f:	mov	qword ptr [rsp + 0x70], rdx
0x1f34:	mov	byte ptr [rsp + 0x68], r9b
0x1f39:	mov	qword ptr [rsp + 0x60], r8
0x1f3e:	call	0x2bd0


0x1f21:	cmp	al, 9
0x1f23:	jne	0x1e44


0x23d1:	mov	r10, r15
0x23d4:	add	rbx, rcx
0x23d7:	sub	r10, 1
0x23db:	je	0x2401


0x2401:	cmp	byte ptr [rbx], 0x29
0x2404:	jne	0x1e44


0x23dd:	cmp	byte ptr [rbx + r15 - 1], 0x29
0x23e3:	jne	0x23fb


0x240a:	mov	r11, rbx
0x240d:	xor	r10d, r10d
0x2410:	jmp	0x268d


0x23e5:	jmp	0x2689


0x23fb:	sub	r10, 1
0x23ff:	jne	0x23f0


0x268d:	test	r9b, r9b
0x2690:	jne	0x293e


0x2689:	lea	r11, [rbx + r10]
0x268d:	test	r9b, r9b
0x2690:	jne	0x293e


0x23f0:	cmp	byte ptr [rbx + r10], 0x29
0x23f5:	je	0x2689


0x2696:	add	r10, 1
0x269a:	mov	byte ptr [r11], 0
0x269e:	jmp	0x26a4


0x293e:	mov	rsi, r10
0x2941:	mov	rdi, rbx
0x2944:	call	0x2b50


0x26a4:	movzx	eax, byte ptr [rbx + r10]
0x26a9:	cmp	al, 0x20
0x26ab:	je	0x26a0


0x26a0:	add	r10, 1
0x26a4:	movzx	eax, byte ptr [rbx + r10]
0x26a9:	cmp	al, 0x20
0x26ab:	je	0x26a0


0x26ad:	cmp	al, 9
0x26af:	je	0x26a0


0x26b1:	cmp	al, 0x3d
0x26b3:	jne	0x1e44


0x26b9:	lea	rdx, [rbx + r10 + 1]
0x26be:	movzx	eax, byte ptr [rdx]
0x26c1:	mov	r8, rdx
0x26c4:	lea	rdx, [rdx + 1]
0x26c8:	cmp	al, 0x20
0x26ca:	je	0x26be


0x26be:	movzx	eax, byte ptr [rdx]
0x26c1:	mov	r8, rdx
0x26c4:	lea	rdx, [rdx + 1]
0x26c8:	cmp	al, 0x20
0x26ca:	je	0x26be


0x26cc:	cmp	al, 9
0x26ce:	je	0x26be


0x26d0:	mov	rdi, r8
0x26d3:	mov	qword ptr [rsp + 0x60], r8
0x26d8:	call	0x2bd0


0x2949:	test	rax, rax
0x294c:	jne	0x2696


0x2952:	jmp	0x1e44


0x26dd:	mov	r8, qword ptr [rsp + 0x60]
0x26e2:	jmp	0x275f


0x275f:	test	al, al
0x2761:	jne	0x1fa6


0x1f43:	test	al, al
0x1f45:	je	0x1e44


0x1f4b:	mov	rdx, qword ptr [rsp + 0x70]
0x1f50:	mov	rcx, r15
0x1f53:	mov	esi, dword ptr [rip + 0x2080bb]
0x1f59:	mov	r8, qword ptr [rsp + 0x60]
0x1f5e:	movzx	r9d, byte ptr [rsp + 0x68]
0x1f64:	lea	rax, [rdx + 1]
0x1f68:	sub	rcx, rax
0x1f6b:	sub	rcx, 1
0x1f6f:	je	0x1f88


0x1f88:	test	esi, esi
0x1f8a:	je	0x1e44


0x1f71:	movzx	ecx, byte ptr [rbx + rdx + 1]
0x1f76:	cmp	cl, 0x20
0x1f79:	je	0x26e4


0x1f90:	mov	dword ptr [rip + 0x20807a], 1
0x1f9a:	add	rbx, rax
0x1f9d:	test	r9b, r9b
0x1fa0:	jne	0x2741


0x26e4:	sub	esi, 1
0x26e7:	je	0x1f9a


0x1f7f:	cmp	cl, 0x2a
0x1f82:	je	0x26e4


0x1f9a:	add	rbx, rax
0x1f9d:	test	r9b, r9b
0x1fa0:	jne	0x2741


0x26ed:	mov	dword ptr [rip + 0x20791d], 0
0x26f7:	lea	rax, [rdx + 2]
0x26fb:	jmp	0x1f9a


0x338a:	mov	esi, dword ptr [rbx]
0x338c:	lea	rdx, [rip + 0x465e]
0x3393:	mov	rcx, rax
0x3396:	mov	r8, rbp
0x3399:	xor	edi, edi
0x339b:	xor	eax, eax
0x339d:	call	0x1830


0x56fc:	add	rsp, 0x20
0x5700:	mov	r11, qword ptr [rsp + 0x10]
0x5705:	cmp	r11, rax
0x5708:	ja	0x5771


0x570a:	lea	rsi, [rax + 1]
0x570e:	lea	rax, [rip + 0x204a2b]
0x5715:	cmp	r12, rax
0x5718:	mov	qword ptr [rbx], rsi
0x571b:	je	0x572f


0x5771:	mov	eax, dword ptr [rsp + 0x18]
0x5775:	mov	dword ptr [r13], eax
0x5779:	add	rsp, 0x28
0x577d:	mov	rax, r12
0x5780:	pop	rbx
0x5781:	pop	rbp
0x5782:	pop	r12
0x5784:	pop	r13
0x5786:	pop	r14
0x5788:	pop	r15
0x578a:	ret	


0x572f:	mov	rdi, rsi
0x5732:	mov	qword ptr [rsp + 0x10], rsi
0x5737:	call	0x65a0


0x571d:	mov	rdi, r12
0x5720:	mov	qword ptr [rsp + 0x10], rsi
0x5725:	call	0x15b0


0x572a:	mov	rsi, qword ptr [rsp + 0x10]
0x572f:	mov	rdi, rsi
0x5732:	mov	qword ptr [rsp + 0x10], rsi
0x5737:	call	0x65a0


0x573c:	sub	rsp, 8
0x5740:	mov	qword ptr [rbx + 8], rax
0x5744:	mov	r8d, dword ptr [rbp]
0x5748:	push	qword ptr [rbp + 0x30]
0x574b:	push	qword ptr [rbp + 0x28]
0x574e:	mov	rcx, r14
0x5751:	push	r15
0x5753:	mov	r9d, dword ptr [rsp + 0x3c]
0x5758:	mov	rdi, rax
0x575b:	mov	rdx, qword ptr [rsp + 0x28]
0x5760:	mov	rsi, qword ptr [rsp + 0x30]
0x5765:	mov	r12, rax
0x5768:	call	0x43d0


0x5e82:	mov	rdi, qword ptr [rsp + 0x38]
0x5e87:	xor	rdi, qword ptr fs:[0x28]
0x5e90:	jne	0x5e9c


0x5e92:	add	rsp, 0x48
0x5e96:	ret	


0x5e9c:	call	0x1690


0x5bcf:	mov	rcx, qword ptr [rsp + 0x38]
0x5bd4:	xor	rcx, qword ptr fs:[0x28]
0x5bdd:	jne	0x5be9


0x5bdf:	add	rsp, 0x48
0x5be3:	ret	


0x5be9:	call	0x1690


0x5c5b:	mov	rdx, qword ptr [rsp + 0x38]
0x5c60:	xor	rdx, qword ptr fs:[0x28]
0x5c69:	jne	0x5c75


0x5c6b:	add	rsp, 0x48
0x5c6f:	ret	


0x5c75:	call	0x1690


0x5def:	mov	rcx, qword ptr [rsp + 0x38]
0x5df4:	xor	rcx, qword ptr fs:[0x28]
0x5dfd:	jne	0x5e09


0x5dff:	add	rsp, 0x48
0x5e03:	ret	


0x5e09:	call	0x1690


0x2908:	lea	rsi, [rip + 0x4671]
0x290f:	mov	rbp, rax
0x2912:	xor	edi, edi
0x2914:	mov	edx, 5
0x2919:	call	0x1660


0x291e:	mov	rcx, rbp
0x2921:	mov	rdx, rax
0x2924:	xor	esi, esi
0x2926:	xor	edi, edi
0x2928:	xor	eax, eax
0x292a:	call	0x1830


0x292f:	jmp	0x21be


0x2656:	lea	rsi, [rip + 0x5213]
0x265d:	xor	edi, edi
0x265f:	mov	edx, 5
0x2664:	mov	rbp, rax
0x2667:	call	0x1660


0x266c:	lea	r8, [rip + 0x47be]
0x2673:	mov	rdx, rax
0x2676:	mov	rcx, rbp
0x2679:	xor	esi, esi
0x267b:	xor	edi, edi
0x267d:	xor	eax, eax
0x267f:	call	0x1830


0x2684:	jmp	0x21be


0x257f:	lea	rsi, [rip + 0x49eb]
0x2586:	mov	rbx, rax
0x2589:	mov	edx, 5
0x258e:	xor	edi, edi
0x2590:	call	0x1660


0x2595:	mov	rcx, rbx
0x2598:	mov	rdx, rax
0x259b:	xor	esi, esi
0x259d:	xor	eax, eax
0x259f:	xor	edi, edi
0x25a1:	call	0x1830


0x25a6:	xor	eax, eax
0x25a8:	jmp	0x21c3


0x21c3:	and	byte ptr [rsp + 0x79], al
0x21c7:	jmp	0x236d


0x1e7b:	lea	rsi, [rip + 0x50b5]
0x1e82:	mov	rbx, rax
0x1e85:	mov	edx, 5
0x1e8a:	xor	edi, edi
0x1e8c:	call	0x1660


0x1e91:	mov	rcx, rbx
0x1e94:	mov	rdx, rax
0x1e97:	xor	esi, esi
0x1e99:	mov	edi, 1
0x1e9e:	xor	eax, eax
0x1ea0:	call	0x1830


0x21e1:	lea	rsi, [rip + 0x5658]
0x21e8:	xor	edi, edi
0x21ea:	mov	edx, 5
0x21ef:	mov	rbx, rax
0x21f2:	call	0x1660


0x21f7:	lea	r9, [rip + 0x4c33]
0x21fe:	mov	rdx, rax
0x2201:	mov	r8, rbp
0x2204:	mov	rcx, rbx
0x2207:	xor	esi, esi
0x2209:	xor	edi, edi
0x220b:	xor	eax, eax
0x220d:	call	0x1830


0x2212:	jmp	0x1e55


0x2443:	mov	rbx, rax
0x2446:	call	0x15d0


0x244b:	mov	esi, dword ptr [rax]
0x244d:	lea	rdx, [rip + 0x55a1]
0x2454:	xor	eax, eax
0x2456:	mov	rcx, rbx
0x2459:	xor	edi, edi
0x245b:	call	0x1830


0x2460:	xor	eax, eax
0x2462:	jmp	0x21c3


0x2e19:	mov	rbx, rax
0x2e1c:	xor	r12d, r12d
0x2e1f:	call	0x15d0


0x2e24:	mov	esi, dword ptr [rax]
0x2e26:	lea	rdx, [rip + 0x4bc8]
0x2e2d:	mov	rcx, rbx
0x2e30:	xor	edi, edi
0x2e32:	xor	eax, eax
0x2e34:	call	0x1830


0x2e39:	jmp	0x2d61


0x2d7f:	mov	rbp, rax
0x2d82:	xor	r12d, r12d
0x2d85:	call	0x15d0


0x2d8a:	mov	esi, dword ptr [rax]
0x2d8c:	lea	rdx, [rip + 0x4c62]
0x2d93:	xor	edi, edi
0x2d95:	xor	eax, eax
0x2d97:	mov	rcx, rbp
0x2d9a:	call	0x1830


0x2d9f:	cmp	qword ptr [rip + 0x20730a], rbx
0x2da6:	je	0x2d61


0x2da8:	mov	rdi, rbx
0x2dab:	call	0x6830


0x2db0:	add	rsp, 8
0x2db4:	mov	eax, r12d
0x2db7:	pop	rbx
0x2db8:	pop	rbp
0x2db9:	pop	r12
0x2dbb:	pop	r13
0x2dbd:	ret	


0x2e69:	mov	esi, dword ptr [rbx]
0x2e6b:	lea	rdx, [rip + 0x4b83]
0x2e72:	mov	rcx, rax
0x2e75:	xor	edi, edi
0x2e77:	xor	eax, eax
0x2e79:	xor	r12d, r12d
0x2e7c:	call	0x1830


0x2e81:	jmp	0x2d61


0x5d1e:	mov	rsi, qword ptr [rsp + 0x38]
0x5d23:	xor	rsi, qword ptr fs:[0x28]
0x5d2c:	jne	0x5d33


0x5d2e:	add	rsp, 0x48
0x5d32:	ret	


0x5d33:	call	0x1690


0x576d:	add	rsp, 0x20
0x5771:	mov	eax, dword ptr [rsp + 0x18]
0x5775:	mov	dword ptr [r13], eax
0x5779:	add	rsp, 0x28
0x577d:	mov	rax, r12
0x5780:	pop	rbx
0x5781:	pop	rbp
0x5782:	pop	r12
0x5784:	pop	r13
0x5786:	pop	r14
0x5788:	pop	r15
0x578a:	ret	


0x59bc:	lea	rsi, [rax + 1]
0x59c0:	mov	qword ptr [rsp + 0x48], rax
0x59c5:	add	rsp, 0x20
0x59c9:	mov	rdi, rsi
0x59cc:	mov	qword ptr [rsp + 0x18], rsi
0x59d1:	call	0x65a0


0x59d6:	mov	qword ptr [rsp + 0x10], rax
0x59db:	sub	rsp, 8
0x59df:	push	qword ptr [rbx + 0x30]
0x59e2:	push	qword ptr [rbx + 0x28]
0x59e5:	mov	r10, qword ptr [rsp + 0x38]
0x59ea:	mov	r9d, ebp
0x59ed:	mov	r8d, dword ptr [rbx]
0x59f0:	mov	rcx, r15
0x59f3:	mov	rdx, r14
0x59f6:	mov	rdi, rax
0x59f9:	push	r10
0x59fb:	mov	rsi, qword ptr [rsp + 0x38]
0x5a00:	call	0x43d0


0x5a05:	mov	eax, dword ptr [rsp + 0x2c]
0x5a09:	add	rsp, 0x20
0x5a0d:	test	r12, r12
0x5a10:	mov	dword ptr [r13], eax
0x5a14:	je	0x5a1f


0x5a1f:	mov	rax, qword ptr [rsp + 0x10]
0x5a24:	add	rsp, 0x38
0x5a28:	pop	rbx
0x5a29:	pop	rbp
0x5a2a:	pop	r12
0x5a2c:	pop	r13
0x5a2e:	pop	r14
0x5a30:	pop	r15
0x5a32:	ret	


0x5a16:	mov	r11, qword ptr [rsp + 0x28]
0x5a1b:	mov	qword ptr [r12], r11
0x5a1f:	mov	rax, qword ptr [rsp + 0x10]
0x5a24:	add	rsp, 0x38
0x5a28:	pop	rbx
0x5a29:	pop	rbp
0x5a2a:	pop	r12
0x5a2c:	pop	r13
0x5a2e:	pop	r14
0x5a30:	pop	r15
0x5a32:	ret	


0x5931:	mov	dword ptr [rbp], r12d
0x5935:	add	rsp, 0x38
0x5939:	pop	rbx
0x593a:	pop	rbp
0x593b:	pop	r12
0x593d:	pop	r13
0x593f:	pop	r14
0x5941:	pop	r15
0x5943:	ret	


0x6dcd:	add	rbx, 1
0x6dd1:	cmp	rbp, rbx
0x6dd4:	jne	0x6dc0


0x6dc0:	mov	rdx, r15
0x6dc3:	mov	rsi, r14
0x6dc6:	mov	edi, r13d
0x6dc9:	call	qword ptr [r12 + rbx*8]






0x61c0:	mov	r13, qword ptr [rbx + 0x10]
0x61c4:	mov	r12, qword ptr [rbx + 8]
0x61c8:	lea	rsi, [rip + 0x1dd7]
0x61cf:	mov	rbx, qword ptr [rbx]
0x61d2:	mov	edx, 5
0x61d7:	xor	edi, edi
0x61d9:	call	0x1660


0x6300:	mov	r9, qword ptr [rbx + 0x10]
0x6304:	mov	r13, qword ptr [rbx + 0x30]
0x6308:	lea	rsi, [rip + 0x1e39]
0x630f:	mov	r12, qword ptr [rbx + 0x28]
0x6313:	mov	r15, qword ptr [rbx + 0x20]
0x6317:	mov	edx, 5
0x631c:	mov	r14, qword ptr [rbx + 0x18]
0x6320:	mov	r8, qword ptr [rbx + 8]
0x6324:	xor	edi, edi
0x6326:	mov	qword ptr [rsp + 8], r9
0x632b:	mov	rbx, qword ptr [rbx]
0x632e:	mov	qword ptr [rsp], r8
0x6332:	call	0x1660


0x60e0:	mov	r10, qword ptr [rbx + 0x40]
0x60e4:	mov	r9, qword ptr [rbx + 0x38]
0x60e8:	lea	rsi, [rip + 0x20b9]
0x60ef:	mov	rax, qword ptr [rbx + 0x10]
0x60f3:	mov	r8, qword ptr [rbx + 8]
0x60f7:	mov	edx, 5
0x60fc:	mov	r13, qword ptr [rbx + 0x30]
0x6100:	mov	r12, qword ptr [rbx + 0x28]
0x6104:	mov	r15, qword ptr [rbx + 0x20]
0x6108:	mov	r14, qword ptr [rbx + 0x18]
0x610c:	mov	rbx, qword ptr [rbx]
0x610f:	mov	qword ptr [rsp + 0x18], r10
0x6114:	mov	qword ptr [rsp + 0x10], r9
0x6119:	mov	qword ptr [rsp], rax
0x611d:	mov	qword ptr [rsp + 8], r8
0x6122:	xor	edi, edi
0x6124:	call	0x1660


0x6178:	mov	r12, qword ptr [rbx + 8]
0x617c:	lea	rsi, [rip + 0x1e0c]
0x6183:	mov	rbx, qword ptr [rbx]
0x6186:	mov	edx, 5
0x618b:	xor	edi, edi
0x618d:	call	0x1660


0x60a6:	add	rsp, 0x28
0x60aa:	pop	rbx
0x60ab:	pop	rbp
0x60ac:	pop	r12
0x60ae:	pop	r13
0x60b0:	pop	r14
0x60b2:	pop	r15
0x60b4:	ret	


0x6268:	mov	r15, qword ptr [rbx + 0x20]
0x626c:	lea	rsi, [rip + 0x1e85]
0x6273:	mov	edx, 5
0x6278:	xor	edi, edi
0x627a:	mov	r14, qword ptr [rbx + 0x18]
0x627e:	mov	r13, qword ptr [rbx + 0x10]
0x6282:	mov	r12, qword ptr [rbx + 8]
0x6286:	mov	rbx, qword ptr [rbx]
0x6289:	call	0x1660


0x6298:	mov	r8, qword ptr [rbx + 8]
0x629c:	mov	r12, qword ptr [rbx + 0x28]
0x62a0:	lea	rsi, [rip + 0x1e79]
0x62a7:	mov	r15, qword ptr [rbx + 0x20]
0x62ab:	mov	r14, qword ptr [rbx + 0x18]
0x62af:	mov	edx, 5
0x62b4:	mov	r13, qword ptr [rbx + 0x10]
0x62b8:	xor	edi, edi
0x62ba:	mov	rbx, qword ptr [rbx]
0x62bd:	mov	qword ptr [rsp], r8
0x62c1:	call	0x1660


0x6210:	lea	rsi, [rip + 0x1ec1]
0x6217:	mov	edx, 5
0x621c:	xor	edi, edi
0x621e:	mov	r14, qword ptr [rbx + 0x18]
0x6222:	mov	r13, qword ptr [rbx + 0x10]
0x6226:	mov	r12, qword ptr [rbx + 8]
0x622a:	mov	rbx, qword ptr [rbx]
0x622d:	call	0x1660


0x6030:	mov	r9, qword ptr [rbx + 0x38]
0x6034:	mov	rax, qword ptr [rbx + 0x10]
0x6038:	lea	rsi, [rip + 0x2139]
0x603f:	mov	r8, qword ptr [rbx + 8]
0x6043:	mov	edx, 5
0x6048:	xor	edi, edi
0x604a:	mov	r13, qword ptr [rbx + 0x30]
0x604e:	mov	r12, qword ptr [rbx + 0x28]
0x6052:	mov	qword ptr [rsp + 0x10], r9
0x6057:	mov	r15, qword ptr [rbx + 0x20]
0x605b:	mov	r14, qword ptr [rbx + 0x18]
0x605f:	mov	qword ptr [rsp], rax
0x6063:	mov	qword ptr [rsp + 8], r8
0x6068:	mov	rbx, qword ptr [rbx]
0x606b:	call	0x1660


0x6138:	mov	rbx, qword ptr [rbx]
0x613b:	lea	rsi, [rip + 0x1e3d]
0x6142:	mov	edx, 5
0x6147:	xor	edi, edi
0x6149:	call	0x1660


0x614e:	add	rsp, 0x28
0x6152:	mov	rcx, rbx
0x6155:	mov	rdi, rbp
0x6158:	pop	rbx
0x6159:	pop	rbp
0x615a:	pop	r12
0x615c:	pop	r13
0x615e:	pop	r14
0x6160:	pop	r15
0x6162:	mov	rdx, rax
0x6165:	mov	esi, 1
0x616a:	xor	eax, eax
0x616c:	jmp	0x18a0


0x6070:	sub	rsp, 8
0x6074:	mov	r9, qword ptr [rsp + 0x18]
0x6079:	mov	rdx, rax
0x607c:	mov	rcx, rbx
0x607f:	mov	esi, 1
0x6084:	mov	rdi, rbp
0x6087:	xor	eax, eax
0x6089:	push	r9
0x608b:	push	r13
0x608d:	push	r12
0x608f:	push	r15
0x6091:	push	r14
0x6093:	mov	r9, qword ptr [rsp + 0x30]
0x6098:	mov	r8, qword ptr [rsp + 0x38]
0x609d:	call	0x18a0


0x6232:	sub	rsp, 8
0x6236:	push	r14
0x6238:	mov	rdx, rax
0x623b:	mov	r9, r13
0x623e:	mov	r8, r12
0x6241:	mov	rcx, rbx
0x6244:	mov	rdi, rbp
0x6247:	mov	esi, 1
0x624c:	xor	eax, eax
0x624e:	call	0x18a0


0x6253:	pop	rax
0x6254:	pop	rdx
0x6255:	add	rsp, 0x28
0x6259:	pop	rbx
0x625a:	pop	rbp
0x625b:	pop	r12
0x625d:	pop	r13
0x625f:	pop	r14
0x6261:	pop	r15
0x6263:	ret	


0x62c6:	sub	rsp, 8
0x62ca:	mov	r9, r13
0x62cd:	push	r12
0x62cf:	push	r15
0x62d1:	push	r14
0x62d3:	mov	r8, qword ptr [rsp + 0x20]
0x62d8:	mov	rcx, rbx
0x62db:	mov	rdx, rax
0x62de:	mov	rdi, rbp
0x62e1:	mov	esi, 1
0x62e6:	xor	eax, eax
0x62e8:	call	0x18a0


0x62ed:	add	rsp, 0x20
0x62f1:	add	rsp, 0x28
0x62f5:	pop	rbx
0x62f6:	pop	rbp
0x62f7:	pop	r12
0x62f9:	pop	r13
0x62fb:	pop	r14
0x62fd:	pop	r15
0x62ff:	ret	


0x628e:	push	r15
0x6290:	jmp	0x6236


0x6236:	push	r14
0x6238:	mov	rdx, rax
0x623b:	mov	r9, r13
0x623e:	mov	r8, r12
0x6241:	mov	rcx, rbx
0x6244:	mov	rdi, rbp
0x6247:	mov	esi, 1
0x624c:	xor	eax, eax
0x624e:	call	0x18a0


0x6192:	add	rsp, 0x28
0x6196:	mov	r8, r12
0x6199:	mov	rcx, rbx
0x619c:	mov	rdi, rbp
0x619f:	mov	rdx, rax
0x61a2:	mov	esi, 1
0x61a7:	pop	rbx
0x61a8:	pop	rbp
0x61a9:	pop	r12
0x61ab:	pop	r13
0x61ad:	pop	r14
0x61af:	pop	r15
0x61b1:	xor	eax, eax
0x61b3:	jmp	0x18a0


0x6337:	push	r13
0x6339:	push	r12
0x633b:	push	r15
0x633d:	push	r14
0x633f:	mov	r9, qword ptr [rsp + 0x28]
0x6344:	jmp	0x62d3


0x62d3:	mov	r8, qword ptr [rsp + 0x20]
0x62d8:	mov	rcx, rbx
0x62db:	mov	rdx, rax
0x62de:	mov	rdi, rbp
0x62e1:	mov	esi, 1
0x62e6:	xor	eax, eax
0x62e8:	call	0x18a0


0x61de:	add	rsp, 0x28
0x61e2:	mov	r9, r13
0x61e5:	mov	r8, r12
0x61e8:	mov	rcx, rbx
0x61eb:	mov	rdi, rbp
0x61ee:	mov	rdx, rax
0x61f1:	pop	rbx
0x61f2:	pop	rbp
0x61f3:	pop	r12
0x61f5:	pop	r13
0x61f7:	pop	r14
0x61f9:	pop	r15
0x61fb:	mov	esi, 1
0x6200:	xor	eax, eax
0x6202:	jmp	0x18a0


0x4f70:	sub	rsp, 8
0x4f74:	mov	rcx, rbp
0x4f77:	mov	rsi, r13
0x4f7a:	push	qword ptr [rsp + 0x68]
0x4f7e:	push	qword ptr [rsp + 0x78]
0x4f82:	mov	rdi, r14
0x4f85:	push	0
0x4f87:	mov	r9d, dword ptr [rsp + 0x98]
0x4f8f:	mov	r8d, dword ptr [rsp + 0x28]
0x4f94:	mov	rdx, qword ptr [rsp + 0x30]
0x4f99:	and	r9d, 0xfffffffd
0x4f9d:	call	0x43d0


0x4fa2:	add	rsp, 0x20
0x4fa6:	mov	r15, rax
0x4fa9:	mov	rbx, qword ptr [rsp + 0xa8]
0x4fb1:	xor	rbx, qword ptr fs:[0x28]
0x4fba:	mov	rax, r15
0x4fbd:	jne	0x55c3


0x4fc3:	add	rsp, 0xb8
0x4fca:	pop	rbx
0x4fcb:	pop	rbp
0x4fcc:	pop	r12
0x4fce:	pop	r13
0x4fd0:	pop	r14
0x4fd2:	pop	r15
0x4fd4:	ret	


0x55c3:	call	0x1690


0x556d:	sub	rsp, 8
0x5571:	mov	r8d, 5
0x5577:	mov	rcx, r11
0x557a:	push	qword ptr [rsp + 0x68]
0x557e:	push	qword ptr [rsp + 0x78]
0x5582:	mov	rdi, r14
0x5585:	push	qword ptr [rsp + 0x38]
0x5589:	mov	r9d, dword ptr [rsp + 0x98]
0x5591:	mov	rdx, qword ptr [rsp + 0x30]
0x5596:	mov	rsi, qword ptr [rsp + 0x70]
0x559b:	call	0x43d0


0x55a0:	add	rsp, 0x20
0x55a4:	mov	r15, rax
0x55a7:	jmp	0x4fa9


0x4fa9:	mov	rbx, qword ptr [rsp + 0xa8]
0x4fb1:	xor	rbx, qword ptr fs:[0x28]
0x4fba:	mov	rax, r15
0x4fbd:	jne	0x55c3


0x15a0:	push	qword ptr [rip + 0x20886a]
0x15a6:	jmp	qword ptr [rip + 0x20886c]


0x15ac:	nop	dword ptr [rax]


0x15b6:	push	0
0x15bb:	jmp	0x15a0


0x15c6:	push	1
0x15cb:	jmp	0x15a0


0x15d6:	push	2
0x15db:	jmp	0x15a0


0x15e6:	push	3
0x15eb:	jmp	0x15a0


0x15f6:	push	4
0x15fb:	jmp	0x15a0


0x1606:	push	5
0x160b:	jmp	0x15a0


0x1616:	push	6
0x161b:	jmp	0x15a0


0x1626:	push	7
0x162b:	jmp	0x15a0


0x1636:	push	8
0x163b:	jmp	0x15a0


0x1646:	push	9
0x164b:	jmp	0x15a0


0x1656:	push	0xa
0x165b:	jmp	0x15a0


0x1666:	push	0xb
0x166b:	jmp	0x15a0


0x1676:	push	0xc
0x167b:	jmp	0x15a0


0x1686:	push	0xd
0x168b:	jmp	0x15a0


0x1696:	push	0xe
0x169b:	jmp	0x15a0


0x16a6:	push	0xf
0x16ab:	jmp	0x15a0


0x16b6:	push	0x10
0x16bb:	jmp	0x15a0


0x16c6:	push	0x11
0x16cb:	jmp	0x15a0


0x16d6:	push	0x12
0x16db:	jmp	0x15a0


0x16e6:	push	0x13
0x16eb:	jmp	0x15a0


0x16f6:	push	0x14
0x16fb:	jmp	0x15a0


0x1706:	push	0x15
0x170b:	jmp	0x15a0


0x1716:	push	0x16
0x171b:	jmp	0x15a0


0x1726:	push	0x17
0x172b:	jmp	0x15a0


0x1730:	jmp	qword ptr [rip + 0x2087aa]




0x1736:	push	0x18
0x173b:	jmp	0x15a0


0x1746:	push	0x19
0x174b:	jmp	0x15a0


0x1756:	push	0x1a
0x175b:	jmp	0x15a0


0x1766:	push	0x1b
0x176b:	jmp	0x15a0


0x1776:	push	0x1c
0x177b:	jmp	0x15a0


0x1786:	push	0x1d
0x178b:	jmp	0x15a0


0x1796:	push	0x1e
0x179b:	jmp	0x15a0


0x17a6:	push	0x1f
0x17ab:	jmp	0x15a0


0x17b6:	push	0x20
0x17bb:	jmp	0x15a0


0x17c6:	push	0x21
0x17cb:	jmp	0x15a0


0x17d6:	push	0x22
0x17db:	jmp	0x15a0


0x17e6:	push	0x23
0x17eb:	jmp	0x15a0


0x17f6:	push	0x24
0x17fb:	jmp	0x15a0


0x1806:	push	0x25
0x180b:	jmp	0x15a0


0x1816:	push	0x26
0x181b:	jmp	0x15a0


0x1826:	push	0x27
0x182b:	jmp	0x15a0


0x1836:	push	0x28
0x183b:	jmp	0x15a0


0x1846:	push	0x29
0x184b:	jmp	0x15a0


0x1856:	push	0x2a
0x185b:	jmp	0x15a0


0x1866:	push	0x2b
0x186b:	jmp	0x15a0


0x1876:	push	0x2c
0x187b:	jmp	0x15a0


0x1886:	push	0x2d
0x188b:	jmp	0x15a0


0x1896:	push	0x2e
0x189b:	jmp	0x15a0


0x18a6:	push	0x2f
0x18ab:	jmp	0x15a0


0x18b0:	jmp	qword ptr [rip + 0x2086ea]




0x18b6:	push	0x30
0x18bb:	jmp	0x15a0


0x18c0:	jmp	qword ptr [rip + 0x2086e2]




0x18c6:	push	0x31
0x18cb:	jmp	0x15a0


0x18d6:	push	0x32
0x18db:	jmp	0x15a0


0x18e6:	push	0x33
0x18eb:	jmp	0x15a0


0x2a3d:	nop	dword ptr [rax]


0x2a6a:	hlt	


0x2a6b:	nop	dword ptr [rax + rax]


0x2aa2:	nop	dword ptr [rax]
0x2aa6:	nop	word ptr cs:[rax + rax]


0x2af2:	nop	dword ptr [rax]
0x2af6:	nop	word ptr cs:[rax + rax]


0x2b3a:	nop	word ptr [rax + rax]


0x2b4a:	nop	word ptr [rax + rax]


0x2bc9:	nop	dword ptr [rax]


0x2cf5:	nop	
0x2cf6:	nop	word ptr cs:[rax + rax]


0x2e9a:	nop	word ptr [rax + rax]


0x32fa:	nop	word ptr [rax + rax]


0x3308:	nop	dword ptr [rax + rax]


0x3318:	nop	dword ptr [rax + rax]


0x33c4:	nop	word ptr cs:[rax + rax]
0x33ce:	nop	


0x33fb:	nop	dword ptr [rax + rax]


0x341a:	nop	word ptr [rax + rax]


0x3b8f:	nop	


0x3ca2:	nop	dword ptr [rax]
0x3ca6:	nop	word ptr cs:[rax + rax]


0x3f87:	nop	word ptr [rax + rax]


0x4015:	nop	
0x4016:	nop	word ptr cs:[rax + rax]


0x4152:	nop	word ptr cs:[rax + rax]
0x415c:	nop	dword ptr [rax]


0x4165:	nop	
0x4166:	nop	word ptr cs:[rax + rax]


0x4192:	nop	word ptr cs:[rax + rax]
0x419c:	nop	dword ptr [rax]


0x4233:	nop	word ptr cs:[rax + rax]
0x423d:	nop	dword ptr [rax]


0x42df:	nop	


0x43c7:	nop	word ptr [rax + rax]


0x4463:	mov	byte ptr [rsp + 0xe], 1
0x4468:	mov	byte ptr [rsp + 0x7c], 0
0x446d:	xor	r12d, r12d
0x4470:	mov	qword ptr [rsp + 0x50], 0
0x4479:	mov	byte ptr [rsp + 0xf], 1
0x447e:	mov	byte ptr [rsp + 0xd], 0
0x4483:	lea	rax, [rip + 0x360b]
0x448a:	mov	qword ptr [rsp + 0x18], 1
0x4493:	xor	r15d, r15d
0x4496:	mov	dword ptr [rsp + 8], 2
0x449e:	mov	qword ptr [rsp + 0x48], rax
0x44a3:	xor	r11d, r11d
0x44a6:	mov	rax, rbp
0x44a9:	mov	r8d, r12d
0x44ac:	mov	rbp, r11
0x44af:	mov	r11, rax
0x44b2:	nop	word ptr [rax + rax]
0x44b8:	cmp	r11, rbp
0x44bb:	setne	r12b
0x44bf:	cmp	r11, -1
0x44c3:	jne	0x44d2


0x44c5:	mov	rax, qword ptr [rsp + 0x10]
0x44ca:	cmp	byte ptr [rax + rbp], 0
0x44ce:	setne	r12b
0x44d2:	test	r12b, r12b
0x44d5:	je	0x4b30


0x44d2:	test	r12b, r12b
0x44d5:	je	0x4b30


0x4b30:	cmp	dword ptr [rsp + 8], 2
0x4b35:	movzx	ebx, byte ptr [rsp + 0xf]
0x4b3a:	mov	r12d, r8d
0x4b3d:	mov	rbp, r11
0x4b40:	sete	dl
0x4b43:	mov	eax, ebx
0x4b45:	test	r15, r15
0x4b48:	sete	cl
0x4b4b:	and	eax, edx
0x4b4d:	and	al, cl
0x4b4f:	jne	0x55b6


0x44db:	cmp	dword ptr [rsp + 8], 2
0x44e0:	mov	rdi, qword ptr [rsp + 0x10]
0x44e5:	lea	r9, [rdi + rbp]
0x44e9:	setne	al
0x44ec:	and	al, byte ptr [rsp + 0xd]
0x44f0:	mov	r10d, eax
0x44f3:	je	0x45a0


0x4b55:	mov	eax, ebx
0x4b57:	xor	eax, 1
0x4b5a:	and	dl, al
0x4b5c:	je	0x54cc


0x55b6:	mov	dword ptr [rsp + 8], 2
0x55be:	jmp	0x4f59


0x45a0:	movzx	ebx, byte ptr [r9]
0x45a4:	cmp	bl, 0x7e
0x45a7:	ja	0x48c8


0x44f9:	mov	rax, qword ptr [rsp + 0x18]
0x44fe:	test	rax, rax
0x4501:	je	0x4930


0x54cc:	mov	rbx, qword ptr [rsp + 0x48]
0x54d1:	test	rbx, rbx
0x54d4:	je	0x5502


0x4b62:	cmp	byte ptr [rsp + 0x7c], 0
0x4b67:	je	0x54ca


0x4f59:	cmp	byte ptr [rsp + 0xd], 0
0x4f5e:	je	0x4f70


0x45ad:	lea	rcx, [rip + 0x3578]
0x45b4:	movzx	edx, bl
0x45b7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x45bb:	add	rax, rcx
0x45be:	jmp	rax


0x48c8:	cmp	qword ptr [rsp + 0x58], 1
0x48ce:	jne	0x4c78


0x4930:	movzx	ebx, byte ptr [r9]
0x4934:	cmp	bl, 0x7e
0x4937:	ja	0x48c0


0x4507:	cmp	r11, -1
0x450b:	lea	rbx, [rbp + rax]
0x4510:	jne	0x4540


0x5502:	cmp	r13, r15
0x5505:	jbe	0x4fa9


0x54d6:	test	al, al
0x54d8:	je	0x5502


0x54ca:	mov	eax, edx
0x54cc:	mov	rbx, qword ptr [rsp + 0x48]
0x54d1:	test	rbx, rbx
0x54d4:	je	0x5502


0x4b6d:	cmp	byte ptr [rsp + 0xe], 0
0x4b72:	jne	0x556d


0x4f60:	test	al, al
0x4f62:	mov	eax, 4
0x4f67:	cmove	eax, dword ptr [rsp + 8]
0x4f6c:	mov	dword ptr [rsp + 8], eax


0x48d4:	mov	qword ptr [rsp + 0x38], r11
0x48d9:	mov	byte ptr [rsp + 0x30], r8b
0x48de:	mov	byte ptr [rsp + 0x28], r10b
0x48e3:	call	0x18e0


0x4c78:	lea	rax, [rsp + 0xa0]
0x4c80:	cmp	r11, -1
0x4c84:	mov	qword ptr [rsp + 0xa0], 0
0x4c90:	mov	qword ptr [rsp + 0x28], rax
0x4c95:	jne	0x4cc4


0x4939:	lea	rcx, [rip + 0x33e8]
0x4940:	movzx	edx, bl
0x4943:	movsxd	rax, dword ptr [rcx + rdx*4]
0x4947:	add	rax, rcx
0x494a:	jmp	rax


0x48c0:	xor	r10d, r10d
0x48c3:	nop	dword ptr [rax + rax]
0x48c8:	cmp	qword ptr [rsp + 0x58], 1
0x48ce:	jne	0x4c78


0x4512:	cmp	rax, 1
0x4516:	jbe	0x4540


0x4540:	cmp	rbx, r11
0x4543:	mov	byte ptr [rsp + 0x28], r10b
0x4548:	ja	0x4b00


0x550b:	mov	byte ptr [r14 + r15], 0
0x5510:	jmp	0x4fa9


0x54da:	movzx	ecx, byte ptr [rbx]
0x54dd:	mov	rax, rbx
0x54e0:	test	cl, cl
0x54e2:	je	0x5502


0x4b78:	test	r13, r13
0x4b7b:	sete	al
0x4b7e:	cmp	qword ptr [rsp + 0x50], 0
0x4b84:	setne	dl
0x4b87:	and	al, dl
0x4b89:	je	0x55ac


0x4c97:	mov	rdi, qword ptr [rsp + 0x10]
0x4c9c:	mov	byte ptr [rsp + 0x40], r8b
0x4ca1:	mov	byte ptr [rsp + 0x38], r10b
0x4ca6:	mov	qword ptr [rsp + 0x30], r9
0x4cab:	call	0x1680


0x4cc4:	lea	rax, [rsp + 0x9c]
0x4ccc:	xor	ecx, ecx
0x4cce:	mov	byte ptr [rsp + 0x7e], bl
0x4cd2:	mov	byte ptr [rsp + 0x7d], r8b
0x4cd7:	mov	rbx, rcx
0x4cda:	mov	qword ptr [rsp + 0x88], r9
0x4ce2:	mov	qword ptr [rsp + 0x38], rax
0x4ce7:	mov	byte ptr [rsp + 0x7f], r10b
0x4cec:	mov	qword ptr [rsp + 0x80], r15
0x4cf4:	mov	qword ptr [rsp + 0x40], r14
0x4cf9:	mov	qword ptr [rsp + 0x70], r13
0x4cfe:	mov	qword ptr [rsp + 0x30], r11
0x4d03:	mov	rax, qword ptr [rsp + 0x10]
0x4d08:	lea	r14, [rbp + rbx]
0x4d0d:	mov	rdx, qword ptr [rsp + 0x30]
0x4d12:	mov	rcx, qword ptr [rsp + 0x28]
0x4d17:	mov	rdi, qword ptr [rsp + 0x38]
0x4d1c:	lea	r13, [rax + r14]
0x4d20:	sub	rdx, r14
0x4d23:	mov	rsi, r13
0x4d26:	call	0x6bd0


0x4518:	mov	byte ptr [rsp + 0x38], r8b
0x451d:	mov	byte ptr [rsp + 0x30], r10b
0x4522:	mov	qword ptr [rsp + 0x28], r9
0x4527:	call	0x1680


0x454e:	mov	rdx, qword ptr [rsp + 0x18]
0x4553:	mov	rsi, qword ptr [rsp + 0x48]
0x4558:	mov	rdi, r9
0x455b:	mov	qword ptr [rsp + 0x40], r11
0x4560:	mov	byte ptr [rsp + 0x38], r8b
0x4565:	mov	qword ptr [rsp + 0x30], r9
0x456a:	call	0x1730


0x4b00:	xor	r10d, r10d
0x4b03:	jmp	0x45a0


0x54e4:	mov	rdx, r15
0x54e7:	sub	rax, r15
0x54ea:	cmp	r13, rdx
0x54ed:	jbe	0x54f3


0x55ac:	movzx	eax, byte ptr [rsp + 0x7c]
0x55b1:	jmp	0x54cc


0x4b8f:	mov	r13, qword ptr [rsp + 0x50]
0x4b94:	lea	rbx, [rip + 0x2efa]
0x4b9b:	mov	byte ptr [r14], 0x27
0x4b9f:	mov	dword ptr [rsp + 8], 2
0x4ba7:	mov	r15d, 1
0x4bad:	mov	qword ptr [rsp + 0x18], 1
0x4bb6:	mov	byte ptr [rsp + 0xf], 0
0x4bbb:	mov	qword ptr [rsp + 0x48], rbx
0x4bc0:	mov	byte ptr [rsp + 0x7c], al
0x4bc4:	jmp	0x44a3


0x54f3:	add	rdx, 1
0x54f7:	movzx	ecx, byte ptr [rax + rdx]
0x54fb:	test	cl, cl
0x54fd:	jne	0x54ea


0x54ef:	mov	byte ptr [r14 + rdx], cl
0x54f3:	add	rdx, 1
0x54f7:	movzx	ecx, byte ptr [rax + rdx]
0x54fb:	test	cl, cl
0x54fd:	jne	0x54ea


0x44a3:	xor	r11d, r11d
0x44a6:	mov	rax, rbp
0x44a9:	mov	r8d, r12d
0x44ac:	mov	rbp, r11
0x44af:	mov	r11, rax
0x44b2:	nop	word ptr [rax + rax]
0x44b8:	cmp	r11, rbp
0x44bb:	setne	r12b
0x44bf:	cmp	r11, -1
0x44c3:	jne	0x44d2


0x54ff:	mov	r15, rdx
0x5502:	cmp	r13, r15
0x5505:	jbe	0x4fa9


0x54ea:	cmp	r13, rdx
0x54ed:	jbe	0x54f3


0x456f:	test	eax, eax
0x4571:	mov	r9, qword ptr [rsp + 0x30]
0x4576:	movzx	r8d, byte ptr [rsp + 0x38]
0x457c:	mov	r11, qword ptr [rsp + 0x40]
0x4581:	jne	0x4b00


0x4587:	cmp	byte ptr [rsp + 0xf], 0
0x458c:	movzx	r10d, byte ptr [rsp + 0x28]
0x4592:	jne	0x5515


0x5515:	cmp	dword ptr [rsp + 8], 2
0x551a:	movzx	ebx, byte ptr [rsp + 0xf]
0x551f:	mov	rbp, r11
0x5522:	sete	al
0x5525:	mov	byte ptr [rsp + 0xd], bl
0x5529:	jmp	0x4f59


0x4d2b:	test	rax, rax
0x4d2e:	mov	r15, rax
0x4d31:	je	0x4d81


0x4d81:	mov	edx, r12d
0x4d84:	mov	rdi, rbx
0x4d87:	movzx	r8d, byte ptr [rsp + 0x7d]
0x4d8d:	xor	edx, 1
0x4d90:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4d95:	movzx	r10d, byte ptr [rsp + 0x7f]
0x4d9b:	and	dl, byte ptr [rsp + 0xd]
0x4d9f:	mov	r15, qword ptr [rsp + 0x80]
0x4da7:	mov	r14, qword ptr [rsp + 0x40]
0x4dac:	mov	r13, qword ptr [rsp + 0x70]
0x4db1:	mov	r11, qword ptr [rsp + 0x30]
0x4db6:	cmp	rdi, 1
0x4dba:	jbe	0x53bb


0x4d33:	cmp	rax, -1
0x4d37:	je	0x5355


0x53bb:	mov	eax, edx
0x53bd:	jmp	0x4917


0x4dc0:	mov	rcx, rdi
0x4dc3:	xor	esi, esi
0x4dc5:	movzx	r9d, byte ptr [rsp + 0xf]
0x4dcb:	add	rcx, rbp
0x4dce:	mov	rdi, qword ptr [rsp + 0x10]
0x4dd3:	jmp	0x4e8e


0x5355:	mov	rdi, rbx
0x5358:	movzx	r8d, byte ptr [rsp + 0x7d]
0x535e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x5363:	movzx	r10d, byte ptr [rsp + 0x7f]
0x5369:	mov	r15, qword ptr [rsp + 0x80]
0x5371:	xor	r12d, r12d
0x5374:	mov	r14, qword ptr [rsp + 0x40]
0x5379:	mov	r13, qword ptr [rsp + 0x70]
0x537e:	mov	r11, qword ptr [rsp + 0x30]
0x5383:	movzx	edx, byte ptr [rsp + 0xd]
0x5388:	jmp	0x4db6


0x4d3d:	cmp	rax, -2
0x4d41:	je	0x52e1


0x4917:	test	al, al
0x4919:	jne	0x52b1


0x4e8e:	test	dl, dl
0x4e90:	jne	0x4de0


0x4db6:	cmp	rdi, 1
0x4dba:	jbe	0x53bb


0x52e1:	mov	r11, qword ptr [rsp + 0x30]
0x52e6:	mov	rsi, r14
0x52e9:	mov	rcx, r13
0x52ec:	mov	rax, rbx
0x52ef:	mov	rdi, rbx
0x52f2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x52f8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x52fd:	mov	r9, qword ptr [rsp + 0x88]
0x5305:	cmp	rsi, r11
0x5308:	movzx	r10d, byte ptr [rsp + 0x7f]
0x530e:	mov	r15, qword ptr [rsp + 0x80]
0x5316:	mov	r14, qword ptr [rsp + 0x40]
0x531b:	mov	r13, qword ptr [rsp + 0x70]
0x5320:	jae	0x5348


0x4d47:	cmp	dword ptr [rsp + 8], 2
0x4d4c:	sete	al
0x4d4f:	and	al, byte ptr [rsp + 0xf]
0x4d53:	jne	0x4ef0


0x491f:	cmp	dword ptr [rsp + 8], 2
0x4924:	sete	dl
0x4927:	jmp	0x45f8


0x52b1:	movzx	edx, byte ptr [rsp + 0xd]
0x52b6:	xor	r12d, r12d
0x52b9:	jmp	0x4dc0


0x4e96:	mov	eax, esi
0x4e98:	xor	eax, 1
0x4e9b:	and	eax, r8d
0x4e9e:	test	r10b, r10b
0x4ea1:	je	0x4eb1


0x4de0:	cmp	dword ptr [rsp + 8], 2
0x4de5:	sete	al
0x4de8:	test	r9b, r9b
0x4deb:	jne	0x52a0


0x5322:	cmp	byte ptr [rcx], 0
0x5325:	jne	0x5337


0x5348:	movzx	edx, byte ptr [rsp + 0xd]
0x534d:	xor	r12d, r12d
0x5350:	jmp	0x4db6


0x4d59:	mov	edi, dword ptr [rsp + 0x9c]
0x4d60:	call	0x18c0


0x4ef0:	cmp	r15, 1
0x4ef4:	je	0x4d59


0x45f8:	cmp	byte ptr [rsp + 0xd], 1
0x45fd:	jne	0x4712


0x4eb1:	add	rbp, 1
0x4eb5:	cmp	rbp, rcx
0x4eb8:	jae	0x463c


0x4ea3:	cmp	r13, r15
0x4ea6:	jbe	0x4ead


0x4df1:	mov	esi, r8d
0x4df4:	xor	esi, 1
0x4df7:	and	al, sil
0x4dfa:	je	0x4e2b


0x52a0:	movzx	ebx, byte ptr [rsp + 0xf]
0x52a5:	mov	rbp, r11
0x52a8:	mov	byte ptr [rsp + 0xd], bl
0x52ac:	jmp	0x4f59


0x5327:	jmp	0x5348


0x5337:	add	rax, 1
0x533b:	lea	rdx, [rbp + rax]
0x5340:	cmp	r11, rdx
0x5343:	ja	0x5330


0x4efa:	mov	rdi, qword ptr [rsp + 0x10]
0x4eff:	lea	rcx, [rdi + r15]
0x4f03:	lea	rdx, [rdi + r14 + 1]
0x4f08:	lea	r8, [rcx + r14]
0x4f0c:	jmp	0x4f1d


0x4603:	test	dl, dl
0x4605:	jne	0x4712


0x4712:	cmp	byte ptr [rsp + 0xf], 0
0x4717:	jne	0x460b


0x4ebe:	test	al, al
0x4ec0:	je	0x52be


0x463c:	test	al, al
0x463e:	je	0x4660


0x4ead:	add	r15, 1
0x4eb1:	add	rbp, 1
0x4eb5:	cmp	rbp, rcx
0x4eb8:	jae	0x463c


0x4ea8:	mov	byte ptr [r14 + r15], 0x5c
0x4ead:	add	r15, 1
0x4eb1:	add	rbp, 1
0x4eb5:	cmp	rbp, rcx
0x4eb8:	jae	0x463c


0x4e2b:	cmp	r13, r15
0x4e2e:	jbe	0x4e35


0x4dfc:	cmp	r13, r15
0x4dff:	jbe	0x4e06


0x5345:	mov	rdi, rax
0x5348:	movzx	edx, byte ptr [rsp + 0xd]
0x534d:	xor	r12d, r12d
0x5350:	jmp	0x4db6


0x5330:	cmp	byte ptr [r9 + rax], 0
0x5335:	je	0x5345


0x4f1d:	movzx	ecx, byte ptr [rdx]
0x4f20:	sub	ecx, 0x5b
0x4f23:	cmp	cl, 0x21
0x4f26:	ja	0x4f10


0x460b:	mov	rsi, qword ptr [rsp + 0x20]
0x4610:	test	rsi, rsi
0x4613:	je	0x4629


0x471d:	jmp	0x4629


0x52be:	xor	r10d, r10d
0x52c1:	jmp	0x4e7d


0x4ec6:	cmp	r13, r15
0x4ec9:	jbe	0x4ed0


0x4660:	cmp	r15, r13
0x4663:	jae	0x4669


0x4640:	cmp	r13, r15
0x4643:	jbe	0x464a


0x4e35:	lea	rax, [r15 + 1]
0x4e39:	cmp	r13, rax
0x4e3c:	jbe	0x4e4b


0x4e30:	mov	byte ptr [r14 + r15], 0x5c
0x4e35:	lea	rax, [r15 + 1]
0x4e39:	cmp	r13, rax
0x4e3c:	jbe	0x4e4b


0x4e06:	lea	rsi, [r15 + 1]
0x4e0a:	cmp	r13, rsi
0x4e0d:	jbe	0x4e15


0x4e01:	mov	byte ptr [r14 + r15], 0x27
0x4e06:	lea	rsi, [r15 + 1]
0x4e0a:	cmp	r13, rsi
0x4e0d:	jbe	0x4e15


0x4f28:	mov	esi, 1
0x4f2d:	shl	rsi, cl
0x4f30:	mov	rcx, rsi
0x4f33:	movabs	rsi, 0x20000002b
0x4f3d:	test	rcx, rsi
0x4f40:	je	0x4f10


0x4f10:	add	rdx, 1
0x4f14:	cmp	r8, rdx
0x4f17:	je	0x4d59


0x4629:	test	r10b, r10b
0x462c:	jne	0x4773


0x4615:	mov	edx, ebx
0x4617:	shr	dl, 5
0x461a:	movzx	edx, dl
0x461d:	mov	edx, dword ptr [rsi + rdx*4]
0x4620:	bt	edx, ebx
0x4623:	jb	0x4773


0x4e7d:	cmp	r13, r15
0x4e80:	jbe	0x4e86


0x4ed0:	lea	rax, [r15 + 1]
0x4ed4:	cmp	r13, rax
0x4ed7:	jbe	0x4edf


0x4ecb:	mov	byte ptr [r14 + r15], 0x27
0x4ed0:	lea	rax, [r15 + 1]
0x4ed4:	cmp	r13, rax
0x4ed7:	jbe	0x4edf


0x4665:	mov	byte ptr [r14 + r15], bl
0x4669:	movzx	edi, byte ptr [rsp + 0xe]
0x466e:	add	r15, 1
0x4672:	mov	eax, 0
0x4677:	test	r12b, r12b
0x467a:	cmove	edi, eax
0x467d:	mov	byte ptr [rsp + 0xe], dil
0x4682:	jmp	0x44b8


0x4669:	movzx	edi, byte ptr [rsp + 0xe]
0x466e:	add	r15, 1
0x4672:	mov	eax, 0
0x4677:	test	r12b, r12b
0x467a:	cmove	edi, eax
0x467d:	mov	byte ptr [rsp + 0xe], dil
0x4682:	jmp	0x44b8


0x464a:	lea	rax, [r15 + 1]
0x464e:	cmp	r13, rax
0x4651:	jbe	0x4659


0x4645:	mov	byte ptr [r14 + r15], 0x27
0x464a:	lea	rax, [r15 + 1]
0x464e:	cmp	r13, rax
0x4651:	jbe	0x4659


0x4e4b:	lea	rax, [r15 + 2]
0x4e4f:	cmp	r13, rax
0x4e52:	jbe	0x4e64


0x4e3e:	mov	eax, ebx
0x4e40:	shr	al, 6
0x4e43:	add	eax, 0x30
0x4e46:	mov	byte ptr [r14 + r15 + 1], al
0x4e4b:	lea	rax, [r15 + 2]
0x4e4f:	cmp	r13, rax
0x4e52:	jbe	0x4e64


0x4e15:	lea	rsi, [r15 + 2]
0x4e19:	cmp	r13, rsi
0x4e1c:	jbe	0x4e24


0x4e0f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x4e15:	lea	rsi, [r15 + 2]
0x4e19:	cmp	r13, rsi
0x4e1c:	jbe	0x4e24


0x4f42:	mov	r14, qword ptr [rsp + 0x40]
0x4f47:	mov	r13, qword ptr [rsp + 0x70]
0x4f4c:	mov	rbp, qword ptr [rsp + 0x30]
0x4f51:	mov	dword ptr [rsp + 8], 2
0x4f59:	cmp	byte ptr [rsp + 0xd], 0
0x4f5e:	je	0x4f70


0x4632:	xor	eax, 1
0x4635:	add	rbp, 1
0x4639:	and	eax, r8d
0x463c:	test	al, al
0x463e:	je	0x4660


0x4773:	cmp	dword ptr [rsp + 8], 2
0x4778:	sete	dl
0x477b:	cmp	byte ptr [rsp + 0xf], 0
0x4780:	mov	eax, edx
0x4782:	jne	0x4fd8


0x4e86:	movzx	ebx, byte ptr [rdi + rbp]
0x4e8a:	add	r15, 1
0x4e8e:	test	dl, dl
0x4e90:	jne	0x4de0


0x4e82:	mov	byte ptr [r14 + r15], bl
0x4e86:	movzx	ebx, byte ptr [rdi + rbp]
0x4e8a:	add	r15, 1
0x4e8e:	test	dl, dl
0x4e90:	jne	0x4de0


0x4edf:	add	r15, 2
0x4ee3:	xor	r10d, r10d
0x4ee6:	xor	r8d, r8d
0x4ee9:	jmp	0x4e7d


0x4ed9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x4edf:	add	r15, 2
0x4ee3:	xor	r10d, r10d
0x4ee6:	xor	r8d, r8d
0x4ee9:	jmp	0x4e7d


0x44b8:	cmp	r11, rbp
0x44bb:	setne	r12b
0x44bf:	cmp	r11, -1
0x44c3:	jne	0x44d2


0x4659:	add	r15, 2
0x465d:	xor	r8d, r8d
0x4660:	cmp	r15, r13
0x4663:	jae	0x4669


0x4653:	mov	byte ptr [r14 + r15 + 1], 0x27
0x4659:	add	r15, 2
0x465d:	xor	r8d, r8d
0x4660:	cmp	r15, r13
0x4663:	jae	0x4669


0x4e64:	and	ebx, 7
0x4e67:	add	rbp, 1
0x4e6b:	add	r15, 3
0x4e6f:	add	ebx, 0x30
0x4e72:	cmp	rbp, rcx
0x4e75:	jae	0x4660


0x4e54:	mov	eax, ebx
0x4e56:	shr	al, 3
0x4e59:	and	eax, 7
0x4e5c:	add	eax, 0x30
0x4e5f:	mov	byte ptr [r14 + r15 + 2], al
0x4e64:	and	ebx, 7
0x4e67:	add	rbp, 1
0x4e6b:	add	r15, 3
0x4e6f:	add	ebx, 0x30
0x4e72:	cmp	rbp, rcx
0x4e75:	jae	0x4660


0x4e24:	add	r15, 3
0x4e28:	mov	r8d, eax
0x4e2b:	cmp	r13, r15
0x4e2e:	jbe	0x4e35


0x4e1e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x4e24:	add	r15, 3
0x4e28:	mov	r8d, eax
0x4e2b:	cmp	r13, r15
0x4e2e:	jbe	0x4e35


0x4788:	mov	eax, r8d
0x478b:	xor	eax, 1
0x478e:	and	al, dl
0x4790:	je	0x47c1


0x4fd8:	mov	rbp, r11
0x4fdb:	jmp	0x4f59


0x4e7b:	mov	esi, edx
0x4e7d:	cmp	r13, r15
0x4e80:	jbe	0x4e86


0x47c1:	cmp	r13, r15
0x47c4:	jbe	0x47cb


0x4792:	cmp	r13, r15
0x4795:	jbe	0x479c


0x47cb:	add	r15, 1
0x47cf:	add	rbp, 1
0x47d3:	jmp	0x4660


0x47c6:	mov	byte ptr [r14 + r15], 0x5c
0x47cb:	add	r15, 1
0x47cf:	add	rbp, 1
0x47d3:	jmp	0x4660


0x479c:	lea	rdx, [r15 + 1]
0x47a0:	cmp	r13, rdx
0x47a3:	jbe	0x47ab


0x4797:	mov	byte ptr [r14 + r15], 0x27
0x479c:	lea	rdx, [r15 + 1]
0x47a0:	cmp	r13, rdx
0x47a3:	jbe	0x47ab


0x47ab:	lea	rdx, [r15 + 2]
0x47af:	cmp	r13, rdx
0x47b2:	jbe	0x47ba


0x47a5:	mov	byte ptr [r14 + r15 + 1], 0x24
0x47ab:	lea	rdx, [r15 + 2]
0x47af:	cmp	r13, rdx
0x47b2:	jbe	0x47ba


0x47ba:	add	r15, 3
0x47be:	mov	r8d, eax
0x47c1:	cmp	r13, r15
0x47c4:	jbe	0x47cb


0x47b4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x47ba:	add	r15, 3
0x47be:	mov	r8d, eax
0x47c1:	cmp	r13, r15
0x47c4:	jbe	0x47cb


0x4d65:	mov	rdi, qword ptr [rsp + 0x28]
0x4d6a:	test	eax, eax
0x4d6c:	mov	eax, 0
0x4d71:	cmove	r12d, eax
0x4d75:	add	rbx, r15
0x4d78:	call	0x18b0


0x4d7d:	test	eax, eax
0x4d7f:	je	0x4d03


0x4d03:	mov	rax, qword ptr [rsp + 0x10]
0x4d08:	lea	r14, [rbp + rbx]
0x4d0d:	mov	rdx, qword ptr [rsp + 0x30]
0x4d12:	mov	rcx, qword ptr [rsp + 0x28]
0x4d17:	mov	rdi, qword ptr [rsp + 0x38]
0x4d1c:	lea	r13, [rax + r14]
0x4d20:	sub	rdx, r14
0x4d23:	mov	rsi, r13
0x4d26:	call	0x6bd0


0x452c:	movzx	r8d, byte ptr [rsp + 0x38]
0x4532:	movzx	r10d, byte ptr [rsp + 0x30]
0x4538:	mov	r11, rax
0x453b:	mov	r9, qword ptr [rsp + 0x28]
0x4540:	cmp	rbx, r11
0x4543:	mov	byte ptr [rsp + 0x28], r10b
0x4548:	ja	0x4b00


0x4cb0:	movzx	r8d, byte ptr [rsp + 0x40]
0x4cb6:	movzx	r10d, byte ptr [rsp + 0x38]
0x4cbc:	mov	r11, rax
0x4cbf:	mov	r9, qword ptr [rsp + 0x30]
0x4cc4:	lea	rax, [rsp + 0x9c]
0x4ccc:	xor	ecx, ecx
0x4cce:	mov	byte ptr [rsp + 0x7e], bl
0x4cd2:	mov	byte ptr [rsp + 0x7d], r8b
0x4cd7:	mov	rbx, rcx
0x4cda:	mov	qword ptr [rsp + 0x88], r9
0x4ce2:	mov	qword ptr [rsp + 0x38], rax
0x4ce7:	mov	byte ptr [rsp + 0x7f], r10b
0x4cec:	mov	qword ptr [rsp + 0x80], r15
0x4cf4:	mov	qword ptr [rsp + 0x40], r14
0x4cf9:	mov	qword ptr [rsp + 0x70], r13
0x4cfe:	mov	qword ptr [rsp + 0x30], r11
0x4d03:	mov	rax, qword ptr [rsp + 0x10]
0x4d08:	lea	r14, [rbp + rbx]
0x4d0d:	mov	rdx, qword ptr [rsp + 0x30]
0x4d12:	mov	rcx, qword ptr [rsp + 0x28]
0x4d17:	mov	rdi, qword ptr [rsp + 0x38]
0x4d1c:	lea	r13, [rax + r14]
0x4d20:	sub	rdx, r14
0x4d23:	mov	rsi, r13
0x4d26:	call	0x6bd0


0x48e8:	mov	rcx, qword ptr [rax]
0x48eb:	movzx	edx, bl
0x48ee:	movzx	r10d, byte ptr [rsp + 0x28]
0x48f4:	movzx	r8d, byte ptr [rsp + 0x30]
0x48fa:	mov	r11, qword ptr [rsp + 0x38]
0x48ff:	mov	edi, 1
0x4904:	movzx	eax, word ptr [rcx + rdx*2]
0x4908:	and	ax, 0x4000
0x490c:	setne	r12b
0x4910:	sete	al
0x4913:	and	al, byte ptr [rsp + 0xd]
0x4917:	test	al, al
0x4919:	jne	0x52b1


0x45c0:	xor	r10d, r10d
0x45c3:	cmp	r11, 1
0x45c7:	setne	al
0x45ca:	cmp	r11, -1
0x45ce:	jne	0x45dc


0x45d0:	mov	rax, qword ptr [rsp + 0x10]
0x45d5:	cmp	byte ptr [rax + 1], 0
0x45d9:	setne	al
0x45dc:	cmp	dword ptr [rsp + 8], 2
0x45e1:	sete	dl
0x45e4:	test	al, al
0x45e6:	je	0x4838


0x45dc:	cmp	dword ptr [rsp + 8], 2
0x45e1:	sete	dl
0x45e4:	test	al, al
0x45e6:	je	0x4838


0x4838:	test	rbp, rbp
0x483b:	jne	0x45ec


0x45ec:	xor	r12d, r12d
0x45ef:	xor	eax, eax
0x45f1:	nop	dword ptr [rax]
0x45f8:	cmp	byte ptr [rsp + 0xd], 1
0x45fd:	jne	0x4712


0x4841:	movzx	eax, byte ptr [rsp + 0xf]
0x4846:	and	al, dl
0x4848:	je	0x45f8


0x484e:	mov	rbp, r11
0x4851:	mov	dword ptr [rsp + 8], 2
0x4859:	jmp	0x4f59


0x4c58:	cmp	byte ptr [rsp + 0xf], 0
0x4c5d:	jne	0x5480


0x46a0:	cmp	eax, 5
0x46a3:	je	0x4c18


0x4c63:	xor	r12d, r12d
0x4c66:	xor	eax, eax
0x4c68:	mov	ebx, 0x3f
0x4c6d:	jmp	0x4629


0x5480:	mov	rbp, r11
0x5483:	movzx	eax, byte ptr [rsp + 0xf]
0x5488:	jmp	0x4f59


0x4c18:	test	byte ptr [rsp + 0x78], 4
0x4c1d:	je	0x4c40


0x46a9:	cmp	eax, 2
0x46ac:	mov	ebx, 0x3f
0x46b1:	sete	dl
0x46b4:	xor	r12d, r12d
0x46b7:	xor	eax, eax
0x46b9:	jmp	0x45f8


0x4c40:	xor	edx, edx
0x4c42:	xor	r12d, r12d
0x4c45:	xor	eax, eax
0x4c47:	mov	ebx, 0x3f
0x4c4c:	jmp	0x45f8


0x4c1f:	lea	rcx, [rbp + 2]
0x4c23:	cmp	rcx, r11
0x4c26:	jae	0x4c40


0x4c28:	mov	rax, qword ptr [rsp + 0x10]
0x4c2d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x4c32:	je	0x53c2


0x53c2:	movzx	ebx, byte ptr [rax + rcx]
0x53c6:	cmp	bl, 0x3e
0x53c9:	ja	0x4c40


0x53cf:	movabs	rax, 0x7000a38200000000
0x53d9:	bt	rax, rbx
0x53dd:	jae	0x4c40


0x53e3:	cmp	byte ptr [rsp + 0xf], 0
0x53e8:	jne	0x55d2


0x53ee:	cmp	r13, r15
0x53f1:	jbe	0x53f8


0x55d2:	mov	rbp, r11
0x55d5:	jmp	0x4f70


0x53f8:	lea	rax, [r15 + 1]
0x53fc:	cmp	r13, rax
0x53ff:	jbe	0x5407


0x53f3:	mov	byte ptr [r14 + r15], 0x3f
0x53f8:	lea	rax, [r15 + 1]
0x53fc:	cmp	r13, rax
0x53ff:	jbe	0x5407


0x5407:	lea	rax, [r15 + 2]
0x540b:	cmp	r13, rax
0x540e:	jbe	0x5416


0x5401:	mov	byte ptr [r14 + r15 + 1], 0x22
0x5407:	lea	rax, [r15 + 2]
0x540b:	cmp	r13, rax
0x540e:	jbe	0x5416


0x5416:	lea	rax, [r15 + 3]
0x541a:	cmp	r13, rax
0x541d:	jbe	0x5425


0x5410:	mov	byte ptr [r14 + r15 + 2], 0x22
0x5416:	lea	rax, [r15 + 3]
0x541a:	cmp	r13, rax
0x541d:	jbe	0x5425


0x5425:	add	r15, 4
0x5429:	xor	edx, edx
0x542b:	xor	r12d, r12d
0x542e:	xor	eax, eax
0x5430:	mov	rbp, rcx
0x5433:	jmp	0x45f8


0x541f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x5425:	add	r15, 4
0x5429:	xor	edx, edx
0x542b:	xor	r12d, r12d
0x542e:	xor	eax, eax
0x5430:	mov	rbp, rcx
0x5433:	jmp	0x45f8


0x4bd0:	cmp	byte ptr [rsp + 0xf], 0
0x4bd5:	jne	0x5480


0x46ce:	mov	byte ptr [rsp + 0x7c], r12b
0x46d3:	xor	edx, edx
0x46d5:	xor	eax, eax
0x46d7:	mov	ebx, 0x27
0x46dc:	jmp	0x45f8


0x4bdb:	test	r13, r13
0x4bde:	je	0x4fe0


0x4fe0:	cmp	r13, r15
0x4fe3:	jbe	0x4fea


0x4be4:	xor	edx, edx
0x4be6:	cmp	qword ptr [rsp + 0x50], 0
0x4bec:	jne	0x4fe0


0x4fea:	lea	rax, [r15 + 1]
0x4fee:	cmp	r13, rax
0x4ff1:	jbe	0x4ff9


0x4fe5:	mov	byte ptr [r14 + r15], 0x27
0x4fea:	lea	rax, [r15 + 1]
0x4fee:	cmp	r13, rax
0x4ff1:	jbe	0x4ff9


0x4bf2:	mov	qword ptr [rsp + 0x50], r13
0x4bf7:	add	r15, 3
0x4bfb:	xor	eax, eax
0x4bfd:	mov	byte ptr [rsp + 0x7c], r12b
0x4c02:	xor	r8d, r8d
0x4c05:	mov	r13, rdx
0x4c08:	mov	ebx, 0x27
0x4c0d:	jmp	0x4629


0x4ff9:	lea	rax, [r15 + 2]
0x4ffd:	cmp	r13, rax
0x5000:	jbe	0x55f2


0x4ff3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x4ff9:	lea	rax, [r15 + 2]
0x4ffd:	cmp	r13, rax
0x5000:	jbe	0x55f2


0x55f2:	mov	rdx, r13
0x55f5:	mov	r13, qword ptr [rsp + 0x50]
0x55fa:	jmp	0x4bf2


0x5006:	mov	rdx, r13
0x5009:	mov	byte ptr [r14 + r15 + 2], 0x27
0x500f:	mov	r13, qword ptr [rsp + 0x50]
0x5014:	jmp	0x4bf2


0x4704:	cmp	byte ptr [rsp + 0xd], 0
0x4709:	jne	0x4770


0x470b:	mov	ebx, edx
0x470d:	xor	r12d, r12d
0x4710:	xor	eax, eax
0x4712:	cmp	byte ptr [rsp + 0xf], 0
0x4717:	jne	0x460b


0x4770:	xor	r12d, r12d
0x4773:	cmp	dword ptr [rsp + 8], 2
0x4778:	sete	dl
0x477b:	cmp	byte ptr [rsp + 0xf], 0
0x4780:	mov	eax, edx
0x4782:	jne	0x4fd8


0x4b10:	cmp	byte ptr [rsp + 0xf], 0
0x4b15:	jne	0x5480


0x4743:	cmp	byte ptr [rsp + 0xd], 0
0x4748:	je	0x4960


0x4b1b:	add	rbp, 1
0x4b1f:	mov	eax, r8d
0x4b22:	xor	r12d, r12d
0x4b25:	mov	ebx, 0x5c
0x4b2a:	jmp	0x463c


0x4960:	mov	edx, 0x5c
0x4965:	mov	ebx, 0x5c
0x496a:	jmp	0x4704


0x474e:	cmp	byte ptr [rsp + 0xf], 0
0x4753:	je	0x4960


0x4759:	cmp	qword ptr [rsp + 0x18], 0
0x475f:	jne	0x4b1b


0x4765:	mov	ebx, 0x5c
0x476a:	nop	word ptr [rax + rax]
0x4770:	xor	r12d, r12d
0x4773:	cmp	dword ptr [rsp + 8], 2
0x4778:	sete	dl
0x477b:	cmp	byte ptr [rsp + 0xf], 0
0x4780:	mov	eax, edx
0x4782:	jne	0x4fd8


0x47eb:	xor	edx, edx
0x47ed:	test	byte ptr [rsp + 0x78], 1
0x47f2:	je	0x470b


0x49b3:	cmp	dword ptr [rsp + 8], 2
0x49b8:	sete	dl
0x49bb:	cmp	byte ptr [rsp + 0xf], 0
0x49c0:	jne	0x555a


0x47f8:	add	rbp, 1
0x47fc:	jmp	0x44b8


0x49c6:	mov	eax, r8d
0x49c9:	mov	rcx, r15
0x49cc:	xor	eax, 1
0x49cf:	and	al, dl
0x49d1:	je	0x4a00


0x555a:	movzx	ebx, byte ptr [rsp + 0xf]
0x555f:	mov	rbp, r11
0x5562:	mov	eax, edx
0x5564:	mov	byte ptr [rsp + 0xd], bl
0x5568:	jmp	0x4f59


0x4a00:	cmp	r13, rcx
0x4a03:	jbe	0x4a0a


0x49d3:	cmp	r13, r15
0x49d6:	jbe	0x49dd


0x4a0a:	cmp	dword ptr [rsp + 8], 2
0x4a0f:	lea	r15, [rcx + 1]
0x4a13:	je	0x5019


0x4a05:	mov	byte ptr [r14 + rcx], 0x5c
0x4a0a:	cmp	dword ptr [rsp + 8], 2
0x4a0f:	lea	r15, [rcx + 1]
0x4a13:	je	0x5019


0x49dd:	lea	rcx, [r15 + 1]
0x49e1:	cmp	r13, rcx
0x49e4:	jbe	0x49ec


0x49d8:	mov	byte ptr [r14 + r15], 0x27
0x49dd:	lea	rcx, [r15 + 1]
0x49e1:	cmp	r13, rcx
0x49e4:	jbe	0x49ec


0x5019:	mov	eax, r12d
0x501c:	mov	ebx, 0x30
0x5021:	xor	r12d, r12d
0x5024:	jmp	0x4629


0x4a19:	lea	rax, [rbp + 1]
0x4a1d:	cmp	rax, r11
0x4a20:	jae	0x4a3b


0x49ec:	lea	rcx, [r15 + 2]
0x49f0:	cmp	r13, rcx
0x49f3:	ja	0x5029


0x49e6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x49ec:	lea	rcx, [r15 + 2]
0x49f0:	cmp	r13, rcx
0x49f3:	ja	0x5029


0x4a22:	mov	rax, qword ptr [rsp + 0x10]
0x4a27:	movzx	eax, byte ptr [rax + rbp + 1]
0x4a2c:	mov	byte ptr [rsp + 0x28], al
0x4a30:	sub	eax, 0x30
0x4a33:	cmp	al, 9
0x4a35:	jbe	0x5269


0x4a3b:	mov	eax, r12d
0x4a3e:	mov	ebx, 0x30
0x4a43:	xor	r12d, r12d
0x4a46:	jmp	0x45f8


0x49f9:	lea	rcx, [r15 + 3]
0x49fd:	mov	r8d, eax
0x4a00:	cmp	r13, rcx
0x4a03:	jbe	0x4a0a


0x5029:	mov	byte ptr [r14 + r15 + 2], 0x27
0x502f:	jmp	0x49f9


0x5269:	cmp	r13, r15
0x526c:	jbe	0x5273


0x5273:	lea	rax, [rcx + 2]
0x5277:	cmp	r13, rax
0x527a:	jbe	0x5282


0x526e:	mov	byte ptr [r14 + r15], 0x30
0x5273:	lea	rax, [rcx + 2]
0x5277:	cmp	r13, rax
0x527a:	jbe	0x5282


0x5282:	mov	eax, r12d
0x5285:	lea	r15, [rcx + 3]
0x5289:	xor	r12d, r12d
0x528c:	mov	ebx, 0x30
0x5291:	jmp	0x45f8


0x527c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x5282:	mov	eax, r12d
0x5285:	lea	r15, [rcx + 3]
0x5289:	xor	r12d, r12d
0x528c:	mov	ebx, 0x30
0x5291:	jmp	0x45f8


0x46f2:	cmp	dword ptr [rsp + 8], 2
0x46f7:	sete	al
0x46fa:	and	al, byte ptr [rsp + 0xf]
0x46fe:	jne	0x484e


0x4ab0:	mov	edx, 0xd
0x4ab5:	xor	r10d, r10d
0x4ab8:	mov	ebx, 0x72
0x4abd:	jmp	0x46f2


0x5034:	test	ebx, ebx
0x5036:	jne	0x4463


0x503c:	mov	byte ptr [rsp + 0xd], 1
0x5041:	test	r13, r13
0x5044:	jne	0x55da


0x504a:	lea	rax, [rip + 0x2a44]
0x5051:	mov	qword ptr [rsp + 0x50], 0
0x505a:	mov	byte ptr [rsp + 0xe], 1
0x505f:	mov	byte ptr [rsp + 0x7c], 0
0x5064:	xor	r12d, r12d
0x5067:	mov	byte ptr [rsp + 0xf], 0
0x506c:	mov	qword ptr [rsp + 0x18], 1
0x5075:	mov	qword ptr [rsp + 0x48], rax
0x507a:	mov	r15d, 1
0x5080:	mov	dword ptr [rsp + 8], 2
0x5088:	jmp	0x44a3


0x55da:	mov	byte ptr [rsp + 0xe], 1
0x55df:	xor	eax, eax
0x55e1:	xor	r12d, r12d
0x55e4:	mov	qword ptr [rsp + 0x50], 0
0x55ed:	jmp	0x4b94


0x4b94:	lea	rbx, [rip + 0x2efa]
0x4b9b:	mov	byte ptr [r14], 0x27
0x4b9f:	mov	dword ptr [rsp + 8], 2
0x4ba7:	mov	r15d, 1
0x4bad:	mov	qword ptr [rsp + 0x18], 1
0x4bb6:	mov	byte ptr [rsp + 0xf], 0
0x4bbb:	mov	qword ptr [rsp + 0x48], rbx
0x4bc0:	mov	byte ptr [rsp + 0x7c], al
0x4bc4:	jmp	0x44a3


0x5098:	test	r13, r13
0x509b:	je	0x52c6


0x548d:	lea	rax, [rip + 0x25ff]
0x5494:	mov	byte ptr [rsp + 0xe], 1
0x5499:	mov	byte ptr [rsp + 0x7c], 0
0x549e:	xor	r12d, r12d
0x54a1:	mov	qword ptr [rsp + 0x50], 0
0x54aa:	mov	byte ptr [rsp + 0xf], 1
0x54af:	mov	byte ptr [rsp + 0xd], 1
0x54b4:	mov	qword ptr [rsp + 0x18], 1
0x54bd:	xor	r15d, r15d
0x54c0:	mov	qword ptr [rsp + 0x48], rax
0x54c5:	jmp	0x44a3


0x52c6:	mov	qword ptr [rsp + 0x50], 0
0x52cf:	mov	byte ptr [rsp + 0xe], 1
0x52d4:	xor	r12d, r12d
0x52d7:	mov	byte ptr [rsp + 0x7c], 0
0x52dc:	jmp	0x50bb


0x50a1:	mov	byte ptr [r14], 0x22
0x50a5:	mov	byte ptr [rsp + 0xe], 1
0x50aa:	xor	r12d, r12d
0x50ad:	mov	byte ptr [rsp + 0x7c], 0
0x50b2:	mov	qword ptr [rsp + 0x50], 0
0x50bb:	lea	rax, [rip + 0x29d1]
0x50c2:	mov	byte ptr [rsp + 0xf], 0
0x50c7:	mov	byte ptr [rsp + 0xd], 1
0x50cc:	mov	qword ptr [rsp + 0x18], 1
0x50d5:	mov	r15d, 1
0x50db:	mov	qword ptr [rsp + 0x48], rax
0x50e0:	jmp	0x44a3


0x50bb:	lea	rax, [rip + 0x29d1]
0x50c2:	mov	byte ptr [rsp + 0xf], 0
0x50c7:	mov	byte ptr [rsp + 0xd], 1
0x50cc:	mov	qword ptr [rsp + 0x18], 1
0x50d5:	mov	r15d, 1
0x50db:	mov	qword ptr [rsp + 0x48], rax
0x50e0:	jmp	0x44a3


0x50e5:	lea	rax, [rip + 0x29a7]
0x50ec:	mov	byte ptr [rsp + 0xe], 1
0x50f1:	mov	byte ptr [rsp + 0x7c], 0
0x50f6:	xor	r12d, r12d
0x50f9:	mov	qword ptr [rsp + 0x50], 0
0x5102:	mov	byte ptr [rsp + 0xf], 1
0x5107:	mov	byte ptr [rsp + 0xd], 1
0x510c:	mov	qword ptr [rsp + 0x18], 1
0x5115:	xor	r15d, r15d
0x5118:	mov	qword ptr [rsp + 0x48], rax
0x511d:	mov	dword ptr [rsp + 8], 5
0x5125:	jmp	0x44a3


0x512a:	mov	byte ptr [rsp + 0xe], 1
0x512f:	mov	byte ptr [rsp + 0x7c], 0
0x5134:	xor	r12d, r12d
0x5137:	mov	qword ptr [rsp + 0x50], 0
0x5140:	mov	byte ptr [rsp + 0xf], 0
0x5145:	xor	r15d, r15d
0x5148:	mov	byte ptr [rsp + 0xd], 1
0x514d:	mov	qword ptr [rsp + 0x18], 0
0x5156:	mov	qword ptr [rsp + 0x48], 0
0x515f:	jmp	0x44a3


0x5164:	cmp	dword ptr [rsp + 8], 0xa
0x5169:	je	0x51c1


0x51c1:	xor	r15d, r15d
0x51c4:	test	ebx, ebx
0x51c6:	je	0x538d


0x516b:	lea	rsi, [rip + 0x2925]
0x5172:	xor	edi, edi
0x5174:	mov	edx, 5
0x5179:	call	0x1660


0x538d:	mov	rdx, qword ptr [rsp + 0x68]
0x5392:	movzx	eax, byte ptr [rdx]
0x5395:	test	al, al
0x5397:	je	0x51cc


0x51cc:	test	ebx, ebx
0x51ce:	mov	rbx, qword ptr [rsp + 0x60]
0x51d3:	setne	byte ptr [rsp + 0xf]
0x51d8:	xor	r12d, r12d
0x51db:	mov	rdi, rbx
0x51de:	call	0x1680


0x53a9:	add	r15, 1
0x53ad:	movzx	eax, byte ptr [rdx + r15]
0x53b2:	test	al, al
0x53b4:	jne	0x53a0


0x53a5:	mov	byte ptr [r14 + r15], al
0x53a9:	add	r15, 1
0x53ad:	movzx	eax, byte ptr [rdx + r15]
0x53b2:	test	al, al
0x53b4:	jne	0x53a0


0x53b6:	jmp	0x51cc


0x53a0:	cmp	r13, r15
0x53a3:	jbe	0x53a9


0x51e3:	mov	qword ptr [rsp + 0x48], rbx
0x51e8:	mov	qword ptr [rsp + 0x18], rax
0x51ed:	mov	byte ptr [rsp + 0xe], 1
0x51f2:	mov	byte ptr [rsp + 0x7c], 0
0x51f7:	mov	qword ptr [rsp + 0x50], 0
0x5200:	mov	byte ptr [rsp + 0xd], 1
0x5205:	jmp	0x44a3


0x517e:	mov	rcx, rax
0x5181:	mov	qword ptr [rsp + 0x68], rax
0x5186:	lea	rax, [rip + 0x290a]
0x518d:	cmp	rcx, rax
0x5190:	je	0x552e


0x552e:	mov	esi, dword ptr [rsp + 8]
0x5532:	mov	rdi, rcx
0x5535:	call	0x42e0


0x5196:	lea	rsi, [rip + 0x28f8]
0x519d:	xor	edi, edi
0x519f:	mov	edx, 5
0x51a4:	call	0x1660


0x51a9:	mov	rcx, rax
0x51ac:	mov	qword ptr [rsp + 0x60], rax
0x51b1:	lea	rax, [rip + 0x28dd]
0x51b8:	cmp	rcx, rax
0x51bb:	je	0x5544


0x5544:	mov	esi, dword ptr [rsp + 8]
0x5548:	mov	rdi, rcx
0x554b:	call	0x42e0


0x5550:	mov	qword ptr [rsp + 0x60], rax
0x5555:	jmp	0x51c1


0x553a:	mov	qword ptr [rsp + 0x68], rax
0x553f:	jmp	0x5196


0x520a:	mov	byte ptr [rsp + 0xe], 1
0x520f:	mov	byte ptr [rsp + 0x7c], 0
0x5214:	xor	r12d, r12d
0x5217:	mov	qword ptr [rsp + 0x50], 0
0x5220:	mov	byte ptr [rsp + 0xf], 0
0x5225:	xor	r15d, r15d
0x5228:	mov	byte ptr [rsp + 0xd], 0
0x522d:	mov	qword ptr [rsp + 0x18], 0
0x5236:	mov	qword ptr [rsp + 0x48], 0
0x523f:	jmp	0x44a3


0x5244:	mov	byte ptr [rsp + 0xe], 1
0x5249:	mov	byte ptr [rsp + 0x7c], 0
0x524e:	xor	r12d, r12d
0x5251:	mov	qword ptr [rsp + 0x50], 0
0x525a:	mov	byte ptr [rsp + 0xf], 1
0x525f:	mov	byte ptr [rsp + 0xd], 1
0x5264:	jmp	0x4483


0x4483:	lea	rax, [rip + 0x360b]
0x448a:	mov	qword ptr [rsp + 0x18], 1
0x4493:	xor	r15d, r15d
0x4496:	mov	dword ptr [rsp + 8], 2
0x449e:	mov	qword ptr [rsp + 0x48], rax
0x44a3:	xor	r11d, r11d
0x44a6:	mov	rax, rbp
0x44a9:	mov	r8d, r12d
0x44ac:	mov	rbp, r11
0x44af:	mov	r11, rax
0x44b2:	nop	word ptr [rax + rax]
0x44b8:	cmp	r11, rbp
0x44bb:	setne	r12b
0x44bf:	cmp	r11, -1
0x44c3:	jne	0x44d2


0x5438:	test	ebx, ebx
0x543a:	je	0x55c8


0x55c8:	mov	byte ptr [rsp + 0xd], 0
0x55cd:	jmp	0x5041


0x5440:	lea	rax, [rip + 0x264e]
0x5447:	mov	byte ptr [rsp + 0xe], 1
0x544c:	mov	byte ptr [rsp + 0x7c], 0
0x5451:	xor	r12d, r12d
0x5454:	mov	qword ptr [rsp + 0x50], 0
0x545d:	mov	byte ptr [rsp + 0xf], 1
0x5462:	mov	byte ptr [rsp + 0xd], 0
0x5467:	mov	qword ptr [rsp + 0x18], 1
0x5470:	xor	r15d, r15d
0x5473:	mov	qword ptr [rsp + 0x48], rax
0x5478:	jmp	0x44a3


0x5041:	test	r13, r13
0x5044:	jne	0x55da


0x5604:	nop	
0x5606:	nop	word ptr cs:[rax + rax]


0x57bb:	nop	dword ptr [rax + rax]


0x57f6:	nop	word ptr cs:[rax + rax]


0x5811:	nop	dword ptr [rax + rax]
0x5816:	nop	word ptr cs:[rax + rax]


0x5831:	nop	dword ptr [rax + rax]
0x5836:	nop	word ptr cs:[rax + rax]


0x5875:	nop	
0x5876:	nop	word ptr cs:[rax + rax]


0x5895:	nop	
0x5896:	nop	word ptr cs:[rax + rax]


0x5944:	nop	
0x5946:	nop	word ptr cs:[rax + rax]


0x5a33:	nop	dword ptr [rax]
0x5a36:	nop	word ptr cs:[rax + rax]


0x5a4a:	nop	word ptr [rax + rax]


0x5ae3:	nop	dword ptr [rax]
0x5ae6:	nop	word ptr cs:[rax + rax]


0x5b03:	nop	dword ptr [rax]
0x5b06:	nop	word ptr cs:[rax + rax]


0x5b1c:	nop	dword ptr [rax]


0x5b38:	nop	dword ptr [rax + rax]


0x5b54:	nop	
0x5b56:	nop	word ptr cs:[rax + rax]


0x5bee:	nop	


0x5c7a:	nop	word ptr [rax + rax]


0x5c8c:	nop	dword ptr [rax]


0x5c9f:	nop	


0x5d38:	nop	dword ptr [rax + rax]


0x5d61:	nop	dword ptr [rax + rax]
0x5d66:	nop	word ptr cs:[rax + rax]


0x5d7a:	nop	word ptr [rax + rax]


0x5e0e:	nop	


0x5ea1:	nop	dword ptr [rax + rax]
0x5ea6:	nop	word ptr cs:[rax + rax]


0x5ebc:	nop	dword ptr [rax]


0x5ed7:	nop	word ptr [rax + rax]


0x5ef3:	nop	dword ptr [rax]
0x5ef6:	nop	word ptr cs:[rax + rax]


0x5f0c:	nop	dword ptr [rax]


0x5f24:	nop	
0x5f26:	nop	word ptr cs:[rax + rax]


0x5f43:	nop	dword ptr [rax]
0x5f46:	nop	word ptr cs:[rax + rax]


0x5f68:	nop	dword ptr [rax + rax]


0x5f7e:	nop	


0x6397:	nop	word ptr [rax + rax]


0x6438:	nop	dword ptr [rax + rax]


0x6515:	nop	
0x6516:	nop	word ptr cs:[rax + rax]


0x65ba:	nop	word ptr [rax + rax]


0x65e4:	nop	
0x65e6:	nop	word ptr cs:[rax + rax]


0x65f2:	nop	dword ptr [rax]
0x65f6:	nop	word ptr cs:[rax + rax]


0x6636:	nop	word ptr cs:[rax + rax]


0x6664:	nop	
0x6666:	nop	word ptr cs:[rax + rax]


0x66f2:	nop	dword ptr [rax]
0x66f6:	nop	word ptr cs:[rax + rax]


0x674a:	nop	word ptr [rax + rax]


0x6767:	nop	word ptr [rax + rax]


0x679e:	nop	


0x67c8:	nop	dword ptr [rax + rax]


0x67e3:	nop	word ptr cs:[rax + rax]
0x67ed:	nop	dword ptr [rax]


0x6825:	nop	word ptr cs:[rax + rax]
0x682f:	nop	


0x68ab:	nop	dword ptr [rax + rax]


0x6b2e:	nop	


0x6bc7:	nop	word ptr [rax + rax]


0x6c53:	nop	word ptr cs:[rax + rax]
0x6c5d:	nop	dword ptr [rax]


0x6cdd:	nop	dword ptr [rax]


0x6d7c:	nop	dword ptr [rax]


0x6de5:	nop	
0x6de6:	nop	word ptr cs:[rax + rax]


0x6df2:	nop	word ptr cs:[rax + rax]
0x6dfc:	nop	dword ptr [rax]


0x4690:	xor	r10d, r10d
0x4693:	mov	eax, dword ptr [rsp + 8]
0x4697:	cmp	eax, 2
0x469a:	je	0x4c58


0x46c0:	xor	r10d, r10d
0x46c3:	cmp	dword ptr [rsp + 8], 2
0x46c8:	je	0x4bd0


0x46e8:	mov	edx, 9
0x46ed:	mov	ebx, 0x74
0x46f2:	cmp	dword ptr [rsp + 8], 2
0x46f7:	sete	al
0x46fa:	and	al, byte ptr [rsp + 0xf]
0x46fe:	jne	0x484e


0x4728:	mov	edx, 8
0x472d:	mov	ebx, 0x62
0x4732:	jmp	0x4704


0x4738:	cmp	dword ptr [rsp + 8], 2
0x473d:	je	0x4b10


0x47e0:	cmp	byte ptr [rsp + 0xd], 0
0x47e5:	jne	0x49b3


0x4808:	cmp	dword ptr [rsp + 8], 2
0x480d:	sete	dl
0x4810:	xor	eax, eax
0x4812:	jmp	0x45f8


0x4820:	mov	edx, 7
0x4825:	mov	ebx, 0x61
0x482a:	jmp	0x4704


0x4830:	cmp	dword ptr [rsp + 8], 2
0x4835:	sete	dl
0x4838:	test	rbp, rbp
0x483b:	jne	0x45ec


0x4860:	cmp	dword ptr [rsp + 8], 2
0x4865:	sete	dl
0x4868:	xor	r12d, r12d
0x486b:	jmp	0x4841


0x4870:	cmp	dword ptr [rsp + 8], 2
0x4875:	mov	ebx, 0x20
0x487a:	sete	dl
0x487d:	jmp	0x4841


0x4880:	mov	edx, 0xd
0x4885:	mov	ebx, 0x72
0x488a:	jmp	0x46f2


0x4890:	mov	edx, 0xc
0x4895:	mov	ebx, 0x66
0x489a:	jmp	0x4704


0x48a0:	mov	edx, 0xb
0x48a5:	mov	ebx, 0x76
0x48aa:	jmp	0x4704


0x48b0:	mov	edx, 0xa
0x48b5:	mov	ebx, 0x6e
0x48ba:	jmp	0x46f2


0x4950:	xor	r10d, r10d
0x4953:	cmp	byte ptr [rsp + 0xd], 0
0x4958:	jne	0x474e


0x4970:	mov	edx, 0xc
0x4975:	xor	r10d, r10d
0x4978:	mov	ebx, 0x66
0x497d:	jmp	0x4704


0x4988:	mov	edx, 0xa
0x498d:	xor	r10d, r10d
0x4990:	mov	ebx, 0x6e
0x4995:	jmp	0x46f2


0x49a0:	mov	ebx, 0x61
0x49a5:	jmp	0x4770


0x49b0:	xor	r10d, r10d
0x49b3:	cmp	dword ptr [rsp + 8], 2
0x49b8:	sete	dl
0x49bb:	cmp	byte ptr [rsp + 0xf], 0
0x49c0:	jne	0x555a


0x4a50:	cmp	dword ptr [rsp + 8], 2
0x4a55:	mov	r12d, r10d
0x4a58:	sete	dl
0x4a5b:	xor	r10d, r10d
0x4a5e:	xor	eax, eax
0x4a60:	jmp	0x45f8


0x4a68:	cmp	dword ptr [rsp + 8], 2
0x4a6d:	sete	dl
0x4a70:	xor	r10d, r10d
0x4a73:	jmp	0x4838


0x4a80:	cmp	dword ptr [rsp + 8], 2
0x4a85:	sete	dl
0x4a88:	xor	r10d, r10d
0x4a8b:	xor	r12d, r12d
0x4a8e:	jmp	0x4841


0x4a98:	cmp	dword ptr [rsp + 8], 2
0x4a9d:	mov	r12d, r10d
0x4aa0:	mov	ebx, 0x20
0x4aa5:	sete	dl
0x4aa8:	xor	r10d, r10d
0x4aab:	jmp	0x4841


0x4ac8:	mov	ebx, 0x76
0x4acd:	jmp	0x4770


0x4ad8:	mov	edx, 9
0x4add:	xor	r10d, r10d
0x4ae0:	mov	ebx, 0x74
0x4ae5:	jmp	0x46f2


0x4af0:	mov	ebx, 0x62
0x4af5:	jmp	0x4770


0x5090:	test	ebx, ebx
0x5092:	jne	0x548d


0x19fd:	nop	dword ptr [rax]


0x1a24:	nop	dword ptr [rax]


0x1a46:	nop	word ptr cs:[rax + rax]


0x1a9d:	nop	dword ptr [rax]


0x1aba:	nop	word ptr [rax + rax]


0x1ada:	nop	word ptr [rax + rax]


0x1aec:	nop	dword ptr [rax]


0x1b0a:	nop	word ptr [rax + rax]


0x1b1a:	nop	word ptr [rax + rax]


0x1b2a:	nop	word ptr [rax + rax]


0x1eee:	nop	


0x21cc:	nop	dword ptr [rax]


0x2217:	nop	word ptr [rax + rax]


0x2277:	nop	word ptr [rax + rax]


0x233e:	nop	


0x23ea:	nop	word ptr [rax + rax]


0x2a96:	nop	word ptr cs:[rax + rax]


0x2ae7:	nop	word ptr [rax + rax]


0x2b31:	nop	dword ptr [rax]


0x2b89:	nop	dword ptr [rax]


0x2b93:	nop	dword ptr [rax + rax]


0x2bbb:	nop	dword ptr [rax + rax]


0x2bf2:	nop	word ptr [rax + rax]


0x2c18:	nop	dword ptr [rax + rax]


0x2c53:	nop	dword ptr [rax + rax]


0x2cb5:	nop	dword ptr [rax]


0x2ccc:	nop	dword ptr [rax]


0x2ce2:	nop	word ptr [rax + rax]


0x2d6f:	nop	


0x2dbe:	nop	


0x2e3e:	nop	


0x2e86:	nop	word ptr cs:[rax + rax]


0x3c3e:	nop	


0x3c87:	nop	word ptr [rax + rax]


0x3dc1:	nop	dword ptr [rax]


0x3dfc:	nop	dword ptr [rax]


0x3e3f:	nop	


0x3e8e:	nop	


0x3ee9:	nop	dword ptr [rax]


0x3f53:	nop	dword ptr [rax + rax]


0x4135:	nop	dword ptr [rax]


0x418b:	nop	dword ptr [rax + rax]


0x41c9:	nop	dword ptr [rax]


0x4215:	nop	dword ptr [rax]


0x431c:	nop	dword ptr [rax]


0x436d:	nop	dword ptr [rax]


0x4598:	nop	dword ptr [rax + rax]


0x4687:	nop	word ptr [rax + rax]


0x46be:	nop	


0x46e1:	nop	dword ptr [rax]


0x4722:	nop	word ptr [rax + rax]


0x4734:	nop	dword ptr [rax]


0x47d8:	nop	dword ptr [rax + rax]


0x4801:	nop	dword ptr [rax]


0x4817:	nop	word ptr [rax + rax]


0x482f:	nop	


0x485e:	nop	


0x486d:	nop	dword ptr [rax]


0x487f:	nop	


0x488f:	nop	


0x489f:	nop	


0x48af:	nop	


0x48bf:	nop	


0x492c:	nop	dword ptr [rax]


0x494c:	nop	dword ptr [rax]


0x495e:	nop	


0x496f:	nop	


0x4982:	nop	word ptr [rax + rax]


0x499a:	nop	word ptr [rax + rax]


0x49aa:	nop	word ptr [rax + rax]


0x4a4b:	nop	dword ptr [rax + rax]


0x4a65:	nop	dword ptr [rax]


0x4a78:	nop	dword ptr [rax + rax]


0x4a93:	nop	dword ptr [rax + rax]


0x4ac2:	nop	word ptr [rax + rax]


0x4ad2:	nop	word ptr [rax + rax]


0x4aea:	nop	word ptr [rax + rax]


0x4afa:	nop	word ptr [rax + rax]


0x4b08:	nop	dword ptr [rax + rax]


0x4b2f:	nop	


0x4bc9:	nop	dword ptr [rax]


0x4c12:	nop	word ptr [rax + rax]


0x4c38:	nop	dword ptr [rax + rax]


0x4c51:	nop	dword ptr [rax]


0x4c72:	nop	word ptr [rax + rax]


0x4dd8:	nop	dword ptr [rax + rax]


0x4eeb:	nop	dword ptr [rax + rax]


0x4f0e:	nop	


0x4fd5:	nop	dword ptr [rax]


0x508d:	nop	dword ptr [rax]


0x5296:	nop	word ptr cs:[rax + rax]


0x5329:	nop	dword ptr [rax]


0x539d:	nop	dword ptr [rax]


0x547d:	nop	dword ptr [rax]


0x578b:	nop	dword ptr [rax + rax]


0x6026:	nop	word ptr cs:[rax + rax]


0x60b5:	nop	dword ptr [rax]


0x60d6:	nop	word ptr cs:[rax + rax]


0x6135:	nop	dword ptr [rax]


0x6171:	nop	dword ptr [rax]


0x61b8:	nop	dword ptr [rax + rax]


0x6207:	nop	word ptr [rax + rax]


0x6264:	nop	dword ptr [rax]


0x6292:	nop	word ptr [rax + rax]


0x6346:	nop	word ptr cs:[rax + rax]


0x63a9:	nop	dword ptr [rax]


0x6622:	nop	word ptr [rax + rax]


0x66a9:	nop	dword ptr [rax]


0x66d4:	nop	dword ptr [rax]


0x672d:	nop	dword ptr [rax]


0x6875:	nop	dword ptr [rax]


0x694b:	nop	dword ptr [rax + rax]


0x6976:	nop	word ptr cs:[rax + rax]


0x69af:	nop	


0x69f9:	nop	dword ptr [rax]


0x6a1b:	nop	dword ptr [rax + rax]


0x6ac1:	nop	dword ptr [rax]


0x6b53:	nop	dword ptr [rax + rax]


0x6b7f:	nop	


0x6c94:	nop	dword ptr [rax]


0x6cb1:	nop	dword ptr [rax]


0x6cc2:	nop	word ptr [rax + rax]


0x6d1a:	nop	word ptr [rax + rax]


0x6d66:	nop	word ptr cs:[rax + rax]


