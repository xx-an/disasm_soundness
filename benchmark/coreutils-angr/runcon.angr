0x4660:	sub	rsp, 8
0x4664:	add	rsp, 8
0x4668:	ret	


0x4650:	mov	rdx, qword ptr [rip + 0x2029b1]
0x4657:	xor	esi, esi
0x4659:	jmp	0x1430


0x4640:	ret	


0x45d0:	push	r15
0x45d2:	push	r14
0x45d4:	mov	r15, rdx
0x45d7:	push	r13
0x45d9:	push	r12
0x45db:	lea	r12, [rip + 0x20254e]
0x45e2:	push	rbp
0x45e3:	lea	rbp, [rip + 0x20254e]
0x45ea:	push	rbx
0x45eb:	mov	r13d, edi
0x45ee:	mov	r14, rsi
0x45f1:	sub	rbp, r12
0x45f4:	sub	rsp, 8
0x45f8:	sar	rbp, 3
0x45fc:	call	0x1200


0x4570:	mov	rax, qword ptr [rdi + 8]
0x4574:	cmp	qword ptr [rdi + 0x10], rax
0x4578:	je	0x4580


0x4530:	test	rdi, rdi
0x4533:	push	rbx
0x4534:	mov	rbx, rdi
0x4537:	je	0x454a


0x44b0:	push	r12
0x44b2:	push	rbp
0x44b3:	push	rbx
0x44b4:	mov	rbx, rdi
0x44b7:	call	0x1390


0x4470:	sub	rsp, 8
0x4474:	mov	edi, 0xe
0x4479:	call	0x13c0


0x4410:	sub	rsp, 8
0x4414:	xor	esi, esi
0x4416:	call	0x13f0


0x4390:	push	r12
0x4392:	push	rbp
0x4393:	mov	rbp, rdi
0x4396:	push	rbx
0x4397:	call	0x1280


0x4300:	push	r13
0x4302:	push	r12
0x4304:	mov	r13, rsi
0x4307:	push	rbp
0x4308:	push	rbx
0x4309:	mov	rbx, rdi
0x430c:	mov	r12, rdx
0x430f:	sub	rsp, 0x18
0x4313:	mov	rax, qword ptr fs:[0x28]
0x431c:	mov	qword ptr [rsp + 8], rax
0x4321:	xor	eax, eax
0x4323:	lea	rax, [rsp + 4]
0x4328:	test	rdi, rdi
0x432b:	cmove	rbx, rax
0x432f:	mov	rdi, rbx
0x4332:	call	0x1310


0x42c0:	lea	rsi, [rip + 0x11a8]
0x42c7:	sub	rsp, 8
0x42cb:	mov	edx, 5
0x42d0:	xor	edi, edi
0x42d2:	call	0x12c0


0x42a0:	push	rbx
0x42a1:	mov	rbx, rdi
0x42a4:	call	0x12e0


0x4270:	push	rbp
0x4271:	push	rbx
0x4272:	mov	rbp, rdi
0x4275:	mov	rdi, rsi
0x4278:	mov	rbx, rsi
0x427b:	sub	rsp, 8
0x427f:	call	0x4070


0x4240:	mov	rax, rdi
0x4243:	sub	rsp, 8
0x4247:	mul	rsi
0x424a:	seto	dl
0x424d:	test	rax, rax
0x4250:	js	0x4269


0x4220:	push	rbx
0x4221:	mov	rbx, rdi
0x4224:	call	0x4070


0x41d0:	test	rdi, rdi
0x41d3:	mov	rax, qword ptr [rsi]
0x41d6:	je	0x4200


0x4140:	test	rdi, rdi
0x4143:	mov	r9, rdx
0x4146:	mov	rcx, qword ptr [rsi]
0x4149:	je	0x4180


0x4110:	mov	rax, rsi
0x4113:	mul	rdx
0x4116:	mov	rsi, rax
0x4119:	seto	al
0x411c:	test	rsi, rsi
0x411f:	js	0x412b


0x40d0:	test	rsi, rsi
0x40d3:	push	rbx
0x40d4:	mov	rbx, rsi
0x40d7:	jne	0x40de


0x40c0:	jmp	0x4070


0x4090:	mov	rax, rdi
0x4093:	mul	rsi
0x4096:	mov	rdi, rax
0x4099:	seto	al
0x409c:	test	rdi, rdi
0x409f:	js	0x40ab


0x4070:	push	rbx
0x4071:	mov	rbx, rdi
0x4074:	call	0x13a0


0x3ff0:	push	rbx
0x3ff1:	lea	rsi, [rip + 0x116a]
0x3ff8:	mov	edx, 5
0x3ffd:	xor	edi, edi
0x3fff:	call	0x12c0


0x3f10:	push	rbp
0x3f11:	push	rbx
0x3f12:	mov	r10d, 0x20
0x3f18:	xor	r11d, r11d
0x3f1b:	sub	rsp, 0xb8
0x3f22:	mov	rax, qword ptr fs:[0x28]
0x3f2b:	mov	qword ptr [rsp + 0x78], rax
0x3f30:	xor	eax, eax
0x3f32:	lea	rax, [rsp + 0xd0]
0x3f3a:	mov	qword ptr [rsp + 0xa0], r8
0x3f42:	lea	rbx, [rsp + 0xd0]
0x3f4a:	lea	r8, [rsp + 0x20]
0x3f4f:	mov	qword ptr [rsp + 0xa8], r9
0x3f57:	mov	dword ptr [rsp + 8], 0x20
0x3f5f:	mov	qword ptr [rsp + 0x10], rax
0x3f64:	lea	rax, [rsp + 0x80]
0x3f6c:	xor	r9d, r9d
0x3f6f:	mov	qword ptr [rsp + 0x18], rax
0x3f74:	mov	rbp, rax
0x3f77:	nop	word ptr [rax + rax]
0x3f80:	cmp	r10d, 0x2f
0x3f84:	ja	0x3fdc


0x3e90:	sub	rsp, 0x68
0x3e94:	mov	r10, r8
0x3e97:	xor	r9d, r9d
0x3e9a:	mov	rax, qword ptr fs:[0x28]
0x3ea3:	mov	qword ptr [rsp + 0x58], rax
0x3ea8:	xor	eax, eax
0x3eaa:	mov	r8, rsp
0x3ead:	nop	dword ptr [rax]
0x3eb0:	mov	eax, dword ptr [r10]
0x3eb3:	cmp	eax, 0x2f
0x3eb6:	ja	0x3efa


0x3e70:	xor	r9d, r9d
0x3e73:	cmp	qword ptr [r8], 0
0x3e77:	je	0x3e8b


0x3a50:	push	r15
0x3a52:	push	r14
0x3a54:	push	r13
0x3a56:	push	r12
0x3a58:	mov	r12, r9
0x3a5b:	push	rbp
0x3a5c:	push	rbx
0x3a5d:	mov	rbp, rdi
0x3a60:	mov	rbx, r8
0x3a63:	sub	rsp, 0x28
0x3a67:	test	rsi, rsi
0x3a6a:	je	0x3b88


0x3a30:	lea	rcx, [rip + 0x2035e9]
0x3a37:	mov	rsi, rdi
0x3a3a:	mov	rdx, -1
0x3a41:	xor	edi, edi
0x3a43:	jmp	0x30f0


0x3a10:	lea	rcx, [rip + 0x203609]
0x3a17:	mov	rdx, -1
0x3a1e:	jmp	0x30f0


0x39f0:	lea	rcx, [rip + 0x203629]
0x39f7:	mov	rdx, rsi
0x39fa:	mov	rsi, rdi
0x39fd:	xor	edi, edi
0x39ff:	jmp	0x30f0


0x39e0:	lea	rcx, [rip + 0x203639]
0x39e7:	jmp	0x30f0


0x39c0:	mov	r8, rcx
0x39c3:	mov	rcx, rdx
0x39c6:	mov	rdx, rsi
0x39c9:	mov	rsi, rdi
0x39cc:	xor	edi, edi
0x39ce:	jmp	0x38f0


0x39a0:	mov	rcx, rdx
0x39a3:	mov	r8, -1
0x39aa:	mov	rdx, rsi
0x39ad:	mov	rsi, rdi
0x39b0:	xor	edi, edi
0x39b2:	jmp	0x38f0


0x3990:	mov	r8, -1
0x3997:	jmp	0x38f0


0x38f0:	sub	rsp, 0x48
0x38f4:	mov	r9, rcx
0x38f7:	mov	rcx, qword ptr [rip + 0x203932]
0x38fe:	movdqa	xmm0, xmmword ptr [rip + 0x2038fa]
0x3906:	mov	rax, qword ptr fs:[0x28]
0x390f:	mov	qword ptr [rsp + 0x38], rax
0x3914:	xor	eax, eax
0x3916:	movaps	xmmword ptr [rsp], xmm0
0x391a:	test	rsi, rsi
0x391d:	mov	qword ptr [rsp + 0x30], rcx
0x3922:	mov	dword ptr [rsp], 0xa
0x3929:	movdqa	xmm0, xmmword ptr [rip + 0x2038df]
0x3931:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x3936:	movdqa	xmm0, xmmword ptr [rip + 0x2038e2]
0x393e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x3943:	je	0x3977


0x3860:	sub	rsp, 0x48
0x3864:	mov	rax, rdx
0x3867:	mov	rdx, qword ptr fs:[0x28]
0x3870:	mov	qword ptr [rsp + 0x38], rdx
0x3875:	xor	edx, edx
0x3877:	cmp	esi, 0xa
0x387a:	je	0x38e4


0x3850:	mov	edx, 0x3a
0x3855:	jmp	0x3780


0x3830:	mov	edx, 0x3a
0x3835:	mov	rsi, -1
0x383c:	jmp	0x3780


0x3820:	movsx	edx, sil
0x3824:	mov	rsi, -1
0x382b:	jmp	0x3780


0x3780:	sub	rsp, 0x48
0x3784:	mov	ecx, edx
0x3786:	mov	rax, qword ptr fs:[0x28]
0x378f:	mov	qword ptr [rsp + 0x38], rax
0x3794:	xor	eax, eax
0x3796:	mov	rax, qword ptr [rip + 0x203a93]
0x379d:	mov	r8, rsp
0x37a0:	and	ecx, 0x1f
0x37a3:	movdqa	xmm0, xmmword ptr [rip + 0x203a55]
0x37ab:	mov	qword ptr [rsp + 0x30], rax
0x37b0:	mov	eax, edx
0x37b2:	movaps	xmmword ptr [rsp], xmm0
0x37b6:	shr	al, 5
0x37b9:	movzx	eax, al
0x37bc:	lea	r9, [r8 + rax*4 + 8]
0x37c1:	movdqa	xmm0, xmmword ptr [rip + 0x203a47]
0x37c9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x37ce:	movdqa	xmm0, xmmword ptr [rip + 0x203a4a]
0x37d6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x37db:	mov	edx, dword ptr [r9]
0x37de:	mov	eax, edx
0x37e0:	shr	eax, cl
0x37e2:	not	eax
0x37e4:	and	eax, 1
0x37e7:	shl	eax, cl
0x37e9:	mov	rcx, r8
0x37ec:	xor	eax, edx
0x37ee:	mov	rdx, rsi
0x37f1:	mov	rsi, rdi
0x37f4:	mov	dword ptr [r9], eax
0x37f7:	xor	edi, edi
0x37f9:	call	0x30f0


0x3770:	mov	rcx, rdx
0x3773:	mov	rdx, rsi
0x3776:	mov	esi, edi
0x3778:	xor	edi, edi
0x377a:	jmp	0x36d0


0x3760:	mov	rdx, rsi
0x3763:	mov	esi, edi
0x3765:	xor	edi, edi
0x3767:	jmp	0x3640


0x36d0:	sub	rsp, 0x48
0x36d4:	mov	rax, rdx
0x36d7:	mov	rdx, rcx
0x36da:	mov	rcx, qword ptr fs:[0x28]
0x36e3:	mov	qword ptr [rsp + 0x38], rcx
0x36e8:	xor	ecx, ecx
0x36ea:	cmp	esi, 0xa
0x36ed:	je	0x3750


0x3640:	sub	rsp, 0x48
0x3644:	mov	rax, rdx
0x3647:	mov	rdx, qword ptr fs:[0x28]
0x3650:	mov	qword ptr [rsp + 0x38], rdx
0x3655:	xor	edx, edx
0x3657:	cmp	esi, 0xa
0x365a:	je	0x36c4


0x3620:	lea	rcx, [rip + 0x203bd9]
0x3627:	mov	rdx, rsi
0x362a:	mov	rsi, rdi
0x362d:	xor	edi, edi
0x362f:	jmp	0x30f0


0x3600:	lea	rcx, [rip + 0x203bf9]
0x3607:	mov	rsi, rdi
0x360a:	mov	rdx, -1
0x3611:	xor	edi, edi
0x3613:	jmp	0x30f0


0x35f0:	lea	rcx, [rip + 0x203c09]
0x35f7:	jmp	0x30f0


0x35d0:	lea	rcx, [rip + 0x203c29]
0x35d7:	mov	rdx, -1
0x35de:	jmp	0x30f0


0x3530:	mov	eax, dword ptr [rip + 0x203b22]
0x3536:	push	r12
0x3538:	mov	r12, qword ptr [rip + 0x203b21]
0x353f:	push	rbp
0x3540:	push	rbx
0x3541:	cmp	eax, 1
0x3544:	jle	0x3571


0x3520:	mov	rcx, rdx
0x3523:	xor	edx, edx
0x3525:	jmp	0x3430


0x3430:	push	r15
0x3432:	push	r14
0x3434:	lea	rax, [rip + 0x203dc5]
0x343b:	push	r13
0x343d:	push	r12
0x343f:	mov	r12, rdx
0x3442:	push	rbp
0x3443:	push	rbx
0x3444:	mov	rbx, rcx
0x3447:	mov	r14, rdi
0x344a:	mov	r15, rsi
0x344d:	sub	rsp, 0x38
0x3451:	test	rcx, rcx
0x3454:	cmove	rbx, rax
0x3458:	xor	ebp, ebp
0x345a:	call	0x1250


0x33b0:	push	r15
0x33b2:	push	r14
0x33b4:	lea	rax, [rip + 0x203e45]
0x33bb:	push	r13
0x33bd:	push	r12
0x33bf:	mov	r13, rdi
0x33c2:	push	rbp
0x33c3:	push	rbx
0x33c4:	mov	rbx, r8
0x33c7:	mov	r14, rsi
0x33ca:	mov	r15, rdx
0x33cd:	sub	rsp, 0x18
0x33d1:	test	r8, r8
0x33d4:	cmove	rbx, rax
0x33d8:	mov	qword ptr [rsp + 8], rcx
0x33dd:	call	0x1250


0x3380:	lea	rax, [rip + 0x203e79]
0x3387:	test	rdi, rdi
0x338a:	cmove	rdi, rax
0x338e:	test	rsi, rsi
0x3391:	mov	dword ptr [rdi], 0xa
0x3397:	je	0x33a7


0x3360:	lea	rax, [rip + 0x203e99]
0x3367:	test	rdi, rdi
0x336a:	cmove	rdi, rax
0x336e:	mov	eax, dword ptr [rdi + 4]
0x3371:	mov	dword ptr [rdi + 4], esi
0x3374:	ret	


0x3320:	lea	rax, [rip + 0x203ed9]
0x3327:	test	rdi, rdi
0x332a:	mov	ecx, esi
0x332c:	cmove	rdi, rax
0x3330:	mov	eax, esi
0x3332:	and	ecx, 0x1f
0x3335:	shr	al, 5
0x3338:	movzx	eax, al
0x333b:	lea	rdi, [rdi + rax*4 + 8]
0x3340:	mov	esi, dword ptr [rdi]
0x3342:	mov	eax, esi
0x3344:	shr	eax, cl
0x3346:	xor	edx, eax
0x3348:	and	eax, 1
0x334b:	and	edx, 1
0x334e:	shl	edx, cl
0x3350:	xor	edx, esi
0x3352:	mov	dword ptr [rdi], edx
0x3354:	ret	


0x3300:	lea	rax, [rip + 0x203ef9]
0x3307:	test	rdi, rdi
0x330a:	cmove	rdi, rax
0x330e:	mov	dword ptr [rdi], esi
0x3310:	ret	


0x32e0:	lea	rax, [rip + 0x203f19]
0x32e7:	test	rdi, rdi
0x32ea:	cmove	rdi, rax
0x32ee:	mov	eax, dword ptr [rdi]
0x32f0:	ret	


0x32a0:	push	r12
0x32a2:	push	rbp
0x32a3:	push	rbx
0x32a4:	mov	rbx, rdi
0x32a7:	call	0x1250


0x30f0:	push	r15
0x30f2:	push	r14
0x30f4:	movsxd	r15, edi
0x30f7:	push	r13
0x30f9:	push	r12
0x30fb:	mov	r14, rdx
0x30fe:	push	rbp
0x30ff:	push	rbx
0x3100:	mov	rbp, rcx
0x3103:	sub	rsp, 0x28
0x3107:	mov	qword ptr [rsp + 8], rsi
0x310c:	call	0x1250


0x1eb0:	push	r15
0x1eb2:	push	r14
0x1eb4:	mov	r15d, r8d
0x1eb7:	push	r13
0x1eb9:	push	r12
0x1ebb:	mov	r14, rdi
0x1ebe:	push	rbp
0x1ebf:	push	rbx
0x1ec0:	mov	ebx, r9d
0x1ec3:	mov	r13, rsi
0x1ec6:	mov	rbp, rcx
0x1ec9:	and	ebx, 2
0x1ecc:	sub	rsp, 0xb8
0x1ed3:	mov	rax, qword ptr [rsp + 0xf0]
0x1edb:	mov	qword ptr [rsp + 0x10], rdx
0x1ee0:	mov	dword ptr [rsp + 8], r8d
0x1ee5:	mov	dword ptr [rsp + 0x78], r9d
0x1eea:	mov	qword ptr [rsp + 0x20], rax
0x1eef:	mov	rax, qword ptr [rsp + 0xf8]
0x1ef7:	mov	qword ptr [rsp + 0x68], rax
0x1efc:	mov	rax, qword ptr [rsp + 0x100]
0x1f04:	mov	qword ptr [rsp + 0x60], rax
0x1f09:	mov	rax, qword ptr fs:[0x28]
0x1f12:	mov	qword ptr [rsp + 0xa8], rax
0x1f1a:	xor	eax, eax
0x1f1c:	call	0x12d0


0x1dc0:	push	rbp
0x1dc1:	push	rbx
0x1dc2:	mov	rbp, rdi
0x1dc5:	mov	ebx, esi
0x1dc7:	sub	rsp, 8
0x1dcb:	call	0x4470


0x1d20:	test	rdi, rdi
0x1d23:	push	rbx
0x1d24:	je	0x1d9d


0x1c70:	push	rbp
0x1c71:	push	rbx
0x1c72:	sub	rsp, 8
0x1c76:	mov	rdi, qword ptr [rip + 0x20540b]
0x1c7d:	call	0x4390


0x1c60:	mov	byte ptr [rip + 0x205469], dil
0x1c67:	ret	


0x1c50:	mov	qword ptr [rip + 0x205481], rdi
0x1c57:	ret	


0x18c0:	push	r13
0x18c2:	push	r12
0x18c4:	mov	edx, 5
0x18c9:	push	rbp
0x18ca:	push	rbx
0x18cb:	mov	ebp, edi
0x18cd:	sub	rsp, 0x88
0x18d4:	mov	rbx, qword ptr [rip + 0x205805]
0x18db:	mov	rax, qword ptr fs:[0x28]
0x18e4:	mov	qword ptr [rsp + 0x78], rax
0x18e9:	xor	eax, eax
0x18eb:	test	edi, edi
0x18ed:	je	0x191d


0x18b0:	push	rbp
0x18b1:	mov	rbp, rsp
0x18b4:	pop	rbp
0x18b5:	jmp	0x1820


0x1870:	cmp	byte ptr [rip + 0x205851], 0
0x1877:	jne	0x18a8


0x1820:	lea	rdi, [rip + 0x205859]
0x1827:	lea	rsi, [rip + 0x205852]
0x182e:	push	rbp
0x182f:	sub	rsi, rdi
0x1832:	mov	rbp, rsp
0x1835:	sar	rsi, 3
0x1839:	mov	rax, rsi
0x183c:	shr	rax, 0x3f
0x1840:	add	rsi, rax
0x1843:	sar	rsi, 1
0x1846:	je	0x1860


0x17e0:	lea	rdi, [rip + 0x205899]
0x17e7:	push	rbp
0x17e8:	lea	rax, [rip + 0x205891]
0x17ef:	cmp	rax, rdi
0x17f2:	mov	rbp, rsp
0x17f5:	je	0x1810


0x17b0:	xor	ebp, ebp
0x17b2:	mov	r9, rdx
0x17b5:	pop	rsi
0x17b6:	mov	rdx, rsp
0x17b9:	and	rsp, 0xfffffffffffffff0
0x17bd:	push	rax
0x17be:	push	rsp
0x17bf:	lea	r8, [rip + 0x2e7a]
0x17c6:	lea	rcx, [rip + 0x2e03]
0x17cd:	lea	rdi, [rip - 0x324]
0x17d4:	call	qword ptr [rip + 0x205806]


0x14b0:	push	r15
0x14b2:	push	r14
0x14b4:	xor	r15d, r15d
0x14b7:	push	r13
0x14b9:	push	r12
0x14bb:	xor	r13d, r13d
0x14be:	push	rbp
0x14bf:	push	rbx
0x14c0:	mov	ebp, edi
0x14c2:	mov	rbx, rsi
0x14c5:	xor	r14d, r14d
0x14c8:	sub	rsp, 0x28
0x14cc:	mov	rdi, qword ptr [rsi]
0x14cf:	mov	rax, qword ptr fs:[0x28]
0x14d8:	mov	qword ptr [rsp + 0x18], rax
0x14dd:	xor	eax, eax
0x14df:	lea	r12, [rsp + 0x14]
0x14e4:	call	0x1d20


0x1200:	sub	rsp, 8
0x1204:	mov	rax, qword ptr [rip + 0x205ddd]
0x120b:	test	rax, rax
0x120e:	je	0x1212


0x1430:	jmp	qword ptr [rip + 0x205b6a]


0x4580:	mov	rax, qword ptr [rdi + 0x20]
0x4584:	cmp	qword ptr [rdi + 0x28], rax
0x4588:	jne	0x457a


0x457a:	jmp	0x1420


0x454a:	mov	rdi, rbx
0x454d:	pop	rbx
0x454e:	jmp	0x13b0


0x4539:	call	0x13d0


0x1390:	jmp	qword ptr [rip + 0x205bba]


0x13c0:	jmp	qword ptr [rip + 0x205ba2]


0x13f0:	jmp	qword ptr [rip + 0x205b8a]


0x1280:	jmp	qword ptr [rip + 0x205c42]


0x1310:	jmp	qword ptr [rip + 0x205bfa]


0x12c0:	jmp	qword ptr [rip + 0x205c22]


0x12e0:	jmp	qword ptr [rip + 0x205c12]


0x4269:	call	0x42c0


0x4252:	movzx	edx, dl
0x4255:	test	rdx, rdx
0x4258:	jne	0x4269


0x4200:	test	rax, rax
0x4203:	mov	edx, 0x80
0x4208:	cmove	rax, rdx
0x420c:	test	rax, rax
0x420f:	jns	0x41f2


0x41d8:	movabs	rdx, 0x5555555555555553
0x41e2:	cmp	rax, rdx
0x41e5:	ja	0x4211


0x4180:	test	rcx, rcx
0x4183:	je	0x41a8


0x414b:	xor	edx, edx
0x414d:	movabs	rax, 0x5555555555555554
0x4157:	div	r9
0x415a:	cmp	rax, rcx
0x415d:	jbe	0x419b


0x412b:	sub	rsp, 8
0x412f:	call	0x42c0


0x4121:	movzx	eax, al
0x4124:	test	rax, rax
0x4127:	jne	0x412b


0x40d9:	test	rdi, rdi
0x40dc:	jne	0x40f8


0x40de:	mov	rsi, rbx
0x40e1:	call	0x13e0


0x40ab:	sub	rsp, 8
0x40af:	call	0x42c0


0x40a1:	movzx	eax, al
0x40a4:	test	rax, rax
0x40a7:	jne	0x40ab


0x13a0:	jmp	qword ptr [rip + 0x205bb2]


0x3f86:	mov	eax, r10d
0x3f89:	mov	r11d, 1
0x3f8f:	add	r10d, 8
0x3f93:	add	rax, rbp
0x3f96:	mov	rax, qword ptr [rax]
0x3f99:	test	rax, rax
0x3f9c:	mov	qword ptr [r8 + r9*8], rax
0x3fa0:	je	0x3fac


0x3fdc:	mov	rax, rbx
0x3fdf:	add	rbx, 8
0x3fe3:	jmp	0x3f96


0x3eb8:	mov	r11d, eax
0x3ebb:	add	r11, qword ptr [r10 + 0x10]
0x3ebf:	add	eax, 8
0x3ec2:	mov	dword ptr [r10], eax
0x3ec5:	mov	rax, qword ptr [r11]
0x3ec8:	test	rax, rax
0x3ecb:	mov	qword ptr [r8 + r9*8], rax
0x3ecf:	je	0x3edb


0x3efa:	mov	r11, qword ptr [r10 + 8]
0x3efe:	lea	rax, [r11 + 8]
0x3f02:	mov	qword ptr [r10 + 8], rax
0x3f06:	jmp	0x3ec5


0x3e8b:	jmp	0x3a50


0x3b88:	mov	r8, rcx
0x3b8b:	mov	rcx, rdx
0x3b8e:	lea	rdx, [rip + 0x157f]
0x3b95:	mov	esi, 1
0x3b9a:	xor	eax, eax
0x3b9c:	call	0x1460


0x3a70:	mov	r8, rdx
0x3a73:	lea	rdx, [rip + 0x168e]
0x3a7a:	mov	r9, rcx
0x3a7d:	xor	eax, eax
0x3a7f:	mov	rcx, rsi
0x3a82:	mov	esi, 1
0x3a87:	call	0x1460


0x3977:	call	0x1240


0x3945:	test	rdx, rdx
0x3948:	je	0x3977


0x38e4:	call	0x1240


0x387c:	mov	dword ptr [rsp], esi
0x387f:	mov	rcx, rsp
0x3882:	mov	rdx, -1
0x3889:	mov	rsi, rax
0x388c:	mov	qword ptr [rsp + 4], 0
0x3895:	mov	qword ptr [rsp + 0xc], 0x4000000
0x389e:	mov	qword ptr [rsp + 0x14], 0
0x38a7:	mov	qword ptr [rsp + 0x1c], 0
0x38b0:	mov	qword ptr [rsp + 0x24], 0
0x38b9:	mov	qword ptr [rsp + 0x2c], 0
0x38c2:	mov	dword ptr [rsp + 0x34], 0
0x38ca:	call	0x30f0


0x3750:	call	0x1240


0x36ef:	mov	dword ptr [rsp], esi
0x36f2:	mov	rcx, rsp
0x36f5:	mov	rsi, rax
0x36f8:	mov	qword ptr [rsp + 4], 0
0x3701:	mov	qword ptr [rsp + 0xc], 0
0x370a:	mov	qword ptr [rsp + 0x14], 0
0x3713:	mov	qword ptr [rsp + 0x1c], 0
0x371c:	mov	qword ptr [rsp + 0x24], 0
0x3725:	mov	qword ptr [rsp + 0x2c], 0
0x372e:	mov	dword ptr [rsp + 0x34], 0
0x3736:	call	0x30f0


0x36c4:	call	0x1240


0x365c:	mov	dword ptr [rsp], esi
0x365f:	mov	rcx, rsp
0x3662:	mov	rdx, -1
0x3669:	mov	rsi, rax
0x366c:	mov	qword ptr [rsp + 4], 0
0x3675:	mov	qword ptr [rsp + 0xc], 0
0x367e:	mov	qword ptr [rsp + 0x14], 0
0x3687:	mov	qword ptr [rsp + 0x1c], 0
0x3690:	mov	qword ptr [rsp + 0x24], 0
0x3699:	mov	qword ptr [rsp + 0x2c], 0
0x36a2:	mov	dword ptr [rsp + 0x34], 0
0x36aa:	call	0x30f0


0x3571:	mov	rdi, qword ptr [r12 + 8]
0x3576:	lea	rbx, [rip + 0x203b83]
0x357d:	cmp	rdi, rbx
0x3580:	je	0x3599


0x3546:	sub	eax, 2
0x3549:	lea	rbx, [r12 + 0x18]
0x354e:	shl	rax, 4
0x3552:	lea	rbp, [r12 + rax + 0x28]
0x3557:	nop	word ptr [rax + rax]
0x3560:	mov	rdi, qword ptr [rbx]
0x3563:	add	rbx, 0x10
0x3567:	call	0x1230


0x1250:	jmp	qword ptr [rip + 0x205c5a]


0x33a7:	sub	rsp, 8
0x33ab:	call	0x1240


0x3399:	test	rdx, rdx
0x339c:	je	0x33a7


0x12d0:	jmp	qword ptr [rip + 0x205c1a]


0x1d9d:	mov	rcx, qword ptr [rip + 0x20531c]
0x1da4:	lea	rdi, [rip + 0x2e4d]
0x1dab:	mov	edx, 0x37
0x1db0:	mov	esi, 1
0x1db5:	call	0x1450


0x1d26:	mov	esi, 0x2f
0x1d2b:	mov	rbx, rdi
0x1d2e:	call	0x1320


0x191d:	lea	rsi, [rip + 0x2f04]
0x1924:	xor	edi, edi
0x1926:	call	0x12c0


0x18ef:	lea	rsi, [rip + 0x2f0a]
0x18f6:	xor	edi, edi
0x18f8:	call	0x12c0


0x1879:	cmp	qword ptr [rip + 0x205777], 0
0x1881:	push	rbp
0x1882:	mov	rbp, rsp
0x1885:	je	0x1893


0x18a8:	ret	


0x1860:	pop	rbp
0x1861:	ret	


0x1848:	mov	rax, qword ptr [rip + 0x2057a1]
0x184f:	test	rax, rax
0x1852:	je	0x1860


0x1810:	pop	rbp
0x1811:	ret	


0x17f7:	mov	rax, qword ptr [rip + 0x2057da]
0x17fe:	test	rax, rax
0x1801:	je	0x1810




0x1212:	add	rsp, 8
0x1216:	ret	


0x1210:	call	rax




0x458a:	cmp	qword ptr [rdi + 0x48], 0
0x458f:	jne	0x457a


0x1420:	jmp	qword ptr [rip + 0x205b72]


0x13b0:	jmp	qword ptr [rip + 0x205baa]


0x13d0:	jmp	qword ptr [rip + 0x205b9a]
















0x425a:	call	0x1370


0x4211:	sub	rsp, 8
0x4215:	call	0x42c0


0x41f2:	mov	qword ptr [rsi], rax
0x41f5:	mov	rsi, rax
0x41f8:	jmp	0x40d0


0x41e7:	mov	rdx, rax
0x41ea:	shr	rdx, 1
0x41ed:	lea	rax, [rdx + rax + 1]
0x41f2:	mov	qword ptr [rsi], rax
0x41f5:	mov	rsi, rax
0x41f8:	jmp	0x40d0


0x41a8:	xor	edx, edx
0x41aa:	mov	eax, 0x80
0x41af:	xor	r8d, r8d
0x41b2:	div	r9
0x41b5:	test	rax, rax
0x41b8:	sete	r8b
0x41bc:	lea	rcx, [r8 + rax]
0x41c0:	jmp	0x4185


0x4185:	mov	rax, rcx
0x4188:	mul	r9
0x418b:	seto	dl
0x418e:	test	rax, rax
0x4191:	movzx	edx, dl
0x4194:	js	0x419b


0x419b:	sub	rsp, 8
0x419f:	call	0x42c0


0x415f:	mov	rax, rcx
0x4162:	shr	rax, 1
0x4165:	lea	rcx, [rax + rcx + 1]
0x416a:	mov	qword ptr [rsi], rcx
0x416d:	imul	rcx, r9
0x4171:	mov	rsi, rcx
0x4174:	jmp	0x40d0


0x4129:	jmp	0x40d0


0x40f8:	call	0x1230


0x13e0:	jmp	qword ptr [rip + 0x205b92]


0x40a9:	jmp	0x4070




0x3fac:	test	r11b, r11b
0x3faf:	jne	0x3fd5


0x3fa2:	add	r9, 1
0x3fa6:	cmp	r9, 0xa
0x3faa:	jne	0x3f80


0x3f96:	mov	rax, qword ptr [rax]
0x3f99:	test	rax, rax
0x3f9c:	mov	qword ptr [r8 + r9*8], rax
0x3fa0:	je	0x3fac


0x3edb:	call	0x3a50


0x3ed1:	add	r9, 1
0x3ed5:	cmp	r9, 0xa
0x3ed9:	jne	0x3eb0


0x3ec5:	mov	rax, qword ptr [r11]
0x3ec8:	test	rax, rax
0x3ecb:	mov	qword ptr [r8 + r9*8], rax
0x3ecf:	je	0x3edb


0x3e80:	add	r9, 1
0x3e84:	cmp	qword ptr [r8 + r9*8], 0
0x3e89:	jne	0x3e80


0x1460:	jmp	qword ptr [rip + 0x205b52]


0x1240:	jmp	qword ptr [rip + 0x205c62]


0x394a:	mov	qword ptr [rsp + 0x28], rsi
0x394f:	mov	qword ptr [rsp + 0x30], rdx
0x3954:	mov	rcx, rsp
0x3957:	mov	rdx, r8
0x395a:	mov	rsi, r9
0x395d:	call	0x30f0


0x3599:	lea	rbx, [rip + 0x203ad0]
0x35a0:	cmp	r12, rbx
0x35a3:	je	0x35b4


0x3582:	call	0x1230


0x1230:	jmp	qword ptr [rip + 0x205c6a]




0x339e:	mov	qword ptr [rdi + 0x28], rsi
0x33a2:	mov	qword ptr [rdi + 0x30], rdx
0x33a6:	ret	




0x1450:	jmp	qword ptr [rip + 0x205b5a]


0x1320:	jmp	qword ptr [rip + 0x205bf2]


0x1893:	call	0x17e0


0x1887:	mov	rdi, qword ptr [rip + 0x20577a]
0x188e:	call	0x14a0


0x1854:	pop	rbp
0x1855:	jmp	rax


0x1803:	pop	rbp
0x1804:	jmp	rax


0x4591:	push	r12
0x4593:	push	rbp
0x4594:	mov	r12d, edx
0x4597:	push	rbx
0x4598:	mov	rbp, rsi
0x459b:	mov	rbx, rdi
0x459e:	call	0x1390








0x1370:	jmp	qword ptr [rip + 0x205bca]


0x4196:	test	rdx, rdx
0x4199:	je	0x416a




0x3fb1:	call	0x3a50


0x3fd5:	mov	dword ptr [rsp + 8], r10d
0x3fda:	jmp	0x3fb1


0x3f80:	cmp	r10d, 0x2f
0x3f84:	ja	0x3fdc


0x3eb0:	mov	eax, dword ptr [r10]
0x3eb3:	cmp	eax, 0x2f
0x3eb6:	ja	0x3efa






0x35b4:	pop	rbx
0x35b5:	mov	dword ptr [rip + 0x203a99], 1
0x35bf:	pop	rbp
0x35c0:	pop	r12
0x35c2:	ret	


0x35a5:	mov	rdi, r12
0x35a8:	call	0x1230








0x14a0:	jmp	qword ptr [rip + 0x205b52]




0x416a:	mov	qword ptr [rsi], rcx
0x416d:	imul	rcx, r9
0x4171:	mov	rsi, rcx
0x4174:	jmp	0x40d0


0x1898:	mov	byte ptr [rip + 0x205829], 1
0x189f:	pop	rbp
0x18a0:	ret	


0x4601:	test	rbp, rbp
0x4604:	je	0x4626


0x4626:	add	rsp, 8
0x462a:	pop	rbx
0x462b:	pop	rbp
0x462c:	pop	r12
0x462e:	pop	r13
0x4630:	pop	r14
0x4632:	pop	r15
0x4634:	ret	


0x4606:	xor	ebx, ebx
0x4608:	nop	dword ptr [rax + rax]
0x4610:	mov	rdx, r15
0x4613:	mov	rsi, r14
0x4616:	mov	edi, r13d
0x4619:	call	qword ptr [r12 + rbx*8]


0x425f:	test	rax, rax
0x4262:	je	0x4269


0x4264:	add	rsp, 8
0x4268:	ret	


0x1d33:	test	rax, rax
0x1d36:	je	0x1d8d


0x1d8d:	mov	qword ptr [rip + 0x20534c], rbx
0x1d94:	mov	qword ptr [rip + 0x205305], rbx
0x1d9b:	pop	rbx
0x1d9c:	ret	


0x1d38:	lea	r8, [rax + 1]
0x1d3c:	mov	rdx, r8
0x1d3f:	sub	rdx, rbx
0x1d42:	cmp	rdx, 6
0x1d46:	jle	0x1d8d


0x1d48:	lea	rsi, [rax - 6]
0x1d4c:	lea	rdi, [rip + 0x2edd]
0x1d53:	mov	ecx, 7
0x1d58:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1d58:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1d5a:	seta	dl
0x1d5d:	sbb	dl, 0
0x1d60:	test	dl, dl
0x1d62:	jne	0x1d8d


0x1d64:	lea	rdi, [rip + 0x2ecd]
0x1d6b:	mov	ecx, 3
0x1d70:	mov	rsi, r8
0x1d73:	mov	rbx, r8
0x1d76:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1d76:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1d78:	seta	dl
0x1d7b:	sbb	dl, 0
0x1d7e:	test	dl, dl
0x1d80:	jne	0x1d8d


0x1d82:	lea	rbx, [rax + 4]
0x1d86:	mov	qword ptr [rip + 0x2052f3], rbx
0x1d8d:	mov	qword ptr [rip + 0x20534c], rbx
0x1d94:	mov	qword ptr [rip + 0x205305], rbx
0x1d9b:	pop	rbx
0x1d9c:	ret	


0x1dba:	call	0x1240


0x35ad:	mov	qword ptr [rip + 0x203aac], rbx
0x35b4:	pop	rbx
0x35b5:	mov	dword ptr [rip + 0x203a99], 1
0x35bf:	pop	rbp
0x35c0:	pop	r12
0x35c2:	ret	


0x3587:	mov	qword ptr [rip + 0x203ade], 0x100
0x3592:	mov	qword ptr [rip + 0x203adf], rbx
0x3599:	lea	rbx, [rip + 0x203ad0]
0x35a0:	cmp	r12, rbx
0x35a3:	je	0x35b4


0x40fd:	xor	eax, eax
0x40ff:	pop	rbx
0x4100:	ret	


0x356c:	cmp	rbx, rbp
0x356f:	jne	0x3560


0x3560:	mov	rdi, qword ptr [rbx]
0x3563:	add	rbx, 0x10
0x3567:	call	0x1230


0x3a8c:	lea	rsi, [rip + 0x1688]
0x3a93:	xor	edi, edi
0x3a95:	mov	edx, 5
0x3a9a:	call	0x12c0


0x3ba1:	jmp	0x3a8c


0x40e6:	test	rax, rax
0x40e9:	jne	0x40f0


0x40eb:	test	rbx, rbx
0x40ee:	jne	0x4101


0x40f0:	pop	rbx
0x40f1:	ret	


0x4101:	call	0x42c0


0x453e:	test	eax, eax
0x4540:	je	0x454a


0x4542:	test	dword ptr [rbx], 0x100
0x4548:	jne	0x4558


0x4558:	mov	rdi, rbx
0x455b:	mov	edx, 1
0x4560:	xor	esi, esi
0x4562:	call	0x4570


0x14e9:	lea	rsi, [rip + 0x3c71]
0x14f0:	mov	edi, 6
0x14f5:	call	0x13f0


0x1f21:	cmp	r15d, 0xa
0x1f25:	mov	qword ptr [rsp + 0x58], rax
0x1f2a:	ja	0x30df


0x1f30:	lea	rcx, [rip + 0x2d69]
0x1f37:	mov	edx, r15d
0x1f3a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x1f3e:	add	rax, rcx
0x1f41:	jmp	rax


0x30df:	call	0x1240


0x3111:	mov	r13, rax
0x3114:	mov	eax, dword ptr [rax]
0x3116:	test	r15d, r15d
0x3119:	mov	rbx, qword ptr [rip + 0x203f40]
0x3120:	mov	dword ptr [rsp + 0x18], eax
0x3124:	js	0x3291


0x3291:	call	0x1240


0x312a:	cmp	dword ptr [rip + 0x203f27], r15d
0x3131:	jg	0x3195


0x3133:	cmp	r15d, 0x7fffffff
0x313a:	je	0x3296


0x3195:	mov	eax, dword ptr [rbp + 4]
0x3198:	shl	r15, 4
0x319c:	sub	rsp, 8
0x31a0:	add	rbx, r15
0x31a3:	lea	r15, [rbp + 8]
0x31a7:	mov	r8d, dword ptr [rbp]
0x31ab:	mov	r11, qword ptr [rbx]
0x31ae:	mov	r12, qword ptr [rbx + 8]
0x31b2:	mov	rcx, r14
0x31b5:	or	eax, 1
0x31b8:	mov	dword ptr [rsp + 0x24], eax
0x31bc:	push	qword ptr [rbp + 0x30]
0x31bf:	mov	r9d, eax
0x31c2:	push	qword ptr [rbp + 0x28]
0x31c5:	push	r15
0x31c7:	mov	rsi, r11
0x31ca:	mov	rdx, qword ptr [rsp + 0x28]
0x31cf:	mov	rdi, r12
0x31d2:	mov	qword ptr [rsp + 0x30], r11
0x31d7:	call	0x1eb0


0x3296:	call	0x42c0


0x3140:	lea	r12d, [r15 + 1]
0x3144:	lea	rax, [rip + 0x203f25]
0x314b:	movsxd	rsi, r12d
0x314e:	shl	rsi, 4
0x3152:	cmp	rbx, rax
0x3155:	je	0x3270


0x3270:	xor	edi, edi
0x3272:	call	0x40d0


0x315b:	mov	rdi, rbx
0x315e:	call	0x40d0


0x3163:	mov	rbx, rax
0x3166:	mov	qword ptr [rip + 0x203ef3], rax
0x316d:	movsxd	rdi, dword ptr [rip + 0x203ee4]
0x3174:	mov	edx, r12d
0x3177:	xor	esi, esi
0x3179:	sub	edx, edi
0x317b:	shl	rdi, 4
0x317f:	movsxd	rdx, edx
0x3182:	add	rdi, rbx
0x3185:	shl	rdx, 4
0x3189:	call	0x1340


0x1340:	jmp	qword ptr [rip + 0x205be2]




0x3277:	movdqa	xmm0, xmmword ptr [rip + 0x203df1]
0x327f:	mov	rbx, rax
0x3282:	mov	qword ptr [rip + 0x203dd7], rax
0x3289:	movups	xmmword ptr [rax], xmm0
0x328c:	jmp	0x316d


0x316d:	movsxd	rdi, dword ptr [rip + 0x203ee4]
0x3174:	mov	edx, r12d
0x3177:	xor	esi, esi
0x3179:	sub	edx, edi
0x317b:	shl	rdi, 4
0x317f:	movsxd	rdx, edx
0x3182:	add	rdi, rbx
0x3185:	shl	rdx, 4
0x3189:	call	0x1340


0x32ac:	mov	r12d, dword ptr [rax]
0x32af:	mov	rbp, rax
0x32b2:	lea	rax, [rip + 0x203f47]
0x32b9:	test	rbx, rbx
0x32bc:	mov	esi, 0x38
0x32c1:	cmove	rbx, rax
0x32c5:	mov	rdi, rbx
0x32c8:	call	0x4270


0x33e2:	mov	r12d, dword ptr [rax]
0x33e5:	mov	rbp, rax
0x33e8:	lea	rax, [rbx + 8]
0x33ec:	sub	rsp, 8
0x33f0:	mov	r9d, dword ptr [rbx + 4]
0x33f4:	push	qword ptr [rbx + 0x30]
0x33f7:	mov	r8d, dword ptr [rbx]
0x33fa:	push	qword ptr [rbx + 0x28]
0x33fd:	mov	rdx, r15
0x3400:	push	rax
0x3401:	mov	rcx, qword ptr [rsp + 0x28]
0x3406:	mov	rsi, r14
0x3409:	mov	rdi, r13
0x340c:	call	0x1eb0


0x345f:	test	r12, r12
0x3462:	mov	r13, rax
0x3465:	mov	eax, dword ptr [rax]
0x3467:	sete	bpl
0x346b:	or	ebp, dword ptr [rbx + 4]
0x346e:	lea	r10, [rbx + 8]
0x3472:	sub	rsp, 8
0x3476:	mov	r8d, dword ptr [rbx]
0x3479:	mov	rcx, r15
0x347c:	mov	dword ptr [rsp + 0x14], eax
0x3480:	push	qword ptr [rbx + 0x30]
0x3483:	mov	rdx, r14
0x3486:	push	qword ptr [rbx + 0x28]
0x3489:	push	r10
0x348b:	xor	esi, esi
0x348d:	mov	r9d, ebp
0x3490:	xor	edi, edi
0x3492:	mov	qword ptr [rsp + 0x40], r10
0x3497:	call	0x1eb0


0x4079:	test	rax, rax
0x407c:	jne	0x4083


0x407e:	test	rbx, rbx
0x4081:	jne	0x4085


0x4083:	pop	rbx
0x4084:	ret	


0x4085:	call	0x42c0


0x4229:	mov	rdx, rbx
0x422c:	xor	esi, esi
0x422e:	mov	rdi, rax
0x4231:	pop	rbx
0x4232:	jmp	0x1340


0x4284:	add	rsp, 8
0x4288:	mov	rdx, rbx
0x428b:	mov	rsi, rbp
0x428e:	pop	rbx
0x428f:	pop	rbp
0x4290:	mov	rdi, rax
0x4293:	jmp	0x1380


0x1380:	jmp	qword ptr [rip + 0x205bc2]




0x42a9:	mov	rdi, rbx
0x42ac:	lea	rsi, [rax + 1]
0x42b0:	pop	rbx
0x42b1:	jmp	0x4270


0x3a9f:	lea	rdx, [rip + 0x199a]
0x3aa6:	mov	rcx, rax
0x3aa9:	mov	r8d, 0x7e3
0x3aaf:	mov	esi, 1
0x3ab4:	mov	rdi, rbp
0x3ab7:	xor	eax, eax
0x3ab9:	call	0x1460


0x3abe:	lea	rsi, [rip + 0x16e3]
0x3ac5:	xor	edi, edi
0x3ac7:	mov	edx, 5
0x3acc:	call	0x12c0


0x3ad1:	mov	rsi, rbp
0x3ad4:	mov	rdi, rax
0x3ad7:	call	0x1360


0x1360:	jmp	qword ptr [rip + 0x205bd2]




0x18fd:	mov	rdi, qword ptr [rip + 0x2057bc]
0x1904:	mov	rdx, rax
0x1907:	mov	rcx, rbx
0x190a:	mov	esi, 1
0x190f:	xor	eax, eax
0x1911:	call	0x1460


0x1916:	mov	edi, ebp
0x1918:	call	0x1440


0x1440:	jmp	qword ptr [rip + 0x205b62]




0x192b:	mov	rcx, rbx
0x192e:	mov	rdx, rbx
0x1931:	mov	rsi, rax
0x1934:	mov	edi, 1
0x1939:	xor	eax, eax
0x193b:	call	0x1400


0x1400:	jmp	qword ptr [rip + 0x205b82]




0x4004:	lea	rdx, [rip + 0x116c]
0x400b:	mov	rsi, rax
0x400e:	mov	edi, 1
0x4013:	xor	eax, eax
0x4015:	call	0x1400


0x42d7:	mov	edi, dword ptr [rip + 0x202d3b]
0x42dd:	lea	rdx, [rip + 0x911]
0x42e4:	mov	rcx, rax
0x42e7:	xor	esi, esi
0x42e9:	xor	eax, eax
0x42eb:	call	0x1410


0x1410:	jmp	qword ptr [rip + 0x205b7a]




0x4337:	cmp	rax, -3
0x433b:	mov	rbp, rax
0x433e:	jbe	0x4360


0x4360:	mov	rdx, qword ptr [rsp + 8]
0x4365:	xor	rdx, qword ptr fs:[0x28]
0x436e:	mov	rax, rbp
0x4371:	jne	0x437e


0x4340:	test	r12, r12
0x4343:	je	0x4360


0x4373:	add	rsp, 0x18
0x4377:	pop	rbx
0x4378:	pop	rbp
0x4379:	pop	r12
0x437b:	pop	r13
0x437d:	ret	


0x437e:	call	0x12f0


0x4345:	xor	edi, edi
0x4347:	call	0x4410


0x12f0:	jmp	qword ptr [rip + 0x205c0a]




0x439c:	mov	ebx, dword ptr [rbp]
0x439f:	mov	rdi, rbp
0x43a2:	mov	r12, rax
0x43a5:	call	0x44b0


0x14fa:	lea	rsi, [rip + 0x322d]
0x1501:	lea	rdi, [rip + 0x31fd]
0x1508:	call	0x12b0


0x12b0:	jmp	qword ptr [rip + 0x205c2a]




0x441b:	mov	rdx, rax
0x441e:	mov	eax, 1
0x4423:	test	rdx, rdx
0x4426:	je	0x4445


0x4445:	add	rsp, 8
0x4449:	ret	


0x4428:	lea	rdi, [rip + 0x1051]
0x442f:	mov	ecx, 2
0x4434:	mov	rsi, rdx
0x4437:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4437:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4439:	seta	cl
0x443c:	sbb	cl, 0
0x443f:	xor	eax, eax
0x4441:	test	cl, cl
0x4443:	jne	0x4450


0x4450:	lea	rdi, [rip + 0x102b]
0x4457:	mov	ecx, 6
0x445c:	mov	rsi, rdx
0x445f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x445f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4461:	seta	al
0x4464:	sbb	al, 0
0x4466:	test	al, al
0x4468:	setne	al
0x446b:	add	rsp, 8
0x446f:	ret	


0x434c:	test	al, al
0x434e:	jne	0x4360


0x4350:	movzx	eax, byte ptr [r13]
0x4355:	mov	ebp, 1
0x435a:	mov	dword ptr [rbx], eax
0x435c:	nop	dword ptr [rax]
0x4360:	mov	rdx, qword ptr [rsp + 8]
0x4365:	xor	rdx, qword ptr fs:[0x28]
0x436e:	mov	rax, rbp
0x4371:	jne	0x437e


0x447e:	test	rax, rax
0x4481:	je	0x44a0


0x44a0:	lea	rax, [rip + 0xfe1]
0x44a7:	add	rsp, 8
0x44ab:	ret	


0x4483:	cmp	byte ptr [rax], 0
0x4486:	lea	rdx, [rip + 0xffb]
0x448d:	cmove	rax, rdx
0x4491:	add	rsp, 8
0x4495:	ret	


0x1dd0:	movzx	edx, byte ptr [rax]
0x1dd3:	and	edx, 0xffffffdf
0x1dd6:	cmp	dl, 0x55
0x1dd9:	je	0x1e50


0x1e50:	movzx	edx, byte ptr [rax + 1]
0x1e54:	and	edx, 0xffffffdf
0x1e57:	cmp	dl, 0x54
0x1e5a:	jne	0x1de0


0x1ddb:	cmp	dl, 0x47
0x1dde:	je	0x1e00


0x1e5c:	movzx	edx, byte ptr [rax + 2]
0x1e60:	and	edx, 0xffffffdf
0x1e63:	cmp	dl, 0x46
0x1e66:	jne	0x1de0


0x1de0:	lea	rax, [rip + 0x2e64]
0x1de7:	lea	rdx, [rip + 0x2e5f]
0x1dee:	cmp	ebx, 9
0x1df1:	cmovne	rax, rdx
0x1df5:	add	rsp, 8
0x1df9:	pop	rbx
0x1dfa:	pop	rbp
0x1dfb:	ret	


0x1e00:	movzx	edx, byte ptr [rax + 1]
0x1e04:	and	edx, 0xffffffdf
0x1e07:	cmp	dl, 0x42
0x1e0a:	jne	0x1de0


0x1e6c:	cmp	byte ptr [rax + 3], 0x2d
0x1e70:	jne	0x1de0


0x1e0c:	cmp	byte ptr [rax + 2], 0x31
0x1e10:	jne	0x1de0


0x1e76:	cmp	byte ptr [rax + 4], 0x38
0x1e7a:	jne	0x1de0


0x1e12:	cmp	byte ptr [rax + 3], 0x38
0x1e16:	jne	0x1de0


0x1e80:	cmp	byte ptr [rax + 5], 0
0x1e84:	jne	0x1de0


0x1e18:	cmp	byte ptr [rax + 4], 0x30
0x1e1c:	jne	0x1de0


0x1e8a:	cmp	byte ptr [rbp], 0x60
0x1e8e:	lea	rax, [rip + 0x2da7]
0x1e95:	lea	rdx, [rip + 0x2da4]
0x1e9c:	cmovne	rax, rdx
0x1ea0:	add	rsp, 8
0x1ea4:	pop	rbx
0x1ea5:	pop	rbp
0x1ea6:	ret	


0x1e1e:	cmp	byte ptr [rax + 5], 0x33
0x1e22:	jne	0x1de0


0x1e24:	cmp	byte ptr [rax + 6], 0x30
0x1e28:	jne	0x1de0


0x1e2a:	cmp	byte ptr [rax + 7], 0
0x1e2e:	jne	0x1de0


0x1e30:	cmp	byte ptr [rbp], 0x60
0x1e34:	lea	rax, [rip + 0x2e09]
0x1e3b:	lea	rdx, [rip + 0x2e06]
0x1e42:	cmovne	rax, rdx
0x1e46:	add	rsp, 8
0x1e4a:	pop	rbx
0x1e4b:	pop	rbp
0x1e4c:	ret	


0x45a3:	mov	edx, r12d
0x45a6:	mov	rsi, rbp
0x45a9:	mov	edi, eax
0x45ab:	call	0x1330


0x1330:	jmp	qword ptr [rip + 0x205bea]




0x44bc:	test	eax, eax
0x44be:	mov	rdi, rbx
0x44c1:	js	0x4517


0x4517:	pop	rbx
0x4518:	pop	rbp
0x4519:	pop	r12
0x451b:	jmp	0x12a0


0x44c3:	call	0x13d0


0x12a0:	jmp	qword ptr [rip + 0x205c32]




0x44c8:	test	eax, eax
0x44ca:	jne	0x44f8


0x44cc:	mov	rdi, rbx
0x44cf:	call	0x4530


0x44f8:	mov	rdi, rbx
0x44fb:	call	0x1390


0x4500:	xor	esi, esi
0x4502:	mov	edx, 1
0x4507:	mov	edi, eax
0x4509:	call	0x1330


0x450e:	cmp	rax, -1
0x4512:	jne	0x44cc


0x4514:	mov	rdi, rbx
0x4517:	pop	rbx
0x4518:	pop	rbp
0x4519:	pop	r12
0x451b:	jmp	0x12a0


0x45b0:	cmp	rax, -1
0x45b4:	je	0x45c2


0x45c2:	pop	rbx
0x45c3:	pop	rbp
0x45c4:	pop	r12
0x45c6:	ret	


0x45b6:	and	dword ptr [rbx], 0xffffffef
0x45b9:	mov	qword ptr [rbx + 0x90], rax
0x45c0:	xor	eax, eax
0x45c2:	pop	rbx
0x45c3:	pop	rbp
0x45c4:	pop	r12
0x45c6:	ret	


0x150d:	lea	rdi, [rip + 0x31f1]
0x1514:	call	0x1290


0x1290:	jmp	qword ptr [rip + 0x205c3a]




0x42f0:	call	0x1240


0x401a:	lea	rsi, [rip + 0x116c]
0x4021:	mov	edx, 5
0x4026:	xor	edi, edi
0x4028:	call	0x12c0


0x402d:	lea	rcx, [rip + 0xaac]
0x4034:	lea	rdx, [rip + 0x6c6]
0x403b:	mov	rsi, rax
0x403e:	mov	edi, 1
0x4043:	xor	eax, eax
0x4045:	call	0x1400


0x404a:	mov	rbx, qword ptr [rip + 0x203037]
0x4051:	lea	rsi, [rip + 0x1368]
0x4058:	xor	edi, edi
0x405a:	mov	edx, 5
0x405f:	call	0x12c0


0x4064:	mov	rsi, rbx
0x4067:	mov	rdi, rax
0x406a:	pop	rbx
0x406b:	jmp	0x1360


0x1940:	mov	rbx, qword ptr [rip + 0x205741]
0x1947:	lea	rsi, [rip + 0x2f4a]
0x194e:	mov	edx, 5
0x1953:	xor	edi, edi
0x1955:	call	0x12c0


0x195a:	mov	rsi, rbx
0x195d:	mov	rdi, rax
0x1960:	call	0x1360


0x1965:	mov	rbx, qword ptr [rip + 0x20571c]
0x196c:	lea	rsi, [rip + 0x2fa5]
0x1973:	mov	edx, 5
0x1978:	xor	edi, edi
0x197a:	call	0x12c0


0x197f:	mov	rsi, rbx
0x1982:	mov	rdi, rax
0x1985:	call	0x1360


0x198a:	mov	rbx, qword ptr [rip + 0x2056f7]
0x1991:	lea	rsi, [rip + 0x2fd0]
0x1998:	mov	edx, 5
0x199d:	xor	edi, edi
0x199f:	call	0x12c0


0x19a4:	mov	rsi, rbx
0x19a7:	mov	rdi, rax
0x19aa:	call	0x1360


0x19af:	mov	rbx, qword ptr [rip + 0x2056d2]
0x19b6:	lea	rsi, [rip + 0x30bb]
0x19bd:	mov	edx, 5
0x19c2:	xor	edi, edi
0x19c4:	call	0x12c0


0x19c9:	mov	rsi, rbx
0x19cc:	mov	rdi, rax
0x19cf:	call	0x1360


0x19d4:	mov	rbx, qword ptr [rip + 0x2056ad]
0x19db:	lea	rsi, [rip + 0x30c6]
0x19e2:	mov	edx, 5
0x19e7:	xor	edi, edi
0x19e9:	call	0x12c0


0x19ee:	mov	rsi, rbx
0x19f1:	mov	rdi, rax
0x19f4:	lea	rbx, [rip + 0x2c89]
0x19fb:	call	0x1360


0x1a00:	lea	rax, [rip + 0x2c84]
0x1a07:	lea	rcx, [rip + 0x2cbe]
0x1a0e:	mov	qword ptr [rsp + 0x60], 0
0x1a17:	mov	qword ptr [rsp + 0x68], 0
0x1a20:	mov	rdx, rsp
0x1a23:	mov	qword ptr [rsp], rax
0x1a27:	lea	rax, [rip + 0x2c5f]
0x1a2e:	mov	qword ptr [rsp + 0x30], rcx
0x1a33:	lea	rcx, [rip + 0x2c9c]
0x1a3a:	mov	qword ptr [rsp + 8], rax
0x1a3f:	lea	rax, [rip + 0x2cbf]
0x1a46:	mov	qword ptr [rsp + 0x40], rcx
0x1a4b:	lea	rcx, [rip + 0x2c8e]
0x1a52:	mov	qword ptr [rsp + 0x10], rax
0x1a57:	lea	rax, [rip + 0x2c3f]
0x1a5e:	mov	qword ptr [rsp + 0x50], rcx
0x1a63:	mov	qword ptr [rsp + 0x18], rax
0x1a68:	lea	rax, [rip + 0x2c44]
0x1a6f:	mov	qword ptr [rsp + 0x20], rax
0x1a74:	lea	rax, [rip + 0x2c42]
0x1a7b:	mov	qword ptr [rsp + 0x28], rax
0x1a80:	mov	qword ptr [rsp + 0x38], rax
0x1a85:	mov	qword ptr [rsp + 0x48], rax
0x1a8a:	mov	qword ptr [rsp + 0x58], rax
0x1a8f:	nop	
0x1a90:	add	rdx, 0x10
0x1a94:	mov	rdi, qword ptr [rdx]
0x1a97:	test	rdi, rdi
0x1a9a:	je	0x1aaf


0x1aaf:	mov	r12, qword ptr [rdx + 8]
0x1ab3:	xor	edi, edi
0x1ab5:	mov	edx, 5
0x1aba:	lea	rsi, [rip + 0x2c29]
0x1ac1:	test	r12, r12
0x1ac4:	je	0x1b8b


0x1a9c:	mov	ecx, 7
0x1aa1:	mov	rsi, rbx
0x1aa4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1b8b:	call	0x12c0


0x1aca:	call	0x12c0


0x1aa4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1aa6:	seta	al
0x1aa9:	sbb	al, 0
0x1aab:	test	al, al
0x1aad:	jne	0x1a90


0x1a90:	add	rdx, 0x10
0x1a94:	mov	rdi, qword ptr [rdx]
0x1a97:	test	rdi, rdi
0x1a9a:	je	0x1aaf


0x1acf:	lea	rcx, [rip + 0x300a]
0x1ad6:	lea	rdx, [rip + 0x2c24]
0x1add:	mov	rsi, rax
0x1ae0:	mov	edi, 1
0x1ae5:	xor	eax, eax
0x1ae7:	call	0x1400


0x1aec:	xor	esi, esi
0x1aee:	mov	edi, 5
0x1af3:	call	0x13f0


0x1af8:	test	rax, rax
0x1afb:	je	0x1b19


0x1b19:	lea	rsi, [rip + 0x2bf3]
0x1b20:	xor	edi, edi
0x1b22:	mov	edx, 5
0x1b27:	call	0x12c0


0x1afd:	lea	rsi, [rip + 0x2c0b]
0x1b04:	mov	edx, 3
0x1b09:	mov	rdi, rax
0x1b0c:	call	0x1260


0x1260:	jmp	qword ptr [rip + 0x205c52]




0x1b2c:	lea	rcx, [rip + 0x2b51]
0x1b33:	lea	rdx, [rip + 0x2fa6]
0x1b3a:	mov	rsi, rax
0x1b3d:	mov	edi, 1
0x1b42:	xor	eax, eax
0x1b44:	call	0x1400


0x1b49:	cmp	r12, rbx
0x1b4c:	lea	rcx, [rip + 0x2b54]
0x1b53:	lea	rbx, [rip + 0x3607]
0x1b5a:	cmove	rbx, rcx
0x1b5e:	lea	rsi, [rip + 0x2feb]
0x1b65:	xor	edi, edi
0x1b67:	mov	edx, 5
0x1b6c:	call	0x12c0


0x1b71:	mov	rcx, rbx
0x1b74:	mov	rsi, rax
0x1b77:	mov	rdx, r12
0x1b7a:	mov	edi, 1
0x1b7f:	xor	eax, eax
0x1b81:	call	0x1400


0x1b86:	jmp	0x1916


0x1b90:	lea	rcx, [rip + 0x2f49]
0x1b97:	lea	rdx, [rip + 0x2b63]
0x1b9e:	mov	rsi, rax
0x1ba1:	mov	edi, 1
0x1ba6:	xor	eax, eax
0x1ba8:	call	0x1400


0x1bad:	xor	esi, esi
0x1baf:	mov	edi, 5
0x1bb4:	call	0x13f0


0x1bb9:	test	rax, rax
0x1bbc:	je	0x1bd6


0x1bd6:	lea	rsi, [rip + 0x2b36]
0x1bdd:	mov	edx, 5
0x1be2:	xor	edi, edi
0x1be4:	lea	r12, [rip + 0x2a99]
0x1beb:	lea	rbx, [rip + 0x2ab5]
0x1bf2:	call	0x12c0


0x1bbe:	lea	rsi, [rip + 0x2b4a]
0x1bc5:	mov	edx, 3
0x1bca:	mov	rdi, rax
0x1bcd:	call	0x1260


0x1bf7:	lea	rcx, [rip + 0x2a86]
0x1bfe:	lea	rdx, [rip + 0x2edb]
0x1c05:	mov	rsi, rax
0x1c08:	mov	edi, 1
0x1c0d:	xor	eax, eax
0x1c0f:	call	0x1400


0x1c14:	jmp	0x1b5e


0x1b5e:	lea	rsi, [rip + 0x2feb]
0x1b65:	xor	edi, edi
0x1b67:	mov	edx, 5
0x1b6c:	call	0x12c0


0x3adc:	cmp	r12, 9
0x3ae0:	ja	0x3e20


0x3ae6:	lea	rdx, [rip + 0x191b]
0x3aed:	movsxd	rax, dword ptr [rdx + r12*4]
0x3af1:	add	rax, rdx
0x3af4:	jmp	rax


0x3e20:	mov	r10, qword ptr [rbx + 0x40]
0x3e24:	mov	r9, qword ptr [rbx + 0x38]
0x3e28:	mov	edx, 5
0x3e2d:	mov	rax, qword ptr [rbx + 0x10]
0x3e31:	mov	r8, qword ptr [rbx + 8]
0x3e35:	lea	rsi, [rip + 0x1544]
0x3e3c:	mov	r13, qword ptr [rbx + 0x30]
0x3e40:	mov	r12, qword ptr [rbx + 0x28]
0x3e44:	mov	r15, qword ptr [rbx + 0x20]
0x3e48:	mov	r14, qword ptr [rbx + 0x18]
0x3e4c:	mov	qword ptr [rsp + 0x18], r10
0x3e51:	mov	qword ptr [rsp + 0x10], r9
0x3e56:	mov	qword ptr [rsp], rax
0x3e5a:	mov	qword ptr [rsp + 8], r8
0x3e5f:	mov	rbx, qword ptr [rbx]
0x3e62:	jmp	0x3bf2


0x3bf2:	xor	edi, edi
0x3bf4:	call	0x12c0


0x3bf9:	mov	r10, qword ptr [rsp + 0x18]
0x3bfe:	push	r10
0x3c00:	jmp	0x3b44


0x3b44:	mov	r9, qword ptr [rsp + 0x18]
0x3b49:	mov	rdx, rax
0x3b4c:	mov	rcx, rbx
0x3b4f:	mov	esi, 1
0x3b54:	mov	rdi, rbp
0x3b57:	xor	eax, eax
0x3b59:	push	r9
0x3b5b:	push	r13
0x3b5d:	push	r12
0x3b5f:	push	r15
0x3b61:	push	r14
0x3b63:	mov	r9, qword ptr [rsp + 0x30]
0x3b68:	mov	r8, qword ptr [rsp + 0x38]
0x3b6d:	call	0x1460


0x3b72:	add	rsp, 0x30
0x3b76:	add	rsp, 0x28
0x3b7a:	pop	rbx
0x3b7b:	pop	rbp
0x3b7c:	pop	r12
0x3b7e:	pop	r13
0x3b80:	pop	r14
0x3b82:	pop	r15
0x3b84:	ret	


0x32cd:	mov	dword ptr [rbp], r12d
0x32d1:	pop	rbx
0x32d2:	pop	rbp
0x32d3:	pop	r12
0x32d5:	ret	


0x318e:	mov	dword ptr [rip + 0x203ec3], r12d
0x3195:	mov	eax, dword ptr [rbp + 4]
0x3198:	shl	r15, 4
0x319c:	sub	rsp, 8
0x31a0:	add	rbx, r15
0x31a3:	lea	r15, [rbp + 8]
0x31a7:	mov	r8d, dword ptr [rbp]
0x31ab:	mov	r11, qword ptr [rbx]
0x31ae:	mov	r12, qword ptr [rbx + 8]
0x31b2:	mov	rcx, r14
0x31b5:	or	eax, 1
0x31b8:	mov	dword ptr [rsp + 0x24], eax
0x31bc:	push	qword ptr [rbp + 0x30]
0x31bf:	mov	r9d, eax
0x31c2:	push	qword ptr [rbp + 0x28]
0x31c5:	push	r15
0x31c7:	mov	rsi, r11
0x31ca:	mov	rdx, qword ptr [rsp + 0x28]
0x31cf:	mov	rdi, r12
0x31d2:	mov	qword ptr [rsp + 0x30], r11
0x31d7:	call	0x1eb0


0x4567:	mov	rdi, rbx
0x456a:	pop	rbx
0x456b:	jmp	0x13b0


0x3fb6:	mov	rax, qword ptr [rsp + 0x78]
0x3fbb:	xor	rax, qword ptr fs:[0x28]
0x3fc4:	jne	0x3fd0


0x3fc6:	add	rsp, 0xb8
0x3fcd:	pop	rbx
0x3fce:	pop	rbp
0x3fcf:	ret	


0x3fd0:	call	0x12f0


0x3ee0:	mov	rax, qword ptr [rsp + 0x58]
0x3ee5:	xor	rax, qword ptr fs:[0x28]
0x3eee:	jne	0x3ef5


0x3ef0:	add	rsp, 0x68
0x3ef4:	ret	


0x3ef5:	call	0x12f0


0x1bd2:	test	eax, eax
0x1bd4:	jne	0x1c19


0x1c19:	lea	r12, [rip + 0x2a64]
0x1c20:	mov	r13, qword ptr [rip + 0x205461]
0x1c27:	lea	rsi, [rip + 0x2eda]
0x1c2e:	xor	edi, edi
0x1c30:	mov	edx, 5
0x1c35:	call	0x12c0


0x1c3a:	mov	rsi, r13
0x1c3d:	mov	rdi, rax
0x1c40:	call	0x1360


0x1c45:	jmp	0x1b19


0x1b11:	test	eax, eax
0x1b13:	jne	0x1c20


0x1c20:	mov	r13, qword ptr [rip + 0x205461]
0x1c27:	lea	rsi, [rip + 0x2eda]
0x1c2e:	xor	edi, edi
0x1c30:	mov	edx, 5
0x1c35:	call	0x12c0


0x1519:	lea	rdi, [rip + 0x750]
0x1520:	call	0x4650


0x1525:	mov	byte ptr [rsp + 0xf], 0
0x152a:	mov	qword ptr [rsp], 0
0x1532:	lea	rcx, [rip + 0x205607]
0x1539:	lea	rdx, [rip + 0x3206]
0x1540:	mov	r8, r12
0x1543:	mov	rsi, rbx
0x1546:	mov	edi, ebp
0x1548:	mov	dword ptr [rsp + 0x14], 0
0x1550:	call	0x1300


0x1300:	jmp	qword ptr [rip + 0x205c02]




0x44d4:	test	eax, eax
0x44d6:	je	0x4514


0x44d8:	call	0x1250


0x44dd:	mov	r12d, dword ptr [rax]
0x44e0:	mov	rdi, rbx
0x44e3:	mov	rbp, rax
0x44e6:	call	0x12a0


0x44eb:	test	r12d, r12d
0x44ee:	jne	0x4520


0x44f0:	pop	rbx
0x44f1:	pop	rbp
0x44f2:	pop	r12
0x44f4:	ret	


0x4520:	mov	dword ptr [rbp], r12d
0x4524:	mov	eax, 0xffffffff
0x4529:	jmp	0x44f0


0x43aa:	and	ebx, 0x20
0x43ad:	test	ebx, ebx
0x43af:	jne	0x43c8


0x43b1:	test	eax, eax
0x43b3:	je	0x43bf


0x43c8:	test	eax, eax
0x43ca:	jne	0x43e8


0x43bf:	pop	rbx
0x43c0:	pop	rbp
0x43c1:	pop	r12
0x43c3:	ret	


0x43b5:	test	r12, r12
0x43b8:	mov	eax, 0xffffffff
0x43bd:	je	0x43f8


0x43cc:	call	0x1250


0x43e8:	pop	rbx
0x43e9:	mov	eax, 0xffffffff
0x43ee:	pop	rbp
0x43ef:	pop	r12
0x43f1:	ret	


0x43f8:	call	0x1250


0x43fd:	cmp	dword ptr [rax], 9
0x4400:	pop	rbx
0x4401:	pop	rbp
0x4402:	pop	r12
0x4404:	setne	al
0x4407:	movzx	eax, al
0x440a:	neg	eax
0x440c:	ret	


0x43d1:	mov	dword ptr [rax], 0
0x43d7:	mov	eax, 0xffffffff
0x43dc:	pop	rbx
0x43dd:	pop	rbp
0x43de:	pop	r12
0x43e0:	ret	


0x1c82:	test	eax, eax
0x1c84:	je	0x1c9c


0x1c9c:	mov	rdi, qword ptr [rip + 0x20541d]
0x1ca3:	call	0x4390


0x1c86:	call	0x1250


0x1c8b:	cmp	byte ptr [rip + 0x20543e], 0
0x1c92:	mov	rbx, rax
0x1c95:	je	0x1cb3


0x1cb3:	lea	rsi, [rip + 0x2f2b]
0x1cba:	xor	edi, edi
0x1cbc:	mov	edx, 5
0x1cc1:	call	0x12c0


0x1c97:	cmp	dword ptr [rax], 0x20
0x1c9a:	jne	0x1cb3


0x1cc6:	mov	rdi, qword ptr [rip + 0x20540b]
0x1ccd:	mov	rbp, rax
0x1cd0:	test	rdi, rdi
0x1cd3:	je	0x1cfd


0x1cfd:	mov	esi, dword ptr [rbx]
0x1cff:	lea	rdx, [rip + 0x2eef]
0x1d06:	mov	rcx, rax
0x1d09:	xor	edi, edi
0x1d0b:	xor	eax, eax
0x1d0d:	call	0x1410


0x1cd5:	call	0x3830


0x1d12:	jmp	0x1cf2


0x1cf2:	mov	edi, dword ptr [rip + 0x205320]
0x1cf8:	call	0x1270


0x1270:	jmp	qword ptr [rip + 0x205c4a]




0x1ca8:	test	eax, eax
0x1caa:	jne	0x1cf2


0x1cac:	add	rsp, 8
0x1cb0:	pop	rbx
0x1cb1:	pop	rbp
0x1cb2:	ret	


0x1555:	cmp	eax, -1
0x1558:	je	0x1634


0x1634:	mov	eax, dword ptr [rip + 0x205a56]
0x163a:	cmp	eax, ebp
0x163c:	je	0x1693


0x155e:	cmp	eax, 0x6c
0x1561:	je	0x1619


0x1693:	call	0x1250


0x163e:	test	r13, r13
0x1641:	jne	0x1665


0x1619:	cmp	qword ptr [rsp], 0
0x161e:	jne	0x175f


0x1567:	jg	0x15b0


0x1643:	test	r14, r14
0x1646:	jne	0x1665


0x1665:	cmp	dword ptr [rip + 0x205a25], ebp
0x166b:	jl	0x16c5


0x1624:	mov	rax, qword ptr [rip + 0x205a6d]
0x162b:	mov	qword ptr [rsp], rax
0x162f:	jmp	0x1532


0x175f:	lea	rsi, [rip + 0x3018]
0x1766:	mov	edx, 5
0x176b:	xor	edi, edi
0x176d:	call	0x12c0


0x1569:	cmp	eax, 0xffffff7e
0x156e:	je	0x15e8


0x15b0:	cmp	eax, 0x74
0x15b3:	je	0x15ef


0x1648:	test	r15, r15
0x164b:	sete	cl
0x164e:	cmp	qword ptr [rsp], 0
0x1653:	sete	dl
0x1656:	test	cl, dl
0x1658:	je	0x1665


0x16c5:	mov	rbx, qword ptr [rip + 0x205a14]
0x16cc:	lea	rsi, [rip + 0x34e5]
0x16d3:	mov	edx, 5
0x16d8:	xor	edi, edi
0x16da:	call	0x12c0


0x166d:	lea	rsi, [rip + 0x314b]
0x1674:	mov	edx, 5
0x1679:	xor	edi, edi
0x167b:	call	0x12c0


0x1532:	lea	rcx, [rip + 0x205607]
0x1539:	lea	rdx, [rip + 0x3206]
0x1540:	mov	r8, r12
0x1543:	mov	rsi, rbx
0x1546:	mov	edi, ebp
0x1548:	mov	dword ptr [rsp + 0x14], 0
0x1550:	call	0x1300


0x15e8:	xor	edi, edi
0x15ea:	call	0x18c0


0x1570:	cmp	eax, 0x63
0x1573:	je	0x15de


0x15ef:	test	r15, r15
0x15f2:	jne	0x1717


0x15b5:	cmp	eax, 0x75
0x15b8:	je	0x15c9


0x165a:	cmp	byte ptr [rsp + 0xf], 0
0x165f:	je	0x1783


0x15de:	mov	byte ptr [rsp + 0xf], 1
0x15e3:	jmp	0x1532


0x1575:	cmp	eax, 0xffffff7d
0x157a:	jne	0x15bf


0x15f8:	mov	r15, qword ptr [rip + 0x205a99]
0x15ff:	jmp	0x1532


0x1717:	lea	rsi, [rip + 0x3042]
0x171e:	mov	edx, 5
0x1723:	xor	edi, edi
0x1725:	call	0x12c0


0x15c9:	test	r13, r13
0x15cc:	jne	0x16f3


0x15ba:	cmp	eax, 0x72
0x15bd:	je	0x1604


0x1783:	cmp	eax, ebp
0x1785:	jge	0x1795


0x157c:	mov	rdi, qword ptr [rip + 0x205b05]
0x1583:	mov	rcx, qword ptr [rip + 0x205a86]
0x158a:	lea	r8, [rip + 0x3202]
0x1591:	lea	rdx, [rip + 0x3169]
0x1598:	lea	rsi, [rip + 0x30e5]
0x159f:	xor	r9d, r9d
0x15a2:	xor	eax, eax
0x15a4:	call	0x3f10


0x15bf:	mov	edi, 1
0x15c4:	call	0x18c0


0x15d2:	mov	r13, qword ptr [rip + 0x205abf]
0x15d9:	jmp	0x1532


0x16f3:	lea	rsi, [rip + 0x3075]
0x16fa:	mov	edx, 5
0x16ff:	xor	edi, edi
0x1701:	call	0x12c0


0x1604:	test	r14, r14
0x1607:	jne	0x173b


0x1787:	add	eax, 1
0x178a:	mov	dword ptr [rip + 0x205900], eax
0x1790:	jmp	0x1665


0x1795:	mov	edx, 5
0x179a:	lea	rsi, [rip + 0x33e7]
0x17a1:	jmp	0x1679


0x160d:	mov	r14, qword ptr [rip + 0x205a84]
0x1614:	jmp	0x1532


0x173b:	lea	rsi, [rip + 0x300f]
0x1742:	mov	edx, 5
0x1747:	xor	edi, edi
0x1749:	call	0x12c0


0x1679:	xor	edi, edi
0x167b:	call	0x12c0


0x15a9:	xor	edi, edi
0x15ab:	call	0x1440


0x1680:	xor	esi, esi
0x1682:	mov	rdx, rax
0x1685:	xor	edi, edi
0x1687:	xor	eax, eax
0x1689:	call	0x1410


0x168e:	jmp	0x15bf


0x174e:	xor	esi, esi
0x1750:	mov	rdx, rax
0x1753:	mov	edi, 1
0x1758:	xor	eax, eax
0x175a:	call	0x1410


0x1706:	xor	esi, esi
0x1708:	mov	rdx, rax
0x170b:	mov	edi, 1
0x1710:	xor	eax, eax
0x1712:	call	0x1410


0x172a:	xor	esi, esi
0x172c:	mov	rdx, rax
0x172f:	mov	edi, 1
0x1734:	xor	eax, eax
0x1736:	call	0x1410


0x16df:	mov	rcx, rbx
0x16e2:	mov	rdx, rax
0x16e5:	xor	esi, esi
0x16e7:	mov	edi, 1
0x16ec:	xor	eax, eax
0x16ee:	call	0x1410


0x1772:	xor	esi, esi
0x1774:	mov	rdx, rax
0x1777:	mov	edi, 1
0x177c:	xor	eax, eax
0x177e:	call	0x1410


0x1698:	lea	rsi, [rip + 0x3102]
0x169f:	mov	rbx, rax
0x16a2:	mov	edx, 5
0x16a7:	xor	edi, edi
0x16a9:	mov	dword ptr [rax], 0x5f
0x16af:	call	0x12c0


0x16b4:	mov	esi, dword ptr [rbx]
0x16b6:	mov	rdx, rax
0x16b9:	mov	edi, 1
0x16be:	xor	eax, eax
0x16c0:	call	0x1410


0x1cda:	mov	esi, dword ptr [rbx]
0x1cdc:	lea	rdx, [rip + 0x2f0e]
0x1ce3:	mov	rcx, rax
0x1ce6:	mov	r8, rbp
0x1ce9:	xor	edi, edi
0x1ceb:	xor	eax, eax
0x1ced:	call	0x1410


0x31dc:	add	rsp, 0x20
0x31e0:	mov	r11, qword ptr [rsp + 0x10]
0x31e5:	cmp	r11, rax
0x31e8:	ja	0x3251


0x31ea:	lea	rsi, [rax + 1]
0x31ee:	lea	rax, [rip + 0x203f0b]
0x31f5:	cmp	r12, rax
0x31f8:	mov	qword ptr [rbx], rsi
0x31fb:	je	0x320f


0x3251:	mov	eax, dword ptr [rsp + 0x18]
0x3255:	mov	dword ptr [r13], eax
0x3259:	add	rsp, 0x28
0x325d:	mov	rax, r12
0x3260:	pop	rbx
0x3261:	pop	rbp
0x3262:	pop	r12
0x3264:	pop	r13
0x3266:	pop	r14
0x3268:	pop	r15
0x326a:	ret	


0x320f:	mov	rdi, rsi
0x3212:	mov	qword ptr [rsp + 0x10], rsi
0x3217:	call	0x4070


0x31fd:	mov	rdi, r12
0x3200:	mov	qword ptr [rsp + 0x10], rsi
0x3205:	call	0x1230


0x320a:	mov	rsi, qword ptr [rsp + 0x10]
0x320f:	mov	rdi, rsi
0x3212:	mov	qword ptr [rsp + 0x10], rsi
0x3217:	call	0x4070


0x321c:	sub	rsp, 8
0x3220:	mov	qword ptr [rbx + 8], rax
0x3224:	mov	r8d, dword ptr [rbp]
0x3228:	push	qword ptr [rbp + 0x30]
0x322b:	push	qword ptr [rbp + 0x28]
0x322e:	mov	rcx, r14
0x3231:	push	r15
0x3233:	mov	r9d, dword ptr [rsp + 0x3c]
0x3238:	mov	rdi, rax
0x323b:	mov	rdx, qword ptr [rsp + 0x28]
0x3240:	mov	rsi, qword ptr [rsp + 0x30]
0x3245:	mov	r12, rax
0x3248:	call	0x1eb0


0x3962:	mov	rdi, qword ptr [rsp + 0x38]
0x3967:	xor	rdi, qword ptr fs:[0x28]
0x3970:	jne	0x397c


0x3972:	add	rsp, 0x48
0x3976:	ret	


0x397c:	call	0x12f0


0x36af:	mov	rcx, qword ptr [rsp + 0x38]
0x36b4:	xor	rcx, qword ptr fs:[0x28]
0x36bd:	jne	0x36c9


0x36bf:	add	rsp, 0x48
0x36c3:	ret	


0x36c9:	call	0x12f0


0x373b:	mov	rdx, qword ptr [rsp + 0x38]
0x3740:	xor	rdx, qword ptr fs:[0x28]
0x3749:	jne	0x3755


0x374b:	add	rsp, 0x48
0x374f:	ret	


0x3755:	call	0x12f0


0x38cf:	mov	rcx, qword ptr [rsp + 0x38]
0x38d4:	xor	rcx, qword ptr fs:[0x28]
0x38dd:	jne	0x38e9


0x38df:	add	rsp, 0x48
0x38e3:	ret	


0x38e9:	call	0x12f0


0x37fe:	mov	rsi, qword ptr [rsp + 0x38]
0x3803:	xor	rsi, qword ptr fs:[0x28]
0x380c:	jne	0x3813


0x380e:	add	rsp, 0x48
0x3812:	ret	


0x3813:	call	0x12f0


0x324d:	add	rsp, 0x20
0x3251:	mov	eax, dword ptr [rsp + 0x18]
0x3255:	mov	dword ptr [r13], eax
0x3259:	add	rsp, 0x28
0x325d:	mov	rax, r12
0x3260:	pop	rbx
0x3261:	pop	rbp
0x3262:	pop	r12
0x3264:	pop	r13
0x3266:	pop	r14
0x3268:	pop	r15
0x326a:	ret	


0x349c:	lea	rsi, [rax + 1]
0x34a0:	mov	qword ptr [rsp + 0x48], rax
0x34a5:	add	rsp, 0x20
0x34a9:	mov	rdi, rsi
0x34ac:	mov	qword ptr [rsp + 0x18], rsi
0x34b1:	call	0x4070


0x34b6:	mov	qword ptr [rsp + 0x10], rax
0x34bb:	sub	rsp, 8
0x34bf:	push	qword ptr [rbx + 0x30]
0x34c2:	push	qword ptr [rbx + 0x28]
0x34c5:	mov	r10, qword ptr [rsp + 0x38]
0x34ca:	mov	r9d, ebp
0x34cd:	mov	r8d, dword ptr [rbx]
0x34d0:	mov	rcx, r15
0x34d3:	mov	rdx, r14
0x34d6:	mov	rdi, rax
0x34d9:	push	r10
0x34db:	mov	rsi, qword ptr [rsp + 0x38]
0x34e0:	call	0x1eb0


0x34e5:	mov	eax, dword ptr [rsp + 0x2c]
0x34e9:	add	rsp, 0x20
0x34ed:	test	r12, r12
0x34f0:	mov	dword ptr [r13], eax
0x34f4:	je	0x34ff


0x34ff:	mov	rax, qword ptr [rsp + 0x10]
0x3504:	add	rsp, 0x38
0x3508:	pop	rbx
0x3509:	pop	rbp
0x350a:	pop	r12
0x350c:	pop	r13
0x350e:	pop	r14
0x3510:	pop	r15
0x3512:	ret	


0x34f6:	mov	r11, qword ptr [rsp + 0x28]
0x34fb:	mov	qword ptr [r12], r11
0x34ff:	mov	rax, qword ptr [rsp + 0x10]
0x3504:	add	rsp, 0x38
0x3508:	pop	rbx
0x3509:	pop	rbp
0x350a:	pop	r12
0x350c:	pop	r13
0x350e:	pop	r14
0x3510:	pop	r15
0x3512:	ret	


0x3411:	mov	dword ptr [rbp], r12d
0x3415:	add	rsp, 0x38
0x3419:	pop	rbx
0x341a:	pop	rbp
0x341b:	pop	r12
0x341d:	pop	r13
0x341f:	pop	r14
0x3421:	pop	r15
0x3423:	ret	


0x461d:	add	rbx, 1
0x4621:	cmp	rbp, rbx
0x4624:	jne	0x4610


0x4610:	mov	rdx, r15
0x4613:	mov	rsi, r14
0x4616:	mov	edi, r13d
0x4619:	call	qword ptr [r12 + rbx*8]






0x3ce0:	lea	rsi, [rip + 0x1591]
0x3ce7:	mov	edx, 5
0x3cec:	xor	edi, edi
0x3cee:	mov	r14, qword ptr [rbx + 0x18]
0x3cf2:	mov	r13, qword ptr [rbx + 0x10]
0x3cf6:	mov	r12, qword ptr [rbx + 8]
0x3cfa:	mov	rbx, qword ptr [rbx]
0x3cfd:	call	0x12c0


0x3b00:	mov	r9, qword ptr [rbx + 0x38]
0x3b04:	mov	rax, qword ptr [rbx + 0x10]
0x3b08:	lea	rsi, [rip + 0x1809]
0x3b0f:	mov	r8, qword ptr [rbx + 8]
0x3b13:	mov	edx, 5
0x3b18:	xor	edi, edi
0x3b1a:	mov	r13, qword ptr [rbx + 0x30]
0x3b1e:	mov	r12, qword ptr [rbx + 0x28]
0x3b22:	mov	qword ptr [rsp + 0x10], r9
0x3b27:	mov	r15, qword ptr [rbx + 0x20]
0x3b2b:	mov	r14, qword ptr [rbx + 0x18]
0x3b2f:	mov	qword ptr [rsp], rax
0x3b33:	mov	qword ptr [rsp + 8], r8
0x3b38:	mov	rbx, qword ptr [rbx]
0x3b3b:	call	0x12c0


0x3c08:	mov	rbx, qword ptr [rbx]
0x3c0b:	lea	rsi, [rip + 0x150d]
0x3c12:	mov	edx, 5
0x3c17:	xor	edi, edi
0x3c19:	call	0x12c0


0x3c48:	mov	r12, qword ptr [rbx + 8]
0x3c4c:	lea	rsi, [rip + 0x14dc]
0x3c53:	mov	rbx, qword ptr [rbx]
0x3c56:	mov	edx, 5
0x3c5b:	xor	edi, edi
0x3c5d:	call	0x12c0


0x3d68:	mov	r8, qword ptr [rbx + 8]
0x3d6c:	mov	r12, qword ptr [rbx + 0x28]
0x3d70:	lea	rsi, [rip + 0x1549]
0x3d77:	mov	r15, qword ptr [rbx + 0x20]
0x3d7b:	mov	r14, qword ptr [rbx + 0x18]
0x3d7f:	mov	edx, 5
0x3d84:	mov	r13, qword ptr [rbx + 0x10]
0x3d88:	xor	edi, edi
0x3d8a:	mov	rbx, qword ptr [rbx]
0x3d8d:	mov	qword ptr [rsp], r8
0x3d91:	call	0x12c0


0x3c90:	mov	r13, qword ptr [rbx + 0x10]
0x3c94:	mov	r12, qword ptr [rbx + 8]
0x3c98:	lea	rsi, [rip + 0x14a7]
0x3c9f:	mov	rbx, qword ptr [rbx]
0x3ca2:	mov	edx, 5
0x3ca7:	xor	edi, edi
0x3ca9:	call	0x12c0


0x3dd0:	mov	r9, qword ptr [rbx + 0x10]
0x3dd4:	mov	r13, qword ptr [rbx + 0x30]
0x3dd8:	lea	rsi, [rip + 0x1509]
0x3ddf:	mov	r12, qword ptr [rbx + 0x28]
0x3de3:	mov	r15, qword ptr [rbx + 0x20]
0x3de7:	mov	edx, 5
0x3dec:	mov	r14, qword ptr [rbx + 0x18]
0x3df0:	mov	r8, qword ptr [rbx + 8]
0x3df4:	xor	edi, edi
0x3df6:	mov	qword ptr [rsp + 8], r9
0x3dfb:	mov	rbx, qword ptr [rbx]
0x3dfe:	mov	qword ptr [rsp], r8
0x3e02:	call	0x12c0


0x3bb0:	mov	r10, qword ptr [rbx + 0x40]
0x3bb4:	mov	r9, qword ptr [rbx + 0x38]
0x3bb8:	lea	rsi, [rip + 0x1789]
0x3bbf:	mov	rax, qword ptr [rbx + 0x10]
0x3bc3:	mov	r8, qword ptr [rbx + 8]
0x3bc7:	mov	edx, 5
0x3bcc:	mov	r13, qword ptr [rbx + 0x30]
0x3bd0:	mov	r12, qword ptr [rbx + 0x28]
0x3bd4:	mov	r15, qword ptr [rbx + 0x20]
0x3bd8:	mov	r14, qword ptr [rbx + 0x18]
0x3bdc:	mov	rbx, qword ptr [rbx]
0x3bdf:	mov	qword ptr [rsp + 0x18], r10
0x3be4:	mov	qword ptr [rsp + 0x10], r9
0x3be9:	mov	qword ptr [rsp], rax
0x3bed:	mov	qword ptr [rsp + 8], r8
0x3bf2:	xor	edi, edi
0x3bf4:	call	0x12c0


0x3b76:	add	rsp, 0x28
0x3b7a:	pop	rbx
0x3b7b:	pop	rbp
0x3b7c:	pop	r12
0x3b7e:	pop	r13
0x3b80:	pop	r14
0x3b82:	pop	r15
0x3b84:	ret	


0x3d38:	mov	r15, qword ptr [rbx + 0x20]
0x3d3c:	lea	rsi, [rip + 0x1555]
0x3d43:	mov	edx, 5
0x3d48:	xor	edi, edi
0x3d4a:	mov	r14, qword ptr [rbx + 0x18]
0x3d4e:	mov	r13, qword ptr [rbx + 0x10]
0x3d52:	mov	r12, qword ptr [rbx + 8]
0x3d56:	mov	rbx, qword ptr [rbx]
0x3d59:	call	0x12c0


0x3d5e:	push	r15
0x3d60:	jmp	0x3d06


0x3d06:	push	r14
0x3d08:	mov	rdx, rax
0x3d0b:	mov	r9, r13
0x3d0e:	mov	r8, r12
0x3d11:	mov	rcx, rbx
0x3d14:	mov	rdi, rbp
0x3d17:	mov	esi, 1
0x3d1c:	xor	eax, eax
0x3d1e:	call	0x1460


0x3d23:	pop	rax
0x3d24:	pop	rdx
0x3d25:	add	rsp, 0x28
0x3d29:	pop	rbx
0x3d2a:	pop	rbp
0x3d2b:	pop	r12
0x3d2d:	pop	r13
0x3d2f:	pop	r14
0x3d31:	pop	r15
0x3d33:	ret	


0x3e07:	push	r13
0x3e09:	push	r12
0x3e0b:	push	r15
0x3e0d:	push	r14
0x3e0f:	mov	r9, qword ptr [rsp + 0x28]
0x3e14:	jmp	0x3da3


0x3da3:	mov	r8, qword ptr [rsp + 0x20]
0x3da8:	mov	rcx, rbx
0x3dab:	mov	rdx, rax
0x3dae:	mov	rdi, rbp
0x3db1:	mov	esi, 1
0x3db6:	xor	eax, eax
0x3db8:	call	0x1460


0x3dbd:	add	rsp, 0x20
0x3dc1:	add	rsp, 0x28
0x3dc5:	pop	rbx
0x3dc6:	pop	rbp
0x3dc7:	pop	r12
0x3dc9:	pop	r13
0x3dcb:	pop	r14
0x3dcd:	pop	r15
0x3dcf:	ret	


0x3cae:	add	rsp, 0x28
0x3cb2:	mov	r9, r13
0x3cb5:	mov	r8, r12
0x3cb8:	mov	rcx, rbx
0x3cbb:	mov	rdi, rbp
0x3cbe:	mov	rdx, rax
0x3cc1:	pop	rbx
0x3cc2:	pop	rbp
0x3cc3:	pop	r12
0x3cc5:	pop	r13
0x3cc7:	pop	r14
0x3cc9:	pop	r15
0x3ccb:	mov	esi, 1
0x3cd0:	xor	eax, eax
0x3cd2:	jmp	0x1460


0x3d96:	sub	rsp, 8
0x3d9a:	mov	r9, r13
0x3d9d:	push	r12
0x3d9f:	push	r15
0x3da1:	push	r14
0x3da3:	mov	r8, qword ptr [rsp + 0x20]
0x3da8:	mov	rcx, rbx
0x3dab:	mov	rdx, rax
0x3dae:	mov	rdi, rbp
0x3db1:	mov	esi, 1
0x3db6:	xor	eax, eax
0x3db8:	call	0x1460


0x3c62:	add	rsp, 0x28
0x3c66:	mov	r8, r12
0x3c69:	mov	rcx, rbx
0x3c6c:	mov	rdi, rbp
0x3c6f:	mov	rdx, rax
0x3c72:	mov	esi, 1
0x3c77:	pop	rbx
0x3c78:	pop	rbp
0x3c79:	pop	r12
0x3c7b:	pop	r13
0x3c7d:	pop	r14
0x3c7f:	pop	r15
0x3c81:	xor	eax, eax
0x3c83:	jmp	0x1460


0x3c1e:	add	rsp, 0x28
0x3c22:	mov	rcx, rbx
0x3c25:	mov	rdi, rbp
0x3c28:	pop	rbx
0x3c29:	pop	rbp
0x3c2a:	pop	r12
0x3c2c:	pop	r13
0x3c2e:	pop	r14
0x3c30:	pop	r15
0x3c32:	mov	rdx, rax
0x3c35:	mov	esi, 1
0x3c3a:	xor	eax, eax
0x3c3c:	jmp	0x1460


0x3b40:	sub	rsp, 8
0x3b44:	mov	r9, qword ptr [rsp + 0x18]
0x3b49:	mov	rdx, rax
0x3b4c:	mov	rcx, rbx
0x3b4f:	mov	esi, 1
0x3b54:	mov	rdi, rbp
0x3b57:	xor	eax, eax
0x3b59:	push	r9
0x3b5b:	push	r13
0x3b5d:	push	r12
0x3b5f:	push	r15
0x3b61:	push	r14
0x3b63:	mov	r9, qword ptr [rsp + 0x30]
0x3b68:	mov	r8, qword ptr [rsp + 0x38]
0x3b6d:	call	0x1460


0x3d02:	sub	rsp, 8
0x3d06:	push	r14
0x3d08:	mov	rdx, rax
0x3d0b:	mov	r9, r13
0x3d0e:	mov	r8, r12
0x3d11:	mov	rcx, rbx
0x3d14:	mov	rdi, rbp
0x3d17:	mov	esi, 1
0x3d1c:	xor	eax, eax
0x3d1e:	call	0x1460


0x2a50:	sub	rsp, 8
0x2a54:	mov	rcx, rbp
0x2a57:	mov	rsi, r13
0x2a5a:	push	qword ptr [rsp + 0x68]
0x2a5e:	push	qword ptr [rsp + 0x78]
0x2a62:	mov	rdi, r14
0x2a65:	push	0
0x2a67:	mov	r9d, dword ptr [rsp + 0x98]
0x2a6f:	mov	r8d, dword ptr [rsp + 0x28]
0x2a74:	mov	rdx, qword ptr [rsp + 0x30]
0x2a79:	and	r9d, 0xfffffffd
0x2a7d:	call	0x1eb0


0x2a82:	add	rsp, 0x20
0x2a86:	mov	r15, rax
0x2a89:	mov	rbx, qword ptr [rsp + 0xa8]
0x2a91:	xor	rbx, qword ptr fs:[0x28]
0x2a9a:	mov	rax, r15
0x2a9d:	jne	0x30a3


0x2aa3:	add	rsp, 0xb8
0x2aaa:	pop	rbx
0x2aab:	pop	rbp
0x2aac:	pop	r12
0x2aae:	pop	r13
0x2ab0:	pop	r14
0x2ab2:	pop	r15
0x2ab4:	ret	


0x30a3:	call	0x12f0


0x304d:	sub	rsp, 8
0x3051:	mov	r8d, 5
0x3057:	mov	rcx, r11
0x305a:	push	qword ptr [rsp + 0x68]
0x305e:	push	qword ptr [rsp + 0x78]
0x3062:	mov	rdi, r14
0x3065:	push	qword ptr [rsp + 0x38]
0x3069:	mov	r9d, dword ptr [rsp + 0x98]
0x3071:	mov	rdx, qword ptr [rsp + 0x30]
0x3076:	mov	rsi, qword ptr [rsp + 0x70]
0x307b:	call	0x1eb0


0x3080:	add	rsp, 0x20
0x3084:	mov	r15, rax
0x3087:	jmp	0x2a89


0x2a89:	mov	rbx, qword ptr [rsp + 0xa8]
0x2a91:	xor	rbx, qword ptr fs:[0x28]
0x2a9a:	mov	rax, r15
0x2a9d:	jne	0x30a3


0x1220:	push	qword ptr [rip + 0x205c6a]
0x1226:	jmp	qword ptr [rip + 0x205c6c]


0x122c:	nop	dword ptr [rax]


0x1236:	push	0
0x123b:	jmp	0x1220


0x1246:	push	1
0x124b:	jmp	0x1220


0x1256:	push	2
0x125b:	jmp	0x1220


0x1266:	push	3
0x126b:	jmp	0x1220


0x1276:	push	4
0x127b:	jmp	0x1220


0x1286:	push	5
0x128b:	jmp	0x1220


0x1296:	push	6
0x129b:	jmp	0x1220


0x12a6:	push	7
0x12ab:	jmp	0x1220


0x12b6:	push	8
0x12bb:	jmp	0x1220


0x12c6:	push	9
0x12cb:	jmp	0x1220


0x12d6:	push	0xa
0x12db:	jmp	0x1220


0x12e6:	push	0xb
0x12eb:	jmp	0x1220


0x12f6:	push	0xc
0x12fb:	jmp	0x1220


0x1306:	push	0xd
0x130b:	jmp	0x1220


0x1316:	push	0xe
0x131b:	jmp	0x1220


0x1326:	push	0xf
0x132b:	jmp	0x1220


0x1336:	push	0x10
0x133b:	jmp	0x1220


0x1346:	push	0x11
0x134b:	jmp	0x1220


0x1350:	jmp	qword ptr [rip + 0x205bda]




0x1356:	push	0x12
0x135b:	jmp	0x1220


0x1366:	push	0x13
0x136b:	jmp	0x1220


0x1376:	push	0x14
0x137b:	jmp	0x1220


0x1386:	push	0x15
0x138b:	jmp	0x1220


0x1396:	push	0x16
0x139b:	jmp	0x1220


0x13a6:	push	0x17
0x13ab:	jmp	0x1220


0x13b6:	push	0x18
0x13bb:	jmp	0x1220


0x13c6:	push	0x19
0x13cb:	jmp	0x1220


0x13d6:	push	0x1a
0x13db:	jmp	0x1220


0x13e6:	push	0x1b
0x13eb:	jmp	0x1220


0x13f6:	push	0x1c
0x13fb:	jmp	0x1220


0x1406:	push	0x1d
0x140b:	jmp	0x1220


0x1416:	push	0x1e
0x141b:	jmp	0x1220


0x1426:	push	0x1f
0x142b:	jmp	0x1220


0x1436:	push	0x20
0x143b:	jmp	0x1220


0x1446:	push	0x21
0x144b:	jmp	0x1220


0x1456:	push	0x22
0x145b:	jmp	0x1220


0x1466:	push	0x23
0x146b:	jmp	0x1220


0x1470:	jmp	qword ptr [rip + 0x205b4a]




0x1476:	push	0x24
0x147b:	jmp	0x1220


0x1480:	jmp	qword ptr [rip + 0x205b42]




0x1486:	push	0x25
0x148b:	jmp	0x1220


0x1490:	jmp	qword ptr [rip + 0x205b3a]




0x1496:	push	0x26
0x149b:	jmp	0x1220


0x17a6:	nop	word ptr cs:[rax + rax]


0x17da:	hlt	


0x17db:	nop	dword ptr [rax + rax]


0x1812:	nop	dword ptr [rax]
0x1816:	nop	word ptr cs:[rax + rax]


0x1862:	nop	dword ptr [rax]
0x1866:	nop	word ptr cs:[rax + rax]


0x18aa:	nop	word ptr [rax + rax]


0x18ba:	nop	word ptr [rax + rax]


0x1c4a:	nop	word ptr [rax + rax]


0x1c58:	nop	dword ptr [rax + rax]


0x1c68:	nop	dword ptr [rax + rax]


0x1d14:	nop	word ptr cs:[rax + rax]
0x1d1e:	nop	


0x1dbf:	nop	


0x1ea7:	nop	word ptr [rax + rax]


0x1f43:	mov	byte ptr [rsp + 0xe], 1
0x1f48:	mov	byte ptr [rsp + 0x7c], 0
0x1f4d:	xor	r12d, r12d
0x1f50:	mov	qword ptr [rsp + 0x50], 0
0x1f59:	mov	byte ptr [rsp + 0xf], 1
0x1f5e:	mov	byte ptr [rsp + 0xd], 0
0x1f63:	lea	rax, [rip + 0x2ce3]
0x1f6a:	mov	qword ptr [rsp + 0x18], 1
0x1f73:	xor	r15d, r15d
0x1f76:	mov	dword ptr [rsp + 8], 2
0x1f7e:	mov	qword ptr [rsp + 0x48], rax
0x1f83:	xor	r11d, r11d
0x1f86:	mov	rax, rbp
0x1f89:	mov	r8d, r12d
0x1f8c:	mov	rbp, r11
0x1f8f:	mov	r11, rax
0x1f92:	nop	word ptr [rax + rax]
0x1f98:	cmp	r11, rbp
0x1f9b:	setne	r12b
0x1f9f:	cmp	r11, -1
0x1fa3:	jne	0x1fb2


0x1fa5:	mov	rax, qword ptr [rsp + 0x10]
0x1faa:	cmp	byte ptr [rax + rbp], 0
0x1fae:	setne	r12b
0x1fb2:	test	r12b, r12b
0x1fb5:	je	0x2610


0x1fb2:	test	r12b, r12b
0x1fb5:	je	0x2610


0x2610:	cmp	dword ptr [rsp + 8], 2
0x2615:	movzx	ebx, byte ptr [rsp + 0xf]
0x261a:	mov	r12d, r8d
0x261d:	mov	rbp, r11
0x2620:	sete	dl
0x2623:	mov	eax, ebx
0x2625:	test	r15, r15
0x2628:	sete	cl
0x262b:	and	eax, edx
0x262d:	and	al, cl
0x262f:	jne	0x3096


0x1fbb:	cmp	dword ptr [rsp + 8], 2
0x1fc0:	mov	rdi, qword ptr [rsp + 0x10]
0x1fc5:	lea	r9, [rdi + rbp]
0x1fc9:	setne	al
0x1fcc:	and	al, byte ptr [rsp + 0xd]
0x1fd0:	mov	r10d, eax
0x1fd3:	je	0x2080


0x2635:	mov	eax, ebx
0x2637:	xor	eax, 1
0x263a:	and	dl, al
0x263c:	je	0x2fac


0x3096:	mov	dword ptr [rsp + 8], 2
0x309e:	jmp	0x2a39


0x2080:	movzx	ebx, byte ptr [r9]
0x2084:	cmp	bl, 0x7e
0x2087:	ja	0x23a8


0x1fd9:	mov	rax, qword ptr [rsp + 0x18]
0x1fde:	test	rax, rax
0x1fe1:	je	0x2410


0x2fac:	mov	rbx, qword ptr [rsp + 0x48]
0x2fb1:	test	rbx, rbx
0x2fb4:	je	0x2fe2


0x2642:	cmp	byte ptr [rsp + 0x7c], 0
0x2647:	je	0x2faa


0x2a39:	cmp	byte ptr [rsp + 0xd], 0
0x2a3e:	je	0x2a50


0x208d:	lea	rcx, [rip + 0x2c38]
0x2094:	movzx	edx, bl
0x2097:	movsxd	rax, dword ptr [rcx + rdx*4]
0x209b:	add	rax, rcx
0x209e:	jmp	rax


0x23a8:	cmp	qword ptr [rsp + 0x58], 1
0x23ae:	jne	0x2758


0x2410:	movzx	ebx, byte ptr [r9]
0x2414:	cmp	bl, 0x7e
0x2417:	ja	0x23a0


0x1fe7:	cmp	r11, -1
0x1feb:	lea	rbx, [rbp + rax]
0x1ff0:	jne	0x2020


0x2fe2:	cmp	r13, r15
0x2fe5:	jbe	0x2a89


0x2fb6:	test	al, al
0x2fb8:	je	0x2fe2


0x2faa:	mov	eax, edx
0x2fac:	mov	rbx, qword ptr [rsp + 0x48]
0x2fb1:	test	rbx, rbx
0x2fb4:	je	0x2fe2


0x264d:	cmp	byte ptr [rsp + 0xe], 0
0x2652:	jne	0x304d


0x2a40:	test	al, al
0x2a42:	mov	eax, 4
0x2a47:	cmove	eax, dword ptr [rsp + 8]
0x2a4c:	mov	dword ptr [rsp + 8], eax


0x23b4:	mov	qword ptr [rsp + 0x38], r11
0x23b9:	mov	byte ptr [rsp + 0x30], r8b
0x23be:	mov	byte ptr [rsp + 0x28], r10b
0x23c3:	call	0x1490


0x2758:	lea	rax, [rsp + 0xa0]
0x2760:	cmp	r11, -1
0x2764:	mov	qword ptr [rsp + 0xa0], 0
0x2770:	mov	qword ptr [rsp + 0x28], rax
0x2775:	jne	0x27a4


0x2419:	lea	rcx, [rip + 0x2aa8]
0x2420:	movzx	edx, bl
0x2423:	movsxd	rax, dword ptr [rcx + rdx*4]
0x2427:	add	rax, rcx
0x242a:	jmp	rax


0x23a0:	xor	r10d, r10d
0x23a3:	nop	dword ptr [rax + rax]
0x23a8:	cmp	qword ptr [rsp + 0x58], 1
0x23ae:	jne	0x2758


0x1ff2:	cmp	rax, 1
0x1ff6:	jbe	0x2020


0x2020:	cmp	rbx, r11
0x2023:	mov	byte ptr [rsp + 0x28], r10b
0x2028:	ja	0x25e0


0x2feb:	mov	byte ptr [r14 + r15], 0
0x2ff0:	jmp	0x2a89


0x2fba:	movzx	ecx, byte ptr [rbx]
0x2fbd:	mov	rax, rbx
0x2fc0:	test	cl, cl
0x2fc2:	je	0x2fe2


0x2658:	test	r13, r13
0x265b:	sete	al
0x265e:	cmp	qword ptr [rsp + 0x50], 0
0x2664:	setne	dl
0x2667:	and	al, dl
0x2669:	je	0x308c


0x2777:	mov	rdi, qword ptr [rsp + 0x10]
0x277c:	mov	byte ptr [rsp + 0x40], r8b
0x2781:	mov	byte ptr [rsp + 0x38], r10b
0x2786:	mov	qword ptr [rsp + 0x30], r9
0x278b:	call	0x12e0


0x27a4:	lea	rax, [rsp + 0x9c]
0x27ac:	xor	ecx, ecx
0x27ae:	mov	byte ptr [rsp + 0x7e], bl
0x27b2:	mov	byte ptr [rsp + 0x7d], r8b
0x27b7:	mov	rbx, rcx
0x27ba:	mov	qword ptr [rsp + 0x88], r9
0x27c2:	mov	qword ptr [rsp + 0x38], rax
0x27c7:	mov	byte ptr [rsp + 0x7f], r10b
0x27cc:	mov	qword ptr [rsp + 0x80], r15
0x27d4:	mov	qword ptr [rsp + 0x40], r14
0x27d9:	mov	qword ptr [rsp + 0x70], r13
0x27de:	mov	qword ptr [rsp + 0x30], r11
0x27e3:	mov	rax, qword ptr [rsp + 0x10]
0x27e8:	lea	r14, [rbp + rbx]
0x27ed:	mov	rdx, qword ptr [rsp + 0x30]
0x27f2:	mov	rcx, qword ptr [rsp + 0x28]
0x27f7:	mov	rdi, qword ptr [rsp + 0x38]
0x27fc:	lea	r13, [rax + r14]
0x2800:	sub	rdx, r14
0x2803:	mov	rsi, r13
0x2806:	call	0x4300


0x1ff8:	mov	byte ptr [rsp + 0x38], r8b
0x1ffd:	mov	byte ptr [rsp + 0x30], r10b
0x2002:	mov	qword ptr [rsp + 0x28], r9
0x2007:	call	0x12e0


0x202e:	mov	rdx, qword ptr [rsp + 0x18]
0x2033:	mov	rsi, qword ptr [rsp + 0x48]
0x2038:	mov	rdi, r9
0x203b:	mov	qword ptr [rsp + 0x40], r11
0x2040:	mov	byte ptr [rsp + 0x38], r8b
0x2045:	mov	qword ptr [rsp + 0x30], r9
0x204a:	call	0x1350


0x25e0:	xor	r10d, r10d
0x25e3:	jmp	0x2080


0x2fc4:	mov	rdx, r15
0x2fc7:	sub	rax, r15
0x2fca:	cmp	r13, rdx
0x2fcd:	jbe	0x2fd3


0x308c:	movzx	eax, byte ptr [rsp + 0x7c]
0x3091:	jmp	0x2fac


0x266f:	mov	r13, qword ptr [rsp + 0x50]
0x2674:	lea	rbx, [rip + 0x25d2]
0x267b:	mov	byte ptr [r14], 0x27
0x267f:	mov	dword ptr [rsp + 8], 2
0x2687:	mov	r15d, 1
0x268d:	mov	qword ptr [rsp + 0x18], 1
0x2696:	mov	byte ptr [rsp + 0xf], 0
0x269b:	mov	qword ptr [rsp + 0x48], rbx
0x26a0:	mov	byte ptr [rsp + 0x7c], al
0x26a4:	jmp	0x1f83


0x2fd3:	add	rdx, 1
0x2fd7:	movzx	ecx, byte ptr [rax + rdx]
0x2fdb:	test	cl, cl
0x2fdd:	jne	0x2fca


0x2fcf:	mov	byte ptr [r14 + rdx], cl
0x2fd3:	add	rdx, 1
0x2fd7:	movzx	ecx, byte ptr [rax + rdx]
0x2fdb:	test	cl, cl
0x2fdd:	jne	0x2fca


0x1f83:	xor	r11d, r11d
0x1f86:	mov	rax, rbp
0x1f89:	mov	r8d, r12d
0x1f8c:	mov	rbp, r11
0x1f8f:	mov	r11, rax
0x1f92:	nop	word ptr [rax + rax]
0x1f98:	cmp	r11, rbp
0x1f9b:	setne	r12b
0x1f9f:	cmp	r11, -1
0x1fa3:	jne	0x1fb2


0x2fdf:	mov	r15, rdx
0x2fe2:	cmp	r13, r15
0x2fe5:	jbe	0x2a89


0x2fca:	cmp	r13, rdx
0x2fcd:	jbe	0x2fd3


0x204f:	test	eax, eax
0x2051:	mov	r9, qword ptr [rsp + 0x30]
0x2056:	movzx	r8d, byte ptr [rsp + 0x38]
0x205c:	mov	r11, qword ptr [rsp + 0x40]
0x2061:	jne	0x25e0


0x2067:	cmp	byte ptr [rsp + 0xf], 0
0x206c:	movzx	r10d, byte ptr [rsp + 0x28]
0x2072:	jne	0x2ff5


0x2ff5:	cmp	dword ptr [rsp + 8], 2
0x2ffa:	movzx	ebx, byte ptr [rsp + 0xf]
0x2fff:	mov	rbp, r11
0x3002:	sete	al
0x3005:	mov	byte ptr [rsp + 0xd], bl
0x3009:	jmp	0x2a39


0x280b:	test	rax, rax
0x280e:	mov	r15, rax
0x2811:	je	0x2861


0x2861:	mov	edx, r12d
0x2864:	mov	rdi, rbx
0x2867:	movzx	r8d, byte ptr [rsp + 0x7d]
0x286d:	xor	edx, 1
0x2870:	movzx	ebx, byte ptr [rsp + 0x7e]
0x2875:	movzx	r10d, byte ptr [rsp + 0x7f]
0x287b:	and	dl, byte ptr [rsp + 0xd]
0x287f:	mov	r15, qword ptr [rsp + 0x80]
0x2887:	mov	r14, qword ptr [rsp + 0x40]
0x288c:	mov	r13, qword ptr [rsp + 0x70]
0x2891:	mov	r11, qword ptr [rsp + 0x30]
0x2896:	cmp	rdi, 1
0x289a:	jbe	0x2e9b


0x2813:	cmp	rax, -1
0x2817:	je	0x2e35


0x2e9b:	mov	eax, edx
0x2e9d:	jmp	0x23f7


0x28a0:	mov	rcx, rdi
0x28a3:	xor	esi, esi
0x28a5:	movzx	r9d, byte ptr [rsp + 0xf]
0x28ab:	add	rcx, rbp
0x28ae:	mov	rdi, qword ptr [rsp + 0x10]
0x28b3:	jmp	0x296e


0x2e35:	mov	rdi, rbx
0x2e38:	movzx	r8d, byte ptr [rsp + 0x7d]
0x2e3e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x2e43:	movzx	r10d, byte ptr [rsp + 0x7f]
0x2e49:	mov	r15, qword ptr [rsp + 0x80]
0x2e51:	xor	r12d, r12d
0x2e54:	mov	r14, qword ptr [rsp + 0x40]
0x2e59:	mov	r13, qword ptr [rsp + 0x70]
0x2e5e:	mov	r11, qword ptr [rsp + 0x30]
0x2e63:	movzx	edx, byte ptr [rsp + 0xd]
0x2e68:	jmp	0x2896


0x281d:	cmp	rax, -2
0x2821:	je	0x2dc1


0x23f7:	test	al, al
0x23f9:	jne	0x2d91


0x296e:	test	dl, dl
0x2970:	jne	0x28c0


0x2896:	cmp	rdi, 1
0x289a:	jbe	0x2e9b


0x2dc1:	mov	r11, qword ptr [rsp + 0x30]
0x2dc6:	mov	rsi, r14
0x2dc9:	mov	rcx, r13
0x2dcc:	mov	rax, rbx
0x2dcf:	mov	rdi, rbx
0x2dd2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x2dd8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x2ddd:	mov	r9, qword ptr [rsp + 0x88]
0x2de5:	cmp	rsi, r11
0x2de8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x2dee:	mov	r15, qword ptr [rsp + 0x80]
0x2df6:	mov	r14, qword ptr [rsp + 0x40]
0x2dfb:	mov	r13, qword ptr [rsp + 0x70]
0x2e00:	jae	0x2e28


0x2827:	cmp	dword ptr [rsp + 8], 2
0x282c:	sete	al
0x282f:	and	al, byte ptr [rsp + 0xf]
0x2833:	jne	0x29d0


0x23ff:	cmp	dword ptr [rsp + 8], 2
0x2404:	sete	dl
0x2407:	jmp	0x20d8


0x2d91:	movzx	edx, byte ptr [rsp + 0xd]
0x2d96:	xor	r12d, r12d
0x2d99:	jmp	0x28a0


0x2976:	mov	eax, esi
0x2978:	xor	eax, 1
0x297b:	and	eax, r8d
0x297e:	test	r10b, r10b
0x2981:	je	0x2991


0x28c0:	cmp	dword ptr [rsp + 8], 2
0x28c5:	sete	al
0x28c8:	test	r9b, r9b
0x28cb:	jne	0x2d80


0x2e02:	cmp	byte ptr [rcx], 0
0x2e05:	jne	0x2e17


0x2e28:	movzx	edx, byte ptr [rsp + 0xd]
0x2e2d:	xor	r12d, r12d
0x2e30:	jmp	0x2896


0x2839:	mov	edi, dword ptr [rsp + 0x9c]
0x2840:	call	0x1480


0x29d0:	cmp	r15, 1
0x29d4:	je	0x2839


0x20d8:	cmp	byte ptr [rsp + 0xd], 1
0x20dd:	jne	0x21f2


0x2991:	add	rbp, 1
0x2995:	cmp	rbp, rcx
0x2998:	jae	0x211c


0x2983:	cmp	r13, r15
0x2986:	jbe	0x298d


0x28d1:	mov	esi, r8d
0x28d4:	xor	esi, 1
0x28d7:	and	al, sil
0x28da:	je	0x290b


0x2d80:	movzx	ebx, byte ptr [rsp + 0xf]
0x2d85:	mov	rbp, r11
0x2d88:	mov	byte ptr [rsp + 0xd], bl
0x2d8c:	jmp	0x2a39


0x2e07:	jmp	0x2e28


0x2e17:	add	rax, 1
0x2e1b:	lea	rdx, [rbp + rax]
0x2e20:	cmp	r11, rdx
0x2e23:	ja	0x2e10


0x29da:	mov	rdi, qword ptr [rsp + 0x10]
0x29df:	lea	rcx, [rdi + r15]
0x29e3:	lea	rdx, [rdi + r14 + 1]
0x29e8:	lea	r8, [rcx + r14]
0x29ec:	jmp	0x29fd


0x20e3:	test	dl, dl
0x20e5:	jne	0x21f2


0x21f2:	cmp	byte ptr [rsp + 0xf], 0
0x21f7:	jne	0x20eb


0x299e:	test	al, al
0x29a0:	je	0x2d9e


0x211c:	test	al, al
0x211e:	je	0x2140


0x298d:	add	r15, 1
0x2991:	add	rbp, 1
0x2995:	cmp	rbp, rcx
0x2998:	jae	0x211c


0x2988:	mov	byte ptr [r14 + r15], 0x5c
0x298d:	add	r15, 1
0x2991:	add	rbp, 1
0x2995:	cmp	rbp, rcx
0x2998:	jae	0x211c


0x290b:	cmp	r13, r15
0x290e:	jbe	0x2915


0x28dc:	cmp	r13, r15
0x28df:	jbe	0x28e6


0x2e25:	mov	rdi, rax
0x2e28:	movzx	edx, byte ptr [rsp + 0xd]
0x2e2d:	xor	r12d, r12d
0x2e30:	jmp	0x2896


0x2e10:	cmp	byte ptr [r9 + rax], 0
0x2e15:	je	0x2e25


0x29fd:	movzx	ecx, byte ptr [rdx]
0x2a00:	sub	ecx, 0x5b
0x2a03:	cmp	cl, 0x21
0x2a06:	ja	0x29f0


0x20eb:	mov	rsi, qword ptr [rsp + 0x20]
0x20f0:	test	rsi, rsi
0x20f3:	je	0x2109


0x21fd:	jmp	0x2109


0x2d9e:	xor	r10d, r10d
0x2da1:	jmp	0x295d


0x29a6:	cmp	r13, r15
0x29a9:	jbe	0x29b0


0x2140:	cmp	r15, r13
0x2143:	jae	0x2149


0x2120:	cmp	r13, r15
0x2123:	jbe	0x212a


0x2915:	lea	rax, [r15 + 1]
0x2919:	cmp	r13, rax
0x291c:	jbe	0x292b


0x2910:	mov	byte ptr [r14 + r15], 0x5c
0x2915:	lea	rax, [r15 + 1]
0x2919:	cmp	r13, rax
0x291c:	jbe	0x292b


0x28e6:	lea	rsi, [r15 + 1]
0x28ea:	cmp	r13, rsi
0x28ed:	jbe	0x28f5


0x28e1:	mov	byte ptr [r14 + r15], 0x27
0x28e6:	lea	rsi, [r15 + 1]
0x28ea:	cmp	r13, rsi
0x28ed:	jbe	0x28f5


0x2a08:	mov	esi, 1
0x2a0d:	shl	rsi, cl
0x2a10:	mov	rcx, rsi
0x2a13:	movabs	rsi, 0x20000002b
0x2a1d:	test	rcx, rsi
0x2a20:	je	0x29f0


0x29f0:	add	rdx, 1
0x29f4:	cmp	r8, rdx
0x29f7:	je	0x2839


0x2109:	test	r10b, r10b
0x210c:	jne	0x2253


0x20f5:	mov	edx, ebx
0x20f7:	shr	dl, 5
0x20fa:	movzx	edx, dl
0x20fd:	mov	edx, dword ptr [rsi + rdx*4]
0x2100:	bt	edx, ebx
0x2103:	jb	0x2253


0x295d:	cmp	r13, r15
0x2960:	jbe	0x2966


0x29b0:	lea	rax, [r15 + 1]
0x29b4:	cmp	r13, rax
0x29b7:	jbe	0x29bf


0x29ab:	mov	byte ptr [r14 + r15], 0x27
0x29b0:	lea	rax, [r15 + 1]
0x29b4:	cmp	r13, rax
0x29b7:	jbe	0x29bf


0x2145:	mov	byte ptr [r14 + r15], bl
0x2149:	movzx	edi, byte ptr [rsp + 0xe]
0x214e:	add	r15, 1
0x2152:	mov	eax, 0
0x2157:	test	r12b, r12b
0x215a:	cmove	edi, eax
0x215d:	mov	byte ptr [rsp + 0xe], dil
0x2162:	jmp	0x1f98


0x2149:	movzx	edi, byte ptr [rsp + 0xe]
0x214e:	add	r15, 1
0x2152:	mov	eax, 0
0x2157:	test	r12b, r12b
0x215a:	cmove	edi, eax
0x215d:	mov	byte ptr [rsp + 0xe], dil
0x2162:	jmp	0x1f98


0x212a:	lea	rax, [r15 + 1]
0x212e:	cmp	r13, rax
0x2131:	jbe	0x2139


0x2125:	mov	byte ptr [r14 + r15], 0x27
0x212a:	lea	rax, [r15 + 1]
0x212e:	cmp	r13, rax
0x2131:	jbe	0x2139


0x292b:	lea	rax, [r15 + 2]
0x292f:	cmp	r13, rax
0x2932:	jbe	0x2944


0x291e:	mov	eax, ebx
0x2920:	shr	al, 6
0x2923:	add	eax, 0x30
0x2926:	mov	byte ptr [r14 + r15 + 1], al
0x292b:	lea	rax, [r15 + 2]
0x292f:	cmp	r13, rax
0x2932:	jbe	0x2944


0x28f5:	lea	rsi, [r15 + 2]
0x28f9:	cmp	r13, rsi
0x28fc:	jbe	0x2904


0x28ef:	mov	byte ptr [r14 + r15 + 1], 0x24
0x28f5:	lea	rsi, [r15 + 2]
0x28f9:	cmp	r13, rsi
0x28fc:	jbe	0x2904


0x2a22:	mov	r14, qword ptr [rsp + 0x40]
0x2a27:	mov	r13, qword ptr [rsp + 0x70]
0x2a2c:	mov	rbp, qword ptr [rsp + 0x30]
0x2a31:	mov	dword ptr [rsp + 8], 2
0x2a39:	cmp	byte ptr [rsp + 0xd], 0
0x2a3e:	je	0x2a50


0x2112:	xor	eax, 1
0x2115:	add	rbp, 1
0x2119:	and	eax, r8d
0x211c:	test	al, al
0x211e:	je	0x2140


0x2253:	cmp	dword ptr [rsp + 8], 2
0x2258:	sete	dl
0x225b:	cmp	byte ptr [rsp + 0xf], 0
0x2260:	mov	eax, edx
0x2262:	jne	0x2ab8


0x2966:	movzx	ebx, byte ptr [rdi + rbp]
0x296a:	add	r15, 1
0x296e:	test	dl, dl
0x2970:	jne	0x28c0


0x2962:	mov	byte ptr [r14 + r15], bl
0x2966:	movzx	ebx, byte ptr [rdi + rbp]
0x296a:	add	r15, 1
0x296e:	test	dl, dl
0x2970:	jne	0x28c0


0x29bf:	add	r15, 2
0x29c3:	xor	r10d, r10d
0x29c6:	xor	r8d, r8d
0x29c9:	jmp	0x295d


0x29b9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x29bf:	add	r15, 2
0x29c3:	xor	r10d, r10d
0x29c6:	xor	r8d, r8d
0x29c9:	jmp	0x295d


0x1f98:	cmp	r11, rbp
0x1f9b:	setne	r12b
0x1f9f:	cmp	r11, -1
0x1fa3:	jne	0x1fb2


0x2139:	add	r15, 2
0x213d:	xor	r8d, r8d
0x2140:	cmp	r15, r13
0x2143:	jae	0x2149


0x2133:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2139:	add	r15, 2
0x213d:	xor	r8d, r8d
0x2140:	cmp	r15, r13
0x2143:	jae	0x2149


0x2944:	and	ebx, 7
0x2947:	add	rbp, 1
0x294b:	add	r15, 3
0x294f:	add	ebx, 0x30
0x2952:	cmp	rbp, rcx
0x2955:	jae	0x2140


0x2934:	mov	eax, ebx
0x2936:	shr	al, 3
0x2939:	and	eax, 7
0x293c:	add	eax, 0x30
0x293f:	mov	byte ptr [r14 + r15 + 2], al
0x2944:	and	ebx, 7
0x2947:	add	rbp, 1
0x294b:	add	r15, 3
0x294f:	add	ebx, 0x30
0x2952:	cmp	rbp, rcx
0x2955:	jae	0x2140


0x2904:	add	r15, 3
0x2908:	mov	r8d, eax
0x290b:	cmp	r13, r15
0x290e:	jbe	0x2915


0x28fe:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2904:	add	r15, 3
0x2908:	mov	r8d, eax
0x290b:	cmp	r13, r15
0x290e:	jbe	0x2915


0x2268:	mov	eax, r8d
0x226b:	xor	eax, 1
0x226e:	and	al, dl
0x2270:	je	0x22a1


0x2ab8:	mov	rbp, r11
0x2abb:	jmp	0x2a39


0x295b:	mov	esi, edx
0x295d:	cmp	r13, r15
0x2960:	jbe	0x2966


0x22a1:	cmp	r13, r15
0x22a4:	jbe	0x22ab


0x2272:	cmp	r13, r15
0x2275:	jbe	0x227c


0x22ab:	add	r15, 1
0x22af:	add	rbp, 1
0x22b3:	jmp	0x2140


0x22a6:	mov	byte ptr [r14 + r15], 0x5c
0x22ab:	add	r15, 1
0x22af:	add	rbp, 1
0x22b3:	jmp	0x2140


0x227c:	lea	rdx, [r15 + 1]
0x2280:	cmp	r13, rdx
0x2283:	jbe	0x228b


0x2277:	mov	byte ptr [r14 + r15], 0x27
0x227c:	lea	rdx, [r15 + 1]
0x2280:	cmp	r13, rdx
0x2283:	jbe	0x228b


0x228b:	lea	rdx, [r15 + 2]
0x228f:	cmp	r13, rdx
0x2292:	jbe	0x229a


0x2285:	mov	byte ptr [r14 + r15 + 1], 0x24
0x228b:	lea	rdx, [r15 + 2]
0x228f:	cmp	r13, rdx
0x2292:	jbe	0x229a


0x229a:	add	r15, 3
0x229e:	mov	r8d, eax
0x22a1:	cmp	r13, r15
0x22a4:	jbe	0x22ab


0x2294:	mov	byte ptr [r14 + r15 + 2], 0x27
0x229a:	add	r15, 3
0x229e:	mov	r8d, eax
0x22a1:	cmp	r13, r15
0x22a4:	jbe	0x22ab


0x2845:	mov	rdi, qword ptr [rsp + 0x28]
0x284a:	test	eax, eax
0x284c:	mov	eax, 0
0x2851:	cmove	r12d, eax
0x2855:	add	rbx, r15
0x2858:	call	0x1470


0x285d:	test	eax, eax
0x285f:	je	0x27e3


0x27e3:	mov	rax, qword ptr [rsp + 0x10]
0x27e8:	lea	r14, [rbp + rbx]
0x27ed:	mov	rdx, qword ptr [rsp + 0x30]
0x27f2:	mov	rcx, qword ptr [rsp + 0x28]
0x27f7:	mov	rdi, qword ptr [rsp + 0x38]
0x27fc:	lea	r13, [rax + r14]
0x2800:	sub	rdx, r14
0x2803:	mov	rsi, r13
0x2806:	call	0x4300


0x200c:	movzx	r8d, byte ptr [rsp + 0x38]
0x2012:	movzx	r10d, byte ptr [rsp + 0x30]
0x2018:	mov	r11, rax
0x201b:	mov	r9, qword ptr [rsp + 0x28]
0x2020:	cmp	rbx, r11
0x2023:	mov	byte ptr [rsp + 0x28], r10b
0x2028:	ja	0x25e0


0x2790:	movzx	r8d, byte ptr [rsp + 0x40]
0x2796:	movzx	r10d, byte ptr [rsp + 0x38]
0x279c:	mov	r11, rax
0x279f:	mov	r9, qword ptr [rsp + 0x30]
0x27a4:	lea	rax, [rsp + 0x9c]
0x27ac:	xor	ecx, ecx
0x27ae:	mov	byte ptr [rsp + 0x7e], bl
0x27b2:	mov	byte ptr [rsp + 0x7d], r8b
0x27b7:	mov	rbx, rcx
0x27ba:	mov	qword ptr [rsp + 0x88], r9
0x27c2:	mov	qword ptr [rsp + 0x38], rax
0x27c7:	mov	byte ptr [rsp + 0x7f], r10b
0x27cc:	mov	qword ptr [rsp + 0x80], r15
0x27d4:	mov	qword ptr [rsp + 0x40], r14
0x27d9:	mov	qword ptr [rsp + 0x70], r13
0x27de:	mov	qword ptr [rsp + 0x30], r11
0x27e3:	mov	rax, qword ptr [rsp + 0x10]
0x27e8:	lea	r14, [rbp + rbx]
0x27ed:	mov	rdx, qword ptr [rsp + 0x30]
0x27f2:	mov	rcx, qword ptr [rsp + 0x28]
0x27f7:	mov	rdi, qword ptr [rsp + 0x38]
0x27fc:	lea	r13, [rax + r14]
0x2800:	sub	rdx, r14
0x2803:	mov	rsi, r13
0x2806:	call	0x4300


0x23c8:	mov	rcx, qword ptr [rax]
0x23cb:	movzx	edx, bl
0x23ce:	movzx	r10d, byte ptr [rsp + 0x28]
0x23d4:	movzx	r8d, byte ptr [rsp + 0x30]
0x23da:	mov	r11, qword ptr [rsp + 0x38]
0x23df:	mov	edi, 1
0x23e4:	movzx	eax, word ptr [rcx + rdx*2]
0x23e8:	and	ax, 0x4000
0x23ec:	setne	r12b
0x23f0:	sete	al
0x23f3:	and	al, byte ptr [rsp + 0xd]
0x23f7:	test	al, al
0x23f9:	jne	0x2d91


0x20a0:	xor	r10d, r10d
0x20a3:	cmp	r11, 1
0x20a7:	setne	al
0x20aa:	cmp	r11, -1
0x20ae:	jne	0x20bc


0x20b0:	mov	rax, qword ptr [rsp + 0x10]
0x20b5:	cmp	byte ptr [rax + 1], 0
0x20b9:	setne	al
0x20bc:	cmp	dword ptr [rsp + 8], 2
0x20c1:	sete	dl
0x20c4:	test	al, al
0x20c6:	je	0x2318


0x20bc:	cmp	dword ptr [rsp + 8], 2
0x20c1:	sete	dl
0x20c4:	test	al, al
0x20c6:	je	0x2318


0x2318:	test	rbp, rbp
0x231b:	jne	0x20cc


0x20cc:	xor	r12d, r12d
0x20cf:	xor	eax, eax
0x20d1:	nop	dword ptr [rax]
0x20d8:	cmp	byte ptr [rsp + 0xd], 1
0x20dd:	jne	0x21f2


0x2321:	movzx	eax, byte ptr [rsp + 0xf]
0x2326:	and	al, dl
0x2328:	je	0x20d8


0x232e:	mov	rbp, r11
0x2331:	mov	dword ptr [rsp + 8], 2
0x2339:	jmp	0x2a39


0x2738:	cmp	byte ptr [rsp + 0xf], 0
0x273d:	jne	0x2f60


0x2180:	cmp	eax, 5
0x2183:	je	0x26f8


0x2743:	xor	r12d, r12d
0x2746:	xor	eax, eax
0x2748:	mov	ebx, 0x3f
0x274d:	jmp	0x2109


0x2f60:	mov	rbp, r11
0x2f63:	movzx	eax, byte ptr [rsp + 0xf]
0x2f68:	jmp	0x2a39


0x26f8:	test	byte ptr [rsp + 0x78], 4
0x26fd:	je	0x2720


0x2189:	cmp	eax, 2
0x218c:	mov	ebx, 0x3f
0x2191:	sete	dl
0x2194:	xor	r12d, r12d
0x2197:	xor	eax, eax
0x2199:	jmp	0x20d8


0x2720:	xor	edx, edx
0x2722:	xor	r12d, r12d
0x2725:	xor	eax, eax
0x2727:	mov	ebx, 0x3f
0x272c:	jmp	0x20d8


0x26ff:	lea	rcx, [rbp + 2]
0x2703:	cmp	rcx, r11
0x2706:	jae	0x2720


0x2708:	mov	rax, qword ptr [rsp + 0x10]
0x270d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x2712:	je	0x2ea2


0x2ea2:	movzx	ebx, byte ptr [rax + rcx]
0x2ea6:	cmp	bl, 0x3e
0x2ea9:	ja	0x2720


0x2eaf:	movabs	rax, 0x7000a38200000000
0x2eb9:	bt	rax, rbx
0x2ebd:	jae	0x2720


0x2ec3:	cmp	byte ptr [rsp + 0xf], 0
0x2ec8:	jne	0x30b2


0x2ece:	cmp	r13, r15
0x2ed1:	jbe	0x2ed8


0x30b2:	mov	rbp, r11
0x30b5:	jmp	0x2a50


0x2ed8:	lea	rax, [r15 + 1]
0x2edc:	cmp	r13, rax
0x2edf:	jbe	0x2ee7


0x2ed3:	mov	byte ptr [r14 + r15], 0x3f
0x2ed8:	lea	rax, [r15 + 1]
0x2edc:	cmp	r13, rax
0x2edf:	jbe	0x2ee7


0x2ee7:	lea	rax, [r15 + 2]
0x2eeb:	cmp	r13, rax
0x2eee:	jbe	0x2ef6


0x2ee1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x2ee7:	lea	rax, [r15 + 2]
0x2eeb:	cmp	r13, rax
0x2eee:	jbe	0x2ef6


0x2ef6:	lea	rax, [r15 + 3]
0x2efa:	cmp	r13, rax
0x2efd:	jbe	0x2f05


0x2ef0:	mov	byte ptr [r14 + r15 + 2], 0x22
0x2ef6:	lea	rax, [r15 + 3]
0x2efa:	cmp	r13, rax
0x2efd:	jbe	0x2f05


0x2f05:	add	r15, 4
0x2f09:	xor	edx, edx
0x2f0b:	xor	r12d, r12d
0x2f0e:	xor	eax, eax
0x2f10:	mov	rbp, rcx
0x2f13:	jmp	0x20d8


0x2eff:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x2f05:	add	r15, 4
0x2f09:	xor	edx, edx
0x2f0b:	xor	r12d, r12d
0x2f0e:	xor	eax, eax
0x2f10:	mov	rbp, rcx
0x2f13:	jmp	0x20d8


0x26b0:	cmp	byte ptr [rsp + 0xf], 0
0x26b5:	jne	0x2f60


0x21ae:	mov	byte ptr [rsp + 0x7c], r12b
0x21b3:	xor	edx, edx
0x21b5:	xor	eax, eax
0x21b7:	mov	ebx, 0x27
0x21bc:	jmp	0x20d8


0x26bb:	test	r13, r13
0x26be:	je	0x2ac0


0x2ac0:	cmp	r13, r15
0x2ac3:	jbe	0x2aca


0x26c4:	xor	edx, edx
0x26c6:	cmp	qword ptr [rsp + 0x50], 0
0x26cc:	jne	0x2ac0


0x2aca:	lea	rax, [r15 + 1]
0x2ace:	cmp	r13, rax
0x2ad1:	jbe	0x2ad9


0x2ac5:	mov	byte ptr [r14 + r15], 0x27
0x2aca:	lea	rax, [r15 + 1]
0x2ace:	cmp	r13, rax
0x2ad1:	jbe	0x2ad9


0x26d2:	mov	qword ptr [rsp + 0x50], r13
0x26d7:	add	r15, 3
0x26db:	xor	eax, eax
0x26dd:	mov	byte ptr [rsp + 0x7c], r12b
0x26e2:	xor	r8d, r8d
0x26e5:	mov	r13, rdx
0x26e8:	mov	ebx, 0x27
0x26ed:	jmp	0x2109


0x2ad9:	lea	rax, [r15 + 2]
0x2add:	cmp	r13, rax
0x2ae0:	jbe	0x30d2


0x2ad3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x2ad9:	lea	rax, [r15 + 2]
0x2add:	cmp	r13, rax
0x2ae0:	jbe	0x30d2


0x30d2:	mov	rdx, r13
0x30d5:	mov	r13, qword ptr [rsp + 0x50]
0x30da:	jmp	0x26d2


0x2ae6:	mov	rdx, r13
0x2ae9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2aef:	mov	r13, qword ptr [rsp + 0x50]
0x2af4:	jmp	0x26d2


0x21e4:	cmp	byte ptr [rsp + 0xd], 0
0x21e9:	jne	0x2250


0x21eb:	mov	ebx, edx
0x21ed:	xor	r12d, r12d
0x21f0:	xor	eax, eax
0x21f2:	cmp	byte ptr [rsp + 0xf], 0
0x21f7:	jne	0x20eb


0x2250:	xor	r12d, r12d
0x2253:	cmp	dword ptr [rsp + 8], 2
0x2258:	sete	dl
0x225b:	cmp	byte ptr [rsp + 0xf], 0
0x2260:	mov	eax, edx
0x2262:	jne	0x2ab8


0x25f0:	cmp	byte ptr [rsp + 0xf], 0
0x25f5:	jne	0x2f60


0x2223:	cmp	byte ptr [rsp + 0xd], 0
0x2228:	je	0x2440


0x25fb:	add	rbp, 1
0x25ff:	mov	eax, r8d
0x2602:	xor	r12d, r12d
0x2605:	mov	ebx, 0x5c
0x260a:	jmp	0x211c


0x2440:	mov	edx, 0x5c
0x2445:	mov	ebx, 0x5c
0x244a:	jmp	0x21e4


0x222e:	cmp	byte ptr [rsp + 0xf], 0
0x2233:	je	0x2440


0x2239:	cmp	qword ptr [rsp + 0x18], 0
0x223f:	jne	0x25fb


0x2245:	mov	ebx, 0x5c
0x224a:	nop	word ptr [rax + rax]
0x2250:	xor	r12d, r12d
0x2253:	cmp	dword ptr [rsp + 8], 2
0x2258:	sete	dl
0x225b:	cmp	byte ptr [rsp + 0xf], 0
0x2260:	mov	eax, edx
0x2262:	jne	0x2ab8


0x22cb:	xor	edx, edx
0x22cd:	test	byte ptr [rsp + 0x78], 1
0x22d2:	je	0x21eb


0x2493:	cmp	dword ptr [rsp + 8], 2
0x2498:	sete	dl
0x249b:	cmp	byte ptr [rsp + 0xf], 0
0x24a0:	jne	0x303a


0x22d8:	add	rbp, 1
0x22dc:	jmp	0x1f98


0x24a6:	mov	eax, r8d
0x24a9:	mov	rcx, r15
0x24ac:	xor	eax, 1
0x24af:	and	al, dl
0x24b1:	je	0x24e0


0x303a:	movzx	ebx, byte ptr [rsp + 0xf]
0x303f:	mov	rbp, r11
0x3042:	mov	eax, edx
0x3044:	mov	byte ptr [rsp + 0xd], bl
0x3048:	jmp	0x2a39


0x24e0:	cmp	r13, rcx
0x24e3:	jbe	0x24ea


0x24b3:	cmp	r13, r15
0x24b6:	jbe	0x24bd


0x24ea:	cmp	dword ptr [rsp + 8], 2
0x24ef:	lea	r15, [rcx + 1]
0x24f3:	je	0x2af9


0x24e5:	mov	byte ptr [r14 + rcx], 0x5c
0x24ea:	cmp	dword ptr [rsp + 8], 2
0x24ef:	lea	r15, [rcx + 1]
0x24f3:	je	0x2af9


0x24bd:	lea	rcx, [r15 + 1]
0x24c1:	cmp	r13, rcx
0x24c4:	jbe	0x24cc


0x24b8:	mov	byte ptr [r14 + r15], 0x27
0x24bd:	lea	rcx, [r15 + 1]
0x24c1:	cmp	r13, rcx
0x24c4:	jbe	0x24cc


0x2af9:	mov	eax, r12d
0x2afc:	mov	ebx, 0x30
0x2b01:	xor	r12d, r12d
0x2b04:	jmp	0x2109


0x24f9:	lea	rax, [rbp + 1]
0x24fd:	cmp	rax, r11
0x2500:	jae	0x251b


0x24cc:	lea	rcx, [r15 + 2]
0x24d0:	cmp	r13, rcx
0x24d3:	ja	0x2b09


0x24c6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x24cc:	lea	rcx, [r15 + 2]
0x24d0:	cmp	r13, rcx
0x24d3:	ja	0x2b09


0x2502:	mov	rax, qword ptr [rsp + 0x10]
0x2507:	movzx	eax, byte ptr [rax + rbp + 1]
0x250c:	mov	byte ptr [rsp + 0x28], al
0x2510:	sub	eax, 0x30
0x2513:	cmp	al, 9
0x2515:	jbe	0x2d49


0x251b:	mov	eax, r12d
0x251e:	mov	ebx, 0x30
0x2523:	xor	r12d, r12d
0x2526:	jmp	0x20d8


0x24d9:	lea	rcx, [r15 + 3]
0x24dd:	mov	r8d, eax
0x24e0:	cmp	r13, rcx
0x24e3:	jbe	0x24ea


0x2b09:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2b0f:	jmp	0x24d9


0x2d49:	cmp	r13, r15
0x2d4c:	jbe	0x2d53


0x2d53:	lea	rax, [rcx + 2]
0x2d57:	cmp	r13, rax
0x2d5a:	jbe	0x2d62


0x2d4e:	mov	byte ptr [r14 + r15], 0x30
0x2d53:	lea	rax, [rcx + 2]
0x2d57:	cmp	r13, rax
0x2d5a:	jbe	0x2d62


0x2d62:	mov	eax, r12d
0x2d65:	lea	r15, [rcx + 3]
0x2d69:	xor	r12d, r12d
0x2d6c:	mov	ebx, 0x30
0x2d71:	jmp	0x20d8


0x2d5c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x2d62:	mov	eax, r12d
0x2d65:	lea	r15, [rcx + 3]
0x2d69:	xor	r12d, r12d
0x2d6c:	mov	ebx, 0x30
0x2d71:	jmp	0x20d8


0x21d2:	cmp	dword ptr [rsp + 8], 2
0x21d7:	sete	al
0x21da:	and	al, byte ptr [rsp + 0xf]
0x21de:	jne	0x232e


0x2590:	mov	edx, 0xd
0x2595:	xor	r10d, r10d
0x2598:	mov	ebx, 0x72
0x259d:	jmp	0x21d2


0x2b14:	test	ebx, ebx
0x2b16:	jne	0x1f43


0x2b1c:	mov	byte ptr [rsp + 0xd], 1
0x2b21:	test	r13, r13
0x2b24:	jne	0x30ba


0x2b2a:	lea	rax, [rip + 0x211c]
0x2b31:	mov	qword ptr [rsp + 0x50], 0
0x2b3a:	mov	byte ptr [rsp + 0xe], 1
0x2b3f:	mov	byte ptr [rsp + 0x7c], 0
0x2b44:	xor	r12d, r12d
0x2b47:	mov	byte ptr [rsp + 0xf], 0
0x2b4c:	mov	qword ptr [rsp + 0x18], 1
0x2b55:	mov	qword ptr [rsp + 0x48], rax
0x2b5a:	mov	r15d, 1
0x2b60:	mov	dword ptr [rsp + 8], 2
0x2b68:	jmp	0x1f83


0x30ba:	mov	byte ptr [rsp + 0xe], 1
0x30bf:	xor	eax, eax
0x30c1:	xor	r12d, r12d
0x30c4:	mov	qword ptr [rsp + 0x50], 0
0x30cd:	jmp	0x2674


0x2674:	lea	rbx, [rip + 0x25d2]
0x267b:	mov	byte ptr [r14], 0x27
0x267f:	mov	dword ptr [rsp + 8], 2
0x2687:	mov	r15d, 1
0x268d:	mov	qword ptr [rsp + 0x18], 1
0x2696:	mov	byte ptr [rsp + 0xf], 0
0x269b:	mov	qword ptr [rsp + 0x48], rbx
0x26a0:	mov	byte ptr [rsp + 0x7c], al
0x26a4:	jmp	0x1f83


0x2b78:	test	r13, r13
0x2b7b:	je	0x2da6


0x2f6d:	lea	rax, [rip + 0x1cd7]
0x2f74:	mov	byte ptr [rsp + 0xe], 1
0x2f79:	mov	byte ptr [rsp + 0x7c], 0
0x2f7e:	xor	r12d, r12d
0x2f81:	mov	qword ptr [rsp + 0x50], 0
0x2f8a:	mov	byte ptr [rsp + 0xf], 1
0x2f8f:	mov	byte ptr [rsp + 0xd], 1
0x2f94:	mov	qword ptr [rsp + 0x18], 1
0x2f9d:	xor	r15d, r15d
0x2fa0:	mov	qword ptr [rsp + 0x48], rax
0x2fa5:	jmp	0x1f83


0x2da6:	mov	qword ptr [rsp + 0x50], 0
0x2daf:	mov	byte ptr [rsp + 0xe], 1
0x2db4:	xor	r12d, r12d
0x2db7:	mov	byte ptr [rsp + 0x7c], 0
0x2dbc:	jmp	0x2b9b


0x2b81:	mov	byte ptr [r14], 0x22
0x2b85:	mov	byte ptr [rsp + 0xe], 1
0x2b8a:	xor	r12d, r12d
0x2b8d:	mov	byte ptr [rsp + 0x7c], 0
0x2b92:	mov	qword ptr [rsp + 0x50], 0
0x2b9b:	lea	rax, [rip + 0x20a9]
0x2ba2:	mov	byte ptr [rsp + 0xf], 0
0x2ba7:	mov	byte ptr [rsp + 0xd], 1
0x2bac:	mov	qword ptr [rsp + 0x18], 1
0x2bb5:	mov	r15d, 1
0x2bbb:	mov	qword ptr [rsp + 0x48], rax
0x2bc0:	jmp	0x1f83


0x2b9b:	lea	rax, [rip + 0x20a9]
0x2ba2:	mov	byte ptr [rsp + 0xf], 0
0x2ba7:	mov	byte ptr [rsp + 0xd], 1
0x2bac:	mov	qword ptr [rsp + 0x18], 1
0x2bb5:	mov	r15d, 1
0x2bbb:	mov	qword ptr [rsp + 0x48], rax
0x2bc0:	jmp	0x1f83


0x2bc5:	lea	rax, [rip + 0x207f]
0x2bcc:	mov	byte ptr [rsp + 0xe], 1
0x2bd1:	mov	byte ptr [rsp + 0x7c], 0
0x2bd6:	xor	r12d, r12d
0x2bd9:	mov	qword ptr [rsp + 0x50], 0
0x2be2:	mov	byte ptr [rsp + 0xf], 1
0x2be7:	mov	byte ptr [rsp + 0xd], 1
0x2bec:	mov	qword ptr [rsp + 0x18], 1
0x2bf5:	xor	r15d, r15d
0x2bf8:	mov	qword ptr [rsp + 0x48], rax
0x2bfd:	mov	dword ptr [rsp + 8], 5
0x2c05:	jmp	0x1f83


0x2c0a:	mov	byte ptr [rsp + 0xe], 1
0x2c0f:	mov	byte ptr [rsp + 0x7c], 0
0x2c14:	xor	r12d, r12d
0x2c17:	mov	qword ptr [rsp + 0x50], 0
0x2c20:	mov	byte ptr [rsp + 0xf], 0
0x2c25:	xor	r15d, r15d
0x2c28:	mov	byte ptr [rsp + 0xd], 1
0x2c2d:	mov	qword ptr [rsp + 0x18], 0
0x2c36:	mov	qword ptr [rsp + 0x48], 0
0x2c3f:	jmp	0x1f83


0x2c44:	cmp	dword ptr [rsp + 8], 0xa
0x2c49:	je	0x2ca1


0x2ca1:	xor	r15d, r15d
0x2ca4:	test	ebx, ebx
0x2ca6:	je	0x2e6d


0x2c4b:	lea	rsi, [rip + 0x1ffd]
0x2c52:	xor	edi, edi
0x2c54:	mov	edx, 5
0x2c59:	call	0x12c0


0x2e6d:	mov	rdx, qword ptr [rsp + 0x68]
0x2e72:	movzx	eax, byte ptr [rdx]
0x2e75:	test	al, al
0x2e77:	je	0x2cac


0x2cac:	test	ebx, ebx
0x2cae:	mov	rbx, qword ptr [rsp + 0x60]
0x2cb3:	setne	byte ptr [rsp + 0xf]
0x2cb8:	xor	r12d, r12d
0x2cbb:	mov	rdi, rbx
0x2cbe:	call	0x12e0


0x2e89:	add	r15, 1
0x2e8d:	movzx	eax, byte ptr [rdx + r15]
0x2e92:	test	al, al
0x2e94:	jne	0x2e80


0x2e85:	mov	byte ptr [r14 + r15], al
0x2e89:	add	r15, 1
0x2e8d:	movzx	eax, byte ptr [rdx + r15]
0x2e92:	test	al, al
0x2e94:	jne	0x2e80


0x2e96:	jmp	0x2cac


0x2e80:	cmp	r13, r15
0x2e83:	jbe	0x2e89


0x2cc3:	mov	qword ptr [rsp + 0x48], rbx
0x2cc8:	mov	qword ptr [rsp + 0x18], rax
0x2ccd:	mov	byte ptr [rsp + 0xe], 1
0x2cd2:	mov	byte ptr [rsp + 0x7c], 0
0x2cd7:	mov	qword ptr [rsp + 0x50], 0
0x2ce0:	mov	byte ptr [rsp + 0xd], 1
0x2ce5:	jmp	0x1f83


0x2c5e:	mov	rcx, rax
0x2c61:	mov	qword ptr [rsp + 0x68], rax
0x2c66:	lea	rax, [rip + 0x1fe2]
0x2c6d:	cmp	rcx, rax
0x2c70:	je	0x300e


0x300e:	mov	esi, dword ptr [rsp + 8]
0x3012:	mov	rdi, rcx
0x3015:	call	0x1dc0


0x2c76:	lea	rsi, [rip + 0x1fd0]
0x2c7d:	xor	edi, edi
0x2c7f:	mov	edx, 5
0x2c84:	call	0x12c0


0x2c89:	mov	rcx, rax
0x2c8c:	mov	qword ptr [rsp + 0x60], rax
0x2c91:	lea	rax, [rip + 0x1fb5]
0x2c98:	cmp	rcx, rax
0x2c9b:	je	0x3024


0x3024:	mov	esi, dword ptr [rsp + 8]
0x3028:	mov	rdi, rcx
0x302b:	call	0x1dc0


0x3030:	mov	qword ptr [rsp + 0x60], rax
0x3035:	jmp	0x2ca1


0x301a:	mov	qword ptr [rsp + 0x68], rax
0x301f:	jmp	0x2c76


0x2cea:	mov	byte ptr [rsp + 0xe], 1
0x2cef:	mov	byte ptr [rsp + 0x7c], 0
0x2cf4:	xor	r12d, r12d
0x2cf7:	mov	qword ptr [rsp + 0x50], 0
0x2d00:	mov	byte ptr [rsp + 0xf], 0
0x2d05:	xor	r15d, r15d
0x2d08:	mov	byte ptr [rsp + 0xd], 0
0x2d0d:	mov	qword ptr [rsp + 0x18], 0
0x2d16:	mov	qword ptr [rsp + 0x48], 0
0x2d1f:	jmp	0x1f83


0x2d24:	mov	byte ptr [rsp + 0xe], 1
0x2d29:	mov	byte ptr [rsp + 0x7c], 0
0x2d2e:	xor	r12d, r12d
0x2d31:	mov	qword ptr [rsp + 0x50], 0
0x2d3a:	mov	byte ptr [rsp + 0xf], 1
0x2d3f:	mov	byte ptr [rsp + 0xd], 1
0x2d44:	jmp	0x1f63


0x1f63:	lea	rax, [rip + 0x2ce3]
0x1f6a:	mov	qword ptr [rsp + 0x18], 1
0x1f73:	xor	r15d, r15d
0x1f76:	mov	dword ptr [rsp + 8], 2
0x1f7e:	mov	qword ptr [rsp + 0x48], rax
0x1f83:	xor	r11d, r11d
0x1f86:	mov	rax, rbp
0x1f89:	mov	r8d, r12d
0x1f8c:	mov	rbp, r11
0x1f8f:	mov	r11, rax
0x1f92:	nop	word ptr [rax + rax]
0x1f98:	cmp	r11, rbp
0x1f9b:	setne	r12b
0x1f9f:	cmp	r11, -1
0x1fa3:	jne	0x1fb2


0x2f18:	test	ebx, ebx
0x2f1a:	je	0x30a8


0x30a8:	mov	byte ptr [rsp + 0xd], 0
0x30ad:	jmp	0x2b21


0x2f20:	lea	rax, [rip + 0x1d26]
0x2f27:	mov	byte ptr [rsp + 0xe], 1
0x2f2c:	mov	byte ptr [rsp + 0x7c], 0
0x2f31:	xor	r12d, r12d
0x2f34:	mov	qword ptr [rsp + 0x50], 0
0x2f3d:	mov	byte ptr [rsp + 0xf], 1
0x2f42:	mov	byte ptr [rsp + 0xd], 0
0x2f47:	mov	qword ptr [rsp + 0x18], 1
0x2f50:	xor	r15d, r15d
0x2f53:	mov	qword ptr [rsp + 0x48], rax
0x2f58:	jmp	0x1f83


0x2b21:	test	r13, r13
0x2b24:	jne	0x30ba


0x30e4:	nop	
0x30e6:	nop	word ptr cs:[rax + rax]


0x329b:	nop	dword ptr [rax + rax]


0x32d6:	nop	word ptr cs:[rax + rax]


0x32f1:	nop	dword ptr [rax + rax]
0x32f6:	nop	word ptr cs:[rax + rax]


0x3311:	nop	dword ptr [rax + rax]
0x3316:	nop	word ptr cs:[rax + rax]


0x3355:	nop	
0x3356:	nop	word ptr cs:[rax + rax]


0x3375:	nop	
0x3376:	nop	word ptr cs:[rax + rax]


0x3424:	nop	
0x3426:	nop	word ptr cs:[rax + rax]


0x3513:	nop	dword ptr [rax]
0x3516:	nop	word ptr cs:[rax + rax]


0x352a:	nop	word ptr [rax + rax]


0x35c3:	nop	dword ptr [rax]
0x35c6:	nop	word ptr cs:[rax + rax]


0x35e3:	nop	dword ptr [rax]
0x35e6:	nop	word ptr cs:[rax + rax]


0x35fc:	nop	dword ptr [rax]


0x3618:	nop	dword ptr [rax + rax]


0x3634:	nop	
0x3636:	nop	word ptr cs:[rax + rax]


0x36ce:	nop	


0x375a:	nop	word ptr [rax + rax]


0x376c:	nop	dword ptr [rax]


0x377f:	nop	


0x3818:	nop	dword ptr [rax + rax]


0x3841:	nop	dword ptr [rax + rax]
0x3846:	nop	word ptr cs:[rax + rax]


0x385a:	nop	word ptr [rax + rax]


0x38ee:	nop	


0x3981:	nop	dword ptr [rax + rax]
0x3986:	nop	word ptr cs:[rax + rax]


0x399c:	nop	dword ptr [rax]


0x39b7:	nop	word ptr [rax + rax]


0x39d3:	nop	dword ptr [rax]
0x39d6:	nop	word ptr cs:[rax + rax]


0x39ec:	nop	dword ptr [rax]


0x3a04:	nop	
0x3a06:	nop	word ptr cs:[rax + rax]


0x3a23:	nop	dword ptr [rax]
0x3a26:	nop	word ptr cs:[rax + rax]


0x3a48:	nop	dword ptr [rax + rax]


0x3e67:	nop	word ptr [rax + rax]


0x3f08:	nop	dword ptr [rax + rax]


0x3fe5:	nop	
0x3fe6:	nop	word ptr cs:[rax + rax]


0x408a:	nop	word ptr [rax + rax]


0x40b4:	nop	
0x40b6:	nop	word ptr cs:[rax + rax]


0x40c2:	nop	dword ptr [rax]
0x40c6:	nop	word ptr cs:[rax + rax]


0x4106:	nop	word ptr cs:[rax + rax]


0x4134:	nop	
0x4136:	nop	word ptr cs:[rax + rax]


0x41c2:	nop	dword ptr [rax]
0x41c6:	nop	word ptr cs:[rax + rax]


0x421a:	nop	word ptr [rax + rax]


0x4237:	nop	word ptr [rax + rax]


0x426e:	nop	


0x4298:	nop	dword ptr [rax + rax]


0x42b3:	nop	word ptr cs:[rax + rax]
0x42bd:	nop	dword ptr [rax]


0x42f5:	nop	word ptr cs:[rax + rax]
0x42ff:	nop	


0x4383:	nop	word ptr cs:[rax + rax]
0x438d:	nop	dword ptr [rax]


0x440d:	nop	dword ptr [rax]


0x44ac:	nop	dword ptr [rax]


0x452b:	nop	dword ptr [rax + rax]


0x45c7:	nop	word ptr [rax + rax]


0x4635:	nop	
0x4636:	nop	word ptr cs:[rax + rax]


0x4642:	nop	word ptr cs:[rax + rax]
0x464c:	nop	dword ptr [rax]


0x2170:	xor	r10d, r10d
0x2173:	mov	eax, dword ptr [rsp + 8]
0x2177:	cmp	eax, 2
0x217a:	je	0x2738


0x21a0:	xor	r10d, r10d
0x21a3:	cmp	dword ptr [rsp + 8], 2
0x21a8:	je	0x26b0


0x21c8:	mov	edx, 9
0x21cd:	mov	ebx, 0x74
0x21d2:	cmp	dword ptr [rsp + 8], 2
0x21d7:	sete	al
0x21da:	and	al, byte ptr [rsp + 0xf]
0x21de:	jne	0x232e


0x2208:	mov	edx, 8
0x220d:	mov	ebx, 0x62
0x2212:	jmp	0x21e4


0x2218:	cmp	dword ptr [rsp + 8], 2
0x221d:	je	0x25f0


0x22c0:	cmp	byte ptr [rsp + 0xd], 0
0x22c5:	jne	0x2493


0x22e8:	cmp	dword ptr [rsp + 8], 2
0x22ed:	sete	dl
0x22f0:	xor	eax, eax
0x22f2:	jmp	0x20d8


0x2300:	mov	edx, 7
0x2305:	mov	ebx, 0x61
0x230a:	jmp	0x21e4


0x2310:	cmp	dword ptr [rsp + 8], 2
0x2315:	sete	dl
0x2318:	test	rbp, rbp
0x231b:	jne	0x20cc


0x2340:	cmp	dword ptr [rsp + 8], 2
0x2345:	sete	dl
0x2348:	xor	r12d, r12d
0x234b:	jmp	0x2321


0x2350:	cmp	dword ptr [rsp + 8], 2
0x2355:	mov	ebx, 0x20
0x235a:	sete	dl
0x235d:	jmp	0x2321


0x2360:	mov	edx, 0xd
0x2365:	mov	ebx, 0x72
0x236a:	jmp	0x21d2


0x2370:	mov	edx, 0xc
0x2375:	mov	ebx, 0x66
0x237a:	jmp	0x21e4


0x2380:	mov	edx, 0xb
0x2385:	mov	ebx, 0x76
0x238a:	jmp	0x21e4


0x2390:	mov	edx, 0xa
0x2395:	mov	ebx, 0x6e
0x239a:	jmp	0x21d2


0x2430:	xor	r10d, r10d
0x2433:	cmp	byte ptr [rsp + 0xd], 0
0x2438:	jne	0x222e


0x2450:	mov	edx, 0xc
0x2455:	xor	r10d, r10d
0x2458:	mov	ebx, 0x66
0x245d:	jmp	0x21e4


0x2468:	mov	edx, 0xa
0x246d:	xor	r10d, r10d
0x2470:	mov	ebx, 0x6e
0x2475:	jmp	0x21d2


0x2480:	mov	ebx, 0x61
0x2485:	jmp	0x2250


0x2490:	xor	r10d, r10d
0x2493:	cmp	dword ptr [rsp + 8], 2
0x2498:	sete	dl
0x249b:	cmp	byte ptr [rsp + 0xf], 0
0x24a0:	jne	0x303a


0x2530:	cmp	dword ptr [rsp + 8], 2
0x2535:	mov	r12d, r10d
0x2538:	sete	dl
0x253b:	xor	r10d, r10d
0x253e:	xor	eax, eax
0x2540:	jmp	0x20d8


0x2548:	cmp	dword ptr [rsp + 8], 2
0x254d:	sete	dl
0x2550:	xor	r10d, r10d
0x2553:	jmp	0x2318


0x2560:	cmp	dword ptr [rsp + 8], 2
0x2565:	sete	dl
0x2568:	xor	r10d, r10d
0x256b:	xor	r12d, r12d
0x256e:	jmp	0x2321


0x2578:	cmp	dword ptr [rsp + 8], 2
0x257d:	mov	r12d, r10d
0x2580:	mov	ebx, 0x20
0x2585:	sete	dl
0x2588:	xor	r10d, r10d
0x258b:	jmp	0x2321


0x25a8:	mov	ebx, 0x76
0x25ad:	jmp	0x2250


0x25b8:	mov	edx, 9
0x25bd:	xor	r10d, r10d
0x25c0:	mov	ebx, 0x74
0x25c5:	jmp	0x21d2


0x25d0:	mov	ebx, 0x62
0x25d5:	jmp	0x2250


0x2b70:	test	ebx, ebx
0x2b72:	jne	0x2f6d


0x1806:	nop	word ptr cs:[rax + rax]


0x1857:	nop	word ptr [rax + rax]


0x18a1:	nop	dword ptr [rax]


0x1dfc:	nop	dword ptr [rax]


0x1e4d:	nop	dword ptr [rax]


0x2078:	nop	dword ptr [rax + rax]


0x2167:	nop	word ptr [rax + rax]


0x219e:	nop	


0x21c1:	nop	dword ptr [rax]


0x2202:	nop	word ptr [rax + rax]


0x2214:	nop	dword ptr [rax]


0x22b8:	nop	dword ptr [rax + rax]


0x22e1:	nop	dword ptr [rax]


0x22f7:	nop	word ptr [rax + rax]


0x230f:	nop	


0x233e:	nop	


0x234d:	nop	dword ptr [rax]


0x235f:	nop	


0x236f:	nop	


0x237f:	nop	


0x238f:	nop	


0x239f:	nop	


0x240c:	nop	dword ptr [rax]


0x242c:	nop	dword ptr [rax]


0x243e:	nop	


0x244f:	nop	


0x2462:	nop	word ptr [rax + rax]


0x247a:	nop	word ptr [rax + rax]


0x248a:	nop	word ptr [rax + rax]


0x252b:	nop	dword ptr [rax + rax]


0x2545:	nop	dword ptr [rax]


0x2558:	nop	dword ptr [rax + rax]


0x2573:	nop	dword ptr [rax + rax]


0x25a2:	nop	word ptr [rax + rax]


0x25b2:	nop	word ptr [rax + rax]


0x25ca:	nop	word ptr [rax + rax]


0x25da:	nop	word ptr [rax + rax]


0x25e8:	nop	dword ptr [rax + rax]


0x260f:	nop	


0x26a9:	nop	dword ptr [rax]


0x26f2:	nop	word ptr [rax + rax]


0x2718:	nop	dword ptr [rax + rax]


0x2731:	nop	dword ptr [rax]


0x2752:	nop	word ptr [rax + rax]


0x28b8:	nop	dword ptr [rax + rax]


0x29cb:	nop	dword ptr [rax + rax]


0x29ee:	nop	


0x2ab5:	nop	dword ptr [rax]


0x2b6d:	nop	dword ptr [rax]


0x2d76:	nop	word ptr cs:[rax + rax]


0x2e09:	nop	dword ptr [rax]


0x2e7d:	nop	dword ptr [rax]


0x2f5d:	nop	dword ptr [rax]


0x326b:	nop	dword ptr [rax + rax]


0x3af6:	nop	word ptr cs:[rax + rax]


0x3b85:	nop	dword ptr [rax]


0x3ba6:	nop	word ptr cs:[rax + rax]


0x3c05:	nop	dword ptr [rax]


0x3c41:	nop	dword ptr [rax]


0x3c88:	nop	dword ptr [rax + rax]


0x3cd7:	nop	word ptr [rax + rax]


0x3d34:	nop	dword ptr [rax]


0x3d62:	nop	word ptr [rax + rax]


0x3e16:	nop	word ptr cs:[rax + rax]


0x3e79:	nop	dword ptr [rax]


0x40f2:	nop	word ptr [rax + rax]


0x4179:	nop	dword ptr [rax]


0x41a4:	nop	dword ptr [rax]


0x41fd:	nop	dword ptr [rax]


0x43c4:	nop	dword ptr [rax]


0x43e1:	nop	dword ptr [rax]


0x43f2:	nop	word ptr [rax + rax]


0x444a:	nop	word ptr [rax + rax]


0x4496:	nop	word ptr cs:[rax + rax]


0x44f5:	nop	dword ptr [rax]


0x4553:	nop	dword ptr [rax + rax]


0x457f:	nop	


