0x4500:	sub	rsp, 8
0x4504:	add	rsp, 8
0x4508:	ret	


0x44f0:	mov	rdx, qword ptr [rip + 0x202b11]
0x44f7:	xor	esi, esi
0x44f9:	jmp	0x1480


0x44e0:	ret	


0x4470:	push	r15
0x4472:	push	r14
0x4474:	mov	r15, rdx
0x4477:	push	r13
0x4479:	push	r12
0x447b:	lea	r12, [rip + 0x2026ee]
0x4482:	push	rbp
0x4483:	lea	rbp, [rip + 0x2026ee]
0x448a:	push	rbx
0x448b:	mov	r13d, edi
0x448e:	mov	r14, rsi
0x4491:	sub	rbp, r12
0x4494:	sub	rsp, 8
0x4498:	sar	rbp, 3
0x449c:	call	0x1220


0x4410:	mov	rax, qword ptr [rdi + 8]
0x4414:	cmp	qword ptr [rdi + 0x10], rax
0x4418:	je	0x4420


0x43d0:	test	rdi, rdi
0x43d3:	push	rbx
0x43d4:	mov	rbx, rdi
0x43d7:	je	0x43ea


0x4350:	push	r12
0x4352:	push	rbp
0x4353:	push	rbx
0x4354:	mov	rbx, rdi
0x4357:	call	0x13d0


0x4310:	sub	rsp, 8
0x4314:	mov	edi, 0xe
0x4319:	call	0x1400


0x42b0:	sub	rsp, 8
0x42b4:	xor	esi, esi
0x42b6:	call	0x1440


0x4230:	push	r12
0x4232:	push	rbp
0x4233:	mov	rbp, rdi
0x4236:	push	rbx
0x4237:	call	0x12a0


0x41a0:	push	r13
0x41a2:	push	r12
0x41a4:	mov	r13, rsi
0x41a7:	push	rbp
0x41a8:	push	rbx
0x41a9:	mov	rbx, rdi
0x41ac:	mov	r12, rdx
0x41af:	sub	rsp, 0x18
0x41b3:	mov	rax, qword ptr fs:[0x28]
0x41bc:	mov	qword ptr [rsp + 8], rax
0x41c1:	xor	eax, eax
0x41c3:	lea	rax, [rsp + 4]
0x41c8:	test	rdi, rdi
0x41cb:	cmove	rbx, rax
0x41cf:	mov	rdi, rbx
0x41d2:	call	0x1350


0x4160:	lea	rsi, [rip + 0xf28]
0x4167:	sub	rsp, 8
0x416b:	mov	edx, 5
0x4170:	xor	edi, edi
0x4172:	call	0x1300


0x4140:	push	rbx
0x4141:	mov	rbx, rdi
0x4144:	call	0x1320


0x4110:	push	rbp
0x4111:	push	rbx
0x4112:	mov	rbp, rdi
0x4115:	mov	rdi, rsi
0x4118:	mov	rbx, rsi
0x411b:	sub	rsp, 8
0x411f:	call	0x3f10


0x40e0:	mov	rax, rdi
0x40e3:	sub	rsp, 8
0x40e7:	mul	rsi
0x40ea:	seto	dl
0x40ed:	test	rax, rax
0x40f0:	js	0x4109


0x40c0:	push	rbx
0x40c1:	mov	rbx, rdi
0x40c4:	call	0x3f10


0x4070:	test	rdi, rdi
0x4073:	mov	rax, qword ptr [rsi]
0x4076:	je	0x40a0


0x3fe0:	test	rdi, rdi
0x3fe3:	mov	r9, rdx
0x3fe6:	mov	rcx, qword ptr [rsi]
0x3fe9:	je	0x4020


0x3fb0:	mov	rax, rsi
0x3fb3:	mul	rdx
0x3fb6:	mov	rsi, rax
0x3fb9:	seto	al
0x3fbc:	test	rsi, rsi
0x3fbf:	js	0x3fcb


0x3f70:	test	rsi, rsi
0x3f73:	push	rbx
0x3f74:	mov	rbx, rsi
0x3f77:	jne	0x3f7e


0x3f60:	jmp	0x3f10


0x3f30:	mov	rax, rdi
0x3f33:	mul	rsi
0x3f36:	mov	rdi, rax
0x3f39:	seto	al
0x3f3c:	test	rdi, rdi
0x3f3f:	js	0x3f4b


0x3f10:	push	rbx
0x3f11:	mov	rbx, rdi
0x3f14:	call	0x13e0


0x3e90:	push	rbx
0x3e91:	lea	rsi, [rip + 0xeea]
0x3e98:	mov	edx, 5
0x3e9d:	xor	edi, edi
0x3e9f:	call	0x1300


0x3db0:	push	rbp
0x3db1:	push	rbx
0x3db2:	mov	r10d, 0x20
0x3db8:	xor	r11d, r11d
0x3dbb:	sub	rsp, 0xb8
0x3dc2:	mov	rax, qword ptr fs:[0x28]
0x3dcb:	mov	qword ptr [rsp + 0x78], rax
0x3dd0:	xor	eax, eax
0x3dd2:	lea	rax, [rsp + 0xd0]
0x3dda:	mov	qword ptr [rsp + 0xa0], r8
0x3de2:	lea	rbx, [rsp + 0xd0]
0x3dea:	lea	r8, [rsp + 0x20]
0x3def:	mov	qword ptr [rsp + 0xa8], r9
0x3df7:	mov	dword ptr [rsp + 8], 0x20
0x3dff:	mov	qword ptr [rsp + 0x10], rax
0x3e04:	lea	rax, [rsp + 0x80]
0x3e0c:	xor	r9d, r9d
0x3e0f:	mov	qword ptr [rsp + 0x18], rax
0x3e14:	mov	rbp, rax
0x3e17:	nop	word ptr [rax + rax]
0x3e20:	cmp	r10d, 0x2f
0x3e24:	ja	0x3e7c


0x3d30:	sub	rsp, 0x68
0x3d34:	mov	r10, r8
0x3d37:	xor	r9d, r9d
0x3d3a:	mov	rax, qword ptr fs:[0x28]
0x3d43:	mov	qword ptr [rsp + 0x58], rax
0x3d48:	xor	eax, eax
0x3d4a:	mov	r8, rsp
0x3d4d:	nop	dword ptr [rax]
0x3d50:	mov	eax, dword ptr [r10]
0x3d53:	cmp	eax, 0x2f
0x3d56:	ja	0x3d9a


0x3d10:	xor	r9d, r9d
0x3d13:	cmp	qword ptr [r8], 0
0x3d17:	je	0x3d2b


0x38f0:	push	r15
0x38f2:	push	r14
0x38f4:	push	r13
0x38f6:	push	r12
0x38f8:	mov	r12, r9
0x38fb:	push	rbp
0x38fc:	push	rbx
0x38fd:	mov	rbp, rdi
0x3900:	mov	rbx, r8
0x3903:	sub	rsp, 0x28
0x3907:	test	rsi, rsi
0x390a:	je	0x3a28


0x38d0:	lea	rcx, [rip + 0x203749]
0x38d7:	mov	rsi, rdi
0x38da:	mov	rdx, -1
0x38e1:	xor	edi, edi
0x38e3:	jmp	0x2f90


0x38b0:	lea	rcx, [rip + 0x203769]
0x38b7:	mov	rdx, -1
0x38be:	jmp	0x2f90


0x3890:	lea	rcx, [rip + 0x203789]
0x3897:	mov	rdx, rsi
0x389a:	mov	rsi, rdi
0x389d:	xor	edi, edi
0x389f:	jmp	0x2f90


0x3880:	lea	rcx, [rip + 0x203799]
0x3887:	jmp	0x2f90


0x3860:	mov	r8, rcx
0x3863:	mov	rcx, rdx
0x3866:	mov	rdx, rsi
0x3869:	mov	rsi, rdi
0x386c:	xor	edi, edi
0x386e:	jmp	0x3790


0x3840:	mov	rcx, rdx
0x3843:	mov	r8, -1
0x384a:	mov	rdx, rsi
0x384d:	mov	rsi, rdi
0x3850:	xor	edi, edi
0x3852:	jmp	0x3790


0x3830:	mov	r8, -1
0x3837:	jmp	0x3790


0x3790:	sub	rsp, 0x48
0x3794:	mov	r9, rcx
0x3797:	mov	rcx, qword ptr [rip + 0x203a72]
0x379e:	movdqa	xmm0, xmmword ptr [rip + 0x203a3a]
0x37a6:	mov	rax, qword ptr fs:[0x28]
0x37af:	mov	qword ptr [rsp + 0x38], rax
0x37b4:	xor	eax, eax
0x37b6:	movaps	xmmword ptr [rsp], xmm0
0x37ba:	test	rsi, rsi
0x37bd:	mov	qword ptr [rsp + 0x30], rcx
0x37c2:	mov	dword ptr [rsp], 0xa
0x37c9:	movdqa	xmm0, xmmword ptr [rip + 0x203a1f]
0x37d1:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x37d6:	movdqa	xmm0, xmmword ptr [rip + 0x203a22]
0x37de:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x37e3:	je	0x3817


0x3700:	sub	rsp, 0x48
0x3704:	mov	rax, rdx
0x3707:	mov	rdx, qword ptr fs:[0x28]
0x3710:	mov	qword ptr [rsp + 0x38], rdx
0x3715:	xor	edx, edx
0x3717:	cmp	esi, 0xa
0x371a:	je	0x3784


0x36f0:	mov	edx, 0x3a
0x36f5:	jmp	0x3620


0x36d0:	mov	edx, 0x3a
0x36d5:	mov	rsi, -1
0x36dc:	jmp	0x3620


0x36c0:	movsx	edx, sil
0x36c4:	mov	rsi, -1
0x36cb:	jmp	0x3620


0x3620:	sub	rsp, 0x48
0x3624:	mov	ecx, edx
0x3626:	mov	rax, qword ptr fs:[0x28]
0x362f:	mov	qword ptr [rsp + 0x38], rax
0x3634:	xor	eax, eax
0x3636:	mov	rax, qword ptr [rip + 0x203bd3]
0x363d:	mov	r8, rsp
0x3640:	and	ecx, 0x1f
0x3643:	movdqa	xmm0, xmmword ptr [rip + 0x203b95]
0x364b:	mov	qword ptr [rsp + 0x30], rax
0x3650:	mov	eax, edx
0x3652:	movaps	xmmword ptr [rsp], xmm0
0x3656:	shr	al, 5
0x3659:	movzx	eax, al
0x365c:	lea	r9, [r8 + rax*4 + 8]
0x3661:	movdqa	xmm0, xmmword ptr [rip + 0x203b87]
0x3669:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x366e:	movdqa	xmm0, xmmword ptr [rip + 0x203b8a]
0x3676:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x367b:	mov	edx, dword ptr [r9]
0x367e:	mov	eax, edx
0x3680:	shr	eax, cl
0x3682:	not	eax
0x3684:	and	eax, 1
0x3687:	shl	eax, cl
0x3689:	mov	rcx, r8
0x368c:	xor	eax, edx
0x368e:	mov	rdx, rsi
0x3691:	mov	rsi, rdi
0x3694:	mov	dword ptr [r9], eax
0x3697:	xor	edi, edi
0x3699:	call	0x2f90


0x3610:	mov	rcx, rdx
0x3613:	mov	rdx, rsi
0x3616:	mov	esi, edi
0x3618:	xor	edi, edi
0x361a:	jmp	0x3570


0x3600:	mov	rdx, rsi
0x3603:	mov	esi, edi
0x3605:	xor	edi, edi
0x3607:	jmp	0x34e0


0x3570:	sub	rsp, 0x48
0x3574:	mov	rax, rdx
0x3577:	mov	rdx, rcx
0x357a:	mov	rcx, qword ptr fs:[0x28]
0x3583:	mov	qword ptr [rsp + 0x38], rcx
0x3588:	xor	ecx, ecx
0x358a:	cmp	esi, 0xa
0x358d:	je	0x35f0


0x34e0:	sub	rsp, 0x48
0x34e4:	mov	rax, rdx
0x34e7:	mov	rdx, qword ptr fs:[0x28]
0x34f0:	mov	qword ptr [rsp + 0x38], rdx
0x34f5:	xor	edx, edx
0x34f7:	cmp	esi, 0xa
0x34fa:	je	0x3564


0x34c0:	lea	rcx, [rip + 0x203d19]
0x34c7:	mov	rdx, rsi
0x34ca:	mov	rsi, rdi
0x34cd:	xor	edi, edi
0x34cf:	jmp	0x2f90


0x34a0:	lea	rcx, [rip + 0x203d39]
0x34a7:	mov	rsi, rdi
0x34aa:	mov	rdx, -1
0x34b1:	xor	edi, edi
0x34b3:	jmp	0x2f90


0x3490:	lea	rcx, [rip + 0x203d49]
0x3497:	jmp	0x2f90


0x3470:	lea	rcx, [rip + 0x203d69]
0x3477:	mov	rdx, -1
0x347e:	jmp	0x2f90


0x33d0:	mov	eax, dword ptr [rip + 0x203c82]
0x33d6:	push	r12
0x33d8:	mov	r12, qword ptr [rip + 0x203c81]
0x33df:	push	rbp
0x33e0:	push	rbx
0x33e1:	cmp	eax, 1
0x33e4:	jle	0x3411


0x33c0:	mov	rcx, rdx
0x33c3:	xor	edx, edx
0x33c5:	jmp	0x32d0


0x32d0:	push	r15
0x32d2:	push	r14
0x32d4:	lea	rax, [rip + 0x203f05]
0x32db:	push	r13
0x32dd:	push	r12
0x32df:	mov	r12, rdx
0x32e2:	push	rbp
0x32e3:	push	rbx
0x32e4:	mov	rbx, rcx
0x32e7:	mov	r14, rdi
0x32ea:	mov	r15, rsi
0x32ed:	sub	rsp, 0x38
0x32f1:	test	rcx, rcx
0x32f4:	cmove	rbx, rax
0x32f8:	xor	ebp, ebp
0x32fa:	call	0x1270


0x3250:	push	r15
0x3252:	push	r14
0x3254:	lea	rax, [rip + 0x203f85]
0x325b:	push	r13
0x325d:	push	r12
0x325f:	mov	r13, rdi
0x3262:	push	rbp
0x3263:	push	rbx
0x3264:	mov	rbx, r8
0x3267:	mov	r14, rsi
0x326a:	mov	r15, rdx
0x326d:	sub	rsp, 0x18
0x3271:	test	r8, r8
0x3274:	cmove	rbx, rax
0x3278:	mov	qword ptr [rsp + 8], rcx
0x327d:	call	0x1270


0x3220:	lea	rax, [rip + 0x203fb9]
0x3227:	test	rdi, rdi
0x322a:	cmove	rdi, rax
0x322e:	test	rsi, rsi
0x3231:	mov	dword ptr [rdi], 0xa
0x3237:	je	0x3247


0x3200:	lea	rax, [rip + 0x203fd9]
0x3207:	test	rdi, rdi
0x320a:	cmove	rdi, rax
0x320e:	mov	eax, dword ptr [rdi + 4]
0x3211:	mov	dword ptr [rdi + 4], esi
0x3214:	ret	


0x31c0:	lea	rax, [rip + 0x204019]
0x31c7:	test	rdi, rdi
0x31ca:	mov	ecx, esi
0x31cc:	cmove	rdi, rax
0x31d0:	mov	eax, esi
0x31d2:	and	ecx, 0x1f
0x31d5:	shr	al, 5
0x31d8:	movzx	eax, al
0x31db:	lea	rdi, [rdi + rax*4 + 8]
0x31e0:	mov	esi, dword ptr [rdi]
0x31e2:	mov	eax, esi
0x31e4:	shr	eax, cl
0x31e6:	xor	edx, eax
0x31e8:	and	eax, 1
0x31eb:	and	edx, 1
0x31ee:	shl	edx, cl
0x31f0:	xor	edx, esi
0x31f2:	mov	dword ptr [rdi], edx
0x31f4:	ret	


0x31a0:	lea	rax, [rip + 0x204039]
0x31a7:	test	rdi, rdi
0x31aa:	cmove	rdi, rax
0x31ae:	mov	dword ptr [rdi], esi
0x31b0:	ret	


0x3180:	lea	rax, [rip + 0x204059]
0x3187:	test	rdi, rdi
0x318a:	cmove	rdi, rax
0x318e:	mov	eax, dword ptr [rdi]
0x3190:	ret	


0x3140:	push	r12
0x3142:	push	rbp
0x3143:	push	rbx
0x3144:	mov	rbx, rdi
0x3147:	call	0x1270


0x2f90:	push	r15
0x2f92:	push	r14
0x2f94:	movsxd	r15, edi
0x2f97:	push	r13
0x2f99:	push	r12
0x2f9b:	mov	r14, rdx
0x2f9e:	push	rbp
0x2f9f:	push	rbx
0x2fa0:	mov	rbp, rcx
0x2fa3:	sub	rsp, 0x28
0x2fa7:	mov	qword ptr [rsp + 8], rsi
0x2fac:	call	0x1270


0x1d50:	push	r15
0x1d52:	push	r14
0x1d54:	mov	r15d, r8d
0x1d57:	push	r13
0x1d59:	push	r12
0x1d5b:	mov	r14, rdi
0x1d5e:	push	rbp
0x1d5f:	push	rbx
0x1d60:	mov	ebx, r9d
0x1d63:	mov	r13, rsi
0x1d66:	mov	rbp, rcx
0x1d69:	and	ebx, 2
0x1d6c:	sub	rsp, 0xb8
0x1d73:	mov	rax, qword ptr [rsp + 0xf0]
0x1d7b:	mov	qword ptr [rsp + 0x10], rdx
0x1d80:	mov	dword ptr [rsp + 8], r8d
0x1d85:	mov	dword ptr [rsp + 0x78], r9d
0x1d8a:	mov	qword ptr [rsp + 0x20], rax
0x1d8f:	mov	rax, qword ptr [rsp + 0xf8]
0x1d97:	mov	qword ptr [rsp + 0x68], rax
0x1d9c:	mov	rax, qword ptr [rsp + 0x100]
0x1da4:	mov	qword ptr [rsp + 0x60], rax
0x1da9:	mov	rax, qword ptr fs:[0x28]
0x1db2:	mov	qword ptr [rsp + 0xa8], rax
0x1dba:	xor	eax, eax
0x1dbc:	call	0x1310


0x1c60:	push	rbp
0x1c61:	push	rbx
0x1c62:	mov	rbp, rdi
0x1c65:	mov	ebx, esi
0x1c67:	sub	rsp, 8
0x1c6b:	call	0x4310


0x1bc0:	test	rdi, rdi
0x1bc3:	push	rbx
0x1bc4:	je	0x1c3d


0x1b10:	push	rbp
0x1b11:	push	rbx
0x1b12:	sub	rsp, 8
0x1b16:	mov	rdi, qword ptr [rip + 0x20556b]
0x1b1d:	call	0x4230


0x1b00:	mov	byte ptr [rip + 0x2055a9], dil
0x1b07:	ret	


0x1af0:	mov	qword ptr [rip + 0x2055c1], rdi
0x1af7:	ret	


0x17a0:	push	r13
0x17a2:	push	r12
0x17a4:	mov	edx, 5
0x17a9:	push	rbp
0x17aa:	push	rbx
0x17ab:	mov	ebp, edi
0x17ad:	sub	rsp, 0x88
0x17b4:	mov	rbx, qword ptr [rip + 0x205905]
0x17bb:	mov	rax, qword ptr fs:[0x28]
0x17c4:	mov	qword ptr [rsp + 0x78], rax
0x17c9:	xor	eax, eax
0x17cb:	test	edi, edi
0x17cd:	je	0x17fd


0x1790:	push	rbp
0x1791:	mov	rbp, rsp
0x1794:	pop	rbp
0x1795:	jmp	0x1700


0x1750:	cmp	byte ptr [rip + 0x205951], 0
0x1757:	jne	0x1788


0x1700:	lea	rdi, [rip + 0x205979]
0x1707:	lea	rsi, [rip + 0x205972]
0x170e:	push	rbp
0x170f:	sub	rsi, rdi
0x1712:	mov	rbp, rsp
0x1715:	sar	rsi, 3
0x1719:	mov	rax, rsi
0x171c:	shr	rax, 0x3f
0x1720:	add	rsi, rax
0x1723:	sar	rsi, 1
0x1726:	je	0x1740


0x16c0:	lea	rdi, [rip + 0x2059b9]
0x16c7:	push	rbp
0x16c8:	lea	rax, [rip + 0x2059b1]
0x16cf:	cmp	rax, rdi
0x16d2:	mov	rbp, rsp
0x16d5:	je	0x16f0


0x1690:	xor	ebp, ebp
0x1692:	mov	r9, rdx
0x1695:	pop	rsi
0x1696:	mov	rdx, rsp
0x1699:	and	rsp, 0xfffffffffffffff0
0x169d:	push	rax
0x169e:	push	rsp
0x169f:	lea	r8, [rip + 0x2e3a]
0x16a6:	lea	rcx, [rip + 0x2dc3]
0x16ad:	lea	rdi, [rip - 0x1b4]
0x16b4:	call	qword ptr [rip + 0x20591e]


0x1500:	push	r12
0x1502:	push	rbp
0x1503:	mov	ebp, edi
0x1505:	push	rbx
0x1506:	mov	rdi, qword ptr [rsi]
0x1509:	mov	rbx, rsi
0x150c:	lea	r12, [rip + 0x20566d]
0x1513:	call	0x1bc0


0x1220:	sub	rsp, 8
0x1224:	mov	rax, qword ptr [rip + 0x205db5]
0x122b:	test	rax, rax
0x122e:	je	0x1232


0x1480:	jmp	qword ptr [rip + 0x205b12]


0x4420:	mov	rax, qword ptr [rdi + 0x20]
0x4424:	cmp	qword ptr [rdi + 0x28], rax
0x4428:	jne	0x441a


0x441a:	jmp	0x1470


0x43ea:	mov	rdi, rbx
0x43ed:	pop	rbx
0x43ee:	jmp	0x13f0


0x43d9:	call	0x1410


0x13d0:	jmp	qword ptr [rip + 0x205b6a]


0x1400:	jmp	qword ptr [rip + 0x205b52]


0x1440:	jmp	qword ptr [rip + 0x205b32]


0x12a0:	jmp	qword ptr [rip + 0x205c02]


0x1350:	jmp	qword ptr [rip + 0x205baa]


0x1300:	jmp	qword ptr [rip + 0x205bd2]


0x1320:	jmp	qword ptr [rip + 0x205bc2]


0x4109:	call	0x4160


0x40f2:	movzx	edx, dl
0x40f5:	test	rdx, rdx
0x40f8:	jne	0x4109


0x40a0:	test	rax, rax
0x40a3:	mov	edx, 0x80
0x40a8:	cmove	rax, rdx
0x40ac:	test	rax, rax
0x40af:	jns	0x4092


0x4078:	movabs	rdx, 0x5555555555555553
0x4082:	cmp	rax, rdx
0x4085:	ja	0x40b1


0x4020:	test	rcx, rcx
0x4023:	je	0x4048


0x3feb:	xor	edx, edx
0x3fed:	movabs	rax, 0x5555555555555554
0x3ff7:	div	r9
0x3ffa:	cmp	rax, rcx
0x3ffd:	jbe	0x403b


0x3fcb:	sub	rsp, 8
0x3fcf:	call	0x4160


0x3fc1:	movzx	eax, al
0x3fc4:	test	rax, rax
0x3fc7:	jne	0x3fcb


0x3f79:	test	rdi, rdi
0x3f7c:	jne	0x3f98


0x3f7e:	mov	rsi, rbx
0x3f81:	call	0x1430


0x3f4b:	sub	rsp, 8
0x3f4f:	call	0x4160


0x3f41:	movzx	eax, al
0x3f44:	test	rax, rax
0x3f47:	jne	0x3f4b


0x13e0:	jmp	qword ptr [rip + 0x205b62]


0x3e26:	mov	eax, r10d
0x3e29:	mov	r11d, 1
0x3e2f:	add	r10d, 8
0x3e33:	add	rax, rbp
0x3e36:	mov	rax, qword ptr [rax]
0x3e39:	test	rax, rax
0x3e3c:	mov	qword ptr [r8 + r9*8], rax
0x3e40:	je	0x3e4c


0x3e7c:	mov	rax, rbx
0x3e7f:	add	rbx, 8
0x3e83:	jmp	0x3e36


0x3d58:	mov	r11d, eax
0x3d5b:	add	r11, qword ptr [r10 + 0x10]
0x3d5f:	add	eax, 8
0x3d62:	mov	dword ptr [r10], eax
0x3d65:	mov	rax, qword ptr [r11]
0x3d68:	test	rax, rax
0x3d6b:	mov	qword ptr [r8 + r9*8], rax
0x3d6f:	je	0x3d7b


0x3d9a:	mov	r11, qword ptr [r10 + 8]
0x3d9e:	lea	rax, [r11 + 8]
0x3da2:	mov	qword ptr [r10 + 8], rax
0x3da6:	jmp	0x3d65


0x3d2b:	jmp	0x38f0


0x3a28:	mov	r8, rcx
0x3a2b:	mov	rcx, rdx
0x3a2e:	lea	rdx, [rip + 0x12ff]
0x3a35:	mov	esi, 1
0x3a3a:	xor	eax, eax
0x3a3c:	call	0x14b0


0x3910:	mov	r8, rdx
0x3913:	lea	rdx, [rip + 0x140e]
0x391a:	mov	r9, rcx
0x391d:	xor	eax, eax
0x391f:	mov	rcx, rsi
0x3922:	mov	esi, 1
0x3927:	call	0x14b0


0x3817:	call	0x1260


0x37e5:	test	rdx, rdx
0x37e8:	je	0x3817


0x3784:	call	0x1260


0x371c:	mov	dword ptr [rsp], esi
0x371f:	mov	rcx, rsp
0x3722:	mov	rdx, -1
0x3729:	mov	rsi, rax
0x372c:	mov	qword ptr [rsp + 4], 0
0x3735:	mov	qword ptr [rsp + 0xc], 0x4000000
0x373e:	mov	qword ptr [rsp + 0x14], 0
0x3747:	mov	qword ptr [rsp + 0x1c], 0
0x3750:	mov	qword ptr [rsp + 0x24], 0
0x3759:	mov	qword ptr [rsp + 0x2c], 0
0x3762:	mov	dword ptr [rsp + 0x34], 0
0x376a:	call	0x2f90


0x35f0:	call	0x1260


0x358f:	mov	dword ptr [rsp], esi
0x3592:	mov	rcx, rsp
0x3595:	mov	rsi, rax
0x3598:	mov	qword ptr [rsp + 4], 0
0x35a1:	mov	qword ptr [rsp + 0xc], 0
0x35aa:	mov	qword ptr [rsp + 0x14], 0
0x35b3:	mov	qword ptr [rsp + 0x1c], 0
0x35bc:	mov	qword ptr [rsp + 0x24], 0
0x35c5:	mov	qword ptr [rsp + 0x2c], 0
0x35ce:	mov	dword ptr [rsp + 0x34], 0
0x35d6:	call	0x2f90


0x3564:	call	0x1260


0x34fc:	mov	dword ptr [rsp], esi
0x34ff:	mov	rcx, rsp
0x3502:	mov	rdx, -1
0x3509:	mov	rsi, rax
0x350c:	mov	qword ptr [rsp + 4], 0
0x3515:	mov	qword ptr [rsp + 0xc], 0
0x351e:	mov	qword ptr [rsp + 0x14], 0
0x3527:	mov	qword ptr [rsp + 0x1c], 0
0x3530:	mov	qword ptr [rsp + 0x24], 0
0x3539:	mov	qword ptr [rsp + 0x2c], 0
0x3542:	mov	dword ptr [rsp + 0x34], 0
0x354a:	call	0x2f90


0x3411:	mov	rdi, qword ptr [r12 + 8]
0x3416:	lea	rbx, [rip + 0x203cc3]
0x341d:	cmp	rdi, rbx
0x3420:	je	0x3439


0x33e6:	sub	eax, 2
0x33e9:	lea	rbx, [r12 + 0x18]
0x33ee:	shl	rax, 4
0x33f2:	lea	rbp, [r12 + rax + 0x28]
0x33f7:	nop	word ptr [rax + rax]
0x3400:	mov	rdi, qword ptr [rbx]
0x3403:	add	rbx, 0x10
0x3407:	call	0x1250


0x1270:	jmp	qword ptr [rip + 0x205c1a]


0x3247:	sub	rsp, 8
0x324b:	call	0x1260


0x3239:	test	rdx, rdx
0x323c:	je	0x3247


0x1310:	jmp	qword ptr [rip + 0x205bca]


0x1c3d:	mov	rcx, qword ptr [rip + 0x20545c]
0x1c44:	lea	rdi, [rip + 0x2bcd]
0x1c4b:	mov	edx, 0x37
0x1c50:	mov	esi, 1
0x1c55:	call	0x14a0


0x1bc6:	mov	esi, 0x2f
0x1bcb:	mov	rbx, rdi
0x1bce:	call	0x1360


0x17fd:	lea	rsi, [rip + 0x2d20]
0x1804:	xor	edi, edi
0x1806:	call	0x1300


0x17cf:	lea	rsi, [rip + 0x2e6a]
0x17d6:	xor	edi, edi
0x17d8:	call	0x1300


0x1759:	cmp	qword ptr [rip + 0x20588f], 0
0x1761:	push	rbp
0x1762:	mov	rbp, rsp
0x1765:	je	0x1773


0x1788:	ret	


0x1740:	pop	rbp
0x1741:	ret	


0x1728:	mov	rax, qword ptr [rip + 0x2058b9]
0x172f:	test	rax, rax
0x1732:	je	0x1740


0x16f0:	pop	rbp
0x16f1:	ret	


0x16d7:	mov	rax, qword ptr [rip + 0x2058f2]
0x16de:	test	rax, rax
0x16e1:	je	0x16f0




0x1232:	add	rsp, 8
0x1236:	ret	


0x1230:	call	rax




0x442a:	cmp	qword ptr [rdi + 0x48], 0
0x442f:	jne	0x441a


0x1470:	jmp	qword ptr [rip + 0x205b1a]


0x13f0:	jmp	qword ptr [rip + 0x205b5a]


0x1410:	jmp	qword ptr [rip + 0x205b4a]
















0x40fa:	call	0x13b0


0x40b1:	sub	rsp, 8
0x40b5:	call	0x4160


0x4092:	mov	qword ptr [rsi], rax
0x4095:	mov	rsi, rax
0x4098:	jmp	0x3f70


0x4087:	mov	rdx, rax
0x408a:	shr	rdx, 1
0x408d:	lea	rax, [rdx + rax + 1]
0x4092:	mov	qword ptr [rsi], rax
0x4095:	mov	rsi, rax
0x4098:	jmp	0x3f70


0x4048:	xor	edx, edx
0x404a:	mov	eax, 0x80
0x404f:	xor	r8d, r8d
0x4052:	div	r9
0x4055:	test	rax, rax
0x4058:	sete	r8b
0x405c:	lea	rcx, [r8 + rax]
0x4060:	jmp	0x4025


0x4025:	mov	rax, rcx
0x4028:	mul	r9
0x402b:	seto	dl
0x402e:	test	rax, rax
0x4031:	movzx	edx, dl
0x4034:	js	0x403b


0x403b:	sub	rsp, 8
0x403f:	call	0x4160


0x3fff:	mov	rax, rcx
0x4002:	shr	rax, 1
0x4005:	lea	rcx, [rax + rcx + 1]
0x400a:	mov	qword ptr [rsi], rcx
0x400d:	imul	rcx, r9
0x4011:	mov	rsi, rcx
0x4014:	jmp	0x3f70


0x3fc9:	jmp	0x3f70


0x3f98:	call	0x1250


0x1430:	jmp	qword ptr [rip + 0x205b3a]


0x3f49:	jmp	0x3f10




0x3e4c:	test	r11b, r11b
0x3e4f:	jne	0x3e75


0x3e42:	add	r9, 1
0x3e46:	cmp	r9, 0xa
0x3e4a:	jne	0x3e20


0x3e36:	mov	rax, qword ptr [rax]
0x3e39:	test	rax, rax
0x3e3c:	mov	qword ptr [r8 + r9*8], rax
0x3e40:	je	0x3e4c


0x3d7b:	call	0x38f0


0x3d71:	add	r9, 1
0x3d75:	cmp	r9, 0xa
0x3d79:	jne	0x3d50


0x3d65:	mov	rax, qword ptr [r11]
0x3d68:	test	rax, rax
0x3d6b:	mov	qword ptr [r8 + r9*8], rax
0x3d6f:	je	0x3d7b


0x3d20:	add	r9, 1
0x3d24:	cmp	qword ptr [r8 + r9*8], 0
0x3d29:	jne	0x3d20


0x14b0:	jmp	qword ptr [rip + 0x205afa]


0x1260:	jmp	qword ptr [rip + 0x205c22]


0x37ea:	mov	qword ptr [rsp + 0x28], rsi
0x37ef:	mov	qword ptr [rsp + 0x30], rdx
0x37f4:	mov	rcx, rsp
0x37f7:	mov	rdx, r8
0x37fa:	mov	rsi, r9
0x37fd:	call	0x2f90


0x3439:	lea	rbx, [rip + 0x203c30]
0x3440:	cmp	r12, rbx
0x3443:	je	0x3454


0x3422:	call	0x1250


0x1250:	jmp	qword ptr [rip + 0x205c2a]




0x323e:	mov	qword ptr [rdi + 0x28], rsi
0x3242:	mov	qword ptr [rdi + 0x30], rdx
0x3246:	ret	




0x14a0:	jmp	qword ptr [rip + 0x205b02]


0x1360:	jmp	qword ptr [rip + 0x205ba2]


0x1773:	call	0x16c0


0x1767:	mov	rdi, qword ptr [rip + 0x20589a]
0x176e:	call	0x14f0


0x1734:	pop	rbp
0x1735:	jmp	rax


0x16e3:	pop	rbp
0x16e4:	jmp	rax


0x4431:	push	r12
0x4433:	push	rbp
0x4434:	mov	r12d, edx
0x4437:	push	rbx
0x4438:	mov	rbp, rsi
0x443b:	mov	rbx, rdi
0x443e:	call	0x13d0








0x13b0:	jmp	qword ptr [rip + 0x205b7a]


0x4036:	test	rdx, rdx
0x4039:	je	0x400a




0x3e51:	call	0x38f0


0x3e75:	mov	dword ptr [rsp + 8], r10d
0x3e7a:	jmp	0x3e51


0x3e20:	cmp	r10d, 0x2f
0x3e24:	ja	0x3e7c


0x3d50:	mov	eax, dword ptr [r10]
0x3d53:	cmp	eax, 0x2f
0x3d56:	ja	0x3d9a






0x3454:	pop	rbx
0x3455:	mov	dword ptr [rip + 0x203bf9], 1
0x345f:	pop	rbp
0x3460:	pop	r12
0x3462:	ret	


0x3445:	mov	rdi, r12
0x3448:	call	0x1250








0x14f0:	jmp	qword ptr [rip + 0x205afa]




0x400a:	mov	qword ptr [rsi], rcx
0x400d:	imul	rcx, r9
0x4011:	mov	rsi, rcx
0x4014:	jmp	0x3f70


0x1778:	mov	byte ptr [rip + 0x205929], 1
0x177f:	pop	rbp
0x1780:	ret	


0x44a1:	test	rbp, rbp
0x44a4:	je	0x44c6


0x44c6:	add	rsp, 8
0x44ca:	pop	rbx
0x44cb:	pop	rbp
0x44cc:	pop	r12
0x44ce:	pop	r13
0x44d0:	pop	r14
0x44d2:	pop	r15
0x44d4:	ret	


0x44a6:	xor	ebx, ebx
0x44a8:	nop	dword ptr [rax + rax]
0x44b0:	mov	rdx, r15
0x44b3:	mov	rsi, r14
0x44b6:	mov	edi, r13d
0x44b9:	call	qword ptr [r12 + rbx*8]


0x40ff:	test	rax, rax
0x4102:	je	0x4109


0x4104:	add	rsp, 8
0x4108:	ret	


0x1bd3:	test	rax, rax
0x1bd6:	je	0x1c2d


0x1c2d:	mov	qword ptr [rip + 0x20548c], rbx
0x1c34:	mov	qword ptr [rip + 0x20545d], rbx
0x1c3b:	pop	rbx
0x1c3c:	ret	


0x1bd8:	lea	r8, [rax + 1]
0x1bdc:	mov	rdx, r8
0x1bdf:	sub	rdx, rbx
0x1be2:	cmp	rdx, 6
0x1be6:	jle	0x1c2d


0x1be8:	lea	rsi, [rax - 6]
0x1bec:	lea	rdi, [rip + 0x2c5d]
0x1bf3:	mov	ecx, 7
0x1bf8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1bf8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1bfa:	seta	dl
0x1bfd:	sbb	dl, 0
0x1c00:	test	dl, dl
0x1c02:	jne	0x1c2d


0x1c04:	lea	rdi, [rip + 0x2c4d]
0x1c0b:	mov	ecx, 3
0x1c10:	mov	rsi, r8
0x1c13:	mov	rbx, r8
0x1c16:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1c16:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1c18:	seta	dl
0x1c1b:	sbb	dl, 0
0x1c1e:	test	dl, dl
0x1c20:	jne	0x1c2d


0x1c22:	lea	rbx, [rax + 4]
0x1c26:	mov	qword ptr [rip + 0x205453], rbx
0x1c2d:	mov	qword ptr [rip + 0x20548c], rbx
0x1c34:	mov	qword ptr [rip + 0x20545d], rbx
0x1c3b:	pop	rbx
0x1c3c:	ret	


0x1c5a:	call	0x1260


0x344d:	mov	qword ptr [rip + 0x203c0c], rbx
0x3454:	pop	rbx
0x3455:	mov	dword ptr [rip + 0x203bf9], 1
0x345f:	pop	rbp
0x3460:	pop	r12
0x3462:	ret	


0x3427:	mov	qword ptr [rip + 0x203c3e], 0x100
0x3432:	mov	qword ptr [rip + 0x203c3f], rbx
0x3439:	lea	rbx, [rip + 0x203c30]
0x3440:	cmp	r12, rbx
0x3443:	je	0x3454


0x3f9d:	xor	eax, eax
0x3f9f:	pop	rbx
0x3fa0:	ret	


0x340c:	cmp	rbx, rbp
0x340f:	jne	0x3400


0x3400:	mov	rdi, qword ptr [rbx]
0x3403:	add	rbx, 0x10
0x3407:	call	0x1250


0x392c:	lea	rsi, [rip + 0x1408]
0x3933:	xor	edi, edi
0x3935:	mov	edx, 5
0x393a:	call	0x1300


0x3a41:	jmp	0x392c


0x3f86:	test	rax, rax
0x3f89:	jne	0x3f90


0x3f8b:	test	rbx, rbx
0x3f8e:	jne	0x3fa1


0x3f90:	pop	rbx
0x3f91:	ret	


0x3fa1:	call	0x4160


0x43de:	test	eax, eax
0x43e0:	je	0x43ea


0x43e2:	test	dword ptr [rbx], 0x100
0x43e8:	jne	0x43f8


0x43f8:	mov	rdi, rbx
0x43fb:	mov	edx, 1
0x4400:	xor	esi, esi
0x4402:	call	0x4410


0x1518:	lea	rsi, [rip + 0x301b]
0x151f:	mov	edi, 6
0x1524:	call	0x1440


0x1dc1:	cmp	r15d, 0xa
0x1dc5:	mov	qword ptr [rsp + 0x58], rax
0x1dca:	ja	0x2f7f


0x1dd0:	lea	rcx, [rip + 0x2ae9]
0x1dd7:	mov	edx, r15d
0x1dda:	movsxd	rax, dword ptr [rcx + rdx*4]
0x1dde:	add	rax, rcx
0x1de1:	jmp	rax


0x2f7f:	call	0x1260


0x2fb1:	mov	r13, rax
0x2fb4:	mov	eax, dword ptr [rax]
0x2fb6:	test	r15d, r15d
0x2fb9:	mov	rbx, qword ptr [rip + 0x2040a0]
0x2fc0:	mov	dword ptr [rsp + 0x18], eax
0x2fc4:	js	0x3131


0x3131:	call	0x1260


0x2fca:	cmp	dword ptr [rip + 0x204087], r15d
0x2fd1:	jg	0x3035


0x2fd3:	cmp	r15d, 0x7fffffff
0x2fda:	je	0x3136


0x3035:	mov	eax, dword ptr [rbp + 4]
0x3038:	shl	r15, 4
0x303c:	sub	rsp, 8
0x3040:	add	rbx, r15
0x3043:	lea	r15, [rbp + 8]
0x3047:	mov	r8d, dword ptr [rbp]
0x304b:	mov	r11, qword ptr [rbx]
0x304e:	mov	r12, qword ptr [rbx + 8]
0x3052:	mov	rcx, r14
0x3055:	or	eax, 1
0x3058:	mov	dword ptr [rsp + 0x24], eax
0x305c:	push	qword ptr [rbp + 0x30]
0x305f:	mov	r9d, eax
0x3062:	push	qword ptr [rbp + 0x28]
0x3065:	push	r15
0x3067:	mov	rsi, r11
0x306a:	mov	rdx, qword ptr [rsp + 0x28]
0x306f:	mov	rdi, r12
0x3072:	mov	qword ptr [rsp + 0x30], r11
0x3077:	call	0x1d50


0x3136:	call	0x4160


0x2fe0:	lea	r12d, [r15 + 1]
0x2fe4:	lea	rax, [rip + 0x204085]
0x2feb:	movsxd	rsi, r12d
0x2fee:	shl	rsi, 4
0x2ff2:	cmp	rbx, rax
0x2ff5:	je	0x3110


0x3110:	xor	edi, edi
0x3112:	call	0x3f70


0x2ffb:	mov	rdi, rbx
0x2ffe:	call	0x3f70


0x3003:	mov	rbx, rax
0x3006:	mov	qword ptr [rip + 0x204053], rax
0x300d:	movsxd	rdi, dword ptr [rip + 0x204044]
0x3014:	mov	edx, r12d
0x3017:	xor	esi, esi
0x3019:	sub	edx, edi
0x301b:	shl	rdi, 4
0x301f:	movsxd	rdx, edx
0x3022:	add	rdi, rbx
0x3025:	shl	rdx, 4
0x3029:	call	0x1380


0x1380:	jmp	qword ptr [rip + 0x205b92]




0x3117:	movdqa	xmm0, xmmword ptr [rip + 0x203f51]
0x311f:	mov	rbx, rax
0x3122:	mov	qword ptr [rip + 0x203f37], rax
0x3129:	movups	xmmword ptr [rax], xmm0
0x312c:	jmp	0x300d


0x300d:	movsxd	rdi, dword ptr [rip + 0x204044]
0x3014:	mov	edx, r12d
0x3017:	xor	esi, esi
0x3019:	sub	edx, edi
0x301b:	shl	rdi, 4
0x301f:	movsxd	rdx, edx
0x3022:	add	rdi, rbx
0x3025:	shl	rdx, 4
0x3029:	call	0x1380


0x314c:	mov	r12d, dword ptr [rax]
0x314f:	mov	rbp, rax
0x3152:	lea	rax, [rip + 0x204087]
0x3159:	test	rbx, rbx
0x315c:	mov	esi, 0x38
0x3161:	cmove	rbx, rax
0x3165:	mov	rdi, rbx
0x3168:	call	0x4110


0x3282:	mov	r12d, dword ptr [rax]
0x3285:	mov	rbp, rax
0x3288:	lea	rax, [rbx + 8]
0x328c:	sub	rsp, 8
0x3290:	mov	r9d, dword ptr [rbx + 4]
0x3294:	push	qword ptr [rbx + 0x30]
0x3297:	mov	r8d, dword ptr [rbx]
0x329a:	push	qword ptr [rbx + 0x28]
0x329d:	mov	rdx, r15
0x32a0:	push	rax
0x32a1:	mov	rcx, qword ptr [rsp + 0x28]
0x32a6:	mov	rsi, r14
0x32a9:	mov	rdi, r13
0x32ac:	call	0x1d50


0x32ff:	test	r12, r12
0x3302:	mov	r13, rax
0x3305:	mov	eax, dword ptr [rax]
0x3307:	sete	bpl
0x330b:	or	ebp, dword ptr [rbx + 4]
0x330e:	lea	r10, [rbx + 8]
0x3312:	sub	rsp, 8
0x3316:	mov	r8d, dword ptr [rbx]
0x3319:	mov	rcx, r15
0x331c:	mov	dword ptr [rsp + 0x14], eax
0x3320:	push	qword ptr [rbx + 0x30]
0x3323:	mov	rdx, r14
0x3326:	push	qword ptr [rbx + 0x28]
0x3329:	push	r10
0x332b:	xor	esi, esi
0x332d:	mov	r9d, ebp
0x3330:	xor	edi, edi
0x3332:	mov	qword ptr [rsp + 0x40], r10
0x3337:	call	0x1d50


0x3f19:	test	rax, rax
0x3f1c:	jne	0x3f23


0x3f1e:	test	rbx, rbx
0x3f21:	jne	0x3f25


0x3f23:	pop	rbx
0x3f24:	ret	


0x3f25:	call	0x4160


0x40c9:	mov	rdx, rbx
0x40cc:	xor	esi, esi
0x40ce:	mov	rdi, rax
0x40d1:	pop	rbx
0x40d2:	jmp	0x1380


0x4124:	add	rsp, 8
0x4128:	mov	rdx, rbx
0x412b:	mov	rsi, rbp
0x412e:	pop	rbx
0x412f:	pop	rbp
0x4130:	mov	rdi, rax
0x4133:	jmp	0x13c0


0x13c0:	jmp	qword ptr [rip + 0x205b72]




0x4149:	mov	rdi, rbx
0x414c:	lea	rsi, [rax + 1]
0x4150:	pop	rbx
0x4151:	jmp	0x4110


0x393f:	lea	rdx, [rip + 0x171a]
0x3946:	mov	rcx, rax
0x3949:	mov	r8d, 0x7e3
0x394f:	mov	esi, 1
0x3954:	mov	rdi, rbp
0x3957:	xor	eax, eax
0x3959:	call	0x14b0


0x395e:	lea	rsi, [rip + 0x1463]
0x3965:	xor	edi, edi
0x3967:	mov	edx, 5
0x396c:	call	0x1300


0x3971:	mov	rsi, rbp
0x3974:	mov	rdi, rax
0x3977:	call	0x13a0


0x13a0:	jmp	qword ptr [rip + 0x205b82]




0x17dd:	mov	rdi, qword ptr [rip + 0x2058bc]
0x17e4:	mov	rdx, rax
0x17e7:	mov	rcx, rbx
0x17ea:	mov	esi, 1
0x17ef:	xor	eax, eax
0x17f1:	call	0x14b0


0x17f6:	mov	edi, ebp
0x17f8:	call	0x1490


0x1490:	jmp	qword ptr [rip + 0x205b0a]




0x180b:	mov	rdx, rbx
0x180e:	mov	rsi, rax
0x1811:	mov	edi, 1
0x1816:	xor	eax, eax
0x1818:	call	0x1450


0x1450:	jmp	qword ptr [rip + 0x205b2a]




0x3ea4:	lea	rdx, [rip + 0xeec]
0x3eab:	mov	rsi, rax
0x3eae:	mov	edi, 1
0x3eb3:	xor	eax, eax
0x3eb5:	call	0x1450


0x4177:	mov	edi, dword ptr [rip + 0x202e9b]
0x417d:	lea	rdx, [rip + 0x68c]
0x4184:	mov	rcx, rax
0x4187:	xor	esi, esi
0x4189:	xor	eax, eax
0x418b:	call	0x1460


0x1460:	jmp	qword ptr [rip + 0x205b22]




0x41d7:	cmp	rax, -3
0x41db:	mov	rbp, rax
0x41de:	jbe	0x4200


0x4200:	mov	rdx, qword ptr [rsp + 8]
0x4205:	xor	rdx, qword ptr fs:[0x28]
0x420e:	mov	rax, rbp
0x4211:	jne	0x421e


0x41e0:	test	r12, r12
0x41e3:	je	0x4200


0x4213:	add	rsp, 0x18
0x4217:	pop	rbx
0x4218:	pop	rbp
0x4219:	pop	r12
0x421b:	pop	r13
0x421d:	ret	


0x421e:	call	0x1330


0x41e5:	xor	edi, edi
0x41e7:	call	0x42b0


0x1330:	jmp	qword ptr [rip + 0x205bba]




0x423c:	mov	ebx, dword ptr [rbp]
0x423f:	mov	rdi, rbp
0x4242:	mov	r12, rax
0x4245:	call	0x4350


0x1529:	lea	rsi, [rip + 0x30ae]
0x1530:	lea	rdi, [rip + 0x307e]
0x1537:	call	0x12f0


0x12f0:	jmp	qword ptr [rip + 0x205bda]




0x42bb:	mov	rdx, rax
0x42be:	mov	eax, 1
0x42c3:	test	rdx, rdx
0x42c6:	je	0x42e5


0x42e5:	add	rsp, 8
0x42e9:	ret	


0x42c8:	lea	rdi, [rip + 0xdd1]
0x42cf:	mov	ecx, 2
0x42d4:	mov	rsi, rdx
0x42d7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x42d7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x42d9:	seta	cl
0x42dc:	sbb	cl, 0
0x42df:	xor	eax, eax
0x42e1:	test	cl, cl
0x42e3:	jne	0x42f0


0x42f0:	lea	rdi, [rip + 0xdab]
0x42f7:	mov	ecx, 6
0x42fc:	mov	rsi, rdx
0x42ff:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x42ff:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4301:	seta	al
0x4304:	sbb	al, 0
0x4306:	test	al, al
0x4308:	setne	al
0x430b:	add	rsp, 8
0x430f:	ret	


0x41ec:	test	al, al
0x41ee:	jne	0x4200


0x41f0:	movzx	eax, byte ptr [r13]
0x41f5:	mov	ebp, 1
0x41fa:	mov	dword ptr [rbx], eax
0x41fc:	nop	dword ptr [rax]
0x4200:	mov	rdx, qword ptr [rsp + 8]
0x4205:	xor	rdx, qword ptr fs:[0x28]
0x420e:	mov	rax, rbp
0x4211:	jne	0x421e


0x431e:	test	rax, rax
0x4321:	je	0x4340


0x4340:	lea	rax, [rip + 0xd61]
0x4347:	add	rsp, 8
0x434b:	ret	


0x4323:	cmp	byte ptr [rax], 0
0x4326:	lea	rdx, [rip + 0xd7b]
0x432d:	cmove	rax, rdx
0x4331:	add	rsp, 8
0x4335:	ret	


0x1c70:	movzx	edx, byte ptr [rax]
0x1c73:	and	edx, 0xffffffdf
0x1c76:	cmp	dl, 0x55
0x1c79:	je	0x1cf0


0x1cf0:	movzx	edx, byte ptr [rax + 1]
0x1cf4:	and	edx, 0xffffffdf
0x1cf7:	cmp	dl, 0x54
0x1cfa:	jne	0x1c80


0x1c7b:	cmp	dl, 0x47
0x1c7e:	je	0x1ca0


0x1cfc:	movzx	edx, byte ptr [rax + 2]
0x1d00:	and	edx, 0xffffffdf
0x1d03:	cmp	dl, 0x46
0x1d06:	jne	0x1c80


0x1c80:	lea	rax, [rip + 0x2be4]
0x1c87:	lea	rdx, [rip + 0x2bdf]
0x1c8e:	cmp	ebx, 9
0x1c91:	cmovne	rax, rdx
0x1c95:	add	rsp, 8
0x1c99:	pop	rbx
0x1c9a:	pop	rbp
0x1c9b:	ret	


0x1ca0:	movzx	edx, byte ptr [rax + 1]
0x1ca4:	and	edx, 0xffffffdf
0x1ca7:	cmp	dl, 0x42
0x1caa:	jne	0x1c80


0x1d0c:	cmp	byte ptr [rax + 3], 0x2d
0x1d10:	jne	0x1c80


0x1cac:	cmp	byte ptr [rax + 2], 0x31
0x1cb0:	jne	0x1c80


0x1d16:	cmp	byte ptr [rax + 4], 0x38
0x1d1a:	jne	0x1c80


0x1cb2:	cmp	byte ptr [rax + 3], 0x38
0x1cb6:	jne	0x1c80


0x1d20:	cmp	byte ptr [rax + 5], 0
0x1d24:	jne	0x1c80


0x1cb8:	cmp	byte ptr [rax + 4], 0x30
0x1cbc:	jne	0x1c80


0x1d2a:	cmp	byte ptr [rbp], 0x60
0x1d2e:	lea	rax, [rip + 0x2b27]
0x1d35:	lea	rdx, [rip + 0x2b24]
0x1d3c:	cmovne	rax, rdx
0x1d40:	add	rsp, 8
0x1d44:	pop	rbx
0x1d45:	pop	rbp
0x1d46:	ret	


0x1cbe:	cmp	byte ptr [rax + 5], 0x33
0x1cc2:	jne	0x1c80


0x1cc4:	cmp	byte ptr [rax + 6], 0x30
0x1cc8:	jne	0x1c80


0x1cca:	cmp	byte ptr [rax + 7], 0
0x1cce:	jne	0x1c80


0x1cd0:	cmp	byte ptr [rbp], 0x60
0x1cd4:	lea	rax, [rip + 0x2b89]
0x1cdb:	lea	rdx, [rip + 0x2b86]
0x1ce2:	cmovne	rax, rdx
0x1ce6:	add	rsp, 8
0x1cea:	pop	rbx
0x1ceb:	pop	rbp
0x1cec:	ret	


0x4443:	mov	edx, r12d
0x4446:	mov	rsi, rbp
0x4449:	mov	edi, eax
0x444b:	call	0x1370


0x1370:	jmp	qword ptr [rip + 0x205b9a]




0x435c:	test	eax, eax
0x435e:	mov	rdi, rbx
0x4361:	js	0x43b7


0x43b7:	pop	rbx
0x43b8:	pop	rbp
0x43b9:	pop	r12
0x43bb:	jmp	0x12e0


0x4363:	call	0x1410


0x12e0:	jmp	qword ptr [rip + 0x205be2]




0x4368:	test	eax, eax
0x436a:	jne	0x4398


0x436c:	mov	rdi, rbx
0x436f:	call	0x43d0


0x4398:	mov	rdi, rbx
0x439b:	call	0x13d0


0x43a0:	xor	esi, esi
0x43a2:	mov	edx, 1
0x43a7:	mov	edi, eax
0x43a9:	call	0x1370


0x43ae:	cmp	rax, -1
0x43b2:	jne	0x436c


0x43b4:	mov	rdi, rbx
0x43b7:	pop	rbx
0x43b8:	pop	rbp
0x43b9:	pop	r12
0x43bb:	jmp	0x12e0


0x4450:	cmp	rax, -1
0x4454:	je	0x4462


0x4462:	pop	rbx
0x4463:	pop	rbp
0x4464:	pop	r12
0x4466:	ret	


0x4456:	and	dword ptr [rbx], 0xffffffef
0x4459:	mov	qword ptr [rbx + 0x90], rax
0x4460:	xor	eax, eax
0x4462:	pop	rbx
0x4463:	pop	rbp
0x4464:	pop	r12
0x4466:	ret	


0x153c:	lea	rdi, [rip + 0x3072]
0x1543:	call	0x12d0


0x12d0:	jmp	qword ptr [rip + 0x205bea]




0x4190:	call	0x1260


0x3eba:	lea	rsi, [rip + 0xeec]
0x3ec1:	mov	edx, 5
0x3ec6:	xor	edi, edi
0x3ec8:	call	0x1300


0x3ecd:	lea	rcx, [rip + 0x884]
0x3ed4:	lea	rdx, [rip + 0x6d6]
0x3edb:	mov	rsi, rax
0x3ede:	mov	edi, 1
0x3ee3:	xor	eax, eax
0x3ee5:	call	0x1450


0x3eea:	mov	rbx, qword ptr [rip + 0x203197]
0x3ef1:	lea	rsi, [rip + 0x10e8]
0x3ef8:	xor	edi, edi
0x3efa:	mov	edx, 5
0x3eff:	call	0x1300


0x3f04:	mov	rsi, rbx
0x3f07:	mov	rdi, rax
0x3f0a:	pop	rbx
0x3f0b:	jmp	0x13a0


0x181d:	mov	rbx, qword ptr [rip + 0x205864]
0x1824:	lea	rsi, [rip + 0x2e3d]
0x182b:	mov	edx, 5
0x1830:	xor	edi, edi
0x1832:	call	0x1300


0x1837:	mov	rsi, rbx
0x183a:	mov	rdi, rax
0x183d:	call	0x13a0


0x1842:	mov	rbx, qword ptr [rip + 0x20583f]
0x1849:	lea	rsi, [rip + 0x2ea0]
0x1850:	mov	edx, 5
0x1855:	xor	edi, edi
0x1857:	call	0x1300


0x185c:	mov	rsi, rbx
0x185f:	mov	rdi, rax
0x1862:	call	0x13a0


0x1867:	mov	rbx, qword ptr [rip + 0x20581a]
0x186e:	lea	rsi, [rip + 0x2eab]
0x1875:	mov	edx, 5
0x187a:	xor	edi, edi
0x187c:	call	0x1300


0x1881:	mov	rsi, rbx
0x1884:	mov	rdi, rax
0x1887:	lea	rbx, [rip + 0x2d8f]
0x188e:	call	0x13a0


0x1893:	lea	rax, [rip + 0x2ca1]
0x189a:	lea	rcx, [rip + 0x2cdb]
0x18a1:	mov	qword ptr [rsp + 0x60], 0
0x18aa:	mov	qword ptr [rsp + 0x68], 0
0x18b3:	mov	rdx, rsp
0x18b6:	mov	qword ptr [rsp], rax
0x18ba:	lea	rax, [rip + 0x2c7c]
0x18c1:	mov	qword ptr [rsp + 0x30], rcx
0x18c6:	lea	rcx, [rip + 0x2cb9]
0x18cd:	mov	qword ptr [rsp + 8], rax
0x18d2:	lea	rax, [rip + 0x2cdc]
0x18d9:	mov	qword ptr [rsp + 0x40], rcx
0x18de:	lea	rcx, [rip + 0x2cab]
0x18e5:	mov	qword ptr [rsp + 0x10], rax
0x18ea:	lea	rax, [rip + 0x2c5c]
0x18f1:	mov	qword ptr [rsp + 0x50], rcx
0x18f6:	mov	qword ptr [rsp + 0x18], rax
0x18fb:	lea	rax, [rip + 0x2c61]
0x1902:	mov	qword ptr [rsp + 0x20], rax
0x1907:	lea	rax, [rip + 0x2c5f]
0x190e:	mov	qword ptr [rsp + 0x28], rax
0x1913:	mov	qword ptr [rsp + 0x38], rax
0x1918:	mov	qword ptr [rsp + 0x48], rax
0x191d:	mov	qword ptr [rsp + 0x58], rax
0x1922:	nop	word ptr [rax + rax]
0x1928:	add	rdx, 0x10
0x192c:	mov	rdi, qword ptr [rdx]
0x192f:	test	rdi, rdi
0x1932:	je	0x1947


0x1947:	mov	r12, qword ptr [rdx + 8]
0x194b:	xor	edi, edi
0x194d:	mov	edx, 5
0x1952:	lea	rsi, [rip + 0x2c41]
0x1959:	test	r12, r12
0x195c:	je	0x1a23


0x1934:	mov	ecx, 4
0x1939:	mov	rsi, rbx
0x193c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1a23:	call	0x1300


0x1962:	call	0x1300


0x193c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x193e:	seta	al
0x1941:	sbb	al, 0
0x1943:	test	al, al
0x1945:	jne	0x1928


0x1928:	add	rdx, 0x10
0x192c:	mov	rdi, qword ptr [rdx]
0x192f:	test	rdi, rdi
0x1932:	je	0x1947


0x1967:	lea	rcx, [rip + 0x2dea]
0x196e:	lea	rdx, [rip + 0x2c3c]
0x1975:	mov	rsi, rax
0x1978:	mov	edi, 1
0x197d:	xor	eax, eax
0x197f:	call	0x1450


0x1984:	xor	esi, esi
0x1986:	mov	edi, 5
0x198b:	call	0x1440


0x1990:	test	rax, rax
0x1993:	je	0x19b1


0x19b1:	lea	rsi, [rip + 0x2c0b]
0x19b8:	xor	edi, edi
0x19ba:	mov	edx, 5
0x19bf:	call	0x1300


0x1995:	lea	rsi, [rip + 0x2c23]
0x199c:	mov	edx, 3
0x19a1:	mov	rdi, rax
0x19a4:	call	0x1280


0x1280:	jmp	qword ptr [rip + 0x205c12]




0x19c4:	lea	rcx, [rip + 0x2c52]
0x19cb:	lea	rdx, [rip + 0x2d86]
0x19d2:	mov	rsi, rax
0x19d5:	mov	edi, 1
0x19da:	xor	eax, eax
0x19dc:	call	0x1450


0x19e1:	cmp	r12, rbx
0x19e4:	lea	rcx, [rip + 0x2b6c]
0x19eb:	lea	rbx, [rip + 0x2b48]
0x19f2:	cmove	rbx, rcx
0x19f6:	lea	rsi, [rip + 0x2dcb]
0x19fd:	xor	edi, edi
0x19ff:	mov	edx, 5
0x1a04:	call	0x1300


0x1a09:	mov	rcx, rbx
0x1a0c:	mov	rsi, rax
0x1a0f:	mov	rdx, r12
0x1a12:	mov	edi, 1
0x1a17:	xor	eax, eax
0x1a19:	call	0x1450


0x1a1e:	jmp	0x17f6


0x1a28:	lea	rcx, [rip + 0x2d29]
0x1a2f:	lea	rdx, [rip + 0x2b7b]
0x1a36:	mov	rsi, rax
0x1a39:	mov	edi, 1
0x1a3e:	xor	eax, eax
0x1a40:	call	0x1450


0x1a45:	xor	esi, esi
0x1a47:	mov	edi, 5
0x1a4c:	call	0x1440


0x1a51:	test	rax, rax
0x1a54:	je	0x1a6e


0x1a6e:	lea	rsi, [rip + 0x2b4e]
0x1a75:	mov	edx, 5
0x1a7a:	xor	edi, edi
0x1a7c:	lea	r12, [rip + 0x2b9a]
0x1a83:	lea	rbx, [rip + 0x2acd]
0x1a8a:	call	0x1300


0x1a56:	lea	rsi, [rip + 0x2b62]
0x1a5d:	mov	edx, 3
0x1a62:	mov	rdi, rax
0x1a65:	call	0x1280


0x1a8f:	lea	rcx, [rip + 0x2b87]
0x1a96:	lea	rdx, [rip + 0x2cbb]
0x1a9d:	mov	rsi, rax
0x1aa0:	mov	edi, 1
0x1aa5:	xor	eax, eax
0x1aa7:	call	0x1450


0x1aac:	jmp	0x19f6


0x19f6:	lea	rsi, [rip + 0x2dcb]
0x19fd:	xor	edi, edi
0x19ff:	mov	edx, 5
0x1a04:	call	0x1300


0x397c:	cmp	r12, 9
0x3980:	ja	0x3cc0


0x3986:	lea	rdx, [rip + 0x169b]
0x398d:	movsxd	rax, dword ptr [rdx + r12*4]
0x3991:	add	rax, rdx
0x3994:	jmp	rax


0x3cc0:	mov	r10, qword ptr [rbx + 0x40]
0x3cc4:	mov	r9, qword ptr [rbx + 0x38]
0x3cc8:	mov	edx, 5
0x3ccd:	mov	rax, qword ptr [rbx + 0x10]
0x3cd1:	mov	r8, qword ptr [rbx + 8]
0x3cd5:	lea	rsi, [rip + 0x12c4]
0x3cdc:	mov	r13, qword ptr [rbx + 0x30]
0x3ce0:	mov	r12, qword ptr [rbx + 0x28]
0x3ce4:	mov	r15, qword ptr [rbx + 0x20]
0x3ce8:	mov	r14, qword ptr [rbx + 0x18]
0x3cec:	mov	qword ptr [rsp + 0x18], r10
0x3cf1:	mov	qword ptr [rsp + 0x10], r9
0x3cf6:	mov	qword ptr [rsp], rax
0x3cfa:	mov	qword ptr [rsp + 8], r8
0x3cff:	mov	rbx, qword ptr [rbx]
0x3d02:	jmp	0x3a92


0x3a92:	xor	edi, edi
0x3a94:	call	0x1300


0x3a99:	mov	r10, qword ptr [rsp + 0x18]
0x3a9e:	push	r10
0x3aa0:	jmp	0x39e4


0x39e4:	mov	r9, qword ptr [rsp + 0x18]
0x39e9:	mov	rdx, rax
0x39ec:	mov	rcx, rbx
0x39ef:	mov	esi, 1
0x39f4:	mov	rdi, rbp
0x39f7:	xor	eax, eax
0x39f9:	push	r9
0x39fb:	push	r13
0x39fd:	push	r12
0x39ff:	push	r15
0x3a01:	push	r14
0x3a03:	mov	r9, qword ptr [rsp + 0x30]
0x3a08:	mov	r8, qword ptr [rsp + 0x38]
0x3a0d:	call	0x14b0


0x3a12:	add	rsp, 0x30
0x3a16:	add	rsp, 0x28
0x3a1a:	pop	rbx
0x3a1b:	pop	rbp
0x3a1c:	pop	r12
0x3a1e:	pop	r13
0x3a20:	pop	r14
0x3a22:	pop	r15
0x3a24:	ret	


0x316d:	mov	dword ptr [rbp], r12d
0x3171:	pop	rbx
0x3172:	pop	rbp
0x3173:	pop	r12
0x3175:	ret	


0x302e:	mov	dword ptr [rip + 0x204023], r12d
0x3035:	mov	eax, dword ptr [rbp + 4]
0x3038:	shl	r15, 4
0x303c:	sub	rsp, 8
0x3040:	add	rbx, r15
0x3043:	lea	r15, [rbp + 8]
0x3047:	mov	r8d, dword ptr [rbp]
0x304b:	mov	r11, qword ptr [rbx]
0x304e:	mov	r12, qword ptr [rbx + 8]
0x3052:	mov	rcx, r14
0x3055:	or	eax, 1
0x3058:	mov	dword ptr [rsp + 0x24], eax
0x305c:	push	qword ptr [rbp + 0x30]
0x305f:	mov	r9d, eax
0x3062:	push	qword ptr [rbp + 0x28]
0x3065:	push	r15
0x3067:	mov	rsi, r11
0x306a:	mov	rdx, qword ptr [rsp + 0x28]
0x306f:	mov	rdi, r12
0x3072:	mov	qword ptr [rsp + 0x30], r11
0x3077:	call	0x1d50


0x4407:	mov	rdi, rbx
0x440a:	pop	rbx
0x440b:	jmp	0x13f0


0x3e56:	mov	rax, qword ptr [rsp + 0x78]
0x3e5b:	xor	rax, qword ptr fs:[0x28]
0x3e64:	jne	0x3e70


0x3e66:	add	rsp, 0xb8
0x3e6d:	pop	rbx
0x3e6e:	pop	rbp
0x3e6f:	ret	


0x3e70:	call	0x1330


0x3d80:	mov	rax, qword ptr [rsp + 0x58]
0x3d85:	xor	rax, qword ptr fs:[0x28]
0x3d8e:	jne	0x3d95


0x3d90:	add	rsp, 0x68
0x3d94:	ret	


0x3d95:	call	0x1330


0x1a6a:	test	eax, eax
0x1a6c:	jne	0x1ab1


0x1ab1:	lea	r12, [rip + 0x2b65]
0x1ab8:	mov	r13, qword ptr [rip + 0x2055c9]
0x1abf:	lea	rsi, [rip + 0x2cba]
0x1ac6:	xor	edi, edi
0x1ac8:	mov	edx, 5
0x1acd:	call	0x1300


0x1ad2:	mov	rsi, r13
0x1ad5:	mov	rdi, rax
0x1ad8:	call	0x13a0


0x1add:	jmp	0x19b1


0x19a9:	test	eax, eax
0x19ab:	jne	0x1ab8


0x1ab8:	mov	r13, qword ptr [rip + 0x2055c9]
0x1abf:	lea	rsi, [rip + 0x2cba]
0x1ac6:	xor	edi, edi
0x1ac8:	mov	edx, 5
0x1acd:	call	0x1300


0x1548:	lea	rdi, [rip + 0x5c1]
0x154f:	mov	dword ptr [rip + 0x205abf], 3
0x1559:	call	0x44f0


0x155e:	mov	byte ptr [rip + 0x205b44], 0
0x1565:	lea	rdx, [rip + 0x32a5]
0x156c:	xor	r8d, r8d
0x156f:	mov	rcx, r12
0x1572:	mov	rsi, rbx
0x1575:	mov	edi, ebp
0x1577:	call	0x1340


0x1340:	jmp	qword ptr [rip + 0x205bb2]




0x4374:	test	eax, eax
0x4376:	je	0x43b4


0x4378:	call	0x1270


0x437d:	mov	r12d, dword ptr [rax]
0x4380:	mov	rdi, rbx
0x4383:	mov	rbp, rax
0x4386:	call	0x12e0


0x438b:	test	r12d, r12d
0x438e:	jne	0x43c0


0x4390:	pop	rbx
0x4391:	pop	rbp
0x4392:	pop	r12
0x4394:	ret	


0x43c0:	mov	dword ptr [rbp], r12d
0x43c4:	mov	eax, 0xffffffff
0x43c9:	jmp	0x4390


0x424a:	and	ebx, 0x20
0x424d:	test	ebx, ebx
0x424f:	jne	0x4268


0x4251:	test	eax, eax
0x4253:	je	0x425f


0x4268:	test	eax, eax
0x426a:	jne	0x4288


0x425f:	pop	rbx
0x4260:	pop	rbp
0x4261:	pop	r12
0x4263:	ret	


0x4255:	test	r12, r12
0x4258:	mov	eax, 0xffffffff
0x425d:	je	0x4298


0x426c:	call	0x1270


0x4288:	pop	rbx
0x4289:	mov	eax, 0xffffffff
0x428e:	pop	rbp
0x428f:	pop	r12
0x4291:	ret	


0x4298:	call	0x1270


0x429d:	cmp	dword ptr [rax], 9
0x42a0:	pop	rbx
0x42a1:	pop	rbp
0x42a2:	pop	r12
0x42a4:	setne	al
0x42a7:	movzx	eax, al
0x42aa:	neg	eax
0x42ac:	ret	


0x4271:	mov	dword ptr [rax], 0
0x4277:	mov	eax, 0xffffffff
0x427c:	pop	rbx
0x427d:	pop	rbp
0x427e:	pop	r12
0x4280:	ret	


0x1b22:	test	eax, eax
0x1b24:	je	0x1b3c


0x1b3c:	mov	rdi, qword ptr [rip + 0x20555d]
0x1b43:	call	0x4230


0x1b26:	call	0x1270


0x1b2b:	cmp	byte ptr [rip + 0x20557e], 0
0x1b32:	mov	rbx, rax
0x1b35:	je	0x1b53


0x1b53:	lea	rsi, [rip + 0x2ca6]
0x1b5a:	xor	edi, edi
0x1b5c:	mov	edx, 5
0x1b61:	call	0x1300


0x1b37:	cmp	dword ptr [rax], 0x20
0x1b3a:	jne	0x1b53


0x1b66:	mov	rdi, qword ptr [rip + 0x20554b]
0x1b6d:	mov	rbp, rax
0x1b70:	test	rdi, rdi
0x1b73:	je	0x1b9d


0x1b9d:	mov	esi, dword ptr [rbx]
0x1b9f:	lea	rdx, [rip + 0x2c6a]
0x1ba6:	mov	rcx, rax
0x1ba9:	xor	edi, edi
0x1bab:	xor	eax, eax
0x1bad:	call	0x1460


0x1b75:	call	0x36d0


0x1bb2:	jmp	0x1b92


0x1b92:	mov	edi, dword ptr [rip + 0x205480]
0x1b98:	call	0x1290


0x1290:	jmp	qword ptr [rip + 0x205c0a]




0x1b48:	test	eax, eax
0x1b4a:	jne	0x1b92


0x1b4c:	add	rsp, 8
0x1b50:	pop	rbx
0x1b51:	pop	rbp
0x1b52:	ret	


0x157c:	cmp	eax, -1
0x157f:	je	0x15ec


0x15ec:	movsxd	rax, dword ptr [rip + 0x205a9d]
0x15f3:	cmp	eax, ebp
0x15f5:	jl	0x1657


0x1581:	cmp	eax, 0xffffff7e
0x1586:	je	0x1650


0x1657:	mov	rdi, qword ptr [rbx + rax*8]
0x165b:	call	0x38d0


0x15f7:	call	0x1270


0x1650:	xor	edi, edi
0x1652:	call	0x17a0


0x158c:	cmp	eax, 0x73
0x158f:	je	0x15e0


0x15e0:	mov	byte ptr [rip + 0x205ac2], 1
0x15e7:	jmp	0x1565


0x1591:	cmp	eax, 0xffffff7d
0x1596:	je	0x15a8


0x1565:	lea	rdx, [rip + 0x32a5]
0x156c:	xor	r8d, r8d
0x156f:	mov	rcx, r12
0x1572:	mov	rsi, rbx
0x1575:	mov	edi, ebp
0x1577:	call	0x1340


0x15a8:	mov	rdi, qword ptr [rip + 0x205ad9]
0x15af:	mov	rcx, qword ptr [rip + 0x205a5a]
0x15b6:	lea	r8, [rip + 0x3039]
0x15bd:	lea	rdx, [rip + 0x2fed]
0x15c4:	lea	rsi, [rip + 0x3052]
0x15cb:	xor	r9d, r9d
0x15ce:	xor	eax, eax
0x15d0:	call	0x3db0


0x1598:	mov	edi, 2
0x159d:	call	0x17a0


0x15d5:	xor	edi, edi
0x15d7:	call	0x1490


0x15fc:	xor	edi, edi
0x15fe:	cmp	byte ptr [rip + 0x205aa4], 0
0x1605:	mov	dword ptr [rax], 2
0x160b:	jne	0x1628


0x160d:	call	0x1420


0x1628:	xor	ebx, ebx
0x162a:	call	0x12c0


0x1420:	jmp	qword ptr [rip + 0x205b42]


0x12c0:	jmp	qword ptr [rip + 0x205bf2]






0x162f:	test	eax, eax
0x1631:	sete	bl
0x1634:	jmp	0x1621


0x1621:	mov	eax, ebx
0x1623:	pop	rbx
0x1624:	pop	rbp
0x1625:	pop	r12
0x1627:	ret	


0x1612:	xor	ebx, ebx
0x1614:	test	rax, rax
0x1617:	je	0x1636


0x1636:	lea	rsi, [rip + 0x2fda]
0x163d:	mov	edx, 5
0x1642:	xor	edi, edi
0x1644:	mov	ebx, 1
0x1649:	call	0x1300


0x1619:	mov	rdi, rax
0x161c:	call	0x12b0


0x12b0:	jmp	qword ptr [rip + 0x205bfa]




0x164e:	jmp	0x1619


0x1660:	lea	rsi, [rip + 0x2f9f]
0x1667:	mov	rbx, rax
0x166a:	xor	edi, edi
0x166c:	mov	edx, 5
0x1671:	call	0x1300


0x1676:	mov	rcx, rbx
0x1679:	mov	rdx, rax
0x167c:	xor	esi, esi
0x167e:	xor	edi, edi
0x1680:	xor	eax, eax
0x1682:	call	0x1460


0x1687:	jmp	0x1598


0x1b7a:	mov	esi, dword ptr [rbx]
0x1b7c:	lea	rdx, [rip + 0x2c89]
0x1b83:	mov	rcx, rax
0x1b86:	mov	r8, rbp
0x1b89:	xor	edi, edi
0x1b8b:	xor	eax, eax
0x1b8d:	call	0x1460


0x307c:	add	rsp, 0x20
0x3080:	mov	r11, qword ptr [rsp + 0x10]
0x3085:	cmp	r11, rax
0x3088:	ja	0x30f1


0x308a:	lea	rsi, [rax + 1]
0x308e:	lea	rax, [rip + 0x20404b]
0x3095:	cmp	r12, rax
0x3098:	mov	qword ptr [rbx], rsi
0x309b:	je	0x30af


0x30f1:	mov	eax, dword ptr [rsp + 0x18]
0x30f5:	mov	dword ptr [r13], eax
0x30f9:	add	rsp, 0x28
0x30fd:	mov	rax, r12
0x3100:	pop	rbx
0x3101:	pop	rbp
0x3102:	pop	r12
0x3104:	pop	r13
0x3106:	pop	r14
0x3108:	pop	r15
0x310a:	ret	


0x30af:	mov	rdi, rsi
0x30b2:	mov	qword ptr [rsp + 0x10], rsi
0x30b7:	call	0x3f10


0x309d:	mov	rdi, r12
0x30a0:	mov	qword ptr [rsp + 0x10], rsi
0x30a5:	call	0x1250


0x30aa:	mov	rsi, qword ptr [rsp + 0x10]
0x30af:	mov	rdi, rsi
0x30b2:	mov	qword ptr [rsp + 0x10], rsi
0x30b7:	call	0x3f10


0x30bc:	sub	rsp, 8
0x30c0:	mov	qword ptr [rbx + 8], rax
0x30c4:	mov	r8d, dword ptr [rbp]
0x30c8:	push	qword ptr [rbp + 0x30]
0x30cb:	push	qword ptr [rbp + 0x28]
0x30ce:	mov	rcx, r14
0x30d1:	push	r15
0x30d3:	mov	r9d, dword ptr [rsp + 0x3c]
0x30d8:	mov	rdi, rax
0x30db:	mov	rdx, qword ptr [rsp + 0x28]
0x30e0:	mov	rsi, qword ptr [rsp + 0x30]
0x30e5:	mov	r12, rax
0x30e8:	call	0x1d50


0x3802:	mov	rdi, qword ptr [rsp + 0x38]
0x3807:	xor	rdi, qword ptr fs:[0x28]
0x3810:	jne	0x381c


0x3812:	add	rsp, 0x48
0x3816:	ret	


0x381c:	call	0x1330


0x354f:	mov	rcx, qword ptr [rsp + 0x38]
0x3554:	xor	rcx, qword ptr fs:[0x28]
0x355d:	jne	0x3569


0x355f:	add	rsp, 0x48
0x3563:	ret	


0x3569:	call	0x1330


0x35db:	mov	rdx, qword ptr [rsp + 0x38]
0x35e0:	xor	rdx, qword ptr fs:[0x28]
0x35e9:	jne	0x35f5


0x35eb:	add	rsp, 0x48
0x35ef:	ret	


0x35f5:	call	0x1330


0x376f:	mov	rcx, qword ptr [rsp + 0x38]
0x3774:	xor	rcx, qword ptr fs:[0x28]
0x377d:	jne	0x3789


0x377f:	add	rsp, 0x48
0x3783:	ret	


0x3789:	call	0x1330


0x369e:	mov	rsi, qword ptr [rsp + 0x38]
0x36a3:	xor	rsi, qword ptr fs:[0x28]
0x36ac:	jne	0x36b3


0x36ae:	add	rsp, 0x48
0x36b2:	ret	


0x36b3:	call	0x1330


0x30ed:	add	rsp, 0x20
0x30f1:	mov	eax, dword ptr [rsp + 0x18]
0x30f5:	mov	dword ptr [r13], eax
0x30f9:	add	rsp, 0x28
0x30fd:	mov	rax, r12
0x3100:	pop	rbx
0x3101:	pop	rbp
0x3102:	pop	r12
0x3104:	pop	r13
0x3106:	pop	r14
0x3108:	pop	r15
0x310a:	ret	


0x333c:	lea	rsi, [rax + 1]
0x3340:	mov	qword ptr [rsp + 0x48], rax
0x3345:	add	rsp, 0x20
0x3349:	mov	rdi, rsi
0x334c:	mov	qword ptr [rsp + 0x18], rsi
0x3351:	call	0x3f10


0x3356:	mov	qword ptr [rsp + 0x10], rax
0x335b:	sub	rsp, 8
0x335f:	push	qword ptr [rbx + 0x30]
0x3362:	push	qword ptr [rbx + 0x28]
0x3365:	mov	r10, qword ptr [rsp + 0x38]
0x336a:	mov	r9d, ebp
0x336d:	mov	r8d, dword ptr [rbx]
0x3370:	mov	rcx, r15
0x3373:	mov	rdx, r14
0x3376:	mov	rdi, rax
0x3379:	push	r10
0x337b:	mov	rsi, qword ptr [rsp + 0x38]
0x3380:	call	0x1d50


0x3385:	mov	eax, dword ptr [rsp + 0x2c]
0x3389:	add	rsp, 0x20
0x338d:	test	r12, r12
0x3390:	mov	dword ptr [r13], eax
0x3394:	je	0x339f


0x339f:	mov	rax, qword ptr [rsp + 0x10]
0x33a4:	add	rsp, 0x38
0x33a8:	pop	rbx
0x33a9:	pop	rbp
0x33aa:	pop	r12
0x33ac:	pop	r13
0x33ae:	pop	r14
0x33b0:	pop	r15
0x33b2:	ret	


0x3396:	mov	r11, qword ptr [rsp + 0x28]
0x339b:	mov	qword ptr [r12], r11
0x339f:	mov	rax, qword ptr [rsp + 0x10]
0x33a4:	add	rsp, 0x38
0x33a8:	pop	rbx
0x33a9:	pop	rbp
0x33aa:	pop	r12
0x33ac:	pop	r13
0x33ae:	pop	r14
0x33b0:	pop	r15
0x33b2:	ret	


0x32b1:	mov	dword ptr [rbp], r12d
0x32b5:	add	rsp, 0x38
0x32b9:	pop	rbx
0x32ba:	pop	rbp
0x32bb:	pop	r12
0x32bd:	pop	r13
0x32bf:	pop	r14
0x32c1:	pop	r15
0x32c3:	ret	


0x44bd:	add	rbx, 1
0x44c1:	cmp	rbp, rbx
0x44c4:	jne	0x44b0


0x44b0:	mov	rdx, r15
0x44b3:	mov	rsi, r14
0x44b6:	mov	edi, r13d
0x44b9:	call	qword ptr [r12 + rbx*8]






0x3b80:	lea	rsi, [rip + 0x1311]
0x3b87:	mov	edx, 5
0x3b8c:	xor	edi, edi
0x3b8e:	mov	r14, qword ptr [rbx + 0x18]
0x3b92:	mov	r13, qword ptr [rbx + 0x10]
0x3b96:	mov	r12, qword ptr [rbx + 8]
0x3b9a:	mov	rbx, qword ptr [rbx]
0x3b9d:	call	0x1300


0x39a0:	mov	r9, qword ptr [rbx + 0x38]
0x39a4:	mov	rax, qword ptr [rbx + 0x10]
0x39a8:	lea	rsi, [rip + 0x1589]
0x39af:	mov	r8, qword ptr [rbx + 8]
0x39b3:	mov	edx, 5
0x39b8:	xor	edi, edi
0x39ba:	mov	r13, qword ptr [rbx + 0x30]
0x39be:	mov	r12, qword ptr [rbx + 0x28]
0x39c2:	mov	qword ptr [rsp + 0x10], r9
0x39c7:	mov	r15, qword ptr [rbx + 0x20]
0x39cb:	mov	r14, qword ptr [rbx + 0x18]
0x39cf:	mov	qword ptr [rsp], rax
0x39d3:	mov	qword ptr [rsp + 8], r8
0x39d8:	mov	rbx, qword ptr [rbx]
0x39db:	call	0x1300


0x3aa8:	mov	rbx, qword ptr [rbx]
0x3aab:	lea	rsi, [rip + 0x128d]
0x3ab2:	mov	edx, 5
0x3ab7:	xor	edi, edi
0x3ab9:	call	0x1300


0x3ae8:	mov	r12, qword ptr [rbx + 8]
0x3aec:	lea	rsi, [rip + 0x125c]
0x3af3:	mov	rbx, qword ptr [rbx]
0x3af6:	mov	edx, 5
0x3afb:	xor	edi, edi
0x3afd:	call	0x1300


0x3c08:	mov	r8, qword ptr [rbx + 8]
0x3c0c:	mov	r12, qword ptr [rbx + 0x28]
0x3c10:	lea	rsi, [rip + 0x12c9]
0x3c17:	mov	r15, qword ptr [rbx + 0x20]
0x3c1b:	mov	r14, qword ptr [rbx + 0x18]
0x3c1f:	mov	edx, 5
0x3c24:	mov	r13, qword ptr [rbx + 0x10]
0x3c28:	xor	edi, edi
0x3c2a:	mov	rbx, qword ptr [rbx]
0x3c2d:	mov	qword ptr [rsp], r8
0x3c31:	call	0x1300


0x3b30:	mov	r13, qword ptr [rbx + 0x10]
0x3b34:	mov	r12, qword ptr [rbx + 8]
0x3b38:	lea	rsi, [rip + 0x1227]
0x3b3f:	mov	rbx, qword ptr [rbx]
0x3b42:	mov	edx, 5
0x3b47:	xor	edi, edi
0x3b49:	call	0x1300


0x3c70:	mov	r9, qword ptr [rbx + 0x10]
0x3c74:	mov	r13, qword ptr [rbx + 0x30]
0x3c78:	lea	rsi, [rip + 0x1289]
0x3c7f:	mov	r12, qword ptr [rbx + 0x28]
0x3c83:	mov	r15, qword ptr [rbx + 0x20]
0x3c87:	mov	edx, 5
0x3c8c:	mov	r14, qword ptr [rbx + 0x18]
0x3c90:	mov	r8, qword ptr [rbx + 8]
0x3c94:	xor	edi, edi
0x3c96:	mov	qword ptr [rsp + 8], r9
0x3c9b:	mov	rbx, qword ptr [rbx]
0x3c9e:	mov	qword ptr [rsp], r8
0x3ca2:	call	0x1300


0x3a50:	mov	r10, qword ptr [rbx + 0x40]
0x3a54:	mov	r9, qword ptr [rbx + 0x38]
0x3a58:	lea	rsi, [rip + 0x1509]
0x3a5f:	mov	rax, qword ptr [rbx + 0x10]
0x3a63:	mov	r8, qword ptr [rbx + 8]
0x3a67:	mov	edx, 5
0x3a6c:	mov	r13, qword ptr [rbx + 0x30]
0x3a70:	mov	r12, qword ptr [rbx + 0x28]
0x3a74:	mov	r15, qword ptr [rbx + 0x20]
0x3a78:	mov	r14, qword ptr [rbx + 0x18]
0x3a7c:	mov	rbx, qword ptr [rbx]
0x3a7f:	mov	qword ptr [rsp + 0x18], r10
0x3a84:	mov	qword ptr [rsp + 0x10], r9
0x3a89:	mov	qword ptr [rsp], rax
0x3a8d:	mov	qword ptr [rsp + 8], r8
0x3a92:	xor	edi, edi
0x3a94:	call	0x1300


0x3a16:	add	rsp, 0x28
0x3a1a:	pop	rbx
0x3a1b:	pop	rbp
0x3a1c:	pop	r12
0x3a1e:	pop	r13
0x3a20:	pop	r14
0x3a22:	pop	r15
0x3a24:	ret	


0x3bd8:	mov	r15, qword ptr [rbx + 0x20]
0x3bdc:	lea	rsi, [rip + 0x12d5]
0x3be3:	mov	edx, 5
0x3be8:	xor	edi, edi
0x3bea:	mov	r14, qword ptr [rbx + 0x18]
0x3bee:	mov	r13, qword ptr [rbx + 0x10]
0x3bf2:	mov	r12, qword ptr [rbx + 8]
0x3bf6:	mov	rbx, qword ptr [rbx]
0x3bf9:	call	0x1300


0x3bfe:	push	r15
0x3c00:	jmp	0x3ba6


0x3ba6:	push	r14
0x3ba8:	mov	rdx, rax
0x3bab:	mov	r9, r13
0x3bae:	mov	r8, r12
0x3bb1:	mov	rcx, rbx
0x3bb4:	mov	rdi, rbp
0x3bb7:	mov	esi, 1
0x3bbc:	xor	eax, eax
0x3bbe:	call	0x14b0


0x3bc3:	pop	rax
0x3bc4:	pop	rdx
0x3bc5:	add	rsp, 0x28
0x3bc9:	pop	rbx
0x3bca:	pop	rbp
0x3bcb:	pop	r12
0x3bcd:	pop	r13
0x3bcf:	pop	r14
0x3bd1:	pop	r15
0x3bd3:	ret	


0x3ca7:	push	r13
0x3ca9:	push	r12
0x3cab:	push	r15
0x3cad:	push	r14
0x3caf:	mov	r9, qword ptr [rsp + 0x28]
0x3cb4:	jmp	0x3c43


0x3c43:	mov	r8, qword ptr [rsp + 0x20]
0x3c48:	mov	rcx, rbx
0x3c4b:	mov	rdx, rax
0x3c4e:	mov	rdi, rbp
0x3c51:	mov	esi, 1
0x3c56:	xor	eax, eax
0x3c58:	call	0x14b0


0x3c5d:	add	rsp, 0x20
0x3c61:	add	rsp, 0x28
0x3c65:	pop	rbx
0x3c66:	pop	rbp
0x3c67:	pop	r12
0x3c69:	pop	r13
0x3c6b:	pop	r14
0x3c6d:	pop	r15
0x3c6f:	ret	


0x3b4e:	add	rsp, 0x28
0x3b52:	mov	r9, r13
0x3b55:	mov	r8, r12
0x3b58:	mov	rcx, rbx
0x3b5b:	mov	rdi, rbp
0x3b5e:	mov	rdx, rax
0x3b61:	pop	rbx
0x3b62:	pop	rbp
0x3b63:	pop	r12
0x3b65:	pop	r13
0x3b67:	pop	r14
0x3b69:	pop	r15
0x3b6b:	mov	esi, 1
0x3b70:	xor	eax, eax
0x3b72:	jmp	0x14b0


0x3c36:	sub	rsp, 8
0x3c3a:	mov	r9, r13
0x3c3d:	push	r12
0x3c3f:	push	r15
0x3c41:	push	r14
0x3c43:	mov	r8, qword ptr [rsp + 0x20]
0x3c48:	mov	rcx, rbx
0x3c4b:	mov	rdx, rax
0x3c4e:	mov	rdi, rbp
0x3c51:	mov	esi, 1
0x3c56:	xor	eax, eax
0x3c58:	call	0x14b0


0x3b02:	add	rsp, 0x28
0x3b06:	mov	r8, r12
0x3b09:	mov	rcx, rbx
0x3b0c:	mov	rdi, rbp
0x3b0f:	mov	rdx, rax
0x3b12:	mov	esi, 1
0x3b17:	pop	rbx
0x3b18:	pop	rbp
0x3b19:	pop	r12
0x3b1b:	pop	r13
0x3b1d:	pop	r14
0x3b1f:	pop	r15
0x3b21:	xor	eax, eax
0x3b23:	jmp	0x14b0


0x3abe:	add	rsp, 0x28
0x3ac2:	mov	rcx, rbx
0x3ac5:	mov	rdi, rbp
0x3ac8:	pop	rbx
0x3ac9:	pop	rbp
0x3aca:	pop	r12
0x3acc:	pop	r13
0x3ace:	pop	r14
0x3ad0:	pop	r15
0x3ad2:	mov	rdx, rax
0x3ad5:	mov	esi, 1
0x3ada:	xor	eax, eax
0x3adc:	jmp	0x14b0


0x39e0:	sub	rsp, 8
0x39e4:	mov	r9, qword ptr [rsp + 0x18]
0x39e9:	mov	rdx, rax
0x39ec:	mov	rcx, rbx
0x39ef:	mov	esi, 1
0x39f4:	mov	rdi, rbp
0x39f7:	xor	eax, eax
0x39f9:	push	r9
0x39fb:	push	r13
0x39fd:	push	r12
0x39ff:	push	r15
0x3a01:	push	r14
0x3a03:	mov	r9, qword ptr [rsp + 0x30]
0x3a08:	mov	r8, qword ptr [rsp + 0x38]
0x3a0d:	call	0x14b0


0x3ba2:	sub	rsp, 8
0x3ba6:	push	r14
0x3ba8:	mov	rdx, rax
0x3bab:	mov	r9, r13
0x3bae:	mov	r8, r12
0x3bb1:	mov	rcx, rbx
0x3bb4:	mov	rdi, rbp
0x3bb7:	mov	esi, 1
0x3bbc:	xor	eax, eax
0x3bbe:	call	0x14b0


0x28f0:	sub	rsp, 8
0x28f4:	mov	rcx, rbp
0x28f7:	mov	rsi, r13
0x28fa:	push	qword ptr [rsp + 0x68]
0x28fe:	push	qword ptr [rsp + 0x78]
0x2902:	mov	rdi, r14
0x2905:	push	0
0x2907:	mov	r9d, dword ptr [rsp + 0x98]
0x290f:	mov	r8d, dword ptr [rsp + 0x28]
0x2914:	mov	rdx, qword ptr [rsp + 0x30]
0x2919:	and	r9d, 0xfffffffd
0x291d:	call	0x1d50


0x2922:	add	rsp, 0x20
0x2926:	mov	r15, rax
0x2929:	mov	rbx, qword ptr [rsp + 0xa8]
0x2931:	xor	rbx, qword ptr fs:[0x28]
0x293a:	mov	rax, r15
0x293d:	jne	0x2f43


0x2943:	add	rsp, 0xb8
0x294a:	pop	rbx
0x294b:	pop	rbp
0x294c:	pop	r12
0x294e:	pop	r13
0x2950:	pop	r14
0x2952:	pop	r15
0x2954:	ret	


0x2f43:	call	0x1330


0x2eed:	sub	rsp, 8
0x2ef1:	mov	r8d, 5
0x2ef7:	mov	rcx, r11
0x2efa:	push	qword ptr [rsp + 0x68]
0x2efe:	push	qword ptr [rsp + 0x78]
0x2f02:	mov	rdi, r14
0x2f05:	push	qword ptr [rsp + 0x38]
0x2f09:	mov	r9d, dword ptr [rsp + 0x98]
0x2f11:	mov	rdx, qword ptr [rsp + 0x30]
0x2f16:	mov	rsi, qword ptr [rsp + 0x70]
0x2f1b:	call	0x1d50


0x2f20:	add	rsp, 0x20
0x2f24:	mov	r15, rax
0x2f27:	jmp	0x2929


0x2929:	mov	rbx, qword ptr [rsp + 0xa8]
0x2931:	xor	rbx, qword ptr fs:[0x28]
0x293a:	mov	rax, r15
0x293d:	jne	0x2f43


0x1240:	push	qword ptr [rip + 0x205c2a]
0x1246:	jmp	qword ptr [rip + 0x205c2c]


0x124c:	nop	dword ptr [rax]


0x1256:	push	0
0x125b:	jmp	0x1240


0x1266:	push	1
0x126b:	jmp	0x1240


0x1276:	push	2
0x127b:	jmp	0x1240


0x1286:	push	3
0x128b:	jmp	0x1240


0x1296:	push	4
0x129b:	jmp	0x1240


0x12a6:	push	5
0x12ab:	jmp	0x1240


0x12b6:	push	6
0x12bb:	jmp	0x1240


0x12c6:	push	7
0x12cb:	jmp	0x1240


0x12d6:	push	8
0x12db:	jmp	0x1240


0x12e6:	push	9
0x12eb:	jmp	0x1240


0x12f6:	push	0xa
0x12fb:	jmp	0x1240


0x1306:	push	0xb
0x130b:	jmp	0x1240


0x1316:	push	0xc
0x131b:	jmp	0x1240


0x1326:	push	0xd
0x132b:	jmp	0x1240


0x1336:	push	0xe
0x133b:	jmp	0x1240


0x1346:	push	0xf
0x134b:	jmp	0x1240


0x1356:	push	0x10
0x135b:	jmp	0x1240


0x1366:	push	0x11
0x136b:	jmp	0x1240


0x1376:	push	0x12
0x137b:	jmp	0x1240


0x1386:	push	0x13
0x138b:	jmp	0x1240


0x1390:	jmp	qword ptr [rip + 0x205b8a]




0x1396:	push	0x14
0x139b:	jmp	0x1240


0x13a6:	push	0x15
0x13ab:	jmp	0x1240


0x13b6:	push	0x16
0x13bb:	jmp	0x1240


0x13c6:	push	0x17
0x13cb:	jmp	0x1240


0x13d6:	push	0x18
0x13db:	jmp	0x1240


0x13e6:	push	0x19
0x13eb:	jmp	0x1240


0x13f6:	push	0x1a
0x13fb:	jmp	0x1240


0x1406:	push	0x1b
0x140b:	jmp	0x1240


0x1416:	push	0x1c
0x141b:	jmp	0x1240


0x1426:	push	0x1d
0x142b:	jmp	0x1240


0x1436:	push	0x1e
0x143b:	jmp	0x1240


0x1446:	push	0x1f
0x144b:	jmp	0x1240


0x1456:	push	0x20
0x145b:	jmp	0x1240


0x1466:	push	0x21
0x146b:	jmp	0x1240


0x1476:	push	0x22
0x147b:	jmp	0x1240


0x1486:	push	0x23
0x148b:	jmp	0x1240


0x1496:	push	0x24
0x149b:	jmp	0x1240


0x14a6:	push	0x25
0x14ab:	jmp	0x1240


0x14b6:	push	0x26
0x14bb:	jmp	0x1240


0x14c0:	jmp	qword ptr [rip + 0x205af2]




0x14c6:	push	0x27
0x14cb:	jmp	0x1240


0x14d0:	jmp	qword ptr [rip + 0x205aea]




0x14d6:	push	0x28
0x14db:	jmp	0x1240


0x14e0:	jmp	qword ptr [rip + 0x205ae2]




0x14e6:	push	0x29
0x14eb:	jmp	0x1240


0x168c:	nop	dword ptr [rax]


0x16ba:	hlt	


0x16bb:	nop	dword ptr [rax + rax]


0x16f2:	nop	dword ptr [rax]
0x16f6:	nop	word ptr cs:[rax + rax]


0x1742:	nop	dword ptr [rax]
0x1746:	nop	word ptr cs:[rax + rax]


0x178a:	nop	word ptr [rax + rax]


0x179a:	nop	word ptr [rax + rax]


0x1ae2:	nop	word ptr cs:[rax + rax]
0x1aec:	nop	dword ptr [rax]


0x1af8:	nop	dword ptr [rax + rax]


0x1b08:	nop	dword ptr [rax + rax]


0x1bb4:	nop	word ptr cs:[rax + rax]
0x1bbe:	nop	


0x1c5f:	nop	


0x1d47:	nop	word ptr [rax + rax]


0x1de3:	mov	byte ptr [rsp + 0xe], 1
0x1de8:	mov	byte ptr [rsp + 0x7c], 0
0x1ded:	xor	r12d, r12d
0x1df0:	mov	qword ptr [rsp + 0x50], 0
0x1df9:	mov	byte ptr [rsp + 0xf], 1
0x1dfe:	mov	byte ptr [rsp + 0xd], 0
0x1e03:	lea	rax, [rip + 0x2a63]
0x1e0a:	mov	qword ptr [rsp + 0x18], 1
0x1e13:	xor	r15d, r15d
0x1e16:	mov	dword ptr [rsp + 8], 2
0x1e1e:	mov	qword ptr [rsp + 0x48], rax
0x1e23:	xor	r11d, r11d
0x1e26:	mov	rax, rbp
0x1e29:	mov	r8d, r12d
0x1e2c:	mov	rbp, r11
0x1e2f:	mov	r11, rax
0x1e32:	nop	word ptr [rax + rax]
0x1e38:	cmp	r11, rbp
0x1e3b:	setne	r12b
0x1e3f:	cmp	r11, -1
0x1e43:	jne	0x1e52


0x1e45:	mov	rax, qword ptr [rsp + 0x10]
0x1e4a:	cmp	byte ptr [rax + rbp], 0
0x1e4e:	setne	r12b
0x1e52:	test	r12b, r12b
0x1e55:	je	0x24b0


0x1e52:	test	r12b, r12b
0x1e55:	je	0x24b0


0x24b0:	cmp	dword ptr [rsp + 8], 2
0x24b5:	movzx	ebx, byte ptr [rsp + 0xf]
0x24ba:	mov	r12d, r8d
0x24bd:	mov	rbp, r11
0x24c0:	sete	dl
0x24c3:	mov	eax, ebx
0x24c5:	test	r15, r15
0x24c8:	sete	cl
0x24cb:	and	eax, edx
0x24cd:	and	al, cl
0x24cf:	jne	0x2f36


0x1e5b:	cmp	dword ptr [rsp + 8], 2
0x1e60:	mov	rdi, qword ptr [rsp + 0x10]
0x1e65:	lea	r9, [rdi + rbp]
0x1e69:	setne	al
0x1e6c:	and	al, byte ptr [rsp + 0xd]
0x1e70:	mov	r10d, eax
0x1e73:	je	0x1f20


0x24d5:	mov	eax, ebx
0x24d7:	xor	eax, 1
0x24da:	and	dl, al
0x24dc:	je	0x2e4c


0x2f36:	mov	dword ptr [rsp + 8], 2
0x2f3e:	jmp	0x28d9


0x1f20:	movzx	ebx, byte ptr [r9]
0x1f24:	cmp	bl, 0x7e
0x1f27:	ja	0x2248


0x1e79:	mov	rax, qword ptr [rsp + 0x18]
0x1e7e:	test	rax, rax
0x1e81:	je	0x22b0


0x2e4c:	mov	rbx, qword ptr [rsp + 0x48]
0x2e51:	test	rbx, rbx
0x2e54:	je	0x2e82


0x24e2:	cmp	byte ptr [rsp + 0x7c], 0
0x24e7:	je	0x2e4a


0x28d9:	cmp	byte ptr [rsp + 0xd], 0
0x28de:	je	0x28f0


0x1f2d:	lea	rcx, [rip + 0x29b8]
0x1f34:	movzx	edx, bl
0x1f37:	movsxd	rax, dword ptr [rcx + rdx*4]
0x1f3b:	add	rax, rcx
0x1f3e:	jmp	rax


0x2248:	cmp	qword ptr [rsp + 0x58], 1
0x224e:	jne	0x25f8


0x22b0:	movzx	ebx, byte ptr [r9]
0x22b4:	cmp	bl, 0x7e
0x22b7:	ja	0x2240


0x1e87:	cmp	r11, -1
0x1e8b:	lea	rbx, [rbp + rax]
0x1e90:	jne	0x1ec0


0x2e82:	cmp	r13, r15
0x2e85:	jbe	0x2929


0x2e56:	test	al, al
0x2e58:	je	0x2e82


0x2e4a:	mov	eax, edx
0x2e4c:	mov	rbx, qword ptr [rsp + 0x48]
0x2e51:	test	rbx, rbx
0x2e54:	je	0x2e82


0x24ed:	cmp	byte ptr [rsp + 0xe], 0
0x24f2:	jne	0x2eed


0x28e0:	test	al, al
0x28e2:	mov	eax, 4
0x28e7:	cmove	eax, dword ptr [rsp + 8]
0x28ec:	mov	dword ptr [rsp + 8], eax


0x2254:	mov	qword ptr [rsp + 0x38], r11
0x2259:	mov	byte ptr [rsp + 0x30], r8b
0x225e:	mov	byte ptr [rsp + 0x28], r10b
0x2263:	call	0x14e0


0x25f8:	lea	rax, [rsp + 0xa0]
0x2600:	cmp	r11, -1
0x2604:	mov	qword ptr [rsp + 0xa0], 0
0x2610:	mov	qword ptr [rsp + 0x28], rax
0x2615:	jne	0x2644


0x22b9:	lea	rcx, [rip + 0x2828]
0x22c0:	movzx	edx, bl
0x22c3:	movsxd	rax, dword ptr [rcx + rdx*4]
0x22c7:	add	rax, rcx
0x22ca:	jmp	rax


0x2240:	xor	r10d, r10d
0x2243:	nop	dword ptr [rax + rax]
0x2248:	cmp	qword ptr [rsp + 0x58], 1
0x224e:	jne	0x25f8


0x1e92:	cmp	rax, 1
0x1e96:	jbe	0x1ec0


0x1ec0:	cmp	rbx, r11
0x1ec3:	mov	byte ptr [rsp + 0x28], r10b
0x1ec8:	ja	0x2480


0x2e8b:	mov	byte ptr [r14 + r15], 0
0x2e90:	jmp	0x2929


0x2e5a:	movzx	ecx, byte ptr [rbx]
0x2e5d:	mov	rax, rbx
0x2e60:	test	cl, cl
0x2e62:	je	0x2e82


0x24f8:	test	r13, r13
0x24fb:	sete	al
0x24fe:	cmp	qword ptr [rsp + 0x50], 0
0x2504:	setne	dl
0x2507:	and	al, dl
0x2509:	je	0x2f2c


0x2617:	mov	rdi, qword ptr [rsp + 0x10]
0x261c:	mov	byte ptr [rsp + 0x40], r8b
0x2621:	mov	byte ptr [rsp + 0x38], r10b
0x2626:	mov	qword ptr [rsp + 0x30], r9
0x262b:	call	0x1320


0x2644:	lea	rax, [rsp + 0x9c]
0x264c:	xor	ecx, ecx
0x264e:	mov	byte ptr [rsp + 0x7e], bl
0x2652:	mov	byte ptr [rsp + 0x7d], r8b
0x2657:	mov	rbx, rcx
0x265a:	mov	qword ptr [rsp + 0x88], r9
0x2662:	mov	qword ptr [rsp + 0x38], rax
0x2667:	mov	byte ptr [rsp + 0x7f], r10b
0x266c:	mov	qword ptr [rsp + 0x80], r15
0x2674:	mov	qword ptr [rsp + 0x40], r14
0x2679:	mov	qword ptr [rsp + 0x70], r13
0x267e:	mov	qword ptr [rsp + 0x30], r11
0x2683:	mov	rax, qword ptr [rsp + 0x10]
0x2688:	lea	r14, [rbp + rbx]
0x268d:	mov	rdx, qword ptr [rsp + 0x30]
0x2692:	mov	rcx, qword ptr [rsp + 0x28]
0x2697:	mov	rdi, qword ptr [rsp + 0x38]
0x269c:	lea	r13, [rax + r14]
0x26a0:	sub	rdx, r14
0x26a3:	mov	rsi, r13
0x26a6:	call	0x41a0


0x1e98:	mov	byte ptr [rsp + 0x38], r8b
0x1e9d:	mov	byte ptr [rsp + 0x30], r10b
0x1ea2:	mov	qword ptr [rsp + 0x28], r9
0x1ea7:	call	0x1320


0x1ece:	mov	rdx, qword ptr [rsp + 0x18]
0x1ed3:	mov	rsi, qword ptr [rsp + 0x48]
0x1ed8:	mov	rdi, r9
0x1edb:	mov	qword ptr [rsp + 0x40], r11
0x1ee0:	mov	byte ptr [rsp + 0x38], r8b
0x1ee5:	mov	qword ptr [rsp + 0x30], r9
0x1eea:	call	0x1390


0x2480:	xor	r10d, r10d
0x2483:	jmp	0x1f20


0x2e64:	mov	rdx, r15
0x2e67:	sub	rax, r15
0x2e6a:	cmp	r13, rdx
0x2e6d:	jbe	0x2e73


0x2f2c:	movzx	eax, byte ptr [rsp + 0x7c]
0x2f31:	jmp	0x2e4c


0x250f:	mov	r13, qword ptr [rsp + 0x50]
0x2514:	lea	rbx, [rip + 0x2352]
0x251b:	mov	byte ptr [r14], 0x27
0x251f:	mov	dword ptr [rsp + 8], 2
0x2527:	mov	r15d, 1
0x252d:	mov	qword ptr [rsp + 0x18], 1
0x2536:	mov	byte ptr [rsp + 0xf], 0
0x253b:	mov	qword ptr [rsp + 0x48], rbx
0x2540:	mov	byte ptr [rsp + 0x7c], al
0x2544:	jmp	0x1e23


0x2e73:	add	rdx, 1
0x2e77:	movzx	ecx, byte ptr [rax + rdx]
0x2e7b:	test	cl, cl
0x2e7d:	jne	0x2e6a


0x2e6f:	mov	byte ptr [r14 + rdx], cl
0x2e73:	add	rdx, 1
0x2e77:	movzx	ecx, byte ptr [rax + rdx]
0x2e7b:	test	cl, cl
0x2e7d:	jne	0x2e6a


0x1e23:	xor	r11d, r11d
0x1e26:	mov	rax, rbp
0x1e29:	mov	r8d, r12d
0x1e2c:	mov	rbp, r11
0x1e2f:	mov	r11, rax
0x1e32:	nop	word ptr [rax + rax]
0x1e38:	cmp	r11, rbp
0x1e3b:	setne	r12b
0x1e3f:	cmp	r11, -1
0x1e43:	jne	0x1e52


0x2e7f:	mov	r15, rdx
0x2e82:	cmp	r13, r15
0x2e85:	jbe	0x2929


0x2e6a:	cmp	r13, rdx
0x2e6d:	jbe	0x2e73


0x1eef:	test	eax, eax
0x1ef1:	mov	r9, qword ptr [rsp + 0x30]
0x1ef6:	movzx	r8d, byte ptr [rsp + 0x38]
0x1efc:	mov	r11, qword ptr [rsp + 0x40]
0x1f01:	jne	0x2480


0x1f07:	cmp	byte ptr [rsp + 0xf], 0
0x1f0c:	movzx	r10d, byte ptr [rsp + 0x28]
0x1f12:	jne	0x2e95


0x2e95:	cmp	dword ptr [rsp + 8], 2
0x2e9a:	movzx	ebx, byte ptr [rsp + 0xf]
0x2e9f:	mov	rbp, r11
0x2ea2:	sete	al
0x2ea5:	mov	byte ptr [rsp + 0xd], bl
0x2ea9:	jmp	0x28d9


0x26ab:	test	rax, rax
0x26ae:	mov	r15, rax
0x26b1:	je	0x2701


0x2701:	mov	edx, r12d
0x2704:	mov	rdi, rbx
0x2707:	movzx	r8d, byte ptr [rsp + 0x7d]
0x270d:	xor	edx, 1
0x2710:	movzx	ebx, byte ptr [rsp + 0x7e]
0x2715:	movzx	r10d, byte ptr [rsp + 0x7f]
0x271b:	and	dl, byte ptr [rsp + 0xd]
0x271f:	mov	r15, qword ptr [rsp + 0x80]
0x2727:	mov	r14, qword ptr [rsp + 0x40]
0x272c:	mov	r13, qword ptr [rsp + 0x70]
0x2731:	mov	r11, qword ptr [rsp + 0x30]
0x2736:	cmp	rdi, 1
0x273a:	jbe	0x2d3b


0x26b3:	cmp	rax, -1
0x26b7:	je	0x2cd5


0x2d3b:	mov	eax, edx
0x2d3d:	jmp	0x2297


0x2740:	mov	rcx, rdi
0x2743:	xor	esi, esi
0x2745:	movzx	r9d, byte ptr [rsp + 0xf]
0x274b:	add	rcx, rbp
0x274e:	mov	rdi, qword ptr [rsp + 0x10]
0x2753:	jmp	0x280e


0x2cd5:	mov	rdi, rbx
0x2cd8:	movzx	r8d, byte ptr [rsp + 0x7d]
0x2cde:	movzx	ebx, byte ptr [rsp + 0x7e]
0x2ce3:	movzx	r10d, byte ptr [rsp + 0x7f]
0x2ce9:	mov	r15, qword ptr [rsp + 0x80]
0x2cf1:	xor	r12d, r12d
0x2cf4:	mov	r14, qword ptr [rsp + 0x40]
0x2cf9:	mov	r13, qword ptr [rsp + 0x70]
0x2cfe:	mov	r11, qword ptr [rsp + 0x30]
0x2d03:	movzx	edx, byte ptr [rsp + 0xd]
0x2d08:	jmp	0x2736


0x26bd:	cmp	rax, -2
0x26c1:	je	0x2c61


0x2297:	test	al, al
0x2299:	jne	0x2c31


0x280e:	test	dl, dl
0x2810:	jne	0x2760


0x2736:	cmp	rdi, 1
0x273a:	jbe	0x2d3b


0x2c61:	mov	r11, qword ptr [rsp + 0x30]
0x2c66:	mov	rsi, r14
0x2c69:	mov	rcx, r13
0x2c6c:	mov	rax, rbx
0x2c6f:	mov	rdi, rbx
0x2c72:	movzx	r8d, byte ptr [rsp + 0x7d]
0x2c78:	movzx	ebx, byte ptr [rsp + 0x7e]
0x2c7d:	mov	r9, qword ptr [rsp + 0x88]
0x2c85:	cmp	rsi, r11
0x2c88:	movzx	r10d, byte ptr [rsp + 0x7f]
0x2c8e:	mov	r15, qword ptr [rsp + 0x80]
0x2c96:	mov	r14, qword ptr [rsp + 0x40]
0x2c9b:	mov	r13, qword ptr [rsp + 0x70]
0x2ca0:	jae	0x2cc8


0x26c7:	cmp	dword ptr [rsp + 8], 2
0x26cc:	sete	al
0x26cf:	and	al, byte ptr [rsp + 0xf]
0x26d3:	jne	0x2870


0x229f:	cmp	dword ptr [rsp + 8], 2
0x22a4:	sete	dl
0x22a7:	jmp	0x1f78


0x2c31:	movzx	edx, byte ptr [rsp + 0xd]
0x2c36:	xor	r12d, r12d
0x2c39:	jmp	0x2740


0x2816:	mov	eax, esi
0x2818:	xor	eax, 1
0x281b:	and	eax, r8d
0x281e:	test	r10b, r10b
0x2821:	je	0x2831


0x2760:	cmp	dword ptr [rsp + 8], 2
0x2765:	sete	al
0x2768:	test	r9b, r9b
0x276b:	jne	0x2c20


0x2ca2:	cmp	byte ptr [rcx], 0
0x2ca5:	jne	0x2cb7


0x2cc8:	movzx	edx, byte ptr [rsp + 0xd]
0x2ccd:	xor	r12d, r12d
0x2cd0:	jmp	0x2736


0x26d9:	mov	edi, dword ptr [rsp + 0x9c]
0x26e0:	call	0x14d0


0x2870:	cmp	r15, 1
0x2874:	je	0x26d9


0x1f78:	cmp	byte ptr [rsp + 0xd], 1
0x1f7d:	jne	0x2092


0x2831:	add	rbp, 1
0x2835:	cmp	rbp, rcx
0x2838:	jae	0x1fbc


0x2823:	cmp	r13, r15
0x2826:	jbe	0x282d


0x2771:	mov	esi, r8d
0x2774:	xor	esi, 1
0x2777:	and	al, sil
0x277a:	je	0x27ab


0x2c20:	movzx	ebx, byte ptr [rsp + 0xf]
0x2c25:	mov	rbp, r11
0x2c28:	mov	byte ptr [rsp + 0xd], bl
0x2c2c:	jmp	0x28d9


0x2ca7:	jmp	0x2cc8


0x2cb7:	add	rax, 1
0x2cbb:	lea	rdx, [rbp + rax]
0x2cc0:	cmp	r11, rdx
0x2cc3:	ja	0x2cb0


0x287a:	mov	rdi, qword ptr [rsp + 0x10]
0x287f:	lea	rcx, [rdi + r15]
0x2883:	lea	rdx, [rdi + r14 + 1]
0x2888:	lea	r8, [rcx + r14]
0x288c:	jmp	0x289d


0x1f83:	test	dl, dl
0x1f85:	jne	0x2092


0x2092:	cmp	byte ptr [rsp + 0xf], 0
0x2097:	jne	0x1f8b


0x283e:	test	al, al
0x2840:	je	0x2c3e


0x1fbc:	test	al, al
0x1fbe:	je	0x1fe0


0x282d:	add	r15, 1
0x2831:	add	rbp, 1
0x2835:	cmp	rbp, rcx
0x2838:	jae	0x1fbc


0x2828:	mov	byte ptr [r14 + r15], 0x5c
0x282d:	add	r15, 1
0x2831:	add	rbp, 1
0x2835:	cmp	rbp, rcx
0x2838:	jae	0x1fbc


0x27ab:	cmp	r13, r15
0x27ae:	jbe	0x27b5


0x277c:	cmp	r13, r15
0x277f:	jbe	0x2786


0x2cc5:	mov	rdi, rax
0x2cc8:	movzx	edx, byte ptr [rsp + 0xd]
0x2ccd:	xor	r12d, r12d
0x2cd0:	jmp	0x2736


0x2cb0:	cmp	byte ptr [r9 + rax], 0
0x2cb5:	je	0x2cc5


0x289d:	movzx	ecx, byte ptr [rdx]
0x28a0:	sub	ecx, 0x5b
0x28a3:	cmp	cl, 0x21
0x28a6:	ja	0x2890


0x1f8b:	mov	rsi, qword ptr [rsp + 0x20]
0x1f90:	test	rsi, rsi
0x1f93:	je	0x1fa9


0x209d:	jmp	0x1fa9


0x2c3e:	xor	r10d, r10d
0x2c41:	jmp	0x27fd


0x2846:	cmp	r13, r15
0x2849:	jbe	0x2850


0x1fe0:	cmp	r15, r13
0x1fe3:	jae	0x1fe9


0x1fc0:	cmp	r13, r15
0x1fc3:	jbe	0x1fca


0x27b5:	lea	rax, [r15 + 1]
0x27b9:	cmp	r13, rax
0x27bc:	jbe	0x27cb


0x27b0:	mov	byte ptr [r14 + r15], 0x5c
0x27b5:	lea	rax, [r15 + 1]
0x27b9:	cmp	r13, rax
0x27bc:	jbe	0x27cb


0x2786:	lea	rsi, [r15 + 1]
0x278a:	cmp	r13, rsi
0x278d:	jbe	0x2795


0x2781:	mov	byte ptr [r14 + r15], 0x27
0x2786:	lea	rsi, [r15 + 1]
0x278a:	cmp	r13, rsi
0x278d:	jbe	0x2795


0x28a8:	mov	esi, 1
0x28ad:	shl	rsi, cl
0x28b0:	mov	rcx, rsi
0x28b3:	movabs	rsi, 0x20000002b
0x28bd:	test	rcx, rsi
0x28c0:	je	0x2890


0x2890:	add	rdx, 1
0x2894:	cmp	r8, rdx
0x2897:	je	0x26d9


0x1fa9:	test	r10b, r10b
0x1fac:	jne	0x20f3


0x1f95:	mov	edx, ebx
0x1f97:	shr	dl, 5
0x1f9a:	movzx	edx, dl
0x1f9d:	mov	edx, dword ptr [rsi + rdx*4]
0x1fa0:	bt	edx, ebx
0x1fa3:	jb	0x20f3


0x27fd:	cmp	r13, r15
0x2800:	jbe	0x2806


0x2850:	lea	rax, [r15 + 1]
0x2854:	cmp	r13, rax
0x2857:	jbe	0x285f


0x284b:	mov	byte ptr [r14 + r15], 0x27
0x2850:	lea	rax, [r15 + 1]
0x2854:	cmp	r13, rax
0x2857:	jbe	0x285f


0x1fe5:	mov	byte ptr [r14 + r15], bl
0x1fe9:	movzx	edi, byte ptr [rsp + 0xe]
0x1fee:	add	r15, 1
0x1ff2:	mov	eax, 0
0x1ff7:	test	r12b, r12b
0x1ffa:	cmove	edi, eax
0x1ffd:	mov	byte ptr [rsp + 0xe], dil
0x2002:	jmp	0x1e38


0x1fe9:	movzx	edi, byte ptr [rsp + 0xe]
0x1fee:	add	r15, 1
0x1ff2:	mov	eax, 0
0x1ff7:	test	r12b, r12b
0x1ffa:	cmove	edi, eax
0x1ffd:	mov	byte ptr [rsp + 0xe], dil
0x2002:	jmp	0x1e38


0x1fca:	lea	rax, [r15 + 1]
0x1fce:	cmp	r13, rax
0x1fd1:	jbe	0x1fd9


0x1fc5:	mov	byte ptr [r14 + r15], 0x27
0x1fca:	lea	rax, [r15 + 1]
0x1fce:	cmp	r13, rax
0x1fd1:	jbe	0x1fd9


0x27cb:	lea	rax, [r15 + 2]
0x27cf:	cmp	r13, rax
0x27d2:	jbe	0x27e4


0x27be:	mov	eax, ebx
0x27c0:	shr	al, 6
0x27c3:	add	eax, 0x30
0x27c6:	mov	byte ptr [r14 + r15 + 1], al
0x27cb:	lea	rax, [r15 + 2]
0x27cf:	cmp	r13, rax
0x27d2:	jbe	0x27e4


0x2795:	lea	rsi, [r15 + 2]
0x2799:	cmp	r13, rsi
0x279c:	jbe	0x27a4


0x278f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x2795:	lea	rsi, [r15 + 2]
0x2799:	cmp	r13, rsi
0x279c:	jbe	0x27a4


0x28c2:	mov	r14, qword ptr [rsp + 0x40]
0x28c7:	mov	r13, qword ptr [rsp + 0x70]
0x28cc:	mov	rbp, qword ptr [rsp + 0x30]
0x28d1:	mov	dword ptr [rsp + 8], 2
0x28d9:	cmp	byte ptr [rsp + 0xd], 0
0x28de:	je	0x28f0


0x1fb2:	xor	eax, 1
0x1fb5:	add	rbp, 1
0x1fb9:	and	eax, r8d
0x1fbc:	test	al, al
0x1fbe:	je	0x1fe0


0x20f3:	cmp	dword ptr [rsp + 8], 2
0x20f8:	sete	dl
0x20fb:	cmp	byte ptr [rsp + 0xf], 0
0x2100:	mov	eax, edx
0x2102:	jne	0x2958


0x2806:	movzx	ebx, byte ptr [rdi + rbp]
0x280a:	add	r15, 1
0x280e:	test	dl, dl
0x2810:	jne	0x2760


0x2802:	mov	byte ptr [r14 + r15], bl
0x2806:	movzx	ebx, byte ptr [rdi + rbp]
0x280a:	add	r15, 1
0x280e:	test	dl, dl
0x2810:	jne	0x2760


0x285f:	add	r15, 2
0x2863:	xor	r10d, r10d
0x2866:	xor	r8d, r8d
0x2869:	jmp	0x27fd


0x2859:	mov	byte ptr [r14 + r15 + 1], 0x27
0x285f:	add	r15, 2
0x2863:	xor	r10d, r10d
0x2866:	xor	r8d, r8d
0x2869:	jmp	0x27fd


0x1e38:	cmp	r11, rbp
0x1e3b:	setne	r12b
0x1e3f:	cmp	r11, -1
0x1e43:	jne	0x1e52


0x1fd9:	add	r15, 2
0x1fdd:	xor	r8d, r8d
0x1fe0:	cmp	r15, r13
0x1fe3:	jae	0x1fe9


0x1fd3:	mov	byte ptr [r14 + r15 + 1], 0x27
0x1fd9:	add	r15, 2
0x1fdd:	xor	r8d, r8d
0x1fe0:	cmp	r15, r13
0x1fe3:	jae	0x1fe9


0x27e4:	and	ebx, 7
0x27e7:	add	rbp, 1
0x27eb:	add	r15, 3
0x27ef:	add	ebx, 0x30
0x27f2:	cmp	rbp, rcx
0x27f5:	jae	0x1fe0


0x27d4:	mov	eax, ebx
0x27d6:	shr	al, 3
0x27d9:	and	eax, 7
0x27dc:	add	eax, 0x30
0x27df:	mov	byte ptr [r14 + r15 + 2], al
0x27e4:	and	ebx, 7
0x27e7:	add	rbp, 1
0x27eb:	add	r15, 3
0x27ef:	add	ebx, 0x30
0x27f2:	cmp	rbp, rcx
0x27f5:	jae	0x1fe0


0x27a4:	add	r15, 3
0x27a8:	mov	r8d, eax
0x27ab:	cmp	r13, r15
0x27ae:	jbe	0x27b5


0x279e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x27a4:	add	r15, 3
0x27a8:	mov	r8d, eax
0x27ab:	cmp	r13, r15
0x27ae:	jbe	0x27b5


0x2108:	mov	eax, r8d
0x210b:	xor	eax, 1
0x210e:	and	al, dl
0x2110:	je	0x2141


0x2958:	mov	rbp, r11
0x295b:	jmp	0x28d9


0x27fb:	mov	esi, edx
0x27fd:	cmp	r13, r15
0x2800:	jbe	0x2806


0x2141:	cmp	r13, r15
0x2144:	jbe	0x214b


0x2112:	cmp	r13, r15
0x2115:	jbe	0x211c


0x214b:	add	r15, 1
0x214f:	add	rbp, 1
0x2153:	jmp	0x1fe0


0x2146:	mov	byte ptr [r14 + r15], 0x5c
0x214b:	add	r15, 1
0x214f:	add	rbp, 1
0x2153:	jmp	0x1fe0


0x211c:	lea	rdx, [r15 + 1]
0x2120:	cmp	r13, rdx
0x2123:	jbe	0x212b


0x2117:	mov	byte ptr [r14 + r15], 0x27
0x211c:	lea	rdx, [r15 + 1]
0x2120:	cmp	r13, rdx
0x2123:	jbe	0x212b


0x212b:	lea	rdx, [r15 + 2]
0x212f:	cmp	r13, rdx
0x2132:	jbe	0x213a


0x2125:	mov	byte ptr [r14 + r15 + 1], 0x24
0x212b:	lea	rdx, [r15 + 2]
0x212f:	cmp	r13, rdx
0x2132:	jbe	0x213a


0x213a:	add	r15, 3
0x213e:	mov	r8d, eax
0x2141:	cmp	r13, r15
0x2144:	jbe	0x214b


0x2134:	mov	byte ptr [r14 + r15 + 2], 0x27
0x213a:	add	r15, 3
0x213e:	mov	r8d, eax
0x2141:	cmp	r13, r15
0x2144:	jbe	0x214b


0x26e5:	mov	rdi, qword ptr [rsp + 0x28]
0x26ea:	test	eax, eax
0x26ec:	mov	eax, 0
0x26f1:	cmove	r12d, eax
0x26f5:	add	rbx, r15
0x26f8:	call	0x14c0


0x26fd:	test	eax, eax
0x26ff:	je	0x2683


0x2683:	mov	rax, qword ptr [rsp + 0x10]
0x2688:	lea	r14, [rbp + rbx]
0x268d:	mov	rdx, qword ptr [rsp + 0x30]
0x2692:	mov	rcx, qword ptr [rsp + 0x28]
0x2697:	mov	rdi, qword ptr [rsp + 0x38]
0x269c:	lea	r13, [rax + r14]
0x26a0:	sub	rdx, r14
0x26a3:	mov	rsi, r13
0x26a6:	call	0x41a0


0x1eac:	movzx	r8d, byte ptr [rsp + 0x38]
0x1eb2:	movzx	r10d, byte ptr [rsp + 0x30]
0x1eb8:	mov	r11, rax
0x1ebb:	mov	r9, qword ptr [rsp + 0x28]
0x1ec0:	cmp	rbx, r11
0x1ec3:	mov	byte ptr [rsp + 0x28], r10b
0x1ec8:	ja	0x2480


0x2630:	movzx	r8d, byte ptr [rsp + 0x40]
0x2636:	movzx	r10d, byte ptr [rsp + 0x38]
0x263c:	mov	r11, rax
0x263f:	mov	r9, qword ptr [rsp + 0x30]
0x2644:	lea	rax, [rsp + 0x9c]
0x264c:	xor	ecx, ecx
0x264e:	mov	byte ptr [rsp + 0x7e], bl
0x2652:	mov	byte ptr [rsp + 0x7d], r8b
0x2657:	mov	rbx, rcx
0x265a:	mov	qword ptr [rsp + 0x88], r9
0x2662:	mov	qword ptr [rsp + 0x38], rax
0x2667:	mov	byte ptr [rsp + 0x7f], r10b
0x266c:	mov	qword ptr [rsp + 0x80], r15
0x2674:	mov	qword ptr [rsp + 0x40], r14
0x2679:	mov	qword ptr [rsp + 0x70], r13
0x267e:	mov	qword ptr [rsp + 0x30], r11
0x2683:	mov	rax, qword ptr [rsp + 0x10]
0x2688:	lea	r14, [rbp + rbx]
0x268d:	mov	rdx, qword ptr [rsp + 0x30]
0x2692:	mov	rcx, qword ptr [rsp + 0x28]
0x2697:	mov	rdi, qword ptr [rsp + 0x38]
0x269c:	lea	r13, [rax + r14]
0x26a0:	sub	rdx, r14
0x26a3:	mov	rsi, r13
0x26a6:	call	0x41a0


0x2268:	mov	rcx, qword ptr [rax]
0x226b:	movzx	edx, bl
0x226e:	movzx	r10d, byte ptr [rsp + 0x28]
0x2274:	movzx	r8d, byte ptr [rsp + 0x30]
0x227a:	mov	r11, qword ptr [rsp + 0x38]
0x227f:	mov	edi, 1
0x2284:	movzx	eax, word ptr [rcx + rdx*2]
0x2288:	and	ax, 0x4000
0x228c:	setne	r12b
0x2290:	sete	al
0x2293:	and	al, byte ptr [rsp + 0xd]
0x2297:	test	al, al
0x2299:	jne	0x2c31


0x1f40:	xor	r10d, r10d
0x1f43:	cmp	r11, 1
0x1f47:	setne	al
0x1f4a:	cmp	r11, -1
0x1f4e:	jne	0x1f5c


0x1f50:	mov	rax, qword ptr [rsp + 0x10]
0x1f55:	cmp	byte ptr [rax + 1], 0
0x1f59:	setne	al
0x1f5c:	cmp	dword ptr [rsp + 8], 2
0x1f61:	sete	dl
0x1f64:	test	al, al
0x1f66:	je	0x21b8


0x1f5c:	cmp	dword ptr [rsp + 8], 2
0x1f61:	sete	dl
0x1f64:	test	al, al
0x1f66:	je	0x21b8


0x21b8:	test	rbp, rbp
0x21bb:	jne	0x1f6c


0x1f6c:	xor	r12d, r12d
0x1f6f:	xor	eax, eax
0x1f71:	nop	dword ptr [rax]
0x1f78:	cmp	byte ptr [rsp + 0xd], 1
0x1f7d:	jne	0x2092


0x21c1:	movzx	eax, byte ptr [rsp + 0xf]
0x21c6:	and	al, dl
0x21c8:	je	0x1f78


0x21ce:	mov	rbp, r11
0x21d1:	mov	dword ptr [rsp + 8], 2
0x21d9:	jmp	0x28d9


0x25d8:	cmp	byte ptr [rsp + 0xf], 0
0x25dd:	jne	0x2e00


0x2020:	cmp	eax, 5
0x2023:	je	0x2598


0x25e3:	xor	r12d, r12d
0x25e6:	xor	eax, eax
0x25e8:	mov	ebx, 0x3f
0x25ed:	jmp	0x1fa9


0x2e00:	mov	rbp, r11
0x2e03:	movzx	eax, byte ptr [rsp + 0xf]
0x2e08:	jmp	0x28d9


0x2598:	test	byte ptr [rsp + 0x78], 4
0x259d:	je	0x25c0


0x2029:	cmp	eax, 2
0x202c:	mov	ebx, 0x3f
0x2031:	sete	dl
0x2034:	xor	r12d, r12d
0x2037:	xor	eax, eax
0x2039:	jmp	0x1f78


0x25c0:	xor	edx, edx
0x25c2:	xor	r12d, r12d
0x25c5:	xor	eax, eax
0x25c7:	mov	ebx, 0x3f
0x25cc:	jmp	0x1f78


0x259f:	lea	rcx, [rbp + 2]
0x25a3:	cmp	rcx, r11
0x25a6:	jae	0x25c0


0x25a8:	mov	rax, qword ptr [rsp + 0x10]
0x25ad:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x25b2:	je	0x2d42


0x2d42:	movzx	ebx, byte ptr [rax + rcx]
0x2d46:	cmp	bl, 0x3e
0x2d49:	ja	0x25c0


0x2d4f:	movabs	rax, 0x7000a38200000000
0x2d59:	bt	rax, rbx
0x2d5d:	jae	0x25c0


0x2d63:	cmp	byte ptr [rsp + 0xf], 0
0x2d68:	jne	0x2f52


0x2d6e:	cmp	r13, r15
0x2d71:	jbe	0x2d78


0x2f52:	mov	rbp, r11
0x2f55:	jmp	0x28f0


0x2d78:	lea	rax, [r15 + 1]
0x2d7c:	cmp	r13, rax
0x2d7f:	jbe	0x2d87


0x2d73:	mov	byte ptr [r14 + r15], 0x3f
0x2d78:	lea	rax, [r15 + 1]
0x2d7c:	cmp	r13, rax
0x2d7f:	jbe	0x2d87


0x2d87:	lea	rax, [r15 + 2]
0x2d8b:	cmp	r13, rax
0x2d8e:	jbe	0x2d96


0x2d81:	mov	byte ptr [r14 + r15 + 1], 0x22
0x2d87:	lea	rax, [r15 + 2]
0x2d8b:	cmp	r13, rax
0x2d8e:	jbe	0x2d96


0x2d96:	lea	rax, [r15 + 3]
0x2d9a:	cmp	r13, rax
0x2d9d:	jbe	0x2da5


0x2d90:	mov	byte ptr [r14 + r15 + 2], 0x22
0x2d96:	lea	rax, [r15 + 3]
0x2d9a:	cmp	r13, rax
0x2d9d:	jbe	0x2da5


0x2da5:	add	r15, 4
0x2da9:	xor	edx, edx
0x2dab:	xor	r12d, r12d
0x2dae:	xor	eax, eax
0x2db0:	mov	rbp, rcx
0x2db3:	jmp	0x1f78


0x2d9f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x2da5:	add	r15, 4
0x2da9:	xor	edx, edx
0x2dab:	xor	r12d, r12d
0x2dae:	xor	eax, eax
0x2db0:	mov	rbp, rcx
0x2db3:	jmp	0x1f78


0x2550:	cmp	byte ptr [rsp + 0xf], 0
0x2555:	jne	0x2e00


0x204e:	mov	byte ptr [rsp + 0x7c], r12b
0x2053:	xor	edx, edx
0x2055:	xor	eax, eax
0x2057:	mov	ebx, 0x27
0x205c:	jmp	0x1f78


0x255b:	test	r13, r13
0x255e:	je	0x2960


0x2960:	cmp	r13, r15
0x2963:	jbe	0x296a


0x2564:	xor	edx, edx
0x2566:	cmp	qword ptr [rsp + 0x50], 0
0x256c:	jne	0x2960


0x296a:	lea	rax, [r15 + 1]
0x296e:	cmp	r13, rax
0x2971:	jbe	0x2979


0x2965:	mov	byte ptr [r14 + r15], 0x27
0x296a:	lea	rax, [r15 + 1]
0x296e:	cmp	r13, rax
0x2971:	jbe	0x2979


0x2572:	mov	qword ptr [rsp + 0x50], r13
0x2577:	add	r15, 3
0x257b:	xor	eax, eax
0x257d:	mov	byte ptr [rsp + 0x7c], r12b
0x2582:	xor	r8d, r8d
0x2585:	mov	r13, rdx
0x2588:	mov	ebx, 0x27
0x258d:	jmp	0x1fa9


0x2979:	lea	rax, [r15 + 2]
0x297d:	cmp	r13, rax
0x2980:	jbe	0x2f72


0x2973:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x2979:	lea	rax, [r15 + 2]
0x297d:	cmp	r13, rax
0x2980:	jbe	0x2f72


0x2f72:	mov	rdx, r13
0x2f75:	mov	r13, qword ptr [rsp + 0x50]
0x2f7a:	jmp	0x2572


0x2986:	mov	rdx, r13
0x2989:	mov	byte ptr [r14 + r15 + 2], 0x27
0x298f:	mov	r13, qword ptr [rsp + 0x50]
0x2994:	jmp	0x2572


0x2084:	cmp	byte ptr [rsp + 0xd], 0
0x2089:	jne	0x20f0


0x208b:	mov	ebx, edx
0x208d:	xor	r12d, r12d
0x2090:	xor	eax, eax
0x2092:	cmp	byte ptr [rsp + 0xf], 0
0x2097:	jne	0x1f8b


0x20f0:	xor	r12d, r12d
0x20f3:	cmp	dword ptr [rsp + 8], 2
0x20f8:	sete	dl
0x20fb:	cmp	byte ptr [rsp + 0xf], 0
0x2100:	mov	eax, edx
0x2102:	jne	0x2958


0x2490:	cmp	byte ptr [rsp + 0xf], 0
0x2495:	jne	0x2e00


0x20c3:	cmp	byte ptr [rsp + 0xd], 0
0x20c8:	je	0x22e0


0x249b:	add	rbp, 1
0x249f:	mov	eax, r8d
0x24a2:	xor	r12d, r12d
0x24a5:	mov	ebx, 0x5c
0x24aa:	jmp	0x1fbc


0x22e0:	mov	edx, 0x5c
0x22e5:	mov	ebx, 0x5c
0x22ea:	jmp	0x2084


0x20ce:	cmp	byte ptr [rsp + 0xf], 0
0x20d3:	je	0x22e0


0x20d9:	cmp	qword ptr [rsp + 0x18], 0
0x20df:	jne	0x249b


0x20e5:	mov	ebx, 0x5c
0x20ea:	nop	word ptr [rax + rax]
0x20f0:	xor	r12d, r12d
0x20f3:	cmp	dword ptr [rsp + 8], 2
0x20f8:	sete	dl
0x20fb:	cmp	byte ptr [rsp + 0xf], 0
0x2100:	mov	eax, edx
0x2102:	jne	0x2958


0x216b:	xor	edx, edx
0x216d:	test	byte ptr [rsp + 0x78], 1
0x2172:	je	0x208b


0x2333:	cmp	dword ptr [rsp + 8], 2
0x2338:	sete	dl
0x233b:	cmp	byte ptr [rsp + 0xf], 0
0x2340:	jne	0x2eda


0x2178:	add	rbp, 1
0x217c:	jmp	0x1e38


0x2346:	mov	eax, r8d
0x2349:	mov	rcx, r15
0x234c:	xor	eax, 1
0x234f:	and	al, dl
0x2351:	je	0x2380


0x2eda:	movzx	ebx, byte ptr [rsp + 0xf]
0x2edf:	mov	rbp, r11
0x2ee2:	mov	eax, edx
0x2ee4:	mov	byte ptr [rsp + 0xd], bl
0x2ee8:	jmp	0x28d9


0x2380:	cmp	r13, rcx
0x2383:	jbe	0x238a


0x2353:	cmp	r13, r15
0x2356:	jbe	0x235d


0x238a:	cmp	dword ptr [rsp + 8], 2
0x238f:	lea	r15, [rcx + 1]
0x2393:	je	0x2999


0x2385:	mov	byte ptr [r14 + rcx], 0x5c
0x238a:	cmp	dword ptr [rsp + 8], 2
0x238f:	lea	r15, [rcx + 1]
0x2393:	je	0x2999


0x235d:	lea	rcx, [r15 + 1]
0x2361:	cmp	r13, rcx
0x2364:	jbe	0x236c


0x2358:	mov	byte ptr [r14 + r15], 0x27
0x235d:	lea	rcx, [r15 + 1]
0x2361:	cmp	r13, rcx
0x2364:	jbe	0x236c


0x2999:	mov	eax, r12d
0x299c:	mov	ebx, 0x30
0x29a1:	xor	r12d, r12d
0x29a4:	jmp	0x1fa9


0x2399:	lea	rax, [rbp + 1]
0x239d:	cmp	rax, r11
0x23a0:	jae	0x23bb


0x236c:	lea	rcx, [r15 + 2]
0x2370:	cmp	r13, rcx
0x2373:	ja	0x29a9


0x2366:	mov	byte ptr [r14 + r15 + 1], 0x24
0x236c:	lea	rcx, [r15 + 2]
0x2370:	cmp	r13, rcx
0x2373:	ja	0x29a9


0x23a2:	mov	rax, qword ptr [rsp + 0x10]
0x23a7:	movzx	eax, byte ptr [rax + rbp + 1]
0x23ac:	mov	byte ptr [rsp + 0x28], al
0x23b0:	sub	eax, 0x30
0x23b3:	cmp	al, 9
0x23b5:	jbe	0x2be9


0x23bb:	mov	eax, r12d
0x23be:	mov	ebx, 0x30
0x23c3:	xor	r12d, r12d
0x23c6:	jmp	0x1f78


0x2379:	lea	rcx, [r15 + 3]
0x237d:	mov	r8d, eax
0x2380:	cmp	r13, rcx
0x2383:	jbe	0x238a


0x29a9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x29af:	jmp	0x2379


0x2be9:	cmp	r13, r15
0x2bec:	jbe	0x2bf3


0x2bf3:	lea	rax, [rcx + 2]
0x2bf7:	cmp	r13, rax
0x2bfa:	jbe	0x2c02


0x2bee:	mov	byte ptr [r14 + r15], 0x30
0x2bf3:	lea	rax, [rcx + 2]
0x2bf7:	cmp	r13, rax
0x2bfa:	jbe	0x2c02


0x2c02:	mov	eax, r12d
0x2c05:	lea	r15, [rcx + 3]
0x2c09:	xor	r12d, r12d
0x2c0c:	mov	ebx, 0x30
0x2c11:	jmp	0x1f78


0x2bfc:	mov	byte ptr [r14 + rcx + 2], 0x30
0x2c02:	mov	eax, r12d
0x2c05:	lea	r15, [rcx + 3]
0x2c09:	xor	r12d, r12d
0x2c0c:	mov	ebx, 0x30
0x2c11:	jmp	0x1f78


0x2072:	cmp	dword ptr [rsp + 8], 2
0x2077:	sete	al
0x207a:	and	al, byte ptr [rsp + 0xf]
0x207e:	jne	0x21ce


0x2430:	mov	edx, 0xd
0x2435:	xor	r10d, r10d
0x2438:	mov	ebx, 0x72
0x243d:	jmp	0x2072


0x29b4:	test	ebx, ebx
0x29b6:	jne	0x1de3


0x29bc:	mov	byte ptr [rsp + 0xd], 1
0x29c1:	test	r13, r13
0x29c4:	jne	0x2f5a


0x29ca:	lea	rax, [rip + 0x1e9c]
0x29d1:	mov	qword ptr [rsp + 0x50], 0
0x29da:	mov	byte ptr [rsp + 0xe], 1
0x29df:	mov	byte ptr [rsp + 0x7c], 0
0x29e4:	xor	r12d, r12d
0x29e7:	mov	byte ptr [rsp + 0xf], 0
0x29ec:	mov	qword ptr [rsp + 0x18], 1
0x29f5:	mov	qword ptr [rsp + 0x48], rax
0x29fa:	mov	r15d, 1
0x2a00:	mov	dword ptr [rsp + 8], 2
0x2a08:	jmp	0x1e23


0x2f5a:	mov	byte ptr [rsp + 0xe], 1
0x2f5f:	xor	eax, eax
0x2f61:	xor	r12d, r12d
0x2f64:	mov	qword ptr [rsp + 0x50], 0
0x2f6d:	jmp	0x2514


0x2514:	lea	rbx, [rip + 0x2352]
0x251b:	mov	byte ptr [r14], 0x27
0x251f:	mov	dword ptr [rsp + 8], 2
0x2527:	mov	r15d, 1
0x252d:	mov	qword ptr [rsp + 0x18], 1
0x2536:	mov	byte ptr [rsp + 0xf], 0
0x253b:	mov	qword ptr [rsp + 0x48], rbx
0x2540:	mov	byte ptr [rsp + 0x7c], al
0x2544:	jmp	0x1e23


0x2a18:	test	r13, r13
0x2a1b:	je	0x2c46


0x2e0d:	lea	rax, [rip + 0x1a57]
0x2e14:	mov	byte ptr [rsp + 0xe], 1
0x2e19:	mov	byte ptr [rsp + 0x7c], 0
0x2e1e:	xor	r12d, r12d
0x2e21:	mov	qword ptr [rsp + 0x50], 0
0x2e2a:	mov	byte ptr [rsp + 0xf], 1
0x2e2f:	mov	byte ptr [rsp + 0xd], 1
0x2e34:	mov	qword ptr [rsp + 0x18], 1
0x2e3d:	xor	r15d, r15d
0x2e40:	mov	qword ptr [rsp + 0x48], rax
0x2e45:	jmp	0x1e23


0x2c46:	mov	qword ptr [rsp + 0x50], 0
0x2c4f:	mov	byte ptr [rsp + 0xe], 1
0x2c54:	xor	r12d, r12d
0x2c57:	mov	byte ptr [rsp + 0x7c], 0
0x2c5c:	jmp	0x2a3b


0x2a21:	mov	byte ptr [r14], 0x22
0x2a25:	mov	byte ptr [rsp + 0xe], 1
0x2a2a:	xor	r12d, r12d
0x2a2d:	mov	byte ptr [rsp + 0x7c], 0
0x2a32:	mov	qword ptr [rsp + 0x50], 0
0x2a3b:	lea	rax, [rip + 0x1e29]
0x2a42:	mov	byte ptr [rsp + 0xf], 0
0x2a47:	mov	byte ptr [rsp + 0xd], 1
0x2a4c:	mov	qword ptr [rsp + 0x18], 1
0x2a55:	mov	r15d, 1
0x2a5b:	mov	qword ptr [rsp + 0x48], rax
0x2a60:	jmp	0x1e23


0x2a3b:	lea	rax, [rip + 0x1e29]
0x2a42:	mov	byte ptr [rsp + 0xf], 0
0x2a47:	mov	byte ptr [rsp + 0xd], 1
0x2a4c:	mov	qword ptr [rsp + 0x18], 1
0x2a55:	mov	r15d, 1
0x2a5b:	mov	qword ptr [rsp + 0x48], rax
0x2a60:	jmp	0x1e23


0x2a65:	lea	rax, [rip + 0x1dff]
0x2a6c:	mov	byte ptr [rsp + 0xe], 1
0x2a71:	mov	byte ptr [rsp + 0x7c], 0
0x2a76:	xor	r12d, r12d
0x2a79:	mov	qword ptr [rsp + 0x50], 0
0x2a82:	mov	byte ptr [rsp + 0xf], 1
0x2a87:	mov	byte ptr [rsp + 0xd], 1
0x2a8c:	mov	qword ptr [rsp + 0x18], 1
0x2a95:	xor	r15d, r15d
0x2a98:	mov	qword ptr [rsp + 0x48], rax
0x2a9d:	mov	dword ptr [rsp + 8], 5
0x2aa5:	jmp	0x1e23


0x2aaa:	mov	byte ptr [rsp + 0xe], 1
0x2aaf:	mov	byte ptr [rsp + 0x7c], 0
0x2ab4:	xor	r12d, r12d
0x2ab7:	mov	qword ptr [rsp + 0x50], 0
0x2ac0:	mov	byte ptr [rsp + 0xf], 0
0x2ac5:	xor	r15d, r15d
0x2ac8:	mov	byte ptr [rsp + 0xd], 1
0x2acd:	mov	qword ptr [rsp + 0x18], 0
0x2ad6:	mov	qword ptr [rsp + 0x48], 0
0x2adf:	jmp	0x1e23


0x2ae4:	cmp	dword ptr [rsp + 8], 0xa
0x2ae9:	je	0x2b41


0x2b41:	xor	r15d, r15d
0x2b44:	test	ebx, ebx
0x2b46:	je	0x2d0d


0x2aeb:	lea	rsi, [rip + 0x1d7d]
0x2af2:	xor	edi, edi
0x2af4:	mov	edx, 5
0x2af9:	call	0x1300


0x2d0d:	mov	rdx, qword ptr [rsp + 0x68]
0x2d12:	movzx	eax, byte ptr [rdx]
0x2d15:	test	al, al
0x2d17:	je	0x2b4c


0x2b4c:	test	ebx, ebx
0x2b4e:	mov	rbx, qword ptr [rsp + 0x60]
0x2b53:	setne	byte ptr [rsp + 0xf]
0x2b58:	xor	r12d, r12d
0x2b5b:	mov	rdi, rbx
0x2b5e:	call	0x1320


0x2d29:	add	r15, 1
0x2d2d:	movzx	eax, byte ptr [rdx + r15]
0x2d32:	test	al, al
0x2d34:	jne	0x2d20


0x2d25:	mov	byte ptr [r14 + r15], al
0x2d29:	add	r15, 1
0x2d2d:	movzx	eax, byte ptr [rdx + r15]
0x2d32:	test	al, al
0x2d34:	jne	0x2d20


0x2d36:	jmp	0x2b4c


0x2d20:	cmp	r13, r15
0x2d23:	jbe	0x2d29


0x2b63:	mov	qword ptr [rsp + 0x48], rbx
0x2b68:	mov	qword ptr [rsp + 0x18], rax
0x2b6d:	mov	byte ptr [rsp + 0xe], 1
0x2b72:	mov	byte ptr [rsp + 0x7c], 0
0x2b77:	mov	qword ptr [rsp + 0x50], 0
0x2b80:	mov	byte ptr [rsp + 0xd], 1
0x2b85:	jmp	0x1e23


0x2afe:	mov	rcx, rax
0x2b01:	mov	qword ptr [rsp + 0x68], rax
0x2b06:	lea	rax, [rip + 0x1d62]
0x2b0d:	cmp	rcx, rax
0x2b10:	je	0x2eae


0x2eae:	mov	esi, dword ptr [rsp + 8]
0x2eb2:	mov	rdi, rcx
0x2eb5:	call	0x1c60


0x2b16:	lea	rsi, [rip + 0x1d50]
0x2b1d:	xor	edi, edi
0x2b1f:	mov	edx, 5
0x2b24:	call	0x1300


0x2b29:	mov	rcx, rax
0x2b2c:	mov	qword ptr [rsp + 0x60], rax
0x2b31:	lea	rax, [rip + 0x1d35]
0x2b38:	cmp	rcx, rax
0x2b3b:	je	0x2ec4


0x2ec4:	mov	esi, dword ptr [rsp + 8]
0x2ec8:	mov	rdi, rcx
0x2ecb:	call	0x1c60


0x2ed0:	mov	qword ptr [rsp + 0x60], rax
0x2ed5:	jmp	0x2b41


0x2eba:	mov	qword ptr [rsp + 0x68], rax
0x2ebf:	jmp	0x2b16


0x2b8a:	mov	byte ptr [rsp + 0xe], 1
0x2b8f:	mov	byte ptr [rsp + 0x7c], 0
0x2b94:	xor	r12d, r12d
0x2b97:	mov	qword ptr [rsp + 0x50], 0
0x2ba0:	mov	byte ptr [rsp + 0xf], 0
0x2ba5:	xor	r15d, r15d
0x2ba8:	mov	byte ptr [rsp + 0xd], 0
0x2bad:	mov	qword ptr [rsp + 0x18], 0
0x2bb6:	mov	qword ptr [rsp + 0x48], 0
0x2bbf:	jmp	0x1e23


0x2bc4:	mov	byte ptr [rsp + 0xe], 1
0x2bc9:	mov	byte ptr [rsp + 0x7c], 0
0x2bce:	xor	r12d, r12d
0x2bd1:	mov	qword ptr [rsp + 0x50], 0
0x2bda:	mov	byte ptr [rsp + 0xf], 1
0x2bdf:	mov	byte ptr [rsp + 0xd], 1
0x2be4:	jmp	0x1e03


0x1e03:	lea	rax, [rip + 0x2a63]
0x1e0a:	mov	qword ptr [rsp + 0x18], 1
0x1e13:	xor	r15d, r15d
0x1e16:	mov	dword ptr [rsp + 8], 2
0x1e1e:	mov	qword ptr [rsp + 0x48], rax
0x1e23:	xor	r11d, r11d
0x1e26:	mov	rax, rbp
0x1e29:	mov	r8d, r12d
0x1e2c:	mov	rbp, r11
0x1e2f:	mov	r11, rax
0x1e32:	nop	word ptr [rax + rax]
0x1e38:	cmp	r11, rbp
0x1e3b:	setne	r12b
0x1e3f:	cmp	r11, -1
0x1e43:	jne	0x1e52


0x2db8:	test	ebx, ebx
0x2dba:	je	0x2f48


0x2f48:	mov	byte ptr [rsp + 0xd], 0
0x2f4d:	jmp	0x29c1


0x2dc0:	lea	rax, [rip + 0x1aa6]
0x2dc7:	mov	byte ptr [rsp + 0xe], 1
0x2dcc:	mov	byte ptr [rsp + 0x7c], 0
0x2dd1:	xor	r12d, r12d
0x2dd4:	mov	qword ptr [rsp + 0x50], 0
0x2ddd:	mov	byte ptr [rsp + 0xf], 1
0x2de2:	mov	byte ptr [rsp + 0xd], 0
0x2de7:	mov	qword ptr [rsp + 0x18], 1
0x2df0:	xor	r15d, r15d
0x2df3:	mov	qword ptr [rsp + 0x48], rax
0x2df8:	jmp	0x1e23


0x29c1:	test	r13, r13
0x29c4:	jne	0x2f5a


0x2f84:	nop	
0x2f86:	nop	word ptr cs:[rax + rax]


0x313b:	nop	dword ptr [rax + rax]


0x3176:	nop	word ptr cs:[rax + rax]


0x3191:	nop	dword ptr [rax + rax]
0x3196:	nop	word ptr cs:[rax + rax]


0x31b1:	nop	dword ptr [rax + rax]
0x31b6:	nop	word ptr cs:[rax + rax]


0x31f5:	nop	
0x31f6:	nop	word ptr cs:[rax + rax]


0x3215:	nop	
0x3216:	nop	word ptr cs:[rax + rax]


0x32c4:	nop	
0x32c6:	nop	word ptr cs:[rax + rax]


0x33b3:	nop	dword ptr [rax]
0x33b6:	nop	word ptr cs:[rax + rax]


0x33ca:	nop	word ptr [rax + rax]


0x3463:	nop	dword ptr [rax]
0x3466:	nop	word ptr cs:[rax + rax]


0x3483:	nop	dword ptr [rax]
0x3486:	nop	word ptr cs:[rax + rax]


0x349c:	nop	dword ptr [rax]


0x34b8:	nop	dword ptr [rax + rax]


0x34d4:	nop	
0x34d6:	nop	word ptr cs:[rax + rax]


0x356e:	nop	


0x35fa:	nop	word ptr [rax + rax]


0x360c:	nop	dword ptr [rax]


0x361f:	nop	


0x36b8:	nop	dword ptr [rax + rax]


0x36e1:	nop	dword ptr [rax + rax]
0x36e6:	nop	word ptr cs:[rax + rax]


0x36fa:	nop	word ptr [rax + rax]


0x378e:	nop	


0x3821:	nop	dword ptr [rax + rax]
0x3826:	nop	word ptr cs:[rax + rax]


0x383c:	nop	dword ptr [rax]


0x3857:	nop	word ptr [rax + rax]


0x3873:	nop	dword ptr [rax]
0x3876:	nop	word ptr cs:[rax + rax]


0x388c:	nop	dword ptr [rax]


0x38a4:	nop	
0x38a6:	nop	word ptr cs:[rax + rax]


0x38c3:	nop	dword ptr [rax]
0x38c6:	nop	word ptr cs:[rax + rax]


0x38e8:	nop	dword ptr [rax + rax]


0x3d07:	nop	word ptr [rax + rax]


0x3da8:	nop	dword ptr [rax + rax]


0x3e85:	nop	
0x3e86:	nop	word ptr cs:[rax + rax]


0x3f2a:	nop	word ptr [rax + rax]


0x3f54:	nop	
0x3f56:	nop	word ptr cs:[rax + rax]


0x3f62:	nop	dword ptr [rax]
0x3f66:	nop	word ptr cs:[rax + rax]


0x3fa6:	nop	word ptr cs:[rax + rax]


0x3fd4:	nop	
0x3fd6:	nop	word ptr cs:[rax + rax]


0x4062:	nop	dword ptr [rax]
0x4066:	nop	word ptr cs:[rax + rax]


0x40ba:	nop	word ptr [rax + rax]


0x40d7:	nop	word ptr [rax + rax]


0x410e:	nop	


0x4138:	nop	dword ptr [rax + rax]


0x4153:	nop	word ptr cs:[rax + rax]
0x415d:	nop	dword ptr [rax]


0x4195:	nop	word ptr cs:[rax + rax]
0x419f:	nop	


0x4223:	nop	word ptr cs:[rax + rax]
0x422d:	nop	dword ptr [rax]


0x42ad:	nop	dword ptr [rax]


0x434c:	nop	dword ptr [rax]


0x43cb:	nop	dword ptr [rax + rax]


0x4467:	nop	word ptr [rax + rax]


0x44d5:	nop	
0x44d6:	nop	word ptr cs:[rax + rax]


0x44e2:	nop	word ptr cs:[rax + rax]
0x44ec:	nop	dword ptr [rax]


0x2010:	xor	r10d, r10d
0x2013:	mov	eax, dword ptr [rsp + 8]
0x2017:	cmp	eax, 2
0x201a:	je	0x25d8


0x2040:	xor	r10d, r10d
0x2043:	cmp	dword ptr [rsp + 8], 2
0x2048:	je	0x2550


0x2068:	mov	edx, 9
0x206d:	mov	ebx, 0x74
0x2072:	cmp	dword ptr [rsp + 8], 2
0x2077:	sete	al
0x207a:	and	al, byte ptr [rsp + 0xf]
0x207e:	jne	0x21ce


0x20a8:	mov	edx, 8
0x20ad:	mov	ebx, 0x62
0x20b2:	jmp	0x2084


0x20b8:	cmp	dword ptr [rsp + 8], 2
0x20bd:	je	0x2490


0x2160:	cmp	byte ptr [rsp + 0xd], 0
0x2165:	jne	0x2333


0x2188:	cmp	dword ptr [rsp + 8], 2
0x218d:	sete	dl
0x2190:	xor	eax, eax
0x2192:	jmp	0x1f78


0x21a0:	mov	edx, 7
0x21a5:	mov	ebx, 0x61
0x21aa:	jmp	0x2084


0x21b0:	cmp	dword ptr [rsp + 8], 2
0x21b5:	sete	dl
0x21b8:	test	rbp, rbp
0x21bb:	jne	0x1f6c


0x21e0:	cmp	dword ptr [rsp + 8], 2
0x21e5:	sete	dl
0x21e8:	xor	r12d, r12d
0x21eb:	jmp	0x21c1


0x21f0:	cmp	dword ptr [rsp + 8], 2
0x21f5:	mov	ebx, 0x20
0x21fa:	sete	dl
0x21fd:	jmp	0x21c1


0x2200:	mov	edx, 0xd
0x2205:	mov	ebx, 0x72
0x220a:	jmp	0x2072


0x2210:	mov	edx, 0xc
0x2215:	mov	ebx, 0x66
0x221a:	jmp	0x2084


0x2220:	mov	edx, 0xb
0x2225:	mov	ebx, 0x76
0x222a:	jmp	0x2084


0x2230:	mov	edx, 0xa
0x2235:	mov	ebx, 0x6e
0x223a:	jmp	0x2072


0x22d0:	xor	r10d, r10d
0x22d3:	cmp	byte ptr [rsp + 0xd], 0
0x22d8:	jne	0x20ce


0x22f0:	mov	edx, 0xc
0x22f5:	xor	r10d, r10d
0x22f8:	mov	ebx, 0x66
0x22fd:	jmp	0x2084


0x2308:	mov	edx, 0xa
0x230d:	xor	r10d, r10d
0x2310:	mov	ebx, 0x6e
0x2315:	jmp	0x2072


0x2320:	mov	ebx, 0x61
0x2325:	jmp	0x20f0


0x2330:	xor	r10d, r10d
0x2333:	cmp	dword ptr [rsp + 8], 2
0x2338:	sete	dl
0x233b:	cmp	byte ptr [rsp + 0xf], 0
0x2340:	jne	0x2eda


0x23d0:	cmp	dword ptr [rsp + 8], 2
0x23d5:	mov	r12d, r10d
0x23d8:	sete	dl
0x23db:	xor	r10d, r10d
0x23de:	xor	eax, eax
0x23e0:	jmp	0x1f78


0x23e8:	cmp	dword ptr [rsp + 8], 2
0x23ed:	sete	dl
0x23f0:	xor	r10d, r10d
0x23f3:	jmp	0x21b8


0x2400:	cmp	dword ptr [rsp + 8], 2
0x2405:	sete	dl
0x2408:	xor	r10d, r10d
0x240b:	xor	r12d, r12d
0x240e:	jmp	0x21c1


0x2418:	cmp	dword ptr [rsp + 8], 2
0x241d:	mov	r12d, r10d
0x2420:	mov	ebx, 0x20
0x2425:	sete	dl
0x2428:	xor	r10d, r10d
0x242b:	jmp	0x21c1


0x2448:	mov	ebx, 0x76
0x244d:	jmp	0x20f0


0x2458:	mov	edx, 9
0x245d:	xor	r10d, r10d
0x2460:	mov	ebx, 0x74
0x2465:	jmp	0x2072


0x2470:	mov	ebx, 0x62
0x2475:	jmp	0x20f0


0x2a10:	test	ebx, ebx
0x2a12:	jne	0x2e0d


0x15a2:	nop	word ptr [rax + rax]


0x15dc:	nop	dword ptr [rax]


0x16e6:	nop	word ptr cs:[rax + rax]


0x1737:	nop	word ptr [rax + rax]


0x1781:	nop	dword ptr [rax]


0x1c9c:	nop	dword ptr [rax]


0x1ced:	nop	dword ptr [rax]


0x1f18:	nop	dword ptr [rax + rax]


0x2007:	nop	word ptr [rax + rax]


0x203e:	nop	


0x2061:	nop	dword ptr [rax]


0x20a2:	nop	word ptr [rax + rax]


0x20b4:	nop	dword ptr [rax]


0x2158:	nop	dword ptr [rax + rax]


0x2181:	nop	dword ptr [rax]


0x2197:	nop	word ptr [rax + rax]


0x21af:	nop	


0x21de:	nop	


0x21ed:	nop	dword ptr [rax]


0x21ff:	nop	


0x220f:	nop	


0x221f:	nop	


0x222f:	nop	


0x223f:	nop	


0x22ac:	nop	dword ptr [rax]


0x22cc:	nop	dword ptr [rax]


0x22de:	nop	


0x22ef:	nop	


0x2302:	nop	word ptr [rax + rax]


0x231a:	nop	word ptr [rax + rax]


0x232a:	nop	word ptr [rax + rax]


0x23cb:	nop	dword ptr [rax + rax]


0x23e5:	nop	dword ptr [rax]


0x23f8:	nop	dword ptr [rax + rax]


0x2413:	nop	dword ptr [rax + rax]


0x2442:	nop	word ptr [rax + rax]


0x2452:	nop	word ptr [rax + rax]


0x246a:	nop	word ptr [rax + rax]


0x247a:	nop	word ptr [rax + rax]


0x2488:	nop	dword ptr [rax + rax]


0x24af:	nop	


0x2549:	nop	dword ptr [rax]


0x2592:	nop	word ptr [rax + rax]


0x25b8:	nop	dword ptr [rax + rax]


0x25d1:	nop	dword ptr [rax]


0x25f2:	nop	word ptr [rax + rax]


0x2758:	nop	dword ptr [rax + rax]


0x286b:	nop	dword ptr [rax + rax]


0x288e:	nop	


0x2955:	nop	dword ptr [rax]


0x2a0d:	nop	dword ptr [rax]


0x2c16:	nop	word ptr cs:[rax + rax]


0x2ca9:	nop	dword ptr [rax]


0x2d1d:	nop	dword ptr [rax]


0x2dfd:	nop	dword ptr [rax]


0x310b:	nop	dword ptr [rax + rax]


0x3996:	nop	word ptr cs:[rax + rax]


0x3a25:	nop	dword ptr [rax]


0x3a46:	nop	word ptr cs:[rax + rax]


0x3aa5:	nop	dword ptr [rax]


0x3ae1:	nop	dword ptr [rax]


0x3b28:	nop	dword ptr [rax + rax]


0x3b77:	nop	word ptr [rax + rax]


0x3bd4:	nop	dword ptr [rax]


0x3c02:	nop	word ptr [rax + rax]


0x3cb6:	nop	word ptr cs:[rax + rax]


0x3d19:	nop	dword ptr [rax]


0x3f92:	nop	word ptr [rax + rax]


0x4019:	nop	dword ptr [rax]


0x4044:	nop	dword ptr [rax]


0x409d:	nop	dword ptr [rax]


0x4264:	nop	dword ptr [rax]


0x4281:	nop	dword ptr [rax]


0x4292:	nop	word ptr [rax + rax]


0x42ea:	nop	word ptr [rax + rax]


0x4336:	nop	word ptr cs:[rax + rax]


0x4395:	nop	dword ptr [rax]


0x43f3:	nop	dword ptr [rax + rax]


0x441f:	nop	


