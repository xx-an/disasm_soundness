0xb2d0:	sub	rsp, 8
0xb2d4:	add	rsp, 8
0xb2d8:	ret	


0xb2c0:	mov	rdx, qword ptr [rip + 0x205d41]
0xb2c7:	xor	esi, esi
0xb2c9:	jmp	0x2750


0xb2b0:	ret	


0xb240:	push	r15
0xb242:	push	r14
0xb244:	mov	r15, rdx
0xb247:	push	r13
0xb249:	push	r12
0xb24b:	lea	r12, [rip + 0x2047fe]
0xb252:	push	rbp
0xb253:	lea	rbp, [rip + 0x2047fe]
0xb25a:	push	rbx
0xb25b:	mov	r13d, edi
0xb25e:	mov	r14, rsi
0xb261:	sub	rbp, r12
0xb264:	sub	rsp, 8
0xb268:	sar	rbp, 3
0xb26c:	call	0x23e0


0xa550:	push	r15
0xa552:	push	r14
0xa554:	lea	rcx, [rsi + 0x20]
0xa558:	push	r13
0xa55a:	push	r12
0xa55c:	lea	rax, [rdx + 0x10]
0xa560:	push	rbp
0xa561:	push	rbx
0xa562:	mov	r14, rsi
0xa565:	mov	r15, rdx
0xa568:	xor	ebx, ebx
0xa56a:	mov	r9d, 7
0xa570:	sub	rsp, 0x58
0xa574:	mov	r10d, 7
0xa57a:	mov	qword ptr [rsi], 0
0xa581:	mov	qword ptr [rsi + 8], rcx
0xa585:	mov	qword ptr [rsp + 0x28], rcx
0xa58a:	mov	r8, -1
0xa591:	mov	qword ptr [rdx], 0
0xa598:	mov	qword ptr [rsp + 8], rax
0xa59d:	mov	qword ptr [rdx + 8], rax
0xa5a1:	mov	qword ptr [rsp + 0x18], 0
0xa5aa:	mov	qword ptr [rsp + 0x10], 0
0xa5b3:	mov	qword ptr [rsp + 0x20], 0
0xa5bc:	jmp	0xa5cb


0xa350:	cmp	qword ptr [rsi], 0
0xa354:	mov	rax, qword ptr [rsi + 8]
0xa358:	je	0xa3bd


0x9230:	push	rbp
0x9231:	mov	rbp, rsp
0x9234:	push	r15
0x9236:	push	r14
0x9238:	push	r13
0x923a:	push	r12
0x923c:	lea	r14, [rbp - 0x3b0]
0x9243:	push	rbx
0x9244:	mov	rbx, rdx
0x9247:	mov	r12, rcx
0x924a:	mov	rdx, r14
0x924d:	sub	rsp, 0x408
0x9254:	mov	qword ptr [rbp - 0x418], rsi
0x925b:	lea	rsi, [rbp - 0x2c0]
0x9262:	mov	qword ptr [rbp - 0x3e8], rdi
0x9269:	mov	rdi, rbx
0x926c:	mov	qword ptr [rbp - 0x410], r14
0x9273:	mov	rax, qword ptr fs:[0x28]
0x927c:	mov	qword ptr [rbp - 0x38], rax
0x9280:	xor	eax, eax
0x9282:	mov	qword ptr [rbp - 0x408], rsi
0x9289:	call	0xa550


0x91d0:	mov	rax, qword ptr [rdi + 8]
0x91d4:	cmp	qword ptr [rdi + 0x10], rax
0x91d8:	je	0x91e0


0x9190:	test	rdi, rdi
0x9193:	push	rbx
0x9194:	mov	rbx, rdi
0x9197:	je	0x91aa


0x9110:	push	r12
0x9112:	push	rbp
0x9113:	push	rbx
0x9114:	mov	rbx, rdi
0x9117:	call	0x2650


0x90d0:	sub	rsp, 8
0x90d4:	mov	edi, 0xe
0x90d9:	call	0x2680


0x9070:	sub	rsp, 8
0x9074:	xor	esi, esi
0x9076:	call	0x26b0


0x8ff0:	push	r12
0x8ff2:	push	rbp
0x8ff3:	mov	rbp, rdi
0x8ff6:	push	rbx
0x8ff7:	call	0x2480


0x8f70:	push	rbx
0x8f71:	mov	rax, rsi
0x8f74:	mov	rbx, rdi
0x8f77:	xor	edi, edi
0x8f79:	sub	rsp, 0x10
0x8f7d:	mov	rcx, qword ptr fs:[0x28]
0x8f86:	mov	qword ptr [rsp + 8], rcx
0x8f8b:	xor	ecx, ecx
0x8f8d:	mov	rsi, rsp
0x8f90:	mov	rcx, rdx
0x8f93:	mov	rdx, rax
0x8f96:	call	0x9230


0x8ee0:	push	r13
0x8ee2:	push	r12
0x8ee4:	mov	r13, rsi
0x8ee7:	push	rbp
0x8ee8:	push	rbx
0x8ee9:	mov	rbx, rdi
0x8eec:	mov	r12, rdx
0x8eef:	sub	rsp, 0x18
0x8ef3:	mov	rax, qword ptr fs:[0x28]
0x8efc:	mov	qword ptr [rsp + 8], rax
0x8f01:	xor	eax, eax
0x8f03:	lea	rax, [rsp + 4]
0x8f08:	test	rdi, rdi
0x8f0b:	cmove	rbx, rax
0x8f0f:	mov	rdi, rbx
0x8f12:	call	0x2540


0x8c60:	push	r12
0x8c62:	push	rbp
0x8c63:	mov	ebp, edi
0x8c65:	push	rbx
0x8c66:	sub	rsp, 0x50
0x8c6a:	mov	rax, qword ptr fs:[0x28]
0x8c73:	mov	qword ptr [rsp + 0x18], rax
0x8c78:	xor	eax, eax
0x8c7a:	lea	rax, [rsp + 0x70]
0x8c7f:	test	esi, esi
0x8c81:	mov	qword ptr [rsp + 0x30], rdx
0x8c86:	mov	qword ptr [rsp + 0x38], rcx
0x8c8b:	mov	qword ptr [rsp + 0x40], r8
0x8c90:	mov	qword ptr [rsp + 8], rax
0x8c95:	lea	rax, [rsp + 0x20]
0x8c9a:	mov	qword ptr [rsp + 0x48], r9
0x8c9f:	mov	dword ptr [rsp], 0x10
0x8ca6:	mov	qword ptr [rsp + 0x10], rax
0x8cab:	je	0x8eb2


0x8840:	push	r15
0x8842:	push	r14
0x8844:	push	r13
0x8846:	push	r12
0x8848:	push	rbp
0x8849:	push	rbx
0x884a:	sub	rsp, 0x28
0x884e:	mov	rax, qword ptr fs:[0x28]
0x8857:	mov	qword ptr [rsp + 0x18], rax
0x885c:	xor	eax, eax
0x885e:	cmp	edx, 0x24
0x8861:	ja	0x8bc5


0x8180:	push	r15
0x8182:	push	r14
0x8184:	push	r13
0x8186:	push	r12
0x8188:	push	rbp
0x8189:	push	rbx
0x818a:	sub	rsp, 0x28
0x818e:	mov	rax, qword ptr fs:[0x28]
0x8197:	mov	qword ptr [rsp + 0x18], rax
0x819c:	xor	eax, eax
0x819e:	cmp	edx, 0x24
0x81a1:	ja	0x880f


0x8150:	sub	rsp, 0x10
0x8154:	push	r9
0x8156:	mov	r9, r8
0x8159:	mov	r8, rcx
0x815c:	mov	rcx, rdx
0x815f:	mov	rdx, rsi
0x8162:	mov	esi, 0xa
0x8167:	call	0x8050


0x8050:	push	r15
0x8052:	push	r14
0x8054:	mov	r15, rcx
0x8057:	push	r13
0x8059:	push	r12
0x805b:	mov	r14, rdx
0x805e:	push	rbp
0x805f:	push	rbx
0x8060:	mov	edx, esi
0x8062:	xor	esi, esi
0x8064:	mov	r12, rdi
0x8067:	mov	r13, r9
0x806a:	sub	rsp, 0x18
0x806e:	mov	rcx, rsp
0x8071:	mov	ebx, dword ptr [rsp + 0x50]
0x8075:	mov	rax, qword ptr fs:[0x28]
0x807e:	mov	qword ptr [rsp + 8], rax
0x8083:	xor	eax, eax
0x8085:	call	0x8840


0x8010:	lea	rsi, [rip + 0x6338]
0x8017:	sub	rsp, 8
0x801b:	mov	edx, 5
0x8020:	xor	edi, edi
0x8022:	call	0x24f0


0x7ff0:	push	rbx
0x7ff1:	mov	rbx, rdi
0x7ff4:	call	0x2510


0x7fc0:	push	rbp
0x7fc1:	push	rbx
0x7fc2:	mov	rbp, rdi
0x7fc5:	mov	rdi, rsi
0x7fc8:	mov	rbx, rsi
0x7fcb:	sub	rsp, 8
0x7fcf:	call	0x7dc0


0x7f90:	mov	rax, rdi
0x7f93:	sub	rsp, 8
0x7f97:	mul	rsi
0x7f9a:	seto	dl
0x7f9d:	test	rax, rax
0x7fa0:	js	0x7fb9


0x7f70:	push	rbx
0x7f71:	mov	rbx, rdi
0x7f74:	call	0x7dc0


0x7f20:	test	rdi, rdi
0x7f23:	mov	rax, qword ptr [rsi]
0x7f26:	je	0x7f50


0x7e90:	test	rdi, rdi
0x7e93:	mov	r9, rdx
0x7e96:	mov	rcx, qword ptr [rsi]
0x7e99:	je	0x7ed0


0x7e60:	mov	rax, rsi
0x7e63:	mul	rdx
0x7e66:	mov	rsi, rax
0x7e69:	seto	al
0x7e6c:	test	rsi, rsi
0x7e6f:	js	0x7e7b


0x7e20:	test	rsi, rsi
0x7e23:	push	rbx
0x7e24:	mov	rbx, rsi
0x7e27:	jne	0x7e2e


0x7e10:	jmp	0x7dc0


0x7de0:	mov	rax, rdi
0x7de3:	mul	rsi
0x7de6:	mov	rdi, rax
0x7de9:	seto	al
0x7dec:	test	rdi, rdi
0x7def:	js	0x7dfb


0x7dc0:	push	rbx
0x7dc1:	mov	rbx, rdi
0x7dc4:	call	0x2660


0x7d40:	push	rbx
0x7d41:	lea	rsi, [rip + 0x62fa]
0x7d48:	mov	edx, 5
0x7d4d:	xor	edi, edi
0x7d4f:	call	0x24f0


0x7c60:	push	rbp
0x7c61:	push	rbx
0x7c62:	mov	r10d, 0x20
0x7c68:	xor	r11d, r11d
0x7c6b:	sub	rsp, 0xb8
0x7c72:	mov	rax, qword ptr fs:[0x28]
0x7c7b:	mov	qword ptr [rsp + 0x78], rax
0x7c80:	xor	eax, eax
0x7c82:	lea	rax, [rsp + 0xd0]
0x7c8a:	mov	qword ptr [rsp + 0xa0], r8
0x7c92:	lea	rbx, [rsp + 0xd0]
0x7c9a:	lea	r8, [rsp + 0x20]
0x7c9f:	mov	qword ptr [rsp + 0xa8], r9
0x7ca7:	mov	dword ptr [rsp + 8], 0x20
0x7caf:	mov	qword ptr [rsp + 0x10], rax
0x7cb4:	lea	rax, [rsp + 0x80]
0x7cbc:	xor	r9d, r9d
0x7cbf:	mov	qword ptr [rsp + 0x18], rax
0x7cc4:	mov	rbp, rax
0x7cc7:	nop	word ptr [rax + rax]
0x7cd0:	cmp	r10d, 0x2f
0x7cd4:	ja	0x7d2c


0x7be0:	sub	rsp, 0x68
0x7be4:	mov	r10, r8
0x7be7:	xor	r9d, r9d
0x7bea:	mov	rax, qword ptr fs:[0x28]
0x7bf3:	mov	qword ptr [rsp + 0x58], rax
0x7bf8:	xor	eax, eax
0x7bfa:	mov	r8, rsp
0x7bfd:	nop	dword ptr [rax]
0x7c00:	mov	eax, dword ptr [r10]
0x7c03:	cmp	eax, 0x2f
0x7c06:	ja	0x7c4a


0x7bc0:	xor	r9d, r9d
0x7bc3:	cmp	qword ptr [r8], 0
0x7bc7:	je	0x7bdb


0x77a0:	push	r15
0x77a2:	push	r14
0x77a4:	push	r13
0x77a6:	push	r12
0x77a8:	mov	r12, r9
0x77ab:	push	rbp
0x77ac:	push	rbx
0x77ad:	mov	rbp, rdi
0x77b0:	mov	rbx, r8
0x77b3:	sub	rsp, 0x28
0x77b7:	test	rsi, rsi
0x77ba:	je	0x78d8


0x7780:	lea	rcx, [rip + 0x2098b9]
0x7787:	mov	rsi, rdi
0x778a:	mov	rdx, -1
0x7791:	xor	edi, edi
0x7793:	jmp	0x6e40


0x7760:	lea	rcx, [rip + 0x2098d9]
0x7767:	mov	rdx, -1
0x776e:	jmp	0x6e40


0x7740:	lea	rcx, [rip + 0x2098f9]
0x7747:	mov	rdx, rsi
0x774a:	mov	rsi, rdi
0x774d:	xor	edi, edi
0x774f:	jmp	0x6e40


0x7730:	lea	rcx, [rip + 0x209909]
0x7737:	jmp	0x6e40


0x7710:	mov	r8, rcx
0x7713:	mov	rcx, rdx
0x7716:	mov	rdx, rsi
0x7719:	mov	rsi, rdi
0x771c:	xor	edi, edi
0x771e:	jmp	0x7640


0x76f0:	mov	rcx, rdx
0x76f3:	mov	r8, -1
0x76fa:	mov	rdx, rsi
0x76fd:	mov	rsi, rdi
0x7700:	xor	edi, edi
0x7702:	jmp	0x7640


0x76e0:	mov	r8, -1
0x76e7:	jmp	0x7640


0x7640:	sub	rsp, 0x48
0x7644:	mov	r9, rcx
0x7647:	mov	rcx, qword ptr [rip + 0x209d02]
0x764e:	movdqa	xmm0, xmmword ptr [rip + 0x209cca]
0x7656:	mov	rax, qword ptr fs:[0x28]
0x765f:	mov	qword ptr [rsp + 0x38], rax
0x7664:	xor	eax, eax
0x7666:	movaps	xmmword ptr [rsp], xmm0
0x766a:	test	rsi, rsi
0x766d:	mov	qword ptr [rsp + 0x30], rcx
0x7672:	mov	dword ptr [rsp], 0xa
0x7679:	movdqa	xmm0, xmmword ptr [rip + 0x209caf]
0x7681:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x7686:	movdqa	xmm0, xmmword ptr [rip + 0x209cb2]
0x768e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x7693:	je	0x76c7


0x75b0:	sub	rsp, 0x48
0x75b4:	mov	rax, rdx
0x75b7:	mov	rdx, qword ptr fs:[0x28]
0x75c0:	mov	qword ptr [rsp + 0x38], rdx
0x75c5:	xor	edx, edx
0x75c7:	cmp	esi, 0xa
0x75ca:	je	0x7634


0x75a0:	mov	edx, 0x3a
0x75a5:	jmp	0x74d0


0x7580:	mov	edx, 0x3a
0x7585:	mov	rsi, -1
0x758c:	jmp	0x74d0


0x7570:	movsx	edx, sil
0x7574:	mov	rsi, -1
0x757b:	jmp	0x74d0


0x74d0:	sub	rsp, 0x48
0x74d4:	mov	ecx, edx
0x74d6:	mov	rax, qword ptr fs:[0x28]
0x74df:	mov	qword ptr [rsp + 0x38], rax
0x74e4:	xor	eax, eax
0x74e6:	mov	rax, qword ptr [rip + 0x209e63]
0x74ed:	mov	r8, rsp
0x74f0:	and	ecx, 0x1f
0x74f3:	movdqa	xmm0, xmmword ptr [rip + 0x209e25]
0x74fb:	mov	qword ptr [rsp + 0x30], rax
0x7500:	mov	eax, edx
0x7502:	movaps	xmmword ptr [rsp], xmm0
0x7506:	shr	al, 5
0x7509:	movzx	eax, al
0x750c:	lea	r9, [r8 + rax*4 + 8]
0x7511:	movdqa	xmm0, xmmword ptr [rip + 0x209e17]
0x7519:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x751e:	movdqa	xmm0, xmmword ptr [rip + 0x209e1a]
0x7526:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x752b:	mov	edx, dword ptr [r9]
0x752e:	mov	eax, edx
0x7530:	shr	eax, cl
0x7532:	not	eax
0x7534:	and	eax, 1
0x7537:	shl	eax, cl
0x7539:	mov	rcx, r8
0x753c:	xor	eax, edx
0x753e:	mov	rdx, rsi
0x7541:	mov	rsi, rdi
0x7544:	mov	dword ptr [r9], eax
0x7547:	xor	edi, edi
0x7549:	call	0x6e40


0x74c0:	mov	rcx, rdx
0x74c3:	mov	rdx, rsi
0x74c6:	mov	esi, edi
0x74c8:	xor	edi, edi
0x74ca:	jmp	0x7420


0x74b0:	mov	rdx, rsi
0x74b3:	mov	esi, edi
0x74b5:	xor	edi, edi
0x74b7:	jmp	0x7390


0x7420:	sub	rsp, 0x48
0x7424:	mov	rax, rdx
0x7427:	mov	rdx, rcx
0x742a:	mov	rcx, qword ptr fs:[0x28]
0x7433:	mov	qword ptr [rsp + 0x38], rcx
0x7438:	xor	ecx, ecx
0x743a:	cmp	esi, 0xa
0x743d:	je	0x74a0


0x7390:	sub	rsp, 0x48
0x7394:	mov	rax, rdx
0x7397:	mov	rdx, qword ptr fs:[0x28]
0x73a0:	mov	qword ptr [rsp + 0x38], rdx
0x73a5:	xor	edx, edx
0x73a7:	cmp	esi, 0xa
0x73aa:	je	0x7414


0x7370:	lea	rcx, [rip + 0x209fa9]
0x7377:	mov	rdx, rsi
0x737a:	mov	rsi, rdi
0x737d:	xor	edi, edi
0x737f:	jmp	0x6e40


0x7350:	lea	rcx, [rip + 0x209fc9]
0x7357:	mov	rsi, rdi
0x735a:	mov	rdx, -1
0x7361:	xor	edi, edi
0x7363:	jmp	0x6e40


0x7340:	lea	rcx, [rip + 0x209fd9]
0x7347:	jmp	0x6e40


0x7320:	lea	rcx, [rip + 0x209ff9]
0x7327:	mov	rdx, -1
0x732e:	jmp	0x6e40


0x7280:	mov	eax, dword ptr [rip + 0x209df2]
0x7286:	push	r12
0x7288:	mov	r12, qword ptr [rip + 0x209df1]
0x728f:	push	rbp
0x7290:	push	rbx
0x7291:	cmp	eax, 1
0x7294:	jle	0x72c1


0x7270:	mov	rcx, rdx
0x7273:	xor	edx, edx
0x7275:	jmp	0x7180


0x7180:	push	r15
0x7182:	push	r14
0x7184:	lea	rax, [rip + 0x20a195]
0x718b:	push	r13
0x718d:	push	r12
0x718f:	mov	r12, rdx
0x7192:	push	rbp
0x7193:	push	rbx
0x7194:	mov	rbx, rcx
0x7197:	mov	r14, rdi
0x719a:	mov	r15, rsi
0x719d:	sub	rsp, 0x38
0x71a1:	test	rcx, rcx
0x71a4:	cmove	rbx, rax
0x71a8:	xor	ebp, ebp
0x71aa:	call	0x2450


0x7100:	push	r15
0x7102:	push	r14
0x7104:	lea	rax, [rip + 0x20a215]
0x710b:	push	r13
0x710d:	push	r12
0x710f:	mov	r13, rdi
0x7112:	push	rbp
0x7113:	push	rbx
0x7114:	mov	rbx, r8
0x7117:	mov	r14, rsi
0x711a:	mov	r15, rdx
0x711d:	sub	rsp, 0x18
0x7121:	test	r8, r8
0x7124:	cmove	rbx, rax
0x7128:	mov	qword ptr [rsp + 8], rcx
0x712d:	call	0x2450


0x70d0:	lea	rax, [rip + 0x20a249]
0x70d7:	test	rdi, rdi
0x70da:	cmove	rdi, rax
0x70de:	test	rsi, rsi
0x70e1:	mov	dword ptr [rdi], 0xa
0x70e7:	je	0x70f7


0x70b0:	lea	rax, [rip + 0x20a269]
0x70b7:	test	rdi, rdi
0x70ba:	cmove	rdi, rax
0x70be:	mov	eax, dword ptr [rdi + 4]
0x70c1:	mov	dword ptr [rdi + 4], esi
0x70c4:	ret	


0x7070:	lea	rax, [rip + 0x20a2a9]
0x7077:	test	rdi, rdi
0x707a:	mov	ecx, esi
0x707c:	cmove	rdi, rax
0x7080:	mov	eax, esi
0x7082:	and	ecx, 0x1f
0x7085:	shr	al, 5
0x7088:	movzx	eax, al
0x708b:	lea	rdi, [rdi + rax*4 + 8]
0x7090:	mov	esi, dword ptr [rdi]
0x7092:	mov	eax, esi
0x7094:	shr	eax, cl
0x7096:	xor	edx, eax
0x7098:	and	eax, 1
0x709b:	and	edx, 1
0x709e:	shl	edx, cl
0x70a0:	xor	edx, esi
0x70a2:	mov	dword ptr [rdi], edx
0x70a4:	ret	


0x7050:	lea	rax, [rip + 0x20a2c9]
0x7057:	test	rdi, rdi
0x705a:	cmove	rdi, rax
0x705e:	mov	dword ptr [rdi], esi
0x7060:	ret	


0x7030:	lea	rax, [rip + 0x20a2e9]
0x7037:	test	rdi, rdi
0x703a:	cmove	rdi, rax
0x703e:	mov	eax, dword ptr [rdi]
0x7040:	ret	


0x6ff0:	push	r12
0x6ff2:	push	rbp
0x6ff3:	push	rbx
0x6ff4:	mov	rbx, rdi
0x6ff7:	call	0x2450


0x6e40:	push	r15
0x6e42:	push	r14
0x6e44:	movsxd	r15, edi
0x6e47:	push	r13
0x6e49:	push	r12
0x6e4b:	mov	r14, rdx
0x6e4e:	push	rbp
0x6e4f:	push	rbx
0x6e50:	mov	rbp, rcx
0x6e53:	sub	rsp, 0x28
0x6e57:	mov	qword ptr [rsp + 8], rsi
0x6e5c:	call	0x2450


0x5c00:	push	r15
0x5c02:	push	r14
0x5c04:	mov	r15d, r8d
0x5c07:	push	r13
0x5c09:	push	r12
0x5c0b:	mov	r14, rdi
0x5c0e:	push	rbp
0x5c0f:	push	rbx
0x5c10:	mov	ebx, r9d
0x5c13:	mov	r13, rsi
0x5c16:	mov	rbp, rcx
0x5c19:	and	ebx, 2
0x5c1c:	sub	rsp, 0xb8
0x5c23:	mov	rax, qword ptr [rsp + 0xf0]
0x5c2b:	mov	qword ptr [rsp + 0x10], rdx
0x5c30:	mov	dword ptr [rsp + 8], r8d
0x5c35:	mov	dword ptr [rsp + 0x78], r9d
0x5c3a:	mov	qword ptr [rsp + 0x20], rax
0x5c3f:	mov	rax, qword ptr [rsp + 0xf8]
0x5c47:	mov	qword ptr [rsp + 0x68], rax
0x5c4c:	mov	rax, qword ptr [rsp + 0x100]
0x5c54:	mov	qword ptr [rsp + 0x60], rax
0x5c59:	mov	rax, qword ptr fs:[0x28]
0x5c62:	mov	qword ptr [rsp + 0xa8], rax
0x5c6a:	xor	eax, eax
0x5c6c:	call	0x2500


0x5b10:	push	rbp
0x5b11:	push	rbx
0x5b12:	mov	rbp, rdi
0x5b15:	mov	ebx, esi
0x5b17:	sub	rsp, 8
0x5b1b:	call	0x90d0


0x5a70:	test	rdi, rdi
0x5a73:	push	rbx
0x5a74:	je	0x5aed


0x5a10:	push	r13
0x5a12:	push	r12
0x5a14:	xor	eax, eax
0x5a16:	push	rbp
0x5a17:	push	rbx
0x5a18:	mov	ebp, edi
0x5a1a:	mov	rdi, rsi
0x5a1d:	mov	esi, edx
0x5a1f:	mov	edx, ecx
0x5a21:	sub	rsp, 8
0x5a25:	call	0x2710


0x5960:	push	rbp
0x5961:	push	rbx
0x5962:	sub	rsp, 8
0x5966:	mov	rdi, qword ptr [rip + 0x20b73b]
0x596d:	call	0x8ff0


0x5950:	mov	byte ptr [rip + 0x20b8b1], dil
0x5957:	ret	


0x5940:	mov	qword ptr [rip + 0x20b8c9], rdi
0x5947:	ret	


0x4b70:	push	r15
0x4b72:	push	r14
0x4b74:	push	r13
0x4b76:	push	r12
0x4b78:	push	rbp
0x4b79:	push	rbx
0x4b7a:	sub	rsp, 0x78
0x4b7e:	mov	rax, qword ptr [rsp + 0xb0]
0x4b86:	mov	qword ptr [rsp + 0x30], rsi
0x4b8b:	mov	qword ptr [rsp + 8], rdx
0x4b90:	mov	dword ptr [rsp + 0x38], ecx
0x4b94:	mov	qword ptr [rsp + 0x18], r8
0x4b99:	mov	qword ptr [rsp + 0x28], r9
0x4b9e:	mov	qword ptr [rsp + 0x20], rax
0x4ba3:	mov	byte ptr [rsp + 0x3e], dil
0x4ba8:	mov	rax, qword ptr fs:[0x28]
0x4bb1:	mov	qword ptr [rsp + 0x68], rax
0x4bb6:	xor	eax, eax
0x4bb8:	cmp	ecx, 1
0x4bbb:	jle	0x4d10


0x3c30:	push	r13
0x3c32:	push	r12
0x3c34:	mov	edx, 5
0x3c39:	push	rbp
0x3c3a:	push	rbx
0x3c3b:	mov	ebp, edi
0x3c3d:	sub	rsp, 0x88
0x3c44:	mov	rbx, qword ptr [rip + 0x20d5cd]
0x3c4b:	mov	rax, qword ptr fs:[0x28]
0x3c54:	mov	qword ptr [rsp + 0x78], rax
0x3c59:	xor	eax, eax
0x3c5b:	test	edi, edi
0x3c5d:	je	0x3c8d


0x3b20:	push	r12
0x3b22:	push	rbp
0x3b23:	mov	rbp, rsi
0x3b26:	push	rbx
0x3b27:	mov	esi, 0x5413
0x3b2c:	mov	ebx, edi
0x3b2e:	xor	edi, edi
0x3b30:	sub	rsp, 0x10
0x3b34:	mov	rax, qword ptr fs:[0x28]
0x3b3d:	mov	qword ptr [rsp + 8], rax
0x3b42:	xor	eax, eax
0x3b44:	mov	rdx, rsp
0x3b47:	call	0x25d0


0x3a30:	push	r14
0x3a32:	push	r13
0x3a34:	mov	r13, rdx
0x3a37:	push	r12
0x3a39:	push	rbp
0x3a3a:	mov	r12d, edi
0x3a3d:	push	rbx
0x3a3e:	xor	edi, edi
0x3a40:	mov	ebp, esi
0x3a42:	mov	esi, 0x5413
0x3a47:	sub	rsp, 0x10
0x3a4b:	mov	rax, qword ptr fs:[0x28]
0x3a54:	mov	qword ptr [rsp + 8], rax
0x3a59:	xor	eax, eax
0x3a5b:	mov	rbx, rsp
0x3a5e:	mov	rdx, rbx
0x3a61:	call	0x25d0


0x3990:	sub	rsp, 0x28
0x3994:	mov	esi, 0x5413
0x3999:	mov	edi, 1
0x399e:	mov	rax, qword ptr fs:[0x28]
0x39a7:	mov	qword ptr [rsp + 0x18], rax
0x39ac:	xor	eax, eax
0x39ae:	lea	rdx, [rsp + 0x10]
0x39b3:	call	0x25d0


0x38b0:	cmp	dil, 0x1f
0x38b4:	jbe	0x38d8


0x3860:	push	rbp
0x3861:	push	rbx
0x3862:	mov	rbp, rsi
0x3865:	lea	rsi, [rip + 0x7a91]
0x386c:	mov	rbx, rdi
0x386f:	mov	edx, 5
0x3874:	sub	rsp, 8
0x3878:	xor	edi, edi
0x387a:	call	0x24f0


0x36c0:	push	r12
0x36c2:	push	rbp
0x36c3:	mov	rbp, rdi
0x36c6:	push	rbx
0x36c7:	mov	ebx, esi
0x36c9:	call	0x24a0


0x3520:	push	rbx
0x3521:	mov	r10, rdi
0x3524:	sub	rsp, 0xe0
0x352b:	test	al, al
0x352d:	mov	qword ptr [rsp + 0x38], rsi
0x3532:	mov	qword ptr [rsp + 0x40], rdx
0x3537:	mov	qword ptr [rsp + 0x48], rcx
0x353c:	mov	qword ptr [rsp + 0x50], r8
0x3541:	mov	qword ptr [rsp + 0x58], r9
0x3546:	je	0x3582


0x34d0:	cmp	edi, 4
0x34d3:	ja	0x3513


0x3460:	push	r12
0x3462:	lea	rsi, [rip + 0x825f]
0x3469:	push	rbp
0x346a:	mov	r12, rdi
0x346d:	push	rbx
0x346e:	xor	ebp, ebp
0x3470:	lea	rbx, [rip + 0x20c601]
0x3477:	jmp	0x3490


0x3450:	push	rbp
0x3451:	mov	rbp, rsp
0x3454:	pop	rbp
0x3455:	jmp	0x33c0


0x3410:	cmp	byte ptr [rip + 0x20dcf1], 0
0x3417:	jne	0x3448


0x33c0:	lea	rdi, [rip + 0x20dcd9]
0x33c7:	lea	rsi, [rip + 0x20dcd2]
0x33ce:	push	rbp
0x33cf:	sub	rsi, rdi
0x33d2:	mov	rbp, rsp
0x33d5:	sar	rsi, 3
0x33d9:	mov	rax, rsi
0x33dc:	shr	rax, 0x3f
0x33e0:	add	rsi, rax
0x33e3:	sar	rsi, 1
0x33e6:	je	0x3400


0x3380:	lea	rdi, [rip + 0x20dd19]
0x3387:	push	rbp
0x3388:	lea	rax, [rip + 0x20dd11]
0x338f:	cmp	rax, rdi
0x3392:	mov	rbp, rsp
0x3395:	je	0x33b0


0x3350:	xor	ebp, ebp
0x3352:	mov	r9, rdx
0x3355:	pop	rsi
0x3356:	mov	rdx, rsp
0x3359:	and	rsp, 0xfffffffffffffff0
0x335d:	push	rax
0x335e:	push	rsp
0x335f:	lea	r8, [rip + 0x7f4a]
0x3366:	lea	rcx, [rip + 0x7ed3]
0x336d:	lea	rdi, [rip - 0xba4]
0x3374:	call	qword ptr [rip + 0x20dc66]


0x27d0:	push	r15
0x27d2:	push	r14
0x27d4:	mov	r15d, 1
0x27da:	push	r13
0x27dc:	push	r12
0x27de:	mov	r13d, edi
0x27e1:	push	rbp
0x27e2:	push	rbx
0x27e3:	mov	rbx, rsi
0x27e6:	xor	r14d, r14d
0x27e9:	xor	r12d, r12d
0x27ec:	xor	ebp, ebp
0x27ee:	sub	rsp, 0x28
0x27f2:	mov	rdi, qword ptr [rsi]
0x27f5:	mov	rax, qword ptr fs:[0x28]
0x27fe:	mov	qword ptr [rsp + 0x18], rax
0x2803:	xor	eax, eax
0x2805:	call	0x5a70


0x23e0:	sub	rsp, 8
0x23e4:	mov	rax, qword ptr [rip + 0x20ebfd]
0x23eb:	test	rax, rax
0x23ee:	je	0x23f2


0x2750:	jmp	qword ptr [rip + 0x20e84a]


0xa5cb:	movzx	eax, byte ptr [rdi]
0xa5ce:	test	al, al
0xa5d0:	jne	0xa5c0


0xa3bd:	xor	eax, eax
0xa3bf:	ret	


0xa35a:	lea	r8, [rip + 0x427f]
0xa361:	lea	r10, [rip + 0x42d8]
0xa368:	lea	r9, [rip + 0x4269]
0xa36f:	xor	ecx, ecx
0xa371:	nop	dword ptr [rax]
0xa378:	cmp	dword ptr [rax], 0x16
0xa37b:	ja	0xa3c0


0x91e0:	mov	rax, qword ptr [rdi + 0x20]
0x91e4:	cmp	qword ptr [rdi + 0x28], rax
0x91e8:	jne	0x91da


0x91da:	jmp	0x2720


0x91aa:	mov	rdi, rbx
0x91ad:	pop	rbx
0x91ae:	jmp	0x2670


0x9199:	call	0x2690


0x2650:	jmp	qword ptr [rip + 0x20e8ca]


0x2680:	jmp	qword ptr [rip + 0x20e8b2]


0x26b0:	jmp	qword ptr [rip + 0x20e89a]


0x2480:	jmp	qword ptr [rip + 0x20e9b2]


0x2540:	jmp	qword ptr [rip + 0x20e952]


0x8eb2:	mov	rax, qword ptr [rsp + 0x10]
0x8eb7:	xor	esi, esi
0x8eb9:	mov	edx, dword ptr [rax + 0x10]
0x8ebc:	xor	eax, eax
0x8ebe:	call	0x2490


0x8cb1:	cmp	esi, 0x406
0x8cb7:	jne	0x8d00


0x8867:	lea	rax, [rsp + 0x10]
0x886c:	mov	r15, rsi
0x886f:	test	rsi, rsi
0x8872:	mov	rbp, rdi
0x8875:	mov	dword ptr [rsp + 8], edx
0x8879:	mov	r14, rcx
0x887c:	mov	r13, r8
0x887f:	cmove	r15, rax
0x8883:	call	0x2450


0x8bc5:	lea	rcx, [rip + 0x5994]
0x8bcc:	lea	rsi, [rip + 0x578d]
0x8bd3:	lea	rdi, [rip + 0x57a6]
0x8bda:	mov	edx, 0x54
0x8bdf:	call	0x25a0


0x81a7:	lea	rax, [rsp + 0x10]
0x81ac:	test	rsi, rsi
0x81af:	mov	rbx, rsi
0x81b2:	mov	r12, rdi
0x81b5:	mov	ebp, edx
0x81b7:	mov	r14, rcx
0x81ba:	cmove	rbx, rax
0x81be:	mov	r15, r8
0x81c1:	call	0x2450


0x880f:	lea	rcx, [rip + 0x5c6a]
0x8816:	lea	rsi, [rip + 0x5b43]
0x881d:	lea	rdi, [rip + 0x5b5c]
0x8824:	mov	edx, 0x54
0x8829:	call	0x25a0


0x24f0:	jmp	qword ptr [rip + 0x20e97a]


0x2510:	jmp	qword ptr [rip + 0x20e96a]


0x7fb9:	call	0x8010


0x7fa2:	movzx	edx, dl
0x7fa5:	test	rdx, rdx
0x7fa8:	jne	0x7fb9


0x7f50:	test	rax, rax
0x7f53:	mov	edx, 0x80
0x7f58:	cmove	rax, rdx
0x7f5c:	test	rax, rax
0x7f5f:	jns	0x7f42


0x7f28:	movabs	rdx, 0x5555555555555553
0x7f32:	cmp	rax, rdx
0x7f35:	ja	0x7f61


0x7ed0:	test	rcx, rcx
0x7ed3:	je	0x7ef8


0x7e9b:	xor	edx, edx
0x7e9d:	movabs	rax, 0x5555555555555554
0x7ea7:	div	r9
0x7eaa:	cmp	rax, rcx
0x7ead:	jbe	0x7eeb


0x7e7b:	sub	rsp, 8
0x7e7f:	call	0x8010


0x7e71:	movzx	eax, al
0x7e74:	test	rax, rax
0x7e77:	jne	0x7e7b


0x7e29:	test	rdi, rdi
0x7e2c:	jne	0x7e48


0x7e2e:	mov	rsi, rbx
0x7e31:	call	0x26a0


0x7dfb:	sub	rsp, 8
0x7dff:	call	0x8010


0x7df1:	movzx	eax, al
0x7df4:	test	rax, rax
0x7df7:	jne	0x7dfb


0x2660:	jmp	qword ptr [rip + 0x20e8c2]


0x7cd6:	mov	eax, r10d
0x7cd9:	mov	r11d, 1
0x7cdf:	add	r10d, 8
0x7ce3:	add	rax, rbp
0x7ce6:	mov	rax, qword ptr [rax]
0x7ce9:	test	rax, rax
0x7cec:	mov	qword ptr [r8 + r9*8], rax
0x7cf0:	je	0x7cfc


0x7d2c:	mov	rax, rbx
0x7d2f:	add	rbx, 8
0x7d33:	jmp	0x7ce6


0x7c08:	mov	r11d, eax
0x7c0b:	add	r11, qword ptr [r10 + 0x10]
0x7c0f:	add	eax, 8
0x7c12:	mov	dword ptr [r10], eax
0x7c15:	mov	rax, qword ptr [r11]
0x7c18:	test	rax, rax
0x7c1b:	mov	qword ptr [r8 + r9*8], rax
0x7c1f:	je	0x7c2b


0x7c4a:	mov	r11, qword ptr [r10 + 8]
0x7c4e:	lea	rax, [r11 + 8]
0x7c52:	mov	qword ptr [r10 + 8], rax
0x7c56:	jmp	0x7c15


0x7bdb:	jmp	0x77a0


0x78d8:	mov	r8, rcx
0x78db:	mov	rcx, rdx
0x78de:	lea	rdx, [rip + 0x670f]
0x78e5:	mov	esi, 1
0x78ea:	xor	eax, eax
0x78ec:	call	0x2780


0x77c0:	mov	r8, rdx
0x77c3:	lea	rdx, [rip + 0x681e]
0x77ca:	mov	r9, rcx
0x77cd:	xor	eax, eax
0x77cf:	mov	rcx, rsi
0x77d2:	mov	esi, 1
0x77d7:	call	0x2780


0x76c7:	call	0x2440


0x7695:	test	rdx, rdx
0x7698:	je	0x76c7


0x7634:	call	0x2440


0x75cc:	mov	dword ptr [rsp], esi
0x75cf:	mov	rcx, rsp
0x75d2:	mov	rdx, -1
0x75d9:	mov	rsi, rax
0x75dc:	mov	qword ptr [rsp + 4], 0
0x75e5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x75ee:	mov	qword ptr [rsp + 0x14], 0
0x75f7:	mov	qword ptr [rsp + 0x1c], 0
0x7600:	mov	qword ptr [rsp + 0x24], 0
0x7609:	mov	qword ptr [rsp + 0x2c], 0
0x7612:	mov	dword ptr [rsp + 0x34], 0
0x761a:	call	0x6e40


0x74a0:	call	0x2440


0x743f:	mov	dword ptr [rsp], esi
0x7442:	mov	rcx, rsp
0x7445:	mov	rsi, rax
0x7448:	mov	qword ptr [rsp + 4], 0
0x7451:	mov	qword ptr [rsp + 0xc], 0
0x745a:	mov	qword ptr [rsp + 0x14], 0
0x7463:	mov	qword ptr [rsp + 0x1c], 0
0x746c:	mov	qword ptr [rsp + 0x24], 0
0x7475:	mov	qword ptr [rsp + 0x2c], 0
0x747e:	mov	dword ptr [rsp + 0x34], 0
0x7486:	call	0x6e40


0x7414:	call	0x2440


0x73ac:	mov	dword ptr [rsp], esi
0x73af:	mov	rcx, rsp
0x73b2:	mov	rdx, -1
0x73b9:	mov	rsi, rax
0x73bc:	mov	qword ptr [rsp + 4], 0
0x73c5:	mov	qword ptr [rsp + 0xc], 0
0x73ce:	mov	qword ptr [rsp + 0x14], 0
0x73d7:	mov	qword ptr [rsp + 0x1c], 0
0x73e0:	mov	qword ptr [rsp + 0x24], 0
0x73e9:	mov	qword ptr [rsp + 0x2c], 0
0x73f2:	mov	dword ptr [rsp + 0x34], 0
0x73fa:	call	0x6e40


0x72c1:	mov	rdi, qword ptr [r12 + 8]
0x72c6:	lea	rbx, [rip + 0x209f53]
0x72cd:	cmp	rdi, rbx
0x72d0:	je	0x72e9


0x7296:	sub	eax, 2
0x7299:	lea	rbx, [r12 + 0x18]
0x729e:	shl	rax, 4
0x72a2:	lea	rbp, [r12 + rax + 0x28]
0x72a7:	nop	word ptr [rax + rax]
0x72b0:	mov	rdi, qword ptr [rbx]
0x72b3:	add	rbx, 0x10
0x72b7:	call	0x2430


0x2450:	jmp	qword ptr [rip + 0x20e9ca]


0x70f7:	sub	rsp, 8
0x70fb:	call	0x2440


0x70e9:	test	rdx, rdx
0x70ec:	je	0x70f7


0x2500:	jmp	qword ptr [rip + 0x20e972]


0x5aed:	mov	rcx, qword ptr [rip + 0x20b60c]
0x5af4:	lea	rdi, [rip + 0x7fd5]
0x5afb:	mov	edx, 0x37
0x5b00:	mov	esi, 1
0x5b05:	call	0x2770


0x5a76:	mov	esi, 0x2f
0x5a7b:	mov	rbx, rdi
0x5a7e:	call	0x2580


0x2710:	jmp	qword ptr [rip + 0x20e86a]


0x4d10:	mov	rax, qword ptr [rsp + 0x68]
0x4d15:	xor	rax, qword ptr fs:[0x28]
0x4d1e:	jne	0x565b


0x4bc1:	mov	ebp, 1
0x4bc6:	lea	r14, [rip + 0x20b493]
0x4bcd:	jmp	0x4bf1


0x3c8d:	lea	rsi, [rip + 0x7d24]
0x3c94:	xor	edi, edi
0x3c96:	call	0x24f0


0x3c5f:	lea	rsi, [rip + 0x7d2a]
0x3c66:	xor	edi, edi
0x3c68:	call	0x24f0


0x25d0:	jmp	qword ptr [rip + 0x20e90a]


0x38d8:	add	edi, 0x40
0x38db:	lea	rax, [rip + 0x20d840]
0x38e2:	mov	byte ptr [rip + 0x20d837], 0x5e
0x38e9:	mov	byte ptr [rip + 0x20d831], dil
0x38f0:	mov	byte ptr [rax], 0
0x38f3:	lea	rax, [rip + 0x20d826]
0x38fa:	ret	


0x38b6:	cmp	dil, 0x7e
0x38ba:	ja	0x3900


0x24a0:	jmp	qword ptr [rip + 0x20e9a2]


0x3582:	mov	rax, qword ptr fs:[0x28]
0x358b:	mov	qword ptr [rsp + 0x28], rax
0x3590:	xor	eax, eax
0x3592:	lea	rax, [rsp + 0xf0]
0x359a:	lea	rdx, [rsp + 0x10]
0x359f:	lea	rdi, [rsp + 8]
0x35a4:	mov	rsi, r10
0x35a7:	mov	qword ptr [rsp + 0x18], rax
0x35ac:	lea	rax, [rsp + 0x30]
0x35b1:	mov	dword ptr [rsp + 0x10], 8
0x35b9:	mov	dword ptr [rsp + 0x14], 0x30
0x35c1:	mov	qword ptr [rsp + 0x20], rax
0x35c6:	call	0x8f70


0x3548:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x354d:	movaps	xmmword ptr [rsp + 0x70], xmm1
0x3552:	movaps	xmmword ptr [rsp + 0x80], xmm2
0x355a:	movaps	xmmword ptr [rsp + 0x90], xmm3
0x3562:	movaps	xmmword ptr [rsp + 0xa0], xmm4
0x356a:	movaps	xmmword ptr [rsp + 0xb0], xmm5
0x3572:	movaps	xmmword ptr [rsp + 0xc0], xmm6
0x357a:	movaps	xmmword ptr [rsp + 0xd0], xmm7
0x3582:	mov	rax, qword ptr fs:[0x28]
0x358b:	mov	qword ptr [rsp + 0x28], rax
0x3590:	xor	eax, eax
0x3592:	lea	rax, [rsp + 0xf0]
0x359a:	lea	rdx, [rsp + 0x10]
0x359f:	lea	rdi, [rsp + 8]
0x35a4:	mov	rsi, r10
0x35a7:	mov	qword ptr [rsp + 0x18], rax
0x35ac:	lea	rax, [rsp + 0x30]
0x35b1:	mov	dword ptr [rsp + 0x10], 8
0x35b9:	mov	dword ptr [rsp + 0x14], 0x30
0x35c1:	mov	qword ptr [rsp + 0x20], rax
0x35c6:	call	0x8f70


0x34d5:	lea	rax, [rip + 0x8414]
0x34dc:	mov	edi, edi
0x34de:	movsxd	rdx, dword ptr [rax + rdi*4]
0x34e2:	add	rdx, rax
0x34e5:	jmp	rdx


0x3513:	sub	rsp, 8
0x3517:	call	0x2440


0x3490:	mov	rdi, r12
0x3493:	call	0x2620


0x3419:	cmp	qword ptr [rip + 0x20dbd7], 0
0x3421:	push	rbp
0x3422:	mov	rbp, rsp
0x3425:	je	0x3433


0x3448:	ret	


0x3400:	pop	rbp
0x3401:	ret	


0x33e8:	mov	rax, qword ptr [rip + 0x20dc01]
0x33ef:	test	rax, rax
0x33f2:	je	0x3400


0x33b0:	pop	rbp
0x33b1:	ret	


0x3397:	mov	rax, qword ptr [rip + 0x20dc3a]
0x339e:	test	rax, rax
0x33a1:	je	0x33b0




0x23f2:	add	rsp, 8
0x23f6:	ret	


0x23f0:	call	rax




0xa5d2:	lea	rax, [rbx + rbx*4]
0xa5d6:	lea	rax, [rbx + rax*2]
0xa5da:	mov	qword ptr [rcx + rax*8], rdi
0xa5de:	mov	rax, qword ptr [rsp + 0x10]
0xa5e3:	mov	qword ptr [r14 + 0x10], rax
0xa5e7:	mov	rax, qword ptr [rsp + 0x18]
0xa5ec:	mov	qword ptr [r14 + 0x18], rax
0xa5f0:	xor	eax, eax
0xa5f2:	add	rsp, 0x58
0xa5f6:	pop	rbx
0xa5f7:	pop	rbp
0xa5f8:	pop	r12
0xa5fa:	pop	r13
0xa5fc:	pop	r14
0xa5fe:	pop	r15
0xa600:	ret	


0xa5c0:	cmp	al, 0x25
0xa5c2:	lea	rbp, [rdi + 1]
0xa5c6:	je	0xa608


0xa37d:	mov	edx, dword ptr [rax]
0xa37f:	movsxd	rdx, dword ptr [r8 + rdx*4]
0xa383:	add	rdx, r8
0xa386:	jmp	rdx


0xa3c0:	mov	eax, 0xffffffff
0xa3c5:	ret	


0x91ea:	cmp	qword ptr [rdi + 0x48], 0
0x91ef:	jne	0x91da


0x2720:	jmp	qword ptr [rip + 0x20e862]


0x2670:	jmp	qword ptr [rip + 0x20e8ba]


0x2690:	jmp	qword ptr [rip + 0x20e8aa]












0x2490:	jmp	qword ptr [rip + 0x20e9aa]


0x8cb9:	mov	rax, qword ptr [rsp + 0x10]
0x8cbe:	cmp	dword ptr [rip + 0x208693], 0
0x8cc5:	mov	dword ptr [rsp], 0x18
0x8ccc:	mov	r12d, dword ptr [rax + 0x10]
0x8cd0:	mov	edx, r12d
0x8cd3:	js	0x8e03


0x8d00:	cmp	esi, 0xb
0x8d03:	je	0x8d30


0x25a0:	jmp	qword ptr [rip + 0x20e922]






0x7faa:	call	0x2610


0x7f61:	sub	rsp, 8
0x7f65:	call	0x8010


0x7f42:	mov	qword ptr [rsi], rax
0x7f45:	mov	rsi, rax
0x7f48:	jmp	0x7e20


0x7f37:	mov	rdx, rax
0x7f3a:	shr	rdx, 1
0x7f3d:	lea	rax, [rdx + rax + 1]
0x7f42:	mov	qword ptr [rsi], rax
0x7f45:	mov	rsi, rax
0x7f48:	jmp	0x7e20


0x7ef8:	xor	edx, edx
0x7efa:	mov	eax, 0x80
0x7eff:	xor	r8d, r8d
0x7f02:	div	r9
0x7f05:	test	rax, rax
0x7f08:	sete	r8b
0x7f0c:	lea	rcx, [r8 + rax]
0x7f10:	jmp	0x7ed5


0x7ed5:	mov	rax, rcx
0x7ed8:	mul	r9
0x7edb:	seto	dl
0x7ede:	test	rax, rax
0x7ee1:	movzx	edx, dl
0x7ee4:	js	0x7eeb


0x7eeb:	sub	rsp, 8
0x7eef:	call	0x8010


0x7eaf:	mov	rax, rcx
0x7eb2:	shr	rax, 1
0x7eb5:	lea	rcx, [rax + rcx + 1]
0x7eba:	mov	qword ptr [rsi], rcx
0x7ebd:	imul	rcx, r9
0x7ec1:	mov	rsi, rcx
0x7ec4:	jmp	0x7e20


0x7e79:	jmp	0x7e20


0x7e48:	call	0x2430


0x26a0:	jmp	qword ptr [rip + 0x20e8a2]


0x7df9:	jmp	0x7dc0




0x7cfc:	test	r11b, r11b
0x7cff:	jne	0x7d25


0x7cf2:	add	r9, 1
0x7cf6:	cmp	r9, 0xa
0x7cfa:	jne	0x7cd0


0x7ce6:	mov	rax, qword ptr [rax]
0x7ce9:	test	rax, rax
0x7cec:	mov	qword ptr [r8 + r9*8], rax
0x7cf0:	je	0x7cfc


0x7c2b:	call	0x77a0


0x7c21:	add	r9, 1
0x7c25:	cmp	r9, 0xa
0x7c29:	jne	0x7c00


0x7c15:	mov	rax, qword ptr [r11]
0x7c18:	test	rax, rax
0x7c1b:	mov	qword ptr [r8 + r9*8], rax
0x7c1f:	je	0x7c2b


0x7bd0:	add	r9, 1
0x7bd4:	cmp	qword ptr [r8 + r9*8], 0
0x7bd9:	jne	0x7bd0


0x2780:	jmp	qword ptr [rip + 0x20e832]


0x2440:	jmp	qword ptr [rip + 0x20e9d2]


0x769a:	mov	qword ptr [rsp + 0x28], rsi
0x769f:	mov	qword ptr [rsp + 0x30], rdx
0x76a4:	mov	rcx, rsp
0x76a7:	mov	rdx, r8
0x76aa:	mov	rsi, r9
0x76ad:	call	0x6e40


0x72e9:	lea	rbx, [rip + 0x209da0]
0x72f0:	cmp	r12, rbx
0x72f3:	je	0x7304


0x72d2:	call	0x2430


0x2430:	jmp	qword ptr [rip + 0x20e9da]




0x70ee:	mov	qword ptr [rdi + 0x28], rsi
0x70f2:	mov	qword ptr [rdi + 0x30], rdx
0x70f6:	ret	




0x2770:	jmp	qword ptr [rip + 0x20e83a]


0x2580:	jmp	qword ptr [rip + 0x20e932]




0x4d24:	add	rsp, 0x78
0x4d28:	pop	rbx
0x4d29:	pop	rbp
0x4d2a:	pop	r12
0x4d2c:	pop	r13
0x4d2e:	pop	r14
0x4d30:	pop	r15
0x4d32:	ret	


0x565b:	call	0x2520


0x4bf1:	movsxd	rax, ebp
0x4bf4:	lea	rdx, [rax*8]
0x4bfc:	mov	qword ptr [rsp + 0x10], rdx
0x4c01:	mov	rdx, qword ptr [rsp + 8]
0x4c06:	mov	rbx, qword ptr [rdx + rax*8]
0x4c0a:	test	rbx, rbx
0x4c0d:	je	0x4be4




0x38bc:	lea	rax, [rip + 0x20d85e]
0x38c3:	mov	byte ptr [rip + 0x20d856], dil
0x38ca:	mov	byte ptr [rax], 0
0x38cd:	lea	rax, [rip + 0x20d84c]
0x38d4:	ret	


0x3900:	cmp	dil, 0x7f
0x3904:	je	0x3938




0x2620:	jmp	qword ptr [rip + 0x20e8e2]


0x3433:	call	0x3380


0x3427:	mov	rdi, qword ptr [rip + 0x20dbda]
0x342e:	call	0x27c0


0x33f4:	pop	rbp
0x33f5:	jmp	rax


0x33a3:	pop	rbp
0x33a4:	jmp	rax


0xa608:	lea	rax, [rbx + rbx*4]
0xa60c:	mov	r13, r8
0xa60f:	lea	rax, [rbx + rax*2]
0xa613:	lea	r12, [rcx + rax*8]
0xa617:	mov	qword ptr [r12], rdi
0xa61b:	mov	dword ptr [r12 + 0x10], 0
0xa624:	mov	qword ptr [r12 + 0x18], 0
0xa62d:	mov	qword ptr [r12 + 0x20], 0
0xa636:	mov	qword ptr [r12 + 0x28], r8
0xa63b:	mov	qword ptr [r12 + 0x30], 0
0xa644:	mov	qword ptr [r12 + 0x38], 0
0xa64d:	mov	qword ptr [r12 + 0x40], r8
0xa652:	mov	qword ptr [r12 + 0x50], r8
0xa657:	movzx	ebx, byte ptr [rdi + 1]
0xa65b:	lea	eax, [rbx - 0x30]
0xa65e:	cmp	al, 9
0xa660:	ja	0xa69e


0xa5c8:	mov	rdi, rbp
0xa5cb:	movzx	eax, byte ptr [rdi]
0xa5ce:	test	al, al
0xa5d0:	jne	0xa5c0


0x91f1:	push	r12
0x91f3:	push	rbp
0x91f4:	mov	r12d, edx
0x91f7:	push	rbx
0x91f8:	mov	rbp, rsi
0x91fb:	mov	rbx, rdi
0x91fe:	call	0x2650










0x8e03:	xor	esi, esi
0x8e05:	xor	eax, eax
0x8e07:	call	0x2490


0x8cd9:	xor	eax, eax
0x8cdb:	mov	esi, 0x406
0x8ce0:	call	0x2490


0x8d30:	mov	edi, ebp
0x8d32:	xor	eax, eax
0x8d34:	call	0x2490


0x8d05:	jg	0x8d60




0x2610:	jmp	qword ptr [rip + 0x20e8ea]


0x7ee6:	test	rdx, rdx
0x7ee9:	je	0x7eba




0x7d01:	call	0x77a0


0x7d25:	mov	dword ptr [rsp + 8], r10d
0x7d2a:	jmp	0x7d01


0x7cd0:	cmp	r10d, 0x2f
0x7cd4:	ja	0x7d2c


0x7c00:	mov	eax, dword ptr [r10]
0x7c03:	cmp	eax, 0x2f
0x7c06:	ja	0x7c4a






0x7304:	pop	rbx
0x7305:	mov	dword ptr [rip + 0x209d69], 1
0x730f:	pop	rbp
0x7310:	pop	r12
0x7312:	ret	


0x72f5:	mov	rdi, r12
0x72f8:	call	0x2430








0x2520:	jmp	qword ptr [rip + 0x20e962]


0x4be4:	add	ebp, 1
0x4be7:	cmp	dword ptr [rsp + 0x38], ebp
0x4beb:	jle	0x4d10


0x4c0f:	cmp	byte ptr [rbx], 0x2d
0x4c12:	mov	byte ptr [rsp], 0
0x4c16:	jne	0x4c20


0x3938:	mov	ecx, 0x3f5e
0x393d:	lea	rax, [rip + 0x20d7de]
0x3944:	mov	word ptr [rip + 0x20d7d5], cx
0x394b:	jmp	0x38f0


0x3906:	mov	edx, 0x2d4d
0x390b:	cmp	dil, 0x9f
0x390f:	mov	word ptr [rip + 0x20d80a], dx
0x3916:	jbe	0x3950




0x27c0:	jmp	qword ptr [rip + 0x20e832]


0xa662:	jmp	0xaa9a


0xa69e:	lea	rax, [rbp + 1]
0xa6a2:	cmp	bl, 0x27
0xa6a5:	mov	rdx, rax
0xa6a8:	jne	0xa670


0x8d07:	cmp	esi, 4
0x8d0a:	je	0x8de0


0x8d60:	cmp	esi, 0x407
0x8d66:	jg	0x8db0




0x7eba:	mov	qword ptr [rsi], rcx
0x7ebd:	imul	rcx, r9
0x7ec1:	mov	rsi, rcx
0x7ec4:	jmp	0x7e20




0x4c18:	add	rbx, 1
0x4c1c:	mov	byte ptr [rsp], 1
0x4c20:	lea	rdi, [rip + 0x69b2]
0x4c27:	mov	ecx, 6
0x4c2c:	mov	rsi, rbx
0x4c2f:	lea	r15, [rip + 0x6867]
0x4c36:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4c20:	lea	rdi, [rip + 0x69b2]
0x4c27:	mov	ecx, 6
0x4c2c:	mov	rsi, rbx
0x4c2f:	lea	r15, [rip + 0x6867]
0x4c36:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x38f0:	mov	byte ptr [rax], 0
0x38f3:	lea	rax, [rip + 0x20d826]
0x38fa:	ret	


0x3950:	sub	edi, 0x40
0x3953:	mov	byte ptr [rip + 0x20d7c8], 0x5e
0x395a:	lea	rax, [rip + 0x20d7c3]
0x3961:	mov	byte ptr [rip + 0x20d7bb], dil
0x3968:	jmp	0x38f0


0x3918:	cmp	dil, 0xff
0x391c:	je	0x3970


0xaa9a:	mov	rax, rbp
0xaa9d:	nop	dword ptr [rax]
0xaaa0:	add	rax, 1
0xaaa4:	movzx	edx, byte ptr [rax]
0xaaa7:	lea	ecx, [rdx - 0x30]
0xaaaa:	cmp	cl, 9
0xaaad:	jbe	0xaaa0


0xa6aa:	or	dword ptr [r12 + 0x10], 1
0xa6b0:	jmp	0xa698


0xa670:	cmp	bl, 0x2d
0xa673:	je	0xa6b8


0x8de0:	mov	eax, dword ptr [rsp]
0x8de3:	cmp	eax, 0x2f
0x8de6:	ja	0x8ed4


0x8d10:	jg	0x8dd0


0x8d68:	cmp	esi, 0x406
0x8d6e:	jge	0x8de0


0x8db0:	cmp	esi, 0x409
0x8db6:	je	0x8de0


0x4c36:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4c38:	seta	al
0x4c3b:	sbb	al, 0
0x4c3d:	xor	r13d, r13d
0x4c40:	test	al, al
0x4c42:	jne	0x4c68


0x3970:	mov	eax, 0x3f5e
0x3975:	mov	word ptr [rip + 0x20d7a6], ax
0x397c:	lea	rax, [rip + 0x20d7a1]
0x3983:	jmp	0x38f0


0x391e:	add	edi, -0x80
0x3921:	lea	rax, [rip + 0x20d7fb]
0x3928:	mov	byte ptr [rip + 0x20d7f3], dil
0x392f:	jmp	0x38f0


0xaaa0:	add	rax, 1
0xaaa4:	movzx	edx, byte ptr [rax]
0xaaa7:	lea	ecx, [rdx - 0x30]
0xaaaa:	cmp	cl, 9
0xaaad:	jbe	0xaaa0


0xaaaf:	cmp	dl, 0x24
0xaab2:	mov	r13, r8
0xaab5:	jne	0xa69e


0xa698:	movzx	ebx, byte ptr [rax]
0xa69b:	mov	rbp, rax
0xa69e:	lea	rax, [rbp + 1]
0xa6a2:	cmp	bl, 0x27
0xa6a5:	mov	rdx, rax
0xa6a8:	jne	0xa670


0xa6b8:	or	dword ptr [r12 + 0x10], 2
0xa6be:	jmp	0xa698


0xa675:	cmp	bl, 0x2b
0xa678:	je	0xa6c0


0x8dec:	add	rax, qword ptr [rsp + 0x10]
0x8df1:	mov	edx, dword ptr [rax]
0x8df3:	mov	edi, ebp
0x8df5:	xor	eax, eax
0x8df7:	call	0x2490


0x8ed4:	mov	rax, qword ptr [rsp + 8]
0x8ed9:	jmp	0x8df1


0x8d16:	cmp	esi, 2
0x8d19:	je	0x8de0


0x8dd0:	cmp	esi, 9
0x8dd3:	je	0x8d30


0x8d70:	cmp	esi, 0x401
0x8d76:	je	0x8d30


0x8db8:	jl	0x8d30


0x4c44:	jmp	0x4bd0


0x4c68:	mov	rsi, r15
0x4c6b:	mov	rdi, rbx
0x4c6e:	movsxd	r12, r13d
0x4c71:	call	0x2620


0xaabb:	xor	edx, edx
0xaabd:	movsx	eax, bl
0xaac0:	movabs	rdi, 0x1999999999999999
0xaaca:	mov	rsi, r8
0xaacd:	sub	eax, 0x30
0xaad0:	cmp	rdx, rdi
0xaad3:	cdqe	
0xaad5:	ja	0xaade


0xa6c0:	or	dword ptr [r12 + 0x10], 4
0xa6c6:	jmp	0xa698


0xa67a:	cmp	bl, 0x20
0xa67d:	je	0xa6d0


0x8df1:	mov	edx, dword ptr [rax]
0x8df3:	mov	edi, ebp
0x8df5:	xor	eax, eax
0x8df7:	call	0x2490


0x8d1f:	jg	0x8d30


0x8dd9:	jg	0x8de0


0x8d78:	cmp	esi, 0x402
0x8d7e:	je	0x8de0


0x8dbe:	cmp	esi, 0x40a
0x8dc4:	jne	0x8d88


0x4bd0:	movzx	r13d, byte ptr [rsp]
0x4bd5:	xor	r13d, 1
0x4bd9:	movzx	r13d, r13b
0x4bdd:	mov	dword ptr [rip + 0x20c42c], r13d
0x4be4:	add	ebp, 1
0x4be7:	cmp	dword ptr [rsp + 0x38], ebp
0x4beb:	jle	0x4d10


0xaad7:	lea	rsi, [rdx + rdx*4]
0xaadb:	add	rsi, rsi
0xaade:	mov	rcx, rbp
0xaae1:	add	rax, rsi
0xaae4:	movzx	ebx, byte ptr [rbp + 1]
0xaae8:	setb	sil
0xaaec:	add	rbp, 1
0xaaf0:	mov	rdx, rax
0xaaf3:	movzx	esi, sil
0xaaf7:	test	rsi, rsi
0xaafa:	lea	edi, [rbx - 0x30]
0xaafd:	jne	0xae8e


0xaade:	mov	rcx, rbp
0xaae1:	add	rax, rsi
0xaae4:	movzx	ebx, byte ptr [rbp + 1]
0xaae8:	setb	sil
0xaaec:	add	rbp, 1
0xaaf0:	mov	rdx, rax
0xaaf3:	movzx	esi, sil
0xaaf7:	test	rsi, rsi
0xaafa:	lea	edi, [rbx - 0x30]
0xaafd:	jne	0xae8e


0xa6d0:	or	dword ptr [r12 + 0x10], 8
0xa6d6:	jmp	0xa698


0xa67f:	cmp	bl, 0x23
0xa682:	je	0xa6e0


0x8d21:	cmp	esi, 1
0x8d24:	jne	0x8d88


0x8ddb:	cmp	esi, 8
0x8dde:	jne	0x8d88


0x8d80:	cmp	esi, 0x400
0x8d86:	je	0x8de0


0x8dc6:	jmp	0x8d30


0x8d88:	mov	eax, dword ptr [rsp]
0x8d8b:	cmp	eax, 0x2f
0x8d8e:	ja	0x8eca


0xab03:	cmp	dil, 9
0xab07:	jbe	0xaabd


0xae8e:	cmp	dil, 9
0xae92:	ja	0xad9b


0xa6e0:	or	dword ptr [r12 + 0x10], 0x10
0xa6e6:	jmp	0xa698


0xa684:	cmp	bl, 0x30
0xa687:	je	0xa6f0


0x8d94:	add	rax, qword ptr [rsp + 0x10]
0x8d99:	mov	rdx, qword ptr [rax]
0x8d9c:	mov	edi, ebp
0x8d9e:	xor	eax, eax
0x8da0:	call	0x2490


0x8eca:	mov	rax, qword ptr [rsp + 8]
0x8ecf:	jmp	0x8d99


0xaabd:	movsx	eax, bl
0xaac0:	movabs	rdi, 0x1999999999999999
0xaaca:	mov	rsi, r8
0xaacd:	sub	eax, 0x30
0xaad0:	cmp	rdx, rdi
0xaad3:	cdqe	
0xaad5:	ja	0xaade


0xab09:	mov	r13, rax
0xab0c:	sub	r13, 1
0xab10:	cmp	r13, -3
0xab14:	ja	0xad9b


0xae98:	movsx	eax, bl
0xae9b:	mov	rsi, r8
0xae9e:	mov	rcx, rbp
0xaea1:	sub	eax, 0x30
0xaea4:	cdqe	
0xaea6:	jmp	0xaae1


0xad9b:	mov	rcx, qword ptr [r15 + 8]
0xad9f:	cmp	qword ptr [rsp + 8], rcx
0xada4:	je	0xadae


0xa6f0:	or	dword ptr [r12 + 0x10], 0x20
0xa6f6:	jmp	0xa698


0xa689:	cmp	bl, 0x49
0xa68c:	jne	0xa700


0x8d99:	mov	rdx, qword ptr [rax]
0x8d9c:	mov	edi, ebp
0x8d9e:	xor	eax, eax
0x8da0:	call	0x2490


0xab1a:	lea	rbp, [rcx + 2]
0xab1e:	movzx	ebx, byte ptr [rcx + 2]
0xab22:	jmp	0xa69e


0xaae1:	add	rax, rsi
0xaae4:	movzx	ebx, byte ptr [rbp + 1]
0xaae8:	setb	sil
0xaaec:	add	rbp, 1
0xaaf0:	mov	rdx, rax
0xaaf3:	movzx	esi, sil
0xaaf7:	test	rsi, rsi
0xaafa:	lea	edi, [rbx - 0x30]
0xaafd:	jne	0xae8e


0xadae:	mov	rdi, qword ptr [r14 + 8]
0xadb2:	cmp	qword ptr [rsp + 0x28], rdi
0xadb7:	je	0xadbe


0xada6:	mov	rdi, rcx
0xada9:	call	0x2430


0xa68e:	or	dword ptr [r12 + 0x10], 0x40
0xa694:	nop	dword ptr [rax]
0xa698:	movzx	ebx, byte ptr [rax]
0xa69b:	mov	rbp, rax
0xa69e:	lea	rax, [rbp + 1]
0xa6a2:	cmp	bl, 0x27
0xa6a5:	mov	rdx, rax
0xa6a8:	jne	0xa670


0xa700:	cmp	bl, 0x2a
0xa703:	je	0xa8b9


0xadbe:	call	0x2450


0xadb9:	call	0x2430


0xa8b9:	mov	rsi, qword ptr [rsp + 0x10]
0xa8be:	mov	ecx, 1
0xa8c3:	mov	qword ptr [r12 + 0x18], rbp
0xa8c8:	mov	qword ptr [r12 + 0x20], rax
0xa8cd:	test	rsi, rsi
0xa8d0:	cmovne	rcx, rsi
0xa8d4:	mov	qword ptr [rsp + 0x10], rcx
0xa8d9:	movzx	ecx, byte ptr [rbp + 1]
0xa8dd:	lea	esi, [rcx - 0x30]
0xa8e0:	cmp	sil, 9
0xa8e4:	jbe	0xabc5


0xa709:	lea	ecx, [rbx - 0x30]
0xa70c:	cmp	cl, 9
0xa70f:	jbe	0xab27


0xabc5:	mov	rsi, rax
0xabc8:	add	rsi, 1
0xabcc:	movzx	edi, byte ptr [rsi]
0xabcf:	lea	r11d, [rdi - 0x30]
0xabd3:	cmp	r11b, 9
0xabd7:	jbe	0xabc8


0xa8ea:	mov	rsi, qword ptr [rsp + 0x20]
0xa8ef:	cmp	rsi, -1
0xa8f3:	lea	rdx, [rsi + 1]
0xa8f7:	mov	qword ptr [r12 + 0x28], rsi
0xa8fc:	je	0xad9b


0xab27:	mov	qword ptr [r12 + 0x18], rbp
0xab2c:	movzx	edi, byte ptr [rbp]
0xab30:	mov	rsi, rbp
0xab33:	lea	ecx, [rdi - 0x30]
0xab36:	cmp	cl, 9
0xab39:	jbe	0xab47


0xa715:	cmp	bl, 0x2e
0xa718:	je	0xa9ef


0xabc8:	add	rsi, 1
0xabcc:	movzx	edi, byte ptr [rsi]
0xabcf:	lea	r11d, [rdi - 0x30]
0xabd3:	cmp	r11b, 9
0xabd7:	jbe	0xabc8


0xabd9:	cmp	dil, 0x24
0xabdd:	jne	0xa8ea


0xa902:	mov	rbx, qword ptr [rsp + 0x20]
0xa907:	mov	rbp, rax
0xa90a:	mov	qword ptr [rsp + 0x20], rdx
0xa90f:	cmp	r9, rbx
0xa912:	mov	rcx, qword ptr [r15 + 8]
0xa916:	ja	0xaf92


0xab47:	movzx	edi, byte ptr [rax]
0xab4a:	lea	edx, [rdi - 0x30]
0xab4d:	cmp	dl, 9
0xab50:	jbe	0xab40


0xab3b:	jmp	0xab70


0xa9ef:	cmp	byte ptr [rbp + 1], 0x2a
0xa9f3:	mov	qword ptr [r12 + 0x30], rbp
0xa9f8:	jne	0xab7e


0xa71e:	xor	eax, eax
0xa720:	mov	esi, 1
0xa725:	jmp	0xa757


0xabe3:	xor	esi, esi
0xabe5:	movsx	eax, cl
0xabe8:	movabs	rdi, 0x1999999999999999
0xabf2:	mov	rcx, r8
0xabf5:	sub	eax, 0x30
0xabf8:	cmp	rsi, rdi
0xabfb:	cdqe	
0xabfd:	ja	0xac06


0xa91c:	add	r9, r9
0xa91f:	lea	rax, [rbx + 1]
0xa923:	cmp	r9, rbx
0xa926:	cmovbe	r9, rax
0xa92a:	movabs	rax, 0x7ffffffffffffff
0xa934:	cmp	r9, rax
0xa937:	ja	0xb1db


0xaf92:	mov	rax, qword ptr [r15]
0xaf95:	jmp	0xa997


0xab40:	mov	rbp, rax
0xab43:	add	rax, 1
0xab47:	movzx	edi, byte ptr [rax]
0xab4a:	lea	edx, [rdi - 0x30]
0xab4d:	cmp	dl, 9
0xab50:	jbe	0xab40


0xab52:	mov	rcx, rax
0xab55:	lea	rdx, [rbp + 2]
0xab59:	mov	rbp, rax
0xab5c:	sub	rcx, rsi
0xab5f:	mov	rsi, qword ptr [rsp + 0x10]
0xab64:	cmp	rsi, rcx
0xab67:	cmovae	rcx, rsi
0xab6b:	mov	qword ptr [rsp + 0x10], rcx
0xab70:	mov	qword ptr [r12 + 0x20], rbp
0xab75:	movzx	ebx, byte ptr [rbp]
0xab79:	jmp	0xa715


0xab70:	mov	qword ptr [r12 + 0x20], rbp
0xab75:	movzx	ebx, byte ptr [rbp]
0xab79:	jmp	0xa715


0xa9fe:	mov	rsi, qword ptr [rsp + 0x18]
0xaa03:	lea	r11, [rbp + 2]
0xaa07:	mov	eax, 2
0xaa0c:	mov	qword ptr [r12 + 0x38], r11
0xaa11:	cmp	rsi, 2
0xaa15:	cmovae	rax, rsi
0xaa19:	mov	qword ptr [rsp + 0x18], rax
0xaa1e:	movsx	eax, byte ptr [rbp + 2]
0xaa22:	lea	edx, [rax - 0x30]
0xaa25:	cmp	dl, 9
0xaa28:	jbe	0xb0bc


0xab7e:	movzx	eax, byte ptr [rbp + 1]
0xab82:	sub	eax, 0x30
0xab85:	cmp	al, 9
0xab87:	ja	0xab9e


0xa757:	add	rbp, 1
0xa75b:	cmp	bl, 0x68
0xa75e:	jne	0xa730


0xabff:	lea	rcx, [rsi + rsi*4]
0xac03:	add	rcx, rcx
0xac06:	mov	rbp, rdx
0xac09:	xor	r11d, r11d
0xac0c:	add	rax, rcx
0xac0f:	movzx	ecx, byte ptr [rdx + 1]
0xac13:	setb	r11b
0xac17:	add	rdx, 1
0xac1b:	mov	rsi, rax
0xac1e:	test	r11, r11
0xac21:	lea	edi, [rcx - 0x30]
0xac24:	jne	0xb12e


0xac06:	mov	rbp, rdx
0xac09:	xor	r11d, r11d
0xac0c:	add	rax, rcx
0xac0f:	movzx	ecx, byte ptr [rdx + 1]
0xac13:	setb	r11b
0xac17:	add	rdx, 1
0xac1b:	mov	rsi, rax
0xac1e:	test	r11, r11
0xac21:	lea	edi, [rcx - 0x30]
0xac24:	jne	0xb12e


0xa93d:	mov	rsi, r9
0xa940:	mov	qword ptr [rsp + 0x40], r9
0xa945:	mov	qword ptr [rsp + 0x38], r10
0xa94a:	shl	rsi, 5
0xa94e:	cmp	qword ptr [rsp + 8], rcx
0xa953:	mov	qword ptr [rsp + 0x30], r8
0xa958:	je	0xb071


0xb1db:	cmp	qword ptr [rsp + 8], rcx
0xb1e0:	jne	0xb044


0xa997:	mov	rdx, rax
0xa99a:	shl	rdx, 5
0xa99e:	add	rdx, rcx
0xa9a1:	cmp	rax, rbx
0xa9a4:	ja	0xa9c6


0xb0bc:	mov	rdx, r11
0xb0bf:	add	rdx, 1
0xb0c3:	movzx	ecx, byte ptr [rdx]
0xb0c6:	lea	esi, [rcx - 0x30]
0xb0c9:	cmp	sil, 9
0xb0cd:	jbe	0xb0bf


0xaa2e:	mov	rbx, qword ptr [r12 + 0x40]
0xaa33:	cmp	rbx, -1
0xaa37:	je	0xb095


0xab9e:	mov	rsi, qword ptr [rsp + 0x18]
0xaba3:	mov	rax, rdx
0xaba6:	mov	qword ptr [r12 + 0x38], rdx
0xabab:	sub	rax, rbp
0xabae:	movzx	ebx, byte ptr [rdx]
0xabb1:	mov	rbp, rdx
0xabb4:	cmp	rsi, rax
0xabb7:	cmovae	rax, rsi
0xabbb:	mov	qword ptr [rsp + 0x18], rax
0xabc0:	jmp	0xa71e


0xa760:	mov	ecx, eax
0xa762:	mov	edx, esi
0xa764:	and	ecx, 1
0xa767:	shl	edx, cl
0xa769:	or	eax, edx
0xa76b:	jmp	0xa753


0xa730:	cmp	bl, 0x4c
0xa733:	je	0xa770


0xac2a:	cmp	dil, 9
0xac2e:	jbe	0xabe5


0xb12e:	cmp	dil, 9
0xb132:	ja	0xad9b


0xb071:	mov	rdi, rsi
0xb074:	call	0x2660


0xa95e:	mov	rdi, rcx
0xa961:	call	0x26a0


0xb1e6:	jmp	0xb04c


0xb044:	mov	rdi, rcx
0xb047:	call	0x2430


0xa9c6:	shl	rbx, 5
0xa9ca:	lea	rax, [rcx + rbx]
0xa9ce:	mov	edx, dword ptr [rax]
0xa9d0:	test	edx, edx
0xa9d2:	jne	0xaeab


0xb0bf:	add	rdx, 1
0xb0c3:	movzx	ecx, byte ptr [rdx]
0xb0c6:	lea	esi, [rcx - 0x30]
0xb0c9:	cmp	sil, 9
0xb0cd:	jbe	0xb0bf


0xb0cf:	cmp	cl, 0x24
0xb0d2:	jne	0xaa2e


0xb095:	mov	rsi, qword ptr [rsp + 0x20]
0xb09a:	cmp	rsi, -1
0xb09e:	lea	rax, [rsi + 1]
0xb0a2:	mov	qword ptr [r12 + 0x40], rsi
0xb0a7:	je	0xad9b


0xaa3d:	cmp	r9, rbx
0xaa40:	mov	rcx, qword ptr [r15 + 8]
0xaa44:	jbe	0xafaf


0xab90:	add	rdx, 1
0xab94:	movzx	eax, byte ptr [rdx]
0xab97:	sub	eax, 0x30
0xab9a:	cmp	al, 9
0xab9c:	jbe	0xab90


0xa753:	movzx	ebx, byte ptr [rbp]
0xa757:	add	rbp, 1
0xa75b:	cmp	bl, 0x68
0xa75e:	jne	0xa730


0xa770:	or	eax, 4
0xa773:	jmp	0xa753


0xa735:	cmp	bl, 0x6c
0xa738:	je	0xa750


0xabe5:	movsx	eax, cl
0xabe8:	movabs	rdi, 0x1999999999999999
0xabf2:	mov	rcx, r8
0xabf5:	sub	eax, 0x30
0xabf8:	cmp	rsi, rdi
0xabfb:	cdqe	
0xabfd:	ja	0xac06


0xac30:	lea	rbx, [rax - 1]
0xac34:	cmp	rbx, -3
0xac38:	ja	0xad9b


0xb138:	movsx	eax, cl
0xb13b:	mov	rbp, rdx
0xb13e:	mov	rcx, r8
0xb141:	sub	eax, 0x30
0xb144:	cdqe	
0xb146:	jmp	0xac09


0xb04c:	mov	rdi, qword ptr [r14 + 8]
0xb050:	cmp	qword ptr [rsp + 0x28], rdi
0xb055:	je	0xb05c


0xa9b0:	add	rax, 1
0xa9b4:	mov	dword ptr [rdx], 0
0xa9ba:	add	rdx, 0x20
0xa9be:	cmp	rax, rbx
0xa9c1:	jbe	0xa9b0


0xa9c3:	mov	qword ptr [r15], rax
0xa9c6:	shl	rbx, 5
0xa9ca:	lea	rax, [rcx + rbx]
0xa9ce:	mov	edx, dword ptr [rax]
0xa9d0:	test	edx, edx
0xa9d2:	jne	0xaeab


0xa9d8:	mov	dword ptr [rax], 5
0xa9de:	movzx	ebx, byte ptr [rbp]
0xa9e2:	lea	rdx, [rbp + 1]
0xa9e6:	cmp	bl, 0x2e
0xa9e9:	jne	0xa71e


0xaeab:	cmp	edx, 5
0xaeae:	jne	0xad9f


0xb0d8:	xor	ecx, ecx
0xb0da:	movabs	rsi, 0x1999999999999999
0xb0e4:	sub	eax, 0x30
0xb0e7:	mov	rdx, r8
0xb0ea:	cmp	rcx, rsi
0xb0ed:	cdqe	
0xb0ef:	ja	0xb0f8


0xb0ad:	mov	rbx, qword ptr [rsp + 0x20]
0xb0b2:	mov	qword ptr [rsp + 0x20], rax
0xb0b7:	jmp	0xaa3d


0xafaf:	add	r9, r9
0xafb2:	lea	rax, [rbx + 1]
0xafb6:	cmp	r9, rbx
0xafb9:	cmovbe	r9, rax
0xafbd:	movabs	rax, 0x7ffffffffffffff
0xafc7:	cmp	r9, rax
0xafca:	ja	0xb1db


0xaa4a:	mov	rax, qword ptr [r15]
0xaa4d:	mov	rdx, rax
0xaa50:	shl	rdx, 5
0xaa54:	add	rdx, rcx
0xaa57:	cmp	rax, rbx
0xaa5a:	ja	0xaa76


0xa750:	add	eax, 8
0xa753:	movzx	ebx, byte ptr [rbp]
0xa757:	add	rbp, 1
0xa75b:	cmp	bl, 0x68
0xa75e:	jne	0xa730


0xa73a:	cmp	bl, 0x6a
0xa73d:	je	0xa750


0xac3e:	mov	qword ptr [r12 + 0x28], rbx
0xac43:	add	rbp, 2
0xac47:	jmp	0xa90f


0xac09:	xor	r11d, r11d
0xac0c:	add	rax, rcx
0xac0f:	movzx	ecx, byte ptr [rdx + 1]
0xac13:	setb	r11b
0xac17:	add	rdx, 1
0xac1b:	mov	rsi, rax
0xac1e:	test	r11, r11
0xac21:	lea	edi, [rcx - 0x30]
0xac24:	jne	0xb12e


0xb05c:	call	0x2450


0xb057:	call	0x2430


0xaeb4:	movzx	ebx, byte ptr [rbp]
0xaeb8:	lea	rdx, [rbp + 1]
0xaebc:	jmp	0xa715


0xad9f:	cmp	qword ptr [rsp + 8], rcx
0xada4:	je	0xadae


0xb0f1:	lea	rdx, [rcx + rcx*4]
0xb0f5:	add	rdx, rdx
0xb0f8:	mov	rsi, r11
0xb0fb:	xor	ebx, ebx
0xb0fd:	add	rdx, rax
0xb100:	movsx	eax, byte ptr [r11 + 1]
0xb105:	setb	bl
0xb108:	add	r11, 1
0xb10c:	mov	rcx, rdx
0xb10f:	test	rbx, rbx
0xb112:	lea	edi, [rax - 0x30]
0xb115:	je	0xb188


0xb0f8:	mov	rsi, r11
0xb0fb:	xor	ebx, ebx
0xb0fd:	add	rdx, rax
0xb100:	movsx	eax, byte ptr [r11 + 1]
0xb105:	setb	bl
0xb108:	add	r11, 1
0xb10c:	mov	rcx, rdx
0xb10f:	test	rbx, rbx
0xb112:	lea	edi, [rax - 0x30]
0xb115:	je	0xb188


0xafd0:	mov	rsi, r9
0xafd3:	mov	qword ptr [rsp + 0x48], r9
0xafd8:	mov	qword ptr [rsp + 0x40], r10
0xafdd:	shl	rsi, 5
0xafe1:	cmp	qword ptr [rsp + 8], rcx
0xafe6:	mov	qword ptr [rsp + 0x38], r8
0xafeb:	mov	qword ptr [rsp + 0x30], r11
0xaff0:	je	0xb1ae


0xaa76:	shl	rbx, 5
0xaa7a:	lea	rax, [rcx + rbx]
0xaa7e:	mov	edx, dword ptr [rax]
0xaa80:	test	edx, edx
0xaa82:	jne	0xaf9a


0xa73f:	mov	edx, ebx
0xa741:	and	edx, 0xffffffdf
0xa744:	cmp	dl, 0x5a
0xa747:	je	0xa750


0xa90f:	cmp	r9, rbx
0xa912:	mov	rcx, qword ptr [r15 + 8]
0xa916:	ja	0xaf92


0xb188:	cmp	dil, 9
0xb18c:	jbe	0xb0da


0xb117:	cmp	dil, 9
0xb11b:	ja	0xad9b


0xb1ae:	mov	rdi, rsi
0xb1b1:	call	0x2660


0xaff6:	mov	rdi, rcx
0xaff9:	call	0x26a0


0xaa60:	add	rax, 1
0xaa64:	mov	dword ptr [rdx], 0
0xaa6a:	add	rdx, 0x20
0xaa6e:	cmp	rax, rbx
0xaa71:	jbe	0xaa60


0xaa73:	mov	qword ptr [r15], rax
0xaa76:	shl	rbx, 5
0xaa7a:	lea	rax, [rcx + rbx]
0xaa7e:	mov	edx, dword ptr [rax]
0xaa80:	test	edx, edx
0xaa82:	jne	0xaf9a


0xaa88:	mov	dword ptr [rax], 5
0xaa8e:	mov	rbp, r11
0xaa91:	movzx	ebx, byte ptr [r11]
0xaa95:	jmp	0xa71e


0xaf9a:	cmp	edx, 5
0xaf9d:	jne	0xad9f


0xa749:	cmp	bl, 0x74
0xa74c:	jne	0xa778


0xb0da:	movabs	rsi, 0x1999999999999999
0xb0e4:	sub	eax, 0x30
0xb0e7:	mov	rdx, r8
0xb0ea:	cmp	rcx, rsi
0xb0ed:	cdqe	
0xb0ef:	ja	0xb0f8


0xb192:	lea	rbx, [rdx - 1]
0xb196:	cmp	rbx, -3
0xb19a:	ja	0xad9b


0xb121:	sub	eax, 0x30
0xb124:	mov	rdx, r8
0xb127:	mov	rsi, r11
0xb12a:	cdqe	
0xb12c:	jmp	0xb0fb


0xafa3:	movzx	ebx, byte ptr [r11]
0xafa7:	mov	rbp, r11
0xafaa:	jmp	0xa71e


0xa778:	lea	edx, [rbx - 0x25]
0xa77b:	cmp	dl, 0x53
0xa77e:	ja	0xad9b


0xb1a0:	mov	qword ptr [r12 + 0x40], rbx
0xb1a5:	lea	r11, [rsi + 2]
0xb1a9:	jmp	0xaa3d


0xb0fb:	xor	ebx, ebx
0xb0fd:	add	rdx, rax
0xb100:	movsx	eax, byte ptr [r11 + 1]
0xb105:	setb	bl
0xb108:	add	r11, 1
0xb10c:	mov	rcx, rdx
0xb10f:	test	rbx, rbx
0xb112:	lea	edi, [rax - 0x30]
0xb115:	je	0xb188


0xa784:	lea	rcx, [rip + 0x3ed1]
0xa78b:	movzx	edx, dl
0xa78e:	movsxd	rdx, dword ptr [rcx + rdx*4]
0xa792:	add	rdx, rcx
0xa795:	jmp	rdx


0x3438:	mov	byte ptr [rip + 0x20dcc9], 1
0x343f:	pop	rbp
0x3440:	ret	


0x928e:	test	eax, eax
0x9290:	js	0xa0f8


0xa0f8:	xor	r15d, r15d
0xa0fb:	jmp	0x940f


0x9296:	mov	rsi, r14
0x9299:	mov	rdi, r12
0x929c:	call	0xa350


0x940f:	mov	rdi, qword ptr [rbp - 0x38]
0x9413:	xor	rdi, qword ptr fs:[0x28]
0x941c:	mov	rax, r15
0x941f:	jne	0xa327


0x9425:	lea	rsp, [rbp - 0x28]
0x9429:	pop	rbx
0x942a:	pop	r12
0x942c:	pop	r13
0x942e:	pop	r14
0x9430:	pop	r15
0x9432:	pop	rbp
0x9433:	ret	


0xa327:	call	0x2520


0x92a1:	test	eax, eax
0x92a3:	js	0xa160


0xa160:	mov	rax, qword ptr [rbp - 0x408]
0xa167:	mov	rdi, qword ptr [rbp - 0x2b8]
0xa16e:	add	rax, 0x20
0xa172:	cmp	rdi, rax
0xa175:	je	0xa17c


0x92a9:	mov	rax, qword ptr [rbp - 0x2b0]
0x92b0:	mov	rdx, -1
0x92b7:	add	rax, 7
0x92bb:	cmp	rax, 6
0x92bf:	cmovbe	rax, rdx
0x92c3:	add	rax, qword ptr [rbp - 0x2a8]
0x92ca:	jb	0x9cf8


0xa17c:	mov	rax, qword ptr [rbp - 0x410]
0xa183:	mov	rdi, qword ptr [rbp - 0x3a8]
0xa18a:	add	rax, 0x10
0xa18e:	cmp	rdi, rax
0xa191:	je	0xa198


0xa177:	call	0x2430


0x9cf8:	call	0x2450


0x92d0:	mov	rdi, rax
0x92d3:	xor	r8d, r8d
0x92d6:	add	rdi, 6
0x92da:	setb	r8b
0x92de:	jb	0x9cf8


0xa198:	call	0x2450


0xa193:	call	0x2430


0x92e4:	cmp	rdi, 0xf9f
0x92eb:	jbe	0x9438


0x9438:	add	rax, 0x24
0x943c:	mov	qword ptr [rbp - 0x420], 0
0x9447:	and	rax, 0xfffffffffffffff0
0x944b:	sub	rsp, rax
0x944e:	lea	rax, [rsp + 0xf]
0x9453:	and	rax, 0xfffffffffffffff0
0x9457:	mov	qword ptr [rbp - 0x3d8], rax
0x945e:	jmp	0x9325


0x92f1:	cmp	rdi, -1
0x92f5:	mov	qword ptr [rbp - 0x3c8], r8
0x92fc:	je	0x9cf8


0x9325:	xor	r12d, r12d
0x9328:	cmp	qword ptr [rbp - 0x3e8], 0
0x9330:	je	0x933c


0x9302:	call	0x2660


0x933c:	mov	r13, qword ptr [rbp - 0x2b8]
0x9343:	lea	rax, [rbp - 0x3bc]
0x934a:	mov	r15, qword ptr [rbp - 0x3e8]
0x9351:	mov	qword ptr [rbp - 0x400], 0
0x935c:	mov	qword ptr [rbp - 0x3f0], rax
0x9363:	mov	rax, rbx
0x9366:	mov	rbx, r8
0x9369:	mov	rcx, qword ptr [r13]
0x936d:	mov	r8, rax
0x9370:	cmp	rcx, r8
0x9373:	je	0x9ce1


0x9332:	mov	rax, qword ptr [rbp - 0x418]
0x9339:	mov	r12, qword ptr [rax]
0x933c:	mov	r13, qword ptr [rbp - 0x2b8]
0x9343:	lea	rax, [rbp - 0x3bc]
0x934a:	mov	r15, qword ptr [rbp - 0x3e8]
0x9351:	mov	qword ptr [rbp - 0x400], 0
0x935c:	mov	qword ptr [rbp - 0x3f0], rax
0x9363:	mov	rax, rbx
0x9366:	mov	rbx, r8
0x9369:	mov	rcx, qword ptr [r13]
0x936d:	mov	r8, rax
0x9370:	cmp	rcx, r8
0x9373:	je	0x9ce1


0x9ce1:	mov	r14, rbx
0x9ce4:	jmp	0x94e3


0x9379:	sub	rcx, r8
0x937c:	mov	rax, rbx
0x937f:	add	rax, rcx
0x9382:	mov	r14, rax
0x9385:	jae	0x9468


0x94e3:	mov	rax, qword ptr [rbp - 0x400]
0x94ea:	cmp	qword ptr [rbp - 0x2c0], rax
0x94f1:	je	0xa1ab


0x938b:	cmp	r12, -1
0x938f:	je	0x9e60


0x9468:	cmp	r12, rax
0x946b:	jae	0x94d4


0xa1ab:	mov	rbx, r14
0xa1ae:	xor	eax, eax
0xa1b0:	add	rbx, 1
0xa1b4:	jb	0xa2c0


0x94f7:	movzx	edx, byte ptr [r13 + 0x48]
0x94fc:	mov	rax, qword ptr [r13 + 0x50]
0x9500:	cmp	dl, 0x25
0x9503:	je	0x9c98


0x9e60:	mov	r14, r12
0x9e63:	jmp	0x94d4


0x9395:	call	0x2450


0x946d:	test	r12, r12
0x9470:	jne	0x9da0


0x94d4:	lea	rdi, [r15 + rbx]
0x94d8:	mov	rdx, rcx
0x94db:	mov	rsi, r8
0x94de:	call	0x2640


0xa2c0:	cmp	r12, -1
0xa2c4:	mov	eax, 1
0xa2c9:	je	0xa20c


0xa1ba:	cmp	r12, rbx
0xa1bd:	jae	0xa20c


0x9c98:	cmp	rax, -1
0x9c9c:	jne	0xa156


0x9509:	cmp	rax, -1
0x950d:	je	0xa156


0x9476:	cmp	rax, 0xc
0x947a:	ja	0x9db2


0x9da0:	js	0x9395


0x2640:	jmp	qword ptr [rip + 0x20e8d2]


0xa20c:	cmp	r15, qword ptr [rbp - 0x3e8]
0xa213:	mov	byte ptr [r15 + r14], 0
0xa218:	je	0xa231


0xa2cf:	test	r12, r12
0xa2d2:	je	0x9395


0xa1bf:	test	r12, r12
0xa1c2:	jne	0xa2f9


0x9ca2:	mov	rax, r14
0x9ca5:	add	rax, 1
0x9ca9:	mov	rbx, rax
0x9cac:	jae	0x9d38


0xa156:	call	0x2440


0x9513:	mov	r8, qword ptr [rbp - 0x3a8]
0x951a:	shl	rax, 5
0x951e:	add	rax, r8
0x9521:	cmp	dl, 0x6e
0x9524:	mov	edi, dword ptr [rax]
0x9526:	mov	dword ptr [rbp - 0x3d0], edi
0x952c:	je	0x9d10


0x9480:	mov	r12d, 0xc
0x9486:	cmp	r15, qword ptr [rbp - 0x3e8]
0x948d:	sete	dl
0x9490:	test	r15, r15
0x9493:	je	0x9dd8


0x9db2:	cmp	rax, -1
0x9db6:	je	0x9395


0x9da6:	add	r12, r12
0x9da9:	cmp	r12, rax
0x9dac:	jae	0x9486




0xa231:	mov	rax, qword ptr [rbp - 0x420]
0xa238:	test	rax, rax
0xa23b:	je	0xa245


0xa21a:	cmp	r12, rbx
0xa21d:	jbe	0xa231


0xa2d8:	js	0x9395


0xa1c8:	cmp	rbx, 0xc
0xa1cc:	ja	0xa2de


0xa2f9:	js	0x9395


0x9cb2:	cmp	r12, -1
0x9cb6:	jne	0x9395


0x9d38:	cmp	r12, rax
0x9d3b:	jae	0x9cbf


0x9d10:	mov	edx, edi
0x9d12:	sub	edx, 0x12
0x9d15:	cmp	edx, 4
0x9d18:	ja	0xa156


0x9532:	mov	eax, dword ptr [r13 + 0x10]
0x9536:	mov	rdi, qword ptr [rbp - 0x3d8]
0x953d:	test	al, 1
0x953f:	mov	byte ptr [rdi], 0x25
0x9542:	lea	rbx, [rdi + 1]
0x9546:	je	0x9557


0x9dd8:	mov	rdi, r12
0x9ddb:	mov	qword ptr [rbp - 0x3e0], r8
0x9de2:	mov	byte ptr [rbp - 0x3d0], dl
0x9de8:	mov	qword ptr [rbp - 0x3c8], rcx
0x9def:	call	0x2660


0x9499:	test	dl, dl
0x949b:	jne	0x9dd8


0x9dbc:	cmp	r15, qword ptr [rbp - 0x3e8]
0x9dc3:	mov	r12, rax
0x9dc6:	sete	dl
0x9dc9:	test	r15, r15
0x9dcc:	jne	0x9499


0x9486:	cmp	r15, qword ptr [rbp - 0x3e8]
0x948d:	sete	dl
0x9490:	test	r15, r15
0x9493:	je	0x9dd8


0xa245:	mov	rax, qword ptr [rbp - 0x408]
0xa24c:	mov	rdi, qword ptr [rbp - 0x2b8]
0xa253:	add	rax, 0x20
0xa257:	cmp	rdi, rax
0xa25a:	je	0xa261


0xa23d:	mov	rdi, rax
0xa240:	call	0x2430


0xa21f:	mov	rdi, r15
0xa222:	mov	rsi, rbx
0xa225:	call	0x26a0


0xa2de:	test	rax, rax
0xa2e1:	jne	0x9395


0xa1d2:	mov	r12d, 0xc
0xa1d8:	cmp	r15, qword ptr [rbp - 0x3e8]
0xa1df:	sete	r13b
0xa1e3:	test	r15, r15
0xa1e6:	je	0xa28c


0xa2ff:	add	r12, r12
0xa302:	cmp	r12, rbx
0xa305:	jae	0xa1d8


0x9cbc:	mov	rbx, r12
0x9cbf:	mov	byte ptr [r15 + r14], 0x25
0x9cc4:	mov	r8, qword ptr [r13 + 8]
0x9cc8:	add	r13, 0x58
0x9ccc:	mov	rcx, qword ptr [r13]
0x9cd0:	add	qword ptr [rbp - 0x400], 1
0x9cd8:	cmp	rcx, r8
0x9cdb:	jne	0x9379


0x9d3d:	test	r12, r12
0x9d40:	jne	0xa110


0x9cbf:	mov	byte ptr [r15 + r14], 0x25
0x9cc4:	mov	r8, qword ptr [r13 + 8]
0x9cc8:	add	r13, 0x58
0x9ccc:	mov	rcx, qword ptr [r13]
0x9cd0:	add	qword ptr [rbp - 0x400], 1
0x9cd8:	cmp	rcx, r8
0x9cdb:	jne	0x9379


0x9d1e:	lea	rdi, [rip + 0x489f]
0x9d25:	mov	rax, qword ptr [rax + 0x10]
0x9d29:	movsxd	rdx, dword ptr [rdi + rdx*4]
0x9d2d:	add	rdx, rdi
0x9d30:	jmp	rdx


0x9557:	test	al, 2
0x9559:	je	0x9562


0x9548:	mov	rdi, qword ptr [rbp - 0x3d8]
0x954f:	lea	rbx, [rdi + 2]
0x9553:	mov	byte ptr [rdi + 1], 0x27
0x9557:	test	al, 2
0x9559:	je	0x9562


0x94a1:	mov	rsi, r12
0x94a4:	mov	rdi, r15
0x94a7:	mov	qword ptr [rbp - 0x3d0], r8
0x94ae:	mov	qword ptr [rbp - 0x3c8], rcx
0x94b5:	call	0x26a0


0xa261:	mov	rax, qword ptr [rbp - 0x410]
0xa268:	mov	rdi, qword ptr [rbp - 0x3a8]
0xa26f:	add	rax, 0x10
0xa273:	cmp	rdi, rax
0xa276:	je	0xa27d


0xa25c:	call	0x2430


0xa2e7:	cmp	rbx, -1
0xa2eb:	je	0x9395


0xa28c:	mov	rdi, r12
0xa28f:	call	0x2660


0xa1ec:	test	r13b, r13b
0xa1ef:	jne	0xa28c


0xa30b:	jmp	0xa2de


0xa1d8:	cmp	r15, qword ptr [rbp - 0x3e8]
0xa1df:	sete	r13b
0xa1e3:	test	r15, r15
0xa1e6:	je	0xa28c


0x9d46:	cmp	rax, 0xc
0x9d4a:	ja	0xa122


0xa110:	js	0x9395


0x9562:	test	al, 4
0x9564:	je	0x956d


0x955b:	mov	byte ptr [rbx], 0x2d
0x955e:	add	rbx, 1
0x9562:	test	al, 4
0x9564:	je	0x956d


0xa27d:	mov	rax, qword ptr [rbp - 0x418]
0xa284:	mov	qword ptr [rax], r14
0xa287:	jmp	0x940f


0xa278:	call	0x2430


0xa2f1:	mov	r12, rbx
0xa2f4:	jmp	0xa1d8


0xa1f5:	mov	rsi, r12
0xa1f8:	mov	rdi, r15
0xa1fb:	call	0x26a0


0x9d50:	mov	r12d, 0xc
0x9d56:	cmp	r15, qword ptr [rbp - 0x3e8]
0x9d5d:	sete	dl
0x9d60:	test	r15, r15
0x9d63:	je	0x9fd0


0xa122:	cmp	rax, -1
0xa126:	je	0x9395


0xa116:	add	r12, r12
0xa119:	cmp	r12, rax
0xa11c:	jae	0x9d56


0x956d:	test	al, 8
0x956f:	je	0x9578


0x9566:	mov	byte ptr [rbx], 0x2b
0x9569:	add	rbx, 1
0x956d:	test	al, 8
0x956f:	je	0x9578


0x9fd0:	mov	rdi, r12
0x9fd3:	mov	byte ptr [rbp - 0x3c8], dl
0x9fd9:	call	0x2660


0x9d69:	test	dl, dl
0x9d6b:	jne	0x9fd0


0xa12c:	mov	r12, rax
0xa12f:	jmp	0x9d56


0x9d56:	cmp	r15, qword ptr [rbp - 0x3e8]
0x9d5d:	sete	dl
0x9d60:	test	r15, r15
0x9d63:	je	0x9fd0


0x9578:	test	al, 0x10
0x957a:	je	0x9583


0x9571:	mov	byte ptr [rbx], 0x20
0x9574:	add	rbx, 1
0x9578:	test	al, 0x10
0x957a:	je	0x9583


0x9d71:	mov	rsi, r12
0x9d74:	mov	rdi, r15
0x9d77:	call	0x26a0


0x9583:	test	al, 0x40
0x9585:	je	0x958e


0x957c:	mov	byte ptr [rbx], 0x23
0x957f:	add	rbx, 1
0x9583:	test	al, 0x40
0x9585:	je	0x958e


0x958e:	test	al, 0x20
0x9590:	je	0x9599


0x9587:	mov	byte ptr [rbx], 0x49
0x958a:	add	rbx, 1
0x958e:	test	al, 0x20
0x9590:	je	0x9599


0x9599:	mov	rsi, qword ptr [r13 + 0x18]
0x959d:	mov	rdx, qword ptr [r13 + 0x20]
0x95a1:	cmp	rsi, rdx
0x95a4:	je	0x95d6


0x9592:	mov	byte ptr [rbx], 0x30
0x9595:	add	rbx, 1
0x9599:	mov	rsi, qword ptr [r13 + 0x18]
0x959d:	mov	rdx, qword ptr [r13 + 0x20]
0x95a1:	cmp	rsi, rdx
0x95a4:	je	0x95d6


0x95d6:	mov	rsi, qword ptr [r13 + 0x30]
0x95da:	mov	rdx, qword ptr [r13 + 0x38]
0x95de:	cmp	rsi, rdx
0x95e1:	je	0x9613


0x95a6:	mov	rcx, rdx
0x95a9:	mov	rdi, rbx
0x95ac:	mov	qword ptr [rbp - 0x3e0], r8
0x95b3:	sub	rcx, rsi
0x95b6:	mov	rdx, rcx
0x95b9:	mov	qword ptr [rbp - 0x3c8], rcx
0x95c0:	call	0x2640


0x9613:	mov	edi, dword ptr [rbp - 0x3d0]
0x9619:	cmp	edi, 0x10
0x961c:	ja	0x964b


0x95e3:	mov	rcx, rdx
0x95e6:	mov	rdi, rbx
0x95e9:	mov	qword ptr [rbp - 0x3e0], r8
0x95f0:	sub	rcx, rsi
0x95f3:	mov	rdx, rcx
0x95f6:	mov	qword ptr [rbp - 0x3c8], rcx
0x95fd:	call	0x2640


0x961e:	mov	eax, 1
0x9623:	mov	ecx, edi
0x9625:	shl	rax, cl
0x9628:	test	eax, 0x14180
0x962d:	jne	0x9644


0x964b:	movzx	eax, byte ptr [r13 + 0x48]
0x9650:	mov	byte ptr [rbx + 1], 0
0x9654:	mov	byte ptr [rbx], al
0x9656:	mov	rax, qword ptr [r13 + 0x28]
0x965a:	cmp	rax, -1
0x965e:	je	0x9d90


0x962f:	test	ah, 0x10
0x9632:	jne	0x9f90


0x9644:	mov	byte ptr [rbx], 0x6c
0x9647:	add	rbx, 1
0x964b:	movzx	eax, byte ptr [r13 + 0x48]
0x9650:	mov	byte ptr [rbx + 1], 0
0x9654:	mov	byte ptr [rbx], al
0x9656:	mov	rax, qword ptr [r13 + 0x28]
0x965a:	cmp	rax, -1
0x965e:	je	0x9d90


0x9d90:	mov	dword ptr [rbp - 0x3e0], 0
0x9d9a:	jmp	0x9687


0x9664:	shl	rax, 5
0x9668:	add	rax, r8
0x966b:	cmp	dword ptr [rax], 5
0x966e:	jne	0xa156


0x9638:	test	ah, 6
0x963b:	je	0x964b


0x9f90:	mov	byte ptr [rbx], 0x4c
0x9f93:	add	rbx, 1
0x9f97:	jmp	0x964b


0x9687:	mov	rax, qword ptr [r13 + 0x40]
0x968b:	cmp	rax, -1
0x968f:	je	0x96bc


0x9674:	mov	eax, dword ptr [rax + 0x10]
0x9677:	mov	dword ptr [rbp - 0x3e0], 1
0x9681:	mov	dword ptr [rbp - 0x3b8], eax
0x9687:	mov	rax, qword ptr [r13 + 0x40]
0x968b:	cmp	rax, -1
0x968f:	je	0x96bc


0x963d:	mov	byte ptr [rbx], 0x6c
0x9640:	add	rbx, 1
0x9644:	mov	byte ptr [rbx], 0x6c
0x9647:	add	rbx, 1
0x964b:	movzx	eax, byte ptr [r13 + 0x48]
0x9650:	mov	byte ptr [rbx + 1], 0
0x9654:	mov	byte ptr [rbx], al
0x9656:	mov	rax, qword ptr [r13 + 0x28]
0x965a:	cmp	rax, -1
0x965e:	je	0x9d90


0x96bc:	mov	rax, r14
0x96bf:	xor	edx, edx
0x96c1:	add	rax, 2
0x96c5:	jb	0xa32c


0x9691:	shl	rax, 5
0x9695:	add	r8, rax
0x9698:	cmp	dword ptr [r8], 5
0x969c:	jne	0xa156


0xa32c:	cmp	r12, -1
0xa330:	mov	edx, 1
0xa335:	je	0x971b


0x96cb:	cmp	r12, rax
0x96ce:	jae	0x971b


0x96a2:	mov	eax, dword ptr [rbp - 0x3e0]
0x96a8:	mov	edx, dword ptr [r8 + 0x10]
0x96ac:	mov	dword ptr [rbp + rax*4 - 0x3b8], edx
0x96b3:	lea	eax, [rax + 1]
0x96b6:	mov	dword ptr [rbp - 0x3e0], eax
0x96bc:	mov	rax, r14
0x96bf:	xor	edx, edx
0x96c1:	add	rax, 2
0x96c5:	jb	0xa32c


0x971b:	mov	byte ptr [r15 + r14], 0
0x9720:	call	0x2450


0xa33b:	test	r12, r12
0xa33e:	je	0x9395


0x96d0:	test	r12, r12
0x96d3:	jne	0x9ef8


0xa344:	jns	0x9f10


0x96d9:	cmp	rax, 0xc
0x96dd:	ja	0x9f10


0x9ef8:	js	0x9395


0xa34a:	jmp	0x9395


0x9f10:	test	rdx, rdx
0x9f13:	jne	0x9395


0x96e3:	mov	r12d, 0xc
0x96e9:	cmp	r15, qword ptr [rbp - 0x3e8]
0x96f0:	sete	dl
0x96f3:	test	r15, r15
0x96f6:	je	0x9f40


0x9efe:	add	r12, r12
0x9f01:	cmp	r12, rax
0x9f04:	jae	0x96e9


0x9f19:	cmp	rax, -1
0x9f1d:	je	0x9395


0x9f40:	mov	rdi, r12
0x9f43:	mov	byte ptr [rbp - 0x3c8], dl
0x9f49:	call	0x2660


0x96fc:	test	dl, dl
0x96fe:	jne	0x9f40


0x96e9:	cmp	r15, qword ptr [rbp - 0x3e8]
0x96f0:	sete	dl
0x96f3:	test	r15, r15
0x96f6:	je	0x9f40


0x9f23:	cmp	r15, qword ptr [rbp - 0x3e8]
0x9f2a:	mov	r12, rax
0x9f2d:	sete	dl
0x9f30:	test	r15, r15
0x9f33:	jne	0x96fc


0x9704:	mov	rsi, r12
0x9707:	mov	rdi, r15
0x970a:	call	0x26a0


0x8f9b:	test	rax, rax
0x8f9e:	je	0x8fe2


0x8fe2:	mov	eax, 0xffffffff
0x8fe7:	jmp	0x8fb2


0x8fa0:	mov	rdx, qword ptr [rsp]
0x8fa4:	cmp	rdx, 0x7fffffff
0x8fab:	ja	0x8fc8


0x8fb2:	mov	rbx, qword ptr [rsp + 8]
0x8fb7:	xor	rbx, qword ptr fs:[0x28]
0x8fc0:	jne	0x8fe9


0x8fad:	mov	qword ptr [rbx], rax
0x8fb0:	mov	eax, edx
0x8fb2:	mov	rbx, qword ptr [rsp + 8]
0x8fb7:	xor	rbx, qword ptr fs:[0x28]
0x8fc0:	jne	0x8fe9


0x8fc8:	mov	rdi, rax
0x8fcb:	call	0x2430


0x8fc2:	add	rsp, 0x10
0x8fc6:	pop	rbx
0x8fc7:	ret	


0x8fe9:	call	0x2520


0x35cb:	test	eax, eax
0x35cd:	mov	ebx, eax
0x35cf:	js	0x36a7


0x36a7:	call	0x8010


0x35d5:	mov	eax, dword ptr [rip + 0x20dc21]
0x35db:	mov	rdi, qword ptr [rip + 0x20dac6]
0x35e2:	test	eax, eax
0x35e4:	jle	0x361f


0x361f:	mov	rsi, rdi
0x3622:	mov	rdi, qword ptr [rsp + 8]
0x3627:	call	0x2600


0x35e6:	mov	edx, dword ptr [rip + 0x20dc14]
0x35ec:	mov	rcx, qword ptr [rdi + 0x28]
0x35f0:	mov	rsi, qword ptr [rdi + 0x30]
0x35f4:	sub	edx, eax
0x35f6:	cmp	edx, ebx
0x35f8:	jge	0x3658


0x2600:	jmp	qword ptr [rip + 0x20e8f2]


0x35fa:	cmp	rcx, rsi
0x35fd:	jae	0x3698


0x3658:	cmp	rcx, rsi
0x365b:	jae	0x3680




0x3603:	lea	rax, [rcx + 1]
0x3607:	mov	qword ptr [rdi + 0x28], rax
0x360b:	mov	byte ptr [rcx], 0xa
0x360e:	mov	rdi, qword ptr [rip + 0x20da93]
0x3615:	mov	dword ptr [rip + 0x20dbdd], 0
0x361f:	mov	rsi, rdi
0x3622:	mov	rdi, qword ptr [rsp + 8]
0x3627:	call	0x2600


0x3698:	mov	esi, 0xa
0x369d:	call	0x2570


0x365d:	lea	rdx, [rcx + 1]
0x3661:	mov	qword ptr [rdi + 0x28], rdx
0x3665:	mov	byte ptr [rcx], 0x20
0x3668:	add	eax, 1
0x366b:	mov	rdi, qword ptr [rip + 0x20da36]
0x3672:	mov	dword ptr [rip + 0x20db84], eax
0x3678:	jmp	0x361f


0x3680:	mov	esi, 0x20
0x3685:	call	0x2570


0x2570:	jmp	qword ptr [rip + 0x20e93a]




0xb271:	test	rbp, rbp
0xb274:	je	0xb296


0xb296:	add	rsp, 8
0xb29a:	pop	rbx
0xb29b:	pop	rbp
0xb29c:	pop	r12
0xb29e:	pop	r13
0xb2a0:	pop	r14
0xb2a2:	pop	r15
0xb2a4:	ret	


0xb276:	xor	ebx, ebx
0xb278:	nop	dword ptr [rax + rax]
0xb280:	mov	rdx, r15
0xb283:	mov	rsi, r14
0xb286:	mov	edi, r13d
0xb289:	call	qword ptr [r12 + rbx*8]


0x368a:	mov	eax, dword ptr [rip + 0x20db6c]
0x3690:	jmp	0x3668


0x3668:	add	eax, 1
0x366b:	mov	rdi, qword ptr [rip + 0x20da36]
0x3672:	mov	dword ptr [rip + 0x20db84], eax
0x3678:	jmp	0x361f


0x36a2:	jmp	0x360e


0x360e:	mov	rdi, qword ptr [rip + 0x20da93]
0x3615:	mov	dword ptr [rip + 0x20dbdd], 0
0x361f:	mov	rsi, rdi
0x3622:	mov	rdi, qword ptr [rsp + 8]
0x3627:	call	0x2600


0x362c:	mov	rdi, qword ptr [rsp + 8]
0x3631:	call	0x2430


0x9602:	mov	rcx, qword ptr [rbp - 0x3c8]
0x9609:	mov	r8, qword ptr [rbp - 0x3e0]
0x9610:	add	rbx, rcx
0x9613:	mov	edi, dword ptr [rbp - 0x3d0]
0x9619:	cmp	edi, 0x10
0x961c:	ja	0x964b


0x95c5:	mov	rcx, qword ptr [rbp - 0x3c8]
0x95cc:	mov	r8, qword ptr [rbp - 0x3e0]
0x95d3:	add	rbx, rcx
0x95d6:	mov	rsi, qword ptr [r13 + 0x30]
0x95da:	mov	rdx, qword ptr [r13 + 0x38]
0x95de:	cmp	rsi, rdx
0x95e1:	je	0x9613


0x7faf:	test	rax, rax
0x7fb2:	je	0x7fb9


0x7fb4:	add	rsp, 8
0x7fb8:	ret	


0x4c76:	test	eax, eax
0x4c78:	jne	0x4c50


0x4c7a:	shl	r12, 5
0x4c7e:	add	r12, r14
0x4c81:	movzx	eax, byte ptr [r12 + 0xc]
0x4c87:	test	al, 0x10
0x4c89:	je	0x4f00


0x4c50:	add	r13, 1
0x4c54:	mov	rax, r13
0x4c57:	shl	rax, 5
0x4c5b:	mov	r15, qword ptr [r14 + rax]
0x4c5f:	test	r15, r15
0x4c62:	je	0x4d38


0x4f00:	cmp	byte ptr [rsp], 0
0x4f04:	je	0x4fd8


0x4c8f:	lea	rdi, [rip + 0x68fe]
0x4c96:	mov	ecx, 7
0x4c9b:	mov	rsi, rbx
0x4c9e:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4d38:	cmp	byte ptr [rsp], 0
0x4d3c:	jne	0x5099


0x4fd8:	mov	rsi, qword ptr [rsp + 0x18]
0x4fdd:	mov	edi, dword ptr [r12 + 8]
0x4fe2:	call	0x34d0


0x4f0a:	test	al, 4
0x4f0c:	je	0x5091


0x4c9e:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4ca0:	seta	al
0x4ca3:	sbb	al, 0
0x4ca5:	test	al, al
0x4ca7:	jne	0x4e80


0x4d42:	lea	r15, [rip + 0x20b14f]
0x4d49:	xor	r12d, r12d
0x4d4c:	lea	r13, [rip + 0x6751]
0x4d53:	jmp	0x4d6d


0x5099:	lea	rdi, [rbx - 1]
0x509d:	call	0x7780


0x5091:	mov	rax, qword ptr [rsp + 0x20]
0x5096:	mov	byte ptr [rax], 1
0x5099:	lea	rdi, [rbx - 1]
0x509d:	call	0x7780


0x4f12:	mov	rsi, qword ptr [rsp + 0x18]
0x4f17:	mov	edi, dword ptr [r12 + 8]
0x4f1c:	call	0x34d0


0x4cad:	mov	eax, dword ptr [rsp + 0x38]
0x4cb1:	sub	eax, 1
0x4cb4:	cmp	eax, ebp
0x4cb6:	je	0x5601


0x4e80:	lea	rdi, [rip + 0x66cf]
0x4e87:	mov	ecx, 7
0x4e8c:	mov	rsi, rbx
0x4e8f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4d6d:	mov	rsi, r13
0x4d70:	mov	rdi, rbx
0x4d73:	call	0x2620


0x5601:	mov	rdi, rbx
0x5604:	call	0x7780


0x4cbc:	mov	rax, qword ptr [rsp + 8]
0x4cc1:	mov	rcx, qword ptr [rsp + 0x10]
0x4cc6:	mov	rdi, qword ptr [rax + rcx + 8]
0x4ccb:	test	rdi, rdi
0x4cce:	je	0x5601


0x4e8f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4e91:	seta	al
0x4e94:	sbb	al, 0
0x4e96:	test	al, al
0x4e98:	jne	0x4f48


0x4cd4:	add	ebp, 1
0x4cd7:	cmp	byte ptr [rsp + 0x3e], 0
0x4cdc:	jne	0x4be4


0x4e9e:	mov	eax, dword ptr [rsp + 0x38]
0x4ea2:	sub	eax, 1
0x4ea5:	cmp	eax, ebp
0x4ea7:	je	0x5601


0x4f48:	lea	rdi, [rip + 0x660e]
0x4f4f:	mov	ecx, 5
0x4f54:	mov	rsi, rbx
0x4f57:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4ce2:	call	0x3460


0x4ead:	mov	rax, qword ptr [rsp + 8]
0x4eb2:	mov	rcx, qword ptr [rsp + 0x10]
0x4eb7:	mov	rdi, qword ptr [rax + rcx + 8]
0x4ebc:	test	rdi, rdi
0x4ebf:	je	0x5601


0x4f57:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4f59:	seta	al
0x4f5c:	sbb	al, 0
0x4f5e:	test	al, al
0x4f60:	jne	0x500d


0x4ec5:	add	ebp, 1
0x4ec8:	cmp	byte ptr [rsp + 0x3e], 0
0x4ecd:	jne	0x4be4


0x4f66:	mov	eax, dword ptr [rsp + 0x38]
0x4f6a:	sub	eax, 1
0x4f6d:	cmp	eax, ebp
0x4f6f:	je	0x5601


0x500d:	lea	rdi, [rip + 0x654e]
0x5014:	mov	ecx, 5
0x5019:	mov	rsi, rbx
0x501c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4ed3:	call	0x3460


0x4f75:	mov	rax, qword ptr [rsp + 8]
0x4f7a:	mov	rcx, qword ptr [rsp + 0x10]
0x4f7f:	mov	rdi, qword ptr [rax + rcx + 8]
0x4f84:	test	rdi, rdi
0x4f87:	je	0x5601


0x501c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x501e:	seta	al
0x5021:	sbb	al, 0
0x5023:	test	al, al
0x5025:	je	0x503e


0x4f8d:	add	ebp, 1
0x4f90:	cmp	byte ptr [rsp + 0x3e], 0
0x4f95:	jne	0x4be4


0x503e:	mov	eax, dword ptr [rsp + 0x38]
0x5042:	sub	eax, 1
0x5045:	cmp	eax, ebp
0x5047:	je	0x5601


0x5027:	lea	rsi, [rip + 0x6539]
0x502e:	mov	rdi, rbx
0x5031:	call	0x2620


0x4f9b:	mov	esi, 0x7fffffff
0x4fa0:	call	0x3860


0x504d:	mov	rax, qword ptr [rsp + 8]
0x5052:	mov	rcx, qword ptr [rsp + 0x10]
0x5057:	mov	rdi, qword ptr [rax + rcx + 8]
0x505c:	test	rdi, rdi
0x505f:	je	0x5601


0x5065:	add	ebp, 1
0x5068:	cmp	byte ptr [rsp + 0x3e], 0
0x506d:	jne	0x4be4


0x5073:	mov	esi, 0x7fffffff
0x5078:	call	0x3860


0x5036:	test	eax, eax
0x5038:	jne	0x5155


0x5155:	lea	rsi, [rip + 0x6413]
0x515c:	mov	rdi, rbx
0x515f:	call	0x2620


0x5164:	test	eax, eax
0x5166:	je	0x522c


0x522c:	cmp	byte ptr [rsp + 0x3e], 0
0x5231:	jne	0x4be4


0x516c:	lea	rsi, [rip + 0x6401]
0x5173:	mov	rdi, rbx
0x5176:	call	0x2620


0x5237:	call	0x3990


0x517b:	test	eax, eax
0x517d:	jne	0x52e3


0x5183:	mov	eax, dword ptr [rsp + 0x38]
0x5187:	sub	eax, 1
0x518a:	cmp	eax, ebp
0x518c:	je	0x5601


0x52e3:	lea	rsi, [rip + 0x62ab]
0x52ea:	mov	rdi, rbx
0x52ed:	call	0x2620


0x5192:	mov	rax, qword ptr [rsp + 8]
0x5197:	mov	rcx, qword ptr [rsp + 0x10]
0x519c:	lea	r12, [rax + rcx + 8]
0x51a1:	mov	rdi, qword ptr [r12]
0x51a5:	test	rdi, rdi
0x51a8:	je	0x5601


0x51ae:	or	rsi, 0xffffffffffffffff
0x51b2:	add	ebp, 1
0x51b5:	call	0x3860


0x52f2:	test	eax, eax
0x52f4:	jne	0x538b


0x52fa:	cmp	byte ptr [rsp + 0x3e], 0
0x52ff:	jne	0x4be4


0x538b:	mov	rdi, rbx
0x538e:	call	0x3460


0x5305:	call	0x3990


0x4d78:	test	eax, eax
0x4d7a:	jne	0x4d58


0x4d7c:	mov	eax, dword ptr [rsp + 0x38]
0x4d80:	sub	eax, 1
0x4d83:	cmp	eax, ebp
0x4d85:	je	0x5601


0x4d58:	add	r15, 0x18
0x4d5c:	mov	r13, qword ptr [r15 - 0x18]
0x4d60:	add	r12d, 1
0x4d64:	test	r13, r13
0x4d67:	je	0x4c8f


0x4d8b:	mov	rax, qword ptr [rsp + 8]
0x4d90:	mov	rcx, qword ptr [rsp + 0x10]
0x4d95:	mov	r15, qword ptr [rax + rcx + 8]
0x4d9a:	test	r15, r15
0x4d9d:	je	0x5601


0x4da3:	lea	rdi, [rip + 0x679a]
0x4daa:	movsxd	r12, r12d
0x4dad:	mov	ecx, 4
0x4db2:	mov	rsi, r13
0x4db5:	lea	rax, [rip + 0x20b0c4]
0x4dbc:	add	ebp, 1
0x4dbf:	lea	rdx, [r12 + r12*2]
0x4dc3:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4dc3:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4dc5:	lea	rbx, [rax + rdx*8]
0x4dc9:	seta	al
0x4dcc:	sbb	al, 0
0x4dce:	test	al, al
0x4dd0:	je	0x4fc0


0x4fc0:	mov	esi, 0xff
0x4fc5:	mov	rdi, r15
0x4fc8:	call	0x3860


0x4dd6:	lea	rdi, [rip + 0x676b]
0x4ddd:	mov	ecx, 5
0x4de2:	mov	rsi, r13
0x4de5:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4de5:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4de7:	seta	al
0x4dea:	sbb	al, 0
0x4dec:	test	al, al
0x4dee:	je	0x4fc0


0x4df4:	movzx	r13d, byte ptr [r15]
0x4df8:	test	r13b, r13b
0x4dfb:	je	0x4e58


0x4e58:	movzx	r12d, r13b
0x4e5c:	mov	rax, qword ptr [rbx + 0x10]
0x4e60:	mov	rcx, qword ptr [rsp + 0x18]
0x4e65:	mov	byte ptr [rcx + rax + 0x11], r12b
0x4e6a:	mov	rax, qword ptr [rsp + 0x20]
0x4e6f:	mov	byte ptr [rax], 1
0x4e72:	jmp	0x4be4


0x4dfd:	movzx	edx, byte ptr [r15 + 1]
0x4e02:	test	dl, dl
0x4e04:	je	0x4e58


0x4e06:	lea	rsi, [rip + 0x6740]
0x4e0d:	mov	rdi, r15
0x4e10:	mov	byte ptr [rsp], dl
0x4e13:	xor	r12d, r12d
0x4e16:	call	0x2620


0x4e1b:	test	eax, eax
0x4e1d:	je	0x4e5c


0x4e5c:	mov	rax, qword ptr [rbx + 0x10]
0x4e60:	mov	rcx, qword ptr [rsp + 0x18]
0x4e65:	mov	byte ptr [rcx + rax + 0x11], r12b
0x4e6a:	mov	rax, qword ptr [rsp + 0x20]
0x4e6f:	mov	byte ptr [rax], 1
0x4e72:	jmp	0x4be4


0x4e1f:	lea	rsi, [rip + 0x672a]
0x4e26:	mov	rdi, r15
0x4e29:	call	0x2620


0x4e2e:	test	eax, eax
0x4e30:	je	0x4e5c


0x4e32:	cmp	r13b, 0x5e
0x4e36:	jne	0x4fc0


0x4e3c:	movzx	edx, byte ptr [rsp]
0x4e40:	cmp	dl, 0x3f
0x4e43:	je	0x551f


0x551f:	mov	r12d, 0x7f
0x5525:	jmp	0x4e5c


0x4e49:	mov	r12, rdx
0x4e4c:	and	r12d, 0x9f
0x4e53:	jmp	0x4e5c


0x3498:	test	eax, eax
0x349a:	jne	0x3480


0x349c:	movsxd	rbp, ebp
0x349f:	lea	rax, [rip + 0x20c5ba]
0x34a6:	lea	rdx, [rbp + rbp*2]
0x34ab:	pop	rbx
0x34ac:	mov	eax, dword ptr [rax + rdx*8 + 8]
0x34b0:	pop	rbp
0x34b1:	pop	r12
0x34b3:	ret	


0x3480:	add	rbx, 0x18
0x3484:	mov	rsi, qword ptr [rbx - 0x18]
0x3488:	add	ebp, 1
0x348b:	test	rsi, rsi
0x348e:	je	0x34b8


0x34b8:	pop	rbx
0x34b9:	mov	eax, 0xffffffff
0x34be:	pop	rbp
0x34bf:	pop	r12
0x34c1:	ret	


0x5393:	cmp	eax, -1
0x5396:	mov	r12d, eax
0x5399:	je	0x53f5


0x53f5:	call	0x2450


0x539b:	cmp	byte ptr [rsp + 0x3e], 0
0x53a0:	jne	0x4be4


0x53a6:	mov	rbx, qword ptr [rsp + 0x18]
0x53ab:	mov	esi, eax
0x53ad:	mov	rdi, rbx
0x53b0:	call	0x2730


0x2730:	jmp	qword ptr [rip + 0x20e85a]




0x4ed8:	mov	rdi, qword ptr [rsp + 0x18]
0x4edd:	mov	esi, eax
0x4edf:	call	0x24e0


0x24e0:	jmp	qword ptr [rip + 0x20e982]




0x4ce7:	mov	rdi, qword ptr [rsp + 0x18]
0x4cec:	mov	esi, eax
0x4cee:	add	ebp, 1
0x4cf1:	call	0x2730


0x5a83:	test	rax, rax
0x5a86:	je	0x5add


0x5add:	mov	qword ptr [rip + 0x20b734], rbx
0x5ae4:	mov	qword ptr [rip + 0x20b5d5], rbx
0x5aeb:	pop	rbx
0x5aec:	ret	


0x5a88:	lea	r8, [rax + 1]
0x5a8c:	mov	rdx, r8
0x5a8f:	sub	rdx, rbx
0x5a92:	cmp	rdx, 6
0x5a96:	jle	0x5add


0x5a98:	lea	rsi, [rax - 6]
0x5a9c:	lea	rdi, [rip + 0x8065]
0x5aa3:	mov	ecx, 7
0x5aa8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5aa8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5aaa:	seta	dl
0x5aad:	sbb	dl, 0
0x5ab0:	test	dl, dl
0x5ab2:	jne	0x5add


0x5ab4:	lea	rdi, [rip + 0x8055]
0x5abb:	mov	ecx, 3
0x5ac0:	mov	rsi, r8
0x5ac3:	mov	rbx, r8
0x5ac6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5ac6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5ac8:	seta	dl
0x5acb:	sbb	dl, 0
0x5ace:	test	dl, dl
0x5ad0:	jne	0x5add


0x5ad2:	lea	rbx, [rax + 4]
0x5ad6:	mov	qword ptr [rip + 0x20b5c3], rbx
0x5add:	mov	qword ptr [rip + 0x20b734], rbx
0x5ae4:	mov	qword ptr [rip + 0x20b5d5], rbx
0x5aeb:	pop	rbx
0x5aec:	ret	


0x5b0a:	call	0x2440


0x3636:	add	dword ptr [rip + 0x20dbc0], ebx
0x363c:	mov	rax, qword ptr [rsp + 0x28]
0x3641:	xor	rax, qword ptr fs:[0x28]
0x364a:	jne	0x36ac


0x364c:	add	rsp, 0xe0
0x3653:	pop	rbx
0x3654:	ret	


0x36ac:	call	0x2520


0x8fd0:	call	0x2450


0x72fd:	mov	qword ptr [rip + 0x209d7c], rbx
0x7304:	pop	rbx
0x7305:	mov	dword ptr [rip + 0x209d69], 1
0x730f:	pop	rbp
0x7310:	pop	r12
0x7312:	ret	


0x72d7:	mov	qword ptr [rip + 0x209dae], 0x100
0x72e2:	mov	qword ptr [rip + 0x209daf], rbx
0x72e9:	lea	rbx, [rip + 0x209da0]
0x72f0:	cmp	r12, rbx
0x72f3:	je	0x7304


0x7e4d:	xor	eax, eax
0x7e4f:	pop	rbx
0x7e50:	ret	


0x72bc:	cmp	rbx, rbp
0x72bf:	jne	0x72b0


0x72b0:	mov	rdi, qword ptr [rbx]
0x72b3:	add	rbx, 0x10
0x72b7:	call	0x2430


0x77dc:	lea	rsi, [rip + 0x6818]
0x77e3:	xor	edi, edi
0x77e5:	mov	edx, 5
0x77ea:	call	0x24f0


0x78f1:	jmp	0x77dc


0x970f:	test	rax, rax
0x9712:	je	0x9395


0x9718:	mov	r15, rax
0x971b:	mov	byte ptr [r15 + r14], 0
0x9720:	call	0x2450


0x9d7c:	test	rax, rax
0x9d7f:	je	0x9e7b


0x9e7b:	call	0x2450


0x9d85:	mov	r15, rax
0x9d88:	jmp	0x9cbf


0xa200:	test	rax, rax
0xa203:	je	0x9e7b


0xa209:	mov	r15, rax
0xa20c:	cmp	r15, qword ptr [rbp - 0x3e8]
0xa213:	mov	byte ptr [r15 + r14], 0
0xa218:	je	0xa231


0x94ba:	test	rax, rax
0x94bd:	mov	rcx, qword ptr [rbp - 0x3c8]
0x94c4:	mov	r8, qword ptr [rbp - 0x3d0]
0x94cb:	je	0x9e7b


0x94d1:	mov	r15, rax
0x94d4:	lea	rdi, [r15 + rbx]
0x94d8:	mov	rdx, rcx
0x94db:	mov	rsi, r8
0x94de:	call	0x2640


0xa22a:	test	rax, rax
0xa22d:	cmovne	r15, rax
0xa231:	mov	rax, qword ptr [rbp - 0x420]
0xa238:	test	rax, rax
0xa23b:	je	0xa245


0xaffe:	mov	rdx, qword ptr [r15 + 8]
0xb002:	mov	r11, qword ptr [rsp + 0x30]
0xb007:	mov	rcx, rax
0xb00a:	mov	r8, qword ptr [rsp + 0x38]
0xb00f:	mov	r10, qword ptr [rsp + 0x40]
0xb014:	mov	r9, qword ptr [rsp + 0x48]
0xb019:	test	rcx, rcx
0xb01c:	je	0xb237


0xb237:	mov	rcx, rdx
0xb23a:	jmp	0xb1db


0xb022:	cmp	qword ptr [rsp + 8], rdx
0xb027:	mov	rax, qword ptr [r15]
0xb02a:	je	0xb1f0


0xb1f0:	mov	rsi, qword ptr [rsp + 8]
0xb1f5:	shl	rax, 5
0xb1f9:	mov	rdi, rcx
0xb1fc:	mov	rdx, rax
0xb1ff:	mov	qword ptr [rsp + 0x48], r9
0xb204:	mov	qword ptr [rsp + 0x40], r10
0xb209:	mov	qword ptr [rsp + 0x38], r8
0xb20e:	mov	qword ptr [rsp + 0x30], r11
0xb213:	call	0x2640


0xb030:	mov	qword ptr [r15 + 8], rcx
0xb034:	jmp	0xaa4d


0xaa4d:	mov	rdx, rax
0xaa50:	shl	rdx, 5
0xaa54:	add	rdx, rcx
0xaa57:	cmp	rax, rbx
0xaa5a:	ja	0xaa76


0xb218:	mov	r9, qword ptr [rsp + 0x48]
0xb21d:	mov	rcx, rax
0xb220:	mov	r10, qword ptr [rsp + 0x40]
0xb225:	mov	rax, qword ptr [r15]
0xb228:	mov	r8, qword ptr [rsp + 0x38]
0xb22d:	mov	r11, qword ptr [rsp + 0x30]
0xb232:	jmp	0xb030


0xa966:	mov	rdx, qword ptr [r15 + 8]
0xa96a:	mov	r8, qword ptr [rsp + 0x30]
0xa96f:	mov	rcx, rax
0xa972:	mov	r10, qword ptr [rsp + 0x38]
0xa977:	mov	r9, qword ptr [rsp + 0x40]
0xa97c:	test	rcx, rcx
0xa97f:	je	0xb237


0xa985:	cmp	qword ptr [rsp + 8], rdx
0xa98a:	mov	rax, qword ptr [r15]
0xa98d:	je	0xb14b


0xb14b:	mov	rsi, qword ptr [rsp + 8]
0xb150:	shl	rax, 5
0xb154:	mov	rdi, rcx
0xb157:	mov	rdx, rax
0xb15a:	mov	qword ptr [rsp + 0x40], r9
0xb15f:	mov	qword ptr [rsp + 0x38], r10
0xb164:	mov	qword ptr [rsp + 0x30], r8
0xb169:	call	0x2640


0xa993:	mov	qword ptr [r15 + 8], rcx
0xa997:	mov	rdx, rax
0xa99a:	shl	rdx, 5
0xa99e:	add	rdx, rcx
0xa9a1:	cmp	rax, rbx
0xa9a4:	ja	0xa9c6


0xb16e:	mov	r9, qword ptr [rsp + 0x40]
0xb173:	mov	rcx, rax
0xb176:	mov	r10, qword ptr [rsp + 0x38]
0xb17b:	mov	rax, qword ptr [r15]
0xb17e:	mov	r8, qword ptr [rsp + 0x30]
0xb183:	jmp	0xa993


0x7e36:	test	rax, rax
0x7e39:	jne	0x7e40


0x7e3b:	test	rbx, rbx
0x7e3e:	jne	0x7e51


0x7e40:	pop	rbx
0x7e41:	ret	


0x7e51:	call	0x8010


0x8da5:	mov	ebx, eax
0x8da7:	jmp	0x8d40


0x8d40:	mov	rcx, qword ptr [rsp + 0x18]
0x8d45:	xor	rcx, qword ptr fs:[0x28]
0x8d4e:	mov	eax, ebx
0x8d50:	jne	0x8ead


0x8d56:	add	rsp, 0x50
0x8d5a:	pop	rbx
0x8d5b:	pop	rbp
0x8d5c:	pop	r12
0x8d5e:	ret	


0x8ead:	call	0x2520


0x8d39:	mov	ebx, eax
0x8d3b:	nop	dword ptr [rax + rax]
0x8d40:	mov	rcx, qword ptr [rsp + 0x18]
0x8d45:	xor	rcx, qword ptr fs:[0x28]
0x8d4e:	mov	eax, ebx
0x8d50:	jne	0x8ead


0x8dfc:	mov	ebx, eax
0x8dfe:	jmp	0x8d40


0x8ce5:	test	eax, eax
0x8ce7:	mov	ebx, eax
0x8ce9:	js	0x8e78


0x8e78:	call	0x2450


0x8cef:	mov	dword ptr [rip + 0x20865f], 1
0x8cf9:	jmp	0x8d40


0x8e0c:	test	eax, eax
0x8e0e:	mov	ebx, eax
0x8e10:	js	0x8d40


0x8e16:	cmp	dword ptr [rip + 0x20853b], -1
0x8e1d:	jne	0x8d40


0x8e23:	xor	eax, eax
0x8e25:	mov	esi, 1
0x8e2a:	mov	edi, ebx
0x8e2c:	call	0x2490


0x8e31:	test	eax, eax
0x8e33:	js	0x8e51


0x8e51:	call	0x2450


0x8e35:	or	eax, 1
0x8e38:	mov	esi, 2
0x8e3d:	mov	edi, ebx
0x8e3f:	mov	edx, eax
0x8e41:	xor	eax, eax
0x8e43:	call	0x2490


0x8e48:	cmp	eax, -1
0x8e4b:	jne	0x8d40


0x8ec3:	mov	ebx, eax
0x8ec5:	jmp	0x8d40


0x919e:	test	eax, eax
0x91a0:	je	0x91aa


0x91a2:	test	dword ptr [rbx], 0x100
0x91a8:	jne	0x91b8


0x91b8:	mov	rdi, rbx
0x91bb:	mov	edx, 1
0x91c0:	xor	esi, esi
0x91c2:	call	0x91d0


0x280a:	lea	rsi, [rip + 0xb830]
0x2811:	mov	edi, 6
0x2816:	call	0x26b0


0x36ce:	test	eax, eax
0x36d0:	je	0x36ea


0x36ea:	mov	rdi, rbp
0x36ed:	call	0x26c0


0x36d2:	mov	rdi, rbp
0x36d5:	call	0x24a0


0x26c0:	jmp	qword ptr [rip + 0x20e892]




0x36da:	mov	rdi, rbp
0x36dd:	mov	r12d, eax
0x36e0:	call	0x26c0


0x39b8:	test	eax, eax
0x39ba:	jne	0x39c6


0x39bc:	movzx	eax, word ptr [rsp + 0x12]
0x39c1:	test	ax, ax
0x39c4:	jne	0x39f8


0x39c6:	lea	rdi, [rip + 0x794c]
0x39cd:	call	0x2410


0x39f8:	mov	rcx, qword ptr [rsp + 0x18]
0x39fd:	xor	rcx, qword ptr fs:[0x28]
0x3a06:	jne	0x3a24


0x2410:	jmp	qword ptr [rip + 0x20e9ea]


0x3a08:	add	rsp, 0x28
0x3a0c:	ret	


0x3a24:	call	0x2520




0x530a:	mov	rdi, qword ptr [rsp + 0x18]
0x530f:	xor	esi, esi
0x5311:	mov	dword ptr [rip + 0x20bee9], eax
0x5317:	call	0x36c0


0x523c:	mov	rsi, qword ptr [rsp + 0x30]
0x5241:	xor	edi, edi
0x5243:	mov	dword ptr [rip + 0x20bfb7], eax
0x5249:	mov	dword ptr [rip + 0x20bfa9], 0
0x5253:	call	0x3b20


0x3a66:	test	eax, eax
0x3a68:	je	0x3a7e


0x3a7e:	test	r12d, r12d
0x3a81:	js	0x3a88


0x3a6a:	call	0x2450


0x3a88:	test	ebp, ebp
0x3a8a:	js	0x3a91


0x3a83:	mov	word ptr [rsp], r12w
0x3a88:	test	ebp, ebp
0x3a8a:	js	0x3a91


0x3a91:	xor	edi, edi
0x3a93:	xor	eax, eax
0x3a95:	mov	rdx, rbx
0x3a98:	mov	esi, 0x5414
0x3a9d:	call	0x25d0


0x3a8c:	mov	word ptr [rsp + 2], bp
0x3a91:	xor	edi, edi
0x3a93:	xor	eax, eax
0x3a95:	mov	rdx, rbx
0x3a98:	mov	esi, 0x5414
0x3a9d:	call	0x25d0


0x3aa2:	test	eax, eax
0x3aa4:	jne	0x3af0


0x3aa6:	mov	rax, qword ptr [rsp + 8]
0x3aab:	xor	rax, qword ptr fs:[0x28]
0x3ab4:	jne	0x3aeb


0x3af0:	mov	rdx, r13
0x3af3:	mov	esi, 3
0x3af8:	xor	edi, edi
0x3afa:	call	0x75b0


0x3ab6:	add	rsp, 0x10
0x3aba:	pop	rbx
0x3abb:	pop	rbp
0x3abc:	pop	r12
0x3abe:	pop	r13
0x3ac0:	pop	r14
0x3ac2:	ret	


0x3aeb:	call	0x2520


0x3b4c:	test	eax, eax
0x3b4e:	je	0x3b80


0x3b80:	test	bl, bl
0x3b82:	movzx	edx, word ptr [rsp + 2]
0x3b87:	movzx	esi, word ptr [rsp]
0x3b8b:	je	0x3ba0


0x3b50:	call	0x2450


0x3ba0:	lea	rdi, [rip + 0x777a]
0x3ba7:	xor	eax, eax
0x3ba9:	call	0x3520


0x3b8d:	lea	rdi, [rip + 0x7794]
0x3b94:	xor	eax, eax
0x3b96:	call	0x3520


0x3b9b:	jmp	0x3b65


0x3b65:	mov	rax, qword ptr [rsp + 8]
0x3b6a:	xor	rax, qword ptr fs:[0x28]
0x3b73:	jne	0x3be3


0x3b75:	add	rsp, 0x10
0x3b79:	pop	rbx
0x3b7a:	pop	rbp
0x3b7b:	pop	r12
0x3b7d:	ret	


0x3be3:	call	0x2520


0x3bae:	mov	dword ptr [rip + 0x20d644], 0
0x3bb8:	jmp	0x3b65


0x5258:	jmp	0x4be4


0x5a2a:	cmp	ebp, eax
0x5a2c:	mov	ebx, eax
0x5a2e:	je	0x5a59


0x5a59:	add	rsp, 8
0x5a5d:	mov	eax, ebx
0x5a5f:	pop	rbx
0x5a60:	pop	rbp
0x5a61:	pop	r12
0x5a63:	pop	r13
0x5a65:	ret	


0x5a30:	test	eax, eax
0x5a32:	js	0x5a59


0x5a34:	mov	esi, ebp
0x5a36:	mov	edi, eax
0x5a38:	call	0x2550


0x2550:	jmp	qword ptr [rip + 0x20e94a]




0x5c71:	cmp	r15d, 0xa
0x5c75:	mov	qword ptr [rsp + 0x58], rax
0x5c7a:	ja	0x6e2f


0x5c80:	lea	rcx, [rip + 0x7ef9]
0x5c87:	mov	edx, r15d
0x5c8a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x5c8e:	add	rax, rcx
0x5c91:	jmp	rax


0x6e2f:	call	0x2440


0x3b55:	cmp	dword ptr [rax], 0x16
0x3b58:	mov	r12, rax
0x3b5b:	jne	0x3bba


0x3b5d:	test	bl, bl
0x3b5f:	je	0x3be8


0x3bba:	mov	rdx, rbp
0x3bbd:	mov	esi, 3
0x3bc2:	xor	edi, edi
0x3bc4:	call	0x75b0


0x3be8:	mov	rdx, rbp
0x3beb:	mov	esi, 3
0x3bf0:	xor	edi, edi
0x3bf2:	call	0x75b0


0x3a6f:	cmp	dword ptr [rax], 0x16
0x3a72:	mov	r14, rax
0x3a75:	jne	0x3ac3


0x3a77:	mov	qword ptr [rbx], 0
0x3a7e:	test	r12d, r12d
0x3a81:	js	0x3a88


0x3ac3:	mov	rdx, r13
0x3ac6:	mov	esi, 3
0x3acb:	xor	edi, edi
0x3acd:	call	0x75b0


0x8e56:	mov	r12d, dword ptr [rax]
0x8e59:	mov	rbp, rax
0x8e5c:	mov	edi, ebx
0x8e5e:	call	0x25e0


0x25e0:	jmp	qword ptr [rip + 0x20e902]




0x8e7d:	cmp	dword ptr [rax], 0x16
0x8e80:	jne	0x8cef


0x8e86:	xor	esi, esi
0x8e88:	xor	eax, eax
0x8e8a:	mov	edx, r12d
0x8e8d:	mov	edi, ebp
0x8e8f:	call	0x2490


0x8e94:	test	eax, eax
0x8e96:	mov	ebx, eax
0x8e98:	js	0x8d40


0x8e9e:	mov	dword ptr [rip + 0x2084b0], 0xffffffff
0x8ea8:	jmp	0x8e23


0x9e80:	mov	qword ptr [rbp - 0x3c8], rax
0x9e87:	nop	word ptr [rax + rax]
0x9e90:	mov	rdi, r15
0x9e93:	call	0x2430


0x9e98:	jmp	0x93b3


0x93b3:	mov	rax, qword ptr [rbp - 0x420]
0x93ba:	test	rax, rax
0x93bd:	je	0x93c7


0x93c7:	mov	rax, qword ptr [rbp - 0x408]
0x93ce:	mov	rdi, qword ptr [rbp - 0x2b8]
0x93d5:	add	rax, 0x20
0x93d9:	cmp	rdi, rax
0x93dc:	je	0x93e3


0x93bf:	mov	rdi, rax
0x93c2:	call	0x2430


0x93e3:	mov	rax, qword ptr [rbp - 0x410]
0x93ea:	mov	rdi, qword ptr [rbp - 0x3a8]
0x93f1:	add	rax, 0x10
0x93f5:	cmp	rdi, rax
0x93f8:	je	0x93ff


0x93de:	call	0x2430


0x93ff:	mov	rax, qword ptr [rbp - 0x3c8]
0x9406:	xor	r15d, r15d
0x9409:	mov	dword ptr [rax], 0xc
0x940f:	mov	rdi, qword ptr [rbp - 0x38]
0x9413:	xor	rdi, qword ptr fs:[0x28]
0x941c:	mov	rax, r15
0x941f:	jne	0xa327


0x93fa:	call	0x2430


0x9725:	mov	qword ptr [rbp - 0x3c8], rax
0x972c:	mov	eax, dword ptr [rax]
0x972e:	mov	qword ptr [rbp - 0x3f8], rbx
0x9735:	mov	dword ptr [rbp - 0x424], eax
0x973b:	nop	dword ptr [rax + rax]
0x9740:	mov	rax, qword ptr [rbp - 0x3c8]
0x9747:	mov	rbx, r12
0x974a:	mov	r10d, 0x7fffffff
0x9750:	sub	rbx, r14
0x9753:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0x975d:	cmp	rbx, 0x7fffffff
0x9764:	mov	dword ptr [rax], 0
0x976a:	mov	eax, dword ptr [rbp - 0x3d0]
0x9770:	cmovbe	r10, rbx
0x9774:	cmp	eax, 0x11
0x9777:	ja	0xa156


0x977d:	lea	rsi, [rip + 0x4df8]
0x9784:	movsxd	rax, dword ptr [rsi + rax*4]
0x9788:	add	rax, rsi
0x978b:	jmp	rax


0x8fd5:	mov	dword ptr [rax], 0x4b
0x8fdb:	mov	eax, 0xffffffff
0x8fe0:	jmp	0x8fb2


0x53fa:	mov	r12, rax
0x53fd:	lea	rax, [rsp + 0x48]
0x5402:	mov	r13, rbx
0x5405:	xor	r15d, r15d
0x5408:	mov	qword ptr [rsp], rax
0x540c:	mov	rsi, qword ptr [rsp]
0x5410:	mov	dword ptr [r12], 0
0x5418:	mov	edx, 0x10
0x541d:	mov	rdi, r13
0x5420:	call	0x2740


0x2740:	jmp	qword ptr [rip + 0x20e852]




0x939a:	mov	qword ptr [rbp - 0x3c8], rax
0x93a1:	cmp	r15, qword ptr [rbp - 0x3e8]
0x93a8:	je	0x93b3


0x93aa:	test	r15, r15
0x93ad:	jne	0x9e90


0x9e90:	mov	rdi, r15
0x9e93:	call	0x2430


0xa19d:	xor	r15d, r15d
0xa1a0:	mov	dword ptr [rax], 0x16
0xa1a6:	jmp	0x940f


0x9cfd:	mov	qword ptr [rbp - 0x3c8], rax
0x9d04:	jmp	0x93c7


0xb061:	mov	dword ptr [rax], 0xc
0xb067:	mov	eax, 0xffffffff
0xb06c:	jmp	0xa5f2


0xa5f2:	add	rsp, 0x58
0xa5f6:	pop	rbx
0xa5f7:	pop	rbp
0xa5f8:	pop	r12
0xa5fa:	pop	r13
0xa5fc:	pop	r14
0xa5fe:	pop	r15
0xa600:	ret	


0xadc3:	mov	dword ptr [rax], 0x16
0xadc9:	mov	eax, 0xffffffff
0xadce:	jmp	0xa5f2


0x81c6:	mov	edx, ebp
0x81c8:	mov	dword ptr [rax], 0
0x81ce:	mov	rsi, rbx
0x81d1:	mov	rdi, r12
0x81d4:	mov	r13, rax
0x81d7:	call	0x2630


0x2630:	jmp	qword ptr [rip + 0x20e8da]




0x8888:	mov	dword ptr [rax], 0
0x888e:	mov	r12, rax
0x8891:	movzx	ebx, byte ptr [rbp]
0x8895:	call	0x27b0


0x27b0:	jmp	qword ptr [rip + 0x20e81a]




0x6e61:	mov	r13, rax
0x6e64:	mov	eax, dword ptr [rax]
0x6e66:	test	r15d, r15d
0x6e69:	mov	rbx, qword ptr [rip + 0x20a210]
0x6e70:	mov	dword ptr [rsp + 0x18], eax
0x6e74:	js	0x6fe1


0x6fe1:	call	0x2440


0x6e7a:	cmp	dword ptr [rip + 0x20a1f7], r15d
0x6e81:	jg	0x6ee5


0x6e83:	cmp	r15d, 0x7fffffff
0x6e8a:	je	0x6fe6


0x6ee5:	mov	eax, dword ptr [rbp + 4]
0x6ee8:	shl	r15, 4
0x6eec:	sub	rsp, 8
0x6ef0:	add	rbx, r15
0x6ef3:	lea	r15, [rbp + 8]
0x6ef7:	mov	r8d, dword ptr [rbp]
0x6efb:	mov	r11, qword ptr [rbx]
0x6efe:	mov	r12, qword ptr [rbx + 8]
0x6f02:	mov	rcx, r14
0x6f05:	or	eax, 1
0x6f08:	mov	dword ptr [rsp + 0x24], eax
0x6f0c:	push	qword ptr [rbp + 0x30]
0x6f0f:	mov	r9d, eax
0x6f12:	push	qword ptr [rbp + 0x28]
0x6f15:	push	r15
0x6f17:	mov	rsi, r11
0x6f1a:	mov	rdx, qword ptr [rsp + 0x28]
0x6f1f:	mov	rdi, r12
0x6f22:	mov	qword ptr [rsp + 0x30], r11
0x6f27:	call	0x5c00


0x6fe6:	call	0x8010


0x6e90:	lea	r12d, [r15 + 1]
0x6e94:	lea	rax, [rip + 0x20a1f5]
0x6e9b:	movsxd	rsi, r12d
0x6e9e:	shl	rsi, 4
0x6ea2:	cmp	rbx, rax
0x6ea5:	je	0x6fc0


0x6fc0:	xor	edi, edi
0x6fc2:	call	0x7e20


0x6eab:	mov	rdi, rbx
0x6eae:	call	0x7e20


0x6eb3:	mov	rbx, rax
0x6eb6:	mov	qword ptr [rip + 0x20a1c3], rax
0x6ebd:	movsxd	rdi, dword ptr [rip + 0x20a1b4]
0x6ec4:	mov	edx, r12d
0x6ec7:	xor	esi, esi
0x6ec9:	sub	edx, edi
0x6ecb:	shl	rdi, 4
0x6ecf:	movsxd	rdx, edx
0x6ed2:	add	rdi, rbx
0x6ed5:	shl	rdx, 4
0x6ed9:	call	0x25c0


0x25c0:	jmp	qword ptr [rip + 0x20e912]




0x6fc7:	movdqa	xmm0, xmmword ptr [rip + 0x20a0c1]
0x6fcf:	mov	rbx, rax
0x6fd2:	mov	qword ptr [rip + 0x20a0a7], rax
0x6fd9:	movups	xmmword ptr [rax], xmm0
0x6fdc:	jmp	0x6ebd


0x6ebd:	movsxd	rdi, dword ptr [rip + 0x20a1b4]
0x6ec4:	mov	edx, r12d
0x6ec7:	xor	esi, esi
0x6ec9:	sub	edx, edi
0x6ecb:	shl	rdi, 4
0x6ecf:	movsxd	rdx, edx
0x6ed2:	add	rdi, rbx
0x6ed5:	shl	rdx, 4
0x6ed9:	call	0x25c0


0x6ffc:	mov	r12d, dword ptr [rax]
0x6fff:	mov	rbp, rax
0x7002:	lea	rax, [rip + 0x20a317]
0x7009:	test	rbx, rbx
0x700c:	mov	esi, 0x38
0x7011:	cmove	rbx, rax
0x7015:	mov	rdi, rbx
0x7018:	call	0x7fc0


0x7132:	mov	r12d, dword ptr [rax]
0x7135:	mov	rbp, rax
0x7138:	lea	rax, [rbx + 8]
0x713c:	sub	rsp, 8
0x7140:	mov	r9d, dword ptr [rbx + 4]
0x7144:	push	qword ptr [rbx + 0x30]
0x7147:	mov	r8d, dword ptr [rbx]
0x714a:	push	qword ptr [rbx + 0x28]
0x714d:	mov	rdx, r15
0x7150:	push	rax
0x7151:	mov	rcx, qword ptr [rsp + 0x28]
0x7156:	mov	rsi, r14
0x7159:	mov	rdi, r13
0x715c:	call	0x5c00


0x71af:	test	r12, r12
0x71b2:	mov	r13, rax
0x71b5:	mov	eax, dword ptr [rax]
0x71b7:	sete	bpl
0x71bb:	or	ebp, dword ptr [rbx + 4]
0x71be:	lea	r10, [rbx + 8]
0x71c2:	sub	rsp, 8
0x71c6:	mov	r8d, dword ptr [rbx]
0x71c9:	mov	rcx, r15
0x71cc:	mov	dword ptr [rsp + 0x14], eax
0x71d0:	push	qword ptr [rbx + 0x30]
0x71d3:	mov	rdx, r14
0x71d6:	push	qword ptr [rbx + 0x28]
0x71d9:	push	r10
0x71db:	xor	esi, esi
0x71dd:	mov	r9d, ebp
0x71e0:	xor	edi, edi
0x71e2:	mov	qword ptr [rsp + 0x40], r10
0x71e7:	call	0x5c00


0x9f4e:	test	rax, rax
0x9f51:	mov	rcx, rax
0x9f54:	movzx	edx, byte ptr [rbp - 0x3c8]
0x9f5b:	je	0x9395


0x9f61:	test	r14, r14
0x9f64:	je	0xa100


0xa100:	mov	r15, rcx
0xa103:	jmp	0x971b


0x9f6a:	test	dl, dl
0x9f6c:	je	0xa100


0x9f72:	mov	rsi, r15
0x9f75:	mov	rdx, r14
0x9f78:	mov	rdi, rax
0x9f7b:	call	0x2640


0x9f80:	mov	r15, rax
0x9f83:	jmp	0x971b


0x9fde:	test	rax, rax
0x9fe1:	mov	rcx, rax
0x9fe4:	movzx	edx, byte ptr [rbp - 0x3c8]
0x9feb:	je	0x9395


0x9ff1:	test	r14, r14
0x9ff4:	je	0xa134


0xa134:	mov	r15, rcx
0xa137:	jmp	0x9cbf


0x9ffa:	test	dl, dl
0x9ffc:	je	0xa134


0xa002:	mov	rsi, r15
0xa005:	mov	rdx, r14
0xa008:	mov	rdi, rax
0xa00b:	call	0x2640


0xa010:	mov	r15, rax
0xa013:	jmp	0x9cbf


0xa294:	test	rax, rax
0xa297:	mov	rcx, rax
0xa29a:	je	0x9395


0xa2a0:	test	r14, r14
0xa2a3:	je	0xa310


0xa310:	mov	r15, rcx
0xa313:	jmp	0xa20c


0xa2a5:	test	r13b, r13b
0xa2a8:	je	0xa310


0xa2aa:	mov	rsi, r15
0xa2ad:	mov	rdx, r14
0xa2b0:	mov	rdi, rax
0xa2b3:	call	0x2640


0xa2b8:	mov	r15, rax
0xa2bb:	jmp	0xa20c


0x9df4:	test	rax, rax
0x9df7:	mov	r9, rax
0x9dfa:	mov	rcx, qword ptr [rbp - 0x3c8]
0x9e01:	movzx	edx, byte ptr [rbp - 0x3d0]
0x9e08:	mov	r8, qword ptr [rbp - 0x3e0]
0x9e0f:	je	0x9395


0x9e15:	test	rbx, rbx
0x9e18:	je	0xa020


0xa020:	mov	r15, r9
0xa023:	jmp	0x94d4


0x9e1e:	test	dl, dl
0x9e20:	je	0xa020


0x9e26:	mov	rsi, r15
0x9e29:	mov	rdx, rbx
0x9e2c:	mov	rdi, rax
0x9e2f:	mov	qword ptr [rbp - 0x3d0], r8
0x9e36:	mov	qword ptr [rbp - 0x3c8], rcx
0x9e3d:	call	0x2640


0x9e42:	mov	rcx, qword ptr [rbp - 0x3c8]
0x9e49:	mov	r15, rax
0x9e4c:	mov	r8, qword ptr [rbp - 0x3d0]
0x9e53:	jmp	0x94d4


0x9307:	test	rax, rax
0x930a:	mov	qword ptr [rbp - 0x3d8], rax
0x9311:	je	0x9cf8


0x9317:	mov	r8, qword ptr [rbp - 0x3c8]
0x931e:	mov	qword ptr [rbp - 0x420], rax
0x9325:	xor	r12d, r12d
0x9328:	cmp	qword ptr [rbp - 0x3e8], 0
0x9330:	je	0x933c


0xb1b6:	mov	rdx, qword ptr [rsp + 8]
0xb1bb:	mov	rcx, rax
0xb1be:	mov	r9, qword ptr [rsp + 0x48]
0xb1c3:	mov	r10, qword ptr [rsp + 0x40]
0xb1c8:	mov	r8, qword ptr [rsp + 0x38]
0xb1cd:	mov	r11, qword ptr [rsp + 0x30]
0xb1d2:	jmp	0xb019


0xb019:	test	rcx, rcx
0xb01c:	je	0xb237


0xb079:	mov	rdx, qword ptr [rsp + 8]
0xb07e:	mov	rcx, rax
0xb081:	mov	r9, qword ptr [rsp + 0x40]
0xb086:	mov	r10, qword ptr [rsp + 0x38]
0xb08b:	mov	r8, qword ptr [rsp + 0x30]
0xb090:	jmp	0xa97c


0xa97c:	test	rcx, rcx
0xa97f:	je	0xb237


0x7dc9:	test	rax, rax
0x7dcc:	jne	0x7dd3


0x7dce:	test	rbx, rbx
0x7dd1:	jne	0x7dd5


0x7dd3:	pop	rbx
0x7dd4:	ret	


0x7dd5:	call	0x8010


0x7f79:	mov	rdx, rbx
0x7f7c:	xor	esi, esi
0x7f7e:	mov	rdi, rax
0x7f81:	pop	rbx
0x7f82:	jmp	0x25c0


0x7fd4:	add	rsp, 8
0x7fd8:	mov	rdx, rbx
0x7fdb:	mov	rsi, rbp
0x7fde:	pop	rbx
0x7fdf:	pop	rbp
0x7fe0:	mov	rdi, rax
0x7fe3:	jmp	0x2640


0x7ff9:	mov	rdi, rbx
0x7ffc:	lea	rsi, [rax + 1]
0x8000:	pop	rbx
0x8001:	jmp	0x7fc0


0x77ef:	lea	rdx, [rip + 0x6b2a]
0x77f6:	mov	rcx, rax
0x77f9:	mov	r8d, 0x7e3
0x77ff:	mov	esi, 1
0x7804:	mov	rdi, rbp
0x7807:	xor	eax, eax
0x7809:	call	0x2780


0x780e:	lea	rsi, [rip + 0x6873]
0x7815:	xor	edi, edi
0x7817:	mov	edx, 5
0x781c:	call	0x24f0


0x7821:	mov	rsi, rbp
0x7824:	mov	rdi, rax
0x7827:	call	0x2600


0x782c:	cmp	r12, 9
0x7830:	ja	0x7b70


0x7836:	lea	rdx, [rip + 0x6aa7]
0x783d:	movsxd	rax, dword ptr [rdx + r12*4]
0x7841:	add	rax, rdx
0x7844:	jmp	rax


0x7b70:	mov	r10, qword ptr [rbx + 0x40]
0x7b74:	mov	r9, qword ptr [rbx + 0x38]
0x7b78:	mov	edx, 5
0x7b7d:	mov	rax, qword ptr [rbx + 0x10]
0x7b81:	mov	r8, qword ptr [rbx + 8]
0x7b85:	lea	rsi, [rip + 0x66d4]
0x7b8c:	mov	r13, qword ptr [rbx + 0x30]
0x7b90:	mov	r12, qword ptr [rbx + 0x28]
0x7b94:	mov	r15, qword ptr [rbx + 0x20]
0x7b98:	mov	r14, qword ptr [rbx + 0x18]
0x7b9c:	mov	qword ptr [rsp + 0x18], r10
0x7ba1:	mov	qword ptr [rsp + 0x10], r9
0x7ba6:	mov	qword ptr [rsp], rax
0x7baa:	mov	qword ptr [rsp + 8], r8
0x7baf:	mov	rbx, qword ptr [rbx]
0x7bb2:	jmp	0x7942


0x7942:	xor	edi, edi
0x7944:	call	0x24f0


0x7949:	mov	r10, qword ptr [rsp + 0x18]
0x794e:	push	r10
0x7950:	jmp	0x7894


0x7894:	mov	r9, qword ptr [rsp + 0x18]
0x7899:	mov	rdx, rax
0x789c:	mov	rcx, rbx
0x789f:	mov	esi, 1
0x78a4:	mov	rdi, rbp
0x78a7:	xor	eax, eax
0x78a9:	push	r9
0x78ab:	push	r13
0x78ad:	push	r12
0x78af:	push	r15
0x78b1:	push	r14
0x78b3:	mov	r9, qword ptr [rsp + 0x30]
0x78b8:	mov	r8, qword ptr [rsp + 0x38]
0x78bd:	call	0x2780


0x78c2:	add	rsp, 0x30
0x78c6:	add	rsp, 0x28
0x78ca:	pop	rbx
0x78cb:	pop	rbp
0x78cc:	pop	r12
0x78ce:	pop	r13
0x78d0:	pop	r14
0x78d2:	pop	r15
0x78d4:	ret	


0x7d06:	mov	rax, qword ptr [rsp + 0x78]
0x7d0b:	xor	rax, qword ptr fs:[0x28]
0x7d14:	jne	0x7d20


0x7d16:	add	rsp, 0xb8
0x7d1d:	pop	rbx
0x7d1e:	pop	rbp
0x7d1f:	ret	


0x7d20:	call	0x2520


0x7c30:	mov	rax, qword ptr [rsp + 0x58]
0x7c35:	xor	rax, qword ptr fs:[0x28]
0x7c3e:	jne	0x7c45


0x7c40:	add	rsp, 0x68
0x7c44:	ret	


0x7c45:	call	0x2520


0x3c6d:	mov	rdi, qword ptr [rip + 0x20d48c]
0x3c74:	mov	rdx, rax
0x3c77:	mov	rcx, rbx
0x3c7a:	mov	esi, 1
0x3c7f:	xor	eax, eax
0x3c81:	call	0x2780


0x3c86:	mov	edi, ebp
0x3c88:	call	0x2760


0x2760:	jmp	qword ptr [rip + 0x20e842]




0x3c9b:	mov	r8, rbx
0x3c9e:	mov	rcx, rbx
0x3ca1:	mov	rdx, rbx
0x3ca4:	mov	rsi, rax
0x3ca7:	mov	edi, 1
0x3cac:	xor	eax, eax
0x3cae:	call	0x26d0


0x26d0:	jmp	qword ptr [rip + 0x20e88a]




0x387f:	sub	rsp, 8
0x3883:	lea	r8, [rip + 0x7a8c]
0x388a:	mov	rcx, rbp
0x388d:	push	0
0x388f:	mov	rdi, rbx
0x3892:	mov	r9, rax
0x3895:	xor	edx, edx
0x3897:	xor	esi, esi
0x3899:	call	0x8050


0x7d54:	lea	rdx, [rip + 0x62fc]
0x7d5b:	mov	rsi, rax
0x7d5e:	mov	edi, 1
0x7d63:	xor	eax, eax
0x7d65:	call	0x26d0


0x8027:	mov	edi, dword ptr [rip + 0x208ff3]
0x802d:	lea	rdx, [rip + 0x5a98]
0x8034:	mov	rcx, rax
0x8037:	xor	esi, esi
0x8039:	xor	eax, eax
0x803b:	call	0x26e0


0x26e0:	jmp	qword ptr [rip + 0x20e882]




0x8f17:	cmp	rax, -3
0x8f1b:	mov	rbp, rax
0x8f1e:	jbe	0x8f40


0x8f40:	mov	rdx, qword ptr [rsp + 8]
0x8f45:	xor	rdx, qword ptr fs:[0x28]
0x8f4e:	mov	rax, rbp
0x8f51:	jne	0x8f5e


0x8f20:	test	r12, r12
0x8f23:	je	0x8f40


0x8f53:	add	rsp, 0x18
0x8f57:	pop	rbx
0x8f58:	pop	rbp
0x8f59:	pop	r12
0x8f5b:	pop	r13
0x8f5d:	ret	


0x8f5e:	call	0x2520


0x8f25:	xor	edi, edi
0x8f27:	call	0x9070


0x8ffc:	mov	ebx, dword ptr [rbp]
0x8fff:	mov	rdi, rbp
0x9002:	mov	r12, rax
0x9005:	call	0x9110


0x281b:	lea	rsi, [rip + 0x8d8e]
0x2822:	lea	rdi, [rip + 0x8c4b]
0x2829:	call	0x24d0


0x24d0:	jmp	qword ptr [rip + 0x20e98a]




0x907b:	mov	rdx, rax
0x907e:	mov	eax, 1
0x9083:	test	rdx, rdx
0x9086:	je	0x90a5


0x90a5:	add	rsp, 8
0x90a9:	ret	


0x9088:	lea	rdi, [rip + 0x54dc]
0x908f:	mov	ecx, 2
0x9094:	mov	rsi, rdx
0x9097:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x9097:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x9099:	seta	cl
0x909c:	sbb	cl, 0
0x909f:	xor	eax, eax
0x90a1:	test	cl, cl
0x90a3:	jne	0x90b0


0x90b0:	lea	rdi, [rip + 0x54b6]
0x90b7:	mov	ecx, 6
0x90bc:	mov	rsi, rdx
0x90bf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x90bf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x90c1:	seta	al
0x90c4:	sbb	al, 0
0x90c6:	test	al, al
0x90c8:	setne	al
0x90cb:	add	rsp, 8
0x90cf:	ret	


0x8f2c:	test	al, al
0x8f2e:	jne	0x8f40


0x8f30:	movzx	eax, byte ptr [r13]
0x8f35:	mov	ebp, 1
0x8f3a:	mov	dword ptr [rbx], eax
0x8f3c:	nop	dword ptr [rax]
0x8f40:	mov	rdx, qword ptr [rsp + 8]
0x8f45:	xor	rdx, qword ptr fs:[0x28]
0x8f4e:	mov	rax, rbp
0x8f51:	jne	0x8f5e


0x90de:	test	rax, rax
0x90e1:	je	0x9100


0x9100:	lea	rax, [rip + 0x546c]
0x9107:	add	rsp, 8
0x910b:	ret	


0x90e3:	cmp	byte ptr [rax], 0
0x90e6:	lea	rdx, [rip + 0x5486]
0x90ed:	cmove	rax, rdx
0x90f1:	add	rsp, 8
0x90f5:	ret	


0x5b20:	movzx	edx, byte ptr [rax]
0x5b23:	and	edx, 0xffffffdf
0x5b26:	cmp	dl, 0x55
0x5b29:	je	0x5ba0


0x5ba0:	movzx	edx, byte ptr [rax + 1]
0x5ba4:	and	edx, 0xffffffdf
0x5ba7:	cmp	dl, 0x54
0x5baa:	jne	0x5b30


0x5b2b:	cmp	dl, 0x47
0x5b2e:	je	0x5b50


0x5bac:	movzx	edx, byte ptr [rax + 2]
0x5bb0:	and	edx, 0xffffffdf
0x5bb3:	cmp	dl, 0x46
0x5bb6:	jne	0x5b30


0x5b30:	lea	rax, [rip + 0x7fec]
0x5b37:	lea	rdx, [rip + 0x7fe7]
0x5b3e:	cmp	ebx, 9
0x5b41:	cmovne	rax, rdx
0x5b45:	add	rsp, 8
0x5b49:	pop	rbx
0x5b4a:	pop	rbp
0x5b4b:	ret	


0x5b50:	movzx	edx, byte ptr [rax + 1]
0x5b54:	and	edx, 0xffffffdf
0x5b57:	cmp	dl, 0x42
0x5b5a:	jne	0x5b30


0x5bbc:	cmp	byte ptr [rax + 3], 0x2d
0x5bc0:	jne	0x5b30


0x5b5c:	cmp	byte ptr [rax + 2], 0x31
0x5b60:	jne	0x5b30


0x5bc6:	cmp	byte ptr [rax + 4], 0x38
0x5bca:	jne	0x5b30


0x5b62:	cmp	byte ptr [rax + 3], 0x38
0x5b66:	jne	0x5b30


0x5bd0:	cmp	byte ptr [rax + 5], 0
0x5bd4:	jne	0x5b30


0x5b68:	cmp	byte ptr [rax + 4], 0x30
0x5b6c:	jne	0x5b30


0x5bda:	cmp	byte ptr [rbp], 0x60
0x5bde:	lea	rax, [rip + 0x7f2f]
0x5be5:	lea	rdx, [rip + 0x7f2c]
0x5bec:	cmovne	rax, rdx
0x5bf0:	add	rsp, 8
0x5bf4:	pop	rbx
0x5bf5:	pop	rbp
0x5bf6:	ret	


0x5b6e:	cmp	byte ptr [rax + 5], 0x33
0x5b72:	jne	0x5b30


0x5b74:	cmp	byte ptr [rax + 6], 0x30
0x5b78:	jne	0x5b30


0x5b7a:	cmp	byte ptr [rax + 7], 0
0x5b7e:	jne	0x5b30


0x5b80:	cmp	byte ptr [rbp], 0x60
0x5b84:	lea	rax, [rip + 0x7f91]
0x5b8b:	lea	rdx, [rip + 0x7f8e]
0x5b92:	cmovne	rax, rdx
0x5b96:	add	rsp, 8
0x5b9a:	pop	rbx
0x5b9b:	pop	rbp
0x5b9c:	ret	


0x9203:	mov	edx, r12d
0x9206:	mov	rsi, rbp
0x9209:	mov	edi, eax
0x920b:	call	0x2590


0x2590:	jmp	qword ptr [rip + 0x20e92a]




0x911c:	test	eax, eax
0x911e:	mov	rdi, rbx
0x9121:	js	0x9177


0x9177:	pop	rbx
0x9178:	pop	rbp
0x9179:	pop	r12
0x917b:	jmp	0x24c0


0x9123:	call	0x2690


0x24c0:	jmp	qword ptr [rip + 0x20e992]




0x9128:	test	eax, eax
0x912a:	jne	0x9158


0x912c:	mov	rdi, rbx
0x912f:	call	0x9190


0x9158:	mov	rdi, rbx
0x915b:	call	0x2650


0x9160:	xor	esi, esi
0x9162:	mov	edx, 1
0x9167:	mov	edi, eax
0x9169:	call	0x2590


0x916e:	cmp	rax, -1
0x9172:	jne	0x912c


0x9174:	mov	rdi, rbx
0x9177:	pop	rbx
0x9178:	pop	rbp
0x9179:	pop	r12
0x917b:	jmp	0x24c0


0x9210:	cmp	rax, -1
0x9214:	je	0x9222


0x9222:	pop	rbx
0x9223:	pop	rbp
0x9224:	pop	r12
0x9226:	ret	


0x9216:	and	dword ptr [rbx], 0xffffffef
0x9219:	mov	qword ptr [rbx + 0x90], rax
0x9220:	xor	eax, eax
0x9222:	pop	rbx
0x9223:	pop	rbp
0x9224:	pop	r12
0x9226:	ret	


0x282e:	lea	rdi, [rip + 0x8c3f]
0x2835:	call	0x24b0


0x24b0:	jmp	qword ptr [rip + 0x20e99a]




0x8040:	call	0x2440


0x7d6a:	lea	rsi, [rip + 0x62fc]
0x7d71:	mov	edx, 5
0x7d76:	xor	edi, edi
0x7d78:	call	0x24f0


0x7d7d:	lea	rcx, [rip + 0x5b84]
0x7d84:	lea	rdx, [rip + 0x36e5]
0x7d8b:	mov	rsi, rax
0x7d8e:	mov	edi, 1
0x7d93:	xor	eax, eax
0x7d95:	call	0x26d0


0x7d9a:	mov	rbx, qword ptr [rip + 0x209307]
0x7da1:	lea	rsi, [rip + 0x64f8]
0x7da8:	xor	edi, edi
0x7daa:	mov	edx, 5
0x7daf:	call	0x24f0


0x7db4:	mov	rsi, rbx
0x7db7:	mov	rdi, rax
0x7dba:	pop	rbx
0x7dbb:	jmp	0x2600


0x3cb3:	mov	rbx, qword ptr [rip + 0x20d3ee]
0x3cba:	lea	rsi, [rip + 0x7d8f]
0x3cc1:	mov	edx, 5
0x3cc6:	xor	edi, edi
0x3cc8:	call	0x24f0


0x3ccd:	mov	rsi, rbx
0x3cd0:	mov	rdi, rax
0x3cd3:	call	0x2600


0x3cd8:	mov	rbx, qword ptr [rip + 0x20d3c9]
0x3cdf:	lea	rsi, [rip + 0x7d9a]
0x3ce6:	mov	edx, 5
0x3ceb:	xor	edi, edi
0x3ced:	call	0x24f0


0x3cf2:	mov	rsi, rbx
0x3cf5:	mov	rdi, rax
0x3cf8:	call	0x2600


0x3cfd:	mov	rbx, qword ptr [rip + 0x20d3a4]
0x3d04:	lea	rsi, [rip + 0x7dc5]
0x3d0b:	mov	edx, 5
0x3d10:	xor	edi, edi
0x3d12:	call	0x24f0


0x3d17:	mov	rsi, rbx
0x3d1a:	mov	rdi, rax
0x3d1d:	call	0x2600


0x3d22:	mov	rbx, qword ptr [rip + 0x20d37f]
0x3d29:	lea	rsi, [rip + 0x7e78]
0x3d30:	mov	edx, 5
0x3d35:	xor	edi, edi
0x3d37:	call	0x24f0


0x3d3c:	mov	rsi, rbx
0x3d3f:	mov	rdi, rax
0x3d42:	call	0x2600


0x3d47:	mov	rbx, qword ptr [rip + 0x20d35a]
0x3d4e:	lea	rsi, [rip + 0x7e83]
0x3d55:	mov	edx, 5
0x3d5a:	xor	edi, edi
0x3d5c:	call	0x24f0


0x3d61:	mov	rsi, rbx
0x3d64:	mov	rdi, rax
0x3d67:	call	0x2600


0x3d6c:	mov	rbx, qword ptr [rip + 0x20d335]
0x3d73:	lea	rsi, [rip + 0x7e96]
0x3d7a:	mov	edx, 5
0x3d7f:	xor	edi, edi
0x3d81:	call	0x24f0


0x3d86:	mov	rsi, rbx
0x3d89:	mov	rdi, rax
0x3d8c:	call	0x2600


0x3d91:	mov	rbx, qword ptr [rip + 0x20d310]
0x3d98:	lea	rsi, [rip + 0x75a3]
0x3d9f:	mov	edx, 5
0x3da4:	xor	edi, edi
0x3da6:	call	0x24f0


0x3dab:	mov	rsi, rbx
0x3dae:	mov	rdi, rax
0x3db1:	call	0x2600


0x3db6:	mov	rbx, qword ptr [rip + 0x20d2eb]
0x3dbd:	lea	rsi, [rip + 0x7edc]
0x3dc4:	mov	edx, 5
0x3dc9:	xor	edi, edi
0x3dcb:	call	0x24f0


0x3dd0:	mov	rsi, rbx
0x3dd3:	mov	rdi, rax
0x3dd6:	call	0x2600


0x3ddb:	mov	rbx, qword ptr [rip + 0x20d2c6]
0x3de2:	lea	rsi, [rip + 0x7eef]
0x3de9:	mov	edx, 5
0x3dee:	xor	edi, edi
0x3df0:	call	0x24f0


0x3df5:	mov	rsi, rbx
0x3df8:	mov	rdi, rax
0x3dfb:	call	0x2600


0x3e00:	mov	rbx, qword ptr [rip + 0x20d2a1]
0x3e07:	lea	rsi, [rip + 0x7f3a]
0x3e0e:	mov	edx, 5
0x3e13:	xor	edi, edi
0x3e15:	call	0x24f0


0x3e1a:	mov	rsi, rbx
0x3e1d:	mov	rdi, rax
0x3e20:	call	0x2600


0x3e25:	mov	rbx, qword ptr [rip + 0x20d27c]
0x3e2c:	lea	rsi, [rip + 0x7f4d]
0x3e33:	mov	edx, 5
0x3e38:	xor	edi, edi
0x3e3a:	call	0x24f0


0x3e3f:	mov	rsi, rbx
0x3e42:	mov	rdi, rax
0x3e45:	call	0x2600


0x3e4a:	mov	rbx, qword ptr [rip + 0x20d257]
0x3e51:	lea	rsi, [rip + 0x7fd0]
0x3e58:	mov	edx, 5
0x3e5d:	xor	edi, edi
0x3e5f:	call	0x24f0


0x3e64:	mov	rsi, rbx
0x3e67:	mov	rdi, rax
0x3e6a:	call	0x2600


0x3e6f:	mov	rbx, qword ptr [rip + 0x20d232]
0x3e76:	lea	rsi, [rip + 0x7feb]
0x3e7d:	mov	edx, 5
0x3e82:	xor	edi, edi
0x3e84:	call	0x24f0


0x3e89:	mov	rsi, rbx
0x3e8c:	mov	rdi, rax
0x3e8f:	call	0x2600


0x3e94:	mov	rbx, qword ptr [rip + 0x20d20d]
0x3e9b:	lea	rsi, [rip + 0x7ff6]
0x3ea2:	mov	edx, 5
0x3ea7:	xor	edi, edi
0x3ea9:	call	0x24f0


0x3eae:	mov	rsi, rbx
0x3eb1:	mov	rdi, rax
0x3eb4:	call	0x2600


0x3eb9:	mov	rbx, qword ptr [rip + 0x20d1e8]
0x3ec0:	lea	rsi, [rip + 0x8009]
0x3ec7:	mov	edx, 5
0x3ecc:	xor	edi, edi
0x3ece:	call	0x24f0


0x3ed3:	mov	rsi, rbx
0x3ed6:	mov	rdi, rax
0x3ed9:	call	0x2600


0x3ede:	mov	rbx, qword ptr [rip + 0x20d1c3]
0x3ee5:	lea	rsi, [rip + 0x808c]
0x3eec:	mov	edx, 5
0x3ef1:	xor	edi, edi
0x3ef3:	call	0x24f0


0x3ef8:	mov	rsi, rbx
0x3efb:	mov	rdi, rax
0x3efe:	call	0x2600


0x3f03:	mov	rbx, qword ptr [rip + 0x20d19e]
0x3f0a:	lea	rsi, [rip + 0x80a7]
0x3f11:	mov	edx, 5
0x3f16:	xor	edi, edi
0x3f18:	call	0x24f0


0x3f1d:	mov	rsi, rbx
0x3f20:	mov	rdi, rax
0x3f23:	call	0x2600


0x3f28:	mov	rbx, qword ptr [rip + 0x20d179]
0x3f2f:	lea	rsi, [rip + 0x80ba]
0x3f36:	mov	edx, 5
0x3f3b:	xor	edi, edi
0x3f3d:	call	0x24f0


0x3f42:	mov	rsi, rbx
0x3f45:	mov	rdi, rax
0x3f48:	call	0x2600


0x3f4d:	mov	rbx, qword ptr [rip + 0x20d154]
0x3f54:	lea	rsi, [rip + 0x80e5]
0x3f5b:	mov	edx, 5
0x3f60:	xor	edi, edi
0x3f62:	call	0x24f0


0x3f67:	mov	rsi, rbx
0x3f6a:	mov	rdi, rax
0x3f6d:	call	0x2600


0x3f72:	cmp	dword ptr [rip + 0x20d097], 1
0x3f79:	mov	edx, 5
0x3f7e:	je	0x4a9b


0x4a9b:	lea	rsi, [rip + 0x6c78]
0x4aa2:	xor	edi, edi
0x4aa4:	call	0x24f0


0x3f84:	lea	rsi, [rip + 0x7850]
0x3f8b:	xor	edi, edi
0x3f8d:	call	0x24f0


0x3f92:	mov	rbx, rax
0x3f95:	lea	rsi, [rip + 0x810c]
0x3f9c:	xor	edi, edi
0x3f9e:	mov	edx, 5
0x3fa3:	call	0x24f0


0x3fa8:	mov	rdx, rbx
0x3fab:	mov	rsi, rax
0x3fae:	mov	edi, 1
0x3fb3:	xor	eax, eax
0x3fb5:	call	0x26d0


0x3fba:	mov	rbx, qword ptr [rip + 0x20d0e7]
0x3fc1:	lea	rsi, [rip + 0x8138]
0x3fc8:	mov	edx, 5
0x3fcd:	xor	edi, edi
0x3fcf:	call	0x24f0


0x3fd4:	mov	rsi, rbx
0x3fd7:	mov	rdi, rax
0x3fda:	call	0x2600


0x3fdf:	mov	rbx, qword ptr [rip + 0x20d0c2]
0x3fe6:	lea	rsi, [rip + 0x8143]
0x3fed:	mov	edx, 5
0x3ff2:	xor	edi, edi
0x3ff4:	call	0x24f0


0x3ff9:	mov	rsi, rbx
0x3ffc:	mov	rdi, rax
0x3fff:	call	0x2600


0x4004:	mov	rbx, qword ptr [rip + 0x20d09d]
0x400b:	lea	rsi, [rip + 0x8146]
0x4012:	mov	edx, 5
0x4017:	xor	edi, edi
0x4019:	call	0x24f0


0x401e:	mov	rsi, rbx
0x4021:	mov	rdi, rax
0x4024:	call	0x2600


0x4029:	mov	rbx, qword ptr [rip + 0x20d078]
0x4030:	lea	rsi, [rip + 0x81a1]
0x4037:	mov	edx, 5
0x403c:	xor	edi, edi
0x403e:	call	0x24f0


0x4043:	mov	rsi, rbx
0x4046:	mov	rdi, rax
0x4049:	call	0x2600


0x404e:	mov	rbx, qword ptr [rip + 0x20d053]
0x4055:	lea	rsi, [rip + 0x820c]
0x405c:	mov	edx, 5
0x4061:	xor	edi, edi
0x4063:	call	0x24f0


0x4068:	mov	rsi, rbx
0x406b:	mov	rdi, rax
0x406e:	call	0x2600


0x4073:	mov	rbx, qword ptr [rip + 0x20d02e]
0x407a:	lea	rsi, [rip + 0x825f]
0x4081:	mov	edx, 5
0x4086:	xor	edi, edi
0x4088:	call	0x24f0


0x408d:	mov	rsi, rbx
0x4090:	mov	rdi, rax
0x4093:	call	0x2600


0x4098:	mov	rbx, qword ptr [rip + 0x20d009]
0x409f:	lea	rsi, [rip + 0x82aa]
0x40a6:	mov	edx, 5
0x40ab:	xor	edi, edi
0x40ad:	call	0x24f0


0x40b2:	mov	rsi, rbx
0x40b5:	mov	rdi, rax
0x40b8:	call	0x2600


0x40bd:	mov	rbx, qword ptr [rip + 0x20cfe4]
0x40c4:	lea	rsi, [rip + 0x82b5]
0x40cb:	mov	edx, 5
0x40d0:	xor	edi, edi
0x40d2:	call	0x24f0


0x40d7:	mov	rsi, rbx
0x40da:	mov	rdi, rax
0x40dd:	call	0x2600


0x40e2:	mov	rbx, qword ptr [rip + 0x20cfbf]
0x40e9:	lea	rsi, [rip + 0x82d0]
0x40f0:	mov	edx, 5
0x40f5:	xor	edi, edi
0x40f7:	call	0x24f0


0x40fc:	mov	rsi, rbx
0x40ff:	mov	rdi, rax
0x4102:	call	0x2600


0x4107:	mov	rbx, qword ptr [rip + 0x20cf9a]
0x410e:	lea	rsi, [rip + 0x83e3]
0x4115:	mov	edx, 5
0x411a:	xor	edi, edi
0x411c:	call	0x24f0


0x4121:	mov	rsi, rbx
0x4124:	mov	rdi, rax
0x4127:	call	0x2600


0x412c:	mov	rbx, qword ptr [rip + 0x20cf75]
0x4133:	lea	rsi, [rip + 0x83f6]
0x413a:	mov	edx, 5
0x413f:	xor	edi, edi
0x4141:	call	0x24f0


0x4146:	mov	rsi, rbx
0x4149:	mov	rdi, rax
0x414c:	call	0x2600


0x4151:	mov	rbx, qword ptr [rip + 0x20cf50]
0x4158:	lea	rsi, [rip + 0x84d9]
0x415f:	mov	edx, 5
0x4164:	xor	edi, edi
0x4166:	call	0x24f0


0x416b:	mov	rsi, rbx
0x416e:	mov	rdi, rax
0x4171:	call	0x2600


0x4176:	mov	rbx, qword ptr [rip + 0x20cf2b]
0x417d:	lea	rsi, [rip + 0x8504]
0x4184:	mov	edx, 5
0x4189:	xor	edi, edi
0x418b:	call	0x24f0


0x4190:	mov	rsi, rbx
0x4193:	mov	rdi, rax
0x4196:	call	0x2600


0x419b:	mov	rbx, qword ptr [rip + 0x20cf06]
0x41a2:	lea	rsi, [rip + 0x857f]
0x41a9:	mov	edx, 5
0x41ae:	xor	edi, edi
0x41b0:	call	0x24f0


0x41b5:	mov	rsi, rbx
0x41b8:	mov	rdi, rax
0x41bb:	call	0x2600


0x41c0:	mov	rbx, qword ptr [rip + 0x20cee1]
0x41c7:	lea	rsi, [rip + 0x859a]
0x41ce:	mov	edx, 5
0x41d3:	xor	edi, edi
0x41d5:	call	0x24f0


0x41da:	mov	rsi, rbx
0x41dd:	mov	rdi, rax
0x41e0:	call	0x2600


0x41e5:	mov	rbx, qword ptr [rip + 0x20cebc]
0x41ec:	lea	rsi, [rip + 0x85b5]
0x41f3:	mov	edx, 5
0x41f8:	xor	edi, edi
0x41fa:	call	0x24f0


0x41ff:	mov	rsi, rbx
0x4202:	mov	rdi, rax
0x4205:	call	0x2600


0x420a:	mov	rbx, qword ptr [rip + 0x20ce97]
0x4211:	lea	rsi, [rip + 0x85e0]
0x4218:	mov	edx, 5
0x421d:	xor	edi, edi
0x421f:	call	0x24f0


0x4224:	mov	rsi, rbx
0x4227:	mov	rdi, rax
0x422a:	call	0x2600


0x422f:	mov	rbx, qword ptr [rip + 0x20ce72]
0x4236:	lea	rsi, [rip + 0x711b]
0x423d:	mov	edx, 5
0x4242:	xor	edi, edi
0x4244:	call	0x24f0


0x4249:	mov	rsi, rbx
0x424c:	mov	rdi, rax
0x424f:	call	0x2600


0x4254:	mov	rbx, qword ptr [rip + 0x20ce4d]
0x425b:	lea	rsi, [rip + 0x8666]
0x4262:	mov	edx, 5
0x4267:	xor	edi, edi
0x4269:	call	0x24f0


0x426e:	mov	rsi, rbx
0x4271:	mov	rdi, rax
0x4274:	call	0x2600


0x4279:	mov	rbx, qword ptr [rip + 0x20ce28]
0x4280:	lea	rsi, [rip + 0x8679]
0x4287:	mov	edx, 5
0x428c:	xor	edi, edi
0x428e:	call	0x24f0


0x4293:	mov	rsi, rbx
0x4296:	mov	rdi, rax
0x4299:	call	0x2600


0x429e:	mov	rbx, qword ptr [rip + 0x20ce03]
0x42a5:	lea	rsi, [rip + 0x8694]
0x42ac:	xor	edi, edi
0x42ae:	mov	edx, 5
0x42b3:	call	0x24f0


0x42b8:	mov	rsi, rbx
0x42bb:	mov	rdi, rax
0x42be:	call	0x2600


0x42c3:	mov	rbx, qword ptr [rip + 0x20cdde]
0x42ca:	lea	rsi, [rip + 0x86a7]
0x42d1:	mov	edx, 5
0x42d6:	xor	edi, edi
0x42d8:	call	0x24f0


0x42dd:	mov	rsi, rbx
0x42e0:	mov	rdi, rax
0x42e3:	call	0x2600


0x42e8:	mov	rbx, qword ptr [rip + 0x20cdb9]
0x42ef:	lea	rsi, [rip + 0x86ba]
0x42f6:	mov	edx, 5
0x42fb:	xor	edi, edi
0x42fd:	call	0x24f0


0x4302:	mov	rsi, rbx
0x4305:	mov	rdi, rax
0x4308:	call	0x2600


0x430d:	mov	rbx, qword ptr [rip + 0x20cd94]
0x4314:	lea	rsi, [rip + 0x86cd]
0x431b:	mov	edx, 5
0x4320:	xor	edi, edi
0x4322:	call	0x24f0


0x4327:	mov	rsi, rbx
0x432a:	mov	rdi, rax
0x432d:	call	0x2600


0x4332:	mov	rbx, qword ptr [rip + 0x20cd6f]
0x4339:	lea	rsi, [rip + 0x86f8]
0x4340:	mov	edx, 5
0x4345:	xor	edi, edi
0x4347:	call	0x24f0


0x434c:	mov	rsi, rbx
0x434f:	mov	rdi, rax
0x4352:	call	0x2600


0x4357:	mov	rbx, qword ptr [rip + 0x20cd4a]
0x435e:	lea	rsi, [rip + 0x8723]
0x4365:	mov	edx, 5
0x436a:	xor	edi, edi
0x436c:	call	0x24f0


0x4371:	mov	rsi, rbx
0x4374:	mov	rdi, rax
0x4377:	call	0x2600


0x437c:	mov	rbx, qword ptr [rip + 0x20cd25]
0x4383:	lea	rsi, [rip + 0x873e]
0x438a:	mov	edx, 5
0x438f:	xor	edi, edi
0x4391:	call	0x24f0


0x4396:	mov	rsi, rbx
0x4399:	mov	rdi, rax
0x439c:	call	0x2600


0x43a1:	mov	rbx, qword ptr [rip + 0x20cd00]
0x43a8:	lea	rsi, [rip + 0x8759]
0x43af:	mov	edx, 5
0x43b4:	xor	edi, edi
0x43b6:	call	0x24f0


0x43bb:	mov	rsi, rbx
0x43be:	mov	rdi, rax
0x43c1:	call	0x2600


0x43c6:	mov	rbx, qword ptr [rip + 0x20ccdb]
0x43cd:	lea	rsi, [rip + 0x876c]
0x43d4:	mov	edx, 5
0x43d9:	xor	edi, edi
0x43db:	call	0x24f0


0x43e0:	mov	rsi, rbx
0x43e3:	mov	rdi, rax
0x43e6:	call	0x2600


0x43eb:	mov	rbx, qword ptr [rip + 0x20ccb6]
0x43f2:	lea	rsi, [rip + 0x878f]
0x43f9:	mov	edx, 5
0x43fe:	xor	edi, edi
0x4400:	call	0x24f0


0x4405:	mov	rsi, rbx
0x4408:	mov	rdi, rax
0x440b:	call	0x2600


0x4410:	mov	rbx, qword ptr [rip + 0x20cc91]
0x4417:	lea	rsi, [rip + 0x8792]
0x441e:	mov	edx, 5
0x4423:	xor	edi, edi
0x4425:	call	0x24f0


0x442a:	mov	rsi, rbx
0x442d:	mov	rdi, rax
0x4430:	call	0x2600


0x4435:	mov	rbx, qword ptr [rip + 0x20cc6c]
0x443c:	lea	rsi, [rip + 0x87e5]
0x4443:	mov	edx, 5
0x4448:	xor	edi, edi
0x444a:	call	0x24f0


0x444f:	mov	rsi, rbx
0x4452:	mov	rdi, rax
0x4455:	call	0x2600


0x445a:	mov	rbx, qword ptr [rip + 0x20cc47]
0x4461:	lea	rsi, [rip + 0x87f8]
0x4468:	mov	edx, 5
0x446d:	xor	edi, edi
0x446f:	call	0x24f0


0x4474:	mov	rsi, rbx
0x4477:	mov	rdi, rax
0x447a:	call	0x2600


0x447f:	mov	rbx, qword ptr [rip + 0x20cc22]
0x4486:	lea	rsi, [rip + 0x882b]
0x448d:	mov	edx, 5
0x4492:	xor	edi, edi
0x4494:	call	0x24f0


0x4499:	mov	rsi, rbx
0x449c:	mov	rdi, rax
0x449f:	call	0x2600


0x44a4:	mov	rbx, qword ptr [rip + 0x20cbfd]
0x44ab:	lea	rsi, [rip + 0x889e]
0x44b2:	mov	edx, 5
0x44b7:	xor	edi, edi
0x44b9:	call	0x24f0


0x44be:	mov	rsi, rbx
0x44c1:	mov	rdi, rax
0x44c4:	call	0x2600


0x44c9:	mov	rbx, qword ptr [rip + 0x20cbd8]
0x44d0:	lea	rsi, [rip + 0x88c1]
0x44d7:	mov	edx, 5
0x44dc:	xor	edi, edi
0x44de:	call	0x24f0


0x44e3:	mov	rsi, rbx
0x44e6:	mov	rdi, rax
0x44e9:	call	0x2600


0x44ee:	mov	rbx, qword ptr [rip + 0x20cbb3]
0x44f5:	lea	rsi, [rip + 0x88c4]
0x44fc:	mov	edx, 5
0x4501:	xor	edi, edi
0x4503:	call	0x24f0


0x4508:	mov	rsi, rbx
0x450b:	mov	rdi, rax
0x450e:	call	0x2600


0x4513:	mov	rbx, qword ptr [rip + 0x20cb8e]
0x451a:	lea	rsi, [rip + 0x88c7]
0x4521:	mov	edx, 5
0x4526:	xor	edi, edi
0x4528:	call	0x24f0


0x452d:	mov	rsi, rbx
0x4530:	mov	rdi, rax
0x4533:	call	0x2600


0x4538:	mov	rbx, qword ptr [rip + 0x20cb69]
0x453f:	lea	rsi, [rip + 0x8902]
0x4546:	mov	edx, 5
0x454b:	xor	edi, edi
0x454d:	call	0x24f0


0x4552:	mov	rsi, rbx
0x4555:	mov	rdi, rax
0x4558:	call	0x2600


0x455d:	mov	rbx, qword ptr [rip + 0x20cb44]
0x4564:	lea	rsi, [rip + 0x8905]
0x456b:	mov	edx, 5
0x4570:	xor	edi, edi
0x4572:	call	0x24f0


0x4577:	mov	rsi, rbx
0x457a:	mov	rdi, rax
0x457d:	call	0x2600


0x4582:	mov	rbx, qword ptr [rip + 0x20cb1f]
0x4589:	lea	rsi, [rip + 0x8928]
0x4590:	mov	edx, 5
0x4595:	xor	edi, edi
0x4597:	call	0x24f0


0x459c:	mov	rsi, rbx
0x459f:	mov	rdi, rax
0x45a2:	call	0x2600


0x45a7:	mov	rbx, qword ptr [rip + 0x20cafa]
0x45ae:	lea	rsi, [rip + 0x894b]
0x45b5:	mov	edx, 5
0x45ba:	xor	edi, edi
0x45bc:	call	0x24f0


0x45c1:	mov	rsi, rbx
0x45c4:	mov	rdi, rax
0x45c7:	call	0x2600


0x45cc:	mov	rbx, qword ptr [rip + 0x20cad5]
0x45d3:	lea	rsi, [rip + 0x896e]
0x45da:	mov	edx, 5
0x45df:	xor	edi, edi
0x45e1:	call	0x24f0


0x45e6:	mov	rsi, rbx
0x45e9:	mov	rdi, rax
0x45ec:	call	0x2600


0x45f1:	lea	rsi, [rip + 0x8978]
0x45f8:	xor	edi, edi
0x45fa:	mov	edx, 5
0x45ff:	call	0x24f0


0x4604:	lea	rdx, [rip + 0x6d60]
0x460b:	mov	rsi, rax
0x460e:	mov	edi, 1
0x4613:	xor	eax, eax
0x4615:	call	0x26d0


0x461a:	mov	rbx, qword ptr [rip + 0x20ca87]
0x4621:	lea	rsi, [rip + 0x89b0]
0x4628:	mov	edx, 5
0x462d:	xor	edi, edi
0x462f:	call	0x24f0


0x4634:	mov	rsi, rbx
0x4637:	mov	rdi, rax
0x463a:	call	0x2600


0x463f:	mov	rbx, qword ptr [rip + 0x20ca62]
0x4646:	lea	rsi, [rip + 0x8a23]
0x464d:	mov	edx, 5
0x4652:	xor	edi, edi
0x4654:	call	0x24f0


0x4659:	mov	rsi, rbx
0x465c:	mov	rdi, rax
0x465f:	call	0x2600


0x4664:	mov	rbx, qword ptr [rip + 0x20ca3d]
0x466b:	lea	rsi, [rip + 0x8a26]
0x4672:	mov	edx, 5
0x4677:	xor	edi, edi
0x4679:	call	0x24f0


0x467e:	mov	rsi, rbx
0x4681:	mov	rdi, rax
0x4684:	call	0x2600


0x4689:	mov	rbx, qword ptr [rip + 0x20ca18]
0x4690:	lea	rsi, [rip + 0x8a51]
0x4697:	mov	edx, 5
0x469c:	xor	edi, edi
0x469e:	call	0x24f0


0x46a3:	mov	rsi, rbx
0x46a6:	mov	rdi, rax
0x46a9:	call	0x2600


0x46ae:	mov	rbx, qword ptr [rip + 0x20c9f3]
0x46b5:	lea	rsi, [rip + 0x6cca]
0x46bc:	mov	edx, 5
0x46c1:	xor	edi, edi
0x46c3:	call	0x24f0


0x46c8:	mov	rsi, rbx
0x46cb:	mov	rdi, rax
0x46ce:	call	0x2600


0x46d3:	mov	rbx, qword ptr [rip + 0x20c9ce]
0x46da:	lea	rsi, [rip + 0x8a4f]
0x46e1:	mov	edx, 5
0x46e6:	xor	edi, edi
0x46e8:	call	0x24f0


0x46ed:	mov	rsi, rbx
0x46f0:	mov	rdi, rax
0x46f3:	call	0x2600


0x46f8:	mov	rbx, qword ptr [rip + 0x20c9a9]
0x46ff:	lea	rsi, [rip + 0x8a52]
0x4706:	mov	edx, 5
0x470b:	xor	edi, edi
0x470d:	call	0x24f0


0x4712:	mov	rsi, rbx
0x4715:	mov	rdi, rax
0x4718:	call	0x2600


0x471d:	mov	rbx, qword ptr [rip + 0x20c984]
0x4724:	lea	rsi, [rip + 0x8a75]
0x472b:	mov	edx, 5
0x4730:	xor	edi, edi
0x4732:	call	0x24f0


0x4737:	mov	rsi, rbx
0x473a:	mov	rdi, rax
0x473d:	call	0x2600


0x4742:	lea	rsi, [rip + 0x6c55]
0x4749:	xor	edi, edi
0x474b:	mov	edx, 5
0x4750:	call	0x24f0


0x4755:	lea	rdx, [rip + 0x6c5f]
0x475c:	mov	rsi, rax
0x475f:	mov	edi, 1
0x4764:	xor	eax, eax
0x4766:	call	0x26d0


0x476b:	lea	rsi, [rip + 0x8ade]
0x4772:	xor	edi, edi
0x4774:	mov	edx, 5
0x4779:	call	0x24f0


0x477e:	lea	rdx, [rip + 0x6c4b]
0x4785:	mov	rsi, rax
0x4788:	mov	edi, 1
0x478d:	xor	eax, eax
0x478f:	call	0x26d0


0x4794:	mov	rbx, qword ptr [rip + 0x20c90d]
0x479b:	lea	rsi, [rip + 0x8afe]
0x47a2:	mov	edx, 5
0x47a7:	xor	edi, edi
0x47a9:	call	0x24f0


0x47ae:	mov	rsi, rbx
0x47b1:	mov	rdi, rax
0x47b4:	call	0x2600


0x47b9:	mov	rbx, qword ptr [rip + 0x20c8e8]
0x47c0:	lea	rsi, [rip + 0x8b01]
0x47c7:	mov	edx, 5
0x47cc:	xor	edi, edi
0x47ce:	call	0x24f0


0x47d3:	mov	rsi, rbx
0x47d6:	mov	rdi, rax
0x47d9:	call	0x2600


0x47de:	mov	rbx, qword ptr [rip + 0x20c8c3]
0x47e5:	lea	rsi, [rip + 0x8b74]
0x47ec:	mov	edx, 5
0x47f1:	xor	edi, edi
0x47f3:	call	0x24f0


0x47f8:	mov	rsi, rbx
0x47fb:	mov	rdi, rax
0x47fe:	call	0x2600


0x4803:	mov	rbx, qword ptr [rip + 0x20c89e]
0x480a:	lea	rsi, [rip + 0x8b7f]
0x4811:	mov	edx, 5
0x4816:	xor	edi, edi
0x4818:	call	0x24f0


0x481d:	mov	rsi, rbx
0x4820:	mov	rdi, rax
0x4823:	call	0x2600


0x4828:	lea	rsi, [rip + 0x8bc9]
0x482f:	xor	edi, edi
0x4831:	mov	edx, 5
0x4836:	call	0x24f0


0x483b:	lea	rcx, [rip + 0x8bf6]
0x4842:	lea	rdx, [rip + 0x6ba3]
0x4849:	mov	rsi, rax
0x484c:	mov	edi, 1
0x4851:	xor	eax, eax
0x4853:	call	0x26d0


0x4858:	mov	rbx, qword ptr [rip + 0x20c849]
0x485f:	lea	rsi, [rip + 0x8c02]
0x4866:	mov	edx, 5
0x486b:	xor	edi, edi
0x486d:	call	0x24f0


0x4872:	mov	rsi, rbx
0x4875:	mov	rdi, rax
0x4878:	call	0x2600


0x487d:	lea	rsi, [rip + 0x8cb4]
0x4884:	xor	edi, edi
0x4886:	mov	edx, 5
0x488b:	call	0x24f0


0x4890:	lea	rdx, [rip + 0x8d79]
0x4897:	mov	rsi, rax
0x489a:	mov	edi, 1
0x489f:	xor	eax, eax
0x48a1:	call	0x26d0


0x48a6:	lea	rsi, [rip + 0x8d83]
0x48ad:	xor	edi, edi
0x48af:	mov	edx, 5
0x48b4:	call	0x24f0


0x48b9:	lea	rcx, [rip + 0x8eb0]
0x48c0:	lea	r8, [rip + 0x8e69]
0x48c7:	lea	rdx, [rip + 0x8ee2]
0x48ce:	mov	rsi, rax
0x48d1:	mov	edi, 1
0x48d6:	xor	eax, eax
0x48d8:	call	0x26d0


0x48dd:	mov	rbx, qword ptr [rip + 0x20c7c4]
0x48e4:	lea	rsi, [rip + 0x8f05]
0x48eb:	mov	edx, 5
0x48f0:	xor	edi, edi
0x48f2:	call	0x24f0


0x48f7:	mov	rsi, rbx
0x48fa:	mov	rdi, rax
0x48fd:	lea	rbx, [rip + 0x6a39]
0x4904:	call	0x2600


0x4909:	lea	rax, [rip + 0x6aea]
0x4910:	lea	rcx, [rip + 0x6b24]
0x4917:	mov	qword ptr [rsp + 0x60], 0
0x4920:	mov	qword ptr [rsp + 0x68], 0
0x4929:	mov	rdx, rsp
0x492c:	mov	qword ptr [rsp], rax
0x4930:	lea	rax, [rip + 0x6ac5]
0x4937:	mov	qword ptr [rsp + 0x30], rcx
0x493c:	lea	rcx, [rip + 0x6b02]
0x4943:	mov	qword ptr [rsp + 8], rax
0x4948:	lea	rax, [rip + 0x6b25]
0x494f:	mov	qword ptr [rsp + 0x40], rcx
0x4954:	lea	rcx, [rip + 0x6af4]
0x495b:	mov	qword ptr [rsp + 0x10], rax
0x4960:	lea	rax, [rip + 0x6aa5]
0x4967:	mov	qword ptr [rsp + 0x50], rcx
0x496c:	mov	qword ptr [rsp + 0x18], rax
0x4971:	lea	rax, [rip + 0x6aaa]
0x4978:	mov	qword ptr [rsp + 0x20], rax
0x497d:	lea	rax, [rip + 0x6aa8]
0x4984:	mov	qword ptr [rsp + 0x28], rax
0x4989:	mov	qword ptr [rsp + 0x38], rax
0x498e:	mov	qword ptr [rsp + 0x48], rax
0x4993:	mov	qword ptr [rsp + 0x58], rax
0x4998:	nop	dword ptr [rax + rax]
0x49a0:	add	rdx, 0x10
0x49a4:	mov	rdi, qword ptr [rdx]
0x49a7:	test	rdi, rdi
0x49aa:	je	0x49bf


0x49bf:	mov	r12, qword ptr [rdx + 8]
0x49c3:	xor	edi, edi
0x49c5:	mov	edx, 5
0x49ca:	lea	rsi, [rip + 0x6a88]
0x49d1:	test	r12, r12
0x49d4:	je	0x4ae2


0x49ac:	mov	ecx, 5
0x49b1:	mov	rsi, rbx
0x49b4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4ae2:	call	0x24f0


0x49da:	call	0x24f0


0x49b4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x49b6:	seta	al
0x49b9:	sbb	al, 0
0x49bb:	test	al, al
0x49bd:	jne	0x49a0


0x49a0:	add	rdx, 0x10
0x49a4:	mov	rdi, qword ptr [rdx]
0x49a7:	test	rdi, rdi
0x49aa:	je	0x49bf


0x49df:	lea	rcx, [rip + 0x8f22]
0x49e6:	lea	rdx, [rip + 0x6a83]
0x49ed:	mov	rsi, rax
0x49f0:	mov	edi, 1
0x49f5:	xor	eax, eax
0x49f7:	call	0x26d0


0x49fc:	xor	esi, esi
0x49fe:	mov	edi, 5
0x4a03:	call	0x26b0


0x4a08:	test	rax, rax
0x4a0b:	je	0x4a29


0x4a29:	lea	rsi, [rip + 0x6a52]
0x4a30:	xor	edi, edi
0x4a32:	mov	edx, 5
0x4a37:	call	0x24f0


0x4a0d:	lea	rsi, [rip + 0x6a6a]
0x4a14:	mov	edx, 3
0x4a19:	mov	rdi, rax
0x4a1c:	call	0x2460


0x2460:	jmp	qword ptr [rip + 0x20e9c2]




0x4a3c:	lea	rcx, [rip + 0x68fa]
0x4a43:	lea	rdx, [rip + 0x8ebe]
0x4a4a:	mov	rsi, rax
0x4a4d:	mov	edi, 1
0x4a52:	xor	eax, eax
0x4a54:	call	0x26d0


0x4a59:	cmp	r12, rbx
0x4a5c:	lea	rcx, [rip + 0x69b3]
0x4a63:	lea	rbx, [rip + 0x95d7]
0x4a6a:	cmove	rbx, rcx
0x4a6e:	lea	rsi, [rip + 0x8f03]
0x4a75:	xor	edi, edi
0x4a77:	mov	edx, 5
0x4a7c:	call	0x24f0


0x4a81:	mov	rcx, rbx
0x4a84:	mov	rsi, rax
0x4a87:	mov	rdx, r12
0x4a8a:	mov	edi, 1
0x4a8f:	xor	eax, eax
0x4a91:	call	0x26d0


0x4a96:	jmp	0x3c86


0x4ae7:	lea	rcx, [rip + 0x8e1a]
0x4aee:	lea	rdx, [rip + 0x697b]
0x4af5:	mov	rsi, rax
0x4af8:	mov	edi, 1
0x4afd:	xor	eax, eax
0x4aff:	call	0x26d0


0x4b04:	xor	esi, esi
0x4b06:	mov	edi, 5
0x4b0b:	call	0x26b0


0x4b10:	test	rax, rax
0x4b13:	je	0x4b2d


0x4b2d:	lea	rsi, [rip + 0x694e]
0x4b34:	mov	edx, 5
0x4b39:	xor	edi, edi
0x4b3b:	lea	r12, [rip + 0x67fb]
0x4b42:	lea	rbx, [rip + 0x68cd]
0x4b49:	call	0x24f0


0x4b15:	lea	rsi, [rip + 0x6962]
0x4b1c:	mov	edx, 3
0x4b21:	mov	rdi, rax
0x4b24:	call	0x2460


0x4b4e:	lea	rcx, [rip + 0x67e8]
0x4b55:	lea	rdx, [rip + 0x8dac]
0x4b5c:	mov	rsi, rax
0x4b5f:	mov	edi, 1
0x4b64:	xor	eax, eax
0x4b66:	call	0x26d0


0x4b6b:	jmp	0x4a6e


0x4a6e:	lea	rsi, [rip + 0x8f03]
0x4a75:	xor	edi, edi
0x4a77:	mov	edx, 5
0x4a7c:	call	0x24f0


0x4aa9:	mov	rbx, rax
0x4aac:	jmp	0x3f95


0x3f95:	lea	rsi, [rip + 0x810c]
0x3f9c:	xor	edi, edi
0x3f9e:	mov	edx, 5
0x3fa3:	call	0x24f0


0x701d:	mov	dword ptr [rbp], r12d
0x7021:	pop	rbx
0x7022:	pop	rbp
0x7023:	pop	r12
0x7025:	ret	


0x6ede:	mov	dword ptr [rip + 0x20a193], r12d
0x6ee5:	mov	eax, dword ptr [rbp + 4]
0x6ee8:	shl	r15, 4
0x6eec:	sub	rsp, 8
0x6ef0:	add	rbx, r15
0x6ef3:	lea	r15, [rbp + 8]
0x6ef7:	mov	r8d, dword ptr [rbp]
0x6efb:	mov	r11, qword ptr [rbx]
0x6efe:	mov	r12, qword ptr [rbx + 8]
0x6f02:	mov	rcx, r14
0x6f05:	or	eax, 1
0x6f08:	mov	dword ptr [rsp + 0x24], eax
0x6f0c:	push	qword ptr [rbp + 0x30]
0x6f0f:	mov	r9d, eax
0x6f12:	push	qword ptr [rbp + 0x28]
0x6f15:	push	r15
0x6f17:	mov	rsi, r11
0x6f1a:	mov	rdx, qword ptr [rsp + 0x28]
0x6f1f:	mov	rdi, r12
0x6f22:	mov	qword ptr [rsp + 0x30], r11
0x6f27:	call	0x5c00


0x889a:	mov	edx, dword ptr [rsp + 8]
0x889e:	mov	rsi, qword ptr [rax]
0x88a1:	mov	rax, rbp
0x88a4:	jmp	0x88b7


0x88b7:	movzx	ecx, bl
0x88ba:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x88bf:	jne	0x88b0


0x88c1:	cmp	bl, 0x2d
0x88c4:	je	0x8918


0x88b0:	add	rax, 1
0x88b4:	movzx	ebx, byte ptr [rax]
0x88b7:	movzx	ecx, bl
0x88ba:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x88bf:	jne	0x88b0


0x8918:	mov	ebp, 4
0x891d:	mov	rdi, qword ptr [rsp + 0x18]
0x8922:	xor	rdi, qword ptr fs:[0x28]
0x892b:	mov	eax, ebp
0x892d:	jne	0x8bc0


0x88c6:	xor	ecx, ecx
0x88c8:	mov	rsi, r15
0x88cb:	mov	rdi, rbp
0x88ce:	call	0x25b0


0x8933:	add	rsp, 0x28
0x8937:	pop	rbx
0x8938:	pop	rbp
0x8939:	pop	r12
0x893b:	pop	r13
0x893d:	pop	r14
0x893f:	pop	r15
0x8941:	ret	


0x8bc0:	call	0x2520


0x25b0:	jmp	qword ptr [rip + 0x20e91a]




0x81dc:	mov	rcx, qword ptr [rbx]
0x81df:	mov	rbp, rax
0x81e2:	cmp	rcx, r12
0x81e5:	je	0x8248


0x8248:	test	r15, r15
0x824b:	je	0x86e0


0x81e7:	mov	eax, dword ptr [r13]
0x81eb:	test	eax, eax
0x81ed:	jne	0x8230


0x86e0:	mov	r12d, 4
0x86e6:	jmp	0x8207


0x8251:	movzx	r13d, byte ptr [rcx]
0x8255:	mov	qword ptr [rsp + 8], rcx
0x825a:	mov	r12d, 4
0x8260:	test	r13b, r13b
0x8263:	je	0x8207


0x81ef:	xor	r12d, r12d
0x81f2:	test	r15, r15
0x81f5:	je	0x8204


0x8230:	cmp	eax, 0x22
0x8233:	mov	r12d, 4
0x8239:	jne	0x8207


0x8207:	mov	rdi, qword ptr [rsp + 0x18]
0x820c:	xor	rdi, qword ptr fs:[0x28]
0x8215:	mov	eax, r12d
0x8218:	jne	0x882e


0x8265:	movsx	esi, r13b
0x8269:	mov	rdi, r15
0x826c:	call	0x2560


0x8204:	mov	qword ptr [r14], rbp
0x8207:	mov	rdi, qword ptr [rsp + 0x18]
0x820c:	xor	rdi, qword ptr fs:[0x28]
0x8215:	mov	eax, r12d
0x8218:	jne	0x882e


0x81f7:	movzx	r13d, byte ptr [rcx]
0x81fb:	test	r13b, r13b
0x81fe:	jne	0x8283


0x823b:	mov	r12d, 1
0x8241:	jmp	0x81f2


0x821e:	add	rsp, 0x28
0x8222:	pop	rbx
0x8223:	pop	rbp
0x8224:	pop	r12
0x8226:	pop	r13
0x8228:	pop	r14
0x822a:	pop	r15
0x822c:	ret	


0x882e:	call	0x2520


0x2560:	jmp	qword ptr [rip + 0x20e942]


0x8283:	movsx	esi, r13b
0x8287:	mov	rdi, r15
0x828a:	mov	qword ptr [rsp + 8], rcx
0x828f:	call	0x2560


0x81f2:	test	r15, r15
0x81f5:	je	0x8204




0x5425:	cmp	dword ptr [r12], 0
0x542a:	jne	0x5503


0x5430:	mov	rdx, qword ptr [rsp + 0x48]
0x5435:	cmp	byte ptr [rdx], 0x3a
0x5438:	jne	0x5503


0x5503:	mov	rdi, rbx
0x5506:	call	0x7780


0x543e:	cmp	rdx, r13
0x5441:	je	0x5503


0x5447:	mov	ecx, eax
0x5449:	cmp	rax, rcx
0x544c:	jne	0x5503


0x5452:	mov	dword ptr [rsp + r15*4 + 0x50], eax
0x5457:	add	r15, 1
0x545b:	lea	r13, [rdx + 1]
0x545f:	cmp	r15, 4
0x5463:	jne	0x540c


0x5465:	mov	rcx, qword ptr [rsp + 0x18]
0x546a:	mov	eax, dword ptr [rsp + 0x50]
0x546e:	xor	r15d, r15d
0x5471:	mov	dword ptr [rsp + 0x10], ebp
0x5475:	xor	r9d, r9d
0x5478:	mov	rbp, rbx
0x547b:	mov	dword ptr [rcx], eax
0x547d:	mov	eax, dword ptr [rsp + 0x54]
0x5481:	mov	dword ptr [rcx + 4], eax
0x5484:	mov	eax, dword ptr [rsp + 0x58]
0x5488:	mov	dword ptr [rcx + 8], eax
0x548b:	mov	eax, dword ptr [rsp + 0x5c]
0x548f:	mov	dword ptr [rcx + 0xc], eax
0x5492:	jmp	0x54cc


0x540c:	mov	rsi, qword ptr [rsp]
0x5410:	mov	dword ptr [r12], 0
0x5418:	mov	edx, 0x10
0x541d:	mov	rdi, r13
0x5420:	call	0x2740


0x54cc:	mov	rsi, qword ptr [rsp]
0x54d0:	cmp	r15, 0x1f
0x54d4:	mov	eax, 0x3a
0x54d9:	cmove	eax, r9d
0x54dd:	mov	dword ptr [r12], 0
0x54e5:	mov	edx, 0x10
0x54ea:	mov	rdi, r13
0x54ed:	mov	byte ptr [rsp + 0x3f], r9b
0x54f2:	mov	ebx, eax
0x54f4:	call	0x2740


0x54f9:	cmp	dword ptr [r12], 0
0x54fe:	je	0x5494


0x5494:	mov	rdx, qword ptr [rsp + 0x48]
0x5499:	cmp	byte ptr [rdx], bl
0x549b:	jne	0x5500


0x5500:	mov	rbx, rbp
0x5503:	mov	rdi, rbx
0x5506:	call	0x7780


0x549d:	cmp	rdx, r13
0x54a0:	je	0x5500


0x54a2:	test	rax, -0x100
0x54a8:	jne	0x5500


0x54aa:	mov	rcx, qword ptr [rsp + 0x18]
0x54af:	lea	r13, [rdx + 1]
0x54b3:	movzx	r9d, byte ptr [rsp + 0x3f]
0x54b9:	mov	byte ptr [rcx + r15 + 0x11], al
0x54be:	add	r15, 1
0x54c2:	cmp	r15, 0x20
0x54c6:	je	0x5660


0x5660:	mov	ebp, dword ptr [rsp + 0x10]
0x5664:	jmp	0x51fa


0x51fa:	mov	rax, qword ptr [rsp + 0x20]
0x51ff:	mov	byte ptr [rax], 1
0x5202:	jmp	0x4be4


0x8e63:	mov	ebx, 0xffffffff
0x8e68:	mov	dword ptr [rbp], r12d
0x8e6c:	jmp	0x8d40


0x5a3d:	mov	r12d, eax
0x5a40:	call	0x2450


0x5a45:	mov	r13d, dword ptr [rax]
0x5a48:	mov	rbp, rax
0x5a4b:	mov	edi, ebx
0x5a4d:	call	0x25e0


0x5a52:	mov	ebx, r12d
0x5a55:	mov	dword ptr [rbp], r13d
0x5a59:	add	rsp, 8
0x5a5d:	mov	eax, ebx
0x5a5f:	pop	rbx
0x5a60:	pop	rbp
0x5a61:	pop	r12
0x5a63:	pop	r13
0x5a65:	ret	


0x39d2:	test	rax, rax
0x39d5:	je	0x39f3


0x39f3:	mov	eax, 0x50
0x39f8:	mov	rcx, qword ptr [rsp + 0x18]
0x39fd:	xor	rcx, qword ptr fs:[0x28]
0x3a06:	jne	0x3a24


0x39d7:	lea	rcx, [rsp + 8]
0x39dc:	lea	r8, [rip + 0xa65e]
0x39e3:	xor	edx, edx
0x39e5:	xor	esi, esi
0x39e7:	mov	rdi, rax
0x39ea:	call	0x8180


0x39ef:	test	eax, eax
0x39f1:	je	0x3a10


0x3a10:	mov	rax, qword ptr [rsp + 8]
0x3a15:	lea	rdx, [rax - 1]
0x3a19:	cmp	rdx, 0x7ffffffe
0x3a20:	ja	0x39f3


0x3a22:	jmp	0x39f8


0x36e5:	cmp	r12d, eax
0x36e8:	jne	0x3760


0x3760:	mov	rdi, rbp
0x3763:	call	0x26c0


0x3768:	test	eax, eax
0x376a:	je	0x3799


0x3799:	xor	r12d, r12d
0x379c:	mov	rdi, rbp
0x379f:	call	0x24a0


0x376c:	lea	rdx, [rip + 0x20c30d]
0x3773:	lea	rsi, [rip + 0x7ee9]
0x377a:	xor	ecx, ecx
0x377c:	jmp	0x3791


0x3791:	add	ecx, 1
0x3794:	test	rsi, rsi
0x3797:	jne	0x3780


0x3780:	add	rdx, 0x18
0x3784:	cmp	eax, dword ptr [rdx - 0x18]
0x3787:	je	0x3838


0x3838:	movsxd	rcx, ecx
0x383b:	lea	rax, [rip + 0x20c21e]
0x3842:	lea	rdx, [rcx + rcx*2]
0x3846:	mov	r12, qword ptr [rax + rdx*8 + 0x10]
0x384b:	jmp	0x379c


0x378d:	mov	rsi, qword ptr [rdx - 8]
0x3791:	add	ecx, 1
0x3794:	test	rsi, rsi
0x3797:	jne	0x3780


0x379c:	mov	rdi, rbp
0x379f:	call	0x24a0


0x37a4:	test	eax, eax
0x37a6:	je	0x37d5


0x37d5:	xor	esi, esi
0x37d7:	lea	rax, [rip + 0x8162]
0x37de:	lea	rdi, [rip + 0x7b0f]
0x37e5:	test	bl, bl
0x37e7:	mov	rdx, r12
0x37ea:	cmovne	rdi, rax
0x37ee:	xor	eax, eax
0x37f0:	call	0x3520


0x37a8:	lea	rcx, [rip + 0x20c2d1]
0x37af:	lea	rdi, [rip + 0x7ead]
0x37b6:	xor	esi, esi
0x37b8:	jmp	0x37cd


0x37cd:	add	esi, 1
0x37d0:	test	rdi, rdi
0x37d3:	jne	0x37c0


0x37c0:	add	rcx, 0x18
0x37c4:	cmp	eax, dword ptr [rcx - 0x18]
0x37c7:	je	0x3820


0x3820:	movsxd	rsi, esi
0x3823:	lea	rax, [rip + 0x20c236]
0x382a:	lea	rdx, [rsi + rsi*2]
0x382e:	mov	rsi, qword ptr [rax + rdx*8 + 0x10]
0x3833:	jmp	0x37d7


0x37c9:	mov	rdi, qword ptr [rcx - 8]
0x37cd:	add	esi, 1
0x37d0:	test	rdi, rdi
0x37d3:	jne	0x37c0


0x37d7:	lea	rax, [rip + 0x8162]
0x37de:	lea	rdi, [rip + 0x7b0f]
0x37e5:	test	bl, bl
0x37e7:	mov	rdx, r12
0x37ea:	cmovne	rdi, rax
0x37ee:	xor	eax, eax
0x37f0:	call	0x3520


0x37f5:	jmp	0x3744


0x3744:	test	bl, bl
0x3746:	jne	0x3752


0x3748:	mov	dword ptr [rip + 0x20daaa], 0
0x3752:	pop	rbx
0x3753:	pop	rbp
0x3754:	pop	r12
0x3756:	ret	


0x3752:	pop	rbx
0x3753:	pop	rbp
0x3754:	pop	r12
0x3756:	ret	


0x531c:	jmp	0x4be4


0x36f2:	test	eax, eax
0x36f4:	je	0x3850


0x3850:	xor	esi, esi
0x3852:	jmp	0x3729


0x36fa:	lea	rdx, [rip + 0x20c37f]
0x3701:	lea	rsi, [rip + 0x7f5b]
0x3708:	xor	ecx, ecx
0x370a:	jmp	0x3721


0x3729:	lea	rax, [rip + 0x7bb4]
0x3730:	lea	rdi, [rip + 0x7bc1]
0x3737:	test	bl, bl
0x3739:	cmovne	rdi, rax
0x373d:	xor	eax, eax
0x373f:	call	0x3520


0x3721:	add	ecx, 1
0x3724:	test	rsi, rsi
0x3727:	jne	0x3710


0x3710:	add	rdx, 0x18
0x3714:	cmp	eax, dword ptr [rdx - 0x18]
0x3717:	je	0x3800


0x3800:	movsxd	rcx, ecx
0x3803:	lea	rax, [rip + 0x20c256]
0x380a:	lea	rdx, [rcx + rcx*2]
0x380e:	mov	rsi, qword ptr [rax + rdx*8 + 0x10]
0x3813:	jmp	0x3729


0x371d:	mov	rsi, qword ptr [rdx - 8]
0x3721:	add	ecx, 1
0x3724:	test	rsi, rsi
0x3727:	jne	0x3710


0x91c7:	mov	rdi, rbx
0x91ca:	pop	rbx
0x91cb:	jmp	0x2670


0x4ee4:	mov	rax, qword ptr [rsp + 0x28]
0x4ee9:	mov	byte ptr [rax], 1
0x4eec:	mov	rax, qword ptr [rsp + 0x20]
0x4ef1:	mov	byte ptr [rax], 1
0x4ef4:	jmp	0x4be4


0x4cf6:	mov	rax, qword ptr [rsp + 0x28]
0x4cfb:	cmp	dword ptr [rsp + 0x38], ebp
0x4cff:	mov	byte ptr [rax], 1
0x4d02:	mov	rax, qword ptr [rsp + 0x20]
0x4d07:	mov	byte ptr [rax], 1
0x4d0a:	jg	0x4bf1


0x53b5:	mov	esi, r12d
0x53b8:	mov	rdi, rbx
0x53bb:	jmp	0x4edf


0x4edf:	call	0x24e0


0x808a:	test	eax, eax
0x808c:	jne	0x8120


0x8092:	mov	rbp, qword ptr [rsp]
0x8096:	cmp	rbp, r14
0x8099:	jb	0x80a0


0x8120:	mov	ebp, eax
0x8122:	call	0x2450


0x80a0:	call	0x2450


0x809b:	cmp	rbp, r15
0x809e:	jbe	0x80f4


0x80f4:	mov	rdx, qword ptr [rsp + 8]
0x80f9:	xor	rdx, qword ptr fs:[0x28]
0x8102:	mov	rax, rbp
0x8105:	jne	0x814b


0x8107:	add	rsp, 0x18
0x810b:	pop	rbx
0x810c:	pop	rbp
0x810d:	pop	r12
0x810f:	pop	r13
0x8111:	pop	r14
0x8113:	pop	r15
0x8115:	ret	


0x814b:	call	0x2520


0x80a5:	cmp	rbp, 0x40000000
0x80ac:	mov	r14, rax
0x80af:	sbb	eax, eax
0x80b1:	and	eax, 0xffffffd7
0x80b4:	add	eax, 0x4b
0x80b7:	mov	dword ptr [r14], eax
0x80ba:	mov	rdi, r12
0x80bd:	call	0x7780


0x8127:	cmp	ebp, 1
0x812a:	mov	r14, rax
0x812d:	je	0x8140


0x8140:	mov	dword ptr [rax], 0x4b
0x8146:	jmp	0x80ba


0x812f:	cmp	ebp, 3
0x8132:	jne	0x80ba


0x80ba:	mov	rdi, r12
0x80bd:	call	0x7780


0x8134:	mov	dword ptr [rax], 0
0x813a:	jmp	0x80ba


0x389e:	add	rsp, 0x18
0x38a2:	pop	rbx
0x38a3:	pop	rbp
0x38a4:	ret	


0x4fcd:	mov	r12, rax
0x4fd0:	jmp	0x4e5c


0x51ba:	mov	rcx, qword ptr [rsp + 0x18]
0x51bf:	test	rax, -0x100
0x51c5:	mov	byte ptr [rcx + 0x10], al
0x51c8:	je	0x51fa


0x51ca:	mov	rdi, qword ptr [r12]
0x51ce:	call	0x7780


0x507d:	mov	rdx, qword ptr [rsp + 0x30]
0x5082:	mov	esi, eax
0x5084:	or	edi, 0xffffffff
0x5087:	call	0x3a30


0x508c:	jmp	0x4be4


0x4fa5:	mov	rdx, qword ptr [rsp + 0x30]
0x4faa:	or	esi, 0xffffffff
0x4fad:	mov	edi, eax
0x4faf:	call	0x3a30


0x4fb4:	jmp	0x4be4


0x816c:	add	rsp, 0x18
0x8170:	ret	


0x8294:	test	rax, rax
0x8297:	mov	rcx, qword ptr [rsp + 8]
0x829c:	je	0x82f8


0x82f8:	mov	qword ptr [r14], rbp
0x82fb:	or	r12d, 2
0x82ff:	jmp	0x8207


0x829e:	lea	eax, [r13 - 0x45]
0x82a2:	cmp	al, 0x2f
0x82a4:	ja	0x8308


0x82a6:	movabs	rdx, 0x814400308945
0x82b0:	bt	rdx, rax
0x82b4:	jae	0x8308


0x8308:	mov	edi, 1
0x830d:	mov	eax, 0x400
0x8312:	sub	r13d, 0x42
0x8316:	cmp	r13b, 0x35
0x831a:	ja	0x82f8


0x82b6:	mov	esi, 0x30
0x82bb:	mov	rdi, r15
0x82be:	mov	qword ptr [rsp + 8], rcx
0x82c3:	call	0x2560


0x831c:	lea	rsi, [rip + 0x6085]
0x8323:	movzx	r13d, r13b
0x8327:	movsxd	rdx, dword ptr [rsi + r13*4]
0x832b:	add	rdx, rsi
0x832e:	jmp	rdx


0x82c8:	test	rax, rax
0x82cb:	mov	rcx, qword ptr [rsp + 8]
0x82d0:	je	0x8308


0x82d2:	movzx	eax, byte ptr [rcx + 1]
0x82d6:	cmp	al, 0x44
0x82d8:	je	0x82e6


0x82e6:	mov	edi, 2
0x82eb:	mov	eax, 0x3e8
0x82f0:	jmp	0x8312


0x82da:	cmp	al, 0x69
0x82dc:	je	0x87c8


0x8312:	sub	r13d, 0x42
0x8316:	cmp	r13b, 0x35
0x831a:	ja	0x82f8


0x87c8:	xor	edi, edi
0x87ca:	cmp	byte ptr [rcx + 2], 0x42
0x87ce:	mov	eax, 0x400
0x87d3:	sete	dil
0x87d7:	lea	edi, [rdi + rdi + 1]
0x87db:	jmp	0x8312


0x82e2:	cmp	al, 0x42
0x82e4:	jne	0x8308


0x8271:	test	rax, rax
0x8274:	mov	rcx, qword ptr [rsp + 8]
0x8279:	je	0x8207


0x827b:	mov	ebp, 1
0x8280:	xor	r12d, r12d
0x8283:	movsx	esi, r13b
0x8287:	mov	rdi, r15
0x828a:	mov	qword ptr [rsp + 8], rcx
0x828f:	call	0x2560


0x88d3:	mov	rcx, qword ptr [r15]
0x88d6:	mov	rbx, rax
0x88d9:	cmp	rcx, rbp
0x88dc:	je	0x8908


0x8908:	test	r13, r13
0x890b:	mov	qword ptr [rsp + 8], rcx
0x8910:	jne	0x8950


0x88de:	mov	eax, dword ptr [r12]
0x88e2:	test	eax, eax
0x88e4:	je	0x8948


0x8950:	movzx	r12d, byte ptr [rbp]
0x8955:	test	r12b, r12b
0x8958:	je	0x8918


0x8948:	xor	ebp, ebp
0x894a:	jmp	0x88f0


0x88e6:	cmp	eax, 0x22
0x88e9:	mov	ebp, 1
0x88ee:	jne	0x8918


0x895a:	movsx	esi, r12b
0x895e:	mov	rdi, r13
0x8961:	xor	ebp, ebp
0x8963:	call	0x2560


0x88f0:	test	r13, r13
0x88f3:	je	0x88fe


0x88fe:	mov	qword ptr [r14], rbx
0x8901:	jmp	0x891d


0x88f5:	movzx	r12d, byte ptr [rcx]
0x88f9:	test	r12b, r12b
0x88fc:	jne	0x8977


0x891d:	mov	rdi, qword ptr [rsp + 0x18]
0x8922:	xor	rdi, qword ptr fs:[0x28]
0x892b:	mov	eax, ebp
0x892d:	jne	0x8bc0


0x8977:	movsx	esi, r12b
0x897b:	mov	rdi, r13
0x897e:	mov	qword ptr [rsp + 8], rcx
0x8983:	call	0x2560


0x8988:	test	rax, rax
0x898b:	mov	rcx, qword ptr [rsp + 8]
0x8990:	je	0x8a5c


0x8a5c:	mov	qword ptr [r14], rbx
0x8a5f:	or	ebp, 2
0x8a62:	jmp	0x891d


0x8996:	lea	eax, [r12 - 0x45]
0x899b:	cmp	al, 0x2f
0x899d:	ja	0x89f0


0x899f:	movabs	rdx, 0x814400308945
0x89a9:	bt	rdx, rax
0x89ad:	jae	0x89f0


0x89f0:	mov	edi, 1
0x89f5:	mov	esi, 0x400
0x89fa:	sub	r12d, 0x42
0x89fe:	cmp	r12b, 0x35
0x8a02:	ja	0x8a5c


0x89af:	mov	esi, 0x30
0x89b4:	mov	rdi, r13
0x89b7:	mov	qword ptr [rsp + 8], rcx
0x89bc:	call	0x2560


0x8a04:	lea	rdx, [rip + 0x5a7d]
0x8a0b:	movzx	r12d, r12b
0x8a0f:	movsxd	rax, dword ptr [rdx + r12*4]
0x8a13:	add	rax, rdx
0x8a16:	jmp	rax


0x89c1:	test	rax, rax
0x89c4:	mov	rcx, qword ptr [rsp + 8]
0x89c9:	je	0x89f0


0x89cb:	movzx	eax, byte ptr [rcx + 1]
0x89cf:	cmp	al, 0x44
0x89d1:	je	0x89df


0x89df:	mov	edi, 2
0x89e4:	mov	esi, 0x3e8
0x89e9:	jmp	0x89fa


0x89d3:	cmp	al, 0x69
0x89d5:	je	0x8ba8


0x89fa:	sub	r12d, 0x42
0x89fe:	cmp	r12b, 0x35
0x8a02:	ja	0x8a5c


0x8ba8:	xor	edi, edi
0x8baa:	cmp	byte ptr [rcx + 2], 0x42
0x8bae:	mov	esi, 0x400
0x8bb3:	sete	dil
0x8bb7:	lea	edi, [rdi + rdi + 1]
0x8bbb:	jmp	0x89fa


0x89db:	cmp	al, 0x42
0x89dd:	jne	0x89f0


0x8968:	test	rax, rax
0x896b:	mov	ebx, 1
0x8970:	mov	rcx, qword ptr [rsp + 8]
0x8975:	je	0x8918


0x4b29:	test	eax, eax
0x4b2b:	jne	0x4ab1


0x4ab1:	lea	r12, [rip + 0x6885]
0x4ab8:	mov	r13, qword ptr [rip + 0x20c5e9]
0x4abf:	lea	rsi, [rip + 0x8e6a]
0x4ac6:	xor	edi, edi
0x4ac8:	mov	edx, 5
0x4acd:	call	0x24f0


0x4ad2:	mov	rsi, r13
0x4ad5:	mov	rdi, rax
0x4ad8:	call	0x2600


0x4add:	jmp	0x4a29


0x4a21:	test	eax, eax
0x4a23:	jne	0x4ab8


0x4ab8:	mov	r13, qword ptr [rip + 0x20c5e9]
0x4abf:	lea	rsi, [rip + 0x8e6a]
0x4ac6:	xor	edi, edi
0x4ac8:	mov	edx, 5
0x4acd:	call	0x24f0


0x283a:	lea	rdi, [rip + 0x311f]
0x2841:	call	0xb2c0


0x2846:	mov	dword ptr [rip + 0x20e890], 0
0x2850:	mov	byte ptr [rsp + 0xf], 1
0x2855:	mov	byte ptr [rsp + 0xe], 0
0x285a:	mov	byte ptr [rsp + 0xd], 0
0x285f:	mov	dword ptr [rsp + 8], 0
0x2867:	lea	rsi, [rbx + rbp*8]
0x286b:	mov	edi, r13d
0x286e:	lea	rcx, [rip + 0x20d54b]
0x2875:	lea	rdx, [rip + 0x8d63]
0x287c:	sub	edi, r12d
0x287f:	xor	r8d, r8d
0x2882:	call	0x2530


0x2530:	jmp	qword ptr [rip + 0x20e95a]




0x9134:	test	eax, eax
0x9136:	je	0x9174


0x9138:	call	0x2450


0x913d:	mov	r12d, dword ptr [rax]
0x9140:	mov	rdi, rbx
0x9143:	mov	rbp, rax
0x9146:	call	0x24c0


0x914b:	test	r12d, r12d
0x914e:	jne	0x9180


0x9150:	pop	rbx
0x9151:	pop	rbp
0x9152:	pop	r12
0x9154:	ret	


0x9180:	mov	dword ptr [rbp], r12d
0x9184:	mov	eax, 0xffffffff
0x9189:	jmp	0x9150


0x900a:	and	ebx, 0x20
0x900d:	test	ebx, ebx
0x900f:	jne	0x9028


0x9011:	test	eax, eax
0x9013:	je	0x901f


0x9028:	test	eax, eax
0x902a:	jne	0x9048


0x901f:	pop	rbx
0x9020:	pop	rbp
0x9021:	pop	r12
0x9023:	ret	


0x9015:	test	r12, r12
0x9018:	mov	eax, 0xffffffff
0x901d:	je	0x9058


0x902c:	call	0x2450


0x9048:	pop	rbx
0x9049:	mov	eax, 0xffffffff
0x904e:	pop	rbp
0x904f:	pop	r12
0x9051:	ret	


0x9058:	call	0x2450


0x905d:	cmp	dword ptr [rax], 9
0x9060:	pop	rbx
0x9061:	pop	rbp
0x9062:	pop	r12
0x9064:	setne	al
0x9067:	movzx	eax, al
0x906a:	neg	eax
0x906c:	ret	


0x9031:	mov	dword ptr [rax], 0
0x9037:	mov	eax, 0xffffffff
0x903c:	pop	rbx
0x903d:	pop	rbp
0x903e:	pop	r12
0x9040:	ret	


0x5972:	test	eax, eax
0x5974:	je	0x598c


0x598c:	mov	rdi, qword ptr [rip + 0x20b76d]
0x5993:	call	0x8ff0


0x5976:	call	0x2450


0x597b:	cmp	byte ptr [rip + 0x20b886], 0
0x5982:	mov	rbx, rax
0x5985:	je	0x59a3


0x59a3:	lea	rsi, [rip + 0x8112]
0x59aa:	xor	edi, edi
0x59ac:	mov	edx, 5
0x59b1:	call	0x24f0


0x5987:	cmp	dword ptr [rax], 0x20
0x598a:	jne	0x59a3


0x59b6:	mov	rdi, qword ptr [rip + 0x20b853]
0x59bd:	mov	rbp, rax
0x59c0:	test	rdi, rdi
0x59c3:	je	0x59ed


0x59ed:	mov	esi, dword ptr [rbx]
0x59ef:	lea	rdx, [rip + 0x80d6]
0x59f6:	mov	rcx, rax
0x59f9:	xor	edi, edi
0x59fb:	xor	eax, eax
0x59fd:	call	0x26e0


0x59c5:	call	0x7580


0x5a02:	jmp	0x59e2


0x59e2:	mov	edi, dword ptr [rip + 0x20b638]
0x59e8:	call	0x2470


0x2470:	jmp	qword ptr [rip + 0x20e9ba]




0x5998:	test	eax, eax
0x599a:	jne	0x59e2


0x599c:	add	rsp, 8
0x59a0:	pop	rbx
0x59a1:	pop	rbp
0x59a2:	ret	


0x2887:	cmp	eax, -1
0x288a:	je	0x29d2


0x29d2:	movzx	ecx, byte ptr [rsp + 0xe]
0x29d7:	test	byte ptr [rsp + 0xd], cl
0x29db:	jne	0x31c9


0x2890:	cmp	eax, 0x46
0x2893:	je	0x2940


0x29e1:	cmp	byte ptr [rsp + 0xf], 0
0x29e6:	jne	0x2b13


0x31c9:	lea	rsi, [rip + 0xa808]
0x31d0:	mov	edx, 5
0x31d5:	xor	edi, edi
0x31d7:	call	0x24f0


0x2940:	test	r14, r14
0x2943:	jne	0x31ed


0x2899:	jle	0x2900


0x29ec:	cmp	byte ptr [rsp + 0xd], 0
0x29f1:	jne	0x32b4


0x2b13:	test	r14, r14
0x2b16:	jne	0x2a36


0x2949:	mov	r14, qword ptr [rip + 0x20e768]
0x2950:	jmp	0x28ba


0x31ed:	lea	rsi, [rip + 0xa7bc]
0x31f4:	mov	edx, 5
0x31f9:	xor	edi, edi
0x31fb:	call	0x24f0


0x2900:	cmp	eax, 0xffffff7d
0x2905:	jne	0x2955


0x289b:	cmp	eax, 0x61
0x289e:	je	0x29c0


0x29f7:	cmp	byte ptr [rsp + 0xe], 0
0x29fc:	jne	0x32b4


0x32b4:	lea	rsi, [rip + 0xa76d]
0x32bb:	mov	edx, 5
0x32c0:	xor	edi, edi
0x32c2:	call	0x24f0


0x2b1c:	lea	rsi, [rip + 0x8ac2]
0x2b23:	xor	edi, edi
0x2b25:	mov	edx, 5
0x2b2a:	call	0x24f0


0x2a36:	xor	ecx, ecx
0x2a38:	xor	edi, edi
0x2a3a:	mov	edx, 0x800
0x2a3f:	mov	rsi, r14
0x2a42:	call	0x5a10


0x28ba:	mov	esi, dword ptr [rip + 0x20e7f0]
0x28c0:	cmp	esi, r15d
0x28c3:	jle	0x3211


0x2907:	mov	rdi, qword ptr [rip + 0x20e79a]
0x290e:	mov	rcx, qword ptr [rip + 0x20e703]
0x2915:	lea	r8, [rip + 0x8cac]
0x291c:	lea	rdx, [rip + 0x8b4d]
0x2923:	lea	rsi, [rip + 0x8a13]
0x292a:	xor	r9d, r9d
0x292d:	xor	eax, eax
0x292f:	call	0x7c60


0x2955:	cmp	eax, 0xffffff7e
0x295a:	je	0x2dea


0x29c0:	mov	byte ptr [rsp + 0xd], 1
0x29c5:	mov	dword ptr [rsp + 8], 1
0x29cd:	jmp	0x28ba


0x28a4:	cmp	eax, 0x67
0x28a7:	jne	0x2960


0x2a02:	test	r14, r14
0x2a05:	je	0x30e5


0x3211:	mov	esi, r15d
0x3214:	jmp	0x28f8


0x28c9:	movsxd	rdx, r15d
0x28cc:	lea	rcx, [rdx + rbp]
0x28d0:	lea	edx, [rsi - 1]
0x28d3:	sub	edx, r15d
0x28d6:	lea	rax, [rbx + rcx*8]
0x28da:	add	rdx, rcx
0x28dd:	lea	rdx, [rbx + rdx*8 + 8]
0x28e2:	nop	word ptr [rax + rax]
0x28e8:	mov	qword ptr [rax], 0
0x28ef:	add	rax, 8
0x28f3:	cmp	rdx, rax
0x28f6:	jne	0x28e8


0x2dea:	xor	edi, edi
0x2dec:	call	0x3c30


0x2960:	add	r12d, r15d
0x2963:	lea	rdi, [rip + 0x8c6e]
0x296a:	mov	ecx, 7
0x296f:	movsxd	rbp, r12d
0x2972:	mov	rdx, qword ptr [rbx + rbp*8]
0x2976:	mov	rsi, rdx
0x2979:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x28ad:	mov	byte ptr [rsp + 0xe], 1
0x28b2:	mov	dword ptr [rsp + 8], 2
0x28ba:	mov	esi, dword ptr [rip + 0x20e7f0]
0x28c0:	cmp	esi, r15d
0x28c3:	jle	0x3211


0x30e5:	lea	rsi, [rip + 0x84f9]
0x30ec:	mov	edx, 5
0x30f1:	xor	edi, edi
0x30f3:	call	0x24f0


0x2a0b:	sub	rsp, 8
0x2a0f:	lea	r8, [rip + 0x20e7aa]
0x2a16:	mov	rdx, rbx
0x2a19:	lea	rax, [rsp + 0x1e]
0x2a1e:	mov	ecx, r13d
0x2a21:	mov	rsi, r14
0x2a24:	mov	edi, 1
0x2a29:	push	rax
0x2a2a:	lea	r9, [rsp + 0x27]
0x2a2f:	call	0x4b70


0x28f8:	mov	r15d, esi
0x28fb:	jmp	0x2867


0x28e8:	mov	qword ptr [rax], 0
0x28ef:	add	rax, 8
0x28f3:	cmp	rdx, rax
0x28f6:	jne	0x28e8


0x2979:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x297b:	seta	al
0x297e:	sbb	al, 0
0x2980:	test	al, al
0x2982:	je	0x29a6


0x2867:	lea	rsi, [rbx + rbp*8]
0x286b:	mov	edi, r13d
0x286e:	lea	rcx, [rip + 0x20d54b]
0x2875:	lea	rdx, [rip + 0x8d63]
0x287c:	sub	edi, r12d
0x287f:	xor	r8d, r8d
0x2882:	call	0x2530


0x29a6:	mov	esi, 1
0x29ab:	mov	dword ptr [rip + 0x20e6fb], 0
0x29b5:	mov	r15d, esi
0x29b8:	jmp	0x2867


0x2984:	lea	rsi, [rip + 0x8c4e]
0x298b:	mov	rdi, rdx
0x298e:	call	0x2620


0x2993:	movzx	ecx, byte ptr [rsp + 0xf]
0x2998:	test	eax, eax
0x299a:	mov	eax, 0
0x299f:	cmovne	ecx, eax
0x29a2:	mov	byte ptr [rsp + 0xf], cl
0x29a6:	mov	esi, 1
0x29ab:	mov	dword ptr [rip + 0x20e6fb], 0
0x29b5:	mov	r15d, esi
0x29b8:	jmp	0x2867


0x2a34:	pop	rax
0x2a35:	pop	rdx
0x2a36:	xor	ecx, ecx
0x2a38:	xor	edi, edi
0x2a3a:	mov	edx, 0x800
0x2a3f:	mov	rsi, r14
0x2a42:	call	0x5a10


0x2934:	xor	edi, edi
0x2936:	call	0x2760


0x2a47:	test	eax, eax
0x2a49:	js	0x3319


0x3319:	mov	rdx, r14
0x331c:	mov	esi, 3
0x3321:	xor	edi, edi
0x3323:	call	0x75b0


0x2a4f:	xor	edi, edi
0x2a51:	xor	eax, eax
0x2a53:	mov	esi, 3
0x2a58:	call	0x8c60


0x2a5d:	cmp	eax, -1
0x2a60:	je	0x32d8


0x32d8:	mov	rdx, r14
0x32db:	mov	esi, 3
0x32e0:	xor	edi, edi
0x32e2:	call	0x75b0


0x2a66:	and	ah, 0xf7
0x2a69:	xor	edi, edi
0x2a6b:	mov	esi, 4
0x2a70:	mov	edx, eax
0x2a72:	xor	eax, eax
0x2a74:	call	0x8c60


0x2a79:	test	eax, eax
0x2a7b:	js	0x32d8


0x2a81:	lea	rsi, [rip + 0x20e6f8]
0x2a88:	xor	edi, edi
0x2a8a:	call	0x26f0


0x26f0:	jmp	qword ptr [rip + 0x20e87a]




0x30f8:	sub	rsp, 8
0x30fc:	mov	r14, rax
0x30ff:	lea	r8, [rip + 0x20e0ba]
0x3106:	lea	rax, [rsp + 0x1e]
0x310b:	mov	edi, 1
0x3110:	mov	ecx, r13d
0x3113:	mov	rdx, rbx
0x3116:	mov	rsi, r14
0x3119:	push	rax
0x311a:	lea	r9, [rsp + 0x27]
0x311f:	call	0x4b70


0x3124:	pop	rdi
0x3125:	pop	r8
0x3127:	jmp	0x2a81


0x2b2f:	lea	rsi, [rip + 0x20e64a]
0x2b36:	xor	edi, edi
0x2b38:	mov	r14, rax
0x2b3b:	call	0x26f0


0x32c7:	xor	esi, esi
0x32c9:	mov	rdx, rax
0x32cc:	mov	edi, 1
0x32d1:	xor	eax, eax
0x32d3:	call	0x26e0


0x3200:	xor	esi, esi
0x3202:	mov	rdx, rax
0x3205:	mov	edi, 1
0x320a:	xor	eax, eax
0x320c:	call	0x26e0


0x31dc:	xor	esi, esi
0x31de:	mov	rdx, rax
0x31e1:	mov	edi, 1
0x31e6:	xor	eax, eax
0x31e8:	call	0x26e0


0x2b40:	test	eax, eax
0x2b42:	je	0x2b73


0x2b73:	call	0x3990


0x2b44:	mov	rdx, r14
0x2b47:	mov	esi, 3
0x2b4c:	xor	edi, edi
0x2b4e:	call	0x75b0


0x2b78:	mov	dword ptr [rip + 0x20e682], eax
0x2b7e:	mov	eax, dword ptr [rsp + 8]
0x2b82:	mov	dword ptr [rip + 0x20e670], 0
0x2b8c:	cmp	eax, 1
0x2b8f:	je	0x2f0b


0x2f0b:	lea	rdi, [rip + 0x20e26e]
0x2f12:	mov	esi, 1
0x2f17:	call	0x36c0


0x2b95:	cmp	eax, 2
0x2b98:	je	0x2d6a


0x2d6a:	mov	ecx, dword ptr [rip + 0x20e414]
0x2d70:	mov	edx, dword ptr [rip + 0x20e40a]
0x2d76:	lea	rsi, [rip + 0x88c4]
0x2d7d:	mov	r9d, dword ptr [rip + 0x20e408]
0x2d84:	mov	r8d, dword ptr [rip + 0x20e3fd]
0x2d8b:	lea	r12, [rip + 0x20e3ff]
0x2d92:	lea	rbp, [rip + 0x88b3]
0x2d99:	mov	edi, 1
0x2d9e:	xor	eax, eax
0x2da0:	xor	ebx, ebx
0x2da2:	call	0x26d0


0x2b9e:	lea	rdi, [rip + 0x20e5db]
0x2ba5:	mov	esi, 1
0x2baa:	call	0x36c0


0x2da7:	movzx	edx, byte ptr [r12 + rbx]
0x2dac:	xor	eax, eax
0x2dae:	mov	rsi, rbp
0x2db1:	mov	edi, 1
0x2db6:	add	rbx, 1
0x2dba:	call	0x26d0


0x2dbf:	cmp	rbx, 0x20
0x2dc3:	jne	0x2da7


0x2dc5:	mov	rdi, qword ptr [rip + 0x20e2dc]
0x2dcc:	mov	rax, qword ptr [rdi + 0x28]
0x2dd0:	cmp	rax, qword ptr [rdi + 0x30]
0x2dd4:	jae	0x3178


0x2dda:	lea	rdx, [rax + 1]
0x2dde:	mov	qword ptr [rdi + 0x28], rdx
0x2de2:	mov	byte ptr [rax], 0xa
0x2de5:	jmp	0x2aee


0x3178:	mov	esi, 0xa
0x317d:	call	0x2570


0x2aee:	xor	eax, eax
0x2af0:	mov	rcx, qword ptr [rsp + 0x18]
0x2af5:	xor	rcx, qword ptr fs:[0x28]
0x2afe:	jne	0x31c4


0x2b04:	add	rsp, 0x28
0x2b08:	pop	rbx
0x2b09:	pop	rbp
0x2b0a:	pop	r12
0x2b0c:	pop	r13
0x2b0e:	pop	r14
0x2b10:	pop	r15
0x2b12:	ret	


0x31c4:	call	0x2520


0x3182:	jmp	0x2aee


0x2baf:	movzx	esi, byte ptr [rip + 0x20e5da]
0x2bb6:	lea	rdi, [rip + 0x8a37]
0x2bbd:	xor	eax, eax
0x2bbf:	call	0x3520


0x2bc4:	mov	rdi, qword ptr [rip + 0x20e4dd]
0x2bcb:	mov	rax, qword ptr [rdi + 0x28]
0x2bcf:	cmp	rax, qword ptr [rdi + 0x30]
0x2bd3:	jae	0x3196


0x2bd9:	lea	rdx, [rax + 1]
0x2bdd:	mov	qword ptr [rdi + 0x28], rdx
0x2be1:	mov	byte ptr [rax], 0xa
0x2be4:	mov	dword ptr [rip + 0x20e60e], 0
0x2bee:	lea	r15, [rip + 0x20d28b]
0x2bf5:	mov	r13d, 1
0x2bfb:	lea	rbp, [rip + 0x8942]
0x2c02:	lea	r12, [rip + 0x20e577]
0x2c09:	jmp	0x2c56


0x3196:	mov	esi, 0xa
0x319b:	call	0x2570


0x2c56:	mov	rbx, qword ptr [r15]
0x2c59:	mov	rsi, rbp
0x2c5c:	mov	rdi, rbx
0x2c5f:	call	0x2620


0x2c64:	test	eax, eax
0x2c66:	jne	0x2c0b


0x2c68:	test	byte ptr [rip + 0x20e51d], 2
0x2c6f:	je	0x313b


0x2c0b:	mov	rax, qword ptr [r15 + 0x10]
0x2c0f:	movzx	r14d, byte ptr [r12 + rax + 0x11]
0x2c15:	cmp	r14b, byte ptr [r15 + 8]
0x2c19:	je	0x2c52


0x313b:	movzx	edx, byte ptr [rip + 0x20e054]
0x3142:	movzx	esi, byte ptr [rip + 0x20e04e]
0x3149:	lea	rdi, [rip + 0x84be]
0x3150:	call	0x3520


0x2c75:	test	r13b, r13b
0x2c78:	jne	0x2c9a


0x2c52:	add	r15, 0x18
0x2c56:	mov	rbx, qword ptr [r15]
0x2c59:	mov	rsi, rbp
0x2c5c:	mov	rdi, rbx
0x2c5f:	call	0x2620


0x2c1b:	lea	rsi, [rip + 0x89dd]
0x2c22:	mov	rdi, rbx
0x2c25:	call	0x2620


0x2c7a:	mov	rdi, qword ptr [rip + 0x20e427]
0x2c81:	mov	rax, qword ptr [rdi + 0x28]
0x2c85:	cmp	rax, qword ptr [rdi + 0x30]
0x2c89:	jae	0x3228


0x2c9a:	mov	dword ptr [rip + 0x20e558], 0
0x2ca4:	lea	rbx, [rip + 0x20d3b5]
0x2cab:	xor	ebp, ebp
0x2cad:	mov	r12d, 1
0x2cb3:	jmp	0x2cc5


0x2c8f:	lea	rdx, [rax + 1]
0x2c93:	mov	qword ptr [rdi + 0x28], rdx
0x2c97:	mov	byte ptr [rax], 0xa
0x2c9a:	mov	dword ptr [rip + 0x20e558], 0
0x2ca4:	lea	rbx, [rip + 0x20d3b5]
0x2cab:	xor	ebp, ebp
0x2cad:	mov	r12d, 1
0x2cb3:	jmp	0x2cc5


0x3228:	mov	esi, 0xa
0x322d:	call	0x2570


0x2cc5:	cmp	qword ptr [rbx], 0
0x2cc9:	je	0x2ec6


0x2ec6:	test	r12b, r12b
0x2ec9:	jne	0x2eeb


0x2ccf:	test	byte ptr [rbx + 0xc], 8
0x2cd3:	jne	0x2cc1


0x2ecb:	mov	rdi, qword ptr [rip + 0x20e1d6]
0x2ed2:	mov	rax, qword ptr [rdi + 0x28]
0x2ed6:	cmp	rax, qword ptr [rdi + 0x30]
0x2eda:	jae	0x3187


0x2eeb:	mov	dword ptr [rip + 0x20e307], 0
0x2ef5:	jmp	0x2aee


0x2cd5:	cmp	dword ptr [rbx + 8], ebp
0x2cd8:	mov	edi, ebp
0x2cda:	je	0x2d16


0x2cc1:	add	rbx, 0x20
0x2cc5:	cmp	qword ptr [rbx], 0
0x2cc9:	je	0x2ec6


0x2ee0:	lea	rdx, [rax + 1]
0x2ee4:	mov	qword ptr [rdi + 0x28], rdx
0x2ee8:	mov	byte ptr [rax], 0xa
0x2eeb:	mov	dword ptr [rip + 0x20e307], 0
0x2ef5:	jmp	0x2aee


0x3187:	mov	esi, 0xa
0x318c:	call	0x2570


0x2d16:	lea	rsi, [rip + 0x20e463]
0x2d1d:	call	0x34d0


0x2cdc:	test	r12b, r12b
0x2cdf:	jne	0x2d0b


0x2ce1:	mov	rdi, qword ptr [rip + 0x20e3c0]
0x2ce8:	mov	rax, qword ptr [rdi + 0x28]
0x2cec:	cmp	rax, qword ptr [rdi + 0x30]
0x2cf0:	jae	0x315a


0x2d0b:	mov	edi, dword ptr [rbx + 8]
0x2d0e:	mov	r12d, 1
0x2d14:	mov	ebp, edi
0x2d16:	lea	rsi, [rip + 0x20e463]
0x2d1d:	call	0x34d0


0x2cf6:	lea	rdx, [rax + 1]
0x2cfa:	mov	qword ptr [rdi + 0x28], rdx
0x2cfe:	mov	byte ptr [rax], 0xa
0x2d01:	mov	dword ptr [rip + 0x20e4f1], 0
0x2d0b:	mov	edi, dword ptr [rbx + 8]
0x2d0e:	mov	r12d, 1
0x2d14:	mov	ebp, edi
0x2d16:	lea	rsi, [rip + 0x20e463]
0x2d1d:	call	0x34d0


0x315a:	mov	esi, 0xa
0x315f:	call	0x2570


0x2c2a:	test	eax, eax
0x2c2c:	je	0x2c52


0x2c2e:	test	r14b, r14b
0x2c31:	lea	rdx, [rip + 0x8970]
0x2c38:	jne	0x2efa


0x2c3e:	lea	rdi, [rip + 0x89c0]
0x2c45:	mov	rsi, rbx
0x2c48:	xor	eax, eax
0x2c4a:	xor	r13d, r13d
0x2c4d:	call	0x3520


0x2efa:	movzx	edi, r14b
0x2efe:	call	0x38b0


0x2f03:	mov	rdx, rax
0x2f06:	jmp	0x2c3e


0x3155:	jmp	0x2c9a


0x3164:	jmp	0x2d01


0x2d01:	mov	dword ptr [rip + 0x20e4f1], 0
0x2d0b:	mov	edi, dword ptr [rbx + 8]
0x2d0e:	mov	r12d, 1
0x2d14:	mov	ebp, edi
0x2d16:	lea	rsi, [rip + 0x20e463]
0x2d1d:	call	0x34d0


0x3191:	jmp	0x2eeb


0x3232:	jmp	0x2c9a


0x31a0:	jmp	0x2be4


0x2be4:	mov	dword ptr [rip + 0x20e60e], 0
0x2bee:	lea	r15, [rip + 0x20d28b]
0x2bf5:	mov	r13d, 1
0x2bfb:	lea	rbp, [rip + 0x8942]
0x2c02:	lea	r12, [rip + 0x20e577]
0x2c09:	jmp	0x2c56


0x2f1c:	mov	rsi, r14
0x2f1f:	mov	edi, 1
0x2f24:	call	0x3b20


0x2f29:	movzx	esi, byte ptr [rip + 0x20e260]
0x2f30:	lea	rdi, [rip + 0x86bd]
0x2f37:	xor	eax, eax
0x2f39:	call	0x3520


0x2f3e:	mov	rdi, qword ptr [rip + 0x20e163]
0x2f45:	mov	rax, qword ptr [rdi + 0x28]
0x2f49:	cmp	rax, qword ptr [rdi + 0x30]
0x2f4d:	jae	0x3169


0x2f53:	lea	rdx, [rax + 1]
0x2f57:	mov	qword ptr [rdi + 0x28], rdx
0x2f5b:	mov	byte ptr [rax], 0xa
0x2f5e:	mov	dword ptr [rip + 0x20e294], 0
0x2f68:	lea	rbx, [rip + 0x20cf11]
0x2f6f:	lea	r12, [rip + 0x85ce]
0x2f76:	lea	r13, [rip + 0x8682]
0x2f7d:	lea	r15, [rip + 0x20e1fc]
0x2f84:	lea	r14, [rip + 0x861d]
0x2f8b:	jmp	0x2fcd


0x3169:	mov	esi, 0xa
0x316e:	call	0x2570


0x2fcd:	mov	rbp, qword ptr [rbx]
0x2fd0:	mov	rsi, r12
0x2fd3:	mov	rdi, rbp
0x2fd6:	call	0x2620


0x2fdb:	test	eax, eax
0x2fdd:	jne	0x2f8d


0x2fdf:	movzx	edx, byte ptr [rip + 0x20e1b0]
0x2fe6:	movzx	esi, byte ptr [rip + 0x20e1aa]
0x2fed:	lea	rdi, [rip + 0x8636]
0x2ff4:	call	0x3520


0x2f8d:	mov	rsi, r13
0x2f90:	mov	rdi, rbp
0x2f93:	call	0x2620


0x2f98:	test	eax, eax
0x2f9a:	je	0x2fc9


0x2fc9:	add	rbx, 0x18
0x2fcd:	mov	rbp, qword ptr [rbx]
0x2fd0:	mov	rsi, r12
0x2fd3:	mov	rdi, rbp
0x2fd6:	call	0x2620


0x2f9c:	mov	rax, qword ptr [rbx + 0x10]
0x2fa0:	mov	rdx, r14
0x2fa3:	movzx	ecx, byte ptr [r15 + rax + 0x11]
0x2fa9:	test	cl, cl
0x2fab:	je	0x2fb8


0x2fb8:	lea	rdi, [rip + 0x8646]
0x2fbf:	mov	rsi, rbp
0x2fc2:	xor	eax, eax
0x2fc4:	call	0x3520


0x2fad:	movzx	edi, cl
0x2fb0:	call	0x38b0


0x2fb5:	mov	rdx, rax
0x2fb8:	lea	rdi, [rip + 0x8646]
0x2fbf:	mov	rsi, rbp
0x2fc2:	xor	eax, eax
0x2fc4:	call	0x3520


0x2ff9:	cmp	dword ptr [rip + 0x20e1fc], 0
0x3000:	je	0x3022


0x3022:	mov	dword ptr [rip + 0x20e1d0], 0
0x302c:	lea	rbx, [rip + 0x20d02d]
0x3033:	xor	r12d, r12d
0x3036:	lea	r13, [rip + 0x20e143]
0x303d:	jmp	0x3043


0x3002:	mov	rdi, qword ptr [rip + 0x20e09f]
0x3009:	mov	rax, qword ptr [rdi + 0x28]
0x300d:	cmp	rax, qword ptr [rdi + 0x30]
0x3011:	jae	0x3219


0x3043:	cmp	qword ptr [rbx], 0
0x3047:	je	0x2ecb


0x3017:	lea	rdx, [rax + 1]
0x301b:	mov	qword ptr [rdi + 0x28], rdx
0x301f:	mov	byte ptr [rax], 0xa
0x3022:	mov	dword ptr [rip + 0x20e1d0], 0
0x302c:	lea	rbx, [rip + 0x20d02d]
0x3033:	xor	r12d, r12d
0x3036:	lea	r13, [rip + 0x20e143]
0x303d:	jmp	0x3043


0x3219:	mov	esi, 0xa
0x321e:	call	0x2570


0x304d:	test	byte ptr [rbx + 0xc], 8
0x3051:	jne	0x303f


0x3053:	mov	ebp, dword ptr [rbx + 8]
0x3056:	cmp	ebp, r12d
0x3059:	je	0x308b


0x303f:	add	rbx, 0x20
0x3043:	cmp	qword ptr [rbx], 0
0x3047:	je	0x2ecb


0x308b:	mov	rsi, r13
0x308e:	mov	edi, ebp
0x3090:	call	0x34d0


0x305b:	mov	rdi, qword ptr [rip + 0x20e046]
0x3062:	mov	rax, qword ptr [rdi + 0x28]
0x3066:	cmp	rax, qword ptr [rdi + 0x30]
0x306a:	jae	0x312c


0x3070:	lea	rdx, [rax + 1]
0x3074:	mov	qword ptr [rdi + 0x28], rdx
0x3078:	mov	byte ptr [rax], 0xa
0x307b:	mov	r12d, ebp
0x307e:	mov	ebp, dword ptr [rbx + 8]
0x3081:	mov	dword ptr [rip + 0x20e171], 0
0x308b:	mov	rsi, r13
0x308e:	mov	edi, ebp
0x3090:	call	0x34d0


0x312c:	mov	esi, 0xa
0x3131:	call	0x2570


0x3136:	jmp	0x307b


0x307b:	mov	r12d, ebp
0x307e:	mov	ebp, dword ptr [rbx + 8]
0x3081:	mov	dword ptr [rip + 0x20e171], 0
0x308b:	mov	rsi, r13
0x308e:	mov	edi, ebp
0x3090:	call	0x34d0


0x3223:	jmp	0x3022


0x3173:	jmp	0x2f5e


0x2f5e:	mov	dword ptr [rip + 0x20e294], 0
0x2f68:	lea	rbx, [rip + 0x20cf11]
0x2f6f:	lea	r12, [rip + 0x85ce]
0x2f76:	lea	r13, [rip + 0x8682]
0x2f7d:	lea	r15, [rip + 0x20e1fc]
0x2f84:	lea	r14, [rip + 0x861d]
0x2f8b:	jmp	0x2fcd


0x2a8f:	test	eax, eax
0x2a91:	jne	0x2b44


0x2a97:	movzx	eax, byte ptr [rsp + 0xd]
0x2a9c:	or	al, byte ptr [rsp + 0xf]
0x2aa0:	jne	0x2b73


0x2aa6:	cmp	byte ptr [rsp + 0xe], 0
0x2aab:	jne	0x2b73


0x2ab1:	mov	byte ptr [rsp + 0x17], 0
0x2ab6:	mov	byte ptr [rsp + 0x16], 0
0x2abb:	sub	rsp, 8
0x2abf:	lea	rax, [rsp + 0x1e]
0x2ac4:	lea	r8, [rip + 0x20e6b5]
0x2acb:	mov	ecx, r13d
0x2ace:	mov	rsi, r14
0x2ad1:	xor	edi, edi
0x2ad3:	mov	rdx, rbx
0x2ad6:	push	rax
0x2ad7:	lea	r9, [rsp + 0x27]
0x2adc:	call	0x4b70


0x2ae1:	pop	rcx
0x2ae2:	pop	rsi
0x2ae3:	cmp	byte ptr [rsp + 0x16], 0
0x2ae8:	jne	0x2df1


0x2df1:	mov	esi, dword ptr [rip + 0x20e219]
0x2df7:	lea	rdx, [rip + 0x20e382]
0x2dfe:	xor	edi, edi
0x2e00:	call	0x2700


0x2700:	jmp	qword ptr [rip + 0x20e872]




0x2e05:	test	eax, eax
0x2e07:	jne	0x3266


0x2e0d:	lea	rsi, [rip + 0x20e32c]
0x2e14:	xor	edi, edi
0x2e16:	call	0x26f0


0x3266:	mov	rdx, r14
0x3269:	mov	esi, 3
0x326e:	xor	edi, edi
0x3270:	call	0x75b0


0x2e1b:	test	eax, eax
0x2e1d:	jne	0x3237


0x2e23:	lea	rsi, [rip + 0x20e316]
0x2e2a:	lea	rdi, [rip + 0x20e34f]
0x2e31:	mov	edx, 0x3c
0x2e36:	call	0x25f0


0x3237:	mov	rdx, r14
0x323a:	mov	esi, 3
0x323f:	xor	edi, edi
0x3241:	call	0x75b0


0x25f0:	jmp	qword ptr [rip + 0x20e8fa]




0x2e3b:	test	eax, eax
0x2e3d:	je	0x2aee


0x2e43:	and	dword ptr [rip + 0x20e2fb], 0xeff0ffff
0x2e4d:	cmp	byte ptr [rsp + 0x17], 0
0x2e52:	jne	0x2e74


0x2e54:	lea	rsi, [rip + 0x20e2e5]
0x2e5b:	lea	rdi, [rip + 0x20e31e]
0x2e62:	mov	edx, 0x3c
0x2e67:	call	0x25f0


0x2e74:	mov	rdx, r14
0x2e77:	mov	esi, 3
0x2e7c:	xor	edi, edi
0x2e7e:	call	0x75b0


0x2e6c:	test	eax, eax
0x2e6e:	je	0x2aee


0x59ca:	mov	esi, dword ptr [rbx]
0x59cc:	lea	rdx, [rip + 0x80f5]
0x59d3:	mov	rcx, rax
0x59d6:	mov	r8, rbp
0x59d9:	xor	edi, edi
0x59db:	xor	eax, eax
0x59dd:	call	0x26e0


0x6f2c:	add	rsp, 0x20
0x6f30:	mov	r11, qword ptr [rsp + 0x10]
0x6f35:	cmp	r11, rax
0x6f38:	ja	0x6fa1


0x6f3a:	lea	rsi, [rax + 1]
0x6f3e:	lea	rax, [rip + 0x20a2db]
0x6f45:	cmp	r12, rax
0x6f48:	mov	qword ptr [rbx], rsi
0x6f4b:	je	0x6f5f


0x6fa1:	mov	eax, dword ptr [rsp + 0x18]
0x6fa5:	mov	dword ptr [r13], eax
0x6fa9:	add	rsp, 0x28
0x6fad:	mov	rax, r12
0x6fb0:	pop	rbx
0x6fb1:	pop	rbp
0x6fb2:	pop	r12
0x6fb4:	pop	r13
0x6fb6:	pop	r14
0x6fb8:	pop	r15
0x6fba:	ret	


0x6f5f:	mov	rdi, rsi
0x6f62:	mov	qword ptr [rsp + 0x10], rsi
0x6f67:	call	0x7dc0


0x6f4d:	mov	rdi, r12
0x6f50:	mov	qword ptr [rsp + 0x10], rsi
0x6f55:	call	0x2430


0x6f5a:	mov	rsi, qword ptr [rsp + 0x10]
0x6f5f:	mov	rdi, rsi
0x6f62:	mov	qword ptr [rsp + 0x10], rsi
0x6f67:	call	0x7dc0


0x6f6c:	sub	rsp, 8
0x6f70:	mov	qword ptr [rbx + 8], rax
0x6f74:	mov	r8d, dword ptr [rbp]
0x6f78:	push	qword ptr [rbp + 0x30]
0x6f7b:	push	qword ptr [rbp + 0x28]
0x6f7e:	mov	rcx, r14
0x6f81:	push	r15
0x6f83:	mov	r9d, dword ptr [rsp + 0x3c]
0x6f88:	mov	rdi, rax
0x6f8b:	mov	rdx, qword ptr [rsp + 0x28]
0x6f90:	mov	rsi, qword ptr [rsp + 0x30]
0x6f95:	mov	r12, rax
0x6f98:	call	0x5c00


0x76b2:	mov	rdi, qword ptr [rsp + 0x38]
0x76b7:	xor	rdi, qword ptr fs:[0x28]
0x76c0:	jne	0x76cc


0x76c2:	add	rsp, 0x48
0x76c6:	ret	


0x76cc:	call	0x2520


0x73ff:	mov	rcx, qword ptr [rsp + 0x38]
0x7404:	xor	rcx, qword ptr fs:[0x28]
0x740d:	jne	0x7419


0x740f:	add	rsp, 0x48
0x7413:	ret	


0x7419:	call	0x2520


0x748b:	mov	rdx, qword ptr [rsp + 0x38]
0x7490:	xor	rdx, qword ptr fs:[0x28]
0x7499:	jne	0x74a5


0x749b:	add	rsp, 0x48
0x749f:	ret	


0x74a5:	call	0x2520


0x761f:	mov	rcx, qword ptr [rsp + 0x38]
0x7624:	xor	rcx, qword ptr fs:[0x28]
0x762d:	jne	0x7639


0x762f:	add	rsp, 0x48
0x7633:	ret	


0x7639:	call	0x2520


0x2e83:	lea	rsi, [rip + 0xabfe]
0x2e8a:	mov	rbx, rax
0x2e8d:	mov	edx, 5
0x2e92:	xor	edi, edi
0x2e94:	call	0x24f0


0x2e99:	mov	rcx, rbx
0x2e9c:	mov	rdx, rax
0x2e9f:	xor	esi, esi
0x2ea1:	mov	edi, 1
0x2ea6:	xor	eax, eax
0x2ea8:	call	0x26e0


0x2ead:	mov	rsi, qword ptr [rbx]
0x2eb0:	lea	rdi, [rip + 0x876f]
0x2eb7:	xor	eax, eax
0x2eb9:	xor	r12d, r12d
0x2ebc:	call	0x3520


0x2ec1:	jmp	0x2cc1


0x3246:	mov	rbx, rax
0x3249:	call	0x2450


0x324e:	mov	esi, dword ptr [rax]
0x3250:	lea	rdx, [rip + 0xa875]
0x3257:	mov	rcx, rbx
0x325a:	mov	edi, 1
0x325f:	xor	eax, eax
0x3261:	call	0x26e0


0x3275:	mov	rbx, rax
0x3278:	call	0x2450


0x327d:	mov	esi, dword ptr [rax]
0x327f:	lea	rdx, [rip + 0xa846]
0x3286:	mov	rcx, rbx
0x3289:	mov	edi, 1
0x328e:	xor	eax, eax
0x3290:	call	0x26e0


0x3295:	lea	rcx, [rip + 0x867c]
0x329c:	lea	rsi, [rip + 0x8213]
0x32a3:	lea	rdi, [rip + 0x8229]
0x32aa:	mov	edx, 0x7f6
0x32af:	call	0x25a0


0x2b53:	mov	rbx, rax
0x2b56:	call	0x2450


0x2b5b:	mov	esi, dword ptr [rax]
0x2b5d:	lea	rdx, [rip + 0xaf68]
0x2b64:	mov	rcx, rbx
0x2b67:	mov	edi, 1
0x2b6c:	xor	eax, eax
0x2b6e:	call	0x26e0


0x32e7:	lea	rsi, [rip + 0xa772]
0x32ee:	mov	edx, 5
0x32f3:	xor	edi, edi
0x32f5:	mov	rbp, rax
0x32f8:	call	0x24f0


0x32fd:	mov	rbx, rax
0x3300:	call	0x2450


0x3305:	mov	esi, dword ptr [rax]
0x3307:	mov	rcx, rbp
0x330a:	mov	rdx, rbx
0x330d:	mov	edi, 1
0x3312:	xor	eax, eax
0x3314:	call	0x26e0


0x3328:	mov	rbx, rax
0x332b:	call	0x2450


0x3330:	mov	esi, dword ptr [rax]
0x3332:	lea	rdx, [rip + 0xa793]
0x3339:	mov	rcx, rbx
0x333c:	mov	edi, 1
0x3341:	xor	eax, eax
0x3343:	call	0x26e0


0x3348:	nop	dword ptr [rax + rax]


0x3ad2:	mov	esi, dword ptr [r14]
0x3ad5:	lea	rdx, [rip + 0x9ff0]
0x3adc:	mov	rcx, rax
0x3adf:	mov	edi, 1
0x3ae4:	xor	eax, eax
0x3ae6:	call	0x26e0


0x3bf7:	lea	rsi, [rip + 0x7d6a]
0x3bfe:	mov	rbx, rax
0x3c01:	mov	edx, 5
0x3c06:	xor	edi, edi
0x3c08:	call	0x24f0


0x3c0d:	mov	rcx, rbx
0x3c10:	mov	rdx, rax
0x3c13:	xor	esi, esi
0x3c15:	mov	edi, 1
0x3c1a:	xor	eax, eax
0x3c1c:	call	0x26e0


0x3c21:	nop	dword ptr [rax + rax]
0x3c26:	nop	word ptr cs:[rax + rax]


0x3bc9:	mov	esi, dword ptr [r12]
0x3bcd:	lea	rdx, [rip + 0x9ef8]
0x3bd4:	mov	rcx, rax
0x3bd7:	mov	edi, 1
0x3bdc:	xor	eax, eax
0x3bde:	call	0x26e0


0x3aff:	mov	rbx, rax
0x3b02:	call	0x2450


0x3b07:	mov	esi, dword ptr [rax]
0x3b09:	lea	rdx, [rip + 0x9fbc]
0x3b10:	mov	rcx, rbx
0x3b13:	mov	edi, 1
0x3b18:	xor	eax, eax
0x3b1a:	call	0x26e0


0x3b1f:	nop	


0x754e:	mov	rsi, qword ptr [rsp + 0x38]
0x7553:	xor	rsi, qword ptr fs:[0x28]
0x755c:	jne	0x7563


0x755e:	add	rsp, 0x48
0x7562:	ret	


0x7563:	call	0x2520


0x6f9d:	add	rsp, 0x20
0x6fa1:	mov	eax, dword ptr [rsp + 0x18]
0x6fa5:	mov	dword ptr [r13], eax
0x6fa9:	add	rsp, 0x28
0x6fad:	mov	rax, r12
0x6fb0:	pop	rbx
0x6fb1:	pop	rbp
0x6fb2:	pop	r12
0x6fb4:	pop	r13
0x6fb6:	pop	r14
0x6fb8:	pop	r15
0x6fba:	ret	


0x71ec:	lea	rsi, [rax + 1]
0x71f0:	mov	qword ptr [rsp + 0x48], rax
0x71f5:	add	rsp, 0x20
0x71f9:	mov	rdi, rsi
0x71fc:	mov	qword ptr [rsp + 0x18], rsi
0x7201:	call	0x7dc0


0x7206:	mov	qword ptr [rsp + 0x10], rax
0x720b:	sub	rsp, 8
0x720f:	push	qword ptr [rbx + 0x30]
0x7212:	push	qword ptr [rbx + 0x28]
0x7215:	mov	r10, qword ptr [rsp + 0x38]
0x721a:	mov	r9d, ebp
0x721d:	mov	r8d, dword ptr [rbx]
0x7220:	mov	rcx, r15
0x7223:	mov	rdx, r14
0x7226:	mov	rdi, rax
0x7229:	push	r10
0x722b:	mov	rsi, qword ptr [rsp + 0x38]
0x7230:	call	0x5c00


0x7235:	mov	eax, dword ptr [rsp + 0x2c]
0x7239:	add	rsp, 0x20
0x723d:	test	r12, r12
0x7240:	mov	dword ptr [r13], eax
0x7244:	je	0x724f


0x724f:	mov	rax, qword ptr [rsp + 0x10]
0x7254:	add	rsp, 0x38
0x7258:	pop	rbx
0x7259:	pop	rbp
0x725a:	pop	r12
0x725c:	pop	r13
0x725e:	pop	r14
0x7260:	pop	r15
0x7262:	ret	


0x7246:	mov	r11, qword ptr [rsp + 0x28]
0x724b:	mov	qword ptr [r12], r11
0x724f:	mov	rax, qword ptr [rsp + 0x10]
0x7254:	add	rsp, 0x38
0x7258:	pop	rbx
0x7259:	pop	rbp
0x725a:	pop	r12
0x725c:	pop	r13
0x725e:	pop	r14
0x7260:	pop	r15
0x7262:	ret	


0x7161:	mov	dword ptr [rbp], r12d
0x7165:	add	rsp, 0x38
0x7169:	pop	rbx
0x716a:	pop	rbp
0x716b:	pop	r12
0x716d:	pop	r13
0x716f:	pop	r14
0x7171:	pop	r15
0x7173:	ret	


0x51d3:	lea	rsi, [rip + 0x639f]
0x51da:	mov	rbx, rax
0x51dd:	mov	edx, 5
0x51e2:	xor	edi, edi
0x51e4:	call	0x24f0


0x51e9:	mov	rcx, rbx
0x51ec:	mov	rdx, rax
0x51ef:	xor	esi, esi
0x51f1:	xor	edi, edi
0x51f3:	xor	eax, eax
0x51f5:	call	0x26e0


0x80c2:	mov	esi, dword ptr [r14]
0x80c5:	mov	r8, rax
0x80c8:	mov	eax, 0
0x80cd:	lea	rdx, [rip + 0x59f4]
0x80d4:	mov	rcx, r13
0x80d7:	cmp	esi, 0x16
0x80da:	cmove	esi, eax
0x80dd:	test	ebx, ebx
0x80df:	mov	eax, 1
0x80e4:	cmove	ebx, eax
0x80e7:	xor	eax, eax
0x80e9:	mov	edi, ebx
0x80eb:	call	0x26e0


0x80f0:	mov	rbp, qword ptr [rsp]
0x80f4:	mov	rdx, qword ptr [rsp + 8]
0x80f9:	xor	rdx, qword ptr fs:[0x28]
0x8102:	mov	rax, rbp
0x8105:	jne	0x814b


0x550b:	mov	edx, 5
0x5510:	mov	rbx, rax
0x5513:	lea	rsi, [rip + 0x5fff]
0x551a:	jmp	0x50b1


0x50b1:	xor	edi, edi
0x50b3:	call	0x24f0


0x50b8:	xor	edi, edi
0x50ba:	mov	rdx, rax
0x50bd:	mov	rcx, rbx
0x50c0:	xor	esi, esi
0x50c2:	xor	eax, eax
0x50c4:	call	0x26e0


0x50c9:	mov	edi, 1
0x50ce:	call	0x3c30


0x5609:	mov	edx, 5
0x560e:	mov	rbx, rax
0x5611:	lea	rsi, [rip + 0x5f15]
0x5618:	jmp	0x50b1


0x50a2:	lea	rsi, [rip + 0x6470]
0x50a9:	mov	rbx, rax
0x50ac:	mov	edx, 5
0x50b1:	xor	edi, edi
0x50b3:	call	0x24f0


0x3095:	mov	rdx, qword ptr [rbx + 0x18]
0x3099:	test	rdx, rdx
0x309c:	jne	0x30a2


0x309e:	mov	rdx, qword ptr [rbx + 0x10]
0x30a2:	test	rax, rax
0x30a5:	je	0x3295


0x30a2:	test	rax, rax
0x30a5:	je	0x3295


0x30ab:	and	edx, dword ptr [rax]
0x30ad:	cmp	rdx, qword ptr [rbx + 0x10]
0x30b1:	je	0x30cf


0x30cf:	mov	rsi, qword ptr [rbx]
0x30d2:	lea	rdi, [rip + 0xa9f3]
0x30d9:	xor	eax, eax
0x30db:	call	0x3520


0x30b3:	test	byte ptr [rbx + 0xc], 4
0x30b7:	je	0x303f


0x30b9:	mov	rsi, qword ptr [rbx]
0x30bc:	lea	rdi, [rip + 0x8563]
0x30c3:	xor	eax, eax
0x30c5:	call	0x3520


0x30ca:	jmp	0x303f


0x30e0:	jmp	0x303f


0x2d22:	mov	rdx, qword ptr [rbx + 0x18]
0x2d26:	test	rdx, rdx
0x2d29:	jne	0x2d2f


0x2d2b:	mov	rdx, qword ptr [rbx + 0x10]
0x2d2f:	test	rax, rax
0x2d32:	je	0x31a5


0x2d2f:	test	rax, rax
0x2d32:	je	0x31a5


0x31a5:	lea	rcx, [rip + 0x8784]
0x31ac:	lea	rsi, [rip + 0x8303]
0x31b3:	lea	rdi, [rip + 0x8319]
0x31ba:	mov	edx, 0x7a2
0x31bf:	call	0x25a0


0x2d38:	and	edx, dword ptr [rax]
0x2d3a:	movzx	ecx, byte ptr [rbx + 0xc]
0x2d3e:	cmp	rdx, qword ptr [rbx + 0x10]
0x2d42:	jne	0x2cb5


0x2d48:	and	cl, 2
0x2d4b:	je	0x2cc1


0x2cb5:	and	ecx, 5
0x2cb8:	cmp	cl, 5
0x2cbb:	je	0x2ead


0x2d51:	mov	rsi, qword ptr [rbx]
0x2d54:	lea	rdi, [rip + 0xad71]
0x2d5b:	xor	eax, eax
0x2d5d:	xor	r12d, r12d
0x2d60:	call	0x3520


0x2d65:	jmp	0x2cc1


0x4f21:	test	rax, rax
0x4f24:	je	0x52a9


0x52a9:	lea	rsi, [rip + 0x62eb]
0x52b0:	mov	rdi, r15
0x52b3:	call	0x2620


0x4f2a:	mov	rdx, qword ptr [r12 + 0x10]
0x4f2f:	or	edx, dword ptr [r12 + 0x18]
0x4f34:	not	edx
0x4f36:	and	dword ptr [rax], edx
0x4f38:	mov	rax, qword ptr [rsp + 0x20]
0x4f3d:	mov	byte ptr [rax], 1
0x4f40:	jmp	0x4be4


0x52b8:	test	eax, eax
0x52ba:	jne	0x5669


0x52c0:	mov	rcx, qword ptr [rsp + 0x18]
0x52c5:	mov	eax, dword ptr [rcx + 8]
0x52c8:	mov	dword ptr [rsp], eax
0x52cb:	and	eax, 0xfffffecf
0x52d0:	or	eax, 0x30
0x52d3:	mov	dword ptr [rcx + 8], eax
0x52d6:	mov	rax, qword ptr [rsp + 0x20]
0x52db:	mov	byte ptr [rax], 1
0x52de:	jmp	0x4be4


0x5669:	lea	rsi, [rip + 0x5f31]
0x5670:	mov	rdi, r15
0x5673:	call	0x2620


0x5678:	test	eax, eax
0x567a:	je	0x52c0


0x5680:	jmp	0x510d


0x510d:	lea	rsi, [rip + 0x6395]
0x5114:	mov	rdi, r15
0x5117:	call	0x2620


0x511c:	test	eax, eax
0x511e:	jne	0x525d


0x5124:	cmp	byte ptr [rsp], 0
0x5128:	mov	rcx, qword ptr [rsp + 0x18]
0x512d:	mov	eax, dword ptr [rcx + 8]
0x5130:	jne	0x52cb


0x525d:	lea	rsi, [rip + 0x6631]
0x5264:	mov	rdi, r15
0x5267:	call	0x2620


0x5136:	mov	rcx, qword ptr [rsp + 0x18]
0x513b:	and	eax, 0xfffffccf
0x5140:	or	eax, 0x320
0x5145:	mov	dword ptr [rcx + 8], eax
0x5148:	mov	rax, qword ptr [rsp + 0x20]
0x514d:	mov	byte ptr [rax], 1
0x5150:	jmp	0x4be4


0x52cb:	and	eax, 0xfffffecf
0x52d0:	or	eax, 0x30
0x52d3:	mov	dword ptr [rcx + 8], eax
0x52d6:	mov	rax, qword ptr [rsp + 0x20]
0x52db:	mov	byte ptr [rax], 1
0x52de:	jmp	0x4be4


0x526c:	test	eax, eax
0x526e:	jne	0x5321


0x5274:	cmp	byte ptr [rsp], 0
0x5278:	mov	rcx, qword ptr [rsp + 0x18]
0x527d:	mov	eax, dword ptr [rcx + 4]
0x5280:	mov	edx, dword ptr [rcx]
0x5282:	je	0x53c0


0x5321:	lea	rsi, [rip + 0x6186]
0x5328:	mov	rdi, r15
0x532b:	call	0x2620


0x53c0:	mov	rcx, qword ptr [rsp + 0x18]
0x53c5:	and	eax, 0xfffffffb
0x53c8:	and	dh, 0xfe
0x53cb:	mov	dword ptr [rcx + 4], eax
0x53ce:	mov	rax, qword ptr [rsp + 0x20]
0x53d3:	mov	dword ptr [rcx], edx
0x53d5:	mov	byte ptr [rax], 1
0x53d8:	jmp	0x4be4


0x5288:	and	eax, 0xffffffd3
0x528b:	and	edx, 0xfffffe3f
0x5291:	or	eax, 4
0x5294:	or	dh, 1
0x5297:	mov	dword ptr [rcx + 4], eax
0x529a:	mov	rax, qword ptr [rsp + 0x20]
0x529f:	mov	dword ptr [rcx], edx
0x52a1:	mov	byte ptr [rax], 1
0x52a4:	jmp	0x4be4


0x5330:	test	eax, eax
0x5332:	je	0x53dd


0x53dd:	mov	rax, qword ptr [rsp + 0x18]
0x53e2:	mov	word ptr [rax + 0x13], 0x157f
0x53e8:	mov	rax, qword ptr [rsp + 0x20]
0x53ed:	mov	byte ptr [rax], 1
0x53f0:	jmp	0x4be4


0x5338:	lea	rsi, [rip + 0x6172]
0x533f:	mov	rdi, r15
0x5342:	call	0x2620


0x5347:	test	eax, eax
0x5349:	je	0x5578


0x5578:	lea	rax, [rip + 0x20a901]
0x557f:	add	rax, 0x18
0x5583:	cmp	qword ptr [rax - 0x18], 0
0x5588:	je	0x559d


0x534f:	lea	rsi, [rip + 0x6183]
0x5356:	mov	rdi, r15
0x5359:	call	0x2620


0x559d:	lea	rbx, [rip + 0x20aabc]
0x55a4:	jmp	0x55c8


0x558a:	movzx	ecx, byte ptr [rax - 0x10]
0x558e:	mov	rdx, qword ptr [rax - 8]
0x5592:	mov	rsi, qword ptr [rsp + 0x18]
0x5597:	mov	byte ptr [rsi + rdx + 0x11], cl
0x559b:	jmp	0x557f


0x55c8:	cmp	qword ptr [rbx], 0
0x55cc:	je	0x51fa


0x557f:	add	rax, 0x18
0x5583:	cmp	qword ptr [rax - 0x18], 0
0x5588:	je	0x559d


0x55d2:	movzx	eax, byte ptr [rbx + 0xc]
0x55d6:	test	al, 0x10
0x55d8:	jne	0x55c4


0x55da:	test	al, 1
0x55dc:	jne	0x55a6


0x55c4:	add	rbx, 0x20
0x55c8:	cmp	qword ptr [rbx], 0
0x55cc:	je	0x51fa


0x55de:	test	al, 2
0x55e0:	je	0x55c4


0x55a6:	mov	edi, dword ptr [rbx + 8]
0x55a9:	mov	rsi, qword ptr [rsp + 0x18]
0x55ae:	call	0x34d0


0x55e2:	mov	edi, dword ptr [rbx + 8]
0x55e5:	mov	rsi, qword ptr [rsp + 0x18]
0x55ea:	call	0x34d0


0x535e:	test	eax, eax
0x5360:	jne	0x552a


0x5366:	cmp	byte ptr [rsp], 0
0x536a:	mov	rcx, qword ptr [rsp + 0x18]
0x536f:	mov	eax, dword ptr [rcx + 0xc]
0x5372:	je	0x5685


0x552a:	lea	rsi, [rip + 0x5faf]
0x5531:	mov	rdi, r15
0x5534:	call	0x2620


0x5685:	mov	rcx, qword ptr [rsp + 0x18]
0x568a:	and	eax, 0xfffffffd
0x568d:	mov	dword ptr [rcx + 0xc], eax
0x5690:	mov	rax, qword ptr [rsp + 0x20]
0x5695:	mov	byte ptr [rax], 1
0x5698:	jmp	0x4be4


0x5378:	or	eax, 2
0x537b:	mov	dword ptr [rcx + 0xc], eax
0x537e:	mov	rax, qword ptr [rsp + 0x20]
0x5383:	mov	byte ptr [rax], 1
0x5386:	jmp	0x4be4


0x5539:	test	eax, eax
0x553b:	jne	0x56ba


0x5541:	mov	rcx, qword ptr [rsp + 0x18]
0x5546:	mov	eax, dword ptr [rcx + 8]
0x5549:	mov	edx, dword ptr [rcx]
0x554b:	mov	dword ptr [rsp + 0x10], eax
0x554f:	and	eax, 0xfffffecf
0x5554:	cmp	byte ptr [rsp], 0
0x5558:	je	0x569d


0x56ba:	lea	rsi, [rip + 0x5e25]
0x56c1:	mov	rdi, r15
0x56c4:	call	0x2620


0x569d:	mov	rcx, qword ptr [rsp + 0x18]
0x56a2:	or	eax, 0x30
0x56a5:	and	edx, 0xffffffdf
0x56a8:	mov	dword ptr [rcx + 8], eax
0x56ab:	mov	rax, qword ptr [rsp + 0x20]
0x56b0:	mov	dword ptr [rcx], edx
0x56b2:	mov	byte ptr [rax], 1
0x56b5:	jmp	0x4be4


0x555e:	or	eax, 0x120
0x5563:	or	edx, 0x20
0x5566:	mov	dword ptr [rcx + 8], eax
0x5569:	mov	rax, qword ptr [rsp + 0x20]
0x556e:	mov	dword ptr [rcx], edx
0x5570:	mov	byte ptr [rax], 1
0x5573:	jmp	0x4be4


0x56c9:	test	eax, eax
0x56cb:	jne	0x570d


0x56cd:	mov	rsi, qword ptr [rsp + 0x18]
0x56d2:	mov	eax, dword ptr [rsi + 8]
0x56d5:	mov	edx, dword ptr [rsi + 4]
0x56d8:	mov	ecx, dword ptr [rsi]
0x56da:	mov	dword ptr [rsp + 0x10], eax
0x56de:	and	eax, 0xfffffecf
0x56e3:	cmp	byte ptr [rsp], 0
0x56e7:	je	0x5795


0x570d:	lea	rsi, [rip + 0x5dd9]
0x5714:	mov	rdi, r15
0x5717:	call	0x2620


0x5795:	mov	rsi, qword ptr [rsp + 0x18]
0x579a:	or	eax, 0x30
0x579d:	and	ecx, 0xffffffdf
0x57a0:	and	edx, 0xfffffffe
0x57a3:	mov	dword ptr [rsi + 8], eax
0x57a6:	mov	rax, qword ptr [rsp + 0x20]
0x57ab:	mov	dword ptr [rsi], ecx
0x57ad:	mov	dword ptr [rsi + 4], edx
0x57b0:	mov	byte ptr [rax], 1
0x57b3:	jmp	0x4be4


0x56ed:	or	eax, 0x120
0x56f2:	or	ecx, 0x20
0x56f5:	or	edx, 1
0x56f8:	mov	dword ptr [rsi + 8], eax
0x56fb:	mov	rax, qword ptr [rsp + 0x20]
0x5700:	mov	dword ptr [rsi], ecx
0x5702:	mov	dword ptr [rsi + 4], edx
0x5705:	mov	byte ptr [rax], 1
0x5708:	jmp	0x4be4


0x571c:	test	eax, eax
0x571e:	je	0x5737


0x5737:	movzx	eax, byte ptr [r15]
0x573b:	cmp	al, 0x72
0x573d:	je	0x576f


0x5720:	lea	rsi, [rip + 0x5dca]
0x5727:	mov	rdi, r15
0x572a:	call	0x2620


0x576f:	cmp	byte ptr [rsp], 0
0x5773:	je	0x5749


0x573f:	cmp	al, 0x63
0x5741:	jne	0x5749


0x5749:	mov	rax, qword ptr [rsp + 0x18]
0x574e:	mov	dword ptr [rax], 0
0x5754:	and	dword ptr [rax + 4], 0xfffffffe
0x5758:	and	dword ptr [rax + 0xc], 0xfffffff8
0x575c:	mov	word ptr [rax + 0x16], 0x100
0x5762:	mov	rax, qword ptr [rsp + 0x20]
0x5767:	mov	byte ptr [rax], 1
0x576a:	jmp	0x4be4


0x5775:	mov	rax, qword ptr [rsp + 0x18]
0x577a:	or	dword ptr [rax], 0x526
0x5780:	or	dword ptr [rax + 4], 1
0x5784:	or	dword ptr [rax + 0xc], 3
0x5788:	mov	rax, qword ptr [rsp + 0x20]
0x578d:	mov	byte ptr [rax], 1
0x5790:	jmp	0x4be4


0x5743:	cmp	byte ptr [rsp], 0
0x5747:	je	0x5775


0x572f:	test	eax, eax
0x5731:	jne	0x57b8


0x57b8:	lea	rsi, [rip + 0x5d39]
0x57bf:	mov	rdi, r15
0x57c2:	call	0x2620


0x57c7:	test	eax, eax
0x57c9:	jne	0x57ea


0x57cb:	cmp	byte ptr [rsp], 0
0x57cf:	mov	rcx, qword ptr [rsp + 0x18]
0x57d4:	mov	eax, dword ptr [rcx]
0x57d6:	je	0x581e


0x57ea:	lea	rsi, [rip + 0x5d0f]
0x57f1:	mov	rdi, r15
0x57f4:	call	0x2620


0x581e:	mov	rcx, qword ptr [rsp + 0x18]
0x5823:	and	ah, 0xf7
0x5826:	mov	dword ptr [rcx], eax
0x5828:	mov	rax, qword ptr [rsp + 0x20]
0x582d:	mov	byte ptr [rax], 1
0x5830:	jmp	0x4be4


0x57d8:	or	ah, 8
0x57db:	mov	dword ptr [rcx], eax
0x57dd:	mov	rax, qword ptr [rsp + 0x20]
0x57e2:	mov	byte ptr [rax], 1
0x57e5:	jmp	0x4be4


0x57f9:	test	eax, eax
0x57fb:	jne	0x584d


0x57fd:	cmp	byte ptr [rsp], 0
0x5801:	mov	rcx, qword ptr [rsp + 0x18]
0x5806:	mov	eax, dword ptr [rcx + 4]
0x5809:	je	0x5835


0x584d:	lea	rsi, [rip + 0x5cb1]
0x5854:	mov	rdi, r15
0x5857:	call	0x2620


0x5835:	mov	rcx, qword ptr [rsp + 0x18]
0x583a:	and	ah, 0xe7
0x583d:	mov	dword ptr [rcx + 4], eax
0x5840:	mov	rax, qword ptr [rsp + 0x20]
0x5845:	mov	byte ptr [rax], 1
0x5848:	jmp	0x4be4


0x580b:	or	ah, 0x18
0x580e:	mov	dword ptr [rcx + 4], eax
0x5811:	mov	rax, qword ptr [rsp + 0x20]
0x5816:	mov	byte ptr [rax], 1
0x5819:	jmp	0x4be4


0x585c:	test	eax, eax
0x585e:	je	0x5873


0x5873:	cmp	byte ptr [rsp], 0
0x5877:	mov	rsi, qword ptr [rsp + 0x18]
0x587c:	mov	eax, dword ptr [rsi + 4]
0x587f:	mov	ecx, dword ptr [rsi + 0xc]
0x5882:	mov	edx, dword ptr [rsi]
0x5884:	je	0x58f7


0x5860:	lea	rsi, [rip + 0x5ca4]
0x5867:	mov	rdi, r15
0x586a:	call	0x2620


0x58f7:	mov	rsi, qword ptr [rsp + 0x18]
0x58fc:	or	eax, 2
0x58ff:	or	ecx, 4
0x5902:	or	dh, 2
0x5905:	mov	dword ptr [rsi + 4], eax
0x5908:	mov	rax, qword ptr [rsp + 0x20]
0x590d:	mov	dword ptr [rsi + 0xc], ecx
0x5910:	mov	dword ptr [rsi], edx
0x5912:	mov	byte ptr [rax], 1
0x5915:	jmp	0x4be4


0x5886:	and	eax, 0xfffffffd
0x5889:	and	ecx, 0xfffffffb
0x588c:	and	dh, 0xfd
0x588f:	mov	dword ptr [rsi + 4], eax
0x5892:	mov	rax, qword ptr [rsp + 0x20]
0x5897:	mov	dword ptr [rsi + 0xc], ecx
0x589a:	mov	dword ptr [rsi], edx
0x589c:	mov	byte ptr [rax], 1
0x589f:	jmp	0x4be4


0x586f:	test	eax, eax
0x5871:	jne	0x58a4


0x58a4:	lea	rsi, [rip + 0x5c66]
0x58ab:	mov	rdi, r15
0x58ae:	call	0x2620


0x58b3:	test	eax, eax
0x58b5:	je	0x591a


0x591a:	mov	rax, qword ptr [rsp + 0x18]
0x591f:	or	dword ptr [rax + 0xc], 0xa10
0x5926:	mov	rax, qword ptr [rsp + 0x20]
0x592b:	mov	byte ptr [rax], 1
0x592e:	jmp	0x4be4


0x58b7:	lea	rsi, [rip + 0x5c57]
0x58be:	mov	rdi, r15
0x58c1:	call	0x2620


0x58c6:	test	eax, eax
0x58c8:	jne	0x51fa


0x58ce:	mov	rax, qword ptr [rsp + 0x18]
0x58d3:	and	dword ptr [rax], 0xfffff7ff
0x58d9:	mov	byte ptr [rax + 0x11], 3
0x58dd:	mov	word ptr [rax + 0x13], 0x157f
0x58e3:	or	dword ptr [rax + 0xc], 0xa10
0x58ea:	mov	rax, qword ptr [rsp + 0x20]
0x58ef:	mov	byte ptr [rax], 1
0x58f2:	jmp	0x4be4


0x55ef:	test	rax, rax
0x55f2:	je	0x563c


0x563c:	lea	rcx, [rip + 0x62c5]
0x5643:	lea	rsi, [rip + 0x5e6c]
0x564a:	lea	rdi, [rip + 0x5e82]
0x5651:	mov	edx, 0x8d1
0x5656:	call	0x25a0


0x55f4:	mov	rdx, qword ptr [rbx + 0x10]
0x55f8:	or	edx, dword ptr [rbx + 0x18]
0x55fb:	not	edx
0x55fd:	and	dword ptr [rax], edx
0x55ff:	jmp	0x55c4


0x55b3:	test	rax, rax
0x55b6:	je	0x561d


0x561d:	lea	rcx, [rip + 0x62e4]
0x5624:	lea	rsi, [rip + 0x5e8b]
0x562b:	lea	rdi, [rip + 0x5ea1]
0x5632:	mov	edx, 0x8cb
0x5637:	call	0x25a0


0x55b8:	mov	edx, dword ptr [rbx + 0x18]
0x55bb:	not	edx
0x55bd:	and	edx, dword ptr [rax]
0x55bf:	or	edx, dword ptr [rbx + 0x10]
0x55c2:	mov	dword ptr [rax], edx
0x55c4:	add	rbx, 0x20
0x55c8:	cmp	qword ptr [rbx], 0
0x55cc:	je	0x51fa


0x4fe7:	test	rax, rax
0x4fea:	je	0x50d8


0x50d8:	lea	rdi, [rip + 0x64bc]
0x50df:	mov	ecx, 6
0x50e4:	mov	rsi, r15
0x50e7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4ff0:	mov	edx, dword ptr [r12 + 0x18]
0x4ff5:	not	edx
0x4ff7:	and	edx, dword ptr [rax]
0x4ff9:	or	edx, dword ptr [r12 + 0x10]
0x4ffe:	mov	dword ptr [rax], edx
0x5000:	mov	rax, qword ptr [rsp + 0x20]
0x5005:	mov	byte ptr [rax], 1
0x5008:	jmp	0x4be4


0x50e7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x50e9:	seta	al
0x50ec:	sbb	al, 0
0x50ee:	test	al, al
0x50f0:	je	0x5207


0x5207:	mov	rcx, qword ptr [rsp + 0x18]
0x520c:	mov	eax, dword ptr [rcx + 8]
0x520f:	mov	dword ptr [rsp], eax
0x5212:	and	eax, 0xfffffccf
0x5217:	or	eax, 0x120
0x521c:	mov	dword ptr [rcx + 8], eax
0x521f:	mov	rax, qword ptr [rsp + 0x20]
0x5224:	mov	byte ptr [rax], 1
0x5227:	jmp	0x4be4


0x50f6:	lea	rsi, [rip + 0x64a4]
0x50fd:	mov	rdi, r15
0x5100:	call	0x2620


0x5105:	test	eax, eax
0x5107:	je	0x5207


0xb28d:	add	rbx, 1
0xb291:	cmp	rbp, rbx
0xb294:	jne	0xb280


0xb280:	mov	rdx, r15
0xb283:	mov	rsi, r14
0xb286:	mov	edi, r13d
0xb289:	call	qword ptr [r12 + rbx*8]






0x9bc0:	mov	rax, qword ptr [r13 + 0x50]
0x9bc4:	lea	rdi, [r15 + r14]
0x9bc8:	shl	rax, 5
0x9bcc:	add	rax, qword ptr [rbp - 0x3a8]
0x9bd3:	movzx	r9d, byte ptr [rax + 0x10]
0x9bd8:	mov	eax, dword ptr [rbp - 0x3e0]
0x9bde:	cmp	eax, 1
0x9be1:	jne	0x98ee


0x98c8:	mov	rax, qword ptr [r13 + 0x50]
0x98cc:	lea	rdi, [r15 + r14]
0x98d0:	shl	rax, 5
0x98d4:	add	rax, qword ptr [rbp - 0x3a8]
0x98db:	mov	r9d, dword ptr [rax + 0x10]
0x98df:	mov	eax, dword ptr [rbp - 0x3e0]
0x98e5:	cmp	eax, 1
0x98e8:	je	0x9b20


0x9a78:	mov	rax, qword ptr [r13 + 0x50]
0x9a7c:	lea	rdi, [r15 + r14]
0x9a80:	shl	rax, 5
0x9a84:	add	rax, qword ptr [rbp - 0x3a8]
0x9a8b:	movsd	xmm0, qword ptr [rax + 0x10]
0x9a90:	mov	eax, dword ptr [rbp - 0x3e0]
0x9a96:	cmp	eax, 1
0x9a99:	je	0xa030


0x9bf0:	mov	rax, qword ptr [r13 + 0x50]
0x9bf4:	lea	rdi, [r15 + r14]
0x9bf8:	shl	rax, 5
0x9bfc:	add	rax, qword ptr [rbp - 0x3a8]
0x9c03:	movsx	r9d, byte ptr [rax + 0x10]
0x9c08:	mov	eax, dword ptr [rbp - 0x3e0]
0x9c0e:	cmp	eax, 1
0x9c11:	jne	0x98ee


0x9af8:	mov	rax, qword ptr [r13 + 0x50]
0x9afc:	lea	rdi, [r15 + r14]
0x9b00:	shl	rax, 5
0x9b04:	add	rax, qword ptr [rbp - 0x3a8]
0x9b0b:	movzx	r9d, word ptr [rax + 0x10]
0x9b10:	mov	eax, dword ptr [rbp - 0x3e0]
0x9b16:	cmp	eax, 1
0x9b19:	jne	0x98ee


0x9790:	mov	rax, qword ptr [r13 + 0x50]
0x9794:	lea	rdi, [r15 + r14]
0x9798:	shl	rax, 5
0x979c:	add	rax, qword ptr [rbp - 0x3a8]
0x97a3:	mov	r9, qword ptr [rax + 0x10]
0x97a7:	mov	eax, dword ptr [rbp - 0x3e0]
0x97ad:	cmp	eax, 1
0x97b0:	je	0x9c78


0x99f0:	mov	rax, qword ptr [r13 + 0x50]
0x99f4:	lea	rdi, [r15 + r14]
0x99f8:	shl	rax, 5
0x99fc:	add	rax, qword ptr [rbp - 0x3a8]
0x9a03:	fld	xword ptr [rax + 0x10]
0x9a06:	mov	eax, dword ptr [rbp - 0x3e0]
0x9a0c:	cmp	eax, 1
0x9a0f:	je	0xa040


0x9b38:	mov	rax, qword ptr [r13 + 0x50]
0x9b3c:	lea	rdi, [r15 + r14]
0x9b40:	shl	rax, 5
0x9b44:	add	rax, qword ptr [rbp - 0x3a8]
0x9b4b:	movsx	r9d, word ptr [rax + 0x10]
0x9b50:	mov	eax, dword ptr [rbp - 0x3e0]
0x9b56:	cmp	eax, 1
0x9b59:	je	0x9b20


0xa482:	mov	r11d, dword ptr [rdi + 4]
0xa486:	cmp	r11d, 0xaf
0xa48d:	ja	0xa53d


0xa3c6:	mov	r11d, dword ptr [rdi]
0xa3c9:	cmp	r11d, 0x2f
0xa3cd:	ja	0xa50a


0xa3ea:	mov	r11d, dword ptr [rdi]
0xa3ed:	cmp	r11d, 0x2f
0xa3f1:	ja	0xa52c


0xa40c:	mov	r11d, dword ptr [rdi]
0xa40f:	cmp	r11d, 0x2f
0xa413:	ja	0xa51b


0xa42e:	mov	r11d, dword ptr [rdi]
0xa431:	cmp	r11d, 0x2f
0xa435:	ja	0xa4da


0xa390:	mov	rdx, qword ptr [rdi + 8]
0xa394:	add	rdx, 0xf
0xa398:	and	rdx, 0xfffffffffffffff0
0xa39c:	lea	r11, [rdx + 0x10]
0xa3a0:	mov	qword ptr [rdi + 8], r11
0xa3a4:	fld	xword ptr [rdx]
0xa3a6:	fstp	xword ptr [rax + 0x10]
0xa3a9:	nop	dword ptr [rax]
0xa3b0:	add	rcx, 1
0xa3b4:	add	rax, 0x20
0xa3b8:	cmp	qword ptr [rsi], rcx
0xa3bb:	ja	0xa378


0xa4b0:	mov	r11d, dword ptr [rdi]
0xa4b3:	cmp	r11d, 0x2f
0xa4b7:	ja	0xa4fc


0xa454:	mov	r11d, dword ptr [rdi]
0xa457:	cmp	r11d, 0x2f
0xa45b:	ja	0xa4eb


0x79e0:	mov	r13, qword ptr [rbx + 0x10]
0x79e4:	mov	r12, qword ptr [rbx + 8]
0x79e8:	lea	rsi, [rip + 0x6637]
0x79ef:	mov	rbx, qword ptr [rbx]
0x79f2:	mov	edx, 5
0x79f7:	xor	edi, edi
0x79f9:	call	0x24f0


0x7b20:	mov	r9, qword ptr [rbx + 0x10]
0x7b24:	mov	r13, qword ptr [rbx + 0x30]
0x7b28:	lea	rsi, [rip + 0x6699]
0x7b2f:	mov	r12, qword ptr [rbx + 0x28]
0x7b33:	mov	r15, qword ptr [rbx + 0x20]
0x7b37:	mov	edx, 5
0x7b3c:	mov	r14, qword ptr [rbx + 0x18]
0x7b40:	mov	r8, qword ptr [rbx + 8]
0x7b44:	xor	edi, edi
0x7b46:	mov	qword ptr [rsp + 8], r9
0x7b4b:	mov	rbx, qword ptr [rbx]
0x7b4e:	mov	qword ptr [rsp], r8
0x7b52:	call	0x24f0


0x7900:	mov	r10, qword ptr [rbx + 0x40]
0x7904:	mov	r9, qword ptr [rbx + 0x38]
0x7908:	lea	rsi, [rip + 0x6919]
0x790f:	mov	rax, qword ptr [rbx + 0x10]
0x7913:	mov	r8, qword ptr [rbx + 8]
0x7917:	mov	edx, 5
0x791c:	mov	r13, qword ptr [rbx + 0x30]
0x7920:	mov	r12, qword ptr [rbx + 0x28]
0x7924:	mov	r15, qword ptr [rbx + 0x20]
0x7928:	mov	r14, qword ptr [rbx + 0x18]
0x792c:	mov	rbx, qword ptr [rbx]
0x792f:	mov	qword ptr [rsp + 0x18], r10
0x7934:	mov	qword ptr [rsp + 0x10], r9
0x7939:	mov	qword ptr [rsp], rax
0x793d:	mov	qword ptr [rsp + 8], r8
0x7942:	xor	edi, edi
0x7944:	call	0x24f0


0x7998:	mov	r12, qword ptr [rbx + 8]
0x799c:	lea	rsi, [rip + 0x666c]
0x79a3:	mov	rbx, qword ptr [rbx]
0x79a6:	mov	edx, 5
0x79ab:	xor	edi, edi
0x79ad:	call	0x24f0


0x78c6:	add	rsp, 0x28
0x78ca:	pop	rbx
0x78cb:	pop	rbp
0x78cc:	pop	r12
0x78ce:	pop	r13
0x78d0:	pop	r14
0x78d2:	pop	r15
0x78d4:	ret	


0x7a88:	mov	r15, qword ptr [rbx + 0x20]
0x7a8c:	lea	rsi, [rip + 0x66e5]
0x7a93:	mov	edx, 5
0x7a98:	xor	edi, edi
0x7a9a:	mov	r14, qword ptr [rbx + 0x18]
0x7a9e:	mov	r13, qword ptr [rbx + 0x10]
0x7aa2:	mov	r12, qword ptr [rbx + 8]
0x7aa6:	mov	rbx, qword ptr [rbx]
0x7aa9:	call	0x24f0


0x7ab8:	mov	r8, qword ptr [rbx + 8]
0x7abc:	mov	r12, qword ptr [rbx + 0x28]
0x7ac0:	lea	rsi, [rip + 0x66d9]
0x7ac7:	mov	r15, qword ptr [rbx + 0x20]
0x7acb:	mov	r14, qword ptr [rbx + 0x18]
0x7acf:	mov	edx, 5
0x7ad4:	mov	r13, qword ptr [rbx + 0x10]
0x7ad8:	xor	edi, edi
0x7ada:	mov	rbx, qword ptr [rbx]
0x7add:	mov	qword ptr [rsp], r8
0x7ae1:	call	0x24f0


0x7a30:	lea	rsi, [rip + 0x6721]
0x7a37:	mov	edx, 5
0x7a3c:	xor	edi, edi
0x7a3e:	mov	r14, qword ptr [rbx + 0x18]
0x7a42:	mov	r13, qword ptr [rbx + 0x10]
0x7a46:	mov	r12, qword ptr [rbx + 8]
0x7a4a:	mov	rbx, qword ptr [rbx]
0x7a4d:	call	0x24f0


0x7850:	mov	r9, qword ptr [rbx + 0x38]
0x7854:	mov	rax, qword ptr [rbx + 0x10]
0x7858:	lea	rsi, [rip + 0x6999]
0x785f:	mov	r8, qword ptr [rbx + 8]
0x7863:	mov	edx, 5
0x7868:	xor	edi, edi
0x786a:	mov	r13, qword ptr [rbx + 0x30]
0x786e:	mov	r12, qword ptr [rbx + 0x28]
0x7872:	mov	qword ptr [rsp + 0x10], r9
0x7877:	mov	r15, qword ptr [rbx + 0x20]
0x787b:	mov	r14, qword ptr [rbx + 0x18]
0x787f:	mov	qword ptr [rsp], rax
0x7883:	mov	qword ptr [rsp + 8], r8
0x7888:	mov	rbx, qword ptr [rbx]
0x788b:	call	0x24f0


0x7958:	mov	rbx, qword ptr [rbx]
0x795b:	lea	rsi, [rip + 0x669d]
0x7962:	mov	edx, 5
0x7967:	xor	edi, edi
0x7969:	call	0x24f0


0x9fa0:	mov	byte ptr [rax], r14b
0x9fa3:	mov	rbx, r14
0x9fa6:	jmp	0x9cc4


0x9e70:	mov	qword ptr [rax], r14
0x9e73:	mov	rbx, r14
0x9e76:	jmp	0x9cc4


0x9fb0:	mov	dword ptr [rax], r14d
0x9fb3:	mov	rbx, r14
0x9fb6:	jmp	0x9cc4


0x9fc0:	mov	word ptr [rax], r14w
0x9fc4:	mov	rbx, r14
0x9fc7:	jmp	0x9cc4


0x9be7:	jmp	0x9b20


0x98ee:	cmp	eax, 2
0x98f1:	je	0x9b68


0x9b20:	push	qword ptr [rbp - 0x3f0]
0x9b26:	push	r9
0x9b28:	mov	r9d, dword ptr [rbp - 0x3b8]
0x9b2f:	jmp	0x9901


0xa030:	sub	rsp, 8
0xa034:	push	qword ptr [rbp - 0x3f0]
0xa03a:	jmp	0x9ab5


0x9a9f:	cmp	eax, 2
0x9aa2:	jne	0x9ea0


0x9c17:	jmp	0x9b20


0x9c78:	push	qword ptr [rbp - 0x3f0]
0x9c7e:	push	r9
0x9c80:	jmp	0x9b28


0x97b6:	cmp	eax, 2
0x97b9:	je	0x9c60


0xa040:	sub	rsp, 8
0xa044:	push	qword ptr [rbp - 0x3f0]
0xa04a:	sub	rsp, 0x10
0xa04e:	fstp	xword ptr [rsp]
0xa051:	jmp	0x9b7b


0x9a15:	cmp	eax, 2
0x9a18:	jne	0x9ee0


0x9b5b:	cmp	eax, 2
0x9b5e:	jne	0x98f7


0xa493:	mov	edx, r11d
0xa496:	add	rdx, qword ptr [rdi + 0x10]
0xa49a:	add	r11d, 0x10
0xa49e:	mov	dword ptr [rdi + 4], r11d
0xa4a2:	movsd	xmm0, qword ptr [rdx]
0xa4a6:	movsd	qword ptr [rax + 0x10], xmm0
0xa4ab:	jmp	0xa3b0


0xa53d:	mov	rdx, qword ptr [rdi + 8]
0xa541:	lea	r11, [rdx + 8]
0xa545:	mov	qword ptr [rdi + 8], r11
0xa549:	jmp	0xa4a2


0xa3d3:	mov	edx, r11d
0xa3d6:	add	rdx, qword ptr [rdi + 0x10]
0xa3da:	add	r11d, 8
0xa3de:	mov	dword ptr [rdi], r11d
0xa3e1:	mov	rdx, qword ptr [rdx]
0xa3e4:	mov	qword ptr [rax + 0x10], rdx
0xa3e8:	jmp	0xa3b0


0xa50a:	mov	rdx, qword ptr [rdi + 8]
0xa50e:	lea	r11, [rdx + 8]
0xa512:	mov	qword ptr [rdi + 8], r11
0xa516:	jmp	0xa3e1


0xa3f7:	mov	edx, r11d
0xa3fa:	add	rdx, qword ptr [rdi + 0x10]
0xa3fe:	add	r11d, 8
0xa402:	mov	dword ptr [rdi], r11d
0xa405:	mov	edx, dword ptr [rdx]
0xa407:	mov	dword ptr [rax + 0x10], edx
0xa40a:	jmp	0xa3b0


0xa52c:	mov	rdx, qword ptr [rdi + 8]
0xa530:	lea	r11, [rdx + 8]
0xa534:	mov	qword ptr [rdi + 8], r11
0xa538:	jmp	0xa405


0xa419:	mov	edx, r11d
0xa41c:	add	rdx, qword ptr [rdi + 0x10]
0xa420:	add	r11d, 8
0xa424:	mov	dword ptr [rdi], r11d
0xa427:	mov	edx, dword ptr [rdx]
0xa429:	mov	byte ptr [rax + 0x10], dl
0xa42c:	jmp	0xa3b0


0xa51b:	mov	rdx, qword ptr [rdi + 8]
0xa51f:	lea	r11, [rdx + 8]
0xa523:	mov	qword ptr [rdi + 8], r11
0xa527:	jmp	0xa427


0xa43b:	mov	edx, r11d
0xa43e:	add	rdx, qword ptr [rdi + 0x10]
0xa442:	add	r11d, 8
0xa446:	mov	dword ptr [rdi], r11d
0xa449:	mov	edx, dword ptr [rdx]
0xa44b:	mov	word ptr [rax + 0x10], dx
0xa44f:	jmp	0xa3b0


0xa4da:	mov	rdx, qword ptr [rdi + 8]
0xa4de:	lea	r11, [rdx + 8]
0xa4e2:	mov	qword ptr [rdi + 8], r11
0xa4e6:	jmp	0xa449


0xa378:	cmp	dword ptr [rax], 0x16
0xa37b:	ja	0xa3c0


0xa4b9:	mov	edx, r11d
0xa4bc:	add	rdx, qword ptr [rdi + 0x10]
0xa4c0:	add	r11d, 8
0xa4c4:	mov	dword ptr [rdi], r11d
0xa4c7:	mov	rdx, qword ptr [rdx]
0xa4ca:	test	rdx, rdx
0xa4cd:	cmove	rdx, r10
0xa4d1:	mov	qword ptr [rax + 0x10], rdx
0xa4d5:	jmp	0xa3b0


0xa4fc:	mov	rdx, qword ptr [rdi + 8]
0xa500:	lea	r11, [rdx + 8]
0xa504:	mov	qword ptr [rdi + 8], r11
0xa508:	jmp	0xa4c7


0xa461:	mov	edx, r11d
0xa464:	add	rdx, qword ptr [rdi + 0x10]
0xa468:	add	r11d, 8
0xa46c:	mov	dword ptr [rdi], r11d
0xa46f:	mov	rdx, qword ptr [rdx]
0xa472:	test	rdx, rdx
0xa475:	cmove	rdx, r9
0xa479:	mov	qword ptr [rax + 0x10], rdx
0xa47d:	jmp	0xa3b0


0xa4eb:	mov	rdx, qword ptr [rdi + 8]
0xa4ef:	lea	r11, [rdx + 8]
0xa4f3:	mov	qword ptr [rdi + 8], r11
0xa4f7:	jmp	0xa46f


0x9cc4:	mov	r8, qword ptr [r13 + 8]
0x9cc8:	add	r13, 0x58
0x9ccc:	mov	rcx, qword ptr [r13]
0x9cd0:	add	qword ptr [rbp - 0x400], 1
0x9cd8:	cmp	rcx, r8
0x9cdb:	jne	0x9379


0x9b68:	sub	rsp, 8
0x9b6c:	push	qword ptr [rbp - 0x3f0]
0x9b72:	push	r9
0x9b74:	mov	eax, dword ptr [rbp - 0x3b4]
0x9b7a:	push	rax
0x9b7b:	mov	r9d, dword ptr [rbp - 0x3b8]
0x9b82:	mov	r8, qword ptr [rbp - 0x3d8]
0x9b89:	mov	rsi, r10
0x9b8c:	mov	rcx, -1
0x9b93:	mov	edx, 1
0x9b98:	xor	eax, eax
0x9b9a:	mov	qword ptr [rbp - 0x430], r10
0x9ba1:	call	0x2420


0x98f7:	sub	rsp, 8
0x98fb:	push	qword ptr [rbp - 0x3f0]
0x9901:	mov	r8, qword ptr [rbp - 0x3d8]
0x9908:	mov	rcx, -1
0x990f:	mov	edx, 1
0x9914:	mov	rsi, r10
0x9917:	xor	eax, eax
0x9919:	mov	qword ptr [rbp - 0x430], r10
0x9920:	call	0x2420


0x9901:	mov	r8, qword ptr [rbp - 0x3d8]
0x9908:	mov	rcx, -1
0x990f:	mov	edx, 1
0x9914:	mov	rsi, r10
0x9917:	xor	eax, eax
0x9919:	mov	qword ptr [rbp - 0x430], r10
0x9920:	call	0x2420


0x9ab5:	mov	r9d, dword ptr [rbp - 0x3b8]
0x9abc:	mov	r8, qword ptr [rbp - 0x3d8]
0x9ac3:	mov	rsi, r10
0x9ac6:	mov	rcx, -1
0x9acd:	mov	edx, 1
0x9ad2:	mov	eax, 1
0x9ad7:	mov	qword ptr [rbp - 0x430], r10
0x9ade:	call	0x2420


0x9aa8:	mov	eax, dword ptr [rbp - 0x3b4]
0x9aae:	push	qword ptr [rbp - 0x3f0]
0x9ab4:	push	rax
0x9ab5:	mov	r9d, dword ptr [rbp - 0x3b8]
0x9abc:	mov	r8, qword ptr [rbp - 0x3d8]
0x9ac3:	mov	rsi, r10
0x9ac6:	mov	rcx, -1
0x9acd:	mov	edx, 1
0x9ad2:	mov	eax, 1
0x9ad7:	mov	qword ptr [rbp - 0x430], r10
0x9ade:	call	0x2420


0x9ea0:	mov	r9, qword ptr [rbp - 0x3f0]
0x9ea7:	mov	r8, qword ptr [rbp - 0x3d8]
0x9eae:	mov	rsi, r10
0x9eb1:	mov	rcx, -1
0x9eb8:	mov	edx, 1
0x9ebd:	mov	eax, 1
0x9ec2:	mov	qword ptr [rbp - 0x430], r10
0x9ec9:	call	0x2420


0x9b28:	mov	r9d, dword ptr [rbp - 0x3b8]
0x9b2f:	jmp	0x9901


0x9c60:	sub	rsp, 8
0x9c64:	push	qword ptr [rbp - 0x3f0]
0x9c6a:	push	r9
0x9c6c:	jmp	0x9b74


0x97bf:	sub	rsp, 8
0x97c3:	push	qword ptr [rbp - 0x3f0]
0x97c9:	mov	r8, qword ptr [rbp - 0x3d8]
0x97d0:	mov	rsi, r10
0x97d3:	mov	rcx, -1
0x97da:	mov	edx, 1
0x97df:	xor	eax, eax
0x97e1:	mov	qword ptr [rbp - 0x430], r10
0x97e8:	call	0x2420


0x9b7b:	mov	r9d, dword ptr [rbp - 0x3b8]
0x9b82:	mov	r8, qword ptr [rbp - 0x3d8]
0x9b89:	mov	rsi, r10
0x9b8c:	mov	rcx, -1
0x9b93:	mov	edx, 1
0x9b98:	xor	eax, eax
0x9b9a:	mov	qword ptr [rbp - 0x430], r10
0x9ba1:	call	0x2420


0x9a1e:	mov	eax, dword ptr [rbp - 0x3b4]
0x9a24:	sub	rsp, 8
0x9a28:	push	qword ptr [rbp - 0x3f0]
0x9a2e:	mov	r9d, dword ptr [rbp - 0x3b8]
0x9a35:	mov	r8, qword ptr [rbp - 0x3d8]
0x9a3c:	mov	rsi, r10
0x9a3f:	sub	rsp, 0x18
0x9a43:	mov	rcx, -1
0x9a4a:	mov	edx, 1
0x9a4f:	fstp	xword ptr [rsp + 8]
0x9a53:	push	rax
0x9a54:	xor	eax, eax
0x9a56:	mov	qword ptr [rbp - 0x430], r10
0x9a5d:	call	0x2420


0x9ee0:	sub	rsp, 0x10
0x9ee4:	mov	r9, qword ptr [rbp - 0x3f0]
0x9eeb:	fstp	xword ptr [rsp]
0x9eee:	jmp	0x97c9


0xa3b0:	add	rcx, 1
0xa3b4:	add	rax, 0x20
0xa3b8:	cmp	qword ptr [rsi], rcx
0xa3bb:	ja	0xa378


0xa4a2:	movsd	xmm0, qword ptr [rdx]
0xa4a6:	movsd	qword ptr [rax + 0x10], xmm0
0xa4ab:	jmp	0xa3b0


0xa3e1:	mov	rdx, qword ptr [rdx]
0xa3e4:	mov	qword ptr [rax + 0x10], rdx
0xa3e8:	jmp	0xa3b0


0xa405:	mov	edx, dword ptr [rdx]
0xa407:	mov	dword ptr [rax + 0x10], edx
0xa40a:	jmp	0xa3b0


0xa427:	mov	edx, dword ptr [rdx]
0xa429:	mov	byte ptr [rax + 0x10], dl
0xa42c:	jmp	0xa3b0


0xa449:	mov	edx, dword ptr [rdx]
0xa44b:	mov	word ptr [rax + 0x10], dx
0xa44f:	jmp	0xa3b0


0xa4c7:	mov	rdx, qword ptr [rdx]
0xa4ca:	test	rdx, rdx
0xa4cd:	cmove	rdx, r10
0xa4d1:	mov	qword ptr [rax + 0x10], rdx
0xa4d5:	jmp	0xa3b0


0xa46f:	mov	rdx, qword ptr [rdx]
0xa472:	test	rdx, rdx
0xa475:	cmove	rdx, r9
0xa479:	mov	qword ptr [rax + 0x10], rdx
0xa47d:	jmp	0xa3b0


0x2420:	jmp	qword ptr [rip + 0x20e9e2]


0x9b74:	mov	eax, dword ptr [rbp - 0x3b4]
0x9b7a:	push	rax
0x9b7b:	mov	r9d, dword ptr [rbp - 0x3b8]
0x9b82:	mov	r8, qword ptr [rbp - 0x3d8]
0x9b89:	mov	rsi, r10
0x9b8c:	mov	rcx, -1
0x9b93:	mov	edx, 1
0x9b98:	xor	eax, eax
0x9b9a:	mov	qword ptr [rbp - 0x430], r10
0x9ba1:	call	0x2420


0x97c9:	mov	r8, qword ptr [rbp - 0x3d8]
0x97d0:	mov	rsi, r10
0x97d3:	mov	rcx, -1
0x97da:	mov	edx, 1
0x97df:	xor	eax, eax
0x97e1:	mov	qword ptr [rbp - 0x430], r10
0x97e8:	call	0x2420




0x796e:	add	rsp, 0x28
0x7972:	mov	rcx, rbx
0x7975:	mov	rdi, rbp
0x7978:	pop	rbx
0x7979:	pop	rbp
0x797a:	pop	r12
0x797c:	pop	r13
0x797e:	pop	r14
0x7980:	pop	r15
0x7982:	mov	rdx, rax
0x7985:	mov	esi, 1
0x798a:	xor	eax, eax
0x798c:	jmp	0x2780


0x7890:	sub	rsp, 8
0x7894:	mov	r9, qword ptr [rsp + 0x18]
0x7899:	mov	rdx, rax
0x789c:	mov	rcx, rbx
0x789f:	mov	esi, 1
0x78a4:	mov	rdi, rbp
0x78a7:	xor	eax, eax
0x78a9:	push	r9
0x78ab:	push	r13
0x78ad:	push	r12
0x78af:	push	r15
0x78b1:	push	r14
0x78b3:	mov	r9, qword ptr [rsp + 0x30]
0x78b8:	mov	r8, qword ptr [rsp + 0x38]
0x78bd:	call	0x2780


0x7a52:	sub	rsp, 8
0x7a56:	push	r14
0x7a58:	mov	rdx, rax
0x7a5b:	mov	r9, r13
0x7a5e:	mov	r8, r12
0x7a61:	mov	rcx, rbx
0x7a64:	mov	rdi, rbp
0x7a67:	mov	esi, 1
0x7a6c:	xor	eax, eax
0x7a6e:	call	0x2780


0x7a73:	pop	rax
0x7a74:	pop	rdx
0x7a75:	add	rsp, 0x28
0x7a79:	pop	rbx
0x7a7a:	pop	rbp
0x7a7b:	pop	r12
0x7a7d:	pop	r13
0x7a7f:	pop	r14
0x7a81:	pop	r15
0x7a83:	ret	


0x7ae6:	sub	rsp, 8
0x7aea:	mov	r9, r13
0x7aed:	push	r12
0x7aef:	push	r15
0x7af1:	push	r14
0x7af3:	mov	r8, qword ptr [rsp + 0x20]
0x7af8:	mov	rcx, rbx
0x7afb:	mov	rdx, rax
0x7afe:	mov	rdi, rbp
0x7b01:	mov	esi, 1
0x7b06:	xor	eax, eax
0x7b08:	call	0x2780


0x7b0d:	add	rsp, 0x20
0x7b11:	add	rsp, 0x28
0x7b15:	pop	rbx
0x7b16:	pop	rbp
0x7b17:	pop	r12
0x7b19:	pop	r13
0x7b1b:	pop	r14
0x7b1d:	pop	r15
0x7b1f:	ret	


0x7aae:	push	r15
0x7ab0:	jmp	0x7a56


0x7a56:	push	r14
0x7a58:	mov	rdx, rax
0x7a5b:	mov	r9, r13
0x7a5e:	mov	r8, r12
0x7a61:	mov	rcx, rbx
0x7a64:	mov	rdi, rbp
0x7a67:	mov	esi, 1
0x7a6c:	xor	eax, eax
0x7a6e:	call	0x2780


0x79b2:	add	rsp, 0x28
0x79b6:	mov	r8, r12
0x79b9:	mov	rcx, rbx
0x79bc:	mov	rdi, rbp
0x79bf:	mov	rdx, rax
0x79c2:	mov	esi, 1
0x79c7:	pop	rbx
0x79c8:	pop	rbp
0x79c9:	pop	r12
0x79cb:	pop	r13
0x79cd:	pop	r14
0x79cf:	pop	r15
0x79d1:	xor	eax, eax
0x79d3:	jmp	0x2780


0x7b57:	push	r13
0x7b59:	push	r12
0x7b5b:	push	r15
0x7b5d:	push	r14
0x7b5f:	mov	r9, qword ptr [rsp + 0x28]
0x7b64:	jmp	0x7af3


0x7af3:	mov	r8, qword ptr [rsp + 0x20]
0x7af8:	mov	rcx, rbx
0x7afb:	mov	rdx, rax
0x7afe:	mov	rdi, rbp
0x7b01:	mov	esi, 1
0x7b06:	xor	eax, eax
0x7b08:	call	0x2780


0x79fe:	add	rsp, 0x28
0x7a02:	mov	r9, r13
0x7a05:	mov	r8, r12
0x7a08:	mov	rcx, rbx
0x7a0b:	mov	rdi, rbp
0x7a0e:	mov	rdx, rax
0x7a11:	pop	rbx
0x7a12:	pop	rbp
0x7a13:	pop	r12
0x7a15:	pop	r13
0x7a17:	pop	r14
0x7a19:	pop	r15
0x7a1b:	mov	esi, 1
0x7a20:	xor	eax, eax
0x7a22:	jmp	0x2780


0x97ed:	pop	rsi
0x97ee:	pop	rdi
0x97ef:	mov	r10, qword ptr [rbp - 0x430]
0x97f6:	mov	ecx, dword ptr [rbp - 0x3bc]
0x97fc:	test	ecx, ecx
0x97fe:	js	0x993c


0x993c:	mov	rdi, qword ptr [rbp - 0x3f8]
0x9943:	cmp	byte ptr [rdi + 1], 0
0x9947:	jne	0x9c88


0x9804:	movsxd	rdx, ecx
0x9807:	cmp	rdx, r10
0x980a:	jae	0x981a


0x994d:	test	eax, eax
0x994f:	jns	0x981e


0x9c88:	mov	byte ptr [rdi + 1], 0
0x9c8c:	jmp	0x9740


0x980c:	add	rdx, r15
0x980f:	cmp	byte ptr [rdx + r14], 0
0x9814:	jne	0xa156


0x981a:	cmp	ecx, eax
0x981c:	jge	0x9826


0x9955:	mov	rax, qword ptr [rbp - 0x3c8]
0x995c:	mov	ebx, dword ptr [rax]
0x995e:	test	ebx, ebx
0x9960:	jne	0x9980


0x981e:	mov	dword ptr [rbp - 0x3bc], eax
0x9824:	mov	ecx, eax
0x9826:	lea	eax, [rcx + 1]
0x9829:	cmp	rax, r10
0x982c:	jb	0xa060


0x9740:	mov	rax, qword ptr [rbp - 0x3c8]
0x9747:	mov	rbx, r12
0x974a:	mov	r10d, 0x7fffffff
0x9750:	sub	rbx, r14
0x9753:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0x975d:	cmp	rbx, 0x7fffffff
0x9764:	mov	dword ptr [rax], 0
0x976a:	mov	eax, dword ptr [rbp - 0x3d0]
0x9770:	cmovbe	r10, rbx
0x9774:	cmp	eax, 0x11
0x9777:	ja	0xa156


0x9826:	lea	eax, [rcx + 1]
0x9829:	cmp	rax, r10
0x982c:	jb	0xa060


0x9962:	movzx	eax, byte ptr [r13 + 0x48]
0x9967:	mov	ebx, 0x16
0x996c:	and	eax, 0xffffffef
0x996f:	cmp	al, 0x63
0x9971:	mov	eax, 0x54
0x9976:	cmove	ebx, eax
0x9979:	nop	dword ptr [rax]
0x9980:	cmp	r15, qword ptr [rbp - 0x3e8]
0x9987:	je	0x9992


0x9980:	cmp	r15, qword ptr [rbp - 0x3e8]
0x9987:	je	0x9992


0xa060:	mov	rax, qword ptr [rbp - 0x3c8]
0xa067:	mov	edi, dword ptr [rbp - 0x424]
0xa06d:	movsxd	rbx, ecx
0xa070:	add	rbx, r14
0xa073:	mov	dword ptr [rax], edi
0xa075:	jmp	0x9cc4


0x9832:	cmp	rbx, 0x7ffffffe
0x9839:	ja	0xa080


0x9992:	mov	rax, qword ptr [rbp - 0x420]
0x9999:	test	rax, rax
0x999c:	je	0x99a6


0x9989:	test	r15, r15
0x998c:	jne	0xa13c


0x983f:	lea	rsi, [r12 + r12]
0x9843:	lea	edx, [rcx + 2]
0x9846:	test	r12, r12
0x9849:	mov	rax, -1
0x9850:	cmovns	rax, rsi
0x9854:	add	rdx, r14
0x9857:	jb	0xa318


0xa080:	cmp	r15, qword ptr [rbp - 0x3e8]
0xa087:	je	0xa092


0x99a6:	mov	rax, qword ptr [rbp - 0x408]
0x99ad:	mov	rdi, qword ptr [rbp - 0x2b8]
0x99b4:	add	rax, 0x20
0x99b8:	cmp	rdi, rax
0x99bb:	je	0x99c2


0x999e:	mov	rdi, rax
0x99a1:	call	0x2430


0xa13c:	mov	rdi, r15
0xa13f:	call	0x2430


0xa318:	cmp	r12, -1
0xa31c:	je	0x9740


0x985d:	cmp	rax, rdx
0x9860:	cmovb	rax, rdx
0x9864:	cmp	r12, rax
0x9867:	jae	0x9740


0xa092:	mov	rax, qword ptr [rbp - 0x420]
0xa099:	test	rax, rax
0xa09c:	je	0xa0a6


0xa089:	test	r15, r15
0xa08c:	jne	0xa149


0x99c2:	mov	rax, qword ptr [rbp - 0x410]
0x99c9:	mov	rdi, qword ptr [rbp - 0x3a8]
0x99d0:	add	rax, 0x10
0x99d4:	cmp	rdi, rax
0x99d7:	je	0x99de


0x99bd:	call	0x2430


0xa322:	jmp	0x93a1


0x986d:	test	r12, r12
0x9870:	js	0x93a1


0xa0a6:	mov	rax, qword ptr [rbp - 0x408]
0xa0ad:	mov	rdi, qword ptr [rbp - 0x2b8]
0xa0b4:	add	rax, 0x20
0xa0b8:	cmp	rdi, rax
0xa0bb:	je	0xa0c2


0xa09e:	mov	rdi, rax
0xa0a1:	call	0x2430


0xa149:	mov	rdi, r15
0xa14c:	call	0x2430


0x99de:	mov	rax, qword ptr [rbp - 0x3c8]
0x99e5:	xor	r15d, r15d
0x99e8:	mov	dword ptr [rax], ebx
0x99ea:	jmp	0x940f


0x99d9:	call	0x2430


0x93a1:	cmp	r15, qword ptr [rbp - 0x3e8]
0x93a8:	je	0x93b3


0x9876:	cmp	rsi, rax
0x9879:	mov	r12, rsi
0x987c:	jae	0x988b


0xa0c2:	mov	rax, qword ptr [rbp - 0x410]
0xa0c9:	mov	rdi, qword ptr [rbp - 0x3a8]
0xa0d0:	add	rax, 0x10
0xa0d4:	cmp	rdi, rax
0xa0d7:	je	0xa0de


0xa0bd:	call	0x2430


0x987e:	cmp	rax, -1
0x9882:	je	0x93a1


0x988b:	cmp	r15, qword ptr [rbp - 0x3e8]
0x9892:	sete	bl
0x9895:	test	r15, r15
0x9898:	je	0x9c20


0xa0de:	mov	rax, qword ptr [rbp - 0x3c8]
0xa0e5:	xor	r15d, r15d
0xa0e8:	mov	dword ptr [rax], 0x4b
0xa0ee:	jmp	0x940f


0xa0d9:	call	0x2430


0x9888:	mov	r12, rax
0x988b:	cmp	r15, qword ptr [rbp - 0x3e8]
0x9892:	sete	bl
0x9895:	test	r15, r15
0x9898:	je	0x9c20


0x9c20:	mov	rdi, r12
0x9c23:	call	0x2660


0x989e:	test	bl, bl
0x98a0:	jne	0x9c20


0x98a6:	mov	rsi, r12
0x98a9:	mov	rdi, r15
0x98ac:	call	0x26a0


0x98b1:	test	rax, rax
0x98b4:	je	0x93a1


0x98ba:	mov	r15, rax
0x98bd:	jmp	0x9740


0x9c28:	test	rax, rax
0x9c2b:	mov	rcx, rax
0x9c2e:	je	0x93a1


0x9c34:	test	r14, r14
0x9c37:	je	0x9cf0


0x9cf0:	mov	r15, rcx
0x9cf3:	jmp	0x9740


0x9c3d:	test	bl, bl
0x9c3f:	je	0x9cf0


0x9c45:	mov	rsi, r15
0x9c48:	mov	rdx, r14
0x9c4b:	mov	rdi, rax
0x9c4e:	call	0x2640


0x9c53:	mov	r15, rax
0x9c56:	jmp	0x9740


0xa151:	jmp	0xa092


0xa144:	jmp	0x9992


0x9ba6:	add	rsp, 0x20
0x9baa:	mov	r10, qword ptr [rbp - 0x430]
0x9bb1:	jmp	0x97f6


0x97f6:	mov	ecx, dword ptr [rbp - 0x3bc]
0x97fc:	test	ecx, ecx
0x97fe:	js	0x993c


0x9a62:	add	rsp, 0x30
0x9a66:	mov	r10, qword ptr [rbp - 0x430]
0x9a6d:	jmp	0x97f6


0x9ece:	mov	r10, qword ptr [rbp - 0x430]
0x9ed5:	jmp	0x97f6


0x9ae3:	pop	r8
0x9ae5:	mov	r10, qword ptr [rbp - 0x430]
0x9aec:	pop	r9
0x9aee:	jmp	0x97f6


0x9925:	pop	rdx
0x9926:	pop	rcx
0x9927:	mov	ecx, dword ptr [rbp - 0x3bc]
0x992d:	mov	r10, qword ptr [rbp - 0x430]
0x9934:	test	ecx, ecx
0x9936:	jns	0x9804


0x67a0:	sub	rsp, 8
0x67a4:	mov	rcx, rbp
0x67a7:	mov	rsi, r13
0x67aa:	push	qword ptr [rsp + 0x68]
0x67ae:	push	qword ptr [rsp + 0x78]
0x67b2:	mov	rdi, r14
0x67b5:	push	0
0x67b7:	mov	r9d, dword ptr [rsp + 0x98]
0x67bf:	mov	r8d, dword ptr [rsp + 0x28]
0x67c4:	mov	rdx, qword ptr [rsp + 0x30]
0x67c9:	and	r9d, 0xfffffffd
0x67cd:	call	0x5c00


0x67d2:	add	rsp, 0x20
0x67d6:	mov	r15, rax
0x67d9:	mov	rbx, qword ptr [rsp + 0xa8]
0x67e1:	xor	rbx, qword ptr fs:[0x28]
0x67ea:	mov	rax, r15
0x67ed:	jne	0x6df3


0x67f3:	add	rsp, 0xb8
0x67fa:	pop	rbx
0x67fb:	pop	rbp
0x67fc:	pop	r12
0x67fe:	pop	r13
0x6800:	pop	r14
0x6802:	pop	r15
0x6804:	ret	


0x6df3:	call	0x2520


0x6d9d:	sub	rsp, 8
0x6da1:	mov	r8d, 5
0x6da7:	mov	rcx, r11
0x6daa:	push	qword ptr [rsp + 0x68]
0x6dae:	push	qword ptr [rsp + 0x78]
0x6db2:	mov	rdi, r14
0x6db5:	push	qword ptr [rsp + 0x38]
0x6db9:	mov	r9d, dword ptr [rsp + 0x98]
0x6dc1:	mov	rdx, qword ptr [rsp + 0x30]
0x6dc6:	mov	rsi, qword ptr [rsp + 0x70]
0x6dcb:	call	0x5c00


0x6dd0:	add	rsp, 0x20
0x6dd4:	mov	r15, rax
0x6dd7:	jmp	0x67d9


0x67d9:	mov	rbx, qword ptr [rsp + 0xa8]
0x67e1:	xor	rbx, qword ptr fs:[0x28]
0x67ea:	mov	rax, r15
0x67ed:	jne	0x6df3


0x2400:	push	qword ptr [rip + 0x20e9ea]
0x2406:	jmp	qword ptr [rip + 0x20e9ec]


0x240c:	nop	dword ptr [rax]


0x2416:	push	0
0x241b:	jmp	0x2400


0x2426:	push	1
0x242b:	jmp	0x2400


0x2436:	push	2
0x243b:	jmp	0x2400


0x2446:	push	3
0x244b:	jmp	0x2400


0x2456:	push	4
0x245b:	jmp	0x2400


0x2466:	push	5
0x246b:	jmp	0x2400


0x2476:	push	6
0x247b:	jmp	0x2400


0x2486:	push	7
0x248b:	jmp	0x2400


0x2496:	push	8
0x249b:	jmp	0x2400


0x24a6:	push	9
0x24ab:	jmp	0x2400


0x24b6:	push	0xa
0x24bb:	jmp	0x2400


0x24c6:	push	0xb
0x24cb:	jmp	0x2400


0x24d6:	push	0xc
0x24db:	jmp	0x2400


0x24e6:	push	0xd
0x24eb:	jmp	0x2400


0x24f6:	push	0xe
0x24fb:	jmp	0x2400


0x2506:	push	0xf
0x250b:	jmp	0x2400


0x2516:	push	0x10
0x251b:	jmp	0x2400


0x2526:	push	0x11
0x252b:	jmp	0x2400


0x2536:	push	0x12
0x253b:	jmp	0x2400


0x2546:	push	0x13
0x254b:	jmp	0x2400


0x2556:	push	0x14
0x255b:	jmp	0x2400


0x2566:	push	0x15
0x256b:	jmp	0x2400


0x2576:	push	0x16
0x257b:	jmp	0x2400


0x2586:	push	0x17
0x258b:	jmp	0x2400


0x2596:	push	0x18
0x259b:	jmp	0x2400


0x25a6:	push	0x19
0x25ab:	jmp	0x2400


0x25b6:	push	0x1a
0x25bb:	jmp	0x2400


0x25c6:	push	0x1b
0x25cb:	jmp	0x2400


0x25d6:	push	0x1c
0x25db:	jmp	0x2400


0x25e6:	push	0x1d
0x25eb:	jmp	0x2400


0x25f6:	push	0x1e
0x25fb:	jmp	0x2400


0x2606:	push	0x1f
0x260b:	jmp	0x2400


0x2616:	push	0x20
0x261b:	jmp	0x2400


0x2626:	push	0x21
0x262b:	jmp	0x2400


0x2636:	push	0x22
0x263b:	jmp	0x2400


0x2646:	push	0x23
0x264b:	jmp	0x2400


0x2656:	push	0x24
0x265b:	jmp	0x2400


0x2666:	push	0x25
0x266b:	jmp	0x2400


0x2676:	push	0x26
0x267b:	jmp	0x2400


0x2686:	push	0x27
0x268b:	jmp	0x2400


0x2696:	push	0x28
0x269b:	jmp	0x2400


0x26a6:	push	0x29
0x26ab:	jmp	0x2400


0x26b6:	push	0x2a
0x26bb:	jmp	0x2400


0x26c6:	push	0x2b
0x26cb:	jmp	0x2400


0x26d6:	push	0x2c
0x26db:	jmp	0x2400


0x26e6:	push	0x2d
0x26eb:	jmp	0x2400


0x26f6:	push	0x2e
0x26fb:	jmp	0x2400


0x2706:	push	0x2f
0x270b:	jmp	0x2400


0x2716:	push	0x30
0x271b:	jmp	0x2400


0x2726:	push	0x31
0x272b:	jmp	0x2400


0x2736:	push	0x32
0x273b:	jmp	0x2400


0x2746:	push	0x33
0x274b:	jmp	0x2400


0x2756:	push	0x34
0x275b:	jmp	0x2400


0x2766:	push	0x35
0x276b:	jmp	0x2400


0x2776:	push	0x36
0x277b:	jmp	0x2400


0x2786:	push	0x37
0x278b:	jmp	0x2400


0x2790:	jmp	qword ptr [rip + 0x20e82a]




0x2796:	push	0x38
0x279b:	jmp	0x2400


0x27a0:	jmp	qword ptr [rip + 0x20e822]




0x27a6:	push	0x39
0x27ab:	jmp	0x2400


0x27b6:	push	0x3a
0x27bb:	jmp	0x2400


0x337a:	hlt	


0x337b:	nop	dword ptr [rax + rax]


0x33b2:	nop	dword ptr [rax]
0x33b6:	nop	word ptr cs:[rax + rax]


0x3402:	nop	dword ptr [rax]
0x3406:	nop	word ptr cs:[rax + rax]


0x344a:	nop	word ptr [rax + rax]


0x345a:	nop	word ptr [rax + rax]


0x34c2:	nop	dword ptr [rax]
0x34c6:	nop	word ptr cs:[rax + rax]


0x351c:	nop	dword ptr [rax]


0x36b1:	nop	dword ptr [rax + rax]
0x36b6:	nop	word ptr cs:[rax + rax]


0x3857:	nop	word ptr [rax + rax]


0x38a5:	nop	
0x38a6:	nop	word ptr cs:[rax + rax]


0x3988:	nop	dword ptr [rax + rax]


0x3a29:	nop	dword ptr [rax]


0x5933:	nop	word ptr cs:[rax + rax]
0x593d:	nop	dword ptr [rax]


0x5948:	nop	dword ptr [rax + rax]


0x5958:	nop	dword ptr [rax + rax]


0x5a04:	nop	word ptr cs:[rax + rax]
0x5a0e:	nop	


0x5a66:	nop	word ptr cs:[rax + rax]


0x5b0f:	nop	


0x5bf7:	nop	word ptr [rax + rax]


0x5c93:	mov	byte ptr [rsp + 0xe], 1
0x5c98:	mov	byte ptr [rsp + 0x7c], 0
0x5c9d:	xor	r12d, r12d
0x5ca0:	mov	qword ptr [rsp + 0x50], 0
0x5ca9:	mov	byte ptr [rsp + 0xf], 1
0x5cae:	mov	byte ptr [rsp + 0xd], 0
0x5cb3:	lea	rax, [rip + 0x7e6b]
0x5cba:	mov	qword ptr [rsp + 0x18], 1
0x5cc3:	xor	r15d, r15d
0x5cc6:	mov	dword ptr [rsp + 8], 2
0x5cce:	mov	qword ptr [rsp + 0x48], rax
0x5cd3:	xor	r11d, r11d
0x5cd6:	mov	rax, rbp
0x5cd9:	mov	r8d, r12d
0x5cdc:	mov	rbp, r11
0x5cdf:	mov	r11, rax
0x5ce2:	nop	word ptr [rax + rax]
0x5ce8:	cmp	r11, rbp
0x5ceb:	setne	r12b
0x5cef:	cmp	r11, -1
0x5cf3:	jne	0x5d02


0x5cf5:	mov	rax, qword ptr [rsp + 0x10]
0x5cfa:	cmp	byte ptr [rax + rbp], 0
0x5cfe:	setne	r12b
0x5d02:	test	r12b, r12b
0x5d05:	je	0x6360


0x5d02:	test	r12b, r12b
0x5d05:	je	0x6360


0x6360:	cmp	dword ptr [rsp + 8], 2
0x6365:	movzx	ebx, byte ptr [rsp + 0xf]
0x636a:	mov	r12d, r8d
0x636d:	mov	rbp, r11
0x6370:	sete	dl
0x6373:	mov	eax, ebx
0x6375:	test	r15, r15
0x6378:	sete	cl
0x637b:	and	eax, edx
0x637d:	and	al, cl
0x637f:	jne	0x6de6


0x5d0b:	cmp	dword ptr [rsp + 8], 2
0x5d10:	mov	rdi, qword ptr [rsp + 0x10]
0x5d15:	lea	r9, [rdi + rbp]
0x5d19:	setne	al
0x5d1c:	and	al, byte ptr [rsp + 0xd]
0x5d20:	mov	r10d, eax
0x5d23:	je	0x5dd0


0x6385:	mov	eax, ebx
0x6387:	xor	eax, 1
0x638a:	and	dl, al
0x638c:	je	0x6cfc


0x6de6:	mov	dword ptr [rsp + 8], 2
0x6dee:	jmp	0x6789


0x5dd0:	movzx	ebx, byte ptr [r9]
0x5dd4:	cmp	bl, 0x7e
0x5dd7:	ja	0x60f8


0x5d29:	mov	rax, qword ptr [rsp + 0x18]
0x5d2e:	test	rax, rax
0x5d31:	je	0x6160


0x6cfc:	mov	rbx, qword ptr [rsp + 0x48]
0x6d01:	test	rbx, rbx
0x6d04:	je	0x6d32


0x6392:	cmp	byte ptr [rsp + 0x7c], 0
0x6397:	je	0x6cfa


0x6789:	cmp	byte ptr [rsp + 0xd], 0
0x678e:	je	0x67a0


0x5ddd:	lea	rcx, [rip + 0x7dc8]
0x5de4:	movzx	edx, bl
0x5de7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x5deb:	add	rax, rcx
0x5dee:	jmp	rax


0x60f8:	cmp	qword ptr [rsp + 0x58], 1
0x60fe:	jne	0x64a8


0x6160:	movzx	ebx, byte ptr [r9]
0x6164:	cmp	bl, 0x7e
0x6167:	ja	0x60f0


0x5d37:	cmp	r11, -1
0x5d3b:	lea	rbx, [rbp + rax]
0x5d40:	jne	0x5d70


0x6d32:	cmp	r13, r15
0x6d35:	jbe	0x67d9


0x6d06:	test	al, al
0x6d08:	je	0x6d32


0x6cfa:	mov	eax, edx
0x6cfc:	mov	rbx, qword ptr [rsp + 0x48]
0x6d01:	test	rbx, rbx
0x6d04:	je	0x6d32


0x639d:	cmp	byte ptr [rsp + 0xe], 0
0x63a2:	jne	0x6d9d


0x6790:	test	al, al
0x6792:	mov	eax, 4
0x6797:	cmove	eax, dword ptr [rsp + 8]
0x679c:	mov	dword ptr [rsp + 8], eax


0x6104:	mov	qword ptr [rsp + 0x38], r11
0x6109:	mov	byte ptr [rsp + 0x30], r8b
0x610e:	mov	byte ptr [rsp + 0x28], r10b
0x6113:	call	0x27b0


0x64a8:	lea	rax, [rsp + 0xa0]
0x64b0:	cmp	r11, -1
0x64b4:	mov	qword ptr [rsp + 0xa0], 0
0x64c0:	mov	qword ptr [rsp + 0x28], rax
0x64c5:	jne	0x64f4


0x6169:	lea	rcx, [rip + 0x7c38]
0x6170:	movzx	edx, bl
0x6173:	movsxd	rax, dword ptr [rcx + rdx*4]
0x6177:	add	rax, rcx
0x617a:	jmp	rax


0x60f0:	xor	r10d, r10d
0x60f3:	nop	dword ptr [rax + rax]
0x60f8:	cmp	qword ptr [rsp + 0x58], 1
0x60fe:	jne	0x64a8


0x5d42:	cmp	rax, 1
0x5d46:	jbe	0x5d70


0x5d70:	cmp	rbx, r11
0x5d73:	mov	byte ptr [rsp + 0x28], r10b
0x5d78:	ja	0x6330


0x6d3b:	mov	byte ptr [r14 + r15], 0
0x6d40:	jmp	0x67d9


0x6d0a:	movzx	ecx, byte ptr [rbx]
0x6d0d:	mov	rax, rbx
0x6d10:	test	cl, cl
0x6d12:	je	0x6d32


0x63a8:	test	r13, r13
0x63ab:	sete	al
0x63ae:	cmp	qword ptr [rsp + 0x50], 0
0x63b4:	setne	dl
0x63b7:	and	al, dl
0x63b9:	je	0x6ddc


0x64c7:	mov	rdi, qword ptr [rsp + 0x10]
0x64cc:	mov	byte ptr [rsp + 0x40], r8b
0x64d1:	mov	byte ptr [rsp + 0x38], r10b
0x64d6:	mov	qword ptr [rsp + 0x30], r9
0x64db:	call	0x2510


0x64f4:	lea	rax, [rsp + 0x9c]
0x64fc:	xor	ecx, ecx
0x64fe:	mov	byte ptr [rsp + 0x7e], bl
0x6502:	mov	byte ptr [rsp + 0x7d], r8b
0x6507:	mov	rbx, rcx
0x650a:	mov	qword ptr [rsp + 0x88], r9
0x6512:	mov	qword ptr [rsp + 0x38], rax
0x6517:	mov	byte ptr [rsp + 0x7f], r10b
0x651c:	mov	qword ptr [rsp + 0x80], r15
0x6524:	mov	qword ptr [rsp + 0x40], r14
0x6529:	mov	qword ptr [rsp + 0x70], r13
0x652e:	mov	qword ptr [rsp + 0x30], r11
0x6533:	mov	rax, qword ptr [rsp + 0x10]
0x6538:	lea	r14, [rbp + rbx]
0x653d:	mov	rdx, qword ptr [rsp + 0x30]
0x6542:	mov	rcx, qword ptr [rsp + 0x28]
0x6547:	mov	rdi, qword ptr [rsp + 0x38]
0x654c:	lea	r13, [rax + r14]
0x6550:	sub	rdx, r14
0x6553:	mov	rsi, r13
0x6556:	call	0x8ee0


0x5d48:	mov	byte ptr [rsp + 0x38], r8b
0x5d4d:	mov	byte ptr [rsp + 0x30], r10b
0x5d52:	mov	qword ptr [rsp + 0x28], r9
0x5d57:	call	0x2510


0x5d7e:	mov	rdx, qword ptr [rsp + 0x18]
0x5d83:	mov	rsi, qword ptr [rsp + 0x48]
0x5d88:	mov	rdi, r9
0x5d8b:	mov	qword ptr [rsp + 0x40], r11
0x5d90:	mov	byte ptr [rsp + 0x38], r8b
0x5d95:	mov	qword ptr [rsp + 0x30], r9
0x5d9a:	call	0x25f0


0x6330:	xor	r10d, r10d
0x6333:	jmp	0x5dd0


0x6d14:	mov	rdx, r15
0x6d17:	sub	rax, r15
0x6d1a:	cmp	r13, rdx
0x6d1d:	jbe	0x6d23


0x6ddc:	movzx	eax, byte ptr [rsp + 0x7c]
0x6de1:	jmp	0x6cfc


0x63bf:	mov	r13, qword ptr [rsp + 0x50]
0x63c4:	lea	rbx, [rip + 0x775a]
0x63cb:	mov	byte ptr [r14], 0x27
0x63cf:	mov	dword ptr [rsp + 8], 2
0x63d7:	mov	r15d, 1
0x63dd:	mov	qword ptr [rsp + 0x18], 1
0x63e6:	mov	byte ptr [rsp + 0xf], 0
0x63eb:	mov	qword ptr [rsp + 0x48], rbx
0x63f0:	mov	byte ptr [rsp + 0x7c], al
0x63f4:	jmp	0x5cd3


0x6d23:	add	rdx, 1
0x6d27:	movzx	ecx, byte ptr [rax + rdx]
0x6d2b:	test	cl, cl
0x6d2d:	jne	0x6d1a


0x6d1f:	mov	byte ptr [r14 + rdx], cl
0x6d23:	add	rdx, 1
0x6d27:	movzx	ecx, byte ptr [rax + rdx]
0x6d2b:	test	cl, cl
0x6d2d:	jne	0x6d1a


0x5cd3:	xor	r11d, r11d
0x5cd6:	mov	rax, rbp
0x5cd9:	mov	r8d, r12d
0x5cdc:	mov	rbp, r11
0x5cdf:	mov	r11, rax
0x5ce2:	nop	word ptr [rax + rax]
0x5ce8:	cmp	r11, rbp
0x5ceb:	setne	r12b
0x5cef:	cmp	r11, -1
0x5cf3:	jne	0x5d02


0x6d2f:	mov	r15, rdx
0x6d32:	cmp	r13, r15
0x6d35:	jbe	0x67d9


0x6d1a:	cmp	r13, rdx
0x6d1d:	jbe	0x6d23


0x5d9f:	test	eax, eax
0x5da1:	mov	r9, qword ptr [rsp + 0x30]
0x5da6:	movzx	r8d, byte ptr [rsp + 0x38]
0x5dac:	mov	r11, qword ptr [rsp + 0x40]
0x5db1:	jne	0x6330


0x5db7:	cmp	byte ptr [rsp + 0xf], 0
0x5dbc:	movzx	r10d, byte ptr [rsp + 0x28]
0x5dc2:	jne	0x6d45


0x6d45:	cmp	dword ptr [rsp + 8], 2
0x6d4a:	movzx	ebx, byte ptr [rsp + 0xf]
0x6d4f:	mov	rbp, r11
0x6d52:	sete	al
0x6d55:	mov	byte ptr [rsp + 0xd], bl
0x6d59:	jmp	0x6789


0x655b:	test	rax, rax
0x655e:	mov	r15, rax
0x6561:	je	0x65b1


0x65b1:	mov	edx, r12d
0x65b4:	mov	rdi, rbx
0x65b7:	movzx	r8d, byte ptr [rsp + 0x7d]
0x65bd:	xor	edx, 1
0x65c0:	movzx	ebx, byte ptr [rsp + 0x7e]
0x65c5:	movzx	r10d, byte ptr [rsp + 0x7f]
0x65cb:	and	dl, byte ptr [rsp + 0xd]
0x65cf:	mov	r15, qword ptr [rsp + 0x80]
0x65d7:	mov	r14, qword ptr [rsp + 0x40]
0x65dc:	mov	r13, qword ptr [rsp + 0x70]
0x65e1:	mov	r11, qword ptr [rsp + 0x30]
0x65e6:	cmp	rdi, 1
0x65ea:	jbe	0x6beb


0x6563:	cmp	rax, -1
0x6567:	je	0x6b85


0x6beb:	mov	eax, edx
0x6bed:	jmp	0x6147


0x65f0:	mov	rcx, rdi
0x65f3:	xor	esi, esi
0x65f5:	movzx	r9d, byte ptr [rsp + 0xf]
0x65fb:	add	rcx, rbp
0x65fe:	mov	rdi, qword ptr [rsp + 0x10]
0x6603:	jmp	0x66be


0x6b85:	mov	rdi, rbx
0x6b88:	movzx	r8d, byte ptr [rsp + 0x7d]
0x6b8e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x6b93:	movzx	r10d, byte ptr [rsp + 0x7f]
0x6b99:	mov	r15, qword ptr [rsp + 0x80]
0x6ba1:	xor	r12d, r12d
0x6ba4:	mov	r14, qword ptr [rsp + 0x40]
0x6ba9:	mov	r13, qword ptr [rsp + 0x70]
0x6bae:	mov	r11, qword ptr [rsp + 0x30]
0x6bb3:	movzx	edx, byte ptr [rsp + 0xd]
0x6bb8:	jmp	0x65e6


0x656d:	cmp	rax, -2
0x6571:	je	0x6b11


0x6147:	test	al, al
0x6149:	jne	0x6ae1


0x66be:	test	dl, dl
0x66c0:	jne	0x6610


0x65e6:	cmp	rdi, 1
0x65ea:	jbe	0x6beb


0x6b11:	mov	r11, qword ptr [rsp + 0x30]
0x6b16:	mov	rsi, r14
0x6b19:	mov	rcx, r13
0x6b1c:	mov	rax, rbx
0x6b1f:	mov	rdi, rbx
0x6b22:	movzx	r8d, byte ptr [rsp + 0x7d]
0x6b28:	movzx	ebx, byte ptr [rsp + 0x7e]
0x6b2d:	mov	r9, qword ptr [rsp + 0x88]
0x6b35:	cmp	rsi, r11
0x6b38:	movzx	r10d, byte ptr [rsp + 0x7f]
0x6b3e:	mov	r15, qword ptr [rsp + 0x80]
0x6b46:	mov	r14, qword ptr [rsp + 0x40]
0x6b4b:	mov	r13, qword ptr [rsp + 0x70]
0x6b50:	jae	0x6b78


0x6577:	cmp	dword ptr [rsp + 8], 2
0x657c:	sete	al
0x657f:	and	al, byte ptr [rsp + 0xf]
0x6583:	jne	0x6720


0x614f:	cmp	dword ptr [rsp + 8], 2
0x6154:	sete	dl
0x6157:	jmp	0x5e28


0x6ae1:	movzx	edx, byte ptr [rsp + 0xd]
0x6ae6:	xor	r12d, r12d
0x6ae9:	jmp	0x65f0


0x66c6:	mov	eax, esi
0x66c8:	xor	eax, 1
0x66cb:	and	eax, r8d
0x66ce:	test	r10b, r10b
0x66d1:	je	0x66e1


0x6610:	cmp	dword ptr [rsp + 8], 2
0x6615:	sete	al
0x6618:	test	r9b, r9b
0x661b:	jne	0x6ad0


0x6b52:	cmp	byte ptr [rcx], 0
0x6b55:	jne	0x6b67


0x6b78:	movzx	edx, byte ptr [rsp + 0xd]
0x6b7d:	xor	r12d, r12d
0x6b80:	jmp	0x65e6


0x6589:	mov	edi, dword ptr [rsp + 0x9c]
0x6590:	call	0x27a0


0x6720:	cmp	r15, 1
0x6724:	je	0x6589


0x5e28:	cmp	byte ptr [rsp + 0xd], 1
0x5e2d:	jne	0x5f42


0x66e1:	add	rbp, 1
0x66e5:	cmp	rbp, rcx
0x66e8:	jae	0x5e6c


0x66d3:	cmp	r13, r15
0x66d6:	jbe	0x66dd


0x6621:	mov	esi, r8d
0x6624:	xor	esi, 1
0x6627:	and	al, sil
0x662a:	je	0x665b


0x6ad0:	movzx	ebx, byte ptr [rsp + 0xf]
0x6ad5:	mov	rbp, r11
0x6ad8:	mov	byte ptr [rsp + 0xd], bl
0x6adc:	jmp	0x6789


0x6b57:	jmp	0x6b78


0x6b67:	add	rax, 1
0x6b6b:	lea	rdx, [rbp + rax]
0x6b70:	cmp	r11, rdx
0x6b73:	ja	0x6b60


0x672a:	mov	rdi, qword ptr [rsp + 0x10]
0x672f:	lea	rcx, [rdi + r15]
0x6733:	lea	rdx, [rdi + r14 + 1]
0x6738:	lea	r8, [rcx + r14]
0x673c:	jmp	0x674d


0x5e33:	test	dl, dl
0x5e35:	jne	0x5f42


0x5f42:	cmp	byte ptr [rsp + 0xf], 0
0x5f47:	jne	0x5e3b


0x66ee:	test	al, al
0x66f0:	je	0x6aee


0x5e6c:	test	al, al
0x5e6e:	je	0x5e90


0x66dd:	add	r15, 1
0x66e1:	add	rbp, 1
0x66e5:	cmp	rbp, rcx
0x66e8:	jae	0x5e6c


0x66d8:	mov	byte ptr [r14 + r15], 0x5c
0x66dd:	add	r15, 1
0x66e1:	add	rbp, 1
0x66e5:	cmp	rbp, rcx
0x66e8:	jae	0x5e6c


0x665b:	cmp	r13, r15
0x665e:	jbe	0x6665


0x662c:	cmp	r13, r15
0x662f:	jbe	0x6636


0x6b75:	mov	rdi, rax
0x6b78:	movzx	edx, byte ptr [rsp + 0xd]
0x6b7d:	xor	r12d, r12d
0x6b80:	jmp	0x65e6


0x6b60:	cmp	byte ptr [r9 + rax], 0
0x6b65:	je	0x6b75


0x674d:	movzx	ecx, byte ptr [rdx]
0x6750:	sub	ecx, 0x5b
0x6753:	cmp	cl, 0x21
0x6756:	ja	0x6740


0x5e3b:	mov	rsi, qword ptr [rsp + 0x20]
0x5e40:	test	rsi, rsi
0x5e43:	je	0x5e59


0x5f4d:	jmp	0x5e59


0x6aee:	xor	r10d, r10d
0x6af1:	jmp	0x66ad


0x66f6:	cmp	r13, r15
0x66f9:	jbe	0x6700


0x5e90:	cmp	r15, r13
0x5e93:	jae	0x5e99


0x5e70:	cmp	r13, r15
0x5e73:	jbe	0x5e7a


0x6665:	lea	rax, [r15 + 1]
0x6669:	cmp	r13, rax
0x666c:	jbe	0x667b


0x6660:	mov	byte ptr [r14 + r15], 0x5c
0x6665:	lea	rax, [r15 + 1]
0x6669:	cmp	r13, rax
0x666c:	jbe	0x667b


0x6636:	lea	rsi, [r15 + 1]
0x663a:	cmp	r13, rsi
0x663d:	jbe	0x6645


0x6631:	mov	byte ptr [r14 + r15], 0x27
0x6636:	lea	rsi, [r15 + 1]
0x663a:	cmp	r13, rsi
0x663d:	jbe	0x6645


0x6758:	mov	esi, 1
0x675d:	shl	rsi, cl
0x6760:	mov	rcx, rsi
0x6763:	movabs	rsi, 0x20000002b
0x676d:	test	rcx, rsi
0x6770:	je	0x6740


0x6740:	add	rdx, 1
0x6744:	cmp	r8, rdx
0x6747:	je	0x6589


0x5e59:	test	r10b, r10b
0x5e5c:	jne	0x5fa3


0x5e45:	mov	edx, ebx
0x5e47:	shr	dl, 5
0x5e4a:	movzx	edx, dl
0x5e4d:	mov	edx, dword ptr [rsi + rdx*4]
0x5e50:	bt	edx, ebx
0x5e53:	jb	0x5fa3


0x66ad:	cmp	r13, r15
0x66b0:	jbe	0x66b6


0x6700:	lea	rax, [r15 + 1]
0x6704:	cmp	r13, rax
0x6707:	jbe	0x670f


0x66fb:	mov	byte ptr [r14 + r15], 0x27
0x6700:	lea	rax, [r15 + 1]
0x6704:	cmp	r13, rax
0x6707:	jbe	0x670f


0x5e95:	mov	byte ptr [r14 + r15], bl
0x5e99:	movzx	edi, byte ptr [rsp + 0xe]
0x5e9e:	add	r15, 1
0x5ea2:	mov	eax, 0
0x5ea7:	test	r12b, r12b
0x5eaa:	cmove	edi, eax
0x5ead:	mov	byte ptr [rsp + 0xe], dil
0x5eb2:	jmp	0x5ce8


0x5e99:	movzx	edi, byte ptr [rsp + 0xe]
0x5e9e:	add	r15, 1
0x5ea2:	mov	eax, 0
0x5ea7:	test	r12b, r12b
0x5eaa:	cmove	edi, eax
0x5ead:	mov	byte ptr [rsp + 0xe], dil
0x5eb2:	jmp	0x5ce8


0x5e7a:	lea	rax, [r15 + 1]
0x5e7e:	cmp	r13, rax
0x5e81:	jbe	0x5e89


0x5e75:	mov	byte ptr [r14 + r15], 0x27
0x5e7a:	lea	rax, [r15 + 1]
0x5e7e:	cmp	r13, rax
0x5e81:	jbe	0x5e89


0x667b:	lea	rax, [r15 + 2]
0x667f:	cmp	r13, rax
0x6682:	jbe	0x6694


0x666e:	mov	eax, ebx
0x6670:	shr	al, 6
0x6673:	add	eax, 0x30
0x6676:	mov	byte ptr [r14 + r15 + 1], al
0x667b:	lea	rax, [r15 + 2]
0x667f:	cmp	r13, rax
0x6682:	jbe	0x6694


0x6645:	lea	rsi, [r15 + 2]
0x6649:	cmp	r13, rsi
0x664c:	jbe	0x6654


0x663f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x6645:	lea	rsi, [r15 + 2]
0x6649:	cmp	r13, rsi
0x664c:	jbe	0x6654


0x6772:	mov	r14, qword ptr [rsp + 0x40]
0x6777:	mov	r13, qword ptr [rsp + 0x70]
0x677c:	mov	rbp, qword ptr [rsp + 0x30]
0x6781:	mov	dword ptr [rsp + 8], 2
0x6789:	cmp	byte ptr [rsp + 0xd], 0
0x678e:	je	0x67a0


0x5e62:	xor	eax, 1
0x5e65:	add	rbp, 1
0x5e69:	and	eax, r8d
0x5e6c:	test	al, al
0x5e6e:	je	0x5e90


0x5fa3:	cmp	dword ptr [rsp + 8], 2
0x5fa8:	sete	dl
0x5fab:	cmp	byte ptr [rsp + 0xf], 0
0x5fb0:	mov	eax, edx
0x5fb2:	jne	0x6808


0x66b6:	movzx	ebx, byte ptr [rdi + rbp]
0x66ba:	add	r15, 1
0x66be:	test	dl, dl
0x66c0:	jne	0x6610


0x66b2:	mov	byte ptr [r14 + r15], bl
0x66b6:	movzx	ebx, byte ptr [rdi + rbp]
0x66ba:	add	r15, 1
0x66be:	test	dl, dl
0x66c0:	jne	0x6610


0x670f:	add	r15, 2
0x6713:	xor	r10d, r10d
0x6716:	xor	r8d, r8d
0x6719:	jmp	0x66ad


0x6709:	mov	byte ptr [r14 + r15 + 1], 0x27
0x670f:	add	r15, 2
0x6713:	xor	r10d, r10d
0x6716:	xor	r8d, r8d
0x6719:	jmp	0x66ad


0x5ce8:	cmp	r11, rbp
0x5ceb:	setne	r12b
0x5cef:	cmp	r11, -1
0x5cf3:	jne	0x5d02


0x5e89:	add	r15, 2
0x5e8d:	xor	r8d, r8d
0x5e90:	cmp	r15, r13
0x5e93:	jae	0x5e99


0x5e83:	mov	byte ptr [r14 + r15 + 1], 0x27
0x5e89:	add	r15, 2
0x5e8d:	xor	r8d, r8d
0x5e90:	cmp	r15, r13
0x5e93:	jae	0x5e99


0x6694:	and	ebx, 7
0x6697:	add	rbp, 1
0x669b:	add	r15, 3
0x669f:	add	ebx, 0x30
0x66a2:	cmp	rbp, rcx
0x66a5:	jae	0x5e90


0x6684:	mov	eax, ebx
0x6686:	shr	al, 3
0x6689:	and	eax, 7
0x668c:	add	eax, 0x30
0x668f:	mov	byte ptr [r14 + r15 + 2], al
0x6694:	and	ebx, 7
0x6697:	add	rbp, 1
0x669b:	add	r15, 3
0x669f:	add	ebx, 0x30
0x66a2:	cmp	rbp, rcx
0x66a5:	jae	0x5e90


0x6654:	add	r15, 3
0x6658:	mov	r8d, eax
0x665b:	cmp	r13, r15
0x665e:	jbe	0x6665


0x664e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x6654:	add	r15, 3
0x6658:	mov	r8d, eax
0x665b:	cmp	r13, r15
0x665e:	jbe	0x6665


0x5fb8:	mov	eax, r8d
0x5fbb:	xor	eax, 1
0x5fbe:	and	al, dl
0x5fc0:	je	0x5ff1


0x6808:	mov	rbp, r11
0x680b:	jmp	0x6789


0x66ab:	mov	esi, edx
0x66ad:	cmp	r13, r15
0x66b0:	jbe	0x66b6


0x5ff1:	cmp	r13, r15
0x5ff4:	jbe	0x5ffb


0x5fc2:	cmp	r13, r15
0x5fc5:	jbe	0x5fcc


0x5ffb:	add	r15, 1
0x5fff:	add	rbp, 1
0x6003:	jmp	0x5e90


0x5ff6:	mov	byte ptr [r14 + r15], 0x5c
0x5ffb:	add	r15, 1
0x5fff:	add	rbp, 1
0x6003:	jmp	0x5e90


0x5fcc:	lea	rdx, [r15 + 1]
0x5fd0:	cmp	r13, rdx
0x5fd3:	jbe	0x5fdb


0x5fc7:	mov	byte ptr [r14 + r15], 0x27
0x5fcc:	lea	rdx, [r15 + 1]
0x5fd0:	cmp	r13, rdx
0x5fd3:	jbe	0x5fdb


0x5fdb:	lea	rdx, [r15 + 2]
0x5fdf:	cmp	r13, rdx
0x5fe2:	jbe	0x5fea


0x5fd5:	mov	byte ptr [r14 + r15 + 1], 0x24
0x5fdb:	lea	rdx, [r15 + 2]
0x5fdf:	cmp	r13, rdx
0x5fe2:	jbe	0x5fea


0x5fea:	add	r15, 3
0x5fee:	mov	r8d, eax
0x5ff1:	cmp	r13, r15
0x5ff4:	jbe	0x5ffb


0x5fe4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x5fea:	add	r15, 3
0x5fee:	mov	r8d, eax
0x5ff1:	cmp	r13, r15
0x5ff4:	jbe	0x5ffb


0x6595:	mov	rdi, qword ptr [rsp + 0x28]
0x659a:	test	eax, eax
0x659c:	mov	eax, 0
0x65a1:	cmove	r12d, eax
0x65a5:	add	rbx, r15
0x65a8:	call	0x2790


0x65ad:	test	eax, eax
0x65af:	je	0x6533


0x6533:	mov	rax, qword ptr [rsp + 0x10]
0x6538:	lea	r14, [rbp + rbx]
0x653d:	mov	rdx, qword ptr [rsp + 0x30]
0x6542:	mov	rcx, qword ptr [rsp + 0x28]
0x6547:	mov	rdi, qword ptr [rsp + 0x38]
0x654c:	lea	r13, [rax + r14]
0x6550:	sub	rdx, r14
0x6553:	mov	rsi, r13
0x6556:	call	0x8ee0


0x5d5c:	movzx	r8d, byte ptr [rsp + 0x38]
0x5d62:	movzx	r10d, byte ptr [rsp + 0x30]
0x5d68:	mov	r11, rax
0x5d6b:	mov	r9, qword ptr [rsp + 0x28]
0x5d70:	cmp	rbx, r11
0x5d73:	mov	byte ptr [rsp + 0x28], r10b
0x5d78:	ja	0x6330


0x64e0:	movzx	r8d, byte ptr [rsp + 0x40]
0x64e6:	movzx	r10d, byte ptr [rsp + 0x38]
0x64ec:	mov	r11, rax
0x64ef:	mov	r9, qword ptr [rsp + 0x30]
0x64f4:	lea	rax, [rsp + 0x9c]
0x64fc:	xor	ecx, ecx
0x64fe:	mov	byte ptr [rsp + 0x7e], bl
0x6502:	mov	byte ptr [rsp + 0x7d], r8b
0x6507:	mov	rbx, rcx
0x650a:	mov	qword ptr [rsp + 0x88], r9
0x6512:	mov	qword ptr [rsp + 0x38], rax
0x6517:	mov	byte ptr [rsp + 0x7f], r10b
0x651c:	mov	qword ptr [rsp + 0x80], r15
0x6524:	mov	qword ptr [rsp + 0x40], r14
0x6529:	mov	qword ptr [rsp + 0x70], r13
0x652e:	mov	qword ptr [rsp + 0x30], r11
0x6533:	mov	rax, qword ptr [rsp + 0x10]
0x6538:	lea	r14, [rbp + rbx]
0x653d:	mov	rdx, qword ptr [rsp + 0x30]
0x6542:	mov	rcx, qword ptr [rsp + 0x28]
0x6547:	mov	rdi, qword ptr [rsp + 0x38]
0x654c:	lea	r13, [rax + r14]
0x6550:	sub	rdx, r14
0x6553:	mov	rsi, r13
0x6556:	call	0x8ee0


0x6118:	mov	rcx, qword ptr [rax]
0x611b:	movzx	edx, bl
0x611e:	movzx	r10d, byte ptr [rsp + 0x28]
0x6124:	movzx	r8d, byte ptr [rsp + 0x30]
0x612a:	mov	r11, qword ptr [rsp + 0x38]
0x612f:	mov	edi, 1
0x6134:	movzx	eax, word ptr [rcx + rdx*2]
0x6138:	and	ax, 0x4000
0x613c:	setne	r12b
0x6140:	sete	al
0x6143:	and	al, byte ptr [rsp + 0xd]
0x6147:	test	al, al
0x6149:	jne	0x6ae1


0x5df0:	xor	r10d, r10d
0x5df3:	cmp	r11, 1
0x5df7:	setne	al
0x5dfa:	cmp	r11, -1
0x5dfe:	jne	0x5e0c


0x5e00:	mov	rax, qword ptr [rsp + 0x10]
0x5e05:	cmp	byte ptr [rax + 1], 0
0x5e09:	setne	al
0x5e0c:	cmp	dword ptr [rsp + 8], 2
0x5e11:	sete	dl
0x5e14:	test	al, al
0x5e16:	je	0x6068


0x5e0c:	cmp	dword ptr [rsp + 8], 2
0x5e11:	sete	dl
0x5e14:	test	al, al
0x5e16:	je	0x6068


0x6068:	test	rbp, rbp
0x606b:	jne	0x5e1c


0x5e1c:	xor	r12d, r12d
0x5e1f:	xor	eax, eax
0x5e21:	nop	dword ptr [rax]
0x5e28:	cmp	byte ptr [rsp + 0xd], 1
0x5e2d:	jne	0x5f42


0x6071:	movzx	eax, byte ptr [rsp + 0xf]
0x6076:	and	al, dl
0x6078:	je	0x5e28


0x607e:	mov	rbp, r11
0x6081:	mov	dword ptr [rsp + 8], 2
0x6089:	jmp	0x6789


0x6488:	cmp	byte ptr [rsp + 0xf], 0
0x648d:	jne	0x6cb0


0x5ed0:	cmp	eax, 5
0x5ed3:	je	0x6448


0x6493:	xor	r12d, r12d
0x6496:	xor	eax, eax
0x6498:	mov	ebx, 0x3f
0x649d:	jmp	0x5e59


0x6cb0:	mov	rbp, r11
0x6cb3:	movzx	eax, byte ptr [rsp + 0xf]
0x6cb8:	jmp	0x6789


0x6448:	test	byte ptr [rsp + 0x78], 4
0x644d:	je	0x6470


0x5ed9:	cmp	eax, 2
0x5edc:	mov	ebx, 0x3f
0x5ee1:	sete	dl
0x5ee4:	xor	r12d, r12d
0x5ee7:	xor	eax, eax
0x5ee9:	jmp	0x5e28


0x6470:	xor	edx, edx
0x6472:	xor	r12d, r12d
0x6475:	xor	eax, eax
0x6477:	mov	ebx, 0x3f
0x647c:	jmp	0x5e28


0x644f:	lea	rcx, [rbp + 2]
0x6453:	cmp	rcx, r11
0x6456:	jae	0x6470


0x6458:	mov	rax, qword ptr [rsp + 0x10]
0x645d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x6462:	je	0x6bf2


0x6bf2:	movzx	ebx, byte ptr [rax + rcx]
0x6bf6:	cmp	bl, 0x3e
0x6bf9:	ja	0x6470


0x6bff:	movabs	rax, 0x7000a38200000000
0x6c09:	bt	rax, rbx
0x6c0d:	jae	0x6470


0x6c13:	cmp	byte ptr [rsp + 0xf], 0
0x6c18:	jne	0x6e02


0x6c1e:	cmp	r13, r15
0x6c21:	jbe	0x6c28


0x6e02:	mov	rbp, r11
0x6e05:	jmp	0x67a0


0x6c28:	lea	rax, [r15 + 1]
0x6c2c:	cmp	r13, rax
0x6c2f:	jbe	0x6c37


0x6c23:	mov	byte ptr [r14 + r15], 0x3f
0x6c28:	lea	rax, [r15 + 1]
0x6c2c:	cmp	r13, rax
0x6c2f:	jbe	0x6c37


0x6c37:	lea	rax, [r15 + 2]
0x6c3b:	cmp	r13, rax
0x6c3e:	jbe	0x6c46


0x6c31:	mov	byte ptr [r14 + r15 + 1], 0x22
0x6c37:	lea	rax, [r15 + 2]
0x6c3b:	cmp	r13, rax
0x6c3e:	jbe	0x6c46


0x6c46:	lea	rax, [r15 + 3]
0x6c4a:	cmp	r13, rax
0x6c4d:	jbe	0x6c55


0x6c40:	mov	byte ptr [r14 + r15 + 2], 0x22
0x6c46:	lea	rax, [r15 + 3]
0x6c4a:	cmp	r13, rax
0x6c4d:	jbe	0x6c55


0x6c55:	add	r15, 4
0x6c59:	xor	edx, edx
0x6c5b:	xor	r12d, r12d
0x6c5e:	xor	eax, eax
0x6c60:	mov	rbp, rcx
0x6c63:	jmp	0x5e28


0x6c4f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x6c55:	add	r15, 4
0x6c59:	xor	edx, edx
0x6c5b:	xor	r12d, r12d
0x6c5e:	xor	eax, eax
0x6c60:	mov	rbp, rcx
0x6c63:	jmp	0x5e28


0x6400:	cmp	byte ptr [rsp + 0xf], 0
0x6405:	jne	0x6cb0


0x5efe:	mov	byte ptr [rsp + 0x7c], r12b
0x5f03:	xor	edx, edx
0x5f05:	xor	eax, eax
0x5f07:	mov	ebx, 0x27
0x5f0c:	jmp	0x5e28


0x640b:	test	r13, r13
0x640e:	je	0x6810


0x6810:	cmp	r13, r15
0x6813:	jbe	0x681a


0x6414:	xor	edx, edx
0x6416:	cmp	qword ptr [rsp + 0x50], 0
0x641c:	jne	0x6810


0x681a:	lea	rax, [r15 + 1]
0x681e:	cmp	r13, rax
0x6821:	jbe	0x6829


0x6815:	mov	byte ptr [r14 + r15], 0x27
0x681a:	lea	rax, [r15 + 1]
0x681e:	cmp	r13, rax
0x6821:	jbe	0x6829


0x6422:	mov	qword ptr [rsp + 0x50], r13
0x6427:	add	r15, 3
0x642b:	xor	eax, eax
0x642d:	mov	byte ptr [rsp + 0x7c], r12b
0x6432:	xor	r8d, r8d
0x6435:	mov	r13, rdx
0x6438:	mov	ebx, 0x27
0x643d:	jmp	0x5e59


0x6829:	lea	rax, [r15 + 2]
0x682d:	cmp	r13, rax
0x6830:	jbe	0x6e22


0x6823:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x6829:	lea	rax, [r15 + 2]
0x682d:	cmp	r13, rax
0x6830:	jbe	0x6e22


0x6e22:	mov	rdx, r13
0x6e25:	mov	r13, qword ptr [rsp + 0x50]
0x6e2a:	jmp	0x6422


0x6836:	mov	rdx, r13
0x6839:	mov	byte ptr [r14 + r15 + 2], 0x27
0x683f:	mov	r13, qword ptr [rsp + 0x50]
0x6844:	jmp	0x6422


0x5f34:	cmp	byte ptr [rsp + 0xd], 0
0x5f39:	jne	0x5fa0


0x5f3b:	mov	ebx, edx
0x5f3d:	xor	r12d, r12d
0x5f40:	xor	eax, eax
0x5f42:	cmp	byte ptr [rsp + 0xf], 0
0x5f47:	jne	0x5e3b


0x5fa0:	xor	r12d, r12d
0x5fa3:	cmp	dword ptr [rsp + 8], 2
0x5fa8:	sete	dl
0x5fab:	cmp	byte ptr [rsp + 0xf], 0
0x5fb0:	mov	eax, edx
0x5fb2:	jne	0x6808


0x6340:	cmp	byte ptr [rsp + 0xf], 0
0x6345:	jne	0x6cb0


0x5f73:	cmp	byte ptr [rsp + 0xd], 0
0x5f78:	je	0x6190


0x634b:	add	rbp, 1
0x634f:	mov	eax, r8d
0x6352:	xor	r12d, r12d
0x6355:	mov	ebx, 0x5c
0x635a:	jmp	0x5e6c


0x6190:	mov	edx, 0x5c
0x6195:	mov	ebx, 0x5c
0x619a:	jmp	0x5f34


0x5f7e:	cmp	byte ptr [rsp + 0xf], 0
0x5f83:	je	0x6190


0x5f89:	cmp	qword ptr [rsp + 0x18], 0
0x5f8f:	jne	0x634b


0x5f95:	mov	ebx, 0x5c
0x5f9a:	nop	word ptr [rax + rax]
0x5fa0:	xor	r12d, r12d
0x5fa3:	cmp	dword ptr [rsp + 8], 2
0x5fa8:	sete	dl
0x5fab:	cmp	byte ptr [rsp + 0xf], 0
0x5fb0:	mov	eax, edx
0x5fb2:	jne	0x6808


0x601b:	xor	edx, edx
0x601d:	test	byte ptr [rsp + 0x78], 1
0x6022:	je	0x5f3b


0x61e3:	cmp	dword ptr [rsp + 8], 2
0x61e8:	sete	dl
0x61eb:	cmp	byte ptr [rsp + 0xf], 0
0x61f0:	jne	0x6d8a


0x6028:	add	rbp, 1
0x602c:	jmp	0x5ce8


0x61f6:	mov	eax, r8d
0x61f9:	mov	rcx, r15
0x61fc:	xor	eax, 1
0x61ff:	and	al, dl
0x6201:	je	0x6230


0x6d8a:	movzx	ebx, byte ptr [rsp + 0xf]
0x6d8f:	mov	rbp, r11
0x6d92:	mov	eax, edx
0x6d94:	mov	byte ptr [rsp + 0xd], bl
0x6d98:	jmp	0x6789


0x6230:	cmp	r13, rcx
0x6233:	jbe	0x623a


0x6203:	cmp	r13, r15
0x6206:	jbe	0x620d


0x623a:	cmp	dword ptr [rsp + 8], 2
0x623f:	lea	r15, [rcx + 1]
0x6243:	je	0x6849


0x6235:	mov	byte ptr [r14 + rcx], 0x5c
0x623a:	cmp	dword ptr [rsp + 8], 2
0x623f:	lea	r15, [rcx + 1]
0x6243:	je	0x6849


0x620d:	lea	rcx, [r15 + 1]
0x6211:	cmp	r13, rcx
0x6214:	jbe	0x621c


0x6208:	mov	byte ptr [r14 + r15], 0x27
0x620d:	lea	rcx, [r15 + 1]
0x6211:	cmp	r13, rcx
0x6214:	jbe	0x621c


0x6849:	mov	eax, r12d
0x684c:	mov	ebx, 0x30
0x6851:	xor	r12d, r12d
0x6854:	jmp	0x5e59


0x6249:	lea	rax, [rbp + 1]
0x624d:	cmp	rax, r11
0x6250:	jae	0x626b


0x621c:	lea	rcx, [r15 + 2]
0x6220:	cmp	r13, rcx
0x6223:	ja	0x6859


0x6216:	mov	byte ptr [r14 + r15 + 1], 0x24
0x621c:	lea	rcx, [r15 + 2]
0x6220:	cmp	r13, rcx
0x6223:	ja	0x6859


0x6252:	mov	rax, qword ptr [rsp + 0x10]
0x6257:	movzx	eax, byte ptr [rax + rbp + 1]
0x625c:	mov	byte ptr [rsp + 0x28], al
0x6260:	sub	eax, 0x30
0x6263:	cmp	al, 9
0x6265:	jbe	0x6a99


0x626b:	mov	eax, r12d
0x626e:	mov	ebx, 0x30
0x6273:	xor	r12d, r12d
0x6276:	jmp	0x5e28


0x6229:	lea	rcx, [r15 + 3]
0x622d:	mov	r8d, eax
0x6230:	cmp	r13, rcx
0x6233:	jbe	0x623a


0x6859:	mov	byte ptr [r14 + r15 + 2], 0x27
0x685f:	jmp	0x6229


0x6a99:	cmp	r13, r15
0x6a9c:	jbe	0x6aa3


0x6aa3:	lea	rax, [rcx + 2]
0x6aa7:	cmp	r13, rax
0x6aaa:	jbe	0x6ab2


0x6a9e:	mov	byte ptr [r14 + r15], 0x30
0x6aa3:	lea	rax, [rcx + 2]
0x6aa7:	cmp	r13, rax
0x6aaa:	jbe	0x6ab2


0x6ab2:	mov	eax, r12d
0x6ab5:	lea	r15, [rcx + 3]
0x6ab9:	xor	r12d, r12d
0x6abc:	mov	ebx, 0x30
0x6ac1:	jmp	0x5e28


0x6aac:	mov	byte ptr [r14 + rcx + 2], 0x30
0x6ab2:	mov	eax, r12d
0x6ab5:	lea	r15, [rcx + 3]
0x6ab9:	xor	r12d, r12d
0x6abc:	mov	ebx, 0x30
0x6ac1:	jmp	0x5e28


0x5f22:	cmp	dword ptr [rsp + 8], 2
0x5f27:	sete	al
0x5f2a:	and	al, byte ptr [rsp + 0xf]
0x5f2e:	jne	0x607e


0x62e0:	mov	edx, 0xd
0x62e5:	xor	r10d, r10d
0x62e8:	mov	ebx, 0x72
0x62ed:	jmp	0x5f22


0x6864:	test	ebx, ebx
0x6866:	jne	0x5c93


0x686c:	mov	byte ptr [rsp + 0xd], 1
0x6871:	test	r13, r13
0x6874:	jne	0x6e0a


0x687a:	lea	rax, [rip + 0x72a4]
0x6881:	mov	qword ptr [rsp + 0x50], 0
0x688a:	mov	byte ptr [rsp + 0xe], 1
0x688f:	mov	byte ptr [rsp + 0x7c], 0
0x6894:	xor	r12d, r12d
0x6897:	mov	byte ptr [rsp + 0xf], 0
0x689c:	mov	qword ptr [rsp + 0x18], 1
0x68a5:	mov	qword ptr [rsp + 0x48], rax
0x68aa:	mov	r15d, 1
0x68b0:	mov	dword ptr [rsp + 8], 2
0x68b8:	jmp	0x5cd3


0x6e0a:	mov	byte ptr [rsp + 0xe], 1
0x6e0f:	xor	eax, eax
0x6e11:	xor	r12d, r12d
0x6e14:	mov	qword ptr [rsp + 0x50], 0
0x6e1d:	jmp	0x63c4


0x63c4:	lea	rbx, [rip + 0x775a]
0x63cb:	mov	byte ptr [r14], 0x27
0x63cf:	mov	dword ptr [rsp + 8], 2
0x63d7:	mov	r15d, 1
0x63dd:	mov	qword ptr [rsp + 0x18], 1
0x63e6:	mov	byte ptr [rsp + 0xf], 0
0x63eb:	mov	qword ptr [rsp + 0x48], rbx
0x63f0:	mov	byte ptr [rsp + 0x7c], al
0x63f4:	jmp	0x5cd3


0x68c8:	test	r13, r13
0x68cb:	je	0x6af6


0x6cbd:	lea	rax, [rip + 0x6e5f]
0x6cc4:	mov	byte ptr [rsp + 0xe], 1
0x6cc9:	mov	byte ptr [rsp + 0x7c], 0
0x6cce:	xor	r12d, r12d
0x6cd1:	mov	qword ptr [rsp + 0x50], 0
0x6cda:	mov	byte ptr [rsp + 0xf], 1
0x6cdf:	mov	byte ptr [rsp + 0xd], 1
0x6ce4:	mov	qword ptr [rsp + 0x18], 1
0x6ced:	xor	r15d, r15d
0x6cf0:	mov	qword ptr [rsp + 0x48], rax
0x6cf5:	jmp	0x5cd3


0x6af6:	mov	qword ptr [rsp + 0x50], 0
0x6aff:	mov	byte ptr [rsp + 0xe], 1
0x6b04:	xor	r12d, r12d
0x6b07:	mov	byte ptr [rsp + 0x7c], 0
0x6b0c:	jmp	0x68eb


0x68d1:	mov	byte ptr [r14], 0x22
0x68d5:	mov	byte ptr [rsp + 0xe], 1
0x68da:	xor	r12d, r12d
0x68dd:	mov	byte ptr [rsp + 0x7c], 0
0x68e2:	mov	qword ptr [rsp + 0x50], 0
0x68eb:	lea	rax, [rip + 0x7231]
0x68f2:	mov	byte ptr [rsp + 0xf], 0
0x68f7:	mov	byte ptr [rsp + 0xd], 1
0x68fc:	mov	qword ptr [rsp + 0x18], 1
0x6905:	mov	r15d, 1
0x690b:	mov	qword ptr [rsp + 0x48], rax
0x6910:	jmp	0x5cd3


0x68eb:	lea	rax, [rip + 0x7231]
0x68f2:	mov	byte ptr [rsp + 0xf], 0
0x68f7:	mov	byte ptr [rsp + 0xd], 1
0x68fc:	mov	qword ptr [rsp + 0x18], 1
0x6905:	mov	r15d, 1
0x690b:	mov	qword ptr [rsp + 0x48], rax
0x6910:	jmp	0x5cd3


0x6915:	lea	rax, [rip + 0x7207]
0x691c:	mov	byte ptr [rsp + 0xe], 1
0x6921:	mov	byte ptr [rsp + 0x7c], 0
0x6926:	xor	r12d, r12d
0x6929:	mov	qword ptr [rsp + 0x50], 0
0x6932:	mov	byte ptr [rsp + 0xf], 1
0x6937:	mov	byte ptr [rsp + 0xd], 1
0x693c:	mov	qword ptr [rsp + 0x18], 1
0x6945:	xor	r15d, r15d
0x6948:	mov	qword ptr [rsp + 0x48], rax
0x694d:	mov	dword ptr [rsp + 8], 5
0x6955:	jmp	0x5cd3


0x695a:	mov	byte ptr [rsp + 0xe], 1
0x695f:	mov	byte ptr [rsp + 0x7c], 0
0x6964:	xor	r12d, r12d
0x6967:	mov	qword ptr [rsp + 0x50], 0
0x6970:	mov	byte ptr [rsp + 0xf], 0
0x6975:	xor	r15d, r15d
0x6978:	mov	byte ptr [rsp + 0xd], 1
0x697d:	mov	qword ptr [rsp + 0x18], 0
0x6986:	mov	qword ptr [rsp + 0x48], 0
0x698f:	jmp	0x5cd3


0x6994:	cmp	dword ptr [rsp + 8], 0xa
0x6999:	je	0x69f1


0x69f1:	xor	r15d, r15d
0x69f4:	test	ebx, ebx
0x69f6:	je	0x6bbd


0x699b:	lea	rsi, [rip + 0x7185]
0x69a2:	xor	edi, edi
0x69a4:	mov	edx, 5
0x69a9:	call	0x24f0


0x6bbd:	mov	rdx, qword ptr [rsp + 0x68]
0x6bc2:	movzx	eax, byte ptr [rdx]
0x6bc5:	test	al, al
0x6bc7:	je	0x69fc


0x69fc:	test	ebx, ebx
0x69fe:	mov	rbx, qword ptr [rsp + 0x60]
0x6a03:	setne	byte ptr [rsp + 0xf]
0x6a08:	xor	r12d, r12d
0x6a0b:	mov	rdi, rbx
0x6a0e:	call	0x2510


0x6bd9:	add	r15, 1
0x6bdd:	movzx	eax, byte ptr [rdx + r15]
0x6be2:	test	al, al
0x6be4:	jne	0x6bd0


0x6bd5:	mov	byte ptr [r14 + r15], al
0x6bd9:	add	r15, 1
0x6bdd:	movzx	eax, byte ptr [rdx + r15]
0x6be2:	test	al, al
0x6be4:	jne	0x6bd0


0x6be6:	jmp	0x69fc


0x6bd0:	cmp	r13, r15
0x6bd3:	jbe	0x6bd9


0x6a13:	mov	qword ptr [rsp + 0x48], rbx
0x6a18:	mov	qword ptr [rsp + 0x18], rax
0x6a1d:	mov	byte ptr [rsp + 0xe], 1
0x6a22:	mov	byte ptr [rsp + 0x7c], 0
0x6a27:	mov	qword ptr [rsp + 0x50], 0
0x6a30:	mov	byte ptr [rsp + 0xd], 1
0x6a35:	jmp	0x5cd3


0x69ae:	mov	rcx, rax
0x69b1:	mov	qword ptr [rsp + 0x68], rax
0x69b6:	lea	rax, [rip + 0x716a]
0x69bd:	cmp	rcx, rax
0x69c0:	je	0x6d5e


0x6d5e:	mov	esi, dword ptr [rsp + 8]
0x6d62:	mov	rdi, rcx
0x6d65:	call	0x5b10


0x69c6:	lea	rsi, [rip + 0x7158]
0x69cd:	xor	edi, edi
0x69cf:	mov	edx, 5
0x69d4:	call	0x24f0


0x69d9:	mov	rcx, rax
0x69dc:	mov	qword ptr [rsp + 0x60], rax
0x69e1:	lea	rax, [rip + 0x713d]
0x69e8:	cmp	rcx, rax
0x69eb:	je	0x6d74


0x6d74:	mov	esi, dword ptr [rsp + 8]
0x6d78:	mov	rdi, rcx
0x6d7b:	call	0x5b10


0x6d80:	mov	qword ptr [rsp + 0x60], rax
0x6d85:	jmp	0x69f1


0x6d6a:	mov	qword ptr [rsp + 0x68], rax
0x6d6f:	jmp	0x69c6


0x6a3a:	mov	byte ptr [rsp + 0xe], 1
0x6a3f:	mov	byte ptr [rsp + 0x7c], 0
0x6a44:	xor	r12d, r12d
0x6a47:	mov	qword ptr [rsp + 0x50], 0
0x6a50:	mov	byte ptr [rsp + 0xf], 0
0x6a55:	xor	r15d, r15d
0x6a58:	mov	byte ptr [rsp + 0xd], 0
0x6a5d:	mov	qword ptr [rsp + 0x18], 0
0x6a66:	mov	qword ptr [rsp + 0x48], 0
0x6a6f:	jmp	0x5cd3


0x6a74:	mov	byte ptr [rsp + 0xe], 1
0x6a79:	mov	byte ptr [rsp + 0x7c], 0
0x6a7e:	xor	r12d, r12d
0x6a81:	mov	qword ptr [rsp + 0x50], 0
0x6a8a:	mov	byte ptr [rsp + 0xf], 1
0x6a8f:	mov	byte ptr [rsp + 0xd], 1
0x6a94:	jmp	0x5cb3


0x5cb3:	lea	rax, [rip + 0x7e6b]
0x5cba:	mov	qword ptr [rsp + 0x18], 1
0x5cc3:	xor	r15d, r15d
0x5cc6:	mov	dword ptr [rsp + 8], 2
0x5cce:	mov	qword ptr [rsp + 0x48], rax
0x5cd3:	xor	r11d, r11d
0x5cd6:	mov	rax, rbp
0x5cd9:	mov	r8d, r12d
0x5cdc:	mov	rbp, r11
0x5cdf:	mov	r11, rax
0x5ce2:	nop	word ptr [rax + rax]
0x5ce8:	cmp	r11, rbp
0x5ceb:	setne	r12b
0x5cef:	cmp	r11, -1
0x5cf3:	jne	0x5d02


0x6c68:	test	ebx, ebx
0x6c6a:	je	0x6df8


0x6df8:	mov	byte ptr [rsp + 0xd], 0
0x6dfd:	jmp	0x6871


0x6c70:	lea	rax, [rip + 0x6eae]
0x6c77:	mov	byte ptr [rsp + 0xe], 1
0x6c7c:	mov	byte ptr [rsp + 0x7c], 0
0x6c81:	xor	r12d, r12d
0x6c84:	mov	qword ptr [rsp + 0x50], 0
0x6c8d:	mov	byte ptr [rsp + 0xf], 1
0x6c92:	mov	byte ptr [rsp + 0xd], 0
0x6c97:	mov	qword ptr [rsp + 0x18], 1
0x6ca0:	xor	r15d, r15d
0x6ca3:	mov	qword ptr [rsp + 0x48], rax
0x6ca8:	jmp	0x5cd3


0x6871:	test	r13, r13
0x6874:	jne	0x6e0a


0x6e34:	nop	
0x6e36:	nop	word ptr cs:[rax + rax]


0x6feb:	nop	dword ptr [rax + rax]


0x7026:	nop	word ptr cs:[rax + rax]


0x7041:	nop	dword ptr [rax + rax]
0x7046:	nop	word ptr cs:[rax + rax]


0x7061:	nop	dword ptr [rax + rax]
0x7066:	nop	word ptr cs:[rax + rax]


0x70a5:	nop	
0x70a6:	nop	word ptr cs:[rax + rax]


0x70c5:	nop	
0x70c6:	nop	word ptr cs:[rax + rax]


0x7174:	nop	
0x7176:	nop	word ptr cs:[rax + rax]


0x7263:	nop	dword ptr [rax]
0x7266:	nop	word ptr cs:[rax + rax]


0x727a:	nop	word ptr [rax + rax]


0x7313:	nop	dword ptr [rax]
0x7316:	nop	word ptr cs:[rax + rax]


0x7333:	nop	dword ptr [rax]
0x7336:	nop	word ptr cs:[rax + rax]


0x734c:	nop	dword ptr [rax]


0x7368:	nop	dword ptr [rax + rax]


0x7384:	nop	
0x7386:	nop	word ptr cs:[rax + rax]


0x741e:	nop	


0x74aa:	nop	word ptr [rax + rax]


0x74bc:	nop	dword ptr [rax]


0x74cf:	nop	


0x7568:	nop	dword ptr [rax + rax]


0x7591:	nop	dword ptr [rax + rax]
0x7596:	nop	word ptr cs:[rax + rax]


0x75aa:	nop	word ptr [rax + rax]


0x763e:	nop	


0x76d1:	nop	dword ptr [rax + rax]
0x76d6:	nop	word ptr cs:[rax + rax]


0x76ec:	nop	dword ptr [rax]


0x7707:	nop	word ptr [rax + rax]


0x7723:	nop	dword ptr [rax]
0x7726:	nop	word ptr cs:[rax + rax]


0x773c:	nop	dword ptr [rax]


0x7754:	nop	
0x7756:	nop	word ptr cs:[rax + rax]


0x7773:	nop	dword ptr [rax]
0x7776:	nop	word ptr cs:[rax + rax]


0x7798:	nop	dword ptr [rax + rax]


0x7bb7:	nop	word ptr [rax + rax]


0x7c58:	nop	dword ptr [rax + rax]


0x7d35:	nop	
0x7d36:	nop	word ptr cs:[rax + rax]


0x7dda:	nop	word ptr [rax + rax]


0x7e04:	nop	
0x7e06:	nop	word ptr cs:[rax + rax]


0x7e12:	nop	dword ptr [rax]
0x7e16:	nop	word ptr cs:[rax + rax]


0x7e56:	nop	word ptr cs:[rax + rax]


0x7e84:	nop	
0x7e86:	nop	word ptr cs:[rax + rax]


0x7f12:	nop	dword ptr [rax]
0x7f16:	nop	word ptr cs:[rax + rax]


0x7f6a:	nop	word ptr [rax + rax]


0x7f87:	nop	word ptr [rax + rax]


0x7fbe:	nop	


0x7fe8:	nop	dword ptr [rax + rax]


0x8003:	nop	word ptr cs:[rax + rax]
0x800d:	nop	dword ptr [rax]


0x8045:	nop	word ptr cs:[rax + rax]
0x804f:	nop	


0x8171:	nop	word ptr cs:[rax + rax]
0x817b:	nop	dword ptr [rax + rax]


0x8330:	movabs	r8, 0x8000000000000000
0x833a:	movsxd	rsi, eax
0x833d:	mov	rax, r8
0x8340:	cqo	
0x8342:	idiv	rsi
0x8345:	cmp	rbp, rax
0x8348:	mov	r9, rax
0x834b:	jl	0x87f5


0x87f5:	mov	eax, 1
0x87fa:	mov	rbp, r8
0x87fd:	jmp	0x8388


0x8351:	movabs	r10, 0x7fffffffffffffff
0x835b:	mov	rax, r10
0x835e:	cqo	
0x8360:	idiv	rsi
0x8363:	cmp	rbp, rax
0x8366:	jg	0x8802


0x8388:	or	r12d, eax
0x838b:	nop	dword ptr [rax + rax]
0x8390:	movsxd	rax, edi
0x8393:	add	rcx, rax
0x8396:	mov	eax, r12d
0x8399:	or	eax, 2
0x839c:	mov	qword ptr [rbx], rcx
0x839f:	cmp	byte ptr [rcx], 0
0x83a2:	cmovne	r12d, eax
0x83a6:	jmp	0x8204


0x836c:	imul	rbp, rsi
0x8370:	cmp	r9, rbp
0x8373:	jg	0x87f5


0x8802:	mov	eax, 1
0x8807:	mov	rbp, r10
0x880a:	jmp	0x8388


0x8379:	cmp	rax, rbp
0x837c:	jl	0x8802


0x8382:	imul	rbp, rsi
0x8386:	xor	eax, eax
0x8388:	or	r12d, eax
0x838b:	nop	dword ptr [rax + rax]
0x8390:	movsxd	rax, edi
0x8393:	add	rcx, rax
0x8396:	mov	eax, r12d
0x8399:	or	eax, 2
0x839c:	mov	qword ptr [rbx], rcx
0x839f:	cmp	byte ptr [rcx], 0
0x83a2:	cmovne	r12d, eax
0x83a6:	jmp	0x8204


0x86f0:	mov	r12d, 1
0x86f6:	movabs	rbp, 0x8000000000000000
0x8700:	jmp	0x8390


0x83c3:	movabs	rax, 0x3fffffffffffffff
0x83cd:	cmp	rbp, rax
0x83d0:	jg	0x87b0


0x8390:	movsxd	rax, edi
0x8393:	add	rcx, rax
0x8396:	mov	eax, r12d
0x8399:	or	eax, 2
0x839c:	mov	qword ptr [rbx], rcx
0x839f:	cmp	byte ptr [rcx], 0
0x83a2:	cmovne	r12d, eax
0x83a6:	jmp	0x8204


0x83d6:	add	rbp, rbp
0x83d9:	jmp	0x8390


0x87b0:	mov	r12d, 1
0x87b6:	movabs	rbp, 0x7fffffffffffffff
0x87c0:	jmp	0x8390


0x83f3:	movabs	rax, 0x3fffffffffffff
0x83fd:	cmp	rbp, rax
0x8400:	jg	0x87b0


0x8406:	shl	rbp, 9
0x840a:	jmp	0x8390


0x845f:	cmp	r10, rbp
0x8462:	jle	0x8440


0x8440:	mov	rax, r9
0x8443:	cqo	
0x8445:	idiv	rsi
0x8448:	cmp	rax, rbp
0x844b:	jl	0x8738


0x8464:	mov	r11d, 1
0x846a:	movabs	rbp, 0x8000000000000000
0x8474:	jmp	0x8455


0x8738:	mov	r11d, 1
0x873e:	movabs	rbp, 0x7fffffffffffffff
0x8748:	jmp	0x8455


0x8451:	imul	rbp, rsi
0x8455:	sub	r8d, 1
0x8459:	je	0x8580


0x8455:	sub	r8d, 1
0x8459:	je	0x8580


0x8580:	or	r12d, r11d
0x8583:	jmp	0x8390


0x84cf:	cmp	r10, rbp
0x84d2:	jle	0x84b0


0x84b0:	mov	rax, r9
0x84b3:	cqo	
0x84b5:	idiv	rsi
0x84b8:	cmp	rax, rbp
0x84bb:	jl	0x8708


0x84d4:	mov	r11d, 1
0x84da:	movabs	rbp, 0x8000000000000000
0x84e4:	jmp	0x84c5


0x8708:	mov	r11d, 1
0x870e:	movabs	rbp, 0x7fffffffffffffff
0x8718:	jmp	0x84c5


0x84c1:	imul	rbp, rsi
0x84c5:	sub	r8d, 1
0x84c9:	je	0x8580


0x84c5:	sub	r8d, 1
0x84c9:	je	0x8580


0x850e:	sub	r8, 1
0x8512:	mov	rax, r8
0x8515:	cqo	
0x8517:	idiv	rsi
0x851a:	cmp	rbp, rax
0x851d:	jg	0x87b0


0x8523:	imul	rbp, rsi
0x8527:	jmp	0x8390


0x8561:	mov	rax, r9
0x8564:	cqo	
0x8566:	idiv	rsi
0x8569:	cmp	rax, rbp
0x856c:	jl	0x87e0


0x8750:	mov	r11d, 1
0x8756:	movabs	rbp, 0x8000000000000000
0x8760:	jmp	0x8576


0x87e0:	mov	r11d, 1
0x87e6:	movabs	rbp, 0x7fffffffffffffff
0x87f0:	jmp	0x8576


0x8572:	imul	rbp, rsi
0x8576:	sub	r8d, 1
0x857a:	jne	0x8558


0x8576:	sub	r8d, 1
0x857a:	jne	0x8558


0x8558:	cmp	r10, rbp
0x855b:	jg	0x8750


0x85db:	cmp	r10, rbp
0x85de:	jle	0x85c0


0x85c0:	mov	rax, r9
0x85c3:	cqo	
0x85c5:	idiv	rsi
0x85c8:	cmp	rax, rbp
0x85cb:	jl	0x8768


0x85e0:	mov	r11d, 1
0x85e6:	movabs	rbp, 0x8000000000000000
0x85f0:	jmp	0x85d5


0x8768:	mov	r11d, 1
0x876e:	movabs	rbp, 0x7fffffffffffffff
0x8778:	jmp	0x85d5


0x85d1:	imul	rbp, rsi
0x85d5:	sub	r8d, 1
0x85d9:	je	0x8580


0x85d5:	sub	r8d, 1
0x85d9:	je	0x8580


0x8647:	cmp	r10, rbp
0x864a:	jle	0x8628


0x8628:	mov	rax, r9
0x862b:	cqo	
0x862d:	idiv	rsi
0x8630:	cmp	rax, rbp
0x8633:	jl	0x8780


0x864c:	mov	r11d, 1
0x8652:	movabs	rbp, 0x8000000000000000
0x865c:	jmp	0x863d


0x8780:	mov	r11d, 1
0x8786:	movabs	rbp, 0x7fffffffffffffff
0x8790:	jmp	0x863d


0x8639:	imul	rbp, rsi
0x863d:	sub	r8d, 1
0x8641:	je	0x8580


0x863d:	sub	r8d, 1
0x8641:	je	0x8580


0x8673:	movabs	rax, 0x1fffffffffffff
0x867d:	cmp	rbp, rax
0x8680:	jg	0x87b0


0x8686:	shl	rbp, 0xa
0x868a:	jmp	0x8390


0x86bd:	mov	rax, r9
0x86c0:	cqo	
0x86c2:	idiv	rsi
0x86c5:	cmp	rax, rbp
0x86c8:	jl	0x8798


0x8720:	mov	r11d, 1
0x8726:	movabs	rbp, 0x8000000000000000
0x8730:	jmp	0x86d2


0x8798:	mov	r11d, 1
0x879e:	movabs	rbp, 0x7fffffffffffffff
0x87a8:	jmp	0x86d2


0x86ce:	imul	rbp, rsi
0x86d2:	sub	r8d, 1
0x86d6:	jne	0x86b8


0x86d2:	sub	r8d, 1
0x86d6:	jne	0x86b8


0x86d8:	jmp	0x8580


0x86b8:	cmp	r10, rbp
0x86bb:	jg	0x8720


0x8833:	nop	word ptr cs:[rax + rax]
0x883d:	nop	dword ptr [rax]


0x8a18:	mov	rax, rbx
0x8a1b:	mul	rsi
0x8a1e:	jo	0x8c11


0x8c11:	or	rax, 0xffffffffffffffff
0x8c15:	mov	r8d, 1
0x8c1b:	jmp	0x8a27


0x8a24:	xor	r8d, r8d
0x8a27:	mul	rsi
0x8a2a:	jo	0x8c02


0x8a27:	mul	rsi
0x8a2a:	jo	0x8c02


0x8c02:	mov	r8d, 1
0x8c08:	or	rbx, 0xffffffffffffffff
0x8c0c:	jmp	0x8a33


0x8a30:	mov	rbx, rax
0x8a33:	or	ebp, r8d
0x8a36:	nop	word ptr cs:[rax + rax]
0x8a40:	movsxd	rdi, edi
0x8a43:	mov	eax, ebp
0x8a45:	add	rcx, rdi
0x8a48:	or	eax, 2
0x8a4b:	mov	qword ptr [r15], rcx
0x8a4e:	cmp	byte ptr [rcx], 0
0x8a51:	mov	qword ptr [r14], rbx
0x8a54:	cmovne	ebp, eax
0x8a57:	jmp	0x891d


0x8a33:	or	ebp, r8d
0x8a36:	nop	word ptr cs:[rax + rax]
0x8a40:	movsxd	rdi, edi
0x8a43:	mov	eax, ebp
0x8a45:	add	rcx, rdi
0x8a48:	or	eax, 2
0x8a4b:	mov	qword ptr [r15], rcx
0x8a4e:	cmp	byte ptr [rcx], 0
0x8a51:	mov	qword ptr [r14], rbx
0x8a54:	cmovne	ebp, eax
0x8a57:	jmp	0x891d


0x8a67:	mov	edx, 2
0x8a6c:	mov	rax, rdx
0x8a6f:	mul	rbx
0x8a72:	jo	0x8b0e


0x8b0e:	mov	ebp, 1
0x8b13:	or	rbx, 0xffffffffffffffff
0x8b17:	jmp	0x8a40


0x8a78:	add	rbx, rbx
0x8a7b:	jmp	0x8a40


0x8a40:	movsxd	rdi, edi
0x8a43:	mov	eax, ebp
0x8a45:	add	rcx, rdi
0x8a48:	or	eax, 2
0x8a4b:	mov	qword ptr [r15], rcx
0x8a4e:	cmp	byte ptr [rcx], 0
0x8a51:	mov	qword ptr [r14], rbx
0x8a54:	cmovne	ebp, eax
0x8a57:	jmp	0x891d


0x8a7d:	mov	edx, 0x200
0x8a82:	mov	rax, rdx
0x8a85:	mul	rbx
0x8a88:	jo	0x8b0e


0x8a8e:	shl	rbx, 9
0x8a92:	jmp	0x8a40


0x8a94:	mov	r8d, 7
0x8a9a:	xor	r9d, r9d
0x8a9d:	nop	dword ptr [rax]
0x8aa0:	mov	rax, rbx
0x8aa3:	mul	rsi
0x8aa6:	mov	rbx, rax
0x8aa9:	jo	0x8c3e


0x8c3e:	mov	r9d, 1
0x8c44:	or	rbx, 0xffffffffffffffff
0x8c48:	jmp	0x8aaf


0x8aaf:	sub	r8d, 1
0x8ab3:	jne	0x8aa0


0x8ab5:	or	ebp, r9d
0x8ab8:	jmp	0x8a40


0x8aa0:	mov	rax, rbx
0x8aa3:	mul	rsi
0x8aa6:	mov	rbx, rax
0x8aa9:	jo	0x8c3e


0x8aba:	mov	r8d, 8
0x8ac0:	xor	r9d, r9d
0x8ac3:	nop	dword ptr [rax + rax]
0x8ac8:	mov	rax, rbx
0x8acb:	mul	rsi
0x8ace:	mov	rbx, rax
0x8ad1:	jo	0x8c20


0x8c20:	mov	r9d, 1
0x8c26:	or	rbx, 0xffffffffffffffff
0x8c2a:	jmp	0x8ad7


0x8ad7:	sub	r8d, 1
0x8adb:	jne	0x8ac8


0x8add:	jmp	0x8ab5


0x8ac8:	mov	rax, rbx
0x8acb:	mul	rsi
0x8ace:	mov	rbx, rax
0x8ad1:	jo	0x8c20


0x8adf:	mov	r8d, 4
0x8ae5:	xor	r9d, r9d
0x8ae8:	mov	rax, rbx
0x8aeb:	mul	rsi
0x8aee:	mov	rbx, rax
0x8af1:	jo	0x8bf3


0x8bf3:	mov	r9d, 1
0x8bf9:	or	rbx, 0xffffffffffffffff
0x8bfd:	jmp	0x8af7


0x8af7:	sub	r8d, 1
0x8afb:	jne	0x8ae8


0x8afd:	jmp	0x8ab5


0x8ae8:	mov	rax, rbx
0x8aeb:	mul	rsi
0x8aee:	mov	rbx, rax
0x8af1:	jo	0x8bf3


0x8aff:	mov	rax, rbx
0x8b02:	mul	rsi
0x8b05:	mov	rbx, rax
0x8b08:	jno	0x8a40


0x8c2f:	mov	r9d, 1
0x8c35:	or	rbx, 0xffffffffffffffff
0x8c39:	jmp	0x8b38


0x8b38:	sub	r8d, 1
0x8b3c:	jne	0x8b29


0x8b3e:	jmp	0x8ab5


0x8b29:	mov	rax, rbx
0x8b2c:	mul	rsi
0x8b2f:	mov	rbx, rax
0x8b32:	jo	0x8c2f


0x8b43:	mov	r8d, 6
0x8b49:	xor	r9d, r9d
0x8b4c:	mov	rax, rbx
0x8b4f:	mul	rsi
0x8b52:	mov	rbx, rax
0x8b55:	jo	0x8be4


0x8be4:	mov	r9d, 1
0x8bea:	or	rbx, 0xffffffffffffffff
0x8bee:	jmp	0x8b5b


0x8b5b:	sub	r8d, 1
0x8b5f:	jne	0x8b4c


0x8b61:	jmp	0x8ab5


0x8b4c:	mov	rax, rbx
0x8b4f:	mul	rsi
0x8b52:	mov	rbx, rax
0x8b55:	jo	0x8be4


0x8b66:	mov	edx, 0x400
0x8b6b:	mov	rax, rdx
0x8b6e:	mul	rbx
0x8b71:	jo	0x8b0e


0x8b73:	shl	rbx, 0xa
0x8b77:	jmp	0x8a40


0x8b7c:	mov	rax, rbx
0x8b7f:	mul	rsi
0x8b82:	jo	0x8c4d


0x8c4d:	mov	r8d, 1
0x8c53:	or	rax, 0xffffffffffffffff
0x8c57:	jmp	0x8b8b


0x8b88:	xor	r8d, r8d
0x8b8b:	mul	rsi
0x8b8e:	jno	0x8a27


0x8b8b:	mul	rsi
0x8b8e:	jno	0x8a27


0x8b94:	mov	r8d, 1
0x8b9a:	or	rax, 0xffffffffffffffff
0x8b9e:	jmp	0x8a27


0x8c5c:	nop	dword ptr [rax]


0x8ede:	nop	


0x8f63:	nop	word ptr cs:[rax + rax]
0x8f6d:	nop	dword ptr [rax]


0x8fee:	nop	


0x906d:	nop	dword ptr [rax]


0x910c:	nop	dword ptr [rax]


0x918b:	nop	dword ptr [rax + rax]


0x9227:	nop	word ptr [rax + rax]


0xa34f:	nop	


0xa54e:	nop	


0xa797:	mov	r11d, 0x10
0xa79d:	mov	ebx, 0x73
0xa7a2:	nop	word ptr [rax + rax]
0xa7a8:	cmp	r13, -1
0xa7ac:	je	0xae67


0xae67:	mov	rsi, qword ptr [rsp + 0x20]
0xae6c:	cmp	rsi, -1
0xae70:	lea	rax, [rsi + 1]
0xae74:	mov	qword ptr [r12 + 0x50], rsi
0xae79:	je	0xad9b


0xa7b2:	mov	qword ptr [r12 + 0x50], r13
0xa7b7:	cmp	r9, r13
0xa7ba:	mov	rcx, qword ptr [r15 + 8]
0xa7be:	jbe	0xade0


0xae7f:	mov	r13, qword ptr [rsp + 0x20]
0xae84:	mov	qword ptr [rsp + 0x20], rax
0xae89:	jmp	0xa7b7


0xade0:	add	r9, r9
0xade3:	lea	rax, [r13 + 1]
0xade7:	cmp	r9, r13
0xadea:	cmovbe	r9, rax
0xadee:	movabs	rax, 0x7ffffffffffffff
0xadf8:	cmp	r9, rax
0xadfb:	ja	0xb1db


0xa7c4:	mov	rax, qword ptr [r15]
0xa7c7:	mov	rdx, rax
0xa7ca:	shl	rdx, 5
0xa7ce:	add	rdx, rcx
0xa7d1:	cmp	rax, r13
0xa7d4:	ja	0xa7f6


0xa7b7:	cmp	r9, r13
0xa7ba:	mov	rcx, qword ptr [r15 + 8]
0xa7be:	jbe	0xade0


0xae01:	mov	rsi, r9
0xae04:	mov	qword ptr [rsp + 0x48], r9
0xae09:	mov	qword ptr [rsp + 0x40], r10
0xae0e:	shl	rsi, 5
0xae12:	cmp	qword ptr [rsp + 8], rcx
0xae17:	mov	qword ptr [rsp + 0x38], r8
0xae1c:	mov	dword ptr [rsp + 0x30], r11d
0xae21:	je	0xaec1


0xa7f6:	shl	r13, 5
0xa7fa:	lea	rax, [rcx + r13]
0xa7fe:	mov	edx, dword ptr [rax]
0xa800:	test	edx, edx
0xa802:	jne	0xadd3


0xaec1:	mov	rdi, rsi
0xaec4:	call	0x2660


0xae27:	mov	rdi, rcx
0xae2a:	call	0x26a0


0xa7e0:	add	rax, 1
0xa7e4:	mov	dword ptr [rdx], 0
0xa7ea:	add	rdx, 0x20
0xa7ee:	cmp	rax, r13
0xa7f1:	jbe	0xa7e0


0xa7f3:	mov	qword ptr [r15], rax
0xa7f6:	shl	r13, 5
0xa7fa:	lea	rax, [rcx + r13]
0xa7fe:	mov	edx, dword ptr [rax]
0xa800:	test	edx, edx
0xa802:	jne	0xadd3


0xa808:	mov	dword ptr [rax], r11d
0xa80b:	mov	byte ptr [r12 + 0x48], bl
0xa810:	mov	rax, qword ptr [r14]
0xa813:	mov	qword ptr [r12 + 8], rbp
0xa818:	lea	rbx, [rax + 1]
0xa81c:	cmp	r10, rbx
0xa81f:	mov	qword ptr [r14], rbx
0xa822:	ja	0xa8b0


0xadd3:	cmp	edx, r11d
0xadd6:	je	0xa80b


0xa828:	test	r10, r10
0xa82b:	js	0xb1d7


0xa8b0:	mov	rcx, qword ptr [r14 + 8]
0xa8b4:	jmp	0xa5c8


0xa80b:	mov	byte ptr [r12 + 0x48], bl
0xa810:	mov	rax, qword ptr [r14]
0xa813:	mov	qword ptr [r12 + 8], rbp
0xa818:	lea	rbx, [rax + 1]
0xa81c:	cmp	r10, rbx
0xa81f:	mov	qword ptr [r14], rbx
0xa822:	ja	0xa8b0


0xaddc:	jmp	0xad9f


0xb1d7:	mov	rcx, qword ptr [r15 + 8]
0xb1db:	cmp	qword ptr [rsp + 8], rcx
0xb1e0:	jne	0xb044


0xa831:	add	r10, r10
0xa834:	movabs	rax, 0x2e8ba2e8ba2e8ba
0xa83e:	cmp	r10, rax
0xa841:	ja	0xb1d7


0xa847:	lea	rax, [r10 + r10*4]
0xa84b:	mov	rdi, qword ptr [r14 + 8]
0xa84f:	cmp	qword ptr [rsp + 0x28], rdi
0xa854:	mov	qword ptr [rsp + 0x40], r9
0xa859:	mov	qword ptr [rsp + 0x38], r10
0xa85e:	lea	rax, [r10 + rax*2]
0xa862:	mov	qword ptr [rsp + 0x30], r8
0xa867:	lea	rsi, [rax*8]
0xa86f:	je	0xaf2d


0xaf2d:	mov	rdi, rsi
0xaf30:	call	0x2660


0xa875:	call	0x26a0


0xa87a:	test	rax, rax
0xa87d:	mov	rcx, rax
0xa880:	mov	r8, qword ptr [rsp + 0x30]
0xa885:	mov	r10, qword ptr [rsp + 0x38]
0xa88a:	mov	r9, qword ptr [rsp + 0x40]
0xa88f:	je	0xb1d7


0xa895:	mov	rax, qword ptr [rsp + 0x28]
0xa89a:	cmp	rax, qword ptr [r14 + 8]
0xa89e:	mov	rbx, qword ptr [r14]
0xa8a1:	je	0xaf50


0xaf50:	lea	rax, [rbx + rbx*4]
0xaf54:	mov	rsi, qword ptr [rsp + 0x28]
0xaf59:	mov	rdi, rcx
0xaf5c:	mov	qword ptr [rsp + 0x40], r9
0xaf61:	mov	qword ptr [rsp + 0x38], r10
0xaf66:	lea	rdx, [rbx + rax*2]
0xaf6a:	mov	qword ptr [rsp + 0x30], r8
0xaf6f:	shl	rdx, 3
0xaf73:	call	0x2640


0xa8a7:	mov	qword ptr [r14 + 8], rcx
0xa8ab:	jmp	0xa5c8


0xaf78:	mov	rbx, qword ptr [r14]
0xaf7b:	mov	rcx, rax
0xaf7e:	mov	r9, qword ptr [rsp + 0x40]
0xaf83:	mov	r10, qword ptr [rsp + 0x38]
0xaf88:	mov	r8, qword ptr [rsp + 0x30]
0xaf8d:	jmp	0xa8a7


0xae2f:	test	rax, rax
0xae32:	mov	rcx, rax
0xae35:	mov	r11d, dword ptr [rsp + 0x30]
0xae3a:	mov	r8, qword ptr [rsp + 0x38]
0xae3f:	mov	r10, qword ptr [rsp + 0x40]
0xae44:	mov	r9, qword ptr [rsp + 0x48]
0xae49:	je	0xb1d7


0xae4f:	mov	rax, qword ptr [rsp + 8]
0xae54:	cmp	rax, qword ptr [r15 + 8]
0xae58:	je	0xaee9


0xaee9:	mov	rdx, qword ptr [r15]
0xaeec:	mov	rsi, qword ptr [rsp + 8]
0xaef1:	mov	rdi, rcx
0xaef4:	mov	qword ptr [rsp + 0x48], r9
0xaef9:	mov	qword ptr [rsp + 0x40], r10
0xaefe:	mov	qword ptr [rsp + 0x38], r8
0xaf03:	mov	dword ptr [rsp + 0x30], r11d
0xaf08:	shl	rdx, 5
0xaf0c:	call	0x2640


0xae5e:	mov	qword ptr [r15 + 8], rcx
0xae62:	jmp	0xa7c4


0xaf11:	mov	r9, qword ptr [rsp + 0x48]
0xaf16:	mov	r10, qword ptr [rsp + 0x40]
0xaf1b:	mov	rcx, rax
0xaf1e:	mov	r8, qword ptr [rsp + 0x38]
0xaf23:	mov	r11d, dword ptr [rsp + 0x30]
0xaf28:	jmp	0xae5e


0xaf35:	test	rax, rax
0xaf38:	mov	rcx, rax
0xaf3b:	mov	r8, qword ptr [rsp + 0x30]
0xaf40:	mov	r10, qword ptr [rsp + 0x38]
0xaf45:	mov	r9, qword ptr [rsp + 0x40]
0xaf4a:	je	0xb039


0xb039:	mov	rcx, qword ptr [r15 + 8]
0xb03d:	cmp	qword ptr [rsp + 8], rcx
0xb042:	je	0xb05c


0xaec9:	test	rax, rax
0xaecc:	mov	rcx, rax
0xaecf:	mov	r11d, dword ptr [rsp + 0x30]
0xaed4:	mov	r8, qword ptr [rsp + 0x38]
0xaed9:	mov	r10, qword ptr [rsp + 0x40]
0xaede:	mov	r9, qword ptr [rsp + 0x48]
0xaee3:	je	0xb04c


0xac4c:	cmp	eax, 0xf
0xac4f:	mov	r11d, 0x16
0xac55:	jg	0xa7a8


0xac5b:	test	al, 4
0xac5d:	jne	0xa7a8


0xa7a8:	cmp	r13, -1
0xa7ac:	je	0xae67


0xac63:	cmp	eax, 7
0xac66:	mov	r11d, 0x15
0xac6c:	jg	0xa7a8


0xac72:	test	al, 2
0xac74:	mov	r11d, 0x12
0xac7a:	jne	0xa7a8


0xac80:	xor	r11d, r11d
0xac83:	test	al, 1
0xac85:	sete	r11b
0xac89:	add	r11d, 0x13
0xac8d:	jmp	0xa7a8


0xacab:	cmp	eax, 0xf
0xacae:	mov	r11d, 9
0xacb4:	jg	0xa7a8


0xacba:	test	al, 4
0xacbc:	jne	0xa7a8


0xacc2:	cmp	eax, 7
0xacc5:	mov	r11d, 7
0xaccb:	jg	0xa7a8


0xacd1:	test	al, 2
0xacd3:	mov	r11d, 1
0xacd9:	jne	0xa7a8


0xacdf:	and	eax, 1
0xace2:	cmp	eax, 1
0xace5:	sbb	r11d, r11d
0xace8:	and	r11d, 2
0xacec:	add	r11d, 3
0xacf0:	jmp	0xa7a8


0xad0b:	cmp	eax, 0xf
0xad0e:	mov	r11d, 0xc
0xad14:	jg	0xa7a8


0xad1a:	xor	r11d, r11d
0xad1d:	test	al, 4
0xad1f:	setne	r11b
0xad23:	add	r11d, 0xb
0xad27:	jmp	0xa7a8


0xad2c:	mov	r11d, 0xe
0xad32:	mov	ebx, 0x63
0xad37:	jmp	0xa7a8


0xad3c:	cmp	eax, 0xf
0xad3f:	mov	r11d, 0xa
0xad45:	jg	0xa7a8


0xad4b:	test	al, 4
0xad4d:	jne	0xa7a8


0xad53:	cmp	eax, 7
0xad56:	mov	r11d, 8
0xad5c:	jg	0xa7a8


0xad62:	test	al, 2
0xad64:	mov	r11d, 2
0xad6a:	jne	0xa7a8


0xad70:	and	eax, 1
0xad73:	cmp	eax, 1
0xad76:	sbb	r11d, r11d
0xad79:	and	r11d, 2
0xad7d:	add	r11d, 4
0xad81:	jmp	0xa7a8


0xb23c:	nop	dword ptr [rax]


0xb2a5:	nop	
0xb2a6:	nop	word ptr cs:[rax + rax]


0xb2b2:	nop	word ptr cs:[rax + rax]
0xb2bc:	nop	dword ptr [rax]


0x34f0:	lea	rax, [rsi + 0xc]
0x34f4:	ret	


0x34f8:	lea	rax, [rsi + 4]
0x34fc:	ret	


0x3500:	mov	rax, rsi
0x3503:	ret	


0x3508:	lea	rax, [rsi + 8]
0x350c:	ret	


0x3510:	xor	eax, eax
0x3512:	ret	


0x5ec0:	xor	r10d, r10d
0x5ec3:	mov	eax, dword ptr [rsp + 8]
0x5ec7:	cmp	eax, 2
0x5eca:	je	0x6488


0x5ef0:	xor	r10d, r10d
0x5ef3:	cmp	dword ptr [rsp + 8], 2
0x5ef8:	je	0x6400


0x5f18:	mov	edx, 9
0x5f1d:	mov	ebx, 0x74
0x5f22:	cmp	dword ptr [rsp + 8], 2
0x5f27:	sete	al
0x5f2a:	and	al, byte ptr [rsp + 0xf]
0x5f2e:	jne	0x607e


0x5f58:	mov	edx, 8
0x5f5d:	mov	ebx, 0x62
0x5f62:	jmp	0x5f34


0x5f68:	cmp	dword ptr [rsp + 8], 2
0x5f6d:	je	0x6340


0x6010:	cmp	byte ptr [rsp + 0xd], 0
0x6015:	jne	0x61e3


0x6038:	cmp	dword ptr [rsp + 8], 2
0x603d:	sete	dl
0x6040:	xor	eax, eax
0x6042:	jmp	0x5e28


0x6050:	mov	edx, 7
0x6055:	mov	ebx, 0x61
0x605a:	jmp	0x5f34


0x6060:	cmp	dword ptr [rsp + 8], 2
0x6065:	sete	dl
0x6068:	test	rbp, rbp
0x606b:	jne	0x5e1c


0x6090:	cmp	dword ptr [rsp + 8], 2
0x6095:	sete	dl
0x6098:	xor	r12d, r12d
0x609b:	jmp	0x6071


0x60a0:	cmp	dword ptr [rsp + 8], 2
0x60a5:	mov	ebx, 0x20
0x60aa:	sete	dl
0x60ad:	jmp	0x6071


0x60b0:	mov	edx, 0xd
0x60b5:	mov	ebx, 0x72
0x60ba:	jmp	0x5f22


0x60c0:	mov	edx, 0xc
0x60c5:	mov	ebx, 0x66
0x60ca:	jmp	0x5f34


0x60d0:	mov	edx, 0xb
0x60d5:	mov	ebx, 0x76
0x60da:	jmp	0x5f34


0x60e0:	mov	edx, 0xa
0x60e5:	mov	ebx, 0x6e
0x60ea:	jmp	0x5f22


0x6180:	xor	r10d, r10d
0x6183:	cmp	byte ptr [rsp + 0xd], 0
0x6188:	jne	0x5f7e


0x61a0:	mov	edx, 0xc
0x61a5:	xor	r10d, r10d
0x61a8:	mov	ebx, 0x66
0x61ad:	jmp	0x5f34


0x61b8:	mov	edx, 0xa
0x61bd:	xor	r10d, r10d
0x61c0:	mov	ebx, 0x6e
0x61c5:	jmp	0x5f22


0x61d0:	mov	ebx, 0x61
0x61d5:	jmp	0x5fa0


0x61e0:	xor	r10d, r10d
0x61e3:	cmp	dword ptr [rsp + 8], 2
0x61e8:	sete	dl
0x61eb:	cmp	byte ptr [rsp + 0xf], 0
0x61f0:	jne	0x6d8a


0x6280:	cmp	dword ptr [rsp + 8], 2
0x6285:	mov	r12d, r10d
0x6288:	sete	dl
0x628b:	xor	r10d, r10d
0x628e:	xor	eax, eax
0x6290:	jmp	0x5e28


0x6298:	cmp	dword ptr [rsp + 8], 2
0x629d:	sete	dl
0x62a0:	xor	r10d, r10d
0x62a3:	jmp	0x6068


0x62b0:	cmp	dword ptr [rsp + 8], 2
0x62b5:	sete	dl
0x62b8:	xor	r10d, r10d
0x62bb:	xor	r12d, r12d
0x62be:	jmp	0x6071


0x62c8:	cmp	dword ptr [rsp + 8], 2
0x62cd:	mov	r12d, r10d
0x62d0:	mov	ebx, 0x20
0x62d5:	sete	dl
0x62d8:	xor	r10d, r10d
0x62db:	jmp	0x6071


0x62f8:	mov	ebx, 0x76
0x62fd:	jmp	0x5fa0


0x6308:	mov	edx, 9
0x630d:	xor	r10d, r10d
0x6310:	mov	ebx, 0x74
0x6315:	jmp	0x5f22


0x6320:	mov	ebx, 0x62
0x6325:	jmp	0x5fa0


0x68c0:	test	ebx, ebx
0x68c2:	jne	0x6cbd


0x83b0:	movabs	rax, 0xc000000000000000
0x83ba:	cmp	rbp, rax
0x83bd:	jl	0x86f0


0x83e0:	movabs	rax, 0xffc0000000000000
0x83ea:	cmp	rbp, rax
0x83ed:	jl	0x86f0


0x8410:	movsxd	rsi, eax
0x8413:	movabs	rax, 0x8000000000000000
0x841d:	mov	r8d, 7
0x8423:	cqo	
0x8425:	xor	r11d, r11d
0x8428:	movabs	r9, 0x7fffffffffffffff
0x8432:	idiv	rsi
0x8435:	mov	r10, rax
0x8438:	jmp	0x845f


0x8480:	movsxd	rsi, eax
0x8483:	movabs	rax, 0x8000000000000000
0x848d:	mov	r8d, 8
0x8493:	cqo	
0x8495:	xor	r11d, r11d
0x8498:	movabs	r9, 0x7fffffffffffffff
0x84a2:	idiv	rsi
0x84a5:	mov	r10, rax
0x84a8:	jmp	0x84cf


0x84f0:	movabs	r8, 0x8000000000000000
0x84fa:	movsxd	rsi, eax
0x84fd:	mov	rax, r8
0x8500:	cqo	
0x8502:	idiv	rsi
0x8505:	cmp	rbp, rax
0x8508:	jl	0x86f0


0x8530:	movsxd	rsi, eax
0x8533:	movabs	rax, 0x8000000000000000
0x853d:	mov	r8d, 3
0x8543:	cqo	
0x8545:	xor	r11d, r11d
0x8548:	movabs	r9, 0x7fffffffffffffff
0x8552:	idiv	rsi
0x8555:	mov	r10, rax
0x8558:	cmp	r10, rbp
0x855b:	jg	0x8750


0x8590:	movsxd	rsi, eax
0x8593:	movabs	rax, 0x8000000000000000
0x859d:	mov	r8d, 6
0x85a3:	cqo	
0x85a5:	xor	r11d, r11d
0x85a8:	movabs	r9, 0x7fffffffffffffff
0x85b2:	idiv	rsi
0x85b5:	mov	r10, rax
0x85b8:	jmp	0x85db


0x85f8:	movsxd	rsi, eax
0x85fb:	movabs	rax, 0x8000000000000000
0x8605:	mov	r8d, 5
0x860b:	cqo	
0x860d:	xor	r11d, r11d
0x8610:	movabs	r9, 0x7fffffffffffffff
0x861a:	idiv	rsi
0x861d:	mov	r10, rax
0x8620:	jmp	0x8647


0x8660:	movabs	rax, 0xffe0000000000000
0x866a:	cmp	rbp, rax
0x866d:	jl	0x86f0


0x8690:	movsxd	rsi, eax
0x8693:	movabs	rax, 0x8000000000000000
0x869d:	mov	r8d, 4
0x86a3:	cqo	
0x86a5:	xor	r11d, r11d
0x86a8:	movabs	r9, 0x7fffffffffffffff
0x86b2:	idiv	rsi
0x86b5:	mov	r10, rax
0x86b8:	cmp	r10, rbp
0x86bb:	jg	0x8720


0x8b20:	mov	r8d, 5
0x8b26:	xor	r9d, r9d
0x8b29:	mov	rax, rbx
0x8b2c:	mul	rsi
0x8b2f:	mov	rbx, rax
0x8b32:	jo	0x8c2f


0xac98:	xor	r11d, r11d
0xac9b:	cmp	eax, 7
0xac9e:	setg	r11b
0xaca2:	add	r11d, 0xd
0xaca6:	jmp	0xa7a8


0xacf8:	xor	r11d, r11d
0xacfb:	cmp	eax, 7
0xacfe:	setg	r11b
0xad02:	add	r11d, 0xf
0xad06:	jmp	0xa7a8


0xad90:	mov	r11d, 0x11
0xad96:	jmp	0xa7a8


0x293b:	nop	dword ptr [rax + rax]


0x29bd:	nop	dword ptr [rax]


0x33a6:	nop	word ptr cs:[rax + rax]


0x33f7:	nop	word ptr [rax + rax]


0x3441:	nop	dword ptr [rax]


0x3479:	nop	dword ptr [rax]


0x34b4:	nop	dword ptr [rax]


0x34e7:	nop	word ptr [rax + rax]


0x34f5:	nop	dword ptr [rax]


0x34fd:	nop	dword ptr [rax]


0x3504:	nop	dword ptr [rax]


0x350d:	nop	dword ptr [rax]


0x3655:	nop	dword ptr [rax]


0x367a:	nop	word ptr [rax + rax]


0x3692:	nop	word ptr [rax + rax]


0x370c:	nop	dword ptr [rax]


0x3757:	nop	word ptr [rax + rax]


0x377e:	nop	


0x37ba:	nop	word ptr [rax + rax]


0x37fa:	nop	word ptr [rax + rax]


0x3818:	nop	dword ptr [rax + rax]


0x3835:	nop	dword ptr [rax]


0x38d5:	nop	dword ptr [rax]


0x38fb:	nop	dword ptr [rax + rax]


0x3931:	nop	dword ptr [rax]


0x394d:	nop	dword ptr [rax]


0x396a:	nop	word ptr [rax + rax]


0x3a0d:	nop	dword ptr [rax]


0x3b7e:	nop	


0x3b9d:	nop	dword ptr [rax]


0x4bcf:	nop	


0x4c46:	nop	word ptr cs:[rax + rax]


0x4d33:	nop	dword ptr [rax + rax]


0x4d55:	nop	dword ptr [rax]


0x4e55:	nop	dword ptr [rax]


0x4e77:	nop	word ptr [rax + rax]


0x4ef9:	nop	dword ptr [rax]


0x4f45:	nop	dword ptr [rax]


0x4fb9:	nop	dword ptr [rax]


0x4fd5:	nop	dword ptr [rax]


0x50d3:	nop	dword ptr [rax + rax]


0x5b4c:	nop	dword ptr [rax]


0x5b9d:	nop	dword ptr [rax]


0x5dc8:	nop	dword ptr [rax + rax]


0x5eb7:	nop	word ptr [rax + rax]


0x5eee:	nop	


0x5f11:	nop	dword ptr [rax]


0x5f52:	nop	word ptr [rax + rax]


0x5f64:	nop	dword ptr [rax]


0x6008:	nop	dword ptr [rax + rax]


0x6031:	nop	dword ptr [rax]


0x6047:	nop	word ptr [rax + rax]


0x605f:	nop	


0x608e:	nop	


0x609d:	nop	dword ptr [rax]


0x60af:	nop	


0x60bf:	nop	


0x60cf:	nop	


0x60df:	nop	


0x60ef:	nop	


0x615c:	nop	dword ptr [rax]


0x617c:	nop	dword ptr [rax]


0x618e:	nop	


0x619f:	nop	


0x61b2:	nop	word ptr [rax + rax]


0x61ca:	nop	word ptr [rax + rax]


0x61da:	nop	word ptr [rax + rax]


0x627b:	nop	dword ptr [rax + rax]


0x6295:	nop	dword ptr [rax]


0x62a8:	nop	dword ptr [rax + rax]


0x62c3:	nop	dword ptr [rax + rax]


0x62f2:	nop	word ptr [rax + rax]


0x6302:	nop	word ptr [rax + rax]


0x631a:	nop	word ptr [rax + rax]


0x632a:	nop	word ptr [rax + rax]


0x6338:	nop	dword ptr [rax + rax]


0x635f:	nop	


0x63f9:	nop	dword ptr [rax]


0x6442:	nop	word ptr [rax + rax]


0x6468:	nop	dword ptr [rax + rax]


0x6481:	nop	dword ptr [rax]


0x64a2:	nop	word ptr [rax + rax]


0x6608:	nop	dword ptr [rax + rax]


0x671b:	nop	dword ptr [rax + rax]


0x673e:	nop	


0x6805:	nop	dword ptr [rax]


0x68bd:	nop	dword ptr [rax]


0x6ac6:	nop	word ptr cs:[rax + rax]


0x6b59:	nop	dword ptr [rax]


0x6bcd:	nop	dword ptr [rax]


0x6cad:	nop	dword ptr [rax]


0x6fbb:	nop	dword ptr [rax + rax]


0x7846:	nop	word ptr cs:[rax + rax]


0x78d5:	nop	dword ptr [rax]


0x78f6:	nop	word ptr cs:[rax + rax]


0x7955:	nop	dword ptr [rax]


0x7991:	nop	dword ptr [rax]


0x79d8:	nop	dword ptr [rax + rax]


0x7a27:	nop	word ptr [rax + rax]


0x7a84:	nop	dword ptr [rax]


0x7ab2:	nop	word ptr [rax + rax]


0x7b66:	nop	word ptr cs:[rax + rax]


0x7bc9:	nop	dword ptr [rax]


0x7e42:	nop	word ptr [rax + rax]


0x7ec9:	nop	dword ptr [rax]


0x7ef4:	nop	dword ptr [rax]


0x7f4d:	nop	dword ptr [rax]


0x8116:	nop	word ptr cs:[rax + rax]


0x813f:	nop	


0x822d:	nop	dword ptr [rax]


0x8243:	nop	dword ptr [rax + rax]


0x82f2:	nop	word ptr [rax + rax]


0x8304:	nop	dword ptr [rax]


0x83ab:	nop	dword ptr [rax + rax]


0x83db:	nop	dword ptr [rax + rax]


0x840c:	nop	dword ptr [rax]


0x843a:	nop	word ptr [rax + rax]


0x8476:	nop	word ptr cs:[rax + rax]


0x84aa:	nop	word ptr [rax + rax]


0x84e6:	nop	word ptr cs:[rax + rax]


0x852c:	nop	dword ptr [rax]


0x857c:	nop	dword ptr [rax]


0x8588:	nop	dword ptr [rax + rax]


0x85ba:	nop	word ptr [rax + rax]


0x85f2:	nop	word ptr [rax + rax]


0x8622:	nop	word ptr [rax + rax]


0x865e:	nop	


0x868f:	nop	


0x86dd:	nop	dword ptr [rax]


0x86eb:	nop	dword ptr [rax + rax]


0x8705:	nop	dword ptr [rax]


0x871d:	nop	dword ptr [rax]


0x8732:	nop	word ptr [rax + rax]


0x874d:	nop	dword ptr [rax]


0x8765:	nop	dword ptr [rax]


0x877d:	nop	dword ptr [rax]


0x8795:	nop	dword ptr [rax]


0x87ad:	nop	dword ptr [rax]


0x87c5:	nop	dword ptr [rax]


0x88a6:	nop	word ptr cs:[rax + rax]


0x8903:	nop	dword ptr [rax + rax]


0x8912:	nop	word ptr [rax + rax]


0x8942:	nop	word ptr [rax + rax]


0x894c:	nop	dword ptr [rax]


0x89eb:	nop	dword ptr [rax + rax]


0x8b1c:	nop	dword ptr [rax]


0x8ba3:	nop	dword ptr [rax + rax]


0x8cfb:	nop	dword ptr [rax + rax]


0x8d26:	nop	word ptr cs:[rax + rax]


0x8d5f:	nop	


0x8da9:	nop	dword ptr [rax]


0x8dcb:	nop	dword ptr [rax + rax]


0x8e71:	nop	dword ptr [rax]


0x9024:	nop	dword ptr [rax]


0x9041:	nop	dword ptr [rax]


0x9052:	nop	word ptr [rax + rax]


0x90aa:	nop	word ptr [rax + rax]


0x90f6:	nop	word ptr cs:[rax + rax]


0x9155:	nop	dword ptr [rax]


0x91b3:	nop	dword ptr [rax + rax]


0x91df:	nop	


0x9434:	nop	dword ptr [rax]


0x9463:	nop	dword ptr [rax + rax]


0x978d:	nop	dword ptr [rax]


0x98c2:	nop	word ptr [rax + rax]


0x99ef:	nop	


0x9a72:	nop	word ptr [rax + rax]


0x9af3:	nop	dword ptr [rax + rax]


0x9b1f:	nop	


0x9b34:	nop	dword ptr [rax]


0x9b64:	nop	dword ptr [rax]


0x9bb6:	nop	word ptr cs:[rax + rax]


0x9bec:	nop	dword ptr [rax]


0x9c1c:	nop	dword ptr [rax]


0x9c5b:	nop	dword ptr [rax + rax]


0x9c71:	nop	dword ptr [rax]


0x9c85:	nop	dword ptr [rax]


0x9c91:	nop	dword ptr [rax]


0x9ce9:	nop	dword ptr [rax]


0x9d09:	nop	dword ptr [rax]


0x9d32:	nop	word ptr [rax + rax]


0x9d8d:	nop	dword ptr [rax]


0x9d9f:	nop	


0x9dd2:	nop	word ptr [rax + rax]


0x9e58:	nop	dword ptr [rax + rax]


0x9e68:	nop	dword ptr [rax + rax]


0x9e9d:	nop	dword ptr [rax]


0x9eda:	nop	word ptr [rax + rax]


0x9ef3:	nop	dword ptr [rax + rax]


0x9f0a:	nop	word ptr [rax + rax]


0x9f39:	nop	dword ptr [rax]


0x9f88:	nop	dword ptr [rax + rax]


0x9f9c:	nop	dword ptr [rax]


0x9fab:	nop	dword ptr [rax + rax]


0x9fbb:	nop	dword ptr [rax + rax]


0x9fcc:	nop	dword ptr [rax]


0xa018:	nop	dword ptr [rax + rax]


0xa028:	nop	dword ptr [rax + rax]


0xa03f:	nop	


0xa056:	nop	word ptr cs:[rax + rax]


0xa07a:	nop	word ptr [rax + rax]


0xa0f3:	nop	dword ptr [rax + rax]


0xa108:	nop	dword ptr [rax + rax]


0xa15b:	nop	dword ptr [rax + rax]


0xa30d:	nop	dword ptr [rax]


0xa388:	nop	dword ptr [rax + rax]


0xa5be:	nop	


0xa601:	nop	dword ptr [rax]


0xa667:	nop	word ptr [rax + rax]


0xa6b2:	nop	word ptr [rax + rax]


0xa6c8:	nop	dword ptr [rax + rax]


0xa6d8:	nop	dword ptr [rax + rax]


0xa6e8:	nop	dword ptr [rax + rax]


0xa6f8:	nop	dword ptr [rax + rax]


0xa727:	nop	word ptr [rax + rax]


0xa74e:	nop	


0xa76d:	nop	dword ptr [rax]


0xa775:	nop	dword ptr [rax]


0xa7d6:	nop	word ptr cs:[rax + rax]


0xa9a6:	nop	word ptr cs:[rax + rax]


0xaa5c:	nop	dword ptr [rax]


0xab3d:	nop	dword ptr [rax]


0xab89:	nop	dword ptr [rax]


0xac92:	nop	word ptr [rax + rax]


0xacf5:	nop	dword ptr [rax]


0xad86:	nop	word ptr cs:[rax + rax]


0xadde:	nop	


0xb1eb:	nop	dword ptr [rax + rax]


