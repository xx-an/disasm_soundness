0x8440:	sub	rsp, 8
0x8444:	add	rsp, 8
0x8448:	ret	


0x8430:	mov	rdx, qword ptr [rip + 0x202bd1]
0x8437:	xor	esi, esi
0x8439:	jmp	0x1b10


0x8420:	ret	


0x83b0:	push	r15
0x83b2:	push	r14
0x83b4:	mov	r15, rdx
0x83b7:	push	r13
0x83b9:	push	r12
0x83bb:	lea	r12, [rip + 0x20256e]
0x83c2:	push	rbp
0x83c3:	lea	rbp, [rip + 0x20256e]
0x83ca:	push	rbx
0x83cb:	mov	r13d, edi
0x83ce:	mov	r14, rsi
0x83d1:	sub	rbp, r12
0x83d4:	sub	rsp, 8
0x83d8:	sar	rbp, 3
0x83dc:	call	0x17c0


0x76c0:	push	r15
0x76c2:	push	r14
0x76c4:	lea	rcx, [rsi + 0x20]
0x76c8:	push	r13
0x76ca:	push	r12
0x76cc:	lea	rax, [rdx + 0x10]
0x76d0:	push	rbp
0x76d1:	push	rbx
0x76d2:	mov	r14, rsi
0x76d5:	mov	r15, rdx
0x76d8:	xor	ebx, ebx
0x76da:	mov	r9d, 7
0x76e0:	sub	rsp, 0x58
0x76e4:	mov	r10d, 7
0x76ea:	mov	qword ptr [rsi], 0
0x76f1:	mov	qword ptr [rsi + 8], rcx
0x76f5:	mov	qword ptr [rsp + 0x28], rcx
0x76fa:	mov	r8, -1
0x7701:	mov	qword ptr [rdx], 0
0x7708:	mov	qword ptr [rsp + 8], rax
0x770d:	mov	qword ptr [rdx + 8], rax
0x7711:	mov	qword ptr [rsp + 0x18], 0
0x771a:	mov	qword ptr [rsp + 0x10], 0
0x7723:	mov	qword ptr [rsp + 0x20], 0
0x772c:	jmp	0x773b


0x74c0:	cmp	qword ptr [rsi], 0
0x74c4:	mov	rax, qword ptr [rsi + 8]
0x74c8:	je	0x752d


0x63a0:	push	rbp
0x63a1:	mov	rbp, rsp
0x63a4:	push	r15
0x63a6:	push	r14
0x63a8:	push	r13
0x63aa:	push	r12
0x63ac:	lea	r14, [rbp - 0x3b0]
0x63b3:	push	rbx
0x63b4:	mov	rbx, rdx
0x63b7:	mov	r12, rcx
0x63ba:	mov	rdx, r14
0x63bd:	sub	rsp, 0x408
0x63c4:	mov	qword ptr [rbp - 0x418], rsi
0x63cb:	lea	rsi, [rbp - 0x2c0]
0x63d2:	mov	qword ptr [rbp - 0x3e8], rdi
0x63d9:	mov	rdi, rbx
0x63dc:	mov	qword ptr [rbp - 0x410], r14
0x63e3:	mov	rax, qword ptr fs:[0x28]
0x63ec:	mov	qword ptr [rbp - 0x38], rax
0x63f0:	xor	eax, eax
0x63f2:	mov	qword ptr [rbp - 0x408], rsi
0x63f9:	call	0x76c0


0x6340:	mov	rax, qword ptr [rdi + 8]
0x6344:	cmp	qword ptr [rdi + 0x10], rax
0x6348:	je	0x6350


0x6300:	test	rdi, rdi
0x6303:	push	rbx
0x6304:	mov	rbx, rdi
0x6307:	je	0x631a


0x6280:	push	r12
0x6282:	push	rbp
0x6283:	push	rbx
0x6284:	mov	rbx, rdi
0x6287:	call	0x1a30


0x6240:	sub	rsp, 8
0x6244:	mov	edi, 0xe
0x6249:	call	0x1a70


0x61c0:	push	r12
0x61c2:	push	rbp
0x61c3:	mov	rbp, rdi
0x61c6:	push	rbx
0x61c7:	call	0x1890


0x6140:	push	rbx
0x6141:	mov	rax, rsi
0x6144:	mov	rbx, rdi
0x6147:	xor	edi, edi
0x6149:	sub	rsp, 0x10
0x614d:	mov	rcx, qword ptr fs:[0x28]
0x6156:	mov	qword ptr [rsp + 8], rcx
0x615b:	xor	ecx, ecx
0x615d:	mov	rsi, rsp
0x6160:	mov	rcx, rdx
0x6163:	mov	rdx, rax
0x6166:	call	0x63a0


0x5fb0:	push	r15
0x5fb2:	push	r14
0x5fb4:	xor	r14d, r14d
0x5fb7:	push	r13
0x5fb9:	mov	r13d, ecx
0x5fbc:	push	r12
0x5fbe:	push	rbp
0x5fbf:	push	rbx
0x5fc0:	mov	r12d, r13d
0x5fc3:	xor	ebx, ebx
0x5fc5:	xor	ebp, ebp
0x5fc7:	and	r12d, 2
0x5fcb:	sub	rsp, 0x18
0x5fcf:	and	r13d, 1
0x5fd3:	mov	qword ptr [rsp], rsi
0x5fd7:	mov	qword ptr [rsp + 8], rdx
0x5fdc:	call	0x17f0


0x5f50:	push	rbp
0x5f51:	push	rbx
0x5f52:	mov	rbp, rdi
0x5f55:	mov	edi, 0x21
0x5f5a:	sub	rsp, 8
0x5f5e:	call	0x5b70


0x5ec0:	push	r13
0x5ec2:	push	r12
0x5ec4:	mov	r13, rsi
0x5ec7:	push	rbp
0x5ec8:	push	rbx
0x5ec9:	mov	rbx, rdi
0x5ecc:	mov	r12, rdx
0x5ecf:	sub	rsp, 0x18
0x5ed3:	mov	rax, qword ptr fs:[0x28]
0x5edc:	mov	qword ptr [rsp + 8], rax
0x5ee1:	xor	eax, eax
0x5ee3:	lea	rax, [rsp + 4]
0x5ee8:	test	rdi, rdi
0x5eeb:	cmove	rbx, rax
0x5eef:	mov	rdi, rbx
0x5ef2:	call	0x1940


0x5e00:	sub	rsp, 0xd8
0x5e07:	test	al, al
0x5e09:	mov	qword ptr [rsp + 0x30], rdx
0x5e0e:	mov	qword ptr [rsp + 0x38], rcx
0x5e13:	mov	qword ptr [rsp + 0x40], r8
0x5e18:	mov	qword ptr [rsp + 0x48], r9
0x5e1d:	je	0x5e56


0x5dc0:	lea	rsi, [rip + 0x37a8]
0x5dc7:	sub	rsp, 8
0x5dcb:	mov	edx, 5
0x5dd0:	xor	edi, edi
0x5dd2:	call	0x18f0


0x5da0:	push	rbx
0x5da1:	mov	rbx, rdi
0x5da4:	call	0x1910


0x5d70:	push	rbp
0x5d71:	push	rbx
0x5d72:	mov	rbp, rdi
0x5d75:	mov	rdi, rsi
0x5d78:	mov	rbx, rsi
0x5d7b:	sub	rsp, 8
0x5d7f:	call	0x5b70


0x5d40:	mov	rax, rdi
0x5d43:	sub	rsp, 8
0x5d47:	mul	rsi
0x5d4a:	seto	dl
0x5d4d:	test	rax, rax
0x5d50:	js	0x5d69


0x5d20:	push	rbx
0x5d21:	mov	rbx, rdi
0x5d24:	call	0x5b70


0x5cd0:	test	rdi, rdi
0x5cd3:	mov	rax, qword ptr [rsi]
0x5cd6:	je	0x5d00


0x5c40:	test	rdi, rdi
0x5c43:	mov	r9, rdx
0x5c46:	mov	rcx, qword ptr [rsi]
0x5c49:	je	0x5c80


0x5c10:	mov	rax, rsi
0x5c13:	mul	rdx
0x5c16:	mov	rsi, rax
0x5c19:	seto	al
0x5c1c:	test	rsi, rsi
0x5c1f:	js	0x5c2b


0x5bd0:	test	rsi, rsi
0x5bd3:	push	rbx
0x5bd4:	mov	rbx, rsi
0x5bd7:	jne	0x5bde


0x5bc0:	jmp	0x5b70


0x5b90:	mov	rax, rdi
0x5b93:	mul	rsi
0x5b96:	mov	rdi, rax
0x5b99:	seto	al
0x5b9c:	test	rdi, rdi
0x5b9f:	js	0x5bab


0x5b70:	push	rbx
0x5b71:	mov	rbx, rdi
0x5b74:	call	0x1a50


0x5af0:	push	rbx
0x5af1:	lea	rsi, [rip + 0x376a]
0x5af8:	mov	edx, 5
0x5afd:	xor	edi, edi
0x5aff:	call	0x18f0


0x5a10:	push	rbp
0x5a11:	push	rbx
0x5a12:	mov	r10d, 0x20
0x5a18:	xor	r11d, r11d
0x5a1b:	sub	rsp, 0xb8
0x5a22:	mov	rax, qword ptr fs:[0x28]
0x5a2b:	mov	qword ptr [rsp + 0x78], rax
0x5a30:	xor	eax, eax
0x5a32:	lea	rax, [rsp + 0xd0]
0x5a3a:	mov	qword ptr [rsp + 0xa0], r8
0x5a42:	lea	rbx, [rsp + 0xd0]
0x5a4a:	lea	r8, [rsp + 0x20]
0x5a4f:	mov	qword ptr [rsp + 0xa8], r9
0x5a57:	mov	dword ptr [rsp + 8], 0x20
0x5a5f:	mov	qword ptr [rsp + 0x10], rax
0x5a64:	lea	rax, [rsp + 0x80]
0x5a6c:	xor	r9d, r9d
0x5a6f:	mov	qword ptr [rsp + 0x18], rax
0x5a74:	mov	rbp, rax
0x5a77:	nop	word ptr [rax + rax]
0x5a80:	cmp	r10d, 0x2f
0x5a84:	ja	0x5adc


0x5990:	sub	rsp, 0x68
0x5994:	mov	r10, r8
0x5997:	xor	r9d, r9d
0x599a:	mov	rax, qword ptr fs:[0x28]
0x59a3:	mov	qword ptr [rsp + 0x58], rax
0x59a8:	xor	eax, eax
0x59aa:	mov	r8, rsp
0x59ad:	nop	dword ptr [rax]
0x59b0:	mov	eax, dword ptr [r10]
0x59b3:	cmp	eax, 0x2f
0x59b6:	ja	0x59fa


0x5970:	xor	r9d, r9d
0x5973:	cmp	qword ptr [r8], 0
0x5977:	je	0x598b


0x5550:	push	r15
0x5552:	push	r14
0x5554:	push	r13
0x5556:	push	r12
0x5558:	mov	r12, r9
0x555b:	push	rbp
0x555c:	push	rbx
0x555d:	mov	rbp, rdi
0x5560:	mov	rbx, r8
0x5563:	sub	rsp, 0x28
0x5567:	test	rsi, rsi
0x556a:	je	0x5688


0x5530:	lea	rcx, [rip + 0x205b09]
0x5537:	mov	rsi, rdi
0x553a:	mov	rdx, -1
0x5541:	xor	edi, edi
0x5543:	jmp	0x4bf0


0x5510:	lea	rcx, [rip + 0x205b29]
0x5517:	mov	rdx, -1
0x551e:	jmp	0x4bf0


0x54f0:	lea	rcx, [rip + 0x205b49]
0x54f7:	mov	rdx, rsi
0x54fa:	mov	rsi, rdi
0x54fd:	xor	edi, edi
0x54ff:	jmp	0x4bf0


0x54e0:	lea	rcx, [rip + 0x205b59]
0x54e7:	jmp	0x4bf0


0x54c0:	mov	r8, rcx
0x54c3:	mov	rcx, rdx
0x54c6:	mov	rdx, rsi
0x54c9:	mov	rsi, rdi
0x54cc:	xor	edi, edi
0x54ce:	jmp	0x53f0


0x54a0:	mov	rcx, rdx
0x54a3:	mov	r8, -1
0x54aa:	mov	rdx, rsi
0x54ad:	mov	rsi, rdi
0x54b0:	xor	edi, edi
0x54b2:	jmp	0x53f0


0x5490:	mov	r8, -1
0x5497:	jmp	0x53f0


0x53f0:	sub	rsp, 0x48
0x53f4:	mov	r9, rcx
0x53f7:	mov	rcx, qword ptr [rip + 0x205ef2]
0x53fe:	movdqa	xmm0, xmmword ptr [rip + 0x205eba]
0x5406:	mov	rax, qword ptr fs:[0x28]
0x540f:	mov	qword ptr [rsp + 0x38], rax
0x5414:	xor	eax, eax
0x5416:	movaps	xmmword ptr [rsp], xmm0
0x541a:	test	rsi, rsi
0x541d:	mov	qword ptr [rsp + 0x30], rcx
0x5422:	mov	dword ptr [rsp], 0xa
0x5429:	movdqa	xmm0, xmmword ptr [rip + 0x205e9f]
0x5431:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x5436:	movdqa	xmm0, xmmword ptr [rip + 0x205ea2]
0x543e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x5443:	je	0x5477


0x5360:	sub	rsp, 0x48
0x5364:	mov	rax, rdx
0x5367:	mov	rdx, qword ptr fs:[0x28]
0x5370:	mov	qword ptr [rsp + 0x38], rdx
0x5375:	xor	edx, edx
0x5377:	cmp	esi, 0xa
0x537a:	je	0x53e4


0x5350:	mov	edx, 0x3a
0x5355:	jmp	0x5280


0x5330:	mov	edx, 0x3a
0x5335:	mov	rsi, -1
0x533c:	jmp	0x5280


0x5320:	movsx	edx, sil
0x5324:	mov	rsi, -1
0x532b:	jmp	0x5280


0x5280:	sub	rsp, 0x48
0x5284:	mov	ecx, edx
0x5286:	mov	rax, qword ptr fs:[0x28]
0x528f:	mov	qword ptr [rsp + 0x38], rax
0x5294:	xor	eax, eax
0x5296:	mov	rax, qword ptr [rip + 0x206053]
0x529d:	mov	r8, rsp
0x52a0:	and	ecx, 0x1f
0x52a3:	movdqa	xmm0, xmmword ptr [rip + 0x206015]
0x52ab:	mov	qword ptr [rsp + 0x30], rax
0x52b0:	mov	eax, edx
0x52b2:	movaps	xmmword ptr [rsp], xmm0
0x52b6:	shr	al, 5
0x52b9:	movzx	eax, al
0x52bc:	lea	r9, [r8 + rax*4 + 8]
0x52c1:	movdqa	xmm0, xmmword ptr [rip + 0x206007]
0x52c9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x52ce:	movdqa	xmm0, xmmword ptr [rip + 0x20600a]
0x52d6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x52db:	mov	edx, dword ptr [r9]
0x52de:	mov	eax, edx
0x52e0:	shr	eax, cl
0x52e2:	not	eax
0x52e4:	and	eax, 1
0x52e7:	shl	eax, cl
0x52e9:	mov	rcx, r8
0x52ec:	xor	eax, edx
0x52ee:	mov	rdx, rsi
0x52f1:	mov	rsi, rdi
0x52f4:	mov	dword ptr [r9], eax
0x52f7:	xor	edi, edi
0x52f9:	call	0x4bf0


0x5270:	mov	rcx, rdx
0x5273:	mov	rdx, rsi
0x5276:	mov	esi, edi
0x5278:	xor	edi, edi
0x527a:	jmp	0x51d0


0x5260:	mov	rdx, rsi
0x5263:	mov	esi, edi
0x5265:	xor	edi, edi
0x5267:	jmp	0x5140


0x51d0:	sub	rsp, 0x48
0x51d4:	mov	rax, rdx
0x51d7:	mov	rdx, rcx
0x51da:	mov	rcx, qword ptr fs:[0x28]
0x51e3:	mov	qword ptr [rsp + 0x38], rcx
0x51e8:	xor	ecx, ecx
0x51ea:	cmp	esi, 0xa
0x51ed:	je	0x5250


0x5140:	sub	rsp, 0x48
0x5144:	mov	rax, rdx
0x5147:	mov	rdx, qword ptr fs:[0x28]
0x5150:	mov	qword ptr [rsp + 0x38], rdx
0x5155:	xor	edx, edx
0x5157:	cmp	esi, 0xa
0x515a:	je	0x51c4


0x5120:	lea	rcx, [rip + 0x206199]
0x5127:	mov	rdx, rsi
0x512a:	mov	rsi, rdi
0x512d:	xor	edi, edi
0x512f:	jmp	0x4bf0


0x5100:	lea	rcx, [rip + 0x2061b9]
0x5107:	mov	rsi, rdi
0x510a:	mov	rdx, -1
0x5111:	xor	edi, edi
0x5113:	jmp	0x4bf0


0x50f0:	lea	rcx, [rip + 0x2061c9]
0x50f7:	jmp	0x4bf0


0x50d0:	lea	rcx, [rip + 0x2061e9]
0x50d7:	mov	rdx, -1
0x50de:	jmp	0x4bf0


0x5030:	mov	eax, dword ptr [rip + 0x206042]
0x5036:	push	r12
0x5038:	mov	r12, qword ptr [rip + 0x206041]
0x503f:	push	rbp
0x5040:	push	rbx
0x5041:	cmp	eax, 1
0x5044:	jle	0x5071


0x5020:	mov	rcx, rdx
0x5023:	xor	edx, edx
0x5025:	jmp	0x4f30


0x4f30:	push	r15
0x4f32:	push	r14
0x4f34:	lea	rax, [rip + 0x206385]
0x4f3b:	push	r13
0x4f3d:	push	r12
0x4f3f:	mov	r12, rdx
0x4f42:	push	rbp
0x4f43:	push	rbx
0x4f44:	mov	rbx, rcx
0x4f47:	mov	r14, rdi
0x4f4a:	mov	r15, rsi
0x4f4d:	sub	rsp, 0x38
0x4f51:	test	rcx, rcx
0x4f54:	cmove	rbx, rax
0x4f58:	xor	ebp, ebp
0x4f5a:	call	0x1840


0x4eb0:	push	r15
0x4eb2:	push	r14
0x4eb4:	lea	rax, [rip + 0x206405]
0x4ebb:	push	r13
0x4ebd:	push	r12
0x4ebf:	mov	r13, rdi
0x4ec2:	push	rbp
0x4ec3:	push	rbx
0x4ec4:	mov	rbx, r8
0x4ec7:	mov	r14, rsi
0x4eca:	mov	r15, rdx
0x4ecd:	sub	rsp, 0x18
0x4ed1:	test	r8, r8
0x4ed4:	cmove	rbx, rax
0x4ed8:	mov	qword ptr [rsp + 8], rcx
0x4edd:	call	0x1840


0x4e80:	lea	rax, [rip + 0x206439]
0x4e87:	test	rdi, rdi
0x4e8a:	cmove	rdi, rax
0x4e8e:	test	rsi, rsi
0x4e91:	mov	dword ptr [rdi], 0xa
0x4e97:	je	0x4ea7


0x4e60:	lea	rax, [rip + 0x206459]
0x4e67:	test	rdi, rdi
0x4e6a:	cmove	rdi, rax
0x4e6e:	mov	eax, dword ptr [rdi + 4]
0x4e71:	mov	dword ptr [rdi + 4], esi
0x4e74:	ret	


0x4e20:	lea	rax, [rip + 0x206499]
0x4e27:	test	rdi, rdi
0x4e2a:	mov	ecx, esi
0x4e2c:	cmove	rdi, rax
0x4e30:	mov	eax, esi
0x4e32:	and	ecx, 0x1f
0x4e35:	shr	al, 5
0x4e38:	movzx	eax, al
0x4e3b:	lea	rdi, [rdi + rax*4 + 8]
0x4e40:	mov	esi, dword ptr [rdi]
0x4e42:	mov	eax, esi
0x4e44:	shr	eax, cl
0x4e46:	xor	edx, eax
0x4e48:	and	eax, 1
0x4e4b:	and	edx, 1
0x4e4e:	shl	edx, cl
0x4e50:	xor	edx, esi
0x4e52:	mov	dword ptr [rdi], edx
0x4e54:	ret	


0x4e00:	lea	rax, [rip + 0x2064b9]
0x4e07:	test	rdi, rdi
0x4e0a:	cmove	rdi, rax
0x4e0e:	mov	dword ptr [rdi], esi
0x4e10:	ret	


0x4de0:	lea	rax, [rip + 0x2064d9]
0x4de7:	test	rdi, rdi
0x4dea:	cmove	rdi, rax
0x4dee:	mov	eax, dword ptr [rdi]
0x4df0:	ret	


0x4da0:	push	r12
0x4da2:	push	rbp
0x4da3:	push	rbx
0x4da4:	mov	rbx, rdi
0x4da7:	call	0x1840


0x4bf0:	push	r15
0x4bf2:	push	r14
0x4bf4:	movsxd	r15, edi
0x4bf7:	push	r13
0x4bf9:	push	r12
0x4bfb:	mov	r14, rdx
0x4bfe:	push	rbp
0x4bff:	push	rbx
0x4c00:	mov	rbp, rcx
0x4c03:	sub	rsp, 0x28
0x4c07:	mov	qword ptr [rsp + 8], rsi
0x4c0c:	call	0x1840


0x39b0:	push	r15
0x39b2:	push	r14
0x39b4:	mov	r15d, r8d
0x39b7:	push	r13
0x39b9:	push	r12
0x39bb:	mov	r14, rdi
0x39be:	push	rbp
0x39bf:	push	rbx
0x39c0:	mov	ebx, r9d
0x39c3:	mov	r13, rsi
0x39c6:	mov	rbp, rcx
0x39c9:	and	ebx, 2
0x39cc:	sub	rsp, 0xb8
0x39d3:	mov	rax, qword ptr [rsp + 0xf0]
0x39db:	mov	qword ptr [rsp + 0x10], rdx
0x39e0:	mov	dword ptr [rsp + 8], r8d
0x39e5:	mov	dword ptr [rsp + 0x78], r9d
0x39ea:	mov	qword ptr [rsp + 0x20], rax
0x39ef:	mov	rax, qword ptr [rsp + 0xf8]
0x39f7:	mov	qword ptr [rsp + 0x68], rax
0x39fc:	mov	rax, qword ptr [rsp + 0x100]
0x3a04:	mov	qword ptr [rsp + 0x60], rax
0x3a09:	mov	rax, qword ptr fs:[0x28]
0x3a12:	mov	qword ptr [rsp + 0xa8], rax
0x3a1a:	xor	eax, eax
0x3a1c:	call	0x1900


0x38c0:	push	rbp
0x38c1:	push	rbx
0x38c2:	mov	rbp, rdi
0x38c5:	mov	ebx, esi
0x38c7:	sub	rsp, 8
0x38cb:	call	0x6240


0x3820:	test	rdi, rdi
0x3823:	push	rbx
0x3824:	je	0x389d


0x3780:	test	rdi, rdi
0x3783:	lea	rcx, [rsi + 0x14]
0x3787:	mov	byte ptr [rsi + 0x14], 0
0x378b:	movabs	r9, 0x6666666666666667
0x3795:	movabs	rsi, 0xcccccccccccccccd
0x379f:	mov	r8d, 0x30
0x37a5:	js	0x37e3


0x3720:	sub	rsp, 8
0x3724:	xor	esi, esi
0x3726:	call	0x1ab0


0x3670:	push	rbp
0x3671:	push	rbx
0x3672:	sub	rsp, 8
0x3676:	mov	rdi, qword ptr [rip + 0x207a2b]
0x367d:	call	0x61c0


0x3660:	mov	byte ptr [rip + 0x207b31], dil
0x3667:	ret	


0x3650:	mov	qword ptr [rip + 0x207b49], rdi
0x3657:	ret	


0x3640:	mov	edi, dword ptr [rip + 0x207b4a]
0x3646:	jmp	0x1960


0x3630:	lea	rsi, [rip + 0x207b59]
0x3637:	jmp	0x3580


0x3580:	push	r12
0x3582:	push	rbp
0x3583:	lea	rdx, [rip + 0x207bd6]
0x358a:	push	rbx
0x358b:	mov	rbx, rsi
0x358e:	xor	esi, esi
0x3590:	mov	rbp, rdi
0x3593:	sub	rsp, 0x10
0x3597:	mov	dword ptr [rip + 0x207bbf], 2
0x35a1:	mov	rcx, rsp
0x35a4:	mov	qword ptr [rsp], 0
0x35ac:	mov	rax, qword ptr fs:[0x28]
0x35b5:	mov	qword ptr [rsp + 8], rax
0x35ba:	xor	eax, eax
0x35bc:	call	0x1b50


0x3150:	push	r13
0x3152:	push	r12
0x3154:	mov	edx, 5
0x3159:	push	rbp
0x315a:	push	rbx
0x315b:	mov	ebp, edi
0x315d:	sub	rsp, 0x88
0x3164:	mov	rbx, qword ptr [rip + 0x20803d]
0x316b:	mov	rax, qword ptr fs:[0x28]
0x3174:	mov	qword ptr [rsp + 0x78], rax
0x3179:	xor	eax, eax
0x317b:	test	edi, edi
0x317d:	je	0x31ad


0x2980:	push	r15
0x2982:	push	r14
0x2984:	mov	ecx, esi
0x2986:	push	r13
0x2988:	push	r12
0x298a:	push	rbp
0x298b:	push	rbx
0x298c:	mov	rbx, rdi
0x298f:	sub	rsp, 0x58
0x2993:	lea	rdx, [rsp + 0x30]
0x2998:	lea	rsi, [rsp + 0x28]
0x299d:	mov	rax, qword ptr fs:[0x28]
0x29a6:	mov	qword ptr [rsp + 0x48], rax
0x29ab:	xor	eax, eax
0x29ad:	call	0x5fb0


0x23c0:	push	r15
0x23c2:	push	r14
0x23c4:	lea	rcx, [rip + 0x60bb]
0x23cb:	push	r13
0x23cd:	push	r12
0x23cf:	mov	edx, 0xc
0x23d4:	push	rbp
0x23d5:	push	rbx
0x23d6:	mov	r12, rsi
0x23d9:	mov	rbx, rdi
0x23dc:	mov	esi, 1
0x23e1:	sub	rsp, 0x228
0x23e8:	movsxd	r8, dword ptr [rdi + 4]
0x23ec:	lea	rbp, [rsp + 0xd4]
0x23f4:	mov	rax, qword ptr fs:[0x28]
0x23fd:	mov	qword ptr [rsp + 0x218], rax
0x2405:	xor	eax, eax
0x2407:	mov	rdi, rbp
0x240a:	call	0x1bb0


0x2340:	sub	rsp, 0x18
0x2344:	movsxd	rdi, edi
0x2347:	mov	qword ptr [rsp], rdi
0x234b:	mov	rdi, rsp
0x234e:	mov	rax, qword ptr fs:[0x28]
0x2357:	mov	qword ptr [rsp + 8], rax
0x235c:	xor	eax, eax
0x235e:	call	0x1820


0x22d0:	push	rbp
0x22d1:	push	rbx
0x22d2:	lea	rsi, [rip + 0x61a3]
0x22d9:	mov	edx, 5
0x22de:	mov	rbp, rdi
0x22e1:	xor	edi, edi
0x22e3:	sub	rsp, 8
0x22e7:	call	0x18f0


0x2050:	push	r15
0x2052:	push	r14
0x2054:	mov	r15, r8
0x2057:	push	r13
0x2059:	push	r12
0x205b:	mov	r14, r9
0x205e:	push	rbp
0x205f:	push	rbx
0x2060:	mov	rbx, rsi
0x2063:	sub	rsp, 0x58
0x2067:	mov	byte ptr [rip + 0x208fac], dl
0x206d:	movzx	r12d, byte ptr [rip + 0x2090df]
0x2075:	mov	rax, qword ptr [rsp + 0xa0]
0x207d:	mov	dword ptr [rsp], edi
0x2080:	mov	dword ptr [rsp + 4], ecx
0x2084:	mov	r8, qword ptr [rsp + 0x90]
0x208c:	mov	rbp, qword ptr [rsp + 0x98]
0x2094:	mov	qword ptr [rsp + 8], rax
0x2099:	mov	rax, qword ptr [rsp + 0xa8]
0x20a1:	mov	qword ptr [rsp + 0x10], rax
0x20a6:	mov	rax, qword ptr fs:[0x28]
0x20af:	mov	qword ptr [rsp + 0x48], rax
0x20b4:	xor	eax, eax
0x20b6:	cmp	byte ptr [rip + 0x209096], 0
0x20bd:	je	0x20c8


0x2040:	push	rbp
0x2041:	mov	rbp, rsp
0x2044:	pop	rbp
0x2045:	jmp	0x1fb0


0x2000:	cmp	byte ptr [rip + 0x2090c1], 0
0x2007:	jne	0x2038


0x1fb0:	lea	rdi, [rip + 0x2090e9]
0x1fb7:	lea	rsi, [rip + 0x2090e2]
0x1fbe:	push	rbp
0x1fbf:	sub	rsi, rdi
0x1fc2:	mov	rbp, rsp
0x1fc5:	sar	rsi, 3
0x1fc9:	mov	rax, rsi
0x1fcc:	shr	rax, 0x3f
0x1fd0:	add	rsi, rax
0x1fd3:	sar	rsi, 1
0x1fd6:	je	0x1ff0


0x1f70:	lea	rdi, [rip + 0x209129]
0x1f77:	push	rbp
0x1f78:	lea	rax, [rip + 0x209121]
0x1f7f:	cmp	rax, rdi
0x1f82:	mov	rbp, rsp
0x1f85:	je	0x1fa0


0x1f40:	xor	ebp, ebp
0x1f42:	mov	r9, rdx
0x1f45:	pop	rsi
0x1f46:	mov	rdx, rsp
0x1f49:	and	rsp, 0xfffffffffffffff0
0x1f4d:	push	rax
0x1f4e:	push	rsp
0x1f4f:	lea	r8, [rip + 0x64ca]
0x1f56:	lea	rcx, [rip + 0x6453]
0x1f5d:	lea	rdi, [rip - 0x394]
0x1f64:	call	qword ptr [rip + 0x209066]


0x1bd0:	push	r12
0x1bd2:	push	rbp
0x1bd3:	mov	rbp, rsi
0x1bd6:	push	rbx
0x1bd7:	mov	ebx, edi
0x1bd9:	mov	rdi, qword ptr [rsi]
0x1bdc:	mov	r12d, 1
0x1be2:	call	0x3820


0x17c0:	sub	rsp, 8
0x17c4:	mov	rax, qword ptr [rip + 0x20980d]
0x17cb:	test	rax, rax
0x17ce:	je	0x17d2


0x1b10:	jmp	qword ptr [rip + 0x20945a]


0x773b:	movzx	eax, byte ptr [rdi]
0x773e:	test	al, al
0x7740:	jne	0x7730


0x752d:	xor	eax, eax
0x752f:	ret	


0x74ca:	lea	r8, [rip + 0x211f]
0x74d1:	lea	r10, [rip + 0x2178]
0x74d8:	lea	r9, [rip + 0x2105]
0x74df:	xor	ecx, ecx
0x74e1:	nop	dword ptr [rax]
0x74e8:	cmp	dword ptr [rax], 0x16
0x74eb:	ja	0x7530


0x6350:	mov	rax, qword ptr [rdi + 0x20]
0x6354:	cmp	qword ptr [rdi + 0x28], rax
0x6358:	jne	0x634a


0x634a:	jmp	0x1b00


0x631a:	mov	rdi, rbx
0x631d:	pop	rbx
0x631e:	jmp	0x1a60


0x6309:	call	0x1a80


0x1a30:	jmp	qword ptr [rip + 0x2094ca]


0x1a70:	jmp	qword ptr [rip + 0x2094aa]


0x1890:	jmp	qword ptr [rip + 0x20959a]


0x17f0:	jmp	qword ptr [rip + 0x2095ea]


0x1940:	jmp	qword ptr [rip + 0x209542]


0x5e56:	mov	rax, qword ptr fs:[0x28]
0x5e5f:	mov	qword ptr [rsp + 0x18], rax
0x5e64:	xor	eax, eax
0x5e66:	lea	rax, [rsp + 0xe0]
0x5e6e:	mov	rdx, rsp
0x5e71:	mov	qword ptr [rsp + 8], rax
0x5e76:	lea	rax, [rsp + 0x20]
0x5e7b:	mov	dword ptr [rsp], 0x10
0x5e82:	mov	dword ptr [rsp + 4], 0x30
0x5e8a:	mov	qword ptr [rsp + 0x10], rax
0x5e8f:	call	0x6140


0x5e1f:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x5e24:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x5e29:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x5e2e:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x5e36:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x5e3e:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x5e46:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x5e4e:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x5e56:	mov	rax, qword ptr fs:[0x28]
0x5e5f:	mov	qword ptr [rsp + 0x18], rax
0x5e64:	xor	eax, eax
0x5e66:	lea	rax, [rsp + 0xe0]
0x5e6e:	mov	rdx, rsp
0x5e71:	mov	qword ptr [rsp + 8], rax
0x5e76:	lea	rax, [rsp + 0x20]
0x5e7b:	mov	dword ptr [rsp], 0x10
0x5e82:	mov	dword ptr [rsp + 4], 0x30
0x5e8a:	mov	qword ptr [rsp + 0x10], rax
0x5e8f:	call	0x6140


0x18f0:	jmp	qword ptr [rip + 0x20956a]


0x1910:	jmp	qword ptr [rip + 0x20955a]


0x5d69:	call	0x5dc0


0x5d52:	movzx	edx, dl
0x5d55:	test	rdx, rdx
0x5d58:	jne	0x5d69


0x5d00:	test	rax, rax
0x5d03:	mov	edx, 0x80
0x5d08:	cmove	rax, rdx
0x5d0c:	test	rax, rax
0x5d0f:	jns	0x5cf2


0x5cd8:	movabs	rdx, 0x5555555555555553
0x5ce2:	cmp	rax, rdx
0x5ce5:	ja	0x5d11


0x5c80:	test	rcx, rcx
0x5c83:	je	0x5ca8


0x5c4b:	xor	edx, edx
0x5c4d:	movabs	rax, 0x5555555555555554
0x5c57:	div	r9
0x5c5a:	cmp	rax, rcx
0x5c5d:	jbe	0x5c9b


0x5c2b:	sub	rsp, 8
0x5c2f:	call	0x5dc0


0x5c21:	movzx	eax, al
0x5c24:	test	rax, rax
0x5c27:	jne	0x5c2b


0x5bd9:	test	rdi, rdi
0x5bdc:	jne	0x5bf8


0x5bde:	mov	rsi, rbx
0x5be1:	call	0x1aa0


0x5bab:	sub	rsp, 8
0x5baf:	call	0x5dc0


0x5ba1:	movzx	eax, al
0x5ba4:	test	rax, rax
0x5ba7:	jne	0x5bab


0x1a50:	jmp	qword ptr [rip + 0x2094ba]


0x5a86:	mov	eax, r10d
0x5a89:	mov	r11d, 1
0x5a8f:	add	r10d, 8
0x5a93:	add	rax, rbp
0x5a96:	mov	rax, qword ptr [rax]
0x5a99:	test	rax, rax
0x5a9c:	mov	qword ptr [r8 + r9*8], rax
0x5aa0:	je	0x5aac


0x5adc:	mov	rax, rbx
0x5adf:	add	rbx, 8
0x5ae3:	jmp	0x5a96


0x59b8:	mov	r11d, eax
0x59bb:	add	r11, qword ptr [r10 + 0x10]
0x59bf:	add	eax, 8
0x59c2:	mov	dword ptr [r10], eax
0x59c5:	mov	rax, qword ptr [r11]
0x59c8:	test	rax, rax
0x59cb:	mov	qword ptr [r8 + r9*8], rax
0x59cf:	je	0x59db


0x59fa:	mov	r11, qword ptr [r10 + 8]
0x59fe:	lea	rax, [r11 + 8]
0x5a02:	mov	qword ptr [r10 + 8], rax
0x5a06:	jmp	0x59c5


0x598b:	jmp	0x5550


0x5688:	mov	r8, rcx
0x568b:	mov	rcx, rdx
0x568e:	lea	rdx, [rip + 0x3b7f]
0x5695:	mov	esi, 1
0x569a:	xor	eax, eax
0x569c:	call	0x1b40


0x5570:	mov	r8, rdx
0x5573:	lea	rdx, [rip + 0x3c8e]
0x557a:	mov	r9, rcx
0x557d:	xor	eax, eax
0x557f:	mov	rcx, rsi
0x5582:	mov	esi, 1
0x5587:	call	0x1b40


0x5477:	call	0x1830


0x5445:	test	rdx, rdx
0x5448:	je	0x5477


0x53e4:	call	0x1830


0x537c:	mov	dword ptr [rsp], esi
0x537f:	mov	rcx, rsp
0x5382:	mov	rdx, -1
0x5389:	mov	rsi, rax
0x538c:	mov	qword ptr [rsp + 4], 0
0x5395:	mov	qword ptr [rsp + 0xc], 0x4000000
0x539e:	mov	qword ptr [rsp + 0x14], 0
0x53a7:	mov	qword ptr [rsp + 0x1c], 0
0x53b0:	mov	qword ptr [rsp + 0x24], 0
0x53b9:	mov	qword ptr [rsp + 0x2c], 0
0x53c2:	mov	dword ptr [rsp + 0x34], 0
0x53ca:	call	0x4bf0


0x5250:	call	0x1830


0x51ef:	mov	dword ptr [rsp], esi
0x51f2:	mov	rcx, rsp
0x51f5:	mov	rsi, rax
0x51f8:	mov	qword ptr [rsp + 4], 0
0x5201:	mov	qword ptr [rsp + 0xc], 0
0x520a:	mov	qword ptr [rsp + 0x14], 0
0x5213:	mov	qword ptr [rsp + 0x1c], 0
0x521c:	mov	qword ptr [rsp + 0x24], 0
0x5225:	mov	qword ptr [rsp + 0x2c], 0
0x522e:	mov	dword ptr [rsp + 0x34], 0
0x5236:	call	0x4bf0


0x51c4:	call	0x1830


0x515c:	mov	dword ptr [rsp], esi
0x515f:	mov	rcx, rsp
0x5162:	mov	rdx, -1
0x5169:	mov	rsi, rax
0x516c:	mov	qword ptr [rsp + 4], 0
0x5175:	mov	qword ptr [rsp + 0xc], 0
0x517e:	mov	qword ptr [rsp + 0x14], 0
0x5187:	mov	qword ptr [rsp + 0x1c], 0
0x5190:	mov	qword ptr [rsp + 0x24], 0
0x5199:	mov	qword ptr [rsp + 0x2c], 0
0x51a2:	mov	dword ptr [rsp + 0x34], 0
0x51aa:	call	0x4bf0


0x5071:	mov	rdi, qword ptr [r12 + 8]
0x5076:	lea	rbx, [rip + 0x206143]
0x507d:	cmp	rdi, rbx
0x5080:	je	0x5099


0x5046:	sub	eax, 2
0x5049:	lea	rbx, [r12 + 0x18]
0x504e:	shl	rax, 4
0x5052:	lea	rbp, [r12 + rax + 0x28]
0x5057:	nop	word ptr [rax + rax]
0x5060:	mov	rdi, qword ptr [rbx]
0x5063:	add	rbx, 0x10
0x5067:	call	0x1810


0x1840:	jmp	qword ptr [rip + 0x2095c2]


0x4ea7:	sub	rsp, 8
0x4eab:	call	0x1830


0x4e99:	test	rdx, rdx
0x4e9c:	je	0x4ea7


0x1900:	jmp	qword ptr [rip + 0x209562]


0x389d:	mov	rcx, qword ptr [rip + 0x20781c]
0x38a4:	lea	rdi, [rip + 0x5445]
0x38ab:	mov	edx, 0x37
0x38b0:	mov	esi, 1
0x38b5:	call	0x1b30


0x3826:	mov	esi, 0x2f
0x382b:	mov	rbx, rdi
0x382e:	call	0x1970


0x37e3:	mov	rax, rdi
0x37e6:	lea	rsi, [rcx - 1]
0x37ea:	imul	r9
0x37ed:	mov	rax, rdi
0x37f0:	sar	rax, 0x3f
0x37f4:	sar	rdx, 2
0x37f8:	sub	rdx, rax
0x37fb:	lea	rax, [rdx + rdx*4]
0x37ff:	lea	eax, [r8 + rax*2]
0x3803:	sub	eax, edi
0x3805:	test	rdx, rdx
0x3808:	mov	rdi, rdx
0x380b:	mov	byte ptr [rcx - 1], al
0x380e:	jne	0x37e0


0x1ab0:	jmp	qword ptr [rip + 0x20948a]


0x1960:	jmp	qword ptr [rip + 0x209532]


0x1b50:	jmp	qword ptr [rip + 0x20943a]


0x31ad:	lea	rsi, [rip + 0x55c4]
0x31b4:	xor	edi, edi
0x31b6:	call	0x18f0


0x317f:	lea	rsi, [rip + 0x55ca]
0x3186:	xor	edi, edi
0x3188:	call	0x18f0


0x1bb0:	jmp	qword ptr [rip + 0x20940a]


0x1820:	jmp	qword ptr [rip + 0x2095d2]


0x20c8:	lea	r13, [rsp + 0x33]
0x20cd:	mov	byte ptr [rsp + 0x33], 0
0x20d2:	test	r12b, r12b
0x20d5:	jne	0x20e9


0x20bf:	test	r12b, r12b
0x20c2:	je	0x2210


0x2009:	cmp	qword ptr [rip + 0x208fd7], 0
0x2011:	push	rbp
0x2012:	mov	rbp, rsp
0x2015:	je	0x2023


0x2038:	ret	


0x1ff0:	pop	rbp
0x1ff1:	ret	


0x1fd8:	mov	rax, qword ptr [rip + 0x209001]
0x1fdf:	test	rax, rax
0x1fe2:	je	0x1ff0


0x1fa0:	pop	rbp
0x1fa1:	ret	


0x1f87:	mov	rax, qword ptr [rip + 0x20903a]
0x1f8e:	test	rax, rax
0x1f91:	je	0x1fa0




0x17d2:	add	rsp, 8
0x17d6:	ret	


0x17d0:	call	rax




0x7742:	lea	rax, [rbx + rbx*4]
0x7746:	lea	rax, [rbx + rax*2]
0x774a:	mov	qword ptr [rcx + rax*8], rdi
0x774e:	mov	rax, qword ptr [rsp + 0x10]
0x7753:	mov	qword ptr [r14 + 0x10], rax
0x7757:	mov	rax, qword ptr [rsp + 0x18]
0x775c:	mov	qword ptr [r14 + 0x18], rax
0x7760:	xor	eax, eax
0x7762:	add	rsp, 0x58
0x7766:	pop	rbx
0x7767:	pop	rbp
0x7768:	pop	r12
0x776a:	pop	r13
0x776c:	pop	r14
0x776e:	pop	r15
0x7770:	ret	


0x7730:	cmp	al, 0x25
0x7732:	lea	rbp, [rdi + 1]
0x7736:	je	0x7778


0x74ed:	mov	edx, dword ptr [rax]
0x74ef:	movsxd	rdx, dword ptr [r8 + rdx*4]
0x74f3:	add	rdx, r8
0x74f6:	jmp	rdx


0x7530:	mov	eax, 0xffffffff
0x7535:	ret	


0x635a:	cmp	qword ptr [rdi + 0x48], 0
0x635f:	jne	0x634a


0x1b00:	jmp	qword ptr [rip + 0x209462]


0x1a60:	jmp	qword ptr [rip + 0x2094b2]


0x1a80:	jmp	qword ptr [rip + 0x2094a2]
















0x5d5a:	call	0x19e0


0x5d11:	sub	rsp, 8
0x5d15:	call	0x5dc0


0x5cf2:	mov	qword ptr [rsi], rax
0x5cf5:	mov	rsi, rax
0x5cf8:	jmp	0x5bd0


0x5ce7:	mov	rdx, rax
0x5cea:	shr	rdx, 1
0x5ced:	lea	rax, [rdx + rax + 1]
0x5cf2:	mov	qword ptr [rsi], rax
0x5cf5:	mov	rsi, rax
0x5cf8:	jmp	0x5bd0


0x5ca8:	xor	edx, edx
0x5caa:	mov	eax, 0x80
0x5caf:	xor	r8d, r8d
0x5cb2:	div	r9
0x5cb5:	test	rax, rax
0x5cb8:	sete	r8b
0x5cbc:	lea	rcx, [r8 + rax]
0x5cc0:	jmp	0x5c85


0x5c85:	mov	rax, rcx
0x5c88:	mul	r9
0x5c8b:	seto	dl
0x5c8e:	test	rax, rax
0x5c91:	movzx	edx, dl
0x5c94:	js	0x5c9b


0x5c9b:	sub	rsp, 8
0x5c9f:	call	0x5dc0


0x5c5f:	mov	rax, rcx
0x5c62:	shr	rax, 1
0x5c65:	lea	rcx, [rax + rcx + 1]
0x5c6a:	mov	qword ptr [rsi], rcx
0x5c6d:	imul	rcx, r9
0x5c71:	mov	rsi, rcx
0x5c74:	jmp	0x5bd0


0x5c29:	jmp	0x5bd0


0x5bf8:	call	0x1810


0x1aa0:	jmp	qword ptr [rip + 0x209492]


0x5ba9:	jmp	0x5b70




0x5aac:	test	r11b, r11b
0x5aaf:	jne	0x5ad5


0x5aa2:	add	r9, 1
0x5aa6:	cmp	r9, 0xa
0x5aaa:	jne	0x5a80


0x5a96:	mov	rax, qword ptr [rax]
0x5a99:	test	rax, rax
0x5a9c:	mov	qword ptr [r8 + r9*8], rax
0x5aa0:	je	0x5aac


0x59db:	call	0x5550


0x59d1:	add	r9, 1
0x59d5:	cmp	r9, 0xa
0x59d9:	jne	0x59b0


0x59c5:	mov	rax, qword ptr [r11]
0x59c8:	test	rax, rax
0x59cb:	mov	qword ptr [r8 + r9*8], rax
0x59cf:	je	0x59db


0x5980:	add	r9, 1
0x5984:	cmp	qword ptr [r8 + r9*8], 0
0x5989:	jne	0x5980


0x1b40:	jmp	qword ptr [rip + 0x209442]


0x1830:	jmp	qword ptr [rip + 0x2095ca]


0x544a:	mov	qword ptr [rsp + 0x28], rsi
0x544f:	mov	qword ptr [rsp + 0x30], rdx
0x5454:	mov	rcx, rsp
0x5457:	mov	rdx, r8
0x545a:	mov	rsi, r9
0x545d:	call	0x4bf0


0x5099:	lea	rbx, [rip + 0x205ff0]
0x50a0:	cmp	r12, rbx
0x50a3:	je	0x50b4


0x5082:	call	0x1810


0x1810:	jmp	qword ptr [rip + 0x2095da]




0x4e9e:	mov	qword ptr [rdi + 0x28], rsi
0x4ea2:	mov	qword ptr [rdi + 0x30], rdx
0x4ea6:	ret	




0x1b30:	jmp	qword ptr [rip + 0x20944a]


0x1970:	jmp	qword ptr [rip + 0x20952a]


0x3810:	sub	rcx, 2
0x3814:	mov	byte ptr [rsi - 1], 0x2d
0x3818:	mov	rax, rcx
0x381b:	ret	


0x37e0:	mov	rcx, rsi
0x37e3:	mov	rax, rdi
0x37e6:	lea	rsi, [rcx - 1]
0x37ea:	imul	r9
0x37ed:	mov	rax, rdi
0x37f0:	sar	rax, 0x3f
0x37f4:	sar	rdx, 2
0x37f8:	sub	rdx, rax
0x37fb:	lea	rax, [rdx + rdx*4]
0x37ff:	lea	eax, [r8 + rax*2]
0x3803:	sub	eax, edi
0x3805:	test	rdx, rdx
0x3808:	mov	rdi, rdx
0x380b:	mov	byte ptr [rcx - 1], al
0x380e:	jne	0x37e0


0x37d6:	mov	rax, rcx
0x37d9:	ret	


0x37b0:	mov	rax, rdi
0x37b3:	sub	rcx, 1
0x37b7:	mul	rsi
0x37ba:	shr	rdx, 3
0x37be:	lea	rax, [rdx + rdx*4]
0x37c2:	add	rax, rax
0x37c5:	sub	rdi, rax
0x37c8:	add	edi, 0x30
0x37cb:	test	rdx, rdx
0x37ce:	mov	byte ptr [rcx], dil
0x37d1:	mov	rdi, rdx
0x37d4:	jne	0x37b0












0x20d7:	mov	rdi, rbp
0x20da:	call	0x1910


0x20e9:	lea	r12, [rsp + 0x3b]
0x20ee:	mov	byte ptr [rsp + 0x3b], 0
0x20f3:	cmp	byte ptr [rip + 0x209056], 0
0x20fa:	mov	edi, 1
0x20ff:	je	0x211c


0x2210:	mov	rdi, r8
0x2213:	mov	qword ptr [rsp + 0x18], r8
0x2218:	call	0x1910


0x2023:	call	0x1f70


0x2017:	mov	rdi, qword ptr [rip + 0x208fea]
0x201e:	call	0x1bc0


0x1fe4:	pop	rbp
0x1fe5:	jmp	rax


0x1f93:	pop	rbp
0x1f94:	jmp	rax


0x7778:	lea	rax, [rbx + rbx*4]
0x777c:	mov	r13, r8
0x777f:	lea	rax, [rbx + rax*2]
0x7783:	lea	r12, [rcx + rax*8]
0x7787:	mov	qword ptr [r12], rdi
0x778b:	mov	dword ptr [r12 + 0x10], 0
0x7794:	mov	qword ptr [r12 + 0x18], 0
0x779d:	mov	qword ptr [r12 + 0x20], 0
0x77a6:	mov	qword ptr [r12 + 0x28], r8
0x77ab:	mov	qword ptr [r12 + 0x30], 0
0x77b4:	mov	qword ptr [r12 + 0x38], 0
0x77bd:	mov	qword ptr [r12 + 0x40], r8
0x77c2:	mov	qword ptr [r12 + 0x50], r8
0x77c7:	movzx	ebx, byte ptr [rdi + 1]
0x77cb:	lea	eax, [rbx - 0x30]
0x77ce:	cmp	al, 9
0x77d0:	ja	0x780e


0x7738:	mov	rdi, rbp
0x773b:	movzx	eax, byte ptr [rdi]
0x773e:	test	al, al
0x7740:	jne	0x7730


0x6361:	push	r12
0x6363:	push	rbp
0x6364:	mov	r12d, edx
0x6367:	push	rbx
0x6368:	mov	rbp, rsi
0x636b:	mov	rbx, rdi
0x636e:	call	0x1a30








0x19e0:	jmp	qword ptr [rip + 0x2094f2]


0x5c96:	test	rdx, rdx
0x5c99:	je	0x5c6a




0x5ab1:	call	0x5550


0x5ad5:	mov	dword ptr [rsp + 8], r10d
0x5ada:	jmp	0x5ab1


0x5a80:	cmp	r10d, 0x2f
0x5a84:	ja	0x5adc


0x59b0:	mov	eax, dword ptr [r10]
0x59b3:	cmp	eax, 0x2f
0x59b6:	ja	0x59fa






0x50b4:	pop	rbx
0x50b5:	mov	dword ptr [rip + 0x205fb9], 1
0x50bf:	pop	rbp
0x50c0:	pop	r12
0x50c2:	ret	


0x50a5:	mov	rdi, r12
0x50a8:	call	0x1810








0x211c:	call	0x5b70


0x2101:	mov	rdi, qword ptr [rsp + 0x10]
0x2106:	call	0x1910


0x1bc0:	jmp	qword ptr [rip + 0x209422]


0x77d2:	jmp	0x7c0a


0x780e:	lea	rax, [rbp + 1]
0x7812:	cmp	bl, 0x27
0x7815:	mov	rdx, rax
0x7818:	jne	0x77e0




0x5c6a:	mov	qword ptr [rsi], rcx
0x5c6d:	imul	rcx, r9
0x5c71:	mov	rsi, rcx
0x5c74:	jmp	0x5bd0


0x7c0a:	mov	rax, rbp
0x7c0d:	nop	dword ptr [rax]
0x7c10:	add	rax, 1
0x7c14:	movzx	edx, byte ptr [rax]
0x7c17:	lea	ecx, [rdx - 0x30]
0x7c1a:	cmp	cl, 9
0x7c1d:	jbe	0x7c10


0x781a:	or	dword ptr [r12 + 0x10], 1
0x7820:	jmp	0x7808


0x77e0:	cmp	bl, 0x2d
0x77e3:	je	0x7828


0x7c10:	add	rax, 1
0x7c14:	movzx	edx, byte ptr [rax]
0x7c17:	lea	ecx, [rdx - 0x30]
0x7c1a:	cmp	cl, 9
0x7c1d:	jbe	0x7c10


0x7c1f:	cmp	dl, 0x24
0x7c22:	mov	r13, r8
0x7c25:	jne	0x780e


0x7808:	movzx	ebx, byte ptr [rax]
0x780b:	mov	rbp, rax
0x780e:	lea	rax, [rbp + 1]
0x7812:	cmp	bl, 0x27
0x7815:	mov	rdx, rax
0x7818:	jne	0x77e0


0x7828:	or	dword ptr [r12 + 0x10], 2
0x782e:	jmp	0x7808


0x77e5:	cmp	bl, 0x2b
0x77e8:	je	0x7830


0x7c2b:	xor	edx, edx
0x7c2d:	movsx	eax, bl
0x7c30:	movabs	rdi, 0x1999999999999999
0x7c3a:	mov	rsi, r8
0x7c3d:	sub	eax, 0x30
0x7c40:	cmp	rdx, rdi
0x7c43:	cdqe	
0x7c45:	ja	0x7c4e


0x7830:	or	dword ptr [r12 + 0x10], 4
0x7836:	jmp	0x7808


0x77ea:	cmp	bl, 0x20
0x77ed:	je	0x7840


0x7c47:	lea	rsi, [rdx + rdx*4]
0x7c4b:	add	rsi, rsi
0x7c4e:	mov	rcx, rbp
0x7c51:	add	rax, rsi
0x7c54:	movzx	ebx, byte ptr [rbp + 1]
0x7c58:	setb	sil
0x7c5c:	add	rbp, 1
0x7c60:	mov	rdx, rax
0x7c63:	movzx	esi, sil
0x7c67:	test	rsi, rsi
0x7c6a:	lea	edi, [rbx - 0x30]
0x7c6d:	jne	0x7ffe


0x7c4e:	mov	rcx, rbp
0x7c51:	add	rax, rsi
0x7c54:	movzx	ebx, byte ptr [rbp + 1]
0x7c58:	setb	sil
0x7c5c:	add	rbp, 1
0x7c60:	mov	rdx, rax
0x7c63:	movzx	esi, sil
0x7c67:	test	rsi, rsi
0x7c6a:	lea	edi, [rbx - 0x30]
0x7c6d:	jne	0x7ffe


0x7840:	or	dword ptr [r12 + 0x10], 8
0x7846:	jmp	0x7808


0x77ef:	cmp	bl, 0x23
0x77f2:	je	0x7850


0x7c73:	cmp	dil, 9
0x7c77:	jbe	0x7c2d


0x7ffe:	cmp	dil, 9
0x8002:	ja	0x7f0b


0x7850:	or	dword ptr [r12 + 0x10], 0x10
0x7856:	jmp	0x7808


0x77f4:	cmp	bl, 0x30
0x77f7:	je	0x7860


0x7c2d:	movsx	eax, bl
0x7c30:	movabs	rdi, 0x1999999999999999
0x7c3a:	mov	rsi, r8
0x7c3d:	sub	eax, 0x30
0x7c40:	cmp	rdx, rdi
0x7c43:	cdqe	
0x7c45:	ja	0x7c4e


0x7c79:	mov	r13, rax
0x7c7c:	sub	r13, 1
0x7c80:	cmp	r13, -3
0x7c84:	ja	0x7f0b


0x8008:	movsx	eax, bl
0x800b:	mov	rsi, r8
0x800e:	mov	rcx, rbp
0x8011:	sub	eax, 0x30
0x8014:	cdqe	
0x8016:	jmp	0x7c51


0x7f0b:	mov	rcx, qword ptr [r15 + 8]
0x7f0f:	cmp	qword ptr [rsp + 8], rcx
0x7f14:	je	0x7f1e


0x7860:	or	dword ptr [r12 + 0x10], 0x20
0x7866:	jmp	0x7808


0x77f9:	cmp	bl, 0x49
0x77fc:	jne	0x7870


0x7c8a:	lea	rbp, [rcx + 2]
0x7c8e:	movzx	ebx, byte ptr [rcx + 2]
0x7c92:	jmp	0x780e


0x7c51:	add	rax, rsi
0x7c54:	movzx	ebx, byte ptr [rbp + 1]
0x7c58:	setb	sil
0x7c5c:	add	rbp, 1
0x7c60:	mov	rdx, rax
0x7c63:	movzx	esi, sil
0x7c67:	test	rsi, rsi
0x7c6a:	lea	edi, [rbx - 0x30]
0x7c6d:	jne	0x7ffe


0x7f1e:	mov	rdi, qword ptr [r14 + 8]
0x7f22:	cmp	qword ptr [rsp + 0x28], rdi
0x7f27:	je	0x7f2e


0x7f16:	mov	rdi, rcx
0x7f19:	call	0x1810


0x77fe:	or	dword ptr [r12 + 0x10], 0x40
0x7804:	nop	dword ptr [rax]
0x7808:	movzx	ebx, byte ptr [rax]
0x780b:	mov	rbp, rax
0x780e:	lea	rax, [rbp + 1]
0x7812:	cmp	bl, 0x27
0x7815:	mov	rdx, rax
0x7818:	jne	0x77e0


0x7870:	cmp	bl, 0x2a
0x7873:	je	0x7a29


0x7f2e:	call	0x1840


0x7f29:	call	0x1810


0x7a29:	mov	rsi, qword ptr [rsp + 0x10]
0x7a2e:	mov	ecx, 1
0x7a33:	mov	qword ptr [r12 + 0x18], rbp
0x7a38:	mov	qword ptr [r12 + 0x20], rax
0x7a3d:	test	rsi, rsi
0x7a40:	cmovne	rcx, rsi
0x7a44:	mov	qword ptr [rsp + 0x10], rcx
0x7a49:	movzx	ecx, byte ptr [rbp + 1]
0x7a4d:	lea	esi, [rcx - 0x30]
0x7a50:	cmp	sil, 9
0x7a54:	jbe	0x7d35


0x7879:	lea	ecx, [rbx - 0x30]
0x787c:	cmp	cl, 9
0x787f:	jbe	0x7c97


0x7d35:	mov	rsi, rax
0x7d38:	add	rsi, 1
0x7d3c:	movzx	edi, byte ptr [rsi]
0x7d3f:	lea	r11d, [rdi - 0x30]
0x7d43:	cmp	r11b, 9
0x7d47:	jbe	0x7d38


0x7a5a:	mov	rsi, qword ptr [rsp + 0x20]
0x7a5f:	cmp	rsi, -1
0x7a63:	lea	rdx, [rsi + 1]
0x7a67:	mov	qword ptr [r12 + 0x28], rsi
0x7a6c:	je	0x7f0b


0x7c97:	mov	qword ptr [r12 + 0x18], rbp
0x7c9c:	movzx	edi, byte ptr [rbp]
0x7ca0:	mov	rsi, rbp
0x7ca3:	lea	ecx, [rdi - 0x30]
0x7ca6:	cmp	cl, 9
0x7ca9:	jbe	0x7cb7


0x7885:	cmp	bl, 0x2e
0x7888:	je	0x7b5f


0x7d38:	add	rsi, 1
0x7d3c:	movzx	edi, byte ptr [rsi]
0x7d3f:	lea	r11d, [rdi - 0x30]
0x7d43:	cmp	r11b, 9
0x7d47:	jbe	0x7d38


0x7d49:	cmp	dil, 0x24
0x7d4d:	jne	0x7a5a


0x7a72:	mov	rbx, qword ptr [rsp + 0x20]
0x7a77:	mov	rbp, rax
0x7a7a:	mov	qword ptr [rsp + 0x20], rdx
0x7a7f:	cmp	r9, rbx
0x7a82:	mov	rcx, qword ptr [r15 + 8]
0x7a86:	ja	0x8102


0x7cb7:	movzx	edi, byte ptr [rax]
0x7cba:	lea	edx, [rdi - 0x30]
0x7cbd:	cmp	dl, 9
0x7cc0:	jbe	0x7cb0


0x7cab:	jmp	0x7ce0


0x7b5f:	cmp	byte ptr [rbp + 1], 0x2a
0x7b63:	mov	qword ptr [r12 + 0x30], rbp
0x7b68:	jne	0x7cee


0x788e:	xor	eax, eax
0x7890:	mov	esi, 1
0x7895:	jmp	0x78c7


0x7d53:	xor	esi, esi
0x7d55:	movsx	eax, cl
0x7d58:	movabs	rdi, 0x1999999999999999
0x7d62:	mov	rcx, r8
0x7d65:	sub	eax, 0x30
0x7d68:	cmp	rsi, rdi
0x7d6b:	cdqe	
0x7d6d:	ja	0x7d76


0x7a8c:	add	r9, r9
0x7a8f:	lea	rax, [rbx + 1]
0x7a93:	cmp	r9, rbx
0x7a96:	cmovbe	r9, rax
0x7a9a:	movabs	rax, 0x7ffffffffffffff
0x7aa4:	cmp	r9, rax
0x7aa7:	ja	0x834b


0x8102:	mov	rax, qword ptr [r15]
0x8105:	jmp	0x7b07


0x7cb0:	mov	rbp, rax
0x7cb3:	add	rax, 1
0x7cb7:	movzx	edi, byte ptr [rax]
0x7cba:	lea	edx, [rdi - 0x30]
0x7cbd:	cmp	dl, 9
0x7cc0:	jbe	0x7cb0


0x7cc2:	mov	rcx, rax
0x7cc5:	lea	rdx, [rbp + 2]
0x7cc9:	mov	rbp, rax
0x7ccc:	sub	rcx, rsi
0x7ccf:	mov	rsi, qword ptr [rsp + 0x10]
0x7cd4:	cmp	rsi, rcx
0x7cd7:	cmovae	rcx, rsi
0x7cdb:	mov	qword ptr [rsp + 0x10], rcx
0x7ce0:	mov	qword ptr [r12 + 0x20], rbp
0x7ce5:	movzx	ebx, byte ptr [rbp]
0x7ce9:	jmp	0x7885


0x7ce0:	mov	qword ptr [r12 + 0x20], rbp
0x7ce5:	movzx	ebx, byte ptr [rbp]
0x7ce9:	jmp	0x7885


0x7b6e:	mov	rsi, qword ptr [rsp + 0x18]
0x7b73:	lea	r11, [rbp + 2]
0x7b77:	mov	eax, 2
0x7b7c:	mov	qword ptr [r12 + 0x38], r11
0x7b81:	cmp	rsi, 2
0x7b85:	cmovae	rax, rsi
0x7b89:	mov	qword ptr [rsp + 0x18], rax
0x7b8e:	movsx	eax, byte ptr [rbp + 2]
0x7b92:	lea	edx, [rax - 0x30]
0x7b95:	cmp	dl, 9
0x7b98:	jbe	0x822c


0x7cee:	movzx	eax, byte ptr [rbp + 1]
0x7cf2:	sub	eax, 0x30
0x7cf5:	cmp	al, 9
0x7cf7:	ja	0x7d0e


0x78c7:	add	rbp, 1
0x78cb:	cmp	bl, 0x68
0x78ce:	jne	0x78a0


0x7d6f:	lea	rcx, [rsi + rsi*4]
0x7d73:	add	rcx, rcx
0x7d76:	mov	rbp, rdx
0x7d79:	xor	r11d, r11d
0x7d7c:	add	rax, rcx
0x7d7f:	movzx	ecx, byte ptr [rdx + 1]
0x7d83:	setb	r11b
0x7d87:	add	rdx, 1
0x7d8b:	mov	rsi, rax
0x7d8e:	test	r11, r11
0x7d91:	lea	edi, [rcx - 0x30]
0x7d94:	jne	0x829e


0x7d76:	mov	rbp, rdx
0x7d79:	xor	r11d, r11d
0x7d7c:	add	rax, rcx
0x7d7f:	movzx	ecx, byte ptr [rdx + 1]
0x7d83:	setb	r11b
0x7d87:	add	rdx, 1
0x7d8b:	mov	rsi, rax
0x7d8e:	test	r11, r11
0x7d91:	lea	edi, [rcx - 0x30]
0x7d94:	jne	0x829e


0x7aad:	mov	rsi, r9
0x7ab0:	mov	qword ptr [rsp + 0x40], r9
0x7ab5:	mov	qword ptr [rsp + 0x38], r10
0x7aba:	shl	rsi, 5
0x7abe:	cmp	qword ptr [rsp + 8], rcx
0x7ac3:	mov	qword ptr [rsp + 0x30], r8
0x7ac8:	je	0x81e1


0x834b:	cmp	qword ptr [rsp + 8], rcx
0x8350:	jne	0x81b4


0x7b07:	mov	rdx, rax
0x7b0a:	shl	rdx, 5
0x7b0e:	add	rdx, rcx
0x7b11:	cmp	rax, rbx
0x7b14:	ja	0x7b36


0x822c:	mov	rdx, r11
0x822f:	add	rdx, 1
0x8233:	movzx	ecx, byte ptr [rdx]
0x8236:	lea	esi, [rcx - 0x30]
0x8239:	cmp	sil, 9
0x823d:	jbe	0x822f


0x7b9e:	mov	rbx, qword ptr [r12 + 0x40]
0x7ba3:	cmp	rbx, -1
0x7ba7:	je	0x8205


0x7d0e:	mov	rsi, qword ptr [rsp + 0x18]
0x7d13:	mov	rax, rdx
0x7d16:	mov	qword ptr [r12 + 0x38], rdx
0x7d1b:	sub	rax, rbp
0x7d1e:	movzx	ebx, byte ptr [rdx]
0x7d21:	mov	rbp, rdx
0x7d24:	cmp	rsi, rax
0x7d27:	cmovae	rax, rsi
0x7d2b:	mov	qword ptr [rsp + 0x18], rax
0x7d30:	jmp	0x788e


0x78d0:	mov	ecx, eax
0x78d2:	mov	edx, esi
0x78d4:	and	ecx, 1
0x78d7:	shl	edx, cl
0x78d9:	or	eax, edx
0x78db:	jmp	0x78c3


0x78a0:	cmp	bl, 0x4c
0x78a3:	je	0x78e0


0x7d9a:	cmp	dil, 9
0x7d9e:	jbe	0x7d55


0x829e:	cmp	dil, 9
0x82a2:	ja	0x7f0b


0x81e1:	mov	rdi, rsi
0x81e4:	call	0x1a50


0x7ace:	mov	rdi, rcx
0x7ad1:	call	0x1aa0


0x8356:	jmp	0x81bc


0x81b4:	mov	rdi, rcx
0x81b7:	call	0x1810


0x7b36:	shl	rbx, 5
0x7b3a:	lea	rax, [rcx + rbx]
0x7b3e:	mov	edx, dword ptr [rax]
0x7b40:	test	edx, edx
0x7b42:	jne	0x801b


0x822f:	add	rdx, 1
0x8233:	movzx	ecx, byte ptr [rdx]
0x8236:	lea	esi, [rcx - 0x30]
0x8239:	cmp	sil, 9
0x823d:	jbe	0x822f


0x823f:	cmp	cl, 0x24
0x8242:	jne	0x7b9e


0x8205:	mov	rsi, qword ptr [rsp + 0x20]
0x820a:	cmp	rsi, -1
0x820e:	lea	rax, [rsi + 1]
0x8212:	mov	qword ptr [r12 + 0x40], rsi
0x8217:	je	0x7f0b


0x7bad:	cmp	r9, rbx
0x7bb0:	mov	rcx, qword ptr [r15 + 8]
0x7bb4:	jbe	0x811f


0x7d00:	add	rdx, 1
0x7d04:	movzx	eax, byte ptr [rdx]
0x7d07:	sub	eax, 0x30
0x7d0a:	cmp	al, 9
0x7d0c:	jbe	0x7d00


0x78c3:	movzx	ebx, byte ptr [rbp]
0x78c7:	add	rbp, 1
0x78cb:	cmp	bl, 0x68
0x78ce:	jne	0x78a0


0x78e0:	or	eax, 4
0x78e3:	jmp	0x78c3


0x78a5:	cmp	bl, 0x6c
0x78a8:	je	0x78c0


0x7d55:	movsx	eax, cl
0x7d58:	movabs	rdi, 0x1999999999999999
0x7d62:	mov	rcx, r8
0x7d65:	sub	eax, 0x30
0x7d68:	cmp	rsi, rdi
0x7d6b:	cdqe	
0x7d6d:	ja	0x7d76


0x7da0:	lea	rbx, [rax - 1]
0x7da4:	cmp	rbx, -3
0x7da8:	ja	0x7f0b


0x82a8:	movsx	eax, cl
0x82ab:	mov	rbp, rdx
0x82ae:	mov	rcx, r8
0x82b1:	sub	eax, 0x30
0x82b4:	cdqe	
0x82b6:	jmp	0x7d79


0x81bc:	mov	rdi, qword ptr [r14 + 8]
0x81c0:	cmp	qword ptr [rsp + 0x28], rdi
0x81c5:	je	0x81cc


0x7b20:	add	rax, 1
0x7b24:	mov	dword ptr [rdx], 0
0x7b2a:	add	rdx, 0x20
0x7b2e:	cmp	rax, rbx
0x7b31:	jbe	0x7b20


0x7b33:	mov	qword ptr [r15], rax
0x7b36:	shl	rbx, 5
0x7b3a:	lea	rax, [rcx + rbx]
0x7b3e:	mov	edx, dword ptr [rax]
0x7b40:	test	edx, edx
0x7b42:	jne	0x801b


0x7b48:	mov	dword ptr [rax], 5
0x7b4e:	movzx	ebx, byte ptr [rbp]
0x7b52:	lea	rdx, [rbp + 1]
0x7b56:	cmp	bl, 0x2e
0x7b59:	jne	0x788e


0x801b:	cmp	edx, 5
0x801e:	jne	0x7f0f


0x8248:	xor	ecx, ecx
0x824a:	movabs	rsi, 0x1999999999999999
0x8254:	sub	eax, 0x30
0x8257:	mov	rdx, r8
0x825a:	cmp	rcx, rsi
0x825d:	cdqe	
0x825f:	ja	0x8268


0x821d:	mov	rbx, qword ptr [rsp + 0x20]
0x8222:	mov	qword ptr [rsp + 0x20], rax
0x8227:	jmp	0x7bad


0x811f:	add	r9, r9
0x8122:	lea	rax, [rbx + 1]
0x8126:	cmp	r9, rbx
0x8129:	cmovbe	r9, rax
0x812d:	movabs	rax, 0x7ffffffffffffff
0x8137:	cmp	r9, rax
0x813a:	ja	0x834b


0x7bba:	mov	rax, qword ptr [r15]
0x7bbd:	mov	rdx, rax
0x7bc0:	shl	rdx, 5
0x7bc4:	add	rdx, rcx
0x7bc7:	cmp	rax, rbx
0x7bca:	ja	0x7be6


0x78c0:	add	eax, 8
0x78c3:	movzx	ebx, byte ptr [rbp]
0x78c7:	add	rbp, 1
0x78cb:	cmp	bl, 0x68
0x78ce:	jne	0x78a0


0x78aa:	cmp	bl, 0x6a
0x78ad:	je	0x78c0


0x7dae:	mov	qword ptr [r12 + 0x28], rbx
0x7db3:	add	rbp, 2
0x7db7:	jmp	0x7a7f


0x7d79:	xor	r11d, r11d
0x7d7c:	add	rax, rcx
0x7d7f:	movzx	ecx, byte ptr [rdx + 1]
0x7d83:	setb	r11b
0x7d87:	add	rdx, 1
0x7d8b:	mov	rsi, rax
0x7d8e:	test	r11, r11
0x7d91:	lea	edi, [rcx - 0x30]
0x7d94:	jne	0x829e


0x81cc:	call	0x1840


0x81c7:	call	0x1810


0x8024:	movzx	ebx, byte ptr [rbp]
0x8028:	lea	rdx, [rbp + 1]
0x802c:	jmp	0x7885


0x7f0f:	cmp	qword ptr [rsp + 8], rcx
0x7f14:	je	0x7f1e


0x8261:	lea	rdx, [rcx + rcx*4]
0x8265:	add	rdx, rdx
0x8268:	mov	rsi, r11
0x826b:	xor	ebx, ebx
0x826d:	add	rdx, rax
0x8270:	movsx	eax, byte ptr [r11 + 1]
0x8275:	setb	bl
0x8278:	add	r11, 1
0x827c:	mov	rcx, rdx
0x827f:	test	rbx, rbx
0x8282:	lea	edi, [rax - 0x30]
0x8285:	je	0x82f8


0x8268:	mov	rsi, r11
0x826b:	xor	ebx, ebx
0x826d:	add	rdx, rax
0x8270:	movsx	eax, byte ptr [r11 + 1]
0x8275:	setb	bl
0x8278:	add	r11, 1
0x827c:	mov	rcx, rdx
0x827f:	test	rbx, rbx
0x8282:	lea	edi, [rax - 0x30]
0x8285:	je	0x82f8


0x8140:	mov	rsi, r9
0x8143:	mov	qword ptr [rsp + 0x48], r9
0x8148:	mov	qword ptr [rsp + 0x40], r10
0x814d:	shl	rsi, 5
0x8151:	cmp	qword ptr [rsp + 8], rcx
0x8156:	mov	qword ptr [rsp + 0x38], r8
0x815b:	mov	qword ptr [rsp + 0x30], r11
0x8160:	je	0x831e


0x7be6:	shl	rbx, 5
0x7bea:	lea	rax, [rcx + rbx]
0x7bee:	mov	edx, dword ptr [rax]
0x7bf0:	test	edx, edx
0x7bf2:	jne	0x810a


0x78af:	mov	edx, ebx
0x78b1:	and	edx, 0xffffffdf
0x78b4:	cmp	dl, 0x5a
0x78b7:	je	0x78c0


0x7a7f:	cmp	r9, rbx
0x7a82:	mov	rcx, qword ptr [r15 + 8]
0x7a86:	ja	0x8102


0x82f8:	cmp	dil, 9
0x82fc:	jbe	0x824a


0x8287:	cmp	dil, 9
0x828b:	ja	0x7f0b


0x831e:	mov	rdi, rsi
0x8321:	call	0x1a50


0x8166:	mov	rdi, rcx
0x8169:	call	0x1aa0


0x7bd0:	add	rax, 1
0x7bd4:	mov	dword ptr [rdx], 0
0x7bda:	add	rdx, 0x20
0x7bde:	cmp	rax, rbx
0x7be1:	jbe	0x7bd0


0x7be3:	mov	qword ptr [r15], rax
0x7be6:	shl	rbx, 5
0x7bea:	lea	rax, [rcx + rbx]
0x7bee:	mov	edx, dword ptr [rax]
0x7bf0:	test	edx, edx
0x7bf2:	jne	0x810a


0x7bf8:	mov	dword ptr [rax], 5
0x7bfe:	mov	rbp, r11
0x7c01:	movzx	ebx, byte ptr [r11]
0x7c05:	jmp	0x788e


0x810a:	cmp	edx, 5
0x810d:	jne	0x7f0f


0x78b9:	cmp	bl, 0x74
0x78bc:	jne	0x78e8


0x824a:	movabs	rsi, 0x1999999999999999
0x8254:	sub	eax, 0x30
0x8257:	mov	rdx, r8
0x825a:	cmp	rcx, rsi
0x825d:	cdqe	
0x825f:	ja	0x8268


0x8302:	lea	rbx, [rdx - 1]
0x8306:	cmp	rbx, -3
0x830a:	ja	0x7f0b


0x8291:	sub	eax, 0x30
0x8294:	mov	rdx, r8
0x8297:	mov	rsi, r11
0x829a:	cdqe	
0x829c:	jmp	0x826b


0x8113:	movzx	ebx, byte ptr [r11]
0x8117:	mov	rbp, r11
0x811a:	jmp	0x788e


0x78e8:	lea	edx, [rbx - 0x25]
0x78eb:	cmp	dl, 0x53
0x78ee:	ja	0x7f0b


0x8310:	mov	qword ptr [r12 + 0x40], rbx
0x8315:	lea	r11, [rsi + 2]
0x8319:	jmp	0x7bad


0x826b:	xor	ebx, ebx
0x826d:	add	rdx, rax
0x8270:	movsx	eax, byte ptr [r11 + 1]
0x8275:	setb	bl
0x8278:	add	r11, 1
0x827c:	mov	rcx, rdx
0x827f:	test	rbx, rbx
0x8282:	lea	edi, [rax - 0x30]
0x8285:	je	0x82f8


0x78f4:	lea	rcx, [rip + 0x1d71]
0x78fb:	movzx	edx, dl
0x78fe:	movsxd	rdx, dword ptr [rcx + rdx*4]
0x7902:	add	rdx, rcx
0x7905:	jmp	rdx


0x2028:	mov	byte ptr [rip + 0x209099], 1
0x202f:	pop	rbp
0x2030:	ret	


0x63fe:	test	eax, eax
0x6400:	js	0x7268


0x7268:	xor	r15d, r15d
0x726b:	jmp	0x657f


0x6406:	mov	rsi, r14
0x6409:	mov	rdi, r12
0x640c:	call	0x74c0


0x657f:	mov	rdi, qword ptr [rbp - 0x38]
0x6583:	xor	rdi, qword ptr fs:[0x28]
0x658c:	mov	rax, r15
0x658f:	jne	0x7497


0x6595:	lea	rsp, [rbp - 0x28]
0x6599:	pop	rbx
0x659a:	pop	r12
0x659c:	pop	r13
0x659e:	pop	r14
0x65a0:	pop	r15
0x65a2:	pop	rbp
0x65a3:	ret	


0x7497:	call	0x1920


0x1920:	jmp	qword ptr [rip + 0x209552]




0x6411:	test	eax, eax
0x6413:	js	0x72d0


0x72d0:	mov	rax, qword ptr [rbp - 0x408]
0x72d7:	mov	rdi, qword ptr [rbp - 0x2b8]
0x72de:	add	rax, 0x20
0x72e2:	cmp	rdi, rax
0x72e5:	je	0x72ec


0x6419:	mov	rax, qword ptr [rbp - 0x2b0]
0x6420:	mov	rdx, -1
0x6427:	add	rax, 7
0x642b:	cmp	rax, 6
0x642f:	cmovbe	rax, rdx
0x6433:	add	rax, qword ptr [rbp - 0x2a8]
0x643a:	jb	0x6e68


0x72ec:	mov	rax, qword ptr [rbp - 0x410]
0x72f3:	mov	rdi, qword ptr [rbp - 0x3a8]
0x72fa:	add	rax, 0x10
0x72fe:	cmp	rdi, rax
0x7301:	je	0x7308


0x72e7:	call	0x1810


0x6e68:	call	0x1840


0x6440:	mov	rdi, rax
0x6443:	xor	r8d, r8d
0x6446:	add	rdi, 6
0x644a:	setb	r8b
0x644e:	jb	0x6e68


0x7308:	call	0x1840


0x7303:	call	0x1810


0x6454:	cmp	rdi, 0xf9f
0x645b:	jbe	0x65a8


0x65a8:	add	rax, 0x24
0x65ac:	mov	qword ptr [rbp - 0x420], 0
0x65b7:	and	rax, 0xfffffffffffffff0
0x65bb:	sub	rsp, rax
0x65be:	lea	rax, [rsp + 0xf]
0x65c3:	and	rax, 0xfffffffffffffff0
0x65c7:	mov	qword ptr [rbp - 0x3d8], rax
0x65ce:	jmp	0x6495


0x6461:	cmp	rdi, -1
0x6465:	mov	qword ptr [rbp - 0x3c8], r8
0x646c:	je	0x6e68


0x6495:	xor	r12d, r12d
0x6498:	cmp	qword ptr [rbp - 0x3e8], 0
0x64a0:	je	0x64ac


0x6472:	call	0x1a50


0x64ac:	mov	r13, qword ptr [rbp - 0x2b8]
0x64b3:	lea	rax, [rbp - 0x3bc]
0x64ba:	mov	r15, qword ptr [rbp - 0x3e8]
0x64c1:	mov	qword ptr [rbp - 0x400], 0
0x64cc:	mov	qword ptr [rbp - 0x3f0], rax
0x64d3:	mov	rax, rbx
0x64d6:	mov	rbx, r8
0x64d9:	mov	rcx, qword ptr [r13]
0x64dd:	mov	r8, rax
0x64e0:	cmp	rcx, r8
0x64e3:	je	0x6e51


0x64a2:	mov	rax, qword ptr [rbp - 0x418]
0x64a9:	mov	r12, qword ptr [rax]
0x64ac:	mov	r13, qword ptr [rbp - 0x2b8]
0x64b3:	lea	rax, [rbp - 0x3bc]
0x64ba:	mov	r15, qword ptr [rbp - 0x3e8]
0x64c1:	mov	qword ptr [rbp - 0x400], 0
0x64cc:	mov	qword ptr [rbp - 0x3f0], rax
0x64d3:	mov	rax, rbx
0x64d6:	mov	rbx, r8
0x64d9:	mov	rcx, qword ptr [r13]
0x64dd:	mov	r8, rax
0x64e0:	cmp	rcx, r8
0x64e3:	je	0x6e51


0x6e51:	mov	r14, rbx
0x6e54:	jmp	0x6653


0x64e9:	sub	rcx, r8
0x64ec:	mov	rax, rbx
0x64ef:	add	rax, rcx
0x64f2:	mov	r14, rax
0x64f5:	jae	0x65d8


0x6653:	mov	rax, qword ptr [rbp - 0x400]
0x665a:	cmp	qword ptr [rbp - 0x2c0], rax
0x6661:	je	0x731b


0x64fb:	cmp	r12, -1
0x64ff:	je	0x6fd0


0x65d8:	cmp	r12, rax
0x65db:	jae	0x6644


0x731b:	mov	rbx, r14
0x731e:	xor	eax, eax
0x7320:	add	rbx, 1
0x7324:	jb	0x7430


0x6667:	movzx	edx, byte ptr [r13 + 0x48]
0x666c:	mov	rax, qword ptr [r13 + 0x50]
0x6670:	cmp	dl, 0x25
0x6673:	je	0x6e08


0x6fd0:	mov	r14, r12
0x6fd3:	jmp	0x6644


0x6505:	call	0x1840


0x65dd:	test	r12, r12
0x65e0:	jne	0x6f10


0x6644:	lea	rdi, [r15 + rbx]
0x6648:	mov	rdx, rcx
0x664b:	mov	rsi, r8
0x664e:	call	0x1a00


0x7430:	cmp	r12, -1
0x7434:	mov	eax, 1
0x7439:	je	0x737c


0x732a:	cmp	r12, rbx
0x732d:	jae	0x737c


0x6e08:	cmp	rax, -1
0x6e0c:	jne	0x72c6


0x6679:	cmp	rax, -1
0x667d:	je	0x72c6


0x65e6:	cmp	rax, 0xc
0x65ea:	ja	0x6f22


0x6f10:	js	0x6505


0x1a00:	jmp	qword ptr [rip + 0x2094e2]


0x737c:	cmp	r15, qword ptr [rbp - 0x3e8]
0x7383:	mov	byte ptr [r15 + r14], 0
0x7388:	je	0x73a1


0x743f:	test	r12, r12
0x7442:	je	0x6505


0x732f:	test	r12, r12
0x7332:	jne	0x7469


0x6e12:	mov	rax, r14
0x6e15:	add	rax, 1
0x6e19:	mov	rbx, rax
0x6e1c:	jae	0x6ea8


0x72c6:	call	0x1830


0x6683:	mov	r8, qword ptr [rbp - 0x3a8]
0x668a:	shl	rax, 5
0x668e:	add	rax, r8
0x6691:	cmp	dl, 0x6e
0x6694:	mov	edi, dword ptr [rax]
0x6696:	mov	dword ptr [rbp - 0x3d0], edi
0x669c:	je	0x6e80


0x65f0:	mov	r12d, 0xc
0x65f6:	cmp	r15, qword ptr [rbp - 0x3e8]
0x65fd:	sete	dl
0x6600:	test	r15, r15
0x6603:	je	0x6f48


0x6f22:	cmp	rax, -1
0x6f26:	je	0x6505


0x6f16:	add	r12, r12
0x6f19:	cmp	r12, rax
0x6f1c:	jae	0x65f6




0x73a1:	mov	rax, qword ptr [rbp - 0x420]
0x73a8:	test	rax, rax
0x73ab:	je	0x73b5


0x738a:	cmp	r12, rbx
0x738d:	jbe	0x73a1


0x7448:	js	0x6505


0x7338:	cmp	rbx, 0xc
0x733c:	ja	0x744e


0x7469:	js	0x6505


0x6e22:	cmp	r12, -1
0x6e26:	jne	0x6505


0x6ea8:	cmp	r12, rax
0x6eab:	jae	0x6e2f


0x6e80:	mov	edx, edi
0x6e82:	sub	edx, 0x12
0x6e85:	cmp	edx, 4
0x6e88:	ja	0x72c6


0x66a2:	mov	eax, dword ptr [r13 + 0x10]
0x66a6:	mov	rdi, qword ptr [rbp - 0x3d8]
0x66ad:	test	al, 1
0x66af:	mov	byte ptr [rdi], 0x25
0x66b2:	lea	rbx, [rdi + 1]
0x66b6:	je	0x66c7


0x6f48:	mov	rdi, r12
0x6f4b:	mov	qword ptr [rbp - 0x3e0], r8
0x6f52:	mov	byte ptr [rbp - 0x3d0], dl
0x6f58:	mov	qword ptr [rbp - 0x3c8], rcx
0x6f5f:	call	0x1a50


0x6609:	test	dl, dl
0x660b:	jne	0x6f48


0x6f2c:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6f33:	mov	r12, rax
0x6f36:	sete	dl
0x6f39:	test	r15, r15
0x6f3c:	jne	0x6609


0x65f6:	cmp	r15, qword ptr [rbp - 0x3e8]
0x65fd:	sete	dl
0x6600:	test	r15, r15
0x6603:	je	0x6f48


0x73b5:	mov	rax, qword ptr [rbp - 0x408]
0x73bc:	mov	rdi, qword ptr [rbp - 0x2b8]
0x73c3:	add	rax, 0x20
0x73c7:	cmp	rdi, rax
0x73ca:	je	0x73d1


0x73ad:	mov	rdi, rax
0x73b0:	call	0x1810


0x738f:	mov	rdi, r15
0x7392:	mov	rsi, rbx
0x7395:	call	0x1aa0


0x744e:	test	rax, rax
0x7451:	jne	0x6505


0x7342:	mov	r12d, 0xc
0x7348:	cmp	r15, qword ptr [rbp - 0x3e8]
0x734f:	sete	r13b
0x7353:	test	r15, r15
0x7356:	je	0x73fc


0x746f:	add	r12, r12
0x7472:	cmp	r12, rbx
0x7475:	jae	0x7348


0x6e2c:	mov	rbx, r12
0x6e2f:	mov	byte ptr [r15 + r14], 0x25
0x6e34:	mov	r8, qword ptr [r13 + 8]
0x6e38:	add	r13, 0x58
0x6e3c:	mov	rcx, qword ptr [r13]
0x6e40:	add	qword ptr [rbp - 0x400], 1
0x6e48:	cmp	rcx, r8
0x6e4b:	jne	0x64e9


0x6ead:	test	r12, r12
0x6eb0:	jne	0x7280


0x6e2f:	mov	byte ptr [r15 + r14], 0x25
0x6e34:	mov	r8, qword ptr [r13 + 8]
0x6e38:	add	r13, 0x58
0x6e3c:	mov	rcx, qword ptr [r13]
0x6e40:	add	qword ptr [rbp - 0x400], 1
0x6e48:	cmp	rcx, r8
0x6e4b:	jne	0x64e9


0x6e8e:	lea	rdi, [rip + 0x273b]
0x6e95:	mov	rax, qword ptr [rax + 0x10]
0x6e99:	movsxd	rdx, dword ptr [rdi + rdx*4]
0x6e9d:	add	rdx, rdi
0x6ea0:	jmp	rdx


0x66c7:	test	al, 2
0x66c9:	je	0x66d2


0x66b8:	mov	rdi, qword ptr [rbp - 0x3d8]
0x66bf:	lea	rbx, [rdi + 2]
0x66c3:	mov	byte ptr [rdi + 1], 0x27
0x66c7:	test	al, 2
0x66c9:	je	0x66d2


0x6611:	mov	rsi, r12
0x6614:	mov	rdi, r15
0x6617:	mov	qword ptr [rbp - 0x3d0], r8
0x661e:	mov	qword ptr [rbp - 0x3c8], rcx
0x6625:	call	0x1aa0


0x73d1:	mov	rax, qword ptr [rbp - 0x410]
0x73d8:	mov	rdi, qword ptr [rbp - 0x3a8]
0x73df:	add	rax, 0x10
0x73e3:	cmp	rdi, rax
0x73e6:	je	0x73ed


0x73cc:	call	0x1810


0x7457:	cmp	rbx, -1
0x745b:	je	0x6505


0x73fc:	mov	rdi, r12
0x73ff:	call	0x1a50


0x735c:	test	r13b, r13b
0x735f:	jne	0x73fc


0x747b:	jmp	0x744e


0x7348:	cmp	r15, qword ptr [rbp - 0x3e8]
0x734f:	sete	r13b
0x7353:	test	r15, r15
0x7356:	je	0x73fc


0x6eb6:	cmp	rax, 0xc
0x6eba:	ja	0x7292


0x7280:	js	0x6505


0x66d2:	test	al, 4
0x66d4:	je	0x66dd


0x66cb:	mov	byte ptr [rbx], 0x2d
0x66ce:	add	rbx, 1
0x66d2:	test	al, 4
0x66d4:	je	0x66dd


0x73ed:	mov	rax, qword ptr [rbp - 0x418]
0x73f4:	mov	qword ptr [rax], r14
0x73f7:	jmp	0x657f


0x73e8:	call	0x1810


0x7461:	mov	r12, rbx
0x7464:	jmp	0x7348


0x7365:	mov	rsi, r12
0x7368:	mov	rdi, r15
0x736b:	call	0x1aa0


0x6ec0:	mov	r12d, 0xc
0x6ec6:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6ecd:	sete	dl
0x6ed0:	test	r15, r15
0x6ed3:	je	0x7140


0x7292:	cmp	rax, -1
0x7296:	je	0x6505


0x7286:	add	r12, r12
0x7289:	cmp	r12, rax
0x728c:	jae	0x6ec6


0x66dd:	test	al, 8
0x66df:	je	0x66e8


0x66d6:	mov	byte ptr [rbx], 0x2b
0x66d9:	add	rbx, 1
0x66dd:	test	al, 8
0x66df:	je	0x66e8


0x7140:	mov	rdi, r12
0x7143:	mov	byte ptr [rbp - 0x3c8], dl
0x7149:	call	0x1a50


0x6ed9:	test	dl, dl
0x6edb:	jne	0x7140


0x729c:	mov	r12, rax
0x729f:	jmp	0x6ec6


0x6ec6:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6ecd:	sete	dl
0x6ed0:	test	r15, r15
0x6ed3:	je	0x7140


0x66e8:	test	al, 0x10
0x66ea:	je	0x66f3


0x66e1:	mov	byte ptr [rbx], 0x20
0x66e4:	add	rbx, 1
0x66e8:	test	al, 0x10
0x66ea:	je	0x66f3


0x6ee1:	mov	rsi, r12
0x6ee4:	mov	rdi, r15
0x6ee7:	call	0x1aa0


0x66f3:	test	al, 0x40
0x66f5:	je	0x66fe


0x66ec:	mov	byte ptr [rbx], 0x23
0x66ef:	add	rbx, 1
0x66f3:	test	al, 0x40
0x66f5:	je	0x66fe


0x66fe:	test	al, 0x20
0x6700:	je	0x6709


0x66f7:	mov	byte ptr [rbx], 0x49
0x66fa:	add	rbx, 1
0x66fe:	test	al, 0x20
0x6700:	je	0x6709


0x6709:	mov	rsi, qword ptr [r13 + 0x18]
0x670d:	mov	rdx, qword ptr [r13 + 0x20]
0x6711:	cmp	rsi, rdx
0x6714:	je	0x6746


0x6702:	mov	byte ptr [rbx], 0x30
0x6705:	add	rbx, 1
0x6709:	mov	rsi, qword ptr [r13 + 0x18]
0x670d:	mov	rdx, qword ptr [r13 + 0x20]
0x6711:	cmp	rsi, rdx
0x6714:	je	0x6746


0x6746:	mov	rsi, qword ptr [r13 + 0x30]
0x674a:	mov	rdx, qword ptr [r13 + 0x38]
0x674e:	cmp	rsi, rdx
0x6751:	je	0x6783


0x6716:	mov	rcx, rdx
0x6719:	mov	rdi, rbx
0x671c:	mov	qword ptr [rbp - 0x3e0], r8
0x6723:	sub	rcx, rsi
0x6726:	mov	rdx, rcx
0x6729:	mov	qword ptr [rbp - 0x3c8], rcx
0x6730:	call	0x1a00


0x6783:	mov	edi, dword ptr [rbp - 0x3d0]
0x6789:	cmp	edi, 0x10
0x678c:	ja	0x67bb


0x6753:	mov	rcx, rdx
0x6756:	mov	rdi, rbx
0x6759:	mov	qword ptr [rbp - 0x3e0], r8
0x6760:	sub	rcx, rsi
0x6763:	mov	rdx, rcx
0x6766:	mov	qword ptr [rbp - 0x3c8], rcx
0x676d:	call	0x1a00


0x678e:	mov	eax, 1
0x6793:	mov	ecx, edi
0x6795:	shl	rax, cl
0x6798:	test	eax, 0x14180
0x679d:	jne	0x67b4


0x67bb:	movzx	eax, byte ptr [r13 + 0x48]
0x67c0:	mov	byte ptr [rbx + 1], 0
0x67c4:	mov	byte ptr [rbx], al
0x67c6:	mov	rax, qword ptr [r13 + 0x28]
0x67ca:	cmp	rax, -1
0x67ce:	je	0x6f00


0x679f:	test	ah, 0x10
0x67a2:	jne	0x7100


0x67b4:	mov	byte ptr [rbx], 0x6c
0x67b7:	add	rbx, 1
0x67bb:	movzx	eax, byte ptr [r13 + 0x48]
0x67c0:	mov	byte ptr [rbx + 1], 0
0x67c4:	mov	byte ptr [rbx], al
0x67c6:	mov	rax, qword ptr [r13 + 0x28]
0x67ca:	cmp	rax, -1
0x67ce:	je	0x6f00


0x6f00:	mov	dword ptr [rbp - 0x3e0], 0
0x6f0a:	jmp	0x67f7


0x67d4:	shl	rax, 5
0x67d8:	add	rax, r8
0x67db:	cmp	dword ptr [rax], 5
0x67de:	jne	0x72c6


0x67a8:	test	ah, 6
0x67ab:	je	0x67bb


0x7100:	mov	byte ptr [rbx], 0x4c
0x7103:	add	rbx, 1
0x7107:	jmp	0x67bb


0x67f7:	mov	rax, qword ptr [r13 + 0x40]
0x67fb:	cmp	rax, -1
0x67ff:	je	0x682c


0x67e4:	mov	eax, dword ptr [rax + 0x10]
0x67e7:	mov	dword ptr [rbp - 0x3e0], 1
0x67f1:	mov	dword ptr [rbp - 0x3b8], eax
0x67f7:	mov	rax, qword ptr [r13 + 0x40]
0x67fb:	cmp	rax, -1
0x67ff:	je	0x682c


0x67ad:	mov	byte ptr [rbx], 0x6c
0x67b0:	add	rbx, 1
0x67b4:	mov	byte ptr [rbx], 0x6c
0x67b7:	add	rbx, 1
0x67bb:	movzx	eax, byte ptr [r13 + 0x48]
0x67c0:	mov	byte ptr [rbx + 1], 0
0x67c4:	mov	byte ptr [rbx], al
0x67c6:	mov	rax, qword ptr [r13 + 0x28]
0x67ca:	cmp	rax, -1
0x67ce:	je	0x6f00


0x682c:	mov	rax, r14
0x682f:	xor	edx, edx
0x6831:	add	rax, 2
0x6835:	jb	0x749c


0x6801:	shl	rax, 5
0x6805:	add	r8, rax
0x6808:	cmp	dword ptr [r8], 5
0x680c:	jne	0x72c6


0x749c:	cmp	r12, -1
0x74a0:	mov	edx, 1
0x74a5:	je	0x688b


0x683b:	cmp	r12, rax
0x683e:	jae	0x688b


0x6812:	mov	eax, dword ptr [rbp - 0x3e0]
0x6818:	mov	edx, dword ptr [r8 + 0x10]
0x681c:	mov	dword ptr [rbp + rax*4 - 0x3b8], edx
0x6823:	lea	eax, [rax + 1]
0x6826:	mov	dword ptr [rbp - 0x3e0], eax
0x682c:	mov	rax, r14
0x682f:	xor	edx, edx
0x6831:	add	rax, 2
0x6835:	jb	0x749c


0x688b:	mov	byte ptr [r15 + r14], 0
0x6890:	call	0x1840


0x74ab:	test	r12, r12
0x74ae:	je	0x6505


0x6840:	test	r12, r12
0x6843:	jne	0x7068


0x74b4:	jns	0x7080


0x6849:	cmp	rax, 0xc
0x684d:	ja	0x7080


0x7068:	js	0x6505


0x74ba:	jmp	0x6505


0x7080:	test	rdx, rdx
0x7083:	jne	0x6505


0x6853:	mov	r12d, 0xc
0x6859:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6860:	sete	dl
0x6863:	test	r15, r15
0x6866:	je	0x70b0


0x706e:	add	r12, r12
0x7071:	cmp	r12, rax
0x7074:	jae	0x6859


0x7089:	cmp	rax, -1
0x708d:	je	0x6505


0x70b0:	mov	rdi, r12
0x70b3:	mov	byte ptr [rbp - 0x3c8], dl
0x70b9:	call	0x1a50


0x686c:	test	dl, dl
0x686e:	jne	0x70b0


0x6859:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6860:	sete	dl
0x6863:	test	r15, r15
0x6866:	je	0x70b0


0x7093:	cmp	r15, qword ptr [rbp - 0x3e8]
0x709a:	mov	r12, rax
0x709d:	sete	dl
0x70a0:	test	r15, r15
0x70a3:	jne	0x686c


0x6874:	mov	rsi, r12
0x6877:	mov	rdi, r15
0x687a:	call	0x1aa0


0x616b:	test	rax, rax
0x616e:	je	0x61b2


0x61b2:	mov	eax, 0xffffffff
0x61b7:	jmp	0x6182


0x6170:	mov	rdx, qword ptr [rsp]
0x6174:	cmp	rdx, 0x7fffffff
0x617b:	ja	0x6198


0x6182:	mov	rbx, qword ptr [rsp + 8]
0x6187:	xor	rbx, qword ptr fs:[0x28]
0x6190:	jne	0x61b9


0x617d:	mov	qword ptr [rbx], rax
0x6180:	mov	eax, edx
0x6182:	mov	rbx, qword ptr [rsp + 8]
0x6187:	xor	rbx, qword ptr fs:[0x28]
0x6190:	jne	0x61b9


0x6198:	mov	rdi, rax
0x619b:	call	0x1810


0x6192:	add	rsp, 0x10
0x6196:	pop	rbx
0x6197:	ret	


0x61b9:	call	0x1920


0x5e94:	mov	rcx, qword ptr [rsp + 0x18]
0x5e99:	xor	rcx, qword ptr fs:[0x28]
0x5ea2:	jne	0x5eac


0x5ea4:	add	rsp, 0xd8
0x5eab:	ret	


0x5eac:	call	0x1920


0x83e1:	test	rbp, rbp
0x83e4:	je	0x8406


0x8406:	add	rsp, 8
0x840a:	pop	rbx
0x840b:	pop	rbp
0x840c:	pop	r12
0x840e:	pop	r13
0x8410:	pop	r14
0x8412:	pop	r15
0x8414:	ret	


0x83e6:	xor	ebx, ebx
0x83e8:	nop	dword ptr [rax + rax]
0x83f0:	mov	rdx, r15
0x83f3:	mov	rsi, r14
0x83f6:	mov	edi, r13d
0x83f9:	call	qword ptr [r12 + rbx*8]


0x6772:	mov	rcx, qword ptr [rbp - 0x3c8]
0x6779:	mov	r8, qword ptr [rbp - 0x3e0]
0x6780:	add	rbx, rcx
0x6783:	mov	edi, dword ptr [rbp - 0x3d0]
0x6789:	cmp	edi, 0x10
0x678c:	ja	0x67bb


0x6735:	mov	rcx, qword ptr [rbp - 0x3c8]
0x673c:	mov	r8, qword ptr [rbp - 0x3e0]
0x6743:	add	rbx, rcx
0x6746:	mov	rsi, qword ptr [r13 + 0x30]
0x674a:	mov	rdx, qword ptr [r13 + 0x38]
0x674e:	cmp	rsi, rdx
0x6751:	je	0x6783


0x5d5f:	test	rax, rax
0x5d62:	je	0x5d69


0x5d64:	add	rsp, 8
0x5d68:	ret	


0x3833:	test	rax, rax
0x3836:	je	0x388d


0x388d:	mov	qword ptr [rip + 0x207914], rbx
0x3894:	mov	qword ptr [rip + 0x20781d], rbx
0x389b:	pop	rbx
0x389c:	ret	


0x3838:	lea	r8, [rax + 1]
0x383c:	mov	rdx, r8
0x383f:	sub	rdx, rbx
0x3842:	cmp	rdx, 6
0x3846:	jle	0x388d


0x3848:	lea	rsi, [rax - 6]
0x384c:	lea	rdi, [rip + 0x54d5]
0x3853:	mov	ecx, 7
0x3858:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3858:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x385a:	seta	dl
0x385d:	sbb	dl, 0
0x3860:	test	dl, dl
0x3862:	jne	0x388d


0x3864:	lea	rdi, [rip + 0x54c5]
0x386b:	mov	ecx, 3
0x3870:	mov	rsi, r8
0x3873:	mov	rbx, r8
0x3876:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3876:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3878:	seta	dl
0x387b:	sbb	dl, 0
0x387e:	test	dl, dl
0x3880:	jne	0x388d


0x3882:	lea	rbx, [rax + 4]
0x3886:	mov	qword ptr [rip + 0x207813], rbx
0x388d:	mov	qword ptr [rip + 0x207914], rbx
0x3894:	mov	qword ptr [rip + 0x20781d], rbx
0x389b:	pop	rbx
0x389c:	ret	


0x38ba:	call	0x1830


0x61a0:	call	0x1840


0x50ad:	mov	qword ptr [rip + 0x205fcc], rbx
0x50b4:	pop	rbx
0x50b5:	mov	dword ptr [rip + 0x205fb9], 1
0x50bf:	pop	rbp
0x50c0:	pop	r12
0x50c2:	ret	


0x5087:	mov	qword ptr [rip + 0x205ffe], 0x100
0x5092:	mov	qword ptr [rip + 0x205fff], rbx
0x5099:	lea	rbx, [rip + 0x205ff0]
0x50a0:	cmp	r12, rbx
0x50a3:	je	0x50b4


0x5bfd:	xor	eax, eax
0x5bff:	pop	rbx
0x5c00:	ret	


0x506c:	cmp	rbx, rbp
0x506f:	jne	0x5060


0x5060:	mov	rdi, qword ptr [rbx]
0x5063:	add	rbx, 0x10
0x5067:	call	0x1810


0x558c:	lea	rsi, [rip + 0x3c88]
0x5593:	xor	edi, edi
0x5595:	mov	edx, 5
0x559a:	call	0x18f0


0x56a1:	jmp	0x558c


0x687f:	test	rax, rax
0x6882:	je	0x6505


0x6888:	mov	r15, rax
0x688b:	mov	byte ptr [r15 + r14], 0
0x6890:	call	0x1840


0x6eec:	test	rax, rax
0x6eef:	je	0x6feb


0x6feb:	call	0x1840


0x6ef5:	mov	r15, rax
0x6ef8:	jmp	0x6e2f


0x7370:	test	rax, rax
0x7373:	je	0x6feb


0x7379:	mov	r15, rax
0x737c:	cmp	r15, qword ptr [rbp - 0x3e8]
0x7383:	mov	byte ptr [r15 + r14], 0
0x7388:	je	0x73a1


0x662a:	test	rax, rax
0x662d:	mov	rcx, qword ptr [rbp - 0x3c8]
0x6634:	mov	r8, qword ptr [rbp - 0x3d0]
0x663b:	je	0x6feb


0x6641:	mov	r15, rax
0x6644:	lea	rdi, [r15 + rbx]
0x6648:	mov	rdx, rcx
0x664b:	mov	rsi, r8
0x664e:	call	0x1a00


0x739a:	test	rax, rax
0x739d:	cmovne	r15, rax
0x73a1:	mov	rax, qword ptr [rbp - 0x420]
0x73a8:	test	rax, rax
0x73ab:	je	0x73b5


0x816e:	mov	rdx, qword ptr [r15 + 8]
0x8172:	mov	r11, qword ptr [rsp + 0x30]
0x8177:	mov	rcx, rax
0x817a:	mov	r8, qword ptr [rsp + 0x38]
0x817f:	mov	r10, qword ptr [rsp + 0x40]
0x8184:	mov	r9, qword ptr [rsp + 0x48]
0x8189:	test	rcx, rcx
0x818c:	je	0x83a7


0x83a7:	mov	rcx, rdx
0x83aa:	jmp	0x834b


0x8192:	cmp	qword ptr [rsp + 8], rdx
0x8197:	mov	rax, qword ptr [r15]
0x819a:	je	0x8360


0x8360:	mov	rsi, qword ptr [rsp + 8]
0x8365:	shl	rax, 5
0x8369:	mov	rdi, rcx
0x836c:	mov	rdx, rax
0x836f:	mov	qword ptr [rsp + 0x48], r9
0x8374:	mov	qword ptr [rsp + 0x40], r10
0x8379:	mov	qword ptr [rsp + 0x38], r8
0x837e:	mov	qword ptr [rsp + 0x30], r11
0x8383:	call	0x1a00


0x81a0:	mov	qword ptr [r15 + 8], rcx
0x81a4:	jmp	0x7bbd


0x7bbd:	mov	rdx, rax
0x7bc0:	shl	rdx, 5
0x7bc4:	add	rdx, rcx
0x7bc7:	cmp	rax, rbx
0x7bca:	ja	0x7be6


0x8388:	mov	r9, qword ptr [rsp + 0x48]
0x838d:	mov	rcx, rax
0x8390:	mov	r10, qword ptr [rsp + 0x40]
0x8395:	mov	rax, qword ptr [r15]
0x8398:	mov	r8, qword ptr [rsp + 0x38]
0x839d:	mov	r11, qword ptr [rsp + 0x30]
0x83a2:	jmp	0x81a0


0x7ad6:	mov	rdx, qword ptr [r15 + 8]
0x7ada:	mov	r8, qword ptr [rsp + 0x30]
0x7adf:	mov	rcx, rax
0x7ae2:	mov	r10, qword ptr [rsp + 0x38]
0x7ae7:	mov	r9, qword ptr [rsp + 0x40]
0x7aec:	test	rcx, rcx
0x7aef:	je	0x83a7


0x7af5:	cmp	qword ptr [rsp + 8], rdx
0x7afa:	mov	rax, qword ptr [r15]
0x7afd:	je	0x82bb


0x82bb:	mov	rsi, qword ptr [rsp + 8]
0x82c0:	shl	rax, 5
0x82c4:	mov	rdi, rcx
0x82c7:	mov	rdx, rax
0x82ca:	mov	qword ptr [rsp + 0x40], r9
0x82cf:	mov	qword ptr [rsp + 0x38], r10
0x82d4:	mov	qword ptr [rsp + 0x30], r8
0x82d9:	call	0x1a00


0x7b03:	mov	qword ptr [r15 + 8], rcx
0x7b07:	mov	rdx, rax
0x7b0a:	shl	rdx, 5
0x7b0e:	add	rdx, rcx
0x7b11:	cmp	rax, rbx
0x7b14:	ja	0x7b36


0x82de:	mov	r9, qword ptr [rsp + 0x40]
0x82e3:	mov	rcx, rax
0x82e6:	mov	r10, qword ptr [rsp + 0x38]
0x82eb:	mov	rax, qword ptr [r15]
0x82ee:	mov	r8, qword ptr [rsp + 0x30]
0x82f3:	jmp	0x7b03


0x5be6:	test	rax, rax
0x5be9:	jne	0x5bf0


0x5beb:	test	rbx, rbx
0x5bee:	jne	0x5c01


0x5bf0:	pop	rbx
0x5bf1:	ret	


0x5c01:	call	0x5dc0


0x630e:	test	eax, eax
0x6310:	je	0x631a


0x6312:	test	dword ptr [rbx], 0x100
0x6318:	jne	0x6328


0x6328:	mov	rdi, rbx
0x632b:	mov	edx, 1
0x6330:	xor	esi, esi
0x6332:	call	0x6340


0x1be7:	lea	rsi, [rip + 0x7673]
0x1bee:	mov	edi, 6
0x1bf3:	call	0x1ab0


0x2363:	test	rax, rax
0x2366:	je	0x23a0


0x23a0:	mov	rdi, qword ptr [rsp]
0x23a4:	lea	rsi, [rip + 0x208d55]
0x23ab:	call	0x3780


0x2368:	mov	rdx, qword ptr [rip + 0x208dd1]
0x236f:	lea	rdi, [rip + 0x208d8a]
0x2376:	mov	rcx, rax
0x2379:	mov	esi, 0x21
0x237e:	call	0x1ad0


0x1ad0:	jmp	qword ptr [rip + 0x20947a]




0x23b0:	jmp	0x238a


0x238a:	mov	rdx, qword ptr [rsp + 8]
0x238f:	xor	rdx, qword ptr fs:[0x28]
0x2398:	jne	0x23b2


0x239a:	add	rsp, 0x18
0x239e:	ret	


0x23b2:	call	0x1920


0x240f:	movzx	ecx, byte ptr [rbx + 8]
0x2413:	cmp	cl, 0x2f
0x2416:	jne	0x26d0


0x241c:	lea	rax, [rbx + 8]
0x2420:	lea	rsi, [rsp + 0xe0]
0x2428:	lea	rdi, [rbx + 0x28]
0x242c:	mov	r15, rax
0x242f:	mov	rdx, rsi
0x2432:	jmp	0x243f


0x26d0:	mov	eax, 0x2f
0x26d5:	lea	rsi, [rsp + 0xe0]
0x26dd:	test	cl, cl
0x26df:	mov	word ptr [rsp + 0xe4], ax
0x26e7:	lea	rax, [rbx + 8]
0x26eb:	mov	dword ptr [rsp + 0xe0], 0x7665642f
0x26f6:	lea	rdi, [rbx + 0x28]
0x26fa:	lea	rdx, [rsi + 5]
0x26fe:	mov	r15, rax
0x2701:	jne	0x243f


0x243f:	add	rax, 1
0x2443:	add	rdx, 1
0x2447:	mov	byte ptr [rdx - 1], cl
0x244a:	cmp	rdi, rax
0x244d:	ja	0x2438


0x2707:	jmp	0x244f


0x244f:	mov	byte ptr [rdx], 0
0x2452:	lea	rdx, [rsp + 0x30]
0x2457:	mov	edi, 1
0x245c:	call	0x1a40


0x2438:	movzx	ecx, byte ptr [rax]
0x243b:	test	cl, cl
0x243d:	je	0x244f


0x1a40:	jmp	qword ptr [rip + 0x2094c2]




0x35c1:	test	eax, eax
0x35c3:	jne	0x3618


0x35c5:	mov	r12, qword ptr [rsp]
0x35c9:	mov	rdi, qword ptr [r12 + 0x20]
0x35ce:	test	rdi, rdi
0x35d1:	cmove	rdi, rbp
0x35d5:	call	0x1b60


0x3618:	xor	ebp, ebp
0x361a:	test	rbx, rbx
0x361d:	je	0x35f5


0x1b60:	jmp	qword ptr [rip + 0x209432]


0x35f5:	mov	rdx, qword ptr [rsp + 8]
0x35fa:	xor	rdx, qword ptr fs:[0x28]
0x3603:	mov	rax, rbp
0x3606:	jne	0x3623


0x361f:	mov	dword ptr [rbx], eax
0x3621:	jmp	0x35f5




0x3608:	add	rsp, 0x10
0x360c:	pop	rbx
0x360d:	pop	rbp
0x360e:	pop	r12
0x3610:	ret	


0x3623:	call	0x1920


0x1bf8:	lea	rsi, [rip + 0x6a38]
0x1bff:	lea	rdi, [rip + 0x6a08]
0x1c06:	call	0x18e0


0x18e0:	jmp	qword ptr [rip + 0x209572]




0x372b:	mov	rdx, rax
0x372e:	mov	eax, 1
0x3733:	test	rdx, rdx
0x3736:	je	0x3755


0x3755:	add	rsp, 8
0x3759:	ret	


0x3738:	lea	rdi, [rip + 0x55a5]
0x373f:	mov	ecx, 2
0x3744:	mov	rsi, rdx
0x3747:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3747:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3749:	seta	cl
0x374c:	sbb	cl, 0
0x374f:	xor	eax, eax
0x3751:	test	cl, cl
0x3753:	jne	0x3760


0x3760:	lea	rdi, [rip + 0x557f]
0x3767:	mov	ecx, 6
0x376c:	mov	rsi, rdx
0x376f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x376f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3771:	seta	al
0x3774:	sbb	al, 0
0x3776:	test	al, al
0x3778:	setne	al
0x377b:	add	rsp, 8
0x377f:	ret	


0x3a21:	cmp	r15d, 0xa
0x3a25:	mov	qword ptr [rsp + 0x58], rax
0x3a2a:	ja	0x4bdf


0x3a30:	lea	rcx, [rip + 0x5369]
0x3a37:	mov	edx, r15d
0x3a3a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x3a3e:	add	rax, rcx
0x3a41:	jmp	rax


0x4bdf:	call	0x1830


0x6ff0:	mov	qword ptr [rbp - 0x3c8], rax
0x6ff7:	nop	word ptr [rax + rax]
0x7000:	mov	rdi, r15
0x7003:	call	0x1810


0x7008:	jmp	0x6523


0x6523:	mov	rax, qword ptr [rbp - 0x420]
0x652a:	test	rax, rax
0x652d:	je	0x6537


0x6537:	mov	rax, qword ptr [rbp - 0x408]
0x653e:	mov	rdi, qword ptr [rbp - 0x2b8]
0x6545:	add	rax, 0x20
0x6549:	cmp	rdi, rax
0x654c:	je	0x6553


0x652f:	mov	rdi, rax
0x6532:	call	0x1810


0x6553:	mov	rax, qword ptr [rbp - 0x410]
0x655a:	mov	rdi, qword ptr [rbp - 0x3a8]
0x6561:	add	rax, 0x10
0x6565:	cmp	rdi, rax
0x6568:	je	0x656f


0x654e:	call	0x1810


0x656f:	mov	rax, qword ptr [rbp - 0x3c8]
0x6576:	xor	r15d, r15d
0x6579:	mov	dword ptr [rax], 0xc
0x657f:	mov	rdi, qword ptr [rbp - 0x38]
0x6583:	xor	rdi, qword ptr fs:[0x28]
0x658c:	mov	rax, r15
0x658f:	jne	0x7497


0x656a:	call	0x1810


0x6895:	mov	qword ptr [rbp - 0x3c8], rax
0x689c:	mov	eax, dword ptr [rax]
0x689e:	mov	qword ptr [rbp - 0x3f8], rbx
0x68a5:	mov	dword ptr [rbp - 0x424], eax
0x68ab:	nop	dword ptr [rax + rax]
0x68b0:	mov	rax, qword ptr [rbp - 0x3c8]
0x68b7:	mov	rbx, r12
0x68ba:	mov	r10d, 0x7fffffff
0x68c0:	sub	rbx, r14
0x68c3:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0x68cd:	cmp	rbx, 0x7fffffff
0x68d4:	mov	dword ptr [rax], 0
0x68da:	mov	eax, dword ptr [rbp - 0x3d0]
0x68e0:	cmovbe	r10, rbx
0x68e4:	cmp	eax, 0x11
0x68e7:	ja	0x72c6


0x68ed:	lea	rsi, [rip + 0x2c94]
0x68f4:	movsxd	rax, dword ptr [rsi + rax*4]
0x68f8:	add	rax, rsi
0x68fb:	jmp	rax


0x61a5:	mov	dword ptr [rax], 0x4b
0x61ab:	mov	eax, 0xffffffff
0x61b0:	jmp	0x6182


0x650a:	mov	qword ptr [rbp - 0x3c8], rax
0x6511:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6518:	je	0x6523


0x651a:	test	r15, r15
0x651d:	jne	0x7000


0x7000:	mov	rdi, r15
0x7003:	call	0x1810


0x730d:	xor	r15d, r15d
0x7310:	mov	dword ptr [rax], 0x16
0x7316:	jmp	0x657f


0x6e6d:	mov	qword ptr [rbp - 0x3c8], rax
0x6e74:	jmp	0x6537


0x81d1:	mov	dword ptr [rax], 0xc
0x81d7:	mov	eax, 0xffffffff
0x81dc:	jmp	0x7762


0x7762:	add	rsp, 0x58
0x7766:	pop	rbx
0x7767:	pop	rbp
0x7768:	pop	r12
0x776a:	pop	r13
0x776c:	pop	r14
0x776e:	pop	r15
0x7770:	ret	


0x7f33:	mov	dword ptr [rax], 0x16
0x7f39:	mov	eax, 0xffffffff
0x7f3e:	jmp	0x7762


0x4c11:	mov	r13, rax
0x4c14:	mov	eax, dword ptr [rax]
0x4c16:	test	r15d, r15d
0x4c19:	mov	rbx, qword ptr [rip + 0x206460]
0x4c20:	mov	dword ptr [rsp + 0x18], eax
0x4c24:	js	0x4d91


0x4d91:	call	0x1830


0x4c2a:	cmp	dword ptr [rip + 0x206447], r15d
0x4c31:	jg	0x4c95


0x4c33:	cmp	r15d, 0x7fffffff
0x4c3a:	je	0x4d96


0x4c95:	mov	eax, dword ptr [rbp + 4]
0x4c98:	shl	r15, 4
0x4c9c:	sub	rsp, 8
0x4ca0:	add	rbx, r15
0x4ca3:	lea	r15, [rbp + 8]
0x4ca7:	mov	r8d, dword ptr [rbp]
0x4cab:	mov	r11, qword ptr [rbx]
0x4cae:	mov	r12, qword ptr [rbx + 8]
0x4cb2:	mov	rcx, r14
0x4cb5:	or	eax, 1
0x4cb8:	mov	dword ptr [rsp + 0x24], eax
0x4cbc:	push	qword ptr [rbp + 0x30]
0x4cbf:	mov	r9d, eax
0x4cc2:	push	qword ptr [rbp + 0x28]
0x4cc5:	push	r15
0x4cc7:	mov	rsi, r11
0x4cca:	mov	rdx, qword ptr [rsp + 0x28]
0x4ccf:	mov	rdi, r12
0x4cd2:	mov	qword ptr [rsp + 0x30], r11
0x4cd7:	call	0x39b0


0x4d96:	call	0x5dc0


0x4c40:	lea	r12d, [r15 + 1]
0x4c44:	lea	rax, [rip + 0x206445]
0x4c4b:	movsxd	rsi, r12d
0x4c4e:	shl	rsi, 4
0x4c52:	cmp	rbx, rax
0x4c55:	je	0x4d70


0x4d70:	xor	edi, edi
0x4d72:	call	0x5bd0


0x4c5b:	mov	rdi, rbx
0x4c5e:	call	0x5bd0


0x4c63:	mov	rbx, rax
0x4c66:	mov	qword ptr [rip + 0x206413], rax
0x4c6d:	movsxd	rdi, dword ptr [rip + 0x206404]
0x4c74:	mov	edx, r12d
0x4c77:	xor	esi, esi
0x4c79:	sub	edx, edi
0x4c7b:	shl	rdi, 4
0x4c7f:	movsxd	rdx, edx
0x4c82:	add	rdi, rbx
0x4c85:	shl	rdx, 4
0x4c89:	call	0x19a0


0x19a0:	jmp	qword ptr [rip + 0x209512]




0x4d77:	movdqa	xmm0, xmmword ptr [rip + 0x206311]
0x4d7f:	mov	rbx, rax
0x4d82:	mov	qword ptr [rip + 0x2062f7], rax
0x4d89:	movups	xmmword ptr [rax], xmm0
0x4d8c:	jmp	0x4c6d


0x4c6d:	movsxd	rdi, dword ptr [rip + 0x206404]
0x4c74:	mov	edx, r12d
0x4c77:	xor	esi, esi
0x4c79:	sub	edx, edi
0x4c7b:	shl	rdi, 4
0x4c7f:	movsxd	rdx, edx
0x4c82:	add	rdi, rbx
0x4c85:	shl	rdx, 4
0x4c89:	call	0x19a0


0x4dac:	mov	r12d, dword ptr [rax]
0x4daf:	mov	rbp, rax
0x4db2:	lea	rax, [rip + 0x206507]
0x4db9:	test	rbx, rbx
0x4dbc:	mov	esi, 0x38
0x4dc1:	cmove	rbx, rax
0x4dc5:	mov	rdi, rbx
0x4dc8:	call	0x5d70


0x4ee2:	mov	r12d, dword ptr [rax]
0x4ee5:	mov	rbp, rax
0x4ee8:	lea	rax, [rbx + 8]
0x4eec:	sub	rsp, 8
0x4ef0:	mov	r9d, dword ptr [rbx + 4]
0x4ef4:	push	qword ptr [rbx + 0x30]
0x4ef7:	mov	r8d, dword ptr [rbx]
0x4efa:	push	qword ptr [rbx + 0x28]
0x4efd:	mov	rdx, r15
0x4f00:	push	rax
0x4f01:	mov	rcx, qword ptr [rsp + 0x28]
0x4f06:	mov	rsi, r14
0x4f09:	mov	rdi, r13
0x4f0c:	call	0x39b0


0x4f5f:	test	r12, r12
0x4f62:	mov	r13, rax
0x4f65:	mov	eax, dword ptr [rax]
0x4f67:	sete	bpl
0x4f6b:	or	ebp, dword ptr [rbx + 4]
0x4f6e:	lea	r10, [rbx + 8]
0x4f72:	sub	rsp, 8
0x4f76:	mov	r8d, dword ptr [rbx]
0x4f79:	mov	rcx, r15
0x4f7c:	mov	dword ptr [rsp + 0x14], eax
0x4f80:	push	qword ptr [rbx + 0x30]
0x4f83:	mov	rdx, r14
0x4f86:	push	qword ptr [rbx + 0x28]
0x4f89:	push	r10
0x4f8b:	xor	esi, esi
0x4f8d:	mov	r9d, ebp
0x4f90:	xor	edi, edi
0x4f92:	mov	qword ptr [rsp + 0x40], r10
0x4f97:	call	0x39b0


0x70be:	test	rax, rax
0x70c1:	mov	rcx, rax
0x70c4:	movzx	edx, byte ptr [rbp - 0x3c8]
0x70cb:	je	0x6505


0x70d1:	test	r14, r14
0x70d4:	je	0x7270


0x7270:	mov	r15, rcx
0x7273:	jmp	0x688b


0x70da:	test	dl, dl
0x70dc:	je	0x7270


0x70e2:	mov	rsi, r15
0x70e5:	mov	rdx, r14
0x70e8:	mov	rdi, rax
0x70eb:	call	0x1a00


0x70f0:	mov	r15, rax
0x70f3:	jmp	0x688b


0x714e:	test	rax, rax
0x7151:	mov	rcx, rax
0x7154:	movzx	edx, byte ptr [rbp - 0x3c8]
0x715b:	je	0x6505


0x7161:	test	r14, r14
0x7164:	je	0x72a4


0x72a4:	mov	r15, rcx
0x72a7:	jmp	0x6e2f


0x716a:	test	dl, dl
0x716c:	je	0x72a4


0x7172:	mov	rsi, r15
0x7175:	mov	rdx, r14
0x7178:	mov	rdi, rax
0x717b:	call	0x1a00


0x7180:	mov	r15, rax
0x7183:	jmp	0x6e2f


0x7404:	test	rax, rax
0x7407:	mov	rcx, rax
0x740a:	je	0x6505


0x7410:	test	r14, r14
0x7413:	je	0x7480


0x7480:	mov	r15, rcx
0x7483:	jmp	0x737c


0x7415:	test	r13b, r13b
0x7418:	je	0x7480


0x741a:	mov	rsi, r15
0x741d:	mov	rdx, r14
0x7420:	mov	rdi, rax
0x7423:	call	0x1a00


0x7428:	mov	r15, rax
0x742b:	jmp	0x737c


0x6f64:	test	rax, rax
0x6f67:	mov	r9, rax
0x6f6a:	mov	rcx, qword ptr [rbp - 0x3c8]
0x6f71:	movzx	edx, byte ptr [rbp - 0x3d0]
0x6f78:	mov	r8, qword ptr [rbp - 0x3e0]
0x6f7f:	je	0x6505


0x6f85:	test	rbx, rbx
0x6f88:	je	0x7190


0x7190:	mov	r15, r9
0x7193:	jmp	0x6644


0x6f8e:	test	dl, dl
0x6f90:	je	0x7190


0x6f96:	mov	rsi, r15
0x6f99:	mov	rdx, rbx
0x6f9c:	mov	rdi, rax
0x6f9f:	mov	qword ptr [rbp - 0x3d0], r8
0x6fa6:	mov	qword ptr [rbp - 0x3c8], rcx
0x6fad:	call	0x1a00


0x6fb2:	mov	rcx, qword ptr [rbp - 0x3c8]
0x6fb9:	mov	r15, rax
0x6fbc:	mov	r8, qword ptr [rbp - 0x3d0]
0x6fc3:	jmp	0x6644


0x6477:	test	rax, rax
0x647a:	mov	qword ptr [rbp - 0x3d8], rax
0x6481:	je	0x6e68


0x6487:	mov	r8, qword ptr [rbp - 0x3c8]
0x648e:	mov	qword ptr [rbp - 0x420], rax
0x6495:	xor	r12d, r12d
0x6498:	cmp	qword ptr [rbp - 0x3e8], 0
0x64a0:	je	0x64ac


0x8326:	mov	rdx, qword ptr [rsp + 8]
0x832b:	mov	rcx, rax
0x832e:	mov	r9, qword ptr [rsp + 0x48]
0x8333:	mov	r10, qword ptr [rsp + 0x40]
0x8338:	mov	r8, qword ptr [rsp + 0x38]
0x833d:	mov	r11, qword ptr [rsp + 0x30]
0x8342:	jmp	0x8189


0x8189:	test	rcx, rcx
0x818c:	je	0x83a7


0x81e9:	mov	rdx, qword ptr [rsp + 8]
0x81ee:	mov	rcx, rax
0x81f1:	mov	r9, qword ptr [rsp + 0x40]
0x81f6:	mov	r10, qword ptr [rsp + 0x38]
0x81fb:	mov	r8, qword ptr [rsp + 0x30]
0x8200:	jmp	0x7aec


0x7aec:	test	rcx, rcx
0x7aef:	je	0x83a7


0x5b79:	test	rax, rax
0x5b7c:	jne	0x5b83


0x5b7e:	test	rbx, rbx
0x5b81:	jne	0x5b85


0x5b83:	pop	rbx
0x5b84:	ret	


0x5b85:	call	0x5dc0


0x210b:	lea	rdi, [rax + 2]
0x210f:	cmp	rax, 0xb
0x2113:	mov	eax, 0xe
0x2118:	cmovbe	rdi, rax
0x211c:	call	0x5b70


0x221d:	cmp	rax, 6
0x2221:	mov	r8, qword ptr [rsp + 0x18]
0x2226:	ja	0x20c8


0x222c:	lea	r13, [rsp + 0x33]
0x2231:	lea	rcx, [rip + 0x6231]
0x2238:	mov	edx, 8
0x223d:	mov	esi, 1
0x2242:	xor	eax, eax
0x2244:	mov	rdi, r13
0x2247:	call	0x1bb0


0x224c:	movzx	r12d, byte ptr [rip + 0x208f00]
0x2254:	jmp	0x20d2


0x20d2:	test	r12b, r12b
0x20d5:	jne	0x20e9


0x20df:	cmp	rax, 0xb
0x20e3:	jbe	0x2290


0x2290:	lea	r12, [rsp + 0x3b]
0x2295:	lea	rcx, [rip + 0x61d3]
0x229c:	mov	r8, rbp
0x229f:	mov	edx, 0xd
0x22a4:	mov	esi, 1
0x22a9:	xor	eax, eax
0x22ab:	mov	rdi, r12
0x22ae:	call	0x1bb0


0x22b3:	jmp	0x20f3


0x20f3:	cmp	byte ptr [rip + 0x209056], 0
0x20fa:	mov	edi, 1
0x20ff:	je	0x211c


0x5da9:	mov	rdi, rbx
0x5dac:	lea	rsi, [rax + 1]
0x5db0:	pop	rbx
0x5db1:	jmp	0x5d70


0x559f:	lea	rdx, [rip + 0x3f9a]
0x55a6:	mov	rcx, rax
0x55a9:	mov	r8d, 0x7e3
0x55af:	mov	esi, 1
0x55b4:	mov	rdi, rbp
0x55b7:	xor	eax, eax
0x55b9:	call	0x1b40


0x55be:	lea	rsi, [rip + 0x3ce3]
0x55c5:	xor	edi, edi
0x55c7:	mov	edx, 5
0x55cc:	call	0x18f0


0x55d1:	mov	rsi, rbp
0x55d4:	mov	rdi, rax
0x55d7:	call	0x19d0


0x19d0:	jmp	qword ptr [rip + 0x2094fa]




0x318d:	mov	rdi, qword ptr [rip + 0x207f2c]
0x3194:	mov	rdx, rax
0x3197:	mov	rcx, rbx
0x319a:	mov	esi, 1
0x319f:	xor	eax, eax
0x31a1:	call	0x1b40


0x31a6:	mov	edi, ebp
0x31a8:	call	0x1b20


0x1b20:	jmp	qword ptr [rip + 0x209452]




0x31bb:	mov	rdx, rbx
0x31be:	mov	rsi, rax
0x31c1:	mov	edi, 1
0x31c6:	xor	eax, eax
0x31c8:	call	0x1ac0


0x1ac0:	jmp	qword ptr [rip + 0x209482]




0x22ec:	mov	rdi, rax
0x22ef:	call	0x1910


0x22f4:	lea	rdi, [rax + 5]
0x22f8:	call	0x5b70


0x5b04:	lea	rdx, [rip + 0x376c]
0x5b0b:	mov	rsi, rax
0x5b0e:	mov	edi, 1
0x5b13:	xor	eax, eax
0x5b15:	call	0x1ac0


0x5dd7:	mov	edi, dword ptr [rip + 0x20524b]
0x5ddd:	lea	rdx, [rip + 0x2efd]
0x5de4:	mov	rcx, rax
0x5de7:	xor	esi, esi
0x5de9:	xor	eax, eax
0x5deb:	call	0x1af0


0x1af0:	jmp	qword ptr [rip + 0x20946a]




0x5ef7:	cmp	rax, -3
0x5efb:	mov	rbp, rax
0x5efe:	jbe	0x5f20


0x5f20:	mov	rdx, qword ptr [rsp + 8]
0x5f25:	xor	rdx, qword ptr fs:[0x28]
0x5f2e:	mov	rax, rbp
0x5f31:	jne	0x5f3e


0x5f00:	test	r12, r12
0x5f03:	je	0x5f20


0x5f33:	add	rsp, 0x18
0x5f37:	pop	rbx
0x5f38:	pop	rbp
0x5f39:	pop	r12
0x5f3b:	pop	r13
0x5f3d:	ret	


0x5f3e:	call	0x1920


0x5f05:	xor	edi, edi
0x5f07:	call	0x3720


0x5f0c:	test	al, al
0x5f0e:	jne	0x5f20


0x5f10:	movzx	eax, byte ptr [r13]
0x5f15:	mov	ebp, 1
0x5f1a:	mov	dword ptr [rbx], eax
0x5f1c:	nop	dword ptr [rax]
0x5f20:	mov	rdx, qword ptr [rsp + 8]
0x5f25:	xor	rdx, qword ptr fs:[0x28]
0x5f2e:	mov	rax, rbp
0x5f31:	jne	0x5f3e


0x22fd:	lea	rsi, [rip + 0x6178]
0x2304:	mov	rbx, rax
0x2307:	mov	edx, 5
0x230c:	xor	edi, edi
0x230e:	call	0x18f0


0x2313:	mov	rdi, rbx
0x2316:	mov	rsi, rax
0x2319:	call	0x1880


0x1880:	jmp	qword ptr [rip + 0x2095a2]




0x2121:	cmp	byte ptr [rip + 0x209028], 0
0x2128:	mov	rbp, rax
0x212b:	jne	0x2260


0x2131:	mov	byte ptr [rax], 0
0x2134:	cmp	byte ptr [rip + 0x209016], 0
0x213b:	lea	rax, [rip + 0x208ed6]
0x2142:	lea	r8, [rip + 0x7118]
0x2149:	lea	rdi, [rsp + 0x28]
0x214e:	lea	rsi, [rip + 0x65d3]
0x2155:	cmovne	r8, rax
0x2159:	lea	rax, [rip + 0x6304]
0x2160:	test	rbx, rbx
0x2163:	cmove	rbx, rax
0x2167:	mov	eax, dword ptr [rip + 0x208fcb]
0x216d:	sub	rsp, 8
0x2171:	push	rbp
0x2172:	push	qword ptr [rsp + 0x18]
0x2176:	mov	rcx, rbx
0x2179:	push	r12
0x217b:	push	r13
0x217d:	push	r14
0x217f:	push	rax
0x2180:	xor	eax, eax
0x2182:	push	r15
0x2184:	mov	r9d, dword ptr [rsp + 0x44]
0x2189:	mov	edx, dword ptr [rsp + 0x40]
0x218d:	call	0x5e00


0x2260:	mov	r8, qword ptr [rsp + 0x10]
0x2265:	lea	rcx, [rip + 0x6209]
0x226c:	mov	rdi, rax
0x226f:	mov	rdx, -1
0x2276:	mov	esi, 1
0x227b:	xor	eax, eax
0x227d:	call	0x1bb0


0x2282:	jmp	0x2134


0x2134:	cmp	byte ptr [rip + 0x209016], 0
0x213b:	lea	rax, [rip + 0x208ed6]
0x2142:	lea	r8, [rip + 0x7118]
0x2149:	lea	rdi, [rsp + 0x28]
0x214e:	lea	rsi, [rip + 0x65d3]
0x2155:	cmovne	r8, rax
0x2159:	lea	rax, [rip + 0x6304]
0x2160:	test	rbx, rbx
0x2163:	cmove	rbx, rax
0x2167:	mov	eax, dword ptr [rip + 0x208fcb]
0x216d:	sub	rsp, 8
0x2171:	push	rbp
0x2172:	push	qword ptr [rsp + 0x18]
0x2176:	mov	rcx, rbx
0x2179:	push	r12
0x217b:	push	r13
0x217d:	push	r14
0x217f:	push	rax
0x2180:	xor	eax, eax
0x2182:	push	r15
0x2184:	mov	r9d, dword ptr [rsp + 0x44]
0x2189:	mov	edx, dword ptr [rsp + 0x40]
0x218d:	call	0x5e00


0x2192:	add	rsp, 0x40
0x2196:	cmp	eax, -1
0x2199:	je	0x22b8


0x22b8:	call	0x5dc0


0x219f:	mov	rbx, qword ptr [rsp + 0x28]
0x21a4:	mov	rdi, rbx
0x21a7:	call	0x1910


0x21ac:	add	rax, rbx
0x21af:	jmp	0x21bb


0x21bb:	cmp	byte ptr [rax - 1], 0x20
0x21bf:	lea	rdx, [rax - 1]
0x21c3:	je	0x21b8


0x21b8:	mov	rax, rdx
0x21bb:	cmp	byte ptr [rax - 1], 0x20
0x21bf:	lea	rdx, [rax - 1]
0x21c3:	je	0x21b8


0x21c5:	mov	byte ptr [rax], 0
0x21c8:	mov	rdi, qword ptr [rsp + 0x28]
0x21cd:	call	0x18a0


0x18a0:	jmp	qword ptr [rip + 0x209592]




0x5d29:	mov	rdx, rbx
0x5d2c:	xor	esi, esi
0x5d2e:	mov	rdi, rax
0x5d31:	pop	rbx
0x5d32:	jmp	0x19a0


0x5d84:	add	rsp, 8
0x5d88:	mov	rdx, rbx
0x5d8b:	mov	rsi, rbp
0x5d8e:	pop	rbx
0x5d8f:	pop	rbp
0x5d90:	mov	rdi, rax
0x5d93:	jmp	0x1a00


0x5f63:	lea	rsi, [rbp + 0x2c]
0x5f67:	mov	rbx, rax
0x5f6a:	mov	edx, 0x20
0x5f6f:	mov	rdi, rax
0x5f72:	call	0x1850


0x1850:	jmp	qword ptr [rip + 0x2095ba]




0x5fe1:	call	0x19f0


0x19f0:	jmp	qword ptr [rip + 0x2094ea]




0x61cc:	mov	ebx, dword ptr [rbp]
0x61cf:	mov	rdi, rbp
0x61d2:	mov	r12, rax
0x61d5:	call	0x6280


0x624e:	test	rax, rax
0x6251:	je	0x6270


0x6270:	lea	rax, [rip + 0x3309]
0x6277:	add	rsp, 8
0x627b:	ret	


0x6253:	cmp	byte ptr [rax], 0
0x6256:	lea	rdx, [rip + 0x3323]
0x625d:	cmove	rax, rdx
0x6261:	add	rsp, 8
0x6265:	ret	


0x38d0:	movzx	edx, byte ptr [rax]
0x38d3:	and	edx, 0xffffffdf
0x38d6:	cmp	dl, 0x55
0x38d9:	je	0x3950


0x3950:	movzx	edx, byte ptr [rax + 1]
0x3954:	and	edx, 0xffffffdf
0x3957:	cmp	dl, 0x54
0x395a:	jne	0x38e0


0x38db:	cmp	dl, 0x47
0x38de:	je	0x3900


0x395c:	movzx	edx, byte ptr [rax + 2]
0x3960:	and	edx, 0xffffffdf
0x3963:	cmp	dl, 0x46
0x3966:	jne	0x38e0


0x38e0:	lea	rax, [rip + 0x545c]
0x38e7:	lea	rdx, [rip + 0x5457]
0x38ee:	cmp	ebx, 9
0x38f1:	cmovne	rax, rdx
0x38f5:	add	rsp, 8
0x38f9:	pop	rbx
0x38fa:	pop	rbp
0x38fb:	ret	


0x3900:	movzx	edx, byte ptr [rax + 1]
0x3904:	and	edx, 0xffffffdf
0x3907:	cmp	dl, 0x42
0x390a:	jne	0x38e0


0x396c:	cmp	byte ptr [rax + 3], 0x2d
0x3970:	jne	0x38e0


0x390c:	cmp	byte ptr [rax + 2], 0x31
0x3910:	jne	0x38e0


0x3976:	cmp	byte ptr [rax + 4], 0x38
0x397a:	jne	0x38e0


0x3912:	cmp	byte ptr [rax + 3], 0x38
0x3916:	jne	0x38e0


0x3980:	cmp	byte ptr [rax + 5], 0
0x3984:	jne	0x38e0


0x3918:	cmp	byte ptr [rax + 4], 0x30
0x391c:	jne	0x38e0


0x398a:	cmp	byte ptr [rbp], 0x60
0x398e:	lea	rax, [rip + 0x539f]
0x3995:	lea	rdx, [rip + 0x539c]
0x399c:	cmovne	rax, rdx
0x39a0:	add	rsp, 8
0x39a4:	pop	rbx
0x39a5:	pop	rbp
0x39a6:	ret	


0x391e:	cmp	byte ptr [rax + 5], 0x33
0x3922:	jne	0x38e0


0x3924:	cmp	byte ptr [rax + 6], 0x30
0x3928:	jne	0x38e0


0x392a:	cmp	byte ptr [rax + 7], 0
0x392e:	jne	0x38e0


0x3930:	cmp	byte ptr [rbp], 0x60
0x3934:	lea	rax, [rip + 0x5401]
0x393b:	lea	rdx, [rip + 0x53fe]
0x3942:	cmovne	rax, rdx
0x3946:	add	rsp, 8
0x394a:	pop	rbx
0x394b:	pop	rbp
0x394c:	ret	


0x6373:	mov	edx, r12d
0x6376:	mov	rsi, rbp
0x6379:	mov	edi, eax
0x637b:	call	0x1980


0x1980:	jmp	qword ptr [rip + 0x209522]




0x628c:	test	eax, eax
0x628e:	mov	rdi, rbx
0x6291:	js	0x62e7


0x62e7:	pop	rbx
0x62e8:	pop	rbp
0x62e9:	pop	r12
0x62eb:	jmp	0x18d0


0x6293:	call	0x1a80


0x18d0:	jmp	qword ptr [rip + 0x20957a]




0x6298:	test	eax, eax
0x629a:	jne	0x62c8


0x629c:	mov	rdi, rbx
0x629f:	call	0x6300


0x62c8:	mov	rdi, rbx
0x62cb:	call	0x1a30


0x62d0:	xor	esi, esi
0x62d2:	mov	edx, 1
0x62d7:	mov	edi, eax
0x62d9:	call	0x1980


0x62de:	cmp	rax, -1
0x62e2:	jne	0x629c


0x62e4:	mov	rdi, rbx
0x62e7:	pop	rbx
0x62e8:	pop	rbp
0x62e9:	pop	r12
0x62eb:	jmp	0x18d0


0x6380:	cmp	rax, -1
0x6384:	je	0x6392


0x6392:	pop	rbx
0x6393:	pop	rbp
0x6394:	pop	r12
0x6396:	ret	


0x6386:	and	dword ptr [rbx], 0xffffffef
0x6389:	mov	qword ptr [rbx + 0x90], rax
0x6390:	xor	eax, eax
0x6392:	pop	rbx
0x6393:	pop	rbp
0x6394:	pop	r12
0x6396:	ret	


0x5fe6:	call	0x1ae0


0x1ae0:	jmp	qword ptr [rip + 0x209472]




0x5f77:	mov	rdi, rbx
0x5f7a:	mov	byte ptr [rbx + 0x20], 0
0x5f7e:	call	0x1910


0x5f83:	add	rax, rbx
0x5f86:	cmp	rbx, rax
0x5f89:	jae	0x5f91


0x5f8b:	cmp	byte ptr [rax - 1], 0x20
0x5f8f:	je	0x5fa0


0x5f91:	add	rsp, 8
0x5f95:	mov	rax, rbx
0x5f98:	pop	rbx
0x5f99:	pop	rbp
0x5f9a:	ret	


0x5fa0:	sub	rax, 1
0x5fa4:	mov	byte ptr [rax], 0
0x5fa7:	cmp	rbx, rax
0x5faa:	jne	0x5f8b


0x5fac:	jmp	0x5f91


0x21d2:	mov	rdi, qword ptr [rsp + 0x28]
0x21d7:	call	0x1810


0x21dc:	mov	rax, qword ptr [rsp + 0x48]
0x21e1:	xor	rax, qword ptr fs:[0x28]
0x21ea:	jne	0x22bd


0x21f0:	add	rsp, 0x58
0x21f4:	mov	rdi, rbp
0x21f7:	pop	rbx
0x21f8:	pop	rbp
0x21f9:	pop	r12
0x21fb:	pop	r13
0x21fd:	pop	r14
0x21ff:	pop	r15
0x2201:	jmp	0x1810


0x22bd:	call	0x1920


0x231e:	lea	rsi, [rbp + 0x28]
0x2322:	mov	rdi, rbx
0x2325:	mov	edx, 4
0x232a:	call	0x19b0


0x19b0:	jmp	qword ptr [rip + 0x20950a]




0x5df0:	call	0x1830


0x5b1a:	lea	rsi, [rip + 0x376c]
0x5b21:	mov	edx, 5
0x5b26:	xor	edi, edi
0x5b28:	call	0x18f0


0x5b2d:	lea	rcx, [rip + 0x30e4]
0x5b34:	lea	rdx, [rip + 0x2acf]
0x5b3b:	mov	rsi, rax
0x5b3e:	mov	edi, 1
0x5b43:	xor	eax, eax
0x5b45:	call	0x1ac0


0x5b4a:	mov	rbx, qword ptr [rip + 0x205557]
0x5b51:	lea	rsi, [rip + 0x3968]
0x5b58:	xor	edi, edi
0x5b5a:	mov	edx, 5
0x5b5f:	call	0x18f0


0x5b64:	mov	rsi, rbx
0x5b67:	mov	rdi, rax
0x5b6a:	pop	rbx
0x5b6b:	jmp	0x19d0


0x31cd:	mov	rbx, qword ptr [rip + 0x207ed4]
0x31d4:	lea	rsi, [rip + 0x55cd]
0x31db:	mov	edx, 5
0x31e0:	xor	edi, edi
0x31e2:	call	0x18f0


0x31e7:	mov	rsi, rbx
0x31ea:	mov	rdi, rax
0x31ed:	call	0x19d0


0x31f2:	mov	rbx, qword ptr [rip + 0x207eaf]
0x31f9:	lea	rsi, [rip + 0x55e8]
0x3200:	mov	edx, 5
0x3205:	xor	edi, edi
0x3207:	call	0x18f0


0x320c:	mov	rsi, rbx
0x320f:	mov	rdi, rax
0x3212:	call	0x19d0


0x3217:	mov	rbx, qword ptr [rip + 0x207e8a]
0x321e:	lea	rsi, [rip + 0x568b]
0x3225:	mov	edx, 5
0x322a:	xor	edi, edi
0x322c:	call	0x18f0


0x3231:	mov	rsi, rbx
0x3234:	mov	rdi, rax
0x3237:	call	0x19d0


0x323c:	mov	rbx, qword ptr [rip + 0x207e65]
0x3243:	lea	rsi, [rip + 0x569e]
0x324a:	mov	edx, 5
0x324f:	xor	edi, edi
0x3251:	call	0x18f0


0x3256:	mov	rsi, rbx
0x3259:	mov	rdi, rax
0x325c:	call	0x19d0


0x3261:	mov	rbx, qword ptr [rip + 0x207e40]
0x3268:	lea	rsi, [rip + 0x5739]
0x326f:	mov	edx, 5
0x3274:	xor	edi, edi
0x3276:	call	0x18f0


0x327b:	mov	rsi, rbx
0x327e:	mov	rdi, rax
0x3281:	call	0x19d0


0x3286:	mov	rbx, qword ptr [rip + 0x207e1b]
0x328d:	lea	rsi, [rip + 0x57f4]
0x3294:	mov	edx, 5
0x3299:	xor	edi, edi
0x329b:	call	0x18f0


0x32a0:	mov	rsi, rbx
0x32a3:	mov	rdi, rax
0x32a6:	call	0x19d0


0x32ab:	mov	rbx, qword ptr [rip + 0x207df6]
0x32b2:	lea	rsi, [rip + 0x5877]
0x32b9:	mov	edx, 5
0x32be:	xor	edi, edi
0x32c0:	call	0x18f0


0x32c5:	mov	rsi, rbx
0x32c8:	mov	rdi, rax
0x32cb:	call	0x19d0


0x32d0:	mov	rbx, qword ptr [rip + 0x207dd1]
0x32d7:	lea	rsi, [rip + 0x5882]
0x32de:	mov	edx, 5
0x32e3:	xor	edi, edi
0x32e5:	call	0x18f0


0x32ea:	mov	rsi, rbx
0x32ed:	mov	rdi, rax
0x32f0:	lea	rbx, [rip + 0x527d]
0x32f7:	call	0x19d0


0x32fc:	lea	rsi, [rip + 0x5895]
0x3303:	mov	edx, 5
0x3308:	xor	edi, edi
0x330a:	call	0x18f0


0x330f:	lea	rcx, [rip + 0x5262]
0x3316:	lea	rdx, [rip + 0x5269]
0x331d:	mov	rsi, rax
0x3320:	mov	edi, 1
0x3325:	xor	eax, eax
0x3327:	call	0x1ac0


0x332c:	lea	rax, [rip + 0x5261]
0x3333:	lea	rcx, [rip + 0x529b]
0x333a:	mov	qword ptr [rsp + 0x60], 0
0x3343:	mov	qword ptr [rsp + 0x68], 0
0x334c:	mov	rdx, rsp
0x334f:	mov	qword ptr [rsp], rax
0x3353:	lea	rax, [rip + 0x523c]
0x335a:	mov	qword ptr [rsp + 0x30], rcx
0x335f:	lea	rcx, [rip + 0x5279]
0x3366:	mov	qword ptr [rsp + 8], rax
0x336b:	lea	rax, [rip + 0x529c]
0x3372:	mov	qword ptr [rsp + 0x40], rcx
0x3377:	lea	rcx, [rip + 0x526b]
0x337e:	mov	qword ptr [rsp + 0x10], rax
0x3383:	lea	rax, [rip + 0x521c]
0x338a:	mov	qword ptr [rsp + 0x50], rcx
0x338f:	mov	qword ptr [rsp + 0x18], rax
0x3394:	lea	rax, [rip + 0x5221]
0x339b:	mov	qword ptr [rsp + 0x20], rax
0x33a0:	lea	rax, [rip + 0x521f]
0x33a7:	mov	qword ptr [rsp + 0x28], rax
0x33ac:	mov	qword ptr [rsp + 0x38], rax
0x33b1:	mov	qword ptr [rsp + 0x48], rax
0x33b6:	mov	qword ptr [rsp + 0x58], rax
0x33bb:	nop	dword ptr [rax + rax]
0x33c0:	add	rdx, 0x10
0x33c4:	mov	rdi, qword ptr [rdx]
0x33c7:	test	rdi, rdi
0x33ca:	je	0x33df


0x33df:	mov	r12, qword ptr [rdx + 8]
0x33e3:	xor	edi, edi
0x33e5:	mov	edx, 5
0x33ea:	lea	rsi, [rip + 0x5202]
0x33f1:	test	r12, r12
0x33f4:	je	0x34bb


0x33cc:	mov	ecx, 4
0x33d1:	mov	rsi, rbx
0x33d4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x34bb:	call	0x18f0


0x33fa:	call	0x18f0


0x33d4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x33d6:	seta	al
0x33d9:	sbb	al, 0
0x33db:	test	al, al
0x33dd:	jne	0x33c0


0x33c0:	add	rdx, 0x10
0x33c4:	mov	rdi, qword ptr [rdx]
0x33c7:	test	rdi, rdi
0x33ca:	je	0x33df


0x33ff:	lea	rcx, [rip + 0x5812]
0x3406:	lea	rdx, [rip + 0x51fd]
0x340d:	mov	rsi, rax
0x3410:	mov	edi, 1
0x3415:	xor	eax, eax
0x3417:	call	0x1ac0


0x341c:	xor	esi, esi
0x341e:	mov	edi, 5
0x3423:	call	0x1ab0


0x3428:	test	rax, rax
0x342b:	je	0x3449


0x3449:	lea	rsi, [rip + 0x51cc]
0x3450:	xor	edi, edi
0x3452:	mov	edx, 5
0x3457:	call	0x18f0


0x342d:	lea	rsi, [rip + 0x51e4]
0x3434:	mov	edx, 3
0x3439:	mov	rdi, rax
0x343c:	call	0x1860


0x1860:	jmp	qword ptr [rip + 0x2095b2]




0x345c:	lea	rcx, [rip + 0x5111]
0x3463:	lea	rdx, [rip + 0x57ae]
0x346a:	mov	rsi, rax
0x346d:	mov	edi, 1
0x3472:	xor	eax, eax
0x3474:	call	0x1ac0


0x3479:	cmp	r12, rbx
0x347c:	lea	rcx, [rip + 0x512d]
0x3483:	lea	rbx, [rip + 0x5dd7]
0x348a:	cmove	rbx, rcx
0x348e:	lea	rsi, [rip + 0x57f3]
0x3495:	xor	edi, edi
0x3497:	mov	edx, 5
0x349c:	call	0x18f0


0x34a1:	mov	rcx, rbx
0x34a4:	mov	rsi, rax
0x34a7:	mov	rdx, r12
0x34aa:	mov	edi, 1
0x34af:	xor	eax, eax
0x34b1:	call	0x1ac0


0x34b6:	jmp	0x31a6


0x34c0:	lea	rcx, [rip + 0x5751]
0x34c7:	lea	rdx, [rip + 0x513c]
0x34ce:	mov	rsi, rax
0x34d1:	mov	edi, 1
0x34d6:	xor	eax, eax
0x34d8:	call	0x1ac0


0x34dd:	xor	esi, esi
0x34df:	mov	edi, 5
0x34e4:	call	0x1ab0


0x34e9:	test	rax, rax
0x34ec:	je	0x3506


0x3506:	lea	rsi, [rip + 0x510f]
0x350d:	mov	edx, 5
0x3512:	xor	edi, edi
0x3514:	lea	r12, [rip + 0x5059]
0x351b:	lea	rbx, [rip + 0x508e]
0x3522:	call	0x18f0


0x34ee:	lea	rsi, [rip + 0x5123]
0x34f5:	mov	edx, 3
0x34fa:	mov	rdi, rax
0x34fd:	call	0x1860


0x3527:	lea	rcx, [rip + 0x5046]
0x352e:	lea	rdx, [rip + 0x56e3]
0x3535:	mov	rsi, rax
0x3538:	mov	edi, 1
0x353d:	xor	eax, eax
0x353f:	call	0x1ac0


0x3544:	jmp	0x348e


0x348e:	lea	rsi, [rip + 0x57f3]
0x3495:	xor	edi, edi
0x3497:	mov	edx, 5
0x349c:	call	0x18f0


0x55dc:	cmp	r12, 9
0x55e0:	ja	0x5920


0x55e6:	lea	rdx, [rip + 0x3f1b]
0x55ed:	movsxd	rax, dword ptr [rdx + r12*4]
0x55f1:	add	rax, rdx
0x55f4:	jmp	rax


0x5920:	mov	r10, qword ptr [rbx + 0x40]
0x5924:	mov	r9, qword ptr [rbx + 0x38]
0x5928:	mov	edx, 5
0x592d:	mov	rax, qword ptr [rbx + 0x10]
0x5931:	mov	r8, qword ptr [rbx + 8]
0x5935:	lea	rsi, [rip + 0x3b44]
0x593c:	mov	r13, qword ptr [rbx + 0x30]
0x5940:	mov	r12, qword ptr [rbx + 0x28]
0x5944:	mov	r15, qword ptr [rbx + 0x20]
0x5948:	mov	r14, qword ptr [rbx + 0x18]
0x594c:	mov	qword ptr [rsp + 0x18], r10
0x5951:	mov	qword ptr [rsp + 0x10], r9
0x5956:	mov	qword ptr [rsp], rax
0x595a:	mov	qword ptr [rsp + 8], r8
0x595f:	mov	rbx, qword ptr [rbx]
0x5962:	jmp	0x56f2


0x56f2:	xor	edi, edi
0x56f4:	call	0x18f0


0x56f9:	mov	r10, qword ptr [rsp + 0x18]
0x56fe:	push	r10
0x5700:	jmp	0x5644


0x5644:	mov	r9, qword ptr [rsp + 0x18]
0x5649:	mov	rdx, rax
0x564c:	mov	rcx, rbx
0x564f:	mov	esi, 1
0x5654:	mov	rdi, rbp
0x5657:	xor	eax, eax
0x5659:	push	r9
0x565b:	push	r13
0x565d:	push	r12
0x565f:	push	r15
0x5661:	push	r14
0x5663:	mov	r9, qword ptr [rsp + 0x30]
0x5668:	mov	r8, qword ptr [rsp + 0x38]
0x566d:	call	0x1b40


0x5672:	add	rsp, 0x30
0x5676:	add	rsp, 0x28
0x567a:	pop	rbx
0x567b:	pop	rbp
0x567c:	pop	r12
0x567e:	pop	r13
0x5680:	pop	r14
0x5682:	pop	r15
0x5684:	ret	


0x4dcd:	mov	dword ptr [rbp], r12d
0x4dd1:	pop	rbx
0x4dd2:	pop	rbp
0x4dd3:	pop	r12
0x4dd5:	ret	


0x4c8e:	mov	dword ptr [rip + 0x2063e3], r12d
0x4c95:	mov	eax, dword ptr [rbp + 4]
0x4c98:	shl	r15, 4
0x4c9c:	sub	rsp, 8
0x4ca0:	add	rbx, r15
0x4ca3:	lea	r15, [rbp + 8]
0x4ca7:	mov	r8d, dword ptr [rbp]
0x4cab:	mov	r11, qword ptr [rbx]
0x4cae:	mov	r12, qword ptr [rbx + 8]
0x4cb2:	mov	rcx, r14
0x4cb5:	or	eax, 1
0x4cb8:	mov	dword ptr [rsp + 0x24], eax
0x4cbc:	push	qword ptr [rbp + 0x30]
0x4cbf:	mov	r9d, eax
0x4cc2:	push	qword ptr [rbp + 0x28]
0x4cc5:	push	r15
0x4cc7:	mov	rsi, r11
0x4cca:	mov	rdx, qword ptr [rsp + 0x28]
0x4ccf:	mov	rdi, r12
0x4cd2:	mov	qword ptr [rsp + 0x30], r11
0x4cd7:	call	0x39b0


0x1c0b:	lea	rdi, [rip + 0x69fc]
0x1c12:	call	0x18b0


0x18b0:	jmp	qword ptr [rip + 0x20958a]




0x35da:	test	rax, rax
0x35dd:	mov	rbp, rax
0x35e0:	jne	0x35ed


0x35e2:	test	rbx, rbx
0x35e5:	je	0x35ed


0x35ed:	mov	rdi, r12
0x35f0:	call	0x1ba0


0x35e7:	mov	dword ptr [rbx], 0xfffffff6
0x35ed:	mov	rdi, r12
0x35f0:	call	0x1ba0


0x1ba0:	jmp	qword ptr [rip + 0x209412]




0x2461:	test	eax, eax
0x2463:	jne	0x2710


0x2469:	mov	eax, dword ptr [rsp + 0x48]
0x246d:	mov	r14, qword ptr [rsp + 0x78]
0x2472:	and	eax, 0x10
0x2475:	cmp	eax, 1
0x2478:	sbb	r13d, r13d
0x247b:	and	r13d, 2
0x247f:	add	r13d, 0x2b
0x2483:	test	r14, r14
0x2486:	jne	0x2618


0x2710:	mov	dword ptr [rsp + 0xc], 0x3f
0x2718:	jmp	0x2494


0x248c:	movsx	eax, r13b
0x2490:	mov	dword ptr [rsp + 0xc], eax
0x2494:	movzx	edx, byte ptr [rbx + 0x4c]
0x2498:	mov	dword ptr [rsp + 0xcd], 0x3f2020
0x24a3:	lea	r14, [rsp + 0xcd]
0x24ab:	test	dl, dl
0x24ad:	je	0x26a3


0x2618:	movabs	rax, 0x8000000000000000
0x2622:	cmp	qword ptr [rip + 0x2089e7], rax
0x2629:	je	0x2840


0x2494:	movzx	edx, byte ptr [rbx + 0x4c]
0x2498:	mov	dword ptr [rsp + 0xcd], 0x3f2020
0x24a3:	lea	r14, [rsp + 0xcd]
0x24ab:	test	dl, dl
0x24ad:	je	0x26a3


0x26a3:	cmp	qword ptr [rip + 0x208a85], 0
0x26ab:	mov	r12, qword ptr [rip + 0x208a76]
0x26b2:	je	0x2748


0x24b3:	lea	r12, [rsp + 0x110]
0x24bb:	lea	rax, [rbx + 0x4c]
0x24bf:	lea	rsi, [rbx + 0x14c]
0x24c6:	mov	rcx, r12
0x24c9:	jmp	0x24d7


0x2840:	lea	rdi, [rip + 0x2087c9]
0x2847:	call	0x1a20


0x262f:	cmp	r14, r12
0x2632:	jle	0x2650


0x2748:	mov	rdi, r12
0x274b:	mov	qword ptr [rip + 0x2089da], 1
0x2756:	call	0x1810


0x26b8:	mov	byte ptr [r12], 0
0x26bd:	lea	r13, [rip + 0x6b9d]
0x26c4:	jmp	0x25b9


0x24d7:	add	rax, 1
0x24db:	add	rcx, 1
0x24df:	mov	byte ptr [rcx - 1], dl
0x24e2:	cmp	rsi, rax
0x24e5:	ja	0x24d0


0x1a20:	jmp	qword ptr [rip + 0x2094d2]


0x2650:	lea	rsi, [rip + 0x5e77]
0x2657:	mov	edx, 5
0x265c:	xor	edi, edi
0x265e:	call	0x18f0


0x2634:	mov	rax, qword ptr [rip + 0x2089d5]
0x263b:	lea	rdx, [rax - 0x1517f]
0x2642:	cmp	r14, rdx
0x2645:	jl	0x2650


0x25b9:	mov	edi, dword ptr [rbx + 0x154]
0x25bf:	call	0x2340


0x24e7:	mov	byte ptr [rcx], 0
0x24ea:	mov	esi, 0x3a
0x24ef:	mov	rdi, r12
0x24f2:	call	0x1950


0x24d0:	movzx	edx, byte ptr [rax]
0x24d3:	test	dl, dl
0x24d5:	je	0x24e7




0x2647:	cmp	r14, rax
0x264a:	jle	0x2881


0x1950:	jmp	qword ptr [rip + 0x20953a]


0x2881:	mov	ecx, eax
0x2883:	sub	ecx, r14d
0x2886:	cmp	ecx, 0x3b
0x2889:	jle	0x2922




0x2922:	lea	r9, [rip + 0x5b57]
0x2929:	jmp	0x2666


0x288f:	cmp	ecx, 0x1517f
0x2895:	jg	0x2953


0x2666:	lea	r14, [rsp + 0xcd]
0x266e:	lea	rcx, [rip + 0x5e5f]
0x2675:	mov	edx, 7
0x267a:	xor	eax, eax
0x267c:	mov	r8d, 6
0x2682:	mov	esi, 1
0x2687:	mov	rdi, r14
0x268a:	call	0x1bb0


0x289b:	mov	eax, ecx
0x289d:	mov	edx, 0x91a2b3c5
0x28a2:	lea	rdi, [rip + 0x208878]
0x28a9:	imul	edx
0x28ab:	mov	eax, ecx
0x28ad:	mov	esi, 1
0x28b2:	sar	eax, 0x1f
0x28b5:	lea	r8d, [rdx + rcx]
0x28b9:	mov	edx, 0x88888889
0x28be:	sar	r8d, 0xb
0x28c2:	sub	r8d, eax
0x28c5:	imul	eax, r8d, 0xe10
0x28cc:	sub	ecx, eax
0x28ce:	mov	eax, ecx
0x28d0:	lea	rcx, [rip + 0x5bed]
0x28d7:	mul	edx
0x28d9:	xor	eax, eax
0x28db:	shr	edx, 5
0x28de:	mov	r9d, edx
0x28e1:	mov	edx, 6
0x28e6:	call	0x1bb0


0x2953:	lea	rcx, [rip + 0x6366]
0x295a:	lea	rsi, [rip + 0x5b29]
0x2961:	lea	rdi, [rip + 0x5b3e]
0x2968:	mov	edx, 0xcd
0x296d:	call	0x1990


0x1990:	jmp	qword ptr [rip + 0x20951a]




0x28eb:	lea	r9, [rip + 0x20882f]
0x28f2:	jmp	0x2666


0x268f:	movzx	edx, byte ptr [rbx + 0x4c]
0x2693:	movsx	eax, r13b
0x2697:	mov	dword ptr [rsp + 0xc], eax
0x269b:	test	dl, dl
0x269d:	jne	0x24b3


0x25c4:	push	r13
0x25c6:	push	r12
0x25c8:	lea	rsi, [rbx + 0x2c]
0x25cc:	push	rbp
0x25cd:	push	r14
0x25cf:	mov	r9, rax
0x25d2:	mov	edx, dword ptr [rsp + 0x2c]
0x25d6:	mov	r8, r15
0x25d9:	mov	ecx, 0x20
0x25de:	mov	edi, 0x20
0x25e3:	call	0x2050


0x2663:	mov	r9, rax
0x2666:	lea	r14, [rsp + 0xcd]
0x266e:	lea	rcx, [rip + 0x5e5f]
0x2675:	mov	edx, 7
0x267a:	xor	eax, eax
0x267c:	mov	r8d, 6
0x2682:	mov	esi, 1
0x2687:	mov	rdi, r14
0x268a:	call	0x1bb0


0x275b:	mov	edi, 1
0x2760:	call	0x5b70


0x2765:	mov	r12, rax
0x2768:	mov	qword ptr [rip + 0x2089b9], rax
0x276f:	jmp	0x26b8


0x2383:	lea	rax, [rip + 0x208d76]
0x238a:	mov	rdx, qword ptr [rsp + 8]
0x238f:	xor	rdx, qword ptr fs:[0x28]
0x2398:	jne	0x23b2


0x6337:	mov	rdi, rbx
0x633a:	pop	rbx
0x633b:	jmp	0x1a60


0x5ab6:	mov	rax, qword ptr [rsp + 0x78]
0x5abb:	xor	rax, qword ptr fs:[0x28]
0x5ac4:	jne	0x5ad0


0x5ac6:	add	rsp, 0xb8
0x5acd:	pop	rbx
0x5ace:	pop	rbp
0x5acf:	ret	


0x5ad0:	call	0x1920


0x59e0:	mov	rax, qword ptr [rsp + 0x58]
0x59e5:	xor	rax, qword ptr fs:[0x28]
0x59ee:	jne	0x59f5


0x59f0:	add	rsp, 0x68
0x59f4:	ret	


0x59f5:	call	0x1920


0x24f7:	test	rax, rax
0x24fa:	je	0x2778


0x2778:	cmp	byte ptr [rsp + 0x110], 0
0x2780:	je	0x278f


0x2500:	mov	byte ptr [rax], 0
0x2503:	cmp	byte ptr [rsp + 0x110], 0
0x250b:	lea	rsi, [rax + 1]
0x250f:	mov	r13, r12
0x2512:	mov	qword ptr [rsp + 0x10], rsi
0x2517:	jne	0x2720


0x278f:	mov	rax, r12
0x2792:	mov	ecx, dword ptr [rax]
0x2794:	add	rax, 4
0x2798:	lea	edx, [rcx - 0x1010101]
0x279e:	not	ecx
0x27a0:	and	edx, ecx
0x27a2:	and	edx, 0x80808080
0x27a8:	je	0x2792


0x2782:	cmp	byte ptr [rip + 0x2089cd], 0
0x2789:	jne	0x28f7


0x251d:	mov	rdi, r13
0x2520:	call	0x1910


0x2720:	cmp	byte ptr [rip + 0x208a2f], 0
0x2727:	je	0x251d


0x2792:	mov	ecx, dword ptr [rax]
0x2794:	add	rax, 4
0x2798:	lea	edx, [rcx - 0x1010101]
0x279e:	not	ecx
0x27a0:	and	edx, ecx
0x27a2:	and	edx, 0x80808080
0x27a8:	je	0x2792


0x27aa:	mov	ecx, edx
0x27ac:	mov	r10, qword ptr [rip + 0x208975]
0x27b3:	mov	r13, r12
0x27b6:	shr	ecx, 0x10
0x27b9:	test	edx, 0x8080
0x27bf:	cmove	edx, ecx
0x27c2:	lea	rcx, [rax + 2]
0x27c6:	mov	esi, edx
0x27c8:	cmove	rax, rcx
0x27cc:	add	sil, dl
0x27cf:	mov	rcx, qword ptr [rip + 0x20895a]
0x27d6:	sbb	rax, 3
0x27da:	sub	rax, r12
0x27dd:	add	rax, 3
0x27e1:	cmp	rax, rcx
0x27e4:	ja	0x2851


0x28f7:	mov	rdi, r12
0x28fa:	call	0x3630


0x272d:	mov	rdi, r12
0x2730:	call	0x3630


0x27e6:	lea	rcx, [rip + 0x5cf4]
0x27ed:	mov	r8, r13
0x27f0:	mov	rdx, -1
0x27f7:	mov	esi, 1
0x27fc:	mov	rdi, r10
0x27ff:	xor	eax, eax
0x2801:	call	0x1bb0


0x2851:	mov	rdi, r10
0x2854:	mov	qword ptr [rip + 0x2088d5], rax
0x285b:	mov	qword ptr [rsp + 0x10], rax
0x2860:	call	0x1810


0x2865:	mov	rax, qword ptr [rsp + 0x10]
0x286a:	mov	rdi, rax
0x286d:	call	0x5b70


0x2872:	mov	r10, rax
0x2875:	mov	qword ptr [rip + 0x2088ac], rax
0x287c:	jmp	0x27e6


0x2806:	jmp	0x2597


0x2597:	cmp	r13, r12
0x259a:	je	0x25a4


0x25a4:	mov	r12, qword ptr [rip + 0x208b7d]
0x25ab:	lea	r13, [rip + 0x6caf]
0x25b2:	test	r12, r12
0x25b5:	cmove	r12, r13
0x25b9:	mov	edi, dword ptr [rbx + 0x154]
0x25bf:	call	0x2340


0x259c:	mov	rdi, r13
0x259f:	call	0x1810


0x2525:	mov	rdi, qword ptr [rsp + 0x10]
0x252a:	mov	qword ptr [rsp + 0x28], rax
0x252f:	mov	rcx, qword ptr [rip + 0x208bfa]
0x2536:	mov	r10, qword ptr [rip + 0x208beb]
0x253d:	test	rdi, rdi
0x2540:	je	0x27dd


0x27dd:	add	rax, 3
0x27e1:	cmp	rax, rcx
0x27e4:	ja	0x2851


0x2546:	mov	qword ptr [rsp + 0x20], r10
0x254b:	mov	qword ptr [rsp + 0x18], rcx
0x2550:	call	0x1910


0x2555:	mov	rdx, qword ptr [rsp + 0x28]
0x255a:	mov	rcx, qword ptr [rsp + 0x18]
0x255f:	mov	r10, qword ptr [rsp + 0x20]
0x2564:	lea	rax, [rdx + rax + 4]
0x2569:	cmp	rax, rcx
0x256c:	ja	0x2810


0x2572:	mov	r9, qword ptr [rsp + 0x10]
0x2577:	lea	rcx, [rip + 0x5f5b]
0x257e:	mov	r8, r13
0x2581:	mov	rdx, -1
0x2588:	mov	esi, 1
0x258d:	mov	rdi, r10
0x2590:	xor	eax, eax
0x2592:	call	0x1bb0


0x2810:	mov	rdi, r10
0x2813:	mov	qword ptr [rip + 0x208916], rax
0x281a:	mov	qword ptr [rsp + 0x18], rax
0x281f:	call	0x1810


0x2824:	mov	rax, qword ptr [rsp + 0x18]
0x2829:	mov	rdi, rax
0x282c:	call	0x5b70


0x2831:	mov	r10, rax
0x2834:	mov	qword ptr [rip + 0x2088ed], rax
0x283b:	jmp	0x2572


0x284c:	jmp	0x262f


0x1c17:	lea	rdi, [rip + 0x1a52]
0x1c1e:	call	0x8430


0x1930:	jmp	qword ptr [rip + 0x20954a]




0x3502:	test	eax, eax
0x3504:	jne	0x3549


0x3549:	lea	r12, [rip + 0x5024]
0x3550:	mov	r13, qword ptr [rip + 0x207b51]
0x3557:	lea	rsi, [rip + 0x56e2]
0x355e:	xor	edi, edi
0x3560:	mov	edx, 5
0x3565:	call	0x18f0


0x356a:	mov	rsi, r13
0x356d:	mov	rdi, rax
0x3570:	call	0x19d0


0x3575:	jmp	0x3449


0x3441:	test	eax, eax
0x3443:	jne	0x3550


0x3550:	mov	r13, qword ptr [rip + 0x207b51]
0x3557:	lea	rsi, [rip + 0x56e2]
0x355e:	xor	edi, edi
0x3560:	mov	edx, 5
0x3565:	call	0x18f0


0x232f:	add	rsp, 8
0x2333:	pop	rbx
0x2334:	pop	rbp
0x2335:	ret	


0x5feb:	test	rax, rax
0x5fee:	mov	r15, rax
0x5ff1:	je	0x6061


0x6061:	call	0x18c0


0x5ff3:	cmp	word ptr [r15], 7
0x5ff8:	jne	0x6005


0x18c0:	jmp	qword ptr [rip + 0x209582]


0x5ffa:	cmp	byte ptr [r15 + 0x2c], 0
0x5fff:	jne	0x6090


0x6005:	test	r12d, r12d
0x6008:	jne	0x5fe6




0x6090:	mov	edi, dword ptr [r15 + 4]
0x6094:	test	edi, edi
0x6096:	jle	0x600a


0x600a:	cmp	rbp, rbx
0x600d:	je	0x60d0


0x609c:	test	r13b, r13b
0x609f:	je	0x600a


0x60d0:	test	r14, r14
0x60d3:	je	0x6108


0x6013:	lea	rax, [rbx + rbx*2]
0x6017:	mov	rdx, qword ptr [r15]
0x601a:	mov	rsi, r15
0x601d:	add	rbx, 1
0x6021:	shl	rax, 7
0x6025:	add	rax, r14
0x6028:	mov	qword ptr [rax], rdx
0x602b:	lea	rdi, [rax + 8]
0x602f:	mov	rdx, qword ptr [r15 + 0x178]
0x6036:	and	rdi, 0xfffffffffffffff8
0x603a:	mov	qword ptr [rax + 0x178], rdx
0x6041:	sub	rax, rdi
0x6044:	sub	rsi, rax
0x6047:	add	eax, 0x180
0x604c:	shr	eax, 3
0x604f:	mov	ecx, eax
0x6051:	rep movsq	qword ptr [rdi], qword ptr [rsi]


0x60a5:	xor	esi, esi
0x60a7:	call	0x1a10


0x6108:	test	rbp, rbp
0x610b:	mov	eax, 1
0x6110:	mov	edx, 0x180
0x6115:	cmove	rbp, rax
0x6119:	mov	rax, rdx
0x611c:	xor	esi, esi
0x611e:	mul	rbp
0x6121:	jo	0x6132


0x60d5:	movabs	rax, 0x38e38e38e38e37
0x60df:	cmp	rbp, rax
0x60e2:	ja	0x612d


0x6054:	call	0x1ae0


0x6051:	rep movsq	qword ptr [rdi], qword ptr [rsi]


0x1a10:	jmp	qword ptr [rip + 0x2094da]


0x6132:	mov	esi, 1
0x6137:	jmp	0x6123


0x6123:	test	rax, rax
0x6126:	js	0x612d


0x60e4:	mov	rax, rbp
0x60e7:	shr	rax, 1
0x60ea:	lea	rbp, [rbp + rax + 1]
0x60ef:	lea	rsi, [rbp + rbp*2]
0x60f4:	mov	rdi, r14
0x60f7:	shl	rsi, 7
0x60fb:	call	0x5bd0


0x612d:	call	0x5dc0




0x6128:	test	rsi, rsi
0x612b:	je	0x60ef


0x60ef:	lea	rsi, [rbp + rbp*2]
0x60f4:	mov	rdi, r14
0x60f7:	shl	rsi, 7
0x60fb:	call	0x5bd0


0x6100:	mov	r14, rax
0x6103:	jmp	0x6013


0x6059:	test	rax, rax
0x605c:	mov	r15, rax
0x605f:	jne	0x5ff3


0x62a4:	test	eax, eax
0x62a6:	je	0x62e4


0x62a8:	call	0x1840


0x62ad:	mov	r12d, dword ptr [rax]
0x62b0:	mov	rdi, rbx
0x62b3:	mov	rbp, rax
0x62b6:	call	0x18d0


0x62bb:	test	r12d, r12d
0x62be:	jne	0x62f0


0x62c0:	pop	rbx
0x62c1:	pop	rbp
0x62c2:	pop	r12
0x62c4:	ret	


0x62f0:	mov	dword ptr [rbp], r12d
0x62f4:	mov	eax, 0xffffffff
0x62f9:	jmp	0x62c0


0x61da:	and	ebx, 0x20
0x61dd:	test	ebx, ebx
0x61df:	jne	0x61f8


0x61e1:	test	eax, eax
0x61e3:	je	0x61ef


0x61f8:	test	eax, eax
0x61fa:	jne	0x6218


0x61ef:	pop	rbx
0x61f0:	pop	rbp
0x61f1:	pop	r12
0x61f3:	ret	


0x61e5:	test	r12, r12
0x61e8:	mov	eax, 0xffffffff
0x61ed:	je	0x6228


0x61fc:	call	0x1840


0x6218:	pop	rbx
0x6219:	mov	eax, 0xffffffff
0x621e:	pop	rbp
0x621f:	pop	r12
0x6221:	ret	


0x6228:	call	0x1840


0x622d:	cmp	dword ptr [rax], 9
0x6230:	pop	rbx
0x6231:	pop	rbp
0x6232:	pop	r12
0x6234:	setne	al
0x6237:	movzx	eax, al
0x623a:	neg	eax
0x623c:	ret	


0x6201:	mov	dword ptr [rax], 0
0x6207:	mov	eax, 0xffffffff
0x620c:	pop	rbx
0x620d:	pop	rbp
0x620e:	pop	r12
0x6210:	ret	


0x3682:	test	eax, eax
0x3684:	je	0x369c


0x369c:	mov	rdi, qword ptr [rip + 0x207a1d]
0x36a3:	call	0x61c0


0x3686:	call	0x1840


0x368b:	cmp	byte ptr [rip + 0x207b06], 0
0x3692:	mov	rbx, rax
0x3695:	je	0x36b3


0x36b3:	lea	rsi, [rip + 0x5617]
0x36ba:	xor	edi, edi
0x36bc:	mov	edx, 5
0x36c1:	call	0x18f0


0x3697:	cmp	dword ptr [rax], 0x20
0x369a:	jne	0x36b3


0x36c6:	mov	rdi, qword ptr [rip + 0x207ad3]
0x36cd:	mov	rbp, rax
0x36d0:	test	rdi, rdi
0x36d3:	je	0x36fd


0x36fd:	mov	esi, dword ptr [rbx]
0x36ff:	lea	rdx, [rip + 0x55db]
0x3706:	mov	rcx, rax
0x3709:	xor	edi, edi
0x370b:	xor	eax, eax
0x370d:	call	0x1af0


0x36d5:	call	0x5330


0x3712:	jmp	0x36f2


0x36f2:	mov	edi, dword ptr [rip + 0x207930]
0x36f8:	call	0x1870


0x1870:	jmp	qword ptr [rip + 0x2095aa]




0x36a8:	test	eax, eax
0x36aa:	jne	0x36f2


0x36ac:	add	rsp, 8
0x36b0:	pop	rbx
0x36b1:	pop	rbp
0x36b2:	ret	


0x60ac:	test	eax, eax
0x60ae:	jns	0x600a


0x60b4:	call	0x1840


0x60b9:	cmp	dword ptr [rax], 3
0x60bc:	je	0x5fe6


0x60c2:	cmp	rbp, rbx
0x60c5:	jne	0x6013


0x6066:	mov	rax, qword ptr [rsp]
0x606a:	mov	qword ptr [rax], rbx
0x606d:	mov	rax, qword ptr [rsp + 8]
0x6072:	mov	qword ptr [rax], r14
0x6075:	add	rsp, 0x18
0x6079:	xor	eax, eax
0x607b:	pop	rbx
0x607c:	pop	rbp
0x607d:	pop	r12
0x607f:	pop	r13
0x6081:	pop	r14
0x6083:	pop	r15
0x6085:	ret	


0x1c43:	cmp	eax, -1
0x1c46:	je	0x1e55


0x1e55:	test	r12b, r12b
0x1e58:	je	0x1e68


0x1c4c:	cmp	eax, 0x6d
0x1c4f:	je	0x1d82


0x1e68:	cmp	byte ptr [rip + 0x2092e1], 0
0x1e6f:	je	0x1e78


0x1e5a:	mov	byte ptr [rip + 0x2092e8], 1
0x1e61:	mov	byte ptr [rip + 0x2092ec], 1
0x1e68:	cmp	byte ptr [rip + 0x2092e1], 0
0x1e6f:	je	0x1e78


0x1d82:	mov	byte ptr [rip + 0x2093bf], 1
0x1d89:	jmp	0x1c28


0x1c55:	jle	0x1c90


0x1e78:	mov	edi, 2
0x1e7d:	call	0x3720


0x1e71:	mov	byte ptr [rip + 0x2092dc], 0
0x1e78:	mov	edi, 2
0x1e7d:	call	0x3720


0x1c28:	lea	rcx, [rip + 0x208d11]
0x1c2f:	lea	rdx, [rip + 0x6a48]
0x1c36:	xor	r8d, r8d
0x1c39:	mov	rsi, rbp
0x1c3c:	mov	edi, ebx
0x1c3e:	call	0x1930


0x1c90:	cmp	eax, 0x54
0x1c93:	je	0x1d8e


0x1c57:	cmp	eax, 0x73
0x1c5a:	je	0x1d67


0x1d8e:	mov	byte ptr [rip + 0x2093bc], 1
0x1d95:	jmp	0x1c28


0x1c99:	jle	0x1cf8


0x1d67:	mov	byte ptr [rip + 0x2093e6], 1
0x1d6e:	jmp	0x1c28


0x1c60:	jle	0x1cd0


0x1cf8:	cmp	eax, 0xffffff7e
0x1cfd:	je	0x1f01


0x1c9b:	cmp	eax, 0x62
0x1c9e:	je	0x1d73


0x1cd0:	cmp	eax, 0x71
0x1cd3:	je	0x1e49


0x1c62:	cmp	eax, 0x75
0x1c65:	je	0x1da9


0x1f01:	xor	edi, edi
0x1f03:	call	0x3150


0x1d03:	cmp	eax, 0x48
0x1d06:	je	0x1d5b


0x1d73:	mov	byte ptr [rip + 0x2093d5], 1
0x1d7a:	xor	r12d, r12d
0x1d7d:	jmp	0x1c28


0x1ca4:	jle	0x1ddc


0x1e49:	mov	byte ptr [rip + 0x209305], 1
0x1e50:	jmp	0x1c28


0x1cd9:	jg	0x1e33


0x1da9:	mov	byte ptr [rip + 0x209399], 1
0x1db0:	mov	byte ptr [rip + 0x20939c], 1
0x1db7:	xor	r12d, r12d
0x1dba:	jmp	0x1c28


0x1c6b:	jl	0x1d9a


0x1d5b:	mov	byte ptr [rip + 0x2093f0], 1
0x1d62:	jmp	0x1c28


0x1d08:	cmp	eax, 0xffffff7d
0x1d0d:	je	0x1d19


0x1ddc:	cmp	eax, 0x61
0x1ddf:	jne	0x1d0f


0x1caa:	cmp	eax, 0x64
0x1cad:	je	0x1dbf


0x1cdf:	cmp	eax, 0x70
0x1ce2:	jne	0x1d0f


0x1e33:	mov	byte ptr [rip + 0x209310], 1
0x1e3a:	mov	byte ptr [rip + 0x209312], 1
0x1e41:	xor	r12d, r12d
0x1e44:	jmp	0x1c28


0x1d9a:	mov	byte ptr [rip + 0x2093aa], 1
0x1da1:	xor	r12d, r12d
0x1da4:	jmp	0x1c28


0x1c71:	cmp	eax, 0x77
0x1c74:	je	0x1d8e


0x1d19:	lea	rax, [rip + 0x6950]
0x1d20:	mov	rdi, qword ptr [rip + 0x209381]
0x1d27:	mov	rcx, qword ptr [rip + 0x2092f2]
0x1d2e:	push	0
0x1d30:	lea	r9, [rip + 0x6918]
0x1d37:	lea	r8, [rip + 0x6921]
0x1d3e:	push	rax
0x1d3f:	lea	rdx, [rip + 0x68c4]
0x1d46:	lea	rsi, [rip + 0x6827]
0x1d4d:	xor	eax, eax
0x1d4f:	call	0x5a10


0x1d0f:	mov	edi, 1
0x1d14:	call	0x3150


0x1de5:	mov	byte ptr [rip + 0x209363], 1
0x1dec:	mov	byte ptr [rip + 0x20935b], 1
0x1df3:	xor	r12d, r12d
0x1df6:	mov	byte ptr [rip + 0x209350], 1
0x1dfd:	mov	byte ptr [rip + 0x209348], 1
0x1e04:	mov	byte ptr [rip + 0x20933f], 1
0x1e0b:	mov	byte ptr [rip + 0x209339], 1
0x1e12:	mov	byte ptr [rip + 0x209330], 1
0x1e19:	mov	byte ptr [rip + 0x209331], 1
0x1e20:	mov	byte ptr [rip + 0x20932c], 1
0x1e27:	mov	byte ptr [rip + 0x209322], 1
0x1e2e:	jmp	0x1c28


0x1dbf:	mov	byte ptr [rip + 0x209388], 1
0x1dc6:	mov	byte ptr [rip + 0x209386], 1
0x1dcd:	xor	r12d, r12d
0x1dd0:	mov	byte ptr [rip + 0x209379], 1
0x1dd7:	jmp	0x1c28


0x1cb3:	cmp	eax, 0x6c
0x1cb6:	jne	0x1d0f


0x1ce4:	mov	byte ptr [rip + 0x209461], 1
0x1ceb:	xor	r12d, r12d
0x1cee:	jmp	0x1c28


0x1c7a:	add	eax, -0x80
0x1c7d:	jne	0x1d0f


0x1cb8:	mov	byte ptr [rip + 0x20948e], 1
0x1cbf:	mov	byte ptr [rip + 0x20948d], 1
0x1cc6:	xor	r12d, r12d
0x1cc9:	jmp	0x1c28


0x1c83:	mov	byte ptr [rip + 0x2094cc], 1
0x1c8a:	jmp	0x1c28


0x1d54:	xor	edi, edi
0x1d56:	call	0x1b20


0x1e82:	test	al, al
0x1e84:	jne	0x1ecb


0x1e86:	lea	rax, [rip + 0x680f]
0x1e8d:	mov	dword ptr [rip + 0x2092a1], 0xc
0x1e97:	mov	qword ptr [rip + 0x2092a2], rax
0x1e9e:	movsxd	rax, dword ptr [rip + 0x20920b]
0x1ea5:	sub	ebx, eax
0x1ea7:	cmp	ebx, 1
0x1eaa:	je	0x1ef3


0x1ecb:	lea	rax, [rip + 0x67bb]
0x1ed2:	mov	dword ptr [rip + 0x20925c], 0x10
0x1edc:	mov	qword ptr [rip + 0x20925d], rax
0x1ee3:	jmp	0x1e9e


0x1ef3:	mov	rdi, qword ptr [rbp + rax*8]
0x1ef8:	xor	esi, esi
0x1efa:	call	0x2980


0x1eac:	jg	0x1ee5


0x1e9e:	movsxd	rax, dword ptr [rip + 0x20920b]
0x1ea5:	sub	ebx, eax
0x1ea7:	cmp	ebx, 1
0x1eaa:	je	0x1ef3


0x1eae:	add	ebx, 1
0x1eb1:	jl	0x1f08


0x1ee5:	cmp	ebx, 2
0x1ee8:	jne	0x1f08


0x1f08:	mov	rdi, qword ptr [rbp + rax*8 + 0x10]
0x1f0d:	call	0x5530


0x1eb3:	lea	rdi, [rip + 0x66cc]
0x1eba:	mov	esi, 1
0x1ebf:	call	0x2980


0x1eea:	mov	byte ptr [rip + 0x209257], 1
0x1ef1:	jmp	0x1eb3


0x2735:	mov	r13, rax
0x2738:	test	rax, rax
0x273b:	cmove	r13, r12
0x273f:	jmp	0x251d


0x28ff:	test	rax, rax
0x2902:	mov	r13, rax
0x2905:	je	0x292e


0x292e:	mov	rax, r12
0x2931:	mov	ecx, dword ptr [rax]
0x2933:	add	rax, 4
0x2937:	lea	edx, [rcx - 0x1010101]
0x293d:	not	ecx
0x293f:	and	edx, ecx
0x2941:	and	edx, 0x80808080
0x2947:	je	0x2931


0x2907:	mov	rdi, rax
0x290a:	call	0x1910


0x2931:	mov	ecx, dword ptr [rax]
0x2933:	add	rax, 4
0x2937:	lea	edx, [rcx - 0x1010101]
0x293d:	not	ecx
0x293f:	and	edx, ecx
0x2941:	and	edx, 0x80808080
0x2947:	je	0x2931


0x2949:	jmp	0x27aa


0x290f:	mov	rcx, qword ptr [rip + 0x20881a]
0x2916:	mov	r10, qword ptr [rip + 0x20880b]
0x291d:	jmp	0x27dd


0x29b2:	test	eax, eax
0x29b4:	jne	0x3116


0x29ba:	cmp	byte ptr [rip + 0x208794], 0
0x29c1:	mov	r15, qword ptr [rsp + 0x30]
0x29c6:	mov	r13, qword ptr [rsp + 0x28]
0x29cb:	jne	0x2b2e


0x3116:	mov	rdx, rbx
0x3119:	mov	esi, 3
0x311e:	xor	edi, edi
0x3120:	call	0x5360


0x29d1:	cmp	byte ptr [rip + 0x20877a], 0
0x29d8:	jne	0x2d05


0x2b2e:	xor	ebp, ebp
0x2b30:	test	r13, r13
0x2b33:	lea	rbx, [r13 - 1]
0x2b37:	je	0x2b6f


0x29de:	cmp	byte ptr [rip + 0x208763], 0
0x29e5:	jne	0x2ccd


0x2d05:	lea	rsi, [rip + 0x57ed]
0x2d0c:	mov	edx, 5
0x2d11:	xor	edi, edi
0x2d13:	call	0x18f0


0x2b6f:	lea	rsi, [rip + 0x5975]
0x2b76:	xor	edi, edi
0x2b78:	mov	edx, 5
0x2b7d:	call	0x18f0


0x2b39:	lea	r12, [rip + 0x6721]
0x2b40:	lea	r14, [rip + 0x593d]
0x2b47:	nop	word ptr [rax + rax]
0x2b50:	cmp	byte ptr [r15 + 0x2c], 0
0x2b55:	je	0x2b5e


0x29eb:	movabs	rax, 0x8000000000000000
0x29f5:	test	r13, r13
0x29f8:	lea	r12, [r13 - 1]
0x29fc:	mov	qword ptr [rsp], rax
0x2a00:	je	0x2b01


0x2ccd:	xor	edi, edi
0x2ccf:	call	0x1a90


0x2b5e:	sub	rbx, 1
0x2b62:	add	r15, 0x180
0x2b69:	cmp	rbx, -1
0x2b6d:	jne	0x2b50


0x2b57:	cmp	word ptr [r15], 7
0x2b5c:	je	0x2b99


0x2b01:	mov	rdi, qword ptr [rsp + 0x30]
0x2b06:	call	0x1810


0x2a06:	lea	rax, [rsp + 0x3c]
0x2a0b:	lea	rbx, [rip + 0x684f]
0x2a12:	mov	r14, r12
0x2a15:	mov	r12, r15
0x2a18:	mov	qword ptr [rsp + 8], rax
0x2a1d:	nop	dword ptr [rax]
0x2a20:	cmp	byte ptr [rip + 0x208721], 0
0x2a27:	je	0x2a43


0x1a90:	jmp	qword ptr [rip + 0x20949a]


0x2b50:	cmp	byte ptr [r15 + 0x2c], 0
0x2b55:	je	0x2b5e


0x2b99:	mov	rdi, r15
0x2b9c:	add	rbp, 1
0x2ba0:	call	0x5f50


0x2a43:	cmp	byte ptr [rip + 0x2086ff], 0
0x2a4a:	movzx	eax, word ptr [r12]
0x2a4f:	je	0x2a63


0x2a29:	lea	rsi, [r12 + 8]
0x2a2e:	mov	edx, 0x20
0x2a33:	mov	rdi, rbp
0x2a36:	call	0x1860




0x2a63:	cmp	byte ptr [rip + 0x2086e0], 0
0x2a6a:	je	0x2a76


0x2a51:	cmp	byte ptr [r12 + 0x2c], 0
0x2a57:	je	0x2a63


0x2a76:	cmp	byte ptr [rip + 0x2086d2], 0
0x2a7d:	je	0x2a89


0x2a6c:	cmp	ax, 1
0x2a70:	je	0x2bce


0x2a59:	cmp	ax, 7
0x2a5d:	je	0x3020


0x2a89:	cmp	byte ptr [rip + 0x2086bb], 0
0x2a90:	je	0x2a9c


0x2a7f:	cmp	ax, 2
0x2a83:	je	0x2dd2


0x2bce:	mov	eax, dword ptr [r12 + 4]
0x2bd3:	mov	ecx, 0x100
0x2bd8:	cdq	
0x2bd9:	idiv	ecx
0x2bdb:	cmp	qword ptr [rip + 0x20850d], 0
0x2be3:	mov	r15d, edx
0x2be6:	mov	r13d, eax
0x2be9:	je	0x3031


0x3020:	mov	rsi, qword ptr [rsp]
0x3024:	mov	rdi, r12
0x3027:	call	0x23c0


0x2a9c:	cmp	byte ptr [rip + 0x2086a9], 0
0x2aa3:	je	0x2aaf


0x2a92:	cmp	ax, 3
0x2a96:	je	0x2e1e


0x2dd2:	mov	edi, dword ptr [r12 + 0x154]
0x2dda:	call	0x2340


0x3031:	lea	rsi, [rip + 0x54ec]
0x3038:	mov	edx, 5
0x303d:	xor	edi, edi
0x303f:	call	0x18f0


0x2bef:	lea	rsi, [rip + 0x592e]
0x2bf6:	xor	edi, edi
0x2bf8:	mov	edx, 5
0x2bfd:	call	0x18f0


0x2aaf:	cmp	byte ptr [rip + 0x208697], 0
0x2ab6:	je	0x2ac2


0x2aa5:	cmp	ax, 5
0x2aa9:	je	0x2e3c


0x2e1e:	mov	edi, dword ptr [r12 + 0x154]
0x2e26:	call	0x2340


0x2ac2:	cmp	byte ptr [rip + 0x208685], 0
0x2ac9:	je	0x2ad8


0x2ab8:	cmp	ax, 6
0x2abc:	je	0x2eb1


0x2e3c:	mov	rdi, r12
0x2e3f:	call	0x22d0


0x2ad8:	cmp	word ptr [r12], 2
0x2ade:	jne	0x2aec


0x2acb:	cmp	ax, 8
0x2acf:	je	0x2f23


0x2eb1:	mov	rdi, r12
0x2eb4:	call	0x22d0


0x2ae0:	movsxd	rax, dword ptr [r12 + 0x154]
0x2ae8:	mov	qword ptr [rsp], rax
0x2aec:	sub	r14, 1
0x2af0:	add	r12, 0x180
0x2af7:	cmp	r14, -1
0x2afb:	jne	0x2a20


0x2aec:	sub	r14, 1
0x2af0:	add	r12, 0x180
0x2af7:	cmp	r14, -1
0x2afb:	jne	0x2a20


0x2f23:	mov	rdi, r12
0x2f26:	call	0x22d0


0x2a20:	cmp	byte ptr [rip + 0x208721], 0
0x2a27:	je	0x2a43


0x2f2b:	movsxd	r8, dword ptr [r12 + 4]
0x2f30:	mov	rdi, qword ptr [rsp + 8]
0x2f35:	lea	rcx, [rip + 0x554a]
0x2f3c:	mov	r13, rax
0x2f3f:	mov	edx, 0xc
0x2f44:	xor	eax, eax
0x2f46:	mov	esi, 1
0x2f4b:	call	0x1bb0


0x2f50:	cmp	qword ptr [rip + 0x208188], 0
0x2f58:	je	0x309f


0x309f:	lea	rsi, [rip + 0x54b8]
0x30a6:	mov	edx, 5
0x30ab:	xor	edi, edi
0x30ad:	xor	r15d, r15d
0x30b0:	call	0x18f0


0x2f5e:	movsx	r9d, word ptr [r12 + 0x14e]
0x2f67:	lea	rsi, [rip + 0x55f6]
0x2f6e:	xor	edi, edi
0x2f70:	mov	edx, 5
0x2f75:	mov	dword ptr [rsp + 0x18], r9d
0x2f7a:	call	0x18f0


0x2eb9:	movsxd	r8, dword ptr [r12 + 4]
0x2ebe:	mov	rdi, qword ptr [rsp + 8]
0x2ec3:	lea	rcx, [rip + 0x55bc]
0x2eca:	mov	edx, 0xc
0x2ecf:	mov	esi, 1
0x2ed4:	mov	r13, rax
0x2ed7:	xor	eax, eax
0x2ed9:	call	0x1bb0


0x2ede:	mov	edi, dword ptr [r12 + 0x154]
0x2ee6:	call	0x2340


0x2e44:	mov	r15, qword ptr [rsp + 8]
0x2e49:	movsxd	r8, dword ptr [r12 + 4]
0x2e4e:	lea	rcx, [rip + 0x5631]
0x2e55:	mov	edx, 0xc
0x2e5a:	mov	esi, 1
0x2e5f:	mov	r13, rax
0x2e62:	xor	eax, eax
0x2e64:	mov	rdi, r15
0x2e67:	call	0x1bb0


0x2e6c:	mov	edi, dword ptr [r12 + 0x154]
0x2e74:	call	0x2340


0x2e79:	push	rbx
0x2e7a:	lea	r8, [r12 + 8]
0x2e7f:	push	r13
0x2e81:	lea	rsi, [rip + 0x63d9]
0x2e88:	push	r15
0x2e8a:	push	rbx
0x2e8b:	mov	r9, rax
0x2e8e:	mov	ecx, 0x20
0x2e93:	mov	edx, 0x20
0x2e98:	or	edi, 0xffffffff
0x2e9b:	call	0x2050


0x2eeb:	lea	rsi, [rip + 0x5666]
0x2ef2:	mov	r15, rax
0x2ef5:	mov	edx, 5
0x2efa:	xor	edi, edi
0x2efc:	call	0x18f0


0x2e2b:	mov	edx, 5
0x2e30:	mov	r13, rax
0x2e33:	lea	rsi, [rip + 0x5711]
0x2e3a:	jmp	0x2dee


0x2dee:	xor	edi, edi
0x2df0:	call	0x18f0


0x2ddf:	lea	rsi, [rip + 0x5759]
0x2de6:	mov	r13, rax
0x2de9:	mov	edx, 5
0x2dee:	xor	edi, edi
0x2df0:	call	0x18f0


0x2a3b:	test	eax, eax
0x2a3d:	jne	0x2ad8


0x2ba5:	lea	rsi, [rip + 0x593a]
0x2bac:	mov	rcx, rax
0x2baf:	mov	rdx, r12
0x2bb2:	mov	r13, rax
0x2bb5:	mov	edi, 1
0x2bba:	xor	eax, eax
0x2bbc:	call	0x1ac0


0x2bc1:	mov	rdi, r13
0x2bc4:	mov	r12, r14
0x2bc7:	call	0x1810


0x2bcc:	jmp	0x2b5e


0x2b0b:	mov	rax, qword ptr [rsp + 0x48]
0x2b10:	xor	rax, qword ptr fs:[0x28]
0x2b19:	jne	0x3145


0x2b1f:	add	rsp, 0x58
0x2b23:	pop	rbx
0x2b24:	pop	rbp
0x2b25:	pop	r12
0x2b27:	pop	r13
0x2b29:	pop	r14
0x2b2b:	pop	r15
0x2b2d:	ret	


0x3145:	call	0x1920


0x2df5:	push	rbx
0x2df6:	or	ecx, 0xffffffff
0x2df9:	push	rbx
0x2dfa:	lea	rsi, [rip + 0x6460]
0x2e01:	push	rbx
0x2e02:	push	rbx
0x2e03:	mov	r8, rax
0x2e06:	mov	r9, r13
0x2e09:	mov	edx, 0x20
0x2e0e:	mov	edi, ecx
0x2e10:	call	0x2050


0x2f01:	push	rbx
0x2f02:	mov	r9, r15
0x2f05:	push	r13
0x2f07:	lea	r8, [r12 + 8]
0x2f0c:	push	qword ptr [rsp + 0x18]
0x2f10:	mov	ecx, 0x20
0x2f15:	push	rbx
0x2f16:	mov	edx, 0x20
0x2f1b:	mov	rsi, rax
0x2f1e:	jmp	0x2e98


0x2e98:	or	edi, 0xffffffff
0x2e9b:	call	0x2050


0x2f7f:	mov	r15, rax
0x2f82:	movsx	eax, word ptr [r12 + 0x14c]
0x2f8b:	lea	rsi, [rip + 0x55cc]
0x2f92:	xor	edi, edi
0x2f94:	mov	edx, 5
0x2f99:	mov	dword ptr [rsp + 0x10], eax
0x2f9d:	call	0x18f0


0x2fa2:	mov	r9d, dword ptr [rsp + 0x18]
0x2fa7:	mov	rdi, qword ptr [rip + 0x208132]
0x2fae:	lea	rcx, [rip + 0x55b5]
0x2fb5:	mov	r8, rax
0x2fb8:	or	rdx, 0xffffffffffffffff
0x2fbc:	mov	esi, 1
0x2fc1:	xor	eax, eax
0x2fc3:	push	r9
0x2fc5:	push	r15
0x2fc7:	mov	r9d, dword ptr [rsp + 0x20]
0x2fcc:	call	0x1bb0


0x2fd1:	mov	r15, qword ptr [rip + 0x208108]
0x2fd8:	mov	edi, dword ptr [r12 + 0x154]
0x2fe0:	call	0x2340


0x2fe5:	push	r15
0x2fe7:	lea	r8, [r12 + 8]
0x2fec:	push	r13
0x2fee:	lea	rsi, [rip + 0x626c]
0x2ff5:	push	qword ptr [rsp + 0x28]
0x2ff9:	push	rbx
0x2ffa:	or	edi, 0xffffffff
0x2ffd:	mov	r9, rax
0x3000:	mov	ecx, 0x20
0x3005:	mov	edx, 0x20
0x300a:	call	0x2050


0x30b5:	or	r8, 0xffffffffffffffff
0x30b9:	mov	rdi, rax
0x30bc:	mov	eax, r15d
0x30bf:	mov	rcx, r8
0x30c2:	mov	qword ptr [rsp + 0x18], r8
0x30c7:	lea	rsi, [rip + 0x5496]
0x30ce:	repne scasb	al, byte ptr [rdi]


0x30ce:	repne scasb	al, byte ptr [rdi]


0x30d0:	mov	edx, 5
0x30d5:	xor	edi, edi
0x30d7:	not	rcx
0x30da:	lea	rax, [rcx + r8]
0x30de:	mov	qword ptr [rsp + 0x10], rax
0x30e3:	call	0x18f0


0x30e8:	mov	r8, qword ptr [rsp + 0x18]
0x30ed:	mov	rdi, rax
0x30f0:	mov	eax, r15d
0x30f3:	mov	rcx, r8
0x30f6:	repne scasb	al, byte ptr [rdi]


0x30f8:	mov	rax, qword ptr [rsp + 0x10]
0x30fd:	not	rcx
0x3100:	lea	rdi, [rax + rcx + 0xd]
0x3105:	call	0x5b70


0x30f6:	repne scasb	al, byte ptr [rdi]


0x310a:	mov	qword ptr [rip + 0x207fcf], rax
0x3111:	jmp	0x2f5e


0x2c02:	mov	rdi, qword ptr [rip + 0x2084e7]
0x2c09:	lea	rcx, [rip + 0x591e]
0x2c10:	mov	r8, rax
0x2c13:	or	rdx, 0xffffffffffffffff
0x2c17:	xor	eax, eax
0x2c19:	movzx	r9d, r15b
0x2c1d:	mov	esi, 1
0x2c22:	call	0x1bb0


0x2c27:	cmp	qword ptr [rip + 0x2084b9], 0
0x2c2f:	je	0x306a


0x306a:	lea	rsi, [rip + 0x54c3]
0x3071:	mov	edx, 5
0x3076:	xor	edi, edi
0x3078:	call	0x18f0


0x2c35:	cmp	r13b, 0x4e
0x2c39:	movzx	r15d, r13b
0x2c3d:	lea	rsi, [rip + 0x58f0]
0x2c44:	mov	r13d, 0x53
0x2c4a:	mov	edx, 5
0x2c4f:	cmovne	r13d, r15d
0x2c53:	xor	edi, edi
0x2c55:	sub	r15d, 0x20
0x2c59:	call	0x18f0


0x2c5e:	mov	rdi, qword ptr [rip + 0x208483]
0x2c65:	lea	rcx, [rip + 0x58ce]
0x2c6c:	mov	r8, rax
0x2c6f:	mov	r9d, r13d
0x2c72:	or	rdx, 0xffffffffffffffff
0x2c76:	xor	eax, eax
0x2c78:	mov	esi, 1
0x2c7d:	lea	r13, [rip + 0x65dd]
0x2c84:	call	0x1bb0


0x2c89:	cmp	r15d, 0x5e
0x2c8d:	ja	0x2c96


0x2c8f:	mov	r13, qword ptr [rip + 0x208452]
0x2c96:	mov	edi, dword ptr [r12 + 0x154]
0x2c9e:	call	0x2340


0x2c96:	mov	edi, dword ptr [r12 + 0x154]
0x2c9e:	call	0x2340


0x2ca3:	mov	r8, qword ptr [rip + 0x208446]
0x2caa:	push	rbx
0x2cab:	or	ecx, 0xffffffff
0x2cae:	push	r13
0x2cb0:	push	rbx
0x2cb1:	mov	r9, rax
0x2cb4:	push	rbx
0x2cb5:	mov	edx, 0x20
0x2cba:	mov	rsi, rbx
0x2cbd:	mov	edi, ecx
0x2cbf:	call	0x2050


0x307d:	or	rcx, 0xffffffffffffffff
0x3081:	mov	rdi, rax
0x3084:	xor	eax, eax
0x3086:	repne scasb	al, byte ptr [rdi]


0x3086:	repne scasb	al, byte ptr [rdi]


0x3088:	neg	rcx
0x308b:	mov	rdi, rcx
0x308e:	call	0x5b70


0x3093:	mov	qword ptr [rip + 0x20804e], rax
0x309a:	jmp	0x2c35


0x3044:	or	rcx, 0xffffffffffffffff
0x3048:	mov	rdi, rax
0x304b:	xor	eax, eax
0x304d:	repne scasb	al, byte ptr [rdi]


0x304d:	repne scasb	al, byte ptr [rdi]


0x304f:	mov	rax, rcx
0x3052:	not	rax
0x3055:	lea	rdi, [rax + 2]
0x3059:	call	0x5b70


0x305e:	mov	qword ptr [rip + 0x20808b], rax
0x3065:	jmp	0x2bef


0x2b82:	mov	rdx, rbp
0x2b85:	mov	rsi, rax
0x2b88:	mov	edi, 1
0x2b8d:	xor	eax, eax
0x2b8f:	call	0x1ac0


0x2b94:	jmp	0x2b01


0x2d18:	lea	rsi, [rip + 0x57df]
0x2d1f:	mov	edx, 5
0x2d24:	xor	edi, edi
0x2d26:	mov	qword ptr [rsp + 0x10], rax
0x2d2b:	call	0x18f0


0x2d30:	lea	rsi, [rip + 0x57cf]
0x2d37:	mov	edx, 5
0x2d3c:	xor	edi, edi
0x2d3e:	mov	r12, rax
0x2d41:	call	0x18f0


0x2d46:	lea	rsi, [rip + 0x57bd]
0x2d4d:	mov	edx, 5
0x2d52:	xor	edi, edi
0x2d54:	mov	rbx, rax
0x2d57:	call	0x18f0


0x2d5c:	lea	rsi, [rip + 0x57ac]
0x2d63:	mov	edx, 5
0x2d68:	xor	edi, edi
0x2d6a:	mov	r14, rax
0x2d6d:	call	0x18f0


0x2d72:	lea	rsi, [rip + 0x579b]
0x2d79:	mov	edx, 5
0x2d7e:	xor	edi, edi
0x2d80:	mov	qword ptr [rsp + 8], rax
0x2d85:	call	0x18f0


0x2d8a:	lea	rsi, [rip + 0x5788]
0x2d91:	mov	edx, 5
0x2d96:	xor	edi, edi
0x2d98:	mov	qword ptr [rsp], rax
0x2d9c:	call	0x18f0


0x2da1:	mov	r8, qword ptr [rsp + 0x10]
0x2da6:	or	ecx, 0xffffffff
0x2da9:	mov	edx, 0x20
0x2dae:	mov	rsi, rax
0x2db1:	mov	edi, ecx
0x2db3:	push	r8
0x2db5:	push	r12
0x2db7:	push	rbx
0x2db8:	push	r14
0x2dba:	mov	r9, qword ptr [rsp + 0x28]
0x2dbf:	mov	r8, qword ptr [rsp + 0x20]
0x2dc4:	call	0x2050


0x1ec4:	pop	rbx
0x1ec5:	xor	eax, eax
0x1ec7:	pop	rbp
0x1ec8:	pop	r12
0x1eca:	ret	


0x1eff:	jmp	0x1ec4


0x2cd4:	test	rax, rax
0x2cd7:	mov	rbp, rax
0x2cda:	je	0x2b01


0x2ce0:	lea	rsi, [rip + 0x5837]
0x2ce7:	mov	edx, 5
0x2cec:	mov	rdi, rax
0x2cef:	call	0x1860


0x2cf4:	test	eax, eax
0x2cf6:	jne	0x29eb


0x2cfc:	add	rbp, 5
0x2d00:	jmp	0x29eb


0x2dc9:	add	rsp, 0x20
0x2dcd:	jmp	0x29de


0x2cc4:	add	rsp, 0x20
0x2cc8:	jmp	0x2ad8


0x300f:	add	rsp, 0x30
0x3013:	mov	rdi, r13
0x3016:	call	0x1810


0x301b:	jmp	0x2ad8


0x2ea0:	add	rsp, 0x20
0x2ea4:	mov	rdi, r13
0x2ea7:	call	0x1810


0x2eac:	jmp	0x2ad8


0x2e15:	add	rsp, 0x20
0x2e19:	jmp	0x2ad8


0x25e8:	add	rsp, 0x20
0x25ec:	mov	rax, qword ptr [rsp + 0x218]
0x25f4:	xor	rax, qword ptr fs:[0x28]
0x25fd:	jne	0x294e


0x2603:	add	rsp, 0x228
0x260a:	pop	rbx
0x260b:	pop	rbp
0x260c:	pop	r12
0x260e:	pop	r13
0x2610:	pop	r14
0x2612:	pop	r15
0x2614:	ret	


0x294e:	call	0x1920


0x302c:	jmp	0x2ad8


0x3125:	mov	rbx, rax
0x3128:	call	0x1840


0x312d:	mov	esi, dword ptr [rax]
0x312f:	lea	rdx, [rip + 0x5bab]
0x3136:	mov	rcx, rbx
0x3139:	mov	edi, 1
0x313e:	xor	eax, eax
0x3140:	call	0x1af0


0x1f12:	lea	rsi, [rip + 0x678f]
0x1f19:	mov	rbx, rax
0x1f1c:	xor	edi, edi
0x1f1e:	mov	edx, 5
0x1f23:	call	0x18f0


0x1f28:	mov	rcx, rbx
0x1f2b:	mov	rdx, rax
0x1f2e:	xor	esi, esi
0x1f30:	xor	edi, edi
0x1f32:	xor	eax, eax
0x1f34:	call	0x1af0


0x1f39:	jmp	0x1d0f


0x36da:	mov	esi, dword ptr [rbx]
0x36dc:	lea	rdx, [rip + 0x55fa]
0x36e3:	mov	rcx, rax
0x36e6:	mov	r8, rbp
0x36e9:	xor	edi, edi
0x36eb:	xor	eax, eax
0x36ed:	call	0x1af0


0x4cdc:	add	rsp, 0x20
0x4ce0:	mov	r11, qword ptr [rsp + 0x10]
0x4ce5:	cmp	r11, rax
0x4ce8:	ja	0x4d51


0x4cea:	lea	rsi, [rax + 1]
0x4cee:	lea	rax, [rip + 0x2064cb]
0x4cf5:	cmp	r12, rax
0x4cf8:	mov	qword ptr [rbx], rsi
0x4cfb:	je	0x4d0f


0x4d51:	mov	eax, dword ptr [rsp + 0x18]
0x4d55:	mov	dword ptr [r13], eax
0x4d59:	add	rsp, 0x28
0x4d5d:	mov	rax, r12
0x4d60:	pop	rbx
0x4d61:	pop	rbp
0x4d62:	pop	r12
0x4d64:	pop	r13
0x4d66:	pop	r14
0x4d68:	pop	r15
0x4d6a:	ret	


0x4d0f:	mov	rdi, rsi
0x4d12:	mov	qword ptr [rsp + 0x10], rsi
0x4d17:	call	0x5b70


0x4cfd:	mov	rdi, r12
0x4d00:	mov	qword ptr [rsp + 0x10], rsi
0x4d05:	call	0x1810


0x4d0a:	mov	rsi, qword ptr [rsp + 0x10]
0x4d0f:	mov	rdi, rsi
0x4d12:	mov	qword ptr [rsp + 0x10], rsi
0x4d17:	call	0x5b70


0x4d1c:	sub	rsp, 8
0x4d20:	mov	qword ptr [rbx + 8], rax
0x4d24:	mov	r8d, dword ptr [rbp]
0x4d28:	push	qword ptr [rbp + 0x30]
0x4d2b:	push	qword ptr [rbp + 0x28]
0x4d2e:	mov	rcx, r14
0x4d31:	push	r15
0x4d33:	mov	r9d, dword ptr [rsp + 0x3c]
0x4d38:	mov	rdi, rax
0x4d3b:	mov	rdx, qword ptr [rsp + 0x28]
0x4d40:	mov	rsi, qword ptr [rsp + 0x30]
0x4d45:	mov	r12, rax
0x4d48:	call	0x39b0


0x5462:	mov	rdi, qword ptr [rsp + 0x38]
0x5467:	xor	rdi, qword ptr fs:[0x28]
0x5470:	jne	0x547c


0x5472:	add	rsp, 0x48
0x5476:	ret	


0x547c:	call	0x1920


0x51af:	mov	rcx, qword ptr [rsp + 0x38]
0x51b4:	xor	rcx, qword ptr fs:[0x28]
0x51bd:	jne	0x51c9


0x51bf:	add	rsp, 0x48
0x51c3:	ret	


0x51c9:	call	0x1920


0x523b:	mov	rdx, qword ptr [rsp + 0x38]
0x5240:	xor	rdx, qword ptr fs:[0x28]
0x5249:	jne	0x5255


0x524b:	add	rsp, 0x48
0x524f:	ret	


0x5255:	call	0x1920


0x53cf:	mov	rcx, qword ptr [rsp + 0x38]
0x53d4:	xor	rcx, qword ptr fs:[0x28]
0x53dd:	jne	0x53e9


0x53df:	add	rsp, 0x48
0x53e3:	ret	


0x53e9:	call	0x1920


0x52fe:	mov	rsi, qword ptr [rsp + 0x38]
0x5303:	xor	rsi, qword ptr fs:[0x28]
0x530c:	jne	0x5313


0x530e:	add	rsp, 0x48
0x5312:	ret	


0x5313:	call	0x1920


0x4d4d:	add	rsp, 0x20
0x4d51:	mov	eax, dword ptr [rsp + 0x18]
0x4d55:	mov	dword ptr [r13], eax
0x4d59:	add	rsp, 0x28
0x4d5d:	mov	rax, r12
0x4d60:	pop	rbx
0x4d61:	pop	rbp
0x4d62:	pop	r12
0x4d64:	pop	r13
0x4d66:	pop	r14
0x4d68:	pop	r15
0x4d6a:	ret	


0x4f9c:	lea	rsi, [rax + 1]
0x4fa0:	mov	qword ptr [rsp + 0x48], rax
0x4fa5:	add	rsp, 0x20
0x4fa9:	mov	rdi, rsi
0x4fac:	mov	qword ptr [rsp + 0x18], rsi
0x4fb1:	call	0x5b70


0x4fb6:	mov	qword ptr [rsp + 0x10], rax
0x4fbb:	sub	rsp, 8
0x4fbf:	push	qword ptr [rbx + 0x30]
0x4fc2:	push	qword ptr [rbx + 0x28]
0x4fc5:	mov	r10, qword ptr [rsp + 0x38]
0x4fca:	mov	r9d, ebp
0x4fcd:	mov	r8d, dword ptr [rbx]
0x4fd0:	mov	rcx, r15
0x4fd3:	mov	rdx, r14
0x4fd6:	mov	rdi, rax
0x4fd9:	push	r10
0x4fdb:	mov	rsi, qword ptr [rsp + 0x38]
0x4fe0:	call	0x39b0


0x4fe5:	mov	eax, dword ptr [rsp + 0x2c]
0x4fe9:	add	rsp, 0x20
0x4fed:	test	r12, r12
0x4ff0:	mov	dword ptr [r13], eax
0x4ff4:	je	0x4fff


0x4fff:	mov	rax, qword ptr [rsp + 0x10]
0x5004:	add	rsp, 0x38
0x5008:	pop	rbx
0x5009:	pop	rbp
0x500a:	pop	r12
0x500c:	pop	r13
0x500e:	pop	r14
0x5010:	pop	r15
0x5012:	ret	


0x4ff6:	mov	r11, qword ptr [rsp + 0x28]
0x4ffb:	mov	qword ptr [r12], r11
0x4fff:	mov	rax, qword ptr [rsp + 0x10]
0x5004:	add	rsp, 0x38
0x5008:	pop	rbx
0x5009:	pop	rbp
0x500a:	pop	r12
0x500c:	pop	r13
0x500e:	pop	r14
0x5010:	pop	r15
0x5012:	ret	


0x4f11:	mov	dword ptr [rbp], r12d
0x4f15:	add	rsp, 0x38
0x4f19:	pop	rbx
0x4f1a:	pop	rbp
0x4f1b:	pop	r12
0x4f1d:	pop	r13
0x4f1f:	pop	r14
0x4f21:	pop	r15
0x4f23:	ret	


0x83fd:	add	rbx, 1
0x8401:	cmp	rbp, rbx
0x8404:	jne	0x83f0


0x83f0:	mov	rdx, r15
0x83f3:	mov	rsi, r14
0x83f6:	mov	edi, r13d
0x83f9:	call	qword ptr [r12 + rbx*8]






0x7110:	mov	byte ptr [rax], r14b
0x7113:	mov	rbx, r14
0x7116:	jmp	0x6e34


0x7130:	mov	word ptr [rax], r14w
0x7134:	mov	rbx, r14
0x7137:	jmp	0x6e34


0x6fe0:	mov	qword ptr [rax], r14
0x6fe3:	mov	rbx, r14
0x6fe6:	jmp	0x6e34


0x7120:	mov	dword ptr [rax], r14d
0x7123:	mov	rbx, r14
0x7126:	jmp	0x6e34


0x6d60:	mov	rax, qword ptr [r13 + 0x50]
0x6d64:	lea	rdi, [r15 + r14]
0x6d68:	shl	rax, 5
0x6d6c:	add	rax, qword ptr [rbp - 0x3a8]
0x6d73:	movsx	r9d, byte ptr [rax + 0x10]
0x6d78:	mov	eax, dword ptr [rbp - 0x3e0]
0x6d7e:	cmp	eax, 1
0x6d81:	jne	0x6a5e


0x6900:	mov	rax, qword ptr [r13 + 0x50]
0x6904:	lea	rdi, [r15 + r14]
0x6908:	shl	rax, 5
0x690c:	add	rax, qword ptr [rbp - 0x3a8]
0x6913:	mov	r9, qword ptr [rax + 0x10]
0x6917:	mov	eax, dword ptr [rbp - 0x3e0]
0x691d:	cmp	eax, 1
0x6920:	je	0x6de8


0x6b60:	mov	rax, qword ptr [r13 + 0x50]
0x6b64:	lea	rdi, [r15 + r14]
0x6b68:	shl	rax, 5
0x6b6c:	add	rax, qword ptr [rbp - 0x3a8]
0x6b73:	fld	xword ptr [rax + 0x10]
0x6b76:	mov	eax, dword ptr [rbp - 0x3e0]
0x6b7c:	cmp	eax, 1
0x6b7f:	je	0x71b0


0x6ca8:	mov	rax, qword ptr [r13 + 0x50]
0x6cac:	lea	rdi, [r15 + r14]
0x6cb0:	shl	rax, 5
0x6cb4:	add	rax, qword ptr [rbp - 0x3a8]
0x6cbb:	movsx	r9d, word ptr [rax + 0x10]
0x6cc0:	mov	eax, dword ptr [rbp - 0x3e0]
0x6cc6:	cmp	eax, 1
0x6cc9:	je	0x6c90


0x6c68:	mov	rax, qword ptr [r13 + 0x50]
0x6c6c:	lea	rdi, [r15 + r14]
0x6c70:	shl	rax, 5
0x6c74:	add	rax, qword ptr [rbp - 0x3a8]
0x6c7b:	movzx	r9d, word ptr [rax + 0x10]
0x6c80:	mov	eax, dword ptr [rbp - 0x3e0]
0x6c86:	cmp	eax, 1
0x6c89:	jne	0x6a5e


0x6be8:	mov	rax, qword ptr [r13 + 0x50]
0x6bec:	lea	rdi, [r15 + r14]
0x6bf0:	shl	rax, 5
0x6bf4:	add	rax, qword ptr [rbp - 0x3a8]
0x6bfb:	movsd	xmm0, qword ptr [rax + 0x10]
0x6c00:	mov	eax, dword ptr [rbp - 0x3e0]
0x6c06:	cmp	eax, 1
0x6c09:	je	0x71a0


0x6d30:	mov	rax, qword ptr [r13 + 0x50]
0x6d34:	lea	rdi, [r15 + r14]
0x6d38:	shl	rax, 5
0x6d3c:	add	rax, qword ptr [rbp - 0x3a8]
0x6d43:	movzx	r9d, byte ptr [rax + 0x10]
0x6d48:	mov	eax, dword ptr [rbp - 0x3e0]
0x6d4e:	cmp	eax, 1
0x6d51:	jne	0x6a5e


0x6a38:	mov	rax, qword ptr [r13 + 0x50]
0x6a3c:	lea	rdi, [r15 + r14]
0x6a40:	shl	rax, 5
0x6a44:	add	rax, qword ptr [rbp - 0x3a8]
0x6a4b:	mov	r9d, dword ptr [rax + 0x10]
0x6a4f:	mov	eax, dword ptr [rbp - 0x3e0]
0x6a55:	cmp	eax, 1
0x6a58:	je	0x6c90


0x57e0:	lea	rsi, [rip + 0x3b91]
0x57e7:	mov	edx, 5
0x57ec:	xor	edi, edi
0x57ee:	mov	r14, qword ptr [rbx + 0x18]
0x57f2:	mov	r13, qword ptr [rbx + 0x10]
0x57f6:	mov	r12, qword ptr [rbx + 8]
0x57fa:	mov	rbx, qword ptr [rbx]
0x57fd:	call	0x18f0


0x5600:	mov	r9, qword ptr [rbx + 0x38]
0x5604:	mov	rax, qword ptr [rbx + 0x10]
0x5608:	lea	rsi, [rip + 0x3e09]
0x560f:	mov	r8, qword ptr [rbx + 8]
0x5613:	mov	edx, 5
0x5618:	xor	edi, edi
0x561a:	mov	r13, qword ptr [rbx + 0x30]
0x561e:	mov	r12, qword ptr [rbx + 0x28]
0x5622:	mov	qword ptr [rsp + 0x10], r9
0x5627:	mov	r15, qword ptr [rbx + 0x20]
0x562b:	mov	r14, qword ptr [rbx + 0x18]
0x562f:	mov	qword ptr [rsp], rax
0x5633:	mov	qword ptr [rsp + 8], r8
0x5638:	mov	rbx, qword ptr [rbx]
0x563b:	call	0x18f0


0x5708:	mov	rbx, qword ptr [rbx]
0x570b:	lea	rsi, [rip + 0x3b0d]
0x5712:	mov	edx, 5
0x5717:	xor	edi, edi
0x5719:	call	0x18f0


0x5748:	mov	r12, qword ptr [rbx + 8]
0x574c:	lea	rsi, [rip + 0x3adc]
0x5753:	mov	rbx, qword ptr [rbx]
0x5756:	mov	edx, 5
0x575b:	xor	edi, edi
0x575d:	call	0x18f0


0x5868:	mov	r8, qword ptr [rbx + 8]
0x586c:	mov	r12, qword ptr [rbx + 0x28]
0x5870:	lea	rsi, [rip + 0x3b49]
0x5877:	mov	r15, qword ptr [rbx + 0x20]
0x587b:	mov	r14, qword ptr [rbx + 0x18]
0x587f:	mov	edx, 5
0x5884:	mov	r13, qword ptr [rbx + 0x10]
0x5888:	xor	edi, edi
0x588a:	mov	rbx, qword ptr [rbx]
0x588d:	mov	qword ptr [rsp], r8
0x5891:	call	0x18f0


0x5790:	mov	r13, qword ptr [rbx + 0x10]
0x5794:	mov	r12, qword ptr [rbx + 8]
0x5798:	lea	rsi, [rip + 0x3aa7]
0x579f:	mov	rbx, qword ptr [rbx]
0x57a2:	mov	edx, 5
0x57a7:	xor	edi, edi
0x57a9:	call	0x18f0


0x58d0:	mov	r9, qword ptr [rbx + 0x10]
0x58d4:	mov	r13, qword ptr [rbx + 0x30]
0x58d8:	lea	rsi, [rip + 0x3b09]
0x58df:	mov	r12, qword ptr [rbx + 0x28]
0x58e3:	mov	r15, qword ptr [rbx + 0x20]
0x58e7:	mov	edx, 5
0x58ec:	mov	r14, qword ptr [rbx + 0x18]
0x58f0:	mov	r8, qword ptr [rbx + 8]
0x58f4:	xor	edi, edi
0x58f6:	mov	qword ptr [rsp + 8], r9
0x58fb:	mov	rbx, qword ptr [rbx]
0x58fe:	mov	qword ptr [rsp], r8
0x5902:	call	0x18f0


0x56b0:	mov	r10, qword ptr [rbx + 0x40]
0x56b4:	mov	r9, qword ptr [rbx + 0x38]
0x56b8:	lea	rsi, [rip + 0x3d89]
0x56bf:	mov	rax, qword ptr [rbx + 0x10]
0x56c3:	mov	r8, qword ptr [rbx + 8]
0x56c7:	mov	edx, 5
0x56cc:	mov	r13, qword ptr [rbx + 0x30]
0x56d0:	mov	r12, qword ptr [rbx + 0x28]
0x56d4:	mov	r15, qword ptr [rbx + 0x20]
0x56d8:	mov	r14, qword ptr [rbx + 0x18]
0x56dc:	mov	rbx, qword ptr [rbx]
0x56df:	mov	qword ptr [rsp + 0x18], r10
0x56e4:	mov	qword ptr [rsp + 0x10], r9
0x56e9:	mov	qword ptr [rsp], rax
0x56ed:	mov	qword ptr [rsp + 8], r8
0x56f2:	xor	edi, edi
0x56f4:	call	0x18f0


0x5676:	add	rsp, 0x28
0x567a:	pop	rbx
0x567b:	pop	rbp
0x567c:	pop	r12
0x567e:	pop	r13
0x5680:	pop	r14
0x5682:	pop	r15
0x5684:	ret	


0x5838:	mov	r15, qword ptr [rbx + 0x20]
0x583c:	lea	rsi, [rip + 0x3b55]
0x5843:	mov	edx, 5
0x5848:	xor	edi, edi
0x584a:	mov	r14, qword ptr [rbx + 0x18]
0x584e:	mov	r13, qword ptr [rbx + 0x10]
0x5852:	mov	r12, qword ptr [rbx + 8]
0x5856:	mov	rbx, qword ptr [rbx]
0x5859:	call	0x18f0


0x7500:	mov	rdx, qword ptr [rdi + 8]
0x7504:	add	rdx, 0xf
0x7508:	and	rdx, 0xfffffffffffffff0
0x750c:	lea	r11, [rdx + 0x10]
0x7510:	mov	qword ptr [rdi + 8], r11
0x7514:	fld	xword ptr [rdx]
0x7516:	fstp	xword ptr [rax + 0x10]
0x7519:	nop	dword ptr [rax]
0x7520:	add	rcx, 1
0x7524:	add	rax, 0x20
0x7528:	cmp	qword ptr [rsi], rcx
0x752b:	ja	0x74e8


0x7620:	mov	r11d, dword ptr [rdi]
0x7623:	cmp	r11d, 0x2f
0x7627:	ja	0x766c


0x75c4:	mov	r11d, dword ptr [rdi]
0x75c7:	cmp	r11d, 0x2f
0x75cb:	ja	0x765b


0x75f2:	mov	r11d, dword ptr [rdi + 4]
0x75f6:	cmp	r11d, 0xaf
0x75fd:	ja	0x76ad


0x7536:	mov	r11d, dword ptr [rdi]
0x7539:	cmp	r11d, 0x2f
0x753d:	ja	0x767a


0x755a:	mov	r11d, dword ptr [rdi]
0x755d:	cmp	r11d, 0x2f
0x7561:	ja	0x769c


0x757c:	mov	r11d, dword ptr [rdi]
0x757f:	cmp	r11d, 0x2f
0x7583:	ja	0x768b


0x759e:	mov	r11d, dword ptr [rdi]
0x75a1:	cmp	r11d, 0x2f
0x75a5:	ja	0x764a


0x6e34:	mov	r8, qword ptr [r13 + 8]
0x6e38:	add	r13, 0x58
0x6e3c:	mov	rcx, qword ptr [r13]
0x6e40:	add	qword ptr [rbp - 0x400], 1
0x6e48:	cmp	rcx, r8
0x6e4b:	jne	0x64e9


0x6d87:	jmp	0x6c90


0x6a5e:	cmp	eax, 2
0x6a61:	je	0x6cd8


0x6de8:	push	qword ptr [rbp - 0x3f0]
0x6dee:	push	r9
0x6df0:	jmp	0x6c98


0x6926:	cmp	eax, 2
0x6929:	je	0x6dd0


0x71b0:	sub	rsp, 8
0x71b4:	push	qword ptr [rbp - 0x3f0]
0x71ba:	sub	rsp, 0x10
0x71be:	fstp	xword ptr [rsp]
0x71c1:	jmp	0x6ceb


0x6b85:	cmp	eax, 2
0x6b88:	jne	0x7050


0x6c90:	push	qword ptr [rbp - 0x3f0]
0x6c96:	push	r9
0x6c98:	mov	r9d, dword ptr [rbp - 0x3b8]
0x6c9f:	jmp	0x6a71


0x6ccb:	cmp	eax, 2
0x6cce:	jne	0x6a67


0x71a0:	sub	rsp, 8
0x71a4:	push	qword ptr [rbp - 0x3f0]
0x71aa:	jmp	0x6c25


0x6c0f:	cmp	eax, 2
0x6c12:	jne	0x7010


0x6d57:	jmp	0x6c90


0x74e8:	cmp	dword ptr [rax], 0x16
0x74eb:	ja	0x7530


0x7629:	mov	edx, r11d
0x762c:	add	rdx, qword ptr [rdi + 0x10]
0x7630:	add	r11d, 8
0x7634:	mov	dword ptr [rdi], r11d
0x7637:	mov	rdx, qword ptr [rdx]
0x763a:	test	rdx, rdx
0x763d:	cmove	rdx, r10
0x7641:	mov	qword ptr [rax + 0x10], rdx
0x7645:	jmp	0x7520


0x766c:	mov	rdx, qword ptr [rdi + 8]
0x7670:	lea	r11, [rdx + 8]
0x7674:	mov	qword ptr [rdi + 8], r11
0x7678:	jmp	0x7637


0x75d1:	mov	edx, r11d
0x75d4:	add	rdx, qword ptr [rdi + 0x10]
0x75d8:	add	r11d, 8
0x75dc:	mov	dword ptr [rdi], r11d
0x75df:	mov	rdx, qword ptr [rdx]
0x75e2:	test	rdx, rdx
0x75e5:	cmove	rdx, r9
0x75e9:	mov	qword ptr [rax + 0x10], rdx
0x75ed:	jmp	0x7520


0x765b:	mov	rdx, qword ptr [rdi + 8]
0x765f:	lea	r11, [rdx + 8]
0x7663:	mov	qword ptr [rdi + 8], r11
0x7667:	jmp	0x75df


0x7603:	mov	edx, r11d
0x7606:	add	rdx, qword ptr [rdi + 0x10]
0x760a:	add	r11d, 0x10
0x760e:	mov	dword ptr [rdi + 4], r11d
0x7612:	movsd	xmm0, qword ptr [rdx]
0x7616:	movsd	qword ptr [rax + 0x10], xmm0
0x761b:	jmp	0x7520


0x76ad:	mov	rdx, qword ptr [rdi + 8]
0x76b1:	lea	r11, [rdx + 8]
0x76b5:	mov	qword ptr [rdi + 8], r11
0x76b9:	jmp	0x7612


0x7543:	mov	edx, r11d
0x7546:	add	rdx, qword ptr [rdi + 0x10]
0x754a:	add	r11d, 8
0x754e:	mov	dword ptr [rdi], r11d
0x7551:	mov	rdx, qword ptr [rdx]
0x7554:	mov	qword ptr [rax + 0x10], rdx
0x7558:	jmp	0x7520


0x767a:	mov	rdx, qword ptr [rdi + 8]
0x767e:	lea	r11, [rdx + 8]
0x7682:	mov	qword ptr [rdi + 8], r11
0x7686:	jmp	0x7551


0x7567:	mov	edx, r11d
0x756a:	add	rdx, qword ptr [rdi + 0x10]
0x756e:	add	r11d, 8
0x7572:	mov	dword ptr [rdi], r11d
0x7575:	mov	edx, dword ptr [rdx]
0x7577:	mov	dword ptr [rax + 0x10], edx
0x757a:	jmp	0x7520


0x769c:	mov	rdx, qword ptr [rdi + 8]
0x76a0:	lea	r11, [rdx + 8]
0x76a4:	mov	qword ptr [rdi + 8], r11
0x76a8:	jmp	0x7575


0x7589:	mov	edx, r11d
0x758c:	add	rdx, qword ptr [rdi + 0x10]
0x7590:	add	r11d, 8
0x7594:	mov	dword ptr [rdi], r11d
0x7597:	mov	edx, dword ptr [rdx]
0x7599:	mov	byte ptr [rax + 0x10], dl
0x759c:	jmp	0x7520


0x768b:	mov	rdx, qword ptr [rdi + 8]
0x768f:	lea	r11, [rdx + 8]
0x7693:	mov	qword ptr [rdi + 8], r11
0x7697:	jmp	0x7597


0x75ab:	mov	edx, r11d
0x75ae:	add	rdx, qword ptr [rdi + 0x10]
0x75b2:	add	r11d, 8
0x75b6:	mov	dword ptr [rdi], r11d
0x75b9:	mov	edx, dword ptr [rdx]
0x75bb:	mov	word ptr [rax + 0x10], dx
0x75bf:	jmp	0x7520


0x764a:	mov	rdx, qword ptr [rdi + 8]
0x764e:	lea	r11, [rdx + 8]
0x7652:	mov	qword ptr [rdi + 8], r11
0x7656:	jmp	0x75b9


0x6cd8:	sub	rsp, 8
0x6cdc:	push	qword ptr [rbp - 0x3f0]
0x6ce2:	push	r9
0x6ce4:	mov	eax, dword ptr [rbp - 0x3b4]
0x6cea:	push	rax
0x6ceb:	mov	r9d, dword ptr [rbp - 0x3b8]
0x6cf2:	mov	r8, qword ptr [rbp - 0x3d8]
0x6cf9:	mov	rsi, r10
0x6cfc:	mov	rcx, -1
0x6d03:	mov	edx, 1
0x6d08:	xor	eax, eax
0x6d0a:	mov	qword ptr [rbp - 0x430], r10
0x6d11:	call	0x1800


0x6a67:	sub	rsp, 8
0x6a6b:	push	qword ptr [rbp - 0x3f0]
0x6a71:	mov	r8, qword ptr [rbp - 0x3d8]
0x6a78:	mov	rcx, -1
0x6a7f:	mov	edx, 1
0x6a84:	mov	rsi, r10
0x6a87:	xor	eax, eax
0x6a89:	mov	qword ptr [rbp - 0x430], r10
0x6a90:	call	0x1800


0x6c98:	mov	r9d, dword ptr [rbp - 0x3b8]
0x6c9f:	jmp	0x6a71


0x6dd0:	sub	rsp, 8
0x6dd4:	push	qword ptr [rbp - 0x3f0]
0x6dda:	push	r9
0x6ddc:	jmp	0x6ce4


0x692f:	sub	rsp, 8
0x6933:	push	qword ptr [rbp - 0x3f0]
0x6939:	mov	r8, qword ptr [rbp - 0x3d8]
0x6940:	mov	rsi, r10
0x6943:	mov	rcx, -1
0x694a:	mov	edx, 1
0x694f:	xor	eax, eax
0x6951:	mov	qword ptr [rbp - 0x430], r10
0x6958:	call	0x1800


0x6ceb:	mov	r9d, dword ptr [rbp - 0x3b8]
0x6cf2:	mov	r8, qword ptr [rbp - 0x3d8]
0x6cf9:	mov	rsi, r10
0x6cfc:	mov	rcx, -1
0x6d03:	mov	edx, 1
0x6d08:	xor	eax, eax
0x6d0a:	mov	qword ptr [rbp - 0x430], r10
0x6d11:	call	0x1800


0x6b8e:	mov	eax, dword ptr [rbp - 0x3b4]
0x6b94:	sub	rsp, 8
0x6b98:	push	qword ptr [rbp - 0x3f0]
0x6b9e:	mov	r9d, dword ptr [rbp - 0x3b8]
0x6ba5:	mov	r8, qword ptr [rbp - 0x3d8]
0x6bac:	mov	rsi, r10
0x6baf:	sub	rsp, 0x18
0x6bb3:	mov	rcx, -1
0x6bba:	mov	edx, 1
0x6bbf:	fstp	xword ptr [rsp + 8]
0x6bc3:	push	rax
0x6bc4:	xor	eax, eax
0x6bc6:	mov	qword ptr [rbp - 0x430], r10
0x6bcd:	call	0x1800


0x7050:	sub	rsp, 0x10
0x7054:	mov	r9, qword ptr [rbp - 0x3f0]
0x705b:	fstp	xword ptr [rsp]
0x705e:	jmp	0x6939


0x6a71:	mov	r8, qword ptr [rbp - 0x3d8]
0x6a78:	mov	rcx, -1
0x6a7f:	mov	edx, 1
0x6a84:	mov	rsi, r10
0x6a87:	xor	eax, eax
0x6a89:	mov	qword ptr [rbp - 0x430], r10
0x6a90:	call	0x1800


0x6c25:	mov	r9d, dword ptr [rbp - 0x3b8]
0x6c2c:	mov	r8, qword ptr [rbp - 0x3d8]
0x6c33:	mov	rsi, r10
0x6c36:	mov	rcx, -1
0x6c3d:	mov	edx, 1
0x6c42:	mov	eax, 1
0x6c47:	mov	qword ptr [rbp - 0x430], r10
0x6c4e:	call	0x1800


0x6c18:	mov	eax, dword ptr [rbp - 0x3b4]
0x6c1e:	push	qword ptr [rbp - 0x3f0]
0x6c24:	push	rax
0x6c25:	mov	r9d, dword ptr [rbp - 0x3b8]
0x6c2c:	mov	r8, qword ptr [rbp - 0x3d8]
0x6c33:	mov	rsi, r10
0x6c36:	mov	rcx, -1
0x6c3d:	mov	edx, 1
0x6c42:	mov	eax, 1
0x6c47:	mov	qword ptr [rbp - 0x430], r10
0x6c4e:	call	0x1800


0x7010:	mov	r9, qword ptr [rbp - 0x3f0]
0x7017:	mov	r8, qword ptr [rbp - 0x3d8]
0x701e:	mov	rsi, r10
0x7021:	mov	rcx, -1
0x7028:	mov	edx, 1
0x702d:	mov	eax, 1
0x7032:	mov	qword ptr [rbp - 0x430], r10
0x7039:	call	0x1800


0x7520:	add	rcx, 1
0x7524:	add	rax, 0x20
0x7528:	cmp	qword ptr [rsi], rcx
0x752b:	ja	0x74e8


0x7637:	mov	rdx, qword ptr [rdx]
0x763a:	test	rdx, rdx
0x763d:	cmove	rdx, r10
0x7641:	mov	qword ptr [rax + 0x10], rdx
0x7645:	jmp	0x7520


0x75df:	mov	rdx, qword ptr [rdx]
0x75e2:	test	rdx, rdx
0x75e5:	cmove	rdx, r9
0x75e9:	mov	qword ptr [rax + 0x10], rdx
0x75ed:	jmp	0x7520


0x7612:	movsd	xmm0, qword ptr [rdx]
0x7616:	movsd	qword ptr [rax + 0x10], xmm0
0x761b:	jmp	0x7520


0x7551:	mov	rdx, qword ptr [rdx]
0x7554:	mov	qword ptr [rax + 0x10], rdx
0x7558:	jmp	0x7520


0x7575:	mov	edx, dword ptr [rdx]
0x7577:	mov	dword ptr [rax + 0x10], edx
0x757a:	jmp	0x7520


0x7597:	mov	edx, dword ptr [rdx]
0x7599:	mov	byte ptr [rax + 0x10], dl
0x759c:	jmp	0x7520


0x75b9:	mov	edx, dword ptr [rdx]
0x75bb:	mov	word ptr [rax + 0x10], dx
0x75bf:	jmp	0x7520


0x1800:	jmp	qword ptr [rip + 0x2095e2]


0x6ce4:	mov	eax, dword ptr [rbp - 0x3b4]
0x6cea:	push	rax
0x6ceb:	mov	r9d, dword ptr [rbp - 0x3b8]
0x6cf2:	mov	r8, qword ptr [rbp - 0x3d8]
0x6cf9:	mov	rsi, r10
0x6cfc:	mov	rcx, -1
0x6d03:	mov	edx, 1
0x6d08:	xor	eax, eax
0x6d0a:	mov	qword ptr [rbp - 0x430], r10
0x6d11:	call	0x1800


0x6939:	mov	r8, qword ptr [rbp - 0x3d8]
0x6940:	mov	rsi, r10
0x6943:	mov	rcx, -1
0x694a:	mov	edx, 1
0x694f:	xor	eax, eax
0x6951:	mov	qword ptr [rbp - 0x430], r10
0x6958:	call	0x1800




0x585e:	push	r15
0x5860:	jmp	0x5806


0x5806:	push	r14
0x5808:	mov	rdx, rax
0x580b:	mov	r9, r13
0x580e:	mov	r8, r12
0x5811:	mov	rcx, rbx
0x5814:	mov	rdi, rbp
0x5817:	mov	esi, 1
0x581c:	xor	eax, eax
0x581e:	call	0x1b40


0x5823:	pop	rax
0x5824:	pop	rdx
0x5825:	add	rsp, 0x28
0x5829:	pop	rbx
0x582a:	pop	rbp
0x582b:	pop	r12
0x582d:	pop	r13
0x582f:	pop	r14
0x5831:	pop	r15
0x5833:	ret	


0x5907:	push	r13
0x5909:	push	r12
0x590b:	push	r15
0x590d:	push	r14
0x590f:	mov	r9, qword ptr [rsp + 0x28]
0x5914:	jmp	0x58a3


0x58a3:	mov	r8, qword ptr [rsp + 0x20]
0x58a8:	mov	rcx, rbx
0x58ab:	mov	rdx, rax
0x58ae:	mov	rdi, rbp
0x58b1:	mov	esi, 1
0x58b6:	xor	eax, eax
0x58b8:	call	0x1b40


0x58bd:	add	rsp, 0x20
0x58c1:	add	rsp, 0x28
0x58c5:	pop	rbx
0x58c6:	pop	rbp
0x58c7:	pop	r12
0x58c9:	pop	r13
0x58cb:	pop	r14
0x58cd:	pop	r15
0x58cf:	ret	


0x57ae:	add	rsp, 0x28
0x57b2:	mov	r9, r13
0x57b5:	mov	r8, r12
0x57b8:	mov	rcx, rbx
0x57bb:	mov	rdi, rbp
0x57be:	mov	rdx, rax
0x57c1:	pop	rbx
0x57c2:	pop	rbp
0x57c3:	pop	r12
0x57c5:	pop	r13
0x57c7:	pop	r14
0x57c9:	pop	r15
0x57cb:	mov	esi, 1
0x57d0:	xor	eax, eax
0x57d2:	jmp	0x1b40


0x5896:	sub	rsp, 8
0x589a:	mov	r9, r13
0x589d:	push	r12
0x589f:	push	r15
0x58a1:	push	r14
0x58a3:	mov	r8, qword ptr [rsp + 0x20]
0x58a8:	mov	rcx, rbx
0x58ab:	mov	rdx, rax
0x58ae:	mov	rdi, rbp
0x58b1:	mov	esi, 1
0x58b6:	xor	eax, eax
0x58b8:	call	0x1b40


0x5762:	add	rsp, 0x28
0x5766:	mov	r8, r12
0x5769:	mov	rcx, rbx
0x576c:	mov	rdi, rbp
0x576f:	mov	rdx, rax
0x5772:	mov	esi, 1
0x5777:	pop	rbx
0x5778:	pop	rbp
0x5779:	pop	r12
0x577b:	pop	r13
0x577d:	pop	r14
0x577f:	pop	r15
0x5781:	xor	eax, eax
0x5783:	jmp	0x1b40


0x571e:	add	rsp, 0x28
0x5722:	mov	rcx, rbx
0x5725:	mov	rdi, rbp
0x5728:	pop	rbx
0x5729:	pop	rbp
0x572a:	pop	r12
0x572c:	pop	r13
0x572e:	pop	r14
0x5730:	pop	r15
0x5732:	mov	rdx, rax
0x5735:	mov	esi, 1
0x573a:	xor	eax, eax
0x573c:	jmp	0x1b40


0x5640:	sub	rsp, 8
0x5644:	mov	r9, qword ptr [rsp + 0x18]
0x5649:	mov	rdx, rax
0x564c:	mov	rcx, rbx
0x564f:	mov	esi, 1
0x5654:	mov	rdi, rbp
0x5657:	xor	eax, eax
0x5659:	push	r9
0x565b:	push	r13
0x565d:	push	r12
0x565f:	push	r15
0x5661:	push	r14
0x5663:	mov	r9, qword ptr [rsp + 0x30]
0x5668:	mov	r8, qword ptr [rsp + 0x38]
0x566d:	call	0x1b40


0x5802:	sub	rsp, 8
0x5806:	push	r14
0x5808:	mov	rdx, rax
0x580b:	mov	r9, r13
0x580e:	mov	r8, r12
0x5811:	mov	rcx, rbx
0x5814:	mov	rdi, rbp
0x5817:	mov	esi, 1
0x581c:	xor	eax, eax
0x581e:	call	0x1b40


0x695d:	pop	rsi
0x695e:	pop	rdi
0x695f:	mov	r10, qword ptr [rbp - 0x430]
0x6966:	mov	ecx, dword ptr [rbp - 0x3bc]
0x696c:	test	ecx, ecx
0x696e:	js	0x6aac


0x6aac:	mov	rdi, qword ptr [rbp - 0x3f8]
0x6ab3:	cmp	byte ptr [rdi + 1], 0
0x6ab7:	jne	0x6df8


0x6974:	movsxd	rdx, ecx
0x6977:	cmp	rdx, r10
0x697a:	jae	0x698a


0x6abd:	test	eax, eax
0x6abf:	jns	0x698e


0x6df8:	mov	byte ptr [rdi + 1], 0
0x6dfc:	jmp	0x68b0


0x697c:	add	rdx, r15
0x697f:	cmp	byte ptr [rdx + r14], 0
0x6984:	jne	0x72c6


0x698a:	cmp	ecx, eax
0x698c:	jge	0x6996


0x6ac5:	mov	rax, qword ptr [rbp - 0x3c8]
0x6acc:	mov	ebx, dword ptr [rax]
0x6ace:	test	ebx, ebx
0x6ad0:	jne	0x6af0


0x698e:	mov	dword ptr [rbp - 0x3bc], eax
0x6994:	mov	ecx, eax
0x6996:	lea	eax, [rcx + 1]
0x6999:	cmp	rax, r10
0x699c:	jb	0x71d0


0x68b0:	mov	rax, qword ptr [rbp - 0x3c8]
0x68b7:	mov	rbx, r12
0x68ba:	mov	r10d, 0x7fffffff
0x68c0:	sub	rbx, r14
0x68c3:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0x68cd:	cmp	rbx, 0x7fffffff
0x68d4:	mov	dword ptr [rax], 0
0x68da:	mov	eax, dword ptr [rbp - 0x3d0]
0x68e0:	cmovbe	r10, rbx
0x68e4:	cmp	eax, 0x11
0x68e7:	ja	0x72c6


0x6996:	lea	eax, [rcx + 1]
0x6999:	cmp	rax, r10
0x699c:	jb	0x71d0


0x6ad2:	movzx	eax, byte ptr [r13 + 0x48]
0x6ad7:	mov	ebx, 0x16
0x6adc:	and	eax, 0xffffffef
0x6adf:	cmp	al, 0x63
0x6ae1:	mov	eax, 0x54
0x6ae6:	cmove	ebx, eax
0x6ae9:	nop	dword ptr [rax]
0x6af0:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6af7:	je	0x6b02


0x6af0:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6af7:	je	0x6b02


0x71d0:	mov	rax, qword ptr [rbp - 0x3c8]
0x71d7:	mov	edi, dword ptr [rbp - 0x424]
0x71dd:	movsxd	rbx, ecx
0x71e0:	add	rbx, r14
0x71e3:	mov	dword ptr [rax], edi
0x71e5:	jmp	0x6e34


0x69a2:	cmp	rbx, 0x7ffffffe
0x69a9:	ja	0x71f0


0x6b02:	mov	rax, qword ptr [rbp - 0x420]
0x6b09:	test	rax, rax
0x6b0c:	je	0x6b16


0x6af9:	test	r15, r15
0x6afc:	jne	0x72ac


0x69af:	lea	rsi, [r12 + r12]
0x69b3:	lea	edx, [rcx + 2]
0x69b6:	test	r12, r12
0x69b9:	mov	rax, -1
0x69c0:	cmovns	rax, rsi
0x69c4:	add	rdx, r14
0x69c7:	jb	0x7488


0x71f0:	cmp	r15, qword ptr [rbp - 0x3e8]
0x71f7:	je	0x7202


0x6b16:	mov	rax, qword ptr [rbp - 0x408]
0x6b1d:	mov	rdi, qword ptr [rbp - 0x2b8]
0x6b24:	add	rax, 0x20
0x6b28:	cmp	rdi, rax
0x6b2b:	je	0x6b32


0x6b0e:	mov	rdi, rax
0x6b11:	call	0x1810


0x72ac:	mov	rdi, r15
0x72af:	call	0x1810


0x7488:	cmp	r12, -1
0x748c:	je	0x68b0


0x69cd:	cmp	rax, rdx
0x69d0:	cmovb	rax, rdx
0x69d4:	cmp	r12, rax
0x69d7:	jae	0x68b0


0x7202:	mov	rax, qword ptr [rbp - 0x420]
0x7209:	test	rax, rax
0x720c:	je	0x7216


0x71f9:	test	r15, r15
0x71fc:	jne	0x72b9


0x6b32:	mov	rax, qword ptr [rbp - 0x410]
0x6b39:	mov	rdi, qword ptr [rbp - 0x3a8]
0x6b40:	add	rax, 0x10
0x6b44:	cmp	rdi, rax
0x6b47:	je	0x6b4e


0x6b2d:	call	0x1810


0x7492:	jmp	0x6511


0x69dd:	test	r12, r12
0x69e0:	js	0x6511


0x7216:	mov	rax, qword ptr [rbp - 0x408]
0x721d:	mov	rdi, qword ptr [rbp - 0x2b8]
0x7224:	add	rax, 0x20
0x7228:	cmp	rdi, rax
0x722b:	je	0x7232


0x720e:	mov	rdi, rax
0x7211:	call	0x1810


0x72b9:	mov	rdi, r15
0x72bc:	call	0x1810


0x6b4e:	mov	rax, qword ptr [rbp - 0x3c8]
0x6b55:	xor	r15d, r15d
0x6b58:	mov	dword ptr [rax], ebx
0x6b5a:	jmp	0x657f


0x6b49:	call	0x1810


0x6511:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6518:	je	0x6523


0x69e6:	cmp	rsi, rax
0x69e9:	mov	r12, rsi
0x69ec:	jae	0x69fb


0x7232:	mov	rax, qword ptr [rbp - 0x410]
0x7239:	mov	rdi, qword ptr [rbp - 0x3a8]
0x7240:	add	rax, 0x10
0x7244:	cmp	rdi, rax
0x7247:	je	0x724e


0x722d:	call	0x1810


0x69ee:	cmp	rax, -1
0x69f2:	je	0x6511


0x69fb:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6a02:	sete	bl
0x6a05:	test	r15, r15
0x6a08:	je	0x6d90


0x724e:	mov	rax, qword ptr [rbp - 0x3c8]
0x7255:	xor	r15d, r15d
0x7258:	mov	dword ptr [rax], 0x4b
0x725e:	jmp	0x657f


0x7249:	call	0x1810


0x69f8:	mov	r12, rax
0x69fb:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6a02:	sete	bl
0x6a05:	test	r15, r15
0x6a08:	je	0x6d90


0x6d90:	mov	rdi, r12
0x6d93:	call	0x1a50


0x6a0e:	test	bl, bl
0x6a10:	jne	0x6d90


0x6a16:	mov	rsi, r12
0x6a19:	mov	rdi, r15
0x6a1c:	call	0x1aa0


0x6a21:	test	rax, rax
0x6a24:	je	0x6511


0x6a2a:	mov	r15, rax
0x6a2d:	jmp	0x68b0


0x6d98:	test	rax, rax
0x6d9b:	mov	rcx, rax
0x6d9e:	je	0x6511


0x6da4:	test	r14, r14
0x6da7:	je	0x6e60


0x6e60:	mov	r15, rcx
0x6e63:	jmp	0x68b0


0x6dad:	test	bl, bl
0x6daf:	je	0x6e60


0x6db5:	mov	rsi, r15
0x6db8:	mov	rdx, r14
0x6dbb:	mov	rdi, rax
0x6dbe:	call	0x1a00


0x6dc3:	mov	r15, rax
0x6dc6:	jmp	0x68b0


0x72c1:	jmp	0x7202


0x72b4:	jmp	0x6b02


0x6d16:	add	rsp, 0x20
0x6d1a:	mov	r10, qword ptr [rbp - 0x430]
0x6d21:	jmp	0x6966


0x6966:	mov	ecx, dword ptr [rbp - 0x3bc]
0x696c:	test	ecx, ecx
0x696e:	js	0x6aac


0x703e:	mov	r10, qword ptr [rbp - 0x430]
0x7045:	jmp	0x6966


0x6c53:	pop	r8
0x6c55:	mov	r10, qword ptr [rbp - 0x430]
0x6c5c:	pop	r9
0x6c5e:	jmp	0x6966


0x6a95:	pop	rdx
0x6a96:	pop	rcx
0x6a97:	mov	ecx, dword ptr [rbp - 0x3bc]
0x6a9d:	mov	r10, qword ptr [rbp - 0x430]
0x6aa4:	test	ecx, ecx
0x6aa6:	jns	0x6974


0x6bd2:	add	rsp, 0x30
0x6bd6:	mov	r10, qword ptr [rbp - 0x430]
0x6bdd:	jmp	0x6966


0x4550:	sub	rsp, 8
0x4554:	mov	rcx, rbp
0x4557:	mov	rsi, r13
0x455a:	push	qword ptr [rsp + 0x68]
0x455e:	push	qword ptr [rsp + 0x78]
0x4562:	mov	rdi, r14
0x4565:	push	0
0x4567:	mov	r9d, dword ptr [rsp + 0x98]
0x456f:	mov	r8d, dword ptr [rsp + 0x28]
0x4574:	mov	rdx, qword ptr [rsp + 0x30]
0x4579:	and	r9d, 0xfffffffd
0x457d:	call	0x39b0


0x4582:	add	rsp, 0x20
0x4586:	mov	r15, rax
0x4589:	mov	rbx, qword ptr [rsp + 0xa8]
0x4591:	xor	rbx, qword ptr fs:[0x28]
0x459a:	mov	rax, r15
0x459d:	jne	0x4ba3


0x45a3:	add	rsp, 0xb8
0x45aa:	pop	rbx
0x45ab:	pop	rbp
0x45ac:	pop	r12
0x45ae:	pop	r13
0x45b0:	pop	r14
0x45b2:	pop	r15
0x45b4:	ret	


0x4ba3:	call	0x1920


0x4b4d:	sub	rsp, 8
0x4b51:	mov	r8d, 5
0x4b57:	mov	rcx, r11
0x4b5a:	push	qword ptr [rsp + 0x68]
0x4b5e:	push	qword ptr [rsp + 0x78]
0x4b62:	mov	rdi, r14
0x4b65:	push	qword ptr [rsp + 0x38]
0x4b69:	mov	r9d, dword ptr [rsp + 0x98]
0x4b71:	mov	rdx, qword ptr [rsp + 0x30]
0x4b76:	mov	rsi, qword ptr [rsp + 0x70]
0x4b7b:	call	0x39b0


0x4b80:	add	rsp, 0x20
0x4b84:	mov	r15, rax
0x4b87:	jmp	0x4589


0x4589:	mov	rbx, qword ptr [rsp + 0xa8]
0x4591:	xor	rbx, qword ptr fs:[0x28]
0x459a:	mov	rax, r15
0x459d:	jne	0x4ba3


0x17e0:	push	qword ptr [rip + 0x2095ea]
0x17e6:	jmp	qword ptr [rip + 0x2095ec]


0x17ec:	nop	dword ptr [rax]


0x17f6:	push	0
0x17fb:	jmp	0x17e0


0x1806:	push	1
0x180b:	jmp	0x17e0


0x1816:	push	2
0x181b:	jmp	0x17e0


0x1826:	push	3
0x182b:	jmp	0x17e0


0x1836:	push	4
0x183b:	jmp	0x17e0


0x1846:	push	5
0x184b:	jmp	0x17e0


0x1856:	push	6
0x185b:	jmp	0x17e0


0x1866:	push	7
0x186b:	jmp	0x17e0


0x1876:	push	8
0x187b:	jmp	0x17e0


0x1886:	push	9
0x188b:	jmp	0x17e0


0x1896:	push	0xa
0x189b:	jmp	0x17e0


0x18a6:	push	0xb
0x18ab:	jmp	0x17e0


0x18b6:	push	0xc
0x18bb:	jmp	0x17e0


0x18c6:	push	0xd
0x18cb:	jmp	0x17e0


0x18d6:	push	0xe
0x18db:	jmp	0x17e0


0x18e6:	push	0xf
0x18eb:	jmp	0x17e0


0x18f6:	push	0x10
0x18fb:	jmp	0x17e0


0x1906:	push	0x11
0x190b:	jmp	0x17e0


0x1916:	push	0x12
0x191b:	jmp	0x17e0


0x1926:	push	0x13
0x192b:	jmp	0x17e0


0x1936:	push	0x14
0x193b:	jmp	0x17e0


0x1946:	push	0x15
0x194b:	jmp	0x17e0


0x1956:	push	0x16
0x195b:	jmp	0x17e0


0x1966:	push	0x17
0x196b:	jmp	0x17e0


0x1976:	push	0x18
0x197b:	jmp	0x17e0


0x1986:	push	0x19
0x198b:	jmp	0x17e0


0x1996:	push	0x1a
0x199b:	jmp	0x17e0


0x19a6:	push	0x1b
0x19ab:	jmp	0x17e0


0x19b6:	push	0x1c
0x19bb:	jmp	0x17e0


0x19c0:	jmp	qword ptr [rip + 0x209502]




0x19c6:	push	0x1d
0x19cb:	jmp	0x17e0


0x19d6:	push	0x1e
0x19db:	jmp	0x17e0


0x19e6:	push	0x1f
0x19eb:	jmp	0x17e0


0x19f6:	push	0x20
0x19fb:	jmp	0x17e0


0x1a06:	push	0x21
0x1a0b:	jmp	0x17e0


0x1a16:	push	0x22
0x1a1b:	jmp	0x17e0


0x1a26:	push	0x23
0x1a2b:	jmp	0x17e0


0x1a36:	push	0x24
0x1a3b:	jmp	0x17e0


0x1a46:	push	0x25
0x1a4b:	jmp	0x17e0


0x1a56:	push	0x26
0x1a5b:	jmp	0x17e0


0x1a66:	push	0x27
0x1a6b:	jmp	0x17e0


0x1a76:	push	0x28
0x1a7b:	jmp	0x17e0


0x1a86:	push	0x29
0x1a8b:	jmp	0x17e0


0x1a96:	push	0x2a
0x1a9b:	jmp	0x17e0


0x1aa6:	push	0x2b
0x1aab:	jmp	0x17e0


0x1ab6:	push	0x2c
0x1abb:	jmp	0x17e0


0x1ac6:	push	0x2d
0x1acb:	jmp	0x17e0


0x1ad6:	push	0x2e
0x1adb:	jmp	0x17e0


0x1ae6:	push	0x2f
0x1aeb:	jmp	0x17e0


0x1af6:	push	0x30
0x1afb:	jmp	0x17e0


0x1b06:	push	0x31
0x1b0b:	jmp	0x17e0


0x1b16:	push	0x32
0x1b1b:	jmp	0x17e0


0x1b26:	push	0x33
0x1b2b:	jmp	0x17e0


0x1b36:	push	0x34
0x1b3b:	jmp	0x17e0


0x1b46:	push	0x35
0x1b4b:	jmp	0x17e0


0x1b56:	push	0x36
0x1b5b:	jmp	0x17e0


0x1b66:	push	0x37
0x1b6b:	jmp	0x17e0


0x1b70:	jmp	qword ptr [rip + 0x20942a]




0x1b76:	push	0x38
0x1b7b:	jmp	0x17e0


0x1b80:	jmp	qword ptr [rip + 0x209422]




0x1b86:	push	0x39
0x1b8b:	jmp	0x17e0


0x1b90:	jmp	qword ptr [rip + 0x20941a]




0x1b96:	push	0x3a
0x1b9b:	jmp	0x17e0


0x1ba6:	push	0x3b
0x1bab:	jmp	0x17e0


0x1bb6:	push	0x3c
0x1bbb:	jmp	0x17e0


0x1f3e:	nop	


0x1f6a:	hlt	


0x1f6b:	nop	dword ptr [rax + rax]


0x1fa2:	nop	dword ptr [rax]
0x1fa6:	nop	word ptr cs:[rax + rax]


0x1ff2:	nop	dword ptr [rax]
0x1ff6:	nop	word ptr cs:[rax + rax]


0x203a:	nop	word ptr [rax + rax]


0x204a:	nop	word ptr [rax + rax]


0x22c2:	nop	dword ptr [rax]
0x22c6:	nop	word ptr cs:[rax + rax]


0x2336:	nop	word ptr cs:[rax + rax]


0x23b7:	nop	word ptr [rax + rax]


0x2972:	nop	dword ptr [rax]
0x2976:	nop	word ptr cs:[rax + rax]


0x314a:	nop	word ptr [rax + rax]


0x357a:	nop	word ptr [rax + rax]


0x3628:	nop	dword ptr [rax + rax]


0x363c:	nop	dword ptr [rax]


0x364b:	nop	dword ptr [rax + rax]


0x3658:	nop	dword ptr [rax + rax]


0x3668:	nop	dword ptr [rax + rax]


0x3714:	nop	word ptr cs:[rax + rax]
0x371e:	nop	


0x381c:	nop	dword ptr [rax]


0x38bf:	nop	


0x39a7:	nop	word ptr [rax + rax]


0x3a43:	mov	byte ptr [rsp + 0xe], 1
0x3a48:	mov	byte ptr [rsp + 0x7c], 0
0x3a4d:	xor	r12d, r12d
0x3a50:	mov	qword ptr [rsp + 0x50], 0
0x3a59:	mov	byte ptr [rsp + 0xf], 1
0x3a5e:	mov	byte ptr [rsp + 0xd], 0
0x3a63:	lea	rax, [rip + 0x52db]
0x3a6a:	mov	qword ptr [rsp + 0x18], 1
0x3a73:	xor	r15d, r15d
0x3a76:	mov	dword ptr [rsp + 8], 2
0x3a7e:	mov	qword ptr [rsp + 0x48], rax
0x3a83:	xor	r11d, r11d
0x3a86:	mov	rax, rbp
0x3a89:	mov	r8d, r12d
0x3a8c:	mov	rbp, r11
0x3a8f:	mov	r11, rax
0x3a92:	nop	word ptr [rax + rax]
0x3a98:	cmp	r11, rbp
0x3a9b:	setne	r12b
0x3a9f:	cmp	r11, -1
0x3aa3:	jne	0x3ab2


0x3aa5:	mov	rax, qword ptr [rsp + 0x10]
0x3aaa:	cmp	byte ptr [rax + rbp], 0
0x3aae:	setne	r12b
0x3ab2:	test	r12b, r12b
0x3ab5:	je	0x4110


0x3ab2:	test	r12b, r12b
0x3ab5:	je	0x4110


0x4110:	cmp	dword ptr [rsp + 8], 2
0x4115:	movzx	ebx, byte ptr [rsp + 0xf]
0x411a:	mov	r12d, r8d
0x411d:	mov	rbp, r11
0x4120:	sete	dl
0x4123:	mov	eax, ebx
0x4125:	test	r15, r15
0x4128:	sete	cl
0x412b:	and	eax, edx
0x412d:	and	al, cl
0x412f:	jne	0x4b96


0x3abb:	cmp	dword ptr [rsp + 8], 2
0x3ac0:	mov	rdi, qword ptr [rsp + 0x10]
0x3ac5:	lea	r9, [rdi + rbp]
0x3ac9:	setne	al
0x3acc:	and	al, byte ptr [rsp + 0xd]
0x3ad0:	mov	r10d, eax
0x3ad3:	je	0x3b80


0x4135:	mov	eax, ebx
0x4137:	xor	eax, 1
0x413a:	and	dl, al
0x413c:	je	0x4aac


0x4b96:	mov	dword ptr [rsp + 8], 2
0x4b9e:	jmp	0x4539


0x3b80:	movzx	ebx, byte ptr [r9]
0x3b84:	cmp	bl, 0x7e
0x3b87:	ja	0x3ea8


0x3ad9:	mov	rax, qword ptr [rsp + 0x18]
0x3ade:	test	rax, rax
0x3ae1:	je	0x3f10


0x4aac:	mov	rbx, qword ptr [rsp + 0x48]
0x4ab1:	test	rbx, rbx
0x4ab4:	je	0x4ae2


0x4142:	cmp	byte ptr [rsp + 0x7c], 0
0x4147:	je	0x4aaa


0x4539:	cmp	byte ptr [rsp + 0xd], 0
0x453e:	je	0x4550


0x3b8d:	lea	rcx, [rip + 0x5238]
0x3b94:	movzx	edx, bl
0x3b97:	movsxd	rax, dword ptr [rcx + rdx*4]
0x3b9b:	add	rax, rcx
0x3b9e:	jmp	rax


0x3ea8:	cmp	qword ptr [rsp + 0x58], 1
0x3eae:	jne	0x4258


0x3f10:	movzx	ebx, byte ptr [r9]
0x3f14:	cmp	bl, 0x7e
0x3f17:	ja	0x3ea0


0x3ae7:	cmp	r11, -1
0x3aeb:	lea	rbx, [rbp + rax]
0x3af0:	jne	0x3b20


0x4ae2:	cmp	r13, r15
0x4ae5:	jbe	0x4589


0x4ab6:	test	al, al
0x4ab8:	je	0x4ae2


0x4aaa:	mov	eax, edx
0x4aac:	mov	rbx, qword ptr [rsp + 0x48]
0x4ab1:	test	rbx, rbx
0x4ab4:	je	0x4ae2


0x414d:	cmp	byte ptr [rsp + 0xe], 0
0x4152:	jne	0x4b4d


0x4540:	test	al, al
0x4542:	mov	eax, 4
0x4547:	cmove	eax, dword ptr [rsp + 8]
0x454c:	mov	dword ptr [rsp + 8], eax


0x3eb4:	mov	qword ptr [rsp + 0x38], r11
0x3eb9:	mov	byte ptr [rsp + 0x30], r8b
0x3ebe:	mov	byte ptr [rsp + 0x28], r10b
0x3ec3:	call	0x1b90


0x4258:	lea	rax, [rsp + 0xa0]
0x4260:	cmp	r11, -1
0x4264:	mov	qword ptr [rsp + 0xa0], 0
0x4270:	mov	qword ptr [rsp + 0x28], rax
0x4275:	jne	0x42a4


0x3f19:	lea	rcx, [rip + 0x50a8]
0x3f20:	movzx	edx, bl
0x3f23:	movsxd	rax, dword ptr [rcx + rdx*4]
0x3f27:	add	rax, rcx
0x3f2a:	jmp	rax


0x3ea0:	xor	r10d, r10d
0x3ea3:	nop	dword ptr [rax + rax]
0x3ea8:	cmp	qword ptr [rsp + 0x58], 1
0x3eae:	jne	0x4258


0x3af2:	cmp	rax, 1
0x3af6:	jbe	0x3b20


0x3b20:	cmp	rbx, r11
0x3b23:	mov	byte ptr [rsp + 0x28], r10b
0x3b28:	ja	0x40e0


0x4aeb:	mov	byte ptr [r14 + r15], 0
0x4af0:	jmp	0x4589


0x4aba:	movzx	ecx, byte ptr [rbx]
0x4abd:	mov	rax, rbx
0x4ac0:	test	cl, cl
0x4ac2:	je	0x4ae2


0x4158:	test	r13, r13
0x415b:	sete	al
0x415e:	cmp	qword ptr [rsp + 0x50], 0
0x4164:	setne	dl
0x4167:	and	al, dl
0x4169:	je	0x4b8c


0x4277:	mov	rdi, qword ptr [rsp + 0x10]
0x427c:	mov	byte ptr [rsp + 0x40], r8b
0x4281:	mov	byte ptr [rsp + 0x38], r10b
0x4286:	mov	qword ptr [rsp + 0x30], r9
0x428b:	call	0x1910


0x42a4:	lea	rax, [rsp + 0x9c]
0x42ac:	xor	ecx, ecx
0x42ae:	mov	byte ptr [rsp + 0x7e], bl
0x42b2:	mov	byte ptr [rsp + 0x7d], r8b
0x42b7:	mov	rbx, rcx
0x42ba:	mov	qword ptr [rsp + 0x88], r9
0x42c2:	mov	qword ptr [rsp + 0x38], rax
0x42c7:	mov	byte ptr [rsp + 0x7f], r10b
0x42cc:	mov	qword ptr [rsp + 0x80], r15
0x42d4:	mov	qword ptr [rsp + 0x40], r14
0x42d9:	mov	qword ptr [rsp + 0x70], r13
0x42de:	mov	qword ptr [rsp + 0x30], r11
0x42e3:	mov	rax, qword ptr [rsp + 0x10]
0x42e8:	lea	r14, [rbp + rbx]
0x42ed:	mov	rdx, qword ptr [rsp + 0x30]
0x42f2:	mov	rcx, qword ptr [rsp + 0x28]
0x42f7:	mov	rdi, qword ptr [rsp + 0x38]
0x42fc:	lea	r13, [rax + r14]
0x4300:	sub	rdx, r14
0x4303:	mov	rsi, r13
0x4306:	call	0x5ec0


0x3af8:	mov	byte ptr [rsp + 0x38], r8b
0x3afd:	mov	byte ptr [rsp + 0x30], r10b
0x3b02:	mov	qword ptr [rsp + 0x28], r9
0x3b07:	call	0x1910


0x3b2e:	mov	rdx, qword ptr [rsp + 0x18]
0x3b33:	mov	rsi, qword ptr [rsp + 0x48]
0x3b38:	mov	rdi, r9
0x3b3b:	mov	qword ptr [rsp + 0x40], r11
0x3b40:	mov	byte ptr [rsp + 0x38], r8b
0x3b45:	mov	qword ptr [rsp + 0x30], r9
0x3b4a:	call	0x19c0


0x40e0:	xor	r10d, r10d
0x40e3:	jmp	0x3b80


0x4ac4:	mov	rdx, r15
0x4ac7:	sub	rax, r15
0x4aca:	cmp	r13, rdx
0x4acd:	jbe	0x4ad3


0x4b8c:	movzx	eax, byte ptr [rsp + 0x7c]
0x4b91:	jmp	0x4aac


0x416f:	mov	r13, qword ptr [rsp + 0x50]
0x4174:	lea	rbx, [rip + 0x4bca]
0x417b:	mov	byte ptr [r14], 0x27
0x417f:	mov	dword ptr [rsp + 8], 2
0x4187:	mov	r15d, 1
0x418d:	mov	qword ptr [rsp + 0x18], 1
0x4196:	mov	byte ptr [rsp + 0xf], 0
0x419b:	mov	qword ptr [rsp + 0x48], rbx
0x41a0:	mov	byte ptr [rsp + 0x7c], al
0x41a4:	jmp	0x3a83


0x4ad3:	add	rdx, 1
0x4ad7:	movzx	ecx, byte ptr [rax + rdx]
0x4adb:	test	cl, cl
0x4add:	jne	0x4aca


0x4acf:	mov	byte ptr [r14 + rdx], cl
0x4ad3:	add	rdx, 1
0x4ad7:	movzx	ecx, byte ptr [rax + rdx]
0x4adb:	test	cl, cl
0x4add:	jne	0x4aca


0x3a83:	xor	r11d, r11d
0x3a86:	mov	rax, rbp
0x3a89:	mov	r8d, r12d
0x3a8c:	mov	rbp, r11
0x3a8f:	mov	r11, rax
0x3a92:	nop	word ptr [rax + rax]
0x3a98:	cmp	r11, rbp
0x3a9b:	setne	r12b
0x3a9f:	cmp	r11, -1
0x3aa3:	jne	0x3ab2


0x4adf:	mov	r15, rdx
0x4ae2:	cmp	r13, r15
0x4ae5:	jbe	0x4589


0x4aca:	cmp	r13, rdx
0x4acd:	jbe	0x4ad3


0x3b4f:	test	eax, eax
0x3b51:	mov	r9, qword ptr [rsp + 0x30]
0x3b56:	movzx	r8d, byte ptr [rsp + 0x38]
0x3b5c:	mov	r11, qword ptr [rsp + 0x40]
0x3b61:	jne	0x40e0


0x3b67:	cmp	byte ptr [rsp + 0xf], 0
0x3b6c:	movzx	r10d, byte ptr [rsp + 0x28]
0x3b72:	jne	0x4af5


0x4af5:	cmp	dword ptr [rsp + 8], 2
0x4afa:	movzx	ebx, byte ptr [rsp + 0xf]
0x4aff:	mov	rbp, r11
0x4b02:	sete	al
0x4b05:	mov	byte ptr [rsp + 0xd], bl
0x4b09:	jmp	0x4539


0x430b:	test	rax, rax
0x430e:	mov	r15, rax
0x4311:	je	0x4361


0x4361:	mov	edx, r12d
0x4364:	mov	rdi, rbx
0x4367:	movzx	r8d, byte ptr [rsp + 0x7d]
0x436d:	xor	edx, 1
0x4370:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4375:	movzx	r10d, byte ptr [rsp + 0x7f]
0x437b:	and	dl, byte ptr [rsp + 0xd]
0x437f:	mov	r15, qword ptr [rsp + 0x80]
0x4387:	mov	r14, qword ptr [rsp + 0x40]
0x438c:	mov	r13, qword ptr [rsp + 0x70]
0x4391:	mov	r11, qword ptr [rsp + 0x30]
0x4396:	cmp	rdi, 1
0x439a:	jbe	0x499b


0x4313:	cmp	rax, -1
0x4317:	je	0x4935


0x499b:	mov	eax, edx
0x499d:	jmp	0x3ef7


0x43a0:	mov	rcx, rdi
0x43a3:	xor	esi, esi
0x43a5:	movzx	r9d, byte ptr [rsp + 0xf]
0x43ab:	add	rcx, rbp
0x43ae:	mov	rdi, qword ptr [rsp + 0x10]
0x43b3:	jmp	0x446e


0x4935:	mov	rdi, rbx
0x4938:	movzx	r8d, byte ptr [rsp + 0x7d]
0x493e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4943:	movzx	r10d, byte ptr [rsp + 0x7f]
0x4949:	mov	r15, qword ptr [rsp + 0x80]
0x4951:	xor	r12d, r12d
0x4954:	mov	r14, qword ptr [rsp + 0x40]
0x4959:	mov	r13, qword ptr [rsp + 0x70]
0x495e:	mov	r11, qword ptr [rsp + 0x30]
0x4963:	movzx	edx, byte ptr [rsp + 0xd]
0x4968:	jmp	0x4396


0x431d:	cmp	rax, -2
0x4321:	je	0x48c1


0x3ef7:	test	al, al
0x3ef9:	jne	0x4891


0x446e:	test	dl, dl
0x4470:	jne	0x43c0


0x4396:	cmp	rdi, 1
0x439a:	jbe	0x499b


0x48c1:	mov	r11, qword ptr [rsp + 0x30]
0x48c6:	mov	rsi, r14
0x48c9:	mov	rcx, r13
0x48cc:	mov	rax, rbx
0x48cf:	mov	rdi, rbx
0x48d2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x48d8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x48dd:	mov	r9, qword ptr [rsp + 0x88]
0x48e5:	cmp	rsi, r11
0x48e8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x48ee:	mov	r15, qword ptr [rsp + 0x80]
0x48f6:	mov	r14, qword ptr [rsp + 0x40]
0x48fb:	mov	r13, qword ptr [rsp + 0x70]
0x4900:	jae	0x4928


0x4327:	cmp	dword ptr [rsp + 8], 2
0x432c:	sete	al
0x432f:	and	al, byte ptr [rsp + 0xf]
0x4333:	jne	0x44d0


0x3eff:	cmp	dword ptr [rsp + 8], 2
0x3f04:	sete	dl
0x3f07:	jmp	0x3bd8


0x4891:	movzx	edx, byte ptr [rsp + 0xd]
0x4896:	xor	r12d, r12d
0x4899:	jmp	0x43a0


0x4476:	mov	eax, esi
0x4478:	xor	eax, 1
0x447b:	and	eax, r8d
0x447e:	test	r10b, r10b
0x4481:	je	0x4491


0x43c0:	cmp	dword ptr [rsp + 8], 2
0x43c5:	sete	al
0x43c8:	test	r9b, r9b
0x43cb:	jne	0x4880


0x4902:	cmp	byte ptr [rcx], 0
0x4905:	jne	0x4917


0x4928:	movzx	edx, byte ptr [rsp + 0xd]
0x492d:	xor	r12d, r12d
0x4930:	jmp	0x4396


0x4339:	mov	edi, dword ptr [rsp + 0x9c]
0x4340:	call	0x1b80


0x44d0:	cmp	r15, 1
0x44d4:	je	0x4339


0x3bd8:	cmp	byte ptr [rsp + 0xd], 1
0x3bdd:	jne	0x3cf2


0x4491:	add	rbp, 1
0x4495:	cmp	rbp, rcx
0x4498:	jae	0x3c1c


0x4483:	cmp	r13, r15
0x4486:	jbe	0x448d


0x43d1:	mov	esi, r8d
0x43d4:	xor	esi, 1
0x43d7:	and	al, sil
0x43da:	je	0x440b


0x4880:	movzx	ebx, byte ptr [rsp + 0xf]
0x4885:	mov	rbp, r11
0x4888:	mov	byte ptr [rsp + 0xd], bl
0x488c:	jmp	0x4539


0x4907:	jmp	0x4928


0x4917:	add	rax, 1
0x491b:	lea	rdx, [rbp + rax]
0x4920:	cmp	r11, rdx
0x4923:	ja	0x4910


0x44da:	mov	rdi, qword ptr [rsp + 0x10]
0x44df:	lea	rcx, [rdi + r15]
0x44e3:	lea	rdx, [rdi + r14 + 1]
0x44e8:	lea	r8, [rcx + r14]
0x44ec:	jmp	0x44fd


0x3be3:	test	dl, dl
0x3be5:	jne	0x3cf2


0x3cf2:	cmp	byte ptr [rsp + 0xf], 0
0x3cf7:	jne	0x3beb


0x449e:	test	al, al
0x44a0:	je	0x489e


0x3c1c:	test	al, al
0x3c1e:	je	0x3c40


0x448d:	add	r15, 1
0x4491:	add	rbp, 1
0x4495:	cmp	rbp, rcx
0x4498:	jae	0x3c1c


0x4488:	mov	byte ptr [r14 + r15], 0x5c
0x448d:	add	r15, 1
0x4491:	add	rbp, 1
0x4495:	cmp	rbp, rcx
0x4498:	jae	0x3c1c


0x440b:	cmp	r13, r15
0x440e:	jbe	0x4415


0x43dc:	cmp	r13, r15
0x43df:	jbe	0x43e6


0x4925:	mov	rdi, rax
0x4928:	movzx	edx, byte ptr [rsp + 0xd]
0x492d:	xor	r12d, r12d
0x4930:	jmp	0x4396


0x4910:	cmp	byte ptr [r9 + rax], 0
0x4915:	je	0x4925


0x44fd:	movzx	ecx, byte ptr [rdx]
0x4500:	sub	ecx, 0x5b
0x4503:	cmp	cl, 0x21
0x4506:	ja	0x44f0


0x3beb:	mov	rsi, qword ptr [rsp + 0x20]
0x3bf0:	test	rsi, rsi
0x3bf3:	je	0x3c09


0x3cfd:	jmp	0x3c09


0x489e:	xor	r10d, r10d
0x48a1:	jmp	0x445d


0x44a6:	cmp	r13, r15
0x44a9:	jbe	0x44b0


0x3c40:	cmp	r15, r13
0x3c43:	jae	0x3c49


0x3c20:	cmp	r13, r15
0x3c23:	jbe	0x3c2a


0x4415:	lea	rax, [r15 + 1]
0x4419:	cmp	r13, rax
0x441c:	jbe	0x442b


0x4410:	mov	byte ptr [r14 + r15], 0x5c
0x4415:	lea	rax, [r15 + 1]
0x4419:	cmp	r13, rax
0x441c:	jbe	0x442b


0x43e6:	lea	rsi, [r15 + 1]
0x43ea:	cmp	r13, rsi
0x43ed:	jbe	0x43f5


0x43e1:	mov	byte ptr [r14 + r15], 0x27
0x43e6:	lea	rsi, [r15 + 1]
0x43ea:	cmp	r13, rsi
0x43ed:	jbe	0x43f5


0x4508:	mov	esi, 1
0x450d:	shl	rsi, cl
0x4510:	mov	rcx, rsi
0x4513:	movabs	rsi, 0x20000002b
0x451d:	test	rcx, rsi
0x4520:	je	0x44f0


0x44f0:	add	rdx, 1
0x44f4:	cmp	r8, rdx
0x44f7:	je	0x4339


0x3c09:	test	r10b, r10b
0x3c0c:	jne	0x3d53


0x3bf5:	mov	edx, ebx
0x3bf7:	shr	dl, 5
0x3bfa:	movzx	edx, dl
0x3bfd:	mov	edx, dword ptr [rsi + rdx*4]
0x3c00:	bt	edx, ebx
0x3c03:	jb	0x3d53


0x445d:	cmp	r13, r15
0x4460:	jbe	0x4466


0x44b0:	lea	rax, [r15 + 1]
0x44b4:	cmp	r13, rax
0x44b7:	jbe	0x44bf


0x44ab:	mov	byte ptr [r14 + r15], 0x27
0x44b0:	lea	rax, [r15 + 1]
0x44b4:	cmp	r13, rax
0x44b7:	jbe	0x44bf


0x3c45:	mov	byte ptr [r14 + r15], bl
0x3c49:	movzx	edi, byte ptr [rsp + 0xe]
0x3c4e:	add	r15, 1
0x3c52:	mov	eax, 0
0x3c57:	test	r12b, r12b
0x3c5a:	cmove	edi, eax
0x3c5d:	mov	byte ptr [rsp + 0xe], dil
0x3c62:	jmp	0x3a98


0x3c49:	movzx	edi, byte ptr [rsp + 0xe]
0x3c4e:	add	r15, 1
0x3c52:	mov	eax, 0
0x3c57:	test	r12b, r12b
0x3c5a:	cmove	edi, eax
0x3c5d:	mov	byte ptr [rsp + 0xe], dil
0x3c62:	jmp	0x3a98


0x3c2a:	lea	rax, [r15 + 1]
0x3c2e:	cmp	r13, rax
0x3c31:	jbe	0x3c39


0x3c25:	mov	byte ptr [r14 + r15], 0x27
0x3c2a:	lea	rax, [r15 + 1]
0x3c2e:	cmp	r13, rax
0x3c31:	jbe	0x3c39


0x442b:	lea	rax, [r15 + 2]
0x442f:	cmp	r13, rax
0x4432:	jbe	0x4444


0x441e:	mov	eax, ebx
0x4420:	shr	al, 6
0x4423:	add	eax, 0x30
0x4426:	mov	byte ptr [r14 + r15 + 1], al
0x442b:	lea	rax, [r15 + 2]
0x442f:	cmp	r13, rax
0x4432:	jbe	0x4444


0x43f5:	lea	rsi, [r15 + 2]
0x43f9:	cmp	r13, rsi
0x43fc:	jbe	0x4404


0x43ef:	mov	byte ptr [r14 + r15 + 1], 0x24
0x43f5:	lea	rsi, [r15 + 2]
0x43f9:	cmp	r13, rsi
0x43fc:	jbe	0x4404


0x4522:	mov	r14, qword ptr [rsp + 0x40]
0x4527:	mov	r13, qword ptr [rsp + 0x70]
0x452c:	mov	rbp, qword ptr [rsp + 0x30]
0x4531:	mov	dword ptr [rsp + 8], 2
0x4539:	cmp	byte ptr [rsp + 0xd], 0
0x453e:	je	0x4550


0x3c12:	xor	eax, 1
0x3c15:	add	rbp, 1
0x3c19:	and	eax, r8d
0x3c1c:	test	al, al
0x3c1e:	je	0x3c40


0x3d53:	cmp	dword ptr [rsp + 8], 2
0x3d58:	sete	dl
0x3d5b:	cmp	byte ptr [rsp + 0xf], 0
0x3d60:	mov	eax, edx
0x3d62:	jne	0x45b8


0x4466:	movzx	ebx, byte ptr [rdi + rbp]
0x446a:	add	r15, 1
0x446e:	test	dl, dl
0x4470:	jne	0x43c0


0x4462:	mov	byte ptr [r14 + r15], bl
0x4466:	movzx	ebx, byte ptr [rdi + rbp]
0x446a:	add	r15, 1
0x446e:	test	dl, dl
0x4470:	jne	0x43c0


0x44bf:	add	r15, 2
0x44c3:	xor	r10d, r10d
0x44c6:	xor	r8d, r8d
0x44c9:	jmp	0x445d


0x44b9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x44bf:	add	r15, 2
0x44c3:	xor	r10d, r10d
0x44c6:	xor	r8d, r8d
0x44c9:	jmp	0x445d


0x3a98:	cmp	r11, rbp
0x3a9b:	setne	r12b
0x3a9f:	cmp	r11, -1
0x3aa3:	jne	0x3ab2


0x3c39:	add	r15, 2
0x3c3d:	xor	r8d, r8d
0x3c40:	cmp	r15, r13
0x3c43:	jae	0x3c49


0x3c33:	mov	byte ptr [r14 + r15 + 1], 0x27
0x3c39:	add	r15, 2
0x3c3d:	xor	r8d, r8d
0x3c40:	cmp	r15, r13
0x3c43:	jae	0x3c49


0x4444:	and	ebx, 7
0x4447:	add	rbp, 1
0x444b:	add	r15, 3
0x444f:	add	ebx, 0x30
0x4452:	cmp	rbp, rcx
0x4455:	jae	0x3c40


0x4434:	mov	eax, ebx
0x4436:	shr	al, 3
0x4439:	and	eax, 7
0x443c:	add	eax, 0x30
0x443f:	mov	byte ptr [r14 + r15 + 2], al
0x4444:	and	ebx, 7
0x4447:	add	rbp, 1
0x444b:	add	r15, 3
0x444f:	add	ebx, 0x30
0x4452:	cmp	rbp, rcx
0x4455:	jae	0x3c40


0x4404:	add	r15, 3
0x4408:	mov	r8d, eax
0x440b:	cmp	r13, r15
0x440e:	jbe	0x4415


0x43fe:	mov	byte ptr [r14 + r15 + 2], 0x27
0x4404:	add	r15, 3
0x4408:	mov	r8d, eax
0x440b:	cmp	r13, r15
0x440e:	jbe	0x4415


0x3d68:	mov	eax, r8d
0x3d6b:	xor	eax, 1
0x3d6e:	and	al, dl
0x3d70:	je	0x3da1


0x45b8:	mov	rbp, r11
0x45bb:	jmp	0x4539


0x445b:	mov	esi, edx
0x445d:	cmp	r13, r15
0x4460:	jbe	0x4466


0x3da1:	cmp	r13, r15
0x3da4:	jbe	0x3dab


0x3d72:	cmp	r13, r15
0x3d75:	jbe	0x3d7c


0x3dab:	add	r15, 1
0x3daf:	add	rbp, 1
0x3db3:	jmp	0x3c40


0x3da6:	mov	byte ptr [r14 + r15], 0x5c
0x3dab:	add	r15, 1
0x3daf:	add	rbp, 1
0x3db3:	jmp	0x3c40


0x3d7c:	lea	rdx, [r15 + 1]
0x3d80:	cmp	r13, rdx
0x3d83:	jbe	0x3d8b


0x3d77:	mov	byte ptr [r14 + r15], 0x27
0x3d7c:	lea	rdx, [r15 + 1]
0x3d80:	cmp	r13, rdx
0x3d83:	jbe	0x3d8b


0x3d8b:	lea	rdx, [r15 + 2]
0x3d8f:	cmp	r13, rdx
0x3d92:	jbe	0x3d9a


0x3d85:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3d8b:	lea	rdx, [r15 + 2]
0x3d8f:	cmp	r13, rdx
0x3d92:	jbe	0x3d9a


0x3d9a:	add	r15, 3
0x3d9e:	mov	r8d, eax
0x3da1:	cmp	r13, r15
0x3da4:	jbe	0x3dab


0x3d94:	mov	byte ptr [r14 + r15 + 2], 0x27
0x3d9a:	add	r15, 3
0x3d9e:	mov	r8d, eax
0x3da1:	cmp	r13, r15
0x3da4:	jbe	0x3dab


0x4345:	mov	rdi, qword ptr [rsp + 0x28]
0x434a:	test	eax, eax
0x434c:	mov	eax, 0
0x4351:	cmove	r12d, eax
0x4355:	add	rbx, r15
0x4358:	call	0x1b70


0x435d:	test	eax, eax
0x435f:	je	0x42e3


0x42e3:	mov	rax, qword ptr [rsp + 0x10]
0x42e8:	lea	r14, [rbp + rbx]
0x42ed:	mov	rdx, qword ptr [rsp + 0x30]
0x42f2:	mov	rcx, qword ptr [rsp + 0x28]
0x42f7:	mov	rdi, qword ptr [rsp + 0x38]
0x42fc:	lea	r13, [rax + r14]
0x4300:	sub	rdx, r14
0x4303:	mov	rsi, r13
0x4306:	call	0x5ec0


0x3b0c:	movzx	r8d, byte ptr [rsp + 0x38]
0x3b12:	movzx	r10d, byte ptr [rsp + 0x30]
0x3b18:	mov	r11, rax
0x3b1b:	mov	r9, qword ptr [rsp + 0x28]
0x3b20:	cmp	rbx, r11
0x3b23:	mov	byte ptr [rsp + 0x28], r10b
0x3b28:	ja	0x40e0


0x4290:	movzx	r8d, byte ptr [rsp + 0x40]
0x4296:	movzx	r10d, byte ptr [rsp + 0x38]
0x429c:	mov	r11, rax
0x429f:	mov	r9, qword ptr [rsp + 0x30]
0x42a4:	lea	rax, [rsp + 0x9c]
0x42ac:	xor	ecx, ecx
0x42ae:	mov	byte ptr [rsp + 0x7e], bl
0x42b2:	mov	byte ptr [rsp + 0x7d], r8b
0x42b7:	mov	rbx, rcx
0x42ba:	mov	qword ptr [rsp + 0x88], r9
0x42c2:	mov	qword ptr [rsp + 0x38], rax
0x42c7:	mov	byte ptr [rsp + 0x7f], r10b
0x42cc:	mov	qword ptr [rsp + 0x80], r15
0x42d4:	mov	qword ptr [rsp + 0x40], r14
0x42d9:	mov	qword ptr [rsp + 0x70], r13
0x42de:	mov	qword ptr [rsp + 0x30], r11
0x42e3:	mov	rax, qword ptr [rsp + 0x10]
0x42e8:	lea	r14, [rbp + rbx]
0x42ed:	mov	rdx, qword ptr [rsp + 0x30]
0x42f2:	mov	rcx, qword ptr [rsp + 0x28]
0x42f7:	mov	rdi, qword ptr [rsp + 0x38]
0x42fc:	lea	r13, [rax + r14]
0x4300:	sub	rdx, r14
0x4303:	mov	rsi, r13
0x4306:	call	0x5ec0


0x3ec8:	mov	rcx, qword ptr [rax]
0x3ecb:	movzx	edx, bl
0x3ece:	movzx	r10d, byte ptr [rsp + 0x28]
0x3ed4:	movzx	r8d, byte ptr [rsp + 0x30]
0x3eda:	mov	r11, qword ptr [rsp + 0x38]
0x3edf:	mov	edi, 1
0x3ee4:	movzx	eax, word ptr [rcx + rdx*2]
0x3ee8:	and	ax, 0x4000
0x3eec:	setne	r12b
0x3ef0:	sete	al
0x3ef3:	and	al, byte ptr [rsp + 0xd]
0x3ef7:	test	al, al
0x3ef9:	jne	0x4891


0x3ba0:	xor	r10d, r10d
0x3ba3:	cmp	r11, 1
0x3ba7:	setne	al
0x3baa:	cmp	r11, -1
0x3bae:	jne	0x3bbc


0x3bb0:	mov	rax, qword ptr [rsp + 0x10]
0x3bb5:	cmp	byte ptr [rax + 1], 0
0x3bb9:	setne	al
0x3bbc:	cmp	dword ptr [rsp + 8], 2
0x3bc1:	sete	dl
0x3bc4:	test	al, al
0x3bc6:	je	0x3e18


0x3bbc:	cmp	dword ptr [rsp + 8], 2
0x3bc1:	sete	dl
0x3bc4:	test	al, al
0x3bc6:	je	0x3e18


0x3e18:	test	rbp, rbp
0x3e1b:	jne	0x3bcc


0x3bcc:	xor	r12d, r12d
0x3bcf:	xor	eax, eax
0x3bd1:	nop	dword ptr [rax]
0x3bd8:	cmp	byte ptr [rsp + 0xd], 1
0x3bdd:	jne	0x3cf2


0x3e21:	movzx	eax, byte ptr [rsp + 0xf]
0x3e26:	and	al, dl
0x3e28:	je	0x3bd8


0x3e2e:	mov	rbp, r11
0x3e31:	mov	dword ptr [rsp + 8], 2
0x3e39:	jmp	0x4539


0x4238:	cmp	byte ptr [rsp + 0xf], 0
0x423d:	jne	0x4a60


0x3c80:	cmp	eax, 5
0x3c83:	je	0x41f8


0x4243:	xor	r12d, r12d
0x4246:	xor	eax, eax
0x4248:	mov	ebx, 0x3f
0x424d:	jmp	0x3c09


0x4a60:	mov	rbp, r11
0x4a63:	movzx	eax, byte ptr [rsp + 0xf]
0x4a68:	jmp	0x4539


0x41f8:	test	byte ptr [rsp + 0x78], 4
0x41fd:	je	0x4220


0x3c89:	cmp	eax, 2
0x3c8c:	mov	ebx, 0x3f
0x3c91:	sete	dl
0x3c94:	xor	r12d, r12d
0x3c97:	xor	eax, eax
0x3c99:	jmp	0x3bd8


0x4220:	xor	edx, edx
0x4222:	xor	r12d, r12d
0x4225:	xor	eax, eax
0x4227:	mov	ebx, 0x3f
0x422c:	jmp	0x3bd8


0x41ff:	lea	rcx, [rbp + 2]
0x4203:	cmp	rcx, r11
0x4206:	jae	0x4220


0x4208:	mov	rax, qword ptr [rsp + 0x10]
0x420d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x4212:	je	0x49a2


0x49a2:	movzx	ebx, byte ptr [rax + rcx]
0x49a6:	cmp	bl, 0x3e
0x49a9:	ja	0x4220


0x49af:	movabs	rax, 0x7000a38200000000
0x49b9:	bt	rax, rbx
0x49bd:	jae	0x4220


0x49c3:	cmp	byte ptr [rsp + 0xf], 0
0x49c8:	jne	0x4bb2


0x49ce:	cmp	r13, r15
0x49d1:	jbe	0x49d8


0x4bb2:	mov	rbp, r11
0x4bb5:	jmp	0x4550


0x49d8:	lea	rax, [r15 + 1]
0x49dc:	cmp	r13, rax
0x49df:	jbe	0x49e7


0x49d3:	mov	byte ptr [r14 + r15], 0x3f
0x49d8:	lea	rax, [r15 + 1]
0x49dc:	cmp	r13, rax
0x49df:	jbe	0x49e7


0x49e7:	lea	rax, [r15 + 2]
0x49eb:	cmp	r13, rax
0x49ee:	jbe	0x49f6


0x49e1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x49e7:	lea	rax, [r15 + 2]
0x49eb:	cmp	r13, rax
0x49ee:	jbe	0x49f6


0x49f6:	lea	rax, [r15 + 3]
0x49fa:	cmp	r13, rax
0x49fd:	jbe	0x4a05


0x49f0:	mov	byte ptr [r14 + r15 + 2], 0x22
0x49f6:	lea	rax, [r15 + 3]
0x49fa:	cmp	r13, rax
0x49fd:	jbe	0x4a05


0x4a05:	add	r15, 4
0x4a09:	xor	edx, edx
0x4a0b:	xor	r12d, r12d
0x4a0e:	xor	eax, eax
0x4a10:	mov	rbp, rcx
0x4a13:	jmp	0x3bd8


0x49ff:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x4a05:	add	r15, 4
0x4a09:	xor	edx, edx
0x4a0b:	xor	r12d, r12d
0x4a0e:	xor	eax, eax
0x4a10:	mov	rbp, rcx
0x4a13:	jmp	0x3bd8


0x41b0:	cmp	byte ptr [rsp + 0xf], 0
0x41b5:	jne	0x4a60


0x3cae:	mov	byte ptr [rsp + 0x7c], r12b
0x3cb3:	xor	edx, edx
0x3cb5:	xor	eax, eax
0x3cb7:	mov	ebx, 0x27
0x3cbc:	jmp	0x3bd8


0x41bb:	test	r13, r13
0x41be:	je	0x45c0


0x45c0:	cmp	r13, r15
0x45c3:	jbe	0x45ca


0x41c4:	xor	edx, edx
0x41c6:	cmp	qword ptr [rsp + 0x50], 0
0x41cc:	jne	0x45c0


0x45ca:	lea	rax, [r15 + 1]
0x45ce:	cmp	r13, rax
0x45d1:	jbe	0x45d9


0x45c5:	mov	byte ptr [r14 + r15], 0x27
0x45ca:	lea	rax, [r15 + 1]
0x45ce:	cmp	r13, rax
0x45d1:	jbe	0x45d9


0x41d2:	mov	qword ptr [rsp + 0x50], r13
0x41d7:	add	r15, 3
0x41db:	xor	eax, eax
0x41dd:	mov	byte ptr [rsp + 0x7c], r12b
0x41e2:	xor	r8d, r8d
0x41e5:	mov	r13, rdx
0x41e8:	mov	ebx, 0x27
0x41ed:	jmp	0x3c09


0x45d9:	lea	rax, [r15 + 2]
0x45dd:	cmp	r13, rax
0x45e0:	jbe	0x4bd2


0x45d3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x45d9:	lea	rax, [r15 + 2]
0x45dd:	cmp	r13, rax
0x45e0:	jbe	0x4bd2


0x4bd2:	mov	rdx, r13
0x4bd5:	mov	r13, qword ptr [rsp + 0x50]
0x4bda:	jmp	0x41d2


0x45e6:	mov	rdx, r13
0x45e9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x45ef:	mov	r13, qword ptr [rsp + 0x50]
0x45f4:	jmp	0x41d2


0x3ce4:	cmp	byte ptr [rsp + 0xd], 0
0x3ce9:	jne	0x3d50


0x3ceb:	mov	ebx, edx
0x3ced:	xor	r12d, r12d
0x3cf0:	xor	eax, eax
0x3cf2:	cmp	byte ptr [rsp + 0xf], 0
0x3cf7:	jne	0x3beb


0x3d50:	xor	r12d, r12d
0x3d53:	cmp	dword ptr [rsp + 8], 2
0x3d58:	sete	dl
0x3d5b:	cmp	byte ptr [rsp + 0xf], 0
0x3d60:	mov	eax, edx
0x3d62:	jne	0x45b8


0x40f0:	cmp	byte ptr [rsp + 0xf], 0
0x40f5:	jne	0x4a60


0x3d23:	cmp	byte ptr [rsp + 0xd], 0
0x3d28:	je	0x3f40


0x40fb:	add	rbp, 1
0x40ff:	mov	eax, r8d
0x4102:	xor	r12d, r12d
0x4105:	mov	ebx, 0x5c
0x410a:	jmp	0x3c1c


0x3f40:	mov	edx, 0x5c
0x3f45:	mov	ebx, 0x5c
0x3f4a:	jmp	0x3ce4


0x3d2e:	cmp	byte ptr [rsp + 0xf], 0
0x3d33:	je	0x3f40


0x3d39:	cmp	qword ptr [rsp + 0x18], 0
0x3d3f:	jne	0x40fb


0x3d45:	mov	ebx, 0x5c
0x3d4a:	nop	word ptr [rax + rax]
0x3d50:	xor	r12d, r12d
0x3d53:	cmp	dword ptr [rsp + 8], 2
0x3d58:	sete	dl
0x3d5b:	cmp	byte ptr [rsp + 0xf], 0
0x3d60:	mov	eax, edx
0x3d62:	jne	0x45b8


0x3dcb:	xor	edx, edx
0x3dcd:	test	byte ptr [rsp + 0x78], 1
0x3dd2:	je	0x3ceb


0x3f93:	cmp	dword ptr [rsp + 8], 2
0x3f98:	sete	dl
0x3f9b:	cmp	byte ptr [rsp + 0xf], 0
0x3fa0:	jne	0x4b3a


0x3dd8:	add	rbp, 1
0x3ddc:	jmp	0x3a98


0x3fa6:	mov	eax, r8d
0x3fa9:	mov	rcx, r15
0x3fac:	xor	eax, 1
0x3faf:	and	al, dl
0x3fb1:	je	0x3fe0


0x4b3a:	movzx	ebx, byte ptr [rsp + 0xf]
0x4b3f:	mov	rbp, r11
0x4b42:	mov	eax, edx
0x4b44:	mov	byte ptr [rsp + 0xd], bl
0x4b48:	jmp	0x4539


0x3fe0:	cmp	r13, rcx
0x3fe3:	jbe	0x3fea


0x3fb3:	cmp	r13, r15
0x3fb6:	jbe	0x3fbd


0x3fea:	cmp	dword ptr [rsp + 8], 2
0x3fef:	lea	r15, [rcx + 1]
0x3ff3:	je	0x45f9


0x3fe5:	mov	byte ptr [r14 + rcx], 0x5c
0x3fea:	cmp	dword ptr [rsp + 8], 2
0x3fef:	lea	r15, [rcx + 1]
0x3ff3:	je	0x45f9


0x3fbd:	lea	rcx, [r15 + 1]
0x3fc1:	cmp	r13, rcx
0x3fc4:	jbe	0x3fcc


0x3fb8:	mov	byte ptr [r14 + r15], 0x27
0x3fbd:	lea	rcx, [r15 + 1]
0x3fc1:	cmp	r13, rcx
0x3fc4:	jbe	0x3fcc


0x45f9:	mov	eax, r12d
0x45fc:	mov	ebx, 0x30
0x4601:	xor	r12d, r12d
0x4604:	jmp	0x3c09


0x3ff9:	lea	rax, [rbp + 1]
0x3ffd:	cmp	rax, r11
0x4000:	jae	0x401b


0x3fcc:	lea	rcx, [r15 + 2]
0x3fd0:	cmp	r13, rcx
0x3fd3:	ja	0x4609


0x3fc6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3fcc:	lea	rcx, [r15 + 2]
0x3fd0:	cmp	r13, rcx
0x3fd3:	ja	0x4609


0x4002:	mov	rax, qword ptr [rsp + 0x10]
0x4007:	movzx	eax, byte ptr [rax + rbp + 1]
0x400c:	mov	byte ptr [rsp + 0x28], al
0x4010:	sub	eax, 0x30
0x4013:	cmp	al, 9
0x4015:	jbe	0x4849


0x401b:	mov	eax, r12d
0x401e:	mov	ebx, 0x30
0x4023:	xor	r12d, r12d
0x4026:	jmp	0x3bd8


0x3fd9:	lea	rcx, [r15 + 3]
0x3fdd:	mov	r8d, eax
0x3fe0:	cmp	r13, rcx
0x3fe3:	jbe	0x3fea


0x4609:	mov	byte ptr [r14 + r15 + 2], 0x27
0x460f:	jmp	0x3fd9


0x4849:	cmp	r13, r15
0x484c:	jbe	0x4853


0x4853:	lea	rax, [rcx + 2]
0x4857:	cmp	r13, rax
0x485a:	jbe	0x4862


0x484e:	mov	byte ptr [r14 + r15], 0x30
0x4853:	lea	rax, [rcx + 2]
0x4857:	cmp	r13, rax
0x485a:	jbe	0x4862


0x4862:	mov	eax, r12d
0x4865:	lea	r15, [rcx + 3]
0x4869:	xor	r12d, r12d
0x486c:	mov	ebx, 0x30
0x4871:	jmp	0x3bd8


0x485c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x4862:	mov	eax, r12d
0x4865:	lea	r15, [rcx + 3]
0x4869:	xor	r12d, r12d
0x486c:	mov	ebx, 0x30
0x4871:	jmp	0x3bd8


0x3cd2:	cmp	dword ptr [rsp + 8], 2
0x3cd7:	sete	al
0x3cda:	and	al, byte ptr [rsp + 0xf]
0x3cde:	jne	0x3e2e


0x4090:	mov	edx, 0xd
0x4095:	xor	r10d, r10d
0x4098:	mov	ebx, 0x72
0x409d:	jmp	0x3cd2


0x4614:	test	ebx, ebx
0x4616:	jne	0x3a43


0x461c:	mov	byte ptr [rsp + 0xd], 1
0x4621:	test	r13, r13
0x4624:	jne	0x4bba


0x462a:	lea	rax, [rip + 0x4714]
0x4631:	mov	qword ptr [rsp + 0x50], 0
0x463a:	mov	byte ptr [rsp + 0xe], 1
0x463f:	mov	byte ptr [rsp + 0x7c], 0
0x4644:	xor	r12d, r12d
0x4647:	mov	byte ptr [rsp + 0xf], 0
0x464c:	mov	qword ptr [rsp + 0x18], 1
0x4655:	mov	qword ptr [rsp + 0x48], rax
0x465a:	mov	r15d, 1
0x4660:	mov	dword ptr [rsp + 8], 2
0x4668:	jmp	0x3a83


0x4bba:	mov	byte ptr [rsp + 0xe], 1
0x4bbf:	xor	eax, eax
0x4bc1:	xor	r12d, r12d
0x4bc4:	mov	qword ptr [rsp + 0x50], 0
0x4bcd:	jmp	0x4174


0x4174:	lea	rbx, [rip + 0x4bca]
0x417b:	mov	byte ptr [r14], 0x27
0x417f:	mov	dword ptr [rsp + 8], 2
0x4187:	mov	r15d, 1
0x418d:	mov	qword ptr [rsp + 0x18], 1
0x4196:	mov	byte ptr [rsp + 0xf], 0
0x419b:	mov	qword ptr [rsp + 0x48], rbx
0x41a0:	mov	byte ptr [rsp + 0x7c], al
0x41a4:	jmp	0x3a83


0x4678:	test	r13, r13
0x467b:	je	0x48a6


0x4a6d:	lea	rax, [rip + 0x42cf]
0x4a74:	mov	byte ptr [rsp + 0xe], 1
0x4a79:	mov	byte ptr [rsp + 0x7c], 0
0x4a7e:	xor	r12d, r12d
0x4a81:	mov	qword ptr [rsp + 0x50], 0
0x4a8a:	mov	byte ptr [rsp + 0xf], 1
0x4a8f:	mov	byte ptr [rsp + 0xd], 1
0x4a94:	mov	qword ptr [rsp + 0x18], 1
0x4a9d:	xor	r15d, r15d
0x4aa0:	mov	qword ptr [rsp + 0x48], rax
0x4aa5:	jmp	0x3a83


0x48a6:	mov	qword ptr [rsp + 0x50], 0
0x48af:	mov	byte ptr [rsp + 0xe], 1
0x48b4:	xor	r12d, r12d
0x48b7:	mov	byte ptr [rsp + 0x7c], 0
0x48bc:	jmp	0x469b


0x4681:	mov	byte ptr [r14], 0x22
0x4685:	mov	byte ptr [rsp + 0xe], 1
0x468a:	xor	r12d, r12d
0x468d:	mov	byte ptr [rsp + 0x7c], 0
0x4692:	mov	qword ptr [rsp + 0x50], 0
0x469b:	lea	rax, [rip + 0x46a1]
0x46a2:	mov	byte ptr [rsp + 0xf], 0
0x46a7:	mov	byte ptr [rsp + 0xd], 1
0x46ac:	mov	qword ptr [rsp + 0x18], 1
0x46b5:	mov	r15d, 1
0x46bb:	mov	qword ptr [rsp + 0x48], rax
0x46c0:	jmp	0x3a83


0x469b:	lea	rax, [rip + 0x46a1]
0x46a2:	mov	byte ptr [rsp + 0xf], 0
0x46a7:	mov	byte ptr [rsp + 0xd], 1
0x46ac:	mov	qword ptr [rsp + 0x18], 1
0x46b5:	mov	r15d, 1
0x46bb:	mov	qword ptr [rsp + 0x48], rax
0x46c0:	jmp	0x3a83


0x46c5:	lea	rax, [rip + 0x4677]
0x46cc:	mov	byte ptr [rsp + 0xe], 1
0x46d1:	mov	byte ptr [rsp + 0x7c], 0
0x46d6:	xor	r12d, r12d
0x46d9:	mov	qword ptr [rsp + 0x50], 0
0x46e2:	mov	byte ptr [rsp + 0xf], 1
0x46e7:	mov	byte ptr [rsp + 0xd], 1
0x46ec:	mov	qword ptr [rsp + 0x18], 1
0x46f5:	xor	r15d, r15d
0x46f8:	mov	qword ptr [rsp + 0x48], rax
0x46fd:	mov	dword ptr [rsp + 8], 5
0x4705:	jmp	0x3a83


0x470a:	mov	byte ptr [rsp + 0xe], 1
0x470f:	mov	byte ptr [rsp + 0x7c], 0
0x4714:	xor	r12d, r12d
0x4717:	mov	qword ptr [rsp + 0x50], 0
0x4720:	mov	byte ptr [rsp + 0xf], 0
0x4725:	xor	r15d, r15d
0x4728:	mov	byte ptr [rsp + 0xd], 1
0x472d:	mov	qword ptr [rsp + 0x18], 0
0x4736:	mov	qword ptr [rsp + 0x48], 0
0x473f:	jmp	0x3a83


0x4744:	cmp	dword ptr [rsp + 8], 0xa
0x4749:	je	0x47a1


0x47a1:	xor	r15d, r15d
0x47a4:	test	ebx, ebx
0x47a6:	je	0x496d


0x474b:	lea	rsi, [rip + 0x45f5]
0x4752:	xor	edi, edi
0x4754:	mov	edx, 5
0x4759:	call	0x18f0


0x496d:	mov	rdx, qword ptr [rsp + 0x68]
0x4972:	movzx	eax, byte ptr [rdx]
0x4975:	test	al, al
0x4977:	je	0x47ac


0x47ac:	test	ebx, ebx
0x47ae:	mov	rbx, qword ptr [rsp + 0x60]
0x47b3:	setne	byte ptr [rsp + 0xf]
0x47b8:	xor	r12d, r12d
0x47bb:	mov	rdi, rbx
0x47be:	call	0x1910


0x4989:	add	r15, 1
0x498d:	movzx	eax, byte ptr [rdx + r15]
0x4992:	test	al, al
0x4994:	jne	0x4980


0x4985:	mov	byte ptr [r14 + r15], al
0x4989:	add	r15, 1
0x498d:	movzx	eax, byte ptr [rdx + r15]
0x4992:	test	al, al
0x4994:	jne	0x4980


0x4996:	jmp	0x47ac


0x4980:	cmp	r13, r15
0x4983:	jbe	0x4989


0x47c3:	mov	qword ptr [rsp + 0x48], rbx
0x47c8:	mov	qword ptr [rsp + 0x18], rax
0x47cd:	mov	byte ptr [rsp + 0xe], 1
0x47d2:	mov	byte ptr [rsp + 0x7c], 0
0x47d7:	mov	qword ptr [rsp + 0x50], 0
0x47e0:	mov	byte ptr [rsp + 0xd], 1
0x47e5:	jmp	0x3a83


0x475e:	mov	rcx, rax
0x4761:	mov	qword ptr [rsp + 0x68], rax
0x4766:	lea	rax, [rip + 0x45da]
0x476d:	cmp	rcx, rax
0x4770:	je	0x4b0e


0x4b0e:	mov	esi, dword ptr [rsp + 8]
0x4b12:	mov	rdi, rcx
0x4b15:	call	0x38c0


0x4776:	lea	rsi, [rip + 0x45c8]
0x477d:	xor	edi, edi
0x477f:	mov	edx, 5
0x4784:	call	0x18f0


0x4789:	mov	rcx, rax
0x478c:	mov	qword ptr [rsp + 0x60], rax
0x4791:	lea	rax, [rip + 0x45ad]
0x4798:	cmp	rcx, rax
0x479b:	je	0x4b24


0x4b24:	mov	esi, dword ptr [rsp + 8]
0x4b28:	mov	rdi, rcx
0x4b2b:	call	0x38c0


0x4b30:	mov	qword ptr [rsp + 0x60], rax
0x4b35:	jmp	0x47a1


0x4b1a:	mov	qword ptr [rsp + 0x68], rax
0x4b1f:	jmp	0x4776


0x47ea:	mov	byte ptr [rsp + 0xe], 1
0x47ef:	mov	byte ptr [rsp + 0x7c], 0
0x47f4:	xor	r12d, r12d
0x47f7:	mov	qword ptr [rsp + 0x50], 0
0x4800:	mov	byte ptr [rsp + 0xf], 0
0x4805:	xor	r15d, r15d
0x4808:	mov	byte ptr [rsp + 0xd], 0
0x480d:	mov	qword ptr [rsp + 0x18], 0
0x4816:	mov	qword ptr [rsp + 0x48], 0
0x481f:	jmp	0x3a83


0x4824:	mov	byte ptr [rsp + 0xe], 1
0x4829:	mov	byte ptr [rsp + 0x7c], 0
0x482e:	xor	r12d, r12d
0x4831:	mov	qword ptr [rsp + 0x50], 0
0x483a:	mov	byte ptr [rsp + 0xf], 1
0x483f:	mov	byte ptr [rsp + 0xd], 1
0x4844:	jmp	0x3a63


0x3a63:	lea	rax, [rip + 0x52db]
0x3a6a:	mov	qword ptr [rsp + 0x18], 1
0x3a73:	xor	r15d, r15d
0x3a76:	mov	dword ptr [rsp + 8], 2
0x3a7e:	mov	qword ptr [rsp + 0x48], rax
0x3a83:	xor	r11d, r11d
0x3a86:	mov	rax, rbp
0x3a89:	mov	r8d, r12d
0x3a8c:	mov	rbp, r11
0x3a8f:	mov	r11, rax
0x3a92:	nop	word ptr [rax + rax]
0x3a98:	cmp	r11, rbp
0x3a9b:	setne	r12b
0x3a9f:	cmp	r11, -1
0x3aa3:	jne	0x3ab2


0x4a18:	test	ebx, ebx
0x4a1a:	je	0x4ba8


0x4ba8:	mov	byte ptr [rsp + 0xd], 0
0x4bad:	jmp	0x4621


0x4a20:	lea	rax, [rip + 0x431e]
0x4a27:	mov	byte ptr [rsp + 0xe], 1
0x4a2c:	mov	byte ptr [rsp + 0x7c], 0
0x4a31:	xor	r12d, r12d
0x4a34:	mov	qword ptr [rsp + 0x50], 0
0x4a3d:	mov	byte ptr [rsp + 0xf], 1
0x4a42:	mov	byte ptr [rsp + 0xd], 0
0x4a47:	mov	qword ptr [rsp + 0x18], 1
0x4a50:	xor	r15d, r15d
0x4a53:	mov	qword ptr [rsp + 0x48], rax
0x4a58:	jmp	0x3a83


0x4621:	test	r13, r13
0x4624:	jne	0x4bba


0x4be4:	nop	
0x4be6:	nop	word ptr cs:[rax + rax]


0x4d9b:	nop	dword ptr [rax + rax]


0x4dd6:	nop	word ptr cs:[rax + rax]


0x4df1:	nop	dword ptr [rax + rax]
0x4df6:	nop	word ptr cs:[rax + rax]


0x4e11:	nop	dword ptr [rax + rax]
0x4e16:	nop	word ptr cs:[rax + rax]


0x4e55:	nop	
0x4e56:	nop	word ptr cs:[rax + rax]


0x4e75:	nop	
0x4e76:	nop	word ptr cs:[rax + rax]


0x4f24:	nop	
0x4f26:	nop	word ptr cs:[rax + rax]


0x5013:	nop	dword ptr [rax]
0x5016:	nop	word ptr cs:[rax + rax]


0x502a:	nop	word ptr [rax + rax]


0x50c3:	nop	dword ptr [rax]
0x50c6:	nop	word ptr cs:[rax + rax]


0x50e3:	nop	dword ptr [rax]
0x50e6:	nop	word ptr cs:[rax + rax]


0x50fc:	nop	dword ptr [rax]


0x5118:	nop	dword ptr [rax + rax]


0x5134:	nop	
0x5136:	nop	word ptr cs:[rax + rax]


0x51ce:	nop	


0x525a:	nop	word ptr [rax + rax]


0x526c:	nop	dword ptr [rax]


0x527f:	nop	


0x5318:	nop	dword ptr [rax + rax]


0x5341:	nop	dword ptr [rax + rax]
0x5346:	nop	word ptr cs:[rax + rax]


0x535a:	nop	word ptr [rax + rax]


0x53ee:	nop	


0x5481:	nop	dword ptr [rax + rax]
0x5486:	nop	word ptr cs:[rax + rax]


0x549c:	nop	dword ptr [rax]


0x54b7:	nop	word ptr [rax + rax]


0x54d3:	nop	dword ptr [rax]
0x54d6:	nop	word ptr cs:[rax + rax]


0x54ec:	nop	dword ptr [rax]


0x5504:	nop	
0x5506:	nop	word ptr cs:[rax + rax]


0x5523:	nop	dword ptr [rax]
0x5526:	nop	word ptr cs:[rax + rax]


0x5548:	nop	dword ptr [rax + rax]


0x5967:	nop	word ptr [rax + rax]


0x5a08:	nop	dword ptr [rax + rax]


0x5ae5:	nop	
0x5ae6:	nop	word ptr cs:[rax + rax]


0x5b8a:	nop	word ptr [rax + rax]


0x5bb4:	nop	
0x5bb6:	nop	word ptr cs:[rax + rax]


0x5bc2:	nop	dword ptr [rax]
0x5bc6:	nop	word ptr cs:[rax + rax]


0x5c06:	nop	word ptr cs:[rax + rax]


0x5c34:	nop	
0x5c36:	nop	word ptr cs:[rax + rax]


0x5cc2:	nop	dword ptr [rax]
0x5cc6:	nop	word ptr cs:[rax + rax]


0x5d1a:	nop	word ptr [rax + rax]


0x5d37:	nop	word ptr [rax + rax]


0x5d6e:	nop	


0x5d98:	nop	dword ptr [rax + rax]


0x5db3:	nop	word ptr cs:[rax + rax]
0x5dbd:	nop	dword ptr [rax]


0x5df5:	nop	word ptr cs:[rax + rax]
0x5dff:	nop	


0x5eb1:	nop	word ptr cs:[rax + rax]
0x5ebb:	nop	dword ptr [rax + rax]


0x5f43:	nop	word ptr cs:[rax + rax]
0x5f4d:	nop	dword ptr [rax]


0x5fae:	nop	


0x6139:	nop	dword ptr [rax]


0x61be:	nop	


0x623d:	nop	dword ptr [rax]


0x627c:	nop	dword ptr [rax]


0x62fb:	nop	dword ptr [rax + rax]


0x6397:	nop	word ptr [rax + rax]


0x74bf:	nop	


0x76be:	nop	


0x7907:	mov	r11d, 0x10
0x790d:	mov	ebx, 0x73
0x7912:	nop	word ptr [rax + rax]
0x7918:	cmp	r13, -1
0x791c:	je	0x7fd7


0x7fd7:	mov	rsi, qword ptr [rsp + 0x20]
0x7fdc:	cmp	rsi, -1
0x7fe0:	lea	rax, [rsi + 1]
0x7fe4:	mov	qword ptr [r12 + 0x50], rsi
0x7fe9:	je	0x7f0b


0x7922:	mov	qword ptr [r12 + 0x50], r13
0x7927:	cmp	r9, r13
0x792a:	mov	rcx, qword ptr [r15 + 8]
0x792e:	jbe	0x7f50


0x7fef:	mov	r13, qword ptr [rsp + 0x20]
0x7ff4:	mov	qword ptr [rsp + 0x20], rax
0x7ff9:	jmp	0x7927


0x7f50:	add	r9, r9
0x7f53:	lea	rax, [r13 + 1]
0x7f57:	cmp	r9, r13
0x7f5a:	cmovbe	r9, rax
0x7f5e:	movabs	rax, 0x7ffffffffffffff
0x7f68:	cmp	r9, rax
0x7f6b:	ja	0x834b


0x7934:	mov	rax, qword ptr [r15]
0x7937:	mov	rdx, rax
0x793a:	shl	rdx, 5
0x793e:	add	rdx, rcx
0x7941:	cmp	rax, r13
0x7944:	ja	0x7966


0x7927:	cmp	r9, r13
0x792a:	mov	rcx, qword ptr [r15 + 8]
0x792e:	jbe	0x7f50


0x7f71:	mov	rsi, r9
0x7f74:	mov	qword ptr [rsp + 0x48], r9
0x7f79:	mov	qword ptr [rsp + 0x40], r10
0x7f7e:	shl	rsi, 5
0x7f82:	cmp	qword ptr [rsp + 8], rcx
0x7f87:	mov	qword ptr [rsp + 0x38], r8
0x7f8c:	mov	dword ptr [rsp + 0x30], r11d
0x7f91:	je	0x8031


0x7966:	shl	r13, 5
0x796a:	lea	rax, [rcx + r13]
0x796e:	mov	edx, dword ptr [rax]
0x7970:	test	edx, edx
0x7972:	jne	0x7f43


0x8031:	mov	rdi, rsi
0x8034:	call	0x1a50


0x7f97:	mov	rdi, rcx
0x7f9a:	call	0x1aa0


0x7950:	add	rax, 1
0x7954:	mov	dword ptr [rdx], 0
0x795a:	add	rdx, 0x20
0x795e:	cmp	rax, r13
0x7961:	jbe	0x7950


0x7963:	mov	qword ptr [r15], rax
0x7966:	shl	r13, 5
0x796a:	lea	rax, [rcx + r13]
0x796e:	mov	edx, dword ptr [rax]
0x7970:	test	edx, edx
0x7972:	jne	0x7f43


0x7978:	mov	dword ptr [rax], r11d
0x797b:	mov	byte ptr [r12 + 0x48], bl
0x7980:	mov	rax, qword ptr [r14]
0x7983:	mov	qword ptr [r12 + 8], rbp
0x7988:	lea	rbx, [rax + 1]
0x798c:	cmp	r10, rbx
0x798f:	mov	qword ptr [r14], rbx
0x7992:	ja	0x7a20


0x7f43:	cmp	edx, r11d
0x7f46:	je	0x797b


0x7998:	test	r10, r10
0x799b:	js	0x8347


0x7a20:	mov	rcx, qword ptr [r14 + 8]
0x7a24:	jmp	0x7738


0x797b:	mov	byte ptr [r12 + 0x48], bl
0x7980:	mov	rax, qword ptr [r14]
0x7983:	mov	qword ptr [r12 + 8], rbp
0x7988:	lea	rbx, [rax + 1]
0x798c:	cmp	r10, rbx
0x798f:	mov	qword ptr [r14], rbx
0x7992:	ja	0x7a20


0x7f4c:	jmp	0x7f0f


0x8347:	mov	rcx, qword ptr [r15 + 8]
0x834b:	cmp	qword ptr [rsp + 8], rcx
0x8350:	jne	0x81b4


0x79a1:	add	r10, r10
0x79a4:	movabs	rax, 0x2e8ba2e8ba2e8ba
0x79ae:	cmp	r10, rax
0x79b1:	ja	0x8347


0x79b7:	lea	rax, [r10 + r10*4]
0x79bb:	mov	rdi, qword ptr [r14 + 8]
0x79bf:	cmp	qword ptr [rsp + 0x28], rdi
0x79c4:	mov	qword ptr [rsp + 0x40], r9
0x79c9:	mov	qword ptr [rsp + 0x38], r10
0x79ce:	lea	rax, [r10 + rax*2]
0x79d2:	mov	qword ptr [rsp + 0x30], r8
0x79d7:	lea	rsi, [rax*8]
0x79df:	je	0x809d


0x809d:	mov	rdi, rsi
0x80a0:	call	0x1a50


0x79e5:	call	0x1aa0


0x79ea:	test	rax, rax
0x79ed:	mov	rcx, rax
0x79f0:	mov	r8, qword ptr [rsp + 0x30]
0x79f5:	mov	r10, qword ptr [rsp + 0x38]
0x79fa:	mov	r9, qword ptr [rsp + 0x40]
0x79ff:	je	0x8347


0x7a05:	mov	rax, qword ptr [rsp + 0x28]
0x7a0a:	cmp	rax, qword ptr [r14 + 8]
0x7a0e:	mov	rbx, qword ptr [r14]
0x7a11:	je	0x80c0


0x80c0:	lea	rax, [rbx + rbx*4]
0x80c4:	mov	rsi, qword ptr [rsp + 0x28]
0x80c9:	mov	rdi, rcx
0x80cc:	mov	qword ptr [rsp + 0x40], r9
0x80d1:	mov	qword ptr [rsp + 0x38], r10
0x80d6:	lea	rdx, [rbx + rax*2]
0x80da:	mov	qword ptr [rsp + 0x30], r8
0x80df:	shl	rdx, 3
0x80e3:	call	0x1a00


0x7a17:	mov	qword ptr [r14 + 8], rcx
0x7a1b:	jmp	0x7738


0x80e8:	mov	rbx, qword ptr [r14]
0x80eb:	mov	rcx, rax
0x80ee:	mov	r9, qword ptr [rsp + 0x40]
0x80f3:	mov	r10, qword ptr [rsp + 0x38]
0x80f8:	mov	r8, qword ptr [rsp + 0x30]
0x80fd:	jmp	0x7a17


0x7f9f:	test	rax, rax
0x7fa2:	mov	rcx, rax
0x7fa5:	mov	r11d, dword ptr [rsp + 0x30]
0x7faa:	mov	r8, qword ptr [rsp + 0x38]
0x7faf:	mov	r10, qword ptr [rsp + 0x40]
0x7fb4:	mov	r9, qword ptr [rsp + 0x48]
0x7fb9:	je	0x8347


0x7fbf:	mov	rax, qword ptr [rsp + 8]
0x7fc4:	cmp	rax, qword ptr [r15 + 8]
0x7fc8:	je	0x8059


0x8059:	mov	rdx, qword ptr [r15]
0x805c:	mov	rsi, qword ptr [rsp + 8]
0x8061:	mov	rdi, rcx
0x8064:	mov	qword ptr [rsp + 0x48], r9
0x8069:	mov	qword ptr [rsp + 0x40], r10
0x806e:	mov	qword ptr [rsp + 0x38], r8
0x8073:	mov	dword ptr [rsp + 0x30], r11d
0x8078:	shl	rdx, 5
0x807c:	call	0x1a00


0x7fce:	mov	qword ptr [r15 + 8], rcx
0x7fd2:	jmp	0x7934


0x8081:	mov	r9, qword ptr [rsp + 0x48]
0x8086:	mov	r10, qword ptr [rsp + 0x40]
0x808b:	mov	rcx, rax
0x808e:	mov	r8, qword ptr [rsp + 0x38]
0x8093:	mov	r11d, dword ptr [rsp + 0x30]
0x8098:	jmp	0x7fce


0x80a5:	test	rax, rax
0x80a8:	mov	rcx, rax
0x80ab:	mov	r8, qword ptr [rsp + 0x30]
0x80b0:	mov	r10, qword ptr [rsp + 0x38]
0x80b5:	mov	r9, qword ptr [rsp + 0x40]
0x80ba:	je	0x81a9


0x81a9:	mov	rcx, qword ptr [r15 + 8]
0x81ad:	cmp	qword ptr [rsp + 8], rcx
0x81b2:	je	0x81cc


0x8039:	test	rax, rax
0x803c:	mov	rcx, rax
0x803f:	mov	r11d, dword ptr [rsp + 0x30]
0x8044:	mov	r8, qword ptr [rsp + 0x38]
0x8049:	mov	r10, qword ptr [rsp + 0x40]
0x804e:	mov	r9, qword ptr [rsp + 0x48]
0x8053:	je	0x81bc


0x7dbc:	cmp	eax, 0xf
0x7dbf:	mov	r11d, 0x16
0x7dc5:	jg	0x7918


0x7dcb:	test	al, 4
0x7dcd:	jne	0x7918


0x7918:	cmp	r13, -1
0x791c:	je	0x7fd7


0x7dd3:	cmp	eax, 7
0x7dd6:	mov	r11d, 0x15
0x7ddc:	jg	0x7918


0x7de2:	test	al, 2
0x7de4:	mov	r11d, 0x12
0x7dea:	jne	0x7918


0x7df0:	xor	r11d, r11d
0x7df3:	test	al, 1
0x7df5:	sete	r11b
0x7df9:	add	r11d, 0x13
0x7dfd:	jmp	0x7918


0x7e1b:	cmp	eax, 0xf
0x7e1e:	mov	r11d, 9
0x7e24:	jg	0x7918


0x7e2a:	test	al, 4
0x7e2c:	jne	0x7918


0x7e32:	cmp	eax, 7
0x7e35:	mov	r11d, 7
0x7e3b:	jg	0x7918


0x7e41:	test	al, 2
0x7e43:	mov	r11d, 1
0x7e49:	jne	0x7918


0x7e4f:	and	eax, 1
0x7e52:	cmp	eax, 1
0x7e55:	sbb	r11d, r11d
0x7e58:	and	r11d, 2
0x7e5c:	add	r11d, 3
0x7e60:	jmp	0x7918


0x7e7b:	cmp	eax, 0xf
0x7e7e:	mov	r11d, 0xc
0x7e84:	jg	0x7918


0x7e8a:	xor	r11d, r11d
0x7e8d:	test	al, 4
0x7e8f:	setne	r11b
0x7e93:	add	r11d, 0xb
0x7e97:	jmp	0x7918


0x7e9c:	mov	r11d, 0xe
0x7ea2:	mov	ebx, 0x63
0x7ea7:	jmp	0x7918


0x7eac:	cmp	eax, 0xf
0x7eaf:	mov	r11d, 0xa
0x7eb5:	jg	0x7918


0x7ebb:	test	al, 4
0x7ebd:	jne	0x7918


0x7ec3:	cmp	eax, 7
0x7ec6:	mov	r11d, 8
0x7ecc:	jg	0x7918


0x7ed2:	test	al, 2
0x7ed4:	mov	r11d, 2
0x7eda:	jne	0x7918


0x7ee0:	and	eax, 1
0x7ee3:	cmp	eax, 1
0x7ee6:	sbb	r11d, r11d
0x7ee9:	and	r11d, 2
0x7eed:	add	r11d, 4
0x7ef1:	jmp	0x7918


0x83ac:	nop	dword ptr [rax]


0x8415:	nop	
0x8416:	nop	word ptr cs:[rax + rax]


0x8422:	nop	word ptr cs:[rax + rax]
0x842c:	nop	dword ptr [rax]


0x3c70:	xor	r10d, r10d
0x3c73:	mov	eax, dword ptr [rsp + 8]
0x3c77:	cmp	eax, 2
0x3c7a:	je	0x4238


0x3ca0:	xor	r10d, r10d
0x3ca3:	cmp	dword ptr [rsp + 8], 2
0x3ca8:	je	0x41b0


0x3cc8:	mov	edx, 9
0x3ccd:	mov	ebx, 0x74
0x3cd2:	cmp	dword ptr [rsp + 8], 2
0x3cd7:	sete	al
0x3cda:	and	al, byte ptr [rsp + 0xf]
0x3cde:	jne	0x3e2e


0x3d08:	mov	edx, 8
0x3d0d:	mov	ebx, 0x62
0x3d12:	jmp	0x3ce4


0x3d18:	cmp	dword ptr [rsp + 8], 2
0x3d1d:	je	0x40f0


0x3dc0:	cmp	byte ptr [rsp + 0xd], 0
0x3dc5:	jne	0x3f93


0x3de8:	cmp	dword ptr [rsp + 8], 2
0x3ded:	sete	dl
0x3df0:	xor	eax, eax
0x3df2:	jmp	0x3bd8


0x3e00:	mov	edx, 7
0x3e05:	mov	ebx, 0x61
0x3e0a:	jmp	0x3ce4


0x3e10:	cmp	dword ptr [rsp + 8], 2
0x3e15:	sete	dl
0x3e18:	test	rbp, rbp
0x3e1b:	jne	0x3bcc


0x3e40:	cmp	dword ptr [rsp + 8], 2
0x3e45:	sete	dl
0x3e48:	xor	r12d, r12d
0x3e4b:	jmp	0x3e21


0x3e50:	cmp	dword ptr [rsp + 8], 2
0x3e55:	mov	ebx, 0x20
0x3e5a:	sete	dl
0x3e5d:	jmp	0x3e21


0x3e60:	mov	edx, 0xd
0x3e65:	mov	ebx, 0x72
0x3e6a:	jmp	0x3cd2


0x3e70:	mov	edx, 0xc
0x3e75:	mov	ebx, 0x66
0x3e7a:	jmp	0x3ce4


0x3e80:	mov	edx, 0xb
0x3e85:	mov	ebx, 0x76
0x3e8a:	jmp	0x3ce4


0x3e90:	mov	edx, 0xa
0x3e95:	mov	ebx, 0x6e
0x3e9a:	jmp	0x3cd2


0x3f30:	xor	r10d, r10d
0x3f33:	cmp	byte ptr [rsp + 0xd], 0
0x3f38:	jne	0x3d2e


0x3f50:	mov	edx, 0xc
0x3f55:	xor	r10d, r10d
0x3f58:	mov	ebx, 0x66
0x3f5d:	jmp	0x3ce4


0x3f68:	mov	edx, 0xa
0x3f6d:	xor	r10d, r10d
0x3f70:	mov	ebx, 0x6e
0x3f75:	jmp	0x3cd2


0x3f80:	mov	ebx, 0x61
0x3f85:	jmp	0x3d50


0x3f90:	xor	r10d, r10d
0x3f93:	cmp	dword ptr [rsp + 8], 2
0x3f98:	sete	dl
0x3f9b:	cmp	byte ptr [rsp + 0xf], 0
0x3fa0:	jne	0x4b3a


0x4030:	cmp	dword ptr [rsp + 8], 2
0x4035:	mov	r12d, r10d
0x4038:	sete	dl
0x403b:	xor	r10d, r10d
0x403e:	xor	eax, eax
0x4040:	jmp	0x3bd8


0x4048:	cmp	dword ptr [rsp + 8], 2
0x404d:	sete	dl
0x4050:	xor	r10d, r10d
0x4053:	jmp	0x3e18


0x4060:	cmp	dword ptr [rsp + 8], 2
0x4065:	sete	dl
0x4068:	xor	r10d, r10d
0x406b:	xor	r12d, r12d
0x406e:	jmp	0x3e21


0x4078:	cmp	dword ptr [rsp + 8], 2
0x407d:	mov	r12d, r10d
0x4080:	mov	ebx, 0x20
0x4085:	sete	dl
0x4088:	xor	r10d, r10d
0x408b:	jmp	0x3e21


0x40a8:	mov	ebx, 0x76
0x40ad:	jmp	0x3d50


0x40b8:	mov	edx, 9
0x40bd:	xor	r10d, r10d
0x40c0:	mov	ebx, 0x74
0x40c5:	jmp	0x3cd2


0x40d0:	mov	ebx, 0x62
0x40d5:	jmp	0x3d50


0x4670:	test	ebx, ebx
0x4672:	jne	0x4a6d


0x7e08:	xor	r11d, r11d
0x7e0b:	cmp	eax, 7
0x7e0e:	setg	r11b
0x7e12:	add	r11d, 0xd
0x7e16:	jmp	0x7918


0x7e68:	xor	r11d, r11d
0x7e6b:	cmp	eax, 7
0x7e6e:	setg	r11b
0x7e72:	add	r11d, 0xf
0x7e76:	jmp	0x7918


0x7f00:	mov	r11d, 0x11
0x7f06:	jmp	0x7918


0x1c23:	nop	dword ptr [rax + rax]


0x1c8c:	nop	dword ptr [rax]


0x1cce:	nop	


0x1cf3:	nop	dword ptr [rax + rax]


0x1f96:	nop	word ptr cs:[rax + rax]


0x1fe7:	nop	word ptr [rax + rax]


0x2031:	nop	dword ptr [rax]


0x21b1:	nop	dword ptr [rax]


0x2206:	nop	word ptr cs:[rax + rax]


0x2259:	nop	dword ptr [rax]


0x2287:	nop	word ptr [rax + rax]


0x239f:	nop	


0x2434:	nop	dword ptr [rax]


0x24cb:	nop	dword ptr [rax + rax]


0x2615:	nop	dword ptr [rax]


0x26c9:	nop	dword ptr [rax]


0x270c:	nop	dword ptr [rax]


0x271d:	nop	dword ptr [rax]


0x2744:	nop	dword ptr [rax]


0x2774:	nop	dword ptr [rax]


0x280b:	nop	dword ptr [rax + rax]


0x2ad5:	nop	dword ptr [rax]


0x3611:	nop	dword ptr [rax]


0x375a:	nop	word ptr [rax + rax]


0x37a7:	nop	word ptr [rax + rax]


0x37da:	nop	word ptr [rax + rax]


0x38fc:	nop	dword ptr [rax]


0x394d:	nop	dword ptr [rax]


0x3b78:	nop	dword ptr [rax + rax]


0x3c67:	nop	word ptr [rax + rax]


0x3c9e:	nop	


0x3cc1:	nop	dword ptr [rax]


0x3d02:	nop	word ptr [rax + rax]


0x3d14:	nop	dword ptr [rax]


0x3db8:	nop	dword ptr [rax + rax]


0x3de1:	nop	dword ptr [rax]


0x3df7:	nop	word ptr [rax + rax]


0x3e0f:	nop	


0x3e3e:	nop	


0x3e4d:	nop	dword ptr [rax]


0x3e5f:	nop	


0x3e6f:	nop	


0x3e7f:	nop	


0x3e8f:	nop	


0x3e9f:	nop	


0x3f0c:	nop	dword ptr [rax]


0x3f2c:	nop	dword ptr [rax]


0x3f3e:	nop	


0x3f4f:	nop	


0x3f62:	nop	word ptr [rax + rax]


0x3f7a:	nop	word ptr [rax + rax]


0x3f8a:	nop	word ptr [rax + rax]


0x402b:	nop	dword ptr [rax + rax]


0x4045:	nop	dword ptr [rax]


0x4058:	nop	dword ptr [rax + rax]


0x4073:	nop	dword ptr [rax + rax]


0x40a2:	nop	word ptr [rax + rax]


0x40b2:	nop	word ptr [rax + rax]


0x40ca:	nop	word ptr [rax + rax]


0x40da:	nop	word ptr [rax + rax]


0x40e8:	nop	dword ptr [rax + rax]


0x410f:	nop	


0x41a9:	nop	dword ptr [rax]


0x41f2:	nop	word ptr [rax + rax]


0x4218:	nop	dword ptr [rax + rax]


0x4231:	nop	dword ptr [rax]


0x4252:	nop	word ptr [rax + rax]


0x43b8:	nop	dword ptr [rax + rax]


0x44cb:	nop	dword ptr [rax + rax]


0x44ee:	nop	


0x45b5:	nop	dword ptr [rax]


0x466d:	nop	dword ptr [rax]


0x4876:	nop	word ptr cs:[rax + rax]


0x4909:	nop	dword ptr [rax]


0x497d:	nop	dword ptr [rax]


0x4a5d:	nop	dword ptr [rax]


0x4d6b:	nop	dword ptr [rax + rax]


0x55f6:	nop	word ptr cs:[rax + rax]


0x5685:	nop	dword ptr [rax]


0x56a6:	nop	word ptr cs:[rax + rax]


0x5705:	nop	dword ptr [rax]


0x5741:	nop	dword ptr [rax]


0x5788:	nop	dword ptr [rax + rax]


0x57d7:	nop	word ptr [rax + rax]


0x5834:	nop	dword ptr [rax]


0x5862:	nop	word ptr [rax + rax]


0x5916:	nop	word ptr cs:[rax + rax]


0x5979:	nop	dword ptr [rax]


0x5bf2:	nop	word ptr [rax + rax]


0x5c79:	nop	dword ptr [rax]


0x5ca4:	nop	dword ptr [rax]


0x5cfd:	nop	dword ptr [rax]


0x5f9b:	nop	dword ptr [rax + rax]


0x6086:	nop	word ptr cs:[rax + rax]


0x60cb:	nop	dword ptr [rax + rax]


0x61f4:	nop	dword ptr [rax]


0x6211:	nop	dword ptr [rax]


0x6222:	nop	word ptr [rax + rax]


0x6266:	nop	word ptr cs:[rax + rax]


0x62c5:	nop	dword ptr [rax]


0x6323:	nop	dword ptr [rax + rax]


0x634f:	nop	


0x65a4:	nop	dword ptr [rax]


0x65d3:	nop	dword ptr [rax + rax]


0x68fd:	nop	dword ptr [rax]


0x6a32:	nop	word ptr [rax + rax]


0x6b5f:	nop	


0x6be2:	nop	word ptr [rax + rax]


0x6c63:	nop	dword ptr [rax + rax]


0x6c8f:	nop	


0x6ca4:	nop	dword ptr [rax]


0x6cd4:	nop	dword ptr [rax]


0x6d26:	nop	word ptr cs:[rax + rax]


0x6d5c:	nop	dword ptr [rax]


0x6d8c:	nop	dword ptr [rax]


0x6dcb:	nop	dword ptr [rax + rax]


0x6de1:	nop	dword ptr [rax]


0x6df5:	nop	dword ptr [rax]


0x6e01:	nop	dword ptr [rax]


0x6e59:	nop	dword ptr [rax]


0x6e79:	nop	dword ptr [rax]


0x6ea2:	nop	word ptr [rax + rax]


0x6efd:	nop	dword ptr [rax]


0x6f0f:	nop	


0x6f42:	nop	word ptr [rax + rax]


0x6fc8:	nop	dword ptr [rax + rax]


0x6fd8:	nop	dword ptr [rax + rax]


0x700d:	nop	dword ptr [rax]


0x704a:	nop	word ptr [rax + rax]


0x7063:	nop	dword ptr [rax + rax]


0x707a:	nop	word ptr [rax + rax]


0x70a9:	nop	dword ptr [rax]


0x70f8:	nop	dword ptr [rax + rax]


0x710c:	nop	dword ptr [rax]


0x711b:	nop	dword ptr [rax + rax]


0x712b:	nop	dword ptr [rax + rax]


0x713c:	nop	dword ptr [rax]


0x7188:	nop	dword ptr [rax + rax]


0x7198:	nop	dword ptr [rax + rax]


0x71af:	nop	


0x71c6:	nop	word ptr cs:[rax + rax]


0x71ea:	nop	word ptr [rax + rax]


0x7263:	nop	dword ptr [rax + rax]


0x7278:	nop	dword ptr [rax + rax]


0x72cb:	nop	dword ptr [rax + rax]


0x747d:	nop	dword ptr [rax]


0x74f8:	nop	dword ptr [rax + rax]


0x772e:	nop	


0x7771:	nop	dword ptr [rax]


0x77d7:	nop	word ptr [rax + rax]


0x7822:	nop	word ptr [rax + rax]


0x7838:	nop	dword ptr [rax + rax]


0x7848:	nop	dword ptr [rax + rax]


0x7858:	nop	dword ptr [rax + rax]


0x7868:	nop	dword ptr [rax + rax]


0x7897:	nop	word ptr [rax + rax]


0x78be:	nop	


0x78dd:	nop	dword ptr [rax]


0x78e5:	nop	dword ptr [rax]


0x7946:	nop	word ptr cs:[rax + rax]


0x7b16:	nop	word ptr cs:[rax + rax]


0x7bcc:	nop	dword ptr [rax]


0x7cad:	nop	dword ptr [rax]


0x7cf9:	nop	dword ptr [rax]


0x7e02:	nop	word ptr [rax + rax]


0x7e65:	nop	dword ptr [rax]


0x7ef6:	nop	word ptr cs:[rax + rax]


0x7f4e:	nop	


0x835b:	nop	dword ptr [rax + rax]


