0x5830:	sub	rsp, 8
0x5834:	add	rsp, 8
0x5838:	ret	


0x5820:	mov	rdx, qword ptr [rip + 0x2027e1]
0x5827:	xor	esi, esi
0x5829:	jmp	0x1670


0x5810:	ret	


0x57a0:	push	r15
0x57a2:	push	r14
0x57a4:	mov	r15, rdx
0x57a7:	push	r13
0x57a9:	push	r12
0x57ab:	lea	r12, [rip + 0x2023be]
0x57b2:	push	rbp
0x57b3:	lea	rbp, [rip + 0x2023be]
0x57ba:	push	rbx
0x57bb:	mov	r13d, edi
0x57be:	mov	r14, rsi
0x57c1:	sub	rbp, r12
0x57c4:	sub	rsp, 8
0x57c8:	sar	rbp, 3
0x57cc:	call	0x13b8


0x5760:	sub	rsp, 8
0x5764:	mov	edi, 0xe
0x5769:	call	0x15f0


0x5700:	sub	rsp, 8
0x5704:	xor	esi, esi
0x5706:	call	0x1620


0x5680:	push	r12
0x5682:	push	rbp
0x5683:	mov	rbp, rdi
0x5686:	push	rbx
0x5687:	call	0x1440


0x55f0:	push	r13
0x55f2:	push	r12
0x55f4:	mov	r13, rsi
0x55f7:	push	rbp
0x55f8:	push	rbx
0x55f9:	mov	rbx, rdi
0x55fc:	mov	r12, rdx
0x55ff:	sub	rsp, 0x18
0x5603:	mov	rax, qword ptr fs:[0x28]
0x560c:	mov	qword ptr [rsp + 8], rax
0x5611:	xor	eax, eax
0x5613:	lea	rax, [rsp + 4]
0x5618:	test	rdi, rdi
0x561b:	cmove	rbx, rax
0x561f:	mov	rdi, rbx
0x5622:	call	0x14e0


0x5590:	mov	rax, qword ptr [rdi + 8]
0x5594:	cmp	qword ptr [rdi + 0x10], rax
0x5598:	je	0x55a0


0x5550:	test	rdi, rdi
0x5553:	push	rbx
0x5554:	mov	rbx, rdi
0x5557:	je	0x556a


0x54d0:	push	r12
0x54d2:	push	rbp
0x54d3:	push	rbx
0x54d4:	mov	rbx, rdi
0x54d7:	call	0x15c0


0x5490:	lea	rsi, [rip + 0xfd8]
0x5497:	sub	rsp, 8
0x549b:	mov	edx, 5
0x54a0:	xor	edi, edi
0x54a2:	call	0x1490


0x5470:	push	rbx
0x5471:	mov	rbx, rdi
0x5474:	call	0x14b0


0x5440:	push	rbp
0x5441:	push	rbx
0x5442:	mov	rbp, rdi
0x5445:	mov	rdi, rsi
0x5448:	mov	rbx, rsi
0x544b:	sub	rsp, 8
0x544f:	call	0x5240


0x5410:	mov	rax, rdi
0x5413:	sub	rsp, 8
0x5417:	mul	rsi
0x541a:	seto	dl
0x541d:	test	rax, rax
0x5420:	js	0x5439


0x53f0:	push	rbx
0x53f1:	mov	rbx, rdi
0x53f4:	call	0x5240


0x53a0:	test	rdi, rdi
0x53a3:	mov	rax, qword ptr [rsi]
0x53a6:	je	0x53d0


0x5310:	test	rdi, rdi
0x5313:	mov	r9, rdx
0x5316:	mov	rcx, qword ptr [rsi]
0x5319:	je	0x5350


0x52e0:	mov	rax, rsi
0x52e3:	mul	rdx
0x52e6:	mov	rsi, rax
0x52e9:	seto	al
0x52ec:	test	rsi, rsi
0x52ef:	js	0x52fb


0x52a0:	test	rsi, rsi
0x52a3:	push	rbx
0x52a4:	mov	rbx, rsi
0x52a7:	jne	0x52ae


0x5290:	jmp	0x5240


0x5260:	mov	rax, rdi
0x5263:	mul	rsi
0x5266:	mov	rdi, rax
0x5269:	seto	al
0x526c:	test	rdi, rdi
0x526f:	js	0x527b


0x5240:	push	rbx
0x5241:	mov	rbx, rdi
0x5244:	call	0x15d0


0x51c0:	push	rbx
0x51c1:	lea	rsi, [rip + 0xf9a]
0x51c8:	mov	edx, 5
0x51cd:	xor	edi, edi
0x51cf:	call	0x1490


0x50e0:	push	rbp
0x50e1:	push	rbx
0x50e2:	mov	r10d, 0x20
0x50e8:	xor	r11d, r11d
0x50eb:	sub	rsp, 0xb8
0x50f2:	mov	rax, qword ptr fs:[0x28]
0x50fb:	mov	qword ptr [rsp + 0x78], rax
0x5100:	xor	eax, eax
0x5102:	lea	rax, [rsp + 0xd0]
0x510a:	mov	qword ptr [rsp + 0xa0], r8
0x5112:	lea	rbx, [rsp + 0xd0]
0x511a:	lea	r8, [rsp + 0x20]
0x511f:	mov	qword ptr [rsp + 0xa8], r9
0x5127:	mov	dword ptr [rsp + 8], 0x20
0x512f:	mov	qword ptr [rsp + 0x10], rax
0x5134:	lea	rax, [rsp + 0x80]
0x513c:	xor	r9d, r9d
0x513f:	mov	qword ptr [rsp + 0x18], rax
0x5144:	mov	rbp, rax
0x5147:	nop	word ptr [rax + rax]
0x5150:	cmp	r10d, 0x2f
0x5154:	ja	0x51ac


0x5060:	sub	rsp, 0x68
0x5064:	mov	r10, r8
0x5067:	xor	r9d, r9d
0x506a:	mov	rax, qword ptr fs:[0x28]
0x5073:	mov	qword ptr [rsp + 0x58], rax
0x5078:	xor	eax, eax
0x507a:	mov	r8, rsp
0x507d:	nop	dword ptr [rax]
0x5080:	mov	eax, dword ptr [r10]
0x5083:	cmp	eax, 0x2f
0x5086:	ja	0x50ca


0x5040:	xor	r9d, r9d
0x5043:	cmp	qword ptr [r8], 0
0x5047:	je	0x505b


0x4c20:	push	r15
0x4c22:	push	r14
0x4c24:	push	r13
0x4c26:	push	r12
0x4c28:	mov	r12, r9
0x4c2b:	push	rbp
0x4c2c:	push	rbx
0x4c2d:	mov	rbp, rdi
0x4c30:	mov	rbx, r8
0x4c33:	sub	rsp, 0x28
0x4c37:	test	rsi, rsi
0x4c3a:	je	0x4d58


0x49e0:	push	r15
0x49e2:	push	r14
0x49e4:	push	r13
0x49e6:	push	r12
0x49e8:	push	rbp
0x49e9:	push	rbx
0x49ea:	lea	rbp, [rsi + 1]
0x49ee:	sub	rsp, 0x68
0x49f2:	mov	rax, qword ptr fs:[0x28]
0x49fb:	mov	qword ptr [rsp + 0x58], rax
0x4a00:	xor	eax, eax
0x4a02:	mov	qword ptr [rsp + 0x10], rdx
0x4a07:	test	rsi, rsi
0x4a0a:	mov	eax, 0x40
0x4a0f:	mov	edx, 8
0x4a14:	cmove	rbp, rax
0x4a18:	mov	qword ptr [rsp + 8], rdi
0x4a1d:	mov	rax, rdx
0x4a20:	mov	qword ptr [rsp + 0x18], rcx
0x4a25:	mov	qword ptr [rsp + 0x38], r8
0x4a2a:	mul	rbp
0x4a2d:	mov	qword ptr [rsp + 0x30], r9
0x4a32:	jo	0x4c00


0x4810:	push	r15
0x4812:	push	r14
0x4814:	push	r13
0x4816:	push	r12
0x4818:	mov	r13, rcx
0x481b:	push	rbp
0x481c:	push	rbx
0x481d:	mov	rbp, rdi
0x4820:	pxor	xmm0, xmm0
0x4824:	sub	rsp, 0x38
0x4828:	mov	rax, qword ptr fs:[0x28]
0x4831:	mov	qword ptr [rsp + 0x28], rax
0x4836:	xor	eax, eax
0x4838:	test	rdx, rdx
0x483b:	movaps	xmmword ptr [rsp], xmm0
0x483f:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x4844:	je	0x48ac


0x4800:	mov	qword ptr [rdi], 0
0x4807:	mov	qword ptr [rdi + 8], 0
0x480f:	ret	


0x47e0:	lea	rcx, [rip + 0x203839]
0x47e7:	mov	rsi, rdi
0x47ea:	mov	rdx, -1
0x47f1:	xor	edi, edi
0x47f3:	jmp	0x3ea0


0x47c0:	lea	rcx, [rip + 0x203859]
0x47c7:	mov	rdx, -1
0x47ce:	jmp	0x3ea0


0x47a0:	lea	rcx, [rip + 0x203879]
0x47a7:	mov	rdx, rsi
0x47aa:	mov	rsi, rdi
0x47ad:	xor	edi, edi
0x47af:	jmp	0x3ea0


0x4790:	lea	rcx, [rip + 0x203889]
0x4797:	jmp	0x3ea0


0x4770:	mov	r8, rcx
0x4773:	mov	rcx, rdx
0x4776:	mov	rdx, rsi
0x4779:	mov	rsi, rdi
0x477c:	xor	edi, edi
0x477e:	jmp	0x46a0


0x4750:	mov	rcx, rdx
0x4753:	mov	r8, -1
0x475a:	mov	rdx, rsi
0x475d:	mov	rsi, rdi
0x4760:	xor	edi, edi
0x4762:	jmp	0x46a0


0x4740:	mov	r8, -1
0x4747:	jmp	0x46a0


0x46a0:	sub	rsp, 0x48
0x46a4:	mov	r9, rcx
0x46a7:	mov	rcx, qword ptr [rip + 0x203bc2]
0x46ae:	movdqa	xmm0, xmmword ptr [rip + 0x203b8a]
0x46b6:	mov	rax, qword ptr fs:[0x28]
0x46bf:	mov	qword ptr [rsp + 0x38], rax
0x46c4:	xor	eax, eax
0x46c6:	movaps	xmmword ptr [rsp], xmm0
0x46ca:	test	rsi, rsi
0x46cd:	mov	qword ptr [rsp + 0x30], rcx
0x46d2:	mov	dword ptr [rsp], 0xa
0x46d9:	movdqa	xmm0, xmmword ptr [rip + 0x203b6f]
0x46e1:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x46e6:	movdqa	xmm0, xmmword ptr [rip + 0x203b72]
0x46ee:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x46f3:	je	0x4727


0x4610:	sub	rsp, 0x48
0x4614:	mov	rax, rdx
0x4617:	mov	rdx, qword ptr fs:[0x28]
0x4620:	mov	qword ptr [rsp + 0x38], rdx
0x4625:	xor	edx, edx
0x4627:	cmp	esi, 0xa
0x462a:	je	0x4694


0x4600:	mov	edx, 0x3a
0x4605:	jmp	0x4530


0x45e0:	mov	edx, 0x3a
0x45e5:	mov	rsi, -1
0x45ec:	jmp	0x4530


0x45d0:	movsx	edx, sil
0x45d4:	mov	rsi, -1
0x45db:	jmp	0x4530


0x4530:	sub	rsp, 0x48
0x4534:	mov	ecx, edx
0x4536:	mov	rax, qword ptr fs:[0x28]
0x453f:	mov	qword ptr [rsp + 0x38], rax
0x4544:	xor	eax, eax
0x4546:	mov	rax, qword ptr [rip + 0x203d23]
0x454d:	mov	r8, rsp
0x4550:	and	ecx, 0x1f
0x4553:	movdqa	xmm0, xmmword ptr [rip + 0x203ce5]
0x455b:	mov	qword ptr [rsp + 0x30], rax
0x4560:	mov	eax, edx
0x4562:	movaps	xmmword ptr [rsp], xmm0
0x4566:	shr	al, 5
0x4569:	movzx	eax, al
0x456c:	lea	r9, [r8 + rax*4 + 8]
0x4571:	movdqa	xmm0, xmmword ptr [rip + 0x203cd7]
0x4579:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x457e:	movdqa	xmm0, xmmword ptr [rip + 0x203cda]
0x4586:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x458b:	mov	edx, dword ptr [r9]
0x458e:	mov	eax, edx
0x4590:	shr	eax, cl
0x4592:	not	eax
0x4594:	and	eax, 1
0x4597:	shl	eax, cl
0x4599:	mov	rcx, r8
0x459c:	xor	eax, edx
0x459e:	mov	rdx, rsi
0x45a1:	mov	rsi, rdi
0x45a4:	mov	dword ptr [r9], eax
0x45a7:	xor	edi, edi
0x45a9:	call	0x3ea0


0x4520:	mov	rcx, rdx
0x4523:	mov	rdx, rsi
0x4526:	mov	esi, edi
0x4528:	xor	edi, edi
0x452a:	jmp	0x4480


0x4510:	mov	rdx, rsi
0x4513:	mov	esi, edi
0x4515:	xor	edi, edi
0x4517:	jmp	0x43f0


0x4480:	sub	rsp, 0x48
0x4484:	mov	rax, rdx
0x4487:	mov	rdx, rcx
0x448a:	mov	rcx, qword ptr fs:[0x28]
0x4493:	mov	qword ptr [rsp + 0x38], rcx
0x4498:	xor	ecx, ecx
0x449a:	cmp	esi, 0xa
0x449d:	je	0x4500


0x43f0:	sub	rsp, 0x48
0x43f4:	mov	rax, rdx
0x43f7:	mov	rdx, qword ptr fs:[0x28]
0x4400:	mov	qword ptr [rsp + 0x38], rdx
0x4405:	xor	edx, edx
0x4407:	cmp	esi, 0xa
0x440a:	je	0x4474


0x43d0:	lea	rcx, [rip + 0x203e69]
0x43d7:	mov	rdx, rsi
0x43da:	mov	rsi, rdi
0x43dd:	xor	edi, edi
0x43df:	jmp	0x3ea0


0x43b0:	lea	rcx, [rip + 0x203e89]
0x43b7:	mov	rsi, rdi
0x43ba:	mov	rdx, -1
0x43c1:	xor	edi, edi
0x43c3:	jmp	0x3ea0


0x43a0:	lea	rcx, [rip + 0x203e99]
0x43a7:	jmp	0x3ea0


0x4380:	lea	rcx, [rip + 0x203eb9]
0x4387:	mov	rdx, -1
0x438e:	jmp	0x3ea0


0x42e0:	mov	eax, dword ptr [rip + 0x203d72]
0x42e6:	push	r12
0x42e8:	mov	r12, qword ptr [rip + 0x203d71]
0x42ef:	push	rbp
0x42f0:	push	rbx
0x42f1:	cmp	eax, 1
0x42f4:	jle	0x4321


0x42d0:	mov	rcx, rdx
0x42d3:	xor	edx, edx
0x42d5:	jmp	0x41e0


0x41e0:	push	r15
0x41e2:	push	r14
0x41e4:	lea	rax, [rip + 0x204055]
0x41eb:	push	r13
0x41ed:	push	r12
0x41ef:	mov	r12, rdx
0x41f2:	push	rbp
0x41f3:	push	rbx
0x41f4:	mov	rbx, rcx
0x41f7:	mov	r14, rdi
0x41fa:	mov	r15, rsi
0x41fd:	sub	rsp, 0x38
0x4201:	test	rcx, rcx
0x4204:	cmove	rbx, rax
0x4208:	xor	ebp, ebp
0x420a:	call	0x1410


0x4160:	push	r15
0x4162:	push	r14
0x4164:	lea	rax, [rip + 0x2040d5]
0x416b:	push	r13
0x416d:	push	r12
0x416f:	mov	r13, rdi
0x4172:	push	rbp
0x4173:	push	rbx
0x4174:	mov	rbx, r8
0x4177:	mov	r14, rsi
0x417a:	mov	r15, rdx
0x417d:	sub	rsp, 0x18
0x4181:	test	r8, r8
0x4184:	cmove	rbx, rax
0x4188:	mov	qword ptr [rsp + 8], rcx
0x418d:	call	0x1410


0x4130:	lea	rax, [rip + 0x204109]
0x4137:	test	rdi, rdi
0x413a:	cmove	rdi, rax
0x413e:	test	rsi, rsi
0x4141:	mov	dword ptr [rdi], 0xa
0x4147:	je	0x4157


0x4110:	lea	rax, [rip + 0x204129]
0x4117:	test	rdi, rdi
0x411a:	cmove	rdi, rax
0x411e:	mov	eax, dword ptr [rdi + 4]
0x4121:	mov	dword ptr [rdi + 4], esi
0x4124:	ret	


0x40d0:	lea	rax, [rip + 0x204169]
0x40d7:	test	rdi, rdi
0x40da:	mov	ecx, esi
0x40dc:	cmove	rdi, rax
0x40e0:	mov	eax, esi
0x40e2:	and	ecx, 0x1f
0x40e5:	shr	al, 5
0x40e8:	movzx	eax, al
0x40eb:	lea	rdi, [rdi + rax*4 + 8]
0x40f0:	mov	esi, dword ptr [rdi]
0x40f2:	mov	eax, esi
0x40f4:	shr	eax, cl
0x40f6:	xor	edx, eax
0x40f8:	and	eax, 1
0x40fb:	and	edx, 1
0x40fe:	shl	edx, cl
0x4100:	xor	edx, esi
0x4102:	mov	dword ptr [rdi], edx
0x4104:	ret	


0x40b0:	lea	rax, [rip + 0x204189]
0x40b7:	test	rdi, rdi
0x40ba:	cmove	rdi, rax
0x40be:	mov	dword ptr [rdi], esi
0x40c0:	ret	


0x4090:	lea	rax, [rip + 0x2041a9]
0x4097:	test	rdi, rdi
0x409a:	cmove	rdi, rax
0x409e:	mov	eax, dword ptr [rdi]
0x40a0:	ret	


0x4050:	push	r12
0x4052:	push	rbp
0x4053:	push	rbx
0x4054:	mov	rbx, rdi
0x4057:	call	0x1410


0x3ea0:	push	r15
0x3ea2:	push	r14
0x3ea4:	movsxd	r15, edi
0x3ea7:	push	r13
0x3ea9:	push	r12
0x3eab:	mov	r14, rdx
0x3eae:	push	rbp
0x3eaf:	push	rbx
0x3eb0:	mov	rbp, rcx
0x3eb3:	sub	rsp, 0x28
0x3eb7:	mov	qword ptr [rsp + 8], rsi
0x3ebc:	call	0x1410


0x2c60:	push	r15
0x2c62:	push	r14
0x2c64:	mov	r15d, r8d
0x2c67:	push	r13
0x2c69:	push	r12
0x2c6b:	mov	r14, rdi
0x2c6e:	push	rbp
0x2c6f:	push	rbx
0x2c70:	mov	ebx, r9d
0x2c73:	mov	r13, rsi
0x2c76:	mov	rbp, rcx
0x2c79:	and	ebx, 2
0x2c7c:	sub	rsp, 0xb8
0x2c83:	mov	rax, qword ptr [rsp + 0xf0]
0x2c8b:	mov	qword ptr [rsp + 0x10], rdx
0x2c90:	mov	dword ptr [rsp + 8], r8d
0x2c95:	mov	dword ptr [rsp + 0x78], r9d
0x2c9a:	mov	qword ptr [rsp + 0x20], rax
0x2c9f:	mov	rax, qword ptr [rsp + 0xf8]
0x2ca7:	mov	qword ptr [rsp + 0x68], rax
0x2cac:	mov	rax, qword ptr [rsp + 0x100]
0x2cb4:	mov	qword ptr [rsp + 0x60], rax
0x2cb9:	mov	rax, qword ptr fs:[0x28]
0x2cc2:	mov	qword ptr [rsp + 0xa8], rax
0x2cca:	xor	eax, eax
0x2ccc:	call	0x14a0


0x2b70:	push	rbp
0x2b71:	push	rbx
0x2b72:	mov	rbp, rdi
0x2b75:	mov	ebx, esi
0x2b77:	sub	rsp, 8
0x2b7b:	call	0x5760


0x2ad0:	test	rdi, rdi
0x2ad3:	push	rbx
0x2ad4:	je	0x2b4d


0x2990:	push	r14
0x2992:	push	r13
0x2994:	mov	r14, r8
0x2997:	push	r12
0x2999:	push	rbp
0x299a:	mov	r12, rdx
0x299d:	push	rbx
0x299e:	mov	r13, rcx
0x29a1:	sub	rsp, 0xd0
0x29a8:	test	al, al
0x29aa:	mov	rbp, qword ptr [rsp + 0x100]
0x29b2:	je	0x29eb


0x2850:	push	r13
0x2852:	push	r12
0x2854:	mov	r13, r8
0x2857:	push	rbp
0x2858:	push	rbx
0x2859:	mov	rbp, rdx
0x285c:	mov	r12, rcx
0x285f:	sub	rsp, 0xe8
0x2866:	test	al, al
0x2868:	je	0x28a4


0x26a0:	push	r15
0x26a2:	push	r14
0x26a4:	mov	r15, rsi
0x26a7:	push	r13
0x26a9:	push	r12
0x26ab:	mov	r12, rdx
0x26ae:	push	rbp
0x26af:	push	rbx
0x26b0:	sub	rsp, 0x18
0x26b4:	mov	qword ptr [rsp + 8], rdi
0x26b9:	mov	rdi, rdx
0x26bc:	call	0x15c0


0x2650:	push	rbp
0x2651:	push	rbx
0x2652:	mov	ebp, edi
0x2654:	lea	rdi, [rip + 0x357f]
0x265b:	xor	esi, esi
0x265d:	xor	eax, eax
0x265f:	sub	rsp, 8
0x2663:	mov	ebx, 1
0x2668:	call	0x1650


0x2620:	test	rdi, rdi
0x2623:	je	0x2640


0x2610:	jmp	0x1560


0x2560:	push	rbp
0x2561:	push	rbx
0x2562:	sub	rsp, 8
0x2566:	mov	rdi, qword ptr [rip + 0x205b1b]
0x256d:	call	0x5680


0x2550:	mov	byte ptr [rip + 0x205bb9], dil
0x2557:	ret	


0x2540:	mov	qword ptr [rip + 0x205bd1], rdi
0x2547:	ret	


0x21d0:	push	r13
0x21d2:	push	r12
0x21d4:	mov	edx, 5
0x21d9:	push	rbp
0x21da:	push	rbx
0x21db:	mov	ebp, edi
0x21dd:	sub	rsp, 0x88
0x21e4:	mov	rbx, qword ptr [rip + 0x205f35]
0x21eb:	mov	rax, qword ptr fs:[0x28]
0x21f4:	mov	qword ptr [rsp + 0x78], rax
0x21f9:	xor	eax, eax
0x21fb:	test	edi, edi
0x21fd:	je	0x222d


0x2090:	xor	eax, eax
0x2092:	cmp	qword ptr [rdi + 0x20], 0
0x2097:	je	0x20e8


0x2050:	cmp	qword ptr [rdi + 0x20], 0
0x2055:	jne	0x2079


0x1fe0:	push	rbp
0x1fe1:	push	rbx
0x1fe2:	mov	rbp, rdi
0x1fe5:	mov	edi, 0x38
0x1fea:	sub	rsp, 8
0x1fee:	call	0x5240


0x1f70:	push	rbp
0x1f71:	push	rbx
0x1f72:	mov	rbp, rsi
0x1f75:	mov	rbx, rdi
0x1f78:	sub	rsp, 8
0x1f7c:	mov	rdi, qword ptr [rbx + 8]
0x1f80:	test	rdi, rdi
0x1f83:	je	0x1fc0


0x1f60:	add	qword ptr [rip + 0x206188], 1
0x1f68:	xor	eax, eax
0x1f6a:	ret	


0x1f50:	push	rbp
0x1f51:	mov	rbp, rsp
0x1f54:	pop	rbp
0x1f55:	jmp	0x1ec0


0x1f10:	cmp	byte ptr [rip + 0x2061d1], 0
0x1f17:	jne	0x1f48


0x1ec0:	lea	rdi, [rip + 0x2061b9]
0x1ec7:	lea	rsi, [rip + 0x2061b2]
0x1ece:	push	rbp
0x1ecf:	sub	rsi, rdi
0x1ed2:	mov	rbp, rsp
0x1ed5:	sar	rsi, 3
0x1ed9:	mov	rax, rsi
0x1edc:	shr	rax, 0x3f
0x1ee0:	add	rsi, rax
0x1ee3:	sar	rsi, 1
0x1ee6:	je	0x1f00


0x1e80:	lea	rdi, [rip + 0x2061f9]
0x1e87:	push	rbp
0x1e88:	lea	rax, [rip + 0x2061f1]
0x1e8f:	cmp	rax, rdi
0x1e92:	mov	rbp, rsp
0x1e95:	je	0x1eb0


0x1e50:	xor	ebp, ebp
0x1e52:	mov	r9, rdx
0x1e55:	pop	rsi
0x1e56:	mov	rdx, rsp
0x1e59:	and	rsp, 0xfffffffffffffff0
0x1e5d:	push	rax
0x1e5e:	push	rsp
0x1e5f:	lea	r8, [rip + 0x39aa]
0x1e66:	lea	rcx, [rip + 0x3933]
0x1e6d:	lea	rdi, [rip - 0x784]
0x1e74:	call	qword ptr [rip + 0x20614e]


0x16f0:	push	r15
0x16f2:	push	r14
0x16f4:	push	r13
0x16f6:	push	r12
0x16f8:	push	rbp
0x16f9:	push	rbx
0x16fa:	mov	ebp, edi
0x16fc:	mov	rbx, rsi
0x16ff:	sub	rsp, 0x58
0x1703:	mov	rdi, qword ptr [rsi]
0x1706:	mov	rax, qword ptr fs:[0x28]
0x170f:	mov	qword ptr [rsp + 0x48], rax
0x1714:	xor	eax, eax
0x1716:	call	0x2ad0


0x13b8:	sub	rsp, 8
0x13bc:	mov	rax, qword ptr [rip + 0x206c0d]
0x13c3:	test	rax, rax
0x13c6:	je	0x13ca


0x1670:	jmp	qword ptr [rip + 0x206912]


0x15f0:	jmp	qword ptr [rip + 0x206952]


0x1620:	jmp	qword ptr [rip + 0x20693a]


0x1440:	jmp	qword ptr [rip + 0x206a2a]


0x14e0:	jmp	qword ptr [rip + 0x2069da]


0x55a0:	mov	rax, qword ptr [rdi + 0x20]
0x55a4:	cmp	qword ptr [rdi + 0x28], rax
0x55a8:	jne	0x559a


0x559a:	jmp	0x1660


0x556a:	mov	rdi, rbx
0x556d:	pop	rbx
0x556e:	jmp	0x15e0


0x5559:	call	0x1600


0x15c0:	jmp	qword ptr [rip + 0x20696a]


0x1490:	jmp	qword ptr [rip + 0x206a02]


0x14b0:	jmp	qword ptr [rip + 0x2069f2]


0x5439:	call	0x5490


0x5422:	movzx	edx, dl
0x5425:	test	rdx, rdx
0x5428:	jne	0x5439


0x53d0:	test	rax, rax
0x53d3:	mov	edx, 0x80
0x53d8:	cmove	rax, rdx
0x53dc:	test	rax, rax
0x53df:	jns	0x53c2


0x53a8:	movabs	rdx, 0x5555555555555553
0x53b2:	cmp	rax, rdx
0x53b5:	ja	0x53e1


0x5350:	test	rcx, rcx
0x5353:	je	0x5378


0x531b:	xor	edx, edx
0x531d:	movabs	rax, 0x5555555555555554
0x5327:	div	r9
0x532a:	cmp	rax, rcx
0x532d:	jbe	0x536b


0x52fb:	sub	rsp, 8
0x52ff:	call	0x5490


0x52f1:	movzx	eax, al
0x52f4:	test	rax, rax
0x52f7:	jne	0x52fb


0x52a9:	test	rdi, rdi
0x52ac:	jne	0x52c8


0x52ae:	mov	rsi, rbx
0x52b1:	call	0x1610


0x527b:	sub	rsp, 8
0x527f:	call	0x5490


0x5271:	movzx	eax, al
0x5274:	test	rax, rax
0x5277:	jne	0x527b


0x15d0:	jmp	qword ptr [rip + 0x206962]


0x5156:	mov	eax, r10d
0x5159:	mov	r11d, 1
0x515f:	add	r10d, 8
0x5163:	add	rax, rbp
0x5166:	mov	rax, qword ptr [rax]
0x5169:	test	rax, rax
0x516c:	mov	qword ptr [r8 + r9*8], rax
0x5170:	je	0x517c


0x51ac:	mov	rax, rbx
0x51af:	add	rbx, 8
0x51b3:	jmp	0x5166


0x5088:	mov	r11d, eax
0x508b:	add	r11, qword ptr [r10 + 0x10]
0x508f:	add	eax, 8
0x5092:	mov	dword ptr [r10], eax
0x5095:	mov	rax, qword ptr [r11]
0x5098:	test	rax, rax
0x509b:	mov	qword ptr [r8 + r9*8], rax
0x509f:	je	0x50ab


0x50ca:	mov	r11, qword ptr [r10 + 8]
0x50ce:	lea	rax, [r11 + 8]
0x50d2:	mov	qword ptr [r10 + 8], rax
0x50d6:	jmp	0x5095


0x505b:	jmp	0x4c20


0x4d58:	mov	r8, rcx
0x4d5b:	mov	rcx, rdx
0x4d5e:	lea	rdx, [rip + 0x13af]
0x4d65:	mov	esi, 1
0x4d6a:	xor	eax, eax
0x4d6c:	call	0x16a0


0x4c40:	mov	r8, rdx
0x4c43:	lea	rdx, [rip + 0x14be]
0x4c4a:	mov	r9, rcx
0x4c4d:	xor	eax, eax
0x4c4f:	mov	rcx, rsi
0x4c52:	mov	esi, 1
0x4c57:	call	0x16a0


0x4c00:	mov	ecx, 1
0x4c05:	jmp	0x4a3a


0x4a38:	xor	ecx, ecx
0x4a3a:	test	rax, rax
0x4a3d:	js	0x4bfb


0x48ac:	mov	rax, qword ptr [rbp + 8]
0x48b0:	cmp	rax, qword ptr [rbp + 0x10]
0x48b4:	jb	0x4890


0x4846:	add	rdx, rsi
0x4849:	mov	rdi, rsp
0x484c:	mov	r8d, 1
0x4852:	nop	word ptr [rax + rax]
0x4858:	mov	rbx, r8
0x485b:	add	rsi, 1
0x485f:	movzx	ecx, byte ptr [rsi - 1]
0x4863:	mov	rax, rcx
0x4866:	and	ecx, 0x3f
0x4869:	shr	rax, 3
0x486d:	shl	rbx, cl
0x4870:	and	eax, 0x18
0x4873:	or	qword ptr [rdi + rax], rbx
0x4877:	cmp	rdx, rsi
0x487a:	jne	0x4858


0x4727:	call	0x1400


0x46f5:	test	rdx, rdx
0x46f8:	je	0x4727


0x4694:	call	0x1400


0x462c:	mov	dword ptr [rsp], esi
0x462f:	mov	rcx, rsp
0x4632:	mov	rdx, -1
0x4639:	mov	rsi, rax
0x463c:	mov	qword ptr [rsp + 4], 0
0x4645:	mov	qword ptr [rsp + 0xc], 0x4000000
0x464e:	mov	qword ptr [rsp + 0x14], 0
0x4657:	mov	qword ptr [rsp + 0x1c], 0
0x4660:	mov	qword ptr [rsp + 0x24], 0
0x4669:	mov	qword ptr [rsp + 0x2c], 0
0x4672:	mov	dword ptr [rsp + 0x34], 0
0x467a:	call	0x3ea0


0x4500:	call	0x1400


0x449f:	mov	dword ptr [rsp], esi
0x44a2:	mov	rcx, rsp
0x44a5:	mov	rsi, rax
0x44a8:	mov	qword ptr [rsp + 4], 0
0x44b1:	mov	qword ptr [rsp + 0xc], 0
0x44ba:	mov	qword ptr [rsp + 0x14], 0
0x44c3:	mov	qword ptr [rsp + 0x1c], 0
0x44cc:	mov	qword ptr [rsp + 0x24], 0
0x44d5:	mov	qword ptr [rsp + 0x2c], 0
0x44de:	mov	dword ptr [rsp + 0x34], 0
0x44e6:	call	0x3ea0


0x4474:	call	0x1400


0x440c:	mov	dword ptr [rsp], esi
0x440f:	mov	rcx, rsp
0x4412:	mov	rdx, -1
0x4419:	mov	rsi, rax
0x441c:	mov	qword ptr [rsp + 4], 0
0x4425:	mov	qword ptr [rsp + 0xc], 0
0x442e:	mov	qword ptr [rsp + 0x14], 0
0x4437:	mov	qword ptr [rsp + 0x1c], 0
0x4440:	mov	qword ptr [rsp + 0x24], 0
0x4449:	mov	qword ptr [rsp + 0x2c], 0
0x4452:	mov	dword ptr [rsp + 0x34], 0
0x445a:	call	0x3ea0


0x4321:	mov	rdi, qword ptr [r12 + 8]
0x4326:	lea	rbx, [rip + 0x203e13]
0x432d:	cmp	rdi, rbx
0x4330:	je	0x4349


0x42f6:	sub	eax, 2
0x42f9:	lea	rbx, [r12 + 0x18]
0x42fe:	shl	rax, 4
0x4302:	lea	rbp, [r12 + rax + 0x28]
0x4307:	nop	word ptr [rax + rax]
0x4310:	mov	rdi, qword ptr [rbx]
0x4313:	add	rbx, 0x10
0x4317:	call	0x13f0


0x1410:	jmp	qword ptr [rip + 0x206a42]


0x4157:	sub	rsp, 8
0x415b:	call	0x1400


0x4149:	test	rdx, rdx
0x414c:	je	0x4157


0x14a0:	jmp	qword ptr [rip + 0x2069fa]


0x2b4d:	mov	rcx, qword ptr [rip + 0x20558c]
0x2b54:	lea	rdi, [rip + 0x309d]
0x2b5b:	mov	edx, 0x37
0x2b60:	mov	esi, 1
0x2b65:	call	0x1690


0x2ad6:	mov	esi, 0x2f
0x2adb:	mov	rbx, rdi
0x2ade:	call	0x1500


0x29eb:	mov	rax, qword ptr fs:[0x28]
0x29f4:	mov	qword ptr [rsp + 0x18], rax
0x29f9:	xor	eax, eax
0x29fb:	lea	rdx, [rip + 0x2f25]
0x2a02:	lea	rax, [rip + 0x31db]
0x2a09:	test	r9b, r9b
0x2a0c:	lea	rcx, [rip + 0x20516d]
0x2a13:	cmove	rdx, rax
0x2a17:	xor	r8d, r8d
0x2a1a:	mov	ebx, dword ptr [rip + 0x2056a0]
0x2a20:	mov	dword ptr [rip + 0x205696], 1
0x2a2a:	call	0x14d0


0x29b4:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x29b9:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x29be:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x29c3:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x29cb:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x29d3:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x29db:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x29e3:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x29eb:	mov	rax, qword ptr fs:[0x28]
0x29f4:	mov	qword ptr [rsp + 0x18], rax
0x29f9:	xor	eax, eax
0x29fb:	lea	rdx, [rip + 0x2f25]
0x2a02:	lea	rax, [rip + 0x31db]
0x2a09:	test	r9b, r9b
0x2a0c:	lea	rcx, [rip + 0x20516d]
0x2a13:	cmove	rdx, rax
0x2a17:	xor	r8d, r8d
0x2a1a:	mov	ebx, dword ptr [rip + 0x2056a0]
0x2a20:	mov	dword ptr [rip + 0x205696], 1
0x2a2a:	call	0x14d0


0x28a4:	mov	rax, qword ptr fs:[0x28]
0x28ad:	mov	qword ptr [rsp + 0x28], rax
0x28b2:	xor	eax, eax
0x28b4:	cmp	edi, 2
0x28b7:	mov	ebx, dword ptr [rip + 0x205803]
0x28bd:	mov	dword ptr [rip + 0x2057f9], 0
0x28c7:	je	0x2900


0x286a:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x286f:	movaps	xmmword ptr [rsp + 0x70], xmm1
0x2874:	movaps	xmmword ptr [rsp + 0x80], xmm2
0x287c:	movaps	xmmword ptr [rsp + 0x90], xmm3
0x2884:	movaps	xmmword ptr [rsp + 0xa0], xmm4
0x288c:	movaps	xmmword ptr [rsp + 0xb0], xmm5
0x2894:	movaps	xmmword ptr [rsp + 0xc0], xmm6
0x289c:	movaps	xmmword ptr [rsp + 0xd0], xmm7
0x28a4:	mov	rax, qword ptr fs:[0x28]
0x28ad:	mov	qword ptr [rsp + 0x28], rax
0x28b2:	xor	eax, eax
0x28b4:	cmp	edi, 2
0x28b7:	mov	ebx, dword ptr [rip + 0x205803]
0x28bd:	mov	dword ptr [rip + 0x2057f9], 0
0x28c7:	je	0x2900


0x1650:	jmp	qword ptr [rip + 0x206922]


0x2640:	ret	


0x2625:	push	rbx
0x2626:	mov	ebx, esi
0x2628:	call	0x15c0


0x1560:	jmp	qword ptr [rip + 0x20699a]


0x222d:	lea	rsi, [rip + 0x379c]
0x2234:	xor	edi, edi
0x2236:	call	0x1490


0x21ff:	lea	rsi, [rip + 0x37a2]
0x2206:	xor	edi, edi
0x2208:	call	0x1490


0x20e8:	ret	


0x2099:	push	r13
0x209b:	push	r12
0x209d:	push	rbp
0x209e:	push	rbx
0x209f:	mov	rbx, rdi
0x20a2:	sub	rsp, 8
0x20a6:	mov	rdx, qword ptr [rip + 0x20604b]
0x20ad:	test	rdx, rdx
0x20b0:	je	0x20f0


0x2057:	cmp	qword ptr [rdi], 0
0x205b:	je	0x2079


0x2079:	xor	eax, eax
0x207b:	ret	


0x1fc0:	cmp	qword ptr [rbx + 0x10], 0
0x1fc5:	jne	0x1f91


0x1f85:	mov	rsi, rbp
0x1f88:	call	0x1f70


0x1f19:	cmp	qword ptr [rip + 0x2060bf], 0
0x1f21:	push	rbp
0x1f22:	mov	rbp, rsp
0x1f25:	je	0x1f33


0x1f48:	ret	


0x1f00:	pop	rbp
0x1f01:	ret	


0x1ee8:	mov	rax, qword ptr [rip + 0x2060e9]
0x1eef:	test	rax, rax
0x1ef2:	je	0x1f00


0x1eb0:	pop	rbp
0x1eb1:	ret	


0x1e97:	mov	rax, qword ptr [rip + 0x206122]
0x1e9e:	test	rax, rax
0x1ea1:	je	0x1eb0




0x13ca:	add	rsp, 8
0x13ce:	ret	


0x13c8:	call	rax












0x55aa:	cmp	qword ptr [rdi + 0x48], 0
0x55af:	jne	0x559a


0x1660:	jmp	qword ptr [rip + 0x20691a]


0x15e0:	jmp	qword ptr [rip + 0x20695a]


0x1600:	jmp	qword ptr [rip + 0x20694a]








0x542a:	call	0x1590


0x53e1:	sub	rsp, 8
0x53e5:	call	0x5490


0x53c2:	mov	qword ptr [rsi], rax
0x53c5:	mov	rsi, rax
0x53c8:	jmp	0x52a0


0x53b7:	mov	rdx, rax
0x53ba:	shr	rdx, 1
0x53bd:	lea	rax, [rdx + rax + 1]
0x53c2:	mov	qword ptr [rsi], rax
0x53c5:	mov	rsi, rax
0x53c8:	jmp	0x52a0


0x5378:	xor	edx, edx
0x537a:	mov	eax, 0x80
0x537f:	xor	r8d, r8d
0x5382:	div	r9
0x5385:	test	rax, rax
0x5388:	sete	r8b
0x538c:	lea	rcx, [r8 + rax]
0x5390:	jmp	0x5355


0x5355:	mov	rax, rcx
0x5358:	mul	r9
0x535b:	seto	dl
0x535e:	test	rax, rax
0x5361:	movzx	edx, dl
0x5364:	js	0x536b


0x536b:	sub	rsp, 8
0x536f:	call	0x5490


0x532f:	mov	rax, rcx
0x5332:	shr	rax, 1
0x5335:	lea	rcx, [rax + rcx + 1]
0x533a:	mov	qword ptr [rsi], rcx
0x533d:	imul	rcx, r9
0x5341:	mov	rsi, rcx
0x5344:	jmp	0x52a0


0x52f9:	jmp	0x52a0


0x52c8:	call	0x13f0


0x1610:	jmp	qword ptr [rip + 0x206942]


0x5279:	jmp	0x5240




0x517c:	test	r11b, r11b
0x517f:	jne	0x51a5


0x5172:	add	r9, 1
0x5176:	cmp	r9, 0xa
0x517a:	jne	0x5150


0x5166:	mov	rax, qword ptr [rax]
0x5169:	test	rax, rax
0x516c:	mov	qword ptr [r8 + r9*8], rax
0x5170:	je	0x517c


0x50ab:	call	0x4c20


0x50a1:	add	r9, 1
0x50a5:	cmp	r9, 0xa
0x50a9:	jne	0x5080


0x5095:	mov	rax, qword ptr [r11]
0x5098:	test	rax, rax
0x509b:	mov	qword ptr [r8 + r9*8], rax
0x509f:	je	0x50ab


0x5050:	add	r9, 1
0x5054:	cmp	qword ptr [r8 + r9*8], 0
0x5059:	jne	0x5050


0x16a0:	jmp	qword ptr [rip + 0x2068fa]


0x4a3a:	test	rax, rax
0x4a3d:	js	0x4bfb


0x4bfb:	call	0x5490


0x4a43:	test	rcx, rcx
0x4a46:	jne	0x4bfb


0x4890:	lea	rdx, [rax + 1]
0x4894:	mov	qword ptr [rbp + 8], rdx
0x4898:	movzx	ebx, byte ptr [rax]
0x489b:	movsxd	rax, ebx
0x489e:	shr	rax, 6
0x48a2:	mov	rax, qword ptr [rsp + rax*8]
0x48a6:	bt	rax, rbx
0x48aa:	jae	0x48c4


0x48b6:	mov	rdi, rbp
0x48b9:	call	0x13e0


0x487c:	mov	rax, qword ptr [rbp + 8]
0x4880:	cmp	rax, qword ptr [rbp + 0x10]
0x4884:	jae	0x48b6


0x4858:	mov	rbx, r8
0x485b:	add	rsi, 1
0x485f:	movzx	ecx, byte ptr [rsi - 1]
0x4863:	mov	rax, rcx
0x4866:	and	ecx, 0x3f
0x4869:	shr	rax, 3
0x486d:	shl	rbx, cl
0x4870:	and	eax, 0x18
0x4873:	or	qword ptr [rdi + rax], rbx
0x4877:	cmp	rdx, rsi
0x487a:	jne	0x4858


0x1400:	jmp	qword ptr [rip + 0x206a4a]


0x46fa:	mov	qword ptr [rsp + 0x28], rsi
0x46ff:	mov	qword ptr [rsp + 0x30], rdx
0x4704:	mov	rcx, rsp
0x4707:	mov	rdx, r8
0x470a:	mov	rsi, r9
0x470d:	call	0x3ea0


0x4349:	lea	rbx, [rip + 0x203d20]
0x4350:	cmp	r12, rbx
0x4353:	je	0x4364


0x4332:	call	0x13f0


0x13f0:	jmp	qword ptr [rip + 0x206a52]




0x414e:	mov	qword ptr [rdi + 0x28], rsi
0x4152:	mov	qword ptr [rdi + 0x30], rdx
0x4156:	ret	




0x1690:	jmp	qword ptr [rip + 0x206902]


0x1500:	jmp	qword ptr [rip + 0x2069ca]


0x14d0:	jmp	qword ptr [rip + 0x2069e2]


0x2900:	lea	rcx, [rip + 0x205279]
0x2907:	lea	rdx, [rip + 0x32d6]
0x290e:	xor	r8d, r8d
0x2911:	mov	qword ptr [rsp + 8], r9
0x2916:	call	0x14d0


0x28c9:	mov	rax, qword ptr [rsp + 0x28]
0x28ce:	xor	rax, qword ptr fs:[0x28]
0x28d7:	mov	dword ptr [rip + 0x2057e3], ebx
0x28dd:	mov	dword ptr [rip + 0x2057b1], 0
0x28e7:	jne	0x298a






0x20f0:	mov	qword ptr [rip + 0x206001], rdi
0x20f7:	add	rsp, 8
0x20fb:	pop	rbx
0x20fc:	pop	rbp
0x20fd:	pop	r12
0x20ff:	pop	r13
0x2101:	ret	


0x20b2:	mov	rcx, qword ptr [rdi + 0x30]
0x20b6:	test	rcx, rcx
0x20b9:	je	0x20d9


0x205d:	cmp	qword ptr [rip + 0x2060a3], 0
0x2065:	je	0x2080


0x1fc7:	add	rsp, 8
0x1fcb:	mov	rdi, rbx
0x1fce:	mov	rax, rbp
0x1fd1:	pop	rbx
0x1fd2:	pop	rbp
0x1fd3:	jmp	rax


0x1f91:	mov	rdi, rbx
0x1f94:	call	rbp


0x1f33:	call	0x1e80


0x1f27:	mov	rdi, qword ptr [rip + 0x2060da]
0x1f2e:	call	0x16e0


0x1ef4:	pop	rbp
0x1ef5:	jmp	rax


0x1ea3:	pop	rbp
0x1ea4:	jmp	rax


0x55b1:	push	r12
0x55b3:	push	rbp
0x55b4:	mov	r12d, edx
0x55b7:	push	rbx
0x55b8:	mov	rbp, rsi
0x55bb:	mov	rbx, rdi
0x55be:	call	0x15c0








0x1590:	jmp	qword ptr [rip + 0x206982]


0x5366:	test	rdx, rdx
0x5369:	je	0x533a




0x5181:	call	0x4c20


0x51a5:	mov	dword ptr [rsp + 8], r10d
0x51aa:	jmp	0x5181


0x5150:	cmp	r10d, 0x2f
0x5154:	ja	0x51ac


0x5080:	mov	eax, dword ptr [r10]
0x5083:	cmp	eax, 0x2f
0x5086:	ja	0x50ca




0x4a4c:	lea	rbx, [rbp*8]
0x4a54:	mov	rdi, rbx
0x4a57:	call	0x5240


0x48c4:	mov	r15, qword ptr [r13 + 8]
0x48c8:	mov	r14, qword ptr [r13]
0x48cc:	xor	r12d, r12d
0x48cf:	test	ebx, ebx
0x48d1:	jns	0x48e0


0x13e0:	jmp	qword ptr [rip + 0x206a5a]




0x4364:	pop	rbx
0x4365:	mov	dword ptr [rip + 0x203ce9], 1
0x436f:	pop	rbp
0x4370:	pop	r12
0x4372:	ret	


0x4355:	mov	rdi, r12
0x4358:	call	0x13f0










0x28ed:	add	rsp, 0xe8
0x28f4:	pop	rbx
0x28f5:	pop	rbp
0x28f6:	pop	r12
0x28f8:	pop	r13
0x28fa:	ret	


0x298a:	call	0x14c0


0x20d9:	add	rsp, 8
0x20dd:	pop	rbx
0x20de:	pop	rbp
0x20df:	pop	r12
0x20e1:	pop	r13
0x20e3:	ret	


0x20bb:	cmp	rdx, qword ptr [rcx]
0x20be:	jne	0x20d0


0x2080:	mov	qword ptr [rip + 0x206081], rdi
0x2087:	jmp	0x2072


0x2067:	mov	rax, qword ptr [rip + 0x206092]
0x206e:	mov	qword ptr [rax + 0x28], rdi
0x2072:	mov	qword ptr [rip + 0x206087], rdi
0x2079:	xor	eax, eax
0x207b:	ret	


0x16e0:	jmp	qword ptr [rip + 0x2068fa]




0x533a:	mov	qword ptr [rsi], rcx
0x533d:	imul	rcx, r9
0x5341:	mov	rsi, rcx
0x5344:	jmp	0x52a0


0x48d3:	test	r12, r12
0x48d6:	je	0x492a


0x48e0:	cmp	r12, r14
0x48e3:	je	0x4938




0x14c0:	jmp	qword ptr [rip + 0x2069ea]


0x20c0:	jmp	0x21b8


0x20d0:	mov	rax, qword ptr [rcx + 8]
0x20d4:	test	rax, rax
0x20d7:	jne	0x20c8


0x2072:	mov	qword ptr [rip + 0x206087], rdi
0x2079:	xor	eax, eax
0x207b:	ret	


0x492a:	mov	r12, -1
0x4931:	jmp	0x498b


0x4938:	test	r15, r15
0x493b:	je	0x49c0


0x48e5:	test	ebx, ebx
0x48e7:	lea	rdx, [r15 + r12]
0x48eb:	js	0x4980




0x21b8:	lea	rbp, [rdi + 0x30]
0x21bc:	jmp	0x210c


0x20c8:	cmp	rdx, qword ptr [rax]
0x20cb:	je	0x2108


0x498b:	mov	rdi, qword ptr [rsp + 0x28]
0x4990:	xor	rdi, qword ptr fs:[0x28]
0x4999:	mov	rax, r12
0x499c:	jne	0x49d9


0x49c0:	test	r12, r12
0x49c3:	mov	ecx, 0x80
0x49c8:	cmovne	rcx, r12
0x49cc:	test	rcx, rcx
0x49cf:	mov	r14, rcx
0x49d2:	jns	0x495f


0x4941:	movabs	rax, 0x5555555555555553
0x494b:	cmp	r12, rax
0x494e:	ja	0x49d4


0x4980:	mov	byte ptr [rdx], 0
0x4983:	mov	qword ptr [r13 + 8], r15
0x4987:	mov	qword ptr [r13], r14
0x498b:	mov	rdi, qword ptr [rsp + 0x28]
0x4990:	xor	rdi, qword ptr fs:[0x28]
0x4999:	mov	rax, r12
0x499c:	jne	0x49d9


0x48f1:	movsxd	rax, ebx
0x48f4:	shr	rax, 6
0x48f8:	mov	rax, qword ptr [rsp + rax*8]
0x48fc:	bt	rax, rbx
0x4900:	jb	0x4980


0x210c:	cmp	qword ptr [rbx + 0x28], 0
0x2111:	je	0x21a0


0x2108:	lea	rbp, [rcx + 8]
0x210c:	cmp	qword ptr [rbx + 0x28], 0
0x2111:	je	0x21a0


0x20cd:	mov	rcx, rax
0x20d0:	mov	rax, qword ptr [rcx + 8]
0x20d4:	test	rax, rax
0x20d7:	jne	0x20c8


0x499e:	add	rsp, 0x38
0x49a2:	pop	rbx
0x49a3:	pop	rbp
0x49a4:	pop	r12
0x49a6:	pop	r13
0x49a8:	pop	r14
0x49aa:	pop	r15
0x49ac:	ret	


0x49d9:	call	0x14c0


0x49d4:	call	0x5490


0x495f:	mov	rdi, r15
0x4962:	mov	rsi, r14
0x4965:	call	0x52a0


0x4954:	mov	rax, r12
0x4957:	shr	rax, 1
0x495a:	lea	r14, [r12 + rax + 1]
0x495f:	mov	rdi, r15
0x4962:	mov	rsi, r14
0x4965:	call	0x52a0


0x4902:	mov	byte ptr [rdx], bl
0x4904:	add	r12, 1
0x4908:	mov	rax, qword ptr [rbp + 8]
0x490c:	cmp	rax, qword ptr [rbp + 0x10]
0x4910:	jae	0x49b0


0x21a0:	mov	qword ptr [rbx + 0x28], rdx
0x21a4:	mov	qword ptr [rip + 0x205f4d], rbx
0x21ab:	xor	eax, eax
0x21ad:	jmp	0x20d9


0x2117:	lea	r13, [rip + 0x3ab9]
0x211e:	jmp	0x2137


0x4916:	lea	rdx, [rax + 1]
0x491a:	mov	qword ptr [rbp + 8], rdx
0x491e:	movzx	ebx, byte ptr [rax]
0x4921:	test	ebx, ebx
0x4923:	jns	0x48e0


0x49b0:	mov	rdi, rbp
0x49b3:	call	0x13e0


0x2137:	mov	rcx, qword ptr [rdx]
0x213a:	xor	eax, eax
0x213c:	mov	r12, qword ptr [rdx + 0x28]
0x2140:	xor	esi, esi
0x2142:	xor	edi, edi
0x2144:	mov	rdx, r13
0x2147:	call	0x1640


0x4925:	test	r12, r12
0x4928:	jne	0x48e0


0x1640:	jmp	qword ptr [rip + 0x20692a]




0x1f38:	mov	byte ptr [rip + 0x2061a9], 1
0x1f3f:	pop	rbp
0x1f40:	ret	


0x57d1:	test	rbp, rbp
0x57d4:	je	0x57f6


0x57f6:	add	rsp, 8
0x57fa:	pop	rbx
0x57fb:	pop	rbp
0x57fc:	pop	r12
0x57fe:	pop	r13
0x5800:	pop	r14
0x5802:	pop	r15
0x5804:	ret	


0x57d6:	xor	ebx, ebx
0x57d8:	nop	dword ptr [rax + rax]
0x57e0:	mov	rdx, r15
0x57e3:	mov	rsi, r14
0x57e6:	mov	edi, r13d
0x57e9:	call	qword ptr [r12 + rbx*8]


0x214c:	mov	rax, qword ptr [rip + 0x205fa5]
0x2153:	cmp	rbx, rax
0x2156:	jne	0x2120


0x2158:	mov	rax, qword ptr [rbp]
0x215c:	mov	rdx, qword ptr [rax]
0x215f:	mov	rax, qword ptr [rax + 8]
0x2163:	sub	qword ptr [rdx + 0x20], 1
0x2168:	mov	qword ptr [rbp], rax
0x216c:	nop	dword ptr [rax]
0x2170:	mov	rax, qword ptr [rbx + 0x28]
0x2174:	mov	qword ptr [rbx + 0x28], 0
0x217c:	test	rax, rax
0x217f:	mov	rbx, rax
0x2182:	jne	0x2170


0x2120:	test	r12, r12
0x2123:	mov	qword ptr [rax + 0x28], 0
0x212b:	mov	qword ptr [rip + 0x205fc6], r12
0x2132:	mov	rdx, r12
0x2135:	je	0x218f


0x2184:	mov	qword ptr [rip + 0x205f69], 0
0x218f:	add	rsp, 8
0x2193:	mov	eax, 1
0x2198:	pop	rbx
0x2199:	pop	rbp
0x219a:	pop	r12
0x219c:	pop	r13
0x219e:	ret	


0x2170:	mov	rax, qword ptr [rbx + 0x28]
0x2174:	mov	qword ptr [rbx + 0x28], 0
0x217c:	test	rax, rax
0x217f:	mov	rbx, rax
0x2182:	jne	0x2170


0x218f:	add	rsp, 8
0x2193:	mov	eax, 1
0x2198:	pop	rbx
0x2199:	pop	rbp
0x219a:	pop	r12
0x219c:	pop	r13
0x219e:	ret	


0x49b8:	mov	ebx, eax
0x49ba:	jmp	0x48cf


0x48cf:	test	ebx, ebx
0x48d1:	jns	0x48e0


0x48be:	test	eax, eax
0x48c0:	mov	ebx, eax
0x48c2:	jns	0x489b


0x489b:	movsxd	rax, ebx
0x489e:	shr	rax, 6
0x48a2:	mov	rax, qword ptr [rsp + rax*8]
0x48a6:	bt	rax, rbx
0x48aa:	jae	0x48c4


0x542f:	test	rax, rax
0x5432:	je	0x5439


0x5434:	add	rsp, 8
0x5438:	ret	


0x291b:	cmp	eax, -1
0x291e:	je	0x28c9


0x2920:	cmp	eax, 0x68
0x2923:	mov	r9, qword ptr [rsp + 8]
0x2928:	je	0x2980


0x2980:	xor	edi, edi
0x2982:	call	r9


0x292a:	cmp	eax, 0x76
0x292d:	jne	0x28c9


0x292f:	lea	rax, [rsp + 0x110]
0x2937:	mov	rdi, qword ptr [rip + 0x20574a]
0x293e:	lea	r8, [rsp + 0x10]
0x2943:	mov	rcx, r13
0x2946:	mov	rdx, r12
0x2949:	mov	rsi, rbp
0x294c:	mov	qword ptr [rsp + 0x18], rax
0x2951:	lea	rax, [rsp + 0x30]
0x2956:	mov	dword ptr [rsp + 0x10], 0x30
0x295e:	mov	dword ptr [rsp + 0x14], 0x30
0x2966:	mov	qword ptr [rsp + 0x20], rax
0x296b:	call	0x5060


0x2a2f:	cmp	eax, -1
0x2a32:	je	0x2a98


0x2a98:	mov	rax, qword ptr [rsp + 0x18]
0x2a9d:	xor	rax, qword ptr fs:[0x28]
0x2aa6:	mov	dword ptr [rip + 0x205614], ebx
0x2aac:	jne	0x2ac6


0x2a34:	cmp	eax, 0x68
0x2a37:	je	0x2ac0


0x2aae:	add	rsp, 0xd0
0x2ab5:	pop	rbx
0x2ab6:	pop	rbp
0x2ab7:	pop	r12
0x2ab9:	pop	r13
0x2abb:	pop	r14
0x2abd:	ret	


0x2ac6:	call	0x14c0


0x2ac0:	xor	edi, edi
0x2ac2:	call	rbp


0x2a3d:	cmp	eax, 0x76
0x2a40:	jne	0x2a90


0x2a42:	lea	rax, [rsp + 0x108]
0x2a4a:	mov	rdi, qword ptr [rip + 0x205637]
0x2a51:	mov	r8, rsp
0x2a54:	mov	rcx, r14
0x2a57:	mov	rdx, r13
0x2a5a:	mov	rsi, r12
0x2a5d:	mov	qword ptr [rsp + 8], rax
0x2a62:	lea	rax, [rsp + 0x20]
0x2a67:	mov	dword ptr [rsp], 0x30
0x2a6e:	mov	dword ptr [rsp + 4], 0x30
0x2a76:	mov	qword ptr [rsp + 0x10], rax
0x2a7b:	call	0x5060


0x2a90:	mov	edi, dword ptr [rip + 0x205582]
0x2a96:	call	rbp


0x2ae3:	test	rax, rax
0x2ae6:	je	0x2b3d


0x2b3d:	mov	qword ptr [rip + 0x2055dc], rbx
0x2b44:	mov	qword ptr [rip + 0x205555], rbx
0x2b4b:	pop	rbx
0x2b4c:	ret	


0x2ae8:	lea	r8, [rax + 1]
0x2aec:	mov	rdx, r8
0x2aef:	sub	rdx, rbx
0x2af2:	cmp	rdx, 6
0x2af6:	jle	0x2b3d


0x2af8:	lea	rsi, [rax - 6]
0x2afc:	lea	rdi, [rip + 0x312d]
0x2b03:	mov	ecx, 7
0x2b08:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2b08:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2b0a:	seta	dl
0x2b0d:	sbb	dl, 0
0x2b10:	test	dl, dl
0x2b12:	jne	0x2b3d


0x2b14:	lea	rdi, [rip + 0x311d]
0x2b1b:	mov	ecx, 3
0x2b20:	mov	rsi, r8
0x2b23:	mov	rbx, r8
0x2b26:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2b26:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2b28:	seta	dl
0x2b2b:	sbb	dl, 0
0x2b2e:	test	dl, dl
0x2b30:	jne	0x2b3d


0x2b32:	lea	rbx, [rax + 4]
0x2b36:	mov	qword ptr [rip + 0x205543], rbx
0x2b3d:	mov	qword ptr [rip + 0x2055dc], rbx
0x2b44:	mov	qword ptr [rip + 0x205555], rbx
0x2b4b:	pop	rbx
0x2b4c:	ret	


0x2b6a:	call	0x1400


0x435d:	mov	qword ptr [rip + 0x203cfc], rbx
0x4364:	pop	rbx
0x4365:	mov	dword ptr [rip + 0x203ce9], 1
0x436f:	pop	rbp
0x4370:	pop	r12
0x4372:	ret	


0x4337:	mov	qword ptr [rip + 0x203d2e], 0x100
0x4342:	mov	qword ptr [rip + 0x203d2f], rbx
0x4349:	lea	rbx, [rip + 0x203d20]
0x4350:	cmp	r12, rbx
0x4353:	je	0x4364


0x52cd:	xor	eax, eax
0x52cf:	pop	rbx
0x52d0:	ret	


0x496a:	test	ebx, ebx
0x496c:	mov	r15, rax
0x496f:	lea	rdx, [r15 + r12]
0x4973:	jns	0x48f1


0x431c:	cmp	rbx, rbp
0x431f:	jne	0x4310


0x4310:	mov	rdi, qword ptr [rbx]
0x4313:	add	rbx, 0x10
0x4317:	call	0x13f0


0x4c5c:	lea	rsi, [rip + 0x14b8]
0x4c63:	xor	edi, edi
0x4c65:	mov	edx, 5
0x4c6a:	call	0x1490


0x4d71:	jmp	0x4c5c


0x52b6:	test	rax, rax
0x52b9:	jne	0x52c0


0x52bb:	test	rbx, rbx
0x52be:	jne	0x52d1


0x52c0:	pop	rbx
0x52c1:	ret	


0x52d1:	call	0x5490


0x555e:	test	eax, eax
0x5560:	je	0x556a


0x5562:	test	dword ptr [rbx], 0x100
0x5568:	jne	0x5578


0x5578:	mov	rdi, rbx
0x557b:	mov	edx, 1
0x5580:	xor	esi, esi
0x5582:	call	0x5590


0x171b:	lea	rsi, [rip + 0x4205]
0x1722:	mov	edi, 6
0x1727:	call	0x1620


0x266d:	cmp	ebp, eax
0x266f:	je	0x2689


0x2689:	add	rsp, 8
0x268d:	mov	eax, ebx
0x268f:	pop	rbx
0x2690:	pop	rbp
0x2691:	ret	


0x2671:	xor	ebx, ebx
0x2673:	test	eax, eax
0x2675:	js	0x2689


0x2677:	mov	edi, eax
0x2679:	call	0x1550


0x1550:	jmp	qword ptr [rip + 0x2069a2]




0x2cd1:	cmp	r15d, 0xa
0x2cd5:	mov	qword ptr [rsp + 0x58], rax
0x2cda:	ja	0x3e8f


0x2ce0:	lea	rcx, [rip + 0x2fb9]
0x2ce7:	mov	edx, r15d
0x2cea:	movsxd	rax, dword ptr [rcx + rdx*4]
0x2cee:	add	rax, rcx
0x2cf1:	jmp	rax


0x3e8f:	call	0x1400


0x3ec1:	mov	r13, rax
0x3ec4:	mov	eax, dword ptr [rax]
0x3ec6:	test	r15d, r15d
0x3ec9:	mov	rbx, qword ptr [rip + 0x204190]
0x3ed0:	mov	dword ptr [rsp + 0x18], eax
0x3ed4:	js	0x4041


0x4041:	call	0x1400


0x3eda:	cmp	dword ptr [rip + 0x204177], r15d
0x3ee1:	jg	0x3f45


0x3ee3:	cmp	r15d, 0x7fffffff
0x3eea:	je	0x4046


0x3f45:	mov	eax, dword ptr [rbp + 4]
0x3f48:	shl	r15, 4
0x3f4c:	sub	rsp, 8
0x3f50:	add	rbx, r15
0x3f53:	lea	r15, [rbp + 8]
0x3f57:	mov	r8d, dword ptr [rbp]
0x3f5b:	mov	r11, qword ptr [rbx]
0x3f5e:	mov	r12, qword ptr [rbx + 8]
0x3f62:	mov	rcx, r14
0x3f65:	or	eax, 1
0x3f68:	mov	dword ptr [rsp + 0x24], eax
0x3f6c:	push	qword ptr [rbp + 0x30]
0x3f6f:	mov	r9d, eax
0x3f72:	push	qword ptr [rbp + 0x28]
0x3f75:	push	r15
0x3f77:	mov	rsi, r11
0x3f7a:	mov	rdx, qword ptr [rsp + 0x28]
0x3f7f:	mov	rdi, r12
0x3f82:	mov	qword ptr [rsp + 0x30], r11
0x3f87:	call	0x2c60


0x4046:	call	0x5490


0x3ef0:	lea	r12d, [r15 + 1]
0x3ef4:	lea	rax, [rip + 0x204175]
0x3efb:	movsxd	rsi, r12d
0x3efe:	shl	rsi, 4
0x3f02:	cmp	rbx, rax
0x3f05:	je	0x4020


0x4020:	xor	edi, edi
0x4022:	call	0x52a0


0x3f0b:	mov	rdi, rbx
0x3f0e:	call	0x52a0


0x3f13:	mov	rbx, rax
0x3f16:	mov	qword ptr [rip + 0x204143], rax
0x3f1d:	movsxd	rdi, dword ptr [rip + 0x204134]
0x3f24:	mov	edx, r12d
0x3f27:	xor	esi, esi
0x3f29:	sub	edx, edi
0x3f2b:	shl	rdi, 4
0x3f2f:	movsxd	rdx, edx
0x3f32:	add	rdi, rbx
0x3f35:	shl	rdx, 4
0x3f39:	call	0x1530


0x1530:	jmp	qword ptr [rip + 0x2069b2]




0x4027:	movdqa	xmm0, xmmword ptr [rip + 0x204041]
0x402f:	mov	rbx, rax
0x4032:	mov	qword ptr [rip + 0x204027], rax
0x4039:	movups	xmmword ptr [rax], xmm0
0x403c:	jmp	0x3f1d


0x3f1d:	movsxd	rdi, dword ptr [rip + 0x204134]
0x3f24:	mov	edx, r12d
0x3f27:	xor	esi, esi
0x3f29:	sub	edx, edi
0x3f2b:	shl	rdi, 4
0x3f2f:	movsxd	rdx, edx
0x3f32:	add	rdi, rbx
0x3f35:	shl	rdx, 4
0x3f39:	call	0x1530


0x405c:	mov	r12d, dword ptr [rax]
0x405f:	mov	rbp, rax
0x4062:	lea	rax, [rip + 0x2041d7]
0x4069:	test	rbx, rbx
0x406c:	mov	esi, 0x38
0x4071:	cmove	rbx, rax
0x4075:	mov	rdi, rbx
0x4078:	call	0x5440


0x4192:	mov	r12d, dword ptr [rax]
0x4195:	mov	rbp, rax
0x4198:	lea	rax, [rbx + 8]
0x419c:	sub	rsp, 8
0x41a0:	mov	r9d, dword ptr [rbx + 4]
0x41a4:	push	qword ptr [rbx + 0x30]
0x41a7:	mov	r8d, dword ptr [rbx]
0x41aa:	push	qword ptr [rbx + 0x28]
0x41ad:	mov	rdx, r15
0x41b0:	push	rax
0x41b1:	mov	rcx, qword ptr [rsp + 0x28]
0x41b6:	mov	rsi, r14
0x41b9:	mov	rdi, r13
0x41bc:	call	0x2c60


0x420f:	test	r12, r12
0x4212:	mov	r13, rax
0x4215:	mov	eax, dword ptr [rax]
0x4217:	sete	bpl
0x421b:	or	ebp, dword ptr [rbx + 4]
0x421e:	lea	r10, [rbx + 8]
0x4222:	sub	rsp, 8
0x4226:	mov	r8d, dword ptr [rbx]
0x4229:	mov	rcx, r15
0x422c:	mov	dword ptr [rsp + 0x14], eax
0x4230:	push	qword ptr [rbx + 0x30]
0x4233:	mov	rdx, r14
0x4236:	push	qword ptr [rbx + 0x28]
0x4239:	push	r10
0x423b:	xor	esi, esi
0x423d:	mov	r9d, ebp
0x4240:	xor	edi, edi
0x4242:	mov	qword ptr [rsp + 0x40], r10
0x4247:	call	0x2c60


0x5249:	test	rax, rax
0x524c:	jne	0x5253


0x524e:	test	rbx, rbx
0x5251:	jne	0x5255


0x5253:	pop	rbx
0x5254:	ret	


0x5255:	call	0x5490


0x4a5c:	mov	rdi, rbx
0x4a5f:	mov	r12, rax
0x4a62:	xor	ebx, ebx
0x4a64:	call	0x5240


0x4a69:	mov	r13, rax
0x4a6c:	lea	rax, [rsp + 0x40]
0x4a71:	mov	qword ptr [rsp + 0x40], 0
0x4a7a:	mov	qword ptr [rsp + 0x48], 0
0x4a83:	mov	qword ptr [rsp + 0x20], rax
0x4a88:	jmp	0x4acc


0x4acc:	mov	rcx, qword ptr [rsp + 0x20]
0x4ad1:	mov	rdx, qword ptr [rsp + 0x18]
0x4ad6:	mov	rsi, qword ptr [rsp + 0x10]
0x4adb:	mov	rdi, qword ptr [rsp + 8]
0x4ae0:	call	0x4810


0x4ae5:	cmp	rbx, rbp
0x4ae8:	mov	r14, rax
0x4aeb:	jb	0x4a90


0x4a90:	cmp	r14, -1
0x4a94:	je	0x4b4c


0x4aed:	test	r12, r12
0x4af0:	je	0x4ba8


0x4b4c:	mov	qword ptr [r12 + rbx*8], 0
0x4b54:	mov	rdi, qword ptr [rsp + 0x48]
0x4b59:	mov	qword ptr [r13 + rbx*8], 0
0x4b62:	call	0x13f0


0x4a9a:	mov	r15, r14
0x4a9d:	add	r15, 1
0x4aa1:	js	0x4bfb


0x4ba8:	test	rbp, rbp
0x4bab:	mov	eax, 0x10
0x4bb0:	mov	edx, 8
0x4bb5:	cmove	rbp, rax
0x4bb9:	mov	rax, rdx
0x4bbc:	xor	esi, esi
0x4bbe:	mul	rbp
0x4bc1:	jo	0x4c0f


0x4af6:	movabs	rax, 0xaaaaaaaaaaaaaa9
0x4b00:	cmp	rbp, rax
0x4b03:	ja	0x4bfb


0x4aa7:	mov	rdi, r15
0x4aaa:	call	0x5240


0x4c0f:	mov	esi, 1
0x4c14:	jmp	0x4bc3


0x4bc3:	test	rax, rax
0x4bc6:	js	0x4bfb


0x4b09:	mov	rax, rbp
0x4b0c:	mov	rdi, r12
0x4b0f:	shr	rax, 1
0x4b12:	lea	rbp, [rbp + rax + 1]
0x4b17:	lea	rdx, [rbp*8]
0x4b1f:	mov	rsi, rdx
0x4b22:	mov	qword ptr [rsp + 0x28], rdx
0x4b27:	call	0x52a0


0x4bc8:	test	rsi, rsi
0x4bcb:	jne	0x4bfb


0x4bcd:	lea	rdx, [rbp*8]
0x4bd5:	xor	edi, edi
0x4bd7:	mov	rsi, rdx
0x4bda:	mov	qword ptr [rsp + 0x28], rdx
0x4bdf:	call	0x52a0


0x4be4:	mov	rdx, qword ptr [rsp + 0x28]
0x4be9:	mov	r12, rax
0x4bec:	jmp	0x4b34


0x4b34:	mov	rdi, r13
0x4b37:	mov	rsi, rdx
0x4b3a:	call	0x52a0


0x4b3f:	cmp	r14, -1
0x4b43:	mov	r13, rax
0x4b46:	jne	0x4a9a


0x4b2c:	mov	rdx, qword ptr [rsp + 0x28]
0x4b31:	mov	r12, rax
0x4b34:	mov	rdi, r13
0x4b37:	mov	rsi, rdx
0x4b3a:	call	0x52a0


0x4b67:	cmp	qword ptr [rsp + 0x30], 0
0x4b6d:	mov	rax, qword ptr [rsp + 0x38]
0x4b72:	mov	qword ptr [rax], r12
0x4b75:	je	0x4bf1


0x4bf1:	mov	rdi, r13
0x4bf4:	call	0x13f0


0x4b77:	mov	rax, qword ptr [rsp + 0x30]
0x4b7c:	mov	qword ptr [rax], r13
0x4b7f:	mov	rcx, qword ptr [rsp + 0x58]
0x4b84:	xor	rcx, qword ptr fs:[0x28]
0x4b8d:	mov	rax, rbx
0x4b90:	jne	0x4c0a


0x4b92:	add	rsp, 0x68
0x4b96:	pop	rbx
0x4b97:	pop	rbp
0x4b98:	pop	r12
0x4b9a:	pop	r13
0x4b9c:	pop	r14
0x4b9e:	pop	r15
0x4ba0:	ret	


0x4c0a:	call	0x14c0


0x4bf9:	jmp	0x4b7f


0x4b7f:	mov	rcx, qword ptr [rsp + 0x58]
0x4b84:	xor	rcx, qword ptr fs:[0x28]
0x4b8d:	mov	rax, rbx
0x4b90:	jne	0x4c0a


0x4aaf:	mov	rsi, qword ptr [rsp + 0x48]
0x4ab4:	mov	qword ptr [r13 + rbx*8], r14
0x4ab9:	mov	rdx, r15
0x4abc:	mov	rdi, rax
0x4abf:	call	0x15b0


0x15b0:	jmp	qword ptr [rip + 0x206972]




0x1ff3:	test	rbp, rbp
0x1ff6:	mov	rbx, rax
0x1ff9:	je	0x2006


0x2006:	mov	qword ptr [rbx], rbp
0x2009:	mov	qword ptr [rbx + 0x10], 0
0x2011:	mov	rax, rbx
0x2014:	mov	qword ptr [rbx + 8], 0
0x201c:	mov	dword ptr [rbx + 0x18], 0
0x2023:	mov	qword ptr [rbx + 0x20], 0
0x202b:	mov	qword ptr [rbx + 0x28], 0
0x2033:	mov	qword ptr [rbx + 0x30], 0
0x203b:	add	rsp, 8
0x203f:	pop	rbx
0x2040:	pop	rbp
0x2041:	ret	


0x1ffb:	mov	rdi, rbp
0x1ffe:	call	0x5470


0x53f9:	mov	rdx, rbx
0x53fc:	xor	esi, esi
0x53fe:	mov	rdi, rax
0x5401:	pop	rbx
0x5402:	jmp	0x1530


0x5454:	add	rsp, 8
0x5458:	mov	rdx, rbx
0x545b:	mov	rsi, rbp
0x545e:	pop	rbx
0x545f:	pop	rbp
0x5460:	mov	rdi, rax
0x5463:	jmp	0x15b0


0x5479:	mov	rdi, rbx
0x547c:	lea	rsi, [rax + 1]
0x5480:	pop	rbx
0x5481:	jmp	0x5440


0x4c6f:	lea	rdx, [rip + 0x17ca]
0x4c76:	mov	rcx, rax
0x4c79:	mov	r8d, 0x7e3
0x4c7f:	mov	esi, 1
0x4c84:	mov	rdi, rbp
0x4c87:	xor	eax, eax
0x4c89:	call	0x16a0


0x4c8e:	lea	rsi, [rip + 0x1513]
0x4c95:	xor	edi, edi
0x4c97:	mov	edx, 5
0x4c9c:	call	0x1490


0x4ca1:	mov	rsi, rbp
0x4ca4:	mov	rdi, rax
0x4ca7:	call	0x1580


0x1580:	jmp	qword ptr [rip + 0x20698a]




0x220d:	mov	rdi, qword ptr [rip + 0x205ecc]
0x2214:	mov	rdx, rax
0x2217:	mov	rcx, rbx
0x221a:	mov	esi, 1
0x221f:	xor	eax, eax
0x2221:	call	0x16a0


0x2226:	mov	edi, ebp
0x2228:	call	0x1680


0x1680:	jmp	qword ptr [rip + 0x20690a]




0x223b:	mov	rdx, rbx
0x223e:	mov	rsi, rax
0x2241:	mov	edi, 1
0x2246:	xor	eax, eax
0x2248:	call	0x1630


0x1630:	jmp	qword ptr [rip + 0x206932]




0x51d4:	lea	rdx, [rip + 0xf9c]
0x51db:	mov	rsi, rax
0x51de:	mov	edi, 1
0x51e3:	xor	eax, eax
0x51e5:	call	0x1630


0x54a7:	mov	edi, dword ptr [rip + 0x202b6b]
0x54ad:	lea	rdx, [rip + 0x723]
0x54b4:	mov	rcx, rax
0x54b7:	xor	esi, esi
0x54b9:	xor	eax, eax
0x54bb:	call	0x1640


0x54c0:	call	0x1400


0x55c3:	mov	edx, r12d
0x55c6:	mov	rsi, rbp
0x55c9:	mov	edi, eax
0x55cb:	call	0x1510


0x1510:	jmp	qword ptr [rip + 0x2069c2]




0x262d:	mov	ecx, ebx
0x262f:	xor	edx, edx
0x2631:	xor	esi, esi
0x2633:	pop	rbx
0x2634:	mov	edi, eax
0x2636:	jmp	0x1560


0x26c1:	mov	ebx, eax
0x26c3:	call	0x1410


0x26c8:	cmp	ebx, 1
0x26cb:	mov	r14, rax
0x26ce:	je	0x2830


0x2830:	xor	ebx, ebx
0x2832:	xor	ebp, ebp
0x2834:	jmp	0x2710


0x26d4:	cmp	ebx, 2
0x26d7:	je	0x2820


0x2710:	xor	esi, esi
0x2712:	xor	edi, edi
0x2714:	call	0x14f0


0x2820:	xor	ebx, ebx
0x2822:	jmp	0x26fa


0x26dd:	test	ebx, ebx
0x26df:	je	0x2798


0x14f0:	jmp	qword ptr [rip + 0x2069d2]


0x26fa:	mov	esi, 1
0x26ff:	mov	edi, 1
0x2704:	call	0x14f0


0x2798:	xor	ebx, ebx
0x279a:	xor	ebp, ebp
0x279c:	xor	r13d, r13d
0x279f:	jmp	0x2750


0x26e5:	mov	esi, 2
0x26ea:	mov	edi, 2
0x26ef:	call	0x14f0




0x2750:	mov	rdi, qword ptr [rsp + 8]
0x2755:	mov	rdx, r12
0x2758:	mov	rsi, r15
0x275b:	call	0x1540


0x1540:	jmp	qword ptr [rip + 0x2069aa]




0x54dc:	test	eax, eax
0x54de:	mov	rdi, rbx
0x54e1:	js	0x5537


0x5537:	pop	rbx
0x5538:	pop	rbp
0x5539:	pop	r12
0x553b:	jmp	0x1470


0x54e3:	call	0x1600


0x1470:	jmp	qword ptr [rip + 0x206a12]




0x54e8:	test	eax, eax
0x54ea:	jne	0x5518


0x54ec:	mov	rdi, rbx
0x54ef:	call	0x5550


0x5518:	mov	rdi, rbx
0x551b:	call	0x15c0


0x5520:	xor	esi, esi
0x5522:	mov	edx, 1
0x5527:	mov	edi, eax
0x5529:	call	0x1510


0x5627:	cmp	rax, -3
0x562b:	mov	rbp, rax
0x562e:	jbe	0x5650


0x5650:	mov	rdx, qword ptr [rsp + 8]
0x5655:	xor	rdx, qword ptr fs:[0x28]
0x565e:	mov	rax, rbp
0x5661:	jne	0x566e


0x5630:	test	r12, r12
0x5633:	je	0x5650


0x5663:	add	rsp, 0x18
0x5667:	pop	rbx
0x5668:	pop	rbp
0x5669:	pop	r12
0x566b:	pop	r13
0x566d:	ret	


0x566e:	call	0x14c0


0x5635:	xor	edi, edi
0x5637:	call	0x5700


0x568c:	mov	ebx, dword ptr [rbp]
0x568f:	mov	rdi, rbp
0x5692:	mov	r12, rax
0x5695:	call	0x54d0


0x172c:	lea	rsi, [rip + 0x41ba]
0x1733:	lea	rdi, [rip + 0x418a]
0x173a:	call	0x1480


0x1480:	jmp	qword ptr [rip + 0x206a0a]




0x570b:	mov	rdx, rax
0x570e:	mov	eax, 1
0x5713:	test	rdx, rdx
0x5716:	je	0x5735


0x5735:	add	rsp, 8
0x5739:	ret	


0x5718:	lea	rdi, [rip + 0xd61]
0x571f:	mov	ecx, 2
0x5724:	mov	rsi, rdx
0x5727:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5727:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5729:	seta	cl
0x572c:	sbb	cl, 0
0x572f:	xor	eax, eax
0x5731:	test	cl, cl
0x5733:	jne	0x5740


0x5740:	lea	rdi, [rip + 0xd3b]
0x5747:	mov	ecx, 6
0x574c:	mov	rsi, rdx
0x574f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x574f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5751:	seta	al
0x5754:	sbb	al, 0
0x5756:	test	al, al
0x5758:	setne	al
0x575b:	add	rsp, 8
0x575f:	ret	


0x563c:	test	al, al
0x563e:	jne	0x5650


0x5640:	movzx	eax, byte ptr [r13]
0x5645:	mov	ebp, 1
0x564a:	mov	dword ptr [rbx], eax
0x564c:	nop	dword ptr [rax]
0x5650:	mov	rdx, qword ptr [rsp + 8]
0x5655:	xor	rdx, qword ptr fs:[0x28]
0x565e:	mov	rax, rbp
0x5661:	jne	0x566e


0x576e:	test	rax, rax
0x5771:	je	0x5790


0x5790:	lea	rax, [rip + 0xcf1]
0x5797:	add	rsp, 8
0x579b:	ret	


0x5773:	cmp	byte ptr [rax], 0
0x5776:	lea	rdx, [rip + 0xd0b]
0x577d:	cmove	rax, rdx
0x5781:	add	rsp, 8
0x5785:	ret	


0x2b80:	movzx	edx, byte ptr [rax]
0x2b83:	and	edx, 0xffffffdf
0x2b86:	cmp	dl, 0x55
0x2b89:	je	0x2c00


0x2c00:	movzx	edx, byte ptr [rax + 1]
0x2c04:	and	edx, 0xffffffdf
0x2c07:	cmp	dl, 0x54
0x2c0a:	jne	0x2b90


0x2b8b:	cmp	dl, 0x47
0x2b8e:	je	0x2bb0


0x2c0c:	movzx	edx, byte ptr [rax + 2]
0x2c10:	and	edx, 0xffffffdf
0x2c13:	cmp	dl, 0x46
0x2c16:	jne	0x2b90


0x2b90:	lea	rax, [rip + 0x30b4]
0x2b97:	lea	rdx, [rip + 0x30af]
0x2b9e:	cmp	ebx, 9
0x2ba1:	cmovne	rax, rdx
0x2ba5:	add	rsp, 8
0x2ba9:	pop	rbx
0x2baa:	pop	rbp
0x2bab:	ret	


0x2bb0:	movzx	edx, byte ptr [rax + 1]
0x2bb4:	and	edx, 0xffffffdf
0x2bb7:	cmp	dl, 0x42
0x2bba:	jne	0x2b90


0x2c1c:	cmp	byte ptr [rax + 3], 0x2d
0x2c20:	jne	0x2b90


0x2bbc:	cmp	byte ptr [rax + 2], 0x31
0x2bc0:	jne	0x2b90


0x2c26:	cmp	byte ptr [rax + 4], 0x38
0x2c2a:	jne	0x2b90


0x2bc2:	cmp	byte ptr [rax + 3], 0x38
0x2bc6:	jne	0x2b90


0x2c30:	cmp	byte ptr [rax + 5], 0
0x2c34:	jne	0x2b90


0x2bc8:	cmp	byte ptr [rax + 4], 0x30
0x2bcc:	jne	0x2b90


0x2c3a:	cmp	byte ptr [rbp], 0x60
0x2c3e:	lea	rax, [rip + 0x2ff7]
0x2c45:	lea	rdx, [rip + 0x2ff4]
0x2c4c:	cmovne	rax, rdx
0x2c50:	add	rsp, 8
0x2c54:	pop	rbx
0x2c55:	pop	rbp
0x2c56:	ret	


0x2bce:	cmp	byte ptr [rax + 5], 0x33
0x2bd2:	jne	0x2b90


0x2bd4:	cmp	byte ptr [rax + 6], 0x30
0x2bd8:	jne	0x2b90


0x2bda:	cmp	byte ptr [rax + 7], 0
0x2bde:	jne	0x2b90


0x2be0:	cmp	byte ptr [rbp], 0x60
0x2be4:	lea	rax, [rip + 0x3059]
0x2beb:	lea	rdx, [rip + 0x3056]
0x2bf2:	cmovne	rax, rdx
0x2bf6:	add	rsp, 8
0x2bfa:	pop	rbx
0x2bfb:	pop	rbp
0x2bfc:	ret	


0x173f:	lea	rdi, [rip + 0x417e]
0x1746:	call	0x1460


0x1460:	jmp	qword ptr [rip + 0x206a1a]




0x2760:	mov	r12, rax
0x2763:	test	bl, bl
0x2765:	mov	r15d, dword ptr [r14]
0x2768:	jne	0x2810


0x276e:	test	bpl, bpl
0x2771:	jne	0x27e0


0x2810:	mov	edi, 2
0x2815:	call	0x1550


0x2773:	test	r13b, r13b
0x2776:	jne	0x27ef


0x27e0:	mov	edi, 1
0x27e5:	call	0x1550


0x2778:	test	r12, r12
0x277b:	jne	0x2780


0x27ef:	xor	edi, edi
0x27f1:	call	0x1550


0x277d:	mov	dword ptr [r14], r15d
0x2780:	add	rsp, 0x18
0x2784:	mov	rax, r12
0x2787:	pop	rbx
0x2788:	pop	rbp
0x2789:	pop	r12
0x278b:	pop	r13
0x278d:	pop	r14
0x278f:	pop	r15
0x2791:	ret	


0x2780:	add	rsp, 0x18
0x2784:	mov	rax, r12
0x2787:	pop	rbx
0x2788:	pop	rbp
0x2789:	pop	r12
0x278b:	pop	r13
0x278d:	pop	r14
0x278f:	pop	r15
0x2791:	ret	


0x26f4:	cmp	eax, 2
0x26f7:	setne	bl
0x26fa:	mov	esi, 1
0x26ff:	mov	edi, 1
0x2704:	call	0x14f0


0x2709:	cmp	eax, 1
0x270c:	setne	bpl
0x2710:	xor	esi, esi
0x2712:	xor	edi, edi
0x2714:	call	0x14f0


0x2719:	test	eax, eax
0x271b:	je	0x27a8


0x27a8:	xor	r13d, r13d
0x27ab:	test	bpl, bpl
0x27ae:	je	0x2738


0x2721:	xor	edi, edi
0x2723:	call	0x2650


0x2738:	test	bl, bl
0x273a:	je	0x2750


0x27b0:	mov	edi, 1
0x27b5:	call	0x2650


0x273c:	mov	edi, 2
0x2741:	call	0x2650


0x2746:	test	al, al
0x2748:	mov	ebx, eax
0x274a:	je	0x2800


0x2800:	mov	r15d, dword ptr [r14]
0x2803:	xor	r12d, r12d
0x2806:	nop	word ptr cs:[rax + rax]
0x2810:	mov	edi, 2
0x2815:	call	0x1550


0x27ba:	test	al, al
0x27bc:	mov	ebp, eax
0x27be:	jne	0x2738


0x27c4:	xor	r12d, r12d
0x27c7:	test	bl, bl
0x27c9:	mov	r15d, dword ptr [r14]
0x27cc:	je	0x27e0


0x27ce:	mov	edi, 2
0x27d3:	call	0x1550


0x2728:	test	al, al
0x272a:	mov	r13d, eax
0x272d:	je	0x2840


0x2840:	mov	r13d, 1
0x2846:	xor	r12d, r12d
0x2849:	jmp	0x2763


0x2733:	test	bpl, bpl
0x2736:	jne	0x27b0


0x2763:	test	bl, bl
0x2765:	mov	r15d, dword ptr [r14]
0x2768:	jne	0x2810


0x552e:	cmp	rax, -1
0x5532:	jne	0x54ec


0x5534:	mov	rdi, rbx
0x5537:	pop	rbx
0x5538:	pop	rbp
0x5539:	pop	r12
0x553b:	jmp	0x1470


0x55d0:	cmp	rax, -1
0x55d4:	je	0x55e2


0x55e2:	pop	rbx
0x55e3:	pop	rbp
0x55e4:	pop	r12
0x55e6:	ret	


0x55d6:	and	dword ptr [rbx], 0xffffffef
0x55d9:	mov	qword ptr [rbx + 0x90], rax
0x55e0:	xor	eax, eax
0x55e2:	pop	rbx
0x55e3:	pop	rbp
0x55e4:	pop	r12
0x55e6:	ret	


0x51ea:	lea	rsi, [rip + 0xf9c]
0x51f1:	mov	edx, 5
0x51f6:	xor	edi, edi
0x51f8:	call	0x1490


0x51fd:	lea	rcx, [rip + 0x8d4]
0x5204:	lea	rdx, [rip + 0x6b5]
0x520b:	mov	rsi, rax
0x520e:	mov	edi, 1
0x5213:	xor	eax, eax
0x5215:	call	0x1630


0x521a:	mov	rbx, qword ptr [rip + 0x202e67]
0x5221:	lea	rsi, [rip + 0x1198]
0x5228:	xor	edi, edi
0x522a:	mov	edx, 5
0x522f:	call	0x1490


0x5234:	mov	rsi, rbx
0x5237:	mov	rdi, rax
0x523a:	pop	rbx
0x523b:	jmp	0x1580


0x224d:	mov	rbx, qword ptr [rip + 0x205e34]
0x2254:	lea	rsi, [rip + 0x37dd]
0x225b:	mov	edx, 5
0x2260:	xor	edi, edi
0x2262:	call	0x1490


0x2267:	mov	rsi, rbx
0x226a:	mov	rdi, rax
0x226d:	call	0x1580


0x2272:	mov	rbx, qword ptr [rip + 0x205e0f]
0x2279:	lea	rsi, [rip + 0x36a6]
0x2280:	mov	edx, 5
0x2285:	xor	edi, edi
0x2287:	call	0x1490


0x228c:	mov	rsi, rbx
0x228f:	mov	rdi, rax
0x2292:	call	0x1580


0x2297:	mov	rbx, qword ptr [rip + 0x205dea]
0x229e:	lea	rsi, [rip + 0x37cb]
0x22a5:	mov	edx, 5
0x22aa:	xor	edi, edi
0x22ac:	call	0x1490


0x22b1:	mov	rsi, rbx
0x22b4:	mov	rdi, rax
0x22b7:	call	0x1580


0x22bc:	mov	rbx, qword ptr [rip + 0x205dc5]
0x22c3:	lea	rsi, [rip + 0x37d6]
0x22ca:	mov	edx, 5
0x22cf:	xor	edi, edi
0x22d1:	call	0x1490


0x22d6:	mov	rsi, rbx
0x22d9:	mov	rdi, rax
0x22dc:	lea	rbx, [rip + 0x3561]
0x22e3:	call	0x1580


0x22e8:	lea	rax, [rip + 0x355b]
0x22ef:	lea	rcx, [rip + 0x3595]
0x22f6:	mov	qword ptr [rsp + 0x60], 0
0x22ff:	mov	qword ptr [rsp + 0x68], 0
0x2308:	mov	rdx, rsp
0x230b:	mov	qword ptr [rsp], rax
0x230f:	lea	rax, [rip + 0x3536]
0x2316:	mov	qword ptr [rsp + 0x30], rcx
0x231b:	lea	rcx, [rip + 0x3573]
0x2322:	mov	qword ptr [rsp + 8], rax
0x2327:	lea	rax, [rip + 0x3596]
0x232e:	mov	qword ptr [rsp + 0x40], rcx
0x2333:	lea	rcx, [rip + 0x3565]
0x233a:	mov	qword ptr [rsp + 0x10], rax
0x233f:	lea	rax, [rip + 0x3516]
0x2346:	mov	qword ptr [rsp + 0x50], rcx
0x234b:	mov	qword ptr [rsp + 0x18], rax
0x2350:	lea	rax, [rip + 0x351b]
0x2357:	mov	qword ptr [rsp + 0x20], rax
0x235c:	lea	rax, [rip + 0x3519]
0x2363:	mov	qword ptr [rsp + 0x28], rax
0x2368:	mov	qword ptr [rsp + 0x38], rax
0x236d:	mov	qword ptr [rsp + 0x48], rax
0x2372:	mov	qword ptr [rsp + 0x58], rax
0x2377:	nop	word ptr [rax + rax]
0x2380:	add	rdx, 0x10
0x2384:	mov	rdi, qword ptr [rdx]
0x2387:	test	rdi, rdi
0x238a:	je	0x239f


0x239f:	mov	r12, qword ptr [rdx + 8]
0x23a3:	xor	edi, edi
0x23a5:	mov	edx, 5
0x23aa:	lea	rsi, [rip + 0x34f8]
0x23b1:	test	r12, r12
0x23b4:	je	0x247b


0x238c:	mov	ecx, 6
0x2391:	mov	rsi, rbx
0x2394:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x247b:	call	0x1490


0x23ba:	call	0x1490


0x2394:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2396:	seta	al
0x2399:	sbb	al, 0
0x239b:	test	al, al
0x239d:	jne	0x2380


0x2380:	add	rdx, 0x10
0x2384:	mov	rdi, qword ptr [rdx]
0x2387:	test	rdi, rdi
0x238a:	je	0x239f


0x23bf:	lea	rcx, [rip + 0x3712]
0x23c6:	lea	rdx, [rip + 0x34f3]
0x23cd:	mov	rsi, rax
0x23d0:	mov	edi, 1
0x23d5:	xor	eax, eax
0x23d7:	call	0x1630


0x23dc:	xor	esi, esi
0x23de:	mov	edi, 5
0x23e3:	call	0x1620


0x23e8:	test	rax, rax
0x23eb:	je	0x2409


0x2409:	lea	rsi, [rip + 0x34c2]
0x2410:	xor	edi, edi
0x2412:	mov	edx, 5
0x2417:	call	0x1490


0x23ed:	lea	rsi, [rip + 0x34da]
0x23f4:	mov	edx, 3
0x23f9:	mov	rdi, rax
0x23fc:	call	0x1420


0x1420:	jmp	qword ptr [rip + 0x206a3a]




0x241c:	lea	rcx, [rip + 0x3421]
0x2423:	lea	rdx, [rip + 0x36ae]
0x242a:	mov	rsi, rax
0x242d:	mov	edi, 1
0x2432:	xor	eax, eax
0x2434:	call	0x1630


0x2439:	cmp	r12, rbx
0x243c:	lea	rcx, [rip + 0x3423]
0x2443:	lea	rbx, [rip + 0x34dd]
0x244a:	cmove	rbx, rcx
0x244e:	lea	rsi, [rip + 0x36f3]
0x2455:	xor	edi, edi
0x2457:	mov	edx, 5
0x245c:	call	0x1490


0x2461:	mov	rcx, rbx
0x2464:	mov	rsi, rax
0x2467:	mov	rdx, r12
0x246a:	mov	edi, 1
0x246f:	xor	eax, eax
0x2471:	call	0x1630


0x2476:	jmp	0x2226


0x2480:	lea	rcx, [rip + 0x3651]
0x2487:	lea	rdx, [rip + 0x3432]
0x248e:	mov	rsi, rax
0x2491:	mov	edi, 1
0x2496:	xor	eax, eax
0x2498:	call	0x1630


0x249d:	xor	esi, esi
0x249f:	mov	edi, 5
0x24a4:	call	0x1620


0x24a9:	test	rax, rax
0x24ac:	je	0x24c6


0x24c6:	lea	rsi, [rip + 0x3405]
0x24cd:	mov	edx, 5
0x24d2:	xor	edi, edi
0x24d4:	lea	r12, [rip + 0x3369]
0x24db:	lea	rbx, [rip + 0x3384]
0x24e2:	call	0x1490


0x24ae:	lea	rsi, [rip + 0x3419]
0x24b5:	mov	edx, 3
0x24ba:	mov	rdi, rax
0x24bd:	call	0x1420


0x24e7:	lea	rcx, [rip + 0x3356]
0x24ee:	lea	rdx, [rip + 0x35e3]
0x24f5:	mov	rsi, rax
0x24f8:	mov	edi, 1
0x24fd:	xor	eax, eax
0x24ff:	call	0x1630


0x2504:	jmp	0x244e


0x244e:	lea	rsi, [rip + 0x36f3]
0x2455:	xor	edi, edi
0x2457:	mov	edx, 5
0x245c:	call	0x1490


0x4cac:	cmp	r12, 9
0x4cb0:	ja	0x4ff0


0x4cb6:	lea	rdx, [rip + 0x174b]
0x4cbd:	movsxd	rax, dword ptr [rdx + r12*4]
0x4cc1:	add	rax, rdx
0x4cc4:	jmp	rax


0x4ff0:	mov	r10, qword ptr [rbx + 0x40]
0x4ff4:	mov	r9, qword ptr [rbx + 0x38]
0x4ff8:	mov	edx, 5
0x4ffd:	mov	rax, qword ptr [rbx + 0x10]
0x5001:	mov	r8, qword ptr [rbx + 8]
0x5005:	lea	rsi, [rip + 0x1374]
0x500c:	mov	r13, qword ptr [rbx + 0x30]
0x5010:	mov	r12, qword ptr [rbx + 0x28]
0x5014:	mov	r15, qword ptr [rbx + 0x20]
0x5018:	mov	r14, qword ptr [rbx + 0x18]
0x501c:	mov	qword ptr [rsp + 0x18], r10
0x5021:	mov	qword ptr [rsp + 0x10], r9
0x5026:	mov	qword ptr [rsp], rax
0x502a:	mov	qword ptr [rsp + 8], r8
0x502f:	mov	rbx, qword ptr [rbx]
0x5032:	jmp	0x4dc2


0x4dc2:	xor	edi, edi
0x4dc4:	call	0x1490


0x4dc9:	mov	r10, qword ptr [rsp + 0x18]
0x4dce:	push	r10
0x4dd0:	jmp	0x4d14


0x4d14:	mov	r9, qword ptr [rsp + 0x18]
0x4d19:	mov	rdx, rax
0x4d1c:	mov	rcx, rbx
0x4d1f:	mov	esi, 1
0x4d24:	mov	rdi, rbp
0x4d27:	xor	eax, eax
0x4d29:	push	r9
0x4d2b:	push	r13
0x4d2d:	push	r12
0x4d2f:	push	r15
0x4d31:	push	r14
0x4d33:	mov	r9, qword ptr [rsp + 0x30]
0x4d38:	mov	r8, qword ptr [rsp + 0x38]
0x4d3d:	call	0x16a0


0x4d42:	add	rsp, 0x30
0x4d46:	add	rsp, 0x28
0x4d4a:	pop	rbx
0x4d4b:	pop	rbp
0x4d4c:	pop	r12
0x4d4e:	pop	r13
0x4d50:	pop	r14
0x4d52:	pop	r15
0x4d54:	ret	


0x2003:	mov	rbp, rax
0x2006:	mov	qword ptr [rbx], rbp
0x2009:	mov	qword ptr [rbx + 0x10], 0
0x2011:	mov	rax, rbx
0x2014:	mov	qword ptr [rbx + 8], 0
0x201c:	mov	dword ptr [rbx + 0x18], 0
0x2023:	mov	qword ptr [rbx + 0x20], 0
0x202b:	mov	qword ptr [rbx + 0x28], 0
0x2033:	mov	qword ptr [rbx + 0x30], 0
0x203b:	add	rsp, 8
0x203f:	pop	rbx
0x2040:	pop	rbp
0x2041:	ret	


0x4ac4:	mov	qword ptr [r12 + rbx*8], rax
0x4ac8:	add	rbx, 1
0x4acc:	mov	rcx, qword ptr [rsp + 0x20]
0x4ad1:	mov	rdx, qword ptr [rsp + 0x18]
0x4ad6:	mov	rsi, qword ptr [rsp + 0x10]
0x4adb:	mov	rdi, qword ptr [rsp + 8]
0x4ae0:	call	0x4810


0x407d:	mov	dword ptr [rbp], r12d
0x4081:	pop	rbx
0x4082:	pop	rbp
0x4083:	pop	r12
0x4085:	ret	


0x3f3e:	mov	dword ptr [rip + 0x204113], r12d
0x3f45:	mov	eax, dword ptr [rbp + 4]
0x3f48:	shl	r15, 4
0x3f4c:	sub	rsp, 8
0x3f50:	add	rbx, r15
0x3f53:	lea	r15, [rbp + 8]
0x3f57:	mov	r8d, dword ptr [rbp]
0x3f5b:	mov	r11, qword ptr [rbx]
0x3f5e:	mov	r12, qword ptr [rbx + 8]
0x3f62:	mov	rcx, r14
0x3f65:	or	eax, 1
0x3f68:	mov	dword ptr [rsp + 0x24], eax
0x3f6c:	push	qword ptr [rbp + 0x30]
0x3f6f:	mov	r9d, eax
0x3f72:	push	qword ptr [rbp + 0x28]
0x3f75:	push	r15
0x3f77:	mov	rsi, r11
0x3f7a:	mov	rdx, qword ptr [rsp + 0x28]
0x3f7f:	mov	rdi, r12
0x3f82:	mov	qword ptr [rsp + 0x30], r11
0x3f87:	call	0x2c60


0x27ea:	test	r13b, r13b
0x27ed:	je	0x2778


0x281a:	jmp	0x276e


0x27f6:	jmp	0x2778


0x267e:	call	0x1410


0x2683:	mov	dword ptr [rax], 9
0x2689:	add	rsp, 8
0x268d:	mov	eax, ebx
0x268f:	pop	rbx
0x2690:	pop	rbp
0x2691:	ret	


0x5587:	mov	rdi, rbx
0x558a:	pop	rbx
0x558b:	jmp	0x15e0


0x5186:	mov	rax, qword ptr [rsp + 0x78]
0x518b:	xor	rax, qword ptr fs:[0x28]
0x5194:	jne	0x51a0


0x5196:	add	rsp, 0xb8
0x519d:	pop	rbx
0x519e:	pop	rbp
0x519f:	ret	


0x51a0:	call	0x14c0


0x50b0:	mov	rax, qword ptr [rsp + 0x58]
0x50b5:	xor	rax, qword ptr fs:[0x28]
0x50be:	jne	0x50c5


0x50c0:	add	rsp, 0x68
0x50c4:	ret	


0x50c5:	call	0x14c0


0x2a80:	xor	edi, edi
0x2a82:	call	0x1680


0x2970:	xor	edi, edi
0x2972:	call	0x1680


0x24c2:	test	eax, eax
0x24c4:	jne	0x2509


0x2509:	lea	r12, [rip + 0x3334]
0x2510:	mov	r13, qword ptr [rip + 0x205b71]
0x2517:	lea	rsi, [rip + 0x35e2]
0x251e:	xor	edi, edi
0x2520:	mov	edx, 5
0x2525:	call	0x1490


0x252a:	mov	rsi, r13
0x252d:	mov	rdi, rax
0x2530:	call	0x1580


0x2535:	jmp	0x2409


0x2401:	test	eax, eax
0x2403:	jne	0x2510


0x2510:	mov	r13, qword ptr [rip + 0x205b71]
0x2517:	lea	rsi, [rip + 0x35e2]
0x251e:	xor	edi, edi
0x2520:	mov	edx, 5
0x2525:	call	0x1490


0x174b:	lea	rdi, [rip + 0xe0e]
0x1752:	call	0x5820


0x1757:	lea	rax, [rip + 0x41a7]
0x175e:	sub	rsp, 8
0x1762:	mov	r8, qword ptr [rip + 0x2068a7]
0x1769:	push	0
0x176b:	lea	rdx, [rip + 0x40d2]
0x1772:	lea	rcx, [rip + 0x4147]
0x1779:	push	rax
0x177a:	lea	rax, [rip + 0xa4f]
0x1781:	mov	r9d, 1
0x1787:	mov	rsi, rbx
0x178a:	mov	edi, ebp
0x178c:	push	rax
0x178d:	xor	eax, eax
0x178f:	call	0x2990


0x1794:	movsxd	rax, dword ptr [rip + 0x2068fd]
0x179b:	mov	edx, ebp
0x179d:	add	rsp, 0x20
0x17a1:	sub	edx, eax
0x17a3:	cmp	edx, 1
0x17a6:	jg	0x1df6


0x17ac:	cmp	eax, ebp
0x17ae:	je	0x1ca9


0x1df6:	mov	rdi, qword ptr [rbx + rax*8 + 8]
0x1dfb:	call	0x47e0


0x1ca9:	xor	edi, edi
0x1cab:	call	0x1fe0


0x17b4:	mov	rsi, qword ptr [rbx + rax*8]
0x17b8:	lea	rdi, [rip + 0x447b]
0x17bf:	mov	ecx, 2
0x17c4:	mov	r15, rsi
0x17c7:	mov	qword ptr [rsp + 0x20], rsi
0x17cc:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x17cc:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x17ce:	seta	al
0x17d1:	sbb	al, 0
0x17d3:	xor	edi, edi
0x17d5:	movsx	eax, al
0x17d8:	mov	ebx, eax
0x17da:	mov	dword ptr [rsp + 0x2c], eax
0x17de:	call	0x1fe0


0x17e3:	test	ebx, ebx
0x17e5:	mov	r14, rax
0x17e8:	je	0x1809


0x1809:	mov	rdi, qword ptr [rip + 0x206880]
0x1810:	mov	esi, 2
0x1815:	call	0x2620


0x17ea:	mov	rdx, qword ptr [rip + 0x20689f]
0x17f1:	lea	rsi, [rip + 0x43d9]
0x17f8:	mov	rdi, r15
0x17fb:	call	0x26a0


0x1800:	test	rax, rax
0x1803:	je	0x1ceb


0x1ceb:	mov	rdx, qword ptr [rsp + 0x20]
0x1cf0:	mov	esi, 3
0x1cf5:	xor	edi, edi
0x1cf7:	call	0x4610


0x181a:	lea	rdi, [rsp + 0x30]
0x181f:	mov	qword ptr [rsp + 0x10], rdi
0x1824:	call	0x4800


0x1829:	mov	qword ptr [rsp + 8], 0
0x1832:	nop	word ptr [rax + rax]
0x1838:	mov	rcx, qword ptr [rsp + 0x10]
0x183d:	mov	rdi, qword ptr [rip + 0x20684c]
0x1844:	lea	rsi, [rip + 0x40d9]
0x184b:	mov	edx, 3
0x1850:	call	0x4810


0x1855:	cmp	rax, -1
0x1859:	je	0x1a8c


0x1a8c:	cmp	qword ptr [rsp + 8], 0
0x1a92:	jne	0x1d1c


0x185f:	test	rax, rax
0x1862:	je	0x1e31


0x1a98:	mov	rdi, qword ptr [r14 + 0x10]
0x1a9c:	test	rdi, rdi
0x1a9f:	je	0x1aad


0x1d1c:	mov	rdx, qword ptr [rsp + 0x20]
0x1d21:	mov	esi, 3
0x1d26:	xor	edi, edi
0x1d28:	call	0x4610


0x1e31:	lea	rcx, [rip + 0x3d84]
0x1e38:	lea	rsi, [rip + 0x3ae9]
0x1e3f:	lea	rdi, [rip + 0x3b00]
0x1e46:	mov	edx, 0x1cd
0x1e4b:	call	0x1520


0x1868:	test	r14, r14
0x186b:	mov	rbp, qword ptr [rsp + 0x38]
0x1870:	je	0x1dd2


0x1aad:	mov	ebp, 1
0x1ab2:	cmp	qword ptr [rip + 0x206636], 0
0x1aba:	je	0x1b6d


0x1aa1:	lea	rsi, [rip + 0x4b8]
0x1aa8:	call	0x1f70


0x1520:	jmp	qword ptr [rip + 0x2069ba]


0x1dd2:	lea	rcx, [rip + 0x3dd7]
0x1dd9:	lea	rsi, [rip + 0x3b48]
0x1de0:	lea	rdi, [rip + 0x3b68]
0x1de7:	mov	edx, 0x84
0x1dec:	call	0x1520


0x1876:	mov	r15, qword ptr [r14 + 0x10]
0x187a:	mov	r12, r14
0x187d:	test	r15, r15
0x1880:	mov	rbx, r15
0x1883:	jne	0x18ae


0x1b6d:	mov	rdi, qword ptr [rip + 0x20651c]
0x1b74:	call	0x54d0


0x1ac0:	mov	rdi, qword ptr [r14 + 0x10]
0x1ac4:	test	rdi, rdi
0x1ac7:	je	0x1bb0




0x1885:	jmp	0x1a6f


0x18ae:	mov	rsi, qword ptr [r15]
0x18b1:	mov	rdi, rbp
0x18b4:	call	0x15a0


0x1bb0:	mov	rax, qword ptr [rip + 0x206551]
0x1bb7:	test	rax, rax
0x1bba:	jne	0x1af0


0x1acd:	lea	rsi, [rip + 0x57c]
0x1ad4:	call	0x1f70


0x1a6f:	mov	rdi, rbp
0x1a72:	call	0x1fe0


0x15a0:	jmp	qword ptr [rip + 0x20697a]


0x1bc0:	mov	rdx, qword ptr [rsp + 0x20]
0x1bc5:	mov	esi, 3
0x1bca:	xor	edi, edi
0x1bcc:	xor	ebp, ebp
0x1bce:	call	0x4610


0x1af0:	mov	rdi, qword ptr [rax]
0x1af3:	mov	rbx, qword ptr [rax + 0x30]
0x1af7:	call	0x1450




0x1450:	jmp	qword ptr [rip + 0x206a22]




0x1a77:	mov	r15, rax
0x1a7a:	mov	qword ptr [r14 + 0x10], rax
0x1a7e:	jmp	0x18bf


0x18bf:	cmp	qword ptr [rsp + 8], 0
0x18c5:	jne	0x1a1e


0x18cb:	mov	qword ptr [rsp + 8], r15
0x18d0:	jmp	0x1838


0x1a1e:	mov	rax, qword ptr [rsp + 8]
0x1a23:	mov	rsi, qword ptr [r15]
0x1a26:	mov	rdi, qword ptr [rax]
0x1a29:	call	0x15a0


0x1838:	mov	rcx, qword ptr [rsp + 0x10]
0x183d:	mov	rdi, qword ptr [rip + 0x20684c]
0x1844:	lea	rsi, [rip + 0x40d9]
0x184b:	mov	edx, 3
0x1850:	call	0x4810


0x1cb0:	mov	r14, rax
0x1cb3:	lea	rax, [rip + 0x3f80]
0x1cba:	mov	dword ptr [rsp + 0x2c], 0
0x1cc2:	mov	qword ptr [rsp + 0x20], rax
0x1cc7:	jmp	0x1809


0x54f4:	test	eax, eax
0x54f6:	je	0x5534


0x54f8:	call	0x1410


0x54fd:	mov	r12d, dword ptr [rax]
0x5500:	mov	rdi, rbx
0x5503:	mov	rbp, rax
0x5506:	call	0x1470


0x550b:	test	r12d, r12d
0x550e:	jne	0x5540


0x5510:	pop	rbx
0x5511:	pop	rbp
0x5512:	pop	r12
0x5514:	ret	


0x5540:	mov	dword ptr [rbp], r12d
0x5544:	mov	eax, 0xffffffff
0x5549:	jmp	0x5510


0x1b79:	test	eax, eax
0x1b7b:	jne	0x1d57


0x1b81:	xor	ebp, 1
0x1b84:	mov	rsi, qword ptr [rsp + 0x48]
0x1b89:	xor	rsi, qword ptr fs:[0x28]
0x1b92:	movzx	eax, bpl
0x1b96:	jne	0x1df1


0x1d57:	cmp	dword ptr [rsp + 0x2c], 0
0x1d5c:	jne	0x1dbc


0x1b9c:	add	rsp, 0x58
0x1ba0:	pop	rbx
0x1ba1:	pop	rbp
0x1ba2:	pop	r12
0x1ba4:	pop	r13
0x1ba6:	pop	r14
0x1ba8:	pop	r15
0x1baa:	ret	


0x1df1:	call	0x14c0


0x1d5e:	lea	rsi, [rip + 0x3c34]
0x1d65:	mov	edx, 5
0x1d6a:	xor	edi, edi
0x1d6c:	call	0x1490


0x1dbc:	mov	rdx, qword ptr [rsp + 0x20]
0x1dc1:	mov	esi, 3
0x1dc6:	xor	edi, edi
0x1dc8:	call	0x4610


0x1d71:	mov	rbx, rax
0x1d74:	call	0x1410


0x1d79:	mov	esi, dword ptr [rax]
0x1d7b:	lea	rdx, [rip + 0x3e55]
0x1d82:	mov	rcx, rbx
0x1d85:	mov	edi, 1
0x1d8a:	xor	eax, eax
0x1d8c:	call	0x1640


0x1d91:	mov	qword ptr [rip + 0x206368], rcx
0x1d98:	jmp	0x1b58


0x1b58:	mov	rax, qword ptr [r8 + 0x28]
0x1b5c:	test	rax, rax
0x1b5f:	mov	qword ptr [rip + 0x2065a2], rax
0x1b66:	jne	0x1af0


0x1b68:	test	rdi, rdi
0x1b6b:	jne	0x1bc0


0x569a:	and	ebx, 0x20
0x569d:	test	ebx, ebx
0x569f:	jne	0x56b8


0x56a1:	test	eax, eax
0x56a3:	je	0x56af


0x56b8:	test	eax, eax
0x56ba:	jne	0x56d8


0x56af:	pop	rbx
0x56b0:	pop	rbp
0x56b1:	pop	r12
0x56b3:	ret	


0x56a5:	test	r12, r12
0x56a8:	mov	eax, 0xffffffff
0x56ad:	je	0x56e8


0x56bc:	call	0x1410


0x56d8:	pop	rbx
0x56d9:	mov	eax, 0xffffffff
0x56de:	pop	rbp
0x56df:	pop	r12
0x56e1:	ret	


0x56e8:	call	0x1410


0x56ed:	cmp	dword ptr [rax], 9
0x56f0:	pop	rbx
0x56f1:	pop	rbp
0x56f2:	pop	r12
0x56f4:	setne	al
0x56f7:	movzx	eax, al
0x56fa:	neg	eax
0x56fc:	ret	


0x56c1:	mov	dword ptr [rax], 0
0x56c7:	mov	eax, 0xffffffff
0x56cc:	pop	rbx
0x56cd:	pop	rbp
0x56ce:	pop	r12
0x56d0:	ret	


0x2572:	test	eax, eax
0x2574:	je	0x258c


0x258c:	mov	rdi, qword ptr [rip + 0x205b4d]
0x2593:	call	0x5680


0x2576:	call	0x1410


0x257b:	cmp	byte ptr [rip + 0x205b8e], 0
0x2582:	mov	rbx, rax
0x2585:	je	0x25a3


0x25a3:	lea	rsi, [rip + 0x361d]
0x25aa:	xor	edi, edi
0x25ac:	mov	edx, 5
0x25b1:	call	0x1490


0x2587:	cmp	dword ptr [rax], 0x20
0x258a:	jne	0x25a3


0x25b6:	mov	rdi, qword ptr [rip + 0x205b5b]
0x25bd:	mov	rbp, rax
0x25c0:	test	rdi, rdi
0x25c3:	je	0x25ed


0x25ed:	mov	esi, dword ptr [rbx]
0x25ef:	lea	rdx, [rip + 0x35e1]
0x25f6:	mov	rcx, rax
0x25f9:	xor	edi, edi
0x25fb:	xor	eax, eax
0x25fd:	call	0x1640


0x25c5:	call	0x45e0


0x2602:	jmp	0x25e2


0x25e2:	mov	edi, dword ptr [rip + 0x205a30]
0x25e8:	call	0x1430


0x1430:	jmp	qword ptr [rip + 0x206a32]




0x2598:	test	eax, eax
0x259a:	jne	0x25e2


0x259c:	add	rsp, 8
0x25a0:	pop	rbx
0x25a1:	pop	rbp
0x25a2:	ret	


0x1afc:	mov	rax, qword ptr [rip + 0x2065ed]
0x1b03:	mov	r8, qword ptr [rip + 0x2065fe]
0x1b0a:	xor	esi, esi
0x1b0c:	test	rbx, rbx
0x1b0f:	mov	rcx, qword ptr [rip + 0x2065ea]
0x1b16:	lea	rdi, [rax - 1]
0x1b1a:	mov	qword ptr [r8], 0
0x1b21:	mov	qword ptr [rip + 0x2065c8], rdi
0x1b28:	je	0x1b58


0x1b3a:	mov	qword ptr [rcx + 0x28], rdx
0x1b3e:	mov	esi, 1
0x1b43:	mov	rcx, rdx
0x1b46:	mov	rbx, qword ptr [rbx + 8]
0x1b4a:	test	rbx, rbx
0x1b4d:	jne	0x1b30


0x1b46:	mov	rbx, qword ptr [rbx + 8]
0x1b4a:	test	rbx, rbx
0x1b4d:	jne	0x1b30


0x1b4f:	test	sil, sil
0x1b52:	jne	0x1d91


0x1b30:	mov	rdx, qword ptr [rbx]
0x1b33:	sub	qword ptr [rdx + 0x20], 1
0x1b38:	jne	0x1b46


0x1a2e:	test	eax, eax
0x1a30:	je	0x1829


0x1a36:	add	qword ptr [r15 + 0x20], 1
0x1a3b:	mov	edi, 0x10
0x1a40:	call	0x5240


0x1a45:	mov	rdi, qword ptr [rsp + 8]
0x1a4a:	mov	qword ptr [rax], r15
0x1a4d:	mov	rdx, qword ptr [rdi + 0x30]
0x1a51:	mov	qword ptr [rax + 8], rdx
0x1a55:	mov	qword ptr [rdi + 0x30], rax
0x1a59:	jmp	0x1829


0x18b9:	test	eax, eax
0x18bb:	mov	edx, eax
0x18bd:	jne	0x1890


0x1890:	mov	rax, qword ptr [r15 + 0x10]
0x1894:	cmovs	rax, qword ptr [r15 + 8]
0x1899:	test	rax, rax
0x189c:	je	0x18d8


0x18d8:	mov	rdi, rbp
0x18db:	mov	dword ptr [rsp + 0x28], edx
0x18df:	call	0x1fe0


0x189e:	mov	edx, dword ptr [rax + 0x18]
0x18a1:	test	edx, edx
0x18a3:	cmovne	r12, r15
0x18a7:	cmovne	rbx, rax
0x18ab:	mov	r15, rax
0x18ae:	mov	rsi, qword ptr [r15]
0x18b1:	mov	rdi, rbp
0x18b4:	call	0x15a0


0x18e4:	mov	edx, dword ptr [rsp + 0x28]
0x18e8:	mov	r13, rax
0x18eb:	test	edx, edx
0x18ed:	js	0x1a83


0x1a83:	mov	qword ptr [r15 + 8], rax
0x1a87:	jmp	0x18f7


0x18f3:	mov	qword ptr [r15 + 0x10], rax
0x18f7:	mov	rsi, qword ptr [rbx]
0x18fa:	mov	rdi, rbp
0x18fd:	call	0x15a0


0x18f7:	mov	rsi, qword ptr [rbx]
0x18fa:	mov	rdi, rbp
0x18fd:	call	0x15a0


0x1902:	test	eax, eax
0x1904:	je	0x1d9d


0x1d9d:	lea	rcx, [rip + 0x3e0c]
0x1da4:	lea	rsi, [rip + 0x3b7d]
0x1dab:	lea	rdi, [rip + 0x3ba2]
0x1db2:	mov	edx, 0xa8
0x1db7:	call	0x1520


0x190a:	cdq	
0x190b:	mov	rcx, qword ptr [rbx + 0x10]
0x190f:	or	edx, 1
0x1912:	test	eax, eax
0x1914:	cmovs	rcx, qword ptr [rbx + 8]
0x1919:	mov	dword ptr [rsp + 0x28], edx
0x191d:	cmp	r13, rcx
0x1920:	mov	qword ptr [rsp + 0x18], rcx
0x1925:	mov	r15, rcx
0x1928:	jne	0x1941


0x192a:	jmp	0x1967


0x1941:	mov	rsi, qword ptr [r15]
0x1944:	mov	rdi, rbp
0x1947:	call	0x15a0


0x1967:	mov	eax, dword ptr [rbx + 0x18]
0x196a:	test	eax, eax
0x196c:	je	0x1a60


0x1a60:	add	eax, dword ptr [rsp + 0x28]
0x1a64:	mov	r15, r13
0x1a67:	mov	dword ptr [rbx + 0x18], eax
0x1a6a:	jmp	0x18bf


0x1972:	mov	edx, dword ptr [rsp + 0x28]
0x1976:	neg	edx
0x1978:	cmp	eax, edx
0x197a:	je	0x1a60


0x1980:	mov	rax, qword ptr [rsp + 0x18]
0x1985:	mov	edi, dword ptr [rsp + 0x28]
0x1989:	cmp	edi, dword ptr [rax + 0x18]
0x198c:	je	0x1c30


0x1c30:	test	edi, edi
0x1c32:	js	0x1c98


0x1992:	mov	esi, dword ptr [rsp + 0x28]
0x1996:	mov	rdi, qword ptr [rsp + 0x18]
0x199b:	test	esi, esi
0x199d:	mov	rax, qword ptr [rdi + 8]
0x19a1:	mov	rcx, qword ptr [rdi + 0x10]
0x19a5:	js	0x1c70


0x1c98:	mov	rdi, rax
0x1c9b:	mov	rax, qword ptr [rax + 0x10]
0x1c9f:	mov	qword ptr [rbx + 8], rax
0x1ca3:	mov	qword ptr [rdi + 0x10], rbx
0x1ca7:	jmp	0x1c45


0x1c34:	mov	rdi, qword ptr [rsp + 0x18]
0x1c39:	mov	rax, qword ptr [rdi + 8]
0x1c3d:	mov	qword ptr [rbx + 0x10], rax
0x1c41:	mov	qword ptr [rdi + 8], rbx
0x1c45:	cmp	qword ptr [r12 + 0x10], rbx
0x1c4a:	mov	rax, qword ptr [rsp + 0x18]
0x1c4f:	mov	dword ptr [rax + 0x18], 0
0x1c56:	mov	dword ptr [rbx + 0x18], 0
0x1c5d:	jne	0x1a0a


0x1c70:	mov	rax, qword ptr [rcx + 8]
0x1c74:	mov	qword ptr [rdi + 0x10], rax
0x1c78:	mov	rax, qword ptr [rcx + 0x10]
0x1c7c:	mov	qword ptr [rcx + 8], rdi
0x1c80:	mov	qword ptr [rbx + 8], rax
0x1c84:	mov	qword ptr [rcx + 0x10], rbx
0x1c88:	mov	rax, rcx
0x1c8b:	jmp	0x19c8


0x19ab:	mov	rcx, qword ptr [rax + 0x10]
0x19af:	mov	rsi, qword ptr [rsp + 0x18]
0x19b4:	mov	qword ptr [rsi + 8], rcx
0x19b8:	mov	rcx, qword ptr [rax + 8]
0x19bc:	mov	qword ptr [rax + 0x10], rsi
0x19c0:	mov	qword ptr [rbx + 0x10], rcx
0x19c4:	mov	qword ptr [rax + 8], rbx
0x19c8:	mov	rdi, qword ptr [rsp + 0x18]
0x19cd:	mov	dword ptr [rbx + 0x18], 0
0x19d4:	mov	dword ptr [rdi + 0x18], 0
0x19db:	mov	ecx, dword ptr [rax + 0x18]
0x19de:	cmp	dword ptr [rsp + 0x28], ecx
0x19e2:	je	0x1c90


0x1c45:	cmp	qword ptr [r12 + 0x10], rbx
0x1c4a:	mov	rax, qword ptr [rsp + 0x18]
0x1c4f:	mov	dword ptr [rax + 0x18], 0
0x1c56:	mov	dword ptr [rbx + 0x18], 0
0x1c5d:	jne	0x1a0a


0x1c63:	mov	qword ptr [r12 + 0x10], rax
0x1c68:	mov	r15, r13
0x1c6b:	jmp	0x18bf


0x1a0a:	cmp	qword ptr [rsp + 8], 0
0x1a10:	mov	qword ptr [r12 + 8], rax
0x1a15:	mov	r15, r13
0x1a18:	je	0x18cb


0x19c8:	mov	rdi, qword ptr [rsp + 0x18]
0x19cd:	mov	dword ptr [rbx + 0x18], 0
0x19d4:	mov	dword ptr [rdi + 0x18], 0
0x19db:	mov	ecx, dword ptr [rax + 0x18]
0x19de:	cmp	dword ptr [rsp + 0x28], ecx
0x19e2:	je	0x1c90


0x1c90:	mov	dword ptr [rbx + 0x18], edx
0x1c93:	jmp	0x19f8


0x19e8:	cmp	edx, ecx
0x19ea:	jne	0x19f8


0x19f8:	cmp	qword ptr [r12 + 0x10], rbx
0x19fd:	mov	dword ptr [rax + 0x18], 0
0x1a04:	je	0x1c63


0x19ec:	mov	rsi, qword ptr [rsp + 0x18]
0x19f1:	mov	edi, dword ptr [rsp + 0x28]
0x19f5:	mov	dword ptr [rsi + 0x18], edi
0x19f8:	cmp	qword ptr [r12 + 0x10], rbx
0x19fd:	mov	dword ptr [rax + 0x18], 0
0x1a04:	je	0x1c63


0x194c:	test	eax, eax
0x194e:	je	0x1ccc


0x1ccc:	lea	rcx, [rip + 0x3edd]
0x1cd3:	lea	rsi, [rip + 0x3c4e]
0x1cda:	lea	rdi, [rip + 0x3c88]
0x1ce1:	mov	edx, 0xb6
0x1ce6:	call	0x1520


0x1954:	jns	0x1930


0x1956:	mov	dword ptr [r15 + 0x18], 0xffffffff
0x195e:	mov	r15, qword ptr [r15 + 8]
0x1962:	cmp	r13, r15
0x1965:	jne	0x1941


0x1930:	mov	dword ptr [r15 + 0x18], 1
0x1938:	mov	r15, qword ptr [r15 + 0x10]
0x193c:	cmp	r13, r15
0x193f:	je	0x1967


0x25ca:	mov	esi, dword ptr [rbx]
0x25cc:	lea	rdx, [rip + 0x3600]
0x25d3:	mov	rcx, rax
0x25d6:	mov	r8, rbp
0x25d9:	xor	edi, edi
0x25db:	xor	eax, eax
0x25dd:	call	0x1640


0x1dcd:	mov	rbx, rax
0x1dd0:	jmp	0x1d74


0x1d74:	call	0x1410


0x1bd3:	lea	rsi, [rip + 0x3da4]
0x1bda:	mov	rbx, rax
0x1bdd:	mov	edx, 5
0x1be2:	xor	edi, edi
0x1be4:	call	0x1490


0x1be9:	mov	rcx, rbx
0x1bec:	mov	rdx, rax
0x1bef:	xor	esi, esi
0x1bf1:	xor	edi, edi
0x1bf3:	xor	eax, eax
0x1bf5:	call	0x1640


0x1c15:	cmp	qword ptr [rip + 0x2064db], 0
0x1c1d:	jne	0x1c00


0x1c09:	lea	rsi, [rip + 0x480]
0x1c10:	call	0x1f70


0x1c1f:	jmp	0x1ab2


0x1c00:	mov	rdi, qword ptr [r14 + 0x10]
0x1c04:	test	rdi, rdi
0x1c07:	je	0x1c15


0x1ab2:	cmp	qword ptr [rip + 0x206636], 0
0x1aba:	je	0x1b6d


0x1d2d:	lea	rsi, [rip + 0x3e4c]
0x1d34:	mov	rbx, rax
0x1d37:	mov	edx, 5
0x1d3c:	xor	edi, edi
0x1d3e:	call	0x1490


0x1d43:	mov	rcx, rbx
0x1d46:	mov	rdx, rax
0x1d49:	xor	esi, esi
0x1d4b:	mov	edi, 1
0x1d50:	xor	eax, eax
0x1d52:	call	0x1640


0x1cfc:	mov	rbx, rax
0x1cff:	call	0x1410


0x1d04:	mov	esi, dword ptr [rax]
0x1d06:	lea	rdx, [rip + 0x3eca]
0x1d0d:	mov	rcx, rbx
0x1d10:	mov	edi, 1
0x1d15:	xor	eax, eax
0x1d17:	call	0x1640


0x1e00:	lea	rsi, [rip + 0x3b0c]
0x1e07:	mov	rbx, rax
0x1e0a:	mov	edx, 5
0x1e0f:	xor	edi, edi
0x1e11:	call	0x1490


0x1e16:	xor	edi, edi
0x1e18:	mov	rdx, rax
0x1e1b:	mov	rcx, rbx
0x1e1e:	xor	esi, esi
0x1e20:	xor	eax, eax
0x1e22:	call	0x1640


0x1e27:	mov	edi, 1
0x1e2c:	call	0x21d0


0x3f8c:	add	rsp, 0x20
0x3f90:	mov	r11, qword ptr [rsp + 0x10]
0x3f95:	cmp	r11, rax
0x3f98:	ja	0x4001


0x3f9a:	lea	rsi, [rax + 1]
0x3f9e:	lea	rax, [rip + 0x20419b]
0x3fa5:	cmp	r12, rax
0x3fa8:	mov	qword ptr [rbx], rsi
0x3fab:	je	0x3fbf


0x4001:	mov	eax, dword ptr [rsp + 0x18]
0x4005:	mov	dword ptr [r13], eax
0x4009:	add	rsp, 0x28
0x400d:	mov	rax, r12
0x4010:	pop	rbx
0x4011:	pop	rbp
0x4012:	pop	r12
0x4014:	pop	r13
0x4016:	pop	r14
0x4018:	pop	r15
0x401a:	ret	


0x3fbf:	mov	rdi, rsi
0x3fc2:	mov	qword ptr [rsp + 0x10], rsi
0x3fc7:	call	0x5240


0x3fad:	mov	rdi, r12
0x3fb0:	mov	qword ptr [rsp + 0x10], rsi
0x3fb5:	call	0x13f0


0x3fba:	mov	rsi, qword ptr [rsp + 0x10]
0x3fbf:	mov	rdi, rsi
0x3fc2:	mov	qword ptr [rsp + 0x10], rsi
0x3fc7:	call	0x5240


0x3fcc:	sub	rsp, 8
0x3fd0:	mov	qword ptr [rbx + 8], rax
0x3fd4:	mov	r8d, dword ptr [rbp]
0x3fd8:	push	qword ptr [rbp + 0x30]
0x3fdb:	push	qword ptr [rbp + 0x28]
0x3fde:	mov	rcx, r14
0x3fe1:	push	r15
0x3fe3:	mov	r9d, dword ptr [rsp + 0x3c]
0x3fe8:	mov	rdi, rax
0x3feb:	mov	rdx, qword ptr [rsp + 0x28]
0x3ff0:	mov	rsi, qword ptr [rsp + 0x30]
0x3ff5:	mov	r12, rax
0x3ff8:	call	0x2c60


0x4712:	mov	rdi, qword ptr [rsp + 0x38]
0x4717:	xor	rdi, qword ptr fs:[0x28]
0x4720:	jne	0x472c


0x4722:	add	rsp, 0x48
0x4726:	ret	


0x472c:	call	0x14c0


0x445f:	mov	rcx, qword ptr [rsp + 0x38]
0x4464:	xor	rcx, qword ptr fs:[0x28]
0x446d:	jne	0x4479


0x446f:	add	rsp, 0x48
0x4473:	ret	


0x4479:	call	0x14c0


0x44eb:	mov	rdx, qword ptr [rsp + 0x38]
0x44f0:	xor	rdx, qword ptr fs:[0x28]
0x44f9:	jne	0x4505


0x44fb:	add	rsp, 0x48
0x44ff:	ret	


0x4505:	call	0x14c0


0x467f:	mov	rcx, qword ptr [rsp + 0x38]
0x4684:	xor	rcx, qword ptr fs:[0x28]
0x468d:	jne	0x4699


0x468f:	add	rsp, 0x48
0x4693:	ret	


0x4699:	call	0x14c0


0x45ae:	mov	rsi, qword ptr [rsp + 0x38]
0x45b3:	xor	rsi, qword ptr fs:[0x28]
0x45bc:	jne	0x45c3


0x45be:	add	rsp, 0x48
0x45c2:	ret	


0x45c3:	call	0x14c0


0x3ffd:	add	rsp, 0x20
0x4001:	mov	eax, dword ptr [rsp + 0x18]
0x4005:	mov	dword ptr [r13], eax
0x4009:	add	rsp, 0x28
0x400d:	mov	rax, r12
0x4010:	pop	rbx
0x4011:	pop	rbp
0x4012:	pop	r12
0x4014:	pop	r13
0x4016:	pop	r14
0x4018:	pop	r15
0x401a:	ret	


0x424c:	lea	rsi, [rax + 1]
0x4250:	mov	qword ptr [rsp + 0x48], rax
0x4255:	add	rsp, 0x20
0x4259:	mov	rdi, rsi
0x425c:	mov	qword ptr [rsp + 0x18], rsi
0x4261:	call	0x5240


0x4266:	mov	qword ptr [rsp + 0x10], rax
0x426b:	sub	rsp, 8
0x426f:	push	qword ptr [rbx + 0x30]
0x4272:	push	qword ptr [rbx + 0x28]
0x4275:	mov	r10, qword ptr [rsp + 0x38]
0x427a:	mov	r9d, ebp
0x427d:	mov	r8d, dword ptr [rbx]
0x4280:	mov	rcx, r15
0x4283:	mov	rdx, r14
0x4286:	mov	rdi, rax
0x4289:	push	r10
0x428b:	mov	rsi, qword ptr [rsp + 0x38]
0x4290:	call	0x2c60


0x4295:	mov	eax, dword ptr [rsp + 0x2c]
0x4299:	add	rsp, 0x20
0x429d:	test	r12, r12
0x42a0:	mov	dword ptr [r13], eax
0x42a4:	je	0x42af


0x42af:	mov	rax, qword ptr [rsp + 0x10]
0x42b4:	add	rsp, 0x38
0x42b8:	pop	rbx
0x42b9:	pop	rbp
0x42ba:	pop	r12
0x42bc:	pop	r13
0x42be:	pop	r14
0x42c0:	pop	r15
0x42c2:	ret	


0x42a6:	mov	r11, qword ptr [rsp + 0x28]
0x42ab:	mov	qword ptr [r12], r11
0x42af:	mov	rax, qword ptr [rsp + 0x10]
0x42b4:	add	rsp, 0x38
0x42b8:	pop	rbx
0x42b9:	pop	rbp
0x42ba:	pop	r12
0x42bc:	pop	r13
0x42be:	pop	r14
0x42c0:	pop	r15
0x42c2:	ret	


0x41c1:	mov	dword ptr [rbp], r12d
0x41c5:	add	rsp, 0x38
0x41c9:	pop	rbx
0x41ca:	pop	rbp
0x41cb:	pop	r12
0x41cd:	pop	r13
0x41cf:	pop	r14
0x41d1:	pop	r15
0x41d3:	ret	


0x2ac4:	jmp	0x2a98


0x2985:	jmp	0x28c9


0x57ed:	add	rbx, 1
0x57f1:	cmp	rbp, rbx
0x57f4:	jne	0x57e0


0x57e0:	mov	rdx, r15
0x57e3:	mov	rsi, r14
0x57e6:	mov	edi, r13d
0x57e9:	call	qword ptr [r12 + rbx*8]


0x1f96:	test	al, al
0x1f98:	jne	0x1fb0


0x1f9a:	mov	rbx, qword ptr [rbx + 0x10]
0x1f9e:	test	rbx, rbx
0x1fa1:	jne	0x1f7c


0x1fb0:	add	rsp, 8
0x1fb4:	mov	eax, 1
0x1fb9:	pop	rbx
0x1fba:	pop	rbp
0x1fbb:	ret	


0x1fa3:	add	rsp, 8
0x1fa7:	pop	rbx
0x1fa8:	pop	rbp
0x1fa9:	ret	


0x1f7c:	mov	rdi, qword ptr [rbx + 8]
0x1f80:	test	rdi, rdi
0x1f83:	je	0x1fc0


0x1ad9:	mov	rax, qword ptr [rip + 0x206628]
0x1ae0:	test	rax, rax
0x1ae3:	je	0x1c24


0x1c24:	mov	rdi, qword ptr [rip + 0x2064c5]
0x1c2b:	jmp	0x1b68


0x1f8d:	test	al, al
0x1f8f:	jne	0x1fb0






0x4e60:	mov	r13, qword ptr [rbx + 0x10]
0x4e64:	mov	r12, qword ptr [rbx + 8]
0x4e68:	lea	rsi, [rip + 0x12d7]
0x4e6f:	mov	rbx, qword ptr [rbx]
0x4e72:	mov	edx, 5
0x4e77:	xor	edi, edi
0x4e79:	call	0x1490


0x4fa0:	mov	r9, qword ptr [rbx + 0x10]
0x4fa4:	mov	r13, qword ptr [rbx + 0x30]
0x4fa8:	lea	rsi, [rip + 0x1339]
0x4faf:	mov	r12, qword ptr [rbx + 0x28]
0x4fb3:	mov	r15, qword ptr [rbx + 0x20]
0x4fb7:	mov	edx, 5
0x4fbc:	mov	r14, qword ptr [rbx + 0x18]
0x4fc0:	mov	r8, qword ptr [rbx + 8]
0x4fc4:	xor	edi, edi
0x4fc6:	mov	qword ptr [rsp + 8], r9
0x4fcb:	mov	rbx, qword ptr [rbx]
0x4fce:	mov	qword ptr [rsp], r8
0x4fd2:	call	0x1490


0x4d80:	mov	r10, qword ptr [rbx + 0x40]
0x4d84:	mov	r9, qword ptr [rbx + 0x38]
0x4d88:	lea	rsi, [rip + 0x15b9]
0x4d8f:	mov	rax, qword ptr [rbx + 0x10]
0x4d93:	mov	r8, qword ptr [rbx + 8]
0x4d97:	mov	edx, 5
0x4d9c:	mov	r13, qword ptr [rbx + 0x30]
0x4da0:	mov	r12, qword ptr [rbx + 0x28]
0x4da4:	mov	r15, qword ptr [rbx + 0x20]
0x4da8:	mov	r14, qword ptr [rbx + 0x18]
0x4dac:	mov	rbx, qword ptr [rbx]
0x4daf:	mov	qword ptr [rsp + 0x18], r10
0x4db4:	mov	qword ptr [rsp + 0x10], r9
0x4db9:	mov	qword ptr [rsp], rax
0x4dbd:	mov	qword ptr [rsp + 8], r8
0x4dc2:	xor	edi, edi
0x4dc4:	call	0x1490


0x4d46:	add	rsp, 0x28
0x4d4a:	pop	rbx
0x4d4b:	pop	rbp
0x4d4c:	pop	r12
0x4d4e:	pop	r13
0x4d50:	pop	r14
0x4d52:	pop	r15
0x4d54:	ret	


0x4f08:	mov	r15, qword ptr [rbx + 0x20]
0x4f0c:	lea	rsi, [rip + 0x1385]
0x4f13:	mov	edx, 5
0x4f18:	xor	edi, edi
0x4f1a:	mov	r14, qword ptr [rbx + 0x18]
0x4f1e:	mov	r13, qword ptr [rbx + 0x10]
0x4f22:	mov	r12, qword ptr [rbx + 8]
0x4f26:	mov	rbx, qword ptr [rbx]
0x4f29:	call	0x1490


0x4e18:	mov	r12, qword ptr [rbx + 8]
0x4e1c:	lea	rsi, [rip + 0x130c]
0x4e23:	mov	rbx, qword ptr [rbx]
0x4e26:	mov	edx, 5
0x4e2b:	xor	edi, edi
0x4e2d:	call	0x1490


0x4eb0:	lea	rsi, [rip + 0x13c1]
0x4eb7:	mov	edx, 5
0x4ebc:	xor	edi, edi
0x4ebe:	mov	r14, qword ptr [rbx + 0x18]
0x4ec2:	mov	r13, qword ptr [rbx + 0x10]
0x4ec6:	mov	r12, qword ptr [rbx + 8]
0x4eca:	mov	rbx, qword ptr [rbx]
0x4ecd:	call	0x1490


0x4cd0:	mov	r9, qword ptr [rbx + 0x38]
0x4cd4:	mov	rax, qword ptr [rbx + 0x10]
0x4cd8:	lea	rsi, [rip + 0x1639]
0x4cdf:	mov	r8, qword ptr [rbx + 8]
0x4ce3:	mov	edx, 5
0x4ce8:	xor	edi, edi
0x4cea:	mov	r13, qword ptr [rbx + 0x30]
0x4cee:	mov	r12, qword ptr [rbx + 0x28]
0x4cf2:	mov	qword ptr [rsp + 0x10], r9
0x4cf7:	mov	r15, qword ptr [rbx + 0x20]
0x4cfb:	mov	r14, qword ptr [rbx + 0x18]
0x4cff:	mov	qword ptr [rsp], rax
0x4d03:	mov	qword ptr [rsp + 8], r8
0x4d08:	mov	rbx, qword ptr [rbx]
0x4d0b:	call	0x1490


0x4f38:	mov	r8, qword ptr [rbx + 8]
0x4f3c:	mov	r12, qword ptr [rbx + 0x28]
0x4f40:	lea	rsi, [rip + 0x1379]
0x4f47:	mov	r15, qword ptr [rbx + 0x20]
0x4f4b:	mov	r14, qword ptr [rbx + 0x18]
0x4f4f:	mov	edx, 5
0x4f54:	mov	r13, qword ptr [rbx + 0x10]
0x4f58:	xor	edi, edi
0x4f5a:	mov	rbx, qword ptr [rbx]
0x4f5d:	mov	qword ptr [rsp], r8
0x4f61:	call	0x1490


0x4dd8:	mov	rbx, qword ptr [rbx]
0x4ddb:	lea	rsi, [rip + 0x133d]
0x4de2:	mov	edx, 5
0x4de7:	xor	edi, edi
0x4de9:	call	0x1490


0x4dee:	add	rsp, 0x28
0x4df2:	mov	rcx, rbx
0x4df5:	mov	rdi, rbp
0x4df8:	pop	rbx
0x4df9:	pop	rbp
0x4dfa:	pop	r12
0x4dfc:	pop	r13
0x4dfe:	pop	r14
0x4e00:	pop	r15
0x4e02:	mov	rdx, rax
0x4e05:	mov	esi, 1
0x4e0a:	xor	eax, eax
0x4e0c:	jmp	0x16a0


0x4f66:	sub	rsp, 8
0x4f6a:	mov	r9, r13
0x4f6d:	push	r12
0x4f6f:	push	r15
0x4f71:	push	r14
0x4f73:	mov	r8, qword ptr [rsp + 0x20]
0x4f78:	mov	rcx, rbx
0x4f7b:	mov	rdx, rax
0x4f7e:	mov	rdi, rbp
0x4f81:	mov	esi, 1
0x4f86:	xor	eax, eax
0x4f88:	call	0x16a0


0x4f8d:	add	rsp, 0x20
0x4f91:	add	rsp, 0x28
0x4f95:	pop	rbx
0x4f96:	pop	rbp
0x4f97:	pop	r12
0x4f99:	pop	r13
0x4f9b:	pop	r14
0x4f9d:	pop	r15
0x4f9f:	ret	


0x4d10:	sub	rsp, 8
0x4d14:	mov	r9, qword ptr [rsp + 0x18]
0x4d19:	mov	rdx, rax
0x4d1c:	mov	rcx, rbx
0x4d1f:	mov	esi, 1
0x4d24:	mov	rdi, rbp
0x4d27:	xor	eax, eax
0x4d29:	push	r9
0x4d2b:	push	r13
0x4d2d:	push	r12
0x4d2f:	push	r15
0x4d31:	push	r14
0x4d33:	mov	r9, qword ptr [rsp + 0x30]
0x4d38:	mov	r8, qword ptr [rsp + 0x38]
0x4d3d:	call	0x16a0


0x4ed2:	sub	rsp, 8
0x4ed6:	push	r14
0x4ed8:	mov	rdx, rax
0x4edb:	mov	r9, r13
0x4ede:	mov	r8, r12
0x4ee1:	mov	rcx, rbx
0x4ee4:	mov	rdi, rbp
0x4ee7:	mov	esi, 1
0x4eec:	xor	eax, eax
0x4eee:	call	0x16a0


0x4ef3:	pop	rax
0x4ef4:	pop	rdx
0x4ef5:	add	rsp, 0x28
0x4ef9:	pop	rbx
0x4efa:	pop	rbp
0x4efb:	pop	r12
0x4efd:	pop	r13
0x4eff:	pop	r14
0x4f01:	pop	r15
0x4f03:	ret	


0x4e32:	add	rsp, 0x28
0x4e36:	mov	r8, r12
0x4e39:	mov	rcx, rbx
0x4e3c:	mov	rdi, rbp
0x4e3f:	mov	rdx, rax
0x4e42:	mov	esi, 1
0x4e47:	pop	rbx
0x4e48:	pop	rbp
0x4e49:	pop	r12
0x4e4b:	pop	r13
0x4e4d:	pop	r14
0x4e4f:	pop	r15
0x4e51:	xor	eax, eax
0x4e53:	jmp	0x16a0


0x4f2e:	push	r15
0x4f30:	jmp	0x4ed6


0x4ed6:	push	r14
0x4ed8:	mov	rdx, rax
0x4edb:	mov	r9, r13
0x4ede:	mov	r8, r12
0x4ee1:	mov	rcx, rbx
0x4ee4:	mov	rdi, rbp
0x4ee7:	mov	esi, 1
0x4eec:	xor	eax, eax
0x4eee:	call	0x16a0


0x4fd7:	push	r13
0x4fd9:	push	r12
0x4fdb:	push	r15
0x4fdd:	push	r14
0x4fdf:	mov	r9, qword ptr [rsp + 0x28]
0x4fe4:	jmp	0x4f73


0x4f73:	mov	r8, qword ptr [rsp + 0x20]
0x4f78:	mov	rcx, rbx
0x4f7b:	mov	rdx, rax
0x4f7e:	mov	rdi, rbp
0x4f81:	mov	esi, 1
0x4f86:	xor	eax, eax
0x4f88:	call	0x16a0


0x4e7e:	add	rsp, 0x28
0x4e82:	mov	r9, r13
0x4e85:	mov	r8, r12
0x4e88:	mov	rcx, rbx
0x4e8b:	mov	rdi, rbp
0x4e8e:	mov	rdx, rax
0x4e91:	pop	rbx
0x4e92:	pop	rbp
0x4e93:	pop	r12
0x4e95:	pop	r13
0x4e97:	pop	r14
0x4e99:	pop	r15
0x4e9b:	mov	esi, 1
0x4ea0:	xor	eax, eax
0x4ea2:	jmp	0x16a0


0x3800:	sub	rsp, 8
0x3804:	mov	rcx, rbp
0x3807:	mov	rsi, r13
0x380a:	push	qword ptr [rsp + 0x68]
0x380e:	push	qword ptr [rsp + 0x78]
0x3812:	mov	rdi, r14
0x3815:	push	0
0x3817:	mov	r9d, dword ptr [rsp + 0x98]
0x381f:	mov	r8d, dword ptr [rsp + 0x28]
0x3824:	mov	rdx, qword ptr [rsp + 0x30]
0x3829:	and	r9d, 0xfffffffd
0x382d:	call	0x2c60


0x3832:	add	rsp, 0x20
0x3836:	mov	r15, rax
0x3839:	mov	rbx, qword ptr [rsp + 0xa8]
0x3841:	xor	rbx, qword ptr fs:[0x28]
0x384a:	mov	rax, r15
0x384d:	jne	0x3e53


0x3853:	add	rsp, 0xb8
0x385a:	pop	rbx
0x385b:	pop	rbp
0x385c:	pop	r12
0x385e:	pop	r13
0x3860:	pop	r14
0x3862:	pop	r15
0x3864:	ret	


0x3e53:	call	0x14c0


0x3dfd:	sub	rsp, 8
0x3e01:	mov	r8d, 5
0x3e07:	mov	rcx, r11
0x3e0a:	push	qword ptr [rsp + 0x68]
0x3e0e:	push	qword ptr [rsp + 0x78]
0x3e12:	mov	rdi, r14
0x3e15:	push	qword ptr [rsp + 0x38]
0x3e19:	mov	r9d, dword ptr [rsp + 0x98]
0x3e21:	mov	rdx, qword ptr [rsp + 0x30]
0x3e26:	mov	rsi, qword ptr [rsp + 0x70]
0x3e2b:	call	0x2c60


0x3e30:	add	rsp, 0x20
0x3e34:	mov	r15, rax
0x3e37:	jmp	0x3839


0x3839:	mov	rbx, qword ptr [rsp + 0xa8]
0x3841:	xor	rbx, qword ptr fs:[0x28]
0x384a:	mov	rax, r15
0x384d:	jne	0x3e53


0x13d0:	push	qword ptr [rip + 0x206a5a]
0x13d6:	jmp	qword ptr [rip + 0x206a5c]


0x13dc:	nop	dword ptr [rax]


0x13e6:	push	0
0x13eb:	jmp	0x13d0


0x13f6:	push	1
0x13fb:	jmp	0x13d0


0x1406:	push	2
0x140b:	jmp	0x13d0


0x1416:	push	3
0x141b:	jmp	0x13d0


0x1426:	push	4
0x142b:	jmp	0x13d0


0x1436:	push	5
0x143b:	jmp	0x13d0


0x1446:	push	6
0x144b:	jmp	0x13d0


0x1456:	push	7
0x145b:	jmp	0x13d0


0x1466:	push	8
0x146b:	jmp	0x13d0


0x1476:	push	9
0x147b:	jmp	0x13d0


0x1486:	push	0xa
0x148b:	jmp	0x13d0


0x1496:	push	0xb
0x149b:	jmp	0x13d0


0x14a6:	push	0xc
0x14ab:	jmp	0x13d0


0x14b6:	push	0xd
0x14bb:	jmp	0x13d0


0x14c6:	push	0xe
0x14cb:	jmp	0x13d0


0x14d6:	push	0xf
0x14db:	jmp	0x13d0


0x14e6:	push	0x10
0x14eb:	jmp	0x13d0


0x14f6:	push	0x11
0x14fb:	jmp	0x13d0


0x1506:	push	0x12
0x150b:	jmp	0x13d0


0x1516:	push	0x13
0x151b:	jmp	0x13d0


0x1526:	push	0x14
0x152b:	jmp	0x13d0


0x1536:	push	0x15
0x153b:	jmp	0x13d0


0x1546:	push	0x16
0x154b:	jmp	0x13d0


0x1556:	push	0x17
0x155b:	jmp	0x13d0


0x1566:	push	0x18
0x156b:	jmp	0x13d0


0x1570:	jmp	qword ptr [rip + 0x206992]




0x1576:	push	0x19
0x157b:	jmp	0x13d0


0x1586:	push	0x1a
0x158b:	jmp	0x13d0


0x1596:	push	0x1b
0x159b:	jmp	0x13d0


0x15a6:	push	0x1c
0x15ab:	jmp	0x13d0


0x15b6:	push	0x1d
0x15bb:	jmp	0x13d0


0x15c6:	push	0x1e
0x15cb:	jmp	0x13d0


0x15d6:	push	0x1f
0x15db:	jmp	0x13d0


0x15e6:	push	0x20
0x15eb:	jmp	0x13d0


0x15f6:	push	0x21
0x15fb:	jmp	0x13d0


0x1606:	push	0x22
0x160b:	jmp	0x13d0


0x1616:	push	0x23
0x161b:	jmp	0x13d0


0x1626:	push	0x24
0x162b:	jmp	0x13d0


0x1636:	push	0x25
0x163b:	jmp	0x13d0


0x1646:	push	0x26
0x164b:	jmp	0x13d0


0x1656:	push	0x27
0x165b:	jmp	0x13d0


0x1666:	push	0x28
0x166b:	jmp	0x13d0


0x1676:	push	0x29
0x167b:	jmp	0x13d0


0x1686:	push	0x2a
0x168b:	jmp	0x13d0


0x1696:	push	0x2b
0x169b:	jmp	0x13d0


0x16a6:	push	0x2c
0x16ab:	jmp	0x13d0


0x16b0:	jmp	qword ptr [rip + 0x2068f2]




0x16b6:	push	0x2d
0x16bb:	jmp	0x13d0


0x16c0:	jmp	qword ptr [rip + 0x2068ea]




0x16c6:	push	0x2e
0x16cb:	jmp	0x13d0


0x16d0:	jmp	qword ptr [rip + 0x2068e2]




0x16d6:	push	0x2f
0x16db:	jmp	0x13d0


0x1e7a:	hlt	


0x1e7b:	nop	dword ptr [rax + rax]


0x1eb2:	nop	dword ptr [rax]
0x1eb6:	nop	word ptr cs:[rax + rax]


0x1f02:	nop	dword ptr [rax]
0x1f06:	nop	word ptr cs:[rax + rax]


0x1f4a:	nop	word ptr [rax + rax]


0x1f5a:	nop	word ptr [rax + rax]


0x1f6b:	nop	dword ptr [rax + rax]


0x1fd5:	nop	
0x1fd6:	nop	word ptr cs:[rax + rax]


0x2042:	nop	dword ptr [rax]
0x2046:	nop	word ptr cs:[rax + rax]


0x2089:	nop	dword ptr [rax]


0x21c1:	nop	dword ptr [rax + rax]
0x21c6:	nop	word ptr cs:[rax + rax]


0x253a:	nop	word ptr [rax + rax]


0x2548:	nop	dword ptr [rax + rax]


0x2558:	nop	dword ptr [rax + rax]


0x2604:	nop	word ptr cs:[rax + rax]
0x260e:	nop	


0x2615:	nop	
0x2616:	nop	word ptr cs:[rax + rax]


0x2642:	nop	word ptr cs:[rax + rax]
0x264c:	nop	dword ptr [rax]


0x2692:	nop	dword ptr [rax]
0x2696:	nop	word ptr cs:[rax + rax]


0x284e:	nop	


0x298f:	nop	


0x2acb:	nop	dword ptr [rax + rax]


0x2b6f:	nop	


0x2c57:	nop	word ptr [rax + rax]


0x2cf3:	mov	byte ptr [rsp + 0xe], 1
0x2cf8:	mov	byte ptr [rsp + 0x7c], 0
0x2cfd:	xor	r12d, r12d
0x2d00:	mov	qword ptr [rsp + 0x50], 0
0x2d09:	mov	byte ptr [rsp + 0xf], 1
0x2d0e:	mov	byte ptr [rsp + 0xd], 0
0x2d13:	lea	rax, [rip + 0x2f33]
0x2d1a:	mov	qword ptr [rsp + 0x18], 1
0x2d23:	xor	r15d, r15d
0x2d26:	mov	dword ptr [rsp + 8], 2
0x2d2e:	mov	qword ptr [rsp + 0x48], rax
0x2d33:	xor	r11d, r11d
0x2d36:	mov	rax, rbp
0x2d39:	mov	r8d, r12d
0x2d3c:	mov	rbp, r11
0x2d3f:	mov	r11, rax
0x2d42:	nop	word ptr [rax + rax]
0x2d48:	cmp	r11, rbp
0x2d4b:	setne	r12b
0x2d4f:	cmp	r11, -1
0x2d53:	jne	0x2d62


0x2d55:	mov	rax, qword ptr [rsp + 0x10]
0x2d5a:	cmp	byte ptr [rax + rbp], 0
0x2d5e:	setne	r12b
0x2d62:	test	r12b, r12b
0x2d65:	je	0x33c0


0x2d62:	test	r12b, r12b
0x2d65:	je	0x33c0


0x33c0:	cmp	dword ptr [rsp + 8], 2
0x33c5:	movzx	ebx, byte ptr [rsp + 0xf]
0x33ca:	mov	r12d, r8d
0x33cd:	mov	rbp, r11
0x33d0:	sete	dl
0x33d3:	mov	eax, ebx
0x33d5:	test	r15, r15
0x33d8:	sete	cl
0x33db:	and	eax, edx
0x33dd:	and	al, cl
0x33df:	jne	0x3e46


0x2d6b:	cmp	dword ptr [rsp + 8], 2
0x2d70:	mov	rdi, qword ptr [rsp + 0x10]
0x2d75:	lea	r9, [rdi + rbp]
0x2d79:	setne	al
0x2d7c:	and	al, byte ptr [rsp + 0xd]
0x2d80:	mov	r10d, eax
0x2d83:	je	0x2e30


0x33e5:	mov	eax, ebx
0x33e7:	xor	eax, 1
0x33ea:	and	dl, al
0x33ec:	je	0x3d5c


0x3e46:	mov	dword ptr [rsp + 8], 2
0x3e4e:	jmp	0x37e9


0x2e30:	movzx	ebx, byte ptr [r9]
0x2e34:	cmp	bl, 0x7e
0x2e37:	ja	0x3158


0x2d89:	mov	rax, qword ptr [rsp + 0x18]
0x2d8e:	test	rax, rax
0x2d91:	je	0x31c0


0x3d5c:	mov	rbx, qword ptr [rsp + 0x48]
0x3d61:	test	rbx, rbx
0x3d64:	je	0x3d92


0x33f2:	cmp	byte ptr [rsp + 0x7c], 0
0x33f7:	je	0x3d5a


0x37e9:	cmp	byte ptr [rsp + 0xd], 0
0x37ee:	je	0x3800


0x2e3d:	lea	rcx, [rip + 0x2e88]
0x2e44:	movzx	edx, bl
0x2e47:	movsxd	rax, dword ptr [rcx + rdx*4]
0x2e4b:	add	rax, rcx
0x2e4e:	jmp	rax


0x3158:	cmp	qword ptr [rsp + 0x58], 1
0x315e:	jne	0x3508


0x31c0:	movzx	ebx, byte ptr [r9]
0x31c4:	cmp	bl, 0x7e
0x31c7:	ja	0x3150


0x2d97:	cmp	r11, -1
0x2d9b:	lea	rbx, [rbp + rax]
0x2da0:	jne	0x2dd0


0x3d92:	cmp	r13, r15
0x3d95:	jbe	0x3839


0x3d66:	test	al, al
0x3d68:	je	0x3d92


0x3d5a:	mov	eax, edx
0x3d5c:	mov	rbx, qword ptr [rsp + 0x48]
0x3d61:	test	rbx, rbx
0x3d64:	je	0x3d92


0x33fd:	cmp	byte ptr [rsp + 0xe], 0
0x3402:	jne	0x3dfd


0x37f0:	test	al, al
0x37f2:	mov	eax, 4
0x37f7:	cmove	eax, dword ptr [rsp + 8]
0x37fc:	mov	dword ptr [rsp + 8], eax


0x3164:	mov	qword ptr [rsp + 0x38], r11
0x3169:	mov	byte ptr [rsp + 0x30], r8b
0x316e:	mov	byte ptr [rsp + 0x28], r10b
0x3173:	call	0x16d0


0x3508:	lea	rax, [rsp + 0xa0]
0x3510:	cmp	r11, -1
0x3514:	mov	qword ptr [rsp + 0xa0], 0
0x3520:	mov	qword ptr [rsp + 0x28], rax
0x3525:	jne	0x3554


0x31c9:	lea	rcx, [rip + 0x2cf8]
0x31d0:	movzx	edx, bl
0x31d3:	movsxd	rax, dword ptr [rcx + rdx*4]
0x31d7:	add	rax, rcx
0x31da:	jmp	rax


0x3150:	xor	r10d, r10d
0x3153:	nop	dword ptr [rax + rax]
0x3158:	cmp	qword ptr [rsp + 0x58], 1
0x315e:	jne	0x3508


0x2da2:	cmp	rax, 1
0x2da6:	jbe	0x2dd0


0x2dd0:	cmp	rbx, r11
0x2dd3:	mov	byte ptr [rsp + 0x28], r10b
0x2dd8:	ja	0x3390


0x3d9b:	mov	byte ptr [r14 + r15], 0
0x3da0:	jmp	0x3839


0x3d6a:	movzx	ecx, byte ptr [rbx]
0x3d6d:	mov	rax, rbx
0x3d70:	test	cl, cl
0x3d72:	je	0x3d92


0x3408:	test	r13, r13
0x340b:	sete	al
0x340e:	cmp	qword ptr [rsp + 0x50], 0
0x3414:	setne	dl
0x3417:	and	al, dl
0x3419:	je	0x3e3c


0x3527:	mov	rdi, qword ptr [rsp + 0x10]
0x352c:	mov	byte ptr [rsp + 0x40], r8b
0x3531:	mov	byte ptr [rsp + 0x38], r10b
0x3536:	mov	qword ptr [rsp + 0x30], r9
0x353b:	call	0x14b0


0x3554:	lea	rax, [rsp + 0x9c]
0x355c:	xor	ecx, ecx
0x355e:	mov	byte ptr [rsp + 0x7e], bl
0x3562:	mov	byte ptr [rsp + 0x7d], r8b
0x3567:	mov	rbx, rcx
0x356a:	mov	qword ptr [rsp + 0x88], r9
0x3572:	mov	qword ptr [rsp + 0x38], rax
0x3577:	mov	byte ptr [rsp + 0x7f], r10b
0x357c:	mov	qword ptr [rsp + 0x80], r15
0x3584:	mov	qword ptr [rsp + 0x40], r14
0x3589:	mov	qword ptr [rsp + 0x70], r13
0x358e:	mov	qword ptr [rsp + 0x30], r11
0x3593:	mov	rax, qword ptr [rsp + 0x10]
0x3598:	lea	r14, [rbp + rbx]
0x359d:	mov	rdx, qword ptr [rsp + 0x30]
0x35a2:	mov	rcx, qword ptr [rsp + 0x28]
0x35a7:	mov	rdi, qword ptr [rsp + 0x38]
0x35ac:	lea	r13, [rax + r14]
0x35b0:	sub	rdx, r14
0x35b3:	mov	rsi, r13
0x35b6:	call	0x55f0


0x2da8:	mov	byte ptr [rsp + 0x38], r8b
0x2dad:	mov	byte ptr [rsp + 0x30], r10b
0x2db2:	mov	qword ptr [rsp + 0x28], r9
0x2db7:	call	0x14b0


0x2dde:	mov	rdx, qword ptr [rsp + 0x18]
0x2de3:	mov	rsi, qword ptr [rsp + 0x48]
0x2de8:	mov	rdi, r9
0x2deb:	mov	qword ptr [rsp + 0x40], r11
0x2df0:	mov	byte ptr [rsp + 0x38], r8b
0x2df5:	mov	qword ptr [rsp + 0x30], r9
0x2dfa:	call	0x1570


0x3390:	xor	r10d, r10d
0x3393:	jmp	0x2e30


0x3d74:	mov	rdx, r15
0x3d77:	sub	rax, r15
0x3d7a:	cmp	r13, rdx
0x3d7d:	jbe	0x3d83


0x3e3c:	movzx	eax, byte ptr [rsp + 0x7c]
0x3e41:	jmp	0x3d5c


0x341f:	mov	r13, qword ptr [rsp + 0x50]
0x3424:	lea	rbx, [rip + 0x2822]
0x342b:	mov	byte ptr [r14], 0x27
0x342f:	mov	dword ptr [rsp + 8], 2
0x3437:	mov	r15d, 1
0x343d:	mov	qword ptr [rsp + 0x18], 1
0x3446:	mov	byte ptr [rsp + 0xf], 0
0x344b:	mov	qword ptr [rsp + 0x48], rbx
0x3450:	mov	byte ptr [rsp + 0x7c], al
0x3454:	jmp	0x2d33


0x3d83:	add	rdx, 1
0x3d87:	movzx	ecx, byte ptr [rax + rdx]
0x3d8b:	test	cl, cl
0x3d8d:	jne	0x3d7a


0x3d7f:	mov	byte ptr [r14 + rdx], cl
0x3d83:	add	rdx, 1
0x3d87:	movzx	ecx, byte ptr [rax + rdx]
0x3d8b:	test	cl, cl
0x3d8d:	jne	0x3d7a


0x2d33:	xor	r11d, r11d
0x2d36:	mov	rax, rbp
0x2d39:	mov	r8d, r12d
0x2d3c:	mov	rbp, r11
0x2d3f:	mov	r11, rax
0x2d42:	nop	word ptr [rax + rax]
0x2d48:	cmp	r11, rbp
0x2d4b:	setne	r12b
0x2d4f:	cmp	r11, -1
0x2d53:	jne	0x2d62


0x3d8f:	mov	r15, rdx
0x3d92:	cmp	r13, r15
0x3d95:	jbe	0x3839


0x3d7a:	cmp	r13, rdx
0x3d7d:	jbe	0x3d83


0x2dff:	test	eax, eax
0x2e01:	mov	r9, qword ptr [rsp + 0x30]
0x2e06:	movzx	r8d, byte ptr [rsp + 0x38]
0x2e0c:	mov	r11, qword ptr [rsp + 0x40]
0x2e11:	jne	0x3390


0x2e17:	cmp	byte ptr [rsp + 0xf], 0
0x2e1c:	movzx	r10d, byte ptr [rsp + 0x28]
0x2e22:	jne	0x3da5


0x3da5:	cmp	dword ptr [rsp + 8], 2
0x3daa:	movzx	ebx, byte ptr [rsp + 0xf]
0x3daf:	mov	rbp, r11
0x3db2:	sete	al
0x3db5:	mov	byte ptr [rsp + 0xd], bl
0x3db9:	jmp	0x37e9


0x35bb:	test	rax, rax
0x35be:	mov	r15, rax
0x35c1:	je	0x3611


0x3611:	mov	edx, r12d
0x3614:	mov	rdi, rbx
0x3617:	movzx	r8d, byte ptr [rsp + 0x7d]
0x361d:	xor	edx, 1
0x3620:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3625:	movzx	r10d, byte ptr [rsp + 0x7f]
0x362b:	and	dl, byte ptr [rsp + 0xd]
0x362f:	mov	r15, qword ptr [rsp + 0x80]
0x3637:	mov	r14, qword ptr [rsp + 0x40]
0x363c:	mov	r13, qword ptr [rsp + 0x70]
0x3641:	mov	r11, qword ptr [rsp + 0x30]
0x3646:	cmp	rdi, 1
0x364a:	jbe	0x3c4b


0x35c3:	cmp	rax, -1
0x35c7:	je	0x3be5


0x3c4b:	mov	eax, edx
0x3c4d:	jmp	0x31a7


0x3650:	mov	rcx, rdi
0x3653:	xor	esi, esi
0x3655:	movzx	r9d, byte ptr [rsp + 0xf]
0x365b:	add	rcx, rbp
0x365e:	mov	rdi, qword ptr [rsp + 0x10]
0x3663:	jmp	0x371e


0x3be5:	mov	rdi, rbx
0x3be8:	movzx	r8d, byte ptr [rsp + 0x7d]
0x3bee:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3bf3:	movzx	r10d, byte ptr [rsp + 0x7f]
0x3bf9:	mov	r15, qword ptr [rsp + 0x80]
0x3c01:	xor	r12d, r12d
0x3c04:	mov	r14, qword ptr [rsp + 0x40]
0x3c09:	mov	r13, qword ptr [rsp + 0x70]
0x3c0e:	mov	r11, qword ptr [rsp + 0x30]
0x3c13:	movzx	edx, byte ptr [rsp + 0xd]
0x3c18:	jmp	0x3646


0x35cd:	cmp	rax, -2
0x35d1:	je	0x3b71


0x31a7:	test	al, al
0x31a9:	jne	0x3b41


0x371e:	test	dl, dl
0x3720:	jne	0x3670


0x3646:	cmp	rdi, 1
0x364a:	jbe	0x3c4b


0x3b71:	mov	r11, qword ptr [rsp + 0x30]
0x3b76:	mov	rsi, r14
0x3b79:	mov	rcx, r13
0x3b7c:	mov	rax, rbx
0x3b7f:	mov	rdi, rbx
0x3b82:	movzx	r8d, byte ptr [rsp + 0x7d]
0x3b88:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3b8d:	mov	r9, qword ptr [rsp + 0x88]
0x3b95:	cmp	rsi, r11
0x3b98:	movzx	r10d, byte ptr [rsp + 0x7f]
0x3b9e:	mov	r15, qword ptr [rsp + 0x80]
0x3ba6:	mov	r14, qword ptr [rsp + 0x40]
0x3bab:	mov	r13, qword ptr [rsp + 0x70]
0x3bb0:	jae	0x3bd8


0x35d7:	cmp	dword ptr [rsp + 8], 2
0x35dc:	sete	al
0x35df:	and	al, byte ptr [rsp + 0xf]
0x35e3:	jne	0x3780


0x31af:	cmp	dword ptr [rsp + 8], 2
0x31b4:	sete	dl
0x31b7:	jmp	0x2e88


0x3b41:	movzx	edx, byte ptr [rsp + 0xd]
0x3b46:	xor	r12d, r12d
0x3b49:	jmp	0x3650


0x3726:	mov	eax, esi
0x3728:	xor	eax, 1
0x372b:	and	eax, r8d
0x372e:	test	r10b, r10b
0x3731:	je	0x3741


0x3670:	cmp	dword ptr [rsp + 8], 2
0x3675:	sete	al
0x3678:	test	r9b, r9b
0x367b:	jne	0x3b30


0x3bb2:	cmp	byte ptr [rcx], 0
0x3bb5:	jne	0x3bc7


0x3bd8:	movzx	edx, byte ptr [rsp + 0xd]
0x3bdd:	xor	r12d, r12d
0x3be0:	jmp	0x3646


0x35e9:	mov	edi, dword ptr [rsp + 0x9c]
0x35f0:	call	0x16c0


0x3780:	cmp	r15, 1
0x3784:	je	0x35e9


0x2e88:	cmp	byte ptr [rsp + 0xd], 1
0x2e8d:	jne	0x2fa2


0x3741:	add	rbp, 1
0x3745:	cmp	rbp, rcx
0x3748:	jae	0x2ecc


0x3733:	cmp	r13, r15
0x3736:	jbe	0x373d


0x3681:	mov	esi, r8d
0x3684:	xor	esi, 1
0x3687:	and	al, sil
0x368a:	je	0x36bb


0x3b30:	movzx	ebx, byte ptr [rsp + 0xf]
0x3b35:	mov	rbp, r11
0x3b38:	mov	byte ptr [rsp + 0xd], bl
0x3b3c:	jmp	0x37e9


0x3bb7:	jmp	0x3bd8


0x3bc7:	add	rax, 1
0x3bcb:	lea	rdx, [rbp + rax]
0x3bd0:	cmp	r11, rdx
0x3bd3:	ja	0x3bc0


0x378a:	mov	rdi, qword ptr [rsp + 0x10]
0x378f:	lea	rcx, [rdi + r15]
0x3793:	lea	rdx, [rdi + r14 + 1]
0x3798:	lea	r8, [rcx + r14]
0x379c:	jmp	0x37ad


0x2e93:	test	dl, dl
0x2e95:	jne	0x2fa2


0x2fa2:	cmp	byte ptr [rsp + 0xf], 0
0x2fa7:	jne	0x2e9b


0x374e:	test	al, al
0x3750:	je	0x3b4e


0x2ecc:	test	al, al
0x2ece:	je	0x2ef0


0x373d:	add	r15, 1
0x3741:	add	rbp, 1
0x3745:	cmp	rbp, rcx
0x3748:	jae	0x2ecc


0x3738:	mov	byte ptr [r14 + r15], 0x5c
0x373d:	add	r15, 1
0x3741:	add	rbp, 1
0x3745:	cmp	rbp, rcx
0x3748:	jae	0x2ecc


0x36bb:	cmp	r13, r15
0x36be:	jbe	0x36c5


0x368c:	cmp	r13, r15
0x368f:	jbe	0x3696


0x3bd5:	mov	rdi, rax
0x3bd8:	movzx	edx, byte ptr [rsp + 0xd]
0x3bdd:	xor	r12d, r12d
0x3be0:	jmp	0x3646


0x3bc0:	cmp	byte ptr [r9 + rax], 0
0x3bc5:	je	0x3bd5


0x37ad:	movzx	ecx, byte ptr [rdx]
0x37b0:	sub	ecx, 0x5b
0x37b3:	cmp	cl, 0x21
0x37b6:	ja	0x37a0


0x2e9b:	mov	rsi, qword ptr [rsp + 0x20]
0x2ea0:	test	rsi, rsi
0x2ea3:	je	0x2eb9


0x2fad:	jmp	0x2eb9


0x3b4e:	xor	r10d, r10d
0x3b51:	jmp	0x370d


0x3756:	cmp	r13, r15
0x3759:	jbe	0x3760


0x2ef0:	cmp	r15, r13
0x2ef3:	jae	0x2ef9


0x2ed0:	cmp	r13, r15
0x2ed3:	jbe	0x2eda


0x36c5:	lea	rax, [r15 + 1]
0x36c9:	cmp	r13, rax
0x36cc:	jbe	0x36db


0x36c0:	mov	byte ptr [r14 + r15], 0x5c
0x36c5:	lea	rax, [r15 + 1]
0x36c9:	cmp	r13, rax
0x36cc:	jbe	0x36db


0x3696:	lea	rsi, [r15 + 1]
0x369a:	cmp	r13, rsi
0x369d:	jbe	0x36a5


0x3691:	mov	byte ptr [r14 + r15], 0x27
0x3696:	lea	rsi, [r15 + 1]
0x369a:	cmp	r13, rsi
0x369d:	jbe	0x36a5


0x37b8:	mov	esi, 1
0x37bd:	shl	rsi, cl
0x37c0:	mov	rcx, rsi
0x37c3:	movabs	rsi, 0x20000002b
0x37cd:	test	rcx, rsi
0x37d0:	je	0x37a0


0x37a0:	add	rdx, 1
0x37a4:	cmp	r8, rdx
0x37a7:	je	0x35e9


0x2eb9:	test	r10b, r10b
0x2ebc:	jne	0x3003


0x2ea5:	mov	edx, ebx
0x2ea7:	shr	dl, 5
0x2eaa:	movzx	edx, dl
0x2ead:	mov	edx, dword ptr [rsi + rdx*4]
0x2eb0:	bt	edx, ebx
0x2eb3:	jb	0x3003


0x370d:	cmp	r13, r15
0x3710:	jbe	0x3716


0x3760:	lea	rax, [r15 + 1]
0x3764:	cmp	r13, rax
0x3767:	jbe	0x376f


0x375b:	mov	byte ptr [r14 + r15], 0x27
0x3760:	lea	rax, [r15 + 1]
0x3764:	cmp	r13, rax
0x3767:	jbe	0x376f


0x2ef5:	mov	byte ptr [r14 + r15], bl
0x2ef9:	movzx	edi, byte ptr [rsp + 0xe]
0x2efe:	add	r15, 1
0x2f02:	mov	eax, 0
0x2f07:	test	r12b, r12b
0x2f0a:	cmove	edi, eax
0x2f0d:	mov	byte ptr [rsp + 0xe], dil
0x2f12:	jmp	0x2d48


0x2ef9:	movzx	edi, byte ptr [rsp + 0xe]
0x2efe:	add	r15, 1
0x2f02:	mov	eax, 0
0x2f07:	test	r12b, r12b
0x2f0a:	cmove	edi, eax
0x2f0d:	mov	byte ptr [rsp + 0xe], dil
0x2f12:	jmp	0x2d48


0x2eda:	lea	rax, [r15 + 1]
0x2ede:	cmp	r13, rax
0x2ee1:	jbe	0x2ee9


0x2ed5:	mov	byte ptr [r14 + r15], 0x27
0x2eda:	lea	rax, [r15 + 1]
0x2ede:	cmp	r13, rax
0x2ee1:	jbe	0x2ee9


0x36db:	lea	rax, [r15 + 2]
0x36df:	cmp	r13, rax
0x36e2:	jbe	0x36f4


0x36ce:	mov	eax, ebx
0x36d0:	shr	al, 6
0x36d3:	add	eax, 0x30
0x36d6:	mov	byte ptr [r14 + r15 + 1], al
0x36db:	lea	rax, [r15 + 2]
0x36df:	cmp	r13, rax
0x36e2:	jbe	0x36f4


0x36a5:	lea	rsi, [r15 + 2]
0x36a9:	cmp	r13, rsi
0x36ac:	jbe	0x36b4


0x369f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x36a5:	lea	rsi, [r15 + 2]
0x36a9:	cmp	r13, rsi
0x36ac:	jbe	0x36b4


0x37d2:	mov	r14, qword ptr [rsp + 0x40]
0x37d7:	mov	r13, qword ptr [rsp + 0x70]
0x37dc:	mov	rbp, qword ptr [rsp + 0x30]
0x37e1:	mov	dword ptr [rsp + 8], 2
0x37e9:	cmp	byte ptr [rsp + 0xd], 0
0x37ee:	je	0x3800


0x2ec2:	xor	eax, 1
0x2ec5:	add	rbp, 1
0x2ec9:	and	eax, r8d
0x2ecc:	test	al, al
0x2ece:	je	0x2ef0


0x3003:	cmp	dword ptr [rsp + 8], 2
0x3008:	sete	dl
0x300b:	cmp	byte ptr [rsp + 0xf], 0
0x3010:	mov	eax, edx
0x3012:	jne	0x3868


0x3716:	movzx	ebx, byte ptr [rdi + rbp]
0x371a:	add	r15, 1
0x371e:	test	dl, dl
0x3720:	jne	0x3670


0x3712:	mov	byte ptr [r14 + r15], bl
0x3716:	movzx	ebx, byte ptr [rdi + rbp]
0x371a:	add	r15, 1
0x371e:	test	dl, dl
0x3720:	jne	0x3670


0x376f:	add	r15, 2
0x3773:	xor	r10d, r10d
0x3776:	xor	r8d, r8d
0x3779:	jmp	0x370d


0x3769:	mov	byte ptr [r14 + r15 + 1], 0x27
0x376f:	add	r15, 2
0x3773:	xor	r10d, r10d
0x3776:	xor	r8d, r8d
0x3779:	jmp	0x370d


0x2d48:	cmp	r11, rbp
0x2d4b:	setne	r12b
0x2d4f:	cmp	r11, -1
0x2d53:	jne	0x2d62


0x2ee9:	add	r15, 2
0x2eed:	xor	r8d, r8d
0x2ef0:	cmp	r15, r13
0x2ef3:	jae	0x2ef9


0x2ee3:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2ee9:	add	r15, 2
0x2eed:	xor	r8d, r8d
0x2ef0:	cmp	r15, r13
0x2ef3:	jae	0x2ef9


0x36f4:	and	ebx, 7
0x36f7:	add	rbp, 1
0x36fb:	add	r15, 3
0x36ff:	add	ebx, 0x30
0x3702:	cmp	rbp, rcx
0x3705:	jae	0x2ef0


0x36e4:	mov	eax, ebx
0x36e6:	shr	al, 3
0x36e9:	and	eax, 7
0x36ec:	add	eax, 0x30
0x36ef:	mov	byte ptr [r14 + r15 + 2], al
0x36f4:	and	ebx, 7
0x36f7:	add	rbp, 1
0x36fb:	add	r15, 3
0x36ff:	add	ebx, 0x30
0x3702:	cmp	rbp, rcx
0x3705:	jae	0x2ef0


0x36b4:	add	r15, 3
0x36b8:	mov	r8d, eax
0x36bb:	cmp	r13, r15
0x36be:	jbe	0x36c5


0x36ae:	mov	byte ptr [r14 + r15 + 2], 0x27
0x36b4:	add	r15, 3
0x36b8:	mov	r8d, eax
0x36bb:	cmp	r13, r15
0x36be:	jbe	0x36c5


0x3018:	mov	eax, r8d
0x301b:	xor	eax, 1
0x301e:	and	al, dl
0x3020:	je	0x3051


0x3868:	mov	rbp, r11
0x386b:	jmp	0x37e9


0x370b:	mov	esi, edx
0x370d:	cmp	r13, r15
0x3710:	jbe	0x3716


0x3051:	cmp	r13, r15
0x3054:	jbe	0x305b


0x3022:	cmp	r13, r15
0x3025:	jbe	0x302c


0x305b:	add	r15, 1
0x305f:	add	rbp, 1
0x3063:	jmp	0x2ef0


0x3056:	mov	byte ptr [r14 + r15], 0x5c
0x305b:	add	r15, 1
0x305f:	add	rbp, 1
0x3063:	jmp	0x2ef0


0x302c:	lea	rdx, [r15 + 1]
0x3030:	cmp	r13, rdx
0x3033:	jbe	0x303b


0x3027:	mov	byte ptr [r14 + r15], 0x27
0x302c:	lea	rdx, [r15 + 1]
0x3030:	cmp	r13, rdx
0x3033:	jbe	0x303b


0x303b:	lea	rdx, [r15 + 2]
0x303f:	cmp	r13, rdx
0x3042:	jbe	0x304a


0x3035:	mov	byte ptr [r14 + r15 + 1], 0x24
0x303b:	lea	rdx, [r15 + 2]
0x303f:	cmp	r13, rdx
0x3042:	jbe	0x304a


0x304a:	add	r15, 3
0x304e:	mov	r8d, eax
0x3051:	cmp	r13, r15
0x3054:	jbe	0x305b


0x3044:	mov	byte ptr [r14 + r15 + 2], 0x27
0x304a:	add	r15, 3
0x304e:	mov	r8d, eax
0x3051:	cmp	r13, r15
0x3054:	jbe	0x305b


0x35f5:	mov	rdi, qword ptr [rsp + 0x28]
0x35fa:	test	eax, eax
0x35fc:	mov	eax, 0
0x3601:	cmove	r12d, eax
0x3605:	add	rbx, r15
0x3608:	call	0x16b0


0x360d:	test	eax, eax
0x360f:	je	0x3593


0x3593:	mov	rax, qword ptr [rsp + 0x10]
0x3598:	lea	r14, [rbp + rbx]
0x359d:	mov	rdx, qword ptr [rsp + 0x30]
0x35a2:	mov	rcx, qword ptr [rsp + 0x28]
0x35a7:	mov	rdi, qword ptr [rsp + 0x38]
0x35ac:	lea	r13, [rax + r14]
0x35b0:	sub	rdx, r14
0x35b3:	mov	rsi, r13
0x35b6:	call	0x55f0


0x2dbc:	movzx	r8d, byte ptr [rsp + 0x38]
0x2dc2:	movzx	r10d, byte ptr [rsp + 0x30]
0x2dc8:	mov	r11, rax
0x2dcb:	mov	r9, qword ptr [rsp + 0x28]
0x2dd0:	cmp	rbx, r11
0x2dd3:	mov	byte ptr [rsp + 0x28], r10b
0x2dd8:	ja	0x3390


0x3540:	movzx	r8d, byte ptr [rsp + 0x40]
0x3546:	movzx	r10d, byte ptr [rsp + 0x38]
0x354c:	mov	r11, rax
0x354f:	mov	r9, qword ptr [rsp + 0x30]
0x3554:	lea	rax, [rsp + 0x9c]
0x355c:	xor	ecx, ecx
0x355e:	mov	byte ptr [rsp + 0x7e], bl
0x3562:	mov	byte ptr [rsp + 0x7d], r8b
0x3567:	mov	rbx, rcx
0x356a:	mov	qword ptr [rsp + 0x88], r9
0x3572:	mov	qword ptr [rsp + 0x38], rax
0x3577:	mov	byte ptr [rsp + 0x7f], r10b
0x357c:	mov	qword ptr [rsp + 0x80], r15
0x3584:	mov	qword ptr [rsp + 0x40], r14
0x3589:	mov	qword ptr [rsp + 0x70], r13
0x358e:	mov	qword ptr [rsp + 0x30], r11
0x3593:	mov	rax, qword ptr [rsp + 0x10]
0x3598:	lea	r14, [rbp + rbx]
0x359d:	mov	rdx, qword ptr [rsp + 0x30]
0x35a2:	mov	rcx, qword ptr [rsp + 0x28]
0x35a7:	mov	rdi, qword ptr [rsp + 0x38]
0x35ac:	lea	r13, [rax + r14]
0x35b0:	sub	rdx, r14
0x35b3:	mov	rsi, r13
0x35b6:	call	0x55f0


0x3178:	mov	rcx, qword ptr [rax]
0x317b:	movzx	edx, bl
0x317e:	movzx	r10d, byte ptr [rsp + 0x28]
0x3184:	movzx	r8d, byte ptr [rsp + 0x30]
0x318a:	mov	r11, qword ptr [rsp + 0x38]
0x318f:	mov	edi, 1
0x3194:	movzx	eax, word ptr [rcx + rdx*2]
0x3198:	and	ax, 0x4000
0x319c:	setne	r12b
0x31a0:	sete	al
0x31a3:	and	al, byte ptr [rsp + 0xd]
0x31a7:	test	al, al
0x31a9:	jne	0x3b41


0x2e50:	xor	r10d, r10d
0x2e53:	cmp	r11, 1
0x2e57:	setne	al
0x2e5a:	cmp	r11, -1
0x2e5e:	jne	0x2e6c


0x2e60:	mov	rax, qword ptr [rsp + 0x10]
0x2e65:	cmp	byte ptr [rax + 1], 0
0x2e69:	setne	al
0x2e6c:	cmp	dword ptr [rsp + 8], 2
0x2e71:	sete	dl
0x2e74:	test	al, al
0x2e76:	je	0x30c8


0x2e6c:	cmp	dword ptr [rsp + 8], 2
0x2e71:	sete	dl
0x2e74:	test	al, al
0x2e76:	je	0x30c8


0x30c8:	test	rbp, rbp
0x30cb:	jne	0x2e7c


0x2e7c:	xor	r12d, r12d
0x2e7f:	xor	eax, eax
0x2e81:	nop	dword ptr [rax]
0x2e88:	cmp	byte ptr [rsp + 0xd], 1
0x2e8d:	jne	0x2fa2


0x30d1:	movzx	eax, byte ptr [rsp + 0xf]
0x30d6:	and	al, dl
0x30d8:	je	0x2e88


0x30de:	mov	rbp, r11
0x30e1:	mov	dword ptr [rsp + 8], 2
0x30e9:	jmp	0x37e9


0x34e8:	cmp	byte ptr [rsp + 0xf], 0
0x34ed:	jne	0x3d10


0x2f30:	cmp	eax, 5
0x2f33:	je	0x34a8


0x34f3:	xor	r12d, r12d
0x34f6:	xor	eax, eax
0x34f8:	mov	ebx, 0x3f
0x34fd:	jmp	0x2eb9


0x3d10:	mov	rbp, r11
0x3d13:	movzx	eax, byte ptr [rsp + 0xf]
0x3d18:	jmp	0x37e9


0x34a8:	test	byte ptr [rsp + 0x78], 4
0x34ad:	je	0x34d0


0x2f39:	cmp	eax, 2
0x2f3c:	mov	ebx, 0x3f
0x2f41:	sete	dl
0x2f44:	xor	r12d, r12d
0x2f47:	xor	eax, eax
0x2f49:	jmp	0x2e88


0x34d0:	xor	edx, edx
0x34d2:	xor	r12d, r12d
0x34d5:	xor	eax, eax
0x34d7:	mov	ebx, 0x3f
0x34dc:	jmp	0x2e88


0x34af:	lea	rcx, [rbp + 2]
0x34b3:	cmp	rcx, r11
0x34b6:	jae	0x34d0


0x34b8:	mov	rax, qword ptr [rsp + 0x10]
0x34bd:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x34c2:	je	0x3c52


0x3c52:	movzx	ebx, byte ptr [rax + rcx]
0x3c56:	cmp	bl, 0x3e
0x3c59:	ja	0x34d0


0x3c5f:	movabs	rax, 0x7000a38200000000
0x3c69:	bt	rax, rbx
0x3c6d:	jae	0x34d0


0x3c73:	cmp	byte ptr [rsp + 0xf], 0
0x3c78:	jne	0x3e62


0x3c7e:	cmp	r13, r15
0x3c81:	jbe	0x3c88


0x3e62:	mov	rbp, r11
0x3e65:	jmp	0x3800


0x3c88:	lea	rax, [r15 + 1]
0x3c8c:	cmp	r13, rax
0x3c8f:	jbe	0x3c97


0x3c83:	mov	byte ptr [r14 + r15], 0x3f
0x3c88:	lea	rax, [r15 + 1]
0x3c8c:	cmp	r13, rax
0x3c8f:	jbe	0x3c97


0x3c97:	lea	rax, [r15 + 2]
0x3c9b:	cmp	r13, rax
0x3c9e:	jbe	0x3ca6


0x3c91:	mov	byte ptr [r14 + r15 + 1], 0x22
0x3c97:	lea	rax, [r15 + 2]
0x3c9b:	cmp	r13, rax
0x3c9e:	jbe	0x3ca6


0x3ca6:	lea	rax, [r15 + 3]
0x3caa:	cmp	r13, rax
0x3cad:	jbe	0x3cb5


0x3ca0:	mov	byte ptr [r14 + r15 + 2], 0x22
0x3ca6:	lea	rax, [r15 + 3]
0x3caa:	cmp	r13, rax
0x3cad:	jbe	0x3cb5


0x3cb5:	add	r15, 4
0x3cb9:	xor	edx, edx
0x3cbb:	xor	r12d, r12d
0x3cbe:	xor	eax, eax
0x3cc0:	mov	rbp, rcx
0x3cc3:	jmp	0x2e88


0x3caf:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x3cb5:	add	r15, 4
0x3cb9:	xor	edx, edx
0x3cbb:	xor	r12d, r12d
0x3cbe:	xor	eax, eax
0x3cc0:	mov	rbp, rcx
0x3cc3:	jmp	0x2e88


0x3460:	cmp	byte ptr [rsp + 0xf], 0
0x3465:	jne	0x3d10


0x2f5e:	mov	byte ptr [rsp + 0x7c], r12b
0x2f63:	xor	edx, edx
0x2f65:	xor	eax, eax
0x2f67:	mov	ebx, 0x27
0x2f6c:	jmp	0x2e88


0x346b:	test	r13, r13
0x346e:	je	0x3870


0x3870:	cmp	r13, r15
0x3873:	jbe	0x387a


0x3474:	xor	edx, edx
0x3476:	cmp	qword ptr [rsp + 0x50], 0
0x347c:	jne	0x3870


0x387a:	lea	rax, [r15 + 1]
0x387e:	cmp	r13, rax
0x3881:	jbe	0x3889


0x3875:	mov	byte ptr [r14 + r15], 0x27
0x387a:	lea	rax, [r15 + 1]
0x387e:	cmp	r13, rax
0x3881:	jbe	0x3889


0x3482:	mov	qword ptr [rsp + 0x50], r13
0x3487:	add	r15, 3
0x348b:	xor	eax, eax
0x348d:	mov	byte ptr [rsp + 0x7c], r12b
0x3492:	xor	r8d, r8d
0x3495:	mov	r13, rdx
0x3498:	mov	ebx, 0x27
0x349d:	jmp	0x2eb9


0x3889:	lea	rax, [r15 + 2]
0x388d:	cmp	r13, rax
0x3890:	jbe	0x3e82


0x3883:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x3889:	lea	rax, [r15 + 2]
0x388d:	cmp	r13, rax
0x3890:	jbe	0x3e82


0x3e82:	mov	rdx, r13
0x3e85:	mov	r13, qword ptr [rsp + 0x50]
0x3e8a:	jmp	0x3482


0x3896:	mov	rdx, r13
0x3899:	mov	byte ptr [r14 + r15 + 2], 0x27
0x389f:	mov	r13, qword ptr [rsp + 0x50]
0x38a4:	jmp	0x3482


0x2f94:	cmp	byte ptr [rsp + 0xd], 0
0x2f99:	jne	0x3000


0x2f9b:	mov	ebx, edx
0x2f9d:	xor	r12d, r12d
0x2fa0:	xor	eax, eax
0x2fa2:	cmp	byte ptr [rsp + 0xf], 0
0x2fa7:	jne	0x2e9b


0x3000:	xor	r12d, r12d
0x3003:	cmp	dword ptr [rsp + 8], 2
0x3008:	sete	dl
0x300b:	cmp	byte ptr [rsp + 0xf], 0
0x3010:	mov	eax, edx
0x3012:	jne	0x3868


0x33a0:	cmp	byte ptr [rsp + 0xf], 0
0x33a5:	jne	0x3d10


0x2fd3:	cmp	byte ptr [rsp + 0xd], 0
0x2fd8:	je	0x31f0


0x33ab:	add	rbp, 1
0x33af:	mov	eax, r8d
0x33b2:	xor	r12d, r12d
0x33b5:	mov	ebx, 0x5c
0x33ba:	jmp	0x2ecc


0x31f0:	mov	edx, 0x5c
0x31f5:	mov	ebx, 0x5c
0x31fa:	jmp	0x2f94


0x2fde:	cmp	byte ptr [rsp + 0xf], 0
0x2fe3:	je	0x31f0


0x2fe9:	cmp	qword ptr [rsp + 0x18], 0
0x2fef:	jne	0x33ab


0x2ff5:	mov	ebx, 0x5c
0x2ffa:	nop	word ptr [rax + rax]
0x3000:	xor	r12d, r12d
0x3003:	cmp	dword ptr [rsp + 8], 2
0x3008:	sete	dl
0x300b:	cmp	byte ptr [rsp + 0xf], 0
0x3010:	mov	eax, edx
0x3012:	jne	0x3868


0x307b:	xor	edx, edx
0x307d:	test	byte ptr [rsp + 0x78], 1
0x3082:	je	0x2f9b


0x3243:	cmp	dword ptr [rsp + 8], 2
0x3248:	sete	dl
0x324b:	cmp	byte ptr [rsp + 0xf], 0
0x3250:	jne	0x3dea


0x3088:	add	rbp, 1
0x308c:	jmp	0x2d48


0x3256:	mov	eax, r8d
0x3259:	mov	rcx, r15
0x325c:	xor	eax, 1
0x325f:	and	al, dl
0x3261:	je	0x3290


0x3dea:	movzx	ebx, byte ptr [rsp + 0xf]
0x3def:	mov	rbp, r11
0x3df2:	mov	eax, edx
0x3df4:	mov	byte ptr [rsp + 0xd], bl
0x3df8:	jmp	0x37e9


0x3290:	cmp	r13, rcx
0x3293:	jbe	0x329a


0x3263:	cmp	r13, r15
0x3266:	jbe	0x326d


0x329a:	cmp	dword ptr [rsp + 8], 2
0x329f:	lea	r15, [rcx + 1]
0x32a3:	je	0x38a9


0x3295:	mov	byte ptr [r14 + rcx], 0x5c
0x329a:	cmp	dword ptr [rsp + 8], 2
0x329f:	lea	r15, [rcx + 1]
0x32a3:	je	0x38a9


0x326d:	lea	rcx, [r15 + 1]
0x3271:	cmp	r13, rcx
0x3274:	jbe	0x327c


0x3268:	mov	byte ptr [r14 + r15], 0x27
0x326d:	lea	rcx, [r15 + 1]
0x3271:	cmp	r13, rcx
0x3274:	jbe	0x327c


0x38a9:	mov	eax, r12d
0x38ac:	mov	ebx, 0x30
0x38b1:	xor	r12d, r12d
0x38b4:	jmp	0x2eb9


0x32a9:	lea	rax, [rbp + 1]
0x32ad:	cmp	rax, r11
0x32b0:	jae	0x32cb


0x327c:	lea	rcx, [r15 + 2]
0x3280:	cmp	r13, rcx
0x3283:	ja	0x38b9


0x3276:	mov	byte ptr [r14 + r15 + 1], 0x24
0x327c:	lea	rcx, [r15 + 2]
0x3280:	cmp	r13, rcx
0x3283:	ja	0x38b9


0x32b2:	mov	rax, qword ptr [rsp + 0x10]
0x32b7:	movzx	eax, byte ptr [rax + rbp + 1]
0x32bc:	mov	byte ptr [rsp + 0x28], al
0x32c0:	sub	eax, 0x30
0x32c3:	cmp	al, 9
0x32c5:	jbe	0x3af9


0x32cb:	mov	eax, r12d
0x32ce:	mov	ebx, 0x30
0x32d3:	xor	r12d, r12d
0x32d6:	jmp	0x2e88


0x3289:	lea	rcx, [r15 + 3]
0x328d:	mov	r8d, eax
0x3290:	cmp	r13, rcx
0x3293:	jbe	0x329a


0x38b9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x38bf:	jmp	0x3289


0x3af9:	cmp	r13, r15
0x3afc:	jbe	0x3b03


0x3b03:	lea	rax, [rcx + 2]
0x3b07:	cmp	r13, rax
0x3b0a:	jbe	0x3b12


0x3afe:	mov	byte ptr [r14 + r15], 0x30
0x3b03:	lea	rax, [rcx + 2]
0x3b07:	cmp	r13, rax
0x3b0a:	jbe	0x3b12


0x3b12:	mov	eax, r12d
0x3b15:	lea	r15, [rcx + 3]
0x3b19:	xor	r12d, r12d
0x3b1c:	mov	ebx, 0x30
0x3b21:	jmp	0x2e88


0x3b0c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x3b12:	mov	eax, r12d
0x3b15:	lea	r15, [rcx + 3]
0x3b19:	xor	r12d, r12d
0x3b1c:	mov	ebx, 0x30
0x3b21:	jmp	0x2e88


0x2f82:	cmp	dword ptr [rsp + 8], 2
0x2f87:	sete	al
0x2f8a:	and	al, byte ptr [rsp + 0xf]
0x2f8e:	jne	0x30de


0x3340:	mov	edx, 0xd
0x3345:	xor	r10d, r10d
0x3348:	mov	ebx, 0x72
0x334d:	jmp	0x2f82


0x38c4:	test	ebx, ebx
0x38c6:	jne	0x2cf3


0x38cc:	mov	byte ptr [rsp + 0xd], 1
0x38d1:	test	r13, r13
0x38d4:	jne	0x3e6a


0x38da:	lea	rax, [rip + 0x236c]
0x38e1:	mov	qword ptr [rsp + 0x50], 0
0x38ea:	mov	byte ptr [rsp + 0xe], 1
0x38ef:	mov	byte ptr [rsp + 0x7c], 0
0x38f4:	xor	r12d, r12d
0x38f7:	mov	byte ptr [rsp + 0xf], 0
0x38fc:	mov	qword ptr [rsp + 0x18], 1
0x3905:	mov	qword ptr [rsp + 0x48], rax
0x390a:	mov	r15d, 1
0x3910:	mov	dword ptr [rsp + 8], 2
0x3918:	jmp	0x2d33


0x3e6a:	mov	byte ptr [rsp + 0xe], 1
0x3e6f:	xor	eax, eax
0x3e71:	xor	r12d, r12d
0x3e74:	mov	qword ptr [rsp + 0x50], 0
0x3e7d:	jmp	0x3424


0x3424:	lea	rbx, [rip + 0x2822]
0x342b:	mov	byte ptr [r14], 0x27
0x342f:	mov	dword ptr [rsp + 8], 2
0x3437:	mov	r15d, 1
0x343d:	mov	qword ptr [rsp + 0x18], 1
0x3446:	mov	byte ptr [rsp + 0xf], 0
0x344b:	mov	qword ptr [rsp + 0x48], rbx
0x3450:	mov	byte ptr [rsp + 0x7c], al
0x3454:	jmp	0x2d33


0x3928:	test	r13, r13
0x392b:	je	0x3b56


0x3d1d:	lea	rax, [rip + 0x1f27]
0x3d24:	mov	byte ptr [rsp + 0xe], 1
0x3d29:	mov	byte ptr [rsp + 0x7c], 0
0x3d2e:	xor	r12d, r12d
0x3d31:	mov	qword ptr [rsp + 0x50], 0
0x3d3a:	mov	byte ptr [rsp + 0xf], 1
0x3d3f:	mov	byte ptr [rsp + 0xd], 1
0x3d44:	mov	qword ptr [rsp + 0x18], 1
0x3d4d:	xor	r15d, r15d
0x3d50:	mov	qword ptr [rsp + 0x48], rax
0x3d55:	jmp	0x2d33


0x3b56:	mov	qword ptr [rsp + 0x50], 0
0x3b5f:	mov	byte ptr [rsp + 0xe], 1
0x3b64:	xor	r12d, r12d
0x3b67:	mov	byte ptr [rsp + 0x7c], 0
0x3b6c:	jmp	0x394b


0x3931:	mov	byte ptr [r14], 0x22
0x3935:	mov	byte ptr [rsp + 0xe], 1
0x393a:	xor	r12d, r12d
0x393d:	mov	byte ptr [rsp + 0x7c], 0
0x3942:	mov	qword ptr [rsp + 0x50], 0
0x394b:	lea	rax, [rip + 0x22f9]
0x3952:	mov	byte ptr [rsp + 0xf], 0
0x3957:	mov	byte ptr [rsp + 0xd], 1
0x395c:	mov	qword ptr [rsp + 0x18], 1
0x3965:	mov	r15d, 1
0x396b:	mov	qword ptr [rsp + 0x48], rax
0x3970:	jmp	0x2d33


0x394b:	lea	rax, [rip + 0x22f9]
0x3952:	mov	byte ptr [rsp + 0xf], 0
0x3957:	mov	byte ptr [rsp + 0xd], 1
0x395c:	mov	qword ptr [rsp + 0x18], 1
0x3965:	mov	r15d, 1
0x396b:	mov	qword ptr [rsp + 0x48], rax
0x3970:	jmp	0x2d33


0x3975:	lea	rax, [rip + 0x22cf]
0x397c:	mov	byte ptr [rsp + 0xe], 1
0x3981:	mov	byte ptr [rsp + 0x7c], 0
0x3986:	xor	r12d, r12d
0x3989:	mov	qword ptr [rsp + 0x50], 0
0x3992:	mov	byte ptr [rsp + 0xf], 1
0x3997:	mov	byte ptr [rsp + 0xd], 1
0x399c:	mov	qword ptr [rsp + 0x18], 1
0x39a5:	xor	r15d, r15d
0x39a8:	mov	qword ptr [rsp + 0x48], rax
0x39ad:	mov	dword ptr [rsp + 8], 5
0x39b5:	jmp	0x2d33


0x39ba:	mov	byte ptr [rsp + 0xe], 1
0x39bf:	mov	byte ptr [rsp + 0x7c], 0
0x39c4:	xor	r12d, r12d
0x39c7:	mov	qword ptr [rsp + 0x50], 0
0x39d0:	mov	byte ptr [rsp + 0xf], 0
0x39d5:	xor	r15d, r15d
0x39d8:	mov	byte ptr [rsp + 0xd], 1
0x39dd:	mov	qword ptr [rsp + 0x18], 0
0x39e6:	mov	qword ptr [rsp + 0x48], 0
0x39ef:	jmp	0x2d33


0x39f4:	cmp	dword ptr [rsp + 8], 0xa
0x39f9:	je	0x3a51


0x3a51:	xor	r15d, r15d
0x3a54:	test	ebx, ebx
0x3a56:	je	0x3c1d


0x39fb:	lea	rsi, [rip + 0x224d]
0x3a02:	xor	edi, edi
0x3a04:	mov	edx, 5
0x3a09:	call	0x1490


0x3c1d:	mov	rdx, qword ptr [rsp + 0x68]
0x3c22:	movzx	eax, byte ptr [rdx]
0x3c25:	test	al, al
0x3c27:	je	0x3a5c


0x3a5c:	test	ebx, ebx
0x3a5e:	mov	rbx, qword ptr [rsp + 0x60]
0x3a63:	setne	byte ptr [rsp + 0xf]
0x3a68:	xor	r12d, r12d
0x3a6b:	mov	rdi, rbx
0x3a6e:	call	0x14b0


0x3c39:	add	r15, 1
0x3c3d:	movzx	eax, byte ptr [rdx + r15]
0x3c42:	test	al, al
0x3c44:	jne	0x3c30


0x3c35:	mov	byte ptr [r14 + r15], al
0x3c39:	add	r15, 1
0x3c3d:	movzx	eax, byte ptr [rdx + r15]
0x3c42:	test	al, al
0x3c44:	jne	0x3c30


0x3c46:	jmp	0x3a5c


0x3c30:	cmp	r13, r15
0x3c33:	jbe	0x3c39


0x3a73:	mov	qword ptr [rsp + 0x48], rbx
0x3a78:	mov	qword ptr [rsp + 0x18], rax
0x3a7d:	mov	byte ptr [rsp + 0xe], 1
0x3a82:	mov	byte ptr [rsp + 0x7c], 0
0x3a87:	mov	qword ptr [rsp + 0x50], 0
0x3a90:	mov	byte ptr [rsp + 0xd], 1
0x3a95:	jmp	0x2d33


0x3a0e:	mov	rcx, rax
0x3a11:	mov	qword ptr [rsp + 0x68], rax
0x3a16:	lea	rax, [rip + 0x2232]
0x3a1d:	cmp	rcx, rax
0x3a20:	je	0x3dbe


0x3dbe:	mov	esi, dword ptr [rsp + 8]
0x3dc2:	mov	rdi, rcx
0x3dc5:	call	0x2b70


0x3a26:	lea	rsi, [rip + 0x2220]
0x3a2d:	xor	edi, edi
0x3a2f:	mov	edx, 5
0x3a34:	call	0x1490


0x3a39:	mov	rcx, rax
0x3a3c:	mov	qword ptr [rsp + 0x60], rax
0x3a41:	lea	rax, [rip + 0x2205]
0x3a48:	cmp	rcx, rax
0x3a4b:	je	0x3dd4


0x3dd4:	mov	esi, dword ptr [rsp + 8]
0x3dd8:	mov	rdi, rcx
0x3ddb:	call	0x2b70


0x3de0:	mov	qword ptr [rsp + 0x60], rax
0x3de5:	jmp	0x3a51


0x3dca:	mov	qword ptr [rsp + 0x68], rax
0x3dcf:	jmp	0x3a26


0x3a9a:	mov	byte ptr [rsp + 0xe], 1
0x3a9f:	mov	byte ptr [rsp + 0x7c], 0
0x3aa4:	xor	r12d, r12d
0x3aa7:	mov	qword ptr [rsp + 0x50], 0
0x3ab0:	mov	byte ptr [rsp + 0xf], 0
0x3ab5:	xor	r15d, r15d
0x3ab8:	mov	byte ptr [rsp + 0xd], 0
0x3abd:	mov	qword ptr [rsp + 0x18], 0
0x3ac6:	mov	qword ptr [rsp + 0x48], 0
0x3acf:	jmp	0x2d33


0x3ad4:	mov	byte ptr [rsp + 0xe], 1
0x3ad9:	mov	byte ptr [rsp + 0x7c], 0
0x3ade:	xor	r12d, r12d
0x3ae1:	mov	qword ptr [rsp + 0x50], 0
0x3aea:	mov	byte ptr [rsp + 0xf], 1
0x3aef:	mov	byte ptr [rsp + 0xd], 1
0x3af4:	jmp	0x2d13


0x2d13:	lea	rax, [rip + 0x2f33]
0x2d1a:	mov	qword ptr [rsp + 0x18], 1
0x2d23:	xor	r15d, r15d
0x2d26:	mov	dword ptr [rsp + 8], 2
0x2d2e:	mov	qword ptr [rsp + 0x48], rax
0x2d33:	xor	r11d, r11d
0x2d36:	mov	rax, rbp
0x2d39:	mov	r8d, r12d
0x2d3c:	mov	rbp, r11
0x2d3f:	mov	r11, rax
0x2d42:	nop	word ptr [rax + rax]
0x2d48:	cmp	r11, rbp
0x2d4b:	setne	r12b
0x2d4f:	cmp	r11, -1
0x2d53:	jne	0x2d62


0x3cc8:	test	ebx, ebx
0x3cca:	je	0x3e58


0x3e58:	mov	byte ptr [rsp + 0xd], 0
0x3e5d:	jmp	0x38d1


0x3cd0:	lea	rax, [rip + 0x1f76]
0x3cd7:	mov	byte ptr [rsp + 0xe], 1
0x3cdc:	mov	byte ptr [rsp + 0x7c], 0
0x3ce1:	xor	r12d, r12d
0x3ce4:	mov	qword ptr [rsp + 0x50], 0
0x3ced:	mov	byte ptr [rsp + 0xf], 1
0x3cf2:	mov	byte ptr [rsp + 0xd], 0
0x3cf7:	mov	qword ptr [rsp + 0x18], 1
0x3d00:	xor	r15d, r15d
0x3d03:	mov	qword ptr [rsp + 0x48], rax
0x3d08:	jmp	0x2d33


0x38d1:	test	r13, r13
0x38d4:	jne	0x3e6a


0x3e94:	nop	
0x3e96:	nop	word ptr cs:[rax + rax]


0x404b:	nop	dword ptr [rax + rax]


0x4086:	nop	word ptr cs:[rax + rax]


0x40a1:	nop	dword ptr [rax + rax]
0x40a6:	nop	word ptr cs:[rax + rax]


0x40c1:	nop	dword ptr [rax + rax]
0x40c6:	nop	word ptr cs:[rax + rax]


0x4105:	nop	
0x4106:	nop	word ptr cs:[rax + rax]


0x4125:	nop	
0x4126:	nop	word ptr cs:[rax + rax]


0x41d4:	nop	
0x41d6:	nop	word ptr cs:[rax + rax]


0x42c3:	nop	dword ptr [rax]
0x42c6:	nop	word ptr cs:[rax + rax]


0x42da:	nop	word ptr [rax + rax]


0x4373:	nop	dword ptr [rax]
0x4376:	nop	word ptr cs:[rax + rax]


0x4393:	nop	dword ptr [rax]
0x4396:	nop	word ptr cs:[rax + rax]


0x43ac:	nop	dword ptr [rax]


0x43c8:	nop	dword ptr [rax + rax]


0x43e4:	nop	
0x43e6:	nop	word ptr cs:[rax + rax]


0x447e:	nop	


0x450a:	nop	word ptr [rax + rax]


0x451c:	nop	dword ptr [rax]


0x452f:	nop	


0x45c8:	nop	dword ptr [rax + rax]


0x45f1:	nop	dword ptr [rax + rax]
0x45f6:	nop	word ptr cs:[rax + rax]


0x460a:	nop	word ptr [rax + rax]


0x469e:	nop	


0x4731:	nop	dword ptr [rax + rax]
0x4736:	nop	word ptr cs:[rax + rax]


0x474c:	nop	dword ptr [rax]


0x4767:	nop	word ptr [rax + rax]


0x4783:	nop	dword ptr [rax]
0x4786:	nop	word ptr cs:[rax + rax]


0x479c:	nop	dword ptr [rax]


0x47b4:	nop	
0x47b6:	nop	word ptr cs:[rax + rax]


0x47d3:	nop	dword ptr [rax]
0x47d6:	nop	word ptr cs:[rax + rax]


0x47f8:	nop	dword ptr [rax + rax]


0x49de:	nop	


0x4c16:	nop	word ptr cs:[rax + rax]


0x5037:	nop	word ptr [rax + rax]


0x50d8:	nop	dword ptr [rax + rax]


0x51b5:	nop	
0x51b6:	nop	word ptr cs:[rax + rax]


0x525a:	nop	word ptr [rax + rax]


0x5284:	nop	
0x5286:	nop	word ptr cs:[rax + rax]


0x5292:	nop	dword ptr [rax]
0x5296:	nop	word ptr cs:[rax + rax]


0x52d6:	nop	word ptr cs:[rax + rax]


0x5304:	nop	
0x5306:	nop	word ptr cs:[rax + rax]


0x5392:	nop	dword ptr [rax]
0x5396:	nop	word ptr cs:[rax + rax]


0x53ea:	nop	word ptr [rax + rax]


0x5407:	nop	word ptr [rax + rax]


0x543e:	nop	


0x5468:	nop	dword ptr [rax + rax]


0x5483:	nop	word ptr cs:[rax + rax]
0x548d:	nop	dword ptr [rax]


0x54c5:	nop	word ptr cs:[rax + rax]
0x54cf:	nop	


0x554b:	nop	dword ptr [rax + rax]


0x55e7:	nop	word ptr [rax + rax]


0x5673:	nop	word ptr cs:[rax + rax]
0x567d:	nop	dword ptr [rax]


0x56fd:	nop	dword ptr [rax]


0x579c:	nop	dword ptr [rax]


0x5805:	nop	
0x5806:	nop	word ptr cs:[rax + rax]


0x5812:	nop	word ptr cs:[rax + rax]
0x581c:	nop	dword ptr [rax]


0x2f20:	xor	r10d, r10d
0x2f23:	mov	eax, dword ptr [rsp + 8]
0x2f27:	cmp	eax, 2
0x2f2a:	je	0x34e8


0x2f50:	xor	r10d, r10d
0x2f53:	cmp	dword ptr [rsp + 8], 2
0x2f58:	je	0x3460


0x2f78:	mov	edx, 9
0x2f7d:	mov	ebx, 0x74
0x2f82:	cmp	dword ptr [rsp + 8], 2
0x2f87:	sete	al
0x2f8a:	and	al, byte ptr [rsp + 0xf]
0x2f8e:	jne	0x30de


0x2fb8:	mov	edx, 8
0x2fbd:	mov	ebx, 0x62
0x2fc2:	jmp	0x2f94


0x2fc8:	cmp	dword ptr [rsp + 8], 2
0x2fcd:	je	0x33a0


0x3070:	cmp	byte ptr [rsp + 0xd], 0
0x3075:	jne	0x3243


0x3098:	cmp	dword ptr [rsp + 8], 2
0x309d:	sete	dl
0x30a0:	xor	eax, eax
0x30a2:	jmp	0x2e88


0x30b0:	mov	edx, 7
0x30b5:	mov	ebx, 0x61
0x30ba:	jmp	0x2f94


0x30c0:	cmp	dword ptr [rsp + 8], 2
0x30c5:	sete	dl
0x30c8:	test	rbp, rbp
0x30cb:	jne	0x2e7c


0x30f0:	cmp	dword ptr [rsp + 8], 2
0x30f5:	sete	dl
0x30f8:	xor	r12d, r12d
0x30fb:	jmp	0x30d1


0x3100:	cmp	dword ptr [rsp + 8], 2
0x3105:	mov	ebx, 0x20
0x310a:	sete	dl
0x310d:	jmp	0x30d1


0x3110:	mov	edx, 0xd
0x3115:	mov	ebx, 0x72
0x311a:	jmp	0x2f82


0x3120:	mov	edx, 0xc
0x3125:	mov	ebx, 0x66
0x312a:	jmp	0x2f94


0x3130:	mov	edx, 0xb
0x3135:	mov	ebx, 0x76
0x313a:	jmp	0x2f94


0x3140:	mov	edx, 0xa
0x3145:	mov	ebx, 0x6e
0x314a:	jmp	0x2f82


0x31e0:	xor	r10d, r10d
0x31e3:	cmp	byte ptr [rsp + 0xd], 0
0x31e8:	jne	0x2fde


0x3200:	mov	edx, 0xc
0x3205:	xor	r10d, r10d
0x3208:	mov	ebx, 0x66
0x320d:	jmp	0x2f94


0x3218:	mov	edx, 0xa
0x321d:	xor	r10d, r10d
0x3220:	mov	ebx, 0x6e
0x3225:	jmp	0x2f82


0x3230:	mov	ebx, 0x61
0x3235:	jmp	0x3000


0x3240:	xor	r10d, r10d
0x3243:	cmp	dword ptr [rsp + 8], 2
0x3248:	sete	dl
0x324b:	cmp	byte ptr [rsp + 0xf], 0
0x3250:	jne	0x3dea


0x32e0:	cmp	dword ptr [rsp + 8], 2
0x32e5:	mov	r12d, r10d
0x32e8:	sete	dl
0x32eb:	xor	r10d, r10d
0x32ee:	xor	eax, eax
0x32f0:	jmp	0x2e88


0x32f8:	cmp	dword ptr [rsp + 8], 2
0x32fd:	sete	dl
0x3300:	xor	r10d, r10d
0x3303:	jmp	0x30c8


0x3310:	cmp	dword ptr [rsp + 8], 2
0x3315:	sete	dl
0x3318:	xor	r10d, r10d
0x331b:	xor	r12d, r12d
0x331e:	jmp	0x30d1


0x3328:	cmp	dword ptr [rsp + 8], 2
0x332d:	mov	r12d, r10d
0x3330:	mov	ebx, 0x20
0x3335:	sete	dl
0x3338:	xor	r10d, r10d
0x333b:	jmp	0x30d1


0x3358:	mov	ebx, 0x76
0x335d:	jmp	0x3000


0x3368:	mov	edx, 9
0x336d:	xor	r10d, r10d
0x3370:	mov	ebx, 0x74
0x3375:	jmp	0x2f82


0x3380:	mov	ebx, 0x62
0x3385:	jmp	0x3000


0x3920:	test	ebx, ebx
0x3922:	jne	0x3d1d


0x188a:	nop	word ptr [rax + rax]


0x18d5:	nop	dword ptr [rax]


0x192c:	nop	dword ptr [rax]


0x1a5e:	nop	


0x1ae9:	nop	dword ptr [rax]


0x1b2a:	nop	word ptr [rax + rax]


0x1bab:	nop	dword ptr [rax + rax]


0x1bfa:	nop	word ptr [rax + rax]


0x1ea6:	nop	word ptr cs:[rax + rax]


0x1ef7:	nop	word ptr [rax + rax]


0x1f41:	nop	dword ptr [rax]


0x1faa:	nop	word ptr [rax + rax]


0x1fbc:	nop	dword ptr [rax]


0x207c:	nop	dword ptr [rax]


0x20c5:	nop	dword ptr [rax]


0x20e4:	nop	dword ptr [rax]


0x20ea:	nop	word ptr [rax + rax]


0x2102:	nop	word ptr [rax + rax]


0x219f:	nop	


0x21b2:	nop	word ptr [rax + rax]


0x263b:	nop	dword ptr [rax + rax]


0x2792:	nop	word ptr [rax + rax]


0x27a1:	nop	dword ptr [rax]


0x27d8:	nop	dword ptr [rax + rax]


0x27f8:	nop	dword ptr [rax + rax]


0x281f:	nop	


0x2827:	nop	word ptr [rax + rax]


0x2839:	nop	dword ptr [rax]


0x28fb:	nop	dword ptr [rax + rax]


0x2977:	nop	word ptr [rax + rax]


0x2a87:	nop	word ptr [rax + rax]


0x2abe:	nop	


0x2bac:	nop	dword ptr [rax]


0x2bfd:	nop	dword ptr [rax]


0x2e28:	nop	dword ptr [rax + rax]


0x2f17:	nop	word ptr [rax + rax]


0x2f4e:	nop	


0x2f71:	nop	dword ptr [rax]


0x2fb2:	nop	word ptr [rax + rax]


0x2fc4:	nop	dword ptr [rax]


0x3068:	nop	dword ptr [rax + rax]


0x3091:	nop	dword ptr [rax]


0x30a7:	nop	word ptr [rax + rax]


0x30bf:	nop	


0x30ee:	nop	


0x30fd:	nop	dword ptr [rax]


0x310f:	nop	


0x311f:	nop	


0x312f:	nop	


0x313f:	nop	


0x314f:	nop	


0x31bc:	nop	dword ptr [rax]


0x31dc:	nop	dword ptr [rax]


0x31ee:	nop	


0x31ff:	nop	


0x3212:	nop	word ptr [rax + rax]


0x322a:	nop	word ptr [rax + rax]


0x323a:	nop	word ptr [rax + rax]


0x32db:	nop	dword ptr [rax + rax]


0x32f5:	nop	dword ptr [rax]


0x3308:	nop	dword ptr [rax + rax]


0x3323:	nop	dword ptr [rax + rax]


0x3352:	nop	word ptr [rax + rax]


0x3362:	nop	word ptr [rax + rax]


0x337a:	nop	word ptr [rax + rax]


0x338a:	nop	word ptr [rax + rax]


0x3398:	nop	dword ptr [rax + rax]


0x33bf:	nop	


0x3459:	nop	dword ptr [rax]


0x34a2:	nop	word ptr [rax + rax]


0x34c8:	nop	dword ptr [rax + rax]


0x34e1:	nop	dword ptr [rax]


0x3502:	nop	word ptr [rax + rax]


0x3668:	nop	dword ptr [rax + rax]


0x377b:	nop	dword ptr [rax + rax]


0x379e:	nop	


0x3865:	nop	dword ptr [rax]


0x391d:	nop	dword ptr [rax]


0x3b26:	nop	word ptr cs:[rax + rax]


0x3bb9:	nop	dword ptr [rax]


0x3c2d:	nop	dword ptr [rax]


0x3d0d:	nop	dword ptr [rax]


0x401b:	nop	dword ptr [rax + rax]


0x4886:	nop	word ptr cs:[rax + rax]


0x48d8:	nop	dword ptr [rax + rax]


0x4933:	nop	dword ptr [rax + rax]


0x4979:	nop	dword ptr [rax]


0x49ad:	nop	dword ptr [rax]


0x49bf:	nop	


0x4a8a:	nop	word ptr [rax + rax]


0x4ba1:	nop	dword ptr [rax]


0x4cc6:	nop	word ptr cs:[rax + rax]


0x4d55:	nop	dword ptr [rax]


0x4d76:	nop	word ptr cs:[rax + rax]


0x4dd5:	nop	dword ptr [rax]


0x4e11:	nop	dword ptr [rax]


0x4e58:	nop	dword ptr [rax + rax]


0x4ea7:	nop	word ptr [rax + rax]


0x4f04:	nop	dword ptr [rax]


0x4f32:	nop	word ptr [rax + rax]


0x4fe6:	nop	word ptr cs:[rax + rax]


0x5049:	nop	dword ptr [rax]


0x52c2:	nop	word ptr [rax + rax]


0x5349:	nop	dword ptr [rax]


0x5374:	nop	dword ptr [rax]


0x53cd:	nop	dword ptr [rax]


0x5515:	nop	dword ptr [rax]


0x5573:	nop	dword ptr [rax + rax]


0x559f:	nop	


0x56b4:	nop	dword ptr [rax]


0x56d1:	nop	dword ptr [rax]


0x56e2:	nop	word ptr [rax + rax]


0x573a:	nop	word ptr [rax + rax]


0x5786:	nop	word ptr cs:[rax + rax]


