0xa410:	sub	rsp, 8
0xa414:	add	rsp, 8
0xa418:	ret	


0xa400:	mov	rdx, qword ptr [rip + 0x203c01]
0xa407:	xor	esi, esi
0xa409:	jmp	0x1cb0


0xa3f0:	ret	


0xa380:	push	r15
0xa382:	push	r14
0xa384:	mov	r15, rdx
0xa387:	push	r13
0xa389:	push	r12
0xa38b:	lea	r12, [rip + 0x20361e]
0xa392:	push	rbp
0xa393:	lea	rbp, [rip + 0x20361e]
0xa39a:	push	rbx
0xa39b:	mov	r13d, edi
0xa39e:	mov	r14, rsi
0xa3a1:	sub	rbp, r12
0xa3a4:	sub	rsp, 8
0xa3a8:	sar	rbp, 3
0xa3ac:	call	0x18e8


0xa370:	mov	edx, 3
0xa375:	xor	esi, esi
0xa377:	xor	eax, eax
0xa379:	jmp	0xa050


0xa310:	mov	rax, qword ptr [rdi + 8]
0xa314:	cmp	qword ptr [rdi + 0x10], rax
0xa318:	je	0xa320


0xa2d0:	test	rdi, rdi
0xa2d3:	push	rbx
0xa2d4:	mov	rbx, rdi
0xa2d7:	je	0xa2ea


0xa050:	push	r12
0xa052:	push	rbp
0xa053:	mov	ebp, edi
0xa055:	push	rbx
0xa056:	sub	rsp, 0x50
0xa05a:	mov	rax, qword ptr fs:[0x28]
0xa063:	mov	qword ptr [rsp + 0x18], rax
0xa068:	xor	eax, eax
0xa06a:	lea	rax, [rsp + 0x70]
0xa06f:	test	esi, esi
0xa071:	mov	qword ptr [rsp + 0x30], rdx
0xa076:	mov	qword ptr [rsp + 0x38], rcx
0xa07b:	mov	qword ptr [rsp + 0x40], r8
0xa080:	mov	qword ptr [rsp + 8], rax
0xa085:	lea	rax, [rsp + 0x20]
0xa08a:	mov	qword ptr [rsp + 0x48], r9
0xa08f:	mov	dword ptr [rsp], 0x10
0xa096:	mov	qword ptr [rsp + 0x10], rax
0xa09b:	je	0xa2a2


0x9fd0:	push	r12
0x9fd2:	push	rbp
0x9fd3:	push	rbx
0x9fd4:	mov	rbx, rdi
0x9fd7:	call	0x1b70


0x9f90:	push	r13
0x9f92:	push	r12
0x9f94:	push	rbp
0x9f95:	push	rbx
0x9f96:	mov	ebx, edi
0x9f98:	sub	rsp, 8
0x9f9c:	cmp	edi, 2
0x9f9f:	ja	0x9fc2


0x9f10:	push	r13
0x9f12:	push	r12
0x9f14:	or	edx, 0x90900
0x9f1a:	push	rbp
0x9f1b:	push	rbx
0x9f1c:	xor	eax, eax
0x9f1e:	mov	r12, rcx
0x9f21:	sub	rsp, 8
0x9f25:	call	0x9ea0


0x9ea0:	sub	rsp, 0x58
0x9ea4:	mov	qword ptr [rsp + 0x38], rcx
0x9ea9:	xor	ecx, ecx
0x9eab:	mov	rax, qword ptr fs:[0x28]
0x9eb4:	mov	qword ptr [rsp + 0x18], rax
0x9eb9:	xor	eax, eax
0x9ebb:	test	dl, 0x40
0x9ebe:	jne	0x9ee8


0x9e60:	sub	rsp, 8
0x9e64:	mov	edi, 0xe
0x9e69:	call	0x1bc0


0x9e20:	cmp	byte ptr [rdi + 0x1c], 0
0x9e24:	jne	0x9e55


0x9de0:	movzx	edx, byte ptr [rdi + 0x1c]
0x9de4:	mov	ecx, dword ptr [rdi + 0x14]
0x9de7:	xor	edx, 1
0x9dea:	movzx	edx, dl
0x9ded:	add	ecx, edx
0x9def:	and	ecx, 3
0x9df2:	mov	eax, ecx
0x9df4:	lea	r8, [rdi + rax*4]
0x9df8:	mov	eax, dword ptr [r8]
0x9dfb:	mov	dword ptr [r8], esi
0x9dfe:	mov	esi, dword ptr [rdi + 0x18]
0x9e01:	mov	dword ptr [rdi + 0x14], ecx
0x9e04:	cmp	esi, ecx
0x9e06:	jne	0x9e10


0x9dd0:	movzx	eax, byte ptr [rdi + 0x1c]
0x9dd4:	ret	


0x9db0:	mov	byte ptr [rdi + 0x1c], 1
0x9db4:	mov	qword ptr [rdi + 0x14], 0
0x9dbc:	mov	dword ptr [rdi], esi
0x9dbe:	mov	dword ptr [rdi + 4], esi
0x9dc1:	mov	dword ptr [rdi + 8], esi
0x9dc4:	mov	dword ptr [rdi + 0xc], esi
0x9dc7:	mov	dword ptr [rdi + 0x10], esi
0x9dca:	ret	


0x9ba0:	push	r12
0x9ba2:	push	rbp
0x9ba3:	mov	ecx, 1
0x9ba8:	push	rbx
0x9ba9:	mov	rbx, rdi
0x9bac:	sub	rsp, 0x10
0x9bb0:	mov	rdx, rsp
0x9bb3:	mov	rax, qword ptr fs:[0x28]
0x9bbc:	mov	qword ptr [rsp + 8], rax
0x9bc1:	xor	eax, eax
0x9bc3:	call	0x8bc0


0x9b40:	push	rbx
0x9b41:	mov	rbx, rsi
0x9b44:	sub	rsp, 0x10
0x9b48:	mov	rdx, rsp
0x9b4b:	mov	rax, qword ptr fs:[0x28]
0x9b54:	mov	qword ptr [rsp + 8], rax
0x9b59:	xor	eax, eax
0x9b5b:	call	0x98b0


0x98b0:	push	r13
0x98b2:	push	r12
0x98b4:	push	rbp
0x98b5:	push	rbx
0x98b6:	sub	rsp, 0x18
0x98ba:	mov	rax, qword ptr fs:[0x28]
0x98c3:	mov	qword ptr [rsp + 8], rax
0x98c8:	xor	eax, eax
0x98ca:	test	rsi, rsi
0x98cd:	je	0x9a8d


0x9670:	push	r12
0x9672:	push	rbp
0x9673:	mov	rbp, rdi
0x9676:	push	rbx
0x9677:	sub	rsp, 0x60
0x967b:	mov	r12, qword ptr [rdi + 0x28]
0x967f:	mov	rax, qword ptr fs:[0x28]
0x9688:	mov	qword ptr [rsp + 0x58], rax
0x968d:	xor	eax, eax
0x968f:	cmp	byte ptr [r12 + 0x10], 0
0x9695:	jne	0x96e8


0x9590:	push	r12
0x9592:	push	rbp
0x9593:	mov	r12, rdi
0x9596:	push	rbx
0x9597:	cmp	qword ptr [rdi + 0x40], 0
0x959c:	mov	rbp, qword ptr [rdi]
0x959f:	mov	rax, qword ptr [rdi + 8]
0x95a3:	je	0x95f3


0x9500:	push	r12
0x9502:	push	rbp
0x9503:	mov	rbp, rdi
0x9506:	push	rbx
0x9507:	mov	r12, qword ptr [rdi]
0x950a:	cmp	r12, qword ptr [rdi + 8]
0x950e:	jae	0x957b


0x9340:	push	r15
0x9342:	push	r14
0x9344:	lea	rax, [rip - 0x7db]
0x934b:	push	r13
0x934d:	push	r12
0x934f:	mov	r12, rdx
0x9352:	push	rbp
0x9353:	push	rbx
0x9354:	mov	r13, rcx
0x9357:	mov	rbp, rdi
0x935a:	mov	edi, 0x50
0x935f:	mov	r15, rsi
0x9362:	sub	rsp, 8
0x9366:	test	rdx, rdx
0x9369:	mov	r14, r8
0x936c:	cmove	r12, rax
0x9370:	lea	rax, [rip - 0x7f7]
0x9377:	test	rcx, rcx
0x937a:	cmove	r13, rax
0x937e:	call	0x1ba0


0x9320:	movabs	rax, 0x3f80000000000000
0x932a:	mov	byte ptr [rdi + 0x10], 0
0x932e:	mov	qword ptr [rdi], rax
0x9331:	movabs	rax, 0x3fb4fdf43f4ccccd
0x933b:	mov	qword ptr [rdi + 8], rax
0x933f:	ret	


0x92e0:	movzx	ecx, byte ptr [rdi]
0x92e3:	xor	edx, edx
0x92e5:	test	cl, cl
0x92e7:	je	0x930d


0x9270:	push	r15
0x9272:	push	r14
0x9274:	push	r13
0x9276:	push	r12
0x9278:	push	rbp
0x9279:	push	rbx
0x927a:	sub	rsp, 8
0x927e:	mov	r14, qword ptr [rdi]
0x9281:	cmp	qword ptr [rdi + 8], r14
0x9285:	jbe	0x92d6


0x9200:	mov	r9, qword ptr [rdi]
0x9203:	cmp	qword ptr [rdi + 8], r9
0x9207:	jbe	0x9262


0x9180:	push	rbp
0x9181:	push	rbx
0x9182:	mov	rbp, rdi
0x9185:	mov	rbx, rsi
0x9188:	sub	rsp, 8
0x918c:	call	0x8b90


0x9130:	cmp	qword ptr [rdi + 0x20], 0
0x9135:	je	0x9163


0x90d0:	push	r12
0x90d2:	push	rbp
0x90d3:	mov	r12, rdi
0x90d6:	push	rbx
0x90d7:	mov	rbp, rsi
0x90da:	call	0x8b90


0x8f80:	push	r13
0x8f82:	push	r12
0x8f84:	mov	r12, rsi
0x8f87:	push	rbp
0x8f88:	push	rbx
0x8f89:	xor	ebx, ebx
0x8f8b:	sub	rsp, 8
0x8f8f:	mov	rsi, qword ptr [rdi]
0x8f92:	mov	rcx, qword ptr [rdi + 0x20]
0x8f96:	mov	rbp, qword ptr [rdi + 0x10]
0x8f9a:	mov	r13, qword ptr [rdi + 0x18]
0x8f9e:	mov	rdi, qword ptr [rdi + 8]
0x8fa2:	cmp	rsi, rdi
0x8fa5:	jae	0x8fe5


0x8f20:	mov	rcx, qword ptr [rdi]
0x8f23:	mov	r8, qword ptr [rdi + 8]
0x8f27:	xor	edx, edx
0x8f29:	xor	esi, esi
0x8f2b:	cmp	rcx, r8
0x8f2e:	jae	0x8f66


0x8ed0:	mov	rsi, qword ptr [rdi]
0x8ed3:	mov	rdi, qword ptr [rdi + 8]
0x8ed7:	xor	eax, eax
0x8ed9:	cmp	rsi, rdi
0x8edc:	jae	0x8f17


0x8ec0:	mov	rax, qword ptr [rdi + 0x20]
0x8ec4:	ret	


0x8eb0:	mov	rax, qword ptr [rdi + 0x18]
0x8eb4:	ret	


0x8ea0:	mov	rax, qword ptr [rdi + 0x10]
0x8ea4:	ret	


0x8d60:	push	r15
0x8d62:	push	r14
0x8d64:	push	r13
0x8d66:	push	r12
0x8d68:	push	rbp
0x8d69:	push	rbx
0x8d6a:	sub	rsp, 8
0x8d6e:	mov	r12, qword ptr [rsi]
0x8d71:	cmp	r12, qword ptr [rsi + 8]
0x8d75:	jae	0x8e58


0x8ce0:	mov	rdx, qword ptr [rdi]
0x8ce3:	lea	rcx, [rip + 0x2ff6]
0x8cea:	mov	eax, 1
0x8cef:	cmp	rdx, rcx
0x8cf2:	je	0x8d55


0x8bc0:	push	r14
0x8bc2:	push	r13
0x8bc4:	mov	r14, rdx
0x8bc7:	push	r12
0x8bc9:	push	rbp
0x8bca:	mov	r12, rdi
0x8bcd:	push	rbx
0x8bce:	mov	rbp, rsi
0x8bd1:	mov	r13d, ecx
0x8bd4:	call	0x8b90


0x8b90:	push	rbx
0x8b91:	mov	rbx, rdi
0x8b94:	mov	rdi, rsi
0x8b97:	mov	rsi, qword ptr [rbx + 0x10]
0x8b9b:	call	qword ptr [rbx + 0x30]


0x8b80:	cmp	rdi, rsi
0x8b83:	sete	al
0x8b86:	ret	


0x8b70:	mov	rax, rdi
0x8b73:	xor	edx, edx
0x8b75:	ror	rax, 3
0x8b79:	div	rsi
0x8b7c:	mov	rax, rdx
0x8b7f:	ret	


0x8ad0:	cmp	rdi, 0xa
0x8ad4:	mov	eax, 0xa
0x8ad9:	movabs	r9, 0xaaaaaaaaaaaaaaab
0x8ae3:	cmovb	rdi, rax
0x8ae7:	or	rdi, 1
0x8aeb:	cmp	rdi, -1
0x8aef:	je	0x8b5f


0x8a70:	sub	rsp, 8
0x8a74:	xor	esi, esi
0x8a76:	call	0x1c10


0x8a00:	sub	rsp, 0x58
0x8a04:	mov	qword ptr [rsp + 0x30], rdx
0x8a09:	xor	edx, edx
0x8a0b:	mov	rax, qword ptr fs:[0x28]
0x8a14:	mov	qword ptr [rsp + 0x18], rax
0x8a19:	xor	eax, eax
0x8a1b:	test	sil, 0x40
0x8a1f:	jne	0x8a48


0x8970:	cmp	dword ptr [rdi + 0x18], 0x95f616
0x8977:	jne	0x89d7


0x8960:	mov	qword ptr [rdi + 0x10], 0
0x8968:	mov	dword ptr [rdi + 0x18], 0x95f616
0x896f:	ret	


0x88e0:	push	r12
0x88e2:	push	rbp
0x88e3:	mov	rbp, rdi
0x88e6:	push	rbx
0x88e7:	call	0x1970


0x8850:	push	r13
0x8852:	push	r12
0x8854:	mov	r13, rsi
0x8857:	push	rbp
0x8858:	push	rbx
0x8859:	mov	rbx, rdi
0x885c:	mov	r12, rdx
0x885f:	sub	rsp, 0x18
0x8863:	mov	rax, qword ptr fs:[0x28]
0x886c:	mov	qword ptr [rsp + 8], rax
0x8871:	xor	eax, eax
0x8873:	lea	rax, [rsp + 4]
0x8878:	test	rdi, rdi
0x887b:	cmove	rbx, rax
0x887f:	mov	rdi, rbx
0x8882:	call	0x1a60


0x8700:	push	r14
0x8702:	push	r13
0x8704:	push	r12
0x8706:	push	rbp
0x8707:	mov	r12d, esi
0x870a:	push	rbx
0x870b:	mov	rbx, rdi
0x870e:	call	0x1930


0x86d0:	cmp	edx, 4
0x86d3:	ja	0x86e0


0x7f50:	push	r14
0x7f52:	push	r13
0x7f54:	push	r12
0x7f56:	push	rbp
0x7f57:	push	rbx
0x7f58:	mov	rbp, qword ptr [rdi]
0x7f5b:	test	rbp, rbp
0x7f5e:	je	0x806e


0x7dc0:	push	r12
0x7dc2:	push	rbp
0x7dc3:	mov	rbp, rdi
0x7dc6:	push	rbx
0x7dc7:	mov	rdi, qword ptr [rdi]
0x7dca:	test	rdi, rdi
0x7dcd:	je	0x7e13


0x7a10:	push	r15
0x7a12:	push	r14
0x7a14:	push	r13
0x7a16:	push	r12
0x7a18:	push	rbp
0x7a19:	push	rbx
0x7a1a:	sub	rsp, 0x28
0x7a1e:	test	esi, 0xfffff000
0x7a24:	jne	0x7da8


0x7030:	push	r15
0x7032:	push	r14
0x7034:	mov	r15, rdi
0x7037:	push	r13
0x7039:	push	r12
0x703b:	push	rbp
0x703c:	push	rbx
0x703d:	sub	rsp, 0x78
0x7041:	mov	rbp, qword ptr [rdi]
0x7044:	mov	rax, qword ptr fs:[0x28]
0x704d:	mov	qword ptr [rsp + 0x68], rax
0x7052:	xor	eax, eax
0x7054:	mov	dword ptr [rsp + 0x58], esi
0x7058:	mov	rax, qword ptr [rbp + 0x18]
0x705c:	test	rax, rax
0x705f:	mov	qword ptr [rsp + 0x50], rax
0x7064:	je	0x74a0


0x6f70:	sub	rsp, 0x28
0x6f74:	mov	rcx, rsi
0x6f77:	mov	rax, qword ptr fs:[0x28]
0x6f80:	mov	qword ptr [rsp + 0x18], rax
0x6f85:	xor	eax, eax
0x6f87:	and	edi, 0x102
0x6f8d:	jne	0x6fd0


0x6ec0:	and	edi, 0x102
0x6ec6:	push	r12
0x6ec8:	mov	r12, rsi
0x6ecb:	push	rbp
0x6ecc:	push	rbx
0x6ecd:	mov	rbx, rdx
0x6ed0:	je	0x6f40


0x6c40:	push	r15
0x6c42:	push	r14
0x6c44:	mov	r14, rsi
0x6c47:	push	r13
0x6c49:	push	r12
0x6c4b:	mov	r13, rdi
0x6c4e:	push	rbp
0x6c4f:	push	rbx
0x6c50:	mov	r12d, edx
0x6c53:	mov	rbp, rcx
0x6c56:	sub	rsp, 0xb8
0x6c5d:	mov	ebx, dword ptr [rdi + 0x48]
0x6c60:	mov	rax, qword ptr fs:[0x28]
0x6c69:	mov	qword ptr [rsp + 0xa8], rax
0x6c71:	xor	eax, eax
0x6c73:	mov	r9d, ebx
0x6c76:	and	r9d, 4
0x6c7a:	test	rcx, rcx
0x6c7d:	je	0x6d30


0x6c00:	mov	rax, rdx
0x6c03:	mov	edx, esi
0x6c05:	shl	edx, 0xd
0x6c08:	and	edx, 0x20000
0x6c0e:	or	edx, 0x90900
0x6c14:	and	esi, 0x200
0x6c1a:	jne	0x6c30


0x6b90:	and	edi, 0x102
0x6b96:	push	rbx
0x6b97:	mov	rbx, rsi
0x6b9a:	je	0x6bd0


0x6b20:	push	rbx
0x6b21:	mov	rcx, qword ptr [rsi]
0x6b24:	mov	rbx, rdi
0x6b27:	mov	rdi, qword ptr [rdi]
0x6b2a:	lea	rax, [rcx + rdx + 0x100]
0x6b32:	cmp	rcx, rax
0x6b35:	ja	0x6b58


0x6ac0:	push	rbp
0x6ac1:	push	rbx
0x6ac2:	mov	rbx, rdi
0x6ac5:	sub	rsp, 8
0x6ac9:	mov	edx, dword ptr [rdi + 0x48]
0x6acc:	mov	ebp, edx
0x6ace:	and	ebp, 4
0x6ad1:	jne	0x6b18


0x6a50:	push	rbp
0x6a51:	push	rbx
0x6a52:	mov	ebp, esi
0x6a54:	mov	rbx, rdi
0x6a57:	sub	rsp, 8
0x6a5b:	mov	esi, dword ptr [rdi + 0x2c]
0x6a5e:	cmp	esi, ebp
0x6a60:	jne	0x6a67


0x69e0:	sub	rsp, 8
0x69e4:	call	0x68b0


0x68b0:	push	r13
0x68b2:	push	r12
0x68b4:	push	rbp
0x68b5:	push	rbx
0x68b6:	sub	rsp, 0x98
0x68bd:	mov	rbx, qword ptr [rdi + 0x50]
0x68c1:	mov	rax, qword ptr fs:[0x28]
0x68ca:	mov	qword ptr [rsp + 0x88], rax
0x68d2:	xor	eax, eax
0x68d4:	test	byte ptr [rbx + 0x49], 2
0x68d8:	je	0x6942


0x6870:	push	rbx
0x6871:	mov	rbx, rdi
0x6874:	jmp	0x688c


0x6820:	test	rdi, rdi
0x6823:	je	0x6860


0x6790:	push	r13
0x6792:	push	r12
0x6794:	mov	r12, rdi
0x6797:	push	rbp
0x6798:	lea	rdi, [rdx + 0x110]
0x679f:	push	rbx
0x67a0:	mov	r13, rsi
0x67a3:	mov	rbp, rdx
0x67a6:	sub	rsp, 8
0x67aa:	and	rdi, 0xfffffffffffffff8
0x67ae:	call	0x1ba0


0x6680:	push	r13
0x6682:	push	r12
0x6684:	mov	r12, rdx
0x6687:	push	rbp
0x6688:	push	rbx
0x6689:	mov	rbp, rdi
0x668c:	mov	rbx, rsi
0x668f:	sub	rsp, 8
0x6693:	cmp	qword ptr [rbp + 0x38], rdx
0x6697:	mov	r13, qword ptr [rdi + 0x40]
0x669b:	mov	rdi, qword ptr [rdi + 0x10]
0x669f:	jae	0x66d5


0x64b0:	push	r12
0x64b2:	push	rbp
0x64b3:	mov	rbp, rsi
0x64b6:	push	rbx
0x64b7:	cmp	qword ptr [rbp + 0x58], 0
0x64bc:	lea	rbx, [rsi + 0x78]
0x64c0:	mov	r12, rdi
0x64c3:	mov	eax, dword ptr [rdi + 0x48]
0x64c6:	mov	rsi, qword ptr [rsi + 0x30]
0x64ca:	jne	0x6530


0x6480:	mov	rdx, qword ptr [rdi]
0x6483:	mov	rax, qword ptr [rsi]
0x6486:	mov	rax, qword ptr [rax + 0x80]
0x648d:	cmp	qword ptr [rdx + 0x80], rax
0x6494:	jb	0x64a0


0x6470:	mov	rax, qword ptr [rsi]
0x6473:	cmp	qword ptr [rdi], rax
0x6476:	sete	al
0x6479:	ret	


0x6460:	mov	rax, qword ptr [rdi]
0x6463:	xor	edx, edx
0x6465:	div	rsi
0x6468:	mov	rax, rdx
0x646b:	ret	


0x6450:	mov	rax, qword ptr [rdi + 8]
0x6454:	xor	edx, edx
0x6456:	div	rsi
0x6459:	mov	rax, rdx
0x645c:	ret	


0x6430:	xor	eax, eax
0x6432:	mov	rdx, qword ptr [rsi + 8]
0x6436:	cmp	qword ptr [rdi + 8], rdx
0x643a:	je	0x6440


0x6010:	push	r15
0x6012:	push	r14
0x6014:	push	r13
0x6016:	push	r12
0x6018:	push	rbp
0x6019:	push	rbx
0x601a:	sub	rsp, 0x28
0x601e:	mov	rax, qword ptr fs:[0x28]
0x6027:	mov	qword ptr [rsp + 0x18], rax
0x602c:	xor	eax, eax
0x602e:	cmp	edx, 0x24
0x6031:	ja	0x6395


0x5fe0:	mov	edx, dword ptr [rdi + 0x48]
0x5fe3:	mov	eax, 1
0x5fe8:	and	edx, 0x11
0x5feb:	cmp	edx, 0x10
0x5fee:	je	0x5ff7


0x5f90:	sub	rsp, 8
0x5f94:	or	esi, 0x200
0x5f9a:	call	0x7a10


0x5f50:	lea	rsi, [rip + 0x5af8]
0x5f57:	sub	rsp, 8
0x5f5b:	mov	edx, 5
0x5f60:	xor	edi, edi
0x5f62:	call	0x19f0


0x5f30:	push	rbx
0x5f31:	mov	rbx, rdi
0x5f34:	call	0x1a10


0x5f00:	push	rbp
0x5f01:	push	rbx
0x5f02:	mov	rbp, rdi
0x5f05:	mov	rdi, rsi
0x5f08:	mov	rbx, rsi
0x5f0b:	sub	rsp, 8
0x5f0f:	call	0x5d00


0x5ed0:	mov	rax, rdi
0x5ed3:	sub	rsp, 8
0x5ed7:	mul	rsi
0x5eda:	seto	dl
0x5edd:	test	rax, rax
0x5ee0:	js	0x5ef9


0x5eb0:	push	rbx
0x5eb1:	mov	rbx, rdi
0x5eb4:	call	0x5d00


0x5e60:	test	rdi, rdi
0x5e63:	mov	rax, qword ptr [rsi]
0x5e66:	je	0x5e90


0x5dd0:	test	rdi, rdi
0x5dd3:	mov	r9, rdx
0x5dd6:	mov	rcx, qword ptr [rsi]
0x5dd9:	je	0x5e10


0x5da0:	mov	rax, rsi
0x5da3:	mul	rdx
0x5da6:	mov	rsi, rax
0x5da9:	seto	al
0x5dac:	test	rsi, rsi
0x5daf:	js	0x5dbb


0x5d60:	test	rsi, rsi
0x5d63:	push	rbx
0x5d64:	mov	rbx, rsi
0x5d67:	jne	0x5d6e


0x5d50:	jmp	0x5d00


0x5d20:	mov	rax, rdi
0x5d23:	mul	rsi
0x5d26:	mov	rdi, rax
0x5d29:	seto	al
0x5d2c:	test	rdi, rdi
0x5d2f:	js	0x5d3b


0x5d00:	push	rbx
0x5d01:	mov	rbx, rdi
0x5d04:	call	0x1ba0


0x5c80:	push	rbx
0x5c81:	lea	rsi, [rip + 0x5aba]
0x5c88:	mov	edx, 5
0x5c8d:	xor	edi, edi
0x5c8f:	call	0x19f0


0x5ba0:	push	rbp
0x5ba1:	push	rbx
0x5ba2:	mov	r10d, 0x20
0x5ba8:	xor	r11d, r11d
0x5bab:	sub	rsp, 0xb8
0x5bb2:	mov	rax, qword ptr fs:[0x28]
0x5bbb:	mov	qword ptr [rsp + 0x78], rax
0x5bc0:	xor	eax, eax
0x5bc2:	lea	rax, [rsp + 0xd0]
0x5bca:	mov	qword ptr [rsp + 0xa0], r8
0x5bd2:	lea	rbx, [rsp + 0xd0]
0x5bda:	lea	r8, [rsp + 0x20]
0x5bdf:	mov	qword ptr [rsp + 0xa8], r9
0x5be7:	mov	dword ptr [rsp + 8], 0x20
0x5bef:	mov	qword ptr [rsp + 0x10], rax
0x5bf4:	lea	rax, [rsp + 0x80]
0x5bfc:	xor	r9d, r9d
0x5bff:	mov	qword ptr [rsp + 0x18], rax
0x5c04:	mov	rbp, rax
0x5c07:	nop	word ptr [rax + rax]
0x5c10:	cmp	r10d, 0x2f
0x5c14:	ja	0x5c6c


0x5b20:	sub	rsp, 0x68
0x5b24:	mov	r10, r8
0x5b27:	xor	r9d, r9d
0x5b2a:	mov	rax, qword ptr fs:[0x28]
0x5b33:	mov	qword ptr [rsp + 0x58], rax
0x5b38:	xor	eax, eax
0x5b3a:	mov	r8, rsp
0x5b3d:	nop	dword ptr [rax]
0x5b40:	mov	eax, dword ptr [r10]
0x5b43:	cmp	eax, 0x2f
0x5b46:	ja	0x5b8a


0x5b00:	xor	r9d, r9d
0x5b03:	cmp	qword ptr [r8], 0
0x5b07:	je	0x5b1b


0x56e0:	push	r15
0x56e2:	push	r14
0x56e4:	push	r13
0x56e6:	push	r12
0x56e8:	mov	r12, r9
0x56eb:	push	rbp
0x56ec:	push	rbx
0x56ed:	mov	rbp, rdi
0x56f0:	mov	rbx, r8
0x56f3:	sub	rsp, 0x28
0x56f7:	test	rsi, rsi
0x56fa:	je	0x5818


0x5660:	push	rbx
0x5661:	lea	rsi, [rip + 0x5ba6]
0x5668:	mov	rbx, rdi
0x566b:	mov	edi, 1
0x5670:	sub	rsp, 0xa0
0x5677:	mov	rdx, rsp
0x567a:	mov	rax, qword ptr fs:[0x28]
0x5683:	mov	qword ptr [rsp + 0x98], rax
0x568b:	xor	eax, eax
0x568d:	call	0x1a20


0x5640:	lea	rcx, [rip + 0x2089d9]
0x5647:	mov	rsi, rdi
0x564a:	mov	rdx, -1
0x5651:	xor	edi, edi
0x5653:	jmp	0x4d00


0x5620:	lea	rcx, [rip + 0x2089f9]
0x5627:	mov	rdx, -1
0x562e:	jmp	0x4d00


0x5600:	lea	rcx, [rip + 0x208a19]
0x5607:	mov	rdx, rsi
0x560a:	mov	rsi, rdi
0x560d:	xor	edi, edi
0x560f:	jmp	0x4d00


0x55f0:	lea	rcx, [rip + 0x208a29]
0x55f7:	jmp	0x4d00


0x55d0:	mov	r8, rcx
0x55d3:	mov	rcx, rdx
0x55d6:	mov	rdx, rsi
0x55d9:	mov	rsi, rdi
0x55dc:	xor	edi, edi
0x55de:	jmp	0x5500


0x55b0:	mov	rcx, rdx
0x55b3:	mov	r8, -1
0x55ba:	mov	rdx, rsi
0x55bd:	mov	rsi, rdi
0x55c0:	xor	edi, edi
0x55c2:	jmp	0x5500


0x55a0:	mov	r8, -1
0x55a7:	jmp	0x5500


0x5500:	sub	rsp, 0x48
0x5504:	mov	r9, rcx
0x5507:	mov	rcx, qword ptr [rip + 0x208d22]
0x550e:	movdqa	xmm0, xmmword ptr [rip + 0x208cea]
0x5516:	mov	rax, qword ptr fs:[0x28]
0x551f:	mov	qword ptr [rsp + 0x38], rax
0x5524:	xor	eax, eax
0x5526:	movaps	xmmword ptr [rsp], xmm0
0x552a:	test	rsi, rsi
0x552d:	mov	qword ptr [rsp + 0x30], rcx
0x5532:	mov	dword ptr [rsp], 0xa
0x5539:	movdqa	xmm0, xmmword ptr [rip + 0x208ccf]
0x5541:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x5546:	movdqa	xmm0, xmmword ptr [rip + 0x208cd2]
0x554e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x5553:	je	0x5587


0x5470:	sub	rsp, 0x48
0x5474:	mov	rax, rdx
0x5477:	mov	rdx, qword ptr fs:[0x28]
0x5480:	mov	qword ptr [rsp + 0x38], rdx
0x5485:	xor	edx, edx
0x5487:	cmp	esi, 0xa
0x548a:	je	0x54f4


0x5460:	mov	edx, 0x3a
0x5465:	jmp	0x5390


0x5440:	mov	edx, 0x3a
0x5445:	mov	rsi, -1
0x544c:	jmp	0x5390


0x5430:	movsx	edx, sil
0x5434:	mov	rsi, -1
0x543b:	jmp	0x5390


0x5390:	sub	rsp, 0x48
0x5394:	mov	ecx, edx
0x5396:	mov	rax, qword ptr fs:[0x28]
0x539f:	mov	qword ptr [rsp + 0x38], rax
0x53a4:	xor	eax, eax
0x53a6:	mov	rax, qword ptr [rip + 0x208e83]
0x53ad:	mov	r8, rsp
0x53b0:	and	ecx, 0x1f
0x53b3:	movdqa	xmm0, xmmword ptr [rip + 0x208e45]
0x53bb:	mov	qword ptr [rsp + 0x30], rax
0x53c0:	mov	eax, edx
0x53c2:	movaps	xmmword ptr [rsp], xmm0
0x53c6:	shr	al, 5
0x53c9:	movzx	eax, al
0x53cc:	lea	r9, [r8 + rax*4 + 8]
0x53d1:	movdqa	xmm0, xmmword ptr [rip + 0x208e37]
0x53d9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x53de:	movdqa	xmm0, xmmword ptr [rip + 0x208e3a]
0x53e6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x53eb:	mov	edx, dword ptr [r9]
0x53ee:	mov	eax, edx
0x53f0:	shr	eax, cl
0x53f2:	not	eax
0x53f4:	and	eax, 1
0x53f7:	shl	eax, cl
0x53f9:	mov	rcx, r8
0x53fc:	xor	eax, edx
0x53fe:	mov	rdx, rsi
0x5401:	mov	rsi, rdi
0x5404:	mov	dword ptr [r9], eax
0x5407:	xor	edi, edi
0x5409:	call	0x4d00


0x5380:	mov	rcx, rdx
0x5383:	mov	rdx, rsi
0x5386:	mov	esi, edi
0x5388:	xor	edi, edi
0x538a:	jmp	0x52e0


0x5370:	mov	rdx, rsi
0x5373:	mov	esi, edi
0x5375:	xor	edi, edi
0x5377:	jmp	0x5250


0x52e0:	sub	rsp, 0x48
0x52e4:	mov	rax, rdx
0x52e7:	mov	rdx, rcx
0x52ea:	mov	rcx, qword ptr fs:[0x28]
0x52f3:	mov	qword ptr [rsp + 0x38], rcx
0x52f8:	xor	ecx, ecx
0x52fa:	cmp	esi, 0xa
0x52fd:	je	0x5360


0x5250:	sub	rsp, 0x48
0x5254:	mov	rax, rdx
0x5257:	mov	rdx, qword ptr fs:[0x28]
0x5260:	mov	qword ptr [rsp + 0x38], rdx
0x5265:	xor	edx, edx
0x5267:	cmp	esi, 0xa
0x526a:	je	0x52d4


0x5230:	lea	rcx, [rip + 0x208fc9]
0x5237:	mov	rdx, rsi
0x523a:	mov	rsi, rdi
0x523d:	xor	edi, edi
0x523f:	jmp	0x4d00


0x5210:	lea	rcx, [rip + 0x208fe9]
0x5217:	mov	rsi, rdi
0x521a:	mov	rdx, -1
0x5221:	xor	edi, edi
0x5223:	jmp	0x4d00


0x5200:	lea	rcx, [rip + 0x208ff9]
0x5207:	jmp	0x4d00


0x51e0:	lea	rcx, [rip + 0x209019]
0x51e7:	mov	rdx, -1
0x51ee:	jmp	0x4d00


0x5140:	mov	eax, dword ptr [rip + 0x208f12]
0x5146:	push	r12
0x5148:	mov	r12, qword ptr [rip + 0x208f11]
0x514f:	push	rbp
0x5150:	push	rbx
0x5151:	cmp	eax, 1
0x5154:	jle	0x5181


0x5130:	mov	rcx, rdx
0x5133:	xor	edx, edx
0x5135:	jmp	0x5040


0x5040:	push	r15
0x5042:	push	r14
0x5044:	lea	rax, [rip + 0x2091b5]
0x504b:	push	r13
0x504d:	push	r12
0x504f:	mov	r12, rdx
0x5052:	push	rbp
0x5053:	push	rbx
0x5054:	mov	rbx, rcx
0x5057:	mov	r14, rdi
0x505a:	mov	r15, rsi
0x505d:	sub	rsp, 0x38
0x5061:	test	rcx, rcx
0x5064:	cmove	rbx, rax
0x5068:	xor	ebp, ebp
0x506a:	call	0x1930


0x4fc0:	push	r15
0x4fc2:	push	r14
0x4fc4:	lea	rax, [rip + 0x209235]
0x4fcb:	push	r13
0x4fcd:	push	r12
0x4fcf:	mov	r13, rdi
0x4fd2:	push	rbp
0x4fd3:	push	rbx
0x4fd4:	mov	rbx, r8
0x4fd7:	mov	r14, rsi
0x4fda:	mov	r15, rdx
0x4fdd:	sub	rsp, 0x18
0x4fe1:	test	r8, r8
0x4fe4:	cmove	rbx, rax
0x4fe8:	mov	qword ptr [rsp + 8], rcx
0x4fed:	call	0x1930


0x4f90:	lea	rax, [rip + 0x209269]
0x4f97:	test	rdi, rdi
0x4f9a:	cmove	rdi, rax
0x4f9e:	test	rsi, rsi
0x4fa1:	mov	dword ptr [rdi], 0xa
0x4fa7:	je	0x4fb7


0x4f70:	lea	rax, [rip + 0x209289]
0x4f77:	test	rdi, rdi
0x4f7a:	cmove	rdi, rax
0x4f7e:	mov	eax, dword ptr [rdi + 4]
0x4f81:	mov	dword ptr [rdi + 4], esi
0x4f84:	ret	


0x4f30:	lea	rax, [rip + 0x2092c9]
0x4f37:	test	rdi, rdi
0x4f3a:	mov	ecx, esi
0x4f3c:	cmove	rdi, rax
0x4f40:	mov	eax, esi
0x4f42:	and	ecx, 0x1f
0x4f45:	shr	al, 5
0x4f48:	movzx	eax, al
0x4f4b:	lea	rdi, [rdi + rax*4 + 8]
0x4f50:	mov	esi, dword ptr [rdi]
0x4f52:	mov	eax, esi
0x4f54:	shr	eax, cl
0x4f56:	xor	edx, eax
0x4f58:	and	eax, 1
0x4f5b:	and	edx, 1
0x4f5e:	shl	edx, cl
0x4f60:	xor	edx, esi
0x4f62:	mov	dword ptr [rdi], edx
0x4f64:	ret	


0x4f10:	lea	rax, [rip + 0x2092e9]
0x4f17:	test	rdi, rdi
0x4f1a:	cmove	rdi, rax
0x4f1e:	mov	dword ptr [rdi], esi
0x4f20:	ret	


0x4ef0:	lea	rax, [rip + 0x209309]
0x4ef7:	test	rdi, rdi
0x4efa:	cmove	rdi, rax
0x4efe:	mov	eax, dword ptr [rdi]
0x4f00:	ret	


0x4eb0:	push	r12
0x4eb2:	push	rbp
0x4eb3:	push	rbx
0x4eb4:	mov	rbx, rdi
0x4eb7:	call	0x1930


0x4d00:	push	r15
0x4d02:	push	r14
0x4d04:	movsxd	r15, edi
0x4d07:	push	r13
0x4d09:	push	r12
0x4d0b:	mov	r14, rdx
0x4d0e:	push	rbp
0x4d0f:	push	rbx
0x4d10:	mov	rbp, rcx
0x4d13:	sub	rsp, 0x28
0x4d17:	mov	qword ptr [rsp + 8], rsi
0x4d1c:	call	0x1930


0x3ac0:	push	r15
0x3ac2:	push	r14
0x3ac4:	mov	r15d, r8d
0x3ac7:	push	r13
0x3ac9:	push	r12
0x3acb:	mov	r14, rdi
0x3ace:	push	rbp
0x3acf:	push	rbx
0x3ad0:	mov	ebx, r9d
0x3ad3:	mov	r13, rsi
0x3ad6:	mov	rbp, rcx
0x3ad9:	and	ebx, 2
0x3adc:	sub	rsp, 0xb8
0x3ae3:	mov	rax, qword ptr [rsp + 0xf0]
0x3aeb:	mov	qword ptr [rsp + 0x10], rdx
0x3af0:	mov	dword ptr [rsp + 8], r8d
0x3af5:	mov	dword ptr [rsp + 0x78], r9d
0x3afa:	mov	qword ptr [rsp + 0x20], rax
0x3aff:	mov	rax, qword ptr [rsp + 0xf8]
0x3b07:	mov	qword ptr [rsp + 0x68], rax
0x3b0c:	mov	rax, qword ptr [rsp + 0x100]
0x3b14:	mov	qword ptr [rsp + 0x60], rax
0x3b19:	mov	rax, qword ptr fs:[0x28]
0x3b22:	mov	qword ptr [rsp + 0xa8], rax
0x3b2a:	xor	eax, eax
0x3b2c:	call	0x1a00


0x39d0:	push	rbp
0x39d1:	push	rbx
0x39d2:	mov	rbp, rdi
0x39d5:	mov	ebx, esi
0x39d7:	sub	rsp, 8
0x39db:	call	0x9e60


0x3930:	test	rdi, rdi
0x3933:	push	rbx
0x3934:	je	0x39ad


0x38e0:	lea	rcx, [rsi + 0x14]
0x38e4:	mov	byte ptr [rsi + 0x14], 0
0x38e8:	movabs	rsi, 0xcccccccccccccccd
0x38f2:	nop	word ptr [rax + rax]
0x38f8:	mov	rax, rdi
0x38fb:	sub	rcx, 1
0x38ff:	mul	rsi
0x3902:	shr	rdx, 3
0x3906:	lea	rax, [rdx + rdx*4]
0x390a:	add	rax, rax
0x390d:	sub	rdi, rax
0x3910:	add	edi, 0x30
0x3913:	test	rdx, rdx
0x3916:	mov	byte ptr [rcx], dil
0x3919:	mov	rdi, rdx
0x391c:	jne	0x38f8


0x3830:	push	rbp
0x3831:	push	rbx
0x3832:	sub	rsp, 8
0x3836:	mov	rdi, qword ptr [rip + 0x20a84b]
0x383d:	call	0x88e0


0x3820:	mov	byte ptr [rip + 0x20a8c1], dil
0x3827:	ret	


0x3810:	mov	qword ptr [rip + 0x20a8d9], rdi
0x3817:	ret	


0x36f0:	push	r15
0x36f2:	push	r14
0x36f4:	mov	r15d, ecx
0x36f7:	push	r13
0x36f9:	push	r12
0x36fb:	mov	r13d, r8d
0x36fe:	push	rbp
0x36ff:	push	rbx
0x3700:	mov	r14d, r9d
0x3703:	sub	rsp, 0x18
0x3707:	cmp	r8d, -1
0x370b:	mov	dword ptr [rsp + 0xc], edx
0x370f:	mov	r12, qword ptr [rsp + 0x50]
0x3714:	jne	0x3728


0x2960:	push	r15
0x2962:	push	r14
0x2964:	push	r13
0x2966:	push	r12
0x2968:	mov	r12d, r8d
0x296b:	push	rbp
0x296c:	push	rbx
0x296d:	mov	rbp, rsi
0x2970:	sub	rsp, 0x178
0x2977:	movzx	r14d, word ptr [rsi + 0x70]
0x297c:	mov	rax, qword ptr fs:[0x28]
0x2985:	mov	qword ptr [rsp + 0x168], rax
0x298d:	xor	eax, eax
0x298f:	mov	rax, qword ptr [rsi + 0x38]
0x2993:	mov	qword ptr [rsp], rdi
0x2997:	mov	dword ptr [rsp + 0x10], edx
0x299b:	mov	dword ptr [rsp + 0x18], ecx
0x299f:	cmp	r14w, 0xa
0x29a4:	mov	rbx, qword ptr [rsp + 0x1b0]
0x29ac:	mov	qword ptr [rsp + 8], rax
0x29b1:	ja	0x29eb


0x2900:	push	rbx
0x2901:	mov	ebx, edi
0x2903:	sub	rsp, 0x20
0x2907:	mov	rax, qword ptr fs:[0x28]
0x2910:	mov	qword ptr [rsp + 0x18], rax
0x2915:	xor	eax, eax
0x2917:	call	0x19c0


0x28a0:	push	rbx
0x28a1:	mov	ebx, edi
0x28a3:	sub	rsp, 0x20
0x28a7:	mov	rax, qword ptr fs:[0x28]
0x28b0:	mov	qword ptr [rsp + 0x18], rax
0x28b5:	xor	eax, eax
0x28b7:	call	0x1a80


0x2880:	push	rbx
0x2881:	mov	rbx, rdi
0x2884:	mov	rdi, qword ptr [rdi + 0x18]
0x2888:	call	0x1d30


0x2850:	mov	dword ptr [rdi], 2
0x2856:	mov	qword ptr [rdi + 8], 0
0x285e:	mov	byte ptr [rdi + 0x10], 1
0x2862:	mov	byte ptr [rdi + 4], 0
0x2866:	mov	byte ptr [rdi + 0x11], 0
0x286a:	mov	qword ptr [rdi + 0x18], 0
0x2872:	mov	qword ptr [rdi + 0x20], 0
0x287a:	ret	


0x27d0:	test	rdi, rdi
0x27d3:	push	r12
0x27d5:	push	rbp
0x27d6:	push	rbx
0x27d7:	je	0x2828


0x2350:	push	r13
0x2352:	push	r12
0x2354:	mov	edx, 5
0x2359:	push	rbp
0x235a:	push	rbx
0x235b:	mov	ebp, edi
0x235d:	sub	rsp, 0x88
0x2364:	mov	rbx, qword ptr [rip + 0x20bd8d]
0x236b:	mov	rax, qword ptr fs:[0x28]
0x2374:	mov	qword ptr [rsp + 0x78], rax
0x2379:	xor	eax, eax
0x237b:	test	edi, edi
0x237d:	je	0x23ad


0x2340:	push	rbp
0x2341:	mov	rbp, rsp
0x2344:	pop	rbp
0x2345:	jmp	0x22b0


0x2300:	cmp	byte ptr [rip + 0x20bdc1], 0
0x2307:	jne	0x2338


0x22b0:	lea	rdi, [rip + 0x20bdc9]
0x22b7:	lea	rsi, [rip + 0x20bdc2]
0x22be:	push	rbp
0x22bf:	sub	rsi, rdi
0x22c2:	mov	rbp, rsp
0x22c5:	sar	rsi, 3
0x22c9:	mov	rax, rsi
0x22cc:	shr	rax, 0x3f
0x22d0:	add	rsi, rax
0x22d3:	sar	rsi, 1
0x22d6:	je	0x22f0


0x2270:	lea	rdi, [rip + 0x20be09]
0x2277:	push	rbp
0x2278:	lea	rax, [rip + 0x20be01]
0x227f:	cmp	rax, rdi
0x2282:	mov	rbp, rsp
0x2285:	je	0x22a0


0x2240:	xor	ebp, ebp
0x2242:	mov	r9, rdx
0x2245:	pop	rsi
0x2246:	mov	rdx, rsp
0x2249:	and	rsp, 0xfffffffffffffff0
0x224d:	push	rax
0x224e:	push	rsp
0x224f:	lea	r8, [rip + 0x819a]
0x2256:	lea	rcx, [rip + 0x8123]
0x225d:	lea	rdi, [rip - 0x524]
0x2264:	call	qword ptr [rip + 0x20bd76]


0x1d40:	push	r15
0x1d42:	push	r14
0x1d44:	mov	r15d, 1
0x1d4a:	push	r13
0x1d4c:	push	r12
0x1d4e:	mov	r13d, 0xffffffff
0x1d54:	push	rbp
0x1d55:	push	rbx
0x1d56:	movsxd	rbp, edi
0x1d59:	mov	rbx, rsi
0x1d5c:	mov	r12d, 0x10
0x1d62:	xor	r14d, r14d
0x1d65:	sub	rsp, 0xf8
0x1d6c:	mov	rdi, qword ptr [rsi]
0x1d6f:	mov	rax, qword ptr fs:[0x28]
0x1d78:	mov	qword ptr [rsp + 0xe8], rax
0x1d80:	xor	eax, eax
0x1d82:	call	0x3930


0x18e8:	sub	rsp, 8
0x18ec:	mov	rax, qword ptr [rip + 0x20c6f5]
0x18f3:	test	rax, rax
0x18f6:	je	0x18fa


0x1cb0:	jmp	qword ptr [rip + 0x20c2da]


0xa320:	mov	rax, qword ptr [rdi + 0x20]
0xa324:	cmp	qword ptr [rdi + 0x28], rax
0xa328:	jne	0xa31a


0xa31a:	jmp	0x1c60


0xa2ea:	mov	rdi, rbx
0xa2ed:	pop	rbx
0xa2ee:	jmp	0x1bb0


0xa2d9:	call	0x1be0


0xa2a2:	mov	rax, qword ptr [rsp + 0x10]
0xa2a7:	xor	esi, esi
0xa2a9:	mov	edx, dword ptr [rax + 0x10]
0xa2ac:	xor	eax, eax
0xa2ae:	call	0x1990


0xa0a1:	cmp	esi, 0x406
0xa0a7:	jne	0xa0f0


0x1b70:	jmp	qword ptr [rip + 0x20c37a]


0x9fa1:	call	0xa370


0x9fc2:	add	rsp, 8
0x9fc6:	mov	eax, ebx
0x9fc8:	pop	rbx
0x9fc9:	pop	rbp
0x9fca:	pop	r12
0x9fcc:	pop	r13
0x9fce:	ret	


0x9ec0:	xor	eax, eax
0x9ec2:	call	0x1a30


0x9ee8:	lea	rax, [rsp + 0x60]
0x9eed:	mov	dword ptr [rsp], 0x18
0x9ef4:	mov	ecx, dword ptr [rsp + 0x38]
0x9ef8:	mov	qword ptr [rsp + 8], rax
0x9efd:	lea	rax, [rsp + 0x20]
0x9f02:	mov	qword ptr [rsp + 0x10], rax
0x9f07:	jmp	0x9ec0


0x1bc0:	jmp	qword ptr [rip + 0x20c352]


0x9e26:	mov	eax, dword ptr [rdi + 0x14]
0x9e29:	mov	esi, dword ptr [rdi + 0x10]
0x9e2c:	lea	rcx, [rdi + rax*4]
0x9e30:	mov	rdx, rax
0x9e33:	mov	eax, dword ptr [rcx]
0x9e35:	mov	dword ptr [rcx], esi
0x9e37:	cmp	edx, dword ptr [rdi + 0x18]
0x9e3a:	je	0x9e50


0x9e55:	sub	rsp, 8
0x9e59:	call	0x1920


0x9e08:	add	edx, esi
0x9e0a:	and	edx, 3
0x9e0d:	mov	dword ptr [rdi + 0x18], edx
0x9e10:	mov	byte ptr [rdi + 0x1c], 0
0x9e14:	ret	


0x9e10:	mov	byte ptr [rdi + 0x1c], 0
0x9e14:	ret	


0x9a8d:	call	0x1920


0x98d3:	mov	r12, rsp
0x98d6:	xor	ecx, ecx
0x98d8:	mov	r13, rdx
0x98db:	mov	rdx, r12
0x98de:	mov	rbx, rdi
0x98e1:	mov	rbp, rsi
0x98e4:	call	0x8bc0


0x9697:	test	rsi, rsi
0x969a:	js	0x9818


0x96e8:	mov	rdi, rsi
0x96eb:	call	0x8ad0


0x95f3:	cmp	rbp, rax
0x95f6:	jae	0x962c


0x95a5:	cmp	qword ptr [rdi + 0x20], 0
0x95aa:	je	0x95f3


0x9510:	cmp	qword ptr [r12], 0
0x9515:	je	0x9571


0x957b:	mov	qword ptr [rbp + 0x18], 0
0x9583:	mov	qword ptr [rbp + 0x20], 0
0x958b:	pop	rbx
0x958c:	pop	rbp
0x958d:	pop	r12
0x958f:	ret	


0x1ba0:	jmp	qword ptr [rip + 0x20c362]


0x930d:	mov	rax, rdx
0x9310:	ret	


0x92d6:	xor	ebp, ebp
0x92d8:	jmp	0x92c4


0x9287:	mov	r13, rdx
0x928a:	mov	r12, rsi
0x928d:	mov	r15, rdi
0x9290:	xor	ebp, ebp
0x9292:	mov	rdi, qword ptr [r14]
0x9295:	test	rdi, rdi
0x9298:	je	0x92ba


0x9262:	xor	eax, eax
0x9264:	ret	


0x9209:	xor	r8d, r8d
0x920c:	mov	rcx, qword ptr [r9]
0x920f:	test	rcx, rcx
0x9212:	je	0x924d


0x9163:	xor	eax, eax
0x9165:	ret	


0x9137:	mov	rdx, qword ptr [rdi]
0x913a:	mov	rcx, qword ptr [rdi + 8]
0x913e:	cmp	rdx, rcx
0x9141:	jae	0x9168


0x8fe5:	lea	rdx, [rip + 0x2c78]
0x8fec:	mov	esi, 1
0x8ff1:	mov	rdi, r12
0x8ff4:	xor	eax, eax
0x8ff6:	call	0x1cf0


0x8f30:	cmp	qword ptr [rcx], 0
0x8f34:	je	0x8f5d


0x8f66:	xor	eax, eax
0x8f68:	cmp	qword ptr [rdi + 0x18], rsi
0x8f6c:	je	0x8f70


0x8f17:	ret	


0x8d7b:	mov	rbp, rdi
0x8d7e:	mov	r13, rsi
0x8d81:	mov	r14d, edx
0x8d84:	nop	dword ptr [rax]
0x8d88:	mov	r15, qword ptr [r12]
0x8d8c:	test	r15, r15
0x8d8f:	je	0x8e4a


0x8e58:	add	rsp, 8
0x8e5c:	mov	eax, 1
0x8e61:	pop	rbx
0x8e62:	pop	rbp
0x8e63:	pop	r12
0x8e65:	pop	r13
0x8e67:	pop	r14
0x8e69:	pop	r15
0x8e6b:	ret	


0x8d55:	ret	


0x8cf4:	movss	xmm0, dword ptr [rdx + 8]
0x8cf9:	ucomiss	xmm0, dword ptr [rip + 0x2ff4]
0x8d00:	jbe	0x8d50


0x8b5f:	mov	rax, rdi
0x8b62:	ret	


0x1c10:	jmp	qword ptr [rip + 0x20c32a]


0x8a21:	xor	eax, eax
0x8a23:	call	0x1c50


0x8a48:	lea	rax, [rsp + 0x60]
0x8a4d:	mov	dword ptr [rsp], 0x10
0x8a54:	mov	edx, dword ptr [rsp + 0x30]
0x8a58:	mov	qword ptr [rsp + 8], rax
0x8a5d:	lea	rax, [rsp + 0x20]
0x8a62:	mov	qword ptr [rsp + 0x10], rax
0x8a67:	jmp	0x8a21


0x8979:	mov	rdx, qword ptr [rdi + 0x10]
0x897d:	mov	rcx, qword ptr [rsi + 8]
0x8981:	test	rdx, rdx
0x8984:	je	0x89a0


0x89d7:	lea	rcx, [rip + 0x3272]
0x89de:	lea	rsi, [rip + 0x322b]
0x89e5:	lea	rdi, [rip + 0x3248]
0x89ec:	sub	rsp, 8
0x89f0:	mov	edx, 0x3c
0x89f5:	call	0x1ac0


0x1970:	jmp	qword ptr [rip + 0x20c47a]


0x1a60:	jmp	qword ptr [rip + 0x20c402]


0x1930:	jmp	qword ptr [rip + 0x20c49a]


0x86d5:	mov	word ptr [rsi + 0x74], dx
0x86d9:	xor	eax, eax
0x86db:	ret	


0x86e0:	sub	rsp, 8
0x86e4:	call	0x1930


0x806e:	xor	ebp, ebp
0x8070:	pop	rbx
0x8071:	mov	rax, rbp
0x8074:	pop	rbp
0x8075:	pop	r12
0x8077:	pop	r13
0x8079:	pop	r14
0x807b:	ret	


0x7f64:	mov	edx, dword ptr [rdi + 0x48]
0x7f67:	test	dh, 0x20
0x7f6a:	jne	0x806e


0x7e13:	mov	rdi, qword ptr [rbp + 8]
0x7e17:	test	rdi, rdi
0x7e1a:	je	0x7e21


0x7dcf:	cmp	qword ptr [rdi + 0x58], 0
0x7dd4:	jns	0x7def


0x7a2a:	mov	eax, esi
0x7a2c:	mov	ebp, esi
0x7a2e:	and	eax, 0x204
0x7a33:	cmp	eax, 0x204
0x7a38:	je	0x7da8


0x7da8:	call	0x1930


0x74a0:	mov	eax, dword ptr [rdi + 0x48]
0x74a3:	mov	edx, eax
0x74a5:	and	edx, 0x10
0x74a8:	je	0x74b7


0x706a:	mov	rdi, rax
0x706d:	call	0x1b40


0x6f8f:	mov	rax, qword ptr [rdx + 8]
0x6f93:	test	rax, rax
0x6f96:	je	0x6fb5


0x6fd0:	mov	rax, qword ptr [rdx + 0x78]
0x6fd4:	mov	rdi, qword ptr [rcx]
0x6fd7:	mov	rsi, rsp
0x6fda:	mov	qword ptr [rsp], rax
0x6fde:	mov	rax, qword ptr [rdx + 0x80]
0x6fe5:	mov	qword ptr [rsp + 8], rax
0x6fea:	call	0x9ba0


0x6f40:	mov	rdi, qword ptr [r12]
0x6f44:	lea	rsi, [rdx + 0x78]
0x6f48:	call	0x8970


0x6ed2:	mov	edi, 0x18
0x6ed7:	call	0x1ba0


0x6d30:	test	r9d, r9d
0x6d33:	je	0x6d70


0x6c83:	lea	rdx, [rip + 0x4f3f]
0x6c8a:	mov	ecx, 3
0x6c8f:	mov	rsi, rbp
0x6c92:	mov	rdi, rdx
0x6c95:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6c1c:	mov	rdi, rax
0x6c1f:	mov	esi, edx
0x6c21:	xor	eax, eax
0x6c23:	jmp	0x8a00


0x6c30:	mov	rsi, rax
0x6c33:	xor	eax, eax
0x6c35:	jmp	0x9ea0


0x6bd0:	mov	edi, 0x20
0x6bd5:	call	0x1ba0


0x6b9c:	mov	r8, qword ptr [rip + 0x20742d]
0x6ba3:	lea	rcx, [rip - 0x77a]
0x6baa:	lea	rdx, [rip - 0x761]
0x6bb1:	xor	esi, esi
0x6bb3:	mov	edi, 0x1f
0x6bb8:	call	0x9340


0x6b37:	mov	qword ptr [rsi], rax
0x6b3a:	mov	rsi, rax
0x6b3d:	call	0x1c00


0x6b58:	call	0x1d30


0x6ad3:	and	dh, 2
0x6ad6:	jne	0x6b00


0x6b18:	xor	ebp, ebp
0x6b1a:	jmp	0x6ae8


0x6a62:	cmp	esi, -0x64
0x6a65:	jne	0x6ab1


0x6a67:	test	dl, dl
0x6a69:	jne	0x6a80


0x6942:	xor	ebx, ebx
0x6944:	mov	rdx, qword ptr [rsp + 0x88]
0x694c:	xor	rdx, qword ptr fs:[0x28]
0x6955:	mov	rax, rbx
0x6958:	jne	0x69d2


0x68da:	mov	r12, qword ptr [rbx + 0x50]
0x68de:	mov	rbp, rdi
0x68e1:	mov	r13d, esi
0x68e4:	test	r12, r12
0x68e7:	je	0x6910


0x688c:	mov	rdi, rbx
0x688f:	call	0x9dd0


0x6860:	ret	


0x6825:	push	rbp
0x6826:	push	rbx
0x6827:	mov	rbx, rdi
0x682a:	sub	rsp, 8
0x682e:	nop	
0x6830:	mov	rdi, qword ptr [rbx + 0x18]
0x6834:	mov	rbp, qword ptr [rbx + 0x10]
0x6838:	test	rdi, rdi
0x683b:	je	0x6842


0x66a1:	lea	rsi, [rdx + 0x28]
0x66a5:	movabs	rax, 0x1fffffffffffffff
0x66af:	cmp	rsi, rax
0x66b2:	mov	qword ptr [rbp + 0x38], rsi
0x66b6:	ja	0x6754


0x66d5:	test	rbx, rbx
0x66d8:	je	0x66f1


0x64cc:	test	al, 1
0x64ce:	je	0x6530


0x6530:	test	al, 2
0x6532:	jne	0x64d0


0x64a0:	mov	eax, 0xffffffff
0x64a5:	ret	


0x6496:	seta	al
0x6499:	movzx	eax, al
0x649c:	ret	


0x6440:	mov	rax, qword ptr [rsi]
0x6443:	cmp	qword ptr [rdi], rax
0x6446:	sete	al
0x6449:	ret	


0x643c:	ret	


0x6037:	lea	rax, [rsp + 0x10]
0x603c:	mov	r15, rsi
0x603f:	test	rsi, rsi
0x6042:	mov	rbp, rdi
0x6045:	mov	dword ptr [rsp + 8], edx
0x6049:	mov	r14, rcx
0x604c:	mov	r13, r8
0x604f:	cmove	r15, rax
0x6053:	call	0x1930


0x6395:	lea	rcx, [rip + 0x5824]
0x639c:	lea	rsi, [rip + 0x56fd]
0x63a3:	lea	rdi, [rip + 0x5716]
0x63aa:	mov	edx, 0x54
0x63af:	call	0x1ac0


0x5ff7:	ret	


0x5ff0:	xor	eax, eax
0x5ff2:	cmp	edx, 0x11
0x5ff5:	je	0x6000


0x19f0:	jmp	qword ptr [rip + 0x20c43a]


0x1a10:	jmp	qword ptr [rip + 0x20c42a]


0x5ef9:	call	0x5f50


0x5ee2:	movzx	edx, dl
0x5ee5:	test	rdx, rdx
0x5ee8:	jne	0x5ef9


0x5e90:	test	rax, rax
0x5e93:	mov	edx, 0x80
0x5e98:	cmove	rax, rdx
0x5e9c:	test	rax, rax
0x5e9f:	jns	0x5e82


0x5e68:	movabs	rdx, 0x5555555555555553
0x5e72:	cmp	rax, rdx
0x5e75:	ja	0x5ea1


0x5e10:	test	rcx, rcx
0x5e13:	je	0x5e38


0x5ddb:	xor	edx, edx
0x5ddd:	movabs	rax, 0x5555555555555554
0x5de7:	div	r9
0x5dea:	cmp	rax, rcx
0x5ded:	jbe	0x5e2b


0x5dbb:	sub	rsp, 8
0x5dbf:	call	0x5f50


0x5db1:	movzx	eax, al
0x5db4:	test	rax, rax
0x5db7:	jne	0x5dbb


0x5d69:	test	rdi, rdi
0x5d6c:	jne	0x5d88


0x5d6e:	mov	rsi, rbx
0x5d71:	call	0x1c00


0x5d3b:	sub	rsp, 8
0x5d3f:	call	0x5f50


0x5d31:	movzx	eax, al
0x5d34:	test	rax, rax
0x5d37:	jne	0x5d3b


0x5c16:	mov	eax, r10d
0x5c19:	mov	r11d, 1
0x5c1f:	add	r10d, 8
0x5c23:	add	rax, rbp
0x5c26:	mov	rax, qword ptr [rax]
0x5c29:	test	rax, rax
0x5c2c:	mov	qword ptr [r8 + r9*8], rax
0x5c30:	je	0x5c3c


0x5c6c:	mov	rax, rbx
0x5c6f:	add	rbx, 8
0x5c73:	jmp	0x5c26


0x5b48:	mov	r11d, eax
0x5b4b:	add	r11, qword ptr [r10 + 0x10]
0x5b4f:	add	eax, 8
0x5b52:	mov	dword ptr [r10], eax
0x5b55:	mov	rax, qword ptr [r11]
0x5b58:	test	rax, rax
0x5b5b:	mov	qword ptr [r8 + r9*8], rax
0x5b5f:	je	0x5b6b


0x5b8a:	mov	r11, qword ptr [r10 + 8]
0x5b8e:	lea	rax, [r11 + 8]
0x5b92:	mov	qword ptr [r10 + 8], rax
0x5b96:	jmp	0x5b55


0x5b1b:	jmp	0x56e0


0x5818:	mov	r8, rcx
0x581b:	mov	rcx, rdx
0x581e:	lea	rdx, [rip + 0x5ecf]
0x5825:	mov	esi, 1
0x582a:	xor	eax, eax
0x582c:	call	0x1cf0


0x5700:	mov	r8, rdx
0x5703:	lea	rdx, [rip + 0x5fde]
0x570a:	mov	r9, rcx
0x570d:	xor	eax, eax
0x570f:	mov	rcx, rsi
0x5712:	mov	esi, 1
0x5717:	call	0x1cf0


0x1a20:	jmp	qword ptr [rip + 0x20c422]


0x5587:	call	0x1920


0x5555:	test	rdx, rdx
0x5558:	je	0x5587


0x54f4:	call	0x1920


0x548c:	mov	dword ptr [rsp], esi
0x548f:	mov	rcx, rsp
0x5492:	mov	rdx, -1
0x5499:	mov	rsi, rax
0x549c:	mov	qword ptr [rsp + 4], 0
0x54a5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x54ae:	mov	qword ptr [rsp + 0x14], 0
0x54b7:	mov	qword ptr [rsp + 0x1c], 0
0x54c0:	mov	qword ptr [rsp + 0x24], 0
0x54c9:	mov	qword ptr [rsp + 0x2c], 0
0x54d2:	mov	dword ptr [rsp + 0x34], 0
0x54da:	call	0x4d00


0x5360:	call	0x1920


0x52ff:	mov	dword ptr [rsp], esi
0x5302:	mov	rcx, rsp
0x5305:	mov	rsi, rax
0x5308:	mov	qword ptr [rsp + 4], 0
0x5311:	mov	qword ptr [rsp + 0xc], 0
0x531a:	mov	qword ptr [rsp + 0x14], 0
0x5323:	mov	qword ptr [rsp + 0x1c], 0
0x532c:	mov	qword ptr [rsp + 0x24], 0
0x5335:	mov	qword ptr [rsp + 0x2c], 0
0x533e:	mov	dword ptr [rsp + 0x34], 0
0x5346:	call	0x4d00


0x52d4:	call	0x1920


0x526c:	mov	dword ptr [rsp], esi
0x526f:	mov	rcx, rsp
0x5272:	mov	rdx, -1
0x5279:	mov	rsi, rax
0x527c:	mov	qword ptr [rsp + 4], 0
0x5285:	mov	qword ptr [rsp + 0xc], 0
0x528e:	mov	qword ptr [rsp + 0x14], 0
0x5297:	mov	qword ptr [rsp + 0x1c], 0
0x52a0:	mov	qword ptr [rsp + 0x24], 0
0x52a9:	mov	qword ptr [rsp + 0x2c], 0
0x52b2:	mov	dword ptr [rsp + 0x34], 0
0x52ba:	call	0x4d00


0x5181:	mov	rdi, qword ptr [r12 + 8]
0x5186:	lea	rbx, [rip + 0x208f73]
0x518d:	cmp	rdi, rbx
0x5190:	je	0x51a9


0x5156:	sub	eax, 2
0x5159:	lea	rbx, [r12 + 0x18]
0x515e:	shl	rax, 4
0x5162:	lea	rbp, [r12 + rax + 0x28]
0x5167:	nop	word ptr [rax + rax]
0x5170:	mov	rdi, qword ptr [rbx]
0x5173:	add	rbx, 0x10
0x5177:	call	0x1d30


0x4fb7:	sub	rsp, 8
0x4fbb:	call	0x1920


0x4fa9:	test	rdx, rdx
0x4fac:	je	0x4fb7


0x1a00:	jmp	qword ptr [rip + 0x20c432]


0x39ad:	mov	rcx, qword ptr [rip + 0x20a70c]
0x39b4:	lea	rdi, [rip + 0x7815]
0x39bb:	mov	edx, 0x37
0x39c0:	mov	esi, 1
0x39c5:	call	0x1ce0


0x3936:	mov	esi, 0x2f
0x393b:	mov	rbx, rdi
0x393e:	call	0x1aa0


0x391e:	mov	rax, rcx
0x3921:	ret	


0x38f8:	mov	rax, rdi
0x38fb:	sub	rcx, 1
0x38ff:	mul	rsi
0x3902:	shr	rdx, 3
0x3906:	lea	rax, [rdx + rdx*4]
0x390a:	add	rax, rax
0x390d:	sub	rdi, rax
0x3910:	add	edi, 0x30
0x3913:	test	rdx, rdx
0x3916:	mov	byte ptr [rcx], dil
0x3919:	mov	rdi, rdx
0x391c:	jne	0x38f8


0x3716:	cmp	r9d, -1
0x371a:	jne	0x3728


0x3728:	xor	edx, edx
0x372a:	mov	ebx, 1
0x372f:	call	0x5f90


0x29b3:	lea	rcx, [rip + 0x87ce]
0x29ba:	movzx	edx, r14w
0x29be:	movsxd	rax, dword ptr [rcx + rdx*4]
0x29c2:	add	rax, rcx
0x29c5:	jmp	rax


0x29eb:	cmp	r12d, -1
0x29ef:	mov	r11, qword ptr [rbp + 0x30]
0x29f3:	movzx	ecx, byte ptr [rbx + 0x10]
0x29f7:	sete	dl
0x29fa:	cmp	r9d, -1
0x29fe:	lea	r13, [rbp + 0x78]
0x2a02:	sete	al
0x2a05:	and	dl, al
0x2a07:	mov	r15d, edx
0x2a0a:	je	0x2a20


0x19c0:	jmp	qword ptr [rip + 0x20c452]


0x1a80:	jmp	qword ptr [rip + 0x20c3f2]


0x1d30:	jmp	qword ptr [rip + 0x20c29a]


0x2828:	test	rsi, rsi
0x282b:	je	0x2840


0x27d9:	test	rsi, rsi
0x27dc:	je	0x2830


0x23ad:	lea	rsi, [rip + 0x8214]
0x23b4:	xor	edi, edi
0x23b6:	call	0x19f0


0x237f:	lea	rsi, [rip + 0x821a]
0x2386:	xor	edi, edi
0x2388:	call	0x19f0


0x2309:	cmp	qword ptr [rip + 0x20bce7], 0
0x2311:	push	rbp
0x2312:	mov	rbp, rsp
0x2315:	je	0x2323


0x2338:	ret	


0x22f0:	pop	rbp
0x22f1:	ret	


0x22d8:	mov	rax, qword ptr [rip + 0x20bd11]
0x22df:	test	rax, rax
0x22e2:	je	0x22f0


0x22a0:	pop	rbp
0x22a1:	ret	


0x2287:	mov	rax, qword ptr [rip + 0x20bd4a]
0x228e:	test	rax, rax
0x2291:	je	0x22a0




0x18fa:	add	rsp, 8
0x18fe:	ret	


0x18f8:	call	rax




0xa32a:	cmp	qword ptr [rdi + 0x48], 0
0xa32f:	jne	0xa31a


0x1c60:	jmp	qword ptr [rip + 0x20c302]


0x1bb0:	jmp	qword ptr [rip + 0x20c35a]


0x1be0:	jmp	qword ptr [rip + 0x20c342]


0x1990:	jmp	qword ptr [rip + 0x20c46a]


0xa0a9:	mov	rax, qword ptr [rsp + 0x10]
0xa0ae:	cmp	dword ptr [rip + 0x204183], 0
0xa0b5:	mov	dword ptr [rsp], 0x18
0xa0bc:	mov	r12d, dword ptr [rax + 0x10]
0xa0c0:	mov	edx, r12d
0xa0c3:	js	0xa1f3


0xa0f0:	cmp	esi, 0xb
0xa0f3:	je	0xa120




0x1a30:	jmp	qword ptr [rip + 0x20c41a]




0x9e50:	mov	byte ptr [rdi + 0x1c], 1
0x9e54:	ret	


0x9e3c:	add	edx, 3
0x9e3f:	and	edx, 3
0x9e42:	mov	dword ptr [rdi + 0x14], edx
0x9e45:	ret	


0x1920:	jmp	qword ptr [rip + 0x20c4a2]


0x9818:	mov	rax, rsi
0x981b:	pxor	xmm0, xmm0
0x981f:	shr	rax, 1
0x9822:	and	esi, 1
0x9825:	or	rax, rsi
0x9828:	cvtsi2ss	xmm0, rax
0x982d:	addss	xmm0, xmm0
0x9831:	jmp	0x96a9


0x96a0:	pxor	xmm0, xmm0
0x96a4:	cvtsi2ss	xmm0, rsi
0x96a9:	divss	xmm0, dword ptr [r12 + 8]
0x96b0:	ucomiss	xmm0, dword ptr [rip + 0x2655]
0x96b7:	jae	0x97f0


0x962c:	mov	rdi, qword ptr [r12 + 0x48]
0x9631:	test	rdi, rdi
0x9634:	je	0x9651


0x95ac:	cmp	rbp, rax
0x95af:	jae	0x962c


0x9571:	add	r12, 0x10
0x9575:	cmp	qword ptr [rbp + 8], r12
0x9579:	ja	0x9510


0x9517:	mov	rbx, qword ptr [r12 + 8]
0x951c:	mov	rax, qword ptr [rbp + 0x40]
0x9520:	test	rbx, rbx
0x9523:	je	0x9555




0x92f0:	mov	rax, rdx
0x92f3:	add	rdi, 1
0x92f7:	shl	rax, 5
0x92fb:	sub	rax, rdx
0x92fe:	xor	edx, edx
0x9300:	add	rax, rcx
0x9303:	movzx	ecx, byte ptr [rdi]
0x9306:	div	rsi
0x9309:	test	cl, cl
0x930b:	jne	0x92f0


0x92c4:	add	rsp, 8
0x92c8:	mov	rax, rbp
0x92cb:	pop	rbx
0x92cc:	pop	rbp
0x92cd:	pop	r12
0x92cf:	pop	r13
0x92d1:	pop	r14
0x92d3:	pop	r15
0x92d5:	ret	


0x92ba:	add	r14, 0x10
0x92be:	cmp	qword ptr [r15 + 8], r14
0x92c2:	ja	0x9292


0x929a:	mov	rbx, r14
0x929d:	jmp	0x92a3


0x924d:	add	r9, 0x10
0x9251:	cmp	qword ptr [rdi + 8], r9
0x9255:	ja	0x920c


0x9214:	cmp	rdx, r8
0x9217:	jbe	0x9257


0x9143:	mov	rax, qword ptr [rdx]
0x9146:	test	rax, rax
0x9149:	jne	0x9166


0x9168:	sub	rsp, 8
0x916c:	call	0x1920


0x8fdc:	add	rsi, 0x10
0x8fe0:	cmp	rsi, rdi
0x8fe3:	jb	0x8fb0


0x8fb6:	mov	rax, qword ptr [rsi + 8]
0x8fba:	mov	edx, 1
0x8fbf:	test	rax, rax
0x8fc2:	je	0x8fd5


0x1cf0:	jmp	qword ptr [rip + 0x20c2ba]


0x8f5d:	add	rcx, 0x10
0x8f61:	cmp	rcx, r8
0x8f64:	jb	0x8f30


0x8f36:	mov	rax, qword ptr [rcx + 8]
0x8f3a:	add	rsi, 1
0x8f3e:	add	rdx, 1
0x8f42:	test	rax, rax
0x8f45:	je	0x8f5d


0x8f70:	cmp	qword ptr [rdi + 0x20], rdx
0x8f74:	sete	al
0x8f77:	ret	


0x8f6e:	ret	


0x8f0c:	add	rsi, 0x10
0x8f10:	cmp	rsi, rdi
0x8f13:	jb	0x8ee0


0x8ee6:	mov	rdx, qword ptr [rsi + 8]
0x8eea:	mov	ecx, 1
0x8eef:	test	rdx, rdx
0x8ef2:	je	0x8f05


0x8e4a:	add	r12, 0x10
0x8e4e:	cmp	qword ptr [r13 + 8], r12
0x8e52:	ja	0x8d88


0x8d95:	mov	rbx, qword ptr [r12 + 8]
0x8d9a:	test	rbx, rbx
0x8d9d:	jne	0x8dbc


0x8d50:	mov	qword ptr [rdi], rcx
0x8d53:	xor	eax, eax
0x8d55:	ret	


0x8d02:	movss	xmm1, dword ptr [rip + 0x2fee]
0x8d0a:	ucomiss	xmm1, xmm0
0x8d0d:	jbe	0x8d50


0x8b50:	test	rax, rax
0x8b53:	jne	0x8b5f


0x8b17:	test	rcx, rcx
0x8b1a:	je	0x8b55




0x1c50:	jmp	qword ptr [rip + 0x20c30a]


0x89a0:	mov	qword ptr [rdi + 0x10], 1
0x89a8:	mov	rax, qword ptr [rsi]
0x89ab:	mov	qword ptr [rdi], rcx
0x89ae:	mov	qword ptr [rdi + 8], rax
0x89b2:	xor	eax, eax
0x89b4:	ret	


0x8986:	cmp	qword ptr [rdi], rcx
0x8989:	je	0x89b8


0x1ac0:	jmp	qword ptr [rip + 0x20c3d2]








0x7f70:	movzx	eax, word ptr [rbp + 0x74]
0x7f74:	mov	ebx, 3
0x7f79:	mov	r12, rdi
0x7f7c:	mov	word ptr [rbp + 0x74], bx
0x7f80:	cmp	ax, 1
0x7f84:	je	0x81d0


0x7e21:	mov	rdi, qword ptr [rbp + 0x10]
0x7e25:	call	0x1d30


0x7e1c:	call	0x6820


0x7dd6:	jmp	0x7ef0


0x7def:	mov	rbx, qword ptr [rdi + 0x10]
0x7df3:	test	rbx, rbx
0x7df6:	jne	0x7de0


0x7a3e:	test	sil, 0x12
0x7a42:	je	0x7da8


0x74b7:	and	eax, 0x204
0x74bc:	mov	rsi, qword ptr [rbp + 0x30]
0x74c0:	mov	edi, 0xffffff9c
0x74c5:	cmp	eax, 0x200
0x74ca:	jne	0x74d0


0x74aa:	test	al, 1
0x74ac:	mov	edx, 0x20000
0x74b1:	jne	0x75b8


0x1b40:	jmp	qword ptr [rip + 0x20c392]


0x6fb5:	mov	rax, qword ptr [rsp + 0x18]
0x6fba:	xor	rax, qword ptr fs:[0x28]
0x6fc3:	jne	0x701e


0x6f98:	cmp	qword ptr [rax + 0x58], 0
0x6f9d:	js	0x6fb5


0x6d70:	test	r12d, r12d
0x6d73:	js	0x6eb0


0x6d35:	and	bh, 2
0x6d38:	je	0x6d43


0x6c95:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6c97:	seta	al
0x6c9a:	sbb	al, 0
0x6c9c:	test	al, al
0x6c9e:	jne	0x6d30


0x1c00:	jmp	qword ptr [rip + 0x20c332]


0x6ad8:	mov	edi, dword ptr [rdi + 0x28]
0x6adb:	xor	ebp, ebp
0x6add:	call	0x1bf0


0x6b00:	mov	edx, 1
0x6b05:	mov	esi, 0xffffff9c
0x6b0a:	call	0x6a50


0x6ae8:	lea	rdi, [rbx + 0x60]
0x6aec:	call	0x6870


0x6ab1:	call	0x1920


0x6a6b:	test	byte ptr [rbx + 0x48], 4
0x6a6f:	jne	0x6a75


0x6a80:	lea	rdi, [rbx + 0x60]
0x6a84:	call	0x9de0


0x695a:	add	rsp, 0x98
0x6961:	pop	rbx
0x6962:	pop	rbp
0x6963:	pop	r12
0x6965:	pop	r13
0x6967:	ret	


0x69d2:	call	0x1a40


0x6910:	mov	r8, qword ptr [rip + 0x2076b9]
0x6917:	lea	rcx, [rip - 0x4ae]
0x691e:	lea	rdx, [rip - 0x4c5]
0x6925:	xor	esi, esi
0x6927:	mov	edi, 0xd
0x692c:	call	0x9340


0x68e9:	mov	rax, qword ptr [rbp + 0x78]
0x68ed:	mov	rsi, rsp
0x68f0:	mov	rdi, r12
0x68f3:	mov	qword ptr [rsp], rax
0x68f7:	call	0x90d0


0x6842:	mov	rdi, rbx
0x6845:	mov	rbx, rbp
0x6848:	call	0x1d30


0x683d:	call	0x1b00


0x66bc:	shl	rsi, 3
0x66c0:	call	0x1c00


0x6754:	call	0x1d30


0x66f1:	mov	rcx, r13
0x66f4:	mov	edx, 8
0x66f9:	mov	rsi, r12
0x66fc:	call	0x1980


0x66da:	mov	rdx, rdi
0x66dd:	nop	dword ptr [rax]
0x66e0:	add	rdx, 8
0x66e4:	mov	qword ptr [rdx - 8], rbx
0x66e8:	mov	rbx, qword ptr [rbx + 0x10]
0x66ec:	test	rbx, rbx
0x66ef:	jne	0x66e0


0x64d0:	mov	rdx, rbx
0x64d3:	mov	edi, 1
0x64d8:	call	0x1b80


0x6534:	test	dl, dl
0x6536:	jne	0x64d0


0x6000:	cmp	qword ptr [rsi + 0x58], 0
0x6005:	setne	al
0x6008:	ret	






0x5eea:	call	0x1b30


0x5ea1:	sub	rsp, 8
0x5ea5:	call	0x5f50


0x5e82:	mov	qword ptr [rsi], rax
0x5e85:	mov	rsi, rax
0x5e88:	jmp	0x5d60


0x5e77:	mov	rdx, rax
0x5e7a:	shr	rdx, 1
0x5e7d:	lea	rax, [rdx + rax + 1]
0x5e82:	mov	qword ptr [rsi], rax
0x5e85:	mov	rsi, rax
0x5e88:	jmp	0x5d60


0x5e38:	xor	edx, edx
0x5e3a:	mov	eax, 0x80
0x5e3f:	xor	r8d, r8d
0x5e42:	div	r9
0x5e45:	test	rax, rax
0x5e48:	sete	r8b
0x5e4c:	lea	rcx, [r8 + rax]
0x5e50:	jmp	0x5e15


0x5e15:	mov	rax, rcx
0x5e18:	mul	r9
0x5e1b:	seto	dl
0x5e1e:	test	rax, rax
0x5e21:	movzx	edx, dl
0x5e24:	js	0x5e2b


0x5e2b:	sub	rsp, 8
0x5e2f:	call	0x5f50


0x5def:	mov	rax, rcx
0x5df2:	shr	rax, 1
0x5df5:	lea	rcx, [rax + rcx + 1]
0x5dfa:	mov	qword ptr [rsi], rcx
0x5dfd:	imul	rcx, r9
0x5e01:	mov	rsi, rcx
0x5e04:	jmp	0x5d60


0x5db9:	jmp	0x5d60


0x5d88:	call	0x1d30


0x5d39:	jmp	0x5d00


0x5c3c:	test	r11b, r11b
0x5c3f:	jne	0x5c65


0x5c32:	add	r9, 1
0x5c36:	cmp	r9, 0xa
0x5c3a:	jne	0x5c10


0x5c26:	mov	rax, qword ptr [rax]
0x5c29:	test	rax, rax
0x5c2c:	mov	qword ptr [r8 + r9*8], rax
0x5c30:	je	0x5c3c


0x5b6b:	call	0x56e0


0x5b61:	add	r9, 1
0x5b65:	cmp	r9, 0xa
0x5b69:	jne	0x5b40


0x5b55:	mov	rax, qword ptr [r11]
0x5b58:	test	rax, rax
0x5b5b:	mov	qword ptr [r8 + r9*8], rax
0x5b5f:	je	0x5b6b


0x5b10:	add	r9, 1
0x5b14:	cmp	qword ptr [r8 + r9*8], 0
0x5b19:	jne	0x5b10




0x555a:	mov	qword ptr [rsp + 0x28], rsi
0x555f:	mov	qword ptr [rsp + 0x30], rdx
0x5564:	mov	rcx, rsp
0x5567:	mov	rdx, r8
0x556a:	mov	rsi, r9
0x556d:	call	0x4d00


0x51a9:	lea	rbx, [rip + 0x208ec0]
0x51b0:	cmp	r12, rbx
0x51b3:	je	0x51c4


0x5192:	call	0x1d30


0x4fae:	mov	qword ptr [rdi + 0x28], rsi
0x4fb2:	mov	qword ptr [rdi + 0x30], rdx
0x4fb6:	ret	




0x1ce0:	jmp	qword ptr [rip + 0x20c2c2]


0x1aa0:	jmp	qword ptr [rip + 0x20c3e2]


0x371c:	cmp	byte ptr [r12 + 0x10], 0
0x3722:	je	0x37d0


0x2a20:	test	cl, cl
0x2a22:	jne	0x2c28


0x2a0c:	cmp	dword ptr [rbx], 2
0x2a0f:	jne	0x2a20








0x2840:	xor	r12d, r12d
0x2843:	jmp	0x281b


0x282d:	mov	rdi, rsi
0x2830:	pop	rbx
0x2831:	pop	rbp
0x2832:	pop	r12
0x2834:	jmp	0x5f30


0x2830:	pop	rbx
0x2831:	pop	rbp
0x2832:	pop	r12
0x2834:	jmp	0x5f30


0x27de:	mov	rbx, rsi
0x27e1:	mov	rbp, rdi
0x27e4:	call	0x1a10


0x2323:	call	0x2270


0x2317:	mov	rdi, qword ptr [rip + 0x20bcea]
0x231e:	call	0x1d38


0x22e4:	pop	rbp
0x22e5:	jmp	rax


0x2293:	pop	rbp
0x2294:	jmp	rax


0xa331:	push	r12
0xa333:	push	rbp
0xa334:	mov	r12d, edx
0xa337:	push	rbx
0xa338:	mov	rbp, rsi
0xa33b:	mov	rbx, rdi
0xa33e:	call	0x1b70










0xa1f3:	xor	esi, esi
0xa1f5:	xor	eax, eax
0xa1f7:	call	0x1990


0xa0c9:	xor	eax, eax
0xa0cb:	mov	esi, 0x406
0xa0d0:	call	0x1990


0xa120:	mov	edi, ebp
0xa122:	xor	eax, eax
0xa124:	call	0x1990


0xa0f5:	jg	0xa150






0x96a9:	divss	xmm0, dword ptr [r12 + 8]
0x96b0:	ucomiss	xmm0, dword ptr [rip + 0x2655]
0x96b7:	jae	0x97f0


0x96bd:	ucomiss	xmm0, dword ptr [rip + 0x264c]
0x96c4:	jb	0x9840


0x97f0:	xor	ebx, ebx
0x97f2:	mov	rcx, qword ptr [rsp + 0x58]
0x97f7:	xor	rcx, qword ptr fs:[0x28]
0x9800:	mov	eax, ebx
0x9802:	jne	0x989a


0x9621:	add	rbp, 0x10
0x9625:	cmp	qword ptr [r12 + 8], rbp
0x962a:	ja	0x9600


0x9651:	mov	rdi, qword ptr [r12]
0x9655:	call	0x1d30


0x9555:	test	rax, rax
0x9558:	je	0x9560


0x9292:	mov	rdi, qword ptr [r14]
0x9295:	test	rdi, rdi
0x9298:	je	0x92ba


0x92a3:	mov	rsi, r13
0x92a6:	call	r12


0x9257:	mov	rax, r8
0x925a:	ret	


0x920c:	mov	rcx, qword ptr [r9]
0x920f:	test	rcx, rcx
0x9212:	je	0x924d


0x9219:	mov	qword ptr [rsi + r8*8], rcx
0x921d:	mov	rcx, qword ptr [r9 + 8]
0x9221:	lea	rax, [r8 + 1]
0x9225:	test	rcx, rcx
0x9228:	je	0x924a


0x9166:	ret	


0x8fb0:	cmp	qword ptr [rsi], 0
0x8fb4:	je	0x8fdc


0x8fd5:	cmp	rbx, rdx
0x8fd8:	cmovb	rbx, rdx
0x8fdc:	add	rsi, 0x10
0x8fe0:	cmp	rsi, rdi
0x8fe3:	jb	0x8fb0




0x8ee0:	cmp	qword ptr [rsi], 0
0x8ee4:	je	0x8f0c


0x8f15:	ret	


0x8f05:	cmp	rax, rcx
0x8f08:	cmovb	rax, rcx
0x8f0c:	add	rsi, 0x10
0x8f10:	cmp	rsi, rdi
0x8f13:	jb	0x8ee0


0x8d88:	mov	r15, qword ptr [r12]
0x8d8c:	test	r15, r15
0x8d8f:	je	0x8e4a


0x8d9f:	jmp	0x8dfb


0x8dbc:	mov	r15, qword ptr [rbx]
0x8dbf:	mov	rdi, rbp
0x8dc2:	mov	rsi, r15
0x8dc5:	call	0x8b90


0x8d0f:	movss	xmm1, dword ptr [rdx + 0xc]
0x8d14:	ucomiss	xmm1, dword ptr [rip + 0x2fe1]
0x8d1b:	jbe	0x8d50


0x8b55:	add	rdi, 2
0x8b59:	cmp	rdi, -1
0x8b5d:	jne	0x8af8


0x8b1c:	mov	r8d, 0x10
0x8b22:	mov	esi, 9
0x8b27:	mov	ecx, 3
0x8b2c:	jmp	0x8b39




0x89b8:	mov	rax, qword ptr [rdi + 8]
0x89bc:	cmp	qword ptr [rsi], rax
0x89bf:	jne	0x898b


0x898b:	lea	r8, [rdx + 1]
0x898f:	xor	eax, eax
0x8991:	test	rdx, r8
0x8994:	mov	qword ptr [rdi + 0x10], r8
0x8998:	je	0x89d0




0x81d0:	mov	rsi, rbp
0x81d3:	xor	edx, edx
0x81d5:	call	0x64b0


0x7f8a:	cmp	ax, 2
0x7f8e:	movzx	ecx, word ptr [rbp + 0x70]
0x7f92:	je	0x8080


0x7ef0:	mov	rbx, rdi
0x7ef3:	mov	rdi, rbx
0x7ef6:	call	0x1d30


0x7df8:	mov	rbx, qword ptr [rdi + 8]
0x7dfc:	call	0x1d30


0x7de0:	call	0x1d30


0x7a48:	mov	r13, rdi
0x7a4b:	mov	esi, 1
0x7a50:	mov	edi, 0x80
0x7a55:	mov	r14, rdx
0x7a58:	call	0x1b30


0x74cc:	mov	edi, dword ptr [r15 + 0x2c]
0x74d0:	lea	rcx, [rsp + 0x64]
0x74d5:	call	0x9f10


0x74d0:	lea	rcx, [rsp + 0x64]
0x74d5:	call	0x9f10


0x75b8:	xor	edx, edx
0x75ba:	cmp	qword ptr [rbp + 0x58], 0
0x75bf:	setne	dl
0x75c2:	shl	edx, 0x11
0x75c5:	jmp	0x74b7




0x6fc5:	add	rsp, 0x28
0x6fc9:	ret	


0x701e:	call	0x1a40


0x6f9f:	mov	rcx, qword ptr [rsi]
0x6fa2:	cmp	qword ptr [rcx + 0x10], 0
0x6fa7:	je	0x7023


0x6eb0:	mov	byte ptr [rsp + 0xf], 0
0x6eb5:	jmp	0x6cc4


0x6d79:	test	bl, 2
0x6d7c:	mov	r15d, r12d
0x6d7f:	mov	byte ptr [rsp + 0xf], 0
0x6d84:	jne	0x6cf0


0x6d43:	xor	ebx, ebx
0x6d45:	mov	rcx, qword ptr [rsp + 0xa8]
0x6d4d:	xor	rcx, qword ptr fs:[0x28]
0x6d56:	mov	eax, ebx
0x6d58:	jne	0x6e95


0x6d3a:	test	r12d, r12d
0x6d3d:	jns	0x6df0


0x6ca4:	test	r9d, r9d
0x6ca7:	jne	0x6d35




0x1bf0:	jmp	qword ptr [rip + 0x20c33a]


0x6a71:	test	esi, esi
0x6a73:	jns	0x6aa0


0x6a75:	mov	dword ptr [rbx + 0x2c], ebp
0x6a78:	add	rsp, 8
0x6a7c:	pop	rbx
0x6a7d:	pop	rbp
0x6a7e:	ret	


0x1a40:	jmp	qword ptr [rip + 0x20c412]


0x1b00:	jmp	qword ptr [rip + 0x20c3b2]


0x1980:	jmp	qword ptr [rip + 0x20c472]


0x66e0:	add	rdx, 8
0x66e4:	mov	qword ptr [rdx - 8], rbx
0x66e8:	mov	rbx, qword ptr [rbx + 0x10]
0x66ec:	test	rbx, rbx
0x66ef:	jne	0x66e0


0x1b80:	jmp	qword ptr [rip + 0x20c372]


0x6538:	mov	rdx, rsi
0x653b:	mov	esi, dword ptr [r12 + 0x2c]
0x6540:	mov	r8d, 0x100
0x6546:	mov	rcx, rbx
0x6549:	mov	edi, 1
0x654e:	call	0x1a90


0x1b30:	jmp	qword ptr [rip + 0x20c39a]


0x5e26:	test	rdx, rdx
0x5e29:	je	0x5dfa


0x5c41:	call	0x56e0


0x5c65:	mov	dword ptr [rsp + 8], r10d
0x5c6a:	jmp	0x5c41


0x5c10:	cmp	r10d, 0x2f
0x5c14:	ja	0x5c6c


0x5b40:	mov	eax, dword ptr [r10]
0x5b43:	cmp	eax, 0x2f
0x5b46:	ja	0x5b8a


0x51c4:	pop	rbx
0x51c5:	mov	dword ptr [rip + 0x208e89], 1
0x51cf:	pop	rbp
0x51d0:	pop	r12
0x51d2:	ret	


0x51b5:	mov	rdi, r12
0x51b8:	call	0x1d30






0x37d0:	mov	eax, esi
0x37d2:	or	eax, 8
0x37d5:	cmp	dword ptr [r12], 2
0x37da:	cmove	esi, eax
0x37dd:	jmp	0x3728


0x2a28:	mov	eax, r14d
0x2a2b:	and	eax, 0xfffffffd
0x2a2e:	cmp	ax, 4
0x2a32:	sete	al
0x2a35:	sub	r14d, 1
0x2a39:	cmp	r14w, 1
0x2a3e:	setbe	dl
0x2a41:	or	eax, edx
0x2a43:	cmp	r12d, -1
0x2a47:	je	0x2bf8


0x2c28:	mov	eax, dword ptr [rbp + 0x90]
0x2c2e:	and	eax, 0xf000
0x2c33:	cmp	eax, 0xa000
0x2c38:	jne	0x2a28


0x2a11:	cmp	qword ptr [rbx + 8], 0
0x2a16:	je	0x3290


0x281b:	mov	rax, r12
0x281e:	pop	rbx
0x281f:	pop	rbp
0x2820:	pop	r12
0x2822:	ret	


0x1d38:	jmp	qword ptr [rip + 0x20c2ba]


0xa0f7:	cmp	esi, 4
0xa0fa:	je	0xa1d0


0xa150:	cmp	esi, 0x407
0xa156:	jg	0xa1a0


0x9840:	cvttss2si	rsi, xmm0
0x9845:	jmp	0x96e8


0x96ca:	subss	xmm0, dword ptr [rip + 0x263e]
0x96d2:	movabs	rax, 0x8000000000000000
0x96dc:	cvttss2si	rsi, xmm0
0x96e1:	xor	rsi, rax
0x96e4:	nop	dword ptr [rax]
0x96e8:	mov	rdi, rsi
0x96eb:	call	0x8ad0


0x9808:	add	rsp, 0x60
0x980c:	pop	rbx
0x980d:	pop	rbp
0x980e:	pop	r12
0x9810:	ret	


0x989a:	call	0x1a40


0x9600:	mov	rdi, qword ptr [rbp + 8]
0x9604:	test	rdi, rdi
0x9607:	je	0x9621


0x95e6:	add	rbp, 0x10
0x95ea:	cmp	rax, rbp
0x95ed:	ja	0x95b8


0x95c1:	mov	rbx, rbp
0x95c4:	jmp	0x95d3


0x9560:	mov	qword ptr [r12], 0
0x9568:	mov	qword ptr [r12 + 8], 0
0x9571:	add	r12, 0x10
0x9575:	cmp	qword ptr [rbp + 8], r12
0x9579:	ja	0x9510


0x955a:	mov	rdi, qword ptr [r12]
0x955e:	call	rax


0x9536:	mov	rdx, qword ptr [rbx + 8]
0x953a:	mov	rcx, qword ptr [rbp + 0x48]
0x953e:	mov	qword ptr [rbx], 0
0x9545:	test	rdx, rdx
0x9548:	mov	qword ptr [rbx + 8], rcx
0x954c:	mov	qword ptr [rbp + 0x48], rbx
0x9550:	mov	rbx, rdx
0x9553:	jne	0x9528


0x952d:	mov	rdi, qword ptr [rbx]
0x9530:	call	rax


0x924a:	mov	r8, rax
0x924d:	add	r9, 0x10
0x9251:	cmp	qword ptr [rdi + 8], r9
0x9255:	ja	0x920c


0x9159:	mov	rax, qword ptr [rdx]
0x915c:	test	rax, rax
0x915f:	je	0x9150


0x8fc8:	mov	rax, qword ptr [rax + 8]
0x8fcc:	add	rdx, 1
0x8fd0:	test	rax, rax
0x8fd3:	jne	0x8fc8


0x8f50:	mov	rax, qword ptr [rax + 8]
0x8f54:	add	rdx, 1
0x8f58:	test	rax, rax
0x8f5b:	jne	0x8f50


0x8ef8:	mov	rdx, qword ptr [rdx + 8]
0x8efc:	add	rcx, 1
0x8f00:	test	rdx, rdx
0x8f03:	jne	0x8ef8


0x8dfb:	test	r14b, r14b
0x8dfe:	mov	qword ptr [r12 + 8], 0
0x8e07:	jne	0x8e4a


0x8d1d:	movss	xmm1, dword ptr [rdx]
0x8d21:	ucomiss	xmm1, dword ptr [rip + 0x2fd8]
0x8d28:	jb	0x8d50


0x8af8:	mov	rax, rdi
0x8afb:	mov	rcx, rdi
0x8afe:	mul	r9
0x8b01:	mov	rax, rdx
0x8b04:	shr	rax, 1
0x8b07:	lea	rax, [rax + rax*2]
0x8b0b:	sub	rcx, rax
0x8b0e:	cmp	rdi, 9
0x8b12:	mov	rax, rcx
0x8b15:	jbe	0x8b50


0x8b39:	add	rcx, 2
0x8b3d:	xor	edx, edx
0x8b3f:	mov	rax, rdi
0x8b42:	div	rcx
0x8b45:	add	rsi, r8
0x8b48:	cmp	rsi, rdi
0x8b4b:	mov	rax, rdx
0x8b4e:	jb	0x8b30


0x89c1:	mov	eax, 1
0x89c6:	ret	


0x89d0:	test	r8, r8
0x89d3:	je	0x89c1


0x899a:	ret	


0x8080:	lea	eax, [rcx - 0xc]
0x8083:	cmp	ax, 1
0x8087:	jbe	0x8100


0x7f98:	cmp	cx, 1
0x7f9c:	jne	0x7fd0


0x7023:	call	0x1920


0x6fa9:	mov	rsi, qword ptr [rdx + 0x80]
0x6fb0:	cmp	qword ptr [rcx], rsi
0x6fb3:	je	0x7000


0x6cc4:	mov	edi, dword ptr [r13 + 0x2c]
0x6cc8:	mov	rdx, rbp
0x6ccb:	mov	esi, ebx
0x6ccd:	call	0x6c00


0x6d8a:	test	rbp, rbp
0x6d8d:	je	0x6db0


0x6cf0:	lea	rdx, [rsp + 0x10]
0x6cf5:	mov	esi, r15d
0x6cf8:	mov	edi, 1
0x6cfd:	call	0x1bd0


0x6d5e:	add	rsp, 0xb8
0x6d65:	pop	rbx
0x6d66:	pop	rbp
0x6d67:	pop	r12
0x6d69:	pop	r13
0x6d6b:	pop	r14
0x6d6d:	pop	r15
0x6d6f:	ret	


0x6e95:	call	0x1a40


0x6df0:	mov	edi, r12d
0x6df3:	xor	ebx, ebx
0x6df5:	call	0x1ae0


0x6cad:	test	r12d, r12d
0x6cb0:	jns	0x6e9a




0x6aa0:	mov	edi, esi
0x6aa2:	call	0x1ae0










0x1a90:	jmp	qword ptr [rip + 0x20c3ea]




0x5dfa:	mov	qword ptr [rsi], rcx
0x5dfd:	imul	rcx, r9
0x5e01:	mov	rsi, rcx
0x5e04:	jmp	0x5d60


0x2bf8:	cmp	r9d, -1
0x2bfc:	je	0x2e80


0x2a4d:	cmp	dword ptr [r13 + 0x1c], r12d
0x2a51:	je	0x2bf8


0x2c3e:	mov	rax, qword ptr [rsp]
0x2c42:	lea	r13, [rsp + 0x40]
0x2c47:	xor	r8d, r8d
0x2c4a:	mov	rdx, r11
0x2c4d:	mov	edi, 1
0x2c52:	mov	dword ptr [rsp + 0x2c], r9d
0x2c57:	mov	rcx, r13
0x2c5a:	mov	qword ptr [rsp + 0x20], r11
0x2c5f:	mov	esi, dword ptr [rax + 0x2c]
0x2c62:	call	0x1a90


0x3290:	test	cl, cl
0x3292:	jne	0x2c28


0xa1d0:	mov	eax, dword ptr [rsp]
0xa1d3:	cmp	eax, 0x2f
0xa1d6:	ja	0xa2c4


0xa100:	jg	0xa1c0


0xa158:	cmp	esi, 0x406
0xa15e:	jge	0xa1d0


0xa1a0:	cmp	esi, 0x409
0xa1a6:	je	0xa1d0


0x95ef:	mov	rbp, qword ptr [r12]
0x95f3:	cmp	rbp, rax
0x95f6:	jae	0x962c


0x95b8:	mov	rdi, qword ptr [rbp]
0x95bc:	test	rdi, rdi
0x95bf:	je	0x95e6


0x95d3:	call	qword ptr [r12 + 0x40]


0x9528:	test	rax, rax
0x952b:	je	0x9536


0x9260:	ret	


0x9235:	mov	r8, qword ptr [rcx]
0x9238:	add	rax, 1
0x923c:	mov	qword ptr [rsi + rax*8 - 8], r8
0x9241:	mov	rcx, qword ptr [rcx + 8]
0x9245:	test	rcx, rcx
0x9248:	jne	0x9230


0x9150:	add	rdx, 0x10
0x9154:	cmp	rdx, rcx
0x9157:	jae	0x9168


0x9161:	ret	


0x8e09:	mov	rsi, r15
0x8e0c:	mov	rdi, rbp
0x8e0f:	call	0x8b90


0x8d2a:	addss	xmm1, dword ptr [rip + 0x2fc2]
0x8d32:	movss	xmm2, dword ptr [rdx + 4]
0x8d37:	ucomiss	xmm2, xmm1
0x8d3a:	jbe	0x8d50


0x8b30:	add	r8, 8
0x8b34:	test	rdx, rdx
0x8b37:	je	0x8b55


0x89d5:	jmp	0x89a8


0x8100:	mov	edx, 1
0x8105:	mov	rsi, rbp
0x8108:	call	0x64b0


0x8089:	cmp	cx, 1
0x808d:	jne	0x7fd0


0x7f9e:	jmp	0x81c0


0x7fd0:	mov	rbx, qword ptr [rbp + 0x10]
0x7fd4:	test	rbx, rbx
0x7fd7:	jne	0x7fa8


0x7000:	mov	rsi, qword ptr [rdx + 0x78]
0x7004:	cmp	qword ptr [rcx + 8], rsi
0x7008:	jne	0x6fb5


0x6db0:	and	bh, 2
0x6db3:	jne	0x6e48


0x6d8f:	lea	rdx, [rip + 0x4e33]
0x6d96:	mov	ecx, 3
0x6d9b:	mov	rsi, rbp
0x6d9e:	mov	rdi, rdx
0x6da1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1bd0:	jmp	qword ptr [rip + 0x20c34a]


0x1ae0:	jmp	qword ptr [rip + 0x20c3c2]


0x6cb6:	test	bh, 2
0x6cb9:	jne	0x6e00


0x6e9a:	test	bl, 2
0x6e9d:	mov	r15d, r12d
0x6ea0:	mov	byte ptr [rsp + 0xf], 1
0x6ea5:	je	0x6d96




0x2e80:	test	al, al
0x2e82:	je	0x2a83


0x2c02:	cmp	dword ptr [r13 + 0x20], r9d
0x2c06:	sete	cl
0x2c09:	test	al, al
0x2c0b:	je	0x2a7b


0x2a57:	test	al, al
0x2a59:	je	0x3496


0x3298:	mov	eax, r14d
0x329b:	and	eax, 0xfffffffd
0x329e:	cmp	ax, 4
0x32a2:	je	0x32b3


0xa1dc:	add	rax, qword ptr [rsp + 0x10]
0xa1e1:	mov	edx, dword ptr [rax]
0xa1e3:	mov	edi, ebp
0xa1e5:	xor	eax, eax
0xa1e7:	call	0x1990


0xa2c4:	mov	rax, qword ptr [rsp + 8]
0xa2c9:	jmp	0xa1e1


0xa106:	cmp	esi, 2
0xa109:	je	0xa1d0


0xa1c0:	cmp	esi, 9
0xa1c3:	je	0xa120


0xa160:	cmp	esi, 0x401
0xa166:	je	0xa120


0xa1a8:	jl	0xa120


0x9230:	cmp	rdx, rax
0x9233:	je	0x9260


0x8d3c:	movss	xmm3, dword ptr [rip + 0x2fc0]
0x8d44:	ucomiss	xmm3, xmm2
0x8d47:	jb	0x8d50


0x89a8:	mov	rax, qword ptr [rsi]
0x89ab:	mov	qword ptr [rdi], rcx
0x89ae:	mov	qword ptr [rdi + 8], rax
0x89b2:	xor	eax, eax
0x89b4:	ret	


0x8093:	test	dl, 0x40
0x8096:	je	0x8148


0x81c0:	cmp	ax, 4
0x81c4:	jne	0x8093


0x7fd9:	mov	rbx, qword ptr [rbp + 8]
0x7fdd:	cmp	qword ptr [rbx + 0x18], 0
0x7fe2:	jne	0x8550


0x7fa8:	mov	qword ptr [r12], rbx
0x7fac:	mov	rdi, rbp
0x7faf:	call	0x1d30


0x700a:	mov	rdx, qword ptr [rax + 0x78]
0x700e:	mov	rax, qword ptr [rax + 0x80]
0x7015:	mov	qword ptr [rcx + 8], rdx
0x7019:	mov	qword ptr [rcx], rax
0x701c:	jmp	0x6fb5


0x6db9:	mov	edi, r15d
0x6dbc:	call	0x1bf0


0x6e48:	movzx	r14d, byte ptr [rsp + 0xf]
0x6e4e:	mov	esi, r15d
0x6e51:	mov	rdi, r13
0x6e54:	xor	ebx, ebx
0x6e56:	xor	r14d, 1
0x6e5a:	movzx	edx, r14b
0x6e5e:	call	0x6a50


0x6da1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6da3:	seta	al
0x6da6:	sbb	al, 0
0x6da8:	test	al, al
0x6daa:	je	0x6cf0






0x6cbf:	mov	byte ptr [rsp + 0xf], 1
0x6cc4:	mov	edi, dword ptr [r13 + 0x2c]
0x6cc8:	mov	rdx, rbp
0x6ccb:	mov	esi, ebx
0x6ccd:	call	0x6c00


0x6e00:	lea	r15, [r13 + 0x60]
0x6e04:	mov	rdi, r15
0x6e07:	call	0x9dd0


0x6d96:	mov	ecx, 3
0x6d9b:	mov	rsi, rbp
0x6d9e:	mov	rdi, rdx
0x6da1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6eab:	jmp	0x6cf0


0x2a83:	movzx	ecx, byte ptr [rbx + 0x10]
0x2a87:	mov	rax, qword ptr [rsp]
0x2a8b:	test	cl, cl
0x2a8d:	mov	r14d, dword ptr [rax + 0x2c]
0x2a91:	jne	0x2f40


0x2e88:	mov	rdx, qword ptr [rbx + 8]
0x2e8c:	test	rdx, rdx
0x2e8f:	je	0x2a83


0x2a7b:	test	cl, cl
0x2a7d:	je	0x369f


0x2c11:	mov	rdx, qword ptr [rbx + 8]
0x2c15:	test	rdx, rdx
0x2c18:	je	0x2a7b


0x3496:	mov	eax, dword ptr [rbx]
0x3498:	cmp	eax, 2
0x349b:	je	0x34a8


0x2a5f:	mov	rdx, qword ptr [rbx + 8]
0x2a63:	test	rdx, rdx
0x2a66:	je	0x369f


0x32b3:	mov	rax, qword ptr [rsp]
0x32b7:	mov	r14d, dword ptr [rax + 0x2c]
0x32bb:	jmp	0x2a97


0x32a4:	sub	r14d, 1
0x32a8:	cmp	r14w, 1
0x32ad:	ja	0x2a87


0xa1e1:	mov	edx, dword ptr [rax]
0xa1e3:	mov	edi, ebp
0xa1e5:	xor	eax, eax
0xa1e7:	call	0x1990


0xa10f:	jg	0xa120


0xa1c9:	jg	0xa1d0


0xa168:	cmp	esi, 0x402
0xa16e:	je	0xa1d0


0xa1ae:	cmp	esi, 0x40a
0xa1b4:	jne	0xa178


0x8d49:	ucomiss	xmm0, xmm1
0x8d4c:	ja	0x8d55


0x8148:	mov	rdi, qword ptr [r12 + 8]
0x814d:	test	rdi, rdi
0x8150:	je	0x8368


0x809c:	mov	rax, qword ptr [r12 + 0x18]
0x80a1:	cmp	qword ptr [rbp + 0x78], rax
0x80a5:	je	0x8148


0x81ca:	jmp	0x80ab


0x7fe8:	mov	qword ptr [r12], rbx
0x7fec:	mov	rdi, rbp
0x7fef:	call	0x1d30


0x8550:	mov	rax, qword ptr [rbx + 0x48]
0x8554:	mov	rdx, qword ptr [r12 + 0x20]
0x8559:	mov	esi, 3
0x855e:	mov	qword ptr [r12], rbx
0x8562:	mov	rdi, r12
0x8565:	mov	byte ptr [rdx + rax], 0
0x8569:	call	0x7030


0x2a97:	mov	ecx, dword ptr [rsp + 0x18]
0x2a9b:	mov	edx, dword ptr [rsp + 0x10]
0x2a9f:	mov	r8d, 0x100
0x2aa5:	mov	rsi, r11
0x2aa8:	mov	edi, r14d
0x2aab:	call	0x1cc0


0x2f40:	test	r15b, r15b
0x2f43:	jne	0x2fe0


0x2e95:	mov	rdi, qword ptr [rdx]
0x2e98:	cmp	qword ptr [r13 + 8], rdi
0x2e9c:	jne	0x2a83


0x369f:	mov	eax, dword ptr [rbx]
0x36a1:	mov	r15d, 1
0x36a7:	cmp	eax, 2
0x36aa:	je	0x2bd2


0x2c1e:	jmp	0x2a6e


0x34a8:	mov	r15d, 1
0x34ae:	jmp	0x2bd2


0x349d:	test	eax, eax
0x349f:	je	0x36b8


0x2a6c:	xor	ecx, ecx
0x2a6e:	mov	rax, qword ptr [rdx]
0x2a71:	cmp	qword ptr [r13 + 8], rax
0x2a75:	je	0x2ea8


0x2a87:	mov	rax, qword ptr [rsp]
0x2a8b:	test	cl, cl
0x2a8d:	mov	r14d, dword ptr [rax + 0x2c]
0x2a91:	jne	0x2f40


0xa111:	cmp	esi, 1
0xa114:	jne	0xa178


0xa1cb:	cmp	esi, 8
0xa1ce:	jne	0xa178


0xa170:	cmp	esi, 0x400
0xa176:	je	0xa1d0


0xa1b6:	jmp	0xa120


0xa178:	mov	eax, dword ptr [rsp]
0xa17b:	cmp	eax, 0x2f
0xa17e:	ja	0xa2ba


0x8368:	mov	esi, 3
0x836d:	mov	rdi, r12
0x8370:	call	0x7030


0x8156:	test	dh, 0x10
0x8159:	jne	0x8352


0x80ab:	test	byte ptr [rbp + 0x72], 2
0x80af:	jne	0x8590


0x1cc0:	jmp	qword ptr [rip + 0x20c2d2]


0x2f49:	mov	eax, dword ptr [r13 + 0x18]
0x2f4d:	and	eax, 0xf000
0x2f52:	cmp	eax, 0x8000
0x2f57:	je	0x3308


0x2fe0:	mov	ecx, dword ptr [rsp + 0x18]
0x2fe4:	mov	edx, dword ptr [rsp + 0x10]
0x2fe8:	xor	r8d, r8d
0x2feb:	mov	rsi, r11
0x2fee:	mov	edi, r14d
0x2ff1:	call	0x1cc0


0x2ea2:	mov	ecx, eax
0x2ea4:	nop	dword ptr [rax]
0x2ea8:	mov	rax, qword ptr [rdx + 8]
0x2eac:	cmp	qword ptr [r13], rax
0x2eb0:	jne	0x2a7b


0x2bd2:	cmp	byte ptr [rbx + 4], 0
0x2bd6:	jne	0x2e50


0x36b0:	test	eax, eax
0x36b2:	jne	0x2bd2


0x2a6e:	mov	rax, qword ptr [rdx]
0x2a71:	cmp	qword ptr [r13 + 8], rax
0x2a75:	je	0x2ea8


0x36b8:	test	r13, r13
0x36bb:	jne	0x36d0


0x2ea8:	mov	rax, qword ptr [rdx + 8]
0x2eac:	cmp	qword ptr [r13], rax
0x2eb0:	jne	0x2a7b


0xa184:	add	rax, qword ptr [rsp + 0x10]
0xa189:	mov	rdx, qword ptr [rax]
0xa18c:	mov	edi, ebp
0xa18e:	xor	eax, eax
0xa190:	call	0x1990


0xa2ba:	mov	rax, qword ptr [rsp + 8]
0xa2bf:	jmp	0xa189


0x815f:	mov	rcx, qword ptr [rbp + 0x30]
0x8163:	mov	edx, 0xffffffff
0x8168:	mov	rsi, rbp
0x816b:	mov	rdi, r12
0x816e:	call	0x6c40


0x8352:	and	dh, 0xef
0x8355:	mov	dword ptr [r12 + 0x48], edx
0x835a:	call	0x6820


0x80b5:	mov	rdi, qword ptr [r12 + 8]
0x80ba:	test	rdi, rdi
0x80bd:	je	0x80cd


0x8590:	mov	edi, dword ptr [rbp + 0x44]
0x8593:	call	0x1ae0




0x3308:	mov	dword ptr [rsp + 0x20], 0x900
0x3310:	jmp	0x2f6c


0x2f5d:	cmp	eax, 0x4000
0x2f62:	mov	dword ptr [rsp + 0x20], 0x10900
0x2f6a:	jne	0x2fe0


0x2eb6:	lea	rdx, [rip + 0x8351]
0x2ebd:	mov	rsi, qword ptr [rsp + 8]
0x2ec2:	mov	ecx, 2
0x2ec7:	mov	rdi, rdx
0x2eca:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2bdc:	mov	rdi, qword ptr [rsp]
0x2be0:	mov	edx, 4
0x2be5:	mov	rsi, rbp
0x2be8:	call	0x86d0


0x2e50:	mov	rbx, qword ptr [rsp + 0x168]
0x2e58:	xor	rbx, qword ptr fs:[0x28]
0x2e61:	mov	eax, r15d
0x2e64:	jne	0x369a


0x36bd:	mov	r15d, 1
0x36c3:	mov	dword ptr [rsp + 0x2c], 4
0x36cb:	jmp	0x2d8f


0x36d0:	mov	dword ptr [rsp + 0x2c], 4
0x36d8:	mov	r15d, 1
0x36de:	jmp	0x2afb


0xa189:	mov	rdx, qword ptr [rax]
0xa18c:	mov	edi, ebp
0xa18e:	xor	eax, eax
0xa190:	call	0x1990


0x80cd:	mov	edi, dword ptr [r12 + 0x48]
0x80d2:	mov	r10d, 6
0x80d8:	lea	rsi, [r12 + 0x58]
0x80dd:	mov	word ptr [rbp + 0x70], r10w
0x80e2:	mov	rdx, rbp
0x80e5:	call	0x6f70


0x80bf:	call	0x6820


0x2f6c:	mov	edx, dword ptr [rsp + 0x20]
0x2f70:	mov	rsi, r11
0x2f73:	mov	edi, r14d
0x2f76:	mov	dword ptr [rsp + 0x30], r9d
0x2f7b:	mov	byte ptr [rsp + 0x2c], cl
0x2f7f:	mov	qword ptr [rsp + 0x38], r11
0x2f84:	call	0x1af0


0x2eca:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2ecc:	seta	al
0x2ecf:	sbb	al, 0
0x2ed1:	test	al, al
0x2ed3:	jne	0x34b8


0x2e6a:	add	rsp, 0x178
0x2e71:	pop	rbx
0x2e72:	pop	rbp
0x2e73:	pop	r12
0x2e75:	pop	r13
0x2e77:	pop	r14
0x2e79:	pop	r15
0x2e7b:	ret	


0x369a:	call	0x1a40


0x2d8f:	mov	r12, qword ptr [rbx + 0x20]
0x2d93:	mov	r14, qword ptr [rbx + 0x18]
0x2d97:	xor	r13d, r13d
0x2d9a:	mov	qword ptr [rsp + 0x10], 0
0x2da3:	jmp	0x2b1d


0x2afb:	mov	edi, dword ptr [r13 + 0x1c]
0x2aff:	call	0x2900


0x1af0:	jmp	qword ptr [rip + 0x20c3ba]


0x2ed9:	mov	rsi, qword ptr [rsp + 8]
0x2ede:	mov	edi, 4
0x2ee3:	call	0x5370


0x34b8:	mov	esi, 4
0x34bd:	mov	edi, 1
0x34c2:	call	0x5250


0x2b1d:	mov	rsi, r12
0x2b20:	mov	rdi, r14
0x2b23:	call	0x27d0




0x2b28:	test	r12, r12
0x2b2b:	mov	esi, 0
0x2b30:	mov	qword ptr [rsp + 0x18], rax
0x2b35:	cmovne	rsi, r13
0x2b39:	test	r14, r14
0x2b3c:	je	0x30a0


0x30a0:	xor	edi, edi
0x30a2:	call	0x27d0


0x2b42:	mov	rdi, qword ptr [rsp + 0x10]
0x2b47:	call	0x27d0


0x2b4c:	mov	qword ptr [rsp + 0x20], rax
0x2b51:	mov	eax, dword ptr [rsp + 0x2c]
0x2b55:	cmp	eax, 3
0x2b58:	je	0x3070


0x3070:	cmp	qword ptr [rsp + 0x20], 0
0x3076:	mov	edx, 5
0x307b:	je	0x3390


0x2b5e:	cmp	eax, 4
0x2b61:	jne	0x32c0


0x3390:	test	r14, r14
0x3393:	lea	rsi, [rip + 0x7d46]
0x339a:	je	0x3460


0x3081:	test	r14, r14
0x3084:	je	0x3238


0x2b67:	lea	rsi, [rip + 0x85c2]
0x2b6e:	mov	edx, 5
0x2b73:	xor	edi, edi
0x2b75:	call	0x19f0


0x32c0:	lea	rsi, [rip + 0x7d41]
0x32c7:	mov	edx, 5
0x32cc:	xor	edi, edi
0x32ce:	call	0x19f0


0x3460:	test	r12, r12
0x3463:	lea	rsi, [rip + 0x7c9e]
0x346a:	jne	0x33a0


0x33a0:	xor	edi, edi
0x33a2:	call	0x19f0


0x3238:	test	r12, r12
0x323b:	je	0x3580


0x308a:	lea	rsi, [rip + 0x7fc7]
0x3091:	xor	edi, edi
0x3093:	call	0x19f0


0x3470:	lea	rsi, [rip + 0x7c41]
0x3477:	jmp	0x33a0


0x3580:	lea	rsi, [rip + 0x7b31]
0x3587:	xor	edi, edi
0x3589:	call	0x19f0


0x3241:	lea	rsi, [rip + 0x7e40]
0x3248:	xor	edi, edi
0x324a:	call	0x19f0


0x30a7:	mov	qword ptr [rsp + 0x20], rax
0x30ac:	mov	eax, dword ptr [rsp + 0x2c]
0x30b0:	cmp	eax, 3
0x30b3:	je	0x3070


0x30b5:	cmp	eax, 4
0x30b8:	jne	0x3210


0x30be:	test	r12, r12
0x30c1:	mov	edx, 5
0x30c6:	je	0x3448


0x3210:	test	r12, r12
0x3213:	mov	edx, 5
0x3218:	je	0x3480


0x3448:	lea	rsi, [rip + 0x7a10]
0x344f:	xor	edi, edi
0x3451:	call	0x19f0


0x30cc:	lea	rsi, [rip + 0x7d70]
0x30d3:	xor	edi, edi
0x30d5:	call	0x19f0


0x3480:	lea	rsi, [rip + 0x799e]
0x3487:	xor	edi, edi
0x3489:	call	0x19f0


0x321e:	lea	rsi, [rip + 0x7e0b]
0x3225:	xor	edi, edi
0x3227:	call	0x19f0


0x80ea:	pop	rbx
0x80eb:	mov	rax, rbp
0x80ee:	pop	rbp
0x80ef:	pop	r12
0x80f1:	pop	r13
0x80f3:	pop	r14
0x80f5:	ret	


0x2bed:	jmp	0x2e50


0x8173:	test	eax, eax
0x8175:	je	0x8432


0x8432:	mov	rbp, qword ptr [r12 + 8]
0x8437:	jmp	0x8386


0x817b:	call	0x1930


0x8386:	mov	qword ptr [r12 + 8], 0
0x838f:	jmp	0x8302


0x8302:	mov	rax, qword ptr [rbp + 8]
0x8306:	lea	rsi, [rbp + 0x108]
0x830d:	mov	rdi, qword ptr [rax + 0x48]
0x8311:	mov	rax, qword ptr [rax + 0x38]
0x8315:	cmp	byte ptr [rax + rdi - 1], 0x2f
0x831a:	lea	rdx, [rdi - 1]
0x831e:	cmove	rdi, rdx
0x8322:	add	rdi, qword ptr [r12 + 0x20]
0x8327:	mov	byte ptr [rdi], 0x2f
0x832a:	mov	rax, qword ptr [rbp + 0x60]
0x832e:	add	rdi, 1
0x8332:	lea	rdx, [rax + 1]
0x8336:	call	0x1c30


0x1c30:	jmp	qword ptr [rip + 0x20c31a]




0x2328:	mov	byte ptr [rip + 0x20bd99], 1
0x232f:	pop	rbp
0x2330:	ret	


0x6a89:	test	eax, eax
0x6a8b:	js	0x6a75


0x6a8d:	mov	edi, eax
0x6a8f:	call	0x1ae0


0x6e63:	jmp	0x6d45


0x6d45:	mov	rcx, qword ptr [rsp + 0xa8]
0x6d4d:	xor	rcx, qword ptr fs:[0x28]
0x6d56:	mov	eax, ebx
0x6d58:	jne	0x6e95


0x6b0f:	jmp	0x6ae8


0x80c4:	mov	qword ptr [r12 + 8], 0
0x80cd:	mov	edi, dword ptr [r12 + 0x48]
0x80d2:	mov	r10d, 6
0x80d8:	lea	rsi, [r12 + 0x58]
0x80dd:	mov	word ptr [rbp + 0x70], r10w
0x80e2:	mov	rdx, rbp
0x80e5:	call	0x6f70


0x835f:	mov	qword ptr [r12 + 8], 0
0x8368:	mov	esi, 3
0x836d:	mov	rdi, r12
0x8370:	call	0x7030


0x6e0c:	test	al, al
0x6e0e:	mov	byte ptr [rsp + 0xf], al
0x6e12:	jne	0x6cc4


0x6e18:	mov	rdi, r15
0x6e1b:	call	0x9e20


0x6e20:	test	eax, eax
0x6e22:	mov	r15d, eax
0x6e25:	mov	ebx, dword ptr [r13 + 0x48]
0x6e29:	js	0x6cbf


0x6e2f:	test	bl, 2
0x6e32:	mov	r12d, eax
0x6e35:	mov	byte ptr [rsp + 0xf], 1
0x6e3a:	je	0x6db0


0x6e40:	jmp	0x6cf0


0x6894:	test	al, al
0x6896:	je	0x6880


0x6880:	mov	rdi, rbx
0x6883:	call	0x9e20


0x6898:	pop	rbx
0x6899:	ret	


0x6888:	test	eax, eax
0x688a:	jns	0x68a0


0x68a0:	mov	edi, eax
0x68a2:	call	0x1ae0


0x6af1:	add	rsp, 8
0x6af5:	mov	eax, ebp
0x6af7:	pop	rbx
0x6af8:	pop	rbp
0x6af9:	ret	


0x6f4d:	test	al, al
0x6f4f:	je	0x6f31


0x6f31:	pop	rbx
0x6f32:	mov	eax, 1
0x6f37:	pop	rbp
0x6f38:	pop	r12
0x6f3a:	ret	


0x6f51:	mov	edx, 2
0x6f56:	mov	qword ptr [rbx], rbx
0x6f59:	mov	word ptr [rbx + 0x70], dx
0x6f5d:	pop	rbx
0x6f5e:	pop	rbp
0x6f5f:	pop	r12
0x6f61:	ret	


0x96f0:	mov	edx, 8
0x96f5:	mov	rbx, rax
0x96f8:	xor	ecx, ecx
0x96fa:	mov	rax, rdx
0x96fd:	mul	rbx
0x9700:	jo	0x989f


0x989f:	mov	ecx, 1
0x98a4:	jmp	0x9706


0x9706:	test	rax, rax
0x9709:	mov	eax, 1
0x970e:	cmovs	rcx, rax
0x9712:	test	rbx, rbx
0x9715:	je	0x97f0


0x971b:	and	ecx, 1
0x971e:	jne	0x97f0


0x9724:	cmp	qword ptr [rbp + 0x10], rbx
0x9728:	je	0x9850


0x9850:	mov	ebx, 1
0x9855:	jmp	0x97f2


0x972e:	mov	esi, 0x10
0x9733:	mov	rdi, rbx
0x9736:	call	0x1b30


0x97f2:	mov	rcx, qword ptr [rsp + 0x58]
0x97f7:	xor	rcx, qword ptr fs:[0x28]
0x9800:	mov	eax, ebx
0x9802:	jne	0x989a


0x69e9:	cmp	rax, 0x52654973
0x69ef:	je	0x6a40


0x6a40:	mov	eax, 2
0x6a45:	add	rsp, 8
0x6a49:	ret	


0x69f1:	jle	0x6a20


0x6a20:	cmp	rax, 0x6969
0x6a26:	je	0x6a35


0x69f3:	cmp	rax, 0x58465342
0x69f9:	je	0x6a40


0x6a35:	xor	eax, eax
0x6a37:	add	rsp, 8
0x6a3b:	ret	


0x6a28:	cmp	rax, 0x9fa0
0x6a2e:	je	0x6a35


0x69fb:	mov	edx, 0xff534d42
0x6a00:	cmp	rax, rdx
0x6a03:	je	0x6a35


0x6a30:	test	rax, rax
0x6a33:	jne	0x6a0d


0x6a05:	cmp	rax, 0x5346414f
0x6a0b:	je	0x6a35


0x6a0d:	mov	eax, 1
0x6a12:	add	rsp, 8
0x6a16:	ret	


0xa3b1:	test	rbp, rbp
0xa3b4:	je	0xa3d6


0xa3d6:	add	rsp, 8
0xa3da:	pop	rbx
0xa3db:	pop	rbp
0xa3dc:	pop	r12
0xa3de:	pop	r13
0xa3e0:	pop	r14
0xa3e2:	pop	r15
0xa3e4:	ret	


0xa3b6:	xor	ebx, ebx
0xa3b8:	nop	dword ptr [rax + rax]
0xa3c0:	mov	rdx, r15
0xa3c3:	mov	rsi, r14
0xa3c6:	mov	edi, r13d
0xa3c9:	call	qword ptr [r12 + rbx*8]


0x833b:	movzx	eax, word ptr [rbp + 0x70]
0x833f:	jmp	0x829e


0x829e:	cmp	ax, 0xb
0x82a2:	mov	qword ptr [r12], rbp
0x82a6:	je	0x8128


0x8128:	mov	rax, qword ptr [rbp + 0xa8]
0x812f:	cmp	rax, 2
0x8133:	je	0x84d8


0x82ac:	cmp	ax, 1
0x82b0:	jne	0x80ea


0x84d8:	mov	rbx, qword ptr [rbp + 8]
0x84dc:	cmp	qword ptr [rbx + 0x68], 0
0x84e1:	jne	0x84f4


0x8139:	cmp	rax, 1
0x813d:	je	0x80ea


0x82b6:	cmp	qword ptr [rbp + 0x58], 0
0x82bb:	jne	0x82c6


0x84e3:	mov	eax, dword ptr [r12 + 0x48]
0x84e8:	and	eax, 0x18
0x84eb:	cmp	eax, 0x18
0x84ee:	je	0x864d


0x84f4:	xor	edx, edx
0x84f6:	mov	rsi, rbp
0x84f9:	mov	rdi, r12
0x84fc:	call	0x64b0


0x813f:	call	0x1920


0x82bd:	mov	rax, qword ptr [rbp + 0x78]
0x82c1:	mov	qword ptr [r12 + 0x18], rax
0x82c6:	mov	edi, dword ptr [r12 + 0x48]
0x82cb:	lea	rsi, [r12 + 0x58]
0x82d0:	mov	rdx, rbp
0x82d3:	call	0x6ec0


0x82c6:	mov	edi, dword ptr [r12 + 0x48]
0x82cb:	lea	rsi, [r12 + 0x58]
0x82d0:	mov	rdx, rbp
0x82d3:	call	0x6ec0


0x864d:	mov	esi, dword ptr [r12 + 0x2c]
0x8652:	mov	rdi, rbx
0x8655:	call	0x69e0


0x865a:	cmp	eax, 2
0x865d:	jne	0x84f4


0x8663:	movzx	eax, word ptr [rbp + 0x70]
0x8667:	jmp	0x82ac


0x82d8:	test	al, al
0x82da:	jne	0x80ea


0x82e0:	call	0x1930


0x2f89:	test	eax, eax
0x2f8b:	mov	r8d, eax
0x2f8e:	movzx	ecx, byte ptr [rsp + 0x2c]
0x2f93:	mov	r9d, dword ptr [rsp + 0x30]
0x2f98:	jns	0x3148


0x2f9e:	call	0x1930


0x3148:	lea	rdx, [rsp + 0xd0]
0x3150:	mov	esi, r8d
0x3153:	mov	edi, 1
0x3158:	mov	dword ptr [rsp + 0x20], r8d
0x315d:	mov	dword ptr [rsp + 0x30], r9d
0x3162:	mov	byte ptr [rsp + 0x2c], cl
0x3166:	call	0x1bd0


0x2ff6:	test	eax, eax
0x2ff8:	sete	r15b
0x2ffc:	jmp	0x2ac6


0x2ac6:	test	r15b, r15b
0x2ac9:	jne	0x3008


0x2acf:	movzx	r15d, byte ptr [rbx + 0x11]
0x2ad4:	test	r15b, r15b
0x2ad7:	je	0x30e8


0x3008:	mov	eax, dword ptr [rbx]
0x300a:	cmp	eax, 2
0x300d:	je	0x2bd2


0x30e8:	mov	rsi, qword ptr [rsp + 8]
0x30ed:	mov	edi, 4
0x30f2:	call	0x5370


0x2add:	mov	eax, dword ptr [rbx]
0x2adf:	xor	r15d, r15d
0x2ae2:	cmp	eax, 2
0x2ae5:	je	0x2bd2


0x3013:	mov	esi, dword ptr [rsp + 0x10]
0x3017:	cmp	esi, -1
0x301a:	je	0x3034


0x2aeb:	test	eax, eax
0x2aed:	jne	0x2bd2


0x3034:	mov	esi, dword ptr [rsp + 0x18]
0x3038:	cmp	esi, -1
0x303b:	je	0x3260


0x301c:	cmp	dword ptr [r13 + 0x1c], esi
0x3020:	mov	r15d, 1
0x3026:	mov	dword ptr [rsp + 0x2c], 2
0x302e:	jne	0x2afb


0x2af3:	mov	dword ptr [rsp + 0x2c], 3
0x2afb:	mov	edi, dword ptr [r13 + 0x1c]
0x2aff:	call	0x2900


0x3260:	test	eax, eax
0x3262:	jne	0x34a8


0x3041:	cmp	dword ptr [r13 + 0x20], esi
0x3045:	mov	r15d, 1
0x304b:	mov	dword ptr [rsp + 0x2c], 2
0x3053:	jne	0x2afb


0x3268:	mov	r15d, 1
0x326e:	jmp	0x3061


0x3059:	test	eax, eax
0x305b:	jne	0x2bd2


0x3061:	mov	dword ptr [rsp + 0x2c], 4
0x3069:	jmp	0x2afb


0x2ab0:	test	eax, eax
0x2ab2:	sete	r15b
0x2ab6:	je	0x2ac6


0x2ab8:	call	0x1930


0x68a7:	jmp	0x688c


0x6a94:	mov	dword ptr [rbx + 0x2c], ebp
0x6a97:	add	rsp, 8
0x6a9b:	pop	rbx
0x6a9c:	pop	rbp
0x6a9d:	ret	


0x8598:	jmp	0x80b5


0x6aa7:	mov	dword ptr [rbx + 0x2c], ebp
0x6aaa:	add	rsp, 8
0x6aae:	pop	rbx
0x6aaf:	pop	rbp
0x6ab0:	ret	


0x6dfa:	jmp	0x6d45


0x316b:	test	eax, eax
0x316d:	mov	r8d, dword ptr [rsp + 0x20]
0x3172:	jne	0x3420


0x3178:	mov	rax, qword ptr [rsp + 0xd8]
0x3180:	cmp	qword ptr [r13 + 8], rax
0x3184:	movzx	ecx, byte ptr [rsp + 0x2c]
0x3189:	mov	r9d, dword ptr [rsp + 0x30]
0x318e:	je	0x3510


0x3420:	mov	dword ptr [rsp + 0x18], r8d
0x3425:	call	0x1930


0x3510:	mov	rax, qword ptr [rsp + 0xd0]
0x3518:	cmp	qword ptr [r13], rax
0x351c:	jne	0x3194


0x3194:	mov	dword ptr [rsp + 0x10], r8d
0x3199:	call	0x1930


0x3522:	cmp	r12d, -1
0x3526:	je	0x3648


0x3648:	cmp	r9d, dword ptr [rsp + 0xf0]
0x3650:	jne	0x353a


0x352c:	cmp	r12d, dword ptr [rsp + 0xec]
0x3534:	je	0x3642


0x3656:	mov	edx, dword ptr [rsp + 0x18]
0x365a:	mov	esi, dword ptr [rsp + 0x10]
0x365e:	mov	edi, r8d
0x3661:	mov	byte ptr [rsp + 0x2c], cl
0x3665:	mov	dword ptr [rsp + 0x20], r8d
0x366a:	call	0x1c70


0x353a:	mov	dword ptr [rsp + 0x2c], r8d
0x353f:	mov	byte ptr [rsp + 0x20], cl
0x3543:	call	0x1930


0x3642:	cmp	r9d, -1
0x3646:	je	0x3656


0x1c70:	jmp	qword ptr [rip + 0x20c2fa]




0x6d02:	test	eax, eax
0x6d04:	je	0x6dd0


0x6dd0:	mov	rax, qword ptr [rsp + 0x10]
0x6dd5:	cmp	qword ptr [r14 + 0x78], rax
0x6dd9:	je	0x6e70


0x6d0a:	mov	ebx, 0xffffffff
0x6d0f:	test	r12d, r12d
0x6d12:	jns	0x6d45


0x6e70:	mov	rax, qword ptr [rsp + 0x18]
0x6e75:	cmp	qword ptr [r14 + 0x80], rax
0x6e7c:	jne	0x6ddf


0x6ddf:	call	0x1930


0x6d14:	call	0x1930


0x6e82:	mov	ebx, dword ptr [r13 + 0x48]
0x6e86:	jmp	0x6db0


0x2c67:	test	eax, eax
0x2c69:	jne	0x33e8


0x2c6f:	movzx	r14d, word ptr [rbp + 0x70]
0x2c74:	mov	r11, qword ptr [rsp + 0x20]
0x2c79:	mov	r9d, dword ptr [rsp + 0x2c]
0x2c7e:	jmp	0x2a28


0x33e8:	movzx	r15d, byte ptr [rbx + 0x11]
0x33ed:	test	r15b, r15b
0x33f0:	jne	0x2add


0x33f6:	mov	rsi, qword ptr [rsp + 8]
0x33fb:	mov	edi, 4
0x3400:	call	0x5370


0x6553:	test	eax, eax
0x6555:	jne	0x65f0


0x655b:	mov	eax, dword ptr [rbp + 0x90]
0x6561:	and	eax, 0xf000
0x6566:	cmp	eax, 0x4000
0x656b:	je	0x6590


0x65f0:	call	0x1930


0x6590:	mov	rax, qword ptr [rbp + 0x88]
0x6597:	cmp	rax, 1
0x659b:	jbe	0x6620


0x656d:	cmp	eax, 0xa000
0x6572:	je	0x6648


0x6620:	mov	rax, -1
0x6627:	jmp	0x65b6


0x65a1:	cmp	qword ptr [rbp + 0x58], 0
0x65a6:	jle	0x6620


0x6648:	mov	eax, 0xc
0x664d:	jmp	0x6528


0x6578:	cmp	eax, 0x8000
0x657d:	sete	al
0x6580:	movzx	eax, al
0x6583:	pop	rbx
0x6584:	lea	eax, [rax + rax*4 + 3]
0x6588:	pop	rbp
0x6589:	pop	r12
0x658b:	ret	


0x65b6:	cmp	byte ptr [rbp + 0x108], 0x2e
0x65bd:	mov	qword ptr [rbp + 0x68], rax
0x65c1:	mov	eax, 1
0x65c6:	jne	0x6528


0x65a8:	test	byte ptr [r12 + 0x48], 0x20
0x65ae:	lea	rdx, [rax - 2]
0x65b2:	cmove	rax, rdx
0x65b6:	cmp	byte ptr [rbp + 0x108], 0x2e
0x65bd:	mov	qword ptr [rbp + 0x68], rax
0x65c1:	mov	eax, 1
0x65c6:	jne	0x6528


0x6528:	pop	rbx
0x6529:	pop	rbp
0x652a:	pop	r12
0x652c:	ret	


0x65cc:	cmp	byte ptr [rbp + 0x109], 0
0x65d3:	jne	0x6658


0x65d9:	cmp	qword ptr [rbp + 0x58], 1
0x65de:	sbb	eax, eax
0x65e0:	and	eax, 0xfffffffc
0x65e3:	add	eax, 5
0x65e6:	jmp	0x6528


0x6658:	mov	edx, dword ptr [rbp + 0x108]
0x665e:	and	edx, 0xffff00
0x6664:	cmp	edx, 0x2e00
0x666a:	jne	0x6528


0x6670:	jmp	0x65d9


0x8501:	mov	edx, dword ptr [rbp + 0x90]
0x8507:	mov	word ptr [rbp + 0x70], ax
0x850b:	and	edx, 0xf000
0x8511:	cmp	edx, 0x4000
0x8517:	jne	0x82ac


0x851d:	cmp	qword ptr [rbp + 0x58], 0
0x8522:	je	0x863e


0x863e:	cmp	ax, 1
0x8642:	jne	0x80ea


0x8528:	mov	rcx, qword ptr [rbx + 0x68]
0x852c:	lea	rdx, [rcx - 1]
0x8530:	cmp	rdx, -3
0x8534:	ja	0x853a


0x8648:	jmp	0x82bd


0x8536:	mov	qword ptr [rbx + 0x68], rdx
0x853a:	cmp	ax, 1
0x853e:	jne	0x80ea


0x853a:	cmp	ax, 1
0x853e:	jne	0x80ea


0x8544:	jmp	0x82c6


0x810d:	cmp	ax, 1
0x8111:	mov	word ptr [rbp + 0x70], ax
0x8115:	je	0x845c


0x845c:	mov	esi, dword ptr [r12 + 0x48]
0x8461:	test	sil, 4
0x8465:	je	0x866c


0x811b:	cmp	ax, 0xb
0x811f:	mov	qword ptr [r12], rbp
0x8123:	jne	0x80ea


0x866c:	mov	edi, dword ptr [r12 + 0x2c]
0x8671:	lea	rdx, [rip + 0x3552]
0x8678:	call	0x6c00


0x846b:	mov	qword ptr [r12], rbp
0x846f:	jmp	0x82b6


0x81da:	mov	word ptr [rbp + 0x70], ax
0x81de:	mov	rax, rbp
0x81e1:	pop	rbx
0x81e2:	pop	rbp
0x81e3:	pop	r12
0x81e5:	pop	r13
0x81e7:	pop	r14
0x81e9:	ret	


0x973b:	test	rax, rax
0x973e:	mov	qword ptr [rsp], rax
0x9742:	je	0x97f0


0x9748:	mov	qword ptr [rsp + 0x10], rbx
0x974d:	shl	rbx, 4
0x9751:	mov	qword ptr [rsp + 0x28], r12
0x9756:	add	rbx, rax
0x9759:	mov	rax, qword ptr [rbp + 0x30]
0x975d:	mov	r12, rsp
0x9760:	xor	edx, edx
0x9762:	mov	rsi, rbp
0x9765:	mov	rdi, r12
0x9768:	mov	qword ptr [rsp + 8], rbx
0x976d:	mov	qword ptr [rsp + 0x18], 0
0x9776:	mov	qword ptr [rsp + 0x30], rax
0x977b:	mov	rax, qword ptr [rbp + 0x38]
0x977f:	mov	qword ptr [rsp + 0x20], 0
0x9788:	mov	qword ptr [rsp + 0x38], rax
0x978d:	mov	rax, qword ptr [rbp + 0x40]
0x9791:	mov	qword ptr [rsp + 0x40], rax
0x9796:	mov	rax, qword ptr [rbp + 0x48]
0x979a:	mov	qword ptr [rsp + 0x48], rax
0x979f:	call	0x8d60


0x97a4:	test	al, al
0x97a6:	mov	ebx, eax
0x97a8:	jne	0x9860


0x97ae:	mov	rax, qword ptr [rsp + 0x48]
0x97b3:	mov	edx, 1
0x97b8:	mov	rsi, r12
0x97bb:	mov	rdi, rbp
0x97be:	mov	qword ptr [rbp + 0x48], rax
0x97c2:	call	0x8d60


0x9860:	mov	rdi, qword ptr [rbp]
0x9864:	call	0x1d30


0x97c7:	test	al, al
0x97c9:	je	0x98a9


0x98a9:	call	0x1920


0x97cf:	xor	edx, edx
0x97d1:	mov	rsi, r12
0x97d4:	mov	rdi, rbp
0x97d7:	call	0x8d60


0x97dc:	test	al, al
0x97de:	je	0x98a9


0x97e4:	mov	rdi, qword ptr [rsp]
0x97e8:	call	0x1d30


0x7a5d:	test	rax, rax
0x7a60:	mov	rbx, rax
0x7a63:	je	0x7cbe


0x7cbe:	add	rsp, 0x28
0x7cc2:	mov	rax, rbx
0x7cc5:	pop	rbx
0x7cc6:	pop	rbp
0x7cc7:	pop	r12
0x7cc9:	pop	r13
0x7ccb:	pop	r14
0x7ccd:	pop	r15
0x7ccf:	ret	


0x7a69:	test	bpl, 2
0x7a6d:	mov	qword ptr [rax + 0x40], r14
0x7a71:	jne	0x7cd0


0x7a77:	mov	rdi, qword ptr [r13]
0x7a7b:	mov	dword ptr [rax + 0x48], ebp
0x7a7e:	mov	dword ptr [rbx + 0x2c], 0xffffff9c
0x7a85:	test	rdi, rdi
0x7a88:	je	0x7cef


0x7cd0:	mov	rdi, qword ptr [r13]
0x7cd4:	mov	eax, ebp
0x7cd6:	mov	dword ptr [rbx + 0x2c], 0xffffff9c
0x7cdd:	and	ah, 0xfd
0x7ce0:	or	eax, 4
0x7ce3:	test	rdi, rdi
0x7ce6:	mov	dword ptr [rbx + 0x48], eax
0x7ce9:	jne	0x7a8e


0x7cef:	mov	edx, 0x1000
0x7cf4:	jmp	0x7ac5


0x7a8e:	mov	r15, r13
0x7a91:	xor	r12d, r12d
0x7a94:	nop	dword ptr [rax]
0x7a98:	call	0x1a10


0x7ac5:	lea	rsi, [rbx + 0x30]
0x7ac9:	lea	rdi, [rbx + 0x20]
0x7acd:	call	0x6b20


0x5eef:	test	rax, rax
0x5ef2:	je	0x5ef9


0x5ef4:	add	rsp, 8
0x5ef8:	ret	


0x64dd:	test	eax, eax
0x64df:	je	0x655b


0x64e1:	call	0x1930


0x6701:	mov	r8, qword ptr [rbp + 0x10]
0x6705:	mov	rcx, r12
0x6708:	sub	rcx, 1
0x670c:	mov	rax, qword ptr [r8]
0x670f:	je	0x6780


0x6780:	mov	rdx, rax
0x6783:	jmp	0x673a


0x6711:	mov	rdi, rax
0x6714:	mov	rdx, r8
0x6717:	jmp	0x6723


0x673a:	mov	qword ptr [rdx + 0x10], 0
0x6742:	add	rsp, 8
0x6746:	pop	rbx
0x6747:	pop	rbp
0x6748:	pop	r12
0x674a:	pop	r13
0x674c:	ret	


0x6723:	mov	rsi, qword ptr [rdx + 8]
0x6727:	add	rdx, 8
0x672b:	sub	rcx, 1
0x672f:	mov	qword ptr [rdi + 0x10], rsi
0x6733:	jne	0x6720


0x6735:	mov	rdx, qword ptr [r8 + r12*8 - 8]
0x673a:	mov	qword ptr [rdx + 0x10], 0
0x6742:	add	rsp, 8
0x6746:	pop	rbx
0x6747:	pop	rbp
0x6748:	pop	r12
0x674a:	pop	r13
0x674c:	ret	


0x6720:	mov	rdi, qword ptr [rdx]
0x6723:	mov	rsi, qword ptr [rdx + 8]
0x6727:	add	rdx, 8
0x672b:	sub	rcx, 1
0x672f:	mov	qword ptr [rdi + 0x10], rsi
0x6733:	jne	0x6720


0x6dc1:	mov	ebx, eax
0x6dc3:	jmp	0x6d0f


0x6d0f:	test	r12d, r12d
0x6d12:	jns	0x6d45


0x6ae2:	test	eax, eax
0x6ae4:	setne	bpl
0x6ae8:	lea	rdi, [rbx + 0x60]
0x6aec:	call	0x6870


0x3943:	test	rax, rax
0x3946:	je	0x399d


0x399d:	mov	qword ptr [rip + 0x20a754], rbx
0x39a4:	mov	qword ptr [rip + 0x20a6f5], rbx
0x39ab:	pop	rbx
0x39ac:	ret	


0x3948:	lea	r8, [rax + 1]
0x394c:	mov	rdx, r8
0x394f:	sub	rdx, rbx
0x3952:	cmp	rdx, 6
0x3956:	jle	0x399d


0x3958:	lea	rsi, [rax - 6]
0x395c:	lea	rdi, [rip + 0x78a5]
0x3963:	mov	ecx, 7
0x3968:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3968:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x396a:	seta	dl
0x396d:	sbb	dl, 0
0x3970:	test	dl, dl
0x3972:	jne	0x399d


0x3974:	lea	rdi, [rip + 0x7895]
0x397b:	mov	ecx, 3
0x3980:	mov	rsi, r8
0x3983:	mov	rbx, r8
0x3986:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3986:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3988:	seta	dl
0x398b:	sbb	dl, 0
0x398e:	test	dl, dl
0x3990:	jne	0x399d


0x3992:	lea	rbx, [rax + 4]
0x3996:	mov	qword ptr [rip + 0x20a6e3], rbx
0x399d:	mov	qword ptr [rip + 0x20a754], rbx
0x39a4:	mov	qword ptr [rip + 0x20a6f5], rbx
0x39ab:	pop	rbx
0x39ac:	ret	


0x39ca:	call	0x1920


0x66c5:	test	rax, rax
0x66c8:	mov	rdi, rax
0x66cb:	je	0x6750


0x6750:	mov	rdi, qword ptr [rbp + 0x10]
0x6754:	call	0x1d30


0x66d1:	mov	qword ptr [rbp + 0x10], rax
0x66d5:	test	rbx, rbx
0x66d8:	je	0x66f1


0x5d76:	test	rax, rax
0x5d79:	jne	0x5d80


0x5d7b:	test	rbx, rbx
0x5d7e:	jne	0x5d91


0x5d80:	pop	rbx
0x5d81:	ret	


0x5d91:	call	0x5f50


0x6b42:	test	rax, rax
0x6b45:	je	0x6b78


0x6b78:	mov	rdi, qword ptr [rbx]
0x6b7b:	call	0x1d30


0x6b47:	mov	qword ptr [rbx], rax
0x6b4a:	mov	eax, 1
0x6b4f:	pop	rbx
0x6b50:	ret	


0x7ad2:	test	al, al
0x7ad4:	mov	byte ptr [rsp + 0x16], al
0x7ad8:	je	0x7d79


0x7d79:	mov	rdi, rbx
0x7d7c:	xor	ebx, ebx
0x7d7e:	call	0x1d30


0x7ade:	mov	rsi, qword ptr [r13]
0x7ae2:	test	rsi, rsi
0x7ae5:	je	0x7d90


0x7d90:	xor	r15d, r15d
0x7d93:	test	r14, r14
0x7d96:	jne	0x7b20


0x7aeb:	lea	rsi, [rip + 0x3c4f]
0x7af2:	xor	edx, edx
0x7af4:	mov	rdi, rbx
0x7af7:	call	0x6790


0x7d9c:	xor	r12d, r12d
0x7d9f:	jmp	0x7c3c


0x7b20:	mov	eax, dword ptr [rbx + 0x48]
0x7b23:	shr	eax, 0xa
0x7b26:	and	eax, 1
0x7b29:	mov	byte ptr [rsp + 0x16], al
0x7b2d:	test	rsi, rsi
0x7b30:	je	0x7d9c


0x7c3c:	lea	rsi, [rip + 0x3afe]
0x7c43:	xor	edx, edx
0x7c45:	mov	rdi, rbx
0x7c48:	call	0x6790


0x7b36:	shr	ebp, 0xb
0x7b39:	mov	qword ptr [rsp + 0x18], 0
0x7b42:	xor	r12d, r12d
0x7b45:	xor	ebp, 1
0x7b48:	mov	eax, ebp
0x7b4a:	xor	ebp, ebp
0x7b4c:	and	eax, 1
0x7b4f:	mov	byte ptr [rsp + 0x17], al
0x7b53:	jmp	0x7bcc


0x7bcc:	mov	rdi, rsi
0x7bcf:	mov	qword ptr [rsp + 8], rsi
0x7bd4:	call	0x1a10


0x7072:	test	eax, eax
0x7074:	mov	dword ptr [rsp + 0x64], eax
0x7078:	js	0x75d0


0x75d0:	mov	rdi, qword ptr [rbp + 0x18]
0x75d4:	call	0x1b00


0x707e:	cmp	qword ptr [r15 + 0x40], 0
0x7083:	je	0x7858


0x7858:	mov	qword ptr [rsp + 0x38], 0x186a0
0x7861:	mov	byte ptr [rsp + 0x5f], 1
0x7866:	mov	edi, dword ptr [r15 + 0x48]
0x786a:	jmp	0x709b


0x7089:	mov	qword ptr [rsp + 0x38], -1
0x7092:	mov	edi, dword ptr [r15 + 0x48]
0x7096:	mov	byte ptr [rsp + 0x5f], 1
0x709b:	mov	rcx, qword ptr [rbp + 0x48]
0x709f:	mov	rdx, qword ptr [rbp + 0x38]
0x70a3:	mov	qword ptr [rsp + 0x40], 0
0x70ac:	cmp	byte ptr [rdx + rcx - 1], 0x2f
0x70b1:	lea	rax, [rcx - 1]
0x70b5:	cmovne	rax, rcx
0x70b9:	and	edi, 4
0x70bc:	mov	qword ptr [rsp + 0x48], rax
0x70c1:	je	0x70d3


0x709b:	mov	rcx, qword ptr [rbp + 0x48]
0x709f:	mov	rdx, qword ptr [rbp + 0x38]
0x70a3:	mov	qword ptr [rsp + 0x40], 0
0x70ac:	cmp	byte ptr [rdx + rcx - 1], 0x2f
0x70b1:	lea	rax, [rcx - 1]
0x70b5:	cmovne	rax, rcx
0x70b9:	and	edi, 4
0x70bc:	mov	qword ptr [rsp + 0x48], rax
0x70c1:	je	0x70d3


0x70d3:	mov	rax, qword ptr [rsp + 0x48]
0x70d8:	mov	rbx, qword ptr [r15 + 0x30]
0x70dc:	mov	byte ptr [rsp + 0x5e], 0
0x70e1:	mov	byte ptr [rsp + 0x5d], 0
0x70e6:	mov	qword ptr [rsp + 8], 0
0x70ef:	mov	qword ptr [rsp + 0x10], 0
0x70f8:	add	rax, 1
0x70fc:	mov	qword ptr [rsp + 0x20], rbp
0x7101:	sub	rbx, rax
0x7104:	mov	qword ptr [rsp + 0x18], rax
0x7109:	mov	rax, qword ptr [rbp + 0x58]
0x710d:	mov	qword ptr [rsp + 0x28], rbx
0x7112:	xor	ebx, ebx
0x7114:	add	rax, 1
0x7118:	mov	qword ptr [rsp + 0x30], rax
0x711d:	jmp	0x71ff


0x70c3:	add	rax, qword ptr [r15 + 0x20]
0x70c7:	lea	rbx, [rax + 1]
0x70cb:	mov	byte ptr [rax], 0x2f
0x70ce:	mov	qword ptr [rsp + 0x40], rbx
0x70d3:	mov	rax, qword ptr [rsp + 0x48]
0x70d8:	mov	rbx, qword ptr [r15 + 0x30]
0x70dc:	mov	byte ptr [rsp + 0x5e], 0
0x70e1:	mov	byte ptr [rsp + 0x5d], 0
0x70e6:	mov	qword ptr [rsp + 8], 0
0x70ef:	mov	qword ptr [rsp + 0x10], 0
0x70f8:	add	rax, 1
0x70fc:	mov	qword ptr [rsp + 0x20], rbp
0x7101:	sub	rbx, rax
0x7104:	mov	qword ptr [rsp + 0x18], rax
0x7109:	mov	rax, qword ptr [rbp + 0x58]
0x710d:	mov	qword ptr [rsp + 0x28], rbx
0x7112:	xor	ebx, ebx
0x7114:	add	rax, 1
0x7118:	mov	qword ptr [rsp + 0x30], rax
0x711d:	jmp	0x71ff


0x71ff:	mov	rax, qword ptr [rsp + 0x20]
0x7204:	mov	r13, qword ptr [rax + 0x18]
0x7208:	test	r13, r13
0x720b:	je	0x76d8


0x76d8:	mov	rbp, rax
0x76db:	cmp	byte ptr [rsp + 0x5d], 0
0x76e0:	jne	0x7348


0x7211:	call	0x1930


0x76e6:	test	byte ptr [r15 + 0x48], 4
0x76eb:	je	0x770b


0x7348:	mov	rax, qword ptr [r15 + 8]
0x734c:	mov	rcx, qword ptr [r15 + 0x20]
0x7350:	test	rax, rax
0x7353:	je	0x7380


0x770b:	cmp	qword ptr [rsp + 0x50], 0
0x7711:	jne	0x7780


0x76ed:	mov	rax, qword ptr [rsp + 0x18]
0x76f2:	cmp	qword ptr [r15 + 0x30], rax
0x76f6:	je	0x76fd


0x7380:	mov	rax, qword ptr [rsp + 0x10]
0x7385:	jmp	0x7393


0x7713:	cmp	byte ptr [rsp + 0x5f], 0
0x7718:	je	0x7780


0x7780:	test	rbx, rbx
0x7783:	jne	0x7726


0x76fd:	sub	qword ptr [rsp + 0x40], 1
0x7703:	mov	rax, qword ptr [rsp + 0x40]
0x7708:	mov	byte ptr [rax], 0
0x770b:	cmp	qword ptr [rsp + 0x50], 0
0x7711:	jne	0x7780


0x76f8:	test	rbx, rbx
0x76fb:	jne	0x7703


0x7393:	cmp	qword ptr [rax + 0x58], 0
0x7398:	js	0x76e6


0x7373:	mov	qword ptr [rax + 0x38], rcx
0x7377:	mov	rax, qword ptr [rax + 0x10]
0x737b:	test	rax, rax
0x737e:	jne	0x7358


0x7368:	sub	rdx, qword ptr [rax + 0x38]
0x736c:	add	rdx, rcx
0x736f:	mov	qword ptr [rax + 0x30], rdx
0x7373:	mov	qword ptr [rax + 0x38], rcx
0x7377:	mov	rax, qword ptr [rax + 0x10]
0x737b:	test	rax, rax
0x737e:	jne	0x7358


0x771a:	cmp	dword ptr [rsp + 0x58], 1
0x771f:	je	0x7760


0x7785:	cmp	dword ptr [rsp + 0x58], 3
0x778a:	je	0x7948


0x7726:	cmp	byte ptr [rsp + 0x5e], 0
0x772b:	jne	0x7828


0x7703:	mov	rax, qword ptr [rsp + 0x40]
0x7708:	mov	byte ptr [rax], 0
0x770b:	cmp	qword ptr [rsp + 0x50], 0
0x7711:	jne	0x7780


0x739e:	mov	rdx, qword ptr [rax + 0x30]
0x73a2:	lea	rsi, [rax + 0x108]
0x73a9:	cmp	rdx, rsi
0x73ac:	je	0x73b9


0x7358:	mov	rdx, qword ptr [rax + 0x30]
0x735c:	lea	rsi, [rax + 0x108]
0x7363:	cmp	rdx, rsi
0x7366:	je	0x7373


0x7760:	cmp	qword ptr [rbp + 0x58], 0
0x7765:	jne	0x7896


0x7721:	test	rbx, rbx
0x7724:	je	0x7760


0x7948:	movzx	eax, word ptr [rbp + 0x70]
0x794c:	cmp	ax, 7
0x7950:	je	0x7790


0x7790:	mov	rdi, qword ptr [rsp + 0x10]
0x7795:	call	0x6820


0x7731:	cmp	qword ptr [r15 + 0x40], 0
0x7736:	je	0x75f5


0x7828:	lea	rax, [rip - 0x13af]
0x782f:	mov	rsi, qword ptr [rsp + 0x10]
0x7834:	mov	rdx, rbx
0x7837:	mov	rdi, r15
0x783a:	mov	qword ptr [r15 + 0x40], rax
0x783e:	call	0x6680


0x73b9:	mov	rdx, qword ptr [rax + 0x10]
0x73bd:	mov	qword ptr [rax + 0x38], rcx
0x73c1:	test	rdx, rdx
0x73c4:	jne	0x7390


0x73ae:	sub	rdx, qword ptr [rax + 0x38]
0x73b2:	add	rdx, rcx
0x73b5:	mov	qword ptr [rax + 0x30], rdx
0x73b9:	mov	rdx, qword ptr [rax + 0x10]
0x73bd:	mov	qword ptr [rax + 0x38], rcx
0x73c1:	test	rdx, rdx
0x73c4:	jne	0x7390


0x776b:	mov	rdi, r15
0x776e:	call	0x6ac0


0x7896:	mov	rsi, qword ptr [rbp + 8]
0x789a:	lea	rcx, [rip + 0x4328]
0x78a1:	mov	edx, 0xffffffff
0x78a6:	mov	rdi, r15
0x78a9:	call	0x6c40


0x7956:	cmp	ax, 4
0x795a:	je	0x7790


0x75f5:	mov	rbx, qword ptr [rsp + 0x68]
0x75fa:	xor	rbx, qword ptr fs:[0x28]
0x7603:	mov	rax, qword ptr [rsp + 0x10]
0x7608:	jne	0x79e1


0x773c:	cmp	rbx, 1
0x7740:	je	0x75f5


0x73c6:	mov	rdx, qword ptr [rax + 8]
0x73ca:	jmp	0x7390


0x7390:	mov	rax, rdx
0x7393:	cmp	qword ptr [rax + 0x58], 0
0x7398:	js	0x76e6


0x7960:	mov	esi, 6
0x7965:	mov	word ptr [rbp + 0x70], si
0x7969:	jmp	0x7790


0x760e:	add	rsp, 0x78
0x7612:	pop	rbx
0x7613:	pop	rbp
0x7614:	pop	r12
0x7616:	pop	r13
0x7618:	pop	r14
0x761a:	pop	r15
0x761c:	ret	


0x79e1:	call	0x1a40


0x7746:	mov	rsi, qword ptr [rsp + 0x10]
0x774b:	mov	rdx, rbx
0x774e:	mov	rdi, r15
0x7751:	call	0x6680


0x78ae:	test	eax, eax
0x78b0:	setne	al
0x78b3:	jmp	0x7778


0x7778:	test	al, al
0x777a:	jne	0x7903


0x7903:	mov	edi, 7
0x7908:	mov	word ptr [rbp + 0x70], di
0x790c:	or	dword ptr [r15 + 0x48], 0x2000
0x7914:	mov	rdi, qword ptr [rsp + 0x10]
0x7919:	call	0x6820


0x7773:	test	eax, eax
0x7775:	setne	al
0x7778:	test	al, al
0x777a:	jne	0x7903


0x7756:	mov	qword ptr [rsp + 0x10], rax
0x775b:	jmp	0x75f5


0x7843:	mov	qword ptr [r15 + 0x40], 0
0x784b:	mov	qword ptr [rsp + 0x10], rax
0x7850:	jmp	0x75f5


0x791e:	mov	qword ptr [rsp + 0x10], 0
0x7927:	jmp	0x75f5


0x779a:	mov	qword ptr [rsp + 0x10], 0
0x77a3:	jmp	0x75f5


0x75d9:	cmp	dword ptr [rsp + 0x58], 3
0x75de:	mov	qword ptr [rbp + 0x18], 0
0x75e6:	je	0x780b


0x780b:	mov	r10d, 4
0x7811:	mov	word ptr [rbp + 0x70], r10w
0x7816:	call	0x1930


0x75ec:	mov	qword ptr [rsp + 0x10], 0
0x75f5:	mov	rbx, qword ptr [rsp + 0x68]
0x75fa:	xor	rbx, qword ptr fs:[0x28]
0x7603:	mov	rax, qword ptr [rsp + 0x10]
0x7608:	jne	0x79e1


0x8375:	test	rax, rax
0x8378:	mov	qword ptr [r12 + 8], rax
0x837d:	je	0x8474


0x8474:	mov	edi, dword ptr [r12 + 0x48]
0x8479:	test	edi, 0x2000
0x847f:	jne	0x806e


0x8383:	mov	rbp, rax
0x8386:	mov	qword ptr [r12 + 8], 0
0x838f:	jmp	0x8302


0x8485:	mov	r9d, dword ptr [rbp + 0x40]
0x8489:	test	r9d, r9d
0x848c:	je	0x84a0


0x84a0:	lea	rsi, [r12 + 0x58]
0x84a5:	mov	rdx, rbp
0x84a8:	call	0x6f70


0x848e:	cmp	word ptr [rbp + 0x70], 4
0x8493:	je	0x84a0


0x8495:	mov	r8d, 7
0x849b:	mov	word ptr [rbp + 0x70], r8w
0x84a0:	lea	rsi, [r12 + 0x58]
0x84a5:	mov	rdx, rbp
0x84a8:	call	0x6f70


0x84ad:	jmp	0x80ea


0x856e:	test	rax, rax
0x8571:	mov	rbx, rax
0x8574:	je	0x85c8


0x85c8:	test	byte ptr [r12 + 0x49], 0x20
0x85ce:	jne	0x806e


0x8576:	mov	rdi, rbp
0x8579:	mov	rbp, rbx
0x857c:	call	0x1d30


0x85d4:	mov	rbx, qword ptr [rbp + 8]
0x85d8:	jmp	0x7fe8


0x8a28:	mov	edi, eax
0x8a2a:	call	0x9f90


0x8a2f:	mov	rcx, qword ptr [rsp + 0x18]
0x8a34:	xor	rcx, qword ptr fs:[0x28]
0x8a3d:	jne	0x8a69


0x8a3f:	add	rsp, 0x58
0x8a43:	ret	


0x8a69:	call	0x1a40


0x571c:	lea	rsi, [rip + 0x5fd8]
0x5723:	xor	edi, edi
0x5725:	mov	edx, 5
0x572a:	call	0x19f0


0x5831:	jmp	0x571c


0x8ffb:	lea	rdx, [rip + 0x2c7a]
0x9002:	xor	eax, eax
0x9004:	mov	rcx, rbp
0x9007:	mov	esi, 1
0x900c:	mov	rdi, r12
0x900f:	call	0x1cf0


0x9014:	test	r13, r13
0x9017:	js	0x9080


0x9080:	mov	rax, r13
0x9083:	mov	rdx, r13
0x9086:	pxor	xmm0, xmm0
0x908a:	shr	rax, 1
0x908d:	and	edx, 1
0x9090:	or	rax, rdx
0x9093:	test	rbp, rbp
0x9096:	cvtsi2sd	xmm0, rax
0x909b:	addsd	xmm0, xmm0
0x909f:	mulsd	xmm0, qword ptr [rip + 0x2c71]
0x90a7:	jns	0x902f


0x9019:	pxor	xmm0, xmm0
0x901d:	test	rbp, rbp
0x9020:	cvtsi2sd	xmm0, r13
0x9025:	mulsd	xmm0, qword ptr [rip + 0x2ceb]
0x902d:	js	0x90a9


0x90a9:	mov	rax, rbp
0x90ac:	pxor	xmm1, xmm1
0x90b0:	shr	rax, 1
0x90b3:	and	ebp, 1
0x90b6:	or	rax, rbp
0x90b9:	cvtsi2sd	xmm1, rax
0x90be:	addsd	xmm1, xmm1
0x90c2:	jmp	0x9038


0x902f:	pxor	xmm1, xmm1
0x9033:	cvtsi2sd	xmm1, rbp
0x9038:	divsd	xmm0, xmm1
0x903c:	lea	rdx, [rip + 0x2c6d]
0x9043:	mov	rcx, r13
0x9046:	mov	rdi, r12
0x9049:	mov	esi, 1
0x904e:	mov	eax, 1
0x9053:	call	0x1cf0


0x9038:	divsd	xmm0, xmm1
0x903c:	lea	rdx, [rip + 0x2c6d]
0x9043:	mov	rcx, r13
0x9046:	mov	rdi, r12
0x9049:	mov	esi, 1
0x904e:	mov	eax, 1
0x9053:	call	0x1cf0


0x9058:	add	rsp, 8
0x905c:	mov	rcx, rbx
0x905f:	mov	rdi, r12
0x9062:	pop	rbx
0x9063:	pop	rbp
0x9064:	pop	r12
0x9066:	pop	r13
0x9068:	lea	rdx, [rip + 0x2c25]
0x906f:	mov	esi, 1
0x9074:	xor	eax, eax
0x9076:	jmp	0x1cf0


0x9ec7:	mov	edi, eax
0x9ec9:	call	0x9f90


0x9ece:	mov	rsi, qword ptr [rsp + 0x18]
0x9ed3:	xor	rsi, qword ptr fs:[0x28]
0x9edc:	jne	0x9f09


0x9ede:	add	rsp, 0x58
0x9ee2:	ret	


0x9f09:	call	0x1a40


0xa195:	mov	ebx, eax
0xa197:	jmp	0xa130


0xa130:	mov	rcx, qword ptr [rsp + 0x18]
0xa135:	xor	rcx, qword ptr fs:[0x28]
0xa13e:	mov	eax, ebx
0xa140:	jne	0xa29d


0xa146:	add	rsp, 0x50
0xa14a:	pop	rbx
0xa14b:	pop	rbp
0xa14c:	pop	r12
0xa14e:	ret	


0xa29d:	call	0x1a40


0xa129:	mov	ebx, eax
0xa12b:	nop	dword ptr [rax + rax]
0xa130:	mov	rcx, qword ptr [rsp + 0x18]
0xa135:	xor	rcx, qword ptr fs:[0x28]
0xa13e:	mov	eax, ebx
0xa140:	jne	0xa29d


0xa1ec:	mov	ebx, eax
0xa1ee:	jmp	0xa130


0xa0d5:	test	eax, eax
0xa0d7:	mov	ebx, eax
0xa0d9:	js	0xa268


0xa268:	call	0x1930


0xa0df:	mov	dword ptr [rip + 0x20414f], 1
0xa0e9:	jmp	0xa130


0xa1fc:	test	eax, eax
0xa1fe:	mov	ebx, eax
0xa200:	js	0xa130


0xa206:	cmp	dword ptr [rip + 0x20402b], -1
0xa20d:	jne	0xa130


0xa213:	xor	eax, eax
0xa215:	mov	esi, 1
0xa21a:	mov	edi, ebx
0xa21c:	call	0x1990


0xa221:	test	eax, eax
0xa223:	js	0xa241


0xa241:	call	0x1930


0xa225:	or	eax, 1
0xa228:	mov	esi, 2
0xa22d:	mov	edi, ebx
0xa22f:	mov	edx, eax
0xa231:	xor	eax, eax
0xa233:	call	0x1990


0xa238:	cmp	eax, -1
0xa23b:	jne	0xa130


0xa2b3:	mov	ebx, eax
0xa2b5:	jmp	0xa130


0xa2de:	test	eax, eax
0xa2e0:	je	0xa2ea


0xa2e2:	test	dword ptr [rbx], 0x100
0xa2e8:	jne	0xa2f8


0xa2f8:	mov	rdi, rbx
0xa2fb:	mov	edx, 1
0xa300:	xor	esi, esi
0xa302:	call	0xa310


0x1d87:	lea	rsi, [rip + 0x99b3]
0x1d8e:	mov	edi, 6
0x1d93:	call	0x1c10


0x8581:	jmp	0x8302


0x7d83:	jmp	0x7cbe


0x6b80:	mov	qword ptr [rbx], 0
0x6b87:	xor	eax, eax
0x6b89:	pop	rbx
0x6b8a:	ret	


0x6759:	mov	qword ptr [rbp + 0x10], 0
0x6761:	mov	qword ptr [rbp + 0x38], 0
0x6769:	add	rsp, 8
0x676d:	mov	rax, rbx
0x6770:	pop	rbx
0x6771:	pop	rbp
0x6772:	pop	r12
0x6774:	pop	r13
0x6776:	ret	


0x97ed:	jmp	0x97f2


0x9869:	mov	rax, qword ptr [rsp]
0x986d:	mov	qword ptr [rbp], rax
0x9871:	mov	rax, qword ptr [rsp + 8]
0x9876:	mov	qword ptr [rbp + 8], rax
0x987a:	mov	rax, qword ptr [rsp + 0x10]
0x987f:	mov	qword ptr [rbp + 0x10], rax
0x9883:	mov	rax, qword ptr [rsp + 0x18]
0x9888:	mov	qword ptr [rbp + 0x18], rax
0x988c:	mov	rax, qword ptr [rsp + 0x48]
0x9891:	mov	qword ptr [rbp + 0x48], rax
0x9895:	jmp	0x97f2


0x7ff4:	cmp	qword ptr [rbx + 0x58], -1
0x7ff9:	je	0x84b2


0x84b2:	mov	rdi, rbx
0x84b5:	xor	ebp, ebp
0x84b7:	call	0x1d30


0x7fff:	cmp	word ptr [rbx + 0x70], 0xb
0x8004:	je	0x813f


0x800a:	mov	rdx, qword ptr [r12 + 0x20]
0x800f:	mov	rax, qword ptr [rbx + 0x48]
0x8013:	mov	byte ptr [rdx + rax], 0
0x8017:	cmp	qword ptr [rbx + 0x58], 0
0x801c:	je	0x83e0


0x83e0:	mov	rdi, r12
0x83e3:	call	0x6ac0


0x8022:	movzx	eax, word ptr [rbx + 0x72]
0x8026:	test	al, 2
0x8028:	je	0x8398


0x8398:	test	al, 1
0x839a:	jne	0x8043


0x802e:	mov	eax, dword ptr [r12 + 0x48]
0x8033:	mov	edi, dword ptr [rbx + 0x44]
0x8036:	test	al, 4
0x8038:	je	0x843c


0x83a0:	mov	rsi, qword ptr [rbx + 8]
0x83a4:	lea	rcx, [rip + 0x381e]
0x83ab:	mov	edx, 0xffffffff
0x83b0:	mov	rdi, r12
0x83b3:	call	0x6c40


0x8043:	mov	edi, dword ptr [r12 + 0x48]
0x8048:	cmp	word ptr [rbx + 0x70], 2
0x804d:	je	0x8063


0x843c:	test	ah, 2
0x843f:	je	0x85dd


0x803e:	call	0x1ae0


0x8063:	and	edi, 0x2000
0x8069:	mov	rbp, rbx
0x806c:	je	0x80ea


0x804f:	mov	ecx, dword ptr [rbx + 0x40]
0x8052:	test	ecx, ecx
0x8054:	je	0x83f8


0x85dd:	call	0x1bf0


0x8445:	mov	esi, edi
0x8447:	mov	edx, 1
0x844c:	mov	rdi, r12
0x844f:	call	0x6a50


0x83f8:	mov	eax, 6
0x83fd:	lea	rsi, [r12 + 0x58]
0x8402:	mov	rdx, rbx
0x8405:	mov	word ptr [rbx + 0x70], ax
0x8409:	call	0x6f70


0x805a:	mov	edx, 7
0x805f:	mov	word ptr [rbx + 0x70], dx
0x8063:	and	edi, 0x2000
0x8069:	mov	rbp, rbx
0x806c:	je	0x80ea


0x840e:	mov	edi, dword ptr [r12 + 0x48]
0x8413:	jmp	0x8063


0x8454:	mov	edi, dword ptr [rbx + 0x44]
0x8457:	jmp	0x803e


0x85e2:	test	eax, eax
0x85e4:	je	0x85f9


0x85f9:	mov	edi, dword ptr [rbx + 0x44]
0x85fc:	jmp	0x803e


0x85e6:	call	0x1930


0x83b8:	test	eax, eax
0x83ba:	je	0x8043


0x83c0:	call	0x1930


0x83e8:	test	eax, eax
0x83ea:	jne	0x83c0


0x83ec:	jmp	0x8043


0x84bc:	call	0x1930


0x7fb4:	cmp	qword ptr [rbx + 0x58], 0
0x7fb9:	je	0x81f0


0x81f0:	mov	rdi, r12
0x81f3:	call	0x6ac0


0x7fbf:	movzx	eax, word ptr [rbx + 0x74]
0x7fc3:	mov	rbp, rbx
0x7fc6:	cmp	ax, 4
0x7fca:	jne	0x82f8


0x82f8:	cmp	ax, 2
0x82fc:	je	0x859d


0x859d:	mov	edx, 1
0x85a2:	mov	rsi, rbx
0x85a5:	mov	rdi, r12
0x85a8:	call	0x64b0


0x85ad:	cmp	ax, 1
0x85b1:	mov	word ptr [rbx + 0x70], ax
0x85b5:	je	0x8611


0x8611:	mov	esi, dword ptr [r12 + 0x48]
0x8616:	test	sil, 4
0x861a:	jne	0x85b7


0x85b7:	mov	esi, 3
0x85bc:	mov	rbp, rbx
0x85bf:	mov	word ptr [rbx + 0x74], si
0x85c3:	jmp	0x8302


0x861c:	mov	edi, dword ptr [r12 + 0x2c]
0x8621:	lea	rdx, [rip + 0x35a2]
0x8628:	call	0x6c00


0x81f8:	test	eax, eax
0x81fa:	jne	0x8601


0x8200:	test	dword ptr [r12 + 0x48], 0x102
0x8209:	mov	rdi, qword ptr [r12 + 0x58]
0x820e:	je	0x8348


0x8601:	or	dword ptr [r12 + 0x48], 0x2000
0x860a:	xor	ebp, ebp
0x860c:	jmp	0x80ea


0x8348:	call	0x1d30


0x8214:	test	rdi, rdi
0x8217:	je	0x821e


0x821e:	mov	rdx, qword ptr [rbx + 0x60]
0x8222:	lea	rbp, [rbx + 0x108]
0x8229:	mov	rdi, qword ptr [r12 + 0x20]
0x822e:	mov	rsi, rbp
0x8231:	mov	qword ptr [rbx + 0x48], rdx
0x8235:	add	rdx, 1
0x8239:	call	0x1c30


0x8219:	call	0x9590


0x823e:	mov	esi, 0x2f
0x8243:	mov	rdi, rbp
0x8246:	call	0x1aa0


0x824b:	test	rax, rax
0x824e:	je	0x827b


0x827b:	mov	rax, qword ptr [r12 + 0x20]
0x8280:	mov	edi, dword ptr [r12 + 0x48]
0x8285:	lea	rsi, [r12 + 0x58]
0x828a:	mov	rbp, rbx
0x828d:	mov	qword ptr [rbx + 0x38], rax
0x8291:	mov	qword ptr [rbx + 0x30], rax
0x8295:	call	0x6b90


0x8250:	cmp	rbp, rax
0x8253:	je	0x8420


0x8420:	cmp	byte ptr [rbx + 0x109], 0
0x8427:	jne	0x8259


0x8259:	lea	r13, [rax + 1]
0x825d:	mov	rdi, r13
0x8260:	call	0x1a10


0x842d:	jmp	0x827b


0x834d:	jmp	0x821e


0x51bd:	mov	qword ptr [rip + 0x208e9c], rbx
0x51c4:	pop	rbx
0x51c5:	mov	dword ptr [rip + 0x208e89], 1
0x51cf:	pop	rbp
0x51d0:	pop	r12
0x51d2:	ret	


0x7de5:	cmp	qword ptr [rbx + 0x58], 0
0x7dea:	mov	rdi, rbx
0x7ded:	js	0x7e0b


0x7e0b:	mov	rdi, rbx
0x7e0e:	call	0x1d30


0x7e01:	cmp	qword ptr [rbx + 0x58], 0
0x7e06:	mov	rdi, rbx
0x7e09:	jns	0x7def


0x7efb:	jmp	0x7e13


0x9649:	test	rbx, rbx
0x964c:	mov	rdi, rbx
0x964f:	jne	0x9640


0x9640:	mov	rbx, qword ptr [rdi + 8]
0x9644:	call	0x1d30


0x965a:	pop	rbx
0x965b:	mov	rdi, r12
0x965e:	pop	rbp
0x965f:	pop	r12
0x9661:	jmp	0x1d30


0x9619:	test	rbx, rbx
0x961c:	mov	rdi, rbx
0x961f:	jne	0x9610


0x9610:	mov	rbx, qword ptr [rdi + 8]
0x9614:	call	0x1d30


0x5197:	mov	qword ptr [rip + 0x208ece], 0x100
0x51a2:	mov	qword ptr [rip + 0x208ecf], rbx
0x51a9:	lea	rbx, [rip + 0x208ec0]
0x51b0:	cmp	r12, rbx
0x51b3:	je	0x51c4


0x5d8d:	xor	eax, eax
0x5d8f:	pop	rbx
0x5d90:	ret	


0x684d:	test	rbp, rbp
0x6850:	jne	0x6830


0x6852:	add	rsp, 8
0x6856:	pop	rbx
0x6857:	pop	rbp
0x6858:	ret	


0x6830:	mov	rdi, qword ptr [rbx + 0x18]
0x6834:	mov	rbp, qword ptr [rbx + 0x10]
0x6838:	test	rdi, rdi
0x683b:	je	0x6842


0x7e2a:	mov	rdi, qword ptr [rbp + 0x20]
0x7e2e:	call	0x1d30


0x7e33:	mov	eax, dword ptr [rbp + 0x48]
0x7e36:	test	ah, 2
0x7e39:	je	0x7ea0


0x7ea0:	test	al, 4
0x7ea2:	jne	0x7e46


0x7e3b:	mov	edi, dword ptr [rbp + 0x2c]
0x7e3e:	test	edi, edi
0x7e40:	jns	0x7ed0


0x7ea4:	mov	edi, dword ptr [rbp + 0x28]
0x7ea7:	call	0x1bf0


0x7e46:	xor	ebx, ebx
0x7e48:	lea	rdi, [rbp + 0x60]
0x7e4c:	call	0x6870


0x7ed0:	call	0x1ae0


0x7ed5:	test	eax, eax
0x7ed7:	je	0x7e46


0x7edd:	call	0x1930


0x7e51:	mov	rdi, qword ptr [rbp + 0x50]
0x7e55:	test	rdi, rdi
0x7e58:	je	0x7e5f


0x7e5f:	test	dword ptr [rbp + 0x48], 0x102
0x7e66:	mov	rdi, qword ptr [rbp + 0x58]
0x7e6a:	je	0x7e90


0x7e5a:	call	0x9590


0x7e90:	call	0x1d30


0x7e6c:	test	rdi, rdi
0x7e6f:	je	0x7e76


0x7e76:	mov	rdi, rbp
0x7e79:	call	0x1d30


0x7e71:	call	0x9590


0x7eac:	test	eax, eax
0x7eae:	jne	0x7f00


0x7eb0:	mov	edi, dword ptr [rbp + 0x28]
0x7eb3:	call	0x1ae0


0x7f00:	call	0x1930


0x7eb8:	test	eax, eax
0x7eba:	je	0x7e46


0x7ebc:	call	0x1930


0x7e7e:	test	ebx, ebx
0x7e80:	jne	0x7f31


0x7e86:	mov	eax, ebx
0x7e88:	pop	rbx
0x7e89:	pop	rbp
0x7e8a:	pop	r12
0x7e8c:	ret	


0x7f31:	call	0x1930


0x7e95:	jmp	0x7e76


0x517c:	cmp	rbx, rbp
0x517f:	jne	0x5170


0x5170:	mov	rdi, qword ptr [rbx]
0x5173:	add	rbx, 0x10
0x5177:	call	0x1d30


0x6b5d:	mov	qword ptr [rbx], 0
0x6b64:	call	0x1930


0x288d:	mov	rdi, qword ptr [rbx + 0x20]
0x2891:	pop	rbx
0x2892:	jmp	0x1d30


0x28bc:	test	rax, rax
0x28bf:	je	0x28e0


0x28e0:	mov	edi, ebx
0x28e2:	mov	rsi, rsp
0x28e5:	call	0x38e0


0x28c1:	mov	rdi, qword ptr [rax]
0x28c4:	call	0x5f30


0x28ea:	mov	rdi, rax
0x28ed:	jmp	0x28c4


0x28c4:	call	0x5f30


0x291c:	test	rax, rax
0x291f:	je	0x2940


0x2940:	mov	edi, ebx
0x2942:	mov	rsi, rsp
0x2945:	call	0x38e0


0x2921:	mov	rdi, qword ptr [rax]
0x2924:	call	0x5f30


0x294a:	mov	rdi, rax
0x294d:	jmp	0x2924


0x2924:	call	0x5f30


0x3b31:	cmp	r15d, 0xa
0x3b35:	mov	qword ptr [rsp + 0x58], rax
0x3b3a:	ja	0x4cef


0x3b40:	lea	rcx, [rip + 0x7739]
0x3b47:	mov	edx, r15d
0x3b4a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x3b4e:	add	rax, rcx
0x3b51:	jmp	rax


0x4cef:	call	0x1920


0x5692:	test	eax, eax
0x5694:	jne	0x56c8


0x5696:	mov	rax, qword ptr [rsp + 8]
0x569b:	mov	qword ptr [rbx], rax
0x569e:	mov	rax, qword ptr [rsp]
0x56a2:	mov	qword ptr [rbx + 8], rax
0x56a6:	mov	rax, rbx
0x56a9:	mov	rcx, qword ptr [rsp + 0x98]
0x56b1:	xor	rcx, qword ptr fs:[0x28]
0x56ba:	jne	0x56cc


0x56c8:	xor	eax, eax
0x56ca:	jmp	0x56a9


0x56bc:	add	rsp, 0xa0
0x56c3:	pop	rbx
0x56c4:	ret	


0x56cc:	call	0x1a40


0x56a9:	mov	rcx, qword ptr [rsp + 0x98]
0x56b1:	xor	rcx, qword ptr fs:[0x28]
0x56ba:	jne	0x56cc


0x8265:	lea	rdx, [rax + 1]
0x8269:	mov	r14, rax
0x826c:	mov	rsi, r13
0x826f:	mov	rdi, rbp
0x8272:	call	0x1c30


0x8277:	mov	qword ptr [rbx + 0x60], r14
0x827b:	mov	rax, qword ptr [r12 + 0x20]
0x8280:	mov	edi, dword ptr [r12 + 0x48]
0x8285:	lea	rsi, [r12 + 0x58]
0x828a:	mov	rbp, rbx
0x828d:	mov	qword ptr [rbx + 0x38], rax
0x8291:	mov	qword ptr [rbx + 0x30], rax
0x8295:	call	0x6b90


0x7bd9:	cmp	rax, 2
0x7bdd:	mov	rsi, qword ptr [rsp + 8]
0x7be2:	jbe	0x7b58


0x7b58:	mov	rdx, rax
0x7b5b:	mov	rdi, rbx
0x7b5e:	call	0x6790


0x7be8:	cmp	byte ptr [rsp + 0x17], 0
0x7bed:	je	0x7b58


0x7bf3:	cmp	byte ptr [rsi + rax - 1], 0x2f
0x7bf8:	jne	0x7b58


0x7c0b:	sub	rax, 1
0x7c0f:	cmp	rax, 1
0x7c13:	jne	0x7c00


0x7c15:	jmp	0x7b58


0x7c00:	cmp	byte ptr [rsi + rax - 2], 0x2f
0x7c05:	jne	0x7b58


0x7a9d:	cmp	r12, rax
0x7aa0:	cmovb	r12, rax
0x7aa4:	add	r15, 8
0x7aa8:	mov	rdi, qword ptr [r15]
0x7aab:	test	rdi, rdi
0x7aae:	jne	0x7a98


0x7ab0:	lea	rdx, [r12 + 1]
0x7ab5:	mov	eax, 0x1000
0x7aba:	cmp	rdx, 0x1000
0x7ac1:	cmovb	rdx, rax
0x7ac5:	lea	rsi, [rbx + 0x30]
0x7ac9:	lea	rdi, [rbx + 0x20]
0x7acd:	call	0x6b20


0x7a98:	call	0x1a10


0x27e9:	mov	rdi, rbx
0x27ec:	mov	r12, rax
0x27ef:	call	0x1a10


0x27f4:	lea	rdi, [r12 + rax + 2]
0x27f9:	call	0x5d00


0x5f39:	mov	rdi, rbx
0x5f3c:	lea	rsi, [rax + 1]
0x5f40:	pop	rbx
0x5f41:	jmp	0x5f00


0x572f:	lea	rdx, [rip + 0x62ea]
0x5736:	mov	rcx, rax
0x5739:	mov	r8d, 0x7e3
0x573f:	mov	esi, 1
0x5744:	mov	rdi, rbp
0x5747:	xor	eax, eax
0x5749:	call	0x1cf0


0x574e:	lea	rsi, [rip + 0x6033]
0x5755:	xor	edi, edi
0x5757:	mov	edx, 5
0x575c:	call	0x19f0


0x5761:	mov	rsi, rbp
0x5764:	mov	rdi, rax
0x5767:	call	0x1b20


0x1b20:	jmp	qword ptr [rip + 0x20c3a2]




0x322c:	mov	r12, rax
0x322f:	jmp	0x2b80


0x2b80:	mov	rsi, qword ptr [rsp + 8]
0x2b85:	mov	edi, 4
0x2b8a:	call	0x5370


0x348e:	mov	r12, rax
0x3491:	jmp	0x2b80


0x30da:	mov	r12, rax
0x30dd:	jmp	0x2b80


0x3456:	mov	r12, rax
0x3459:	jmp	0x2b80


0x324f:	mov	r12, rax
0x3252:	jmp	0x2b80


0x358e:	mov	r12, rax
0x3591:	jmp	0x2b80


0x3098:	mov	r12, rax
0x309b:	jmp	0x2b80


0x33a7:	mov	r12, rax
0x33aa:	mov	rax, qword ptr [rsp + 0x18]
0x33af:	mov	qword ptr [rsp + 0x18], 0
0x33b8:	mov	qword ptr [rsp + 0x20], rax
0x33bd:	jmp	0x2b80


0x32d3:	mov	r12, rax
0x32d6:	jmp	0x2b80


0x2b7a:	mov	r12, rax
0x2b7d:	nop	dword ptr [rax]
0x2b80:	mov	rsi, qword ptr [rsp + 8]
0x2b85:	mov	edi, 4
0x2b8a:	call	0x5370


0x238d:	mov	rdi, qword ptr [rip + 0x20bd2c]
0x2394:	mov	rdx, rax
0x2397:	mov	rcx, rbx
0x239a:	mov	esi, 1
0x239f:	xor	eax, eax
0x23a1:	call	0x1cf0


0x23a6:	mov	edi, ebp
0x23a8:	call	0x1cd0


0x1cd0:	jmp	qword ptr [rip + 0x20c2ca]




0x23bb:	mov	rcx, rbx
0x23be:	mov	rdx, rbx
0x23c1:	mov	rsi, rax
0x23c4:	mov	edi, 1
0x23c9:	xor	eax, eax
0x23cb:	call	0x1c20


0x1c20:	jmp	qword ptr [rip + 0x20c322]




0x5c94:	lea	rdx, [rip + 0x5abc]
0x5c9b:	mov	rsi, rax
0x5c9e:	mov	edi, 1
0x5ca3:	xor	eax, eax
0x5ca5:	call	0x1c20


0x5f67:	mov	edi, dword ptr [rip + 0x2080ab]
0x5f6d:	lea	rdx, [rip + 0x45cf]
0x5f74:	mov	rcx, rax
0x5f77:	xor	esi, esi
0x5f79:	xor	eax, eax
0x5f7b:	call	0x1c40


0x1c40:	jmp	qword ptr [rip + 0x20c312]




0x5f9f:	test	rax, rax
0x5fa2:	je	0x5fb0


0x5fb0:	call	0x1930


0x5fa4:	add	rsp, 8
0x5fa8:	ret	


0x3734:	mov	rbp, rax
0x3737:	jmp	0x3762


0x3762:	mov	rdi, rbp
0x3765:	call	0x7f50


0x376a:	test	rax, rax
0x376d:	jne	0x3740


0x376f:	call	0x1930


0x3740:	sub	rsp, 8
0x3744:	mov	r9d, r14d
0x3747:	mov	r8d, r13d
0x374a:	push	r12
0x374c:	mov	edx, dword ptr [rsp + 0x1c]
0x3750:	mov	ecx, r15d
0x3753:	mov	rsi, rax
0x3756:	mov	rdi, rbp
0x3759:	call	0x2960


0x375e:	and	ebx, eax
0x3760:	pop	rax
0x3761:	pop	rdx
0x3762:	mov	rdi, rbp
0x3765:	call	0x7f50


0x3774:	mov	ecx, dword ptr [rax]
0x3776:	mov	r13, rax
0x3779:	test	ecx, ecx
0x377b:	je	0x3789


0x3789:	mov	rdi, rbp
0x378c:	call	0x7dc0


0x377d:	movzx	ebx, byte ptr [r12 + 0x11]
0x3783:	test	bl, bl
0x3785:	je	0x37e8


0x37e8:	lea	rsi, [rip + 0x768a]
0x37ef:	xor	edi, edi
0x37f1:	mov	edx, 5
0x37f6:	call	0x19f0


0x3787:	xor	ebx, ebx
0x3789:	mov	rdi, rbp
0x378c:	call	0x7dc0


0x37fb:	mov	esi, dword ptr [r13]
0x37ff:	mov	rdx, rax
0x3802:	xor	edi, edi
0x3804:	xor	eax, eax
0x3806:	call	0x1c40


0x3791:	test	eax, eax
0x3793:	je	0x37ba


0x37ba:	add	rsp, 0x18
0x37be:	mov	eax, ebx
0x37c0:	pop	rbx
0x37c1:	pop	rbp
0x37c2:	pop	r12
0x37c4:	pop	r13
0x37c6:	pop	r14
0x37c8:	pop	r15
0x37ca:	ret	


0x3795:	lea	rsi, [rip + 0x76ed]
0x379c:	mov	edx, 5
0x37a1:	xor	edi, edi
0x37a3:	xor	ebx, ebx
0x37a5:	call	0x19f0


0x37aa:	mov	esi, dword ptr [r13]
0x37ae:	mov	rdx, rax
0x37b1:	xor	edi, edi
0x37b3:	xor	eax, eax
0x37b5:	call	0x1c40


0x5fb5:	cmp	dword ptr [rax], 0x16
0x5fb8:	je	0x5fc0


0x5fc0:	lea	rcx, [rip + 0x5ac9]
0x5fc7:	lea	rsi, [rip + 0x5a92]
0x5fce:	lea	rdi, [rip + 0x5aa8]
0x5fd5:	mov	edx, 0x29
0x5fda:	call	0x1ac0


0x5fba:	call	0x5f50


0x6b69:	mov	dword ptr [rax], 0x24
0x6b6f:	xor	eax, eax
0x6b71:	pop	rbx
0x6b72:	ret	


0x7f36:	mov	dword ptr [rax], ebx
0x7f38:	mov	ebx, 0xffffffff
0x7f3d:	jmp	0x7e86


0x7ec1:	mov	r12, rax
0x7ec4:	jmp	0x7f28


0x7f28:	mov	ebx, dword ptr [r12]
0x7f2c:	jmp	0x7e48


0x7e48:	lea	rdi, [rbp + 0x60]
0x7e4c:	call	0x6870


0x7f05:	mov	edi, dword ptr [rbp + 0x28]
0x7f08:	mov	r12, rax
0x7f0b:	mov	ebx, dword ptr [rax]
0x7f0d:	call	0x1ae0


0x7f12:	test	eax, eax
0x7f14:	je	0x7e48


0x7f1a:	test	ebx, ebx
0x7f1c:	jne	0x7e48


0x7ee2:	mov	ebx, dword ptr [rax]
0x7ee4:	jmp	0x7e48


0x84c1:	mov	dword ptr [rax], 0
0x84c7:	mov	qword ptr [r12], 0
0x84cf:	jmp	0x80ea


0x83c5:	mov	edi, dword ptr [r12 + 0x48]
0x83ca:	mov	eax, dword ptr [rax]
0x83cc:	or	edi, 0x2000
0x83d2:	mov	dword ptr [rbx + 0x40], eax
0x83d5:	mov	dword ptr [r12 + 0x48], edi
0x83da:	jmp	0x8048


0x8048:	cmp	word ptr [rbx + 0x70], 2
0x804d:	je	0x8063


0x85eb:	mov	eax, dword ptr [rax]
0x85ed:	mov	dword ptr [rbx + 0x40], eax
0x85f0:	or	dword ptr [r12 + 0x48], 0x2000
0x85f9:	mov	edi, dword ptr [rbx + 0x44]
0x85fc:	jmp	0x803e


0xa246:	mov	r12d, dword ptr [rax]
0xa249:	mov	rbp, rax
0xa24c:	mov	edi, ebx
0xa24e:	call	0x1ae0


0xa253:	mov	ebx, 0xffffffff
0xa258:	mov	dword ptr [rbp], r12d
0xa25c:	jmp	0xa130


0xa26d:	cmp	dword ptr [rax], 0x16
0xa270:	jne	0xa0df


0xa276:	xor	esi, esi
0xa278:	xor	eax, eax
0xa27a:	mov	edx, r12d
0xa27d:	mov	edi, ebp
0xa27f:	call	0x1990


0xa284:	test	eax, eax
0xa286:	mov	ebx, eax
0xa288:	js	0xa130


0xa28e:	mov	dword ptr [rip + 0x203fa0], 0xffffffff
0xa298:	jmp	0xa213


0x781b:	mov	eax, dword ptr [rax]
0x781d:	mov	dword ptr [rbp + 0x40], eax
0x7820:	jmp	0x75ec


0x7216:	mov	rdi, r13
0x7219:	mov	dword ptr [rax], 0
0x721f:	mov	r12, rax
0x7222:	call	0x1b90


0x1b90:	jmp	qword ptr [rip + 0x20c36a]




0x64e6:	mov	r12, rax
0x64e9:	mov	eax, dword ptr [rax]
0x64eb:	cmp	eax, 2
0x64ee:	je	0x6600


0x6600:	mov	rsi, qword ptr [rbp + 0x30]
0x6604:	mov	rdx, rbx
0x6607:	mov	edi, 1
0x660c:	call	0x1a20


0x64f4:	lea	rdi, [rbx + 8]
0x64f8:	mov	dword ptr [rbp + 0x40], eax
0x64fb:	mov	qword ptr [rbp + 0x78], 0
0x6503:	mov	qword ptr [rbx + 0x88], 0
0x650e:	xor	eax, eax
0x6510:	and	rdi, 0xfffffffffffffff8
0x6514:	sub	rbx, rdi
0x6517:	lea	ecx, [rbx + 0x90]
0x651d:	shr	ecx, 3
0x6520:	rep stosq	qword ptr [rdi], rax


0x6523:	mov	eax, 0xa
0x6528:	pop	rbx
0x6529:	pop	rbp
0x652a:	pop	r12
0x652c:	ret	


0x6520:	rep stosq	qword ptr [rdi], rax


0x6611:	test	eax, eax
0x6613:	je	0x6630


0x6630:	mov	dword ptr [r12], 0
0x6638:	mov	eax, 0xd
0x663d:	jmp	0x6528


0x6615:	mov	eax, dword ptr [r12]
0x6619:	jmp	0x64f4


0x65f5:	mov	eax, dword ptr [rax]
0x65f7:	jmp	0x64f4


0x6d19:	mov	r12d, dword ptr [rax]
0x6d1c:	mov	rbp, rax
0x6d1f:	mov	edi, r15d
0x6d22:	call	0x1ae0


0x6d27:	mov	dword ptr [rbp], r12d
0x6d2b:	jmp	0x6d45


0x6de4:	mov	dword ptr [rax], 2
0x6dea:	jmp	0x6d0a


0x3548:	mov	r8d, dword ptr [rsp + 0x2c]
0x354d:	mov	r14d, dword ptr [rax]
0x3550:	mov	r12, rax
0x3553:	mov	edi, r8d
0x3556:	call	0x1ae0


0x355b:	mov	dword ptr [r12], r14d
0x355f:	mov	eax, dword ptr [rbx]
0x3561:	movzx	ecx, byte ptr [rsp + 0x20]
0x3566:	cmp	eax, 2
0x3569:	jne	0x3013


0x356f:	mov	r15d, ecx
0x3572:	jmp	0x2bd2


0x319e:	mov	r8d, dword ptr [rsp + 0x10]
0x31a3:	mov	r12, rax
0x31a6:	mov	r14d, dword ptr [rax]
0x31a9:	mov	edi, r8d
0x31ac:	call	0x1ae0


0x31b1:	mov	eax, dword ptr [rbx]
0x31b3:	mov	dword ptr [r12], r14d
0x31b7:	cmp	eax, 2
0x31ba:	jne	0x2aeb


0x31c0:	jmp	0x2bd2


0x342a:	mov	r8d, dword ptr [rsp + 0x18]
0x342f:	mov	r12d, dword ptr [rax]
0x3432:	mov	r14, rax
0x3435:	mov	edi, r8d
0x3438:	call	0x1ae0


0x343d:	mov	dword ptr [r14], r12d
0x3440:	jmp	0x2acf


0x2abd:	cmp	dword ptr [rax], 0x5f
0x2ac0:	je	0x3318


0x3318:	mov	eax, dword ptr [rbx]
0x331a:	mov	r15d, 1
0x3320:	cmp	eax, 2
0x3323:	je	0x2bd2


0x3329:	test	eax, eax
0x332b:	jne	0x2bd2


0x3331:	mov	edi, dword ptr [r13 + 0x1c]
0x3335:	call	0x2900


0x2fa3:	cmp	dword ptr [rax], 0xd
0x2fa6:	mov	r10, rax
0x2fa9:	movzx	ecx, byte ptr [rsp + 0x2c]
0x2fae:	mov	r9d, dword ptr [rsp + 0x30]
0x2fb3:	mov	r11, qword ptr [rsp + 0x38]
0x2fb8:	jne	0x2acf


0x2fbe:	mov	eax, dword ptr [r13 + 0x18]
0x2fc2:	and	eax, 0xf000
0x2fc7:	cmp	eax, 0x8000
0x2fcc:	je	0x3596


0x3596:	mov	edx, dword ptr [rsp + 0x20]
0x359a:	mov	rsi, r11
0x359d:	mov	edi, r14d
0x35a0:	mov	dword ptr [rsp + 0x38], r9d
0x35a5:	mov	qword ptr [rsp + 0x30], r10
0x35aa:	mov	byte ptr [rsp + 0x2c], cl
0x35ae:	mov	qword ptr [rsp + 0x20], r11
0x35b3:	or	edx, 1
0x35b6:	call	0x1af0


0x2fd2:	mov	rax, qword ptr [rsp]
0x2fd6:	mov	r14d, dword ptr [rax + 0x2c]
0x2fda:	nop	word ptr [rax + rax]
0x2fe0:	mov	ecx, dword ptr [rsp + 0x18]
0x2fe4:	mov	edx, dword ptr [rsp + 0x10]
0x2fe8:	xor	r8d, r8d
0x2feb:	mov	rsi, r11
0x2fee:	mov	edi, r14d
0x2ff1:	call	0x1cc0


0x35bb:	test	eax, eax
0x35bd:	mov	r8d, eax
0x35c0:	mov	r11, qword ptr [rsp + 0x20]
0x35c5:	movzx	ecx, byte ptr [rsp + 0x2c]
0x35ca:	mov	r10, qword ptr [rsp + 0x30]
0x35cf:	mov	r9d, dword ptr [rsp + 0x38]
0x35d4:	jns	0x3148


0x35da:	cmp	dword ptr [r10], 0xd
0x35de:	je	0x2fd2


0x35e4:	jmp	0x2acf


0x82e5:	xor	ebp, ebp
0x82e7:	mov	dword ptr [rax], 0xc
0x82ed:	jmp	0x80ea


0x8180:	mov	eax, dword ptr [rax]
0x8182:	or	word ptr [rbp + 0x72], 1
0x8187:	mov	dword ptr [rbp + 0x40], eax
0x818a:	mov	rbp, qword ptr [r12 + 8]
0x818f:	test	rbp, rbp
0x8192:	je	0x8386


0x8198:	mov	rax, rbp
0x819b:	nop	dword ptr [rax + rax]
0x81a0:	mov	rdx, qword ptr [rax + 8]
0x81a4:	mov	rdx, qword ptr [rdx + 0x30]
0x81a8:	mov	qword ptr [rax + 0x30], rdx
0x81ac:	mov	rax, qword ptr [rax + 0x10]
0x81b0:	test	rax, rax
0x81b3:	jne	0x81a0


0x81b5:	jmp	0x8386


0x81a0:	mov	rdx, qword ptr [rax + 8]
0x81a4:	mov	rdx, qword ptr [rdx + 0x30]
0x81a8:	mov	qword ptr [rax + 0x30], rdx
0x81ac:	mov	rax, qword ptr [rax + 0x10]
0x81b0:	test	rax, rax
0x81b3:	jne	0x81a0


0x6058:	mov	dword ptr [rax], 0
0x605e:	mov	r12, rax
0x6061:	movzx	ebx, byte ptr [rbp]
0x6065:	call	0x1d20


0x1d20:	jmp	qword ptr [rip + 0x20c2a2]




0x7dad:	xor	ebx, ebx
0x7daf:	mov	dword ptr [rax], 0x16
0x7db5:	jmp	0x7cbe


0x86e9:	mov	dword ptr [rax], 0x16
0x86ef:	mov	eax, 1
0x86f4:	add	rsp, 8
0x86f8:	ret	


0x4d21:	mov	r13, rax
0x4d24:	mov	eax, dword ptr [rax]
0x4d26:	test	r15d, r15d
0x4d29:	mov	rbx, qword ptr [rip + 0x209330]
0x4d30:	mov	dword ptr [rsp + 0x18], eax
0x4d34:	js	0x4ea1


0x4ea1:	call	0x1920


0x4d3a:	cmp	dword ptr [rip + 0x209317], r15d
0x4d41:	jg	0x4da5


0x4d43:	cmp	r15d, 0x7fffffff
0x4d4a:	je	0x4ea6


0x4da5:	mov	eax, dword ptr [rbp + 4]
0x4da8:	shl	r15, 4
0x4dac:	sub	rsp, 8
0x4db0:	add	rbx, r15
0x4db3:	lea	r15, [rbp + 8]
0x4db7:	mov	r8d, dword ptr [rbp]
0x4dbb:	mov	r11, qword ptr [rbx]
0x4dbe:	mov	r12, qword ptr [rbx + 8]
0x4dc2:	mov	rcx, r14
0x4dc5:	or	eax, 1
0x4dc8:	mov	dword ptr [rsp + 0x24], eax
0x4dcc:	push	qword ptr [rbp + 0x30]
0x4dcf:	mov	r9d, eax
0x4dd2:	push	qword ptr [rbp + 0x28]
0x4dd5:	push	r15
0x4dd7:	mov	rsi, r11
0x4dda:	mov	rdx, qword ptr [rsp + 0x28]
0x4ddf:	mov	rdi, r12
0x4de2:	mov	qword ptr [rsp + 0x30], r11
0x4de7:	call	0x3ac0


0x4ea6:	call	0x5f50


0x4d50:	lea	r12d, [r15 + 1]
0x4d54:	lea	rax, [rip + 0x209315]
0x4d5b:	movsxd	rsi, r12d
0x4d5e:	shl	rsi, 4
0x4d62:	cmp	rbx, rax
0x4d65:	je	0x4e80


0x4e80:	xor	edi, edi
0x4e82:	call	0x5d60


0x4d6b:	mov	rdi, rbx
0x4d6e:	call	0x5d60


0x4d73:	mov	rbx, rax
0x4d76:	mov	qword ptr [rip + 0x2092e3], rax
0x4d7d:	movsxd	rdi, dword ptr [rip + 0x2092d4]
0x4d84:	mov	edx, r12d
0x4d87:	xor	esi, esi
0x4d89:	sub	edx, edi
0x4d8b:	shl	rdi, 4
0x4d8f:	movsxd	rdx, edx
0x4d92:	add	rdi, rbx
0x4d95:	shl	rdx, 4
0x4d99:	call	0x1ad0


0x1ad0:	jmp	qword ptr [rip + 0x20c3ca]




0x4e87:	movdqa	xmm0, xmmword ptr [rip + 0x2091e1]
0x4e8f:	mov	rbx, rax
0x4e92:	mov	qword ptr [rip + 0x2091c7], rax
0x4e99:	movups	xmmword ptr [rax], xmm0
0x4e9c:	jmp	0x4d7d


0x4d7d:	movsxd	rdi, dword ptr [rip + 0x2092d4]
0x4d84:	mov	edx, r12d
0x4d87:	xor	esi, esi
0x4d89:	sub	edx, edi
0x4d8b:	shl	rdi, 4
0x4d8f:	movsxd	rdx, edx
0x4d92:	add	rdi, rbx
0x4d95:	shl	rdx, 4
0x4d99:	call	0x1ad0


0x4ebc:	mov	r12d, dword ptr [rax]
0x4ebf:	mov	rbp, rax
0x4ec2:	lea	rax, [rip + 0x209337]
0x4ec9:	test	rbx, rbx
0x4ecc:	mov	esi, 0x38
0x4ed1:	cmove	rbx, rax
0x4ed5:	mov	rdi, rbx
0x4ed8:	call	0x5f00


0x4ff2:	mov	r12d, dword ptr [rax]
0x4ff5:	mov	rbp, rax
0x4ff8:	lea	rax, [rbx + 8]
0x4ffc:	sub	rsp, 8
0x5000:	mov	r9d, dword ptr [rbx + 4]
0x5004:	push	qword ptr [rbx + 0x30]
0x5007:	mov	r8d, dword ptr [rbx]
0x500a:	push	qword ptr [rbx + 0x28]
0x500d:	mov	rdx, r15
0x5010:	push	rax
0x5011:	mov	rcx, qword ptr [rsp + 0x28]
0x5016:	mov	rsi, r14
0x5019:	mov	rdi, r13
0x501c:	call	0x3ac0


0x506f:	test	r12, r12
0x5072:	mov	r13, rax
0x5075:	mov	eax, dword ptr [rax]
0x5077:	sete	bpl
0x507b:	or	ebp, dword ptr [rbx + 4]
0x507e:	lea	r10, [rbx + 8]
0x5082:	sub	rsp, 8
0x5086:	mov	r8d, dword ptr [rbx]
0x5089:	mov	rcx, r15
0x508c:	mov	dword ptr [rsp + 0x14], eax
0x5090:	push	qword ptr [rbx + 0x30]
0x5093:	mov	rdx, r14
0x5096:	push	qword ptr [rbx + 0x28]
0x5099:	push	r10
0x509b:	xor	esi, esi
0x509d:	mov	r9d, ebp
0x50a0:	xor	edi, edi
0x50a2:	mov	qword ptr [rsp + 0x40], r10
0x50a7:	call	0x3ac0


0x8713:	test	r12d, 0xffffefff
0x871a:	mov	r13, rax
0x871d:	jne	0x8808


0x8723:	mov	rbp, qword ptr [rbx]
0x8726:	mov	dword ptr [rax], 0
0x872c:	test	byte ptr [rbx + 0x49], 0x20
0x8730:	jne	0x87b0


0x8808:	mov	dword ptr [rax], 0x16
0x880e:	xor	eax, eax
0x8810:	jmp	0x8794


0x8732:	movzx	eax, word ptr [rbp + 0x70]
0x8736:	cmp	ax, 9
0x873a:	je	0x87a0


0x87b0:	pop	rbx
0x87b1:	xor	eax, eax
0x87b3:	pop	rbp
0x87b4:	pop	r12
0x87b6:	pop	r13
0x87b8:	pop	r14
0x87ba:	ret	


0x8794:	pop	rbx
0x8795:	pop	rbp
0x8796:	pop	r12
0x8798:	pop	r13
0x879a:	pop	r14
0x879c:	ret	


0x87a0:	pop	rbx
0x87a1:	mov	rax, qword ptr [rbp + 0x10]
0x87a5:	pop	rbp
0x87a6:	pop	r12
0x87a8:	pop	r13
0x87aa:	pop	r14
0x87ac:	ret	


0x873c:	cmp	ax, 1
0x8740:	jne	0x87b0


0x8742:	mov	rdi, qword ptr [rbx + 8]
0x8746:	test	rdi, rdi
0x8749:	je	0x8750


0x8750:	cmp	r12d, 0x1000
0x8757:	mov	r14d, 1
0x875d:	jne	0x876c


0x874b:	call	0x6820


0x875f:	or	dword ptr [rbx + 0x48], 0x1000
0x8766:	mov	r14d, 2
0x876c:	cmp	qword ptr [rbp + 0x58], 0
0x8771:	jne	0x8785


0x876c:	cmp	qword ptr [rbp + 0x58], 0
0x8771:	jne	0x8785


0x8773:	mov	rax, qword ptr [rbp + 0x30]
0x8777:	cmp	byte ptr [rax], 0x2f
0x877a:	je	0x8785


0x8785:	mov	esi, r14d
0x8788:	mov	rdi, rbx
0x878b:	call	0x7030


0x877c:	mov	esi, dword ptr [rbx + 0x48]
0x877f:	test	sil, 4
0x8783:	je	0x87c0


0x87c0:	mov	edi, dword ptr [rbx + 0x2c]
0x87c3:	lea	rdx, [rip + 0x3400]
0x87ca:	call	0x6c00


0x8790:	mov	qword ptr [rbx + 8], rax
0x8794:	pop	rbx
0x8795:	pop	rbp
0x8796:	pop	r12
0x8798:	pop	r13
0x879a:	pop	r14
0x879c:	ret	


0x8887:	cmp	rax, -3
0x888b:	mov	rbp, rax
0x888e:	jbe	0x88b0


0x88b0:	mov	rdx, qword ptr [rsp + 8]
0x88b5:	xor	rdx, qword ptr fs:[0x28]
0x88be:	mov	rax, rbp
0x88c1:	jne	0x88ce


0x8890:	test	r12, r12
0x8893:	je	0x88b0


0x88c3:	add	rsp, 0x18
0x88c7:	pop	rbx
0x88c8:	pop	rbp
0x88c9:	pop	r12
0x88cb:	pop	r13
0x88cd:	ret	


0x88ce:	call	0x1a40


0x8895:	xor	edi, edi
0x8897:	call	0x8a70


0x88ec:	mov	ebx, dword ptr [rbp]
0x88ef:	mov	rdi, rbp
0x88f2:	mov	r12, rax
0x88f5:	call	0x9fd0


0x1d98:	lea	rsi, [rip + 0x872e]
0x1d9f:	lea	rdi, [rip + 0x86fe]
0x1da6:	call	0x19d0


0x19d0:	jmp	qword ptr [rip + 0x20c44a]




0x8a7b:	mov	rdx, rax
0x8a7e:	mov	eax, 1
0x8a83:	test	rdx, rdx
0x8a86:	je	0x8aa5


0x8aa5:	add	rsp, 8
0x8aa9:	ret	


0x8a88:	lea	rdi, [rip + 0x31cd]
0x8a8f:	mov	ecx, 2
0x8a94:	mov	rsi, rdx
0x8a97:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8a97:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8a99:	seta	cl
0x8a9c:	sbb	cl, 0
0x8a9f:	xor	eax, eax
0x8aa1:	test	cl, cl
0x8aa3:	jne	0x8ab0


0x8ab0:	lea	rdi, [rip + 0x31a7]
0x8ab7:	mov	ecx, 6
0x8abc:	mov	rsi, rdx
0x8abf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8abf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8ac1:	seta	al
0x8ac4:	sbb	al, 0
0x8ac6:	test	al, al
0x8ac8:	setne	al
0x8acb:	add	rsp, 8
0x8acf:	ret	


0x889c:	test	al, al
0x889e:	jne	0x88b0


0x88a0:	movzx	eax, byte ptr [r13]
0x88a5:	mov	ebp, 1
0x88aa:	mov	dword ptr [rbx], eax
0x88ac:	nop	dword ptr [rax]
0x88b0:	mov	rdx, qword ptr [rsp + 8]
0x88b5:	xor	rdx, qword ptr fs:[0x28]
0x88be:	mov	rax, rbp
0x88c1:	jne	0x88ce


0x6bda:	mov	rdi, rax
0x6bdd:	mov	qword ptr [rbx], rax
0x6be0:	xor	eax, eax
0x6be2:	test	rdi, rdi
0x6be5:	je	0x6bc6


0x6bc6:	pop	rbx
0x6bc7:	ret	


0x6be7:	call	0x8960


0x6bec:	mov	eax, 1
0x6bf1:	pop	rbx
0x6bf2:	ret	


0x829a:	movzx	eax, word ptr [rbx + 0x70]
0x829e:	cmp	ax, 0xb
0x82a2:	mov	qword ptr [r12], rbp
0x82a6:	je	0x8128


0x6edc:	test	rax, rax
0x6edf:	mov	rbp, rax
0x6ee2:	je	0x6f68


0x6f68:	pop	rbx
0x6f69:	xor	eax, eax
0x6f6b:	pop	rbp
0x6f6c:	pop	r12
0x6f6e:	ret	


0x6ee8:	mov	rax, qword ptr [rbx + 0x78]
0x6eec:	mov	rdi, qword ptr [r12]
0x6ef0:	mov	rsi, rbp
0x6ef3:	mov	qword ptr [rbp + 0x10], rbx
0x6ef7:	mov	qword ptr [rbp], rax
0x6efb:	mov	rax, qword ptr [rbx + 0x80]
0x6f02:	mov	qword ptr [rbp + 8], rax
0x6f06:	call	0x9b40


0x5d09:	test	rax, rax
0x5d0c:	jne	0x5d13


0x5d0e:	test	rbx, rbx
0x5d11:	jne	0x5d15


0x5d13:	pop	rbx
0x5d14:	ret	


0x5d15:	call	0x5f50


0x27fe:	mov	rsi, rbp
0x2801:	mov	rdi, rax
0x2804:	mov	r12, rax
0x2807:	call	0x19e0


0x19e0:	jmp	qword ptr [rip + 0x20c442]




0x5eb9:	mov	rdx, rbx
0x5ebc:	xor	esi, esi
0x5ebe:	mov	rdi, rax
0x5ec1:	pop	rbx
0x5ec2:	jmp	0x1ad0


0x5f14:	add	rsp, 8
0x5f18:	mov	rdx, rbx
0x5f1b:	mov	rsi, rbp
0x5f1e:	pop	rbx
0x5f1f:	pop	rbp
0x5f20:	mov	rdi, rax
0x5f23:	jmp	0x1b50


0x1b50:	jmp	qword ptr [rip + 0x20c38a]




0x67b3:	test	rax, rax
0x67b6:	mov	rbx, rax
0x67b9:	je	0x680c


0x680c:	add	rsp, 8
0x6810:	mov	rax, rbx
0x6813:	pop	rbx
0x6814:	pop	rbp
0x6815:	pop	r12
0x6817:	pop	r13
0x6819:	ret	


0x67bb:	lea	rdi, [rax + 0x108]
0x67c2:	mov	rdx, rbp
0x67c5:	mov	rsi, r13
0x67c8:	call	0x1b50


0x7b63:	test	rax, rax
0x7b66:	mov	rcx, rax
0x7b69:	je	0x7d60


0x7d60:	mov	rdi, r12
0x7d63:	call	0x6820


0x7b6f:	mov	qword ptr [rax + 0x58], 0
0x7b77:	mov	qword ptr [rax + 8], r15
0x7b7b:	lea	rax, [rax + 0x108]
0x7b82:	test	r12, r12
0x7b85:	mov	qword ptr [rcx + 0x30], rax
0x7b89:	je	0x7d00


0x7d00:	xor	edx, edx
0x7d02:	mov	rsi, rcx
0x7d05:	mov	rdi, rbx
0x7d08:	mov	qword ptr [rsp + 8], rcx
0x7d0d:	call	0x64b0


0x7b8f:	cmp	byte ptr [rsp + 0x16], 0
0x7b94:	je	0x7d00


0x7b9a:	mov	esi, 0xb
0x7b9f:	test	r14, r14
0x7ba2:	mov	qword ptr [rcx + 0xa8], 2
0x7bad:	mov	word ptr [rcx + 0x70], si
0x7bb1:	je	0x7d40


0x7d40:	mov	qword ptr [rcx + 0x10], 0
0x7d48:	mov	rax, qword ptr [rsp + 0x18]
0x7d4d:	mov	qword ptr [rsp + 0x18], rcx
0x7d52:	mov	qword ptr [rax + 0x10], rcx
0x7d56:	jmp	0x7bbe


0x7bb7:	mov	qword ptr [rcx + 0x10], r12
0x7bbb:	mov	r12, rcx
0x7bbe:	add	rbp, 1
0x7bc2:	mov	rsi, qword ptr [r13 + rbp*8]
0x7bc7:	test	rsi, rsi
0x7bca:	je	0x7c20


0x7bbe:	add	rbp, 1
0x7bc2:	mov	rsi, qword ptr [r13 + rbp*8]
0x7bc7:	test	rsi, rsi
0x7bca:	je	0x7c20


0x7c20:	test	r14, r14
0x7c23:	je	0x7c3c


0x7c25:	cmp	rbp, 1
0x7c29:	jbe	0x7c3c


0x7c2b:	mov	rsi, r12
0x7c2e:	mov	rdx, rbp
0x7c31:	mov	rdi, rbx
0x7c34:	call	0x6680


0x7c39:	mov	r12, rax
0x7c3c:	lea	rsi, [rip + 0x3afe]
0x7c43:	xor	edx, edx
0x7c45:	mov	rdi, rbx
0x7c48:	call	0x6790


0x7d12:	mov	rcx, qword ptr [rsp + 8]
0x7d17:	test	r14, r14
0x7d1a:	mov	word ptr [rcx + 0x70], ax
0x7d1e:	jne	0x7bb7


0x7d24:	test	r12, r12
0x7d27:	mov	qword ptr [rcx + 0x10], 0
0x7d2f:	jne	0x7d48


0x7d31:	mov	qword ptr [rsp + 0x18], rcx
0x7d36:	mov	r12, rcx
0x7d39:	jmp	0x7bbe


0x7d48:	mov	rax, qword ptr [rsp + 0x18]
0x7d4d:	mov	qword ptr [rsp + 0x18], rcx
0x7d52:	mov	qword ptr [rax + 0x10], rcx
0x7d56:	jmp	0x7bbe


0x7d68:	mov	rdi, r15
0x7d6b:	call	0x1d30


0x7d70:	mov	rdi, qword ptr [rbx + 0x20]
0x7d74:	call	0x1d30


0x7c4d:	test	rax, rax
0x7c50:	mov	qword ptr [rbx], rax
0x7c53:	je	0x7d60


0x7c59:	mov	edi, dword ptr [rbx + 0x48]
0x7c5c:	mov	edx, 9
0x7c61:	lea	rsi, [rbx + 0x58]
0x7c65:	mov	qword ptr [rax + 0x10], r12
0x7c69:	mov	word ptr [rax + 0x70], dx
0x7c6d:	mov	qword ptr [rax + 0x58], 1
0x7c75:	call	0x6b90


0x7c7a:	test	al, al
0x7c7c:	je	0x7d60


0x7c82:	mov	esi, dword ptr [rbx + 0x48]
0x7c85:	test	esi, 0x204
0x7c8b:	jne	0x7cb0


0x7c8d:	mov	edi, dword ptr [rbx + 0x2c]
0x7c90:	lea	rdx, [rip + 0x3f33]
0x7c97:	call	0x6c00


0x7cb0:	lea	rdi, [rbx + 0x60]
0x7cb4:	mov	esi, 0xffffffff
0x7cb9:	call	0x9db0


0x7afc:	test	rax, rax
0x7aff:	mov	r15, rax
0x7b02:	je	0x7d70


0x7b08:	mov	rax, -1
0x7b0f:	test	r14, r14
0x7b12:	mov	rsi, qword ptr [r13]
0x7b16:	mov	qword ptr [r15 + 0x58], rax
0x7b1a:	mov	qword ptr [r15 + 0x68], rax
0x7b1e:	je	0x7b2d


0x7b2d:	test	rsi, rsi
0x7b30:	je	0x7d9c


0x9383:	test	rax, rax
0x9386:	mov	rbx, rax
0x9389:	je	0x943a


0x943a:	add	rsp, 8
0x943e:	mov	rax, rbx
0x9441:	pop	rbx
0x9442:	pop	rbp
0x9443:	pop	r12
0x9445:	pop	r13
0x9447:	pop	r14
0x9449:	pop	r15
0x944b:	ret	


0x938f:	test	r15, r15
0x9392:	lea	rdi, [rax + 0x28]
0x9396:	je	0x9450


0x9450:	lea	rax, [rip + 0x2889]
0x9457:	mov	qword ptr [rbx + 0x28], rax
0x945b:	call	0x8ce0


0x939c:	mov	qword ptr [rax + 0x28], r15
0x93a0:	call	0x8ce0


0x93a5:	test	al, al
0x93a7:	je	0x9430


0x9430:	mov	rdi, rbx
0x9433:	xor	ebx, ebx
0x9435:	call	0x1d30


0x93ad:	cmp	byte ptr [r15 + 0x10], 0
0x93b2:	je	0x94b0


0x94b0:	test	rbp, rbp
0x94b3:	movss	xmm1, dword ptr [r15 + 8]
0x94b9:	jns	0x9471


0x93b8:	mov	rdi, rbp
0x93bb:	call	0x8ad0


0x94bb:	mov	rax, rbp
0x94be:	pxor	xmm0, xmm0
0x94c2:	shr	rax, 1
0x94c5:	and	ebp, 1
0x94c8:	or	rax, rbp
0x94cb:	cvtsi2ss	xmm0, rax
0x94d0:	addss	xmm0, xmm0
0x94d4:	jmp	0x947a


0x9471:	pxor	xmm0, xmm0
0x9475:	cvtsi2ss	xmm0, rbp
0x947a:	divss	xmm0, xmm1
0x947e:	ucomiss	xmm0, dword ptr [rip + 0x2887]
0x9485:	jae	0x9430


0x947a:	divss	xmm0, xmm1
0x947e:	ucomiss	xmm0, dword ptr [rip + 0x2887]
0x9485:	jae	0x9430


0x9487:	ucomiss	xmm0, dword ptr [rip + 0x2882]
0x948e:	jb	0x94e0


0x94e0:	cvttss2si	rbp, xmm0
0x94e5:	jmp	0x93b8


0x9490:	subss	xmm0, dword ptr [rip + 0x2878]
0x9498:	movabs	rax, 0x8000000000000000
0x94a2:	cvttss2si	rbp, xmm0
0x94a7:	xor	rbp, rax
0x94aa:	jmp	0x93b8


0x93c0:	mov	edx, 8
0x93c5:	mov	rbp, rax
0x93c8:	xor	ecx, ecx
0x93ca:	mov	rax, rdx
0x93cd:	mul	rbp
0x93d0:	jo	0x94ea


0x94ea:	mov	ecx, 1
0x94ef:	jmp	0x93d6


0x93d6:	test	rax, rax
0x93d9:	js	0x9430


0x93db:	test	rcx, rcx
0x93de:	jne	0x9430


0x93e0:	test	rbp, rbp
0x93e3:	mov	qword ptr [rbx + 0x10], rbp
0x93e7:	je	0x9430


0x93e9:	mov	esi, 0x10
0x93ee:	mov	rdi, rbp
0x93f1:	call	0x1b30


0x93f6:	test	rax, rax
0x93f9:	mov	qword ptr [rbx], rax
0x93fc:	je	0x9430


0x93fe:	shl	rbp, 4
0x9402:	mov	qword ptr [rbx + 0x18], 0
0x940a:	mov	qword ptr [rbx + 0x20], 0
0x9412:	add	rbp, rax
0x9415:	mov	qword ptr [rbx + 0x30], r12
0x9419:	mov	qword ptr [rbx + 0x38], r13
0x941d:	mov	qword ptr [rbx + 8], rbp
0x9421:	mov	qword ptr [rbx + 0x40], r14
0x9425:	mov	qword ptr [rbx + 0x48], 0
0x942d:	jmp	0x943a


0x9460:	test	al, al
0x9462:	movss	xmm1, dword ptr [rip + 0x289e]
0x946a:	je	0x9430


0x946c:	test	rbp, rbp
0x946f:	js	0x94bb


0x6931:	test	rax, rax
0x6934:	mov	r12, rax
0x6937:	mov	qword ptr [rbx + 0x50], rax
0x693b:	jne	0x68e9


0x693d:	test	r13d, r13d
0x6940:	jns	0x6970


0x6970:	lea	rsi, [rsp + 0x10]
0x6975:	mov	edi, r13d
0x6978:	call	0x1ca0


0x1ca0:	jmp	qword ptr [rip + 0x20c2e2]




0x6bbd:	test	rax, rax
0x6bc0:	mov	qword ptr [rbx], rax
0x6bc3:	setne	al
0x6bc6:	pop	rbx
0x6bc7:	ret	


0x9e6e:	test	rax, rax
0x9e71:	je	0x9e90


0x9e90:	lea	rax, [rip + 0x1e89]
0x9e97:	add	rsp, 8
0x9e9b:	ret	


0x9e73:	cmp	byte ptr [rax], 0
0x9e76:	lea	rdx, [rip + 0x1ea3]
0x9e7d:	cmove	rax, rdx
0x9e81:	add	rsp, 8
0x9e85:	ret	


0x39e0:	movzx	edx, byte ptr [rax]
0x39e3:	and	edx, 0xffffffdf
0x39e6:	cmp	dl, 0x55
0x39e9:	je	0x3a60


0x3a60:	movzx	edx, byte ptr [rax + 1]
0x3a64:	and	edx, 0xffffffdf
0x3a67:	cmp	dl, 0x54
0x3a6a:	jne	0x39f0


0x39eb:	cmp	dl, 0x47
0x39ee:	je	0x3a10


0x3a6c:	movzx	edx, byte ptr [rax + 2]
0x3a70:	and	edx, 0xffffffdf
0x3a73:	cmp	dl, 0x46
0x3a76:	jne	0x39f0


0x39f0:	lea	rax, [rip + 0x782c]
0x39f7:	lea	rdx, [rip + 0x7827]
0x39fe:	cmp	ebx, 9
0x3a01:	cmovne	rax, rdx
0x3a05:	add	rsp, 8
0x3a09:	pop	rbx
0x3a0a:	pop	rbp
0x3a0b:	ret	


0x3a10:	movzx	edx, byte ptr [rax + 1]
0x3a14:	and	edx, 0xffffffdf
0x3a17:	cmp	dl, 0x42
0x3a1a:	jne	0x39f0


0x3a7c:	cmp	byte ptr [rax + 3], 0x2d
0x3a80:	jne	0x39f0


0x3a1c:	cmp	byte ptr [rax + 2], 0x31
0x3a20:	jne	0x39f0


0x3a86:	cmp	byte ptr [rax + 4], 0x38
0x3a8a:	jne	0x39f0


0x3a22:	cmp	byte ptr [rax + 3], 0x38
0x3a26:	jne	0x39f0


0x3a90:	cmp	byte ptr [rax + 5], 0
0x3a94:	jne	0x39f0


0x3a28:	cmp	byte ptr [rax + 4], 0x30
0x3a2c:	jne	0x39f0


0x3a9a:	cmp	byte ptr [rbp], 0x60
0x3a9e:	lea	rax, [rip + 0x776f]
0x3aa5:	lea	rdx, [rip + 0x776c]
0x3aac:	cmovne	rax, rdx
0x3ab0:	add	rsp, 8
0x3ab4:	pop	rbx
0x3ab5:	pop	rbp
0x3ab6:	ret	


0x3a2e:	cmp	byte ptr [rax + 5], 0x33
0x3a32:	jne	0x39f0


0x3a34:	cmp	byte ptr [rax + 6], 0x30
0x3a38:	jne	0x39f0


0x3a3a:	cmp	byte ptr [rax + 7], 0
0x3a3e:	jne	0x39f0


0x3a40:	cmp	byte ptr [rbp], 0x60
0x3a44:	lea	rax, [rip + 0x77d1]
0x3a4b:	lea	rdx, [rip + 0x77ce]
0x3a52:	cmovne	rax, rdx
0x3a56:	add	rsp, 8
0x3a5a:	pop	rbx
0x3a5b:	pop	rbp
0x3a5c:	ret	


0x9f2a:	test	eax, eax
0x9f2c:	js	0x9f80


0x9f80:	add	rsp, 8
0x9f84:	xor	ebp, ebp
0x9f86:	pop	rbx
0x9f87:	mov	rax, rbp
0x9f8a:	pop	rbp
0x9f8b:	pop	r12
0x9f8d:	pop	r13
0x9f8f:	ret	


0x9f2e:	mov	edi, eax
0x9f30:	mov	ebx, eax
0x9f32:	call	0x1c80


0x1c80:	jmp	qword ptr [rip + 0x20c2f2]




0x74da:	test	rax, rax
0x74dd:	mov	qword ptr [rbp + 0x18], rax
0x74e1:	je	0x7800


0x7800:	cmp	dword ptr [rsp + 0x58], 3
0x7805:	jne	0x75ec


0x74e7:	cmp	word ptr [rbp + 0x70], 0xb
0x74ec:	je	0x7880


0x7880:	xor	edx, edx
0x7882:	mov	rsi, rbp
0x7885:	mov	rdi, r15
0x7888:	call	0x64b0


0x74f2:	mov	edi, dword ptr [r15 + 0x48]
0x74f6:	test	edi, 0x100
0x74fc:	jne	0x7620


0x7502:	cmp	qword ptr [r15 + 0x40], 1
0x7507:	sbb	rax, rax
0x750a:	and	eax, 0x186a1
0x750f:	sub	rax, 1
0x7513:	cmp	dword ptr [rsp + 0x58], 2
0x7518:	mov	qword ptr [rsp + 0x38], rax
0x751d:	je	0x7870


0x7620:	lea	rbx, [r15 + 0x58]
0x7624:	mov	rdx, rbp
0x7627:	mov	rsi, rbx
0x762a:	call	0x6f70


0x7870:	mov	byte ptr [rsp + 0x5f], 0
0x7875:	mov	edi, dword ptr [r15 + 0x48]
0x7879:	jmp	0x709b


0x7523:	mov	edx, dword ptr [r15 + 0x48]
0x7527:	mov	eax, dword ptr [rsp + 0x64]
0x752b:	and	edx, 0x38
0x752e:	cmp	edx, 0x18
0x7531:	je	0x78d4


0x78d4:	cmp	qword ptr [rbp + 0x88], 2
0x78dc:	jne	0x7537


0x7537:	cmp	dword ptr [rsp + 0x58], 3
0x753c:	mov	r12d, 1
0x7542:	sete	bl
0x7545:	test	byte ptr [r15 + 0x49], 2
0x754a:	jne	0x792c


0x78e2:	mov	esi, eax
0x78e4:	mov	rdi, rbp
0x78e7:	call	0x69e0


0x7550:	test	eax, eax
0x7552:	jns	0x78b8


0x792c:	mov	edi, eax
0x792e:	mov	edx, 3
0x7933:	mov	esi, 0x406
0x7938:	xor	eax, eax
0x793a:	call	0xa050


0x7558:	test	bl, bl
0x755a:	je	0x756b


0x78b8:	xor	ecx, ecx
0x78ba:	mov	edx, eax
0x78bc:	mov	rsi, rbp
0x78bf:	mov	rdi, r15
0x78c2:	call	0x6c40


0x756b:	or	word ptr [rbp + 0x72], 1
0x7570:	mov	rdi, qword ptr [rbp + 0x18]
0x7574:	call	0x1b00


0x755c:	test	r12b, r12b
0x755f:	je	0x756b


0x7561:	call	0x1930


0x7566:	mov	eax, dword ptr [rax]
0x7568:	mov	dword ptr [rbp + 0x40], eax
0x756b:	or	word ptr [rbp + 0x72], 1
0x7570:	mov	rdi, qword ptr [rbp + 0x18]
0x7574:	call	0x1b00


0x7579:	mov	edi, dword ptr [r15 + 0x48]
0x757d:	mov	qword ptr [rbp + 0x18], 0
0x7585:	test	edi, 0x200
0x758b:	je	0x75a0


0x75a0:	mov	qword ptr [rbp + 0x18], 0
0x75a8:	mov	byte ptr [rsp + 0x5f], 0
0x75ad:	jmp	0x709b


0x758d:	mov	eax, dword ptr [rsp + 0x64]
0x7591:	test	eax, eax
0x7593:	js	0x75a0


0x7595:	mov	edi, eax
0x7597:	call	0x1ae0


0x759c:	mov	edi, dword ptr [r15 + 0x48]
0x75a0:	mov	qword ptr [rbp + 0x18], 0
0x75a8:	mov	byte ptr [rsp + 0x5f], 0
0x75ad:	jmp	0x709b


0x78c7:	test	eax, eax
0x78c9:	jne	0x7558


0x78cf:	jmp	0x7092


0x7092:	mov	edi, dword ptr [r15 + 0x48]
0x7096:	mov	byte ptr [rsp + 0x5f], 1
0x709b:	mov	rcx, qword ptr [rbp + 0x48]
0x709f:	mov	rdx, qword ptr [rbp + 0x38]
0x70a3:	mov	qword ptr [rsp + 0x40], 0
0x70ac:	cmp	byte ptr [rdx + rcx - 1], 0x2f
0x70b1:	lea	rax, [rcx - 1]
0x70b5:	cmovne	rax, rcx
0x70b9:	and	edi, 4
0x70bc:	mov	qword ptr [rsp + 0x48], rax
0x70c1:	je	0x70d3


0x793f:	mov	dword ptr [rsp + 0x64], eax
0x7943:	jmp	0x7550


0x78ec:	test	eax, eax
0x78ee:	jne	0x796e


0x78f0:	mov	eax, dword ptr [rsp + 0x64]
0x78f4:	jmp	0x7537


0x796e:	cmp	dword ptr [rsp + 0x58], 3
0x7973:	jne	0x7870


0x7979:	mov	eax, dword ptr [rsp + 0x64]
0x797d:	xor	r12d, r12d
0x7980:	mov	ebx, 1
0x7985:	jmp	0x7545


0x7545:	test	byte ptr [r15 + 0x49], 2
0x754a:	jne	0x792c


0x762f:	xor	edx, edx
0x7631:	mov	rsi, rbp
0x7634:	mov	rdi, r15
0x7637:	call	0x64b0


0x763c:	mov	edi, dword ptr [r15 + 0x48]
0x7640:	mov	rdx, rbp
0x7643:	mov	rsi, rbx
0x7646:	call	0x6ec0


0x764b:	test	al, al
0x764d:	jne	0x7502


0x7653:	call	0x1930


0x7658:	mov	qword ptr [rsp + 0x10], 0
0x7661:	mov	dword ptr [rax], 0xc
0x7667:	jmp	0x75f5


0x788d:	mov	word ptr [rbp + 0x70], ax
0x7891:	jmp	0x7502


0xa343:	mov	edx, r12d
0xa346:	mov	rsi, rbp
0xa349:	mov	edi, eax
0xa34b:	call	0x1ab0


0x1ab0:	jmp	qword ptr [rip + 0x20c3da]




0x9fdc:	test	eax, eax
0x9fde:	mov	rdi, rbx
0x9fe1:	js	0xa037


0xa037:	pop	rbx
0xa038:	pop	rbp
0xa039:	pop	r12
0xa03b:	jmp	0x19b0


0x9fe3:	call	0x1be0


0x19b0:	jmp	qword ptr [rip + 0x20c45a]




0x9fe8:	test	eax, eax
0x9fea:	jne	0xa018


0x9fec:	mov	rdi, rbx
0x9fef:	call	0xa2d0


0xa018:	mov	rdi, rbx
0xa01b:	call	0x1b70


0xa020:	xor	esi, esi
0xa022:	mov	edx, 1
0xa027:	mov	edi, eax
0xa029:	call	0x1ab0


0xa02e:	cmp	rax, -1
0xa032:	jne	0x9fec


0xa034:	mov	rdi, rbx
0xa037:	pop	rbx
0xa038:	pop	rbp
0xa039:	pop	r12
0xa03b:	jmp	0x19b0


0xa350:	cmp	rax, -1
0xa354:	je	0xa362


0xa362:	pop	rbx
0xa363:	pop	rbp
0xa364:	pop	r12
0xa366:	ret	


0xa356:	and	dword ptr [rbx], 0xffffffef
0xa359:	mov	qword ptr [rbx + 0x90], rax
0xa360:	xor	eax, eax
0xa362:	pop	rbx
0xa363:	pop	rbp
0xa364:	pop	r12
0xa366:	ret	


0x9f37:	test	rax, rax
0x9f3a:	mov	rbp, rax
0x9f3d:	je	0x9f58


0x9f58:	call	0x1930


0x9f3f:	mov	dword ptr [r12], ebx
0x9f43:	add	rsp, 8
0x9f47:	mov	rax, rbp
0x9f4a:	pop	rbx
0x9f4b:	pop	rbp
0x9f4c:	pop	r12
0x9f4e:	pop	r13
0x9f50:	ret	


0x9f5d:	mov	r13d, dword ptr [rax]
0x9f60:	mov	r12, rax
0x9f63:	mov	edi, ebx
0x9f65:	call	0x1ae0


0x9f6a:	mov	rax, rbp
0x9f6d:	mov	dword ptr [r12], r13d
0x9f71:	add	rsp, 8
0x9f75:	pop	rbx
0x9f76:	pop	rbp
0x9f77:	pop	r12
0x9f79:	pop	r13
0x9f7b:	ret	


0x697d:	test	eax, eax
0x697f:	jne	0x6942


0x6981:	test	r12, r12
0x6984:	mov	rbx, qword ptr [rsp + 0x10]
0x6989:	je	0x6944


0x6944:	mov	rdx, qword ptr [rsp + 0x88]
0x694c:	xor	rdx, qword ptr fs:[0x28]
0x6955:	mov	rax, rbx
0x6958:	jne	0x69d2


0x698b:	mov	edi, 0x10
0x6990:	call	0x1ba0


0x6995:	test	rax, rax
0x6998:	mov	r13, rax
0x699b:	je	0x6944


0x699d:	mov	rax, qword ptr [rbp + 0x78]
0x69a1:	mov	qword ptr [r13 + 8], rbx
0x69a5:	mov	rsi, r13
0x69a8:	mov	rdi, r12
0x69ab:	mov	qword ptr [r13], rax
0x69af:	call	0x9b40


0x67cd:	mov	rax, qword ptr [r12 + 0x20]
0x67d2:	mov	byte ptr [rbx + rbp + 0x108], 0
0x67da:	mov	qword ptr [rbx + 0x60], rbp
0x67de:	mov	qword ptr [rbx + 0x50], r12
0x67e2:	mov	dword ptr [rbx + 0x40], 0
0x67e9:	mov	qword ptr [rbx + 0x18], 0
0x67f1:	mov	qword ptr [rbx + 0x38], rax
0x67f5:	mov	dword ptr [rbx + 0x72], 0x30000
0x67fc:	mov	qword ptr [rbx + 0x20], 0
0x6804:	mov	qword ptr [rbx + 0x28], 0
0x680c:	add	rsp, 8
0x6810:	mov	rax, rbx
0x6813:	pop	rbx
0x6814:	pop	rbp
0x6815:	pop	r12
0x6817:	pop	r13
0x6819:	ret	


0x280c:	lea	rdi, [rax + 1]
0x2810:	mov	byte ptr [rax], 0x3a
0x2813:	mov	rsi, rbx
0x2816:	call	0x1960


0x1960:	jmp	qword ptr [rip + 0x20c482]




0x1dab:	lea	rdi, [rip + 0x86f2]
0x1db2:	call	0x19a0


0x19a0:	jmp	qword ptr [rip + 0x20c462]




0x4edd:	mov	dword ptr [rbp], r12d
0x4ee1:	pop	rbx
0x4ee2:	pop	rbp
0x4ee3:	pop	r12
0x4ee5:	ret	


0x4d9e:	mov	dword ptr [rip + 0x2092b3], r12d
0x4da5:	mov	eax, dword ptr [rbp + 4]
0x4da8:	shl	r15, 4
0x4dac:	sub	rsp, 8
0x4db0:	add	rbx, r15
0x4db3:	lea	r15, [rbp + 8]
0x4db7:	mov	r8d, dword ptr [rbp]
0x4dbb:	mov	r11, qword ptr [rbx]
0x4dbe:	mov	r12, qword ptr [rbx + 8]
0x4dc2:	mov	rcx, r14
0x4dc5:	or	eax, 1
0x4dc8:	mov	dword ptr [rsp + 0x24], eax
0x4dcc:	push	qword ptr [rbp + 0x30]
0x4dcf:	mov	r9d, eax
0x4dd2:	push	qword ptr [rbp + 0x28]
0x4dd5:	push	r15
0x4dd7:	mov	rsi, r11
0x4dda:	mov	rdx, qword ptr [rsp + 0x28]
0x4ddf:	mov	rdi, r12
0x4de2:	mov	qword ptr [rsp + 0x30], r11
0x4de7:	call	0x3ac0


0x606a:	mov	edx, dword ptr [rsp + 8]
0x606e:	mov	rsi, qword ptr [rax]
0x6071:	mov	rax, rbp
0x6074:	jmp	0x6087


0x6087:	movzx	ecx, bl
0x608a:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x608f:	jne	0x6080


0x6091:	cmp	bl, 0x2d
0x6094:	je	0x60e8


0x6080:	add	rax, 1
0x6084:	movzx	ebx, byte ptr [rax]
0x6087:	movzx	ecx, bl
0x608a:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x608f:	jne	0x6080


0x60e8:	mov	ebp, 4
0x60ed:	mov	rdi, qword ptr [rsp + 0x18]
0x60f2:	xor	rdi, qword ptr fs:[0x28]
0x60fb:	mov	eax, ebp
0x60fd:	jne	0x6390


0x6096:	mov	rsi, r15
0x6099:	mov	rdi, rbp
0x609c:	call	0x1c90


0x6103:	add	rsp, 0x28
0x6107:	pop	rbx
0x6108:	pop	rbp
0x6109:	pop	r12
0x610b:	pop	r13
0x610d:	pop	r14
0x610f:	pop	r15
0x6111:	ret	


0x6390:	call	0x1a40


0x1c90:	jmp	qword ptr [rip + 0x20c2ea]




0x7227:	test	rax, rax
0x722a:	mov	rbp, rax
0x722d:	je	0x77b0


0x77b0:	mov	eax, dword ptr [r12]
0x77b4:	mov	rbp, qword ptr [rsp + 0x20]
0x77b9:	test	eax, eax
0x77bb:	je	0x77de


0x7233:	test	byte ptr [r15 + 0x48], 0x20
0x7238:	jne	0x7244


0x77de:	mov	rdi, qword ptr [rbp + 0x18]
0x77e2:	test	rdi, rdi
0x77e5:	je	0x76db


0x77bd:	test	rbx, rbx
0x77c0:	mov	dword ptr [rbp + 0x40], eax
0x77c3:	jne	0x78f9


0x723a:	cmp	byte ptr [rax + 0x13], 0x2e
0x723e:	je	0x7420


0x7244:	lea	r13, [rbp + 0x13]
0x7248:	mov	rdi, r13
0x724b:	call	0x1a10


0x76db:	cmp	byte ptr [rsp + 0x5d], 0
0x76e0:	jne	0x7348


0x77eb:	call	0x1b00


0x77c9:	cmp	qword ptr [rsp + 0x50], 0
0x77cf:	mov	eax, 4
0x77d4:	jne	0x78f9


0x78f9:	mov	eax, 7
0x78fe:	jmp	0x77da


0x7420:	cmp	byte ptr [rax + 0x14], 0
0x7424:	je	0x7431


0x77da:	mov	word ptr [rbp + 0x70], ax
0x77de:	mov	rdi, qword ptr [rbp + 0x18]
0x77e2:	test	rdi, rdi
0x77e5:	je	0x76db


0x7431:	mov	r13, qword ptr [rsp + 8]
0x7436:	jmp	0x71fa


0x7426:	cmp	word ptr [rax + 0x14], 0x2e
0x742b:	jne	0x7244


0x71fa:	mov	qword ptr [rsp + 8], r13
0x71ff:	mov	rax, qword ptr [rsp + 0x20]
0x7204:	mov	r13, qword ptr [rax + 0x18]
0x7208:	test	r13, r13
0x720b:	je	0x76d8


0x77f0:	mov	qword ptr [rbp + 0x18], 0
0x77f8:	jmp	0x76db


0x7250:	mov	rsi, r13
0x7253:	mov	rdx, rax
0x7256:	mov	rdi, r15
0x7259:	mov	r14, rax
0x725c:	call	0x6790


0x7261:	test	rax, rax
0x7264:	mov	r13, rax
0x7267:	je	0x7680


0x7680:	mov	rdi, r13
0x7683:	mov	rbp, qword ptr [rsp + 0x20]
0x7688:	mov	ebx, dword ptr [r12]
0x768c:	call	0x1d30


0x726d:	cmp	qword ptr [rsp + 0x28], r14
0x7272:	ja	0x7128


0x7278:	mov	rax, qword ptr [r15 + 0x20]
0x727c:	lea	rsi, [r15 + 0x30]
0x7280:	lea	rdi, [r15 + 0x20]
0x7284:	mov	qword ptr [rsp + 0x28], rax
0x7289:	mov	rax, qword ptr [rsp + 0x48]
0x728e:	lea	rdx, [rax + r14 + 2]
0x7293:	call	0x6b20


0x7128:	mov	r9, r14
0x712b:	add	r9, qword ptr [rsp + 0x18]
0x7130:	jb	0x7990


0x7990:	mov	rdi, r13
0x7993:	mov	rbp, qword ptr [rsp + 0x20]
0x7998:	call	0x1d30


0x7136:	mov	rax, qword ptr [rsp + 0x30]
0x713b:	lea	rsi, [r13 + 0x108]
0x7142:	mov	qword ptr [r13 + 0x58], rax
0x7146:	mov	rax, qword ptr [r15]
0x7149:	mov	qword ptr [r13 + 0x48], r9
0x714d:	mov	qword ptr [r13 + 8], rax
0x7151:	mov	rax, qword ptr [rbp]
0x7155:	mov	qword ptr [r13 + 0x80], rax
0x715c:	mov	eax, dword ptr [r15 + 0x48]
0x7160:	test	al, 4
0x7162:	jne	0x73d0


0x7168:	mov	qword ptr [r13 + 0x30], rsi
0x716c:	cmp	qword ptr [r15 + 0x40], 0
0x7171:	je	0x717c


0x73d0:	mov	rax, qword ptr [r13 + 0x38]
0x73d4:	mov	rdi, qword ptr [rsp + 0x40]
0x73d9:	mov	qword ptr [r13 + 0x30], rax
0x73dd:	mov	rax, qword ptr [r13 + 0x60]
0x73e1:	lea	rdx, [rax + 1]
0x73e5:	call	0x1c30


0x717c:	movzx	edx, byte ptr [rbp + 0x12]
0x7180:	and	eax, 0x18
0x7183:	mov	esi, edx
0x7185:	sub	edx, 1
0x7188:	cmp	eax, 0x18
0x718b:	je	0x7440


0x7173:	test	ah, 4
0x7176:	je	0x7478


0x7440:	and	esi, 0xfb
0x7446:	je	0x7191


0x7191:	mov	ecx, 0xb
0x7196:	cmp	edx, 0xb
0x7199:	mov	word ptr [r13 + 0x70], cx
0x719e:	ja	0x7408


0x7478:	xor	edx, edx
0x747a:	mov	rsi, r13
0x747d:	mov	rdi, r15
0x7480:	call	0x64b0


0x744c:	mov	eax, 0xb
0x7451:	cmp	edx, 0xb
0x7454:	mov	word ptr [r13 + 0x70], ax
0x7459:	jbe	0x79e6


0x71a4:	lea	rax, [rip + 0x4a35]
0x71ab:	mov	eax, dword ptr [rax + rdx*4]
0x71ae:	mov	dword ptr [r13 + 0x90], eax
0x71b5:	mov	eax, 2
0x71ba:	mov	qword ptr [r13 + 0xa8], rax
0x71c1:	cmp	qword ptr [rsp + 0x10], 0
0x71c7:	mov	qword ptr [r13 + 0x10], 0
0x71cf:	je	0x73f8


0x7408:	mov	dword ptr [r13 + 0x90], 0
0x7413:	mov	eax, 2
0x7418:	jmp	0x71ba


0x79e6:	lea	rax, [rip + 0x41f3]
0x79ed:	mov	eax, dword ptr [rax + rdx*4]
0x79f0:	mov	dword ptr [r13 + 0x90], eax
0x79f7:	mov	eax, 1
0x79fc:	jmp	0x71ba


0x745f:	mov	dword ptr [r13 + 0x90], 0
0x746a:	mov	eax, 1
0x746f:	jmp	0x71ba


0x73f8:	mov	qword ptr [rsp + 0x10], r13
0x73fd:	jmp	0x71de


0x71d5:	mov	rax, qword ptr [rsp + 8]
0x71da:	mov	qword ptr [rax + 0x10], r13
0x71de:	cmp	rbx, 0x2710
0x71e5:	je	0x72e0


0x71ba:	mov	qword ptr [r13 + 0xa8], rax
0x71c1:	cmp	qword ptr [rsp + 0x10], 0
0x71c7:	mov	qword ptr [r13 + 0x10], 0
0x71cf:	je	0x73f8


0x71de:	cmp	rbx, 0x2710
0x71e5:	je	0x72e0


0x72e0:	cmp	qword ptr [r15 + 0x40], 0
0x72e5:	jne	0x71eb


0x71eb:	add	rbx, 1
0x71ef:	cmp	rbx, qword ptr [rsp + 0x38]
0x71f4:	jae	0x7338


0x72eb:	mov	esi, dword ptr [rsp + 0x64]
0x72ef:	mov	rdi, qword ptr [rsp + 0x20]
0x72f4:	call	0x68b0


0x7338:	cmp	byte ptr [rsp + 0x5d], 0
0x733d:	mov	rbp, qword ptr [rsp + 0x20]
0x7342:	je	0x76e6


0x72f9:	cmp	rax, 0x1021994
0x72ff:	je	0x7670


0x7670:	mov	byte ptr [rsp + 0x5e], 0
0x7675:	jmp	0x71eb


0x7305:	mov	ecx, 0xff534d42
0x730a:	cmp	rax, rcx
0x730d:	je	0x7670


0x7313:	cmp	rax, 0x6969
0x7319:	je	0x7670


0x731f:	add	rbx, 1
0x7323:	cmp	rbx, qword ptr [rsp + 0x38]
0x7328:	mov	byte ptr [rsp + 0x5e], 1
0x732d:	jb	0x71fa


0x7485:	mov	word ptr [r13 + 0x70], ax
0x748a:	jmp	0x71c1


0x71c1:	cmp	qword ptr [rsp + 0x10], 0
0x71c7:	mov	qword ptr [r13 + 0x10], 0
0x71cf:	je	0x73f8


0x73ea:	mov	eax, dword ptr [r15 + 0x48]
0x73ee:	jmp	0x716c


0x716c:	cmp	qword ptr [r15 + 0x40], 0
0x7171:	je	0x717c


0x7298:	test	al, al
0x729a:	je	0x7680


0x72a0:	mov	rdx, qword ptr [r15 + 0x20]
0x72a4:	cmp	rdx, qword ptr [rsp + 0x28]
0x72a9:	je	0x7490


0x7490:	movzx	eax, byte ptr [rsp + 0x5d]
0x7495:	jmp	0x72c4


0x72af:	add	rdx, qword ptr [rsp + 0x18]
0x72b4:	test	byte ptr [r15 + 0x48], 4
0x72b9:	cmove	rdx, qword ptr [rsp + 0x40]
0x72bf:	mov	qword ptr [rsp + 0x40], rdx
0x72c4:	mov	rcx, qword ptr [r15 + 0x30]
0x72c8:	sub	rcx, qword ptr [rsp + 0x18]
0x72cd:	mov	byte ptr [rsp + 0x5d], al
0x72d1:	mov	qword ptr [rsp + 0x28], rcx
0x72d6:	jmp	0x7128


0x72c4:	mov	rcx, qword ptr [r15 + 0x30]
0x72c8:	sub	rcx, qword ptr [rsp + 0x18]
0x72cd:	mov	byte ptr [rsp + 0x5d], al
0x72d1:	mov	qword ptr [rsp + 0x28], rcx
0x72d6:	jmp	0x7128


0x799d:	mov	rdi, qword ptr [rsp + 0x10]
0x79a2:	call	0x6820


0x79a7:	mov	rdi, qword ptr [rbp + 0x18]
0x79ab:	call	0x1b00


0x79b0:	mov	r8d, 7
0x79b6:	mov	qword ptr [rbp + 0x18], 0
0x79be:	mov	qword ptr [rsp + 0x10], 0
0x79c7:	mov	word ptr [rbp + 0x70], r8w
0x79cc:	or	dword ptr [r15 + 0x48], 0x2000
0x79d4:	mov	dword ptr [r12], 0x24
0x79dc:	jmp	0x75f5


0x7691:	mov	rdi, qword ptr [rsp + 0x10]
0x7696:	call	0x6820


0x769b:	mov	rdi, qword ptr [rbp + 0x18]
0x769f:	call	0x1b00


0x76a4:	mov	r9d, 7
0x76aa:	mov	qword ptr [rbp + 0x18], 0
0x76b2:	mov	qword ptr [rsp + 0x10], 0
0x76bb:	mov	word ptr [rbp + 0x70], r9w
0x76c0:	or	dword ptr [r15 + 0x48], 0x2000
0x76c8:	mov	dword ptr [r12], ebx
0x76cc:	jmp	0x75f5


0x380b:	jmp	0x3789


0x5f80:	call	0x1920


0x5caa:	lea	rsi, [rip + 0x5abc]
0x5cb1:	mov	edx, 5
0x5cb6:	xor	edi, edi
0x5cb8:	call	0x19f0


0x5cbd:	lea	rcx, [rip + 0x4ffc]
0x5cc4:	lea	rdx, [rip + 0x47d5]
0x5ccb:	mov	rsi, rax
0x5cce:	mov	edi, 1
0x5cd3:	xor	eax, eax
0x5cd5:	call	0x1c20


0x5cda:	mov	rbx, qword ptr [rip + 0x2083a7]
0x5ce1:	lea	rsi, [rip + 0x5cb8]
0x5ce8:	xor	edi, edi
0x5cea:	mov	edx, 5
0x5cef:	call	0x19f0


0x5cf4:	mov	rsi, rbx
0x5cf7:	mov	rdi, rax
0x5cfa:	pop	rbx
0x5cfb:	jmp	0x1b20


0x23d0:	mov	rbx, qword ptr [rip + 0x20bcb1]
0x23d7:	lea	rsi, [rip + 0x8242]
0x23de:	mov	edx, 5
0x23e3:	xor	edi, edi
0x23e5:	call	0x19f0


0x23ea:	mov	rsi, rbx
0x23ed:	mov	rdi, rax
0x23f0:	call	0x1b20


0x23f5:	mov	rbx, qword ptr [rip + 0x20bc8c]
0x23fc:	lea	rsi, [rip + 0x828d]
0x2403:	mov	edx, 5
0x2408:	xor	edi, edi
0x240a:	call	0x19f0


0x240f:	mov	rsi, rbx
0x2412:	mov	rdi, rax
0x2415:	call	0x1b20


0x241a:	mov	rbx, qword ptr [rip + 0x20bc67]
0x2421:	lea	rsi, [rip + 0x8338]
0x2428:	mov	edx, 5
0x242d:	xor	edi, edi
0x242f:	call	0x19f0


0x2434:	mov	rsi, rbx
0x2437:	mov	rdi, rax
0x243a:	call	0x1b20


0x243f:	mov	rbx, qword ptr [rip + 0x20bc42]
0x2446:	lea	rsi, [rip + 0x83fb]
0x244d:	mov	edx, 5
0x2452:	xor	edi, edi
0x2454:	call	0x19f0


0x2459:	mov	rsi, rbx
0x245c:	mov	rdi, rax
0x245f:	call	0x1b20


0x2464:	mov	rbx, qword ptr [rip + 0x20bc1d]
0x246b:	lea	rsi, [rip + 0x844e]
0x2472:	mov	edx, 5
0x2477:	xor	edi, edi
0x2479:	call	0x19f0


0x247e:	mov	rsi, rbx
0x2481:	mov	rdi, rax
0x2484:	call	0x1b20


0x2489:	mov	rbx, qword ptr [rip + 0x20bbf8]
0x2490:	lea	rsi, [rip + 0x84a9]
0x2497:	mov	edx, 5
0x249c:	xor	edi, edi
0x249e:	call	0x19f0


0x24a3:	mov	rsi, rbx
0x24a6:	mov	rdi, rax
0x24a9:	call	0x1b20


0x24ae:	mov	rbx, qword ptr [rip + 0x20bbd3]
0x24b5:	lea	rsi, [rip + 0x84f4]
0x24bc:	mov	edx, 5
0x24c1:	xor	edi, edi
0x24c3:	call	0x19f0


0x24c8:	mov	rsi, rbx
0x24cb:	mov	rdi, rax
0x24ce:	call	0x1b20


0x24d3:	mov	rbx, qword ptr [rip + 0x20bbae]
0x24da:	lea	rsi, [rip + 0x8517]
0x24e1:	mov	edx, 5
0x24e6:	xor	edi, edi
0x24e8:	call	0x19f0


0x24ed:	mov	rsi, rbx
0x24f0:	mov	rdi, rax
0x24f3:	call	0x1b20


0x24f8:	mov	rbx, qword ptr [rip + 0x20bb89]
0x24ff:	lea	rsi, [rip + 0x86ca]
0x2506:	mov	edx, 5
0x250b:	xor	edi, edi
0x250d:	call	0x19f0


0x2512:	mov	rsi, rbx
0x2515:	mov	rdi, rax
0x2518:	call	0x1b20


0x251d:	mov	rbx, qword ptr [rip + 0x20bb64]
0x2524:	lea	rsi, [rip + 0x86d5]
0x252b:	mov	edx, 5
0x2530:	xor	edi, edi
0x2532:	call	0x19f0


0x2537:	mov	rsi, rbx
0x253a:	mov	rdi, rax
0x253d:	call	0x1b20


0x2542:	mov	rbx, qword ptr [rip + 0x20bbaf]
0x2549:	lea	rsi, [rip + 0x86e8]
0x2550:	mov	edx, 5
0x2555:	xor	edi, edi
0x2557:	call	0x19f0


0x255c:	mov	rcx, rbx
0x255f:	mov	rdx, rbx
0x2562:	mov	rsi, rax
0x2565:	mov	edi, 1
0x256a:	xor	eax, eax
0x256c:	lea	rbx, [rip + 0x7eb1]
0x2573:	call	0x1c20


0x2578:	lea	rax, [rip + 0x7eab]
0x257f:	lea	rcx, [rip + 0x7ee5]
0x2586:	mov	qword ptr [rsp + 0x60], 0
0x258f:	mov	qword ptr [rsp + 0x68], 0
0x2598:	mov	rdx, rsp
0x259b:	mov	qword ptr [rsp], rax
0x259f:	lea	rax, [rip + 0x7e86]
0x25a6:	mov	qword ptr [rsp + 0x30], rcx
0x25ab:	lea	rcx, [rip + 0x7ec3]
0x25b2:	mov	qword ptr [rsp + 8], rax
0x25b7:	lea	rax, [rip + 0x7ee6]
0x25be:	mov	qword ptr [rsp + 0x40], rcx
0x25c3:	lea	rcx, [rip + 0x7eb5]
0x25ca:	mov	qword ptr [rsp + 0x10], rax
0x25cf:	lea	rax, [rip + 0x7e66]
0x25d6:	mov	qword ptr [rsp + 0x50], rcx
0x25db:	mov	qword ptr [rsp + 0x18], rax
0x25e0:	lea	rax, [rip + 0x7e6b]
0x25e7:	mov	qword ptr [rsp + 0x20], rax
0x25ec:	lea	rax, [rip + 0x7e69]
0x25f3:	mov	qword ptr [rsp + 0x28], rax
0x25f8:	mov	qword ptr [rsp + 0x38], rax
0x25fd:	mov	qword ptr [rsp + 0x48], rax
0x2602:	mov	qword ptr [rsp + 0x58], rax
0x2607:	nop	word ptr [rax + rax]
0x2610:	add	rdx, 0x10
0x2614:	mov	rdi, qword ptr [rdx]
0x2617:	test	rdi, rdi
0x261a:	je	0x262f


0x262f:	mov	r12, qword ptr [rdx + 8]
0x2633:	xor	edi, edi
0x2635:	mov	edx, 5
0x263a:	lea	rsi, [rip + 0x7e48]
0x2641:	test	r12, r12
0x2644:	je	0x270b


0x261c:	mov	ecx, 6
0x2621:	mov	rsi, rbx
0x2624:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x270b:	call	0x19f0


0x264a:	call	0x19f0


0x2624:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2626:	seta	al
0x2629:	sbb	al, 0
0x262b:	test	al, al
0x262d:	jne	0x2610


0x2610:	add	rdx, 0x10
0x2614:	mov	rdi, qword ptr [rdx]
0x2617:	test	rdi, rdi
0x261a:	je	0x262f


0x264f:	lea	rcx, [rip + 0x866a]
0x2656:	lea	rdx, [rip + 0x7e43]
0x265d:	mov	rsi, rax
0x2660:	mov	edi, 1
0x2665:	xor	eax, eax
0x2667:	call	0x1c20


0x266c:	xor	esi, esi
0x266e:	mov	edi, 5
0x2673:	call	0x1c10


0x2678:	test	rax, rax
0x267b:	je	0x2699


0x2699:	lea	rsi, [rip + 0x7e12]
0x26a0:	xor	edi, edi
0x26a2:	mov	edx, 5
0x26a7:	call	0x19f0


0x267d:	lea	rsi, [rip + 0x7e2a]
0x2684:	mov	edx, 3
0x2689:	mov	rdi, rax
0x268c:	call	0x1940


0x1940:	jmp	qword ptr [rip + 0x20c492]




0x26ac:	lea	rcx, [rip + 0x7d71]
0x26b3:	lea	rdx, [rip + 0x8606]
0x26ba:	mov	rsi, rax
0x26bd:	mov	edi, 1
0x26c2:	xor	eax, eax
0x26c4:	call	0x1c20


0x26c9:	cmp	r12, rbx
0x26cc:	lea	rcx, [rip + 0x7d73]
0x26d3:	lea	rbx, [rip + 0x9067]
0x26da:	cmove	rbx, rcx
0x26de:	lea	rsi, [rip + 0x864b]
0x26e5:	xor	edi, edi
0x26e7:	mov	edx, 5
0x26ec:	call	0x19f0


0x26f1:	mov	rcx, rbx
0x26f4:	mov	rsi, rax
0x26f7:	mov	rdx, r12
0x26fa:	mov	edi, 1
0x26ff:	xor	eax, eax
0x2701:	call	0x1c20


0x2706:	jmp	0x23a6


0x2710:	lea	rcx, [rip + 0x85a9]
0x2717:	lea	rdx, [rip + 0x7d82]
0x271e:	mov	rsi, rax
0x2721:	mov	edi, 1
0x2726:	xor	eax, eax
0x2728:	call	0x1c20


0x272d:	xor	esi, esi
0x272f:	mov	edi, 5
0x2734:	call	0x1c10


0x2739:	test	rax, rax
0x273c:	je	0x2756


0x2756:	lea	rsi, [rip + 0x7d55]
0x275d:	mov	edx, 5
0x2762:	xor	edi, edi
0x2764:	lea	r12, [rip + 0x7cb9]
0x276b:	lea	rbx, [rip + 0x7cd4]
0x2772:	call	0x19f0


0x273e:	lea	rsi, [rip + 0x7d69]
0x2745:	mov	edx, 3
0x274a:	mov	rdi, rax
0x274d:	call	0x1940


0x2777:	lea	rcx, [rip + 0x7ca6]
0x277e:	lea	rdx, [rip + 0x853b]
0x2785:	mov	rsi, rax
0x2788:	mov	edi, 1
0x278d:	xor	eax, eax
0x278f:	call	0x1c20


0x2794:	jmp	0x26de


0x26de:	lea	rsi, [rip + 0x864b]
0x26e5:	xor	edi, edi
0x26e7:	mov	edx, 5
0x26ec:	call	0x19f0


0x576c:	cmp	r12, 9
0x5770:	ja	0x5ab0


0x5776:	lea	rdx, [rip + 0x6267]
0x577d:	movsxd	rax, dword ptr [rdx + r12*4]
0x5781:	add	rax, rdx
0x5784:	jmp	rax


0x5ab0:	mov	r10, qword ptr [rbx + 0x40]
0x5ab4:	mov	r9, qword ptr [rbx + 0x38]
0x5ab8:	mov	edx, 5
0x5abd:	mov	rax, qword ptr [rbx + 0x10]
0x5ac1:	mov	r8, qword ptr [rbx + 8]
0x5ac5:	lea	rsi, [rip + 0x5e94]
0x5acc:	mov	r13, qword ptr [rbx + 0x30]
0x5ad0:	mov	r12, qword ptr [rbx + 0x28]
0x5ad4:	mov	r15, qword ptr [rbx + 0x20]
0x5ad8:	mov	r14, qword ptr [rbx + 0x18]
0x5adc:	mov	qword ptr [rsp + 0x18], r10
0x5ae1:	mov	qword ptr [rsp + 0x10], r9
0x5ae6:	mov	qword ptr [rsp], rax
0x5aea:	mov	qword ptr [rsp + 8], r8
0x5aef:	mov	rbx, qword ptr [rbx]
0x5af2:	jmp	0x5882


0x5882:	xor	edi, edi
0x5884:	call	0x19f0


0x5889:	mov	r10, qword ptr [rsp + 0x18]
0x588e:	push	r10
0x5890:	jmp	0x57d4


0x57d4:	mov	r9, qword ptr [rsp + 0x18]
0x57d9:	mov	rdx, rax
0x57dc:	mov	rcx, rbx
0x57df:	mov	esi, 1
0x57e4:	mov	rdi, rbp
0x57e7:	xor	eax, eax
0x57e9:	push	r9
0x57eb:	push	r13
0x57ed:	push	r12
0x57ef:	push	r15
0x57f1:	push	r14
0x57f3:	mov	r9, qword ptr [rsp + 0x30]
0x57f8:	mov	r8, qword ptr [rsp + 0x38]
0x57fd:	call	0x1cf0


0x5802:	add	rsp, 0x30
0x5806:	add	rsp, 0x28
0x580a:	pop	rbx
0x580b:	pop	rbp
0x580c:	pop	r12
0x580e:	pop	r13
0x5810:	pop	r14
0x5812:	pop	r15
0x5814:	ret	


0x2929:	mov	rdx, qword ptr [rsp + 0x18]
0x292e:	xor	rdx, qword ptr fs:[0x28]
0x2937:	jne	0x294f


0x2939:	add	rsp, 0x20
0x293d:	pop	rbx
0x293e:	ret	


0x294f:	call	0x1a40


0x28c9:	mov	rdx, qword ptr [rsp + 0x18]
0x28ce:	xor	rdx, qword ptr fs:[0x28]
0x28d7:	jne	0x28ef


0x28d9:	add	rsp, 0x20
0x28dd:	pop	rbx
0x28de:	ret	


0x28ef:	call	0x1a40


0xa307:	mov	rdi, rbx
0xa30a:	pop	rbx
0xa30b:	jmp	0x1bb0


0x366f:	test	eax, eax
0x3671:	mov	r8d, dword ptr [rsp + 0x20]
0x3676:	movzx	ecx, byte ptr [rsp + 0x2c]
0x367b:	jne	0x3420


0x3681:	mov	edi, r8d
0x3684:	mov	byte ptr [rsp + 0x20], cl
0x3688:	call	0x1ae0


0x368d:	test	eax, eax
0x368f:	jne	0x2acf


0x3695:	jmp	0x355f


0x355f:	mov	eax, dword ptr [rbx]
0x3561:	movzx	ecx, byte ptr [rsp + 0x20]
0x3566:	cmp	eax, 2
0x3569:	jne	0x3013


0x333a:	mov	edi, dword ptr [r13 + 0x20]
0x333e:	mov	qword ptr [rsp + 0x10], rax
0x3343:	call	0x28a0


0x3348:	mov	rsi, qword ptr [rsp + 8]
0x334d:	mov	edi, 4
0x3352:	mov	r13, rax
0x3355:	call	0x5370


0x2b04:	mov	edi, dword ptr [r13 + 0x20]
0x2b08:	mov	qword ptr [rsp + 0x10], rax
0x2b0d:	call	0x28a0


0x2b12:	mov	r12, qword ptr [rbx + 0x20]
0x2b16:	mov	r14, qword ptr [rbx + 0x18]
0x2b1a:	mov	r13, rax
0x2b1d:	mov	rsi, r12
0x2b20:	mov	rdi, r14
0x2b23:	call	0x27d0


0x7c9c:	test	eax, eax
0x7c9e:	mov	dword ptr [rbx + 0x28], eax
0x7ca1:	jns	0x7cb0


0x7ca3:	or	dword ptr [rbx + 0x48], 4
0x7ca7:	nop	word ptr [rax + rax]
0x7cb0:	lea	rdi, [rbx + 0x60]
0x7cb4:	mov	esi, 0xffffffff
0x7cb9:	call	0x9db0


0x87cf:	test	eax, eax
0x87d1:	mov	ebp, eax
0x87d3:	js	0x8829


0x8829:	mov	qword ptr [rbx + 8], 0
0x8831:	xor	eax, eax
0x8833:	jmp	0x8794


0x87d5:	mov	esi, r14d
0x87d8:	mov	rdi, rbx
0x87db:	call	0x7030


0x87e0:	test	byte ptr [rbx + 0x49], 2
0x87e4:	mov	qword ptr [rbx + 8], rax
0x87e8:	jne	0x8818


0x87ea:	mov	edi, ebp
0x87ec:	call	0x1bf0


0x8818:	mov	edx, 1
0x881d:	mov	esi, ebp
0x881f:	mov	rdi, rbx
0x8822:	call	0x6a50


0x8827:	jmp	0x87fc


0x87fc:	mov	rax, qword ptr [rbx + 8]
0x8800:	jmp	0x8794


0x87f1:	test	eax, eax
0x87f3:	jne	0x8838


0x87f5:	mov	edi, ebp
0x87f7:	call	0x1ae0


0x8838:	mov	ebx, dword ptr [r13]
0x883c:	mov	edi, ebp
0x883e:	call	0x1ae0


0x8843:	xor	eax, eax
0x8845:	mov	dword ptr [r13], ebx
0x8849:	jmp	0x8794


0x862d:	test	eax, eax
0x862f:	mov	dword ptr [rbx + 0x44], eax
0x8632:	js	0x86b0


0x86b0:	call	0x1930


0x8634:	or	word ptr [rbx + 0x72], 2
0x8639:	jmp	0x85b7


0x86b5:	mov	eax, dword ptr [rax]
0x86b7:	mov	edi, 7
0x86bc:	mov	word ptr [rbx + 0x70], di
0x86c0:	mov	dword ptr [rbx + 0x40], eax
0x86c3:	jmp	0x85b7


0x867d:	test	eax, eax
0x867f:	mov	dword ptr [rbp + 0x44], eax
0x8682:	js	0x8692


0x8692:	call	0x1930


0x8684:	or	word ptr [rbp + 0x72], 2
0x8689:	movzx	eax, word ptr [rbp + 0x70]
0x868d:	jmp	0x829e


0x8697:	mov	eax, dword ptr [rax]
0x8699:	mov	r11d, 7
0x869f:	mov	word ptr [rbp + 0x70], r11w
0x86a4:	mov	dword ptr [rbp + 0x40], eax
0x86a7:	mov	qword ptr [r12], rbp
0x86ab:	jmp	0x80ea


0x6cd2:	test	eax, eax
0x6cd4:	mov	r15d, eax
0x6cd7:	js	0x6e8b


0x6e8b:	mov	ebx, 0xffffffff
0x6e90:	jmp	0x6d45


0x6cdd:	mov	ebx, dword ptr [r13 + 0x48]
0x6ce1:	test	bl, 2
0x6ce4:	je	0x6d8a


0x5c46:	mov	rax, qword ptr [rsp + 0x78]
0x5c4b:	xor	rax, qword ptr fs:[0x28]
0x5c54:	jne	0x5c60


0x5c56:	add	rsp, 0xb8
0x5c5d:	pop	rbx
0x5c5e:	pop	rbp
0x5c5f:	ret	


0x5c60:	call	0x1a40


0x5b70:	mov	rax, qword ptr [rsp + 0x58]
0x5b75:	xor	rax, qword ptr fs:[0x28]
0x5b7e:	jne	0x5b85


0x5b80:	add	rsp, 0x68
0x5b84:	ret	


0x5b85:	call	0x1a40


0x2752:	test	eax, eax
0x2754:	jne	0x2799


0x2799:	lea	r12, [rip + 0x7c84]
0x27a0:	mov	r13, qword ptr [rip + 0x20b8e1]
0x27a7:	lea	rsi, [rip + 0x853a]
0x27ae:	xor	edi, edi
0x27b0:	mov	edx, 5
0x27b5:	call	0x19f0


0x27ba:	mov	rsi, r13
0x27bd:	mov	rdi, rax
0x27c0:	call	0x1b20


0x27c5:	jmp	0x2699


0x2691:	test	eax, eax
0x2693:	jne	0x27a0


0x27a0:	mov	r13, qword ptr [rip + 0x20b8e1]
0x27a7:	lea	rsi, [rip + 0x853a]
0x27ae:	xor	edi, edi
0x27b0:	mov	edx, 5
0x27b5:	call	0x19f0


0x60a1:	mov	rcx, qword ptr [r15]
0x60a4:	mov	rbx, rax
0x60a7:	cmp	rcx, rbp
0x60aa:	je	0x60d8


0x60d8:	test	r13, r13
0x60db:	mov	qword ptr [rsp + 8], rcx
0x60e0:	jne	0x6120


0x60ac:	mov	eax, dword ptr [r12]
0x60b0:	test	eax, eax
0x60b2:	je	0x6118


0x6120:	movzx	r12d, byte ptr [rbp]
0x6125:	test	r12b, r12b
0x6128:	je	0x60e8


0x6118:	xor	ebp, ebp
0x611a:	jmp	0x60be


0x60b4:	cmp	eax, 0x22
0x60b7:	mov	ebp, 1
0x60bc:	jne	0x60e8


0x612a:	movsx	esi, r12b
0x612e:	mov	rdi, r13
0x6131:	xor	ebp, ebp
0x6133:	call	0x1a70


0x60be:	test	r13, r13
0x60c1:	je	0x60cc


0x1a70:	jmp	qword ptr [rip + 0x20c3fa]


0x60cc:	mov	qword ptr [r14], rbx
0x60cf:	jmp	0x60ed


0x60c3:	movzx	r12d, byte ptr [rcx]
0x60c7:	test	r12b, r12b
0x60ca:	jne	0x6147




0x60ed:	mov	rdi, qword ptr [rsp + 0x18]
0x60f2:	xor	rdi, qword ptr fs:[0x28]
0x60fb:	mov	eax, ebp
0x60fd:	jne	0x6390


0x6147:	movsx	esi, r12b
0x614b:	mov	rdi, r13
0x614e:	mov	qword ptr [rsp + 8], rcx
0x6153:	call	0x1a70


0x1db7:	lea	rdi, [rip + 0x1a72]
0x1dbe:	call	0xa400


0x1dc3:	lea	rax, [rsp + 0x20]
0x1dc8:	mov	rdi, rax
0x1dcb:	mov	qword ptr [rsp + 8], rax
0x1dd0:	call	0x2850


0x1a50:	jmp	qword ptr [rip + 0x20c40a]




0x9ff4:	test	eax, eax
0x9ff6:	je	0xa034


0x9ff8:	call	0x1930


0x9ffd:	mov	r12d, dword ptr [rax]
0xa000:	mov	rdi, rbx
0xa003:	mov	rbp, rax
0xa006:	call	0x19b0


0xa00b:	test	r12d, r12d
0xa00e:	jne	0xa040


0xa010:	pop	rbx
0xa011:	pop	rbp
0xa012:	pop	r12
0xa014:	ret	


0xa040:	mov	dword ptr [rbp], r12d
0xa044:	mov	eax, 0xffffffff
0xa049:	jmp	0xa010


0x88fa:	and	ebx, 0x20
0x88fd:	test	ebx, ebx
0x88ff:	jne	0x8918


0x8901:	test	eax, eax
0x8903:	je	0x890f


0x8918:	test	eax, eax
0x891a:	jne	0x8938


0x890f:	pop	rbx
0x8910:	pop	rbp
0x8911:	pop	r12
0x8913:	ret	


0x8905:	test	r12, r12
0x8908:	mov	eax, 0xffffffff
0x890d:	je	0x8948


0x891c:	call	0x1930


0x8938:	pop	rbx
0x8939:	mov	eax, 0xffffffff
0x893e:	pop	rbp
0x893f:	pop	r12
0x8941:	ret	


0x8948:	call	0x1930


0x894d:	cmp	dword ptr [rax], 9
0x8950:	pop	rbx
0x8951:	pop	rbp
0x8952:	pop	r12
0x8954:	setne	al
0x8957:	movzx	eax, al
0x895a:	neg	eax
0x895c:	ret	


0x8921:	mov	dword ptr [rax], 0
0x8927:	mov	eax, 0xffffffff
0x892c:	pop	rbx
0x892d:	pop	rbp
0x892e:	pop	r12
0x8930:	ret	


0x3842:	test	eax, eax
0x3844:	je	0x385c


0x385c:	mov	rdi, qword ptr [rip + 0x20a85d]
0x3863:	call	0x88e0


0x3846:	call	0x1930


0x384b:	cmp	byte ptr [rip + 0x20a896], 0
0x3852:	mov	rbx, rax
0x3855:	je	0x3873


0x3873:	lea	rsi, [rip + 0x793f]
0x387a:	xor	edi, edi
0x387c:	mov	edx, 5
0x3881:	call	0x19f0


0x3857:	cmp	dword ptr [rax], 0x20
0x385a:	jne	0x3873


0x3886:	mov	rdi, qword ptr [rip + 0x20a863]
0x388d:	mov	rbp, rax
0x3890:	test	rdi, rdi
0x3893:	je	0x38bd


0x38bd:	mov	esi, dword ptr [rbx]
0x38bf:	lea	rdx, [rip + 0x6c7d]
0x38c6:	mov	rcx, rax
0x38c9:	xor	edi, edi
0x38cb:	xor	eax, eax
0x38cd:	call	0x1c40


0x3895:	call	0x5440


0x38d2:	jmp	0x38b2


0x38b2:	mov	edi, dword ptr [rip + 0x20a760]
0x38b8:	call	0x1950


0x1950:	jmp	qword ptr [rip + 0x20c48a]




0x3868:	test	eax, eax
0x386a:	jne	0x38b2


0x386c:	add	rsp, 8
0x3870:	pop	rbx
0x3871:	pop	rbp
0x3872:	ret	


0x1df3:	cmp	eax, -1
0x1df6:	je	0x1f49


0x1f49:	cmp	byte ptr [rsp + 0x24], 0
0x1f4e:	jne	0x201d


0x1dfc:	cmp	eax, 0x63
0x1dff:	je	0x1f29


0x1f54:	mov	r12d, 0x10
0x1f5a:	movsxd	rax, dword ptr [rip + 0x20c12f]
0x1f61:	test	r13d, r13d
0x1f64:	mov	r13, qword ptr [rip + 0x20c175]
0x1f6b:	mov	edx, ebp
0x1f6d:	setne	byte ptr [rsp + 0x30]
0x1f72:	sub	edx, eax
0x1f74:	test	r13, r13
0x1f77:	je	0x2039


0x201d:	cmp	r12d, 0x10
0x2021:	jne	0x1f5a


0x1f29:	mov	dword ptr [rsp + 0x20], 1
0x1f31:	jmp	0x1dd8


0x1e05:	jle	0x1e40


0x2039:	sub	edx, 1
0x203c:	jle	0x216f


0x1f7d:	test	edx, edx
0x1f7f:	jle	0x216f


0x2027:	sub	r13d, 1
0x202b:	je	0x2199


0x1f5a:	movsxd	rax, dword ptr [rip + 0x20c12f]
0x1f61:	test	r13d, r13d
0x1f64:	mov	r13, qword ptr [rip + 0x20c175]
0x1f6b:	mov	edx, ebp
0x1f6d:	setne	byte ptr [rsp + 0x30]
0x1f72:	sub	edx, eax
0x1f74:	test	r13, r13
0x1f77:	je	0x2039


0x1dd8:	lea	rcx, [rip + 0x20bbe1]
0x1ddf:	lea	rdx, [rip + 0x871c]
0x1de6:	xor	r8d, r8d
0x1de9:	mov	rsi, rbx
0x1dec:	mov	edi, ebp
0x1dee:	call	0x1a50


0x1e40:	cmp	eax, 0x48
0x1e43:	je	0x1f1e


0x1e07:	cmp	eax, 0x80
0x1e0c:	je	0x1efe


0x216f:	cmp	eax, ebp
0x2171:	jl	0x21bd


0x2042:	mov	r15, qword ptr [rbx + rax*8]
0x2046:	lea	edx, [rax + 1]
0x2049:	mov	dword ptr [rip + 0x20c041], edx
0x204f:	cmp	byte ptr [r15], 0
0x2053:	jne	0x20e7


0x1f85:	lea	rdx, [rsp + 0x50]
0x1f8a:	mov	rsi, r13
0x1f8d:	mov	edi, 1
0x1f92:	call	0x1b80


0x2199:	lea	rsi, [rip + 0x8bc8]
0x21a0:	mov	edx, 5
0x21a5:	xor	edi, edi
0x21a7:	call	0x19f0


0x2031:	xor	r13d, r13d
0x2034:	jmp	0x1f5a


0x1f1e:	mov	r12d, 0x11
0x1f24:	jmp	0x1dd8


0x1e49:	jle	0x1ea0


0x1efe:	mov	r13d, 1
0x1f04:	jmp	0x1dd8


0x1e12:	jg	0x1e70


0x21bd:	mov	rdi, qword ptr [rbx + rbp*8 - 8]
0x21c2:	call	0x5640


0x2173:	lea	rsi, [rip + 0x8391]
0x217a:	xor	edi, edi
0x217c:	mov	edx, 5
0x2181:	call	0x19f0


0x2059:	mov	qword ptr [rsp + 0x40], r13
0x205e:	cmp	byte ptr [r15], 0
0x2062:	je	0x20df


0x20e7:	mov	rdi, r15
0x20ea:	call	0x5f30


0x1ea0:	cmp	eax, 0xffffff7d
0x1ea5:	jne	0x215d


0x1e4b:	cmp	eax, 0x50
0x1e4e:	je	0x1ee9


0x1e14:	cmp	eax, 0x68
0x1e17:	je	0x1f16


0x1e70:	cmp	eax, 0x82
0x1e75:	je	0x1f3e


0x20df:	or	ebp, 0xffffffff
0x20e2:	jmp	0x1faf


0x2064:	mov	rdi, r15
0x2067:	call	0x1b60


0x1eab:	sub	rsp, 8
0x1eaf:	mov	rdi, qword ptr [rip + 0x20c1d2]
0x1eb6:	mov	rcx, qword ptr [rip + 0x20c153]
0x1ebd:	push	0
0x1ebf:	lea	r9, [rip + 0x861f]
0x1ec6:	lea	r8, [rip + 0x8625]
0x1ecd:	lea	rdx, [rip + 0x85cc]
0x1ed4:	lea	rsi, [rip + 0x8549]
0x1edb:	xor	eax, eax
0x1edd:	call	0x5ba0


0x215d:	cmp	eax, 0xffffff7e
0x2162:	jne	0x1e2b


0x1ee9:	mov	r12d, 0x10
0x1eef:	jmp	0x1dd8


0x1e54:	cmp	eax, 0x52
0x1e57:	je	0x1ef4


0x1f16:	xor	r13d, r13d
0x1f19:	jmp	0x1dd8


0x1e1d:	cmp	eax, 0x76
0x1e20:	je	0x1f09


0x1f3e:	mov	r14d, 1
0x1f44:	jmp	0x1dd8


0x1e7b:	jl	0x1f36


0x1faf:	cmp	byte ptr [rsp + 0x24], 0
0x1fb4:	je	0x1fbf


0x1b60:	jmp	qword ptr [rip + 0x20c382]


0x2168:	xor	edi, edi
0x216a:	call	0x2350


0x1e2b:	mov	edi, 1
0x1e30:	call	0x2350


0x1ef4:	mov	byte ptr [rsp + 0x24], r15b
0x1ef9:	jmp	0x1dd8


0x1e5d:	cmp	eax, 0x4c
0x1e60:	jne	0x1e2b


0x1f09:	mov	dword ptr [rsp + 0x20], 0
0x1f11:	jmp	0x1dd8


0x1e26:	cmp	eax, 0x66
0x1e29:	je	0x1e35


0x1f36:	xor	r14d, r14d
0x1f39:	jmp	0x1dd8


0x1e81:	cmp	eax, 0x83
0x1e86:	jne	0x1e2b


0x1fbf:	movsxd	rax, dword ptr [rip + 0x20c0ca]
0x1fc6:	sub	rsp, 8
0x1fca:	or	r9d, 0xffffffff
0x1fce:	push	qword ptr [rsp + 0x10]
0x1fd2:	mov	esi, r12d
0x1fd5:	mov	ecx, ebp
0x1fd7:	or	esi, 0x400
0x1fdd:	mov	edx, r9d
0x1fe0:	mov	r8d, r9d
0x1fe3:	lea	rdi, [rbx + rax*8]
0x1fe7:	call	0x36f0


0x1fb6:	test	r14b, r14b
0x1fb9:	jne	0x2082




0x1e62:	mov	r12d, 2
0x1e68:	jmp	0x1dd8


0x1e35:	mov	byte ptr [rsp + 0x31], r15b
0x1e3a:	jmp	0x1dd8


0x1e88:	mov	rax, qword ptr [rip + 0x20c209]
0x1e8f:	mov	qword ptr [rip + 0x20c24a], rax
0x1e96:	jmp	0x1dd8


0x2082:	lea	rdi, [rip + 0x20c047]
0x2089:	call	0x5660


0x208e:	test	rax, rax
0x2091:	mov	qword ptr [rsp + 0x28], rax
0x2096:	jne	0x1fbf


0x209c:	lea	rsi, [rip + 0x916b]
0x20a3:	mov	edi, 4
0x20a8:	call	0x5370


0x1fec:	pop	rdx
0x1fed:	pop	rcx
0x1fee:	xor	eax, 1
0x1ff1:	movzx	eax, al
0x1ff4:	mov	rcx, qword ptr [rsp + 0xe8]
0x1ffc:	xor	rcx, qword ptr fs:[0x28]
0x2005:	jne	0x21f3


0x200b:	add	rsp, 0xf8
0x2012:	pop	rbx
0x2013:	pop	rbp
0x2014:	pop	r12
0x2016:	pop	r13
0x2018:	pop	r14
0x201a:	pop	r15
0x201c:	ret	


0x21f3:	call	0x1a40


0x1ee2:	xor	edi, edi
0x1ee4:	call	0x1cd0


0x20ef:	mov	r13, rax
0x20f2:	jmp	0x2059


0x2186:	xor	esi, esi
0x2188:	mov	rdx, rax
0x218b:	xor	edi, edi
0x218d:	xor	eax, eax
0x218f:	call	0x1c40


0x2194:	jmp	0x1e2b


0x21ac:	xor	esi, esi
0x21ae:	mov	rdx, rax
0x21b1:	mov	edi, 1
0x21b6:	xor	eax, eax
0x21b8:	call	0x1c40


0x1f97:	test	eax, eax
0x1f99:	jne	0x21f8


0x1f9f:	mov	ebp, dword ptr [rsp + 0x70]
0x1fa3:	mov	edi, ebp
0x1fa5:	call	0x28a0


0x21f8:	mov	rsi, r13
0x21fb:	mov	edi, 4
0x2200:	call	0x5370


0x1faa:	mov	qword ptr [rsp + 0x40], rax
0x1faf:	cmp	byte ptr [rsp + 0x24], 0
0x1fb4:	je	0x1fbf


0x6158:	test	rax, rax
0x615b:	mov	rcx, qword ptr [rsp + 8]
0x6160:	je	0x622c


0x622c:	mov	qword ptr [r14], rbx
0x622f:	or	ebp, 2
0x6232:	jmp	0x60ed


0x6166:	lea	eax, [r12 - 0x45]
0x616b:	cmp	al, 0x2f
0x616d:	ja	0x61c0


0x616f:	movabs	rdx, 0x814400308945
0x6179:	bt	rdx, rax
0x617d:	jae	0x61c0


0x61c0:	mov	edi, 1
0x61c5:	mov	esi, 0x400
0x61ca:	sub	r12d, 0x42
0x61ce:	cmp	r12b, 0x35
0x61d2:	ja	0x622c


0x617f:	mov	esi, 0x30
0x6184:	mov	rdi, r13
0x6187:	mov	qword ptr [rsp + 8], rcx
0x618c:	call	0x1a70


0x61d4:	lea	rdx, [rip + 0x590d]
0x61db:	movzx	r12d, r12b
0x61df:	movsxd	rax, dword ptr [rdx + r12*4]
0x61e3:	add	rax, rdx
0x61e6:	jmp	rax


0x6191:	test	rax, rax
0x6194:	mov	rcx, qword ptr [rsp + 8]
0x6199:	je	0x61c0


0x619b:	movzx	eax, byte ptr [rcx + 1]
0x619f:	cmp	al, 0x44
0x61a1:	je	0x61af


0x61af:	mov	edi, 2
0x61b4:	mov	esi, 0x3e8
0x61b9:	jmp	0x61ca


0x61a3:	cmp	al, 0x69
0x61a5:	je	0x6378


0x61ca:	sub	r12d, 0x42
0x61ce:	cmp	r12b, 0x35
0x61d2:	ja	0x622c


0x6378:	xor	edi, edi
0x637a:	cmp	byte ptr [rcx + 2], 0x42
0x637e:	mov	esi, 0x400
0x6383:	sete	dil
0x6387:	lea	edi, [rdi + rdi + 1]
0x638b:	jmp	0x61ca


0x61ab:	cmp	al, 0x42
0x61ad:	jne	0x61c0


0x6138:	test	rax, rax
0x613b:	mov	ebx, 1
0x6140:	mov	rcx, qword ptr [rsp + 8]
0x6145:	je	0x60e8


0x206c:	test	rax, rax
0x206f:	je	0x20f7


0x20f7:	lea	rcx, [rsp + 0x18]
0x20fc:	lea	r8, [rip + 0x963e]
0x2103:	xor	esi, esi
0x2105:	mov	edx, 0xa
0x210a:	mov	rdi, r15
0x210d:	call	0x6010


0x2075:	mov	ebp, dword ptr [rax + 0x10]
0x2078:	call	0x1910


0x1910:	jmp	qword ptr [rip + 0x20c4aa]




0x2112:	test	eax, eax
0x2114:	jne	0x212b


0x2116:	mov	rax, qword ptr [rsp + 0x18]
0x211b:	mov	edx, 0xffffffff
0x2120:	cmp	rax, rdx
0x2123:	mov	ebp, eax
0x2125:	jbe	0x2078


0x212b:	mov	rdi, r15
0x212e:	call	0x5640


0x2078:	call	0x1910


0x207d:	jmp	0x1faf


0x2133:	lea	rsi, [rip + 0x83fa]
0x213a:	mov	rbx, rax
0x213d:	mov	edx, 5
0x2142:	xor	edi, edi
0x2144:	call	0x19f0


0x2149:	mov	rcx, rbx
0x214c:	mov	rdx, rax
0x214f:	xor	esi, esi
0x2151:	mov	edi, 1
0x2156:	xor	eax, eax
0x2158:	call	0x1c40


0x21c7:	lea	rsi, [rip + 0x834d]
0x21ce:	mov	rbx, rax
0x21d1:	xor	edi, edi
0x21d3:	mov	edx, 5
0x21d8:	call	0x19f0


0x21dd:	mov	rcx, rbx
0x21e0:	mov	rdx, rax
0x21e3:	xor	esi, esi
0x21e5:	xor	edi, edi
0x21e7:	xor	eax, eax
0x21e9:	call	0x1c40


0x21ee:	jmp	0x1e2b


0x389a:	mov	esi, dword ptr [rbx]
0x389c:	lea	rdx, [rip + 0x7922]
0x38a3:	mov	rcx, rax
0x38a6:	mov	r8, rbp
0x38a9:	xor	edi, edi
0x38ab:	xor	eax, eax
0x38ad:	call	0x1c40


0x69b4:	test	rax, rax
0x69b7:	je	0x69c8


0x69c8:	mov	rdi, r13
0x69cb:	call	0x1d30


0x69b9:	cmp	r13, rax
0x69bc:	jne	0x69d7


0x69be:	mov	rbx, qword ptr [rsp + 0x10]
0x69c3:	jmp	0x6944


0x69d7:	call	0x1920


0x69d0:	jmp	0x69be


0x6f0b:	cmp	rbp, rax
0x6f0e:	mov	r12, rax
0x6f11:	je	0x6f31


0x6f13:	mov	rdi, rbp
0x6f16:	call	0x1d30


0x6f1b:	test	r12, r12
0x6f1e:	je	0x6f68


0x6f20:	mov	rax, qword ptr [r12 + 0x10]
0x6f25:	mov	ecx, 2
0x6f2a:	mov	word ptr [rbx + 0x70], cx
0x6f2e:	mov	qword ptr [rbx], rax
0x6f31:	pop	rbx
0x6f32:	mov	eax, 1
0x6f37:	pop	rbp
0x6f38:	pop	r12
0x6f3a:	ret	


0x4dec:	add	rsp, 0x20
0x4df0:	mov	r11, qword ptr [rsp + 0x10]
0x4df5:	cmp	r11, rax
0x4df8:	ja	0x4e61


0x4dfa:	lea	rsi, [rax + 1]
0x4dfe:	lea	rax, [rip + 0x2092fb]
0x4e05:	cmp	r12, rax
0x4e08:	mov	qword ptr [rbx], rsi
0x4e0b:	je	0x4e1f


0x4e61:	mov	eax, dword ptr [rsp + 0x18]
0x4e65:	mov	dword ptr [r13], eax
0x4e69:	add	rsp, 0x28
0x4e6d:	mov	rax, r12
0x4e70:	pop	rbx
0x4e71:	pop	rbp
0x4e72:	pop	r12
0x4e74:	pop	r13
0x4e76:	pop	r14
0x4e78:	pop	r15
0x4e7a:	ret	


0x4e1f:	mov	rdi, rsi
0x4e22:	mov	qword ptr [rsp + 0x10], rsi
0x4e27:	call	0x5d00


0x4e0d:	mov	rdi, r12
0x4e10:	mov	qword ptr [rsp + 0x10], rsi
0x4e15:	call	0x1d30


0x4e1a:	mov	rsi, qword ptr [rsp + 0x10]
0x4e1f:	mov	rdi, rsi
0x4e22:	mov	qword ptr [rsp + 0x10], rsi
0x4e27:	call	0x5d00


0x4e2c:	sub	rsp, 8
0x4e30:	mov	qword ptr [rbx + 8], rax
0x4e34:	mov	r8d, dword ptr [rbp]
0x4e38:	push	qword ptr [rbp + 0x30]
0x4e3b:	push	qword ptr [rbp + 0x28]
0x4e3e:	mov	rcx, r14
0x4e41:	push	r15
0x4e43:	mov	r9d, dword ptr [rsp + 0x3c]
0x4e48:	mov	rdi, rax
0x4e4b:	mov	rdx, qword ptr [rsp + 0x28]
0x4e50:	mov	rsi, qword ptr [rsp + 0x30]
0x4e55:	mov	r12, rax
0x4e58:	call	0x3ac0


0x5572:	mov	rdi, qword ptr [rsp + 0x38]
0x5577:	xor	rdi, qword ptr fs:[0x28]
0x5580:	jne	0x558c


0x5582:	add	rsp, 0x48
0x5586:	ret	


0x558c:	call	0x1a40


0x52bf:	mov	rcx, qword ptr [rsp + 0x38]
0x52c4:	xor	rcx, qword ptr fs:[0x28]
0x52cd:	jne	0x52d9


0x52cf:	add	rsp, 0x48
0x52d3:	ret	


0x52d9:	call	0x1a40


0x34c7:	mov	rdx, qword ptr [rsp + 8]
0x34cc:	xor	edi, edi
0x34ce:	mov	esi, 4
0x34d3:	mov	rbp, rax
0x34d6:	call	0x5250


0x34db:	lea	rsi, [rip + 0x79ee]
0x34e2:	mov	rbx, rax
0x34e5:	xor	edi, edi
0x34e7:	mov	edx, 5
0x34ec:	call	0x19f0


0x34f1:	mov	r8, rbp
0x34f4:	mov	rdx, rax
0x34f7:	mov	rcx, rbx
0x34fa:	xor	esi, esi
0x34fc:	xor	edi, edi
0x34fe:	xor	eax, eax
0x3500:	call	0x1c40


0x3505:	jmp	0x2f0f


0x2f0f:	lea	rsi, [rip + 0x7ffa]
0x2f16:	mov	edx, 5
0x2f1b:	xor	edi, edi
0x2f1d:	xor	r15d, r15d
0x2f20:	call	0x19f0


0x2f25:	xor	esi, esi
0x2f27:	mov	rdx, rax
0x2f2a:	xor	edi, edi
0x2f2c:	xor	eax, eax
0x2f2e:	call	0x1c40


0x2f33:	jmp	0x2e50


0x534b:	mov	rdx, qword ptr [rsp + 0x38]
0x5350:	xor	rdx, qword ptr fs:[0x28]
0x5359:	jne	0x5365


0x535b:	add	rsp, 0x48
0x535f:	ret	


0x5365:	call	0x1a40


0x54df:	mov	rcx, qword ptr [rsp + 0x38]
0x54e4:	xor	rcx, qword ptr fs:[0x28]
0x54ed:	jne	0x54f9


0x54ef:	add	rsp, 0x48
0x54f3:	ret	


0x54f9:	call	0x1a40


0x540e:	mov	rsi, qword ptr [rsp + 0x38]
0x5413:	xor	rsi, qword ptr fs:[0x28]
0x541c:	jne	0x5423


0x541e:	add	rsp, 0x48
0x5422:	ret	


0x5423:	call	0x1a40


0x4e5d:	add	rsp, 0x20
0x4e61:	mov	eax, dword ptr [rsp + 0x18]
0x4e65:	mov	dword ptr [r13], eax
0x4e69:	add	rsp, 0x28
0x4e6d:	mov	rax, r12
0x4e70:	pop	rbx
0x4e71:	pop	rbp
0x4e72:	pop	r12
0x4e74:	pop	r13
0x4e76:	pop	r14
0x4e78:	pop	r15
0x4e7a:	ret	


0x50ac:	lea	rsi, [rax + 1]
0x50b0:	mov	qword ptr [rsp + 0x48], rax
0x50b5:	add	rsp, 0x20
0x50b9:	mov	rdi, rsi
0x50bc:	mov	qword ptr [rsp + 0x18], rsi
0x50c1:	call	0x5d00


0x50c6:	mov	qword ptr [rsp + 0x10], rax
0x50cb:	sub	rsp, 8
0x50cf:	push	qword ptr [rbx + 0x30]
0x50d2:	push	qword ptr [rbx + 0x28]
0x50d5:	mov	r10, qword ptr [rsp + 0x38]
0x50da:	mov	r9d, ebp
0x50dd:	mov	r8d, dword ptr [rbx]
0x50e0:	mov	rcx, r15
0x50e3:	mov	rdx, r14
0x50e6:	mov	rdi, rax
0x50e9:	push	r10
0x50eb:	mov	rsi, qword ptr [rsp + 0x38]
0x50f0:	call	0x3ac0


0x50f5:	mov	eax, dword ptr [rsp + 0x2c]
0x50f9:	add	rsp, 0x20
0x50fd:	test	r12, r12
0x5100:	mov	dword ptr [r13], eax
0x5104:	je	0x510f


0x510f:	mov	rax, qword ptr [rsp + 0x10]
0x5114:	add	rsp, 0x38
0x5118:	pop	rbx
0x5119:	pop	rbp
0x511a:	pop	r12
0x511c:	pop	r13
0x511e:	pop	r14
0x5120:	pop	r15
0x5122:	ret	


0x5106:	mov	r11, qword ptr [rsp + 0x28]
0x510b:	mov	qword ptr [r12], r11
0x510f:	mov	rax, qword ptr [rsp + 0x10]
0x5114:	add	rsp, 0x38
0x5118:	pop	rbx
0x5119:	pop	rbp
0x511a:	pop	r12
0x511c:	pop	r13
0x511e:	pop	r14
0x5120:	pop	r15
0x5122:	ret	


0x5021:	mov	dword ptr [rbp], r12d
0x5025:	add	rsp, 0x38
0x5029:	pop	rbx
0x502a:	pop	rbp
0x502b:	pop	r12
0x502d:	pop	r13
0x502f:	pop	r14
0x5031:	pop	r15
0x5033:	ret	


0x2205:	lea	rsi, [rip + 0x8b8c]
0x220c:	mov	edx, 5
0x2211:	xor	edi, edi
0x2213:	mov	rbp, rax
0x2216:	call	0x19f0


0x221b:	mov	rbx, rax
0x221e:	call	0x1930


0x2223:	mov	esi, dword ptr [rax]
0x2225:	mov	rcx, rbp
0x2228:	mov	rdx, rbx
0x222b:	mov	edi, 1
0x2230:	xor	eax, eax
0x2232:	call	0x1c40


0x2237:	nop	word ptr [rax + rax]


0x20ad:	lea	rsi, [rip + 0x8ce4]
0x20b4:	mov	edx, 5
0x20b9:	xor	edi, edi
0x20bb:	mov	rbp, rax
0x20be:	call	0x19f0


0x20c3:	mov	rbx, rax
0x20c6:	call	0x1930


0x20cb:	mov	esi, dword ptr [rax]
0x20cd:	mov	rcx, rbp
0x20d0:	mov	rdx, rbx
0x20d3:	mov	edi, 1
0x20d8:	xor	eax, eax
0x20da:	call	0x1c40


0x335a:	lea	rsi, [rip + 0x7def]
0x3361:	mov	r12, rax
0x3364:	xor	edi, edi
0x3366:	mov	edx, 5
0x336b:	call	0x19f0


0x3370:	mov	rdx, r12
0x3373:	mov	rsi, rax
0x3376:	mov	edi, 1
0x337b:	xor	eax, eax
0x337d:	call	0x1c20


0x3382:	jmp	0x2bc0


0x2bc0:	mov	rdi, qword ptr [rsp + 0x10]
0x2bc5:	call	0x1d30


0x2bca:	mov	rdi, r13
0x2bcd:	call	0x1d30


0x2b8f:	mov	r14, qword ptr [rsp + 0x20]
0x2b94:	mov	r8, qword ptr [rsp + 0x18]
0x2b99:	mov	rdx, rax
0x2b9c:	mov	rsi, r12
0x2b9f:	mov	edi, 1
0x2ba4:	xor	eax, eax
0x2ba6:	mov	rcx, r14
0x2ba9:	call	0x1c20


0x2bae:	mov	rdi, r14
0x2bb1:	call	0x1d30


0x2bb6:	mov	rdi, qword ptr [rsp + 0x18]
0x2bbb:	call	0x1d30


0x3405:	mov	edx, 5
0x340a:	mov	r14, rax
0x340d:	lea	rsi, [rip + 0x79cd]
0x3414:	jmp	0x327f


0x327f:	xor	edi, edi
0x3281:	call	0x19f0


0x3286:	mov	r12, rax
0x3289:	jmp	0x311b


0x311b:	call	0x1930


0x3120:	mov	esi, dword ptr [rax]
0x3122:	xor	edi, edi
0x3124:	xor	eax, eax
0x3126:	mov	rcx, r14
0x3129:	mov	rdx, r12
0x312c:	call	0x1c40


0x3131:	mov	eax, dword ptr [rbx]
0x3133:	cmp	eax, 2
0x3136:	jne	0x2aeb


0x313c:	jmp	0x2bd2


0x30f7:	cmp	dword ptr [rsp + 0x10], -1
0x30fc:	mov	r14, rax
0x30ff:	mov	edx, 5
0x3104:	je	0x3278


0x3278:	lea	rsi, [rip + 0x7b91]
0x327f:	xor	edi, edi
0x3281:	call	0x19f0


0x310a:	lea	rsi, [rip + 0x7ce6]
0x3111:	xor	edi, edi
0x3113:	call	0x19f0


0x3118:	mov	r12, rax
0x311b:	call	0x1930


0x2ee8:	lea	rsi, [rip + 0x7fb1]
0x2eef:	mov	rbx, rax
0x2ef2:	mov	edx, 5
0x2ef7:	xor	edi, edi
0x2ef9:	call	0x19f0


0x2efe:	mov	rcx, rbx
0x2f01:	mov	rdx, rax
0x2f04:	xor	esi, esi
0x2f06:	xor	edi, edi
0x2f08:	xor	eax, eax
0x2f0a:	call	0x1c40


0x68fc:	test	rax, rax
0x68ff:	je	0x693d


0x6901:	mov	rbx, qword ptr [rax + 8]
0x6905:	jmp	0x6944


0x6fef:	test	rax, rax
0x6ff2:	je	0x7023


0x6ff4:	mov	rdi, rax
0x6ff7:	call	0x1d30


0x6ffc:	jmp	0x6fb5


0x9fa6:	mov	r12d, eax
0x9fa9:	call	0x1930


0x9fae:	mov	r13d, dword ptr [rax]
0x9fb1:	mov	rbp, rax
0x9fb4:	mov	edi, ebx
0x9fb6:	call	0x1ae0


0x9fbb:	mov	ebx, r12d
0x9fbe:	mov	dword ptr [rbp], r13d
0x9fc2:	add	rsp, 8
0x9fc6:	mov	eax, ebx
0x9fc8:	pop	rbx
0x9fc9:	pop	rbp
0x9fca:	pop	r12
0x9fcc:	pop	r13
0x9fce:	ret	


0xa3cd:	add	rbx, 1
0xa3d1:	cmp	rbp, rbx
0xa3d4:	jne	0xa3c0


0xa3c0:	mov	rdx, r15
0xa3c3:	mov	rsi, r14
0xa3c6:	mov	edi, r13d
0xa3c9:	call	qword ptr [r12 + rbx*8]


0x95d8:	mov	rbx, qword ptr [rbx + 8]
0x95dc:	test	rbx, rbx
0x95df:	jne	0x95d0


0x95e1:	mov	rax, qword ptr [r12 + 8]
0x95e6:	add	rbp, 0x10
0x95ea:	cmp	rax, rbp
0x95ed:	ja	0x95b8


0x95d0:	mov	rdi, qword ptr [rbx]
0x95d3:	call	qword ptr [r12 + 0x40]


0x9532:	mov	rax, qword ptr [rbp + 0x40]
0x9536:	mov	rdx, qword ptr [rbx + 8]
0x953a:	mov	rcx, qword ptr [rbp + 0x48]
0x953e:	mov	qword ptr [rbx], 0
0x9545:	test	rdx, rdx
0x9548:	mov	qword ptr [rbx + 8], rcx
0x954c:	mov	qword ptr [rbp + 0x48], rbx
0x9550:	mov	rbx, rdx
0x9553:	jne	0x9528


0x92a9:	test	al, al
0x92ab:	je	0x92c4


0x92ad:	mov	rbx, qword ptr [rbx + 8]
0x92b1:	add	rbp, 1
0x92b5:	test	rbx, rbx
0x92b8:	jne	0x92a0


0x92a0:	mov	rdi, qword ptr [rbx]
0x92a3:	mov	rsi, r13
0x92a6:	call	r12


0x8b9e:	cmp	qword ptr [rbx + 0x10], rax
0x8ba2:	jbe	0x8bad


0x8bad:	call	0x1920


0x8ba4:	shl	rax, 4
0x8ba8:	add	rax, qword ptr [rbx]
0x8bab:	pop	rbx
0x8bac:	ret	


0x8e14:	cmp	qword ptr [rax], 0
0x8e18:	mov	rbx, rax
0x8e1b:	je	0x8e70


0x8e70:	mov	qword ptr [rax], r15
0x8e73:	add	qword ptr [rbp + 0x18], 1
0x8e78:	jmp	0x8e3d


0x8e1d:	mov	rax, qword ptr [rbp + 0x48]
0x8e21:	test	rax, rax
0x8e24:	je	0x8e80


0x8e3d:	mov	qword ptr [r12], 0
0x8e45:	sub	qword ptr [r13 + 0x18], 1
0x8e4a:	add	r12, 0x10
0x8e4e:	cmp	qword ptr [r13 + 8], r12
0x8e52:	ja	0x8d88


0x8e80:	mov	edi, 0x10
0x8e85:	call	0x1ba0


0x8e26:	mov	rdx, qword ptr [rax + 8]
0x8e2a:	mov	qword ptr [rbp + 0x48], rdx
0x8e2e:	mov	rdx, qword ptr [rbx + 8]
0x8e32:	mov	qword ptr [rax], r15
0x8e35:	mov	qword ptr [rax + 8], rdx
0x8e39:	mov	qword ptr [rbx + 8], rax
0x8e3d:	mov	qword ptr [r12], 0
0x8e45:	sub	qword ptr [r13 + 0x18], 1
0x8e4a:	add	r12, 0x10
0x8e4e:	cmp	qword ptr [r13 + 8], r12
0x8e52:	ja	0x8d88


0x8e8a:	test	rax, rax
0x8e8d:	jne	0x8e2e


0x8e8f:	add	rsp, 8
0x8e93:	xor	eax, eax
0x8e95:	pop	rbx
0x8e96:	pop	rbp
0x8e97:	pop	r12
0x8e99:	pop	r13
0x8e9b:	pop	r14
0x8e9d:	pop	r15
0x8e9f:	ret	


0x8e2e:	mov	rdx, qword ptr [rbx + 8]
0x8e32:	mov	qword ptr [rax], r15
0x8e35:	mov	qword ptr [rax + 8], rdx
0x8e39:	mov	qword ptr [rbx + 8], rax
0x8e3d:	mov	qword ptr [r12], 0
0x8e45:	sub	qword ptr [r13 + 0x18], 1
0x8e4a:	add	r12, 0x10
0x8e4e:	cmp	qword ptr [r13 + 8], r12
0x8e52:	ja	0x8d88


0x8dca:	cmp	qword ptr [rax], 0
0x8dce:	mov	rdx, qword ptr [rbx + 8]
0x8dd2:	jne	0x8da8


0x8dd4:	mov	qword ptr [rax], r15
0x8dd7:	add	qword ptr [rbp + 0x18], 1
0x8ddc:	test	rdx, rdx
0x8ddf:	mov	qword ptr [rbx], 0
0x8de6:	mov	rax, qword ptr [rbp + 0x48]
0x8dea:	mov	qword ptr [rbx + 8], rax
0x8dee:	mov	qword ptr [rbp + 0x48], rbx
0x8df2:	mov	rbx, rdx
0x8df5:	jne	0x8dbc


0x8da8:	mov	rcx, qword ptr [rax + 8]
0x8dac:	test	rdx, rdx
0x8daf:	mov	qword ptr [rbx + 8], rcx
0x8db3:	mov	qword ptr [rax + 8], rbx
0x8db7:	mov	rbx, rdx
0x8dba:	je	0x8df7


0x8df7:	mov	r15, qword ptr [r12]
0x8dfb:	test	r14b, r14b
0x8dfe:	mov	qword ptr [r12 + 8], 0
0x8e07:	jne	0x8e4a


0x8bd9:	mov	qword ptr [r14], rax
0x8bdc:	mov	rsi, qword ptr [rax]
0x8bdf:	test	rsi, rsi
0x8be2:	je	0x8cd0


0x8cd0:	xor	esi, esi
0x8cd2:	pop	rbx
0x8cd3:	mov	rax, rsi
0x8cd6:	pop	rbp
0x8cd7:	pop	r12
0x8cd9:	pop	r13
0x8cdb:	pop	r14
0x8cdd:	ret	


0x8be8:	cmp	rsi, rbp
0x8beb:	mov	rbx, rax
0x8bee:	je	0x8c83


0x8c83:	test	r13b, r13b
0x8c86:	je	0x8c6e


0x8bf4:	mov	rdi, rbp
0x8bf7:	call	qword ptr [r12 + 0x38]


0x8c6e:	pop	rbx
0x8c6f:	mov	rax, rsi
0x8c72:	pop	rbp
0x8c73:	pop	r12
0x8c75:	pop	r13
0x8c77:	pop	r14
0x8c79:	ret	


0x8c88:	mov	rax, qword ptr [rbx + 8]
0x8c8c:	test	rax, rax
0x8c8f:	je	0x8cc0


0x8cc0:	mov	qword ptr [rbx], 0
0x8cc7:	jmp	0x8c6e


0x8c91:	movdqu	xmm0, xmmword ptr [rax]
0x8c95:	movups	xmmword ptr [rbx], xmm0
0x8c98:	mov	qword ptr [rax], 0
0x8c9f:	mov	rdx, qword ptr [r12 + 0x48]
0x8ca4:	mov	qword ptr [rax + 8], rdx
0x8ca8:	mov	qword ptr [r12 + 0x48], rax
0x8cad:	mov	rax, rsi
0x8cb0:	pop	rbx
0x8cb1:	pop	rbp
0x8cb2:	pop	r12
0x8cb4:	pop	r13
0x8cb6:	pop	r14
0x8cb8:	ret	


0x90df:	mov	rsi, qword ptr [rax]
0x90e2:	test	rsi, rsi
0x90e5:	je	0x910d


0x910d:	xor	esi, esi
0x910f:	pop	rbx
0x9110:	mov	rax, rsi
0x9113:	pop	rbp
0x9114:	pop	r12
0x9116:	ret	


0x90e7:	mov	rbx, rax
0x90ea:	jmp	0x90f3


0x90f3:	cmp	rsi, rbp
0x90f6:	je	0x910f


0x910f:	pop	rbx
0x9110:	mov	rax, rsi
0x9113:	pop	rbp
0x9114:	pop	r12
0x9116:	ret	


0x90f8:	mov	rdi, rbp
0x90fb:	call	qword ptr [r12 + 0x38]


0x9191:	mov	rdx, rax
0x9194:	mov	rcx, rax
0x9197:	mov	rax, qword ptr [rdx]
0x919a:	mov	rdx, qword ptr [rdx + 8]
0x919e:	cmp	rax, rbx
0x91a1:	je	0x91b9


0x91b9:	test	rdx, rdx
0x91bc:	jne	0x91e8


0x91be:	mov	rdx, qword ptr [rbp + 8]
0x91c2:	jmp	0x91d0


0x91e8:	mov	rax, qword ptr [rdx]
0x91eb:	add	rsp, 8
0x91ef:	pop	rbx
0x91f0:	pop	rbp
0x91f1:	ret	


0x91ad:	mov	rax, qword ptr [rdx]
0x91b0:	mov	rdx, qword ptr [rdx + 8]
0x91b4:	cmp	rax, rbx
0x91b7:	jne	0x91a8


0x91d0:	add	rcx, 0x10
0x91d4:	cmp	rdx, rcx
0x91d7:	ja	0x91c8


0x91a8:	test	rdx, rdx
0x91ab:	je	0x91be


0x91d9:	xor	eax, eax
0x91db:	add	rsp, 8
0x91df:	pop	rbx
0x91e0:	pop	rbp
0x91e1:	ret	


0x91c8:	mov	rax, qword ptr [rcx]
0x91cb:	test	rax, rax
0x91ce:	jne	0x91db


0x91db:	add	rsp, 8
0x91df:	pop	rbx
0x91e0:	pop	rbp
0x91e1:	ret	


0x98e9:	test	rax, rax
0x98ec:	mov	rdx, rax
0x98ef:	je	0x9920


0x9920:	mov	rax, qword ptr [rbx + 0x18]
0x9924:	test	rax, rax
0x9927:	js	0x99a0


0x98f1:	xor	eax, eax
0x98f3:	test	r13, r13
0x98f6:	je	0x98fc


0x99a0:	mov	rdx, rax
0x99a3:	pxor	xmm1, xmm1
0x99a7:	and	eax, 1
0x99aa:	shr	rdx, 1
0x99ad:	or	rdx, rax
0x99b0:	mov	rax, qword ptr [rbx + 0x10]
0x99b4:	cvtsi2ss	xmm1, rdx
0x99b9:	mov	rdx, qword ptr [rbx + 0x28]
0x99bd:	test	rax, rax
0x99c0:	addss	xmm1, xmm1
0x99c4:	jns	0x9943


0x9929:	pxor	xmm1, xmm1
0x992d:	mov	rdx, qword ptr [rbx + 0x28]
0x9931:	cvtsi2ss	xmm1, rax
0x9936:	mov	rax, qword ptr [rbx + 0x10]
0x993a:	test	rax, rax
0x993d:	js	0x99ca


0x98fc:	mov	rcx, qword ptr [rsp + 8]
0x9901:	xor	rcx, qword ptr fs:[0x28]
0x990a:	jne	0x9b2f


0x98f8:	mov	qword ptr [r13], rdx
0x98fc:	mov	rcx, qword ptr [rsp + 8]
0x9901:	xor	rcx, qword ptr fs:[0x28]
0x990a:	jne	0x9b2f


0x99ca:	mov	rcx, rax
0x99cd:	pxor	xmm0, xmm0
0x99d1:	shr	rcx, 1
0x99d4:	and	eax, 1
0x99d7:	or	rcx, rax
0x99da:	cvtsi2ss	xmm0, rcx
0x99df:	addss	xmm0, xmm0
0x99e3:	jmp	0x994c


0x9943:	pxor	xmm0, xmm0
0x9947:	cvtsi2ss	xmm0, rax
0x994c:	mulss	xmm0, dword ptr [rdx + 8]
0x9951:	ucomiss	xmm1, xmm0
0x9954:	ja	0x99f0


0x9910:	add	rsp, 0x18
0x9914:	pop	rbx
0x9915:	pop	rbp
0x9916:	pop	r12
0x9918:	pop	r13
0x991a:	ret	


0x9b2f:	call	0x1a40


0x994c:	mulss	xmm0, dword ptr [rdx + 8]
0x9951:	ucomiss	xmm1, xmm0
0x9954:	ja	0x99f0


0x995a:	mov	r12, qword ptr [rsp]
0x995e:	cmp	qword ptr [r12], 0
0x9963:	je	0x9a98


0x99f0:	lea	rdi, [rbx + 0x28]
0x99f4:	call	0x8ce0


0x9a98:	mov	qword ptr [r12], rbp
0x9a9c:	mov	eax, 1
0x9aa1:	add	qword ptr [rbx + 0x20], 1
0x9aa6:	add	qword ptr [rbx + 0x18], 1
0x9aab:	jmp	0x98fc


0x9969:	mov	rax, qword ptr [rbx + 0x48]
0x996d:	test	rax, rax
0x9970:	je	0x9ab0


0x9ab0:	mov	edi, 0x10
0x9ab5:	call	0x1ba0


0x9976:	mov	rdx, qword ptr [rax + 8]
0x997a:	mov	qword ptr [rbx + 0x48], rdx
0x997e:	mov	rdx, qword ptr [r12 + 8]
0x9983:	mov	qword ptr [rax], rbp
0x9986:	mov	qword ptr [rax + 8], rdx
0x998a:	mov	qword ptr [r12 + 8], rax
0x998f:	mov	eax, 1
0x9994:	add	qword ptr [rbx + 0x20], 1
0x9999:	jmp	0x98fc


0x9aba:	test	rax, rax
0x9abd:	jne	0x997e


0x9ac3:	mov	eax, 0xffffffff
0x9ac8:	jmp	0x98fc


0x997e:	mov	rdx, qword ptr [r12 + 8]
0x9983:	mov	qword ptr [rax], rbp
0x9986:	mov	qword ptr [rax + 8], rdx
0x998a:	mov	qword ptr [r12 + 8], rax
0x998f:	mov	eax, 1
0x9994:	add	qword ptr [rbx + 0x20], 1
0x9999:	jmp	0x98fc


0x99f9:	mov	rax, qword ptr [rbx + 0x10]
0x99fd:	mov	rdx, qword ptr [rbx + 0x28]
0x9a01:	test	rax, rax
0x9a04:	movss	xmm2, dword ptr [rdx + 8]
0x9a09:	js	0x9ad0


0x9ad0:	mov	rcx, rax
0x9ad3:	pxor	xmm0, xmm0
0x9ad7:	shr	rcx, 1
0x9ada:	and	eax, 1
0x9add:	or	rcx, rax
0x9ae0:	cvtsi2ss	xmm0, rcx
0x9ae5:	addss	xmm0, xmm0
0x9ae9:	jmp	0x9a18


0x9a0f:	pxor	xmm0, xmm0
0x9a13:	cvtsi2ss	xmm0, rax
0x9a18:	mov	rax, qword ptr [rbx + 0x18]
0x9a1c:	test	rax, rax
0x9a1f:	js	0x9af0


0x9a18:	mov	rax, qword ptr [rbx + 0x18]
0x9a1c:	test	rax, rax
0x9a1f:	js	0x9af0


0x9af0:	mov	rcx, rax
0x9af3:	pxor	xmm1, xmm1
0x9af7:	shr	rcx, 1
0x9afa:	and	eax, 1
0x9afd:	or	rcx, rax
0x9b00:	cvtsi2ss	xmm1, rcx
0x9b05:	addss	xmm1, xmm1
0x9b09:	jmp	0x9a2e


0x9a25:	pxor	xmm1, xmm1
0x9a29:	cvtsi2ss	xmm1, rax
0x9a2e:	movaps	xmm3, xmm2
0x9a31:	mulss	xmm3, xmm0
0x9a35:	ucomiss	xmm1, xmm3
0x9a38:	jbe	0x995a


0x9a2e:	movaps	xmm3, xmm2
0x9a31:	mulss	xmm3, xmm0
0x9a35:	ucomiss	xmm1, xmm3
0x9a38:	jbe	0x995a


0x9a3e:	cmp	byte ptr [rdx + 0x10], 0
0x9a42:	mulss	xmm0, dword ptr [rdx + 0xc]
0x9a47:	jne	0x9a4d


0x9a49:	mulss	xmm0, xmm2
0x9a4d:	ucomiss	xmm0, dword ptr [rip + 0x22b8]
0x9a54:	jae	0x9ac3


0x9a4d:	ucomiss	xmm0, dword ptr [rip + 0x22b8]
0x9a54:	jae	0x9ac3


0x9a56:	ucomiss	xmm0, dword ptr [rip + 0x22b3]
0x9a5d:	jae	0x9b10


0x9a63:	cvttss2si	rsi, xmm0
0x9a68:	mov	rdi, rbx
0x9a6b:	call	0x9670


0x9b10:	subss	xmm0, dword ptr [rip + 0x21f8]
0x9b18:	movabs	rax, 0x8000000000000000
0x9b22:	cvttss2si	rsi, xmm0
0x9b27:	xor	rsi, rax
0x9b2a:	jmp	0x9a68


0x9a68:	mov	rdi, rbx
0x9a6b:	call	0x9670


0x9a70:	test	al, al
0x9a72:	je	0x9ac3


0x9a74:	xor	ecx, ecx
0x9a76:	mov	rdx, r12
0x9a79:	mov	rsi, rbp
0x9a7c:	mov	rdi, rbx
0x9a7f:	call	0x8bc0


0x9b60:	cmp	eax, -1
0x9b63:	je	0x9b90


0x9b90:	xor	ebx, ebx
0x9b92:	jmp	0x9b6d


0x9b65:	test	eax, eax
0x9b67:	jne	0x9b6d


0x9b6d:	mov	rcx, qword ptr [rsp + 8]
0x9b72:	xor	rcx, qword ptr fs:[0x28]
0x9b7b:	mov	rax, rbx
0x9b7e:	jne	0x9b94


0x9b69:	mov	rbx, qword ptr [rsp]
0x9b6d:	mov	rcx, qword ptr [rsp + 8]
0x9b72:	xor	rcx, qword ptr fs:[0x28]
0x9b7b:	mov	rax, rbx
0x9b7e:	jne	0x9b94


0x9b80:	add	rsp, 0x10
0x9b84:	pop	rbx
0x9b85:	ret	


0x9b94:	call	0x1a40


0x9a84:	test	rax, rax
0x9a87:	je	0x995a


0x9bc8:	test	rax, rax
0x9bcb:	mov	rbp, rax
0x9bce:	je	0x9bdf


0x9bdf:	mov	rcx, qword ptr [rsp + 8]
0x9be4:	xor	rcx, qword ptr fs:[0x28]
0x9bed:	mov	rax, rbp
0x9bf0:	jne	0x9d9e


0x9bd0:	mov	rax, qword ptr [rsp]
0x9bd4:	sub	qword ptr [rbx + 0x20], 1
0x9bd9:	cmp	qword ptr [rax], 0
0x9bdd:	je	0x9c00


0x9bf6:	add	rsp, 0x10
0x9bfa:	pop	rbx
0x9bfb:	pop	rbp
0x9bfc:	pop	r12
0x9bfe:	ret	


0x9d9e:	call	0x1a40


0x9c00:	mov	rax, qword ptr [rbx + 0x18]
0x9c04:	sub	rax, 1
0x9c08:	test	rax, rax
0x9c0b:	mov	qword ptr [rbx + 0x18], rax
0x9c0f:	js	0x9d10


0x9d10:	mov	rdx, rax
0x9d13:	pxor	xmm0, xmm0
0x9d17:	shr	rdx, 1
0x9d1a:	and	eax, 1
0x9d1d:	or	rdx, rax
0x9d20:	cvtsi2ss	xmm0, rdx
0x9d25:	addss	xmm0, xmm0
0x9d29:	jmp	0x9c1e


0x9c15:	pxor	xmm0, xmm0
0x9c19:	cvtsi2ss	xmm0, rax
0x9c1e:	mov	rax, qword ptr [rbx + 0x10]
0x9c22:	mov	rdx, qword ptr [rbx + 0x28]
0x9c26:	test	rax, rax
0x9c29:	js	0x9cf0


0x9c1e:	mov	rax, qword ptr [rbx + 0x10]
0x9c22:	mov	rdx, qword ptr [rbx + 0x28]
0x9c26:	test	rax, rax
0x9c29:	js	0x9cf0


0x9cf0:	mov	rcx, rax
0x9cf3:	pxor	xmm1, xmm1
0x9cf7:	shr	rcx, 1
0x9cfa:	and	eax, 1
0x9cfd:	or	rcx, rax
0x9d00:	cvtsi2ss	xmm1, rcx
0x9d05:	addss	xmm1, xmm1
0x9d09:	jmp	0x9c38


0x9c2f:	pxor	xmm1, xmm1
0x9c33:	cvtsi2ss	xmm1, rax
0x9c38:	mulss	xmm1, dword ptr [rdx]
0x9c3c:	ucomiss	xmm1, xmm0
0x9c3f:	jbe	0x9bdf


0x9c38:	mulss	xmm1, dword ptr [rdx]
0x9c3c:	ucomiss	xmm1, xmm0
0x9c3f:	jbe	0x9bdf


0x9c41:	lea	rdi, [rbx + 0x28]
0x9c45:	call	0x8ce0


0x9c4a:	mov	rax, qword ptr [rbx + 0x10]
0x9c4e:	mov	rdx, qword ptr [rbx + 0x28]
0x9c52:	test	rax, rax
0x9c55:	js	0x9d80


0x9d80:	mov	rcx, rax
0x9d83:	pxor	xmm0, xmm0
0x9d87:	shr	rcx, 1
0x9d8a:	and	eax, 1
0x9d8d:	or	rcx, rax
0x9d90:	cvtsi2ss	xmm0, rcx
0x9d95:	addss	xmm0, xmm0
0x9d99:	jmp	0x9c64


0x9c5b:	pxor	xmm0, xmm0
0x9c5f:	cvtsi2ss	xmm0, rax
0x9c64:	mov	rax, qword ptr [rbx + 0x18]
0x9c68:	test	rax, rax
0x9c6b:	js	0x9d60


0x9c64:	mov	rax, qword ptr [rbx + 0x18]
0x9c68:	test	rax, rax
0x9c6b:	js	0x9d60


0x9d60:	mov	rcx, rax
0x9d63:	pxor	xmm1, xmm1
0x9d67:	shr	rcx, 1
0x9d6a:	and	eax, 1
0x9d6d:	or	rcx, rax
0x9d70:	cvtsi2ss	xmm1, rcx
0x9d75:	addss	xmm1, xmm1
0x9d79:	jmp	0x9c7a


0x9c71:	pxor	xmm1, xmm1
0x9c75:	cvtsi2ss	xmm1, rax
0x9c7a:	movss	xmm2, dword ptr [rdx]
0x9c7e:	mulss	xmm2, xmm0
0x9c82:	ucomiss	xmm2, xmm1
0x9c85:	jbe	0x9bdf


0x9c7a:	movss	xmm2, dword ptr [rdx]
0x9c7e:	mulss	xmm2, xmm0
0x9c82:	ucomiss	xmm2, xmm1
0x9c85:	jbe	0x9bdf


0x9c8b:	cmp	byte ptr [rdx + 0x10], 0
0x9c8f:	mulss	xmm0, dword ptr [rdx + 4]
0x9c94:	je	0x9d50


0x9d50:	mulss	xmm0, dword ptr [rdx + 8]
0x9d55:	jmp	0x9c9a


0x9c9a:	ucomiss	xmm0, dword ptr [rip + 0x206f]
0x9ca1:	jae	0x9d30


0x9ca7:	cvttss2si	rsi, xmm0
0x9cac:	mov	rdi, rbx
0x9caf:	call	0x9670


0x9d30:	subss	xmm0, dword ptr [rip + 0x1fd8]
0x9d38:	movabs	rax, 0x8000000000000000
0x9d42:	cvttss2si	rsi, xmm0
0x9d47:	xor	rsi, rax
0x9d4a:	jmp	0x9cac


0x9cac:	mov	rdi, rbx
0x9caf:	call	0x9670


0x9cb4:	test	al, al
0x9cb6:	jne	0x9bdf


0x9cbc:	mov	rdi, qword ptr [rbx + 0x48]
0x9cc0:	test	rdi, rdi
0x9cc3:	je	0x9cd9


0x9cd9:	mov	qword ptr [rbx + 0x48], 0
0x9ce1:	jmp	0x9bdf


0x9cd1:	test	r12, r12
0x9cd4:	mov	rdi, r12
0x9cd7:	jne	0x9cc8


0x9cc8:	mov	r12, qword ptr [rdi + 8]
0x9ccc:	call	0x1d30


0x9100:	test	al, al
0x9102:	jne	0x9120


0x9104:	mov	rbx, qword ptr [rbx + 8]
0x9108:	test	rbx, rbx
0x910b:	jne	0x90f0


0x9120:	mov	rsi, qword ptr [rbx]
0x9123:	pop	rbx
0x9124:	pop	rbp
0x9125:	mov	rax, rsi
0x9128:	pop	r12
0x912a:	ret	


0x90f0:	mov	rsi, qword ptr [rbx]
0x90f3:	cmp	rsi, rbp
0x90f6:	je	0x910f


0x8bfc:	test	al, al
0x8bfe:	jne	0x8c80


0x8c04:	mov	rax, qword ptr [rbx + 8]
0x8c08:	test	rax, rax
0x8c0b:	je	0x8cd0


0x8c80:	mov	rsi, qword ptr [rbx]
0x8c83:	test	r13b, r13b
0x8c86:	je	0x8c6e


0x8c11:	mov	rsi, qword ptr [rax]
0x8c14:	cmp	rbp, rsi
0x8c17:	jne	0x8c39


0x8c19:	jmp	0x8c4c


0x8c39:	mov	rdi, rbp
0x8c3c:	call	qword ptr [r12 + 0x38]


0x8c4c:	test	r13b, r13b
0x8c4f:	je	0x8c6e


0x8c51:	mov	rdx, qword ptr [rax + 8]
0x8c55:	mov	qword ptr [rbx + 8], rdx
0x8c59:	mov	qword ptr [rax], 0
0x8c60:	mov	rdx, qword ptr [r12 + 0x48]
0x8c65:	mov	qword ptr [rax + 8], rdx
0x8c69:	mov	qword ptr [r12 + 0x48], rax
0x8c6e:	pop	rbx
0x8c6f:	mov	rax, rsi
0x8c72:	pop	rbp
0x8c73:	pop	r12
0x8c75:	pop	r13
0x8c77:	pop	r14
0x8c79:	ret	


0x8c41:	test	al, al
0x8c43:	je	0x8c20


0x8c20:	mov	rbx, qword ptr [rbx + 8]
0x8c24:	mov	rax, qword ptr [rbx + 8]
0x8c28:	test	rax, rax
0x8c2b:	je	0x8cd0


0x8c45:	mov	rax, qword ptr [rbx + 8]
0x8c49:	mov	rsi, qword ptr [rax]
0x8c4c:	test	r13b, r13b
0x8c4f:	je	0x8c6e


0x8c31:	mov	rsi, qword ptr [rax]
0x8c34:	cmp	rsi, rbp
0x8c37:	je	0x8c4c






0x5920:	mov	r13, qword ptr [rbx + 0x10]
0x5924:	mov	r12, qword ptr [rbx + 8]
0x5928:	lea	rsi, [rip + 0x5df7]
0x592f:	mov	rbx, qword ptr [rbx]
0x5932:	mov	edx, 5
0x5937:	xor	edi, edi
0x5939:	call	0x19f0


0x5a60:	mov	r9, qword ptr [rbx + 0x10]
0x5a64:	mov	r13, qword ptr [rbx + 0x30]
0x5a68:	lea	rsi, [rip + 0x5e59]
0x5a6f:	mov	r12, qword ptr [rbx + 0x28]
0x5a73:	mov	r15, qword ptr [rbx + 0x20]
0x5a77:	mov	edx, 5
0x5a7c:	mov	r14, qword ptr [rbx + 0x18]
0x5a80:	mov	r8, qword ptr [rbx + 8]
0x5a84:	xor	edi, edi
0x5a86:	mov	qword ptr [rsp + 8], r9
0x5a8b:	mov	rbx, qword ptr [rbx]
0x5a8e:	mov	qword ptr [rsp], r8
0x5a92:	call	0x19f0


0x5840:	mov	r10, qword ptr [rbx + 0x40]
0x5844:	mov	r9, qword ptr [rbx + 0x38]
0x5848:	lea	rsi, [rip + 0x60d9]
0x584f:	mov	rax, qword ptr [rbx + 0x10]
0x5853:	mov	r8, qword ptr [rbx + 8]
0x5857:	mov	edx, 5
0x585c:	mov	r13, qword ptr [rbx + 0x30]
0x5860:	mov	r12, qword ptr [rbx + 0x28]
0x5864:	mov	r15, qword ptr [rbx + 0x20]
0x5868:	mov	r14, qword ptr [rbx + 0x18]
0x586c:	mov	rbx, qword ptr [rbx]
0x586f:	mov	qword ptr [rsp + 0x18], r10
0x5874:	mov	qword ptr [rsp + 0x10], r9
0x5879:	mov	qword ptr [rsp], rax
0x587d:	mov	qword ptr [rsp + 8], r8
0x5882:	xor	edi, edi
0x5884:	call	0x19f0


0x5806:	add	rsp, 0x28
0x580a:	pop	rbx
0x580b:	pop	rbp
0x580c:	pop	r12
0x580e:	pop	r13
0x5810:	pop	r14
0x5812:	pop	r15
0x5814:	ret	


0x59c8:	mov	r15, qword ptr [rbx + 0x20]
0x59cc:	lea	rsi, [rip + 0x5ea5]
0x59d3:	mov	edx, 5
0x59d8:	xor	edi, edi
0x59da:	mov	r14, qword ptr [rbx + 0x18]
0x59de:	mov	r13, qword ptr [rbx + 0x10]
0x59e2:	mov	r12, qword ptr [rbx + 8]
0x59e6:	mov	rbx, qword ptr [rbx]
0x59e9:	call	0x19f0


0x59f8:	mov	r8, qword ptr [rbx + 8]
0x59fc:	mov	r12, qword ptr [rbx + 0x28]
0x5a00:	lea	rsi, [rip + 0x5e99]
0x5a07:	mov	r15, qword ptr [rbx + 0x20]
0x5a0b:	mov	r14, qword ptr [rbx + 0x18]
0x5a0f:	mov	edx, 5
0x5a14:	mov	r13, qword ptr [rbx + 0x10]
0x5a18:	xor	edi, edi
0x5a1a:	mov	rbx, qword ptr [rbx]
0x5a1d:	mov	qword ptr [rsp], r8
0x5a21:	call	0x19f0


0x5970:	lea	rsi, [rip + 0x5ee1]
0x5977:	mov	edx, 5
0x597c:	xor	edi, edi
0x597e:	mov	r14, qword ptr [rbx + 0x18]
0x5982:	mov	r13, qword ptr [rbx + 0x10]
0x5986:	mov	r12, qword ptr [rbx + 8]
0x598a:	mov	rbx, qword ptr [rbx]
0x598d:	call	0x19f0


0x5790:	mov	r9, qword ptr [rbx + 0x38]
0x5794:	mov	rax, qword ptr [rbx + 0x10]
0x5798:	lea	rsi, [rip + 0x6159]
0x579f:	mov	r8, qword ptr [rbx + 8]
0x57a3:	mov	edx, 5
0x57a8:	xor	edi, edi
0x57aa:	mov	r13, qword ptr [rbx + 0x30]
0x57ae:	mov	r12, qword ptr [rbx + 0x28]
0x57b2:	mov	qword ptr [rsp + 0x10], r9
0x57b7:	mov	r15, qword ptr [rbx + 0x20]
0x57bb:	mov	r14, qword ptr [rbx + 0x18]
0x57bf:	mov	qword ptr [rsp], rax
0x57c3:	mov	qword ptr [rsp + 8], r8
0x57c8:	mov	rbx, qword ptr [rbx]
0x57cb:	call	0x19f0


0x5898:	mov	rbx, qword ptr [rbx]
0x589b:	lea	rsi, [rip + 0x5e5d]
0x58a2:	mov	edx, 5
0x58a7:	xor	edi, edi
0x58a9:	call	0x19f0


0x58d8:	mov	r12, qword ptr [rbx + 8]
0x58dc:	lea	rsi, [rip + 0x5e2c]
0x58e3:	mov	rbx, qword ptr [rbx]
0x58e6:	mov	edx, 5
0x58eb:	xor	edi, edi
0x58ed:	call	0x19f0


0x2e40:	cmp	byte ptr [rbx + 4], 0
0x2e44:	jne	0x29eb


0x2d60:	movzx	r15d, byte ptr [rbx + 0x11]
0x2d65:	test	r15b, r15b
0x2d68:	je	0x32e0


0x2c88:	movzx	r15d, byte ptr [rbx + 4]
0x2c8d:	test	r15b, r15b
0x2c90:	je	0x29eb


0x29d0:	mov	rdi, qword ptr [rsp]
0x29d4:	mov	dword ptr [rsp + 0x20], r9d
0x29d9:	call	0x5fe0


0x2db0:	movzx	r15d, byte ptr [rbx + 0x11]
0x2db5:	test	r15b, r15b
0x2db8:	jne	0x2d6e


0x2df0:	cmp	qword ptr [rsi + 0x58], 0
0x2df5:	jne	0x2e02


0x2e4a:	mov	r15d, 1
0x2e50:	mov	rbx, qword ptr [rsp + 0x168]
0x2e58:	xor	rbx, qword ptr fs:[0x28]
0x2e61:	mov	eax, r15d
0x2e64:	jne	0x369a


0x32e0:	mov	rsi, qword ptr [rsp + 8]
0x32e5:	mov	edi, 4
0x32ea:	call	0x5370


0x2d6e:	mov	eax, dword ptr [rbx]
0x2d70:	xor	r15d, r15d
0x2d73:	cmp	eax, 2
0x2d76:	je	0x2bd2


0x2c96:	mov	rax, qword ptr [rbx + 8]
0x2c9a:	test	rax, rax
0x2c9d:	je	0x2e50


0x2dba:	mov	rdx, qword ptr [rsp + 8]
0x2dbf:	mov	esi, 3
0x2dc4:	xor	edi, edi
0x2dc6:	call	0x5470


0x2df7:	cmp	qword ptr [rsi + 0x20], 0
0x2dfc:	je	0x33c8


0x2e02:	movzx	r15d, byte ptr [rbx + 0x11]
0x2e07:	test	r15b, r15b
0x2e0a:	jne	0x2d6e


0x2d7c:	test	eax, eax
0x2d7e:	jne	0x2bd2


0x2ca3:	mov	rbx, qword ptr [rax]
0x2ca6:	cmp	qword ptr [rsi + 0x80], rbx
0x2cad:	jne	0x2e50


0x33c8:	mov	rdi, qword ptr [rsp]
0x33cc:	mov	qword ptr [rsi + 0x20], 1
0x33d4:	mov	edx, 1
0x33d9:	call	0x86d0


0x2e10:	mov	rsi, qword ptr [rsp + 8]
0x2e15:	mov	edi, 4
0x2e1a:	call	0x5370


0x2d84:	xor	r15d, r15d
0x2d87:	mov	dword ptr [rsp + 0x2c], 3
0x2d8f:	mov	r12, qword ptr [rbx + 0x20]
0x2d93:	mov	r14, qword ptr [rbx + 0x18]
0x2d97:	xor	r13d, r13d
0x2d9a:	mov	qword ptr [rsp + 0x10], 0
0x2da3:	jmp	0x2b1d


0x2cb3:	mov	rax, qword ptr [rax + 8]
0x2cb7:	cmp	qword ptr [rsi + 0x78], rax
0x2cbb:	jne	0x2e50


0x2cc1:	lea	rdx, [rip + 0x8546]
0x2cc8:	mov	rsi, qword ptr [rsp + 8]
0x2ccd:	mov	ecx, 2
0x2cd2:	mov	rdi, rdx
0x2cd5:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2cd5:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2cd7:	seta	al
0x2cda:	sbb	al, 0
0x2cdc:	test	al, al
0x2cde:	jne	0x35f0


0x2ce4:	mov	rsi, qword ptr [rsp + 8]
0x2ce9:	mov	edi, 4
0x2cee:	call	0x5370


0x35f0:	mov	esi, 4
0x35f5:	mov	edi, 1
0x35fa:	call	0x5250


0x35ff:	mov	rdx, qword ptr [rsp + 8]
0x3604:	xor	edi, edi
0x3606:	mov	esi, 4
0x360b:	mov	r12, rax
0x360e:	call	0x5250


0x3613:	lea	rsi, [rip + 0x78b6]
0x361a:	mov	rbx, rax
0x361d:	xor	edi, edi
0x361f:	mov	edx, 5
0x3624:	call	0x19f0


0x33de:	jmp	0x2e4a


0x2dcb:	mov	esi, dword ptr [rbp + 0x40]
0x2dce:	lea	rdx, [rip + 0x776e]
0x2dd5:	mov	rcx, rax
0x2dd8:	xor	eax, eax
0x2dda:	xor	edi, edi
0x2ddc:	call	0x1c40


0x2de1:	mov	eax, dword ptr [rbx]
0x2de3:	cmp	eax, 2
0x2de6:	jne	0x2d7c


0x2de8:	jmp	0x2bd2


0x29de:	test	al, al
0x29e0:	mov	r9d, dword ptr [rsp + 0x20]
0x29e5:	jne	0x31c8


0x31c8:	mov	rdx, qword ptr [rsp + 8]
0x31cd:	mov	esi, 3
0x31d2:	xor	edi, edi
0x31d4:	xor	r15d, r15d
0x31d7:	call	0x5470


0x31dc:	lea	rsi, [rip + 0x7d65]
0x31e3:	mov	rbx, rax
0x31e6:	mov	edx, 5
0x31eb:	xor	edi, edi
0x31ed:	call	0x19f0


0x31f2:	mov	rcx, rbx
0x31f5:	mov	rdx, rax
0x31f8:	xor	esi, esi
0x31fa:	xor	edi, edi
0x31fc:	xor	eax, eax
0x31fe:	call	0x1c40


0x3203:	jmp	0x2e50


0x3629:	mov	r8, r12
0x362c:	mov	rdx, rax
0x362f:	mov	rcx, rbx
0x3632:	xor	esi, esi
0x3634:	xor	edi, edi
0x3636:	xor	eax, eax
0x3638:	call	0x1c40


0x363d:	jmp	0x2d1a


0x2d1a:	lea	rsi, [rip + 0x81ef]
0x2d21:	mov	edx, 5
0x2d26:	xor	edi, edi
0x2d28:	xor	r15d, r15d
0x2d2b:	call	0x19f0


0x2d30:	xor	esi, esi
0x2d32:	mov	rdx, rax
0x2d35:	xor	edi, edi
0x2d37:	xor	eax, eax
0x2d39:	call	0x1c40


0x2d3e:	mov	rbx, qword ptr [rsp]
0x2d42:	mov	edx, 4
0x2d47:	mov	rsi, rbp
0x2d4a:	mov	rdi, rbx
0x2d4d:	call	0x86d0


0x2d52:	mov	rdi, rbx
0x2d55:	call	0x7f50


0x2d5a:	jmp	0x2e50


0x58f2:	add	rsp, 0x28
0x58f6:	mov	r8, r12
0x58f9:	mov	rcx, rbx
0x58fc:	mov	rdi, rbp
0x58ff:	mov	rdx, rax
0x5902:	mov	esi, 1
0x5907:	pop	rbx
0x5908:	pop	rbp
0x5909:	pop	r12
0x590b:	pop	r13
0x590d:	pop	r14
0x590f:	pop	r15
0x5911:	xor	eax, eax
0x5913:	jmp	0x1cf0


0x58ae:	add	rsp, 0x28
0x58b2:	mov	rcx, rbx
0x58b5:	mov	rdi, rbp
0x58b8:	pop	rbx
0x58b9:	pop	rbp
0x58ba:	pop	r12
0x58bc:	pop	r13
0x58be:	pop	r14
0x58c0:	pop	r15
0x58c2:	mov	rdx, rax
0x58c5:	mov	esi, 1
0x58ca:	xor	eax, eax
0x58cc:	jmp	0x1cf0


0x57d0:	sub	rsp, 8
0x57d4:	mov	r9, qword ptr [rsp + 0x18]
0x57d9:	mov	rdx, rax
0x57dc:	mov	rcx, rbx
0x57df:	mov	esi, 1
0x57e4:	mov	rdi, rbp
0x57e7:	xor	eax, eax
0x57e9:	push	r9
0x57eb:	push	r13
0x57ed:	push	r12
0x57ef:	push	r15
0x57f1:	push	r14
0x57f3:	mov	r9, qword ptr [rsp + 0x30]
0x57f8:	mov	r8, qword ptr [rsp + 0x38]
0x57fd:	call	0x1cf0


0x5992:	sub	rsp, 8
0x5996:	push	r14
0x5998:	mov	rdx, rax
0x599b:	mov	r9, r13
0x599e:	mov	r8, r12
0x59a1:	mov	rcx, rbx
0x59a4:	mov	rdi, rbp
0x59a7:	mov	esi, 1
0x59ac:	xor	eax, eax
0x59ae:	call	0x1cf0


0x59b3:	pop	rax
0x59b4:	pop	rdx
0x59b5:	add	rsp, 0x28
0x59b9:	pop	rbx
0x59ba:	pop	rbp
0x59bb:	pop	r12
0x59bd:	pop	r13
0x59bf:	pop	r14
0x59c1:	pop	r15
0x59c3:	ret	


0x5a26:	sub	rsp, 8
0x5a2a:	mov	r9, r13
0x5a2d:	push	r12
0x5a2f:	push	r15
0x5a31:	push	r14
0x5a33:	mov	r8, qword ptr [rsp + 0x20]
0x5a38:	mov	rcx, rbx
0x5a3b:	mov	rdx, rax
0x5a3e:	mov	rdi, rbp
0x5a41:	mov	esi, 1
0x5a46:	xor	eax, eax
0x5a48:	call	0x1cf0


0x5a4d:	add	rsp, 0x20
0x5a51:	add	rsp, 0x28
0x5a55:	pop	rbx
0x5a56:	pop	rbp
0x5a57:	pop	r12
0x5a59:	pop	r13
0x5a5b:	pop	r14
0x5a5d:	pop	r15
0x5a5f:	ret	


0x59ee:	push	r15
0x59f0:	jmp	0x5996


0x5996:	push	r14
0x5998:	mov	rdx, rax
0x599b:	mov	r9, r13
0x599e:	mov	r8, r12
0x59a1:	mov	rcx, rbx
0x59a4:	mov	rdi, rbp
0x59a7:	mov	esi, 1
0x59ac:	xor	eax, eax
0x59ae:	call	0x1cf0


0x5a97:	push	r13
0x5a99:	push	r12
0x5a9b:	push	r15
0x5a9d:	push	r14
0x5a9f:	mov	r9, qword ptr [rsp + 0x28]
0x5aa4:	jmp	0x5a33


0x5a33:	mov	r8, qword ptr [rsp + 0x20]
0x5a38:	mov	rcx, rbx
0x5a3b:	mov	rdx, rax
0x5a3e:	mov	rdi, rbp
0x5a41:	mov	esi, 1
0x5a46:	xor	eax, eax
0x5a48:	call	0x1cf0


0x593e:	add	rsp, 0x28
0x5942:	mov	r9, r13
0x5945:	mov	r8, r12
0x5948:	mov	rcx, rbx
0x594b:	mov	rdi, rbp
0x594e:	mov	rdx, rax
0x5951:	pop	rbx
0x5952:	pop	rbp
0x5953:	pop	r12
0x5955:	pop	r13
0x5957:	pop	r14
0x5959:	pop	r15
0x595b:	mov	esi, 1
0x5960:	xor	eax, eax
0x5962:	jmp	0x1cf0


0x2cf3:	lea	rsi, [rip + 0x81a6]
0x2cfa:	mov	rbx, rax
0x2cfd:	mov	edx, 5
0x2d02:	xor	edi, edi
0x2d04:	call	0x19f0


0x2d09:	mov	rcx, rbx
0x2d0c:	mov	rdx, rax
0x2d0f:	xor	esi, esi
0x2d11:	xor	edi, edi
0x2d13:	xor	eax, eax
0x2d15:	call	0x1c40


0x2e1f:	lea	rsi, [rip + 0x7f91]
0x2e26:	mov	r12, rax
0x2e29:	mov	edx, 5
0x2e2e:	xor	edi, edi
0x2e30:	call	0x19f0


0x2e35:	mov	esi, dword ptr [rbp + 0x40]
0x2e38:	mov	rcx, r12
0x2e3b:	mov	rdx, rax
0x2e3e:	jmp	0x2dd8


0x2dd8:	xor	eax, eax
0x2dda:	xor	edi, edi
0x2ddc:	call	0x1c40


0x32ef:	mov	edx, 5
0x32f4:	mov	r12, rax
0x32f7:	lea	rsi, [rip + 0x7aca]
0x32fe:	jmp	0x2e2e


0x2e2e:	xor	edi, edi
0x2e30:	call	0x19f0


0x4660:	sub	rsp, 8
0x4664:	mov	rcx, rbp
0x4667:	mov	rsi, r13
0x466a:	push	qword ptr [rsp + 0x68]
0x466e:	push	qword ptr [rsp + 0x78]
0x4672:	mov	rdi, r14
0x4675:	push	0
0x4677:	mov	r9d, dword ptr [rsp + 0x98]
0x467f:	mov	r8d, dword ptr [rsp + 0x28]
0x4684:	mov	rdx, qword ptr [rsp + 0x30]
0x4689:	and	r9d, 0xfffffffd
0x468d:	call	0x3ac0


0x4692:	add	rsp, 0x20
0x4696:	mov	r15, rax
0x4699:	mov	rbx, qword ptr [rsp + 0xa8]
0x46a1:	xor	rbx, qword ptr fs:[0x28]
0x46aa:	mov	rax, r15
0x46ad:	jne	0x4cb3


0x46b3:	add	rsp, 0xb8
0x46ba:	pop	rbx
0x46bb:	pop	rbp
0x46bc:	pop	r12
0x46be:	pop	r13
0x46c0:	pop	r14
0x46c2:	pop	r15
0x46c4:	ret	


0x4cb3:	call	0x1a40


0x4c5d:	sub	rsp, 8
0x4c61:	mov	r8d, 5
0x4c67:	mov	rcx, r11
0x4c6a:	push	qword ptr [rsp + 0x68]
0x4c6e:	push	qword ptr [rsp + 0x78]
0x4c72:	mov	rdi, r14
0x4c75:	push	qword ptr [rsp + 0x38]
0x4c79:	mov	r9d, dword ptr [rsp + 0x98]
0x4c81:	mov	rdx, qword ptr [rsp + 0x30]
0x4c86:	mov	rsi, qword ptr [rsp + 0x70]
0x4c8b:	call	0x3ac0


0x4c90:	add	rsp, 0x20
0x4c94:	mov	r15, rax
0x4c97:	jmp	0x4699


0x4699:	mov	rbx, qword ptr [rsp + 0xa8]
0x46a1:	xor	rbx, qword ptr fs:[0x28]
0x46aa:	mov	rax, r15
0x46ad:	jne	0x4cb3


0x1900:	push	qword ptr [rip + 0x20c4aa]
0x1906:	jmp	qword ptr [rip + 0x20c4ac]


0x190c:	nop	dword ptr [rax]


0x1916:	push	0
0x191b:	jmp	0x1900


0x1926:	push	1
0x192b:	jmp	0x1900


0x1936:	push	2
0x193b:	jmp	0x1900


0x1946:	push	3
0x194b:	jmp	0x1900


0x1956:	push	4
0x195b:	jmp	0x1900


0x1966:	push	5
0x196b:	jmp	0x1900


0x1976:	push	6
0x197b:	jmp	0x1900


0x1986:	push	7
0x198b:	jmp	0x1900


0x1996:	push	8
0x199b:	jmp	0x1900


0x19a6:	push	9
0x19ab:	jmp	0x1900


0x19b6:	push	0xa
0x19bb:	jmp	0x1900


0x19c6:	push	0xb
0x19cb:	jmp	0x1900


0x19d6:	push	0xc
0x19db:	jmp	0x1900


0x19e6:	push	0xd
0x19eb:	jmp	0x1900


0x19f6:	push	0xe
0x19fb:	jmp	0x1900


0x1a06:	push	0xf
0x1a0b:	jmp	0x1900


0x1a16:	push	0x10
0x1a1b:	jmp	0x1900


0x1a26:	push	0x11
0x1a2b:	jmp	0x1900


0x1a36:	push	0x12
0x1a3b:	jmp	0x1900


0x1a46:	push	0x13
0x1a4b:	jmp	0x1900


0x1a56:	push	0x14
0x1a5b:	jmp	0x1900


0x1a66:	push	0x15
0x1a6b:	jmp	0x1900


0x1a76:	push	0x16
0x1a7b:	jmp	0x1900


0x1a86:	push	0x17
0x1a8b:	jmp	0x1900


0x1a96:	push	0x18
0x1a9b:	jmp	0x1900


0x1aa6:	push	0x19
0x1aab:	jmp	0x1900


0x1ab6:	push	0x1a
0x1abb:	jmp	0x1900


0x1ac6:	push	0x1b
0x1acb:	jmp	0x1900


0x1ad6:	push	0x1c
0x1adb:	jmp	0x1900


0x1ae6:	push	0x1d
0x1aeb:	jmp	0x1900


0x1af6:	push	0x1e
0x1afb:	jmp	0x1900


0x1b06:	push	0x1f
0x1b0b:	jmp	0x1900


0x1b10:	jmp	qword ptr [rip + 0x20c3aa]




0x1b16:	push	0x20
0x1b1b:	jmp	0x1900


0x1b26:	push	0x21
0x1b2b:	jmp	0x1900


0x1b36:	push	0x22
0x1b3b:	jmp	0x1900


0x1b46:	push	0x23
0x1b4b:	jmp	0x1900


0x1b56:	push	0x24
0x1b5b:	jmp	0x1900


0x1b66:	push	0x25
0x1b6b:	jmp	0x1900


0x1b76:	push	0x26
0x1b7b:	jmp	0x1900


0x1b86:	push	0x27
0x1b8b:	jmp	0x1900


0x1b96:	push	0x28
0x1b9b:	jmp	0x1900


0x1ba6:	push	0x29
0x1bab:	jmp	0x1900


0x1bb6:	push	0x2a
0x1bbb:	jmp	0x1900


0x1bc6:	push	0x2b
0x1bcb:	jmp	0x1900


0x1bd6:	push	0x2c
0x1bdb:	jmp	0x1900


0x1be6:	push	0x2d
0x1beb:	jmp	0x1900


0x1bf6:	push	0x2e
0x1bfb:	jmp	0x1900


0x1c06:	push	0x2f
0x1c0b:	jmp	0x1900


0x1c16:	push	0x30
0x1c1b:	jmp	0x1900


0x1c26:	push	0x31
0x1c2b:	jmp	0x1900


0x1c36:	push	0x32
0x1c3b:	jmp	0x1900


0x1c46:	push	0x33
0x1c4b:	jmp	0x1900


0x1c56:	push	0x34
0x1c5b:	jmp	0x1900


0x1c66:	push	0x35
0x1c6b:	jmp	0x1900


0x1c76:	push	0x36
0x1c7b:	jmp	0x1900


0x1c86:	push	0x37
0x1c8b:	jmp	0x1900


0x1c96:	push	0x38
0x1c9b:	jmp	0x1900


0x1ca6:	push	0x39
0x1cab:	jmp	0x1900


0x1cb6:	push	0x3a
0x1cbb:	jmp	0x1900


0x1cc6:	push	0x3b
0x1ccb:	jmp	0x1900


0x1cd6:	push	0x3c
0x1cdb:	jmp	0x1900


0x1ce6:	push	0x3d
0x1ceb:	jmp	0x1900


0x1cf6:	push	0x3e
0x1cfb:	jmp	0x1900


0x1d00:	jmp	qword ptr [rip + 0x20c2b2]




0x1d06:	push	0x3f
0x1d0b:	jmp	0x1900


0x1d10:	jmp	qword ptr [rip + 0x20c2aa]




0x1d16:	push	0x40
0x1d1b:	jmp	0x1900


0x1d26:	push	0x41
0x1d2b:	jmp	0x1900


0x1d36:	nop	


0x226a:	hlt	


0x226b:	nop	dword ptr [rax + rax]


0x22a2:	nop	dword ptr [rax]
0x22a6:	nop	word ptr cs:[rax + rax]


0x22f2:	nop	dword ptr [rax]
0x22f6:	nop	word ptr cs:[rax + rax]


0x233a:	nop	word ptr [rax + rax]


0x234a:	nop	word ptr [rax + rax]


0x27ca:	nop	word ptr [rax + rax]


0x2845:	nop	
0x2846:	nop	word ptr cs:[rax + rax]


0x287b:	nop	dword ptr [rax + rax]


0x2897:	nop	word ptr [rax + rax]


0x28f4:	nop	
0x28f6:	nop	word ptr cs:[rax + rax]


0x2954:	nop	
0x2956:	nop	word ptr cs:[rax + rax]


0x36e3:	nop	dword ptr [rax]
0x36e6:	nop	word ptr cs:[rax + rax]


0x3818:	nop	dword ptr [rax + rax]


0x3828:	nop	dword ptr [rax + rax]


0x38d4:	nop	word ptr cs:[rax + rax]
0x38de:	nop	


0x3922:	nop	word ptr cs:[rax + rax]
0x392c:	nop	dword ptr [rax]


0x39cf:	nop	


0x3ab7:	nop	word ptr [rax + rax]


0x3b53:	mov	byte ptr [rsp + 0xe], 1
0x3b58:	mov	byte ptr [rsp + 0x7c], 0
0x3b5d:	xor	r12d, r12d
0x3b60:	mov	qword ptr [rsp + 0x50], 0
0x3b69:	mov	byte ptr [rsp + 0xf], 1
0x3b6e:	mov	byte ptr [rsp + 0xd], 0
0x3b73:	lea	rax, [rip + 0x76ab]
0x3b7a:	mov	qword ptr [rsp + 0x18], 1
0x3b83:	xor	r15d, r15d
0x3b86:	mov	dword ptr [rsp + 8], 2
0x3b8e:	mov	qword ptr [rsp + 0x48], rax
0x3b93:	xor	r11d, r11d
0x3b96:	mov	rax, rbp
0x3b99:	mov	r8d, r12d
0x3b9c:	mov	rbp, r11
0x3b9f:	mov	r11, rax
0x3ba2:	nop	word ptr [rax + rax]
0x3ba8:	cmp	r11, rbp
0x3bab:	setne	r12b
0x3baf:	cmp	r11, -1
0x3bb3:	jne	0x3bc2


0x3bb5:	mov	rax, qword ptr [rsp + 0x10]
0x3bba:	cmp	byte ptr [rax + rbp], 0
0x3bbe:	setne	r12b
0x3bc2:	test	r12b, r12b
0x3bc5:	je	0x4220


0x3bc2:	test	r12b, r12b
0x3bc5:	je	0x4220


0x4220:	cmp	dword ptr [rsp + 8], 2
0x4225:	movzx	ebx, byte ptr [rsp + 0xf]
0x422a:	mov	r12d, r8d
0x422d:	mov	rbp, r11
0x4230:	sete	dl
0x4233:	mov	eax, ebx
0x4235:	test	r15, r15
0x4238:	sete	cl
0x423b:	and	eax, edx
0x423d:	and	al, cl
0x423f:	jne	0x4ca6


0x3bcb:	cmp	dword ptr [rsp + 8], 2
0x3bd0:	mov	rdi, qword ptr [rsp + 0x10]
0x3bd5:	lea	r9, [rdi + rbp]
0x3bd9:	setne	al
0x3bdc:	and	al, byte ptr [rsp + 0xd]
0x3be0:	mov	r10d, eax
0x3be3:	je	0x3c90


0x4245:	mov	eax, ebx
0x4247:	xor	eax, 1
0x424a:	and	dl, al
0x424c:	je	0x4bbc


0x4ca6:	mov	dword ptr [rsp + 8], 2
0x4cae:	jmp	0x4649


0x3c90:	movzx	ebx, byte ptr [r9]
0x3c94:	cmp	bl, 0x7e
0x3c97:	ja	0x3fb8


0x3be9:	mov	rax, qword ptr [rsp + 0x18]
0x3bee:	test	rax, rax
0x3bf1:	je	0x4020


0x4bbc:	mov	rbx, qword ptr [rsp + 0x48]
0x4bc1:	test	rbx, rbx
0x4bc4:	je	0x4bf2


0x4252:	cmp	byte ptr [rsp + 0x7c], 0
0x4257:	je	0x4bba


0x4649:	cmp	byte ptr [rsp + 0xd], 0
0x464e:	je	0x4660


0x3c9d:	lea	rcx, [rip + 0x7608]
0x3ca4:	movzx	edx, bl
0x3ca7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x3cab:	add	rax, rcx
0x3cae:	jmp	rax


0x3fb8:	cmp	qword ptr [rsp + 0x58], 1
0x3fbe:	jne	0x4368


0x4020:	movzx	ebx, byte ptr [r9]
0x4024:	cmp	bl, 0x7e
0x4027:	ja	0x3fb0


0x3bf7:	cmp	r11, -1
0x3bfb:	lea	rbx, [rbp + rax]
0x3c00:	jne	0x3c30


0x4bf2:	cmp	r13, r15
0x4bf5:	jbe	0x4699


0x4bc6:	test	al, al
0x4bc8:	je	0x4bf2


0x4bba:	mov	eax, edx
0x4bbc:	mov	rbx, qword ptr [rsp + 0x48]
0x4bc1:	test	rbx, rbx
0x4bc4:	je	0x4bf2


0x425d:	cmp	byte ptr [rsp + 0xe], 0
0x4262:	jne	0x4c5d


0x4650:	test	al, al
0x4652:	mov	eax, 4
0x4657:	cmove	eax, dword ptr [rsp + 8]
0x465c:	mov	dword ptr [rsp + 8], eax


0x3fc4:	mov	qword ptr [rsp + 0x38], r11
0x3fc9:	mov	byte ptr [rsp + 0x30], r8b
0x3fce:	mov	byte ptr [rsp + 0x28], r10b
0x3fd3:	call	0x1d20


0x4368:	lea	rax, [rsp + 0xa0]
0x4370:	cmp	r11, -1
0x4374:	mov	qword ptr [rsp + 0xa0], 0
0x4380:	mov	qword ptr [rsp + 0x28], rax
0x4385:	jne	0x43b4


0x4029:	lea	rcx, [rip + 0x7478]
0x4030:	movzx	edx, bl
0x4033:	movsxd	rax, dword ptr [rcx + rdx*4]
0x4037:	add	rax, rcx
0x403a:	jmp	rax


0x3fb0:	xor	r10d, r10d
0x3fb3:	nop	dword ptr [rax + rax]
0x3fb8:	cmp	qword ptr [rsp + 0x58], 1
0x3fbe:	jne	0x4368


0x3c02:	cmp	rax, 1
0x3c06:	jbe	0x3c30


0x3c30:	cmp	rbx, r11
0x3c33:	mov	byte ptr [rsp + 0x28], r10b
0x3c38:	ja	0x41f0


0x4bfb:	mov	byte ptr [r14 + r15], 0
0x4c00:	jmp	0x4699


0x4bca:	movzx	ecx, byte ptr [rbx]
0x4bcd:	mov	rax, rbx
0x4bd0:	test	cl, cl
0x4bd2:	je	0x4bf2


0x4268:	test	r13, r13
0x426b:	sete	al
0x426e:	cmp	qword ptr [rsp + 0x50], 0
0x4274:	setne	dl
0x4277:	and	al, dl
0x4279:	je	0x4c9c


0x4387:	mov	rdi, qword ptr [rsp + 0x10]
0x438c:	mov	byte ptr [rsp + 0x40], r8b
0x4391:	mov	byte ptr [rsp + 0x38], r10b
0x4396:	mov	qword ptr [rsp + 0x30], r9
0x439b:	call	0x1a10


0x43b4:	lea	rax, [rsp + 0x9c]
0x43bc:	xor	ecx, ecx
0x43be:	mov	byte ptr [rsp + 0x7e], bl
0x43c2:	mov	byte ptr [rsp + 0x7d], r8b
0x43c7:	mov	rbx, rcx
0x43ca:	mov	qword ptr [rsp + 0x88], r9
0x43d2:	mov	qword ptr [rsp + 0x38], rax
0x43d7:	mov	byte ptr [rsp + 0x7f], r10b
0x43dc:	mov	qword ptr [rsp + 0x80], r15
0x43e4:	mov	qword ptr [rsp + 0x40], r14
0x43e9:	mov	qword ptr [rsp + 0x70], r13
0x43ee:	mov	qword ptr [rsp + 0x30], r11
0x43f3:	mov	rax, qword ptr [rsp + 0x10]
0x43f8:	lea	r14, [rbp + rbx]
0x43fd:	mov	rdx, qword ptr [rsp + 0x30]
0x4402:	mov	rcx, qword ptr [rsp + 0x28]
0x4407:	mov	rdi, qword ptr [rsp + 0x38]
0x440c:	lea	r13, [rax + r14]
0x4410:	sub	rdx, r14
0x4413:	mov	rsi, r13
0x4416:	call	0x8850


0x3c08:	mov	byte ptr [rsp + 0x38], r8b
0x3c0d:	mov	byte ptr [rsp + 0x30], r10b
0x3c12:	mov	qword ptr [rsp + 0x28], r9
0x3c17:	call	0x1a10


0x3c3e:	mov	rdx, qword ptr [rsp + 0x18]
0x3c43:	mov	rsi, qword ptr [rsp + 0x48]
0x3c48:	mov	rdi, r9
0x3c4b:	mov	qword ptr [rsp + 0x40], r11
0x3c50:	mov	byte ptr [rsp + 0x38], r8b
0x3c55:	mov	qword ptr [rsp + 0x30], r9
0x3c5a:	call	0x1b10


0x41f0:	xor	r10d, r10d
0x41f3:	jmp	0x3c90


0x4bd4:	mov	rdx, r15
0x4bd7:	sub	rax, r15
0x4bda:	cmp	r13, rdx
0x4bdd:	jbe	0x4be3


0x4c9c:	movzx	eax, byte ptr [rsp + 0x7c]
0x4ca1:	jmp	0x4bbc


0x427f:	mov	r13, qword ptr [rsp + 0x50]
0x4284:	lea	rbx, [rip + 0x6f9a]
0x428b:	mov	byte ptr [r14], 0x27
0x428f:	mov	dword ptr [rsp + 8], 2
0x4297:	mov	r15d, 1
0x429d:	mov	qword ptr [rsp + 0x18], 1
0x42a6:	mov	byte ptr [rsp + 0xf], 0
0x42ab:	mov	qword ptr [rsp + 0x48], rbx
0x42b0:	mov	byte ptr [rsp + 0x7c], al
0x42b4:	jmp	0x3b93


0x4be3:	add	rdx, 1
0x4be7:	movzx	ecx, byte ptr [rax + rdx]
0x4beb:	test	cl, cl
0x4bed:	jne	0x4bda


0x4bdf:	mov	byte ptr [r14 + rdx], cl
0x4be3:	add	rdx, 1
0x4be7:	movzx	ecx, byte ptr [rax + rdx]
0x4beb:	test	cl, cl
0x4bed:	jne	0x4bda


0x3b93:	xor	r11d, r11d
0x3b96:	mov	rax, rbp
0x3b99:	mov	r8d, r12d
0x3b9c:	mov	rbp, r11
0x3b9f:	mov	r11, rax
0x3ba2:	nop	word ptr [rax + rax]
0x3ba8:	cmp	r11, rbp
0x3bab:	setne	r12b
0x3baf:	cmp	r11, -1
0x3bb3:	jne	0x3bc2


0x4bef:	mov	r15, rdx
0x4bf2:	cmp	r13, r15
0x4bf5:	jbe	0x4699


0x4bda:	cmp	r13, rdx
0x4bdd:	jbe	0x4be3


0x3c5f:	test	eax, eax
0x3c61:	mov	r9, qword ptr [rsp + 0x30]
0x3c66:	movzx	r8d, byte ptr [rsp + 0x38]
0x3c6c:	mov	r11, qword ptr [rsp + 0x40]
0x3c71:	jne	0x41f0


0x3c77:	cmp	byte ptr [rsp + 0xf], 0
0x3c7c:	movzx	r10d, byte ptr [rsp + 0x28]
0x3c82:	jne	0x4c05


0x4c05:	cmp	dword ptr [rsp + 8], 2
0x4c0a:	movzx	ebx, byte ptr [rsp + 0xf]
0x4c0f:	mov	rbp, r11
0x4c12:	sete	al
0x4c15:	mov	byte ptr [rsp + 0xd], bl
0x4c19:	jmp	0x4649


0x441b:	test	rax, rax
0x441e:	mov	r15, rax
0x4421:	je	0x4471


0x4471:	mov	edx, r12d
0x4474:	mov	rdi, rbx
0x4477:	movzx	r8d, byte ptr [rsp + 0x7d]
0x447d:	xor	edx, 1
0x4480:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4485:	movzx	r10d, byte ptr [rsp + 0x7f]
0x448b:	and	dl, byte ptr [rsp + 0xd]
0x448f:	mov	r15, qword ptr [rsp + 0x80]
0x4497:	mov	r14, qword ptr [rsp + 0x40]
0x449c:	mov	r13, qword ptr [rsp + 0x70]
0x44a1:	mov	r11, qword ptr [rsp + 0x30]
0x44a6:	cmp	rdi, 1
0x44aa:	jbe	0x4aab


0x4423:	cmp	rax, -1
0x4427:	je	0x4a45


0x4aab:	mov	eax, edx
0x4aad:	jmp	0x4007


0x44b0:	mov	rcx, rdi
0x44b3:	xor	esi, esi
0x44b5:	movzx	r9d, byte ptr [rsp + 0xf]
0x44bb:	add	rcx, rbp
0x44be:	mov	rdi, qword ptr [rsp + 0x10]
0x44c3:	jmp	0x457e


0x4a45:	mov	rdi, rbx
0x4a48:	movzx	r8d, byte ptr [rsp + 0x7d]
0x4a4e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4a53:	movzx	r10d, byte ptr [rsp + 0x7f]
0x4a59:	mov	r15, qword ptr [rsp + 0x80]
0x4a61:	xor	r12d, r12d
0x4a64:	mov	r14, qword ptr [rsp + 0x40]
0x4a69:	mov	r13, qword ptr [rsp + 0x70]
0x4a6e:	mov	r11, qword ptr [rsp + 0x30]
0x4a73:	movzx	edx, byte ptr [rsp + 0xd]
0x4a78:	jmp	0x44a6


0x442d:	cmp	rax, -2
0x4431:	je	0x49d1


0x4007:	test	al, al
0x4009:	jne	0x49a1


0x457e:	test	dl, dl
0x4580:	jne	0x44d0


0x44a6:	cmp	rdi, 1
0x44aa:	jbe	0x4aab


0x49d1:	mov	r11, qword ptr [rsp + 0x30]
0x49d6:	mov	rsi, r14
0x49d9:	mov	rcx, r13
0x49dc:	mov	rax, rbx
0x49df:	mov	rdi, rbx
0x49e2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x49e8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x49ed:	mov	r9, qword ptr [rsp + 0x88]
0x49f5:	cmp	rsi, r11
0x49f8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x49fe:	mov	r15, qword ptr [rsp + 0x80]
0x4a06:	mov	r14, qword ptr [rsp + 0x40]
0x4a0b:	mov	r13, qword ptr [rsp + 0x70]
0x4a10:	jae	0x4a38


0x4437:	cmp	dword ptr [rsp + 8], 2
0x443c:	sete	al
0x443f:	and	al, byte ptr [rsp + 0xf]
0x4443:	jne	0x45e0


0x400f:	cmp	dword ptr [rsp + 8], 2
0x4014:	sete	dl
0x4017:	jmp	0x3ce8


0x49a1:	movzx	edx, byte ptr [rsp + 0xd]
0x49a6:	xor	r12d, r12d
0x49a9:	jmp	0x44b0


0x4586:	mov	eax, esi
0x4588:	xor	eax, 1
0x458b:	and	eax, r8d
0x458e:	test	r10b, r10b
0x4591:	je	0x45a1


0x44d0:	cmp	dword ptr [rsp + 8], 2
0x44d5:	sete	al
0x44d8:	test	r9b, r9b
0x44db:	jne	0x4990


0x4a12:	cmp	byte ptr [rcx], 0
0x4a15:	jne	0x4a27


0x4a38:	movzx	edx, byte ptr [rsp + 0xd]
0x4a3d:	xor	r12d, r12d
0x4a40:	jmp	0x44a6


0x4449:	mov	edi, dword ptr [rsp + 0x9c]
0x4450:	call	0x1d10


0x45e0:	cmp	r15, 1
0x45e4:	je	0x4449


0x3ce8:	cmp	byte ptr [rsp + 0xd], 1
0x3ced:	jne	0x3e02


0x45a1:	add	rbp, 1
0x45a5:	cmp	rbp, rcx
0x45a8:	jae	0x3d2c


0x4593:	cmp	r13, r15
0x4596:	jbe	0x459d


0x44e1:	mov	esi, r8d
0x44e4:	xor	esi, 1
0x44e7:	and	al, sil
0x44ea:	je	0x451b


0x4990:	movzx	ebx, byte ptr [rsp + 0xf]
0x4995:	mov	rbp, r11
0x4998:	mov	byte ptr [rsp + 0xd], bl
0x499c:	jmp	0x4649


0x4a17:	jmp	0x4a38


0x4a27:	add	rax, 1
0x4a2b:	lea	rdx, [rbp + rax]
0x4a30:	cmp	r11, rdx
0x4a33:	ja	0x4a20


0x45ea:	mov	rdi, qword ptr [rsp + 0x10]
0x45ef:	lea	rcx, [rdi + r15]
0x45f3:	lea	rdx, [rdi + r14 + 1]
0x45f8:	lea	r8, [rcx + r14]
0x45fc:	jmp	0x460d


0x3cf3:	test	dl, dl
0x3cf5:	jne	0x3e02


0x3e02:	cmp	byte ptr [rsp + 0xf], 0
0x3e07:	jne	0x3cfb


0x45ae:	test	al, al
0x45b0:	je	0x49ae


0x3d2c:	test	al, al
0x3d2e:	je	0x3d50


0x459d:	add	r15, 1
0x45a1:	add	rbp, 1
0x45a5:	cmp	rbp, rcx
0x45a8:	jae	0x3d2c


0x4598:	mov	byte ptr [r14 + r15], 0x5c
0x459d:	add	r15, 1
0x45a1:	add	rbp, 1
0x45a5:	cmp	rbp, rcx
0x45a8:	jae	0x3d2c


0x451b:	cmp	r13, r15
0x451e:	jbe	0x4525


0x44ec:	cmp	r13, r15
0x44ef:	jbe	0x44f6


0x4a35:	mov	rdi, rax
0x4a38:	movzx	edx, byte ptr [rsp + 0xd]
0x4a3d:	xor	r12d, r12d
0x4a40:	jmp	0x44a6


0x4a20:	cmp	byte ptr [r9 + rax], 0
0x4a25:	je	0x4a35


0x460d:	movzx	ecx, byte ptr [rdx]
0x4610:	sub	ecx, 0x5b
0x4613:	cmp	cl, 0x21
0x4616:	ja	0x4600


0x3cfb:	mov	rsi, qword ptr [rsp + 0x20]
0x3d00:	test	rsi, rsi
0x3d03:	je	0x3d19


0x3e0d:	jmp	0x3d19


0x49ae:	xor	r10d, r10d
0x49b1:	jmp	0x456d


0x45b6:	cmp	r13, r15
0x45b9:	jbe	0x45c0


0x3d50:	cmp	r15, r13
0x3d53:	jae	0x3d59


0x3d30:	cmp	r13, r15
0x3d33:	jbe	0x3d3a


0x4525:	lea	rax, [r15 + 1]
0x4529:	cmp	r13, rax
0x452c:	jbe	0x453b


0x4520:	mov	byte ptr [r14 + r15], 0x5c
0x4525:	lea	rax, [r15 + 1]
0x4529:	cmp	r13, rax
0x452c:	jbe	0x453b


0x44f6:	lea	rsi, [r15 + 1]
0x44fa:	cmp	r13, rsi
0x44fd:	jbe	0x4505


0x44f1:	mov	byte ptr [r14 + r15], 0x27
0x44f6:	lea	rsi, [r15 + 1]
0x44fa:	cmp	r13, rsi
0x44fd:	jbe	0x4505


0x4618:	mov	esi, 1
0x461d:	shl	rsi, cl
0x4620:	mov	rcx, rsi
0x4623:	movabs	rsi, 0x20000002b
0x462d:	test	rcx, rsi
0x4630:	je	0x4600


0x4600:	add	rdx, 1
0x4604:	cmp	r8, rdx
0x4607:	je	0x4449


0x3d19:	test	r10b, r10b
0x3d1c:	jne	0x3e63


0x3d05:	mov	edx, ebx
0x3d07:	shr	dl, 5
0x3d0a:	movzx	edx, dl
0x3d0d:	mov	edx, dword ptr [rsi + rdx*4]
0x3d10:	bt	edx, ebx
0x3d13:	jb	0x3e63


0x456d:	cmp	r13, r15
0x4570:	jbe	0x4576


0x45c0:	lea	rax, [r15 + 1]
0x45c4:	cmp	r13, rax
0x45c7:	jbe	0x45cf


0x45bb:	mov	byte ptr [r14 + r15], 0x27
0x45c0:	lea	rax, [r15 + 1]
0x45c4:	cmp	r13, rax
0x45c7:	jbe	0x45cf


0x3d55:	mov	byte ptr [r14 + r15], bl
0x3d59:	movzx	edi, byte ptr [rsp + 0xe]
0x3d5e:	add	r15, 1
0x3d62:	mov	eax, 0
0x3d67:	test	r12b, r12b
0x3d6a:	cmove	edi, eax
0x3d6d:	mov	byte ptr [rsp + 0xe], dil
0x3d72:	jmp	0x3ba8


0x3d59:	movzx	edi, byte ptr [rsp + 0xe]
0x3d5e:	add	r15, 1
0x3d62:	mov	eax, 0
0x3d67:	test	r12b, r12b
0x3d6a:	cmove	edi, eax
0x3d6d:	mov	byte ptr [rsp + 0xe], dil
0x3d72:	jmp	0x3ba8


0x3d3a:	lea	rax, [r15 + 1]
0x3d3e:	cmp	r13, rax
0x3d41:	jbe	0x3d49


0x3d35:	mov	byte ptr [r14 + r15], 0x27
0x3d3a:	lea	rax, [r15 + 1]
0x3d3e:	cmp	r13, rax
0x3d41:	jbe	0x3d49


0x453b:	lea	rax, [r15 + 2]
0x453f:	cmp	r13, rax
0x4542:	jbe	0x4554


0x452e:	mov	eax, ebx
0x4530:	shr	al, 6
0x4533:	add	eax, 0x30
0x4536:	mov	byte ptr [r14 + r15 + 1], al
0x453b:	lea	rax, [r15 + 2]
0x453f:	cmp	r13, rax
0x4542:	jbe	0x4554


0x4505:	lea	rsi, [r15 + 2]
0x4509:	cmp	r13, rsi
0x450c:	jbe	0x4514


0x44ff:	mov	byte ptr [r14 + r15 + 1], 0x24
0x4505:	lea	rsi, [r15 + 2]
0x4509:	cmp	r13, rsi
0x450c:	jbe	0x4514


0x4632:	mov	r14, qword ptr [rsp + 0x40]
0x4637:	mov	r13, qword ptr [rsp + 0x70]
0x463c:	mov	rbp, qword ptr [rsp + 0x30]
0x4641:	mov	dword ptr [rsp + 8], 2
0x4649:	cmp	byte ptr [rsp + 0xd], 0
0x464e:	je	0x4660


0x3d22:	xor	eax, 1
0x3d25:	add	rbp, 1
0x3d29:	and	eax, r8d
0x3d2c:	test	al, al
0x3d2e:	je	0x3d50


0x3e63:	cmp	dword ptr [rsp + 8], 2
0x3e68:	sete	dl
0x3e6b:	cmp	byte ptr [rsp + 0xf], 0
0x3e70:	mov	eax, edx
0x3e72:	jne	0x46c8


0x4576:	movzx	ebx, byte ptr [rdi + rbp]
0x457a:	add	r15, 1
0x457e:	test	dl, dl
0x4580:	jne	0x44d0


0x4572:	mov	byte ptr [r14 + r15], bl
0x4576:	movzx	ebx, byte ptr [rdi + rbp]
0x457a:	add	r15, 1
0x457e:	test	dl, dl
0x4580:	jne	0x44d0


0x45cf:	add	r15, 2
0x45d3:	xor	r10d, r10d
0x45d6:	xor	r8d, r8d
0x45d9:	jmp	0x456d


0x45c9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x45cf:	add	r15, 2
0x45d3:	xor	r10d, r10d
0x45d6:	xor	r8d, r8d
0x45d9:	jmp	0x456d


0x3ba8:	cmp	r11, rbp
0x3bab:	setne	r12b
0x3baf:	cmp	r11, -1
0x3bb3:	jne	0x3bc2


0x3d49:	add	r15, 2
0x3d4d:	xor	r8d, r8d
0x3d50:	cmp	r15, r13
0x3d53:	jae	0x3d59


0x3d43:	mov	byte ptr [r14 + r15 + 1], 0x27
0x3d49:	add	r15, 2
0x3d4d:	xor	r8d, r8d
0x3d50:	cmp	r15, r13
0x3d53:	jae	0x3d59


0x4554:	and	ebx, 7
0x4557:	add	rbp, 1
0x455b:	add	r15, 3
0x455f:	add	ebx, 0x30
0x4562:	cmp	rbp, rcx
0x4565:	jae	0x3d50


0x4544:	mov	eax, ebx
0x4546:	shr	al, 3
0x4549:	and	eax, 7
0x454c:	add	eax, 0x30
0x454f:	mov	byte ptr [r14 + r15 + 2], al
0x4554:	and	ebx, 7
0x4557:	add	rbp, 1
0x455b:	add	r15, 3
0x455f:	add	ebx, 0x30
0x4562:	cmp	rbp, rcx
0x4565:	jae	0x3d50


0x4514:	add	r15, 3
0x4518:	mov	r8d, eax
0x451b:	cmp	r13, r15
0x451e:	jbe	0x4525


0x450e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x4514:	add	r15, 3
0x4518:	mov	r8d, eax
0x451b:	cmp	r13, r15
0x451e:	jbe	0x4525


0x3e78:	mov	eax, r8d
0x3e7b:	xor	eax, 1
0x3e7e:	and	al, dl
0x3e80:	je	0x3eb1


0x46c8:	mov	rbp, r11
0x46cb:	jmp	0x4649


0x456b:	mov	esi, edx
0x456d:	cmp	r13, r15
0x4570:	jbe	0x4576


0x3eb1:	cmp	r13, r15
0x3eb4:	jbe	0x3ebb


0x3e82:	cmp	r13, r15
0x3e85:	jbe	0x3e8c


0x3ebb:	add	r15, 1
0x3ebf:	add	rbp, 1
0x3ec3:	jmp	0x3d50


0x3eb6:	mov	byte ptr [r14 + r15], 0x5c
0x3ebb:	add	r15, 1
0x3ebf:	add	rbp, 1
0x3ec3:	jmp	0x3d50


0x3e8c:	lea	rdx, [r15 + 1]
0x3e90:	cmp	r13, rdx
0x3e93:	jbe	0x3e9b


0x3e87:	mov	byte ptr [r14 + r15], 0x27
0x3e8c:	lea	rdx, [r15 + 1]
0x3e90:	cmp	r13, rdx
0x3e93:	jbe	0x3e9b


0x3e9b:	lea	rdx, [r15 + 2]
0x3e9f:	cmp	r13, rdx
0x3ea2:	jbe	0x3eaa


0x3e95:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3e9b:	lea	rdx, [r15 + 2]
0x3e9f:	cmp	r13, rdx
0x3ea2:	jbe	0x3eaa


0x3eaa:	add	r15, 3
0x3eae:	mov	r8d, eax
0x3eb1:	cmp	r13, r15
0x3eb4:	jbe	0x3ebb


0x3ea4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x3eaa:	add	r15, 3
0x3eae:	mov	r8d, eax
0x3eb1:	cmp	r13, r15
0x3eb4:	jbe	0x3ebb


0x4455:	mov	rdi, qword ptr [rsp + 0x28]
0x445a:	test	eax, eax
0x445c:	mov	eax, 0
0x4461:	cmove	r12d, eax
0x4465:	add	rbx, r15
0x4468:	call	0x1d00


0x446d:	test	eax, eax
0x446f:	je	0x43f3


0x43f3:	mov	rax, qword ptr [rsp + 0x10]
0x43f8:	lea	r14, [rbp + rbx]
0x43fd:	mov	rdx, qword ptr [rsp + 0x30]
0x4402:	mov	rcx, qword ptr [rsp + 0x28]
0x4407:	mov	rdi, qword ptr [rsp + 0x38]
0x440c:	lea	r13, [rax + r14]
0x4410:	sub	rdx, r14
0x4413:	mov	rsi, r13
0x4416:	call	0x8850


0x3c1c:	movzx	r8d, byte ptr [rsp + 0x38]
0x3c22:	movzx	r10d, byte ptr [rsp + 0x30]
0x3c28:	mov	r11, rax
0x3c2b:	mov	r9, qword ptr [rsp + 0x28]
0x3c30:	cmp	rbx, r11
0x3c33:	mov	byte ptr [rsp + 0x28], r10b
0x3c38:	ja	0x41f0


0x43a0:	movzx	r8d, byte ptr [rsp + 0x40]
0x43a6:	movzx	r10d, byte ptr [rsp + 0x38]
0x43ac:	mov	r11, rax
0x43af:	mov	r9, qword ptr [rsp + 0x30]
0x43b4:	lea	rax, [rsp + 0x9c]
0x43bc:	xor	ecx, ecx
0x43be:	mov	byte ptr [rsp + 0x7e], bl
0x43c2:	mov	byte ptr [rsp + 0x7d], r8b
0x43c7:	mov	rbx, rcx
0x43ca:	mov	qword ptr [rsp + 0x88], r9
0x43d2:	mov	qword ptr [rsp + 0x38], rax
0x43d7:	mov	byte ptr [rsp + 0x7f], r10b
0x43dc:	mov	qword ptr [rsp + 0x80], r15
0x43e4:	mov	qword ptr [rsp + 0x40], r14
0x43e9:	mov	qword ptr [rsp + 0x70], r13
0x43ee:	mov	qword ptr [rsp + 0x30], r11
0x43f3:	mov	rax, qword ptr [rsp + 0x10]
0x43f8:	lea	r14, [rbp + rbx]
0x43fd:	mov	rdx, qword ptr [rsp + 0x30]
0x4402:	mov	rcx, qword ptr [rsp + 0x28]
0x4407:	mov	rdi, qword ptr [rsp + 0x38]
0x440c:	lea	r13, [rax + r14]
0x4410:	sub	rdx, r14
0x4413:	mov	rsi, r13
0x4416:	call	0x8850


0x3fd8:	mov	rcx, qword ptr [rax]
0x3fdb:	movzx	edx, bl
0x3fde:	movzx	r10d, byte ptr [rsp + 0x28]
0x3fe4:	movzx	r8d, byte ptr [rsp + 0x30]
0x3fea:	mov	r11, qword ptr [rsp + 0x38]
0x3fef:	mov	edi, 1
0x3ff4:	movzx	eax, word ptr [rcx + rdx*2]
0x3ff8:	and	ax, 0x4000
0x3ffc:	setne	r12b
0x4000:	sete	al
0x4003:	and	al, byte ptr [rsp + 0xd]
0x4007:	test	al, al
0x4009:	jne	0x49a1


0x3cb0:	xor	r10d, r10d
0x3cb3:	cmp	r11, 1
0x3cb7:	setne	al
0x3cba:	cmp	r11, -1
0x3cbe:	jne	0x3ccc


0x3cc0:	mov	rax, qword ptr [rsp + 0x10]
0x3cc5:	cmp	byte ptr [rax + 1], 0
0x3cc9:	setne	al
0x3ccc:	cmp	dword ptr [rsp + 8], 2
0x3cd1:	sete	dl
0x3cd4:	test	al, al
0x3cd6:	je	0x3f28


0x3ccc:	cmp	dword ptr [rsp + 8], 2
0x3cd1:	sete	dl
0x3cd4:	test	al, al
0x3cd6:	je	0x3f28


0x3f28:	test	rbp, rbp
0x3f2b:	jne	0x3cdc


0x3cdc:	xor	r12d, r12d
0x3cdf:	xor	eax, eax
0x3ce1:	nop	dword ptr [rax]
0x3ce8:	cmp	byte ptr [rsp + 0xd], 1
0x3ced:	jne	0x3e02


0x3f31:	movzx	eax, byte ptr [rsp + 0xf]
0x3f36:	and	al, dl
0x3f38:	je	0x3ce8


0x3f3e:	mov	rbp, r11
0x3f41:	mov	dword ptr [rsp + 8], 2
0x3f49:	jmp	0x4649


0x4348:	cmp	byte ptr [rsp + 0xf], 0
0x434d:	jne	0x4b70


0x3d90:	cmp	eax, 5
0x3d93:	je	0x4308


0x4353:	xor	r12d, r12d
0x4356:	xor	eax, eax
0x4358:	mov	ebx, 0x3f
0x435d:	jmp	0x3d19


0x4b70:	mov	rbp, r11
0x4b73:	movzx	eax, byte ptr [rsp + 0xf]
0x4b78:	jmp	0x4649


0x4308:	test	byte ptr [rsp + 0x78], 4
0x430d:	je	0x4330


0x3d99:	cmp	eax, 2
0x3d9c:	mov	ebx, 0x3f
0x3da1:	sete	dl
0x3da4:	xor	r12d, r12d
0x3da7:	xor	eax, eax
0x3da9:	jmp	0x3ce8


0x4330:	xor	edx, edx
0x4332:	xor	r12d, r12d
0x4335:	xor	eax, eax
0x4337:	mov	ebx, 0x3f
0x433c:	jmp	0x3ce8


0x430f:	lea	rcx, [rbp + 2]
0x4313:	cmp	rcx, r11
0x4316:	jae	0x4330


0x4318:	mov	rax, qword ptr [rsp + 0x10]
0x431d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x4322:	je	0x4ab2


0x4ab2:	movzx	ebx, byte ptr [rax + rcx]
0x4ab6:	cmp	bl, 0x3e
0x4ab9:	ja	0x4330


0x4abf:	movabs	rax, 0x7000a38200000000
0x4ac9:	bt	rax, rbx
0x4acd:	jae	0x4330


0x4ad3:	cmp	byte ptr [rsp + 0xf], 0
0x4ad8:	jne	0x4cc2


0x4ade:	cmp	r13, r15
0x4ae1:	jbe	0x4ae8


0x4cc2:	mov	rbp, r11
0x4cc5:	jmp	0x4660


0x4ae8:	lea	rax, [r15 + 1]
0x4aec:	cmp	r13, rax
0x4aef:	jbe	0x4af7


0x4ae3:	mov	byte ptr [r14 + r15], 0x3f
0x4ae8:	lea	rax, [r15 + 1]
0x4aec:	cmp	r13, rax
0x4aef:	jbe	0x4af7


0x4af7:	lea	rax, [r15 + 2]
0x4afb:	cmp	r13, rax
0x4afe:	jbe	0x4b06


0x4af1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x4af7:	lea	rax, [r15 + 2]
0x4afb:	cmp	r13, rax
0x4afe:	jbe	0x4b06


0x4b06:	lea	rax, [r15 + 3]
0x4b0a:	cmp	r13, rax
0x4b0d:	jbe	0x4b15


0x4b00:	mov	byte ptr [r14 + r15 + 2], 0x22
0x4b06:	lea	rax, [r15 + 3]
0x4b0a:	cmp	r13, rax
0x4b0d:	jbe	0x4b15


0x4b15:	add	r15, 4
0x4b19:	xor	edx, edx
0x4b1b:	xor	r12d, r12d
0x4b1e:	xor	eax, eax
0x4b20:	mov	rbp, rcx
0x4b23:	jmp	0x3ce8


0x4b0f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x4b15:	add	r15, 4
0x4b19:	xor	edx, edx
0x4b1b:	xor	r12d, r12d
0x4b1e:	xor	eax, eax
0x4b20:	mov	rbp, rcx
0x4b23:	jmp	0x3ce8


0x42c0:	cmp	byte ptr [rsp + 0xf], 0
0x42c5:	jne	0x4b70


0x3dbe:	mov	byte ptr [rsp + 0x7c], r12b
0x3dc3:	xor	edx, edx
0x3dc5:	xor	eax, eax
0x3dc7:	mov	ebx, 0x27
0x3dcc:	jmp	0x3ce8


0x42cb:	test	r13, r13
0x42ce:	je	0x46d0


0x46d0:	cmp	r13, r15
0x46d3:	jbe	0x46da


0x42d4:	xor	edx, edx
0x42d6:	cmp	qword ptr [rsp + 0x50], 0
0x42dc:	jne	0x46d0


0x46da:	lea	rax, [r15 + 1]
0x46de:	cmp	r13, rax
0x46e1:	jbe	0x46e9


0x46d5:	mov	byte ptr [r14 + r15], 0x27
0x46da:	lea	rax, [r15 + 1]
0x46de:	cmp	r13, rax
0x46e1:	jbe	0x46e9


0x42e2:	mov	qword ptr [rsp + 0x50], r13
0x42e7:	add	r15, 3
0x42eb:	xor	eax, eax
0x42ed:	mov	byte ptr [rsp + 0x7c], r12b
0x42f2:	xor	r8d, r8d
0x42f5:	mov	r13, rdx
0x42f8:	mov	ebx, 0x27
0x42fd:	jmp	0x3d19


0x46e9:	lea	rax, [r15 + 2]
0x46ed:	cmp	r13, rax
0x46f0:	jbe	0x4ce2


0x46e3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x46e9:	lea	rax, [r15 + 2]
0x46ed:	cmp	r13, rax
0x46f0:	jbe	0x4ce2


0x4ce2:	mov	rdx, r13
0x4ce5:	mov	r13, qword ptr [rsp + 0x50]
0x4cea:	jmp	0x42e2


0x46f6:	mov	rdx, r13
0x46f9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x46ff:	mov	r13, qword ptr [rsp + 0x50]
0x4704:	jmp	0x42e2


0x3df4:	cmp	byte ptr [rsp + 0xd], 0
0x3df9:	jne	0x3e60


0x3dfb:	mov	ebx, edx
0x3dfd:	xor	r12d, r12d
0x3e00:	xor	eax, eax
0x3e02:	cmp	byte ptr [rsp + 0xf], 0
0x3e07:	jne	0x3cfb


0x3e60:	xor	r12d, r12d
0x3e63:	cmp	dword ptr [rsp + 8], 2
0x3e68:	sete	dl
0x3e6b:	cmp	byte ptr [rsp + 0xf], 0
0x3e70:	mov	eax, edx
0x3e72:	jne	0x46c8


0x4200:	cmp	byte ptr [rsp + 0xf], 0
0x4205:	jne	0x4b70


0x3e33:	cmp	byte ptr [rsp + 0xd], 0
0x3e38:	je	0x4050


0x420b:	add	rbp, 1
0x420f:	mov	eax, r8d
0x4212:	xor	r12d, r12d
0x4215:	mov	ebx, 0x5c
0x421a:	jmp	0x3d2c


0x4050:	mov	edx, 0x5c
0x4055:	mov	ebx, 0x5c
0x405a:	jmp	0x3df4


0x3e3e:	cmp	byte ptr [rsp + 0xf], 0
0x3e43:	je	0x4050


0x3e49:	cmp	qword ptr [rsp + 0x18], 0
0x3e4f:	jne	0x420b


0x3e55:	mov	ebx, 0x5c
0x3e5a:	nop	word ptr [rax + rax]
0x3e60:	xor	r12d, r12d
0x3e63:	cmp	dword ptr [rsp + 8], 2
0x3e68:	sete	dl
0x3e6b:	cmp	byte ptr [rsp + 0xf], 0
0x3e70:	mov	eax, edx
0x3e72:	jne	0x46c8


0x3edb:	xor	edx, edx
0x3edd:	test	byte ptr [rsp + 0x78], 1
0x3ee2:	je	0x3dfb


0x40a3:	cmp	dword ptr [rsp + 8], 2
0x40a8:	sete	dl
0x40ab:	cmp	byte ptr [rsp + 0xf], 0
0x40b0:	jne	0x4c4a


0x3ee8:	add	rbp, 1
0x3eec:	jmp	0x3ba8


0x40b6:	mov	eax, r8d
0x40b9:	mov	rcx, r15
0x40bc:	xor	eax, 1
0x40bf:	and	al, dl
0x40c1:	je	0x40f0


0x4c4a:	movzx	ebx, byte ptr [rsp + 0xf]
0x4c4f:	mov	rbp, r11
0x4c52:	mov	eax, edx
0x4c54:	mov	byte ptr [rsp + 0xd], bl
0x4c58:	jmp	0x4649


0x40f0:	cmp	r13, rcx
0x40f3:	jbe	0x40fa


0x40c3:	cmp	r13, r15
0x40c6:	jbe	0x40cd


0x40fa:	cmp	dword ptr [rsp + 8], 2
0x40ff:	lea	r15, [rcx + 1]
0x4103:	je	0x4709


0x40f5:	mov	byte ptr [r14 + rcx], 0x5c
0x40fa:	cmp	dword ptr [rsp + 8], 2
0x40ff:	lea	r15, [rcx + 1]
0x4103:	je	0x4709


0x40cd:	lea	rcx, [r15 + 1]
0x40d1:	cmp	r13, rcx
0x40d4:	jbe	0x40dc


0x40c8:	mov	byte ptr [r14 + r15], 0x27
0x40cd:	lea	rcx, [r15 + 1]
0x40d1:	cmp	r13, rcx
0x40d4:	jbe	0x40dc


0x4709:	mov	eax, r12d
0x470c:	mov	ebx, 0x30
0x4711:	xor	r12d, r12d
0x4714:	jmp	0x3d19


0x4109:	lea	rax, [rbp + 1]
0x410d:	cmp	rax, r11
0x4110:	jae	0x412b


0x40dc:	lea	rcx, [r15 + 2]
0x40e0:	cmp	r13, rcx
0x40e3:	ja	0x4719


0x40d6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x40dc:	lea	rcx, [r15 + 2]
0x40e0:	cmp	r13, rcx
0x40e3:	ja	0x4719


0x4112:	mov	rax, qword ptr [rsp + 0x10]
0x4117:	movzx	eax, byte ptr [rax + rbp + 1]
0x411c:	mov	byte ptr [rsp + 0x28], al
0x4120:	sub	eax, 0x30
0x4123:	cmp	al, 9
0x4125:	jbe	0x4959


0x412b:	mov	eax, r12d
0x412e:	mov	ebx, 0x30
0x4133:	xor	r12d, r12d
0x4136:	jmp	0x3ce8


0x40e9:	lea	rcx, [r15 + 3]
0x40ed:	mov	r8d, eax
0x40f0:	cmp	r13, rcx
0x40f3:	jbe	0x40fa


0x4719:	mov	byte ptr [r14 + r15 + 2], 0x27
0x471f:	jmp	0x40e9


0x4959:	cmp	r13, r15
0x495c:	jbe	0x4963


0x4963:	lea	rax, [rcx + 2]
0x4967:	cmp	r13, rax
0x496a:	jbe	0x4972


0x495e:	mov	byte ptr [r14 + r15], 0x30
0x4963:	lea	rax, [rcx + 2]
0x4967:	cmp	r13, rax
0x496a:	jbe	0x4972


0x4972:	mov	eax, r12d
0x4975:	lea	r15, [rcx + 3]
0x4979:	xor	r12d, r12d
0x497c:	mov	ebx, 0x30
0x4981:	jmp	0x3ce8


0x496c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x4972:	mov	eax, r12d
0x4975:	lea	r15, [rcx + 3]
0x4979:	xor	r12d, r12d
0x497c:	mov	ebx, 0x30
0x4981:	jmp	0x3ce8


0x3de2:	cmp	dword ptr [rsp + 8], 2
0x3de7:	sete	al
0x3dea:	and	al, byte ptr [rsp + 0xf]
0x3dee:	jne	0x3f3e


0x41a0:	mov	edx, 0xd
0x41a5:	xor	r10d, r10d
0x41a8:	mov	ebx, 0x72
0x41ad:	jmp	0x3de2


0x4724:	test	ebx, ebx
0x4726:	jne	0x3b53


0x472c:	mov	byte ptr [rsp + 0xd], 1
0x4731:	test	r13, r13
0x4734:	jne	0x4cca


0x473a:	lea	rax, [rip + 0x6ae4]
0x4741:	mov	qword ptr [rsp + 0x50], 0
0x474a:	mov	byte ptr [rsp + 0xe], 1
0x474f:	mov	byte ptr [rsp + 0x7c], 0
0x4754:	xor	r12d, r12d
0x4757:	mov	byte ptr [rsp + 0xf], 0
0x475c:	mov	qword ptr [rsp + 0x18], 1
0x4765:	mov	qword ptr [rsp + 0x48], rax
0x476a:	mov	r15d, 1
0x4770:	mov	dword ptr [rsp + 8], 2
0x4778:	jmp	0x3b93


0x4cca:	mov	byte ptr [rsp + 0xe], 1
0x4ccf:	xor	eax, eax
0x4cd1:	xor	r12d, r12d
0x4cd4:	mov	qword ptr [rsp + 0x50], 0
0x4cdd:	jmp	0x4284


0x4284:	lea	rbx, [rip + 0x6f9a]
0x428b:	mov	byte ptr [r14], 0x27
0x428f:	mov	dword ptr [rsp + 8], 2
0x4297:	mov	r15d, 1
0x429d:	mov	qword ptr [rsp + 0x18], 1
0x42a6:	mov	byte ptr [rsp + 0xf], 0
0x42ab:	mov	qword ptr [rsp + 0x48], rbx
0x42b0:	mov	byte ptr [rsp + 0x7c], al
0x42b4:	jmp	0x3b93


0x4788:	test	r13, r13
0x478b:	je	0x49b6


0x4b7d:	lea	rax, [rip + 0x669f]
0x4b84:	mov	byte ptr [rsp + 0xe], 1
0x4b89:	mov	byte ptr [rsp + 0x7c], 0
0x4b8e:	xor	r12d, r12d
0x4b91:	mov	qword ptr [rsp + 0x50], 0
0x4b9a:	mov	byte ptr [rsp + 0xf], 1
0x4b9f:	mov	byte ptr [rsp + 0xd], 1
0x4ba4:	mov	qword ptr [rsp + 0x18], 1
0x4bad:	xor	r15d, r15d
0x4bb0:	mov	qword ptr [rsp + 0x48], rax
0x4bb5:	jmp	0x3b93


0x49b6:	mov	qword ptr [rsp + 0x50], 0
0x49bf:	mov	byte ptr [rsp + 0xe], 1
0x49c4:	xor	r12d, r12d
0x49c7:	mov	byte ptr [rsp + 0x7c], 0
0x49cc:	jmp	0x47ab


0x4791:	mov	byte ptr [r14], 0x22
0x4795:	mov	byte ptr [rsp + 0xe], 1
0x479a:	xor	r12d, r12d
0x479d:	mov	byte ptr [rsp + 0x7c], 0
0x47a2:	mov	qword ptr [rsp + 0x50], 0
0x47ab:	lea	rax, [rip + 0x6a71]
0x47b2:	mov	byte ptr [rsp + 0xf], 0
0x47b7:	mov	byte ptr [rsp + 0xd], 1
0x47bc:	mov	qword ptr [rsp + 0x18], 1
0x47c5:	mov	r15d, 1
0x47cb:	mov	qword ptr [rsp + 0x48], rax
0x47d0:	jmp	0x3b93


0x47ab:	lea	rax, [rip + 0x6a71]
0x47b2:	mov	byte ptr [rsp + 0xf], 0
0x47b7:	mov	byte ptr [rsp + 0xd], 1
0x47bc:	mov	qword ptr [rsp + 0x18], 1
0x47c5:	mov	r15d, 1
0x47cb:	mov	qword ptr [rsp + 0x48], rax
0x47d0:	jmp	0x3b93


0x47d5:	lea	rax, [rip + 0x6a47]
0x47dc:	mov	byte ptr [rsp + 0xe], 1
0x47e1:	mov	byte ptr [rsp + 0x7c], 0
0x47e6:	xor	r12d, r12d
0x47e9:	mov	qword ptr [rsp + 0x50], 0
0x47f2:	mov	byte ptr [rsp + 0xf], 1
0x47f7:	mov	byte ptr [rsp + 0xd], 1
0x47fc:	mov	qword ptr [rsp + 0x18], 1
0x4805:	xor	r15d, r15d
0x4808:	mov	qword ptr [rsp + 0x48], rax
0x480d:	mov	dword ptr [rsp + 8], 5
0x4815:	jmp	0x3b93


0x481a:	mov	byte ptr [rsp + 0xe], 1
0x481f:	mov	byte ptr [rsp + 0x7c], 0
0x4824:	xor	r12d, r12d
0x4827:	mov	qword ptr [rsp + 0x50], 0
0x4830:	mov	byte ptr [rsp + 0xf], 0
0x4835:	xor	r15d, r15d
0x4838:	mov	byte ptr [rsp + 0xd], 1
0x483d:	mov	qword ptr [rsp + 0x18], 0
0x4846:	mov	qword ptr [rsp + 0x48], 0
0x484f:	jmp	0x3b93


0x4854:	cmp	dword ptr [rsp + 8], 0xa
0x4859:	je	0x48b1


0x48b1:	xor	r15d, r15d
0x48b4:	test	ebx, ebx
0x48b6:	je	0x4a7d


0x485b:	lea	rsi, [rip + 0x69c5]
0x4862:	xor	edi, edi
0x4864:	mov	edx, 5
0x4869:	call	0x19f0


0x4a7d:	mov	rdx, qword ptr [rsp + 0x68]
0x4a82:	movzx	eax, byte ptr [rdx]
0x4a85:	test	al, al
0x4a87:	je	0x48bc


0x48bc:	test	ebx, ebx
0x48be:	mov	rbx, qword ptr [rsp + 0x60]
0x48c3:	setne	byte ptr [rsp + 0xf]
0x48c8:	xor	r12d, r12d
0x48cb:	mov	rdi, rbx
0x48ce:	call	0x1a10


0x4a99:	add	r15, 1
0x4a9d:	movzx	eax, byte ptr [rdx + r15]
0x4aa2:	test	al, al
0x4aa4:	jne	0x4a90


0x4a95:	mov	byte ptr [r14 + r15], al
0x4a99:	add	r15, 1
0x4a9d:	movzx	eax, byte ptr [rdx + r15]
0x4aa2:	test	al, al
0x4aa4:	jne	0x4a90


0x4aa6:	jmp	0x48bc


0x4a90:	cmp	r13, r15
0x4a93:	jbe	0x4a99


0x48d3:	mov	qword ptr [rsp + 0x48], rbx
0x48d8:	mov	qword ptr [rsp + 0x18], rax
0x48dd:	mov	byte ptr [rsp + 0xe], 1
0x48e2:	mov	byte ptr [rsp + 0x7c], 0
0x48e7:	mov	qword ptr [rsp + 0x50], 0
0x48f0:	mov	byte ptr [rsp + 0xd], 1
0x48f5:	jmp	0x3b93


0x486e:	mov	rcx, rax
0x4871:	mov	qword ptr [rsp + 0x68], rax
0x4876:	lea	rax, [rip + 0x69aa]
0x487d:	cmp	rcx, rax
0x4880:	je	0x4c1e


0x4c1e:	mov	esi, dword ptr [rsp + 8]
0x4c22:	mov	rdi, rcx
0x4c25:	call	0x39d0


0x4886:	lea	rsi, [rip + 0x6998]
0x488d:	xor	edi, edi
0x488f:	mov	edx, 5
0x4894:	call	0x19f0


0x4899:	mov	rcx, rax
0x489c:	mov	qword ptr [rsp + 0x60], rax
0x48a1:	lea	rax, [rip + 0x697d]
0x48a8:	cmp	rcx, rax
0x48ab:	je	0x4c34


0x4c34:	mov	esi, dword ptr [rsp + 8]
0x4c38:	mov	rdi, rcx
0x4c3b:	call	0x39d0


0x4c40:	mov	qword ptr [rsp + 0x60], rax
0x4c45:	jmp	0x48b1


0x4c2a:	mov	qword ptr [rsp + 0x68], rax
0x4c2f:	jmp	0x4886


0x48fa:	mov	byte ptr [rsp + 0xe], 1
0x48ff:	mov	byte ptr [rsp + 0x7c], 0
0x4904:	xor	r12d, r12d
0x4907:	mov	qword ptr [rsp + 0x50], 0
0x4910:	mov	byte ptr [rsp + 0xf], 0
0x4915:	xor	r15d, r15d
0x4918:	mov	byte ptr [rsp + 0xd], 0
0x491d:	mov	qword ptr [rsp + 0x18], 0
0x4926:	mov	qword ptr [rsp + 0x48], 0
0x492f:	jmp	0x3b93


0x4934:	mov	byte ptr [rsp + 0xe], 1
0x4939:	mov	byte ptr [rsp + 0x7c], 0
0x493e:	xor	r12d, r12d
0x4941:	mov	qword ptr [rsp + 0x50], 0
0x494a:	mov	byte ptr [rsp + 0xf], 1
0x494f:	mov	byte ptr [rsp + 0xd], 1
0x4954:	jmp	0x3b73


0x3b73:	lea	rax, [rip + 0x76ab]
0x3b7a:	mov	qword ptr [rsp + 0x18], 1
0x3b83:	xor	r15d, r15d
0x3b86:	mov	dword ptr [rsp + 8], 2
0x3b8e:	mov	qword ptr [rsp + 0x48], rax
0x3b93:	xor	r11d, r11d
0x3b96:	mov	rax, rbp
0x3b99:	mov	r8d, r12d
0x3b9c:	mov	rbp, r11
0x3b9f:	mov	r11, rax
0x3ba2:	nop	word ptr [rax + rax]
0x3ba8:	cmp	r11, rbp
0x3bab:	setne	r12b
0x3baf:	cmp	r11, -1
0x3bb3:	jne	0x3bc2


0x4b28:	test	ebx, ebx
0x4b2a:	je	0x4cb8


0x4cb8:	mov	byte ptr [rsp + 0xd], 0
0x4cbd:	jmp	0x4731


0x4b30:	lea	rax, [rip + 0x66ee]
0x4b37:	mov	byte ptr [rsp + 0xe], 1
0x4b3c:	mov	byte ptr [rsp + 0x7c], 0
0x4b41:	xor	r12d, r12d
0x4b44:	mov	qword ptr [rsp + 0x50], 0
0x4b4d:	mov	byte ptr [rsp + 0xf], 1
0x4b52:	mov	byte ptr [rsp + 0xd], 0
0x4b57:	mov	qword ptr [rsp + 0x18], 1
0x4b60:	xor	r15d, r15d
0x4b63:	mov	qword ptr [rsp + 0x48], rax
0x4b68:	jmp	0x3b93


0x4731:	test	r13, r13
0x4734:	jne	0x4cca


0x4cf4:	nop	
0x4cf6:	nop	word ptr cs:[rax + rax]


0x4eab:	nop	dword ptr [rax + rax]


0x4ee6:	nop	word ptr cs:[rax + rax]


0x4f01:	nop	dword ptr [rax + rax]
0x4f06:	nop	word ptr cs:[rax + rax]


0x4f21:	nop	dword ptr [rax + rax]
0x4f26:	nop	word ptr cs:[rax + rax]


0x4f65:	nop	
0x4f66:	nop	word ptr cs:[rax + rax]


0x4f85:	nop	
0x4f86:	nop	word ptr cs:[rax + rax]


0x5034:	nop	
0x5036:	nop	word ptr cs:[rax + rax]


0x5123:	nop	dword ptr [rax]
0x5126:	nop	word ptr cs:[rax + rax]


0x513a:	nop	word ptr [rax + rax]


0x51d3:	nop	dword ptr [rax]
0x51d6:	nop	word ptr cs:[rax + rax]


0x51f3:	nop	dword ptr [rax]
0x51f6:	nop	word ptr cs:[rax + rax]


0x520c:	nop	dword ptr [rax]


0x5228:	nop	dword ptr [rax + rax]


0x5244:	nop	
0x5246:	nop	word ptr cs:[rax + rax]


0x52de:	nop	


0x536a:	nop	word ptr [rax + rax]


0x537c:	nop	dword ptr [rax]


0x538f:	nop	


0x5428:	nop	dword ptr [rax + rax]


0x5451:	nop	dword ptr [rax + rax]
0x5456:	nop	word ptr cs:[rax + rax]


0x546a:	nop	word ptr [rax + rax]


0x54fe:	nop	


0x5591:	nop	dword ptr [rax + rax]
0x5596:	nop	word ptr cs:[rax + rax]


0x55ac:	nop	dword ptr [rax]


0x55c7:	nop	word ptr [rax + rax]


0x55e3:	nop	dword ptr [rax]
0x55e6:	nop	word ptr cs:[rax + rax]


0x55fc:	nop	dword ptr [rax]


0x5614:	nop	
0x5616:	nop	word ptr cs:[rax + rax]


0x5633:	nop	dword ptr [rax]
0x5636:	nop	word ptr cs:[rax + rax]


0x5658:	nop	dword ptr [rax + rax]


0x56d1:	nop	word ptr cs:[rax + rax]
0x56db:	nop	dword ptr [rax + rax]


0x5af7:	nop	word ptr [rax + rax]


0x5b98:	nop	dword ptr [rax + rax]


0x5c75:	nop	
0x5c76:	nop	word ptr cs:[rax + rax]


0x5d1a:	nop	word ptr [rax + rax]


0x5d44:	nop	
0x5d46:	nop	word ptr cs:[rax + rax]


0x5d52:	nop	dword ptr [rax]
0x5d56:	nop	word ptr cs:[rax + rax]


0x5d96:	nop	word ptr cs:[rax + rax]


0x5dc4:	nop	
0x5dc6:	nop	word ptr cs:[rax + rax]


0x5e52:	nop	dword ptr [rax]
0x5e56:	nop	word ptr cs:[rax + rax]


0x5eaa:	nop	word ptr [rax + rax]


0x5ec7:	nop	word ptr [rax + rax]


0x5efe:	nop	


0x5f28:	nop	dword ptr [rax + rax]


0x5f43:	nop	word ptr cs:[rax + rax]
0x5f4d:	nop	dword ptr [rax]


0x5f85:	nop	word ptr cs:[rax + rax]
0x5f8f:	nop	


0x5fdf:	nop	


0x6009:	nop	dword ptr [rax]


0x61e8:	mov	rax, rbx
0x61eb:	mul	rsi
0x61ee:	jo	0x63e1


0x63e1:	or	rax, 0xffffffffffffffff
0x63e5:	mov	r8d, 1
0x63eb:	jmp	0x61f7


0x61f4:	xor	r8d, r8d
0x61f7:	mul	rsi
0x61fa:	jo	0x63d2


0x61f7:	mul	rsi
0x61fa:	jo	0x63d2


0x63d2:	mov	r8d, 1
0x63d8:	or	rbx, 0xffffffffffffffff
0x63dc:	jmp	0x6203


0x6200:	mov	rbx, rax
0x6203:	or	ebp, r8d
0x6206:	nop	word ptr cs:[rax + rax]
0x6210:	movsxd	rdi, edi
0x6213:	mov	eax, ebp
0x6215:	add	rcx, rdi
0x6218:	or	eax, 2
0x621b:	mov	qword ptr [r15], rcx
0x621e:	cmp	byte ptr [rcx], 0
0x6221:	mov	qword ptr [r14], rbx
0x6224:	cmovne	ebp, eax
0x6227:	jmp	0x60ed


0x6203:	or	ebp, r8d
0x6206:	nop	word ptr cs:[rax + rax]
0x6210:	movsxd	rdi, edi
0x6213:	mov	eax, ebp
0x6215:	add	rcx, rdi
0x6218:	or	eax, 2
0x621b:	mov	qword ptr [r15], rcx
0x621e:	cmp	byte ptr [rcx], 0
0x6221:	mov	qword ptr [r14], rbx
0x6224:	cmovne	ebp, eax
0x6227:	jmp	0x60ed


0x6237:	mov	edx, 2
0x623c:	mov	rax, rdx
0x623f:	mul	rbx
0x6242:	jo	0x62de


0x62de:	mov	ebp, 1
0x62e3:	or	rbx, 0xffffffffffffffff
0x62e7:	jmp	0x6210


0x6248:	add	rbx, rbx
0x624b:	jmp	0x6210


0x6210:	movsxd	rdi, edi
0x6213:	mov	eax, ebp
0x6215:	add	rcx, rdi
0x6218:	or	eax, 2
0x621b:	mov	qword ptr [r15], rcx
0x621e:	cmp	byte ptr [rcx], 0
0x6221:	mov	qword ptr [r14], rbx
0x6224:	cmovne	ebp, eax
0x6227:	jmp	0x60ed


0x624d:	mov	edx, 0x200
0x6252:	mov	rax, rdx
0x6255:	mul	rbx
0x6258:	jo	0x62de


0x625e:	shl	rbx, 9
0x6262:	jmp	0x6210


0x6264:	mov	r8d, 7
0x626a:	xor	r9d, r9d
0x626d:	nop	dword ptr [rax]
0x6270:	mov	rax, rbx
0x6273:	mul	rsi
0x6276:	mov	rbx, rax
0x6279:	jo	0x640e


0x640e:	mov	r9d, 1
0x6414:	or	rbx, 0xffffffffffffffff
0x6418:	jmp	0x627f


0x627f:	sub	r8d, 1
0x6283:	jne	0x6270


0x6285:	or	ebp, r9d
0x6288:	jmp	0x6210


0x6270:	mov	rax, rbx
0x6273:	mul	rsi
0x6276:	mov	rbx, rax
0x6279:	jo	0x640e


0x628a:	mov	r8d, 8
0x6290:	xor	r9d, r9d
0x6293:	nop	dword ptr [rax + rax]
0x6298:	mov	rax, rbx
0x629b:	mul	rsi
0x629e:	mov	rbx, rax
0x62a1:	jo	0x63f0


0x63f0:	mov	r9d, 1
0x63f6:	or	rbx, 0xffffffffffffffff
0x63fa:	jmp	0x62a7


0x62a7:	sub	r8d, 1
0x62ab:	jne	0x6298


0x62ad:	jmp	0x6285


0x6298:	mov	rax, rbx
0x629b:	mul	rsi
0x629e:	mov	rbx, rax
0x62a1:	jo	0x63f0


0x62af:	mov	r8d, 4
0x62b5:	xor	r9d, r9d
0x62b8:	mov	rax, rbx
0x62bb:	mul	rsi
0x62be:	mov	rbx, rax
0x62c1:	jo	0x63c3


0x63c3:	mov	r9d, 1
0x63c9:	or	rbx, 0xffffffffffffffff
0x63cd:	jmp	0x62c7


0x62c7:	sub	r8d, 1
0x62cb:	jne	0x62b8


0x62cd:	jmp	0x6285


0x62b8:	mov	rax, rbx
0x62bb:	mul	rsi
0x62be:	mov	rbx, rax
0x62c1:	jo	0x63c3


0x62cf:	mov	rax, rbx
0x62d2:	mul	rsi
0x62d5:	mov	rbx, rax
0x62d8:	jno	0x6210


0x63ff:	mov	r9d, 1
0x6405:	or	rbx, 0xffffffffffffffff
0x6409:	jmp	0x6308


0x6308:	sub	r8d, 1
0x630c:	jne	0x62f9


0x630e:	jmp	0x6285


0x62f9:	mov	rax, rbx
0x62fc:	mul	rsi
0x62ff:	mov	rbx, rax
0x6302:	jo	0x63ff


0x6313:	mov	r8d, 6
0x6319:	xor	r9d, r9d
0x631c:	mov	rax, rbx
0x631f:	mul	rsi
0x6322:	mov	rbx, rax
0x6325:	jo	0x63b4


0x63b4:	mov	r9d, 1
0x63ba:	or	rbx, 0xffffffffffffffff
0x63be:	jmp	0x632b


0x632b:	sub	r8d, 1
0x632f:	jne	0x631c


0x6331:	jmp	0x6285


0x631c:	mov	rax, rbx
0x631f:	mul	rsi
0x6322:	mov	rbx, rax
0x6325:	jo	0x63b4


0x6336:	mov	edx, 0x400
0x633b:	mov	rax, rdx
0x633e:	mul	rbx
0x6341:	jo	0x62de


0x6343:	shl	rbx, 0xa
0x6347:	jmp	0x6210


0x634c:	mov	rax, rbx
0x634f:	mul	rsi
0x6352:	jo	0x641d


0x641d:	mov	r8d, 1
0x6423:	or	rax, 0xffffffffffffffff
0x6427:	jmp	0x635b


0x6358:	xor	r8d, r8d
0x635b:	mul	rsi
0x635e:	jno	0x61f7


0x635b:	mul	rsi
0x635e:	jno	0x61f7


0x6364:	mov	r8d, 1
0x636a:	or	rax, 0xffffffffffffffff
0x636e:	jmp	0x61f7


0x642c:	nop	dword ptr [rax]


0x644a:	nop	word ptr [rax + rax]


0x645d:	nop	dword ptr [rax]


0x646c:	nop	dword ptr [rax]


0x647a:	nop	word ptr [rax + rax]


0x64a6:	nop	word ptr cs:[rax + rax]


0x6675:	nop	
0x6676:	nop	word ptr cs:[rax + rax]


0x6785:	nop	
0x6786:	nop	word ptr cs:[rax + rax]


0x681a:	nop	word ptr [rax + rax]


0x6862:	nop	dword ptr [rax]
0x6866:	nop	word ptr cs:[rax + rax]


0x68a9:	nop	dword ptr [rax]


0x69dc:	nop	dword ptr [rax]


0x6a4a:	nop	word ptr [rax + rax]


0x6ab6:	nop	word ptr cs:[rax + rax]


0x6b1c:	nop	dword ptr [rax]


0x6b8b:	nop	dword ptr [rax + rax]


0x6bf3:	nop	dword ptr [rax]
0x6bf6:	nop	word ptr cs:[rax + rax]


0x6c3a:	nop	word ptr [rax + rax]


0x6eba:	nop	word ptr [rax + rax]


0x6f6f:	nop	


0x7028:	nop	dword ptr [rax + rax]


0x7a01:	nop	dword ptr [rax + rax]
0x7a06:	nop	word ptr cs:[rax + rax]


0x7dba:	nop	word ptr [rax + rax]


0x7f42:	nop	dword ptr [rax]
0x7f46:	nop	word ptr cs:[rax + rax]


0x86c8:	nop	dword ptr [rax + rax]


0x86f9:	nop	dword ptr [rax]


0x884e:	nop	


0x88d3:	nop	word ptr cs:[rax + rax]
0x88dd:	nop	dword ptr [rax]


0x895d:	nop	dword ptr [rax]


0x89fa:	nop	word ptr [rax + rax]


0x8a6e:	nop	


0x8b63:	nop	dword ptr [rax]
0x8b66:	nop	word ptr cs:[rax + rax]


0x8b87:	nop	word ptr [rax + rax]


0x8bb2:	nop	dword ptr [rax]
0x8bb6:	nop	word ptr cs:[rax + rax]


0x8cde:	nop	


0x8d57:	nop	word ptr [rax + rax]


0x8ea5:	nop	
0x8ea6:	nop	word ptr cs:[rax + rax]


0x8eb5:	nop	
0x8eb6:	nop	word ptr cs:[rax + rax]


0x8ec5:	nop	
0x8ec6:	nop	word ptr cs:[rax + rax]


0x8f19:	nop	dword ptr [rax]


0x8f78:	nop	dword ptr [rax + rax]


0x90c7:	nop	word ptr [rax + rax]


0x912b:	nop	dword ptr [rax + rax]


0x9171:	nop	dword ptr [rax + rax]
0x9176:	nop	word ptr cs:[rax + rax]


0x91f2:	nop	dword ptr [rax]
0x91f6:	nop	word ptr cs:[rax + rax]


0x9265:	nop	
0x9266:	nop	word ptr cs:[rax + rax]


0x92da:	nop	word ptr [rax + rax]


0x9311:	nop	dword ptr [rax + rax]
0x9316:	nop	word ptr cs:[rax + rax]


0x94f4:	nop	
0x94f6:	nop	word ptr cs:[rax + rax]


0x9666:	nop	word ptr cs:[rax + rax]


0x98ae:	nop	


0x9b34:	nop	
0x9b36:	nop	word ptr cs:[rax + rax]


0x9b99:	nop	dword ptr [rax]


0x9da3:	nop	word ptr cs:[rax + rax]
0x9dad:	nop	dword ptr [rax]


0x9dcb:	nop	dword ptr [rax + rax]


0x9dd5:	nop	
0x9dd6:	nop	word ptr cs:[rax + rax]


0x9e15:	nop	
0x9e16:	nop	word ptr cs:[rax + rax]


0x9e5e:	nop	


0x9e9c:	nop	dword ptr [rax]


0x9f0e:	nop	


0x9fcf:	nop	


0xa04b:	nop	dword ptr [rax + rax]


0xa2ce:	nop	


0xa367:	nop	word ptr [rax + rax]


0xa37e:	nop	


0xa3e5:	nop	
0xa3e6:	nop	word ptr cs:[rax + rax]


0xa3f2:	nop	word ptr cs:[rax + rax]
0xa3fc:	nop	dword ptr [rax]


0x3d80:	xor	r10d, r10d
0x3d83:	mov	eax, dword ptr [rsp + 8]
0x3d87:	cmp	eax, 2
0x3d8a:	je	0x4348


0x3db0:	xor	r10d, r10d
0x3db3:	cmp	dword ptr [rsp + 8], 2
0x3db8:	je	0x42c0


0x3dd8:	mov	edx, 9
0x3ddd:	mov	ebx, 0x74
0x3de2:	cmp	dword ptr [rsp + 8], 2
0x3de7:	sete	al
0x3dea:	and	al, byte ptr [rsp + 0xf]
0x3dee:	jne	0x3f3e


0x3e18:	mov	edx, 8
0x3e1d:	mov	ebx, 0x62
0x3e22:	jmp	0x3df4


0x3e28:	cmp	dword ptr [rsp + 8], 2
0x3e2d:	je	0x4200


0x3ed0:	cmp	byte ptr [rsp + 0xd], 0
0x3ed5:	jne	0x40a3


0x3ef8:	cmp	dword ptr [rsp + 8], 2
0x3efd:	sete	dl
0x3f00:	xor	eax, eax
0x3f02:	jmp	0x3ce8


0x3f10:	mov	edx, 7
0x3f15:	mov	ebx, 0x61
0x3f1a:	jmp	0x3df4


0x3f20:	cmp	dword ptr [rsp + 8], 2
0x3f25:	sete	dl
0x3f28:	test	rbp, rbp
0x3f2b:	jne	0x3cdc


0x3f50:	cmp	dword ptr [rsp + 8], 2
0x3f55:	sete	dl
0x3f58:	xor	r12d, r12d
0x3f5b:	jmp	0x3f31


0x3f60:	cmp	dword ptr [rsp + 8], 2
0x3f65:	mov	ebx, 0x20
0x3f6a:	sete	dl
0x3f6d:	jmp	0x3f31


0x3f70:	mov	edx, 0xd
0x3f75:	mov	ebx, 0x72
0x3f7a:	jmp	0x3de2


0x3f80:	mov	edx, 0xc
0x3f85:	mov	ebx, 0x66
0x3f8a:	jmp	0x3df4


0x3f90:	mov	edx, 0xb
0x3f95:	mov	ebx, 0x76
0x3f9a:	jmp	0x3df4


0x3fa0:	mov	edx, 0xa
0x3fa5:	mov	ebx, 0x6e
0x3faa:	jmp	0x3de2


0x4040:	xor	r10d, r10d
0x4043:	cmp	byte ptr [rsp + 0xd], 0
0x4048:	jne	0x3e3e


0x4060:	mov	edx, 0xc
0x4065:	xor	r10d, r10d
0x4068:	mov	ebx, 0x66
0x406d:	jmp	0x3df4


0x4078:	mov	edx, 0xa
0x407d:	xor	r10d, r10d
0x4080:	mov	ebx, 0x6e
0x4085:	jmp	0x3de2


0x4090:	mov	ebx, 0x61
0x4095:	jmp	0x3e60


0x40a0:	xor	r10d, r10d
0x40a3:	cmp	dword ptr [rsp + 8], 2
0x40a8:	sete	dl
0x40ab:	cmp	byte ptr [rsp + 0xf], 0
0x40b0:	jne	0x4c4a


0x4140:	cmp	dword ptr [rsp + 8], 2
0x4145:	mov	r12d, r10d
0x4148:	sete	dl
0x414b:	xor	r10d, r10d
0x414e:	xor	eax, eax
0x4150:	jmp	0x3ce8


0x4158:	cmp	dword ptr [rsp + 8], 2
0x415d:	sete	dl
0x4160:	xor	r10d, r10d
0x4163:	jmp	0x3f28


0x4170:	cmp	dword ptr [rsp + 8], 2
0x4175:	sete	dl
0x4178:	xor	r10d, r10d
0x417b:	xor	r12d, r12d
0x417e:	jmp	0x3f31


0x4188:	cmp	dword ptr [rsp + 8], 2
0x418d:	mov	r12d, r10d
0x4190:	mov	ebx, 0x20
0x4195:	sete	dl
0x4198:	xor	r10d, r10d
0x419b:	jmp	0x3f31


0x41b8:	mov	ebx, 0x76
0x41bd:	jmp	0x3e60


0x41c8:	mov	edx, 9
0x41cd:	xor	r10d, r10d
0x41d0:	mov	ebx, 0x74
0x41d5:	jmp	0x3de2


0x41e0:	mov	ebx, 0x62
0x41e5:	jmp	0x3e60


0x4780:	test	ebx, ebx
0x4782:	jne	0x4b7d


0x62f0:	mov	r8d, 5
0x62f6:	xor	r9d, r9d
0x62f9:	mov	rax, rbx
0x62fc:	mul	rsi
0x62ff:	mov	rbx, rax
0x6302:	jo	0x63ff


0x1dd5:	nop	dword ptr [rax]


0x1e3c:	nop	dword ptr [rax]


0x1e6d:	nop	dword ptr [rax]


0x1e9b:	nop	dword ptr [rax + rax]


0x2296:	nop	word ptr cs:[rax + rax]


0x22e7:	nop	word ptr [rax + rax]


0x2331:	nop	dword ptr [rax]


0x2823:	nop	dword ptr [rax + rax]


0x2839:	nop	dword ptr [rax]


0x28df:	nop	


0x293f:	nop	


0x29c7:	nop	word ptr [rax + rax]


0x2a1c:	nop	dword ptr [rax]


0x2bf2:	nop	word ptr [rax + rax]


0x2c23:	nop	dword ptr [rax + rax]


0x2c83:	nop	dword ptr [rax + rax]


0x2d5f:	nop	


0x2da8:	nop	dword ptr [rax + rax]


0x2ded:	nop	dword ptr [rax]


0x2e7c:	nop	dword ptr [rax]


0x2f38:	nop	dword ptr [rax + rax]


0x3001:	nop	dword ptr [rax]


0x306e:	nop	


0x30e2:	nop	word ptr [rax + rax]


0x3141:	nop	dword ptr [rax]


0x31c5:	nop	dword ptr [rax]


0x3208:	nop	dword ptr [rax + rax]


0x3234:	nop	dword ptr [rax]


0x3257:	nop	word ptr [rax + rax]


0x3273:	nop	dword ptr [rax + rax]


0x328e:	nop	


0x32db:	nop	dword ptr [rax + rax]


0x3303:	nop	dword ptr [rax + rax]


0x3315:	nop	dword ptr [rax]


0x3387:	nop	word ptr [rax + rax]


0x33c2:	nop	word ptr [rax + rax]


0x33e3:	nop	dword ptr [rax + rax]


0x3419:	nop	dword ptr [rax]


0x3445:	nop	dword ptr [rax]


0x345e:	nop	


0x347c:	nop	dword ptr [rax]


0x34a5:	nop	dword ptr [rax]


0x34b3:	nop	dword ptr [rax + rax]


0x350a:	nop	word ptr [rax + rax]


0x3577:	nop	word ptr [rax + rax]


0x35e9:	nop	dword ptr [rax]


0x3739:	nop	dword ptr [rax]


0x37cb:	nop	dword ptr [rax + rax]


0x37e2:	nop	word ptr [rax + rax]


0x3a0c:	nop	dword ptr [rax]


0x3a5d:	nop	dword ptr [rax]


0x3c88:	nop	dword ptr [rax + rax]


0x3d77:	nop	word ptr [rax + rax]


0x3dae:	nop	


0x3dd1:	nop	dword ptr [rax]


0x3e12:	nop	word ptr [rax + rax]


0x3e24:	nop	dword ptr [rax]


0x3ec8:	nop	dword ptr [rax + rax]


0x3ef1:	nop	dword ptr [rax]


0x3f07:	nop	word ptr [rax + rax]


0x3f1f:	nop	


0x3f4e:	nop	


0x3f5d:	nop	dword ptr [rax]


0x3f6f:	nop	


0x3f7f:	nop	


0x3f8f:	nop	


0x3f9f:	nop	


0x3faf:	nop	


0x401c:	nop	dword ptr [rax]


0x403c:	nop	dword ptr [rax]


0x404e:	nop	


0x405f:	nop	


0x4072:	nop	word ptr [rax + rax]


0x408a:	nop	word ptr [rax + rax]


0x409a:	nop	word ptr [rax + rax]


0x413b:	nop	dword ptr [rax + rax]


0x4155:	nop	dword ptr [rax]


0x4168:	nop	dword ptr [rax + rax]


0x4183:	nop	dword ptr [rax + rax]


0x41b2:	nop	word ptr [rax + rax]


0x41c2:	nop	word ptr [rax + rax]


0x41da:	nop	word ptr [rax + rax]


0x41ea:	nop	word ptr [rax + rax]


0x41f8:	nop	dword ptr [rax + rax]


0x421f:	nop	


0x42b9:	nop	dword ptr [rax]


0x4302:	nop	word ptr [rax + rax]


0x4328:	nop	dword ptr [rax + rax]


0x4341:	nop	dword ptr [rax]


0x4362:	nop	word ptr [rax + rax]


0x44c8:	nop	dword ptr [rax + rax]


0x45db:	nop	dword ptr [rax + rax]


0x45fe:	nop	


0x46c5:	nop	dword ptr [rax]


0x477d:	nop	dword ptr [rax]


0x4986:	nop	word ptr cs:[rax + rax]


0x4a19:	nop	dword ptr [rax]


0x4a8d:	nop	dword ptr [rax]


0x4b6d:	nop	dword ptr [rax]


0x4e7b:	nop	dword ptr [rax + rax]


0x56c5:	nop	dword ptr [rax]


0x5786:	nop	word ptr cs:[rax + rax]


0x5815:	nop	dword ptr [rax]


0x5836:	nop	word ptr cs:[rax + rax]


0x5895:	nop	dword ptr [rax]


0x58d1:	nop	dword ptr [rax]


0x5918:	nop	dword ptr [rax + rax]


0x5967:	nop	word ptr [rax + rax]


0x59c4:	nop	dword ptr [rax]


0x59f2:	nop	word ptr [rax + rax]


0x5aa6:	nop	word ptr cs:[rax + rax]


0x5b09:	nop	dword ptr [rax]


0x5d82:	nop	word ptr [rax + rax]


0x5e09:	nop	dword ptr [rax]


0x5e34:	nop	dword ptr [rax]


0x5e8d:	nop	dword ptr [rax]


0x5fa9:	nop	dword ptr [rax]


0x5fbf:	nop	


0x5ff9:	nop	dword ptr [rax]


0x6076:	nop	word ptr cs:[rax + rax]


0x60d1:	nop	dword ptr [rax]


0x60e2:	nop	word ptr [rax + rax]


0x6112:	nop	word ptr [rax + rax]


0x611c:	nop	dword ptr [rax]


0x61bb:	nop	dword ptr [rax + rax]


0x62ec:	nop	dword ptr [rax]


0x6373:	nop	dword ptr [rax + rax]


0x643e:	nop	


0x649d:	nop	dword ptr [rax]


0x652d:	nop	dword ptr [rax]


0x658c:	nop	dword ptr [rax]


0x65eb:	nop	dword ptr [rax + rax]


0x65fc:	nop	dword ptr [rax]


0x661e:	nop	


0x6629:	nop	dword ptr [rax]


0x6642:	nop	word ptr [rax + rax]


0x6652:	nop	word ptr [rax + rax]


0x6719:	nop	dword ptr [rax]


0x674d:	nop	dword ptr [rax]


0x6777:	nop	word ptr [rax + rax]


0x6859:	nop	dword ptr [rax]


0x6876:	nop	word ptr cs:[rax + rax]


0x689a:	nop	word ptr [rax + rax]


0x6907:	nop	word ptr [rax + rax]


0x6968:	nop	dword ptr [rax + rax]


0x6a17:	nop	word ptr [rax + rax]


0x6a3c:	nop	dword ptr [rax]


0x6a7f:	nop	


0x6a9e:	nop	


0x6afa:	nop	word ptr [rax + rax]


0x6b11:	nop	dword ptr [rax]


0x6b51:	nop	dword ptr [rax]


0x6b73:	nop	dword ptr [rax + rax]


0x6bc8:	nop	dword ptr [rax + rax]


0x6c28:	nop	dword ptr [rax + rax]


0x6cea:	nop	word ptr [rax + rax]


0x6d2d:	nop	dword ptr [rax]


0x6dc8:	nop	dword ptr [rax + rax]


0x6def:	nop	


0x6dff:	nop	


0x6e45:	nop	dword ptr [rax]


0x6e68:	nop	dword ptr [rax + rax]


0x6f3b:	nop	dword ptr [rax + rax]


0x6f62:	nop	word ptr [rax + rax]


0x6fca:	nop	word ptr [rax + rax]


0x6ffe:	nop	


0x7122:	nop	word ptr [rax + rax]


0x72db:	nop	dword ptr [rax + rax]


0x7333:	nop	dword ptr [rax + rax]


0x7355:	nop	dword ptr [rax]


0x7387:	nop	word ptr [rax + rax]


0x73cc:	nop	dword ptr [rax]


0x73f3:	nop	dword ptr [rax + rax]


0x7402:	nop	word ptr [rax + rax]


0x741d:	nop	dword ptr [rax]


0x743b:	nop	dword ptr [rax + rax]


0x7474:	nop	dword ptr [rax]


0x748f:	nop	


0x749a:	nop	word ptr [rax + rax]


0x75b2:	nop	word ptr [rax + rax]


0x75ca:	nop	word ptr [rax + rax]


0x761d:	nop	dword ptr [rax]


0x7669:	nop	dword ptr [rax]


0x767a:	nop	word ptr [rax + rax]


0x76d1:	nop	dword ptr [rax]


0x77a8:	nop	dword ptr [rax + rax]


0x77fd:	nop	dword ptr [rax]


0x7825:	nop	dword ptr [rax]


0x7855:	nop	dword ptr [rax]


0x786f:	nop	


0x787e:	nop	


0x798a:	nop	word ptr [rax + rax]


0x7b55:	nop	dword ptr [rax]


0x7bfe:	nop	


0x7c1a:	nop	word ptr [rax + rax]


0x7cf9:	nop	dword ptr [rax]


0x7d3e:	nop	


0x7d5b:	nop	dword ptr [rax + rax]


0x7d88:	nop	dword ptr [rax + rax]


0x7da4:	nop	dword ptr [rax]


0x7ddb:	nop	dword ptr [rax + rax]


0x7e8d:	nop	dword ptr [rax]


0x7e97:	nop	word ptr [rax + rax]


0x7ec6:	nop	word ptr cs:[rax + rax]


0x7ee9:	nop	dword ptr [rax]


0x7f22:	nop	word ptr [rax + rax]


0x7fa3:	nop	dword ptr [rax + rax]


0x807c:	nop	dword ptr [rax]


0x80f6:	nop	word ptr cs:[rax + rax]


0x8125:	nop	dword ptr [rax]


0x8144:	nop	dword ptr [rax]


0x81ba:	nop	word ptr [rax + rax]


0x81cf:	nop	


0x81ea:	nop	word ptr [rax + rax]


0x82f2:	nop	word ptr [rax + rax]


0x8344:	nop	dword ptr [rax]


0x8394:	nop	dword ptr [rax]


0x83df:	nop	


0x83f1:	nop	dword ptr [rax]


0x8418:	nop	dword ptr [rax + rax]


0x84d4:	nop	dword ptr [rax]


0x8549:	nop	dword ptr [rax]


0x8586:	nop	word ptr cs:[rax + rax]


0x86dc:	nop	dword ptr [rax]


0x879d:	nop	dword ptr [rax]


0x87ad:	nop	dword ptr [rax]


0x87bb:	nop	dword ptr [rax + rax]


0x8802:	nop	word ptr [rax + rax]


0x8815:	nop	dword ptr [rax]


0x8914:	nop	dword ptr [rax]


0x8931:	nop	dword ptr [rax]


0x8942:	nop	word ptr [rax + rax]


0x899c:	nop	dword ptr [rax]


0x89b5:	nop	dword ptr [rax]


0x89c7:	nop	word ptr [rax + rax]


0x8a44:	nop	dword ptr [rax]


0x8aaa:	nop	word ptr [rax + rax]


0x8af1:	nop	dword ptr [rax]


0x8b2e:	nop	


0x8c1b:	nop	dword ptr [rax + rax]


0x8c7a:	nop	word ptr [rax + rax]


0x8cb9:	nop	dword ptr [rax]


0x8cc9:	nop	dword ptr [rax]


0x8d4e:	nop	


0x8da1:	nop	dword ptr [rax]


0x8e6c:	nop	dword ptr [rax]


0x8e7a:	nop	word ptr [rax + rax]


0x8ede:	nop	


0x8ef4:	nop	dword ptr [rax]


0x8f47:	nop	word ptr [rax + rax]


0x8fa7:	nop	word ptr [rax + rax]


0x8fc4:	nop	dword ptr [rax]


0x907b:	nop	dword ptr [rax + rax]


0x90ec:	nop	dword ptr [rax]


0x9117:	nop	word ptr [rax + rax]


0x914b:	nop	dword ptr [rax + rax]


0x91a3:	nop	dword ptr [rax + rax]


0x91c4:	nop	dword ptr [rax]


0x91e2:	nop	word ptr [rax + rax]


0x922a:	nop	word ptr [rax + rax]


0x925b:	nop	dword ptr [rax + rax]


0x929f:	nop	


0x92e9:	nop	dword ptr [rax]


0x942f:	nop	


0x944c:	nop	dword ptr [rax]


0x94af:	nop	


0x94d6:	nop	word ptr cs:[rax + rax]


0x9525:	nop	dword ptr [rax]


0x95b1:	nop	dword ptr [rax]


0x95c6:	nop	word ptr cs:[rax + rax]


0x95f8:	nop	dword ptr [rax + rax]


0x9609:	nop	dword ptr [rax]


0x9636:	nop	word ptr cs:[rax + rax]


0x97ef:	nop	


0x9811:	nop	dword ptr [rax]


0x9836:	nop	word ptr cs:[rax + rax]


0x984a:	nop	word ptr [rax + rax]


0x9857:	nop	word ptr [rax + rax]


0x991b:	nop	dword ptr [rax + rax]


0x999e:	nop	


0x99e8:	nop	dword ptr [rax + rax]


0x9a92:	nop	word ptr [rax + rax]


0x9acd:	nop	dword ptr [rax]


0x9aee:	nop	


0x9b0e:	nop	


0x9b86:	nop	word ptr cs:[rax + rax]


0x9bff:	nop	


0x9cc5:	nop	dword ptr [rax]


0x9ce6:	nop	word ptr cs:[rax + rax]


0x9d0e:	nop	


0x9d2e:	nop	


0x9d4f:	nop	


0x9d5a:	nop	word ptr [rax + rax]


0x9d7e:	nop	


0x9e46:	nop	word ptr cs:[rax + rax]


0x9e86:	nop	word ptr cs:[rax + rax]


0x9ee3:	nop	dword ptr [rax + rax]


0x9f51:	nop	dword ptr [rax]


0x9f7c:	nop	dword ptr [rax]


0xa015:	nop	dword ptr [rax]


0xa0eb:	nop	dword ptr [rax + rax]


0xa116:	nop	word ptr cs:[rax + rax]


0xa14f:	nop	


0xa199:	nop	dword ptr [rax]


0xa1bb:	nop	dword ptr [rax + rax]


0xa261:	nop	dword ptr [rax]


0xa2f3:	nop	dword ptr [rax + rax]


0xa31f:	nop	


