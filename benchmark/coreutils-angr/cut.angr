0x6460:	sub	rsp, 8
0x6464:	add	rsp, 8
0x6468:	ret	


0x6450:	mov	rdx, qword ptr [rip + 0x202bb1]
0x6457:	xor	esi, esi
0x6459:	jmp	0x1970


0x6440:	ret	


0x63d0:	push	r15
0x63d2:	push	r14
0x63d4:	mov	r15, rdx
0x63d7:	push	r13
0x63d9:	push	r12
0x63db:	lea	r12, [rip + 0x20266e]
0x63e2:	push	rbp
0x63e3:	lea	rbp, [rip + 0x20266e]
0x63ea:	push	rbx
0x63eb:	mov	r13d, edi
0x63ee:	mov	r14, rsi
0x63f1:	sub	rbp, r12
0x63f4:	sub	rsp, 8
0x63f8:	sar	rbp, 3
0x63fc:	call	0x1648


0x63a0:	xor	eax, eax
0x63a2:	mov	rcx, qword ptr [rdi + 0x20]
0x63a6:	cmp	qword ptr [rdi + 0x28], rcx
0x63aa:	ja	0x63c7


0x6360:	sub	rsp, 8
0x6364:	mov	edi, 0xe
0x6369:	call	0x18b0


0x6300:	sub	rsp, 8
0x6304:	xor	esi, esi
0x6306:	call	0x1900


0x6190:	push	r14
0x6192:	push	r13
0x6194:	push	r12
0x6196:	push	rbp
0x6197:	push	rbx
0x6198:	sub	rsp, 0x1020
0x619f:	mov	rax, qword ptr fs:[0x28]
0x61a8:	mov	qword ptr [rsp + 0x1018], rax
0x61b0:	xor	eax, eax
0x61b2:	test	rsi, rsi
0x61b5:	je	0x6243


0x6110:	push	r12
0x6112:	push	rbp
0x6113:	mov	rbp, rdi
0x6116:	push	rbx
0x6117:	call	0x16d0


0x6080:	push	r13
0x6082:	push	r12
0x6084:	mov	r13, rsi
0x6087:	push	rbp
0x6088:	push	rbx
0x6089:	mov	rbx, rdi
0x608c:	mov	r12, rdx
0x608f:	sub	rsp, 0x18
0x6093:	mov	rax, qword ptr fs:[0x28]
0x609c:	mov	qword ptr [rsp + 8], rax
0x60a1:	xor	eax, eax
0x60a3:	lea	rax, [rsp + 4]
0x60a8:	test	rdi, rdi
0x60ab:	cmove	rbx, rax
0x60af:	mov	rdi, rbx
0x60b2:	call	0x1790


0x6020:	mov	rax, qword ptr [rdi + 8]
0x6024:	cmp	qword ptr [rdi + 0x10], rax
0x6028:	je	0x6030


0x5ff0:	mov	rax, qword ptr [rdi + 0x20]
0x5ff4:	cmp	qword ptr [rdi + 0x28], rax
0x5ff8:	ja	0x6010


0x5fb0:	test	rdi, rdi
0x5fb3:	push	rbx
0x5fb4:	mov	rbx, rdi
0x5fb7:	je	0x5fca


0x5f30:	push	r12
0x5f32:	push	rbp
0x5f33:	push	rbx
0x5f34:	mov	rbx, rdi
0x5f37:	call	0x1880


0x5f10:	sub	rsp, 8
0x5f14:	call	0x1830


0x5ed0:	lea	rsi, [rip + 0x19d8]
0x5ed7:	sub	rsp, 8
0x5edb:	mov	edx, 5
0x5ee0:	xor	edi, edi
0x5ee2:	call	0x1740


0x5eb0:	push	rbx
0x5eb1:	mov	rbx, rdi
0x5eb4:	call	0x1760


0x5e80:	push	rbp
0x5e81:	push	rbx
0x5e82:	mov	rbp, rdi
0x5e85:	mov	rdi, rsi
0x5e88:	mov	rbx, rsi
0x5e8b:	sub	rsp, 8
0x5e8f:	call	0x5c80


0x5e50:	mov	rax, rdi
0x5e53:	sub	rsp, 8
0x5e57:	mul	rsi
0x5e5a:	seto	dl
0x5e5d:	test	rax, rax
0x5e60:	js	0x5e79


0x5e30:	push	rbx
0x5e31:	mov	rbx, rdi
0x5e34:	call	0x5c80


0x5de0:	test	rdi, rdi
0x5de3:	mov	rax, qword ptr [rsi]
0x5de6:	je	0x5e10


0x5d50:	test	rdi, rdi
0x5d53:	mov	r9, rdx
0x5d56:	mov	rcx, qword ptr [rsi]
0x5d59:	je	0x5d90


0x5d20:	mov	rax, rsi
0x5d23:	mul	rdx
0x5d26:	mov	rsi, rax
0x5d29:	seto	al
0x5d2c:	test	rsi, rsi
0x5d2f:	js	0x5d3b


0x5ce0:	test	rsi, rsi
0x5ce3:	push	rbx
0x5ce4:	mov	rbx, rsi
0x5ce7:	jne	0x5cee


0x5cd0:	jmp	0x5c80


0x5ca0:	mov	rax, rdi
0x5ca3:	mul	rsi
0x5ca6:	mov	rdi, rax
0x5ca9:	seto	al
0x5cac:	test	rdi, rdi
0x5caf:	js	0x5cbb


0x5c80:	push	rbx
0x5c81:	mov	rbx, rdi
0x5c84:	call	0x1890


0x5c00:	push	rbx
0x5c01:	lea	rsi, [rip + 0x199a]
0x5c08:	mov	edx, 5
0x5c0d:	xor	edi, edi
0x5c0f:	call	0x1740


0x5b20:	push	rbp
0x5b21:	push	rbx
0x5b22:	mov	r10d, 0x20
0x5b28:	xor	r11d, r11d
0x5b2b:	sub	rsp, 0xb8
0x5b32:	mov	rax, qword ptr fs:[0x28]
0x5b3b:	mov	qword ptr [rsp + 0x78], rax
0x5b40:	xor	eax, eax
0x5b42:	lea	rax, [rsp + 0xd0]
0x5b4a:	mov	qword ptr [rsp + 0xa0], r8
0x5b52:	lea	rbx, [rsp + 0xd0]
0x5b5a:	lea	r8, [rsp + 0x20]
0x5b5f:	mov	qword ptr [rsp + 0xa8], r9
0x5b67:	mov	dword ptr [rsp + 8], 0x20
0x5b6f:	mov	qword ptr [rsp + 0x10], rax
0x5b74:	lea	rax, [rsp + 0x80]
0x5b7c:	xor	r9d, r9d
0x5b7f:	mov	qword ptr [rsp + 0x18], rax
0x5b84:	mov	rbp, rax
0x5b87:	nop	word ptr [rax + rax]
0x5b90:	cmp	r10d, 0x2f
0x5b94:	ja	0x5bec


0x5aa0:	sub	rsp, 0x68
0x5aa4:	mov	r10, r8
0x5aa7:	xor	r9d, r9d
0x5aaa:	mov	rax, qword ptr fs:[0x28]
0x5ab3:	mov	qword ptr [rsp + 0x58], rax
0x5ab8:	xor	eax, eax
0x5aba:	mov	r8, rsp
0x5abd:	nop	dword ptr [rax]
0x5ac0:	mov	eax, dword ptr [r10]
0x5ac3:	cmp	eax, 0x2f
0x5ac6:	ja	0x5b0a


0x5a80:	xor	r9d, r9d
0x5a83:	cmp	qword ptr [r8], 0
0x5a87:	je	0x5a9b


0x5660:	push	r15
0x5662:	push	r14
0x5664:	push	r13
0x5666:	push	r12
0x5668:	mov	r12, r9
0x566b:	push	rbp
0x566c:	push	rbx
0x566d:	mov	rbp, rdi
0x5670:	mov	rbx, r8
0x5673:	sub	rsp, 0x28
0x5677:	test	rsi, rsi
0x567a:	je	0x5798


0x5640:	lea	rcx, [rip + 0x2039f9]
0x5647:	mov	rsi, rdi
0x564a:	mov	rdx, -1
0x5651:	xor	edi, edi
0x5653:	jmp	0x4d00


0x5620:	lea	rcx, [rip + 0x203a19]
0x5627:	mov	rdx, -1
0x562e:	jmp	0x4d00


0x5600:	lea	rcx, [rip + 0x203a39]
0x5607:	mov	rdx, rsi
0x560a:	mov	rsi, rdi
0x560d:	xor	edi, edi
0x560f:	jmp	0x4d00


0x55f0:	lea	rcx, [rip + 0x203a49]
0x55f7:	jmp	0x4d00


0x55d0:	mov	r8, rcx
0x55d3:	mov	rcx, rdx
0x55d6:	mov	rdx, rsi
0x55d9:	mov	rsi, rdi
0x55dc:	xor	edi, edi
0x55de:	jmp	0x5500


0x55b0:	mov	rcx, rdx
0x55b3:	mov	r8, -1
0x55ba:	mov	rdx, rsi
0x55bd:	mov	rsi, rdi
0x55c0:	xor	edi, edi
0x55c2:	jmp	0x5500


0x55a0:	mov	r8, -1
0x55a7:	jmp	0x5500


0x5500:	sub	rsp, 0x48
0x5504:	mov	r9, rcx
0x5507:	mov	rcx, qword ptr [rip + 0x203d82]
0x550e:	movdqa	xmm0, xmmword ptr [rip + 0x203d4a]
0x5516:	mov	rax, qword ptr fs:[0x28]
0x551f:	mov	qword ptr [rsp + 0x38], rax
0x5524:	xor	eax, eax
0x5526:	movaps	xmmword ptr [rsp], xmm0
0x552a:	test	rsi, rsi
0x552d:	mov	qword ptr [rsp + 0x30], rcx
0x5532:	mov	dword ptr [rsp], 0xa
0x5539:	movdqa	xmm0, xmmword ptr [rip + 0x203d2f]
0x5541:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x5546:	movdqa	xmm0, xmmword ptr [rip + 0x203d32]
0x554e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x5553:	je	0x5587


0x5470:	sub	rsp, 0x48
0x5474:	mov	rax, rdx
0x5477:	mov	rdx, qword ptr fs:[0x28]
0x5480:	mov	qword ptr [rsp + 0x38], rdx
0x5485:	xor	edx, edx
0x5487:	cmp	esi, 0xa
0x548a:	je	0x54f4


0x5460:	mov	edx, 0x3a
0x5465:	jmp	0x5390


0x5440:	mov	edx, 0x3a
0x5445:	mov	rsi, -1
0x544c:	jmp	0x5390


0x5430:	movsx	edx, sil
0x5434:	mov	rsi, -1
0x543b:	jmp	0x5390


0x5390:	sub	rsp, 0x48
0x5394:	mov	ecx, edx
0x5396:	mov	rax, qword ptr fs:[0x28]
0x539f:	mov	qword ptr [rsp + 0x38], rax
0x53a4:	xor	eax, eax
0x53a6:	mov	rax, qword ptr [rip + 0x203ee3]
0x53ad:	mov	r8, rsp
0x53b0:	and	ecx, 0x1f
0x53b3:	movdqa	xmm0, xmmword ptr [rip + 0x203ea5]
0x53bb:	mov	qword ptr [rsp + 0x30], rax
0x53c0:	mov	eax, edx
0x53c2:	movaps	xmmword ptr [rsp], xmm0
0x53c6:	shr	al, 5
0x53c9:	movzx	eax, al
0x53cc:	lea	r9, [r8 + rax*4 + 8]
0x53d1:	movdqa	xmm0, xmmword ptr [rip + 0x203e97]
0x53d9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x53de:	movdqa	xmm0, xmmword ptr [rip + 0x203e9a]
0x53e6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x53eb:	mov	edx, dword ptr [r9]
0x53ee:	mov	eax, edx
0x53f0:	shr	eax, cl
0x53f2:	not	eax
0x53f4:	and	eax, 1
0x53f7:	shl	eax, cl
0x53f9:	mov	rcx, r8
0x53fc:	xor	eax, edx
0x53fe:	mov	rdx, rsi
0x5401:	mov	rsi, rdi
0x5404:	mov	dword ptr [r9], eax
0x5407:	xor	edi, edi
0x5409:	call	0x4d00


0x5380:	mov	rcx, rdx
0x5383:	mov	rdx, rsi
0x5386:	mov	esi, edi
0x5388:	xor	edi, edi
0x538a:	jmp	0x52e0


0x5370:	mov	rdx, rsi
0x5373:	mov	esi, edi
0x5375:	xor	edi, edi
0x5377:	jmp	0x5250


0x52e0:	sub	rsp, 0x48
0x52e4:	mov	rax, rdx
0x52e7:	mov	rdx, rcx
0x52ea:	mov	rcx, qword ptr fs:[0x28]
0x52f3:	mov	qword ptr [rsp + 0x38], rcx
0x52f8:	xor	ecx, ecx
0x52fa:	cmp	esi, 0xa
0x52fd:	je	0x5360


0x5250:	sub	rsp, 0x48
0x5254:	mov	rax, rdx
0x5257:	mov	rdx, qword ptr fs:[0x28]
0x5260:	mov	qword ptr [rsp + 0x38], rdx
0x5265:	xor	edx, edx
0x5267:	cmp	esi, 0xa
0x526a:	je	0x52d4


0x5230:	lea	rcx, [rip + 0x204029]
0x5237:	mov	rdx, rsi
0x523a:	mov	rsi, rdi
0x523d:	xor	edi, edi
0x523f:	jmp	0x4d00


0x5210:	lea	rcx, [rip + 0x204049]
0x5217:	mov	rsi, rdi
0x521a:	mov	rdx, -1
0x5221:	xor	edi, edi
0x5223:	jmp	0x4d00


0x5200:	lea	rcx, [rip + 0x204059]
0x5207:	jmp	0x4d00


0x51e0:	lea	rcx, [rip + 0x204079]
0x51e7:	mov	rdx, -1
0x51ee:	jmp	0x4d00


0x5140:	mov	eax, dword ptr [rip + 0x203f32]
0x5146:	push	r12
0x5148:	mov	r12, qword ptr [rip + 0x203f31]
0x514f:	push	rbp
0x5150:	push	rbx
0x5151:	cmp	eax, 1
0x5154:	jle	0x5181


0x5130:	mov	rcx, rdx
0x5133:	xor	edx, edx
0x5135:	jmp	0x5040


0x5040:	push	r15
0x5042:	push	r14
0x5044:	lea	rax, [rip + 0x204215]
0x504b:	push	r13
0x504d:	push	r12
0x504f:	mov	r12, rdx
0x5052:	push	rbp
0x5053:	push	rbx
0x5054:	mov	rbx, rcx
0x5057:	mov	r14, rdi
0x505a:	mov	r15, rsi
0x505d:	sub	rsp, 0x38
0x5061:	test	rcx, rcx
0x5064:	cmove	rbx, rax
0x5068:	xor	ebp, ebp
0x506a:	call	0x16a0


0x4fc0:	push	r15
0x4fc2:	push	r14
0x4fc4:	lea	rax, [rip + 0x204295]
0x4fcb:	push	r13
0x4fcd:	push	r12
0x4fcf:	mov	r13, rdi
0x4fd2:	push	rbp
0x4fd3:	push	rbx
0x4fd4:	mov	rbx, r8
0x4fd7:	mov	r14, rsi
0x4fda:	mov	r15, rdx
0x4fdd:	sub	rsp, 0x18
0x4fe1:	test	r8, r8
0x4fe4:	cmove	rbx, rax
0x4fe8:	mov	qword ptr [rsp + 8], rcx
0x4fed:	call	0x16a0


0x4f90:	lea	rax, [rip + 0x2042c9]
0x4f97:	test	rdi, rdi
0x4f9a:	cmove	rdi, rax
0x4f9e:	test	rsi, rsi
0x4fa1:	mov	dword ptr [rdi], 0xa
0x4fa7:	je	0x4fb7


0x4f70:	lea	rax, [rip + 0x2042e9]
0x4f77:	test	rdi, rdi
0x4f7a:	cmove	rdi, rax
0x4f7e:	mov	eax, dword ptr [rdi + 4]
0x4f81:	mov	dword ptr [rdi + 4], esi
0x4f84:	ret	


0x4f30:	lea	rax, [rip + 0x204329]
0x4f37:	test	rdi, rdi
0x4f3a:	mov	ecx, esi
0x4f3c:	cmove	rdi, rax
0x4f40:	mov	eax, esi
0x4f42:	and	ecx, 0x1f
0x4f45:	shr	al, 5
0x4f48:	movzx	eax, al
0x4f4b:	lea	rdi, [rdi + rax*4 + 8]
0x4f50:	mov	esi, dword ptr [rdi]
0x4f52:	mov	eax, esi
0x4f54:	shr	eax, cl
0x4f56:	xor	edx, eax
0x4f58:	and	eax, 1
0x4f5b:	and	edx, 1
0x4f5e:	shl	edx, cl
0x4f60:	xor	edx, esi
0x4f62:	mov	dword ptr [rdi], edx
0x4f64:	ret	


0x4f10:	lea	rax, [rip + 0x204349]
0x4f17:	test	rdi, rdi
0x4f1a:	cmove	rdi, rax
0x4f1e:	mov	dword ptr [rdi], esi
0x4f20:	ret	


0x4ef0:	lea	rax, [rip + 0x204369]
0x4ef7:	test	rdi, rdi
0x4efa:	cmove	rdi, rax
0x4efe:	mov	eax, dword ptr [rdi]
0x4f00:	ret	


0x4eb0:	push	r12
0x4eb2:	push	rbp
0x4eb3:	push	rbx
0x4eb4:	mov	rbx, rdi
0x4eb7:	call	0x16a0


0x4d00:	push	r15
0x4d02:	push	r14
0x4d04:	movsxd	r15, edi
0x4d07:	push	r13
0x4d09:	push	r12
0x4d0b:	mov	r14, rdx
0x4d0e:	push	rbp
0x4d0f:	push	rbx
0x4d10:	mov	rbp, rcx
0x4d13:	sub	rsp, 0x28
0x4d17:	mov	qword ptr [rsp + 8], rsi
0x4d1c:	call	0x16a0


0x3ac0:	push	r15
0x3ac2:	push	r14
0x3ac4:	mov	r15d, r8d
0x3ac7:	push	r13
0x3ac9:	push	r12
0x3acb:	mov	r14, rdi
0x3ace:	push	rbp
0x3acf:	push	rbx
0x3ad0:	mov	ebx, r9d
0x3ad3:	mov	r13, rsi
0x3ad6:	mov	rbp, rcx
0x3ad9:	and	ebx, 2
0x3adc:	sub	rsp, 0xb8
0x3ae3:	mov	rax, qword ptr [rsp + 0xf0]
0x3aeb:	mov	qword ptr [rsp + 0x10], rdx
0x3af0:	mov	dword ptr [rsp + 8], r8d
0x3af5:	mov	dword ptr [rsp + 0x78], r9d
0x3afa:	mov	qword ptr [rsp + 0x20], rax
0x3aff:	mov	rax, qword ptr [rsp + 0xf8]
0x3b07:	mov	qword ptr [rsp + 0x68], rax
0x3b0c:	mov	rax, qword ptr [rsp + 0x100]
0x3b14:	mov	qword ptr [rsp + 0x60], rax
0x3b19:	mov	rax, qword ptr fs:[0x28]
0x3b22:	mov	qword ptr [rsp + 0xa8], rax
0x3b2a:	xor	eax, eax
0x3b2c:	call	0x1750


0x39d0:	push	rbp
0x39d1:	push	rbx
0x39d2:	mov	rbp, rdi
0x39d5:	mov	ebx, esi
0x39d7:	sub	rsp, 8
0x39db:	call	0x6360


0x3930:	test	rdi, rdi
0x3933:	push	rbx
0x3934:	je	0x39ad


0x3770:	cmp	sil, dl
0x3773:	je	0x3910


0x33f0:	push	r15
0x33f2:	push	r14
0x33f4:	push	r13
0x33f6:	push	r12
0x33f8:	push	rbp
0x33f9:	push	rbx
0x33fa:	sub	rsp, 0x68
0x33fe:	mov	r15, qword ptr [rdi]
0x3401:	mov	r12, qword ptr [rsi]
0x3404:	mov	rbx, qword ptr fs:[0x28]
0x340d:	mov	qword ptr [rsp + 0x58], rbx
0x3412:	xor	ebx, ebx
0x3414:	mov	qword ptr [rsp + 0x40], rdi
0x3419:	mov	qword ptr [rsp + 0x48], rsi
0x341e:	test	r15, r15
0x3421:	mov	qword ptr [rsp + 0x20], rdx
0x3426:	mov	qword ptr [rsp + 8], rcx
0x342b:	mov	dword ptr [rsp + 0x14], r8d
0x3430:	mov	dword ptr [rsp + 0x34], r9d
0x3435:	mov	r14, qword ptr [rsp + 0xa0]
0x343d:	je	0x36d0


0x33c0:	test	rdi, rdi
0x33c3:	je	0x33e0


0x33b0:	jmp	0x1810


0x3300:	push	rbp
0x3301:	push	rbx
0x3302:	sub	rsp, 8
0x3306:	mov	rdi, qword ptr [rip + 0x205d9b]
0x330d:	call	0x6110


0x32f0:	mov	byte ptr [rip + 0x205e41], dil
0x32f7:	ret	


0x32e0:	mov	qword ptr [rip + 0x205e59], rdi
0x32e7:	ret	


0x32a0:	sub	rsp, 8
0x32a4:	mov	rdi, qword ptr [rip + 0x205fed]
0x32ab:	mov	qword ptr [rip + 0x205fea], 0
0x32b6:	mov	qword ptr [rip + 0x205e6f], 0
0x32c1:	call	0x1680


0x2ce0:	push	r15
0x2ce2:	push	r14
0x2ce4:	mov	eax, esi
0x2ce6:	push	r13
0x2ce8:	push	r12
0x2cea:	mov	r14, rdi
0x2ced:	push	rbp
0x2cee:	push	rbx
0x2cef:	sub	rsp, 0x28
0x2cf3:	and	eax, 1
0x2cf6:	mov	dword ptr [rsp + 0x1c], esi
0x2cfa:	mov	dword ptr [rsp + 0x18], eax
0x2cfe:	je	0x2d1e


0x2c10:	push	rbp
0x2c11:	push	rbx
0x2c12:	mov	rbx, rsi
0x2c15:	mov	rbp, rdi
0x2c18:	sub	rsp, 8
0x2c1c:	mov	rsi, qword ptr [rip + 0x20667d]
0x2c23:	cmp	rsi, qword ptr [rip + 0x206506]
0x2c2a:	mov	rdi, qword ptr [rip + 0x206667]
0x2c31:	je	0x2c60


0x2bf0:	mov	eax, dword ptr [rsi]
0x2bf2:	cmp	dword ptr [rdi], eax
0x2bf4:	jl	0x2c00


0x2760:	push	r13
0x2762:	push	r12
0x2764:	mov	edx, 5
0x2769:	push	rbp
0x276a:	push	rbx
0x276b:	mov	ebp, edi
0x276d:	sub	rsp, 0x88
0x2774:	mov	rbx, qword ptr [rip + 0x2069cd]
0x277b:	mov	rax, qword ptr fs:[0x28]
0x2784:	mov	qword ptr [rsp + 0x78], rax
0x2789:	xor	eax, eax
0x278b:	test	edi, edi
0x278d:	je	0x27bd


0x1f70:	push	r15
0x1f72:	push	r14
0x1f74:	mov	rsi, rdi
0x1f77:	push	r13
0x1f79:	push	r12
0x1f7b:	mov	ecx, 2
0x1f80:	push	rbp
0x1f81:	push	rbx
0x1f82:	sub	rsp, 0x18
0x1f86:	mov	qword ptr [rsp], rdi
0x1f8a:	lea	rdi, [rip + 0x50d1]
0x1f91:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1f60:	push	rbp
0x1f61:	mov	rbp, rsp
0x1f64:	pop	rbp
0x1f65:	jmp	0x1ed0


0x1f20:	cmp	byte ptr [rip + 0x2071c1], 0
0x1f27:	jne	0x1f58


0x1ed0:	lea	rdi, [rip + 0x2071c9]
0x1ed7:	lea	rsi, [rip + 0x2071c2]
0x1ede:	push	rbp
0x1edf:	sub	rsi, rdi
0x1ee2:	mov	rbp, rsp
0x1ee5:	sar	rsi, 3
0x1ee9:	mov	rax, rsi
0x1eec:	shr	rax, 0x3f
0x1ef0:	add	rsi, rax
0x1ef3:	sar	rsi, 1
0x1ef6:	je	0x1f10


0x1e90:	lea	rdi, [rip + 0x207209]
0x1e97:	push	rbp
0x1e98:	lea	rax, [rip + 0x207201]
0x1e9f:	cmp	rax, rdi
0x1ea2:	mov	rbp, rsp
0x1ea5:	je	0x1ec0


0x1e60:	xor	ebp, ebp
0x1e62:	mov	r9, rdx
0x1e65:	pop	rsi
0x1e66:	mov	rdx, rsp
0x1e69:	and	rsp, 0xfffffffffffffff0
0x1e6d:	push	rax
0x1e6e:	push	rsp
0x1e6f:	lea	r8, [rip + 0x45ca]
0x1e76:	lea	rcx, [rip + 0x4553]
0x1e7d:	lea	rdi, [rip - 0x494]
0x1e84:	call	qword ptr [rip + 0x207156]


0x19f0:	push	r15
0x19f2:	push	r14
0x19f4:	xor	r14d, r14d
0x19f7:	push	r13
0x19f9:	push	r12
0x19fb:	lea	r13, [rip + 0x20705e]
0x1a02:	push	rbp
0x1a03:	push	rbx
0x1a04:	mov	ebp, edi
0x1a06:	mov	rbx, rsi
0x1a09:	lea	r12, [rip + 0x4b88]
0x1a10:	sub	rsp, 8
0x1a14:	mov	rdi, qword ptr [rsi]
0x1a17:	call	0x3930


0x1648:	sub	rsp, 8
0x164c:	mov	rax, qword ptr [rip + 0x207995]
0x1653:	test	rax, rax
0x1656:	je	0x165a


0x1970:	jmp	qword ptr [rip + 0x20762a]


0x63ac:	mov	rax, qword ptr [rdi + 0x10]
0x63b0:	sub	rax, qword ptr [rdi + 8]
0x63b4:	test	dword ptr [rdi], 0x100
0x63ba:	je	0x63c7


0x63c7:	ret	


0x18b0:	jmp	qword ptr [rip + 0x20768a]


0x1900:	jmp	qword ptr [rip + 0x207662]


0x6243:	mov	rcx, qword ptr [rsp + 0x1018]
0x624b:	xor	rcx, qword ptr fs:[0x28]
0x6254:	jne	0x62f8


0x61bb:	mov	r12, rdi
0x61be:	mov	rbx, rsi
0x61c1:	call	0x63a0


0x16d0:	jmp	qword ptr [rip + 0x20777a]


0x1790:	jmp	qword ptr [rip + 0x20771a]


0x6030:	mov	rax, qword ptr [rdi + 0x20]
0x6034:	cmp	qword ptr [rdi + 0x28], rax
0x6038:	jne	0x602a


0x602a:	jmp	0x1950


0x5ffa:	mov	rax, qword ptr [rdi + 8]
0x5ffe:	mov	rdx, qword ptr [rdi + 0x10]
0x6002:	sub	rdx, rax
0x6005:	je	0x6010


0x6010:	xor	eax, eax
0x6012:	ret	


0x5fca:	mov	rdi, rbx
0x5fcd:	pop	rbx
0x5fce:	jmp	0x18a0


0x5fb9:	call	0x18d0


0x1880:	jmp	qword ptr [rip + 0x2076a2]


0x1830:	jmp	qword ptr [rip + 0x2076ca]


0x1740:	jmp	qword ptr [rip + 0x207742]


0x1760:	jmp	qword ptr [rip + 0x207732]


0x5e79:	call	0x5ed0


0x5e62:	movzx	edx, dl
0x5e65:	test	rdx, rdx
0x5e68:	jne	0x5e79


0x5e10:	test	rax, rax
0x5e13:	mov	edx, 0x80
0x5e18:	cmove	rax, rdx
0x5e1c:	test	rax, rax
0x5e1f:	jns	0x5e02


0x5de8:	movabs	rdx, 0x5555555555555553
0x5df2:	cmp	rax, rdx
0x5df5:	ja	0x5e21


0x5d90:	test	rcx, rcx
0x5d93:	je	0x5db8


0x5d5b:	xor	edx, edx
0x5d5d:	movabs	rax, 0x5555555555555554
0x5d67:	div	r9
0x5d6a:	cmp	rax, rcx
0x5d6d:	jbe	0x5dab


0x5d3b:	sub	rsp, 8
0x5d3f:	call	0x5ed0


0x5d31:	movzx	eax, al
0x5d34:	test	rax, rax
0x5d37:	jne	0x5d3b


0x5ce9:	test	rdi, rdi
0x5cec:	jne	0x5d08


0x5cee:	mov	rsi, rbx
0x5cf1:	call	0x18f0


0x5cbb:	sub	rsp, 8
0x5cbf:	call	0x5ed0


0x5cb1:	movzx	eax, al
0x5cb4:	test	rax, rax
0x5cb7:	jne	0x5cbb


0x1890:	jmp	qword ptr [rip + 0x20769a]


0x5b96:	mov	eax, r10d
0x5b99:	mov	r11d, 1
0x5b9f:	add	r10d, 8
0x5ba3:	add	rax, rbp
0x5ba6:	mov	rax, qword ptr [rax]
0x5ba9:	test	rax, rax
0x5bac:	mov	qword ptr [r8 + r9*8], rax
0x5bb0:	je	0x5bbc


0x5bec:	mov	rax, rbx
0x5bef:	add	rbx, 8
0x5bf3:	jmp	0x5ba6


0x5ac8:	mov	r11d, eax
0x5acb:	add	r11, qword ptr [r10 + 0x10]
0x5acf:	add	eax, 8
0x5ad2:	mov	dword ptr [r10], eax
0x5ad5:	mov	rax, qword ptr [r11]
0x5ad8:	test	rax, rax
0x5adb:	mov	qword ptr [r8 + r9*8], rax
0x5adf:	je	0x5aeb


0x5b0a:	mov	r11, qword ptr [r10 + 8]
0x5b0e:	lea	rax, [r11 + 8]
0x5b12:	mov	qword ptr [r10 + 8], rax
0x5b16:	jmp	0x5ad5


0x5a9b:	jmp	0x5660


0x5798:	mov	r8, rcx
0x579b:	mov	rcx, rdx
0x579e:	lea	rdx, [rip + 0x1daf]
0x57a5:	mov	esi, 1
0x57aa:	xor	eax, eax
0x57ac:	call	0x19a0


0x5680:	mov	r8, rdx
0x5683:	lea	rdx, [rip + 0x1ebe]
0x568a:	mov	r9, rcx
0x568d:	xor	eax, eax
0x568f:	mov	rcx, rsi
0x5692:	mov	esi, 1
0x5697:	call	0x19a0


0x5587:	call	0x1690


0x5555:	test	rdx, rdx
0x5558:	je	0x5587


0x54f4:	call	0x1690


0x548c:	mov	dword ptr [rsp], esi
0x548f:	mov	rcx, rsp
0x5492:	mov	rdx, -1
0x5499:	mov	rsi, rax
0x549c:	mov	qword ptr [rsp + 4], 0
0x54a5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x54ae:	mov	qword ptr [rsp + 0x14], 0
0x54b7:	mov	qword ptr [rsp + 0x1c], 0
0x54c0:	mov	qword ptr [rsp + 0x24], 0
0x54c9:	mov	qword ptr [rsp + 0x2c], 0
0x54d2:	mov	dword ptr [rsp + 0x34], 0
0x54da:	call	0x4d00


0x5360:	call	0x1690


0x52ff:	mov	dword ptr [rsp], esi
0x5302:	mov	rcx, rsp
0x5305:	mov	rsi, rax
0x5308:	mov	qword ptr [rsp + 4], 0
0x5311:	mov	qword ptr [rsp + 0xc], 0
0x531a:	mov	qword ptr [rsp + 0x14], 0
0x5323:	mov	qword ptr [rsp + 0x1c], 0
0x532c:	mov	qword ptr [rsp + 0x24], 0
0x5335:	mov	qword ptr [rsp + 0x2c], 0
0x533e:	mov	dword ptr [rsp + 0x34], 0
0x5346:	call	0x4d00


0x52d4:	call	0x1690


0x526c:	mov	dword ptr [rsp], esi
0x526f:	mov	rcx, rsp
0x5272:	mov	rdx, -1
0x5279:	mov	rsi, rax
0x527c:	mov	qword ptr [rsp + 4], 0
0x5285:	mov	qword ptr [rsp + 0xc], 0
0x528e:	mov	qword ptr [rsp + 0x14], 0
0x5297:	mov	qword ptr [rsp + 0x1c], 0
0x52a0:	mov	qword ptr [rsp + 0x24], 0
0x52a9:	mov	qword ptr [rsp + 0x2c], 0
0x52b2:	mov	dword ptr [rsp + 0x34], 0
0x52ba:	call	0x4d00


0x5181:	mov	rdi, qword ptr [r12 + 8]
0x5186:	lea	rbx, [rip + 0x203fd3]
0x518d:	cmp	rdi, rbx
0x5190:	je	0x51a9


0x5156:	sub	eax, 2
0x5159:	lea	rbx, [r12 + 0x18]
0x515e:	shl	rax, 4
0x5162:	lea	rbp, [r12 + rax + 0x28]
0x5167:	nop	word ptr [rax + rax]
0x5170:	mov	rdi, qword ptr [rbx]
0x5173:	add	rbx, 0x10
0x5177:	call	0x1680


0x16a0:	jmp	qword ptr [rip + 0x207792]


0x4fb7:	sub	rsp, 8
0x4fbb:	call	0x1690


0x4fa9:	test	rdx, rdx
0x4fac:	je	0x4fb7


0x1750:	jmp	qword ptr [rip + 0x20773a]


0x39ad:	mov	rcx, qword ptr [rip + 0x20572c]
0x39b4:	lea	rdi, [rip + 0x3665]
0x39bb:	mov	edx, 0x37
0x39c0:	mov	esi, 1
0x39c5:	call	0x1990


0x3936:	mov	esi, 0x2f
0x393b:	mov	rbx, rdi
0x393e:	call	0x17b0


0x3910:	movzx	esi, sil
0x3914:	mov	rdx, rcx
0x3917:	jmp	0x1820


0x3779:	test	rcx, rcx
0x377c:	push	r15
0x377e:	mov	r11d, edx
0x3781:	push	r14
0x3783:	push	r13
0x3785:	push	r12
0x3787:	push	rbp
0x3788:	push	rbx
0x3789:	mov	ebx, esi
0x378b:	je	0x37d4


0x36d0:	cmp	rcx, 0x40
0x36d4:	mov	r12d, 0x40
0x36da:	cmovbe	r12, rcx
0x36de:	mov	rdi, r12
0x36e1:	call	0x1890


0x3443:	cmp	r12, qword ptr [rsp + 0x20]
0x3448:	jae	0x3488


0x33e0:	ret	


0x33c5:	push	rbx
0x33c6:	mov	ebx, esi
0x33c8:	call	0x1880


0x1810:	jmp	qword ptr [rip + 0x2076da]


0x1680:	jmp	qword ptr [rip + 0x2077a2]


0x2d1e:	xor	r15d, r15d
0x2d21:	xor	ebx, ebx
0x2d23:	mov	ebp, ebx
0x2d25:	xor	r13d, r13d
0x2d28:	xor	r12d, r12d
0x2d2b:	mov	qword ptr [rsp + 0x10], 1
0x2d34:	jmp	0x2dbe


0x2d00:	lea	rdi, [rip + 0x435b]
0x2d07:	mov	ecx, 2
0x2d0c:	mov	rsi, r14
0x2d0f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2c60:	test	rdi, rdi
0x2c63:	je	0x2ca8


0x2c33:	mov	rax, rsi
0x2c36:	add	rsi, 1
0x2c3a:	shl	rax, 4
0x2c3e:	add	rdi, rax
0x2c41:	mov	qword ptr [rdi], rbp
0x2c44:	mov	qword ptr [rdi + 8], rbx
0x2c48:	mov	qword ptr [rip + 0x206651], rsi
0x2c4f:	add	rsp, 8
0x2c53:	pop	rbx
0x2c54:	pop	rbp
0x2c55:	ret	


0x2c00:	mov	eax, 0xffffffff
0x2c05:	ret	


0x2bf6:	setg	al
0x2bf9:	movzx	eax, al
0x2bfc:	ret	


0x27bd:	lea	rsi, [rip + 0x3e64]
0x27c4:	xor	edi, edi
0x27c6:	call	0x1740


0x278f:	lea	rsi, [rip + 0x3e6a]
0x2796:	xor	edi, edi
0x2798:	call	0x1740


0x1f91:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1f93:	seta	al
0x1f96:	sbb	al, 0
0x1f98:	test	al, al
0x1f9a:	jne	0x24a0


0x1f29:	cmp	qword ptr [rip + 0x2070c7], 0
0x1f31:	push	rbp
0x1f32:	mov	rbp, rsp
0x1f35:	je	0x1f43


0x1f58:	ret	


0x1f10:	pop	rbp
0x1f11:	ret	


0x1ef8:	mov	rax, qword ptr [rip + 0x2070f1]
0x1eff:	test	rax, rax
0x1f02:	je	0x1f10


0x1ec0:	pop	rbp
0x1ec1:	ret	


0x1ea7:	mov	rax, qword ptr [rip + 0x20712a]
0x1eae:	test	rax, rax
0x1eb1:	je	0x1ec0




0x165a:	add	rsp, 8
0x165e:	ret	


0x1658:	call	rax




0x63bc:	mov	rdx, qword ptr [rdi + 0x58]
0x63c0:	sub	rdx, qword ptr [rdi + 0x48]
0x63c4:	add	rax, rdx
0x63c7:	ret	






0x625a:	add	rsp, 0x1020
0x6261:	pop	rbx
0x6262:	pop	rbp
0x6263:	pop	r12
0x6265:	pop	r13
0x6267:	pop	r14
0x6269:	ret	


0x62f8:	call	0x1770






0x603a:	cmp	qword ptr [rdi + 0x48], 0
0x603f:	jne	0x602a


0x1950:	jmp	qword ptr [rip + 0x20763a]


0x6007:	mov	qword ptr [rsi], rdx
0x600a:	ret	


0x18a0:	jmp	qword ptr [rip + 0x207692]


0x18d0:	jmp	qword ptr [rip + 0x20767a]










0x5e6a:	call	0x1860


0x5e21:	sub	rsp, 8
0x5e25:	call	0x5ed0


0x5e02:	mov	qword ptr [rsi], rax
0x5e05:	mov	rsi, rax
0x5e08:	jmp	0x5ce0


0x5df7:	mov	rdx, rax
0x5dfa:	shr	rdx, 1
0x5dfd:	lea	rax, [rdx + rax + 1]
0x5e02:	mov	qword ptr [rsi], rax
0x5e05:	mov	rsi, rax
0x5e08:	jmp	0x5ce0


0x5db8:	xor	edx, edx
0x5dba:	mov	eax, 0x80
0x5dbf:	xor	r8d, r8d
0x5dc2:	div	r9
0x5dc5:	test	rax, rax
0x5dc8:	sete	r8b
0x5dcc:	lea	rcx, [r8 + rax]
0x5dd0:	jmp	0x5d95


0x5d95:	mov	rax, rcx
0x5d98:	mul	r9
0x5d9b:	seto	dl
0x5d9e:	test	rax, rax
0x5da1:	movzx	edx, dl
0x5da4:	js	0x5dab


0x5dab:	sub	rsp, 8
0x5daf:	call	0x5ed0


0x5d6f:	mov	rax, rcx
0x5d72:	shr	rax, 1
0x5d75:	lea	rcx, [rax + rcx + 1]
0x5d7a:	mov	qword ptr [rsi], rcx
0x5d7d:	imul	rcx, r9
0x5d81:	mov	rsi, rcx
0x5d84:	jmp	0x5ce0


0x5d39:	jmp	0x5ce0


0x5d08:	call	0x1680


0x18f0:	jmp	qword ptr [rip + 0x20766a]


0x5cb9:	jmp	0x5c80




0x5bbc:	test	r11b, r11b
0x5bbf:	jne	0x5be5


0x5bb2:	add	r9, 1
0x5bb6:	cmp	r9, 0xa
0x5bba:	jne	0x5b90


0x5ba6:	mov	rax, qword ptr [rax]
0x5ba9:	test	rax, rax
0x5bac:	mov	qword ptr [r8 + r9*8], rax
0x5bb0:	je	0x5bbc


0x5aeb:	call	0x5660


0x5ae1:	add	r9, 1
0x5ae5:	cmp	r9, 0xa
0x5ae9:	jne	0x5ac0


0x5ad5:	mov	rax, qword ptr [r11]
0x5ad8:	test	rax, rax
0x5adb:	mov	qword ptr [r8 + r9*8], rax
0x5adf:	je	0x5aeb


0x5a90:	add	r9, 1
0x5a94:	cmp	qword ptr [r8 + r9*8], 0
0x5a99:	jne	0x5a90


0x19a0:	jmp	qword ptr [rip + 0x207612]


0x1690:	jmp	qword ptr [rip + 0x20779a]


0x555a:	mov	qword ptr [rsp + 0x28], rsi
0x555f:	mov	qword ptr [rsp + 0x30], rdx
0x5564:	mov	rcx, rsp
0x5567:	mov	rdx, r8
0x556a:	mov	rsi, r9
0x556d:	call	0x4d00


0x51a9:	lea	rbx, [rip + 0x203ee0]
0x51b0:	cmp	r12, rbx
0x51b3:	je	0x51c4


0x5192:	call	0x1680




0x4fae:	mov	qword ptr [rdi + 0x28], rsi
0x4fb2:	mov	qword ptr [rdi + 0x30], rdx
0x4fb6:	ret	




0x1990:	jmp	qword ptr [rip + 0x20761a]


0x17b0:	jmp	qword ptr [rip + 0x20770a]


0x1820:	jmp	qword ptr [rip + 0x2076d2]


0x37d4:	mov	r12d, esi
0x37d7:	movzx	eax, sil
0x37db:	mov	r13d, edx
0x37de:	shl	r12d, 8
0x37e2:	shl	r13d, 8
0x37e6:	movzx	r12d, r12w
0x37ea:	movzx	r13d, r13w
0x37ee:	or	r12d, eax
0x37f1:	movzx	eax, dl
0x37f4:	movsxd	r12, r12d
0x37f7:	or	r13d, eax
0x37fa:	mov	rax, r12
0x37fd:	movsxd	r13, r13d
0x3800:	shl	rax, 0x10
0x3804:	or	r12, rax
0x3807:	mov	rax, r13
0x380a:	shl	rax, 0x10
0x380e:	or	r13, rax
0x3811:	mov	rax, r12
0x3814:	shl	rax, 0x20
0x3818:	or	r12, rax
0x381b:	mov	rax, r13
0x381e:	shl	rax, 0x20
0x3822:	or	r13, rax
0x3825:	cmp	rcx, 7
0x3829:	jbe	0x391c


0x378d:	test	dil, 7
0x3791:	je	0x37d4


0x344a:	mov	rax, qword ptr [rsp + 0x40]
0x344f:	mov	qword ptr [rax], r15
0x3452:	mov	rax, qword ptr [rsp + 0x48]
0x3457:	mov	qword ptr [rax], r12
0x345a:	mov	rax, -1
0x3461:	mov	rbx, qword ptr [rsp + 0x58]
0x3466:	xor	rbx, qword ptr fs:[0x28]
0x346f:	jne	0x376a


0x3488:	mov	rbp, r12
0x348b:	sub	rbp, qword ptr [rsp + 0x20]
0x3490:	sete	dl
0x3493:	cmp	r12, qword ptr [rsp + 8]
0x3498:	setae	al
0x349b:	test	dl, al
0x349d:	jne	0x344a






0x2dbe:	movzx	r8d, byte ptr [r14]
0x2dc2:	cmp	r8b, 0x2d
0x2dc6:	jne	0x2d40


0x2d0f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2d11:	seta	al
0x2d14:	sbb	al, 0
0x2d16:	test	al, al
0x2d18:	je	0x3019


0x2ca8:	test	rsi, rsi
0x2cab:	mov	eax, 8
0x2cb0:	mov	edx, 0x10
0x2cb5:	cmove	rsi, rax
0x2cb9:	mov	rax, rdx
0x2cbc:	xor	ecx, ecx
0x2cbe:	mul	rsi
0x2cc1:	jo	0x2cd2


0x2c65:	movabs	rax, 0x555555555555554
0x2c6f:	cmp	rsi, rax
0x2c72:	ja	0x2ccd


0x1fa0:	mov	r15, qword ptr [rip + 0x207109]
0x1fa7:	mov	byte ptr [rip + 0x207144], 1
0x1fae:	mov	esi, 2
0x1fb3:	mov	rdi, r15
0x1fb6:	call	0x33c0


0x24a0:	mov	rdi, qword ptr [rsp]
0x24a4:	lea	rsi, [rip + 0x4128]
0x24ab:	call	0x1960


0x1f43:	call	0x1e90


0x1f37:	mov	rdi, qword ptr [rip + 0x2070ca]
0x1f3e:	call	0x19e0


0x1f04:	pop	rbp
0x1f05:	jmp	rax


0x1eb3:	pop	rbp
0x1eb4:	jmp	rax


0x1770:	jmp	qword ptr [rip + 0x20772a]


0x6041:	push	r12
0x6043:	push	rbp
0x6044:	mov	r12d, edx
0x6047:	push	rbx
0x6048:	mov	rbp, rsi
0x604b:	mov	rbx, rdi
0x604e:	call	0x1880








0x1860:	jmp	qword ptr [rip + 0x2076b2]


0x5da6:	test	rdx, rdx
0x5da9:	je	0x5d7a




0x5bc1:	call	0x5660


0x5be5:	mov	dword ptr [rsp + 8], r10d
0x5bea:	jmp	0x5bc1


0x5b90:	cmp	r10d, 0x2f
0x5b94:	ja	0x5bec


0x5ac0:	mov	eax, dword ptr [r10]
0x5ac3:	cmp	eax, 0x2f
0x5ac6:	ja	0x5b0a






0x51c4:	pop	rbx
0x51c5:	mov	dword ptr [rip + 0x203ea9], 1
0x51cf:	pop	rbp
0x51d0:	pop	r12
0x51d2:	ret	


0x51b5:	mov	rdi, r12
0x51b8:	call	0x1680








0x391c:	mov	rax, rdi
0x391f:	jmp	0x38b8


0x382f:	mov	rax, qword ptr [rdi]
0x3832:	mov	r9, r12
0x3835:	movabs	rbp, 0xfefefefefefefeff
0x383f:	movabs	r15, 0x8080808080808080
0x3849:	xor	r9, rax
0x384c:	xor	rax, r13
0x384f:	lea	r8, [r9 + rbp]
0x3853:	not	r9
0x3856:	and	r8, r9
0x3859:	lea	r9, [rax + rbp]
0x385d:	not	rax
0x3860:	and	rax, r9
0x3863:	or	rax, r8
0x3866:	test	rax, r15
0x3869:	jne	0x3921


0x3793:	movzx	eax, byte ptr [rdi]
0x3796:	cmp	al, dl
0x3798:	je	0x38f8


0x3475:	add	rsp, 0x68
0x3479:	pop	rbx
0x347a:	pop	rbp
0x347b:	pop	r12
0x347d:	pop	r13
0x347f:	pop	r14
0x3481:	pop	r15
0x3483:	ret	


0x376a:	call	0x1770


0x349f:	mov	eax, dword ptr [rsp + 0x14]
0x34a3:	cmp	eax, -1
0x34a6:	je	0x35d0


0x2dcc:	test	bpl, bpl
0x2dcf:	jne	0x315d


0x2d40:	cmp	r8b, 0x2c
0x2d44:	mov	byte ptr [rsp + 8], r8b
0x2d49:	je	0x2d67


0x3019:	add	r14, 1
0x301d:	mov	r15d, 1
0x3023:	mov	ebx, 1
0x3028:	jmp	0x2d23


0x2cd2:	mov	ecx, 1
0x2cd7:	jmp	0x2cc3


0x2cc3:	test	rax, rax
0x2cc6:	js	0x2ccd


0x2c74:	mov	rax, rsi
0x2c77:	shr	rax, 1
0x2c7a:	lea	rsi, [rsi + rax + 1]
0x2c7f:	mov	qword ptr [rip + 0x2064aa], rsi
0x2c86:	shl	rsi, 4
0x2c8a:	call	0x5ce0


0x2ccd:	call	0x5ed0


0x1960:	jmp	qword ptr [rip + 0x207632]


0x19e0:	jmp	qword ptr [rip + 0x207612]






0x5d7a:	mov	qword ptr [rsi], rcx
0x5d7d:	imul	rcx, r9
0x5d81:	mov	rsi, rcx
0x5d84:	jmp	0x5ce0


0x38b8:	test	rcx, rcx
0x38bb:	je	0x38e5


0x386f:	lea	r9, [rcx - 8]
0x3873:	mov	rax, rdi
0x3876:	mov	r14, r9
0x3879:	and	r14d, 7
0x387d:	jmp	0x38ac


0x3921:	mov	rax, rdi
0x3924:	jmp	0x38bd


0x38f8:	pop	rbx
0x38f9:	mov	rax, rdi
0x38fc:	pop	rbp
0x38fd:	pop	r12
0x38ff:	pop	r13
0x3901:	pop	r14
0x3903:	pop	r15
0x3905:	ret	


0x379e:	cmp	al, sil
0x37a1:	jne	0x37ca


0x35d0:	mov	eax, dword ptr [rsp + 0x34]
0x35d4:	mov	dword ptr [rsp + 0x14], eax
0x35d8:	jmp	0x34ba


0x34ac:	mov	ebx, dword ptr [rsp + 0x34]
0x34b0:	cmp	ebx, -1
0x34b3:	cmove	ebx, eax
0x34b6:	mov	dword ptr [rsp + 0x34], ebx
0x34ba:	mov	rax, qword ptr [rsp + 0x20]
0x34bf:	mov	qword ptr [rsp + 0x28], r15
0x34c4:	lea	rbx, [r15 + rax]
0x34c8:	lea	rax, [rsp + 0x50]
0x34cd:	mov	qword ptr [rsp + 0x18], rax
0x34d2:	jmp	0x3569


0x2dd5:	test	r15, r15
0x2dd8:	sete	r9b
0x2ddc:	and	r9b, bl
0x2ddf:	mov	r13d, r9d
0x2de2:	jne	0x3106


0x315d:	test	byte ptr [rsp + 0x1c], 4
0x3162:	mov	edx, 5
0x3167:	je	0x31fa


0x2d67:	test	bpl, bpl
0x2d6a:	je	0x2e10


0x2d4b:	call	0x19d0


0x2d23:	mov	ebp, ebx
0x2d25:	xor	r13d, r13d
0x2d28:	xor	r12d, r12d
0x2d2b:	mov	qword ptr [rsp + 0x10], 1
0x2d34:	jmp	0x2dbe


0x2cc8:	test	rcx, rcx
0x2ccb:	je	0x2c7f




0x38e5:	xor	eax, eax
0x38e7:	pop	rbx
0x38e8:	pop	rbp
0x38e9:	pop	r12
0x38eb:	pop	r13
0x38ed:	pop	r14
0x38ef:	pop	r15
0x38f1:	ret	


0x38bd:	movzx	edi, byte ptr [rax]
0x38c0:	cmp	dil, dl
0x38c3:	je	0x38e7


0x38ac:	add	rax, 8
0x38b0:	cmp	r9, r14
0x38b3:	mov	rcx, r9
0x38b6:	jne	0x3880


0x37a3:	jmp	0x38f8


0x37ca:	add	rdi, 1
0x37ce:	sub	rcx, 1
0x37d2:	jne	0x37b0


0x34ba:	mov	rax, qword ptr [rsp + 0x20]
0x34bf:	mov	qword ptr [rsp + 0x28], r15
0x34c4:	lea	rbx, [r15 + rax]
0x34c8:	lea	rax, [rsp + 0x50]
0x34cd:	mov	qword ptr [rsp + 0x18], rax
0x34d2:	jmp	0x3569


0x3569:	mov	rsi, qword ptr [rsp + 0x18]
0x356e:	mov	rdi, r14
0x3571:	call	0x5ff0


0x2de8:	test	bl, bl
0x2dea:	jne	0x2f90


0x3106:	test	byte ptr [rsp + 0x1c], 4
0x310b:	mov	edx, 5
0x3110:	je	0x3138


0x31fa:	lea	rsi, [rip + 0x3c6a]
0x3201:	xor	edi, edi
0x3203:	call	0x1740


0x316d:	lea	rsi, [rip + 0x3d9c]
0x3174:	xor	edi, edi
0x3176:	call	0x1740


0x2e10:	test	r15, r15
0x2e13:	je	0x3106


0x2d70:	test	bl, bl
0x2d72:	jne	0x2f60


0x19d0:	jmp	qword ptr [rip + 0x2075fa]


0x2c7f:	mov	qword ptr [rip + 0x2064aa], rsi
0x2c86:	shl	rsi, 4
0x2c8a:	call	0x5ce0


0x38e7:	pop	rbx
0x38e8:	pop	rbp
0x38e9:	pop	r12
0x38eb:	pop	r13
0x38ed:	pop	r14
0x38ef:	pop	r15
0x38f1:	ret	


0x38c5:	cmp	dil, sil
0x38c8:	je	0x38e7


0x3880:	mov	rdi, qword ptr [rax]
0x3883:	mov	r10, rdi
0x3886:	xor	rdi, r13
0x3889:	xor	r10, r12
0x388c:	lea	r8, [r10 + rbp]
0x3890:	not	r10
0x3893:	and	r8, r10
0x3896:	lea	r10, [rdi + rbp]
0x389a:	not	rdi
0x389d:	and	rdi, r10
0x38a0:	or	r8, rdi
0x38a3:	test	r8, r15
0x38a6:	jne	0x38b8


0x37b0:	test	dil, 7
0x37b4:	je	0x37d4


0x2df0:	mov	r13d, ebx
0x2df3:	xor	r15d, r15d
0x2df6:	mov	ebp, 1
0x2dfb:	mov	qword ptr [rsp + 0x10], 1
0x2e04:	jmp	0x2dba


0x2f90:	mov	qword ptr [rsp + 0x10], r15
0x2f95:	mov	ebp, ebx
0x2f97:	xor	r15d, r15d
0x2f9a:	jmp	0x2dba


0x3138:	lea	rsi, [rip + 0x3d40]
0x313f:	xor	edi, edi
0x3141:	call	0x1740


0x3112:	lea	rsi, [rip + 0x3e17]
0x3119:	xor	edi, edi
0x311b:	call	0x1740


0x2e19:	mov	rsi, r15
0x2e1c:	mov	rdi, r15
0x2e1f:	call	0x2c10


0x2d78:	test	r12b, r12b
0x2d7b:	jne	0x2f70


0x2f60:	test	r12b, r12b
0x2f63:	je	0x2d96




0x38ca:	lea	rdx, [rax + rcx]
0x38ce:	jmp	0x38dc


0x38a8:	sub	r9, 8
0x38ac:	add	rax, 8
0x38b0:	cmp	r9, r14
0x38b3:	mov	rcx, r9
0x38b6:	jne	0x3880


0x37b6:	movzx	eax, byte ptr [rdi]
0x37b9:	cmp	al, r11b
0x37bc:	je	0x38f8


0x2dba:	add	r14, 1
0x2dbe:	movzx	r8d, byte ptr [r14]
0x2dc2:	cmp	r8b, 0x2d
0x2dc6:	jne	0x2d40


0x2d81:	mov	eax, dword ptr [rsp + 0x18]
0x2d85:	test	eax, eax
0x2d87:	je	0x31e9


0x2f70:	cmp	qword ptr [rsp + 0x10], r15
0x2f75:	ja	0x3148


0x2d96:	mov	rdi, qword ptr [rsp + 0x10]
0x2d9b:	mov	rsi, -1
0x2da2:	call	0x2c10


0x38dc:	add	rax, 1
0x38e0:	cmp	rax, rdx
0x38e3:	jne	0x38d0


0x37c2:	cmp	al, bl
0x37c4:	je	0x38f8


0x31e9:	mov	edx, 5
0x31ee:	lea	rsi, [rip + 0x3d6b]
0x31f5:	jmp	0x3154


0x2d8d:	mov	qword ptr [rsp + 0x10], 1
0x2d96:	mov	rdi, qword ptr [rsp + 0x10]
0x2d9b:	mov	rsi, -1
0x2da2:	call	0x2c10


0x2f7b:	mov	rdi, qword ptr [rsp + 0x10]
0x2f80:	mov	rsi, r15
0x2f83:	call	0x2c10


0x3148:	lea	rsi, [rip + 0x3d4b]
0x314f:	mov	edx, 5
0x3154:	xor	edi, edi
0x3156:	call	0x1740


0x38d0:	movzx	ecx, byte ptr [rax]
0x38d3:	cmp	cl, bl
0x38d5:	je	0x38e7


0x3154:	xor	edi, edi
0x3156:	call	0x1740


0x38d7:	cmp	cl, r11b
0x38da:	je	0x38e7


0x2f88:	jmp	0x2da7


0x2da7:	cmp	byte ptr [r14], 0
0x2dab:	je	0x2e2a


0x2e2a:	mov	rsi, qword ptr [rip + 0x20646f]
0x2e31:	test	rsi, rsi
0x2e34:	je	0x321d


0x2dad:	xor	r15d, r15d
0x2db0:	xor	r13d, r13d
0x2db3:	xor	ebp, ebp
0x2db5:	xor	r12d, r12d
0x2db8:	xor	ebx, ebx
0x2dba:	add	r14, 1
0x2dbe:	movzx	r8d, byte ptr [r14]
0x2dc2:	cmp	r8b, 0x2d
0x2dc6:	jne	0x2d40


0x321d:	test	byte ptr [rsp + 0x1c], 4
0x3222:	mov	edx, 5
0x3227:	je	0x327c


0x2e3a:	mov	rdi, qword ptr [rip + 0x206457]
0x2e41:	lea	rcx, [rip - 0x258]
0x2e48:	mov	edx, 0x10
0x2e4d:	xor	r15d, r15d
0x2e50:	xor	ebp, ebp
0x2e52:	call	0x16f0


0x327c:	lea	rsi, [rip + 0x3c6f]
0x3283:	jmp	0x3154


0x3229:	lea	rsi, [rip + 0x3da8]
0x3230:	xor	edi, edi
0x3232:	call	0x1740


0x16f0:	jmp	qword ptr [rip + 0x20776a]




0x2e24:	cmp	byte ptr [r14], 0
0x2e28:	jne	0x2dad


0x3576:	test	rax, rax
0x3579:	mov	r15, rax
0x357c:	jne	0x34e0


0x3582:	mov	rax, qword ptr [r14 + 8]
0x3586:	cmp	rax, qword ptr [r14 + 0x10]
0x358a:	jae	0x3700


0x34e0:	cmp	dword ptr [rsp + 0x14], -1
0x34e5:	mov	r13, qword ptr [rsp + 0x50]
0x34ea:	jne	0x3690


0x3590:	lea	rdx, [rax + 1]
0x3594:	mov	qword ptr [r14 + 8], rdx
0x3598:	movzx	eax, byte ptr [rax]
0x359b:	mov	dword ptr [rsp + 0x30], eax
0x359f:	mov	eax, dword ptr [rsp + 0x30]
0x35a3:	cmp	dword ptr [rsp + 0x14], eax
0x35a7:	mov	ecx, 2
0x35ac:	mov	qword ptr [rsp + 0x50], 1
0x35b5:	sete	r13b
0x35b9:	cmp	dword ptr [rsp + 0x34], eax
0x35bd:	sete	al
0x35c0:	or	r13d, eax
0x35c3:	jmp	0x34f7


0x3700:	mov	rdi, r14
0x3703:	call	0x1670


0x34f0:	lea	rcx, [r13 + 1]
0x34f4:	xor	r13d, r13d
0x34f7:	mov	rdi, qword ptr [rsp + 8]
0x34fc:	cmp	r12, rdi
0x34ff:	jae	0x350a


0x3690:	mov	edx, dword ptr [rsp + 0x34]
0x3694:	mov	esi, dword ptr [rsp + 0x14]
0x3698:	mov	rcx, r13
0x369b:	mov	rdi, rax
0x369e:	call	0x3770


0x34f7:	mov	rdi, qword ptr [rsp + 8]
0x34fc:	cmp	r12, rdi
0x34ff:	jae	0x350a


0x1670:	jmp	qword ptr [rip + 0x2077aa]


0x3501:	cmp	rbp, rcx
0x3504:	jb	0x35f0


0x350a:	cmp	rbp, 1
0x350e:	jbe	0x3546




0x35f0:	lea	rax, [r12 + 0x40]
0x35f5:	lea	rdx, [r12 + r12]
0x35f9:	cmp	r12, 0x3f
0x35fd:	cmovbe	rdx, rax
0x3601:	sub	rbx, qword ptr [rsp + 0x28]
0x3606:	mov	rsi, rdx
0x3609:	sub	rsi, rbx
0x360c:	lea	rax, [rbx + rcx]
0x3610:	cmp	rsi, rcx
0x3613:	cmovb	rdx, rax
0x3617:	cmp	r12, rdx
0x361a:	jae	0x3680


0x3546:	test	r15, r15
0x3549:	je	0x3560


0x3510:	lea	rcx, [rbp - 1]
0x3514:	cmp	qword ptr [rsp + 0x50], rcx
0x3519:	cmovbe	rcx, qword ptr [rsp + 0x50]
0x351f:	test	r15, r15
0x3522:	je	0x35e0


0x361c:	cmp	rdx, rdi
0x361f:	ja	0x3680


0x3680:	mov	rdx, qword ptr [rsp + 8]
0x3685:	jmp	0x3621


0x3560:	test	r13b, r13b
0x3563:	jne	0x3728


0x354b:	mov	rsi, qword ptr [rsp + 0x50]
0x3550:	mov	rdi, r14
0x3553:	call	0x6190


0x35e0:	movzx	eax, byte ptr [rsp + 0x30]
0x35e5:	mov	byte ptr [rbx], al
0x35e7:	jmp	0x3540


0x3528:	mov	rdx, rcx
0x352b:	mov	rsi, r15
0x352e:	mov	rdi, rbx
0x3531:	mov	qword ptr [rsp + 0x38], rcx
0x3536:	call	0x1870


0x3621:	mov	rax, qword ptr [rsp + 0x20]
0x3626:	cmp	rdx, rax
0x3629:	jns	0x3641


0x3728:	mov	r15, qword ptr [rsp + 0x28]
0x372d:	mov	rsi, qword ptr [rsp + 0x40]
0x3732:	mov	rax, qword ptr [rsp + 0x20]
0x3737:	mov	byte ptr [rbx], 0
0x373a:	mov	qword ptr [rsi], r15
0x373d:	mov	rsi, qword ptr [rsp + 0x48]
0x3742:	add	rax, r15
0x3745:	sub	rbx, rax
0x3748:	mov	rax, rbx
0x374b:	mov	qword ptr [rsi], r12
0x374e:	jne	0x3461


0x3540:	add	rbx, rcx
0x3543:	sub	rbp, rcx
0x3546:	test	r15, r15
0x3549:	je	0x3560


0x1870:	jmp	qword ptr [rip + 0x2076aa]


0x362b:	movabs	rdx, 0x8000000000000000
0x3635:	add	rdx, rax
0x3638:	cmp	r12, rdx
0x363b:	je	0x3760


0x3641:	mov	rdi, qword ptr [rsp + 0x28]
0x3646:	mov	rbp, rdx
0x3649:	mov	rsi, rdx
0x364c:	sub	rbp, rbx
0x364f:	mov	qword ptr [rsp + 0x38], rdx
0x3654:	call	0x18f0


0x3754:	jmp	0x345a


0x3461:	mov	rbx, qword ptr [rsp + 0x58]
0x3466:	xor	rbx, qword ptr fs:[0x28]
0x346f:	jne	0x376a




0x3760:	mov	r15, qword ptr [rsp + 0x28]
0x3765:	jmp	0x344a


0x345a:	mov	rax, -1
0x3461:	mov	rbx, qword ptr [rsp + 0x58]
0x3466:	xor	rbx, qword ptr fs:[0x28]
0x346f:	jne	0x376a


0x3558:	test	eax, eax
0x355a:	jne	0x3760


0x36a3:	test	rax, rax
0x36a6:	je	0x34f0


0x36ac:	sub	rax, r15
0x36af:	mov	r13d, 1
0x36b5:	lea	rdx, [rax + 1]
0x36b9:	lea	rcx, [rax + 2]
0x36bd:	mov	qword ptr [rsp + 0x50], rdx
0x36c2:	jmp	0x34f7


0x1f48:	mov	byte ptr [rip + 0x207199], 1
0x1f4f:	pop	rbp
0x1f50:	ret	


0x1fbb:	cmp	dword ptr [rip + 0x20714a], 1
0x1fc2:	mov	rax, qword ptr [rip + 0x2072cf]
0x1fc9:	mov	qword ptr [rip + 0x207150], rax
0x1fd0:	je	0x2513


0x2513:	xor	ebx, ebx
0x2515:	xor	r12d, r12d
0x2518:	nop	dword ptr [rax + rax]
0x2520:	mov	rax, qword ptr [r15 + 8]
0x2524:	cmp	rax, qword ptr [r15 + 0x10]
0x2528:	jae	0x25b7


0x1fd6:	mov	rax, qword ptr [r15 + 8]
0x1fda:	cmp	rax, qword ptr [r15 + 0x10]
0x1fde:	jae	0x243f


0x252e:	lea	rdx, [rax + 1]
0x2532:	movzx	esi, byte ptr [rip + 0x206ad7]
0x2539:	mov	qword ptr [r15 + 8], rdx
0x253d:	movzx	ebp, byte ptr [rax]
0x2540:	cmp	ebp, esi
0x2542:	je	0x2610


0x25b7:	mov	rdi, r15
0x25ba:	call	0x1670


0x1fe4:	lea	rdx, [rax + 1]
0x1fe8:	mov	qword ptr [r15 + 8], rdx
0x1fec:	movzx	edi, byte ptr [rax]
0x1fef:	mov	rsi, r15
0x1ff2:	mov	r13d, 1
0x1ff8:	call	0x18c0


0x243f:	mov	rdi, r15
0x2442:	call	0x1670


0x2610:	mov	rdi, qword ptr [rip + 0x206a91]
0x2617:	mov	rax, qword ptr [rdi + 0x28]
0x261b:	cmp	rax, qword ptr [rdi + 0x30]
0x261f:	jae	0x26cd


0x2548:	mov	rax, qword ptr [rip + 0x206bd1]
0x254f:	add	rbx, 1
0x2553:	cmp	rbx, qword ptr [rax + 8]
0x2557:	jbe	0x2564


0x18c0:	jmp	qword ptr [rip + 0x207682]


0x2625:	lea	rdx, [rax + 1]
0x2629:	mov	qword ptr [rdi + 0x28], rdx
0x262d:	mov	byte ptr [rax], sil
0x2630:	mov	rax, qword ptr [rip + 0x206c61]
0x2637:	xor	ebx, ebx
0x2639:	xor	r12d, r12d
0x263c:	mov	qword ptr [rip + 0x206add], rax
0x2643:	jmp	0x2520


0x26cd:	call	0x17a0


0x2564:	mov	rax, qword ptr [rax]
0x2567:	cmp	rbx, rax
0x256a:	jb	0x2520


0x2559:	add	rax, 0x10
0x255d:	mov	qword ptr [rip + 0x206bbc], rax
0x2564:	mov	rax, qword ptr [rax]
0x2567:	cmp	rbx, rax
0x256a:	jb	0x2520




0x2520:	mov	rax, qword ptr [r15 + 8]
0x2524:	cmp	rax, qword ptr [r15 + 0x10]
0x2528:	jae	0x25b7


0x17a0:	jmp	qword ptr [rip + 0x207712]


0x256c:	movzx	edx, byte ptr [rip + 0x206b95]
0x2573:	mov	rcx, qword ptr [rip + 0x206b2e]
0x257a:	test	dl, dl
0x257c:	je	0x2590




0x2590:	mov	rax, qword ptr [rcx + 0x28]
0x2594:	cmp	rax, qword ptr [rcx + 0x30]
0x2598:	jae	0x26d7


0x257e:	cmp	rbx, rax
0x2581:	sete	al
0x2584:	and	r12b, al
0x2587:	jne	0x26e8


0x259e:	lea	rdx, [rax + 1]
0x25a2:	mov	qword ptr [rcx + 0x28], rdx
0x25a6:	mov	byte ptr [rax], bpl
0x25a9:	mov	rax, qword ptr [r15 + 8]
0x25ad:	cmp	rax, qword ptr [r15 + 0x10]
0x25b1:	jb	0x252e


0x26d7:	movzx	esi, bpl
0x26db:	mov	rdi, rcx
0x26de:	call	0x17a0


0x258d:	mov	r12d, edx
0x2590:	mov	rax, qword ptr [rcx + 0x28]
0x2594:	cmp	rax, qword ptr [rcx + 0x30]
0x2598:	jae	0x26d7


0x26e8:	mov	rdx, qword ptr [rip + 0x206a11]
0x26ef:	mov	rdi, qword ptr [rip + 0x206a02]
0x26f6:	mov	esi, 1
0x26fb:	call	0x18e0


0x18e0:	jmp	qword ptr [rip + 0x207672]




0x61c6:	test	rax, rax
0x61c9:	mov	rbp, rax
0x61cc:	je	0x6278


0x6278:	mov	rdi, r12
0x627b:	call	0x1880


0x61d2:	lea	r13, [rsp + 8]
0x61d7:	jmp	0x61f4


0x61f4:	mov	rsi, r13
0x61f7:	mov	rdi, r12
0x61fa:	call	0x5ff0


0x61ff:	test	rax, rax
0x6202:	je	0x6224


0x6224:	mov	rdi, r12
0x6227:	call	0x17f0


0x6204:	mov	rax, qword ptr [rsp + 8]
0x6209:	test	rax, rax
0x620c:	je	0x6224


0x17f0:	jmp	qword ptr [rip + 0x2076ea]


0x620e:	cmp	rax, rbx
0x6211:	cmova	rax, rbx
0x6215:	add	qword ptr [r12 + 8], rax
0x621a:	sub	rbx, rax
0x621d:	je	0x6270




0x6270:	xor	eax, eax
0x6272:	jmp	0x6243


0x621f:	sub	rbp, rax
0x6222:	je	0x6278


0x6401:	test	rbp, rbp
0x6404:	je	0x6426


0x6426:	add	rsp, 8
0x642a:	pop	rbx
0x642b:	pop	rbp
0x642c:	pop	r12
0x642e:	pop	r13
0x6430:	pop	r14
0x6432:	pop	r15
0x6434:	ret	


0x6406:	xor	ebx, ebx
0x6408:	nop	dword ptr [rax + rax]
0x6410:	mov	rdx, r15
0x6413:	mov	rsi, r14
0x6416:	mov	edi, r13d
0x6419:	call	qword ptr [r12 + rbx*8]


0x622c:	cmp	eax, -1
0x622f:	jne	0x61e0


0x6231:	mov	rdi, r12
0x6234:	call	0x16e0


0x61e0:	sub	rbx, 1
0x61e4:	je	0x6270


0x16e0:	jmp	qword ptr [rip + 0x207772]


0x61ea:	sub	rbp, 1
0x61ee:	je	0x6278




0x2700:	mov	rcx, qword ptr [rip + 0x2069a1]
0x2707:	jmp	0x2590


0x26e3:	jmp	0x2520


0x26d2:	jmp	0x2630


0x2630:	mov	rax, qword ptr [rip + 0x206c61]
0x2637:	xor	ebx, ebx
0x2639:	xor	r12d, r12d
0x263c:	mov	qword ptr [rip + 0x206add], rax
0x2643:	jmp	0x2520


0x1ffd:	mov	rax, qword ptr [rip + 0x20711c]
0x2004:	cmp	qword ptr [rax], 1
0x2008:	seta	bpl
0x200c:	xor	bpl, byte ptr [rip + 0x2070f8]
0x2013:	xor	r12d, r12d
0x2016:	xor	r14d, r14d
0x2019:	nop	dword ptr [rax]
0x2020:	cmp	r13, 1
0x2024:	sete	bl
0x2027:	and	bl, bpl
0x202a:	jne	0x2130


0x2030:	mov	rax, qword ptr [rip + 0x2070e9]
0x2037:	cmp	qword ptr [rax], r13
0x203a:	ja	0x211a


0x2130:	movzx	r9d, byte ptr [rip + 0x206ed8]
0x2138:	movzx	r8d, byte ptr [rip + 0x206fc9]
0x2140:	sub	rsp, 8
0x2144:	push	r15
0x2146:	lea	rsi, [rip + 0x206fc3]
0x214d:	lea	rdi, [rip + 0x206fc4]
0x2154:	xor	edx, edx
0x2156:	mov	rcx, -1
0x215d:	call	0x33f0


0x2040:	test	r12b, r12b
0x2043:	je	0x20c9


0x211a:	mov	rax, qword ptr [r15 + 8]
0x211e:	cmp	rax, qword ptr [r15 + 0x10]
0x2122:	jb	0x20e0


0x20c9:	mov	rax, qword ptr [r15 + 8]
0x20cd:	cmp	rax, qword ptr [r15 + 0x10]
0x20d1:	jb	0x2070


0x2049:	mov	rcx, qword ptr [rip + 0x207058]
0x2050:	mov	rdx, qword ptr [rip + 0x2070a9]
0x2057:	mov	esi, 1
0x205c:	mov	rdi, qword ptr [rip + 0x207095]
0x2063:	call	0x18e0


0x20e0:	lea	rdx, [rax + 1]
0x20e4:	mov	qword ptr [r15 + 8], rdx
0x20e8:	movzx	eax, byte ptr [rax]
0x20eb:	movzx	ecx, byte ptr [rip + 0x207017]
0x20f2:	movzx	edx, byte ptr [rip + 0x206f17]
0x20f9:	cmp	ecx, eax
0x20fb:	mov	esi, ecx
0x20fd:	je	0x2240


0x2124:	mov	rdi, r15
0x2127:	call	0x1670


0x2070:	lea	rdx, [rax + 1]
0x2074:	mov	qword ptr [r15 + 8], rdx
0x2078:	movzx	ebx, byte ptr [rax]
0x207b:	movzx	eax, byte ptr [rip + 0x207087]
0x2082:	movzx	edx, byte ptr [rip + 0x206f87]
0x2089:	cmp	ebx, eax
0x208b:	mov	esi, eax
0x208d:	je	0x2270


0x20d3:	mov	rdi, r15
0x20d6:	call	0x1670


0x2240:	cmp	sil, dl
0x2243:	mov	ecx, r14d
0x2246:	mov	r14d, eax
0x2249:	je	0x2281


0x2103:	movzx	ecx, dl
0x2106:	cmp	eax, ecx
0x2108:	je	0x22b8


0x2270:	cmp	sil, dl
0x2273:	mov	ecx, r14d
0x2276:	mov	r12d, 1
0x227c:	mov	r14d, ebx
0x227f:	jne	0x224b


0x2093:	movzx	eax, dl
0x2096:	cmp	ebx, eax
0x2098:	je	0x2370


0x2281:	mov	rax, qword ptr [r15 + 8]
0x2285:	cmp	rax, qword ptr [r15 + 0x10]
0x2289:	jae	0x2690


0x224b:	mov	rax, qword ptr [rip + 0x206ece]
0x2252:	add	r13, 1
0x2256:	cmp	r13, qword ptr [rax + 8]
0x225a:	jbe	0x2020


0x22b8:	cmp	sil, dl
0x22bb:	mov	ecx, r14d
0x22be:	mov	r14d, eax
0x22c1:	movzx	eax, sil
0x22c5:	je	0x2389


0x210e:	cmp	eax, -1
0x2111:	je	0x23b8


0x2370:	cmp	sil, dl
0x2373:	mov	ecx, r14d
0x2376:	mov	r12d, 1
0x237c:	mov	r14d, ebx
0x237f:	movzx	eax, sil
0x2383:	jne	0x22cb


0x209e:	cmp	ebx, -1
0x20a1:	je	0x23a0


0x228f:	lea	rdx, [rax + 1]
0x2293:	mov	qword ptr [r15 + 8], rdx
0x2297:	movzx	edi, byte ptr [rax]
0x229a:	mov	rsi, r15
0x229d:	mov	dword ptr [rsp + 0xc], ecx
0x22a1:	call	0x18c0


0x2690:	mov	rdi, r15
0x2693:	mov	dword ptr [rsp + 0xc], ecx
0x2697:	call	0x1670


0x2020:	cmp	r13, 1
0x2024:	sete	bl
0x2027:	and	bl, bpl
0x202a:	jne	0x2130


0x2260:	add	rax, 0x10
0x2264:	mov	qword ptr [rip + 0x206eb5], rax
0x226b:	jmp	0x2020


0x2389:	cmp	eax, r14d
0x238c:	jne	0x22db


0x22cb:	cmp	eax, r14d
0x22ce:	movzx	edx, byte ptr [rip + 0x206d3b]
0x22d5:	je	0x224b


0x23b8:	mov	ecx, r14d
0x23bb:	jmp	0x23a9


0x2117:	mov	r14d, eax
0x211a:	mov	rax, qword ptr [r15 + 8]
0x211e:	cmp	rax, qword ptr [r15 + 0x10]
0x2122:	jb	0x20e0


0x23a0:	mov	ecx, r14d
0x23a3:	mov	r12d, 1
0x23a9:	mov	r14d, 0xffffffff
0x23af:	jmp	0x22db


0x20a7:	mov	rdi, qword ptr [rip + 0x206ffa]
0x20ae:	mov	rax, qword ptr [rdi + 0x28]
0x20b2:	cmp	rax, qword ptr [rdi + 0x30]
0x20b6:	jae	0x21f8


0x2392:	jmp	0x2281


0x22db:	cmp	r14d, -1
0x22df:	movzx	eax, dl
0x22e2:	sete	bl
0x22e5:	cmp	eax, r14d
0x22e8:	sete	dil
0x22ec:	test	bl, bl
0x22ee:	jne	0x22f9


0x23a9:	mov	r14d, 0xffffffff
0x23af:	jmp	0x22db


0x20bc:	lea	rdx, [rax + 1]
0x20c0:	mov	qword ptr [rdi + 0x28], rdx
0x20c4:	mov	byte ptr [rax], bl
0x20c6:	mov	r14d, ebx
0x20c9:	mov	rax, qword ptr [r15 + 8]
0x20cd:	cmp	rax, qword ptr [r15 + 0x10]
0x20d1:	jb	0x2070


0x21f8:	movzx	esi, bl
0x21fb:	call	0x17a0


0x22f0:	test	dil, dil
0x22f3:	je	0x2020


0x22f9:	test	r12b, r12b
0x22fc:	jne	0x230d


0x22fe:	cmp	byte ptr [rip + 0x206e06], 1
0x2305:	jne	0x230d


0x230d:	cmp	eax, ecx
0x230f:	setne	r9b
0x2313:	cmp	sil, dl
0x2316:	sete	cl
0x2319:	or	r9b, cl
0x231c:	jne	0x2323


0x2307:	cmp	r13, 1
0x230b:	je	0x2342


0x231e:	test	dil, dil
0x2321:	je	0x2342


0x2323:	mov	rdi, qword ptr [rip + 0x206d7e]
0x232a:	mov	rcx, qword ptr [rdi + 0x28]
0x232e:	cmp	rcx, qword ptr [rdi + 0x30]
0x2332:	jae	0x2648


0x2342:	test	bl, bl
0x2344:	jne	0x2458


0x2338:	lea	rax, [rcx + 1]
0x233c:	mov	qword ptr [rdi + 0x28], rax
0x2340:	mov	byte ptr [rcx], dl
0x2342:	test	bl, bl
0x2344:	jne	0x2458


0x2648:	mov	esi, eax
0x264a:	call	0x17a0


0x234a:	mov	rax, qword ptr [rip + 0x206f47]
0x2351:	xor	r12d, r12d
0x2354:	mov	r13d, 1
0x235a:	mov	qword ptr [rip + 0x206dbf], rax
0x2361:	jmp	0x2020


0x2458:	mov	eax, dword ptr [r15]
0x245b:	test	al, 0x20
0x245d:	jne	0x24bc


0x245f:	mov	rsi, qword ptr [rsp]
0x2463:	lea	rdi, [rip + 0x4bf8]
0x246a:	mov	ecx, 2
0x246f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x24bc:	mov	rdx, qword ptr [rsp]
0x24c0:	mov	esi, 3
0x24c5:	xor	edi, edi
0x24c7:	call	0x5470


0x246f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2471:	mov	rdi, r15
0x2474:	seta	al
0x2477:	sbb	al, 0
0x2479:	test	al, al
0x247b:	je	0x24fa


0x24fa:	call	0x1700


0x247d:	call	0x5f30


0x1700:	jmp	qword ptr [rip + 0x207762]




0x264f:	jmp	0x2342


0x2200:	jmp	0x20c6


0x20c6:	mov	r14d, ebx
0x20c9:	mov	rax, qword ptr [r15 + 8]
0x20cd:	cmp	rax, qword ptr [r15 + 0x10]
0x20d1:	jb	0x2070


0x22a6:	movzx	eax, byte ptr [rip + 0x206e5c]
0x22ad:	mov	ecx, dword ptr [rsp + 0xc]
0x22b1:	mov	esi, eax
0x22b3:	jmp	0x22cb


0x2068:	jmp	0x20c9


0x2162:	mov	r13, rax
0x2165:	test	r13, r13
0x2168:	pop	rax
0x2169:	pop	rdx
0x216a:	js	0x2669


0x2669:	mov	rdi, qword ptr [rip + 0x206aa8]
0x2670:	call	0x1680


0x2170:	je	0x2738


0x2738:	lea	rcx, [rip + 0x4721]
0x273f:	lea	rsi, [rip + 0x3d3e]
0x2746:	lea	rdi, [rip + 0x3d53]
0x274d:	mov	edx, 0x149
0x2752:	call	0x17d0


0x2176:	mov	rdi, qword ptr [rip + 0x206f9b]
0x217d:	movzx	eax, byte ptr [rip + 0x206f85]
0x2184:	lea	rdx, [r13 - 1]
0x2188:	cmp	byte ptr [rdi + r13 - 1], al
0x218d:	je	0x2208


0x17d0:	jmp	qword ptr [rip + 0x2076fa]


0x2208:	mov	rax, qword ptr [rip + 0x206f11]
0x220f:	cmp	qword ptr [rax], 1
0x2213:	jbe	0x23e0


0x218f:	cmp	byte ptr [rip + 0x206f75], 0
0x2196:	jne	0x23d0




0x23e0:	mov	rcx, qword ptr [rip + 0x206cc1]
0x23e7:	mov	esi, 1
0x23ec:	call	0x18e0


0x2219:	cmp	qword ptr [rax + 8], 1
0x221e:	ja	0x23c0


0x219c:	mov	rcx, qword ptr [rip + 0x206f05]
0x21a3:	mov	rdx, r13
0x21a6:	mov	esi, 1
0x21ab:	call	0x18e0


0x23d0:	mov	r13d, 1
0x23d6:	xor	r14d, r14d
0x23d9:	jmp	0x2020


0x2224:	add	rax, 0x10
0x2228:	mov	r13d, 2
0x222e:	xor	r14d, r14d
0x2231:	mov	qword ptr [rip + 0x206ee8], rax
0x2238:	jmp	0x2037


0x23c0:	mov	r13d, 2
0x23c6:	xor	r14d, r14d
0x23c9:	jmp	0x2037


0x2037:	cmp	qword ptr [rax], r13
0x203a:	ja	0x211a


0x21b0:	mov	rdx, qword ptr [rip + 0x206f61]
0x21b7:	movzx	r14d, byte ptr [rip + 0x206e51]
0x21bf:	movsx	edx, byte ptr [rdx + r13 - 1]
0x21c5:	cmp	edx, r14d
0x21c8:	je	0x21ea


0x21ea:	mov	r13d, 1
0x21f0:	jmp	0x2020


0x21ca:	mov	rdi, qword ptr [rip + 0x206ed7]
0x21d1:	mov	rdx, qword ptr [rdi + 0x28]
0x21d5:	cmp	rdx, qword ptr [rdi + 0x30]
0x21d9:	jae	0x2654


0x21df:	lea	rcx, [rdx + 1]
0x21e3:	mov	qword ptr [rdi + 0x28], rcx
0x21e7:	mov	byte ptr [rdx], r14b
0x21ea:	mov	r13d, 1
0x21f0:	jmp	0x2020


0x2654:	mov	esi, r14d
0x2657:	call	0x17a0


0x265c:	movzx	r14d, byte ptr [rip + 0x2069ac]
0x2664:	jmp	0x21ea


0x23f1:	movzx	eax, byte ptr [rip + 0x206c18]
0x23f8:	cmp	byte ptr [rip + 0x206d0b], al
0x23fe:	je	0x240f


0x240f:	mov	rax, qword ptr [r15 + 8]
0x2413:	cmp	rax, qword ptr [r15 + 0x10]
0x2417:	jae	0x270c


0x2400:	mov	rax, qword ptr [rip + 0x206d19]
0x2407:	mov	r12d, ebx
0x240a:	jmp	0x2219


0x241d:	lea	rdx, [rax + 1]
0x2421:	mov	qword ptr [r15 + 8], rdx
0x2425:	movzx	edi, byte ptr [rax]
0x2428:	mov	rsi, r15
0x242b:	mov	r12d, ebx
0x242e:	call	0x18c0


0x270c:	mov	rdi, r15
0x270f:	call	0x1670


0x2433:	mov	rax, qword ptr [rip + 0x206ce6]
0x243a:	jmp	0x2219


0x353b:	mov	rcx, qword ptr [rsp + 0x38]
0x3540:	add	rbx, rcx
0x3543:	sub	rbp, rcx
0x3546:	test	r15, r15
0x3549:	je	0x3560


0x2714:	cmp	eax, -1
0x2717:	mov	edi, eax
0x2719:	jne	0x2428


0x271f:	mov	rax, qword ptr [rip + 0x2069fa]
0x2726:	jmp	0x2219


0x2428:	mov	rsi, r15
0x242b:	mov	r12d, ebx
0x242e:	call	0x18c0


0x269c:	cmp	eax, -1
0x269f:	mov	edi, eax
0x26a1:	mov	ecx, dword ptr [rsp + 0xc]
0x26a5:	jne	0x229a


0x26ab:	movzx	eax, byte ptr [rip + 0x20695e]
0x26b2:	movzx	esi, byte ptr [rip + 0x206a50]
0x26b9:	mov	r14d, 0xffffffff
0x26bf:	xor	edi, edi
0x26c1:	mov	ebx, 1
0x26c6:	mov	edx, eax
0x26c8:	jmp	0x22f9


0x229a:	mov	rsi, r15
0x229d:	mov	dword ptr [rsp + 0xc], ecx
0x22a1:	call	0x18c0


0x20db:	mov	ebx, eax
0x20dd:	jmp	0x207b


0x207b:	movzx	eax, byte ptr [rip + 0x207087]
0x2082:	movzx	edx, byte ptr [rip + 0x206f87]
0x2089:	cmp	ebx, eax
0x208b:	mov	esi, eax
0x208d:	je	0x2270


0x212c:	jmp	0x20eb


0x20eb:	movzx	ecx, byte ptr [rip + 0x207017]
0x20f2:	movzx	edx, byte ptr [rip + 0x206f17]
0x20f9:	cmp	ecx, eax
0x20fb:	mov	esi, ecx
0x20fd:	je	0x2240


0x2447:	cmp	eax, -1
0x244a:	mov	edi, eax
0x244c:	jne	0x1fef


0x1fef:	mov	rsi, r15
0x1ff2:	mov	r13d, 1
0x1ff8:	call	0x18c0


0x25bf:	movzx	esi, byte ptr [rip + 0x206a4a]
0x25c6:	mov	ebp, eax
0x25c8:	cmp	ebp, esi
0x25ca:	je	0x2610


0x25cc:	cmp	ebp, -1
0x25cf:	jne	0x2548


0x25d5:	test	rbx, rbx
0x25d8:	je	0x2458


0x25de:	mov	rdi, qword ptr [rip + 0x206ac3]
0x25e5:	mov	rdx, qword ptr [rdi + 0x28]
0x25e9:	cmp	rdx, qword ptr [rdi + 0x30]
0x25ed:	jae	0x272b


0x25f3:	lea	rcx, [rdx + 1]
0x25f7:	mov	qword ptr [rdi + 0x28], rcx
0x25fb:	mov	byte ptr [rdx], sil
0x25fe:	mov	eax, dword ptr [r15]
0x2601:	jmp	0x245b


0x272b:	call	0x17a0


0x245b:	test	al, 0x20
0x245d:	jne	0x24bc


0x2730:	mov	eax, dword ptr [r15]
0x2733:	jmp	0x245b


0x3708:	cmp	eax, -1
0x370b:	mov	dword ptr [rsp + 0x30], eax
0x370f:	jne	0x359f


0x3715:	mov	r15, qword ptr [rsp + 0x28]
0x371a:	cmp	rbx, r15
0x371d:	jne	0x372d


0x359f:	mov	eax, dword ptr [rsp + 0x30]
0x35a3:	cmp	dword ptr [rsp + 0x14], eax
0x35a7:	mov	ecx, 2
0x35ac:	mov	qword ptr [rsp + 0x50], 1
0x35b5:	sete	r13b
0x35b9:	cmp	dword ptr [rsp + 0x34], eax
0x35bd:	sete	al
0x35c0:	or	r13d, eax
0x35c3:	jmp	0x34f7


0x371f:	jmp	0x344a


0x372d:	mov	rsi, qword ptr [rsp + 0x40]
0x3732:	mov	rax, qword ptr [rsp + 0x20]
0x3737:	mov	byte ptr [rbx], 0
0x373a:	mov	qword ptr [rsi], r15
0x373d:	mov	rsi, qword ptr [rsp + 0x48]
0x3742:	add	rax, r15
0x3745:	sub	rbx, rax
0x3748:	mov	rax, rbx
0x374b:	mov	qword ptr [rsi], r12
0x374e:	jne	0x3461


0x2e57:	mov	rbx, qword ptr [rip + 0x206442]
0x2e5e:	mov	rcx, qword ptr [rip + 0x206433]
0x2e65:	cmp	r15, rbx
0x2e68:	jae	0x2efd


0x2efd:	test	byte ptr [rsp + 0x1c], 2
0x2f02:	jne	0x302d


0x2e79:	mov	r13, r15
0x2e7c:	lea	rdx, [rcx + rbp]
0x2e80:	shl	r13, 4
0x2e84:	lea	rdi, [rcx + r13]
0x2e88:	mov	rax, qword ptr [rdx + 8]
0x2e8c:	cmp	rax, qword ptr [rdi]
0x2e8f:	jb	0x2ef0


0x2ef0:	add	rbp, 0x10
0x2ef4:	cmp	r15, rbx
0x2ef7:	jb	0x2e70


0x2f08:	add	rbx, 1
0x2f0c:	mov	rdi, rcx
0x2f0f:	mov	rsi, rbx
0x2f12:	mov	qword ptr [rip + 0x206387], rbx
0x2f19:	shl	rsi, 4
0x2f1d:	call	0x5ce0


0x302d:	mov	rax, qword ptr [rcx]
0x3030:	mov	qword ptr [rip + 0x20625d], 0
0x303b:	mov	qword ptr [rip + 0x20625a], 0
0x3046:	mov	qword ptr [rip + 0x2060df], 0
0x3051:	cmp	rax, 1
0x3055:	ja	0x30e9


0x2e91:	lea	r14, [rbp + 0x20]
0x2e95:	jmp	0x2eb1


0x2e70:	add	r15, 1
0x2e74:	cmp	r15, rbx
0x2e77:	jae	0x2ef0


0x305b:	cmp	rbx, 1
0x305f:	jbe	0x30a5


0x30e9:	lea	rsi, [rax - 1]
0x30ed:	mov	edi, 1
0x30f2:	mov	qword ptr [rsp + 8], rcx
0x30f7:	call	0x2c10


0x2eb1:	cmp	qword ptr [rdi + 8], rax
0x2eb5:	lea	rsi, [rcx + r14]
0x2eb9:	cmovae	rax, qword ptr [rdi + 8]
0x2ebe:	sub	rbx, r15
0x2ec1:	shl	rbx, 4
0x2ec5:	mov	qword ptr [rdx + 8], rax
0x2ec9:	lea	rdx, [rbx - 0x10]
0x2ecd:	call	0x1930


0x30a5:	shl	rbx, 4
0x30a9:	mov	rax, qword ptr [rcx + rbx - 8]
0x30ae:	cmp	rax, -1
0x30b2:	je	0x30ce


0x3061:	mov	rax, rbx
0x3064:	lea	rbp, [rcx + 8]
0x3068:	shl	rax, 4
0x306c:	lea	r12, [rcx + rax - 8]
0x3071:	nop	dword ptr [rax]
0x3078:	mov	rax, qword ptr [rbp]
0x307c:	lea	rdi, [rax + 1]
0x3080:	mov	rax, qword ptr [rbp + 8]
0x3084:	cmp	rdi, rax
0x3087:	je	0x309c


0x1930:	jmp	qword ptr [rip + 0x20764a]


0x30ce:	mov	rdi, rcx
0x30d1:	call	0x1680


0x30b4:	lea	rdi, [rax + 1]
0x30b8:	mov	rsi, -1
0x30bf:	mov	qword ptr [rsp + 8], rcx
0x30c4:	call	0x2c10


0x309c:	add	rbp, 0x10
0x30a0:	cmp	r12, rbp
0x30a3:	jne	0x3078


0x3089:	lea	rsi, [rax - 1]
0x308d:	mov	qword ptr [rsp + 8], rcx
0x3092:	call	0x2c10




0x3078:	mov	rax, qword ptr [rbp]
0x307c:	lea	rdi, [rax + 1]
0x3080:	mov	rax, qword ptr [rbp + 8]
0x3084:	cmp	rdi, rax
0x3087:	je	0x309c


0x3097:	mov	rcx, qword ptr [rsp + 8]
0x309c:	add	rbp, 0x10
0x30a0:	cmp	r12, rbp
0x30a3:	jne	0x3078


0x30c9:	mov	rcx, qword ptr [rsp + 8]
0x30ce:	mov	rdi, rcx
0x30d1:	call	0x1680


0x30fc:	mov	rcx, qword ptr [rsp + 8]
0x3101:	jmp	0x305b


0x2d50:	movzx	edx, byte ptr [rsp + 8]
0x2d55:	mov	r10, qword ptr [rax]
0x2d58:	test	byte ptr [r10 + rdx*2], 1
0x2d5d:	jne	0x2d67


0x2d5f:	test	dl, dl
0x2d61:	jne	0x2fa0


0x2fa0:	movsx	eax, dl
0x2fa3:	lea	edx, [rax - 0x30]
0x2fa6:	cmp	edx, 9
0x2fa9:	ja	0x323c


0x2faf:	test	r13b, r13b
0x2fb2:	je	0x3010


0x323c:	mov	rdi, r14
0x323f:	call	0x5640


0x3010:	mov	qword ptr [rip + 0x206111], r14
0x3017:	jmp	0x2fbe


0x2fb4:	cmp	qword ptr [rip + 0x20616c], 0
0x2fbc:	je	0x3010


0x2fbe:	test	bpl, bpl
0x2fc1:	mov	edx, 1
0x2fc6:	movabs	rcx, 0x1999999999999999
0x2fd0:	cmovne	r12d, ebp
0x2fd4:	cmove	ebx, edx
0x2fd7:	cmp	r15, rcx
0x2fda:	ja	0x317d


0x2fe0:	sub	eax, 0x30
0x2fe3:	lea	rdx, [r15 + r15*4]
0x2fe7:	cdqe	
0x2fe9:	lea	rax, [rax + rdx*2]
0x2fed:	cmp	rax, r15
0x2ff0:	jb	0x317d


0x317d:	mov	rbx, qword ptr [rip + 0x205fa4]
0x3184:	lea	rsi, [rip + 0x3d28]
0x318b:	mov	rdi, rbx
0x318e:	call	0x1800


0x2ff6:	cmp	rax, -1
0x2ffa:	je	0x317d


0x1800:	jmp	qword ptr [rip + 0x2076e2]


0x3000:	mov	r15, rax
0x3003:	mov	r13d, 1
0x3009:	jmp	0x2dba




0x24b0:	test	rax, rax
0x24b3:	mov	r15, rax
0x24b6:	jne	0x1fae


0x1fae:	mov	esi, 2
0x1fb3:	mov	rdi, r15
0x1fb6:	call	0x33c0


0x5e6f:	test	rax, rax
0x5e72:	je	0x5e79


0x5e74:	add	rsp, 8
0x5e78:	ret	


0x3943:	test	rax, rax
0x3946:	je	0x399d


0x399d:	mov	qword ptr [rip + 0x2057a4], rbx
0x39a4:	mov	qword ptr [rip + 0x20571d], rbx
0x39ab:	pop	rbx
0x39ac:	ret	


0x3948:	lea	r8, [rax + 1]
0x394c:	mov	rdx, r8
0x394f:	sub	rdx, rbx
0x3952:	cmp	rdx, 6
0x3956:	jle	0x399d


0x3958:	lea	rsi, [rax - 6]
0x395c:	lea	rdi, [rip + 0x36f5]
0x3963:	mov	ecx, 7
0x3968:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3968:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x396a:	seta	dl
0x396d:	sbb	dl, 0
0x3970:	test	dl, dl
0x3972:	jne	0x399d


0x3974:	lea	rdi, [rip + 0x36e5]
0x397b:	mov	ecx, 3
0x3980:	mov	rsi, r8
0x3983:	mov	rbx, r8
0x3986:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3986:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3988:	seta	dl
0x398b:	sbb	dl, 0
0x398e:	test	dl, dl
0x3990:	jne	0x399d


0x3992:	lea	rbx, [rax + 4]
0x3996:	mov	qword ptr [rip + 0x205703], rbx
0x399d:	mov	qword ptr [rip + 0x2057a4], rbx
0x39a4:	mov	qword ptr [rip + 0x20571d], rbx
0x39ab:	pop	rbx
0x39ac:	ret	


0x39ca:	call	0x1690


0x569c:	lea	rsi, [rip + 0x1eb8]
0x56a3:	xor	edi, edi
0x56a5:	mov	edx, 5
0x56aa:	call	0x1740


0x57b1:	jmp	0x569c


0x3659:	test	rax, rax
0x365c:	je	0x3760


0x3662:	mov	rdx, qword ptr [rsp + 0x38]
0x3667:	add	rbx, rax
0x366a:	mov	qword ptr [rsp + 0x28], rax
0x366f:	mov	r12, rdx
0x3672:	jmp	0x350a


0x5cf6:	test	rax, rax
0x5cf9:	jne	0x5d00


0x5cfb:	test	rbx, rbx
0x5cfe:	jne	0x5d11


0x5d00:	pop	rbx
0x5d01:	ret	


0x5d11:	call	0x5ed0


0x2f22:	mov	rdx, qword ptr [rip + 0x206377]
0x2f29:	mov	qword ptr [rip + 0x206368], rax
0x2f30:	shl	rdx, 4
0x2f34:	lea	rax, [rax + rdx - 0x10]
0x2f39:	mov	rdx, -1
0x2f40:	mov	qword ptr [rax + 8], rdx
0x2f44:	mov	qword ptr [rax], rdx
0x2f47:	add	rsp, 0x28
0x2f4b:	pop	rbx
0x2f4c:	pop	rbp
0x2f4d:	pop	r12
0x2f4f:	pop	r13
0x2f51:	pop	r14
0x2f53:	pop	r15
0x2f55:	ret	


0x2c8f:	mov	rsi, qword ptr [rip + 0x20660a]
0x2c96:	mov	rdi, rax
0x2c99:	mov	qword ptr [rip + 0x2065f8], rax
0x2ca0:	jmp	0x2c33


0x5fbe:	test	eax, eax
0x5fc0:	je	0x5fca


0x5fc2:	test	dword ptr [rbx], 0x100
0x5fc8:	jne	0x5fd8


0x5fd8:	mov	rdi, rbx
0x5fdb:	mov	edx, 1
0x5fe0:	xor	esi, esi
0x5fe2:	call	0x6020


0x1a1c:	lea	rsi, [rip + 0x5b7e]
0x1a23:	mov	edi, 6
0x1a28:	call	0x1900


0x30d6:	mov	rbx, qword ptr [rip + 0x2061c3]
0x30dd:	mov	rcx, qword ptr [rip + 0x2061b4]
0x30e4:	jmp	0x2f08


0x2675:	mov	eax, dword ptr [r15]
0x2678:	mov	qword ptr [rip + 0x206a95], 0
0x2683:	test	al, 0x30
0x2685:	jne	0x245b


0x268b:	call	0x5ed0


0x51bd:	mov	qword ptr [rip + 0x203ebc], rbx
0x51c4:	pop	rbx
0x51c5:	mov	dword ptr [rip + 0x203ea9], 1
0x51cf:	pop	rbp
0x51d0:	pop	r12
0x51d2:	ret	


0x5197:	mov	qword ptr [rip + 0x203eee], 0x100
0x51a2:	mov	qword ptr [rip + 0x203eef], rbx
0x51a9:	lea	rbx, [rip + 0x203ee0]
0x51b0:	cmp	r12, rbx
0x51b3:	je	0x51c4


0x5d0d:	xor	eax, eax
0x5d0f:	pop	rbx
0x5d10:	ret	


0x517c:	cmp	rbx, rbp
0x517f:	jne	0x5170


0x5170:	mov	rdi, qword ptr [rbx]
0x5173:	add	rbx, 0x10
0x5177:	call	0x1680


0x32c6:	mov	qword ptr [rip + 0x205fc7], 0
0x32d1:	add	rsp, 8
0x32d5:	ret	


0x3b31:	cmp	r15d, 0xa
0x3b35:	mov	qword ptr [rsp + 0x58], rax
0x3b3a:	ja	0x4cef


0x3b40:	lea	rcx, [rip + 0x3599]
0x3b47:	mov	edx, r15d
0x3b4a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x3b4e:	add	rax, rcx
0x3b51:	jmp	rax


0x4cef:	call	0x1690


0x4d21:	mov	r13, rax
0x4d24:	mov	eax, dword ptr [rax]
0x4d26:	test	r15d, r15d
0x4d29:	mov	rbx, qword ptr [rip + 0x204350]
0x4d30:	mov	dword ptr [rsp + 0x18], eax
0x4d34:	js	0x4ea1


0x4ea1:	call	0x1690


0x4d3a:	cmp	dword ptr [rip + 0x204337], r15d
0x4d41:	jg	0x4da5


0x4d43:	cmp	r15d, 0x7fffffff
0x4d4a:	je	0x4ea6


0x4da5:	mov	eax, dword ptr [rbp + 4]
0x4da8:	shl	r15, 4
0x4dac:	sub	rsp, 8
0x4db0:	add	rbx, r15
0x4db3:	lea	r15, [rbp + 8]
0x4db7:	mov	r8d, dword ptr [rbp]
0x4dbb:	mov	r11, qword ptr [rbx]
0x4dbe:	mov	r12, qword ptr [rbx + 8]
0x4dc2:	mov	rcx, r14
0x4dc5:	or	eax, 1
0x4dc8:	mov	dword ptr [rsp + 0x24], eax
0x4dcc:	push	qword ptr [rbp + 0x30]
0x4dcf:	mov	r9d, eax
0x4dd2:	push	qword ptr [rbp + 0x28]
0x4dd5:	push	r15
0x4dd7:	mov	rsi, r11
0x4dda:	mov	rdx, qword ptr [rsp + 0x28]
0x4ddf:	mov	rdi, r12
0x4de2:	mov	qword ptr [rsp + 0x30], r11
0x4de7:	call	0x3ac0


0x4ea6:	call	0x5ed0


0x4d50:	lea	r12d, [r15 + 1]
0x4d54:	lea	rax, [rip + 0x204335]
0x4d5b:	movsxd	rsi, r12d
0x4d5e:	shl	rsi, 4
0x4d62:	cmp	rbx, rax
0x4d65:	je	0x4e80


0x4e80:	xor	edi, edi
0x4e82:	call	0x5ce0


0x4d6b:	mov	rdi, rbx
0x4d6e:	call	0x5ce0


0x4d73:	mov	rbx, rax
0x4d76:	mov	qword ptr [rip + 0x204303], rax
0x4d7d:	movsxd	rdi, dword ptr [rip + 0x2042f4]
0x4d84:	mov	edx, r12d
0x4d87:	xor	esi, esi
0x4d89:	sub	edx, edi
0x4d8b:	shl	rdi, 4
0x4d8f:	movsxd	rdx, edx
0x4d92:	add	rdi, rbx
0x4d95:	shl	rdx, 4
0x4d99:	call	0x17e0


0x17e0:	jmp	qword ptr [rip + 0x2076f2]




0x4e87:	movdqa	xmm0, xmmword ptr [rip + 0x204201]
0x4e8f:	mov	rbx, rax
0x4e92:	mov	qword ptr [rip + 0x2041e7], rax
0x4e99:	movups	xmmword ptr [rax], xmm0
0x4e9c:	jmp	0x4d7d


0x4d7d:	movsxd	rdi, dword ptr [rip + 0x2042f4]
0x4d84:	mov	edx, r12d
0x4d87:	xor	esi, esi
0x4d89:	sub	edx, edi
0x4d8b:	shl	rdi, 4
0x4d8f:	movsxd	rdx, edx
0x4d92:	add	rdi, rbx
0x4d95:	shl	rdx, 4
0x4d99:	call	0x17e0


0x4ebc:	mov	r12d, dword ptr [rax]
0x4ebf:	mov	rbp, rax
0x4ec2:	lea	rax, [rip + 0x204397]
0x4ec9:	test	rbx, rbx
0x4ecc:	mov	esi, 0x38
0x4ed1:	cmove	rbx, rax
0x4ed5:	mov	rdi, rbx
0x4ed8:	call	0x5e80


0x4ff2:	mov	r12d, dword ptr [rax]
0x4ff5:	mov	rbp, rax
0x4ff8:	lea	rax, [rbx + 8]
0x4ffc:	sub	rsp, 8
0x5000:	mov	r9d, dword ptr [rbx + 4]
0x5004:	push	qword ptr [rbx + 0x30]
0x5007:	mov	r8d, dword ptr [rbx]
0x500a:	push	qword ptr [rbx + 0x28]
0x500d:	mov	rdx, r15
0x5010:	push	rax
0x5011:	mov	rcx, qword ptr [rsp + 0x28]
0x5016:	mov	rsi, r14
0x5019:	mov	rdi, r13
0x501c:	call	0x3ac0


0x506f:	test	r12, r12
0x5072:	mov	r13, rax
0x5075:	mov	eax, dword ptr [rax]
0x5077:	sete	bpl
0x507b:	or	ebp, dword ptr [rbx + 4]
0x507e:	lea	r10, [rbx + 8]
0x5082:	sub	rsp, 8
0x5086:	mov	r8d, dword ptr [rbx]
0x5089:	mov	rcx, r15
0x508c:	mov	dword ptr [rsp + 0x14], eax
0x5090:	push	qword ptr [rbx + 0x30]
0x5093:	mov	rdx, r14
0x5096:	push	qword ptr [rbx + 0x28]
0x5099:	push	r10
0x509b:	xor	esi, esi
0x509d:	mov	r9d, ebp
0x50a0:	xor	edi, edi
0x50a2:	mov	qword ptr [rsp + 0x40], r10
0x50a7:	call	0x3ac0


0x36e6:	test	rax, rax
0x36e9:	mov	r15, rax
0x36ec:	jne	0x3443


0x36f2:	jmp	0x345a


0x5c89:	test	rax, rax
0x5c8c:	jne	0x5c93


0x5c8e:	test	rbx, rbx
0x5c91:	jne	0x5c95


0x5c93:	pop	rbx
0x5c94:	ret	


0x5c95:	call	0x5ed0


0x5e39:	mov	rdx, rbx
0x5e3c:	xor	esi, esi
0x5e3e:	mov	rdi, rax
0x5e41:	pop	rbx
0x5e42:	jmp	0x17e0


0x5e94:	add	rsp, 8
0x5e98:	mov	rdx, rbx
0x5e9b:	mov	rsi, rbp
0x5e9e:	pop	rbx
0x5e9f:	pop	rbp
0x5ea0:	mov	rdi, rax
0x5ea3:	jmp	0x1870


0x5eb9:	mov	rdi, rbx
0x5ebc:	lea	rsi, [rax + 1]
0x5ec0:	pop	rbx
0x5ec1:	jmp	0x5e80


0x56af:	lea	rdx, [rip + 0x21ca]
0x56b6:	mov	rcx, rax
0x56b9:	mov	r8d, 0x7e3
0x56bf:	mov	esi, 1
0x56c4:	mov	rdi, rbp
0x56c7:	xor	eax, eax
0x56c9:	call	0x19a0


0x56ce:	lea	rsi, [rip + 0x1f13]
0x56d5:	xor	edi, edi
0x56d7:	mov	edx, 5
0x56dc:	call	0x1740


0x56e1:	mov	rsi, rbp
0x56e4:	mov	rdi, rax
0x56e7:	call	0x1850


0x1850:	jmp	qword ptr [rip + 0x2076ba]




0x3237:	jmp	0x3120


0x3120:	mov	rdx, rax
0x3123:	xor	edi, edi
0x3125:	xor	esi, esi
0x3127:	xor	eax, eax
0x3129:	call	0x1940


0x1940:	jmp	qword ptr [rip + 0x207642]




0x315b:	jmp	0x3120


0x3146:	jmp	0x3120


0x317b:	jmp	0x3120


0x3208:	jmp	0x3120


0x279d:	mov	rdi, qword ptr [rip + 0x20693c]
0x27a4:	mov	rdx, rax
0x27a7:	mov	rcx, rbx
0x27aa:	mov	esi, 1
0x27af:	xor	eax, eax
0x27b1:	call	0x19a0


0x27b6:	mov	edi, ebp
0x27b8:	call	0x1980


0x1980:	jmp	qword ptr [rip + 0x207622]




0x27cb:	mov	rdx, rbx
0x27ce:	mov	rsi, rax
0x27d1:	mov	edi, 1
0x27d6:	xor	eax, eax
0x27d8:	call	0x1910


0x1910:	jmp	qword ptr [rip + 0x20765a]




0x5c14:	lea	rdx, [rip + 0x199c]
0x5c1b:	mov	rsi, rax
0x5c1e:	mov	edi, 1
0x5c23:	xor	eax, eax
0x5c25:	call	0x1910


0x5ee7:	mov	edi, dword ptr [rip + 0x203133]
0x5eed:	lea	rdx, [rip + 0x1122]
0x5ef4:	mov	rcx, rax
0x5ef7:	xor	esi, esi
0x5ef9:	xor	eax, eax
0x5efb:	call	0x1940


0x5f19:	test	rax, rax
0x5f1c:	je	0x5f23


0x5f23:	call	0x5ed0


0x5f1e:	add	rsp, 8
0x5f22:	ret	


0x6280:	test	eax, eax
0x6282:	jns	0x62d0


0x6284:	lea	r14, [rsp + 0x10]
0x6289:	mov	r13d, 0x1000
0x628f:	jmp	0x629d


0x62d0:	xor	esi, esi
0x62d2:	mov	edx, 1
0x62d7:	mov	edi, eax
0x62d9:	call	0x17c0


0x629d:	cmp	rbx, 0x1000
0x62a4:	mov	rbp, r13
0x62a7:	mov	r8, r12
0x62aa:	cmovbe	rbp, rbx
0x62ae:	mov	edx, 1
0x62b3:	mov	esi, 0x1000
0x62b8:	mov	rcx, rbp
0x62bb:	mov	rdi, r14
0x62be:	call	0x1920


0x17c0:	jmp	qword ptr [rip + 0x207702]


0x1920:	jmp	qword ptr [rip + 0x207652]






0x6053:	mov	edx, r12d
0x6056:	mov	rsi, rbp
0x6059:	mov	edi, eax
0x605b:	call	0x17c0


0x33cd:	mov	ecx, ebx
0x33cf:	xor	edx, edx
0x33d1:	xor	esi, esi
0x33d3:	pop	rbx
0x33d4:	mov	edi, eax
0x33d6:	jmp	0x1810


0x5f3c:	test	eax, eax
0x5f3e:	mov	rdi, rbx
0x5f41:	js	0x5f97


0x5f97:	pop	rbx
0x5f98:	pop	rbp
0x5f99:	pop	r12
0x5f9b:	jmp	0x1720


0x5f43:	call	0x18d0


0x1720:	jmp	qword ptr [rip + 0x207752]




0x5f48:	test	eax, eax
0x5f4a:	jne	0x5f78


0x5f4c:	mov	rdi, rbx
0x5f4f:	call	0x5fb0


0x5f78:	mov	rdi, rbx
0x5f7b:	call	0x1880


0x5f80:	xor	esi, esi
0x5f82:	mov	edx, 1
0x5f87:	mov	edi, eax
0x5f89:	call	0x17c0


0x60b7:	cmp	rax, -3
0x60bb:	mov	rbp, rax
0x60be:	jbe	0x60e0


0x60e0:	mov	rdx, qword ptr [rsp + 8]
0x60e5:	xor	rdx, qword ptr fs:[0x28]
0x60ee:	mov	rax, rbp
0x60f1:	jne	0x60fe


0x60c0:	test	r12, r12
0x60c3:	je	0x60e0


0x60f3:	add	rsp, 0x18
0x60f7:	pop	rbx
0x60f8:	pop	rbp
0x60f9:	pop	r12
0x60fb:	pop	r13
0x60fd:	ret	


0x60fe:	call	0x1770


0x60c5:	xor	edi, edi
0x60c7:	call	0x6300


0x611c:	mov	ebx, dword ptr [rbp]
0x611f:	mov	rdi, rbp
0x6122:	mov	r12, rax
0x6125:	call	0x5f30


0x1a2d:	lea	rsi, [rip + 0x4b20]
0x1a34:	lea	rdi, [rip + 0x4af0]
0x1a3b:	call	0x1730


0x1730:	jmp	qword ptr [rip + 0x20774a]




0x630b:	mov	rdx, rax
0x630e:	mov	eax, 1
0x6313:	test	rdx, rdx
0x6316:	je	0x6335


0x6335:	add	rsp, 8
0x6339:	ret	


0x6318:	lea	rdi, [rip + 0x15a1]
0x631f:	mov	ecx, 2
0x6324:	mov	rsi, rdx
0x6327:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6327:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6329:	seta	cl
0x632c:	sbb	cl, 0
0x632f:	xor	eax, eax
0x6331:	test	cl, cl
0x6333:	jne	0x6340


0x6340:	lea	rdi, [rip + 0x157b]
0x6347:	mov	ecx, 6
0x634c:	mov	rsi, rdx
0x634f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x634f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6351:	seta	al
0x6354:	sbb	al, 0
0x6356:	test	al, al
0x6358:	setne	al
0x635b:	add	rsp, 8
0x635f:	ret	


0x60cc:	test	al, al
0x60ce:	jne	0x60e0


0x60d0:	movzx	eax, byte ptr [r13]
0x60d5:	mov	ebp, 1
0x60da:	mov	dword ptr [rbx], eax
0x60dc:	nop	dword ptr [rax]
0x60e0:	mov	rdx, qword ptr [rsp + 8]
0x60e5:	xor	rdx, qword ptr fs:[0x28]
0x60ee:	mov	rax, rbp
0x60f1:	jne	0x60fe


0x636e:	test	rax, rax
0x6371:	je	0x6390


0x6390:	lea	rax, [rip + 0x1531]
0x6397:	add	rsp, 8
0x639b:	ret	


0x6373:	cmp	byte ptr [rax], 0
0x6376:	lea	rdx, [rip + 0x154b]
0x637d:	cmove	rax, rdx
0x6381:	add	rsp, 8
0x6385:	ret	


0x39e0:	movzx	edx, byte ptr [rax]
0x39e3:	and	edx, 0xffffffdf
0x39e6:	cmp	dl, 0x55
0x39e9:	je	0x3a60


0x3a60:	movzx	edx, byte ptr [rax + 1]
0x3a64:	and	edx, 0xffffffdf
0x3a67:	cmp	dl, 0x54
0x3a6a:	jne	0x39f0


0x39eb:	cmp	dl, 0x47
0x39ee:	je	0x3a10


0x3a6c:	movzx	edx, byte ptr [rax + 2]
0x3a70:	and	edx, 0xffffffdf
0x3a73:	cmp	dl, 0x46
0x3a76:	jne	0x39f0


0x39f0:	lea	rax, [rip + 0x367c]
0x39f7:	lea	rdx, [rip + 0x3677]
0x39fe:	cmp	ebx, 9
0x3a01:	cmovne	rax, rdx
0x3a05:	add	rsp, 8
0x3a09:	pop	rbx
0x3a0a:	pop	rbp
0x3a0b:	ret	


0x3a10:	movzx	edx, byte ptr [rax + 1]
0x3a14:	and	edx, 0xffffffdf
0x3a17:	cmp	dl, 0x42
0x3a1a:	jne	0x39f0


0x3a7c:	cmp	byte ptr [rax + 3], 0x2d
0x3a80:	jne	0x39f0


0x3a1c:	cmp	byte ptr [rax + 2], 0x31
0x3a20:	jne	0x39f0


0x3a86:	cmp	byte ptr [rax + 4], 0x38
0x3a8a:	jne	0x39f0


0x3a22:	cmp	byte ptr [rax + 3], 0x38
0x3a26:	jne	0x39f0


0x3a90:	cmp	byte ptr [rax + 5], 0
0x3a94:	jne	0x39f0


0x3a28:	cmp	byte ptr [rax + 4], 0x30
0x3a2c:	jne	0x39f0


0x3a9a:	cmp	byte ptr [rbp], 0x60
0x3a9e:	lea	rax, [rip + 0x35bf]
0x3aa5:	lea	rdx, [rip + 0x35bc]
0x3aac:	cmovne	rax, rdx
0x3ab0:	add	rsp, 8
0x3ab4:	pop	rbx
0x3ab5:	pop	rbp
0x3ab6:	ret	


0x3a2e:	cmp	byte ptr [rax + 5], 0x33
0x3a32:	jne	0x39f0


0x3a34:	cmp	byte ptr [rax + 6], 0x30
0x3a38:	jne	0x39f0


0x3a3a:	cmp	byte ptr [rax + 7], 0
0x3a3e:	jne	0x39f0


0x3a40:	cmp	byte ptr [rbp], 0x60
0x3a44:	lea	rax, [rip + 0x3621]
0x3a4b:	lea	rdx, [rip + 0x361e]
0x3a52:	cmovne	rax, rdx
0x3a56:	add	rsp, 8
0x3a5a:	pop	rbx
0x3a5b:	pop	rbp
0x3a5c:	ret	


0x1a40:	lea	rdi, [rip + 0x4ae4]
0x1a47:	call	0x1710


0x1710:	jmp	qword ptr [rip + 0x20775a]




0x62c3:	cmp	rbp, rax
0x62c6:	jbe	0x6298


0x6298:	sub	rbx, rbp
0x629b:	je	0x6270


0x62c8:	jmp	0x6231


0x5f8e:	cmp	rax, -1
0x5f92:	jne	0x5f4c


0x5f94:	mov	rdi, rbx
0x5f97:	pop	rbx
0x5f98:	pop	rbp
0x5f99:	pop	r12
0x5f9b:	jmp	0x1720


0x6060:	cmp	rax, -1
0x6064:	je	0x6072


0x6072:	pop	rbx
0x6073:	pop	rbp
0x6074:	pop	r12
0x6076:	ret	


0x6066:	and	dword ptr [rbx], 0xffffffef
0x6069:	mov	qword ptr [rbx + 0x90], rax
0x6070:	xor	eax, eax
0x6072:	pop	rbx
0x6073:	pop	rbp
0x6074:	pop	r12
0x6076:	ret	


0x62de:	test	rax, rax
0x62e1:	js	0x6284


0x62e3:	mov	edx, 1
0x62e8:	mov	rsi, rbx
0x62eb:	mov	rdi, r12
0x62ee:	call	0x6020


0x5c2a:	lea	rsi, [rip + 0x199c]
0x5c31:	mov	edx, 5
0x5c36:	xor	edi, edi
0x5c38:	call	0x1740


0x5c3d:	lea	rcx, [rip + 0x104c]
0x5c44:	lea	rdx, [rip + 0x8dc]
0x5c4b:	mov	rsi, rax
0x5c4e:	mov	edi, 1
0x5c53:	xor	eax, eax
0x5c55:	call	0x1910


0x5c5a:	mov	rbx, qword ptr [rip + 0x203447]
0x5c61:	lea	rsi, [rip + 0x1b98]
0x5c68:	xor	edi, edi
0x5c6a:	mov	edx, 5
0x5c6f:	call	0x1740


0x5c74:	mov	rsi, rbx
0x5c77:	mov	rdi, rax
0x5c7a:	pop	rbx
0x5c7b:	jmp	0x1850


0x27dd:	mov	rbx, qword ptr [rip + 0x2068c4]
0x27e4:	lea	rsi, [rip + 0x3e5d]
0x27eb:	mov	edx, 5
0x27f0:	xor	edi, edi
0x27f2:	call	0x1740


0x27f7:	mov	rsi, rbx
0x27fa:	mov	rdi, rax
0x27fd:	call	0x1850


0x5f00:	call	0x1690


0x312e:	mov	edi, 1
0x3133:	call	0x2760


0x2802:	mov	rbx, qword ptr [rip + 0x20689f]
0x2809:	lea	rsi, [rip + 0x3e80]
0x2810:	mov	edx, 5
0x2815:	xor	edi, edi
0x2817:	call	0x1740


0x281c:	mov	rsi, rbx
0x281f:	mov	rdi, rax
0x2822:	call	0x1850


0x2827:	mov	rbx, qword ptr [rip + 0x20687a]
0x282e:	lea	rsi, [rip + 0x3e93]
0x2835:	mov	edx, 5
0x283a:	xor	edi, edi
0x283c:	call	0x1740


0x2841:	mov	rsi, rbx
0x2844:	mov	rdi, rax
0x2847:	call	0x1850


0x284c:	mov	rbx, qword ptr [rip + 0x206855]
0x2853:	lea	rsi, [rip + 0x3ebe]
0x285a:	mov	edx, 5
0x285f:	xor	edi, edi
0x2861:	call	0x1740


0x2866:	mov	rsi, rbx
0x2869:	mov	rdi, rax
0x286c:	call	0x1850


0x2871:	mov	rbx, qword ptr [rip + 0x206830]
0x2878:	lea	rsi, [rip + 0x3f51]
0x287f:	mov	edx, 5
0x2884:	xor	edi, edi
0x2886:	call	0x1740


0x288b:	mov	rsi, rbx
0x288e:	mov	rdi, rax
0x2891:	call	0x1850


0x2896:	mov	rbx, qword ptr [rip + 0x20680b]
0x289d:	lea	rsi, [rip + 0x401c]
0x28a4:	mov	edx, 5
0x28a9:	xor	edi, edi
0x28ab:	call	0x1740


0x28b0:	mov	rsi, rbx
0x28b3:	mov	rdi, rax
0x28b6:	call	0x1850


0x28bb:	mov	rbx, qword ptr [rip + 0x2067e6]
0x28c2:	lea	rsi, [rip + 0x406f]
0x28c9:	mov	edx, 5
0x28ce:	xor	edi, edi
0x28d0:	call	0x1740


0x28d5:	mov	rsi, rbx
0x28d8:	mov	rdi, rax
0x28db:	call	0x1850


0x28e0:	mov	rbx, qword ptr [rip + 0x2067c1]
0x28e7:	lea	rsi, [rip + 0x4122]
0x28ee:	mov	edx, 5
0x28f3:	xor	edi, edi
0x28f5:	call	0x1740


0x28fa:	mov	rsi, rbx
0x28fd:	mov	rdi, rax
0x2900:	call	0x1850


0x2905:	mov	rbx, qword ptr [rip + 0x20679c]
0x290c:	lea	rsi, [rip + 0x413d]
0x2913:	mov	edx, 5
0x2918:	xor	edi, edi
0x291a:	call	0x1740


0x291f:	mov	rsi, rbx
0x2922:	mov	rdi, rax
0x2925:	call	0x1850


0x292a:	mov	rbx, qword ptr [rip + 0x206777]
0x2931:	lea	rsi, [rip + 0x4148]
0x2938:	mov	edx, 5
0x293d:	xor	edi, edi
0x293f:	call	0x1740


0x2944:	mov	rsi, rbx
0x2947:	mov	rdi, rax
0x294a:	call	0x1850


0x294f:	mov	rbx, qword ptr [rip + 0x206752]
0x2956:	lea	rsi, [rip + 0x415b]
0x295d:	mov	edx, 5
0x2962:	xor	edi, edi
0x2964:	call	0x1740


0x2969:	mov	rsi, rbx
0x296c:	mov	rdi, rax
0x296f:	call	0x1850


0x2974:	mov	rbx, qword ptr [rip + 0x20672d]
0x297b:	lea	rsi, [rip + 0x4206]
0x2982:	mov	edx, 5
0x2987:	xor	edi, edi
0x2989:	call	0x1740


0x298e:	mov	rsi, rbx
0x2991:	mov	rdi, rax
0x2994:	lea	rbx, [rip + 0x3b12]
0x299b:	call	0x1850


0x29a0:	lea	rax, [rip + 0x3b0a]
0x29a7:	lea	rcx, [rip + 0x3b44]
0x29ae:	mov	qword ptr [rsp + 0x60], 0
0x29b7:	mov	qword ptr [rsp + 0x68], 0
0x29c0:	mov	rdx, rsp
0x29c3:	mov	qword ptr [rsp], rax
0x29c7:	lea	rax, [rip + 0x3ae5]
0x29ce:	mov	qword ptr [rsp + 0x30], rcx
0x29d3:	lea	rcx, [rip + 0x3b22]
0x29da:	mov	qword ptr [rsp + 8], rax
0x29df:	lea	rax, [rip + 0x3b45]
0x29e6:	mov	qword ptr [rsp + 0x40], rcx
0x29eb:	lea	rcx, [rip + 0x3b14]
0x29f2:	mov	qword ptr [rsp + 0x10], rax
0x29f7:	lea	rax, [rip + 0x3ac5]
0x29fe:	mov	qword ptr [rsp + 0x50], rcx
0x2a03:	mov	qword ptr [rsp + 0x18], rax
0x2a08:	lea	rax, [rip + 0x3aca]
0x2a0f:	mov	qword ptr [rsp + 0x20], rax
0x2a14:	lea	rax, [rip + 0x3ac8]
0x2a1b:	mov	qword ptr [rsp + 0x28], rax
0x2a20:	mov	qword ptr [rsp + 0x38], rax
0x2a25:	mov	qword ptr [rsp + 0x48], rax
0x2a2a:	mov	qword ptr [rsp + 0x58], rax
0x2a2f:	nop	
0x2a30:	add	rdx, 0x10
0x2a34:	mov	rdi, qword ptr [rdx]
0x2a37:	test	rdi, rdi
0x2a3a:	je	0x2a4f


0x2a4f:	mov	r12, qword ptr [rdx + 8]
0x2a53:	xor	edi, edi
0x2a55:	mov	edx, 5
0x2a5a:	lea	rsi, [rip + 0x3aaf]
0x2a61:	test	r12, r12
0x2a64:	je	0x2b2b


0x2a3c:	mov	ecx, 4
0x2a41:	mov	rsi, rbx
0x2a44:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2b2b:	call	0x1740


0x2a6a:	call	0x1740


0x2a44:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2a46:	seta	al
0x2a49:	sbb	al, 0
0x2a4b:	test	al, al
0x2a4d:	jne	0x2a30


0x2a30:	add	rdx, 0x10
0x2a34:	mov	rdi, qword ptr [rdx]
0x2a37:	test	rdi, rdi
0x2a3a:	je	0x2a4f


0x2a6f:	lea	rcx, [rip + 0x421a]
0x2a76:	lea	rdx, [rip + 0x3aaa]
0x2a7d:	mov	rsi, rax
0x2a80:	mov	edi, 1
0x2a85:	xor	eax, eax
0x2a87:	call	0x1910


0x2a8c:	xor	esi, esi
0x2a8e:	mov	edi, 5
0x2a93:	call	0x1900


0x2a98:	test	rax, rax
0x2a9b:	je	0x2ab9


0x2ab9:	lea	rsi, [rip + 0x3a79]
0x2ac0:	xor	edi, edi
0x2ac2:	mov	edx, 5
0x2ac7:	call	0x1740


0x2a9d:	lea	rsi, [rip + 0x3a91]
0x2aa4:	mov	edx, 3
0x2aa9:	mov	rdi, rax
0x2aac:	call	0x16b0


0x16b0:	jmp	qword ptr [rip + 0x20778a]




0x2acc:	lea	rcx, [rip + 0x39da]
0x2ad3:	lea	rdx, [rip + 0x41b6]
0x2ada:	mov	rsi, rax
0x2add:	mov	edi, 1
0x2ae2:	xor	eax, eax
0x2ae4:	call	0x1910


0x2ae9:	cmp	r12, rbx
0x2aec:	lea	rcx, [rip + 0x39da]
0x2af3:	lea	rbx, [rip + 0x4aa7]
0x2afa:	cmove	rbx, rcx
0x2afe:	lea	rsi, [rip + 0x41fb]
0x2b05:	xor	edi, edi
0x2b07:	mov	edx, 5
0x2b0c:	call	0x1740


0x2b11:	mov	rcx, rbx
0x2b14:	mov	rsi, rax
0x2b17:	mov	rdx, r12
0x2b1a:	mov	edi, 1
0x2b1f:	xor	eax, eax
0x2b21:	call	0x1910


0x2b26:	jmp	0x27b6


0x2b30:	lea	rcx, [rip + 0x4159]
0x2b37:	lea	rdx, [rip + 0x39e9]
0x2b3e:	mov	rsi, rax
0x2b41:	mov	edi, 1
0x2b46:	xor	eax, eax
0x2b48:	call	0x1910


0x2b4d:	xor	esi, esi
0x2b4f:	mov	edi, 5
0x2b54:	call	0x1900


0x2b59:	test	rax, rax
0x2b5c:	je	0x2b76


0x2b76:	lea	rsi, [rip + 0x39bc]
0x2b7d:	mov	edx, 5
0x2b82:	xor	edi, edi
0x2b84:	lea	r12, [rip + 0x3922]
0x2b8b:	lea	rbx, [rip + 0x393b]
0x2b92:	call	0x1740


0x2b5e:	lea	rsi, [rip + 0x39d0]
0x2b65:	mov	edx, 3
0x2b6a:	mov	rdi, rax
0x2b6d:	call	0x16b0


0x2b97:	lea	rcx, [rip + 0x390f]
0x2b9e:	lea	rdx, [rip + 0x40eb]
0x2ba5:	mov	rsi, rax
0x2ba8:	mov	edi, 1
0x2bad:	xor	eax, eax
0x2baf:	call	0x1910


0x2bb4:	jmp	0x2afe


0x2afe:	lea	rsi, [rip + 0x41fb]
0x2b05:	xor	edi, edi
0x2b07:	mov	edx, 5
0x2b0c:	call	0x1740


0x56ec:	cmp	r12, 9
0x56f0:	ja	0x5a30


0x56f6:	lea	rdx, [rip + 0x214b]
0x56fd:	movsxd	rax, dword ptr [rdx + r12*4]
0x5701:	add	rax, rdx
0x5704:	jmp	rax


0x5a30:	mov	r10, qword ptr [rbx + 0x40]
0x5a34:	mov	r9, qword ptr [rbx + 0x38]
0x5a38:	mov	edx, 5
0x5a3d:	mov	rax, qword ptr [rbx + 0x10]
0x5a41:	mov	r8, qword ptr [rbx + 8]
0x5a45:	lea	rsi, [rip + 0x1d74]
0x5a4c:	mov	r13, qword ptr [rbx + 0x30]
0x5a50:	mov	r12, qword ptr [rbx + 0x28]
0x5a54:	mov	r15, qword ptr [rbx + 0x20]
0x5a58:	mov	r14, qword ptr [rbx + 0x18]
0x5a5c:	mov	qword ptr [rsp + 0x18], r10
0x5a61:	mov	qword ptr [rsp + 0x10], r9
0x5a66:	mov	qword ptr [rsp], rax
0x5a6a:	mov	qword ptr [rsp + 8], r8
0x5a6f:	mov	rbx, qword ptr [rbx]
0x5a72:	jmp	0x5802


0x5802:	xor	edi, edi
0x5804:	call	0x1740


0x5809:	mov	r10, qword ptr [rsp + 0x18]
0x580e:	push	r10
0x5810:	jmp	0x5754


0x5754:	mov	r9, qword ptr [rsp + 0x18]
0x5759:	mov	rdx, rax
0x575c:	mov	rcx, rbx
0x575f:	mov	esi, 1
0x5764:	mov	rdi, rbp
0x5767:	xor	eax, eax
0x5769:	push	r9
0x576b:	push	r13
0x576d:	push	r12
0x576f:	push	r15
0x5771:	push	r14
0x5773:	mov	r9, qword ptr [rsp + 0x30]
0x5778:	mov	r8, qword ptr [rsp + 0x38]
0x577d:	call	0x19a0


0x5782:	add	rsp, 0x30
0x5786:	add	rsp, 0x28
0x578a:	pop	rbx
0x578b:	pop	rbp
0x578c:	pop	r12
0x578e:	pop	r13
0x5790:	pop	r14
0x5792:	pop	r15
0x5794:	ret	


0x4edd:	mov	dword ptr [rbp], r12d
0x4ee1:	pop	rbx
0x4ee2:	pop	rbp
0x4ee3:	pop	r12
0x4ee5:	ret	


0x4d9e:	mov	dword ptr [rip + 0x2042d3], r12d
0x4da5:	mov	eax, dword ptr [rbp + 4]
0x4da8:	shl	r15, 4
0x4dac:	sub	rsp, 8
0x4db0:	add	rbx, r15
0x4db3:	lea	r15, [rbp + 8]
0x4db7:	mov	r8d, dword ptr [rbp]
0x4dbb:	mov	r11, qword ptr [rbx]
0x4dbe:	mov	r12, qword ptr [rbx + 8]
0x4dc2:	mov	rcx, r14
0x4dc5:	or	eax, 1
0x4dc8:	mov	dword ptr [rsp + 0x24], eax
0x4dcc:	push	qword ptr [rbp + 0x30]
0x4dcf:	mov	r9d, eax
0x4dd2:	push	qword ptr [rbp + 0x28]
0x4dd5:	push	r15
0x4dd7:	mov	rsi, r11
0x4dda:	mov	rdx, qword ptr [rsp + 0x28]
0x4ddf:	mov	rdi, r12
0x4de2:	mov	qword ptr [rsp + 0x30], r11
0x4de7:	call	0x3ac0


0x62f3:	jmp	0x6243


0x5fe7:	mov	rdi, rbx
0x5fea:	pop	rbx
0x5feb:	jmp	0x18a0


0x3193:	mov	rdi, rbx
0x3196:	mov	rsi, rax
0x3199:	call	0x5f10


0x319e:	mov	rdi, rax
0x31a1:	mov	rbx, rax
0x31a4:	call	0x5640


0x2ed2:	mov	rax, qword ptr [rip + 0x2063c7]
0x2ed9:	mov	rcx, qword ptr [rip + 0x2063b8]
0x2ee0:	lea	rbx, [rax - 1]
0x2ee4:	cmp	rbx, r15
0x2ee7:	mov	qword ptr [rip + 0x2063b2], rbx
0x2eee:	ja	0x2ea0


0x2ea0:	lea	rdi, [rcx + r13]
0x2ea4:	lea	rdx, [rcx + rbp]
0x2ea8:	mov	rax, qword ptr [rdx + 8]
0x2eac:	cmp	qword ptr [rdi], rax
0x2eaf:	ja	0x2ef0


0x24ff:	add	rsp, 0x18
0x2503:	mov	eax, 1
0x2508:	pop	rbx
0x2509:	pop	rbp
0x250a:	pop	r12
0x250c:	pop	r13
0x250e:	pop	r14
0x2510:	pop	r15
0x2512:	ret	


0x6239:	test	eax, eax
0x623b:	setne	al
0x623e:	movzx	eax, al
0x6241:	neg	eax
0x6243:	mov	rcx, qword ptr [rsp + 0x1018]
0x624b:	xor	rcx, qword ptr fs:[0x28]
0x6254:	jne	0x62f8


0x5bc6:	mov	rax, qword ptr [rsp + 0x78]
0x5bcb:	xor	rax, qword ptr fs:[0x28]
0x5bd4:	jne	0x5be0


0x5bd6:	add	rsp, 0xb8
0x5bdd:	pop	rbx
0x5bde:	pop	rbp
0x5bdf:	ret	


0x5be0:	call	0x1770


0x5af0:	mov	rax, qword ptr [rsp + 0x58]
0x5af5:	xor	rax, qword ptr fs:[0x28]
0x5afe:	jne	0x5b05


0x5b00:	add	rsp, 0x68
0x5b04:	ret	


0x5b05:	call	0x1770


0x2b72:	test	eax, eax
0x2b74:	jne	0x2bb9


0x2bb9:	lea	r12, [rip + 0x38ed]
0x2bc0:	mov	r13, qword ptr [rip + 0x2064e1]
0x2bc7:	lea	rsi, [rip + 0x40ea]
0x2bce:	xor	edi, edi
0x2bd0:	mov	edx, 5
0x2bd5:	call	0x1740


0x2bda:	mov	rsi, r13
0x2bdd:	mov	rdi, rax
0x2be0:	call	0x1850


0x2be5:	jmp	0x2ab9


0x2ab1:	test	eax, eax
0x2ab3:	jne	0x2bc0


0x2bc0:	mov	r13, qword ptr [rip + 0x2064e1]
0x2bc7:	lea	rsi, [rip + 0x40ea]
0x2bce:	xor	edi, edi
0x2bd0:	mov	edx, 5
0x2bd5:	call	0x1740


0x1a4c:	lea	rdi, [rip + 0x18ad]
0x1a53:	call	0x6450


0x1a58:	mov	dword ptr [rip + 0x2076aa], 0
0x1a62:	mov	byte ptr [rip + 0x2076a2], 0
0x1a69:	mov	byte ptr [rip + 0x207699], 0
0x1a70:	mov	byte ptr [rip + 0x20767b], 0
0x1a77:	nop	word ptr [rax + rax]
0x1a80:	xor	r8d, r8d
0x1a83:	mov	rcx, r13
0x1a86:	mov	rdx, r12
0x1a89:	mov	rsi, rbx
0x1a8c:	mov	edi, ebp
0x1a8e:	call	0x1780


0x1780:	jmp	qword ptr [rip + 0x207722]




0x5f54:	test	eax, eax
0x5f56:	je	0x5f94


0x5f58:	call	0x16a0


0x5f5d:	mov	r12d, dword ptr [rax]
0x5f60:	mov	rdi, rbx
0x5f63:	mov	rbp, rax
0x5f66:	call	0x1720


0x5f6b:	test	r12d, r12d
0x5f6e:	jne	0x5fa0


0x5f70:	pop	rbx
0x5f71:	pop	rbp
0x5f72:	pop	r12
0x5f74:	ret	


0x5fa0:	mov	dword ptr [rbp], r12d
0x5fa4:	mov	eax, 0xffffffff
0x5fa9:	jmp	0x5f70


0x612a:	and	ebx, 0x20
0x612d:	test	ebx, ebx
0x612f:	jne	0x6148


0x6131:	test	eax, eax
0x6133:	je	0x613f


0x6148:	test	eax, eax
0x614a:	jne	0x6168


0x613f:	pop	rbx
0x6140:	pop	rbp
0x6141:	pop	r12
0x6143:	ret	


0x6135:	test	r12, r12
0x6138:	mov	eax, 0xffffffff
0x613d:	je	0x6178


0x614c:	call	0x16a0


0x6168:	pop	rbx
0x6169:	mov	eax, 0xffffffff
0x616e:	pop	rbp
0x616f:	pop	r12
0x6171:	ret	


0x6178:	call	0x16a0


0x617d:	cmp	dword ptr [rax], 9
0x6180:	pop	rbx
0x6181:	pop	rbp
0x6182:	pop	r12
0x6184:	setne	al
0x6187:	movzx	eax, al
0x618a:	neg	eax
0x618c:	ret	


0x6151:	mov	dword ptr [rax], 0
0x6157:	mov	eax, 0xffffffff
0x615c:	pop	rbx
0x615d:	pop	rbp
0x615e:	pop	r12
0x6160:	ret	


0x2482:	mov	edx, eax
0x2484:	mov	eax, 1
0x2489:	cmp	edx, -1
0x248c:	je	0x24bc


0x248e:	add	rsp, 0x18
0x2492:	pop	rbx
0x2493:	pop	rbp
0x2494:	pop	r12
0x2496:	pop	r13
0x2498:	pop	r14
0x249a:	pop	r15
0x249c:	ret	


0x3312:	test	eax, eax
0x3314:	je	0x332c


0x332c:	mov	rdi, qword ptr [rip + 0x205dad]
0x3333:	call	0x6110


0x3316:	call	0x16a0


0x331b:	cmp	byte ptr [rip + 0x205e16], 0
0x3322:	mov	rbx, rax
0x3325:	je	0x3343


0x3343:	lea	rsi, [rip + 0x3cbc]
0x334a:	xor	edi, edi
0x334c:	mov	edx, 5
0x3351:	call	0x1740


0x3327:	cmp	dword ptr [rax], 0x20
0x332a:	jne	0x3343


0x3356:	mov	rdi, qword ptr [rip + 0x205de3]
0x335d:	mov	rbp, rax
0x3360:	test	rdi, rdi
0x3363:	je	0x338d


0x338d:	mov	esi, dword ptr [rbx]
0x338f:	lea	rdx, [rip + 0x3c80]
0x3396:	mov	rcx, rax
0x3399:	xor	edi, edi
0x339b:	xor	eax, eax
0x339d:	call	0x1940


0x3365:	call	0x5440


0x33a2:	jmp	0x3382


0x3382:	mov	edi, dword ptr [rip + 0x205c98]
0x3388:	call	0x16c0


0x16c0:	jmp	qword ptr [rip + 0x207782]




0x3338:	test	eax, eax
0x333a:	jne	0x3382


0x333c:	add	rsp, 8
0x3340:	pop	rbx
0x3341:	pop	rbp
0x3342:	ret	


0x1a93:	cmp	eax, -1
0x1a96:	je	0x1c38


0x1c38:	mov	eax, dword ptr [rip + 0x2074ce]
0x1c3e:	mov	edx, 5
0x1c43:	lea	rsi, [rip + 0x5146]
0x1c4a:	test	eax, eax
0x1c4c:	je	0x1e22


0x1a9c:	cmp	eax, 0x66
0x1a9f:	je	0x1b58


0x1e22:	xor	edi, edi
0x1e24:	call	0x1740


0x1c52:	test	r14b, r14b
0x1c55:	je	0x1c92


0x1b58:	mov	ecx, dword ptr [rip + 0x2075ae]
0x1b5e:	test	ecx, ecx
0x1b60:	jne	0x1e51


0x1aa5:	jle	0x1ad0


0x1c92:	cmp	byte ptr [rip + 0x207472], 0
0x1c99:	jne	0x1d2e


0x1c57:	cmp	eax, 2
0x1c5a:	mov	edx, 5
0x1c5f:	lea	rsi, [rip + 0x5162]
0x1c66:	jne	0x1e22


0x1b66:	mov	dword ptr [rip + 0x20759c], 2
0x1b70:	mov	r15, qword ptr [rip + 0x207549]
0x1b77:	jmp	0x1a80


0x1e51:	mov	edx, 5
0x1e56:	lea	rsi, [rip + 0x4edb]
0x1e5d:	jmp	0x1e22


0x1ad0:	cmp	eax, 0x63
0x1ad3:	jg	0x1ba8


0x1aa7:	cmp	eax, 0x7a
0x1aaa:	je	0x1be0


0x1c9f:	xor	esi, esi
0x1ca1:	cmp	eax, 2
0x1ca4:	setne	sil
0x1ca8:	shl	esi, 2
0x1cab:	cmp	byte ptr [rip + 0x207458], 0
0x1cb2:	jne	0x1e41


0x1d2e:	cmp	eax, 2
0x1d31:	mov	edx, 5
0x1d36:	lea	rsi, [rip + 0x50d3]
0x1d3d:	jne	0x1e22


0x1c6c:	cmp	byte ptr [rip + 0x207498], 0
0x1c73:	je	0x1d62


0x1a80:	xor	r8d, r8d
0x1a83:	mov	rcx, r13
0x1a86:	mov	rdx, r12
0x1a89:	mov	rsi, rbx
0x1a8c:	mov	edi, ebp
0x1a8e:	call	0x1780


0x1ad9:	cmp	eax, 0x62
0x1adc:	jge	0x1b80


0x1ba8:	cmp	eax, 0x64
0x1bab:	jne	0x1e37


0x1be0:	mov	byte ptr [rip + 0x207429], 0
0x1be7:	jmp	0x1a80


0x1ab0:	jg	0x1b30


0x1cb8:	mov	rdi, r15
0x1cbb:	call	0x2ce0


0x1e41:	or	esi, 2
0x1e44:	mov	rdi, r15
0x1e47:	call	0x2ce0


0x1d43:	cmp	byte ptr [rip + 0x2073c0], 0
0x1d4a:	je	0x1df9


0x1d62:	xor	esi, esi
0x1d64:	cmp	byte ptr [rip + 0x20739f], 0
0x1d6b:	je	0x1cb8


0x1c79:	cmp	byte ptr [rip + 0x20748a], 0
0x1c80:	jne	0x1d71


0x1ae2:	cmp	eax, 0xffffff7d
0x1ae7:	jne	0x1e08


0x1b80:	mov	esi, dword ptr [rip + 0x207586]
0x1b86:	test	esi, esi
0x1b88:	jne	0x1e51


0x1bb1:	mov	rdx, qword ptr [rip + 0x207508]
0x1bb8:	movzx	eax, byte ptr [rdx]
0x1bbb:	test	al, al
0x1bbd:	je	0x1bc9


0x1e37:	mov	edi, 1
0x1e3c:	call	0x2760


0x1ab2:	cmp	eax, 0x6e
0x1ab5:	je	0x1a80


0x1b30:	cmp	eax, 0x80
0x1b35:	je	0x1bf0


0x1df9:	xor	esi, esi
0x1dfb:	mov	rdi, r15
0x1dfe:	call	0x2ce0


0x1d50:	mov	esi, 2
0x1d55:	mov	rdi, r15
0x1d58:	call	0x2ce0


0x1d71:	mov	esi, 2
0x1d76:	mov	rdi, r15
0x1d79:	call	0x2ce0


0x1c86:	xor	esi, esi
0x1c88:	mov	rdi, r15
0x1c8b:	call	0x2ce0


0x1aed:	lea	rax, [rip + 0x4a97]
0x1af4:	mov	rdi, qword ptr [rip + 0x2075ad]
0x1afb:	mov	rcx, qword ptr [rip + 0x207516]
0x1b02:	push	0
0x1b04:	lea	r9, [rip + 0x4a61]
0x1b0b:	lea	r8, [rip + 0x4a6a]
0x1b12:	push	rax
0x1b13:	lea	rdx, [rip + 0x4a0d]
0x1b1a:	lea	rsi, [rip + 0x498c]
0x1b21:	xor	eax, eax
0x1b23:	call	0x5b20


0x1e08:	cmp	eax, 0xffffff7e
0x1e0d:	jne	0x1e37


0x1b8e:	mov	dword ptr [rip + 0x207574], 1
0x1b98:	mov	r15, qword ptr [rip + 0x207521]
0x1b9f:	jmp	0x1a80


0x1bc9:	mov	byte ptr [rip + 0x20753a], al
0x1bcf:	mov	r14d, 1
0x1bd5:	jmp	0x1a80


0x1bbf:	cmp	byte ptr [rdx + 1], 0
0x1bc3:	jne	0x1e16


0x1ab7:	cmp	eax, 0x73
0x1aba:	jne	0x1e37


0x1bf0:	mov	rdx, qword ptr [rip + 0x2074c9]
0x1bf7:	mov	byte ptr [rip + 0x20750a], 1
0x1bfe:	mov	eax, 1
0x1c03:	cmp	byte ptr [rdx], 0
0x1c06:	je	0x1c1d


0x1b3b:	cmp	eax, 0x81
0x1b40:	jne	0x1e37


0x1e0f:	xor	edi, edi
0x1e11:	call	0x2760


0x1e16:	lea	rsi, [rip + 0x4f43]
0x1e1d:	mov	edx, 5
0x1e22:	xor	edi, edi
0x1e24:	call	0x1740


0x1ac0:	mov	byte ptr [rip + 0x207644], 1
0x1ac7:	jmp	0x1a80


0x1c1d:	mov	rdi, rdx
0x1c20:	mov	qword ptr [rip + 0x2074d9], rax
0x1c27:	call	0x5eb0


0x1c08:	xor	eax, eax
0x1c0a:	or	rcx, 0xffffffffffffffff
0x1c0e:	mov	rdi, rdx
0x1c11:	repne scasb	al, byte ptr [rdi]


0x1b46:	mov	byte ptr [rip + 0x2075bd], 1
0x1b4d:	jmp	0x1a80


0x1c11:	repne scasb	al, byte ptr [rdi]


0x1c13:	mov	rax, rcx
0x1c16:	not	rax
0x1c19:	sub	rax, 1
0x1c1d:	mov	rdi, rdx
0x1c20:	mov	qword ptr [rip + 0x2074d9], rax
0x1c27:	call	0x5eb0


0x1c2c:	mov	qword ptr [rip + 0x2074c5], rax
0x1c33:	jmp	0x1a80


0x1b28:	xor	edi, edi
0x1b2a:	call	0x1980


0x1c90:	jmp	0x1ccc


0x1ccc:	cmp	qword ptr [rip + 0x207424], 0
0x1cd4:	je	0x1db3


0x1db3:	movzx	eax, byte ptr [rip + 0x20734f]
0x1dba:	mov	byte ptr [rip + 0x207330], 0
0x1dc1:	mov	qword ptr [rip + 0x207334], 1
0x1dcc:	mov	byte ptr [rip + 0x20731e], al
0x1dd2:	lea	rax, [rip + 0x207317]
0x1dd9:	mov	qword ptr [rip + 0x207318], rax
0x1de0:	jmp	0x1cda


0x1cda:	mov	eax, dword ptr [rip + 0x2073d8]
0x1ce0:	cmp	eax, ebp
0x1ce2:	je	0x1de5


0x1de5:	lea	rdi, [rip + 0x5276]
0x1dec:	call	0x1f70


0x1ce8:	mov	r12d, 1
0x1cee:	jge	0x1d11


0x1cf0:	cdqe	
0x1cf2:	mov	rdi, qword ptr [rbx + rax*8]
0x1cf6:	call	0x1f70


0x1d11:	cmp	byte ptr [rip + 0x2073da], 0
0x1d18:	jne	0x1d83


0x1d1a:	xor	r12d, 1
0x1d1e:	pop	rdx
0x1d1f:	movzx	eax, r12b
0x1d23:	pop	rbx
0x1d24:	pop	rbp
0x1d25:	pop	r12
0x1d27:	pop	r13
0x1d29:	pop	r14
0x1d2b:	pop	r15
0x1d2d:	ret	


0x1d83:	mov	rdi, qword ptr [rip + 0x207326]
0x1d8a:	call	0x5f30


0x1d8f:	add	eax, 1
0x1d92:	jne	0x1d1a


0x1d94:	call	0x16a0


0x1d99:	mov	esi, dword ptr [rax]
0x1d9b:	lea	rdx, [rip + 0x52c0]
0x1da2:	xor	edi, edi
0x1da4:	xor	eax, eax
0x1da6:	xor	r12d, r12d
0x1da9:	call	0x1940


0x1dae:	jmp	0x1d1a


0x1cfb:	and	r12d, eax
0x1cfe:	mov	eax, dword ptr [rip + 0x2073b4]
0x1d04:	add	eax, 1
0x1d07:	cmp	eax, ebp
0x1d09:	mov	dword ptr [rip + 0x2073a9], eax
0x1d0f:	jl	0x1cf0


0x1df1:	mov	r12d, eax
0x1df4:	jmp	0x1d11


0x1d7e:	jmp	0x1ccc


0x1d5d:	jmp	0x1cc5


0x1cc5:	mov	byte ptr [rip + 0x20743d], 9
0x1ccc:	cmp	qword ptr [rip + 0x207424], 0
0x1cd4:	je	0x1db3


0x1e03:	jmp	0x1cc5


0x1e4c:	jmp	0x1cc5


0x1cc0:	test	r14b, r14b
0x1cc3:	jne	0x1ccc


0x1e29:	xor	esi, esi
0x1e2b:	mov	rdx, rax
0x1e2e:	xor	edi, edi
0x1e30:	xor	eax, eax
0x1e32:	call	0x1940


0x336a:	mov	esi, dword ptr [rbx]
0x336c:	lea	rdx, [rip + 0x3c9f]
0x3373:	mov	rcx, rax
0x3376:	mov	r8, rbp
0x3379:	xor	edi, edi
0x337b:	xor	eax, eax
0x337d:	call	0x1940


0x4dec:	add	rsp, 0x20
0x4df0:	mov	r11, qword ptr [rsp + 0x10]
0x4df5:	cmp	r11, rax
0x4df8:	ja	0x4e61


0x4dfa:	lea	rsi, [rax + 1]
0x4dfe:	lea	rax, [rip + 0x20435b]
0x4e05:	cmp	r12, rax
0x4e08:	mov	qword ptr [rbx], rsi
0x4e0b:	je	0x4e1f


0x4e61:	mov	eax, dword ptr [rsp + 0x18]
0x4e65:	mov	dword ptr [r13], eax
0x4e69:	add	rsp, 0x28
0x4e6d:	mov	rax, r12
0x4e70:	pop	rbx
0x4e71:	pop	rbp
0x4e72:	pop	r12
0x4e74:	pop	r13
0x4e76:	pop	r14
0x4e78:	pop	r15
0x4e7a:	ret	


0x4e1f:	mov	rdi, rsi
0x4e22:	mov	qword ptr [rsp + 0x10], rsi
0x4e27:	call	0x5c80


0x4e0d:	mov	rdi, r12
0x4e10:	mov	qword ptr [rsp + 0x10], rsi
0x4e15:	call	0x1680


0x4e1a:	mov	rsi, qword ptr [rsp + 0x10]
0x4e1f:	mov	rdi, rsi
0x4e22:	mov	qword ptr [rsp + 0x10], rsi
0x4e27:	call	0x5c80


0x4e2c:	sub	rsp, 8
0x4e30:	mov	qword ptr [rbx + 8], rax
0x4e34:	mov	r8d, dword ptr [rbp]
0x4e38:	push	qword ptr [rbp + 0x30]
0x4e3b:	push	qword ptr [rbp + 0x28]
0x4e3e:	mov	rcx, r14
0x4e41:	push	r15
0x4e43:	mov	r9d, dword ptr [rsp + 0x3c]
0x4e48:	mov	rdi, rax
0x4e4b:	mov	rdx, qword ptr [rsp + 0x28]
0x4e50:	mov	rsi, qword ptr [rsp + 0x30]
0x4e55:	mov	r12, rax
0x4e58:	call	0x3ac0


0x5572:	mov	rdi, qword ptr [rsp + 0x38]
0x5577:	xor	rdi, qword ptr fs:[0x28]
0x5580:	jne	0x558c


0x5582:	add	rsp, 0x48
0x5586:	ret	


0x558c:	call	0x1770


0x52bf:	mov	rcx, qword ptr [rsp + 0x38]
0x52c4:	xor	rcx, qword ptr fs:[0x28]
0x52cd:	jne	0x52d9


0x52cf:	add	rsp, 0x48
0x52d3:	ret	


0x52d9:	call	0x1770


0x534b:	mov	rdx, qword ptr [rsp + 0x38]
0x5350:	xor	rdx, qword ptr fs:[0x28]
0x5359:	jne	0x5365


0x535b:	add	rsp, 0x48
0x535f:	ret	


0x5365:	call	0x1770


0x54df:	mov	rcx, qword ptr [rsp + 0x38]
0x54e4:	xor	rcx, qword ptr fs:[0x28]
0x54ed:	jne	0x54f9


0x54ef:	add	rsp, 0x48
0x54f3:	ret	


0x54f9:	call	0x1770


0x24cc:	mov	rbx, rax
0x24cf:	call	0x16a0


0x24d4:	mov	esi, dword ptr [rax]
0x24d6:	lea	rdx, [rip + 0x4b39]
0x24dd:	mov	rcx, rbx
0x24e0:	xor	eax, eax
0x24e2:	xor	edi, edi
0x24e4:	call	0x1940


0x24e9:	add	rsp, 0x18
0x24ed:	xor	eax, eax
0x24ef:	pop	rbx
0x24f0:	pop	rbp
0x24f1:	pop	r12
0x24f3:	pop	r13
0x24f5:	pop	r14
0x24f7:	pop	r15
0x24f9:	ret	


0x540e:	mov	rsi, qword ptr [rsp + 0x38]
0x5413:	xor	rsi, qword ptr fs:[0x28]
0x541c:	jne	0x5423


0x541e:	add	rsp, 0x48
0x5422:	ret	


0x5423:	call	0x1770


0x4e5d:	add	rsp, 0x20
0x4e61:	mov	eax, dword ptr [rsp + 0x18]
0x4e65:	mov	dword ptr [r13], eax
0x4e69:	add	rsp, 0x28
0x4e6d:	mov	rax, r12
0x4e70:	pop	rbx
0x4e71:	pop	rbp
0x4e72:	pop	r12
0x4e74:	pop	r13
0x4e76:	pop	r14
0x4e78:	pop	r15
0x4e7a:	ret	


0x50ac:	lea	rsi, [rax + 1]
0x50b0:	mov	qword ptr [rsp + 0x48], rax
0x50b5:	add	rsp, 0x20
0x50b9:	mov	rdi, rsi
0x50bc:	mov	qword ptr [rsp + 0x18], rsi
0x50c1:	call	0x5c80


0x50c6:	mov	qword ptr [rsp + 0x10], rax
0x50cb:	sub	rsp, 8
0x50cf:	push	qword ptr [rbx + 0x30]
0x50d2:	push	qword ptr [rbx + 0x28]
0x50d5:	mov	r10, qword ptr [rsp + 0x38]
0x50da:	mov	r9d, ebp
0x50dd:	mov	r8d, dword ptr [rbx]
0x50e0:	mov	rcx, r15
0x50e3:	mov	rdx, r14
0x50e6:	mov	rdi, rax
0x50e9:	push	r10
0x50eb:	mov	rsi, qword ptr [rsp + 0x38]
0x50f0:	call	0x3ac0


0x50f5:	mov	eax, dword ptr [rsp + 0x2c]
0x50f9:	add	rsp, 0x20
0x50fd:	test	r12, r12
0x5100:	mov	dword ptr [r13], eax
0x5104:	je	0x510f


0x510f:	mov	rax, qword ptr [rsp + 0x10]
0x5114:	add	rsp, 0x38
0x5118:	pop	rbx
0x5119:	pop	rbp
0x511a:	pop	r12
0x511c:	pop	r13
0x511e:	pop	r14
0x5120:	pop	r15
0x5122:	ret	


0x5106:	mov	r11, qword ptr [rsp + 0x28]
0x510b:	mov	qword ptr [r12], r11
0x510f:	mov	rax, qword ptr [rsp + 0x10]
0x5114:	add	rsp, 0x38
0x5118:	pop	rbx
0x5119:	pop	rbp
0x511a:	pop	r12
0x511c:	pop	r13
0x511e:	pop	r14
0x5120:	pop	r15
0x5122:	ret	


0x5021:	mov	dword ptr [rbp], r12d
0x5025:	add	rsp, 0x38
0x5029:	pop	rbx
0x502a:	pop	rbp
0x502b:	pop	r12
0x502d:	pop	r13
0x502f:	pop	r14
0x5031:	pop	r15
0x5033:	ret	


0x31a9:	test	byte ptr [rsp + 0x1c], 4
0x31ae:	mov	rbp, rax
0x31b1:	mov	edx, 5
0x31b6:	je	0x320d


0x320d:	lea	rsi, [rip + 0x3caa]
0x3214:	xor	edi, edi
0x3216:	call	0x1740


0x31b8:	lea	rsi, [rip + 0x3dc9]
0x31bf:	xor	edi, edi
0x31c1:	call	0x1740


0x31c6:	mov	rdx, rax
0x31c9:	mov	rcx, rbp
0x31cc:	xor	esi, esi
0x31ce:	xor	edi, edi
0x31d0:	xor	eax, eax
0x31d2:	call	0x1940


0x31d7:	mov	rdi, rbx
0x31da:	call	0x1680


0x31df:	mov	edi, 1
0x31e4:	call	0x2760


0x321b:	jmp	0x31c6


0x3244:	test	byte ptr [rsp + 0x1c], 4
0x3249:	mov	rbx, rax
0x324c:	mov	edx, 5
0x3251:	je	0x3288


0x3288:	lea	rsi, [rip + 0x3c4c]
0x328f:	xor	edi, edi
0x3291:	call	0x1740


0x3253:	lea	rsi, [rip + 0x3d56]
0x325a:	xor	edi, edi
0x325c:	call	0x1740


0x3261:	mov	rdx, rax
0x3264:	xor	edi, edi
0x3266:	mov	rcx, rbx
0x3269:	xor	esi, esi
0x326b:	xor	eax, eax
0x326d:	call	0x1940


0x3272:	mov	edi, 1
0x3277:	call	0x2760


0x3296:	jmp	0x3261


0x641d:	add	rbx, 1
0x6421:	cmp	rbp, rbx
0x6424:	jne	0x6410


0x6410:	mov	rdx, r15
0x6413:	mov	rsi, r14
0x6416:	mov	edi, r13d
0x6419:	call	qword ptr [r12 + rbx*8]






0x58a0:	mov	r13, qword ptr [rbx + 0x10]
0x58a4:	mov	r12, qword ptr [rbx + 8]
0x58a8:	lea	rsi, [rip + 0x1cd7]
0x58af:	mov	rbx, qword ptr [rbx]
0x58b2:	mov	edx, 5
0x58b7:	xor	edi, edi
0x58b9:	call	0x1740


0x59e0:	mov	r9, qword ptr [rbx + 0x10]
0x59e4:	mov	r13, qword ptr [rbx + 0x30]
0x59e8:	lea	rsi, [rip + 0x1d39]
0x59ef:	mov	r12, qword ptr [rbx + 0x28]
0x59f3:	mov	r15, qword ptr [rbx + 0x20]
0x59f7:	mov	edx, 5
0x59fc:	mov	r14, qword ptr [rbx + 0x18]
0x5a00:	mov	r8, qword ptr [rbx + 8]
0x5a04:	xor	edi, edi
0x5a06:	mov	qword ptr [rsp + 8], r9
0x5a0b:	mov	rbx, qword ptr [rbx]
0x5a0e:	mov	qword ptr [rsp], r8
0x5a12:	call	0x1740


0x57c0:	mov	r10, qword ptr [rbx + 0x40]
0x57c4:	mov	r9, qword ptr [rbx + 0x38]
0x57c8:	lea	rsi, [rip + 0x1fb9]
0x57cf:	mov	rax, qword ptr [rbx + 0x10]
0x57d3:	mov	r8, qword ptr [rbx + 8]
0x57d7:	mov	edx, 5
0x57dc:	mov	r13, qword ptr [rbx + 0x30]
0x57e0:	mov	r12, qword ptr [rbx + 0x28]
0x57e4:	mov	r15, qword ptr [rbx + 0x20]
0x57e8:	mov	r14, qword ptr [rbx + 0x18]
0x57ec:	mov	rbx, qword ptr [rbx]
0x57ef:	mov	qword ptr [rsp + 0x18], r10
0x57f4:	mov	qword ptr [rsp + 0x10], r9
0x57f9:	mov	qword ptr [rsp], rax
0x57fd:	mov	qword ptr [rsp + 8], r8
0x5802:	xor	edi, edi
0x5804:	call	0x1740


0x5978:	mov	r8, qword ptr [rbx + 8]
0x597c:	mov	r12, qword ptr [rbx + 0x28]
0x5980:	lea	rsi, [rip + 0x1d79]
0x5987:	mov	r15, qword ptr [rbx + 0x20]
0x598b:	mov	r14, qword ptr [rbx + 0x18]
0x598f:	mov	edx, 5
0x5994:	mov	r13, qword ptr [rbx + 0x10]
0x5998:	xor	edi, edi
0x599a:	mov	rbx, qword ptr [rbx]
0x599d:	mov	qword ptr [rsp], r8
0x59a1:	call	0x1740


0x5786:	add	rsp, 0x28
0x578a:	pop	rbx
0x578b:	pop	rbp
0x578c:	pop	r12
0x578e:	pop	r13
0x5790:	pop	r14
0x5792:	pop	r15
0x5794:	ret	


0x5948:	mov	r15, qword ptr [rbx + 0x20]
0x594c:	lea	rsi, [rip + 0x1d85]
0x5953:	mov	edx, 5
0x5958:	xor	edi, edi
0x595a:	mov	r14, qword ptr [rbx + 0x18]
0x595e:	mov	r13, qword ptr [rbx + 0x10]
0x5962:	mov	r12, qword ptr [rbx + 8]
0x5966:	mov	rbx, qword ptr [rbx]
0x5969:	call	0x1740


0x58f0:	lea	rsi, [rip + 0x1dc1]
0x58f7:	mov	edx, 5
0x58fc:	xor	edi, edi
0x58fe:	mov	r14, qword ptr [rbx + 0x18]
0x5902:	mov	r13, qword ptr [rbx + 0x10]
0x5906:	mov	r12, qword ptr [rbx + 8]
0x590a:	mov	rbx, qword ptr [rbx]
0x590d:	call	0x1740


0x5710:	mov	r9, qword ptr [rbx + 0x38]
0x5714:	mov	rax, qword ptr [rbx + 0x10]
0x5718:	lea	rsi, [rip + 0x2039]
0x571f:	mov	r8, qword ptr [rbx + 8]
0x5723:	mov	edx, 5
0x5728:	xor	edi, edi
0x572a:	mov	r13, qword ptr [rbx + 0x30]
0x572e:	mov	r12, qword ptr [rbx + 0x28]
0x5732:	mov	qword ptr [rsp + 0x10], r9
0x5737:	mov	r15, qword ptr [rbx + 0x20]
0x573b:	mov	r14, qword ptr [rbx + 0x18]
0x573f:	mov	qword ptr [rsp], rax
0x5743:	mov	qword ptr [rsp + 8], r8
0x5748:	mov	rbx, qword ptr [rbx]
0x574b:	call	0x1740


0x5818:	mov	rbx, qword ptr [rbx]
0x581b:	lea	rsi, [rip + 0x1d3d]
0x5822:	mov	edx, 5
0x5827:	xor	edi, edi
0x5829:	call	0x1740


0x5858:	mov	r12, qword ptr [rbx + 8]
0x585c:	lea	rsi, [rip + 0x1d0c]
0x5863:	mov	rbx, qword ptr [rbx]
0x5866:	mov	edx, 5
0x586b:	xor	edi, edi
0x586d:	call	0x1740


0x5872:	add	rsp, 0x28
0x5876:	mov	r8, r12
0x5879:	mov	rcx, rbx
0x587c:	mov	rdi, rbp
0x587f:	mov	rdx, rax
0x5882:	mov	esi, 1
0x5887:	pop	rbx
0x5888:	pop	rbp
0x5889:	pop	r12
0x588b:	pop	r13
0x588d:	pop	r14
0x588f:	pop	r15
0x5891:	xor	eax, eax
0x5893:	jmp	0x19a0


0x582e:	add	rsp, 0x28
0x5832:	mov	rcx, rbx
0x5835:	mov	rdi, rbp
0x5838:	pop	rbx
0x5839:	pop	rbp
0x583a:	pop	r12
0x583c:	pop	r13
0x583e:	pop	r14
0x5840:	pop	r15
0x5842:	mov	rdx, rax
0x5845:	mov	esi, 1
0x584a:	xor	eax, eax
0x584c:	jmp	0x19a0


0x5750:	sub	rsp, 8
0x5754:	mov	r9, qword ptr [rsp + 0x18]
0x5759:	mov	rdx, rax
0x575c:	mov	rcx, rbx
0x575f:	mov	esi, 1
0x5764:	mov	rdi, rbp
0x5767:	xor	eax, eax
0x5769:	push	r9
0x576b:	push	r13
0x576d:	push	r12
0x576f:	push	r15
0x5771:	push	r14
0x5773:	mov	r9, qword ptr [rsp + 0x30]
0x5778:	mov	r8, qword ptr [rsp + 0x38]
0x577d:	call	0x19a0


0x5912:	sub	rsp, 8
0x5916:	push	r14
0x5918:	mov	rdx, rax
0x591b:	mov	r9, r13
0x591e:	mov	r8, r12
0x5921:	mov	rcx, rbx
0x5924:	mov	rdi, rbp
0x5927:	mov	esi, 1
0x592c:	xor	eax, eax
0x592e:	call	0x19a0


0x5933:	pop	rax
0x5934:	pop	rdx
0x5935:	add	rsp, 0x28
0x5939:	pop	rbx
0x593a:	pop	rbp
0x593b:	pop	r12
0x593d:	pop	r13
0x593f:	pop	r14
0x5941:	pop	r15
0x5943:	ret	


0x596e:	push	r15
0x5970:	jmp	0x5916


0x5916:	push	r14
0x5918:	mov	rdx, rax
0x591b:	mov	r9, r13
0x591e:	mov	r8, r12
0x5921:	mov	rcx, rbx
0x5924:	mov	rdi, rbp
0x5927:	mov	esi, 1
0x592c:	xor	eax, eax
0x592e:	call	0x19a0


0x59a6:	sub	rsp, 8
0x59aa:	mov	r9, r13
0x59ad:	push	r12
0x59af:	push	r15
0x59b1:	push	r14
0x59b3:	mov	r8, qword ptr [rsp + 0x20]
0x59b8:	mov	rcx, rbx
0x59bb:	mov	rdx, rax
0x59be:	mov	rdi, rbp
0x59c1:	mov	esi, 1
0x59c6:	xor	eax, eax
0x59c8:	call	0x19a0


0x59cd:	add	rsp, 0x20
0x59d1:	add	rsp, 0x28
0x59d5:	pop	rbx
0x59d6:	pop	rbp
0x59d7:	pop	r12
0x59d9:	pop	r13
0x59db:	pop	r14
0x59dd:	pop	r15
0x59df:	ret	


0x5a17:	push	r13
0x5a19:	push	r12
0x5a1b:	push	r15
0x5a1d:	push	r14
0x5a1f:	mov	r9, qword ptr [rsp + 0x28]
0x5a24:	jmp	0x59b3


0x59b3:	mov	r8, qword ptr [rsp + 0x20]
0x59b8:	mov	rcx, rbx
0x59bb:	mov	rdx, rax
0x59be:	mov	rdi, rbp
0x59c1:	mov	esi, 1
0x59c6:	xor	eax, eax
0x59c8:	call	0x19a0


0x58be:	add	rsp, 0x28
0x58c2:	mov	r9, r13
0x58c5:	mov	r8, r12
0x58c8:	mov	rcx, rbx
0x58cb:	mov	rdi, rbp
0x58ce:	mov	rdx, rax
0x58d1:	pop	rbx
0x58d2:	pop	rbp
0x58d3:	pop	r12
0x58d5:	pop	r13
0x58d7:	pop	r14
0x58d9:	pop	r15
0x58db:	mov	esi, 1
0x58e0:	xor	eax, eax
0x58e2:	jmp	0x19a0


0x4660:	sub	rsp, 8
0x4664:	mov	rcx, rbp
0x4667:	mov	rsi, r13
0x466a:	push	qword ptr [rsp + 0x68]
0x466e:	push	qword ptr [rsp + 0x78]
0x4672:	mov	rdi, r14
0x4675:	push	0
0x4677:	mov	r9d, dword ptr [rsp + 0x98]
0x467f:	mov	r8d, dword ptr [rsp + 0x28]
0x4684:	mov	rdx, qword ptr [rsp + 0x30]
0x4689:	and	r9d, 0xfffffffd
0x468d:	call	0x3ac0


0x4692:	add	rsp, 0x20
0x4696:	mov	r15, rax
0x4699:	mov	rbx, qword ptr [rsp + 0xa8]
0x46a1:	xor	rbx, qword ptr fs:[0x28]
0x46aa:	mov	rax, r15
0x46ad:	jne	0x4cb3


0x46b3:	add	rsp, 0xb8
0x46ba:	pop	rbx
0x46bb:	pop	rbp
0x46bc:	pop	r12
0x46be:	pop	r13
0x46c0:	pop	r14
0x46c2:	pop	r15
0x46c4:	ret	


0x4cb3:	call	0x1770


0x4c5d:	sub	rsp, 8
0x4c61:	mov	r8d, 5
0x4c67:	mov	rcx, r11
0x4c6a:	push	qword ptr [rsp + 0x68]
0x4c6e:	push	qword ptr [rsp + 0x78]
0x4c72:	mov	rdi, r14
0x4c75:	push	qword ptr [rsp + 0x38]
0x4c79:	mov	r9d, dword ptr [rsp + 0x98]
0x4c81:	mov	rdx, qword ptr [rsp + 0x30]
0x4c86:	mov	rsi, qword ptr [rsp + 0x70]
0x4c8b:	call	0x3ac0


0x4c90:	add	rsp, 0x20
0x4c94:	mov	r15, rax
0x4c97:	jmp	0x4699


0x4699:	mov	rbx, qword ptr [rsp + 0xa8]
0x46a1:	xor	rbx, qword ptr fs:[0x28]
0x46aa:	mov	rax, r15
0x46ad:	jne	0x4cb3


0x1660:	push	qword ptr [rip + 0x2077aa]
0x1666:	jmp	qword ptr [rip + 0x2077ac]


0x166c:	nop	dword ptr [rax]


0x1676:	push	0
0x167b:	jmp	0x1660


0x1686:	push	1
0x168b:	jmp	0x1660


0x1696:	push	2
0x169b:	jmp	0x1660


0x16a6:	push	3
0x16ab:	jmp	0x1660


0x16b6:	push	4
0x16bb:	jmp	0x1660


0x16c6:	push	5
0x16cb:	jmp	0x1660


0x16d6:	push	6
0x16db:	jmp	0x1660


0x16e6:	push	7
0x16eb:	jmp	0x1660


0x16f6:	push	8
0x16fb:	jmp	0x1660


0x1706:	push	9
0x170b:	jmp	0x1660


0x1716:	push	0xa
0x171b:	jmp	0x1660


0x1726:	push	0xb
0x172b:	jmp	0x1660


0x1736:	push	0xc
0x173b:	jmp	0x1660


0x1746:	push	0xd
0x174b:	jmp	0x1660


0x1756:	push	0xe
0x175b:	jmp	0x1660


0x1766:	push	0xf
0x176b:	jmp	0x1660


0x1776:	push	0x10
0x177b:	jmp	0x1660


0x1786:	push	0x11
0x178b:	jmp	0x1660


0x1796:	push	0x12
0x179b:	jmp	0x1660


0x17a6:	push	0x13
0x17ab:	jmp	0x1660


0x17b6:	push	0x14
0x17bb:	jmp	0x1660


0x17c6:	push	0x15
0x17cb:	jmp	0x1660


0x17d6:	push	0x16
0x17db:	jmp	0x1660


0x17e6:	push	0x17
0x17eb:	jmp	0x1660


0x17f6:	push	0x18
0x17fb:	jmp	0x1660


0x1806:	push	0x19
0x180b:	jmp	0x1660


0x1816:	push	0x1a
0x181b:	jmp	0x1660


0x1826:	push	0x1b
0x182b:	jmp	0x1660


0x1836:	push	0x1c
0x183b:	jmp	0x1660


0x1840:	jmp	qword ptr [rip + 0x2076c2]




0x1846:	push	0x1d
0x184b:	jmp	0x1660


0x1856:	push	0x1e
0x185b:	jmp	0x1660


0x1866:	push	0x1f
0x186b:	jmp	0x1660


0x1876:	push	0x20
0x187b:	jmp	0x1660


0x1886:	push	0x21
0x188b:	jmp	0x1660


0x1896:	push	0x22
0x189b:	jmp	0x1660


0x18a6:	push	0x23
0x18ab:	jmp	0x1660


0x18b6:	push	0x24
0x18bb:	jmp	0x1660


0x18c6:	push	0x25
0x18cb:	jmp	0x1660


0x18d6:	push	0x26
0x18db:	jmp	0x1660


0x18e6:	push	0x27
0x18eb:	jmp	0x1660


0x18f6:	push	0x28
0x18fb:	jmp	0x1660


0x1906:	push	0x29
0x190b:	jmp	0x1660


0x1916:	push	0x2a
0x191b:	jmp	0x1660


0x1926:	push	0x2b
0x192b:	jmp	0x1660


0x1936:	push	0x2c
0x193b:	jmp	0x1660


0x1946:	push	0x2d
0x194b:	jmp	0x1660


0x1956:	push	0x2e
0x195b:	jmp	0x1660


0x1966:	push	0x2f
0x196b:	jmp	0x1660


0x1976:	push	0x30
0x197b:	jmp	0x1660


0x1986:	push	0x31
0x198b:	jmp	0x1660


0x1996:	push	0x32
0x199b:	jmp	0x1660


0x19a6:	push	0x33
0x19ab:	jmp	0x1660


0x19b0:	jmp	qword ptr [rip + 0x20760a]




0x19b6:	push	0x34
0x19bb:	jmp	0x1660


0x19c0:	jmp	qword ptr [rip + 0x207602]




0x19c6:	push	0x35
0x19cb:	jmp	0x1660


0x19d6:	push	0x36
0x19db:	jmp	0x1660


0x1e5f:	nop	


0x1e8a:	hlt	


0x1e8b:	nop	dword ptr [rax + rax]


0x1ec2:	nop	dword ptr [rax]
0x1ec6:	nop	word ptr cs:[rax + rax]


0x1f12:	nop	dword ptr [rax]
0x1f16:	nop	word ptr cs:[rax + rax]


0x1f5a:	nop	word ptr [rax + rax]


0x1f6a:	nop	word ptr [rax + rax]


0x2757:	nop	word ptr [rax + rax]


0x2bea:	nop	word ptr [rax + rax]


0x2c06:	nop	word ptr cs:[rax + rax]


0x2cd9:	nop	dword ptr [rax]


0x3298:	nop	dword ptr [rax + rax]


0x32d6:	nop	word ptr cs:[rax + rax]


0x32e8:	nop	dword ptr [rax + rax]


0x32f8:	nop	dword ptr [rax + rax]


0x33a4:	nop	word ptr cs:[rax + rax]
0x33ae:	nop	


0x33b5:	nop	
0x33b6:	nop	word ptr cs:[rax + rax]


0x33e2:	nop	word ptr cs:[rax + rax]
0x33ec:	nop	dword ptr [rax]


0x376f:	nop	


0x3926:	nop	word ptr cs:[rax + rax]


0x39cf:	nop	


0x3ab7:	nop	word ptr [rax + rax]


0x3b53:	mov	byte ptr [rsp + 0xe], 1
0x3b58:	mov	byte ptr [rsp + 0x7c], 0
0x3b5d:	xor	r12d, r12d
0x3b60:	mov	qword ptr [rsp + 0x50], 0
0x3b69:	mov	byte ptr [rsp + 0xf], 1
0x3b6e:	mov	byte ptr [rsp + 0xd], 0
0x3b73:	lea	rax, [rip + 0x34fb]
0x3b7a:	mov	qword ptr [rsp + 0x18], 1
0x3b83:	xor	r15d, r15d
0x3b86:	mov	dword ptr [rsp + 8], 2
0x3b8e:	mov	qword ptr [rsp + 0x48], rax
0x3b93:	xor	r11d, r11d
0x3b96:	mov	rax, rbp
0x3b99:	mov	r8d, r12d
0x3b9c:	mov	rbp, r11
0x3b9f:	mov	r11, rax
0x3ba2:	nop	word ptr [rax + rax]
0x3ba8:	cmp	r11, rbp
0x3bab:	setne	r12b
0x3baf:	cmp	r11, -1
0x3bb3:	jne	0x3bc2


0x3bb5:	mov	rax, qword ptr [rsp + 0x10]
0x3bba:	cmp	byte ptr [rax + rbp], 0
0x3bbe:	setne	r12b
0x3bc2:	test	r12b, r12b
0x3bc5:	je	0x4220


0x3bc2:	test	r12b, r12b
0x3bc5:	je	0x4220


0x4220:	cmp	dword ptr [rsp + 8], 2
0x4225:	movzx	ebx, byte ptr [rsp + 0xf]
0x422a:	mov	r12d, r8d
0x422d:	mov	rbp, r11
0x4230:	sete	dl
0x4233:	mov	eax, ebx
0x4235:	test	r15, r15
0x4238:	sete	cl
0x423b:	and	eax, edx
0x423d:	and	al, cl
0x423f:	jne	0x4ca6


0x3bcb:	cmp	dword ptr [rsp + 8], 2
0x3bd0:	mov	rdi, qword ptr [rsp + 0x10]
0x3bd5:	lea	r9, [rdi + rbp]
0x3bd9:	setne	al
0x3bdc:	and	al, byte ptr [rsp + 0xd]
0x3be0:	mov	r10d, eax
0x3be3:	je	0x3c90


0x4245:	mov	eax, ebx
0x4247:	xor	eax, 1
0x424a:	and	dl, al
0x424c:	je	0x4bbc


0x4ca6:	mov	dword ptr [rsp + 8], 2
0x4cae:	jmp	0x4649


0x3c90:	movzx	ebx, byte ptr [r9]
0x3c94:	cmp	bl, 0x7e
0x3c97:	ja	0x3fb8


0x3be9:	mov	rax, qword ptr [rsp + 0x18]
0x3bee:	test	rax, rax
0x3bf1:	je	0x4020


0x4bbc:	mov	rbx, qword ptr [rsp + 0x48]
0x4bc1:	test	rbx, rbx
0x4bc4:	je	0x4bf2


0x4252:	cmp	byte ptr [rsp + 0x7c], 0
0x4257:	je	0x4bba


0x4649:	cmp	byte ptr [rsp + 0xd], 0
0x464e:	je	0x4660


0x3c9d:	lea	rcx, [rip + 0x3468]
0x3ca4:	movzx	edx, bl
0x3ca7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x3cab:	add	rax, rcx
0x3cae:	jmp	rax


0x3fb8:	cmp	qword ptr [rsp + 0x58], 1
0x3fbe:	jne	0x4368


0x4020:	movzx	ebx, byte ptr [r9]
0x4024:	cmp	bl, 0x7e
0x4027:	ja	0x3fb0


0x3bf7:	cmp	r11, -1
0x3bfb:	lea	rbx, [rbp + rax]
0x3c00:	jne	0x3c30


0x4bf2:	cmp	r13, r15
0x4bf5:	jbe	0x4699


0x4bc6:	test	al, al
0x4bc8:	je	0x4bf2


0x4bba:	mov	eax, edx
0x4bbc:	mov	rbx, qword ptr [rsp + 0x48]
0x4bc1:	test	rbx, rbx
0x4bc4:	je	0x4bf2


0x425d:	cmp	byte ptr [rsp + 0xe], 0
0x4262:	jne	0x4c5d


0x4650:	test	al, al
0x4652:	mov	eax, 4
0x4657:	cmove	eax, dword ptr [rsp + 8]
0x465c:	mov	dword ptr [rsp + 8], eax


0x3fc4:	mov	qword ptr [rsp + 0x38], r11
0x3fc9:	mov	byte ptr [rsp + 0x30], r8b
0x3fce:	mov	byte ptr [rsp + 0x28], r10b
0x3fd3:	call	0x19d0


0x4368:	lea	rax, [rsp + 0xa0]
0x4370:	cmp	r11, -1
0x4374:	mov	qword ptr [rsp + 0xa0], 0
0x4380:	mov	qword ptr [rsp + 0x28], rax
0x4385:	jne	0x43b4


0x4029:	lea	rcx, [rip + 0x32d8]
0x4030:	movzx	edx, bl
0x4033:	movsxd	rax, dword ptr [rcx + rdx*4]
0x4037:	add	rax, rcx
0x403a:	jmp	rax


0x3fb0:	xor	r10d, r10d
0x3fb3:	nop	dword ptr [rax + rax]
0x3fb8:	cmp	qword ptr [rsp + 0x58], 1
0x3fbe:	jne	0x4368


0x3c02:	cmp	rax, 1
0x3c06:	jbe	0x3c30


0x3c30:	cmp	rbx, r11
0x3c33:	mov	byte ptr [rsp + 0x28], r10b
0x3c38:	ja	0x41f0


0x4bfb:	mov	byte ptr [r14 + r15], 0
0x4c00:	jmp	0x4699


0x4bca:	movzx	ecx, byte ptr [rbx]
0x4bcd:	mov	rax, rbx
0x4bd0:	test	cl, cl
0x4bd2:	je	0x4bf2


0x4268:	test	r13, r13
0x426b:	sete	al
0x426e:	cmp	qword ptr [rsp + 0x50], 0
0x4274:	setne	dl
0x4277:	and	al, dl
0x4279:	je	0x4c9c


0x4387:	mov	rdi, qword ptr [rsp + 0x10]
0x438c:	mov	byte ptr [rsp + 0x40], r8b
0x4391:	mov	byte ptr [rsp + 0x38], r10b
0x4396:	mov	qword ptr [rsp + 0x30], r9
0x439b:	call	0x1760


0x43b4:	lea	rax, [rsp + 0x9c]
0x43bc:	xor	ecx, ecx
0x43be:	mov	byte ptr [rsp + 0x7e], bl
0x43c2:	mov	byte ptr [rsp + 0x7d], r8b
0x43c7:	mov	rbx, rcx
0x43ca:	mov	qword ptr [rsp + 0x88], r9
0x43d2:	mov	qword ptr [rsp + 0x38], rax
0x43d7:	mov	byte ptr [rsp + 0x7f], r10b
0x43dc:	mov	qword ptr [rsp + 0x80], r15
0x43e4:	mov	qword ptr [rsp + 0x40], r14
0x43e9:	mov	qword ptr [rsp + 0x70], r13
0x43ee:	mov	qword ptr [rsp + 0x30], r11
0x43f3:	mov	rax, qword ptr [rsp + 0x10]
0x43f8:	lea	r14, [rbp + rbx]
0x43fd:	mov	rdx, qword ptr [rsp + 0x30]
0x4402:	mov	rcx, qword ptr [rsp + 0x28]
0x4407:	mov	rdi, qword ptr [rsp + 0x38]
0x440c:	lea	r13, [rax + r14]
0x4410:	sub	rdx, r14
0x4413:	mov	rsi, r13
0x4416:	call	0x6080


0x3c08:	mov	byte ptr [rsp + 0x38], r8b
0x3c0d:	mov	byte ptr [rsp + 0x30], r10b
0x3c12:	mov	qword ptr [rsp + 0x28], r9
0x3c17:	call	0x1760


0x3c3e:	mov	rdx, qword ptr [rsp + 0x18]
0x3c43:	mov	rsi, qword ptr [rsp + 0x48]
0x3c48:	mov	rdi, r9
0x3c4b:	mov	qword ptr [rsp + 0x40], r11
0x3c50:	mov	byte ptr [rsp + 0x38], r8b
0x3c55:	mov	qword ptr [rsp + 0x30], r9
0x3c5a:	call	0x1840


0x41f0:	xor	r10d, r10d
0x41f3:	jmp	0x3c90


0x4bd4:	mov	rdx, r15
0x4bd7:	sub	rax, r15
0x4bda:	cmp	r13, rdx
0x4bdd:	jbe	0x4be3


0x4c9c:	movzx	eax, byte ptr [rsp + 0x7c]
0x4ca1:	jmp	0x4bbc


0x427f:	mov	r13, qword ptr [rsp + 0x50]
0x4284:	lea	rbx, [rip + 0x2dea]
0x428b:	mov	byte ptr [r14], 0x27
0x428f:	mov	dword ptr [rsp + 8], 2
0x4297:	mov	r15d, 1
0x429d:	mov	qword ptr [rsp + 0x18], 1
0x42a6:	mov	byte ptr [rsp + 0xf], 0
0x42ab:	mov	qword ptr [rsp + 0x48], rbx
0x42b0:	mov	byte ptr [rsp + 0x7c], al
0x42b4:	jmp	0x3b93


0x4be3:	add	rdx, 1
0x4be7:	movzx	ecx, byte ptr [rax + rdx]
0x4beb:	test	cl, cl
0x4bed:	jne	0x4bda


0x4bdf:	mov	byte ptr [r14 + rdx], cl
0x4be3:	add	rdx, 1
0x4be7:	movzx	ecx, byte ptr [rax + rdx]
0x4beb:	test	cl, cl
0x4bed:	jne	0x4bda


0x3b93:	xor	r11d, r11d
0x3b96:	mov	rax, rbp
0x3b99:	mov	r8d, r12d
0x3b9c:	mov	rbp, r11
0x3b9f:	mov	r11, rax
0x3ba2:	nop	word ptr [rax + rax]
0x3ba8:	cmp	r11, rbp
0x3bab:	setne	r12b
0x3baf:	cmp	r11, -1
0x3bb3:	jne	0x3bc2


0x4bef:	mov	r15, rdx
0x4bf2:	cmp	r13, r15
0x4bf5:	jbe	0x4699


0x4bda:	cmp	r13, rdx
0x4bdd:	jbe	0x4be3


0x3c5f:	test	eax, eax
0x3c61:	mov	r9, qword ptr [rsp + 0x30]
0x3c66:	movzx	r8d, byte ptr [rsp + 0x38]
0x3c6c:	mov	r11, qword ptr [rsp + 0x40]
0x3c71:	jne	0x41f0


0x3c77:	cmp	byte ptr [rsp + 0xf], 0
0x3c7c:	movzx	r10d, byte ptr [rsp + 0x28]
0x3c82:	jne	0x4c05


0x4c05:	cmp	dword ptr [rsp + 8], 2
0x4c0a:	movzx	ebx, byte ptr [rsp + 0xf]
0x4c0f:	mov	rbp, r11
0x4c12:	sete	al
0x4c15:	mov	byte ptr [rsp + 0xd], bl
0x4c19:	jmp	0x4649


0x441b:	test	rax, rax
0x441e:	mov	r15, rax
0x4421:	je	0x4471


0x4471:	mov	edx, r12d
0x4474:	mov	rdi, rbx
0x4477:	movzx	r8d, byte ptr [rsp + 0x7d]
0x447d:	xor	edx, 1
0x4480:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4485:	movzx	r10d, byte ptr [rsp + 0x7f]
0x448b:	and	dl, byte ptr [rsp + 0xd]
0x448f:	mov	r15, qword ptr [rsp + 0x80]
0x4497:	mov	r14, qword ptr [rsp + 0x40]
0x449c:	mov	r13, qword ptr [rsp + 0x70]
0x44a1:	mov	r11, qword ptr [rsp + 0x30]
0x44a6:	cmp	rdi, 1
0x44aa:	jbe	0x4aab


0x4423:	cmp	rax, -1
0x4427:	je	0x4a45


0x4aab:	mov	eax, edx
0x4aad:	jmp	0x4007


0x44b0:	mov	rcx, rdi
0x44b3:	xor	esi, esi
0x44b5:	movzx	r9d, byte ptr [rsp + 0xf]
0x44bb:	add	rcx, rbp
0x44be:	mov	rdi, qword ptr [rsp + 0x10]
0x44c3:	jmp	0x457e


0x4a45:	mov	rdi, rbx
0x4a48:	movzx	r8d, byte ptr [rsp + 0x7d]
0x4a4e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4a53:	movzx	r10d, byte ptr [rsp + 0x7f]
0x4a59:	mov	r15, qword ptr [rsp + 0x80]
0x4a61:	xor	r12d, r12d
0x4a64:	mov	r14, qword ptr [rsp + 0x40]
0x4a69:	mov	r13, qword ptr [rsp + 0x70]
0x4a6e:	mov	r11, qword ptr [rsp + 0x30]
0x4a73:	movzx	edx, byte ptr [rsp + 0xd]
0x4a78:	jmp	0x44a6


0x442d:	cmp	rax, -2
0x4431:	je	0x49d1


0x4007:	test	al, al
0x4009:	jne	0x49a1


0x457e:	test	dl, dl
0x4580:	jne	0x44d0


0x44a6:	cmp	rdi, 1
0x44aa:	jbe	0x4aab


0x49d1:	mov	r11, qword ptr [rsp + 0x30]
0x49d6:	mov	rsi, r14
0x49d9:	mov	rcx, r13
0x49dc:	mov	rax, rbx
0x49df:	mov	rdi, rbx
0x49e2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x49e8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x49ed:	mov	r9, qword ptr [rsp + 0x88]
0x49f5:	cmp	rsi, r11
0x49f8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x49fe:	mov	r15, qword ptr [rsp + 0x80]
0x4a06:	mov	r14, qword ptr [rsp + 0x40]
0x4a0b:	mov	r13, qword ptr [rsp + 0x70]
0x4a10:	jae	0x4a38


0x4437:	cmp	dword ptr [rsp + 8], 2
0x443c:	sete	al
0x443f:	and	al, byte ptr [rsp + 0xf]
0x4443:	jne	0x45e0


0x400f:	cmp	dword ptr [rsp + 8], 2
0x4014:	sete	dl
0x4017:	jmp	0x3ce8


0x49a1:	movzx	edx, byte ptr [rsp + 0xd]
0x49a6:	xor	r12d, r12d
0x49a9:	jmp	0x44b0


0x4586:	mov	eax, esi
0x4588:	xor	eax, 1
0x458b:	and	eax, r8d
0x458e:	test	r10b, r10b
0x4591:	je	0x45a1


0x44d0:	cmp	dword ptr [rsp + 8], 2
0x44d5:	sete	al
0x44d8:	test	r9b, r9b
0x44db:	jne	0x4990


0x4a12:	cmp	byte ptr [rcx], 0
0x4a15:	jne	0x4a27


0x4a38:	movzx	edx, byte ptr [rsp + 0xd]
0x4a3d:	xor	r12d, r12d
0x4a40:	jmp	0x44a6


0x4449:	mov	edi, dword ptr [rsp + 0x9c]
0x4450:	call	0x19c0


0x45e0:	cmp	r15, 1
0x45e4:	je	0x4449


0x3ce8:	cmp	byte ptr [rsp + 0xd], 1
0x3ced:	jne	0x3e02


0x45a1:	add	rbp, 1
0x45a5:	cmp	rbp, rcx
0x45a8:	jae	0x3d2c


0x4593:	cmp	r13, r15
0x4596:	jbe	0x459d


0x44e1:	mov	esi, r8d
0x44e4:	xor	esi, 1
0x44e7:	and	al, sil
0x44ea:	je	0x451b


0x4990:	movzx	ebx, byte ptr [rsp + 0xf]
0x4995:	mov	rbp, r11
0x4998:	mov	byte ptr [rsp + 0xd], bl
0x499c:	jmp	0x4649


0x4a17:	jmp	0x4a38


0x4a27:	add	rax, 1
0x4a2b:	lea	rdx, [rbp + rax]
0x4a30:	cmp	r11, rdx
0x4a33:	ja	0x4a20


0x45ea:	mov	rdi, qword ptr [rsp + 0x10]
0x45ef:	lea	rcx, [rdi + r15]
0x45f3:	lea	rdx, [rdi + r14 + 1]
0x45f8:	lea	r8, [rcx + r14]
0x45fc:	jmp	0x460d


0x3cf3:	test	dl, dl
0x3cf5:	jne	0x3e02


0x3e02:	cmp	byte ptr [rsp + 0xf], 0
0x3e07:	jne	0x3cfb


0x45ae:	test	al, al
0x45b0:	je	0x49ae


0x3d2c:	test	al, al
0x3d2e:	je	0x3d50


0x459d:	add	r15, 1
0x45a1:	add	rbp, 1
0x45a5:	cmp	rbp, rcx
0x45a8:	jae	0x3d2c


0x4598:	mov	byte ptr [r14 + r15], 0x5c
0x459d:	add	r15, 1
0x45a1:	add	rbp, 1
0x45a5:	cmp	rbp, rcx
0x45a8:	jae	0x3d2c


0x451b:	cmp	r13, r15
0x451e:	jbe	0x4525


0x44ec:	cmp	r13, r15
0x44ef:	jbe	0x44f6


0x4a35:	mov	rdi, rax
0x4a38:	movzx	edx, byte ptr [rsp + 0xd]
0x4a3d:	xor	r12d, r12d
0x4a40:	jmp	0x44a6


0x4a20:	cmp	byte ptr [r9 + rax], 0
0x4a25:	je	0x4a35


0x460d:	movzx	ecx, byte ptr [rdx]
0x4610:	sub	ecx, 0x5b
0x4613:	cmp	cl, 0x21
0x4616:	ja	0x4600


0x3cfb:	mov	rsi, qword ptr [rsp + 0x20]
0x3d00:	test	rsi, rsi
0x3d03:	je	0x3d19


0x3e0d:	jmp	0x3d19


0x49ae:	xor	r10d, r10d
0x49b1:	jmp	0x456d


0x45b6:	cmp	r13, r15
0x45b9:	jbe	0x45c0


0x3d50:	cmp	r15, r13
0x3d53:	jae	0x3d59


0x3d30:	cmp	r13, r15
0x3d33:	jbe	0x3d3a


0x4525:	lea	rax, [r15 + 1]
0x4529:	cmp	r13, rax
0x452c:	jbe	0x453b


0x4520:	mov	byte ptr [r14 + r15], 0x5c
0x4525:	lea	rax, [r15 + 1]
0x4529:	cmp	r13, rax
0x452c:	jbe	0x453b


0x44f6:	lea	rsi, [r15 + 1]
0x44fa:	cmp	r13, rsi
0x44fd:	jbe	0x4505


0x44f1:	mov	byte ptr [r14 + r15], 0x27
0x44f6:	lea	rsi, [r15 + 1]
0x44fa:	cmp	r13, rsi
0x44fd:	jbe	0x4505


0x4618:	mov	esi, 1
0x461d:	shl	rsi, cl
0x4620:	mov	rcx, rsi
0x4623:	movabs	rsi, 0x20000002b
0x462d:	test	rcx, rsi
0x4630:	je	0x4600


0x4600:	add	rdx, 1
0x4604:	cmp	r8, rdx
0x4607:	je	0x4449


0x3d19:	test	r10b, r10b
0x3d1c:	jne	0x3e63


0x3d05:	mov	edx, ebx
0x3d07:	shr	dl, 5
0x3d0a:	movzx	edx, dl
0x3d0d:	mov	edx, dword ptr [rsi + rdx*4]
0x3d10:	bt	edx, ebx
0x3d13:	jb	0x3e63


0x456d:	cmp	r13, r15
0x4570:	jbe	0x4576


0x45c0:	lea	rax, [r15 + 1]
0x45c4:	cmp	r13, rax
0x45c7:	jbe	0x45cf


0x45bb:	mov	byte ptr [r14 + r15], 0x27
0x45c0:	lea	rax, [r15 + 1]
0x45c4:	cmp	r13, rax
0x45c7:	jbe	0x45cf


0x3d55:	mov	byte ptr [r14 + r15], bl
0x3d59:	movzx	edi, byte ptr [rsp + 0xe]
0x3d5e:	add	r15, 1
0x3d62:	mov	eax, 0
0x3d67:	test	r12b, r12b
0x3d6a:	cmove	edi, eax
0x3d6d:	mov	byte ptr [rsp + 0xe], dil
0x3d72:	jmp	0x3ba8


0x3d59:	movzx	edi, byte ptr [rsp + 0xe]
0x3d5e:	add	r15, 1
0x3d62:	mov	eax, 0
0x3d67:	test	r12b, r12b
0x3d6a:	cmove	edi, eax
0x3d6d:	mov	byte ptr [rsp + 0xe], dil
0x3d72:	jmp	0x3ba8


0x3d3a:	lea	rax, [r15 + 1]
0x3d3e:	cmp	r13, rax
0x3d41:	jbe	0x3d49


0x3d35:	mov	byte ptr [r14 + r15], 0x27
0x3d3a:	lea	rax, [r15 + 1]
0x3d3e:	cmp	r13, rax
0x3d41:	jbe	0x3d49


0x453b:	lea	rax, [r15 + 2]
0x453f:	cmp	r13, rax
0x4542:	jbe	0x4554


0x452e:	mov	eax, ebx
0x4530:	shr	al, 6
0x4533:	add	eax, 0x30
0x4536:	mov	byte ptr [r14 + r15 + 1], al
0x453b:	lea	rax, [r15 + 2]
0x453f:	cmp	r13, rax
0x4542:	jbe	0x4554


0x4505:	lea	rsi, [r15 + 2]
0x4509:	cmp	r13, rsi
0x450c:	jbe	0x4514


0x44ff:	mov	byte ptr [r14 + r15 + 1], 0x24
0x4505:	lea	rsi, [r15 + 2]
0x4509:	cmp	r13, rsi
0x450c:	jbe	0x4514


0x4632:	mov	r14, qword ptr [rsp + 0x40]
0x4637:	mov	r13, qword ptr [rsp + 0x70]
0x463c:	mov	rbp, qword ptr [rsp + 0x30]
0x4641:	mov	dword ptr [rsp + 8], 2
0x4649:	cmp	byte ptr [rsp + 0xd], 0
0x464e:	je	0x4660


0x3d22:	xor	eax, 1
0x3d25:	add	rbp, 1
0x3d29:	and	eax, r8d
0x3d2c:	test	al, al
0x3d2e:	je	0x3d50


0x3e63:	cmp	dword ptr [rsp + 8], 2
0x3e68:	sete	dl
0x3e6b:	cmp	byte ptr [rsp + 0xf], 0
0x3e70:	mov	eax, edx
0x3e72:	jne	0x46c8


0x4576:	movzx	ebx, byte ptr [rdi + rbp]
0x457a:	add	r15, 1
0x457e:	test	dl, dl
0x4580:	jne	0x44d0


0x4572:	mov	byte ptr [r14 + r15], bl
0x4576:	movzx	ebx, byte ptr [rdi + rbp]
0x457a:	add	r15, 1
0x457e:	test	dl, dl
0x4580:	jne	0x44d0


0x45cf:	add	r15, 2
0x45d3:	xor	r10d, r10d
0x45d6:	xor	r8d, r8d
0x45d9:	jmp	0x456d


0x45c9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x45cf:	add	r15, 2
0x45d3:	xor	r10d, r10d
0x45d6:	xor	r8d, r8d
0x45d9:	jmp	0x456d


0x3ba8:	cmp	r11, rbp
0x3bab:	setne	r12b
0x3baf:	cmp	r11, -1
0x3bb3:	jne	0x3bc2


0x3d49:	add	r15, 2
0x3d4d:	xor	r8d, r8d
0x3d50:	cmp	r15, r13
0x3d53:	jae	0x3d59


0x3d43:	mov	byte ptr [r14 + r15 + 1], 0x27
0x3d49:	add	r15, 2
0x3d4d:	xor	r8d, r8d
0x3d50:	cmp	r15, r13
0x3d53:	jae	0x3d59


0x4554:	and	ebx, 7
0x4557:	add	rbp, 1
0x455b:	add	r15, 3
0x455f:	add	ebx, 0x30
0x4562:	cmp	rbp, rcx
0x4565:	jae	0x3d50


0x4544:	mov	eax, ebx
0x4546:	shr	al, 3
0x4549:	and	eax, 7
0x454c:	add	eax, 0x30
0x454f:	mov	byte ptr [r14 + r15 + 2], al
0x4554:	and	ebx, 7
0x4557:	add	rbp, 1
0x455b:	add	r15, 3
0x455f:	add	ebx, 0x30
0x4562:	cmp	rbp, rcx
0x4565:	jae	0x3d50


0x4514:	add	r15, 3
0x4518:	mov	r8d, eax
0x451b:	cmp	r13, r15
0x451e:	jbe	0x4525


0x450e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x4514:	add	r15, 3
0x4518:	mov	r8d, eax
0x451b:	cmp	r13, r15
0x451e:	jbe	0x4525


0x3e78:	mov	eax, r8d
0x3e7b:	xor	eax, 1
0x3e7e:	and	al, dl
0x3e80:	je	0x3eb1


0x46c8:	mov	rbp, r11
0x46cb:	jmp	0x4649


0x456b:	mov	esi, edx
0x456d:	cmp	r13, r15
0x4570:	jbe	0x4576


0x3eb1:	cmp	r13, r15
0x3eb4:	jbe	0x3ebb


0x3e82:	cmp	r13, r15
0x3e85:	jbe	0x3e8c


0x3ebb:	add	r15, 1
0x3ebf:	add	rbp, 1
0x3ec3:	jmp	0x3d50


0x3eb6:	mov	byte ptr [r14 + r15], 0x5c
0x3ebb:	add	r15, 1
0x3ebf:	add	rbp, 1
0x3ec3:	jmp	0x3d50


0x3e8c:	lea	rdx, [r15 + 1]
0x3e90:	cmp	r13, rdx
0x3e93:	jbe	0x3e9b


0x3e87:	mov	byte ptr [r14 + r15], 0x27
0x3e8c:	lea	rdx, [r15 + 1]
0x3e90:	cmp	r13, rdx
0x3e93:	jbe	0x3e9b


0x3e9b:	lea	rdx, [r15 + 2]
0x3e9f:	cmp	r13, rdx
0x3ea2:	jbe	0x3eaa


0x3e95:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3e9b:	lea	rdx, [r15 + 2]
0x3e9f:	cmp	r13, rdx
0x3ea2:	jbe	0x3eaa


0x3eaa:	add	r15, 3
0x3eae:	mov	r8d, eax
0x3eb1:	cmp	r13, r15
0x3eb4:	jbe	0x3ebb


0x3ea4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x3eaa:	add	r15, 3
0x3eae:	mov	r8d, eax
0x3eb1:	cmp	r13, r15
0x3eb4:	jbe	0x3ebb


0x4455:	mov	rdi, qword ptr [rsp + 0x28]
0x445a:	test	eax, eax
0x445c:	mov	eax, 0
0x4461:	cmove	r12d, eax
0x4465:	add	rbx, r15
0x4468:	call	0x19b0


0x446d:	test	eax, eax
0x446f:	je	0x43f3


0x43f3:	mov	rax, qword ptr [rsp + 0x10]
0x43f8:	lea	r14, [rbp + rbx]
0x43fd:	mov	rdx, qword ptr [rsp + 0x30]
0x4402:	mov	rcx, qword ptr [rsp + 0x28]
0x4407:	mov	rdi, qword ptr [rsp + 0x38]
0x440c:	lea	r13, [rax + r14]
0x4410:	sub	rdx, r14
0x4413:	mov	rsi, r13
0x4416:	call	0x6080


0x3c1c:	movzx	r8d, byte ptr [rsp + 0x38]
0x3c22:	movzx	r10d, byte ptr [rsp + 0x30]
0x3c28:	mov	r11, rax
0x3c2b:	mov	r9, qword ptr [rsp + 0x28]
0x3c30:	cmp	rbx, r11
0x3c33:	mov	byte ptr [rsp + 0x28], r10b
0x3c38:	ja	0x41f0


0x43a0:	movzx	r8d, byte ptr [rsp + 0x40]
0x43a6:	movzx	r10d, byte ptr [rsp + 0x38]
0x43ac:	mov	r11, rax
0x43af:	mov	r9, qword ptr [rsp + 0x30]
0x43b4:	lea	rax, [rsp + 0x9c]
0x43bc:	xor	ecx, ecx
0x43be:	mov	byte ptr [rsp + 0x7e], bl
0x43c2:	mov	byte ptr [rsp + 0x7d], r8b
0x43c7:	mov	rbx, rcx
0x43ca:	mov	qword ptr [rsp + 0x88], r9
0x43d2:	mov	qword ptr [rsp + 0x38], rax
0x43d7:	mov	byte ptr [rsp + 0x7f], r10b
0x43dc:	mov	qword ptr [rsp + 0x80], r15
0x43e4:	mov	qword ptr [rsp + 0x40], r14
0x43e9:	mov	qword ptr [rsp + 0x70], r13
0x43ee:	mov	qword ptr [rsp + 0x30], r11
0x43f3:	mov	rax, qword ptr [rsp + 0x10]
0x43f8:	lea	r14, [rbp + rbx]
0x43fd:	mov	rdx, qword ptr [rsp + 0x30]
0x4402:	mov	rcx, qword ptr [rsp + 0x28]
0x4407:	mov	rdi, qword ptr [rsp + 0x38]
0x440c:	lea	r13, [rax + r14]
0x4410:	sub	rdx, r14
0x4413:	mov	rsi, r13
0x4416:	call	0x6080


0x3fd8:	mov	rcx, qword ptr [rax]
0x3fdb:	movzx	edx, bl
0x3fde:	movzx	r10d, byte ptr [rsp + 0x28]
0x3fe4:	movzx	r8d, byte ptr [rsp + 0x30]
0x3fea:	mov	r11, qword ptr [rsp + 0x38]
0x3fef:	mov	edi, 1
0x3ff4:	movzx	eax, word ptr [rcx + rdx*2]
0x3ff8:	and	ax, 0x4000
0x3ffc:	setne	r12b
0x4000:	sete	al
0x4003:	and	al, byte ptr [rsp + 0xd]
0x4007:	test	al, al
0x4009:	jne	0x49a1


0x3cb0:	xor	r10d, r10d
0x3cb3:	cmp	r11, 1
0x3cb7:	setne	al
0x3cba:	cmp	r11, -1
0x3cbe:	jne	0x3ccc


0x3cc0:	mov	rax, qword ptr [rsp + 0x10]
0x3cc5:	cmp	byte ptr [rax + 1], 0
0x3cc9:	setne	al
0x3ccc:	cmp	dword ptr [rsp + 8], 2
0x3cd1:	sete	dl
0x3cd4:	test	al, al
0x3cd6:	je	0x3f28


0x3ccc:	cmp	dword ptr [rsp + 8], 2
0x3cd1:	sete	dl
0x3cd4:	test	al, al
0x3cd6:	je	0x3f28


0x3f28:	test	rbp, rbp
0x3f2b:	jne	0x3cdc


0x3cdc:	xor	r12d, r12d
0x3cdf:	xor	eax, eax
0x3ce1:	nop	dword ptr [rax]
0x3ce8:	cmp	byte ptr [rsp + 0xd], 1
0x3ced:	jne	0x3e02


0x3f31:	movzx	eax, byte ptr [rsp + 0xf]
0x3f36:	and	al, dl
0x3f38:	je	0x3ce8


0x3f3e:	mov	rbp, r11
0x3f41:	mov	dword ptr [rsp + 8], 2
0x3f49:	jmp	0x4649


0x4348:	cmp	byte ptr [rsp + 0xf], 0
0x434d:	jne	0x4b70


0x3d90:	cmp	eax, 5
0x3d93:	je	0x4308


0x4353:	xor	r12d, r12d
0x4356:	xor	eax, eax
0x4358:	mov	ebx, 0x3f
0x435d:	jmp	0x3d19


0x4b70:	mov	rbp, r11
0x4b73:	movzx	eax, byte ptr [rsp + 0xf]
0x4b78:	jmp	0x4649


0x4308:	test	byte ptr [rsp + 0x78], 4
0x430d:	je	0x4330


0x3d99:	cmp	eax, 2
0x3d9c:	mov	ebx, 0x3f
0x3da1:	sete	dl
0x3da4:	xor	r12d, r12d
0x3da7:	xor	eax, eax
0x3da9:	jmp	0x3ce8


0x4330:	xor	edx, edx
0x4332:	xor	r12d, r12d
0x4335:	xor	eax, eax
0x4337:	mov	ebx, 0x3f
0x433c:	jmp	0x3ce8


0x430f:	lea	rcx, [rbp + 2]
0x4313:	cmp	rcx, r11
0x4316:	jae	0x4330


0x4318:	mov	rax, qword ptr [rsp + 0x10]
0x431d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x4322:	je	0x4ab2


0x4ab2:	movzx	ebx, byte ptr [rax + rcx]
0x4ab6:	cmp	bl, 0x3e
0x4ab9:	ja	0x4330


0x4abf:	movabs	rax, 0x7000a38200000000
0x4ac9:	bt	rax, rbx
0x4acd:	jae	0x4330


0x4ad3:	cmp	byte ptr [rsp + 0xf], 0
0x4ad8:	jne	0x4cc2


0x4ade:	cmp	r13, r15
0x4ae1:	jbe	0x4ae8


0x4cc2:	mov	rbp, r11
0x4cc5:	jmp	0x4660


0x4ae8:	lea	rax, [r15 + 1]
0x4aec:	cmp	r13, rax
0x4aef:	jbe	0x4af7


0x4ae3:	mov	byte ptr [r14 + r15], 0x3f
0x4ae8:	lea	rax, [r15 + 1]
0x4aec:	cmp	r13, rax
0x4aef:	jbe	0x4af7


0x4af7:	lea	rax, [r15 + 2]
0x4afb:	cmp	r13, rax
0x4afe:	jbe	0x4b06


0x4af1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x4af7:	lea	rax, [r15 + 2]
0x4afb:	cmp	r13, rax
0x4afe:	jbe	0x4b06


0x4b06:	lea	rax, [r15 + 3]
0x4b0a:	cmp	r13, rax
0x4b0d:	jbe	0x4b15


0x4b00:	mov	byte ptr [r14 + r15 + 2], 0x22
0x4b06:	lea	rax, [r15 + 3]
0x4b0a:	cmp	r13, rax
0x4b0d:	jbe	0x4b15


0x4b15:	add	r15, 4
0x4b19:	xor	edx, edx
0x4b1b:	xor	r12d, r12d
0x4b1e:	xor	eax, eax
0x4b20:	mov	rbp, rcx
0x4b23:	jmp	0x3ce8


0x4b0f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x4b15:	add	r15, 4
0x4b19:	xor	edx, edx
0x4b1b:	xor	r12d, r12d
0x4b1e:	xor	eax, eax
0x4b20:	mov	rbp, rcx
0x4b23:	jmp	0x3ce8


0x42c0:	cmp	byte ptr [rsp + 0xf], 0
0x42c5:	jne	0x4b70


0x3dbe:	mov	byte ptr [rsp + 0x7c], r12b
0x3dc3:	xor	edx, edx
0x3dc5:	xor	eax, eax
0x3dc7:	mov	ebx, 0x27
0x3dcc:	jmp	0x3ce8


0x42cb:	test	r13, r13
0x42ce:	je	0x46d0


0x46d0:	cmp	r13, r15
0x46d3:	jbe	0x46da


0x42d4:	xor	edx, edx
0x42d6:	cmp	qword ptr [rsp + 0x50], 0
0x42dc:	jne	0x46d0


0x46da:	lea	rax, [r15 + 1]
0x46de:	cmp	r13, rax
0x46e1:	jbe	0x46e9


0x46d5:	mov	byte ptr [r14 + r15], 0x27
0x46da:	lea	rax, [r15 + 1]
0x46de:	cmp	r13, rax
0x46e1:	jbe	0x46e9


0x42e2:	mov	qword ptr [rsp + 0x50], r13
0x42e7:	add	r15, 3
0x42eb:	xor	eax, eax
0x42ed:	mov	byte ptr [rsp + 0x7c], r12b
0x42f2:	xor	r8d, r8d
0x42f5:	mov	r13, rdx
0x42f8:	mov	ebx, 0x27
0x42fd:	jmp	0x3d19


0x46e9:	lea	rax, [r15 + 2]
0x46ed:	cmp	r13, rax
0x46f0:	jbe	0x4ce2


0x46e3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x46e9:	lea	rax, [r15 + 2]
0x46ed:	cmp	r13, rax
0x46f0:	jbe	0x4ce2


0x4ce2:	mov	rdx, r13
0x4ce5:	mov	r13, qword ptr [rsp + 0x50]
0x4cea:	jmp	0x42e2


0x46f6:	mov	rdx, r13
0x46f9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x46ff:	mov	r13, qword ptr [rsp + 0x50]
0x4704:	jmp	0x42e2


0x3df4:	cmp	byte ptr [rsp + 0xd], 0
0x3df9:	jne	0x3e60


0x3dfb:	mov	ebx, edx
0x3dfd:	xor	r12d, r12d
0x3e00:	xor	eax, eax
0x3e02:	cmp	byte ptr [rsp + 0xf], 0
0x3e07:	jne	0x3cfb


0x3e60:	xor	r12d, r12d
0x3e63:	cmp	dword ptr [rsp + 8], 2
0x3e68:	sete	dl
0x3e6b:	cmp	byte ptr [rsp + 0xf], 0
0x3e70:	mov	eax, edx
0x3e72:	jne	0x46c8


0x4200:	cmp	byte ptr [rsp + 0xf], 0
0x4205:	jne	0x4b70


0x3e33:	cmp	byte ptr [rsp + 0xd], 0
0x3e38:	je	0x4050


0x420b:	add	rbp, 1
0x420f:	mov	eax, r8d
0x4212:	xor	r12d, r12d
0x4215:	mov	ebx, 0x5c
0x421a:	jmp	0x3d2c


0x4050:	mov	edx, 0x5c
0x4055:	mov	ebx, 0x5c
0x405a:	jmp	0x3df4


0x3e3e:	cmp	byte ptr [rsp + 0xf], 0
0x3e43:	je	0x4050


0x3e49:	cmp	qword ptr [rsp + 0x18], 0
0x3e4f:	jne	0x420b


0x3e55:	mov	ebx, 0x5c
0x3e5a:	nop	word ptr [rax + rax]
0x3e60:	xor	r12d, r12d
0x3e63:	cmp	dword ptr [rsp + 8], 2
0x3e68:	sete	dl
0x3e6b:	cmp	byte ptr [rsp + 0xf], 0
0x3e70:	mov	eax, edx
0x3e72:	jne	0x46c8


0x3edb:	xor	edx, edx
0x3edd:	test	byte ptr [rsp + 0x78], 1
0x3ee2:	je	0x3dfb


0x40a3:	cmp	dword ptr [rsp + 8], 2
0x40a8:	sete	dl
0x40ab:	cmp	byte ptr [rsp + 0xf], 0
0x40b0:	jne	0x4c4a


0x3ee8:	add	rbp, 1
0x3eec:	jmp	0x3ba8


0x40b6:	mov	eax, r8d
0x40b9:	mov	rcx, r15
0x40bc:	xor	eax, 1
0x40bf:	and	al, dl
0x40c1:	je	0x40f0


0x4c4a:	movzx	ebx, byte ptr [rsp + 0xf]
0x4c4f:	mov	rbp, r11
0x4c52:	mov	eax, edx
0x4c54:	mov	byte ptr [rsp + 0xd], bl
0x4c58:	jmp	0x4649


0x40f0:	cmp	r13, rcx
0x40f3:	jbe	0x40fa


0x40c3:	cmp	r13, r15
0x40c6:	jbe	0x40cd


0x40fa:	cmp	dword ptr [rsp + 8], 2
0x40ff:	lea	r15, [rcx + 1]
0x4103:	je	0x4709


0x40f5:	mov	byte ptr [r14 + rcx], 0x5c
0x40fa:	cmp	dword ptr [rsp + 8], 2
0x40ff:	lea	r15, [rcx + 1]
0x4103:	je	0x4709


0x40cd:	lea	rcx, [r15 + 1]
0x40d1:	cmp	r13, rcx
0x40d4:	jbe	0x40dc


0x40c8:	mov	byte ptr [r14 + r15], 0x27
0x40cd:	lea	rcx, [r15 + 1]
0x40d1:	cmp	r13, rcx
0x40d4:	jbe	0x40dc


0x4709:	mov	eax, r12d
0x470c:	mov	ebx, 0x30
0x4711:	xor	r12d, r12d
0x4714:	jmp	0x3d19


0x4109:	lea	rax, [rbp + 1]
0x410d:	cmp	rax, r11
0x4110:	jae	0x412b


0x40dc:	lea	rcx, [r15 + 2]
0x40e0:	cmp	r13, rcx
0x40e3:	ja	0x4719


0x40d6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x40dc:	lea	rcx, [r15 + 2]
0x40e0:	cmp	r13, rcx
0x40e3:	ja	0x4719


0x4112:	mov	rax, qword ptr [rsp + 0x10]
0x4117:	movzx	eax, byte ptr [rax + rbp + 1]
0x411c:	mov	byte ptr [rsp + 0x28], al
0x4120:	sub	eax, 0x30
0x4123:	cmp	al, 9
0x4125:	jbe	0x4959


0x412b:	mov	eax, r12d
0x412e:	mov	ebx, 0x30
0x4133:	xor	r12d, r12d
0x4136:	jmp	0x3ce8


0x40e9:	lea	rcx, [r15 + 3]
0x40ed:	mov	r8d, eax
0x40f0:	cmp	r13, rcx
0x40f3:	jbe	0x40fa


0x4719:	mov	byte ptr [r14 + r15 + 2], 0x27
0x471f:	jmp	0x40e9


0x4959:	cmp	r13, r15
0x495c:	jbe	0x4963


0x4963:	lea	rax, [rcx + 2]
0x4967:	cmp	r13, rax
0x496a:	jbe	0x4972


0x495e:	mov	byte ptr [r14 + r15], 0x30
0x4963:	lea	rax, [rcx + 2]
0x4967:	cmp	r13, rax
0x496a:	jbe	0x4972


0x4972:	mov	eax, r12d
0x4975:	lea	r15, [rcx + 3]
0x4979:	xor	r12d, r12d
0x497c:	mov	ebx, 0x30
0x4981:	jmp	0x3ce8


0x496c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x4972:	mov	eax, r12d
0x4975:	lea	r15, [rcx + 3]
0x4979:	xor	r12d, r12d
0x497c:	mov	ebx, 0x30
0x4981:	jmp	0x3ce8


0x3de2:	cmp	dword ptr [rsp + 8], 2
0x3de7:	sete	al
0x3dea:	and	al, byte ptr [rsp + 0xf]
0x3dee:	jne	0x3f3e


0x41a0:	mov	edx, 0xd
0x41a5:	xor	r10d, r10d
0x41a8:	mov	ebx, 0x72
0x41ad:	jmp	0x3de2


0x4724:	test	ebx, ebx
0x4726:	jne	0x3b53


0x472c:	mov	byte ptr [rsp + 0xd], 1
0x4731:	test	r13, r13
0x4734:	jne	0x4cca


0x473a:	lea	rax, [rip + 0x2934]
0x4741:	mov	qword ptr [rsp + 0x50], 0
0x474a:	mov	byte ptr [rsp + 0xe], 1
0x474f:	mov	byte ptr [rsp + 0x7c], 0
0x4754:	xor	r12d, r12d
0x4757:	mov	byte ptr [rsp + 0xf], 0
0x475c:	mov	qword ptr [rsp + 0x18], 1
0x4765:	mov	qword ptr [rsp + 0x48], rax
0x476a:	mov	r15d, 1
0x4770:	mov	dword ptr [rsp + 8], 2
0x4778:	jmp	0x3b93


0x4cca:	mov	byte ptr [rsp + 0xe], 1
0x4ccf:	xor	eax, eax
0x4cd1:	xor	r12d, r12d
0x4cd4:	mov	qword ptr [rsp + 0x50], 0
0x4cdd:	jmp	0x4284


0x4284:	lea	rbx, [rip + 0x2dea]
0x428b:	mov	byte ptr [r14], 0x27
0x428f:	mov	dword ptr [rsp + 8], 2
0x4297:	mov	r15d, 1
0x429d:	mov	qword ptr [rsp + 0x18], 1
0x42a6:	mov	byte ptr [rsp + 0xf], 0
0x42ab:	mov	qword ptr [rsp + 0x48], rbx
0x42b0:	mov	byte ptr [rsp + 0x7c], al
0x42b4:	jmp	0x3b93


0x4788:	test	r13, r13
0x478b:	je	0x49b6


0x4b7d:	lea	rax, [rip + 0x24ef]
0x4b84:	mov	byte ptr [rsp + 0xe], 1
0x4b89:	mov	byte ptr [rsp + 0x7c], 0
0x4b8e:	xor	r12d, r12d
0x4b91:	mov	qword ptr [rsp + 0x50], 0
0x4b9a:	mov	byte ptr [rsp + 0xf], 1
0x4b9f:	mov	byte ptr [rsp + 0xd], 1
0x4ba4:	mov	qword ptr [rsp + 0x18], 1
0x4bad:	xor	r15d, r15d
0x4bb0:	mov	qword ptr [rsp + 0x48], rax
0x4bb5:	jmp	0x3b93


0x49b6:	mov	qword ptr [rsp + 0x50], 0
0x49bf:	mov	byte ptr [rsp + 0xe], 1
0x49c4:	xor	r12d, r12d
0x49c7:	mov	byte ptr [rsp + 0x7c], 0
0x49cc:	jmp	0x47ab


0x4791:	mov	byte ptr [r14], 0x22
0x4795:	mov	byte ptr [rsp + 0xe], 1
0x479a:	xor	r12d, r12d
0x479d:	mov	byte ptr [rsp + 0x7c], 0
0x47a2:	mov	qword ptr [rsp + 0x50], 0
0x47ab:	lea	rax, [rip + 0x28c1]
0x47b2:	mov	byte ptr [rsp + 0xf], 0
0x47b7:	mov	byte ptr [rsp + 0xd], 1
0x47bc:	mov	qword ptr [rsp + 0x18], 1
0x47c5:	mov	r15d, 1
0x47cb:	mov	qword ptr [rsp + 0x48], rax
0x47d0:	jmp	0x3b93


0x47ab:	lea	rax, [rip + 0x28c1]
0x47b2:	mov	byte ptr [rsp + 0xf], 0
0x47b7:	mov	byte ptr [rsp + 0xd], 1
0x47bc:	mov	qword ptr [rsp + 0x18], 1
0x47c5:	mov	r15d, 1
0x47cb:	mov	qword ptr [rsp + 0x48], rax
0x47d0:	jmp	0x3b93


0x47d5:	lea	rax, [rip + 0x2897]
0x47dc:	mov	byte ptr [rsp + 0xe], 1
0x47e1:	mov	byte ptr [rsp + 0x7c], 0
0x47e6:	xor	r12d, r12d
0x47e9:	mov	qword ptr [rsp + 0x50], 0
0x47f2:	mov	byte ptr [rsp + 0xf], 1
0x47f7:	mov	byte ptr [rsp + 0xd], 1
0x47fc:	mov	qword ptr [rsp + 0x18], 1
0x4805:	xor	r15d, r15d
0x4808:	mov	qword ptr [rsp + 0x48], rax
0x480d:	mov	dword ptr [rsp + 8], 5
0x4815:	jmp	0x3b93


0x481a:	mov	byte ptr [rsp + 0xe], 1
0x481f:	mov	byte ptr [rsp + 0x7c], 0
0x4824:	xor	r12d, r12d
0x4827:	mov	qword ptr [rsp + 0x50], 0
0x4830:	mov	byte ptr [rsp + 0xf], 0
0x4835:	xor	r15d, r15d
0x4838:	mov	byte ptr [rsp + 0xd], 1
0x483d:	mov	qword ptr [rsp + 0x18], 0
0x4846:	mov	qword ptr [rsp + 0x48], 0
0x484f:	jmp	0x3b93


0x4854:	cmp	dword ptr [rsp + 8], 0xa
0x4859:	je	0x48b1


0x48b1:	xor	r15d, r15d
0x48b4:	test	ebx, ebx
0x48b6:	je	0x4a7d


0x485b:	lea	rsi, [rip + 0x2815]
0x4862:	xor	edi, edi
0x4864:	mov	edx, 5
0x4869:	call	0x1740


0x4a7d:	mov	rdx, qword ptr [rsp + 0x68]
0x4a82:	movzx	eax, byte ptr [rdx]
0x4a85:	test	al, al
0x4a87:	je	0x48bc


0x48bc:	test	ebx, ebx
0x48be:	mov	rbx, qword ptr [rsp + 0x60]
0x48c3:	setne	byte ptr [rsp + 0xf]
0x48c8:	xor	r12d, r12d
0x48cb:	mov	rdi, rbx
0x48ce:	call	0x1760


0x4a99:	add	r15, 1
0x4a9d:	movzx	eax, byte ptr [rdx + r15]
0x4aa2:	test	al, al
0x4aa4:	jne	0x4a90


0x4a95:	mov	byte ptr [r14 + r15], al
0x4a99:	add	r15, 1
0x4a9d:	movzx	eax, byte ptr [rdx + r15]
0x4aa2:	test	al, al
0x4aa4:	jne	0x4a90


0x4aa6:	jmp	0x48bc


0x4a90:	cmp	r13, r15
0x4a93:	jbe	0x4a99


0x48d3:	mov	qword ptr [rsp + 0x48], rbx
0x48d8:	mov	qword ptr [rsp + 0x18], rax
0x48dd:	mov	byte ptr [rsp + 0xe], 1
0x48e2:	mov	byte ptr [rsp + 0x7c], 0
0x48e7:	mov	qword ptr [rsp + 0x50], 0
0x48f0:	mov	byte ptr [rsp + 0xd], 1
0x48f5:	jmp	0x3b93


0x486e:	mov	rcx, rax
0x4871:	mov	qword ptr [rsp + 0x68], rax
0x4876:	lea	rax, [rip + 0x27fa]
0x487d:	cmp	rcx, rax
0x4880:	je	0x4c1e


0x4c1e:	mov	esi, dword ptr [rsp + 8]
0x4c22:	mov	rdi, rcx
0x4c25:	call	0x39d0


0x4886:	lea	rsi, [rip + 0x27e8]
0x488d:	xor	edi, edi
0x488f:	mov	edx, 5
0x4894:	call	0x1740


0x4899:	mov	rcx, rax
0x489c:	mov	qword ptr [rsp + 0x60], rax
0x48a1:	lea	rax, [rip + 0x27cd]
0x48a8:	cmp	rcx, rax
0x48ab:	je	0x4c34


0x4c34:	mov	esi, dword ptr [rsp + 8]
0x4c38:	mov	rdi, rcx
0x4c3b:	call	0x39d0


0x4c40:	mov	qword ptr [rsp + 0x60], rax
0x4c45:	jmp	0x48b1


0x4c2a:	mov	qword ptr [rsp + 0x68], rax
0x4c2f:	jmp	0x4886


0x48fa:	mov	byte ptr [rsp + 0xe], 1
0x48ff:	mov	byte ptr [rsp + 0x7c], 0
0x4904:	xor	r12d, r12d
0x4907:	mov	qword ptr [rsp + 0x50], 0
0x4910:	mov	byte ptr [rsp + 0xf], 0
0x4915:	xor	r15d, r15d
0x4918:	mov	byte ptr [rsp + 0xd], 0
0x491d:	mov	qword ptr [rsp + 0x18], 0
0x4926:	mov	qword ptr [rsp + 0x48], 0
0x492f:	jmp	0x3b93


0x4934:	mov	byte ptr [rsp + 0xe], 1
0x4939:	mov	byte ptr [rsp + 0x7c], 0
0x493e:	xor	r12d, r12d
0x4941:	mov	qword ptr [rsp + 0x50], 0
0x494a:	mov	byte ptr [rsp + 0xf], 1
0x494f:	mov	byte ptr [rsp + 0xd], 1
0x4954:	jmp	0x3b73


0x3b73:	lea	rax, [rip + 0x34fb]
0x3b7a:	mov	qword ptr [rsp + 0x18], 1
0x3b83:	xor	r15d, r15d
0x3b86:	mov	dword ptr [rsp + 8], 2
0x3b8e:	mov	qword ptr [rsp + 0x48], rax
0x3b93:	xor	r11d, r11d
0x3b96:	mov	rax, rbp
0x3b99:	mov	r8d, r12d
0x3b9c:	mov	rbp, r11
0x3b9f:	mov	r11, rax
0x3ba2:	nop	word ptr [rax + rax]
0x3ba8:	cmp	r11, rbp
0x3bab:	setne	r12b
0x3baf:	cmp	r11, -1
0x3bb3:	jne	0x3bc2


0x4b28:	test	ebx, ebx
0x4b2a:	je	0x4cb8


0x4cb8:	mov	byte ptr [rsp + 0xd], 0
0x4cbd:	jmp	0x4731


0x4b30:	lea	rax, [rip + 0x253e]
0x4b37:	mov	byte ptr [rsp + 0xe], 1
0x4b3c:	mov	byte ptr [rsp + 0x7c], 0
0x4b41:	xor	r12d, r12d
0x4b44:	mov	qword ptr [rsp + 0x50], 0
0x4b4d:	mov	byte ptr [rsp + 0xf], 1
0x4b52:	mov	byte ptr [rsp + 0xd], 0
0x4b57:	mov	qword ptr [rsp + 0x18], 1
0x4b60:	xor	r15d, r15d
0x4b63:	mov	qword ptr [rsp + 0x48], rax
0x4b68:	jmp	0x3b93


0x4731:	test	r13, r13
0x4734:	jne	0x4cca


0x4cf4:	nop	
0x4cf6:	nop	word ptr cs:[rax + rax]


0x4eab:	nop	dword ptr [rax + rax]


0x4ee6:	nop	word ptr cs:[rax + rax]


0x4f01:	nop	dword ptr [rax + rax]
0x4f06:	nop	word ptr cs:[rax + rax]


0x4f21:	nop	dword ptr [rax + rax]
0x4f26:	nop	word ptr cs:[rax + rax]


0x4f65:	nop	
0x4f66:	nop	word ptr cs:[rax + rax]


0x4f85:	nop	
0x4f86:	nop	word ptr cs:[rax + rax]


0x5034:	nop	
0x5036:	nop	word ptr cs:[rax + rax]


0x5123:	nop	dword ptr [rax]
0x5126:	nop	word ptr cs:[rax + rax]


0x513a:	nop	word ptr [rax + rax]


0x51d3:	nop	dword ptr [rax]
0x51d6:	nop	word ptr cs:[rax + rax]


0x51f3:	nop	dword ptr [rax]
0x51f6:	nop	word ptr cs:[rax + rax]


0x520c:	nop	dword ptr [rax]


0x5228:	nop	dword ptr [rax + rax]


0x5244:	nop	
0x5246:	nop	word ptr cs:[rax + rax]


0x52de:	nop	


0x536a:	nop	word ptr [rax + rax]


0x537c:	nop	dword ptr [rax]


0x538f:	nop	


0x5428:	nop	dword ptr [rax + rax]


0x5451:	nop	dword ptr [rax + rax]
0x5456:	nop	word ptr cs:[rax + rax]


0x546a:	nop	word ptr [rax + rax]


0x54fe:	nop	


0x5591:	nop	dword ptr [rax + rax]
0x5596:	nop	word ptr cs:[rax + rax]


0x55ac:	nop	dword ptr [rax]


0x55c7:	nop	word ptr [rax + rax]


0x55e3:	nop	dword ptr [rax]
0x55e6:	nop	word ptr cs:[rax + rax]


0x55fc:	nop	dword ptr [rax]


0x5614:	nop	
0x5616:	nop	word ptr cs:[rax + rax]


0x5633:	nop	dword ptr [rax]
0x5636:	nop	word ptr cs:[rax + rax]


0x5658:	nop	dword ptr [rax + rax]


0x5a77:	nop	word ptr [rax + rax]


0x5b18:	nop	dword ptr [rax + rax]


0x5bf5:	nop	
0x5bf6:	nop	word ptr cs:[rax + rax]


0x5c9a:	nop	word ptr [rax + rax]


0x5cc4:	nop	
0x5cc6:	nop	word ptr cs:[rax + rax]


0x5cd2:	nop	dword ptr [rax]
0x5cd6:	nop	word ptr cs:[rax + rax]


0x5d16:	nop	word ptr cs:[rax + rax]


0x5d44:	nop	
0x5d46:	nop	word ptr cs:[rax + rax]


0x5dd2:	nop	dword ptr [rax]
0x5dd6:	nop	word ptr cs:[rax + rax]


0x5e2a:	nop	word ptr [rax + rax]


0x5e47:	nop	word ptr [rax + rax]


0x5e7e:	nop	


0x5ea8:	nop	dword ptr [rax + rax]


0x5ec3:	nop	word ptr cs:[rax + rax]
0x5ecd:	nop	dword ptr [rax]


0x5f05:	nop	word ptr cs:[rax + rax]
0x5f0f:	nop	


0x5f28:	nop	dword ptr [rax + rax]


0x5fab:	nop	dword ptr [rax + rax]


0x6013:	nop	word ptr cs:[rax + rax]
0x601d:	nop	dword ptr [rax]


0x6077:	nop	word ptr [rax + rax]


0x6103:	nop	word ptr cs:[rax + rax]
0x610d:	nop	dword ptr [rax]


0x618d:	nop	dword ptr [rax]


0x62fd:	nop	dword ptr [rax]


0x639c:	nop	dword ptr [rax]


0x63c9:	nop	dword ptr [rax]


0x6435:	nop	
0x6436:	nop	word ptr cs:[rax + rax]


0x6442:	nop	word ptr cs:[rax + rax]
0x644c:	nop	dword ptr [rax]


0x3d80:	xor	r10d, r10d
0x3d83:	mov	eax, dword ptr [rsp + 8]
0x3d87:	cmp	eax, 2
0x3d8a:	je	0x4348


0x3db0:	xor	r10d, r10d
0x3db3:	cmp	dword ptr [rsp + 8], 2
0x3db8:	je	0x42c0


0x3dd8:	mov	edx, 9
0x3ddd:	mov	ebx, 0x74
0x3de2:	cmp	dword ptr [rsp + 8], 2
0x3de7:	sete	al
0x3dea:	and	al, byte ptr [rsp + 0xf]
0x3dee:	jne	0x3f3e


0x3e18:	mov	edx, 8
0x3e1d:	mov	ebx, 0x62
0x3e22:	jmp	0x3df4


0x3e28:	cmp	dword ptr [rsp + 8], 2
0x3e2d:	je	0x4200


0x3ed0:	cmp	byte ptr [rsp + 0xd], 0
0x3ed5:	jne	0x40a3


0x3ef8:	cmp	dword ptr [rsp + 8], 2
0x3efd:	sete	dl
0x3f00:	xor	eax, eax
0x3f02:	jmp	0x3ce8


0x3f10:	mov	edx, 7
0x3f15:	mov	ebx, 0x61
0x3f1a:	jmp	0x3df4


0x3f20:	cmp	dword ptr [rsp + 8], 2
0x3f25:	sete	dl
0x3f28:	test	rbp, rbp
0x3f2b:	jne	0x3cdc


0x3f50:	cmp	dword ptr [rsp + 8], 2
0x3f55:	sete	dl
0x3f58:	xor	r12d, r12d
0x3f5b:	jmp	0x3f31


0x3f60:	cmp	dword ptr [rsp + 8], 2
0x3f65:	mov	ebx, 0x20
0x3f6a:	sete	dl
0x3f6d:	jmp	0x3f31


0x3f70:	mov	edx, 0xd
0x3f75:	mov	ebx, 0x72
0x3f7a:	jmp	0x3de2


0x3f80:	mov	edx, 0xc
0x3f85:	mov	ebx, 0x66
0x3f8a:	jmp	0x3df4


0x3f90:	mov	edx, 0xb
0x3f95:	mov	ebx, 0x76
0x3f9a:	jmp	0x3df4


0x3fa0:	mov	edx, 0xa
0x3fa5:	mov	ebx, 0x6e
0x3faa:	jmp	0x3de2


0x4040:	xor	r10d, r10d
0x4043:	cmp	byte ptr [rsp + 0xd], 0
0x4048:	jne	0x3e3e


0x4060:	mov	edx, 0xc
0x4065:	xor	r10d, r10d
0x4068:	mov	ebx, 0x66
0x406d:	jmp	0x3df4


0x4078:	mov	edx, 0xa
0x407d:	xor	r10d, r10d
0x4080:	mov	ebx, 0x6e
0x4085:	jmp	0x3de2


0x4090:	mov	ebx, 0x61
0x4095:	jmp	0x3e60


0x40a0:	xor	r10d, r10d
0x40a3:	cmp	dword ptr [rsp + 8], 2
0x40a8:	sete	dl
0x40ab:	cmp	byte ptr [rsp + 0xf], 0
0x40b0:	jne	0x4c4a


0x4140:	cmp	dword ptr [rsp + 8], 2
0x4145:	mov	r12d, r10d
0x4148:	sete	dl
0x414b:	xor	r10d, r10d
0x414e:	xor	eax, eax
0x4150:	jmp	0x3ce8


0x4158:	cmp	dword ptr [rsp + 8], 2
0x415d:	sete	dl
0x4160:	xor	r10d, r10d
0x4163:	jmp	0x3f28


0x4170:	cmp	dword ptr [rsp + 8], 2
0x4175:	sete	dl
0x4178:	xor	r10d, r10d
0x417b:	xor	r12d, r12d
0x417e:	jmp	0x3f31


0x4188:	cmp	dword ptr [rsp + 8], 2
0x418d:	mov	r12d, r10d
0x4190:	mov	ebx, 0x20
0x4195:	sete	dl
0x4198:	xor	r10d, r10d
0x419b:	jmp	0x3f31


0x41b8:	mov	ebx, 0x76
0x41bd:	jmp	0x3e60


0x41c8:	mov	edx, 9
0x41cd:	xor	r10d, r10d
0x41d0:	mov	ebx, 0x74
0x41d5:	jmp	0x3de2


0x41e0:	mov	ebx, 0x62
0x41e5:	jmp	0x3e60


0x4780:	test	ebx, ebx
0x4782:	jne	0x4b7d


0x1ac9:	nop	dword ptr [rax]


0x1b2f:	nop	


0x1b52:	nop	word ptr [rax + rax]


0x1b7c:	nop	dword ptr [rax]


0x1ba4:	nop	dword ptr [rax]


0x1bda:	nop	word ptr [rax + rax]


0x1bec:	nop	dword ptr [rax]


0x1eb6:	nop	word ptr cs:[rax + rax]


0x1f07:	nop	word ptr [rax + rax]


0x1f51:	nop	dword ptr [rax]


0x206a:	nop	word ptr [rax + rax]


0x20df:	nop	


0x212e:	nop	


0x21f5:	nop	dword ptr [rax]


0x2205:	nop	dword ptr [rax]


0x223d:	nop	dword ptr [rax]


0x22b5:	nop	dword ptr [rax]


0x2366:	nop	word ptr cs:[rax + rax]


0x2397:	nop	word ptr [rax + rax]


0x23b4:	nop	dword ptr [rax]


0x23bd:	nop	dword ptr [rax]


0x23ce:	nop	


0x23de:	nop	


0x2452:	nop	word ptr [rax + rax]


0x249d:	nop	dword ptr [rax]


0x2606:	nop	word ptr cs:[rax + rax]


0x2bfd:	nop	dword ptr [rax]


0x2c56:	nop	word ptr cs:[rax + rax]


0x2ca2:	nop	word ptr [rax + rax]


0x2d39:	nop	dword ptr [rax]


0x2e06:	nop	word ptr cs:[rax + rax]


0x2e6e:	nop	


0x2e97:	nop	word ptr [rax + rax]


0x2f56:	nop	word ptr cs:[rax + rax]


0x2f69:	nop	dword ptr [rax]


0x2f8d:	nop	dword ptr [rax]


0x2f9f:	nop	


0x300e:	nop	


0x33db:	nop	dword ptr [rax + rax]


0x3484:	nop	dword ptr [rax]


0x34d7:	nop	word ptr [rax + rax]


0x35c8:	nop	dword ptr [rax + rax]


0x35dd:	nop	dword ptr [rax]


0x35ec:	nop	dword ptr [rax]


0x3677:	nop	word ptr [rax + rax]


0x3687:	nop	word ptr [rax + rax]


0x36c7:	nop	word ptr [rax + rax]


0x36f7:	nop	word ptr [rax + rax]


0x3724:	nop	dword ptr [rax]


0x3759:	nop	dword ptr [rax]


0x37a8:	nop	dword ptr [rax + rax]


0x387f:	nop	


0x38f2:	nop	word ptr [rax + rax]


0x3906:	nop	word ptr cs:[rax + rax]


0x3a0c:	nop	dword ptr [rax]


0x3a5d:	nop	dword ptr [rax]


0x3c88:	nop	dword ptr [rax + rax]


0x3d77:	nop	word ptr [rax + rax]


0x3dae:	nop	


0x3dd1:	nop	dword ptr [rax]


0x3e12:	nop	word ptr [rax + rax]


0x3e24:	nop	dword ptr [rax]


0x3ec8:	nop	dword ptr [rax + rax]


0x3ef1:	nop	dword ptr [rax]


0x3f07:	nop	word ptr [rax + rax]


0x3f1f:	nop	


0x3f4e:	nop	


0x3f5d:	nop	dword ptr [rax]


0x3f6f:	nop	


0x3f7f:	nop	


0x3f8f:	nop	


0x3f9f:	nop	


0x3faf:	nop	


0x401c:	nop	dword ptr [rax]


0x403c:	nop	dword ptr [rax]


0x404e:	nop	


0x405f:	nop	


0x4072:	nop	word ptr [rax + rax]


0x408a:	nop	word ptr [rax + rax]


0x409a:	nop	word ptr [rax + rax]


0x413b:	nop	dword ptr [rax + rax]


0x4155:	nop	dword ptr [rax]


0x4168:	nop	dword ptr [rax + rax]


0x4183:	nop	dword ptr [rax + rax]


0x41b2:	nop	word ptr [rax + rax]


0x41c2:	nop	word ptr [rax + rax]


0x41da:	nop	word ptr [rax + rax]


0x41ea:	nop	word ptr [rax + rax]


0x41f8:	nop	dword ptr [rax + rax]


0x421f:	nop	


0x42b9:	nop	dword ptr [rax]


0x4302:	nop	word ptr [rax + rax]


0x4328:	nop	dword ptr [rax + rax]


0x4341:	nop	dword ptr [rax]


0x4362:	nop	word ptr [rax + rax]


0x44c8:	nop	dword ptr [rax + rax]


0x45db:	nop	dword ptr [rax + rax]


0x45fe:	nop	


0x46c5:	nop	dword ptr [rax]


0x477d:	nop	dword ptr [rax]


0x4986:	nop	word ptr cs:[rax + rax]


0x4a19:	nop	dword ptr [rax]


0x4a8d:	nop	dword ptr [rax]


0x4b6d:	nop	dword ptr [rax]


0x4e7b:	nop	dword ptr [rax + rax]


0x5706:	nop	word ptr cs:[rax + rax]


0x5795:	nop	dword ptr [rax]


0x57b6:	nop	word ptr cs:[rax + rax]


0x5815:	nop	dword ptr [rax]


0x5851:	nop	dword ptr [rax]


0x5898:	nop	dword ptr [rax + rax]


0x58e7:	nop	word ptr [rax + rax]


0x5944:	nop	dword ptr [rax]


0x5972:	nop	word ptr [rax + rax]


0x5a26:	nop	word ptr cs:[rax + rax]


0x5a89:	nop	dword ptr [rax]


0x5d02:	nop	word ptr [rax + rax]


0x5d89:	nop	dword ptr [rax]


0x5db4:	nop	dword ptr [rax]


0x5e0d:	nop	dword ptr [rax]


0x5f75:	nop	dword ptr [rax]


0x5fd3:	nop	dword ptr [rax + rax]


0x600b:	nop	dword ptr [rax + rax]


0x602f:	nop	


0x6144:	nop	dword ptr [rax]


0x6161:	nop	dword ptr [rax]


0x6172:	nop	word ptr [rax + rax]


0x61d9:	nop	dword ptr [rax]


0x626a:	nop	word ptr [rax + rax]


0x6274:	nop	dword ptr [rax]


0x6291:	nop	dword ptr [rax]


0x62cd:	nop	dword ptr [rax]


0x633a:	nop	word ptr [rax + rax]


0x6386:	nop	word ptr cs:[rax + rax]


