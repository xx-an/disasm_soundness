0x6730:	sub	rsp, 8
0x6734:	add	rsp, 8
0x6738:	ret	


0x6720:	mov	rdx, qword ptr [rip + 0x2038e1]
0x6727:	xor	esi, esi
0x6729:	jmp	0x1a40


0x6710:	ret	


0x66a0:	push	r15
0x66a2:	push	r14
0x66a4:	mov	r15, rdx
0x66a7:	push	r13
0x66a9:	push	r12
0x66ab:	lea	r12, [rip + 0x2032fe]
0x66b2:	push	rbp
0x66b3:	lea	rbp, [rip + 0x2032fe]
0x66ba:	push	rbx
0x66bb:	mov	r13d, edi
0x66be:	mov	r14, rsi
0x66c1:	sub	rbp, r12
0x66c4:	sub	rsp, 8
0x66c8:	sar	rbp, 3
0x66cc:	call	0x1718


0x6640:	push	r12
0x6642:	push	rbp
0x6643:	mov	r12, rdx
0x6646:	push	rbx
0x6647:	mov	rbp, rdi
0x664a:	mov	rbx, rsi
0x664d:	sub	rsp, 0x10
0x6651:	cmp	rsi, rcx
0x6654:	jne	0x666f


0x6590:	push	r15
0x6592:	push	r14
0x6594:	mov	r15, rdx
0x6597:	push	r13
0x6599:	push	r12
0x659b:	mov	r14, rdi
0x659e:	push	rbp
0x659f:	push	rbx
0x65a0:	mov	rbp, rcx
0x65a3:	mov	rbx, rsi
0x65a6:	sub	rsp, 0x18
0x65aa:	cmp	rsi, rcx
0x65ad:	jne	0x65c2


0x64d0:	push	r15
0x64d2:	push	r14
0x64d4:	mov	r14, rcx
0x64d7:	push	r13
0x64d9:	push	r12
0x64db:	mov	r13, rsi
0x64de:	push	rbp
0x64df:	push	rbx
0x64e0:	mov	r12, rdi
0x64e3:	mov	rbp, rdx
0x64e6:	sub	rsp, 8
0x64ea:	call	0x1790


0x6490:	sub	rsp, 8
0x6494:	mov	edi, 0xe
0x6499:	call	0x1990


0x6410:	push	r12
0x6412:	push	rbp
0x6413:	mov	rbp, rdi
0x6416:	push	rbx
0x6417:	call	0x17c0


0x6380:	push	r13
0x6382:	push	r12
0x6384:	mov	r13, rsi
0x6387:	push	rbp
0x6388:	push	rbx
0x6389:	mov	rbx, rdi
0x638c:	mov	r12, rdx
0x638f:	sub	rsp, 0x18
0x6393:	mov	rax, qword ptr fs:[0x28]
0x639c:	mov	qword ptr [rsp + 8], rax
0x63a1:	xor	eax, eax
0x63a3:	lea	rax, [rsp + 4]
0x63a8:	test	rdi, rdi
0x63ab:	cmove	rbx, rax
0x63af:	mov	rdi, rbx
0x63b2:	call	0x1850


0x6320:	mov	rax, qword ptr [rdi + 8]
0x6324:	cmp	qword ptr [rdi + 0x10], rax
0x6328:	je	0x6330


0x62e0:	test	rdi, rdi
0x62e3:	push	rbx
0x62e4:	mov	rbx, rdi
0x62e7:	je	0x62fa


0x6260:	push	r12
0x6262:	push	rbp
0x6263:	push	rbx
0x6264:	mov	rbx, rdi
0x6267:	call	0x1960


0x5e40:	push	r15
0x5e42:	push	r14
0x5e44:	push	r13
0x5e46:	push	r12
0x5e48:	push	rbp
0x5e49:	push	rbx
0x5e4a:	sub	rsp, 0x28
0x5e4e:	mov	rax, qword ptr fs:[0x28]
0x5e57:	mov	qword ptr [rsp + 0x18], rax
0x5e5c:	xor	eax, eax
0x5e5e:	cmp	edx, 0x24
0x5e61:	ja	0x61c5


0x5df0:	push	r14
0x5df2:	push	r13
0x5df4:	mov	r14, rcx
0x5df7:	push	r12
0x5df9:	push	rbp
0x5dfa:	mov	r12, rdx
0x5dfd:	push	rbx
0x5dfe:	mov	rbp, rdi
0x5e01:	mov	rbx, rsi
0x5e04:	call	0x6640


0x5da0:	push	r14
0x5da2:	push	r13
0x5da4:	mov	r13, rcx
0x5da7:	push	r12
0x5da9:	push	rbp
0x5daa:	mov	r12, rdx
0x5dad:	push	rbx
0x5dae:	mov	rbp, rsi
0x5db1:	mov	rbx, rdi
0x5db4:	call	0x6590


0x5ce0:	push	r14
0x5ce2:	push	r13
0x5ce4:	mov	r14d, edi
0x5ce7:	push	r12
0x5ce9:	push	rbp
0x5cea:	mov	r12, rdx
0x5ced:	push	rbx
0x5cee:	mov	rbx, rsi
0x5cf1:	lea	rsi, [rip + 0x1dc8]
0x5cf8:	mov	edx, 5
0x5cfd:	xor	edi, edi
0x5cff:	mov	r13, r8
0x5d02:	mov	rbp, rcx
0x5d05:	call	0x1800


0x5ca0:	lea	rsi, [rip + 0x1e08]
0x5ca7:	sub	rsp, 8
0x5cab:	mov	edx, 5
0x5cb0:	xor	edi, edi
0x5cb2:	call	0x1800


0x5c80:	push	rbx
0x5c81:	mov	rbx, rdi
0x5c84:	call	0x1820


0x5c50:	push	rbp
0x5c51:	push	rbx
0x5c52:	mov	rbp, rdi
0x5c55:	mov	rdi, rsi
0x5c58:	mov	rbx, rsi
0x5c5b:	sub	rsp, 8
0x5c5f:	call	0x5a50


0x5c20:	mov	rax, rdi
0x5c23:	sub	rsp, 8
0x5c27:	mul	rsi
0x5c2a:	seto	dl
0x5c2d:	test	rax, rax
0x5c30:	js	0x5c49


0x5c00:	push	rbx
0x5c01:	mov	rbx, rdi
0x5c04:	call	0x5a50


0x5bb0:	test	rdi, rdi
0x5bb3:	mov	rax, qword ptr [rsi]
0x5bb6:	je	0x5be0


0x5b20:	test	rdi, rdi
0x5b23:	mov	r9, rdx
0x5b26:	mov	rcx, qword ptr [rsi]
0x5b29:	je	0x5b60


0x5af0:	mov	rax, rsi
0x5af3:	mul	rdx
0x5af6:	mov	rsi, rax
0x5af9:	seto	al
0x5afc:	test	rsi, rsi
0x5aff:	js	0x5b0b


0x5ab0:	test	rsi, rsi
0x5ab3:	push	rbx
0x5ab4:	mov	rbx, rsi
0x5ab7:	jne	0x5abe


0x5aa0:	jmp	0x5a50


0x5a70:	mov	rax, rdi
0x5a73:	mul	rsi
0x5a76:	mov	rdi, rax
0x5a79:	seto	al
0x5a7c:	test	rdi, rdi
0x5a7f:	js	0x5a8b


0x5a50:	push	rbx
0x5a51:	mov	rbx, rdi
0x5a54:	call	0x1970


0x59d0:	push	rbx
0x59d1:	lea	rsi, [rip + 0x1dca]
0x59d8:	mov	edx, 5
0x59dd:	xor	edi, edi
0x59df:	call	0x1800


0x58f0:	push	rbp
0x58f1:	push	rbx
0x58f2:	mov	r10d, 0x20
0x58f8:	xor	r11d, r11d
0x58fb:	sub	rsp, 0xb8
0x5902:	mov	rax, qword ptr fs:[0x28]
0x590b:	mov	qword ptr [rsp + 0x78], rax
0x5910:	xor	eax, eax
0x5912:	lea	rax, [rsp + 0xd0]
0x591a:	mov	qword ptr [rsp + 0xa0], r8
0x5922:	lea	rbx, [rsp + 0xd0]
0x592a:	lea	r8, [rsp + 0x20]
0x592f:	mov	qword ptr [rsp + 0xa8], r9
0x5937:	mov	dword ptr [rsp + 8], 0x20
0x593f:	mov	qword ptr [rsp + 0x10], rax
0x5944:	lea	rax, [rsp + 0x80]
0x594c:	xor	r9d, r9d
0x594f:	mov	qword ptr [rsp + 0x18], rax
0x5954:	mov	rbp, rax
0x5957:	nop	word ptr [rax + rax]
0x5960:	cmp	r10d, 0x2f
0x5964:	ja	0x59bc


0x5870:	sub	rsp, 0x68
0x5874:	mov	r10, r8
0x5877:	xor	r9d, r9d
0x587a:	mov	rax, qword ptr fs:[0x28]
0x5883:	mov	qword ptr [rsp + 0x58], rax
0x5888:	xor	eax, eax
0x588a:	mov	r8, rsp
0x588d:	nop	dword ptr [rax]
0x5890:	mov	eax, dword ptr [r10]
0x5893:	cmp	eax, 0x2f
0x5896:	ja	0x58da


0x5850:	xor	r9d, r9d
0x5853:	cmp	qword ptr [r8], 0
0x5857:	je	0x586b


0x5430:	push	r15
0x5432:	push	r14
0x5434:	push	r13
0x5436:	push	r12
0x5438:	mov	r12, r9
0x543b:	push	rbp
0x543c:	push	rbx
0x543d:	mov	rbp, rdi
0x5440:	mov	rbx, r8
0x5443:	sub	rsp, 0x28
0x5447:	test	rsi, rsi
0x544a:	je	0x5568


0x5410:	lea	rcx, [rip + 0x204c29]
0x5417:	mov	rsi, rdi
0x541a:	mov	rdx, -1
0x5421:	xor	edi, edi
0x5423:	jmp	0x4ad0


0x53f0:	lea	rcx, [rip + 0x204c49]
0x53f7:	mov	rdx, -1
0x53fe:	jmp	0x4ad0


0x53d0:	lea	rcx, [rip + 0x204c69]
0x53d7:	mov	rdx, rsi
0x53da:	mov	rsi, rdi
0x53dd:	xor	edi, edi
0x53df:	jmp	0x4ad0


0x53c0:	lea	rcx, [rip + 0x204c79]
0x53c7:	jmp	0x4ad0


0x53a0:	mov	r8, rcx
0x53a3:	mov	rcx, rdx
0x53a6:	mov	rdx, rsi
0x53a9:	mov	rsi, rdi
0x53ac:	xor	edi, edi
0x53ae:	jmp	0x52d0


0x5380:	mov	rcx, rdx
0x5383:	mov	r8, -1
0x538a:	mov	rdx, rsi
0x538d:	mov	rsi, rdi
0x5390:	xor	edi, edi
0x5392:	jmp	0x52d0


0x5370:	mov	r8, -1
0x5377:	jmp	0x52d0


0x52d0:	sub	rsp, 0x48
0x52d4:	mov	r9, rcx
0x52d7:	mov	rcx, qword ptr [rip + 0x204f92]
0x52de:	movdqa	xmm0, xmmword ptr [rip + 0x204f5a]
0x52e6:	mov	rax, qword ptr fs:[0x28]
0x52ef:	mov	qword ptr [rsp + 0x38], rax
0x52f4:	xor	eax, eax
0x52f6:	movaps	xmmword ptr [rsp], xmm0
0x52fa:	test	rsi, rsi
0x52fd:	mov	qword ptr [rsp + 0x30], rcx
0x5302:	mov	dword ptr [rsp], 0xa
0x5309:	movdqa	xmm0, xmmword ptr [rip + 0x204f3f]
0x5311:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x5316:	movdqa	xmm0, xmmword ptr [rip + 0x204f42]
0x531e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x5323:	je	0x5357


0x5240:	sub	rsp, 0x48
0x5244:	mov	rax, rdx
0x5247:	mov	rdx, qword ptr fs:[0x28]
0x5250:	mov	qword ptr [rsp + 0x38], rdx
0x5255:	xor	edx, edx
0x5257:	cmp	esi, 0xa
0x525a:	je	0x52c4


0x5230:	mov	edx, 0x3a
0x5235:	jmp	0x5160


0x5210:	mov	edx, 0x3a
0x5215:	mov	rsi, -1
0x521c:	jmp	0x5160


0x5200:	movsx	edx, sil
0x5204:	mov	rsi, -1
0x520b:	jmp	0x5160


0x5160:	sub	rsp, 0x48
0x5164:	mov	ecx, edx
0x5166:	mov	rax, qword ptr fs:[0x28]
0x516f:	mov	qword ptr [rsp + 0x38], rax
0x5174:	xor	eax, eax
0x5176:	mov	rax, qword ptr [rip + 0x2050f3]
0x517d:	mov	r8, rsp
0x5180:	and	ecx, 0x1f
0x5183:	movdqa	xmm0, xmmword ptr [rip + 0x2050b5]
0x518b:	mov	qword ptr [rsp + 0x30], rax
0x5190:	mov	eax, edx
0x5192:	movaps	xmmword ptr [rsp], xmm0
0x5196:	shr	al, 5
0x5199:	movzx	eax, al
0x519c:	lea	r9, [r8 + rax*4 + 8]
0x51a1:	movdqa	xmm0, xmmword ptr [rip + 0x2050a7]
0x51a9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x51ae:	movdqa	xmm0, xmmword ptr [rip + 0x2050aa]
0x51b6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x51bb:	mov	edx, dword ptr [r9]
0x51be:	mov	eax, edx
0x51c0:	shr	eax, cl
0x51c2:	not	eax
0x51c4:	and	eax, 1
0x51c7:	shl	eax, cl
0x51c9:	mov	rcx, r8
0x51cc:	xor	eax, edx
0x51ce:	mov	rdx, rsi
0x51d1:	mov	rsi, rdi
0x51d4:	mov	dword ptr [r9], eax
0x51d7:	xor	edi, edi
0x51d9:	call	0x4ad0


0x5150:	mov	rcx, rdx
0x5153:	mov	rdx, rsi
0x5156:	mov	esi, edi
0x5158:	xor	edi, edi
0x515a:	jmp	0x50b0


0x5140:	mov	rdx, rsi
0x5143:	mov	esi, edi
0x5145:	xor	edi, edi
0x5147:	jmp	0x5020


0x50b0:	sub	rsp, 0x48
0x50b4:	mov	rax, rdx
0x50b7:	mov	rdx, rcx
0x50ba:	mov	rcx, qword ptr fs:[0x28]
0x50c3:	mov	qword ptr [rsp + 0x38], rcx
0x50c8:	xor	ecx, ecx
0x50ca:	cmp	esi, 0xa
0x50cd:	je	0x5130


0x5020:	sub	rsp, 0x48
0x5024:	mov	rax, rdx
0x5027:	mov	rdx, qword ptr fs:[0x28]
0x5030:	mov	qword ptr [rsp + 0x38], rdx
0x5035:	xor	edx, edx
0x5037:	cmp	esi, 0xa
0x503a:	je	0x50a4


0x5000:	lea	rcx, [rip + 0x205239]
0x5007:	mov	rdx, rsi
0x500a:	mov	rsi, rdi
0x500d:	xor	edi, edi
0x500f:	jmp	0x4ad0


0x4fe0:	lea	rcx, [rip + 0x205259]
0x4fe7:	mov	rsi, rdi
0x4fea:	mov	rdx, -1
0x4ff1:	xor	edi, edi
0x4ff3:	jmp	0x4ad0


0x4fd0:	lea	rcx, [rip + 0x205269]
0x4fd7:	jmp	0x4ad0


0x4fb0:	lea	rcx, [rip + 0x205289]
0x4fb7:	mov	rdx, -1
0x4fbe:	jmp	0x4ad0


0x4f10:	mov	eax, dword ptr [rip + 0x205162]
0x4f16:	push	r12
0x4f18:	mov	r12, qword ptr [rip + 0x205161]
0x4f1f:	push	rbp
0x4f20:	push	rbx
0x4f21:	cmp	eax, 1
0x4f24:	jle	0x4f51


0x4f00:	mov	rcx, rdx
0x4f03:	xor	edx, edx
0x4f05:	jmp	0x4e10


0x4e10:	push	r15
0x4e12:	push	r14
0x4e14:	lea	rax, [rip + 0x205425]
0x4e1b:	push	r13
0x4e1d:	push	r12
0x4e1f:	mov	r12, rdx
0x4e22:	push	rbp
0x4e23:	push	rbx
0x4e24:	mov	rbx, rcx
0x4e27:	mov	r14, rdi
0x4e2a:	mov	r15, rsi
0x4e2d:	sub	rsp, 0x38
0x4e31:	test	rcx, rcx
0x4e34:	cmove	rbx, rax
0x4e38:	xor	ebp, ebp
0x4e3a:	call	0x1790


0x4d90:	push	r15
0x4d92:	push	r14
0x4d94:	lea	rax, [rip + 0x2054a5]
0x4d9b:	push	r13
0x4d9d:	push	r12
0x4d9f:	mov	r13, rdi
0x4da2:	push	rbp
0x4da3:	push	rbx
0x4da4:	mov	rbx, r8
0x4da7:	mov	r14, rsi
0x4daa:	mov	r15, rdx
0x4dad:	sub	rsp, 0x18
0x4db1:	test	r8, r8
0x4db4:	cmove	rbx, rax
0x4db8:	mov	qword ptr [rsp + 8], rcx
0x4dbd:	call	0x1790


0x4d60:	lea	rax, [rip + 0x2054d9]
0x4d67:	test	rdi, rdi
0x4d6a:	cmove	rdi, rax
0x4d6e:	test	rsi, rsi
0x4d71:	mov	dword ptr [rdi], 0xa
0x4d77:	je	0x4d87


0x4d40:	lea	rax, [rip + 0x2054f9]
0x4d47:	test	rdi, rdi
0x4d4a:	cmove	rdi, rax
0x4d4e:	mov	eax, dword ptr [rdi + 4]
0x4d51:	mov	dword ptr [rdi + 4], esi
0x4d54:	ret	


0x4d00:	lea	rax, [rip + 0x205539]
0x4d07:	test	rdi, rdi
0x4d0a:	mov	ecx, esi
0x4d0c:	cmove	rdi, rax
0x4d10:	mov	eax, esi
0x4d12:	and	ecx, 0x1f
0x4d15:	shr	al, 5
0x4d18:	movzx	eax, al
0x4d1b:	lea	rdi, [rdi + rax*4 + 8]
0x4d20:	mov	esi, dword ptr [rdi]
0x4d22:	mov	eax, esi
0x4d24:	shr	eax, cl
0x4d26:	xor	edx, eax
0x4d28:	and	eax, 1
0x4d2b:	and	edx, 1
0x4d2e:	shl	edx, cl
0x4d30:	xor	edx, esi
0x4d32:	mov	dword ptr [rdi], edx
0x4d34:	ret	


0x4ce0:	lea	rax, [rip + 0x205559]
0x4ce7:	test	rdi, rdi
0x4cea:	cmove	rdi, rax
0x4cee:	mov	dword ptr [rdi], esi
0x4cf0:	ret	


0x4cc0:	lea	rax, [rip + 0x205579]
0x4cc7:	test	rdi, rdi
0x4cca:	cmove	rdi, rax
0x4cce:	mov	eax, dword ptr [rdi]
0x4cd0:	ret	


0x4c80:	push	r12
0x4c82:	push	rbp
0x4c83:	push	rbx
0x4c84:	mov	rbx, rdi
0x4c87:	call	0x1790


0x4ad0:	push	r15
0x4ad2:	push	r14
0x4ad4:	movsxd	r15, edi
0x4ad7:	push	r13
0x4ad9:	push	r12
0x4adb:	mov	r14, rdx
0x4ade:	push	rbp
0x4adf:	push	rbx
0x4ae0:	mov	rbp, rcx
0x4ae3:	sub	rsp, 0x28
0x4ae7:	mov	qword ptr [rsp + 8], rsi
0x4aec:	call	0x1790


0x3890:	push	r15
0x3892:	push	r14
0x3894:	mov	r15d, r8d
0x3897:	push	r13
0x3899:	push	r12
0x389b:	mov	r14, rdi
0x389e:	push	rbp
0x389f:	push	rbx
0x38a0:	mov	ebx, r9d
0x38a3:	mov	r13, rsi
0x38a6:	mov	rbp, rcx
0x38a9:	and	ebx, 2
0x38ac:	sub	rsp, 0xb8
0x38b3:	mov	rax, qword ptr [rsp + 0xf0]
0x38bb:	mov	qword ptr [rsp + 0x10], rdx
0x38c0:	mov	dword ptr [rsp + 8], r8d
0x38c5:	mov	dword ptr [rsp + 0x78], r9d
0x38ca:	mov	qword ptr [rsp + 0x20], rax
0x38cf:	mov	rax, qword ptr [rsp + 0xf8]
0x38d7:	mov	qword ptr [rsp + 0x68], rax
0x38dc:	mov	rax, qword ptr [rsp + 0x100]
0x38e4:	mov	qword ptr [rsp + 0x60], rax
0x38e9:	mov	rax, qword ptr fs:[0x28]
0x38f2:	mov	qword ptr [rsp + 0xa8], rax
0x38fa:	xor	eax, eax
0x38fc:	call	0x1810


0x37a0:	push	rbp
0x37a1:	push	rbx
0x37a2:	mov	rbp, rdi
0x37a5:	mov	ebx, esi
0x37a7:	sub	rsp, 8
0x37ab:	call	0x6490


0x3700:	test	rdi, rdi
0x3703:	push	rbx
0x3704:	je	0x377d


0x3670:	push	rbx
0x3671:	lea	rdi, [rip + 0x3ba1]
0x3678:	mov	ebx, 0x31069
0x367d:	sub	rsp, 0x10
0x3681:	mov	rax, qword ptr fs:[0x28]
0x368a:	mov	qword ptr [rsp + 8], rax
0x368f:	xor	eax, eax
0x3691:	call	0x1760


0x3620:	test	rdx, rdx
0x3623:	je	0x3668


0x3610:	mov	rdi, qword ptr [rdi + 0x10]
0x3614:	jmp	0x1770


0x3600:	mov	edx, 0xa
0x3605:	jmp	0x34f0


0x34f0:	push	r15
0x34f2:	push	r14
0x34f4:	push	r13
0x34f6:	push	r12
0x34f8:	push	rbp
0x34f9:	push	rbx
0x34fa:	sub	rsp, 0x18
0x34fe:	mov	r13, qword ptr [rdi + 0x10]
0x3502:	mov	r8, qword ptr [rdi]
0x3505:	add	r8, r13
0x3508:	test	byte ptr [rsi], 0x10
0x350b:	jne	0x35e0


0x34e0:	pxor	xmm0, xmm0
0x34e4:	mov	qword ptr [rdi + 0x10], 0
0x34ec:	movups	xmmword ptr [rdi], xmm0
0x34ef:	ret	


0x3480:	sub	rsp, 8
0x3484:	xor	esi, esi
0x3486:	call	0x19e0


0x32d0:	push	r15
0x32d2:	push	r14
0x32d4:	mov	r15, rsi
0x32d7:	push	r13
0x32d9:	push	r12
0x32db:	mov	r12, rdx
0x32de:	push	rbp
0x32df:	push	rbx
0x32e0:	sub	rsp, 0x18
0x32e4:	mov	qword ptr [rsp + 8], rdi
0x32e9:	mov	rdi, rdx
0x32ec:	call	0x1960


0x3280:	push	rbp
0x3281:	push	rbx
0x3282:	mov	ebp, edi
0x3284:	lea	rdi, [rip + 0x3f7c]
0x328b:	xor	esi, esi
0x328d:	xor	eax, eax
0x328f:	sub	rsp, 8
0x3293:	mov	ebx, 1
0x3298:	call	0x1a10


0x3250:	test	rdi, rdi
0x3253:	je	0x3270


0x3240:	jmp	0x18f0


0x3190:	push	rbp
0x3191:	push	rbx
0x3192:	sub	rsp, 8
0x3196:	mov	rdi, qword ptr [rip + 0x206f0b]
0x319d:	call	0x6410


0x3180:	mov	byte ptr [rip + 0x206f99], dil
0x3187:	ret	


0x3170:	mov	qword ptr [rip + 0x206fb1], rdi
0x3177:	ret	


0x3120:	push	r14
0x3122:	push	r13
0x3124:	push	r12
0x3126:	push	rbp
0x3127:	push	rbx
0x3128:	mov	r14, qword ptr [rsi]
0x312b:	test	r14, r14
0x312e:	je	0x3161


0x30b0:	push	r15
0x30b2:	push	r14
0x30b4:	mov	r14, rdi
0x30b7:	push	r13
0x30b9:	push	r12
0x30bb:	mov	r12, rsi
0x30be:	push	rbp
0x30bf:	push	rbx
0x30c0:	mov	rbp, rcx
0x30c3:	mov	rbx, rdx
0x30c6:	mov	rcx, r8
0x30c9:	mov	rdx, rbp
0x30cc:	sub	rsp, 8
0x30d0:	mov	rsi, rbx
0x30d3:	mov	rdi, r12
0x30d6:	mov	r15, r8
0x30d9:	mov	r13, r9
0x30dc:	call	0x2df0


0x2f90:	push	r15
0x2f92:	push	r14
0x2f94:	mov	r14, rdi
0x2f97:	push	r13
0x2f99:	push	r12
0x2f9b:	xor	edi, edi
0x2f9d:	push	rbp
0x2f9e:	push	rbx
0x2f9f:	mov	rbp, rsi
0x2fa2:	lea	rsi, [rip + 0x4230]
0x2fa9:	mov	r12, rdx
0x2fac:	mov	edx, 5
0x2fb1:	sub	rsp, 8
0x2fb5:	mov	rbx, qword ptr [rip + 0x207124]
0x2fbc:	call	0x1800


0x2f10:	cmp	rdx, -1
0x2f14:	push	r12
0x2f16:	mov	edx, 5
0x2f1b:	push	rbp
0x2f1c:	mov	r12, rsi
0x2f1f:	push	rbx
0x2f20:	mov	rbp, rdi
0x2f23:	je	0x2f70


0x2df0:	push	r15
0x2df2:	push	r14
0x2df4:	mov	r15, rsi
0x2df7:	push	r13
0x2df9:	push	r12
0x2dfb:	mov	r13, rcx
0x2dfe:	push	rbp
0x2dff:	push	rbx
0x2e00:	mov	rbp, rdx
0x2e03:	sub	rsp, 0x28
0x2e07:	mov	qword ptr [rsp + 8], rdi
0x2e0c:	mov	qword ptr [rsp + 0x18], rdx
0x2e11:	call	0x1820


0x2de0:	mov	edi, 1
0x2de5:	jmp	0x2920


0x2920:	push	r13
0x2922:	push	r12
0x2924:	mov	edx, 5
0x2929:	push	rbp
0x292a:	push	rbx
0x292b:	mov	ebp, edi
0x292d:	sub	rsp, 0x88
0x2934:	mov	rbx, qword ptr [rip + 0x2077f5]
0x293b:	mov	rax, qword ptr fs:[0x28]
0x2944:	mov	qword ptr [rsp + 0x78], rax
0x2949:	xor	eax, eax
0x294b:	test	edi, edi
0x294d:	je	0x297d


0x2840:	push	r14
0x2842:	push	r13
0x2844:	mov	r14, rsi
0x2847:	mov	r13, qword ptr [rip + 0x2078c2]
0x284e:	push	r12
0x2850:	push	rbp
0x2851:	lea	rbp, [rdi - 1]
0x2855:	push	rbx
0x2856:	test	r13, r13
0x2859:	je	0x290f


0x27c0:	test	rdx, rdx
0x27c3:	jne	0x2800


0x2730:	push	rbp
0x2731:	push	rbx
0x2732:	lea	r8, [rip + 0x5068]
0x2739:	mov	rbp, rsi
0x273c:	mov	edx, 0xa
0x2741:	xor	esi, esi
0x2743:	sub	rsp, 0x18
0x2747:	mov	rbx, rdi
0x274a:	mov	rcx, rsp
0x274d:	mov	rax, qword ptr fs:[0x28]
0x2756:	mov	qword ptr [rsp + 8], rax
0x275b:	xor	eax, eax
0x275d:	call	0x5e40


0x26a0:	sub	rsp, 8
0x26a4:	mov	rax, qword ptr [rip + 0x207a55]
0x26ab:	cmp	rax, rdx
0x26ae:	cmovbe	rdx, rax
0x26b2:	cmp	rax, rcx
0x26b5:	cmovbe	rcx, rax
0x26b9:	movzx	eax, byte ptr [rip + 0x207a38]
0x26c0:	mov	r8, rdx
0x26c3:	test	al, al
0x26c5:	je	0x26d8


0x2690:	push	rbp
0x2691:	mov	rbp, rsp
0x2694:	pop	rbp
0x2695:	jmp	0x2600


0x2650:	cmp	byte ptr [rip + 0x207a91], 0
0x2657:	jne	0x2688


0x2600:	lea	rdi, [rip + 0x207a99]
0x2607:	lea	rsi, [rip + 0x207a92]
0x260e:	push	rbp
0x260f:	sub	rsi, rdi
0x2612:	mov	rbp, rsp
0x2615:	sar	rsi, 3
0x2619:	mov	rax, rsi
0x261c:	shr	rax, 0x3f
0x2620:	add	rsi, rax
0x2623:	sar	rsi, 1
0x2626:	je	0x2640


0x25c0:	lea	rdi, [rip + 0x207ad9]
0x25c7:	push	rbp
0x25c8:	lea	rax, [rip + 0x207ad1]
0x25cf:	cmp	rax, rdi
0x25d2:	mov	rbp, rsp
0x25d5:	je	0x25f0


0x2590:	xor	ebp, ebp
0x2592:	mov	r9, rdx
0x2595:	pop	rsi
0x2596:	mov	rdx, rsp
0x2599:	and	rsp, 0xfffffffffffffff0
0x259d:	push	rax
0x259e:	push	rsp
0x259f:	lea	r8, [rip + 0x416a]
0x25a6:	lea	rcx, [rip + 0x40f3]
0x25ad:	lea	rdi, [rip - 0xaf4]
0x25b4:	call	qword ptr [rip + 0x207a26]


0x1ac0:	push	r15
0x1ac2:	push	r14
0x1ac4:	mov	r14d, edi
0x1ac7:	push	r13
0x1ac9:	push	r12
0x1acb:	lea	rdi, [rip + 0x4d27]
0x1ad2:	push	rbp
0x1ad3:	push	rbx
0x1ad4:	mov	r15, rsi
0x1ad7:	sub	rsp, 0xa8
0x1ade:	mov	rax, qword ptr fs:[0x28]
0x1ae7:	mov	qword ptr [rsp + 0x98], rax
0x1aef:	xor	eax, eax
0x1af1:	call	0x1760


0x1718:	sub	rsp, 8
0x171c:	mov	rax, qword ptr [rip + 0x2088c5]
0x1723:	test	rax, rax
0x1726:	je	0x172a


0x1a40:	jmp	qword ptr [rip + 0x20855a]


0x6656:	mov	rdx, rsi
0x6659:	mov	rsi, r12
0x665c:	mov	qword ptr [rsp + 8], rcx
0x6661:	call	0x1900


0x666f:	add	rsp, 0x10
0x6673:	mov	rdx, r12
0x6676:	mov	rsi, rbx
0x6679:	mov	rdi, rbp
0x667c:	pop	rbx
0x667d:	pop	rbp
0x667e:	pop	r12
0x6680:	jmp	0x64d0


0x65af:	mov	rdx, rsi
0x65b2:	mov	rsi, r15
0x65b5:	call	0x1900


0x65c2:	lea	r13, [r14 + rbx]
0x65c6:	lea	r12, [r15 + rbp]
0x65ca:	lea	rcx, [rbp + 1]
0x65ce:	lea	rsi, [rbx + 1]
0x65d2:	mov	rdx, r15
0x65d5:	mov	rdi, r14
0x65d8:	movzx	r9d, byte ptr [r13]
0x65dd:	movzx	r8d, byte ptr [r12]
0x65e2:	mov	byte ptr [r13], 0
0x65e7:	mov	byte ptr [r12], 0
0x65ec:	mov	byte ptr [rsp + 0xf], r9b
0x65f1:	mov	byte ptr [rsp + 8], r8b
0x65f6:	call	0x64d0


0x1790:	jmp	qword ptr [rip + 0x2086b2]


0x1990:	jmp	qword ptr [rip + 0x2085b2]


0x17c0:	jmp	qword ptr [rip + 0x20869a]


0x1850:	jmp	qword ptr [rip + 0x208652]


0x6330:	mov	rax, qword ptr [rdi + 0x20]
0x6334:	cmp	qword ptr [rdi + 0x28], rax
0x6338:	jne	0x632a


0x632a:	jmp	0x1a20


0x62fa:	mov	rdi, rbx
0x62fd:	pop	rbx
0x62fe:	jmp	0x1980


0x62e9:	call	0x19b0


0x1960:	jmp	qword ptr [rip + 0x2085ca]


0x5e67:	lea	rax, [rsp + 0x10]
0x5e6c:	mov	r15, rsi
0x5e6f:	test	rsi, rsi
0x5e72:	mov	rbp, rdi
0x5e75:	mov	dword ptr [rsp + 8], edx
0x5e79:	mov	r14, rcx
0x5e7c:	mov	r13, r8
0x5e7f:	cmove	r15, rax
0x5e83:	call	0x1790


0x61c5:	lea	rcx, [rip + 0x1a8c]
0x61cc:	lea	rsi, [rip + 0x1965]
0x61d3:	lea	rdi, [rip + 0x197e]
0x61da:	mov	edx, 0x54
0x61df:	call	0x18b0


0x1800:	jmp	qword ptr [rip + 0x20867a]


0x1820:	jmp	qword ptr [rip + 0x20866a]


0x5c49:	call	0x5ca0


0x5c32:	movzx	edx, dl
0x5c35:	test	rdx, rdx
0x5c38:	jne	0x5c49


0x5be0:	test	rax, rax
0x5be3:	mov	edx, 0x80
0x5be8:	cmove	rax, rdx
0x5bec:	test	rax, rax
0x5bef:	jns	0x5bd2


0x5bb8:	movabs	rdx, 0x5555555555555553
0x5bc2:	cmp	rax, rdx
0x5bc5:	ja	0x5bf1


0x5b60:	test	rcx, rcx
0x5b63:	je	0x5b88


0x5b2b:	xor	edx, edx
0x5b2d:	movabs	rax, 0x5555555555555554
0x5b37:	div	r9
0x5b3a:	cmp	rax, rcx
0x5b3d:	jbe	0x5b7b


0x5b0b:	sub	rsp, 8
0x5b0f:	call	0x5ca0


0x5b01:	movzx	eax, al
0x5b04:	test	rax, rax
0x5b07:	jne	0x5b0b


0x5ab9:	test	rdi, rdi
0x5abc:	jne	0x5ad8


0x5abe:	mov	rsi, rbx
0x5ac1:	call	0x19d0


0x5a8b:	sub	rsp, 8
0x5a8f:	call	0x5ca0


0x5a81:	movzx	eax, al
0x5a84:	test	rax, rax
0x5a87:	jne	0x5a8b


0x1970:	jmp	qword ptr [rip + 0x2085c2]


0x5966:	mov	eax, r10d
0x5969:	mov	r11d, 1
0x596f:	add	r10d, 8
0x5973:	add	rax, rbp
0x5976:	mov	rax, qword ptr [rax]
0x5979:	test	rax, rax
0x597c:	mov	qword ptr [r8 + r9*8], rax
0x5980:	je	0x598c


0x59bc:	mov	rax, rbx
0x59bf:	add	rbx, 8
0x59c3:	jmp	0x5976


0x5898:	mov	r11d, eax
0x589b:	add	r11, qword ptr [r10 + 0x10]
0x589f:	add	eax, 8
0x58a2:	mov	dword ptr [r10], eax
0x58a5:	mov	rax, qword ptr [r11]
0x58a8:	test	rax, rax
0x58ab:	mov	qword ptr [r8 + r9*8], rax
0x58af:	je	0x58bb


0x58da:	mov	r11, qword ptr [r10 + 8]
0x58de:	lea	rax, [r11 + 8]
0x58e2:	mov	qword ptr [r10 + 8], rax
0x58e6:	jmp	0x58a5


0x586b:	jmp	0x5430


0x5568:	mov	r8, rcx
0x556b:	mov	rcx, rdx
0x556e:	lea	rdx, [rip + 0x21df]
0x5575:	mov	esi, 1
0x557a:	xor	eax, eax
0x557c:	call	0x1a70


0x5450:	mov	r8, rdx
0x5453:	lea	rdx, [rip + 0x22ee]
0x545a:	mov	r9, rcx
0x545d:	xor	eax, eax
0x545f:	mov	rcx, rsi
0x5462:	mov	esi, 1
0x5467:	call	0x1a70


0x5357:	call	0x1780


0x5325:	test	rdx, rdx
0x5328:	je	0x5357


0x52c4:	call	0x1780


0x525c:	mov	dword ptr [rsp], esi
0x525f:	mov	rcx, rsp
0x5262:	mov	rdx, -1
0x5269:	mov	rsi, rax
0x526c:	mov	qword ptr [rsp + 4], 0
0x5275:	mov	qword ptr [rsp + 0xc], 0x4000000
0x527e:	mov	qword ptr [rsp + 0x14], 0
0x5287:	mov	qword ptr [rsp + 0x1c], 0
0x5290:	mov	qword ptr [rsp + 0x24], 0
0x5299:	mov	qword ptr [rsp + 0x2c], 0
0x52a2:	mov	dword ptr [rsp + 0x34], 0
0x52aa:	call	0x4ad0


0x5130:	call	0x1780


0x50cf:	mov	dword ptr [rsp], esi
0x50d2:	mov	rcx, rsp
0x50d5:	mov	rsi, rax
0x50d8:	mov	qword ptr [rsp + 4], 0
0x50e1:	mov	qword ptr [rsp + 0xc], 0
0x50ea:	mov	qword ptr [rsp + 0x14], 0
0x50f3:	mov	qword ptr [rsp + 0x1c], 0
0x50fc:	mov	qword ptr [rsp + 0x24], 0
0x5105:	mov	qword ptr [rsp + 0x2c], 0
0x510e:	mov	dword ptr [rsp + 0x34], 0
0x5116:	call	0x4ad0


0x50a4:	call	0x1780


0x503c:	mov	dword ptr [rsp], esi
0x503f:	mov	rcx, rsp
0x5042:	mov	rdx, -1
0x5049:	mov	rsi, rax
0x504c:	mov	qword ptr [rsp + 4], 0
0x5055:	mov	qword ptr [rsp + 0xc], 0
0x505e:	mov	qword ptr [rsp + 0x14], 0
0x5067:	mov	qword ptr [rsp + 0x1c], 0
0x5070:	mov	qword ptr [rsp + 0x24], 0
0x5079:	mov	qword ptr [rsp + 0x2c], 0
0x5082:	mov	dword ptr [rsp + 0x34], 0
0x508a:	call	0x4ad0


0x4f51:	mov	rdi, qword ptr [r12 + 8]
0x4f56:	lea	rbx, [rip + 0x2051e3]
0x4f5d:	cmp	rdi, rbx
0x4f60:	je	0x4f79


0x4f26:	sub	eax, 2
0x4f29:	lea	rbx, [r12 + 0x18]
0x4f2e:	shl	rax, 4
0x4f32:	lea	rbp, [r12 + rax + 0x28]
0x4f37:	nop	word ptr [rax + rax]
0x4f40:	mov	rdi, qword ptr [rbx]
0x4f43:	add	rbx, 0x10
0x4f47:	call	0x1770


0x4d87:	sub	rsp, 8
0x4d8b:	call	0x1780


0x4d79:	test	rdx, rdx
0x4d7c:	je	0x4d87


0x1810:	jmp	qword ptr [rip + 0x208672]


0x377d:	mov	rcx, qword ptr [rip + 0x20695c]
0x3784:	lea	rdi, [rip + 0x3aa5]
0x378b:	mov	edx, 0x37
0x3790:	mov	esi, 1
0x3795:	call	0x1a60


0x3706:	mov	esi, 0x2f
0x370b:	mov	rbx, rdi
0x370e:	call	0x1890


0x1760:	jmp	qword ptr [rip + 0x2086ca]


0x3668:	xor	eax, eax
0x366a:	ret	


0x3625:	push	r12
0x3627:	push	rbp
0x3628:	mov	r12, rsi
0x362b:	push	rbx
0x362c:	mov	rbp, rdi
0x362f:	mov	rbx, rdx
0x3632:	call	0x1740


0x1770:	jmp	qword ptr [rip + 0x2086c2]


0x3511:	mov	r14, rdi
0x3514:	mov	rbp, rsi
0x3517:	mov	rbx, r13
0x351a:	movsx	r15d, dl
0x351e:	jmp	0x352b


0x35e0:	add	rsp, 0x18
0x35e4:	xor	eax, eax
0x35e6:	pop	rbx
0x35e7:	pop	rbp
0x35e8:	pop	r12
0x35ea:	pop	r13
0x35ec:	pop	r14
0x35ee:	pop	r15
0x35f0:	ret	


0x19e0:	jmp	qword ptr [rip + 0x20858a]


0x1a10:	jmp	qword ptr [rip + 0x208572]


0x3270:	ret	


0x3255:	push	rbx
0x3256:	mov	ebx, esi
0x3258:	call	0x1960


0x18f0:	jmp	qword ptr [rip + 0x208602]


0x3161:	pop	rbx
0x3162:	mov	rax, r14
0x3165:	pop	rbp
0x3166:	pop	r12
0x3168:	pop	r13
0x316a:	pop	r14
0x316c:	ret	


0x3130:	mov	r12, rcx
0x3133:	mov	r13, rdi
0x3136:	mov	rbp, rdx
0x3139:	lea	rbx, [rsi + 8]
0x313d:	jmp	0x314f


0x2f70:	lea	rsi, [rip + 0x422a]
0x2f77:	xor	edi, edi
0x2f79:	call	0x1800


0x2f25:	lea	rsi, [rip + 0x4290]
0x2f2c:	xor	edi, edi
0x2f2e:	call	0x1800


0x297d:	lea	rsi, [rip + 0x3fbc]
0x2984:	xor	edi, edi
0x2986:	call	0x1800


0x294f:	lea	rsi, [rip + 0x3fc2]
0x2956:	xor	edi, edi
0x2958:	call	0x1800


0x290f:	xor	ebx, ebx
0x2911:	jmp	0x28db


0x285f:	test	rbp, rbp
0x2862:	je	0x290f


0x27c5:	movzx	eax, byte ptr [rip + 0x20792f]
0x27cc:	xor	eax, 1
0x27cf:	test	al, al
0x27d1:	jne	0x2813


0x2800:	test	sil, sil
0x2803:	jne	0x2818


0x26d8:	cmp	byte ptr [rip + 0x207a39], 0
0x26df:	jne	0x2710


0x26c7:	cmp	rdx, rcx
0x26ca:	je	0x2700


0x2659:	cmp	qword ptr [rip + 0x207997], 0
0x2661:	push	rbp
0x2662:	mov	rbp, rsp
0x2665:	je	0x2673


0x2688:	ret	


0x2640:	pop	rbp
0x2641:	ret	


0x2628:	mov	rax, qword ptr [rip + 0x2079c1]
0x262f:	test	rax, rax
0x2632:	je	0x2640


0x25f0:	pop	rbp
0x25f1:	ret	


0x25d7:	mov	rax, qword ptr [rip + 0x2079fa]
0x25de:	test	rax, rax
0x25e1:	je	0x25f0




0x172a:	add	rsp, 8
0x172e:	ret	


0x1728:	call	rax




0x1900:	jmp	qword ptr [rip + 0x2085fa]










0x633a:	cmp	qword ptr [rdi + 0x48], 0
0x633f:	jne	0x632a


0x1a20:	jmp	qword ptr [rip + 0x20856a]


0x1980:	jmp	qword ptr [rip + 0x2085ba]


0x19b0:	jmp	qword ptr [rip + 0x2085a2]




0x18b0:	jmp	qword ptr [rip + 0x208622]






0x5c3a:	call	0x1920


0x5bf1:	sub	rsp, 8
0x5bf5:	call	0x5ca0


0x5bd2:	mov	qword ptr [rsi], rax
0x5bd5:	mov	rsi, rax
0x5bd8:	jmp	0x5ab0


0x5bc7:	mov	rdx, rax
0x5bca:	shr	rdx, 1
0x5bcd:	lea	rax, [rdx + rax + 1]
0x5bd2:	mov	qword ptr [rsi], rax
0x5bd5:	mov	rsi, rax
0x5bd8:	jmp	0x5ab0


0x5b88:	xor	edx, edx
0x5b8a:	mov	eax, 0x80
0x5b8f:	xor	r8d, r8d
0x5b92:	div	r9
0x5b95:	test	rax, rax
0x5b98:	sete	r8b
0x5b9c:	lea	rcx, [r8 + rax]
0x5ba0:	jmp	0x5b65


0x5b65:	mov	rax, rcx
0x5b68:	mul	r9
0x5b6b:	seto	dl
0x5b6e:	test	rax, rax
0x5b71:	movzx	edx, dl
0x5b74:	js	0x5b7b


0x5b7b:	sub	rsp, 8
0x5b7f:	call	0x5ca0


0x5b3f:	mov	rax, rcx
0x5b42:	shr	rax, 1
0x5b45:	lea	rcx, [rax + rcx + 1]
0x5b4a:	mov	qword ptr [rsi], rcx
0x5b4d:	imul	rcx, r9
0x5b51:	mov	rsi, rcx
0x5b54:	jmp	0x5ab0


0x5b09:	jmp	0x5ab0


0x5ad8:	call	0x1770


0x19d0:	jmp	qword ptr [rip + 0x208592]


0x5a89:	jmp	0x5a50




0x598c:	test	r11b, r11b
0x598f:	jne	0x59b5


0x5982:	add	r9, 1
0x5986:	cmp	r9, 0xa
0x598a:	jne	0x5960


0x5976:	mov	rax, qword ptr [rax]
0x5979:	test	rax, rax
0x597c:	mov	qword ptr [r8 + r9*8], rax
0x5980:	je	0x598c


0x58bb:	call	0x5430


0x58b1:	add	r9, 1
0x58b5:	cmp	r9, 0xa
0x58b9:	jne	0x5890


0x58a5:	mov	rax, qword ptr [r11]
0x58a8:	test	rax, rax
0x58ab:	mov	qword ptr [r8 + r9*8], rax
0x58af:	je	0x58bb


0x5860:	add	r9, 1
0x5864:	cmp	qword ptr [r8 + r9*8], 0
0x5869:	jne	0x5860


0x1a70:	jmp	qword ptr [rip + 0x208542]


0x1780:	jmp	qword ptr [rip + 0x2086ba]


0x532a:	mov	qword ptr [rsp + 0x28], rsi
0x532f:	mov	qword ptr [rsp + 0x30], rdx
0x5334:	mov	rcx, rsp
0x5337:	mov	rdx, r8
0x533a:	mov	rsi, r9
0x533d:	call	0x4ad0


0x4f79:	lea	rbx, [rip + 0x205110]
0x4f80:	cmp	r12, rbx
0x4f83:	je	0x4f94


0x4f62:	call	0x1770


0x4d7e:	mov	qword ptr [rdi + 0x28], rsi
0x4d82:	mov	qword ptr [rdi + 0x30], rdx
0x4d86:	ret	




0x1a60:	jmp	qword ptr [rip + 0x20854a]


0x1890:	jmp	qword ptr [rip + 0x208632]




0x1740:	jmp	qword ptr [rip + 0x2086da]




0x352b:	mov	rcx, qword ptr [rbp + 8]
0x352f:	cmp	rcx, qword ptr [rbp + 0x10]
0x3533:	jae	0x35a0








0x314f:	mov	rdx, r12
0x3152:	mov	rsi, rbp
0x3155:	mov	rdi, r13
0x3158:	call	0x1900


0x28db:	cmp	qword ptr [rip + 0x207826], rbp
0x28e2:	cmovbe	rbp, qword ptr [rip + 0x20781e]
0x28ea:	add	rbx, rbp
0x28ed:	lea	rax, [r14 + rbx]
0x28f1:	pop	rbx
0x28f2:	pop	rbp
0x28f3:	pop	r12
0x28f5:	pop	r13
0x28f7:	pop	r14
0x28f9:	ret	


0x2868:	xor	r12d, r12d
0x286b:	xor	ebx, ebx
0x286d:	nop	dword ptr [rax]
0x2870:	call	0x1aa0


0x27d3:	mov	ecx, dword ptr [rip + 0x207923]
0x27d9:	push	rbx
0x27da:	mov	rbx, rdi
0x27dd:	test	ecx, ecx
0x27df:	je	0x2828


0x2813:	ret	


0x2805:	movzx	eax, byte ptr [rip + 0x2078ee]
0x280c:	xor	eax, 1
0x280f:	test	al, al
0x2811:	je	0x27d3


0x2818:	movzx	eax, byte ptr [rip + 0x2078da]
0x281f:	xor	eax, 1
0x2822:	jmp	0x27cf


0x26e1:	cmp	rdx, rcx
0x26e4:	mov	eax, 1
0x26e9:	jne	0x26cc


0x2710:	mov	rdx, rsi
0x2713:	mov	rsi, r8
0x2716:	call	0x5da0


0x2700:	call	0x3620


0x26cc:	add	rsp, 8
0x26d0:	ret	


0x2673:	call	0x25c0


0x2667:	mov	rdi, qword ptr [rip + 0x20799a]
0x266e:	call	0x1ab0


0x2634:	pop	rbp
0x2635:	jmp	rax


0x25e3:	pop	rbp
0x25e4:	jmp	rax




0x6341:	push	r12
0x6343:	push	rbp
0x6344:	mov	r12d, edx
0x6347:	push	rbx
0x6348:	mov	rbp, rsi
0x634b:	mov	rbx, rdi
0x634e:	call	0x1960










0x1920:	jmp	qword ptr [rip + 0x2085ea]


0x5b76:	test	rdx, rdx
0x5b79:	je	0x5b4a




0x5991:	call	0x5430


0x59b5:	mov	dword ptr [rsp + 8], r10d
0x59ba:	jmp	0x5991


0x5960:	cmp	r10d, 0x2f
0x5964:	ja	0x59bc


0x5890:	mov	eax, dword ptr [r10]
0x5893:	cmp	eax, 0x2f
0x5896:	ja	0x58da






0x4f94:	pop	rbx
0x4f95:	mov	dword ptr [rip + 0x2050d9], 1
0x4f9f:	pop	rbp
0x4fa0:	pop	r12
0x4fa2:	ret	


0x4f85:	mov	rdi, r12
0x4f88:	call	0x1770








0x3535:	lea	rax, [rcx + 1]
0x3539:	mov	qword ptr [rbp + 8], rax
0x353d:	movzx	r12d, byte ptr [rcx]
0x3541:	mov	ecx, r12d
0x3544:	cmp	rbx, r8
0x3547:	mov	rsi, rbx
0x354a:	jne	0x3520


0x35a0:	mov	rdi, rbp
0x35a3:	mov	byte ptr [rsp + 0xf], dl
0x35a7:	mov	qword ptr [rsp], r8
0x35ab:	call	0x1750


0x1aa0:	jmp	qword ptr [rip + 0x20852a]


0x2828:	lea	rsi, [rip + 0x3f1c]
0x282f:	add	rdx, 1
0x2833:	mov	edi, 1
0x2838:	call	0x19f0


0x27e1:	mov	rdx, qword ptr [rbx + 8]
0x27e5:	mov	rdi, qword ptr [rbx + 0x10]
0x27e9:	mov	esi, 1
0x27ee:	pop	rbx
0x27ef:	mov	rcx, qword ptr [rip + 0x2078b2]
0x27f6:	jmp	0x19c0


0x27cf:	test	al, al
0x27d1:	jne	0x2813


0x26eb:	call	0x1900


0x1ab0:	jmp	qword ptr [rip + 0x208542]




0x5b4a:	mov	qword ptr [rsi], rcx
0x5b4d:	imul	rcx, r9
0x5b51:	mov	rsi, rcx
0x5b54:	jmp	0x5ab0


0x354c:	mov	rbx, qword ptr [r14]
0x354f:	mov	rsi, r14
0x3552:	mov	rdi, r13
0x3555:	mov	byte ptr [rsp + 0xf], dl
0x3559:	mov	byte ptr [rsp], cl
0x355c:	call	0x5bb0


0x3520:	cmp	r12d, r15d
0x3523:	lea	rbx, [rsi + 1]
0x3527:	mov	byte ptr [rsi], cl
0x3529:	je	0x3586


0x1750:	jmp	qword ptr [rip + 0x2086d2]




0x19f0:	jmp	qword ptr [rip + 0x208582]


0x19c0:	jmp	qword ptr [rip + 0x20859a]


0x3586:	sub	rbx, r13
0x3589:	mov	rax, r14
0x358c:	mov	qword ptr [r14 + 8], rbx
0x3590:	add	rsp, 0x18
0x3594:	pop	rbx
0x3595:	pop	rbp
0x3596:	pop	r12
0x3598:	pop	r13
0x359a:	pop	r14
0x359c:	pop	r15
0x359e:	ret	








0x2678:	mov	byte ptr [rip + 0x207a69], 1
0x267f:	pop	rbp
0x2680:	ret	


0x2705:	test	eax, eax
0x2707:	setne	al
0x270a:	add	rsp, 8
0x270e:	ret	


0x66d1:	test	rbp, rbp
0x66d4:	je	0x66f6


0x66f6:	add	rsp, 8
0x66fa:	pop	rbx
0x66fb:	pop	rbp
0x66fc:	pop	r12
0x66fe:	pop	r13
0x6700:	pop	r14
0x6702:	pop	r15
0x6704:	ret	


0x66d6:	xor	ebx, ebx
0x66d8:	nop	dword ptr [rax + rax]
0x66e0:	mov	rdx, r15
0x66e3:	mov	rsi, r14
0x66e6:	mov	edi, r13d
0x66e9:	call	qword ptr [r12 + rbx*8]


0x283d:	jmp	0x27e1


0x35b0:	cmp	eax, -1
0x35b3:	mov	r12d, eax
0x35b6:	mov	r8, qword ptr [rsp]
0x35ba:	movzx	edx, byte ptr [rsp + 0xf]
0x35bf:	jne	0x35f1


0x35c1:	cmp	r13, rbx
0x35c4:	je	0x35e0


0x35f1:	mov	ecx, eax
0x35f3:	jmp	0x3544


0x35c6:	test	byte ptr [rbp], 0x20
0x35ca:	jne	0x35e0


0x3544:	cmp	rbx, r8
0x3547:	mov	rsi, rbx
0x354a:	jne	0x3520


0x35cc:	cmp	byte ptr [rbx - 1], dl
0x35cf:	je	0x3586


0x35d1:	mov	r12d, r15d
0x35d4:	mov	ecx, edx
0x35d6:	jmp	0x3544


0x2875:	mov	rdi, qword ptr [rax]
0x2878:	nop	dword ptr [rax + rax]
0x2880:	movzx	ecx, byte ptr [r14 + rbx]
0x2885:	mov	rdx, rcx
0x2888:	movzx	ecx, word ptr [rdi + rcx*2]
0x288c:	cmp	dl, 0xa
0x288f:	je	0x2900


0x2900:	add	rbx, 1
0x2904:	cmp	rbp, rbx
0x2907:	ja	0x2880


0x2891:	test	cl, 1
0x2894:	jne	0x2900


0x290d:	jmp	0x28d8


0x2880:	movzx	ecx, byte ptr [r14 + rbx]
0x2885:	mov	rdx, rcx
0x2888:	movzx	ecx, word ptr [rdi + rcx*2]
0x288c:	cmp	dl, 0xa
0x288f:	je	0x2900


0x2896:	cmp	rbp, rbx
0x2899:	ja	0x28ba


0x28d8:	sub	rbp, rbx
0x28db:	cmp	qword ptr [rip + 0x207826], rbp
0x28e2:	cmovbe	rbp, qword ptr [rip + 0x20781e]
0x28ea:	add	rbx, rbp
0x28ed:	lea	rax, [r14 + rbx]
0x28f1:	pop	rbx
0x28f2:	pop	rbp
0x28f3:	pop	r12
0x28f5:	pop	r13
0x28f7:	pop	r14
0x28f9:	ret	


0x289b:	jmp	0x28d8


0x28ba:	cmp	dl, 0xa
0x28bd:	jne	0x28a0


0x28bf:	add	r12, 1
0x28c3:	cmp	r12, r13
0x28c6:	jae	0x28d8


0x28a0:	and	ecx, 1
0x28a3:	jne	0x28bf


0x28c8:	cmp	rbp, rbx
0x28cb:	jbe	0x28d8


0x28a5:	add	rbx, 1
0x28a9:	cmp	rbp, rbx
0x28ac:	jbe	0x28d8


0x28cd:	cmp	rbp, rbx
0x28d0:	ja	0x2870


0x28ae:	movzx	eax, byte ptr [r14 + rbx]
0x28b3:	movzx	ecx, word ptr [rdi + rax*2]
0x28b7:	mov	rdx, rax
0x28ba:	cmp	dl, 0xa
0x28bd:	jne	0x28a0


0x2870:	call	0x1aa0


0x5c3f:	test	rax, rax
0x5c42:	je	0x5c49


0x5c44:	add	rsp, 8
0x5c48:	ret	


0x3637:	xor	ecx, ecx
0x3639:	mov	r8, qword ptr [rax]
0x363c:	jmp	0x3649


0x3649:	movzx	eax, byte ptr [rbp + rcx]
0x364e:	movzx	r9d, byte ptr [r12 + rcx]
0x3653:	mov	eax, dword ptr [r8 + rax*4]
0x3657:	sub	eax, dword ptr [r8 + r9*4]
0x365b:	je	0x3640


0x3640:	add	rcx, 1
0x3644:	cmp	rcx, rbx
0x3647:	je	0x365d


0x365d:	pop	rbx
0x365e:	pop	rbp
0x365f:	pop	r12
0x3661:	ret	


0x3713:	test	rax, rax
0x3716:	je	0x376d


0x376d:	mov	qword ptr [rip + 0x2069bc], rbx
0x3774:	mov	qword ptr [rip + 0x20694d], rbx
0x377b:	pop	rbx
0x377c:	ret	


0x3718:	lea	r8, [rax + 1]
0x371c:	mov	rdx, r8
0x371f:	sub	rdx, rbx
0x3722:	cmp	rdx, 6
0x3726:	jle	0x376d


0x3728:	lea	rsi, [rax - 6]
0x372c:	lea	rdi, [rip + 0x3b35]
0x3733:	mov	ecx, 7
0x3738:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3738:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x373a:	seta	dl
0x373d:	sbb	dl, 0
0x3740:	test	dl, dl
0x3742:	jne	0x376d


0x3744:	lea	rdi, [rip + 0x3b25]
0x374b:	mov	ecx, 3
0x3750:	mov	rsi, r8
0x3753:	mov	rbx, r8
0x3756:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3756:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3758:	seta	dl
0x375b:	sbb	dl, 0
0x375e:	test	dl, dl
0x3760:	jne	0x376d


0x3762:	lea	rbx, [rax + 4]
0x3766:	mov	qword ptr [rip + 0x206933], rbx
0x376d:	mov	qword ptr [rip + 0x2069bc], rbx
0x3774:	mov	qword ptr [rip + 0x20694d], rbx
0x377b:	pop	rbx
0x377c:	ret	


0x379a:	call	0x1780


0x4f8d:	mov	qword ptr [rip + 0x2050ec], rbx
0x4f94:	pop	rbx
0x4f95:	mov	dword ptr [rip + 0x2050d9], 1
0x4f9f:	pop	rbp
0x4fa0:	pop	r12
0x4fa2:	ret	


0x4f67:	mov	qword ptr [rip + 0x20511e], 0x100
0x4f72:	mov	qword ptr [rip + 0x20511f], rbx
0x4f79:	lea	rbx, [rip + 0x205110]
0x4f80:	cmp	r12, rbx
0x4f83:	je	0x4f94


0x5add:	xor	eax, eax
0x5adf:	pop	rbx
0x5ae0:	ret	


0x4f4c:	cmp	rbx, rbp
0x4f4f:	jne	0x4f40


0x4f40:	mov	rdi, qword ptr [rbx]
0x4f43:	add	rbx, 0x10
0x4f47:	call	0x1770


0x546c:	lea	rsi, [rip + 0x22e8]
0x5473:	xor	edi, edi
0x5475:	mov	edx, 5
0x547a:	call	0x1800


0x5581:	jmp	0x546c


0x5ac6:	test	rax, rax
0x5ac9:	jne	0x5ad0


0x5acb:	test	rbx, rbx
0x5ace:	jne	0x5ae1


0x5ad0:	pop	rbx
0x5ad1:	ret	


0x5ae1:	call	0x5ca0


0x62ee:	test	eax, eax
0x62f0:	je	0x62fa


0x62f2:	test	dword ptr [rbx], 0x100
0x62f8:	jne	0x6308


0x6308:	mov	rdi, rbx
0x630b:	mov	edx, 1
0x6310:	xor	esi, esi
0x6312:	call	0x6320


0x26f0:	test	eax, eax
0x26f2:	setne	al
0x26f5:	add	rsp, 8
0x26f9:	ret	


0x315d:	test	eax, eax
0x315f:	jne	0x3140


0x3140:	mov	r14, qword ptr [rbx]
0x3143:	add	rbp, r12
0x3146:	add	rbx, 8
0x314a:	test	r14, r14
0x314d:	je	0x3161


0x65ba:	test	eax, eax
0x65bc:	mov	dword ptr [rsp + 8], eax
0x65c0:	je	0x6628


0x6628:	call	0x1790


0x6666:	test	eax, eax
0x6668:	mov	rcx, qword ptr [rsp + 8]
0x666d:	je	0x6688


0x6688:	call	0x1790


0x329d:	cmp	ebp, eax
0x329f:	je	0x32b9


0x32b9:	add	rsp, 8
0x32bd:	mov	eax, ebx
0x32bf:	pop	rbx
0x32c0:	pop	rbp
0x32c1:	ret	


0x32a1:	xor	ebx, ebx
0x32a3:	test	eax, eax
0x32a5:	js	0x32b9


0x32a7:	mov	edi, eax
0x32a9:	call	0x18e0


0x18e0:	jmp	qword ptr [rip + 0x20860a]




0x348b:	mov	rdx, rax
0x348e:	mov	eax, 1
0x3493:	test	rdx, rdx
0x3496:	je	0x34b5


0x34b5:	add	rsp, 8
0x34b9:	ret	


0x3498:	lea	rdi, [rip + 0x3d72]
0x349f:	mov	ecx, 2
0x34a4:	mov	rsi, rdx
0x34a7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x34a7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x34a9:	seta	cl
0x34ac:	sbb	cl, 0
0x34af:	xor	eax, eax
0x34b1:	test	cl, cl
0x34b3:	jne	0x34c0


0x34c0:	lea	rdi, [rip + 0x3d4c]
0x34c7:	mov	ecx, 6
0x34cc:	mov	rsi, rdx
0x34cf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x34cf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x34d1:	seta	al
0x34d4:	sbb	al, 0
0x34d6:	test	al, al
0x34d8:	setne	al
0x34db:	add	rsp, 8
0x34df:	ret	


0x1af6:	mov	rdi, qword ptr [r15]
0x1af9:	test	rax, rax
0x1afc:	lea	rax, [rip + 0x576f]
0x1b03:	setne	r12b
0x1b07:	xor	r13d, r13d
0x1b0a:	xor	ebx, ebx
0x1b0c:	mov	qword ptr [rsp + 0x88], rax
0x1b14:	mov	qword ptr [rsp + 0x80], rax
0x1b1c:	xor	ebp, ebp
0x1b1e:	call	0x3700


0x1b23:	lea	rsi, [rip + 0x5c77]
0x1b2a:	mov	edi, 6
0x1b2f:	call	0x19e0


0x1b34:	lea	rsi, [rip + 0x4cce]
0x1b3b:	lea	rdi, [rip + 0x4c8e]
0x1b42:	call	0x17f0


0x17f0:	jmp	qword ptr [rip + 0x208682]




0x3696:	test	rax, rax
0x3699:	je	0x36a0


0x36a0:	mov	rcx, qword ptr [rsp + 8]
0x36a5:	xor	rcx, qword ptr fs:[0x28]
0x36ae:	mov	eax, ebx
0x36b0:	jne	0x36f9


0x369b:	cmp	byte ptr [rax], 0
0x369e:	jne	0x36c0


0x36b2:	add	rsp, 0x10
0x36b6:	pop	rbx
0x36b7:	ret	


0x36f9:	call	0x1830


0x36c0:	mov	edx, 0xa
0x36c5:	mov	rsi, rsp
0x36c8:	mov	rdi, rax
0x36cb:	call	0x1940


0x1830:	jmp	qword ptr [rip + 0x208662]


0x1940:	jmp	qword ptr [rip + 0x2085da]






0x3901:	cmp	r15d, 0xa
0x3905:	mov	qword ptr [rsp + 0x58], rax
0x390a:	ja	0x4abf


0x3910:	lea	rcx, [rip + 0x39c9]
0x3917:	mov	edx, r15d
0x391a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x391e:	add	rax, rcx
0x3921:	jmp	rax


0x4abf:	call	0x1780


0x5a59:	test	rax, rax
0x5a5c:	jne	0x5a63


0x5a5e:	test	rbx, rbx
0x5a61:	jne	0x5a65


0x5a63:	pop	rbx
0x5a64:	ret	


0x5a65:	call	0x5ca0


0x5c09:	mov	rdx, rbx
0x5c0c:	xor	esi, esi
0x5c0e:	mov	rdi, rax
0x5c11:	pop	rbx
0x5c12:	jmp	0x18c0


0x18c0:	jmp	qword ptr [rip + 0x20861a]




0x5c64:	add	rsp, 8
0x5c68:	mov	rdx, rbx
0x5c6b:	mov	rsi, rbp
0x5c6e:	pop	rbx
0x5c6f:	pop	rbp
0x5c70:	mov	rdi, rax
0x5c73:	jmp	0x1950


0x1950:	jmp	qword ptr [rip + 0x2085d2]




0x2e16:	mov	r14, qword ptr [r15]
0x2e19:	mov	qword ptr [rsp], -1
0x2e21:	test	r14, r14
0x2e24:	je	0x2edd


0x2edd:	mov	rax, qword ptr [rsp]
0x2ee1:	add	rsp, 0x28
0x2ee5:	pop	rbx
0x2ee6:	pop	rbp
0x2ee7:	pop	r12
0x2ee9:	pop	r13
0x2eeb:	pop	r14
0x2eed:	pop	r15
0x2eef:	ret	


0x2e2a:	mov	r12, rax
0x2e2d:	mov	byte ptr [rsp + 0x17], 0
0x2e32:	xor	ebx, ebx
0x2e34:	jmp	0x2e87


0x2e87:	mov	rsi, qword ptr [rsp + 8]
0x2e8c:	mov	rdx, r12
0x2e8f:	mov	rdi, r14
0x2e92:	call	0x17a0


0x17a0:	jmp	qword ptr [rip + 0x2086aa]




0x30e1:	test	rax, rax
0x30e4:	js	0x30f5


0x30f5:	mov	rdx, rax
0x30f8:	mov	rsi, r12
0x30fb:	mov	rdi, r14
0x30fe:	call	0x2f10


0x30e6:	add	rsp, 8
0x30ea:	pop	rbx
0x30eb:	pop	rbp
0x30ec:	pop	r12
0x30ee:	pop	r13
0x30f0:	pop	r14
0x30f2:	pop	r15
0x30f4:	ret	


0x5c89:	mov	rdi, rbx
0x5c8c:	lea	rsi, [rax + 1]
0x5c90:	pop	rbx
0x5c91:	jmp	0x5c50


0x547f:	lea	rdx, [rip + 0x25fa]
0x5486:	mov	rcx, rax
0x5489:	mov	r8d, 0x7e3
0x548f:	mov	esi, 1
0x5494:	mov	rdi, rbp
0x5497:	xor	eax, eax
0x5499:	call	0x1a70


0x549e:	lea	rsi, [rip + 0x2343]
0x54a5:	xor	edi, edi
0x54a7:	mov	edx, 5
0x54ac:	call	0x1800


0x54b1:	mov	rsi, rbp
0x54b4:	mov	rdi, rax
0x54b7:	call	0x1910


0x1910:	jmp	qword ptr [rip + 0x2085f2]




0x295d:	mov	rdi, qword ptr [rip + 0x20777c]
0x2964:	mov	rdx, rax
0x2967:	mov	rcx, rbx
0x296a:	mov	esi, 1
0x296f:	xor	eax, eax
0x2971:	call	0x1a70


0x2976:	mov	edi, ebp
0x2978:	call	0x1a50


0x1a50:	jmp	qword ptr [rip + 0x208552]




0x298b:	mov	rdx, rbx
0x298e:	mov	rsi, rax
0x2991:	mov	edi, 1
0x2996:	xor	eax, eax
0x2998:	call	0x19f0


0x299d:	mov	rbx, qword ptr [rip + 0x207704]
0x29a4:	lea	rsi, [rip + 0x3fbd]
0x29ab:	mov	edx, 5
0x29b0:	xor	edi, edi
0x29b2:	call	0x1800


0x29b7:	mov	rsi, rbx
0x29ba:	mov	rdi, rax
0x29bd:	call	0x1910


0x2f33:	mov	rbx, rax
0x2f36:	mov	rsi, rbp
0x2f39:	mov	edi, 1
0x2f3e:	call	0x53f0


0x2f7e:	mov	rbx, rax
0x2f81:	jmp	0x2f36


0x2f36:	mov	rsi, rbp
0x2f39:	mov	edi, 1
0x2f3e:	call	0x53f0


0x2fc1:	mov	rdi, rax
0x2fc4:	mov	rsi, rbx
0x2fc7:	call	0x1910


0x59e4:	lea	rdx, [rip + 0x1dcc]
0x59eb:	mov	rsi, rax
0x59ee:	mov	edi, 1
0x59f3:	xor	eax, eax
0x59f5:	call	0x19f0


0x59fa:	lea	rsi, [rip + 0x1dcc]
0x5a01:	mov	edx, 5
0x5a06:	xor	edi, edi
0x5a08:	call	0x1800


0x5a0d:	lea	rcx, [rip + 0x15a4]
0x5a14:	lea	rdx, [rip + 0xdb1]
0x5a1b:	mov	rsi, rax
0x5a1e:	mov	edi, 1
0x5a23:	xor	eax, eax
0x5a25:	call	0x19f0


0x5a2a:	mov	rbx, qword ptr [rip + 0x204677]
0x5a31:	lea	rsi, [rip + 0x1fc8]
0x5a38:	xor	edi, edi
0x5a3a:	mov	edx, 5
0x5a3f:	call	0x1800


0x5a44:	mov	rsi, rbx
0x5a47:	mov	rdi, rax
0x5a4a:	pop	rbx
0x5a4b:	jmp	0x1910


0x5cb7:	mov	edi, dword ptr [rip + 0x204363]
0x5cbd:	lea	rdx, [rip + 0x1534]
0x5cc4:	mov	rcx, rax
0x5cc7:	xor	esi, esi
0x5cc9:	xor	eax, eax
0x5ccb:	call	0x1a00


0x1a00:	jmp	qword ptr [rip + 0x20857a]




0x5d0a:	mov	esi, r14d
0x5d0d:	mov	rdx, rax
0x5d10:	xor	edi, edi
0x5d12:	xor	eax, eax
0x5d14:	call	0x1a00


0x6353:	mov	edx, r12d
0x6356:	mov	rsi, rbp
0x6359:	mov	edi, eax
0x635b:	call	0x18a0


0x18a0:	jmp	qword ptr [rip + 0x20862a]




0x325d:	mov	ecx, ebx
0x325f:	xor	edx, edx
0x3261:	xor	esi, esi
0x3263:	pop	rbx
0x3264:	mov	edi, eax
0x3266:	jmp	0x18f0


0x32f1:	mov	ebx, eax
0x32f3:	call	0x1790


0x626c:	test	eax, eax
0x626e:	mov	rdi, rbx
0x6271:	js	0x62c7


0x62c7:	pop	rbx
0x62c8:	pop	rbp
0x62c9:	pop	r12
0x62cb:	jmp	0x17e0


0x6273:	call	0x19b0


0x17e0:	jmp	qword ptr [rip + 0x20868a]




0x6278:	test	eax, eax
0x627a:	jne	0x62a8


0x627c:	mov	rdi, rbx
0x627f:	call	0x62e0


0x62a8:	mov	rdi, rbx
0x62ab:	call	0x1960


0x62b0:	xor	esi, esi
0x62b2:	mov	edx, 1
0x62b7:	mov	edi, eax
0x62b9:	call	0x18a0


0x63b7:	cmp	rax, -3
0x63bb:	mov	rbp, rax
0x63be:	jbe	0x63e0


0x63e0:	mov	rdx, qword ptr [rsp + 8]
0x63e5:	xor	rdx, qword ptr fs:[0x28]
0x63ee:	mov	rax, rbp
0x63f1:	jne	0x63fe


0x63c0:	test	r12, r12
0x63c3:	je	0x63e0


0x63f3:	add	rsp, 0x18
0x63f7:	pop	rbx
0x63f8:	pop	rbp
0x63f9:	pop	r12
0x63fb:	pop	r13
0x63fd:	ret	


0x63fe:	call	0x1830


0x63c5:	xor	edi, edi
0x63c7:	call	0x3480


0x63cc:	test	al, al
0x63ce:	jne	0x63e0


0x63d0:	movzx	eax, byte ptr [r13]
0x63d5:	mov	ebp, 1
0x63da:	mov	dword ptr [rbx], eax
0x63dc:	nop	dword ptr [rax]
0x63e0:	mov	rdx, qword ptr [rsp + 8]
0x63e5:	xor	rdx, qword ptr fs:[0x28]
0x63ee:	mov	rax, rbp
0x63f1:	jne	0x63fe


0x641c:	mov	ebx, dword ptr [rbp]
0x641f:	mov	rdi, rbp
0x6422:	mov	r12, rax
0x6425:	call	0x6260


0x649e:	test	rax, rax
0x64a1:	je	0x64c0


0x64c0:	lea	rax, [rip + 0x179a]
0x64c7:	add	rsp, 8
0x64cb:	ret	


0x64a3:	cmp	byte ptr [rax], 0
0x64a6:	lea	rdx, [rip + 0x17b4]
0x64ad:	cmove	rax, rdx
0x64b1:	add	rsp, 8
0x64b5:	ret	


0x37b0:	movzx	edx, byte ptr [rax]
0x37b3:	and	edx, 0xffffffdf
0x37b6:	cmp	dl, 0x55
0x37b9:	je	0x3830


0x3830:	movzx	edx, byte ptr [rax + 1]
0x3834:	and	edx, 0xffffffdf
0x3837:	cmp	dl, 0x54
0x383a:	jne	0x37c0


0x37bb:	cmp	dl, 0x47
0x37be:	je	0x37e0


0x383c:	movzx	edx, byte ptr [rax + 2]
0x3840:	and	edx, 0xffffffdf
0x3843:	cmp	dl, 0x46
0x3846:	jne	0x37c0


0x37c0:	lea	rax, [rip + 0x3abc]
0x37c7:	lea	rdx, [rip + 0x3ab7]
0x37ce:	cmp	ebx, 9
0x37d1:	cmovne	rax, rdx
0x37d5:	add	rsp, 8
0x37d9:	pop	rbx
0x37da:	pop	rbp
0x37db:	ret	


0x37e0:	movzx	edx, byte ptr [rax + 1]
0x37e4:	and	edx, 0xffffffdf
0x37e7:	cmp	dl, 0x42
0x37ea:	jne	0x37c0


0x384c:	cmp	byte ptr [rax + 3], 0x2d
0x3850:	jne	0x37c0


0x37ec:	cmp	byte ptr [rax + 2], 0x31
0x37f0:	jne	0x37c0


0x3856:	cmp	byte ptr [rax + 4], 0x38
0x385a:	jne	0x37c0


0x37f2:	cmp	byte ptr [rax + 3], 0x38
0x37f6:	jne	0x37c0


0x3860:	cmp	byte ptr [rax + 5], 0
0x3864:	jne	0x37c0


0x37f8:	cmp	byte ptr [rax + 4], 0x30
0x37fc:	jne	0x37c0


0x386a:	cmp	byte ptr [rbp], 0x60
0x386e:	lea	rax, [rip + 0x39ff]
0x3875:	lea	rdx, [rip + 0x39fc]
0x387c:	cmovne	rax, rdx
0x3880:	add	rsp, 8
0x3884:	pop	rbx
0x3885:	pop	rbp
0x3886:	ret	


0x37fe:	cmp	byte ptr [rax + 5], 0x33
0x3802:	jne	0x37c0


0x3804:	cmp	byte ptr [rax + 6], 0x30
0x3808:	jne	0x37c0


0x380a:	cmp	byte ptr [rax + 7], 0
0x380e:	jne	0x37c0


0x3810:	cmp	byte ptr [rbp], 0x60
0x3814:	lea	rax, [rip + 0x3a61]
0x381b:	lea	rdx, [rip + 0x3a5e]
0x3822:	cmovne	rax, rdx
0x3826:	add	rsp, 8
0x382a:	pop	rbx
0x382b:	pop	rbp
0x382c:	ret	


0x32f8:	cmp	ebx, 1
0x32fb:	mov	r14, rax
0x32fe:	je	0x3460


0x3460:	xor	ebx, ebx
0x3462:	xor	ebp, ebp
0x3464:	jmp	0x3340


0x3304:	cmp	ebx, 2
0x3307:	je	0x3450


0x3340:	xor	esi, esi
0x3342:	xor	edi, edi
0x3344:	call	0x1860


0x3450:	xor	ebx, ebx
0x3452:	jmp	0x332a


0x330d:	test	ebx, ebx
0x330f:	je	0x33c8


0x1860:	jmp	qword ptr [rip + 0x20864a]


0x332a:	mov	esi, 1
0x332f:	mov	edi, 1
0x3334:	call	0x1860


0x33c8:	xor	ebx, ebx
0x33ca:	xor	ebp, ebp
0x33cc:	xor	r13d, r13d
0x33cf:	jmp	0x3380


0x3315:	mov	esi, 2
0x331a:	mov	edi, 2
0x331f:	call	0x1860




0x3380:	mov	rdi, qword ptr [rsp + 8]
0x3385:	mov	rdx, r12
0x3388:	mov	rsi, r15
0x338b:	call	0x18d0


0x18d0:	jmp	qword ptr [rip + 0x208612]




0x668d:	mov	dword ptr [rax], 0
0x6693:	add	rsp, 0x10
0x6697:	xor	eax, eax
0x6699:	pop	rbx
0x669a:	pop	rbp
0x669b:	pop	r12
0x669d:	ret	


0x5e09:	mov	r13d, eax
0x5e0c:	call	0x1790


0x5e11:	mov	edi, dword ptr [rax]
0x5e13:	test	edi, edi
0x5e15:	je	0x5e2a


0x5e2a:	pop	rbx
0x5e2b:	mov	eax, r13d
0x5e2e:	pop	rbp
0x5e2f:	pop	r12
0x5e31:	pop	r13
0x5e33:	pop	r14
0x5e35:	ret	


0x5e17:	lea	rdx, [rbx - 1]
0x5e1b:	lea	r8, [r14 - 1]
0x5e1f:	mov	rcx, r12
0x5e22:	mov	rsi, rbp
0x5e25:	call	0x5ce0


0x662d:	mov	edx, dword ptr [rsp + 8]
0x6631:	mov	dword ptr [rax], 0
0x6637:	jmp	0x6611


0x6611:	add	rsp, 0x18
0x6615:	mov	eax, edx
0x6617:	pop	rbx
0x6618:	pop	rbp
0x6619:	pop	r12
0x661b:	pop	r13
0x661d:	pop	r14
0x661f:	pop	r15
0x6621:	ret	


0x5db9:	mov	r14d, eax
0x5dbc:	call	0x1790


0x5dc1:	mov	edi, dword ptr [rax]
0x5dc3:	test	edi, edi
0x5dc5:	je	0x5dd8


0x5dd8:	pop	rbx
0x5dd9:	mov	eax, r14d
0x5ddc:	pop	rbp
0x5ddd:	pop	r12
0x5ddf:	pop	r13
0x5de1:	pop	r14
0x5de3:	ret	


0x5dc7:	mov	r8, r13
0x5dca:	mov	rcx, r12
0x5dcd:	mov	rdx, rbp
0x5dd0:	mov	rsi, rbx
0x5dd3:	call	0x5ce0


0x271b:	test	eax, eax
0x271d:	setne	al
0x2720:	add	rsp, 8
0x2724:	ret	


0x5e88:	mov	dword ptr [rax], 0
0x5e8e:	mov	r12, rax
0x5e91:	movzx	ebx, byte ptr [rbp]
0x5e95:	call	0x1aa0


0x5e9a:	mov	edx, dword ptr [rsp + 8]
0x5e9e:	mov	rsi, qword ptr [rax]
0x5ea1:	mov	rax, rbp
0x5ea4:	jmp	0x5eb7


0x5eb7:	movzx	ecx, bl
0x5eba:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x5ebf:	jne	0x5eb0


0x5ec1:	cmp	bl, 0x2d
0x5ec4:	je	0x5f18


0x5eb0:	add	rax, 1
0x5eb4:	movzx	ebx, byte ptr [rax]
0x5eb7:	movzx	ecx, bl
0x5eba:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x5ebf:	jne	0x5eb0


0x5f18:	mov	ebp, 4
0x5f1d:	mov	rdi, qword ptr [rsp + 0x18]
0x5f22:	xor	rdi, qword ptr fs:[0x28]
0x5f2b:	mov	eax, ebp
0x5f2d:	jne	0x61c0


0x5ec6:	mov	rsi, r15
0x5ec9:	mov	rdi, rbp
0x5ecc:	call	0x1a30


0x5f33:	add	rsp, 0x28
0x5f37:	pop	rbx
0x5f38:	pop	rbp
0x5f39:	pop	r12
0x5f3b:	pop	r13
0x5f3d:	pop	r14
0x5f3f:	pop	r15
0x5f41:	ret	


0x61c0:	call	0x1830


0x1a30:	jmp	qword ptr [rip + 0x208562]




0x2762:	cmp	eax, 1
0x2765:	ja	0x2782


0x2767:	mov	rdx, qword ptr [rsp + 8]
0x276c:	xor	rdx, qword ptr fs:[0x28]
0x2775:	mov	rax, qword ptr [rsp]
0x2779:	jne	0x27ac


0x2782:	mov	edx, 5
0x2787:	mov	rsi, rbp
0x278a:	xor	edi, edi
0x278c:	call	0x1800


0x277b:	add	rsp, 0x18
0x277f:	pop	rbx
0x2780:	pop	rbp
0x2781:	ret	


0x27ac:	call	0x1830


0x2791:	lea	rdx, [rip + 0x3fac]
0x2798:	mov	r8, rax
0x279b:	mov	rcx, rbx
0x279e:	xor	esi, esi
0x27a0:	mov	edi, 1
0x27a5:	xor	eax, eax
0x27a7:	call	0x1a00


0x4af1:	mov	r13, rax
0x4af4:	mov	eax, dword ptr [rax]
0x4af6:	test	r15d, r15d
0x4af9:	mov	rbx, qword ptr [rip + 0x205580]
0x4b00:	mov	dword ptr [rsp + 0x18], eax
0x4b04:	js	0x4c71


0x4c71:	call	0x1780


0x4b0a:	cmp	dword ptr [rip + 0x205567], r15d
0x4b11:	jg	0x4b75


0x4b13:	cmp	r15d, 0x7fffffff
0x4b1a:	je	0x4c76


0x4b75:	mov	eax, dword ptr [rbp + 4]
0x4b78:	shl	r15, 4
0x4b7c:	sub	rsp, 8
0x4b80:	add	rbx, r15
0x4b83:	lea	r15, [rbp + 8]
0x4b87:	mov	r8d, dword ptr [rbp]
0x4b8b:	mov	r11, qword ptr [rbx]
0x4b8e:	mov	r12, qword ptr [rbx + 8]
0x4b92:	mov	rcx, r14
0x4b95:	or	eax, 1
0x4b98:	mov	dword ptr [rsp + 0x24], eax
0x4b9c:	push	qword ptr [rbp + 0x30]
0x4b9f:	mov	r9d, eax
0x4ba2:	push	qword ptr [rbp + 0x28]
0x4ba5:	push	r15
0x4ba7:	mov	rsi, r11
0x4baa:	mov	rdx, qword ptr [rsp + 0x28]
0x4baf:	mov	rdi, r12
0x4bb2:	mov	qword ptr [rsp + 0x30], r11
0x4bb7:	call	0x3890


0x4c76:	call	0x5ca0


0x4b20:	lea	r12d, [r15 + 1]
0x4b24:	lea	rax, [rip + 0x205565]
0x4b2b:	movsxd	rsi, r12d
0x4b2e:	shl	rsi, 4
0x4b32:	cmp	rbx, rax
0x4b35:	je	0x4c50


0x4c50:	xor	edi, edi
0x4c52:	call	0x5ab0


0x4b3b:	mov	rdi, rbx
0x4b3e:	call	0x5ab0


0x4b43:	mov	rbx, rax
0x4b46:	mov	qword ptr [rip + 0x205533], rax
0x4b4d:	movsxd	rdi, dword ptr [rip + 0x205524]
0x4b54:	mov	edx, r12d
0x4b57:	xor	esi, esi
0x4b59:	sub	edx, edi
0x4b5b:	shl	rdi, 4
0x4b5f:	movsxd	rdx, edx
0x4b62:	add	rdi, rbx
0x4b65:	shl	rdx, 4
0x4b69:	call	0x18c0


0x4c57:	movdqa	xmm0, xmmword ptr [rip + 0x205431]
0x4c5f:	mov	rbx, rax
0x4c62:	mov	qword ptr [rip + 0x205417], rax
0x4c69:	movups	xmmword ptr [rax], xmm0
0x4c6c:	jmp	0x4b4d


0x4b4d:	movsxd	rdi, dword ptr [rip + 0x205524]
0x4b54:	mov	edx, r12d
0x4b57:	xor	esi, esi
0x4b59:	sub	edx, edi
0x4b5b:	shl	rdi, 4
0x4b5f:	movsxd	rdx, edx
0x4b62:	add	rdi, rbx
0x4b65:	shl	rdx, 4
0x4b69:	call	0x18c0


0x4c8c:	mov	r12d, dword ptr [rax]
0x4c8f:	mov	rbp, rax
0x4c92:	lea	rax, [rip + 0x2055a7]
0x4c99:	test	rbx, rbx
0x4c9c:	mov	esi, 0x38
0x4ca1:	cmove	rbx, rax
0x4ca5:	mov	rdi, rbx
0x4ca8:	call	0x5c50


0x4dc2:	mov	r12d, dword ptr [rax]
0x4dc5:	mov	rbp, rax
0x4dc8:	lea	rax, [rbx + 8]
0x4dcc:	sub	rsp, 8
0x4dd0:	mov	r9d, dword ptr [rbx + 4]
0x4dd4:	push	qword ptr [rbx + 0x30]
0x4dd7:	mov	r8d, dword ptr [rbx]
0x4dda:	push	qword ptr [rbx + 0x28]
0x4ddd:	mov	rdx, r15
0x4de0:	push	rax
0x4de1:	mov	rcx, qword ptr [rsp + 0x28]
0x4de6:	mov	rsi, r14
0x4de9:	mov	rdi, r13
0x4dec:	call	0x3890


0x4e3f:	test	r12, r12
0x4e42:	mov	r13, rax
0x4e45:	mov	eax, dword ptr [rax]
0x4e47:	sete	bpl
0x4e4b:	or	ebp, dword ptr [rbx + 4]
0x4e4e:	lea	r10, [rbx + 8]
0x4e52:	sub	rsp, 8
0x4e56:	mov	r8d, dword ptr [rbx]
0x4e59:	mov	rcx, r15
0x4e5c:	mov	dword ptr [rsp + 0x14], eax
0x4e60:	push	qword ptr [rbx + 0x30]
0x4e63:	mov	rdx, r14
0x4e66:	push	qword ptr [rbx + 0x28]
0x4e69:	push	r10
0x4e6b:	xor	esi, esi
0x4e6d:	mov	r9d, ebp
0x4e70:	xor	edi, edi
0x4e72:	mov	qword ptr [rsp + 0x40], r10
0x4e77:	call	0x3890


0x64ef:	mov	r15, rax
0x64f2:	jmp	0x6523


0x6523:	mov	dword ptr [r15], 0
0x652a:	mov	rsi, rbp
0x652d:	mov	rdi, r12
0x6530:	call	0x19a0


0x19a0:	jmp	qword ptr [rip + 0x2085aa]




0x6535:	test	eax, eax
0x6537:	je	0x64f8


0x64f8:	mov	rdi, r12
0x64fb:	call	0x1820


0x6539:	add	rsp, 8
0x653d:	pop	rbx
0x653e:	pop	rbp
0x653f:	pop	r12
0x6541:	pop	r13
0x6543:	pop	r14
0x6545:	pop	r15
0x6547:	ret	


0x6500:	mov	rdi, rbp
0x6503:	lea	rbx, [rax + 1]
0x6507:	call	0x1820


0x650c:	add	rax, 1
0x6510:	add	r12, rbx
0x6513:	add	rbp, rax
0x6516:	sub	r14, rax
0x6519:	sub	r13, rbx
0x651c:	je	0x6550


0x6550:	xor	eax, eax
0x6552:	test	r14, r14
0x6555:	setne	al
0x6558:	add	rsp, 8
0x655c:	pop	rbx
0x655d:	neg	eax
0x655f:	pop	rbp
0x6560:	pop	r12
0x6562:	pop	r13
0x6564:	pop	r14
0x6566:	pop	r15
0x6568:	ret	


0x651e:	test	r14, r14
0x6521:	je	0x6570


0x6570:	add	rsp, 8
0x6574:	mov	eax, 1
0x6579:	pop	rbx
0x657a:	pop	rbp
0x657b:	pop	r12
0x657d:	pop	r13
0x657f:	pop	r14
0x6581:	pop	r15
0x6583:	ret	


0x4cad:	mov	dword ptr [rbp], r12d
0x4cb1:	pop	rbx
0x4cb2:	pop	rbp
0x4cb3:	pop	r12
0x4cb5:	ret	


0x4b6e:	mov	dword ptr [rip + 0x205503], r12d
0x4b75:	mov	eax, dword ptr [rbp + 4]
0x4b78:	shl	r15, 4
0x4b7c:	sub	rsp, 8
0x4b80:	add	rbx, r15
0x4b83:	lea	r15, [rbp + 8]
0x4b87:	mov	r8d, dword ptr [rbp]
0x4b8b:	mov	r11, qword ptr [rbx]
0x4b8e:	mov	r12, qword ptr [rbx + 8]
0x4b92:	mov	rcx, r14
0x4b95:	or	eax, 1
0x4b98:	mov	dword ptr [rsp + 0x24], eax
0x4b9c:	push	qword ptr [rbp + 0x30]
0x4b9f:	mov	r9d, eax
0x4ba2:	push	qword ptr [rbp + 0x28]
0x4ba5:	push	r15
0x4ba7:	mov	rsi, r11
0x4baa:	mov	rdx, qword ptr [rsp + 0x28]
0x4baf:	mov	rdi, r12
0x4bb2:	mov	qword ptr [rsp + 0x30], r11
0x4bb7:	call	0x3890


0x5ed1:	mov	rcx, qword ptr [r15]
0x5ed4:	mov	rbx, rax
0x5ed7:	cmp	rcx, rbp
0x5eda:	je	0x5f08


0x5f08:	test	r13, r13
0x5f0b:	mov	qword ptr [rsp + 8], rcx
0x5f10:	jne	0x5f50


0x5edc:	mov	eax, dword ptr [r12]
0x5ee0:	test	eax, eax
0x5ee2:	je	0x5f48


0x5f50:	movzx	r12d, byte ptr [rbp]
0x5f55:	test	r12b, r12b
0x5f58:	je	0x5f18


0x5f48:	xor	ebp, ebp
0x5f4a:	jmp	0x5eee


0x5ee4:	cmp	eax, 0x22
0x5ee7:	mov	ebp, 1
0x5eec:	jne	0x5f18


0x5f5a:	movsx	esi, r12b
0x5f5e:	mov	rdi, r13
0x5f61:	xor	ebp, ebp
0x5f63:	call	0x1870


0x5eee:	test	r13, r13
0x5ef1:	je	0x5efc


0x1870:	jmp	qword ptr [rip + 0x208642]


0x5efc:	mov	qword ptr [r14], rbx
0x5eff:	jmp	0x5f1d


0x5ef3:	movzx	r12d, byte ptr [rcx]
0x5ef7:	test	r12b, r12b
0x5efa:	jne	0x5f77




0x5f1d:	mov	rdi, qword ptr [rsp + 0x18]
0x5f22:	xor	rdi, qword ptr fs:[0x28]
0x5f2b:	mov	eax, ebp
0x5f2d:	jne	0x61c0


0x5f77:	movsx	esi, r12b
0x5f7b:	mov	rdi, r13
0x5f7e:	mov	qword ptr [rsp + 8], rcx
0x5f83:	call	0x1870


0x3390:	mov	r12, rax
0x3393:	test	bl, bl
0x3395:	mov	r15d, dword ptr [r14]
0x3398:	jne	0x3440


0x339e:	test	bpl, bpl
0x33a1:	jne	0x3410


0x3440:	mov	edi, 2
0x3445:	call	0x18e0


0x33a3:	test	r13b, r13b
0x33a6:	jne	0x341f


0x3410:	mov	edi, 1
0x3415:	call	0x18e0


0x33a8:	test	r12, r12
0x33ab:	jne	0x33b0


0x341f:	xor	edi, edi
0x3421:	call	0x18e0


0x33ad:	mov	dword ptr [r14], r15d
0x33b0:	add	rsp, 0x18
0x33b4:	mov	rax, r12
0x33b7:	pop	rbx
0x33b8:	pop	rbp
0x33b9:	pop	r12
0x33bb:	pop	r13
0x33bd:	pop	r14
0x33bf:	pop	r15
0x33c1:	ret	


0x33b0:	add	rsp, 0x18
0x33b4:	mov	rax, r12
0x33b7:	pop	rbx
0x33b8:	pop	rbp
0x33b9:	pop	r12
0x33bb:	pop	r13
0x33bd:	pop	r14
0x33bf:	pop	r15
0x33c1:	ret	


0x3324:	cmp	eax, 2
0x3327:	setne	bl
0x332a:	mov	esi, 1
0x332f:	mov	edi, 1
0x3334:	call	0x1860


0x3339:	cmp	eax, 1
0x333c:	setne	bpl
0x3340:	xor	esi, esi
0x3342:	xor	edi, edi
0x3344:	call	0x1860


0x3349:	test	eax, eax
0x334b:	je	0x33d8


0x33d8:	xor	r13d, r13d
0x33db:	test	bpl, bpl
0x33de:	je	0x3368


0x3351:	xor	edi, edi
0x3353:	call	0x3280


0x3368:	test	bl, bl
0x336a:	je	0x3380


0x33e0:	mov	edi, 1
0x33e5:	call	0x3280


0x336c:	mov	edi, 2
0x3371:	call	0x3280


0x3376:	test	al, al
0x3378:	mov	ebx, eax
0x337a:	je	0x3430


0x3430:	mov	r15d, dword ptr [r14]
0x3433:	xor	r12d, r12d
0x3436:	nop	word ptr cs:[rax + rax]
0x3440:	mov	edi, 2
0x3445:	call	0x18e0


0x33ea:	test	al, al
0x33ec:	mov	ebp, eax
0x33ee:	jne	0x3368


0x33f4:	xor	r12d, r12d
0x33f7:	test	bl, bl
0x33f9:	mov	r15d, dword ptr [r14]
0x33fc:	je	0x3410


0x33fe:	mov	edi, 2
0x3403:	call	0x18e0


0x3358:	test	al, al
0x335a:	mov	r13d, eax
0x335d:	je	0x3470


0x3470:	mov	r13d, 1
0x3476:	xor	r12d, r12d
0x3479:	jmp	0x3393


0x3363:	test	bpl, bpl
0x3366:	jne	0x33e0


0x3393:	test	bl, bl
0x3395:	mov	r15d, dword ptr [r14]
0x3398:	jne	0x3440


0x62be:	cmp	rax, -1
0x62c2:	jne	0x627c


0x62c4:	mov	rdi, rbx
0x62c7:	pop	rbx
0x62c8:	pop	rbp
0x62c9:	pop	r12
0x62cb:	jmp	0x17e0


0x6360:	cmp	rax, -1
0x6364:	je	0x6372


0x6372:	pop	rbx
0x6373:	pop	rbp
0x6374:	pop	r12
0x6376:	ret	


0x6366:	and	dword ptr [rbx], 0xffffffef
0x6369:	mov	qword ptr [rbx + 0x90], rax
0x6370:	xor	eax, eax
0x6372:	pop	rbx
0x6373:	pop	rbp
0x6374:	pop	r12
0x6376:	ret	


0x5d19:	lea	rsi, [rip + 0x1dc0]
0x5d20:	mov	edx, 5
0x5d25:	xor	edi, edi
0x5d27:	call	0x1800


0x5d2c:	xor	esi, esi
0x5d2e:	mov	rdx, rax
0x5d31:	xor	edi, edi
0x5d33:	xor	eax, eax
0x5d35:	call	0x1a00


0x5d3a:	mov	rcx, r13
0x5d3d:	mov	rdx, rbp
0x5d40:	mov	esi, 8
0x5d45:	mov	edi, 1
0x5d4a:	call	0x50b0


0x5cd0:	call	0x1780


0x2fcc:	mov	r15, qword ptr [r14]
0x2fcf:	test	r15, r15
0x2fd2:	je	0x3068


0x3068:	mov	rdi, qword ptr [rip + 0x207071]
0x306f:	mov	rax, qword ptr [rdi + 0x28]
0x3073:	cmp	rax, qword ptr [rdi + 0x30]
0x3077:	jae	0x3098


0x2fd8:	xor	r13d, r13d
0x2fdb:	xor	ebx, ebx
0x2fdd:	jmp	0x3018


0x3079:	lea	rdx, [rax + 1]
0x307d:	mov	qword ptr [rdi + 0x28], rdx
0x3081:	mov	byte ptr [rax], 0xa
0x3084:	add	rsp, 8
0x3088:	pop	rbx
0x3089:	pop	rbp
0x308a:	pop	r12
0x308c:	pop	r13
0x308e:	pop	r14
0x3090:	pop	r15
0x3092:	ret	


0x3098:	add	rsp, 8
0x309c:	mov	esi, 0xa
0x30a1:	pop	rbx
0x30a2:	pop	rbp
0x30a3:	pop	r12
0x30a5:	pop	r13
0x30a7:	pop	r14
0x30a9:	pop	r15
0x30ab:	jmp	0x1880


0x3018:	test	rbx, rbx
0x301b:	je	0x2fe0


0x1880:	jmp	qword ptr [rip + 0x20863a]


0x2fe0:	mov	rdi, r15
0x2fe3:	add	rbx, 1
0x2fe7:	mov	r13, rbp
0x2fea:	call	0x5410


0x301d:	mov	rdx, r12
0x3020:	mov	rsi, rbp
0x3023:	mov	rdi, r13
0x3026:	call	0x1900




0x302b:	test	eax, eax
0x302d:	jne	0x2fe0


0x302f:	mov	rdi, r15
0x3032:	add	rbx, 1
0x3036:	add	rbp, r12
0x3039:	call	0x5410


0x29c2:	mov	rbx, qword ptr [rip + 0x2076df]
0x29c9:	lea	rsi, [rip + 0x4048]
0x29d0:	mov	edx, 5
0x29d5:	xor	edi, edi
0x29d7:	call	0x1800


0x29dc:	mov	rsi, rbx
0x29df:	mov	rdi, rax
0x29e2:	call	0x1910


0x29e7:	mov	rbx, qword ptr [rip + 0x2076ba]
0x29ee:	lea	rsi, [rip + 0x4073]
0x29f5:	mov	edx, 5
0x29fa:	xor	edi, edi
0x29fc:	call	0x1800


0x2a01:	mov	rsi, rbx
0x2a04:	mov	rdi, rax
0x2a07:	call	0x1910


0x2a0c:	mov	rbx, qword ptr [rip + 0x207695]
0x2a13:	lea	rsi, [rip + 0x40de]
0x2a1a:	mov	edx, 5
0x2a1f:	xor	edi, edi
0x2a21:	call	0x1800


0x2a26:	mov	rsi, rbx
0x2a29:	mov	rdi, rax
0x2a2c:	call	0x1910


0x2a31:	mov	rbx, qword ptr [rip + 0x207670]
0x2a38:	lea	rsi, [rip + 0x41b1]
0x2a3f:	mov	edx, 5
0x2a44:	xor	edi, edi
0x2a46:	call	0x1800


0x2a4b:	mov	rsi, rbx
0x2a4e:	mov	rdi, rax
0x2a51:	call	0x1910


0x2a56:	mov	rbx, qword ptr [rip + 0x20764b]
0x2a5d:	lea	rsi, [rip + 0x41cc]
0x2a64:	mov	edx, 5
0x2a69:	xor	edi, edi
0x2a6b:	call	0x1800


0x2a70:	mov	rsi, rbx
0x2a73:	mov	rdi, rax
0x2a76:	call	0x1910


0x2a7b:	mov	rbx, qword ptr [rip + 0x207626]
0x2a82:	lea	rsi, [rip + 0x423f]
0x2a89:	mov	edx, 5
0x2a8e:	xor	edi, edi
0x2a90:	call	0x1800


0x2a95:	mov	rsi, rbx
0x2a98:	mov	rdi, rax
0x2a9b:	call	0x1910


0x2aa0:	mov	rbx, qword ptr [rip + 0x207601]
0x2aa7:	lea	rsi, [rip + 0x42d2]
0x2aae:	mov	edx, 5
0x2ab3:	xor	edi, edi
0x2ab5:	call	0x1800


0x2aba:	mov	rsi, rbx
0x2abd:	mov	rdi, rax
0x2ac0:	call	0x1910


0x2ac5:	mov	rbx, qword ptr [rip + 0x2075dc]
0x2acc:	lea	rsi, [rip + 0x42ed]
0x2ad3:	mov	edx, 5
0x2ad8:	xor	edi, edi
0x2ada:	call	0x1800


0x2adf:	mov	rsi, rbx
0x2ae2:	mov	rdi, rax
0x2ae5:	call	0x1910


0x2aea:	mov	rbx, qword ptr [rip + 0x2075b7]
0x2af1:	lea	rsi, [rip + 0x4310]
0x2af8:	mov	edx, 5
0x2afd:	xor	edi, edi
0x2aff:	call	0x1800


0x2b04:	mov	rsi, rbx
0x2b07:	mov	rdi, rax
0x2b0a:	call	0x1910


0x2b0f:	mov	rbx, qword ptr [rip + 0x207592]
0x2b16:	lea	rsi, [rip + 0x431b]
0x2b1d:	mov	edx, 5
0x2b22:	xor	edi, edi
0x2b24:	call	0x1800


0x2b29:	mov	rsi, rbx
0x2b2c:	mov	rdi, rax
0x2b2f:	call	0x1910


0x2b34:	mov	rbx, qword ptr [rip + 0x20756d]
0x2b3b:	lea	rsi, [rip + 0x432e]
0x2b42:	mov	edx, 5
0x2b47:	xor	edi, edi
0x2b49:	call	0x1800


0x2b4e:	mov	rsi, rbx
0x2b51:	mov	rdi, rax
0x2b54:	call	0x1910


0x2b59:	mov	rbx, qword ptr [rip + 0x207548]
0x2b60:	lea	rsi, [rip + 0x4381]
0x2b67:	mov	edx, 5
0x2b6c:	xor	edi, edi
0x2b6e:	call	0x1800


0x2b73:	mov	rsi, rbx
0x2b76:	mov	rdi, rax
0x2b79:	lea	rbx, [rip + 0x3bd1]
0x2b80:	call	0x1910


0x2b85:	lea	rax, [rip + 0x3bca]
0x2b8c:	lea	rcx, [rip + 0x3c04]
0x2b93:	mov	qword ptr [rsp + 0x60], 0
0x2b9c:	mov	qword ptr [rsp + 0x68], 0
0x2ba5:	mov	rdx, rsp
0x2ba8:	mov	qword ptr [rsp], rax
0x2bac:	lea	rax, [rip + 0x3ba5]
0x2bb3:	mov	qword ptr [rsp + 0x30], rcx
0x2bb8:	lea	rcx, [rip + 0x3be2]
0x2bbf:	mov	qword ptr [rsp + 8], rax
0x2bc4:	lea	rax, [rip + 0x3c05]
0x2bcb:	mov	qword ptr [rsp + 0x40], rcx
0x2bd0:	lea	rcx, [rip + 0x3bd4]
0x2bd7:	mov	qword ptr [rsp + 0x10], rax
0x2bdc:	lea	rax, [rip + 0x3b85]
0x2be3:	mov	qword ptr [rsp + 0x50], rcx
0x2be8:	mov	qword ptr [rsp + 0x18], rax
0x2bed:	lea	rax, [rip + 0x3b8a]
0x2bf4:	mov	qword ptr [rsp + 0x20], rax
0x2bf9:	lea	rax, [rip + 0x3b88]
0x2c00:	mov	qword ptr [rsp + 0x28], rax
0x2c05:	mov	qword ptr [rsp + 0x38], rax
0x2c0a:	mov	qword ptr [rsp + 0x48], rax
0x2c0f:	mov	qword ptr [rsp + 0x58], rax
0x2c14:	nop	dword ptr [rax]
0x2c18:	add	rdx, 0x10
0x2c1c:	mov	rdi, qword ptr [rdx]
0x2c1f:	test	rdi, rdi
0x2c22:	je	0x2c37


0x2c37:	mov	r12, qword ptr [rdx + 8]
0x2c3b:	xor	edi, edi
0x2c3d:	mov	edx, 5
0x2c42:	lea	rsi, [rip + 0x3b6c]
0x2c49:	test	r12, r12
0x2c4c:	je	0x2d13


0x2c24:	mov	ecx, 5
0x2c29:	mov	rsi, rbx
0x2c2c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2d13:	call	0x1800


0x2c52:	call	0x1800


0x2c2c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2c2e:	seta	al
0x2c31:	sbb	al, 0
0x2c33:	test	al, al
0x2c35:	jne	0x2c18


0x2c18:	add	rdx, 0x10
0x2c1c:	mov	rdi, qword ptr [rdx]
0x2c1f:	test	rdi, rdi
0x2c22:	je	0x2c37


0x2c57:	lea	rcx, [rip + 0x435a]
0x2c5e:	lea	rdx, [rip + 0x3b67]
0x2c65:	mov	rsi, rax
0x2c68:	mov	edi, 1
0x2c6d:	xor	eax, eax
0x2c6f:	call	0x19f0


0x2c74:	xor	esi, esi
0x2c76:	mov	edi, 5
0x2c7b:	call	0x19e0


0x2c80:	test	rax, rax
0x2c83:	je	0x2ca1


0x2ca1:	lea	rsi, [rip + 0x3b36]
0x2ca8:	xor	edi, edi
0x2caa:	mov	edx, 5
0x2caf:	call	0x1800


0x2c85:	lea	rsi, [rip + 0x3b4e]
0x2c8c:	mov	edx, 3
0x2c91:	mov	rdi, rax
0x2c94:	call	0x17a0


0x2cb4:	lea	rcx, [rip + 0x3a96]
0x2cbb:	lea	rdx, [rip + 0x42f6]
0x2cc2:	mov	rsi, rax
0x2cc5:	mov	edi, 1
0x2cca:	xor	eax, eax
0x2ccc:	call	0x19f0


0x2cd1:	cmp	r12, rbx
0x2cd4:	lea	rcx, [rip + 0x3a97]
0x2cdb:	lea	rbx, [rip + 0x4abf]
0x2ce2:	cmove	rbx, rcx
0x2ce6:	lea	rsi, [rip + 0x433b]
0x2ced:	xor	edi, edi
0x2cef:	mov	edx, 5
0x2cf4:	call	0x1800


0x2cf9:	mov	rcx, rbx
0x2cfc:	mov	rsi, rax
0x2cff:	mov	rdx, r12
0x2d02:	mov	edi, 1
0x2d07:	xor	eax, eax
0x2d09:	call	0x19f0


0x2d0e:	jmp	0x2976


0x2d18:	lea	rcx, [rip + 0x4299]
0x2d1f:	lea	rdx, [rip + 0x3aa6]
0x2d26:	mov	rsi, rax
0x2d29:	mov	edi, 1
0x2d2e:	xor	eax, eax
0x2d30:	call	0x19f0


0x2d35:	xor	esi, esi
0x2d37:	mov	edi, 5
0x2d3c:	call	0x19e0


0x2d41:	test	rax, rax
0x2d44:	je	0x2d5e


0x2d5e:	lea	rsi, [rip + 0x3a79]
0x2d65:	mov	edx, 5
0x2d6a:	xor	edi, edi
0x2d6c:	lea	r12, [rip + 0x39de]
0x2d73:	lea	rbx, [rip + 0x39f8]
0x2d7a:	call	0x1800


0x2d46:	lea	rsi, [rip + 0x3a8d]
0x2d4d:	mov	edx, 3
0x2d52:	mov	rdi, rax
0x2d55:	call	0x17a0


0x2d7f:	lea	rcx, [rip + 0x39cb]
0x2d86:	lea	rdx, [rip + 0x422b]
0x2d8d:	mov	rsi, rax
0x2d90:	mov	edi, 1
0x2d95:	xor	eax, eax
0x2d97:	call	0x19f0


0x2d9c:	jmp	0x2ce6


0x2ce6:	lea	rsi, [rip + 0x433b]
0x2ced:	xor	edi, edi
0x2cef:	mov	edx, 5
0x2cf4:	call	0x1800


0x54bc:	cmp	r12, 9
0x54c0:	ja	0x5800


0x54c6:	lea	rdx, [rip + 0x2577]
0x54cd:	movsxd	rax, dword ptr [rdx + r12*4]
0x54d1:	add	rax, rdx
0x54d4:	jmp	rax


0x5800:	mov	r10, qword ptr [rbx + 0x40]
0x5804:	mov	r9, qword ptr [rbx + 0x38]
0x5808:	mov	edx, 5
0x580d:	mov	rax, qword ptr [rbx + 0x10]
0x5811:	mov	r8, qword ptr [rbx + 8]
0x5815:	lea	rsi, [rip + 0x21a4]
0x581c:	mov	r13, qword ptr [rbx + 0x30]
0x5820:	mov	r12, qword ptr [rbx + 0x28]
0x5824:	mov	r15, qword ptr [rbx + 0x20]
0x5828:	mov	r14, qword ptr [rbx + 0x18]
0x582c:	mov	qword ptr [rsp + 0x18], r10
0x5831:	mov	qword ptr [rsp + 0x10], r9
0x5836:	mov	qword ptr [rsp], rax
0x583a:	mov	qword ptr [rsp + 8], r8
0x583f:	mov	rbx, qword ptr [rbx]
0x5842:	jmp	0x55d2


0x55d2:	xor	edi, edi
0x55d4:	call	0x1800


0x55d9:	mov	r10, qword ptr [rsp + 0x18]
0x55de:	push	r10
0x55e0:	jmp	0x5524


0x5524:	mov	r9, qword ptr [rsp + 0x18]
0x5529:	mov	rdx, rax
0x552c:	mov	rcx, rbx
0x552f:	mov	esi, 1
0x5534:	mov	rdi, rbp
0x5537:	xor	eax, eax
0x5539:	push	r9
0x553b:	push	r13
0x553d:	push	r12
0x553f:	push	r15
0x5541:	push	r14
0x5543:	mov	r9, qword ptr [rsp + 0x30]
0x5548:	mov	r8, qword ptr [rsp + 0x38]
0x554d:	call	0x1a70


0x5552:	add	rsp, 0x30
0x5556:	add	rsp, 0x28
0x555a:	pop	rbx
0x555b:	pop	rbp
0x555c:	pop	r12
0x555e:	pop	r13
0x5560:	pop	r14
0x5562:	pop	r15
0x5564:	ret	


0x2d5a:	test	eax, eax
0x2d5c:	jne	0x2da1


0x2da1:	lea	r12, [rip + 0x39a9]
0x2da8:	mov	r13, qword ptr [rip + 0x2072f9]
0x2daf:	lea	rsi, [rip + 0x422a]
0x2db6:	xor	edi, edi
0x2db8:	mov	edx, 5
0x2dbd:	call	0x1800


0x2dc2:	mov	rsi, r13
0x2dc5:	mov	rdi, rax
0x2dc8:	call	0x1910


0x2dcd:	jmp	0x2ca1


0x2c99:	test	eax, eax
0x2c9b:	jne	0x2da8


0x2da8:	mov	r13, qword ptr [rip + 0x2072f9]
0x2daf:	lea	rsi, [rip + 0x422a]
0x2db6:	xor	edi, edi
0x2db8:	mov	edx, 5
0x2dbd:	call	0x1800


0x2e97:	test	eax, eax
0x2e99:	jne	0x2e77


0x2e9b:	mov	rdi, r14
0x2e9e:	call	0x1820


0x2e77:	add	rbx, 1
0x2e7b:	add	rbp, r13
0x2e7e:	mov	r14, qword ptr [r15 + rbx*8]
0x2e82:	test	r14, r14
0x2e85:	je	0x2ec8


0x2ec8:	cmp	byte ptr [rsp + 0x17], 0
0x2ecd:	mov	rax, -2
0x2ed4:	cmove	rax, qword ptr [rsp]
0x2ed9:	mov	qword ptr [rsp], rax
0x2edd:	mov	rax, qword ptr [rsp]
0x2ee1:	add	rsp, 0x28
0x2ee5:	pop	rbx
0x2ee6:	pop	rbp
0x2ee7:	pop	r12
0x2ee9:	pop	r13
0x2eeb:	pop	r14
0x2eed:	pop	r15
0x2eef:	ret	


0x2ea3:	cmp	rax, r12
0x2ea6:	je	0x2f00


0x2f00:	mov	qword ptr [rsp], rbx
0x2f04:	jmp	0x2edd


0x2ea8:	cmp	qword ptr [rsp], -1
0x2ead:	jne	0x2e40


0x2eaf:	mov	qword ptr [rsp], rbx
0x2eb3:	add	rbx, 1
0x2eb7:	add	rbp, r13
0x2eba:	mov	r14, qword ptr [r15 + rbx*8]
0x2ebe:	test	r14, r14
0x2ec1:	jne	0x2e87


0x2e40:	mov	rax, qword ptr [rsp + 0x18]
0x2e45:	test	rax, rax
0x2e48:	je	0x2ef0


0x2ef0:	mov	byte ptr [rsp + 0x17], 1
0x2ef5:	jmp	0x2e77


0x2e4e:	mov	rdi, qword ptr [rsp]
0x2e52:	mov	rdx, r13
0x2e55:	mov	rsi, rbp
0x2e58:	imul	rdi, r13
0x2e5c:	add	rdi, rax
0x2e5f:	call	0x1900


0x2e64:	test	eax, eax
0x2e66:	movzx	eax, byte ptr [rsp + 0x17]
0x2e6b:	mov	ecx, 1
0x2e70:	cmovne	eax, ecx
0x2e73:	mov	byte ptr [rsp + 0x17], al
0x2e77:	add	rbx, 1
0x2e7b:	add	rbp, r13
0x2e7e:	mov	r14, qword ptr [r15 + rbx*8]
0x2e82:	test	r14, r14
0x2e85:	je	0x2ec8


0x36d0:	mov	rdx, qword ptr [rsp]
0x36d4:	cmp	byte ptr [rdx], 0
0x36d7:	jne	0x36a0


0x36d9:	cmp	rax, -0x80000000
0x36df:	jl	0x36f2


0x36f2:	mov	ebx, 0x80000000
0x36f7:	jmp	0x36a0


0x36e1:	cmp	rax, 0x7fffffff
0x36e7:	mov	ebx, 0x7fffffff
0x36ec:	cmovle	rbx, rax
0x36f0:	jmp	0x36a0


0x1b47:	lea	rdi, [rip + 0x4c82]
0x1b4e:	call	0x17d0


0x17d0:	jmp	qword ptr [rip + 0x208692]




0x341a:	test	r13b, r13b
0x341d:	je	0x33a8


0x344a:	jmp	0x339e


0x3426:	jmp	0x33a8


0x32ae:	call	0x1790


0x32b3:	mov	dword ptr [rax], 9
0x32b9:	add	rsp, 8
0x32bd:	mov	eax, ebx
0x32bf:	pop	rbx
0x32c0:	pop	rbp
0x32c1:	ret	


0x6317:	mov	rdi, rbx
0x631a:	pop	rbx
0x631b:	jmp	0x1980


0x5996:	mov	rax, qword ptr [rsp + 0x78]
0x599b:	xor	rax, qword ptr fs:[0x28]
0x59a4:	jne	0x59b0


0x59a6:	add	rsp, 0xb8
0x59ad:	pop	rbx
0x59ae:	pop	rbp
0x59af:	ret	


0x59b0:	call	0x1830


0x58c0:	mov	rax, qword ptr [rsp + 0x58]
0x58c5:	xor	rax, qword ptr fs:[0x28]
0x58ce:	jne	0x58d5


0x58d0:	add	rsp, 0x68
0x58d4:	ret	


0x58d5:	call	0x1830


0x65fb:	movzx	r9d, byte ptr [rsp + 0xf]
0x6601:	movzx	r8d, byte ptr [rsp + 8]
0x6607:	mov	edx, eax
0x6609:	mov	byte ptr [r13], r9b
0x660d:	mov	byte ptr [r12], r8b
0x6611:	add	rsp, 0x18
0x6615:	mov	eax, edx
0x6617:	pop	rbx
0x6618:	pop	rbp
0x6619:	pop	r12
0x661b:	pop	r13
0x661d:	pop	r14
0x661f:	pop	r15
0x6621:	ret	


0x1b53:	mov	edi, 3
0x1b58:	call	0x3480


0x1b5d:	lea	rdi, [rip + 0x162c]
0x1b64:	mov	byte ptr [rip + 0x2085ae], al
0x1b6a:	call	0x6720


0x1b6f:	lea	rcx, [rsp + 0x60]
0x1b74:	mov	rax, -1
0x1b7b:	mov	qword ptr [rip + 0x208582], 0
0x1b86:	mov	qword ptr [rip + 0x20857f], 0
0x1b91:	mov	qword ptr [rip + 0x208568], rax
0x1b98:	mov	byte ptr [rip + 0x20855b], 1
0x1b9f:	mov	byte ptr [rip + 0x208555], 1
0x1ba6:	mov	byte ptr [rip + 0x20854c], 0
0x1bad:	mov	dword ptr [rip + 0x208545], 1
0x1bb7:	mov	dword ptr [rip + 0x208533], 0
0x1bc1:	mov	byte ptr [rsp + 0x27], 0xa
0x1bc6:	mov	dword ptr [rsp + 8], 0
0x1bce:	mov	qword ptr [rsp + 0x18], rcx
0x1bd3:	mov	qword ptr [rsp + 0x10], rax
0x1bd8:	jmp	0x1c1a


0x1c1a:	cmp	ebp, -1
0x1c1d:	je	0x1be5


0x1be5:	mov	eax, dword ptr [rip + 0x2084cd]
0x1beb:	cmp	eax, r14d
0x1bee:	jge	0x1d43


0x1c1f:	test	ebx, ebx
0x1c21:	jne	0x1be0


0x1bf4:	movsxd	rdx, eax
0x1bf7:	cmp	ebx, 2
0x1bfa:	mov	rdi, qword ptr [r15 + rdx*8]
0x1bfe:	je	0x24dc


0x1d43:	cmp	dword ptr [rip + 0x2083a6], 0
0x1d4a:	je	0x20a0


0x1c23:	lea	rcx, [rip + 0x207d96]
0x1c2a:	lea	rdx, [rip + 0x4bf0]
0x1c31:	xor	r8d, r8d
0x1c34:	mov	rsi, r15
0x1c37:	mov	edi, r14d
0x1c3a:	call	0x1840


0x1be0:	test	r12b, r12b
0x1be3:	je	0x1c23


0x24dc:	call	0x5410


0x1c04:	add	eax, 1
0x1c07:	mov	dword ptr [rip + 0x2084ab], eax
0x1c0d:	mov	eax, ebx
0x1c0f:	add	ebx, 1
0x1c12:	mov	qword ptr [rsp + rax*8 + 0x80], rdi
0x1c1a:	cmp	ebp, -1
0x1c1d:	je	0x1be5


0x20a0:	cmp	dword ptr [rip + 0x208055], 0
0x20a7:	jne	0x1d72


0x1d50:	test	r13b, r13b
0x1d53:	jne	0x2535


0x1840:	jmp	qword ptr [rip + 0x20865a]


0x20ad:	cmp	byte ptr [rip + 0x208045], 0
0x20b4:	mov	edx, 5
0x20b9:	lea	rsi, [rip + 0x5078]
0x20c0:	je	0x1d72


0x1d72:	movsx	eax, byte ptr [rsp + 0x27]
0x1d77:	lea	rsi, [rip + 0x54f4]
0x1d7e:	mov	rbx, qword ptr [rsp + 0x88]
0x1d86:	mov	dword ptr [rsp + 0x18], eax
0x1d8a:	mov	rax, qword ptr [rsp + 0x80]
0x1d92:	mov	rdi, rax
0x1d95:	mov	qword ptr [rsp + 0x30], rax
0x1d9a:	call	0x1930


0x1d59:	cmp	dword ptr [rip + 0x20839c], 1
0x1d60:	mov	edx, 5
0x1d65:	lea	rsi, [rip + 0x5394]
0x1d6c:	jne	0x2541


0x2535:	lea	rsi, [rip + 0x4b94]
0x253c:	mov	edx, 5
0x2541:	xor	edi, edi
0x2543:	call	0x1800




0x20c6:	jmp	0x2541


0x1930:	jmp	qword ptr [rip + 0x2085e2]


0x2541:	xor	edi, edi
0x2543:	call	0x1800




0x2548:	xor	esi, esi
0x254a:	mov	rdx, rax
0x254d:	xor	edi, edi
0x254f:	xor	eax, eax
0x2551:	call	0x1a00


0x2556:	jmp	0x1ccd


0x1ccd:	mov	edi, 1
0x1cd2:	call	0x2920


0x5f88:	test	rax, rax
0x5f8b:	mov	rcx, qword ptr [rsp + 8]
0x5f90:	je	0x605c


0x605c:	mov	qword ptr [r14], rbx
0x605f:	or	ebp, 2
0x6062:	jmp	0x5f1d


0x5f96:	lea	eax, [r12 - 0x45]
0x5f9b:	cmp	al, 0x2f
0x5f9d:	ja	0x5ff0


0x5f9f:	movabs	rdx, 0x814400308945
0x5fa9:	bt	rdx, rax
0x5fad:	jae	0x5ff0


0x5ff0:	mov	edi, 1
0x5ff5:	mov	esi, 0x400
0x5ffa:	sub	r12d, 0x42
0x5ffe:	cmp	r12b, 0x35
0x6002:	ja	0x605c


0x5faf:	mov	esi, 0x30
0x5fb4:	mov	rdi, r13
0x5fb7:	mov	qword ptr [rsp + 8], rcx
0x5fbc:	call	0x1870


0x6004:	lea	rdx, [rip + 0x1b75]
0x600b:	movzx	r12d, r12b
0x600f:	movsxd	rax, dword ptr [rdx + r12*4]
0x6013:	add	rax, rdx
0x6016:	jmp	rax


0x5fc1:	test	rax, rax
0x5fc4:	mov	rcx, qword ptr [rsp + 8]
0x5fc9:	je	0x5ff0


0x5fcb:	movzx	eax, byte ptr [rcx + 1]
0x5fcf:	cmp	al, 0x44
0x5fd1:	je	0x5fdf


0x5fdf:	mov	edi, 2
0x5fe4:	mov	esi, 0x3e8
0x5fe9:	jmp	0x5ffa


0x5fd3:	cmp	al, 0x69
0x5fd5:	je	0x61a8


0x5ffa:	sub	r12d, 0x42
0x5ffe:	cmp	r12b, 0x35
0x6002:	ja	0x605c


0x61a8:	xor	edi, edi
0x61aa:	cmp	byte ptr [rcx + 2], 0x42
0x61ae:	mov	esi, 0x400
0x61b3:	sete	dil
0x61b7:	lea	edi, [rdi + rdi + 1]
0x61bb:	jmp	0x5ffa


0x5fdb:	cmp	al, 0x42
0x5fdd:	jne	0x5ff0


0x5f68:	test	rax, rax
0x5f6b:	mov	ebx, 1
0x5f70:	mov	rcx, qword ptr [rsp + 8]
0x5f75:	je	0x5f18


0x6284:	test	eax, eax
0x6286:	je	0x62c4


0x6288:	call	0x1790


0x628d:	mov	r12d, dword ptr [rax]
0x6290:	mov	rdi, rbx
0x6293:	mov	rbp, rax
0x6296:	call	0x17e0


0x629b:	test	r12d, r12d
0x629e:	jne	0x62d0


0x62a0:	pop	rbx
0x62a1:	pop	rbp
0x62a2:	pop	r12
0x62a4:	ret	


0x62d0:	mov	dword ptr [rbp], r12d
0x62d4:	mov	eax, 0xffffffff
0x62d9:	jmp	0x62a0


0x642a:	and	ebx, 0x20
0x642d:	test	ebx, ebx
0x642f:	jne	0x6448


0x6431:	test	eax, eax
0x6433:	je	0x643f


0x6448:	test	eax, eax
0x644a:	jne	0x6468


0x643f:	pop	rbx
0x6440:	pop	rbp
0x6441:	pop	r12
0x6443:	ret	


0x6435:	test	r12, r12
0x6438:	mov	eax, 0xffffffff
0x643d:	je	0x6478


0x644c:	call	0x1790


0x6468:	pop	rbx
0x6469:	mov	eax, 0xffffffff
0x646e:	pop	rbp
0x646f:	pop	r12
0x6471:	ret	


0x6478:	call	0x1790


0x647d:	cmp	dword ptr [rax], 9
0x6480:	pop	rbx
0x6481:	pop	rbp
0x6482:	pop	r12
0x6484:	setne	al
0x6487:	movzx	eax, al
0x648a:	neg	eax
0x648c:	ret	


0x6451:	mov	dword ptr [rax], 0
0x6457:	mov	eax, 0xffffffff
0x645c:	pop	rbx
0x645d:	pop	rbp
0x645e:	pop	r12
0x6460:	ret	


0x31a2:	test	eax, eax
0x31a4:	je	0x31bc


0x31bc:	mov	rdi, qword ptr [rip + 0x206f1d]
0x31c3:	call	0x6410


0x31a6:	call	0x1790


0x31ab:	cmp	byte ptr [rip + 0x206f6e], 0
0x31b2:	mov	rbx, rax
0x31b5:	je	0x31d3


0x31d3:	lea	rsi, [rip + 0x4021]
0x31da:	xor	edi, edi
0x31dc:	mov	edx, 5
0x31e1:	call	0x1800


0x31b7:	cmp	dword ptr [rax], 0x20
0x31ba:	jne	0x31d3


0x31e6:	mov	rdi, qword ptr [rip + 0x206f3b]
0x31ed:	mov	rbp, rax
0x31f0:	test	rdi, rdi
0x31f3:	je	0x321d


0x321d:	mov	esi, dword ptr [rbx]
0x321f:	lea	rdx, [rip + 0x3fd2]
0x3226:	mov	rcx, rax
0x3229:	xor	edi, edi
0x322b:	xor	eax, eax
0x322d:	call	0x1a00


0x31f5:	call	0x5210


0x3232:	jmp	0x3212


0x3212:	mov	edi, dword ptr [rip + 0x206e08]
0x3218:	call	0x17b0


0x17b0:	jmp	qword ptr [rip + 0x2086a2]




0x31c8:	test	eax, eax
0x31ca:	jne	0x3212


0x31cc:	add	rsp, 8
0x31d0:	pop	rbx
0x31d1:	pop	rbp
0x31d2:	ret	


0x1d9f:	test	eax, eax
0x1da1:	jne	0x222d


0x1da7:	lea	rsi, [rip + 0x54c4]
0x1dae:	mov	rdi, rbx
0x1db1:	call	0x1930


0x222d:	mov	rdx, qword ptr [rip + 0x207e7c]
0x2234:	mov	rdi, qword ptr [rsp + 0x30]
0x2239:	lea	rsi, [rip + 0x4fc5]
0x2240:	call	0x32d0


0x2245:	test	rax, rax
0x2248:	jne	0x1da7


0x224e:	mov	rdx, qword ptr [rsp + 0x30]
0x2253:	mov	esi, 3
0x2258:	xor	edi, edi
0x225a:	call	0x5240


0x1db6:	test	eax, eax
0x1db8:	je	0x1dd9


0x1dd9:	mov	rdi, qword ptr [rip + 0x2082d0]
0x1de0:	lea	rbp, [rsp + 0x40]
0x1de5:	mov	esi, 2
0x1dea:	lea	r13, [rsp + 0x60]
0x1def:	call	0x3250


0x1dba:	mov	rdx, qword ptr [rip + 0x2082e7]
0x1dc1:	lea	rsi, [rip + 0x4abd]
0x1dc8:	mov	rdi, rbx
0x1dcb:	call	0x32d0


0x1dd0:	test	rax, rax
0x1dd3:	je	0x2560


0x2560:	mov	rdx, rbx
0x2563:	mov	esi, 3
0x2568:	xor	edi, edi
0x256a:	call	0x5240


0x1df4:	mov	rdi, rbp
0x1df7:	call	0x34e0


0x1dfc:	mov	rdi, r13
0x1dff:	call	0x34e0


0x1e04:	cmp	byte ptr [rip + 0x2082f0], 0
0x1e0b:	je	0x1e25


0x1e25:	mov	edx, dword ptr [rsp + 0x18]
0x1e29:	mov	rsi, qword ptr [rip + 0x208280]
0x1e30:	mov	rdi, r13
0x1e33:	call	0x34f0


0x1e0d:	movzx	ebx, byte ptr [rip + 0x2082e6]
0x1e14:	test	bl, bl
0x1e16:	je	0x1e25


0x1e18:	cmp	dword ptr [rip + 0x2082dd], 1
0x1e1f:	je	0x22a3


0x22a3:	mov	byte ptr [rsp + 8], 0
0x22a8:	mov	rsi, qword ptr [rip + 0x207e01]
0x22af:	test	byte ptr [rsi], 0x10
0x22b2:	jne	0x2406


0x22b8:	mov	edx, dword ptr [rsp + 0x18]
0x22bc:	mov	rdi, rbp
0x22bf:	call	0x34f0


0x2406:	mov	eax, dword ptr [rip + 0x207ce4]
0x240c:	sub	eax, 2
0x240f:	and	eax, 0xfffffffd
0x2412:	jne	0x1f4e


0x2418:	cmp	byte ptr [rsp + 8], 0
0x241d:	je	0x1f4e


0x1f4e:	mov	rdi, qword ptr [rip + 0x20815b]
0x1f55:	test	byte ptr [rdi], 0x20
0x1f58:	jne	0x2384


0x2423:	mov	rdi, qword ptr [rip + 0x207c7e]
0x242a:	mov	rax, qword ptr [rdi + 0x28]
0x242e:	cmp	rax, qword ptr [rdi + 0x30]
0x2432:	jae	0x2520


0x1f5e:	call	0x6260


0x2384:	mov	rsi, qword ptr [rsp + 0x30]
0x2389:	mov	edi, 4
0x238e:	call	0x5140


0x2438:	movzx	ecx, byte ptr [rsp + 0x27]
0x243d:	lea	rdx, [rax + 1]
0x2441:	mov	qword ptr [rdi + 0x28], rdx
0x2445:	mov	byte ptr [rax], cl
0x2447:	jmp	0x1f4e


0x2520:	mov	esi, dword ptr [rsp + 0x18]
0x2524:	call	0x1880


0x2529:	jmp	0x1f4e


0x1f63:	test	eax, eax
0x1f65:	jne	0x2384


0x1f6b:	mov	rdi, qword ptr [rsp + 0x50]
0x1f70:	call	0x1770


0x1f75:	mov	rdi, qword ptr [rsp + 0x70]
0x1f7a:	call	0x1770


0x1f7f:	xor	eax, eax
0x1f81:	mov	rcx, qword ptr [rsp + 0x98]
0x1f89:	xor	rcx, qword ptr fs:[0x28]
0x1f92:	jne	0x255b


0x1f98:	add	rsp, 0xa8
0x1f9f:	pop	rbx
0x1fa0:	pop	rbp
0x1fa1:	pop	r12
0x1fa3:	pop	r13
0x1fa5:	pop	r14
0x1fa7:	pop	r15
0x1fa9:	ret	


0x255b:	call	0x1830


0x22c4:	test	rax, rax
0x22c7:	je	0x2406


0x22cd:	mov	r12, qword ptr [rbp + 8]
0x22d1:	mov	r15, qword ptr [rbp + 0x10]
0x22d5:	mov	rdi, r12
0x22d8:	mov	rsi, r15
0x22db:	sub	r12, 1
0x22df:	call	0x2840


0x22e4:	mov	r14, rax
0x22e7:	sub	rax, r15
0x22ea:	sub	r12, rax
0x22ed:	cmp	qword ptr [r13 + 8], 0
0x22f2:	jne	0x23bd


0x22f8:	mov	eax, dword ptr [rip + 0x207df2]
0x22fe:	test	eax, eax
0x2300:	je	0x2327


0x23bd:	mov	rcx, qword ptr [rsp + 0x38]
0x23c2:	mov	rsi, qword ptr [rsp + 0x28]
0x23c7:	mov	rdx, r12
0x23ca:	mov	rdi, r14
0x23cd:	call	0x26a0


0x2327:	mov	rdx, qword ptr [rbp + 8]
0x232b:	mov	rdi, qword ptr [rbp + 0x10]
0x232f:	mov	esi, 1
0x2334:	mov	rcx, qword ptr [rip + 0x207d6d]
0x233b:	call	0x19c0


0x2302:	cmp	eax, 1
0x2305:	je	0x2469


0x2469:	mov	rdi, qword ptr [rip + 0x207c38]
0x2470:	mov	rax, qword ptr [rdi + 0x28]
0x2474:	cmp	rax, qword ptr [rdi + 0x30]
0x2478:	jae	0x2512


0x230b:	cmp	eax, 4
0x230e:	je	0x2469


0x247e:	movzx	ecx, byte ptr [rsp + 0x27]
0x2483:	lea	rdx, [rax + 1]
0x2487:	mov	qword ptr [rdi + 0x28], rdx
0x248b:	mov	byte ptr [rax], cl
0x248d:	jmp	0x2327


0x2512:	mov	esi, dword ptr [rsp + 0x18]
0x2516:	call	0x1880


0x2314:	cmp	byte ptr [rsp + 8], 0
0x2319:	je	0x2327


0x231b:	sub	eax, 2
0x231e:	cmp	eax, 1
0x2321:	jbe	0x2469


0x251b:	jmp	0x2327


0x2340:	mov	rax, rbp
0x2343:	mov	byte ptr [rsp + 8], bl
0x2347:	mov	rbp, r13
0x234a:	mov	qword ptr [rsp + 0x38], r12
0x234f:	mov	qword ptr [rsp + 0x28], r14
0x2354:	mov	r13, rax
0x2357:	jmp	0x22a8


0x22a8:	mov	rsi, qword ptr [rip + 0x207e01]
0x22af:	test	byte ptr [rsi], 0x10
0x22b2:	jne	0x2406


0x23d2:	test	al, al
0x23d4:	jne	0x22f8


0x23da:	cmp	dword ptr [rip + 0x207d0f], 0
0x23e1:	je	0x22a8


0x23e7:	jmp	0x2327


0x1e38:	test	rax, rax
0x1e3b:	je	0x1f4e


0x1e41:	mov	r12, qword ptr [rsp + 0x70]
0x1e46:	mov	rbx, qword ptr [rsp + 0x68]
0x1e4b:	mov	rsi, r12
0x1e4e:	mov	rdi, rbx
0x1e51:	sub	rbx, 1
0x1e55:	call	0x2840


0x1e5a:	mov	qword ptr [rsp + 0x10], rax
0x1e5f:	sub	rax, r12
0x1e62:	mov	byte ptr [rsp + 0x28], 1
0x1e67:	sub	rbx, rax
0x1e6a:	xor	r12d, r12d
0x1e6d:	mov	qword ptr [rsp + 8], rbx
0x1e72:	mov	rsi, qword ptr [rip + 0x208237]
0x1e79:	test	byte ptr [rsi], 0x10
0x1e7c:	jne	0x1f41


0x1e82:	mov	edx, dword ptr [rsp + 0x18]
0x1e86:	mov	rdi, rbp
0x1e89:	call	0x34f0


0x1f41:	mov	rdx, r12
0x1f44:	xor	esi, esi
0x1f46:	mov	rdi, r13
0x1f49:	call	0x27c0


0x1e8e:	test	rax, rax
0x1e91:	je	0x2374


0x2374:	mov	rax, qword ptr [rip + 0x207d35]
0x237b:	test	byte ptr [rax], 0x20
0x237e:	je	0x1f41


0x1e97:	mov	rbx, qword ptr [rbp + 8]
0x1e9b:	mov	r15, qword ptr [rbp + 0x10]
0x1e9f:	mov	rdi, rbx
0x1ea2:	mov	rsi, r15
0x1ea5:	sub	rbx, 1
0x1ea9:	call	0x2840


0x1eae:	mov	rcx, qword ptr [rsp + 8]
0x1eb3:	mov	r14, rax
0x1eb6:	mov	rsi, qword ptr [rsp + 0x10]
0x1ebb:	sub	rax, r15
0x1ebe:	mov	rdi, r14
0x1ec1:	sub	rbx, rax
0x1ec4:	mov	rdx, rbx
0x1ec7:	call	0x26a0


0x1ecc:	mov	edx, eax
0x1ece:	xor	edx, 1
0x1ed1:	movzx	ecx, dl
0x1ed4:	movzx	edx, dl
0x1ed7:	add	r12, rdx
0x1eda:	cmp	r12, -1
0x1ede:	je	0x2110


0x2110:	mov	edx, dword ptr [rip + 0x207fde]
0x2116:	test	edx, edx
0x2118:	je	0x20cb


0x1ee4:	mov	edx, dword ptr [rip + 0x20820a]
0x1eea:	test	edx, edx
0x1eec:	je	0x20d2


0x20cb:	mov	r12, -2
0x20d2:	test	al, al
0x20d4:	jne	0x1f0e


0x211a:	test	al, al
0x211c:	mov	r12, -2
0x2123:	je	0x20da


0x20d2:	test	al, al
0x20d4:	jne	0x1f0e


0x1ef2:	test	al, al
0x1ef4:	je	0x2136


0x20da:	cmp	byte ptr [rip + 0x208018], 0
0x20e1:	je	0x1e72


0x1f0e:	mov	rdx, r12
0x1f11:	mov	esi, ecx
0x1f13:	mov	rdi, r13
0x1f16:	call	0x27c0


0x2125:	mov	byte ptr [rsp + 0x28], 0
0x212a:	mov	r12, -2
0x2131:	jmp	0x1f0e


0x2136:	cmp	r12, 1
0x213a:	jne	0x20da


0x1efa:	movzx	eax, byte ptr [rsp + 0x28]
0x1eff:	test	r12, r12
0x1f02:	mov	esi, 0
0x1f07:	cmovne	eax, esi
0x1f0a:	mov	byte ptr [rsp + 0x28], al
0x1f0e:	mov	rdx, r12
0x1f11:	mov	esi, ecx
0x1f13:	mov	rdi, r13
0x1f16:	call	0x27c0


0x1e72:	mov	rsi, qword ptr [rip + 0x208237]
0x1e79:	test	byte ptr [rsi], 0x10
0x1e7c:	jne	0x1f41


0x20e7:	mov	rdi, r13
0x20ea:	mov	rdx, r12
0x20ed:	mov	esi, ecx
0x20ef:	call	0x27c0


0x213c:	cmp	edx, 1
0x213f:	je	0x214d


0x214d:	mov	rdi, qword ptr [rip + 0x207f54]
0x2154:	mov	rax, qword ptr [rdi + 0x28]
0x2158:	cmp	rax, qword ptr [rdi + 0x30]
0x215c:	jae	0x24c6


0x2141:	cmp	edx, 2
0x2144:	jne	0x20da


0x2162:	movzx	esi, byte ptr [rsp + 0x27]
0x2167:	lea	rdx, [rax + 1]
0x216b:	mov	qword ptr [rdi + 0x28], rdx
0x216f:	mov	byte ptr [rax], sil
0x2172:	jmp	0x20da


0x24c6:	mov	esi, dword ptr [rsp + 0x18]
0x24ca:	mov	dword ptr [rsp + 0x38], ecx
0x24ce:	call	0x1880


0x2146:	cmp	byte ptr [rsp + 0x28], 0
0x214b:	jne	0x20da


0x24d3:	mov	ecx, dword ptr [rsp + 0x38]
0x24d7:	jmp	0x20da


0x20f4:	mov	rax, rbp
0x20f7:	mov	qword ptr [rsp + 8], rbx
0x20fc:	mov	rbp, r13
0x20ff:	mov	qword ptr [rsp + 0x10], r14
0x2104:	mov	r13, rax
0x2107:	jmp	0x1e72


0x1f1b:	mov	rsi, qword ptr [rip + 0x20818e]
0x1f22:	xor	r12d, r12d
0x1f25:	mov	rax, rbp
0x1f28:	mov	qword ptr [rsp + 8], rbx
0x1f2d:	mov	rbp, r13
0x1f30:	mov	qword ptr [rsp + 0x10], r14
0x1f35:	mov	r13, rax
0x1f38:	test	byte ptr [rsi], 0x10
0x1f3b:	je	0x1e82


0x1c3f:	cmp	eax, -1
0x1c42:	mov	ebp, eax
0x1c44:	je	0x1be5


0x1c46:	cmp	eax, 0x64
0x1c49:	je	0x2189


0x2189:	mov	byte ptr [rip + 0x207f6b], 0
0x2190:	mov	r13d, 1
0x2196:	jmp	0x1c1f


0x1c4f:	jle	0x1ca0


0x1ca0:	cmp	eax, 0x39
0x1ca3:	jg	0x1d20


0x1c51:	cmp	eax, 0x75
0x1c54:	je	0x2177


0x1ca5:	cmp	eax, 0x30
0x1ca8:	jge	0x21a7


0x1d20:	cmp	eax, 0x44
0x1d23:	je	0x1ff4


0x2177:	mov	byte ptr [rip + 0x207f7c], 0
0x217e:	mov	r13d, 1
0x2184:	jmp	0x1c1f


0x1c5a:	jg	0x1ce0


0x1cae:	cmp	eax, 0xffffff7e
0x1cb3:	je	0x252e


0x21a7:	cmp	dword ptr [rsp + 8], 2
0x21ac:	je	0x23ec


0x1ff4:	mov	rsi, qword ptr [rip + 0x2080c5]
0x1ffb:	mov	byte ptr [rip + 0x2080f9], 0
0x2002:	mov	byte ptr [rip + 0x2080f0], 1
0x2009:	test	rsi, rsi
0x200c:	je	0x227f


0x1d29:	cmp	eax, 0x63
0x1d2c:	jne	0x1ccd


0x1c60:	cmp	eax, 0x69
0x1c63:	je	0x219b


0x1ce0:	cmp	eax, 0x7a
0x1ce3:	je	0x2223


0x252e:	xor	edi, edi
0x2530:	call	0x2920


0x1cb9:	cmp	eax, 1
0x1cbc:	je	0x1faa


0x23ec:	lea	edx, [rax - 0x30]
0x23ef:	movsxd	rdx, edx
0x23f2:	mov	qword ptr [rip + 0x207d17], rdx
0x23f9:	mov	dword ptr [rsp + 8], 1
0x2401:	jmp	0x1c1a


0x21b2:	mov	rax, qword ptr [rip + 0x207f57]
0x21b9:	movabs	rcx, 0x1999999999999999
0x21c3:	cmp	rax, rcx
0x21c6:	jbe	0x235c


0x227f:	mov	dword ptr [rip + 0x207e6b], 0
0x2289:	mov	r13d, 1
0x228f:	jmp	0x1c1f


0x2012:	mov	r9, qword ptr [rip + 0x207fff]
0x2019:	lea	rdx, [rip + 0x207b80]
0x2020:	lea	rcx, [rip + 0x5169]
0x2027:	lea	rdi, [rip + 0x481c]
0x202e:	mov	r8d, 4
0x2034:	mov	r13d, 1
0x203a:	call	0x30b0


0x1d2e:	mov	dword ptr [rip + 0x2083c4], 0
0x1d38:	mov	r13d, 1
0x1d3e:	jmp	0x1c1f


0x219b:	mov	byte ptr [rip + 0x207f56], 1
0x21a2:	jmp	0x1c1f


0x1c69:	cmp	eax, 0x73
0x1c6c:	je	0x1fd5


0x2223:	mov	byte ptr [rsp + 0x27], 0
0x2228:	jmp	0x1c1f


0x1ce9:	cmp	eax, 0x80
0x1cee:	je	0x2054


0x1faa:	mov	rdi, qword ptr [rip + 0x20810f]
0x1fb1:	cmp	byte ptr [rdi], 0x2b
0x1fb4:	je	0x244c


0x1cc2:	cmp	eax, 0xffffff7d
0x1cc7:	je	0x21e5


0x235c:	imul	rdx, rax, 0xa
0x2360:	lea	ecx, [rbp - 0x30]
0x2363:	movsxd	rcx, ecx
0x2366:	add	rdx, rcx
0x2369:	cmp	rax, rdx
0x236c:	ja	0x21cc


0x21cc:	mov	rax, qword ptr [rsp + 0x10]
0x21d1:	mov	dword ptr [rsp + 8], 1
0x21d9:	mov	qword ptr [rip + 0x207f30], rax
0x21e0:	jmp	0x1c1a


0x1fd5:	mov	rdi, qword ptr [rip + 0x2080e4]
0x1fdc:	lea	rsi, [rip + 0x50a5]
0x1fe3:	call	0x2730


0x1c72:	cmp	eax, 0x66
0x1c75:	jne	0x1ccd


0x2054:	mov	rsi, qword ptr [rip + 0x208065]
0x205b:	test	rsi, rsi
0x205e:	je	0x2294


0x1cf4:	cmp	eax, 0x77
0x1cf7:	jne	0x1ccd


0x244c:	call	0x3670


0x1fba:	cmp	ebx, 2
0x1fbd:	je	0x24dc


0x21e5:	sub	rsp, 8
0x21e9:	mov	rdi, qword ptr [rip + 0x207eb8]
0x21f0:	mov	rcx, qword ptr [rip + 0x207e19]
0x21f7:	push	0
0x21f9:	lea	r9, [rip + 0x4661]
0x2200:	lea	r8, [rip + 0x466a]
0x2207:	lea	rdx, [rip + 0x45be]
0x220e:	lea	rsi, [rip + 0x453c]
0x2215:	xor	eax, eax
0x2217:	call	0x58f0


0x2372:	jmp	0x23f2


0x1c77:	mov	rdi, qword ptr [rip + 0x208442]
0x1c7e:	lea	rsi, [rip + 0x53db]
0x1c85:	call	0x2730


0x2294:	mov	dword ptr [rip + 0x207e52], 3
0x229e:	jmp	0x1c1f


0x2064:	mov	r9, qword ptr [rip + 0x207fad]
0x206b:	lea	rdx, [rip + 0x207aee]
0x2072:	lea	rcx, [rip + 0x5107]
0x2079:	lea	rdi, [rip + 0x47d9]
0x2080:	mov	r8d, 4
0x2086:	call	0x30b0


0x1cf9:	mov	rdi, qword ptr [rip + 0x2083c0]
0x1d00:	lea	rsi, [rip + 0x53a1]
0x1d07:	call	0x2730


0x1fc3:	mov	eax, ebx
0x1fc5:	add	ebx, 1
0x1fc8:	mov	qword ptr [rsp + rax*8 + 0x80], rdi
0x1fd0:	jmp	0x1c1f


0x23f2:	mov	qword ptr [rip + 0x207d17], rdx
0x23f9:	mov	dword ptr [rsp + 8], 1
0x2401:	jmp	0x1c1a


0x221c:	xor	edi, edi
0x221e:	call	0x1a50


0x2451:	sub	eax, 0x30db0
0x2456:	cmp	eax, 0x2b8
0x245b:	ja	0x2492


0x245d:	mov	rdi, qword ptr [rip + 0x207c5c]
0x2464:	jmp	0x1fba


0x2492:	mov	rcx, qword ptr [rsp + 0x18]
0x2497:	mov	rdi, qword ptr [rip + 0x207c22]
0x249e:	lea	r8, [rip + 0x52fc]
0x24a5:	xor	esi, esi
0x24a7:	mov	edx, 0xa
0x24ac:	call	0x5e40


0x24b1:	test	eax, eax
0x24b3:	jne	0x245d


0x24b5:	mov	rax, qword ptr [rsp + 0x60]
0x24ba:	mov	qword ptr [rip + 0x207c47], rax
0x24c1:	jmp	0x1c1f


0x1d0c:	mov	qword ptr [rip + 0x2083ed], rax
0x1d13:	jmp	0x1c1f


0x1c8a:	mov	dword ptr [rsp + 8], 2
0x1c92:	mov	qword ptr [rip + 0x208477], rax
0x1c99:	jmp	0x1c1f


0x1fe8:	mov	qword ptr [rip + 0x208119], rax
0x1fef:	jmp	0x1c1f


0x208b:	lea	rdx, [rip + 0x50ee]
0x2092:	mov	eax, dword ptr [rdx + rax*4]
0x2095:	mov	dword ptr [rip + 0x208055], eax
0x209b:	jmp	0x1c1f


0x203f:	lea	rdx, [rip + 0x514a]
0x2046:	mov	eax, dword ptr [rdx + rax*4]
0x2049:	mov	dword ptr [rip + 0x2080a5], eax
0x204f:	jmp	0x1c1f


0x2393:	lea	rsi, [rip + 0x44ed]
0x239a:	mov	rbx, rax
0x239d:	mov	edx, 5
0x23a2:	xor	edi, edi
0x23a4:	call	0x1800


0x23a9:	mov	rcx, rbx
0x23ac:	mov	rdx, rax
0x23af:	xor	esi, esi
0x23b1:	mov	edi, 1
0x23b6:	xor	eax, eax
0x23b8:	call	0x1a00


0x256f:	mov	rbx, rax
0x2572:	call	0x1790


0x2577:	mov	esi, dword ptr [rax]
0x2579:	lea	rdx, [rip + 0x4c78]
0x2580:	mov	rcx, rbx
0x2583:	mov	edi, 1
0x2588:	xor	eax, eax
0x258a:	call	0x1a00


0x258f:	nop	


0x225f:	mov	rbx, rax
0x2262:	call	0x1790


0x2267:	mov	esi, dword ptr [rax]
0x2269:	lea	rdx, [rip + 0x4f88]
0x2270:	mov	rcx, rbx
0x2273:	mov	edi, 1
0x2278:	xor	eax, eax
0x227a:	call	0x1a00


0x31fa:	mov	esi, dword ptr [rbx]
0x31fc:	lea	rdx, [rip + 0x3541]
0x3203:	mov	rcx, rax
0x3206:	mov	r8, rbp
0x3209:	xor	edi, edi
0x320b:	xor	eax, eax
0x320d:	call	0x1a00


0x24e1:	lea	rsi, [rip + 0x4351]
0x24e8:	mov	rbx, rax
0x24eb:	mov	edx, 5
0x24f0:	xor	edi, edi
0x24f2:	call	0x1800


0x24f7:	xor	edi, edi
0x24f9:	mov	rdx, rax
0x24fc:	mov	rcx, rbx
0x24ff:	xor	esi, esi
0x2501:	xor	eax, eax
0x2503:	call	0x1a00


0x2508:	mov	edi, 1
0x250d:	call	0x2920


0x303e:	mov	rdi, qword ptr [rip + 0x20709b]
0x3045:	lea	rdx, [rip + 0x41aa]
0x304c:	mov	rcx, rax
0x304f:	mov	esi, 1
0x3054:	xor	eax, eax
0x3056:	call	0x1a70


0x305b:	mov	r15, qword ptr [r14 + rbx*8]
0x305f:	test	r15, r15
0x3062:	jne	0x3018


0x2fef:	mov	rdi, qword ptr [rip + 0x2070ea]
0x2ff6:	lea	rdx, [rip + 0x41f1]
0x2ffd:	mov	rcx, rax
0x3000:	mov	esi, 1
0x3005:	xor	eax, eax
0x3007:	add	rbp, r12
0x300a:	call	0x1a70


0x300f:	mov	r15, qword ptr [r14 + rbx*8]
0x3013:	test	r15, r15
0x3016:	je	0x3068


0x5d4f:	mov	rcx, r12
0x5d52:	mov	rdx, rbx
0x5d55:	mov	esi, 8
0x5d5a:	xor	edi, edi
0x5d5c:	mov	rbp, rax
0x5d5f:	call	0x50b0


0x5d64:	lea	rsi, [rip + 0x1da5]
0x5d6b:	mov	rbx, rax
0x5d6e:	mov	edx, 5
0x5d73:	xor	edi, edi
0x5d75:	call	0x1800


0x5d7a:	mov	r8, rbp
0x5d7d:	mov	rcx, rbx
0x5d80:	mov	edi, dword ptr [rip + 0x20429a]
0x5d86:	pop	rbx
0x5d87:	pop	rbp
0x5d88:	pop	r12
0x5d8a:	pop	r13
0x5d8c:	pop	r14
0x5d8e:	mov	rdx, rax
0x5d91:	xor	esi, esi
0x5d93:	xor	eax, eax
0x5d95:	jmp	0x1a00


0x4bbc:	add	rsp, 0x20
0x4bc0:	mov	r11, qword ptr [rsp + 0x10]
0x4bc5:	cmp	r11, rax
0x4bc8:	ja	0x4c31


0x4bca:	lea	rsi, [rax + 1]
0x4bce:	lea	rax, [rip + 0x20556b]
0x4bd5:	cmp	r12, rax
0x4bd8:	mov	qword ptr [rbx], rsi
0x4bdb:	je	0x4bef


0x4c31:	mov	eax, dword ptr [rsp + 0x18]
0x4c35:	mov	dword ptr [r13], eax
0x4c39:	add	rsp, 0x28
0x4c3d:	mov	rax, r12
0x4c40:	pop	rbx
0x4c41:	pop	rbp
0x4c42:	pop	r12
0x4c44:	pop	r13
0x4c46:	pop	r14
0x4c48:	pop	r15
0x4c4a:	ret	


0x4bef:	mov	rdi, rsi
0x4bf2:	mov	qword ptr [rsp + 0x10], rsi
0x4bf7:	call	0x5a50


0x4bdd:	mov	rdi, r12
0x4be0:	mov	qword ptr [rsp + 0x10], rsi
0x4be5:	call	0x1770


0x4bea:	mov	rsi, qword ptr [rsp + 0x10]
0x4bef:	mov	rdi, rsi
0x4bf2:	mov	qword ptr [rsp + 0x10], rsi
0x4bf7:	call	0x5a50


0x4bfc:	sub	rsp, 8
0x4c00:	mov	qword ptr [rbx + 8], rax
0x4c04:	mov	r8d, dword ptr [rbp]
0x4c08:	push	qword ptr [rbp + 0x30]
0x4c0b:	push	qword ptr [rbp + 0x28]
0x4c0e:	mov	rcx, r14
0x4c11:	push	r15
0x4c13:	mov	r9d, dword ptr [rsp + 0x3c]
0x4c18:	mov	rdi, rax
0x4c1b:	mov	rdx, qword ptr [rsp + 0x28]
0x4c20:	mov	rsi, qword ptr [rsp + 0x30]
0x4c25:	mov	r12, rax
0x4c28:	call	0x3890


0x5342:	mov	rdi, qword ptr [rsp + 0x38]
0x5347:	xor	rdi, qword ptr fs:[0x28]
0x5350:	jne	0x535c


0x5352:	add	rsp, 0x48
0x5356:	ret	


0x535c:	call	0x1830


0x508f:	mov	rcx, qword ptr [rsp + 0x38]
0x5094:	xor	rcx, qword ptr fs:[0x28]
0x509d:	jne	0x50a9


0x509f:	add	rsp, 0x48
0x50a3:	ret	


0x50a9:	call	0x1830


0x511b:	mov	rdx, qword ptr [rsp + 0x38]
0x5120:	xor	rdx, qword ptr fs:[0x28]
0x5129:	jne	0x5135


0x512b:	add	rsp, 0x48
0x512f:	ret	


0x5135:	call	0x1830


0x52af:	mov	rcx, qword ptr [rsp + 0x38]
0x52b4:	xor	rcx, qword ptr fs:[0x28]
0x52bd:	jne	0x52c9


0x52bf:	add	rsp, 0x48
0x52c3:	ret	


0x52c9:	call	0x1830


0x51de:	mov	rsi, qword ptr [rsp + 0x38]
0x51e3:	xor	rsi, qword ptr fs:[0x28]
0x51ec:	jne	0x51f3


0x51ee:	add	rsp, 0x48
0x51f2:	ret	


0x51f3:	call	0x1830


0x4c2d:	add	rsp, 0x20
0x4c31:	mov	eax, dword ptr [rsp + 0x18]
0x4c35:	mov	dword ptr [r13], eax
0x4c39:	add	rsp, 0x28
0x4c3d:	mov	rax, r12
0x4c40:	pop	rbx
0x4c41:	pop	rbp
0x4c42:	pop	r12
0x4c44:	pop	r13
0x4c46:	pop	r14
0x4c48:	pop	r15
0x4c4a:	ret	


0x4e7c:	lea	rsi, [rax + 1]
0x4e80:	mov	qword ptr [rsp + 0x48], rax
0x4e85:	add	rsp, 0x20
0x4e89:	mov	rdi, rsi
0x4e8c:	mov	qword ptr [rsp + 0x18], rsi
0x4e91:	call	0x5a50


0x4e96:	mov	qword ptr [rsp + 0x10], rax
0x4e9b:	sub	rsp, 8
0x4e9f:	push	qword ptr [rbx + 0x30]
0x4ea2:	push	qword ptr [rbx + 0x28]
0x4ea5:	mov	r10, qword ptr [rsp + 0x38]
0x4eaa:	mov	r9d, ebp
0x4ead:	mov	r8d, dword ptr [rbx]
0x4eb0:	mov	rcx, r15
0x4eb3:	mov	rdx, r14
0x4eb6:	mov	rdi, rax
0x4eb9:	push	r10
0x4ebb:	mov	rsi, qword ptr [rsp + 0x38]
0x4ec0:	call	0x3890


0x4ec5:	mov	eax, dword ptr [rsp + 0x2c]
0x4ec9:	add	rsp, 0x20
0x4ecd:	test	r12, r12
0x4ed0:	mov	dword ptr [r13], eax
0x4ed4:	je	0x4edf


0x4edf:	mov	rax, qword ptr [rsp + 0x10]
0x4ee4:	add	rsp, 0x38
0x4ee8:	pop	rbx
0x4ee9:	pop	rbp
0x4eea:	pop	r12
0x4eec:	pop	r13
0x4eee:	pop	r14
0x4ef0:	pop	r15
0x4ef2:	ret	


0x4ed6:	mov	r11, qword ptr [rsp + 0x28]
0x4edb:	mov	qword ptr [r12], r11
0x4edf:	mov	rax, qword ptr [rsp + 0x10]
0x4ee4:	add	rsp, 0x38
0x4ee8:	pop	rbx
0x4ee9:	pop	rbp
0x4eea:	pop	r12
0x4eec:	pop	r13
0x4eee:	pop	r14
0x4ef0:	pop	r15
0x4ef2:	ret	


0x4df1:	mov	dword ptr [rbp], r12d
0x4df5:	add	rsp, 0x38
0x4df9:	pop	rbx
0x4dfa:	pop	rbp
0x4dfb:	pop	r12
0x4dfd:	pop	r13
0x4dff:	pop	r14
0x4e01:	pop	r15
0x4e03:	ret	


0x2f43:	mov	rdx, r12
0x2f46:	mov	rbp, rax
0x2f49:	mov	esi, 8
0x2f4e:	xor	edi, edi
0x2f50:	call	0x5020


0x2f55:	mov	r8, rbp
0x2f58:	mov	rdx, rbx
0x2f5b:	mov	rcx, rax
0x2f5e:	pop	rbx
0x2f5f:	pop	rbp
0x2f60:	pop	r12
0x2f62:	xor	esi, esi
0x2f64:	xor	edi, edi
0x2f66:	xor	eax, eax
0x2f68:	jmp	0x1a00


0x3103:	mov	rdx, r15
0x3106:	mov	rsi, rbp
0x3109:	mov	rdi, rbx
0x310c:	call	0x2f90


0x3111:	call	r13


0x3561:	mov	r8, qword ptr [r14]
0x3564:	movzx	ecx, byte ptr [rsp]
0x3568:	lea	rsi, [rax + rbx]
0x356c:	mov	qword ptr [r14 + 0x10], rax
0x3570:	mov	r13, rax
0x3573:	movzx	edx, byte ptr [rsp + 0xf]
0x3578:	lea	rbx, [rsi + 1]
0x357c:	add	r8, rax
0x357f:	cmp	r12d, r15d
0x3582:	mov	byte ptr [rsi], cl
0x3584:	jne	0x352b


0x3114:	mov	rax, -1
0x311b:	jmp	0x30e6


0x66ed:	add	rbx, 1
0x66f1:	cmp	rbp, rbx
0x66f4:	jne	0x66e0


0x66e0:	mov	rdx, r15
0x66e3:	mov	rsi, r14
0x66e6:	mov	edi, r13d
0x66e9:	call	qword ptr [r12 + rbx*8]






0x56c0:	lea	rsi, [rip + 0x21f1]
0x56c7:	mov	edx, 5
0x56cc:	xor	edi, edi
0x56ce:	mov	r14, qword ptr [rbx + 0x18]
0x56d2:	mov	r13, qword ptr [rbx + 0x10]
0x56d6:	mov	r12, qword ptr [rbx + 8]
0x56da:	mov	rbx, qword ptr [rbx]
0x56dd:	call	0x1800


0x54e0:	mov	r9, qword ptr [rbx + 0x38]
0x54e4:	mov	rax, qword ptr [rbx + 0x10]
0x54e8:	lea	rsi, [rip + 0x2469]
0x54ef:	mov	r8, qword ptr [rbx + 8]
0x54f3:	mov	edx, 5
0x54f8:	xor	edi, edi
0x54fa:	mov	r13, qword ptr [rbx + 0x30]
0x54fe:	mov	r12, qword ptr [rbx + 0x28]
0x5502:	mov	qword ptr [rsp + 0x10], r9
0x5507:	mov	r15, qword ptr [rbx + 0x20]
0x550b:	mov	r14, qword ptr [rbx + 0x18]
0x550f:	mov	qword ptr [rsp], rax
0x5513:	mov	qword ptr [rsp + 8], r8
0x5518:	mov	rbx, qword ptr [rbx]
0x551b:	call	0x1800


0x55e8:	mov	rbx, qword ptr [rbx]
0x55eb:	lea	rsi, [rip + 0x216d]
0x55f2:	mov	edx, 5
0x55f7:	xor	edi, edi
0x55f9:	call	0x1800


0x5628:	mov	r12, qword ptr [rbx + 8]
0x562c:	lea	rsi, [rip + 0x213c]
0x5633:	mov	rbx, qword ptr [rbx]
0x5636:	mov	edx, 5
0x563b:	xor	edi, edi
0x563d:	call	0x1800


0x5748:	mov	r8, qword ptr [rbx + 8]
0x574c:	mov	r12, qword ptr [rbx + 0x28]
0x5750:	lea	rsi, [rip + 0x21a9]
0x5757:	mov	r15, qword ptr [rbx + 0x20]
0x575b:	mov	r14, qword ptr [rbx + 0x18]
0x575f:	mov	edx, 5
0x5764:	mov	r13, qword ptr [rbx + 0x10]
0x5768:	xor	edi, edi
0x576a:	mov	rbx, qword ptr [rbx]
0x576d:	mov	qword ptr [rsp], r8
0x5771:	call	0x1800


0x5670:	mov	r13, qword ptr [rbx + 0x10]
0x5674:	mov	r12, qword ptr [rbx + 8]
0x5678:	lea	rsi, [rip + 0x2107]
0x567f:	mov	rbx, qword ptr [rbx]
0x5682:	mov	edx, 5
0x5687:	xor	edi, edi
0x5689:	call	0x1800


0x57b0:	mov	r9, qword ptr [rbx + 0x10]
0x57b4:	mov	r13, qword ptr [rbx + 0x30]
0x57b8:	lea	rsi, [rip + 0x2169]
0x57bf:	mov	r12, qword ptr [rbx + 0x28]
0x57c3:	mov	r15, qword ptr [rbx + 0x20]
0x57c7:	mov	edx, 5
0x57cc:	mov	r14, qword ptr [rbx + 0x18]
0x57d0:	mov	r8, qword ptr [rbx + 8]
0x57d4:	xor	edi, edi
0x57d6:	mov	qword ptr [rsp + 8], r9
0x57db:	mov	rbx, qword ptr [rbx]
0x57de:	mov	qword ptr [rsp], r8
0x57e2:	call	0x1800


0x5590:	mov	r10, qword ptr [rbx + 0x40]
0x5594:	mov	r9, qword ptr [rbx + 0x38]
0x5598:	lea	rsi, [rip + 0x23e9]
0x559f:	mov	rax, qword ptr [rbx + 0x10]
0x55a3:	mov	r8, qword ptr [rbx + 8]
0x55a7:	mov	edx, 5
0x55ac:	mov	r13, qword ptr [rbx + 0x30]
0x55b0:	mov	r12, qword ptr [rbx + 0x28]
0x55b4:	mov	r15, qword ptr [rbx + 0x20]
0x55b8:	mov	r14, qword ptr [rbx + 0x18]
0x55bc:	mov	rbx, qword ptr [rbx]
0x55bf:	mov	qword ptr [rsp + 0x18], r10
0x55c4:	mov	qword ptr [rsp + 0x10], r9
0x55c9:	mov	qword ptr [rsp], rax
0x55cd:	mov	qword ptr [rsp + 8], r8
0x55d2:	xor	edi, edi
0x55d4:	call	0x1800


0x5556:	add	rsp, 0x28
0x555a:	pop	rbx
0x555b:	pop	rbp
0x555c:	pop	r12
0x555e:	pop	r13
0x5560:	pop	r14
0x5562:	pop	r15
0x5564:	ret	


0x5718:	mov	r15, qword ptr [rbx + 0x20]
0x571c:	lea	rsi, [rip + 0x21b5]
0x5723:	mov	edx, 5
0x5728:	xor	edi, edi
0x572a:	mov	r14, qword ptr [rbx + 0x18]
0x572e:	mov	r13, qword ptr [rbx + 0x10]
0x5732:	mov	r12, qword ptr [rbx + 8]
0x5736:	mov	rbx, qword ptr [rbx]
0x5739:	call	0x1800


0x573e:	push	r15
0x5740:	jmp	0x56e6


0x56e6:	push	r14
0x56e8:	mov	rdx, rax
0x56eb:	mov	r9, r13
0x56ee:	mov	r8, r12
0x56f1:	mov	rcx, rbx
0x56f4:	mov	rdi, rbp
0x56f7:	mov	esi, 1
0x56fc:	xor	eax, eax
0x56fe:	call	0x1a70


0x5703:	pop	rax
0x5704:	pop	rdx
0x5705:	add	rsp, 0x28
0x5709:	pop	rbx
0x570a:	pop	rbp
0x570b:	pop	r12
0x570d:	pop	r13
0x570f:	pop	r14
0x5711:	pop	r15
0x5713:	ret	


0x57e7:	push	r13
0x57e9:	push	r12
0x57eb:	push	r15
0x57ed:	push	r14
0x57ef:	mov	r9, qword ptr [rsp + 0x28]
0x57f4:	jmp	0x5783


0x5783:	mov	r8, qword ptr [rsp + 0x20]
0x5788:	mov	rcx, rbx
0x578b:	mov	rdx, rax
0x578e:	mov	rdi, rbp
0x5791:	mov	esi, 1
0x5796:	xor	eax, eax
0x5798:	call	0x1a70


0x579d:	add	rsp, 0x20
0x57a1:	add	rsp, 0x28
0x57a5:	pop	rbx
0x57a6:	pop	rbp
0x57a7:	pop	r12
0x57a9:	pop	r13
0x57ab:	pop	r14
0x57ad:	pop	r15
0x57af:	ret	


0x568e:	add	rsp, 0x28
0x5692:	mov	r9, r13
0x5695:	mov	r8, r12
0x5698:	mov	rcx, rbx
0x569b:	mov	rdi, rbp
0x569e:	mov	rdx, rax
0x56a1:	pop	rbx
0x56a2:	pop	rbp
0x56a3:	pop	r12
0x56a5:	pop	r13
0x56a7:	pop	r14
0x56a9:	pop	r15
0x56ab:	mov	esi, 1
0x56b0:	xor	eax, eax
0x56b2:	jmp	0x1a70


0x5776:	sub	rsp, 8
0x577a:	mov	r9, r13
0x577d:	push	r12
0x577f:	push	r15
0x5781:	push	r14
0x5783:	mov	r8, qword ptr [rsp + 0x20]
0x5788:	mov	rcx, rbx
0x578b:	mov	rdx, rax
0x578e:	mov	rdi, rbp
0x5791:	mov	esi, 1
0x5796:	xor	eax, eax
0x5798:	call	0x1a70


0x5642:	add	rsp, 0x28
0x5646:	mov	r8, r12
0x5649:	mov	rcx, rbx
0x564c:	mov	rdi, rbp
0x564f:	mov	rdx, rax
0x5652:	mov	esi, 1
0x5657:	pop	rbx
0x5658:	pop	rbp
0x5659:	pop	r12
0x565b:	pop	r13
0x565d:	pop	r14
0x565f:	pop	r15
0x5661:	xor	eax, eax
0x5663:	jmp	0x1a70


0x55fe:	add	rsp, 0x28
0x5602:	mov	rcx, rbx
0x5605:	mov	rdi, rbp
0x5608:	pop	rbx
0x5609:	pop	rbp
0x560a:	pop	r12
0x560c:	pop	r13
0x560e:	pop	r14
0x5610:	pop	r15
0x5612:	mov	rdx, rax
0x5615:	mov	esi, 1
0x561a:	xor	eax, eax
0x561c:	jmp	0x1a70


0x5520:	sub	rsp, 8
0x5524:	mov	r9, qword ptr [rsp + 0x18]
0x5529:	mov	rdx, rax
0x552c:	mov	rcx, rbx
0x552f:	mov	esi, 1
0x5534:	mov	rdi, rbp
0x5537:	xor	eax, eax
0x5539:	push	r9
0x553b:	push	r13
0x553d:	push	r12
0x553f:	push	r15
0x5541:	push	r14
0x5543:	mov	r9, qword ptr [rsp + 0x30]
0x5548:	mov	r8, qword ptr [rsp + 0x38]
0x554d:	call	0x1a70


0x56e2:	sub	rsp, 8
0x56e6:	push	r14
0x56e8:	mov	rdx, rax
0x56eb:	mov	r9, r13
0x56ee:	mov	r8, r12
0x56f1:	mov	rcx, rbx
0x56f4:	mov	rdi, rbp
0x56f7:	mov	esi, 1
0x56fc:	xor	eax, eax
0x56fe:	call	0x1a70


0x4430:	sub	rsp, 8
0x4434:	mov	rcx, rbp
0x4437:	mov	rsi, r13
0x443a:	push	qword ptr [rsp + 0x68]
0x443e:	push	qword ptr [rsp + 0x78]
0x4442:	mov	rdi, r14
0x4445:	push	0
0x4447:	mov	r9d, dword ptr [rsp + 0x98]
0x444f:	mov	r8d, dword ptr [rsp + 0x28]
0x4454:	mov	rdx, qword ptr [rsp + 0x30]
0x4459:	and	r9d, 0xfffffffd
0x445d:	call	0x3890


0x4462:	add	rsp, 0x20
0x4466:	mov	r15, rax
0x4469:	mov	rbx, qword ptr [rsp + 0xa8]
0x4471:	xor	rbx, qword ptr fs:[0x28]
0x447a:	mov	rax, r15
0x447d:	jne	0x4a83


0x4483:	add	rsp, 0xb8
0x448a:	pop	rbx
0x448b:	pop	rbp
0x448c:	pop	r12
0x448e:	pop	r13
0x4490:	pop	r14
0x4492:	pop	r15
0x4494:	ret	


0x4a83:	call	0x1830


0x4a2d:	sub	rsp, 8
0x4a31:	mov	r8d, 5
0x4a37:	mov	rcx, r11
0x4a3a:	push	qword ptr [rsp + 0x68]
0x4a3e:	push	qword ptr [rsp + 0x78]
0x4a42:	mov	rdi, r14
0x4a45:	push	qword ptr [rsp + 0x38]
0x4a49:	mov	r9d, dword ptr [rsp + 0x98]
0x4a51:	mov	rdx, qword ptr [rsp + 0x30]
0x4a56:	mov	rsi, qword ptr [rsp + 0x70]
0x4a5b:	call	0x3890


0x4a60:	add	rsp, 0x20
0x4a64:	mov	r15, rax
0x4a67:	jmp	0x4469


0x4469:	mov	rbx, qword ptr [rsp + 0xa8]
0x4471:	xor	rbx, qword ptr fs:[0x28]
0x447a:	mov	rax, r15
0x447d:	jne	0x4a83


0x1730:	push	qword ptr [rip + 0x2086da]
0x1736:	jmp	qword ptr [rip + 0x2086dc]


0x173c:	nop	dword ptr [rax]


0x1746:	push	0
0x174b:	jmp	0x1730


0x1756:	push	1
0x175b:	jmp	0x1730


0x1766:	push	2
0x176b:	jmp	0x1730


0x1776:	push	3
0x177b:	jmp	0x1730


0x1786:	push	4
0x178b:	jmp	0x1730


0x1796:	push	5
0x179b:	jmp	0x1730


0x17a6:	push	6
0x17ab:	jmp	0x1730


0x17b6:	push	7
0x17bb:	jmp	0x1730


0x17c6:	push	8
0x17cb:	jmp	0x1730


0x17d6:	push	9
0x17db:	jmp	0x1730


0x17e6:	push	0xa
0x17eb:	jmp	0x1730


0x17f6:	push	0xb
0x17fb:	jmp	0x1730


0x1806:	push	0xc
0x180b:	jmp	0x1730


0x1816:	push	0xd
0x181b:	jmp	0x1730


0x1826:	push	0xe
0x182b:	jmp	0x1730


0x1836:	push	0xf
0x183b:	jmp	0x1730


0x1846:	push	0x10
0x184b:	jmp	0x1730


0x1856:	push	0x11
0x185b:	jmp	0x1730


0x1866:	push	0x12
0x186b:	jmp	0x1730


0x1876:	push	0x13
0x187b:	jmp	0x1730


0x1886:	push	0x14
0x188b:	jmp	0x1730


0x1896:	push	0x15
0x189b:	jmp	0x1730


0x18a6:	push	0x16
0x18ab:	jmp	0x1730


0x18b6:	push	0x17
0x18bb:	jmp	0x1730


0x18c6:	push	0x18
0x18cb:	jmp	0x1730


0x18d6:	push	0x19
0x18db:	jmp	0x1730


0x18e6:	push	0x1a
0x18eb:	jmp	0x1730


0x18f6:	push	0x1b
0x18fb:	jmp	0x1730


0x1906:	push	0x1c
0x190b:	jmp	0x1730


0x1916:	push	0x1d
0x191b:	jmp	0x1730


0x1926:	push	0x1e
0x192b:	jmp	0x1730


0x1936:	push	0x1f
0x193b:	jmp	0x1730


0x1946:	push	0x20
0x194b:	jmp	0x1730


0x1956:	push	0x21
0x195b:	jmp	0x1730


0x1966:	push	0x22
0x196b:	jmp	0x1730


0x1976:	push	0x23
0x197b:	jmp	0x1730


0x1986:	push	0x24
0x198b:	jmp	0x1730


0x1996:	push	0x25
0x199b:	jmp	0x1730


0x19a6:	push	0x26
0x19ab:	jmp	0x1730


0x19b6:	push	0x27
0x19bb:	jmp	0x1730


0x19c6:	push	0x28
0x19cb:	jmp	0x1730


0x19d6:	push	0x29
0x19db:	jmp	0x1730


0x19e6:	push	0x2a
0x19eb:	jmp	0x1730


0x19f6:	push	0x2b
0x19fb:	jmp	0x1730


0x1a06:	push	0x2c
0x1a0b:	jmp	0x1730


0x1a16:	push	0x2d
0x1a1b:	jmp	0x1730


0x1a26:	push	0x2e
0x1a2b:	jmp	0x1730


0x1a36:	push	0x2f
0x1a3b:	jmp	0x1730


0x1a46:	push	0x30
0x1a4b:	jmp	0x1730


0x1a56:	push	0x31
0x1a5b:	jmp	0x1730


0x1a66:	push	0x32
0x1a6b:	jmp	0x1730


0x1a76:	push	0x33
0x1a7b:	jmp	0x1730


0x1a80:	jmp	qword ptr [rip + 0x20853a]




0x1a86:	push	0x34
0x1a8b:	jmp	0x1730


0x1a90:	jmp	qword ptr [rip + 0x208532]




0x1a96:	push	0x35
0x1a9b:	jmp	0x1730


0x1aa6:	push	0x36
0x1aab:	jmp	0x1730


0x25ba:	hlt	


0x25bb:	nop	dword ptr [rax + rax]


0x25f2:	nop	dword ptr [rax]
0x25f6:	nop	word ptr cs:[rax + rax]


0x2642:	nop	dword ptr [rax]
0x2646:	nop	word ptr cs:[rax + rax]


0x268a:	nop	word ptr [rax + rax]


0x269a:	nop	word ptr [rax + rax]


0x2725:	nop	
0x2726:	nop	word ptr cs:[rax + rax]


0x27b1:	nop	dword ptr [rax + rax]
0x27b6:	nop	word ptr cs:[rax + rax]


0x283f:	nop	


0x2913:	nop	dword ptr [rax]
0x2916:	nop	word ptr cs:[rax + rax]


0x2dd2:	nop	word ptr cs:[rax + rax]
0x2ddc:	nop	dword ptr [rax]


0x2dea:	nop	word ptr [rax + rax]


0x2f06:	nop	word ptr cs:[rax + rax]


0x2f83:	nop	dword ptr [rax]
0x2f86:	nop	word ptr cs:[rax + rax]


0x311d:	nop	dword ptr [rax]


0x316d:	nop	dword ptr [rax]


0x3178:	nop	dword ptr [rax + rax]


0x3188:	nop	dword ptr [rax + rax]


0x3234:	nop	word ptr cs:[rax + rax]
0x323e:	nop	


0x3245:	nop	
0x3246:	nop	word ptr cs:[rax + rax]


0x3272:	nop	word ptr cs:[rax + rax]
0x327c:	nop	dword ptr [rax]


0x32c2:	nop	dword ptr [rax]
0x32c6:	nop	word ptr cs:[rax + rax]


0x347e:	nop	


0x35f8:	nop	dword ptr [rax + rax]


0x360a:	nop	word ptr [rax + rax]


0x3619:	nop	dword ptr [rax]


0x366b:	nop	dword ptr [rax + rax]


0x36fe:	nop	


0x379f:	nop	


0x3887:	nop	word ptr [rax + rax]


0x3923:	mov	byte ptr [rsp + 0xe], 1
0x3928:	mov	byte ptr [rsp + 0x7c], 0
0x392d:	xor	r12d, r12d
0x3930:	mov	qword ptr [rsp + 0x50], 0
0x3939:	mov	byte ptr [rsp + 0xf], 1
0x393e:	mov	byte ptr [rsp + 0xd], 0
0x3943:	lea	rax, [rip + 0x393b]
0x394a:	mov	qword ptr [rsp + 0x18], 1
0x3953:	xor	r15d, r15d
0x3956:	mov	dword ptr [rsp + 8], 2
0x395e:	mov	qword ptr [rsp + 0x48], rax
0x3963:	xor	r11d, r11d
0x3966:	mov	rax, rbp
0x3969:	mov	r8d, r12d
0x396c:	mov	rbp, r11
0x396f:	mov	r11, rax
0x3972:	nop	word ptr [rax + rax]
0x3978:	cmp	r11, rbp
0x397b:	setne	r12b
0x397f:	cmp	r11, -1
0x3983:	jne	0x3992


0x3985:	mov	rax, qword ptr [rsp + 0x10]
0x398a:	cmp	byte ptr [rax + rbp], 0
0x398e:	setne	r12b
0x3992:	test	r12b, r12b
0x3995:	je	0x3ff0


0x3992:	test	r12b, r12b
0x3995:	je	0x3ff0


0x3ff0:	cmp	dword ptr [rsp + 8], 2
0x3ff5:	movzx	ebx, byte ptr [rsp + 0xf]
0x3ffa:	mov	r12d, r8d
0x3ffd:	mov	rbp, r11
0x4000:	sete	dl
0x4003:	mov	eax, ebx
0x4005:	test	r15, r15
0x4008:	sete	cl
0x400b:	and	eax, edx
0x400d:	and	al, cl
0x400f:	jne	0x4a76


0x399b:	cmp	dword ptr [rsp + 8], 2
0x39a0:	mov	rdi, qword ptr [rsp + 0x10]
0x39a5:	lea	r9, [rdi + rbp]
0x39a9:	setne	al
0x39ac:	and	al, byte ptr [rsp + 0xd]
0x39b0:	mov	r10d, eax
0x39b3:	je	0x3a60


0x4015:	mov	eax, ebx
0x4017:	xor	eax, 1
0x401a:	and	dl, al
0x401c:	je	0x498c


0x4a76:	mov	dword ptr [rsp + 8], 2
0x4a7e:	jmp	0x4419


0x3a60:	movzx	ebx, byte ptr [r9]
0x3a64:	cmp	bl, 0x7e
0x3a67:	ja	0x3d88


0x39b9:	mov	rax, qword ptr [rsp + 0x18]
0x39be:	test	rax, rax
0x39c1:	je	0x3df0


0x498c:	mov	rbx, qword ptr [rsp + 0x48]
0x4991:	test	rbx, rbx
0x4994:	je	0x49c2


0x4022:	cmp	byte ptr [rsp + 0x7c], 0
0x4027:	je	0x498a


0x4419:	cmp	byte ptr [rsp + 0xd], 0
0x441e:	je	0x4430


0x3a6d:	lea	rcx, [rip + 0x3898]
0x3a74:	movzx	edx, bl
0x3a77:	movsxd	rax, dword ptr [rcx + rdx*4]
0x3a7b:	add	rax, rcx
0x3a7e:	jmp	rax


0x3d88:	cmp	qword ptr [rsp + 0x58], 1
0x3d8e:	jne	0x4138


0x3df0:	movzx	ebx, byte ptr [r9]
0x3df4:	cmp	bl, 0x7e
0x3df7:	ja	0x3d80


0x39c7:	cmp	r11, -1
0x39cb:	lea	rbx, [rbp + rax]
0x39d0:	jne	0x3a00


0x49c2:	cmp	r13, r15
0x49c5:	jbe	0x4469


0x4996:	test	al, al
0x4998:	je	0x49c2


0x498a:	mov	eax, edx
0x498c:	mov	rbx, qword ptr [rsp + 0x48]
0x4991:	test	rbx, rbx
0x4994:	je	0x49c2


0x402d:	cmp	byte ptr [rsp + 0xe], 0
0x4032:	jne	0x4a2d


0x4420:	test	al, al
0x4422:	mov	eax, 4
0x4427:	cmove	eax, dword ptr [rsp + 8]
0x442c:	mov	dword ptr [rsp + 8], eax


0x3d94:	mov	qword ptr [rsp + 0x38], r11
0x3d99:	mov	byte ptr [rsp + 0x30], r8b
0x3d9e:	mov	byte ptr [rsp + 0x28], r10b
0x3da3:	call	0x1aa0


0x4138:	lea	rax, [rsp + 0xa0]
0x4140:	cmp	r11, -1
0x4144:	mov	qword ptr [rsp + 0xa0], 0
0x4150:	mov	qword ptr [rsp + 0x28], rax
0x4155:	jne	0x4184


0x3df9:	lea	rcx, [rip + 0x3708]
0x3e00:	movzx	edx, bl
0x3e03:	movsxd	rax, dword ptr [rcx + rdx*4]
0x3e07:	add	rax, rcx
0x3e0a:	jmp	rax


0x3d80:	xor	r10d, r10d
0x3d83:	nop	dword ptr [rax + rax]
0x3d88:	cmp	qword ptr [rsp + 0x58], 1
0x3d8e:	jne	0x4138


0x39d2:	cmp	rax, 1
0x39d6:	jbe	0x3a00


0x3a00:	cmp	rbx, r11
0x3a03:	mov	byte ptr [rsp + 0x28], r10b
0x3a08:	ja	0x3fc0


0x49cb:	mov	byte ptr [r14 + r15], 0
0x49d0:	jmp	0x4469


0x499a:	movzx	ecx, byte ptr [rbx]
0x499d:	mov	rax, rbx
0x49a0:	test	cl, cl
0x49a2:	je	0x49c2


0x4038:	test	r13, r13
0x403b:	sete	al
0x403e:	cmp	qword ptr [rsp + 0x50], 0
0x4044:	setne	dl
0x4047:	and	al, dl
0x4049:	je	0x4a6c


0x4157:	mov	rdi, qword ptr [rsp + 0x10]
0x415c:	mov	byte ptr [rsp + 0x40], r8b
0x4161:	mov	byte ptr [rsp + 0x38], r10b
0x4166:	mov	qword ptr [rsp + 0x30], r9
0x416b:	call	0x1820


0x4184:	lea	rax, [rsp + 0x9c]
0x418c:	xor	ecx, ecx
0x418e:	mov	byte ptr [rsp + 0x7e], bl
0x4192:	mov	byte ptr [rsp + 0x7d], r8b
0x4197:	mov	rbx, rcx
0x419a:	mov	qword ptr [rsp + 0x88], r9
0x41a2:	mov	qword ptr [rsp + 0x38], rax
0x41a7:	mov	byte ptr [rsp + 0x7f], r10b
0x41ac:	mov	qword ptr [rsp + 0x80], r15
0x41b4:	mov	qword ptr [rsp + 0x40], r14
0x41b9:	mov	qword ptr [rsp + 0x70], r13
0x41be:	mov	qword ptr [rsp + 0x30], r11
0x41c3:	mov	rax, qword ptr [rsp + 0x10]
0x41c8:	lea	r14, [rbp + rbx]
0x41cd:	mov	rdx, qword ptr [rsp + 0x30]
0x41d2:	mov	rcx, qword ptr [rsp + 0x28]
0x41d7:	mov	rdi, qword ptr [rsp + 0x38]
0x41dc:	lea	r13, [rax + r14]
0x41e0:	sub	rdx, r14
0x41e3:	mov	rsi, r13
0x41e6:	call	0x6380


0x39d8:	mov	byte ptr [rsp + 0x38], r8b
0x39dd:	mov	byte ptr [rsp + 0x30], r10b
0x39e2:	mov	qword ptr [rsp + 0x28], r9
0x39e7:	call	0x1820


0x3a0e:	mov	rdx, qword ptr [rsp + 0x18]
0x3a13:	mov	rsi, qword ptr [rsp + 0x48]
0x3a18:	mov	rdi, r9
0x3a1b:	mov	qword ptr [rsp + 0x40], r11
0x3a20:	mov	byte ptr [rsp + 0x38], r8b
0x3a25:	mov	qword ptr [rsp + 0x30], r9
0x3a2a:	call	0x1900


0x3fc0:	xor	r10d, r10d
0x3fc3:	jmp	0x3a60


0x49a4:	mov	rdx, r15
0x49a7:	sub	rax, r15
0x49aa:	cmp	r13, rdx
0x49ad:	jbe	0x49b3


0x4a6c:	movzx	eax, byte ptr [rsp + 0x7c]
0x4a71:	jmp	0x498c


0x404f:	mov	r13, qword ptr [rsp + 0x50]
0x4054:	lea	rbx, [rip + 0x322a]
0x405b:	mov	byte ptr [r14], 0x27
0x405f:	mov	dword ptr [rsp + 8], 2
0x4067:	mov	r15d, 1
0x406d:	mov	qword ptr [rsp + 0x18], 1
0x4076:	mov	byte ptr [rsp + 0xf], 0
0x407b:	mov	qword ptr [rsp + 0x48], rbx
0x4080:	mov	byte ptr [rsp + 0x7c], al
0x4084:	jmp	0x3963


0x49b3:	add	rdx, 1
0x49b7:	movzx	ecx, byte ptr [rax + rdx]
0x49bb:	test	cl, cl
0x49bd:	jne	0x49aa


0x49af:	mov	byte ptr [r14 + rdx], cl
0x49b3:	add	rdx, 1
0x49b7:	movzx	ecx, byte ptr [rax + rdx]
0x49bb:	test	cl, cl
0x49bd:	jne	0x49aa


0x3963:	xor	r11d, r11d
0x3966:	mov	rax, rbp
0x3969:	mov	r8d, r12d
0x396c:	mov	rbp, r11
0x396f:	mov	r11, rax
0x3972:	nop	word ptr [rax + rax]
0x3978:	cmp	r11, rbp
0x397b:	setne	r12b
0x397f:	cmp	r11, -1
0x3983:	jne	0x3992


0x49bf:	mov	r15, rdx
0x49c2:	cmp	r13, r15
0x49c5:	jbe	0x4469


0x49aa:	cmp	r13, rdx
0x49ad:	jbe	0x49b3


0x3a2f:	test	eax, eax
0x3a31:	mov	r9, qword ptr [rsp + 0x30]
0x3a36:	movzx	r8d, byte ptr [rsp + 0x38]
0x3a3c:	mov	r11, qword ptr [rsp + 0x40]
0x3a41:	jne	0x3fc0


0x3a47:	cmp	byte ptr [rsp + 0xf], 0
0x3a4c:	movzx	r10d, byte ptr [rsp + 0x28]
0x3a52:	jne	0x49d5


0x49d5:	cmp	dword ptr [rsp + 8], 2
0x49da:	movzx	ebx, byte ptr [rsp + 0xf]
0x49df:	mov	rbp, r11
0x49e2:	sete	al
0x49e5:	mov	byte ptr [rsp + 0xd], bl
0x49e9:	jmp	0x4419


0x41eb:	test	rax, rax
0x41ee:	mov	r15, rax
0x41f1:	je	0x4241


0x4241:	mov	edx, r12d
0x4244:	mov	rdi, rbx
0x4247:	movzx	r8d, byte ptr [rsp + 0x7d]
0x424d:	xor	edx, 1
0x4250:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4255:	movzx	r10d, byte ptr [rsp + 0x7f]
0x425b:	and	dl, byte ptr [rsp + 0xd]
0x425f:	mov	r15, qword ptr [rsp + 0x80]
0x4267:	mov	r14, qword ptr [rsp + 0x40]
0x426c:	mov	r13, qword ptr [rsp + 0x70]
0x4271:	mov	r11, qword ptr [rsp + 0x30]
0x4276:	cmp	rdi, 1
0x427a:	jbe	0x487b


0x41f3:	cmp	rax, -1
0x41f7:	je	0x4815


0x487b:	mov	eax, edx
0x487d:	jmp	0x3dd7


0x4280:	mov	rcx, rdi
0x4283:	xor	esi, esi
0x4285:	movzx	r9d, byte ptr [rsp + 0xf]
0x428b:	add	rcx, rbp
0x428e:	mov	rdi, qword ptr [rsp + 0x10]
0x4293:	jmp	0x434e


0x4815:	mov	rdi, rbx
0x4818:	movzx	r8d, byte ptr [rsp + 0x7d]
0x481e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4823:	movzx	r10d, byte ptr [rsp + 0x7f]
0x4829:	mov	r15, qword ptr [rsp + 0x80]
0x4831:	xor	r12d, r12d
0x4834:	mov	r14, qword ptr [rsp + 0x40]
0x4839:	mov	r13, qword ptr [rsp + 0x70]
0x483e:	mov	r11, qword ptr [rsp + 0x30]
0x4843:	movzx	edx, byte ptr [rsp + 0xd]
0x4848:	jmp	0x4276


0x41fd:	cmp	rax, -2
0x4201:	je	0x47a1


0x3dd7:	test	al, al
0x3dd9:	jne	0x4771


0x434e:	test	dl, dl
0x4350:	jne	0x42a0


0x4276:	cmp	rdi, 1
0x427a:	jbe	0x487b


0x47a1:	mov	r11, qword ptr [rsp + 0x30]
0x47a6:	mov	rsi, r14
0x47a9:	mov	rcx, r13
0x47ac:	mov	rax, rbx
0x47af:	mov	rdi, rbx
0x47b2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x47b8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x47bd:	mov	r9, qword ptr [rsp + 0x88]
0x47c5:	cmp	rsi, r11
0x47c8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x47ce:	mov	r15, qword ptr [rsp + 0x80]
0x47d6:	mov	r14, qword ptr [rsp + 0x40]
0x47db:	mov	r13, qword ptr [rsp + 0x70]
0x47e0:	jae	0x4808


0x4207:	cmp	dword ptr [rsp + 8], 2
0x420c:	sete	al
0x420f:	and	al, byte ptr [rsp + 0xf]
0x4213:	jne	0x43b0


0x3ddf:	cmp	dword ptr [rsp + 8], 2
0x3de4:	sete	dl
0x3de7:	jmp	0x3ab8


0x4771:	movzx	edx, byte ptr [rsp + 0xd]
0x4776:	xor	r12d, r12d
0x4779:	jmp	0x4280


0x4356:	mov	eax, esi
0x4358:	xor	eax, 1
0x435b:	and	eax, r8d
0x435e:	test	r10b, r10b
0x4361:	je	0x4371


0x42a0:	cmp	dword ptr [rsp + 8], 2
0x42a5:	sete	al
0x42a8:	test	r9b, r9b
0x42ab:	jne	0x4760


0x47e2:	cmp	byte ptr [rcx], 0
0x47e5:	jne	0x47f7


0x4808:	movzx	edx, byte ptr [rsp + 0xd]
0x480d:	xor	r12d, r12d
0x4810:	jmp	0x4276


0x4219:	mov	edi, dword ptr [rsp + 0x9c]
0x4220:	call	0x1a90


0x43b0:	cmp	r15, 1
0x43b4:	je	0x4219


0x3ab8:	cmp	byte ptr [rsp + 0xd], 1
0x3abd:	jne	0x3bd2


0x4371:	add	rbp, 1
0x4375:	cmp	rbp, rcx
0x4378:	jae	0x3afc


0x4363:	cmp	r13, r15
0x4366:	jbe	0x436d


0x42b1:	mov	esi, r8d
0x42b4:	xor	esi, 1
0x42b7:	and	al, sil
0x42ba:	je	0x42eb


0x4760:	movzx	ebx, byte ptr [rsp + 0xf]
0x4765:	mov	rbp, r11
0x4768:	mov	byte ptr [rsp + 0xd], bl
0x476c:	jmp	0x4419


0x47e7:	jmp	0x4808


0x47f7:	add	rax, 1
0x47fb:	lea	rdx, [rbp + rax]
0x4800:	cmp	r11, rdx
0x4803:	ja	0x47f0


0x43ba:	mov	rdi, qword ptr [rsp + 0x10]
0x43bf:	lea	rcx, [rdi + r15]
0x43c3:	lea	rdx, [rdi + r14 + 1]
0x43c8:	lea	r8, [rcx + r14]
0x43cc:	jmp	0x43dd


0x3ac3:	test	dl, dl
0x3ac5:	jne	0x3bd2


0x3bd2:	cmp	byte ptr [rsp + 0xf], 0
0x3bd7:	jne	0x3acb


0x437e:	test	al, al
0x4380:	je	0x477e


0x3afc:	test	al, al
0x3afe:	je	0x3b20


0x436d:	add	r15, 1
0x4371:	add	rbp, 1
0x4375:	cmp	rbp, rcx
0x4378:	jae	0x3afc


0x4368:	mov	byte ptr [r14 + r15], 0x5c
0x436d:	add	r15, 1
0x4371:	add	rbp, 1
0x4375:	cmp	rbp, rcx
0x4378:	jae	0x3afc


0x42eb:	cmp	r13, r15
0x42ee:	jbe	0x42f5


0x42bc:	cmp	r13, r15
0x42bf:	jbe	0x42c6


0x4805:	mov	rdi, rax
0x4808:	movzx	edx, byte ptr [rsp + 0xd]
0x480d:	xor	r12d, r12d
0x4810:	jmp	0x4276


0x47f0:	cmp	byte ptr [r9 + rax], 0
0x47f5:	je	0x4805


0x43dd:	movzx	ecx, byte ptr [rdx]
0x43e0:	sub	ecx, 0x5b
0x43e3:	cmp	cl, 0x21
0x43e6:	ja	0x43d0


0x3acb:	mov	rsi, qword ptr [rsp + 0x20]
0x3ad0:	test	rsi, rsi
0x3ad3:	je	0x3ae9


0x3bdd:	jmp	0x3ae9


0x477e:	xor	r10d, r10d
0x4781:	jmp	0x433d


0x4386:	cmp	r13, r15
0x4389:	jbe	0x4390


0x3b20:	cmp	r15, r13
0x3b23:	jae	0x3b29


0x3b00:	cmp	r13, r15
0x3b03:	jbe	0x3b0a


0x42f5:	lea	rax, [r15 + 1]
0x42f9:	cmp	r13, rax
0x42fc:	jbe	0x430b


0x42f0:	mov	byte ptr [r14 + r15], 0x5c
0x42f5:	lea	rax, [r15 + 1]
0x42f9:	cmp	r13, rax
0x42fc:	jbe	0x430b


0x42c6:	lea	rsi, [r15 + 1]
0x42ca:	cmp	r13, rsi
0x42cd:	jbe	0x42d5


0x42c1:	mov	byte ptr [r14 + r15], 0x27
0x42c6:	lea	rsi, [r15 + 1]
0x42ca:	cmp	r13, rsi
0x42cd:	jbe	0x42d5


0x43e8:	mov	esi, 1
0x43ed:	shl	rsi, cl
0x43f0:	mov	rcx, rsi
0x43f3:	movabs	rsi, 0x20000002b
0x43fd:	test	rcx, rsi
0x4400:	je	0x43d0


0x43d0:	add	rdx, 1
0x43d4:	cmp	r8, rdx
0x43d7:	je	0x4219


0x3ae9:	test	r10b, r10b
0x3aec:	jne	0x3c33


0x3ad5:	mov	edx, ebx
0x3ad7:	shr	dl, 5
0x3ada:	movzx	edx, dl
0x3add:	mov	edx, dword ptr [rsi + rdx*4]
0x3ae0:	bt	edx, ebx
0x3ae3:	jb	0x3c33


0x433d:	cmp	r13, r15
0x4340:	jbe	0x4346


0x4390:	lea	rax, [r15 + 1]
0x4394:	cmp	r13, rax
0x4397:	jbe	0x439f


0x438b:	mov	byte ptr [r14 + r15], 0x27
0x4390:	lea	rax, [r15 + 1]
0x4394:	cmp	r13, rax
0x4397:	jbe	0x439f


0x3b25:	mov	byte ptr [r14 + r15], bl
0x3b29:	movzx	edi, byte ptr [rsp + 0xe]
0x3b2e:	add	r15, 1
0x3b32:	mov	eax, 0
0x3b37:	test	r12b, r12b
0x3b3a:	cmove	edi, eax
0x3b3d:	mov	byte ptr [rsp + 0xe], dil
0x3b42:	jmp	0x3978


0x3b29:	movzx	edi, byte ptr [rsp + 0xe]
0x3b2e:	add	r15, 1
0x3b32:	mov	eax, 0
0x3b37:	test	r12b, r12b
0x3b3a:	cmove	edi, eax
0x3b3d:	mov	byte ptr [rsp + 0xe], dil
0x3b42:	jmp	0x3978


0x3b0a:	lea	rax, [r15 + 1]
0x3b0e:	cmp	r13, rax
0x3b11:	jbe	0x3b19


0x3b05:	mov	byte ptr [r14 + r15], 0x27
0x3b0a:	lea	rax, [r15 + 1]
0x3b0e:	cmp	r13, rax
0x3b11:	jbe	0x3b19


0x430b:	lea	rax, [r15 + 2]
0x430f:	cmp	r13, rax
0x4312:	jbe	0x4324


0x42fe:	mov	eax, ebx
0x4300:	shr	al, 6
0x4303:	add	eax, 0x30
0x4306:	mov	byte ptr [r14 + r15 + 1], al
0x430b:	lea	rax, [r15 + 2]
0x430f:	cmp	r13, rax
0x4312:	jbe	0x4324


0x42d5:	lea	rsi, [r15 + 2]
0x42d9:	cmp	r13, rsi
0x42dc:	jbe	0x42e4


0x42cf:	mov	byte ptr [r14 + r15 + 1], 0x24
0x42d5:	lea	rsi, [r15 + 2]
0x42d9:	cmp	r13, rsi
0x42dc:	jbe	0x42e4


0x4402:	mov	r14, qword ptr [rsp + 0x40]
0x4407:	mov	r13, qword ptr [rsp + 0x70]
0x440c:	mov	rbp, qword ptr [rsp + 0x30]
0x4411:	mov	dword ptr [rsp + 8], 2
0x4419:	cmp	byte ptr [rsp + 0xd], 0
0x441e:	je	0x4430


0x3af2:	xor	eax, 1
0x3af5:	add	rbp, 1
0x3af9:	and	eax, r8d
0x3afc:	test	al, al
0x3afe:	je	0x3b20


0x3c33:	cmp	dword ptr [rsp + 8], 2
0x3c38:	sete	dl
0x3c3b:	cmp	byte ptr [rsp + 0xf], 0
0x3c40:	mov	eax, edx
0x3c42:	jne	0x4498


0x4346:	movzx	ebx, byte ptr [rdi + rbp]
0x434a:	add	r15, 1
0x434e:	test	dl, dl
0x4350:	jne	0x42a0


0x4342:	mov	byte ptr [r14 + r15], bl
0x4346:	movzx	ebx, byte ptr [rdi + rbp]
0x434a:	add	r15, 1
0x434e:	test	dl, dl
0x4350:	jne	0x42a0


0x439f:	add	r15, 2
0x43a3:	xor	r10d, r10d
0x43a6:	xor	r8d, r8d
0x43a9:	jmp	0x433d


0x4399:	mov	byte ptr [r14 + r15 + 1], 0x27
0x439f:	add	r15, 2
0x43a3:	xor	r10d, r10d
0x43a6:	xor	r8d, r8d
0x43a9:	jmp	0x433d


0x3978:	cmp	r11, rbp
0x397b:	setne	r12b
0x397f:	cmp	r11, -1
0x3983:	jne	0x3992


0x3b19:	add	r15, 2
0x3b1d:	xor	r8d, r8d
0x3b20:	cmp	r15, r13
0x3b23:	jae	0x3b29


0x3b13:	mov	byte ptr [r14 + r15 + 1], 0x27
0x3b19:	add	r15, 2
0x3b1d:	xor	r8d, r8d
0x3b20:	cmp	r15, r13
0x3b23:	jae	0x3b29


0x4324:	and	ebx, 7
0x4327:	add	rbp, 1
0x432b:	add	r15, 3
0x432f:	add	ebx, 0x30
0x4332:	cmp	rbp, rcx
0x4335:	jae	0x3b20


0x4314:	mov	eax, ebx
0x4316:	shr	al, 3
0x4319:	and	eax, 7
0x431c:	add	eax, 0x30
0x431f:	mov	byte ptr [r14 + r15 + 2], al
0x4324:	and	ebx, 7
0x4327:	add	rbp, 1
0x432b:	add	r15, 3
0x432f:	add	ebx, 0x30
0x4332:	cmp	rbp, rcx
0x4335:	jae	0x3b20


0x42e4:	add	r15, 3
0x42e8:	mov	r8d, eax
0x42eb:	cmp	r13, r15
0x42ee:	jbe	0x42f5


0x42de:	mov	byte ptr [r14 + r15 + 2], 0x27
0x42e4:	add	r15, 3
0x42e8:	mov	r8d, eax
0x42eb:	cmp	r13, r15
0x42ee:	jbe	0x42f5


0x3c48:	mov	eax, r8d
0x3c4b:	xor	eax, 1
0x3c4e:	and	al, dl
0x3c50:	je	0x3c81


0x4498:	mov	rbp, r11
0x449b:	jmp	0x4419


0x433b:	mov	esi, edx
0x433d:	cmp	r13, r15
0x4340:	jbe	0x4346


0x3c81:	cmp	r13, r15
0x3c84:	jbe	0x3c8b


0x3c52:	cmp	r13, r15
0x3c55:	jbe	0x3c5c


0x3c8b:	add	r15, 1
0x3c8f:	add	rbp, 1
0x3c93:	jmp	0x3b20


0x3c86:	mov	byte ptr [r14 + r15], 0x5c
0x3c8b:	add	r15, 1
0x3c8f:	add	rbp, 1
0x3c93:	jmp	0x3b20


0x3c5c:	lea	rdx, [r15 + 1]
0x3c60:	cmp	r13, rdx
0x3c63:	jbe	0x3c6b


0x3c57:	mov	byte ptr [r14 + r15], 0x27
0x3c5c:	lea	rdx, [r15 + 1]
0x3c60:	cmp	r13, rdx
0x3c63:	jbe	0x3c6b


0x3c6b:	lea	rdx, [r15 + 2]
0x3c6f:	cmp	r13, rdx
0x3c72:	jbe	0x3c7a


0x3c65:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3c6b:	lea	rdx, [r15 + 2]
0x3c6f:	cmp	r13, rdx
0x3c72:	jbe	0x3c7a


0x3c7a:	add	r15, 3
0x3c7e:	mov	r8d, eax
0x3c81:	cmp	r13, r15
0x3c84:	jbe	0x3c8b


0x3c74:	mov	byte ptr [r14 + r15 + 2], 0x27
0x3c7a:	add	r15, 3
0x3c7e:	mov	r8d, eax
0x3c81:	cmp	r13, r15
0x3c84:	jbe	0x3c8b


0x4225:	mov	rdi, qword ptr [rsp + 0x28]
0x422a:	test	eax, eax
0x422c:	mov	eax, 0
0x4231:	cmove	r12d, eax
0x4235:	add	rbx, r15
0x4238:	call	0x1a80


0x423d:	test	eax, eax
0x423f:	je	0x41c3


0x41c3:	mov	rax, qword ptr [rsp + 0x10]
0x41c8:	lea	r14, [rbp + rbx]
0x41cd:	mov	rdx, qword ptr [rsp + 0x30]
0x41d2:	mov	rcx, qword ptr [rsp + 0x28]
0x41d7:	mov	rdi, qword ptr [rsp + 0x38]
0x41dc:	lea	r13, [rax + r14]
0x41e0:	sub	rdx, r14
0x41e3:	mov	rsi, r13
0x41e6:	call	0x6380


0x39ec:	movzx	r8d, byte ptr [rsp + 0x38]
0x39f2:	movzx	r10d, byte ptr [rsp + 0x30]
0x39f8:	mov	r11, rax
0x39fb:	mov	r9, qword ptr [rsp + 0x28]
0x3a00:	cmp	rbx, r11
0x3a03:	mov	byte ptr [rsp + 0x28], r10b
0x3a08:	ja	0x3fc0


0x4170:	movzx	r8d, byte ptr [rsp + 0x40]
0x4176:	movzx	r10d, byte ptr [rsp + 0x38]
0x417c:	mov	r11, rax
0x417f:	mov	r9, qword ptr [rsp + 0x30]
0x4184:	lea	rax, [rsp + 0x9c]
0x418c:	xor	ecx, ecx
0x418e:	mov	byte ptr [rsp + 0x7e], bl
0x4192:	mov	byte ptr [rsp + 0x7d], r8b
0x4197:	mov	rbx, rcx
0x419a:	mov	qword ptr [rsp + 0x88], r9
0x41a2:	mov	qword ptr [rsp + 0x38], rax
0x41a7:	mov	byte ptr [rsp + 0x7f], r10b
0x41ac:	mov	qword ptr [rsp + 0x80], r15
0x41b4:	mov	qword ptr [rsp + 0x40], r14
0x41b9:	mov	qword ptr [rsp + 0x70], r13
0x41be:	mov	qword ptr [rsp + 0x30], r11
0x41c3:	mov	rax, qword ptr [rsp + 0x10]
0x41c8:	lea	r14, [rbp + rbx]
0x41cd:	mov	rdx, qword ptr [rsp + 0x30]
0x41d2:	mov	rcx, qword ptr [rsp + 0x28]
0x41d7:	mov	rdi, qword ptr [rsp + 0x38]
0x41dc:	lea	r13, [rax + r14]
0x41e0:	sub	rdx, r14
0x41e3:	mov	rsi, r13
0x41e6:	call	0x6380


0x3da8:	mov	rcx, qword ptr [rax]
0x3dab:	movzx	edx, bl
0x3dae:	movzx	r10d, byte ptr [rsp + 0x28]
0x3db4:	movzx	r8d, byte ptr [rsp + 0x30]
0x3dba:	mov	r11, qword ptr [rsp + 0x38]
0x3dbf:	mov	edi, 1
0x3dc4:	movzx	eax, word ptr [rcx + rdx*2]
0x3dc8:	and	ax, 0x4000
0x3dcc:	setne	r12b
0x3dd0:	sete	al
0x3dd3:	and	al, byte ptr [rsp + 0xd]
0x3dd7:	test	al, al
0x3dd9:	jne	0x4771


0x3a80:	xor	r10d, r10d
0x3a83:	cmp	r11, 1
0x3a87:	setne	al
0x3a8a:	cmp	r11, -1
0x3a8e:	jne	0x3a9c


0x3a90:	mov	rax, qword ptr [rsp + 0x10]
0x3a95:	cmp	byte ptr [rax + 1], 0
0x3a99:	setne	al
0x3a9c:	cmp	dword ptr [rsp + 8], 2
0x3aa1:	sete	dl
0x3aa4:	test	al, al
0x3aa6:	je	0x3cf8


0x3a9c:	cmp	dword ptr [rsp + 8], 2
0x3aa1:	sete	dl
0x3aa4:	test	al, al
0x3aa6:	je	0x3cf8


0x3cf8:	test	rbp, rbp
0x3cfb:	jne	0x3aac


0x3aac:	xor	r12d, r12d
0x3aaf:	xor	eax, eax
0x3ab1:	nop	dword ptr [rax]
0x3ab8:	cmp	byte ptr [rsp + 0xd], 1
0x3abd:	jne	0x3bd2


0x3d01:	movzx	eax, byte ptr [rsp + 0xf]
0x3d06:	and	al, dl
0x3d08:	je	0x3ab8


0x3d0e:	mov	rbp, r11
0x3d11:	mov	dword ptr [rsp + 8], 2
0x3d19:	jmp	0x4419


0x4118:	cmp	byte ptr [rsp + 0xf], 0
0x411d:	jne	0x4940


0x3b60:	cmp	eax, 5
0x3b63:	je	0x40d8


0x4123:	xor	r12d, r12d
0x4126:	xor	eax, eax
0x4128:	mov	ebx, 0x3f
0x412d:	jmp	0x3ae9


0x4940:	mov	rbp, r11
0x4943:	movzx	eax, byte ptr [rsp + 0xf]
0x4948:	jmp	0x4419


0x40d8:	test	byte ptr [rsp + 0x78], 4
0x40dd:	je	0x4100


0x3b69:	cmp	eax, 2
0x3b6c:	mov	ebx, 0x3f
0x3b71:	sete	dl
0x3b74:	xor	r12d, r12d
0x3b77:	xor	eax, eax
0x3b79:	jmp	0x3ab8


0x4100:	xor	edx, edx
0x4102:	xor	r12d, r12d
0x4105:	xor	eax, eax
0x4107:	mov	ebx, 0x3f
0x410c:	jmp	0x3ab8


0x40df:	lea	rcx, [rbp + 2]
0x40e3:	cmp	rcx, r11
0x40e6:	jae	0x4100


0x40e8:	mov	rax, qword ptr [rsp + 0x10]
0x40ed:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x40f2:	je	0x4882


0x4882:	movzx	ebx, byte ptr [rax + rcx]
0x4886:	cmp	bl, 0x3e
0x4889:	ja	0x4100


0x488f:	movabs	rax, 0x7000a38200000000
0x4899:	bt	rax, rbx
0x489d:	jae	0x4100


0x48a3:	cmp	byte ptr [rsp + 0xf], 0
0x48a8:	jne	0x4a92


0x48ae:	cmp	r13, r15
0x48b1:	jbe	0x48b8


0x4a92:	mov	rbp, r11
0x4a95:	jmp	0x4430


0x48b8:	lea	rax, [r15 + 1]
0x48bc:	cmp	r13, rax
0x48bf:	jbe	0x48c7


0x48b3:	mov	byte ptr [r14 + r15], 0x3f
0x48b8:	lea	rax, [r15 + 1]
0x48bc:	cmp	r13, rax
0x48bf:	jbe	0x48c7


0x48c7:	lea	rax, [r15 + 2]
0x48cb:	cmp	r13, rax
0x48ce:	jbe	0x48d6


0x48c1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x48c7:	lea	rax, [r15 + 2]
0x48cb:	cmp	r13, rax
0x48ce:	jbe	0x48d6


0x48d6:	lea	rax, [r15 + 3]
0x48da:	cmp	r13, rax
0x48dd:	jbe	0x48e5


0x48d0:	mov	byte ptr [r14 + r15 + 2], 0x22
0x48d6:	lea	rax, [r15 + 3]
0x48da:	cmp	r13, rax
0x48dd:	jbe	0x48e5


0x48e5:	add	r15, 4
0x48e9:	xor	edx, edx
0x48eb:	xor	r12d, r12d
0x48ee:	xor	eax, eax
0x48f0:	mov	rbp, rcx
0x48f3:	jmp	0x3ab8


0x48df:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x48e5:	add	r15, 4
0x48e9:	xor	edx, edx
0x48eb:	xor	r12d, r12d
0x48ee:	xor	eax, eax
0x48f0:	mov	rbp, rcx
0x48f3:	jmp	0x3ab8


0x4090:	cmp	byte ptr [rsp + 0xf], 0
0x4095:	jne	0x4940


0x3b8e:	mov	byte ptr [rsp + 0x7c], r12b
0x3b93:	xor	edx, edx
0x3b95:	xor	eax, eax
0x3b97:	mov	ebx, 0x27
0x3b9c:	jmp	0x3ab8


0x409b:	test	r13, r13
0x409e:	je	0x44a0


0x44a0:	cmp	r13, r15
0x44a3:	jbe	0x44aa


0x40a4:	xor	edx, edx
0x40a6:	cmp	qword ptr [rsp + 0x50], 0
0x40ac:	jne	0x44a0


0x44aa:	lea	rax, [r15 + 1]
0x44ae:	cmp	r13, rax
0x44b1:	jbe	0x44b9


0x44a5:	mov	byte ptr [r14 + r15], 0x27
0x44aa:	lea	rax, [r15 + 1]
0x44ae:	cmp	r13, rax
0x44b1:	jbe	0x44b9


0x40b2:	mov	qword ptr [rsp + 0x50], r13
0x40b7:	add	r15, 3
0x40bb:	xor	eax, eax
0x40bd:	mov	byte ptr [rsp + 0x7c], r12b
0x40c2:	xor	r8d, r8d
0x40c5:	mov	r13, rdx
0x40c8:	mov	ebx, 0x27
0x40cd:	jmp	0x3ae9


0x44b9:	lea	rax, [r15 + 2]
0x44bd:	cmp	r13, rax
0x44c0:	jbe	0x4ab2


0x44b3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x44b9:	lea	rax, [r15 + 2]
0x44bd:	cmp	r13, rax
0x44c0:	jbe	0x4ab2


0x4ab2:	mov	rdx, r13
0x4ab5:	mov	r13, qword ptr [rsp + 0x50]
0x4aba:	jmp	0x40b2


0x44c6:	mov	rdx, r13
0x44c9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x44cf:	mov	r13, qword ptr [rsp + 0x50]
0x44d4:	jmp	0x40b2


0x3bc4:	cmp	byte ptr [rsp + 0xd], 0
0x3bc9:	jne	0x3c30


0x3bcb:	mov	ebx, edx
0x3bcd:	xor	r12d, r12d
0x3bd0:	xor	eax, eax
0x3bd2:	cmp	byte ptr [rsp + 0xf], 0
0x3bd7:	jne	0x3acb


0x3c30:	xor	r12d, r12d
0x3c33:	cmp	dword ptr [rsp + 8], 2
0x3c38:	sete	dl
0x3c3b:	cmp	byte ptr [rsp + 0xf], 0
0x3c40:	mov	eax, edx
0x3c42:	jne	0x4498


0x3fd0:	cmp	byte ptr [rsp + 0xf], 0
0x3fd5:	jne	0x4940


0x3c03:	cmp	byte ptr [rsp + 0xd], 0
0x3c08:	je	0x3e20


0x3fdb:	add	rbp, 1
0x3fdf:	mov	eax, r8d
0x3fe2:	xor	r12d, r12d
0x3fe5:	mov	ebx, 0x5c
0x3fea:	jmp	0x3afc


0x3e20:	mov	edx, 0x5c
0x3e25:	mov	ebx, 0x5c
0x3e2a:	jmp	0x3bc4


0x3c0e:	cmp	byte ptr [rsp + 0xf], 0
0x3c13:	je	0x3e20


0x3c19:	cmp	qword ptr [rsp + 0x18], 0
0x3c1f:	jne	0x3fdb


0x3c25:	mov	ebx, 0x5c
0x3c2a:	nop	word ptr [rax + rax]
0x3c30:	xor	r12d, r12d
0x3c33:	cmp	dword ptr [rsp + 8], 2
0x3c38:	sete	dl
0x3c3b:	cmp	byte ptr [rsp + 0xf], 0
0x3c40:	mov	eax, edx
0x3c42:	jne	0x4498


0x3cab:	xor	edx, edx
0x3cad:	test	byte ptr [rsp + 0x78], 1
0x3cb2:	je	0x3bcb


0x3e73:	cmp	dword ptr [rsp + 8], 2
0x3e78:	sete	dl
0x3e7b:	cmp	byte ptr [rsp + 0xf], 0
0x3e80:	jne	0x4a1a


0x3cb8:	add	rbp, 1
0x3cbc:	jmp	0x3978


0x3e86:	mov	eax, r8d
0x3e89:	mov	rcx, r15
0x3e8c:	xor	eax, 1
0x3e8f:	and	al, dl
0x3e91:	je	0x3ec0


0x4a1a:	movzx	ebx, byte ptr [rsp + 0xf]
0x4a1f:	mov	rbp, r11
0x4a22:	mov	eax, edx
0x4a24:	mov	byte ptr [rsp + 0xd], bl
0x4a28:	jmp	0x4419


0x3ec0:	cmp	r13, rcx
0x3ec3:	jbe	0x3eca


0x3e93:	cmp	r13, r15
0x3e96:	jbe	0x3e9d


0x3eca:	cmp	dword ptr [rsp + 8], 2
0x3ecf:	lea	r15, [rcx + 1]
0x3ed3:	je	0x44d9


0x3ec5:	mov	byte ptr [r14 + rcx], 0x5c
0x3eca:	cmp	dword ptr [rsp + 8], 2
0x3ecf:	lea	r15, [rcx + 1]
0x3ed3:	je	0x44d9


0x3e9d:	lea	rcx, [r15 + 1]
0x3ea1:	cmp	r13, rcx
0x3ea4:	jbe	0x3eac


0x3e98:	mov	byte ptr [r14 + r15], 0x27
0x3e9d:	lea	rcx, [r15 + 1]
0x3ea1:	cmp	r13, rcx
0x3ea4:	jbe	0x3eac


0x44d9:	mov	eax, r12d
0x44dc:	mov	ebx, 0x30
0x44e1:	xor	r12d, r12d
0x44e4:	jmp	0x3ae9


0x3ed9:	lea	rax, [rbp + 1]
0x3edd:	cmp	rax, r11
0x3ee0:	jae	0x3efb


0x3eac:	lea	rcx, [r15 + 2]
0x3eb0:	cmp	r13, rcx
0x3eb3:	ja	0x44e9


0x3ea6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3eac:	lea	rcx, [r15 + 2]
0x3eb0:	cmp	r13, rcx
0x3eb3:	ja	0x44e9


0x3ee2:	mov	rax, qword ptr [rsp + 0x10]
0x3ee7:	movzx	eax, byte ptr [rax + rbp + 1]
0x3eec:	mov	byte ptr [rsp + 0x28], al
0x3ef0:	sub	eax, 0x30
0x3ef3:	cmp	al, 9
0x3ef5:	jbe	0x4729


0x3efb:	mov	eax, r12d
0x3efe:	mov	ebx, 0x30
0x3f03:	xor	r12d, r12d
0x3f06:	jmp	0x3ab8


0x3eb9:	lea	rcx, [r15 + 3]
0x3ebd:	mov	r8d, eax
0x3ec0:	cmp	r13, rcx
0x3ec3:	jbe	0x3eca


0x44e9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x44ef:	jmp	0x3eb9


0x4729:	cmp	r13, r15
0x472c:	jbe	0x4733


0x4733:	lea	rax, [rcx + 2]
0x4737:	cmp	r13, rax
0x473a:	jbe	0x4742


0x472e:	mov	byte ptr [r14 + r15], 0x30
0x4733:	lea	rax, [rcx + 2]
0x4737:	cmp	r13, rax
0x473a:	jbe	0x4742


0x4742:	mov	eax, r12d
0x4745:	lea	r15, [rcx + 3]
0x4749:	xor	r12d, r12d
0x474c:	mov	ebx, 0x30
0x4751:	jmp	0x3ab8


0x473c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x4742:	mov	eax, r12d
0x4745:	lea	r15, [rcx + 3]
0x4749:	xor	r12d, r12d
0x474c:	mov	ebx, 0x30
0x4751:	jmp	0x3ab8


0x3bb2:	cmp	dword ptr [rsp + 8], 2
0x3bb7:	sete	al
0x3bba:	and	al, byte ptr [rsp + 0xf]
0x3bbe:	jne	0x3d0e


0x3f70:	mov	edx, 0xd
0x3f75:	xor	r10d, r10d
0x3f78:	mov	ebx, 0x72
0x3f7d:	jmp	0x3bb2


0x44f4:	test	ebx, ebx
0x44f6:	jne	0x3923


0x44fc:	mov	byte ptr [rsp + 0xd], 1
0x4501:	test	r13, r13
0x4504:	jne	0x4a9a


0x450a:	lea	rax, [rip + 0x2d74]
0x4511:	mov	qword ptr [rsp + 0x50], 0
0x451a:	mov	byte ptr [rsp + 0xe], 1
0x451f:	mov	byte ptr [rsp + 0x7c], 0
0x4524:	xor	r12d, r12d
0x4527:	mov	byte ptr [rsp + 0xf], 0
0x452c:	mov	qword ptr [rsp + 0x18], 1
0x4535:	mov	qword ptr [rsp + 0x48], rax
0x453a:	mov	r15d, 1
0x4540:	mov	dword ptr [rsp + 8], 2
0x4548:	jmp	0x3963


0x4a9a:	mov	byte ptr [rsp + 0xe], 1
0x4a9f:	xor	eax, eax
0x4aa1:	xor	r12d, r12d
0x4aa4:	mov	qword ptr [rsp + 0x50], 0
0x4aad:	jmp	0x4054


0x4054:	lea	rbx, [rip + 0x322a]
0x405b:	mov	byte ptr [r14], 0x27
0x405f:	mov	dword ptr [rsp + 8], 2
0x4067:	mov	r15d, 1
0x406d:	mov	qword ptr [rsp + 0x18], 1
0x4076:	mov	byte ptr [rsp + 0xf], 0
0x407b:	mov	qword ptr [rsp + 0x48], rbx
0x4080:	mov	byte ptr [rsp + 0x7c], al
0x4084:	jmp	0x3963


0x4558:	test	r13, r13
0x455b:	je	0x4786


0x494d:	lea	rax, [rip + 0x292f]
0x4954:	mov	byte ptr [rsp + 0xe], 1
0x4959:	mov	byte ptr [rsp + 0x7c], 0
0x495e:	xor	r12d, r12d
0x4961:	mov	qword ptr [rsp + 0x50], 0
0x496a:	mov	byte ptr [rsp + 0xf], 1
0x496f:	mov	byte ptr [rsp + 0xd], 1
0x4974:	mov	qword ptr [rsp + 0x18], 1
0x497d:	xor	r15d, r15d
0x4980:	mov	qword ptr [rsp + 0x48], rax
0x4985:	jmp	0x3963


0x4786:	mov	qword ptr [rsp + 0x50], 0
0x478f:	mov	byte ptr [rsp + 0xe], 1
0x4794:	xor	r12d, r12d
0x4797:	mov	byte ptr [rsp + 0x7c], 0
0x479c:	jmp	0x457b


0x4561:	mov	byte ptr [r14], 0x22
0x4565:	mov	byte ptr [rsp + 0xe], 1
0x456a:	xor	r12d, r12d
0x456d:	mov	byte ptr [rsp + 0x7c], 0
0x4572:	mov	qword ptr [rsp + 0x50], 0
0x457b:	lea	rax, [rip + 0x2d01]
0x4582:	mov	byte ptr [rsp + 0xf], 0
0x4587:	mov	byte ptr [rsp + 0xd], 1
0x458c:	mov	qword ptr [rsp + 0x18], 1
0x4595:	mov	r15d, 1
0x459b:	mov	qword ptr [rsp + 0x48], rax
0x45a0:	jmp	0x3963


0x457b:	lea	rax, [rip + 0x2d01]
0x4582:	mov	byte ptr [rsp + 0xf], 0
0x4587:	mov	byte ptr [rsp + 0xd], 1
0x458c:	mov	qword ptr [rsp + 0x18], 1
0x4595:	mov	r15d, 1
0x459b:	mov	qword ptr [rsp + 0x48], rax
0x45a0:	jmp	0x3963


0x45a5:	lea	rax, [rip + 0x2cd7]
0x45ac:	mov	byte ptr [rsp + 0xe], 1
0x45b1:	mov	byte ptr [rsp + 0x7c], 0
0x45b6:	xor	r12d, r12d
0x45b9:	mov	qword ptr [rsp + 0x50], 0
0x45c2:	mov	byte ptr [rsp + 0xf], 1
0x45c7:	mov	byte ptr [rsp + 0xd], 1
0x45cc:	mov	qword ptr [rsp + 0x18], 1
0x45d5:	xor	r15d, r15d
0x45d8:	mov	qword ptr [rsp + 0x48], rax
0x45dd:	mov	dword ptr [rsp + 8], 5
0x45e5:	jmp	0x3963


0x45ea:	mov	byte ptr [rsp + 0xe], 1
0x45ef:	mov	byte ptr [rsp + 0x7c], 0
0x45f4:	xor	r12d, r12d
0x45f7:	mov	qword ptr [rsp + 0x50], 0
0x4600:	mov	byte ptr [rsp + 0xf], 0
0x4605:	xor	r15d, r15d
0x4608:	mov	byte ptr [rsp + 0xd], 1
0x460d:	mov	qword ptr [rsp + 0x18], 0
0x4616:	mov	qword ptr [rsp + 0x48], 0
0x461f:	jmp	0x3963


0x4624:	cmp	dword ptr [rsp + 8], 0xa
0x4629:	je	0x4681


0x4681:	xor	r15d, r15d
0x4684:	test	ebx, ebx
0x4686:	je	0x484d


0x462b:	lea	rsi, [rip + 0x2c55]
0x4632:	xor	edi, edi
0x4634:	mov	edx, 5
0x4639:	call	0x1800


0x484d:	mov	rdx, qword ptr [rsp + 0x68]
0x4852:	movzx	eax, byte ptr [rdx]
0x4855:	test	al, al
0x4857:	je	0x468c


0x468c:	test	ebx, ebx
0x468e:	mov	rbx, qword ptr [rsp + 0x60]
0x4693:	setne	byte ptr [rsp + 0xf]
0x4698:	xor	r12d, r12d
0x469b:	mov	rdi, rbx
0x469e:	call	0x1820


0x4869:	add	r15, 1
0x486d:	movzx	eax, byte ptr [rdx + r15]
0x4872:	test	al, al
0x4874:	jne	0x4860


0x4865:	mov	byte ptr [r14 + r15], al
0x4869:	add	r15, 1
0x486d:	movzx	eax, byte ptr [rdx + r15]
0x4872:	test	al, al
0x4874:	jne	0x4860


0x4876:	jmp	0x468c


0x4860:	cmp	r13, r15
0x4863:	jbe	0x4869


0x46a3:	mov	qword ptr [rsp + 0x48], rbx
0x46a8:	mov	qword ptr [rsp + 0x18], rax
0x46ad:	mov	byte ptr [rsp + 0xe], 1
0x46b2:	mov	byte ptr [rsp + 0x7c], 0
0x46b7:	mov	qword ptr [rsp + 0x50], 0
0x46c0:	mov	byte ptr [rsp + 0xd], 1
0x46c5:	jmp	0x3963


0x463e:	mov	rcx, rax
0x4641:	mov	qword ptr [rsp + 0x68], rax
0x4646:	lea	rax, [rip + 0x2c3a]
0x464d:	cmp	rcx, rax
0x4650:	je	0x49ee


0x49ee:	mov	esi, dword ptr [rsp + 8]
0x49f2:	mov	rdi, rcx
0x49f5:	call	0x37a0


0x4656:	lea	rsi, [rip + 0x2c28]
0x465d:	xor	edi, edi
0x465f:	mov	edx, 5
0x4664:	call	0x1800


0x4669:	mov	rcx, rax
0x466c:	mov	qword ptr [rsp + 0x60], rax
0x4671:	lea	rax, [rip + 0x2c0d]
0x4678:	cmp	rcx, rax
0x467b:	je	0x4a04


0x4a04:	mov	esi, dword ptr [rsp + 8]
0x4a08:	mov	rdi, rcx
0x4a0b:	call	0x37a0


0x4a10:	mov	qword ptr [rsp + 0x60], rax
0x4a15:	jmp	0x4681


0x49fa:	mov	qword ptr [rsp + 0x68], rax
0x49ff:	jmp	0x4656


0x46ca:	mov	byte ptr [rsp + 0xe], 1
0x46cf:	mov	byte ptr [rsp + 0x7c], 0
0x46d4:	xor	r12d, r12d
0x46d7:	mov	qword ptr [rsp + 0x50], 0
0x46e0:	mov	byte ptr [rsp + 0xf], 0
0x46e5:	xor	r15d, r15d
0x46e8:	mov	byte ptr [rsp + 0xd], 0
0x46ed:	mov	qword ptr [rsp + 0x18], 0
0x46f6:	mov	qword ptr [rsp + 0x48], 0
0x46ff:	jmp	0x3963


0x4704:	mov	byte ptr [rsp + 0xe], 1
0x4709:	mov	byte ptr [rsp + 0x7c], 0
0x470e:	xor	r12d, r12d
0x4711:	mov	qword ptr [rsp + 0x50], 0
0x471a:	mov	byte ptr [rsp + 0xf], 1
0x471f:	mov	byte ptr [rsp + 0xd], 1
0x4724:	jmp	0x3943


0x3943:	lea	rax, [rip + 0x393b]
0x394a:	mov	qword ptr [rsp + 0x18], 1
0x3953:	xor	r15d, r15d
0x3956:	mov	dword ptr [rsp + 8], 2
0x395e:	mov	qword ptr [rsp + 0x48], rax
0x3963:	xor	r11d, r11d
0x3966:	mov	rax, rbp
0x3969:	mov	r8d, r12d
0x396c:	mov	rbp, r11
0x396f:	mov	r11, rax
0x3972:	nop	word ptr [rax + rax]
0x3978:	cmp	r11, rbp
0x397b:	setne	r12b
0x397f:	cmp	r11, -1
0x3983:	jne	0x3992


0x48f8:	test	ebx, ebx
0x48fa:	je	0x4a88


0x4a88:	mov	byte ptr [rsp + 0xd], 0
0x4a8d:	jmp	0x4501


0x4900:	lea	rax, [rip + 0x297e]
0x4907:	mov	byte ptr [rsp + 0xe], 1
0x490c:	mov	byte ptr [rsp + 0x7c], 0
0x4911:	xor	r12d, r12d
0x4914:	mov	qword ptr [rsp + 0x50], 0
0x491d:	mov	byte ptr [rsp + 0xf], 1
0x4922:	mov	byte ptr [rsp + 0xd], 0
0x4927:	mov	qword ptr [rsp + 0x18], 1
0x4930:	xor	r15d, r15d
0x4933:	mov	qword ptr [rsp + 0x48], rax
0x4938:	jmp	0x3963


0x4501:	test	r13, r13
0x4504:	jne	0x4a9a


0x4ac4:	nop	
0x4ac6:	nop	word ptr cs:[rax + rax]


0x4c7b:	nop	dword ptr [rax + rax]


0x4cb6:	nop	word ptr cs:[rax + rax]


0x4cd1:	nop	dword ptr [rax + rax]
0x4cd6:	nop	word ptr cs:[rax + rax]


0x4cf1:	nop	dword ptr [rax + rax]
0x4cf6:	nop	word ptr cs:[rax + rax]


0x4d35:	nop	
0x4d36:	nop	word ptr cs:[rax + rax]


0x4d55:	nop	
0x4d56:	nop	word ptr cs:[rax + rax]


0x4e04:	nop	
0x4e06:	nop	word ptr cs:[rax + rax]


0x4ef3:	nop	dword ptr [rax]
0x4ef6:	nop	word ptr cs:[rax + rax]


0x4f0a:	nop	word ptr [rax + rax]


0x4fa3:	nop	dword ptr [rax]
0x4fa6:	nop	word ptr cs:[rax + rax]


0x4fc3:	nop	dword ptr [rax]
0x4fc6:	nop	word ptr cs:[rax + rax]


0x4fdc:	nop	dword ptr [rax]


0x4ff8:	nop	dword ptr [rax + rax]


0x5014:	nop	
0x5016:	nop	word ptr cs:[rax + rax]


0x50ae:	nop	


0x513a:	nop	word ptr [rax + rax]


0x514c:	nop	dword ptr [rax]


0x515f:	nop	


0x51f8:	nop	dword ptr [rax + rax]


0x5221:	nop	dword ptr [rax + rax]
0x5226:	nop	word ptr cs:[rax + rax]


0x523a:	nop	word ptr [rax + rax]


0x52ce:	nop	


0x5361:	nop	dword ptr [rax + rax]
0x5366:	nop	word ptr cs:[rax + rax]


0x537c:	nop	dword ptr [rax]


0x5397:	nop	word ptr [rax + rax]


0x53b3:	nop	dword ptr [rax]
0x53b6:	nop	word ptr cs:[rax + rax]


0x53cc:	nop	dword ptr [rax]


0x53e4:	nop	
0x53e6:	nop	word ptr cs:[rax + rax]


0x5403:	nop	dword ptr [rax]
0x5406:	nop	word ptr cs:[rax + rax]


0x5428:	nop	dword ptr [rax + rax]


0x5847:	nop	word ptr [rax + rax]


0x58e8:	nop	dword ptr [rax + rax]


0x59c5:	nop	
0x59c6:	nop	word ptr cs:[rax + rax]


0x5a6a:	nop	word ptr [rax + rax]


0x5a94:	nop	
0x5a96:	nop	word ptr cs:[rax + rax]


0x5aa2:	nop	dword ptr [rax]
0x5aa6:	nop	word ptr cs:[rax + rax]


0x5ae6:	nop	word ptr cs:[rax + rax]


0x5b14:	nop	
0x5b16:	nop	word ptr cs:[rax + rax]


0x5ba2:	nop	dword ptr [rax]
0x5ba6:	nop	word ptr cs:[rax + rax]


0x5bfa:	nop	word ptr [rax + rax]


0x5c17:	nop	word ptr [rax + rax]


0x5c4e:	nop	


0x5c78:	nop	dword ptr [rax + rax]


0x5c93:	nop	word ptr cs:[rax + rax]
0x5c9d:	nop	dword ptr [rax]


0x5cd5:	nop	word ptr cs:[rax + rax]
0x5cdf:	nop	


0x5d9a:	nop	word ptr [rax + rax]


0x5de4:	nop	
0x5de6:	nop	word ptr cs:[rax + rax]


0x5e36:	nop	word ptr cs:[rax + rax]


0x6018:	mov	rax, rbx
0x601b:	mul	rsi
0x601e:	jo	0x6211


0x6211:	or	rax, 0xffffffffffffffff
0x6215:	mov	r8d, 1
0x621b:	jmp	0x6027


0x6024:	xor	r8d, r8d
0x6027:	mul	rsi
0x602a:	jo	0x6202


0x6027:	mul	rsi
0x602a:	jo	0x6202


0x6202:	mov	r8d, 1
0x6208:	or	rbx, 0xffffffffffffffff
0x620c:	jmp	0x6033


0x6030:	mov	rbx, rax
0x6033:	or	ebp, r8d
0x6036:	nop	word ptr cs:[rax + rax]
0x6040:	movsxd	rdi, edi
0x6043:	mov	eax, ebp
0x6045:	add	rcx, rdi
0x6048:	or	eax, 2
0x604b:	mov	qword ptr [r15], rcx
0x604e:	cmp	byte ptr [rcx], 0
0x6051:	mov	qword ptr [r14], rbx
0x6054:	cmovne	ebp, eax
0x6057:	jmp	0x5f1d


0x6033:	or	ebp, r8d
0x6036:	nop	word ptr cs:[rax + rax]
0x6040:	movsxd	rdi, edi
0x6043:	mov	eax, ebp
0x6045:	add	rcx, rdi
0x6048:	or	eax, 2
0x604b:	mov	qword ptr [r15], rcx
0x604e:	cmp	byte ptr [rcx], 0
0x6051:	mov	qword ptr [r14], rbx
0x6054:	cmovne	ebp, eax
0x6057:	jmp	0x5f1d


0x6067:	mov	edx, 2
0x606c:	mov	rax, rdx
0x606f:	mul	rbx
0x6072:	jo	0x610e


0x610e:	mov	ebp, 1
0x6113:	or	rbx, 0xffffffffffffffff
0x6117:	jmp	0x6040


0x6078:	add	rbx, rbx
0x607b:	jmp	0x6040


0x6040:	movsxd	rdi, edi
0x6043:	mov	eax, ebp
0x6045:	add	rcx, rdi
0x6048:	or	eax, 2
0x604b:	mov	qword ptr [r15], rcx
0x604e:	cmp	byte ptr [rcx], 0
0x6051:	mov	qword ptr [r14], rbx
0x6054:	cmovne	ebp, eax
0x6057:	jmp	0x5f1d


0x607d:	mov	edx, 0x200
0x6082:	mov	rax, rdx
0x6085:	mul	rbx
0x6088:	jo	0x610e


0x608e:	shl	rbx, 9
0x6092:	jmp	0x6040


0x6094:	mov	r8d, 7
0x609a:	xor	r9d, r9d
0x609d:	nop	dword ptr [rax]
0x60a0:	mov	rax, rbx
0x60a3:	mul	rsi
0x60a6:	mov	rbx, rax
0x60a9:	jo	0x623e


0x623e:	mov	r9d, 1
0x6244:	or	rbx, 0xffffffffffffffff
0x6248:	jmp	0x60af


0x60af:	sub	r8d, 1
0x60b3:	jne	0x60a0


0x60b5:	or	ebp, r9d
0x60b8:	jmp	0x6040


0x60a0:	mov	rax, rbx
0x60a3:	mul	rsi
0x60a6:	mov	rbx, rax
0x60a9:	jo	0x623e


0x60ba:	mov	r8d, 8
0x60c0:	xor	r9d, r9d
0x60c3:	nop	dword ptr [rax + rax]
0x60c8:	mov	rax, rbx
0x60cb:	mul	rsi
0x60ce:	mov	rbx, rax
0x60d1:	jo	0x6220


0x6220:	mov	r9d, 1
0x6226:	or	rbx, 0xffffffffffffffff
0x622a:	jmp	0x60d7


0x60d7:	sub	r8d, 1
0x60db:	jne	0x60c8


0x60dd:	jmp	0x60b5


0x60c8:	mov	rax, rbx
0x60cb:	mul	rsi
0x60ce:	mov	rbx, rax
0x60d1:	jo	0x6220


0x60df:	mov	r8d, 4
0x60e5:	xor	r9d, r9d
0x60e8:	mov	rax, rbx
0x60eb:	mul	rsi
0x60ee:	mov	rbx, rax
0x60f1:	jo	0x61f3


0x61f3:	mov	r9d, 1
0x61f9:	or	rbx, 0xffffffffffffffff
0x61fd:	jmp	0x60f7


0x60f7:	sub	r8d, 1
0x60fb:	jne	0x60e8


0x60fd:	jmp	0x60b5


0x60e8:	mov	rax, rbx
0x60eb:	mul	rsi
0x60ee:	mov	rbx, rax
0x60f1:	jo	0x61f3


0x60ff:	mov	rax, rbx
0x6102:	mul	rsi
0x6105:	mov	rbx, rax
0x6108:	jno	0x6040


0x622f:	mov	r9d, 1
0x6235:	or	rbx, 0xffffffffffffffff
0x6239:	jmp	0x6138


0x6138:	sub	r8d, 1
0x613c:	jne	0x6129


0x613e:	jmp	0x60b5


0x6129:	mov	rax, rbx
0x612c:	mul	rsi
0x612f:	mov	rbx, rax
0x6132:	jo	0x622f


0x6143:	mov	r8d, 6
0x6149:	xor	r9d, r9d
0x614c:	mov	rax, rbx
0x614f:	mul	rsi
0x6152:	mov	rbx, rax
0x6155:	jo	0x61e4


0x61e4:	mov	r9d, 1
0x61ea:	or	rbx, 0xffffffffffffffff
0x61ee:	jmp	0x615b


0x615b:	sub	r8d, 1
0x615f:	jne	0x614c


0x6161:	jmp	0x60b5


0x614c:	mov	rax, rbx
0x614f:	mul	rsi
0x6152:	mov	rbx, rax
0x6155:	jo	0x61e4


0x6166:	mov	edx, 0x400
0x616b:	mov	rax, rdx
0x616e:	mul	rbx
0x6171:	jo	0x610e


0x6173:	shl	rbx, 0xa
0x6177:	jmp	0x6040


0x617c:	mov	rax, rbx
0x617f:	mul	rsi
0x6182:	jo	0x624d


0x624d:	mov	r8d, 1
0x6253:	or	rax, 0xffffffffffffffff
0x6257:	jmp	0x618b


0x6188:	xor	r8d, r8d
0x618b:	mul	rsi
0x618e:	jno	0x6027


0x618b:	mul	rsi
0x618e:	jno	0x6027


0x6194:	mov	r8d, 1
0x619a:	or	rax, 0xffffffffffffffff
0x619e:	jmp	0x6027


0x625c:	nop	dword ptr [rax]


0x62db:	nop	dword ptr [rax + rax]


0x6377:	nop	word ptr [rax + rax]


0x6403:	nop	word ptr cs:[rax + rax]
0x640d:	nop	dword ptr [rax]


0x648d:	nop	dword ptr [rax]


0x64cc:	nop	dword ptr [rax]


0x6584:	nop	
0x6586:	nop	word ptr cs:[rax + rax]


0x6639:	nop	dword ptr [rax]


0x669e:	nop	


0x6705:	nop	
0x6706:	nop	word ptr cs:[rax + rax]


0x6712:	nop	word ptr cs:[rax + rax]
0x671c:	nop	dword ptr [rax]


0x3b50:	xor	r10d, r10d
0x3b53:	mov	eax, dword ptr [rsp + 8]
0x3b57:	cmp	eax, 2
0x3b5a:	je	0x4118


0x3b80:	xor	r10d, r10d
0x3b83:	cmp	dword ptr [rsp + 8], 2
0x3b88:	je	0x4090


0x3ba8:	mov	edx, 9
0x3bad:	mov	ebx, 0x74
0x3bb2:	cmp	dword ptr [rsp + 8], 2
0x3bb7:	sete	al
0x3bba:	and	al, byte ptr [rsp + 0xf]
0x3bbe:	jne	0x3d0e


0x3be8:	mov	edx, 8
0x3bed:	mov	ebx, 0x62
0x3bf2:	jmp	0x3bc4


0x3bf8:	cmp	dword ptr [rsp + 8], 2
0x3bfd:	je	0x3fd0


0x3ca0:	cmp	byte ptr [rsp + 0xd], 0
0x3ca5:	jne	0x3e73


0x3cc8:	cmp	dword ptr [rsp + 8], 2
0x3ccd:	sete	dl
0x3cd0:	xor	eax, eax
0x3cd2:	jmp	0x3ab8


0x3ce0:	mov	edx, 7
0x3ce5:	mov	ebx, 0x61
0x3cea:	jmp	0x3bc4


0x3cf0:	cmp	dword ptr [rsp + 8], 2
0x3cf5:	sete	dl
0x3cf8:	test	rbp, rbp
0x3cfb:	jne	0x3aac


0x3d20:	cmp	dword ptr [rsp + 8], 2
0x3d25:	sete	dl
0x3d28:	xor	r12d, r12d
0x3d2b:	jmp	0x3d01


0x3d30:	cmp	dword ptr [rsp + 8], 2
0x3d35:	mov	ebx, 0x20
0x3d3a:	sete	dl
0x3d3d:	jmp	0x3d01


0x3d40:	mov	edx, 0xd
0x3d45:	mov	ebx, 0x72
0x3d4a:	jmp	0x3bb2


0x3d50:	mov	edx, 0xc
0x3d55:	mov	ebx, 0x66
0x3d5a:	jmp	0x3bc4


0x3d60:	mov	edx, 0xb
0x3d65:	mov	ebx, 0x76
0x3d6a:	jmp	0x3bc4


0x3d70:	mov	edx, 0xa
0x3d75:	mov	ebx, 0x6e
0x3d7a:	jmp	0x3bb2


0x3e10:	xor	r10d, r10d
0x3e13:	cmp	byte ptr [rsp + 0xd], 0
0x3e18:	jne	0x3c0e


0x3e30:	mov	edx, 0xc
0x3e35:	xor	r10d, r10d
0x3e38:	mov	ebx, 0x66
0x3e3d:	jmp	0x3bc4


0x3e48:	mov	edx, 0xa
0x3e4d:	xor	r10d, r10d
0x3e50:	mov	ebx, 0x6e
0x3e55:	jmp	0x3bb2


0x3e60:	mov	ebx, 0x61
0x3e65:	jmp	0x3c30


0x3e70:	xor	r10d, r10d
0x3e73:	cmp	dword ptr [rsp + 8], 2
0x3e78:	sete	dl
0x3e7b:	cmp	byte ptr [rsp + 0xf], 0
0x3e80:	jne	0x4a1a


0x3f10:	cmp	dword ptr [rsp + 8], 2
0x3f15:	mov	r12d, r10d
0x3f18:	sete	dl
0x3f1b:	xor	r10d, r10d
0x3f1e:	xor	eax, eax
0x3f20:	jmp	0x3ab8


0x3f28:	cmp	dword ptr [rsp + 8], 2
0x3f2d:	sete	dl
0x3f30:	xor	r10d, r10d
0x3f33:	jmp	0x3cf8


0x3f40:	cmp	dword ptr [rsp + 8], 2
0x3f45:	sete	dl
0x3f48:	xor	r10d, r10d
0x3f4b:	xor	r12d, r12d
0x3f4e:	jmp	0x3d01


0x3f58:	cmp	dword ptr [rsp + 8], 2
0x3f5d:	mov	r12d, r10d
0x3f60:	mov	ebx, 0x20
0x3f65:	sete	dl
0x3f68:	xor	r10d, r10d
0x3f6b:	jmp	0x3d01


0x3f88:	mov	ebx, 0x76
0x3f8d:	jmp	0x3c30


0x3f98:	mov	edx, 9
0x3f9d:	xor	r10d, r10d
0x3fa0:	mov	ebx, 0x74
0x3fa5:	jmp	0x3bb2


0x3fb0:	mov	ebx, 0x62
0x3fb5:	jmp	0x3c30


0x4550:	test	ebx, ebx
0x4552:	jne	0x494d


0x6120:	mov	r8d, 5
0x6126:	xor	r9d, r9d
0x6129:	mov	rax, rbx
0x612c:	mul	rsi
0x612f:	mov	rbx, rax
0x6132:	jo	0x622f


0x1bda:	nop	word ptr [rax + rax]


0x1c9b:	nop	dword ptr [rax + rax]


0x1cd7:	nop	word ptr [rax + rax]


0x1d18:	nop	dword ptr [rax + rax]


0x210c:	nop	dword ptr [rax]


0x25e6:	nop	word ptr cs:[rax + rax]


0x2637:	nop	word ptr [rax + rax]


0x2681:	nop	dword ptr [rax]


0x26d1:	nop	dword ptr [rax]


0x26fa:	nop	word ptr [rax + rax]


0x270f:	nop	


0x27fb:	nop	dword ptr [rax + rax]


0x2815:	nop	dword ptr [rax]


0x2824:	nop	dword ptr [rax]


0x289d:	nop	dword ptr [rax]


0x28d2:	nop	word ptr [rax + rax]


0x28fa:	nop	word ptr [rax + rax]


0x2e36:	nop	word ptr cs:[rax + rax]


0x2ec3:	nop	dword ptr [rax + rax]


0x2ef7:	nop	word ptr [rax + rax]


0x2f6d:	nop	dword ptr [rax]


0x2fdf:	nop	


0x3064:	nop	dword ptr [rax]


0x3093:	nop	dword ptr [rax + rax]


0x313f:	nop	


0x326b:	nop	dword ptr [rax + rax]


0x33c2:	nop	word ptr [rax + rax]


0x33d1:	nop	dword ptr [rax]


0x3408:	nop	dword ptr [rax + rax]


0x3428:	nop	dword ptr [rax + rax]


0x344f:	nop	


0x3457:	nop	word ptr [rax + rax]


0x3469:	nop	dword ptr [rax]


0x34ba:	nop	word ptr [rax + rax]


0x359f:	nop	


0x35db:	nop	dword ptr [rax + rax]


0x363e:	nop	


0x3662:	nop	word ptr [rax + rax]


0x36b8:	nop	dword ptr [rax + rax]


0x37dc:	nop	dword ptr [rax]


0x382d:	nop	dword ptr [rax]


0x3a58:	nop	dword ptr [rax + rax]


0x3b47:	nop	word ptr [rax + rax]


0x3b7e:	nop	


0x3ba1:	nop	dword ptr [rax]


0x3be2:	nop	word ptr [rax + rax]


0x3bf4:	nop	dword ptr [rax]


0x3c98:	nop	dword ptr [rax + rax]


0x3cc1:	nop	dword ptr [rax]


0x3cd7:	nop	word ptr [rax + rax]


0x3cef:	nop	


0x3d1e:	nop	


0x3d2d:	nop	dword ptr [rax]


0x3d3f:	nop	


0x3d4f:	nop	


0x3d5f:	nop	


0x3d6f:	nop	


0x3d7f:	nop	


0x3dec:	nop	dword ptr [rax]


0x3e0c:	nop	dword ptr [rax]


0x3e1e:	nop	


0x3e2f:	nop	


0x3e42:	nop	word ptr [rax + rax]


0x3e5a:	nop	word ptr [rax + rax]


0x3e6a:	nop	word ptr [rax + rax]


0x3f0b:	nop	dword ptr [rax + rax]


0x3f25:	nop	dword ptr [rax]


0x3f38:	nop	dword ptr [rax + rax]


0x3f53:	nop	dword ptr [rax + rax]


0x3f82:	nop	word ptr [rax + rax]


0x3f92:	nop	word ptr [rax + rax]


0x3faa:	nop	word ptr [rax + rax]


0x3fba:	nop	word ptr [rax + rax]


0x3fc8:	nop	dword ptr [rax + rax]


0x3fef:	nop	


0x4089:	nop	dword ptr [rax]


0x40d2:	nop	word ptr [rax + rax]


0x40f8:	nop	dword ptr [rax + rax]


0x4111:	nop	dword ptr [rax]


0x4132:	nop	word ptr [rax + rax]


0x4298:	nop	dword ptr [rax + rax]


0x43ab:	nop	dword ptr [rax + rax]


0x43ce:	nop	


0x4495:	nop	dword ptr [rax]


0x454d:	nop	dword ptr [rax]


0x4756:	nop	word ptr cs:[rax + rax]


0x47e9:	nop	dword ptr [rax]


0x485d:	nop	dword ptr [rax]


0x493d:	nop	dword ptr [rax]


0x4c4b:	nop	dword ptr [rax + rax]


0x54d6:	nop	word ptr cs:[rax + rax]


0x5565:	nop	dword ptr [rax]


0x5586:	nop	word ptr cs:[rax + rax]


0x55e5:	nop	dword ptr [rax]


0x5621:	nop	dword ptr [rax]


0x5668:	nop	dword ptr [rax + rax]


0x56b7:	nop	word ptr [rax + rax]


0x5714:	nop	dword ptr [rax]


0x5742:	nop	word ptr [rax + rax]


0x57f6:	nop	word ptr cs:[rax + rax]


0x5859:	nop	dword ptr [rax]


0x5ad2:	nop	word ptr [rax + rax]


0x5b59:	nop	dword ptr [rax]


0x5b84:	nop	dword ptr [rax]


0x5bdd:	nop	dword ptr [rax]


0x5ea6:	nop	word ptr cs:[rax + rax]


0x5f01:	nop	dword ptr [rax]


0x5f12:	nop	word ptr [rax + rax]


0x5f42:	nop	word ptr [rax + rax]


0x5f4c:	nop	dword ptr [rax]


0x5feb:	nop	dword ptr [rax + rax]


0x611c:	nop	dword ptr [rax]


0x61a3:	nop	dword ptr [rax + rax]


0x62a5:	nop	dword ptr [rax]


0x6303:	nop	dword ptr [rax + rax]


0x632f:	nop	


0x6444:	nop	dword ptr [rax]


0x6461:	nop	dword ptr [rax]


0x6472:	nop	word ptr [rax + rax]


0x64b6:	nop	word ptr cs:[rax + rax]


0x64f4:	nop	dword ptr [rax]


0x6548:	nop	dword ptr [rax + rax]


0x6569:	nop	dword ptr [rax]


0x6622:	nop	word ptr [rax + rax]


0x6685:	nop	dword ptr [rax]


