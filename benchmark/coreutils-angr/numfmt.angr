0x9480:	sub	rsp, 8
0x9484:	add	rsp, 8
0x9488:	ret	


0x9470:	mov	rdx, qword ptr [rip + 0x204b91]
0x9477:	xor	esi, esi
0x9479:	jmp	0x1ca0


0x9460:	ret	


0x93f0:	push	r15
0x93f2:	push	r14
0x93f4:	mov	r15, rdx
0x93f7:	push	r13
0x93f9:	push	r12
0x93fb:	lea	r12, [rip + 0x20442e]
0x9402:	push	rbp
0x9403:	lea	rbp, [rip + 0x20442e]
0x940a:	push	rbx
0x940b:	mov	r13d, edi
0x940e:	mov	r14, rsi
0x9411:	sub	rbp, r12
0x9414:	sub	rsp, 8
0x9418:	sar	rbp, 3
0x941c:	call	0x1970


0x9390:	mov	rax, qword ptr [rdi + 8]
0x9394:	cmp	qword ptr [rdi + 0x10], rax
0x9398:	je	0x93a0


0x9350:	test	rdi, rdi
0x9353:	push	rbx
0x9354:	mov	rbx, rdi
0x9357:	je	0x936a


0x92d0:	push	r12
0x92d2:	push	rbp
0x92d3:	push	rbx
0x92d4:	mov	rbx, rdi
0x92d7:	call	0x1bd0


0x9290:	sub	rsp, 8
0x9294:	mov	edi, 0xe
0x9299:	call	0x1c10


0x9230:	sub	rsp, 8
0x9234:	xor	esi, esi
0x9236:	call	0x1c40


0x91b0:	push	r12
0x91b2:	push	rbp
0x91b3:	mov	rbp, rdi
0x91b6:	push	rbx
0x91b7:	call	0x1a10


0x9120:	push	r13
0x9122:	push	r12
0x9124:	mov	r13, rsi
0x9127:	push	rbp
0x9128:	push	rbx
0x9129:	mov	rbx, rdi
0x912c:	mov	r12, rdx
0x912f:	sub	rsp, 0x18
0x9133:	mov	rax, qword ptr fs:[0x28]
0x913c:	mov	qword ptr [rsp + 8], rax
0x9141:	xor	eax, eax
0x9143:	lea	rax, [rsp + 4]
0x9148:	test	rdi, rdi
0x914b:	cmove	rbx, rax
0x914f:	mov	rdi, rbx
0x9152:	call	0x1ad0


0x8d00:	push	r15
0x8d02:	push	r14
0x8d04:	push	r13
0x8d06:	push	r12
0x8d08:	push	rbp
0x8d09:	push	rbx
0x8d0a:	sub	rsp, 0x28
0x8d0e:	mov	rax, qword ptr fs:[0x28]
0x8d17:	mov	qword ptr [rsp + 0x18], rax
0x8d1c:	xor	eax, eax
0x8d1e:	cmp	edx, 0x24
0x8d21:	ja	0x9085


0x8640:	push	r15
0x8642:	push	r14
0x8644:	push	r13
0x8646:	push	r12
0x8648:	push	rbp
0x8649:	push	rbx
0x864a:	sub	rsp, 0x28
0x864e:	mov	rax, qword ptr fs:[0x28]
0x8657:	mov	qword ptr [rsp + 0x18], rax
0x865c:	xor	eax, eax
0x865e:	cmp	edx, 0x24
0x8661:	ja	0x8ccf


0x8620:	sub	rsp, 8
0x8624:	call	0x1b60


0x85e0:	lea	rsi, [rip + 0x36a8]
0x85e7:	sub	rsp, 8
0x85eb:	mov	edx, 5
0x85f0:	xor	edi, edi
0x85f2:	call	0x1a80


0x85c0:	push	rbx
0x85c1:	mov	rbx, rdi
0x85c4:	call	0x1aa0


0x8590:	push	rbp
0x8591:	push	rbx
0x8592:	mov	rbp, rdi
0x8595:	mov	rdi, rsi
0x8598:	mov	rbx, rsi
0x859b:	sub	rsp, 8
0x859f:	call	0x8390


0x8560:	mov	rax, rdi
0x8563:	sub	rsp, 8
0x8567:	mul	rsi
0x856a:	seto	dl
0x856d:	test	rax, rax
0x8570:	js	0x8589


0x8540:	push	rbx
0x8541:	mov	rbx, rdi
0x8544:	call	0x8390


0x84f0:	test	rdi, rdi
0x84f3:	mov	rax, qword ptr [rsi]
0x84f6:	je	0x8520


0x8460:	test	rdi, rdi
0x8463:	mov	r9, rdx
0x8466:	mov	rcx, qword ptr [rsi]
0x8469:	je	0x84a0


0x8430:	mov	rax, rsi
0x8433:	mul	rdx
0x8436:	mov	rsi, rax
0x8439:	seto	al
0x843c:	test	rsi, rsi
0x843f:	js	0x844b


0x83f0:	test	rsi, rsi
0x83f3:	push	rbx
0x83f4:	mov	rbx, rsi
0x83f7:	jne	0x83fe


0x83e0:	jmp	0x8390


0x83b0:	mov	rax, rdi
0x83b3:	mul	rsi
0x83b6:	mov	rdi, rax
0x83b9:	seto	al
0x83bc:	test	rdi, rdi
0x83bf:	js	0x83cb


0x8390:	push	rbx
0x8391:	mov	rbx, rdi
0x8394:	call	0x1bf0


0x8310:	push	rbx
0x8311:	lea	rsi, [rip + 0x366a]
0x8318:	mov	edx, 5
0x831d:	xor	edi, edi
0x831f:	call	0x1a80


0x8230:	push	rbp
0x8231:	push	rbx
0x8232:	mov	r10d, 0x20
0x8238:	xor	r11d, r11d
0x823b:	sub	rsp, 0xb8
0x8242:	mov	rax, qword ptr fs:[0x28]
0x824b:	mov	qword ptr [rsp + 0x78], rax
0x8250:	xor	eax, eax
0x8252:	lea	rax, [rsp + 0xd0]
0x825a:	mov	qword ptr [rsp + 0xa0], r8
0x8262:	lea	rbx, [rsp + 0xd0]
0x826a:	lea	r8, [rsp + 0x20]
0x826f:	mov	qword ptr [rsp + 0xa8], r9
0x8277:	mov	dword ptr [rsp + 8], 0x20
0x827f:	mov	qword ptr [rsp + 0x10], rax
0x8284:	lea	rax, [rsp + 0x80]
0x828c:	xor	r9d, r9d
0x828f:	mov	qword ptr [rsp + 0x18], rax
0x8294:	mov	rbp, rax
0x8297:	nop	word ptr [rax + rax]
0x82a0:	cmp	r10d, 0x2f
0x82a4:	ja	0x82fc


0x81b0:	sub	rsp, 0x68
0x81b4:	mov	r10, r8
0x81b7:	xor	r9d, r9d
0x81ba:	mov	rax, qword ptr fs:[0x28]
0x81c3:	mov	qword ptr [rsp + 0x58], rax
0x81c8:	xor	eax, eax
0x81ca:	mov	r8, rsp
0x81cd:	nop	dword ptr [rax]
0x81d0:	mov	eax, dword ptr [r10]
0x81d3:	cmp	eax, 0x2f
0x81d6:	ja	0x821a


0x8190:	xor	r9d, r9d
0x8193:	cmp	qword ptr [r8], 0
0x8197:	je	0x81ab


0x7d70:	push	r15
0x7d72:	push	r14
0x7d74:	push	r13
0x7d76:	push	r12
0x7d78:	mov	r12, r9
0x7d7b:	push	rbp
0x7d7c:	push	rbx
0x7d7d:	mov	rbp, rdi
0x7d80:	mov	rbx, r8
0x7d83:	sub	rsp, 0x28
0x7d87:	test	rsi, rsi
0x7d8a:	je	0x7ea8


0x7d50:	lea	rcx, [rip + 0x206309]
0x7d57:	mov	rsi, rdi
0x7d5a:	mov	rdx, -1
0x7d61:	xor	edi, edi
0x7d63:	jmp	0x7410


0x7d30:	lea	rcx, [rip + 0x206329]
0x7d37:	mov	rdx, -1
0x7d3e:	jmp	0x7410


0x7d10:	lea	rcx, [rip + 0x206349]
0x7d17:	mov	rdx, rsi
0x7d1a:	mov	rsi, rdi
0x7d1d:	xor	edi, edi
0x7d1f:	jmp	0x7410


0x7d00:	lea	rcx, [rip + 0x206359]
0x7d07:	jmp	0x7410


0x7ce0:	mov	r8, rcx
0x7ce3:	mov	rcx, rdx
0x7ce6:	mov	rdx, rsi
0x7ce9:	mov	rsi, rdi
0x7cec:	xor	edi, edi
0x7cee:	jmp	0x7c10


0x7cc0:	mov	rcx, rdx
0x7cc3:	mov	r8, -1
0x7cca:	mov	rdx, rsi
0x7ccd:	mov	rsi, rdi
0x7cd0:	xor	edi, edi
0x7cd2:	jmp	0x7c10


0x7cb0:	mov	r8, -1
0x7cb7:	jmp	0x7c10


0x7c10:	sub	rsp, 0x48
0x7c14:	mov	r9, rcx
0x7c17:	mov	rcx, qword ptr [rip + 0x2066d2]
0x7c1e:	movdqa	xmm0, xmmword ptr [rip + 0x20669a]
0x7c26:	mov	rax, qword ptr fs:[0x28]
0x7c2f:	mov	qword ptr [rsp + 0x38], rax
0x7c34:	xor	eax, eax
0x7c36:	movaps	xmmword ptr [rsp], xmm0
0x7c3a:	test	rsi, rsi
0x7c3d:	mov	qword ptr [rsp + 0x30], rcx
0x7c42:	mov	dword ptr [rsp], 0xa
0x7c49:	movdqa	xmm0, xmmword ptr [rip + 0x20667f]
0x7c51:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x7c56:	movdqa	xmm0, xmmword ptr [rip + 0x206682]
0x7c5e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x7c63:	je	0x7c97


0x7b80:	sub	rsp, 0x48
0x7b84:	mov	rax, rdx
0x7b87:	mov	rdx, qword ptr fs:[0x28]
0x7b90:	mov	qword ptr [rsp + 0x38], rdx
0x7b95:	xor	edx, edx
0x7b97:	cmp	esi, 0xa
0x7b9a:	je	0x7c04


0x7b70:	mov	edx, 0x3a
0x7b75:	jmp	0x7aa0


0x7b50:	mov	edx, 0x3a
0x7b55:	mov	rsi, -1
0x7b5c:	jmp	0x7aa0


0x7b40:	movsx	edx, sil
0x7b44:	mov	rsi, -1
0x7b4b:	jmp	0x7aa0


0x7aa0:	sub	rsp, 0x48
0x7aa4:	mov	ecx, edx
0x7aa6:	mov	rax, qword ptr fs:[0x28]
0x7aaf:	mov	qword ptr [rsp + 0x38], rax
0x7ab4:	xor	eax, eax
0x7ab6:	mov	rax, qword ptr [rip + 0x206833]
0x7abd:	mov	r8, rsp
0x7ac0:	and	ecx, 0x1f
0x7ac3:	movdqa	xmm0, xmmword ptr [rip + 0x2067f5]
0x7acb:	mov	qword ptr [rsp + 0x30], rax
0x7ad0:	mov	eax, edx
0x7ad2:	movaps	xmmword ptr [rsp], xmm0
0x7ad6:	shr	al, 5
0x7ad9:	movzx	eax, al
0x7adc:	lea	r9, [r8 + rax*4 + 8]
0x7ae1:	movdqa	xmm0, xmmword ptr [rip + 0x2067e7]
0x7ae9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x7aee:	movdqa	xmm0, xmmword ptr [rip + 0x2067ea]
0x7af6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x7afb:	mov	edx, dword ptr [r9]
0x7afe:	mov	eax, edx
0x7b00:	shr	eax, cl
0x7b02:	not	eax
0x7b04:	and	eax, 1
0x7b07:	shl	eax, cl
0x7b09:	mov	rcx, r8
0x7b0c:	xor	eax, edx
0x7b0e:	mov	rdx, rsi
0x7b11:	mov	rsi, rdi
0x7b14:	mov	dword ptr [r9], eax
0x7b17:	xor	edi, edi
0x7b19:	call	0x7410


0x7a90:	mov	rcx, rdx
0x7a93:	mov	rdx, rsi
0x7a96:	mov	esi, edi
0x7a98:	xor	edi, edi
0x7a9a:	jmp	0x79f0


0x7a80:	mov	rdx, rsi
0x7a83:	mov	esi, edi
0x7a85:	xor	edi, edi
0x7a87:	jmp	0x7960


0x79f0:	sub	rsp, 0x48
0x79f4:	mov	rax, rdx
0x79f7:	mov	rdx, rcx
0x79fa:	mov	rcx, qword ptr fs:[0x28]
0x7a03:	mov	qword ptr [rsp + 0x38], rcx
0x7a08:	xor	ecx, ecx
0x7a0a:	cmp	esi, 0xa
0x7a0d:	je	0x7a70


0x7960:	sub	rsp, 0x48
0x7964:	mov	rax, rdx
0x7967:	mov	rdx, qword ptr fs:[0x28]
0x7970:	mov	qword ptr [rsp + 0x38], rdx
0x7975:	xor	edx, edx
0x7977:	cmp	esi, 0xa
0x797a:	je	0x79e4


0x7940:	lea	rcx, [rip + 0x206979]
0x7947:	mov	rdx, rsi
0x794a:	mov	rsi, rdi
0x794d:	xor	edi, edi
0x794f:	jmp	0x7410


0x7920:	lea	rcx, [rip + 0x206999]
0x7927:	mov	rsi, rdi
0x792a:	mov	rdx, -1
0x7931:	xor	edi, edi
0x7933:	jmp	0x7410


0x7910:	lea	rcx, [rip + 0x2069a9]
0x7917:	jmp	0x7410


0x78f0:	lea	rcx, [rip + 0x2069c9]
0x78f7:	mov	rdx, -1
0x78fe:	jmp	0x7410


0x7850:	mov	eax, dword ptr [rip + 0x206842]
0x7856:	push	r12
0x7858:	mov	r12, qword ptr [rip + 0x206841]
0x785f:	push	rbp
0x7860:	push	rbx
0x7861:	cmp	eax, 1
0x7864:	jle	0x7891


0x7840:	mov	rcx, rdx
0x7843:	xor	edx, edx
0x7845:	jmp	0x7750


0x7750:	push	r15
0x7752:	push	r14
0x7754:	lea	rax, [rip + 0x206b65]
0x775b:	push	r13
0x775d:	push	r12
0x775f:	mov	r12, rdx
0x7762:	push	rbp
0x7763:	push	rbx
0x7764:	mov	rbx, rcx
0x7767:	mov	r14, rdi
0x776a:	mov	r15, rsi
0x776d:	sub	rsp, 0x38
0x7771:	test	rcx, rcx
0x7774:	cmove	rbx, rax
0x7778:	xor	ebp, ebp
0x777a:	call	0x19d0


0x76d0:	push	r15
0x76d2:	push	r14
0x76d4:	lea	rax, [rip + 0x206be5]
0x76db:	push	r13
0x76dd:	push	r12
0x76df:	mov	r13, rdi
0x76e2:	push	rbp
0x76e3:	push	rbx
0x76e4:	mov	rbx, r8
0x76e7:	mov	r14, rsi
0x76ea:	mov	r15, rdx
0x76ed:	sub	rsp, 0x18
0x76f1:	test	r8, r8
0x76f4:	cmove	rbx, rax
0x76f8:	mov	qword ptr [rsp + 8], rcx
0x76fd:	call	0x19d0


0x76a0:	lea	rax, [rip + 0x206c19]
0x76a7:	test	rdi, rdi
0x76aa:	cmove	rdi, rax
0x76ae:	test	rsi, rsi
0x76b1:	mov	dword ptr [rdi], 0xa
0x76b7:	je	0x76c7


0x7680:	lea	rax, [rip + 0x206c39]
0x7687:	test	rdi, rdi
0x768a:	cmove	rdi, rax
0x768e:	mov	eax, dword ptr [rdi + 4]
0x7691:	mov	dword ptr [rdi + 4], esi
0x7694:	ret	


0x7640:	lea	rax, [rip + 0x206c79]
0x7647:	test	rdi, rdi
0x764a:	mov	ecx, esi
0x764c:	cmove	rdi, rax
0x7650:	mov	eax, esi
0x7652:	and	ecx, 0x1f
0x7655:	shr	al, 5
0x7658:	movzx	eax, al
0x765b:	lea	rdi, [rdi + rax*4 + 8]
0x7660:	mov	esi, dword ptr [rdi]
0x7662:	mov	eax, esi
0x7664:	shr	eax, cl
0x7666:	xor	edx, eax
0x7668:	and	eax, 1
0x766b:	and	edx, 1
0x766e:	shl	edx, cl
0x7670:	xor	edx, esi
0x7672:	mov	dword ptr [rdi], edx
0x7674:	ret	


0x7620:	lea	rax, [rip + 0x206c99]
0x7627:	test	rdi, rdi
0x762a:	cmove	rdi, rax
0x762e:	mov	dword ptr [rdi], esi
0x7630:	ret	


0x7600:	lea	rax, [rip + 0x206cb9]
0x7607:	test	rdi, rdi
0x760a:	cmove	rdi, rax
0x760e:	mov	eax, dword ptr [rdi]
0x7610:	ret	


0x75c0:	push	r12
0x75c2:	push	rbp
0x75c3:	push	rbx
0x75c4:	mov	rbx, rdi
0x75c7:	call	0x19d0


0x7410:	push	r15
0x7412:	push	r14
0x7414:	movsxd	r15, edi
0x7417:	push	r13
0x7419:	push	r12
0x741b:	mov	r14, rdx
0x741e:	push	rbp
0x741f:	push	rbx
0x7420:	mov	rbp, rcx
0x7423:	sub	rsp, 0x28
0x7427:	mov	qword ptr [rsp + 8], rsi
0x742c:	call	0x19d0


0x61d0:	push	r15
0x61d2:	push	r14
0x61d4:	mov	r15d, r8d
0x61d7:	push	r13
0x61d9:	push	r12
0x61db:	mov	r14, rdi
0x61de:	push	rbp
0x61df:	push	rbx
0x61e0:	mov	ebx, r9d
0x61e3:	mov	r13, rsi
0x61e6:	mov	rbp, rcx
0x61e9:	and	ebx, 2
0x61ec:	sub	rsp, 0xb8
0x61f3:	mov	rax, qword ptr [rsp + 0xf0]
0x61fb:	mov	qword ptr [rsp + 0x10], rdx
0x6200:	mov	dword ptr [rsp + 8], r8d
0x6205:	mov	dword ptr [rsp + 0x78], r9d
0x620a:	mov	qword ptr [rsp + 0x20], rax
0x620f:	mov	rax, qword ptr [rsp + 0xf8]
0x6217:	mov	qword ptr [rsp + 0x68], rax
0x621c:	mov	rax, qword ptr [rsp + 0x100]
0x6224:	mov	qword ptr [rsp + 0x60], rax
0x6229:	mov	rax, qword ptr fs:[0x28]
0x6232:	mov	qword ptr [rsp + 0xa8], rax
0x623a:	xor	eax, eax
0x623c:	call	0x1a90


0x60e0:	push	rbp
0x60e1:	push	rbx
0x60e2:	mov	rbp, rdi
0x60e5:	mov	ebx, esi
0x60e7:	sub	rsp, 8
0x60eb:	call	0x9290


0x6040:	test	rdi, rdi
0x6043:	push	rbx
0x6044:	je	0x60bd


0x5fa0:	push	r15
0x5fa2:	push	r14
0x5fa4:	mov	r15, rdi
0x5fa7:	push	r13
0x5fa9:	push	r12
0x5fab:	xor	r12d, r12d
0x5fae:	push	rbp
0x5faf:	push	rbx
0x5fb0:	mov	rbp, rsi
0x5fb3:	sub	rsp, 0x18
0x5fb7:	mov	r13, qword ptr [rsi]
0x5fba:	mov	dword ptr [rsp + 8], edx
0x5fbe:	mov	dword ptr [rsp + 0xc], ecx
0x5fc2:	mov	rax, r13
0x5fc5:	nop	dword ptr [rax]
0x5fc8:	lea	rbx, [rax + 1]
0x5fcc:	mov	rdi, r12
0x5fcf:	mov	rsi, rbx
0x5fd2:	call	0x1c30


0x5bd0:	push	r15
0x5bd2:	push	r14
0x5bd4:	mov	r14, rdi
0x5bd7:	push	r13
0x5bd9:	push	r12
0x5bdb:	mov	r13, rsi
0x5bde:	push	rbp
0x5bdf:	push	rbx
0x5be0:	mov	ebx, r9d
0x5be3:	mov	r12, rcx
0x5be6:	sub	rsp, 0x38
0x5bea:	mov	qword ptr [rsp + 0x10], rdx
0x5bef:	mov	dword ptr [rsp + 0x1c], r8d
0x5bf4:	call	0x1aa0


0x5b20:	push	rbp
0x5b21:	push	rbx
0x5b22:	sub	rsp, 8
0x5b26:	mov	rdi, qword ptr [rip + 0x20859b]
0x5b2d:	call	0x91b0


0x5b10:	mov	byte ptr [rip + 0x208689], dil
0x5b17:	ret	


0x5b00:	mov	qword ptr [rip + 0x2086a1], rdi
0x5b07:	ret	


0x5ab0:	push	r14
0x5ab2:	push	r13
0x5ab4:	push	r12
0x5ab6:	push	rbp
0x5ab7:	push	rbx
0x5ab8:	mov	r14, qword ptr [rsi]
0x5abb:	test	r14, r14
0x5abe:	je	0x5af1


0x5a40:	push	r15
0x5a42:	push	r14
0x5a44:	mov	r14, rdi
0x5a47:	push	r13
0x5a49:	push	r12
0x5a4b:	mov	r12, rsi
0x5a4e:	push	rbp
0x5a4f:	push	rbx
0x5a50:	mov	rbp, rcx
0x5a53:	mov	rbx, rdx
0x5a56:	mov	rcx, r8
0x5a59:	mov	rdx, rbp
0x5a5c:	sub	rsp, 8
0x5a60:	mov	rsi, rbx
0x5a63:	mov	rdi, r12
0x5a66:	mov	r15, r8
0x5a69:	mov	r13, r9
0x5a6c:	call	0x5780


0x5920:	push	r15
0x5922:	push	r14
0x5924:	mov	r14, rdi
0x5927:	push	r13
0x5929:	push	r12
0x592b:	xor	edi, edi
0x592d:	push	rbp
0x592e:	push	rbx
0x592f:	mov	rbp, rsi
0x5932:	lea	rsi, [rip + 0x5aa5]
0x5939:	mov	r12, rdx
0x593c:	mov	edx, 5
0x5941:	sub	rsp, 8
0x5945:	mov	rbx, qword ptr [rip + 0x2087b4]
0x594c:	call	0x1a80


0x58a0:	cmp	rdx, -1
0x58a4:	push	r12
0x58a6:	mov	edx, 5
0x58ab:	push	rbp
0x58ac:	mov	r12, rsi
0x58af:	push	rbx
0x58b0:	mov	rbp, rdi
0x58b3:	je	0x5900


0x5780:	push	r15
0x5782:	push	r14
0x5784:	mov	r15, rsi
0x5787:	push	r13
0x5789:	push	r12
0x578b:	mov	r13, rcx
0x578e:	push	rbp
0x578f:	push	rbx
0x5790:	mov	rbp, rdx
0x5793:	sub	rsp, 0x28
0x5797:	mov	qword ptr [rsp + 8], rdi
0x579c:	mov	qword ptr [rsp + 0x18], rdx
0x57a1:	call	0x1aa0


0x5770:	mov	edi, 1
0x5775:	jmp	0x4940


0x5730:	sub	rsp, 8
0x5734:	mov	rdi, qword ptr [rip + 0x208bbd]
0x573b:	mov	qword ptr [rip + 0x208bba], 0
0x5746:	mov	qword ptr [rip + 0x208a47], 0
0x5751:	call	0x19b0


0x5170:	push	r15
0x5172:	push	r14
0x5174:	mov	eax, esi
0x5176:	push	r13
0x5178:	push	r12
0x517a:	mov	r14, rdi
0x517d:	push	rbp
0x517e:	push	rbx
0x517f:	sub	rsp, 0x28
0x5183:	and	eax, 1
0x5186:	mov	dword ptr [rsp + 0x1c], esi
0x518a:	mov	dword ptr [rsp + 0x18], eax
0x518e:	je	0x51ae


0x50a0:	push	rbp
0x50a1:	push	rbx
0x50a2:	mov	rbx, rsi
0x50a5:	mov	rbp, rdi
0x50a8:	sub	rsp, 8
0x50ac:	mov	rsi, qword ptr [rip + 0x20924d]
0x50b3:	cmp	rsi, qword ptr [rip + 0x2090de]
0x50ba:	mov	rdi, qword ptr [rip + 0x209237]
0x50c1:	je	0x50f0


0x5080:	mov	eax, dword ptr [rsi]
0x5082:	cmp	dword ptr [rdi], eax
0x5084:	jl	0x5090


0x4940:	push	r13
0x4942:	push	r12
0x4944:	mov	edx, 5
0x4949:	push	rbp
0x494a:	push	rbx
0x494b:	mov	ebp, edi
0x494d:	sub	rsp, 0x88
0x4954:	mov	rbx, qword ptr [rip + 0x209855]
0x495b:	mov	rax, qword ptr fs:[0x28]
0x4964:	mov	qword ptr [rsp + 0x78], rax
0x4969:	xor	eax, eax
0x496b:	test	edi, edi
0x496d:	je	0x499d


0x4770:	push	r15
0x4772:	push	r14
0x4774:	mov	r14d, esi
0x4777:	push	r13
0x4779:	push	r12
0x477b:	xor	r13d, r13d
0x477e:	push	rbp
0x477f:	push	rbx
0x4780:	mov	r12d, 1
0x4786:	xor	ebp, ebp
0x4788:	sub	rsp, 0x18
0x478c:	mov	eax, dword ptr [rip + 0x209882]
0x4792:	nop	word ptr [rax + rax]
0x4798:	add	rbp, 1
0x479c:	cmp	eax, 0x80
0x47a1:	movzx	r15d, byte ptr [rdi]
0x47a5:	je	0x4830


0x2f70:	push	r15
0x2f72:	push	r14
0x2f74:	push	r13
0x2f76:	push	r12
0x2f78:	mov	r13, rsi
0x2f7b:	push	rbp
0x2f7c:	push	rbx
0x2f7d:	mov	r12, rdi
0x2f80:	sub	rsp, 0x168
0x2f87:	mov	rax, qword ptr fs:[0x28]
0x2f90:	mov	qword ptr [rsp + 0x158], rax
0x2f98:	xor	eax, eax
0x2f9a:	mov	rax, qword ptr [rip + 0x20b357]
0x2fa1:	test	rax, rax
0x2fa4:	jne	0x2fbf


0x2f40:	sub	rsp, 8
0x2f44:	lea	rsi, [rdi + 1]
0x2f48:	mov	rdi, qword ptr [rip + 0x20b219]
0x2f4f:	mov	qword ptr [rip + 0x20b20a], rsi
0x2f56:	call	0x83f0


0x2dd0:	push	r12
0x2dd2:	push	rbp
0x2dd3:	push	rbx
0x2dd4:	mov	rbx, rdi
0x2dd7:	sub	rsp, 0x20
0x2ddb:	mov	rax, qword ptr fs:[0x28]
0x2de4:	mov	qword ptr [rsp + 0x18], rax
0x2de9:	xor	eax, eax
0x2deb:	call	0x1aa0


0x2ca0:	push	rbp
0x2ca1:	push	rbx
0x2ca2:	mov	rbp, rdx
0x2ca5:	sub	rsp, 0x28
0x2ca9:	cmp	byte ptr [rdi], 0x2d
0x2cac:	je	0x2d80


0x2c90:	push	rbp
0x2c91:	mov	rbp, rsp
0x2c94:	pop	rbp
0x2c95:	jmp	0x2c00


0x2c50:	cmp	byte ptr [rip + 0x20b4b1], 0
0x2c57:	jne	0x2c88


0x2c00:	lea	rdi, [rip + 0x20b4b9]
0x2c07:	lea	rsi, [rip + 0x20b4b2]
0x2c0e:	push	rbp
0x2c0f:	sub	rsi, rdi
0x2c12:	mov	rbp, rsp
0x2c15:	sar	rsi, 3
0x2c19:	mov	rax, rsi
0x2c1c:	shr	rax, 0x3f
0x2c20:	add	rsi, rax
0x2c23:	sar	rsi, 1
0x2c26:	je	0x2c40


0x2bc0:	lea	rdi, [rip + 0x20b4f9]
0x2bc7:	push	rbp
0x2bc8:	lea	rax, [rip + 0x20b4f1]
0x2bcf:	cmp	rax, rdi
0x2bd2:	mov	rbp, rsp
0x2bd5:	je	0x2bf0


0x2b90:	xor	ebp, ebp
0x2b92:	mov	r9, rdx
0x2b95:	pop	rsi
0x2b96:	mov	rdx, rsp
0x2b99:	and	rsp, 0xfffffffffffffff0
0x2b9d:	push	rax
0x2b9e:	push	rsp
0x2b9f:	lea	r8, [rip + 0x68ba]
0x2ba6:	lea	rcx, [rip + 0x6843]
0x2bad:	lea	rdi, [rip - 0xe64]
0x2bb4:	call	qword ptr [rip + 0x20b41e]


0x1d50:	push	r15
0x1d52:	push	r14
0x1d54:	push	r13
0x1d56:	push	r12
0x1d58:	push	rbp
0x1d59:	push	rbx
0x1d5a:	mov	ebp, edi
0x1d5c:	mov	rbx, rsi
0x1d5f:	sub	rsp, 0x48
0x1d63:	mov	rdi, qword ptr [rsi]
0x1d66:	mov	rax, qword ptr fs:[0x28]
0x1d6f:	mov	qword ptr [rsp + 0x38], rax
0x1d74:	xor	eax, eax
0x1d76:	call	0x6040


0x1970:	sub	rsp, 8
0x1974:	mov	rax, qword ptr [rip + 0x20c665]
0x197b:	test	rax, rax
0x197e:	je	0x1982


0x1ca0:	jmp	qword ptr [rip + 0x20c2da]


0x93a0:	mov	rax, qword ptr [rdi + 0x20]
0x93a4:	cmp	qword ptr [rdi + 0x28], rax
0x93a8:	jne	0x939a


0x939a:	jmp	0x1c90


0x936a:	mov	rdi, rbx
0x936d:	pop	rbx
0x936e:	jmp	0x1c00


0x9359:	call	0x1c20


0x1bd0:	jmp	qword ptr [rip + 0x20c342]


0x1c10:	jmp	qword ptr [rip + 0x20c322]


0x1c40:	jmp	qword ptr [rip + 0x20c30a]


0x1a10:	jmp	qword ptr [rip + 0x20c422]


0x1ad0:	jmp	qword ptr [rip + 0x20c3c2]


0x8d27:	lea	rax, [rsp + 0x10]
0x8d2c:	mov	r15, rsi
0x8d2f:	test	rsi, rsi
0x8d32:	mov	rbp, rdi
0x8d35:	mov	dword ptr [rsp + 8], edx
0x8d39:	mov	r14, rcx
0x8d3c:	mov	r13, r8
0x8d3f:	cmove	r15, rax
0x8d43:	call	0x19d0


0x9085:	lea	rcx, [rip + 0x2e14]
0x908c:	lea	rsi, [rip + 0x2c0d]
0x9093:	lea	rdi, [rip + 0x2c26]
0x909a:	mov	edx, 0x54
0x909f:	call	0x1b20


0x8667:	lea	rax, [rsp + 0x10]
0x866c:	test	rsi, rsi
0x866f:	mov	rbx, rsi
0x8672:	mov	r12, rdi
0x8675:	mov	ebp, edx
0x8677:	mov	r14, rcx
0x867a:	cmove	rbx, rax
0x867e:	mov	r15, r8
0x8681:	call	0x19d0


0x8ccf:	lea	rcx, [rip + 0x30ea]
0x8cd6:	lea	rsi, [rip + 0x2fc3]
0x8cdd:	lea	rdi, [rip + 0x2fdc]
0x8ce4:	mov	edx, 0x54
0x8ce9:	call	0x1b20


0x1b60:	jmp	qword ptr [rip + 0x20c37a]


0x1a80:	jmp	qword ptr [rip + 0x20c3ea]


0x1aa0:	jmp	qword ptr [rip + 0x20c3da]


0x8589:	call	0x85e0


0x8572:	movzx	edx, dl
0x8575:	test	rdx, rdx
0x8578:	jne	0x8589


0x8520:	test	rax, rax
0x8523:	mov	edx, 0x80
0x8528:	cmove	rax, rdx
0x852c:	test	rax, rax
0x852f:	jns	0x8512


0x84f8:	movabs	rdx, 0x5555555555555553
0x8502:	cmp	rax, rdx
0x8505:	ja	0x8531


0x84a0:	test	rcx, rcx
0x84a3:	je	0x84c8


0x846b:	xor	edx, edx
0x846d:	movabs	rax, 0x5555555555555554
0x8477:	div	r9
0x847a:	cmp	rax, rcx
0x847d:	jbe	0x84bb


0x844b:	sub	rsp, 8
0x844f:	call	0x85e0


0x8441:	movzx	eax, al
0x8444:	test	rax, rax
0x8447:	jne	0x844b


0x83f9:	test	rdi, rdi
0x83fc:	jne	0x8418


0x83fe:	mov	rsi, rbx
0x8401:	call	0x1c30


0x83cb:	sub	rsp, 8
0x83cf:	call	0x85e0


0x83c1:	movzx	eax, al
0x83c4:	test	rax, rax
0x83c7:	jne	0x83cb


0x1bf0:	jmp	qword ptr [rip + 0x20c332]


0x82a6:	mov	eax, r10d
0x82a9:	mov	r11d, 1
0x82af:	add	r10d, 8
0x82b3:	add	rax, rbp
0x82b6:	mov	rax, qword ptr [rax]
0x82b9:	test	rax, rax
0x82bc:	mov	qword ptr [r8 + r9*8], rax
0x82c0:	je	0x82cc


0x82fc:	mov	rax, rbx
0x82ff:	add	rbx, 8
0x8303:	jmp	0x82b6


0x81d8:	mov	r11d, eax
0x81db:	add	r11, qword ptr [r10 + 0x10]
0x81df:	add	eax, 8
0x81e2:	mov	dword ptr [r10], eax
0x81e5:	mov	rax, qword ptr [r11]
0x81e8:	test	rax, rax
0x81eb:	mov	qword ptr [r8 + r9*8], rax
0x81ef:	je	0x81fb


0x821a:	mov	r11, qword ptr [r10 + 8]
0x821e:	lea	rax, [r11 + 8]
0x8222:	mov	qword ptr [r10 + 8], rax
0x8226:	jmp	0x81e5


0x81ab:	jmp	0x7d70


0x7ea8:	mov	r8, rcx
0x7eab:	mov	rcx, rdx
0x7eae:	lea	rdx, [rip + 0x3a7f]
0x7eb5:	mov	esi, 1
0x7eba:	xor	eax, eax
0x7ebc:	call	0x1ce0


0x7d90:	mov	r8, rdx
0x7d93:	lea	rdx, [rip + 0x3b8e]
0x7d9a:	mov	r9, rcx
0x7d9d:	xor	eax, eax
0x7d9f:	mov	rcx, rsi
0x7da2:	mov	esi, 1
0x7da7:	call	0x1ce0


0x7c97:	call	0x19c0


0x7c65:	test	rdx, rdx
0x7c68:	je	0x7c97


0x7c04:	call	0x19c0


0x7b9c:	mov	dword ptr [rsp], esi
0x7b9f:	mov	rcx, rsp
0x7ba2:	mov	rdx, -1
0x7ba9:	mov	rsi, rax
0x7bac:	mov	qword ptr [rsp + 4], 0
0x7bb5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x7bbe:	mov	qword ptr [rsp + 0x14], 0
0x7bc7:	mov	qword ptr [rsp + 0x1c], 0
0x7bd0:	mov	qword ptr [rsp + 0x24], 0
0x7bd9:	mov	qword ptr [rsp + 0x2c], 0
0x7be2:	mov	dword ptr [rsp + 0x34], 0
0x7bea:	call	0x7410


0x7a70:	call	0x19c0


0x7a0f:	mov	dword ptr [rsp], esi
0x7a12:	mov	rcx, rsp
0x7a15:	mov	rsi, rax
0x7a18:	mov	qword ptr [rsp + 4], 0
0x7a21:	mov	qword ptr [rsp + 0xc], 0
0x7a2a:	mov	qword ptr [rsp + 0x14], 0
0x7a33:	mov	qword ptr [rsp + 0x1c], 0
0x7a3c:	mov	qword ptr [rsp + 0x24], 0
0x7a45:	mov	qword ptr [rsp + 0x2c], 0
0x7a4e:	mov	dword ptr [rsp + 0x34], 0
0x7a56:	call	0x7410


0x79e4:	call	0x19c0


0x797c:	mov	dword ptr [rsp], esi
0x797f:	mov	rcx, rsp
0x7982:	mov	rdx, -1
0x7989:	mov	rsi, rax
0x798c:	mov	qword ptr [rsp + 4], 0
0x7995:	mov	qword ptr [rsp + 0xc], 0
0x799e:	mov	qword ptr [rsp + 0x14], 0
0x79a7:	mov	qword ptr [rsp + 0x1c], 0
0x79b0:	mov	qword ptr [rsp + 0x24], 0
0x79b9:	mov	qword ptr [rsp + 0x2c], 0
0x79c2:	mov	dword ptr [rsp + 0x34], 0
0x79ca:	call	0x7410


0x7891:	mov	rdi, qword ptr [r12 + 8]
0x7896:	lea	rbx, [rip + 0x206923]
0x789d:	cmp	rdi, rbx
0x78a0:	je	0x78b9


0x7866:	sub	eax, 2
0x7869:	lea	rbx, [r12 + 0x18]
0x786e:	shl	rax, 4
0x7872:	lea	rbp, [r12 + rax + 0x28]
0x7877:	nop	word ptr [rax + rax]
0x7880:	mov	rdi, qword ptr [rbx]
0x7883:	add	rbx, 0x10
0x7887:	call	0x19b0


0x19d0:	jmp	qword ptr [rip + 0x20c442]


0x76c7:	sub	rsp, 8
0x76cb:	call	0x19c0


0x76b9:	test	rdx, rdx
0x76bc:	je	0x76c7


0x1a90:	jmp	qword ptr [rip + 0x20c3e2]


0x60bd:	mov	rcx, qword ptr [rip + 0x20803c]
0x60c4:	lea	rdi, [rip + 0x534d]
0x60cb:	mov	edx, 0x37
0x60d0:	mov	esi, 1
0x60d5:	call	0x1cd0


0x6046:	mov	esi, 0x2f
0x604b:	mov	rbx, rdi
0x604e:	call	0x1b00


0x1c30:	jmp	qword ptr [rip + 0x20c312]


0x5af1:	pop	rbx
0x5af2:	mov	rax, r14
0x5af5:	pop	rbp
0x5af6:	pop	r12
0x5af8:	pop	r13
0x5afa:	pop	r14
0x5afc:	ret	


0x5ac0:	mov	r12, rcx
0x5ac3:	mov	r13, rdi
0x5ac6:	mov	rbp, rdx
0x5ac9:	lea	rbx, [rsi + 8]
0x5acd:	jmp	0x5adf


0x5900:	lea	rsi, [rip + 0x5a9f]
0x5907:	xor	edi, edi
0x5909:	call	0x1a80


0x58b5:	lea	rsi, [rip + 0x5b05]
0x58bc:	xor	edi, edi
0x58be:	call	0x1a80


0x19b0:	jmp	qword ptr [rip + 0x20c452]


0x51ae:	xor	r15d, r15d
0x51b1:	xor	ebx, ebx
0x51b3:	mov	ebp, ebx
0x51b5:	xor	r13d, r13d
0x51b8:	xor	r12d, r12d
0x51bb:	mov	qword ptr [rsp + 0x10], 1
0x51c4:	jmp	0x524e


0x5190:	lea	rdi, [rip + 0x62c3]
0x5197:	mov	ecx, 2
0x519c:	mov	rsi, r14
0x519f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x50f0:	test	rdi, rdi
0x50f3:	je	0x5138


0x50c3:	mov	rax, rsi
0x50c6:	add	rsi, 1
0x50ca:	shl	rax, 4
0x50ce:	add	rdi, rax
0x50d1:	mov	qword ptr [rdi], rbp
0x50d4:	mov	qword ptr [rdi + 8], rbx
0x50d8:	mov	qword ptr [rip + 0x209221], rsi
0x50df:	add	rsp, 8
0x50e3:	pop	rbx
0x50e4:	pop	rbp
0x50e5:	ret	


0x5090:	mov	eax, 0xffffffff
0x5095:	ret	


0x5086:	setg	al
0x5089:	movzx	eax, al
0x508c:	ret	


0x499d:	lea	rsi, [rip + 0x5294]
0x49a4:	xor	edi, edi
0x49a6:	call	0x1a80


0x496f:	lea	rsi, [rip + 0x529a]
0x4976:	xor	edi, edi
0x4978:	call	0x1a80


0x4830:	test	r15b, r15b
0x4833:	je	0x47db


0x47ab:	movsx	edx, r15b
0x47af:	cmp	edx, eax
0x47b1:	je	0x4910


0x2fa6:	jmp	0x3010


0x2fbf:	mov	rdx, qword ptr [rax]
0x2fc2:	cmp	rdx, -1
0x2fc6:	jne	0x2fb0


0x2d80:	add	rdi, 1
0x2d84:	mov	byte ptr [rcx], 1
0x2d87:	test	rdi, rdi
0x2d8a:	mov	qword ptr [rsi], rdi
0x2d8d:	jne	0x2cb8


0x2cb2:	mov	byte ptr [rcx], 0
0x2cb5:	mov	qword ptr [rsi], rdi
0x2cb8:	fldz	
0x2cba:	xor	r9d, r9d
0x2cbd:	xor	r8d, r8d
0x2cc0:	xor	ebx, ebx
0x2cc2:	mov	r10d, 1
0x2cc8:	fld	dword ptr [rip + 0x84e6]
0x2cce:	jmp	0x2d05


0x2c59:	cmp	qword ptr [rip + 0x20b38f], 0
0x2c61:	push	rbp
0x2c62:	mov	rbp, rsp
0x2c65:	je	0x2c73


0x2c88:	ret	


0x2c40:	pop	rbp
0x2c41:	ret	


0x2c28:	mov	rax, qword ptr [rip + 0x20b3b9]
0x2c2f:	test	rax, rax
0x2c32:	je	0x2c40


0x2bf0:	pop	rbp
0x2bf1:	ret	


0x2bd7:	mov	rax, qword ptr [rip + 0x20b3f2]
0x2bde:	test	rax, rax
0x2be1:	je	0x2bf0




0x1982:	add	rsp, 8
0x1986:	ret	


0x1980:	call	rax




0x93aa:	cmp	qword ptr [rdi + 0x48], 0
0x93af:	jne	0x939a


0x1c90:	jmp	qword ptr [rip + 0x20c2e2]


0x1c00:	jmp	qword ptr [rip + 0x20c32a]


0x1c20:	jmp	qword ptr [rip + 0x20c31a]












0x1b20:	jmp	qword ptr [rip + 0x20c39a]








0x857a:	call	0x1b90


0x8531:	sub	rsp, 8
0x8535:	call	0x85e0


0x8512:	mov	qword ptr [rsi], rax
0x8515:	mov	rsi, rax
0x8518:	jmp	0x83f0


0x8507:	mov	rdx, rax
0x850a:	shr	rdx, 1
0x850d:	lea	rax, [rdx + rax + 1]
0x8512:	mov	qword ptr [rsi], rax
0x8515:	mov	rsi, rax
0x8518:	jmp	0x83f0


0x84c8:	xor	edx, edx
0x84ca:	mov	eax, 0x80
0x84cf:	xor	r8d, r8d
0x84d2:	div	r9
0x84d5:	test	rax, rax
0x84d8:	sete	r8b
0x84dc:	lea	rcx, [r8 + rax]
0x84e0:	jmp	0x84a5


0x84a5:	mov	rax, rcx
0x84a8:	mul	r9
0x84ab:	seto	dl
0x84ae:	test	rax, rax
0x84b1:	movzx	edx, dl
0x84b4:	js	0x84bb


0x84bb:	sub	rsp, 8
0x84bf:	call	0x85e0


0x847f:	mov	rax, rcx
0x8482:	shr	rax, 1
0x8485:	lea	rcx, [rax + rcx + 1]
0x848a:	mov	qword ptr [rsi], rcx
0x848d:	imul	rcx, r9
0x8491:	mov	rsi, rcx
0x8494:	jmp	0x83f0


0x8449:	jmp	0x83f0


0x8418:	call	0x19b0


0x83c9:	jmp	0x8390




0x82cc:	test	r11b, r11b
0x82cf:	jne	0x82f5


0x82c2:	add	r9, 1
0x82c6:	cmp	r9, 0xa
0x82ca:	jne	0x82a0


0x82b6:	mov	rax, qword ptr [rax]
0x82b9:	test	rax, rax
0x82bc:	mov	qword ptr [r8 + r9*8], rax
0x82c0:	je	0x82cc


0x81fb:	call	0x7d70


0x81f1:	add	r9, 1
0x81f5:	cmp	r9, 0xa
0x81f9:	jne	0x81d0


0x81e5:	mov	rax, qword ptr [r11]
0x81e8:	test	rax, rax
0x81eb:	mov	qword ptr [r8 + r9*8], rax
0x81ef:	je	0x81fb


0x81a0:	add	r9, 1
0x81a4:	cmp	qword ptr [r8 + r9*8], 0
0x81a9:	jne	0x81a0


0x1ce0:	jmp	qword ptr [rip + 0x20c2ba]


0x19c0:	jmp	qword ptr [rip + 0x20c44a]


0x7c6a:	mov	qword ptr [rsp + 0x28], rsi
0x7c6f:	mov	qword ptr [rsp + 0x30], rdx
0x7c74:	mov	rcx, rsp
0x7c77:	mov	rdx, r8
0x7c7a:	mov	rsi, r9
0x7c7d:	call	0x7410


0x78b9:	lea	rbx, [rip + 0x2067f0]
0x78c0:	cmp	r12, rbx
0x78c3:	je	0x78d4


0x78a2:	call	0x19b0




0x76be:	mov	qword ptr [rdi + 0x28], rsi
0x76c2:	mov	qword ptr [rdi + 0x30], rdx
0x76c6:	ret	




0x1cd0:	jmp	qword ptr [rip + 0x20c2c2]


0x1b00:	jmp	qword ptr [rip + 0x20c3aa]




0x5adf:	mov	rdx, r12
0x5ae2:	mov	rsi, rbp
0x5ae5:	mov	rdi, r13
0x5ae8:	call	0x1b70




0x524e:	movzx	r8d, byte ptr [r14]
0x5252:	cmp	r8b, 0x2d
0x5256:	jne	0x51d0


0x519f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x51a1:	seta	al
0x51a4:	sbb	al, 0
0x51a6:	test	al, al
0x51a8:	je	0x54a9


0x5138:	test	rsi, rsi
0x513b:	mov	eax, 8
0x5140:	mov	edx, 0x10
0x5145:	cmove	rsi, rax
0x5149:	mov	rax, rdx
0x514c:	xor	ecx, ecx
0x514e:	mul	rsi
0x5151:	jo	0x5162


0x50f5:	movabs	rax, 0x555555555555554
0x50ff:	cmp	rsi, rax
0x5102:	ja	0x515d


0x47db:	mov	rsi, rbp
0x47de:	call	0x2f70


0x4835:	mov	qword ptr [rsp + 8], rdi
0x483a:	call	0x1d30


0x4910:	mov	rbx, rdi
0x4913:	jmp	0x4898


0x47b7:	test	r15b, r15b
0x47ba:	je	0x47db


0x3010:	cmp	rsi, 1
0x3014:	jne	0x2fc8


0x2fc8:	mov	rsi, qword ptr [rip + 0x20b0f9]
0x2fcf:	mov	rdi, r12
0x2fd2:	mov	ebx, 1
0x2fd7:	call	0x1b80


0x2fb0:	cmp	r13, rdx
0x2fb3:	jb	0x2fbb


0x2d93:	xor	ebx, ebx
0x2d95:	fldz	
0x2d97:	jmp	0x2d37


0x2cb8:	fldz	
0x2cba:	xor	r9d, r9d
0x2cbd:	xor	r8d, r8d
0x2cc0:	xor	ebx, ebx
0x2cc2:	mov	r10d, 1
0x2cc8:	fld	dword ptr [rip + 0x84e6]
0x2cce:	jmp	0x2d05


0x2d05:	movsx	eax, byte ptr [rdi]
0x2d08:	mov	edx, eax
0x2d0a:	sub	edx, 0x30
0x2d0d:	cmp	dl, 9
0x2d10:	ja	0x2d30


0x2c73:	call	0x2bc0


0x2c67:	mov	rdi, qword ptr [rip + 0x20b39a]
0x2c6e:	call	0x1d40


0x2c34:	pop	rbp
0x2c35:	jmp	rax


0x2be3:	pop	rbp
0x2be4:	jmp	rax


0x93b1:	push	r12
0x93b3:	push	rbp
0x93b4:	mov	r12d, edx
0x93b7:	push	rbx
0x93b8:	mov	rbp, rsi
0x93bb:	mov	rbx, rdi
0x93be:	call	0x1bd0










0x1b90:	jmp	qword ptr [rip + 0x20c362]


0x84b6:	test	rdx, rdx
0x84b9:	je	0x848a


0x82d1:	call	0x7d70


0x82f5:	mov	dword ptr [rsp + 8], r10d
0x82fa:	jmp	0x82d1


0x82a0:	cmp	r10d, 0x2f
0x82a4:	ja	0x82fc


0x81d0:	mov	eax, dword ptr [r10]
0x81d3:	cmp	eax, 0x2f
0x81d6:	ja	0x821a






0x78d4:	pop	rbx
0x78d5:	mov	dword ptr [rip + 0x2067b9], 1
0x78df:	pop	rbp
0x78e0:	pop	r12
0x78e2:	ret	


0x78c5:	mov	rdi, r12
0x78c8:	call	0x19b0






0x1b70:	jmp	qword ptr [rip + 0x20c372]


0x525c:	test	bpl, bpl
0x525f:	jne	0x55ed


0x51d0:	cmp	r8b, 0x2c
0x51d4:	mov	byte ptr [rsp + 8], r8b
0x51d9:	je	0x51f7


0x54a9:	add	r14, 1
0x54ad:	mov	r15d, 1
0x54b3:	mov	ebx, 1
0x54b8:	jmp	0x51b3


0x5162:	mov	ecx, 1
0x5167:	jmp	0x5153


0x5153:	test	rax, rax
0x5156:	js	0x515d


0x5104:	mov	rax, rsi
0x5107:	shr	rax, 1
0x510a:	lea	rsi, [rsi + rax + 1]
0x510f:	mov	qword ptr [rip + 0x209082], rsi
0x5116:	shl	rsi, 4
0x511a:	call	0x83f0


0x515d:	call	0x85e0


0x1d30:	jmp	qword ptr [rip + 0x20c292]


0x4898:	test	r15b, r15b
0x489b:	je	0x47db


0x47bc:	mov	rbx, rdi
0x47bf:	jmp	0x47d0


0x3016:	mov	rbp, qword ptr [rip + 0x20b15b]
0x301d:	test	rbp, rbp
0x3020:	je	0x3068


0x1b80:	jmp	qword ptr [rip + 0x20c36a]


0x2fbb:	add	rax, 0x10
0x2fbf:	mov	rdx, qword ptr [rax]
0x2fc2:	cmp	rdx, -1
0x2fc6:	jne	0x2fb0


0x2fb5:	cmp	r13, qword ptr [rax + 8]
0x2fb9:	jbe	0x3016


0x2d37:	fstp	xword ptr [rsp]
0x2d3a:	movsxd	rdx, dword ptr [rip + 0x20b3d3]
0x2d41:	mov	rsi, qword ptr [rip + 0x20b3d0]
0x2d48:	mov	qword ptr [rsp + 0x18], rcx
0x2d4d:	call	0x19e0


0x2d12:	fldz	
0x2d14:	sub	eax, 0x30
0x2d17:	fucomip	st(2)
0x2d19:	setp	dl
0x2d1c:	cmovne	edx, r10d
0x2d20:	test	dl, dl
0x2d22:	je	0x2cd0


0x2d30:	fstp	st(0)
0x2d32:	test	r9b, r9b
0x2d35:	jne	0x2d62


0x1d40:	jmp	qword ptr [rip + 0x20c2aa]




0x848a:	mov	qword ptr [rsi], rcx
0x848d:	imul	rcx, r9
0x8491:	mov	rsi, rcx
0x8494:	jmp	0x83f0




0x5265:	test	r15, r15
0x5268:	sete	r9b
0x526c:	and	r9b, bl
0x526f:	mov	r13d, r9d
0x5272:	jne	0x5596


0x55ed:	test	byte ptr [rsp + 0x1c], 4
0x55f2:	mov	edx, 5
0x55f7:	je	0x568a


0x51f7:	test	bpl, bpl
0x51fa:	je	0x52a0


0x51db:	call	0x1d30


0x51b3:	mov	ebp, ebx
0x51b5:	xor	r13d, r13d
0x51b8:	xor	r12d, r12d
0x51bb:	mov	qword ptr [rsp + 0x10], 1
0x51c4:	jmp	0x524e


0x5158:	test	rcx, rcx
0x515b:	je	0x510f




0x48a1:	mov	rsi, rbp
0x48a4:	mov	byte ptr [rbx], 0
0x48a7:	call	0x2f70


0x47d0:	add	rbx, 1
0x47d4:	movsx	edx, byte ptr [rbx]
0x47d7:	test	dl, dl
0x47d9:	jne	0x47c8


0x3068:	movzx	ebx, byte ptr [r12]
0x306d:	test	bl, bl
0x306f:	je	0x3857


0x3022:	mov	rdi, r12
0x3025:	call	0x1aa0




0x19e0:	jmp	qword ptr [rip + 0x20c43a]


0x2cd0:	test	eax, eax
0x2cd2:	jne	0x2d24


0x2d24:	add	r8d, 1
0x2d28:	jmp	0x2cd4


0x2d62:	cmp	byte ptr [rcx], 0
0x2d65:	jne	0x2d78


0x5278:	test	bl, bl
0x527a:	jne	0x5420


0x5596:	test	byte ptr [rsp + 0x1c], 4
0x559b:	mov	edx, 5
0x55a0:	je	0x55c8


0x568a:	lea	rsi, [rip + 0x5b7f]
0x5691:	xor	edi, edi
0x5693:	call	0x1a80


0x55fd:	lea	rsi, [rip + 0x5cac]
0x5604:	xor	edi, edi
0x5606:	call	0x1a80


0x52a0:	test	r15, r15
0x52a3:	je	0x5596


0x5200:	test	bl, bl
0x5202:	jne	0x53f0


0x510f:	mov	qword ptr [rip + 0x209082], rsi
0x5116:	shl	rsi, 4
0x511a:	call	0x83f0


0x47c8:	cmp	edx, eax
0x47ca:	je	0x48a1


0x3857:	mov	rbp, r12
0x385a:	xor	eax, eax
0x385c:	jmp	0x309f


0x3075:	call	0x1d30




0x2cd4:	cmp	r8d, 0x12
0x2cd8:	jbe	0x2ce9


0x2d67:	mov	eax, ebx
0x2d69:	fstp	xword ptr [rbp]
0x2d6c:	add	rsp, 0x28
0x2d70:	pop	rbx
0x2d71:	pop	rbp
0x2d72:	ret	


0x2d78:	fchs	
0x2d7a:	jmp	0x2d67


0x5280:	mov	r13d, ebx
0x5283:	xor	r15d, r15d
0x5286:	mov	ebp, 1
0x528b:	mov	qword ptr [rsp + 0x10], 1
0x5294:	jmp	0x524a


0x5420:	mov	qword ptr [rsp + 0x10], r15
0x5425:	mov	ebp, ebx
0x5427:	xor	r15d, r15d
0x542a:	jmp	0x524a


0x55c8:	lea	rsi, [rip + 0x5c55]
0x55cf:	xor	edi, edi
0x55d1:	call	0x1a80


0x55a2:	lea	rsi, [rip + 0x5d27]
0x55a9:	xor	edi, edi
0x55ab:	call	0x1a80


0x52a9:	mov	rsi, r15
0x52ac:	mov	rdi, r15
0x52af:	call	0x50a0


0x5208:	test	r12b, r12b
0x520b:	jne	0x5400


0x53f0:	test	r12b, r12b
0x53f3:	je	0x5226


0x309f:	mov	r11d, dword ptr [rip + 0x20b08a]
0x30a6:	test	r11d, r11d
0x30a9:	je	0x31b9


0x2ce9:	mov	dword ptr [rsp], eax
0x2cec:	add	rdi, 1
0x2cf0:	test	rdi, rdi
0x2cf3:	mov	qword ptr [rsi], rdi
0x2cf6:	mov	r9d, 1
0x2cfc:	fmul	st(1), st(0)
0x2cfe:	fild	dword ptr [rsp]
0x2d01:	faddp	st(2)
0x2d03:	je	0x2d60


0x2cda:	cmp	r8d, 0x1b
0x2cde:	ja	0x2da0


0x524a:	add	r14, 1
0x524e:	movzx	r8d, byte ptr [r14]
0x5252:	cmp	r8b, 0x2d
0x5256:	jne	0x51d0


0x5211:	mov	eax, dword ptr [rsp + 0x18]
0x5215:	test	eax, eax
0x5217:	je	0x5679


0x5400:	cmp	qword ptr [rsp + 0x10], r15
0x5405:	ja	0x55d8


0x5226:	mov	rdi, qword ptr [rsp + 0x10]
0x522b:	mov	rsi, -1
0x5232:	call	0x50a0


0x31b9:	pxor	xmm1, xmm1
0x31bd:	mov	r13d, dword ptr [rip + 0x20afc4]
0x31c4:	movzx	eax, byte ptr [rip + 0x20af45]
0x31cb:	mov	qword ptr [rsp + 0x60], 0
0x31d4:	mov	r15d, 0x3e8
0x31da:	movss	dword ptr [rsp], xmm1
0x31df:	lea	edx, [r13 - 3]
0x31e3:	fld	dword ptr [rsp]
0x31e6:	cmp	edx, 1
0x31e9:	fstp	xword ptr [rsp + 0x70]
0x31ed:	ja	0x3110


0x30af:	test	eax, eax
0x30b1:	jne	0x32d0


0x2d60:	fstp	st(0)
0x2d62:	cmp	byte ptr [rcx], 0
0x2d65:	jne	0x2d78


0x2ce4:	mov	ebx, 1
0x2ce9:	mov	dword ptr [rsp], eax
0x2cec:	add	rdi, 1
0x2cf0:	test	rdi, rdi
0x2cf3:	mov	qword ptr [rsi], rdi
0x2cf6:	mov	r9d, 1
0x2cfc:	fmul	st(1), st(0)
0x2cfe:	fild	dword ptr [rsp]
0x2d01:	faddp	st(2)
0x2d03:	je	0x2d60


0x2da0:	fstp	st(0)
0x2da2:	fstp	st(0)
0x2da4:	mov	ebx, 2
0x2da9:	add	rsp, 0x28
0x2dad:	mov	eax, ebx
0x2daf:	pop	rbx
0x2db0:	pop	rbp
0x2db1:	ret	


0x5679:	mov	edx, 5
0x567e:	lea	rsi, [rip + 0x5c7b]
0x5685:	jmp	0x55e4


0x521d:	mov	qword ptr [rsp + 0x10], 1
0x5226:	mov	rdi, qword ptr [rsp + 0x10]
0x522b:	mov	rsi, -1
0x5232:	call	0x50a0


0x540b:	mov	rdi, qword ptr [rsp + 0x10]
0x5410:	mov	rsi, r15
0x5413:	call	0x50a0


0x55d8:	lea	rsi, [rip + 0x5c60]
0x55df:	mov	edx, 5
0x55e4:	xor	edi, edi
0x55e6:	call	0x1a80


0x31f3:	mov	r15d, 0x400
0x31f9:	jmp	0x3110


0x3110:	test	al, al
0x3112:	je	0x3158


0x30b7:	cmp	r13, 1
0x30bb:	jg	0x32d0


0x32d0:	mov	rdi, r12
0x32d3:	call	0x1aa0


0x55e4:	xor	edi, edi
0x55e6:	call	0x1a80


0x3158:	lea	rcx, [rsp + 0x5e]
0x315d:	lea	rdx, [rsp + 0x70]
0x3162:	lea	rsi, [rsp + 0x60]
0x3167:	mov	rdi, rbp
0x316a:	call	0x2ca0


0x3114:	mov	rsi, qword ptr [rip + 0x20affd]
0x311b:	mov	edi, 1
0x3120:	call	0x7d30


0x30c1:	mov	qword ptr [rip + 0x20b08c], 0
0x30cc:	movzx	eax, byte ptr [rip + 0x20b03d]
0x30d3:	test	al, al
0x30d5:	jne	0x3198


0x30db:	pxor	xmm2, xmm2
0x30df:	mov	r13d, dword ptr [rip + 0x20b0a2]
0x30e6:	mov	qword ptr [rsp + 0x60], 0
0x30ef:	mov	r15d, 0x3e8
0x30f5:	movss	dword ptr [rsp], xmm2
0x30fa:	lea	edx, [r13 - 3]
0x30fe:	fld	dword ptr [rsp]
0x3101:	cmp	edx, 1
0x3104:	fstp	xword ptr [rsp + 0x70]
0x3108:	ja	0x3158


0x3198:	mov	rcx, qword ptr [rip + 0x20afb9]
0x319f:	mov	rdi, qword ptr [rip + 0x20af5a]
0x31a6:	lea	rdx, [rip + 0x6783]
0x31ad:	mov	esi, 1
0x31b2:	xor	eax, eax
0x31b4:	call	0x1ce0


0x310a:	mov	r15d, 0x400
0x3110:	test	al, al
0x3112:	je	0x3158


0x316f:	cmp	eax, 1
0x3172:	mov	ebx, eax
0x3174:	jbe	0x3330


0x3330:	movsxd	r8, dword ptr [rip + 0x20addd]
0x3337:	mov	rcx, qword ptr [rsp + 0x60]
0x333c:	xor	r14d, r14d
0x333f:	mov	rsi, qword ptr [rip + 0x20add2]
0x3346:	mov	rdi, rcx
0x3349:	mov	qword ptr [rsp + 0x10], rcx
0x334e:	mov	rdx, r8
0x3351:	mov	qword ptr [rsp + 0x20], r8
0x3356:	call	0x19e0


0x317a:	cmp	ebx, 6
0x317d:	ja	0x3320


0x3183:	lea	rcx, [rip + 0x7e96]
0x318a:	mov	edx, ebx
0x318c:	movsxd	rax, dword ptr [rcx + rdx*4]
0x3190:	add	rax, rcx
0x3193:	jmp	rax


0x3320:	xor	r14d, r14d
0x3323:	xor	r13d, r13d
0x3326:	jmp	0x3210


0x3210:	cmp	dword ptr [rip + 0x20af69], 3
0x3217:	je	0x3248


0x3248:	mov	rax, qword ptr [rip + 0x20ade1]
0x324f:	mov	rdx, qword ptr [rip + 0x20add2]
0x3256:	fld	xword ptr [rsp + 0x70]
0x325a:	cmp	rax, 1
0x325e:	je	0x3480


0x3219:	mov	rdi, rbp
0x321c:	call	0x7d50


0x3480:	cmp	rdx, 1
0x3484:	jne	0x3264


0x3264:	mov	qword ptr [rsp + 0x10], rax
0x3269:	test	rax, rax
0x326c:	fild	qword ptr [rsp + 0x10]
0x3270:	jns	0x3278


0x348a:	jmp	0x328a


0x3272:	fadd	dword ptr [rip + 0x7f44]
0x3278:	fmulp	st(1)
0x327a:	mov	qword ptr [rsp + 0x10], rdx
0x327f:	test	rdx, rdx
0x3282:	fild	qword ptr [rsp + 0x10]
0x3286:	js	0x32c0


0x3278:	fmulp	st(1)
0x327a:	mov	qword ptr [rsp + 0x10], rdx
0x327f:	test	rdx, rdx
0x3282:	fild	qword ptr [rsp + 0x10]
0x3286:	js	0x32c0


0x328a:	cmp	ebx, 1
0x328d:	jbe	0x3490


0x32c0:	fadd	dword ptr [rip + 0x7ef6]
0x32c6:	jmp	0x3288


0x3288:	fdivp	st(1)
0x328a:	cmp	ebx, 1
0x328d:	jbe	0x3490


0x3490:	fld	xword ptr [rip + 0x7d4a]
0x3496:	fxch	st(1)
0x3498:	mov	rax, qword ptr [rip + 0x20ab81]
0x349f:	cmp	rax, -1
0x34a3:	cmovne	r14, rax
0x34a7:	fucomi	st(1)
0x34a9:	fstp	st(1)
0x34ab:	jb	0x3550


0x3293:	fstp	st(0)
0x3295:	jmp	0x32a0


0x3550:	mov	ebx, dword ptr [rip + 0x20ac2e]
0x3556:	test	ebx, ebx
0x3558:	jne	0x3564


0x34b1:	fld	xword ptr [rip + 0x7d39]
0x34b7:	fucomip	st(1)
0x34b9:	jb	0x3550


0x32a0:	mov	rsi, qword ptr [rip + 0x20ae21]
0x32a7:	mov	rdi, r12
0x32aa:	xor	ebx, ebx
0x32ac:	call	0x1b80


0x355a:	cmp	r14, 0x12
0x355e:	ja	0x3802


0x3564:	mov	r13d, dword ptr [rip + 0x20ac05]
0x356b:	mov	r15d, dword ptr [rip + 0x20aac6]
0x3572:	mov	byte ptr [rsp + 0x90], 0x25
0x357a:	test	r13d, r13d
0x357d:	je	0x4220


0x34bf:	fld	st(0)
0x34c1:	xor	eax, eax
0x34c3:	fld	dword ptr [rip + 0x7ceb]
0x34c9:	jmp	0x34d5


0x3802:	cmp	dword ptr [rip + 0x20a977], 3
0x3809:	je	0x3297


0x4220:	lea	r12, [rsp + 0x90]
0x4228:	lea	rbp, [r12 + 1]
0x422d:	jmp	0x3598


0x3583:	lea	r12, [rsp + 0x90]
0x358b:	mov	byte ptr [rsp + 0x91], 0x27
0x3593:	lea	rbp, [r12 + 2]
0x3598:	mov	r9, qword ptr [rip + 0x20abb1]
0x359f:	test	r9, r9
0x35a2:	jne	0x42ab


0x34d5:	fldz	
0x34d7:	fld	st(2)
0x34d9:	fxch	st(1)
0x34db:	fucomip	st(3)
0x34dd:	jbe	0x34e1


0x3297:	fstp	st(0)
0x3299:	nop	dword ptr [rax]
0x32a0:	mov	rsi, qword ptr [rip + 0x20ae21]
0x32a7:	mov	rdi, r12
0x32aa:	xor	ebx, ebx
0x32ac:	call	0x1b80


0x380f:	test	r14, r14
0x3812:	mov	ebx, dword ptr [rip + 0x20a804]
0x3818:	mov	edx, 5
0x381d:	fstp	xword ptr [rsp]
0x3820:	je	0x424d


0x3598:	mov	r9, qword ptr [rip + 0x20abb1]
0x359f:	test	r9, r9
0x35a2:	jne	0x42ab


0x35a8:	movzx	edx, byte ptr [rip + 0x20ab61]
0x35af:	test	dl, dl
0x35b1:	jne	0x427a


0x42ab:	fstp	xword ptr [rsp + 0x10]
0x42af:	lea	r8, [rip + 0x52c1]
0x42b6:	mov	rdi, rbp
0x42b9:	mov	ecx, 0x3f
0x42be:	mov	edx, 1
0x42c3:	mov	esi, 0x3e
0x42c8:	xor	eax, eax
0x42ca:	call	0x19a0


0x34e1:	fld	st(1)
0x34e3:	fxch	st(1)
0x34e5:	fucomip	st(1)
0x34e7:	jae	0x34d0


0x34df:	fchs	
0x34e1:	fld	st(1)
0x34e3:	fxch	st(1)
0x34e5:	fucomip	st(1)
0x34e7:	jae	0x34d0


0x424d:	lea	rsi, [rip + 0x5874]
0x4254:	xor	edi, edi
0x4256:	call	0x1a80


0x3826:	lea	rsi, [rip + 0x624b]
0x382d:	xor	edi, edi
0x382f:	call	0x1a80


0x35b7:	test	ebx, ebx
0x35b9:	jne	0x3cf2


0x427a:	fstp	xword ptr [rsp + 0x10]
0x427e:	mov	rcx, qword ptr [rip + 0x209e7b]
0x4285:	lea	rdi, [rip + 0x52f0]
0x428c:	mov	edx, 0x11
0x4291:	mov	esi, 1
0x4296:	call	0x1cd0


0x19a0:	jmp	qword ptr [rip + 0x20c45a]


0x34e9:	fstp	st(0)
0x34eb:	fstp	st(0)
0x34ed:	fstp	st(0)
0x34ef:	mov	ebx, dword ptr [rip + 0x20ac8f]
0x34f5:	test	ebx, ebx
0x34f7:	je	0x37f3


0x34d0:	fdivp	st(2)
0x34d2:	add	eax, 1
0x34d5:	fldz	
0x34d7:	fld	st(2)
0x34d9:	fxch	st(1)
0x34db:	fucomip	st(3)
0x34dd:	jbe	0x34e1


0x35bf:	test	r14d, r14d
0x35c2:	mov	esi, r14d
0x35c5:	je	0x4380


0x3cf2:	lea	eax, [rbx - 3]
0x3cf5:	cmp	eax, 1
0x3cf8:	ja	0x4365




0x37f3:	mov	edx, eax
0x37f5:	add	rdx, r14
0x37f8:	cmp	rdx, 0x12
0x37fc:	jbe	0x34fd


0x34fd:	cmp	eax, 0x1a
0x3500:	jbe	0x3564


0x4380:	fld	xword ptr [rip + 0x6e7a]
0x4386:	fnstcw	word ptr [rsp + 0x4e]
0x438a:	movzx	eax, word ptr [rsp + 0x4e]
0x438f:	or	ah, 0xc
0x4392:	cmp	r15d, 4
0x4396:	mov	word ptr [rsp + 0x4c], ax
0x439b:	fld	st(1)
0x439d:	fdiv	st(1)
0x439f:	fldcw	word ptr [rsp + 0x4c]
0x43a3:	fistp	qword ptr [rsp + 0x10]
0x43a7:	fldcw	word ptr [rsp + 0x4e]
0x43ab:	fild	qword ptr [rsp + 0x10]
0x43af:	fmulp	st(1)
0x43b1:	fld	st(1)
0x43b3:	fsub	st(1)
0x43b5:	ja	0x466d


0x35cb:	mov	eax, r14d
0x35ce:	sub	eax, 1
0x35d1:	je	0x45dd


0x3cfe:	movsd	xmm3, qword ptr [rip + 0x74c2]
0x3d06:	mov	dword ptr [rsp + 0x20], 0x400
0x3d0e:	movsd	qword ptr [rsp + 0x10], xmm3
0x3d14:	fld	xword ptr [rip + 0x74c6]
0x3d1a:	fxch	st(1)
0x3d1c:	fucomi	st(1)
0x3d1e:	fstp	st(1)
0x3d20:	jb	0x4243


0x4365:	movsd	xmm4, qword ptr [rip + 0x6e63]
0x436d:	mov	dword ptr [rsp + 0x20], 0x3e8
0x4375:	movsd	qword ptr [rsp + 0x10], xmm4
0x437b:	jmp	0x3d14


0x3502:	cmp	dword ptr [rip + 0x20ac77], 3
0x3509:	fstp	xword ptr [rsp]
0x350c:	je	0x32a0


0x43bb:	lea	rcx, [rip + 0x6cda]
0x43c2:	movsxd	rax, dword ptr [rcx + r15*4]
0x43c6:	add	rax, rcx
0x43c9:	jmp	rax


0x466d:	fstp	st(0)
0x466f:	fstp	st(0)
0x4671:	fldz	
0x4673:	jmp	0x397f


0x45dd:	fld	dword ptr [rip + 0x6bd1]
0x45e3:	fnstcw	word ptr [rsp + 0x4e]
0x45e7:	movzx	eax, word ptr [rsp + 0x4e]
0x45ec:	fld	st(1)
0x45ee:	fmul	st(1)
0x45f0:	or	ah, 0xc
0x45f3:	cmp	r15d, 4
0x45f7:	mov	word ptr [rsp + 0x4c], ax
0x45fc:	fld	xword ptr [rip + 0x6bfe]
0x4602:	fld	st(1)
0x4604:	fdiv	st(1)
0x4606:	fldcw	word ptr [rsp + 0x4c]
0x460a:	fistp	qword ptr [rsp + 0x10]
0x460e:	fldcw	word ptr [rsp + 0x4e]
0x4612:	fild	qword ptr [rsp + 0x10]
0x4616:	fmulp	st(1)
0x4618:	fsub	st(1), st(0)
0x461a:	ja	0x3c41


0x35d7:	fld	dword ptr [rip + 0x7bd7]
0x35dd:	mov	ecx, eax
0x35df:	fld	st(0)
0x35e1:	sub	ecx, 1
0x35e4:	fmul	st(1)
0x35e6:	jne	0x35e1


0x4243:	fld	st(0)
0x4245:	xor	r13d, r13d
0x4248:	jmp	0x3d55


0x3d26:	fld	xword ptr [rip + 0x74c4]
0x3d2c:	fucomip	st(1)
0x3d2e:	jb	0x4243


0x3d14:	fld	xword ptr [rip + 0x74c6]
0x3d1a:	fxch	st(1)
0x3d1c:	fucomi	st(1)
0x3d1e:	fstp	st(1)
0x3d20:	jb	0x4243


0x3512:	lea	rsi, [rip + 0x65ef]
0x3519:	mov	edx, 5
0x351e:	xor	edi, edi
0x3520:	call	0x1a80


0x397f:	test	dl, dl
0x3981:	mov	r9d, r14d
0x3984:	je	0x39db


0x4620:	fstp	st(2)
0x4622:	fxch	st(1)
0x4624:	lea	rcx, [rip + 0x6a99]
0x462b:	movsxd	rax, dword ptr [rcx + r15*4]
0x462f:	add	rax, rcx
0x4632:	jmp	rax


0x3c41:	fstp	st(0)
0x3c43:	fstp	st(0)
0x3c45:	fldz	
0x3c47:	fxch	st(1)
0x3c49:	fdivp	st(1)
0x3c4b:	jmp	0x397f


0x35e8:	fmul	st(2)
0x35ea:	fnstcw	word ptr [rsp + 0x4e]
0x35ee:	movzx	ecx, word ptr [rsp + 0x4e]
0x35f3:	fld	xword ptr [rip + 0x7c07]
0x35f9:	or	ch, 0xc
0x35fc:	cmp	r15d, 4
0x3600:	mov	word ptr [rsp + 0x4c], cx
0x3605:	fld	st(1)
0x3607:	fdiv	st(1)
0x3609:	fldcw	word ptr [rsp + 0x4c]
0x360d:	fistp	qword ptr [rsp + 0x10]
0x3611:	fldcw	word ptr [rsp + 0x4e]
0x3615:	fild	qword ptr [rsp + 0x10]
0x3619:	fmulp	st(1)
0x361b:	fsub	st(1), st(0)
0x361d:	ja	0x4721


0x35e1:	sub	ecx, 1
0x35e4:	fmul	st(1)
0x35e6:	jne	0x35e1


0x3d55:	test	dl, dl
0x3d57:	je	0x3da5


0x3d34:	fild	dword ptr [rsp + 0x20]
0x3d38:	xor	r13d, r13d
0x3d3b:	fld	st(1)
0x3d3d:	jmp	0x3d45


0x39db:	fxch	st(1)
0x39dd:	mov	dword ptr [rbp], 0x664c2a2e
0x39e4:	mov	byte ptr [rbp + 4], 0
0x39e8:	lea	rbp, [rsp + 0xd0]
0x39f0:	sub	rsp, 0x10
0x39f4:	xor	eax, eax
0x39f6:	mov	r8, r12
0x39f9:	mov	ecx, 0x80
0x39fe:	mov	edx, 1
0x3a03:	mov	esi, 0x80
0x3a08:	mov	rdi, rbp
0x3a0b:	fstp	xword ptr [rsp + 0x20]
0x3a0f:	fld	st(0)
0x3a11:	fstp	xword ptr [rsp]
0x3a14:	fstp	xword ptr [rsp + 0x10]
0x3a18:	call	0x19a0


0x3986:	fxch	st(1)
0x3988:	fstp	xword ptr [rsp + 0x10]
0x398c:	lea	rax, [rip + 0x5f3d]
0x3993:	lea	rdx, [rip + 0x5f6e]
0x399a:	test	r13d, r13d
0x399d:	mov	ecx, r14d
0x39a0:	mov	esi, 1
0x39a5:	mov	dword ptr [rsp + 0x20], r14d
0x39aa:	cmovne	rdx, rax
0x39ae:	sub	rsp, 0x10
0x39b2:	mov	rdi, qword ptr [rip + 0x20a747]
0x39b9:	xor	eax, eax
0x39bb:	fld	st(0)
0x39bd:	fstp	xword ptr [rsp]
0x39c0:	fstp	xword ptr [rsp + 0x10]
0x39c4:	call	0x1ce0


0x3623:	fstp	st(2)
0x3625:	fxch	st(1)
0x3627:	lea	rcx, [rip + 0x7a0e]
0x362e:	movsxd	rax, dword ptr [rcx + r15*4]
0x3632:	add	rax, rcx
0x3635:	jmp	rax


0x4721:	fstp	st(0)
0x4723:	fstp	st(0)
0x4725:	fldz	
0x4727:	fxch	st(1)
0x4729:	jmp	0x3972


0x3da5:	mov	rsi, qword ptr [rip + 0x20a274]
0x3dac:	cmp	rsi, -1
0x3db0:	fld	qword ptr [rsp + 0x10]
0x3db4:	je	0x4496


0x3d59:	fxch	st(1)
0x3d5b:	fstp	xword ptr [rsp + 0x30]
0x3d5f:	sub	rsp, 0x10
0x3d63:	mov	rdi, qword ptr [rip + 0x20a396]
0x3d6a:	lea	rdx, [rip + 0x5e0f]
0x3d71:	mov	ecx, r13d
0x3d74:	mov	esi, 1
0x3d79:	mov	eax, 1
0x3d7e:	movsd	xmm0, qword ptr [rsp + 0x20]
0x3d84:	fld	st(0)
0x3d86:	fstp	xword ptr [rsp]
0x3d89:	fstp	xword ptr [rsp + 0x30]
0x3d8d:	call	0x1ce0


0x3d45:	fldz	
0x3d47:	fucomip	st(1)
0x3d49:	fld	st(0)
0x3d4b:	jbe	0x3d4f


0x3972:	fld	st(0)
0x3974:	sub	eax, 1
0x3977:	fmul	st(1)
0x3979:	jne	0x3974


0x4496:	fldz	
0x4498:	fld	st(2)
0x449a:	fxch	st(1)
0x449c:	fucomip	st(3)
0x449e:	jbe	0x44a2


0x3dba:	lea	eax, [r13 + r13*2]
0x3dbf:	cmp	rax, rsi
0x3dc2:	cmovg	rax, rsi
0x3dc6:	test	eax, eax
0x3dc8:	mov	edi, eax
0x3dca:	je	0x42e1


0x3d4f:	fucomip	st(2)
0x3d51:	jae	0x3d3f


0x3d4d:	fchs	
0x3d4f:	fucomip	st(2)
0x3d51:	jae	0x3d3f


0x397b:	fstp	st(1)
0x397d:	fdivp	st(1)
0x397f:	test	dl, dl
0x3981:	mov	r9d, r14d
0x3984:	je	0x39db


0x3974:	sub	eax, 1
0x3977:	fmul	st(1)
0x3979:	jne	0x3974


0x44a2:	fld	dword ptr [rip + 0x6d0c]
0x44a8:	fld	st(0)
0x44aa:	fucomi	st(2)
0x44ac:	fstp	st(2)
0x44ae:	jbe	0x42dd


0x44a0:	fchs	
0x44a2:	fld	dword ptr [rip + 0x6d0c]
0x44a8:	fld	st(0)
0x44aa:	fucomi	st(2)
0x44ac:	fstp	st(2)
0x44ae:	jbe	0x42dd


0x42e1:	fld	xword ptr [rip + 0x6f19]
0x42e7:	fnstcw	word ptr [rsp + 0x4e]
0x42eb:	movzx	eax, word ptr [rsp + 0x4e]
0x42f0:	or	ah, 0xc
0x42f3:	cmp	r15d, 4
0x42f7:	mov	word ptr [rsp + 0x4c], ax
0x42fc:	fld	st(2)
0x42fe:	fdiv	st(1)
0x4300:	fldcw	word ptr [rsp + 0x4c]
0x4304:	fistp	qword ptr [rsp + 0x20]
0x4308:	fldcw	word ptr [rsp + 0x4e]
0x430c:	fild	qword ptr [rsp + 0x20]
0x4310:	fmulp	st(1)
0x4312:	fsub	st(2), st(0)
0x4314:	ja	0x4678


0x3dd0:	sub	eax, 1
0x3dd3:	je	0x4683


0x3d53:	fstp	st(1)
0x3d55:	test	dl, dl
0x3d57:	je	0x3da5


0x3d3f:	fdiv	st(1)
0x3d41:	add	r13d, 1
0x3d45:	fldz	
0x3d47:	fucomip	st(1)
0x3d49:	fld	st(0)
0x3d4b:	jbe	0x3d4f


0x42dd:	fstp	st(0)
0x42df:	fstp	st(0)
0x42e1:	fld	xword ptr [rip + 0x6f19]
0x42e7:	fnstcw	word ptr [rsp + 0x4e]
0x42eb:	movzx	eax, word ptr [rsp + 0x4e]
0x42f0:	or	ah, 0xc
0x42f3:	cmp	r15d, 4
0x42f7:	mov	word ptr [rsp + 0x4c], ax
0x42fc:	fld	st(2)
0x42fe:	fdiv	st(1)
0x4300:	fldcw	word ptr [rsp + 0x4c]
0x4304:	fistp	qword ptr [rsp + 0x20]
0x4308:	fldcw	word ptr [rsp + 0x4e]
0x430c:	fild	qword ptr [rsp + 0x20]
0x4310:	fmulp	st(1)
0x4312:	fsub	st(2), st(0)
0x4314:	ja	0x4678


0x44b4:	fxch	st(3)
0x44b6:	fmulp	st(1)
0x44b8:	fnstcw	word ptr [rsp + 0x4e]
0x44bc:	movzx	eax, word ptr [rsp + 0x4e]
0x44c1:	fld	xword ptr [rip + 0x6d39]
0x44c7:	or	ah, 0xc
0x44ca:	cmp	r15d, 4
0x44ce:	mov	word ptr [rsp + 0x4c], ax
0x44d3:	fld	st(1)
0x44d5:	fdiv	st(1)
0x44d7:	fldcw	word ptr [rsp + 0x4c]
0x44db:	fistp	qword ptr [rsp + 0x20]
0x44df:	fldcw	word ptr [rsp + 0x4e]
0x44e3:	fild	qword ptr [rsp + 0x20]
0x44e7:	fmulp	st(1)
0x44e9:	fsub	st(1), st(0)
0x44eb:	ja	0x472e


0x431a:	lea	rcx, [rip + 0x6d67]
0x4321:	movsxd	rax, dword ptr [rcx + r15*4]
0x4325:	add	rax, rcx
0x4328:	jmp	rax


0x4678:	fstp	st(0)
0x467a:	fstp	st(1)
0x467c:	fldz	
0x467e:	jmp	0x3e9e


0x4683:	fld	dword ptr [rip + 0x6b2b]
0x4689:	fnstcw	word ptr [rsp + 0x4e]
0x468d:	movzx	eax, word ptr [rsp + 0x4e]
0x4692:	fmul	st(2), st(0)
0x4694:	or	ah, 0xc
0x4697:	cmp	r15d, 4
0x469b:	mov	word ptr [rsp + 0x4c], ax
0x46a0:	fld	xword ptr [rip + 0x6b5a]
0x46a6:	fld	st(3)
0x46a8:	fdiv	st(1)
0x46aa:	fldcw	word ptr [rsp + 0x4c]
0x46ae:	fistp	qword ptr [rsp + 0x20]
0x46b2:	fldcw	word ptr [rsp + 0x4e]
0x46b6:	fild	qword ptr [rsp + 0x20]
0x46ba:	fmulp	st(1)
0x46bc:	fsub	st(3), st(0)
0x46be:	ja	0x4205


0x3dd9:	fld	dword ptr [rip + 0x73d5]
0x3ddf:	mov	ecx, eax
0x3de1:	fld	st(0)
0x3de3:	sub	ecx, 1
0x3de6:	fmul	st(1)
0x3de8:	jne	0x3de3


0x44f1:	lea	rcx, [rip + 0x6bb8]
0x44f8:	movsxd	rax, dword ptr [rcx + r15*4]
0x44fc:	add	rax, rcx
0x44ff:	jmp	rax


0x472e:	fstp	st(0)
0x4730:	fstp	st(0)
0x4732:	fldz	
0x4734:	fxch	st(2)
0x4736:	mov	edi, 1
0x473b:	jmp	0x41ee


0x3e9e:	fucomi	st(1)
0x3ea0:	jb	0x3eb0


0x46c4:	lea	rcx, [rip + 0x6a0d]
0x46cb:	movsxd	rax, dword ptr [rcx + r15*4]
0x46cf:	add	rax, rcx
0x46d2:	jmp	rax


0x4205:	fstp	st(0)
0x4207:	fstp	st(2)
0x4209:	fxch	st(1)
0x420b:	fldz	
0x420d:	fxch	st(2)
0x420f:	fxch	st(1)
0x4211:	jmp	0x3e90


0x3dea:	fmulp	st(3)
0x3dec:	fnstcw	word ptr [rsp + 0x4e]
0x3df0:	movzx	ecx, word ptr [rsp + 0x4e]
0x3df5:	fld	xword ptr [rip + 0x7405]
0x3dfb:	or	ch, 0xc
0x3dfe:	cmp	r15d, 4
0x3e02:	mov	word ptr [rsp + 0x4c], cx
0x3e07:	fld	st(3)
0x3e09:	fdiv	st(1)
0x3e0b:	fldcw	word ptr [rsp + 0x4c]
0x3e0f:	fistp	qword ptr [rsp + 0x20]
0x3e13:	fldcw	word ptr [rsp + 0x4e]
0x3e17:	fild	qword ptr [rsp + 0x20]
0x3e1b:	fmulp	st(1)
0x3e1d:	fsub	st(3), st(0)
0x3e1f:	ja	0x475b


0x3de3:	sub	ecx, 1
0x3de6:	fmul	st(1)
0x3de8:	jne	0x3de3


0x41ee:	mov	eax, edi
0x41f0:	sub	eax, 1
0x41f3:	je	0x4211


0x3eb0:	fstp	st(1)
0x3eb2:	fldz	
0x3eb4:	fxch	st(1)
0x3eb6:	fucomi	st(1)
0x3eb8:	fstp	st(1)
0x3eba:	jp	0x4501


0x3ea2:	jmp	0x3ea8


0x3e90:	fdivp	st(2)
0x3e92:	fldz	
0x3e94:	fucomip	st(2)
0x3e96:	ja	0x4402


0x3e25:	lea	rcx, [rip + 0x7224]
0x3e2c:	movsxd	rax, dword ptr [rcx + r15*4]
0x3e30:	add	rax, rcx
0x3e33:	jmp	rax


0x475b:	fstp	st(0)
0x475d:	fstp	st(2)
0x475f:	fxch	st(1)
0x4761:	fldz	
0x4763:	fxch	st(2)
0x4765:	fxch	st(1)
0x4767:	jmp	0x41f5


0x4211:	jmp	0x3e90


0x41f5:	fld	st(0)
0x41f7:	sub	eax, 1
0x41fa:	fmul	st(1)
0x41fc:	jne	0x41f7


0x4501:	fldz	
0x4503:	fucomip	st(1)
0x4505:	fld	st(0)
0x4507:	jbe	0x4410


0x3ec0:	jne	0x4501


0x3ea8:	fdivrp	st(1)
0x3eaa:	add	r13d, 1
0x3eae:	jmp	0x3eb2


0x3e9c:	fxch	st(1)
0x3e9e:	fucomi	st(1)
0x3ea0:	jb	0x3eb0


0x4402:	fld	st(1)
0x4404:	fchs	
0x4406:	fucomi	st(1)
0x4408:	jae	0x3ea4


0x41fe:	fstp	st(1)
0x4200:	jmp	0x3e90


0x41f7:	sub	eax, 1
0x41fa:	fmul	st(1)
0x41fc:	jne	0x41f7


0x4410:	fld	dword ptr [rip + 0x6d9e]
0x4416:	test	r13d, r13d
0x4419:	setne	al
0x441c:	xor	r9d, r9d
0x441f:	fucomip	st(1)
0x4421:	fstp	st(0)
0x4423:	seta	r9b
0x4427:	and	r9d, eax
0x442a:	jmp	0x3ec9


0x450d:	fchs	
0x450f:	jmp	0x4410


0x3ec6:	xor	r9d, r9d
0x3ec9:	test	dl, dl
0x3ecb:	je	0x3f21


0x3eb2:	fldz	
0x3eb4:	fxch	st(1)
0x3eb6:	fucomi	st(1)
0x3eb8:	fstp	st(1)
0x3eba:	jp	0x4501


0x440e:	fstp	st(1)
0x4410:	fld	dword ptr [rip + 0x6d9e]
0x4416:	test	r13d, r13d
0x4419:	setne	al
0x441c:	xor	r9d, r9d
0x441f:	fucomip	st(1)
0x4421:	fstp	st(0)
0x4423:	seta	r9b
0x4427:	and	r9d, eax
0x442a:	jmp	0x3ec9


0x3ea4:	fstp	st(0)
0x3ea6:	fxch	st(1)
0x3ea8:	fdivrp	st(1)
0x3eaa:	add	r13d, 1
0x3eae:	jmp	0x3eb2


0x3ec9:	test	dl, dl
0x3ecb:	je	0x3f21


0x3f21:	cmp	rsi, -1
0x3f25:	mov	ecx, 0x7325
0x3f2a:	mov	dword ptr [rbp], 0x664c2a2e
0x3f31:	cmovne	r9d, esi
0x3f35:	cmp	r13d, 8
0x3f39:	mov	word ptr [rbp + 4], cx
0x3f3d:	mov	byte ptr [rbp + 6], 0
0x3f41:	ja	0x4575


0x3ecd:	fxch	st(1)
0x3ecf:	fstp	xword ptr [rsp + 0x20]
0x3ed3:	mov	dword ptr [rsp + 0x30], r9d
0x3ed8:	sub	rsp, 0x10
0x3edc:	mov	rdi, qword ptr [rip + 0x20a21d]
0x3ee3:	lea	rdx, [rip + 0x5cbe]
0x3eea:	mov	esi, 1
0x3eef:	mov	ecx, r13d
0x3ef2:	mov	eax, 1
0x3ef7:	fld	st(0)
0x3ef9:	fstp	xword ptr [rsp]
0x3efc:	movsd	xmm0, qword ptr [rsp + 0x20]
0x3f02:	fstp	xword ptr [rsp + 0x10]
0x3f06:	call	0x1ce0


0x3f47:	lea	rdx, [rip + 0x7116]
0x3f4e:	mov	eax, r13d
0x3f51:	movsxd	rax, dword ptr [rdx + rax*4]
0x3f55:	add	rax, rdx
0x3f58:	jmp	rax


0x4575:	fxch	st(1)
0x4577:	lea	rax, [rip + 0x4f7e]
0x457e:	jmp	0x3f63


0x3f63:	fstp	xword ptr [rsp + 0x10]
0x3f67:	lea	rbp, [rsp + 0xd0]
0x3f6f:	sub	rsp, 8
0x3f73:	mov	r8, r12
0x3f76:	mov	ecx, 0x80
0x3f7b:	mov	edx, 1
0x3f80:	mov	esi, 0x7f
0x3f85:	push	rax
0x3f86:	mov	rdi, rbp
0x3f89:	xor	eax, eax
0x3f8b:	sub	rsp, 0x10
0x3f8f:	fld	st(0)
0x3f91:	fstp	xword ptr [rsp]
0x3f94:	fstp	xword ptr [rsp + 0x20]
0x3f98:	call	0x19a0


0x5418:	jmp	0x5237


0x5237:	cmp	byte ptr [r14], 0
0x523b:	je	0x52ba


0x52ba:	mov	rsi, qword ptr [rip + 0x20903f]
0x52c1:	test	rsi, rsi
0x52c4:	je	0x56ad


0x523d:	xor	r15d, r15d
0x5240:	xor	r13d, r13d
0x5243:	xor	ebp, ebp
0x5245:	xor	r12d, r12d
0x5248:	xor	ebx, ebx
0x524a:	add	r14, 1
0x524e:	movzx	r8d, byte ptr [r14]
0x5252:	cmp	r8b, 0x2d
0x5256:	jne	0x51d0


0x56ad:	test	byte ptr [rsp + 0x1c], 4
0x56b2:	mov	edx, 5
0x56b7:	je	0x570c


0x52ca:	mov	rdi, qword ptr [rip + 0x209027]
0x52d1:	lea	rcx, [rip - 0x258]
0x52d8:	mov	edx, 0x10
0x52dd:	xor	r15d, r15d
0x52e0:	xor	ebp, ebp
0x52e2:	call	0x1a20


0x570c:	lea	rsi, [rip + 0x5b84]
0x5713:	jmp	0x55e4


0x56b9:	lea	rsi, [rip + 0x5cb8]
0x56c0:	xor	edi, edi
0x56c2:	call	0x1a80


0x1a20:	jmp	qword ptr [rip + 0x20c41a]




0x52b4:	cmp	byte ptr [r14], 0
0x52b8:	jne	0x523d


0x2c78:	mov	byte ptr [rip + 0x20b489], 1
0x2c7f:	pop	rbp
0x2c80:	ret	


0x9421:	test	rbp, rbp
0x9424:	je	0x9446


0x9446:	add	rsp, 8
0x944a:	pop	rbx
0x944b:	pop	rbp
0x944c:	pop	r12
0x944e:	pop	r13
0x9450:	pop	r14
0x9452:	pop	r15
0x9454:	ret	


0x9426:	xor	ebx, ebx
0x9428:	nop	dword ptr [rax + rax]
0x9430:	mov	rdx, r15
0x9433:	mov	rsi, r14
0x9436:	mov	edi, r13d
0x9439:	call	qword ptr [r12 + rbx*8]


0x52e7:	mov	rbx, qword ptr [rip + 0x209012]
0x52ee:	mov	rcx, qword ptr [rip + 0x209003]
0x52f5:	cmp	r15, rbx
0x52f8:	jae	0x538d


0x538d:	test	byte ptr [rsp + 0x1c], 2
0x5392:	jne	0x54bd


0x5309:	mov	r13, r15
0x530c:	lea	rdx, [rcx + rbp]
0x5310:	shl	r13, 4
0x5314:	lea	rdi, [rcx + r13]
0x5318:	mov	rax, qword ptr [rdx + 8]
0x531c:	cmp	rax, qword ptr [rdi]
0x531f:	jb	0x5380


0x5380:	add	rbp, 0x10
0x5384:	cmp	r15, rbx
0x5387:	jb	0x5300


0x5398:	add	rbx, 1
0x539c:	mov	rdi, rcx
0x539f:	mov	rsi, rbx
0x53a2:	mov	qword ptr [rip + 0x208f57], rbx
0x53a9:	shl	rsi, 4
0x53ad:	call	0x83f0


0x54bd:	mov	rax, qword ptr [rcx]
0x54c0:	mov	qword ptr [rip + 0x208e2d], 0
0x54cb:	mov	qword ptr [rip + 0x208e2a], 0
0x54d6:	mov	qword ptr [rip + 0x208cb7], 0
0x54e1:	cmp	rax, 1
0x54e5:	ja	0x5579


0x5321:	lea	r14, [rbp + 0x20]
0x5325:	jmp	0x5341


0x5300:	add	r15, 1
0x5304:	cmp	r15, rbx
0x5307:	jae	0x5380


0x54eb:	cmp	rbx, 1
0x54ef:	jbe	0x5535


0x5579:	lea	rsi, [rax - 1]
0x557d:	mov	edi, 1
0x5582:	mov	qword ptr [rsp + 8], rcx
0x5587:	call	0x50a0


0x5341:	cmp	qword ptr [rdi + 8], rax
0x5345:	lea	rsi, [rcx + r14]
0x5349:	cmovae	rax, qword ptr [rdi + 8]
0x534e:	sub	rbx, r15
0x5351:	shl	rbx, 4
0x5355:	mov	qword ptr [rdx + 8], rax
0x5359:	lea	rdx, [rbx - 0x10]
0x535d:	call	0x1c70


0x5535:	shl	rbx, 4
0x5539:	mov	rax, qword ptr [rcx + rbx - 8]
0x553e:	cmp	rax, -1
0x5542:	je	0x555e


0x54f1:	mov	rax, rbx
0x54f4:	lea	rbp, [rcx + 8]
0x54f8:	shl	rax, 4
0x54fc:	lea	r12, [rcx + rax - 8]
0x5501:	nop	dword ptr [rax]
0x5508:	mov	rax, qword ptr [rbp]
0x550c:	lea	rdi, [rax + 1]
0x5510:	mov	rax, qword ptr [rbp + 8]
0x5514:	cmp	rdi, rax
0x5517:	je	0x552c


0x1c70:	jmp	qword ptr [rip + 0x20c2f2]


0x555e:	mov	rdi, rcx
0x5561:	call	0x19b0


0x5544:	lea	rdi, [rax + 1]
0x5548:	mov	rsi, -1
0x554f:	mov	qword ptr [rsp + 8], rcx
0x5554:	call	0x50a0


0x552c:	add	rbp, 0x10
0x5530:	cmp	r12, rbp
0x5533:	jne	0x5508


0x5519:	lea	rsi, [rax - 1]
0x551d:	mov	qword ptr [rsp + 8], rcx
0x5522:	call	0x50a0




0x5508:	mov	rax, qword ptr [rbp]
0x550c:	lea	rdi, [rax + 1]
0x5510:	mov	rax, qword ptr [rbp + 8]
0x5514:	cmp	rdi, rax
0x5517:	je	0x552c


0x5527:	mov	rcx, qword ptr [rsp + 8]
0x552c:	add	rbp, 0x10
0x5530:	cmp	r12, rbp
0x5533:	jne	0x5508


0x5559:	mov	rcx, qword ptr [rsp + 8]
0x555e:	mov	rdi, rcx
0x5561:	call	0x19b0


0x558c:	mov	rcx, qword ptr [rsp + 8]
0x5591:	jmp	0x54eb


0x3f9d:	add	rsp, 0x20
0x3fa1:	cmp	eax, 0x7e
0x3fa4:	fld	xword ptr [rsp]
0x3fa7:	fld	xword ptr [rsp + 0x10]
0x3fab:	ja	0x4042


0x3fb1:	fstp	st(1)
0x3fb3:	cmp	ebx, 4
0x3fb6:	jne	0x3fc5


0x4042:	fstp	st(0)
0x4044:	fstp	xword ptr [rsp]
0x4047:	lea	rsi, [rip + 0x5b02]
0x404e:	mov	edx, 5
0x4053:	xor	edi, edi
0x4055:	call	0x1a80


0x3fb8:	test	r13d, r13d
0x3fbb:	jne	0x454c


0x3fc5:	movzx	ebx, byte ptr [rip + 0x20a144]
0x3fcc:	test	bl, bl
0x3fce:	jne	0x43cb


0x3fc1:	jmp	0x3fc5


0x454c:	fstp	xword ptr [rsp]
0x454f:	cdqe	
0x4551:	mov	edx, 0x7f
0x4556:	lea	rsi, [rip + 0x52d9]
0x455d:	sub	rdx, rax
0x4560:	mov	ecx, 0x80
0x4565:	mov	rdi, rbp
0x4568:	call	0x1cf0


0x3fd4:	mov	rsi, qword ptr [rip + 0x20a19d]
0x3fdb:	test	rsi, rsi
0x3fde:	jne	0x3a45


0x43cb:	fstp	xword ptr [rsp]
0x43ce:	mov	rdi, rbp
0x43d1:	call	0x7d50


0x1cf0:	jmp	qword ptr [rip + 0x20c2b2]


0x3fe4:	fstp	st(0)
0x3fe6:	jmp	0x3ad7


0x3a45:	mov	rdx, rbp
0x3a48:	mov	ecx, dword ptr [rdx]
0x3a4a:	add	rdx, 4
0x3a4e:	lea	eax, [rcx - 0x1010101]
0x3a54:	not	ecx
0x3a56:	and	eax, ecx
0x3a58:	and	eax, 0x80808080
0x3a5d:	je	0x3a48




0x3ad7:	mov	rsi, qword ptr [rip + 0x20a67a]
0x3ade:	mov	rax, rbp
0x3ae1:	mov	ecx, dword ptr [rax]
0x3ae3:	add	rax, 4
0x3ae7:	lea	edx, [rcx - 0x1010101]
0x3aed:	not	ecx
0x3aef:	and	edx, ecx
0x3af1:	and	edx, 0x80808080
0x3af7:	je	0x3ae1


0x3a48:	mov	ecx, dword ptr [rdx]
0x3a4a:	add	rdx, 4
0x3a4e:	lea	eax, [rcx - 0x1010101]
0x3a54:	not	ecx
0x3a56:	and	eax, ecx
0x3a58:	and	eax, 0x80808080
0x3a5d:	je	0x3a48


0x3a5f:	mov	ecx, eax
0x3a61:	shr	ecx, 0x10
0x3a64:	test	eax, 0x8080
0x3a69:	fstp	xword ptr [rsp]
0x3a6c:	cmove	eax, ecx
0x3a6f:	lea	rcx, [rdx + 2]
0x3a73:	mov	edi, eax
0x3a75:	cmove	rdx, rcx
0x3a79:	add	dil, al
0x3a7c:	mov	rax, rbp
0x3a7f:	sbb	rdx, 3
0x3a83:	mov	ecx, 0x80
0x3a88:	mov	rdi, rbp
0x3a8b:	sub	rax, rdx
0x3a8e:	lea	rdx, [rax + 0x7f]
0x3a92:	call	0x1cf0


0x3ae1:	mov	ecx, dword ptr [rax]
0x3ae3:	add	rax, 4
0x3ae7:	lea	edx, [rcx - 0x1010101]
0x3aed:	not	ecx
0x3aef:	and	edx, ecx
0x3af1:	and	edx, 0x80808080
0x3af7:	je	0x3ae1


0x3af9:	mov	ecx, edx
0x3afb:	shr	ecx, 0x10
0x3afe:	test	edx, 0x8080
0x3b04:	cmove	edx, ecx
0x3b07:	lea	rcx, [rax + 2]
0x3b0b:	mov	edi, edx
0x3b0d:	cmove	rax, rcx
0x3b11:	add	dil, dl
0x3b14:	mov	rdx, qword ptr [rip + 0x20a645]
0x3b1b:	sbb	rax, 3
0x3b1f:	sub	rax, rbp
0x3b22:	test	rsi, rsi
0x3b25:	je	0x3b30


0x3b30:	lea	rdi, [rax + 1]
0x3b34:	cmp	rdi, rdx
0x3b37:	jb	0x3b3e


0x3b27:	cmp	rsi, rax
0x3b2a:	ja	0x442f


0x3b3e:	mov	rdi, qword ptr [rip + 0x20a623]
0x3b45:	mov	rsi, rbp
0x3b48:	call	0x1a00


0x3b39:	call	0x2f40


0x442f:	mov	qword ptr [rsp + 0x80], rsi
0x4437:	mov	r8d, dword ptr [rip + 0x209bda]
0x443e:	lea	rcx, [rsp + 0x80]
0x4446:	mov	rsi, qword ptr [rip + 0x209d1b]
0x444d:	mov	r9d, 2
0x4453:	mov	rdi, rbp
0x4456:	call	0x5bd0


0x1a00:	jmp	qword ptr [rip + 0x20c42a]




0x3a1d:	cmp	eax, 0x7f
0x3a20:	pop	r11
0x3a22:	pop	rbx
0x3a23:	fld	xword ptr [rsp]
0x3a26:	ja	0x46e8


0x3a2c:	fstp	st(0)
0x3a2e:	movzx	ebx, byte ptr [rip + 0x20a6db]
0x3a35:	fld	xword ptr [rsp + 0x10]
0x3a39:	mov	rsi, qword ptr [rip + 0x20a738]
0x3a40:	test	rsi, rsi
0x3a43:	je	0x3a9a


0x46e8:	fstp	xword ptr [rsp]
0x46eb:	lea	rsi, [rip + 0x545e]
0x46f2:	mov	edx, 5
0x46f7:	xor	edi, edi
0x46f9:	call	0x1a80


0x3a9a:	test	bl, bl
0x3a9c:	je	0x3ad5


0x3ad5:	fstp	st(0)
0x3ad7:	mov	rsi, qword ptr [rip + 0x20a67a]
0x3ade:	mov	rax, rbp
0x3ae1:	mov	ecx, dword ptr [rax]
0x3ae3:	add	rax, 4
0x3ae7:	lea	edx, [rcx - 0x1010101]
0x3aed:	not	ecx
0x3aef:	and	edx, ecx
0x3af1:	and	edx, 0x80808080
0x3af7:	je	0x3ae1


0x3a9e:	mov	rdi, rbp
0x3aa1:	fstp	xword ptr [rsp]
0x3aa4:	call	0x7d50


0x42cf:	cdqe	
0x42d1:	add	rbp, rax
0x42d4:	fld	xword ptr [rsp + 0x10]
0x42d8:	jmp	0x35a8


0x335b:	test	eax, eax
0x335d:	mov	rcx, qword ptr [rsp + 0x10]
0x3362:	mov	r8, qword ptr [rsp + 0x20]
0x3367:	je	0x3760


0x3760:	lea	rdi, [rcx + r8]
0x3764:	fld	dword ptr [rsp]
0x3767:	lea	rcx, [rsp + 0x5f]
0x376c:	lea	rdx, [rsp + 0x80]
0x3774:	lea	rsi, [rsp + 0x68]
0x3779:	fstp	xword ptr [rsp + 0x80]
0x3780:	mov	qword ptr [rsp + 0x60], rdi
0x3785:	call	0x2ca0


0x336d:	cmp	byte ptr [rip + 0x20ad9c], 0
0x3374:	jne	0x37a0


0x337a:	mov	rdx, qword ptr [rsp + 0x60]
0x337f:	movzx	ecx, byte ptr [rdx]
0x3382:	mov	qword ptr [rsp + 0x20], rdx
0x3387:	test	cl, cl
0x3389:	mov	byte ptr [rsp + 0x10], cl
0x338d:	je	0x3640


0x37a0:	mov	rdi, qword ptr [rip + 0x20a959]
0x37a7:	push	qword ptr [rsp + 0x78]
0x37ab:	lea	rdx, [rip + 0x6206]
0x37b2:	push	qword ptr [rsp + 0x78]
0x37b6:	mov	ecx, r14d
0x37b9:	mov	esi, 1
0x37be:	xor	eax, eax
0x37c0:	call	0x1ce0


0x3640:	cmp	r13d, 4
0x3644:	je	0x3cd0


0x3393:	call	0x1d30


0x3cd0:	mov	ebx, 6
0x3cd5:	lea	r13, [rip + 0x5bc4]
0x3cdc:	jmp	0x3210


0x364a:	movzx	edx, byte ptr [rip + 0x20aabf]
0x3651:	fld1	
0x3653:	xor	r8d, r8d
0x3656:	test	dl, dl
0x3658:	jne	0x3c50


0x365e:	fld	xword ptr [rsp + 0x70]
0x3662:	fmulp	st(1)
0x3664:	fstp	xword ptr [rsp + 0x70]
0x3668:	jmp	0x3670


0x3c50:	sub	rsp, 0x10
0x3c54:	mov	rdi, qword ptr [rip + 0x20a4a5]
0x3c5b:	lea	rdx, [rip + 0x58db]
0x3c62:	fld	st(0)
0x3c64:	fstp	xword ptr [rsp]
0x3c67:	xor	eax, eax
0x3c69:	mov	ecx, r15d
0x3c6c:	mov	esi, 1
0x3c71:	fstp	xword ptr [rsp + 0x20]
0x3c75:	call	0x1ce0


0x3670:	mov	rsi, qword ptr [rsp + 0x60]
0x3675:	test	rsi, rsi
0x3678:	je	0x36e0


0x36e0:	cmp	ebx, 1
0x36e3:	jne	0x471a


0x367a:	cmp	byte ptr [rsi], 0
0x367d:	je	0x36e0


0x36e9:	cmp	byte ptr [rip + 0x20aa30], 0
0x36f0:	je	0x3248


0x471a:	xor	ebx, ebx
0x471c:	jmp	0x3248


0x367f:	cmp	dword ptr [rip + 0x20aafa], 3
0x3686:	mov	ebx, 5
0x368b:	je	0x3248


0x36f6:	mov	rdi, rbp
0x36f9:	call	0x7d50


0x3691:	mov	edi, 1
0x3696:	call	0x7d30


0x378a:	cmp	eax, 1
0x378d:	jbe	0x389e


0x389e:	cmovne	eax, ebx
0x38a1:	cmp	byte ptr [rsp + 0x5f], 0
0x38a6:	jne	0x37d0


0x3793:	mov	ebx, eax
0x3795:	jmp	0x317a


0x38ac:	mov	rcx, qword ptr [rsp + 0x68]
0x38b1:	fld	xword ptr [rsp + 0x80]
0x38b8:	mov	r14, rcx
0x38bb:	sub	r14, qword ptr [rsp + 0x60]
0x38c0:	test	r14d, r14d
0x38c3:	je	0x38e4


0x37d0:	xor	r14d, r14d
0x37d3:	mov	ebx, 3
0x37d8:	lea	r13, [rip + 0x5cee]
0x37df:	jmp	0x3210


0x38e4:	fld	st(0)
0x38e6:	fstp	xword ptr [rsp + 0x80]
0x38ed:	cmp	byte ptr [rsp + 0x5e], 0
0x38f2:	fld	xword ptr [rsp + 0x70]
0x38f6:	je	0x4536


0x38c5:	mov	edx, r14d
0x38c8:	sub	edx, 1
0x38cb:	je	0x4651


0x4536:	faddp	st(1)
0x4538:	fstp	xword ptr [rsp + 0x70]
0x453c:	jmp	0x3902


0x38fc:	fsubrp	st(1)
0x38fe:	fstp	xword ptr [rsp + 0x70]
0x3902:	mov	qword ptr [rsp + 0x60], rcx
0x3907:	mov	ebx, eax
0x3909:	jmp	0x336d


0x4651:	fdiv	dword ptr [rip + 0x6b5d]
0x4657:	jmp	0x38e4


0x38d1:	fld	dword ptr [rip + 0x78dd]
0x38d7:	fld	st(0)
0x38d9:	sub	edx, 1
0x38dc:	fmul	st(1)
0x38de:	jne	0x38d9


0x3902:	mov	qword ptr [rsp + 0x60], rcx
0x3907:	mov	ebx, eax
0x3909:	jmp	0x336d


0x38e0:	fstp	st(1)
0x38e2:	fdivp	st(1)
0x38e4:	fld	st(0)
0x38e6:	fstp	xword ptr [rsp + 0x80]
0x38ed:	cmp	byte ptr [rsp + 0x5e], 0
0x38f2:	fld	xword ptr [rsp + 0x70]
0x38f6:	je	0x4536


0x38d9:	sub	edx, 1
0x38dc:	fmul	st(1)
0x38de:	jne	0x38d9


0x2d52:	test	eax, eax
0x2d54:	mov	rcx, qword ptr [rsp + 0x18]
0x2d59:	fld	xword ptr [rsp]
0x2d5c:	jne	0x2db8


0x2d5e:	jmp	0x2d62


0x2db8:	fstp	st(0)
0x2dba:	mov	ebx, 3
0x2dbf:	add	rsp, 0x28
0x2dc3:	mov	eax, ebx
0x2dc5:	pop	rbx
0x2dc6:	pop	rbp
0x2dc7:	ret	


0x32b1:	jmp	0x2fdc


0x2fdc:	mov	rcx, qword ptr [rsp + 0x158]
0x2fe4:	xor	rcx, qword ptr fs:[0x28]
0x2fed:	mov	eax, ebx
0x2fef:	jne	0x465c


0x2ff5:	add	rsp, 0x168
0x2ffc:	pop	rbx
0x2ffd:	pop	rbp
0x2ffe:	pop	r12
0x3000:	pop	r13
0x3002:	pop	r14
0x3004:	pop	r15
0x3006:	ret	


0x465c:	call	0x1ab0


0x1ab0:	jmp	qword ptr [rip + 0x20c3d2]




0x3398:	mov	rdx, qword ptr [rsp + 0x20]
0x339d:	mov	rsi, qword ptr [rax]
0x33a0:	movzx	ecx, byte ptr [rsp + 0x10]
0x33a5:	mov	rax, rdx
0x33a8:	jmp	0x33ba


0x33ba:	movzx	edx, cl
0x33bd:	mov	r9, rax
0x33c0:	lea	rax, [rax + 1]
0x33c4:	test	byte ptr [rsi + rdx*2], 1
0x33c8:	jne	0x33b0


0x33ca:	lea	rdi, [rip + 0x60d3]
0x33d1:	movsx	esi, cl
0x33d4:	mov	qword ptr [rsp + 0x20], r9
0x33d9:	mov	byte ptr [rsp + 0x10], cl
0x33dd:	call	0x1ae0


0x33b0:	mov	qword ptr [rsp + 0x60], rax
0x33b5:	movzx	ecx, byte ptr [r9 + 1]
0x33ba:	movzx	edx, cl
0x33bd:	mov	r9, rax
0x33c0:	lea	rax, [rax + 1]
0x33c4:	test	byte ptr [rsi + rdx*2], 1
0x33c8:	jne	0x33b0


0x1ae0:	jmp	qword ptr [rip + 0x20c3ba]




0x307a:	mov	rbp, r12
0x307d:	mov	rax, qword ptr [rax]
0x3080:	jmp	0x3094


0x3094:	test	byte ptr [rax + rbx*2], 1
0x3098:	jne	0x3088


0x309a:	mov	eax, r12d
0x309d:	sub	eax, ebp
0x309f:	mov	r11d, dword ptr [rip + 0x20b08a]
0x30a6:	test	r11d, r11d
0x30a9:	je	0x31b9


0x3088:	add	rbp, 1
0x308c:	movzx	ebx, byte ptr [rbp]
0x3090:	test	bl, bl
0x3092:	je	0x309a


0x51e0:	movzx	edx, byte ptr [rsp + 8]
0x51e5:	mov	r10, qword ptr [rax]
0x51e8:	test	byte ptr [r10 + rdx*2], 1
0x51ed:	jne	0x51f7


0x51ef:	test	dl, dl
0x51f1:	jne	0x5430


0x5430:	movsx	eax, dl
0x5433:	lea	edx, [rax - 0x30]
0x5436:	cmp	edx, 9
0x5439:	ja	0x56cc


0x543f:	test	r13b, r13b
0x5442:	je	0x54a0


0x56cc:	mov	rdi, r14
0x56cf:	call	0x7d50


0x54a0:	mov	qword ptr [rip + 0x208ce9], r14
0x54a7:	jmp	0x544e


0x5444:	cmp	qword ptr [rip + 0x208d44], 0
0x544c:	je	0x54a0


0x544e:	test	bpl, bpl
0x5451:	mov	edx, 1
0x5456:	movabs	rcx, 0x1999999999999999
0x5460:	cmovne	r12d, ebp
0x5464:	cmove	ebx, edx
0x5467:	cmp	r15, rcx
0x546a:	ja	0x560d


0x5470:	sub	eax, 0x30
0x5473:	lea	rdx, [r15 + r15*4]
0x5477:	cdqe	
0x5479:	lea	rax, [rax + rdx*2]
0x547d:	cmp	rax, r15
0x5480:	jb	0x560d


0x560d:	mov	rbx, qword ptr [rip + 0x208b7c]
0x5614:	lea	rsi, [rip + 0x5c3d]
0x561b:	mov	rdi, rbx
0x561e:	call	0x1b50


0x5486:	cmp	rax, -1
0x548a:	je	0x560d


0x1b50:	jmp	qword ptr [rip + 0x20c382]


0x5490:	mov	r15, rax
0x5493:	mov	r13d, 1
0x5499:	jmp	0x524a




0x483f:	mov	rdi, qword ptr [rsp + 8]
0x4844:	mov	rdx, qword ptr [rax]
0x4847:	mov	rbx, rdi
0x484a:	nop	word ptr [rax + rax]
0x4850:	movzx	eax, r15b
0x4854:	test	byte ptr [rdx + rax*2], 1
0x4858:	jne	0x48f0


0x485e:	cmp	r15b, 0xa
0x4862:	je	0x48f0


0x48f0:	add	rbx, 1
0x48f4:	movzx	r15d, byte ptr [rbx]
0x48f8:	test	r15b, r15b
0x48fb:	jne	0x4850


0x4868:	movzx	eax, byte ptr [rbx]
0x486b:	test	al, al
0x486d:	jne	0x488b


0x4901:	jmp	0x47db


0x4850:	movzx	eax, r15b
0x4854:	test	byte ptr [rdx + rax*2], 1
0x4858:	jne	0x48f0


0x486f:	jmp	0x47db


0x488b:	movzx	ecx, al
0x488e:	test	byte ptr [rdx + rcx*2], 1
0x4892:	je	0x4878


0x4878:	cmp	al, 0xa
0x487a:	je	0x4894


0x4894:	movzx	r15d, byte ptr [rbx]
0x4898:	test	r15b, r15b
0x489b:	je	0x47db


0x487c:	add	rbx, 1
0x4880:	movzx	eax, byte ptr [rbx]
0x4883:	test	al, al
0x4885:	je	0x47db


0x48ac:	test	al, al
0x48ae:	mov	eax, dword ptr [rip + 0x209760]
0x48b4:	mov	rdi, qword ptr [rip + 0x20980d]
0x48bb:	cmove	r12d, r13d
0x48bf:	mov	esi, 0x20
0x48c4:	cmp	eax, 0x80
0x48c9:	mov	rdx, qword ptr [rdi + 0x28]
0x48cd:	cmovne	esi, eax
0x48d0:	cmp	rdx, qword ptr [rdi + 0x30]
0x48d4:	jae	0x4918


0x48d6:	lea	rcx, [rdx + 1]
0x48da:	mov	qword ptr [rdi + 0x28], rcx
0x48de:	mov	byte ptr [rdx], sil
0x48e1:	lea	rdi, [rbx + 1]
0x48e5:	jmp	0x4798


0x4918:	movzx	esi, sil
0x491c:	call	0x1af0


0x4798:	add	rbp, 1
0x479c:	cmp	eax, 0x80
0x47a1:	movzx	r15d, byte ptr [rdi]
0x47a5:	je	0x4830


0x1af0:	jmp	qword ptr [rip + 0x20c3b2]




0x47e3:	test	al, al
0x47e5:	mov	eax, 0
0x47ea:	cmove	r12d, eax
0x47ee:	test	r14b, r14b
0x47f1:	je	0x4819


0x4819:	add	rsp, 0x18
0x481d:	mov	eax, r12d
0x4820:	pop	rbx
0x4821:	pop	rbp
0x4822:	pop	r12
0x4824:	pop	r13
0x4826:	pop	r14
0x4828:	pop	r15
0x482a:	ret	


0x47f3:	mov	rdi, qword ptr [rip + 0x2098ce]
0x47fa:	movzx	edx, byte ptr [rip + 0x20980f]
0x4801:	mov	rax, qword ptr [rdi + 0x28]
0x4805:	cmp	rax, qword ptr [rdi + 0x30]
0x4809:	jae	0x4929


0x480f:	lea	rcx, [rax + 1]
0x4813:	mov	qword ptr [rdi + 0x28], rcx
0x4817:	mov	byte ptr [rax], dl
0x4819:	add	rsp, 0x18
0x481d:	mov	eax, r12d
0x4820:	pop	rbx
0x4821:	pop	rbp
0x4822:	pop	r12
0x4824:	pop	r13
0x4826:	pop	r14
0x4828:	pop	r15
0x482a:	ret	


0x4929:	movzx	esi, dl
0x492c:	call	0x1af0


0x5aed:	test	eax, eax
0x5aef:	jne	0x5ad0


0x5ad0:	mov	r14, qword ptr [rbx]
0x5ad3:	add	rbp, r12
0x5ad6:	add	rbx, 8
0x5ada:	test	r14, r14
0x5add:	je	0x5af1


0x857f:	test	rax, rax
0x8582:	je	0x8589


0x8584:	add	rsp, 8
0x8588:	ret	


0x6053:	test	rax, rax
0x6056:	je	0x60ad


0x60ad:	mov	qword ptr [rip + 0x2080fc], rbx
0x60b4:	mov	qword ptr [rip + 0x20802d], rbx
0x60bb:	pop	rbx
0x60bc:	ret	


0x6058:	lea	r8, [rax + 1]
0x605c:	mov	rdx, r8
0x605f:	sub	rdx, rbx
0x6062:	cmp	rdx, 6
0x6066:	jle	0x60ad


0x6068:	lea	rsi, [rax - 6]
0x606c:	lea	rdi, [rip + 0x53dd]
0x6073:	mov	ecx, 7
0x6078:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6078:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x607a:	seta	dl
0x607d:	sbb	dl, 0
0x6080:	test	dl, dl
0x6082:	jne	0x60ad


0x6084:	lea	rdi, [rip + 0x53cd]
0x608b:	mov	ecx, 3
0x6090:	mov	rsi, r8
0x6093:	mov	rbx, r8
0x6096:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6096:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6098:	seta	dl
0x609b:	sbb	dl, 0
0x609e:	test	dl, dl
0x60a0:	jne	0x60ad


0x60a2:	lea	rbx, [rax + 4]
0x60a6:	mov	qword ptr [rip + 0x208013], rbx
0x60ad:	mov	qword ptr [rip + 0x2080fc], rbx
0x60b4:	mov	qword ptr [rip + 0x20802d], rbx
0x60bb:	pop	rbx
0x60bc:	ret	


0x429b:	movzx	edx, byte ptr [rip + 0x209e6e]
0x42a2:	fld	xword ptr [rsp + 0x10]
0x42a6:	jmp	0x35b7


0x60da:	call	0x19c0


0x3c7a:	cmp	byte ptr [rip + 0x20a48f], 0
0x3c81:	fld	xword ptr [rsp + 0x80]
0x3c88:	fld	xword ptr [rsp + 0x20]
0x3c8c:	fmulp	st(1)
0x3c8e:	fld	st(0)
0x3c90:	fstp	xword ptr [rsp + 0x80]
0x3c97:	pop	rdi
0x3c98:	pop	r8
0x3c9a:	je	0x366a


0x366a:	fstp	st(0)
0x366c:	nop	dword ptr [rax]
0x3670:	mov	rsi, qword ptr [rsp + 0x60]
0x3675:	test	rsi, rsi
0x3678:	je	0x36e0


0x3ca0:	sub	rsp, 0x20
0x3ca4:	mov	rdi, qword ptr [rip + 0x20a455]
0x3cab:	lea	rdx, [rip + 0x58a7]
0x3cb2:	fld	st(0)
0x3cb4:	fstp	xword ptr [rsp + 0x10]
0x3cb8:	mov	esi, 1
0x3cbd:	xor	eax, eax
0x3cbf:	fstp	xword ptr [rsp]
0x3cc2:	call	0x1ce0


0x3cc7:	add	rsp, 0x20
0x3ccb:	jmp	0x3670


0x37c5:	pop	r9
0x37c7:	pop	r10
0x37c9:	jmp	0x337a


0x3f0b:	pop	rdi
0x3f0c:	pop	r8
0x3f0e:	mov	rsi, qword ptr [rip + 0x20a10b]
0x3f15:	mov	r9d, dword ptr [rsp + 0x30]
0x3f1a:	fld	xword ptr [rsp + 0x20]
0x3f1e:	fld	xword ptr [rsp]
0x3f21:	cmp	rsi, -1
0x3f25:	mov	ecx, 0x7325
0x3f2a:	mov	dword ptr [rbp], 0x664c2a2e
0x3f31:	cmovne	r9d, esi
0x3f35:	cmp	r13d, 8
0x3f39:	mov	word ptr [rbp + 4], cx
0x3f3d:	mov	byte ptr [rbp + 6], 0
0x3f41:	ja	0x4575


0x3d92:	pop	r9
0x3d94:	pop	r10
0x3d96:	movzx	edx, byte ptr [rip + 0x20a373]
0x3d9d:	fld	xword ptr [rsp + 0x30]
0x3da1:	fld	xword ptr [rsp + 0x20]
0x3da5:	mov	rsi, qword ptr [rip + 0x20a274]
0x3dac:	cmp	rsi, -1
0x3db0:	fld	qword ptr [rsp + 0x10]
0x3db4:	je	0x4496


0x39c9:	pop	r13
0x39cb:	pop	r14
0x39cd:	mov	r9d, dword ptr [rsp + 0x20]
0x39d2:	fld	xword ptr [rsp]
0x39d5:	fld	xword ptr [rsp + 0x10]
0x39d9:	jmp	0x39dd


0x39dd:	mov	dword ptr [rbp], 0x664c2a2e
0x39e4:	mov	byte ptr [rbp + 4], 0
0x39e8:	lea	rbp, [rsp + 0xd0]
0x39f0:	sub	rsp, 0x10
0x39f4:	xor	eax, eax
0x39f6:	mov	r8, r12
0x39f9:	mov	ecx, 0x80
0x39fe:	mov	edx, 1
0x3a03:	mov	esi, 0x80
0x3a08:	mov	rdi, rbp
0x3a0b:	fstp	xword ptr [rsp + 0x20]
0x3a0f:	fld	st(0)
0x3a11:	fstp	xword ptr [rsp]
0x3a14:	fstp	xword ptr [rsp + 0x10]
0x3a18:	call	0x19a0


0x7dac:	lea	rsi, [rip + 0x3b88]
0x7db3:	xor	edi, edi
0x7db5:	mov	edx, 5
0x7dba:	call	0x1a80


0x7ec1:	jmp	0x7dac


0x935e:	test	eax, eax
0x9360:	je	0x936a


0x9362:	test	dword ptr [rbx], 0x100
0x9368:	jne	0x9378


0x9378:	mov	rdi, rbx
0x937b:	mov	edx, 1
0x9380:	xor	esi, esi
0x9382:	call	0x9390


0x1d7b:	lea	rsi, [rip + 0x77f4]
0x1d82:	mov	edi, 6
0x1d87:	call	0x1c40


0x5566:	mov	rbx, qword ptr [rip + 0x208d93]
0x556d:	mov	rcx, qword ptr [rip + 0x208d84]
0x5574:	jmp	0x5398


0x78cd:	mov	qword ptr [rip + 0x2067cc], rbx
0x78d4:	pop	rbx
0x78d5:	mov	dword ptr [rip + 0x2067b9], 1
0x78df:	pop	rbp
0x78e0:	pop	r12
0x78e2:	ret	


0x78a7:	mov	qword ptr [rip + 0x2067fe], 0x100
0x78b2:	mov	qword ptr [rip + 0x2067ff], rbx
0x78b9:	lea	rbx, [rip + 0x2067f0]
0x78c0:	cmp	r12, rbx
0x78c3:	je	0x78d4


0x841d:	xor	eax, eax
0x841f:	pop	rbx
0x8420:	ret	


0x53b2:	mov	rdx, qword ptr [rip + 0x208f47]
0x53b9:	mov	qword ptr [rip + 0x208f38], rax
0x53c0:	shl	rdx, 4
0x53c4:	lea	rax, [rax + rdx - 0x10]
0x53c9:	mov	rdx, -1
0x53d0:	mov	qword ptr [rax + 8], rdx
0x53d4:	mov	qword ptr [rax], rdx
0x53d7:	add	rsp, 0x28
0x53db:	pop	rbx
0x53dc:	pop	rbp
0x53dd:	pop	r12
0x53df:	pop	r13
0x53e1:	pop	r14
0x53e3:	pop	r15
0x53e5:	ret	


0x511f:	mov	rsi, qword ptr [rip + 0x2091da]
0x5126:	mov	rdi, rax
0x5129:	mov	qword ptr [rip + 0x2091c8], rax
0x5130:	jmp	0x50c3


0x2f5b:	mov	qword ptr [rip + 0x20b206], rax
0x2f62:	add	rsp, 8
0x2f66:	ret	


0x788c:	cmp	rbx, rbp
0x788f:	jne	0x7880


0x7880:	mov	rdi, qword ptr [rbx]
0x7883:	add	rbx, 0x10
0x7887:	call	0x19b0


0x5756:	mov	qword ptr [rip + 0x208b97], 0
0x5761:	add	rsp, 8
0x5765:	ret	


0x8406:	test	rax, rax
0x8409:	jne	0x8410


0x840b:	test	rbx, rbx
0x840e:	jne	0x8421


0x8410:	pop	rbx
0x8411:	ret	


0x8421:	call	0x85e0


0x5fd7:	test	rax, rax
0x5fda:	mov	r14, rax
0x5fdd:	je	0x6020


0x6020:	mov	rdi, r12
0x6023:	call	0x19b0


0x5fdf:	mov	r9d, dword ptr [rsp + 0xc]
0x5fe4:	mov	r8d, dword ptr [rsp + 8]
0x5fe9:	mov	rcx, rbp
0x5fec:	mov	qword ptr [rbp], r13
0x5ff0:	mov	rdx, rbx
0x5ff3:	mov	rsi, rax
0x5ff6:	mov	rdi, r15
0x5ff9:	call	0x5bd0


0x6028:	jmp	0x600c


0x600c:	add	rsp, 0x18
0x6010:	mov	rax, r14
0x6013:	pop	rbx
0x6014:	pop	rbp
0x6015:	pop	r12
0x6017:	pop	r13
0x6019:	pop	r14
0x601b:	pop	r15
0x601d:	ret	


0x6241:	cmp	r15d, 0xa
0x6245:	mov	qword ptr [rsp + 0x58], rax
0x624a:	ja	0x73ff


0x6250:	lea	rcx, [rip + 0x5269]
0x6257:	mov	edx, r15d
0x625a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x625e:	add	rax, rcx
0x6261:	jmp	rax


0x73ff:	call	0x19c0


0x8686:	mov	edx, ebp
0x8688:	mov	dword ptr [rax], 0
0x868e:	mov	rsi, rbx
0x8691:	mov	rdi, r12
0x8694:	mov	r13, rax
0x8697:	call	0x1bb0


0x1bb0:	jmp	qword ptr [rip + 0x20c352]




0x8d48:	mov	dword ptr [rax], 0
0x8d4e:	mov	r12, rax
0x8d51:	movzx	ebx, byte ptr [rbp]
0x8d55:	call	0x1d30


0x8d5a:	mov	edx, dword ptr [rsp + 8]
0x8d5e:	mov	rsi, qword ptr [rax]
0x8d61:	mov	rax, rbp
0x8d64:	jmp	0x8d77


0x8d77:	movzx	ecx, bl
0x8d7a:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x8d7f:	jne	0x8d70


0x8d81:	cmp	bl, 0x2d
0x8d84:	je	0x8dd8


0x8d70:	add	rax, 1
0x8d74:	movzx	ebx, byte ptr [rax]
0x8d77:	movzx	ecx, bl
0x8d7a:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x8d7f:	jne	0x8d70


0x8dd8:	mov	ebp, 4
0x8ddd:	mov	rdi, qword ptr [rsp + 0x18]
0x8de2:	xor	rdi, qword ptr fs:[0x28]
0x8deb:	mov	eax, ebp
0x8ded:	jne	0x9080


0x8d86:	xor	ecx, ecx
0x8d88:	mov	rsi, r15
0x8d8b:	mov	rdi, rbp
0x8d8e:	call	0x1b30


0x8df3:	add	rsp, 0x28
0x8df7:	pop	rbx
0x8df8:	pop	rbp
0x8df9:	pop	r12
0x8dfb:	pop	r13
0x8dfd:	pop	r14
0x8dff:	pop	r15
0x8e01:	ret	


0x9080:	call	0x1ab0


0x1b30:	jmp	qword ptr [rip + 0x20c392]




0x7431:	mov	r13, rax
0x7434:	mov	eax, dword ptr [rax]
0x7436:	test	r15d, r15d
0x7439:	mov	rbx, qword ptr [rip + 0x206c60]
0x7440:	mov	dword ptr [rsp + 0x18], eax
0x7444:	js	0x75b1


0x75b1:	call	0x19c0


0x744a:	cmp	dword ptr [rip + 0x206c47], r15d
0x7451:	jg	0x74b5


0x7453:	cmp	r15d, 0x7fffffff
0x745a:	je	0x75b6


0x74b5:	mov	eax, dword ptr [rbp + 4]
0x74b8:	shl	r15, 4
0x74bc:	sub	rsp, 8
0x74c0:	add	rbx, r15
0x74c3:	lea	r15, [rbp + 8]
0x74c7:	mov	r8d, dword ptr [rbp]
0x74cb:	mov	r11, qword ptr [rbx]
0x74ce:	mov	r12, qword ptr [rbx + 8]
0x74d2:	mov	rcx, r14
0x74d5:	or	eax, 1
0x74d8:	mov	dword ptr [rsp + 0x24], eax
0x74dc:	push	qword ptr [rbp + 0x30]
0x74df:	mov	r9d, eax
0x74e2:	push	qword ptr [rbp + 0x28]
0x74e5:	push	r15
0x74e7:	mov	rsi, r11
0x74ea:	mov	rdx, qword ptr [rsp + 0x28]
0x74ef:	mov	rdi, r12
0x74f2:	mov	qword ptr [rsp + 0x30], r11
0x74f7:	call	0x61d0


0x75b6:	call	0x85e0


0x7460:	lea	r12d, [r15 + 1]
0x7464:	lea	rax, [rip + 0x206c45]
0x746b:	movsxd	rsi, r12d
0x746e:	shl	rsi, 4
0x7472:	cmp	rbx, rax
0x7475:	je	0x7590


0x7590:	xor	edi, edi
0x7592:	call	0x83f0


0x747b:	mov	rdi, rbx
0x747e:	call	0x83f0


0x7483:	mov	rbx, rax
0x7486:	mov	qword ptr [rip + 0x206c13], rax
0x748d:	movsxd	rdi, dword ptr [rip + 0x206c04]
0x7494:	mov	edx, r12d
0x7497:	xor	esi, esi
0x7499:	sub	edx, edi
0x749b:	shl	rdi, 4
0x749f:	movsxd	rdx, edx
0x74a2:	add	rdi, rbx
0x74a5:	shl	rdx, 4
0x74a9:	call	0x1b40


0x1b40:	jmp	qword ptr [rip + 0x20c38a]




0x7597:	movdqa	xmm0, xmmword ptr [rip + 0x206b11]
0x759f:	mov	rbx, rax
0x75a2:	mov	qword ptr [rip + 0x206af7], rax
0x75a9:	movups	xmmword ptr [rax], xmm0
0x75ac:	jmp	0x748d


0x748d:	movsxd	rdi, dword ptr [rip + 0x206c04]
0x7494:	mov	edx, r12d
0x7497:	xor	esi, esi
0x7499:	sub	edx, edi
0x749b:	shl	rdi, 4
0x749f:	movsxd	rdx, edx
0x74a2:	add	rdi, rbx
0x74a5:	shl	rdx, 4
0x74a9:	call	0x1b40


0x75cc:	mov	r12d, dword ptr [rax]
0x75cf:	mov	rbp, rax
0x75d2:	lea	rax, [rip + 0x206ce7]
0x75d9:	test	rbx, rbx
0x75dc:	mov	esi, 0x38
0x75e1:	cmove	rbx, rax
0x75e5:	mov	rdi, rbx
0x75e8:	call	0x8590


0x7702:	mov	r12d, dword ptr [rax]
0x7705:	mov	rbp, rax
0x7708:	lea	rax, [rbx + 8]
0x770c:	sub	rsp, 8
0x7710:	mov	r9d, dword ptr [rbx + 4]
0x7714:	push	qword ptr [rbx + 0x30]
0x7717:	mov	r8d, dword ptr [rbx]
0x771a:	push	qword ptr [rbx + 0x28]
0x771d:	mov	rdx, r15
0x7720:	push	rax
0x7721:	mov	rcx, qword ptr [rsp + 0x28]
0x7726:	mov	rsi, r14
0x7729:	mov	rdi, r13
0x772c:	call	0x61d0


0x777f:	test	r12, r12
0x7782:	mov	r13, rax
0x7785:	mov	eax, dword ptr [rax]
0x7787:	sete	bpl
0x778b:	or	ebp, dword ptr [rbx + 4]
0x778e:	lea	r10, [rbx + 8]
0x7792:	sub	rsp, 8
0x7796:	mov	r8d, dword ptr [rbx]
0x7799:	mov	rcx, r15
0x779c:	mov	dword ptr [rsp + 0x14], eax
0x77a0:	push	qword ptr [rbx + 0x30]
0x77a3:	mov	rdx, r14
0x77a6:	push	qword ptr [rbx + 0x28]
0x77a9:	push	r10
0x77ab:	xor	esi, esi
0x77ad:	mov	r9d, ebp
0x77b0:	xor	edi, edi
0x77b2:	mov	qword ptr [rsp + 0x40], r10
0x77b7:	call	0x61d0


0x8399:	test	rax, rax
0x839c:	jne	0x83a3


0x839e:	test	rbx, rbx
0x83a1:	jne	0x83a5


0x83a3:	pop	rbx
0x83a4:	ret	


0x83a5:	call	0x85e0


0x8549:	mov	rdx, rbx
0x854c:	xor	esi, esi
0x854e:	mov	rdi, rax
0x8551:	pop	rbx
0x8552:	jmp	0x1b40


0x85a4:	add	rsp, 8
0x85a8:	mov	rdx, rbx
0x85ab:	mov	rsi, rbp
0x85ae:	pop	rbx
0x85af:	pop	rbp
0x85b0:	mov	rdi, rax
0x85b3:	jmp	0x1bc0


0x1bc0:	jmp	qword ptr [rip + 0x20c34a]




0x32d8:	cmp	rax, qword ptr [rip + 0x20ae81]
0x32df:	mov	qword ptr [rip + 0x20ae72], rax
0x32e6:	jb	0x30cc


0x30cc:	movzx	eax, byte ptr [rip + 0x20b03d]
0x30d3:	test	al, al
0x30d5:	jne	0x3198


0x32ec:	mov	rdi, rax
0x32ef:	call	0x2f40


0x32f4:	jmp	0x30cc


0x302a:	mov	rdi, rbp
0x302d:	mov	rbx, rax
0x3030:	call	0x1aa0


0x3035:	cmp	rbx, rax
0x3038:	jbe	0x3068


0x303a:	sub	rbx, rax
0x303d:	mov	rdi, rbp
0x3040:	add	rbx, r12
0x3043:	mov	rsi, rbx
0x3046:	call	0x1ba0


0x1ba0:	jmp	qword ptr [rip + 0x20c35a]




0x2df0:	test	rax, rax
0x2df3:	mov	qword ptr [rsp + 8], 0
0x2dfc:	je	0x2e11


0x2e11:	lea	r8, [rip + 0x668c]
0x2e18:	mov	r9, rbx
0x2e1b:	xor	r12d, r12d
0x2e1e:	lea	rcx, [rsp + 0x10]
0x2e23:	lea	rsi, [rsp + 8]
0x2e28:	mov	edx, 0xa
0x2e2d:	mov	rdi, r9
0x2e30:	call	0x8d00


0x2dfe:	mov	rbp, rax
0x2e01:	lea	r12, [rax - 1]
0x2e05:	movzx	eax, byte ptr [rbx + rax - 1]
0x2e0a:	sub	eax, 0x30
0x2e0d:	cmp	al, 9
0x2e0f:	ja	0x2e88


0x2e88:	lea	rdi, [rbp + 2]
0x2e8c:	call	0x8390


0x2e91:	mov	rdx, rbp
0x2e94:	add	r12, rax
0x2e97:	mov	rsi, rbx
0x2e9a:	mov	rdi, rax
0x2e9d:	mov	qword ptr [rsp + 8], r12
0x2ea2:	call	0x1bc0


0x2e35:	test	eax, eax
0x2e37:	jne	0x2f01


0x2e3d:	mov	rax, qword ptr [rsp + 8]
0x2e42:	cmp	byte ptr [rax], 0
0x2e45:	jne	0x2f01


0x2f01:	mov	rdi, r12
0x2f04:	call	0x19b0


0x2e4b:	mov	rbp, qword ptr [rsp + 0x10]
0x2e50:	test	rbp, rbp
0x2e53:	je	0x2f01


0x2e59:	mov	rdi, r12
0x2e5c:	call	0x19b0


0x2e61:	mov	rdx, qword ptr [rsp + 0x18]
0x2e66:	xor	rdx, qword ptr fs:[0x28]
0x2e6f:	mov	rax, rbp
0x2e72:	jne	0x2f3b


0x2e78:	add	rsp, 0x20
0x2e7c:	pop	rbx
0x2e7d:	pop	rbp
0x2e7e:	pop	r12
0x2e80:	ret	


0x2f3b:	call	0x1ab0


0x2f09:	mov	rdi, rbx
0x2f0c:	call	0x7d50


0x57a6:	mov	r14, qword ptr [r15]
0x57a9:	mov	qword ptr [rsp], -1
0x57b1:	test	r14, r14
0x57b4:	je	0x586d


0x586d:	mov	rax, qword ptr [rsp]
0x5871:	add	rsp, 0x28
0x5875:	pop	rbx
0x5876:	pop	rbp
0x5877:	pop	r12
0x5879:	pop	r13
0x587b:	pop	r14
0x587d:	pop	r15
0x587f:	ret	


0x57ba:	mov	r12, rax
0x57bd:	mov	byte ptr [rsp + 0x17], 0
0x57c2:	xor	ebx, ebx
0x57c4:	jmp	0x5817


0x5817:	mov	rsi, qword ptr [rsp + 8]
0x581c:	mov	rdx, r12
0x581f:	mov	rdi, r14
0x5822:	call	0x19e0


0x5827:	test	eax, eax
0x5829:	jne	0x5807


0x582b:	mov	rdi, r14
0x582e:	call	0x1aa0


0x5807:	add	rbx, 1
0x580b:	add	rbp, r13
0x580e:	mov	r14, qword ptr [r15 + rbx*8]
0x5812:	test	r14, r14
0x5815:	je	0x5858


0x5858:	cmp	byte ptr [rsp + 0x17], 0
0x585d:	mov	rax, -2
0x5864:	cmove	rax, qword ptr [rsp]
0x5869:	mov	qword ptr [rsp], rax
0x586d:	mov	rax, qword ptr [rsp]
0x5871:	add	rsp, 0x28
0x5875:	pop	rbx
0x5876:	pop	rbp
0x5877:	pop	r12
0x5879:	pop	r13
0x587b:	pop	r14
0x587d:	pop	r15
0x587f:	ret	


0x5a71:	test	rax, rax
0x5a74:	js	0x5a85


0x5a85:	mov	rdx, rax
0x5a88:	mov	rsi, r12
0x5a8b:	mov	rdi, r14
0x5a8e:	call	0x58a0


0x5a76:	add	rsp, 8
0x5a7a:	pop	rbx
0x5a7b:	pop	rbp
0x5a7c:	pop	r12
0x5a7e:	pop	r13
0x5a80:	pop	r14
0x5a82:	pop	r15
0x5a84:	ret	


0x5833:	cmp	rax, r12
0x5836:	je	0x5890


0x5890:	mov	qword ptr [rsp], rbx
0x5894:	jmp	0x586d


0x5838:	cmp	qword ptr [rsp], -1
0x583d:	jne	0x57d0


0x583f:	mov	qword ptr [rsp], rbx
0x5843:	add	rbx, 1
0x5847:	add	rbp, r13
0x584a:	mov	r14, qword ptr [r15 + rbx*8]
0x584e:	test	r14, r14
0x5851:	jne	0x5817


0x57d0:	mov	rax, qword ptr [rsp + 0x18]
0x57d5:	test	rax, rax
0x57d8:	je	0x5880


0x5880:	mov	byte ptr [rsp + 0x17], 1
0x5885:	jmp	0x5807


0x57de:	mov	rdi, qword ptr [rsp]
0x57e2:	mov	rdx, r13
0x57e5:	mov	rsi, rbp
0x57e8:	imul	rdi, r13
0x57ec:	add	rdi, rax
0x57ef:	call	0x1b70


0x57f4:	test	eax, eax
0x57f6:	movzx	eax, byte ptr [rsp + 0x17]
0x57fb:	mov	ecx, 1
0x5800:	cmovne	eax, ecx
0x5803:	mov	byte ptr [rsp + 0x17], al
0x5807:	add	rbx, 1
0x580b:	add	rbp, r13
0x580e:	mov	r14, qword ptr [r15 + rbx*8]
0x5812:	test	r14, r14
0x5815:	je	0x5858


0x5bf9:	test	bl, 2
0x5bfc:	mov	r15, rax
0x5bff:	mov	qword ptr [rsp + 8], rax
0x5c04:	je	0x5d70


0x5d70:	call	0x1a90


0x5c0a:	mov	rbp, r15
0x5c0d:	mov	qword ptr [rsp], 0
0x5c15:	mov	qword ptr [rsp + 8], 0
0x5c1e:	mov	rax, qword ptr [r12]
0x5c22:	cmp	rax, rbp
0x5c25:	jae	0x5d39


0x5c2b:	mov	r15, rax
0x5c2e:	xor	edx, edx
0x5c30:	mov	qword ptr [r12], rax
0x5c34:	mov	eax, dword ptr [rsp + 0x1c]
0x5c38:	test	eax, eax
0x5c3a:	je	0x5d5b


0x5d39:	cmp	rbp, rax
0x5d3c:	jae	0x5f8a


0x5d5b:	mov	rbp, rdx
0x5d5e:	xor	edx, edx
0x5d60:	jmp	0x5c53


0x5c40:	xor	ebp, ebp
0x5c42:	cmp	eax, 1
0x5c45:	je	0x5c53


0x5d42:	sub	rax, rbp
0x5d45:	mov	rdx, rax
0x5d48:	mov	rax, rbp
0x5d4b:	mov	qword ptr [r12], rax
0x5d4f:	mov	eax, dword ptr [rsp + 0x1c]
0x5d53:	test	eax, eax
0x5d55:	jne	0x5c40


0x5f8a:	mov	rax, rbp
0x5f8d:	xor	edx, edx
0x5f8f:	jmp	0x5c30


0x5c53:	test	bl, 4
0x5c56:	lea	r12, [rdx + r15]
0x5c5a:	je	0x5c61


0x5c47:	mov	rbp, rdx
0x5c4a:	and	edx, 1
0x5c4d:	shr	rbp, 1
0x5c50:	add	rdx, rbp
0x5c53:	test	bl, 4
0x5c56:	lea	r12, [rdx + r15]
0x5c5a:	je	0x5c61


0x5c30:	mov	qword ptr [r12], rax
0x5c34:	mov	eax, dword ptr [rsp + 0x1c]
0x5c38:	test	eax, eax
0x5c3a:	je	0x5d5b


0x5c61:	and	ebx, 8
0x5c64:	jne	0x5d68


0x5c5c:	mov	r12, r15
0x5c5f:	xor	edx, edx
0x5c61:	and	ebx, 8
0x5c64:	jne	0x5d68


0x5c6a:	add	r12, rbp
0x5c6d:	mov	rax, qword ptr [rsp + 0x10]
0x5c72:	test	rax, rax
0x5c75:	je	0x5d01


0x5d68:	xor	ebp, ebp
0x5d6a:	jmp	0x5c6d


0x5d01:	mov	rdi, qword ptr [rsp]
0x5d05:	call	0x19b0


0x5c7b:	lea	rbx, [r13 + rax - 1]
0x5c80:	lea	rax, [rdx - 1]
0x5c84:	cmp	r13, rbx
0x5c87:	jae	0x5caf


0x5c6d:	mov	rax, qword ptr [rsp + 0x10]
0x5c72:	test	rax, rax
0x5c75:	je	0x5d01


0x5c89:	test	rdx, rdx
0x5c8c:	je	0x5caf


0x5caf:	mov	rdx, rbx
0x5cb2:	mov	byte ptr [r13], 0
0x5cb7:	mov	rsi, r14
0x5cba:	sub	rdx, r13
0x5cbd:	mov	rdi, r13
0x5cc0:	cmp	rdx, r15
0x5cc3:	cmova	rdx, r15
0x5cc7:	call	0x1c60


0x1c60:	jmp	qword ptr [rip + 0x20c2fa]


0x5c90:	add	r13, 1
0x5c94:	mov	byte ptr [r13 - 1], 0x20
0x5c99:	cmp	rbx, r13
0x5c9c:	seta	sil
0x5ca0:	test	rax, rax
0x5ca3:	setne	dl
0x5ca6:	sub	rax, 1
0x5caa:	test	sil, dl
0x5cad:	jne	0x5c90




0x5d0a:	mov	rdi, qword ptr [rsp + 8]
0x5d0f:	call	0x19b0


0x5d14:	add	rsp, 0x38
0x5d18:	mov	rax, r12
0x5d1b:	pop	rbx
0x5d1c:	pop	rbp
0x5d1d:	pop	r12
0x5d1f:	pop	r13
0x5d21:	pop	r14
0x5d23:	pop	r15
0x5d25:	ret	


0x5d75:	cmp	rax, 1
0x5d79:	jbe	0x5c0a


0x5d7f:	xor	edx, edx
0x5d81:	xor	edi, edi
0x5d83:	mov	rsi, r14
0x5d86:	call	0x1a40


0x1a40:	jmp	qword ptr [rip + 0x20c40a]




0x5ffe:	cmp	rax, -1
0x6002:	je	0x6030


0x6030:	mov	rdi, r14
0x6033:	xor	r14d, r14d
0x6036:	call	0x19b0


0x6004:	cmp	rbx, rax
0x6007:	mov	r12, r14
0x600a:	jbe	0x5fc8


0x5fc8:	lea	rbx, [rax + 1]
0x5fcc:	mov	rdi, r12
0x5fcf:	mov	rsi, rbx
0x5fd2:	call	0x1c30


0x603b:	jmp	0x600c


0x445b:	cmp	byte ptr [rip + 0x209cae], 0
0x4462:	je	0x3b4d


0x3b4d:	mov	rdi, qword ptr [rip + 0x20a5ec]
0x3b54:	mov	rsi, qword ptr [rip + 0x20a56d]
0x3b5b:	test	rdi, rdi
0x3b5e:	je	0x3b6c


0x4468:	mov	rdi, qword ptr [rip + 0x209cf9]
0x446f:	call	0x7d50


0x3b6c:	mov	rdi, qword ptr [rip + 0x20a5f5]
0x3b73:	mov	ebx, 1
0x3b78:	call	0x1b80


0x3b60:	call	0x1b80


0x3b65:	mov	rsi, qword ptr [rip + 0x20a55c]
0x3b6c:	mov	rdi, qword ptr [rip + 0x20a5f5]
0x3b73:	mov	ebx, 1
0x3b78:	call	0x1b80


0x3b7d:	mov	rdi, qword ptr [rip + 0x20a5b4]
0x3b84:	test	rdi, rdi
0x3b87:	je	0x2fdc


0x3b8d:	mov	rsi, qword ptr [rip + 0x20a534]
0x3b94:	call	0x1b80


0x3b99:	jmp	0x2fdc


0x85c9:	mov	rdi, rbx
0x85cc:	lea	rsi, [rax + 1]
0x85d0:	pop	rbx
0x85d1:	jmp	0x8590


0x7dbf:	lea	rdx, [rip + 0x3e9a]
0x7dc6:	mov	rcx, rax
0x7dc9:	mov	r8d, 0x7e3
0x7dcf:	mov	esi, 1
0x7dd4:	mov	rdi, rbp
0x7dd7:	xor	eax, eax
0x7dd9:	call	0x1ce0


0x7dde:	lea	rsi, [rip + 0x3be3]
0x7de5:	xor	edi, edi
0x7de7:	mov	edx, 5
0x7dec:	call	0x1a80


0x7df1:	mov	rsi, rbp
0x7df4:	mov	rdi, rax
0x7df7:	call	0x1b80


0x7dfc:	cmp	r12, 9
0x7e00:	ja	0x8140


0x7e06:	lea	rdx, [rip + 0x3e17]
0x7e0d:	movsxd	rax, dword ptr [rdx + r12*4]
0x7e11:	add	rax, rdx
0x7e14:	jmp	rax


0x8140:	mov	r10, qword ptr [rbx + 0x40]
0x8144:	mov	r9, qword ptr [rbx + 0x38]
0x8148:	mov	edx, 5
0x814d:	mov	rax, qword ptr [rbx + 0x10]
0x8151:	mov	r8, qword ptr [rbx + 8]
0x8155:	lea	rsi, [rip + 0x3a44]
0x815c:	mov	r13, qword ptr [rbx + 0x30]
0x8160:	mov	r12, qword ptr [rbx + 0x28]
0x8164:	mov	r15, qword ptr [rbx + 0x20]
0x8168:	mov	r14, qword ptr [rbx + 0x18]
0x816c:	mov	qword ptr [rsp + 0x18], r10
0x8171:	mov	qword ptr [rsp + 0x10], r9
0x8176:	mov	qword ptr [rsp], rax
0x817a:	mov	qword ptr [rsp + 8], r8
0x817f:	mov	rbx, qword ptr [rbx]
0x8182:	jmp	0x7f12


0x7f12:	xor	edi, edi
0x7f14:	call	0x1a80


0x7f19:	mov	r10, qword ptr [rsp + 0x18]
0x7f1e:	push	r10
0x7f20:	jmp	0x7e64


0x7e64:	mov	r9, qword ptr [rsp + 0x18]
0x7e69:	mov	rdx, rax
0x7e6c:	mov	rcx, rbx
0x7e6f:	mov	esi, 1
0x7e74:	mov	rdi, rbp
0x7e77:	xor	eax, eax
0x7e79:	push	r9
0x7e7b:	push	r13
0x7e7d:	push	r12
0x7e7f:	push	r15
0x7e81:	push	r14
0x7e83:	mov	r9, qword ptr [rsp + 0x30]
0x7e88:	mov	r8, qword ptr [rsp + 0x38]
0x7e8d:	call	0x1ce0


0x7e92:	add	rsp, 0x30
0x7e96:	add	rsp, 0x28
0x7e9a:	pop	rbx
0x7e9b:	pop	rbp
0x7e9c:	pop	r12
0x7e9e:	pop	r13
0x7ea0:	pop	r14
0x7ea2:	pop	r15
0x7ea4:	ret	


0x82d6:	mov	rax, qword ptr [rsp + 0x78]
0x82db:	xor	rax, qword ptr fs:[0x28]
0x82e4:	jne	0x82f0


0x82e6:	add	rsp, 0xb8
0x82ed:	pop	rbx
0x82ee:	pop	rbp
0x82ef:	ret	


0x82f0:	call	0x1ab0


0x8200:	mov	rax, qword ptr [rsp + 0x58]
0x8205:	xor	rax, qword ptr fs:[0x28]
0x820e:	jne	0x8215


0x8210:	add	rsp, 0x68
0x8214:	ret	


0x8215:	call	0x1ab0


0x46fe:	sub	rsp, 0x10
0x4702:	mov	rdx, rax
0x4705:	xor	esi, esi
0x4707:	mov	edi, 1
0x470c:	xor	eax, eax
0x470e:	fld	xword ptr [rsp + 0x10]
0x4712:	fstp	xword ptr [rsp]
0x4715:	call	0x1c80


0x1c80:	jmp	qword ptr [rip + 0x20c2ea]




0x405a:	sub	rsp, 0x10
0x405e:	mov	rdx, rax
0x4061:	xor	esi, esi
0x4063:	mov	edi, 1
0x4068:	xor	eax, eax
0x406a:	fld	xword ptr [rsp + 0x10]
0x406e:	fstp	xword ptr [rsp]
0x4071:	call	0x1c80


0x56c7:	jmp	0x55b0


0x55b0:	mov	rdx, rax
0x55b3:	xor	edi, edi
0x55b5:	xor	esi, esi
0x55b7:	xor	eax, eax
0x55b9:	call	0x1c80


0x3525:	fld	xword ptr [rsp]
0x3528:	mov	edi, dword ptr [rip + 0x20aaee]
0x352e:	sub	rsp, 0x10
0x3532:	mov	rdx, rax
0x3535:	xor	esi, esi
0x3537:	xor	eax, eax
0x3539:	fstp	xword ptr [rsp]
0x353c:	call	0x1c80


0x3834:	sub	rsp, 0x10
0x3838:	mov	rcx, r14
0x383b:	mov	rdx, rax
0x383e:	fld	xword ptr [rsp + 0x10]
0x3842:	xor	esi, esi
0x3844:	mov	edi, ebx
0x3846:	xor	eax, eax
0x3848:	fstp	xword ptr [rsp]
0x384b:	call	0x1c80


0x425b:	fld	xword ptr [rsp]
0x425e:	mov	rdx, rax
0x4261:	sub	rsp, 0x10
0x4265:	xor	eax, eax
0x4267:	xor	esi, esi
0x4269:	mov	edi, ebx
0x426b:	fstp	xword ptr [rsp]
0x426e:	call	0x1c80


0x55eb:	jmp	0x55b0


0x55d6:	jmp	0x55b0


0x560b:	jmp	0x55b0


0x5698:	jmp	0x55b0


0x497d:	mov	rdi, qword ptr [rip + 0x20977c]
0x4984:	mov	rdx, rax
0x4987:	mov	rcx, rbx
0x498a:	mov	esi, 1
0x498f:	xor	eax, eax
0x4991:	call	0x1ce0


0x4996:	mov	edi, ebp
0x4998:	call	0x1cc0


0x1cc0:	jmp	qword ptr [rip + 0x20c2ca]




0x49ab:	mov	rdx, rbx
0x49ae:	mov	rsi, rax
0x49b1:	mov	edi, 1
0x49b6:	xor	eax, eax
0x49b8:	call	0x1c50


0x1c50:	jmp	qword ptr [rip + 0x20c302]




0x58c3:	mov	rbx, rax
0x58c6:	mov	rsi, rbp
0x58c9:	mov	edi, 1
0x58ce:	call	0x7d30


0x590e:	mov	rbx, rax
0x5911:	jmp	0x58c6


0x58c6:	mov	rsi, rbp
0x58c9:	mov	edi, 1
0x58ce:	call	0x7d30


0x5951:	mov	rdi, rax
0x5954:	mov	rsi, rbx
0x5957:	call	0x1b80


0x595c:	mov	r15, qword ptr [r14]
0x595f:	test	r15, r15
0x5962:	je	0x59f8


0x59f8:	mov	rdi, qword ptr [rip + 0x208701]
0x59ff:	mov	rax, qword ptr [rdi + 0x28]
0x5a03:	cmp	rax, qword ptr [rdi + 0x30]
0x5a07:	jae	0x5a28


0x5968:	xor	r13d, r13d
0x596b:	xor	ebx, ebx
0x596d:	jmp	0x59a8


0x5a09:	lea	rdx, [rax + 1]
0x5a0d:	mov	qword ptr [rdi + 0x28], rdx
0x5a11:	mov	byte ptr [rax], 0xa
0x5a14:	add	rsp, 8
0x5a18:	pop	rbx
0x5a19:	pop	rbp
0x5a1a:	pop	r12
0x5a1c:	pop	r13
0x5a1e:	pop	r14
0x5a20:	pop	r15
0x5a22:	ret	


0x5a28:	add	rsp, 8
0x5a2c:	mov	esi, 0xa
0x5a31:	pop	rbx
0x5a32:	pop	rbp
0x5a33:	pop	r12
0x5a35:	pop	r13
0x5a37:	pop	r14
0x5a39:	pop	r15
0x5a3b:	jmp	0x1af0


0x59a8:	test	rbx, rbx
0x59ab:	je	0x5970


0x5970:	mov	rdi, r15
0x5973:	add	rbx, 1
0x5977:	mov	r13, rbp
0x597a:	call	0x7d50


0x59ad:	mov	rdx, r12
0x59b0:	mov	rsi, rbp
0x59b3:	mov	rdi, r13
0x59b6:	call	0x1b70


0x59bb:	test	eax, eax
0x59bd:	jne	0x5970


0x59bf:	mov	rdi, r15
0x59c2:	add	rbx, 1
0x59c6:	add	rbp, r12
0x59c9:	call	0x7d50


0x8324:	lea	rdx, [rip + 0x366c]
0x832b:	mov	rsi, rax
0x832e:	mov	edi, 1
0x8333:	xor	eax, eax
0x8335:	call	0x1c50


0x85f7:	mov	edi, dword ptr [rip + 0x205a53]
0x85fd:	lea	rdx, [rip + 0x2df9]
0x8604:	mov	rcx, rax
0x8607:	xor	esi, esi
0x8609:	xor	eax, eax
0x860b:	call	0x1c80


0x8629:	test	rax, rax
0x862c:	je	0x8633


0x8633:	call	0x85e0


0x862e:	add	rsp, 8
0x8632:	ret	


0x9157:	cmp	rax, -3
0x915b:	mov	rbp, rax
0x915e:	jbe	0x9180


0x9180:	mov	rdx, qword ptr [rsp + 8]
0x9185:	xor	rdx, qword ptr fs:[0x28]
0x918e:	mov	rax, rbp
0x9191:	jne	0x919e


0x9160:	test	r12, r12
0x9163:	je	0x9180


0x9193:	add	rsp, 0x18
0x9197:	pop	rbx
0x9198:	pop	rbp
0x9199:	pop	r12
0x919b:	pop	r13
0x919d:	ret	


0x919e:	call	0x1ab0


0x9165:	xor	edi, edi
0x9167:	call	0x9230


0x91bc:	mov	ebx, dword ptr [rbp]
0x91bf:	mov	rdi, rbp
0x91c2:	mov	r12, rax
0x91c5:	call	0x92d0


0x1d8c:	lea	rsi, [rip + 0x78f3]
0x1d93:	lea	rdi, [rip + 0x78b1]
0x1d9a:	mov	r13, rax
0x1d9d:	call	0x1a70


0x1a70:	jmp	qword ptr [rip + 0x20c3f2]




0x923b:	mov	rdx, rax
0x923e:	mov	eax, 1
0x9243:	test	rdx, rdx
0x9246:	je	0x9265


0x9265:	add	rsp, 8
0x9269:	ret	


0x9248:	lea	rdi, [rip + 0x2c5c]
0x924f:	mov	ecx, 2
0x9254:	mov	rsi, rdx
0x9257:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x9257:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x9259:	seta	cl
0x925c:	sbb	cl, 0
0x925f:	xor	eax, eax
0x9261:	test	cl, cl
0x9263:	jne	0x9270


0x9270:	lea	rdi, [rip + 0x2c36]
0x9277:	mov	ecx, 6
0x927c:	mov	rsi, rdx
0x927f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x927f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x9281:	seta	al
0x9284:	sbb	al, 0
0x9286:	test	al, al
0x9288:	setne	al
0x928b:	add	rsp, 8
0x928f:	ret	


0x916c:	test	al, al
0x916e:	jne	0x9180


0x9170:	movzx	eax, byte ptr [r13]
0x9175:	mov	ebp, 1
0x917a:	mov	dword ptr [rbx], eax
0x917c:	nop	dword ptr [rax]
0x9180:	mov	rdx, qword ptr [rsp + 8]
0x9185:	xor	rdx, qword ptr fs:[0x28]
0x918e:	mov	rax, rbp
0x9191:	jne	0x919e


0x929e:	test	rax, rax
0x92a1:	je	0x92c0


0x92c0:	lea	rax, [rip + 0x2bec]
0x92c7:	add	rsp, 8
0x92cb:	ret	


0x92a3:	cmp	byte ptr [rax], 0
0x92a6:	lea	rdx, [rip + 0x2c06]
0x92ad:	cmove	rax, rdx
0x92b1:	add	rsp, 8
0x92b5:	ret	


0x60f0:	movzx	edx, byte ptr [rax]
0x60f3:	and	edx, 0xffffffdf
0x60f6:	cmp	dl, 0x55
0x60f9:	je	0x6170


0x6170:	movzx	edx, byte ptr [rax + 1]
0x6174:	and	edx, 0xffffffdf
0x6177:	cmp	dl, 0x54
0x617a:	jne	0x6100


0x60fb:	cmp	dl, 0x47
0x60fe:	je	0x6120


0x617c:	movzx	edx, byte ptr [rax + 2]
0x6180:	and	edx, 0xffffffdf
0x6183:	cmp	dl, 0x46
0x6186:	jne	0x6100


0x6100:	lea	rax, [rip + 0x5364]
0x6107:	lea	rdx, [rip + 0x535f]
0x610e:	cmp	ebx, 9
0x6111:	cmovne	rax, rdx
0x6115:	add	rsp, 8
0x6119:	pop	rbx
0x611a:	pop	rbp
0x611b:	ret	


0x6120:	movzx	edx, byte ptr [rax + 1]
0x6124:	and	edx, 0xffffffdf
0x6127:	cmp	dl, 0x42
0x612a:	jne	0x6100


0x618c:	cmp	byte ptr [rax + 3], 0x2d
0x6190:	jne	0x6100


0x612c:	cmp	byte ptr [rax + 2], 0x31
0x6130:	jne	0x6100


0x6196:	cmp	byte ptr [rax + 4], 0x38
0x619a:	jne	0x6100


0x6132:	cmp	byte ptr [rax + 3], 0x38
0x6136:	jne	0x6100


0x61a0:	cmp	byte ptr [rax + 5], 0
0x61a4:	jne	0x6100


0x6138:	cmp	byte ptr [rax + 4], 0x30
0x613c:	jne	0x6100


0x61aa:	cmp	byte ptr [rbp], 0x60
0x61ae:	lea	rax, [rip + 0x52a7]
0x61b5:	lea	rdx, [rip + 0x52a4]
0x61bc:	cmovne	rax, rdx
0x61c0:	add	rsp, 8
0x61c4:	pop	rbx
0x61c5:	pop	rbp
0x61c6:	ret	


0x613e:	cmp	byte ptr [rax + 5], 0x33
0x6142:	jne	0x6100


0x6144:	cmp	byte ptr [rax + 6], 0x30
0x6148:	jne	0x6100


0x614a:	cmp	byte ptr [rax + 7], 0
0x614e:	jne	0x6100


0x6150:	cmp	byte ptr [rbp], 0x60
0x6154:	lea	rax, [rip + 0x5309]
0x615b:	lea	rdx, [rip + 0x5306]
0x6162:	cmovne	rax, rdx
0x6166:	add	rsp, 8
0x616a:	pop	rbx
0x616b:	pop	rbp
0x616c:	ret	


0x93c3:	mov	edx, r12d
0x93c6:	mov	rsi, rbp
0x93c9:	mov	edi, eax
0x93cb:	call	0x1b10


0x1b10:	jmp	qword ptr [rip + 0x20c3a2]




0x92dc:	test	eax, eax
0x92de:	mov	rdi, rbx
0x92e1:	js	0x9337


0x9337:	pop	rbx
0x9338:	pop	rbp
0x9339:	pop	r12
0x933b:	jmp	0x1a60


0x92e3:	call	0x1c20


0x1a60:	jmp	qword ptr [rip + 0x20c3fa]




0x92e8:	test	eax, eax
0x92ea:	jne	0x9318


0x92ec:	mov	rdi, rbx
0x92ef:	call	0x9350


0x9318:	mov	rdi, rbx
0x931b:	call	0x1bd0


0x9320:	xor	esi, esi
0x9322:	mov	edx, 1
0x9327:	mov	edi, eax
0x9329:	call	0x1b10


0x932e:	cmp	rax, -1
0x9332:	jne	0x92ec


0x9334:	mov	rdi, rbx
0x9337:	pop	rbx
0x9338:	pop	rbp
0x9339:	pop	r12
0x933b:	jmp	0x1a60


0x93d0:	cmp	rax, -1
0x93d4:	je	0x93e2


0x93e2:	pop	rbx
0x93e3:	pop	rbp
0x93e4:	pop	r12
0x93e6:	ret	


0x93d6:	and	dword ptr [rbx], 0xffffffef
0x93d9:	mov	qword ptr [rbx + 0x90], rax
0x93e0:	xor	eax, eax
0x93e2:	pop	rbx
0x93e3:	pop	rbp
0x93e4:	pop	r12
0x93e6:	ret	


0x1da2:	lea	rdi, [rip + 0x78a2]
0x1da9:	call	0x1a50


0x1a50:	jmp	qword ptr [rip + 0x20c402]




0x833a:	lea	rsi, [rip + 0x366c]
0x8341:	mov	edx, 5
0x8346:	xor	edi, edi
0x8348:	call	0x1a80


0x834d:	lea	rcx, [rip + 0x29a4]
0x8354:	lea	rdx, [rip + 0x12ec]
0x835b:	mov	rsi, rax
0x835e:	mov	edi, 1
0x8363:	xor	eax, eax
0x8365:	call	0x1c50


0x836a:	mov	rbx, qword ptr [rip + 0x205d57]
0x8371:	lea	rsi, [rip + 0x3868]
0x8378:	xor	edi, edi
0x837a:	mov	edx, 5
0x837f:	call	0x1a80


0x8384:	mov	rsi, rbx
0x8387:	mov	rdi, rax
0x838a:	pop	rbx
0x838b:	jmp	0x1b80


0x49bd:	mov	rbx, qword ptr [rip + 0x209704]
0x49c4:	lea	rsi, [rip + 0x5295]
0x49cb:	mov	edx, 5
0x49d0:	xor	edi, edi
0x49d2:	call	0x1a80


0x49d7:	mov	rsi, rbx
0x49da:	mov	rdi, rax
0x49dd:	call	0x1b80


0x49e2:	mov	rbx, qword ptr [rip + 0x2096df]
0x49e9:	lea	rsi, [rip + 0x52c0]
0x49f0:	mov	edx, 5
0x49f5:	xor	edi, edi
0x49f7:	call	0x1a80


0x49fc:	mov	rsi, rbx
0x49ff:	mov	rdi, rax
0x4a02:	call	0x1b80


0x4a07:	mov	rbx, qword ptr [rip + 0x2096ba]
0x4a0e:	lea	rsi, [rip + 0x52eb]
0x4a15:	mov	edx, 5
0x4a1a:	xor	edi, edi
0x4a1c:	call	0x1a80


0x4a21:	mov	rsi, rbx
0x4a24:	mov	rdi, rax
0x4a27:	call	0x1b80


0x4a2c:	mov	rbx, qword ptr [rip + 0x209695]
0x4a33:	lea	rsi, [rip + 0x5306]
0x4a3a:	mov	edx, 5
0x4a3f:	xor	edi, edi
0x4a41:	call	0x1a80


0x4a46:	mov	rsi, rbx
0x4a49:	mov	rdi, rax
0x4a4c:	call	0x1b80


0x4a51:	mov	rbx, qword ptr [rip + 0x209670]
0x4a58:	lea	rsi, [rip + 0x5329]
0x4a5f:	mov	edx, 5
0x4a64:	xor	edi, edi
0x4a66:	call	0x1a80


0x4a6b:	mov	rsi, rbx
0x4a6e:	mov	rdi, rax
0x4a71:	call	0x1b80


0x4a76:	mov	rbx, qword ptr [rip + 0x20964b]
0x4a7d:	lea	rsi, [rip + 0x537c]
0x4a84:	mov	edx, 5
0x4a89:	xor	edi, edi
0x4a8b:	call	0x1a80


0x4a90:	mov	rsi, rbx
0x4a93:	mov	rdi, rax
0x4a96:	call	0x1b80


0x4a9b:	mov	rbx, qword ptr [rip + 0x209626]
0x4aa2:	lea	rsi, [rip + 0x53cf]
0x4aa9:	mov	edx, 5
0x4aae:	xor	edi, edi
0x4ab0:	call	0x1a80


0x4ab5:	mov	rsi, rbx
0x4ab8:	mov	rdi, rax
0x4abb:	call	0x1b80


0x4ac0:	mov	rbx, qword ptr [rip + 0x209601]
0x4ac7:	lea	rsi, [rip + 0x5422]
0x4ace:	mov	edx, 5
0x4ad3:	xor	edi, edi
0x4ad5:	call	0x1a80


0x4ada:	mov	rsi, rbx
0x4add:	mov	rdi, rax
0x4ae0:	call	0x1b80


0x4ae5:	mov	rbx, qword ptr [rip + 0x2095dc]
0x4aec:	lea	rsi, [rip + 0x544d]
0x4af3:	mov	edx, 5
0x4af8:	xor	edi, edi
0x4afa:	call	0x1a80


0x4aff:	mov	rsi, rbx
0x4b02:	mov	rdi, rax
0x4b05:	call	0x1b80


0x4b0a:	mov	rbx, qword ptr [rip + 0x2095b7]
0x4b11:	lea	rsi, [rip + 0x54c8]
0x4b18:	mov	edx, 5
0x4b1d:	xor	edi, edi
0x4b1f:	call	0x1a80


0x4b24:	mov	rsi, rbx
0x4b27:	mov	rdi, rax
0x4b2a:	call	0x1b80


0x4b2f:	mov	rbx, qword ptr [rip + 0x209592]
0x4b36:	lea	rsi, [rip + 0x552b]
0x4b3d:	mov	edx, 5
0x4b42:	xor	edi, edi
0x4b44:	call	0x1a80


0x4b49:	mov	rsi, rbx
0x4b4c:	mov	rdi, rax
0x4b4f:	call	0x1b80


0x4b54:	mov	rbx, qword ptr [rip + 0x20956d]
0x4b5b:	lea	rsi, [rip + 0x558e]
0x4b62:	mov	edx, 5
0x4b67:	xor	edi, edi
0x4b69:	call	0x1a80


0x4b6e:	mov	rsi, rbx
0x4b71:	mov	rdi, rax
0x4b74:	call	0x1b80


0x4b79:	mov	rbx, qword ptr [rip + 0x209548]
0x4b80:	lea	rsi, [rip + 0x56b1]
0x4b87:	mov	edx, 5
0x4b8c:	xor	edi, edi
0x4b8e:	call	0x1a80


0x4b93:	mov	rsi, rbx
0x4b96:	mov	rdi, rax
0x4b99:	call	0x1b80


0x4b9e:	mov	rbx, qword ptr [rip + 0x209523]
0x4ba5:	lea	rsi, [rip + 0x572c]
0x4bac:	mov	edx, 5
0x4bb1:	xor	edi, edi
0x4bb3:	call	0x1a80


0x4bb8:	mov	rsi, rbx
0x4bbb:	mov	rdi, rax
0x4bbe:	call	0x1b80


0x4bc3:	mov	rbx, qword ptr [rip + 0x2094fe]
0x4bca:	lea	rsi, [rip + 0x5787]
0x4bd1:	mov	edx, 5
0x4bd6:	xor	edi, edi
0x4bd8:	call	0x1a80


0x4bdd:	mov	rsi, rbx
0x4be0:	mov	rdi, rax
0x4be3:	call	0x1b80


0x4be8:	mov	rbx, qword ptr [rip + 0x2094d9]
0x4bef:	lea	rsi, [rip + 0x57b2]
0x4bf6:	mov	edx, 5
0x4bfb:	xor	edi, edi
0x4bfd:	call	0x1a80


0x4c02:	mov	rsi, rbx
0x4c05:	mov	rdi, rax
0x4c08:	call	0x1b80


0x4c0d:	mov	rbx, qword ptr [rip + 0x2094b4]
0x4c14:	lea	rsi, [rip + 0x57d5]
0x4c1b:	mov	edx, 5
0x4c20:	xor	edi, edi
0x4c22:	call	0x1a80


0x4c27:	mov	rsi, rbx
0x4c2a:	mov	rdi, rax
0x4c2d:	call	0x1b80


0x4c32:	mov	rbx, qword ptr [rip + 0x20948f]
0x4c39:	lea	rsi, [rip + 0x57f0]
0x4c40:	mov	edx, 5
0x4c45:	xor	edi, edi
0x4c47:	call	0x1a80


0x4c4c:	mov	rsi, rbx
0x4c4f:	mov	rdi, rax
0x4c52:	call	0x1b80


0x4c57:	mov	rbx, qword ptr [rip + 0x20946a]
0x4c5e:	lea	rsi, [rip + 0x57fb]
0x4c65:	mov	edx, 5
0x4c6a:	xor	edi, edi
0x4c6c:	call	0x1a80


0x4c71:	mov	rsi, rbx
0x4c74:	mov	rdi, rax
0x4c77:	call	0x1b80


0x4c7c:	mov	rbx, qword ptr [rip + 0x209445]
0x4c83:	lea	rsi, [rip + 0x4937]
0x4c8a:	mov	edx, 5
0x4c8f:	xor	edi, edi
0x4c91:	call	0x1a80


0x4c96:	mov	rsi, rbx
0x4c99:	mov	rdi, rax
0x4c9c:	call	0x1b80


0x4ca1:	mov	rbx, qword ptr [rip + 0x209420]
0x4ca8:	lea	rsi, [rip + 0x57e9]
0x4caf:	xor	edi, edi
0x4cb1:	mov	edx, 5
0x4cb6:	call	0x1a80


0x4cbb:	mov	rsi, rbx
0x4cbe:	mov	rdi, rax
0x4cc1:	call	0x1b80


0x4cc6:	mov	rbx, qword ptr [rip + 0x2093fb]
0x4ccd:	lea	rsi, [rip + 0x580c]
0x4cd4:	mov	edx, 5
0x4cd9:	xor	edi, edi
0x4cdb:	call	0x1a80


0x4ce0:	mov	rsi, rbx
0x4ce3:	mov	rdi, rax
0x4ce6:	call	0x1b80


0x4ceb:	mov	rbx, qword ptr [rip + 0x2093d6]
0x4cf2:	lea	rsi, [rip + 0x588f]
0x4cf9:	mov	edx, 5
0x4cfe:	xor	edi, edi
0x4d00:	call	0x1a80


0x4d05:	mov	rsi, rbx
0x4d08:	mov	rdi, rax
0x4d0b:	call	0x1b80


0x4d10:	mov	rbx, qword ptr [rip + 0x2093b1]
0x4d17:	lea	rsi, [rip + 0x58ea]
0x4d1e:	mov	edx, 5
0x4d23:	xor	edi, edi
0x4d25:	call	0x1a80


0x4d2a:	mov	rsi, rbx
0x4d2d:	mov	rdi, rax
0x4d30:	call	0x1b80


0x4d35:	mov	rbx, qword ptr [rip + 0x20938c]
0x4d3c:	lea	rsi, [rip + 0x5945]
0x4d43:	mov	edx, 5
0x4d48:	xor	edi, edi
0x4d4a:	call	0x1a80


0x4d4f:	mov	rsi, rbx
0x4d52:	mov	rdi, rax
0x4d55:	call	0x1b80


0x4d5a:	mov	rbx, qword ptr [rip + 0x209367]
0x4d61:	lea	rsi, [rip + 0x59a0]
0x4d68:	mov	edx, 5
0x4d6d:	xor	edi, edi
0x4d6f:	call	0x1a80


0x4d74:	mov	rsi, rbx
0x4d77:	mov	rdi, rax
0x4d7a:	call	0x1b80


0x4d7f:	mov	rbx, qword ptr [rip + 0x209342]
0x4d86:	lea	rsi, [rip + 0x5a93]
0x4d8d:	mov	edx, 5
0x4d92:	xor	edi, edi
0x4d94:	call	0x1a80


0x4d99:	mov	rsi, rbx
0x4d9c:	mov	rdi, rax
0x4d9f:	call	0x1b80


0x4da4:	mov	rbx, qword ptr [rip + 0x209405]
0x4dab:	lea	rsi, [rip + 0x5be6]
0x4db2:	mov	edx, 5
0x4db7:	xor	edi, edi
0x4db9:	call	0x1a80


0x4dbe:	mov	rdx, rbx
0x4dc1:	mov	rsi, rax
0x4dc4:	mov	edi, 1
0x4dc9:	xor	eax, eax
0x4dcb:	call	0x1c50


0x4dd0:	mov	rbx, qword ptr [rip + 0x2093d9]
0x4dd7:	lea	rsi, [rip + 0x5d5a]
0x4dde:	mov	edx, 5
0x4de3:	xor	edi, edi
0x4de5:	call	0x1a80


0x4dea:	sub	rsp, 8
0x4dee:	mov	rcx, rbx
0x4df1:	mov	rdx, rbx
0x4df4:	push	rbx
0x4df5:	push	rbx
0x4df6:	mov	r9, rbx
0x4df9:	push	rbx
0x4dfa:	push	rbx
0x4dfb:	mov	r8, rbx
0x4dfe:	push	rbx
0x4dff:	mov	rsi, rax
0x4e02:	mov	edi, 1
0x4e07:	xor	eax, eax
0x4e09:	lea	rbx, [rip + 0x47aa]
0x4e10:	call	0x1c50


0x4e15:	lea	rax, [rip + 0x47b5]
0x4e1c:	lea	rcx, [rip + 0x47ef]
0x4e23:	mov	qword ptr [rsp + 0x90], 0
0x4e2f:	mov	qword ptr [rsp + 0x98], 0
0x4e3b:	mov	qword ptr [rsp + 0x30], rax
0x4e40:	lea	rax, [rip + 0x478c]
0x4e47:	mov	qword ptr [rsp + 0x60], rcx
0x4e4c:	lea	rcx, [rip + 0x47c9]
0x4e53:	mov	qword ptr [rsp + 0x38], rax
0x4e58:	lea	rax, [rip + 0x47ec]
0x4e5f:	mov	qword ptr [rsp + 0x70], rcx
0x4e64:	lea	rcx, [rip + 0x47bb]
0x4e6b:	mov	qword ptr [rsp + 0x40], rax
0x4e70:	lea	rax, [rip + 0x476c]
0x4e77:	mov	qword ptr [rsp + 0x80], rcx
0x4e7f:	mov	qword ptr [rsp + 0x48], rax
0x4e84:	lea	rax, [rip + 0x476e]
0x4e8b:	mov	qword ptr [rsp + 0x50], rax
0x4e90:	lea	rax, [rip + 0x476c]
0x4e97:	mov	qword ptr [rsp + 0x58], rax
0x4e9c:	mov	qword ptr [rsp + 0x68], rax
0x4ea1:	mov	qword ptr [rsp + 0x78], rax
0x4ea6:	mov	qword ptr [rsp + 0x88], rax
0x4eae:	add	rsp, 0x30
0x4eb2:	mov	rdx, rsp
0x4eb5:	nop	dword ptr [rax]
0x4eb8:	add	rdx, 0x10
0x4ebc:	mov	rdi, qword ptr [rdx]
0x4ebf:	test	rdi, rdi
0x4ec2:	je	0x4ed7


0x4ed7:	mov	r12, qword ptr [rdx + 8]
0x4edb:	xor	edi, edi
0x4edd:	mov	edx, 5
0x4ee2:	lea	rsi, [rip + 0x4747]
0x4ee9:	test	r12, r12
0x4eec:	je	0x4fb3


0x4ec4:	mov	ecx, 7
0x4ec9:	mov	rsi, rbx
0x4ecc:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4fb3:	call	0x1a80


0x4ef2:	call	0x1a80


0x4ecc:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4ece:	seta	al
0x4ed1:	sbb	al, 0
0x4ed3:	test	al, al
0x4ed5:	jne	0x4eb8


0x4eb8:	add	rdx, 0x10
0x4ebc:	mov	rdi, qword ptr [rdx]
0x4ebf:	test	rdi, rdi
0x4ec2:	je	0x4ed7


0x4ef7:	lea	rcx, [rip + 0x5dfa]
0x4efe:	lea	rdx, [rip + 0x4742]
0x4f05:	mov	rsi, rax
0x4f08:	mov	edi, 1
0x4f0d:	xor	eax, eax
0x4f0f:	call	0x1c50


0x4f14:	xor	esi, esi
0x4f16:	mov	edi, 5
0x4f1b:	call	0x1c40


0x4f20:	test	rax, rax
0x4f23:	je	0x4f41


0x4f41:	lea	rsi, [rip + 0x4711]
0x4f48:	xor	edi, edi
0x4f4a:	mov	edx, 5
0x4f4f:	call	0x1a80


0x4f25:	lea	rsi, [rip + 0x4729]
0x4f2c:	mov	edx, 3
0x4f31:	mov	rdi, rax
0x4f34:	call	0x19e0


0x4f39:	test	eax, eax
0x4f3b:	jne	0x5048


0x5048:	mov	r13, qword ptr [rip + 0x209079]
0x504f:	lea	rsi, [rip + 0x5cca]
0x5056:	xor	edi, edi
0x5058:	mov	edx, 5
0x505d:	call	0x1a80


0x5062:	mov	rsi, r13
0x5065:	mov	rdi, rax
0x5068:	call	0x1b80


0x506d:	jmp	0x4f41


0x4f54:	lea	rcx, [rip + 0x465f]
0x4f5b:	lea	rdx, [rip + 0x5d96]
0x4f62:	mov	rsi, rax
0x4f65:	mov	edi, 1
0x4f6a:	xor	eax, eax
0x4f6c:	call	0x1c50


0x4f71:	cmp	r12, rbx
0x4f74:	lea	rcx, [rip + 0x4672]
0x4f7b:	lea	rbx, [rip + 0x45f4]
0x4f82:	cmove	rbx, rcx
0x4f86:	lea	rsi, [rip + 0x5ddb]
0x4f8d:	xor	edi, edi
0x4f8f:	mov	edx, 5
0x4f94:	call	0x1a80


0x4f99:	mov	rcx, rbx
0x4f9c:	mov	rsi, rax
0x4f9f:	mov	rdx, r12
0x4fa2:	mov	edi, 1
0x4fa7:	xor	eax, eax
0x4fa9:	call	0x1c50


0x4fae:	jmp	0x4996


0x4fb8:	lea	rcx, [rip + 0x5d39]
0x4fbf:	lea	rdx, [rip + 0x4681]
0x4fc6:	mov	rsi, rax
0x4fc9:	mov	edi, 1
0x4fce:	xor	eax, eax
0x4fd0:	call	0x1c50


0x4fd5:	xor	esi, esi
0x4fd7:	mov	edi, 5
0x4fdc:	call	0x1c40


0x4fe1:	test	rax, rax
0x4fe4:	je	0x4ffe


0x4ffe:	lea	rsi, [rip + 0x4654]
0x5005:	mov	edx, 5
0x500a:	xor	edi, edi
0x500c:	lea	r12, [rip + 0x45a7]
0x5013:	lea	rbx, [rip + 0x45d3]
0x501a:	call	0x1a80


0x4fe6:	lea	rsi, [rip + 0x4668]
0x4fed:	mov	edx, 3
0x4ff2:	mov	rdi, rax
0x4ff5:	call	0x19e0


0x4ffa:	test	eax, eax
0x4ffc:	jne	0x5041


0x5041:	lea	r12, [rip + 0x4572]
0x5048:	mov	r13, qword ptr [rip + 0x209079]
0x504f:	lea	rsi, [rip + 0x5cca]
0x5056:	xor	edi, edi
0x5058:	mov	edx, 5
0x505d:	call	0x1a80


0x501f:	lea	rcx, [rip + 0x4594]
0x5026:	lea	rdx, [rip + 0x5ccb]
0x502d:	mov	rsi, rax
0x5030:	mov	edi, 1
0x5035:	xor	eax, eax
0x5037:	call	0x1c50


0x503c:	jmp	0x4f86


0x4f86:	lea	rsi, [rip + 0x5ddb]
0x4f8d:	xor	edi, edi
0x4f8f:	mov	edx, 5
0x4f94:	call	0x1a80


0x8610:	call	0x19c0


0x4273:	pop	rax
0x4274:	pop	rdx
0x4275:	jmp	0x32a0


0x3850:	pop	rcx
0x3851:	pop	rsi
0x3852:	jmp	0x32a0


0x3541:	pop	r15
0x3543:	pop	rax
0x3544:	jmp	0x32a0


0x55be:	mov	edi, 1
0x55c3:	call	0x4940


0x4076:	nop	word ptr cs:[rax + rax]
0x4080:	fxch	st(1)
0x4082:	lea	rax, [rip + 0x5422]
0x4089:	jmp	0x3f63


0x5d8b:	cmp	rax, -1
0x5d8f:	jne	0x5dc0


0x5d91:	test	bl, 1
0x5d94:	jne	0x5c0a


0x5dc0:	lea	rbp, [rax + 1]
0x5dc4:	lea	rax, [rbp*4]
0x5dcc:	mov	rdi, rax
0x5dcf:	mov	qword ptr [rsp + 0x20], rax
0x5dd4:	call	0x1bf0


0x5d9a:	mov	qword ptr [rsp], 0
0x5da2:	mov	qword ptr [rsp + 8], 0
0x5dab:	mov	r12, -1
0x5db2:	jmp	0x5d01


0x5dd9:	test	rax, rax
0x5ddc:	mov	qword ptr [rsp], rax
0x5de0:	je	0x5f65


0x5f65:	test	bl, 1
0x5f68:	mov	rbp, r15
0x5f6b:	mov	qword ptr [rsp + 8], 0
0x5f74:	jne	0x5c1e


0x5de6:	mov	rdi, qword ptr [rsp]
0x5dea:	mov	rdx, rbp
0x5ded:	mov	rsi, r14
0x5df0:	call	0x1a40


0x5f7a:	jmp	0x5d9a


0x5c1e:	mov	rax, qword ptr [r12]
0x5c22:	cmp	rax, rbp
0x5c25:	jae	0x5d39


0x5df5:	test	rax, rax
0x5df8:	je	0x5f04


0x5f04:	mov	rbp, r15
0x5f07:	mov	qword ptr [rsp + 8], 0
0x5f10:	jmp	0x5c1e


0x5dfe:	mov	rax, qword ptr [rsp]
0x5e02:	mov	rcx, qword ptr [rsp + 0x20]
0x5e07:	mov	dword ptr [rax + rcx - 4], 0
0x5e0f:	mov	edi, dword ptr [rax]
0x5e11:	mov	rdx, rax
0x5e14:	test	edi, edi
0x5e16:	je	0x5f15


0x5f15:	mov	rdi, qword ptr [rsp]
0x5f19:	mov	rsi, rbp
0x5f1c:	call	0x1a30


0x5e1c:	mov	byte ptr [rsp + 0x20], 0
0x5e21:	nop	dword ptr [rax]
0x5e28:	mov	qword ptr [rsp + 0x28], rdx
0x5e2d:	call	0x1d10


0x1a30:	jmp	qword ptr [rip + 0x20c412]


0x1d10:	jmp	qword ptr [rip + 0x20c2a2]






0x5ccc:	cmp	rbx, rax
0x5ccf:	lea	rdx, [rbp - 1]
0x5cd3:	jbe	0x5cfe


0x5cfe:	mov	byte ptr [rax], 0
0x5d01:	mov	rdi, qword ptr [rsp]
0x5d05:	call	0x19b0


0x5cd5:	test	rbp, rbp
0x5cd8:	je	0x5cfe


0x5ce0:	add	rax, 1
0x5ce4:	test	rdx, rdx
0x5ce7:	mov	byte ptr [rax - 1], 0x20
0x5ceb:	setne	sil
0x5cef:	cmp	rbx, rax
0x5cf2:	seta	cl
0x5cf5:	sub	rdx, 1
0x5cf9:	test	sil, cl
0x5cfc:	jne	0x5ce0


0x2ea7:	cmp	byte ptr [r12], 0x69
0x2eac:	mov	r9, rax
0x2eaf:	jne	0x2eb7


0x2eb1:	cmp	rbp, 1
0x2eb5:	jne	0x2ee0


0x2eb7:	lea	rax, [r12 + 2]
0x2ebc:	lea	r8, [rip + 0x65ea]
0x2ec3:	mov	qword ptr [rsp + 8], rax
0x2ec8:	mov	eax, 0x42
0x2ecd:	mov	word ptr [r12 + 1], ax
0x2ed3:	mov	r12, r9
0x2ed6:	jmp	0x2e1e


0x2ee0:	movzx	eax, byte ptr [r12 - 1]
0x2ee6:	sub	eax, 0x30
0x2ee9:	cmp	al, 9
0x2eeb:	jbe	0x2eb7


0x2e1e:	lea	rcx, [rsp + 0x10]
0x2e23:	lea	rsi, [rsp + 8]
0x2e28:	mov	edx, 0xa
0x2e2d:	mov	rdi, r9
0x2e30:	call	0x8d00


0x2eed:	mov	byte ptr [r12], 0
0x2ef2:	lea	r8, [rip + 0x65ab]
0x2ef9:	mov	r12, r9
0x2efc:	jmp	0x2e1e


0x304b:	test	eax, eax
0x304d:	movzx	edx, byte ptr [rip + 0x20b0bc]
0x3054:	jne	0x3730


0x305a:	test	dl, dl
0x305c:	mov	byte ptr [rbx], 0
0x305f:	jne	0x3874


0x3730:	test	dl, dl
0x3732:	je	0x3068


0x3874:	mov	rdi, rbp
0x3877:	call	0x7d50


0x3738:	mov	rcx, qword ptr [rip + 0x20a9c1]
0x373f:	lea	rdi, [rip + 0x5de0]
0x3746:	mov	edx, 0x16
0x374b:	mov	esi, 1
0x3750:	call	0x1cd0


0x3755:	jmp	0x3068


0x75ed:	mov	dword ptr [rbp], r12d
0x75f1:	pop	rbx
0x75f2:	pop	rbp
0x75f3:	pop	r12
0x75f5:	ret	


0x74ae:	mov	dword ptr [rip + 0x206be3], r12d
0x74b5:	mov	eax, dword ptr [rbp + 4]
0x74b8:	shl	r15, 4
0x74bc:	sub	rsp, 8
0x74c0:	add	rbx, r15
0x74c3:	lea	r15, [rbp + 8]
0x74c7:	mov	r8d, dword ptr [rbp]
0x74cb:	mov	r11, qword ptr [rbx]
0x74ce:	mov	r12, qword ptr [rbx + 8]
0x74d2:	mov	rcx, r14
0x74d5:	or	eax, 1
0x74d8:	mov	dword ptr [rsp + 0x24], eax
0x74dc:	push	qword ptr [rbp + 0x30]
0x74df:	mov	r9d, eax
0x74e2:	push	qword ptr [rbp + 0x28]
0x74e5:	push	r15
0x74e7:	mov	rsi, r11
0x74ea:	mov	rdx, qword ptr [rsp + 0x28]
0x74ef:	mov	rdi, r12
0x74f2:	mov	qword ptr [rsp + 0x30], r11
0x74f7:	call	0x61d0


0x8d93:	mov	rcx, qword ptr [r15]
0x8d96:	mov	rbx, rax
0x8d99:	cmp	rcx, rbp
0x8d9c:	je	0x8dc8


0x8dc8:	test	r13, r13
0x8dcb:	mov	qword ptr [rsp + 8], rcx
0x8dd0:	jne	0x8e10


0x8d9e:	mov	eax, dword ptr [r12]
0x8da2:	test	eax, eax
0x8da4:	je	0x8e08


0x8e10:	movzx	r12d, byte ptr [rbp]
0x8e15:	test	r12b, r12b
0x8e18:	je	0x8dd8


0x8e08:	xor	ebp, ebp
0x8e0a:	jmp	0x8db0


0x8da6:	cmp	eax, 0x22
0x8da9:	mov	ebp, 1
0x8dae:	jne	0x8dd8


0x8e1a:	movsx	esi, r12b
0x8e1e:	mov	rdi, r13
0x8e21:	xor	ebp, ebp
0x8e23:	call	0x1ae0


0x8db0:	test	r13, r13
0x8db3:	je	0x8dbe


0x8dbe:	mov	qword ptr [r14], rbx
0x8dc1:	jmp	0x8ddd


0x8db5:	movzx	r12d, byte ptr [rcx]
0x8db9:	test	r12b, r12b
0x8dbc:	jne	0x8e37


0x8ddd:	mov	rdi, qword ptr [rsp + 0x18]
0x8de2:	xor	rdi, qword ptr fs:[0x28]
0x8deb:	mov	eax, ebp
0x8ded:	jne	0x9080


0x8e37:	movsx	esi, r12b
0x8e3b:	mov	rdi, r13
0x8e3e:	mov	qword ptr [rsp + 8], rcx
0x8e43:	call	0x1ae0


0x869c:	mov	rcx, qword ptr [rbx]
0x869f:	mov	rbp, rax
0x86a2:	cmp	rcx, r12
0x86a5:	je	0x8708


0x8708:	test	r15, r15
0x870b:	je	0x8ba0


0x86a7:	mov	eax, dword ptr [r13]
0x86ab:	test	eax, eax
0x86ad:	jne	0x86f0


0x8ba0:	mov	r12d, 4
0x8ba6:	jmp	0x86c7


0x8711:	movzx	r13d, byte ptr [rcx]
0x8715:	mov	qword ptr [rsp + 8], rcx
0x871a:	mov	r12d, 4
0x8720:	test	r13b, r13b
0x8723:	je	0x86c7


0x86af:	xor	r12d, r12d
0x86b2:	test	r15, r15
0x86b5:	je	0x86c4


0x86f0:	cmp	eax, 0x22
0x86f3:	mov	r12d, 4
0x86f9:	jne	0x86c7


0x86c7:	mov	rdi, qword ptr [rsp + 0x18]
0x86cc:	xor	rdi, qword ptr fs:[0x28]
0x86d5:	mov	eax, r12d
0x86d8:	jne	0x8cee


0x8725:	movsx	esi, r13b
0x8729:	mov	rdi, r15
0x872c:	call	0x1ae0


0x86c4:	mov	qword ptr [r14], rbp
0x86c7:	mov	rdi, qword ptr [rsp + 0x18]
0x86cc:	xor	rdi, qword ptr fs:[0x28]
0x86d5:	mov	eax, r12d
0x86d8:	jne	0x8cee


0x86b7:	movzx	r13d, byte ptr [rcx]
0x86bb:	test	r13b, r13b
0x86be:	jne	0x8743


0x86fb:	mov	r12d, 1
0x8701:	jmp	0x86b2


0x86de:	add	rsp, 0x28
0x86e2:	pop	rbx
0x86e3:	pop	rbp
0x86e4:	pop	r12
0x86e6:	pop	r13
0x86e8:	pop	r14
0x86ea:	pop	r15
0x86ec:	ret	


0x8cee:	call	0x1ab0


0x8743:	movsx	esi, r13b
0x8747:	mov	rdi, r15
0x874a:	mov	qword ptr [rsp + 8], rcx
0x874f:	call	0x1ae0


0x86b2:	test	r15, r15
0x86b5:	je	0x86c4


0x9387:	mov	rdi, rbx
0x938a:	pop	rbx
0x938b:	jmp	0x1c00


0x4931:	jmp	0x4819


0x4921:	mov	eax, dword ptr [rip + 0x2096ed]
0x4927:	jmp	0x48e1


0x48e1:	lea	rdi, [rbx + 1]
0x48e5:	jmp	0x4798


0x5623:	mov	rdi, rbx
0x5626:	mov	rsi, rax
0x5629:	call	0x8620


0x562e:	mov	rdi, rax
0x5631:	mov	rbx, rax
0x5634:	call	0x7d50


0x8754:	test	rax, rax
0x8757:	mov	rcx, qword ptr [rsp + 8]
0x875c:	je	0x87b8


0x87b8:	mov	qword ptr [r14], rbp
0x87bb:	or	r12d, 2
0x87bf:	jmp	0x86c7


0x875e:	lea	eax, [r13 - 0x45]
0x8762:	cmp	al, 0x2f
0x8764:	ja	0x87c8


0x8766:	movabs	rdx, 0x814400308945
0x8770:	bt	rdx, rax
0x8774:	jae	0x87c8


0x87c8:	mov	edi, 1
0x87cd:	mov	eax, 0x400
0x87d2:	sub	r13d, 0x42
0x87d6:	cmp	r13b, 0x35
0x87da:	ja	0x87b8


0x8776:	mov	esi, 0x30
0x877b:	mov	rdi, r15
0x877e:	mov	qword ptr [rsp + 8], rcx
0x8783:	call	0x1ae0


0x87dc:	lea	rsi, [rip + 0x3505]
0x87e3:	movzx	r13d, r13b
0x87e7:	movsxd	rdx, dword ptr [rsi + r13*4]
0x87eb:	add	rdx, rsi
0x87ee:	jmp	rdx


0x8788:	test	rax, rax
0x878b:	mov	rcx, qword ptr [rsp + 8]
0x8790:	je	0x87c8


0x8792:	movzx	eax, byte ptr [rcx + 1]
0x8796:	cmp	al, 0x44
0x8798:	je	0x87a6


0x87a6:	mov	edi, 2
0x87ab:	mov	eax, 0x3e8
0x87b0:	jmp	0x87d2


0x879a:	cmp	al, 0x69
0x879c:	je	0x8c88


0x87d2:	sub	r13d, 0x42
0x87d6:	cmp	r13b, 0x35
0x87da:	ja	0x87b8


0x8c88:	xor	edi, edi
0x8c8a:	cmp	byte ptr [rcx + 2], 0x42
0x8c8e:	mov	eax, 0x400
0x8c93:	sete	dil
0x8c97:	lea	edi, [rdi + rdi + 1]
0x8c9b:	jmp	0x87d2


0x87a2:	cmp	al, 0x42
0x87a4:	jne	0x87c8


0x8731:	test	rax, rax
0x8734:	mov	rcx, qword ptr [rsp + 8]
0x8739:	je	0x86c7


0x873b:	mov	ebp, 1
0x8740:	xor	r12d, r12d
0x8743:	movsx	esi, r13b
0x8747:	mov	rdi, r15
0x874a:	mov	qword ptr [rsp + 8], rcx
0x874f:	call	0x1ae0


0x8e48:	test	rax, rax
0x8e4b:	mov	rcx, qword ptr [rsp + 8]
0x8e50:	je	0x8f1c


0x8f1c:	mov	qword ptr [r14], rbx
0x8f1f:	or	ebp, 2
0x8f22:	jmp	0x8ddd


0x8e56:	lea	eax, [r12 - 0x45]
0x8e5b:	cmp	al, 0x2f
0x8e5d:	ja	0x8eb0


0x8e5f:	movabs	rdx, 0x814400308945
0x8e69:	bt	rdx, rax
0x8e6d:	jae	0x8eb0


0x8eb0:	mov	edi, 1
0x8eb5:	mov	esi, 0x400
0x8eba:	sub	r12d, 0x42
0x8ebe:	cmp	r12b, 0x35
0x8ec2:	ja	0x8f1c


0x8e6f:	mov	esi, 0x30
0x8e74:	mov	rdi, r13
0x8e77:	mov	qword ptr [rsp + 8], rcx
0x8e7c:	call	0x1ae0


0x8ec4:	lea	rdx, [rip + 0x2efd]
0x8ecb:	movzx	r12d, r12b
0x8ecf:	movsxd	rax, dword ptr [rdx + r12*4]
0x8ed3:	add	rax, rdx
0x8ed6:	jmp	rax


0x8e81:	test	rax, rax
0x8e84:	mov	rcx, qword ptr [rsp + 8]
0x8e89:	je	0x8eb0


0x8e8b:	movzx	eax, byte ptr [rcx + 1]
0x8e8f:	cmp	al, 0x44
0x8e91:	je	0x8e9f


0x8e9f:	mov	edi, 2
0x8ea4:	mov	esi, 0x3e8
0x8ea9:	jmp	0x8eba


0x8e93:	cmp	al, 0x69
0x8e95:	je	0x9068


0x8eba:	sub	r12d, 0x42
0x8ebe:	cmp	r12b, 0x35
0x8ec2:	ja	0x8f1c


0x9068:	xor	edi, edi
0x906a:	cmp	byte ptr [rcx + 2], 0x42
0x906e:	mov	esi, 0x400
0x9073:	sete	dil
0x9077:	lea	edi, [rdi + rdi + 1]
0x907b:	jmp	0x8eba


0x8e9b:	cmp	al, 0x42
0x8e9d:	jne	0x8eb0


0x8e28:	test	rax, rax
0x8e2b:	mov	ebx, 1
0x8e30:	mov	rcx, qword ptr [rsp + 8]
0x8e35:	je	0x8dd8


0x33e2:	test	rax, rax
0x33e5:	je	0x4232


0x4232:	mov	ebx, 5
0x4237:	lea	r13, [rip + 0x52a2]
0x423e:	jmp	0x3210


0x33eb:	test	r13d, r13d
0x33ee:	je	0x3ce1


0x3ce1:	mov	ebx, 4
0x3ce6:	lea	r13, [rip + 0x5b7b]
0x3ced:	jmp	0x3210


0x33f4:	movzx	ecx, byte ptr [rsp + 0x10]
0x33f9:	xor	r8d, r8d
0x33fc:	mov	r9, qword ptr [rsp + 0x20]
0x3401:	sub	ecx, 0x45
0x3404:	cmp	cl, 0x15
0x3407:	jbe	0x3861


0x3861:	lea	rax, [rip + 0x7898]
0x3868:	movzx	ecx, cl
0x386b:	mov	r8d, dword ptr [rax + rcx*4]
0x386f:	jmp	0x340d


0x340d:	lea	rax, [r9 + 1]
0x3411:	cmp	r13d, 1
0x3415:	mov	qword ptr [rsp + 0x60], rax
0x341a:	je	0x390e


0x390e:	cmp	byte ptr [r9 + 1], 0x69
0x3913:	movzx	edx, byte ptr [rip + 0x20a7f6]
0x391a:	je	0x4518


0x3420:	cmp	r13d, 4
0x3424:	jne	0x343a


0x4518:	lea	rax, [r9 + 2]
0x451c:	test	dl, dl
0x451e:	mov	qword ptr [rsp + 0x60], rax
0x4523:	jne	0x4583


0x3920:	mov	dword ptr [rsp + 0x10], r15d
0x3925:	fild	dword ptr [rsp + 0x10]
0x3929:	jmp	0x344a


0x3426:	cmp	byte ptr [r9 + 1], 0x69
0x342b:	jne	0x46d4


0x343a:	mov	dword ptr [rsp + 0x10], r15d
0x343f:	movzx	edx, byte ptr [rip + 0x20acca]
0x3446:	fild	dword ptr [rsp + 0x10]
0x344a:	test	r8d, r8d
0x344d:	je	0x4661


0x4525:	fld	dword ptr [rip + 0x6c8d]
0x452b:	mov	r15d, 0x400
0x4531:	jmp	0x344a


0x4583:	mov	rdi, qword ptr [rip + 0x209b76]
0x458a:	lea	rdx, [rip + 0x545f]
0x4591:	mov	ecx, 0x400
0x4596:	mov	esi, 1
0x459b:	xor	eax, eax
0x459d:	mov	dword ptr [rsp + 0x10], r8d
0x45a2:	mov	r15d, 0x400
0x45a8:	call	0x1ce0


0x344a:	test	r8d, r8d
0x344d:	je	0x4661


0x3431:	lea	rax, [r9 + 2]
0x3435:	mov	qword ptr [rsp + 0x60], rax
0x343a:	mov	dword ptr [rsp + 0x10], r15d
0x343f:	movzx	edx, byte ptr [rip + 0x20acca]
0x3446:	fild	dword ptr [rsp + 0x10]
0x344a:	test	r8d, r8d
0x344d:	je	0x4661


0x46d4:	xor	r14d, r14d
0x46d7:	mov	ebx, 6
0x46dc:	lea	r13, [rip + 0x51bd]
0x46e3:	jmp	0x3210


0x4661:	fstp	st(0)
0x4663:	xor	r14d, r14d
0x4666:	fld1	
0x4668:	jmp	0x3656


0x3453:	mov	eax, r8d
0x3456:	sub	eax, 1
0x3459:	fld	st(0)
0x345b:	je	0x346b


0x3656:	test	dl, dl
0x3658:	jne	0x3c50


0x346b:	fstp	st(1)
0x346d:	nop	dword ptr [rax]
0x3470:	xor	r14d, r14d
0x3473:	jmp	0x3656


0x3467:	fstp	st(1)
0x3469:	jmp	0x3470


0x3460:	sub	eax, 1
0x3463:	fmul	st(1)
0x3465:	jne	0x3460


0x3470:	xor	r14d, r14d
0x3473:	jmp	0x3656


0x45ad:	movzx	edx, byte ptr [rip + 0x209b5c]
0x45b4:	fld	dword ptr [rip + 0x6bfe]
0x45ba:	mov	r8d, dword ptr [rsp + 0x10]
0x45bf:	jmp	0x344a


0x3a97:	fld	xword ptr [rsp]
0x3a9a:	test	bl, bl
0x3a9c:	je	0x3ad5


0x456d:	fld	xword ptr [rsp]
0x4570:	jmp	0x3fc5


0x5362:	mov	rax, qword ptr [rip + 0x208f97]
0x5369:	mov	rcx, qword ptr [rip + 0x208f88]
0x5370:	lea	rbx, [rax - 1]
0x5374:	cmp	rbx, r15
0x5377:	mov	qword ptr [rip + 0x208f82], rbx
0x537e:	ja	0x5330


0x5330:	lea	rdi, [rcx + r13]
0x5334:	lea	rdx, [rcx + rbp]
0x5338:	mov	rax, qword ptr [rdx + 8]
0x533c:	cmp	qword ptr [rdi], rax
0x533f:	ja	0x5380


0x5e32:	test	eax, eax
0x5e34:	mov	rdx, qword ptr [rsp + 0x28]
0x5e39:	jne	0x5e46


0x5e3b:	mov	dword ptr [rdx], 0xfffd
0x5e41:	mov	byte ptr [rsp + 0x20], 1
0x5e46:	add	rdx, 4
0x5e4a:	mov	edi, dword ptr [rdx]
0x5e4c:	test	edi, edi
0x5e4e:	jne	0x5e28


0x5e46:	add	rdx, 4
0x5e4a:	mov	edi, dword ptr [rdx]
0x5e4c:	test	edi, edi
0x5e4e:	jne	0x5e28


0x5e50:	mov	rdi, qword ptr [rsp]
0x5e54:	mov	rsi, rbp
0x5e57:	call	0x1a30


0x5e28:	mov	qword ptr [rsp + 0x28], rdx
0x5e2d:	call	0x1d10


0x5e5c:	cmp	byte ptr [rsp + 0x20], 0
0x5e61:	movsxd	rbp, eax
0x5e64:	je	0x5f28


0x5f28:	mov	rax, qword ptr [r12]
0x5f2c:	cmp	rax, rbp
0x5f2f:	jae	0x5d30


0x5e6a:	mov	rsi, qword ptr [rsp]
0x5e6e:	xor	edx, edx
0x5e70:	xor	edi, edi
0x5e72:	call	0x1cb0


0x5f35:	mov	rax, qword ptr [rsp + 8]
0x5f3a:	add	rax, 1
0x5f3e:	mov	qword ptr [rsp + 0x20], rax
0x5f43:	jmp	0x5e80


0x5d30:	mov	qword ptr [rsp + 8], 0
0x5d39:	cmp	rbp, rax
0x5d3c:	jae	0x5f8a


0x1cb0:	jmp	qword ptr [rip + 0x20c2d2]


0x5e80:	mov	rdi, qword ptr [rsp + 0x20]
0x5e85:	call	0x1bf0




0x5e8a:	test	rax, rax
0x5e8d:	mov	qword ptr [rsp + 8], rax
0x5e92:	je	0x5f50


0x5f50:	test	bl, 1
0x5f53:	jne	0x5c1e


0x5e98:	mov	r15, qword ptr [rsp]
0x5e9c:	mov	r14, qword ptr [r12]
0x5ea0:	mov	edi, dword ptr [r15]
0x5ea3:	test	edi, edi
0x5ea5:	je	0x5f7f


0x5f59:	mov	r12, -1
0x5f60:	jmp	0x5d01


0x5f7f:	mov	r15, qword ptr [rsp]
0x5f83:	xor	ebp, ebp
0x5f85:	jmp	0x5edf


0x5eab:	xor	ebp, ebp
0x5ead:	jmp	0x5ebe


0x5edf:	mov	r14, qword ptr [rsp + 8]
0x5ee4:	mov	rdx, qword ptr [rsp + 0x20]
0x5ee9:	mov	rsi, qword ptr [rsp]
0x5eed:	mov	dword ptr [r15], 0
0x5ef4:	mov	rdi, r14
0x5ef7:	call	0x1cb0


0x5ebe:	call	0x1be0


0x1be0:	jmp	qword ptr [rip + 0x20c33a]




0x5f21:	movsxd	rbp, eax
0x5f24:	nop	dword ptr [rax]
0x5f28:	mov	rax, qword ptr [r12]
0x5f2c:	cmp	rax, rbp
0x5f2f:	jae	0x5d30


0x1dae:	mov	edi, 0x10000
0x1db3:	call	0x1c10


0x1db8:	test	rax, rax
0x1dbb:	mov	qword ptr [rip + 0x20c356], rax
0x1dc2:	je	0x1e89


0x1e89:	lea	rax, [rip + 0x780e]
0x1e90:	mov	qword ptr [rip + 0x20c281], rax
0x1e97:	jmp	0x1dd1


0x1dc8:	cmp	byte ptr [rax], 0
0x1dcb:	je	0x1e89


0x1dd1:	mov	rdi, qword ptr [rip + 0x20c340]
0x1dd8:	lea	r12, [rip + 0x20ba61]
0x1ddf:	call	0x1aa0


0x1de4:	lea	rdi, [rip + 0x3d35]
0x1deb:	mov	dword ptr [rip + 0x20c323], eax
0x1df1:	call	0x9470


0x1ac0:	jmp	qword ptr [rip + 0x20c3ca]




0x92f4:	test	eax, eax
0x92f6:	je	0x9334


0x92f8:	call	0x19d0


0x92fd:	mov	r12d, dword ptr [rax]
0x9300:	mov	rdi, rbx
0x9303:	mov	rbp, rax
0x9306:	call	0x1a60


0x930b:	test	r12d, r12d
0x930e:	jne	0x9340


0x9310:	pop	rbx
0x9311:	pop	rbp
0x9312:	pop	r12
0x9314:	ret	


0x9340:	mov	dword ptr [rbp], r12d
0x9344:	mov	eax, 0xffffffff
0x9349:	jmp	0x9310


0x91ca:	and	ebx, 0x20
0x91cd:	test	ebx, ebx
0x91cf:	jne	0x91e8


0x91d1:	test	eax, eax
0x91d3:	je	0x91df


0x91e8:	test	eax, eax
0x91ea:	jne	0x9208


0x91df:	pop	rbx
0x91e0:	pop	rbp
0x91e1:	pop	r12
0x91e3:	ret	


0x91d5:	test	r12, r12
0x91d8:	mov	eax, 0xffffffff
0x91dd:	je	0x9218


0x91ec:	call	0x19d0


0x9208:	pop	rbx
0x9209:	mov	eax, 0xffffffff
0x920e:	pop	rbp
0x920f:	pop	r12
0x9211:	ret	


0x9218:	call	0x19d0


0x921d:	cmp	dword ptr [rax], 9
0x9220:	pop	rbx
0x9221:	pop	rbp
0x9222:	pop	r12
0x9224:	setne	al
0x9227:	movzx	eax, al
0x922a:	neg	eax
0x922c:	ret	


0x91f1:	mov	dword ptr [rax], 0
0x91f7:	mov	eax, 0xffffffff
0x91fc:	pop	rbx
0x91fd:	pop	rbp
0x91fe:	pop	r12
0x9200:	ret	


0x5b32:	test	eax, eax
0x5b34:	je	0x5b4c


0x5b4c:	mov	rdi, qword ptr [rip + 0x2085ad]
0x5b53:	call	0x91b0


0x5b36:	call	0x19d0


0x5b3b:	cmp	byte ptr [rip + 0x20865e], 0
0x5b42:	mov	rbx, rax
0x5b45:	je	0x5b63


0x5b63:	lea	rsi, [rip + 0x5896]
0x5b6a:	xor	edi, edi
0x5b6c:	mov	edx, 5
0x5b71:	call	0x1a80


0x5b47:	cmp	dword ptr [rax], 0x20
0x5b4a:	jne	0x5b63


0x5b76:	mov	rdi, qword ptr [rip + 0x20862b]
0x5b7d:	mov	rbp, rax
0x5b80:	test	rdi, rdi
0x5b83:	je	0x5bad


0x5bad:	mov	esi, dword ptr [rbx]
0x5baf:	lea	rdx, [rip + 0x5847]
0x5bb6:	mov	rcx, rax
0x5bb9:	xor	edi, edi
0x5bbb:	xor	eax, eax
0x5bbd:	call	0x1c80


0x5b85:	call	0x7b50


0x5bc2:	jmp	0x5ba2


0x5ba2:	mov	edi, dword ptr [rip + 0x2084a8]
0x5ba8:	call	0x19f0


0x19f0:	jmp	qword ptr [rip + 0x20c432]




0x5b58:	test	eax, eax
0x5b5a:	jne	0x5ba2


0x5b5c:	add	rsp, 8
0x5b60:	pop	rbx
0x5b61:	pop	rbp
0x5b62:	ret	


0x1e17:	cmp	eax, -1
0x1e1a:	je	0x222e


0x222e:	cmp	qword ptr [rip + 0x20bf12], 0
0x2236:	je	0x2245


0x1e20:	cmp	eax, 0x84
0x1e25:	je	0x2140


0x2245:	test	r13, r13
0x2248:	jne	0x2257


0x2238:	cmp	dword ptr [rip + 0x20bf31], 0
0x223f:	jne	0x2b16


0x2140:	mov	r9, qword ptr [rip + 0x20bf01]
0x2147:	mov	rsi, qword ptr [rip + 0x20bf92]
0x214e:	lea	rdx, [rip + 0x20b98b]
0x2155:	lea	rcx, [rip + 0x9014]
0x215c:	lea	rdi, [rip + 0x754d]
0x2163:	mov	r8d, 4
0x2169:	call	0x5a40


0x1e2b:	jle	0x1ea0


0x224a:	cmp	byte ptr [rip + 0x20becf], 0
0x2251:	jne	0x2811


0x2257:	cmp	byte ptr [rip + 0x20bec2], 0
0x225e:	je	0x22ba


0x2b16:	lea	rsi, [rip + 0x82b3]
0x2b1d:	mov	edx, 5
0x2b22:	xor	edi, edi
0x2b24:	call	0x1a80


0x1ea0:	cmp	eax, 0x7a
0x1ea3:	je	0x2188


0x1e2d:	cmp	eax, 0x89
0x1e32:	je	0x1fc7


0x2811:	lea	rsi, [rip + 0x6f06]
0x2818:	xor	edi, edi
0x281a:	mov	edx, 5
0x281f:	call	0x1a80


0x22ba:	mov	r12, qword ptr [rip + 0x20be87]
0x22c1:	test	r12, r12
0x22c4:	je	0x2406


0x2260:	cmp	dword ptr [rip + 0x20bf21], 0
0x2267:	jne	0x22ba


0x2188:	mov	byte ptr [rip + 0x20be81], 0
0x218f:	jmp	0x1e00


0x1ea9:	jle	0x1f60


0x1fc7:	mov	byte ptr [rip + 0x20c152], 1
0x1fce:	jmp	0x1e00


0x1e38:	jg	0x1ef0


0x2406:	cmp	dword ptr [rip + 0x20bd63], 0
0x240d:	jne	0x25fb


0x22ca:	mov	qword ptr [rsp + 0x30], 0
0x22d3:	xor	r15d, r15d
0x22d6:	xor	eax, eax
0x22d8:	jmp	0x22f4


0x2269:	cmp	dword ptr [rip + 0x20bf14], 0
0x2270:	jne	0x22ba


0x1e00:	lea	rdx, [rip + 0x7899]
0x1e07:	xor	r8d, r8d
0x1e0a:	mov	rcx, r12
0x1e0d:	mov	rsi, rbx
0x1e10:	mov	edi, ebp
0x1e12:	call	0x1ac0


0x1f60:	cmp	eax, 0xffffff7e
0x1f65:	je	0x2992


0x1eaf:	cmp	eax, 0x81
0x1eb4:	je	0x2020


0x1e3e:	cmp	eax, 0x86
0x1e43:	je	0x2058


0x1ef0:	cmp	eax, 0x8b
0x1ef5:	je	0x21b0


0x2413:	mov	rdi, qword ptr [rip + 0x20bd3e]
0x241a:	cmp	rdi, qword ptr [rip + 0x20bd3f]
0x2421:	jae	0x264e


0x25fb:	cmp	dword ptr [rip + 0x20bb82], 0
0x2602:	jne	0x2af2


0x22f4:	movzx	edx, byte ptr [r12 + rax]
0x22f9:	cmp	dl, 0x25
0x22fc:	jne	0x22e0


0x2272:	cmp	dword ptr [rip + 0x20bef7], 0
0x2279:	mov	r12, qword ptr [rip + 0x20bec8]
0x2280:	jne	0x2968


0x2992:	xor	edi, edi
0x2994:	call	0x4940


0x1f6b:	cmp	eax, 0x64
0x1f6e:	je	0x2070


0x2020:	mov	rdi, qword ptr [rip + 0x20c0b9]
0x2027:	call	0x2dd0


0x1eba:	jle	0x1fd8


0x2058:	mov	dword ptr [rip + 0x20c10e], 1
0x2062:	jmp	0x1e00


0x1e49:	jl	0x2040


0x21b0:	mov	rdi, qword ptr [rip + 0x20bf29]
0x21b7:	test	rdi, rdi
0x21ba:	je	0x221e


0x1efb:	jl	0x1fc0


0x2427:	xor	eax, eax
0x2429:	cmp	qword ptr [rip + 0x20bd27], 0
0x2431:	jne	0x2442


0x264e:	call	0x2f40


0x2608:	cmp	byte ptr [rip + 0x20bb11], 0
0x260f:	je	0x2413


0x2af2:	lea	rsi, [rip + 0x846f]
0x2af9:	mov	edx, 5
0x2afe:	xor	edi, edi
0x2b00:	call	0x1a80


0x22fe:	cmp	byte ptr [r12 + rax + 1], 0x25
0x2304:	lea	r13, [rax + 1]
0x2308:	jne	0x2658


0x22e0:	test	dl, dl
0x22e2:	je	0x2999


0x2286:	cmp	qword ptr [rip + 0x20beca], 0
0x228e:	jne	0x2984


0x2968:	test	r12, r12
0x296b:	jne	0x22ca


0x2070:	mov	rdx, qword ptr [rip + 0x20c069]
0x2077:	movsx	eax, byte ptr [rdx]
0x207a:	test	al, al
0x207c:	je	0x2088


0x1f74:	cmp	eax, 0xffffff7d
0x1f79:	je	0x1f88


0x1fd8:	add	eax, -0x80
0x1fdb:	jne	0x1f7b


0x1ec0:	cmp	eax, 0x82
0x1ec5:	je	0x2098


0x2040:	mov	rax, qword ptr [rip + 0x20c099]
0x2047:	mov	qword ptr [rip + 0x20c12a], rax
0x204e:	jmp	0x1e00


0x1e4f:	cmp	eax, 0x87
0x1e54:	je	0x20e0


0x221e:	mov	qword ptr [rip + 0x20beff], 1
0x2229:	jmp	0x1e00


0x21bc:	lea	r8, [rip + 0x73b3]
0x21c3:	lea	rcx, [rip + 0x20bf5e]
0x21ca:	xor	esi, esi
0x21cc:	mov	edx, 0xa
0x21d1:	call	0x8d00


0x1fc0:	mov	byte ptr [rip + 0x20c149], 1
0x1fc7:	mov	byte ptr [rip + 0x20c152], 1
0x1fce:	jmp	0x1e00


0x1f01:	cmp	eax, 0x8c
0x1f06:	je	0x2198


0x2433:	xor	eax, eax
0x2435:	cmp	dword ptr [rip + 0x20bbd5], 0x80
0x243f:	sete	al
0x2442:	cmp	dword ptr [rip + 0x20bd37], 0
0x2449:	mov	dword ptr [rip + 0x20bce1], eax
0x244f:	je	0x245b


0x2442:	cmp	dword ptr [rip + 0x20bd37], 0
0x2449:	mov	dword ptr [rip + 0x20bce1], eax
0x244f:	je	0x245b


0x2615:	mov	edi, 0x10001
0x261a:	call	0x1c10


0x230e:	mov	edx, 2
0x2313:	jmp	0x22ed


0x2658:	lea	r8, [r12 + r13]
0x265c:	lea	r14, [rip + 0x70ee]
0x2663:	mov	byte ptr [rsp + 8], 0
0x2668:	nop	dword ptr [rax + rax]
0x2670:	mov	rdi, r8
0x2673:	mov	rsi, r14
0x2676:	call	0x1b50


0x2999:	mov	rdi, r12
0x299c:	call	0x7d50


0x22e8:	mov	edx, 1
0x22ed:	add	rax, rdx
0x22f0:	add	r15, 1
0x22f4:	movzx	edx, byte ptr [r12 + rax]
0x22f9:	cmp	dl, 0x25
0x22fc:	jne	0x22e0


0x2294:	test	r12, r12
0x2297:	jne	0x22ca


0x2984:	test	r12, r12
0x2987:	jne	0x22ca


0x2971:	jmp	0x2608


0x2088:	mov	dword ptr [rip + 0x20bf86], eax
0x208e:	jmp	0x1e00


0x207e:	cmp	byte ptr [rdx + 1], 0
0x2082:	jne	0x2a65


0x1f88:	mov	rdi, qword ptr [rip + 0x20c139]
0x1f8f:	mov	rcx, qword ptr [rip + 0x20c0aa]
0x1f96:	lea	r8, [rip + 0x7774]
0x1f9d:	lea	rdx, [rip + 0x76a3]
0x1fa4:	lea	rsi, [rip + 0x760f]
0x1fab:	xor	r9d, r9d
0x1fae:	xor	eax, eax
0x1fb0:	call	0x8230


0x1f7b:	mov	edi, 1
0x1f80:	call	0x4940


0x1fdd:	mov	r9, qword ptr [rip + 0x20c064]
0x1fe4:	mov	rsi, qword ptr [rip + 0x20c0f5]
0x1feb:	lea	rdx, [rip + 0x20bb6e]
0x1ff2:	lea	rcx, [rip + 0x91a7]
0x1ff9:	lea	rdi, [rip + 0x76a4]
0x2000:	mov	r8d, 4
0x2006:	call	0x5a40


0x2098:	mov	r9, qword ptr [rip + 0x20bfa9]
0x209f:	mov	rsi, qword ptr [rip + 0x20c03a]
0x20a6:	lea	rdx, [rip + 0x20ba73]
0x20ad:	lea	rcx, [rip + 0x90dc]
0x20b4:	lea	rdi, [rip + 0x75f0]
0x20bb:	mov	r8d, 4
0x20c1:	call	0x5a40


0x1ecb:	cmp	eax, 0x83
0x1ed0:	jne	0x1f7b


0x20e0:	mov	rdi, qword ptr [rip + 0x20bff9]
0x20e7:	lea	r8, [rip + 0x7488]
0x20ee:	lea	rcx, [rip + 0x20c063]
0x20f5:	xor	esi, esi
0x20f7:	mov	edx, 0xa
0x20fc:	call	0x8640


0x1e5a:	cmp	eax, 0x88
0x1e5f:	jne	0x1f7b


0x2198:	mov	rax, qword ptr [rip + 0x20bf41]
0x219f:	mov	qword ptr [rip + 0x20bfa2], rax
0x21a6:	jmp	0x1e00


0x1f0c:	cmp	eax, 0x8d
0x1f11:	jne	0x1f7b


0x245b:	mov	eax, dword ptr [rip + 0x20bc77]
0x2461:	cmp	eax, ebp
0x2463:	jl	0x25ae


0x2451:	mov	dword ptr [rip + 0x20bbc1], 0
0x245b:	mov	eax, dword ptr [rip + 0x20bc77]
0x2461:	cmp	eax, ebp
0x2463:	jl	0x25ae


0x22ed:	add	rax, rdx
0x22f0:	add	r15, 1
0x22f4:	movzx	edx, byte ptr [r12 + rax]
0x22f9:	cmp	dl, 0x25
0x22fc:	jne	0x22e0


0x2299:	lea	rsi, [rip + 0x8b60]
0x22a0:	mov	edx, 5
0x22a5:	xor	edi, edi
0x22a7:	call	0x1a80


0x298d:	jmp	0x2413


0x2a65:	lea	rsi, [rip + 0x8334]
0x2a6c:	mov	edx, 5
0x2a71:	xor	edi, edi
0x2a73:	call	0x1a80


0x1ed6:	mov	rdi, qword ptr [rip + 0x20c203]
0x1edd:	call	0x2dd0


0x1e65:	cmp	qword ptr [rip + 0x20c493], 0
0x1e6d:	jne	0x2b6c


0x1f13:	mov	r9, qword ptr [rip + 0x20c12e]
0x1f1a:	mov	rsi, qword ptr [rip + 0x20c1bf]
0x1f21:	lea	rdx, [rip + 0x20bb78]
0x1f28:	lea	rcx, [rip + 0x9231]
0x1f2f:	lea	rdi, [rip + 0x77d1]
0x1f36:	mov	r8d, 4
0x1f3c:	call	0x5a40


0x25ae:	cmp	byte ptr [rip + 0x20bb6b], 0
0x25b5:	je	0x25c5


0x2469:	mov	rax, qword ptr [rip + 0x20bcb8]
0x2470:	mov	qword ptr [rsp + 0x28], 0
0x2479:	lea	r13, [rsp + 0x30]
0x247e:	mov	qword ptr [rsp + 0x30], 0
0x2487:	lea	rbx, [rsp + 0x28]
0x248c:	lea	rdx, [rax - 1]
0x2490:	test	rax, rax
0x2493:	mov	qword ptr [rip + 0x20bc8e], rdx
0x249a:	jne	0x24c8


0x1e73:	mov	rdi, qword ptr [rip + 0x20c266]
0x1e7a:	mov	esi, 1
0x1e7f:	call	0x5170


0x2b6c:	lea	rsi, [rip + 0x6b5e]
0x2b73:	mov	edx, 5
0x2b78:	xor	edi, edi
0x2b7a:	call	0x1a80


0x25c5:	mov	r12d, 1
0x25cb:	nop	dword ptr [rax + rax]
0x25d0:	cdqe	
0x25d2:	mov	esi, 1
0x25d7:	mov	rdi, qword ptr [rbx + rax*8]
0x25db:	call	0x4770


0x25b7:	cmp	qword ptr [rip + 0x20bb69], 0
0x25bf:	jne	0x2837


0x249c:	jmp	0x24e6


0x24c8:	movzx	edx, byte ptr [rip + 0x20bb41]
0x24cf:	mov	rcx, qword ptr [rip + 0x20bbfa]
0x24d6:	mov	rsi, r13
0x24d9:	mov	rdi, rbx
0x24dc:	call	0x1d20


0x2837:	lea	rsi, [rip + 0x877a]
0x283e:	xor	edi, edi
0x2840:	mov	edx, 5
0x2845:	call	0x1a80


0x24e6:	mov	r12d, 1
0x24ec:	jmp	0x2520


0x1d20:	jmp	qword ptr [rip + 0x20c29a]


0x2520:	movzx	edx, byte ptr [rip + 0x20bae9]
0x2527:	mov	rcx, qword ptr [rip + 0x20bba2]
0x252e:	mov	rsi, r13
0x2531:	mov	rdi, rbx
0x2534:	call	0x1d20




0x25e0:	and	r12d, eax
0x25e3:	mov	eax, dword ptr [rip + 0x20baef]
0x25e9:	add	eax, 1
0x25ec:	cmp	eax, ebp
0x25ee:	mov	dword ptr [rip + 0x20bae4], eax
0x25f4:	jl	0x25d0


0x25d0:	cdqe	
0x25d2:	mov	esi, 1
0x25d7:	mov	rdi, qword ptr [rbx + rax*8]
0x25db:	call	0x4770


0x25f6:	jmp	0x2573


0x2573:	cmp	byte ptr [rip + 0x20bba6], 0
0x257a:	je	0x27c9


0x27c9:	test	r12d, r12d
0x27cc:	jne	0x2589


0x2580:	test	r12d, r12d
0x2583:	je	0x27ee


0x27d2:	mov	eax, dword ptr [rip + 0x20b9a8]
0x27d8:	sub	eax, 2
0x27db:	cmp	eax, 1
0x27de:	jbe	0x2589


0x2589:	xor	eax, eax
0x258b:	mov	rbx, qword ptr [rsp + 0x38]
0x2590:	xor	rbx, qword ptr fs:[0x28]
0x2599:	jne	0x2aed


0x27ee:	lea	rsi, [rip + 0x87f3]
0x27f5:	xor	edi, edi
0x27f7:	mov	edx, 5
0x27fc:	call	0x1a80


0x27e4:	mov	eax, 2
0x27e9:	jmp	0x258b


0x259f:	add	rsp, 0x48
0x25a3:	pop	rbx
0x25a4:	pop	rbp
0x25a5:	pop	r12
0x25a7:	pop	r13
0x25a9:	pop	r14
0x25ab:	pop	r15
0x25ad:	ret	


0x2aed:	call	0x1ab0


0x258b:	mov	rbx, qword ptr [rsp + 0x38]
0x2590:	xor	rbx, qword ptr fs:[0x28]
0x2599:	jne	0x2aed


0x1e84:	jmp	0x1e00


0x2101:	test	eax, eax
0x2103:	jne	0x2a2f


0x2109:	mov	rax, qword ptr [rip + 0x20c048]
0x2110:	test	rax, rax
0x2113:	je	0x2a2f


0x2a2f:	mov	rdi, qword ptr [rip + 0x20b6aa]
0x2a36:	call	0x7d50


0x2119:	jns	0x1e00


0x211f:	neg	rax
0x2122:	mov	dword ptr [rip + 0x20beec], 0
0x212c:	mov	qword ptr [rip + 0x20c025], rax
0x2133:	jmp	0x1e00


0x1fb5:	xor	edi, edi
0x1fb7:	call	0x1cc0


0x267b:	add	r13, rax
0x267e:	lea	r8, [r12 + r13]
0x2682:	movzx	edx, byte ptr [r8]
0x2686:	cmp	dl, 0x27
0x2689:	je	0x27a0


0x27a0:	add	r13, 1
0x27a4:	mov	dword ptr [rip + 0x20b9c2], 1
0x27ae:	lea	r8, [r12 + r13]
0x27b2:	jmp	0x2670


0x268f:	cmp	dl, 0x30
0x2692:	je	0x27b7


0x2670:	mov	rdi, r8
0x2673:	mov	rsi, r14
0x2676:	call	0x1b50


0x27b7:	add	r13, 1
0x27bb:	mov	byte ptr [rsp + 8], 1
0x27c0:	lea	r8, [r12 + r13]
0x27c4:	jmp	0x2670


0x2698:	test	rax, rax
0x269b:	jne	0x2670


0x269d:	mov	qword ptr [rsp + 0x10], r8
0x26a2:	lea	r13, [rsp + 0x30]
0x26a7:	call	0x19d0


0x26ac:	mov	r8, qword ptr [rsp + 0x10]
0x26b1:	mov	dword ptr [rax], 0
0x26b7:	mov	edx, 0xa
0x26bc:	mov	rsi, r13
0x26bf:	mov	qword ptr [rsp + 0x18], rax
0x26c4:	mov	rdi, r8
0x26c7:	call	0x1bb0


0x26cc:	mov	r9, qword ptr [rsp + 0x18]
0x26d1:	mov	r14, rax
0x26d4:	mov	r8, qword ptr [rsp + 0x10]
0x26d9:	cmp	dword ptr [r9], 0x22
0x26dd:	je	0x2b3a


0x2b3a:	mov	rdi, r12
0x2b3d:	call	0x7d50


0x26e3:	cmp	qword ptr [rsp + 0x30], r8
0x26e8:	je	0x2725


0x2725:	mov	rdx, qword ptr [rsp + 0x30]
0x272a:	mov	rax, rdx
0x272d:	movzx	edx, byte ptr [rdx]
0x2730:	sub	rax, r12
0x2733:	test	dl, dl
0x2735:	je	0x29fd


0x26ea:	test	rax, rax
0x26ed:	je	0x2725


0x29fd:	mov	rdi, r12
0x2a00:	call	0x7d50


0x273b:	cmp	dl, 0x2e
0x273e:	je	0x28ca


0x26ef:	cmp	byte ptr [rip + 0x20ba2a], 0
0x26f6:	je	0x28aa


0x28ca:	lea	r14, [r12 + rax + 1]
0x28cf:	mov	dword ptr [r9], 0
0x28d6:	mov	edx, 0xa
0x28db:	mov	rsi, r13
0x28de:	mov	qword ptr [rsp + 8], r9
0x28e3:	mov	rdi, r14
0x28e6:	call	0x1bb0


0x2744:	cmp	byte ptr [r12 + rax], 0x66
0x2749:	jne	0x2abb


0x28aa:	test	r14, r14
0x28ad:	js	0x294f


0x26fc:	cmp	qword ptr [rip + 0x20ba54], 0
0x2704:	je	0x28aa


0x274f:	add	rax, 1
0x2753:	lea	r13, [r12 + rax]
0x2757:	movzx	edx, byte ptr [r13]
0x275c:	test	dl, dl
0x275e:	jne	0x2775


0x2abb:	mov	rdi, r12
0x2abe:	call	0x7d50


0x294f:	neg	r14
0x2952:	mov	dword ptr [rip + 0x20b6bc], 0
0x295c:	mov	qword ptr [rip + 0x20b7f5], r14
0x2963:	jmp	0x2725


0x28b3:	cmp	byte ptr [rsp + 8], 0
0x28b8:	jne	0x271e


0x270a:	cmp	byte ptr [rsp + 8], 0
0x270f:	je	0x287f


0x2760:	jmp	0x2976


0x2775:	cmp	dl, 0x25
0x2778:	lea	rsi, [rax + 1]
0x277c:	movzx	edi, byte ptr [r12 + rax + 1]
0x2782:	jne	0x2768


0x28be:	mov	qword ptr [rip + 0x20b893], r14
0x28c5:	jmp	0x2725


0x271e:	mov	qword ptr [rip + 0x20ba2b], r14
0x2725:	mov	rdx, qword ptr [rsp + 0x30]
0x272a:	mov	rax, rdx
0x272d:	movzx	edx, byte ptr [rdx]
0x2730:	sub	rax, r12
0x2733:	test	dl, dl
0x2735:	je	0x29fd


0x287f:	lea	rsi, [rip + 0x85c2]
0x2886:	mov	edx, 5
0x288b:	xor	edi, edi
0x288d:	mov	qword ptr [rsp + 0x10], r9
0x2892:	call	0x1a80


0x2715:	test	rax, rax
0x2718:	jle	0x287f


0x2976:	test	r15, r15
0x2979:	je	0x233b


0x2784:	cmp	dil, 0x25
0x2788:	jne	0x2a89


0x2768:	mov	edx, edi
0x276a:	test	dl, dl
0x276c:	mov	rax, rsi
0x276f:	je	0x2315


0x233b:	cmp	byte ptr [rip + 0x20bdce], 0
0x2342:	je	0x2406


0x297f:	jmp	0x231e


0x278e:	lea	rsi, [rax + 2]
0x2792:	movzx	edx, byte ptr [r12 + rax + 2]
0x2798:	jmp	0x276a


0x2a89:	mov	rdi, r12
0x2a8c:	call	0x7d50


0x2315:	test	r15, r15
0x2318:	je	0x286b


0x2348:	mov	rsi, qword ptr [rip + 0x20bde9]
0x234f:	test	rsi, rsi
0x2352:	je	0x2943


0x231e:	mov	rsi, r15
0x2321:	mov	rdi, r12
0x2324:	call	0x8620


0x276a:	test	dl, dl
0x276c:	mov	rax, rsi
0x276f:	je	0x2315


0x286b:	mov	rdi, r13
0x286e:	call	0x85c0


0x2943:	lea	rsi, [rip + 0x6c2c]
0x294a:	jmp	0x2358


0x2358:	mov	edi, 2
0x235d:	call	0x7d30


0x2873:	mov	qword ptr [rip + 0x20b8be], rax
0x287a:	jmp	0x233b


0x2329:	cmp	byte ptr [r13], 0
0x232e:	mov	qword ptr [rip + 0x20be0b], rax
0x2335:	jne	0x286b


0x28eb:	mov	r9, qword ptr [rsp + 8]
0x28f0:	mov	qword ptr [rip + 0x20b729], rax
0x28f7:	cmp	dword ptr [r9], 0x22
0x28fb:	je	0x29cb


0x29cb:	mov	rdi, r12
0x29ce:	call	0x7d50


0x2901:	test	rax, rax
0x2904:	js	0x29cb


0x290a:	call	0x1d30


0x290f:	movsx	rsi, byte ptr [r14]
0x2913:	mov	rax, qword ptr [rax]
0x2916:	test	byte ptr [rax + rsi*2], 1
0x291a:	jne	0x29cb


0x2920:	cmp	sil, 0x2b
0x2924:	je	0x29cb


0x292a:	mov	rax, qword ptr [rsp + 0x30]
0x292f:	sub	rax, r12
0x2932:	jmp	0x2744


0x261f:	cmp	byte ptr [rax], 0
0x2622:	jne	0x2413


0x2628:	lea	rsi, [rip + 0x8961]
0x262f:	xor	edi, edi
0x2631:	mov	edx, 5
0x2636:	call	0x1a80


0x21d6:	test	eax, eax
0x21d8:	jne	0x21e8


0x21da:	cmp	qword ptr [rip + 0x20bf46], 0
0x21e2:	jne	0x1e00


0x21e8:	mov	rdi, qword ptr [rip + 0x20bef1]
0x21ef:	call	0x7d50


0x2653:	jmp	0x2427


0x1ee2:	mov	qword ptr [rip + 0x20c13f], rax
0x1ee9:	jmp	0x1e00


0x202c:	mov	qword ptr [rip + 0x20bffd], rax
0x2033:	jmp	0x1e00


0x263b:	xor	esi, esi
0x263d:	mov	rdx, rax
0x2640:	xor	edi, edi
0x2642:	xor	eax, eax
0x2644:	call	0x1c80


0x2649:	jmp	0x2413


0x2897:	xor	esi, esi
0x2899:	mov	rdx, rax
0x289c:	xor	edi, edi
0x289e:	xor	eax, eax
0x28a0:	call	0x1c80


0x28a5:	mov	r9, qword ptr [rsp + 0x10]
0x28aa:	test	r14, r14
0x28ad:	js	0x294f


0x2801:	xor	esi, esi
0x2803:	mov	rdx, rax
0x2806:	xor	edi, edi
0x2808:	xor	eax, eax
0x280a:	call	0x1c80


0x280f:	jmp	0x27d2


0x284a:	xor	esi, esi
0x284c:	mov	rdx, rax
0x284f:	xor	edi, edi
0x2851:	xor	eax, eax
0x2853:	call	0x1c80


0x2858:	mov	eax, dword ptr [rip + 0x20b87a]
0x285e:	cmp	ebp, eax
0x2860:	jle	0x2589


0x2866:	jmp	0x25c5


0x2b7f:	xor	esi, esi
0x2b81:	mov	rdx, rax
0x2b84:	mov	edi, 1
0x2b89:	xor	eax, eax
0x2b8b:	call	0x1c80


0x2a78:	xor	esi, esi
0x2a7a:	mov	rdx, rax
0x2a7d:	mov	edi, 1
0x2a82:	xor	eax, eax
0x2a84:	call	0x1c80


0x22ac:	xor	esi, esi
0x22ae:	mov	rdx, rax
0x22b1:	xor	edi, edi
0x22b3:	xor	eax, eax
0x22b5:	call	0x1c80


0x2b05:	xor	esi, esi
0x2b07:	mov	rdx, rax
0x2b0a:	mov	edi, 1
0x2b0f:	xor	eax, eax
0x2b11:	call	0x1c80


0x2824:	xor	esi, esi
0x2826:	mov	rdx, rax
0x2829:	xor	edi, edi
0x282b:	xor	eax, eax
0x282d:	call	0x1c80


0x2832:	jmp	0x2257


0x2b29:	xor	esi, esi
0x2b2b:	mov	rdx, rax
0x2b2e:	mov	edi, 1
0x2b33:	xor	eax, eax
0x2b35:	call	0x1c80


0x1f41:	lea	rdx, [rip + 0x9218]
0x1f48:	mov	eax, dword ptr [rdx + rax*4]
0x1f4b:	mov	dword ptr [rip + 0x20c22f], eax
0x1f51:	jmp	0x1e00


0x20c6:	lea	rdx, [rip + 0x90c3]
0x20cd:	mov	eax, dword ptr [rdx + rax*4]
0x20d0:	mov	dword ptr [rip + 0x20c0ae], eax
0x20d6:	jmp	0x1e00


0x200b:	lea	rdx, [rip + 0x918e]
0x2012:	mov	eax, dword ptr [rdx + rax*4]
0x2015:	mov	dword ptr [rip + 0x20c16d], eax
0x201b:	jmp	0x1e00


0x216e:	lea	rdx, [rip + 0x8ffb]
0x2175:	mov	eax, dword ptr [rdx + rax*4]
0x2178:	mov	dword ptr [rip + 0x20beba], eax
0x217e:	jmp	0x1e00


0x5ec3:	cmp	eax, -1
0x5ec6:	movsxd	rdx, eax
0x5ec9:	jne	0x5ed7


0x5ecb:	mov	dword ptr [r15], 0xfffd
0x5ed2:	mov	edx, 1
0x5ed7:	add	rdx, rbp
0x5eda:	cmp	r14, rdx
0x5edd:	jae	0x5eb0


0x5ed7:	add	rdx, rbp
0x5eda:	cmp	r14, rdx
0x5edd:	jae	0x5eb0


0x5eb0:	add	r15, 4
0x5eb4:	mov	edi, dword ptr [r15]
0x5eb7:	mov	rbp, rdx
0x5eba:	test	edi, edi
0x5ebc:	je	0x5edf


0x5efc:	mov	r15, rax
0x5eff:	jmp	0x5c1e


0x5e77:	add	rax, 1
0x5e7b:	mov	qword ptr [rsp + 0x20], rax
0x5e80:	mov	rdi, qword ptr [rsp + 0x20]
0x5e85:	call	0x1bf0


0x2539:	test	rax, rax
0x253c:	jg	0x24f0


0x253e:	mov	rax, qword ptr [rip + 0x20bb8b]
0x2545:	test	byte ptr [rax], 0x20
0x2548:	je	0x2573


0x24f0:	mov	rdi, qword ptr [rsp + 0x28]
0x24f5:	lea	rcx, [rdi + rax - 1]
0x24fa:	movzx	eax, byte ptr [rip + 0x20bb0f]
0x2501:	movsx	edx, byte ptr [rcx]
0x2504:	cmp	edx, eax
0x2506:	sete	sil
0x250a:	jne	0x2514


0x254a:	lea	rsi, [rip + 0x7217]
0x2551:	mov	edx, 5
0x2556:	xor	edi, edi
0x2558:	call	0x1a80


0x250c:	mov	byte ptr [rcx], 0
0x250f:	mov	rdi, qword ptr [rsp + 0x28]
0x2514:	movzx	esi, sil
0x2518:	call	0x4770


0x2514:	movzx	esi, sil
0x2518:	call	0x4770


0x251d:	and	r12d, eax
0x2520:	movzx	edx, byte ptr [rip + 0x20bae9]
0x2527:	mov	rcx, qword ptr [rip + 0x20bba2]
0x252e:	mov	rsi, r13
0x2531:	mov	rdi, rbx
0x2534:	call	0x1d20


0x255d:	mov	rbx, rax
0x2560:	call	0x19d0


0x2565:	mov	esi, dword ptr [rax]
0x2567:	mov	rdx, rbx
0x256a:	xor	edi, edi
0x256c:	xor	eax, eax
0x256e:	call	0x1c80


0x24e1:	test	rax, rax
0x24e4:	jg	0x24a0


0x24a0:	mov	rsi, qword ptr [rip + 0x20bc21]
0x24a7:	mov	rdi, qword ptr [rsp + 0x28]
0x24ac:	call	0x1b80


0x24b1:	mov	rax, qword ptr [rip + 0x20bc70]
0x24b8:	lea	rdx, [rax - 1]
0x24bc:	test	rax, rax
0x24bf:	mov	qword ptr [rip + 0x20bc62], rdx
0x24c6:	je	0x24e6


0x5b8a:	mov	esi, dword ptr [rbx]
0x5b8c:	lea	rdx, [rip + 0x5879]
0x5b93:	mov	rcx, rax
0x5b96:	mov	r8, rbp
0x5b99:	xor	edi, edi
0x5b9b:	xor	eax, eax
0x5b9d:	call	0x1c80


0x5a93:	mov	rdx, r15
0x5a96:	mov	rsi, rbp
0x5a99:	mov	rdi, rbx
0x5a9c:	call	0x5920


0x5aa1:	call	r13


0x74fc:	add	rsp, 0x20
0x7500:	mov	r11, qword ptr [rsp + 0x10]
0x7505:	cmp	r11, rax
0x7508:	ja	0x7571


0x750a:	lea	rsi, [rax + 1]
0x750e:	lea	rax, [rip + 0x206cab]
0x7515:	cmp	r12, rax
0x7518:	mov	qword ptr [rbx], rsi
0x751b:	je	0x752f


0x7571:	mov	eax, dword ptr [rsp + 0x18]
0x7575:	mov	dword ptr [r13], eax
0x7579:	add	rsp, 0x28
0x757d:	mov	rax, r12
0x7580:	pop	rbx
0x7581:	pop	rbp
0x7582:	pop	r12
0x7584:	pop	r13
0x7586:	pop	r14
0x7588:	pop	r15
0x758a:	ret	


0x752f:	mov	rdi, rsi
0x7532:	mov	qword ptr [rsp + 0x10], rsi
0x7537:	call	0x8390


0x751d:	mov	rdi, r12
0x7520:	mov	qword ptr [rsp + 0x10], rsi
0x7525:	call	0x19b0


0x752a:	mov	rsi, qword ptr [rsp + 0x10]
0x752f:	mov	rdi, rsi
0x7532:	mov	qword ptr [rsp + 0x10], rsi
0x7537:	call	0x8390


0x753c:	sub	rsp, 8
0x7540:	mov	qword ptr [rbx + 8], rax
0x7544:	mov	r8d, dword ptr [rbp]
0x7548:	push	qword ptr [rbp + 0x30]
0x754b:	push	qword ptr [rbp + 0x28]
0x754e:	mov	rcx, r14
0x7551:	push	r15
0x7553:	mov	r9d, dword ptr [rsp + 0x3c]
0x7558:	mov	rdi, rax
0x755b:	mov	rdx, qword ptr [rsp + 0x28]
0x7560:	mov	rsi, qword ptr [rsp + 0x30]
0x7565:	mov	r12, rax
0x7568:	call	0x61d0


0x7c82:	mov	rdi, qword ptr [rsp + 0x38]
0x7c87:	xor	rdi, qword ptr fs:[0x28]
0x7c90:	jne	0x7c9c


0x7c92:	add	rsp, 0x48
0x7c96:	ret	


0x7c9c:	call	0x1ab0


0x79cf:	mov	rcx, qword ptr [rsp + 0x38]
0x79d4:	xor	rcx, qword ptr fs:[0x28]
0x79dd:	jne	0x79e9


0x79df:	add	rsp, 0x48
0x79e3:	ret	


0x79e9:	call	0x1ab0


0x7a5b:	mov	rdx, qword ptr [rsp + 0x38]
0x7a60:	xor	rdx, qword ptr fs:[0x28]
0x7a69:	jne	0x7a75


0x7a6b:	add	rsp, 0x48
0x7a6f:	ret	


0x7a75:	call	0x1ab0


0x7bef:	mov	rcx, qword ptr [rsp + 0x38]
0x7bf4:	xor	rcx, qword ptr fs:[0x28]
0x7bfd:	jne	0x7c09


0x7bff:	add	rsp, 0x48
0x7c03:	ret	


0x7c09:	call	0x1ab0


0x7b1e:	mov	rsi, qword ptr [rsp + 0x38]
0x7b23:	xor	rsi, qword ptr fs:[0x28]
0x7b2c:	jne	0x7b33


0x7b2e:	add	rsp, 0x48
0x7b32:	ret	


0x7b33:	call	0x1ab0


0x756d:	add	rsp, 0x20
0x7571:	mov	eax, dword ptr [rsp + 0x18]
0x7575:	mov	dword ptr [r13], eax
0x7579:	add	rsp, 0x28
0x757d:	mov	rax, r12
0x7580:	pop	rbx
0x7581:	pop	rbp
0x7582:	pop	r12
0x7584:	pop	r13
0x7586:	pop	r14
0x7588:	pop	r15
0x758a:	ret	


0x77bc:	lea	rsi, [rax + 1]
0x77c0:	mov	qword ptr [rsp + 0x48], rax
0x77c5:	add	rsp, 0x20
0x77c9:	mov	rdi, rsi
0x77cc:	mov	qword ptr [rsp + 0x18], rsi
0x77d1:	call	0x8390


0x77d6:	mov	qword ptr [rsp + 0x10], rax
0x77db:	sub	rsp, 8
0x77df:	push	qword ptr [rbx + 0x30]
0x77e2:	push	qword ptr [rbx + 0x28]
0x77e5:	mov	r10, qword ptr [rsp + 0x38]
0x77ea:	mov	r9d, ebp
0x77ed:	mov	r8d, dword ptr [rbx]
0x77f0:	mov	rcx, r15
0x77f3:	mov	rdx, r14
0x77f6:	mov	rdi, rax
0x77f9:	push	r10
0x77fb:	mov	rsi, qword ptr [rsp + 0x38]
0x7800:	call	0x61d0


0x7805:	mov	eax, dword ptr [rsp + 0x2c]
0x7809:	add	rsp, 0x20
0x780d:	test	r12, r12
0x7810:	mov	dword ptr [r13], eax
0x7814:	je	0x781f


0x781f:	mov	rax, qword ptr [rsp + 0x10]
0x7824:	add	rsp, 0x38
0x7828:	pop	rbx
0x7829:	pop	rbp
0x782a:	pop	r12
0x782c:	pop	r13
0x782e:	pop	r14
0x7830:	pop	r15
0x7832:	ret	


0x7816:	mov	r11, qword ptr [rsp + 0x28]
0x781b:	mov	qword ptr [r12], r11
0x781f:	mov	rax, qword ptr [rsp + 0x10]
0x7824:	add	rsp, 0x38
0x7828:	pop	rbx
0x7829:	pop	rbp
0x782a:	pop	r12
0x782c:	pop	r13
0x782e:	pop	r14
0x7830:	pop	r15
0x7832:	ret	


0x7731:	mov	dword ptr [rbp], r12d
0x7735:	add	rsp, 0x38
0x7739:	pop	rbx
0x773a:	pop	rbp
0x773b:	pop	r12
0x773d:	pop	r13
0x773f:	pop	r14
0x7741:	pop	r15
0x7743:	ret	


0x21f4:	lea	rsi, [rip + 0x74f4]
0x21fb:	mov	rbx, rax
0x21fe:	mov	edx, 5
0x2203:	xor	edi, edi
0x2205:	call	0x1a80


0x220a:	mov	rcx, rbx
0x220d:	mov	rdx, rax
0x2210:	xor	esi, esi
0x2212:	mov	edi, 1
0x2217:	xor	eax, eax
0x2219:	call	0x1c80


0x29d3:	lea	rsi, [rip + 0x8496]
0x29da:	mov	rbx, rax
0x29dd:	mov	edx, 5
0x29e2:	xor	edi, edi
0x29e4:	call	0x1a80


0x29e9:	mov	rcx, rbx
0x29ec:	mov	rdx, rax
0x29ef:	xor	esi, esi
0x29f1:	mov	edi, 1
0x29f6:	xor	eax, eax
0x29f8:	call	0x1c80


0x2a91:	lea	rsi, [rip + 0x8438]
0x2a98:	mov	rbx, rax
0x2a9b:	mov	edx, 5
0x2aa0:	xor	edi, edi
0x2aa2:	call	0x1a80


0x2aa7:	mov	rcx, rbx
0x2aaa:	mov	rdx, rax
0x2aad:	xor	esi, esi
0x2aaf:	mov	edi, 1
0x2ab4:	xor	eax, eax
0x2ab6:	call	0x1c80


0x2ac3:	lea	rsi, [rip + 0x83c6]
0x2aca:	mov	rbx, rax
0x2acd:	mov	edx, 5
0x2ad2:	xor	edi, edi
0x2ad4:	call	0x1a80


0x2ad9:	mov	rcx, rbx
0x2adc:	mov	rdx, rax
0x2adf:	xor	esi, esi
0x2ae1:	mov	edi, 1
0x2ae6:	xor	eax, eax
0x2ae8:	call	0x1c80


0x2a05:	lea	rsi, [rip + 0x6d47]
0x2a0c:	mov	rbx, rax
0x2a0f:	mov	edx, 5
0x2a14:	xor	edi, edi
0x2a16:	call	0x1a80


0x2a1b:	mov	rcx, rbx
0x2a1e:	mov	rdx, rax
0x2a21:	xor	esi, esi
0x2a23:	mov	edi, 1
0x2a28:	xor	eax, eax
0x2a2a:	call	0x1c80


0x2b42:	lea	rsi, [rip + 0x82d7]
0x2b49:	mov	rbx, rax
0x2b4c:	mov	edx, 5
0x2b51:	xor	edi, edi
0x2b53:	call	0x1a80


0x2b58:	mov	rcx, rbx
0x2b5b:	mov	rdx, rax
0x2b5e:	xor	esi, esi
0x2b60:	mov	edi, 1
0x2b65:	xor	eax, eax
0x2b67:	call	0x1c80


0x2a3b:	lea	rsi, [rip + 0x6c76]
0x2a42:	mov	rbx, rax
0x2a45:	mov	edx, 5
0x2a4a:	xor	edi, edi
0x2a4c:	call	0x1a80


0x2a51:	mov	rcx, rbx
0x2a54:	mov	rdx, rax
0x2a57:	xor	esi, esi
0x2a59:	mov	edi, 1
0x2a5e:	xor	eax, eax
0x2a60:	call	0x1c80


0x29a1:	lea	rsi, [rip + 0x6d8b]
0x29a8:	mov	rbx, rax
0x29ab:	mov	edx, 5
0x29b0:	xor	edi, edi
0x29b2:	call	0x1a80


0x29b7:	mov	rcx, rbx
0x29ba:	mov	rdx, rax
0x29bd:	xor	esi, esi
0x29bf:	mov	edi, 1
0x29c4:	xor	eax, eax
0x29c6:	call	0x1c80


0x5639:	test	byte ptr [rsp + 0x1c], 4
0x563e:	mov	rbp, rax
0x5641:	mov	edx, 5
0x5646:	je	0x569d


0x569d:	lea	rsi, [rip + 0x5bbf]
0x56a4:	xor	edi, edi
0x56a6:	call	0x1a80


0x5648:	lea	rsi, [rip + 0x5cd9]
0x564f:	xor	edi, edi
0x5651:	call	0x1a80


0x5656:	mov	rdx, rax
0x5659:	mov	rcx, rbp
0x565c:	xor	esi, esi
0x565e:	xor	edi, edi
0x5660:	xor	eax, eax
0x5662:	call	0x1c80


0x5667:	mov	rdi, rbx
0x566a:	call	0x19b0


0x566f:	mov	edi, 1
0x5674:	call	0x4940


0x56ab:	jmp	0x5656


0x387c:	mov	rdi, qword ptr [rip + 0x20a87d]
0x3883:	lea	rdx, [rip + 0x5c88]
0x388a:	mov	rcx, rax
0x388d:	mov	esi, 1
0x3892:	xor	eax, eax
0x3894:	call	0x1ce0


0x3899:	jmp	0x3068


0x59ce:	mov	rdi, qword ptr [rip + 0x20872b]
0x59d5:	lea	rdx, [rip + 0x5a1f]
0x59dc:	mov	rcx, rax
0x59df:	mov	esi, 1
0x59e4:	xor	eax, eax
0x59e6:	call	0x1ce0


0x59eb:	mov	r15, qword ptr [r14 + rbx*8]
0x59ef:	test	r15, r15
0x59f2:	jne	0x59a8


0x597f:	mov	rdi, qword ptr [rip + 0x20877a]
0x5986:	lea	rdx, [rip + 0x5a66]
0x598d:	mov	rcx, rax
0x5990:	mov	esi, 1
0x5995:	xor	eax, eax
0x5997:	add	rbp, r12
0x599a:	call	0x1ce0


0x599f:	mov	r15, qword ptr [r14 + rbx*8]
0x59a3:	test	r15, r15
0x59a6:	je	0x59f8


0x4474:	mov	rdi, qword ptr [rip + 0x209c85]
0x447b:	lea	rdx, [rip + 0x5123]
0x4482:	mov	rcx, rax
0x4485:	mov	esi, 1
0x448a:	xor	eax, eax
0x448c:	call	0x1ce0


0x4491:	jmp	0x3b4d


0x2f11:	lea	rsi, [rip + 0x659f]
0x2f18:	mov	rbx, rax
0x2f1b:	mov	edx, 5
0x2f20:	xor	edi, edi
0x2f22:	call	0x1a80


0x2f27:	mov	rcx, rbx
0x2f2a:	mov	rdx, rax
0x2f2d:	xor	esi, esi
0x2f2f:	mov	edi, 1
0x2f34:	xor	eax, eax
0x2f36:	call	0x1c80


0x56d4:	test	byte ptr [rsp + 0x1c], 4
0x56d9:	mov	rbx, rax
0x56dc:	mov	edx, 5
0x56e1:	je	0x5718


0x5718:	lea	rsi, [rip + 0x5b61]
0x571f:	xor	edi, edi
0x5721:	call	0x1a80


0x56e3:	lea	rsi, [rip + 0x5c66]
0x56ea:	xor	edi, edi
0x56ec:	call	0x1a80


0x56f1:	mov	rdx, rax
0x56f4:	xor	edi, edi
0x56f6:	mov	rcx, rbx
0x56f9:	xor	esi, esi
0x56fb:	xor	eax, eax
0x56fd:	call	0x1c80


0x5702:	mov	edi, 1
0x5707:	call	0x4940


0x5726:	jmp	0x56f1


0x36fe:	lea	rsi, [rip + 0x6343]
0x3705:	mov	rbp, rax
0x3708:	xor	edi, edi
0x370a:	mov	edx, 5
0x370f:	call	0x1a80


0x3714:	mov	rcx, rbp
0x3717:	mov	rdx, rax
0x371a:	xor	esi, esi
0x371c:	xor	edi, edi
0x371e:	xor	eax, eax
0x3720:	call	0x1c80


0x3725:	jmp	0x3248


0x3aa9:	lea	rdx, [rip + 0x6128]
0x3ab0:	sub	rsp, 0x10
0x3ab4:	mov	rcx, rax
0x3ab7:	mov	rdi, qword ptr [rip + 0x20a642]
0x3abe:	mov	esi, 1
0x3ac3:	xor	eax, eax
0x3ac5:	fld	xword ptr [rsp + 0x10]
0x3ac9:	fstp	xword ptr [rsp]
0x3acc:	call	0x1ce0


0x3ad1:	pop	rax
0x3ad2:	pop	rdx
0x3ad3:	jmp	0x3ad7


0x43d6:	mov	rdi, qword ptr [rip + 0x209d23]
0x43dd:	lea	rdx, [rip + 0x51aa]
0x43e4:	mov	rcx, rax
0x43e7:	mov	esi, 1
0x43ec:	xor	eax, eax
0x43ee:	call	0x1ce0


0x43f3:	movzx	ebx, byte ptr [rip + 0x209d16]
0x43fa:	fld	xword ptr [rsp]
0x43fd:	jmp	0x3a39


0x3a39:	mov	rsi, qword ptr [rip + 0x20a738]
0x3a40:	test	rsi, rsi
0x3a43:	je	0x3a9a


0x3221:	mov	edx, 5
0x3226:	mov	rsi, r13
0x3229:	xor	edi, edi
0x322b:	mov	rbp, rax
0x322e:	call	0x1a80


0x3233:	mov	edi, dword ptr [rip + 0x20ade3]
0x3239:	mov	rdx, rax
0x323c:	mov	rcx, rbp
0x323f:	xor	esi, esi
0x3241:	xor	eax, eax
0x3243:	call	0x1c80


0x2362:	mov	rsi, qword ptr [rip + 0x20bdd7]
0x2369:	mov	rcx, rax
0x236c:	test	rsi, rsi
0x236f:	je	0x2937


0x2937:	lea	rsi, [rip + 0x6c38]
0x293e:	jmp	0x2375


0x2375:	mov	edi, 1
0x237a:	mov	qword ptr [rsp + 0x10], rcx
0x237f:	lea	r14, [rip + 0x72f3]
0x2386:	call	0x7d30


0x238b:	cmp	dword ptr [rip + 0x20bc86], 0
0x2392:	mov	r15, rax
0x2395:	lea	rax, [rip + 0x72d8]
0x239c:	mov	r9, qword ptr [rip + 0x20bdb5]
0x23a3:	lea	r13, [rip + 0x72d9]
0x23aa:	mov	rsi, r12
0x23ad:	cmove	r14, rax
0x23b1:	cmp	dword ptr [rip + 0x20bdb8], 0
0x23b8:	lea	rax, [rip + 0x72c0]
0x23bf:	mov	qword ptr [rsp + 8], r9
0x23c4:	cmovne	r13, rax
0x23c8:	xor	edi, edi
0x23ca:	call	0x7d30


0x23cf:	sub	rsp, 8
0x23d3:	mov	rdi, qword ptr [rip + 0x20bd26]
0x23da:	lea	rdx, [rip + 0x8b17]
0x23e1:	mov	rcx, qword ptr [rsp + 0x18]
0x23e6:	mov	r8, r13
0x23e9:	mov	esi, 1
0x23ee:	push	rcx
0x23ef:	push	r15
0x23f1:	mov	rcx, rax
0x23f4:	push	r14
0x23f6:	mov	r9, qword ptr [rsp + 0x28]
0x23fb:	xor	eax, eax
0x23fd:	call	0x1ce0


0x2402:	add	rsp, 0x20
0x2406:	cmp	dword ptr [rip + 0x20bd63], 0
0x240d:	jne	0x25fb


0x58d3:	mov	rdx, r12
0x58d6:	mov	rbp, rax
0x58d9:	mov	esi, 8
0x58de:	xor	edi, edi
0x58e0:	call	0x7960


0x58e5:	mov	r8, rbp
0x58e8:	mov	rdx, rbx
0x58eb:	mov	rcx, rax
0x58ee:	pop	rbx
0x58ef:	pop	rbp
0x58f0:	pop	r12
0x58f2:	xor	esi, esi
0x58f4:	xor	edi, edi
0x58f6:	xor	eax, eax
0x58f8:	jmp	0x1c80


0x369b:	mov	rsi, rbp
0x369e:	xor	edi, edi
0x36a0:	mov	r13, rax
0x36a3:	call	0x7d30


0x36a8:	lea	rsi, [rip + 0x6379]
0x36af:	xor	edi, edi
0x36b1:	mov	edx, 5
0x36b6:	mov	rbp, rax
0x36b9:	call	0x1a80


0x36be:	mov	edi, dword ptr [rip + 0x20a958]
0x36c4:	mov	rdx, rax
0x36c7:	mov	r8, r13
0x36ca:	mov	rcx, rbp
0x36cd:	xor	esi, esi
0x36cf:	xor	eax, eax
0x36d1:	call	0x1c80


0x36d6:	jmp	0x3248


0x3125:	mov	rsi, rbp
0x3128:	xor	edi, edi
0x312a:	mov	rbx, rax
0x312d:	call	0x7d30


0x3132:	mov	rdi, qword ptr [rip + 0x20afc7]
0x3139:	lea	rdx, [rip + 0x6818]
0x3140:	mov	rcx, rax
0x3143:	mov	r9d, 0x12
0x3149:	mov	r8, rbx
0x314c:	mov	esi, 1
0x3151:	xor	eax, eax
0x3153:	call	0x1ce0


0x5aa4:	mov	rax, -1
0x5aab:	jmp	0x5a76


0x943d:	add	rbx, 1
0x9441:	cmp	rbp, rbx
0x9444:	jne	0x9430


0x9430:	mov	rdx, r15
0x9433:	mov	rsi, r14
0x9436:	mov	edi, r13d
0x9439:	call	qword ptr [r12 + rbx*8]






0x3200:	lea	r13, [rip + 0x6639]
0x3207:	xor	r14d, r14d
0x320a:	nop	word ptr [rax + rax]
0x3210:	cmp	dword ptr [rip + 0x20af69], 3
0x3217:	je	0x3248


0x37e4:	xor	r14d, r14d
0x37e7:	lea	r13, [rip + 0x607a]
0x37ee:	jmp	0x3210


0x3308:	xor	r14d, r14d
0x330b:	lea	r13, [rip + 0x658e]
0x3312:	jmp	0x3210


0x32f9:	xor	r14d, r14d
0x32fc:	lea	r13, [rip + 0x61dd]
0x3303:	jmp	0x3210


0x8000:	lea	rsi, [rip + 0x3a91]
0x8007:	mov	edx, 5
0x800c:	xor	edi, edi
0x800e:	mov	r14, qword ptr [rbx + 0x18]
0x8012:	mov	r13, qword ptr [rbx + 0x10]
0x8016:	mov	r12, qword ptr [rbx + 8]
0x801a:	mov	rbx, qword ptr [rbx]
0x801d:	call	0x1a80


0x7e20:	mov	r9, qword ptr [rbx + 0x38]
0x7e24:	mov	rax, qword ptr [rbx + 0x10]
0x7e28:	lea	rsi, [rip + 0x3d09]
0x7e2f:	mov	r8, qword ptr [rbx + 8]
0x7e33:	mov	edx, 5
0x7e38:	xor	edi, edi
0x7e3a:	mov	r13, qword ptr [rbx + 0x30]
0x7e3e:	mov	r12, qword ptr [rbx + 0x28]
0x7e42:	mov	qword ptr [rsp + 0x10], r9
0x7e47:	mov	r15, qword ptr [rbx + 0x20]
0x7e4b:	mov	r14, qword ptr [rbx + 0x18]
0x7e4f:	mov	qword ptr [rsp], rax
0x7e53:	mov	qword ptr [rsp + 8], r8
0x7e58:	mov	rbx, qword ptr [rbx]
0x7e5b:	call	0x1a80


0x7f28:	mov	rbx, qword ptr [rbx]
0x7f2b:	lea	rsi, [rip + 0x3a0d]
0x7f32:	mov	edx, 5
0x7f37:	xor	edi, edi
0x7f39:	call	0x1a80


0x7f68:	mov	r12, qword ptr [rbx + 8]
0x7f6c:	lea	rsi, [rip + 0x39dc]
0x7f73:	mov	rbx, qword ptr [rbx]
0x7f76:	mov	edx, 5
0x7f7b:	xor	edi, edi
0x7f7d:	call	0x1a80


0x8088:	mov	r8, qword ptr [rbx + 8]
0x808c:	mov	r12, qword ptr [rbx + 0x28]
0x8090:	lea	rsi, [rip + 0x3a49]
0x8097:	mov	r15, qword ptr [rbx + 0x20]
0x809b:	mov	r14, qword ptr [rbx + 0x18]
0x809f:	mov	edx, 5
0x80a4:	mov	r13, qword ptr [rbx + 0x10]
0x80a8:	xor	edi, edi
0x80aa:	mov	rbx, qword ptr [rbx]
0x80ad:	mov	qword ptr [rsp], r8
0x80b1:	call	0x1a80


0x7fb0:	mov	r13, qword ptr [rbx + 0x10]
0x7fb4:	mov	r12, qword ptr [rbx + 8]
0x7fb8:	lea	rsi, [rip + 0x39a7]
0x7fbf:	mov	rbx, qword ptr [rbx]
0x7fc2:	mov	edx, 5
0x7fc7:	xor	edi, edi
0x7fc9:	call	0x1a80


0x80f0:	mov	r9, qword ptr [rbx + 0x10]
0x80f4:	mov	r13, qword ptr [rbx + 0x30]
0x80f8:	lea	rsi, [rip + 0x3a09]
0x80ff:	mov	r12, qword ptr [rbx + 0x28]
0x8103:	mov	r15, qword ptr [rbx + 0x20]
0x8107:	mov	edx, 5
0x810c:	mov	r14, qword ptr [rbx + 0x18]
0x8110:	mov	r8, qword ptr [rbx + 8]
0x8114:	xor	edi, edi
0x8116:	mov	qword ptr [rsp + 8], r9
0x811b:	mov	rbx, qword ptr [rbx]
0x811e:	mov	qword ptr [rsp], r8
0x8122:	call	0x1a80


0x7ed0:	mov	r10, qword ptr [rbx + 0x40]
0x7ed4:	mov	r9, qword ptr [rbx + 0x38]
0x7ed8:	lea	rsi, [rip + 0x3c89]
0x7edf:	mov	rax, qword ptr [rbx + 0x10]
0x7ee3:	mov	r8, qword ptr [rbx + 8]
0x7ee7:	mov	edx, 5
0x7eec:	mov	r13, qword ptr [rbx + 0x30]
0x7ef0:	mov	r12, qword ptr [rbx + 0x28]
0x7ef4:	mov	r15, qword ptr [rbx + 0x20]
0x7ef8:	mov	r14, qword ptr [rbx + 0x18]
0x7efc:	mov	rbx, qword ptr [rbx]
0x7eff:	mov	qword ptr [rsp + 0x18], r10
0x7f04:	mov	qword ptr [rsp + 0x10], r9
0x7f09:	mov	qword ptr [rsp], rax
0x7f0d:	mov	qword ptr [rsp + 8], r8
0x7f12:	xor	edi, edi
0x7f14:	call	0x1a80


0x7e96:	add	rsp, 0x28
0x7e9a:	pop	rbx
0x7e9b:	pop	rbp
0x7e9c:	pop	r12
0x7e9e:	pop	r13
0x7ea0:	pop	r14
0x7ea2:	pop	r15
0x7ea4:	ret	


0x8058:	mov	r15, qword ptr [rbx + 0x20]
0x805c:	lea	rsi, [rip + 0x3a55]
0x8063:	mov	edx, 5
0x8068:	xor	edi, edi
0x806a:	mov	r14, qword ptr [rbx + 0x18]
0x806e:	mov	r13, qword ptr [rbx + 0x10]
0x8072:	mov	r12, qword ptr [rbx + 8]
0x8076:	mov	rbx, qword ptr [rbx]
0x8079:	call	0x1a80


0x807e:	push	r15
0x8080:	jmp	0x8026


0x8026:	push	r14
0x8028:	mov	rdx, rax
0x802b:	mov	r9, r13
0x802e:	mov	r8, r12
0x8031:	mov	rcx, rbx
0x8034:	mov	rdi, rbp
0x8037:	mov	esi, 1
0x803c:	xor	eax, eax
0x803e:	call	0x1ce0


0x8043:	pop	rax
0x8044:	pop	rdx
0x8045:	add	rsp, 0x28
0x8049:	pop	rbx
0x804a:	pop	rbp
0x804b:	pop	r12
0x804d:	pop	r13
0x804f:	pop	r14
0x8051:	pop	r15
0x8053:	ret	


0x8127:	push	r13
0x8129:	push	r12
0x812b:	push	r15
0x812d:	push	r14
0x812f:	mov	r9, qword ptr [rsp + 0x28]
0x8134:	jmp	0x80c3


0x80c3:	mov	r8, qword ptr [rsp + 0x20]
0x80c8:	mov	rcx, rbx
0x80cb:	mov	rdx, rax
0x80ce:	mov	rdi, rbp
0x80d1:	mov	esi, 1
0x80d6:	xor	eax, eax
0x80d8:	call	0x1ce0


0x80dd:	add	rsp, 0x20
0x80e1:	add	rsp, 0x28
0x80e5:	pop	rbx
0x80e6:	pop	rbp
0x80e7:	pop	r12
0x80e9:	pop	r13
0x80eb:	pop	r14
0x80ed:	pop	r15
0x80ef:	ret	


0x7fce:	add	rsp, 0x28
0x7fd2:	mov	r9, r13
0x7fd5:	mov	r8, r12
0x7fd8:	mov	rcx, rbx
0x7fdb:	mov	rdi, rbp
0x7fde:	mov	rdx, rax
0x7fe1:	pop	rbx
0x7fe2:	pop	rbp
0x7fe3:	pop	r12
0x7fe5:	pop	r13
0x7fe7:	pop	r14
0x7fe9:	pop	r15
0x7feb:	mov	esi, 1
0x7ff0:	xor	eax, eax
0x7ff2:	jmp	0x1ce0


0x80b6:	sub	rsp, 8
0x80ba:	mov	r9, r13
0x80bd:	push	r12
0x80bf:	push	r15
0x80c1:	push	r14
0x80c3:	mov	r8, qword ptr [rsp + 0x20]
0x80c8:	mov	rcx, rbx
0x80cb:	mov	rdx, rax
0x80ce:	mov	rdi, rbp
0x80d1:	mov	esi, 1
0x80d6:	xor	eax, eax
0x80d8:	call	0x1ce0


0x7f82:	add	rsp, 0x28
0x7f86:	mov	r8, r12
0x7f89:	mov	rcx, rbx
0x7f8c:	mov	rdi, rbp
0x7f8f:	mov	rdx, rax
0x7f92:	mov	esi, 1
0x7f97:	pop	rbx
0x7f98:	pop	rbp
0x7f99:	pop	r12
0x7f9b:	pop	r13
0x7f9d:	pop	r14
0x7f9f:	pop	r15
0x7fa1:	xor	eax, eax
0x7fa3:	jmp	0x1ce0


0x7f3e:	add	rsp, 0x28
0x7f42:	mov	rcx, rbx
0x7f45:	mov	rdi, rbp
0x7f48:	pop	rbx
0x7f49:	pop	rbp
0x7f4a:	pop	r12
0x7f4c:	pop	r13
0x7f4e:	pop	r14
0x7f50:	pop	r15
0x7f52:	mov	rdx, rax
0x7f55:	mov	esi, 1
0x7f5a:	xor	eax, eax
0x7f5c:	jmp	0x1ce0


0x7e60:	sub	rsp, 8
0x7e64:	mov	r9, qword ptr [rsp + 0x18]
0x7e69:	mov	rdx, rax
0x7e6c:	mov	rcx, rbx
0x7e6f:	mov	esi, 1
0x7e74:	mov	rdi, rbp
0x7e77:	xor	eax, eax
0x7e79:	push	r9
0x7e7b:	push	r13
0x7e7d:	push	r12
0x7e7f:	push	r15
0x7e81:	push	r14
0x7e83:	mov	r9, qword ptr [rsp + 0x30]
0x7e88:	mov	r8, qword ptr [rsp + 0x38]
0x7e8d:	call	0x1ce0


0x8022:	sub	rsp, 8
0x8026:	push	r14
0x8028:	mov	rdx, rax
0x802b:	mov	r9, r13
0x802e:	mov	r8, r12
0x8031:	mov	rcx, rbx
0x8034:	mov	rdi, rbp
0x8037:	mov	esi, 1
0x803c:	xor	eax, eax
0x803e:	call	0x1ce0


0x402e:	add	rsp, 0x20
0x4032:	cmp	eax, 0x7e
0x4035:	fld	xword ptr [rsp]
0x4038:	fld	xword ptr [rsp + 0x10]
0x403c:	jbe	0x3fc3


0x3fc3:	fstp	st(1)
0x3fc5:	movzx	ebx, byte ptr [rip + 0x20a144]
0x3fcc:	test	bl, bl
0x3fce:	jne	0x43cb


0x403e:	fstp	st(0)
0x4040:	jmp	0x4044


0x4044:	fstp	xword ptr [rsp]
0x4047:	lea	rsi, [rip + 0x5b02]
0x404e:	mov	edx, 5
0x4053:	xor	edi, edi
0x4055:	call	0x1a80


0x6d70:	sub	rsp, 8
0x6d74:	mov	rcx, rbp
0x6d77:	mov	rsi, r13
0x6d7a:	push	qword ptr [rsp + 0x68]
0x6d7e:	push	qword ptr [rsp + 0x78]
0x6d82:	mov	rdi, r14
0x6d85:	push	0
0x6d87:	mov	r9d, dword ptr [rsp + 0x98]
0x6d8f:	mov	r8d, dword ptr [rsp + 0x28]
0x6d94:	mov	rdx, qword ptr [rsp + 0x30]
0x6d99:	and	r9d, 0xfffffffd
0x6d9d:	call	0x61d0


0x6da2:	add	rsp, 0x20
0x6da6:	mov	r15, rax
0x6da9:	mov	rbx, qword ptr [rsp + 0xa8]
0x6db1:	xor	rbx, qword ptr fs:[0x28]
0x6dba:	mov	rax, r15
0x6dbd:	jne	0x73c3


0x6dc3:	add	rsp, 0xb8
0x6dca:	pop	rbx
0x6dcb:	pop	rbp
0x6dcc:	pop	r12
0x6dce:	pop	r13
0x6dd0:	pop	r14
0x6dd2:	pop	r15
0x6dd4:	ret	


0x73c3:	call	0x1ab0


0x736d:	sub	rsp, 8
0x7371:	mov	r8d, 5
0x7377:	mov	rcx, r11
0x737a:	push	qword ptr [rsp + 0x68]
0x737e:	push	qword ptr [rsp + 0x78]
0x7382:	mov	rdi, r14
0x7385:	push	qword ptr [rsp + 0x38]
0x7389:	mov	r9d, dword ptr [rsp + 0x98]
0x7391:	mov	rdx, qword ptr [rsp + 0x30]
0x7396:	mov	rsi, qword ptr [rsp + 0x70]
0x739b:	call	0x61d0


0x73a0:	add	rsp, 0x20
0x73a4:	mov	r15, rax
0x73a7:	jmp	0x6da9


0x6da9:	mov	rbx, qword ptr [rsp + 0xa8]
0x6db1:	xor	rbx, qword ptr fs:[0x28]
0x6dba:	mov	rax, r15
0x6dbd:	jne	0x73c3


0x1990:	push	qword ptr [rip + 0x20c45a]
0x1996:	jmp	qword ptr [rip + 0x20c45c]


0x199c:	nop	dword ptr [rax]


0x19a6:	push	0
0x19ab:	jmp	0x1990


0x19b6:	push	1
0x19bb:	jmp	0x1990


0x19c6:	push	2
0x19cb:	jmp	0x1990


0x19d6:	push	3
0x19db:	jmp	0x1990


0x19e6:	push	4
0x19eb:	jmp	0x1990


0x19f6:	push	5
0x19fb:	jmp	0x1990


0x1a06:	push	6
0x1a0b:	jmp	0x1990


0x1a16:	push	7
0x1a1b:	jmp	0x1990


0x1a26:	push	8
0x1a2b:	jmp	0x1990


0x1a36:	push	9
0x1a3b:	jmp	0x1990


0x1a46:	push	0xa
0x1a4b:	jmp	0x1990


0x1a56:	push	0xb
0x1a5b:	jmp	0x1990


0x1a66:	push	0xc
0x1a6b:	jmp	0x1990


0x1a76:	push	0xd
0x1a7b:	jmp	0x1990


0x1a86:	push	0xe
0x1a8b:	jmp	0x1990


0x1a96:	push	0xf
0x1a9b:	jmp	0x1990


0x1aa6:	push	0x10
0x1aab:	jmp	0x1990


0x1ab6:	push	0x11
0x1abb:	jmp	0x1990


0x1ac6:	push	0x12
0x1acb:	jmp	0x1990


0x1ad6:	push	0x13
0x1adb:	jmp	0x1990


0x1ae6:	push	0x14
0x1aeb:	jmp	0x1990


0x1af6:	push	0x15
0x1afb:	jmp	0x1990


0x1b06:	push	0x16
0x1b0b:	jmp	0x1990


0x1b16:	push	0x17
0x1b1b:	jmp	0x1990


0x1b26:	push	0x18
0x1b2b:	jmp	0x1990


0x1b36:	push	0x19
0x1b3b:	jmp	0x1990


0x1b46:	push	0x1a
0x1b4b:	jmp	0x1990


0x1b56:	push	0x1b
0x1b5b:	jmp	0x1990


0x1b66:	push	0x1c
0x1b6b:	jmp	0x1990


0x1b76:	push	0x1d
0x1b7b:	jmp	0x1990


0x1b86:	push	0x1e
0x1b8b:	jmp	0x1990


0x1b96:	push	0x1f
0x1b9b:	jmp	0x1990


0x1ba6:	push	0x20
0x1bab:	jmp	0x1990


0x1bb6:	push	0x21
0x1bbb:	jmp	0x1990


0x1bc6:	push	0x22
0x1bcb:	jmp	0x1990


0x1bd6:	push	0x23
0x1bdb:	jmp	0x1990


0x1be6:	push	0x24
0x1beb:	jmp	0x1990


0x1bf6:	push	0x25
0x1bfb:	jmp	0x1990


0x1c06:	push	0x26
0x1c0b:	jmp	0x1990


0x1c16:	push	0x27
0x1c1b:	jmp	0x1990


0x1c26:	push	0x28
0x1c2b:	jmp	0x1990


0x1c36:	push	0x29
0x1c3b:	jmp	0x1990


0x1c46:	push	0x2a
0x1c4b:	jmp	0x1990


0x1c56:	push	0x2b
0x1c5b:	jmp	0x1990


0x1c66:	push	0x2c
0x1c6b:	jmp	0x1990


0x1c76:	push	0x2d
0x1c7b:	jmp	0x1990


0x1c86:	push	0x2e
0x1c8b:	jmp	0x1990


0x1c96:	push	0x2f
0x1c9b:	jmp	0x1990


0x1ca6:	push	0x30
0x1cab:	jmp	0x1990


0x1cb6:	push	0x31
0x1cbb:	jmp	0x1990


0x1cc6:	push	0x32
0x1ccb:	jmp	0x1990


0x1cd6:	push	0x33
0x1cdb:	jmp	0x1990


0x1ce6:	push	0x34
0x1ceb:	jmp	0x1990


0x1cf6:	push	0x35
0x1cfb:	jmp	0x1990


0x1d00:	jmp	qword ptr [rip + 0x20c2aa]




0x1d06:	push	0x36
0x1d0b:	jmp	0x1990


0x1d16:	push	0x37
0x1d1b:	jmp	0x1990


0x1d26:	push	0x38
0x1d2b:	jmp	0x1990


0x1d36:	push	0x39
0x1d3b:	jmp	0x1990


0x2bba:	hlt	


0x2bbb:	nop	dword ptr [rax + rax]


0x2bf2:	nop	dword ptr [rax]
0x2bf6:	nop	word ptr cs:[rax + rax]


0x2c42:	nop	dword ptr [rax]
0x2c46:	nop	word ptr cs:[rax + rax]


0x2c8a:	nop	word ptr [rax + rax]


0x2c9a:	nop	word ptr [rax + rax]


0x2dc8:	nop	dword ptr [rax + rax]


0x2f67:	nop	word ptr [rax + rax]


0x392e:	fxch	st(1)
0x3930:	jmp	0x3934


0x3934:	fld	st(0)
0x3936:	fldcw	word ptr [rsp + 0x4c]
0x393a:	fistp	qword ptr [rsp]
0x393d:	fldcw	word ptr [rsp + 0x4e]
0x3941:	fild	qword ptr [rsp]
0x3944:	fxch	st(1)
0x3946:	fucomip	st(1)
0x3948:	jbe	0x395b


0x395b:	test	esi, esi
0x395d:	faddp	st(1)
0x395f:	je	0x397f


0x394a:	fstp	st(0)
0x394c:	mov	rax, qword ptr [rsp]
0x3950:	add	rax, 1
0x3954:	mov	qword ptr [rsp], rax
0x3958:	fild	qword ptr [rsp]
0x395b:	test	esi, esi
0x395d:	faddp	st(1)
0x395f:	je	0x397f


0x3961:	mov	eax, esi
0x3963:	fld	dword ptr [rip + 0x784b]
0x3969:	sub	eax, 1
0x396c:	je	0x3c49


0x3c49:	fdivp	st(1)
0x3c4b:	jmp	0x397f


0x3932:	fxch	st(1)
0x3934:	fld	st(0)
0x3936:	fldcw	word ptr [rsp + 0x4c]
0x393a:	fistp	qword ptr [rsp]
0x393d:	fldcw	word ptr [rsp + 0x4e]
0x3941:	fild	qword ptr [rsp]
0x3944:	fxch	st(1)
0x3946:	fucomip	st(1)
0x3948:	jbe	0x395b


0x3b9e:	fxch	st(1)
0x3ba0:	jmp	0x3ba4


0x3ba4:	fldcw	word ptr [rsp + 0x4c]
0x3ba8:	fistp	qword ptr [rsp]
0x3bab:	fldcw	word ptr [rsp + 0x4e]
0x3baf:	fild	qword ptr [rsp]
0x3bb2:	jmp	0x395b


0x3ba2:	fxch	st(1)
0x3ba4:	fldcw	word ptr [rsp + 0x4c]
0x3ba8:	fistp	qword ptr [rsp]
0x3bab:	fldcw	word ptr [rsp + 0x4e]
0x3baf:	fild	qword ptr [rsp]
0x3bb2:	jmp	0x395b


0x3bb7:	fxch	st(1)
0x3bb9:	jmp	0x3bbd


0x3bbd:	fldz	
0x3bbf:	fucomip	st(1)
0x3bc1:	jbe	0x3934


0x3bc7:	fchs	
0x3bc9:	fld	st(0)
0x3bcb:	fldcw	word ptr [rsp + 0x4c]
0x3bcf:	fistp	qword ptr [rsp + 0x40]
0x3bd3:	fldcw	word ptr [rsp + 0x4e]
0x3bd7:	mov	rax, qword ptr [rsp + 0x40]
0x3bdc:	xor	ecx, ecx
0x3bde:	mov	qword ptr [rsp], rax
0x3be2:	fild	qword ptr [rsp]
0x3be5:	fxch	st(1)
0x3be7:	fucomip	st(1)
0x3be9:	fstp	st(0)
0x3beb:	seta	cl
0x3bee:	add	rax, rcx
0x3bf1:	neg	rax
0x3bf4:	mov	qword ptr [rsp], rax
0x3bf8:	fild	qword ptr [rsp]
0x3bfb:	jmp	0x395b


0x3bbb:	fxch	st(1)
0x3bbd:	fldz	
0x3bbf:	fucomip	st(1)
0x3bc1:	jbe	0x3934


0x3c00:	fxch	st(1)
0x3c02:	jmp	0x3c06


0x3c06:	fldz	
0x3c08:	fucomip	st(1)
0x3c0a:	ja	0x45c4


0x3c10:	fadd	dword ptr [rip + 0x75aa]
0x3c16:	fldcw	word ptr [rsp + 0x4c]
0x3c1a:	fistp	qword ptr [rsp]
0x3c1d:	fldcw	word ptr [rsp + 0x4e]
0x3c21:	fild	qword ptr [rsp]
0x3c24:	jmp	0x395b


0x45c4:	fsub	dword ptr [rip + 0x6bf6]
0x45ca:	fldcw	word ptr [rsp + 0x4c]
0x45ce:	fistp	qword ptr [rsp]
0x45d1:	fldcw	word ptr [rsp + 0x4e]
0x45d5:	fild	qword ptr [rsp]
0x45d8:	jmp	0x395b


0x3c04:	fxch	st(1)
0x3c06:	fldz	
0x3c08:	fucomip	st(1)
0x3c0a:	ja	0x45c4


0x3c29:	fxch	st(1)
0x3c2b:	jmp	0x3c2f


0x3c2f:	fchs	
0x3c31:	fld	st(0)
0x3c33:	fldcw	word ptr [rsp + 0x4c]
0x3c37:	fistp	qword ptr [rsp + 0x40]
0x3c3b:	fldcw	word ptr [rsp + 0x4e]
0x3c3f:	jmp	0x3bd7


0x3bd7:	mov	rax, qword ptr [rsp + 0x40]
0x3bdc:	xor	ecx, ecx
0x3bde:	mov	qword ptr [rsp], rax
0x3be2:	fild	qword ptr [rsp]
0x3be5:	fxch	st(1)
0x3be7:	fucomip	st(1)
0x3be9:	fstp	st(0)
0x3beb:	seta	cl
0x3bee:	add	rax, rcx
0x3bf1:	neg	rax
0x3bf4:	mov	qword ptr [rsp], rax
0x3bf8:	fild	qword ptr [rsp]
0x3bfb:	jmp	0x395b


0x3c2d:	fxch	st(1)
0x3c2f:	fchs	
0x3c31:	fld	st(0)
0x3c33:	fldcw	word ptr [rsp + 0x4c]
0x3c37:	fistp	qword ptr [rsp + 0x40]
0x3c3b:	fldcw	word ptr [rsp + 0x4e]
0x3c3f:	jmp	0x3bd7


0x3e35:	fstp	st(3)
0x3e37:	fxch	st(1)
0x3e39:	fxch	st(2)
0x3e3b:	jmp	0x3e45


0x3e45:	fxch	st(2)
0x3e47:	fxch	st(1)
0x3e49:	mov	edi, 1
0x3e4e:	jmp	0x3e58


0x3e58:	fld	st(0)
0x3e5a:	fldcw	word ptr [rsp + 0x4c]
0x3e5e:	fistp	qword ptr [rsp + 0x20]
0x3e62:	fldcw	word ptr [rsp + 0x4e]
0x3e66:	fild	qword ptr [rsp + 0x20]
0x3e6a:	fxch	st(1)
0x3e6c:	fucomip	st(1)
0x3e6e:	jbe	0x3e84


0x3e84:	test	edi, edi
0x3e86:	faddp	st(2)
0x3e88:	jne	0x4541


0x3e70:	fstp	st(0)
0x3e72:	mov	rax, qword ptr [rsp + 0x20]
0x3e77:	add	rax, 1
0x3e7b:	mov	qword ptr [rsp + 0x20], rax
0x3e80:	fild	qword ptr [rsp + 0x20]
0x3e84:	test	edi, edi
0x3e86:	faddp	st(2)
0x3e88:	jne	0x4541


0x3e8e:	fld1	
0x3e90:	fdivp	st(2)
0x3e92:	fldz	
0x3e94:	fucomip	st(2)
0x3e96:	ja	0x4402


0x4541:	fld	dword ptr [rip + 0x6c6d]
0x4547:	jmp	0x41ee


0x3e3d:	fstp	st(1)
0x3e3f:	fxch	st(1)
0x3e41:	fxch	st(2)
0x3e43:	fxch	st(1)
0x3e45:	fxch	st(2)
0x3e47:	fxch	st(1)
0x3e49:	mov	edi, 1
0x3e4e:	jmp	0x3e58


0x3e50:	fstp	st(1)
0x3e52:	fxch	st(2)
0x3e54:	jmp	0x3e58


0x3e56:	fxch	st(2)
0x3e58:	fld	st(0)
0x3e5a:	fldcw	word ptr [rsp + 0x4c]
0x3e5e:	fistp	qword ptr [rsp + 0x20]
0x3e62:	fldcw	word ptr [rsp + 0x4e]
0x3e66:	fild	qword ptr [rsp + 0x20]
0x3e6a:	fxch	st(1)
0x3e6c:	fucomip	st(1)
0x3e6e:	jbe	0x3e84


0x3f5a:	fxch	st(1)
0x3f5c:	lea	rax, [rip + 0x55a1]
0x3f63:	fstp	xword ptr [rsp + 0x10]
0x3f67:	lea	rbp, [rsp + 0xd0]
0x3f6f:	sub	rsp, 8
0x3f73:	mov	r8, r12
0x3f76:	mov	ecx, 0x80
0x3f7b:	mov	edx, 1
0x3f80:	mov	esi, 0x7f
0x3f85:	push	rax
0x3f86:	mov	rdi, rbp
0x3f89:	xor	eax, eax
0x3f8b:	sub	rsp, 0x10
0x3f8f:	fld	st(0)
0x3f91:	fstp	xword ptr [rsp]
0x3f94:	fstp	xword ptr [rsp + 0x20]
0x3f98:	call	0x19a0


0x408e:	fxch	st(1)
0x4090:	lea	rax, [rip + 0x5479]
0x4097:	jmp	0x3f63


0x409c:	fxch	st(1)
0x409e:	lea	rax, [rip + 0x5469]
0x40a5:	jmp	0x3f63


0x40aa:	fxch	st(1)
0x40ac:	lea	rax, [rip + 0x5459]
0x40b3:	jmp	0x3f63


0x40b8:	fxch	st(1)
0x40ba:	lea	rax, [rip + 0x5449]
0x40c1:	jmp	0x3f63


0x40c6:	fxch	st(1)
0x40c8:	lea	rax, [rip + 0x5439]
0x40cf:	jmp	0x3f63


0x40d4:	fxch	st(1)
0x40d6:	lea	rax, [rip + 0x5429]
0x40dd:	jmp	0x3f63


0x40e2:	fstp	st(3)
0x40e4:	fxch	st(1)
0x40e6:	fxch	st(2)
0x40e8:	jmp	0x40f2


0x40f2:	fxch	st(1)
0x40f4:	fxch	st(2)
0x40f6:	fxch	st(1)
0x40f8:	mov	edi, 1
0x40fd:	jmp	0x4102


0x4102:	fldz	
0x4104:	fucomip	st(3)
0x4106:	ja	0x4634


0x410c:	fxch	st(2)
0x410e:	fadd	dword ptr [rip + 0x70ac]
0x4114:	fldcw	word ptr [rsp + 0x4c]
0x4118:	fistp	qword ptr [rsp + 0x20]
0x411c:	fldcw	word ptr [rsp + 0x4e]
0x4120:	fild	qword ptr [rsp + 0x20]
0x4124:	jmp	0x3e84


0x4634:	fxch	st(2)
0x4636:	fsub	dword ptr [rip + 0x6b84]
0x463c:	fldcw	word ptr [rsp + 0x4c]
0x4640:	fistp	qword ptr [rsp + 0x20]
0x4644:	fldcw	word ptr [rsp + 0x4e]
0x4648:	fild	qword ptr [rsp + 0x20]
0x464c:	jmp	0x3e84


0x40ea:	fstp	st(1)
0x40ec:	fxch	st(1)
0x40ee:	fxch	st(2)
0x40f0:	fxch	st(1)
0x40f2:	fxch	st(1)
0x40f4:	fxch	st(2)
0x40f6:	fxch	st(1)
0x40f8:	mov	edi, 1
0x40fd:	jmp	0x4102


0x4129:	fstp	st(3)
0x412b:	fxch	st(1)
0x412d:	fxch	st(2)
0x412f:	jmp	0x4139


0x4139:	fxch	st(1)
0x413b:	fxch	st(2)
0x413d:	fxch	st(1)
0x413f:	mov	edi, 1
0x4144:	jmp	0x4152


0x4152:	fldz	
0x4154:	fucomip	st(3)
0x4156:	jbe	0x3e56


0x415c:	fxch	st(2)
0x415e:	fchs	
0x4160:	fld	st(0)
0x4162:	fldcw	word ptr [rsp + 0x4c]
0x4166:	fistp	qword ptr [rsp + 0x40]
0x416a:	fldcw	word ptr [rsp + 0x4e]
0x416e:	mov	rax, qword ptr [rsp + 0x40]
0x4173:	xor	ecx, ecx
0x4175:	mov	qword ptr [rsp + 0x20], rax
0x417a:	fild	qword ptr [rsp + 0x20]
0x417e:	fxch	st(1)
0x4180:	fucomip	st(1)
0x4182:	fstp	st(0)
0x4184:	seta	cl
0x4187:	add	rax, rcx
0x418a:	neg	rax
0x418d:	mov	qword ptr [rsp + 0x20], rax
0x4192:	fild	qword ptr [rsp + 0x20]
0x4196:	jmp	0x3e84


0x4131:	fstp	st(1)
0x4133:	fxch	st(1)
0x4135:	fxch	st(2)
0x4137:	fxch	st(1)
0x4139:	fxch	st(1)
0x413b:	fxch	st(2)
0x413d:	fxch	st(1)
0x413f:	mov	edi, 1
0x4144:	jmp	0x4152


0x419b:	fstp	st(3)
0x419d:	fxch	st(1)
0x419f:	fxch	st(2)
0x41a1:	jmp	0x41ab


0x41ab:	fxch	st(2)
0x41ad:	fxch	st(1)
0x41af:	mov	edi, 1
0x41b4:	jmp	0x41c4


0x41c4:	fchs	
0x41c6:	fld	st(0)
0x41c8:	fldcw	word ptr [rsp + 0x4c]
0x41cc:	fistp	qword ptr [rsp + 0x40]
0x41d0:	fldcw	word ptr [rsp + 0x4e]
0x41d4:	jmp	0x416e


0x416e:	mov	rax, qword ptr [rsp + 0x40]
0x4173:	xor	ecx, ecx
0x4175:	mov	qword ptr [rsp + 0x20], rax
0x417a:	fild	qword ptr [rsp + 0x20]
0x417e:	fxch	st(1)
0x4180:	fucomip	st(1)
0x4182:	fstp	st(0)
0x4184:	seta	cl
0x4187:	add	rax, rcx
0x418a:	neg	rax
0x418d:	mov	qword ptr [rsp + 0x20], rax
0x4192:	fild	qword ptr [rsp + 0x20]
0x4196:	jmp	0x3e84


0x41a3:	fstp	st(1)
0x41a5:	fxch	st(1)
0x41a7:	fxch	st(2)
0x41a9:	fxch	st(1)
0x41ab:	fxch	st(2)
0x41ad:	fxch	st(1)
0x41af:	mov	edi, 1
0x41b4:	jmp	0x41c4


0x41d6:	fxch	st(3)
0x41d8:	jmp	0x41dc


0x41dc:	fldcw	word ptr [rsp + 0x4c]
0x41e0:	fistp	qword ptr [rsp + 0x20]
0x41e4:	fldcw	word ptr [rsp + 0x4e]
0x41e8:	fild	qword ptr [rsp + 0x20]
0x41ec:	faddp	st(3)
0x41ee:	mov	eax, edi
0x41f0:	sub	eax, 1
0x41f3:	je	0x4211


0x41da:	fxch	st(3)
0x41dc:	fldcw	word ptr [rsp + 0x4c]
0x41e0:	fistp	qword ptr [rsp + 0x20]
0x41e4:	fldcw	word ptr [rsp + 0x4e]
0x41e8:	fild	qword ptr [rsp + 0x20]
0x41ec:	faddp	st(3)
0x41ee:	mov	eax, edi
0x41f0:	sub	eax, 1
0x41f3:	je	0x4211


0x432a:	fxch	st(2)
0x432c:	fldcw	word ptr [rsp + 0x4c]
0x4330:	fistp	qword ptr [rsp + 0x20]
0x4334:	fldcw	word ptr [rsp + 0x4e]
0x4338:	fild	qword ptr [rsp + 0x20]
0x433c:	faddp	st(2)
0x433e:	fld1	
0x4340:	jmp	0x3e90


0x4345:	xor	edi, edi
0x4347:	jmp	0x4152


0x434c:	fxch	st(2)
0x434e:	xor	edi, edi
0x4350:	jmp	0x41c4


0x4355:	fxch	st(2)
0x4357:	xor	edi, edi
0x4359:	jmp	0x3e58


0x435e:	xor	edi, edi
0x4360:	jmp	0x4102


0x4740:	fxch	st(1)
0x4742:	fldcw	word ptr [rsp + 0x4c]
0x4746:	fistp	qword ptr [rsp + 0x20]
0x474a:	fldcw	word ptr [rsp + 0x4e]
0x474e:	fild	qword ptr [rsp + 0x20]
0x4752:	faddp	st(1)
0x4754:	fxch	st(2)
0x4756:	jmp	0x3e90


0x476c:	nop	dword ptr [rax]


0x4936:	nop	word ptr cs:[rax + rax]


0x5072:	nop	word ptr cs:[rax + rax]
0x507c:	nop	dword ptr [rax]


0x5096:	nop	word ptr cs:[rax + rax]


0x5169:	nop	dword ptr [rax]


0x5728:	nop	dword ptr [rax + rax]


0x5766:	nop	word ptr cs:[rax + rax]


0x577a:	nop	word ptr [rax + rax]


0x5896:	nop	word ptr cs:[rax + rax]


0x5913:	nop	dword ptr [rax]
0x5916:	nop	word ptr cs:[rax + rax]


0x5aad:	nop	dword ptr [rax]


0x5afd:	nop	dword ptr [rax]


0x5b08:	nop	dword ptr [rax + rax]


0x5b18:	nop	dword ptr [rax + rax]


0x5bc4:	nop	word ptr cs:[rax + rax]
0x5bce:	nop	


0x5f94:	nop	
0x5f96:	nop	word ptr cs:[rax + rax]


0x603d:	nop	dword ptr [rax]


0x60df:	nop	


0x61c7:	nop	word ptr [rax + rax]


0x6263:	mov	byte ptr [rsp + 0xe], 1
0x6268:	mov	byte ptr [rsp + 0x7c], 0
0x626d:	xor	r12d, r12d
0x6270:	mov	qword ptr [rsp + 0x50], 0
0x6279:	mov	byte ptr [rsp + 0xf], 1
0x627e:	mov	byte ptr [rsp + 0xd], 0
0x6283:	lea	rax, [rip + 0x51e3]
0x628a:	mov	qword ptr [rsp + 0x18], 1
0x6293:	xor	r15d, r15d
0x6296:	mov	dword ptr [rsp + 8], 2
0x629e:	mov	qword ptr [rsp + 0x48], rax
0x62a3:	xor	r11d, r11d
0x62a6:	mov	rax, rbp
0x62a9:	mov	r8d, r12d
0x62ac:	mov	rbp, r11
0x62af:	mov	r11, rax
0x62b2:	nop	word ptr [rax + rax]
0x62b8:	cmp	r11, rbp
0x62bb:	setne	r12b
0x62bf:	cmp	r11, -1
0x62c3:	jne	0x62d2


0x62c5:	mov	rax, qword ptr [rsp + 0x10]
0x62ca:	cmp	byte ptr [rax + rbp], 0
0x62ce:	setne	r12b
0x62d2:	test	r12b, r12b
0x62d5:	je	0x6930


0x62d2:	test	r12b, r12b
0x62d5:	je	0x6930


0x6930:	cmp	dword ptr [rsp + 8], 2
0x6935:	movzx	ebx, byte ptr [rsp + 0xf]
0x693a:	mov	r12d, r8d
0x693d:	mov	rbp, r11
0x6940:	sete	dl
0x6943:	mov	eax, ebx
0x6945:	test	r15, r15
0x6948:	sete	cl
0x694b:	and	eax, edx
0x694d:	and	al, cl
0x694f:	jne	0x73b6


0x62db:	cmp	dword ptr [rsp + 8], 2
0x62e0:	mov	rdi, qword ptr [rsp + 0x10]
0x62e5:	lea	r9, [rdi + rbp]
0x62e9:	setne	al
0x62ec:	and	al, byte ptr [rsp + 0xd]
0x62f0:	mov	r10d, eax
0x62f3:	je	0x63a0


0x6955:	mov	eax, ebx
0x6957:	xor	eax, 1
0x695a:	and	dl, al
0x695c:	je	0x72cc


0x73b6:	mov	dword ptr [rsp + 8], 2
0x73be:	jmp	0x6d59


0x63a0:	movzx	ebx, byte ptr [r9]
0x63a4:	cmp	bl, 0x7e
0x63a7:	ja	0x66c8


0x62f9:	mov	rax, qword ptr [rsp + 0x18]
0x62fe:	test	rax, rax
0x6301:	je	0x6730


0x72cc:	mov	rbx, qword ptr [rsp + 0x48]
0x72d1:	test	rbx, rbx
0x72d4:	je	0x7302


0x6962:	cmp	byte ptr [rsp + 0x7c], 0
0x6967:	je	0x72ca


0x6d59:	cmp	byte ptr [rsp + 0xd], 0
0x6d5e:	je	0x6d70


0x63ad:	lea	rcx, [rip + 0x5138]
0x63b4:	movzx	edx, bl
0x63b7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x63bb:	add	rax, rcx
0x63be:	jmp	rax


0x66c8:	cmp	qword ptr [rsp + 0x58], 1
0x66ce:	jne	0x6a78


0x6730:	movzx	ebx, byte ptr [r9]
0x6734:	cmp	bl, 0x7e
0x6737:	ja	0x66c0


0x6307:	cmp	r11, -1
0x630b:	lea	rbx, [rbp + rax]
0x6310:	jne	0x6340


0x7302:	cmp	r13, r15
0x7305:	jbe	0x6da9


0x72d6:	test	al, al
0x72d8:	je	0x7302


0x72ca:	mov	eax, edx
0x72cc:	mov	rbx, qword ptr [rsp + 0x48]
0x72d1:	test	rbx, rbx
0x72d4:	je	0x7302


0x696d:	cmp	byte ptr [rsp + 0xe], 0
0x6972:	jne	0x736d


0x6d60:	test	al, al
0x6d62:	mov	eax, 4
0x6d67:	cmove	eax, dword ptr [rsp + 8]
0x6d6c:	mov	dword ptr [rsp + 8], eax


0x66d4:	mov	qword ptr [rsp + 0x38], r11
0x66d9:	mov	byte ptr [rsp + 0x30], r8b
0x66de:	mov	byte ptr [rsp + 0x28], r10b
0x66e3:	call	0x1d30


0x6a78:	lea	rax, [rsp + 0xa0]
0x6a80:	cmp	r11, -1
0x6a84:	mov	qword ptr [rsp + 0xa0], 0
0x6a90:	mov	qword ptr [rsp + 0x28], rax
0x6a95:	jne	0x6ac4


0x6739:	lea	rcx, [rip + 0x4fa8]
0x6740:	movzx	edx, bl
0x6743:	movsxd	rax, dword ptr [rcx + rdx*4]
0x6747:	add	rax, rcx
0x674a:	jmp	rax


0x66c0:	xor	r10d, r10d
0x66c3:	nop	dword ptr [rax + rax]
0x66c8:	cmp	qword ptr [rsp + 0x58], 1
0x66ce:	jne	0x6a78


0x6312:	cmp	rax, 1
0x6316:	jbe	0x6340


0x6340:	cmp	rbx, r11
0x6343:	mov	byte ptr [rsp + 0x28], r10b
0x6348:	ja	0x6900


0x730b:	mov	byte ptr [r14 + r15], 0
0x7310:	jmp	0x6da9


0x72da:	movzx	ecx, byte ptr [rbx]
0x72dd:	mov	rax, rbx
0x72e0:	test	cl, cl
0x72e2:	je	0x7302


0x6978:	test	r13, r13
0x697b:	sete	al
0x697e:	cmp	qword ptr [rsp + 0x50], 0
0x6984:	setne	dl
0x6987:	and	al, dl
0x6989:	je	0x73ac


0x6a97:	mov	rdi, qword ptr [rsp + 0x10]
0x6a9c:	mov	byte ptr [rsp + 0x40], r8b
0x6aa1:	mov	byte ptr [rsp + 0x38], r10b
0x6aa6:	mov	qword ptr [rsp + 0x30], r9
0x6aab:	call	0x1aa0


0x6ac4:	lea	rax, [rsp + 0x9c]
0x6acc:	xor	ecx, ecx
0x6ace:	mov	byte ptr [rsp + 0x7e], bl
0x6ad2:	mov	byte ptr [rsp + 0x7d], r8b
0x6ad7:	mov	rbx, rcx
0x6ada:	mov	qword ptr [rsp + 0x88], r9
0x6ae2:	mov	qword ptr [rsp + 0x38], rax
0x6ae7:	mov	byte ptr [rsp + 0x7f], r10b
0x6aec:	mov	qword ptr [rsp + 0x80], r15
0x6af4:	mov	qword ptr [rsp + 0x40], r14
0x6af9:	mov	qword ptr [rsp + 0x70], r13
0x6afe:	mov	qword ptr [rsp + 0x30], r11
0x6b03:	mov	rax, qword ptr [rsp + 0x10]
0x6b08:	lea	r14, [rbp + rbx]
0x6b0d:	mov	rdx, qword ptr [rsp + 0x30]
0x6b12:	mov	rcx, qword ptr [rsp + 0x28]
0x6b17:	mov	rdi, qword ptr [rsp + 0x38]
0x6b1c:	lea	r13, [rax + r14]
0x6b20:	sub	rdx, r14
0x6b23:	mov	rsi, r13
0x6b26:	call	0x9120


0x6318:	mov	byte ptr [rsp + 0x38], r8b
0x631d:	mov	byte ptr [rsp + 0x30], r10b
0x6322:	mov	qword ptr [rsp + 0x28], r9
0x6327:	call	0x1aa0


0x634e:	mov	rdx, qword ptr [rsp + 0x18]
0x6353:	mov	rsi, qword ptr [rsp + 0x48]
0x6358:	mov	rdi, r9
0x635b:	mov	qword ptr [rsp + 0x40], r11
0x6360:	mov	byte ptr [rsp + 0x38], r8b
0x6365:	mov	qword ptr [rsp + 0x30], r9
0x636a:	call	0x1b70


0x6900:	xor	r10d, r10d
0x6903:	jmp	0x63a0


0x72e4:	mov	rdx, r15
0x72e7:	sub	rax, r15
0x72ea:	cmp	r13, rdx
0x72ed:	jbe	0x72f3


0x73ac:	movzx	eax, byte ptr [rsp + 0x7c]
0x73b1:	jmp	0x72cc


0x698f:	mov	r13, qword ptr [rsp + 0x50]
0x6994:	lea	rbx, [rip + 0x4ad2]
0x699b:	mov	byte ptr [r14], 0x27
0x699f:	mov	dword ptr [rsp + 8], 2
0x69a7:	mov	r15d, 1
0x69ad:	mov	qword ptr [rsp + 0x18], 1
0x69b6:	mov	byte ptr [rsp + 0xf], 0
0x69bb:	mov	qword ptr [rsp + 0x48], rbx
0x69c0:	mov	byte ptr [rsp + 0x7c], al
0x69c4:	jmp	0x62a3


0x72f3:	add	rdx, 1
0x72f7:	movzx	ecx, byte ptr [rax + rdx]
0x72fb:	test	cl, cl
0x72fd:	jne	0x72ea


0x72ef:	mov	byte ptr [r14 + rdx], cl
0x72f3:	add	rdx, 1
0x72f7:	movzx	ecx, byte ptr [rax + rdx]
0x72fb:	test	cl, cl
0x72fd:	jne	0x72ea


0x62a3:	xor	r11d, r11d
0x62a6:	mov	rax, rbp
0x62a9:	mov	r8d, r12d
0x62ac:	mov	rbp, r11
0x62af:	mov	r11, rax
0x62b2:	nop	word ptr [rax + rax]
0x62b8:	cmp	r11, rbp
0x62bb:	setne	r12b
0x62bf:	cmp	r11, -1
0x62c3:	jne	0x62d2


0x72ff:	mov	r15, rdx
0x7302:	cmp	r13, r15
0x7305:	jbe	0x6da9


0x72ea:	cmp	r13, rdx
0x72ed:	jbe	0x72f3


0x636f:	test	eax, eax
0x6371:	mov	r9, qword ptr [rsp + 0x30]
0x6376:	movzx	r8d, byte ptr [rsp + 0x38]
0x637c:	mov	r11, qword ptr [rsp + 0x40]
0x6381:	jne	0x6900


0x6387:	cmp	byte ptr [rsp + 0xf], 0
0x638c:	movzx	r10d, byte ptr [rsp + 0x28]
0x6392:	jne	0x7315


0x7315:	cmp	dword ptr [rsp + 8], 2
0x731a:	movzx	ebx, byte ptr [rsp + 0xf]
0x731f:	mov	rbp, r11
0x7322:	sete	al
0x7325:	mov	byte ptr [rsp + 0xd], bl
0x7329:	jmp	0x6d59


0x6b2b:	test	rax, rax
0x6b2e:	mov	r15, rax
0x6b31:	je	0x6b81


0x6b81:	mov	edx, r12d
0x6b84:	mov	rdi, rbx
0x6b87:	movzx	r8d, byte ptr [rsp + 0x7d]
0x6b8d:	xor	edx, 1
0x6b90:	movzx	ebx, byte ptr [rsp + 0x7e]
0x6b95:	movzx	r10d, byte ptr [rsp + 0x7f]
0x6b9b:	and	dl, byte ptr [rsp + 0xd]
0x6b9f:	mov	r15, qword ptr [rsp + 0x80]
0x6ba7:	mov	r14, qword ptr [rsp + 0x40]
0x6bac:	mov	r13, qword ptr [rsp + 0x70]
0x6bb1:	mov	r11, qword ptr [rsp + 0x30]
0x6bb6:	cmp	rdi, 1
0x6bba:	jbe	0x71bb


0x6b33:	cmp	rax, -1
0x6b37:	je	0x7155


0x71bb:	mov	eax, edx
0x71bd:	jmp	0x6717


0x6bc0:	mov	rcx, rdi
0x6bc3:	xor	esi, esi
0x6bc5:	movzx	r9d, byte ptr [rsp + 0xf]
0x6bcb:	add	rcx, rbp
0x6bce:	mov	rdi, qword ptr [rsp + 0x10]
0x6bd3:	jmp	0x6c8e


0x7155:	mov	rdi, rbx
0x7158:	movzx	r8d, byte ptr [rsp + 0x7d]
0x715e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x7163:	movzx	r10d, byte ptr [rsp + 0x7f]
0x7169:	mov	r15, qword ptr [rsp + 0x80]
0x7171:	xor	r12d, r12d
0x7174:	mov	r14, qword ptr [rsp + 0x40]
0x7179:	mov	r13, qword ptr [rsp + 0x70]
0x717e:	mov	r11, qword ptr [rsp + 0x30]
0x7183:	movzx	edx, byte ptr [rsp + 0xd]
0x7188:	jmp	0x6bb6


0x6b3d:	cmp	rax, -2
0x6b41:	je	0x70e1


0x6717:	test	al, al
0x6719:	jne	0x70b1


0x6c8e:	test	dl, dl
0x6c90:	jne	0x6be0


0x6bb6:	cmp	rdi, 1
0x6bba:	jbe	0x71bb


0x70e1:	mov	r11, qword ptr [rsp + 0x30]
0x70e6:	mov	rsi, r14
0x70e9:	mov	rcx, r13
0x70ec:	mov	rax, rbx
0x70ef:	mov	rdi, rbx
0x70f2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x70f8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x70fd:	mov	r9, qword ptr [rsp + 0x88]
0x7105:	cmp	rsi, r11
0x7108:	movzx	r10d, byte ptr [rsp + 0x7f]
0x710e:	mov	r15, qword ptr [rsp + 0x80]
0x7116:	mov	r14, qword ptr [rsp + 0x40]
0x711b:	mov	r13, qword ptr [rsp + 0x70]
0x7120:	jae	0x7148


0x6b47:	cmp	dword ptr [rsp + 8], 2
0x6b4c:	sete	al
0x6b4f:	and	al, byte ptr [rsp + 0xf]
0x6b53:	jne	0x6cf0


0x671f:	cmp	dword ptr [rsp + 8], 2
0x6724:	sete	dl
0x6727:	jmp	0x63f8


0x70b1:	movzx	edx, byte ptr [rsp + 0xd]
0x70b6:	xor	r12d, r12d
0x70b9:	jmp	0x6bc0


0x6c96:	mov	eax, esi
0x6c98:	xor	eax, 1
0x6c9b:	and	eax, r8d
0x6c9e:	test	r10b, r10b
0x6ca1:	je	0x6cb1


0x6be0:	cmp	dword ptr [rsp + 8], 2
0x6be5:	sete	al
0x6be8:	test	r9b, r9b
0x6beb:	jne	0x70a0


0x7122:	cmp	byte ptr [rcx], 0
0x7125:	jne	0x7137


0x7148:	movzx	edx, byte ptr [rsp + 0xd]
0x714d:	xor	r12d, r12d
0x7150:	jmp	0x6bb6


0x6b59:	mov	edi, dword ptr [rsp + 0x9c]
0x6b60:	call	0x1d10


0x6cf0:	cmp	r15, 1
0x6cf4:	je	0x6b59


0x63f8:	cmp	byte ptr [rsp + 0xd], 1
0x63fd:	jne	0x6512


0x6cb1:	add	rbp, 1
0x6cb5:	cmp	rbp, rcx
0x6cb8:	jae	0x643c


0x6ca3:	cmp	r13, r15
0x6ca6:	jbe	0x6cad


0x6bf1:	mov	esi, r8d
0x6bf4:	xor	esi, 1
0x6bf7:	and	al, sil
0x6bfa:	je	0x6c2b


0x70a0:	movzx	ebx, byte ptr [rsp + 0xf]
0x70a5:	mov	rbp, r11
0x70a8:	mov	byte ptr [rsp + 0xd], bl
0x70ac:	jmp	0x6d59


0x7127:	jmp	0x7148


0x7137:	add	rax, 1
0x713b:	lea	rdx, [rbp + rax]
0x7140:	cmp	r11, rdx
0x7143:	ja	0x7130


0x6cfa:	mov	rdi, qword ptr [rsp + 0x10]
0x6cff:	lea	rcx, [rdi + r15]
0x6d03:	lea	rdx, [rdi + r14 + 1]
0x6d08:	lea	r8, [rcx + r14]
0x6d0c:	jmp	0x6d1d


0x6403:	test	dl, dl
0x6405:	jne	0x6512


0x6512:	cmp	byte ptr [rsp + 0xf], 0
0x6517:	jne	0x640b


0x6cbe:	test	al, al
0x6cc0:	je	0x70be


0x643c:	test	al, al
0x643e:	je	0x6460


0x6cad:	add	r15, 1
0x6cb1:	add	rbp, 1
0x6cb5:	cmp	rbp, rcx
0x6cb8:	jae	0x643c


0x6ca8:	mov	byte ptr [r14 + r15], 0x5c
0x6cad:	add	r15, 1
0x6cb1:	add	rbp, 1
0x6cb5:	cmp	rbp, rcx
0x6cb8:	jae	0x643c


0x6c2b:	cmp	r13, r15
0x6c2e:	jbe	0x6c35


0x6bfc:	cmp	r13, r15
0x6bff:	jbe	0x6c06


0x7145:	mov	rdi, rax
0x7148:	movzx	edx, byte ptr [rsp + 0xd]
0x714d:	xor	r12d, r12d
0x7150:	jmp	0x6bb6


0x7130:	cmp	byte ptr [r9 + rax], 0
0x7135:	je	0x7145


0x6d1d:	movzx	ecx, byte ptr [rdx]
0x6d20:	sub	ecx, 0x5b
0x6d23:	cmp	cl, 0x21
0x6d26:	ja	0x6d10


0x640b:	mov	rsi, qword ptr [rsp + 0x20]
0x6410:	test	rsi, rsi
0x6413:	je	0x6429


0x651d:	jmp	0x6429


0x70be:	xor	r10d, r10d
0x70c1:	jmp	0x6c7d


0x6cc6:	cmp	r13, r15
0x6cc9:	jbe	0x6cd0


0x6460:	cmp	r15, r13
0x6463:	jae	0x6469


0x6440:	cmp	r13, r15
0x6443:	jbe	0x644a


0x6c35:	lea	rax, [r15 + 1]
0x6c39:	cmp	r13, rax
0x6c3c:	jbe	0x6c4b


0x6c30:	mov	byte ptr [r14 + r15], 0x5c
0x6c35:	lea	rax, [r15 + 1]
0x6c39:	cmp	r13, rax
0x6c3c:	jbe	0x6c4b


0x6c06:	lea	rsi, [r15 + 1]
0x6c0a:	cmp	r13, rsi
0x6c0d:	jbe	0x6c15


0x6c01:	mov	byte ptr [r14 + r15], 0x27
0x6c06:	lea	rsi, [r15 + 1]
0x6c0a:	cmp	r13, rsi
0x6c0d:	jbe	0x6c15


0x6d28:	mov	esi, 1
0x6d2d:	shl	rsi, cl
0x6d30:	mov	rcx, rsi
0x6d33:	movabs	rsi, 0x20000002b
0x6d3d:	test	rcx, rsi
0x6d40:	je	0x6d10


0x6d10:	add	rdx, 1
0x6d14:	cmp	r8, rdx
0x6d17:	je	0x6b59


0x6429:	test	r10b, r10b
0x642c:	jne	0x6573


0x6415:	mov	edx, ebx
0x6417:	shr	dl, 5
0x641a:	movzx	edx, dl
0x641d:	mov	edx, dword ptr [rsi + rdx*4]
0x6420:	bt	edx, ebx
0x6423:	jb	0x6573


0x6c7d:	cmp	r13, r15
0x6c80:	jbe	0x6c86


0x6cd0:	lea	rax, [r15 + 1]
0x6cd4:	cmp	r13, rax
0x6cd7:	jbe	0x6cdf


0x6ccb:	mov	byte ptr [r14 + r15], 0x27
0x6cd0:	lea	rax, [r15 + 1]
0x6cd4:	cmp	r13, rax
0x6cd7:	jbe	0x6cdf


0x6465:	mov	byte ptr [r14 + r15], bl
0x6469:	movzx	edi, byte ptr [rsp + 0xe]
0x646e:	add	r15, 1
0x6472:	mov	eax, 0
0x6477:	test	r12b, r12b
0x647a:	cmove	edi, eax
0x647d:	mov	byte ptr [rsp + 0xe], dil
0x6482:	jmp	0x62b8


0x6469:	movzx	edi, byte ptr [rsp + 0xe]
0x646e:	add	r15, 1
0x6472:	mov	eax, 0
0x6477:	test	r12b, r12b
0x647a:	cmove	edi, eax
0x647d:	mov	byte ptr [rsp + 0xe], dil
0x6482:	jmp	0x62b8


0x644a:	lea	rax, [r15 + 1]
0x644e:	cmp	r13, rax
0x6451:	jbe	0x6459


0x6445:	mov	byte ptr [r14 + r15], 0x27
0x644a:	lea	rax, [r15 + 1]
0x644e:	cmp	r13, rax
0x6451:	jbe	0x6459


0x6c4b:	lea	rax, [r15 + 2]
0x6c4f:	cmp	r13, rax
0x6c52:	jbe	0x6c64


0x6c3e:	mov	eax, ebx
0x6c40:	shr	al, 6
0x6c43:	add	eax, 0x30
0x6c46:	mov	byte ptr [r14 + r15 + 1], al
0x6c4b:	lea	rax, [r15 + 2]
0x6c4f:	cmp	r13, rax
0x6c52:	jbe	0x6c64


0x6c15:	lea	rsi, [r15 + 2]
0x6c19:	cmp	r13, rsi
0x6c1c:	jbe	0x6c24


0x6c0f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x6c15:	lea	rsi, [r15 + 2]
0x6c19:	cmp	r13, rsi
0x6c1c:	jbe	0x6c24


0x6d42:	mov	r14, qword ptr [rsp + 0x40]
0x6d47:	mov	r13, qword ptr [rsp + 0x70]
0x6d4c:	mov	rbp, qword ptr [rsp + 0x30]
0x6d51:	mov	dword ptr [rsp + 8], 2
0x6d59:	cmp	byte ptr [rsp + 0xd], 0
0x6d5e:	je	0x6d70


0x6432:	xor	eax, 1
0x6435:	add	rbp, 1
0x6439:	and	eax, r8d
0x643c:	test	al, al
0x643e:	je	0x6460


0x6573:	cmp	dword ptr [rsp + 8], 2
0x6578:	sete	dl
0x657b:	cmp	byte ptr [rsp + 0xf], 0
0x6580:	mov	eax, edx
0x6582:	jne	0x6dd8


0x6c86:	movzx	ebx, byte ptr [rdi + rbp]
0x6c8a:	add	r15, 1
0x6c8e:	test	dl, dl
0x6c90:	jne	0x6be0


0x6c82:	mov	byte ptr [r14 + r15], bl
0x6c86:	movzx	ebx, byte ptr [rdi + rbp]
0x6c8a:	add	r15, 1
0x6c8e:	test	dl, dl
0x6c90:	jne	0x6be0


0x6cdf:	add	r15, 2
0x6ce3:	xor	r10d, r10d
0x6ce6:	xor	r8d, r8d
0x6ce9:	jmp	0x6c7d


0x6cd9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x6cdf:	add	r15, 2
0x6ce3:	xor	r10d, r10d
0x6ce6:	xor	r8d, r8d
0x6ce9:	jmp	0x6c7d


0x62b8:	cmp	r11, rbp
0x62bb:	setne	r12b
0x62bf:	cmp	r11, -1
0x62c3:	jne	0x62d2


0x6459:	add	r15, 2
0x645d:	xor	r8d, r8d
0x6460:	cmp	r15, r13
0x6463:	jae	0x6469


0x6453:	mov	byte ptr [r14 + r15 + 1], 0x27
0x6459:	add	r15, 2
0x645d:	xor	r8d, r8d
0x6460:	cmp	r15, r13
0x6463:	jae	0x6469


0x6c64:	and	ebx, 7
0x6c67:	add	rbp, 1
0x6c6b:	add	r15, 3
0x6c6f:	add	ebx, 0x30
0x6c72:	cmp	rbp, rcx
0x6c75:	jae	0x6460


0x6c54:	mov	eax, ebx
0x6c56:	shr	al, 3
0x6c59:	and	eax, 7
0x6c5c:	add	eax, 0x30
0x6c5f:	mov	byte ptr [r14 + r15 + 2], al
0x6c64:	and	ebx, 7
0x6c67:	add	rbp, 1
0x6c6b:	add	r15, 3
0x6c6f:	add	ebx, 0x30
0x6c72:	cmp	rbp, rcx
0x6c75:	jae	0x6460


0x6c24:	add	r15, 3
0x6c28:	mov	r8d, eax
0x6c2b:	cmp	r13, r15
0x6c2e:	jbe	0x6c35


0x6c1e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x6c24:	add	r15, 3
0x6c28:	mov	r8d, eax
0x6c2b:	cmp	r13, r15
0x6c2e:	jbe	0x6c35


0x6588:	mov	eax, r8d
0x658b:	xor	eax, 1
0x658e:	and	al, dl
0x6590:	je	0x65c1


0x6dd8:	mov	rbp, r11
0x6ddb:	jmp	0x6d59


0x6c7b:	mov	esi, edx
0x6c7d:	cmp	r13, r15
0x6c80:	jbe	0x6c86


0x65c1:	cmp	r13, r15
0x65c4:	jbe	0x65cb


0x6592:	cmp	r13, r15
0x6595:	jbe	0x659c


0x65cb:	add	r15, 1
0x65cf:	add	rbp, 1
0x65d3:	jmp	0x6460


0x65c6:	mov	byte ptr [r14 + r15], 0x5c
0x65cb:	add	r15, 1
0x65cf:	add	rbp, 1
0x65d3:	jmp	0x6460


0x659c:	lea	rdx, [r15 + 1]
0x65a0:	cmp	r13, rdx
0x65a3:	jbe	0x65ab


0x6597:	mov	byte ptr [r14 + r15], 0x27
0x659c:	lea	rdx, [r15 + 1]
0x65a0:	cmp	r13, rdx
0x65a3:	jbe	0x65ab


0x65ab:	lea	rdx, [r15 + 2]
0x65af:	cmp	r13, rdx
0x65b2:	jbe	0x65ba


0x65a5:	mov	byte ptr [r14 + r15 + 1], 0x24
0x65ab:	lea	rdx, [r15 + 2]
0x65af:	cmp	r13, rdx
0x65b2:	jbe	0x65ba


0x65ba:	add	r15, 3
0x65be:	mov	r8d, eax
0x65c1:	cmp	r13, r15
0x65c4:	jbe	0x65cb


0x65b4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x65ba:	add	r15, 3
0x65be:	mov	r8d, eax
0x65c1:	cmp	r13, r15
0x65c4:	jbe	0x65cb


0x6b65:	mov	rdi, qword ptr [rsp + 0x28]
0x6b6a:	test	eax, eax
0x6b6c:	mov	eax, 0
0x6b71:	cmove	r12d, eax
0x6b75:	add	rbx, r15
0x6b78:	call	0x1d00


0x6b7d:	test	eax, eax
0x6b7f:	je	0x6b03


0x6b03:	mov	rax, qword ptr [rsp + 0x10]
0x6b08:	lea	r14, [rbp + rbx]
0x6b0d:	mov	rdx, qword ptr [rsp + 0x30]
0x6b12:	mov	rcx, qword ptr [rsp + 0x28]
0x6b17:	mov	rdi, qword ptr [rsp + 0x38]
0x6b1c:	lea	r13, [rax + r14]
0x6b20:	sub	rdx, r14
0x6b23:	mov	rsi, r13
0x6b26:	call	0x9120


0x632c:	movzx	r8d, byte ptr [rsp + 0x38]
0x6332:	movzx	r10d, byte ptr [rsp + 0x30]
0x6338:	mov	r11, rax
0x633b:	mov	r9, qword ptr [rsp + 0x28]
0x6340:	cmp	rbx, r11
0x6343:	mov	byte ptr [rsp + 0x28], r10b
0x6348:	ja	0x6900


0x6ab0:	movzx	r8d, byte ptr [rsp + 0x40]
0x6ab6:	movzx	r10d, byte ptr [rsp + 0x38]
0x6abc:	mov	r11, rax
0x6abf:	mov	r9, qword ptr [rsp + 0x30]
0x6ac4:	lea	rax, [rsp + 0x9c]
0x6acc:	xor	ecx, ecx
0x6ace:	mov	byte ptr [rsp + 0x7e], bl
0x6ad2:	mov	byte ptr [rsp + 0x7d], r8b
0x6ad7:	mov	rbx, rcx
0x6ada:	mov	qword ptr [rsp + 0x88], r9
0x6ae2:	mov	qword ptr [rsp + 0x38], rax
0x6ae7:	mov	byte ptr [rsp + 0x7f], r10b
0x6aec:	mov	qword ptr [rsp + 0x80], r15
0x6af4:	mov	qword ptr [rsp + 0x40], r14
0x6af9:	mov	qword ptr [rsp + 0x70], r13
0x6afe:	mov	qword ptr [rsp + 0x30], r11
0x6b03:	mov	rax, qword ptr [rsp + 0x10]
0x6b08:	lea	r14, [rbp + rbx]
0x6b0d:	mov	rdx, qword ptr [rsp + 0x30]
0x6b12:	mov	rcx, qword ptr [rsp + 0x28]
0x6b17:	mov	rdi, qword ptr [rsp + 0x38]
0x6b1c:	lea	r13, [rax + r14]
0x6b20:	sub	rdx, r14
0x6b23:	mov	rsi, r13
0x6b26:	call	0x9120


0x66e8:	mov	rcx, qword ptr [rax]
0x66eb:	movzx	edx, bl
0x66ee:	movzx	r10d, byte ptr [rsp + 0x28]
0x66f4:	movzx	r8d, byte ptr [rsp + 0x30]
0x66fa:	mov	r11, qword ptr [rsp + 0x38]
0x66ff:	mov	edi, 1
0x6704:	movzx	eax, word ptr [rcx + rdx*2]
0x6708:	and	ax, 0x4000
0x670c:	setne	r12b
0x6710:	sete	al
0x6713:	and	al, byte ptr [rsp + 0xd]
0x6717:	test	al, al
0x6719:	jne	0x70b1


0x63c0:	xor	r10d, r10d
0x63c3:	cmp	r11, 1
0x63c7:	setne	al
0x63ca:	cmp	r11, -1
0x63ce:	jne	0x63dc


0x63d0:	mov	rax, qword ptr [rsp + 0x10]
0x63d5:	cmp	byte ptr [rax + 1], 0
0x63d9:	setne	al
0x63dc:	cmp	dword ptr [rsp + 8], 2
0x63e1:	sete	dl
0x63e4:	test	al, al
0x63e6:	je	0x6638


0x63dc:	cmp	dword ptr [rsp + 8], 2
0x63e1:	sete	dl
0x63e4:	test	al, al
0x63e6:	je	0x6638


0x6638:	test	rbp, rbp
0x663b:	jne	0x63ec


0x63ec:	xor	r12d, r12d
0x63ef:	xor	eax, eax
0x63f1:	nop	dword ptr [rax]
0x63f8:	cmp	byte ptr [rsp + 0xd], 1
0x63fd:	jne	0x6512


0x6641:	movzx	eax, byte ptr [rsp + 0xf]
0x6646:	and	al, dl
0x6648:	je	0x63f8


0x664e:	mov	rbp, r11
0x6651:	mov	dword ptr [rsp + 8], 2
0x6659:	jmp	0x6d59


0x6a58:	cmp	byte ptr [rsp + 0xf], 0
0x6a5d:	jne	0x7280


0x64a0:	cmp	eax, 5
0x64a3:	je	0x6a18


0x6a63:	xor	r12d, r12d
0x6a66:	xor	eax, eax
0x6a68:	mov	ebx, 0x3f
0x6a6d:	jmp	0x6429


0x7280:	mov	rbp, r11
0x7283:	movzx	eax, byte ptr [rsp + 0xf]
0x7288:	jmp	0x6d59


0x6a18:	test	byte ptr [rsp + 0x78], 4
0x6a1d:	je	0x6a40


0x64a9:	cmp	eax, 2
0x64ac:	mov	ebx, 0x3f
0x64b1:	sete	dl
0x64b4:	xor	r12d, r12d
0x64b7:	xor	eax, eax
0x64b9:	jmp	0x63f8


0x6a40:	xor	edx, edx
0x6a42:	xor	r12d, r12d
0x6a45:	xor	eax, eax
0x6a47:	mov	ebx, 0x3f
0x6a4c:	jmp	0x63f8


0x6a1f:	lea	rcx, [rbp + 2]
0x6a23:	cmp	rcx, r11
0x6a26:	jae	0x6a40


0x6a28:	mov	rax, qword ptr [rsp + 0x10]
0x6a2d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x6a32:	je	0x71c2


0x71c2:	movzx	ebx, byte ptr [rax + rcx]
0x71c6:	cmp	bl, 0x3e
0x71c9:	ja	0x6a40


0x71cf:	movabs	rax, 0x7000a38200000000
0x71d9:	bt	rax, rbx
0x71dd:	jae	0x6a40


0x71e3:	cmp	byte ptr [rsp + 0xf], 0
0x71e8:	jne	0x73d2


0x71ee:	cmp	r13, r15
0x71f1:	jbe	0x71f8


0x73d2:	mov	rbp, r11
0x73d5:	jmp	0x6d70


0x71f8:	lea	rax, [r15 + 1]
0x71fc:	cmp	r13, rax
0x71ff:	jbe	0x7207


0x71f3:	mov	byte ptr [r14 + r15], 0x3f
0x71f8:	lea	rax, [r15 + 1]
0x71fc:	cmp	r13, rax
0x71ff:	jbe	0x7207


0x7207:	lea	rax, [r15 + 2]
0x720b:	cmp	r13, rax
0x720e:	jbe	0x7216


0x7201:	mov	byte ptr [r14 + r15 + 1], 0x22
0x7207:	lea	rax, [r15 + 2]
0x720b:	cmp	r13, rax
0x720e:	jbe	0x7216


0x7216:	lea	rax, [r15 + 3]
0x721a:	cmp	r13, rax
0x721d:	jbe	0x7225


0x7210:	mov	byte ptr [r14 + r15 + 2], 0x22
0x7216:	lea	rax, [r15 + 3]
0x721a:	cmp	r13, rax
0x721d:	jbe	0x7225


0x7225:	add	r15, 4
0x7229:	xor	edx, edx
0x722b:	xor	r12d, r12d
0x722e:	xor	eax, eax
0x7230:	mov	rbp, rcx
0x7233:	jmp	0x63f8


0x721f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x7225:	add	r15, 4
0x7229:	xor	edx, edx
0x722b:	xor	r12d, r12d
0x722e:	xor	eax, eax
0x7230:	mov	rbp, rcx
0x7233:	jmp	0x63f8


0x69d0:	cmp	byte ptr [rsp + 0xf], 0
0x69d5:	jne	0x7280


0x64ce:	mov	byte ptr [rsp + 0x7c], r12b
0x64d3:	xor	edx, edx
0x64d5:	xor	eax, eax
0x64d7:	mov	ebx, 0x27
0x64dc:	jmp	0x63f8


0x69db:	test	r13, r13
0x69de:	je	0x6de0


0x6de0:	cmp	r13, r15
0x6de3:	jbe	0x6dea


0x69e4:	xor	edx, edx
0x69e6:	cmp	qword ptr [rsp + 0x50], 0
0x69ec:	jne	0x6de0


0x6dea:	lea	rax, [r15 + 1]
0x6dee:	cmp	r13, rax
0x6df1:	jbe	0x6df9


0x6de5:	mov	byte ptr [r14 + r15], 0x27
0x6dea:	lea	rax, [r15 + 1]
0x6dee:	cmp	r13, rax
0x6df1:	jbe	0x6df9


0x69f2:	mov	qword ptr [rsp + 0x50], r13
0x69f7:	add	r15, 3
0x69fb:	xor	eax, eax
0x69fd:	mov	byte ptr [rsp + 0x7c], r12b
0x6a02:	xor	r8d, r8d
0x6a05:	mov	r13, rdx
0x6a08:	mov	ebx, 0x27
0x6a0d:	jmp	0x6429


0x6df9:	lea	rax, [r15 + 2]
0x6dfd:	cmp	r13, rax
0x6e00:	jbe	0x73f2


0x6df3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x6df9:	lea	rax, [r15 + 2]
0x6dfd:	cmp	r13, rax
0x6e00:	jbe	0x73f2


0x73f2:	mov	rdx, r13
0x73f5:	mov	r13, qword ptr [rsp + 0x50]
0x73fa:	jmp	0x69f2


0x6e06:	mov	rdx, r13
0x6e09:	mov	byte ptr [r14 + r15 + 2], 0x27
0x6e0f:	mov	r13, qword ptr [rsp + 0x50]
0x6e14:	jmp	0x69f2


0x6504:	cmp	byte ptr [rsp + 0xd], 0
0x6509:	jne	0x6570


0x650b:	mov	ebx, edx
0x650d:	xor	r12d, r12d
0x6510:	xor	eax, eax
0x6512:	cmp	byte ptr [rsp + 0xf], 0
0x6517:	jne	0x640b


0x6570:	xor	r12d, r12d
0x6573:	cmp	dword ptr [rsp + 8], 2
0x6578:	sete	dl
0x657b:	cmp	byte ptr [rsp + 0xf], 0
0x6580:	mov	eax, edx
0x6582:	jne	0x6dd8


0x6910:	cmp	byte ptr [rsp + 0xf], 0
0x6915:	jne	0x7280


0x6543:	cmp	byte ptr [rsp + 0xd], 0
0x6548:	je	0x6760


0x691b:	add	rbp, 1
0x691f:	mov	eax, r8d
0x6922:	xor	r12d, r12d
0x6925:	mov	ebx, 0x5c
0x692a:	jmp	0x643c


0x6760:	mov	edx, 0x5c
0x6765:	mov	ebx, 0x5c
0x676a:	jmp	0x6504


0x654e:	cmp	byte ptr [rsp + 0xf], 0
0x6553:	je	0x6760


0x6559:	cmp	qword ptr [rsp + 0x18], 0
0x655f:	jne	0x691b


0x6565:	mov	ebx, 0x5c
0x656a:	nop	word ptr [rax + rax]
0x6570:	xor	r12d, r12d
0x6573:	cmp	dword ptr [rsp + 8], 2
0x6578:	sete	dl
0x657b:	cmp	byte ptr [rsp + 0xf], 0
0x6580:	mov	eax, edx
0x6582:	jne	0x6dd8


0x65eb:	xor	edx, edx
0x65ed:	test	byte ptr [rsp + 0x78], 1
0x65f2:	je	0x650b


0x67b3:	cmp	dword ptr [rsp + 8], 2
0x67b8:	sete	dl
0x67bb:	cmp	byte ptr [rsp + 0xf], 0
0x67c0:	jne	0x735a


0x65f8:	add	rbp, 1
0x65fc:	jmp	0x62b8


0x67c6:	mov	eax, r8d
0x67c9:	mov	rcx, r15
0x67cc:	xor	eax, 1
0x67cf:	and	al, dl
0x67d1:	je	0x6800


0x735a:	movzx	ebx, byte ptr [rsp + 0xf]
0x735f:	mov	rbp, r11
0x7362:	mov	eax, edx
0x7364:	mov	byte ptr [rsp + 0xd], bl
0x7368:	jmp	0x6d59


0x6800:	cmp	r13, rcx
0x6803:	jbe	0x680a


0x67d3:	cmp	r13, r15
0x67d6:	jbe	0x67dd


0x680a:	cmp	dword ptr [rsp + 8], 2
0x680f:	lea	r15, [rcx + 1]
0x6813:	je	0x6e19


0x6805:	mov	byte ptr [r14 + rcx], 0x5c
0x680a:	cmp	dword ptr [rsp + 8], 2
0x680f:	lea	r15, [rcx + 1]
0x6813:	je	0x6e19


0x67dd:	lea	rcx, [r15 + 1]
0x67e1:	cmp	r13, rcx
0x67e4:	jbe	0x67ec


0x67d8:	mov	byte ptr [r14 + r15], 0x27
0x67dd:	lea	rcx, [r15 + 1]
0x67e1:	cmp	r13, rcx
0x67e4:	jbe	0x67ec


0x6e19:	mov	eax, r12d
0x6e1c:	mov	ebx, 0x30
0x6e21:	xor	r12d, r12d
0x6e24:	jmp	0x6429


0x6819:	lea	rax, [rbp + 1]
0x681d:	cmp	rax, r11
0x6820:	jae	0x683b


0x67ec:	lea	rcx, [r15 + 2]
0x67f0:	cmp	r13, rcx
0x67f3:	ja	0x6e29


0x67e6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x67ec:	lea	rcx, [r15 + 2]
0x67f0:	cmp	r13, rcx
0x67f3:	ja	0x6e29


0x6822:	mov	rax, qword ptr [rsp + 0x10]
0x6827:	movzx	eax, byte ptr [rax + rbp + 1]
0x682c:	mov	byte ptr [rsp + 0x28], al
0x6830:	sub	eax, 0x30
0x6833:	cmp	al, 9
0x6835:	jbe	0x7069


0x683b:	mov	eax, r12d
0x683e:	mov	ebx, 0x30
0x6843:	xor	r12d, r12d
0x6846:	jmp	0x63f8


0x67f9:	lea	rcx, [r15 + 3]
0x67fd:	mov	r8d, eax
0x6800:	cmp	r13, rcx
0x6803:	jbe	0x680a


0x6e29:	mov	byte ptr [r14 + r15 + 2], 0x27
0x6e2f:	jmp	0x67f9


0x7069:	cmp	r13, r15
0x706c:	jbe	0x7073


0x7073:	lea	rax, [rcx + 2]
0x7077:	cmp	r13, rax
0x707a:	jbe	0x7082


0x706e:	mov	byte ptr [r14 + r15], 0x30
0x7073:	lea	rax, [rcx + 2]
0x7077:	cmp	r13, rax
0x707a:	jbe	0x7082


0x7082:	mov	eax, r12d
0x7085:	lea	r15, [rcx + 3]
0x7089:	xor	r12d, r12d
0x708c:	mov	ebx, 0x30
0x7091:	jmp	0x63f8


0x707c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x7082:	mov	eax, r12d
0x7085:	lea	r15, [rcx + 3]
0x7089:	xor	r12d, r12d
0x708c:	mov	ebx, 0x30
0x7091:	jmp	0x63f8


0x64f2:	cmp	dword ptr [rsp + 8], 2
0x64f7:	sete	al
0x64fa:	and	al, byte ptr [rsp + 0xf]
0x64fe:	jne	0x664e


0x68b0:	mov	edx, 0xd
0x68b5:	xor	r10d, r10d
0x68b8:	mov	ebx, 0x72
0x68bd:	jmp	0x64f2


0x6e34:	test	ebx, ebx
0x6e36:	jne	0x6263


0x6e3c:	mov	byte ptr [rsp + 0xd], 1
0x6e41:	test	r13, r13
0x6e44:	jne	0x73da


0x6e4a:	lea	rax, [rip + 0x461c]
0x6e51:	mov	qword ptr [rsp + 0x50], 0
0x6e5a:	mov	byte ptr [rsp + 0xe], 1
0x6e5f:	mov	byte ptr [rsp + 0x7c], 0
0x6e64:	xor	r12d, r12d
0x6e67:	mov	byte ptr [rsp + 0xf], 0
0x6e6c:	mov	qword ptr [rsp + 0x18], 1
0x6e75:	mov	qword ptr [rsp + 0x48], rax
0x6e7a:	mov	r15d, 1
0x6e80:	mov	dword ptr [rsp + 8], 2
0x6e88:	jmp	0x62a3


0x73da:	mov	byte ptr [rsp + 0xe], 1
0x73df:	xor	eax, eax
0x73e1:	xor	r12d, r12d
0x73e4:	mov	qword ptr [rsp + 0x50], 0
0x73ed:	jmp	0x6994


0x6994:	lea	rbx, [rip + 0x4ad2]
0x699b:	mov	byte ptr [r14], 0x27
0x699f:	mov	dword ptr [rsp + 8], 2
0x69a7:	mov	r15d, 1
0x69ad:	mov	qword ptr [rsp + 0x18], 1
0x69b6:	mov	byte ptr [rsp + 0xf], 0
0x69bb:	mov	qword ptr [rsp + 0x48], rbx
0x69c0:	mov	byte ptr [rsp + 0x7c], al
0x69c4:	jmp	0x62a3


0x6e98:	test	r13, r13
0x6e9b:	je	0x70c6


0x728d:	lea	rax, [rip + 0x41d7]
0x7294:	mov	byte ptr [rsp + 0xe], 1
0x7299:	mov	byte ptr [rsp + 0x7c], 0
0x729e:	xor	r12d, r12d
0x72a1:	mov	qword ptr [rsp + 0x50], 0
0x72aa:	mov	byte ptr [rsp + 0xf], 1
0x72af:	mov	byte ptr [rsp + 0xd], 1
0x72b4:	mov	qword ptr [rsp + 0x18], 1
0x72bd:	xor	r15d, r15d
0x72c0:	mov	qword ptr [rsp + 0x48], rax
0x72c5:	jmp	0x62a3


0x70c6:	mov	qword ptr [rsp + 0x50], 0
0x70cf:	mov	byte ptr [rsp + 0xe], 1
0x70d4:	xor	r12d, r12d
0x70d7:	mov	byte ptr [rsp + 0x7c], 0
0x70dc:	jmp	0x6ebb


0x6ea1:	mov	byte ptr [r14], 0x22
0x6ea5:	mov	byte ptr [rsp + 0xe], 1
0x6eaa:	xor	r12d, r12d
0x6ead:	mov	byte ptr [rsp + 0x7c], 0
0x6eb2:	mov	qword ptr [rsp + 0x50], 0
0x6ebb:	lea	rax, [rip + 0x45a9]
0x6ec2:	mov	byte ptr [rsp + 0xf], 0
0x6ec7:	mov	byte ptr [rsp + 0xd], 1
0x6ecc:	mov	qword ptr [rsp + 0x18], 1
0x6ed5:	mov	r15d, 1
0x6edb:	mov	qword ptr [rsp + 0x48], rax
0x6ee0:	jmp	0x62a3


0x6ebb:	lea	rax, [rip + 0x45a9]
0x6ec2:	mov	byte ptr [rsp + 0xf], 0
0x6ec7:	mov	byte ptr [rsp + 0xd], 1
0x6ecc:	mov	qword ptr [rsp + 0x18], 1
0x6ed5:	mov	r15d, 1
0x6edb:	mov	qword ptr [rsp + 0x48], rax
0x6ee0:	jmp	0x62a3


0x6ee5:	lea	rax, [rip + 0x457f]
0x6eec:	mov	byte ptr [rsp + 0xe], 1
0x6ef1:	mov	byte ptr [rsp + 0x7c], 0
0x6ef6:	xor	r12d, r12d
0x6ef9:	mov	qword ptr [rsp + 0x50], 0
0x6f02:	mov	byte ptr [rsp + 0xf], 1
0x6f07:	mov	byte ptr [rsp + 0xd], 1
0x6f0c:	mov	qword ptr [rsp + 0x18], 1
0x6f15:	xor	r15d, r15d
0x6f18:	mov	qword ptr [rsp + 0x48], rax
0x6f1d:	mov	dword ptr [rsp + 8], 5
0x6f25:	jmp	0x62a3


0x6f2a:	mov	byte ptr [rsp + 0xe], 1
0x6f2f:	mov	byte ptr [rsp + 0x7c], 0
0x6f34:	xor	r12d, r12d
0x6f37:	mov	qword ptr [rsp + 0x50], 0
0x6f40:	mov	byte ptr [rsp + 0xf], 0
0x6f45:	xor	r15d, r15d
0x6f48:	mov	byte ptr [rsp + 0xd], 1
0x6f4d:	mov	qword ptr [rsp + 0x18], 0
0x6f56:	mov	qword ptr [rsp + 0x48], 0
0x6f5f:	jmp	0x62a3


0x6f64:	cmp	dword ptr [rsp + 8], 0xa
0x6f69:	je	0x6fc1


0x6fc1:	xor	r15d, r15d
0x6fc4:	test	ebx, ebx
0x6fc6:	je	0x718d


0x6f6b:	lea	rsi, [rip + 0x44fd]
0x6f72:	xor	edi, edi
0x6f74:	mov	edx, 5
0x6f79:	call	0x1a80


0x718d:	mov	rdx, qword ptr [rsp + 0x68]
0x7192:	movzx	eax, byte ptr [rdx]
0x7195:	test	al, al
0x7197:	je	0x6fcc


0x6fcc:	test	ebx, ebx
0x6fce:	mov	rbx, qword ptr [rsp + 0x60]
0x6fd3:	setne	byte ptr [rsp + 0xf]
0x6fd8:	xor	r12d, r12d
0x6fdb:	mov	rdi, rbx
0x6fde:	call	0x1aa0


0x71a9:	add	r15, 1
0x71ad:	movzx	eax, byte ptr [rdx + r15]
0x71b2:	test	al, al
0x71b4:	jne	0x71a0


0x71a5:	mov	byte ptr [r14 + r15], al
0x71a9:	add	r15, 1
0x71ad:	movzx	eax, byte ptr [rdx + r15]
0x71b2:	test	al, al
0x71b4:	jne	0x71a0


0x71b6:	jmp	0x6fcc


0x71a0:	cmp	r13, r15
0x71a3:	jbe	0x71a9


0x6fe3:	mov	qword ptr [rsp + 0x48], rbx
0x6fe8:	mov	qword ptr [rsp + 0x18], rax
0x6fed:	mov	byte ptr [rsp + 0xe], 1
0x6ff2:	mov	byte ptr [rsp + 0x7c], 0
0x6ff7:	mov	qword ptr [rsp + 0x50], 0
0x7000:	mov	byte ptr [rsp + 0xd], 1
0x7005:	jmp	0x62a3


0x6f7e:	mov	rcx, rax
0x6f81:	mov	qword ptr [rsp + 0x68], rax
0x6f86:	lea	rax, [rip + 0x44e2]
0x6f8d:	cmp	rcx, rax
0x6f90:	je	0x732e


0x732e:	mov	esi, dword ptr [rsp + 8]
0x7332:	mov	rdi, rcx
0x7335:	call	0x60e0


0x6f96:	lea	rsi, [rip + 0x44d0]
0x6f9d:	xor	edi, edi
0x6f9f:	mov	edx, 5
0x6fa4:	call	0x1a80


0x6fa9:	mov	rcx, rax
0x6fac:	mov	qword ptr [rsp + 0x60], rax
0x6fb1:	lea	rax, [rip + 0x44b5]
0x6fb8:	cmp	rcx, rax
0x6fbb:	je	0x7344


0x7344:	mov	esi, dword ptr [rsp + 8]
0x7348:	mov	rdi, rcx
0x734b:	call	0x60e0


0x7350:	mov	qword ptr [rsp + 0x60], rax
0x7355:	jmp	0x6fc1


0x733a:	mov	qword ptr [rsp + 0x68], rax
0x733f:	jmp	0x6f96


0x700a:	mov	byte ptr [rsp + 0xe], 1
0x700f:	mov	byte ptr [rsp + 0x7c], 0
0x7014:	xor	r12d, r12d
0x7017:	mov	qword ptr [rsp + 0x50], 0
0x7020:	mov	byte ptr [rsp + 0xf], 0
0x7025:	xor	r15d, r15d
0x7028:	mov	byte ptr [rsp + 0xd], 0
0x702d:	mov	qword ptr [rsp + 0x18], 0
0x7036:	mov	qword ptr [rsp + 0x48], 0
0x703f:	jmp	0x62a3


0x7044:	mov	byte ptr [rsp + 0xe], 1
0x7049:	mov	byte ptr [rsp + 0x7c], 0
0x704e:	xor	r12d, r12d
0x7051:	mov	qword ptr [rsp + 0x50], 0
0x705a:	mov	byte ptr [rsp + 0xf], 1
0x705f:	mov	byte ptr [rsp + 0xd], 1
0x7064:	jmp	0x6283


0x6283:	lea	rax, [rip + 0x51e3]
0x628a:	mov	qword ptr [rsp + 0x18], 1
0x6293:	xor	r15d, r15d
0x6296:	mov	dword ptr [rsp + 8], 2
0x629e:	mov	qword ptr [rsp + 0x48], rax
0x62a3:	xor	r11d, r11d
0x62a6:	mov	rax, rbp
0x62a9:	mov	r8d, r12d
0x62ac:	mov	rbp, r11
0x62af:	mov	r11, rax
0x62b2:	nop	word ptr [rax + rax]
0x62b8:	cmp	r11, rbp
0x62bb:	setne	r12b
0x62bf:	cmp	r11, -1
0x62c3:	jne	0x62d2


0x7238:	test	ebx, ebx
0x723a:	je	0x73c8


0x73c8:	mov	byte ptr [rsp + 0xd], 0
0x73cd:	jmp	0x6e41


0x7240:	lea	rax, [rip + 0x4226]
0x7247:	mov	byte ptr [rsp + 0xe], 1
0x724c:	mov	byte ptr [rsp + 0x7c], 0
0x7251:	xor	r12d, r12d
0x7254:	mov	qword ptr [rsp + 0x50], 0
0x725d:	mov	byte ptr [rsp + 0xf], 1
0x7262:	mov	byte ptr [rsp + 0xd], 0
0x7267:	mov	qword ptr [rsp + 0x18], 1
0x7270:	xor	r15d, r15d
0x7273:	mov	qword ptr [rsp + 0x48], rax
0x7278:	jmp	0x62a3


0x6e41:	test	r13, r13
0x6e44:	jne	0x73da


0x7404:	nop	
0x7406:	nop	word ptr cs:[rax + rax]


0x75bb:	nop	dword ptr [rax + rax]


0x75f6:	nop	word ptr cs:[rax + rax]


0x7611:	nop	dword ptr [rax + rax]
0x7616:	nop	word ptr cs:[rax + rax]


0x7631:	nop	dword ptr [rax + rax]
0x7636:	nop	word ptr cs:[rax + rax]


0x7675:	nop	
0x7676:	nop	word ptr cs:[rax + rax]


0x7695:	nop	
0x7696:	nop	word ptr cs:[rax + rax]


0x7744:	nop	
0x7746:	nop	word ptr cs:[rax + rax]


0x7833:	nop	dword ptr [rax]
0x7836:	nop	word ptr cs:[rax + rax]


0x784a:	nop	word ptr [rax + rax]


0x78e3:	nop	dword ptr [rax]
0x78e6:	nop	word ptr cs:[rax + rax]


0x7903:	nop	dword ptr [rax]
0x7906:	nop	word ptr cs:[rax + rax]


0x791c:	nop	dword ptr [rax]


0x7938:	nop	dword ptr [rax + rax]


0x7954:	nop	
0x7956:	nop	word ptr cs:[rax + rax]


0x79ee:	nop	


0x7a7a:	nop	word ptr [rax + rax]


0x7a8c:	nop	dword ptr [rax]


0x7a9f:	nop	


0x7b38:	nop	dword ptr [rax + rax]


0x7b61:	nop	dword ptr [rax + rax]
0x7b66:	nop	word ptr cs:[rax + rax]


0x7b7a:	nop	word ptr [rax + rax]


0x7c0e:	nop	


0x7ca1:	nop	dword ptr [rax + rax]
0x7ca6:	nop	word ptr cs:[rax + rax]


0x7cbc:	nop	dword ptr [rax]


0x7cd7:	nop	word ptr [rax + rax]


0x7cf3:	nop	dword ptr [rax]
0x7cf6:	nop	word ptr cs:[rax + rax]


0x7d0c:	nop	dword ptr [rax]


0x7d24:	nop	
0x7d26:	nop	word ptr cs:[rax + rax]


0x7d43:	nop	dword ptr [rax]
0x7d46:	nop	word ptr cs:[rax + rax]


0x7d68:	nop	dword ptr [rax + rax]


0x8187:	nop	word ptr [rax + rax]


0x8228:	nop	dword ptr [rax + rax]


0x8305:	nop	
0x8306:	nop	word ptr cs:[rax + rax]


0x83aa:	nop	word ptr [rax + rax]


0x83d4:	nop	
0x83d6:	nop	word ptr cs:[rax + rax]


0x83e2:	nop	dword ptr [rax]
0x83e6:	nop	word ptr cs:[rax + rax]


0x8426:	nop	word ptr cs:[rax + rax]


0x8454:	nop	
0x8456:	nop	word ptr cs:[rax + rax]


0x84e2:	nop	dword ptr [rax]
0x84e6:	nop	word ptr cs:[rax + rax]


0x853a:	nop	word ptr [rax + rax]


0x8557:	nop	word ptr [rax + rax]


0x858e:	nop	


0x85b8:	nop	dword ptr [rax + rax]


0x85d3:	nop	word ptr cs:[rax + rax]
0x85dd:	nop	dword ptr [rax]


0x8615:	nop	word ptr cs:[rax + rax]
0x861f:	nop	


0x8638:	nop	dword ptr [rax + rax]


0x87f0:	movabs	r8, 0x8000000000000000
0x87fa:	movsxd	rsi, eax
0x87fd:	mov	rax, r8
0x8800:	cqo	
0x8802:	idiv	rsi
0x8805:	cmp	rbp, rax
0x8808:	mov	r9, rax
0x880b:	jl	0x8cb5


0x8cb5:	mov	eax, 1
0x8cba:	mov	rbp, r8
0x8cbd:	jmp	0x8848


0x8811:	movabs	r10, 0x7fffffffffffffff
0x881b:	mov	rax, r10
0x881e:	cqo	
0x8820:	idiv	rsi
0x8823:	cmp	rbp, rax
0x8826:	jg	0x8cc2


0x8848:	or	r12d, eax
0x884b:	nop	dword ptr [rax + rax]
0x8850:	movsxd	rax, edi
0x8853:	add	rcx, rax
0x8856:	mov	eax, r12d
0x8859:	or	eax, 2
0x885c:	mov	qword ptr [rbx], rcx
0x885f:	cmp	byte ptr [rcx], 0
0x8862:	cmovne	r12d, eax
0x8866:	jmp	0x86c4


0x882c:	imul	rbp, rsi
0x8830:	cmp	r9, rbp
0x8833:	jg	0x8cb5


0x8cc2:	mov	eax, 1
0x8cc7:	mov	rbp, r10
0x8cca:	jmp	0x8848


0x8839:	cmp	rax, rbp
0x883c:	jl	0x8cc2


0x8842:	imul	rbp, rsi
0x8846:	xor	eax, eax
0x8848:	or	r12d, eax
0x884b:	nop	dword ptr [rax + rax]
0x8850:	movsxd	rax, edi
0x8853:	add	rcx, rax
0x8856:	mov	eax, r12d
0x8859:	or	eax, 2
0x885c:	mov	qword ptr [rbx], rcx
0x885f:	cmp	byte ptr [rcx], 0
0x8862:	cmovne	r12d, eax
0x8866:	jmp	0x86c4


0x8bb0:	mov	r12d, 1
0x8bb6:	movabs	rbp, 0x8000000000000000
0x8bc0:	jmp	0x8850


0x8883:	movabs	rax, 0x3fffffffffffffff
0x888d:	cmp	rbp, rax
0x8890:	jg	0x8c70


0x8850:	movsxd	rax, edi
0x8853:	add	rcx, rax
0x8856:	mov	eax, r12d
0x8859:	or	eax, 2
0x885c:	mov	qword ptr [rbx], rcx
0x885f:	cmp	byte ptr [rcx], 0
0x8862:	cmovne	r12d, eax
0x8866:	jmp	0x86c4


0x8896:	add	rbp, rbp
0x8899:	jmp	0x8850


0x8c70:	mov	r12d, 1
0x8c76:	movabs	rbp, 0x7fffffffffffffff
0x8c80:	jmp	0x8850


0x88b3:	movabs	rax, 0x3fffffffffffff
0x88bd:	cmp	rbp, rax
0x88c0:	jg	0x8c70


0x88c6:	shl	rbp, 9
0x88ca:	jmp	0x8850


0x891f:	cmp	r10, rbp
0x8922:	jle	0x8900


0x8900:	mov	rax, r9
0x8903:	cqo	
0x8905:	idiv	rsi
0x8908:	cmp	rax, rbp
0x890b:	jl	0x8bf8


0x8924:	mov	r11d, 1
0x892a:	movabs	rbp, 0x8000000000000000
0x8934:	jmp	0x8915


0x8bf8:	mov	r11d, 1
0x8bfe:	movabs	rbp, 0x7fffffffffffffff
0x8c08:	jmp	0x8915


0x8911:	imul	rbp, rsi
0x8915:	sub	r8d, 1
0x8919:	je	0x8a40


0x8915:	sub	r8d, 1
0x8919:	je	0x8a40


0x8a40:	or	r12d, r11d
0x8a43:	jmp	0x8850


0x898f:	cmp	r10, rbp
0x8992:	jle	0x8970


0x8970:	mov	rax, r9
0x8973:	cqo	
0x8975:	idiv	rsi
0x8978:	cmp	rax, rbp
0x897b:	jl	0x8bc8


0x8994:	mov	r11d, 1
0x899a:	movabs	rbp, 0x8000000000000000
0x89a4:	jmp	0x8985


0x8bc8:	mov	r11d, 1
0x8bce:	movabs	rbp, 0x7fffffffffffffff
0x8bd8:	jmp	0x8985


0x8981:	imul	rbp, rsi
0x8985:	sub	r8d, 1
0x8989:	je	0x8a40


0x8985:	sub	r8d, 1
0x8989:	je	0x8a40


0x89ce:	sub	r8, 1
0x89d2:	mov	rax, r8
0x89d5:	cqo	
0x89d7:	idiv	rsi
0x89da:	cmp	rbp, rax
0x89dd:	jg	0x8c70


0x89e3:	imul	rbp, rsi
0x89e7:	jmp	0x8850


0x8a21:	mov	rax, r9
0x8a24:	cqo	
0x8a26:	idiv	rsi
0x8a29:	cmp	rax, rbp
0x8a2c:	jl	0x8ca0


0x8c10:	mov	r11d, 1
0x8c16:	movabs	rbp, 0x8000000000000000
0x8c20:	jmp	0x8a36


0x8ca0:	mov	r11d, 1
0x8ca6:	movabs	rbp, 0x7fffffffffffffff
0x8cb0:	jmp	0x8a36


0x8a32:	imul	rbp, rsi
0x8a36:	sub	r8d, 1
0x8a3a:	jne	0x8a18


0x8a36:	sub	r8d, 1
0x8a3a:	jne	0x8a18


0x8a18:	cmp	r10, rbp
0x8a1b:	jg	0x8c10


0x8a9b:	cmp	r10, rbp
0x8a9e:	jle	0x8a80


0x8a80:	mov	rax, r9
0x8a83:	cqo	
0x8a85:	idiv	rsi
0x8a88:	cmp	rax, rbp
0x8a8b:	jl	0x8c28


0x8aa0:	mov	r11d, 1
0x8aa6:	movabs	rbp, 0x8000000000000000
0x8ab0:	jmp	0x8a95


0x8c28:	mov	r11d, 1
0x8c2e:	movabs	rbp, 0x7fffffffffffffff
0x8c38:	jmp	0x8a95


0x8a91:	imul	rbp, rsi
0x8a95:	sub	r8d, 1
0x8a99:	je	0x8a40


0x8a95:	sub	r8d, 1
0x8a99:	je	0x8a40


0x8b07:	cmp	r10, rbp
0x8b0a:	jle	0x8ae8


0x8ae8:	mov	rax, r9
0x8aeb:	cqo	
0x8aed:	idiv	rsi
0x8af0:	cmp	rax, rbp
0x8af3:	jl	0x8c40


0x8b0c:	mov	r11d, 1
0x8b12:	movabs	rbp, 0x8000000000000000
0x8b1c:	jmp	0x8afd


0x8c40:	mov	r11d, 1
0x8c46:	movabs	rbp, 0x7fffffffffffffff
0x8c50:	jmp	0x8afd


0x8af9:	imul	rbp, rsi
0x8afd:	sub	r8d, 1
0x8b01:	je	0x8a40


0x8afd:	sub	r8d, 1
0x8b01:	je	0x8a40


0x8b33:	movabs	rax, 0x1fffffffffffff
0x8b3d:	cmp	rbp, rax
0x8b40:	jg	0x8c70


0x8b46:	shl	rbp, 0xa
0x8b4a:	jmp	0x8850


0x8b7d:	mov	rax, r9
0x8b80:	cqo	
0x8b82:	idiv	rsi
0x8b85:	cmp	rax, rbp
0x8b88:	jl	0x8c58


0x8be0:	mov	r11d, 1
0x8be6:	movabs	rbp, 0x8000000000000000
0x8bf0:	jmp	0x8b92


0x8c58:	mov	r11d, 1
0x8c5e:	movabs	rbp, 0x7fffffffffffffff
0x8c68:	jmp	0x8b92


0x8b8e:	imul	rbp, rsi
0x8b92:	sub	r8d, 1
0x8b96:	jne	0x8b78


0x8b92:	sub	r8d, 1
0x8b96:	jne	0x8b78


0x8b98:	jmp	0x8a40


0x8b78:	cmp	r10, rbp
0x8b7b:	jg	0x8be0


0x8cf3:	nop	word ptr cs:[rax + rax]
0x8cfd:	nop	dword ptr [rax]


0x8ed8:	mov	rax, rbx
0x8edb:	mul	rsi
0x8ede:	jo	0x90d1


0x90d1:	or	rax, 0xffffffffffffffff
0x90d5:	mov	r8d, 1
0x90db:	jmp	0x8ee7


0x8ee4:	xor	r8d, r8d
0x8ee7:	mul	rsi
0x8eea:	jo	0x90c2


0x8ee7:	mul	rsi
0x8eea:	jo	0x90c2


0x90c2:	mov	r8d, 1
0x90c8:	or	rbx, 0xffffffffffffffff
0x90cc:	jmp	0x8ef3


0x8ef0:	mov	rbx, rax
0x8ef3:	or	ebp, r8d
0x8ef6:	nop	word ptr cs:[rax + rax]
0x8f00:	movsxd	rdi, edi
0x8f03:	mov	eax, ebp
0x8f05:	add	rcx, rdi
0x8f08:	or	eax, 2
0x8f0b:	mov	qword ptr [r15], rcx
0x8f0e:	cmp	byte ptr [rcx], 0
0x8f11:	mov	qword ptr [r14], rbx
0x8f14:	cmovne	ebp, eax
0x8f17:	jmp	0x8ddd


0x8ef3:	or	ebp, r8d
0x8ef6:	nop	word ptr cs:[rax + rax]
0x8f00:	movsxd	rdi, edi
0x8f03:	mov	eax, ebp
0x8f05:	add	rcx, rdi
0x8f08:	or	eax, 2
0x8f0b:	mov	qword ptr [r15], rcx
0x8f0e:	cmp	byte ptr [rcx], 0
0x8f11:	mov	qword ptr [r14], rbx
0x8f14:	cmovne	ebp, eax
0x8f17:	jmp	0x8ddd


0x8f27:	mov	edx, 2
0x8f2c:	mov	rax, rdx
0x8f2f:	mul	rbx
0x8f32:	jo	0x8fce


0x8fce:	mov	ebp, 1
0x8fd3:	or	rbx, 0xffffffffffffffff
0x8fd7:	jmp	0x8f00


0x8f38:	add	rbx, rbx
0x8f3b:	jmp	0x8f00


0x8f00:	movsxd	rdi, edi
0x8f03:	mov	eax, ebp
0x8f05:	add	rcx, rdi
0x8f08:	or	eax, 2
0x8f0b:	mov	qword ptr [r15], rcx
0x8f0e:	cmp	byte ptr [rcx], 0
0x8f11:	mov	qword ptr [r14], rbx
0x8f14:	cmovne	ebp, eax
0x8f17:	jmp	0x8ddd


0x8f3d:	mov	edx, 0x200
0x8f42:	mov	rax, rdx
0x8f45:	mul	rbx
0x8f48:	jo	0x8fce


0x8f4e:	shl	rbx, 9
0x8f52:	jmp	0x8f00


0x8f54:	mov	r8d, 7
0x8f5a:	xor	r9d, r9d
0x8f5d:	nop	dword ptr [rax]
0x8f60:	mov	rax, rbx
0x8f63:	mul	rsi
0x8f66:	mov	rbx, rax
0x8f69:	jo	0x90fe


0x90fe:	mov	r9d, 1
0x9104:	or	rbx, 0xffffffffffffffff
0x9108:	jmp	0x8f6f


0x8f6f:	sub	r8d, 1
0x8f73:	jne	0x8f60


0x8f75:	or	ebp, r9d
0x8f78:	jmp	0x8f00


0x8f60:	mov	rax, rbx
0x8f63:	mul	rsi
0x8f66:	mov	rbx, rax
0x8f69:	jo	0x90fe


0x8f7a:	mov	r8d, 8
0x8f80:	xor	r9d, r9d
0x8f83:	nop	dword ptr [rax + rax]
0x8f88:	mov	rax, rbx
0x8f8b:	mul	rsi
0x8f8e:	mov	rbx, rax
0x8f91:	jo	0x90e0


0x90e0:	mov	r9d, 1
0x90e6:	or	rbx, 0xffffffffffffffff
0x90ea:	jmp	0x8f97


0x8f97:	sub	r8d, 1
0x8f9b:	jne	0x8f88


0x8f9d:	jmp	0x8f75


0x8f88:	mov	rax, rbx
0x8f8b:	mul	rsi
0x8f8e:	mov	rbx, rax
0x8f91:	jo	0x90e0


0x8f9f:	mov	r8d, 4
0x8fa5:	xor	r9d, r9d
0x8fa8:	mov	rax, rbx
0x8fab:	mul	rsi
0x8fae:	mov	rbx, rax
0x8fb1:	jo	0x90b3


0x90b3:	mov	r9d, 1
0x90b9:	or	rbx, 0xffffffffffffffff
0x90bd:	jmp	0x8fb7


0x8fb7:	sub	r8d, 1
0x8fbb:	jne	0x8fa8


0x8fbd:	jmp	0x8f75


0x8fa8:	mov	rax, rbx
0x8fab:	mul	rsi
0x8fae:	mov	rbx, rax
0x8fb1:	jo	0x90b3


0x8fbf:	mov	rax, rbx
0x8fc2:	mul	rsi
0x8fc5:	mov	rbx, rax
0x8fc8:	jno	0x8f00


0x90ef:	mov	r9d, 1
0x90f5:	or	rbx, 0xffffffffffffffff
0x90f9:	jmp	0x8ff8


0x8ff8:	sub	r8d, 1
0x8ffc:	jne	0x8fe9


0x8ffe:	jmp	0x8f75


0x8fe9:	mov	rax, rbx
0x8fec:	mul	rsi
0x8fef:	mov	rbx, rax
0x8ff2:	jo	0x90ef


0x9003:	mov	r8d, 6
0x9009:	xor	r9d, r9d
0x900c:	mov	rax, rbx
0x900f:	mul	rsi
0x9012:	mov	rbx, rax
0x9015:	jo	0x90a4


0x90a4:	mov	r9d, 1
0x90aa:	or	rbx, 0xffffffffffffffff
0x90ae:	jmp	0x901b


0x901b:	sub	r8d, 1
0x901f:	jne	0x900c


0x9021:	jmp	0x8f75


0x900c:	mov	rax, rbx
0x900f:	mul	rsi
0x9012:	mov	rbx, rax
0x9015:	jo	0x90a4


0x9026:	mov	edx, 0x400
0x902b:	mov	rax, rdx
0x902e:	mul	rbx
0x9031:	jo	0x8fce


0x9033:	shl	rbx, 0xa
0x9037:	jmp	0x8f00


0x903c:	mov	rax, rbx
0x903f:	mul	rsi
0x9042:	jo	0x910d


0x910d:	mov	r8d, 1
0x9113:	or	rax, 0xffffffffffffffff
0x9117:	jmp	0x904b


0x9048:	xor	r8d, r8d
0x904b:	mul	rsi
0x904e:	jno	0x8ee7


0x904b:	mul	rsi
0x904e:	jno	0x8ee7


0x9054:	mov	r8d, 1
0x905a:	or	rax, 0xffffffffffffffff
0x905e:	jmp	0x8ee7


0x911c:	nop	dword ptr [rax]


0x91a3:	nop	word ptr cs:[rax + rax]
0x91ad:	nop	dword ptr [rax]


0x922d:	nop	dword ptr [rax]


0x92cc:	nop	dword ptr [rax]


0x934b:	nop	dword ptr [rax + rax]


0x93e7:	nop	word ptr [rax + rax]


0x9455:	nop	
0x9456:	nop	word ptr cs:[rax + rax]


0x9462:	nop	word ptr cs:[rax + rax]
0x946c:	nop	dword ptr [rax]


0x4100:	fstp	st(1)
0x4102:	fldz	
0x4104:	fucomip	st(3)
0x4106:	ja	0x4634


0x4150:	fstp	st(1)
0x4152:	fldz	
0x4154:	fucomip	st(3)
0x4156:	jbe	0x3e56


0x41c0:	fstp	st(1)
0x41c2:	fxch	st(2)
0x41c4:	fchs	
0x41c6:	fld	st(0)
0x41c8:	fldcw	word ptr [rsp + 0x4c]
0x41cc:	fistp	qword ptr [rsp + 0x40]
0x41d0:	fldcw	word ptr [rsp + 0x4e]
0x41d4:	jmp	0x416e


0x6490:	xor	r10d, r10d
0x6493:	mov	eax, dword ptr [rsp + 8]
0x6497:	cmp	eax, 2
0x649a:	je	0x6a58


0x64c0:	xor	r10d, r10d
0x64c3:	cmp	dword ptr [rsp + 8], 2
0x64c8:	je	0x69d0


0x64e8:	mov	edx, 9
0x64ed:	mov	ebx, 0x74
0x64f2:	cmp	dword ptr [rsp + 8], 2
0x64f7:	sete	al
0x64fa:	and	al, byte ptr [rsp + 0xf]
0x64fe:	jne	0x664e


0x6528:	mov	edx, 8
0x652d:	mov	ebx, 0x62
0x6532:	jmp	0x6504


0x6538:	cmp	dword ptr [rsp + 8], 2
0x653d:	je	0x6910


0x65e0:	cmp	byte ptr [rsp + 0xd], 0
0x65e5:	jne	0x67b3


0x6608:	cmp	dword ptr [rsp + 8], 2
0x660d:	sete	dl
0x6610:	xor	eax, eax
0x6612:	jmp	0x63f8


0x6620:	mov	edx, 7
0x6625:	mov	ebx, 0x61
0x662a:	jmp	0x6504


0x6630:	cmp	dword ptr [rsp + 8], 2
0x6635:	sete	dl
0x6638:	test	rbp, rbp
0x663b:	jne	0x63ec


0x6660:	cmp	dword ptr [rsp + 8], 2
0x6665:	sete	dl
0x6668:	xor	r12d, r12d
0x666b:	jmp	0x6641


0x6670:	cmp	dword ptr [rsp + 8], 2
0x6675:	mov	ebx, 0x20
0x667a:	sete	dl
0x667d:	jmp	0x6641


0x6680:	mov	edx, 0xd
0x6685:	mov	ebx, 0x72
0x668a:	jmp	0x64f2


0x6690:	mov	edx, 0xc
0x6695:	mov	ebx, 0x66
0x669a:	jmp	0x6504


0x66a0:	mov	edx, 0xb
0x66a5:	mov	ebx, 0x76
0x66aa:	jmp	0x6504


0x66b0:	mov	edx, 0xa
0x66b5:	mov	ebx, 0x6e
0x66ba:	jmp	0x64f2


0x6750:	xor	r10d, r10d
0x6753:	cmp	byte ptr [rsp + 0xd], 0
0x6758:	jne	0x654e


0x6770:	mov	edx, 0xc
0x6775:	xor	r10d, r10d
0x6778:	mov	ebx, 0x66
0x677d:	jmp	0x6504


0x6788:	mov	edx, 0xa
0x678d:	xor	r10d, r10d
0x6790:	mov	ebx, 0x6e
0x6795:	jmp	0x64f2


0x67a0:	mov	ebx, 0x61
0x67a5:	jmp	0x6570


0x67b0:	xor	r10d, r10d
0x67b3:	cmp	dword ptr [rsp + 8], 2
0x67b8:	sete	dl
0x67bb:	cmp	byte ptr [rsp + 0xf], 0
0x67c0:	jne	0x735a


0x6850:	cmp	dword ptr [rsp + 8], 2
0x6855:	mov	r12d, r10d
0x6858:	sete	dl
0x685b:	xor	r10d, r10d
0x685e:	xor	eax, eax
0x6860:	jmp	0x63f8


0x6868:	cmp	dword ptr [rsp + 8], 2
0x686d:	sete	dl
0x6870:	xor	r10d, r10d
0x6873:	jmp	0x6638


0x6880:	cmp	dword ptr [rsp + 8], 2
0x6885:	sete	dl
0x6888:	xor	r10d, r10d
0x688b:	xor	r12d, r12d
0x688e:	jmp	0x6641


0x6898:	cmp	dword ptr [rsp + 8], 2
0x689d:	mov	r12d, r10d
0x68a0:	mov	ebx, 0x20
0x68a5:	sete	dl
0x68a8:	xor	r10d, r10d
0x68ab:	jmp	0x6641


0x68c8:	mov	ebx, 0x76
0x68cd:	jmp	0x6570


0x68d8:	mov	edx, 9
0x68dd:	xor	r10d, r10d
0x68e0:	mov	ebx, 0x74
0x68e5:	jmp	0x64f2


0x68f0:	mov	ebx, 0x62
0x68f5:	jmp	0x6570


0x6e90:	test	ebx, ebx
0x6e92:	jne	0x728d


0x8870:	movabs	rax, 0xc000000000000000
0x887a:	cmp	rbp, rax
0x887d:	jl	0x8bb0


0x88a0:	movabs	rax, 0xffc0000000000000
0x88aa:	cmp	rbp, rax
0x88ad:	jl	0x8bb0


0x88d0:	movsxd	rsi, eax
0x88d3:	movabs	rax, 0x8000000000000000
0x88dd:	mov	r8d, 7
0x88e3:	cqo	
0x88e5:	xor	r11d, r11d
0x88e8:	movabs	r9, 0x7fffffffffffffff
0x88f2:	idiv	rsi
0x88f5:	mov	r10, rax
0x88f8:	jmp	0x891f


0x8940:	movsxd	rsi, eax
0x8943:	movabs	rax, 0x8000000000000000
0x894d:	mov	r8d, 8
0x8953:	cqo	
0x8955:	xor	r11d, r11d
0x8958:	movabs	r9, 0x7fffffffffffffff
0x8962:	idiv	rsi
0x8965:	mov	r10, rax
0x8968:	jmp	0x898f


0x89b0:	movabs	r8, 0x8000000000000000
0x89ba:	movsxd	rsi, eax
0x89bd:	mov	rax, r8
0x89c0:	cqo	
0x89c2:	idiv	rsi
0x89c5:	cmp	rbp, rax
0x89c8:	jl	0x8bb0


0x89f0:	movsxd	rsi, eax
0x89f3:	movabs	rax, 0x8000000000000000
0x89fd:	mov	r8d, 3
0x8a03:	cqo	
0x8a05:	xor	r11d, r11d
0x8a08:	movabs	r9, 0x7fffffffffffffff
0x8a12:	idiv	rsi
0x8a15:	mov	r10, rax
0x8a18:	cmp	r10, rbp
0x8a1b:	jg	0x8c10


0x8a50:	movsxd	rsi, eax
0x8a53:	movabs	rax, 0x8000000000000000
0x8a5d:	mov	r8d, 6
0x8a63:	cqo	
0x8a65:	xor	r11d, r11d
0x8a68:	movabs	r9, 0x7fffffffffffffff
0x8a72:	idiv	rsi
0x8a75:	mov	r10, rax
0x8a78:	jmp	0x8a9b


0x8ab8:	movsxd	rsi, eax
0x8abb:	movabs	rax, 0x8000000000000000
0x8ac5:	mov	r8d, 5
0x8acb:	cqo	
0x8acd:	xor	r11d, r11d
0x8ad0:	movabs	r9, 0x7fffffffffffffff
0x8ada:	idiv	rsi
0x8add:	mov	r10, rax
0x8ae0:	jmp	0x8b07


0x8b20:	movabs	rax, 0xffe0000000000000
0x8b2a:	cmp	rbp, rax
0x8b2d:	jl	0x8bb0


0x8b50:	movsxd	rsi, eax
0x8b53:	movabs	rax, 0x8000000000000000
0x8b5d:	mov	r8d, 4
0x8b63:	cqo	
0x8b65:	xor	r11d, r11d
0x8b68:	movabs	r9, 0x7fffffffffffffff
0x8b72:	idiv	rsi
0x8b75:	mov	r10, rax
0x8b78:	cmp	r10, rbp
0x8b7b:	jg	0x8be0


0x8fe0:	mov	r8d, 5
0x8fe6:	xor	r9d, r9d
0x8fe9:	mov	rax, rbx
0x8fec:	mul	rsi
0x8fef:	mov	rbx, rax
0x8ff2:	jo	0x90ef


0x1df6:	nop	word ptr cs:[rax + rax]


0x1e9c:	nop	dword ptr [rax]


0x1eee:	nop	


0x1f56:	nop	word ptr cs:[rax + rax]


0x1f85:	nop	dword ptr [rax]


0x1fbc:	nop	dword ptr [rax]


0x1fd3:	nop	dword ptr [rax + rax]


0x2038:	nop	dword ptr [rax + rax]


0x2053:	nop	dword ptr [rax + rax]


0x2067:	nop	word ptr [rax + rax]


0x2093:	nop	dword ptr [rax + rax]


0x20db:	nop	dword ptr [rax + rax]


0x2138:	nop	dword ptr [rax + rax]


0x2183:	nop	dword ptr [rax + rax]


0x2194:	nop	dword ptr [rax]


0x21ab:	nop	dword ptr [rax + rax]


0x22da:	nop	word ptr [rax + rax]


0x249e:	nop	


0x24ee:	nop	


0x2765:	nop	dword ptr [rax]


0x279a:	nop	word ptr [rax + rax]


0x2be6:	nop	word ptr cs:[rax + rax]


0x2c37:	nop	word ptr [rax + rax]


0x2c81:	nop	dword ptr [rax]


0x2d2a:	nop	word ptr [rax + rax]


0x2d73:	nop	dword ptr [rax + rax]


0x2d7c:	nop	dword ptr [rax]


0x2d99:	nop	dword ptr [rax]


0x2db2:	nop	word ptr [rax + rax]


0x2e81:	nop	dword ptr [rax]


0x2edb:	nop	dword ptr [rax + rax]


0x2fa8:	nop	dword ptr [rax + rax]


0x3007:	nop	word ptr [rax + rax]


0x3065:	nop	dword ptr [rax]


0x3082:	nop	word ptr [rax + rax]


0x3195:	nop	dword ptr [rax]


0x31fe:	nop	


0x32b6:	nop	word ptr cs:[rax + rax]


0x32c8:	nop	dword ptr [rax + rax]


0x3317:	nop	word ptr [rax + rax]


0x332b:	nop	dword ptr [rax + rax]


0x33aa:	nop	word ptr [rax + rax]


0x345d:	nop	dword ptr [rax]


0x3478:	nop	dword ptr [rax + rax]


0x348f:	nop	


0x34cb:	nop	dword ptr [rax + rax]


0x3549:	nop	dword ptr [rax]


0x3637:	nop	word ptr [rax + rax]


0x36db:	nop	dword ptr [rax + rax]


0x372a:	nop	word ptr [rax + rax]


0x375a:	nop	word ptr [rax + rax]


0x379a:	nop	word ptr [rax + rax]


0x37ce:	nop	


0x40ff:	nop	


0x4146:	nop	word ptr cs:[rax + rax]


0x41b6:	nop	word ptr cs:[rax + rax]


0x4216:	nop	word ptr cs:[rax + rax]


0x4514:	nop	dword ptr [rax]


0x47c1:	nop	dword ptr [rax]


0x482b:	nop	dword ptr [rax + rax]


0x4874:	nop	dword ptr [rax]


0x48ea:	nop	word ptr [rax + rax]


0x4906:	nop	word ptr cs:[rax + rax]


0x4915:	nop	dword ptr [rax]


0x508d:	nop	dword ptr [rax]


0x50e6:	nop	word ptr cs:[rax + rax]


0x5132:	nop	word ptr [rax + rax]


0x51c9:	nop	dword ptr [rax]


0x5296:	nop	word ptr cs:[rax + rax]


0x52fe:	nop	


0x5327:	nop	word ptr [rax + rax]


0x53e6:	nop	word ptr cs:[rax + rax]


0x53f9:	nop	dword ptr [rax]


0x541d:	nop	dword ptr [rax]


0x542f:	nop	


0x549e:	nop	


0x57c6:	nop	word ptr cs:[rax + rax]


0x5853:	nop	dword ptr [rax + rax]


0x5887:	nop	word ptr [rax + rax]


0x58fd:	nop	dword ptr [rax]


0x596f:	nop	


0x59f4:	nop	dword ptr [rax]


0x5a23:	nop	dword ptr [rax + rax]


0x5acf:	nop	


0x5c8e:	nop	


0x5cda:	nop	word ptr [rax + rax]


0x5d26:	nop	word ptr cs:[rax + rax]


0x5d65:	nop	dword ptr [rax]


0x5d6f:	nop	


0x5db7:	nop	word ptr [rax + rax]


0x5eaf:	nop	


0x5f48:	nop	dword ptr [rax + rax]


0x601e:	nop	


0x602a:	nop	word ptr [rax + rax]


0x611c:	nop	dword ptr [rax]


0x616d:	nop	dword ptr [rax]


0x6398:	nop	dword ptr [rax + rax]


0x6487:	nop	word ptr [rax + rax]


0x64be:	nop	


0x64e1:	nop	dword ptr [rax]


0x6522:	nop	word ptr [rax + rax]


0x6534:	nop	dword ptr [rax]


0x65d8:	nop	dword ptr [rax + rax]


0x6601:	nop	dword ptr [rax]


0x6617:	nop	word ptr [rax + rax]


0x662f:	nop	


0x665e:	nop	


0x666d:	nop	dword ptr [rax]


0x667f:	nop	


0x668f:	nop	


0x669f:	nop	


0x66af:	nop	


0x66bf:	nop	


0x672c:	nop	dword ptr [rax]


0x674c:	nop	dword ptr [rax]


0x675e:	nop	


0x676f:	nop	


0x6782:	nop	word ptr [rax + rax]


0x679a:	nop	word ptr [rax + rax]


0x67aa:	nop	word ptr [rax + rax]


0x684b:	nop	dword ptr [rax + rax]


0x6865:	nop	dword ptr [rax]


0x6878:	nop	dword ptr [rax + rax]


0x6893:	nop	dword ptr [rax + rax]


0x68c2:	nop	word ptr [rax + rax]


0x68d2:	nop	word ptr [rax + rax]


0x68ea:	nop	word ptr [rax + rax]


0x68fa:	nop	word ptr [rax + rax]


0x6908:	nop	dword ptr [rax + rax]


0x692f:	nop	


0x69c9:	nop	dword ptr [rax]


0x6a12:	nop	word ptr [rax + rax]


0x6a38:	nop	dword ptr [rax + rax]


0x6a51:	nop	dword ptr [rax]


0x6a72:	nop	word ptr [rax + rax]


0x6bd8:	nop	dword ptr [rax + rax]


0x6ceb:	nop	dword ptr [rax + rax]


0x6d0e:	nop	


0x6dd5:	nop	dword ptr [rax]


0x6e8d:	nop	dword ptr [rax]


0x7096:	nop	word ptr cs:[rax + rax]


0x7129:	nop	dword ptr [rax]


0x719d:	nop	dword ptr [rax]


0x727d:	nop	dword ptr [rax]


0x758b:	nop	dword ptr [rax + rax]


0x7e16:	nop	word ptr cs:[rax + rax]


0x7ea5:	nop	dword ptr [rax]


0x7ec6:	nop	word ptr cs:[rax + rax]


0x7f25:	nop	dword ptr [rax]


0x7f61:	nop	dword ptr [rax]


0x7fa8:	nop	dword ptr [rax + rax]


0x7ff7:	nop	word ptr [rax + rax]


0x8054:	nop	dword ptr [rax]


0x8082:	nop	word ptr [rax + rax]


0x8136:	nop	word ptr cs:[rax + rax]


0x8199:	nop	dword ptr [rax]


0x8412:	nop	word ptr [rax + rax]


0x8499:	nop	dword ptr [rax]


0x84c4:	nop	dword ptr [rax]


0x851d:	nop	dword ptr [rax]


0x86ed:	nop	dword ptr [rax]


0x8703:	nop	dword ptr [rax + rax]


0x87b2:	nop	word ptr [rax + rax]


0x87c4:	nop	dword ptr [rax]


0x886b:	nop	dword ptr [rax + rax]


0x889b:	nop	dword ptr [rax + rax]


0x88cc:	nop	dword ptr [rax]


0x88fa:	nop	word ptr [rax + rax]


0x8936:	nop	word ptr cs:[rax + rax]


0x896a:	nop	word ptr [rax + rax]


0x89a6:	nop	word ptr cs:[rax + rax]


0x89ec:	nop	dword ptr [rax]


0x8a3c:	nop	dword ptr [rax]


0x8a48:	nop	dword ptr [rax + rax]


0x8a7a:	nop	word ptr [rax + rax]


0x8ab2:	nop	word ptr [rax + rax]


0x8ae2:	nop	word ptr [rax + rax]


0x8b1e:	nop	


0x8b4f:	nop	


0x8b9d:	nop	dword ptr [rax]


0x8bab:	nop	dword ptr [rax + rax]


0x8bc5:	nop	dword ptr [rax]


0x8bdd:	nop	dword ptr [rax]


0x8bf2:	nop	word ptr [rax + rax]


0x8c0d:	nop	dword ptr [rax]


0x8c25:	nop	dword ptr [rax]


0x8c3d:	nop	dword ptr [rax]


0x8c55:	nop	dword ptr [rax]


0x8c6d:	nop	dword ptr [rax]


0x8c85:	nop	dword ptr [rax]


0x8d66:	nop	word ptr cs:[rax + rax]


0x8dc3:	nop	dword ptr [rax + rax]


0x8dd2:	nop	word ptr [rax + rax]


0x8e02:	nop	word ptr [rax + rax]


0x8e0c:	nop	dword ptr [rax]


0x8eab:	nop	dword ptr [rax + rax]


0x8fdc:	nop	dword ptr [rax]


0x9063:	nop	dword ptr [rax + rax]


0x91e4:	nop	dword ptr [rax]


0x9201:	nop	dword ptr [rax]


0x9212:	nop	word ptr [rax + rax]


0x926a:	nop	word ptr [rax + rax]


0x92b6:	nop	word ptr cs:[rax + rax]


0x9315:	nop	dword ptr [rax]


0x9373:	nop	dword ptr [rax + rax]


0x939f:	nop	


0x3feb:	fxch	st(1)
0x3fed:	fstp	xword ptr [rsp + 0x10]
0x3ff1:	lea	rax, [rip + 0x557e]
0x3ff8:	lea	rbp, [rsp + 0xd0]
0x4000:	sub	rsp, 8
0x4004:	mov	r8, r12
0x4007:	mov	ecx, 0x80
0x400c:	mov	edx, 1
0x4011:	push	rax
0x4012:	mov	esi, 0x7f
0x4017:	xor	eax, eax
0x4019:	mov	rdi, rbp
0x401c:	sub	rsp, 0x10
0x4020:	fld	st(0)
0x4022:	fstp	xword ptr [rsp]
0x4025:	fstp	xword ptr [rsp + 0x20]
0x4029:	call	0x19a0


